1
00:00:00,000 --> 00:00:03,149
[Music]

2
00:00:13,820 --> 00:00:21,840
[Music]

3
00:00:23,119 --> 00:00:24,080
hi everyone

4
00:00:24,080 --> 00:00:26,160
welcome to spotting the storm attack

5
00:00:26,160 --> 00:00:27,599
detection in the cloud

6
00:00:27,599 --> 00:00:31,279
um this is a repeat or an expansion of

7
00:00:31,279 --> 00:00:32,719
um some talks i've done at a couple of

8
00:00:32,719 --> 00:00:33,840
other conferences

9
00:00:33,840 --> 00:00:35,760
and we've been working on cloud attack

10
00:00:35,760 --> 00:00:36,960
detection for a while

11
00:00:36,960 --> 00:00:38,399
it's a pretty interesting topic so

12
00:00:38,399 --> 00:00:40,879
hopefully um you'll come away with some

13
00:00:40,879 --> 00:00:42,559
useful knowledge you can take either

14
00:00:42,559 --> 00:00:44,320
back into work or back into your own

15
00:00:44,320 --> 00:00:47,680
um exploration and interest so

16
00:00:47,680 --> 00:00:49,200
um what are we going to be talking about

17
00:00:49,200 --> 00:00:50,719
today first up

18
00:00:50,719 --> 00:00:53,760
um on-premises versus cloud detection

19
00:00:53,760 --> 00:00:55,199
and i'm actually going to expand that a

20
00:00:55,199 --> 00:00:57,280
little uh for this session into

21
00:00:57,280 --> 00:00:59,359
um on premises versus cloud security in

22
00:00:59,359 --> 00:01:00,879
general there's a fair bit to think

23
00:01:00,879 --> 00:01:01,760
about there

24
00:01:01,760 --> 00:01:04,239
um what attacker activity in the cloud

25
00:01:04,239 --> 00:01:05,119
actually looks like

26
00:01:05,119 --> 00:01:06,640
and that's still an area of open

27
00:01:06,640 --> 00:01:07,600
research that a lot of people are

28
00:01:07,600 --> 00:01:08,320
looking at

29
00:01:08,320 --> 00:01:10,080
um so there's a fair bit to talk about

30
00:01:10,080 --> 00:01:12,720
there and then bringing devops to

31
00:01:12,720 --> 00:01:14,320
detection and we'll get into exactly

32
00:01:14,320 --> 00:01:15,600
what that means later on

33
00:01:15,600 --> 00:01:18,000
uh but as we've moved to the cloud in

34
00:01:18,000 --> 00:01:19,200
the security space

35
00:01:19,200 --> 00:01:20,560
uh catching up with the engineering

36
00:01:20,560 --> 00:01:21,759
teams actually there's an awful lot of

37
00:01:21,759 --> 00:01:23,280
lessons to learn there i think

38
00:01:23,280 --> 00:01:25,119
and so we're going to dig into some of

39
00:01:25,119 --> 00:01:27,840
that as well

40
00:01:27,840 --> 00:01:30,159
but before we go much further um who am

41
00:01:30,159 --> 00:01:31,920
i why am i sitting here talking

42
00:01:31,920 --> 00:01:34,240
um i'm a senior security consultant

43
00:01:34,240 --> 00:01:35,040
f-secure

44
00:01:35,040 --> 00:01:37,200
um i'm the global cloud security lead i

45
00:01:37,200 --> 00:01:38,880
run the the team globally

46
00:01:38,880 --> 00:01:41,600
um that helps our clients out securing

47
00:01:41,600 --> 00:01:43,040
their cloud estates

48
00:01:43,040 --> 00:01:44,880
and we work with everything from small

49
00:01:44,880 --> 00:01:46,320
startups right the way up to

50
00:01:46,320 --> 00:01:47,680
some of the world's largest financial

51
00:01:47,680 --> 00:01:49,520
organizations

52
00:01:49,520 --> 00:01:51,520
and most of the work i do focuses in on

53
00:01:51,520 --> 00:01:52,799
three areas really

54
00:01:52,799 --> 00:01:55,040
attack detection hence the the talk here

55
00:01:55,040 --> 00:01:56,960
and cloud security at scale and what i

56
00:01:56,960 --> 00:01:58,159
mean by that is

57
00:01:58,159 --> 00:02:00,640
um not just single projects or single

58
00:02:00,640 --> 00:02:01,600
cloud accounts

59
00:02:01,600 --> 00:02:04,240
but when we're looking at an enormous

60
00:02:04,240 --> 00:02:05,439
estate full of loads of different

61
00:02:05,439 --> 00:02:07,360
workloads how do we manage that

62
00:02:07,360 --> 00:02:08,959
and the answer to that is security

63
00:02:08,959 --> 00:02:10,800
automation so that the third area is

64
00:02:10,800 --> 00:02:11,440
around

65
00:02:11,440 --> 00:02:14,319
and dev secops and security automation

66
00:02:14,319 --> 00:02:15,440
building security

67
00:02:15,440 --> 00:02:17,599
into your development processes and

68
00:02:17,599 --> 00:02:19,680
making it easy to scale that out as you

69
00:02:19,680 --> 00:02:21,840
you have to these days and those themes

70
00:02:21,840 --> 00:02:23,440
will come up quite a bit during the talk

71
00:02:23,440 --> 00:02:25,280
and they all fit together quite nicely

72
00:02:25,280 --> 00:02:26,720
and that's that's where i spend most of

73
00:02:26,720 --> 00:02:28,720
my time

74
00:02:28,720 --> 00:02:31,920
so first up on-premises versus the cloud

75
00:02:31,920 --> 00:02:32,319
and

76
00:02:32,319 --> 00:02:34,480
what what are the differences here one

77
00:02:34,480 --> 00:02:36,000
of the key things we need to think about

78
00:02:36,000 --> 00:02:37,760
there's actually quite a lot to to get

79
00:02:37,760 --> 00:02:39,360
your head around and it's always

80
00:02:39,360 --> 00:02:40,720
interesting talking to other security

81
00:02:40,720 --> 00:02:42,080
people about this who perhaps aren't

82
00:02:42,080 --> 00:02:43,519
quite as familiar with the cloud

83
00:02:43,519 --> 00:02:46,000
and because from the pen testers or

84
00:02:46,000 --> 00:02:47,920
security consultants perspective

85
00:02:47,920 --> 00:02:50,080
people doing offensive security uh you

86
00:02:50,080 --> 00:02:51,760
often hear the whole kind of there is no

87
00:02:51,760 --> 00:02:53,840
cloud it's just someone else's computer

88
00:02:53,840 --> 00:02:55,760
uh all of these kinds of things and one

89
00:02:55,760 --> 00:02:57,120
of my bosses likes to wind me up with

90
00:02:57,120 --> 00:02:58,159
that quite a lot

91
00:02:58,159 --> 00:03:01,360
but actually uh this is a bit of a lie

92
00:03:01,360 --> 00:03:03,440
really there's an awful lot to the cloud

93
00:03:03,440 --> 00:03:05,120
and it changes a lot of things

94
00:03:05,120 --> 00:03:06,480
fundamentally at the end of the day is

95
00:03:06,480 --> 00:03:07,920
obviously still just a computer and a

96
00:03:07,920 --> 00:03:09,120
data center somewhere

97
00:03:09,120 --> 00:03:10,720
a network's still a network a lot of

98
00:03:10,720 --> 00:03:12,720
these things work the way they used to

99
00:03:12,720 --> 00:03:14,800
but there are a lot of changes that it

100
00:03:14,800 --> 00:03:16,879
brings and that are really important to

101
00:03:16,879 --> 00:03:19,519
how all this works

102
00:03:19,519 --> 00:03:22,640
and from a detection perspective and one

103
00:03:22,640 --> 00:03:24,480
of the things that we often see

104
00:03:24,480 --> 00:03:26,799
with cloud migrations with our clients

105
00:03:26,799 --> 00:03:27,760
is that

106
00:03:27,760 --> 00:03:29,599
they migrate their existing detection

107
00:03:29,599 --> 00:03:30,959
technologies into the cloud

108
00:03:30,959 --> 00:03:33,599
so perhaps they've got i don't know um

109
00:03:33,599 --> 00:03:34,239
silence

110
00:03:34,239 --> 00:03:36,720
cyber reason one of these uh endpoint

111
00:03:36,720 --> 00:03:38,159
detection and response products

112
00:03:38,159 --> 00:03:39,440
they'll probably put that in any virtual

113
00:03:39,440 --> 00:03:41,280
machines they're running they might look

114
00:03:41,280 --> 00:03:43,040
to migrate some of their legacy

115
00:03:43,040 --> 00:03:45,280
uh intrusion prevention systems things

116
00:03:45,280 --> 00:03:46,959
like that into the cloud as well

117
00:03:46,959 --> 00:03:49,200
um but it misses a lot of the point

118
00:03:49,200 --> 00:03:51,040
really um and actually you will end up

119
00:03:51,040 --> 00:03:52,720
missing a lot of attacks if that is all

120
00:03:52,720 --> 00:03:53,519
that you do

121
00:03:53,519 --> 00:03:55,439
and it's also really common to see

122
00:03:55,439 --> 00:03:56,959
security operation centers try and

123
00:03:56,959 --> 00:03:58,080
translate their

124
00:03:58,080 --> 00:03:59,599
existing knowledge of what an attack

125
00:03:59,599 --> 00:04:01,680
looks like uh into the cloud without

126
00:04:01,680 --> 00:04:03,439
really doing any research or any

127
00:04:03,439 --> 00:04:05,040
personal development and building cloud

128
00:04:05,040 --> 00:04:06,080
skills in the team

129
00:04:06,080 --> 00:04:08,080
and so we'll get on to on to that in a

130
00:04:08,080 --> 00:04:09,599
while as well um

131
00:04:09,599 --> 00:04:11,360
there's quite a lot more to it than

132
00:04:11,360 --> 00:04:12,560
simply picking up your existing

133
00:04:12,560 --> 00:04:14,000
detection stack

134
00:04:14,000 --> 00:04:17,279
and putting it up in the cloud

135
00:04:18,238 --> 00:04:19,759
fundamentally quite a lot has changed

136
00:04:19,759 --> 00:04:21,199
actually when we moved to the cloud

137
00:04:21,199 --> 00:04:22,560
you've no doubt heard of things like

138
00:04:22,560 --> 00:04:24,080
kubernetes for instance

139
00:04:24,080 --> 00:04:27,120
um aws lander or azure functions

140
00:04:27,120 --> 00:04:29,360
and as we take on more of these cloud

141
00:04:29,360 --> 00:04:31,520
native technologies as people refer to

142
00:04:31,520 --> 00:04:32,000
them

143
00:04:32,000 --> 00:04:34,960
um the further away we get really from

144
00:04:34,960 --> 00:04:36,400
what we're used to dealing with

145
00:04:36,400 --> 00:04:37,520
especially once you're looking at sort

146
00:04:37,520 --> 00:04:39,600
of managed kubernetes clusters or

147
00:04:39,600 --> 00:04:41,919
serverless functions like lambda we have

148
00:04:41,919 --> 00:04:43,520
very little access to the underlying

149
00:04:43,520 --> 00:04:45,520
operating systems if we have any at all

150
00:04:45,520 --> 00:04:48,639
um our traditional detection products

151
00:04:48,639 --> 00:04:49,600
edr

152
00:04:49,600 --> 00:04:52,320
and syslog all these kinds of things may

153
00:04:52,320 --> 00:04:52,639
not

154
00:04:52,639 --> 00:04:54,080
function in these environments we may

155
00:04:54,080 --> 00:04:56,880
not be able to use them um

156
00:04:56,880 --> 00:04:59,759
it's really common to see a lot of uh

157
00:04:59,759 --> 00:05:01,520
existing detection tooling that socks

158
00:05:01,520 --> 00:05:03,440
uses having no support whatsoever for

159
00:05:03,440 --> 00:05:04,400
any of this

160
00:05:04,400 --> 00:05:06,160
um networking becomes a really

161
00:05:06,160 --> 00:05:07,759
interesting one as well

162
00:05:07,759 --> 00:05:10,479
from a on-premises perspective we know

163
00:05:10,479 --> 00:05:12,240
how networks operate we can put in

164
00:05:12,240 --> 00:05:13,840
network taps wherever we want

165
00:05:13,840 --> 00:05:16,160
we can run snort bro whatever your

166
00:05:16,160 --> 00:05:18,479
intrusion detection system of choices

167
00:05:18,479 --> 00:05:20,320
and we have a fairly solid understanding

168
00:05:20,320 --> 00:05:22,000
of how things work even at a really low

169
00:05:22,000 --> 00:05:22,479
level

170
00:05:22,479 --> 00:05:24,800
when we're looking at um layer one layer

171
00:05:24,800 --> 00:05:26,320
two protocols things like art for

172
00:05:26,320 --> 00:05:27,120
instance

173
00:05:27,120 --> 00:05:29,680
um all of that goes away with the cloud

174
00:05:29,680 --> 00:05:31,759
anything below the ip layer

175
00:05:31,759 --> 00:05:35,600
just disappears completely because the

176
00:05:35,600 --> 00:05:37,360
cloud providers have built their own

177
00:05:37,360 --> 00:05:39,280
custom software-defined networks

178
00:05:39,280 --> 00:05:41,680
uh that operate these things right so

179
00:05:41,680 --> 00:05:43,680
arp spoofing to intercept traffic for

180
00:05:43,680 --> 00:05:45,039
instance just doesn't work in the cloud

181
00:05:45,039 --> 00:05:46,720
because there is no art to spoof

182
00:05:46,720 --> 00:05:48,000
at least not at a level that you can

183
00:05:48,000 --> 00:05:50,560
interact with and when you start looking

184
00:05:50,560 --> 00:05:51,199
at

185
00:05:51,199 --> 00:05:53,199
platform as a service things and so by

186
00:05:53,199 --> 00:05:54,240
that we mean

187
00:05:54,240 --> 00:05:56,720
managed databases and serverless

188
00:05:56,720 --> 00:05:58,160
functions

189
00:05:58,160 --> 00:06:01,199
things like s3 manage storage um we

190
00:06:01,199 --> 00:06:02,880
don't have any network logging for that

191
00:06:02,880 --> 00:06:03,360
at all

192
00:06:03,360 --> 00:06:05,039
because we don't have any direct access

193
00:06:05,039 --> 00:06:06,639
to those systems they're managed by the

194
00:06:06,639 --> 00:06:08,319
cloud provider on our behalf

195
00:06:08,319 --> 00:06:10,160
and so we lose all of that visibility we

196
00:06:10,160 --> 00:06:11,440
have to get that visibility from

197
00:06:11,440 --> 00:06:13,199
different log sources instead

198
00:06:13,199 --> 00:06:15,280
and equally from an application

199
00:06:15,280 --> 00:06:16,960
vulnerability perspective

200
00:06:16,960 --> 00:06:18,800
there's a couple of really key things

201
00:06:18,800 --> 00:06:20,479
that change when you move to the cloud

202
00:06:20,479 --> 00:06:22,400
and server side request forgery

203
00:06:22,400 --> 00:06:24,240
especially in aws is a really big

204
00:06:24,240 --> 00:06:25,120
problem

205
00:06:25,120 --> 00:06:26,400
because of what's known as the instance

206
00:06:26,400 --> 00:06:28,319
metadata service if you've got

207
00:06:28,319 --> 00:06:30,400
ssrf in an application and the right

208
00:06:30,400 --> 00:06:31,840
defenses haven't been enabled in the

209
00:06:31,840 --> 00:06:32,319
cloud

210
00:06:32,319 --> 00:06:34,000
then actually you can often use that to

211
00:06:34,000 --> 00:06:35,759
gather cloud credentials to then

212
00:06:35,759 --> 00:06:37,919
authenticate yourself into aws and start

213
00:06:37,919 --> 00:06:39,360
doing all kinds of nasty things from

214
00:06:39,360 --> 00:06:39,919
there

215
00:06:39,919 --> 00:06:42,240
um equally environment variable reading

216
00:06:42,240 --> 00:06:43,759
if you get to a point where you can read

217
00:06:43,759 --> 00:06:45,039
environment variables

218
00:06:45,039 --> 00:06:46,639
inside a lambda function you can get

219
00:06:46,639 --> 00:06:48,160
credentials that way too

220
00:06:48,160 --> 00:06:51,039
um so actually there's a fair bit that's

221
00:06:51,039 --> 00:06:51,759
shifted

222
00:06:51,759 --> 00:06:53,840
and even when we look outside of the

223
00:06:53,840 --> 00:06:55,280
cloud itself directly

224
00:06:55,280 --> 00:06:59,039
uh devops you know this approach now of

225
00:06:59,039 --> 00:07:01,199
um small deployments rapidly

226
00:07:01,199 --> 00:07:02,560
cross-functional teams where you've got

227
00:07:02,560 --> 00:07:04,080
the sysadmins and the

228
00:07:04,080 --> 00:07:06,560
um developers working alongside each

229
00:07:06,560 --> 00:07:07,440
other and

230
00:07:07,440 --> 00:07:09,360
it produces a new model and a new

231
00:07:09,360 --> 00:07:11,280
paradigm for doing these kinds of

232
00:07:11,280 --> 00:07:13,919
um or building out a new software

233
00:07:13,919 --> 00:07:16,319
development lifecycle sorry i should say

234
00:07:16,319 --> 00:07:18,960
and what that brings with it is rapid

235
00:07:18,960 --> 00:07:20,240
deployments usually

236
00:07:20,240 --> 00:07:22,639
um netflix say they deploy hundreds or

237
00:07:22,639 --> 00:07:23,919
thousands of times a day

238
00:07:23,919 --> 00:07:26,639
into production amazon's safe for aws

239
00:07:26,639 --> 00:07:28,160
there's new code in production

240
00:07:28,160 --> 00:07:31,520
every 11.7 seconds on average um

241
00:07:31,520 --> 00:07:33,680
so not only does that break all of our

242
00:07:33,680 --> 00:07:34,639
old um

243
00:07:34,639 --> 00:07:35,840
sort of penetration testing and

244
00:07:35,840 --> 00:07:37,680
assurance techniques it also makes a lot

245
00:07:37,680 --> 00:07:39,360
of things really difficult

246
00:07:39,360 --> 00:07:42,479
for uh detection and response right

247
00:07:42,479 --> 00:07:44,720
um even if you're not deploying

248
00:07:44,720 --> 00:07:46,080
thousands of times a day

249
00:07:46,080 --> 00:07:47,759
if you've got teams who are doing devops

250
00:07:47,759 --> 00:07:48,720
properly they're probably still

251
00:07:48,720 --> 00:07:49,599
deploying

252
00:07:49,599 --> 00:07:50,800
i don't know somewhere between sort of

253
00:07:50,800 --> 00:07:53,440
10 20 30 times a day maybe

254
00:07:53,440 --> 00:07:55,280
um and so both from an attacker's

255
00:07:55,280 --> 00:07:56,639
perspective persisting in that

256
00:07:56,639 --> 00:07:57,599
environment

257
00:07:57,599 --> 00:07:59,759
is quite hard in the traditional sense

258
00:07:59,759 --> 00:08:01,759
you can't just drop interpreter

259
00:08:01,759 --> 00:08:03,120
and have a shell because it will

260
00:08:03,120 --> 00:08:04,879
probably go away quite quickly

261
00:08:04,879 --> 00:08:06,319
if you're running a lambda functions for

262
00:08:06,319 --> 00:08:08,319
instance each individual lambda function

263
00:08:08,319 --> 00:08:09,919
typically only lives for about 10-15

264
00:08:09,919 --> 00:08:11,120
minutes before it's killed

265
00:08:11,120 --> 00:08:12,800
if there's no further requests coming in

266
00:08:12,800 --> 00:08:14,319
for it so that persistence is quite

267
00:08:14,319 --> 00:08:15,039
short-lived

268
00:08:15,039 --> 00:08:16,560
what tends to happen is attackers move

269
00:08:16,560 --> 00:08:18,240
into the control plane i'll get onto

270
00:08:18,240 --> 00:08:19,840
what we mean by that in a second

271
00:08:19,840 --> 00:08:21,759
and equally as i said before a lot of

272
00:08:21,759 --> 00:08:23,440
your tooling probably doesn't work

273
00:08:23,440 --> 00:08:25,680
uh with a lot of these new technologies

274
00:08:25,680 --> 00:08:27,199
but actually

275
00:08:27,199 --> 00:08:28,639
if you're doing these rapid deployment

276
00:08:28,639 --> 00:08:30,240
cycles one of the most common things you

277
00:08:30,240 --> 00:08:31,520
see is what they call

278
00:08:31,520 --> 00:08:33,919
blue-green deployments where you you

279
00:08:33,919 --> 00:08:35,519
bring new versions online and as you do

280
00:08:35,519 --> 00:08:37,200
that you bring the old ones offline

281
00:08:37,200 --> 00:08:39,200
and switch the dns records over to point

282
00:08:39,200 --> 00:08:40,880
to the new ones once they're all there

283
00:08:40,880 --> 00:08:43,440
um so systems might disappear long

284
00:08:43,440 --> 00:08:45,519
before you realize there's been a breach

285
00:08:45,519 --> 00:08:47,920
so how do you do a traditional sort of

286
00:08:47,920 --> 00:08:49,440
forensics and incident response

287
00:08:49,440 --> 00:08:51,839
on systems that don't exist anymore and

288
00:08:51,839 --> 00:08:53,120
the answer to that is you have to gather

289
00:08:53,120 --> 00:08:54,560
lots and lots of logs from outside of

290
00:08:54,560 --> 00:08:55,440
them so that

291
00:08:55,440 --> 00:08:57,120
what happens in an individual lambda

292
00:08:57,120 --> 00:08:58,640
function or a container

293
00:08:58,640 --> 00:09:00,240
matters less because you can infer

294
00:09:00,240 --> 00:09:01,600
what's happened from from all the other

295
00:09:01,600 --> 00:09:04,399
data you've gathered

296
00:09:04,480 --> 00:09:06,399
and and to put some of what we're going

297
00:09:06,399 --> 00:09:07,760
to talk about as we go through this into

298
00:09:07,760 --> 00:09:08,720
context

299
00:09:08,720 --> 00:09:12,080
um you see the traditional sort of a

300
00:09:12,080 --> 00:09:14,959
attack um pyramid with script kiddies at

301
00:09:14,959 --> 00:09:16,560
the bottom and nation states right the

302
00:09:16,560 --> 00:09:17,680
way up the top somewhere

303
00:09:17,680 --> 00:09:19,600
um i don't like to think of it like that

304
00:09:19,600 --> 00:09:20,720
and the reason for that is

305
00:09:20,720 --> 00:09:23,920
that um you can have very

306
00:09:23,920 --> 00:09:25,600
specific individuals who are very

307
00:09:25,600 --> 00:09:27,519
capable things like the phineas fisher

308
00:09:27,519 --> 00:09:29,360
breaches at nasa are a great example

309
00:09:29,360 --> 00:09:32,399
one very motivated individual um coming

310
00:09:32,399 --> 00:09:34,000
up with some some relatively novel zero

311
00:09:34,000 --> 00:09:37,120
days to break into nasa's network um

312
00:09:37,120 --> 00:09:38,800
so instead i think about it this way we

313
00:09:38,800 --> 00:09:40,560
have automated scanning and exploitation

314
00:09:40,560 --> 00:09:41,440
at the bottom

315
00:09:41,440 --> 00:09:44,080
think sort of spamming um meta sport

316
00:09:44,080 --> 00:09:45,839
exploits or sql map against lots and

317
00:09:45,839 --> 00:09:46,880
lots of sites

318
00:09:46,880 --> 00:09:48,800
and then the next one up you have

319
00:09:48,800 --> 00:09:50,720
opportunistic exploitation which is

320
00:09:50,720 --> 00:09:51,200
where

321
00:09:51,200 --> 00:09:52,880
there's some publicly available tooling

322
00:09:52,880 --> 00:09:54,560
maybe and it needs a little bit more

323
00:09:54,560 --> 00:09:55,680
human input but

324
00:09:55,680 --> 00:09:56,880
people are essentially hunting around to

325
00:09:56,880 --> 00:09:58,240
see what they can find and if there's

326
00:09:58,240 --> 00:09:59,279
something there then they'll

327
00:09:59,279 --> 00:10:01,200
they'll have a go at it and then at the

328
00:10:01,200 --> 00:10:03,040
targeted attack level we're talking

329
00:10:03,040 --> 00:10:05,839
sort of either oh days or bespoke

330
00:10:05,839 --> 00:10:06,720
human-led

331
00:10:06,720 --> 00:10:10,079
um exploitation attempts um

332
00:10:10,079 --> 00:10:13,839
it's being driven and targeted by

333
00:10:13,839 --> 00:10:15,839
humans it's probably more persistent you

334
00:10:15,839 --> 00:10:17,040
know if they don't get in the first try

335
00:10:17,040 --> 00:10:18,720
they're likely to try more often

336
00:10:18,720 --> 00:10:21,440
and and when we're talking about that

337
00:10:21,440 --> 00:10:23,040
from a detection perspective

338
00:10:23,040 --> 00:10:24,320
and the automated scanning and

339
00:10:24,320 --> 00:10:25,600
exploitation funnily enough you can

340
00:10:25,600 --> 00:10:27,680
mostly detect in an automated fashion

341
00:10:27,680 --> 00:10:29,519
quite frequently and that sort of

342
00:10:29,519 --> 00:10:31,760
opportunistic exploitation piece there

343
00:10:31,760 --> 00:10:33,680
and if you've got a security operation

344
00:10:33,680 --> 00:10:35,040
center with a team of people who know

345
00:10:35,040 --> 00:10:35,839
how to run it

346
00:10:35,839 --> 00:10:37,519
they've got some decent detections and a

347
00:10:37,519 --> 00:10:38,959
decent technology stack

348
00:10:38,959 --> 00:10:40,560
and some processes as to how to deal

349
00:10:40,560 --> 00:10:42,320
with whatever comes around that will

350
00:10:42,320 --> 00:10:43,600
catch an awful lot of that

351
00:10:43,600 --> 00:10:45,040
um you know so long as you keep up to

352
00:10:45,040 --> 00:10:46,000
date with what's happening in the

353
00:10:46,000 --> 00:10:46,720
industry

354
00:10:46,720 --> 00:10:48,880
and what new uh techniques and things

355
00:10:48,880 --> 00:10:51,279
are coming out then actually your

356
00:10:51,279 --> 00:10:53,120
existing processes and things can can

357
00:10:53,120 --> 00:10:54,560
handle that for the most part

358
00:10:54,560 --> 00:10:56,240
and then at the top when we get into

359
00:10:56,240 --> 00:10:57,680
that targeted attack space

360
00:10:57,680 --> 00:10:59,440
we're talking more about proactive

361
00:10:59,440 --> 00:11:01,120
threat hunting and investigations being

362
00:11:01,120 --> 00:11:02,240
performed by

363
00:11:02,240 --> 00:11:03,600
quite skilled individuals who really

364
00:11:03,600 --> 00:11:05,040
know what they're doing and you know

365
00:11:05,040 --> 00:11:06,640
human investigation

366
00:11:06,640 --> 00:11:08,480
deliberately designed to catch things

367
00:11:08,480 --> 00:11:10,160
the automated detections

368
00:11:10,160 --> 00:11:11,839
and uh the standard run books and

369
00:11:11,839 --> 00:11:13,200
processes won't

370
00:11:13,200 --> 00:11:16,320
um and so the further up

371
00:11:16,320 --> 00:11:19,040
that pyramid you get the greater the

372
00:11:19,040 --> 00:11:21,279
attacker sophistication and likely the

373
00:11:21,279 --> 00:11:24,320
the motivation and the persistence to

374
00:11:24,320 --> 00:11:25,120
try and get in

375
00:11:25,120 --> 00:11:27,040
is going to be but also the investment

376
00:11:27,040 --> 00:11:28,640
required to defeat those attacks gets

377
00:11:28,640 --> 00:11:30,160
higher the further up we go

378
00:11:30,160 --> 00:11:31,680
now most this talks going to be aimed

379
00:11:31,680 --> 00:11:34,320
more at um that bid in between

380
00:11:34,320 --> 00:11:36,560
opportunistic exploitation and targeted

381
00:11:36,560 --> 00:11:38,399
attack so the top end of opportunistic

382
00:11:38,399 --> 00:11:40,000
and the bottom end are targeted

383
00:11:40,000 --> 00:11:41,600
and because that to me is where it gets

384
00:11:41,600 --> 00:11:42,720
interesting and where a lot of

385
00:11:42,720 --> 00:11:43,760
organizations

386
00:11:43,760 --> 00:11:45,519
stand a chance of having the resources

387
00:11:45,519 --> 00:11:47,839
to do something about it um

388
00:11:47,839 --> 00:11:51,040
so that's where i tend to work

389
00:11:51,600 --> 00:11:53,120
so then when we dig into actually what

390
00:11:53,120 --> 00:11:54,880
detection looks like um obviously

391
00:11:54,880 --> 00:11:55,440
there's

392
00:11:55,440 --> 00:11:57,600
people processes and technology involved

393
00:11:57,600 --> 00:11:58,880
and when we're talking about

394
00:11:58,880 --> 00:12:01,200
the technology side of things um

395
00:12:01,200 --> 00:12:03,360
telemetry or log data or whatever you

396
00:12:03,360 --> 00:12:04,320
want to call it is the

397
00:12:04,320 --> 00:12:05,760
the key thing we need to gather enough

398
00:12:05,760 --> 00:12:07,680
information that we can spot attacks

399
00:12:07,680 --> 00:12:09,839
when they're

400
00:12:09,839 --> 00:12:13,920
so sorry uh in the on-premises world we

401
00:12:13,920 --> 00:12:14,240
have

402
00:12:14,240 --> 00:12:16,480
typically three things that really are

403
00:12:16,480 --> 00:12:17,839
the important

404
00:12:17,839 --> 00:12:19,519
data together you have endpoint

405
00:12:19,519 --> 00:12:21,519
telemetry so this is what's happening on

406
00:12:21,519 --> 00:12:23,360
a user's laptop or on a server

407
00:12:23,360 --> 00:12:24,639
and we're talking about endpoint

408
00:12:24,639 --> 00:12:26,800
detection response syslog windows event

409
00:12:26,800 --> 00:12:28,639
log these kinds of data sources

410
00:12:28,639 --> 00:12:30,720
network telemetry what traffic is

411
00:12:30,720 --> 00:12:32,480
traversing your network from where to

412
00:12:32,480 --> 00:12:32,959
where

413
00:12:32,959 --> 00:12:34,800
what does that look like an application

414
00:12:34,800 --> 00:12:36,639
telemetry is

415
00:12:36,639 --> 00:12:38,079
i'm going to include things like active

416
00:12:38,079 --> 00:12:39,440
directory in there but also any

417
00:12:39,440 --> 00:12:40,639
applications you're running

418
00:12:40,639 --> 00:12:43,200
whatever data you can get out of those

419
00:12:43,200 --> 00:12:44,000
in the cloud

420
00:12:44,000 --> 00:12:45,360
you still have all of those to some

421
00:12:45,360 --> 00:12:46,959
degree exactly what that looks like

422
00:12:46,959 --> 00:12:48,959
varies depending on your cloud provider

423
00:12:48,959 --> 00:12:50,800
and what services you're using obviously

424
00:12:50,800 --> 00:12:52,079
most providers have

425
00:12:52,079 --> 00:12:54,000
a very wide range of different services

426
00:12:54,000 --> 00:12:55,279
that you can select from

427
00:12:55,279 --> 00:12:57,040
but the the key thing really that is

428
00:12:57,040 --> 00:12:58,320
more important in the cloud than

429
00:12:58,320 --> 00:13:01,360
any of those really is what we've taken

430
00:13:01,360 --> 00:13:03,279
calling control plane telemetry

431
00:13:03,279 --> 00:13:05,279
so when i say control plane what i mean

432
00:13:05,279 --> 00:13:07,839
is the apis that you interact with

433
00:13:07,839 --> 00:13:10,639
to create and delete resources deploy

434
00:13:10,639 --> 00:13:12,639
virtual machines reconfigure things

435
00:13:12,639 --> 00:13:13,839
and you know when you're clicking around

436
00:13:13,839 --> 00:13:16,240
in the aws console or the azure portal

437
00:13:16,240 --> 00:13:17,680
and this is what you're interacting with

438
00:13:17,680 --> 00:13:18,800
you're interacting with the control

439
00:13:18,800 --> 00:13:19,360
plane

440
00:13:19,360 --> 00:13:22,160
and each provider offers a log source

441
00:13:22,160 --> 00:13:23,600
tied to that control plane

442
00:13:23,600 --> 00:13:26,000
that you can get information out about

443
00:13:26,000 --> 00:13:27,519
who did what where and when

444
00:13:27,519 --> 00:13:29,200
and that really is the important thing

445
00:13:29,200 --> 00:13:31,200
in the cloud if you've only got one data

446
00:13:31,200 --> 00:13:32,560
source to work within the cloud

447
00:13:32,560 --> 00:13:35,839
make it your control plane

448
00:13:36,079 --> 00:13:37,440
but not only do we have that new

449
00:13:37,440 --> 00:13:39,519
technology to grapple with

450
00:13:39,519 --> 00:13:41,120
we also know roughly what attacks on

451
00:13:41,120 --> 00:13:42,320
premises look like everyone's got

452
00:13:42,320 --> 00:13:43,760
windows networks attackers have been

453
00:13:43,760 --> 00:13:44,880
targeting them in

454
00:13:44,880 --> 00:13:47,279
similar ways for a very long time now

455
00:13:47,279 --> 00:13:48,959
new techniques come out all the time

456
00:13:48,959 --> 00:13:50,560
but broadly speaking people are doing

457
00:13:50,560 --> 00:13:52,320
the same kinds of stuff we're still

458
00:13:52,320 --> 00:13:53,839
working out for the cloud really what

459
00:13:53,839 --> 00:13:55,360
does an attacker do in aws

460
00:13:55,360 --> 00:13:57,040
we have some good ideas you got things

461
00:13:57,040 --> 00:13:58,480
like the capital one breach which

462
00:13:58,480 --> 00:14:00,000
uh you know is a bit of a running joke

463
00:14:00,000 --> 00:14:01,680
in security conference talks these days

464
00:14:01,680 --> 00:14:02,240
because

465
00:14:02,240 --> 00:14:03,920
everyone who talks about aws talks about

466
00:14:03,920 --> 00:14:05,360
capital one the poor guys

467
00:14:05,360 --> 00:14:06,959
but it gives us an idea as to what

468
00:14:06,959 --> 00:14:08,720
happens and there's a few others that we

469
00:14:08,720 --> 00:14:10,079
can we can reference as well

470
00:14:10,079 --> 00:14:11,920
but broadly speaking the available

471
00:14:11,920 --> 00:14:13,360
knowledge on what that looks like is

472
00:14:13,360 --> 00:14:14,240
much thinner

473
00:14:14,240 --> 00:14:16,079
i'll get on to how we deal with that um

474
00:14:16,079 --> 00:14:17,279
a bit later on

475
00:14:17,279 --> 00:14:19,120
that's then compounded by the fact that

476
00:14:19,120 --> 00:14:20,399
actually when we look at

477
00:14:20,399 --> 00:14:21,920
an enterprise and what they're doing in

478
00:14:21,920 --> 00:14:23,839
the cloud they're probably not just

479
00:14:23,839 --> 00:14:26,079
using aws or just using azure

480
00:14:26,079 --> 00:14:27,600
i think every client i've ever worked

481
00:14:27,600 --> 00:14:29,120
with says they're in

482
00:14:29,120 --> 00:14:31,680
aws or they're in azure and you talk to

483
00:14:31,680 --> 00:14:33,040
the engineers and someone at the back of

484
00:14:33,040 --> 00:14:34,160
the room will stick their hand up and

485
00:14:34,160 --> 00:14:35,199
say oh well

486
00:14:35,199 --> 00:14:36,399
actually there's a little bit of this

487
00:14:36,399 --> 00:14:38,320
other cloud provider living over there

488
00:14:38,320 --> 00:14:40,079
uh the usual culprit for that is google

489
00:14:40,079 --> 00:14:41,199
cloud because everyone likes their

490
00:14:41,199 --> 00:14:42,320
kubernetes

491
00:14:42,320 --> 00:14:44,240
but it's really common to see companies

492
00:14:44,240 --> 00:14:45,760
working with at least two if not all

493
00:14:45,760 --> 00:14:47,600
three of the big cloud providers

494
00:14:47,600 --> 00:14:49,760
you then expand that with github for

495
00:14:49,760 --> 00:14:50,800
your source code

496
00:14:50,800 --> 00:14:52,639
with docker hub that you're pulling your

497
00:14:52,639 --> 00:14:53,920
images down from

498
00:14:53,920 --> 00:14:55,600
some manage continuous integration and

499
00:14:55,600 --> 00:14:58,000
deployment your office 365

500
00:14:58,000 --> 00:15:00,880
your slack your twitter your managed

501
00:15:00,880 --> 00:15:02,720
services like mongodb for instance

502
00:15:02,720 --> 00:15:03,839
mongodb atlas

503
00:15:03,839 --> 00:15:06,160
you can pay them to run your databases

504
00:15:06,160 --> 00:15:07,199
you end up with a

505
00:15:07,199 --> 00:15:09,680
huge breadth of technology all of which

506
00:15:09,680 --> 00:15:11,680
has its own types of log sources

507
00:15:11,680 --> 00:15:13,199
its own things that an attacker is

508
00:15:13,199 --> 00:15:15,040
likely to try and do with it so actually

509
00:15:15,040 --> 00:15:16,720
covering all that is really hard and

510
00:15:16,720 --> 00:15:18,240
prioritizing effectively

511
00:15:18,240 --> 00:15:19,519
and is one of the critical things to

512
00:15:19,519 --> 00:15:22,800
getting cloud detection right

513
00:15:22,800 --> 00:15:25,600
and in terms of what we even look for

514
00:15:25,600 --> 00:15:26,000
and

515
00:15:26,000 --> 00:15:27,360
what logs do we look at and what do we

516
00:15:27,360 --> 00:15:29,120
look for in them and

517
00:15:29,120 --> 00:15:30,399
the closer you get to the software end

518
00:15:30,399 --> 00:15:31,920
of the server the software is a service

519
00:15:31,920 --> 00:15:32,720
end of things so

520
00:15:32,720 --> 00:15:35,839
office 365 and slack these kinds of

521
00:15:35,839 --> 00:15:36,560
things

522
00:15:36,560 --> 00:15:39,920
the less information we have um and the

523
00:15:39,920 --> 00:15:41,360
the more there is to think about in many

524
00:15:41,360 --> 00:15:42,079
ways

525
00:15:42,079 --> 00:15:43,839
and so at the infrastructure as a

526
00:15:43,839 --> 00:15:45,600
service end of things this is running

527
00:15:45,600 --> 00:15:47,279
virtual machines and networks in the

528
00:15:47,279 --> 00:15:47,920
cloud

529
00:15:47,920 --> 00:15:51,040
um ec2 for instance in aws uh

530
00:15:51,040 --> 00:15:52,720
here we can still deploy our endpoint

531
00:15:52,720 --> 00:15:54,079
detection and response products that we

532
00:15:54,079 --> 00:15:55,279
used on premises

533
00:15:55,279 --> 00:15:58,240
and we can get our vpc flow logs and

534
00:15:58,240 --> 00:15:59,120
you've got the

535
00:15:59,120 --> 00:16:00,880
control plane level logs cloud trail for

536
00:16:00,880 --> 00:16:03,360
aws we've got some ideas to what to look

537
00:16:03,360 --> 00:16:05,600
for there

538
00:16:05,600 --> 00:16:08,880
platform as a service and there is still

539
00:16:08,880 --> 00:16:09,279
some

540
00:16:09,279 --> 00:16:11,519
some fairly uh open information about

541
00:16:11,519 --> 00:16:12,480
what to look for there

542
00:16:12,480 --> 00:16:15,600
what logs we can get and for aws um

543
00:16:15,600 --> 00:16:18,639
you've got object level data events um

544
00:16:18,639 --> 00:16:20,720
or lambda execution logs or various

545
00:16:20,720 --> 00:16:22,160
service specific things which i'll get

546
00:16:22,160 --> 00:16:23,440
onto again in a moment

547
00:16:23,440 --> 00:16:25,040
um we have an idea as to what that

548
00:16:25,040 --> 00:16:26,480
looked like less so than

549
00:16:26,480 --> 00:16:28,240
the infrastructure as a service because

550
00:16:28,240 --> 00:16:29,360
we're moving further away from

551
00:16:29,360 --> 00:16:30,240
on-premises

552
00:16:30,240 --> 00:16:32,079
but there's still some ideas there when

553
00:16:32,079 --> 00:16:33,360
it comes to software as a service and

554
00:16:33,360 --> 00:16:34,959
you're looking at your github logs or

555
00:16:34,959 --> 00:16:37,519
circle ci or office 365 or

556
00:16:37,519 --> 00:16:39,440
and we have a little bit of an idea but

557
00:16:39,440 --> 00:16:40,800
we're mostly working it out as we go

558
00:16:40,800 --> 00:16:41,839
along with our clients

559
00:16:41,839 --> 00:16:43,920
and i think that's probably true for a

560
00:16:43,920 --> 00:16:45,440
lot of organizations

561
00:16:45,440 --> 00:16:46,639
the log sources themselves are

562
00:16:46,639 --> 00:16:48,079
documented but what an attacker is

563
00:16:48,079 --> 00:16:49,839
likely to do and what that looks like

564
00:16:49,839 --> 00:16:51,440
and tends to be something that we have

565
00:16:51,440 --> 00:16:52,160
to work out

566
00:16:52,160 --> 00:16:53,920
and for each new software as a service

567
00:16:53,920 --> 00:16:55,519
product as it comes along

568
00:16:55,519 --> 00:16:56,880
and you then have to tweak that for each

569
00:16:56,880 --> 00:16:59,360
client that's using it

570
00:16:59,360 --> 00:17:01,519
there's also then a mindset shift to

571
00:17:01,519 --> 00:17:03,759
deal with we're no longer thinking about

572
00:17:03,759 --> 00:17:04,480
uh

573
00:17:04,480 --> 00:17:06,720
exploits you know eternal blue doesn't

574
00:17:06,720 --> 00:17:08,160
really have a cloud equivalent

575
00:17:08,160 --> 00:17:11,199
it's rare that we find um remote code

576
00:17:11,199 --> 00:17:13,039
execution at the control plane layer in

577
00:17:13,039 --> 00:17:13,919
the cloud

578
00:17:13,919 --> 00:17:16,959
and and we also then don't really have

579
00:17:16,959 --> 00:17:18,880
a an obvious equivalent so things like

580
00:17:18,880 --> 00:17:20,640
mimikats it's hard to

581
00:17:20,640 --> 00:17:22,959
signature known bad cloud activity

582
00:17:22,959 --> 00:17:23,679
because

583
00:17:23,679 --> 00:17:27,199
most activity in the cloud 1995 of it

584
00:17:27,199 --> 00:17:28,720
uh when you're looking at the control

585
00:17:28,720 --> 00:17:30,559
plane layer is all about

586
00:17:30,559 --> 00:17:32,720
using the aws or the azure provided

587
00:17:32,720 --> 00:17:34,720
features to interact with things

588
00:17:34,720 --> 00:17:38,320
so i make requests to the aws api to

589
00:17:38,320 --> 00:17:41,520
backdoor a user or to change the network

590
00:17:41,520 --> 00:17:43,280
configurations that i can get some

591
00:17:43,280 --> 00:17:45,600
data exfiltrated i'm doing all of that

592
00:17:45,600 --> 00:17:47,440
with legitimate functionality provided

593
00:17:47,440 --> 00:17:48,000
by the

594
00:17:48,000 --> 00:17:50,160
the cloud providers just in a way that

595
00:17:50,160 --> 00:17:53,280
the user of the cloud didn't intend

596
00:17:53,280 --> 00:17:56,000
so we can't just kind of rely on known

597
00:17:56,000 --> 00:17:57,120
bad as we used to

598
00:17:57,120 --> 00:18:00,160
it becomes more about what is

599
00:18:00,160 --> 00:18:02,240
known good in an environment and

600
00:18:02,240 --> 00:18:04,480
therefore what is likely to not be known

601
00:18:04,480 --> 00:18:05,039
good

602
00:18:05,039 --> 00:18:06,799
um and we that we might be able to infer

603
00:18:06,799 --> 00:18:09,840
from and so context really is key here

604
00:18:09,840 --> 00:18:12,799
so let's say we've got a user account

605
00:18:12,799 --> 00:18:13,760
running in aws

606
00:18:13,760 --> 00:18:16,480
and i am user and some new access keys

607
00:18:16,480 --> 00:18:18,400
get generated for it

608
00:18:18,400 --> 00:18:20,559
if that change was made by our

609
00:18:20,559 --> 00:18:22,240
continuous integration deployment system

610
00:18:22,240 --> 00:18:23,840
the way we usually make changes

611
00:18:23,840 --> 00:18:26,160
then that's probably fine but equally if

612
00:18:26,160 --> 00:18:27,440
that change was made by an

613
00:18:27,440 --> 00:18:29,120
administrative user who's logged in from

614
00:18:29,120 --> 00:18:30,400
an unusual location

615
00:18:30,400 --> 00:18:32,720
let's say china for the sake of argument

616
00:18:32,720 --> 00:18:34,000
that's probably not good

617
00:18:34,000 --> 00:18:35,679
and we need to investigate that the

618
00:18:35,679 --> 00:18:37,120
change buying of itself

619
00:18:37,120 --> 00:18:39,679
or the action isn't obviously malicious

620
00:18:39,679 --> 00:18:40,960
or not malicious

621
00:18:40,960 --> 00:18:43,600
but we can infer from how it was done

622
00:18:43,600 --> 00:18:44,720
whether or not it's likely to be

623
00:18:44,720 --> 00:18:47,919
something that we need to investigate

624
00:18:48,720 --> 00:18:50,960
so when it comes to all this log data

625
00:18:50,960 --> 00:18:51,919
what do we need

626
00:18:51,919 --> 00:18:54,400
how do we do it sensibly um you know

627
00:18:54,400 --> 00:18:55,919
there's an awful lot to think about here

628
00:18:55,919 --> 00:18:57,440
so i'm going to summarize at least at a

629
00:18:57,440 --> 00:18:58,240
high level

630
00:18:58,240 --> 00:19:00,400
um some key things to think about for

631
00:19:00,400 --> 00:19:02,799
you and so first off

632
00:19:02,799 --> 00:19:04,799
centralize everything you know as i say

633
00:19:04,799 --> 00:19:06,080
most companies

634
00:19:06,080 --> 00:19:09,039
operate with multiple cloud providers a

635
00:19:09,039 --> 00:19:10,480
bunch of different software as a service

636
00:19:10,480 --> 00:19:11,440
platforms

637
00:19:11,440 --> 00:19:13,360
and the key thing here isn't necessarily

638
00:19:13,360 --> 00:19:15,360
to dump everything into the

639
00:19:15,360 --> 00:19:16,960
single pane of glass as well as the

640
00:19:16,960 --> 00:19:18,400
industry buzzword goes

641
00:19:18,400 --> 00:19:21,200
um but to make it so that the analysts

642
00:19:21,200 --> 00:19:23,039
who are working on this data

643
00:19:23,039 --> 00:19:25,760
are easily able to pivot between one

644
00:19:25,760 --> 00:19:26,960
data source and another

645
00:19:26,960 --> 00:19:28,320
and be able to cross-reference things

646
00:19:28,320 --> 00:19:30,240
that happen because it's quite common

647
00:19:30,240 --> 00:19:32,559
for instance for you to see

648
00:19:32,559 --> 00:19:35,600
changes made into a set of source code

649
00:19:35,600 --> 00:19:38,960
being deployed into the cloud um and

650
00:19:38,960 --> 00:19:40,160
you might want to be able to follow

651
00:19:40,160 --> 00:19:41,760
those logs all the way through from your

652
00:19:41,760 --> 00:19:43,360
source code management system

653
00:19:43,360 --> 00:19:46,240
to your ci cd and into the cloud or in

654
00:19:46,240 --> 00:19:47,600
the case of solarwinds

655
00:19:47,600 --> 00:19:50,559
um they had a breach that got to the

656
00:19:50,559 --> 00:19:52,160
point where an attacker had the saml

657
00:19:52,160 --> 00:19:53,360
signing certificates

658
00:19:53,360 --> 00:19:56,080
which is how you certify who you are and

659
00:19:56,080 --> 00:19:58,160
when you're using saml single sign-on

660
00:19:58,160 --> 00:19:59,760
um they were able to sign their own

661
00:19:59,760 --> 00:20:01,679
requests with those and authenticate

662
00:20:01,679 --> 00:20:02,720
into the cloud

663
00:20:02,720 --> 00:20:04,240
but you can then detect that that's

664
00:20:04,240 --> 00:20:05,600
happened by looking at your

665
00:20:05,600 --> 00:20:06,720
authentication logs

666
00:20:06,720 --> 00:20:08,400
in active directory or whatever you're

667
00:20:08,400 --> 00:20:11,679
using as your saml provider

668
00:20:11,679 --> 00:20:13,600
and correlate that with successful

669
00:20:13,600 --> 00:20:15,120
authentications into the cloud

670
00:20:15,120 --> 00:20:16,880
and if someone hasn't authenticated to

671
00:20:16,880 --> 00:20:18,720
the identity provider before they turn

672
00:20:18,720 --> 00:20:19,600
up into the cloud

673
00:20:19,600 --> 00:20:21,200
then you can detect that exploitation

674
00:20:21,200 --> 00:20:22,799
has been done there by looking at those

675
00:20:22,799 --> 00:20:23,760
two log sources

676
00:20:23,760 --> 00:20:25,840
so being able to pivot back and forth is

677
00:20:25,840 --> 00:20:28,320
really important

678
00:20:28,320 --> 00:20:30,159
now data sources i've mentioned a few

679
00:20:30,159 --> 00:20:32,320
already um the two key ones we're going

680
00:20:32,320 --> 00:20:33,039
to talk about

681
00:20:33,039 --> 00:20:35,919
are control plane audit logs um i

682
00:20:35,919 --> 00:20:37,039
mentioned those already we'll go into

683
00:20:37,039 --> 00:20:38,880
detail again in a second and

684
00:20:38,880 --> 00:20:40,559
service specific logs there's a whole

685
00:20:40,559 --> 00:20:41,919
bunch of other ones you can get

686
00:20:41,919 --> 00:20:44,000
and cloud native detection services like

687
00:20:44,000 --> 00:20:45,600
aws guard duty

688
00:20:45,600 --> 00:20:47,919
and usually worth looking into turn them

689
00:20:47,919 --> 00:20:49,039
on um

690
00:20:49,039 --> 00:20:50,960
get the data out of them it's probably

691
00:20:50,960 --> 00:20:51,919
not going to catch anything too

692
00:20:51,919 --> 00:20:53,120
sophisticated though

693
00:20:53,120 --> 00:20:55,520
and then the rest are log sources you'll

694
00:20:55,520 --> 00:20:57,760
have seen equivalence of on-premises so

695
00:20:57,760 --> 00:21:00,320
um your network flow logs your syslogs

696
00:21:00,320 --> 00:21:02,240
out of your your virtual machines

697
00:21:02,240 --> 00:21:04,960
uh all of these kinds of things have uh

698
00:21:04,960 --> 00:21:06,559
equivalence on premise

699
00:21:06,559 --> 00:21:08,159
that people are mostly used to working

700
00:21:08,159 --> 00:21:11,039
with so control plane audit logs

701
00:21:11,039 --> 00:21:13,840
you've got cloudtrail in aws audit log

702
00:21:13,840 --> 00:21:15,200
in azure and gcp

703
00:21:15,200 --> 00:21:16,960
kubernetes clusters also have an audit

704
00:21:16,960 --> 00:21:18,640
log too well worth looking at that as

705
00:21:18,640 --> 00:21:19,200
well

706
00:21:19,200 --> 00:21:21,760
um and the key thing here why you should

707
00:21:21,760 --> 00:21:23,520
have these and why i say these are the

708
00:21:23,520 --> 00:21:25,520
most important log source to have

709
00:21:25,520 --> 00:21:28,559
are that they are the key data source

710
00:21:28,559 --> 00:21:30,480
for any activity in your cloud

711
00:21:30,480 --> 00:21:32,000
that's happening at the administrative

712
00:21:32,000 --> 00:21:34,080
layer where things are being created

713
00:21:34,080 --> 00:21:35,360
destroyed modified

714
00:21:35,360 --> 00:21:38,720
and this is what that log will give you

715
00:21:38,720 --> 00:21:40,880
and i say they log almost every control

716
00:21:40,880 --> 00:21:42,480
plane level event because over time

717
00:21:42,480 --> 00:21:44,240
we've found various cases where

718
00:21:44,240 --> 00:21:47,039
the providers have forgotten to to log a

719
00:21:47,039 --> 00:21:48,720
specific api call or something

720
00:21:48,720 --> 00:21:50,799
but they're fairly few and far between

721
00:21:50,799 --> 00:21:52,480
and in many ways this gives you far

722
00:21:52,480 --> 00:21:54,000
better visibility into your cloud than

723
00:21:54,000 --> 00:21:55,919
we've ever had in on-premises networks

724
00:21:55,919 --> 00:21:57,520
because you can deploy these for

725
00:21:57,520 --> 00:21:59,600
instance cloud trail across an entire

726
00:21:59,600 --> 00:22:01,520
aws organization at once

727
00:22:01,520 --> 00:22:04,000
um and that's a level of visibility

728
00:22:04,000 --> 00:22:05,200
that's pretty much unheard of on

729
00:22:05,200 --> 00:22:05,840
premises

730
00:22:05,840 --> 00:22:07,600
you always get a few systems that get

731
00:22:07,600 --> 00:22:09,120
missed so this is

732
00:22:09,120 --> 00:22:11,280
really awesome for me um and you can do

733
00:22:11,280 --> 00:22:12,960
an awful lot just with that one data

734
00:22:12,960 --> 00:22:15,280
source

735
00:22:15,280 --> 00:22:16,559
then when i say service specific

736
00:22:16,559 --> 00:22:19,520
telemetry this is things like um

737
00:22:19,520 --> 00:22:21,280
who's using what cryptographic

738
00:22:21,280 --> 00:22:22,559
encryption keys out of your key

739
00:22:22,559 --> 00:22:23,679
management system

740
00:22:23,679 --> 00:22:25,679
who's invoking what lambda functions

741
00:22:25,679 --> 00:22:27,679
where and when who's accessing what

742
00:22:27,679 --> 00:22:28,960
files in s3

743
00:22:28,960 --> 00:22:31,120
you know if you've got a public s3

744
00:22:31,120 --> 00:22:32,320
bucket by accident

745
00:22:32,320 --> 00:22:33,760
this is the data source that will give

746
00:22:33,760 --> 00:22:36,320
you uh those logs and that will tell you

747
00:22:36,320 --> 00:22:38,320
who accessed what in your s3 buckets

748
00:22:38,320 --> 00:22:41,039
and the thing here though is you can't

749
00:22:41,039 --> 00:22:42,240
really just turn them on

750
00:22:42,240 --> 00:22:44,640
everywhere all the time and you tend to

751
00:22:44,640 --> 00:22:46,159
drown yourselves in logs doing that and

752
00:22:46,159 --> 00:22:47,039
a lot of the time

753
00:22:47,039 --> 00:22:48,400
the data you're getting won't be that

754
00:22:48,400 --> 00:22:51,039
useful so what we typically recommend is

755
00:22:51,039 --> 00:22:52,240
that you look at

756
00:22:52,240 --> 00:22:55,200
what each type of service is doing for

757
00:22:55,200 --> 00:22:55,760
you

758
00:22:55,760 --> 00:22:57,760
or in the case of s3 for instance what

759
00:22:57,760 --> 00:22:59,360
each individual bucket is doing

760
00:22:59,360 --> 00:23:02,880
what data stored in it um and from there

761
00:23:02,880 --> 00:23:05,919
dig into and investigate exactly

762
00:23:05,919 --> 00:23:07,840
what the value in that data for you is

763
00:23:07,840 --> 00:23:09,360
if you've got an s3 bucket that's full

764
00:23:09,360 --> 00:23:10,159
of people's

765
00:23:10,159 --> 00:23:13,039
uh bank statements for instance that's

766
00:23:13,039 --> 00:23:14,320
probably worth having the service

767
00:23:14,320 --> 00:23:15,840
specific logs turned on for

768
00:23:15,840 --> 00:23:18,559
so that you can see who is reading what

769
00:23:18,559 --> 00:23:19,200
logs

770
00:23:19,200 --> 00:23:21,919
sorry what um statements out of it when

771
00:23:21,919 --> 00:23:23,440
on the other hand if all it's doing

772
00:23:23,440 --> 00:23:27,520
is serving uh static files javascript

773
00:23:27,520 --> 00:23:29,200
images and things for your websites you

774
00:23:29,200 --> 00:23:31,360
probably don't care about

775
00:23:31,360 --> 00:23:32,799
read events because they're going to

776
00:23:32,799 --> 00:23:33,679
happen all the time and that's

777
00:23:33,679 --> 00:23:34,640
legitimate

778
00:23:34,640 --> 00:23:35,919
what you probably do care about though

779
00:23:35,919 --> 00:23:38,640
is keeping track of who's writing to it

780
00:23:38,640 --> 00:23:40,320
and so that you can spot website

781
00:23:40,320 --> 00:23:42,480
defacements and people trying like major

782
00:23:42,480 --> 00:23:43,440
cart style

783
00:23:43,440 --> 00:23:45,760
uh attacks where you're intercepting um

784
00:23:45,760 --> 00:23:47,360
modifying the javascript rather to

785
00:23:47,360 --> 00:23:49,520
intercept uh credit card details

786
00:23:49,520 --> 00:23:52,080
um so you probably care about read event

787
00:23:52,080 --> 00:23:53,360
sorry you probably care about right

788
00:23:53,360 --> 00:23:54,880
events but you don't care about read

789
00:23:54,880 --> 00:23:55,919
events

790
00:23:55,919 --> 00:23:57,440
have a think about these individually

791
00:23:57,440 --> 00:24:00,880
based on what your environment should do

792
00:24:01,440 --> 00:24:02,880
now i've said a few times that we don't

793
00:24:02,880 --> 00:24:04,320
really know what attacks in the cloud

794
00:24:04,320 --> 00:24:04,960
look like

795
00:24:04,960 --> 00:24:06,799
um and so a lot of this boils down to

796
00:24:06,799 --> 00:24:08,720
the fact that the threat intel for cloud

797
00:24:08,720 --> 00:24:10,960
right now isn't great you could argue

798
00:24:10,960 --> 00:24:12,320
that the threat intel from premises

799
00:24:12,320 --> 00:24:13,279
isn't great either

800
00:24:13,279 --> 00:24:15,039
and but we know a lot less about what

801
00:24:15,039 --> 00:24:16,320
attackers do in the cloud

802
00:24:16,320 --> 00:24:18,000
than we do as to what they do on

803
00:24:18,000 --> 00:24:20,000
premises and the best example of that

804
00:24:20,000 --> 00:24:23,520
um you know to bring out another

805
00:24:23,520 --> 00:24:24,960
stereotype from cloud detection

806
00:24:24,960 --> 00:24:25,840
conference talks

807
00:24:25,840 --> 00:24:28,240
uh the mitra attack framework if you're

808
00:24:28,240 --> 00:24:29,760
not familiar with it um

809
00:24:29,760 --> 00:24:32,559
it's a public framework for defining

810
00:24:32,559 --> 00:24:34,720
attacking techniques ttps

811
00:24:34,720 --> 00:24:36,400
tying them to threat groups all of these

812
00:24:36,400 --> 00:24:38,000
kinds of things it's sort of a de facto

813
00:24:38,000 --> 00:24:39,120
industry standard

814
00:24:39,120 --> 00:24:41,760
for tracking uh who's doing what from an

815
00:24:41,760 --> 00:24:43,039
attacker's perspective

816
00:24:43,039 --> 00:24:45,840
and and to give you an idea of what

817
00:24:45,840 --> 00:24:46,720
things look like

818
00:24:46,720 --> 00:24:48,240
in terms of how much knowledge we have

819
00:24:48,240 --> 00:24:50,159
of this the one on the left there

820
00:24:50,159 --> 00:24:53,520
is the windows attack framework

821
00:24:53,520 --> 00:24:55,039
um i can't remember how many techniques

822
00:24:55,039 --> 00:24:56,159
there are there but you can see there's

823
00:24:56,159 --> 00:24:57,039
quite a few

824
00:24:57,039 --> 00:24:59,039
and you then you've got the cloud on the

825
00:24:59,039 --> 00:25:00,559
right and as you can see there's a lot

826
00:25:00,559 --> 00:25:01,039
less

827
00:25:01,039 --> 00:25:03,039
and to mitre's credit uh they're putting

828
00:25:03,039 --> 00:25:04,240
an awful lot of work into the cloud

829
00:25:04,240 --> 00:25:05,440
they're working with all their partners

830
00:25:05,440 --> 00:25:06,559
to get as much

831
00:25:06,559 --> 00:25:08,640
into the the cloud version of the attack

832
00:25:08,640 --> 00:25:09,679
framework as they can

833
00:25:09,679 --> 00:25:11,200
but the data's just not there to work

834
00:25:11,200 --> 00:25:12,799
with we don't really know a lot about

835
00:25:12,799 --> 00:25:15,039
what attackers are doing

836
00:25:15,039 --> 00:25:17,840
so what we have to do instead is work

837
00:25:17,840 --> 00:25:19,840
out what an attacker is likely to do

838
00:25:19,840 --> 00:25:23,760
in your environment so how do we

839
00:25:23,760 --> 00:25:26,240
do that in my case i do an awful lot of

840
00:25:26,240 --> 00:25:28,080
offensive security testing in the cloud

841
00:25:28,080 --> 00:25:30,159
so i look at what i do to clients

842
00:25:30,159 --> 00:25:31,840
environments how we break in

843
00:25:31,840 --> 00:25:34,559
um and i use that to inform what an

844
00:25:34,559 --> 00:25:36,159
attacker is likely to try

845
00:25:36,159 --> 00:25:37,600
we can then mix that up with whatever we

846
00:25:37,600 --> 00:25:39,279
can get out of mitre and out of

847
00:25:39,279 --> 00:25:41,120
the um publicly available threat

848
00:25:41,120 --> 00:25:42,960
intelligence to come up with something

849
00:25:42,960 --> 00:25:43,440
that's

850
00:25:43,440 --> 00:25:46,080
um reasonable to base our our detection

851
00:25:46,080 --> 00:25:46,480
and our

852
00:25:46,480 --> 00:25:50,000
uh our use cases on so

853
00:25:50,000 --> 00:25:53,039
um the four key vectors i think that we

854
00:25:53,039 --> 00:25:53,919
commonly see

855
00:25:53,919 --> 00:25:57,200
uh exploited uh once you get past sort

856
00:25:57,200 --> 00:25:58,799
of someone leaving their s3 bucket

857
00:25:58,799 --> 00:26:01,600
out in the open um our identity

858
00:26:01,600 --> 00:26:02,480
management

859
00:26:02,480 --> 00:26:04,559
pivoting in from other environments and

860
00:26:04,559 --> 00:26:06,000
the source code management continuous

861
00:26:06,000 --> 00:26:07,039
delivery piece

862
00:26:07,039 --> 00:26:09,120
and application vulnerabilities i'm

863
00:26:09,120 --> 00:26:09,919
going to leave application

864
00:26:09,919 --> 00:26:11,520
vulnerabilities to one side

865
00:26:11,520 --> 00:26:13,679
um there's plenty of conference talks

866
00:26:13,679 --> 00:26:14,880
talking about that already

867
00:26:14,880 --> 00:26:17,840
and so we'll focus in on the other three

868
00:26:17,840 --> 00:26:18,880
first off when i say

869
00:26:18,880 --> 00:26:20,640
identity management exploitation what do

870
00:26:20,640 --> 00:26:22,799
i actually mean so this is where an

871
00:26:22,799 --> 00:26:24,480
attack has stolen some valid credentials

872
00:26:24,480 --> 00:26:25,360
of some sort

873
00:26:25,360 --> 00:26:27,919
either through access keys being posted

874
00:26:27,919 --> 00:26:30,000
to github is the uh the really famous

875
00:26:30,000 --> 00:26:31,600
one here for aws

876
00:26:31,600 --> 00:26:33,840
and but also stolen credentials of some

877
00:26:33,840 --> 00:26:35,200
sort through a breach or

878
00:26:35,200 --> 00:26:38,240
fishing or whatever else um

879
00:26:38,240 --> 00:26:40,320
the verizon 2020 data breach

880
00:26:40,320 --> 00:26:41,600
investigation report

881
00:26:41,600 --> 00:26:44,080
um suggests that about 70 or 80 of the

882
00:26:44,080 --> 00:26:45,279
cases that they see

883
00:26:45,279 --> 00:26:47,279
involving the cloud have some sort of

884
00:26:47,279 --> 00:26:49,039
credential theft or identity management

885
00:26:49,039 --> 00:26:50,480
exploitation involved

886
00:26:50,480 --> 00:26:53,600
um so source code repositories

887
00:26:53,600 --> 00:26:56,080
are really critical for this people hard

888
00:26:56,080 --> 00:26:57,760
code secrets into their source code all

889
00:26:57,760 --> 00:26:58,559
the time

890
00:26:58,559 --> 00:27:00,640
um and occasionally they end up on

891
00:27:00,640 --> 00:27:02,559
github but even if not if an attacker

892
00:27:02,559 --> 00:27:04,000
gets a foothold on your on-premises

893
00:27:04,000 --> 00:27:04,640
network

894
00:27:04,640 --> 00:27:06,320
they're probably going to try digging

895
00:27:06,320 --> 00:27:08,240
through your source code repositories to

896
00:27:08,240 --> 00:27:09,440
find credentials for

897
00:27:09,440 --> 00:27:12,159
for getting up into the cloud and and so

898
00:27:12,159 --> 00:27:13,760
that's what i mean really by pivoting in

899
00:27:13,760 --> 00:27:15,039
from other environments too

900
00:27:15,039 --> 00:27:16,320
this is where we're talking about an

901
00:27:16,320 --> 00:27:18,480
attacker phishing their way in

902
00:27:18,480 --> 00:27:21,279
to an on-premises network and then

903
00:27:21,279 --> 00:27:23,440
perhaps compromising active directory

904
00:27:23,440 --> 00:27:24,960
getting domain admin and moving up into

905
00:27:24,960 --> 00:27:26,720
the cloud from there or stealing

906
00:27:26,720 --> 00:27:28,399
credentials from the internal network

907
00:27:28,399 --> 00:27:30,159
and using that to jump into the cloud

908
00:27:30,159 --> 00:27:31,840
we have also seen attackers start in the

909
00:27:31,840 --> 00:27:33,279
cloud and move on premises

910
00:27:33,279 --> 00:27:35,440
or start in one section of a company's

911
00:27:35,440 --> 00:27:36,320
cloud estate

912
00:27:36,320 --> 00:27:38,559
and use that to or leverage that access

913
00:27:38,559 --> 00:27:40,399
to to break into another one

914
00:27:40,399 --> 00:27:42,799
so there's a variety of different ways

915
00:27:42,799 --> 00:27:43,840
that can happen

916
00:27:43,840 --> 00:27:45,919
but pivoting and lateral movement

917
00:27:45,919 --> 00:27:47,279
between environments like that is

918
00:27:47,279 --> 00:27:49,039
becoming more and more common

919
00:27:49,039 --> 00:27:50,880
especially that phishing on-premises

920
00:27:50,880 --> 00:27:54,399
network and then moving into the cloud

921
00:27:54,880 --> 00:27:56,559
now and source code and continuous

922
00:27:56,559 --> 00:27:58,080
delivery what i mean by this

923
00:27:58,080 --> 00:28:00,960
is that if we have source code

924
00:28:00,960 --> 00:28:02,000
repositories

925
00:28:02,000 --> 00:28:03,919
and deployment pipelines that are

926
00:28:03,919 --> 00:28:05,840
building our cloud as is really common

927
00:28:05,840 --> 00:28:06,640
these days

928
00:28:06,640 --> 00:28:08,640
and we'll see things like terraform

929
00:28:08,640 --> 00:28:09,679
deploying the cloud

930
00:28:09,679 --> 00:28:11,279
and you know infrastructure is code that

931
00:28:11,279 --> 00:28:12,880
defines what your cloud looks like

932
00:28:12,880 --> 00:28:14,240
you deploy it automatically when you

933
00:28:14,240 --> 00:28:16,960
make changes and that's great from an

934
00:28:16,960 --> 00:28:18,320
operational perspective

935
00:28:18,320 --> 00:28:20,080
because it reduces the the risk of

936
00:28:20,080 --> 00:28:21,600
someone misclicking something and making

937
00:28:21,600 --> 00:28:22,960
a mistake when they're deploying

938
00:28:22,960 --> 00:28:25,120
but it also means that as an attacker if

939
00:28:25,120 --> 00:28:26,880
i can get access to

940
00:28:26,880 --> 00:28:28,720
your pipelines and manipulate what's

941
00:28:28,720 --> 00:28:30,559
moving through it or i can change the

942
00:28:30,559 --> 00:28:32,240
source code that defines what your cloud

943
00:28:32,240 --> 00:28:33,039
looks like

944
00:28:33,039 --> 00:28:35,279
then i have control over your your

945
00:28:35,279 --> 00:28:36,720
production cloud environments

946
00:28:36,720 --> 00:28:38,720
without ever actually having to touch

947
00:28:38,720 --> 00:28:40,640
that particular aws account or azure

948
00:28:40,640 --> 00:28:41,360
state

949
00:28:41,360 --> 00:28:44,080
and so we've not seen a huge amount of

950
00:28:44,080 --> 00:28:45,360
this done so far there have been a

951
00:28:45,360 --> 00:28:46,559
couple of examples

952
00:28:46,559 --> 00:28:47,919
and but i expect that we're going to see

953
00:28:47,919 --> 00:28:49,679
more and more of this over time

954
00:28:49,679 --> 00:28:52,240
as attackers get savvy to this and as a

955
00:28:52,240 --> 00:28:53,200
lot of the more

956
00:28:53,200 --> 00:28:55,440
basic attack vectors and start being

957
00:28:55,440 --> 00:28:57,039
closed off as people become more aware

958
00:28:57,039 --> 00:28:57,520
of them

959
00:28:57,520 --> 00:29:00,720
and the defenses get better

960
00:29:00,880 --> 00:29:04,480
so having talked through the three major

961
00:29:04,480 --> 00:29:07,200
attack vectors into the cloud um how do

962
00:29:07,200 --> 00:29:08,640
you then actually adapt

963
00:29:08,640 --> 00:29:10,159
all of this to your environments how do

964
00:29:10,159 --> 00:29:11,840
you know what to look for

965
00:29:11,840 --> 00:29:13,440
[Music]

966
00:29:13,440 --> 00:29:16,399
where do you start really um and so the

967
00:29:16,399 --> 00:29:17,840
key thing here is to do it on an

968
00:29:17,840 --> 00:29:19,600
environment by environment basis if

969
00:29:19,600 --> 00:29:21,120
you're working for a large organization

970
00:29:21,120 --> 00:29:22,559
with a lot of different workloads in the

971
00:29:22,559 --> 00:29:23,600
cloud

972
00:29:23,600 --> 00:29:25,120
pick a couple of the most important ones

973
00:29:25,120 --> 00:29:26,720
as a starting point if you're working

974
00:29:26,720 --> 00:29:28,399
for a smaller organization you've only

975
00:29:28,399 --> 00:29:29,600
got perhaps

976
00:29:29,600 --> 00:29:30,880
a software as a service product you're

977
00:29:30,880 --> 00:29:33,120
monitoring or something a bit smaller

978
00:29:33,120 --> 00:29:34,720
and then this is probably something you

979
00:29:34,720 --> 00:29:36,720
only have to do once but

980
00:29:36,720 --> 00:29:39,120
the overall process is the same and you

981
00:29:39,120 --> 00:29:40,640
threat model a given environment or a

982
00:29:40,640 --> 00:29:41,760
given workload

983
00:29:41,760 --> 00:29:43,679
um and you work out how an attacker is

984
00:29:43,679 --> 00:29:45,600
likely to to go for it

985
00:29:45,600 --> 00:29:46,799
and you can use a combination of the

986
00:29:46,799 --> 00:29:49,200
techniques in mitra attack and also

987
00:29:49,200 --> 00:29:50,880
the usual sort of threat modelling if i

988
00:29:50,880 --> 00:29:52,640
put my attacker hat on here

989
00:29:52,640 --> 00:29:55,120
what is an attacker likely to try work

990
00:29:55,120 --> 00:29:57,039
out what those attack parts look like

991
00:29:57,039 --> 00:30:00,000
um and then prioritize those based on

992
00:30:00,000 --> 00:30:01,200
what you think an attacker is most

993
00:30:01,200 --> 00:30:02,240
likely to try

994
00:30:02,240 --> 00:30:04,080
and also what's most likely to succeed

995
00:30:04,080 --> 00:30:05,600
you know you know your environments you

996
00:30:05,600 --> 00:30:08,000
know what's going to be weakest

997
00:30:08,000 --> 00:30:09,440
this all works best really if you

998
00:30:09,440 --> 00:30:11,200
involve the developers as well bring the

999
00:30:11,200 --> 00:30:12,799
developers and your assist admins into

1000
00:30:12,799 --> 00:30:13,919
these conversations

1001
00:30:13,919 --> 00:30:15,679
and the knowledge they have is is

1002
00:30:15,679 --> 00:30:18,159
generally really invaluable

1003
00:30:18,159 --> 00:30:20,720
you can then prioritize those um as i

1004
00:30:20,720 --> 00:30:21,440
say

1005
00:30:21,440 --> 00:30:24,240
um then look at the exact individual

1006
00:30:24,240 --> 00:30:25,360
ttps

1007
00:30:25,360 --> 00:30:28,559
um work out what of those you can easily

1008
00:30:28,559 --> 00:30:30,399
detect which of those might be a bit

1009
00:30:30,399 --> 00:30:31,039
harder

1010
00:30:31,039 --> 00:30:32,399
and you know for instance anything

1011
00:30:32,399 --> 00:30:33,520
happening on the network on an

1012
00:30:33,520 --> 00:30:35,039
on-premise network is generally harder

1013
00:30:35,039 --> 00:30:36,000
than things happening on

1014
00:30:36,000 --> 00:30:39,279
the endpoint to spot um likewise there

1015
00:30:39,279 --> 00:30:40,960
will be some things that are easier to

1016
00:30:40,960 --> 00:30:43,279
pick out of the the background noise

1017
00:30:43,279 --> 00:30:46,720
than others so prioritize your

1018
00:30:46,720 --> 00:30:48,480
your individual detection cases based on

1019
00:30:48,480 --> 00:30:50,000
that next up

1020
00:30:50,000 --> 00:30:51,440
make sure that the telemetry is actually

1021
00:30:51,440 --> 00:30:53,120
turned on if you know you need your

1022
00:30:53,120 --> 00:30:54,559
control plane audit logs

1023
00:30:54,559 --> 00:30:56,000
are they making their way into your

1024
00:30:56,000 --> 00:30:57,919
scene can you actually access them

1025
00:30:57,919 --> 00:30:59,440
you know that that's the next important

1026
00:30:59,440 --> 00:31:01,679
thing to do um

1027
00:31:01,679 --> 00:31:03,600
then actually write your detection cases

1028
00:31:03,600 --> 00:31:05,120
um you know

1029
00:31:05,120 --> 00:31:07,760
write the the use cases that specify

1030
00:31:07,760 --> 00:31:09,840
what the scene should alert on or what

1031
00:31:09,840 --> 00:31:10,559
you should be

1032
00:31:10,559 --> 00:31:11,919
triggering on and what people should be

1033
00:31:11,919 --> 00:31:14,320
looking for um

1034
00:31:14,320 --> 00:31:16,240
then execute those individual attacker

1035
00:31:16,240 --> 00:31:18,480
actions

1036
00:31:18,480 --> 00:31:20,159
simulate what you expect an attacker to

1037
00:31:20,159 --> 00:31:22,240
do and make sure that the right alerts

1038
00:31:22,240 --> 00:31:23,760
go off or the right notifications come

1039
00:31:23,760 --> 00:31:24,399
through or

1040
00:31:24,399 --> 00:31:25,840
that the right data is available in the

1041
00:31:25,840 --> 00:31:28,320
right place for your analysts to react

1042
00:31:28,320 --> 00:31:32,399
to it in the right way

1043
00:31:32,399 --> 00:31:35,679
and in terms of where to start

1044
00:31:35,679 --> 00:31:38,799
on a prioritization perspective where do

1045
00:31:38,799 --> 00:31:39,360
we

1046
00:31:39,360 --> 00:31:42,320
first pick out as our first use cases i

1047
00:31:42,320 --> 00:31:43,919
generally recommend starting as close to

1048
00:31:43,919 --> 00:31:45,360
the objective as you can

1049
00:31:45,360 --> 00:31:47,279
because while obviously the attack is

1050
00:31:47,279 --> 00:31:48,399
closest to getting what they want at

1051
00:31:48,399 --> 00:31:49,360
that stage

1052
00:31:49,360 --> 00:31:50,640
actually it's also usually the the

1053
00:31:50,640 --> 00:31:52,480
highest fidelity the the lowest rate of

1054
00:31:52,480 --> 00:31:53,600
force positives

1055
00:31:53,600 --> 00:31:56,880
and so then there's also

1056
00:31:56,880 --> 00:31:58,720
a few key things that attackers likely

1057
00:31:58,720 --> 00:32:00,720
try and do and that you can also

1058
00:32:00,720 --> 00:32:02,240
signature on perhaps more easily than

1059
00:32:02,240 --> 00:32:03,600
you you can other things

1060
00:32:03,600 --> 00:32:06,320
and this is things like um attempts to

1061
00:32:06,320 --> 00:32:08,000
modify or change your

1062
00:32:08,000 --> 00:32:11,120
um detection tooling your log sources

1063
00:32:11,120 --> 00:32:12,480
things like an attacker trying to turn

1064
00:32:12,480 --> 00:32:14,480
off cloud trail is usually really loud

1065
00:32:14,480 --> 00:32:15,919
cloud trial doesn't change very often

1066
00:32:15,919 --> 00:32:17,679
once it's set up and so that's a nice

1067
00:32:17,679 --> 00:32:19,120
easy thing to monitor on

1068
00:32:19,120 --> 00:32:21,440
look for highly privileged activity

1069
00:32:21,440 --> 00:32:22,880
where people are trying to

1070
00:32:22,880 --> 00:32:25,679
grant new permissions or especially

1071
00:32:25,679 --> 00:32:26,960
unusual permissions

1072
00:32:26,960 --> 00:32:30,159
to im users or to roles in aws or to

1073
00:32:30,159 --> 00:32:33,679
particular entities in azure id um

1074
00:32:33,679 --> 00:32:35,039
people trying to turn off guard duty

1075
00:32:35,039 --> 00:32:36,720
again in aws that's that's usually

1076
00:32:36,720 --> 00:32:37,840
pretty obvious

1077
00:32:37,840 --> 00:32:40,880
um keep an eye on things that don't

1078
00:32:40,880 --> 00:32:42,480
happen very often and that you know have

1079
00:32:42,480 --> 00:32:44,320
a significant impact on the security of

1080
00:32:44,320 --> 00:32:44,640
the

1081
00:32:44,640 --> 00:32:46,240
the environment that's usually the best

1082
00:32:46,240 --> 00:32:48,880
place to start

1083
00:32:49,679 --> 00:32:51,279
now i mentioned earlier about bringing

1084
00:32:51,279 --> 00:32:53,039
devops to detection um

1085
00:32:53,039 --> 00:32:55,840
what i mean by that is learning from all

1086
00:32:55,840 --> 00:32:57,440
of our engineers who started working in

1087
00:32:57,440 --> 00:32:58,240
the cloud

1088
00:32:58,240 --> 00:32:59,919
in the it's always better to treat

1089
00:32:59,919 --> 00:33:01,679
things as code than to do things

1090
00:33:01,679 --> 00:33:02,559
manually

1091
00:33:02,559 --> 00:33:04,240
and so if you start defining your

1092
00:33:04,240 --> 00:33:06,159
detections as code it makes

1093
00:33:06,159 --> 00:33:07,360
knowledge sharing within your team

1094
00:33:07,360 --> 00:33:09,440
easier it makes it easier to pass rule

1095
00:33:09,440 --> 00:33:10,960
sets back and forth between partner

1096
00:33:10,960 --> 00:33:12,159
organizations

1097
00:33:12,159 --> 00:33:14,000
um you know if you're working with an

1098
00:33:14,000 --> 00:33:15,200
industry group

1099
00:33:15,200 --> 00:33:17,360
where you share threat intelligence

1100
00:33:17,360 --> 00:33:18,799
you're better off sharing that as

1101
00:33:18,799 --> 00:33:20,480
codified rules than you are as

1102
00:33:20,480 --> 00:33:22,480
individual sort of iocs like i don't

1103
00:33:22,480 --> 00:33:23,360
know hashes or

1104
00:33:23,360 --> 00:33:25,120
ip addresses what have you if you can

1105
00:33:25,120 --> 00:33:26,799
share the actual rules then then it's

1106
00:33:26,799 --> 00:33:27,919
even easier right

1107
00:33:27,919 --> 00:33:30,080
um one of the the key drivers we've seen

1108
00:33:30,080 --> 00:33:32,240
on that or the key projects in that area

1109
00:33:32,240 --> 00:33:35,519
is sigma uh by florian roth which is a

1110
00:33:35,519 --> 00:33:37,440
set of same agnostic rules he's got a

1111
00:33:37,440 --> 00:33:38,399
seam agnostic

1112
00:33:38,399 --> 00:33:40,640
definition format and then a compiler

1113
00:33:40,640 --> 00:33:42,640
that generates splunk rules

1114
00:33:42,640 --> 00:33:46,080
or q radar rules or as your sentinel

1115
00:33:46,080 --> 00:33:47,600
rules or whatever else it is that you're

1116
00:33:47,600 --> 00:33:48,240
using

1117
00:33:48,240 --> 00:33:50,399
from that set of agnostic rules so you

1118
00:33:50,399 --> 00:33:51,840
can write rules and easily trade them

1119
00:33:51,840 --> 00:33:53,519
back and forth between organizations

1120
00:33:53,519 --> 00:33:54,880
without digging too far into the

1121
00:33:54,880 --> 00:33:57,360
minutiae of how your individual

1122
00:33:57,360 --> 00:34:00,240
and scene works um makes it easier to

1123
00:34:00,240 --> 00:34:01,760
transfer these rules around

1124
00:34:01,760 --> 00:34:03,840
um another interesting one in this space

1125
00:34:03,840 --> 00:34:05,120
is jupiter notebooks

1126
00:34:05,120 --> 00:34:07,279
and so these were a data science tool

1127
00:34:07,279 --> 00:34:09,280
originally but it allows you to embed

1128
00:34:09,280 --> 00:34:11,280
python code in a document essentially in

1129
00:34:11,280 --> 00:34:12,639
a in a browser

1130
00:34:12,639 --> 00:34:15,839
um and so you can generate tables graphs

1131
00:34:15,839 --> 00:34:16,960
all kinds of things

1132
00:34:16,960 --> 00:34:18,159
off it but it's also just generally a

1133
00:34:18,159 --> 00:34:19,918
useful prototyping tool we've seen

1134
00:34:19,918 --> 00:34:21,119
people pass

1135
00:34:21,119 --> 00:34:24,399
um threat hunting uh ideas around those

1136
00:34:24,399 --> 00:34:25,679
jupiter notebooks for different people

1137
00:34:25,679 --> 00:34:26,320
to try

1138
00:34:26,320 --> 00:34:27,679
and spectrop's put some good stuff

1139
00:34:27,679 --> 00:34:29,040
together on that so worth checking that

1140
00:34:29,040 --> 00:34:30,079
blog post out

1141
00:34:30,079 --> 00:34:31,679
and the sort of the the granddaddy of

1142
00:34:31,679 --> 00:34:33,839
posts uh or conference talks on this is

1143
00:34:33,839 --> 00:34:34,560
an idea

1144
00:34:34,560 --> 00:34:36,960
was by john lambert from microsoft and

1145
00:34:36,960 --> 00:34:39,040
back at t2 in 2019

1146
00:34:39,040 --> 00:34:41,040
um on what he calls the githubification

1147
00:34:41,040 --> 00:34:42,079
of infosec

1148
00:34:42,079 --> 00:34:43,440
and well worth watching that and having

1149
00:34:43,440 --> 00:34:46,480
a read of his blog post i'd say

1150
00:34:46,480 --> 00:34:49,599
so um we took that idea we built an open

1151
00:34:49,599 --> 00:34:50,800
source tool around it

1152
00:34:50,800 --> 00:34:53,280
um and so what we have is leonidas which

1153
00:34:53,280 --> 00:34:55,119
is an automated attack simulation

1154
00:34:55,119 --> 00:34:55,918
framework

1155
00:34:55,918 --> 00:34:57,920
that also defines the detection rules

1156
00:34:57,920 --> 00:34:59,040
that allows you to catch

1157
00:34:59,040 --> 00:35:01,200
these individual attacker actions and we

1158
00:35:01,200 --> 00:35:02,880
link the whole thing back to mitre

1159
00:35:02,880 --> 00:35:03,680
attack

1160
00:35:03,680 --> 00:35:05,040
because that's what most socks like to

1161
00:35:05,040 --> 00:35:07,359
do these days um and the framework will

1162
00:35:07,359 --> 00:35:09,280
automatically generate based on a

1163
00:35:09,280 --> 00:35:11,119
yaml-based configuration file

1164
00:35:11,119 --> 00:35:14,079
and the serverless function that we run

1165
00:35:14,079 --> 00:35:16,240
in aws to actually trigger these

1166
00:35:16,240 --> 00:35:18,320
these test cases the sigma detection

1167
00:35:18,320 --> 00:35:19,920
rules based on

1168
00:35:19,920 --> 00:35:22,240
what this uh this particular ttp

1169
00:35:22,240 --> 00:35:22,960
generates

1170
00:35:22,960 --> 00:35:24,720
and some nice pretty documentation for

1171
00:35:24,720 --> 00:35:26,800
you to use to share the info around

1172
00:35:26,800 --> 00:35:29,599
um and it's all built in a way that's

1173
00:35:29,599 --> 00:35:31,440
designed to make it as easy as possible

1174
00:35:31,440 --> 00:35:32,800
for an analyst who doesn't really know

1175
00:35:32,800 --> 00:35:34,720
that much about the cloud yet uh to get

1176
00:35:34,720 --> 00:35:36,480
stuck in and get working with it quickly

1177
00:35:36,480 --> 00:35:37,680
and share these things around with the

1178
00:35:37,680 --> 00:35:39,359
team so that everyone can take advantage

1179
00:35:39,359 --> 00:35:40,960
of it

1180
00:35:40,960 --> 00:35:42,800
um so what is it and how does it

1181
00:35:42,800 --> 00:35:44,090
actually work um

1182
00:35:44,090 --> 00:35:46,320
[Music]

1183
00:35:46,320 --> 00:35:48,400
you have a set of analysts in your in

1184
00:35:48,400 --> 00:35:50,960
your sock and you define a new ttp

1185
00:35:50,960 --> 00:35:53,440
in a yaml-based rule format and you

1186
00:35:53,440 --> 00:35:54,480
check that into

1187
00:35:54,480 --> 00:35:56,560
a source code repository that lives in

1188
00:35:56,560 --> 00:35:58,079
the cloud and this is all built

1189
00:35:58,079 --> 00:35:59,440
out automatically with uh with

1190
00:35:59,440 --> 00:36:01,359
infrastructure's code for you and

1191
00:36:01,359 --> 00:36:03,200
and that then generates a lambda

1192
00:36:03,200 --> 00:36:04,640
function that lives in the cloud

1193
00:36:04,640 --> 00:36:07,119
with your ttps in and so you can just

1194
00:36:07,119 --> 00:36:08,320
hit these individual

1195
00:36:08,320 --> 00:36:10,240
web endpoints with the parameters that

1196
00:36:10,240 --> 00:36:11,599
you're interested in um

1197
00:36:11,599 --> 00:36:13,200
in order to trigger these test cases you

1198
00:36:13,200 --> 00:36:14,960
don't have to know

1199
00:36:14,960 --> 00:36:17,440
the exact aws cli incantations or

1200
00:36:17,440 --> 00:36:18,320
anything like that

1201
00:36:18,320 --> 00:36:19,599
and there's just web endpoints that you

1202
00:36:19,599 --> 00:36:22,400
can hit to execute these test cases

1203
00:36:22,400 --> 00:36:24,640
and so then generally what happens is

1204
00:36:24,640 --> 00:36:26,400
you go along you execute the attacks by

1205
00:36:26,400 --> 00:36:28,560
chaining a few of these ttps together

1206
00:36:28,560 --> 00:36:30,400
um and those logs get shipped into the

1207
00:36:30,400 --> 00:36:32,560
seam and you can verify whether your

1208
00:36:32,560 --> 00:36:34,400
uh your rule sets that you've built work

1209
00:36:34,400 --> 00:36:36,240
as expected um

1210
00:36:36,240 --> 00:36:38,720
by triggering these these attacks

1211
00:36:38,720 --> 00:36:40,880
through this web api as i say

1212
00:36:40,880 --> 00:36:42,800
so i mentioned the the definition format

1213
00:36:42,800 --> 00:36:44,160
what does that actually look like

1214
00:36:44,160 --> 00:36:46,720
um this is an example for enumerating

1215
00:36:46,720 --> 00:36:48,160
cloud trails your control plane audit

1216
00:36:48,160 --> 00:36:49,359
logs in aws

1217
00:36:49,359 --> 00:36:50,800
and you can see there we've just got a

1218
00:36:50,800 --> 00:36:53,280
single line of code that calls the aws

1219
00:36:53,280 --> 00:36:54,640
apis

1220
00:36:54,640 --> 00:36:56,320
leonidas itself behind the scenes

1221
00:36:56,320 --> 00:36:58,480
handles most of the the details around

1222
00:36:58,480 --> 00:36:59,599
exactly how that's

1223
00:36:59,599 --> 00:37:02,160
executed passing in all of the the right

1224
00:37:02,160 --> 00:37:03,920
um credentials or roles or whatever

1225
00:37:03,920 --> 00:37:05,359
other information we need to make that

1226
00:37:05,359 --> 00:37:05,920
happen

1227
00:37:05,920 --> 00:37:07,200
and the analysts only got to write a

1228
00:37:07,200 --> 00:37:09,920
line or two of code generally um

1229
00:37:09,920 --> 00:37:11,839
so that then is compiled as i say into

1230
00:37:11,839 --> 00:37:13,119
the the web api

1231
00:37:13,119 --> 00:37:14,960
and once you check it into the the repo

1232
00:37:14,960 --> 00:37:17,280
you got deployed

1233
00:37:17,280 --> 00:37:18,880
the detection cases then are also

1234
00:37:18,880 --> 00:37:22,079
written in a sigma-ish type format

1235
00:37:22,079 --> 00:37:24,400
but we can then generate sigma rules off

1236
00:37:24,400 --> 00:37:26,079
this with a single command from the to

1237
00:37:26,079 --> 00:37:27,040
the framework

1238
00:37:27,040 --> 00:37:30,800
um and so you can define alongside your

1239
00:37:30,800 --> 00:37:32,800
actual attacker ttps exactly how to

1240
00:37:32,800 --> 00:37:33,440
detect them

1241
00:37:33,440 --> 00:37:34,880
which makes it nice and easy to look at

1242
00:37:34,880 --> 00:37:36,400
what's happening when an attacker does

1243
00:37:36,400 --> 00:37:36,800
it

1244
00:37:36,800 --> 00:37:38,240
and then what that looks like in the

1245
00:37:38,240 --> 00:37:40,079
logs makes it nice and easy to compare

1246
00:37:40,079 --> 00:37:41,440
those which helps people understand them

1247
00:37:41,440 --> 00:37:43,040
better

1248
00:37:43,040 --> 00:37:44,640
and we can generate some nice pretty

1249
00:37:44,640 --> 00:37:47,680
documentation off the back of it

1250
00:37:47,680 --> 00:37:50,720
so in practice um why is this useful

1251
00:37:50,720 --> 00:37:53,839
um we can really use it to do continuous

1252
00:37:53,839 --> 00:37:54,560
testing

1253
00:37:54,560 --> 00:37:56,400
so you've seen things perhaps like mitre

1254
00:37:56,400 --> 00:37:59,359
caldera which allows you to simulate

1255
00:37:59,359 --> 00:38:01,119
individual attacker actions on an

1256
00:38:01,119 --> 00:38:02,720
automated basis across a corporate

1257
00:38:02,720 --> 00:38:03,200
network

1258
00:38:03,200 --> 00:38:05,119
and atomic red team's a similar thing if

1259
00:38:05,119 --> 00:38:06,560
you've seen that um

1260
00:38:06,560 --> 00:38:08,240
and so now instead of being locked down

1261
00:38:08,240 --> 00:38:10,160
to purely our on-premises estate

1262
00:38:10,160 --> 00:38:12,079
and we can actually simulate attack

1263
00:38:12,079 --> 00:38:13,359
chains that go

1264
00:38:13,359 --> 00:38:15,040
uh you know perhaps phishing land on

1265
00:38:15,040 --> 00:38:17,200
premise pivot up into the cloud pivot

1266
00:38:17,200 --> 00:38:18,240
back down again

1267
00:38:18,240 --> 00:38:20,960
and you know we can really simulate a

1268
00:38:20,960 --> 00:38:22,400
broad range of things now because we've

1269
00:38:22,400 --> 00:38:24,480
got that cloud integration

1270
00:38:24,480 --> 00:38:26,640
and we can simulate these whenever we

1271
00:38:26,640 --> 00:38:28,560
feel like it for very low effort

1272
00:38:28,560 --> 00:38:30,240
instead of having to run an entire

1273
00:38:30,240 --> 00:38:32,480
manual purple team which often consumes

1274
00:38:32,480 --> 00:38:34,240
a lot of man hours you know we can do

1275
00:38:34,240 --> 00:38:36,480
those less frequently to look for

1276
00:38:36,480 --> 00:38:38,320
particular new and interesting things

1277
00:38:38,320 --> 00:38:41,200
that require a more human level of

1278
00:38:41,200 --> 00:38:43,359
attacking to actually happen and test

1279
00:38:43,359 --> 00:38:45,040
the base level of

1280
00:38:45,040 --> 00:38:47,440
test cases the base level of detections

1281
00:38:47,440 --> 00:38:48,079
using

1282
00:38:48,079 --> 00:38:50,640
leonidas automatically and you know with

1283
00:38:50,640 --> 00:38:52,400
a just by running a script or with a few

1284
00:38:52,400 --> 00:38:54,800
button clicks

1285
00:38:54,800 --> 00:38:55,920
and then if you really want to get into

1286
00:38:55,920 --> 00:38:57,040
the weeds and we're talking a little bit

1287
00:38:57,040 --> 00:38:57,839
more about this

1288
00:38:57,839 --> 00:39:00,960
rsa next week and you can also use it

1289
00:39:00,960 --> 00:39:03,280
as part of your continuous integration

1290
00:39:03,280 --> 00:39:04,079
process

1291
00:39:04,079 --> 00:39:06,079
so you write some rules you deploy them

1292
00:39:06,079 --> 00:39:07,119
out to your scene

1293
00:39:07,119 --> 00:39:09,280
and as part of that we automatically

1294
00:39:09,280 --> 00:39:11,200
trigger leonidas against a test

1295
00:39:11,200 --> 00:39:12,079
environment

1296
00:39:12,079 --> 00:39:14,960
and essentially diff the leonidas logs

1297
00:39:14,960 --> 00:39:16,800
it produces some nice logs that tell you

1298
00:39:16,800 --> 00:39:18,240
what tests were run when

1299
00:39:18,240 --> 00:39:20,160
with what parameters you compare that to

1300
00:39:20,160 --> 00:39:21,599
what's turned up in your scene and what

1301
00:39:21,599 --> 00:39:22,880
alerts have been triggered

1302
00:39:22,880 --> 00:39:25,680
and what use cases have fired off and we

1303
00:39:25,680 --> 00:39:27,280
can then verify that

1304
00:39:27,280 --> 00:39:29,599
as you've improved your use cases a that

1305
00:39:29,599 --> 00:39:30,720
your improvements do what they're

1306
00:39:30,720 --> 00:39:31,520
supposed to

1307
00:39:31,520 --> 00:39:32,960
and b that in the process you've not

1308
00:39:32,960 --> 00:39:35,119
accidentally broken something

1309
00:39:35,119 --> 00:39:36,880
and one of the really powerful uses for

1310
00:39:36,880 --> 00:39:39,280
this in a slightly cynical way

1311
00:39:39,280 --> 00:39:41,440
is to take that data and that

1312
00:39:41,440 --> 00:39:43,200
improvement that you track over time

1313
00:39:43,200 --> 00:39:44,640
and take that up to your management team

1314
00:39:44,640 --> 00:39:45,839
and say look we're doing really well

1315
00:39:45,839 --> 00:39:47,119
give us more budget give us more

1316
00:39:47,119 --> 00:39:47,839
investment

1317
00:39:47,839 --> 00:39:49,839
uh you know we'll keep doing even better

1318
00:39:49,839 --> 00:39:50,880
it gives you that

1319
00:39:50,880 --> 00:39:53,839
hard data to show that you are working

1320
00:39:53,839 --> 00:39:56,079
in a positive fashion you're improving

1321
00:39:56,079 --> 00:39:57,599
and that you're helping the business out

1322
00:39:57,599 --> 00:39:59,520
which can be quite hard to do

1323
00:39:59,520 --> 00:40:01,359
in a sock depending on how things are

1324
00:40:01,359 --> 00:40:03,839
being measured

1325
00:40:04,960 --> 00:40:06,800
so and just to wrap things up and to

1326
00:40:06,800 --> 00:40:08,079
conclude um

1327
00:40:08,079 --> 00:40:10,079
detection really is a journey and you

1328
00:40:10,079 --> 00:40:12,000
don't start

1329
00:40:12,000 --> 00:40:13,839
finish in a couple of months with some

1330
00:40:13,839 --> 00:40:15,359
detections call it quits

1331
00:40:15,359 --> 00:40:17,599
and especially in the cloud new services

1332
00:40:17,599 --> 00:40:18,880
are coming out all the time

1333
00:40:18,880 --> 00:40:20,560
your environments change a lot faster

1334
00:40:20,560 --> 00:40:22,240
than on-premises because of how easy it

1335
00:40:22,240 --> 00:40:23,599
is to

1336
00:40:23,599 --> 00:40:25,119
to make improvements to make changes

1337
00:40:25,119 --> 00:40:26,880
from an engineering perspective so your

1338
00:40:26,880 --> 00:40:28,880
development teams tend to move faster

1339
00:40:28,880 --> 00:40:30,640
and so there's this constant cycle of

1340
00:40:30,640 --> 00:40:33,040
identifying new threats and risks as

1341
00:40:33,040 --> 00:40:34,480
new techniques come out and as your

1342
00:40:34,480 --> 00:40:36,720
environments change designing new use

1343
00:40:36,720 --> 00:40:37,520
cases

1344
00:40:37,520 --> 00:40:39,839
according to what you just identified

1345
00:40:39,839 --> 00:40:41,280
simulating those threats

1346
00:40:41,280 --> 00:40:43,440
seeing if your use cases trigger and you

1347
00:40:43,440 --> 00:40:45,440
know and verifying all of that in a in a

1348
00:40:45,440 --> 00:40:46,720
continuing cycle

1349
00:40:46,720 --> 00:40:49,599
um the easiest way to do that by far is

1350
00:40:49,599 --> 00:40:51,359
having all of this defined as code

1351
00:40:51,359 --> 00:40:53,520
so that you can track changes over time

1352
00:40:53,520 --> 00:40:55,200
uh you can share it more easily both

1353
00:40:55,200 --> 00:40:58,880
internally and with your partners um

1354
00:40:58,880 --> 00:41:00,480
and it just makes everything run much

1355
00:41:00,480 --> 00:41:01,920
more smoothly frankly

1356
00:41:01,920 --> 00:41:04,400
um and if you are doing this in aws at

1357
00:41:04,400 --> 00:41:06,160
least at the moment and give leonidas a

1358
00:41:06,160 --> 00:41:07,520
try it's up on our github

1359
00:41:07,520 --> 00:41:10,160
um and at the moment it's aws only we've

1360
00:41:10,160 --> 00:41:10,720
got

1361
00:41:10,720 --> 00:41:12,640
azure gcp on the roadmap i've been

1362
00:41:12,640 --> 00:41:14,160
saying that for a while but hopefully um

1363
00:41:14,160 --> 00:41:15,760
that shouldn't be too much longer

1364
00:41:15,760 --> 00:41:17,280
and we've got quite a few test cases in

1365
00:41:17,280 --> 00:41:19,280
there already um you know we're building

1366
00:41:19,280 --> 00:41:20,160
them out all the time

1367
00:41:20,160 --> 00:41:22,000
as we write new ones ourselves to use

1368
00:41:22,000 --> 00:41:23,839
both within f-secure

1369
00:41:23,839 --> 00:41:25,599
and with our clients um so it's up on

1370
00:41:25,599 --> 00:41:27,680
github like i say give it a try

1371
00:41:27,680 --> 00:41:29,440
um and feel free to ping me if you've

1372
00:41:29,440 --> 00:41:30,720
got any questions about that i'm always

1373
00:41:30,720 --> 00:41:33,280
happy to help

1374
00:41:33,280 --> 00:41:35,280
with that thank you for listening um i

1375
00:41:35,280 --> 00:41:36,400
think we might have some questions

1376
00:41:36,400 --> 00:41:37,520
potentially

1377
00:41:37,520 --> 00:41:40,720
yes we do thank you nick so right into

1378
00:41:40,720 --> 00:41:42,000
the questions

1379
00:41:42,000 --> 00:41:44,960
how often cloud provider is included in

1380
00:41:44,960 --> 00:41:45,839
dfr

1381
00:41:45,839 --> 00:41:48,480
ir process and do they perhaps have

1382
00:41:48,480 --> 00:41:49,359
additional

1383
00:41:49,359 --> 00:41:52,319
data they can provide for those purposes

1384
00:41:52,319 --> 00:41:53,680
with or without

1385
00:41:53,680 --> 00:41:57,119
warrant okay so

1386
00:41:57,119 --> 00:41:59,359
i understand that as um how do the

1387
00:41:59,359 --> 00:42:00,560
providers themselves

1388
00:42:00,560 --> 00:42:02,960
get involved in dfir when when incidents

1389
00:42:02,960 --> 00:42:03,760
happen

1390
00:42:03,760 --> 00:42:05,839
um and how can you take advantage of

1391
00:42:05,839 --> 00:42:08,160
that i think the

1392
00:42:08,160 --> 00:42:09,839
the question for that is the answer to

1393
00:42:09,839 --> 00:42:11,440
that rather is that it varies an awful

1394
00:42:11,440 --> 00:42:11,760
lot

1395
00:42:11,760 --> 00:42:13,839
and depends on the provider and some are

1396
00:42:13,839 --> 00:42:15,200
more willing to help than others

1397
00:42:15,200 --> 00:42:17,680
it also depends on your level of

1398
00:42:17,680 --> 00:42:18,960
agreement that you've got within the

1399
00:42:18,960 --> 00:42:20,640
support contracts you have

1400
00:42:20,640 --> 00:42:22,560
um generally it's in the providers

1401
00:42:22,560 --> 00:42:23,760
interests to help out

1402
00:42:23,760 --> 00:42:25,040
and if you've got a good level of

1403
00:42:25,040 --> 00:42:26,640
support contract with them they'll often

1404
00:42:26,640 --> 00:42:28,720
let you have access to their own

1405
00:42:28,720 --> 00:42:32,000
internal dfir specialists for the cloud

1406
00:42:32,000 --> 00:42:35,119
um but this is very much a case of

1407
00:42:35,119 --> 00:42:37,520
uh you know god helps those who help

1408
00:42:37,520 --> 00:42:38,319
themselves

1409
00:42:38,319 --> 00:42:40,640
if you don't have the right things

1410
00:42:40,640 --> 00:42:41,839
turned on yourself

1411
00:42:41,839 --> 00:42:43,440
and you don't have a bit of a process in

1412
00:42:43,440 --> 00:42:45,599
place for responding to incidents in the

1413
00:42:45,599 --> 00:42:47,040
cloud and for detecting that

1414
00:42:47,040 --> 00:42:49,359
and then the providers are going to be

1415
00:42:49,359 --> 00:42:50,640
able to do less for you

1416
00:42:50,640 --> 00:42:52,400
than if you were fairly well established

1417
00:42:52,400 --> 00:42:54,160
you had all your logs you had a good

1418
00:42:54,160 --> 00:42:54,800
process

1419
00:42:54,800 --> 00:42:58,480
uh set in place to uh get get that ball

1420
00:42:58,480 --> 00:43:00,160
rolling and to react to it

1421
00:43:00,160 --> 00:43:02,319
um you know so build these out

1422
00:43:02,319 --> 00:43:03,280
yourselves

1423
00:43:03,280 --> 00:43:05,280
it's worth talking to your account

1424
00:43:05,280 --> 00:43:07,280
managers at your cloud providers while

1425
00:43:07,280 --> 00:43:08,079
you're doing that

1426
00:43:08,079 --> 00:43:09,200
because they'll either be able to get

1427
00:43:09,200 --> 00:43:11,119
you some help internally as to to best

1428
00:43:11,119 --> 00:43:12,720
practices and how to do that

1429
00:43:12,720 --> 00:43:14,240
and they'll also be able to tell you how

1430
00:43:14,240 --> 00:43:16,000
best to engage them when you need to

1431
00:43:16,000 --> 00:43:18,400
and so talk to your your account reps on

1432
00:43:18,400 --> 00:43:19,599
that one i think

1433
00:43:19,599 --> 00:43:21,040
and they'll be able to provide more

1434
00:43:21,040 --> 00:43:22,880
tailored advice than i can on my

1435
00:43:22,880 --> 00:43:24,880
experience

1436
00:43:24,880 --> 00:43:27,920
okay so we can move to the next question

1437
00:43:27,920 --> 00:43:31,040
is identity is security so it's one of

1438
00:43:31,040 --> 00:43:32,560
the issues of things

1439
00:43:32,560 --> 00:43:36,240
in that cloud security how or

1440
00:43:36,240 --> 00:43:38,800
can organizations maximize their

1441
00:43:38,800 --> 00:43:39,520
identity

1442
00:43:39,520 --> 00:43:44,400
security posture uh what do you think

1443
00:43:44,400 --> 00:43:47,280
so that's a very broad question and i

1444
00:43:47,280 --> 00:43:48,880
could do an entire conference talk just

1445
00:43:48,880 --> 00:43:49,520
on that

1446
00:43:49,520 --> 00:43:52,400
um but some of the highlights i think um

1447
00:43:52,400 --> 00:43:54,560
one of the things that we often see

1448
00:43:54,560 --> 00:43:56,160
organizations fall down on when we're

1449
00:43:56,160 --> 00:43:58,079
talking about the cloud in particular

1450
00:43:58,079 --> 00:44:00,880
is they join their on-premises active

1451
00:44:00,880 --> 00:44:02,880
directory straight into the cloud

1452
00:44:02,880 --> 00:44:05,040
without necessarily assessing or

1453
00:44:05,040 --> 00:44:07,200
hardening their active directory first

1454
00:44:07,200 --> 00:44:08,960
um if you've got an organization who's

1455
00:44:08,960 --> 00:44:10,560
been around for a long time they've made

1456
00:44:10,560 --> 00:44:11,839
some acquisitions

1457
00:44:11,839 --> 00:44:13,359
their active directory might be a little

1458
00:44:13,359 --> 00:44:14,880
bit of a mess um

1459
00:44:14,880 --> 00:44:17,520
and so by far the easiest way to break

1460
00:44:17,520 --> 00:44:19,520
into the cloud in many cases is by

1461
00:44:19,520 --> 00:44:22,319
targeting the legacy on-premises active

1462
00:44:22,319 --> 00:44:23,359
directory estate

1463
00:44:23,359 --> 00:44:25,599
and using whatever link that is into the

1464
00:44:25,599 --> 00:44:27,520
cloud be it active directory federated

1465
00:44:27,520 --> 00:44:28,480
services

1466
00:44:28,480 --> 00:44:30,480
or maybe it's tied directly into azure

1467
00:44:30,480 --> 00:44:31,839
id whatever that is

1468
00:44:31,839 --> 00:44:34,640
and that's often a route that we take

1469
00:44:34,640 --> 00:44:35,839
that we exploit when we're doing

1470
00:44:35,839 --> 00:44:37,280
penetration testing

1471
00:44:37,280 --> 00:44:39,760
um so harden your active directory if

1472
00:44:39,760 --> 00:44:41,599
you're using that to authenticate to the

1473
00:44:41,599 --> 00:44:42,319
cloud

1474
00:44:42,319 --> 00:44:45,040
otherwise multi-factor authentication is

1475
00:44:45,040 --> 00:44:46,079
critical

1476
00:44:46,079 --> 00:44:48,480
get that turned on everywhere and where

1477
00:44:48,480 --> 00:44:49,520
you have

1478
00:44:49,520 --> 00:44:51,920
conditional access policies in azure id

1479
00:44:51,920 --> 00:44:53,520
make good use of them make it so that

1480
00:44:53,520 --> 00:44:54,480
people can

1481
00:44:54,480 --> 00:44:56,079
only authenticate from within your

1482
00:44:56,079 --> 00:44:57,839
corporate network or from

1483
00:44:57,839 --> 00:45:01,200
your corporate vpn or corporate devices

1484
00:45:01,200 --> 00:45:01,599
or

1485
00:45:01,599 --> 00:45:02,960
there's a number of features that you

1486
00:45:02,960 --> 00:45:04,640
can enable there to restrict where an

1487
00:45:04,640 --> 00:45:06,720
attack and connect them from

1488
00:45:06,720 --> 00:45:08,240
and that makes their life a lot harder

1489
00:45:08,240 --> 00:45:10,319
so turn all that on too i would

1490
00:45:10,319 --> 00:45:11,920
um takes a little bit of work often

1491
00:45:11,920 --> 00:45:13,520
because you've got to work out what you

1492
00:45:13,520 --> 00:45:14,960
can realistically do there

1493
00:45:14,960 --> 00:45:16,640
in your business context what you can

1494
00:45:16,640 --> 00:45:18,560
get away with and what's going to upset

1495
00:45:18,560 --> 00:45:19,200
people

1496
00:45:19,200 --> 00:45:21,040
but that's well worth looking at too i

1497
00:45:21,040 --> 00:45:22,800
think

1498
00:45:22,800 --> 00:45:26,079
okay so the next one we still have time

1499
00:45:26,079 --> 00:45:29,119
one way access to cloud resources uh

1500
00:45:29,119 --> 00:45:33,280
cloud accounts uh things like gh actions

1501
00:45:33,280 --> 00:45:36,319
uh is monetized is by mining

1502
00:45:36,319 --> 00:45:39,839
crypto this is probably a noisy thing

1503
00:45:39,839 --> 00:45:43,040
and alerting the legitimate owner quite

1504
00:45:43,040 --> 00:45:43,680
quickly

1505
00:45:43,680 --> 00:45:45,760
what might be the rough ratio with the

1506
00:45:45,760 --> 00:45:47,200
attack regarding

1507
00:45:47,200 --> 00:45:50,480
doing that kind of quick crap and runs

1508
00:45:50,480 --> 00:45:54,000
versus move covered long-term attacks

1509
00:45:54,000 --> 00:45:56,640
for example espionage and i twist my

1510
00:45:56,640 --> 00:45:58,400
tongue there

1511
00:45:58,400 --> 00:45:59,839
now i think i think we i get where we're

1512
00:45:59,839 --> 00:46:01,599
coming from at least um

1513
00:46:01,599 --> 00:46:03,839
so that's uh an interesting one and the

1514
00:46:03,839 --> 00:46:05,440
reason it's interesting is because

1515
00:46:05,440 --> 00:46:07,839
i don't think we have data to say for

1516
00:46:07,839 --> 00:46:09,599
the more sophisticated attacks

1517
00:46:09,599 --> 00:46:12,560
there's a little bit of a um a circular

1518
00:46:12,560 --> 00:46:14,079
sort of chicken and egg problem really

1519
00:46:14,079 --> 00:46:15,520
with cloud detection that

1520
00:46:15,520 --> 00:46:17,280
a lot of people base their detections on

1521
00:46:17,280 --> 00:46:18,720
what's in the attack framework

1522
00:46:18,720 --> 00:46:20,319
the attack framework only includes

1523
00:46:20,319 --> 00:46:21,520
techniques that we have threat

1524
00:46:21,520 --> 00:46:22,560
intelligence to show

1525
00:46:22,560 --> 00:46:24,960
happens and so if no one's looking for

1526
00:46:24,960 --> 00:46:26,240
them you don't get the threat

1527
00:46:26,240 --> 00:46:27,680
intelligence which means it doesn't make

1528
00:46:27,680 --> 00:46:29,280
its way into the mitre attack

1529
00:46:29,280 --> 00:46:30,800
and so a lot of people aren't looking

1530
00:46:30,800 --> 00:46:32,560
for it um

1531
00:46:32,560 --> 00:46:36,079
that said the broad majority of the

1532
00:46:36,079 --> 00:46:37,920
the cloud breaches that i see these days

1533
00:46:37,920 --> 00:46:39,920
are people doing stupid stuff

1534
00:46:39,920 --> 00:46:42,160
it's s3 buckets being left open or

1535
00:46:42,160 --> 00:46:43,920
elastic search databases

1536
00:46:43,920 --> 00:46:46,079
um it's credentials being stolen bitcoin

1537
00:46:46,079 --> 00:46:47,280
mining being done

1538
00:46:47,280 --> 00:46:49,280
um it's all these kinds of things and

1539
00:46:49,280 --> 00:46:50,640
you'd think that it would be nice and

1540
00:46:50,640 --> 00:46:51,680
easy to spot

1541
00:46:51,680 --> 00:46:54,560
people bitcoin mining um it actually

1542
00:46:54,560 --> 00:46:55,839
often takes people longer than you'd

1543
00:46:55,839 --> 00:46:56,480
expect

1544
00:46:56,480 --> 00:46:59,040
um one of my favorites is the the amount

1545
00:46:59,040 --> 00:47:00,480
of times i've seen people detect

1546
00:47:00,480 --> 00:47:03,280
crypto mining not by monitoring their

1547
00:47:03,280 --> 00:47:05,760
cloud trail logs in aws or their

1548
00:47:05,760 --> 00:47:08,960
um their actual telemetry sources uh but

1549
00:47:08,960 --> 00:47:10,880
by the finance department phoning up the

1550
00:47:10,880 --> 00:47:12,480
engineering team and saying you know why

1551
00:47:12,480 --> 00:47:14,800
is our cloud build 15 times as big as it

1552
00:47:14,800 --> 00:47:16,160
was last month

1553
00:47:16,160 --> 00:47:19,040
um so that's a little bit depressing aws

1554
00:47:19,040 --> 00:47:21,040
are getting better and i'm sure as urine

1555
00:47:21,040 --> 00:47:22,559
and google cloud are too i'm just less

1556
00:47:22,559 --> 00:47:23,280
familiar

1557
00:47:23,280 --> 00:47:25,599
at spotting that as it's happening and

1558
00:47:25,599 --> 00:47:26,880
they do that two ways

1559
00:47:26,880 --> 00:47:29,760
uh three ways actually aws guard duty

1560
00:47:29,760 --> 00:47:32,079
monitors for connections to known crypto

1561
00:47:32,079 --> 00:47:33,520
mining pool addresses

1562
00:47:33,520 --> 00:47:35,920
and so it alert based on that aws

1563
00:47:35,920 --> 00:47:36,880
themselves

1564
00:47:36,880 --> 00:47:39,200
keep a bit of an eye on how much compute

1565
00:47:39,200 --> 00:47:40,319
resource you're using

1566
00:47:40,319 --> 00:47:41,599
and if it looks like you're suddenly

1567
00:47:41,599 --> 00:47:43,839
using way more than you usually do

1568
00:47:43,839 --> 00:47:46,160
they might come for a chat about that um

1569
00:47:46,160 --> 00:47:47,040
and the

1570
00:47:47,040 --> 00:47:49,200
third approach is the most common way

1571
00:47:49,200 --> 00:47:50,400
that people do

1572
00:47:50,400 --> 00:47:52,960
bitcoin mining related breaches is by

1573
00:47:52,960 --> 00:47:54,720
stealing access keys off public github

1574
00:47:54,720 --> 00:47:56,319
repos as they're published

1575
00:47:56,319 --> 00:47:59,280
and aws themselves now monitor the

1576
00:47:59,280 --> 00:47:59,920
public

1577
00:47:59,920 --> 00:48:02,160
commit feed for github to look for

1578
00:48:02,160 --> 00:48:04,160
access keys that have been committed

1579
00:48:04,160 --> 00:48:06,480
and they revoke them as soon as they

1580
00:48:06,480 --> 00:48:07,280
spot them

1581
00:48:07,280 --> 00:48:10,319
and because the average time to

1582
00:48:10,319 --> 00:48:12,800
uh compromise on that between keys

1583
00:48:12,800 --> 00:48:13,680
hitting github

1584
00:48:13,680 --> 00:48:16,400
and attackers starting to cryptomine is

1585
00:48:16,400 --> 00:48:16,800
about

1586
00:48:16,800 --> 00:48:18,720
20 or 30 seconds these days because they

1587
00:48:18,720 --> 00:48:20,160
have automated deployment systems and

1588
00:48:20,160 --> 00:48:20,800
things

1589
00:48:20,800 --> 00:48:23,040
so aws monitor that feed and they revoke

1590
00:48:23,040 --> 00:48:25,359
keys and email you to say they have done

1591
00:48:25,359 --> 00:48:26,960
as soon as they see them hit the wild

1592
00:48:26,960 --> 00:48:28,480
and between all of that the situation is

1593
00:48:28,480 --> 00:48:29,599
getting better but i think there's

1594
00:48:29,599 --> 00:48:32,559
probably still more to be done

1595
00:48:33,359 --> 00:48:35,920
okay i think that was the last question

1596
00:48:35,920 --> 00:48:36,880
and

1597
00:48:36,880 --> 00:48:40,000
we can go for a break and then continue

1598
00:48:40,000 --> 00:48:41,119
with the next talk

1599
00:48:41,119 --> 00:48:43,040
thank you so much nick and it was

1600
00:48:43,040 --> 00:48:44,880
pleasure to have you here

1601
00:48:44,880 --> 00:48:46,480
well thank you for having me enjoy your

1602
00:48:46,480 --> 00:48:49,040
evening everyone

