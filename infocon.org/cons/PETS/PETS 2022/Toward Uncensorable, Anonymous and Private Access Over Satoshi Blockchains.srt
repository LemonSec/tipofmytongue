1
00:00:00,560 --> 00:00:02,480
hello everyone and thank you for your

2
00:00:02,480 --> 00:00:05,040
attendance i am ruben racavaren and i

3
00:00:05,040 --> 00:00:07,600
will be presenting toward uncensorable

4
00:00:07,600 --> 00:00:09,360
anonymous and private access over

5
00:00:09,360 --> 00:00:11,280
satoshi blockchains

6
00:00:11,280 --> 00:00:13,360
this research is a joint effort with my

7
00:00:13,360 --> 00:00:16,239
advisor bogdan carbuner from the casper

8
00:00:16,239 --> 00:00:19,760
lab at florida international university

9
00:00:19,760 --> 00:00:21,279
in this paper we looked at the

10
00:00:21,279 --> 00:00:23,039
censorship problem where a client's

11
00:00:23,039 --> 00:00:25,119
access to the internet is monitored and

12
00:00:25,119 --> 00:00:28,240
disrupted by a resourceful sensor

13
00:00:28,240 --> 00:00:30,000
the sensor has global monitoring

14
00:00:30,000 --> 00:00:32,238
capabilities which means they are able

15
00:00:32,238 --> 00:00:34,960
to perform global traffic correlation

16
00:00:34,960 --> 00:00:37,520
and identify communication exchanges of

17
00:00:37,520 --> 00:00:39,280
even the most advanced censorship

18
00:00:39,280 --> 00:00:42,160
resilient systems such as store

19
00:00:42,160 --> 00:00:43,920
in addition we consider that these

20
00:00:43,920 --> 00:00:45,840
powerful sensors only have full

21
00:00:45,840 --> 00:00:48,000
disruption capabilities within the

22
00:00:48,000 --> 00:00:49,600
censored regions

23
00:00:49,600 --> 00:00:51,920
which means outside publishers cannot be

24
00:00:51,920 --> 00:00:54,320
targeted for disruption

25
00:00:54,320 --> 00:00:56,320
unfortunately even this partial

26
00:00:56,320 --> 00:00:58,320
disruption capability is enough to

27
00:00:58,320 --> 00:01:00,719
completely sensor data access because

28
00:01:00,719 --> 00:01:02,879
the sensor only really needs to disrupt

29
00:01:02,879 --> 00:01:05,680
one communication endpoint

30
00:01:05,680 --> 00:01:07,119
to solve this problem we use

31
00:01:07,119 --> 00:01:09,360
cryptocurrency blockchains

32
00:01:09,360 --> 00:01:11,520
this is not a noble approach however

33
00:01:11,520 --> 00:01:13,680
most existing solutions use blockchains

34
00:01:13,680 --> 00:01:15,520
that provide very little collateral

35
00:01:15,520 --> 00:01:16,640
damage

36
00:01:16,640 --> 00:01:18,640
use embeddings with inefficient cost

37
00:01:18,640 --> 00:01:21,040
schemas or are simply not scalable

38
00:01:21,040 --> 00:01:22,720
enough as i will show in the following

39
00:01:22,720 --> 00:01:24,640
slides

40
00:01:24,640 --> 00:01:27,040
instead we use what we call satoshi

41
00:01:27,040 --> 00:01:28,880
networks these networks include

42
00:01:28,880 --> 00:01:30,720
cryptocurrencies such as bitcoin

43
00:01:30,720 --> 00:01:33,280
litecoin dodge coin and many others

44
00:01:33,280 --> 00:01:34,799
we choose to study the satoshi

45
00:01:34,799 --> 00:01:36,400
blockchains because they currently have

46
00:01:36,400 --> 00:01:38,880
the largest market capitalization and so

47
00:01:38,880 --> 00:01:40,560
they potentially represent the largest

48
00:01:40,560 --> 00:01:44,079
collateral damage to would-be sensors

49
00:01:44,079 --> 00:01:46,079
so in summary our solution you will

50
00:01:46,079 --> 00:01:47,840
builds on top of satoshi networks and

51
00:01:47,840 --> 00:01:50,000
blockchains and aims to provide

52
00:01:50,000 --> 00:01:52,399
unsensitive anonymous access even in the

53
00:01:52,399 --> 00:01:54,399
presence of an adversary able to perform

54
00:01:54,399 --> 00:01:57,040
global network traffic correlations

55
00:01:57,040 --> 00:01:58,960
however in order to achieve this we need

56
00:01:58,960 --> 00:02:01,600
to overcome several challenges

57
00:02:01,600 --> 00:02:03,439
first we need to satisfy satoshi

58
00:02:03,439 --> 00:02:04,640
blockchain

59
00:02:04,640 --> 00:02:06,799
constraints otherwise we can't even

60
00:02:06,799 --> 00:02:08,800
participate on their network

61
00:02:08,800 --> 00:02:10,878
as mentioned we also need to improve the

62
00:02:10,878 --> 00:02:12,560
writing throughput and good put of

63
00:02:12,560 --> 00:02:14,080
previous writing solutions at a

64
00:02:14,080 --> 00:02:15,920
reasonable cost

65
00:02:15,920 --> 00:02:17,840
and finally we also need to provide a

66
00:02:17,840 --> 00:02:19,599
private and efficient data retrieval

67
00:02:19,599 --> 00:02:22,239
mechanism to access data possibly stored

68
00:02:22,239 --> 00:02:25,440
among millions of transactions

69
00:02:25,440 --> 00:02:27,520
now satoshi blockchains impose a swift

70
00:02:27,520 --> 00:02:29,200
of constraints

71
00:02:29,200 --> 00:02:30,800
some of these constraints are public

72
00:02:30,800 --> 00:02:32,239
knowledge while others we had to

73
00:02:32,239 --> 00:02:33,920
discover empirically during our

74
00:02:33,920 --> 00:02:35,599
experiments

75
00:02:35,599 --> 00:02:37,599
for instance the maximum allowed size of

76
00:02:37,599 --> 00:02:40,080
a transaction is 100 kilobytes while the

77
00:02:40,080 --> 00:02:42,400
maximum size of a block is one megabyte

78
00:02:42,400 --> 00:02:45,040
ignoring segregated weakness

79
00:02:45,040 --> 00:02:46,640
we also need to take into account this

80
00:02:46,640 --> 00:02:48,560
iteration restrictions on the number of

81
00:02:48,560 --> 00:02:50,560
inputs and outputs confirmation times

82
00:02:50,560 --> 00:02:52,800
length of unconfirmed transaction chains

83
00:02:52,800 --> 00:02:55,680
and even minimum transaction fees

84
00:02:55,680 --> 00:02:57,120
these are only examples of the

85
00:02:57,120 --> 00:02:58,800
constraints that we had to consider but

86
00:02:58,800 --> 00:03:00,720
we perform a more thorough constraint

87
00:03:00,720 --> 00:03:04,080
documentation on our paper

88
00:03:04,080 --> 00:03:05,760
another important challenge that we need

89
00:03:05,760 --> 00:03:07,519
to address is to develop blockchain

90
00:03:07,519 --> 00:03:09,120
writing solutions that have high

91
00:03:09,120 --> 00:03:10,959
throughput and good put

92
00:03:10,959 --> 00:03:12,879
for this research we define throughput

93
00:03:12,879 --> 00:03:14,800
to be the size of data made available on

94
00:03:14,800 --> 00:03:17,200
the blockchain per unit time

95
00:03:17,200 --> 00:03:19,280
similarly we define good put to be the

96
00:03:19,280 --> 00:03:21,120
ratio between the total size of embedded

97
00:03:21,120 --> 00:03:22,560
data to the total size of the

98
00:03:22,560 --> 00:03:24,560
transaction construct

99
00:03:24,560 --> 00:03:26,239
as we can see in this table most

100
00:03:26,239 --> 00:03:28,319
existing solutions either can only embed

101
00:03:28,319 --> 00:03:30,400
a few bytes per transaction

102
00:03:30,400 --> 00:03:32,400
have low good put on throughput

103
00:03:32,400 --> 00:03:35,440
or have a very high storage cost

104
00:03:35,440 --> 00:03:37,840
one exception to this is titanos our

105
00:03:37,840 --> 00:03:39,120
previous work

106
00:03:39,120 --> 00:03:41,519
however titanos can only embed

107
00:03:41,519 --> 00:03:44,640
1600 bytes in a transaction around and

108
00:03:44,640 --> 00:03:46,720
has a relatively small throughput and

109
00:03:46,720 --> 00:03:50,640
therefore lacks the desired scalability

110
00:03:50,640 --> 00:03:52,560
to address these challenges we introduce

111
00:03:52,560 --> 00:03:55,280
max ray transactions a max3 transaction

112
00:03:55,280 --> 00:03:57,280
consists of a funding transaction with

113
00:03:57,280 --> 00:04:00,400
one input and 2930

114
00:04:00,400 --> 00:04:02,879
outputs which is the maximum allowed

115
00:04:02,879 --> 00:04:04,799
one of these outputs sends the remaining

116
00:04:04,799 --> 00:04:07,439
balance to the writing a writer's wallet

117
00:04:07,439 --> 00:04:09,080
but each of the other

118
00:04:09,080 --> 00:04:12,480
2936 outputs found an input in an

119
00:04:12,480 --> 00:04:14,480
expanding transaction

120
00:04:14,480 --> 00:04:17,798
where each input script stores up to

121
00:04:17,798 --> 00:04:20,959
1568 bytes of data

122
00:04:20,959 --> 00:04:22,479
now each of these suspending

123
00:04:22,479 --> 00:04:25,600
transactions has 59 inputs which again

124
00:04:25,600 --> 00:04:27,759
it is the maximum allowed and so a

125
00:04:27,759 --> 00:04:30,960
funding transaction funds up to 49

126
00:04:30,960 --> 00:04:33,120
spending transactions

127
00:04:33,120 --> 00:04:35,199
as a consequence the good put of this

128
00:04:35,199 --> 00:04:37,600
max rate construct is about 4.6

129
00:04:37,600 --> 00:04:39,759
megabytes

130
00:04:39,759 --> 00:04:41,440
also notice that we are able to send

131
00:04:41,440 --> 00:04:43,120
this whole construct after only one

132
00:04:43,120 --> 00:04:45,520
confirmation boundary

133
00:04:45,520 --> 00:04:47,680
that is one mining epoch

134
00:04:47,680 --> 00:04:49,280
effectively this means we need to

135
00:04:49,280 --> 00:04:51,680
confirm the funding transaction before

136
00:04:51,680 --> 00:04:53,680
being able to send the 49 spending

137
00:04:53,680 --> 00:04:56,400
transactions all at once

138
00:04:56,400 --> 00:04:58,880
the peer-to-peer cryptocurrency network

139
00:04:58,880 --> 00:05:01,280
then takes care of broadcasting our data

140
00:05:01,280 --> 00:05:02,800
to all the standard compliant

141
00:05:02,800 --> 00:05:05,280
participating nodes

142
00:05:05,280 --> 00:05:07,280
it turns out that the max rate construct

143
00:05:07,280 --> 00:05:08,960
is generalizable and it actually

144
00:05:08,960 --> 00:05:10,560
provides the scalability that we're

145
00:05:10,560 --> 00:05:12,080
looking for

146
00:05:12,080 --> 00:05:14,240
the main observation here is that we can

147
00:05:14,240 --> 00:05:16,479
always use preparing transactions to

148
00:05:16,479 --> 00:05:18,720
unlock a maximum number of funding

149
00:05:18,720 --> 00:05:21,120
transactions in one confirmation

150
00:05:21,120 --> 00:05:23,120
boundary

151
00:05:23,120 --> 00:05:25,440
this design achieves a maximum number of

152
00:05:25,440 --> 00:05:27,280
transactions to be sent to the network

153
00:05:27,280 --> 00:05:29,120
without limitations from the number of

154
00:05:29,120 --> 00:05:30,960
unconfirmed transactions

155
00:05:30,960 --> 00:05:33,199
however we are still limited by the size

156
00:05:33,199 --> 00:05:35,440
of the block network congestion and so

157
00:05:35,440 --> 00:05:36,880
on

158
00:05:36,880 --> 00:05:39,520
as a consequence in this case the second

159
00:05:39,520 --> 00:05:41,600
confirmation boundary does not line up

160
00:05:41,600 --> 00:05:43,840
with the second mining epoch

161
00:05:43,840 --> 00:05:45,600
nevertheless as soon as some of our

162
00:05:45,600 --> 00:05:47,840
funding transactions get confirmed we

163
00:05:47,840 --> 00:05:49,600
can start sending the corresponding

164
00:05:49,600 --> 00:05:52,080
portion of max retransactions all at the

165
00:05:52,080 --> 00:05:53,680
same time

166
00:05:53,680 --> 00:05:55,120
as you can see after only two

167
00:05:55,120 --> 00:05:56,960
confirmation boundaries we are already

168
00:05:56,960 --> 00:06:01,759
at 13.5 gigabytes maximum good put

169
00:06:01,759 --> 00:06:03,600
now we have used max3 transactions to

170
00:06:03,600 --> 00:06:06,160
build the new web storage system only

171
00:06:06,160 --> 00:06:08,240
however we still need a mechanism to

172
00:06:08,240 --> 00:06:10,160
organize this content for easily

173
00:06:10,160 --> 00:06:12,479
retrieval and reconstruction

174
00:06:12,479 --> 00:06:14,479
for this we design the special types of

175
00:06:14,479 --> 00:06:16,639
transactions that index the persistent

176
00:06:16,639 --> 00:06:18,080
content

177
00:06:18,080 --> 00:06:20,160
each block shown here is stored in a

178
00:06:20,160 --> 00:06:22,400
transaction and you will support several

179
00:06:22,400 --> 00:06:24,960
types of content destroying transactions

180
00:06:24,960 --> 00:06:27,039
all content the store is signed and can

181
00:06:27,039 --> 00:06:30,160
also be encrypted if desired

182
00:06:30,160 --> 00:06:32,560
first dir entries correspond to

183
00:06:32,560 --> 00:06:34,880
directories or files that store content

184
00:06:34,880 --> 00:06:37,120
all your web content is stored under a

185
00:06:37,120 --> 00:06:39,039
root directory controlled by the content

186
00:06:39,039 --> 00:06:40,639
publisher

187
00:06:40,639 --> 00:06:43,440
op transactions allow publishers to add

188
00:06:43,440 --> 00:06:45,280
other directories or content for

189
00:06:45,280 --> 00:06:47,759
instance this op entry creates this

190
00:06:47,759 --> 00:06:50,400
directory for alice and this other one

191
00:06:50,400 --> 00:06:52,080
creates a directory that will store

192
00:06:52,080 --> 00:06:54,960
public key certificates

193
00:06:54,960 --> 00:06:57,120
now under alice's directory one can

194
00:06:57,120 --> 00:07:01,039
store files and also as dir entries and

195
00:07:01,039 --> 00:07:03,759
these differences store the id of the

196
00:07:03,759 --> 00:07:05,840
max rate transaction that restores the

197
00:07:05,840 --> 00:07:07,280
content

198
00:07:07,280 --> 00:07:09,759
in addition op transactions can also be

199
00:07:09,759 --> 00:07:12,000
chained to allow content producers to

200
00:07:12,000 --> 00:07:14,639
sort of modify their content

201
00:07:14,639 --> 00:07:16,800
explicitly op transaction chains can

202
00:07:16,800 --> 00:07:19,360
restore historical log of content

203
00:07:19,360 --> 00:07:22,160
modifications made across time

204
00:07:22,160 --> 00:07:24,319
for instance this transaction points to

205
00:07:24,319 --> 00:07:26,960
an updated content for file f

206
00:07:26,960 --> 00:07:29,680
that consumers can similarly search for

207
00:07:29,680 --> 00:07:32,560
and reconstruct

208
00:07:32,560 --> 00:07:34,080
now here is the same table that i showed

209
00:07:34,080 --> 00:07:36,319
before including the uweb results it

210
00:07:36,319 --> 00:07:39,039
turns out that uweb's max retransactions

211
00:07:39,039 --> 00:07:40,880
achieve a payload that is about four

212
00:07:40,880 --> 00:07:43,199
orders of magnitude better than titans

213
00:07:43,199 --> 00:07:45,520
which is the current state of the art

214
00:07:45,520 --> 00:07:47,440
and also achieves a writing throughput

215
00:07:47,440 --> 00:07:49,199
of about three orders of magnitude

216
00:07:49,199 --> 00:07:51,520
better than the state of the art

217
00:07:51,520 --> 00:07:52,879
a more detailed treatment of these

218
00:07:52,879 --> 00:07:56,000
results can be found in our paper

219
00:07:56,000 --> 00:07:58,400
now we also perform several experiments

220
00:07:58,400 --> 00:08:01,680
all of them on the real litecoin network

221
00:08:01,680 --> 00:08:04,160
we use litecoin because its network is

222
00:08:04,160 --> 00:08:05,840
equivalent to bitcoin

223
00:08:05,840 --> 00:08:08,080
however the much lower cost allowed us

224
00:08:08,080 --> 00:08:09,759
to make a better use of our limited

225
00:08:09,759 --> 00:08:10,960
funding

226
00:08:10,960 --> 00:08:12,879
in the following slides i will only

227
00:08:12,879 --> 00:08:15,599
cover our longitudinal news feed writing

228
00:08:15,599 --> 00:08:19,199
and blockchain stress tests experiments

229
00:08:19,199 --> 00:08:20,879
however we include more details and

230
00:08:20,879 --> 00:08:24,160
simulation results in the paper

231
00:08:24,160 --> 00:08:26,080
in the longitudinal newsfeed writing

232
00:08:26,080 --> 00:08:28,000
experiment we published an average of

233
00:08:28,000 --> 00:08:32,159
about 400 bbc articles per day for 134

234
00:08:32,159 --> 00:08:33,760
consecutive days

235
00:08:33,760 --> 00:08:36,399
in total we published around 53 000

236
00:08:36,399 --> 00:08:38,399
articles with a total size of 51

237
00:08:38,399 --> 00:08:40,479
megabytes and a total cost of

238
00:08:40,479 --> 00:08:42,880
around half a litecoin

239
00:08:42,880 --> 00:08:45,120
in this graph we have plotted the first

240
00:08:45,120 --> 00:08:47,360
confirmation time versus cost and size

241
00:08:47,360 --> 00:08:49,120
of the published data

242
00:08:49,120 --> 00:08:51,200
darker adults mean larger and more

243
00:08:51,200 --> 00:08:53,839
expensive publications and we can see

244
00:08:53,839 --> 00:08:56,240
that these darker dots are all over the

245
00:08:56,240 --> 00:08:57,920
place which means that the cost of

246
00:08:57,920 --> 00:09:00,080
writing does not have a significant

247
00:09:00,080 --> 00:09:02,959
impact on the time to first confirmation

248
00:09:02,959 --> 00:09:05,279
in fact this graph suggests that

249
00:09:05,279 --> 00:09:08,000
confirmation time may be more dependent

250
00:09:08,000 --> 00:09:10,560
on other factors perhaps like network

251
00:09:10,560 --> 00:09:14,640
congestion rather than cost

252
00:09:14,640 --> 00:09:16,160
for the blockchain stress that

253
00:09:16,160 --> 00:09:18,640
experiment we packaged 41 censorship

254
00:09:18,640 --> 00:09:21,200
resistant tools including source code

255
00:09:21,200 --> 00:09:24,480
for tor stegotaurus and many others

256
00:09:24,480 --> 00:09:26,160
and published them on the litecoin

257
00:09:26,160 --> 00:09:27,360
blockchain

258
00:09:27,360 --> 00:09:30,720
in total we persisted 217 megabytes of

259
00:09:30,720 --> 00:09:34,560
code for the total cost of 2.5 litecoin

260
00:09:34,560 --> 00:09:37,040
we sent the three largest projects with

261
00:09:37,040 --> 00:09:39,839
a total of 140 megabytes in the same

262
00:09:39,839 --> 00:09:41,920
u-web content push

263
00:09:41,920 --> 00:09:44,240
and send the rest of the projects in two

264
00:09:44,240 --> 00:09:47,120
different pushes on different dates

265
00:09:47,120 --> 00:09:49,120
and with it is to have a better control

266
00:09:49,120 --> 00:09:50,399
over our

267
00:09:50,399 --> 00:09:53,279
experiment uh impact

268
00:09:53,279 --> 00:09:56,800
the 140 megabyte experiment lasted 7.6

269
00:09:56,800 --> 00:09:58,800
hours from the first and confirmed max

270
00:09:58,800 --> 00:10:01,519
retransactions that we sent

271
00:10:01,519 --> 00:10:03,760
and observed in the mempo until the last

272
00:10:03,760 --> 00:10:06,959
one received at least one confirmation

273
00:10:06,959 --> 00:10:09,040
this graph shows the violin plot's

274
00:10:09,040 --> 00:10:11,200
confirmation times a during and before

275
00:10:11,200 --> 00:10:12,720
our experiment

276
00:10:12,720 --> 00:10:14,560
we measured confirmation times for

277
00:10:14,560 --> 00:10:17,200
transactions of several fee rates we can

278
00:10:17,200 --> 00:10:18,800
see that confirmation times for

279
00:10:18,800 --> 00:10:20,640
financial transactions are essentially

280
00:10:20,640 --> 00:10:22,240
unimpacted

281
00:10:22,240 --> 00:10:24,560
thus this graph suggests that larger

282
00:10:24,560 --> 00:10:26,959
scale writing in the blockchain has no

283
00:10:26,959 --> 00:10:29,279
impact on financial transactions of any

284
00:10:29,279 --> 00:10:30,480
fee rate

285
00:10:30,480 --> 00:10:33,360
however max retransactions do experience

286
00:10:33,360 --> 00:10:37,120
a significant delay of up to 27 000

287
00:10:37,120 --> 00:10:38,959
seconds

288
00:10:38,959 --> 00:10:40,880
another interesting metric that we

289
00:10:40,880 --> 00:10:42,800
captured was the impact of our system on

290
00:10:42,800 --> 00:10:44,480
the nethers mempool

291
00:10:44,480 --> 00:10:46,399
this graph shows the timeline of the

292
00:10:46,399 --> 00:10:48,320
mempool size in terms of the number of

293
00:10:48,320 --> 00:10:50,800
transactions and total byte size during

294
00:10:50,800 --> 00:10:53,680
our three writing operations

295
00:10:53,680 --> 00:10:55,839
we split our experiment in three phases

296
00:10:55,839 --> 00:10:57,519
to better control the impact over the

297
00:10:57,519 --> 00:10:58,640
network

298
00:10:58,640 --> 00:11:00,720
our experiments generate substantial

299
00:11:00,720 --> 00:11:02,560
spikes in terms of both number of

300
00:11:02,560 --> 00:11:05,040
transactions and total mempool size

301
00:11:05,040 --> 00:11:07,440
however the mempool is vacated linearly

302
00:11:07,440 --> 00:11:08,720
which implies that higher fee

303
00:11:08,720 --> 00:11:11,519
transactions get prioritized correctly

304
00:11:11,519 --> 00:11:12,959
and our actions do not produce a

305
00:11:12,959 --> 00:11:15,519
degradation at current network usage

306
00:11:15,519 --> 00:11:16,800
levels

307
00:11:16,800 --> 00:11:18,800
so on the previous slide we saw how our

308
00:11:18,800 --> 00:11:20,959
system does not interfere with financial

309
00:11:20,959 --> 00:11:23,120
transaction confirmation times

310
00:11:23,120 --> 00:11:25,040
and in this slide we have shown that in

311
00:11:25,040 --> 00:11:26,880
practice our system does not disrupt the

312
00:11:26,880 --> 00:11:29,680
underlying cryptocurrency gossip network

313
00:11:29,680 --> 00:11:31,600
so thus we have effectively covered all

314
00:11:31,600 --> 00:11:34,240
relevant areas of impact that our system

315
00:11:34,240 --> 00:11:36,480
could have influence on

316
00:11:36,480 --> 00:11:38,800
in conclusion we have shown that uweb

317
00:11:38,800 --> 00:11:40,720
improves state-of-the-art data running

318
00:11:40,720 --> 00:11:42,800
techniques in commercial satoshi

319
00:11:42,800 --> 00:11:44,079
blockchains

320
00:11:44,079 --> 00:11:46,560
uweb also provides private access to how

321
00:11:46,560 --> 00:11:49,120
to sensor content we have shown results

322
00:11:49,120 --> 00:11:51,680
of large scale writing experiments and

323
00:11:51,680 --> 00:11:54,399
we have shown that our techniques have

324
00:11:54,399 --> 00:11:56,320
very low impact on the cryptocurrency

325
00:11:56,320 --> 00:11:58,000
ecosystem

326
00:11:58,000 --> 00:12:00,399
and with that i will now take any

327
00:12:00,399 --> 00:12:04,680
questions that you may have

