1
00:00:00,080 --> 00:00:02,560
hello my name is johann berger i'm a phd

2
00:00:02,560 --> 00:00:04,400
student in the syslab at penn state

3
00:00:04,400 --> 00:00:06,399
where i'm advised by professor patrick

4
00:00:06,399 --> 00:00:07,839
mcdaniel

5
00:00:07,839 --> 00:00:09,840
today i will be presenting how to build

6
00:00:09,840 --> 00:00:12,799
a privacy preserving smart camera system

7
00:00:12,799 --> 00:00:15,280
a work that was done with my colleagues

8
00:00:15,280 --> 00:00:17,600
acknowledge here below

9
00:00:17,600 --> 00:00:18,640
first

10
00:00:18,640 --> 00:00:21,039
let's see what is a smart camera system

11
00:00:21,039 --> 00:00:23,600
smart camera system are used by people

12
00:00:23,600 --> 00:00:25,920
to remotely monitor their own while they

13
00:00:25,920 --> 00:00:28,080
are away for instance

14
00:00:28,080 --> 00:00:30,400
this system are very convenient

15
00:00:30,400 --> 00:00:33,120
and also very popular as we can see here

16
00:00:33,120 --> 00:00:35,360
on the right on this map of the united

17
00:00:35,360 --> 00:00:37,440
states where each point represents a

18
00:00:37,440 --> 00:00:39,920
location of some of the devices

19
00:00:39,920 --> 00:00:43,280
sold by ring an amazon company

20
00:00:43,280 --> 00:00:45,039
however the use

21
00:00:45,039 --> 00:00:46,640
is not without loss

22
00:00:46,640 --> 00:00:48,719
and over the past few years we have seen

23
00:00:48,719 --> 00:00:51,120
different reports about there about

24
00:00:51,120 --> 00:00:53,360
issues and privacy concerns about this

25
00:00:53,360 --> 00:00:54,559
system

26
00:00:54,559 --> 00:00:56,399
here are for example

27
00:00:56,399 --> 00:00:58,640
i would like you to focus on this

28
00:00:58,640 --> 00:01:00,239
example

29
00:01:00,239 --> 00:01:02,559
question the amount of trust that you

30
00:01:02,559 --> 00:01:06,000
users need to place into device and

31
00:01:06,000 --> 00:01:08,320
cloud provider

32
00:01:08,320 --> 00:01:10,720
for instance users might be worried by

33
00:01:10,720 --> 00:01:13,360
the fact that their device provider is

34
00:01:13,360 --> 00:01:15,040
partnering with law enforcement to

35
00:01:15,040 --> 00:01:17,200
facilitate video sharing

36
00:01:17,200 --> 00:01:20,320
or that employees of some companies are

37
00:01:20,320 --> 00:01:22,640
abusing their access to see user's

38
00:01:22,640 --> 00:01:24,720
videos

39
00:01:24,720 --> 00:01:27,040
what all this example all this example

40
00:01:27,040 --> 00:01:29,439
demonstrate is the fact that users do

41
00:01:29,439 --> 00:01:31,439
not have control over their data and

42
00:01:31,439 --> 00:01:34,240
over the system

43
00:01:35,040 --> 00:01:38,479
so we would like to build a privacy

44
00:01:38,479 --> 00:01:40,799
preserving smart camera system

45
00:01:40,799 --> 00:01:43,119
here is a spread model in which we are

46
00:01:43,119 --> 00:01:45,360
going to operate for that we are only

47
00:01:45,360 --> 00:01:47,360
going to consider the smart camera and

48
00:01:47,360 --> 00:01:49,759
the device controlled by the owner to be

49
00:01:49,759 --> 00:01:52,640
trusted anyone else and any other party

50
00:01:52,640 --> 00:01:55,360
is considered as interested in our

51
00:01:55,360 --> 00:01:57,280
design

52
00:01:57,280 --> 00:01:58,880
to build such a privacy programming

53
00:01:58,880 --> 00:02:00,960
smart camera system we need to return

54
00:02:00,960 --> 00:02:02,799
control to users

55
00:02:02,799 --> 00:02:04,640
and at the same time we still want to

56
00:02:04,640 --> 00:02:07,119
support commercial features that are the

57
00:02:07,119 --> 00:02:09,119
main reason why this system are so

58
00:02:09,119 --> 00:02:10,800
popular

59
00:02:10,800 --> 00:02:13,120
it's going to be this balance between

60
00:02:13,120 --> 00:02:15,440
security and privacy on one hand unlike

61
00:02:15,440 --> 00:02:17,440
usability on the other hand that is hard

62
00:02:17,440 --> 00:02:19,040
to achieve

63
00:02:19,040 --> 00:02:20,879
for instance if we want to return

64
00:02:20,879 --> 00:02:23,520
control to users we would like to use

65
00:02:23,520 --> 00:02:26,000
end-to-end encryption in our system if

66
00:02:26,000 --> 00:02:28,160
we do so we are effectively returning

67
00:02:28,160 --> 00:02:30,800
control to users as

68
00:02:30,800 --> 00:02:32,800
owners are the only one able to access

69
00:02:32,800 --> 00:02:34,160
the videos

70
00:02:34,160 --> 00:02:37,200
however using end-to-end encryption

71
00:02:37,200 --> 00:02:39,840
introduce new questions and challenges

72
00:02:39,840 --> 00:02:42,480
such as how do we establish root of

73
00:02:42,480 --> 00:02:45,280
trust between devices in such a setting

74
00:02:45,280 --> 00:02:47,680
where we can only trust the owner and no

75
00:02:47,680 --> 00:02:48,879
one else

76
00:02:48,879 --> 00:02:51,599
also how do we manage all those

77
00:02:51,599 --> 00:02:54,720
encryption keys especially to support

78
00:02:54,720 --> 00:02:57,360
commercial feature features such as

79
00:02:57,360 --> 00:02:59,360
delegation

80
00:02:59,360 --> 00:03:01,360
now we are going to focus on those two

81
00:03:01,360 --> 00:03:03,200
main issues

82
00:03:03,200 --> 00:03:05,280
first how can we establish route of

83
00:03:05,280 --> 00:03:07,840
trust between devices that are unknown

84
00:03:07,840 --> 00:03:09,360
to each other

85
00:03:09,360 --> 00:03:12,159
to do so we would like to establish a

86
00:03:12,159 --> 00:03:15,200
secure communication channel between

87
00:03:15,200 --> 00:03:17,440
those devices so that they can

88
00:03:17,440 --> 00:03:20,720
further on negotiate encryption keys or

89
00:03:20,720 --> 00:03:23,440
secrets for the life cycle of the rest

90
00:03:23,440 --> 00:03:25,280
of the system

91
00:03:25,280 --> 00:03:27,840
we would like to use authenticated

92
00:03:27,840 --> 00:03:30,799
defeatment key exchange to do so

93
00:03:30,799 --> 00:03:33,360
we are going to do it the following way

94
00:03:33,360 --> 00:03:35,200
the smartphone and the smart camera

95
00:03:35,200 --> 00:03:37,360
system are going to pair through

96
00:03:37,360 --> 00:03:39,280
bluetooth or wifi

97
00:03:39,280 --> 00:03:41,120
and then we are additionally going to

98
00:03:41,120 --> 00:03:44,000
use an out of burn physical channel to

99
00:03:44,000 --> 00:03:46,720
verify that each device is actually

100
00:03:46,720 --> 00:03:48,799
speaking and communicating to the right

101
00:03:48,799 --> 00:03:50,879
device

102
00:03:50,879 --> 00:03:52,799
this is to mitigate any

103
00:03:52,799 --> 00:03:55,200
man-in-the-middle attack

104
00:03:55,200 --> 00:03:56,959
in our proof of concept we use a

105
00:03:56,959 --> 00:03:58,560
physical channel

106
00:03:58,560 --> 00:04:00,959
which is a phys your channel

107
00:04:00,959 --> 00:04:03,920
by using qr codes where that we flash

108
00:04:03,920 --> 00:04:07,200
and in which we embed some details

109
00:04:07,200 --> 00:04:09,599
so this is how we establish this secure

110
00:04:09,599 --> 00:04:11,840
communication channel from where we can

111
00:04:11,840 --> 00:04:14,000
start building the right the rest of the

112
00:04:14,000 --> 00:04:15,920
route of trust for this for the rest of

113
00:04:15,920 --> 00:04:17,600
the system

114
00:04:17,600 --> 00:04:20,079
now let's see

115
00:04:20,079 --> 00:04:21,600
how in our

116
00:04:21,600 --> 00:04:24,479
end-to-end encryption system we can

117
00:04:24,479 --> 00:04:25,680
manage

118
00:04:25,680 --> 00:04:28,400
all these encryption keys

119
00:04:28,400 --> 00:04:30,479
for that we are going to use a binary

120
00:04:30,479 --> 00:04:33,759
key tree that is built the following way

121
00:04:33,759 --> 00:04:36,400
from a seed key we are going to be able

122
00:04:36,400 --> 00:04:38,880
to derive lower keys in the tree by

123
00:04:38,880 --> 00:04:41,520
applying a hash base key derivation

124
00:04:41,520 --> 00:04:43,440
function or htdf

125
00:04:43,440 --> 00:04:46,400
this http function is a one-way function

126
00:04:46,400 --> 00:04:48,960
this means that we can only derive lower

127
00:04:48,960 --> 00:04:51,199
keys from upper keys and not the other

128
00:04:51,199 --> 00:04:52,960
way around in this key tree this is

129
00:04:52,960 --> 00:04:55,280
going to be an important aspect for the

130
00:04:55,280 --> 00:04:57,040
rest of the system and for its privacy

131
00:04:57,040 --> 00:04:59,520
guarantees

132
00:04:59,600 --> 00:05:02,960
so in our system

133
00:05:03,360 --> 00:05:05,600
recall that after initialization and

134
00:05:05,600 --> 00:05:08,960
pairing we have the smart camera

135
00:05:08,960 --> 00:05:11,440
and the smartphone connected

136
00:05:11,440 --> 00:05:13,919
through a secure communication channel

137
00:05:13,919 --> 00:05:15,680
through this through this channel they

138
00:05:15,680 --> 00:05:18,240
are going to negotiate a c key

139
00:05:18,240 --> 00:05:20,400
that is going to be the root of this key

140
00:05:20,400 --> 00:05:21,199
tree

141
00:05:21,199 --> 00:05:22,080
then

142
00:05:22,080 --> 00:05:24,400
this system can go on their own way to

143
00:05:24,400 --> 00:05:26,800
derive the lower keys as they know the

144
00:05:26,800 --> 00:05:29,440
hkdi function

145
00:05:29,440 --> 00:05:31,600
at the very bottom of this key tree that

146
00:05:31,600 --> 00:05:34,080
we are able to derive

147
00:05:34,080 --> 00:05:35,919
are like the keys that are going to be

148
00:05:35,919 --> 00:05:38,080
used to include video frames that are in

149
00:05:38,080 --> 00:05:39,680
the same epoch

150
00:05:39,680 --> 00:05:42,400
an epoch in our system is just a fixed

151
00:05:42,400 --> 00:05:45,120
time window or interval

152
00:05:45,120 --> 00:05:47,280
and in our proof of concept

153
00:05:47,280 --> 00:05:49,520
this length is of

154
00:05:49,520 --> 00:05:51,039
10 seconds

155
00:05:51,039 --> 00:05:54,000
so this means that every 10 seconds the

156
00:05:54,000 --> 00:05:56,400
keys are rotated

157
00:05:56,400 --> 00:05:59,600
and so thanks to our key tree structure

158
00:05:59,600 --> 00:06:02,319
we are able to efficiently manage the

159
00:06:02,319 --> 00:06:05,199
keys and store them as we can derive

160
00:06:05,199 --> 00:06:07,280
them from upper keys

161
00:06:07,280 --> 00:06:10,639
and we are also able to support

162
00:06:10,639 --> 00:06:13,120
key rotation

163
00:06:13,120 --> 00:06:16,160
additionally this k3 structure is very

164
00:06:16,160 --> 00:06:18,880
convenient to support another popular

165
00:06:18,880 --> 00:06:21,440
commercial feature which is delegation

166
00:06:21,440 --> 00:06:23,919
and in our system we are able to

167
00:06:23,919 --> 00:06:27,440
do a very fine grain delegation

168
00:06:27,440 --> 00:06:29,600
let's say for instance that our that the

169
00:06:29,600 --> 00:06:32,400
owner would like to share some videos

170
00:06:32,400 --> 00:06:34,720
with some shared users

171
00:06:34,720 --> 00:06:37,039
what to do so they only need to figure

172
00:06:37,039 --> 00:06:40,000
out which portion of the key tree

173
00:06:40,000 --> 00:06:41,360
they need to

174
00:06:41,360 --> 00:06:44,160
share with the delegate

175
00:06:44,160 --> 00:06:46,160
as illustrated here

176
00:06:46,160 --> 00:06:48,800
on the slide if the owner wanted to

177
00:06:48,800 --> 00:06:49,840
share

178
00:06:49,840 --> 00:06:51,680
the red portion

179
00:06:51,680 --> 00:06:53,280
or like the blue dotted portion of their

180
00:06:53,280 --> 00:06:54,639
video they would need to share the

181
00:06:54,639 --> 00:06:56,880
corresponding only the corresponding key

182
00:06:56,880 --> 00:06:58,800
and no other key and then the shared

183
00:06:58,800 --> 00:07:01,120
user would be from those keys

184
00:07:01,120 --> 00:07:03,440
be able to like derive lower keys and

185
00:07:03,440 --> 00:07:05,440
access the corresponding encrypted

186
00:07:05,440 --> 00:07:07,199
videos

187
00:07:07,199 --> 00:07:09,520
and no other videos that the owner

188
00:07:09,520 --> 00:07:12,080
didn't share with them

189
00:07:12,080 --> 00:07:15,520
right so in our paper we introduced a

190
00:07:15,520 --> 00:07:17,440
proof of concept of a privacy preserving

191
00:07:17,440 --> 00:07:20,479
smart camera system that we call cactus

192
00:07:20,479 --> 00:07:23,599
here is characters at play while live

193
00:07:23,599 --> 00:07:25,680
streaming videos

194
00:07:25,680 --> 00:07:27,919
our systems doesn't support only

195
00:07:27,919 --> 00:07:30,479
initialization live streaming or

196
00:07:30,479 --> 00:07:33,280
delegation but also other commercial

197
00:07:33,280 --> 00:07:36,319
popular features such as video edition

198
00:07:36,319 --> 00:07:39,840
access recovery and factory reset

199
00:07:39,840 --> 00:07:42,880
for sake of time for this presentation

200
00:07:42,880 --> 00:07:45,039
i'm going to defer the details of the

201
00:07:45,039 --> 00:07:46,879
rest of this protocol

202
00:07:46,879 --> 00:07:49,840
to the paper

203
00:07:50,639 --> 00:07:52,720
and i'm going to speak now about how we

204
00:07:52,720 --> 00:07:54,479
evaluated our system

205
00:07:54,479 --> 00:07:57,919
the evaluation of cactus was threefold

206
00:07:57,919 --> 00:08:00,400
first we carried out a secret analysis

207
00:08:00,400 --> 00:08:03,039
to prove the privacy guarantees of our

208
00:08:03,039 --> 00:08:04,560
design

209
00:08:04,560 --> 00:08:06,960
cactus enforces the following three

210
00:08:06,960 --> 00:08:08,720
rights for owners

211
00:08:08,720 --> 00:08:12,080
first the right to not be seen by

212
00:08:12,080 --> 00:08:14,479
leveraging end-to-end encryption

213
00:08:14,479 --> 00:08:17,199
then the right of sole ownership

214
00:08:17,199 --> 00:08:20,240
as owners in our system are the only one

215
00:08:20,240 --> 00:08:22,639
who knows the encryption keys so they

216
00:08:22,639 --> 00:08:24,319
are the only one able to immediate

217
00:08:24,319 --> 00:08:26,319
access to them and to the corresponding

218
00:08:26,319 --> 00:08:27,919
videos

219
00:08:27,919 --> 00:08:30,080
finally owners have the right to be

220
00:08:30,080 --> 00:08:32,479
forgotten on this means that owners can

221
00:08:32,479 --> 00:08:34,880
delete their videos or more specifically

222
00:08:34,880 --> 00:08:37,279
they can delete the encryption keys

223
00:08:37,279 --> 00:08:38,559
rendering

224
00:08:38,559 --> 00:08:41,519
recovery to them impossible even in case

225
00:08:41,519 --> 00:08:44,240
of corruption

226
00:08:45,760 --> 00:08:47,519
then we perform

227
00:08:47,519 --> 00:08:49,839
a performance evaluation of our system

228
00:08:49,839 --> 00:08:52,720
to figure out how it behaved

229
00:08:52,720 --> 00:08:55,440
here in this table we present the

230
00:08:55,440 --> 00:08:58,800
average time delay of each operation

231
00:08:58,800 --> 00:09:01,279
that is carried out by the camera or the

232
00:09:01,279 --> 00:09:03,920
smartphone application while we are live

233
00:09:03,920 --> 00:09:05,200
streaming

234
00:09:05,200 --> 00:09:06,959
as you can see the performance of our

235
00:09:06,959 --> 00:09:11,120
system are reasonable as our latency is

236
00:09:11,120 --> 00:09:14,160
about one second

237
00:09:14,880 --> 00:09:17,279
something to notice is that

238
00:09:17,279 --> 00:09:18,240
the

239
00:09:18,240 --> 00:09:20,320
main contribution to this delay and to

240
00:09:20,320 --> 00:09:22,640
this latency come from networking

241
00:09:22,640 --> 00:09:25,040
operations such as uploading and

242
00:09:25,040 --> 00:09:26,959
downloading the encrypted frame or from

243
00:09:26,959 --> 00:09:28,320
the cloud storage

244
00:09:28,320 --> 00:09:30,320
which is a point that is worth noting

245
00:09:30,320 --> 00:09:33,040
that we haven't optimized at all in our

246
00:09:33,040 --> 00:09:34,399
proof of concept

247
00:09:34,399 --> 00:09:37,279
so further improvement

248
00:09:37,279 --> 00:09:39,120
and perf and better performance is

249
00:09:39,120 --> 00:09:41,920
expected here

250
00:09:42,399 --> 00:09:43,360
all right

251
00:09:43,360 --> 00:09:44,800
so

252
00:09:44,800 --> 00:09:46,959
finally if building a privacy personal

253
00:09:46,959 --> 00:09:49,760
smart camera system is great it is even

254
00:09:49,760 --> 00:09:50,399
better

255
00:09:50,399 --> 00:09:53,040
if it's usable

256
00:09:53,040 --> 00:09:54,000
thus

257
00:09:54,000 --> 00:09:56,240
we perform a functional user evaluation

258
00:09:56,240 --> 00:09:59,120
with 10 participants to try to identify

259
00:09:59,120 --> 00:10:01,519
the potential issues in our design and

260
00:10:01,519 --> 00:10:03,120
in our protocols

261
00:10:03,120 --> 00:10:04,959
here are the main takeaway

262
00:10:04,959 --> 00:10:06,880
the participants

263
00:10:06,880 --> 00:10:09,200
found that our system was usable and

264
00:10:09,200 --> 00:10:10,880
that our application smartphone

265
00:10:10,880 --> 00:10:14,160
application was simple to use and to

266
00:10:14,160 --> 00:10:16,399
follow the instruction

267
00:10:16,399 --> 00:10:17,440
they all

268
00:10:17,440 --> 00:10:20,959
were impressed by the fine grenarity at

269
00:10:20,959 --> 00:10:22,720
which they were able with catches to

270
00:10:22,720 --> 00:10:24,640
delegate access to someone else to their

271
00:10:24,640 --> 00:10:25,920
videos

272
00:10:25,920 --> 00:10:29,760
and i also thought that the quality of

273
00:10:29,760 --> 00:10:32,560
the videos in our

274
00:10:32,560 --> 00:10:34,640
that the quality of the videos you know

275
00:10:34,640 --> 00:10:37,040
of the live streaming was sufficient for

276
00:10:37,040 --> 00:10:38,480
purposes

277
00:10:38,480 --> 00:10:42,320
of a security smart camera system

278
00:10:43,600 --> 00:10:46,320
they noted two potential improvements if

279
00:10:46,320 --> 00:10:47,600
characters were to deploy as a

280
00:10:47,600 --> 00:10:49,279
commercial system

281
00:10:49,279 --> 00:10:52,079
the latin c should probably be optimized

282
00:10:52,079 --> 00:10:54,959
further as discussed earlier and that

283
00:10:54,959 --> 00:10:58,320
they also would like to see

284
00:10:58,320 --> 00:11:00,320
the recording and the live streaming

285
00:11:00,320 --> 00:11:03,040
triggered in cactus with some motion

286
00:11:03,040 --> 00:11:04,399
detection system

287
00:11:04,399 --> 00:11:06,160
these are two engineering problems that

288
00:11:06,160 --> 00:11:08,640
can be solved applying networking

289
00:11:08,640 --> 00:11:11,600
optimization on top of our protocols or

290
00:11:11,600 --> 00:11:13,760
just adding

291
00:11:13,760 --> 00:11:15,519
additional sensor

292
00:11:15,519 --> 00:11:16,320
or

293
00:11:16,320 --> 00:11:18,880
piece of software to the smart camera

294
00:11:18,880 --> 00:11:23,040
device to support motion detection

295
00:11:24,079 --> 00:11:26,399
so as a conclusion to design a privacy

296
00:11:26,399 --> 00:11:28,160
personal smart camera system without

297
00:11:28,160 --> 00:11:31,120
relying on anyone except the owner it's

298
00:11:31,120 --> 00:11:32,959
important to establish a route of trust

299
00:11:32,959 --> 00:11:35,519
that needs to be maintained over the

300
00:11:35,519 --> 00:11:38,160
across the full life cycle of the system

301
00:11:38,160 --> 00:11:40,000
in cactus we have used for that

302
00:11:40,000 --> 00:11:41,200
different encryption and playing

303
00:11:41,200 --> 00:11:43,839
techniques to encrypt and isolate access

304
00:11:43,839 --> 00:11:46,160
to the data and also support different

305
00:11:46,160 --> 00:11:49,920
features such as fine grainer reality

306
00:11:49,920 --> 00:11:51,360
delegation

307
00:11:51,360 --> 00:11:54,720
deletion and access recovery

308
00:11:54,720 --> 00:11:57,680
finally it is worth noting that our

309
00:11:57,680 --> 00:11:59,040
protocols

310
00:11:59,040 --> 00:12:00,800
are not only restricted to smart camera

311
00:12:00,800 --> 00:12:03,200
system but are also readily applicable

312
00:12:03,200 --> 00:12:06,320
to other iot devices recorded time

313
00:12:06,320 --> 00:12:08,880
series data

314
00:12:08,880 --> 00:12:10,399
more details about the protocols are

315
00:12:10,399 --> 00:12:12,959
available in the paper and our on the

316
00:12:12,959 --> 00:12:14,480
implementation of our proof of concept

317
00:12:14,480 --> 00:12:18,760
can be found at the following link

