1
00:00:00,640 --> 00:00:03,199
hello my name is jeremiah blocky and i'm

2
00:00:03,199 --> 00:00:05,040
excited to tell you about our work da

3
00:00:05,040 --> 00:00:07,120
lock distribution aware of password

4
00:00:07,120 --> 00:00:09,519
throttling this is joint work with wuei

5
00:00:09,519 --> 00:00:11,840
zhang

6
00:00:12,719 --> 00:00:14,160
the goal of our work is to protect

7
00:00:14,160 --> 00:00:16,560
against online password attacks

8
00:00:16,560 --> 00:00:18,800
to illustrate online attacks suppose i

9
00:00:18,800 --> 00:00:21,119
register for an account with my favorite

10
00:00:21,119 --> 00:00:24,000
password one two three four five six

11
00:00:24,000 --> 00:00:25,920
once i create the account i may use it

12
00:00:25,920 --> 00:00:28,560
to send messages post photos

13
00:00:28,560 --> 00:00:31,760
process financial transactions etc

14
00:00:31,760 --> 00:00:34,160
an online attacker tries to guess my

15
00:00:34,160 --> 00:00:36,640
password to access all this confidential

16
00:00:36,640 --> 00:00:38,960
and private information

17
00:00:38,960 --> 00:00:41,040
in this case the attacker succeeds

18
00:00:41,040 --> 00:00:44,719
before he or she gets locked out

19
00:00:44,719 --> 00:00:46,879
password spraying is one example of a

20
00:00:46,879 --> 00:00:48,640
strategy that an online attacker might

21
00:00:48,640 --> 00:00:49,600
follow

22
00:00:49,600 --> 00:00:51,199
in this case the attacker attempts to

23
00:00:51,199 --> 00:00:53,440
log into many different accounts using a

24
00:00:53,440 --> 00:00:55,680
few popular passwords

25
00:00:55,680 --> 00:00:58,000
in the example diagram the attacker

26
00:00:58,000 --> 00:00:59,760
attempts to log into everyone's account

27
00:00:59,760 --> 00:01:03,519
using the same popular password

28
00:01:04,319 --> 00:01:06,240
online attacks are unfortunately a

29
00:01:06,240 --> 00:01:08,479
common privacy threat as illustrated by

30
00:01:08,479 --> 00:01:12,360
the highlighted news clips

31
00:01:13,119 --> 00:01:15,119
unfortunately online attacks can be

32
00:01:15,119 --> 00:01:16,880
surprisingly effective

33
00:01:16,880 --> 00:01:19,119
many user passwords are relatively easy

34
00:01:19,119 --> 00:01:21,119
to guess as illustrated by the password

35
00:01:21,119 --> 00:01:22,799
word cloud here

36
00:01:22,799 --> 00:01:25,200
in fact nearly one percent of roku users

37
00:01:25,200 --> 00:01:27,119
selected one two three four five six as

38
00:01:27,119 --> 00:01:28,479
their password

39
00:01:28,479 --> 00:01:30,000
and similar findings hold for other

40
00:01:30,000 --> 00:01:32,000
breached password data sets

41
00:01:32,000 --> 00:01:33,840
this means that even a simple password

42
00:01:33,840 --> 00:01:35,840
spraying attack can potentially be quite

43
00:01:35,840 --> 00:01:38,320
effective

44
00:01:39,520 --> 00:01:41,360
the traditional defense against online

45
00:01:41,360 --> 00:01:43,520
attacks is to lock the user's account

46
00:01:43,520 --> 00:01:46,479
after k consecutive incorrect guesses

47
00:01:46,479 --> 00:01:48,320
in this example the attacker is locked

48
00:01:48,320 --> 00:01:50,159
out after submitting three incorrect

49
00:01:50,159 --> 00:01:53,159
guesses

50
00:01:55,040 --> 00:01:56,960
the traditional k-strikes mechanism

51
00:01:56,960 --> 00:01:59,360
induces a classical usability security

52
00:01:59,360 --> 00:02:00,719
trade-off

53
00:02:00,719 --> 00:02:02,799
some have advocated for larger values of

54
00:02:02,799 --> 00:02:03,600
k

55
00:02:03,600 --> 00:02:05,600
for example k equals 10 to improve

56
00:02:05,600 --> 00:02:08,318
usability but this also gives the online

57
00:02:08,318 --> 00:02:10,160
attacker more opportunities to crack the

58
00:02:10,160 --> 00:02:12,080
user's password

59
00:02:12,080 --> 00:02:14,400
others would advocate for smaller k for

60
00:02:14,400 --> 00:02:17,599
example k equals 3 to improve security

61
00:02:17,599 --> 00:02:19,200
but this increases the chances that the

62
00:02:19,200 --> 00:02:21,280
honest user gets locked out

63
00:02:21,280 --> 00:02:23,840
for example in the comic below the user

64
00:02:23,840 --> 00:02:25,200
is having trouble remembering which

65
00:02:25,200 --> 00:02:27,520
letters were capitalized which number

66
00:02:27,520 --> 00:02:31,520
substitutions were applied etc

67
00:02:32,560 --> 00:02:34,879
the key insight behind da lock is that

68
00:02:34,879 --> 00:02:36,720
honest user mistakes tend to look very

69
00:02:36,720 --> 00:02:38,319
different from the guesses of an online

70
00:02:38,319 --> 00:02:39,440
attacker

71
00:02:39,440 --> 00:02:41,440
an online attacker will try to maximize

72
00:02:41,440 --> 00:02:43,680
the success rate by checking globally

73
00:02:43,680 --> 00:02:46,120
popular passwords such as password

74
00:02:46,120 --> 00:02:48,640
123456 and let me in

75
00:02:48,640 --> 00:02:51,120
by contrast honest user mistakes tend to

76
00:02:51,120 --> 00:02:53,519
be typos small variations on the base

77
00:02:53,519 --> 00:02:55,519
password or passwords from different

78
00:02:55,519 --> 00:02:56,800
accounts

79
00:02:56,800 --> 00:02:58,879
in the example below the honest user

80
00:02:58,879 --> 00:03:00,959
generally remembers the password but is

81
00:03:00,959 --> 00:03:02,080
trying to recall which number

82
00:03:02,080 --> 00:03:03,680
substitutions were applied and whether

83
00:03:03,680 --> 00:03:05,440
or not the first letter was capitalized

84
00:03:05,440 --> 00:03:06,560
or not

85
00:03:06,560 --> 00:03:08,239
none of these incorrect login attempts

86
00:03:08,239 --> 00:03:11,599
are particularly popular

87
00:03:15,440 --> 00:03:18,640
so the key intuition behind da lock is

88
00:03:18,640 --> 00:03:20,480
that lockout decisions should consider

89
00:03:20,480 --> 00:03:23,360
the popularity of incorrect logins here

90
00:03:23,360 --> 00:03:25,599
d a from d a lock stands for

91
00:03:25,599 --> 00:03:27,920
distribution aware

92
00:03:27,920 --> 00:03:30,400
from a security standpoint our goal is

93
00:03:30,400 --> 00:03:31,840
to avoid

94
00:03:31,840 --> 00:03:34,560
is to quickly lock down a user account

95
00:03:34,560 --> 00:03:36,239
after an attacker submits several

96
00:03:36,239 --> 00:03:39,120
incorrect or popular guesses

97
00:03:39,120 --> 00:03:41,120
from the usability standpoint the goal

98
00:03:41,120 --> 00:03:43,680
is to avoid locking out honest users as

99
00:03:43,680 --> 00:03:45,280
long as their correct login attempts are

100
00:03:45,280 --> 00:03:48,400
not too popular

101
00:03:49,200 --> 00:03:51,040
now is a good time to comment on stop

102
00:03:51,040 --> 00:03:52,959
guessing a concurrent and independent

103
00:03:52,959 --> 00:03:54,959
work by teon at all

104
00:03:54,959 --> 00:03:57,200
the key insight is similar password

105
00:03:57,200 --> 00:03:59,280
popularity differentiates attackers

106
00:03:59,280 --> 00:04:01,680
guesses from honest user mistakes

107
00:04:01,680 --> 00:04:03,760
however the focus in their work is a bit

108
00:04:03,760 --> 00:04:05,200
different

109
00:04:05,200 --> 00:04:06,879
their goal is to identify and block

110
00:04:06,879 --> 00:04:09,280
malicious ip addresses while our focus

111
00:04:09,280 --> 00:04:11,360
is on is primarily on protecting

112
00:04:11,360 --> 00:04:15,200
individual user accounts

113
00:04:15,200 --> 00:04:16,880
let's just illustrate

114
00:04:16,880 --> 00:04:18,959
the performance of da lock under two

115
00:04:18,959 --> 00:04:20,238
scenarios

116
00:04:20,238 --> 00:04:22,240
in the first example

117
00:04:22,240 --> 00:04:24,400
if the authentication server adopted a

118
00:04:24,400 --> 00:04:26,880
10 strikes policy then the attacker will

119
00:04:26,880 --> 00:04:28,720
successfully crack the user's password

120
00:04:28,720 --> 00:04:30,720
on guest seven

121
00:04:30,720 --> 00:04:33,680
by contrast da lock will quickly lock

122
00:04:33,680 --> 00:04:35,759
down the user's account after just two

123
00:04:35,759 --> 00:04:38,479
very popular password guesses

124
00:04:38,479 --> 00:04:39,919
in this case the attacker won't

125
00:04:39,919 --> 00:04:43,840
successfully crack the user's password

126
00:04:44,160 --> 00:04:46,080
on the usability side consider the

127
00:04:46,080 --> 00:04:48,400
following example here we have an honest

128
00:04:48,400 --> 00:04:50,080
user john smith who is trying to

129
00:04:50,080 --> 00:04:51,600
remember the correct format for his

130
00:04:51,600 --> 00:04:52,639
password

131
00:04:52,639 --> 00:04:54,720
clearly john smith generally remembers

132
00:04:54,720 --> 00:04:57,360
the the correct password but

133
00:04:57,360 --> 00:04:58,560
you know can't remember the correct

134
00:04:58,560 --> 00:05:01,120
format if the authentication server

135
00:05:01,120 --> 00:05:03,520
adopts the three strikes policy then in

136
00:05:03,520 --> 00:05:05,280
this case john smith gets locked out

137
00:05:05,280 --> 00:05:06,880
before he figures out the format for the

138
00:05:06,880 --> 00:05:08,400
correct password

139
00:05:08,400 --> 00:05:10,800
however da lock allows john smith to

140
00:05:10,800 --> 00:05:13,199
avoid getting locked out since none of

141
00:05:13,199 --> 00:05:15,120
the incorrect logins are globally

142
00:05:15,120 --> 00:05:18,160
popular passwords

143
00:05:20,240 --> 00:05:22,320
more formally the da lock mechanism

144
00:05:22,320 --> 00:05:25,440
works as follows we have two thresholds

145
00:05:25,440 --> 00:05:27,759
the hit count threshold psi

146
00:05:27,759 --> 00:05:29,199
and the consecutive strike count

147
00:05:29,199 --> 00:05:30,880
threshold k

148
00:05:30,880 --> 00:05:32,960
for each user u we keep track of the

149
00:05:32,960 --> 00:05:35,520
current hit count we'll call it psi u

150
00:05:35,520 --> 00:05:37,039
and the current strike count we'll call

151
00:05:37,039 --> 00:05:38,479
it ku

152
00:05:38,479 --> 00:05:40,080
whenever a user logs in with an

153
00:05:40,080 --> 00:05:41,680
incorrect password

154
00:05:41,680 --> 00:05:43,919
we increment the consecutive strike

155
00:05:43,919 --> 00:05:46,720
count ku and we also update the hit

156
00:05:46,720 --> 00:05:49,520
count based on the estimated probability

157
00:05:49,520 --> 00:05:52,080
of the incorrect password pw prime so

158
00:05:52,080 --> 00:05:54,160
here we'll assume we have some frequency

159
00:05:54,160 --> 00:05:56,080
oracle which gives us an estimate of

160
00:05:56,080 --> 00:05:56,880
this

161
00:05:56,880 --> 00:05:59,440
of this incorrect password guess

162
00:05:59,440 --> 00:06:02,240
finally on an incorrect login if either

163
00:06:02,240 --> 00:06:04,160
the hit count threshold or the

164
00:06:04,160 --> 00:06:06,160
consecutive strike count threshold has

165
00:06:06,160 --> 00:06:08,800
exceeded the

166
00:06:08,800 --> 00:06:11,280
exceeded their their given thresholds

167
00:06:11,280 --> 00:06:14,080
then we'll lock down the account

168
00:06:14,080 --> 00:06:16,479
when the login attempt is correct we

169
00:06:16,479 --> 00:06:18,400
will reset the consecutive strike count

170
00:06:18,400 --> 00:06:19,520
parameter

171
00:06:19,520 --> 00:06:22,080
however the hit count parameter is not

172
00:06:22,080 --> 00:06:24,560
reset

173
00:06:26,160 --> 00:06:27,840
so observe that

174
00:06:27,840 --> 00:06:30,319
the traditional k strikes mechanism is

175
00:06:30,319 --> 00:06:32,479
simply a special case of d a lock with

176
00:06:32,479 --> 00:06:35,520
hit count threshold set to infinity

177
00:06:35,520 --> 00:06:37,680
da lock gives us two parameters instead

178
00:06:37,680 --> 00:06:40,000
of one to tune the hit count and the

179
00:06:40,000 --> 00:06:41,280
strike count

180
00:06:41,280 --> 00:06:43,840
the key question is can we obtain better

181
00:06:43,840 --> 00:06:46,319
usability and security trade-offs by

182
00:06:46,319 --> 00:06:49,840
tuning both parameters

183
00:06:51,599 --> 00:06:54,800
so when we instantiate da lock we need

184
00:06:54,800 --> 00:06:57,360
to first specify a frequency oracle to

185
00:06:57,360 --> 00:06:58,960
estimate the probability of incorrect

186
00:06:58,960 --> 00:07:00,080
passwords

187
00:07:00,080 --> 00:07:01,360
in this work we developed a

188
00:07:01,360 --> 00:07:03,360
differentially private count sketch

189
00:07:03,360 --> 00:07:06,479
trained based on actual user passwords

190
00:07:06,479 --> 00:07:08,319
one natural concern in practice is

191
00:07:08,319 --> 00:07:10,800
whether or not this data structure

192
00:07:10,800 --> 00:07:12,800
would leak

193
00:07:12,800 --> 00:07:15,440
individual passwords so for example

194
00:07:15,440 --> 00:07:17,120
if an attacker can access the accounts

195
00:07:17,120 --> 00:07:19,120
cash data structure can they use it to

196
00:07:19,120 --> 00:07:21,919
extract individual passwords

197
00:07:21,919 --> 00:07:23,440
we address this concern by adding

198
00:07:23,440 --> 00:07:25,120
laplace noise to preserve differential

199
00:07:25,120 --> 00:07:27,039
privacy and this ensures that the

200
00:07:27,039 --> 00:07:28,720
attacker cannot actually use the data

201
00:07:28,720 --> 00:07:31,120
structure even if it's leaked to extract

202
00:07:31,120 --> 00:07:33,759
individual passwords

203
00:07:33,759 --> 00:07:35,759
an alternative approach to developing

204
00:07:35,759 --> 00:07:37,599
the frequency oracle

205
00:07:37,599 --> 00:07:38,560
would be

206
00:07:38,560 --> 00:07:40,560
to instantiate the

207
00:07:40,560 --> 00:07:42,639
frequency oracle with a password

208
00:07:42,639 --> 00:07:45,120
strength meter or a password cracking

209
00:07:45,120 --> 00:07:46,400
model

210
00:07:46,400 --> 00:07:48,240
uh we consider both

211
00:07:48,240 --> 00:07:49,919
both approaches in this paper the

212
00:07:49,919 --> 00:07:52,080
advantage of the alternative approach is

213
00:07:52,080 --> 00:07:53,840
that we don't have to

214
00:07:53,840 --> 00:07:56,639
uh train the model based on actual

215
00:07:56,639 --> 00:07:59,039
user passwords the disadvantage though

216
00:07:59,039 --> 00:08:00,720
is that the frequency estimates tend to

217
00:08:00,720 --> 00:08:03,919
be a bit less accurate

218
00:08:06,560 --> 00:08:09,840
when modeling a an attacker we seek to

219
00:08:09,840 --> 00:08:12,240
follow kirchhoff's principle in

220
00:08:12,240 --> 00:08:14,000
particular we assume that the attacker

221
00:08:14,000 --> 00:08:16,319
knows about the da lock mechanism and

222
00:08:16,319 --> 00:08:18,879
can adapt the strategy accordingly

223
00:08:18,879 --> 00:08:20,639
intuitively the attacker's goal is to

224
00:08:20,639 --> 00:08:22,479
maximize the probability that a password

225
00:08:22,479 --> 00:08:24,560
is cracked before the account is locked

226
00:08:24,560 --> 00:08:26,560
or before the password cracking campaign

227
00:08:26,560 --> 00:08:27,680
ends

228
00:08:27,680 --> 00:08:29,360
and to model the attacker we introduce

229
00:08:29,360 --> 00:08:31,919
the password knapsack problem to model

230
00:08:31,919 --> 00:08:33,519
an attacker who knows the system and

231
00:08:33,519 --> 00:08:36,159
optimizes its attack accordingly

232
00:08:36,159 --> 00:08:38,559
as a few examples the attacker will try

233
00:08:38,559 --> 00:08:40,479
to exploit inaccuracies in the frequency

234
00:08:40,479 --> 00:08:43,200
oracle this means that passwords whose

235
00:08:43,200 --> 00:08:45,360
true probability greatly exceeds the

236
00:08:45,360 --> 00:08:47,760
estimated probability are prime targets

237
00:08:47,760 --> 00:08:50,560
for the attacker

238
00:08:51,920 --> 00:08:52,640
so

239
00:08:52,640 --> 00:08:54,399
the password knapsack problem is as

240
00:08:54,399 --> 00:08:55,760
follows

241
00:08:55,760 --> 00:08:58,560
we first model the attacker strategy uh

242
00:08:58,560 --> 00:09:01,600
by specifying a set t and a hold out

243
00:09:01,600 --> 00:09:03,360
password

244
00:09:03,360 --> 00:09:04,959
pw hold

245
00:09:04,959 --> 00:09:06,720
and the basic strategy is that the

246
00:09:06,720 --> 00:09:08,560
attacker is first going to guess all the

247
00:09:08,560 --> 00:09:10,320
passwords in the set t

248
00:09:10,320 --> 00:09:14,080
followed by the final password guess

249
00:09:14,080 --> 00:09:16,240
final holdout password guess

250
00:09:16,240 --> 00:09:18,880
here we're going to require that t is

251
00:09:18,880 --> 00:09:21,440
less than some parameter mt

252
00:09:21,440 --> 00:09:23,440
here mt denotes the maximum number of

253
00:09:23,440 --> 00:09:24,320
attack

254
00:09:24,320 --> 00:09:26,000
of guesses that the attacker can sneak

255
00:09:26,000 --> 00:09:27,440
in by time t

256
00:09:27,440 --> 00:09:29,680
given the strike limit k and the user's

257
00:09:29,680 --> 00:09:32,880
actual login pattern

258
00:09:33,440 --> 00:09:35,200
so the attacker's goal of course is to

259
00:09:35,200 --> 00:09:36,959
maximize the probability that it cracks

260
00:09:36,959 --> 00:09:39,360
the password in other words maximize the

261
00:09:39,360 --> 00:09:41,040
probability that the user's password

262
00:09:41,040 --> 00:09:43,200
lies in the set s

263
00:09:43,200 --> 00:09:46,640
subject to the constraint that the first

264
00:09:46,640 --> 00:09:48,640
all the passwords in the set t

265
00:09:48,640 --> 00:09:51,440
excluding the holdout password cannot

266
00:09:51,440 --> 00:09:53,680
exceed the hit count threshold so if we

267
00:09:53,680 --> 00:09:55,600
sum all the passwords in t

268
00:09:55,600 --> 00:09:58,080
and use their estimated frequency this

269
00:09:58,080 --> 00:10:02,399
can't take us above our threshold psi

270
00:10:02,399 --> 00:10:04,240
now notice that the holdout password is

271
00:10:04,240 --> 00:10:05,920
excluded from this sum

272
00:10:05,920 --> 00:10:08,560
so an optimal attacker will oftentimes

273
00:10:08,560 --> 00:10:10,399
take the most popular password as the

274
00:10:10,399 --> 00:10:13,120
holdout password since there's no uh no

275
00:10:13,120 --> 00:10:15,839
constraint here on uh on this in

276
00:10:15,839 --> 00:10:17,920
particular

277
00:10:17,920 --> 00:10:18,720
the

278
00:10:18,720 --> 00:10:20,959
the holdout password can take us above

279
00:10:20,959 --> 00:10:23,360
the uh the hit count threshold the

280
00:10:23,360 --> 00:10:24,959
attacker won't be able to try guesses

281
00:10:24,959 --> 00:10:29,199
after this but beforehand that's okay

282
00:10:29,839 --> 00:10:32,160
so we conducted empirical simulations to

283
00:10:32,160 --> 00:10:33,920
evaluate the security and usability of

284
00:10:33,920 --> 00:10:35,120
da lock

285
00:10:35,120 --> 00:10:37,440
due to time limitations i cannot

286
00:10:37,440 --> 00:10:38,800
describe all the details of these

287
00:10:38,800 --> 00:10:41,680
simulations briefly we simulated one

288
00:10:41,680 --> 00:10:44,240
million user accounts over 180 day

289
00:10:44,240 --> 00:10:47,120
period with and without an attacker

290
00:10:47,120 --> 00:10:48,800
for usability we measure the lockout

291
00:10:48,800 --> 00:10:51,920
rate when accounts are not under attack

292
00:10:51,920 --> 00:10:53,360
and for security we measure the

293
00:10:53,360 --> 00:10:54,480
percentage of accounts that were

294
00:10:54,480 --> 00:10:57,920
compromised by the attacker

295
00:10:58,800 --> 00:11:00,720
so this plot shows the usability

296
00:11:00,720 --> 00:11:02,640
security trade-off we obtained based on

297
00:11:02,640 --> 00:11:04,959
the rock u password distribution after

298
00:11:04,959 --> 00:11:06,880
removing the most popular 10 000

299
00:11:06,880 --> 00:11:08,079
passwords

300
00:11:08,079 --> 00:11:10,320
the y-axis here shows the percentage of

301
00:11:10,320 --> 00:11:12,560
accounts compromised by the attacker and

302
00:11:12,560 --> 00:11:14,079
the x-axis shows the percentage of

303
00:11:14,079 --> 00:11:16,079
accounts that were locked down even when

304
00:11:16,079 --> 00:11:18,320
no attacker was present

305
00:11:18,320 --> 00:11:19,839
we first highlight the 10 strikes

306
00:11:19,839 --> 00:11:21,200
mechanism

307
00:11:21,200 --> 00:11:23,120
here the unwanted lockout rate is almost

308
00:11:23,120 --> 00:11:25,120
zero but the percentage of compromised

309
00:11:25,120 --> 00:11:27,760
accounts is quite high

310
00:11:27,760 --> 00:11:29,920
contrast the three strikes mechanism has

311
00:11:29,920 --> 00:11:32,640
a lower those still substantial

312
00:11:32,640 --> 00:11:34,640
percentage of compromised accounts but

313
00:11:34,640 --> 00:11:38,320
the unwanted lockout rate is quite high

314
00:11:38,320 --> 00:11:40,320
by adopting da lock with a

315
00:11:40,320 --> 00:11:42,640
differentially private count sketch

316
00:11:42,640 --> 00:11:44,480
we obtained a superior usability

317
00:11:44,480 --> 00:11:46,000
security tradeoff

318
00:11:46,000 --> 00:11:47,760
for example by setting our strike

319
00:11:47,760 --> 00:11:50,079
threshold to 10 and tuning the hit count

320
00:11:50,079 --> 00:11:51,839
parameter appropriately

321
00:11:51,839 --> 00:11:54,240
we were able to obtain a unwanted

322
00:11:54,240 --> 00:11:57,040
lockout rate and compromised rate which

323
00:11:57,040 --> 00:11:59,519
are both very close to zero

324
00:11:59,519 --> 00:12:01,680
however it's important to ensure that da

325
00:12:01,680 --> 00:12:03,519
lock is instantiated with a reasonably

326
00:12:03,519 --> 00:12:05,519
accurate frequency oracle

327
00:12:05,519 --> 00:12:06,720
in this case

328
00:12:06,720 --> 00:12:08,720
the neural network frequency oracle is

329
00:12:08,720 --> 00:12:11,440
not very accurate leading to inferior

330
00:12:11,440 --> 00:12:15,040
usability security trade-offs

331
00:12:15,200 --> 00:12:17,600
so in conclusion we introduced d a lock

332
00:12:17,600 --> 00:12:19,680
and demonstrated via simulations that it

333
00:12:19,680 --> 00:12:22,320
can offer a superior usability security

334
00:12:22,320 --> 00:12:23,440
trade-off

335
00:12:23,440 --> 00:12:25,519
we recommend implementing da lock with a

336
00:12:25,519 --> 00:12:27,120
differentially private count sketch

337
00:12:27,120 --> 00:12:31,279
frequency oracle or with the zxcvbn

338
00:12:31,279 --> 00:12:33,680
meter password strength meter if no

339
00:12:33,680 --> 00:12:35,600
training data is available

340
00:12:35,600 --> 00:12:37,680
we also recommend combining da lock with

341
00:12:37,680 --> 00:12:39,279
a ban list since we obtain the best

342
00:12:39,279 --> 00:12:41,120
usability security trade-offs when

343
00:12:41,120 --> 00:12:43,519
banning overly popular passwords

344
00:12:43,519 --> 00:12:45,519
finally in the future we hope to

345
00:12:45,519 --> 00:12:47,760
evaluate da lock in practice

346
00:12:47,760 --> 00:12:49,839
if you are interested please come

347
00:12:49,839 --> 00:12:53,279
come talk to us

348
00:12:53,279 --> 00:12:54,800
thanks for listening and i look forward

349
00:12:54,800 --> 00:12:56,160
to taking your questions at the

350
00:12:56,160 --> 00:12:59,160
conference

