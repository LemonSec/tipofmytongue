1
00:00:02,480 --> 00:00:04,560
hi everyone i'm tian chance here from uc

2
00:00:04,560 --> 00:00:06,480
berkeley and i'm going to present

3
00:00:06,480 --> 00:00:08,720
updates pro private set intersection

4
00:00:08,720 --> 00:00:11,440
this is a joint to work with sai payhan

5
00:00:11,440 --> 00:00:13,360
and this work is done by internship and

6
00:00:13,360 --> 00:00:14,920
visa

7
00:00:14,920 --> 00:00:17,119
research first we need to define the

8
00:00:17,119 --> 00:00:19,680
private settings section and

9
00:00:19,680 --> 00:00:22,960
that alice has set x and y uh bob has

10
00:00:22,960 --> 00:00:23,920
set y

11
00:00:23,920 --> 00:00:26,320
and they are going to compute the

12
00:00:26,320 --> 00:00:29,359
intersection of x and y and we resolve

13
00:00:29,359 --> 00:00:32,800
any other information is leaked

14
00:00:32,800 --> 00:00:34,719
there are several applications such as

15
00:00:34,719 --> 00:00:35,840
private

16
00:00:35,840 --> 00:00:37,440
contact discovery

17
00:00:37,440 --> 00:00:39,600
or private content tracing

18
00:00:39,600 --> 00:00:41,120
and we are going to focus on a private

19
00:00:41,120 --> 00:00:43,040
connect tracing scenario because it fits

20
00:00:43,040 --> 00:00:45,440
the updateable setting

21
00:00:45,440 --> 00:00:49,200
on day one we got several cases uh

22
00:00:49,200 --> 00:00:51,920
represented by these four beams and we

23
00:00:51,920 --> 00:00:53,840
got some client

24
00:00:53,840 --> 00:00:56,000
who is some contact

25
00:00:56,000 --> 00:00:58,960
and in day two we got a new several new

26
00:00:58,960 --> 00:01:00,719
cases and

27
00:01:00,719 --> 00:01:03,039
more contact by the user

28
00:01:03,039 --> 00:01:04,319
and

29
00:01:04,319 --> 00:01:06,880
the scale of the data is next following

30
00:01:06,880 --> 00:01:10,240
a user will may meet 10 or hundreds of

31
00:01:10,240 --> 00:01:12,799
people per day and he got

32
00:01:12,799 --> 00:01:15,840
thousands of friends maybe in total and

33
00:01:15,840 --> 00:01:19,360
for the client we got 400 kilos new

34
00:01:19,360 --> 00:01:25,119
cases per day and 500 mega in total

35
00:01:25,119 --> 00:01:26,880
an iu solution would incur question

36
00:01:26,880 --> 00:01:28,799
linear computation and question linear

37
00:01:28,799 --> 00:01:30,240
company sorry and the linear

38
00:01:30,240 --> 00:01:33,040
communication per user per query so it

39
00:01:33,040 --> 00:01:34,880
means that for each query of context

40
00:01:34,880 --> 00:01:37,600
tracing it needs to download

41
00:01:37,600 --> 00:01:39,840
hundreds of megabytes from the user from

42
00:01:39,840 --> 00:01:42,320
the server

43
00:01:42,479 --> 00:01:44,880
all target has reduced both computation

44
00:01:44,880 --> 00:01:47,200
communication and there will it will be

45
00:01:47,200 --> 00:01:50,320
some linear in to the existing set and

46
00:01:50,320 --> 00:01:53,680
questionnaire to the new set

47
00:01:53,680 --> 00:01:56,320
in our work we divide into the two

48
00:01:56,320 --> 00:01:58,880
different warrants two-sided updatable

49
00:01:58,880 --> 00:02:02,079
psi based on ddh and one-sided update of

50
00:02:02,079 --> 00:02:03,280
psi

51
00:02:03,280 --> 00:02:06,320
the two-sided version will reveal the

52
00:02:06,320 --> 00:02:09,038
set into the real intersection to the to

53
00:02:09,038 --> 00:02:11,680
the server and client both and one side

54
00:02:11,680 --> 00:02:14,160
is more private it only will only reveal

55
00:02:14,160 --> 00:02:16,720
to the client

56
00:02:16,720 --> 00:02:19,040
there are several existing works such as

57
00:02:19,040 --> 00:02:22,080
ddh-based ot-based circuit-based and for

58
00:02:22,080 --> 00:02:23,840
the two-sided version we are going to

59
00:02:23,840 --> 00:02:27,280
focus on the ddh-based solution

60
00:02:27,280 --> 00:02:28,959
first we need to define the privacy

61
00:02:28,959 --> 00:02:32,160
definition of the updatable setting

62
00:02:32,160 --> 00:02:35,040
alice and bob already got a0 and a b0

63
00:02:35,040 --> 00:02:36,560
and they they already get the

64
00:02:36,560 --> 00:02:38,720
intersection of a 0 b 0. let's assume

65
00:02:38,720 --> 00:02:40,000
that

66
00:02:40,000 --> 00:02:42,560
and for a new set a 1 and b 1

67
00:02:42,560 --> 00:02:45,360
they're going to compute this

68
00:02:45,360 --> 00:02:48,400
a set intersect with b set

69
00:02:48,400 --> 00:02:49,599
and

70
00:02:49,599 --> 00:02:52,000
nothing else so

71
00:02:52,000 --> 00:02:55,040
this is our privacy definition and we

72
00:02:55,040 --> 00:02:57,599
can exploit a little bit so

73
00:02:57,599 --> 00:02:59,599
alice will additionally know a0

74
00:02:59,599 --> 00:03:01,280
intersection with b1 that's a

75
00:03:01,280 --> 00:03:04,400
contribution of his or her outset

76
00:03:04,400 --> 00:03:05,280
and

77
00:03:05,280 --> 00:03:07,280
her she will also know a y intersection

78
00:03:07,280 --> 00:03:08,959
with b because it's a contribution of

79
00:03:08,959 --> 00:03:10,640
her new set

80
00:03:10,640 --> 00:03:13,040
and similarly for bob

81
00:03:13,040 --> 00:03:14,080
so

82
00:03:14,080 --> 00:03:16,000
based on this observation we can have a

83
00:03:16,000 --> 00:03:18,400
construction so

84
00:03:18,400 --> 00:03:21,760
let's assume alice got key 0 and

85
00:03:21,760 --> 00:03:25,920
blah blah k1 that's ddh key

86
00:03:26,959 --> 00:03:29,519
in first message alice is going to send

87
00:03:29,519 --> 00:03:32,400
a new raise to k0

88
00:03:32,400 --> 00:03:35,040
and bob can raise to k1 again so he know

89
00:03:35,040 --> 00:03:38,560
a new raised to k0 times k1 so he can

90
00:03:38,560 --> 00:03:41,440
compare with this old set and he now

91
00:03:41,440 --> 00:03:44,159
know a new intersector is be old

92
00:03:44,159 --> 00:03:46,799
and similarly as well know that all the

93
00:03:46,799 --> 00:03:49,920
intersection is being u

94
00:03:50,400 --> 00:03:51,599
now

95
00:03:51,599 --> 00:03:53,519
let's want to learn a new intersection

96
00:03:53,519 --> 00:03:55,439
with the whole b set

97
00:03:55,439 --> 00:03:57,760
now even if you can run this a separate

98
00:03:57,760 --> 00:04:00,640
psi on anu and the whole b set

99
00:04:00,640 --> 00:04:02,400
but this will incur

100
00:04:02,400 --> 00:04:05,760
a linear communication to the size of b

101
00:04:05,760 --> 00:04:08,480
we will not accept that

102
00:04:08,480 --> 00:04:09,360
but

103
00:04:09,360 --> 00:04:11,599
we have an observation here

104
00:04:11,599 --> 00:04:13,519
bob already know a new intersection with

105
00:04:13,519 --> 00:04:15,360
b set be old so

106
00:04:15,360 --> 00:04:17,279
she he can replace the

107
00:04:17,279 --> 00:04:19,279
bo set with this

108
00:04:19,279 --> 00:04:22,639
a new intersector is bo that it will not

109
00:04:22,639 --> 00:04:24,800
change the result because it's

110
00:04:24,800 --> 00:04:27,360
intersecting it's being sorry it is

111
00:04:27,360 --> 00:04:29,680
intersecting with a new so

112
00:04:29,680 --> 00:04:32,720
this new set here

113
00:04:32,720 --> 00:04:34,800
will be the size of this new set will be

114
00:04:34,800 --> 00:04:37,680
the size of a new plus size of b new at

115
00:04:37,680 --> 00:04:38,800
most

116
00:04:38,800 --> 00:04:42,320
so this new psi new separate psi will

117
00:04:42,320 --> 00:04:45,360
only incur linear to the a new plus b

118
00:04:45,360 --> 00:04:47,440
new size

119
00:04:47,440 --> 00:04:48,960
now

120
00:04:48,960 --> 00:04:50,720
let's learn this annual intersection

121
00:04:50,720 --> 00:04:53,680
speed set and similarly

122
00:04:53,680 --> 00:04:56,240
bob1 learn be new intersection with a

123
00:04:56,240 --> 00:04:58,479
set and they are done so they can

124
00:04:58,479 --> 00:05:00,240
combine these two results and get the

125
00:05:00,240 --> 00:05:03,039
new intersection

126
00:05:03,680 --> 00:05:05,919
consider one-sided psi where alice is a

127
00:05:05,919 --> 00:05:08,479
client and bob is the server now bob

128
00:05:08,479 --> 00:05:10,639
learns too much additional information

129
00:05:10,639 --> 00:05:13,919
in in the previous protocol

130
00:05:13,919 --> 00:05:14,800
so

131
00:05:14,800 --> 00:05:17,039
we are going to adopt a new protocol

132
00:05:17,039 --> 00:05:19,039
it's a data oblivious based on the data

133
00:05:19,039 --> 00:05:23,120
obvious data structure and for each

134
00:05:23,120 --> 00:05:25,600
entry in this data structure is going to

135
00:05:25,600 --> 00:05:29,759
be a back a batch of size sigma

136
00:05:29,759 --> 00:05:32,400
and this tree node has capacity of four

137
00:05:32,400 --> 00:05:34,720
sigma so

138
00:05:34,720 --> 00:05:37,440
so each node has no each tree node has

139
00:05:37,440 --> 00:05:39,199
known the sigma and the capacity of four

140
00:05:39,199 --> 00:05:40,639
sigma

141
00:05:40,639 --> 00:05:41,680
and

142
00:05:41,680 --> 00:05:43,759
why is it for sigma because we want to

143
00:05:43,759 --> 00:05:47,199
avoid overflow in case that the random

144
00:05:47,199 --> 00:05:49,759
distribution is not good enough

145
00:05:49,759 --> 00:05:52,960
and each element will be encrypted

146
00:05:52,960 --> 00:05:56,479
by bob's secret key using this

147
00:05:56,479 --> 00:05:59,840
additive harmonic encryption

148
00:06:00,160 --> 00:06:02,240
here gray node means that it's filled

149
00:06:02,240 --> 00:06:03,680
with sigma

150
00:06:03,680 --> 00:06:07,520
expected sigma elements and

151
00:06:07,520 --> 00:06:11,520
blank node means that there's no data

152
00:06:12,000 --> 00:06:13,360
so

153
00:06:13,360 --> 00:06:16,240
assuming that this this this picture is

154
00:06:16,240 --> 00:06:18,400
occurred as a be old set represent the

155
00:06:18,400 --> 00:06:21,039
bo set and here comes a being u of sin

156
00:06:21,039 --> 00:06:23,199
sigma

157
00:06:23,199 --> 00:06:24,560
and now

158
00:06:24,560 --> 00:06:27,039
the bob will try to push it into a root

159
00:06:27,039 --> 00:06:29,840
node and if it's already occupied data

160
00:06:29,840 --> 00:06:32,560
we will employ a split function to

161
00:06:32,560 --> 00:06:35,199
evenly split data into left and the

162
00:06:35,199 --> 00:06:36,960
right child

163
00:06:36,960 --> 00:06:40,479
and now root node node is empty but left

164
00:06:40,479 --> 00:06:43,120
and right child is also occupied so it

165
00:06:43,120 --> 00:06:45,199
recursively split again

166
00:06:45,199 --> 00:06:48,400
until it hits the empty level

167
00:06:48,400 --> 00:06:50,479
and here is the level three of never

168
00:06:50,479 --> 00:06:53,440
three is empty and now he feel data to

169
00:06:53,440 --> 00:06:55,039
the level three and

170
00:06:55,039 --> 00:06:58,000
stop the recursion

171
00:06:58,240 --> 00:07:00,400
so now the question is how to define

172
00:07:00,400 --> 00:07:02,960
split it's actually quite easy because

173
00:07:02,960 --> 00:07:05,280
split is with the purpose of speed is

174
00:07:05,280 --> 00:07:07,919
randomly throw element into

175
00:07:07,919 --> 00:07:10,479
left and right child so we can define a

176
00:07:10,479 --> 00:07:14,800
render hash function hx map element x to

177
00:07:14,800 --> 00:07:17,120
a zero one string and x is the

178
00:07:17,120 --> 00:07:19,520
ciphertext oh sorry it's a plain text

179
00:07:19,520 --> 00:07:20,400
and

180
00:07:20,400 --> 00:07:22,720
for each x and level i we are going to

181
00:07:22,720 --> 00:07:25,199
throw it into the left child if the

182
00:07:25,199 --> 00:07:28,720
random hx is indicating zero otherwise

183
00:07:28,720 --> 00:07:31,199
it will be thrown to the right shell

184
00:07:31,199 --> 00:07:32,400
and

185
00:07:32,400 --> 00:07:35,039
in equation each node each beam is going

186
00:07:35,039 --> 00:07:38,479
to load sigma elements and

187
00:07:38,479 --> 00:07:39,759
here

188
00:07:39,759 --> 00:07:41,599
the capacity of each beam is four sigma

189
00:07:41,599 --> 00:07:43,680
so it will not overflow except for

190
00:07:43,680 --> 00:07:46,800
negligible probability

191
00:07:48,160 --> 00:07:50,240
now consider query

192
00:07:50,240 --> 00:07:53,199
alice has a new here and consider

193
00:07:53,199 --> 00:07:54,960
element ai

194
00:07:54,960 --> 00:07:58,639
if the hash is 0 1 1 zero we can trace

195
00:07:58,639 --> 00:08:01,599
through from the root to the leaf zero

196
00:08:01,599 --> 00:08:03,120
left one

197
00:08:03,120 --> 00:08:05,280
one zero okay

198
00:08:05,280 --> 00:08:07,680
okay so there are logan

199
00:08:07,680 --> 00:08:10,879
different things

200
00:08:11,280 --> 00:08:14,720
and if ai is actually in the b set

201
00:08:14,720 --> 00:08:18,000
the ai must be one of the most being

202
00:08:18,000 --> 00:08:20,160
in is one of the spins

203
00:08:20,160 --> 00:08:22,800
so at least connect all the bins and he

204
00:08:22,800 --> 00:08:24,160
should try to

205
00:08:24,160 --> 00:08:26,160
randomize these things by applying a

206
00:08:26,160 --> 00:08:27,520
mask

207
00:08:27,520 --> 00:08:30,879
so it can ship computer mask plus being

208
00:08:30,879 --> 00:08:32,880
plus a i minus

209
00:08:32,880 --> 00:08:36,080
sorry bin plus alpha minus ai using her

210
00:08:36,080 --> 00:08:40,880
secret key it's a service secret key

211
00:08:40,880 --> 00:08:42,799
and should compute

212
00:08:42,799 --> 00:08:45,279
the encryption of r using her own secret

213
00:08:45,279 --> 00:08:46,240
key

214
00:08:46,240 --> 00:08:47,600
and

215
00:08:47,600 --> 00:08:49,760
notice that if the green

216
00:08:49,760 --> 00:08:52,800
guy contains ai it will cancel each

217
00:08:52,800 --> 00:08:55,519
other and only rf is left

218
00:08:55,519 --> 00:08:56,560
so

219
00:08:56,560 --> 00:08:59,680
upon receiving this uh this mask

220
00:08:59,680 --> 00:09:02,720
the the server will immediately decrypt

221
00:09:02,720 --> 00:09:04,480
and get beta

222
00:09:04,480 --> 00:09:07,120
equal to this scene and shoot it will

223
00:09:07,120 --> 00:09:09,360
not make any information because rfi is

224
00:09:09,360 --> 00:09:11,839
randomized for each element

225
00:09:11,839 --> 00:09:14,240
and

226
00:09:14,480 --> 00:09:17,120
the server also randomly sample gamma

227
00:09:17,120 --> 00:09:18,800
and compute alpha

228
00:09:18,800 --> 00:09:20,399
minus beta

229
00:09:20,399 --> 00:09:22,399
on the cipher ciphertext so

230
00:09:22,399 --> 00:09:24,720
the server will never know the result of

231
00:09:24,720 --> 00:09:27,600
alpha minus beta and he

232
00:09:27,600 --> 00:09:30,160
masked this result by gamma

233
00:09:30,160 --> 00:09:33,760
so notice that if green contains a i

234
00:09:33,760 --> 00:09:36,640
then alpha minus beta should be zero and

235
00:09:36,640 --> 00:09:39,040
gamma is not relevant here

236
00:09:39,040 --> 00:09:40,880
and the server sentences from the

237
00:09:40,880 --> 00:09:42,720
hosting back to the client

238
00:09:42,720 --> 00:09:44,080
client will

239
00:09:44,080 --> 00:09:47,040
decrypt this thing and see if it is zero

240
00:09:47,040 --> 00:09:49,360
if it is a zero the ai is in the

241
00:09:49,360 --> 00:09:50,720
intersection

242
00:09:50,720 --> 00:09:52,000
so

243
00:09:52,000 --> 00:09:54,800
the client can apply this technique to

244
00:09:54,800 --> 00:09:57,600
every single ai and he can she can get

245
00:09:57,600 --> 00:09:58,560
the

246
00:09:58,560 --> 00:10:01,360
result a new intersection with b

247
00:10:01,360 --> 00:10:04,640
how about the ao intercessor is being u

248
00:10:04,640 --> 00:10:07,600
we can use the ddh again

249
00:10:07,600 --> 00:10:09,760
assuming that

250
00:10:09,760 --> 00:10:11,360
the client

251
00:10:11,360 --> 00:10:15,360
maintaining ao raised to k 0 k 1 and

252
00:10:15,360 --> 00:10:18,399
as the b nu comes in the server can

253
00:10:18,399 --> 00:10:21,360
raise it to ky and send to the client

254
00:10:21,360 --> 00:10:23,760
client can restrict k0 again and get

255
00:10:23,760 --> 00:10:26,319
intersection

256
00:10:26,800 --> 00:10:29,040
that's all of our protocol

257
00:10:29,040 --> 00:10:33,000
any question is appreciated

