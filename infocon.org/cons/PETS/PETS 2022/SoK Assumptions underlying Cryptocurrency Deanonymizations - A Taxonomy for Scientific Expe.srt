1
00:00:00,299 --> 00:00:02,820
hey everyone I'm Dominic and I'm going

2
00:00:02,820 --> 00:00:04,799
to present assumptions underlying

3
00:00:04,799 --> 00:00:07,020
cryptocurrency the anonymizations which

4
00:00:07,020 --> 00:00:09,059
is try and work with Victoria Wonga and

5
00:00:09,059 --> 00:00:11,299
Christian

6
00:00:11,340 --> 00:00:13,080
let us first start by looking into

7
00:00:13,080 --> 00:00:16,379
cryptocurrency the anonymizations

8
00:00:16,379 --> 00:00:18,600
throughout this presentation I'm using

9
00:00:18,600 --> 00:00:21,840
Bitcoin as an example while in the paper

10
00:00:21,840 --> 00:00:25,380
we are also covering Monero and Secret

11
00:00:25,380 --> 00:00:27,480
in Bitcoin there's a public letter of

12
00:00:27,480 --> 00:00:29,640
transactions which is maintained in a

13
00:00:29,640 --> 00:00:31,439
peer-to-peer Network

14
00:00:31,439 --> 00:00:33,840
the lecturers also referred to as

15
00:00:33,840 --> 00:00:36,780
blockchain as transactions are organized

16
00:00:36,780 --> 00:00:39,380
in blocks

17
00:00:39,899 --> 00:00:42,239
here you can see a simplified version of

18
00:00:42,239 --> 00:00:44,940
a standard transaction in Bitcoin it

19
00:00:44,940 --> 00:00:46,980
consists of a list of inputs and a list

20
00:00:46,980 --> 00:00:49,640
of outputs

21
00:00:50,879 --> 00:00:53,399
an output denotes an amount of Bitcoin

22
00:00:53,399 --> 00:00:56,039
and a public key or to be more precise

23
00:00:56,039 --> 00:00:58,980
the hash of a public key which is also

24
00:00:58,980 --> 00:01:02,358
referred to as an address

25
00:01:02,940 --> 00:01:04,860
inputs on the other hand are just

26
00:01:04,860 --> 00:01:07,080
references to outputs of Prior

27
00:01:07,080 --> 00:01:08,400
transactions

28
00:01:08,400 --> 00:01:11,760
so you can say a transaction is actually

29
00:01:11,760 --> 00:01:17,240
spending yet unspent transaction outputs

30
00:01:17,759 --> 00:01:19,799
it has been shown in bitcoin's early

31
00:01:19,799 --> 00:01:23,280
days already that addresses are linkable

32
00:01:23,280 --> 00:01:26,040
the arguably most famous heuristic for

33
00:01:26,040 --> 00:01:28,080
address clustering is the so-called

34
00:01:28,080 --> 00:01:29,939
multi-input heuristic

35
00:01:29,939 --> 00:01:31,740
it has been already mentioned in

36
00:01:31,740 --> 00:01:34,619
bitcoin's white paper

37
00:01:34,619 --> 00:01:38,280
the idea of the heuristic is that all

38
00:01:38,280 --> 00:01:39,900
the addresses in the inputs of a

39
00:01:39,900 --> 00:01:41,939
transaction are linked

40
00:01:41,939 --> 00:01:45,060
and it is based on the observation that

41
00:01:45,060 --> 00:01:47,060
in order to create a transaction

42
00:01:47,060 --> 00:01:50,040
signatures are required that verify

43
00:01:50,040 --> 00:01:52,860
under the respective addresses or public

44
00:01:52,860 --> 00:01:55,340
keys

45
00:01:55,979 --> 00:01:59,280
let us now switch to the assumptions

46
00:01:59,280 --> 00:02:01,560
and we stick with our example of the

47
00:02:01,560 --> 00:02:03,240
multi-input heuristic

48
00:02:03,240 --> 00:02:05,280
the Assumption underlying the heuristic

49
00:02:05,280 --> 00:02:08,878
is that all inputs are controlled by the

50
00:02:08,878 --> 00:02:11,478
same entity

51
00:02:11,700 --> 00:02:14,280
however this assumption is not true for

52
00:02:14,280 --> 00:02:16,319
all transactions

53
00:02:16,319 --> 00:02:19,620
in 2013 coin join has been proposed

54
00:02:19,620 --> 00:02:23,879
which is a mixing protocol that relies

55
00:02:23,879 --> 00:02:26,459
on so-called coin joint transactions and

56
00:02:26,459 --> 00:02:28,680
in a coin Zone transaction the inputs

57
00:02:28,680 --> 00:02:31,560
are controlled by multiple entities by

58
00:02:31,560 --> 00:02:33,800
Design

59
00:02:34,739 --> 00:02:37,200
so now you might wonder why should we

60
00:02:37,200 --> 00:02:38,280
care

61
00:02:38,280 --> 00:02:41,280
if an assumption is not that reliable

62
00:02:41,280 --> 00:02:43,440
this might not be a problem in a

63
00:02:43,440 --> 00:02:45,060
research paper

64
00:02:45,060 --> 00:02:46,980
however cryptocurrency the

65
00:02:46,980 --> 00:02:50,580
anonymizations are used in practice and

66
00:02:50,580 --> 00:02:54,300
especially in criminal investigations

67
00:02:54,300 --> 00:02:56,700
one famous example is the Wall Street

68
00:02:56,700 --> 00:02:58,080
Market case

69
00:02:58,080 --> 00:02:59,879
Wall Street Market was a darknet

70
00:02:59,879 --> 00:03:01,980
marketplace where you could buy in

71
00:03:01,980 --> 00:03:05,000
particular trucks

72
00:03:05,280 --> 00:03:08,400
the marketplace had three operators and

73
00:03:08,400 --> 00:03:11,400
U.S Postal Service conducted a

74
00:03:11,400 --> 00:03:14,940
blockchain analysis to identify one of

75
00:03:14,940 --> 00:03:17,400
those operators

76
00:03:17,400 --> 00:03:20,040
so in general if investigations are

77
00:03:20,040 --> 00:03:22,260
conducted such as search of premises

78
00:03:22,260 --> 00:03:25,319
surveillance or pre-trial detention

79
00:03:25,319 --> 00:03:28,019
suspicion is required

80
00:03:28,019 --> 00:03:30,299
if there is no suspicion

81
00:03:30,299 --> 00:03:34,920
then the investigation would be unlawful

82
00:03:34,920 --> 00:03:38,940
so if an investigation is unlawful all

83
00:03:38,940 --> 00:03:41,280
the evidence obtained might be

84
00:03:41,280 --> 00:03:44,420
inadmissible in court

85
00:03:44,700 --> 00:03:47,519
so uncertain assumptions

86
00:03:47,519 --> 00:03:51,239
might raise the following legal issue

87
00:03:51,239 --> 00:03:53,819
and if we go back to our example of the

88
00:03:53,819 --> 00:03:55,439
Wall Street Market

89
00:03:55,439 --> 00:03:58,260
the question is if we want to conduct

90
00:03:58,260 --> 00:04:01,099
further investigative measures against

91
00:04:01,099 --> 00:04:04,439
the operator identified by the

92
00:04:04,439 --> 00:04:06,720
blockchain analysis the question is

93
00:04:06,720 --> 00:04:09,260
whether this identification actually

94
00:04:09,260 --> 00:04:12,420
establishes the required suspicion for

95
00:04:12,420 --> 00:04:15,840
those further investigations or not

96
00:04:15,840 --> 00:04:18,238
another problem here is that we don't

97
00:04:18,238 --> 00:04:20,100
even know which assumptions were

98
00:04:20,100 --> 00:04:22,680
actually used as the U.S Postal Service

99
00:04:22,680 --> 00:04:25,860
just States in a criminal complaint that

100
00:04:25,860 --> 00:04:28,500
proprietary software was used

101
00:04:28,500 --> 00:04:31,020
so the software could for example be by

102
00:04:31,020 --> 00:04:33,060
Channel analysis Cipher trace or

103
00:04:33,060 --> 00:04:35,699
elliptic just to name a few of the main

104
00:04:35,699 --> 00:04:37,680
players in cryptocurrency the

105
00:04:37,680 --> 00:04:40,340
anonymizations

106
00:04:41,820 --> 00:04:44,400
so the next question is what can we do

107
00:04:44,400 --> 00:04:46,740
about this how can we address this legal

108
00:04:46,740 --> 00:04:48,660
issue

109
00:04:48,660 --> 00:04:50,340
and the first thing we did is we

110
00:04:50,340 --> 00:04:53,160
proposed a taxonomy of assumptions we

111
00:04:53,160 --> 00:04:55,259
distinguish user Behavior protocol

112
00:04:55,259 --> 00:04:57,840
computational hardness and statistical

113
00:04:57,840 --> 00:05:00,419
assumptions

114
00:05:00,419 --> 00:05:03,180
user Behavior assumptions are based on

115
00:05:03,180 --> 00:05:06,180
the behavior of users and we already saw

116
00:05:06,180 --> 00:05:08,460
an example namely the Assumption

117
00:05:08,460 --> 00:05:12,419
underlying the multi-input heuristic

118
00:05:12,419 --> 00:05:14,460
protocol assumptions on the other hand

119
00:05:14,460 --> 00:05:17,460
are not based on user Behavior but on

120
00:05:17,460 --> 00:05:19,560
the implementation the network topology

121
00:05:19,560 --> 00:05:23,100
and other aspects of the protocol

122
00:05:23,100 --> 00:05:26,220
here's an example by the work of tramere

123
00:05:26,220 --> 00:05:29,400
it is the response time assumption and

124
00:05:29,400 --> 00:05:31,740
it is Strike true because it has already

125
00:05:31,740 --> 00:05:33,240
been fixed

126
00:05:33,240 --> 00:05:35,820
the attack was originally proposed for

127
00:05:35,820 --> 00:05:38,820
the cryptocurrency cache but I will

128
00:05:38,820 --> 00:05:40,440
explain it at the example of the

129
00:05:40,440 --> 00:05:43,440
peer-to-peer Network we saw before

130
00:05:43,440 --> 00:05:47,539
so imagine that a node here the red node

131
00:05:47,539 --> 00:05:50,460
receives a transaction from another node

132
00:05:50,460 --> 00:05:51,840
in the network

133
00:05:51,840 --> 00:05:55,080
and further the red node is also the

134
00:05:55,080 --> 00:05:58,740
recipient of this transaction

135
00:05:58,740 --> 00:06:02,160
then for a subsequent request in a

136
00:06:02,160 --> 00:06:03,720
network

137
00:06:03,720 --> 00:06:04,440
um

138
00:06:04,440 --> 00:06:07,319
it holds that the response time of the

139
00:06:07,319 --> 00:06:10,319
node is delayed because it needs to

140
00:06:10,319 --> 00:06:13,259
perform additional checks

141
00:06:13,259 --> 00:06:15,360
as it only needs to perform those checks

142
00:06:15,360 --> 00:06:17,220
in case it is the recipient of the

143
00:06:17,220 --> 00:06:18,360
transaction

144
00:06:18,360 --> 00:06:20,699
the other node sending the request could

145
00:06:20,699 --> 00:06:22,860
actually determine whether the node is

146
00:06:22,860 --> 00:06:25,940
the recipient or not

147
00:06:26,280 --> 00:06:27,780
the next class are computational

148
00:06:27,780 --> 00:06:29,880
hardness assumptions

149
00:06:29,880 --> 00:06:32,580
computational hardness assumptions are

150
00:06:32,580 --> 00:06:36,500
based on how hard it is to efficiently

151
00:06:36,500 --> 00:06:39,660
compute a problem or solve a problem for

152
00:06:39,660 --> 00:06:42,360
example discrete logarithm and there's a

153
00:06:42,360 --> 00:06:45,139
positional paper by goldwasser And kalai

154
00:06:45,139 --> 00:06:47,400
discussing computational hardness

155
00:06:47,400 --> 00:06:50,160
assumptions and their reliability in

156
00:06:50,160 --> 00:06:53,520
detail in the context of crypto

157
00:06:53,520 --> 00:06:55,680
the last class are statistical

158
00:06:55,680 --> 00:06:58,500
assumptions and they are based on How

159
00:06:58,500 --> 00:07:01,199
likely an event is and I will give you

160
00:07:01,199 --> 00:07:03,240
an example in a second

161
00:07:03,240 --> 00:07:06,120
so here you can see the P2P Network

162
00:07:06,120 --> 00:07:09,180
again now if a client connects to the

163
00:07:09,180 --> 00:07:11,759
peer-to-peer Network the peers it

164
00:07:11,759 --> 00:07:14,280
connects to are referred to as the

165
00:07:14,280 --> 00:07:17,099
client's entry nodes and it is assumed

166
00:07:17,099 --> 00:07:20,520
that each client has a unique set of

167
00:07:20,520 --> 00:07:22,860
Entry nodes

168
00:07:22,860 --> 00:07:25,199
so if the client issues the transaction

169
00:07:25,199 --> 00:07:29,280
now and sends it to its entry nodes

170
00:07:29,280 --> 00:07:31,440
the entry nodes were further relay it in

171
00:07:31,440 --> 00:07:33,740
the network

172
00:07:34,020 --> 00:07:36,380
if now the other nodes in the network

173
00:07:36,380 --> 00:07:40,319
detect which nodes first relate a

174
00:07:40,319 --> 00:07:41,340
message

175
00:07:41,340 --> 00:07:45,419
they can derive the entry node set of a

176
00:07:45,419 --> 00:07:47,879
client but this only works under the no

177
00:07:47,879 --> 00:07:51,000
Collision assumption so among the first

178
00:07:51,000 --> 00:07:56,520
few nodes that relay a transaction it is

179
00:07:56,520 --> 00:08:00,419
assumed that those nodes are not the

180
00:08:00,419 --> 00:08:03,599
entry node sets of another client so

181
00:08:03,599 --> 00:08:05,280
there is no Collision

182
00:08:05,280 --> 00:08:08,400
and the authors of the paper they

183
00:08:08,400 --> 00:08:11,340
actually said that the probability of

184
00:08:11,340 --> 00:08:14,819
um of a collision is negligible

185
00:08:14,819 --> 00:08:18,240
so now how can our taxonomy help to

186
00:08:18,240 --> 00:08:21,360
address the legal issue

187
00:08:21,360 --> 00:08:23,400
the taxonomy can help in the following

188
00:08:23,400 --> 00:08:24,660
way

189
00:08:24,660 --> 00:08:27,240
so if we go back to our earlier example

190
00:08:27,240 --> 00:08:31,259
the question is whether the findings of

191
00:08:31,259 --> 00:08:33,958
the blockchain investigation

192
00:08:33,958 --> 00:08:37,019
can establish the suspicion required for

193
00:08:37,019 --> 00:08:39,659
further investigative measures

194
00:08:39,659 --> 00:08:43,140
and the suspicion depends on the

195
00:08:43,140 --> 00:08:45,959
reliability of the assumptions and with

196
00:08:45,959 --> 00:08:48,240
the taxonomy we can argue this

197
00:08:48,240 --> 00:08:49,560
reliability

198
00:08:49,560 --> 00:08:52,740
and to do so we State the principal rule

199
00:08:52,740 --> 00:08:56,339
that reliability increases from user

200
00:08:56,339 --> 00:08:58,680
Behavior to computational hardness

201
00:08:58,680 --> 00:09:02,220
assumptions and the reason is that user

202
00:09:02,220 --> 00:09:04,980
Behavior changes and in order to assess

203
00:09:04,980 --> 00:09:08,399
its reliability one would require Crown

204
00:09:08,399 --> 00:09:11,399
truth data which is hard to obtain

205
00:09:11,399 --> 00:09:13,800
computational hardness assumptions on

206
00:09:13,800 --> 00:09:15,839
the other hand are well studied in the

207
00:09:15,839 --> 00:09:18,360
community are probably around for quite

208
00:09:18,360 --> 00:09:21,420
some time so they are in principle more

209
00:09:21,420 --> 00:09:22,800
reliable

210
00:09:22,800 --> 00:09:25,260
for statistical assumptions we can't

211
00:09:25,260 --> 00:09:28,080
really say anything because they depend

212
00:09:28,080 --> 00:09:30,839
on the actual likelihood of the event

213
00:09:30,839 --> 00:09:33,839
besides this General assessment we also

214
00:09:33,839 --> 00:09:36,899
provide factors for each class of

215
00:09:36,899 --> 00:09:39,420
assumptions that help to argue

216
00:09:39,420 --> 00:09:42,779
reliability on a case-by-case basis

217
00:09:42,779 --> 00:09:45,839
for user Behavior assumptions these are

218
00:09:45,839 --> 00:09:47,940
for example Crown truth which I already

219
00:09:47,940 --> 00:09:50,640
mentioned but also false positive

220
00:09:50,640 --> 00:09:51,899
detection

221
00:09:51,899 --> 00:09:54,540
so if we go back to our example from the

222
00:09:54,540 --> 00:09:56,519
beginning and the multi-input heuristic

223
00:09:56,519 --> 00:09:59,580
the multi-infoot heuristic is only as

224
00:09:59,580 --> 00:10:04,019
good as our way of detecting coin drone

225
00:10:04,019 --> 00:10:05,339
transactions

226
00:10:05,339 --> 00:10:07,740
thus if we can reliably detect

227
00:10:07,740 --> 00:10:10,320
coinsurance transactions also the

228
00:10:10,320 --> 00:10:12,420
findings by the multi-input heuristic

229
00:10:12,420 --> 00:10:15,300
are more reliable

230
00:10:15,300 --> 00:10:17,880
and finally there is a support by

231
00:10:17,880 --> 00:10:19,440
external information

232
00:10:19,440 --> 00:10:22,860
so if the blockchain the anonymization

233
00:10:22,860 --> 00:10:26,220
um establishes a link or leads to a

234
00:10:26,220 --> 00:10:27,180
finding

235
00:10:27,180 --> 00:10:29,640
and this finding can be supported by

236
00:10:29,640 --> 00:10:32,160
other information for example that an

237
00:10:32,160 --> 00:10:34,920
address has been mentioned in a darknet

238
00:10:34,920 --> 00:10:37,380
forum and this might additionally

239
00:10:37,380 --> 00:10:40,560
increase the reliability of the finding

240
00:10:40,560 --> 00:10:44,160
so to conclude we showed that there is a

241
00:10:44,160 --> 00:10:46,320
legal issue with the assumptions

242
00:10:46,320 --> 00:10:48,000
underlying cryptocurrency the

243
00:10:48,000 --> 00:10:52,260
anonymizations namely whether the the

244
00:10:52,260 --> 00:10:55,380
anonymizations can establish the decree

245
00:10:55,380 --> 00:10:58,079
of Suspicion required for further

246
00:10:58,079 --> 00:11:00,360
investigations

247
00:11:00,360 --> 00:11:03,360
and on the positive side we proposed a

248
00:11:03,360 --> 00:11:06,180
taxonomy of assumptions that allows to

249
00:11:06,180 --> 00:11:08,640
argue their reliability

250
00:11:08,640 --> 00:11:10,860
and last but not least here is how you

251
00:11:10,860 --> 00:11:13,459
can get in contact

