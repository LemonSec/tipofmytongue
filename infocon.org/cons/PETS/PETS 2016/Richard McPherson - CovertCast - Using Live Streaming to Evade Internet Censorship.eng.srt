1
00:00:03,790 --> 00:00:08,900
covert cast which is as we just<font color="#E5E5E5"> said a</font>

2
00:00:07,130 --> 00:00:11,419
system designed to use live streaming

3
00:00:08,900 --> 00:00:14,509
services like YouTube to evade internet

4
00:00:11,419 --> 00:00:18,710
censorship my co-authors are<font color="#CCCCCC"> amir and</font>

5
00:00:14,509 --> 00:00:21,140
metallic so a normal censorship

6
00:00:18,710 --> 00:00:22,880
resistance<font color="#CCCCCC"> setup involves a user inside</font>

7
00:00:21,140 --> 00:00:24,530
of some sort of censored region who

8
00:00:22,880 --> 00:00:27,380
wants to<font color="#E5E5E5"> access some kind of block or</font>

9
00:00:24,530 --> 00:00:29,690
forbidden content we assume that<font color="#E5E5E5"> there's</font>

10
00:00:27,380 --> 00:00:31,700
a sensor or other adversary monitoring

11
00:00:29,690 --> 00:00:34,160
this content or monitoring all the

12
00:00:31,700 --> 00:00:37,010
<font color="#E5E5E5">incoming and outgoing connections and</font>

13
00:00:34,160 --> 00:00:39,860
doing some sort of possible<font color="#E5E5E5"> filtering</font>

14
00:00:37,010 --> 00:00:41,449
the user ideally wants their traffic<font color="#E5E5E5"> not</font>

15
00:00:39,860 --> 00:00:43,100
to be<font color="#E5E5E5"> recognized as accessing the</font>

16
00:00:41,450 --> 00:00:44,690
forbidden content and there's a number

17
00:00:43,100 --> 00:00:46,489
<font color="#E5E5E5">of services</font><font color="#CCCCCC"> and systems out there that</font>

18
00:00:44,690 --> 00:00:48,800
allow you<font color="#CCCCCC"> to do this or attempt to do</font>

19
00:00:46,489 --> 00:00:51,860
this including tour however often times

20
00:00:48,800 --> 00:00:53,720
on closer examination it's easy to

21
00:00:51,860 --> 00:00:57,140
detect what these censorship<font color="#CCCCCC"> resistant</font>

22
00:00:53,720 --> 00:00:58,489
services are so when thinking about this

23
00:00:57,140 --> 00:01:00,020
<font color="#CCCCCC">problem we asked ourselves what other</font>

24
00:00:58,489 --> 00:01:01,578
systems existed that<font color="#CCCCCC"> were</font><font color="#E5E5E5"> allowed to</font>

25
00:01:00,020 --> 00:01:03,440
cross the boundaries of these censored

26
00:01:01,579 --> 00:01:05,930
regions and<font color="#CCCCCC"> there</font><font color="#E5E5E5"> a fair number of them</font>

27
00:01:03,440 --> 00:01:07,759
some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> them include encryption and so</font>

28
00:01:05,930 --> 00:01:10,880
we decided why not use those and<font color="#E5E5E5"> hide a</font>

29
00:01:07,760 --> 00:01:12,740
content inside of that specifically we

30
00:01:10,880 --> 00:01:14,000
looked at live streaming video services

31
00:01:12,740 --> 00:01:16,130
which were things like<font color="#E5E5E5"> YouTube and</font>

32
00:01:14,000 --> 00:01:18,560
twitch TV that have high bandwidth and

33
00:01:16,130 --> 00:01:20,929
cryptic communication allow<font color="#CCCCCC"> us to scale</font>

34
00:01:18,560 --> 00:01:22,850
effortlessly your end or free and<font color="#E5E5E5"> so we</font>

35
00:01:20,930 --> 00:01:24,710
designed covert cast to broad set to

36
00:01:22,850 --> 00:01:28,130
broadcast websites through these live

37
00:01:24,710 --> 00:01:29,600
video streaming services so as I said

38
00:01:28,130 --> 00:01:31,520
<font color="#E5E5E5">these services were things like YouTube</font>

39
00:01:29,600 --> 00:01:33,080
and twitch that allow you to<font color="#E5E5E5"> upload a</font>

40
00:01:31,520 --> 00:01:34,729
live video and people can watch it in

41
00:01:33,080 --> 00:01:36,470
real time<font color="#CCCCCC"> this is different from the</font>

42
00:01:34,729 --> 00:01:37,850
normal YouTube videos where you upload

43
00:01:36,470 --> 00:01:39,740
<font color="#E5E5E5">it and someone would come around a week</font>

44
00:01:37,850 --> 00:01:40,970
later and watch the<font color="#E5E5E5"> video when you watch</font>

45
00:01:39,740 --> 00:01:42,589
the<font color="#CCCCCC"> video on these services you're</font>

46
00:01:40,970 --> 00:01:46,070
watching it in real time<font color="#CCCCCC"> or very close</font>

47
00:01:42,590 --> 00:01:48,320
to real time so you tube allows you to

48
00:01:46,070 --> 00:01:51,470
live stream anything<font color="#E5E5E5"> or almost any sort</font>

49
00:01:48,320 --> 00:01:53,839
of content for example in 2016<font color="#E5E5E5"> Koecher</font>

50
00:01:51,470 --> 00:01:55,340
cello concert was viewed by over 21

51
00:01:53,840 --> 00:01:57,409
million people<font color="#E5E5E5"> this was a live stream of</font>

52
00:01:55,340 --> 00:01:59,240
<font color="#E5E5E5">the concert youtube also supports</font>

53
00:01:57,409 --> 00:02:01,820
password protected and invite only live

54
00:01:59,240 --> 00:02:04,039
streams twitch TVs the other really

55
00:02:01,820 --> 00:02:06,679
<font color="#E5E5E5">popular really well-known live streaming</font>

56
00:02:04,040 --> 00:02:09,200
service it focuses mostly on video games

57
00:02:06,680 --> 00:02:10,789
it has<font color="#E5E5E5"> more than nine point eight</font>

58
00:02:09,199 --> 00:02:13,819
million monthly viewers but<font color="#E5E5E5"> does not</font>

59
00:02:10,788 --> 00:02:14,209
support private streams so we designed

60
00:02:13,819 --> 00:02:15,980
<font color="#E5E5E5">our so</font>

61
00:02:14,210 --> 00:02:18,680
Stone cover cast to use<font color="#E5E5E5"> YouTube but it's</font>

62
00:02:15,980 --> 00:02:20,420
almost completely a system as agnostic

63
00:02:18,680 --> 00:02:23,180
so it can<font color="#CCCCCC"> be easily modified to use</font>

64
00:02:20,420 --> 00:02:25,100
other services<font color="#CCCCCC"> like twitch or the dozens</font>

65
00:02:23,180 --> 00:02:26,990
or hundreds of other live streaming

66
00:02:25,100 --> 00:02:31,310
services that cater to general audiences

67
00:02:26,990 --> 00:02:33,230
or niche specific groups so how does a

68
00:02:31,310 --> 00:02:35,360
live streaming service work well a

69
00:02:33,230 --> 00:02:37,489
broadcaster records a video of<font color="#CCCCCC"> themself</font>

70
00:02:35,360 --> 00:02:39,980
in<font color="#E5E5E5"> real time and uploads it using a</font>

71
00:02:37,490 --> 00:02:41,990
protocol like rtmp over the encrypted

72
00:02:39,980 --> 00:02:43,970
version of our team p RT<font color="#CCCCCC"> MPs to these</font>

73
00:02:41,990 --> 00:02:45,380
live streaming services and then any

74
00:02:43,970 --> 00:02:47,359
number of clients can connect to the

75
00:02:45,380 --> 00:02:50,840
service and watch the video<font color="#CCCCCC"> as</font><font color="#E5E5E5"> it</font>

76
00:02:47,360 --> 00:02:52,540
happens what we'd like<font color="#CCCCCC"> to do is replace</font>

77
00:02:50,840 --> 00:02:55,790
the dancing frog in the previous slide

78
00:02:52,540 --> 00:02:59,480
with some sort of censored or forbidden

79
00:02:55,790 --> 00:03:01,429
website in this example BBC News however

80
00:02:59,480 --> 00:03:03,140
doing just replacing the dancing frog

81
00:03:01,430 --> 00:03:05,540
doesn't quite work because it's a video

82
00:03:03,140 --> 00:03:07,369
<font color="#CCCCCC">of the website so it's almost static the</font>

83
00:03:05,540 --> 00:03:10,609
user can<font color="#E5E5E5"> interact with it and this isn't</font>

84
00:03:07,370 --> 00:03:12,980
any good so instead what covert cast

85
00:03:10,610 --> 00:03:16,690
does is it downloads content from these

86
00:03:12,980 --> 00:03:19,760
websites the HTML Javascript images etc

87
00:03:16,690 --> 00:03:22,430
it modulates this content into images

88
00:03:19,760 --> 00:03:24,290
and uses these images as frames in a

89
00:03:22,430 --> 00:03:27,110
live streaming video that it uploads to

90
00:03:24,290 --> 00:03:29,840
youtube then any client can watch

91
00:03:27,110 --> 00:03:32,030
YouTube demodulate these images<font color="#E5E5E5"> back</font>

92
00:03:29,840 --> 00:03:35,630
into the original content and interact

93
00:03:32,030 --> 00:03:37,370
with the website<font color="#E5E5E5"> is normal so this is</font><font color="#CCCCCC"> an</font>

94
00:03:35,630 --> 00:03:39,890
<font color="#CCCCCC">example of one of the images</font><font color="#E5E5E5"> that we use</font>

95
00:03:37,370 --> 00:03:42,200
<font color="#CCCCCC">for our video</font><font color="#E5E5E5"> frames it's 720 x 1280</font>

96
00:03:39,890 --> 00:03:44,869
pixels it's composed<font color="#CCCCCC"> of these thousands</font>

97
00:03:42,200 --> 00:03:47,179
of colored squares each of these squares

98
00:03:44,870 --> 00:03:49,070
is<font color="#CCCCCC"> eight</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> eight pixels and encodes six</font>

99
00:03:47,180 --> 00:03:51,650
bits we put two bits in each of the

100
00:03:49,070 --> 00:03:53,870
color channels so we investigated using

101
00:03:51,650 --> 00:03:55,490
more than<font color="#E5E5E5"> six bits here but when you</font>

102
00:03:53,870 --> 00:03:57,230
upload an image to youtube<font color="#E5E5E5"> or one of</font>

103
00:03:55,490 --> 00:04:00,080
<font color="#E5E5E5">these other services there's some slight</font>

104
00:03:57,230 --> 00:04:01,519
degradation and quality we think due to

105
00:04:00,080 --> 00:04:03,140
format changes or compression on the

106
00:04:01,520 --> 00:04:04,940
<font color="#E5E5E5">back end so what you're actually</font>

107
00:04:03,140 --> 00:04:06,290
uploading to YouTube<font color="#E5E5E5"> isn't quite what</font>

108
00:04:04,940 --> 00:04:07,490
you're seeing on the other side which<font color="#CCCCCC"> is</font>

109
00:04:06,290 --> 00:04:09,049
why<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> encoding in these color</font>

110
00:04:07,490 --> 00:04:11,840
channels but why we're sort<font color="#E5E5E5"> of limited</font>

111
00:04:09,050 --> 00:04:15,470
with how much we can encode or put

112
00:04:11,840 --> 00:04:17,358
inside of them now given 720 x 1280

113
00:04:15,470 --> 00:04:19,510
images an eight-by-eight pixel<font color="#E5E5E5"> blocks we</font>

114
00:04:17,358 --> 00:04:21,738
get about 14,000 colored box per image

115
00:04:19,510 --> 00:04:25,099
and with six bits per block<font color="#E5E5E5"> that's</font>

116
00:04:21,738 --> 00:04:27,210
around 86,000 hits per image but you've

117
00:04:25,100 --> 00:04:29,910
probably<font color="#E5E5E5"> noticed the a strict here</font>

118
00:04:27,210 --> 00:04:31,469
to help<font color="#E5E5E5"> prevent these live streaming</font>

119
00:04:29,910 --> 00:04:33,780
services from cropping the outermost

120
00:04:31,470 --> 00:04:36,000
pixels which some of<font color="#E5E5E5"> them do some of</font>

121
00:04:33,780 --> 00:04:37,590
these services do we include an<font color="#CCCCCC"> eight</font>

122
00:04:36,000 --> 00:04:39,419
pixel black border around the edge of

123
00:04:37,590 --> 00:04:40,979
these images so we take the outside

124
00:04:39,419 --> 00:04:43,139
blocks and we just<font color="#E5E5E5"> leave them black and</font>

125
00:04:40,979 --> 00:04:44,580
don't use them to encode any data this

126
00:04:43,139 --> 00:04:47,430
gets us down to<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little under 85</font>

127
00:04:44,580 --> 00:04:48,930
thousand bits per image and we also

128
00:04:47,430 --> 00:04:51,000
include the possibility to use error

129
00:04:48,930 --> 00:04:52,830
correcting codes in covert cast we found

130
00:04:51,000 --> 00:04:54,270
<font color="#E5E5E5">we didn't need them for YouTube but they</font>

131
00:04:52,830 --> 00:04:58,198
were helpful with some other services

132
00:04:54,270 --> 00:05:00,599
that<font color="#CCCCCC"> we briefly investigated so covert</font>

133
00:04:58,199 --> 00:05:01,979
cast uses 720p videos we're able to do

134
00:05:00,599 --> 00:05:04,289
that<font color="#E5E5E5"> because of the large size of the</font>

135
00:05:01,979 --> 00:05:06,810
images however we're only able<font color="#E5E5E5"> to send</font>

136
00:05:04,289 --> 00:05:08,550
two images per second with YouTube so we

137
00:05:06,810 --> 00:05:09,900
have to<font color="#E5E5E5"> send one image for half a second</font>

138
00:05:08,550 --> 00:05:11,759
<font color="#E5E5E5">and then a second image for another half</font>

139
00:05:09,900 --> 00:05:14,099
the second the reason<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this is</font>

140
00:05:11,759 --> 00:05:16,050
YouTube does not support rapidly

141
00:05:14,099 --> 00:05:17,969
changing frames where every<font color="#CCCCCC"> colors</font>

142
00:05:16,050 --> 00:05:21,060
switching between another color in

143
00:05:17,970 --> 00:05:23,669
between you know<font color="#CCCCCC"> 10 times a second or so</font>

144
00:05:21,060 --> 00:05:25,789
<font color="#E5E5E5">if you try to use more</font><font color="#CCCCCC"> than two images</font>

145
00:05:23,669 --> 00:05:28,560
per second you start seeing image

146
00:05:25,789 --> 00:05:30,240
artifacts and the graphics or frames or

147
00:05:28,560 --> 00:05:34,199
images get dropped and that makes

148
00:05:30,240 --> 00:05:36,840
convert<font color="#CCCCCC"> casts unusable</font><font color="#E5E5E5"> in this however</font>

149
00:05:34,199 --> 00:05:41,669
still sending two images per second gets

150
00:05:36,840 --> 00:05:43,739
us about 169,000 bits per second and

151
00:05:41,669 --> 00:05:46,198
Cooper cast is designed to be used by

152
00:05:43,740 --> 00:05:47,699
<font color="#CCCCCC">clients inside of censored regions so</font>

153
00:05:46,199 --> 00:05:49,320
once more their content is<font color="#E5E5E5"> being</font>

154
00:05:47,699 --> 00:05:52,229
monitored by some<font color="#E5E5E5"> sensor everything</font>

155
00:05:49,320 --> 00:05:54,000
coming in and out conveniently<font color="#E5E5E5"> YouTube</font>

156
00:05:52,229 --> 00:05:59,580
encrypts all video communication between

157
00:05:54,000 --> 00:06:03,150
the servers and the the clients on top

158
00:05:59,580 --> 00:06:05,909
<font color="#E5E5E5">of this encryption or you know with this</font>

159
00:06:03,150 --> 00:06:07,469
encryption it's hard<font color="#E5E5E5"> for an adversary to</font>

160
00:06:05,909 --> 00:06:10,229
use the current deep packet inspection

161
00:06:07,469 --> 00:06:13,770
or other sort of protocol fingerprinting

162
00:06:10,229 --> 00:06:16,050
to figure out what content or if covert

163
00:06:13,770 --> 00:06:18,840
cast is being used as opposed to viewing

164
00:06:16,050 --> 00:06:21,270
<font color="#E5E5E5">a normal video with YouTube we also</font>

165
00:06:18,840 --> 00:06:25,349
investigated the metadata involved with

166
00:06:21,270 --> 00:06:28,139
these the video packets we looked at the

167
00:06:25,349 --> 00:06:29,909
packet sizes and timing we<font color="#E5E5E5"> found that we</font>

168
00:06:28,139 --> 00:06:32,490
<font color="#CCCCCC">were unable to distinguish covert cast</font>

169
00:06:29,909 --> 00:06:35,550
videos from other YouTube videos to any

170
00:06:32,490 --> 00:06:38,550
major degree now I need to<font color="#CCCCCC"> mention right</font>

171
00:06:35,550 --> 00:06:40,199
here small errata from the paper in the

172
00:06:38,550 --> 00:06:40,710
paper we incorrectly identified that

173
00:06:40,199 --> 00:06:42,710
they serve

174
00:06:40,710 --> 00:06:45,359
the convert cast server is uploading

175
00:06:42,710 --> 00:06:47,400
encrypted images are encrypted video to

176
00:06:45,360 --> 00:06:49,110
<font color="#E5E5E5">YouTube there is an encrypted version of</font>

177
00:06:47,400 --> 00:06:53,640
the protocol that YouTube uses but

178
00:06:49,110 --> 00:06:55,200
<font color="#CCCCCC">YouTube does not support it now you may</font>

179
00:06:53,640 --> 00:06:57,090
have<font color="#E5E5E5"> noticed</font><font color="#CCCCCC"> that convert cast is one</font>

180
00:06:55,200 --> 00:06:58,380
way that<font color="#E5E5E5"> only the information only flows</font>

181
00:06:57,090 --> 00:07:01,260
in one direction and there's a reason

182
00:06:58,380 --> 00:07:04,080
<font color="#CCCCCC">for that live streaming services have an</font>

183
00:07:01,260 --> 00:07:05,580
inherent latency this is just a part<font color="#E5E5E5"> of</font>

184
00:07:04,080 --> 00:07:07,710
their system we found<font color="#CCCCCC"> up all the</font>

185
00:07:05,580 --> 00:07:09,300
services we've investigated so when you

186
00:07:07,710 --> 00:07:10,770
upload a video if you're uploading<font color="#E5E5E5"> a</font>

187
00:07:09,300 --> 00:07:13,200
video of yourself and<font color="#E5E5E5"> you wave and say</font>

188
00:07:10,770 --> 00:07:15,359
hello it's going<font color="#E5E5E5"> to be around 30 seconds</font>

189
00:07:13,200 --> 00:07:18,570
before anybody watching the video sees

190
00:07:15,360 --> 00:07:20,460
you wave and hears you say<font color="#E5E5E5"> hello so with</font>

191
00:07:18,570 --> 00:07:22,230
covert cast that means if a client were

192
00:07:20,460 --> 00:07:24,630
to send<font color="#E5E5E5"> some sort</font><font color="#CCCCCC"> of get requests to the</font>

193
00:07:22,230 --> 00:07:26,310
covert cat server and the server carries

194
00:07:24,630 --> 00:07:28,680
out that request gets the response

195
00:07:26,310 --> 00:07:30,750
modulates the response into the images

196
00:07:28,680 --> 00:07:32,250
<font color="#CCCCCC">and uploads them to YouTube it's going</font>

197
00:07:30,750 --> 00:07:34,980
<font color="#E5E5E5">to be around 30 seconds before the</font>

198
00:07:32,250 --> 00:07:37,230
client actually gets the response to the

199
00:07:34,980 --> 00:07:38,940
<font color="#E5E5E5">initial request it sent this is</font>

200
00:07:37,230 --> 00:07:40,470
especially unreasonable given the fact

201
00:07:38,940 --> 00:07:42,270
that most websites have hundreds of

202
00:07:40,470 --> 00:07:47,070
pieces of individual content each of

203
00:07:42,270 --> 00:07:51,200
which require<font color="#E5E5E5"> their own request how so</font>

204
00:07:47,070 --> 00:07:53,700
what covert casa does is every server is

205
00:07:51,200 --> 00:07:56,250
connected or associated<font color="#E5E5E5"> with one or</font>

206
00:07:53,700 --> 00:07:58,229
small number of websites it has a web

207
00:07:56,250 --> 00:08:00,090
crawler that<font color="#CCCCCC"> cross through these</font>

208
00:07:58,230 --> 00:08:02,940
websites downloading the content and

209
00:08:00,090 --> 00:08:04,650
<font color="#E5E5E5">then continually modulates the content</font>

210
00:08:02,940 --> 00:08:07,530
into images and uploads that content to

211
00:08:04,650 --> 00:08:11,099
YouTube a client continually monitors

212
00:08:07,530 --> 00:08:13,440
the video connection demodulates the

213
00:08:11,100 --> 00:08:15,780
content or demodulates the images into

214
00:08:13,440 --> 00:08:18,060
content catches<font color="#CCCCCC"> it locally and then can</font>

215
00:08:15,780 --> 00:08:22,169
respond<font color="#E5E5E5"> to locally to any request from</font>

216
00:08:18,060 --> 00:08:23,790
<font color="#E5E5E5">the browser on</font><font color="#CCCCCC"> the climate we've</font>

217
00:08:22,170 --> 00:08:25,770
implemented these web crawlers for five

218
00:08:23,790 --> 00:08:27,210
new sites with overcast each of them

219
00:08:25,770 --> 00:08:29,580
take less than<font color="#E5E5E5"> 30 lines of code they're</font>

220
00:08:27,210 --> 00:08:31,440
very easy to make the five sites we<font color="#CCCCCC"> have</font>

221
00:08:29,580 --> 00:08:32,880
<font color="#E5E5E5">are five new sites the USA Today in New</font>

222
00:08:31,440 --> 00:08:35,730
York Times The Guardian Wall Street

223
00:08:32,880 --> 00:08:37,770
Journal and BBC News I currently our

224
00:08:35,730 --> 00:08:40,080
functionality for the web crawlers or to

225
00:08:37,770 --> 00:08:41,610
send the front page of the news website

226
00:08:40,080 --> 00:08:43,800
and then some set number of linked

227
00:08:41,610 --> 00:08:45,420
articles from<font color="#CCCCCC"> the front</font><font color="#E5E5E5"> page then the</font>

228
00:08:43,799 --> 00:08:46,770
<font color="#E5E5E5">front page</font><font color="#CCCCCC"> again and</font><font color="#E5E5E5"> then another set of</font>

229
00:08:45,420 --> 00:08:48,750
linked articles however this

230
00:08:46,770 --> 00:08:50,930
functionality is also extremely easy<font color="#E5E5E5"> to</font>

231
00:08:48,750 --> 00:08:50,930
change

232
00:08:51,830 --> 00:08:57,480
so as I've mentioned cover cast is

233
00:08:54,270 --> 00:08:59,100
completely<font color="#E5E5E5"> one directional however as an</font>

234
00:08:57,480 --> 00:09:01,529
added benefit of that we're able to

235
00:08:59,100 --> 00:09:03,330
scale very easily and in fact every

236
00:09:01,529 --> 00:09:05,399
additional client is no extra burden on

237
00:09:03,330 --> 00:09:07,320
the<font color="#E5E5E5"> cover cast server this is due to the</font>

238
00:09:05,399 --> 00:09:09,120
fact<font color="#E5E5E5"> that we're using YouTube or these</font>

239
00:09:07,320 --> 00:09:13,890
other streaming services which are meant

240
00:09:09,120 --> 00:09:16,410
to be one too many broadcast so yeah so

241
00:09:13,890 --> 00:09:18,270
YouTube handles every single individual

242
00:09:16,410 --> 00:09:20,279
connection from clients to youtube and

243
00:09:18,270 --> 00:09:22,860
the server regardless of<font color="#E5E5E5"> the number of</font>

244
00:09:20,279 --> 00:09:26,700
<font color="#E5E5E5">clients just has one video stream from</font>

245
00:09:22,860 --> 00:09:28,649
itself to YouTube we've implemented

246
00:09:26,700 --> 00:09:30,690
covert cast primarily with Python 3

247
00:09:28,649 --> 00:09:33,720
we've<font color="#E5E5E5"> C++ for our video screen scraping</font>

248
00:09:30,690 --> 00:09:36,300
the server and client both use HTTP 1.1

249
00:09:33,720 --> 00:09:37,950
proxies HTTP<font color="#CCCCCC"> to proxies would have</font>

250
00:09:36,300 --> 00:09:39,630
simplified the implementation somewhat

251
00:09:37,950 --> 00:09:43,320
but at the time both chrome and firefox

252
00:09:39,630 --> 00:09:45,420
had bugs related to HTTP to proxies we

253
00:09:43,320 --> 00:09:46,890
used FF MPG for our video<font color="#E5E5E5"> streaming and</font>

254
00:09:45,420 --> 00:09:51,000
our web crawling was done with the<font color="#E5E5E5"> ghost</font>

255
00:09:46,890 --> 00:09:52,680
<font color="#CCCCCC">of pie headless browser to evaluate</font>

256
00:09:51,000 --> 00:09:54,779
<font color="#E5E5E5">covert cast we loaded the front page</font><font color="#CCCCCC"> and</font>

257
00:09:52,680 --> 00:09:57,120
<font color="#E5E5E5">three news stories from</font><font color="#CCCCCC"> all of our</font>

258
00:09:54,779 --> 00:09:59,490
websites we had an average<font color="#E5E5E5"> of five runs</font>

259
00:09:57,120 --> 00:10:01,380
or we took five runs and averaged the

260
00:09:59,490 --> 00:10:03,120
amount of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> it took to reduce the</font>

261
00:10:01,380 --> 00:10:04,410
amount of content being sent we

262
00:10:03,120 --> 00:10:06,480
requested the mobile version of these

263
00:10:04,410 --> 00:10:09,149
sites<font color="#E5E5E5"> they used a mobile user agent and</font>

264
00:10:06,480 --> 00:10:11,130
an ad blocker on the server as you<font color="#E5E5E5"> can</font>

265
00:10:09,149 --> 00:10:13,140
see four of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> five new sites loaded in</font>

266
00:10:11,130 --> 00:10:15,570
under two minutes so it's<font color="#CCCCCC"> about 30</font>

267
00:10:13,140 --> 00:10:17,100
seconds per page the relatively large

268
00:10:15,570 --> 00:10:18,570
size of the wall street journal is due

269
00:10:17,100 --> 00:10:20,100
to the<font color="#CCCCCC"> fact that it did not have a</font>

270
00:10:18,570 --> 00:10:22,500
mobile<font color="#CCCCCC"> version of its side at the time</font>

271
00:10:20,100 --> 00:10:23,850
and sends very high<font color="#CCCCCC"> resolution images so</font>

272
00:10:22,500 --> 00:10:27,630
there's a lot more data that has to be

273
00:10:23,850 --> 00:10:29,880
modulated in the<font color="#E5E5E5"> images consent now we</font>

274
00:10:27,630 --> 00:10:31,920
also looked at<font color="#CCCCCC"> Kevork cast it's used</font>

275
00:10:29,880 --> 00:10:34,140
under poor connections we looked at ten

276
00:10:31,920 --> 00:10:36,180
percent packet drop 800 kilobits per

277
00:10:34,140 --> 00:10:38,189
second low bandwidth we also examined

278
00:10:36,180 --> 00:10:39,660
high latency however high latency had

279
00:10:38,190 --> 00:10:42,300
very little effect on video and load

280
00:10:39,660 --> 00:10:44,399
time the packet drop in low bandwidth

281
00:10:42,300 --> 00:10:47,370
<font color="#E5E5E5">are really pushing what you can do with</font>

282
00:10:44,399 --> 00:10:48,720
YouTube 720p videos much higher<font color="#CCCCCC"> than ten</font>

283
00:10:47,370 --> 00:10:50,760
percent package drop you can't view the

284
00:10:48,720 --> 00:10:51,930
videos at all and the low bandwidth is

285
00:10:50,760 --> 00:10:55,560
less than half<font color="#CCCCCC"> of what YouTube</font>

286
00:10:51,930 --> 00:10:57,270
recommends for these 720p videos in both

287
00:10:55,560 --> 00:11:00,089
instances<font color="#E5E5E5"> the amount of time it takes to</font>

288
00:10:57,270 --> 00:11:01,439
load<font color="#E5E5E5"> a video increases this is both</font>

289
00:11:00,089 --> 00:11:03,180
loading the video and<font color="#CCCCCC"> then while</font>

290
00:11:01,440 --> 00:11:04,259
watching the<font color="#E5E5E5"> video it stutters you see</font>

291
00:11:03,180 --> 00:11:05,669
some frames for longer

292
00:11:04,259 --> 00:11:08,249
time and in some frames for a shorter

293
00:11:05,669 --> 00:11:10,470
amount of time in both<font color="#CCCCCC"> cases there were</font>

294
00:11:08,249 --> 00:11:11,999
also a small amount of images dropped is

295
00:11:10,470 --> 00:11:15,929
in less than<font color="#E5E5E5"> one percent of the total</font>

296
00:11:11,999 --> 00:11:17,790
amount of images that<font color="#CCCCCC"> were sent so</font>

297
00:11:15,929 --> 00:11:19,290
there's some issues with covert cast as

298
00:11:17,790 --> 00:11:21,269
I said it<font color="#CCCCCC"> doesn't work with Ajax or</font>

299
00:11:19,290 --> 00:11:23,039
<font color="#E5E5E5">client interaction there's no way to</font>

300
00:11:21,269 --> 00:11:26,759
send information from the client<font color="#E5E5E5"> to the</font>

301
00:11:23,039 --> 00:11:28,199
server looking at any https websites

302
00:11:26,759 --> 00:11:29,910
requires some sort<font color="#CCCCCC"> of man in the middle</font>

303
00:11:28,199 --> 00:11:32,128
or other possible security concerns

304
00:11:29,910 --> 00:11:33,329
<font color="#E5E5E5">however as it's mostly passive browsing</font>

305
00:11:32,129 --> 00:11:35,699
this probably isn't too big of an issue

306
00:11:33,329 --> 00:11:37,799
and then<font color="#E5E5E5"> finally it fails with some</font>

307
00:11:35,699 --> 00:11:39,599
sites<font color="#E5E5E5"> that use dynamic image loading so</font>

308
00:11:37,799 --> 00:11:43,319
for<font color="#E5E5E5"> example the BBC News when you first</font>

309
00:11:39,600 --> 00:11:45,299
load an article on BBC on BBC News you

310
00:11:43,319 --> 00:11:46,769
get a very<font color="#E5E5E5"> low resolution image then</font>

311
00:11:45,299 --> 00:11:48,149
after the website<font color="#E5E5E5"> is fully loaded it</font>

312
00:11:46,769 --> 00:11:49,949
requests a higher resolution image

313
00:11:48,149 --> 00:11:53,279
covert cast doesn't have these higher

314
00:11:49,949 --> 00:11:56,219
resolution images cached and so responds

315
00:11:53,279 --> 00:11:57,959
with a 404 and the BBC<font color="#CCCCCC"> news</font><font color="#E5E5E5"> website</font>

316
00:11:56,220 --> 00:12:02,639
replaces the low-resolution image with

317
00:11:57,959 --> 00:12:04,888
these blank images on the right<font color="#CCCCCC"> ok so</font>

318
00:12:02,639 --> 00:12:07,169
that's Cooper cast<font color="#E5E5E5"> censorship resistant</font>

319
00:12:04,889 --> 00:12:08,579
system with a few rough edges he<font color="#E5E5E5"> relies</font>

320
00:12:07,169 --> 00:12:10,350
on live streaming services which are

321
00:12:08,579 --> 00:12:13,160
free high bandwidth scalable and

322
00:12:10,350 --> 00:12:14,910
encrypted ways to do to tunnel web

323
00:12:13,160 --> 00:12:17,549
communication<font color="#E5E5E5"> but they have a couple</font>

324
00:12:14,910 --> 00:12:19,949
quirks for example the amount of images

325
00:12:17,549 --> 00:12:21,749
you can send per second or the latency

326
00:12:19,949 --> 00:12:22,979
involved with them and if you get

327
00:12:21,749 --> 00:12:23,819
<font color="#E5E5E5">nothing else from this talk i hope you</font>

328
00:12:22,980 --> 00:12:25,889
get that these are some really

329
00:12:23,819 --> 00:12:27,209
<font color="#E5E5E5">interesting services and</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> challenge you</font>

330
00:12:25,889 --> 00:12:30,269
<font color="#E5E5E5">all to try to go out and find other</font>

331
00:12:27,209 --> 00:12:32,608
clever ways to<font color="#CCCCCC"> use them either expanding</font>

332
00:12:30,269 --> 00:12:34,259
on what we've tried to do here making it

333
00:12:32,609 --> 00:12:36,509
better or finding other services or

334
00:12:34,259 --> 00:12:38,600
other uses for these<font color="#CCCCCC"> service sits thank</font>

335
00:12:36,509 --> 00:12:38,600
you

