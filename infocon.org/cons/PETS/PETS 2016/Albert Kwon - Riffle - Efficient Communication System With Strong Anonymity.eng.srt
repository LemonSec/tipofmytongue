1
00:00:00,000 --> 00:00:03,720
<font color="#E5E5E5">thanks for the intro</font><font color="#CCCCCC"> sir my</font><font color="#E5E5E5"> name's</font>

2
00:00:02,280 --> 00:00:05,069
<font color="#E5E5E5">Albert quad and I'll be</font><font color="#CCCCCC"> talking</font><font color="#E5E5E5"> to your</font>

3
00:00:03,720 --> 00:00:07,379
<font color="#E5E5E5">network on riffle</font><font color="#CCCCCC"> and an official</font>

4
00:00:05,069 --> 00:00:09,840
anonymous communication<font color="#CCCCCC"> system and just</font>

5
00:00:07,379 --> 00:00:15,149
<font color="#E5E5E5">a story work between</font><font color="#CCCCCC"> myself</font><font color="#E5E5E5"> David and</font>

6
00:00:09,840 --> 00:00:16,890
Serena at MIT<font color="#E5E5E5"> and Bryan</font><font color="#CCCCCC"> ADP</font><font color="#E5E5E5"> FL so let's</font>

7
00:00:15,150 --> 00:00:18,720
say Alice and Bob wants to talk<font color="#E5E5E5"> to each</font>

8
00:00:16,890 --> 00:00:20,789
other and in particular let's<font color="#CCCCCC"> say Alice</font>

9
00:00:18,720 --> 00:00:24,599
wants to send some confidential document

10
00:00:20,789 --> 00:00:26,550
or a video<font color="#E5E5E5"> to Bob</font><font color="#CCCCCC"> so our goal is to</font><font color="#E5E5E5"> be</font>

11
00:00:24,600 --> 00:00:28,500
to allow them to<font color="#CCCCCC"> do this anonymously I'm</font>

12
00:00:26,550 --> 00:00:31,309
sure everybody here at least agrees<font color="#CCCCCC"> that</font>

13
00:00:28,500 --> 00:00:34,680
anonymity<font color="#E5E5E5"> is generally a good</font><font color="#CCCCCC"> thing so</font>

14
00:00:31,309 --> 00:00:36,570
so so<font color="#CCCCCC"> there are two forms of anonymity</font>

15
00:00:34,680 --> 00:00:39,059
<font color="#CCCCCC">in particular we want</font><font color="#E5E5E5"> to provide the</font>

16
00:00:36,570 --> 00:00:40,680
first<font color="#CCCCCC"> ascender</font><font color="#E5E5E5"> anonymity where Alice's</font>

17
00:00:39,059 --> 00:00:42,870
identity is protected<font color="#CCCCCC"> from the rest of</font>

18
00:00:40,680 --> 00:00:44,550
<font color="#E5E5E5">the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> and Bob so this is</font>

19
00:00:42,870 --> 00:00:46,680
particularly<font color="#E5E5E5"> useful if</font><font color="#CCCCCC"> Alice's a</font>

20
00:00:44,550 --> 00:00:47,279
journalist<font color="#E5E5E5"> or a source and she doesn't</font>

21
00:00:46,680 --> 00:00:48,390
<font color="#E5E5E5">want that</font>

22
00:00:47,280 --> 00:00:51,559
you know the document or that

23
00:00:48,390 --> 00:00:54,120
<font color="#CCCCCC">information associated directly</font><font color="#E5E5E5"> with her</font>

24
00:00:51,559 --> 00:00:56,250
the other<font color="#E5E5E5"> form of anonymity is receiver</font>

25
00:00:54,120 --> 00:00:58,140
anonymity<font color="#E5E5E5"> where Bob's identity is</font>

26
00:00:56,250 --> 00:01:00,120
<font color="#CCCCCC">protected from alice and rest of the</font>

27
00:00:58,140 --> 00:01:02,520
internet so it's just useful for

28
00:01:00,120 --> 00:01:05,069
instance<font color="#CCCCCC"> of Bob</font><font color="#E5E5E5"> as WikiLeaks and he</font>

29
00:01:02,520 --> 00:01:06,450
doesn't<font color="#E5E5E5"> want his true identity</font><font color="#CCCCCC"> knowns</font><font color="#E5E5E5"> to</font>

30
00:01:05,069 --> 00:01:08,850
avoid you know persecution or shutdown

31
00:01:06,450 --> 00:01:12,090
<font color="#E5E5E5">of kinds so so these are the two forms</font>

32
00:01:08,850 --> 00:01:14,520
of<font color="#E5E5E5"> anonymity</font><font color="#CCCCCC"> that we would want how</font><font color="#E5E5E5"> can</font>

33
00:01:12,090 --> 00:01:16,259
we do this right<font color="#CCCCCC"> now so this really the</font>

34
00:01:14,520 --> 00:01:18,060
<font color="#CCCCCC">standard way to</font><font color="#E5E5E5"> do this would be to</font><font color="#CCCCCC"> use</font>

35
00:01:16,259 --> 00:01:21,330
tor and in<font color="#CCCCCC"> particular</font><font color="#E5E5E5"> used for hidden</font>

36
00:01:18,060 --> 00:01:23,400
services to get both forms of anonymity

37
00:01:21,330 --> 00:01:25,350
unfortunately in past decade or<font color="#E5E5E5"> so we've</font>

38
00:01:23,400 --> 00:01:29,070
<font color="#CCCCCC">seen a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> different attacks on tour</font>

39
00:01:25,350 --> 00:01:31,559
and some of which<font color="#E5E5E5"> are</font><font color="#CCCCCC"> in particular two</font>

40
00:01:29,070 --> 00:01:33,658
hidden services and in general in a

41
00:01:31,560 --> 00:01:36,030
tourist weakness against school<font color="#CCCCCC"> of</font>

42
00:01:33,659 --> 00:01:38,729
adversaries and traffic analysis attacks

43
00:01:36,030 --> 00:01:40,590
weren't<font color="#E5E5E5"> something that I wanted to see</font>

44
00:01:38,729 --> 00:01:42,240
in a very<font color="#E5E5E5"> strong anonymous</font><font color="#CCCCCC"> communication</font>

45
00:01:40,590 --> 00:01:47,850
network<font color="#E5E5E5"> so we wanted</font><font color="#CCCCCC"> to design something</font>

46
00:01:42,240 --> 00:01:49,949
better so before we get into<font color="#CCCCCC"> our</font>

47
00:01:47,850 --> 00:01:52,289
protocol we first start<font color="#E5E5E5"> with mixed nuts</font>

48
00:01:49,950 --> 00:01:54,659
<font color="#E5E5E5">proposed by David charm in the 70s and</font>

49
00:01:52,290 --> 00:01:57,270
80s so we go even<font color="#E5E5E5"> farther back and</font><font color="#CCCCCC"> tor</font>

50
00:01:54,659 --> 00:01:59,159
was<font color="#E5E5E5"> proposed the</font><font color="#CCCCCC"> high-level picture of</font>

51
00:01:57,270 --> 00:02:01,560
how mixed nuts work is kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> similar</font>

52
00:01:59,159 --> 00:02:02,759
to<font color="#CCCCCC"> tort you have</font><font color="#E5E5E5"> the handful of servers</font>

53
00:02:01,560 --> 00:02:04,799
<font color="#E5E5E5">and the messages are routed through</font>

54
00:02:02,759 --> 00:02:06,450
these servers<font color="#E5E5E5"> but instead of routing one</font>

55
00:02:04,799 --> 00:02:08,700
message at a time you know directly<font color="#E5E5E5"> as</font>

56
00:02:06,450 --> 00:02:10,170
they come instead you gather a few

57
00:02:08,699 --> 00:02:13,019
<font color="#CCCCCC">peoples of</font>

58
00:02:10,169 --> 00:02:16,260
users messages usually actually<font color="#E5E5E5"> many</font>

59
00:02:13,020 --> 00:02:18,330
users messages and each server<font color="#E5E5E5"> and each</font>

60
00:02:16,260 --> 00:02:20,340
user submits an onion encrypted message

61
00:02:18,330 --> 00:02:22,440
for all<font color="#E5E5E5"> the servers right and each</font>

62
00:02:20,340 --> 00:02:25,080
server takes in these<font color="#E5E5E5"> messages decrypt a</font>

63
00:02:22,440 --> 00:02:27,209
layer<font color="#E5E5E5"> randomly shuffles them or permits</font>

64
00:02:25,080 --> 00:02:28,650
them however<font color="#E5E5E5"> you want to call it and</font><font color="#CCCCCC"> you</font>

65
00:02:27,209 --> 00:02:31,319
know<font color="#CCCCCC"> a second server does the same and</font>

66
00:02:28,650 --> 00:02:35,400
<font color="#E5E5E5">the last server is in charge of relaying</font>

67
00:02:31,319 --> 00:02:36,720
that<font color="#E5E5E5"> is to its final destination</font><font color="#CCCCCC"> and</font>

68
00:02:35,400 --> 00:02:40,140
this is how you can send<font color="#CCCCCC"> our anonymity</font>

69
00:02:36,720 --> 00:02:41,340
<font color="#E5E5E5">because if these shuffles are random you</font>

70
00:02:40,140 --> 00:02:45,059
shouldn't be able<font color="#E5E5E5"> to associate which</font>

71
00:02:41,340 --> 00:02:47,489
<font color="#CCCCCC">messages originated from which client so</font>

72
00:02:45,060 --> 00:02:49,500
there<font color="#E5E5E5"> are two problems</font><font color="#CCCCCC"> with this</font><font color="#E5E5E5"> just</font>

73
00:02:47,489 --> 00:02:50,850
with mixed nuts<font color="#E5E5E5"> the first is that at</font>

74
00:02:49,500 --> 00:02:53,489
<font color="#E5E5E5">least by default there's no receiver</font>

75
00:02:50,850 --> 00:02:55,410
anonymity so here as<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see the</font>

76
00:02:53,489 --> 00:02:57,150
Alice's on the<font color="#E5E5E5"> Left needed to know which</font>

77
00:02:55,410 --> 00:02:59,280
you know the<font color="#CCCCCC"> bops identities and</font>

78
00:02:57,150 --> 00:03:00,750
indicate<font color="#CCCCCC"> to the third server that</font><font color="#E5E5E5"> you</font>

79
00:02:59,280 --> 00:03:02,700
know<font color="#E5E5E5"> this message is meant for you know</font>

80
00:03:00,750 --> 00:03:04,530
the<font color="#CCCCCC"> red Bob for instance right</font><font color="#E5E5E5"> so</font>

81
00:03:02,700 --> 00:03:08,250
there's no receiver identity<font color="#E5E5E5"> and the</font>

82
00:03:04,530 --> 00:03:10,470
second is a little<font color="#CCCCCC"> more subtle</font><font color="#E5E5E5"> in that</font>

83
00:03:08,250 --> 00:03:12,569
if you start having actively malicious

84
00:03:10,470 --> 00:03:14,220
servers for<font color="#CCCCCC"> permuting</font><font color="#E5E5E5"> your messages then</font>

85
00:03:12,569 --> 00:03:17,070
you may not even<font color="#E5E5E5"> have sender anonymity</font>

86
00:03:14,220 --> 00:03:18,630
<font color="#E5E5E5">so consider this example attack where</font>

87
00:03:17,070 --> 00:03:22,200
the<font color="#E5E5E5"> first server and the last servers</font>

88
00:03:18,630 --> 00:03:23,880
they are malicious so when these

89
00:03:22,200 --> 00:03:26,820
<font color="#E5E5E5">messages come</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> first server is</font>

90
00:03:23,880 --> 00:03:27,989
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> replace all messages</font><font color="#CCCCCC"> except</font><font color="#E5E5E5"> for</font>

91
00:03:26,820 --> 00:03:29,760
one that<font color="#CCCCCC"> is interested in the</font>

92
00:03:27,989 --> 00:03:32,280
anonymizing so in this case the<font color="#CCCCCC"> read</font>

93
00:03:29,760 --> 00:03:34,500
<font color="#CCCCCC">message here</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> send</font><font color="#E5E5E5"> by the last Alice</font>

94
00:03:32,280 --> 00:03:36,390
on the left so the other messages<font color="#E5E5E5"> are</font>

95
00:03:34,500 --> 00:03:38,489
you know onion encrypted garbage

96
00:03:36,390 --> 00:03:39,869
<font color="#E5E5E5">messages essentially and the second</font>

97
00:03:38,489 --> 00:03:41,519
server has no<font color="#CCCCCC"> way to really tell that</font>

98
00:03:39,870 --> 00:03:45,030
<font color="#E5E5E5">this has happened because everything he</font>

99
00:03:41,519 --> 00:03:46,470
<font color="#CCCCCC">is</font><font color="#E5E5E5"> using public key crypto and and so</font>

100
00:03:45,030 --> 00:03:48,480
it's going<font color="#E5E5E5"> to happily carry out this</font>

101
00:03:46,470 --> 00:03:50,130
<font color="#CCCCCC">protocol</font><font color="#E5E5E5"> and the third server is</font><font color="#CCCCCC"> going</font>

102
00:03:48,480 --> 00:03:52,920
<font color="#E5E5E5">to you know just drop all the garbage</font>

103
00:03:50,130 --> 00:03:54,269
messages and then just<font color="#CCCCCC"> really</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> relay</font>

104
00:03:52,920 --> 00:03:56,369
<font color="#E5E5E5">the red message only so now the</font>

105
00:03:54,269 --> 00:03:57,930
adversary<font color="#CCCCCC"> knows that the</font><font color="#E5E5E5"> bottom most</font>

106
00:03:56,370 --> 00:04:01,620
person on left is talking to the red

107
00:03:57,930 --> 00:04:03,900
person on the right so in general<font color="#E5E5E5"> these</font>

108
00:04:01,620 --> 00:04:06,239
sort of tampering attacks where the

109
00:04:03,900 --> 00:04:07,739
actively malicious mixes or<font color="#CCCCCC"> the server's</font>

110
00:04:06,239 --> 00:04:09,480
<font color="#E5E5E5">tampering</font><font color="#CCCCCC"> with your messages is the</font>

111
00:04:07,739 --> 00:04:14,069
<font color="#E5E5E5">reason why Sundra the new media may</font><font color="#CCCCCC"> be</font>

112
00:04:09,480 --> 00:04:16,139
<font color="#E5E5E5">broken in practice in mixed nuts so how</font>

113
00:04:14,069 --> 00:04:17,820
can we fix this<font color="#E5E5E5"> so in in 2000's there</font>

114
00:04:16,139 --> 00:04:20,940
was a new crypto primitive called

115
00:04:17,820 --> 00:04:22,048
verifiable shuffle proposed to exactly

116
00:04:20,940 --> 00:04:23,160
address this problem

117
00:04:22,048 --> 00:04:25,380
so here what<font color="#E5E5E5"> happened</font>

118
00:04:23,160 --> 00:04:27,540
is when server<font color="#E5E5E5"> shuffles our permits</font>

119
00:04:25,380 --> 00:04:29,790
these messages<font color="#E5E5E5"> it also generates a zero</font>

120
00:04:27,540 --> 00:04:31,560
knowledge proof of the permutation<font color="#CCCCCC"> what</font>

121
00:04:29,790 --> 00:04:33,270
this means is that it's a<font color="#E5E5E5"> it's a proof</font>

122
00:04:31,560 --> 00:04:35,670
that<font color="#CCCCCC"> the output forms a valid</font>

123
00:04:33,270 --> 00:04:37,469
permutation<font color="#E5E5E5"> of the input so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can tell</font>

124
00:04:35,670 --> 00:04:39,180
<font color="#CCCCCC">that no message has been tampered with</font>

125
00:04:37,470 --> 00:04:41,310
<font color="#E5E5E5">but it's also zero knowledge with</font>

126
00:04:39,180 --> 00:04:43,470
<font color="#E5E5E5">respect to the permutation and that you</font>

127
00:04:41,310 --> 00:04:45,360
know nobody<font color="#E5E5E5"> else actually</font><font color="#CCCCCC"> checking this</font>

128
00:04:43,470 --> 00:04:47,040
proof can tell whether you know what

129
00:04:45,360 --> 00:04:50,070
permutation or how it was<font color="#E5E5E5"> actually</font>

130
00:04:47,040 --> 00:04:52,200
shuffled so<font color="#CCCCCC"> this is how you keep the</font>

131
00:04:50,070 --> 00:04:54,870
<font color="#E5E5E5">security of the shuffling and the random</font>

132
00:04:52,200 --> 00:04:56,880
<font color="#E5E5E5">permutation without you know and while</font>

133
00:04:54,870 --> 00:04:59,730
preserving this<font color="#E5E5E5"> tamper proof property</font>

134
00:04:56,880 --> 00:05:02,159
and so you know the second server

135
00:04:59,730 --> 00:05:04,260
misbehaves<font color="#E5E5E5"> now the second first</font><font color="#CCCCCC"> ever</font>

136
00:05:02,160 --> 00:05:06,390
misbehaves<font color="#E5E5E5"> then the second server could</font>

137
00:05:04,260 --> 00:05:07,620
check the proof and<font color="#CCCCCC"> whistleblow with you</font>

138
00:05:06,390 --> 00:05:09,270
know this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> really knowledge proof and</font>

139
00:05:07,620 --> 00:05:13,950
the<font color="#CCCCCC"> messages it got and let everybody</font>

140
00:05:09,270 --> 00:05:16,400
know first<font color="#E5E5E5"> servers misbehaving</font><font color="#CCCCCC"> so with</font>

141
00:05:13,950 --> 00:05:18,900
<font color="#E5E5E5">this in mind we</font><font color="#CCCCCC"> can actually create a</font>

142
00:05:16,400 --> 00:05:20,580
verifiable<font color="#CCCCCC"> mix net where</font><font color="#E5E5E5"> you use</font>

143
00:05:18,900 --> 00:05:22,530
verifiable shuffle all the way and this

144
00:05:20,580 --> 00:05:24,240
actually you can show this you can show

145
00:05:22,530 --> 00:05:28,020
that<font color="#E5E5E5"> this preserves sender anonymity</font>

146
00:05:24,240 --> 00:05:30,360
even in the actively malicious cases and

147
00:05:28,020 --> 00:05:33,000
we kind of add<font color="#E5E5E5"> a kind</font><font color="#CCCCCC"> of trivial form of</font>

148
00:05:30,360 --> 00:05:35,010
receiver anonymity<font color="#E5E5E5"> by broadcasting say</font>

149
00:05:33,000 --> 00:05:37,170
all<font color="#E5E5E5"> messages to every recipient</font><font color="#CCCCCC"> in the</font>

150
00:05:35,010 --> 00:05:39,719
network every potential recipient<font color="#E5E5E5"> so</font>

151
00:05:37,170 --> 00:05:40,169
again<font color="#E5E5E5"> so this is kind of trivially a</font>

152
00:05:39,720 --> 00:05:42,120
<font color="#CCCCCC">cheeps</font>

153
00:05:40,169 --> 00:05:43,469
<font color="#CCCCCC">receive remedy</font><font color="#E5E5E5"> because all messages I</font>

154
00:05:42,120 --> 00:05:49,110
<font color="#E5E5E5">sent everybody you don't know which</font>

155
00:05:43,470 --> 00:05:50,820
message is<font color="#E5E5E5"> meant for home so the two</font>

156
00:05:49,110 --> 00:05:52,380
<font color="#CCCCCC">main so so this actually satisfy the</font>

157
00:05:50,820 --> 00:05:54,570
security properties<font color="#CCCCCC"> that we wanted</font><font color="#E5E5E5"> it</font>

158
00:05:52,380 --> 00:05:56,130
provides both forms of anonymity but you

159
00:05:54,570 --> 00:05:57,990
have two big problems<font color="#CCCCCC"> with performance</font>

160
00:05:56,130 --> 00:06:00,210
the first is that verifiable shuffles

161
00:05:57,990 --> 00:06:02,250
are very computationally expensive<font color="#CCCCCC"> so to</font>

162
00:06:00,210 --> 00:06:04,320
give<font color="#CCCCCC"> you a concrete</font><font color="#E5E5E5"> point it takes a</font>

163
00:06:02,250 --> 00:06:06,000
<font color="#E5E5E5">couple of minutes to shuffle a hundred</font>

164
00:06:04,320 --> 00:06:07,860
<font color="#E5E5E5">thousand short</font><font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> you know</font>

165
00:06:06,000 --> 00:06:09,930
thanks symmetric keys like 128-bit

166
00:06:07,860 --> 00:06:11,040
symmetric keys so if it<font color="#E5E5E5"> takes in a</font>

167
00:06:09,930 --> 00:06:12,419
couple minutes<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> that we can't</font>

168
00:06:11,040 --> 00:06:16,440
really<font color="#E5E5E5"> use this for any</font><font color="#CCCCCC"> sort of latency</font>

169
00:06:12,419 --> 00:06:17,969
<font color="#E5E5E5">sensitive communication and the other</font>

170
00:06:16,440 --> 00:06:19,860
one is<font color="#E5E5E5"> fairly obvious you know you're</font>

171
00:06:17,970 --> 00:06:21,630
broadcasting<font color="#CCCCCC"> the whole message you had</font>

172
00:06:19,860 --> 00:06:23,940
this order<font color="#E5E5E5"> and bandwidth overhead per</font>

173
00:06:21,630 --> 00:06:26,400
<font color="#CCCCCC">message do you</font><font color="#E5E5E5"> really don't want this</font>

174
00:06:23,940 --> 00:06:28,469
and to make this worse<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is between</font>

175
00:06:26,400 --> 00:06:30,299
<font color="#E5E5E5">every client and server rather than say</font>

176
00:06:28,470 --> 00:06:32,250
server to server so because of mixed

177
00:06:30,300 --> 00:06:34,350
nuts you<font color="#CCCCCC"> have say handful of servers</font>

178
00:06:32,250 --> 00:06:35,169
maybe you can assume they have<font color="#E5E5E5"> good</font>

179
00:06:34,350 --> 00:06:36,819
connectivity

180
00:06:35,169 --> 00:06:38,770
<font color="#E5E5E5">the</font><font color="#CCCCCC"> server's</font><font color="#E5E5E5"> but it's really hard to do</font>

181
00:06:36,819 --> 00:06:42,490
<font color="#E5E5E5">that or</font><font color="#CCCCCC"> really hard</font><font color="#E5E5E5"> to assume this</font>

182
00:06:38,770 --> 00:06:45,188
<font color="#E5E5E5">between every client server pair so</font>

183
00:06:42,490 --> 00:06:47,199
<font color="#E5E5E5">River</font><font color="#CCCCCC"> protocol aims to</font><font color="#E5E5E5"> solve these</font><font color="#CCCCCC"> two</font>

184
00:06:45,189 --> 00:06:49,180
problems<font color="#E5E5E5"> exactly without sacrificing the</font>

185
00:06:47,199 --> 00:06:54,310
<font color="#CCCCCC">security of the of the scheme I proposed</font>

186
00:06:49,180 --> 00:06:56,050
before<font color="#E5E5E5"> so before we move on the security</font>

187
00:06:54,310 --> 00:06:57,759
<font color="#E5E5E5">of the model and</font><font color="#CCCCCC"> in which riffles yes</font>

188
00:06:56,050 --> 00:06:59,740
it's similar to<font color="#CCCCCC"> mixin it's</font><font color="#E5E5E5"> so we have</font>

189
00:06:57,759 --> 00:07:02,229
handful of servers<font color="#CCCCCC"> that collectively</font>

190
00:06:59,740 --> 00:07:04,090
behave as anonymity provider<font color="#E5E5E5"> and we had</font>

191
00:07:02,229 --> 00:07:07,449
lots of client who<font color="#CCCCCC"> wish to communicate</font>

192
00:07:04,090 --> 00:07:09,549
anonymously<font color="#E5E5E5"> and we allow any</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> will not</font>

193
00:07:07,449 --> 00:07:11,680
all but one server to<font color="#CCCCCC"> be malicious and</font>

194
00:07:09,550 --> 00:07:13,300
the<font color="#E5E5E5"> identity of the</font><font color="#CCCCCC"> honest server</font><font color="#E5E5E5"> need</font>

195
00:07:11,680 --> 00:07:17,949
not be known we just need guaranteed

196
00:07:13,300 --> 00:07:19,270
existence of<font color="#CCCCCC"> one and also we allow</font><font color="#E5E5E5"> any</font>

197
00:07:17,949 --> 00:07:20,860
number of clients to be malicious and

198
00:07:19,270 --> 00:07:24,340
<font color="#CCCCCC">our goal</font><font color="#E5E5E5"> is to provide anonymity among</font>

199
00:07:20,860 --> 00:07:26,919
all the honest clients one<font color="#E5E5E5"> last thing to</font>

200
00:07:24,340 --> 00:07:28,960
<font color="#E5E5E5">notice that communication in Rio is done</font>

201
00:07:26,919 --> 00:07:30,370
<font color="#CCCCCC">and round</font><font color="#E5E5E5"> to avoid traffic analysis</font>

202
00:07:28,960 --> 00:07:32,859
<font color="#CCCCCC">resistance so in every</font><font color="#E5E5E5"> round every</font>

203
00:07:30,370 --> 00:07:35,349
client uploads<font color="#E5E5E5"> and our sends and</font>

204
00:07:32,860 --> 00:07:36,999
receives a message<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it doesn't</font>

205
00:07:35,349 --> 00:07:40,589
<font color="#CCCCCC">you take a single</font><font color="#E5E5E5"> doubt by</font><font color="#CCCCCC"> you're not</font>

206
00:07:36,999 --> 00:07:40,589
<font color="#E5E5E5">uploading or not downloading something</font>

207
00:07:41,819 --> 00:07:46,539
so first thing<font color="#E5E5E5"> we addressed is the</font>

208
00:07:44,520 --> 00:07:48,909
computational<font color="#E5E5E5"> overhead of the shuffling</font>

209
00:07:46,539 --> 00:07:50,259
<font color="#E5E5E5">so the high-level idea is is actually</font>

210
00:07:48,909 --> 00:07:52,719
quite<font color="#CCCCCC"> simple what we're going to</font><font color="#E5E5E5"> do is</font>

211
00:07:50,259 --> 00:07:54,699
we're<font color="#CCCCCC"> going to use verifiable shuffle to</font>

212
00:07:52,719 --> 00:07:56,770
set up symmetric keys that these<font color="#E5E5E5"> keys</font>

213
00:07:54,699 --> 00:07:58,839
are<font color="#E5E5E5"> pairwise for every client server</font>

214
00:07:56,770 --> 00:08:00,878
pair<font color="#E5E5E5"> and then we're going to then use</font>

215
00:07:58,839 --> 00:08:03,939
authenticated encryption<font color="#E5E5E5"> and just use</font>

216
00:08:00,879 --> 00:08:07,750
symmetric symmetric crypto to send the

217
00:08:03,939 --> 00:08:08,800
<font color="#E5E5E5">actual large messages and so</font><font color="#CCCCCC"> sustain</font>

218
00:08:07,750 --> 00:08:11,770
<font color="#E5E5E5">another way we're bootstrapping</font>

219
00:08:08,800 --> 00:08:13,750
verifiability of the expensive crypto<font color="#E5E5E5"> by</font>

220
00:08:11,770 --> 00:08:15,430
using expensive crypto<font color="#E5E5E5"> ones for the</font>

221
00:08:13,750 --> 00:08:20,560
symmetric crypto<font color="#CCCCCC"> and we'll see the</font>

222
00:08:15,430 --> 00:08:22,599
details so so<font color="#CCCCCC"> hybrid chef Juanita</font>

223
00:08:20,560 --> 00:08:24,279
consists of two phases the first<font color="#CCCCCC"> is</font>

224
00:08:22,599 --> 00:08:28,270
<font color="#CCCCCC">setup</font><font color="#E5E5E5"> where the actual keys are shared</font>

225
00:08:24,279 --> 00:08:30,310
so each client<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> generate a</font><font color="#CCCCCC"> pairwise</font>

226
00:08:28,270 --> 00:08:32,409
key for all the<font color="#E5E5E5"> servers</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's going</font>

227
00:08:30,310 --> 00:08:33,760
to<font color="#E5E5E5"> onion encrypt a different number</font><font color="#CCCCCC"> of</font>

228
00:08:32,409 --> 00:08:35,559
layers<font color="#CCCCCC"> depending on which server it's</font>

229
00:08:33,760 --> 00:08:36,880
meant for so for instance if it's meant

230
00:08:35,559 --> 00:08:38,890
for a first server it's going<font color="#CCCCCC"> to do</font>

231
00:08:36,880 --> 00:08:43,240
onion<font color="#E5E5E5"> encrypt at</font><font color="#CCCCCC"> once</font><font color="#E5E5E5"> second server</font>

232
00:08:38,890 --> 00:08:44,949
twice<font color="#E5E5E5"> their server three times and so</font>

233
00:08:43,240 --> 00:08:46,420
once these<font color="#E5E5E5"> keys are collected at the</font>

234
00:08:44,949 --> 00:08:48,790
first server<font color="#E5E5E5"> the first server is going</font>

235
00:08:46,420 --> 00:08:49,380
to decrypt<font color="#E5E5E5"> the layer and it's going to</font>

236
00:08:48,790 --> 00:08:51,630
keep the

237
00:08:49,380 --> 00:08:55,140
<font color="#E5E5E5">meant for</font><font color="#CCCCCC"> it and it's going to</font>

238
00:08:51,630 --> 00:08:57,180
verifiably shuffle the other<font color="#CCCCCC"> tees before</font>

239
00:08:55,140 --> 00:08:59,640
<font color="#E5E5E5">sending it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the second server and vote</font>

240
00:08:57,180 --> 00:09:01,979
<font color="#CCCCCC">for both sets</font><font color="#E5E5E5"> of keys it's going to use</font>

241
00:08:59,640 --> 00:09:04,140
the<font color="#E5E5E5"> same permutation right the second</font>

242
00:09:01,980 --> 00:09:05,790
server now it does the same<font color="#E5E5E5"> and since</font>

243
00:09:04,140 --> 00:09:08,699
<font color="#E5E5E5">it's and verifiable shuffles</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> keys</font>

244
00:09:05,790 --> 00:09:10,680
for<font color="#E5E5E5"> last servant does the same so at the</font>

245
00:09:08,700 --> 00:09:13,110
end<font color="#E5E5E5"> of setup all the</font><font color="#CCCCCC"> server's now have</font>

246
00:09:10,680 --> 00:09:14,609
some permitted<font color="#E5E5E5"> version</font><font color="#CCCCCC"> of the keys and</font>

247
00:09:13,110 --> 00:09:16,200
because these keys are<font color="#CCCCCC"> verifiably</font>

248
00:09:14,610 --> 00:09:18,180
shuffled they have guarantee that these

249
00:09:16,200 --> 00:09:20,850
<font color="#E5E5E5">keys originated from the clients and</font>

250
00:09:18,180 --> 00:09:22,410
it's also the<font color="#CCCCCC"> zero knowledge</font><font color="#E5E5E5"> miss of the</font>

251
00:09:20,850 --> 00:09:24,570
verifiable<font color="#CCCCCC"> total guarantees they can't</font>

252
00:09:22,410 --> 00:09:25,800
figure<font color="#E5E5E5"> out which</font><font color="#CCCCCC"> client sent which of</font>

253
00:09:24,570 --> 00:09:28,070
<font color="#E5E5E5">these keys at least for the honest</font>

254
00:09:25,800 --> 00:09:31,949
clients

255
00:09:28,070 --> 00:09:34,050
so once the keys are<font color="#E5E5E5"> set up now to</font>

256
00:09:31,950 --> 00:09:35,430
upload<font color="#E5E5E5"> your just so this is yeah when</font>

257
00:09:34,050 --> 00:09:37,290
they<font color="#CCCCCC"> actually send</font><font color="#E5E5E5"> out messages each</font>

258
00:09:35,430 --> 00:09:39,449
<font color="#E5E5E5">client just simply onion encrypts their</font>

259
00:09:37,290 --> 00:09:42,390
message with the keys they shared

260
00:09:39,450 --> 00:09:43,830
earlier so first ever is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> you</font>

261
00:09:42,390 --> 00:09:45,180
<font color="#E5E5E5">know kind of trivially match these keys</font>

262
00:09:43,830 --> 00:09:47,700
decrypt<font color="#E5E5E5"> the layer and it's going to</font>

263
00:09:45,180 --> 00:09:50,609
permute<font color="#E5E5E5"> using the same</font><font color="#CCCCCC"> permutation as it</font>

264
00:09:47,700 --> 00:09:52,680
did with the<font color="#E5E5E5"> keys</font><font color="#CCCCCC"> to permute these one</font>

265
00:09:50,610 --> 00:09:54,810
<font color="#CCCCCC">late one less layer</font><font color="#E5E5E5"> of ciphertext</font><font color="#CCCCCC"> and</font>

266
00:09:52,680 --> 00:09:56,640
now when the second server receives them

267
00:09:54,810 --> 00:09:58,319
because if the same permutation was used

268
00:09:56,640 --> 00:10:00,930
<font color="#E5E5E5">the keys and the ciphertext naturally</font>

269
00:09:58,320 --> 00:10:02,670
line up with each<font color="#CCCCCC"> other</font><font color="#E5E5E5"> so without</font>

270
00:10:00,930 --> 00:10:04,319
<font color="#E5E5E5">knowing</font><font color="#CCCCCC"> the actual permutation or</font><font color="#E5E5E5"> with</font>

271
00:10:02,670 --> 00:10:07,530
who sent which message the second server

272
00:10:04,320 --> 00:10:09,000
<font color="#CCCCCC">can decrypt a layer and again for do the</font>

273
00:10:07,530 --> 00:10:11,730
same for the last server and the last

274
00:10:09,000 --> 00:10:13,760
server can finally output per muted

275
00:10:11,730 --> 00:10:17,970
version of the plaintext messages here

276
00:10:13,760 --> 00:10:19,710
so now so it's a zero<font color="#E5E5E5"> knowledge does</font>

277
00:10:17,970 --> 00:10:21,390
your<font color="#E5E5E5"> notes property ensures that the</font>

278
00:10:19,710 --> 00:10:23,490
none<font color="#E5E5E5"> of the server's learn the actual</font>

279
00:10:21,390 --> 00:10:26,400
permutation of<font color="#CCCCCC"> decipher text messages</font>

280
00:10:23,490 --> 00:10:28,350
and<font color="#CCCCCC"> also the</font><font color="#E5E5E5"> the fact that we're using</font>

281
00:10:26,400 --> 00:10:30,120
authenticated encryption means that

282
00:10:28,350 --> 00:10:32,520
first<font color="#CCCCCC"> number can really tamper with the</font>

283
00:10:30,120 --> 00:10:34,380
messages<font color="#E5E5E5"> for the downstream servers</font>

284
00:10:32,520 --> 00:10:35,910
<font color="#E5E5E5">because the second server for instance</font>

285
00:10:34,380 --> 00:10:37,620
<font color="#E5E5E5">would catch this right because</font><font color="#CCCCCC"> first</font>

286
00:10:35,910 --> 00:10:39,660
server doesn't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> the keys the</font>

287
00:10:37,620 --> 00:10:41,520
<font color="#E5E5E5">necessary keys to tamper</font><font color="#CCCCCC"> with it and</font>

288
00:10:39,660 --> 00:10:45,000
<font color="#CCCCCC">let's gate encryption guarantees the</font><font color="#E5E5E5"> CI</font>

289
00:10:41,520 --> 00:10:47,970
<font color="#E5E5E5">a of the symmetric crypto the ciphertext</font>

290
00:10:45,000 --> 00:10:50,340
<font color="#CCCCCC">and so upload can be done</font><font color="#E5E5E5"> over and over</font>

291
00:10:47,970 --> 00:10:52,050
<font color="#CCCCCC">again</font><font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> how we amortize a cost</font>

292
00:10:50,340 --> 00:10:57,870
of<font color="#E5E5E5"> extensive public key</font><font color="#CCCCCC"> a verifiable</font>

293
00:10:52,050 --> 00:11:00,510
shuffle<font color="#CCCCCC"> so to</font><font color="#E5E5E5"> to improve the broadcast</font>

294
00:10:57,870 --> 00:11:02,010
bandwidth we use PIR and so we replace

295
00:11:00,510 --> 00:11:03,660
broadcast was simply just<font color="#E5E5E5"> multi server</font>

296
00:11:02,010 --> 00:11:06,240
<font color="#CCCCCC">carry our I don't have</font><font color="#E5E5E5"> details</font><font color="#CCCCCC"> the cool</font>

297
00:11:03,660 --> 00:11:10,140
the scheme or our optimizations but if

298
00:11:06,240 --> 00:11:11,670
you have<font color="#CCCCCC"> M servers</font><font color="#E5E5E5"> and end clients</font><font color="#CCCCCC"> what</font>

299
00:11:10,140 --> 00:11:14,040
we<font color="#E5E5E5"> get is that</font><font color="#CCCCCC"> between client and server</font>

300
00:11:11,670 --> 00:11:16,829
we reduce end messages to just one

301
00:11:14,040 --> 00:11:18,689
message<font color="#CCCCCC"> plus n bits</font><font color="#E5E5E5"> so even for</font><font color="#CCCCCC"> a</font>

302
00:11:16,830 --> 00:11:22,290
million clients<font color="#E5E5E5"> it's just</font><font color="#CCCCCC"> billion bits</font>

303
00:11:18,690 --> 00:11:24,450
it's just it's actually just one<font color="#E5E5E5"> bit and</font>

304
00:11:22,290 --> 00:11:27,270
we believe<font color="#CCCCCC"> it's some fairly</font><font color="#E5E5E5"> reasonable</font>

305
00:11:24,450 --> 00:11:30,030
<font color="#E5E5E5">and four but this doesn't come for free</font>

306
00:11:27,270 --> 00:11:33,510
<font color="#E5E5E5">yes we introduced a new metric so we</font>

307
00:11:30,030 --> 00:11:37,230
have to send<font color="#E5E5E5"> em - once messages between</font>

308
00:11:33,510 --> 00:11:38,640
<font color="#E5E5E5">servers but two things to note want the</font>

309
00:11:37,230 --> 00:11:41,880
<font color="#E5E5E5">total amount of bandwidth is still much</font>

310
00:11:38,640 --> 00:11:43,260
<font color="#E5E5E5">less than</font><font color="#CCCCCC"> end messages and - we believe</font>

311
00:11:41,880 --> 00:11:45,060
that server<font color="#E5E5E5"> to server bandwidth in</font>

312
00:11:43,260 --> 00:11:46,290
practice will<font color="#CCCCCC"> be cheaper than</font><font color="#E5E5E5"> your</font>

313
00:11:45,060 --> 00:11:51,089
client server bandwidth so there<font color="#E5E5E5"> will be</font>

314
00:11:46,290 --> 00:11:52,620
some<font color="#E5E5E5"> savings in in practice also so</font>

315
00:11:51,090 --> 00:11:54,450
we've implemented a prototype<font color="#CCCCCC"> of this</font>

316
00:11:52,620 --> 00:11:57,000
and go<font color="#E5E5E5"> and we've tested on the</font><font color="#CCCCCC"> emulated</font>

317
00:11:54,450 --> 00:11:59,460
<font color="#E5E5E5">test pad and for majority of our</font><font color="#CCCCCC"> tests</font>

318
00:11:57,000 --> 00:12:01,740
<font color="#E5E5E5">we had three servers and</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> number of</font>

319
00:11:59,460 --> 00:12:04,590
clients evenly distributed<font color="#E5E5E5"> among all</font><font color="#CCCCCC"> the</font>

320
00:12:01,740 --> 00:12:07,170
<font color="#E5E5E5">servers and the</font><font color="#CCCCCC"> clients were connected</font>

321
00:12:04,590 --> 00:12:09,390
to<font color="#E5E5E5"> the server using one shared 100</font>

322
00:12:07,170 --> 00:12:11,130
megabit connection and the clients<font color="#E5E5E5"> or</font>

323
00:12:09,390 --> 00:12:14,640
rather the servers are connected<font color="#CCCCCC"> to each</font>

324
00:12:11,130 --> 00:12:16,490
<font color="#E5E5E5">other using one gigabit connection and</font>

325
00:12:14,640 --> 00:12:19,110
we<font color="#E5E5E5"> tested it on two</font><font color="#CCCCCC"> different</font>

326
00:12:16,490 --> 00:12:21,960
applications<font color="#E5E5E5"> the first is file sharing</font>

327
00:12:19,110 --> 00:12:23,670
where in which every user uploads a

328
00:12:21,960 --> 00:12:26,460
large file and downloads a large file

329
00:12:23,670 --> 00:12:28,860
through PIR so the dotted line<font color="#CCCCCC"> here</font>

330
00:12:26,460 --> 00:12:30,240
shows<font color="#E5E5E5"> what</font><font color="#CCCCCC"> we call an ideal</font><font color="#E5E5E5"> version of</font>

331
00:12:28,860 --> 00:12:32,610
the result so this<font color="#E5E5E5"> is what would happen</font>

332
00:12:30,240 --> 00:12:35,310
<font color="#CCCCCC">if we only had bandwidth to consider so</font>

333
00:12:32,610 --> 00:12:36,990
how long does it take to literally move

334
00:12:35,310 --> 00:12:38,849
this many bits and this takes couldn't

335
00:12:36,990 --> 00:12:41,730
consideration both clients server

336
00:12:38,850 --> 00:12:43,530
bandwidth and<font color="#E5E5E5"> server server bandwidth so</font>

337
00:12:41,730 --> 00:12:45,960
the solid line shows<font color="#E5E5E5"> our prototype</font>

338
00:12:43,530 --> 00:12:48,720
implementation<font color="#CCCCCC"> and the the fact that</font><font color="#E5E5E5"> the</font>

339
00:12:45,960 --> 00:12:50,970
<font color="#E5E5E5">gap is</font><font color="#CCCCCC"> fairly small I think seems to</font>

340
00:12:48,720 --> 00:12:53,100
<font color="#CCCCCC">indicate the</font><font color="#E5E5E5"> computational overhead of</font>

341
00:12:50,970 --> 00:12:56,970
both hybrid shuffle and PIR<font color="#E5E5E5"> is fairly</font>

342
00:12:53,100 --> 00:12:59,250
small for our<font color="#E5E5E5"> scheme and also in</font><font color="#CCCCCC"> terms</font>

343
00:12:56,970 --> 00:13:00,720
of<font color="#CCCCCC"> concrete numbers we can</font><font color="#E5E5E5"> support about</font>

344
00:12:59,250 --> 00:13:02,790
<font color="#CCCCCC">two to three</font><font color="#E5E5E5"> hundred clients</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> hundred</font>

345
00:13:00,720 --> 00:13:05,070
kilobytes per second but as we mentioned

346
00:13:02,790 --> 00:13:08,189
<font color="#CCCCCC">before this is heavily bandwidth limited</font>

347
00:13:05,070 --> 00:13:09,750
in practice<font color="#E5E5E5"> I think client and server in</font>

348
00:13:08,190 --> 00:13:10,710
particular<font color="#E5E5E5"> would have more bandwidth you</font>

349
00:13:09,750 --> 00:13:12,540
know just because you're adding<font color="#E5E5E5"> more</font>

350
00:13:10,710 --> 00:13:13,830
clients you're not going to have less

351
00:13:12,540 --> 00:13:15,449
bandwidth available per client

352
00:13:13,830 --> 00:13:17,139
necessarily

353
00:13:15,449 --> 00:13:19,569
especially at you know two to<font color="#CCCCCC"> three</font>

354
00:13:17,139 --> 00:13:21,040
hundred clients<font color="#E5E5E5"> so we believe</font><font color="#CCCCCC"> that these</font>

355
00:13:19,569 --> 00:13:22,509
<font color="#CCCCCC">numbers and practice could be even</font>

356
00:13:21,040 --> 00:13:27,879
<font color="#CCCCCC">higher if we</font><font color="#E5E5E5"> had better bandwidth</font>

357
00:13:22,509 --> 00:13:30,819
available<font color="#CCCCCC"> so the another</font><font color="#E5E5E5"> application we</font>

358
00:13:27,879 --> 00:13:33,009
tested on was<font color="#CCCCCC"> microblogging so similar</font>

359
00:13:30,819 --> 00:13:34,839
to<font color="#E5E5E5"> something like Twitter</font><font color="#CCCCCC"> where one</font>

360
00:13:33,009 --> 00:13:36,519
person<font color="#E5E5E5"> would post a small message and</font>

361
00:13:34,839 --> 00:13:38,949
<font color="#E5E5E5">this is immediately broadcast to</font>

362
00:13:36,519 --> 00:13:40,209
<font color="#E5E5E5">everybody so we assume that one person</font>

363
00:13:38,949 --> 00:13:42,069
<font color="#CCCCCC">may be interested in</font><font color="#E5E5E5"> reading a large</font>

364
00:13:40,209 --> 00:13:44,050
number<font color="#E5E5E5"> of messages</font><font color="#CCCCCC"> so here we just</font>

365
00:13:42,069 --> 00:13:47,469
<font color="#CCCCCC">assume broadcast</font><font color="#E5E5E5"> to get kind</font><font color="#CCCCCC"> of the</font>

366
00:13:44,050 --> 00:13:49,300
<font color="#E5E5E5">worst case</font><font color="#CCCCCC"> behavior</font><font color="#E5E5E5"> so in this in this</font>

367
00:13:47,470 --> 00:13:51,759
application we<font color="#CCCCCC"> were able to support</font>

368
00:13:49,300 --> 00:13:53,920
<font color="#E5E5E5">about</font><font color="#CCCCCC"> 100,000</font><font color="#E5E5E5"> clients with less than ten</font>

369
00:13:51,759 --> 00:13:55,300
seconds<font color="#E5E5E5"> of latency</font><font color="#CCCCCC"> which we thought</font><font color="#E5E5E5"> was</font>

370
00:13:53,920 --> 00:13:56,378
fairly reasonable for something like

371
00:13:55,300 --> 00:13:58,359
<font color="#E5E5E5">Twitter you know you post your message</font>

372
00:13:56,379 --> 00:14:02,860
<font color="#E5E5E5">and</font><font color="#CCCCCC"> ten seconds later</font><font color="#E5E5E5"> it appears on</font>

373
00:13:58,360 --> 00:14:04,269
everybody's<font color="#CCCCCC"> feed and and another thing</font>

374
00:14:02,860 --> 00:14:06,910
to note is that if we double the<font color="#E5E5E5"> message</font>

375
00:14:04,269 --> 00:14:08,860
size<font color="#E5E5E5"> the latency essentially doubles and</font>

376
00:14:06,910 --> 00:14:10,749
<font color="#CCCCCC">the similar effect also holds if we have</font>

377
00:14:08,860 --> 00:14:12,459
the message size so this kind of enables

378
00:14:10,749 --> 00:14:13,990
different<font color="#CCCCCC"> trade-off space for the</font>

379
00:14:12,459 --> 00:14:15,550
application designers so you know

380
00:14:13,990 --> 00:14:17,230
<font color="#E5E5E5">depending on what</font><font color="#CCCCCC"> size message you want</font>

381
00:14:15,550 --> 00:14:18,939
how<font color="#CCCCCC"> many clients you</font><font color="#E5E5E5"> want to support</font><font color="#CCCCCC"> etc</font>

382
00:14:17,230 --> 00:14:23,290
they can<font color="#CCCCCC"> actually choose the parameters</font>

383
00:14:18,939 --> 00:14:25,120
that<font color="#E5E5E5"> definites their needs so</font><font color="#CCCCCC"> in</font>

384
00:14:23,290 --> 00:14:27,279
conclusion<font color="#CCCCCC"> I</font><font color="#E5E5E5"> presented our protocol</font>

385
00:14:25,120 --> 00:14:29,470
<font color="#CCCCCC">Riffel</font><font color="#E5E5E5"> which combines hybrid shuffle and</font>

386
00:14:27,279 --> 00:14:31,449
PIR together to get anonymous

387
00:14:29,470 --> 00:14:34,480
communication<font color="#CCCCCC"> for both sender and</font>

388
00:14:31,449 --> 00:14:35,920
receiver<font color="#CCCCCC"> and our prototype</font><font color="#E5E5E5"> demonstrates</font>

389
00:14:34,480 --> 00:14:37,029
its effectiveness in two different

390
00:14:35,920 --> 00:14:40,259
application domains

391
00:14:37,029 --> 00:14:43,839
and we have our research prototype

392
00:14:40,259 --> 00:14:46,679
available at that<font color="#E5E5E5"> get up link thanks</font>

393
00:14:43,839 --> 00:14:46,679
I'll take any<font color="#E5E5E5"> questions</font>

