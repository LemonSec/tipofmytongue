1
00:00:00,000 --> 00:00:05,130
<font color="#E5E5E5">okay i'm here to present work done quad</font>

2
00:00:03,060 --> 00:00:08,040
<font color="#CCCCCC">versus my colleague dynasty nessus lab</font>

3
00:00:05,130 --> 00:00:11,370
at me bc vancouver<font color="#E5E5E5"> robert Sumi</font><font color="#CCCCCC"> and</font>

4
00:00:08,039 --> 00:00:13,919
William I yellow platform for private

5
00:00:11,370 --> 00:00:15,750
web apps so we have all these new

6
00:00:13,920 --> 00:00:18,630
privacy enhancing applications that are

7
00:00:15,750 --> 00:00:20,970
coming out offering cool things like ant

8
00:00:18,630 --> 00:00:22,830
and cryptography and those<font color="#E5E5E5"> things are</font>

9
00:00:20,970 --> 00:00:26,060
great because users are finally getting

10
00:00:22,830 --> 00:00:28,500
the confidentiality<font color="#E5E5E5"> they want from their</font>

11
00:00:26,060 --> 00:00:32,070
service providers for applications there

12
00:00:28,500 --> 00:00:33,719
is<font color="#E5E5E5"> bees and their governments but one</font>

13
00:00:32,070 --> 00:00:35,640
question<font color="#E5E5E5"> you might wonder whenever you</font>

14
00:00:33,719 --> 00:00:37,829
encounter a new one is is this app

15
00:00:35,640 --> 00:00:40,260
secure is a really private and these

16
00:00:37,829 --> 00:00:42,239
applications are have either malicious

17
00:00:40,260 --> 00:00:44,760
or if they're not they're vulnerable

18
00:00:42,239 --> 00:00:48,269
like any other application and some of

19
00:00:44,760 --> 00:00:49,860
them might give you different privacy

20
00:00:48,270 --> 00:00:52,500
guarantees than the ones you'd expect

21
00:00:49,860 --> 00:00:55,410
for instance lately it has surfaced that

22
00:00:52,500 --> 00:00:57,780
sharing links on facebook private

23
00:00:55,410 --> 00:01:00,148
messages would these links would be

24
00:00:57,780 --> 00:01:04,979
<font color="#CCCCCC">available public publicly using their</font>

25
00:01:00,149 --> 00:01:07,229
api's so we have all these applications

26
00:01:04,979 --> 00:01:10,770
how would one user gain assurance in

27
00:01:07,229 --> 00:01:13,500
these applications<font color="#E5E5E5"> well you could audit</font>

28
00:01:10,770 --> 00:01:16,740
the code tough luck with that there's a

29
00:01:13,500 --> 00:01:18,720
<font color="#E5E5E5">lot of code it's really difficult if</font>

30
00:01:16,740 --> 00:01:21,089
there is<font color="#CCCCCC"> a public release of some</font>

31
00:01:18,720 --> 00:01:22,560
software you can hopefully rely on the

32
00:01:21,090 --> 00:01:24,840
conclusions of a diligent

33
00:01:22,560 --> 00:01:26,970
self-identified communicate community of

34
00:01:24,840 --> 00:01:29,070
experts to tell you whether<font color="#CCCCCC"> it's safe to</font>

35
00:01:26,970 --> 00:01:32,039
use or not but<font color="#CCCCCC"> that's not always</font>

36
00:01:29,070 --> 00:01:33,779
available and for the web model<font color="#E5E5E5"> for</font>

37
00:01:32,040 --> 00:01:35,759
instance it doesn't work at all the code

38
00:01:33,780 --> 00:01:38,130
you're served when during one visit may

39
00:01:35,759 --> 00:01:41,850
not be the same that<font color="#E5E5E5"> you get in a visit</font>

40
00:01:38,130 --> 00:01:43,649
after that and plus even<font color="#E5E5E5"> if you do go</font>

41
00:01:41,850 --> 00:01:45,030
all the way to do all<font color="#CCCCCC"> that work you have</font>

42
00:01:43,649 --> 00:01:49,799
to do it again for<font color="#E5E5E5"> the next app that</font>

43
00:01:45,030 --> 00:01:52,590
comes along so the<font color="#CCCCCC"> problem with these</font>

44
00:01:49,799 --> 00:01:55,439
applications is that the client side

45
00:01:52,590 --> 00:01:58,200
code does everything it has the private

46
00:01:55,439 --> 00:01:59,789
information the keys and without the

47
00:01:58,200 --> 00:02:01,619
containment of the keys the plain text

48
00:01:59,790 --> 00:02:03,090
and the crypt of functionality all of

49
00:02:01,619 --> 00:02:06,990
the application must be<font color="#E5E5E5"> in a trusted</font>

50
00:02:03,090 --> 00:02:08,489
computing base moreover this has to be

51
00:02:06,990 --> 00:02:09,899
done<font color="#CCCCCC"> for every application</font><font color="#E5E5E5"> so what you</font>

52
00:02:08,489 --> 00:02:12,180
end up trusting in the<font color="#E5E5E5"> case of web</font>

53
00:02:09,899 --> 00:02:12,940
applications that<font color="#CCCCCC"> has privacy</font><font color="#E5E5E5"> is that</font>

54
00:02:12,180 --> 00:02:15,730
you hadn't up

55
00:02:12,940 --> 00:02:18,310
<font color="#CCCCCC">seeing all</font><font color="#E5E5E5"> your browser the browser you</font>

56
00:02:15,730 --> 00:02:20,140
use the browser platform and all<font color="#E5E5E5"> of the</font>

57
00:02:18,310 --> 00:02:23,800
applications are in one bucket you have

58
00:02:20,140 --> 00:02:26,049
to trust everything so we wanted to

59
00:02:23,800 --> 00:02:28,290
alleviate that problem with the this

60
00:02:26,050 --> 00:02:31,780
platform we're introducing today to you

61
00:02:28,290 --> 00:02:33,609
beeswax it's a security platform that

62
00:02:31,780 --> 00:02:35,770
will reduce<font color="#E5E5E5"> the TCP of private web</font>

63
00:02:33,610 --> 00:02:37,810
applications what it does<font color="#E5E5E5"> is it this</font>

64
00:02:35,770 --> 00:02:39,760
aggregates and contains the security

65
00:02:37,810 --> 00:02:41,620
critical data and functionality from

66
00:02:39,760 --> 00:02:44,170
these applications into a platform and

67
00:02:41,620 --> 00:02:46,570
it shares that common functionality

68
00:02:44,170 --> 00:02:49,690
between apps through<font color="#E5E5E5"> well-defined ap is</font>

69
00:02:46,570 --> 00:02:52,000
<font color="#E5E5E5">and what this allows is that the experts</font>

70
00:02:49,690 --> 00:02:53,470
can focus their scrutiny on the platform

71
00:02:52,000 --> 00:02:56,170
rather than doing it for every

72
00:02:53,470 --> 00:02:58,450
application we<font color="#CCCCCC"> have a prototype</font>

73
00:02:56,170 --> 00:03:01,420
implementation implemented as a Google

74
00:02:58,450 --> 00:03:04,989
Chrome extension and about five thousand

75
00:03:01,420 --> 00:03:07,149
lines of code it's deplorable now and as

76
00:03:04,990 --> 00:03:09,700
we'll see what the eval we've managed<font color="#CCCCCC"> to</font>

77
00:03:07,150 --> 00:03:13,690
do some cool applications with them with

78
00:03:09,700 --> 00:03:17,549
it so this<font color="#CCCCCC"> is a screenshot of chat crypt</font>

79
00:03:13,690 --> 00:03:19,510
which is a<font color="#E5E5E5"> client-side secure chat</font>

80
00:03:17,550 --> 00:03:23,140
messaging so you can chat with<font color="#E5E5E5"> your</font>

81
00:03:19,510 --> 00:03:25,090
friends securely and if you<font color="#E5E5E5"> look if you</font>

82
00:03:23,140 --> 00:03:27,549
try to decompose this web application

83
00:03:25,090 --> 00:03:29,470
into various components you'll see that

84
00:03:27,550 --> 00:03:31,930
it it you know this application calls

85
00:03:29,470 --> 00:03:34,359
into the browser runtime it does crypto

86
00:03:31,930 --> 00:03:37,780
it has logic<font color="#E5E5E5"> to move things around it</font>

87
00:03:34,360 --> 00:03:40,540
passes<font color="#E5E5E5"> ciphertext to the the software</font>

88
00:03:37,780 --> 00:03:41,980
the service provider and it has a UI so

89
00:03:40,540 --> 00:03:47,049
that it displays<font color="#E5E5E5"> the</font><font color="#CCCCCC"> plaintext to the</font>

90
00:03:41,980 --> 00:03:49,090
user all of that<font color="#E5E5E5"> stuff needs to be</font>

91
00:03:47,050 --> 00:03:51,130
trusted because it does everything and

92
00:03:49,090 --> 00:03:53,380
if you<font color="#CCCCCC"> take a second application well</font>

93
00:03:51,130 --> 00:03:55,420
the second application comes in and

94
00:03:53,380 --> 00:03:57,340
brings all<font color="#CCCCCC"> that stuff as well so it</font>

95
00:03:55,420 --> 00:03:59,440
reinvents the wheel does everything

96
00:03:57,340 --> 00:04:01,269
again and the only thing you have in

97
00:03:59,440 --> 00:04:04,260
common is the the browser runtime<font color="#CCCCCC"> that</font>

98
00:04:01,269 --> 00:04:06,519
it gets reused across applications so

99
00:04:04,260 --> 00:04:08,079
one thing that's bad is that<font color="#CCCCCC"> if there's</font>

100
00:04:06,519 --> 00:04:11,140
a vulnerability in any of these two

101
00:04:08,080 --> 00:04:12,850
applications then you can exfiltrate the

102
00:04:11,140 --> 00:04:18,899
<font color="#CCCCCC">plaintext of the data either to the</font>

103
00:04:12,850 --> 00:04:21,640
application provider or another user so

104
00:04:18,899 --> 00:04:24,280
what we'd like to do with beeswax is to

105
00:04:21,640 --> 00:04:26,200
not have<font color="#CCCCCC"> to trust</font><font color="#E5E5E5"> the application we</font>

106
00:04:24,280 --> 00:04:29,650
want a way where we just have to trust

107
00:04:26,200 --> 00:04:32,289
form and all the the security<font color="#E5E5E5"> features</font>

108
00:04:29,650 --> 00:04:33,580
are taken care of by this platform so

109
00:04:32,290 --> 00:04:36,370
what we notice first is that<font color="#E5E5E5"> the keys</font>

110
00:04:33,580 --> 00:04:37,960
need to be moved out so what we do is we

111
00:04:36,370 --> 00:04:40,540
move the keys to the application

112
00:04:37,960 --> 00:04:42,280
platform so we do all the crypto inside

113
00:04:40,540 --> 00:04:44,020
the platform and what we give the

114
00:04:42,280 --> 00:04:45,460
application our key handles to the

115
00:04:44,020 --> 00:04:47,770
script to<font color="#CCCCCC"> the key the applications of</font>

116
00:04:45,460 --> 00:04:49,539
the keys of course that's<font color="#E5E5E5"> not sufficient</font>

117
00:04:47,770 --> 00:04:53,950
you also need<font color="#E5E5E5"> to take care of the plain</font>

118
00:04:49,540 --> 00:04:56,020
<font color="#CCCCCC">text so it's a web application so</font><font color="#E5E5E5"> you</font>

119
00:04:53,950 --> 00:04:57,520
want the application to still manipulate

120
00:04:56,020 --> 00:04:59,109
<font color="#E5E5E5">ciphertext but you want to let the user</font>

121
00:04:57,520 --> 00:05:01,750
see the<font color="#E5E5E5"> plaintext and that's a bit</font>

122
00:04:59,110 --> 00:05:05,110
difficult so what we do now with beeswax

123
00:05:01,750 --> 00:05:06,940
is that we provide ways to view the

124
00:05:05,110 --> 00:05:08,680
<font color="#CCCCCC">plaintext for the user without the</font>

125
00:05:06,940 --> 00:05:12,280
application being able to see it all<font color="#CCCCCC"> the</font>

126
00:05:08,680 --> 00:05:15,340
application Caesar cipher text and the

127
00:05:12,280 --> 00:05:16,659
only way application developers are

128
00:05:15,340 --> 00:05:18,219
going to use the platform as if it's

129
00:05:16,660 --> 00:05:20,590
easy to<font color="#CCCCCC"> use and if they can keep doing</font>

130
00:05:18,220 --> 00:05:21,460
<font color="#CCCCCC">what they're doing having a look and</font>

131
00:05:20,590 --> 00:05:23,080
feel that's different for each

132
00:05:21,460 --> 00:05:26,650
application maintaining their

133
00:05:23,080 --> 00:05:28,359
development practices um so there's a

134
00:05:26,650 --> 00:05:29,770
lot going on under the hood I'm not

135
00:05:28,360 --> 00:05:31,000
<font color="#E5E5E5">going to cover everything now but I want</font>

136
00:05:29,770 --> 00:05:32,680
<font color="#E5E5E5">to give you an</font><font color="#CCCCCC"> overview of</font><font color="#E5E5E5"> how it works</font>

137
00:05:31,000 --> 00:05:35,860
so<font color="#CCCCCC"> imagine you have this application</font>

138
00:05:32,680 --> 00:05:38,980
which lets a user talk to two friends

139
00:05:35,860 --> 00:05:40,720
securely the way would work in beeswax

140
00:05:38,980 --> 00:05:42,640
is we define something called a private

141
00:05:40,720 --> 00:05:45,460
area<font color="#E5E5E5"> it's defined by the application</font>

142
00:05:42,640 --> 00:05:48,310
there's an API call and the<font color="#E5E5E5"> application</font>

143
00:05:45,460 --> 00:05:50,979
says I want the<font color="#E5E5E5"> message of this the</font>

144
00:05:48,310 --> 00:05:52,390
message to be encrypted only for these

145
00:05:50,980 --> 00:05:56,140
two users so I'm going to<font color="#E5E5E5"> define this</font>

146
00:05:52,390 --> 00:05:57,789
box you<font color="#CCCCCC"> pass the Dom element it creates</font>

147
00:05:56,140 --> 00:06:00,539
say what's called a private<font color="#E5E5E5"> area and</font>

148
00:05:57,790 --> 00:06:03,250
from that point on the platform / text

149
00:06:00,540 --> 00:06:05,320
prevents the application from accessing

150
00:06:03,250 --> 00:06:08,880
that the contents of that box with

151
00:06:05,320 --> 00:06:11,080
JavaScript or other methods<font color="#E5E5E5"> and the</font>

152
00:06:08,880 --> 00:06:12,850
isolation technology we use<font color="#CCCCCC"> is shadow</font>

153
00:06:11,080 --> 00:06:14,940
Dom we have products I prototype

154
00:06:12,850 --> 00:06:16,990
overriding we do content hiding with

155
00:06:14,940 --> 00:06:21,219
javascript closures there's a lot<font color="#CCCCCC"> going</font>

156
00:06:16,990 --> 00:06:26,080
on and we also do something<font color="#E5E5E5"> with the the</font>

157
00:06:21,220 --> 00:06:28,180
event system so that the the user events

158
00:06:26,080 --> 00:06:31,510
are not leaked to the application when

159
00:06:28,180 --> 00:06:32,860
they pertain to this<font color="#E5E5E5"> area right now if</font>

160
00:06:31,510 --> 00:06:34,510
the application wants to display

161
00:06:32,860 --> 00:06:36,700
something<font color="#E5E5E5"> in there what it has a cipher</font>

162
00:06:34,510 --> 00:06:38,980
text and it passes the ciphertext dapi

163
00:06:36,700 --> 00:06:39,449
through an API call which displays it in

164
00:06:38,980 --> 00:06:41,610
the bees

165
00:06:39,449 --> 00:06:43,349
wax controlled area so the user can see

166
00:06:41,610 --> 00:06:45,240
it but the app can't see the<font color="#CCCCCC"> plain text</font>

167
00:06:43,349 --> 00:06:47,400
that's the way it<font color="#E5E5E5"> works so if</font><font color="#CCCCCC"> we go back</font>

168
00:06:45,240 --> 00:06:50,550
<font color="#E5E5E5">here we have a way to isolate the keys</font>

169
00:06:47,400 --> 00:06:52,318
on the<font color="#CCCCCC"> plain text and we provide</font>

170
00:06:50,550 --> 00:06:54,569
guarantees that the isolated data cannot

171
00:06:52,319 --> 00:06:56,550
be accelerated but are we done do we can

172
00:06:54,569 --> 00:06:59,610
we do we not have to trust<font color="#E5E5E5"> the app</font><font color="#CCCCCC"> now</font>

173
00:06:56,550 --> 00:07:03,620
can<font color="#CCCCCC"> we turn the</font><font color="#E5E5E5"> apps tax to the trust of</font>

174
00:06:59,610 --> 00:07:06,270
color the answer is no because a

175
00:07:03,620 --> 00:07:09,150
malicious application could still spoof

176
00:07:06,270 --> 00:07:11,520
<font color="#CCCCCC">the user into thinking that it's using</font>

177
00:07:09,150 --> 00:07:16,799
beeswax when it isn't and we don't want

178
00:07:11,520 --> 00:07:18,659
<font color="#E5E5E5">to have to audit the application so what</font>

179
00:07:16,800 --> 00:07:22,830
a malicious application<font color="#E5E5E5"> could do is to</font>

180
00:07:18,659 --> 00:07:25,050
lure users into with promises of

181
00:07:22,830 --> 00:07:26,460
heightened privacy and then<font color="#E5E5E5"> kind of</font>

182
00:07:25,050 --> 00:07:27,629
pretending they're doing all this

183
00:07:26,460 --> 00:07:30,388
end-to-end encryption and then

184
00:07:27,629 --> 00:07:32,339
<font color="#E5E5E5">eventually exfiltrating your data so how</font>

185
00:07:30,389 --> 00:07:34,259
can we<font color="#CCCCCC"> assure users that the application</font>

186
00:07:32,339 --> 00:07:37,199
is using the right API<font color="#CCCCCC"> call so what we</font>

187
00:07:34,259 --> 00:07:40,289
do so a malicious application could do

188
00:07:37,199 --> 00:07:42,149
this it could it could try to do

189
00:07:40,289 --> 00:07:43,860
something<font color="#E5E5E5"> where all you can type in here</font>

190
00:07:42,149 --> 00:07:46,169
here's some green lock some green

191
00:07:43,860 --> 00:07:47,969
borders around this box but all this is

192
00:07:46,169 --> 00:07:50,339
controlled by the application it's just

193
00:07:47,969 --> 00:07:53,849
a false sense of security so you can't

194
00:07:50,339 --> 00:07:55,919
do that if the application is using the

195
00:07:53,849 --> 00:07:57,719
<font color="#E5E5E5">API is correctly that beeswax provides</font>

196
00:07:55,919 --> 00:08:00,229
to create private areas<font color="#E5E5E5"> we'll all that</font>

197
00:07:57,719 --> 00:08:02,370
stuff is managed<font color="#E5E5E5"> and isolated in beeswax</font>

198
00:08:00,229 --> 00:08:04,109
so maybe there's a way where<font color="#CCCCCC"> we could</font>

199
00:08:02,370 --> 00:08:05,939
add indicators in<font color="#CCCCCC"> the page say</font><font color="#E5E5E5"> okay this</font>

200
00:08:04,110 --> 00:08:07,949
area is controlled by beeswax it's fine

201
00:08:05,939 --> 00:08:10,589
but then again<font color="#E5E5E5"> the application could</font>

202
00:08:07,949 --> 00:08:13,439
overlay text or images on top of that if

203
00:08:10,589 --> 00:08:14,909
the UI so we can't do that<font color="#E5E5E5"> either so</font>

204
00:08:13,439 --> 00:08:18,029
what we do in beeswax is do we have<font color="#CCCCCC"> a</font>

205
00:08:14,909 --> 00:08:20,490
privacy indicator that comes with the

206
00:08:18,029 --> 00:08:22,110
extension and<font color="#E5E5E5"> it's displayed in the part</font>

207
00:08:20,490 --> 00:08:24,300
of the browser that the applications

208
00:08:22,110 --> 00:08:26,279
can't spoof is displayed next to the

209
00:08:24,300 --> 00:08:27,659
address bar and there's no way for<font color="#E5E5E5"> an</font>

210
00:08:26,279 --> 00:08:28,709
application<font color="#CCCCCC"> to draw outside its</font>

211
00:08:27,659 --> 00:08:31,709
boundaries and there's no way for

212
00:08:28,709 --> 00:08:34,289
pop-ups to fake that area as<font color="#CCCCCC"> well so</font>

213
00:08:31,709 --> 00:08:36,539
whenever a user interacts with an area

214
00:08:34,289 --> 00:08:39,000
<font color="#E5E5E5">that's been defined or controlled by</font>

215
00:08:36,539 --> 00:08:40,799
beeswax it will trigger with like this

216
00:08:39,000 --> 00:08:44,130
is user keyboard and mouse interaction

217
00:08:40,799 --> 00:08:46,229
they will trigger flash that indicator

218
00:08:44,130 --> 00:08:47,910
icon in the browser and then the user

219
00:08:46,230 --> 00:08:49,560
<font color="#E5E5E5">knows that whatever events are being</font>

220
00:08:47,910 --> 00:08:51,900
sent there cannot be accelerated by the

221
00:08:49,560 --> 00:08:54,089
application

222
00:08:51,900 --> 00:08:57,240
there is no way for the app also to

223
00:08:54,090 --> 00:09:01,350
trigger those events because it's not

224
00:08:57,240 --> 00:09:03,930
accessible<font color="#E5E5E5"> to it this indicator</font>

225
00:09:01,350 --> 00:09:05,520
essentially tells the user that<font color="#E5E5E5"> the Dom</font>

226
00:09:03,930 --> 00:09:08,040
the region of interest that it's

227
00:09:05,520 --> 00:09:09,960
interacting with is private and in that

228
00:09:08,040 --> 00:09:11,610
area the content is in from the

229
00:09:09,960 --> 00:09:14,100
application so whatever you type in

230
00:09:11,610 --> 00:09:18,960
there the application can't read and the

231
00:09:14,100 --> 00:09:20,490
events are locked to that region so back

232
00:09:18,960 --> 00:09:22,170
<font color="#E5E5E5">to this slide again what we've achieved</font>

233
00:09:20,490 --> 00:09:23,820
with<font color="#CCCCCC"> the privacy indicators we have the</font>

234
00:09:22,170 --> 00:09:27,930
keys in<font color="#CCCCCC"> plaintext unavailable to the</font>

235
00:09:23,820 --> 00:09:29,670
application<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> privacy indicator</font>

236
00:09:27,930 --> 00:09:33,089
indicates where events in text by the

237
00:09:29,670 --> 00:09:36,569
user goes so we eventually achieve our

238
00:09:33,090 --> 00:09:38,400
goal this way and so we you trust the

239
00:09:36,570 --> 00:09:41,960
platform you trust<font color="#E5E5E5"> beeswax but the apps</font>

240
00:09:38,400 --> 00:09:41,959
don't<font color="#E5E5E5"> need to be audited</font><font color="#CCCCCC"> or trusted</font>

241
00:09:43,070 --> 00:09:48,570
beeswax to be to fully function has to

242
00:09:46,830 --> 00:09:49,650
come as well with key distribution we

243
00:09:48,570 --> 00:09:52,080
didn't want to<font color="#E5E5E5"> have to do</font><font color="#CCCCCC"> that out of</font>

244
00:09:49,650 --> 00:09:53,819
<font color="#CCCCCC">band so that's taken care of by bees why</font>

245
00:09:52,080 --> 00:09:57,270
the beeswax<font color="#E5E5E5"> extension for the user and</font>

246
00:09:53,820 --> 00:09:59,130
we provide to communication abstractions

247
00:09:57,270 --> 00:10:00,900
for the application the first one is a

248
00:09:59,130 --> 00:10:04,380
called a friendship channel which is<font color="#CCCCCC"> a</font>

249
00:10:00,900 --> 00:10:07,050
signaling channel to pass beeswax

250
00:10:04,380 --> 00:10:09,000
messages between the users extensions

251
00:10:07,050 --> 00:10:12,449
and the second one is<font color="#E5E5E5"> streams that</font>

252
00:10:09,000 --> 00:10:16,200
passes data messages we use electric

253
00:10:12,450 --> 00:10:18,510
chair of cryptography for the friendship

254
00:10:16,200 --> 00:10:24,390
channels and symmetric key crypto for

255
00:10:18,510 --> 00:10:27,630
the streams to distribute identities we

256
00:10:24,390 --> 00:10:30,240
<font color="#E5E5E5">rely on a publish-subscribe system and</font>

257
00:10:27,630 --> 00:10:31,950
we use<font color="#E5E5E5"> Twitter in our implementation so</font>

258
00:10:30,240 --> 00:10:35,610
basically<font color="#E5E5E5"> when you set up</font><font color="#CCCCCC"> the beeswax</font>

259
00:10:31,950 --> 00:10:36,780
extension the user will the essentially

260
00:10:35,610 --> 00:10:39,060
will generate two key pairs for that

261
00:10:36,780 --> 00:10:40,650
user and associate that with the Twitter

262
00:10:39,060 --> 00:10:42,209
the Twitter the user will specify

263
00:10:40,650 --> 00:10:44,910
Twitter account to associated<font color="#E5E5E5"> with it</font>

264
00:10:42,210 --> 00:10:47,310
and<font color="#CCCCCC"> the beeswax background process will</font>

265
00:10:44,910 --> 00:10:50,130
post the keys to the Twitter account of

266
00:10:47,310 --> 00:10:52,439
the beeswax user and these<font color="#E5E5E5"> keys have an</font>

267
00:10:50,130 --> 00:10:54,360
expiration so we have a good practice of

268
00:10:52,440 --> 00:10:56,670
reposting these keys every few days and

269
00:10:54,360 --> 00:10:58,710
that gets us around a few Twitter

270
00:10:56,670 --> 00:11:03,270
limitations as well regards with regards

271
00:10:58,710 --> 00:11:04,740
to availability of old tweets and we

272
00:11:03,270 --> 00:11:05,649
have<font color="#E5E5E5"> I'm not going to cover it here but</font>

273
00:11:04,740 --> 00:11:08,170
we have a similar

274
00:11:05,649 --> 00:11:10,329
<font color="#E5E5E5">as for when you establish friendships</font>

275
00:11:08,170 --> 00:11:14,490
with other users these wax background

276
00:11:10,329 --> 00:11:16,899
process will fetch keys from other users

277
00:11:14,490 --> 00:11:20,800
and monitor them as well if they get

278
00:11:16,899 --> 00:11:24,129
revoked more details on<font color="#E5E5E5"> that paper so</font>

279
00:11:20,800 --> 00:11:26,319
the friendship channels are

280
00:11:24,129 --> 00:11:28,509
bi-directional control channels between

281
00:11:26,319 --> 00:11:29,618
pairs of users so if you have three

282
00:11:28,509 --> 00:11:32,350
<font color="#E5E5E5">friends you have three friendship</font>

283
00:11:29,619 --> 00:11:34,509
channels and we<font color="#E5E5E5"> use those channels to</font>

284
00:11:32,350 --> 00:11:38,499
pass invitation so we communicate<font color="#CCCCCC"> keys</font>

285
00:11:34,509 --> 00:11:40,029
between users with it so there's an API

286
00:11:38,499 --> 00:11:42,369
call to create friendships that the

287
00:11:40,029 --> 00:11:45,759
<font color="#E5E5E5">application will do to invite thick talk</font>

288
00:11:42,369 --> 00:11:48,999
to another friend and then streams are

289
00:11:45,759 --> 00:11:50,980
the<font color="#E5E5E5"> the channels on which user messages</font>

290
00:11:48,999 --> 00:11:53,110
are being passed and once you've created

291
00:11:50,980 --> 00:11:56,199
friendship channels you<font color="#CCCCCC"> can invite other</font>

292
00:11:53,110 --> 00:11:58,240
users to those<font color="#E5E5E5"> streams what the</font>

293
00:11:56,199 --> 00:12:03,309
application sees our stream<font color="#E5E5E5"> IDs there</font>

294
00:11:58,240 --> 00:12:05,319
opaque handles<font color="#CCCCCC"> to keys but in the</font>

295
00:12:03,309 --> 00:12:07,629
background<font color="#E5E5E5"> the keys are exchanged so the</font>

296
00:12:05,319 --> 00:12:16,839
database and the beeswax extension will

297
00:12:07,629 --> 00:12:19,389
contain keys of course we wanted to<font color="#E5E5E5"> see</font>

298
00:12:16,839 --> 00:12:21,749
<font color="#E5E5E5">that this</font><font color="#CCCCCC"> was usable and practical so we</font>

299
00:12:19,389 --> 00:12:24,459
we experimented with the platform<font color="#E5E5E5"> built</font>

300
00:12:21,749 --> 00:12:26,110
two applications one of which is an

301
00:12:24,459 --> 00:12:31,290
existing application that we've<font color="#E5E5E5"> kept up</font>

302
00:12:26,110 --> 00:12:34,089
to do secure channels so it's an<font color="#E5E5E5"> icy</font>

303
00:12:31,290 --> 00:12:36,759
client for the web and<font color="#CCCCCC"> the second one is</font>

304
00:12:34,089 --> 00:12:39,339
<font color="#CCCCCC">a built from the ground up i encrypted</font>

305
00:12:36,759 --> 00:12:41,889
<font color="#E5E5E5">photo gallery to exchange rich media</font>

306
00:12:39,339 --> 00:12:46,600
types and we evaluated performance as

307
00:12:41,889 --> 00:12:48,429
well so this<font color="#E5E5E5"> is very cool we took an</font><font color="#CCCCCC"> IRC</font>

308
00:12:46,600 --> 00:12:50,259
web client which has a<font color="#E5E5E5"> server side in</font>

309
00:12:48,429 --> 00:12:54,029
the<font color="#CCCCCC"> client side component</font><font color="#E5E5E5"> and we've</font>

310
00:12:50,259 --> 00:12:56,290
modified the client side component of

311
00:12:54,029 --> 00:12:59,410
using four hundred lines of code we

312
00:12:56,290 --> 00:13:04,299
managed to add functionality to talk

313
00:12:59,410 --> 00:13:05,920
secure would we encrypted channels

314
00:13:04,299 --> 00:13:08,110
between users these wax users so you

315
00:13:05,920 --> 00:13:09,670
just have to bees wax users they can

316
00:13:08,110 --> 00:13:13,629
quickly go and<font color="#E5E5E5"> talk there it's very easy</font>

317
00:13:09,670 --> 00:13:16,179
<font color="#E5E5E5">and then we we also support richer media</font>

318
00:13:13,629 --> 00:13:18,370
types then simple text so we have ways

319
00:13:16,179 --> 00:13:19,300
to<font color="#E5E5E5"> communicate pictures and one</font>

320
00:13:18,370 --> 00:13:22,149
interesting<font color="#CCCCCC"> thing that</font>

321
00:13:19,300 --> 00:13:24,089
<font color="#E5E5E5">or that was fun to do was that the you</font>

322
00:13:22,149 --> 00:13:26,140
want to be able to upload files to the

323
00:13:24,089 --> 00:13:28,930
beeswax extension without the

324
00:13:26,140 --> 00:13:30,550
application stealing your your file so

325
00:13:28,930 --> 00:13:34,979
<font color="#CCCCCC">we had to do something very interesting</font>

326
00:13:30,550 --> 00:13:34,979
for<font color="#E5E5E5"> a special file chooser for beeswax</font>

327
00:13:35,310 --> 00:13:41,349
we do javascript encryption in the

328
00:13:38,829 --> 00:13:43,180
background page and the cost of

329
00:13:41,350 --> 00:13:45,250
encryption is predictable linear with

330
00:13:43,180 --> 00:13:47,979
<font color="#E5E5E5">plain text size and really no surprises</font>

331
00:13:45,250 --> 00:13:52,360
there we have<font color="#CCCCCC"> to instrument the runtime</font>

332
00:13:47,980 --> 00:13:54,579
of the page so there's a 52 milliseconds

333
00:13:52,360 --> 00:13:57,790
page<font color="#E5E5E5"> light page load increase for our</font>

334
00:13:54,579 --> 00:13:59,529
prototype and diva when you interact

335
00:13:57,790 --> 00:14:01,120
with<font color="#E5E5E5"> the page the events we have to do</font>

336
00:13:59,529 --> 00:14:02,860
some extra processing to filter out

337
00:14:01,120 --> 00:14:05,829
<font color="#E5E5E5">confidential information from events</font>

338
00:14:02,860 --> 00:14:08,170
there's a it's 2.5 times slower the

339
00:14:05,829 --> 00:14:09,989
process events but in when you browse in

340
00:14:08,170 --> 00:14:14,140
our experience it doesn't really in fact

341
00:14:09,990 --> 00:14:18,010
it's not perceptible so I talked about

342
00:14:14,140 --> 00:14:19,899
<font color="#CCCCCC">just covering the web and the question</font>

343
00:14:18,010 --> 00:14:21,610
is sort of left to future work but what

344
00:14:19,899 --> 00:14:24,310
about mobile is their way to do

345
00:14:21,610 --> 00:14:25,750
something similar for mobile in<font color="#CCCCCC"> android</font>

346
00:14:24,310 --> 00:14:28,810
particular it'd be great if there<font color="#E5E5E5"> was a</font>

347
00:14:25,750 --> 00:14:30,339
way for secular module secure modules to

348
00:14:28,810 --> 00:14:32,529
be<font color="#E5E5E5"> lotus you can monitor what the</font>

349
00:14:30,339 --> 00:14:35,410
application does and again if<font color="#CCCCCC"> we wanted</font>

350
00:14:32,529 --> 00:14:37,570
to pour a privacy indicator to mobile

351
00:14:35,410 --> 00:14:39,959
we'd have a waiter is we need a way to

352
00:14:37,570 --> 00:14:42,880
reserve a parts of<font color="#E5E5E5"> the screen to</font>

353
00:14:39,959 --> 00:14:44,890
<font color="#CCCCCC">indicate to the user whether or not</font><font color="#E5E5E5"> it's</font>

354
00:14:42,880 --> 00:14:48,450
interacting with the private part or not

355
00:14:44,890 --> 00:14:52,180
and this is<font color="#E5E5E5"> coming to the conclusion</font>

356
00:14:48,450 --> 00:14:54,130
I've presented beeswax it provides

357
00:14:52,180 --> 00:14:56,410
protection against exfiltration by

358
00:14:54,130 --> 00:14:59,050
<font color="#E5E5E5">application providers it is a web</font>

359
00:14:56,410 --> 00:15:00,579
platform and<font color="#CCCCCC"> like any platform we can</font>

360
00:14:59,050 --> 00:15:04,180
expect that features can be added or

361
00:15:00,579 --> 00:15:06,699
removed as platform atures it includes

362
00:15:04,180 --> 00:15:09,910
key distribution that's<font color="#E5E5E5"> built in easy</font>

363
00:15:06,699 --> 00:15:11,229
automatic<font color="#E5E5E5"> it's deployable now and what</font>

364
00:15:09,910 --> 00:15:13,180
it let's<font color="#E5E5E5"> just do in the end is that we</font>

365
00:15:11,230 --> 00:15:14,860
can focus scrutiny on scrutiny on the

366
00:15:13,180 --> 00:15:16,209
platform and then every app that uses

367
00:15:14,860 --> 00:15:18,730
the platform doesn't need<font color="#CCCCCC"> to be audited</font>

368
00:15:16,209 --> 00:15:20,349
<font color="#E5E5E5">and the platform and applications are</font>

369
00:15:18,730 --> 00:15:22,310
available on github now we'll take your

370
00:15:20,350 --> 00:15:24,370
questions

371
00:15:22,310 --> 00:15:24,369
you

