1
00:00:00,000 --> 00:00:06,720
hi thank<font color="#E5E5E5"> you for introduction so this is</font>

2
00:00:03,689 --> 00:00:10,379
my joint work with my mama<font color="#CCCCCC"> hustle who is</font>

3
00:00:06,720 --> 00:00:13,410
a research and band<font color="#CCCCCC"> Riva from google so</font>

4
00:00:10,380 --> 00:00:17,250
we had already talked today about<font color="#E5E5E5"> secure</font>

5
00:00:13,410 --> 00:00:18,960
computation but we didn't actually hear

6
00:00:17,250 --> 00:00:20,698
what's the cube computation is so<font color="#E5E5E5"> I will</font>

7
00:00:18,960 --> 00:00:21,960
briefly cover it and I'm positive<font color="#CCCCCC"> that</font>

8
00:00:20,699 --> 00:00:25,800
some people don't know what<font color="#E5E5E5"> this</font>

9
00:00:21,960 --> 00:00:27,150
computation is so so the case is a

10
00:00:25,800 --> 00:00:29,970
security part a computation in

11
00:00:27,150 --> 00:00:32,009
particular we have our two parties Alice

12
00:00:29,970 --> 00:00:34,260
and<font color="#E5E5E5"> Bob and they have their private</font>

13
00:00:32,009 --> 00:00:36,840
inputs<font color="#E5E5E5"> X and Y and they want to compute</font>

14
00:00:34,260 --> 00:00:40,610
some function f of<font color="#CCCCCC"> X Y but in a manner</font>

15
00:00:36,840 --> 00:00:43,200
such that only the output is revealed

16
00:00:40,610 --> 00:00:45,210
inputs are kept private and they sure

17
00:00:43,200 --> 00:00:48,210
that function to compute is computed

18
00:00:45,210 --> 00:00:51,930
correctly so secure computation can be

19
00:00:48,210 --> 00:00:54,469
applied in different scenarios different

20
00:00:51,930 --> 00:00:58,109
like<font color="#E5E5E5"> elections over the</font><font color="#CCCCCC"> Internet</font>

21
00:00:54,469 --> 00:01:00,690
electronic auctions genomic computation

22
00:00:58,109 --> 00:01:05,400
some location-based services so this

23
00:01:00,690 --> 00:01:07,560
list can go on and on so um currently

24
00:01:05,400 --> 00:01:10,020
there<font color="#CCCCCC"> exist</font><font color="#E5E5E5"> three main approaches how to</font>

25
00:01:07,560 --> 00:01:13,260
perform secure computation the first one

26
00:01:10,020 --> 00:01:15,390
comes from<font color="#E5E5E5"> yalls garbled circuit second</font>

27
00:01:13,260 --> 00:01:17,670
one comes from morphing encryption

28
00:01:15,390 --> 00:01:21,090
schemes and another one is based on g MW

29
00:01:17,670 --> 00:01:24,180
protocol based on oblivious transfers

30
00:01:21,090 --> 00:01:26,490
and in particular about<font color="#E5E5E5"> this approach i</font>

31
00:01:24,180 --> 00:01:31,740
will be the district will<font color="#E5E5E5"> be based on</font>

32
00:01:26,490 --> 00:01:34,199
this one so any function f x y<font color="#E5E5E5"> using</font>

33
00:01:31,740 --> 00:01:36,600
special compilers can be converted to

34
00:01:34,200 --> 00:01:39,600
the boolean circuit so we have a bunch

35
00:01:36,600 --> 00:01:42,630
of logical gates and they're connected

36
00:01:39,600 --> 00:01:47,100
by<font color="#E5E5E5"> wires so the question is so if we can</font>

37
00:01:42,630 --> 00:01:49,020
compute this boolean circuit in this

38
00:01:47,100 --> 00:01:52,229
oblivious manner in a fashion manner

39
00:01:49,020 --> 00:01:56,548
then<font color="#CCCCCC"> we're done with our computation so</font>

40
00:01:52,229 --> 00:02:00,060
let's jump into g MW protocol from a

41
00:01:56,549 --> 00:02:03,479
<font color="#E5E5E5">tucson it's pretty old so we have Alice</font>

42
00:02:00,060 --> 00:02:05,880
and<font color="#E5E5E5"> Bob and what they have instead of</font>

43
00:02:03,479 --> 00:02:09,209
<font color="#E5E5E5">input bits they have a shares of input</font>

44
00:02:05,880 --> 00:02:12,420
bits and they have a shares of some

45
00:02:09,209 --> 00:02:13,640
input bits x and y and their task is to

46
00:02:12,420 --> 00:02:16,970
compute

47
00:02:13,640 --> 00:02:18,619
the shares of the<font color="#E5E5E5"> output</font><font color="#CCCCCC"> bit so if they</font>

48
00:02:16,970 --> 00:02:20,720
know how to<font color="#E5E5E5"> compute it efficiently if</font>

49
00:02:18,620 --> 00:02:24,400
they don't how<font color="#E5E5E5"> to do it for</font><font color="#CCCCCC"> in</font>

50
00:02:20,720 --> 00:02:26,959
particular X or gate and get and gate

51
00:02:24,400 --> 00:02:29,930
then we can construct any circuit and

52
00:02:26,959 --> 00:02:32,930
<font color="#E5E5E5">then we can compute any functionality so</font>

53
00:02:29,930 --> 00:02:36,200
our like tasks narrows down to how to

54
00:02:32,930 --> 00:02:39,440
compute X or gate in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> end gate so the</font>

55
00:02:36,200 --> 00:02:41,359
question sore gate is pretty trivial so

56
00:02:39,440 --> 00:02:44,239
what the<font color="#CCCCCC"> part is</font><font color="#E5E5E5"> you need to do to</font>

57
00:02:41,360 --> 00:02:47,570
compute those output<font color="#E5E5E5"> shares what they</font>

58
00:02:44,239 --> 00:02:49,880
just taking their input bits soaring

59
00:02:47,570 --> 00:02:52,810
them and it's done the computation is

60
00:02:49,880 --> 00:02:56,570
done locally everyone has output chairs

61
00:02:52,810 --> 00:02:59,720
and we're done the tricky part<font color="#CCCCCC"> is the</font>

62
00:02:56,570 --> 00:03:02,510
end gate so what do we do<font color="#E5E5E5"> especially</font>

63
00:02:59,720 --> 00:03:07,959
when<font color="#E5E5E5"> we have this contour products</font><font color="#CCCCCC"> X a Y</font>

64
00:03:02,510 --> 00:03:12,410
B and X boa so how it's typically sold

65
00:03:07,959 --> 00:03:16,310
solved it by using latest transfer so

66
00:03:12,410 --> 00:03:18,410
it's a it's a protocol so the general

67
00:03:16,310 --> 00:03:20,930
overview of it is like we have two

68
00:03:18,410 --> 00:03:24,079
<font color="#CCCCCC">parties a sender and the receiver sender</font>

69
00:03:20,930 --> 00:03:26,209
has a whole stupids x0 x1 and receiver

70
00:03:24,079 --> 00:03:29,600
has his choice but be and by the<font color="#E5E5E5"> end of</font>

71
00:03:26,209 --> 00:03:31,070
this protocol receiver gets the bit<font color="#CCCCCC"> xb</font>

72
00:03:29,600 --> 00:03:33,170
but doesn't know anything<font color="#E5E5E5"> about the</font>

73
00:03:31,070 --> 00:03:38,600
other one<font color="#E5E5E5"> and Senator does know with</font>

74
00:03:33,170 --> 00:03:41,238
which bit did receiver tubes so and by

75
00:03:38,600 --> 00:03:43,160
<font color="#CCCCCC">people for but by performing what's</font>

76
00:03:41,239 --> 00:03:47,209
called one<font color="#CCCCCC"> out of four oblivious</font>

77
00:03:43,160 --> 00:03:49,579
transfer we can compute the end gate so

78
00:03:47,209 --> 00:03:51,950
what's the problem here is this

79
00:03:49,579 --> 00:03:54,560
oblivious transfer it requires some a

80
00:03:51,950 --> 00:03:57,530
symmetric your operation so if you have

81
00:03:54,560 --> 00:03:59,450
large circuits with a<font color="#E5E5E5"> hundred thousands</font>

82
00:03:57,530 --> 00:04:02,329
and millions of and gates is going to be

83
00:03:59,450 --> 00:04:05,798
super inefficient so what can<font color="#CCCCCC"> we do</font>

84
00:04:02,329 --> 00:04:08,750
about this can we do something actually

85
00:04:05,799 --> 00:04:10,310
so and I need to don't be were

86
00:04:08,750 --> 00:04:12,769
introduced approach he said basically

87
00:04:10,310 --> 00:04:15,170
what which was saying if we have three

88
00:04:12,769 --> 00:04:18,820
random correlated bits and<font color="#E5E5E5"> Allison Bob</font>

89
00:04:15,170 --> 00:04:20,988
holds the shares on those beds so the

90
00:04:18,820 --> 00:04:23,450
computation of and gate will require

91
00:04:20,988 --> 00:04:25,909
only four bits of communication and then

92
00:04:23,450 --> 00:04:27,920
a bunch of soaring and we are done<font color="#E5E5E5"> with</font>

93
00:04:25,910 --> 00:04:30,950
the<font color="#CCCCCC"> end gate so the</font><font color="#E5E5E5"> question is</font>

94
00:04:27,920 --> 00:04:33,830
than how to get those random the shares

95
00:04:30,950 --> 00:04:37,010
of<font color="#E5E5E5"> those random bits random correlated</font>

96
00:04:33,830 --> 00:04:39,590
bits so again we<font color="#CCCCCC"> need to do oblivious</font>

97
00:04:37,010 --> 00:04:41,090
transfer you will ask so what<font color="#E5E5E5"> is the</font>

98
00:04:39,590 --> 00:04:43,729
point oblivious transfer there with

99
00:04:41,090 --> 00:04:45,979
<font color="#CCCCCC">lilius transfer here how what's the</font>

100
00:04:43,730 --> 00:04:48,110
<font color="#E5E5E5">point of using this approach so the case</font>

101
00:04:45,980 --> 00:04:50,120
is here in the previous approach we were

102
00:04:48,110 --> 00:04:53,660
using we were doing oblivious transfer

103
00:04:50,120 --> 00:04:56,150
based on our own inputs here we're using

104
00:04:53,660 --> 00:04:59,180
random values so this values can be pre

105
00:04:56,150 --> 00:05:01,849
computed in advance so<font color="#CCCCCC"> parties at some</font>

106
00:04:59,180 --> 00:05:03,350
point can get those random values and

107
00:05:01,850 --> 00:05:07,150
that they want to when they want to

108
00:05:03,350 --> 00:05:10,910
compute some function they just send

109
00:05:07,150 --> 00:05:14,030
they just hiding their input bits with

110
00:05:10,910 --> 00:05:16,190
those related values and do<font color="#E5E5E5"> computations</font>

111
00:05:14,030 --> 00:05:18,169
really efficiently so like the protocol

112
00:05:16,190 --> 00:05:20,480
right now is divided into so-called

113
00:05:18,170 --> 00:05:23,210
offline face and online face offline

114
00:05:20,480 --> 00:05:26,360
when we get those triplets and online

115
00:05:23,210 --> 00:05:28,909
fest when we do actual computation so

116
00:05:26,360 --> 00:05:31,220
here comes handy community-based

117
00:05:28,910 --> 00:05:32,690
cryptography so what<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> in</font>

118
00:05:31,220 --> 00:05:36,170
cryptography we always have this

119
00:05:32,690 --> 00:05:38,750
trade-offs is basically we either secure

120
00:05:36,170 --> 00:05:42,800
or we are efficient so the more security

121
00:05:38,750 --> 00:05:46,360
we have the last efficient we are so and

122
00:05:42,800 --> 00:05:49,280
in case<font color="#CCCCCC"> of mobile phones when we have a</font>

123
00:05:46,360 --> 00:05:52,450
limited<font color="#E5E5E5"> computational power a limited</font>

124
00:05:49,280 --> 00:05:55,669
amount of memory we do care about

125
00:05:52,450 --> 00:05:58,130
efficiency so what if we<font color="#E5E5E5"> have some</font>

126
00:05:55,670 --> 00:06:01,310
acceptable level<font color="#E5E5E5"> of security well we if</font>

127
00:05:58,130 --> 00:06:04,909
we reveal a bit of information but again

128
00:06:01,310 --> 00:06:06,590
a lot<font color="#CCCCCC"> of efficiency so the basically the</font>

129
00:06:04,910 --> 00:06:08,930
commodity based cryptography is saying

130
00:06:06,590 --> 00:06:11,719
like there's two parties they want to

131
00:06:08,930 --> 00:06:15,140
perform some computation what they're

132
00:06:11,720 --> 00:06:18,350
aiming they're looking<font color="#CCCCCC"> for for some help</font>

133
00:06:15,140 --> 00:06:20,270
and to help not with outsourcing the

134
00:06:18,350 --> 00:06:23,330
computation itself they're looking<font color="#E5E5E5"> some</font>

135
00:06:20,270 --> 00:06:26,270
for some computation material that<font color="#CCCCCC"> they</font>

136
00:06:23,330 --> 00:06:28,400
will use later on they cannot produce

137
00:06:26,270 --> 00:06:31,099
<font color="#CCCCCC">envision sees themselves they're looking</font>

138
00:06:28,400 --> 00:06:33,109
<font color="#CCCCCC">for it they will</font><font color="#E5E5E5"> get it and they will</font>

139
00:06:31,100 --> 00:06:37,220
use it to perform efficiency the

140
00:06:33,110 --> 00:06:40,040
computation so happy having this in mind

141
00:06:37,220 --> 00:06:41,569
and those two offline and online faces

142
00:06:40,040 --> 00:06:44,629
let's die

143
00:06:41,569 --> 00:06:47,869
into our protocol again it consists of

144
00:06:44,629 --> 00:06:50,929
two phases offline face and online face

145
00:06:47,869 --> 00:06:54,129
so at some point Ellis comes we<font color="#E5E5E5"> have our</font>

146
00:06:50,929 --> 00:06:57,258
server talking the distributes<font color="#E5E5E5"> dose</font>

147
00:06:54,129 --> 00:06:59,839
shared random bits so at<font color="#E5E5E5"> this point</font>

148
00:06:57,259 --> 00:07:02,539
Ellis comes and she says okay at<font color="#CCCCCC"> some</font>

149
00:06:59,839 --> 00:07:07,659
point<font color="#E5E5E5"> I will do some computation and</font><font color="#CCCCCC"> i</font>

150
00:07:02,539 --> 00:07:11,688
need i will use at most and and gates so

151
00:07:07,659 --> 00:07:15,529
server<font color="#CCCCCC"> generate some keys and the token</font>

152
00:07:11,689 --> 00:07:18,529
file as we call it which has that those

153
00:07:15,529 --> 00:07:21,349
ripples and send it<font color="#CCCCCC"> back to Alice so I</font>

154
00:07:18,529 --> 00:07:24,080
want<font color="#CCCCCC"> to emphasize Alice at this point</font>

155
00:07:21,349 --> 00:07:26,569
does not know who's she gonna talk with

156
00:07:24,080 --> 00:07:30,619
like word with whom she going to do

157
00:07:26,569 --> 00:07:32,809
computation later so then comes Bob your

158
00:07:30,619 --> 00:07:34,069
desk it's the same and at this point he

159
00:07:32,809 --> 00:07:36,409
again doesn't<font color="#CCCCCC"> know anything about</font>

160
00:07:34,069 --> 00:07:39,219
<font color="#E5E5E5">wireless sounds like okay I will do</font>

161
00:07:36,409 --> 00:07:42,219
again the computation and I need a

162
00:07:39,219 --> 00:07:45,909
computational material for a NAND gates

163
00:07:42,219 --> 00:07:48,199
token generate some file some key

164
00:07:45,909 --> 00:07:52,129
associated with the token file and turns

165
00:07:48,199 --> 00:07:56,479
the token file back so then in<font color="#E5E5E5"> online</font>

166
00:07:52,129 --> 00:07:59,589
phase Alice already figures out about

167
00:07:56,479 --> 00:08:01,998
Bob they both have<font color="#E5E5E5"> about they both have</font>

168
00:07:59,589 --> 00:08:04,789
independent those token files they're

169
00:08:01,999 --> 00:08:06,439
independent and then<font color="#CCCCCC"> they agree on the</font>

170
00:08:04,789 --> 00:08:08,089
circuit that they want to compute<font color="#E5E5E5"> the</font>

171
00:08:06,439 --> 00:08:10,269
grin on the session that they're<font color="#E5E5E5"> going</font>

172
00:08:08,089 --> 00:08:13,789
<font color="#E5E5E5">to</font><font color="#CCCCCC"> use and basically what they sending</font>

173
00:08:10,269 --> 00:08:15,349
to this token server request with<font color="#CCCCCC"> the</font>

174
00:08:13,789 --> 00:08:17,269
name of the session and the<font color="#E5E5E5"> ID</font>

175
00:08:15,349 --> 00:08:19,878
associated with the token file that the

176
00:08:17,269 --> 00:08:25,939
use for computation so what the server

177
00:08:19,879 --> 00:08:29,509
does he says some keys he says to see

178
00:08:25,939 --> 00:08:33,199
his sons to<font color="#CCCCCC"> Alice keys from Bob's</font>

179
00:08:29,509 --> 00:08:37,120
talking file and he<font color="#E5E5E5"> sends to Bob Alice's</font>

180
00:08:33,198 --> 00:08:41,508
two keys from the token file having that

181
00:08:37,120 --> 00:08:44,209
<font color="#E5E5E5">at this point server goes away sorry</font>

182
00:08:41,509 --> 00:08:47,180
Sarah goes away and two parties

183
00:08:44,208 --> 00:08:49,849
performing computation on their own at

184
00:08:47,180 --> 00:08:53,599
this stage server<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not needed anymore</font>

185
00:08:49,850 --> 00:08:54,500
so our our adversarial model is

186
00:08:53,600 --> 00:08:57,020
following a

187
00:08:54,500 --> 00:08:59,060
so we used the seven semi honest talkin

188
00:08:57,020 --> 00:09:01,760
server he follows the protocol he

189
00:08:59,060 --> 00:09:04,489
generates those that computational

190
00:09:01,760 --> 00:09:06,410
materials those triplets as expected<font color="#CCCCCC"> in</font>

191
00:09:04,490 --> 00:09:10,090
<font color="#E5E5E5">he does not collude with the parties and</font>

192
00:09:06,410 --> 00:09:13,880
it's natural because this can be<font color="#E5E5E5"> running</font>

193
00:09:10,090 --> 00:09:18,580
this this server can be<font color="#E5E5E5"> running as some</font>

194
00:09:13,880 --> 00:09:21,620
service in Microsoft Azure or Amazon AWS

195
00:09:18,580 --> 00:09:24,170
so what do we have we have also

196
00:09:21,620 --> 00:09:26,180
<font color="#CCCCCC">Malaysians malicious parties and they</font>

197
00:09:24,170 --> 00:09:30,140
can arbitrarily deviate from the

198
00:09:26,180 --> 00:09:33,079
protocol so how we can verify whether

199
00:09:30,140 --> 00:09:36,770
the<font color="#E5E5E5"> out bits that part is computed</font><font color="#CCCCCC"> by</font>

200
00:09:33,080 --> 00:09:38,810
the end of<font color="#CCCCCC"> its gate are correct so I</font>

201
00:09:36,770 --> 00:09:44,540
typically it can be done by zero

202
00:09:38,810 --> 00:09:48,020
knowledge proofs but in 2012 the paper

203
00:09:44,540 --> 00:09:51,290
by Jasper boost<font color="#E5E5E5"> Nielsen revealed the new</font>

204
00:09:48,020 --> 00:09:54,829
schema for for efficient bit

205
00:09:51,290 --> 00:09:56,990
verification so basically we<font color="#CCCCCC"> have a mac</font>

206
00:09:54,830 --> 00:10:01,550
<font color="#CCCCCC">in schema where every bit comes with the</font>

207
00:09:56,990 --> 00:10:05,140
with<font color="#CCCCCC"> the tag it has a mac so this the</font>

208
00:10:01,550 --> 00:10:08,500
tag on each bit is produced by using

209
00:10:05,140 --> 00:10:14,000
some random string we call it base and

210
00:10:08,500 --> 00:10:18,080
using some delta<font color="#CCCCCC"> T be and the bit itself</font>

211
00:10:14,000 --> 00:10:21,770
so at for each wire in the circuit

212
00:10:18,080 --> 00:10:26,060
basically each part Alice has a bit and

213
00:10:21,770 --> 00:10:29,390
the tag<font color="#CCCCCC"> of it and bob has a base</font><font color="#E5E5E5"> and the</font>

214
00:10:26,060 --> 00:10:34,310
<font color="#CCCCCC">delta key so when the so when Ellis</font>

215
00:10:29,390 --> 00:10:35,780
<font color="#CCCCCC">reveals a bit</font><font color="#E5E5E5"> and attack Bob can easily</font>

216
00:10:34,310 --> 00:10:39,140
verify it whether it's true or not

217
00:10:35,780 --> 00:10:41,900
whether it was modified or not so also

218
00:10:39,140 --> 00:10:44,660
this marking scheme has homework

219
00:10:41,900 --> 00:10:49,600
properties so if you<font color="#E5E5E5"> need to compute the</font>

220
00:10:44,660 --> 00:10:52,959
type on the on some bitsy it's basically

221
00:10:49,600 --> 00:10:55,970
can be performed by doing the tags of

222
00:10:52,960 --> 00:10:58,910
soaring attacks and Bob does the XOR of

223
00:10:55,970 --> 00:11:01,700
the basis on his side so right now we

224
00:10:58,910 --> 00:11:05,300
are ready to construct server<font color="#CCCCCC"> aided set</font>

225
00:11:01,700 --> 00:11:07,730
symmetric protocol so<font color="#E5E5E5"> basically this</font>

226
00:11:05,300 --> 00:11:08,990
point Alice and<font color="#E5E5E5"> Bob they come together</font>

227
00:11:07,730 --> 00:11:13,620
this

228
00:11:08,990 --> 00:11:15,779
<font color="#E5E5E5">okay I know Alice and Alice says I know</font>

229
00:11:13,620 --> 00:11:19,080
Bob and we want to do computation and we

230
00:11:15,779 --> 00:11:22,980
didn't<font color="#E5E5E5"> need that many triplets and the</font>

231
00:11:19,080 --> 00:11:25,740
server besides those three bits it

232
00:11:22,980 --> 00:11:32,399
generates the tag on<font color="#E5E5E5"> them and generation</font>

233
00:11:25,740 --> 00:11:35,459
basis on the opposite parties bits so so

234
00:11:32,399 --> 00:11:37,830
but the<font color="#E5E5E5"> problem is what if Alice and Bob</font>

235
00:11:35,459 --> 00:11:42,270
does know does not know each other in

236
00:11:37,830 --> 00:11:45,630
advance what do<font color="#E5E5E5"> we do</font><font color="#CCCCCC"> about it so so</font>

237
00:11:42,270 --> 00:11:47,850
naive idea will be when alice is car or

238
00:11:45,630 --> 00:11:51,270
when Ellis comes and<font color="#CCCCCC"> asks token server</font>

239
00:11:47,850 --> 00:11:54,149
<font color="#E5E5E5">about those triplets he can generate for</font>

240
00:11:51,270 --> 00:11:57,449
Alice and for Bob and store the<font color="#E5E5E5"> Bob's</font>

241
00:11:54,149 --> 00:12:01,050
until the bob's camp until Bob comes but

242
00:11:57,450 --> 00:12:03,209
it requires extra storage and we don't

243
00:12:01,050 --> 00:12:06,089
want<font color="#E5E5E5"> to do it we want to do something in</font>

244
00:12:03,209 --> 00:12:09,209
more efficient way so our approach is

245
00:12:06,089 --> 00:12:11,250
following again Alice Alice comes to the

246
00:12:09,209 --> 00:12:13,709
token services like give me those and

247
00:12:11,250 --> 00:12:18,270
triplets with all the basis and tax for

248
00:12:13,709 --> 00:12:21,810
bobs for Bob's triplets what server does

249
00:12:18,270 --> 00:12:25,050
he generates<font color="#E5E5E5"> Delta key for Alice's for</font>

250
00:12:21,810 --> 00:12:28,319
Ellis triplets and Delta key for<font color="#CCCCCC"> Bob's</font>

251
00:12:25,050 --> 00:12:32,910
triples and additional key what then it

252
00:12:28,320 --> 00:12:36,860
does it uses a PRF at generate Bob's

253
00:12:32,910 --> 00:12:42,680
triples and the tax and the tax on them

254
00:12:36,860 --> 00:12:48,120
then what did he does he picks at random

255
00:12:42,680 --> 00:12:54,029
to<font color="#E5E5E5"> Alice's shares and sat the last value</font>

256
00:12:48,120 --> 00:12:56,730
<font color="#E5E5E5">WA for Alice's for Ellis triples then he</font>

257
00:12:54,029 --> 00:13:02,360
generates attacks using the Alice's

258
00:12:56,730 --> 00:13:06,800
Delta key and that PRF and that he ka

259
00:13:02,360 --> 00:13:10,980
and also it generates because he has

260
00:13:06,800 --> 00:13:13,680
Bob's tags and Bob's bits that were

261
00:13:10,980 --> 00:13:19,770
generated before and he produces the

262
00:13:13,680 --> 00:13:21,900
basis for them so right now and then he

263
00:13:19,770 --> 00:13:26,710
takes<font color="#E5E5E5"> Alice's portion all the</font>

264
00:13:21,900 --> 00:13:29,560
and the triples and a basis for<font color="#E5E5E5"> Bob's</font>

265
00:13:26,710 --> 00:13:32,260
part and sends them to Alice so what

266
00:13:29,560 --> 00:13:37,300
what happens when the Bob comes so when

267
00:13:32,260 --> 00:13:41,680
Bob comes server just sends him the

268
00:13:37,300 --> 00:13:43,479
Delta key for Alice triples and that ka

269
00:13:41,680 --> 00:13:47,170
and says like basically you can do

270
00:13:43,480 --> 00:13:51,550
<font color="#E5E5E5">everything on your own it's couple</font><font color="#CCCCCC"> PRF</font>

271
00:13:47,170 --> 00:13:56,469
and<font color="#CCCCCC"> vocation and you can produce and you</font>

272
00:13:51,550 --> 00:13:58,990
can produce basis and and and impacts

273
00:13:56,470 --> 00:14:02,140
for your bets on your own but keep in

274
00:13:58,990 --> 00:14:06,990
<font color="#CCCCCC">mind that according</font><font color="#E5E5E5"> to protocol Valle's</font>

275
00:14:02,140 --> 00:14:11,949
will be able<font color="#E5E5E5"> to verify</font><font color="#CCCCCC"> dose ok so our</font>

276
00:14:06,990 --> 00:14:14,800
setup was pretty<font color="#E5E5E5"> simple so we had the</font>

277
00:14:11,950 --> 00:14:18,850
<font color="#E5E5E5">token server running under 64-bit</font>

278
00:14:14,800 --> 00:14:22,719
<font color="#CCCCCC">windows machine corey five eight gigs of</font>

279
00:14:18,850 --> 00:14:27,220
memory and four players we used samsung

280
00:14:22,720 --> 00:14:30,640
galaxy s3 it's my old phone and galaxy

281
00:14:27,220 --> 00:14:36,150
the galaxy tab as we did in the<font color="#CCCCCC"> utila we</font>

282
00:14:30,640 --> 00:14:38,110
utilize only one core and and

283
00:14:36,150 --> 00:14:39,819
communication between clients server

284
00:14:38,110 --> 00:14:41,740
were happening over the internet and

285
00:14:39,820 --> 00:14:44,650
client client were done over Wi-Fi

286
00:14:41,740 --> 00:14:47,470
direct so this are the following results

287
00:14:44,650 --> 00:14:50,980
that<font color="#CCCCCC"> we got we</font><font color="#E5E5E5"> ran our computation gain</font>

288
00:14:47,470 --> 00:14:55,090
standard trip to circuits so we were

289
00:14:50,980 --> 00:14:57,280
<font color="#CCCCCC">able to</font><font color="#E5E5E5"> run a yes in 1.5 seconds more</font>

290
00:14:55,090 --> 00:14:59,890
interesting our function shall one and

291
00:14:57,280 --> 00:15:04,510
shout 256<font color="#E5E5E5"> to run in about the same</font><font color="#CCCCCC"> time</font>

292
00:14:59,890 --> 00:15:08,890
but the the difference in the<font color="#E5E5E5"> engagement</font>

293
00:15:04,510 --> 00:15:12,310
<font color="#E5E5E5">almost tripled so also we had</font><font color="#CCCCCC"> also very</font>

294
00:15:08,890 --> 00:15:15,970
efficient online face which require only

295
00:15:12,310 --> 00:15:18,459
64 bit of communication for a yes and

296
00:15:15,970 --> 00:15:20,200
you can see that<font color="#CCCCCC"> offline phase which can</font>

297
00:15:18,460 --> 00:15:25,780
be done in advance requires<font color="#E5E5E5"> very more</font>

298
00:15:20,200 --> 00:15:30,880
communication<font color="#E5E5E5"> I can tell you in after</font>

299
00:15:25,780 --> 00:15:33,670
yeah so we comparing two numbers<font color="#CCCCCC"> yep so</font>

300
00:15:30,880 --> 00:15:35,480
too should I've to<font color="#E5E5E5"> dally deeper into the</font>

301
00:15:33,670 --> 00:15:37,250
<font color="#CCCCCC">bottleneck so you can start x</font>

302
00:15:35,480 --> 00:15:39,410
synthetic circuits that consist only

303
00:15:37,250 --> 00:15:41,540
from<font color="#E5E5E5"> an gates and we constructed those</font>

304
00:15:39,410 --> 00:15:44,149
circuits with different depth of the

305
00:15:41,540 --> 00:15:48,139
circuit<font color="#E5E5E5"> and what we observed so even</font>

306
00:15:44,149 --> 00:15:50,420
even the circuit of 100,000 of and gates

307
00:15:48,139 --> 00:15:52,970
can be<font color="#E5E5E5"> computed very efficiently if the</font>

308
00:15:50,420 --> 00:15:57,319
depth of the circuits is very<font color="#E5E5E5"> very low</font>

309
00:15:52,970 --> 00:15:58,910
basically if and it becomes really under

310
00:15:57,320 --> 00:16:03,320
fashioned when the depth of the circuit

311
00:15:58,910 --> 00:16:05,510
droves so to work on this we've

312
00:16:03,320 --> 00:16:08,269
constructed additional circuits where we

313
00:16:05,510 --> 00:16:11,839
did a yes and shall one batch invocation

314
00:16:08,269 --> 00:16:16,430
so basically<font color="#E5E5E5"> the depth of the circuit</font>

315
00:16:11,839 --> 00:16:18,740
what was the same but we were<font color="#CCCCCC"> able to</font>

316
00:16:16,430 --> 00:16:22,040
<font color="#E5E5E5">compute multiple blocks at a time so it</font>

317
00:16:18,740 --> 00:16:29,290
lowered down the computation of<font color="#E5E5E5"> VES 20</font>

318
00:16:22,040 --> 00:16:32,719
82 and<font color="#CCCCCC"> she'll 12 12 seconds from 52 so</font>

319
00:16:29,290 --> 00:16:37,040
this<font color="#E5E5E5"> is about it so our computer bution</font>

320
00:16:32,720 --> 00:16:39,199
is so you refers who prevented this the

321
00:16:37,040 --> 00:16:41,209
security party protocol with malicious

322
00:16:39,199 --> 00:16:44,329
security on smartphones in this

323
00:16:41,209 --> 00:16:47,180
commodity based model and<font color="#E5E5E5"> also it's the</font>

324
00:16:44,329 --> 00:16:49,849
first product called<font color="#E5E5E5"> introduced notion</font>

325
00:16:47,180 --> 00:16:55,849
that<font color="#E5E5E5"> that parties dunno did not know</font>

326
00:16:49,850 --> 00:16:57,970
<font color="#E5E5E5">each other beforehand so thank you any</font>

327
00:16:55,850 --> 00:16:57,970
questions

