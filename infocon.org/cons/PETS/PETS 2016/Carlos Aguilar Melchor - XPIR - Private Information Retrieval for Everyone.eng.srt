1
00:00:00,290 --> 00:00:05,730
hi my name is<font color="#E5E5E5"> Charles egg</font><font color="#CCCCCC"> Lermontov I'm</font>

2
00:00:03,510 --> 00:00:08,460
going to present<font color="#CCCCCC"> some joint work with</font>

3
00:00:05,730 --> 00:00:13,200
<font color="#CCCCCC">George Berea the Whole Foods and</font><font color="#E5E5E5"> Mac</font>

4
00:00:08,460 --> 00:00:15,630
<font color="#CCCCCC">really John so I'm gonna first introduce</font>

5
00:00:13,200 --> 00:00:19,169
<font color="#E5E5E5">the context of our work and then present</font>

6
00:00:15,630 --> 00:00:23,460
a small<font color="#E5E5E5"> performance evaluation and some</font>

7
00:00:19,170 --> 00:00:25,619
usage guidelines for our project so

8
00:00:23,460 --> 00:00:28,650
let's<font color="#CCCCCC"> start</font><font color="#E5E5E5"> with the introduction we are</font>

9
00:00:25,619 --> 00:00:32,159
interested as about previous<font color="#E5E5E5"> information</font>

10
00:00:28,650 --> 00:00:35,309
retrieval or<font color="#E5E5E5"> PIR or</font><font color="#CCCCCC"> pier the name</font>

11
00:00:32,159 --> 00:00:37,468
changes from person<font color="#CCCCCC"> to person and the</font>

12
00:00:35,309 --> 00:00:40,230
idea well you<font color="#CCCCCC"> already have understood it</font>

13
00:00:37,469 --> 00:00:43,110
on the previous talk it's about hiding<font color="#E5E5E5"> a</font>

14
00:00:40,230 --> 00:00:46,019
user choice<font color="#E5E5E5"> so there is a database and</font>

15
00:00:43,110 --> 00:00:49,890
the user wants to hide<font color="#CCCCCC"> his access</font>

16
00:00:46,020 --> 00:00:52,649
pattern and the idea is<font color="#CCCCCC"> that it's the</font>

17
00:00:49,890 --> 00:00:55,170
choice<font color="#E5E5E5"> that is private not the data the</font>

18
00:00:52,649 --> 00:00:59,280
database can be public can be DNS

19
00:00:55,170 --> 00:01:01,219
records<font color="#E5E5E5"> to the keys movies whatever so</font>

20
00:00:59,280 --> 00:01:04,890
it's the choice of the user is private

21
00:01:01,219 --> 00:01:08,520
<font color="#E5E5E5">so it's very simple to understand that</font>

22
00:01:04,890 --> 00:01:10,320
on a trivial non-private protocol the

23
00:01:08,520 --> 00:01:15,119
user who would want an element<font color="#CCCCCC"> from the</font>

24
00:01:10,320 --> 00:01:17,119
database of index<font color="#CCCCCC"> I can tell it just</font><font color="#E5E5E5"> the</font>

25
00:01:15,119 --> 00:01:19,860
<font color="#E5E5E5">database and database has just to send</font>

26
00:01:17,119 --> 00:01:22,229
<font color="#CCCCCC">xi back so it's simple it's fast and</font>

27
00:01:19,860 --> 00:01:24,689
it's non private if<font color="#E5E5E5"> you want to make</font>

28
00:01:22,229 --> 00:01:27,210
something private it's very easy<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

29
00:01:24,689 --> 00:01:30,570
do something<font color="#CCCCCC"> that is trivial</font><font color="#E5E5E5"> you can ask</font>

30
00:01:27,210 --> 00:01:32,130
to<font color="#E5E5E5"> get the whole database and then</font>

31
00:01:30,570 --> 00:01:37,770
choose locally which element you're

32
00:01:32,130 --> 00:01:39,929
interested<font color="#CCCCCC"> bomb and that's trivial but</font>

33
00:01:37,770 --> 00:01:42,329
some common characteristics<font color="#CCCCCC"> too many</font>

34
00:01:39,930 --> 00:01:45,240
<font color="#E5E5E5">peer protocols up here already all the</font>

35
00:01:42,329 --> 00:01:48,360
database is processed and the processing

36
00:01:45,240 --> 00:01:51,089
is sending the database over<font color="#E5E5E5"> the wire so</font>

37
00:01:48,360 --> 00:01:53,670
the processing speed<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> database is</font>

38
00:01:51,090 --> 00:01:56,119
<font color="#E5E5E5">the bandwidth robbery</font><font color="#CCCCCC"> so it can be from</font>

39
00:01:53,670 --> 00:01:59,369
10 megabits to<font color="#E5E5E5"> 1 gigabit today and</font>

40
00:01:56,119 --> 00:02:02,759
databases process by being sent to<font color="#E5E5E5"> the</font>

41
00:01:59,369 --> 00:02:04,259
<font color="#E5E5E5">client so if you don't want to send the</font>

42
00:02:02,759 --> 00:02:06,930
whole database<font color="#CCCCCC"> you have some</font>

43
00:02:04,259 --> 00:02:09,389
alternatives<font color="#E5E5E5"> you can use an anonymity</font>

44
00:02:06,930 --> 00:02:11,459
<font color="#E5E5E5">system you can relax the notion of</font>

45
00:02:09,389 --> 00:02:13,019
privacy<font color="#E5E5E5"> with respect</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> downloading the</font>

46
00:02:11,459 --> 00:02:14,760
full database

47
00:02:13,020 --> 00:02:17,010
if you want to have roughly the same

48
00:02:14,760 --> 00:02:20,040
privacy<font color="#E5E5E5"> as downloading the full database</font>

49
00:02:17,010 --> 00:02:23,579
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> use an informational theoretic</font>

50
00:02:20,040 --> 00:02:27,000
<font color="#E5E5E5">PIR protocol in</font><font color="#CCCCCC"> which the</font><font color="#E5E5E5"> basic idea is</font>

51
00:02:23,580 --> 00:02:29,970
<font color="#E5E5E5">to have replicas some of them not</font>

52
00:02:27,000 --> 00:02:32,550
colluding together against the user and

53
00:02:29,970 --> 00:02:36,000
then I don't I won't explain<font color="#CCCCCC"> our whole</font>

54
00:02:32,550 --> 00:02:38,460
but<font color="#E5E5E5"> you can get protocols that are cheap</font>

55
00:02:36,000 --> 00:02:40,140
<font color="#E5E5E5">in communication chip in computation</font><font color="#CCCCCC"> and</font>

56
00:02:38,460 --> 00:02:43,800
that provide information<font color="#E5E5E5"> theoretic</font>

57
00:02:40,140 --> 00:02:45,899
security for hiding your choice as<font color="#E5E5E5"> long</font>

58
00:02:43,800 --> 00:02:49,410
as there isn't a collusion<font color="#E5E5E5"> among the</font>

59
00:02:45,900 --> 00:02:51,660
replicas<font color="#CCCCCC"> or a large enough collusion</font><font color="#E5E5E5"> the</font>

60
00:02:49,410 --> 00:02:54,630
other option you have if you<font color="#E5E5E5"> don't want</font>

61
00:02:51,660 --> 00:02:57,329
to have replicas of database because you

62
00:02:54,630 --> 00:02:59,820
cannot<font color="#E5E5E5"> afford</font><font color="#CCCCCC"> that for example</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> you</font>

63
00:02:57,330 --> 00:03:02,070
cannot afford collusion assumptions<font color="#E5E5E5"> then</font>

64
00:02:59,820 --> 00:03:05,010
you can do it with a single<font color="#CCCCCC"> a database</font>

65
00:03:02,070 --> 00:03:07,079
<font color="#E5E5E5">without replicas</font><font color="#CCCCCC"> and it is that you will</font>

66
00:03:05,010 --> 00:03:09,299
just security<font color="#E5E5E5"> will rely on the security</font>

67
00:03:07,080 --> 00:03:11,930
of a crypto system and then you get what

68
00:03:09,300 --> 00:03:13,800
you call<font color="#CCCCCC"> we call computationally based</font>

69
00:03:11,930 --> 00:03:15,960
computationally private information

70
00:03:13,800 --> 00:03:17,910
retrieval and the drawback of these

71
00:03:15,960 --> 00:03:19,500
approaches of course is that you will

72
00:03:17,910 --> 00:03:21,780
have<font color="#CCCCCC"> a higher computation</font><font color="#E5E5E5"> or</font>

73
00:03:19,500 --> 00:03:25,140
communication cost<font color="#E5E5E5"> and only</font>

74
00:03:21,780 --> 00:03:27,660
computational security<font color="#E5E5E5"> that's the area</font>

75
00:03:25,140 --> 00:03:31,850
<font color="#E5E5E5">in which we have</font><font color="#CCCCCC"> contributed we</font><font color="#E5E5E5"> propose</font>

76
00:03:27,660 --> 00:03:34,470
<font color="#CCCCCC">a</font><font color="#E5E5E5"> see periodical and it a notable work</font>

77
00:03:31,850 --> 00:03:36,660
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the one of the veteran Goldberg in</font>

78
00:03:34,470 --> 00:03:37,980
two years<font color="#E5E5E5"> ago in this conference in</font>

79
00:03:36,660 --> 00:03:41,820
which<font color="#CCCCCC"> he proposed to combine both</font>

80
00:03:37,980 --> 00:03:44,730
<font color="#E5E5E5">protocols and the basic idea is</font><font color="#CCCCCC"> that if</font>

81
00:03:41,820 --> 00:03:47,790
you<font color="#E5E5E5"> can afford replication</font><font color="#CCCCCC"> you can use</font>

82
00:03:44,730 --> 00:03:50,760
<font color="#E5E5E5">it together</font><font color="#CCCCCC"> you can use a</font><font color="#E5E5E5"> TPM together</font>

83
00:03:47,790 --> 00:03:54,420
with computationally private information

84
00:03:50,760 --> 00:03:56,489
retrieval<font color="#E5E5E5"> so you make ATP or do most of</font>

85
00:03:54,420 --> 00:03:58,920
the work<font color="#CCCCCC"> and then at the end you do a</font>

86
00:03:56,490 --> 00:04:02,400
little<font color="#E5E5E5"> bit of</font><font color="#CCCCCC"> sip here for smaller sub</font>

87
00:03:58,920 --> 00:04:05,339
databases so that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> get for most of</font>

88
00:04:02,400 --> 00:04:08,340
the work<font color="#CCCCCC"> of</font><font color="#E5E5E5"> fast protocol and if there</font>

89
00:04:05,340 --> 00:04:10,650
is the<font color="#E5E5E5"> collusion among the replicas when</font>

90
00:04:08,340 --> 00:04:12,360
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Sapir protects you a little bit</font><font color="#E5E5E5"> so</font>

91
00:04:10,650 --> 00:04:16,130
there is<font color="#E5E5E5"> a more graceful degradation of</font>

92
00:04:12,360 --> 00:04:18,160
privacy when there is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> collusion so</font>

93
00:04:16,130 --> 00:04:21,940
what

94
00:04:18,160 --> 00:04:22,960
if you can afford<font color="#E5E5E5"> replicas</font><font color="#CCCCCC"> I think this</font>

95
00:04:21,940 --> 00:04:27,219
is the way to go

96
00:04:22,960 --> 00:04:30,250
ideally as the<font color="#E5E5E5"> superb building block the</font>

97
00:04:27,220 --> 00:04:32,500
most<font color="#CCCCCC"> performant today</font><font color="#E5E5E5"> I use expire so it</font>

98
00:04:30,250 --> 00:04:34,600
<font color="#E5E5E5">would be combining this construction</font><font color="#CCCCCC"> too</font>

99
00:04:32,500 --> 00:04:37,120
with expired<font color="#CCCCCC"> I think the best solution</font>

100
00:04:34,600 --> 00:04:40,840
<font color="#CCCCCC">if you cannot afford</font><font color="#E5E5E5"> replicas well</font>

101
00:04:37,120 --> 00:04:44,950
inspire provides a non replicated system

102
00:04:40,840 --> 00:04:47,409
that is quite performance already<font color="#CCCCCC"> okay</font>

103
00:04:44,950 --> 00:04:53,229
so let's talk about<font color="#CCCCCC"> CP protocols</font><font color="#E5E5E5"> and</font>

104
00:04:47,410 --> 00:04:55,420
explain why they are they need some<font color="#E5E5E5"> of</font>

105
00:04:53,230 --> 00:04:59,380
some work to be improved<font color="#E5E5E5"> so the basic</font>

106
00:04:55,420 --> 00:05:02,200
idea on<font color="#CCCCCC"> CPR</font><font color="#E5E5E5"> protocols</font><font color="#CCCCCC"> is that the user</font>

107
00:04:59,380 --> 00:05:05,080
<font color="#CCCCCC">chooses an element by an index and then</font>

108
00:05:02,200 --> 00:05:08,469
he generates a set<font color="#E5E5E5"> a set of</font><font color="#CCCCCC"> cipher texts</font>

109
00:05:05,080 --> 00:05:11,740
<font color="#E5E5E5">which are under amorphic encryption</font>

110
00:05:08,470 --> 00:05:14,230
scheme and if the encryption scheme has

111
00:05:11,740 --> 00:05:16,120
<font color="#CCCCCC">a</font><font color="#E5E5E5"> given security property namely</font><font color="#CCCCCC"> its</font>

112
00:05:14,230 --> 00:05:18,670
<font color="#CCCCCC">indistinguishability</font><font color="#E5E5E5"> against reason</font>

113
00:05:16,120 --> 00:05:22,360
<font color="#CCCCCC">plated plaintext attacks</font><font color="#E5E5E5"> all the queries</font>

114
00:05:18,670 --> 00:05:24,520
<font color="#E5E5E5">look alike whatever</font><font color="#CCCCCC"> the index chosen is</font>

115
00:05:22,360 --> 00:05:27,040
all the<font color="#E5E5E5"> queries look alike to the server</font>

116
00:05:24,520 --> 00:05:27,669
and the server will<font color="#E5E5E5"> do always the same</font>

117
00:05:27,040 --> 00:05:30,040
computation

118
00:05:27,670 --> 00:05:32,650
he will combine database elements with

119
00:05:30,040 --> 00:05:35,340
query elements and obtain a<font color="#CCCCCC"> result which</font>

120
00:05:32,650 --> 00:05:38,710
in fact<font color="#E5E5E5"> is a set of cipher</font><font color="#CCCCCC"> texts</font><font color="#E5E5E5"> and</font>

121
00:05:35,340 --> 00:05:41,140
<font color="#E5E5E5">when the client</font><font color="#CCCCCC"> gets</font><font color="#E5E5E5"> back this</font><font color="#CCCCCC"> revel it</font>

122
00:05:38,710 --> 00:05:44,919
just has to decrypt<font color="#E5E5E5"> the</font><font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> to</font>

123
00:05:41,140 --> 00:05:47,080
<font color="#CCCCCC">get the element he want</font><font color="#E5E5E5"> so as in a</font><font color="#CCCCCC"> trade</font>

124
00:05:44,920 --> 00:05:49,720
<font color="#CCCCCC">I trivial pier protocol you see that the</font>

125
00:05:47,080 --> 00:05:52,419
whole debate<font color="#E5E5E5"> is</font><font color="#CCCCCC"> processed but</font><font color="#E5E5E5"> instead of</font>

126
00:05:49,720 --> 00:05:54,820
<font color="#E5E5E5">being sent there is no mathematical</font>

127
00:05:52,420 --> 00:05:56,770
computation<font color="#E5E5E5"> that is done that allows to</font>

128
00:05:54,820 --> 00:05:59,710
have a more compact result that is sent

129
00:05:56,770 --> 00:06:06,099
so you have<font color="#E5E5E5"> better communication but but</font>

130
00:05:59,710 --> 00:06:07,870
higher computational costs so the basic

131
00:06:06,100 --> 00:06:09,610
constructions to<font color="#E5E5E5"> get a compassionately</font>

132
00:06:07,870 --> 00:06:13,560
private information retrieval protocols

133
00:06:09,610 --> 00:06:18,250
<font color="#E5E5E5">are due to JP</font><font color="#CCCCCC"> stern and he'll girl Emma</font>

134
00:06:13,560 --> 00:06:20,080
so<font color="#E5E5E5"> Stern proposed a generic construction</font>

135
00:06:18,250 --> 00:06:22,960
<font color="#CCCCCC">that transform</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> additively</font>

136
00:06:20,080 --> 00:06:25,870
<font color="#E5E5E5">homomorphic encryption into a CPA</font>

137
00:06:22,960 --> 00:06:28,510
protocol and<font color="#E5E5E5"> Lima proposed an</font>

138
00:06:25,870 --> 00:06:31,310
improvement<font color="#E5E5E5"> which allows</font><font color="#CCCCCC"> to have better</font>

139
00:06:28,510 --> 00:06:32,960
much better communication complexity if

140
00:06:31,310 --> 00:06:34,850
you use<font color="#E5E5E5"> it with a specific</font><font color="#CCCCCC"> emerging</font>

141
00:06:32,960 --> 00:06:37,669
encryption scheme which<font color="#CCCCCC"> is due to Debra</font>

142
00:06:34,850 --> 00:06:41,960
<font color="#CCCCCC">and Erick it's a generalization</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> BIOS</font>

143
00:06:37,670 --> 00:06:43,550
cryptosystem so such construction is

144
00:06:41,960 --> 00:06:46,039
very<font color="#E5E5E5"> efficient from a communication</font>

145
00:06:43,550 --> 00:06:49,010
point of view<font color="#E5E5E5"> even</font><font color="#CCCCCC"> for huge databases</font>

146
00:06:46,040 --> 00:06:51,830
<font color="#E5E5E5">like 10 to the power 15 elements</font><font color="#CCCCCC"> you</font>

147
00:06:49,010 --> 00:06:53,659
have<font color="#CCCCCC"> a small query</font><font color="#E5E5E5"> and you have a not so</font>

148
00:06:51,830 --> 00:06:55,520
<font color="#E5E5E5">large expansion factor for smaller</font>

149
00:06:53,660 --> 00:06:58,100
databases you will have an inspection

150
00:06:55,520 --> 00:07:00,760
factor that will<font color="#E5E5E5"> be roughly</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> and it</font>

151
00:06:58,100 --> 00:07:03,200
grows slowly<font color="#E5E5E5"> with the database size</font>

152
00:07:00,760 --> 00:07:07,520
however<font color="#E5E5E5"> from the computational cost</font>

153
00:07:03,200 --> 00:07:11,150
<font color="#E5E5E5">point of view it's almost</font><font color="#CCCCCC"> primitive to</font>

154
00:07:07,520 --> 00:07:14,299
generate the reply for every bit on the

155
00:07:11,150 --> 00:07:16,099
database you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to compute 2048 bit</font>

156
00:07:14,300 --> 00:07:19,970
<font color="#E5E5E5">modular</font><font color="#CCCCCC"> multiplication</font><font color="#E5E5E5"> so that's very</font>

157
00:07:16,100 --> 00:07:22,700
<font color="#E5E5E5">very roughly 10,000 cycles on my</font>

158
00:07:19,970 --> 00:07:26,810
computer<font color="#E5E5E5"> for each bit on the database</font>

159
00:07:22,700 --> 00:07:29,539
<font color="#E5E5E5">and then my quad-core computer can do</font>

160
00:07:26,810 --> 00:07:32,470
something<font color="#CCCCCC"> like point 7 million such</font>

161
00:07:29,540 --> 00:07:35,660
<font color="#E5E5E5">operations per second and a high-end</font>

162
00:07:32,470 --> 00:07:38,030
gen 14 core<font color="#CCCCCC"> laptop can do</font><font color="#E5E5E5"> a few mega</font>

163
00:07:35,660 --> 00:07:40,610
mega bits per second so the database<font color="#E5E5E5"> is</font>

164
00:07:38,030 --> 00:07:42,260
processed at<font color="#E5E5E5"> a throughput of a few</font>

165
00:07:40,610 --> 00:07:44,930
megabits per second so if it's one

166
00:07:42,260 --> 00:07:47,599
gigabit big large you<font color="#E5E5E5"> will need</font><font color="#CCCCCC"> 1,000</font>

167
00:07:44,930 --> 00:07:51,770
seconds to generate<font color="#CCCCCC"> a reply</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> fact</font>

168
00:07:47,600 --> 00:07:54,230
those processing speed is<font color="#E5E5E5"> slow is lower</font>

169
00:07:51,770 --> 00:07:56,180
than the processing speed of try a

170
00:07:54,230 --> 00:07:58,940
trivial<font color="#E5E5E5"> peer in which the processing</font>

171
00:07:56,180 --> 00:08:02,210
speed<font color="#E5E5E5"> is the connection speed and most</font>

172
00:07:58,940 --> 00:08:04,010
connection speeds are above this so in

173
00:08:02,210 --> 00:08:06,049
practice is more efficient<font color="#CCCCCC"> to do a</font>

174
00:08:04,010 --> 00:08:07,550
trivial peer<font color="#E5E5E5"> than to classic computer</font>

175
00:08:06,050 --> 00:08:12,160
from<font color="#E5E5E5"> your private information retrieval</font>

176
00:08:07,550 --> 00:08:14,990
protocol<font color="#E5E5E5"> so as implementing stands</font>

177
00:08:12,160 --> 00:08:15,950
construction with classic<font color="#E5E5E5"> of American</font>

178
00:08:14,990 --> 00:08:19,280
<font color="#E5E5E5">crucian schemes</font>

179
00:08:15,950 --> 00:08:23,270
was very slow some alternatives were

180
00:08:19,280 --> 00:08:26,150
proposed and they were based on somewhat

181
00:08:23,270 --> 00:08:30,020
<font color="#CCCCCC">adult problems so they were much faster</font>

182
00:08:26,150 --> 00:08:33,169
<font color="#E5E5E5">than constructions with pea but they are</font>

183
00:08:30,020 --> 00:08:35,679
both broken yet<font color="#CCCCCC"> they are</font><font color="#E5E5E5"> constantly</font>

184
00:08:33,169 --> 00:08:38,419
being cited as<font color="#E5E5E5"> the reference for</font>

185
00:08:35,679 --> 00:08:40,250
<font color="#E5E5E5">computational performance and it's those</font>

186
00:08:38,419 --> 00:08:41,900
constructs<font color="#CCCCCC"> that is using all the</font>

187
00:08:40,250 --> 00:08:43,320
applications<font color="#E5E5E5"> of computational priority</font>

188
00:08:41,900 --> 00:08:46,829
information<font color="#E5E5E5"> retrieval</font>

189
00:08:43,320 --> 00:08:49,230
so what are the lessons learned since

190
00:08:46,830 --> 00:08:51,480
<font color="#E5E5E5">these proposals well you have to use</font>

191
00:08:49,230 --> 00:08:56,280
<font color="#E5E5E5">standard crypto standard crypto systems</font>

192
00:08:51,480 --> 00:08:58,790
standard parameters<font color="#E5E5E5"> okay and today</font>

193
00:08:56,280 --> 00:09:00,959
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> best choice is</font><font color="#CCCCCC"> to use</font>

194
00:08:58,790 --> 00:09:03,990
<font color="#E5E5E5">lattice based cryptography</font><font color="#CCCCCC"> or more</font>

195
00:09:00,960 --> 00:09:08,120
precisely<font color="#E5E5E5"> the ring</font><font color="#CCCCCC"> lwe based what is</font>

196
00:09:03,990 --> 00:09:12,120
based Victoria<font color="#CCCCCC"> so this leads us to our</font>

197
00:09:08,120 --> 00:09:14,430
proposal<font color="#CCCCCC"> expire</font><font color="#E5E5E5"> so in our proposal we</font>

198
00:09:12,120 --> 00:09:16,080
use lattice based cryptography which in

199
00:09:14,430 --> 00:09:19,739
practice I want<font color="#E5E5E5"> to enter into many</font>

200
00:09:16,080 --> 00:09:22,470
details<font color="#E5E5E5"> allows you to</font><font color="#CCCCCC"> replace modular</font>

201
00:09:19,740 --> 00:09:26,900
exponentiations<font color="#CCCCCC"> that are done with PI</font><font color="#E5E5E5"> a</font>

202
00:09:22,470 --> 00:09:29,870
<font color="#E5E5E5">and you can replace them with matrix or</font>

203
00:09:26,900 --> 00:09:32,970
polynomial multiplications with

204
00:09:29,870 --> 00:09:34,770
coefficients that<font color="#E5E5E5"> fit into hardware</font>

205
00:09:32,970 --> 00:09:36,900
registers<font color="#CCCCCC"> so you can do native</font>

206
00:09:34,770 --> 00:09:38,910
operations<font color="#E5E5E5"> very fast to compute this</font>

207
00:09:36,900 --> 00:09:41,910
matrix and polynomial multiplications so

208
00:09:38,910 --> 00:09:43,350
doing just trivial implementation of a

209
00:09:41,910 --> 00:09:46,350
lattice<font color="#E5E5E5"> based crypto system to replace</font>

210
00:09:43,350 --> 00:09:49,760
<font color="#CCCCCC">by a</font><font color="#E5E5E5"> you get a quite nice VW goat from</font>

211
00:09:46,350 --> 00:09:52,740
my computer from roughly 10<font color="#E5E5E5"> K cycles</font>

212
00:09:49,760 --> 00:09:56,640
four by eight to eight hundred cycles

213
00:09:52,740 --> 00:10:00,030
<font color="#E5E5E5">and one of the</font><font color="#CCCCCC"> contributions of our work</font>

214
00:09:56,640 --> 00:10:02,610
has<font color="#CCCCCC"> been to do a fast</font><font color="#E5E5E5"> polynomial and</font>

215
00:10:00,030 --> 00:10:05,250
modular arithmetic kernel which in fact

216
00:10:02,610 --> 00:10:07,170
has been<font color="#E5E5E5"> extended to do some more things</font>

217
00:10:05,250 --> 00:10:10,260
and now<font color="#CCCCCC"> it's caught it's an independent</font>

218
00:10:07,170 --> 00:10:13,969
<font color="#E5E5E5">project called anitha</font><font color="#CCCCCC"> Lib and it does</font>

219
00:10:10,260 --> 00:10:18,200
polynomial multiplications by point wise

220
00:10:13,970 --> 00:10:23,160
point representation and<font color="#E5E5E5"> very fast</font>

221
00:10:18,200 --> 00:10:24,990
<font color="#E5E5E5">transformations and use this specific</font>

222
00:10:23,160 --> 00:10:28,380
model<font color="#CCCCCC"> II to have a very fast modular</font>

223
00:10:24,990 --> 00:10:31,260
<font color="#CCCCCC">operations with these changes</font><font color="#E5E5E5"> which I</font>

224
00:10:28,380 --> 00:10:34,200
cannot describe in the time<font color="#CCCCCC"> given we</font><font color="#E5E5E5"> can</font>

225
00:10:31,260 --> 00:10:36,720
go down from<font color="#E5E5E5"> 800 cycles per bit of the</font>

226
00:10:34,200 --> 00:10:39,120
<font color="#E5E5E5">Navy implementation to</font><font color="#CCCCCC"> 2 cycles per bit</font>

227
00:10:36,720 --> 00:10:39,920
and if you can do some pre computation

228
00:10:39,120 --> 00:10:44,870
namely

229
00:10:39,920 --> 00:10:48,240
applying the FFT like<font color="#E5E5E5"> operation before</font>

230
00:10:44,870 --> 00:10:51,510
<font color="#E5E5E5">the queries are done then you drop</font><font color="#CCCCCC"> down</font>

231
00:10:48,240 --> 00:10:54,570
<font color="#CCCCCC">2.5 cycles per bit on the database so</font>

232
00:10:51,510 --> 00:10:56,450
you pass<font color="#CCCCCC"> from 10,000</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 0.5 volts but</font>

233
00:10:54,570 --> 00:11:00,360
quite change<font color="#E5E5E5"> off</font>

234
00:10:56,450 --> 00:11:02,400
for for computational<font color="#E5E5E5"> performance okay</font>

235
00:11:00,360 --> 00:11:04,020
there are some bad<font color="#CCCCCC"> news communication</font>

236
00:11:02,400 --> 00:11:06,930
performance<font color="#E5E5E5"> for lattice based</font>

237
00:11:04,020 --> 00:11:09,720
cryptography is worse than for classic

238
00:11:06,930 --> 00:11:12,030
<font color="#CCCCCC">failure</font><font color="#E5E5E5"> like cryptography a biased</font>

239
00:11:09,720 --> 00:11:14,430
ciphertext is<font color="#E5E5E5"> took a little bit longer</font>

240
00:11:12,030 --> 00:11:20,819
and the<font color="#E5E5E5"> expansion factor of encryption</font>

241
00:11:14,430 --> 00:11:23,819
<font color="#E5E5E5">is below</font><font color="#CCCCCC"> too easily it's - but you can</font>

242
00:11:20,820 --> 00:11:27,720
lower it easily<font color="#E5E5E5"> in lattice based</font>

243
00:11:23,820 --> 00:11:30,560
cryptography<font color="#CCCCCC"> ciphertext are between 128</font>

244
00:11:27,720 --> 00:11:34,110
<font color="#E5E5E5">kilobits and</font><font color="#CCCCCC"> 1 megabit long so we have</font>

245
00:11:30,560 --> 00:11:37,109
two to three orders<font color="#E5E5E5"> of magnitude</font><font color="#CCCCCC"> of</font>

246
00:11:34,110 --> 00:11:40,380
difference<font color="#E5E5E5"> and the expansion factor is</font>

247
00:11:37,110 --> 00:11:41,850
<font color="#E5E5E5">also large but the good</font><font color="#CCCCCC"> news is that you</font>

248
00:11:40,380 --> 00:11:43,830
<font color="#CCCCCC">have to pay a little bit more</font><font color="#E5E5E5"> of</font>

249
00:11:41,850 --> 00:11:46,110
communication yet you<font color="#E5E5E5"> are much more</font>

250
00:11:43,830 --> 00:11:49,020
<font color="#E5E5E5">efficient than a trivial</font><font color="#CCCCCC"> peer protocol</font>

251
00:11:46,110 --> 00:11:51,380
and<font color="#E5E5E5"> you have very very important</font>

252
00:11:49,020 --> 00:11:55,650
processing throughput so if you use

253
00:11:51,380 --> 00:11:57,780
<font color="#E5E5E5">parameters</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> 90 bit security you get</font>

254
00:11:55,650 --> 00:12:02,250
25 gigabits per second processing of

255
00:11:57,780 --> 00:12:04,380
database so that's quite a<font color="#E5E5E5"> lot compared</font>

256
00:12:02,250 --> 00:12:08,490
to<font color="#CCCCCC"> 1 megabit per second for per year</font><font color="#E5E5E5"> and</font>

257
00:12:04,380 --> 00:12:11,610
if you<font color="#E5E5E5"> want higher security 256 bit</font>

258
00:12:08,490 --> 00:12:13,500
security<font color="#E5E5E5"> you drop</font><font color="#CCCCCC"> only to 15 degrees per</font>

259
00:12:11,610 --> 00:12:16,020
second that's a<font color="#E5E5E5"> characteristic of</font>

260
00:12:13,500 --> 00:12:20,210
lattice<font color="#E5E5E5"> based cryptography when security</font>

261
00:12:16,020 --> 00:12:24,150
<font color="#E5E5E5">scans</font><font color="#CCCCCC"> up performance</font><font color="#E5E5E5"> levels very little</font>

262
00:12:20,210 --> 00:12:27,060
if you that if you have been able to do

263
00:12:24,150 --> 00:12:29,310
the<font color="#E5E5E5"> pre-processing before the peer query</font>

264
00:12:27,060 --> 00:12:31,920
<font color="#E5E5E5">if your database is very dynamic and you</font>

265
00:12:29,310 --> 00:12:33,239
cannot do<font color="#CCCCCC"> that then you will be you will</font>

266
00:12:31,920 --> 00:12:35,370
<font color="#CCCCCC">have a</font><font color="#E5E5E5"> bottleneck on the pre-processing</font>

267
00:12:33,240 --> 00:12:36,870
<font color="#E5E5E5">and you will answer the queries</font>

268
00:12:35,370 --> 00:12:39,240
processing the database at<font color="#E5E5E5"> 4 gigabits</font>

269
00:12:36,870 --> 00:12:42,270
per second which<font color="#CCCCCC"> is already</font><font color="#E5E5E5"> faster than</font>

270
00:12:39,240 --> 00:12:45,990
<font color="#E5E5E5">almost any connection</font><font color="#CCCCCC"> realistic</font>

271
00:12:42,270 --> 00:12:48,480
<font color="#CCCCCC">connection</font><font color="#E5E5E5"> for example</font><font color="#CCCCCC"> you can do things</font>

272
00:12:45,990 --> 00:12:52,050
<font color="#E5E5E5">that were</font><font color="#CCCCCC"> not possible with PIR before</font>

273
00:12:48,480 --> 00:12:54,270
<font color="#E5E5E5">you can take a 1,000 movie database you</font>

274
00:12:52,050 --> 00:12:56,490
can watch a movie<font color="#CCCCCC"> on</font><font color="#E5E5E5"> real time on HD and</font>

275
00:12:54,270 --> 00:13:00,360
you<font color="#CCCCCC"> will only use 2% of the process out</font>

276
00:12:56,490 --> 00:13:02,880
of<font color="#CCCCCC"> the several CPU CPU can handle</font><font color="#E5E5E5"> 40</font>

277
00:13:00,360 --> 00:13:05,190
clients<font color="#E5E5E5"> watching HD movies on a private</font>

278
00:13:02,880 --> 00:13:09,120
database<font color="#E5E5E5"> so you have the</font><font color="#CCCCCC"> project on</font>

279
00:13:05,190 --> 00:13:10,050
github<font color="#E5E5E5"> it's a self configurable self</font>

280
00:13:09,120 --> 00:13:11,519
configurable you

281
00:13:10,050 --> 00:13:14,310
don't<font color="#E5E5E5"> need to be an expert</font><font color="#CCCCCC"> on Krypton</font>

282
00:13:11,519 --> 00:13:16,800
<font color="#CCCCCC">PRI art refuse it it's based</font><font color="#E5E5E5"> on standard</font>

283
00:13:14,310 --> 00:13:20,268
<font color="#CCCCCC">crypto system can reach up 256-bit of</font>

284
00:13:16,800 --> 00:13:23,130
<font color="#E5E5E5">security and has no word assumptions so</font>

285
00:13:20,269 --> 00:13:25,589
how to use it very<font color="#E5E5E5"> easy you call it with</font>

286
00:13:23,130 --> 00:13:27,540
get you build it with America<font color="#E5E5E5"> you have a</font>

287
00:13:25,589 --> 00:13:28,230
<font color="#E5E5E5">train on serving up limitation</font><font color="#CCCCCC"> on Auto</font>

288
00:13:27,540 --> 00:13:30,510
optimizer

289
00:13:28,230 --> 00:13:34,260
<font color="#CCCCCC">that chooses the parameters for you</font>

290
00:13:30,510 --> 00:13:36,390
that's why<font color="#E5E5E5"> expire is for everyone and an</font>

291
00:13:34,260 --> 00:13:39,540
<font color="#E5E5E5">API if you're an advanced user to do</font>

292
00:13:36,390 --> 00:13:41,399
your own PIR applications<font color="#E5E5E5"> as a client</font>

293
00:13:39,540 --> 00:13:43,829
<font color="#E5E5E5">and server application is very</font><font color="#CCCCCC"> simple</font>

294
00:13:41,399 --> 00:13:45,480
you<font color="#E5E5E5"> drop some files on</font><font color="#CCCCCC"> a directory you</font>

295
00:13:43,829 --> 00:13:48,989
run<font color="#CCCCCC"> the server on the client you choose</font>

296
00:13:45,480 --> 00:13:51,000
the file then there is the client and

297
00:13:48,990 --> 00:13:52,589
self optimization for the database<font color="#CCCCCC"> and</font>

298
00:13:51,000 --> 00:13:57,899
<font color="#E5E5E5">connection</font><font color="#CCCCCC"> test</font><font color="#E5E5E5"> and you recover</font><font color="#CCCCCC"> the</font>

299
00:13:52,589 --> 00:14:00,360
<font color="#CCCCCC">residental</font><font color="#E5E5E5"> file the optimizer</font><font color="#CCCCCC"> basically</font>

300
00:13:57,899 --> 00:14:02,670
measures bandwidth<font color="#E5E5E5"> the performance of</font>

301
00:14:00,360 --> 00:14:05,760
each<font color="#E5E5E5"> operation on the</font><font color="#CCCCCC"> plenum server and</font>

302
00:14:02,670 --> 00:14:07,890
then explore potential parameters to

303
00:14:05,760 --> 00:14:10,860
optimize a target function run fifth

304
00:14:07,890 --> 00:14:12,860
time<font color="#E5E5E5"> amount of data exchange at CPU and</font>

305
00:14:10,860 --> 00:14:16,110
that exchanger to make some sort<font color="#E5E5E5"> of</font>

306
00:14:12,860 --> 00:14:19,290
cloud price and then you<font color="#CCCCCC"> have a library</font>

307
00:14:16,110 --> 00:14:21,930
<font color="#E5E5E5">in which you can easily build the crypto</font>

308
00:14:19,290 --> 00:14:22,740
<font color="#E5E5E5">objects we have</font><font color="#CCCCCC"> a no crypto which is for</font>

309
00:14:21,930 --> 00:14:25,260
trivial<font color="#CCCCCC"> tier</font>

310
00:14:22,740 --> 00:14:27,660
we<font color="#E5E5E5"> have a</font><font color="#CCCCCC"> pair crypto system and we have</font>

311
00:14:25,260 --> 00:14:31,980
a<font color="#E5E5E5"> ring</font><font color="#CCCCCC"> lwe Twitter system then you build</font>

312
00:14:27,660 --> 00:14:34,860
<font color="#E5E5E5">the PIR basic but objects you can have</font>

313
00:14:31,980 --> 00:14:38,610
databases from<font color="#E5E5E5"> a directory from a file</font>

314
00:14:34,860 --> 00:14:40,680
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is splitted or from with random</font>

315
00:14:38,610 --> 00:14:43,709
<font color="#CCCCCC">database is to generate</font><font color="#E5E5E5"> to generate fake</font>

316
00:14:40,680 --> 00:14:45,770
large databases then you have the

317
00:14:43,709 --> 00:14:48,540
possibility<font color="#CCCCCC"> to import the database to do</font>

318
00:14:45,770 --> 00:14:50,939
pre-processing simply and then functions

319
00:14:48,540 --> 00:14:54,480
to generate<font color="#CCCCCC"> a</font><font color="#E5E5E5"> query generator replied an</font>

320
00:14:50,940 --> 00:14:56,430
<font color="#CCCCCC">exploit for all time so that's how we</font>

321
00:14:54,480 --> 00:14:59,399
<font color="#E5E5E5">are integrating to expire free memory</font>

322
00:14:56,430 --> 00:15:02,040
encryption<font color="#E5E5E5"> we are integrating better</font>

323
00:14:59,399 --> 00:15:03,870
hanging of sparse databases<font color="#CCCCCC"> we are using</font>

324
00:15:02,040 --> 00:15:07,140
<font color="#E5E5E5">it</font><font color="#CCCCCC"> for applications on genomic research</font>

325
00:15:03,870 --> 00:15:08,579
we are<font color="#E5E5E5"> building a sniffer that when you</font>

326
00:15:07,140 --> 00:15:10,769
discover it you don't know<font color="#E5E5E5"> what it was</font>

327
00:15:08,579 --> 00:15:13,920
sniffing to show that PIR can be quite

328
00:15:10,769 --> 00:15:15,540
dangerous<font color="#CCCCCC"> too we are</font><font color="#E5E5E5"> working on several</font>

329
00:15:13,920 --> 00:15:16,719
improvements and if you have ideas<font color="#CCCCCC"> of</font>

330
00:15:15,540 --> 00:15:19,620
application we<font color="#CCCCCC"> are open for</font>

331
00:15:16,720 --> 00:15:19,620
operations<font color="#E5E5E5"> thank you</font>

332
00:15:23,640 --> 00:15:25,699
you

