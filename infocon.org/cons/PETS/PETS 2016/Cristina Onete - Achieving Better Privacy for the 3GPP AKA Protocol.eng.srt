1
00:00:00,050 --> 00:00:05,390
hi<font color="#E5E5E5"> everyone thanks for staying in this</font>

2
00:00:02,959 --> 00:00:08,180
hot room to listen to my talk very nice

3
00:00:05,390 --> 00:00:10,129
of you so my<font color="#CCCCCC"> name is</font><font color="#E5E5E5"> Christina I work in</font>

4
00:00:08,180 --> 00:00:12,980
the research team embedded security in

5
00:00:10,130 --> 00:00:16,099
cryptography in a hand<font color="#E5E5E5"> France and this</font>

6
00:00:12,980 --> 00:00:20,239
work is joint work with my colleagues

7
00:00:16,099 --> 00:00:24,109
<font color="#CCCCCC">PRM fook and</font><font color="#E5E5E5"> Belgium Alicia I'm going to</font>

8
00:00:20,239 --> 00:00:27,169
talk about this UMTS / LTE AKA protocol

9
00:00:24,109 --> 00:00:30,349
this protocol is a handshake protocol

10
00:00:27,169 --> 00:00:32,570
it's a scented key agreement protocol

11
00:00:30,349 --> 00:00:35,780
and we've seen already some of these in

12
00:00:32,570 --> 00:00:38,210
this session so usually key agreement

13
00:00:35,780 --> 00:00:41,120
protocols take place between two parties

14
00:00:38,210 --> 00:00:45,379
but in the context of<font color="#CCCCCC"> 3g and 4g mobile</font>

15
00:00:41,120 --> 00:00:47,379
networks the idea is to<font color="#CCCCCC"> use this kind</font><font color="#E5E5E5"> of</font>

16
00:00:45,379 --> 00:00:49,849
protocol in order to provide

17
00:00:47,379 --> 00:00:52,160
communication as a service which<font color="#CCCCCC"> is to</font>

18
00:00:49,850 --> 00:00:54,140
say we want<font color="#E5E5E5"> to provide service to</font>

19
00:00:52,160 --> 00:00:56,599
clients to mobile clients all over<font color="#E5E5E5"> the</font>

20
00:00:54,140 --> 00:00:58,309
globe respecting their mobility thus but

21
00:00:56,600 --> 00:00:59,899
also respecting their privacy and

22
00:00:58,309 --> 00:01:03,559
obviously the focus will be on

23
00:00:59,899 --> 00:01:06,860
respecting their privacy in this talk so

24
00:01:03,559 --> 00:01:09,890
the infrastructure and<font color="#CCCCCC"> 3g</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 4g</font>

25
00:01:06,860 --> 00:01:13,430
networks features three types of parties

26
00:01:09,890 --> 00:01:17,180
not just to one of them is the<font color="#CCCCCC"> client so</font>

27
00:01:13,430 --> 00:01:18,800
that's just<font color="#CCCCCC"> the mobile phone the usually</font>

28
00:01:17,180 --> 00:01:22,010
mobile phones they are associated with

29
00:01:18,800 --> 00:01:24,170
with some operator which is usually in

30
00:01:22,010 --> 00:01:27,700
their home country so it would be<font color="#E5E5E5"> Oh</font>

31
00:01:24,170 --> 00:01:30,470
<font color="#CCCCCC">honza maybe if you</font><font color="#E5E5E5"> are in France and</font>

32
00:01:27,700 --> 00:01:32,390
then there's a third<font color="#E5E5E5"> entity which is not</font>

33
00:01:30,470 --> 00:01:35,360
always trustworthy and which is called

34
00:01:32,390 --> 00:01:37,250
the<font color="#E5E5E5"> server so the server</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> one who</font>

35
00:01:35,360 --> 00:01:40,190
actually provides the service to the

36
00:01:37,250 --> 00:01:42,140
client not the operator directly so in

37
00:01:40,190 --> 00:01:44,030
the home network the server and the

38
00:01:42,140 --> 00:01:46,280
operator are affiliated to the same

39
00:01:44,030 --> 00:01:49,790
network basically they can trust<font color="#E5E5E5"> each</font>

40
00:01:46,280 --> 00:01:51,620
<font color="#E5E5E5">other a bit more however when people are</font>

41
00:01:49,790 --> 00:01:55,310
roaming and all of us do that<font color="#E5E5E5"> on a</font>

42
00:01:51,620 --> 00:01:57,920
regular basis the client is served

43
00:01:55,310 --> 00:02:00,860
through some partner operator so here in

44
00:01:57,920 --> 00:02:04,150
Germany say telecom which has an

45
00:02:00,860 --> 00:02:06,560
agreement with the client operator

46
00:02:04,150 --> 00:02:08,600
unfortunately this there is no guarantee

47
00:02:06,560 --> 00:02:10,869
of security and either the

48
00:02:08,600 --> 00:02:14,530
implementation or in

49
00:02:10,869 --> 00:02:16,810
well sort of legal aspects of the server

50
00:02:14,530 --> 00:02:19,959
so there is<font color="#CCCCCC"> no guarantee that the server</font>

51
00:02:16,810 --> 00:02:22,500
is not<font color="#CCCCCC"> subject to some eavesdropping or</font>

52
00:02:19,959 --> 00:02:25,030
legal governmental eavesdropping

53
00:02:22,500 --> 00:02:27,250
agencies there is no guarantee that this

54
00:02:25,030 --> 00:02:29,440
server has implemented the protocol

55
00:02:27,250 --> 00:02:32,079
securely so what you want is to<font color="#E5E5E5"> limit</font>

56
00:02:29,440 --> 00:02:35,230
the damage that the bad server can do on

57
00:02:32,079 --> 00:02:37,599
the privacy of the client so there

58
00:02:35,230 --> 00:02:40,540
there's two concerns that we're we're

59
00:02:37,599 --> 00:02:42,488
really working on at the moment it's the

60
00:02:40,540 --> 00:02:44,739
idea that we have to have a secure

61
00:02:42,489 --> 00:02:47,680
channel on which the service something

62
00:02:44,739 --> 00:02:49,359
like messaging<font color="#E5E5E5"> or minutes of talking can</font>

63
00:02:47,680 --> 00:02:52,209
be<font color="#E5E5E5"> provided on the other hand we want</font>

64
00:02:49,359 --> 00:02:54,519
the client<font color="#E5E5E5"> privacy so we want to prevent</font>

65
00:02:52,209 --> 00:02:57,190
that so-called metadata is can be used

66
00:02:54,519 --> 00:03:00,220
for tracing users or tracing their

67
00:02:57,190 --> 00:03:04,239
behavior like what services they they

68
00:03:00,220 --> 00:03:05,980
use more often the AK protocol is

69
00:03:04,239 --> 00:03:09,840
actually standardized by the third

70
00:03:05,980 --> 00:03:14,018
generation<font color="#E5E5E5"> partnership project has been</font>

71
00:03:09,840 --> 00:03:16,180
standardized about 15 years<font color="#E5E5E5"> ago and it</font>

72
00:03:14,019 --> 00:03:18,569
has been<font color="#E5E5E5"> maintained by the same same</font>

73
00:03:16,180 --> 00:03:21,069
<font color="#E5E5E5">group it provides mutual authentication</font>

74
00:03:18,569 --> 00:03:23,708
between the server and the client and

75
00:03:21,069 --> 00:03:27,010
<font color="#CCCCCC">the end key agreement which allows to</font>

76
00:03:23,709 --> 00:03:29,049
establish a secure<font color="#E5E5E5"> channel the main</font>

77
00:03:27,010 --> 00:03:31,149
problem<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we address in this paper is</font>

78
00:03:29,049 --> 00:03:33,879
that the AKA protocol does not actually

79
00:03:31,150 --> 00:03:36,400
guarantee much of client privacy and and

80
00:03:33,879 --> 00:03:38,620
many people<font color="#E5E5E5"> have</font><font color="#CCCCCC"> come to tell me yeah</font>

81
00:03:36,400 --> 00:03:40,810
sure it's<font color="#E5E5E5"> not a big problem</font><font color="#CCCCCC"> because</font>

82
00:03:38,620 --> 00:03:43,540
other layers of mobile communications

83
00:03:40,810 --> 00:03:46,209
don't<font color="#E5E5E5"> guarantee privacy either well the</font>

84
00:03:43,540 --> 00:03:47,888
obvious response to that is sure but if

85
00:03:46,209 --> 00:03:50,650
we're not addressing privacy at any

86
00:03:47,889 --> 00:03:53,079
layer then we might<font color="#E5E5E5"> as</font><font color="#CCCCCC"> well give up</font><font color="#E5E5E5"> on</font>

87
00:03:50,650 --> 00:03:56,049
<font color="#CCCCCC">our</font><font color="#E5E5E5"> privacy right now so in this paper</font>

88
00:03:53,079 --> 00:03:58,209
we<font color="#CCCCCC"> have analyzed some existing failures</font>

89
00:03:56,049 --> 00:04:00,060
of this aka protocol and this is what

90
00:03:58,209 --> 00:04:03,069
I'm going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> focus on in this talk and</font>

91
00:04:00,060 --> 00:04:05,199
then we also presented<font color="#E5E5E5"> a fix for better</font>

92
00:04:03,069 --> 00:04:06,910
security and privacy I'm<font color="#E5E5E5"> not going to</font>

93
00:04:05,199 --> 00:04:10,840
present<font color="#CCCCCC"> the details of our variant just</font>

94
00:04:06,910 --> 00:04:12,879
some higher-level properties and the

95
00:04:10,840 --> 00:04:14,560
main<font color="#CCCCCC"> reason is that the AK protocol is</font>

96
00:04:12,879 --> 00:04:17,560
actually insanely complicated as it is

97
00:04:14,560 --> 00:04:19,690
so the AK protocol infrastructure

98
00:04:17,560 --> 00:04:21,880
features some secret and some public

99
00:04:19,690 --> 00:04:23,820
material it's a symmetric key protocol

100
00:04:21,880 --> 00:04:27,300
so the client and<font color="#E5E5E5"> the</font>

101
00:04:23,820 --> 00:04:29,969
<font color="#E5E5E5">reiter have access to secret keys the</font>

102
00:04:27,300 --> 00:04:32,430
secret key of<font color="#CCCCCC"> the client the secret key</font>

103
00:04:29,970 --> 00:04:35,970
of the operator and something called a

104
00:04:32,430 --> 00:04:40,380
sequence number which actually sir it is

105
00:04:35,970 --> 00:04:44,040
is used as some sort of randomness in a

106
00:04:40,380 --> 00:04:45,710
<font color="#CCCCCC">PRF the client also</font><font color="#E5E5E5"> is associated with</font>

107
00:04:44,040 --> 00:04:50,250
some long-term and short-term

108
00:04:45,710 --> 00:04:53,849
identifiers so the imsi MC<font color="#CCCCCC"> I will call</font>

109
00:04:50,250 --> 00:04:56,100
<font color="#CCCCCC">it for sure</font><font color="#E5E5E5"> for sure the MC is the</font>

110
00:04:53,850 --> 00:04:58,020
permanent<font color="#CCCCCC"> identifier that each client is</font>

111
00:04:56,100 --> 00:05:00,840
associated with obviously the MC<font color="#CCCCCC"> is</font>

112
00:04:58,020 --> 00:05:03,630
unique per client and then there are top

113
00:05:00,840 --> 00:05:05,039
<font color="#CCCCCC">poles made up of temporary information</font>

114
00:05:03,630 --> 00:05:07,860
which only the server and the client

115
00:05:05,040 --> 00:05:11,520
know so these these values are a

116
00:05:07,860 --> 00:05:14,100
temporary<font color="#E5E5E5"> identifier tmsi and a local</font>

117
00:05:11,520 --> 00:05:15,840
<font color="#E5E5E5">area identifier so you can</font><font color="#CCCCCC"> think of</font><font color="#E5E5E5"> it</font>

118
00:05:14,100 --> 00:05:22,260
like like the zip code<font color="#E5E5E5"> of the server</font>

119
00:05:15,840 --> 00:05:26,549
right so the the<font color="#E5E5E5"> top</font><font color="#CCCCCC"> bottom tmsi and la</font>

120
00:05:22,260 --> 00:05:28,800
I has<font color="#E5E5E5"> to be unique the protocol has</font>

121
00:05:26,550 --> 00:05:31,470
three stages the first one is user

122
00:05:28,800 --> 00:05:33,890
identification I want to stress<font color="#CCCCCC"> that in</font>

123
00:05:31,470 --> 00:05:36,000
this part there is no cryptographic

124
00:05:33,890 --> 00:05:39,030
authentication taking place it's just

125
00:05:36,000 --> 00:05:42,540
for the server to know which client it

126
00:05:39,030 --> 00:05:45,929
needs to have material for then the

127
00:05:42,540 --> 00:05:48,030
second<font color="#CCCCCC"> one is</font><font color="#E5E5E5"> a is over a secure channel</font>

128
00:05:45,930 --> 00:05:50,250
between the server and the operator and

129
00:05:48,030 --> 00:05:52,619
<font color="#E5E5E5">the server is given some authentication</font>

130
00:05:50,250 --> 00:05:54,360
vectors and finally the authentication

131
00:05:52,620 --> 00:05:56,760
vectors are used in a challenge response

132
00:05:54,360 --> 00:05:59,430
phase so to understand how this works

133
00:05:56,760 --> 00:06:01,469
the user identification phase actually

134
00:05:59,430 --> 00:06:05,760
has quite a<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of impact on the client</font>

135
00:06:01,470 --> 00:06:07,980
privacy and the idea is<font color="#CCCCCC"> that once once a</font>

136
00:06:05,760 --> 00:06:09,780
client has been associated<font color="#CCCCCC"> with the TMS</font>

137
00:06:07,980 --> 00:06:12,420
I that he<font color="#E5E5E5"> never uses his permanent</font>

138
00:06:09,780 --> 00:06:15,000
<font color="#E5E5E5">identifiers again which</font><font color="#CCCCCC"> is to say we're</font>

139
00:06:12,420 --> 00:06:17,460
trying to prevent a client by from being

140
00:06:15,000 --> 00:06:21,890
traced by leaking his permanent

141
00:06:17,460 --> 00:06:25,590
<font color="#E5E5E5">identifiers however as we will see later</font>

142
00:06:21,890 --> 00:06:28,050
if the the top<font color="#CCCCCC"> bolt emsi LA I does not</font>

143
00:06:25,590 --> 00:06:30,330
verify at the server<font color="#E5E5E5"> the server is</font>

144
00:06:28,050 --> 00:06:32,460
unable<font color="#CCCCCC"> to associate the client with an</font>

145
00:06:30,330 --> 00:06:33,960
MC and therefore has to ask the client

146
00:06:32,460 --> 00:06:36,739
for that MC and this is<font color="#CCCCCC"> something that</font>

147
00:06:33,960 --> 00:06:36,739
<font color="#E5E5E5">we can exploit</font>

148
00:06:37,220 --> 00:06:44,820
so finally if the server has an MC value

149
00:06:42,090 --> 00:06:46,950
he can he can request from the operator

150
00:06:44,820 --> 00:06:49,140
of that client and this is<font color="#CCCCCC"> something</font>

151
00:06:46,950 --> 00:06:52,320
that<font color="#E5E5E5"> he will know once he knows the MC</font>

152
00:06:49,140 --> 00:06:54,690
he<font color="#E5E5E5"> will request some authentication and</font>

153
00:06:52,320 --> 00:06:57,480
key agreement material so basically what

154
00:06:54,690 --> 00:07:00,360
happens in order to skip a<font color="#E5E5E5"> little over</font>

155
00:06:57,480 --> 00:07:02,550
the details the the server does not have

156
00:07:00,360 --> 00:07:04,380
any of the secret keys that are shared

157
00:07:02,550 --> 00:07:06,410
between the client and<font color="#E5E5E5"> the operator so</font>

158
00:07:04,380 --> 00:07:09,420
what the operator does is it basically

159
00:07:06,410 --> 00:07:11,400
creates it runs the session the

160
00:07:09,420 --> 00:07:13,140
authentication session for the server

161
00:07:11,400 --> 00:07:16,349
and provides him with all the necessary

162
00:07:13,140 --> 00:07:21,479
values in<font color="#E5E5E5"> read the values in red are the</font>

163
00:07:16,350 --> 00:07:24,530
confidentiality<font color="#E5E5E5"> key ck the integrity key</font>

164
00:07:21,480 --> 00:07:28,890
<font color="#E5E5E5">so--but that does for authentication ik</font>

165
00:07:24,530 --> 00:07:31,169
<font color="#CCCCCC">there is a masking tak and two max one</font>

166
00:07:28,890 --> 00:07:33,120
that identifies the server to the client

167
00:07:31,169 --> 00:07:36,330
and<font color="#E5E5E5"> the other one the other way around</font>

168
00:07:33,120 --> 00:07:38,250
<font color="#E5E5E5">these five values are computed freshly</font>

169
00:07:36,330 --> 00:07:43,229
for new randomness are and for new

170
00:07:38,250 --> 00:07:45,030
sequence numbers at each iteration of

171
00:07:43,230 --> 00:07:47,070
the prodigal and there are the results

172
00:07:45,030 --> 00:07:50,070
of five cryptographic functions there

173
00:07:47,070 --> 00:07:52,290
are two algorithms suites that 3gpp has

174
00:07:50,070 --> 00:07:54,390
actually standardized one is based on a

175
00:07:52,290 --> 00:07:56,310
yes and it's called million edge and the

176
00:07:54,390 --> 00:08:01,080
other one<font color="#CCCCCC"> is called</font><font color="#E5E5E5"> a truck and it's</font>

177
00:07:56,310 --> 00:08:04,979
based on<font color="#CCCCCC"> Tkachuk or the guitar can turn</font>

178
00:08:01,080 --> 00:08:06,900
on permutation once these authentication

179
00:08:04,979 --> 00:08:10,590
vectors authentication<font color="#E5E5E5"> vectors including</font>

180
00:08:06,900 --> 00:08:12,270
all<font color="#CCCCCC"> the values on top are calculated the</font>

181
00:08:10,590 --> 00:08:13,770
operator sends these values to the

182
00:08:12,270 --> 00:08:17,370
<font color="#E5E5E5">server and the server has enough</font>

183
00:08:13,770 --> 00:08:20,130
material for n sessions so going<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to</font>

184
00:08:17,370 --> 00:08:22,470
the party the actual authentication

185
00:08:20,130 --> 00:08:27,659
protocol what happens is that the server

186
00:08:22,470 --> 00:08:30,150
<font color="#E5E5E5">first sends a top pole made up of some</font>

187
00:08:27,660 --> 00:08:31,710
one authentication<font color="#E5E5E5"> bag or one subset of</font>

188
00:08:30,150 --> 00:08:34,289
information from an authentication

189
00:08:31,710 --> 00:08:37,169
vector namely the randomness a constant

190
00:08:34,289 --> 00:08:39,539
<font color="#CCCCCC">EMF the masked sequence number that was</font>

191
00:08:37,169 --> 00:08:41,069
used for<font color="#CCCCCC"> the authentication and a Mac</font>

192
00:08:39,539 --> 00:08:43,559
that authenticates the server to the

193
00:08:41,070 --> 00:08:46,830
client<font color="#E5E5E5"> the client has to verify the</font>

194
00:08:43,559 --> 00:08:48,599
validity of these information

195
00:08:46,830 --> 00:08:50,820
and afterwards recover the sequence

196
00:08:48,600 --> 00:08:52,860
number that always<font color="#E5E5E5"> use now the client</font>

197
00:08:50,820 --> 00:08:55,530
stores its own sequence number and it

198
00:08:52,860 --> 00:08:57,060
receives<font color="#E5E5E5"> from the server the the</font>

199
00:08:55,530 --> 00:08:59,730
sequence number that was used by the

200
00:08:57,060 --> 00:09:01,680
operator for that session these could be

201
00:08:59,730 --> 00:09:05,850
equal I mean the<font color="#E5E5E5"> best case they will be</font>

202
00:09:01,680 --> 00:09:08,099
equal but if if the<font color="#CCCCCC"> two parties rd</font>

203
00:09:05,850 --> 00:09:11,250
synchronized that they will<font color="#CCCCCC"> be far apart</font>

204
00:09:08,100 --> 00:09:13,200
so what we want or what the 3gpp wanted

205
00:09:11,250 --> 00:09:14,790
was that<font color="#E5E5E5"> these values are not too far</font>

206
00:09:13,200 --> 00:09:17,430
apart if the values are too far apart

207
00:09:14,790 --> 00:09:19,380
and the<font color="#CCCCCC"> Mac verifies so we know that the</font>

208
00:09:17,430 --> 00:09:22,439
operator is honestly the synchronized

209
00:09:19,380 --> 00:09:24,390
with from the client<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> there some</font>

210
00:09:22,440 --> 00:09:26,220
sort of resynchronization procedure

211
00:09:24,390 --> 00:09:28,470
which<font color="#E5E5E5"> I will not cover the details of</font>

212
00:09:26,220 --> 00:09:31,410
here but which behaves differently than

213
00:09:28,470 --> 00:09:33,960
the authentication protocol so finally

214
00:09:31,410 --> 00:09:36,270
if everything checks out<font color="#E5E5E5"> all right then</font>

215
00:09:33,960 --> 00:09:38,640
the client updates a sequence number to

216
00:09:36,270 --> 00:09:41,730
the sequence number it received and it

217
00:09:38,640 --> 00:09:44,970
derives the<font color="#E5E5E5"> session Keys sending with it</font>

218
00:09:41,730 --> 00:09:48,300
also<font color="#CCCCCC"> a response res which is actually</font>

219
00:09:44,970 --> 00:09:51,510
<font color="#CCCCCC">the</font><font color="#E5E5E5"> Mac so if everything goes</font><font color="#CCCCCC"> all right</font>

220
00:09:48,300 --> 00:09:53,430
if all goes as planned then there is a

221
00:09:51,510 --> 00:09:57,450
secure<font color="#CCCCCC"> channel</font><font color="#E5E5E5"> that's established with</font>

222
00:09:53,430 --> 00:09:59,609
these<font color="#CCCCCC"> keys CK and</font><font color="#E5E5E5"> ik finally in</font><font color="#CCCCCC"> the</font>

223
00:09:57,450 --> 00:10:01,890
final phase<font color="#CCCCCC"> there is a TMS I</font>

224
00:09:59,610 --> 00:10:04,560
reallocation phase now this<font color="#E5E5E5"> is very</font>

225
00:10:01,890 --> 00:10:06,480
important the TMS I reallocation should

226
00:10:04,560 --> 00:10:08,430
be over the secure channel so it should

227
00:10:06,480 --> 00:10:10,200
be encrypted and authenticated but in

228
00:10:08,430 --> 00:10:16,020
fact it is not authenticated this is

229
00:10:10,200 --> 00:10:17,820
only encrypted<font color="#E5E5E5"> the result of the TMS I</font>

230
00:10:16,020 --> 00:10:20,040
reallocation is obviously to give the

231
00:10:17,820 --> 00:10:22,410
client and<font color="#CCCCCC"> you TMS I to use at the next</font>

232
00:10:20,040 --> 00:10:25,140
<font color="#CCCCCC">session so let's</font><font color="#E5E5E5"> look at some privacy</font>

233
00:10:22,410 --> 00:10:27,569
requirements 3gpp said they needed three

234
00:10:25,140 --> 00:10:29,010
properties first is a user identity

235
00:10:27,570 --> 00:10:30,540
<font color="#E5E5E5">confidentiality the second is</font>

236
00:10:29,010 --> 00:10:32,460
untraceable ax t and the third is

237
00:10:30,540 --> 00:10:35,130
location confidentiality<font color="#E5E5E5"> I'm actually</font>

238
00:10:32,460 --> 00:10:37,350
using their terminology doesn't always

239
00:10:35,130 --> 00:10:40,350
overlap with<font color="#CCCCCC"> the terminology we use in</font>

240
00:10:37,350 --> 00:10:42,540
cryptography so user identity

241
00:10:40,350 --> 00:10:45,360
confidentiality refers to the MC value

242
00:10:42,540 --> 00:10:47,180
the permanent the permanent MC that is

243
00:10:45,360 --> 00:10:49,260
that should be confidentially

244
00:10:47,180 --> 00:10:51,420
confidential with respect to a passive

245
00:10:49,260 --> 00:10:54,900
adversary now we thought<font color="#CCCCCC"> that having a</font>

246
00:10:51,420 --> 00:10:58,620
passive adversary today or nowadays is a

247
00:10:54,900 --> 00:11:00,240
bit under ambitious so we consider

248
00:10:58,620 --> 00:11:04,230
active adversaries as well

249
00:11:00,240 --> 00:11:06,390
and we also want to ensure<font color="#CCCCCC"> that the</font>

250
00:11:04,230 --> 00:11:09,209
sequence numbers which actually<font color="#E5E5E5"> can be</font>

251
00:11:06,390 --> 00:11:13,050
used to to tell clients apart should

252
00:11:09,209 --> 00:11:16,410
also remain confidential second one is

253
00:11:13,050 --> 00:11:18,089
user untraceable ax t that no adversary

254
00:11:16,410 --> 00:11:20,880
must know whether the same service is

255
00:11:18,089 --> 00:11:23,029
provided to a client many times now this

256
00:11:20,880 --> 00:11:25,410
is basically in order to prevent

257
00:11:23,029 --> 00:11:30,540
adversaries from tracing your behavior

258
00:11:25,410 --> 00:11:32,490
now we translated this into no adversary

259
00:11:30,540 --> 00:11:34,349
must know if some services in one

260
00:11:32,490 --> 00:11:37,380
particular service is delivered to<font color="#E5E5E5"> the</font>

261
00:11:34,350 --> 00:11:39,180
same client as before or not as we as we

262
00:11:37,380 --> 00:11:42,240
discussed<font color="#E5E5E5"> in our paper basically</font><font color="#CCCCCC"> this</font>

263
00:11:39,180 --> 00:11:44,640
this together with<font color="#E5E5E5"> a with the</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> link</font>

264
00:11:42,240 --> 00:11:47,910
ability requirement that<font color="#CCCCCC"> we had actually</font>

265
00:11:44,640 --> 00:11:50,850
<font color="#E5E5E5">gives the an traceability in a much</font><font color="#CCCCCC"> more</font>

266
00:11:47,910 --> 00:11:53,100
modular way so finally there's a

267
00:11:50,850 --> 00:11:54,990
question of location we<font color="#CCCCCC"> wanted the</font>

268
00:11:53,100 --> 00:11:57,450
<font color="#E5E5E5">location of the client is confidential</font>

269
00:11:54,990 --> 00:11:59,399
that is to say no adversary must detect

270
00:11:57,450 --> 00:12:01,410
the presence of a<font color="#E5E5E5"> client in a given area</font>

271
00:11:59,399 --> 00:12:03,690
now because the adversary is in that

272
00:12:01,410 --> 00:12:05,189
area or possibly in that area what<font color="#E5E5E5"> we</font>

273
00:12:03,690 --> 00:12:09,079
mean<font color="#CCCCCC"> to</font><font color="#E5E5E5"> say is that we don't want</font><font color="#CCCCCC"> the</font>

274
00:12:05,190 --> 00:12:11,550
correspondence between an MC and<font color="#E5E5E5"> an LA I</font>

275
00:12:09,079 --> 00:12:17,760
we make<font color="#CCCCCC"> no additional requirement to</font>

276
00:12:11,550 --> 00:12:20,219
this so we actually merge these these

277
00:12:17,760 --> 00:12:22,880
three requirements into two more

278
00:12:20,220 --> 00:12:25,290
cryptographically defined requirements

279
00:12:22,880 --> 00:12:30,029
provable key indistinguishability and

280
00:12:25,290 --> 00:12:31,709
client<font color="#CCCCCC"> unlink ability so let's</font><font color="#E5E5E5"> look at</font>

281
00:12:30,029 --> 00:12:34,589
some of<font color="#E5E5E5"> the weaknesses of the protocol</font>

282
00:12:31,709 --> 00:12:36,479
no these are quite easy<font color="#E5E5E5"> to follow but</font>

283
00:12:34,589 --> 00:12:38,370
I'll do it anyway so there are three

284
00:12:36,480 --> 00:12:39,899
attacks that I want<font color="#E5E5E5"> to focus on the</font>

285
00:12:38,370 --> 00:12:43,350
first one is<font color="#CCCCCC"> the MC catcher attack</font>

286
00:12:39,899 --> 00:12:46,079
presented by<font color="#CCCCCC"> strobel in 2007 then</font>

287
00:12:43,350 --> 00:12:48,839
there's a bad<font color="#CCCCCC"> TMS I and</font><font color="#E5E5E5"> la I management</font>

288
00:12:46,079 --> 00:12:52,560
and finally it's the attack by era penis

289
00:12:48,839 --> 00:12:55,130
and all who linked failure messages and

290
00:12:52,560 --> 00:12:58,170
<font color="#CCCCCC">thus can who can does actually</font>

291
00:12:55,130 --> 00:13:00,390
distinguish between clients so MC

292
00:12:58,170 --> 00:13:02,729
catchers they work very easily the idea

293
00:13:00,390 --> 00:13:04,829
is to for the adversary to recover the

294
00:13:02,730 --> 00:13:08,430
<font color="#E5E5E5">permanent</font><font color="#CCCCCC"> identifiers does being able to</font>

295
00:13:04,829 --> 00:13:10,949
track many<font color="#E5E5E5"> users at many times so the</font>

296
00:13:08,430 --> 00:13:12,219
user<font color="#E5E5E5"> identifier user identifier MC is</font>

297
00:13:10,949 --> 00:13:14,740
used immediately

298
00:13:12,220 --> 00:13:17,500
the adversaries job is done however even

299
00:13:14,740 --> 00:13:19,780
<font color="#E5E5E5">if we're using a</font><font color="#CCCCCC"> topple made up of TMS I</font>

300
00:13:17,500 --> 00:13:21,640
and nai we just need to replace this

301
00:13:19,780 --> 00:13:24,850
toppled by a simple bit<font color="#CCCCCC"> of randomness</font>

302
00:13:21,640 --> 00:13:26,770
and this will trigger the server to the

303
00:13:24,850 --> 00:13:28,840
<font color="#CCCCCC">backup procedure of requesting the</font>

304
00:13:26,770 --> 00:13:31,900
permanent identifier so again the

305
00:13:28,840 --> 00:13:34,080
adversary has his job done for it for

306
00:13:31,900 --> 00:13:37,420
<font color="#E5E5E5">himself now that this is</font><font color="#CCCCCC"> very</font>

307
00:13:34,080 --> 00:13:40,240
parallelizable and extremely damaging as

308
00:13:37,420 --> 00:13:45,310
it reveals immediately where anybody is

309
00:13:40,240 --> 00:13:47,560
at any time<font color="#E5E5E5"> and what they're doing so to</font>

310
00:13:45,310 --> 00:13:50,589
<font color="#E5E5E5">look at TMS I management and</font><font color="#CCCCCC"> na</font><font color="#E5E5E5"> I</font>

311
00:13:47,560 --> 00:13:52,810
management well the the<font color="#E5E5E5"> idea of this</font>

312
00:13:50,590 --> 00:13:55,750
attack it relies on a similar principle

313
00:13:52,810 --> 00:13:59,319
basically if a TMS I and the LA I are

314
00:13:55,750 --> 00:14:01,380
not<font color="#E5E5E5"> found by the server then the</font>

315
00:13:59,320 --> 00:14:06,580
permanent then there is<font color="#CCCCCC"> a permanent</font>

316
00:14:01,380 --> 00:14:09,100
identity request however<font color="#E5E5E5"> when we in</font>

317
00:14:06,580 --> 00:14:11,440
order for<font color="#E5E5E5"> this to happen you need to</font>

318
00:14:09,100 --> 00:14:13,150
have<font color="#E5E5E5"> a valid TMS I and the TMS I is sent</font>

319
00:14:11,440 --> 00:14:15,400
in the reallocation message which is not

320
00:14:13,150 --> 00:14:16,840
authenticated so all the adversary has

321
00:14:15,400 --> 00:14:19,480
to do is to replace<font color="#CCCCCC"> the reallocation</font>

322
00:14:16,840 --> 00:14:23,370
message by some nonsense which because

323
00:14:19,480 --> 00:14:26,050
it's not a robust scheme we<font color="#E5E5E5"> actually can</font>

324
00:14:23,370 --> 00:14:27,490
can decrypt to some nonsense and that

325
00:14:26,050 --> 00:14:31,209
nonsense is going to be used<font color="#E5E5E5"> by the</font>

326
00:14:27,490 --> 00:14:33,700
client again so this<font color="#E5E5E5"> is not us this will</font>

327
00:14:31,210 --> 00:14:37,440
immediately trigger again the MC leakage

328
00:14:33,700 --> 00:14:39,970
and again is highly parallelizable again

329
00:14:37,440 --> 00:14:42,490
finally there's<font color="#E5E5E5"> there's a failure</font>

330
00:14:39,970 --> 00:14:46,510
message link ability which actually

331
00:14:42,490 --> 00:14:49,930
relies on on the fact that the adversary

332
00:14:46,510 --> 00:14:51,640
can manage messages in network finally

333
00:14:49,930 --> 00:14:53,560
for example it can stop an

334
00:14:51,640 --> 00:14:56,050
authentication challenge from reaching

335
00:14:53,560 --> 00:14:58,750
the client thus essentially dyssynchrony

336
00:14:56,050 --> 00:15:00,969
<font color="#CCCCCC">Singh them and then testing out which</font>

337
00:14:58,750 --> 00:15:03,430
client will actually respond to this by

338
00:15:00,970 --> 00:15:07,000
means of a response rather than by means

339
00:15:03,430 --> 00:15:08,709
of a failure message basically to see

340
00:15:07,000 --> 00:15:12,480
this<font color="#E5E5E5"> in perspective this is not</font>

341
00:15:08,710 --> 00:15:15,850
parallelizable the idea is to<font color="#CCCCCC"> make a one</font>

342
00:15:12,480 --> 00:15:17,770
is to make one client desynchronized and

343
00:15:15,850 --> 00:15:20,680
then targeting<font color="#CCCCCC"> that client seeing</font><font color="#E5E5E5"> that</font>

344
00:15:17,770 --> 00:15:23,439
it behaves anomalously with respect to

345
00:15:20,680 --> 00:15:25,339
others to see our fix<font color="#E5E5E5"> I'm just going</font><font color="#CCCCCC"> to</font>

346
00:15:23,440 --> 00:15:27,350
say a few words about it

347
00:15:25,340 --> 00:15:29,090
namely that we are actually reducing the

348
00:15:27,350 --> 00:15:30,830
five-step protocol to a<font color="#E5E5E5"> three-step</font>

349
00:15:29,090 --> 00:15:33,320
protocol we're removing any type of

350
00:15:30,830 --> 00:15:36,700
resynchronization and we're ensuring

351
00:15:33,320 --> 00:15:40,040
that the TMS I reallocation is well done

352
00:15:36,700 --> 00:15:42,110
we we have<font color="#E5E5E5"> a fix that reduces the batch</font>

353
00:15:40,040 --> 00:15:44,689
of<font color="#E5E5E5"> authentication vectors to only one</font>

354
00:15:42,110 --> 00:15:47,360
<font color="#CCCCCC">element where we're careful about how</font>

355
00:15:44,690 --> 00:15:50,240
indexes indices and sequence numbers are

356
00:15:47,360 --> 00:15:53,450
used<font color="#E5E5E5"> and we also encrypt the permanent</font>

357
00:15:50,240 --> 00:15:55,790
identity and use an unfortunate occasion

358
00:15:53,450 --> 00:15:59,480
procedure to prevent further attacks by

359
00:15:55,790 --> 00:16:01,250
active adversaries our results<font color="#CCCCCC"> are we</font>

360
00:15:59,480 --> 00:16:03,680
actually achieve something that is a

361
00:16:01,250 --> 00:16:05,540
weak client on linkable week because we

362
00:16:03,680 --> 00:16:08,239
are not allowing any corruption of any

363
00:16:05,540 --> 00:16:10,459
of any clients and which is key

364
00:16:08,240 --> 00:16:12,260
indistinguishable moreover we<font color="#E5E5E5"> prove</font><font color="#CCCCCC"> that</font>

365
00:16:10,460 --> 00:16:15,410
if we want to<font color="#CCCCCC"> keep the structure of</font><font color="#E5E5E5"> the</font>

366
00:16:12,260 --> 00:16:18,110
<font color="#E5E5E5">protocol as it is so without many</font>

367
00:16:15,410 --> 00:16:20,000
modifications then we<font color="#CCCCCC"> actually can't get</font>

368
00:16:18,110 --> 00:16:25,630
better privacy<font color="#E5E5E5"> than this so this is</font><font color="#CCCCCC"> the</font>

369
00:16:20,000 --> 00:16:25,630
best<font color="#E5E5E5"> we can do so finally just 22</font>

