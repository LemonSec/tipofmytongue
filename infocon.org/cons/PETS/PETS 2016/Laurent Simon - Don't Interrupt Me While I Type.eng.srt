1
00:00:00,000 --> 00:00:04,410
university of cambridge<font color="#E5E5E5"> and today my</font>

2
00:00:01,740 --> 00:00:06,359
talk is don't interrupt me while i type

3
00:00:04,410 --> 00:00:09,000
in fairing text entered through gesture

4
00:00:06,359 --> 00:00:10,469
typing on android keyboard so

5
00:00:09,000 --> 00:00:11,879
essentially<font color="#E5E5E5"> this talk is about the study</font>

6
00:00:10,469 --> 00:00:14,000
of a new side channel that we have

7
00:00:11,880 --> 00:00:16,109
explored on the android<font color="#E5E5E5"> operating system</font>

8
00:00:14,000 --> 00:00:18,660
more specifically in this<font color="#E5E5E5"> talk we</font>

9
00:00:16,109 --> 00:00:20,310
exploit the so-called proc FS virtual

10
00:00:18,660 --> 00:00:23,509
file system which is mounted by the

11
00:00:20,310 --> 00:00:25,979
<font color="#CCCCCC">linux kernel at boot time under / proc</font>

12
00:00:23,510 --> 00:00:28,320
and this<font color="#CCCCCC"> park fs5 system is called</font>

13
00:00:25,980 --> 00:00:30,359
virtual simply because the files<font color="#E5E5E5"> that it</font>

14
00:00:28,320 --> 00:00:32,730
contains do not correspond to data

15
00:00:30,359 --> 00:00:34,590
stored<font color="#E5E5E5"> on disk instead the information</font>

16
00:00:32,729 --> 00:00:37,500
you find on those in this in those files

17
00:00:34,590 --> 00:00:39,300
are various pieces of information which

18
00:00:37,500 --> 00:00:42,600
are typically<font color="#E5E5E5"> used for troubleshooting</font>

19
00:00:39,300 --> 00:00:45,860
purposes so under proc FS we find a

20
00:00:42,600 --> 00:00:48,360
<font color="#E5E5E5">application specific virtual files that</font>

21
00:00:45,860 --> 00:00:51,149
contain information about applications

22
00:00:48,360 --> 00:00:53,820
and processes so for<font color="#E5E5E5"> example there's a</font><font color="#CCCCCC"> a</font>

23
00:00:51,149 --> 00:00:55,980
file called<font color="#CCCCCC"> TCP</font><font color="#E5E5E5"> sand which basically</font>

24
00:00:53,820 --> 00:00:58,190
contains the number of bytes that every

25
00:00:55,980 --> 00:01:00,828
particular app has sent over the network

26
00:00:58,190 --> 00:01:03,120
so not surprisingly those

27
00:01:00,829 --> 00:01:05,189
application-specific virtual files have

28
00:01:03,120 --> 00:01:07,798
been shown repeatedly to enable

29
00:01:05,188 --> 00:01:09,929
substantial side channels and so in the

30
00:01:07,799 --> 00:01:11,460
latest<font color="#CCCCCC"> android version those files have</font>

31
00:01:09,930 --> 00:01:14,250
been<font color="#E5E5E5"> locked down and they are no longer</font>

32
00:01:11,460 --> 00:01:16,289
readable by<font color="#E5E5E5"> third-party apps however the</font>

33
00:01:14,250 --> 00:01:19,380
praça phase we also find global virtual

34
00:01:16,290 --> 00:01:22,770
files that contain information about the

35
00:01:19,380 --> 00:01:24,089
global state of the system<font color="#E5E5E5"> and those</font>

36
00:01:22,770 --> 00:01:25,740
global<font color="#E5E5E5"> virtual files are still</font>

37
00:01:24,090 --> 00:01:27,900
accessible even in the latest<font color="#CCCCCC"> android</font>

38
00:01:25,740 --> 00:01:29,869
version so not surprisingly these are

39
00:01:27,900 --> 00:01:32,159
the files that we exploit in this work

40
00:01:29,869 --> 00:01:34,530
to be more<font color="#CCCCCC"> specific</font><font color="#E5E5E5"> there are two pieces</font>

41
00:01:32,159 --> 00:01:36,329
<font color="#CCCCCC">of</font><font color="#E5E5E5"> information that we leverage the</font>

42
00:01:34,530 --> 00:01:38,270
first is the number of hardware

43
00:01:36,329 --> 00:01:41,130
interrupts that the<font color="#CCCCCC"> android</font><font color="#E5E5E5"> colonel</font>

44
00:01:38,270 --> 00:01:42,869
receives and the second is the<font color="#E5E5E5"> total</font>

45
00:01:41,130 --> 00:01:47,548
<font color="#CCCCCC">number of contexts which is the</font><font color="#E5E5E5"> u.s.</font>

46
00:01:42,869 --> 00:01:49,200
<font color="#CCCCCC">undergoes during user input so to</font><font color="#E5E5E5"> make</font>

47
00:01:47,549 --> 00:01:51,030
sure<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are on the</font><font color="#E5E5E5"> same page i'll assume</font>

48
00:01:49,200 --> 00:01:54,210
for the rest of this talk that<font color="#E5E5E5"> the user</font>

49
00:01:51,030 --> 00:01:56,700
has installed an app which is curious on

50
00:01:54,210 --> 00:01:58,619
his phone and<font color="#E5E5E5"> this curious app is trying</font>

51
00:01:56,700 --> 00:02:00,869
nevertheless to trying is trying

52
00:01:58,619 --> 00:02:03,479
nevertheless to infer what users type on

53
00:02:00,869 --> 00:02:05,430
in other apps on the<font color="#CCCCCC"> phone and this</font>

54
00:02:03,479 --> 00:02:09,030
curious app doesn't require any

55
00:02:05,430 --> 00:02:10,560
permission whatsoever alphas are further

56
00:02:09,030 --> 00:02:13,080
assume that the user makes use of the

57
00:02:10,560 --> 00:02:13,440
so-called gesture typing feature that

58
00:02:13,080 --> 00:02:16,020
most

59
00:02:13,440 --> 00:02:18,180
modern smartphone keyboards have so with

60
00:02:16,020 --> 00:02:20,250
gesture typing you<font color="#CCCCCC"> can essentially enter</font>

61
00:02:18,180 --> 00:02:22,500
words in a keyboard by dragging your

62
00:02:20,250 --> 00:02:25,500
<font color="#E5E5E5">finger from letters to letters so</font>

63
00:02:22,500 --> 00:02:28,440
there's an example here with the the

64
00:02:25,500 --> 00:02:30,000
word hello so what will happen<font color="#E5E5E5"> is the</font>

65
00:02:28,440 --> 00:02:33,150
user would put his finger on the on the

66
00:02:30,000 --> 00:02:34,710
letter H drag it to Ethan Alden<font color="#E5E5E5"> Oh at</font>

67
00:02:33,150 --> 00:02:37,140
which<font color="#CCCCCC"> point he would take his finger of</font>

68
00:02:34,710 --> 00:02:38,370
the phone of the of the screen so

69
00:02:37,140 --> 00:02:41,070
something I want to point out<font color="#CCCCCC"> here is</font>

70
00:02:38,370 --> 00:02:43,560
that if you<font color="#E5E5E5"> look at letters in the word</font>

71
00:02:41,070 --> 00:02:45,510
hello so for<font color="#E5E5E5"> example the letter e what</font>

72
00:02:43,560 --> 00:02:47,340
you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that every time the finger</font>

73
00:02:45,510 --> 00:02:50,700
hits a letter it's changing directions

74
00:02:47,340 --> 00:02:53,150
and this effectively requires the finger

75
00:02:50,700 --> 00:02:56,160
to<font color="#E5E5E5"> slow down right before it reaches e</font>

76
00:02:53,150 --> 00:02:58,710
at which point<font color="#CCCCCC"> it's it has a speed which</font>

77
00:02:56,160 --> 00:03:00,120
is<font color="#CCCCCC"> virtually now and then the</font><font color="#E5E5E5"> the finger</font>

78
00:02:58,710 --> 00:03:02,220
will accelerate a game in the other

79
00:03:00,120 --> 00:03:05,280
direction so I'll just get back to<font color="#CCCCCC"> this</font>

80
00:03:02,220 --> 00:03:07,230
later on<font color="#E5E5E5"> either in the presentation so</font>

81
00:03:05,280 --> 00:03:09,780
there are<font color="#E5E5E5"> two things that make the the</font>

82
00:03:07,230 --> 00:03:10,950
attack possible the first is that every

83
00:03:09,780 --> 00:03:14,130
time<font color="#CCCCCC"> you move your finger on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> screen</font>

84
00:03:10,950 --> 00:03:15,959
the the screen reports the finger

85
00:03:14,130 --> 00:03:18,390
position update to the<font color="#CCCCCC"> android kernel</font>

86
00:03:15,960 --> 00:03:20,459
and this is done<font color="#CCCCCC"> through</font><font color="#E5E5E5"> the generation</font>

87
00:03:18,390 --> 00:03:21,510
of hardware interrupts and so you<font color="#E5E5E5"> can</font>

88
00:03:20,459 --> 00:03:23,610
<font color="#E5E5E5">see that the number of hardware</font>

89
00:03:21,510 --> 00:03:26,280
interrupt that<font color="#CCCCCC"> I received does in fact</font>

90
00:03:23,610 --> 00:03:29,120
leaked some amount<font color="#E5E5E5"> of information about</font>

91
00:03:26,280 --> 00:03:31,410
what users have typed second the

92
00:03:29,120 --> 00:03:35,070
application so the genuine keyboard app

93
00:03:31,410 --> 00:03:37,440
where you enter your text also needs to

94
00:03:35,070 --> 00:03:40,320
retrieve the position update of<font color="#CCCCCC"> the</font>

95
00:03:37,440 --> 00:03:44,670
finger from the colonel the keyboard app

96
00:03:40,320 --> 00:03:46,500
runs as a standard process on<font color="#CCCCCC"> the device</font>

97
00:03:44,670 --> 00:03:48,500
and therefore to query the colonel it

98
00:03:46,500 --> 00:03:50,910
has to do some context<font color="#CCCCCC"> switches and</font>

99
00:03:48,500 --> 00:03:52,950
essentially again the<font color="#E5E5E5"> number of contexts</font>

100
00:03:50,910 --> 00:03:55,079
which is does reveal some amount<font color="#E5E5E5"> of</font>

101
00:03:52,950 --> 00:03:57,119
information<font color="#E5E5E5"> about what users have typed</font>

102
00:03:55,080 --> 00:03:59,190
and so in this work we leverage both

103
00:03:57,120 --> 00:04:03,510
both the hardware interrupts and the

104
00:03:59,190 --> 00:04:07,230
software interrupts to our advantage so

105
00:04:03,510 --> 00:04:09,679
this graph shows you the speed at which

106
00:04:07,230 --> 00:04:12,690
the total number of<font color="#E5E5E5"> contexts which is</font>

107
00:04:09,680 --> 00:04:16,108
varies when a user types the word hello

108
00:04:12,690 --> 00:04:17,700
as a function of time<font color="#E5E5E5"> so what you get so</font>

109
00:04:16,108 --> 00:04:20,820
the blue line is the actual data

110
00:04:17,700 --> 00:04:24,240
recorded and the green line the dashed

111
00:04:20,820 --> 00:04:26,280
line is the average data so what you see

112
00:04:24,240 --> 00:04:27,090
is when the finger starts at the letter

113
00:04:26,280 --> 00:04:29,159
<font color="#CCCCCC">H</font>

114
00:04:27,090 --> 00:04:32,310
the speed of the<font color="#CCCCCC"> total number of</font>

115
00:04:29,160 --> 00:04:33,690
<font color="#E5E5E5">contexts which is increases then it</font>

116
00:04:32,310 --> 00:04:37,229
remains constant for the other way and

117
00:04:33,690 --> 00:04:39,150
<font color="#E5E5E5">then it decreases ok and the the pattern</font>

118
00:04:37,229 --> 00:04:42,360
repeats itself or for other other

119
00:04:39,150 --> 00:04:43,799
letters so in fact the the<font color="#E5E5E5"> speed of</font><font color="#CCCCCC"> the</font>

120
00:04:42,360 --> 00:04:46,560
total number of<font color="#E5E5E5"> contexts which is</font>

121
00:04:43,800 --> 00:04:48,780
loosely reflects what the the finger

122
00:04:46,560 --> 00:04:51,060
does on<font color="#E5E5E5"> the screen as I pointed out</font>

123
00:04:48,780 --> 00:04:52,948
earlier the finger accelerates remain

124
00:04:51,060 --> 00:04:55,110
constant its speed remains constant for

125
00:04:52,949 --> 00:04:57,210
<font color="#E5E5E5">little while and then decrypt the finger</font>

126
00:04:55,110 --> 00:04:58,680
slows down and the reasons what the

127
00:04:57,210 --> 00:05:00,840
reason why it flows down is simple is

128
00:04:58,680 --> 00:05:02,550
but is because as i pointed<font color="#E5E5E5"> i pointed</font>

129
00:05:00,840 --> 00:05:03,929
out earlier the finger is going to move

130
00:05:02,550 --> 00:05:06,479
is going<font color="#E5E5E5"> to change directions and</font>

131
00:05:03,930 --> 00:05:09,210
therefore there's a<font color="#E5E5E5"> decreasing speed</font>

132
00:05:06,479 --> 00:05:11,280
here so we're going<font color="#E5E5E5"> to use the speed of</font>

133
00:05:09,210 --> 00:05:13,169
<font color="#CCCCCC">the total number of</font><font color="#E5E5E5"> context switches as</font>

134
00:05:11,280 --> 00:05:17,580
one of the features to train the

135
00:05:13,169 --> 00:05:20,099
classifier later on so here at the top

136
00:05:17,580 --> 00:05:21,960
you see the total<font color="#E5E5E5"> number of hardware</font>

137
00:05:20,100 --> 00:05:24,660
interrupts that the android colonel

138
00:05:21,960 --> 00:05:28,080
receives when a user types the<font color="#E5E5E5"> word</font>

139
00:05:24,660 --> 00:05:29,340
hello again in between<font color="#CCCCCC"> letters you see</font>

140
00:05:28,080 --> 00:05:31,979
that the number of hardware interrupts

141
00:05:29,340 --> 00:05:34,440
received grows linearly as a function of

142
00:05:31,979 --> 00:05:36,840
time<font color="#E5E5E5"> and then for each letter you see</font>

143
00:05:34,440 --> 00:05:39,330
those little plateaus and those plateaus

144
00:05:36,840 --> 00:05:41,099
in fact correspond to the time when the

145
00:05:39,330 --> 00:05:44,760
<font color="#E5E5E5">finger has a speed which is</font><font color="#CCCCCC"> virtually no</font>

146
00:05:41,100 --> 00:05:47,099
which<font color="#E5E5E5"> I pointed out earlier so when the</font>

147
00:05:44,760 --> 00:05:48,330
the finger has a not speed essentially

148
00:05:47,099 --> 00:05:51,030
just mean that it's not moving<font color="#E5E5E5"> and</font>

149
00:05:48,330 --> 00:05:53,130
therefore<font color="#CCCCCC"> the screen need not report any</font>

150
00:05:51,030 --> 00:05:55,739
updates to the<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the OS kernel and</font>

151
00:05:53,130 --> 00:05:58,800
therefore the total number of hardware

152
00:05:55,740 --> 00:06:01,919
interrupts received remains constant<font color="#E5E5E5"> ok</font>

153
00:05:58,800 --> 00:06:03,990
so<font color="#E5E5E5"> I refer</font><font color="#CCCCCC"> to those plateaus as simply</font>

154
00:06:01,919 --> 00:06:06,150
the zero speed events in the rest of

155
00:06:03,990 --> 00:06:09,990
this talk because they correspond to the

156
00:06:06,150 --> 00:06:12,780
finger having virtually no speed so what

157
00:06:09,990 --> 00:06:14,550
we do in<font color="#E5E5E5"> this work is we we use the the</font>

158
00:06:12,780 --> 00:06:16,380
position of those zero speed islands as

159
00:06:14,550 --> 00:06:19,620
one of the features to train our

160
00:06:16,380 --> 00:06:21,780
classifier so what what we would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font>

161
00:06:19,620 --> 00:06:23,849
be able to do is be<font color="#CCCCCC"> able to precisely</font>

162
00:06:21,780 --> 00:06:25,950
locate where those zero speed events

163
00:06:23,849 --> 00:06:28,770
occur and that's what's depicted in the

164
00:06:25,950 --> 00:06:30,719
in the second image unfortunately in

165
00:06:28,770 --> 00:06:33,240
practice everything doesn't work out as

166
00:06:30,720 --> 00:06:34,950
<font color="#CCCCCC">well as we would</font><font color="#E5E5E5"> hope for and what we</font>

167
00:06:33,240 --> 00:06:36,960
only managed<font color="#CCCCCC"> to get is what's depicted</font>

168
00:06:34,950 --> 00:06:40,050
in the bottom picture it's this kind of

169
00:06:36,960 --> 00:06:40,659
distribution of zero speed events<font color="#CCCCCC"> ok and</font>

170
00:06:40,050 --> 00:06:41,950
there are

171
00:06:40,660 --> 00:06:44,500
two reasons<font color="#E5E5E5"> why we can't precisely</font>

172
00:06:41,950 --> 00:06:46,990
locate those zero speed events the first

173
00:06:44,500 --> 00:06:49,000
is that<font color="#CCCCCC"> users move their finger</font><font color="#E5E5E5"> really</font>

174
00:06:46,990 --> 00:06:52,000
fast<font color="#E5E5E5"> on the screen and that makes the</font>

175
00:06:49,000 --> 00:06:53,800
signal really noisy and the second is

176
00:06:52,000 --> 00:06:58,120
that<font color="#E5E5E5"> for certain words they are simply</font>

177
00:06:53,800 --> 00:07:00,490
<font color="#E5E5E5">aren't any zero speed events at all for</font>

178
00:06:58,120 --> 00:07:02,830
example if you consider the word<font color="#CCCCCC"> ask ASX</font>

179
00:07:00,490 --> 00:07:06,220
the finger might just go straight from a

180
00:07:02,830 --> 00:07:08,859
<font color="#CCCCCC">2k without stopping at s ok but more</font>

181
00:07:06,220 --> 00:07:10,960
generally users tend to<font color="#E5E5E5"> move their</font>

182
00:07:08,860 --> 00:07:13,360
finger<font color="#CCCCCC"> on the screen not using those</font>

183
00:07:10,960 --> 00:07:15,669
ideal straight lines that<font color="#E5E5E5"> I showed you</font>

184
00:07:13,360 --> 00:07:18,730
earlier the trajectory<font color="#E5E5E5"> of the finger</font>

185
00:07:15,670 --> 00:07:21,580
looks<font color="#E5E5E5"> more like this curved shape for</font>

186
00:07:18,730 --> 00:07:23,950
this light blue color word here<font color="#E5E5E5"> and this</font>

187
00:07:21,580 --> 00:07:28,359
makes the<font color="#CCCCCC"> the signal</font><font color="#E5E5E5"> even noisier for us</font>

188
00:07:23,950 --> 00:07:29,770
to be able to do<font color="#E5E5E5"> in faux wood but</font>

189
00:07:28,360 --> 00:07:31,930
nevertheless the presence or the absence

190
00:07:29,770 --> 00:07:34,750
of those<font color="#E5E5E5"> zero speed events as</font><font color="#CCCCCC"> well as</font>

191
00:07:31,930 --> 00:07:36,400
their distribution doing fact do in fact

192
00:07:34,750 --> 00:07:40,330
correlate towards users type on the

193
00:07:36,400 --> 00:07:42,039
screen<font color="#CCCCCC"> so another piece of the puzzle is</font>

194
00:07:40,330 --> 00:07:44,130
as I said<font color="#CCCCCC"> earlier we have these curious</font>

195
00:07:42,040 --> 00:07:47,230
up on the phone which is reading those

196
00:07:44,130 --> 00:07:49,360
virtual thighs and extract the the

197
00:07:47,230 --> 00:07:51,250
interrupt data so the interrupt data

198
00:07:49,360 --> 00:07:53,590
appears to the to<font color="#CCCCCC"> the app as a</font>

199
00:07:51,250 --> 00:07:55,660
<font color="#E5E5E5">continuous</font><font color="#CCCCCC"> stream of data</font><font color="#E5E5E5"> and to be able</font>

200
00:07:53,590 --> 00:07:57,460
to extract features for each word it

201
00:07:55,660 --> 00:07:59,620
first has to tell to<font color="#E5E5E5"> be able to figure</font>

202
00:07:57,460 --> 00:08:02,440
<font color="#E5E5E5">out where the words are in this</font>

203
00:07:59,620 --> 00:08:04,600
continuous stream of data so to do this

204
00:08:02,440 --> 00:08:08,140
we reuse the hardware interim count

205
00:08:04,600 --> 00:08:10,180
interrupt counter so this picture here

206
00:08:08,140 --> 00:08:12,370
<font color="#E5E5E5">shows you the intercounty for the</font>

207
00:08:10,180 --> 00:08:14,410
sentence<font color="#E5E5E5"> I trust you here on the right</font>

208
00:08:12,370 --> 00:08:16,720
you notice the zero speed events I

209
00:08:14,410 --> 00:08:19,090
talked<font color="#CCCCCC"> about earlier for the letter of</font>

210
00:08:16,720 --> 00:08:21,669
<font color="#E5E5E5">the word you but something that's more</font>

211
00:08:19,090 --> 00:08:24,070
striking in this picture is the<font color="#E5E5E5"> zero</font>

212
00:08:21,669 --> 00:08:26,289
speed events in between words and those

213
00:08:24,070 --> 00:08:27,730
in fact correspond to the time when<font color="#CCCCCC"> the</font>

214
00:08:26,290 --> 00:08:31,720
finger is lifting off<font color="#CCCCCC"> the screen by the</font>

215
00:08:27,730 --> 00:08:33,669
the user in between words<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> because</font>

216
00:08:31,720 --> 00:08:37,270
those<font color="#E5E5E5"> zero speed events last much longer</font>

217
00:08:33,669 --> 00:08:39,579
we<font color="#CCCCCC"> can use them to identify exactly</font>

218
00:08:37,270 --> 00:08:41,140
where the words start an end in the

219
00:08:39,580 --> 00:08:43,840
stream of continuous data that we get

220
00:08:41,140 --> 00:08:47,439
and this works<font color="#CCCCCC"> real reliable</font><font color="#E5E5E5"> in practice</font>

221
00:08:43,840 --> 00:08:50,350
virtually hundred percent<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> time so</font>

222
00:08:47,440 --> 00:08:53,080
<font color="#E5E5E5">to summarize in terms of features we use</font>

223
00:08:50,350 --> 00:08:54,490
the length of the words the position of

224
00:08:53,080 --> 00:08:57,310
<font color="#CCCCCC">the zero speed events</font>

225
00:08:54,490 --> 00:08:59,470
the one for<font color="#CCCCCC"> the letters</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the speed of</font>

226
00:08:57,310 --> 00:09:01,329
the<font color="#E5E5E5"> software hardware sorry the software</font>

227
00:08:59,470 --> 00:09:03,730
interrupt counter also known as the

228
00:09:01,330 --> 00:09:06,990
<font color="#E5E5E5">context switch and then we feed these to</font>

229
00:09:03,730 --> 00:09:08,740
a classifier so in terms<font color="#E5E5E5"> of classifier</font>

230
00:09:06,990 --> 00:09:11,290
so we've looked at traditional

231
00:09:08,740 --> 00:09:13,810
classifiers such as an SVM which take as

232
00:09:11,290 --> 00:09:15,550
input a single vector features

233
00:09:13,810 --> 00:09:18,819
corresponding to a word and<font color="#CCCCCC"> then</font>

234
00:09:15,550 --> 00:09:20,589
predicts another word this so we looked

235
00:09:18,820 --> 00:09:24,010
at the SVM it worked well for some users

236
00:09:20,589 --> 00:09:26,140
and quite poorly for for other users so

237
00:09:24,010 --> 00:09:28,300
we try<font color="#CCCCCC"> to look</font><font color="#E5E5E5"> for other possible</font>

238
00:09:26,140 --> 00:09:29,860
classifiers other thing that we<font color="#E5E5E5"> want you</font>

239
00:09:28,300 --> 00:09:32,050
<font color="#E5E5E5">to be able to model is the fact that a</font>

240
00:09:29,860 --> 00:09:34,390
word can't actually be predicted in

241
00:09:32,050 --> 00:09:36,279
isolation a word belongs to a sentence

242
00:09:34,390 --> 00:09:37,870
it belongs to<font color="#CCCCCC"> a context and so we want</font>

243
00:09:36,279 --> 00:09:39,939
<font color="#CCCCCC">it to be able to model the fact that a</font>

244
00:09:37,870 --> 00:09:42,910
word depends on all the previous words

245
00:09:39,940 --> 00:09:46,089
that come before it in a sentence so

246
00:09:42,910 --> 00:09:48,100
<font color="#CCCCCC">hmmm is one step in this direction but</font>

247
00:09:46,089 --> 00:09:51,339
it can only model the dependency between

248
00:09:48,100 --> 00:09:52,990
a word and its predecessor so in fact it

249
00:09:51,339 --> 00:09:54,820
turns out that we<font color="#E5E5E5"> can do better than hmm</font>

250
00:09:52,990 --> 00:09:56,830
and we can we can use<font color="#E5E5E5"> so-called</font>

251
00:09:54,820 --> 00:09:58,120
recurrent neural networks these are

252
00:09:56,830 --> 00:10:00,880
neural networks which have been

253
00:09:58,120 --> 00:10:03,430
extensively studied by the NLP community

254
00:10:00,880 --> 00:10:06,130
and those can in fact model the

255
00:10:03,430 --> 00:10:08,649
dependency of the word and all its

256
00:10:06,130 --> 00:10:11,230
predecessors in practice what that means

257
00:10:08,649 --> 00:10:13,149
is<font color="#CCCCCC"> that instead of like for an svn</font>

258
00:10:11,230 --> 00:10:14,500
instead of giving as input a single

259
00:10:13,149 --> 00:10:16,800
vector we're going to feed the iron n

260
00:10:14,500 --> 00:10:19,600
with a list of vectors where each vector

261
00:10:16,800 --> 00:10:21,339
corresponds to a word in a sentence<font color="#CCCCCC"> ok</font>

262
00:10:19,600 --> 00:10:22,870
so i won't get into<font color="#E5E5E5"> the detail here but</font>

263
00:10:21,339 --> 00:10:26,470
if you're<font color="#CCCCCC"> interested it's it's in the</font>

264
00:10:22,870 --> 00:10:29,860
paper so in terms of evaluation we

265
00:10:26,470 --> 00:10:31,870
looked at the google keyboard we had a

266
00:10:29,860 --> 00:10:34,570
real chat corpus of 10,000 English

267
00:10:31,870 --> 00:10:37,750
sentences which was collected by another

268
00:10:34,570 --> 00:10:39,490
group of<font color="#E5E5E5"> researchers back in 2006 within</font>

269
00:10:37,750 --> 00:10:42,430
this corpus we limited ourselves to the

270
00:10:39,490 --> 00:10:45,010
most common 200 words the reason<font color="#CCCCCC"> for</font>

271
00:10:42,430 --> 00:10:47,250
<font color="#E5E5E5">this will become clear in a minute for</font>

272
00:10:45,010 --> 00:10:50,470
training we had each of our participants

273
00:10:47,250 --> 00:10:52,810
enter a series of words in an

274
00:10:50,470 --> 00:10:55,209
<font color="#CCCCCC">application that we developed each word</font>

275
00:10:52,810 --> 00:10:57,250
occurred roughly<font color="#E5E5E5"> 20 times and so in</font>

276
00:10:55,209 --> 00:10:59,649
total each participant entered roughly

277
00:10:57,250 --> 00:11:01,060
4,000 words it took each of our

278
00:10:59,649 --> 00:11:03,339
<font color="#CCCCCC">participants between a week and a month</font>

279
00:11:01,060 --> 00:11:05,020
to complete the task so it was so

280
00:11:03,339 --> 00:11:07,390
<font color="#CCCCCC">time-consuming for them that this</font>

281
00:11:05,020 --> 00:11:08,079
explains why<font color="#CCCCCC"> we limited ourselves to the</font>

282
00:11:07,390 --> 00:11:13,360
most common to

283
00:11:08,080 --> 00:11:14,340
<font color="#E5E5E5">Edwards during the study and so</font>

284
00:11:13,360 --> 00:11:16,930
something<font color="#E5E5E5"> that I didn't mention</font>

285
00:11:14,340 --> 00:11:19,450
explicitly but which<font color="#CCCCCC"> is true for</font><font color="#E5E5E5"> usually</font>

286
00:11:16,930 --> 00:11:21,969
all kinds of classifiers<font color="#CCCCCC"> is that when</font>

287
00:11:19,450 --> 00:11:23,590
during<font color="#E5E5E5"> the prediction phase the RNN the</font>

288
00:11:21,970 --> 00:11:25,210
recurrent neural network doesn't just

289
00:11:23,590 --> 00:11:27,310
give us you know the word that it

290
00:11:25,210 --> 00:11:30,250
predicts instead it it gives<font color="#E5E5E5"> us a list</font>

291
00:11:27,310 --> 00:11:33,939
of the most likely words that the the

292
00:11:30,250 --> 00:11:35,230
user has<font color="#CCCCCC"> entered okay so the</font><font color="#E5E5E5"> word that</font>

293
00:11:33,940 --> 00:11:36,910
appears in the first position is the

294
00:11:35,230 --> 00:11:39,760
most likely the one<font color="#E5E5E5"> in second position</font>

295
00:11:36,910 --> 00:11:41,319
is the second most likely<font color="#CCCCCC"> and so on so</font>

296
00:11:39,760 --> 00:11:43,870
on this graph what you show<font color="#E5E5E5"> what you see</font>

297
00:11:41,320 --> 00:11:45,460
is the<font color="#E5E5E5"> prediction accuracy for for</font>

298
00:11:43,870 --> 00:11:48,610
single word for a single word prediction

299
00:11:45,460 --> 00:11:50,680
the first bar here essentially tells us

300
00:11:48,610 --> 00:11:52,600
that roughly thirty four thirty four

301
00:11:50,680 --> 00:11:55,479
percent of the time the correct word

302
00:11:52,600 --> 00:11:58,300
entered by the user appears in first

303
00:11:55,480 --> 00:12:01,450
position in<font color="#CCCCCC"> the list that the RNN has a</font>

304
00:11:58,300 --> 00:12:03,490
put and then ten percent of the time the

305
00:12:01,450 --> 00:12:05,530
correct word appears roughly in a

306
00:12:03,490 --> 00:12:09,430
piercing second position in the list<font color="#E5E5E5"> and</font>

307
00:12:05,530 --> 00:12:12,370
so on<font color="#E5E5E5"> and so forth as part of our</font>

308
00:12:09,430 --> 00:12:15,760
evaluation we also looked<font color="#CCCCCC"> at trying to</font>

309
00:12:12,370 --> 00:12:18,160
relent if I users that post messages

310
00:12:15,760 --> 00:12:20,740
anonymously on messaging board so

311
00:12:18,160 --> 00:12:23,589
there's this<font color="#E5E5E5"> app</font><font color="#CCCCCC"> Kodiak which frankly is</font>

312
00:12:20,740 --> 00:12:24,880
<font color="#CCCCCC">issues</font><font color="#E5E5E5"> quite a</font><font color="#CCCCCC"> lot in the US and it</font>

313
00:12:23,590 --> 00:12:26,860
allows users to post messages

314
00:12:24,880 --> 00:12:29,950
anonymously on a messaging ball on a

315
00:12:26,860 --> 00:12:31,120
messaging board and by anonymous it just

316
00:12:29,950 --> 00:12:33,910
means that there<font color="#E5E5E5"> is no</font><font color="#CCCCCC"> user name or</font>

317
00:12:31,120 --> 00:12:37,360
pseudonym assoc associated with the<font color="#CCCCCC"> the</font>

318
00:12:33,910 --> 00:12:39,280
post and then other UK accusers can read

319
00:12:37,360 --> 00:12:41,070
those messages so long as they are

320
00:12:39,280 --> 00:12:43,120
physically in the vicinity<font color="#E5E5E5"> of the center</font>

321
00:12:41,070 --> 00:12:45,190
<font color="#CCCCCC">okay but they can't tell who posted</font>

322
00:12:43,120 --> 00:12:48,040
which message because of the lack of

323
00:12:45,190 --> 00:12:51,370
<font color="#CCCCCC">username and things like that</font><font color="#E5E5E5"> so what we</font>

324
00:12:48,040 --> 00:12:53,589
try to do here is<font color="#E5E5E5"> trying to react if I</font>

325
00:12:51,370 --> 00:12:56,920
which sentence was typed by which user

326
00:12:53,590 --> 00:12:59,140
and I repeat<font color="#E5E5E5"> myself but we as</font><font color="#CCCCCC"> we're</font>

327
00:12:56,920 --> 00:13:00,660
still assuming that the every user has

328
00:12:59,140 --> 00:13:05,110
this curious app installed on the device

329
00:13:00,660 --> 00:13:07,150
<font color="#E5E5E5">okay so I can't go into</font><font color="#CCCCCC"> the details on</font>

330
00:13:05,110 --> 00:13:08,950
how we get from<font color="#CCCCCC"> the Ireland prediction</font>

331
00:13:07,150 --> 00:13:11,560
all the way down to how weary identify

332
00:13:08,950 --> 00:13:14,020
users but I want<font color="#E5E5E5"> to give you an overview</font>

333
00:13:11,560 --> 00:13:15,969
<font color="#E5E5E5">of how well we can rent if I users in</font>

334
00:13:14,020 --> 00:13:19,300
practice with the techniques that<font color="#E5E5E5"> we</font>

335
00:13:15,970 --> 00:13:21,939
described earlier so this line here the

336
00:13:19,300 --> 00:13:26,049
blue line at the bottom corresponds to

337
00:13:21,939 --> 00:13:27,929
a a set of 35 sentences and the point

338
00:13:26,049 --> 00:13:32,199
right here in the<font color="#CCCCCC"> middle corresponds to</font>

339
00:13:27,929 --> 00:13:34,899
sentences of length<font color="#E5E5E5"> 3</font><font color="#CCCCCC"> okay so for this</font>

340
00:13:32,199 --> 00:13:36,459
scenario we can roughly we can relent if

341
00:13:34,899 --> 00:13:38,619
I users eighty eighty percent of<font color="#E5E5E5"> the</font>

342
00:13:36,459 --> 00:13:41,348
time now said otherwise we can rectify

343
00:13:38,619 --> 00:13:44,079
eighty percent<font color="#E5E5E5"> of the users as the</font>

344
00:13:41,349 --> 00:13:45,519
number<font color="#E5E5E5"> of sentences decreases so as the</font>

345
00:13:44,079 --> 00:13:47,228
number<font color="#CCCCCC"> of sentences post on the</font>

346
00:13:45,519 --> 00:13:50,559
messaging board decreases the

347
00:13:47,229 --> 00:13:54,249
predictions<font color="#CCCCCC"> improved and so for a set of</font>

348
00:13:50,559 --> 00:13:56,978
<font color="#E5E5E5">ten ten sentences we can read n tify</font>

349
00:13:54,249 --> 00:13:59,829
roughly ninety three percent of users

350
00:13:56,979 --> 00:14:02,289
and then as you<font color="#CCCCCC"> move towards the right</font>

351
00:13:59,829 --> 00:14:04,628
side of the<font color="#E5E5E5"> graph the the size of the</font>

352
00:14:02,289 --> 00:14:07,269
sentences grow bigger and the

353
00:14:04,629 --> 00:14:08,829
predictions also improved and<font color="#E5E5E5"> this is</font>

354
00:14:07,269 --> 00:14:10,599
<font color="#E5E5E5">kind of intuitive because the more words</font>

355
00:14:08,829 --> 00:14:11,829
you have in a sentence<font color="#E5E5E5"> essentially the</font>

356
00:14:10,599 --> 00:14:14,619
more data you have<font color="#E5E5E5"> the more information</font>

357
00:14:11,829 --> 00:14:19,478
you get and therefore the easier it gets

358
00:14:14,619 --> 00:14:21,339
to relent if I users so to wrap up so

359
00:14:19,479 --> 00:14:22,839
what we<font color="#E5E5E5"> did in this work is we try to</font>

360
00:14:21,339 --> 00:14:25,419
show that hardware and software

361
00:14:22,839 --> 00:14:27,759
interrupts do correlate to watch users

362
00:14:25,419 --> 00:14:30,369
type on the device and more importantly

363
00:14:27,759 --> 00:14:33,039
that global virtual files do enable new

364
00:14:30,369 --> 00:14:35,799
side channels we think we could improve

365
00:14:33,039 --> 00:14:38,019
<font color="#E5E5E5">the results if we had more data to train</font>

366
00:14:35,799 --> 00:14:40,209
the RNN with and in<font color="#E5E5E5"> terms of future</font>

367
00:14:38,019 --> 00:14:43,599
directions it might be possible to reuse

368
00:14:40,209 --> 00:14:45,539
<font color="#CCCCCC">the hardware software side channel to</font>

369
00:14:43,599 --> 00:14:48,009
attack more traditional keyboards and

370
00:14:45,539 --> 00:14:50,859
more<font color="#CCCCCC"> generally might be also</font><font color="#E5E5E5"> possible to</font>

371
00:14:48,009 --> 00:14:55,059
try to infer what people do on their

372
00:14:50,859 --> 00:14:58,229
phone using this new side channel and

373
00:14:55,059 --> 00:14:58,228
that's all thank

