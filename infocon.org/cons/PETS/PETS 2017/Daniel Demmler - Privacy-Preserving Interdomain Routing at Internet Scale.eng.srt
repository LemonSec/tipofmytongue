1
00:00:00,000 --> 00:00:03,899
Daniel dimmler and he'll be<font color="#CCCCCC"> talking</font>

2
00:00:02,009 --> 00:00:12,059
about<font color="#E5E5E5"> privacy-preserving</font><font color="#CCCCCC"> inter-domain</font>

3
00:00:03,899 --> 00:00:12,928
routing at internet scale<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> here</font>

4
00:00:12,059 --> 00:00:15,268
we<font color="#CCCCCC"> go</font>

5
00:00:12,929 --> 00:00:17,940
good morning everyone<font color="#CCCCCC"> thanks for</font><font color="#E5E5E5"> showing</font>

6
00:00:15,269 --> 00:00:19,380
up<font color="#CCCCCC"> so early in case</font><font color="#E5E5E5"> you're here for the</font>

7
00:00:17,940 --> 00:00:20,699
<font color="#E5E5E5">anonymous</font><font color="#CCCCCC"> communication session you're</font>

8
00:00:19,380 --> 00:00:22,320
in the<font color="#E5E5E5"> right</font><font color="#CCCCCC"> room in case</font><font color="#E5E5E5"> you want to go</font>

9
00:00:20,699 --> 00:00:24,180
to the<font color="#CCCCCC"> MPC station you can just stay</font>

10
00:00:22,320 --> 00:00:27,599
because<font color="#E5E5E5"> this talk will also contain MPC</font>

11
00:00:24,180 --> 00:00:28,970
so<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> welcome my</font><font color="#E5E5E5"> name</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> Daniel this</font>

12
00:00:27,599 --> 00:00:30,900
is joint work with<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of guys from</font>

13
00:00:28,970 --> 00:00:34,829
<font color="#E5E5E5">Cornell Tech University of Jerusalem</font>

14
00:00:30,900 --> 00:00:35,870
tear down stud<font color="#E5E5E5"> and the University of</font>

15
00:00:34,829 --> 00:00:39,149
<font color="#E5E5E5">California Berkeley</font>

16
00:00:35,870 --> 00:00:41,640
so before I start<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> topic a short</font>

17
00:00:39,149 --> 00:00:44,040
disclaimer<font color="#CCCCCC"> I wasn't charged</font><font color="#E5E5E5"> for the</font>

18
00:00:41,640 --> 00:00:46,440
<font color="#E5E5E5">privacy-preserving part of this work so</font>

19
00:00:44,040 --> 00:00:47,879
in case you know something<font color="#CCCCCC"> about inter</font>

20
00:00:46,440 --> 00:00:50,640
<font color="#CCCCCC">domain routing you probably know more</font>

21
00:00:47,879 --> 00:00:53,190
<font color="#CCCCCC">about BGP than I do so please excuse me</font>

22
00:00:50,640 --> 00:00:55,530
<font color="#E5E5E5">if the terminology is</font><font color="#CCCCCC"> not 100%</font><font color="#E5E5E5"> on spot</font>

23
00:00:53,190 --> 00:00:57,899
but my co-authors reassured me that

24
00:00:55,530 --> 00:01:02,460
everything what we did<font color="#E5E5E5"> should work out</font>

25
00:00:57,899 --> 00:01:04,739
so yeah I have no<font color="#E5E5E5"> idea what I'm doing</font>

26
00:01:02,460 --> 00:01:07,979
what is<font color="#CCCCCC"> BGP like the layman's</font>

27
00:01:04,739 --> 00:01:10,290
explanation of what I understand about

28
00:01:07,979 --> 00:01:12,179
is you<font color="#E5E5E5"> have a network nodes are</font>

29
00:01:10,290 --> 00:01:14,340
<font color="#CCCCCC">connected and you want to add something</font>

30
00:01:12,180 --> 00:01:17,490
to<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and you what you want to find out</font>

31
00:01:14,340 --> 00:01:19,020
is<font color="#E5E5E5"> how to get to this node</font><font color="#CCCCCC"> that got</font>

32
00:01:17,490 --> 00:01:21,449
added<font color="#CCCCCC"> to the network or</font><font color="#E5E5E5"> something that's</font>

33
00:01:19,020 --> 00:01:23,429
a<font color="#E5E5E5"> policy change it changed so you want</font>

34
00:01:21,450 --> 00:01:25,979
to<font color="#E5E5E5"> figure out routes to a new node or</font>

35
00:01:23,430 --> 00:01:31,530
routes to a node where the topology<font color="#E5E5E5"> has</font>

36
00:01:25,979 --> 00:01:34,590
changed compute all the routes there's a

37
00:01:31,530 --> 00:01:37,770
problem<font color="#E5E5E5"> with it namely convergence so</font>

38
00:01:34,590 --> 00:01:39,540
that means since<font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> is decentralized</font><font color="#E5E5E5"> it</font>

39
00:01:37,770 --> 00:01:42,840
takes<font color="#E5E5E5"> in the order of minutes until</font>

40
00:01:39,540 --> 00:01:45,299
<font color="#CCCCCC">these routes</font><font color="#E5E5E5"> are computed</font><font color="#CCCCCC"> sometimes</font>

41
00:01:42,840 --> 00:01:47,369
there are loops and routes toggle back

42
00:01:45,299 --> 00:01:49,350
and<font color="#E5E5E5"> forth and also there's privacy</font>

43
00:01:47,369 --> 00:01:51,649
issues so<font color="#E5E5E5"> there are works that</font><font color="#CCCCCC"> have</font>

44
00:01:49,350 --> 00:01:54,419
<font color="#E5E5E5">figured out</font><font color="#CCCCCC"> that you can determine</font>

45
00:01:51,649 --> 00:01:55,649
information about you can determine

46
00:01:54,420 --> 00:01:57,570
something<font color="#E5E5E5"> about confidential business</font>

47
00:01:55,649 --> 00:02:00,210
information<font color="#E5E5E5"> but</font><font color="#CCCCCC"> just looking at how</font>

48
00:01:57,570 --> 00:02:03,860
these routes<font color="#E5E5E5"> are computed so these are</font>

49
00:02:00,210 --> 00:02:06,030
issues<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> try to solve by basically</font>

50
00:02:03,860 --> 00:02:08,520
centralizing everything to some extent

51
00:02:06,030 --> 00:02:10,229
and then<font color="#E5E5E5"> throwing SPC on it in order to</font>

52
00:02:08,520 --> 00:02:13,900
solve the privacy issues that arise with

53
00:02:10,229 --> 00:02:16,950
that solution<font color="#CCCCCC"> the idea is</font><font color="#E5E5E5"> not entirely</font>

54
00:02:13,900 --> 00:02:19,450
there has been<font color="#CCCCCC"> work</font><font color="#E5E5E5"> like five years ago</font>

55
00:02:16,950 --> 00:02:20,890
<font color="#CCCCCC">the problem is that this work did not</font>

56
00:02:19,450 --> 00:02:22,179
<font color="#E5E5E5">really scale back then they</font><font color="#CCCCCC"> only</font>

57
00:02:20,890 --> 00:02:23,798
considered<font color="#CCCCCC"> the toy example with a</font>

58
00:02:22,180 --> 00:02:25,599
handful of nodes and<font color="#E5E5E5"> the runtimes were</font>

59
00:02:23,799 --> 00:02:28,599
in the order of<font color="#E5E5E5"> seconds already so</font>

60
00:02:25,599 --> 00:02:31,089
scaling<font color="#E5E5E5"> this to an actually practical</font>

61
00:02:28,599 --> 00:02:34,750
size is what we try to<font color="#E5E5E5"> do and</font><font color="#CCCCCC"> I think we</font>

62
00:02:31,090 --> 00:02:35,829
achieved<font color="#E5E5E5"> in this work so I guess we can</font>

63
00:02:34,750 --> 00:02:37,239
say that this<font color="#CCCCCC"> is a real-world</font>

64
00:02:35,829 --> 00:02:40,480
<font color="#CCCCCC">application of secure multi-party</font>

65
00:02:37,239 --> 00:02:43,180
computation<font color="#CCCCCC"> we did this even at internet</font>

66
00:02:40,480 --> 00:02:45,940
scale which means<font color="#E5E5E5"> we looked at 56,000</font>

67
00:02:43,180 --> 00:02:49,510
autonomous systems with<font color="#E5E5E5"> more than 230</font>

68
00:02:45,940 --> 00:02:51,510
<font color="#E5E5E5">thousand connections between them and we</font>

69
00:02:49,510 --> 00:02:54,190
offer two solutions<font color="#E5E5E5"> that</font><font color="#CCCCCC"> protect either</font>

70
00:02:51,510 --> 00:02:56,349
the relations<font color="#CCCCCC"> between the nodes meaning</font>

71
00:02:54,190 --> 00:02:58,090
if a note is<font color="#E5E5E5"> a provider or a customer so</font>

72
00:02:56,349 --> 00:03:00,548
who's paying whom or if they have a

73
00:02:58,090 --> 00:03:03,329
peering relationship for the second

74
00:03:00,549 --> 00:03:06,099
solution<font color="#E5E5E5"> that we offer is that we can</font>

75
00:03:03,329 --> 00:03:08,230
protect the expert policies of the nodes

76
00:03:06,099 --> 00:03:10,629
and more specifically we<font color="#CCCCCC"> can also hide</font>

77
00:03:08,230 --> 00:03:13,179
notes can specify preferences that<font color="#E5E5E5"> they</font>

78
00:03:10,629 --> 00:03:16,108
<font color="#CCCCCC">have for other nodes and</font><font color="#E5E5E5"> we can protect</font>

79
00:03:13,180 --> 00:03:18,879
<font color="#E5E5E5">this</font><font color="#CCCCCC"> information so we don't know the</font>

80
00:03:16,109 --> 00:03:20,410
more fine granular relation between the

81
00:03:18,879 --> 00:03:21,879
nodes not<font color="#E5E5E5"> just if it's a customer or</font>

82
00:03:20,410 --> 00:03:25,980
provider relationship but<font color="#CCCCCC"> also the</font>

83
00:03:21,879 --> 00:03:25,980
<font color="#CCCCCC">preferences</font><font color="#E5E5E5"> that they</font><font color="#CCCCCC"> have between them</font>

84
00:03:26,250 --> 00:03:32,819
<font color="#CCCCCC">the technique that we use to solve this</font>

85
00:03:29,349 --> 00:03:35,230
problem<font color="#CCCCCC"> is secure two-party computation</font>

86
00:03:32,819 --> 00:03:37,899
which<font color="#E5E5E5"> dates back to the 80s so it's</font>

87
00:03:35,230 --> 00:03:39,879
basically ancient in terms of IT systems

88
00:03:37,900 --> 00:03:42,760
<font color="#CCCCCC">but</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> so ancient in terms of</font>

89
00:03:39,879 --> 00:03:45,638
<font color="#CCCCCC">cryptography but it took a</font><font color="#E5E5E5"> while to take</font>

90
00:03:42,760 --> 00:03:47,260
off and to<font color="#CCCCCC"> become practical</font><font color="#E5E5E5"> the nice</font>

91
00:03:45,639 --> 00:03:49,180
<font color="#E5E5E5">thing about is everything that is</font>

92
00:03:47,260 --> 00:03:51,548
efficiently computable can be turned

93
00:03:49,180 --> 00:03:53,109
<font color="#E5E5E5">into a secure or a private version by</font>

94
00:03:51,549 --> 00:03:55,510
using<font color="#CCCCCC"> security of particular secure</font>

95
00:03:53,109 --> 00:03:57,220
multi-party computation<font color="#E5E5E5"> in this case we</font>

96
00:03:55,510 --> 00:03:58,629
restrict ourselves to two parties<font color="#E5E5E5"> simply</font>

97
00:03:57,220 --> 00:04:02,109
<font color="#E5E5E5">because it's much more efficient than</font>

98
00:03:58,629 --> 00:04:04,209
scaling this<font color="#CCCCCC"> 2n parties</font><font color="#E5E5E5"> and I have to</font>

99
00:04:02,109 --> 00:04:06,370
say that this is<font color="#E5E5E5"> only</font><font color="#CCCCCC"> secured against</font>

100
00:04:04,209 --> 00:04:09,879
semi honest adversaries<font color="#E5E5E5"> but their access</font>

101
00:04:06,370 --> 00:04:11,949
solutions to basically simply turn it

102
00:04:09,879 --> 00:04:13,720
into a maliciously secure protocol by

103
00:04:11,949 --> 00:04:16,120
adding a little<font color="#E5E5E5"> bit of overhead to</font><font color="#CCCCCC"> it so</font>

104
00:04:13,720 --> 00:04:17,380
<font color="#E5E5E5">this is more of a proof of concept than</font>

105
00:04:16,120 --> 00:04:19,060
an actual<font color="#CCCCCC"> solution that you would want</font>

106
00:04:17,380 --> 00:04:21,699
in practice<font color="#E5E5E5"> depending on your trust</font>

107
00:04:19,060 --> 00:04:23,830
<font color="#E5E5E5">model as well how this works really</font>

108
00:04:21,699 --> 00:04:26,260
briefly is you have two parties they put

109
00:04:23,830 --> 00:04:27,700
their private inputs into<font color="#CCCCCC"> SM PC</font><font color="#E5E5E5"> and then</font>

110
00:04:26,260 --> 00:04:29,590
they can<font color="#CCCCCC"> basically compute any</font>

111
00:04:27,700 --> 00:04:32,050
function that<font color="#E5E5E5"> they want and then they</font>

112
00:04:29,590 --> 00:04:34,030
receive an output without<font color="#E5E5E5"> learning about</font>

113
00:04:32,050 --> 00:04:35,890
the<font color="#E5E5E5"> others parties private input this is</font>

114
00:04:34,030 --> 00:04:37,270
<font color="#E5E5E5">the very</font><font color="#CCCCCC"> high-level idea that I can tell</font>

115
00:04:35,890 --> 00:04:43,000
<font color="#CCCCCC">you about</font><font color="#E5E5E5"> it without going into too much</font>

116
00:04:37,270 --> 00:04:44,109
detail<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> how do we actually build the</font>

117
00:04:43,000 --> 00:04:46,080
system in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> achieve</font>

118
00:04:44,110 --> 00:04:48,640
<font color="#CCCCCC">privacy-preserving inter-domain routing</font>

119
00:04:46,080 --> 00:04:49,659
<font color="#CCCCCC">as</font><font color="#E5E5E5"> I said before we have a centralized</font>

120
00:04:48,640 --> 00:04:51,820
approach<font color="#E5E5E5"> where we have these two</font>

121
00:04:49,660 --> 00:04:54,310
<font color="#CCCCCC">computation nodes in the middle</font><font color="#E5E5E5"> those</font>

122
00:04:51,820 --> 00:04:56,020
are the<font color="#CCCCCC"> npc parties so it's kind of an</font>

123
00:04:54,310 --> 00:04:57,670
outsourcing paradigm that<font color="#CCCCCC"> we follow</font>

124
00:04:56,020 --> 00:04:59,740
where all of the nodes<font color="#E5E5E5"> so all of the</font>

125
00:04:57,670 --> 00:05:01,720
<font color="#E5E5E5">autonomous systems so you could share</font>

126
00:04:59,740 --> 00:05:03,190
their inputs<font color="#E5E5E5"> so that means</font><font color="#CCCCCC"> their</font>

127
00:05:01,720 --> 00:05:05,410
relationships or their preferences

128
00:05:03,190 --> 00:05:07,330
<font color="#CCCCCC">depending on the approach to these two</font>

129
00:05:05,410 --> 00:05:09,520
computational nodes<font color="#E5E5E5"> they do the</font>

130
00:05:07,330 --> 00:05:11,289
computation which is really heavy<font color="#CCCCCC"> so the</font>

131
00:05:09,520 --> 00:05:13,510
the boldero in the middle actually is

132
00:05:11,290 --> 00:05:16,420
the<font color="#CCCCCC"> S NPC part which takes in the order</font>

133
00:05:13,510 --> 00:05:18,400
<font color="#E5E5E5">of seconds and these thin lines are just</font>

134
00:05:16,420 --> 00:05:22,510
<font color="#E5E5E5">a few bytes where the inputs are sent</font>

135
00:05:18,400 --> 00:05:23,969
and the outputs are received<font color="#CCCCCC"> yeah</font>

136
00:05:22,510 --> 00:05:28,240
<font color="#E5E5E5">exactly</font>

137
00:05:23,970 --> 00:05:32,500
so the first algorithm<font color="#E5E5E5"> that we offer is</font>

138
00:05:28,240 --> 00:05:34,360
this<font color="#E5E5E5"> relationship based routing where as</font>

139
00:05:32,500 --> 00:05:36,670
I said<font color="#CCCCCC"> before node</font><font color="#E5E5E5"> can be either</font>

140
00:05:34,360 --> 00:05:39,430
customers and providers so<font color="#CCCCCC"> ones</font><font color="#E5E5E5"> paying</font>

141
00:05:36,670 --> 00:05:40,930
the other<font color="#CCCCCC"> two router traffic or they</font><font color="#E5E5E5"> can</font>

142
00:05:39,430 --> 00:05:43,720
have a peering relationship where they

143
00:05:40,930 --> 00:05:45,900
<font color="#E5E5E5">essentially agreed upon</font><font color="#CCCCCC"> routing their</font>

144
00:05:43,720 --> 00:05:48,670
traffic for free between the two of them

145
00:05:45,900 --> 00:05:50,280
so this<font color="#E5E5E5"> is not routing in the sense of</font>

146
00:05:48,670 --> 00:05:52,870
finding a shortest<font color="#CCCCCC"> path in the network</font>

147
00:05:50,280 --> 00:05:54,489
<font color="#CCCCCC">but instead it's economically driven so</font>

148
00:05:52,870 --> 00:05:56,980
what you want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> optimize is the amount</font>

149
00:05:54,490 --> 00:05:58,990
<font color="#E5E5E5">of money</font><font color="#CCCCCC"> that you pay</font><font color="#E5E5E5"> by routing traffic</font>

150
00:05:56,980 --> 00:06:00,930
<font color="#E5E5E5">or the amount of money</font><font color="#CCCCCC"> that you receive</font>

151
00:05:58,990 --> 00:06:03,220
by acting as<font color="#E5E5E5"> a provider</font><font color="#CCCCCC"> to other nodes</font>

152
00:06:00,930 --> 00:06:06,460
<font color="#E5E5E5">so the very</font><font color="#CCCCCC"> high-level description</font><font color="#E5E5E5"> of</font>

153
00:06:03,220 --> 00:06:08,710
this<font color="#CCCCCC"> algorithm is you get as input the</font>

154
00:06:06,460 --> 00:06:10,270
<font color="#CCCCCC">topology so this is assumed to</font><font color="#E5E5E5"> be public</font>

155
00:06:08,710 --> 00:06:13,210
so a node which node is<font color="#CCCCCC"> connected to</font>

156
00:06:10,270 --> 00:06:15,400
which other nodes<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> get this</font>

157
00:06:13,210 --> 00:06:17,109
target as<font color="#E5E5E5"> the was the the one that I</font>

158
00:06:15,400 --> 00:06:19,239
showed you<font color="#E5E5E5"> before</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> added to the</font>

159
00:06:17,110 --> 00:06:21,550
topology<font color="#E5E5E5"> to the network but</font><font color="#CCCCCC"> what it's</font>

160
00:06:19,240 --> 00:06:23,710
private<font color="#E5E5E5"> so what the computational nodes</font>

161
00:06:21,550 --> 00:06:26,500
don't<font color="#E5E5E5"> know are the relations between the</font>

162
00:06:23,710 --> 00:06:29,620
nodes then<font color="#CCCCCC"> you attend iterations for</font>

163
00:06:26,500 --> 00:06:31,660
customers<font color="#E5E5E5"> in order to</font><font color="#CCCCCC"> propagate the new</font>

164
00:06:29,620 --> 00:06:33,310
node<font color="#E5E5E5"> to the nodes that can reach it</font>

165
00:06:31,660 --> 00:06:35,290
<font color="#CCCCCC">through one of</font><font color="#E5E5E5"> their customers</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font>

166
00:06:33,310 --> 00:06:37,720
one iteration<font color="#E5E5E5"> for peers ten iterations</font>

167
00:06:35,290 --> 00:06:39,850
for providers<font color="#E5E5E5"> and as a private output</font>

168
00:06:37,720 --> 00:06:41,230
<font color="#E5E5E5">every autonomous system gets the next</font>

169
00:06:39,850 --> 00:06:41,680
<font color="#CCCCCC">sub to the target</font><font color="#E5E5E5"> I'll show you an</font>

170
00:06:41,230 --> 00:06:43,960
<font color="#CCCCCC">example</font>

171
00:06:41,680 --> 00:06:44,770
right now now this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> notation that</font>

172
00:06:43,960 --> 00:06:47,469
we'll be using

173
00:06:44,770 --> 00:06:49,479
so providers are<font color="#CCCCCC"> on top customers are in</font>

174
00:06:47,470 --> 00:06:52,120
<font color="#E5E5E5">the bottom there's a directed edge for</font>

175
00:06:49,479 --> 00:06:54,310
<font color="#E5E5E5">who's providing the service and the</font>

176
00:06:52,120 --> 00:06:56,050
peers<font color="#E5E5E5"> are on one</font><font color="#CCCCCC"> level like horizontally</font>

177
00:06:54,310 --> 00:06:57,600
<font color="#CCCCCC">because they don't pay each other so</font>

178
00:06:56,050 --> 00:06:59,770
they are equally likely

179
00:06:57,600 --> 00:07:02,620
this is just for visualizing the

180
00:06:59,770 --> 00:07:04,570
relations between them<font color="#E5E5E5"> this is to say</font>

181
00:07:02,620 --> 00:07:07,930
never<font color="#CCCCCC"> again I showed</font><font color="#E5E5E5"> it before some</font>

182
00:07:04,570 --> 00:07:11,259
connections<font color="#E5E5E5"> between the nodes and node</font>

183
00:07:07,930 --> 00:07:13,120
number<font color="#E5E5E5"> 16 is added to the network</font><font color="#CCCCCC"> so now</font>

184
00:07:11,259 --> 00:07:19,240
all the other<font color="#E5E5E5"> nodes want to find out how</font>

185
00:07:13,120 --> 00:07:21,789
they<font color="#CCCCCC"> can reach node number 16 in the</font>

186
00:07:19,240 --> 00:07:23,889
most efficient economically efficient

187
00:07:21,789 --> 00:07:27,070
way so<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first step of the algorithm</font>

188
00:07:23,889 --> 00:07:29,139
is the nodes that<font color="#CCCCCC"> can reach</font><font color="#E5E5E5"> 16 through</font>

189
00:07:27,070 --> 00:07:31,360
their customers or<font color="#E5E5E5"> 16 is a direct</font>

190
00:07:29,139 --> 00:07:33,849
customer so first<font color="#CCCCCC"> 9 gets added then 3</font>

191
00:07:31,360 --> 00:07:35,289
and 4 and<font color="#E5E5E5"> then 1 and 0 and we would do</font>

192
00:07:33,849 --> 00:07:36,849
<font color="#E5E5E5">that</font><font color="#CCCCCC"> seven more iterations</font><font color="#E5E5E5"> but in this</font>

193
00:07:35,289 --> 00:07:40,090
case there<font color="#CCCCCC"> are no more</font><font color="#E5E5E5"> nodes that can be</font>

194
00:07:36,849 --> 00:07:43,259
added<font color="#E5E5E5"> through customer relations the</font>

195
00:07:40,090 --> 00:07:47,799
next step are the<font color="#E5E5E5"> peers that</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> added</font>

196
00:07:43,259 --> 00:07:49,360
so<font color="#E5E5E5"> no 2</font><font color="#CCCCCC"> +</font><font color="#E5E5E5"> 8 can reach it through</font><font color="#CCCCCC"> a</font>

197
00:07:47,800 --> 00:07:53,050
peering relationship and then basically

198
00:07:49,360 --> 00:07:55,030
<font color="#E5E5E5">all the other nodes are added</font><font color="#CCCCCC"> that can</font>

199
00:07:53,050 --> 00:07:56,229
reach<font color="#E5E5E5"> 16 through one of their providers</font>

200
00:07:55,030 --> 00:08:01,570
so they<font color="#E5E5E5"> actually have to</font><font color="#CCCCCC"> pay money to</font>

201
00:07:56,229 --> 00:08:03,280
road traffic<font color="#CCCCCC"> to</font><font color="#E5E5E5"> 16</font><font color="#CCCCCC"> we can do this as I</font>

202
00:08:01,570 --> 00:08:06,159
said with secure multi-party computation

203
00:08:03,280 --> 00:08:07,659
so no one<font color="#CCCCCC"> none of the computation nodes</font>

204
00:08:06,159 --> 00:08:11,469
<font color="#E5E5E5">learned about these relationships while</font>

205
00:08:07,659 --> 00:08:13,810
computing the the best<font color="#E5E5E5"> route for 16 the</font>

206
00:08:11,470 --> 00:08:17,349
<font color="#E5E5E5">other algorithm that we also implemented</font>

207
00:08:13,810 --> 00:08:20,620
<font color="#CCCCCC">is a preference</font><font color="#E5E5E5"> based routing scheme</font>

208
00:08:17,349 --> 00:08:22,840
where not only<font color="#CCCCCC"> the we don't</font><font color="#E5E5E5"> only have</font>

209
00:08:20,620 --> 00:08:24,550
<font color="#E5E5E5">this sort of binary relationships you're</font>

210
00:08:22,840 --> 00:08:27,758
either<font color="#E5E5E5"> a customer</font><font color="#CCCCCC"> a provider</font><font color="#E5E5E5"> or Europe</font>

211
00:08:24,550 --> 00:08:30,220
<font color="#E5E5E5">here but you can have a preference which</font>

212
00:08:27,759 --> 00:08:31,810
<font color="#E5E5E5">is like a n bit value I think in our</font>

213
00:08:30,220 --> 00:08:34,209
experiments we<font color="#E5E5E5"> use like</font><font color="#CCCCCC"> 4 bits because</font>

214
00:08:31,810 --> 00:08:38,740
<font color="#E5E5E5">we assume this is expressive enough to</font>

215
00:08:34,208 --> 00:08:40,659
cover<font color="#E5E5E5"> everything and you can you</font><font color="#CCCCCC"> can</font>

216
00:08:38,740 --> 00:08:44,560
describe how much basically you like

217
00:08:40,659 --> 00:08:47,020
your your<font color="#E5E5E5"> neighboring ASA's and by that</font>

218
00:08:44,560 --> 00:08:48,699
<font color="#CCCCCC">you can also capture this peer or</font>

219
00:08:47,020 --> 00:08:50,380
provider relationship by just giving<font color="#CCCCCC"> a</font>

220
00:08:48,700 --> 00:08:51,910
very low preference to providers because

221
00:08:50,380 --> 00:08:53,439
you want<font color="#E5E5E5"> to avoid paying money to them</font>

222
00:08:51,910 --> 00:08:54,400
if you can take a route that<font color="#E5E5E5"> goes</font>

223
00:08:53,440 --> 00:08:58,870
<font color="#E5E5E5">through a customer</font>

224
00:08:54,400 --> 00:09:00,280
write the algorithm description is<font color="#CCCCCC"> just</font>

225
00:08:58,870 --> 00:09:03,280
is a bit simpler<font color="#CCCCCC"> because</font><font color="#E5E5E5"> we don't have</font>

226
00:09:00,280 --> 00:09:06,130
<font color="#E5E5E5">to distinguish</font><font color="#CCCCCC"> between</font><font color="#E5E5E5"> the relations we</font>

227
00:09:03,280 --> 00:09:08,620
just<font color="#CCCCCC"> four for every iteration</font><font color="#E5E5E5"> try to</font>

228
00:09:06,130 --> 00:09:10,510
find a neighbor<font color="#E5E5E5"> that can already reach</font>

229
00:09:08,620 --> 00:09:12,400
the target and then<font color="#CCCCCC"> we just</font><font color="#E5E5E5"> try to</font>

230
00:09:10,510 --> 00:09:13,870
minimize the one with or we<font color="#E5E5E5"> try to</font>

231
00:09:12,400 --> 00:09:16,120
<font color="#CCCCCC">maximize the one with the</font><font color="#E5E5E5"> highest</font>

232
00:09:13,870 --> 00:09:18,460
preference<font color="#E5E5E5"> that we have and we</font>

233
00:09:16,120 --> 00:09:21,280
determined that as in<font color="#E5E5E5"> the example before</font>

234
00:09:18,460 --> 00:09:23,530
<font color="#E5E5E5">21 iterations is just enough for</font><font color="#CCCCCC"> every a</font>

235
00:09:21,280 --> 00:09:25,810
<font color="#CCCCCC">s to reach any other a s on the network</font>

236
00:09:23,530 --> 00:09:28,000
so this is these<font color="#E5E5E5"> numbers we verified</font>

237
00:09:25,810 --> 00:09:29,829
them on the<font color="#E5E5E5"> data sets that we had and</font>

238
00:09:28,000 --> 00:09:31,360
<font color="#CCCCCC">that should work out in practice</font><font color="#E5E5E5"> the</font>

239
00:09:29,830 --> 00:09:34,060
output is the same<font color="#E5E5E5"> as before every now</font>

240
00:09:31,360 --> 00:09:37,840
it gets the<font color="#E5E5E5"> next table</font><font color="#CCCCCC"> in order to reach</font>

241
00:09:34,060 --> 00:09:39,819
the target<font color="#CCCCCC"> node in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> to make this</font>

242
00:09:37,840 --> 00:09:41,980
<font color="#E5E5E5">thing fly and in order to achieve back</font>

243
00:09:39,820 --> 00:09:44,590
to the<font color="#E5E5E5"> run time we had to build a</font>

244
00:09:41,980 --> 00:09:46,330
boolean circuit which is<font color="#E5E5E5"> the way to go</font>

245
00:09:44,590 --> 00:09:49,480
if<font color="#CCCCCC"> you want to implement things without</font>

246
00:09:46,330 --> 00:09:51,310
<font color="#E5E5E5">simply see these days some</font>

247
00:09:49,480 --> 00:09:53,620
technicalities on how we achieve<font color="#CCCCCC"> that</font>

248
00:09:51,310 --> 00:09:56,170
the domain<font color="#CCCCCC"> trig</font><font color="#E5E5E5"> are basically</font><font color="#CCCCCC"> Sindhi</font>

249
00:09:53,620 --> 00:09:59,850
operations which means<font color="#E5E5E5"> you do one of the</font>

250
00:09:56,170 --> 00:10:03,339
operation on multiple bits in parallel

251
00:09:59,850 --> 00:10:05,680
<font color="#CCCCCC">it's a trick that comes from from CPUs</font>

252
00:10:03,340 --> 00:10:06,700
and you can sort<font color="#CCCCCC"> of apply that to SM</font><font color="#E5E5E5"> PC</font>

253
00:10:05,680 --> 00:10:09,550
as well<font color="#CCCCCC"> and you save a lot of</font>

254
00:10:06,700 --> 00:10:11,170
<font color="#E5E5E5">pre-processing</font><font color="#CCCCCC"> and also we applied a lot</font>

255
00:10:09,550 --> 00:10:12,880
<font color="#E5E5E5">of parallelism on a circuit level which</font>

256
00:10:11,170 --> 00:10:15,550
is<font color="#E5E5E5"> not the same as parallelism in your</font>

257
00:10:12,880 --> 00:10:19,810
CPU but in the way how you design this

258
00:10:15,550 --> 00:10:21,040
<font color="#E5E5E5">boolean circuit one very important</font><font color="#CCCCCC"> thing</font>

259
00:10:19,810 --> 00:10:23,680
that we need<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> are efficient</font>

260
00:10:21,040 --> 00:10:25,270
multiplexers<font color="#CCCCCC"> because we use those all</font>

261
00:10:23,680 --> 00:10:28,089
<font color="#CCCCCC">over the circuit because</font><font color="#E5E5E5"> we're heavily</font>

262
00:10:25,270 --> 00:10:31,360
<font color="#E5E5E5">distinguished between taking one way or</font>

263
00:10:28,090 --> 00:10:34,840
<font color="#CCCCCC">the other and building</font><font color="#E5E5E5"> everything as a</font>

264
00:10:31,360 --> 00:10:37,330
tree is also<font color="#E5E5E5"> part of how we achieve this</font>

265
00:10:34,840 --> 00:10:41,050
practical<font color="#CCCCCC"> runtimes</font><font color="#E5E5E5"> another</font><font color="#CCCCCC"> optimization</font>

266
00:10:37,330 --> 00:10:42,970
on top is that<font color="#CCCCCC"> we ignored stub nodes</font>

267
00:10:41,050 --> 00:10:46,420
<font color="#CCCCCC">stubbed</font><font color="#E5E5E5"> out our nodes that don't have</font>

268
00:10:42,970 --> 00:10:49,210
any<font color="#E5E5E5"> customers</font><font color="#CCCCCC"> so we can just</font><font color="#E5E5E5"> assume that</font>

269
00:10:46,420 --> 00:10:52,599
those those receive the<font color="#E5E5E5"> second X of</font>

270
00:10:49,210 --> 00:10:54,130
information<font color="#E5E5E5"> by their providers so we can</font>

271
00:10:52,600 --> 00:10:55,810
leave<font color="#E5E5E5"> them out</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> computation</font>

272
00:10:54,130 --> 00:10:59,310
because there is not no room for

273
00:10:55,810 --> 00:11:01,750
<font color="#E5E5E5">optimization by computing a</font><font color="#CCCCCC"> road anyway</font>

274
00:10:59,310 --> 00:11:03,849
<font color="#CCCCCC">some numbers that we extracted from the</font>

275
00:11:01,750 --> 00:11:06,460
<font color="#CCCCCC">Qaeda dataset which is an amazing</font>

276
00:11:03,850 --> 00:11:07,720
collection<font color="#E5E5E5"> of information</font><font color="#CCCCCC"> on the</font>

277
00:11:06,460 --> 00:11:10,959
autonomous systems on the intern

278
00:11:07,720 --> 00:11:13,930
since 1998<font color="#CCCCCC"> and as you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> the number</font>

279
00:11:10,959 --> 00:11:15,369
of<font color="#E5E5E5"> asses which is the top left graph is</font>

280
00:11:13,930 --> 00:11:18,008
basically<font color="#CCCCCC"> they nearly</font><font color="#E5E5E5"> dropped growing</font>

281
00:11:15,370 --> 00:11:20,199
except for this<font color="#E5E5E5"> tiny bump up there the</font>

282
00:11:18,009 --> 00:11:22,560
number<font color="#E5E5E5"> of edges is what you can expect</font>

283
00:11:20,199 --> 00:11:25,628
drawing<font color="#E5E5E5"> exponentially or quadratically</font>

284
00:11:22,560 --> 00:11:28,300
<font color="#CCCCCC">looks like</font><font color="#E5E5E5"> Bitcoin</font><font color="#CCCCCC"> and what's also</font>

285
00:11:25,629 --> 00:11:30,550
important for<font color="#E5E5E5"> our run</font><font color="#CCCCCC"> time is the the</font>

286
00:11:28,300 --> 00:11:33,099
<font color="#E5E5E5">maximum degree this means the</font><font color="#CCCCCC"> node that</font>

287
00:11:30,550 --> 00:11:35,170
<font color="#CCCCCC">has the highest number of neighbors that</font>

288
00:11:33,100 --> 00:11:37,149
<font color="#CCCCCC">are connected to it</font><font color="#E5E5E5"> because we have to</font>

289
00:11:35,170 --> 00:11:39,430
sort<font color="#E5E5E5"> of mask this fact so this</font>

290
00:11:37,149 --> 00:11:41,879
determines a big part of<font color="#E5E5E5"> our run time</font>

291
00:11:39,430 --> 00:11:43,959
<font color="#CCCCCC">actually and this is</font><font color="#E5E5E5"> also growing</font><font color="#CCCCCC"> to</font>

292
00:11:41,879 --> 00:11:46,720
<font color="#CCCCCC">give you some numbers and</font><font color="#E5E5E5"> these are</font>

293
00:11:43,959 --> 00:11:49,779
taken<font color="#CCCCCC"> straight from</font><font color="#E5E5E5"> the paper</font><font color="#CCCCCC"> if you</font>

294
00:11:46,720 --> 00:11:51,519
look at the brown graph on the<font color="#CCCCCC"> right I</font>

295
00:11:49,779 --> 00:11:53,560
think that's the most<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> one</font>

296
00:11:51,519 --> 00:11:56,139
this is the<font color="#E5E5E5"> reference based algorithm</font>

297
00:11:53,560 --> 00:11:58,029
that I explained<font color="#E5E5E5"> to you without stub</font>

298
00:11:56,139 --> 00:11:59,980
<font color="#CCCCCC">notes and</font><font color="#E5E5E5"> for the most recent topology</font>

299
00:11:58,029 --> 00:12:03,100
<font color="#CCCCCC">that we benchmarked we're in the order</font>

300
00:11:59,980 --> 00:12:05,920
<font color="#CCCCCC">of let's say</font><font color="#E5E5E5"> 10 seconds to compute the</font>

301
00:12:03,100 --> 00:12:09,579
<font color="#E5E5E5">next sub for all the nodes on this</font>

302
00:12:05,920 --> 00:12:11,050
network<font color="#CCCCCC"> - adding</font><font color="#E5E5E5"> one node the right</font>

303
00:12:09,579 --> 00:12:13,000
thing is the online<font color="#E5E5E5"> face I should say</font>

304
00:12:11,050 --> 00:12:14,920
that<font color="#E5E5E5"> this is the face</font><font color="#CCCCCC"> that you actually</font>

305
00:12:13,000 --> 00:12:16,480
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to compute the</font><font color="#E5E5E5"> set</font><font color="#CCCCCC"> of runtimes can</font>

306
00:12:14,920 --> 00:12:20,889
be pre computed and<font color="#E5E5E5"> you just store them</font>

307
00:12:16,480 --> 00:12:22,300
on<font color="#E5E5E5"> a disk and essentially you can forget</font>

308
00:12:20,889 --> 00:12:23,620
<font color="#CCCCCC">about</font><font color="#E5E5E5"> it because</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> just number</font>

309
00:12:22,300 --> 00:12:24,959
crunching<font color="#E5E5E5"> yet you do overnight in a</font>

310
00:12:23,620 --> 00:12:27,339
server<font color="#E5E5E5"> that's in the corner somewhere</font>

311
00:12:24,959 --> 00:12:28,779
<font color="#E5E5E5">the the critical time is</font><font color="#CCCCCC"> actually the</font>

312
00:12:27,339 --> 00:12:31,300
online<font color="#CCCCCC"> phase so this is in the order of</font>

313
00:12:28,779 --> 00:12:33,850
<font color="#E5E5E5">10 seconds and this is just too damn</font>

314
00:12:31,300 --> 00:12:37,420
high so what can<font color="#CCCCCC"> we do about that</font><font color="#E5E5E5"> well</font>

315
00:12:33,850 --> 00:12:39,639
we<font color="#E5E5E5"> apply it on a more local scale</font><font color="#CCCCCC"> we</font>

316
00:12:37,420 --> 00:12:41,559
thought<font color="#CCCCCC"> that applying this on a regional</font>

317
00:12:39,639 --> 00:12:45,959
<font color="#CCCCCC">level where we use rir these are</font>

318
00:12:41,559 --> 00:12:45,959
regional internet registries<font color="#E5E5E5"> I believe</font>

319
00:12:46,680 --> 00:12:50,050
this<font color="#E5E5E5"> just minimizes the number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> nodes</font>

320
00:12:48,939 --> 00:12:51,490
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you look at and by that</font><font color="#E5E5E5"> you</font>

321
00:12:50,050 --> 00:12:54,609
automatically achieve a much better run

322
00:12:51,490 --> 00:12:57,069
time and<font color="#CCCCCC"> if you look at the times that</font><font color="#E5E5E5"> I</font>

323
00:12:54,610 --> 00:12:58,360
<font color="#CCCCCC">depict here</font><font color="#E5E5E5"> the the online phase let's</font>

324
00:12:57,069 --> 00:13:01,750
say for air in which is the North

325
00:12:58,360 --> 00:13:04,029
American<font color="#E5E5E5"> internet registrar is in the</font>

326
00:13:01,750 --> 00:13:05,949
order of less<font color="#CCCCCC"> than a second for</font><font color="#E5E5E5"> the same</font>

327
00:13:04,029 --> 00:13:10,089
thing so<font color="#CCCCCC"> this preference</font><font color="#E5E5E5"> based algorithm</font>

328
00:13:05,949 --> 00:13:14,050
<font color="#E5E5E5">without looking at the stub nodes and we</font>

329
00:13:10,089 --> 00:13:16,029
would consider this a practical runtime

330
00:13:14,050 --> 00:13:19,389
for what we<font color="#E5E5E5"> are trying</font><font color="#CCCCCC"> to achieve</font><font color="#E5E5E5"> and</font>

331
00:13:16,029 --> 00:13:20,520
<font color="#CCCCCC">then</font><font color="#E5E5E5"> you just need to figure</font><font color="#CCCCCC"> out or do</font>

332
00:13:19,389 --> 00:13:22,080
the<font color="#E5E5E5"> same thing at</font><font color="#CCCCCC"> the</font>

333
00:13:20,520 --> 00:13:27,020
borders between<font color="#CCCCCC"> two networks</font><font color="#E5E5E5"> and</font>

334
00:13:22,080 --> 00:13:29,100
translate this at the<font color="#CCCCCC"> nose with this I</font>

335
00:13:27,020 --> 00:13:31,470
<font color="#E5E5E5">think I'm already at the end of the talk</font>

336
00:13:29,100 --> 00:13:33,600
<font color="#CCCCCC">we have some</font><font color="#E5E5E5"> open</font><font color="#CCCCCC"> questions so we were</font>

337
00:13:31,470 --> 00:13:36,690
<font color="#E5E5E5">thinking about what could we do in order</font>

338
00:13:33,600 --> 00:13:38,490
<font color="#CCCCCC">to so right now we're assuming the</font>

339
00:13:36,690 --> 00:13:40,830
topology<font color="#E5E5E5"> to be public but what could we</font>

340
00:13:38,490 --> 00:13:42,270
do to<font color="#CCCCCC"> actually hide the</font><font color="#E5E5E5"> topology of the</font>

341
00:13:40,830 --> 00:13:43,890
network to some extent I mean<font color="#CCCCCC"> this is</font>

342
00:13:42,270 --> 00:13:45,720
sort<font color="#E5E5E5"> of public knowledge</font><font color="#CCCCCC"> on the one hand</font>

343
00:13:43,890 --> 00:13:48,000
but<font color="#E5E5E5"> maybe you have parts of the network</font>

344
00:13:45,720 --> 00:13:49,740
<font color="#CCCCCC">where you</font><font color="#E5E5E5"> don't want to know I don't</font>

345
00:13:48,000 --> 00:13:51,030
<font color="#E5E5E5">want anyone</font><font color="#CCCCCC"> else</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> know the topology so</font>

346
00:13:49,740 --> 00:13:53,400
we were<font color="#E5E5E5"> thinking about how we could</font>

347
00:13:51,030 --> 00:13:56,339
<font color="#E5E5E5">achieve hiding it but the solutions</font><font color="#CCCCCC"> that</font>

348
00:13:53,400 --> 00:13:58,170
we had were far<font color="#CCCCCC"> too complex in order to</font>

349
00:13:56,340 --> 00:13:59,880
<font color="#E5E5E5">achieve practical</font><font color="#CCCCCC"> runtimes</font>

350
00:13:58,170 --> 00:14:01,860
you could do this on a<font color="#E5E5E5"> very</font><font color="#CCCCCC"> local scale</font>

351
00:13:59,880 --> 00:14:03,270
maybe<font color="#E5E5E5"> that would work but we haven't</font>

352
00:14:01,860 --> 00:14:06,180
<font color="#E5E5E5">really figured out an efficient way</font><font color="#CCCCCC"> of</font>

353
00:14:03,270 --> 00:14:09,360
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> that and also actually deploying</font>

354
00:14:06,180 --> 00:14:11,189
this is of course<font color="#E5E5E5"> not exactly trivial</font>

355
00:14:09,360 --> 00:14:12,720
<font color="#CCCCCC">because you would need to break how the</font>

356
00:14:11,190 --> 00:14:14,520
internet works<font color="#CCCCCC"> today and people are</font>

357
00:14:12,720 --> 00:14:16,770
<font color="#E5E5E5">really reluctant to even tweak it a</font>

358
00:14:14,520 --> 00:14:21,540
little bit<font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> aware that this is</font>

359
00:14:16,770 --> 00:14:23,189
<font color="#E5E5E5">not exactly easy to to to get</font><font color="#CCCCCC"> to fly in</font>

360
00:14:21,540 --> 00:14:25,770
practice but if you have<font color="#CCCCCC"> ideas</font><font color="#E5E5E5"> on how we</font>

361
00:14:23,190 --> 00:14:27,330
could<font color="#E5E5E5"> achieve</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we would be able to</font>

362
00:14:25,770 --> 00:14:29,189
talk<font color="#E5E5E5"> about that and to sum everything</font><font color="#CCCCCC"> up</font>

363
00:14:27,330 --> 00:14:30,630
<font color="#E5E5E5">we believe this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> real-world</font>

364
00:14:29,190 --> 00:14:33,660
application<font color="#CCCCCC"> of secure multi-party</font>

365
00:14:30,630 --> 00:14:36,030
computation<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we put in a lot of</font><font color="#E5E5E5"> work</font>

366
00:14:33,660 --> 00:14:38,660
there into the algorithms and into

367
00:14:36,030 --> 00:14:42,780
actually implementing them in order<font color="#E5E5E5"> to</font>

368
00:14:38,660 --> 00:14:43,920
make<font color="#CCCCCC"> this thing</font><font color="#E5E5E5"> sort of fly yeah and</font>

369
00:14:42,780 --> 00:14:45,180
with<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'd like to thank</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> for your</font>

370
00:14:43,920 --> 00:14:46,790
<font color="#CCCCCC">attention and</font><font color="#E5E5E5"> in case you have any</font>

371
00:14:45,180 --> 00:14:51,880
<font color="#E5E5E5">questions I'm here</font>

372
00:14:46,790 --> 00:14:51,880
[Applause]

