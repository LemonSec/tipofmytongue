1
00:00:03,230 --> 00:00:10,639
<font color="#CCCCCC">suppose of continuing from today</font><font color="#E5E5E5"> and</font>

2
00:00:06,779 --> 00:00:10,639
talk about<font color="#CCCCCC"> Crusaders</font>

3
00:00:18,590 --> 00:00:24,869
thank you for introduction the good news

4
00:00:21,869 --> 00:00:27,359
is it's the last<font color="#E5E5E5"> part of this session so</font>

5
00:00:24,869 --> 00:00:29,189
we can take a break after<font color="#CCCCCC"> all today I'm</font>

6
00:00:27,359 --> 00:00:32,430
gonna talk<font color="#CCCCCC"> about our recent funding</font>

7
00:00:29,189 --> 00:00:35,309
<font color="#E5E5E5">recent findings on how to perform secure</font>

8
00:00:32,430 --> 00:00:38,629
civil matching at<font color="#CCCCCC"> real-world</font><font color="#E5E5E5"> skills</font>

9
00:00:35,309 --> 00:00:41,669
this is joint work<font color="#E5E5E5"> with my</font><font color="#CCCCCC"> adviser</font>

10
00:00:38,629 --> 00:00:43,320
professor couch on fire and profits or

11
00:00:41,670 --> 00:00:45,930
start early and shiner from<font color="#CCCCCC"> two</font>

12
00:00:43,320 --> 00:00:48,059
<font color="#CCCCCC">Darmstadt dr. somewhere is also an</font>

13
00:00:45,930 --> 00:00:51,899
alumni<font color="#CCCCCC"> from a</font><font color="#E5E5E5"> group who currently works</font>

14
00:00:48,059 --> 00:00:53,730
<font color="#E5E5E5">in</font><font color="#CCCCCC"> Google this</font><font color="#E5E5E5"> is the outline of</font><font color="#CCCCCC"> my</font>

15
00:00:51,899 --> 00:00:56,610
presentation<font color="#E5E5E5"> first I'm going to talk</font>

16
00:00:53,730 --> 00:00:59,129
<font color="#CCCCCC">about what is a stable matching</font><font color="#E5E5E5"> followed</font>

17
00:00:56,610 --> 00:01:01,550
by a<font color="#E5E5E5"> visual example then I will talk</font>

18
00:00:59,129 --> 00:01:04,199
<font color="#CCCCCC">about why we need privacy in this task</font>

19
00:01:01,550 --> 00:01:06,240
<font color="#CCCCCC">then I will</font><font color="#E5E5E5"> talk about the</font><font color="#CCCCCC"> OHS garble</font>

20
00:01:04,199 --> 00:01:09,450
circuit vertical which we have<font color="#E5E5E5"> utilized</font>

21
00:01:06,240 --> 00:01:11,490
in our solution<font color="#CCCCCC"> and the majority of my</font>

22
00:01:09,450 --> 00:01:13,710
<font color="#CCCCCC">talk is dedicated to our two main</font>

23
00:01:11,490 --> 00:01:15,658
contributions<font color="#E5E5E5"> and the first one is</font>

24
00:01:13,710 --> 00:01:19,740
helping<font color="#CCCCCC"> your site circuit and the next</font>

25
00:01:15,659 --> 00:01:21,869
one<font color="#E5E5E5"> is thirdly termination technique</font><font color="#CCCCCC"> I</font>

26
00:01:19,740 --> 00:01:24,658
will compare the complexity of our

27
00:01:21,869 --> 00:01:27,090
<font color="#E5E5E5">computation with rewards and we have</font>

28
00:01:24,659 --> 00:01:31,049
done extensive<font color="#E5E5E5"> experimental results</font>

29
00:01:27,090 --> 00:01:32,970
which I've provided you<font color="#E5E5E5"> so a stable</font>

30
00:01:31,049 --> 00:01:35,369
matching<font color="#CCCCCC"> is the process of assigning the</font>

31
00:01:32,970 --> 00:01:37,380
<font color="#E5E5E5">members</font><font color="#CCCCCC"> of two groups</font><font color="#E5E5E5"> to each other</font><font color="#CCCCCC"> one</font>

32
00:01:35,369 --> 00:01:39,540
<font color="#E5E5E5">by one where each</font><font color="#CCCCCC"> person has the</font>

33
00:01:37,380 --> 00:01:42,780
preference list<font color="#CCCCCC"> this preference</font><font color="#E5E5E5"> list</font>

34
00:01:39,540 --> 00:01:45,299
shows how person values<font color="#E5E5E5"> each person of</font>

35
00:01:42,780 --> 00:01:48,110
the other group<font color="#CCCCCC"> the assignment</font><font color="#E5E5E5"> should</font>

36
00:01:45,299 --> 00:01:49,290
satisfy one condition and that<font color="#E5E5E5"> the</font>

37
00:01:48,110 --> 00:01:51,689
<font color="#CCCCCC">assignment</font>

38
00:01:49,290 --> 00:01:54,060
<font color="#E5E5E5">there should be no pair such that they</font>

39
00:01:51,689 --> 00:01:57,508
prefer each other over<font color="#E5E5E5"> than they are the</font>

40
00:01:54,060 --> 00:01:59,490
<font color="#E5E5E5">assigned partners</font><font color="#CCCCCC"> stable matching is</font>

41
00:01:57,509 --> 00:02:01,170
used in many<font color="#CCCCCC"> applications</font><font color="#E5E5E5"> for example in</font>

42
00:01:59,490 --> 00:02:03,420
national<font color="#CCCCCC"> resiliency matching program</font>

43
00:02:01,170 --> 00:02:06,600
<font color="#E5E5E5">where a group of medical students are</font>

44
00:02:03,420 --> 00:02:08,520
matched<font color="#CCCCCC"> to</font><font color="#E5E5E5"> residency programs civil</font>

45
00:02:06,600 --> 00:02:13,640
matching is also used in capital<font color="#CCCCCC"> markets</font>

46
00:02:08,520 --> 00:02:13,640
<font color="#E5E5E5">to sign consumers and suppliers</font>

47
00:02:13,930 --> 00:02:18,980
so it more fun<font color="#CCCCCC"> to describe</font><font color="#E5E5E5"> to matching</font>

48
00:02:17,180 --> 00:02:21,110
<font color="#CCCCCC">the</font><font color="#E5E5E5"> context of marriage so on the</font>

49
00:02:18,980 --> 00:02:23,720
<font color="#CCCCCC">left-hand side you</font><font color="#E5E5E5"> have group of boys</font>

50
00:02:21,110 --> 00:02:25,190
<font color="#CCCCCC">and on the right-hand side</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a</font>

51
00:02:23,720 --> 00:02:27,050
group<font color="#E5E5E5"> of girls</font>

52
00:02:25,190 --> 00:02:30,050
of course this<font color="#CCCCCC"> where each person has a</font>

53
00:02:27,050 --> 00:02:31,940
preference list<font color="#E5E5E5"> so if we assign the</font>

54
00:02:30,050 --> 00:02:34,280
member of these two<font color="#CCCCCC"> verbs to each other</font>

55
00:02:31,940 --> 00:02:37,280
in this order<font color="#CCCCCC"> it is not a</font><font color="#E5E5E5"> civil match</font>

56
00:02:34,280 --> 00:02:40,160
<font color="#E5E5E5">because of this link</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> you can see</font>

57
00:02:37,280 --> 00:02:42,380
Alice prefers Ryan<font color="#E5E5E5"> over</font><font color="#CCCCCC"> jack</font>

58
00:02:40,160 --> 00:02:44,480
<font color="#E5E5E5">they're already assigned partner based</font>

59
00:02:42,380 --> 00:02:48,400
on the preference list<font color="#E5E5E5"> and also Ryan</font>

60
00:02:44,480 --> 00:02:51,109
<font color="#E5E5E5">prefers Alice over sir he's currently</font>

61
00:02:48,400 --> 00:02:54,380
<font color="#CCCCCC">sign partner so this is not a stable</font>

62
00:02:51,110 --> 00:02:56,750
match however if you assign them in<font color="#E5E5E5"> this</font>

63
00:02:54,380 --> 00:02:58,579
<font color="#E5E5E5">order and there is no such pair that</font>

64
00:02:56,750 --> 00:03:02,060
violates the condition and<font color="#CCCCCC"> therefore</font>

65
00:02:58,580 --> 00:03:04,190
<font color="#CCCCCC">just tourists able match in the secure</font>

66
00:03:02,060 --> 00:03:06,230
stable<font color="#CCCCCC"> night setting</font><font color="#E5E5E5"> we want to perform</font>

67
00:03:04,190 --> 00:03:09,620
stable matching without revealing<font color="#E5E5E5"> each</font>

68
00:03:06,230 --> 00:03:11,299
<font color="#CCCCCC">party's preferences to any other part so</font>

69
00:03:09,620 --> 00:03:15,020
why is it important<font color="#CCCCCC"> picked</font><font color="#E5E5E5"> either</font>

70
00:03:11,300 --> 00:03:16,790
multiple answers first<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are</font>

71
00:03:15,020 --> 00:03:19,040
multiple studies that<font color="#E5E5E5"> show that if</font>

72
00:03:16,790 --> 00:03:21,799
<font color="#CCCCCC">assert if an individual knows the</font>

73
00:03:19,040 --> 00:03:24,200
<font color="#CCCCCC">preferences of</font><font color="#E5E5E5"> other people</font><font color="#CCCCCC"> he or she</font>

74
00:03:21,800 --> 00:03:26,650
can<font color="#CCCCCC"> manipulate the outcome in her</font><font color="#E5E5E5"> favor</font>

75
00:03:24,200 --> 00:03:29,660
<font color="#E5E5E5">by changing his own preference list</font>

76
00:03:26,650 --> 00:03:31,520
second in some scenarios<font color="#CCCCCC"> the data is</font>

77
00:03:29,660 --> 00:03:34,010
confidential by law so we need to

78
00:03:31,520 --> 00:03:37,730
<font color="#E5E5E5">respect that and the third reason is</font>

79
00:03:34,010 --> 00:03:41,320
that of course privacy no one likes to

80
00:03:37,730 --> 00:03:44,959
<font color="#CCCCCC">feel he or</font><font color="#E5E5E5"> she wasn't their first choice</font>

81
00:03:41,320 --> 00:03:47,750
<font color="#CCCCCC">we have used a</font><font color="#E5E5E5"> yellowjacket protocol the</font>

82
00:03:44,959 --> 00:03:49,580
GC protocol is a classic two-party

83
00:03:47,750 --> 00:03:53,870
secure function evaluation method

84
00:03:49,580 --> 00:03:56,989
introduced by Andrea in 1986<font color="#E5E5E5"> at a very</font>

85
00:03:53,870 --> 00:04:00,350
high level<font color="#E5E5E5"> GC emulates a trusted third</font>

86
00:03:56,989 --> 00:04:02,270
<font color="#E5E5E5">party to which two</font><font color="#CCCCCC"> parties three to</font>

87
00:04:00,350 --> 00:04:05,269
which two parties<font color="#CCCCCC"> can give their inputs</font>

88
00:04:02,270 --> 00:04:07,190
and receive the<font color="#E5E5E5"> results however this is</font>

89
00:04:05,270 --> 00:04:09,380
a<font color="#CCCCCC"> conceptual description and reality</font>

90
00:04:07,190 --> 00:04:13,910
there is<font color="#CCCCCC"> no</font><font color="#E5E5E5"> third party and the particle</font>

91
00:04:09,380 --> 00:04:15,739
is run between<font color="#E5E5E5"> two parties only a very</font>

92
00:04:13,910 --> 00:04:18,769
simplified explanation of the GC

93
00:04:15,739 --> 00:04:22,700
protocol is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> so it has three main</font>

94
00:04:18,769 --> 00:04:24,730
<font color="#E5E5E5">phases in the first phase</font><font color="#CCCCCC"> Bob has</font><font color="#E5E5E5"> to</font>

95
00:04:22,700 --> 00:04:27,460
<font color="#CCCCCC">describe the functionality as a</font>

96
00:04:24,730 --> 00:04:29,110
we inserted<font color="#E5E5E5"> between put cakes so here</font>

97
00:04:27,460 --> 00:04:33,219
the functionality would be the<font color="#E5E5E5"> stable</font>

98
00:04:29,110 --> 00:04:35,740
matching algorithm next he will assign

99
00:04:33,220 --> 00:04:38,770
<font color="#E5E5E5">random keys to each wire in the circuit</font>

100
00:04:35,740 --> 00:04:42,000
and for each gate he increased the

101
00:04:38,770 --> 00:04:46,719
<font color="#CCCCCC">output wire</font><font color="#E5E5E5"> using inputs were keys and</font>

102
00:04:42,000 --> 00:04:49,240
forms<font color="#CCCCCC"> called</font><font color="#E5E5E5"> garbled tables</font><font color="#CCCCCC"> in the</font>

103
00:04:46,720 --> 00:04:51,910
second phase<font color="#CCCCCC"> Alice received all garbled</font>

104
00:04:49,240 --> 00:04:54,970
tables together<font color="#E5E5E5"> with the keys</font>

105
00:04:51,910 --> 00:04:57,340
corresponding to her input<font color="#CCCCCC"> and in the</font>

106
00:04:54,970 --> 00:05:00,640
third phase<font color="#E5E5E5"> Alice's start decrypting</font>

107
00:04:57,340 --> 00:05:02,500
<font color="#E5E5E5">each gate one by one until she reaches</font>

108
00:05:00,640 --> 00:05:07,960
that true output<font color="#E5E5E5"> result of the</font>

109
00:05:02,500 --> 00:05:10,840
computation random<font color="#CCCCCC"> access is a very</font>

110
00:05:07,960 --> 00:05:12,700
<font color="#E5E5E5">costly operation in</font><font color="#CCCCCC"> GC because at the</font>

111
00:05:10,840 --> 00:05:16,390
<font color="#E5E5E5">same time we need to hide the</font><font color="#CCCCCC"> access</font>

112
00:05:12,700 --> 00:05:19,180
<font color="#E5E5E5">pattern the address and the data the</font>

113
00:05:16,390 --> 00:05:21,310
basic solution is to put a<font color="#CCCCCC"> multiplexer</font>

114
00:05:19,180 --> 00:05:24,370
inside the circuit that accesses<font color="#CCCCCC"> each</font>

115
00:05:21,310 --> 00:05:26,050
<font color="#E5E5E5">flip-flop and the control signals</font>

116
00:05:24,370 --> 00:05:28,630
amongst would be the<font color="#E5E5E5"> addressed output</font>

117
00:05:26,050 --> 00:05:31,540
would<font color="#E5E5E5"> be the data that we want but since</font>

118
00:05:28,630 --> 00:05:34,780
in GC we cannot escape<font color="#E5E5E5"> garbling and</font>

119
00:05:31,540 --> 00:05:38,350
evaluating<font color="#E5E5E5"> any</font><font color="#CCCCCC"> gates the access code for</font>

120
00:05:34,780 --> 00:05:40,539
single access is linear in<font color="#CCCCCC"> terms of the</font>

121
00:05:38,350 --> 00:05:43,180
number of gates<font color="#E5E5E5"> or simply the memory</font>

122
00:05:40,540 --> 00:05:45,520
size which is very<font color="#E5E5E5"> costly the more</font>

123
00:05:43,180 --> 00:05:48,820
complex<font color="#E5E5E5"> but more efficient</font><font color="#CCCCCC"> solution</font>

124
00:05:45,520 --> 00:05:52,570
<font color="#CCCCCC">oblivious ram which has the best</font><font color="#E5E5E5"> one has</font>

125
00:05:48,820 --> 00:05:54,820
<font color="#CCCCCC">logarithmic axis complexity but due to</font>

126
00:05:52,570 --> 00:05:57,460
the high initialization cost of the or M

127
00:05:54,820 --> 00:05:59,920
it doesn't<font color="#E5E5E5"> out there for months</font><font color="#CCCCCC"> up to a</font>

128
00:05:57,460 --> 00:06:04,210
certain<font color="#E5E5E5"> point</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is mirror size and</font>

129
00:05:59,920 --> 00:06:07,450
this<font color="#CCCCCC"> is the access code this</font><font color="#E5E5E5"> is the</font>

130
00:06:04,210 --> 00:06:09,580
<font color="#CCCCCC">global flow of our end-to-end</font><font color="#E5E5E5"> system it</font>

131
00:06:07,450 --> 00:06:11,710
starts<font color="#E5E5E5"> with</font><font color="#CCCCCC"> describing a</font><font color="#E5E5E5"> functionality</font>

132
00:06:09,580 --> 00:06:13,719
as a<font color="#E5E5E5"> boolean circuit so we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> written</font>

133
00:06:11,710 --> 00:06:15,909
the<font color="#E5E5E5"> dual matching algorithm in very</font>

134
00:06:13,720 --> 00:06:18,100
<font color="#E5E5E5">large and hardware description language</font>

135
00:06:15,910 --> 00:06:21,220
then<font color="#E5E5E5"> we have said that into a hardware</font>

136
00:06:18,100 --> 00:06:23,290
synthesis tool to get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> necklace then</font>

137
00:06:21,220 --> 00:06:26,230
we topologically sort in athletes to

138
00:06:23,290 --> 00:06:29,260
avoid any deadlock<font color="#E5E5E5"> and at the end we</font>

139
00:06:26,230 --> 00:06:32,410
have<font color="#CCCCCC"> a sorted nathless of</font><font color="#E5E5E5"> the function</font>

140
00:06:29,260 --> 00:06:35,050
this<font color="#CCCCCC"> is an input to the GC protocol that</font>

141
00:06:32,410 --> 00:06:36,300
<font color="#E5E5E5">is run by</font><font color="#CCCCCC"> two servers</font><font color="#E5E5E5"> one acting has</font>

142
00:06:35,050 --> 00:06:39,330
<font color="#E5E5E5">gurgler and</font>

143
00:06:36,300 --> 00:06:42,120
acting<font color="#E5E5E5"> as evaluators these stages here</font>

144
00:06:39,330 --> 00:06:46,140
<font color="#E5E5E5">are offline and they have to performed</font>

145
00:06:42,120 --> 00:06:48,750
only once<font color="#CCCCCC"> and these building blocks here</font>

146
00:06:46,140 --> 00:06:50,880
are the description of the GC<font color="#CCCCCC"> portico</font>

147
00:06:48,750 --> 00:06:53,100
<font color="#E5E5E5">that I discussed before garbling</font>

148
00:06:50,880 --> 00:06:55,980
communication<font color="#E5E5E5"> evaluating and merging the</font>

149
00:06:53,100 --> 00:06:57,960
<font color="#E5E5E5">results so each party that</font><font color="#CCCCCC"> want to want</font>

150
00:06:55,980 --> 00:07:00,120
<font color="#CCCCCC">to participate</font><font color="#E5E5E5"> in this table matching</font>

151
00:06:57,960 --> 00:07:01,799
has to send<font color="#E5E5E5"> two different encryptions</font>

152
00:07:00,120 --> 00:07:04,680
<font color="#E5E5E5">which is the exhaust share of their</font>

153
00:07:01,800 --> 00:07:07,140
<font color="#CCCCCC">inputs</font><font color="#E5E5E5"> preference leads to two servers</font>

154
00:07:04,680 --> 00:07:09,270
then two servers<font color="#E5E5E5"> run the GC protocol</font>

155
00:07:07,140 --> 00:07:11,550
using these sorted methods<font color="#E5E5E5"> and at the</font>

156
00:07:09,270 --> 00:07:16,409
end they merge the<font color="#E5E5E5"> results who outputs</font>

157
00:07:11,550 --> 00:07:18,990
this table<font color="#CCCCCC"> matchless Gail she plays</font><font color="#E5E5E5"> the</font>

158
00:07:16,410 --> 00:07:21,420
other is an algorithm<font color="#CCCCCC"> for finding the</font>

159
00:07:18,990 --> 00:07:24,060
stable match<font color="#CCCCCC"> as</font><font color="#E5E5E5"> you can see it's a</font>

160
00:07:21,420 --> 00:07:27,000
<font color="#E5E5E5">iterative algorithm and at each</font>

161
00:07:24,060 --> 00:07:30,330
iteration<font color="#CCCCCC"> a free man who is not already</font>

162
00:07:27,000 --> 00:07:33,450
<font color="#E5E5E5">assigned to in partner</font><font color="#CCCCCC"> what so called</font>

163
00:07:30,330 --> 00:07:36,409
proposes to a woman<font color="#E5E5E5"> that he prefers the</font>

164
00:07:33,450 --> 00:07:40,530
<font color="#E5E5E5">most but he has not yet proposed to and</font>

165
00:07:36,410 --> 00:07:43,020
the algorithm continues until the match

166
00:07:40,530 --> 00:07:45,809
list is a stable in the worst case

167
00:07:43,020 --> 00:07:48,270
scenario<font color="#CCCCCC"> we need to run this loop</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> n</font>

168
00:07:45,810 --> 00:07:51,210
<font color="#CCCCCC">s squared</font><font color="#E5E5E5"> because it has the N squared</font>

169
00:07:48,270 --> 00:07:53,520
complexity but here finding a free man

170
00:07:51,210 --> 00:07:56,760
is not trivial<font color="#CCCCCC"> in the GC protocol</font>

171
00:07:53,520 --> 00:07:59,849
because<font color="#E5E5E5"> we need to linearly scan all the</font>

172
00:07:56,760 --> 00:08:02,909
<font color="#E5E5E5">memories to find a free one so here we</font>

173
00:07:59,850 --> 00:08:05,040
have a<font color="#E5E5E5"> specific module in the circuit</font><font color="#CCCCCC"> to</font>

174
00:08:02,910 --> 00:08:08,940
perform this task which I'll describe

175
00:08:05,040 --> 00:08:10,530
<font color="#CCCCCC">later as I mentioned the worst case</font>

176
00:08:08,940 --> 00:08:13,440
scenario for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> algorithm is n s</font>

177
00:08:10,530 --> 00:08:17,340
squared but due to the invalid proposals

178
00:08:13,440 --> 00:08:19,350
and that<font color="#CCCCCC"> we have in the GC protocol we</font>

179
00:08:17,340 --> 00:08:21,239
<font color="#E5E5E5">actually have even worse than worst</font>

180
00:08:19,350 --> 00:08:24,450
mathematical<font color="#E5E5E5"> worst case of</font><font color="#CCCCCC"> the algorithm</font>

181
00:08:21,240 --> 00:08:26,400
when run in the GC protocol<font color="#CCCCCC"> we have also</font>

182
00:08:24,450 --> 00:08:28,500
done some is that<font color="#CCCCCC"> it's a statistical</font>

183
00:08:26,400 --> 00:08:31,020
analysis<font color="#E5E5E5"> on the average number of</font>

184
00:08:28,500 --> 00:08:33,870
proposals<font color="#CCCCCC"> and as you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> it is</font>

185
00:08:31,020 --> 00:08:36,299
scales linearly instead of<font color="#CCCCCC"> n s squared</font>

186
00:08:33,870 --> 00:08:38,570
with<font color="#CCCCCC"> the number of</font><font color="#E5E5E5"> participants</font><font color="#CCCCCC"> or sub</font>

187
00:08:36,299 --> 00:08:38,569
<font color="#CCCCCC">sites</font>

188
00:08:39,650 --> 00:08:44,430
this is the<font color="#CCCCCC"> traumatic view of our</font>

189
00:08:42,030 --> 00:08:45,750
<font color="#CCCCCC">sub-linear sign</font><font color="#E5E5E5"> circuit the sublunary is</font>

190
00:08:44,430 --> 00:08:49,620
with respect<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> number of</font>

191
00:08:45,750 --> 00:08:51,540
participants<font color="#CCCCCC"> in each group I'll describe</font>

192
00:08:49,620 --> 00:08:54,750
each building block in more detail

193
00:08:51,540 --> 00:08:56,219
so this<font color="#E5E5E5"> sub module acts as a control</font>

194
00:08:54,750 --> 00:08:58,380
flow of the whole circuit and it

195
00:08:56,220 --> 00:09:01,530
basically implements the majority of<font color="#E5E5E5"> the</font>

196
00:08:58,380 --> 00:09:04,290
code<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> soul matching algorithm this</font>

197
00:09:01,530 --> 00:09:06,240
circuit<font color="#E5E5E5"> finds the freemen in the</font>

198
00:09:04,290 --> 00:09:09,319
previous life cycle and fit it to<font color="#CCCCCC"> the</font>

199
00:09:06,240 --> 00:09:12,450
ACC address<font color="#CCCCCC"> combinational circuit and</font>

200
00:09:09,320 --> 00:09:15,270
this part of<font color="#E5E5E5"> the circuit is memory which</font>

201
00:09:12,450 --> 00:09:22,620
can<font color="#E5E5E5"> be implemented either as monks or</font>

202
00:09:15,270 --> 00:09:25,680
<font color="#CCCCCC">Orem</font><font color="#E5E5E5"> and as I</font><font color="#CCCCCC"> talked</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> to in order</font>

203
00:09:22,620 --> 00:09:27,570
<font color="#CCCCCC">to</font><font color="#E5E5E5"> avoid invaluable puzzles we have</font>

204
00:09:25,680 --> 00:09:30,959
introduced a technique which<font color="#E5E5E5"> is called</font>

205
00:09:27,570 --> 00:09:33,120
<font color="#CCCCCC">hair determination that finds whether a</font>

206
00:09:30,960 --> 00:09:35,310
match at least is a stable or not

207
00:09:33,120 --> 00:09:37,440
<font color="#E5E5E5">because in regular execution everything</font>

208
00:09:35,310 --> 00:09:39,239
in the GC portable is garbled so<font color="#CCCCCC"> we</font>

209
00:09:37,440 --> 00:09:41,580
cannot<font color="#E5E5E5"> really tell if the</font><font color="#CCCCCC"> masculine is</font>

210
00:09:39,240 --> 00:09:44,190
stable at<font color="#E5E5E5"> this time or not but using</font>

211
00:09:41,580 --> 00:09:47,400
this protocol we can reveal one piece of

212
00:09:44,190 --> 00:09:49,620
information at each clock cycle<font color="#E5E5E5"> and see</font>

213
00:09:47,400 --> 00:09:51,660
if the match is disabled or not of

214
00:09:49,620 --> 00:09:55,170
course<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> not free it comes at the</font>

215
00:09:51,660 --> 00:09:56,910
<font color="#CCCCCC">cost of revealing the</font><font color="#E5E5E5"> total number of</font>

216
00:09:55,170 --> 00:10:00,360
<font color="#CCCCCC">purple cells needed</font><font color="#E5E5E5"> to reach a stable</font>

217
00:09:56,910 --> 00:10:05,010
match and it's an optional module<font color="#CCCCCC"> that</font>

218
00:10:00,360 --> 00:10:08,280
we can use or avoid so easy<font color="#CCCCCC"> T can be</font>

219
00:10:05,010 --> 00:10:11,069
<font color="#E5E5E5">used in any iterative based algorithms</font>

220
00:10:08,280 --> 00:10:14,280
for<font color="#CCCCCC"> example it's using camp appeal which</font>

221
00:10:11,070 --> 00:10:15,960
is<font color="#CCCCCC"> a secure spreadsheet company and they</font>

222
00:10:14,280 --> 00:10:18,660
have used<font color="#E5E5E5"> our technique in their</font>

223
00:10:15,960 --> 00:10:22,500
security<font color="#CCCCCC"> products as they have</font><font color="#E5E5E5"> announced</font>

224
00:10:18,660 --> 00:10:24,270
in the security model<font color="#E5E5E5"> so depending on</font>

225
00:10:22,500 --> 00:10:26,370
which<font color="#E5E5E5"> type</font><font color="#CCCCCC"> of program used in the</font>

226
00:10:24,270 --> 00:10:29,579
circuit<font color="#CCCCCC"> you get different complexities</font>

227
00:10:26,370 --> 00:10:31,890
the vertical bar showed<font color="#E5E5E5"> different kind</font>

228
00:10:29,580 --> 00:10:34,890
of<font color="#E5E5E5"> warrant and the horizontal bar shows</font>

229
00:10:31,890 --> 00:10:37,260
different variants of stable matching we

230
00:10:34,890 --> 00:10:40,260
have linear<font color="#CCCCCC"> Orland</font><font color="#E5E5E5"> or M which is</font>

231
00:10:37,260 --> 00:10:42,270
basically using<font color="#CCCCCC"> monks school route or M</font>

232
00:10:40,260 --> 00:10:44,819
and<font color="#E5E5E5"> circuit</font><font color="#CCCCCC"> work and for the horizontal</font>

233
00:10:42,270 --> 00:10:47,610
board we have general stable matching

234
00:10:44,820 --> 00:10:48,570
general matching<font color="#E5E5E5"> plus</font><font color="#CCCCCC"> ccTLD termination</font>

235
00:10:47,610 --> 00:10:50,220
technique

236
00:10:48,570 --> 00:10:52,170
and<font color="#CCCCCC"> limited</font><font color="#E5E5E5"> civil magic the limited</font>

237
00:10:50,220 --> 00:10:54,780
stable matching is when the preference

238
00:10:52,170 --> 00:10:57,780
list for<font color="#E5E5E5"> this person is limited to a</font>

239
00:10:54,780 --> 00:10:59,579
constant<font color="#E5E5E5"> number like 20 whereas we can</font>

240
00:10:57,780 --> 00:11:04,260
<font color="#E5E5E5">have like thousand people in set size</font>

241
00:10:59,580 --> 00:11:06,660
and as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see a</font><font color="#E5E5E5"> linear or M is</font>

242
00:11:04,260 --> 00:11:09,300
better<font color="#E5E5E5"> up to a certain point and both</font>

243
00:11:06,660 --> 00:11:11,219
<font color="#E5E5E5">for</font><font color="#CCCCCC"> MS after which a square root</font><font color="#E5E5E5"> a</font>

244
00:11:09,300 --> 00:11:13,829
square root or M comes in and<font color="#CCCCCC"> out</font>

245
00:11:11,220 --> 00:11:16,410
performs<font color="#CCCCCC"> months up to certain points</font>

246
00:11:13,830 --> 00:11:18,120
which is<font color="#E5E5E5"> around</font><font color="#CCCCCC"> 4000</font><font color="#E5E5E5"> people after that</font>

247
00:11:16,410 --> 00:11:23,010
circuit<font color="#CCCCCC"> where I performed all of the</font>

248
00:11:18,120 --> 00:11:25,740
solutions here<font color="#E5E5E5"> is the complexity</font>

249
00:11:23,010 --> 00:11:28,620
comparison with<font color="#CCCCCC"> very work</font><font color="#E5E5E5"> the first</font>

250
00:11:25,740 --> 00:11:30,660
solution had the total computation

251
00:11:28,620 --> 00:11:34,080
complexity and communication with n to

252
00:11:30,660 --> 00:11:37,380
power 5 which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> very to use during time</font>

253
00:11:34,080 --> 00:11:40,650
it's reduced to<font color="#CCCCCC"> 2 down to nsns squared</font>

254
00:11:37,380 --> 00:11:42,480
like<font color="#E5E5E5"> 3 and as you can see our work</font>

255
00:11:40,650 --> 00:11:45,260
together with killer<font color="#E5E5E5"> it's all solution</font>

256
00:11:42,480 --> 00:11:47,730
<font color="#CCCCCC">and have the best asymptotic complexity</font>

257
00:11:45,260 --> 00:11:49,980
<font color="#CCCCCC">it's important</font><font color="#E5E5E5"> to note that the majority</font>

258
00:11:47,730 --> 00:11:52,500
<font color="#E5E5E5">of operation are</font><font color="#CCCCCC"> socially symmetric key</font>

259
00:11:49,980 --> 00:11:54,600
encryption<font color="#CCCCCC"> whereas the initial solutions</font>

260
00:11:52,500 --> 00:11:58,950
are public key<font color="#CCCCCC"> based which are for more</font>

261
00:11:54,600 --> 00:12:00,810
<font color="#CCCCCC">extensive so here's the experimental</font>

262
00:11:58,950 --> 00:12:03,510
<font color="#E5E5E5">results for different sizes</font><font color="#CCCCCC"> and</font>

263
00:12:00,810 --> 00:12:05,969
<font color="#E5E5E5">different</font><font color="#CCCCCC"> worn</font><font color="#E5E5E5"> scheme the upper table</font>

264
00:12:03,510 --> 00:12:08,310
shows the<font color="#E5E5E5"> result for regular execution</font>

265
00:12:05,970 --> 00:12:12,530
<font color="#E5E5E5">the down table shows</font><font color="#CCCCCC"> the result when</font>

266
00:12:08,310 --> 00:12:14,790
using<font color="#E5E5E5"> error determination for</font>

267
00:12:12,530 --> 00:12:17,760
experiments with<font color="#CCCCCC"> that took more than</font><font color="#E5E5E5"> few</font>

268
00:12:14,790 --> 00:12:18,449
hours we use our cost function<font color="#CCCCCC"> to get</font>

269
00:12:17,760 --> 00:12:20,280
<font color="#CCCCCC">the result</font>

270
00:12:18,450 --> 00:12:22,260
<font color="#CCCCCC">I know these numbers</font><font color="#E5E5E5"> may sound</font>

271
00:12:20,280 --> 00:12:23,550
astronomical but this is due<font color="#CCCCCC"> to the</font>

272
00:12:22,260 --> 00:12:26,130
hardness of<font color="#E5E5E5"> this problem</font>

273
00:12:23,550 --> 00:12:28,699
for example comparing<font color="#E5E5E5"> to killer it's all</font>

274
00:12:26,130 --> 00:12:33,060
solution for set size of 8,000 people

275
00:12:28,700 --> 00:12:36,000
<font color="#E5E5E5">they report 10 to power 12</font><font color="#CCCCCC"> second</font>

276
00:12:33,060 --> 00:12:37,709
execution time<font color="#E5E5E5"> estimated so which is</font>

277
00:12:36,000 --> 00:12:40,620
equivalent to forty seven thousand years

278
00:12:37,710 --> 00:12:43,040
<font color="#E5E5E5">and what we need a slightly more</font><font color="#CCCCCC"> than a</font>

279
00:12:40,620 --> 00:12:45,960
day<font color="#CCCCCC"> to compute is functionality</font>

280
00:12:43,040 --> 00:12:49,170
<font color="#E5E5E5">comparing to the original paper for</font>

281
00:12:45,960 --> 00:12:52,350
square root or<font color="#E5E5E5"> M they have delayed three</font>

282
00:12:49,170 --> 00:12:55,800
hours<font color="#E5E5E5"> execution time for set size of 512</font>

283
00:12:52,350 --> 00:12:59,620
<font color="#E5E5E5">same scenario where we have eight hours</font>

284
00:12:55,800 --> 00:13:03,400
<font color="#CCCCCC">of execution time</font><font color="#E5E5E5"> without using</font><font color="#CCCCCC"> Itt</font>

285
00:12:59,620 --> 00:13:06,720
slightly<font color="#CCCCCC"> I mean close to five minutes</font>

286
00:13:03,400 --> 00:13:09,220
education time when<font color="#E5E5E5"> using Itt</font>

287
00:13:06,720 --> 00:13:12,760
<font color="#CCCCCC">concurrent</font><font color="#E5E5E5"> a concurrent work that was</font>

288
00:13:09,220 --> 00:13:15,310
published<font color="#CCCCCC"> in</font><font color="#E5E5E5"> CCS 2016 they introduced</font>

289
00:13:12,760 --> 00:13:17,950
<font color="#E5E5E5">oblivious link list and</font><font color="#CCCCCC"> they report for</font>

290
00:13:15,310 --> 00:13:21,219
the<font color="#CCCCCC"> eight minute execution time versus</font>

291
00:13:17,950 --> 00:13:23,170
same set size and scenario which is<font color="#E5E5E5"> less</font>

292
00:13:21,220 --> 00:13:28,110
than our<font color="#CCCCCC"> regular execution but</font><font color="#E5E5E5"> more than</font>

293
00:13:23,170 --> 00:13:30,520
our execution with<font color="#CCCCCC"> PTT so in conclusion</font>

294
00:13:28,110 --> 00:13:32,740
we have<font color="#CCCCCC"> a study the</font><font color="#E5E5E5"> program secure</font>

295
00:13:30,520 --> 00:13:35,020
stable<font color="#E5E5E5"> matching and in particular we</font>

296
00:13:32,740 --> 00:13:37,089
have introduced a sub linear<font color="#CCCCCC"> side</font>

297
00:13:35,020 --> 00:13:39,990
circuit for<font color="#E5E5E5"> this time for this time for</font>

298
00:13:37,089 --> 00:13:42,580
<font color="#E5E5E5">first time and also we have introduced</font>

299
00:13:39,990 --> 00:13:45,100
early termination technique which can

300
00:13:42,580 --> 00:13:47,800
<font color="#E5E5E5">significantly reduce the execution time</font>

301
00:13:45,100 --> 00:13:50,200
of<font color="#E5E5E5"> the GC protocol for</font><font color="#CCCCCC"> any iterative</font>

302
00:13:47,800 --> 00:13:53,949
based algorithms<font color="#E5E5E5"> and has already been</font>

303
00:13:50,200 --> 00:13:57,050
adapted in security<font color="#CCCCCC"> for them thank</font><font color="#E5E5E5"> you</font>

304
00:13:53,950 --> 00:13:59,730
<font color="#CCCCCC">very much</font><font color="#E5E5E5"> and I have to answer English</font>

305
00:13:57,050 --> 00:13:59,729
[Applause]

