1
00:00:00,030 --> 00:00:09,569
<font color="#CCCCCC">thing about valium I benefit section for</font>

2
00:00:06,810 --> 00:00:12,629
any<font color="#CCCCCC"> group -</font><font color="#E5E5E5"> okay thank you</font><font color="#CCCCCC"> for the</font>

3
00:00:09,570 --> 00:00:14,759
introduction<font color="#E5E5E5"> so my name is Angus and I'm</font>

4
00:00:12,630 --> 00:00:16,859
going<font color="#E5E5E5"> to present joint work between my</font>

5
00:00:14,759 --> 00:00:19,619
<font color="#CCCCCC">University</font><font color="#E5E5E5"> the Technical University of</font>

6
00:00:16,859 --> 00:00:22,170
Darmstadt<font color="#E5E5E5"> our</font><font color="#CCCCCC"> university from Finland</font>

7
00:00:19,619 --> 00:00:24,060
<font color="#E5E5E5">and our Island University on private</font>

8
00:00:22,170 --> 00:00:27,349
<font color="#E5E5E5">said intersection with</font><font color="#CCCCCC"> four unequal</font>

9
00:00:24,060 --> 00:00:30,060
societies which have mobile application

10
00:00:27,349 --> 00:00:33,059
so first of<font color="#E5E5E5"> all that is private</font><font color="#CCCCCC"> that</font>

11
00:00:30,060 --> 00:00:36,690
intersection<font color="#CCCCCC"> it's a specific case</font><font color="#E5E5E5"> of</font>

12
00:00:33,059 --> 00:00:39,570
secure computation<font color="#CCCCCC"> we have two parties</font>

13
00:00:36,690 --> 00:00:42,089
who<font color="#E5E5E5"> want to compute their intersection</font>

14
00:00:39,570 --> 00:00:45,090
in a private way<font color="#E5E5E5"> so in this example we</font>

15
00:00:42,090 --> 00:00:46,469
have<font color="#CCCCCC"> an example</font><font color="#E5E5E5"> who want to get to know</font>

16
00:00:45,090 --> 00:00:48,719
which<font color="#E5E5E5"> are their common friend</font>

17
00:00:46,469 --> 00:00:52,559
they have both<font color="#CCCCCC"> of</font><font color="#E5E5E5"> them have a contact</font>

18
00:00:48,719 --> 00:00:54,539
<font color="#E5E5E5">list and</font><font color="#CCCCCC"> we want to compute who is their</font>

19
00:00:52,559 --> 00:00:57,300
<font color="#CCCCCC">common friend</font><font color="#E5E5E5"> without getting to know</font>

20
00:00:54,539 --> 00:01:00,120
anything<font color="#E5E5E5"> else than the intersection so</font>

21
00:00:57,300 --> 00:01:03,149
in this scenario we have around<font color="#E5E5E5"> the same</font>

22
00:01:00,120 --> 00:01:06,840
same number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> elements in both</font><font color="#CCCCCC"> tests</font>

23
00:01:03,149 --> 00:01:09,420
<font color="#E5E5E5">however</font><font color="#CCCCCC"> we can imagine</font><font color="#E5E5E5"> certain scenarios</font>

24
00:01:06,840 --> 00:01:11,640
where<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> Eddie's played the</font>

25
00:01:09,420 --> 00:01:14,010
role of a server which<font color="#CCCCCC"> has a huge</font>

26
00:01:11,640 --> 00:01:17,850
<font color="#E5E5E5">database and Bob is a client who wants</font>

27
00:01:14,010 --> 00:01:19,920
<font color="#CCCCCC">to</font><font color="#E5E5E5"> to have a certain like anything wants</font>

28
00:01:17,850 --> 00:01:22,080
to provide the service<font color="#CCCCCC"> to Bob</font><font color="#E5E5E5"> and he has</font>

29
00:01:19,920 --> 00:01:25,500
much smaller<font color="#E5E5E5"> number of elements in his</font>

30
00:01:22,080 --> 00:01:28,740
data in his<font color="#E5E5E5"> set an example application</font>

31
00:01:25,500 --> 00:01:30,950
<font color="#E5E5E5">is the mobile messaging service for</font>

32
00:01:28,740 --> 00:01:34,140
<font color="#E5E5E5">example at depth which has a huge</font>

33
00:01:30,950 --> 00:01:36,119
database<font color="#CCCCCC"> of registered users and Bob</font>

34
00:01:34,140 --> 00:01:39,240
wants to<font color="#E5E5E5"> also register and get to know</font>

35
00:01:36,119 --> 00:01:42,210
<font color="#E5E5E5">which contacts he can now speak with</font>

36
00:01:39,240 --> 00:01:43,979
through whatsapp so we want to compute

37
00:01:42,210 --> 00:01:47,639
<font color="#E5E5E5">the intersection between his contact</font>

38
00:01:43,979 --> 00:01:49,350
list<font color="#E5E5E5"> and the database of life and get to</font>

39
00:01:47,640 --> 00:01:53,180
<font color="#CCCCCC">know who he can talk with</font><font color="#E5E5E5"> and in this</font>

40
00:01:49,350 --> 00:01:55,759
<font color="#E5E5E5">scenario we</font><font color="#CCCCCC"> see that it's a significant</font>

41
00:01:53,180 --> 00:02:00,560
difference<font color="#E5E5E5"> between the size of the two</font>

42
00:01:55,759 --> 00:02:03,659
input set another application<font color="#E5E5E5"> could be</font>

43
00:02:00,560 --> 00:02:05,010
<font color="#E5E5E5">malware detection service either</font><font color="#CCCCCC"> on PC</font>

44
00:02:03,659 --> 00:02:07,830
or<font color="#E5E5E5"> mobile</font>

45
00:02:05,010 --> 00:02:11,190
<font color="#E5E5E5">there can be a company there</font><font color="#CCCCCC"> exist such</font>

46
00:02:07,830 --> 00:02:13,829
companies that do<font color="#E5E5E5"> mobile malware</font>

47
00:02:11,190 --> 00:02:17,700
detection<font color="#E5E5E5"> and provide</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> service to</font><font color="#CCCCCC"> the</font>

48
00:02:13,830 --> 00:02:20,450
clients<font color="#E5E5E5"> to to tell which</font><font color="#CCCCCC"> of their</font>

49
00:02:17,700 --> 00:02:24,329
applications are members so they need<font color="#E5E5E5"> to</font>

50
00:02:20,450 --> 00:02:26,010
<font color="#E5E5E5">uninstall it and this can be also an</font>

51
00:02:24,330 --> 00:02:27,900
application<font color="#CCCCCC"> because we</font><font color="#E5E5E5"> see the</font>

52
00:02:26,010 --> 00:02:30,299
incentives of<font color="#E5E5E5"> both that he doesn't want</font>

53
00:02:27,900 --> 00:02:33,960
to reveal<font color="#E5E5E5"> all the applications and also</font>

54
00:02:30,300 --> 00:02:35,880
<font color="#CCCCCC">the</font><font color="#E5E5E5"> the malware</font><font color="#CCCCCC"> detection</font><font color="#E5E5E5"> service</font>

55
00:02:33,960 --> 00:02:42,360
doesn't<font color="#E5E5E5"> want to give away all its</font>

56
00:02:35,880 --> 00:02:44,820
knowledge<font color="#CCCCCC"> and so where are we in</font><font color="#E5E5E5"> psi</font>

57
00:02:42,360 --> 00:02:47,460
what do we have for<font color="#E5E5E5"> now so we</font><font color="#CCCCCC"> have very</font>

58
00:02:44,820 --> 00:02:51,359
efficient protocols for the case when<font color="#CCCCCC"> we</font>

59
00:02:47,460 --> 00:02:54,000
<font color="#E5E5E5">have similar sizes</font><font color="#CCCCCC"> in the input set they</font>

60
00:02:51,360 --> 00:02:56,370
<font color="#CCCCCC">are based on almost only</font><font color="#E5E5E5"> symmetric key</font>

61
00:02:54,000 --> 00:03:01,440
<font color="#CCCCCC">tryptophan so they are really really</font>

62
00:02:56,370 --> 00:03:03,660
efficient however<font color="#E5E5E5"> they require</font><font color="#CCCCCC"> to send</font>

63
00:03:01,440 --> 00:03:06,600
data which is proportional<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> sizes</font>

64
00:03:03,660 --> 00:03:09,930
of<font color="#E5E5E5"> the date of the larger input set as</font>

65
00:03:06,600 --> 00:03:12,840
well<font color="#E5E5E5"> for every element of the</font><font color="#CCCCCC"> clients in</font>

66
00:03:09,930 --> 00:03:17,340
<font color="#E5E5E5">this scenario</font><font color="#CCCCCC"> so it doesn't really fit</font>

67
00:03:12,840 --> 00:03:21,150
our<font color="#E5E5E5"> needs because it's going to be very</font>

68
00:03:17,340 --> 00:03:23,519
<font color="#E5E5E5">inefficient</font><font color="#CCCCCC"> for this</font><font color="#E5E5E5"> scenario so</font><font color="#CCCCCC"> what</font>

69
00:03:21,150 --> 00:03:28,170
else do we have<font color="#E5E5E5"> we also have some linear</font>

70
00:03:23,519 --> 00:03:33,750
<font color="#CCCCCC">Kota coils but so that I've linear in</font>

71
00:03:28,170 --> 00:03:35,670
both the<font color="#E5E5E5"> sizes so we just</font><font color="#CCCCCC"> so so</font><font color="#E5E5E5"> but the</font>

72
00:03:33,750 --> 00:03:37,980
<font color="#E5E5E5">problem with these protocols is that in</font>

73
00:03:35,670 --> 00:03:41,190
<font color="#CCCCCC">general they perform worse and the</font><font color="#E5E5E5"> OT</font>

74
00:03:37,980 --> 00:03:44,190
based<font color="#E5E5E5"> protocols</font><font color="#CCCCCC"> because they are based</font>

75
00:03:41,190 --> 00:03:46,050
on public key crypto so the research

76
00:03:44,190 --> 00:03:48,600
kind<font color="#E5E5E5"> of stuff in this</font><font color="#CCCCCC"> direction at some</font>

77
00:03:46,050 --> 00:03:50,670
point and went towards the<font color="#E5E5E5"> other one</font>

78
00:03:48,600 --> 00:03:53,120
however they perform much<font color="#CCCCCC"> better in this</font>

79
00:03:50,670 --> 00:03:55,589
<font color="#E5E5E5">particular scenario when we want to have</font>

80
00:03:53,120 --> 00:03:58,260
unequal societies

81
00:03:55,590 --> 00:04:02,069
so let's meet one which<font color="#E5E5E5"> protocol that</font>

82
00:03:58,260 --> 00:04:05,489
are<font color="#E5E5E5"> linear we can adopt</font><font color="#CCCCCC"> to our</font><font color="#E5E5E5"> our</font>

83
00:04:02,069 --> 00:04:07,410
scenario<font color="#CCCCCC"> and we see</font><font color="#E5E5E5"> that except one</font><font color="#CCCCCC"> of</font>

84
00:04:05,489 --> 00:04:10,080
them where<font color="#CCCCCC"> the client needs</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> perform</font>

85
00:04:07,410 --> 00:04:15,599
too much<font color="#E5E5E5"> computation so</font><font color="#CCCCCC"> nonlinear</font>

86
00:04:10,080 --> 00:04:18,239
computation<font color="#E5E5E5"> we can we will be able to to</font>

87
00:04:15,599 --> 00:04:20,909
adopt all of<font color="#CCCCCC"> these to our</font><font color="#E5E5E5"> unequal</font>

88
00:04:18,238 --> 00:04:25,739
<font color="#CCCCCC">society scenario so</font><font color="#E5E5E5"> the first</font>

89
00:04:20,910 --> 00:04:28,139
contribution<font color="#E5E5E5"> that we have is</font><font color="#CCCCCC"> that we we</font>

90
00:04:25,740 --> 00:04:30,680
improve these protocols<font color="#CCCCCC"> or these four</font>

91
00:04:28,139 --> 00:04:34,490
protocols and adopt<font color="#E5E5E5"> them to this</font>

92
00:04:30,680 --> 00:04:37,200
particular scenario<font color="#E5E5E5"> so first of all we</font>

93
00:04:34,490 --> 00:04:39,150
instead of<font color="#E5E5E5"> looking at the protocol in</font>

94
00:04:37,200 --> 00:04:42,419
one we look at three phases<font color="#CCCCCC"> of the</font>

95
00:04:39,150 --> 00:04:45,299
protocol and shift<font color="#E5E5E5"> was submissive and</font>

96
00:04:42,419 --> 00:04:47,219
everything afterwards<font color="#CCCCCC"> so we have a base</font>

97
00:04:45,300 --> 00:04:51,020
space where we compute<font color="#CCCCCC"> everything that's</font>

98
00:04:47,220 --> 00:04:57,540
independent on both the<font color="#E5E5E5"> set so</font>

99
00:04:51,020 --> 00:04:59,430
pre-computation<font color="#CCCCCC"> of keys and random</font>

100
00:04:57,540 --> 00:05:02,190
numbers and<font color="#E5E5E5"> so on then we have a</font><font color="#CCCCCC"> setup</font>

101
00:04:59,430 --> 00:05:05,130
<font color="#E5E5E5">phase which depends only on the on the</font>

102
00:05:02,190 --> 00:05:07,890
elements in the database and<font color="#E5E5E5"> we have an</font>

103
00:05:05,130 --> 00:05:09,930
<font color="#E5E5E5">online space which is efficient because</font>

104
00:05:07,890 --> 00:05:14,400
<font color="#E5E5E5">and it only depends on</font><font color="#CCCCCC"> the elements in</font>

105
00:05:09,930 --> 00:05:16,380
the smaller set of the<font color="#CCCCCC"> clients so what's</font>

106
00:05:14,400 --> 00:05:19,349
the point<font color="#E5E5E5"> in doing this the bay space</font>

107
00:05:16,380 --> 00:05:21,150
can be pre computed by the two parties

108
00:05:19,350 --> 00:05:22,650
<font color="#CCCCCC">like for example than</font><font color="#E5E5E5"> installing the</font>

109
00:05:21,150 --> 00:05:24,419
application<font color="#E5E5E5"> so we don't need to know</font>

110
00:05:22,650 --> 00:05:28,320
anything<font color="#E5E5E5"> about the inputs</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> this stage</font>

111
00:05:24,419 --> 00:05:32,039
yet the<font color="#E5E5E5"> setup phase can also we will see</font>

112
00:05:28,320 --> 00:05:33,930
<font color="#CCCCCC">that it can so most of the computation</font>

113
00:05:32,039 --> 00:05:36,570
<font color="#CCCCCC">that</font><font color="#E5E5E5"> needs to be done</font><font color="#CCCCCC"> in the setup phase</font>

114
00:05:33,930 --> 00:05:39,180
can be pre computed by the server in

115
00:05:36,570 --> 00:05:41,370
advance<font color="#E5E5E5"> so that's another advantage</font><font color="#CCCCCC"> why</font>

116
00:05:39,180 --> 00:05:44,460
we separate the<font color="#E5E5E5"> setup phase from the</font>

117
00:05:41,370 --> 00:05:46,770
<font color="#CCCCCC">online phase if we are lucky we might</font>

118
00:05:44,460 --> 00:05:50,539
<font color="#E5E5E5">even be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to do the same computation</font>

119
00:05:46,770 --> 00:05:56,789
<font color="#E5E5E5">for our client and in the</font><font color="#CCCCCC"> online</font><font color="#E5E5E5"> space</font>

120
00:05:50,539 --> 00:05:59,610
<font color="#E5E5E5">we only do very fast computation on the</font>

121
00:05:56,789 --> 00:06:02,520
small<font color="#E5E5E5"> set on the poster client so to</font>

122
00:05:59,610 --> 00:06:04,490
reduce<font color="#CCCCCC"> the communication and</font><font color="#E5E5E5"> the storage</font>

123
00:06:02,520 --> 00:06:08,060
<font color="#E5E5E5">that's required by the</font>

124
00:06:04,490 --> 00:06:11,270
by both biting but by the<font color="#E5E5E5"> client who</font><font color="#CCCCCC"> has</font>

125
00:06:08,060 --> 00:06:14,960
restricted<font color="#CCCCCC"> resources via with balloon</font>

126
00:06:11,270 --> 00:06:17,508
<font color="#CCCCCC">theater to to store the database</font><font color="#E5E5E5"> in a</font>

127
00:06:14,960 --> 00:06:19,729
more efficient way so blue feathers are

128
00:06:17,509 --> 00:06:20,479
used for membership testing in the

129
00:06:19,729 --> 00:06:23,180
following<font color="#E5E5E5"> way</font>

130
00:06:20,479 --> 00:06:29,030
so firstly we initialize a large array

131
00:06:23,180 --> 00:06:30,889
of 0 of 0<font color="#CCCCCC"> bits and we have a couple of</font>

132
00:06:29,030 --> 00:06:32,840
hash functions<font color="#CCCCCC"> both parties</font><font color="#E5E5E5"> have</font>

133
00:06:30,889 --> 00:06:34,699
knowledge about<font color="#CCCCCC"> this hash function they</font>

134
00:06:32,840 --> 00:06:36,500
agree<font color="#CCCCCC"> on it in advance and when</font>

135
00:06:34,699 --> 00:06:40,070
inserting an element<font color="#E5E5E5"> like a phone number</font>

136
00:06:36,500 --> 00:06:42,139
<font color="#E5E5E5">we first need to hash the element with</font>

137
00:06:40,070 --> 00:06:44,330
all the hash functions which define the

138
00:06:42,139 --> 00:06:46,880
<font color="#E5E5E5">position in this array and we will send</font>

139
00:06:44,330 --> 00:06:48,800
<font color="#CCCCCC">this</font><font color="#E5E5E5"> bit to one and membership testing</font>

140
00:06:46,880 --> 00:06:51,320
works<font color="#E5E5E5"> because this works the same</font>

141
00:06:48,800 --> 00:06:54,259
because we just<font color="#E5E5E5"> need to like receiving</font>

142
00:06:51,320 --> 00:06:55,880
an element we need<font color="#E5E5E5"> to to hash it with</font>

143
00:06:54,259 --> 00:06:58,699
the known hash functions and see if

144
00:06:55,880 --> 00:07:01,789
those bits are 1<font color="#CCCCCC"> for</font><font color="#E5E5E5"> 0 and if they are</font>

145
00:06:58,699 --> 00:07:05,000
well<font color="#E5E5E5"> one with the fourth with a small</font>

146
00:07:01,789 --> 00:07:08,930
false positive probability<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> say ok</font>

147
00:07:05,000 --> 00:07:12,860
<font color="#CCCCCC">the element</font><font color="#E5E5E5"> is in the isn't</font><font color="#CCCCCC"> is in the</font>

148
00:07:08,930 --> 00:07:15,889
database<font color="#CCCCCC"> of course you cannot ever</font>

149
00:07:12,860 --> 00:07:19,520
<font color="#E5E5E5">insert plain text elements in this bloom</font>

150
00:07:15,889 --> 00:07:21,320
filter because that would be insecure<font color="#CCCCCC"> so</font>

151
00:07:19,520 --> 00:07:23,330
we firstly<font color="#E5E5E5"> crypt it and then insert it</font>

152
00:07:21,320 --> 00:07:27,469
in<font color="#CCCCCC"> the bloom filter I just want to point</font>

153
00:07:23,330 --> 00:07:29,900
out that<font color="#E5E5E5"> we never insert some clear</font>

154
00:07:27,469 --> 00:07:32,509
experiments in the<font color="#CCCCCC"> loop filter</font><font color="#E5E5E5"> and the</font>

155
00:07:29,900 --> 00:07:36,109
the<font color="#CCCCCC"> facility rate can be controlled by</font>

156
00:07:32,509 --> 00:07:38,210
making this array larger<font color="#CCCCCC"> so if we want</font>

157
00:07:36,110 --> 00:07:40,880
smaller false positive<font color="#E5E5E5"> rates and we will</font>

158
00:07:38,210 --> 00:07:42,830
have a larger array<font color="#CCCCCC"> but it's a much</font><font color="#E5E5E5"> much</font>

159
00:07:40,880 --> 00:07:48,050
better<font color="#E5E5E5"> way to store the database than</font>

160
00:07:42,830 --> 00:07:51,229
just storing it encrypted<font color="#CCCCCC"> ok and we can</font>

161
00:07:48,050 --> 00:07:53,990
<font color="#E5E5E5">also do updating this monitor by</font><font color="#CCCCCC"> either</font>

162
00:07:51,229 --> 00:07:56,599
sending<font color="#E5E5E5"> the encryption of the elements</font>

163
00:07:53,990 --> 00:08:00,409
<font color="#E5E5E5">or the</font><font color="#CCCCCC"> positions</font><font color="#E5E5E5"> that need to</font><font color="#CCCCCC"> be updated</font>

164
00:07:56,599 --> 00:08:02,060
<font color="#CCCCCC">and so the it</font><font color="#E5E5E5"> depends on the parameters</font>

165
00:08:00,409 --> 00:08:03,860
which is<font color="#E5E5E5"> the more efficient solution so</font>

166
00:08:02,060 --> 00:08:05,000
depending<font color="#E5E5E5"> on our scenario how big our</font>

167
00:08:03,860 --> 00:08:06,830
<font color="#CCCCCC">set is and so on</font>

168
00:08:05,000 --> 00:08:07,270
we need to see which which of the reach

169
00:08:06,830 --> 00:08:10,240
of the

170
00:08:07,270 --> 00:08:12,280
who are the which<font color="#CCCCCC"> of those is the more</font>

171
00:08:10,240 --> 00:08:15,580
efficient and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to do the update</font>

172
00:08:12,280 --> 00:08:17,258
<font color="#E5E5E5">depending</font><font color="#CCCCCC"> on that</font><font color="#E5E5E5"> and if we want</font><font color="#CCCCCC"> to</font>

173
00:08:15,580 --> 00:08:18,729
allow for<font color="#E5E5E5"> deletion we need to use</font>

174
00:08:17,259 --> 00:08:20,949
counting bloom filters the only

175
00:08:18,729 --> 00:08:23,349
difference is that we have<font color="#CCCCCC"> small</font>

176
00:08:20,949 --> 00:08:24,880
counters instead of<font color="#E5E5E5"> bits in the India</font>

177
00:08:23,349 --> 00:08:27,699
array and then<font color="#E5E5E5"> we can be treated these</font>

178
00:08:24,880 --> 00:08:31,389
counters<font color="#CCCCCC"> also if an element needs to be</font>

179
00:08:27,699 --> 00:08:34,180
<font color="#CCCCCC">deleted so just to</font><font color="#E5E5E5"> have a high-level</font>

180
00:08:31,389 --> 00:08:36,849
overview on how<font color="#CCCCCC"> these protocols work</font><font color="#E5E5E5"> so</font>

181
00:08:34,179 --> 00:08:38,649
the ones<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are based on so there are</font>

182
00:08:36,849 --> 00:08:41,169
the ones<font color="#E5E5E5"> that are based on oblivious to</font>

183
00:08:38,649 --> 00:08:43,779
the random function evaluation there are

184
00:08:41,169 --> 00:08:46,180
three variants of this one based on<font color="#CCCCCC"> RSA</font>

185
00:08:43,779 --> 00:08:48,790
blind signatures one based on so forth

186
00:08:46,180 --> 00:08:51,489
now<font color="#E5E5E5"> a rainbow's</font><font color="#CCCCCC"> pseudo-random function</font>

187
00:08:48,790 --> 00:08:54,189
and one based on<font color="#E5E5E5"> the garbage circuit</font>

188
00:08:51,490 --> 00:08:58,630
evaluation of<font color="#CCCCCC"> AES so it's an aes based</font>

189
00:08:54,190 --> 00:09:00,760
protocol and so the<font color="#CCCCCC"> high-level overview</font>

190
00:08:58,630 --> 00:09:02,620
we have a base place where we just<font color="#E5E5E5"> do</font>

191
00:09:00,760 --> 00:09:04,930
pre-computation that<font color="#E5E5E5"> doesn't depend</font><font color="#CCCCCC"> on</font>

192
00:09:02,620 --> 00:09:08,680
<font color="#E5E5E5">the data</font><font color="#CCCCCC"> we agree on the keys on</font><font color="#E5E5E5"> the</font>

193
00:09:04,930 --> 00:09:10,930
parameters<font color="#E5E5E5"> and do some pre</font><font color="#CCCCCC"> computation</font>

194
00:09:08,680 --> 00:09:13,660
<font color="#CCCCCC">and then in the setup</font><font color="#E5E5E5"> phase the server</font>

195
00:09:10,930 --> 00:09:16,300
will encrypt all its database and insert

196
00:09:13,660 --> 00:09:18,339
it in the<font color="#E5E5E5"> bloom filter</font><font color="#CCCCCC"> sense the bloom</font>

197
00:09:16,300 --> 00:09:22,390
filter<font color="#CCCCCC"> over to the client who then</font>

198
00:09:18,339 --> 00:09:24,220
stores this<font color="#CCCCCC"> propagator</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> indian</font>

199
00:09:22,390 --> 00:09:26,740
line<font color="#E5E5E5"> feeds the client will be</font><font color="#CCCCCC"> able to</font>

200
00:09:24,220 --> 00:09:29,170
<font color="#E5E5E5">request the encryption of</font><font color="#CCCCCC"> these elements</font>

201
00:09:26,740 --> 00:09:31,750
<font color="#CCCCCC">in an oblivious way so the server will</font>

202
00:09:29,170 --> 00:09:34,029
not<font color="#E5E5E5"> know what</font><font color="#CCCCCC"> he's encrypting and send</font>

203
00:09:31,750 --> 00:09:37,529
back<font color="#E5E5E5"> being encryption which can be done</font>

204
00:09:34,029 --> 00:09:40,000
unblinded by the client and he will know

205
00:09:37,529 --> 00:09:41,980
the encryption of the<font color="#E5E5E5"> element and can</font>

206
00:09:40,000 --> 00:09:47,140
check locally if it's in the bloom

207
00:09:41,980 --> 00:09:48,910
filter<font color="#CCCCCC"> or not</font><font color="#E5E5E5"> so he will be</font><font color="#CCCCCC"> able to to</font>

208
00:09:47,140 --> 00:09:52,449
<font color="#CCCCCC">verify if the element is</font><font color="#E5E5E5"> in the</font>

209
00:09:48,910 --> 00:09:54,660
<font color="#E5E5E5">intersection or</font><font color="#CCCCCC"> open and then there's</font>

210
00:09:52,450 --> 00:09:59,800
another<font color="#E5E5E5"> solution based on</font><font color="#CCCCCC"> the C Hammond</font>

211
00:09:54,660 --> 00:10:02,680
<font color="#E5E5E5">it's the general DC Hammond made with</font>

212
00:09:59,800 --> 00:10:04,930
there are<font color="#E5E5E5"> two key is generated</font><font color="#CCCCCC"> by the</font>

213
00:10:02,680 --> 00:10:07,839
server<font color="#CCCCCC"> and the client</font><font color="#E5E5E5"> India in the beta</font>

214
00:10:04,930 --> 00:10:09,930
<font color="#E5E5E5">phase then the</font><font color="#CCCCCC"> server will encrypt the</font>

215
00:10:07,839 --> 00:10:13,649
database with his key

216
00:10:09,930 --> 00:10:15,120
send it<font color="#E5E5E5"> over the</font><font color="#CCCCCC"> the client we will also</font>

217
00:10:13,649 --> 00:10:16,980
encrypt<font color="#E5E5E5"> all the elements and spend</font>

218
00:10:15,120 --> 00:10:20,339
insert it in the<font color="#CCCCCC"> blue filter so we</font><font color="#E5E5E5"> see</font>

219
00:10:16,980 --> 00:10:22,950
here<font color="#E5E5E5"> the communication is much much more</font>

220
00:10:20,339 --> 00:10:24,770
<font color="#E5E5E5">than in the previous solution</font><font color="#CCCCCC"> because</font>

221
00:10:22,950 --> 00:10:28,589
very very<font color="#CCCCCC"> only</font><font color="#E5E5E5"> sending the blog header</font>

222
00:10:24,770 --> 00:10:34,050
<font color="#E5E5E5">but in some cases we might allow this</font>

223
00:10:28,589 --> 00:10:38,910
<font color="#E5E5E5">for more efficiently</font><font color="#CCCCCC"> and in the online</font>

224
00:10:34,050 --> 00:10:41,099
<font color="#CCCCCC">face that happens is that the client</font>

225
00:10:38,910 --> 00:10:43,649
<font color="#E5E5E5">will encrypt</font><font color="#CCCCCC"> these elements send it to</font>

226
00:10:41,100 --> 00:10:47,370
the<font color="#E5E5E5"> the server who also encrypted with</font>

227
00:10:43,649 --> 00:10:49,649
his key<font color="#E5E5E5"> and then send it</font><font color="#CCCCCC"> back and</font><font color="#E5E5E5"> so the</font>

228
00:10:47,370 --> 00:10:50,970
client can check<font color="#E5E5E5"> this can check if the</font>

229
00:10:49,649 --> 00:10:53,940
element<font color="#E5E5E5"> is in the intersection in the</font>

230
00:10:50,970 --> 00:10:55,950
<font color="#E5E5E5">same way</font><font color="#CCCCCC"> as before okay</font><font color="#E5E5E5"> so we also</font>

231
00:10:53,940 --> 00:10:57,990
implemented<font color="#E5E5E5"> all these protocols to see</font>

232
00:10:55,950 --> 00:11:00,870
which perform better in which scenarios

233
00:10:57,990 --> 00:11:04,649
and like<font color="#CCCCCC"> prototype implementation</font><font color="#E5E5E5"> both</font>

234
00:11:00,870 --> 00:11:07,709
<font color="#E5E5E5">in mobile</font><font color="#CCCCCC"> setting and if we have two</font>

235
00:11:04,649 --> 00:11:10,350
pieces<font color="#CCCCCC"> that</font><font color="#E5E5E5"> want to perform this so</font>

236
00:11:07,709 --> 00:11:12,449
let's first look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the scenario where</font>

237
00:11:10,350 --> 00:11:16,380
<font color="#CCCCCC">we have two pieces should be implemented</font>

238
00:11:12,450 --> 00:11:18,779
these<font color="#E5E5E5"> protocols in C++ we were lucky</font>

239
00:11:16,380 --> 00:11:21,900
<font color="#E5E5E5">because we could use a</font><font color="#CCCCCC"> hardware</font>

240
00:11:18,779 --> 00:11:24,120
accelerated version of a yes for the

241
00:11:21,900 --> 00:11:27,300
last protocol<font color="#CCCCCC"> so both for encrypting the</font>

242
00:11:24,120 --> 00:11:30,000
<font color="#E5E5E5">database and for the garbage circuit</font>

243
00:11:27,300 --> 00:11:30,750
evaluation there<font color="#CCCCCC"> who ever knows</font><font color="#E5E5E5"> what</font>

244
00:11:30,000 --> 00:11:35,190
<font color="#CCCCCC">that</font><font color="#E5E5E5"> means</font>

245
00:11:30,750 --> 00:11:37,290
<font color="#E5E5E5">and so here we look at the Senate so I</font>

246
00:11:35,190 --> 00:11:39,300
put some<font color="#E5E5E5"> numbers which match the</font>

247
00:11:37,290 --> 00:11:42,180
<font color="#E5E5E5">scenario</font><font color="#CCCCCC"> with malware detection so we</font>

248
00:11:39,300 --> 00:11:46,410
have a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> millions of elements in</font>

249
00:11:42,180 --> 00:11:51,599
the in the database like 120 elements in

250
00:11:46,410 --> 00:11:54,810
the<font color="#CCCCCC"> client set and we can</font><font color="#E5E5E5"> see here</font><font color="#CCCCCC"> that</font>

251
00:11:51,600 --> 00:11:58,770
the best<font color="#E5E5E5"> so the best</font><font color="#CCCCCC"> runtime we can get</font>

252
00:11:54,810 --> 00:12:01,589
is with the<font color="#E5E5E5"> ASP protocol however it</font>

253
00:11:58,770 --> 00:12:03,360
requires<font color="#E5E5E5"> the most communication and</font>

254
00:12:01,589 --> 00:12:05,490
storage in the base<font color="#CCCCCC"> phase because the</font>

255
00:12:03,360 --> 00:12:07,980
<font color="#CCCCCC">client needs to store I'm gratified</font>

256
00:12:05,490 --> 00:12:09,690
circuits and this<font color="#CCCCCC"> then makes it less</font>

257
00:12:07,980 --> 00:12:11,370
efficient and in some<font color="#CCCCCC"> scenarios and</font>

258
00:12:09,690 --> 00:12:12,510
might be<font color="#E5E5E5"> prohibitive</font><font color="#CCCCCC"> so we need to go</font>

259
00:12:11,370 --> 00:12:15,300
for a less

260
00:12:12,510 --> 00:12:16,630
runtime efficient solution in that<font color="#E5E5E5"> case</font>

261
00:12:15,300 --> 00:12:22,370
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> can go</font>

262
00:12:16,630 --> 00:12:24,170
for now<font color="#E5E5E5"> arrival psi for example if we</font>

263
00:12:22,370 --> 00:12:26,570
don't have a yes tonight<font color="#E5E5E5"> and this</font>

264
00:12:24,170 --> 00:12:28,939
solution<font color="#E5E5E5"> is out of the question</font><font color="#CCCCCC"> so it</font>

265
00:12:26,570 --> 00:12:32,090
becomes very<font color="#E5E5E5"> less efficient than all the</font>

266
00:12:28,940 --> 00:12:34,130
others and<font color="#E5E5E5"> if we have so we implemented</font>

267
00:12:32,090 --> 00:12:37,070
it in Android<font color="#CCCCCC"> and Java</font><font color="#E5E5E5"> and there we</font>

268
00:12:34,130 --> 00:12:41,000
couldn't<font color="#E5E5E5"> use</font><font color="#CCCCCC"> AES and</font><font color="#E5E5E5"> I also the elliptic</font>

269
00:12:37,070 --> 00:12:43,970
curve cryptography<font color="#CCCCCC"> Hellman protocol</font>

270
00:12:41,000 --> 00:12:46,310
became less efficient because<font color="#E5E5E5"> that</font><font color="#CCCCCC"> was</font>

271
00:12:43,970 --> 00:12:50,660
also<font color="#E5E5E5"> not better</font><font color="#CCCCCC"> the financial version</font>

272
00:12:46,310 --> 00:12:53,479
<font color="#E5E5E5">proposed better on a mobile and elliptic</font>

273
00:12:50,660 --> 00:12:54,980
curve version<font color="#E5E5E5"> and so we see that</font><font color="#CCCCCC"> here</font>

274
00:12:53,480 --> 00:12:56,600
the best solution so with the same

275
00:12:54,980 --> 00:13:01,970
numbers here the best solution<font color="#E5E5E5"> would</font>

276
00:12:56,600 --> 00:13:04,339
probably be the IRS<font color="#E5E5E5"> a base</font><font color="#CCCCCC"> psi protocol</font>

277
00:13:01,970 --> 00:13:07,550
and then if we<font color="#CCCCCC"> look at a bigger bigger</font>

278
00:13:04,339 --> 00:13:11,150
like much larger scenario with a more

279
00:13:07,550 --> 00:13:14,810
<font color="#E5E5E5">than a billion users in the database for</font>

280
00:13:11,150 --> 00:13:17,779
<font color="#CCCCCC">a messaging service</font><font color="#E5E5E5"> and a bit more</font>

281
00:13:14,810 --> 00:13:21,949
<font color="#CCCCCC">elements</font><font color="#E5E5E5"> in the client</font><font color="#CCCCCC"> side as well then</font>

282
00:13:17,779 --> 00:13:25,130
<font color="#E5E5E5">we see that this</font><font color="#CCCCCC"> becomes inefficient so</font>

283
00:13:21,950 --> 00:13:27,430
we're not too<font color="#CCCCCC"> happy to perform</font><font color="#E5E5E5"> days of</font>

284
00:13:25,130 --> 00:13:30,140
computation in<font color="#CCCCCC"> the setup phase and that</font>

285
00:13:27,430 --> 00:13:33,609
<font color="#CCCCCC">so those days go for encrypting</font><font color="#E5E5E5"> the</font>

286
00:13:30,140 --> 00:13:36,230
<font color="#E5E5E5">database for the billions of element and</font>

287
00:13:33,610 --> 00:13:40,220
can we do anything<font color="#E5E5E5"> about that</font>

288
00:13:36,230 --> 00:13:42,710
so what<font color="#E5E5E5"> we have seen is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we can use</font>

289
00:13:40,220 --> 00:13:45,010
the same encrypted database<font color="#E5E5E5"> for multiple</font>

290
00:13:42,710 --> 00:13:47,720
clients and then we can assume<font color="#E5E5E5"> that the</font>

291
00:13:45,010 --> 00:13:50,300
service<font color="#E5E5E5"> providers will be</font><font color="#CCCCCC"> able to</font>

292
00:13:47,720 --> 00:13:52,850
<font color="#E5E5E5">encrypt the database do this couple of</font>

293
00:13:50,300 --> 00:13:55,550
days computation at some point and<font color="#E5E5E5"> then</font>

294
00:13:52,850 --> 00:13:57,710
just use this encrypted<font color="#E5E5E5"> database in the</font>

295
00:13:55,550 --> 00:13:59,900
deserted already in the bloom filter<font color="#E5E5E5"> and</font>

296
00:13:57,710 --> 00:14:03,500
send it either in a content delivery

297
00:13:59,900 --> 00:14:05,540
network or<font color="#CCCCCC"> just send it to all the</font>

298
00:14:03,500 --> 00:14:09,530
<font color="#CCCCCC">clients the same encrypted database</font><font color="#E5E5E5"> and</font>

299
00:14:05,540 --> 00:14:12,199
this helps us<font color="#E5E5E5"> save in most of the cases</font>

300
00:14:09,530 --> 00:14:13,939
except<font color="#CCCCCC"> for the diffie-hellman case it</font>

301
00:14:12,200 --> 00:14:14,830
<font color="#E5E5E5">helps us to save all these days of</font>

302
00:14:13,940 --> 00:14:18,640
computing

303
00:14:14,830 --> 00:14:20,800
or just a<font color="#E5E5E5"> couple</font><font color="#CCCCCC"> hours</font><font color="#E5E5E5"> and so for the</font>

304
00:14:18,640 --> 00:14:22,660
<font color="#CCCCCC">filmin we don't save it because the</font>

305
00:14:20,800 --> 00:14:24,670
client also participates in increasing

306
00:14:22,660 --> 00:14:27,579
the database so we<font color="#E5E5E5"> can kind of cross</font>

307
00:14:24,670 --> 00:14:29,829
this solution<font color="#E5E5E5"> out and then we see that</font>

308
00:14:27,580 --> 00:14:32,680
<font color="#E5E5E5">there's</font><font color="#CCCCCC"> still a problem which is there</font>

309
00:14:29,830 --> 00:14:36,070
we<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to store</font><font color="#E5E5E5"> around</font><font color="#CCCCCC"> five gigabytes</font>

310
00:14:32,680 --> 00:14:38,079
of data<font color="#E5E5E5"> in the in the client side so the</font>

311
00:14:36,070 --> 00:14:40,750
communication would maybe be<font color="#CCCCCC"> ok</font>

312
00:14:38,080 --> 00:14:43,150
but we also need to store this<font color="#CCCCCC"> fudge two</font>

313
00:14:40,750 --> 00:14:47,320
bytes of data<font color="#E5E5E5"> in the mobile so that's</font>

314
00:14:43,150 --> 00:14:49,660
not<font color="#CCCCCC"> that not that practical yet</font><font color="#E5E5E5"> so there</font>

315
00:14:47,320 --> 00:14:52,360
is<font color="#E5E5E5"> another work that</font><font color="#CCCCCC"> just came up</font><font color="#E5E5E5"> one or</font>

316
00:14:49,660 --> 00:14:54,880
two<font color="#E5E5E5"> weeks ago which uses</font><font color="#CCCCCC"> coupon filter</font>

317
00:14:52,360 --> 00:14:57,730
instead<font color="#E5E5E5"> of computers so they managed to</font>

318
00:14:54,880 --> 00:15:00,550
<font color="#E5E5E5">go down to around four gigabytes instead</font>

319
00:14:57,730 --> 00:15:02,580
of five point four so this gives us<font color="#CCCCCC"> some</font>

320
00:15:00,550 --> 00:15:06,699
hope<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> it can get better</font>

321
00:15:02,580 --> 00:15:09,970
for this scenario<font color="#CCCCCC"> as well but so here</font>

322
00:15:06,700 --> 00:15:11,950
the<font color="#E5E5E5"> best would be to</font><font color="#CCCCCC"> use RSA psi in any</font>

323
00:15:09,970 --> 00:15:15,160
case if we are<font color="#E5E5E5"> allowed to store this</font>

324
00:15:11,950 --> 00:15:20,860
this amount of data because that's<font color="#E5E5E5"> the</font>

325
00:15:15,160 --> 00:15:22,900
most efficient solution<font color="#E5E5E5"> so in summary we</font>

326
00:15:20,860 --> 00:15:24,640
<font color="#CCCCCC">have studied over these protocols we</font>

327
00:15:22,900 --> 00:15:26,560
wanted to see if<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> a change like</font><font color="#E5E5E5"> a</font>

328
00:15:24,640 --> 00:15:28,900
generic best solution in this scenario

329
00:15:26,560 --> 00:15:32,469
but we've seen<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it it depends</font><font color="#E5E5E5"> on the</font>

330
00:15:28,900 --> 00:15:33,939
parameters which<font color="#E5E5E5"> this scenario is the</font>

331
00:15:32,470 --> 00:15:37,990
most efficient for<font color="#E5E5E5"> our particular</font>

332
00:15:33,940 --> 00:15:41,020
<font color="#CCCCCC">application</font><font color="#E5E5E5"> and we</font><font color="#CCCCCC"> expand it with a</font>

333
00:15:37,990 --> 00:15:41,920
couple of new ideas also<font color="#E5E5E5"> so thank you</font>

334
00:15:41,020 --> 00:15:45,569
<font color="#E5E5E5">for your attention</font>

335
00:15:41,920 --> 00:15:45,569
I'm happy to answer questions

