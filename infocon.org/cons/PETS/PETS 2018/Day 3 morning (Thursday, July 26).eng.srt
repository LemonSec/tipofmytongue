1
00:00:03,090 --> 00:00:06,710
searching out laptops sorry

2
00:00:12,580 --> 00:00:17,300
[Music]

3
00:00:28,890 --> 00:01:43,280
[Music]

4
00:02:00,630 --> 00:02:03,750
[Music]

5
00:02:06,720 --> 00:02:09,799
[Music]

6
00:02:12,120 --> 00:04:09,870
[Music]

7
00:04:27,230 --> 00:04:30,350
[Music]

8
00:04:33,320 --> 00:04:36,399
[Music]

9
00:04:39,280 --> 00:04:43,008
and in<font color="#E5E5E5"> particular I'd like to stress</font>

10
00:04:41,570 --> 00:04:45,110
<font color="#CCCCCC">that I'm referring to crypto currencies</font>

11
00:04:43,009 --> 00:04:46,520
<font color="#E5E5E5">in general because there are attack</font>

12
00:04:45,110 --> 00:04:48,080
applies to a wide class of

13
00:04:46,520 --> 00:04:49,909
<font color="#CCCCCC">cryptocurrencies</font><font color="#E5E5E5"> not just Bitcoin</font>

14
00:04:48,080 --> 00:04:55,159
<font color="#E5E5E5">although for our examples</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> focus</font>

15
00:04:49,910 --> 00:04:57,500
mostly<font color="#CCCCCC"> on Bitcoin and the problem is a</font>

16
00:04:55,160 --> 00:04:59,030
<font color="#CCCCCC">one</font><font color="#E5E5E5"> that is a very pressing one an</font>

17
00:04:57,500 --> 00:05:01,669
important one<font color="#E5E5E5"> and that's Alice wants</font><font color="#CCCCCC"> to</font>

18
00:04:59,030 --> 00:05:04,460
buy a cookie<font color="#E5E5E5"> and</font><font color="#CCCCCC"> she wants to</font><font color="#E5E5E5"> pay</font><font color="#CCCCCC"> for</font>

19
00:05:01,669 --> 00:05:07,880
that cookie<font color="#CCCCCC"> and</font><font color="#E5E5E5"> in particular she wants</font>

20
00:05:04,460 --> 00:05:09,320
to buy this on a<font color="#E5E5E5"> website so we're all</font>

21
00:05:07,880 --> 00:05:11,330
<font color="#CCCCCC">familiar with</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> you'd probably do it</font>

22
00:05:09,320 --> 00:05:12,949
many times a<font color="#CCCCCC"> day I'd go</font><font color="#E5E5E5"> to Amazon</font><font color="#CCCCCC"> we go</font>

23
00:05:11,330 --> 00:05:14,930
to the product page<font color="#E5E5E5"> take the cookie we</font>

24
00:05:12,949 --> 00:05:16,460
like add it to<font color="#CCCCCC"> our car when we're done</font>

25
00:05:14,930 --> 00:05:18,500
shopping<font color="#E5E5E5"> maybe we get some milk as well</font>

26
00:05:16,460 --> 00:05:20,900
<font color="#E5E5E5">and then we add</font><font color="#CCCCCC"> that to our to our of</font>

27
00:05:18,500 --> 00:05:22,460
<font color="#E5E5E5">Kurt our car page usually gives us a</font>

28
00:05:20,900 --> 00:05:25,159
preliminary total which doesn't include

29
00:05:22,460 --> 00:05:27,409
say shipping prices and the like<font color="#E5E5E5"> and</font>

30
00:05:25,160 --> 00:05:30,830
taxes<font color="#CCCCCC"> and nano my word</font><font color="#E5E5E5"> on where you go</font>

31
00:05:27,410 --> 00:05:32,599
to the checkout page<font color="#CCCCCC"> and in a usual web</font>

32
00:05:30,830 --> 00:05:34,430
payment scenario where you say you're

33
00:05:32,599 --> 00:05:36,380
paying<font color="#E5E5E5"> with a credit card those checkout</font>

34
00:05:34,430 --> 00:05:38,090
<font color="#E5E5E5">pages sort of the last step</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> put your</font>

35
00:05:36,380 --> 00:05:39,979
<font color="#CCCCCC">credit card details in you see the</font><font color="#E5E5E5"> final</font>

36
00:05:38,090 --> 00:05:41,780
price and you're done<font color="#E5E5E5"> however</font><font color="#CCCCCC"> when</font>

37
00:05:39,979 --> 00:05:43,580
you're<font color="#E5E5E5"> paying with a cryptocurrency</font><font color="#CCCCCC"> once</font>

38
00:05:41,780 --> 00:05:44,479
you<font color="#CCCCCC"> are new checkout page you indicate</font>

39
00:05:43,580 --> 00:05:46,669
<font color="#E5E5E5">that you'd like to</font><font color="#CCCCCC"> pay with a</font>

40
00:05:44,479 --> 00:05:48,380
cryptocurrency<font color="#E5E5E5"> and then your folk</font><font color="#CCCCCC"> you're</font>

41
00:05:46,669 --> 00:05:50,150
forwarded to a payment<font color="#CCCCCC"> processor which</font>

42
00:05:48,380 --> 00:05:51,560
says<font color="#CCCCCC"> okay here's</font><font color="#E5E5E5"> the address send us</font>

43
00:05:50,150 --> 00:05:53,060
your<font color="#E5E5E5"> send us your payment and then what</font>

44
00:05:51,560 --> 00:05:55,970
<font color="#E5E5E5">only wants the opinion is receives you</font>

45
00:05:53,060 --> 00:05:57,470
you go to the final receipt page and a

46
00:05:55,970 --> 00:05:59,960
<font color="#E5E5E5">payment processor looks like this this</font>

47
00:05:57,470 --> 00:06:02,990
<font color="#E5E5E5">is</font><font color="#CCCCCC"> bitpay largest payment</font><font color="#E5E5E5"> processor and</font>

48
00:05:59,960 --> 00:06:04,549
they on your screen<font color="#E5E5E5"> that says here's the</font>

49
00:06:02,990 --> 00:06:06,289
Bitcoin price because notice<font color="#E5E5E5"> when you're</font>

50
00:06:04,550 --> 00:06:08,659
shopping you may have been shown a<font color="#CCCCCC"> Fiat</font>

51
00:06:06,289 --> 00:06:09,979
price such as a USD or<font color="#CCCCCC"> Euros but on this</font>

52
00:06:08,659 --> 00:06:11,690
page<font color="#E5E5E5"> you'll actually do the exchange</font>

53
00:06:09,979 --> 00:06:13,699
<font color="#E5E5E5">rate and tell you send exactly this many</font>

54
00:06:11,690 --> 00:06:16,669
Bitcoin to this address<font color="#E5E5E5"> and you have a</font>

55
00:06:13,699 --> 00:06:17,840
<font color="#CCCCCC">15-minute time</font><font color="#E5E5E5"> window which is your time</font>

56
00:06:16,669 --> 00:06:21,229
<font color="#CCCCCC">treat the payment and after</font><font color="#E5E5E5"> that it</font>

57
00:06:17,840 --> 00:06:23,299
expires<font color="#E5E5E5"> so</font><font color="#CCCCCC"> ok Alice wants to</font><font color="#E5E5E5"> buy cookies</font>

58
00:06:21,229 --> 00:06:26,210
<font color="#CCCCCC">she now has some idea how</font><font color="#E5E5E5"> after seeing</font>

59
00:06:23,300 --> 00:06:27,740
that<font color="#CCCCCC"> tutorial so she goes ahead</font><font color="#E5E5E5"> it's a</font>

60
00:06:26,210 --> 00:06:31,859
very expensive cookie<font color="#E5E5E5"> it</font><font color="#CCCCCC"> costs 8</font>

61
00:06:27,740 --> 00:06:33,479
bitcoins but it's really really<font color="#CCCCCC"> good so</font>

62
00:06:31,860 --> 00:06:35,550
in<font color="#CCCCCC"> Alice as well that she has these</font>

63
00:06:33,479 --> 00:06:38,128
three coins she has a<font color="#E5E5E5"> five coin a three</font>

64
00:06:35,550 --> 00:06:39,869
<font color="#E5E5E5">Bitcoin and a six Bitcoin coin and these</font>

65
00:06:38,129 --> 00:06:41,099
are Bitcoin outputs<font color="#E5E5E5"> which think of them</font>

66
00:06:39,869 --> 00:06:43,800
as each of<font color="#E5E5E5"> these are controlled by a</font>

67
00:06:41,099 --> 00:06:45,029
different<font color="#CCCCCC"> public key</font><font color="#E5E5E5"> and on the</font>

68
00:06:43,800 --> 00:06:47,189
blockchain there's no way to know that

69
00:06:45,029 --> 00:06:48,839
<font color="#E5E5E5">maybe that desert if these all belong</font><font color="#CCCCCC"> to</font>

70
00:06:47,189 --> 00:06:50,849
Alice<font color="#E5E5E5"> but she owns all these because she</font>

71
00:06:48,839 --> 00:06:53,159
has three public keys and each<font color="#E5E5E5"> one has</font>

72
00:06:50,849 --> 00:06:54,869
this amount<font color="#CCCCCC"> associated with it and</font><font color="#E5E5E5"> Alice</font>

73
00:06:53,159 --> 00:06:56,550
<font color="#CCCCCC">was really really</font><font color="#E5E5E5"> good at their math</font>

74
00:06:54,869 --> 00:06:58,469
class and she knew that<font color="#E5E5E5"> no problem she</font>

75
00:06:56,550 --> 00:07:02,129
can put these two in<font color="#E5E5E5"> and get her a</font>

76
00:06:58,469 --> 00:07:03,959
Bitcoin also and<font color="#E5E5E5"> noticed that she has</font>

77
00:07:02,129 --> 00:07:05,219
two inputs from<font color="#E5E5E5"> a single transaction</font><font color="#CCCCCC"> two</font>

78
00:07:03,959 --> 00:07:06,899
different coins and<font color="#E5E5E5"> this leads to</font>

79
00:07:05,219 --> 00:07:08,998
<font color="#E5E5E5">linking because</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> anyone that</font><font color="#CCCCCC"> sees</font>

80
00:07:06,899 --> 00:07:12,119
this action on<font color="#E5E5E5"> the blockchain can</font><font color="#CCCCCC"> say</font>

81
00:07:08,999 --> 00:07:14,399
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> two coins are controlled by</font>

82
00:07:12,119 --> 00:07:15,689
Alice<font color="#E5E5E5"> Cuthbert by the same person they</font>

83
00:07:14,399 --> 00:07:17,819
may<font color="#E5E5E5"> not know</font><font color="#CCCCCC"> it's Alice and in</font>

84
00:07:15,689 --> 00:07:20,369
<font color="#E5E5E5">particular they can say any other coins</font>

85
00:07:17,819 --> 00:07:22,229
held by<font color="#E5E5E5"> those same addresses are also</font>

86
00:07:20,369 --> 00:07:23,999
<font color="#E5E5E5">held by the same entity so we've</font>

87
00:07:22,229 --> 00:07:25,349
clustered addresses in this<font color="#E5E5E5"> way and this</font>

88
00:07:23,999 --> 00:07:27,929
<font color="#E5E5E5">can be</font><font color="#CCCCCC"> done transitively to build up</font>

89
00:07:25,349 --> 00:07:31,378
large clusters<font color="#E5E5E5"> and this is a an</font><font color="#CCCCCC"> idea</font>

90
00:07:27,929 --> 00:07:38,758
going<font color="#E5E5E5"> back to 2011</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> long work by</font>

91
00:07:31,379 --> 00:07:39,809
Sarah Michael John is expanded on<font color="#E5E5E5"> this</font>

92
00:07:38,759 --> 00:07:41,550
and<font color="#CCCCCC"> you've</font><font color="#E5E5E5"> other your</font><font color="#CCCCCC"> wrists it's before</font>

93
00:07:39,809 --> 00:07:43,110
our purposes<font color="#CCCCCC"> let's just think</font><font color="#E5E5E5"> of</font>

94
00:07:41,550 --> 00:07:45,269
clustering as a black box one<font color="#E5E5E5"> of the</font>

95
00:07:43,110 --> 00:07:48,959
things that it<font color="#E5E5E5"> uses is this shared</font>

96
00:07:45,269 --> 00:07:50,129
spending heuristic okay so how does

97
00:07:48,959 --> 00:07:52,919
clustering work so you<font color="#E5E5E5"> have all these</font>

98
00:07:50,129 --> 00:07:54,629
coins<font color="#E5E5E5"> that are not clearly associated</font>

99
00:07:52,919 --> 00:07:56,938
with each other<font color="#E5E5E5"> and then you run your</font>

100
00:07:54,629 --> 00:07:59,999
nifty clustering algorithm and boom<font color="#CCCCCC"> all</font>

101
00:07:56,939 --> 00:08:03,059
<font color="#CCCCCC">the coins get colored</font><font color="#E5E5E5"> which tells you</font>

102
00:07:59,999 --> 00:08:04,289
<font color="#CCCCCC">that there's some shared shared spending</font>

103
00:08:03,059 --> 00:08:06,749
among them and you can<font color="#CCCCCC"> cluster them and</font>

104
00:08:04,289 --> 00:08:09,568
say<font color="#E5E5E5"> okay these coins are controlled by a</font>

105
00:08:06,749 --> 00:08:11,189
similar entity<font color="#CCCCCC"> device one entity</font><font color="#E5E5E5"> so each</font>

106
00:08:09,569 --> 00:08:12,659
<font color="#CCCCCC">of these clusters represents one</font><font color="#E5E5E5"> logical</font>

107
00:08:11,189 --> 00:08:14,369
and today even though<font color="#E5E5E5"> each of these</font>

108
00:08:12,659 --> 00:08:16,050
coins<font color="#CCCCCC"> may be</font><font color="#E5E5E5"> from a different address</font>

109
00:08:14,369 --> 00:08:19,199
but now you know<font color="#E5E5E5"> that these address are</font>

110
00:08:16,050 --> 00:08:21,029
controlled by<font color="#E5E5E5"> a single entity okay so</font>

111
00:08:19,199 --> 00:08:22,800
how do you sort<font color="#E5E5E5"> of what's one you wrist</font>

112
00:08:21,029 --> 00:08:24,689
ik that's common to great clustering you

113
00:08:22,800 --> 00:08:26,639
use what's<font color="#CCCCCC"> known as</font><font color="#E5E5E5"> the big thing we're</font>

114
00:08:24,689 --> 00:08:28,169
looking at decentralized<font color="#CCCCCC"> mixing</font><font color="#E5E5E5"> which is</font>

115
00:08:26,639 --> 00:08:30,389
coin joint<font color="#E5E5E5"> and the basic</font><font color="#CCCCCC"> idea is very</font>

116
00:08:28,169 --> 00:08:31,679
simple<font color="#CCCCCC"> you have here four people getting</font>

117
00:08:30,389 --> 00:08:33,329
together<font color="#E5E5E5"> each of them have</font><font color="#CCCCCC"> clusters of</font>

118
00:08:31,679 --> 00:08:35,279
addresses<font color="#CCCCCC"> and they create a jointly a</font>

119
00:08:33,328 --> 00:08:37,169
single transaction<font color="#E5E5E5"> in which they each</font>

120
00:08:35,279 --> 00:08:38,969
input<font color="#E5E5E5"> a coin and out and output a new</font>

121
00:08:37,169 --> 00:08:41,598
coin to a fresh address and in

122
00:08:38,969 --> 00:08:44,309
particular these fresh addresses

123
00:08:41,599 --> 00:08:46,379
now put<font color="#CCCCCC"> address the input address so now</font>

124
00:08:44,309 --> 00:08:48,449
all these<font color="#CCCCCC"> people coming out have an</font>

125
00:08:46,379 --> 00:08:50,819
onion<font color="#E5E5E5"> anonymity set of four because you</font>

126
00:08:48,449 --> 00:08:52,859
know that it's one<font color="#E5E5E5"> of these one</font><font color="#CCCCCC"> of the</font>

127
00:08:50,819 --> 00:08:54,569
inputs corresponds to each output<font color="#E5E5E5"> you</font>

128
00:08:52,860 --> 00:08:56,670
don't know which one<font color="#E5E5E5"> and you can do this</font>

129
00:08:54,569 --> 00:08:59,699
<font color="#E5E5E5">in rounds and you can get this way get</font><font color="#CCCCCC"> a</font>

130
00:08:56,670 --> 00:09:02,009
large anonymity set of many coins<font color="#E5E5E5"> that</font>

131
00:08:59,699 --> 00:09:04,769
if not clear<font color="#E5E5E5"> which coin is actually</font>

132
00:09:02,009 --> 00:09:06,300
<font color="#CCCCCC">belong belongs</font><font color="#E5E5E5"> to you okay and this</font>

133
00:09:04,769 --> 00:09:07,769
leads us to<font color="#CCCCCC"> our first attack which</font><font color="#E5E5E5"> is a</font>

134
00:09:06,300 --> 00:09:09,868
single transaction<font color="#CCCCCC"> with linkage attack</font>

135
00:09:07,769 --> 00:09:12,089
<font color="#E5E5E5">so Alice wants</font><font color="#CCCCCC"> to buy a cookie she's</font>

136
00:09:09,869 --> 00:09:13,050
getting there<font color="#E5E5E5"> she has a cluster</font><font color="#CCCCCC"> of coins</font>

137
00:09:12,089 --> 00:09:14,610
so what<font color="#CCCCCC"> does</font><font color="#E5E5E5"> she do</font>

138
00:09:13,050 --> 00:09:18,269
she goes ahead<font color="#E5E5E5"> and sends</font><font color="#CCCCCC"> whatever coins</font>

139
00:09:14,610 --> 00:09:19,949
to the<font color="#E5E5E5"> shop and the shop goes back and</font>

140
00:09:18,269 --> 00:09:22,559
sends the cookie<font color="#E5E5E5"> and everyone's happy</font>

141
00:09:19,949 --> 00:09:24,269
except shopping now say well I saw this

142
00:09:22,559 --> 00:09:26,730
coin and I know that these what caused

143
00:09:24,269 --> 00:09:30,569
this<font color="#E5E5E5"> whole cluster belongs to Alice Oh</font>

144
00:09:26,730 --> 00:09:32,429
shop identified<font color="#E5E5E5"> outs okay that's clear</font>

145
00:09:30,569 --> 00:09:33,628
and<font color="#CCCCCC"> that can happen</font><font color="#E5E5E5"> but the question</font>

146
00:09:32,429 --> 00:09:35,790
<font color="#CCCCCC">that we asked one of</font><font color="#E5E5E5"> the questions we</font>

147
00:09:33,629 --> 00:09:38,129
<font color="#E5E5E5">asked these paper is what can the third</font>

148
00:09:35,790 --> 00:09:40,110
party<font color="#E5E5E5"> track or sitting on</font><font color="#CCCCCC"> allison on the</font>

149
00:09:38,129 --> 00:09:42,540
<font color="#E5E5E5">shop website identify about Alice now</font>

150
00:09:40,110 --> 00:09:44,129
clearly if the tracker sees everything

151
00:09:42,540 --> 00:09:45,509
and<font color="#E5E5E5"> sees the Bitcoin payment address it</font>

152
00:09:44,129 --> 00:09:47,100
<font color="#E5E5E5">can go ahead and say though this is</font>

153
00:09:45,509 --> 00:09:48,509
Alice's transaction and do the

154
00:09:47,100 --> 00:09:49,620
clustering itself so if it has the<font color="#E5E5E5"> same</font>

155
00:09:48,509 --> 00:09:50,730
<font color="#E5E5E5">information as the</font><font color="#CCCCCC"> merchant there's</font>

156
00:09:49,620 --> 00:09:53,759
nothing<font color="#CCCCCC"> interesting here</font><font color="#E5E5E5"> but the</font>

157
00:09:50,730 --> 00:09:55,139
interesting question is in cases<font color="#E5E5E5"> of</font>

158
00:09:53,759 --> 00:09:56,629
uncertainty where the tracker doesn't

159
00:09:55,139 --> 00:10:00,120
have the payment address maybe it has

160
00:09:56,629 --> 00:10:02,309
the Fiat<font color="#CCCCCC"> the fiat game it maybe it</font><font color="#E5E5E5"> has</font>

161
00:10:00,120 --> 00:10:03,839
just<font color="#E5E5E5"> the payment price maybe it does</font>

162
00:10:02,309 --> 00:10:05,939
<font color="#CCCCCC">even have the full price maybe there's</font>

163
00:10:03,839 --> 00:10:07,610
private uncertainty so the<font color="#E5E5E5"> trackers is</font>

164
00:10:05,939 --> 00:10:10,379
at the<font color="#E5E5E5"> core page it</font><font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> know</font>

165
00:10:07,610 --> 00:10:13,259
shipping if there's shipping or no

166
00:10:10,379 --> 00:10:15,089
shipping<font color="#E5E5E5"> or what the tax was and so we</font>

167
00:10:13,259 --> 00:10:18,209
<font color="#E5E5E5">model price and certainty by giving a</font>

168
00:10:15,089 --> 00:10:19,740
small<font color="#CCCCCC"> number of</font><font color="#E5E5E5"> fixed value samples from</font>

169
00:10:18,209 --> 00:10:21,329
actual shipping rates that we did in our

170
00:10:19,740 --> 00:10:22,559
<font color="#E5E5E5">Corolla which I'll describe later</font><font color="#CCCCCC"> and</font>

171
00:10:21,329 --> 00:10:24,329
always including<font color="#E5E5E5"> zero because zero</font>

172
00:10:22,559 --> 00:10:25,589
represents<font color="#CCCCCC"> free shipping and this</font><font color="#E5E5E5"> is how</font>

173
00:10:24,329 --> 00:10:26,939
we<font color="#E5E5E5"> modeled price</font><font color="#CCCCCC"> answers</font><font color="#E5E5E5"> and then</font>

174
00:10:25,589 --> 00:10:28,679
there's exchange rate uncertainty so

175
00:10:26,939 --> 00:10:30,089
anyone<font color="#E5E5E5"> can go and</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> a look at any</font>

176
00:10:28,679 --> 00:10:31,170
<font color="#E5E5E5">given second what the exchange rate is</font>

177
00:10:30,089 --> 00:10:32,970
and that's<font color="#E5E5E5"> pretty clear and</font>

178
00:10:31,170 --> 00:10:34,170
straightforward<font color="#E5E5E5"> but the question is I</font>

179
00:10:32,970 --> 00:10:36,629
don't<font color="#E5E5E5"> know the exact second that</font><font color="#CCCCCC"> much</font>

180
00:10:34,170 --> 00:10:38,959
<font color="#CCCCCC">sheiks exchange rate was computed</font><font color="#E5E5E5"> maybe</font>

181
00:10:36,629 --> 00:10:42,440
you know and<font color="#CCCCCC"> within a few seconds or</font>

182
00:10:38,960 --> 00:10:44,390
<font color="#E5E5E5">and this can be very volatile so in the</font>

183
00:10:42,440 --> 00:10:46,130
third level of<font color="#CCCCCC"> uncertainty is payment</font>

184
00:10:44,390 --> 00:10:47,420
<font color="#CCCCCC">finance authority you know</font><font color="#E5E5E5"> that alice is</font>

185
00:10:46,130 --> 00:10:49,160
going to send<font color="#E5E5E5"> the</font><font color="#CCCCCC"> payment to the</font>

186
00:10:47,420 --> 00:10:51,170
<font color="#E5E5E5">blockchain within these 15</font><font color="#CCCCCC"> minutes but</font>

187
00:10:49,160 --> 00:10:52,370
<font color="#CCCCCC">you don't know exactly</font><font color="#E5E5E5"> what it is maybe</font>

188
00:10:51,170 --> 00:10:53,569
it's<font color="#CCCCCC"> 15</font><font color="#E5E5E5"> minutes</font><font color="#CCCCCC"> maybe you have some</font>

189
00:10:52,370 --> 00:10:54,890
better<font color="#E5E5E5"> ideas</font><font color="#CCCCCC"> so depending</font><font color="#E5E5E5"> on the</font>

190
00:10:53,570 --> 00:10:57,500
<font color="#CCCCCC">information that the tracker can see</font>

191
00:10:54,890 --> 00:10:59,180
<font color="#E5E5E5">there a lot there's lots of different</font>

192
00:10:57,500 --> 00:11:00,380
places<font color="#E5E5E5"> for uncertainty some trackers</font>

193
00:10:59,180 --> 00:11:02,209
<font color="#E5E5E5">will have more</font><font color="#CCCCCC"> someone have less but</font>

194
00:11:00,380 --> 00:11:04,640
<font color="#E5E5E5">I'll get the details for that</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> for</font>

195
00:11:02,210 --> 00:11:06,890
now anyway in<font color="#E5E5E5"> our paper so we</font><font color="#CCCCCC"> try</font><font color="#E5E5E5"> to</font>

196
00:11:04,640 --> 00:11:08,960
estimate this link ability and<font color="#E5E5E5"> we use</font>

197
00:11:06,890 --> 00:11:10,939
blocks<font color="#E5E5E5"> I to simulate</font><font color="#CCCCCC"> 10,000 payment</font>

198
00:11:08,960 --> 00:11:12,890
flows<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> modeled uncertainty in</font><font color="#E5E5E5"> this</font>

199
00:11:10,940 --> 00:11:14,420
way and in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> example this</font><font color="#E5E5E5"> is our</font>

200
00:11:12,890 --> 00:11:16,580
default<font color="#E5E5E5"> parameters where the price and</font>

201
00:11:14,420 --> 00:11:18,800
<font color="#E5E5E5">certainty set is</font><font color="#CCCCCC"> 5 meaning</font><font color="#E5E5E5"> you know that</font>

202
00:11:16,580 --> 00:11:20,090
it's one<font color="#E5E5E5"> of five prices based on say the</font>

203
00:11:18,800 --> 00:11:22,430
shipping prices<font color="#CCCCCC"> that the vendor offers</font>

204
00:11:20,090 --> 00:11:23,660
it<font color="#CCCCCC"> you know that</font><font color="#E5E5E5"> the exchange rate</font>

205
00:11:22,430 --> 00:11:24,829
<font color="#CCCCCC">window you're assuming</font><font color="#E5E5E5"> that it's a</font>

206
00:11:23,660 --> 00:11:26,990
<font color="#CCCCCC">five-minute</font><font color="#E5E5E5"> window and you're assuming</font>

207
00:11:24,830 --> 00:11:29,680
that<font color="#E5E5E5"> the customer pain in 15 minute</font>

208
00:11:26,990 --> 00:11:32,450
payment window under these conditions

209
00:11:29,680 --> 00:11:34,160
<font color="#E5E5E5">about 62 percent of the</font><font color="#CCCCCC"> time the</font>

210
00:11:32,450 --> 00:11:36,290
anonymity set is<font color="#E5E5E5"> 1 what does that mean</font>

211
00:11:34,160 --> 00:11:37,579
it means if the tracker<font color="#E5E5E5"> would look on</font>

212
00:11:36,290 --> 00:11:39,230
the blockchain with all these parameters

213
00:11:37,580 --> 00:11:40,850
for<font color="#CCCCCC"> all the transactions that that meet</font>

214
00:11:39,230 --> 00:11:43,010
these<font color="#E5E5E5"> criteria</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> exactly one</font>

215
00:11:40,850 --> 00:11:44,690
transaction<font color="#CCCCCC"> and it will be unique</font><font color="#E5E5E5"> which</font>

216
00:11:43,010 --> 00:11:46,130
means that the tracker<font color="#E5E5E5"> even with partial</font>

217
00:11:44,690 --> 00:11:47,630
information<font color="#CCCCCC"> in fact doesn't have the</font>

218
00:11:46,130 --> 00:11:50,240
Bitcoin address the tracker doesn't have

219
00:11:47,630 --> 00:11:52,490
<font color="#CCCCCC">Alice's the exact Bitcoin payment price</font>

220
00:11:50,240 --> 00:11:54,100
<font color="#E5E5E5">even where the tracker can identify the</font>

221
00:11:52,490 --> 00:11:56,630
transaction with its limited<font color="#CCCCCC"> information</font>

222
00:11:54,100 --> 00:11:59,180
with that<font color="#E5E5E5"> we'll build on this</font><font color="#CCCCCC"> through</font>

223
00:11:56,630 --> 00:12:01,670
our cluster<font color="#E5E5E5"> intersection and again Alice</font>

224
00:11:59,180 --> 00:12:02,540
really really wants<font color="#CCCCCC"> his cookie but she's</font>

225
00:12:01,670 --> 00:12:03,979
<font color="#E5E5E5">smarter she doesn't want</font><font color="#CCCCCC"> to be</font>

226
00:12:02,540 --> 00:12:06,140
<font color="#CCCCCC">identified</font><font color="#E5E5E5"> the first she mixes a coin</font>

227
00:12:03,980 --> 00:12:08,960
with<font color="#E5E5E5"> coin</font><font color="#CCCCCC"> join now she gets</font><font color="#E5E5E5"> a beautiful</font>

228
00:12:06,140 --> 00:12:11,330
freshly mixed coin and she goes ahead

229
00:12:08,960 --> 00:12:13,160
and<font color="#CCCCCC"> sends</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> to shop and shop sends</font>

230
00:12:11,330 --> 00:12:14,630
back the<font color="#E5E5E5"> cookie and now shop can't</font>

231
00:12:13,160 --> 00:12:17,660
identify the cluster because<font color="#E5E5E5"> the coin is</font>

232
00:12:14,630 --> 00:12:19,340
<font color="#CCCCCC">mixed it knows that there's anonymity</font>

233
00:12:17,660 --> 00:12:20,569
anonymity<font color="#E5E5E5"> set associated with it here</font>

234
00:12:19,340 --> 00:12:22,520
<font color="#CCCCCC">the real assume there's only one round</font>

235
00:12:20,570 --> 00:12:24,130
of mixing<font color="#E5E5E5"> so it knows</font><font color="#CCCCCC"> alice is one of</font>

236
00:12:22,520 --> 00:12:27,079
these<font color="#E5E5E5"> clusters but it doesn't know which</font>

237
00:12:24,130 --> 00:12:28,670
<font color="#E5E5E5">ok and now Alice wants to go ahead and</font>

238
00:12:27,080 --> 00:12:30,590
buy some<font color="#E5E5E5"> milk</font><font color="#CCCCCC"> so she</font><font color="#E5E5E5"> goes to</font><font color="#CCCCCC"> a different</font>

239
00:12:28,670 --> 00:12:32,479
shop<font color="#E5E5E5"> the milk store and does the same</font>

240
00:12:30,590 --> 00:12:37,210
thing she mixes coins<font color="#E5E5E5"> with a different</font>

241
00:12:32,480 --> 00:12:40,070
set of<font color="#CCCCCC"> participants and great she she</font>

242
00:12:37,210 --> 00:12:42,060
has a freshly mixed coin<font color="#E5E5E5"> sends it to</font>

243
00:12:40,070 --> 00:12:44,160
shop shop sends back some milk

244
00:12:42,060 --> 00:12:48,599
and shop<font color="#E5E5E5"> -</font><font color="#CCCCCC"> it doesn't</font><font color="#E5E5E5"> either no</font><font color="#CCCCCC"> ALS's</font>

245
00:12:44,160 --> 00:12:50,130
cluster<font color="#E5E5E5"> now what</font><font color="#CCCCCC"> he said associated with</font>

246
00:12:48,600 --> 00:12:52,260
it it's one of<font color="#E5E5E5"> these four clusters but</font>

247
00:12:50,130 --> 00:12:53,850
it can identify<font color="#CCCCCC"> Ellis</font><font color="#E5E5E5"> and again if in</font>

248
00:12:52,260 --> 00:12:55,319
practice you do many rounds of<font color="#E5E5E5"> mixing</font>

249
00:12:53,850 --> 00:12:57,710
you won't really<font color="#E5E5E5"> be</font><font color="#CCCCCC"> at any set of</font><font color="#E5E5E5"> size</font>

250
00:12:55,320 --> 00:13:00,210
<font color="#CCCCCC">four it will be much much larger</font><font color="#E5E5E5"> great</font>

251
00:12:57,710 --> 00:13:04,590
but<font color="#E5E5E5"> what about a tracker present on both</font>

252
00:13:00,210 --> 00:13:06,690
shop<font color="#CCCCCC"> 1 and shop</font><font color="#E5E5E5"> to site and so</font><font color="#CCCCCC"> shop</font><font color="#E5E5E5"> ones</font>

253
00:13:04,590 --> 00:13:08,130
view is these<font color="#CCCCCC"> shops two of you in these</font>

254
00:13:06,690 --> 00:13:10,290
<font color="#CCCCCC">four clusters</font><font color="#E5E5E5"> and notice that there's</font>

255
00:13:08,130 --> 00:13:12,780
<font color="#CCCCCC">one thing in common the intersection is</font>

256
00:13:10,290 --> 00:13:14,069
exactly that cluster so shop<font color="#CCCCCC"> to sitting</font>

257
00:13:12,780 --> 00:13:15,510
on<font color="#E5E5E5"> both these sites and knowing well</font>

258
00:13:14,070 --> 00:13:16,860
<font color="#CCCCCC">analysts made a purchase here in a</font>

259
00:13:15,510 --> 00:13:20,819
<font color="#CCCCCC">purchase</font><font color="#E5E5E5"> there can do the intersection</font>

260
00:13:16,860 --> 00:13:22,680
attack<font color="#E5E5E5"> and say great</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is exactly</font>

261
00:13:20,820 --> 00:13:24,960
<font color="#E5E5E5">Alice's clustered and intersection</font>

262
00:13:22,680 --> 00:13:26,670
attacks of applied have been presented

263
00:13:24,960 --> 00:13:28,290
in<font color="#CCCCCC"> the communications literature</font><font color="#E5E5E5"> but we</font>

264
00:13:26,670 --> 00:13:31,560
showed that<font color="#E5E5E5"> this is very very practical</font>

265
00:13:28,290 --> 00:13:33,360
<font color="#E5E5E5">in cryptocurrencies as well and we</font>

266
00:13:31,560 --> 00:13:35,729
didn't a<font color="#CCCCCC"> large-scale measurement where</font>

267
00:13:33,360 --> 00:13:37,260
we first identified a real coin<font color="#E5E5E5"> joint</font>

268
00:13:35,730 --> 00:13:40,800
<font color="#CCCCCC">attacks on the blockchain</font><font color="#E5E5E5"> and then we</font>

269
00:13:37,260 --> 00:13:43,860
simulated<font color="#E5E5E5"> a victim who mixes for up to</font>

270
00:13:40,800 --> 00:13:46,140
five<font color="#E5E5E5"> rounds and we sort of we picked a</font>

271
00:13:43,860 --> 00:13:47,910
<font color="#CCCCCC">timestamp</font><font color="#E5E5E5"> found the real coins one</font>

272
00:13:46,140 --> 00:13:49,290
attack on the blockchain and<font color="#E5E5E5"> simulated a</font>

273
00:13:47,910 --> 00:13:51,689
vixen victim mixing their coins in that

274
00:13:49,290 --> 00:13:54,540
<font color="#E5E5E5">way and then we posited an adversary</font><font color="#CCCCCC"> who</font>

275
00:13:51,690 --> 00:13:56,160
knows that two of<font color="#E5E5E5"> these two of these</font>

276
00:13:54,540 --> 00:13:58,800
coins were actually belonging<font color="#E5E5E5"> to the</font>

277
00:13:56,160 --> 00:14:01,589
same to the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> person and we said well</font>

278
00:13:58,800 --> 00:14:05,130
what<font color="#E5E5E5"> can an adversary learn can it we</font>

279
00:14:01,590 --> 00:14:06,330
identified the cluster<font color="#E5E5E5"> and again I'm</font>

280
00:14:05,130 --> 00:14:08,189
just<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> give a small sample of our</font>

281
00:14:06,330 --> 00:14:09,810
<font color="#E5E5E5">results but we found that the cluster</font>

282
00:14:08,190 --> 00:14:12,030
interception<font color="#CCCCCC"> attack attack is very</font>

283
00:14:09,810 --> 00:14:13,680
<font color="#CCCCCC">effective</font><font color="#E5E5E5"> as would be expected with the</font>

284
00:14:12,030 --> 00:14:15,630
number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> rounds of mixing it degrades</font>

285
00:14:13,680 --> 00:14:18,150
there's also<font color="#E5E5E5"> be expected</font><font color="#CCCCCC"> some more</font>

286
00:14:15,630 --> 00:14:20,070
observations<font color="#CCCCCC"> you have improved so the</font>

287
00:14:18,150 --> 00:14:21,810
<font color="#E5E5E5">intersection of two of two different</font>

288
00:14:20,070 --> 00:14:23,700
payment<font color="#CCCCCC"> of payment addresses would</font><font color="#E5E5E5"> be</font>

289
00:14:21,810 --> 00:14:25,560
smaller but<font color="#E5E5E5"> the</font><font color="#CCCCCC"> intersection if you see</font>

290
00:14:23,700 --> 00:14:27,420
at the<font color="#CCCCCC"> track of</font><font color="#E5E5E5"> nodes that say Alice has</font>

291
00:14:25,560 --> 00:14:29,640
three four or<font color="#CCCCCC"> five purchases the</font>

292
00:14:27,420 --> 00:14:31,140
intersection is likely sorry smaller and

293
00:14:29,640 --> 00:14:34,230
<font color="#CCCCCC">it has a much larger chance of being</font>

294
00:14:31,140 --> 00:14:36,030
unique<font color="#E5E5E5"> finally we did a web measurement</font>

295
00:14:34,230 --> 00:14:38,880
and we said well what<font color="#E5E5E5"> can attackers</font><font color="#CCCCCC"> what</font>

296
00:14:36,030 --> 00:14:40,439
<font color="#CCCCCC">contractures actually see on</font><font color="#E5E5E5"> the coin</font>

297
00:14:38,880 --> 00:14:44,939
pages and we had some<font color="#E5E5E5"> pretty astounding</font>

298
00:14:40,440 --> 00:14:46,760
<font color="#E5E5E5">findings the top level view of zat</font><font color="#CCCCCC"> 40%</font>

299
00:14:44,940 --> 00:14:51,620
<font color="#E5E5E5">of the transaction</font>

300
00:14:46,760 --> 00:14:54,560
<font color="#CCCCCC">her party's</font><font color="#E5E5E5"> 35% sorry but 41% of</font><font color="#CCCCCC"> tako</font>

301
00:14:51,620 --> 00:14:55,640
besides the transaction relevant details

302
00:14:54,560 --> 00:14:56,900
to third parties<font color="#CCCCCC"> that</font><font color="#E5E5E5"> would help them</font>

303
00:14:55,640 --> 00:15:00,620
identify transactions in the blockchain

304
00:14:56,900 --> 00:15:02,329
<font color="#E5E5E5">and 35% leaked PII and</font><font color="#CCCCCC"> noticed that the</font>

305
00:15:00,620 --> 00:15:03,890
PII<font color="#CCCCCC"> leak doesn't have to happen</font><font color="#E5E5E5"> on the</font>

306
00:15:02,330 --> 00:15:06,110
same<font color="#E5E5E5"> website</font><font color="#CCCCCC"> if there's a third site in</font>

307
00:15:03,890 --> 00:15:08,840
<font color="#E5E5E5">which Alice paid with just a credit card</font>

308
00:15:06,110 --> 00:15:10,430
<font color="#E5E5E5">but she used she but that site sent some</font>

309
00:15:08,840 --> 00:15:12,920
PII to the third party<font color="#CCCCCC"> the</font><font color="#E5E5E5"> third party</font>

310
00:15:10,430 --> 00:15:15,109
can<font color="#CCCCCC"> use</font><font color="#E5E5E5"> that to tag it with alice's</font>

311
00:15:12,920 --> 00:15:17,870
address assuming it has a cookie<font color="#E5E5E5"> on each</font>

312
00:15:15,110 --> 00:15:20,150
of these<font color="#E5E5E5"> sites and we used open wpm for</font>

313
00:15:17,870 --> 00:15:21,400
<font color="#E5E5E5">our web measurements finally we did an</font>

314
00:15:20,150 --> 00:15:23,180
end-to-end measurement where we actually

315
00:15:21,400 --> 00:15:24,650
participated and<font color="#E5E5E5"> really took hope we</font>

316
00:15:23,180 --> 00:15:26,870
simulated<font color="#E5E5E5"> a wallet that started off with</font>

317
00:15:24,650 --> 00:15:28,730
well we took a real<font color="#CCCCCC"> while that we had a</font>

318
00:15:26,870 --> 00:15:30,140
<font color="#E5E5E5">real trend spending patterns that the</font>

319
00:15:28,730 --> 00:15:31,210
coins<font color="#E5E5E5"> were clustered by our clustering</font>

320
00:15:30,140 --> 00:15:33,350
algorithm and we went ahead and

321
00:15:31,210 --> 00:15:35,000
participated in coin<font color="#CCCCCC"> joins</font><font color="#E5E5E5"> to mix these</font>

322
00:15:33,350 --> 00:15:37,790
coins<font color="#CCCCCC"> now you</font><font color="#E5E5E5"> enter 20 different sites</font>

323
00:15:35,000 --> 00:15:39,290
and we<font color="#E5E5E5"> made purchases at these sites and</font>

324
00:15:37,790 --> 00:15:41,540
<font color="#CCCCCC">we looked at what</font><font color="#E5E5E5"> trackers were on each</font>

325
00:15:39,290 --> 00:15:43,310
site<font color="#E5E5E5"> and a particularly good for overlap</font>

326
00:15:41,540 --> 00:15:45,949
in trackers<font color="#CCCCCC"> that could see two of</font><font color="#E5E5E5"> them</font>

327
00:15:43,310 --> 00:15:48,229
and<font color="#E5E5E5"> we found that there were 25 pairs of</font>

328
00:15:45,950 --> 00:15:51,410
sites in<font color="#E5E5E5"> which two trackers overlap and</font>

329
00:15:48,230 --> 00:15:54,350
under conservative consumptions<font color="#CCCCCC"> and 80</font>

330
00:15:51,410 --> 00:15:56,930
<font color="#CCCCCC">percent of</font><font color="#E5E5E5"> those sites the trackers</font>

331
00:15:54,350 --> 00:15:58,190
could our attack<font color="#CCCCCC"> work</font><font color="#E5E5E5"> tend</font><font color="#CCCCCC"> to enter</font>

332
00:15:56,930 --> 00:16:00,560
<font color="#E5E5E5">first that they can use their partial</font>

333
00:15:58,190 --> 00:16:02,300
<font color="#E5E5E5">information</font><font color="#CCCCCC"> to identify</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> payment</font>

334
00:16:00,560 --> 00:16:03,680
transactions and second once they have

335
00:16:02,300 --> 00:16:05,060
<font color="#CCCCCC">identified the payment transactions they</font>

336
00:16:03,680 --> 00:16:07,489
could<font color="#E5E5E5"> successfully perform the cluster</font>

337
00:16:05,060 --> 00:16:10,670
interception attack leading back to

338
00:16:07,490 --> 00:16:11,900
<font color="#CCCCCC">Alice's cluster mitigations what I'm in</font>

339
00:16:10,670 --> 00:16:12,949
engaged<font color="#CCCCCC"> please attack while there are</font>

340
00:16:11,900 --> 00:16:14,810
merchants level<font color="#E5E5E5"> mitigation which</font>

341
00:16:12,950 --> 00:16:16,730
<font color="#E5E5E5">basically amounts to stop sharing so</font>

342
00:16:14,810 --> 00:16:17,780
much<font color="#E5E5E5"> data with trackers unfortunately as</font>

343
00:16:16,730 --> 00:16:21,080
we show<font color="#CCCCCC"> in our paper a lot</font><font color="#E5E5E5"> of these</font>

344
00:16:17,780 --> 00:16:23,240
<font color="#E5E5E5">sharings are intentional and we derive</font>

345
00:16:21,080 --> 00:16:25,190
<font color="#CCCCCC">divine</font><font color="#E5E5E5"> drive that based on how they're</font>

346
00:16:23,240 --> 00:16:27,380
shared if they're shared in the body<font color="#E5E5E5"> of</font>

347
00:16:25,190 --> 00:16:28,730
state<font color="#CCCCCC"> posted addresses they be a post</font>

348
00:16:27,380 --> 00:16:30,200
request<font color="#CCCCCC"> will be intentional as opposed</font>

349
00:16:28,730 --> 00:16:30,819
to<font color="#E5E5E5"> an eye referral request they would be</font>

350
00:16:30,200 --> 00:16:33,129
unintentional

351
00:16:30,819 --> 00:16:34,628
found that<font color="#E5E5E5"> most are intentional indices</font>

352
00:16:33,129 --> 00:16:36,669
expected<font color="#CCCCCC"> because these tracking</font>

353
00:16:34,629 --> 00:16:38,019
relationships are<font color="#CCCCCC"> very profitable for</font>

354
00:16:36,669 --> 00:16:40,149
<font color="#E5E5E5">merchants for merchants such as</font>

355
00:16:38,019 --> 00:16:42,759
retargeting so the best defense<font color="#CCCCCC"> for</font>

356
00:16:40,149 --> 00:16:45,069
users are self<font color="#E5E5E5"> defense</font><font color="#CCCCCC"> that is increased</font>

357
00:16:42,759 --> 00:16:46,539
rounds of mixing so we we simulated up

358
00:16:45,069 --> 00:16:49,719
to<font color="#E5E5E5"> five when we saw the attack</font><font color="#CCCCCC"> degrade</font>

359
00:16:46,539 --> 00:16:51,160
but likely if you in more rounds<font color="#E5E5E5"> of</font>

360
00:16:49,720 --> 00:16:53,979
mixing assuming that<font color="#CCCCCC"> develop number of</font>

361
00:16:51,160 --> 00:16:57,039
observations<font color="#CCCCCC"> are small</font><font color="#E5E5E5"> the attacker the</font>

362
00:16:53,979 --> 00:16:58,569
attack would not be<font color="#CCCCCC"> successful tracking</font>

363
00:16:57,039 --> 00:17:00,699
protection<font color="#E5E5E5"> such as goes through your ad</font>

364
00:16:58,569 --> 00:17:01,868
<font color="#E5E5E5">block plus that helps a bit we did we</font>

365
00:17:00,699 --> 00:17:02,919
around<font color="#E5E5E5"> the attacks with</font><font color="#CCCCCC"> trafficking</font>

366
00:17:01,869 --> 00:17:04,839
<font color="#E5E5E5">protection</font><font color="#CCCCCC"> Ellen we</font><font color="#E5E5E5"> sound there were</font>

367
00:17:02,919 --> 00:17:07,000
still leaks<font color="#E5E5E5"> but less and of course you</font>

368
00:17:04,839 --> 00:17:09,638
can use a different<font color="#E5E5E5"> payment</font><font color="#CCCCCC"> methods such</font>

369
00:17:07,000 --> 00:17:14,019
as anonymous<font color="#E5E5E5"> crypto currencies that will</font>

370
00:17:09,638 --> 00:17:15,519
this<font color="#E5E5E5"> attack should not apply to thank</font>

371
00:17:14,019 --> 00:17:17,069
you<font color="#E5E5E5"> very much for listening</font><font color="#CCCCCC"> in</font>

372
00:17:15,519 --> 00:17:19,269
conclusion<font color="#E5E5E5"> I just</font><font color="#CCCCCC"> like to say so</font>

373
00:17:17,069 --> 00:17:20,589
<font color="#E5E5E5">payments and cryptocurrencies</font><font color="#CCCCCC"> are a hard</font>

374
00:17:19,269 --> 00:17:22,870
<font color="#E5E5E5">thing to get right</font><font color="#CCCCCC"> cryptic</font><font color="#E5E5E5"> currency</font>

375
00:17:20,589 --> 00:17:25,029
<font color="#CCCCCC">payment sort of</font><font color="#E5E5E5"> the privacy sort of</font>

376
00:17:22,869 --> 00:17:26,529
merges the bad parts of data<font color="#CCCCCC"> Animas</font>

377
00:17:25,029 --> 00:17:29,940
<font color="#CCCCCC">ation we</font><font color="#E5E5E5"> have a large trove of data that</font>

378
00:17:26,529 --> 00:17:31,840
needs<font color="#E5E5E5"> to be kept private as well</font><font color="#CCCCCC"> as</font>

379
00:17:29,940 --> 00:17:33,100
<font color="#E5E5E5">payment for</font><font color="#CCCCCC"> our problems</font><font color="#E5E5E5"> that we've</font><font color="#CCCCCC"> seen</font>

380
00:17:31,840 --> 00:17:35,250
a communication networks where<font color="#E5E5E5"> you can</font>

381
00:17:33,100 --> 00:17:37,240
analyze<font color="#E5E5E5"> access patterns to learn</font>

382
00:17:35,250 --> 00:17:40,720
<font color="#E5E5E5">potential linkages between different</font>

383
00:17:37,240 --> 00:17:43,389
payments and addresses<font color="#E5E5E5"> and again this</font>

384
00:17:40,720 --> 00:17:45,850
work applies<font color="#E5E5E5"> to both</font><font color="#CCCCCC"> Bitcoin as well as</font>

385
00:17:43,389 --> 00:17:47,918
any<font color="#E5E5E5"> other standard blockchain based</font>

386
00:17:45,850 --> 00:17:49,600
<font color="#E5E5E5">cryptocurrency without</font><font color="#CCCCCC"> privacy overlaid</font>

387
00:17:47,919 --> 00:17:52,019
thank you very<font color="#CCCCCC"> much for listening</font><font color="#E5E5E5"> I'm</font>

388
00:17:49,600 --> 00:17:52,019
happy to take questions

389
00:18:05,730 --> 00:18:11,620
we'll talk<font color="#CCCCCC"> as far as I saw</font><font color="#E5E5E5"> you mainly</font>

390
00:18:09,040 --> 00:18:14,230
<font color="#E5E5E5">looked at identifying</font><font color="#CCCCCC"> people as a binary</font>

391
00:18:11,620 --> 00:18:16,750
<font color="#CCCCCC">metric</font><font color="#E5E5E5"> so if the intersection was one</font>

392
00:18:14,230 --> 00:18:18,820
then you found<font color="#E5E5E5"> the right person and if</font>

393
00:18:16,750 --> 00:18:21,880
not they're not<font color="#E5E5E5"> that you also look and</font>

394
00:18:18,820 --> 00:18:24,220
how much<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> anonymity set decreased</font>

395
00:18:21,880 --> 00:18:26,440
<font color="#E5E5E5">if you could not identify one single</font>

396
00:18:24,220 --> 00:18:29,500
<font color="#CCCCCC">person like for</font><font color="#E5E5E5"> example if it could have</font>

397
00:18:26,440 --> 00:18:32,140
been<font color="#CCCCCC"> two like do you have any</font><font color="#E5E5E5"> entry</font><font color="#CCCCCC"> 18</font>

398
00:18:29,500 --> 00:18:35,500
<font color="#CCCCCC">on how much you decrease the number of</font>

399
00:18:32,140 --> 00:18:41,680
possible<font color="#E5E5E5"> persons that could have spent</font>

400
00:18:35,500 --> 00:18:43,990
it yes it's not really a binary

401
00:18:41,680 --> 00:18:45,070
adversary the adversary<font color="#CCCCCC"> posit tries</font><font color="#E5E5E5"> to</font>

402
00:18:43,990 --> 00:18:46,600
identify a single<font color="#CCCCCC"> well then if</font>

403
00:18:45,070 --> 00:18:49,659
identifies<font color="#CCCCCC"> two it just takes sort of a</font>

404
00:18:46,600 --> 00:18:52,770
<font color="#E5E5E5">random guess and so we found that slide</font>

405
00:18:49,660 --> 00:18:54,550
<font color="#CCCCCC">that I showed there was</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> 62 percent</font>

406
00:18:52,770 --> 00:18:55,990
<font color="#CCCCCC">positive rate</font><font color="#E5E5E5"> of getting</font><font color="#CCCCCC"> a single</font>

407
00:18:54,550 --> 00:18:57,700
transaction<font color="#CCCCCC"> but they found an adversary</font>

408
00:18:55,990 --> 00:18:59,440
behaving like this that tries to<font color="#E5E5E5"> be</font>

409
00:18:57,700 --> 00:19:02,710
unique but otherwise you simply<font color="#E5E5E5"> you know</font>

410
00:18:59,440 --> 00:19:04,990
otherwise<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> a guess of the other ones</font>

411
00:19:02,710 --> 00:19:07,360
it<font color="#CCCCCC"> has a</font><font color="#E5E5E5"> 76% rate so it does improve</font>

412
00:19:04,990 --> 00:19:09,580
everything<font color="#E5E5E5"> also to say our assumptions</font>

413
00:19:07,360 --> 00:19:12,030
were<font color="#E5E5E5"> very very conservative</font><font color="#CCCCCC"> oftentimes</font>

414
00:19:09,580 --> 00:19:14,169
an adversary is a tracker is sort of

415
00:19:12,030 --> 00:19:15,639
embedded directly<font color="#E5E5E5"> on the receipt page so</font>

416
00:19:14,170 --> 00:19:16,810
it knows right when that meteorite

417
00:19:15,640 --> 00:19:19,270
<font color="#CCCCCC">Coppins and it was exactly when the</font>

418
00:19:16,810 --> 00:19:20,290
payment happens so<font color="#CCCCCC"> in in</font><font color="#E5E5E5"> in practice the</font>

419
00:19:19,270 --> 00:19:21,460
trackers often have much much<font color="#CCCCCC"> more</font>

420
00:19:20,290 --> 00:19:26,850
<font color="#E5E5E5">information which will allow the</font>

421
00:19:21,460 --> 00:19:26,850
identity to be<font color="#E5E5E5"> high as well</font><font color="#CCCCCC"> Thanks</font>

422
00:19:35,770 --> 00:19:38,799
[Music]

423
00:19:54,630 --> 00:19:57,719
[Music]

424
00:20:01,140 --> 00:20:06,689
[Music]

425
00:20:13,130 --> 00:20:24,239
[Music]

426
00:20:29,960 --> 00:20:33,069
[Music]

427
00:20:38,150 --> 00:20:41,319
[Music]

428
00:21:00,180 --> 00:21:07,480
[Music]

429
00:21:36,030 --> 00:21:39,190
[Music]

430
00:21:44,940 --> 00:21:48,079
[Music]

431
00:22:07,240 --> 00:22:19,570
so<font color="#E5E5E5"> now time</font><font color="#CCCCCC"> for summer school so I'm</font>

432
00:22:17,559 --> 00:22:25,000
<font color="#E5E5E5">presenting a solution called</font><font color="#CCCCCC"> Moebius</font>

433
00:22:19,570 --> 00:22:27,639
<font color="#E5E5E5">which is a tumblr for</font><font color="#CCCCCC"> aetherium so this</font>

434
00:22:25,000 --> 00:22:29,649
is introduced very nicely by<font color="#E5E5E5"> the</font>

435
00:22:27,640 --> 00:22:31,270
previous one this<font color="#E5E5E5"> is a way to make</font>

436
00:22:29,649 --> 00:22:33,639
tumbling<font color="#E5E5E5"> and like mixing more</font>

437
00:22:31,270 --> 00:22:37,720
frictionless so that these intersection

438
00:22:33,640 --> 00:22:40,179
attacks would like have<font color="#CCCCCC"> to work</font><font color="#E5E5E5"> over a</font>

439
00:22:37,720 --> 00:22:42,669
<font color="#E5E5E5">large range so to introduce the</font><font color="#CCCCCC"> problem</font>

440
00:22:40,179 --> 00:22:45,370
<font color="#CCCCCC">bitcoin as we know</font><font color="#E5E5E5"> isn't very anonymous</font>

441
00:22:42,669 --> 00:22:47,740
<font color="#CCCCCC">like very easily you can track money</font>

442
00:22:45,370 --> 00:22:51,129
through the ledger<font color="#E5E5E5"> and this is how</font>

443
00:22:47,740 --> 00:22:53,890
clustering tax works you can see<font color="#CCCCCC"> this</font>

444
00:22:51,130 --> 00:22:57,600
these<font color="#CCCCCC"> like very obvious links between</font>

445
00:22:53,890 --> 00:22:59,710
sender and recipients in this case so

446
00:22:57,600 --> 00:23:02,860
everyone knows that<font color="#E5E5E5"> bitcoin isn't</font>

447
00:22:59,710 --> 00:23:04,450
private so what is<font color="#CCCCCC"> privacy is the</font><font color="#E5E5E5"> like</font>

448
00:23:02,860 --> 00:23:07,990
next question that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> would want to ask</font>

449
00:23:04,450 --> 00:23:10,179
<font color="#E5E5E5">so we have different notions of</font><font color="#CCCCCC"> privacy</font>

450
00:23:07,990 --> 00:23:11,950
so<font color="#E5E5E5"> for a single transaction we would</font>

451
00:23:10,179 --> 00:23:14,500
have sender anonymity which means that

452
00:23:11,950 --> 00:23:16,870
the recipients in question<font color="#E5E5E5"> don't know</font>

453
00:23:14,500 --> 00:23:21,100
which blockchain address corresponds to

454
00:23:16,870 --> 00:23:23,820
the specific sender which would<font color="#E5E5E5"> be the</font>

455
00:23:21,100 --> 00:23:27,928
<font color="#E5E5E5">case if you use</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> naive solution of</font>

456
00:23:23,820 --> 00:23:30,370
using this like ideal trusted<font color="#E5E5E5"> tumblr</font>

457
00:23:27,929 --> 00:23:33,130
<font color="#E5E5E5">that sits in the</font><font color="#CCCCCC"> middle that is here</font>

458
00:23:30,370 --> 00:23:34,629
represented as the<font color="#CCCCCC"> bitcoin bath and the</font>

459
00:23:33,130 --> 00:23:37,330
way that this<font color="#E5E5E5"> solution would work is</font>

460
00:23:34,630 --> 00:23:39,850
<font color="#E5E5E5">that Charlie and</font><font color="#CCCCCC"> Alice 1:10 to</font><font color="#E5E5E5"> send</font>

461
00:23:37,330 --> 00:23:42,720
money<font color="#E5E5E5"> to</font><font color="#CCCCCC"> Doran Bob would just give the</font>

462
00:23:39,850 --> 00:23:45,219
<font color="#E5E5E5">money to this Bitcoin</font><font color="#CCCCCC"> bus and gives the</font>

463
00:23:42,720 --> 00:23:47,620
addresses<font color="#CCCCCC"> that they know correspond to</font>

464
00:23:45,220 --> 00:23:50,020
their intended<font color="#CCCCCC"> recipient</font><font color="#E5E5E5"> so Charlie</font>

465
00:23:47,620 --> 00:23:52,449
would give<font color="#CCCCCC"> Bob's Alice would give</font><font color="#E5E5E5"> Dora's</font>

466
00:23:50,020 --> 00:23:53,980
and then the Bitcoin bath would mix

467
00:23:52,450 --> 00:23:55,720
together all<font color="#E5E5E5"> of the money</font><font color="#CCCCCC"> and then send</font>

468
00:23:53,980 --> 00:23:58,299
it<font color="#E5E5E5"> on to the</font><font color="#CCCCCC"> intended recipients</font>

469
00:23:55,720 --> 00:24:00,940
severing the<font color="#CCCCCC"> link between the sender and</font>

470
00:23:58,299 --> 00:24:03,309
recipient<font color="#E5E5E5"> so then we</font><font color="#CCCCCC"> also have</font><font color="#E5E5E5"> received</font>

471
00:24:00,940 --> 00:24:05,140
run<font color="#E5E5E5"> an</font><font color="#CCCCCC"> annuity which means that the</font>

472
00:24:03,309 --> 00:24:07,389
<font color="#CCCCCC">senders can't</font><font color="#E5E5E5"> determine which receiver</font>

473
00:24:05,140 --> 00:24:10,960
is their<font color="#E5E5E5"> intended receiver they can just</font>

474
00:24:07,390 --> 00:24:13,779
see they know that they receive that

475
00:24:10,960 --> 00:24:16,870
they desire<font color="#E5E5E5"> to withdraw the money will</font>

476
00:24:13,779 --> 00:24:17,580
get the money<font color="#CCCCCC"> but they can't find that</font>

477
00:24:16,870 --> 00:24:19,229
<font color="#CCCCCC">mapping</font>

478
00:24:17,580 --> 00:24:21,179
between the person that they know

479
00:24:19,230 --> 00:24:23,310
<font color="#CCCCCC">they're sending money to</font><font color="#E5E5E5"> and the actual</font>

480
00:24:21,180 --> 00:24:25,740
address on the blockchain<font color="#E5E5E5"> and this means</font>

481
00:24:23,310 --> 00:24:29,250
for<font color="#E5E5E5"> example they won't be able</font><font color="#CCCCCC"> to follow</font>

482
00:24:25,740 --> 00:24:31,050
the their recipients<font color="#E5E5E5"> spending throughout</font>

483
00:24:29,250 --> 00:24:33,780
the ledger<font color="#CCCCCC"> even if they have a view of</font>

484
00:24:31,050 --> 00:24:36,149
<font color="#E5E5E5">it so we've we've met these tumblers now</font>

485
00:24:33,780 --> 00:24:38,820
and<font color="#CCCCCC"> the places</font><font color="#E5E5E5"> where you send the money</font>

486
00:24:36,150 --> 00:24:40,470
and<font color="#CCCCCC"> who prefer to be forwarded</font><font color="#E5E5E5"> on but</font>

487
00:24:38,820 --> 00:24:43,500
what does<font color="#CCCCCC"> it mean for a</font><font color="#E5E5E5"> tumbler to be</font>

488
00:24:40,470 --> 00:24:45,180
trustless because just relying on them

489
00:24:43,500 --> 00:24:46,770
completely<font color="#E5E5E5"> in exchange for hopefully</font>

490
00:24:45,180 --> 00:24:50,790
<font color="#E5E5E5">getting some anonymity doesn't seem the</font>

491
00:24:46,770 --> 00:24:52,260
<font color="#CCCCCC">best</font><font color="#E5E5E5"> solution so we want to achieve like</font>

492
00:24:50,790 --> 00:24:53,850
some<font color="#CCCCCC"> properties one of them is theft</font>

493
00:24:52,260 --> 00:24:56,010
prevention which means that this tumbler

494
00:24:53,850 --> 00:24:57,870
can't run<font color="#CCCCCC"> away with the</font><font color="#E5E5E5"> money</font><font color="#CCCCCC"> or send it</font>

495
00:24:56,010 --> 00:25:00,030
to a place where you don't<font color="#E5E5E5"> want it to go</font>

496
00:24:57,870 --> 00:25:03,209
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then the next one is availability</font>

497
00:25:00,030 --> 00:25:05,760
<font color="#CCCCCC">which means that if</font><font color="#E5E5E5"> the tumbler</font><font color="#CCCCCC"> in some</font>

498
00:25:03,210 --> 00:25:07,350
ways has enforcement's to prevent it

499
00:25:05,760 --> 00:25:08,910
from stealing the<font color="#CCCCCC"> money maybe it can</font>

500
00:25:07,350 --> 00:25:10,830
still<font color="#CCCCCC"> make it understandable so it would</font>

501
00:25:08,910 --> 00:25:14,040
just be<font color="#E5E5E5"> frozen in some place just</font>

502
00:25:10,830 --> 00:25:16,020
obviously<font color="#E5E5E5"> also not ideal</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> comparing</font>

503
00:25:14,040 --> 00:25:17,879
the solutions<font color="#E5E5E5"> that exist the naive</font>

504
00:25:16,020 --> 00:25:22,070
solution<font color="#E5E5E5"> which we introduced with</font><font color="#CCCCCC"> vas</font>

505
00:25:17,880 --> 00:25:25,140
achieves<font color="#CCCCCC"> anonymity</font><font color="#E5E5E5"> only modulo the</font>

506
00:25:22,070 --> 00:25:27,450
<font color="#E5E5E5">twisting the tumbler itself because this</font>

507
00:25:25,140 --> 00:25:29,520
person gets sent the money and the

508
00:25:27,450 --> 00:25:31,320
addresses<font color="#CCCCCC"> and they see</font><font color="#E5E5E5"> where the money</font>

509
00:25:29,520 --> 00:25:33,510
originally<font color="#E5E5E5"> came from so they know this</font>

510
00:25:31,320 --> 00:25:35,879
mapping very obviously<font color="#E5E5E5"> and so if you can</font>

511
00:25:33,510 --> 00:25:38,220
for example query that person then you

512
00:25:35,880 --> 00:25:41,430
can reveal those links availability also

513
00:25:38,220 --> 00:25:43,050
<font color="#E5E5E5">modular the tumbler because they can go</font>

514
00:25:41,430 --> 00:25:45,240
offline indefinitely and then your money

515
00:25:43,050 --> 00:25:47,820
would be<font color="#CCCCCC"> frozen death prevention is also</font>

516
00:25:45,240 --> 00:25:49,230
modular the tumbler<font color="#CCCCCC"> so if they wish just</font>

517
00:25:47,820 --> 00:25:50,939
to like spend that money for<font color="#CCCCCC"> themselves</font>

518
00:25:49,230 --> 00:25:53,550
you've given them<font color="#E5E5E5"> the</font><font color="#CCCCCC"> ability to do that</font>

519
00:25:50,940 --> 00:25:56,220
but in terms<font color="#CCCCCC"> of communication and like</font>

520
00:25:53,550 --> 00:25:58,260
frictionless Ness this rapes<font color="#E5E5E5"> pretty</font>

521
00:25:56,220 --> 00:26:00,620
highly so<font color="#E5E5E5"> off</font><font color="#CCCCCC"> gain</font><font color="#E5E5E5"> - off</font><font color="#CCCCCC"> chain</font>

522
00:25:58,260 --> 00:26:03,900
communications<font color="#E5E5E5"> is just one so the</font>

523
00:26:00,620 --> 00:26:05,070
recipient needs to tell<font color="#E5E5E5"> the sender</font><font color="#CCCCCC"> the</font>

524
00:26:03,900 --> 00:26:07,040
<font color="#E5E5E5">Bitcoin address that they want to</font>

525
00:26:05,070 --> 00:26:09,600
receive<font color="#CCCCCC"> money</font><font color="#E5E5E5"> - just</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> normal and</font>

526
00:26:07,040 --> 00:26:11,250
<font color="#CCCCCC">unchanged transactions</font><font color="#E5E5E5"> this is - so the</font>

527
00:26:09,600 --> 00:26:12,570
sender needs to send the money<font color="#CCCCCC"> to the</font>

528
00:26:11,250 --> 00:26:16,290
<font color="#CCCCCC">tumbler and then the tumbler forwards</font>

529
00:26:12,570 --> 00:26:18,899
are on which is really<font color="#CCCCCC"> good</font><font color="#E5E5E5"> so then the</font>

530
00:26:16,290 --> 00:26:22,590
next<font color="#E5E5E5"> solution is tumble bit which was</font>

531
00:26:18,900 --> 00:26:26,730
introduced in 2017 and uses RSA puzzles

532
00:26:22,590 --> 00:26:28,168
<font color="#E5E5E5">to allow the sender and receive to</font>

533
00:26:26,730 --> 00:26:31,169
interact with

534
00:26:28,169 --> 00:26:33,720
central server<font color="#CCCCCC"> off chain in a way that</font>

535
00:26:31,169 --> 00:26:35,429
<font color="#E5E5E5">money can transfer from the sender to</font>

536
00:26:33,720 --> 00:26:37,919
<font color="#CCCCCC">the receiver</font><font color="#E5E5E5"> in a way that not even the</font>

537
00:26:35,429 --> 00:26:40,470
off chain<font color="#CCCCCC"> tumblr learns</font><font color="#E5E5E5"> the morphing so</font>

538
00:26:37,919 --> 00:26:45,419
in this case and there's some specific

539
00:26:40,470 --> 00:26:47,639
<font color="#CCCCCC">conditions</font><font color="#E5E5E5"> anonymity</font><font color="#CCCCCC"> is achieved for all</font>

540
00:26:45,419 --> 00:26:49,440
parties in question<font color="#E5E5E5"> availability is</font>

541
00:26:47,639 --> 00:26:51,029
still modular the<font color="#E5E5E5"> stuff like if they run</font>

542
00:26:49,440 --> 00:26:53,460
away forever<font color="#CCCCCC"> and never come back and</font>

543
00:26:51,029 --> 00:26:56,100
<font color="#CCCCCC">don't want</font><font color="#E5E5E5"> to interact anymore then the</font>

544
00:26:53,460 --> 00:26:58,019
<font color="#E5E5E5">money</font><font color="#CCCCCC"> the transactions just</font><font color="#E5E5E5"> can't go</font>

545
00:26:56,100 --> 00:27:03,449
through<font color="#E5E5E5"> but such prevention in this case</font>

546
00:26:58,019 --> 00:27:05,070
is<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> guaranteed and but they pay</font><font color="#CCCCCC"> for</font>

547
00:27:03,450 --> 00:27:07,470
<font color="#E5E5E5">this in terms of communication so off</font>

548
00:27:05,070 --> 00:27:09,989
chain there<font color="#E5E5E5"> are</font><font color="#CCCCCC"> 12 interactions in total</font>

549
00:27:07,470 --> 00:27:13,679
<font color="#E5E5E5">between like</font><font color="#CCCCCC"> sender tumblr and recipient</font>

550
00:27:09,989 --> 00:27:15,899
and combinations of those<font color="#CCCCCC"> three and</font><font color="#E5E5E5"> on</font>

551
00:27:13,679 --> 00:27:19,799
<font color="#E5E5E5">chain communications this</font><font color="#CCCCCC"> is for which</font>

552
00:27:15,899 --> 00:27:22,109
<font color="#E5E5E5">can get expensive so the next</font><font color="#CCCCCC"> solution</font>

553
00:27:19,799 --> 00:27:24,389
is coin join which<font color="#CCCCCC"> we were introduced to</font>

554
00:27:22,109 --> 00:27:26,730
in<font color="#E5E5E5"> the last talk also and in this way</font>

555
00:27:24,389 --> 00:27:29,070
what what people<font color="#E5E5E5"> do is broadcast their</font>

556
00:27:26,730 --> 00:27:31,769
intention to spend some coins but<font color="#CCCCCC"> they</font>

557
00:27:29,070 --> 00:27:37,168
want they wish<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> so in an</font><font color="#CCCCCC"> anonymous</font>

558
00:27:31,769 --> 00:27:41,309
<font color="#CCCCCC">way with enhanced</font><font color="#E5E5E5"> anonymity so they meet</font>

559
00:27:37,169 --> 00:27:43,200
<font color="#E5E5E5">people</font><font color="#CCCCCC"> off chain in some way and instead</font>

560
00:27:41,309 --> 00:27:45,480
<font color="#E5E5E5">of</font><font color="#CCCCCC"> sending</font><font color="#E5E5E5"> a transaction which is signed</font>

561
00:27:43,200 --> 00:27:47,340
which is just from their single sender

562
00:27:45,480 --> 00:27:50,249
<font color="#CCCCCC">address</font><font color="#E5E5E5"> to the single recipients address</font>

563
00:27:47,340 --> 00:27:52,769
they make a combined transaction which

564
00:27:50,249 --> 00:27:54,239
is to all<font color="#E5E5E5"> of the intended send from all</font>

565
00:27:52,769 --> 00:27:56,039
of the<font color="#E5E5E5"> intent of</font><font color="#CCCCCC"> Sandra dresses to all</font>

566
00:27:54,239 --> 00:27:58,759
of the<font color="#CCCCCC"> intended recipients</font><font color="#E5E5E5"> and then they</font>

567
00:27:56,039 --> 00:28:01,799
pass this around<font color="#E5E5E5"> and they all sign it so</font>

568
00:27:58,759 --> 00:28:06,749
availability is modulo the<font color="#E5E5E5"> senders in</font>

569
00:28:01,799 --> 00:28:08,158
this case<font color="#E5E5E5"> because if a person broadcasts</font>

570
00:28:06,749 --> 00:28:09,869
their intention<font color="#E5E5E5"> to</font><font color="#CCCCCC"> create a transaction</font>

571
00:28:08,159 --> 00:28:11,129
<font color="#E5E5E5">and then decides</font><font color="#CCCCCC"> halfway through the</font>

572
00:28:09,869 --> 00:28:13,350
<font color="#E5E5E5">transaction they no longer want to go</font>

573
00:28:11,129 --> 00:28:15,449
through<font color="#E5E5E5"> that and refuses</font><font color="#CCCCCC"> fine then you</font>

574
00:28:13,350 --> 00:28:18,748
have an availability<font color="#CCCCCC"> problem but once</font>

575
00:28:15,450 --> 00:28:20,489
those signatures are completed then<font color="#CCCCCC"> the</font>

576
00:28:18,749 --> 00:28:22,799
transaction will go through so<font color="#CCCCCC"> fast</font>

577
00:28:20,489 --> 00:28:24,989
<font color="#CCCCCC">prevention is</font><font color="#E5E5E5"> not an issue due to like</font>

578
00:28:22,799 --> 00:28:26,580
properties of digital signatures but in

579
00:28:24,989 --> 00:28:27,749
terms of off<font color="#CCCCCC"> train communication you</font>

580
00:28:26,580 --> 00:28:29,249
really pay for<font color="#CCCCCC"> this you need to like</font>

581
00:28:27,749 --> 00:28:31,619
meet these<font color="#CCCCCC"> people who you've never</font><font color="#E5E5E5"> met</font>

582
00:28:29,249 --> 00:28:33,179
before<font color="#CCCCCC"> in some way you need</font><font color="#E5E5E5"> to</font>

583
00:28:31,619 --> 00:28:34,620
<font color="#CCCCCC">coordinate all of these transactions you</font>

584
00:28:33,179 --> 00:28:37,430
will need to be online at<font color="#E5E5E5"> the</font>

585
00:28:34,620 --> 00:28:40,290
time to do<font color="#E5E5E5"> these</font><font color="#CCCCCC"> things but unchanged</font>

586
00:28:37,430 --> 00:28:42,570
transaction wise this<font color="#E5E5E5"> is great then the</font>

587
00:28:40,290 --> 00:28:45,240
next decentralized solution is<font color="#CCCCCC"> Exim</font>

588
00:28:42,570 --> 00:28:49,350
<font color="#E5E5E5">which was introduced in</font><font color="#CCCCCC"> 2014 again</font>

589
00:28:45,240 --> 00:28:50,990
<font color="#E5E5E5">receives anonymity for the sender's but</font>

590
00:28:49,350 --> 00:28:53,730
they learn<font color="#E5E5E5"> their</font><font color="#CCCCCC"> Cyprian addresses</font>

591
00:28:50,990 --> 00:28:55,860
availability is great and the design of

592
00:28:53,730 --> 00:28:59,130
<font color="#CCCCCC">this protocol was such that it would</font>

593
00:28:55,860 --> 00:29:02,219
require no off chain communication and<font color="#CCCCCC"> I</font>

594
00:28:59,130 --> 00:29:03,510
do<font color="#E5E5E5"> this in</font><font color="#CCCCCC"> my communicating only</font><font color="#E5E5E5"> on the</font>

595
00:29:02,220 --> 00:29:06,540
<font color="#E5E5E5">Bitcoin blockchain then they use</font><font color="#CCCCCC"> it</font>

596
00:29:03,510 --> 00:29:08,490
almost<font color="#E5E5E5"> as</font><font color="#CCCCCC"> a bulletin board but in terms</font>

597
00:29:06,540 --> 00:29:10,080
of<font color="#E5E5E5"> and they pay</font><font color="#CCCCCC"> for this in terms</font><font color="#E5E5E5"> of on</font>

598
00:29:08,490 --> 00:29:11,760
chain communication so there's like

599
00:29:10,080 --> 00:29:14,340
<font color="#E5E5E5">seven transactions that need to be done</font>

600
00:29:11,760 --> 00:29:16,620
<font color="#E5E5E5">and they need to be quite spread out and</font>

601
00:29:14,340 --> 00:29:19,530
so this is like an<font color="#CCCCCC"> 11-hour</font><font color="#E5E5E5"> process in</font>

602
00:29:16,620 --> 00:29:22,678
total<font color="#E5E5E5"> um so you can see the contrast</font>

603
00:29:19,530 --> 00:29:25,170
between the set more centralized

604
00:29:22,679 --> 00:29:27,059
solutions whether the server sitting<font color="#E5E5E5"> in</font>

605
00:29:25,170 --> 00:29:28,860
between<font color="#E5E5E5"> the sender recipient which pay</font>

606
00:29:27,059 --> 00:29:30,830
for that<font color="#E5E5E5"> in availability and then the</font>

607
00:29:28,860 --> 00:29:34,709
more decentralized<font color="#E5E5E5"> solutions which</font>

608
00:29:30,830 --> 00:29:37,980
compromise in communications<font color="#CCCCCC"> in order to</font>

609
00:29:34,710 --> 00:29:39,660
make up<font color="#E5E5E5"> for these properties</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> what we</font>

610
00:29:37,980 --> 00:29:41,490
thought was is<font color="#E5E5E5"> this like an inherit</font>

611
00:29:39,660 --> 00:29:44,040
thing if you<font color="#E5E5E5"> do in a decentralized</font>

612
00:29:41,490 --> 00:29:45,929
procedure like do you need to pay for<font color="#CCCCCC"> in</font>

613
00:29:44,040 --> 00:29:50,370
terms<font color="#E5E5E5"> of communication and what we found</font>

614
00:29:45,929 --> 00:29:52,020
<font color="#E5E5E5">that was that using</font><font color="#CCCCCC"> aetherium you don't</font>

615
00:29:50,370 --> 00:29:56,189
actually<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> make this compromise</font><font color="#E5E5E5"> at</font>

616
00:29:52,020 --> 00:29:58,139
all so in this case we get<font color="#E5E5E5"> recipient</font>

617
00:29:56,190 --> 00:29:59,940
anonymity so the<font color="#CCCCCC"> senders have the</font>

618
00:29:58,140 --> 00:30:01,830
<font color="#CCCCCC">guarantee that</font><font color="#E5E5E5"> the intended receivers</font>

619
00:29:59,940 --> 00:30:06,480
will be able<font color="#E5E5E5"> to withdraw the money but</font>

620
00:30:01,830 --> 00:30:08,040
they they don't<font color="#E5E5E5"> learn which receivers</font>

621
00:30:06,480 --> 00:30:09,900
<font color="#CCCCCC">the</font><font color="#E5E5E5"> specific receive availability</font>

622
00:30:08,040 --> 00:30:11,879
guaranteed by the<font color="#CCCCCC"> ther blockchain</font><font color="#E5E5E5"> theft</font>

623
00:30:09,900 --> 00:30:14,100
prevention is guaranteed by like the

624
00:30:11,880 --> 00:30:17,250
protocol itself<font color="#CCCCCC"> of chain communications</font>

625
00:30:14,100 --> 00:30:19,889
is<font color="#E5E5E5"> to the caveat is a positive one</font>

626
00:30:17,250 --> 00:30:21,630
<font color="#E5E5E5">because this these two communications</font>

627
00:30:19,890 --> 00:30:23,940
<font color="#E5E5E5">are a different helmet key exchange</font>

628
00:30:21,630 --> 00:30:26,730
which then if you want<font color="#E5E5E5"> to repeatedly</font>

629
00:30:23,940 --> 00:30:28,020
transact<font color="#CCCCCC"> with the same people</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> will</font>

630
00:30:26,730 --> 00:30:30,540
<font color="#E5E5E5">never need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> communicate with</font><font color="#CCCCCC"> them off</font>

631
00:30:28,020 --> 00:30:32,730
train again you can<font color="#E5E5E5"> just derive new keys</font>

632
00:30:30,540 --> 00:30:34,649
and use the particle<font color="#CCCCCC"> in</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> way and</font><font color="#E5E5E5"> on</font>

633
00:30:32,730 --> 00:30:37,860
<font color="#E5E5E5">chain communications it's</font><font color="#CCCCCC"> - and again is</font>

634
00:30:34,650 --> 00:30:39,929
like to<font color="#E5E5E5"> tumblr away from</font><font color="#CCCCCC"> a tumblr um so</font>

635
00:30:37,860 --> 00:30:41,969
how do<font color="#E5E5E5"> we achieve these properties so</font>

636
00:30:39,929 --> 00:30:43,120
the first thing that<font color="#E5E5E5"> we use is if</font><font color="#CCCCCC"> your</font>

637
00:30:41,970 --> 00:30:45,220
smart contracts and

638
00:30:43,120 --> 00:30:46,659
signatures<font color="#E5E5E5"> and if you don't know how</font>

639
00:30:45,220 --> 00:30:49,780
<font color="#CCCCCC">many signatures work pretty much</font><font color="#E5E5E5"> they</font>

640
00:30:46,660 --> 00:30:52,420
like a digital<font color="#E5E5E5"> normal digital signature</font>

641
00:30:49,780 --> 00:30:53,920
has a public<font color="#CCCCCC"> and private key combination</font>

642
00:30:52,420 --> 00:30:56,350
and your signature<font color="#CCCCCC"> is produced by the</font>

643
00:30:53,920 --> 00:30:58,990
private key<font color="#CCCCCC"> verify against the public</font>

644
00:30:56,350 --> 00:31:01,990
key<font color="#E5E5E5"> ring signatures you instead take a</font>

645
00:30:58,990 --> 00:31:06,809
group<font color="#E5E5E5"> of public keys and signatures</font>

646
00:31:01,990 --> 00:31:09,520
produced by either<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the private</font><font color="#E5E5E5"> keys</font>

647
00:31:06,809 --> 00:31:11,530
<font color="#CCCCCC">verify against the whole group of public</font>

648
00:31:09,520 --> 00:31:13,389
<font color="#E5E5E5">keys in a way that doesn't reveal which</font>

649
00:31:11,530 --> 00:31:16,480
of the public keys your private key

650
00:31:13,390 --> 00:31:20,620
corresponds to so the idea of Mobius<font color="#E5E5E5"> is</font>

651
00:31:16,480 --> 00:31:22,510
that people the senders and receivers

652
00:31:20,620 --> 00:31:23,979
will communicate<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that the sender's</font>

653
00:31:22,510 --> 00:31:26,260
have the public key of their intended

654
00:31:23,980 --> 00:31:29,290
recipients<font color="#E5E5E5"> and they'll deposit this key</font>

655
00:31:26,260 --> 00:31:31,960
into a smart contract<font color="#CCCCCC"> along with some a</font>

656
00:31:29,290 --> 00:31:34,629
great denomination<font color="#E5E5E5"> of money then the</font>

657
00:31:31,960 --> 00:31:40,390
next<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that happens obviously once</font>

658
00:31:34,630 --> 00:31:42,040
<font color="#E5E5E5">the like the agreed upon number of</font><font color="#CCCCCC"> San</font>

659
00:31:40,390 --> 00:31:43,900
<font color="#CCCCCC">just have</font><font color="#E5E5E5"> deposited money so you like</font>

660
00:31:42,040 --> 00:31:48,340
<font color="#E5E5E5">this is how you form your unanimity set</font>

661
00:31:43,900 --> 00:31:50,800
then<font color="#E5E5E5"> the smart</font><font color="#CCCCCC"> contract will like be in</font>

662
00:31:48,340 --> 00:31:52,809
<font color="#E5E5E5">this state with all of the keys in then</font>

663
00:31:50,800 --> 00:31:54,879
the intended recipients<font color="#E5E5E5"> can form these</font>

664
00:31:52,809 --> 00:31:58,540
<font color="#E5E5E5">ring signatures over</font><font color="#CCCCCC"> the set of public</font>

665
00:31:54,880 --> 00:32:00,550
keys and they can withdraw<font color="#E5E5E5"> money in this</font>

666
00:31:58,540 --> 00:32:03,960
way<font color="#E5E5E5"> so the way I presented it here</font>

667
00:32:00,550 --> 00:32:08,409
<font color="#CCCCCC">however has a slight issue in that if</font>

668
00:32:03,960 --> 00:32:10,570
for<font color="#E5E5E5"> example Dora was offline then Bob</font>

669
00:32:08,410 --> 00:32:12,100
could create this ring signature and

670
00:32:10,570 --> 00:32:14,980
because of<font color="#E5E5E5"> the properties of ring</font>

671
00:32:12,100 --> 00:32:17,379
signatures like<font color="#E5E5E5"> unlink ability he would</font>

672
00:32:14,980 --> 00:32:18,670
be able<font color="#E5E5E5"> to withdraw one coin and then he</font>

673
00:32:17,380 --> 00:32:20,980
would<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to withdraw the other one</font>

674
00:32:18,670 --> 00:32:24,760
<font color="#E5E5E5">if Dora hadn't submitted her signature</font>

675
00:32:20,980 --> 00:32:26,470
in time<font color="#E5E5E5"> and so what we do is we use</font>

676
00:32:24,760 --> 00:32:28,090
linkable ring signatures so we keep

677
00:32:26,470 --> 00:32:29,950
<font color="#E5E5E5">track of the signatures that have</font>

678
00:32:28,090 --> 00:32:31,720
already been seen<font color="#E5E5E5"> and linkable</font><font color="#CCCCCC"> rick</font>

679
00:32:29,950 --> 00:32:33,760
signatures<font color="#E5E5E5"> have this additional property</font>

680
00:32:31,720 --> 00:32:39,610
that<font color="#E5E5E5"> even though you still can't</font>

681
00:32:33,760 --> 00:32:42,340
identify<font color="#E5E5E5"> which public key private key</font>

682
00:32:39,610 --> 00:32:45,000
yet which public key the private key

683
00:32:42,340 --> 00:32:47,980
that<font color="#E5E5E5"> the signature was formed with</font>

684
00:32:45,000 --> 00:32:50,350
corresponds to<font color="#E5E5E5"> you can there's like a</font>

685
00:32:47,980 --> 00:32:52,720
deterministic<font color="#E5E5E5"> tag</font>

686
00:32:50,350 --> 00:32:55,090
<font color="#E5E5E5">is associated with the signature and</font>

687
00:32:52,720 --> 00:32:57,850
every signature<font color="#E5E5E5"> that Bob will produce</font>

688
00:32:55,090 --> 00:32:59,860
will have this same tag and so if we

689
00:32:57,850 --> 00:33:02,530
<font color="#E5E5E5">keep the signature in the smart contract</font>

690
00:32:59,860 --> 00:33:04,360
<font color="#E5E5E5">then Bob can't produce more than one</font>

691
00:33:02,530 --> 00:33:06,520
<font color="#E5E5E5">signature he can't withdraw more than</font>

692
00:33:04,360 --> 00:33:09,729
once<font color="#E5E5E5"> and so you have this guarantee that</font>

693
00:33:06,520 --> 00:33:11,559
every sender will have exactly<font color="#CCCCCC"> the</font>

694
00:33:09,730 --> 00:33:15,429
recipient withdraw<font color="#E5E5E5"> exactly the money</font>

695
00:33:11,559 --> 00:33:18,910
that they sent them<font color="#CCCCCC"> then</font><font color="#E5E5E5"> in terms of</font>

696
00:33:15,429 --> 00:33:21,460
communication because<font color="#E5E5E5"> sending back and</font>

697
00:33:18,910 --> 00:33:23,020
forth<font color="#CCCCCC"> keys every time is</font><font color="#E5E5E5"> like something</font>

698
00:33:21,460 --> 00:33:27,039
which you<font color="#E5E5E5"> don't have to do if you use</font>

699
00:33:23,020 --> 00:33:30,610
for<font color="#CCCCCC"> example yeah we wanted</font><font color="#E5E5E5"> to produce an</font>

700
00:33:27,039 --> 00:33:34,419
optimization which allowed<font color="#CCCCCC"> people to</font>

701
00:33:30,610 --> 00:33:35,860
<font color="#E5E5E5">have this same if you have transacted</font>

702
00:33:34,419 --> 00:33:37,750
with someone once you can transact<font color="#E5E5E5"> with</font>

703
00:33:35,860 --> 00:33:41,379
them again without having<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> all of</font>

704
00:33:37,750 --> 00:33:42,760
this communication<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so we use this</font>

705
00:33:41,380 --> 00:33:45,120
<font color="#CCCCCC">concept that's called stealth addresses</font>

706
00:33:42,760 --> 00:33:48,840
or in<font color="#E5E5E5"> this case we use</font><font color="#CCCCCC"> the self keys and</font>

707
00:33:45,120 --> 00:33:50,979
the stealth<font color="#E5E5E5"> keys how they work is</font><font color="#CCCCCC"> that</font>

708
00:33:48,840 --> 00:33:53,289
the recipients will have long-term

709
00:33:50,980 --> 00:33:56,710
<font color="#CCCCCC">public keys but these won't</font><font color="#E5E5E5"> be the keys</font>

710
00:33:53,289 --> 00:33:59,200
<font color="#CCCCCC">that</font><font color="#E5E5E5"> are deposited into the smart</font>

711
00:33:56,710 --> 00:34:02,890
<font color="#CCCCCC">contract instead</font><font color="#E5E5E5"> keys will be derived by</font>

712
00:33:59,200 --> 00:34:06,010
the sender<font color="#E5E5E5"> in this deterministic way so</font>

713
00:34:02,890 --> 00:34:07,750
that the receiver will be able<font color="#E5E5E5"> to derive</font>

714
00:34:06,010 --> 00:34:10,600
the<font color="#CCCCCC"> corresponding private keys every</font>

715
00:34:07,750 --> 00:34:12,760
time without having<font color="#E5E5E5"> to interact and if</font>

716
00:34:10,600 --> 00:34:16,359
you're<font color="#E5E5E5"> interested this is how they're</font>

717
00:34:12,760 --> 00:34:19,419
<font color="#CCCCCC">constructed from the master public</font><font color="#E5E5E5"> keys</font>

718
00:34:16,359 --> 00:34:21,520
which<font color="#E5E5E5"> would be the receivers long-term</font>

719
00:34:19,418 --> 00:34:24,850
known public keys and in this way

720
00:34:21,520 --> 00:34:27,330
<font color="#E5E5E5">between contracts</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> if you transact</font>

721
00:34:24,850 --> 00:34:29,649
<font color="#E5E5E5">on one day and another</font><font color="#CCCCCC"> you're not linked</font>

722
00:34:27,330 --> 00:34:32,500
<font color="#CCCCCC">but you</font><font color="#E5E5E5"> don't have to do that additional</font>

723
00:34:29,649 --> 00:34:35,319
communication so we<font color="#CCCCCC"> implemented this</font>

724
00:34:32,500 --> 00:34:37,750
it's pretty extremely reasonable<font color="#E5E5E5"> so the</font>

725
00:34:35,320 --> 00:34:40,990
deposit transaction<font color="#E5E5E5"> takes pretty much no</font>

726
00:34:37,750 --> 00:34:42,940
time at<font color="#E5E5E5"> all to create is like not very</font>

727
00:34:40,989 --> 00:34:45,368
<font color="#E5E5E5">much more expensive than</font><font color="#CCCCCC"> a plain</font>

728
00:34:42,940 --> 00:34:48,070
<font color="#CCCCCC">aetherium transaction and the withdrawal</font>

729
00:34:45,369 --> 00:34:49,389
transaction<font color="#E5E5E5"> takes like a little longer</font>

730
00:34:48,070 --> 00:34:53,050
<font color="#E5E5E5">but</font><font color="#CCCCCC"> still only</font><font color="#E5E5E5"> on the scale of</font>

731
00:34:49,389 --> 00:34:53,990
milliseconds<font color="#E5E5E5"> and is we think extremely</font>

732
00:34:53,050 --> 00:34:57,950
<font color="#CCCCCC">reasonable</font>

733
00:34:53,989 --> 00:35:00,189
<font color="#E5E5E5">times of like</font><font color="#CCCCCC"> real-life cost then here</font>

734
00:34:57,950 --> 00:35:02,890
is the comparison<font color="#E5E5E5"> again to</font><font color="#CCCCCC"> live so we've</font>

735
00:35:00,190 --> 00:35:04,970
<font color="#E5E5E5">introduced Mobius which achieves like</font>

736
00:35:02,890 --> 00:35:06,618
<font color="#E5E5E5">great things in terms of availability</font>

737
00:35:04,970 --> 00:35:10,279
<font color="#CCCCCC">incest prevention but then</font><font color="#E5E5E5"> without</font>

738
00:35:06,619 --> 00:35:11,930
compromising on<font color="#E5E5E5"> the communication which</font>

739
00:35:10,280 --> 00:35:24,320
hopefully will encourage people<font color="#E5E5E5"> to mix</font>

740
00:35:11,930 --> 00:35:26,509
<font color="#E5E5E5">more often and that's all thanks</font>

741
00:35:24,320 --> 00:35:29,000
interesting work<font color="#E5E5E5"> in</font><font color="#CCCCCC"> your table if you</font>

742
00:35:26,510 --> 00:35:31,580
just go back one<font color="#CCCCCC"> I just had a question</font>

743
00:35:29,000 --> 00:35:35,540
<font color="#E5E5E5">about what</font><font color="#CCCCCC"> is the availability problem</font>

744
00:35:31,580 --> 00:35:38,029
<font color="#E5E5E5">with coin join oh so it's just if</font><font color="#CCCCCC"> during</font>

745
00:35:35,540 --> 00:35:40,670
the construction of the transaction<font color="#E5E5E5"> and</font>

746
00:35:38,030 --> 00:35:41,960
then<font color="#E5E5E5"> also like when you're all signing</font>

747
00:35:40,670 --> 00:35:43,339
<font color="#E5E5E5">the transaction</font><font color="#CCCCCC"> and passing it around</font>

748
00:35:41,960 --> 00:35:45,530
and when you're collecting<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> those</font>

749
00:35:43,339 --> 00:35:47,450
signatures<font color="#CCCCCC"> if any person decides not to</font>

750
00:35:45,530 --> 00:35:48,109
sign you have to start from<font color="#CCCCCC"> the</font>

751
00:35:47,450 --> 00:35:50,210
<font color="#CCCCCC">beginning again</font>

752
00:35:48,109 --> 00:35:53,480
<font color="#CCCCCC">well you don't lose the coins</font><font color="#E5E5E5"> right</font>

753
00:35:50,210 --> 00:35:58,820
exactly<font color="#CCCCCC"> so you know yeah</font><font color="#E5E5E5"> it's just an</font>

754
00:35:53,480 --> 00:36:01,300
inconvenience<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> okay any more</font>

755
00:35:58,820 --> 00:36:01,300
questions

756
00:36:04,670 --> 00:36:07,690
Thank You Rebecca

757
00:36:28,110 --> 00:36:31,209
[Music]

758
00:36:36,140 --> 00:36:39,640
<font color="#CCCCCC">suitability before</font>

759
00:39:36,600 --> 00:39:38,660
<font color="#E5E5E5">you</font>

760
00:44:06,830 --> 00:44:10,819
[Music]

761
00:44:24,190 --> 00:44:29,240
<font color="#CCCCCC">the network might be equally privacy</font>

762
00:44:26,840 --> 00:44:32,510
sensitive<font color="#E5E5E5"> right so our goal</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> is to</font>

763
00:44:29,240 --> 00:44:34,700
quantify<font color="#E5E5E5"> different usage types so the</font>

764
00:44:32,510 --> 00:44:36,020
<font color="#CCCCCC">first interesting thing that</font><font color="#E5E5E5"> I want to</font>

765
00:44:34,700 --> 00:44:38,750
point<font color="#E5E5E5"> out here in the graph of the</font>

766
00:44:36,020 --> 00:44:40,850
number<font color="#CCCCCC"> of transactions</font><font color="#E5E5E5"> is this dip here</font>

767
00:44:38,750 --> 00:44:42,830
in<font color="#E5E5E5"> early 2016</font>

768
00:44:40,850 --> 00:44:45,560
when seemingly the number of

769
00:44:42,830 --> 00:44:48,230
transactions on the<font color="#E5E5E5"> network was</font><font color="#CCCCCC"> gone and</font>

770
00:44:45,560 --> 00:44:49,990
<font color="#CCCCCC">this was white when Manero doubled the</font>

771
00:44:48,230 --> 00:44:53,600
<font color="#E5E5E5">block</font><font color="#CCCCCC"> interval</font><font color="#E5E5E5"> so in cryptocurrencies</font>

772
00:44:49,990 --> 00:44:55,430
<font color="#CCCCCC">every few minutes a</font><font color="#E5E5E5"> so-called entity the</font>

773
00:44:53,600 --> 00:44:57,890
<font color="#CCCCCC">miner will create a block that will</font><font color="#E5E5E5"> burn</font>

774
00:44:55,430 --> 00:44:59,899
<font color="#E5E5E5">a number of transactions and they have</font>

775
00:44:57,890 --> 00:45:03,080
to solve a computational puzzle for that

776
00:44:59,900 --> 00:45:05,210
and as a reward<font color="#CCCCCC"> they can get some coins</font>

777
00:45:03,080 --> 00:45:07,370
<font color="#E5E5E5">now these coins are delivered in a</font>

778
00:45:05,210 --> 00:45:10,040
special coinbase transaction<font color="#CCCCCC"> so when you</font>

779
00:45:07,370 --> 00:45:12,290
go from<font color="#CCCCCC"> 1 minute to 2 minutes for these</font>

780
00:45:10,040 --> 00:45:14,210
blocks<font color="#E5E5E5"> you basically have half the</font>

781
00:45:12,290 --> 00:45:16,370
amount<font color="#E5E5E5"> of</font><font color="#CCCCCC"> corn-based transactions which</font>

782
00:45:14,210 --> 00:45:18,620
means that<font color="#E5E5E5"> probably a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

783
00:45:16,370 --> 00:45:19,279
transactions<font color="#E5E5E5"> here were only related to</font>

784
00:45:18,620 --> 00:45:22,310
<font color="#E5E5E5">mining</font>

785
00:45:19,280 --> 00:45:24,800
now many people<font color="#CCCCCC"> if they mined they</font>

786
00:45:22,310 --> 00:45:27,980
<font color="#E5E5E5">organized in mining pools because</font><font color="#CCCCCC"> it's</font>

787
00:45:24,800 --> 00:45:29,840
so computationally<font color="#E5E5E5"> intensive so they</font>

788
00:45:27,980 --> 00:45:31,850
will all work<font color="#E5E5E5"> for this pool</font><font color="#CCCCCC"> that we will</font>

789
00:45:29,840 --> 00:45:34,310
get the money and the pool at<font color="#CCCCCC"> some times</font>

790
00:45:31,850 --> 00:45:36,560
point in time distribute the<font color="#E5E5E5"> money out</font>

791
00:45:34,310 --> 00:45:38,810
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the miners now looking at the mining</font>

792
00:45:36,560 --> 00:45:40,610
<font color="#CCCCCC">ports what we found is that many mining</font>

793
00:45:38,810 --> 00:45:43,580
pools<font color="#E5E5E5"> actually announced the payout</font>

794
00:45:40,610 --> 00:45:45,770
transactions on their<font color="#CCCCCC"> websites</font><font color="#E5E5E5"> well this</font>

795
00:45:43,580 --> 00:45:48,049
is a privacy hazard<font color="#E5E5E5"> because if you can</font>

796
00:45:45,770 --> 00:45:49,790
link the block that<font color="#CCCCCC"> are poor found to</font>

797
00:45:48,050 --> 00:45:53,330
the payout transaction that you<font color="#CCCCCC"> can</font>

798
00:45:49,790 --> 00:45:56,000
found this could enable simply the same

799
00:45:53,330 --> 00:45:59,509
kind of deduce ability that I've shown

800
00:45:56,000 --> 00:46:01,070
you<font color="#E5E5E5"> before because the reference that is</font>

801
00:45:59,510 --> 00:46:03,550
<font color="#CCCCCC">wrong with the real one is the one</font>

802
00:46:01,070 --> 00:46:06,200
linking to the block that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> profound</font>

803
00:46:03,550 --> 00:46:07,540
<font color="#E5E5E5">but this data being available also means</font>

804
00:46:06,200 --> 00:46:10,879
that<font color="#E5E5E5"> we can look at how much</font>

805
00:46:07,540 --> 00:46:12,470
transactions are actually we may related

806
00:46:10,880 --> 00:46:15,860
to mining activity and this is what we

807
00:46:12,470 --> 00:46:17,509
<font color="#E5E5E5">did week for the</font><font color="#CCCCCC"> website sides of a</font>

808
00:46:15,860 --> 00:46:19,610
large number of mining pools and the

809
00:46:17,510 --> 00:46:22,580
<font color="#CCCCCC">number of</font><font color="#E5E5E5"> dots they found now of payout</font>

810
00:46:19,610 --> 00:46:25,070
transactions made at that<font color="#CCCCCC"> in addition to</font>

811
00:46:22,580 --> 00:46:26,450
<font color="#CCCCCC">the coin</font><font color="#E5E5E5"> base transactions around 0.44</font>

812
00:46:25,070 --> 00:46:29,150
transactions per block

813
00:46:26,450 --> 00:46:32,450
related to mining<font color="#E5E5E5"> mostly inform of these</font>

814
00:46:29,150 --> 00:46:34,460
<font color="#E5E5E5">payout transactions so if we subtract</font>

815
00:46:32,450 --> 00:46:37,569
this from the Nama<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> number of</font>

816
00:46:34,460 --> 00:46:40,780
all transactions<font color="#E5E5E5"> we find that indeed in</font>

817
00:46:37,570 --> 00:46:44,720
2015 early 2016

818
00:46:40,780 --> 00:47:05,869
normal transactions but starting May

819
00:46:44,720 --> 00:47:14,740
2016<font color="#CCCCCC"> or 2017</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> so we were interested</font>

820
00:47:05,869 --> 00:47:14,740
<font color="#CCCCCC">in</font><font color="#E5E5E5"> trying to foster</font>

821
00:48:00,800 --> 00:48:05,730
of these transactions we have to assume

822
00:48:03,359 --> 00:48:10,500
<font color="#E5E5E5">that there are potentially other privacy</font>

823
00:48:05,730 --> 00:48:12,510
<font color="#E5E5E5">sensitive transactions so this study was</font>

824
00:48:10,500 --> 00:48:14,310
<font color="#E5E5E5">yet another example</font><font color="#CCCCCC"> of what Stephan</font>

825
00:48:12,510 --> 00:48:17,190
already mentioned earlier cryptocurrency

826
00:48:14,310 --> 00:48:19,049
privacy inherits really the worst of the

827
00:48:17,190 --> 00:48:21,840
field of data<font color="#E5E5E5"> Animas ation where the</font>

828
00:48:19,050 --> 00:48:24,390
blockchain<font color="#E5E5E5"> public once you expose these</font>

829
00:48:21,840 --> 00:48:26,310
<font color="#CCCCCC">weaknesses it will be it</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be</font>

830
00:48:24,390 --> 00:48:29,180
exploited<font color="#E5E5E5"> which were actively so all</font>

831
00:48:26,310 --> 00:48:32,490
these<font color="#E5E5E5"> users who transacted back in</font>

832
00:48:29,180 --> 00:48:36,049
<font color="#CCCCCC">2016-2017 are potentially vulnerable to</font>

833
00:48:32,490 --> 00:48:38,040
<font color="#CCCCCC">tea animation and it inherits from</font>

834
00:48:36,050 --> 00:48:39,810
communication<font color="#E5E5E5"> and energy that the</font>

835
00:48:38,040 --> 00:48:42,119
behavior of some users can have<font color="#CCCCCC"> an</font>

836
00:48:39,810 --> 00:48:44,220
<font color="#CCCCCC">influence on the anonymity</font><font color="#E5E5E5"> of others</font>

837
00:48:42,119 --> 00:48:46,770
<font color="#E5E5E5">which you saw</font><font color="#CCCCCC"> in the example of</font><font color="#E5E5E5"> the</font>

838
00:48:44,220 --> 00:48:49,200
<font color="#E5E5E5">usability attack where</font><font color="#CCCCCC"> the choice of</font>

839
00:48:46,770 --> 00:48:50,910
some use to<font color="#E5E5E5"> not include</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> mix-ins had</font>

840
00:48:49,200 --> 00:48:54,899
a negative<font color="#E5E5E5"> effect</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the anonymity of</font>

841
00:48:50,910 --> 00:48:56,730
other users<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> summary we identified</font>

842
00:48:54,900 --> 00:48:59,369
and<font color="#E5E5E5"> quantified these two weaknesses</font><font color="#CCCCCC"> in</font>

843
00:48:56,730 --> 00:49:02,880
monarus mixing selection many privacy

844
00:48:59,369 --> 00:49:05,550
sensitive transactions in 2016-2017<font color="#E5E5E5"> are</font>

845
00:49:02,880 --> 00:49:07,290
vulnerable<font color="#E5E5E5"> to</font><font color="#CCCCCC"> tea animation we estimate</font>

846
00:49:05,550 --> 00:49:09,440
<font color="#CCCCCC">that this are more than</font><font color="#E5E5E5"> a thousand</font>

847
00:49:07,290 --> 00:49:12,450
transactions per day in late 2016

848
00:49:09,440 --> 00:49:14,190
<font color="#E5E5E5">especially if those are used for for</font>

849
00:49:12,450 --> 00:49:16,169
example<font color="#CCCCCC"> the darknet markets that might</font>

850
00:49:14,190 --> 00:49:18,770
be<font color="#CCCCCC"> criminal offences that</font><font color="#E5E5E5"> take years</font><font color="#CCCCCC"> to</font>

851
00:49:16,170 --> 00:49:21,420
expire at all so these users are

852
00:49:18,770 --> 00:49:23,480
potentially at the risk of<font color="#E5E5E5"> doing</font>

853
00:49:21,420 --> 00:49:27,720
<font color="#E5E5E5">immunisation by law</font><font color="#CCCCCC"> enforcement</font><font color="#E5E5E5"> agencies</font>

854
00:49:23,480 --> 00:49:30,119
<font color="#E5E5E5">that being said clearly these illicit</font>

855
00:49:27,720 --> 00:49:33,750
<font color="#E5E5E5">businesses tend to be early</font><font color="#CCCCCC"> adopters of</font>

856
00:49:30,119 --> 00:49:36,210
new technologies but are also always<font color="#CCCCCC"> are</font>

857
00:49:33,750 --> 00:49:37,950
often the most<font color="#E5E5E5"> visible but there are</font>

858
00:49:36,210 --> 00:49:40,170
many legitimate<font color="#CCCCCC"> users</font><font color="#E5E5E5"> that are less</font>

859
00:49:37,950 --> 00:49:43,848
<font color="#CCCCCC">visible and there are also similarly</font>

860
00:49:40,170 --> 00:49:43,849
affected thank you

861
00:49:50,460 --> 00:49:55,510
thanks for your talk

862
00:49:52,510 --> 00:49:58,630
so you said so the<font color="#CCCCCC"> mix-ins as you said</font>

863
00:49:55,510 --> 00:50:01,660
have<font color="#CCCCCC"> to be the same denomination right</font>

864
00:49:58,630 --> 00:50:03,700
<font color="#E5E5E5">but when you showed the that table of</font>

865
00:50:01,660 --> 00:50:06,580
how much the miners paid out to<font color="#CCCCCC"> each</font>

866
00:50:03,700 --> 00:50:08,020
person like<font color="#E5E5E5"> they</font><font color="#CCCCCC"> add six significant</font>

867
00:50:06,580 --> 00:50:12,400
<font color="#CCCCCC">figures of accuracy</font><font color="#E5E5E5"> and they were all</font>

868
00:50:08,020 --> 00:50:14,740
<font color="#CCCCCC">basically random so if</font><font color="#E5E5E5"> I'm are those</font>

869
00:50:12,400 --> 00:50:17,380
divided into like standard<font color="#E5E5E5"> sized coins</font>

870
00:50:14,740 --> 00:50:19,870
how do you yes they used to do<font color="#E5E5E5"> that they</font>

871
00:50:17,380 --> 00:50:21,490
now switch to<font color="#CCCCCC"> a completely new format</font>

872
00:50:19,870 --> 00:50:23,410
where they hide<font color="#CCCCCC"> the values</font>

873
00:50:21,490 --> 00:50:25,330
so basically everything<font color="#E5E5E5"> appears as zero</font>

874
00:50:23,410 --> 00:50:27,790
<font color="#CCCCCC">values so you</font><font color="#E5E5E5"> can just select any coin</font>

875
00:50:25,330 --> 00:50:30,430
<font color="#E5E5E5">but back then the client would split the</font>

876
00:50:27,790 --> 00:50:31,960
<font color="#CCCCCC">outputs in certain denominations</font><font color="#E5E5E5"> great I</font>

877
00:50:30,430 --> 00:50:34,660
<font color="#E5E5E5">had one other question on one</font><font color="#CCCCCC"> year</font>

878
00:50:31,960 --> 00:50:38,410
slides you said<font color="#E5E5E5"> point</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> for</font>

879
00:50:34,660 --> 00:50:40,990
transactions per block<font color="#E5E5E5"> were mining</font>

880
00:50:38,410 --> 00:50:43,270
<font color="#CCCCCC">related in addition to the coin base</font>

881
00:50:40,990 --> 00:50:45,790
that are these payout transactions so

882
00:50:43,270 --> 00:50:49,240
when a pool is out at<font color="#E5E5E5"> the money to the</font>

883
00:50:45,790 --> 00:50:52,390
actual participants and the mining to do

884
00:50:49,240 --> 00:50:55,419
that every few blocks so you<font color="#E5E5E5"> don't have</font>

885
00:50:52,390 --> 00:50:57,629
a good<font color="#E5E5E5"> so that's very few but on your</font>

886
00:50:55,420 --> 00:51:02,920
graph if<font color="#E5E5E5"> you just go back</font><font color="#CCCCCC"> to that slide</font>

887
00:50:57,630 --> 00:51:05,620
<font color="#E5E5E5">yeah so so this is reducing both the</font>

888
00:51:02,920 --> 00:51:08,500
coinbase transaction<font color="#E5E5E5"> and this additional</font>

889
00:51:05,620 --> 00:51:11,950
0.44 transactions per block<font color="#E5E5E5"> and this is</font>

890
00:51:08,500 --> 00:51:15,910
aggregated on a daily basis<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you have</font>

891
00:51:11,950 --> 00:51:18,669
one block every two minutes yeah and you

892
00:51:15,910 --> 00:51:21,460
<font color="#E5E5E5">have point so</font><font color="#CCCCCC"> many transactions are</font>

893
00:51:18,670 --> 00:51:25,210
typically<font color="#E5E5E5"> in a block so the coinbase</font>

894
00:51:21,460 --> 00:51:28,090
transaction is like a transactions per

895
00:51:25,210 --> 00:51:31,060
day right<font color="#E5E5E5"> why we see this first drop and</font>

896
00:51:28,090 --> 00:51:34,470
then<font color="#E5E5E5"> the second drop and then these</font>

897
00:51:31,060 --> 00:51:38,200
additional point<font color="#CCCCCC"> four four transactions</font>

898
00:51:34,470 --> 00:51:42,529
okay so<font color="#CCCCCC"> movies are basically empty in</font>

899
00:51:38,200 --> 00:51:45,060
the first<font color="#CCCCCC"> days yes yeah</font><font color="#E5E5E5"> okay thank you</font>

900
00:51:42,530 --> 00:51:50,460
any further<font color="#E5E5E5"> questions we have a lot</font><font color="#CCCCCC"> of</font>

901
00:51:45,060 --> 00:51:52,920
time I was wondering if you considered

902
00:51:50,460 --> 00:51:54,060
repeated behavior<font color="#E5E5E5"> over time let's say</font>

903
00:51:52,920 --> 00:51:56,010
that<font color="#E5E5E5"> I'm a vendor at one of these</font>

904
00:51:54,060 --> 00:51:57,870
markets so<font color="#E5E5E5"> something the market is an</font>

905
00:51:56,010 --> 00:52:01,350
intermediary<font color="#E5E5E5"> they're regularly sending</font>

906
00:51:57,870 --> 00:52:03,779
me my money<font color="#CCCCCC"> you know one transaction</font>

907
00:52:01,350 --> 00:52:05,370
maybe I can't tell if I got it from

908
00:52:03,780 --> 00:52:06,900
<font color="#E5E5E5">alpha Bay or not but after</font><font color="#CCCCCC"> ten</font>

909
00:52:05,370 --> 00:52:08,759
transactions and alpha Bay is<font color="#E5E5E5"> in every</font>

910
00:52:06,900 --> 00:52:10,800
single<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> my four mix-ins or</font>

911
00:52:08,760 --> 00:52:12,270
whatever<font color="#E5E5E5"> it's pretty clear that I'm</font>

912
00:52:10,800 --> 00:52:13,980
regularly receiving money from<font color="#E5E5E5"> them so</font>

913
00:52:12,270 --> 00:52:15,930
I'm wondering<font color="#E5E5E5"> did you look at these</font>

914
00:52:13,980 --> 00:52:17,370
kinds<font color="#CCCCCC"> of repeated behaviors</font><font color="#E5E5E5"> over time</font><font color="#CCCCCC"> or</font>

915
00:52:15,930 --> 00:52:20,940
do you<font color="#CCCCCC"> think</font><font color="#E5E5E5"> that this could work if you</font>

916
00:52:17,370 --> 00:52:22,560
didn't so repeating behavior is a bit

917
00:52:20,940 --> 00:52:25,020
more<font color="#CCCCCC"> difficult than for example in</font>

918
00:52:22,560 --> 00:52:28,590
Bitcoin because whenever also uses

919
00:52:25,020 --> 00:52:31,110
stealth addresses so it's hard to to

920
00:52:28,590 --> 00:52:33,780
cluster so you can't cluster addresses

921
00:52:31,110 --> 00:52:36,540
which makes it a lot harder<font color="#E5E5E5"> to infer</font>

922
00:52:33,780 --> 00:52:39,630
<font color="#CCCCCC">that certain or multiple transactions</font>

923
00:52:36,540 --> 00:52:43,279
<font color="#E5E5E5">that look look unrelated actually to the</font>

924
00:52:39,630 --> 00:52:43,280
same<font color="#E5E5E5"> person or from the same person</font>

925
00:52:44,930 --> 00:52:48,589
any other questions

926
00:52:52,280 --> 00:53:01,790
so thank<font color="#E5E5E5"> you master we now have a break</font>

927
00:52:58,640 --> 00:53:05,270
until<font color="#E5E5E5"> 11:30</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then another great</font>

928
00:53:01,790 --> 00:53:07,250
session will follow<font color="#E5E5E5"> and the three</font>

929
00:53:05,270 --> 00:53:10,200
<font color="#E5E5E5">speakers in the next session come up and</font>

930
00:53:07,250 --> 00:53:13,270
see me right now<font color="#E5E5E5"> thank you</font>

931
00:53:10,200 --> 00:53:13,270
[Music]

932
00:53:16,390 --> 00:53:19,420
[Music]

933
00:53:31,360 --> 00:53:34,459
[Music]

934
00:53:39,880 --> 00:53:43,429
[Music]

935
00:53:47,360 --> 00:55:28,470
[Music]

936
00:55:45,830 --> 00:55:48,949
[Music]

937
00:55:51,920 --> 00:55:54,999
[Music]

938
00:55:59,830 --> 00:56:48,170
[Music]

939
00:56:46,109 --> 00:56:48,170
you

940
00:56:56,260 --> 00:56:58,320
you

941
00:57:47,090 --> 00:58:16,840
[Music]

942
00:58:34,200 --> 00:58:37,310
[Music]

943
00:58:40,290 --> 00:58:43,369
[Music]

944
00:58:48,190 --> 01:00:43,460
[Music]

945
01:01:00,820 --> 01:01:03,939
[Music]

946
01:01:06,890 --> 01:01:09,989
[Music]

947
01:01:14,810 --> 01:01:31,969
[Music]

948
01:01:34,460 --> 01:03:10,790
[Music]

949
01:03:27,420 --> 01:03:30,539
[Music]

950
01:03:33,490 --> 01:03:36,589
[Music]

951
01:03:41,410 --> 01:04:15,038
[Music]

952
01:04:17,220 --> 01:05:36,669
[Music]

953
01:05:54,020 --> 01:05:57,139
[Music]

954
01:06:00,110 --> 01:06:03,189
[Music]

955
01:06:08,010 --> 01:08:03,989
[Music]

956
01:08:20,620 --> 01:08:23,738
[Music]

957
01:08:26,689 --> 01:08:29,789
[Music]

958
01:08:34,609 --> 01:08:54,189
[Music]

959
01:09:06,549 --> 01:09:11,970
<font color="#CCCCCC">Bravo</font><font color="#E5E5E5"> Micro for install hola mundo</font>

960
01:09:09,279 --> 01:09:11,970
stress

961
01:09:13,979 --> 01:09:18,720
<font color="#E5E5E5">drama on dos tres</font>

962
01:09:16,880 --> 01:09:21,650
Robin<font color="#CCCCCC"> Metro</font>

963
01:09:18,720 --> 01:09:21,650
<font color="#CCCCCC">under stress</font>

964
01:09:26,970 --> 01:09:41,149
[Music]

965
01:09:49,170 --> 01:09:52,288
[Music]

966
01:09:55,590 --> 01:10:08,810
[Music]

967
01:10:12,060 --> 01:10:32,749
[Music]

968
01:10:51,740 --> 01:10:56,719
[Music]

969
01:11:01,720 --> 01:11:04,979
[Music]

970
01:11:14,220 --> 01:11:18,369
[Music]

971
01:11:21,010 --> 01:12:56,460
[Music]

972
01:13:13,820 --> 01:13:16,938
[Music]

973
01:13:19,890 --> 01:13:22,989
[Music]

974
01:13:27,810 --> 01:14:01,439
[Music]

975
01:14:03,620 --> 01:15:23,059
[Music]

976
01:15:40,420 --> 01:15:43,539
[Music]

977
01:15:46,510 --> 01:15:49,589
[Music]

978
01:15:54,410 --> 01:16:11,568
[Music]

979
01:16:14,210 --> 01:17:49,630
[Music]

980
01:18:06,990 --> 01:18:10,099
[Music]

981
01:18:13,080 --> 01:18:16,159
[Music]

982
01:18:20,980 --> 01:19:45,449
[Music]

983
01:19:56,010 --> 01:20:16,300
[Music]

984
01:20:33,660 --> 01:20:36,779
[Music]

985
01:20:39,750 --> 01:20:42,829
[Music]

986
01:20:47,660 --> 01:22:42,829
[Music]

987
01:23:00,190 --> 01:23:03,299
[Music]

988
01:23:06,280 --> 01:23:09,358
[Music]

989
01:23:14,180 --> 01:25:10,160
[Music]

990
01:25:26,790 --> 01:25:29,899
[Music]

991
01:25:32,880 --> 01:25:35,959
[Music]

992
01:25:40,780 --> 01:27:36,029
[Music]

993
01:27:53,390 --> 01:27:56,499
[Music]

994
01:27:59,480 --> 01:28:02,559
[Music]

995
01:28:27,990 --> 01:28:30,990
<font color="#CCCCCC">hike</font>

996
01:28:39,660 --> 01:28:43,040
[Music]

997
01:28:46,079 --> 01:28:50,790
yeah the vibration people out there

998
01:28:57,880 --> 01:29:01,620
<font color="#CCCCCC">no</font><font color="#E5E5E5"> exactly the remote people</font>

999
01:29:23,090 --> 01:29:32,480
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> welcome to the next</font>

1000
01:29:29,390 --> 01:29:36,260
<font color="#E5E5E5">session which is the crypto session</font>

1001
01:29:32,480 --> 01:29:38,330
which notwithstanding the topic of<font color="#CCCCCC"> a</font>

1002
01:29:36,260 --> 01:29:43,100
last session I remind you crypto means

1003
01:29:38,330 --> 01:29:45,250
cryptography so we have three great

1004
01:29:43,100 --> 01:29:47,740
speakers today<font color="#E5E5E5"> so our</font><font color="#CCCCCC"> first speaker is</font>

1005
01:29:45,250 --> 01:29:51,380
<font color="#E5E5E5">Giulio Malta who will tell</font><font color="#CCCCCC"> us about</font>

1006
01:29:47,740 --> 01:29:58,000
<font color="#E5E5E5">prudential x'</font><font color="#CCCCCC"> i thank you for</font><font color="#E5E5E5"> the</font>

1007
01:29:51,380 --> 01:30:00,410
introduction<font color="#CCCCCC"> so</font><font color="#E5E5E5"> can you give me one and</font>

1008
01:29:58,000 --> 01:30:02,540
so this is a joint<font color="#E5E5E5"> work with dominic</font>

1009
01:30:00,410 --> 01:30:08,300
<font color="#CCCCCC">towable mighty murphy max trafficking</font>

1010
01:30:02,540 --> 01:30:09,769
dominic shredder and<font color="#E5E5E5"> mark</font><font color="#CCCCCC"> sing so let me</font>

1011
01:30:08,300 --> 01:30:12,170
give you a brief introduction<font color="#E5E5E5"> about</font>

1012
01:30:09,770 --> 01:30:16,630
classical authentication mechanisms I

1013
01:30:12,170 --> 01:30:16,630
hope you<font color="#E5E5E5"> all familiar with it normally</font>

1014
01:30:16,840 --> 01:30:25,190
<font color="#E5E5E5">like this is bad sorry</font>

1015
01:30:22,120 --> 01:30:27,410
so classical classical authentication

1016
01:30:25,190 --> 01:30:29,750
mechanism<font color="#CCCCCC"> exploited several features of</font>

1017
01:30:27,410 --> 01:30:31,130
<font color="#E5E5E5">the carrier which might be the</font>

1018
01:30:29,750 --> 01:30:34,150
<font color="#E5E5E5">possession of a token knowledge of the</font>

1019
01:30:31,130 --> 01:30:37,730
<font color="#CCCCCC">secret or some unique physical features</font>

1020
01:30:34,150 --> 01:30:39,950
<font color="#E5E5E5">now this is obvious problems which are</font>

1021
01:30:37,730 --> 01:30:44,269
which is a very very known<font color="#CCCCCC"> well-known</font>

1022
01:30:39,950 --> 01:30:47,389
topic in the<font color="#E5E5E5"> literature the fact that</font>

1023
01:30:44,270 --> 01:30:49,460
<font color="#E5E5E5">the</font><font color="#CCCCCC"> verifier whenever whenever an evil</font>

1024
01:30:47,390 --> 01:30:52,700
<font color="#E5E5E5">Syndication mechanism is</font><font color="#CCCCCC"> users can just</font>

1025
01:30:49,460 --> 01:30:55,070
track the user and can just uniquely

1026
01:30:52,700 --> 01:30:57,950
identify basing on on<font color="#E5E5E5"> his credential if</font>

1027
01:30:55,070 --> 01:31:01,780
if<font color="#E5E5E5"> this mechanism is is executed in a</font>

1028
01:30:57,950 --> 01:31:04,610
naive<font color="#CCCCCC"> way</font><font color="#E5E5E5"> so so it has been apparent</font>

1029
01:31:01,780 --> 01:31:07,820
from so many<font color="#CCCCCC"> years of the</font><font color="#E5E5E5"> research</font><font color="#CCCCCC"> that</font>

1030
01:31:04,610 --> 01:31:09,920
we need<font color="#CCCCCC"> that we need two properties</font><font color="#E5E5E5"> at</font>

1031
01:31:07,820 --> 01:31:12,170
least of authentication mechanism which

1032
01:31:09,920 --> 01:31:16,120
are the soundness soundness means that

1033
01:31:12,170 --> 01:31:18,650
that<font color="#CCCCCC"> the</font><font color="#E5E5E5"> prover cannot fool the verifier</font>

1034
01:31:16,120 --> 01:31:22,130
into accepting some capabilities and

1035
01:31:18,650 --> 01:31:25,129
that doesn't have an anonymity<font color="#CCCCCC"> which</font>

1036
01:31:22,130 --> 01:31:27,570
means that<font color="#E5E5E5"> that beyond the output of the</font>

1037
01:31:25,130 --> 01:31:29,639
protocol<font color="#E5E5E5"> the verifier should not learn</font>

1038
01:31:27,570 --> 01:31:33,780
any additional information<font color="#E5E5E5"> about the</font>

1039
01:31:29,639 --> 01:31:35,639
<font color="#CCCCCC">carrier of the credential so let</font><font color="#E5E5E5"> me let</font>

1040
01:31:33,780 --> 01:31:37,619
<font color="#CCCCCC">me</font><font color="#E5E5E5"> let me give you a very very quick</font>

1041
01:31:35,639 --> 01:31:39,929
<font color="#CCCCCC">introduction on our</font><font color="#E5E5E5"> anonymous credential</font>

1042
01:31:37,619 --> 01:31:46,259
also we<font color="#E5E5E5"> will establish a common ground</font>

1043
01:31:39,929 --> 01:31:50,040
of notation<font color="#CCCCCC"> typically users</font><font color="#E5E5E5"> requests</font>

1044
01:31:46,260 --> 01:31:52,980
<font color="#CCCCCC">their the credential token which which</font>

1045
01:31:50,040 --> 01:31:55,590
which in this case<font color="#CCCCCC"> key to an authority</font>

1046
01:31:52,980 --> 01:31:58,980
to an issuer<font color="#E5E5E5"> and based on a certain set</font>

1047
01:31:55,590 --> 01:32:02,010
<font color="#CCCCCC">of</font><font color="#E5E5E5"> credentials in this case the guy is</font>

1048
01:31:58,980 --> 01:32:04,739
mailing greater than<font color="#E5E5E5"> 18</font><font color="#CCCCCC"> and it gets the</font>

1049
01:32:02,010 --> 01:32:06,599
appropriate credential and later on<font color="#E5E5E5"> he</font>

1050
01:32:04,739 --> 01:32:10,019
can<font color="#E5E5E5"> he can interact with</font><font color="#CCCCCC"> a certain</font>

1051
01:32:06,599 --> 01:32:12,630
verifier and convince convinced that he

1052
01:32:10,020 --> 01:32:16,070
satisfies a certain<font color="#E5E5E5"> policy whether this</font>

1053
01:32:12,630 --> 01:32:19,710
policy could<font color="#CCCCCC"> be male or greater than 18</font>

1054
01:32:16,070 --> 01:32:24,299
<font color="#CCCCCC">in such a way that the verifier does</font><font color="#E5E5E5"> not</font>

1055
01:32:19,710 --> 01:32:26,840
learn anything<font color="#CCCCCC"> but the fact that</font><font color="#E5E5E5"> the</font>

1056
01:32:24,300 --> 01:32:29,550
prover satisfies this this policy<font color="#E5E5E5"> and</font>

1057
01:32:26,840 --> 01:32:33,000
you can do that thanks to<font color="#E5E5E5"> the token of</font>

1058
01:32:29,550 --> 01:32:35,960
<font color="#E5E5E5">the of the issue now consider consider</font>

1059
01:32:33,000 --> 01:32:39,480
<font color="#E5E5E5">the following the following scenario</font>

1060
01:32:35,960 --> 01:32:41,820
let's let's take a data owner that that

1061
01:32:39,480 --> 01:32:44,780
<font color="#E5E5E5">out</font><font color="#CCCCCC"> sources a database for</font><font color="#E5E5E5"> a cloud</font>

1062
01:32:41,820 --> 01:32:47,429
service<font color="#CCCCCC"> and he wants to he wants to</font>

1063
01:32:44,780 --> 01:32:49,800
<font color="#E5E5E5">outsource all also the management of the</font>

1064
01:32:47,429 --> 01:32:52,949
<font color="#CCCCCC">data set and of course of course</font><font color="#E5E5E5"> he</font>

1065
01:32:49,800 --> 01:32:55,560
wants to give<font color="#E5E5E5"> selective access to his</font>

1066
01:32:52,949 --> 01:32:58,469
data to<font color="#CCCCCC"> the certain clients so</font><font color="#E5E5E5"> in trusts</font>

1067
01:32:55,560 --> 01:33:02,099
the the cloud<font color="#CCCCCC"> to to make access</font><font color="#E5E5E5"> control</font>

1068
01:32:58,469 --> 01:33:04,770
on<font color="#CCCCCC"> his</font><font color="#E5E5E5"> behalf</font><font color="#CCCCCC"> okay so whenever users</font>

1069
01:33:02,099 --> 01:33:06,030
comes in a court of course<font color="#E5E5E5"> the</font>

1070
01:33:04,770 --> 01:33:07,500
credentials are distributed the

1071
01:33:06,030 --> 01:33:11,730
appropriate<font color="#CCCCCC"> users so whenever users</font>

1072
01:33:07,500 --> 01:33:14,099
comes in<font color="#E5E5E5"> he can prove to the cloud that</font>

1073
01:33:11,730 --> 01:33:16,790
<font color="#E5E5E5">is entitled to write an entry if he</font>

1074
01:33:14,099 --> 01:33:22,079
satisfies a<font color="#CCCCCC"> certain policy</font><font color="#E5E5E5"> in this case</font>

1075
01:33:16,790 --> 01:33:26,250
he needs to be<font color="#E5E5E5"> greater than 18 but this</font>

1076
01:33:22,079 --> 01:33:28,259
<font color="#CCCCCC">has certain privacy</font><font color="#E5E5E5"> concerns and for</font>

1077
01:33:26,250 --> 01:33:30,389
<font color="#E5E5E5">example in this example one thing that</font>

1078
01:33:28,260 --> 01:33:32,940
<font color="#CCCCCC">the cloud may ask is even though it</font>

1079
01:33:30,389 --> 01:33:35,369
doesn't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> anything about the about</font>

1080
01:33:32,940 --> 01:33:37,558
<font color="#E5E5E5">the carrier of the credential why does</font>

1081
01:33:35,369 --> 01:33:39,659
<font color="#E5E5E5">this guy needs to be greater than 18 so</font>

1082
01:33:37,559 --> 01:33:42,960
what was in<font color="#E5E5E5"> this data right</font>

1083
01:33:39,659 --> 01:33:44,839
so this itself<font color="#E5E5E5"> is</font><font color="#CCCCCC"> an information</font><font color="#E5E5E5"> that</font>

1084
01:33:42,960 --> 01:33:47,520
<font color="#E5E5E5">gives a non-trivial leakage to the cloud</font>

1085
01:33:44,840 --> 01:33:49,050
which we<font color="#E5E5E5"> don't want and ideally we</font>

1086
01:33:47,520 --> 01:33:51,120
<font color="#E5E5E5">encrypt data because</font><font color="#CCCCCC"> we don't want</font><font color="#E5E5E5"> to</font>

1087
01:33:49,050 --> 01:33:53,610
reveal<font color="#E5E5E5"> anything about the cloud and the</font>

1088
01:33:51,120 --> 01:33:56,820
fact that we put a<font color="#E5E5E5"> certain policy</font>

1089
01:33:53,610 --> 01:33:58,830
associated to a certain<font color="#E5E5E5"> data gives</font>

1090
01:33:56,820 --> 01:34:00,989
already some some information<font color="#E5E5E5"> right and</font>

1091
01:33:58,830 --> 01:34:02,909
to<font color="#E5E5E5"> convince you that this that this</font>

1092
01:34:00,989 --> 01:34:04,409
scenario<font color="#CCCCCC"> is meaningful I give you a</font>

1093
01:34:02,909 --> 01:34:07,409
<font color="#E5E5E5">complete example</font><font color="#CCCCCC"> where this is actually</font>

1094
01:34:04,409 --> 01:34:09,629
<font color="#CCCCCC">a concern</font><font color="#E5E5E5"> if you if you consider if you</font>

1095
01:34:07,409 --> 01:34:12,239
consider oblivious<font color="#E5E5E5"> round</font><font color="#CCCCCC"> leaves Ram</font>

1096
01:34:09,630 --> 01:34:15,030
intuitively<font color="#E5E5E5"> wants to hide the access</font>

1097
01:34:12,239 --> 01:34:17,610
<font color="#E5E5E5">pattern to the to the to the eyes of the</font>

1098
01:34:15,030 --> 01:34:20,519
database in the sense that<font color="#E5E5E5"> whether you</font>

1099
01:34:17,610 --> 01:34:22,380
write on an entry<font color="#CCCCCC"> X or on an entry</font><font color="#E5E5E5"> Y</font>

1100
01:34:20,520 --> 01:34:25,650
should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> should be indistinguishable to</font>

1101
01:34:22,380 --> 01:34:27,449
<font color="#E5E5E5">the eye of the cloud</font><font color="#CCCCCC"> in this case if you</font>

1102
01:34:25,650 --> 01:34:31,409
<font color="#E5E5E5">want to perform access control over this</font>

1103
01:34:27,449 --> 01:34:33,449
data<font color="#E5E5E5"> this leakage is unacceptable so it</font>

1104
01:34:31,409 --> 01:34:36,000
is<font color="#CCCCCC"> inner in</font><font color="#E5E5E5"> conflict with obliviousness</font>

1105
01:34:33,449 --> 01:34:40,230
<font color="#E5E5E5">so so we need a different</font><font color="#CCCCCC"> solution</font><font color="#E5E5E5"> for</font>

1106
01:34:36,000 --> 01:34:43,080
that so<font color="#E5E5E5"> so that's why we</font><font color="#CCCCCC"> formalize the</font>

1107
01:34:40,230 --> 01:34:45,629
notion of functional credentials<font color="#E5E5E5"> which</font>

1108
01:34:43,080 --> 01:34:49,620
we believe to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> the good solution for</font>

1109
01:34:45,630 --> 01:34:52,650
<font color="#CCCCCC">this problem and in</font><font color="#E5E5E5"> this work we that we</font>

1110
01:34:49,620 --> 01:34:54,929
<font color="#E5E5E5">formalized the security definition we</font>

1111
01:34:52,650 --> 01:34:57,509
<font color="#CCCCCC">proposed a generic construction that</font>

1112
01:34:54,929 --> 01:34:59,699
uses<font color="#E5E5E5"> predicate encryption in a</font><font color="#CCCCCC"> blackbox</font>

1113
01:34:57,510 --> 01:35:02,520
way for<font color="#E5E5E5"> those of you who are familiar</font>

1114
01:34:59,699 --> 01:35:05,070
<font color="#E5E5E5">with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it means that you do</font><font color="#CCCCCC"> not</font>

1115
01:35:02,520 --> 01:35:06,780
assume any specific instantiation<font color="#E5E5E5"> but</font>

1116
01:35:05,070 --> 01:35:08,370
you take any scheme and it just works

1117
01:35:06,780 --> 01:35:11,790
right<font color="#CCCCCC"> out of the</font><font color="#E5E5E5"> box you don't have any</font>

1118
01:35:08,370 --> 01:35:15,809
any expensive step on it<font color="#E5E5E5"> just just only</font>

1119
01:35:11,790 --> 01:35:18,810
the code that<font color="#E5E5E5"> is useful</font><font color="#CCCCCC"> for this for</font>

1120
01:35:15,810 --> 01:35:21,060
<font color="#E5E5E5">this primitive is run</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example for</font>

1121
01:35:18,810 --> 01:35:22,679
<font color="#CCCCCC">example</font><font color="#E5E5E5"> running is your knowledge proof</font>

1122
01:35:21,060 --> 01:35:25,290
<font color="#E5E5E5">over that is not allowed if you want to</font>

1123
01:35:22,679 --> 01:35:27,630
have a<font color="#E5E5E5"> black box</font><font color="#CCCCCC"> instantiation and we</font>

1124
01:35:25,290 --> 01:35:29,460
implement this<font color="#E5E5E5"> unfortunately we don't</font>

1125
01:35:27,630 --> 01:35:31,139
have a<font color="#E5E5E5"> full-fledged implementation for</font>

1126
01:35:29,460 --> 01:35:33,630
any<font color="#E5E5E5"> possible function but we have to</font>

1127
01:35:31,139 --> 01:35:36,810
<font color="#E5E5E5">restrict ourselves to two constant</font><font color="#CCCCCC"> death</font>

1128
01:35:33,630 --> 01:35:40,679
boolean formulas and and you'll see why

1129
01:35:36,810 --> 01:35:42,690
<font color="#E5E5E5">in a second so let me let me give you a</font>

1130
01:35:40,679 --> 01:35:45,480
quick quick<font color="#CCCCCC"> orbit over tor about the</font>

1131
01:35:42,690 --> 01:35:48,299
notation<font color="#CCCCCC"> of functional credentials the</font>

1132
01:35:45,480 --> 01:35:50,250
<font color="#CCCCCC">scheme</font><font color="#E5E5E5"> is relatively simple we define</font><font color="#CCCCCC"> a</font>

1133
01:35:48,300 --> 01:35:53,400
<font color="#CCCCCC">set</font><font color="#E5E5E5"> up algorithm which</font>

1134
01:35:50,250 --> 01:35:57,480
run by the<font color="#CCCCCC"> issuer a grand credentials</font>

1135
01:35:53,400 --> 01:35:59,070
which is run by<font color="#CCCCCC"> the by the issuer again</font>

1136
01:35:57,480 --> 01:36:02,309
and<font color="#CCCCCC"> Texas input the master circuit</font><font color="#E5E5E5"> key</font>

1137
01:35:59,070 --> 01:36:04,790
<font color="#CCCCCC">and this is used to to grant a certain</font>

1138
01:36:02,310 --> 01:36:07,890
credential given a set<font color="#CCCCCC"> of attributes a</font>

1139
01:36:04,790 --> 01:36:09,960
now the the key difference with<font color="#E5E5E5"> respect</font>

1140
01:36:07,890 --> 01:36:11,520
to classical classic and anonymous

1141
01:36:09,960 --> 01:36:14,550
credentials is the presence of<font color="#E5E5E5"> this</font>

1142
01:36:11,520 --> 01:36:16,200
delegate algorithm which<font color="#CCCCCC"> does not which</font>

1143
01:36:14,550 --> 01:36:18,750
is not<font color="#E5E5E5"> does</font><font color="#CCCCCC"> not delegate the credential</font>

1144
01:36:16,200 --> 01:36:24,179
<font color="#CCCCCC">but instead delegates</font><font color="#E5E5E5"> a token which</font><font color="#CCCCCC"> is</font>

1145
01:36:18,750 --> 01:36:26,490
used to to check against<font color="#E5E5E5"> credential so</font>

1146
01:36:24,180 --> 01:36:28,710
you can you<font color="#E5E5E5"> can see this as a token we</font>

1147
01:36:26,490 --> 01:36:31,710
<font color="#CCCCCC">wear the policy is embedded inside this</font>

1148
01:36:28,710 --> 01:36:34,410
token<font color="#E5E5E5"> you can test it against several</font>

1149
01:36:31,710 --> 01:36:35,670
credentials but beyond the output of the

1150
01:36:34,410 --> 01:36:37,260
protocol you should not learn any

1151
01:36:35,670 --> 01:36:39,870
information of the policy<font color="#E5E5E5"> which is</font>

1152
01:36:37,260 --> 01:36:41,700
<font color="#CCCCCC">embedded in</font><font color="#E5E5E5"> this token and so the first</font>

1153
01:36:39,870 --> 01:36:43,290
<font color="#E5E5E5">if the first protocol is the classical</font>

1154
01:36:41,700 --> 01:36:45,389
anonymous authentication whereas the

1155
01:36:43,290 --> 01:36:48,780
second protocol as the key difference

1156
01:36:45,390 --> 01:36:51,810
that uses indeed the the<font color="#CCCCCC"> delegation</font>

1157
01:36:48,780 --> 01:36:53,730
token and on the very fire side so you

1158
01:36:51,810 --> 01:36:56,400
can you can<font color="#CCCCCC"> think</font><font color="#E5E5E5"> this as</font><font color="#CCCCCC"> a blind</font>

1159
01:36:53,730 --> 01:36:58,230
<font color="#E5E5E5">verification of credential so the</font>

1160
01:36:56,400 --> 01:37:01,500
<font color="#E5E5E5">verifier does not really know what is</font>

1161
01:36:58,230 --> 01:37:03,959
<font color="#E5E5E5">checking</font><font color="#CCCCCC"> body make</font><font color="#E5E5E5"> sure that that</font><font color="#CCCCCC"> issue</font>

1162
01:37:01,500 --> 01:37:07,410
<font color="#CCCCCC">sorry that the carrier satisfies the</font>

1163
01:37:03,960 --> 01:37:09,180
policy which is encoded<font color="#CCCCCC"> in this token so</font>

1164
01:37:07,410 --> 01:37:11,519
what are the<font color="#CCCCCC"> properties that</font><font color="#E5E5E5"> we want</font><font color="#CCCCCC"> to</font>

1165
01:37:09,180 --> 01:37:13,260
make sure<font color="#E5E5E5"> whatever we want to ensure so</font>

1166
01:37:11,520 --> 01:37:16,350
the first is for<font color="#E5E5E5"> the bility which is</font>

1167
01:37:13,260 --> 01:37:21,030
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> also I also mention it that</font>

1168
01:37:16,350 --> 01:37:23,010
soundness<font color="#E5E5E5"> is the fact that any a carrier</font>

1169
01:37:21,030 --> 01:37:24,660
which does not satisfy<font color="#E5E5E5"> a certain a</font>

1170
01:37:23,010 --> 01:37:28,170
<font color="#CCCCCC">certain policy</font><font color="#E5E5E5"> should</font><font color="#CCCCCC"> not be able</font><font color="#E5E5E5"> to</font>

1171
01:37:24,660 --> 01:37:30,059
fool the verifier<font color="#E5E5E5"> in this case this this</font>

1172
01:37:28,170 --> 01:37:32,160
<font color="#E5E5E5">this</font><font color="#CCCCCC"> hello</font><font color="#E5E5E5"> kitty should not be</font><font color="#CCCCCC"> able to</font>

1173
01:37:30,060 --> 01:37:37,530
prove<font color="#CCCCCC"> that she's male and greater</font><font color="#E5E5E5"> than</font>

1174
01:37:32,160 --> 01:37:40,230
<font color="#E5E5E5">18 anonymity says that</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> to prove errs</font>

1175
01:37:37,530 --> 01:37:43,259
which are not sorry<font color="#CCCCCC"> for which the</font>

1176
01:37:40,230 --> 01:37:44,570
protocol returns the same output<font color="#CCCCCC"> should</font>

1177
01:37:43,260 --> 01:37:46,280
not be able<font color="#E5E5E5"> to</font>

1178
01:37:44,570 --> 01:37:50,360
you should not<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able to</font><font color="#E5E5E5"> distinguish</font>

1179
01:37:46,280 --> 01:37:52,309
<font color="#CCCCCC">among them efficiently and finally the</font>

1180
01:37:50,360 --> 01:37:54,469
the the the<font color="#E5E5E5"> most important properties of</font>

1181
01:37:52,310 --> 01:37:57,260
<font color="#E5E5E5">this world is policy hiding policy</font>

1182
01:37:54,470 --> 01:38:01,070
hiding says that if I give you a certain

1183
01:37:57,260 --> 01:38:02,840
token<font color="#CCCCCC"> if I give you a certain token you</font>

1184
01:38:01,070 --> 01:38:04,849
should not be able<font color="#CCCCCC"> to tell what's the</font>

1185
01:38:02,840 --> 01:38:06,950
policy<font color="#CCCCCC"> and by doing this token beyond</font>

1186
01:38:04,850 --> 01:38:09,410
what is trivially<font color="#CCCCCC"> licked by the by the</font>

1187
01:38:06,950 --> 01:38:13,730
protocols that<font color="#CCCCCC"> you run</font><font color="#E5E5E5"> on them of course</font>

1188
01:38:09,410 --> 01:38:16,099
<font color="#E5E5E5">of course the the very file that</font>

1189
01:38:13,730 --> 01:38:17,570
possesses<font color="#E5E5E5"> is token he can test it</font>

1190
01:38:16,100 --> 01:38:20,750
against credential this is a

1191
01:38:17,570 --> 01:38:22,099
functionality requirement but beyond the

1192
01:38:20,750 --> 01:38:23,690
output of this protocol we should not

1193
01:38:22,100 --> 01:38:28,220
learn anything about<font color="#E5E5E5"> the policy that is</font>

1194
01:38:23,690 --> 01:38:30,110
<font color="#E5E5E5">embedded in this token okay so what's</font>

1195
01:38:28,220 --> 01:38:32,660
the main<font color="#CCCCCC"> - what's the main tool to</font>

1196
01:38:30,110 --> 01:38:34,549
construct<font color="#E5E5E5"> functional credential so the</font>

1197
01:38:32,660 --> 01:38:36,110
main tool that we use<font color="#CCCCCC"> is</font><font color="#E5E5E5"> its predicate</font>

1198
01:38:34,550 --> 01:38:37,820
encryption<font color="#E5E5E5"> and predicate encryption is a</font>

1199
01:38:36,110 --> 01:38:41,030
very it's a very powerful powerful

1200
01:38:37,820 --> 01:38:42,110
cryptographic primitive which is which

1201
01:38:41,030 --> 01:38:44,929
<font color="#CCCCCC">is characterized by the</font><font color="#E5E5E5"> following</font>

1202
01:38:42,110 --> 01:38:46,880
algorithms<font color="#E5E5E5"> so again there is a set up</font>

1203
01:38:44,930 --> 01:38:49,640
and you can<font color="#CCCCCC"> see already the</font><font color="#E5E5E5"> similarity</font>

1204
01:38:46,880 --> 01:38:53,930
here<font color="#E5E5E5"> there is a key generation that</font>

1205
01:38:49,640 --> 01:38:57,350
takes<font color="#E5E5E5"> in a set of attributes</font><font color="#CCCCCC"> and returns</font>

1206
01:38:53,930 --> 01:38:59,780
<font color="#E5E5E5">a key for these attributes</font><font color="#CCCCCC"> there is an</font>

1207
01:38:57,350 --> 01:39:03,200
encryption<font color="#E5E5E5"> the encryption that takes a</font>

1208
01:38:59,780 --> 01:39:07,730
message<font color="#E5E5E5"> and an ecology and encrypt this</font>

1209
01:39:03,200 --> 01:39:09,470
message against this<font color="#CCCCCC"> policy and ok I'll</font>

1210
01:39:07,730 --> 01:39:12,139
skip forward to the decryption<font color="#E5E5E5"> so you</font>

1211
01:39:09,470 --> 01:39:13,940
are able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> decrypt certain ciphertext</font>

1212
01:39:12,140 --> 01:39:17,480
<font color="#E5E5E5">if the policy associated with the</font>

1213
01:39:13,940 --> 01:39:20,389
<font color="#CCCCCC">ciphertext matches the attributes</font>

1214
01:39:17,480 --> 01:39:25,429
associated<font color="#CCCCCC"> with the key which is P of a</font>

1215
01:39:20,390 --> 01:39:27,920
equal<font color="#E5E5E5"> 1 also</font><font color="#CCCCCC"> we need to</font><font color="#E5E5E5"> additionally</font>

1216
01:39:25,430 --> 01:39:29,720
assume that is the<font color="#E5E5E5"> dis predicate</font>

1217
01:39:27,920 --> 01:39:32,450
encryption supports a real randomization

1218
01:39:29,720 --> 01:39:34,640
algorithm this<font color="#CCCCCC"> is this is more</font><font color="#E5E5E5"> of an</font>

1219
01:39:32,450 --> 01:39:36,860
algebraic property of the skin but it is

1220
01:39:34,640 --> 01:39:41,210
satisfied by most of<font color="#E5E5E5"> the instances that</font>

1221
01:39:36,860 --> 01:39:44,089
<font color="#E5E5E5">we know so predicate encryption for</font>

1222
01:39:41,210 --> 01:39:46,170
inner products was was was introduced by

1223
01:39:44,090 --> 01:39:48,390
<font color="#CCCCCC">Katherine waters in 2008</font>

1224
01:39:46,170 --> 01:39:52,740
and<font color="#CCCCCC"> I</font><font color="#E5E5E5"> breakthrough results</font><font color="#CCCCCC"> like Veigar</font>

1225
01:39:48,390 --> 01:39:55,440
<font color="#CCCCCC">get I'll propose</font><font color="#E5E5E5"> a functional</font><font color="#CCCCCC"> truth ends</font>

1226
01:39:52,740 --> 01:39:59,400
<font color="#E5E5E5">sorry a predicate encryption from for</font>

1227
01:39:55,440 --> 01:40:02,160
any function<font color="#CCCCCC"> but it's very</font><font color="#E5E5E5"> slow and and</font>

1228
01:39:59,400 --> 01:40:04,559
from non<font color="#CCCCCC"> non well understood assumptions</font>

1229
01:40:02,160 --> 01:40:06,599
so it's very<font color="#E5E5E5"> hard to implement</font><font color="#CCCCCC"> I think I</font>

1230
01:40:04,560 --> 01:40:08,220
think we are<font color="#CCCCCC"> where we're</font><font color="#E5E5E5"> not at the</font>

1231
01:40:06,600 --> 01:40:13,980
<font color="#E5E5E5">point</font><font color="#CCCCCC"> in time</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> implement</font><font color="#CCCCCC"> the</font>

1232
01:40:08,220 --> 01:40:16,080
scheme<font color="#CCCCCC"> yep</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so how does our</font>

1233
01:40:13,980 --> 01:40:18,269
construction work on<font color="#E5E5E5"> a high level</font><font color="#CCCCCC"> my my</font>

1234
01:40:16,080 --> 01:40:20,430
my my my objective years to give you a

1235
01:40:18,270 --> 01:40:21,930
high level intuition<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the construction</font>

1236
01:40:20,430 --> 01:40:24,180
<font color="#E5E5E5">and if you are more in if you're</font>

1237
01:40:21,930 --> 01:40:31,290
interested in<font color="#E5E5E5"> more details</font><font color="#CCCCCC"> I refer you</font>

1238
01:40:24,180 --> 01:40:34,140
to the<font color="#E5E5E5"> papers so the the again there is</font>

1239
01:40:31,290 --> 01:40:35,640
an<font color="#CCCCCC"> issuer they issue as a as a set of</font>

1240
01:40:34,140 --> 01:40:37,980
public parameters which in this case are

1241
01:40:35,640 --> 01:40:41,690
<font color="#CCCCCC">the</font><font color="#E5E5E5"> public key and the</font><font color="#CCCCCC"> secret key of our</font>

1242
01:40:37,980 --> 01:40:44,280
predicate encryption scheme and a

1243
01:40:41,690 --> 01:40:48,120
credential consists for<font color="#E5E5E5"> a set</font><font color="#CCCCCC"> of at</font><font color="#E5E5E5"> you</font>

1244
01:40:44,280 --> 01:40:50,849
will say<font color="#E5E5E5"> consists of a key under</font><font color="#CCCCCC"> the</font>

1245
01:40:48,120 --> 01:40:55,260
secret key of the<font color="#E5E5E5"> of the of the credit</font>

1246
01:40:50,850 --> 01:40:58,830
of the<font color="#E5E5E5"> issuer</font><font color="#CCCCCC"> whereas a token consists</font>

1247
01:40:55,260 --> 01:41:01,170
of an encryption of<font color="#CCCCCC"> a</font><font color="#E5E5E5"> poly of a given</font>

1248
01:40:58,830 --> 01:41:03,120
policy<font color="#E5E5E5"> of one in this case it can</font><font color="#CCCCCC"> be any</font>

1249
01:41:01,170 --> 01:41:05,220
fixed<font color="#E5E5E5"> string but in this case we take</font>

1250
01:41:03,120 --> 01:41:07,050
one for<font color="#E5E5E5"> simplicity so it's not really</font>

1251
01:41:05,220 --> 01:41:09,180
important about<font color="#E5E5E5"> you encrypted what's</font>

1252
01:41:07,050 --> 01:41:14,430
important is it's the fact that you

1253
01:41:09,180 --> 01:41:16,260
embed the<font color="#E5E5E5"> policy there okay so so let's</font>

1254
01:41:14,430 --> 01:41:20,160
let's take<font color="#E5E5E5"> a look at we how</font><font color="#CCCCCC"> we verify it</font>

1255
01:41:16,260 --> 01:41:22,020
<font color="#CCCCCC">so</font><font color="#E5E5E5"> that the the challenge here is so the</font>

1256
01:41:20,160 --> 01:41:23,670
approach becomes relatively easy once

1257
01:41:22,020 --> 01:41:26,010
<font color="#E5E5E5">you once you throw non-interactive your</font>

1258
01:41:23,670 --> 01:41:27,360
knowledge to it but the challenge here

1259
01:41:26,010 --> 01:41:30,030
<font color="#CCCCCC">is that</font><font color="#E5E5E5"> we don't want to do that because</font>

1260
01:41:27,360 --> 01:41:32,280
<font color="#CCCCCC">that makes things usually way less</font>

1261
01:41:30,030 --> 01:41:34,500
efficient so we<font color="#E5E5E5"> want a black box black</font>

1262
01:41:32,280 --> 01:41:37,469
box construction<font color="#E5E5E5"> in the in the predicate</font>

1263
01:41:34,500 --> 01:41:39,449
encryption scheme how much time do<font color="#CCCCCC"> we</font>

1264
01:41:37,470 --> 01:41:42,880
have left

1265
01:41:39,449 --> 01:41:45,400
<font color="#E5E5E5">four minutes</font><font color="#CCCCCC"> better</font><font color="#E5E5E5"> so I give you</font><font color="#CCCCCC"> a</font>

1266
01:41:42,880 --> 01:41:47,409
quick intuition<font color="#E5E5E5"> what what's going on</font>

1267
01:41:45,400 --> 01:41:49,449
so<font color="#CCCCCC"> recall</font><font color="#E5E5E5"> that the fruit that proved it</font>

1268
01:41:47,409 --> 01:41:52,509
holds<font color="#CCCCCC"> a key whereas</font><font color="#E5E5E5"> a very fire a</font>

1269
01:41:49,449 --> 01:41:54,820
<font color="#CCCCCC">verifier holds a ciphertext and the main</font>

1270
01:41:52,510 --> 01:41:56,500
<font color="#E5E5E5">idea of this protocol</font><font color="#CCCCCC"> is that if the</font>

1271
01:41:54,820 --> 01:41:58,630
<font color="#E5E5E5">provers satisfy the policy</font><font color="#CCCCCC"> should be</font>

1272
01:41:56,500 --> 01:42:01,210
able<font color="#E5E5E5"> to decrypt any ciphertext right so</font>

1273
01:41:58,630 --> 01:42:04,119
so so first<font color="#E5E5E5"> thing that the two the two</font>

1274
01:42:01,210 --> 01:42:05,860
parties do is to run<font color="#E5E5E5"> a coin toss in</font>

1275
01:42:04,119 --> 01:42:09,690
protocol<font color="#E5E5E5"> with a certain random coin</font>

1276
01:42:05,860 --> 01:42:12,670
which are<font color="#E5E5E5"> denoted by the dices then the</font>

1277
01:42:09,690 --> 01:42:15,190
then the the verifier takes this input

1278
01:42:12,670 --> 01:42:17,199
this<font color="#E5E5E5"> randomness</font><font color="#CCCCCC"> reran demises the the</font>

1279
01:42:15,190 --> 01:42:20,469
encryptions<font color="#E5E5E5"> the encryption of the</font>

1280
01:42:17,199 --> 01:42:22,360
message and sends it to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> program</font><font color="#CCCCCC"> the</font>

1281
01:42:20,469 --> 01:42:24,670
<font color="#CCCCCC">pruvit then then tries to decrypt it</font>

1282
01:42:22,360 --> 01:42:26,320
commits to<font color="#E5E5E5"> its result</font><font color="#CCCCCC"> and at this point</font>

1283
01:42:24,670 --> 01:42:29,080
<font color="#E5E5E5">in time the verifier does not learn</font>

1284
01:42:26,320 --> 01:42:32,230
anything about about about the prover

1285
01:42:29,080 --> 01:42:36,070
and in order to<font color="#E5E5E5"> avoid to avoid selective</font>

1286
01:42:32,230 --> 01:42:38,230
failures attack the<font color="#CCCCCC"> the verifier has to</font>

1287
01:42:36,070 --> 01:42:40,299
send<font color="#CCCCCC"> the coins output by the coin toss</font>

1288
01:42:38,230 --> 01:42:43,509
in protocol with those with this

1289
01:42:40,300 --> 01:42:46,000
<font color="#E5E5E5">information the the prover can recompute</font>

1290
01:42:43,510 --> 01:42:49,719
<font color="#E5E5E5">the old protocol about</font><font color="#CCCCCC"> and then if</font>

1291
01:42:46,000 --> 01:42:52,600
<font color="#E5E5E5">everything went well he he commits but</font>

1292
01:42:49,719 --> 01:42:56,560
<font color="#E5E5E5">thereby revealing the answer to the to</font>

1293
01:42:52,600 --> 01:42:59,610
the to the challenge<font color="#E5E5E5"> and if the two</font>

1294
01:42:56,560 --> 01:43:03,369
messages<font color="#CCCCCC"> match then we can be</font><font color="#E5E5E5"> sure that</font>

1295
01:42:59,610 --> 01:43:06,549
the prover had enough<font color="#CCCCCC"> rights to to</font>

1296
01:43:03,369 --> 01:43:11,019
<font color="#E5E5E5">access the policy okay so we actually</font>

1297
01:43:06,550 --> 01:43:12,610
<font color="#CCCCCC">implemented this we have a c++ prototype</font>

1298
01:43:11,020 --> 01:43:14,860
implementation and we use the predicate

1299
01:43:12,610 --> 01:43:21,460
encryption of<font color="#CCCCCC"> Okamoto</font><font color="#E5E5E5"> and takashima from</font>

1300
01:43:14,860 --> 01:43:23,409
from cans cans 20 2011<font color="#E5E5E5"> and so so you</font>

1301
01:43:21,460 --> 01:43:25,449
must know that there<font color="#E5E5E5"> is a generic</font>

1302
01:43:23,409 --> 01:43:28,179
transformation from from inner product

1303
01:43:25,449 --> 01:43:31,000
<font color="#CCCCCC">two</font><font color="#E5E5E5"> to two boolean formulas of constant</font>

1304
01:43:28,179 --> 01:43:33,760
death<font color="#CCCCCC"> and so the main parameter of our</font>

1305
01:43:31,000 --> 01:43:34,469
analysis is going<font color="#E5E5E5"> to be the</font><font color="#CCCCCC"> size of</font><font color="#E5E5E5"> the</font>

1306
01:43:33,760 --> 01:43:36,820
array

1307
01:43:34,469 --> 01:43:39,460
unfortunately the the<font color="#E5E5E5"> depth of the</font>

1308
01:43:36,820 --> 01:43:40,929
formula<font color="#E5E5E5"> grows sorry that the length of</font>

1309
01:43:39,460 --> 01:43:43,980
<font color="#E5E5E5">the array grows exponentially we did</font>

1310
01:43:40,929 --> 01:43:47,570
that for<font color="#E5E5E5"> the formulas and this is why</font>

1311
01:43:43,980 --> 01:43:49,830
this is why we have only constant death

1312
01:43:47,570 --> 01:43:52,590
<font color="#CCCCCC">it would</font><font color="#E5E5E5"> be amazing of course</font><font color="#CCCCCC"> if you</font>

1313
01:43:49,830 --> 01:43:54,239
<font color="#E5E5E5">could push this result but that I think</font>

1314
01:43:52,590 --> 01:43:56,550
that<font color="#E5E5E5"> will require major breakthrough</font>

1315
01:43:54,239 --> 01:43:59,309
breakthrough in crypto<font color="#E5E5E5"> as since</font><font color="#CCCCCC"> these</font>

1316
01:43:56,550 --> 01:44:00,540
<font color="#CCCCCC">two notion of functional</font><font color="#E5E5E5"> credential</font><font color="#CCCCCC"> and</font>

1317
01:43:59,310 --> 01:44:03,360
<font color="#E5E5E5">predicate encryption they're very</font>

1318
01:44:00,540 --> 01:44:05,400
entangled and of course if you had

1319
01:44:03,360 --> 01:44:09,900
better ideas<font color="#E5E5E5"> I'm really happy to hear</font>

1320
01:44:05,400 --> 01:44:11,879
them<font color="#E5E5E5"> anyway so so let's believe that the</font>

1321
01:44:09,900 --> 01:44:15,540
vector<font color="#CCCCCC"> n is it is a good measurement</font><font color="#E5E5E5"> for</font>

1322
01:44:11,880 --> 01:44:17,310
the moment<font color="#E5E5E5"> of course commitment is is</font>

1323
01:44:15,540 --> 01:44:19,980
done in the random Oracle model so uses

1324
01:44:17,310 --> 01:44:22,140
just<font color="#E5E5E5"> a hash function for for the sake of</font>

1325
01:44:19,980 --> 01:44:25,169
efficiency and so those are<font color="#E5E5E5"> essentially</font>

1326
01:44:22,140 --> 01:44:27,600
for free<font color="#E5E5E5"> so you can see that for a</font>

1327
01:44:25,170 --> 01:44:30,810
<font color="#E5E5E5">vector length of around around a</font>

1328
01:44:27,600 --> 01:44:32,700
thousand the<font color="#E5E5E5"> the running time of the</font>

1329
01:44:30,810 --> 01:44:36,480
program<font color="#CCCCCC"> verifier are still in the realm</font>

1330
01:44:32,700 --> 01:44:39,780
<font color="#E5E5E5">of feasibility so means seconds</font><font color="#CCCCCC"> so which</font>

1331
01:44:36,480 --> 01:44:41,879
<font color="#E5E5E5">is which is something it's not so</font><font color="#CCCCCC"> ideal</font>

1332
01:44:39,780 --> 01:44:45,690
but but at least<font color="#CCCCCC"> it's a feasibility</font>

1333
01:44:41,880 --> 01:44:50,190
result and interestingly<font color="#CCCCCC"> enough if we</font>

1334
01:44:45,690 --> 01:44:54,500
<font color="#CCCCCC">apply our our our</font><font color="#E5E5E5"> functional credential</font>

1335
01:44:50,190 --> 01:44:57,150
scheme<font color="#E5E5E5"> to oblivious</font><font color="#CCCCCC"> ram then</font><font color="#E5E5E5"> then we</font>

1336
01:44:54,500 --> 01:44:58,830
eliminate the need for some expenses

1337
01:44:57,150 --> 01:45:02,190
your knowledge which were from<font color="#E5E5E5"> the</font>

1338
01:44:58,830 --> 01:45:03,870
original scheme and if you<font color="#CCCCCC"> compared</font><font color="#E5E5E5"> the</font>

1339
01:45:02,190 --> 01:45:08,790
running time of the<font color="#E5E5E5"> two authentication</font>

1340
01:45:03,870 --> 01:45:10,860
mechanisms in terms of number of<font color="#E5E5E5"> clients</font>

1341
01:45:08,790 --> 01:45:17,300
there is there is at least one order<font color="#CCCCCC"> of</font>

1342
01:45:10,860 --> 01:45:19,920
magnitude<font color="#CCCCCC"> of improvement in that</font><font color="#E5E5E5"> so yeah</font>

1343
01:45:17,300 --> 01:45:22,710
that's what this<font color="#CCCCCC"> estimated takeoff</font>

1344
01:45:19,920 --> 01:45:25,410
message of the table and so we didn't we

1345
01:45:22,710 --> 01:45:27,660
didn't go any<font color="#E5E5E5"> further ten</font><font color="#CCCCCC"> clients</font>

1346
01:45:25,410 --> 01:45:30,000
because that's as far<font color="#E5E5E5"> as the</font><font color="#CCCCCC"> the</font>

1347
01:45:27,660 --> 01:45:32,430
original<font color="#CCCCCC"> paper goes but</font><font color="#E5E5E5"> we expect that</font>

1348
01:45:30,000 --> 01:45:34,470
<font color="#CCCCCC">the gap will increase</font><font color="#E5E5E5"> together with the</font>

1349
01:45:32,430 --> 01:45:36,210
<font color="#E5E5E5">number of clients</font><font color="#CCCCCC"> so seems like our</font>

1350
01:45:34,470 --> 01:45:40,230
solution here<font color="#E5E5E5"> scales significantly</font>

1351
01:45:36,210 --> 01:45:42,090
better than<font color="#E5E5E5"> that okay</font><font color="#CCCCCC"> so with that</font><font color="#E5E5E5"> I</font>

1352
01:45:40,230 --> 01:45:43,259
<font color="#E5E5E5">would like</font><font color="#CCCCCC"> to conclude and thank you for</font>

1353
01:45:42,090 --> 01:45:45,440
<font color="#CCCCCC">your attention</font><font color="#E5E5E5"> and happy to take</font>

1354
01:45:43,260 --> 01:45:45,440
questions

1355
01:45:49,079 --> 01:45:58,090
questions for<font color="#E5E5E5"> Giulio thanks for your</font>

1356
01:45:55,840 --> 01:46:00,130
talk so<font color="#CCCCCC"> a little clarification on sort</font>

1357
01:45:58,090 --> 01:46:02,139
<font color="#CCCCCC">of the track</font><font color="#E5E5E5"> model so you say</font><font color="#CCCCCC"> that the</font>

1358
01:46:00,130 --> 01:46:04,090
verifier that has been<font color="#E5E5E5"> delegated the</font>

1359
01:46:02,139 --> 01:46:05,590
policy<font color="#CCCCCC"> yes should</font><font color="#E5E5E5"> not be able to learn</font>

1360
01:46:04,090 --> 01:46:07,570
<font color="#E5E5E5">much about this policy</font><font color="#CCCCCC"> right but it</font>

1361
01:46:05,590 --> 01:46:11,619
seems to<font color="#E5E5E5"> me that if this verifier is</font>

1362
01:46:07,570 --> 01:46:13,090
<font color="#E5E5E5">colluding</font><font color="#CCCCCC"> with some possible users that</font>

1363
01:46:11,619 --> 01:46:14,829
<font color="#E5E5E5">have</font><font color="#CCCCCC"> been giving a credential it can</font>

1364
01:46:13,090 --> 01:46:17,619
actually<font color="#E5E5E5"> figure</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> relatively</font><font color="#CCCCCC"> quickly</font>

1365
01:46:14,829 --> 01:46:21,150
what what that<font color="#CCCCCC"> policy is is that</font><font color="#E5E5E5"> correct</font>

1366
01:46:17,619 --> 01:46:26,190
<font color="#E5E5E5">or so so so what you're saying is that</font>

1367
01:46:21,150 --> 01:46:28,900
given given<font color="#E5E5E5"> a</font><font color="#CCCCCC"> certain a certain</font><font color="#E5E5E5"> set of</font>

1368
01:46:26,190 --> 01:46:29,709
<font color="#E5E5E5">keys you can</font><font color="#CCCCCC"> just test your</font><font color="#E5E5E5"> thing</font>

1369
01:46:28,900 --> 01:46:32,259
against<font color="#E5E5E5"> that</font>

1370
01:46:29,709 --> 01:46:34,090
yeah but yes that you can always<font color="#E5E5E5"> do and</font>

1371
01:46:32,260 --> 01:46:35,650
<font color="#E5E5E5">and we can't prevent that because that's</font>

1372
01:46:34,090 --> 01:46:38,199
<font color="#CCCCCC">part of</font><font color="#E5E5E5"> the functionality of the scheme</font>

1373
01:46:35,650 --> 01:46:39,940
<font color="#E5E5E5">but the idea</font><font color="#CCCCCC"> of the idea is that you</font>

1374
01:46:38,199 --> 01:46:43,570
should<font color="#CCCCCC"> not</font><font color="#E5E5E5"> learn anything beyond that</font>

1375
01:46:39,940 --> 01:46:46,749
<font color="#E5E5E5">and again as an</font><font color="#CCCCCC"> eyewear this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> useful</font>

1376
01:46:43,570 --> 01:46:48,999
<font color="#E5E5E5">could be when the policy is not like a</font>

1377
01:46:46,749 --> 01:46:54,269
<font color="#E5E5E5">boolean policy but it's it's a more</font>

1378
01:46:48,999 --> 01:46:57,809
complicated one so for example<font color="#CCCCCC"> a</font><font color="#E5E5E5"> BBS run</font>

1379
01:46:54,269 --> 01:46:57,809
more<font color="#E5E5E5"> questions</font>

1380
01:47:07,290 --> 01:47:15,840
in your definition<font color="#CCCCCC"> of anonymity</font>

1381
01:47:11,100 --> 01:47:19,470
do you consider unlink ability<font color="#E5E5E5"> between</font>

1382
01:47:15,840 --> 01:47:22,800
two<font color="#CCCCCC"> sessions from</font><font color="#E5E5E5"> the same user</font><font color="#CCCCCC"> 60s so</font>

1383
01:47:19,470 --> 01:47:25,350
in your definition<font color="#CCCCCC"> of</font><font color="#E5E5E5"> anonymity if the</font>

1384
01:47:22,800 --> 01:47:28,460
same user has two<font color="#CCCCCC"> different sessions can</font>

1385
01:47:25,350 --> 01:47:32,820
those<font color="#CCCCCC"> be linked or that's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> covered oh</font>

1386
01:47:28,460 --> 01:47:35,220
yeah so so we just<font color="#CCCCCC"> gave it a unified</font>

1387
01:47:32,820 --> 01:47:38,130
name but the<font color="#E5E5E5"> the so if you if you go in</font>

1388
01:47:35,220 --> 01:47:40,500
the paper<font color="#E5E5E5"> the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> definition is model</font>

1389
01:47:38,130 --> 01:47:42,870
giving<font color="#E5E5E5"> Oracle access so you can</font><font color="#CCCCCC"> query</font>

1390
01:47:40,500 --> 01:47:45,690
this this this object as many times as

1391
01:47:42,870 --> 01:47:47,490
<font color="#E5E5E5">you want and and you should still even</font>

1392
01:47:45,690 --> 01:47:48,540
if you create<font color="#E5E5E5"> many times which which</font>

1393
01:47:47,490 --> 01:47:50,880
means two sessions

1394
01:47:48,540 --> 01:47:53,390
<font color="#CCCCCC">you should still not be</font><font color="#E5E5E5"> able to figure</font>

1395
01:47:50,880 --> 01:47:53,390
<font color="#E5E5E5">out who it</font>

1396
01:47:57,469 --> 01:48:06,199
more questions<font color="#CCCCCC"> I have one so these times</font>

1397
01:48:02,810 --> 01:48:08,360
here are in milliseconds<font color="#E5E5E5"> so that's nice</font>

1398
01:48:06,199 --> 01:48:12,019
<font color="#E5E5E5">and fast but your previous slide had</font>

1399
01:48:08,360 --> 01:48:13,420
like 15 to 20 seconds<font color="#E5E5E5"> that yet so so</font>

1400
01:48:12,020 --> 01:48:16,989
what's the<font color="#CCCCCC"> difference between these</font><font color="#E5E5E5"> Oh</font>

1401
01:48:13,420 --> 01:48:19,910
here the<font color="#CCCCCC"> vector the vector length is 10</font>

1402
01:48:16,989 --> 01:48:23,599
so it's very<font color="#E5E5E5"> short if you</font><font color="#CCCCCC"> see they're</font>

1403
01:48:19,910 --> 01:48:24,860
consistent yeah<font color="#E5E5E5"> so so again we didn't we</font>

1404
01:48:23,600 --> 01:48:26,750
didn't push it<font color="#E5E5E5"> far because the original</font>

1405
01:48:24,860 --> 01:48:31,400
<font color="#E5E5E5">paper just considered up to</font><font color="#CCCCCC"> 10 clients</font>

1406
01:48:26,750 --> 01:48:34,400
<font color="#CCCCCC">so</font><font color="#E5E5E5"> we couldn't compare with</font><font color="#CCCCCC"> it but you</font>

1407
01:48:31,400 --> 01:48:36,679
can<font color="#CCCCCC"> see it is roughly one client per</font><font color="#E5E5E5"> M</font>

1408
01:48:34,400 --> 01:48:40,070
so still again in the realm of

1409
01:48:36,680 --> 01:48:43,190
feasibility for<font color="#E5E5E5"> for for let's say a</font>

1410
01:48:40,070 --> 01:48:43,960
thousand clients<font color="#E5E5E5"> great</font><font color="#CCCCCC"> any last</font>

1411
01:48:43,190 --> 01:48:54,349
<font color="#E5E5E5">questions</font>

1412
01:48:43,960 --> 01:48:57,940
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right this</font><font color="#CCCCCC"> length speaker avoid</font>

1413
01:48:54,350 --> 01:48:57,940
technical problems by using<font color="#E5E5E5"> this</font>

1414
01:49:01,050 --> 01:49:09,680
we may have way we avoid one particular

1415
01:49:04,150 --> 01:49:21,400
cloud<font color="#CCCCCC"> alright our next</font><font color="#E5E5E5"> speaker</font><font color="#CCCCCC"> is</font>

1416
01:49:09,680 --> 01:49:24,830
[Music]

1417
01:49:21,400 --> 01:49:27,530
so I<font color="#CCCCCC"> suspect most of</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> seen this</font>

1418
01:49:24,830 --> 01:49:30,470
idea<font color="#E5E5E5"> of nested encryption in the context</font>

1419
01:49:27,530 --> 01:49:34,340
of Onion Routing<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> a client</font>

1420
01:49:30,470 --> 01:49:36,590
multiple-- encrypts a message that it

1421
01:49:34,340 --> 01:49:40,280
wants<font color="#CCCCCC"> to push through</font><font color="#E5E5E5"> this Onion Routing</font>

1422
01:49:36,590 --> 01:49:44,030
<font color="#CCCCCC">Network and then each layer of The Onion</font>

1423
01:49:40,280 --> 01:49:45,590
Router strips away<font color="#E5E5E5"> one</font><font color="#CCCCCC"> each</font><font color="#E5E5E5"> each hour</font>

1424
01:49:44,030 --> 01:49:48,259
each Onion Router strips away<font color="#E5E5E5"> one layer</font>

1425
01:49:45,590 --> 01:49:49,550
of encryption<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> plaintext</font><font color="#E5E5E5"> message</font>

1426
01:49:48,260 --> 01:49:53,600
<font color="#CCCCCC">perhaps something</font><font color="#E5E5E5"> you're trying</font><font color="#CCCCCC"> to send</font>

1427
01:49:49,550 --> 01:49:55,220
<font color="#E5E5E5">off</font><font color="#CCCCCC"> to some to</font><font color="#E5E5E5"> some server emerges at</font>

1428
01:49:53,600 --> 01:49:57,170
the at the edge of the Onion Routing

1429
01:49:55,220 --> 01:50:00,160
<font color="#CCCCCC">Network the problem that we ask in this</font>

1430
01:49:57,170 --> 01:50:03,590
<font color="#E5E5E5">paper is what exactly is the problem</font>

1431
01:50:00,160 --> 01:50:07,490
<font color="#CCCCCC">that this nested encryption is</font>

1432
01:50:03,590 --> 01:50:11,870
presumably<font color="#E5E5E5"> a solution to and you know I</font>

1433
01:50:07,490 --> 01:50:13,610
<font color="#CCCCCC">I suppose</font><font color="#E5E5E5"> the presumably is the</font>

1434
01:50:11,870 --> 01:50:16,730
operative word<font color="#CCCCCC"> here because</font><font color="#E5E5E5"> I think</font>

1435
01:50:13,610 --> 01:50:18,620
<font color="#E5E5E5">until</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> formalized this in a</font>

1436
01:50:16,730 --> 01:50:21,080
meaningful<font color="#E5E5E5"> way you don't really know</font>

1437
01:50:18,620 --> 01:50:23,660
whether or not<font color="#E5E5E5"> nested encryption works</font>

1438
01:50:21,080 --> 01:50:26,120
or what properties the encryption scheme

1439
01:50:23,660 --> 01:50:28,130
needs<font color="#E5E5E5"> to</font><font color="#CCCCCC"> satisfy in</font><font color="#E5E5E5"> order for nested</font>

1440
01:50:26,120 --> 01:50:32,030
encryption to do what you hope that<font color="#E5E5E5"> it</font>

1441
01:50:28,130 --> 01:50:34,720
would do so we seek here<font color="#CCCCCC"> a provable</font>

1442
01:50:32,030 --> 01:50:38,050
security treatment for this<font color="#CCCCCC"> problem and</font>

1443
01:50:34,720 --> 01:50:40,250
I'm doing<font color="#E5E5E5"> this in the kind of concrete</font>

1444
01:50:38,050 --> 01:50:43,670
<font color="#CCCCCC">practice-oriented tradition</font><font color="#E5E5E5"> so I want a</font>

1445
01:50:40,250 --> 01:50:44,570
<font color="#CCCCCC">clear syntax and definition for the</font>

1446
01:50:43,670 --> 01:50:47,900
problem at hand

1447
01:50:44,570 --> 01:50:50,960
and once that's<font color="#CCCCCC"> done we want</font><font color="#E5E5E5"> to look at</font>

1448
01:50:47,900 --> 01:50:53,509
some constructions<font color="#CCCCCC"> I'll explain that</font>

1449
01:50:50,960 --> 01:50:55,880
towards<font color="#E5E5E5"> real a protocol doesn't satisfy</font>

1450
01:50:53,510 --> 01:50:58,070
our definition<font color="#E5E5E5"> it doesn't for the simple</font>

1451
01:50:55,880 --> 01:51:00,350
reason<font color="#E5E5E5"> that tagging attacks are excluded</font>

1452
01:50:58,070 --> 01:51:02,599
by<font color="#E5E5E5"> our</font><font color="#CCCCCC"> definition of security and</font>

1453
01:51:00,350 --> 01:51:05,230
towards<font color="#CCCCCC"> real a protocol</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> susceptible</font>

1454
01:51:02,600 --> 01:51:06,869
to them and then I'll describe<font color="#E5E5E5"> an</font>

1455
01:51:05,230 --> 01:51:08,909
alternative

1456
01:51:06,869 --> 01:51:12,780
that does satisfy the definition<font color="#E5E5E5"> and</font>

1457
01:51:08,909 --> 01:51:17,219
it's effectively<font color="#CCCCCC"> Nick</font><font color="#E5E5E5"> Matheson</font><font color="#CCCCCC"> design</font>

1458
01:51:12,780 --> 01:51:20,728
one from proposal 202<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> to our</font>

1459
01:51:17,219 --> 01:51:23,760
community<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so when I say I want to</font>

1460
01:51:20,729 --> 01:51:27,719
<font color="#E5E5E5">give a approvable security treatment</font>

1461
01:51:23,760 --> 01:51:29,280
here<font color="#E5E5E5"> I want it to be concrete</font><font color="#CCCCCC"> and</font>

1462
01:51:27,719 --> 01:51:31,739
self-contained in particular I'm<font color="#E5E5E5"> not</font>

1463
01:51:29,280 --> 01:51:33,898
looking for<font color="#CCCCCC"> something in</font><font color="#E5E5E5"> the in the you</font>

1464
01:51:31,739 --> 01:51:36,299
see in the<font color="#CCCCCC"> Universal composability model</font>

1465
01:51:33,899 --> 01:51:38,939
<font color="#E5E5E5">but something that's that's that's clear</font>

1466
01:51:36,300 --> 01:51:43,139
<font color="#E5E5E5">in</font><font color="#CCCCCC"> game-based</font><font color="#E5E5E5"> it'll it'll be based on</font>

1467
01:51:38,939 --> 01:51:45,869
indistinguishability<font color="#CCCCCC"> this is the the</font>

1468
01:51:43,139 --> 01:51:47,939
basic problem an adversary faces when

1469
01:51:45,869 --> 01:51:49,348
it's interacting with<font color="#E5E5E5"> one of two kinds</font>

1470
01:51:47,939 --> 01:51:51,929
of Oracle's and it just wants<font color="#CCCCCC"> to</font>

1471
01:51:49,349 --> 01:51:53,849
identify<font color="#E5E5E5"> which of the two Oracle's it's</font>

1472
01:51:51,929 --> 01:51:57,019
interacting with based on<font color="#E5E5E5"> the</font>

1473
01:51:53,849 --> 01:51:59,849
<font color="#CCCCCC">input-output behavior of those Oracle's</font>

1474
01:51:57,019 --> 01:52:02,689
indistinguishability<font color="#E5E5E5"> is one and in</font><font color="#CCCCCC"> fact</font>

1475
01:51:59,849 --> 01:52:05,459
the<font color="#E5E5E5"> most popular way that we use to</font>

1476
01:52:02,689 --> 01:52:07,829
quantify<font color="#E5E5E5"> advantage the adversaries</font>

1477
01:52:05,459 --> 01:52:09,898
advantage<font color="#E5E5E5"> in</font><font color="#CCCCCC"> distinguishing these two</font>

1478
01:52:07,829 --> 01:52:11,898
Oracle's<font color="#E5E5E5"> is just the probability it says</font>

1479
01:52:09,899 --> 01:52:14,429
<font color="#E5E5E5">one when it interacts</font><font color="#CCCCCC"> with one</font><font color="#E5E5E5"> world</font>

1480
01:52:11,899 --> 01:52:18,110
minus the<font color="#E5E5E5"> probability it outputs one</font>

1481
01:52:14,429 --> 01:52:18,110
when<font color="#CCCCCC"> interacting in the</font><font color="#E5E5E5"> other</font>

1482
01:52:19,820 --> 01:52:26,389
perhaps the main idea here<font color="#E5E5E5"> is simply to</font>

1483
01:52:23,210 --> 01:52:28,580
<font color="#E5E5E5">view the problem that nested encryption</font>

1484
01:52:26,390 --> 01:52:30,890
aims to solve<font color="#E5E5E5"> as a flavor of</font>

1485
01:52:28,580 --> 01:52:32,630
authenticated encryption<font color="#E5E5E5"> authenticated</font>

1486
01:52:30,890 --> 01:52:34,730
encryption is by now a very<font color="#E5E5E5"> well-known</font>

1487
01:52:32,630 --> 01:52:36,950
<font color="#E5E5E5">primitive</font><font color="#CCCCCC"> in which you're trying to</font>

1488
01:52:34,730 --> 01:52:39,830
simultaneously achieve privacy and

1489
01:52:36,950 --> 01:52:42,170
authenticity<font color="#CCCCCC"> that is ostensibly what's</font>

1490
01:52:39,830 --> 01:52:44,150
going on in in these<font color="#E5E5E5"> protocols you know</font>

1491
01:52:42,170 --> 01:52:46,730
the the tour<font color="#CCCCCC"> real a protocol for example</font>

1492
01:52:44,150 --> 01:52:49,160
<font color="#CCCCCC">adds in a bunch of zero bits and then</font>

1493
01:52:46,730 --> 01:52:52,459
applies nested encryption<font color="#E5E5E5"> based on</font>

1494
01:52:49,160 --> 01:52:57,019
counter mode<font color="#CCCCCC"> it would at the at the end</font>

1495
01:52:52,460 --> 01:52:58,970
<font color="#E5E5E5">point</font><font color="#CCCCCC"> we check for the presence of</font><font color="#E5E5E5"> those</font>

1496
01:52:57,020 --> 01:53:00,500
zero bits that's the authenticity check

1497
01:52:58,970 --> 01:53:02,740
and the nested counter mode is

1498
01:53:00,500 --> 01:53:10,130
<font color="#E5E5E5">presumably our mechanism for achieving</font>

1499
01:53:02,740 --> 01:53:11,780
<font color="#E5E5E5">for achieving privacy so the the who's</font>

1500
01:53:10,130 --> 01:53:13,760
doing the<font color="#CCCCCC"> encryption and who's doing</font><font color="#E5E5E5"> the</font>

1501
01:53:11,780 --> 01:53:15,530
decryption here so the encryption<font color="#E5E5E5"> is</font>

1502
01:53:13,760 --> 01:53:19,280
effectively<font color="#CCCCCC"> the client hey in this</font>

1503
01:53:15,530 --> 01:53:22,130
picture and<font color="#E5E5E5"> decryption is then done by</font>

1504
01:53:19,280 --> 01:53:24,710
each<font color="#E5E5E5"> and every node each and every Onion</font>

1505
01:53:22,130 --> 01:53:27,070
Router<font color="#E5E5E5"> there are</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> lots of flavors</font>

1506
01:53:24,710 --> 01:53:29,260
of authenticated encryption

1507
01:53:27,070 --> 01:53:32,630
<font color="#E5E5E5">probabilistic authenticated encryption</font>

1508
01:53:29,260 --> 01:53:34,700
non-space misuse resistant<font color="#E5E5E5"> robust off</font>

1509
01:53:32,630 --> 01:53:37,730
all kinds<font color="#CCCCCC"> of</font><font color="#E5E5E5"> flavors and I'm suggesting</font>

1510
01:53:34,700 --> 01:53:40,099
<font color="#E5E5E5">that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> problem that nested encryption</font>

1511
01:53:37,730 --> 01:53:42,169
solves is yet another flavor of

1512
01:53:40,100 --> 01:53:44,330
authenticated encryption<font color="#CCCCCC"> and we call it</font>

1513
01:53:42,170 --> 01:53:48,620
<font color="#CCCCCC">Onion authenticated encryption</font><font color="#E5E5E5"> Onion</font>

1514
01:53:44,330 --> 01:53:50,420
<font color="#CCCCCC">ayyy ok so I promise to provable</font>

1515
01:53:48,620 --> 01:53:56,330
security treatment of this problem<font color="#E5E5E5"> that</font>

1516
01:53:50,420 --> 01:53:59,360
I've now named<font color="#CCCCCC"> Onion AE</font><font color="#E5E5E5"> so I like to</font>

1517
01:53:56,330 --> 01:54:00,950
<font color="#E5E5E5">clearly separate the syntax of the thing</font>

1518
01:53:59,360 --> 01:54:02,660
<font color="#CCCCCC">that we're trying to define</font><font color="#E5E5E5"> from the</font>

1519
01:54:00,950 --> 01:54:04,610
security definition so what is<font color="#E5E5E5"> this</font>

1520
01:54:02,660 --> 01:54:07,160
<font color="#CCCCCC">thing just as a simple syntactic object</font>

1521
01:54:04,610 --> 01:54:09,290
so it's a three tuple<font color="#E5E5E5"> of algorithms</font>

1522
01:54:07,160 --> 01:54:11,840
there's a key generation algorithm an

1523
01:54:09,290 --> 01:54:13,960
encryption algorithm and a<font color="#E5E5E5"> decryption</font>

1524
01:54:11,840 --> 01:54:15,490
algorithm the key generation algorithm

1525
01:54:13,960 --> 01:54:17,740
<font color="#CCCCCC">produces</font>

1526
01:54:15,490 --> 01:54:21,420
<font color="#CCCCCC">Derr of everybody's keys so the client</font>

1527
01:54:17,740 --> 01:54:24,490
here presumably<font color="#E5E5E5"> his key consists of the</font>

1528
01:54:21,420 --> 01:54:26,410
the<font color="#E5E5E5"> collection of all</font><font color="#CCCCCC"> of the individual</font>

1529
01:54:24,490 --> 01:54:29,620
<font color="#E5E5E5">Alaris keys</font><font color="#CCCCCC"> so that's not actually</font>

1530
01:54:26,410 --> 01:54:32,710
mandated<font color="#E5E5E5"> and he does the encryption the</font>

1531
01:54:29,620 --> 01:54:35,940
<font color="#E5E5E5">decryption is then done in in phases one</font>

1532
01:54:32,710 --> 01:54:35,940
layer at each alarm

1533
01:54:36,540 --> 01:54:41,860
unlike conventional<font color="#E5E5E5"> nonce based</font>

1534
01:54:38,860 --> 01:54:45,309
authenticated encryption<font color="#CCCCCC"> we're going to</font>

1535
01:54:41,860 --> 01:54:48,040
need<font color="#E5E5E5"> that the encryption algorithm as</font>

1536
01:54:45,310 --> 01:54:50,770
well as the<font color="#E5E5E5"> decryption algorithms are</font>

1537
01:54:48,040 --> 01:54:53,519
stateful<font color="#E5E5E5"> the strong security notion</font><font color="#CCCCCC"> were</font>

1538
01:54:50,770 --> 01:54:58,360
<font color="#E5E5E5">after is not going to be achievable by</font>

1539
01:54:53,520 --> 01:55:02,980
<font color="#E5E5E5">stateless schemes and we'll see that</font>

1540
01:54:58,360 --> 01:55:06,880
<font color="#CCCCCC">later you know after</font><font color="#E5E5E5"> we define the</font>

1541
01:55:02,980 --> 01:55:08,410
syntax<font color="#E5E5E5"> of any cryptographic object we</font>

1542
01:55:06,880 --> 01:55:10,840
normally specify the correctness

1543
01:55:08,410 --> 01:55:14,110
condition for it and I want<font color="#E5E5E5"> to do that</font>

1544
01:55:10,840 --> 01:55:17,740
quite explicitly here<font color="#CCCCCC"> and we'll see why</font>

1545
01:55:14,110 --> 01:55:20,380
<font color="#E5E5E5">later</font><font color="#CCCCCC"> correctness is simply asserting</font>

1546
01:55:17,740 --> 01:55:23,590
<font color="#CCCCCC">that no matter</font><font color="#E5E5E5"> what key you choose over</font>

1547
01:55:20,380 --> 01:55:26,260
here no matter<font color="#E5E5E5"> what</font><font color="#CCCCCC"> sequence of messages</font>

1548
01:55:23,590 --> 01:55:29,560
<font color="#CCCCCC">you feed to the encrypting party if you</font>

1549
01:55:26,260 --> 01:55:32,710
faithfully relay the the<font color="#CCCCCC"> ciphertext</font>

1550
01:55:29,560 --> 01:55:35,500
<font color="#E5E5E5">through our our network you'll get back</font>

1551
01:55:32,710 --> 01:55:38,710
<font color="#E5E5E5">well M equals M</font><font color="#CCCCCC"> Prime for</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> message</font>

1552
01:55:35,500 --> 01:55:40,450
you'll get back the the<font color="#CCCCCC"> sequence</font><font color="#E5E5E5"> of</font>

1553
01:55:38,710 --> 01:55:42,610
messages<font color="#CCCCCC"> that you initially</font><font color="#E5E5E5"> encrypted</font>

1554
01:55:40,450 --> 01:55:44,950
you'll never get back this distinguished

1555
01:55:42,610 --> 01:55:48,179
symbol bottom which<font color="#CCCCCC"> is used to</font><font color="#E5E5E5"> indicate</font>

1556
01:55:44,950 --> 01:55:48,179
an authenticity<font color="#E5E5E5"> err</font>

1557
01:55:49,280 --> 01:55:56,550
okay so that's<font color="#E5E5E5"> the syntax</font><font color="#CCCCCC"> and how then</font>

1558
01:55:52,380 --> 01:55:59,010
do we formalize security so it looks

1559
01:55:56,550 --> 01:56:01,140
rather like like<font color="#CCCCCC"> nonce based</font>

1560
01:55:59,010 --> 01:56:04,410
<font color="#E5E5E5">authenticated encryption or almost any</font>

1561
01:56:01,140 --> 01:56:06,630
<font color="#E5E5E5">of the other</font><font color="#CCCCCC"> AE</font><font color="#E5E5E5"> flavors our adversary</font>

1562
01:56:04,410 --> 01:56:08,730
here is imagined<font color="#CCCCCC"> to be interacting in</font>

1563
01:56:06,630 --> 01:56:10,590
one of two worlds<font color="#CCCCCC"> on the left is the</font>

1564
01:56:08,730 --> 01:56:14,370
kind of real<font color="#E5E5E5"> world where it has</font><font color="#CCCCCC"> an</font>

1565
01:56:10,590 --> 01:56:17,220
actual encryption<font color="#CCCCCC"> and decryption</font><font color="#E5E5E5"> pair of</font>

1566
01:56:14,370 --> 01:56:18,930
<font color="#E5E5E5">Oracle's the encryption Oracle is doing</font>

1567
01:56:17,220 --> 01:56:22,140
<font color="#E5E5E5">something like that nested encryption</font>

1568
01:56:18,930 --> 01:56:23,910
operation and the decryption<font color="#E5E5E5"> Oracle</font><font color="#CCCCCC"> well</font>

1569
01:56:22,140 --> 01:56:27,140
<font color="#E5E5E5">it's emulating</font><font color="#CCCCCC"> what happens at a</font>

1570
01:56:23,910 --> 01:56:30,360
particular<font color="#CCCCCC"> L R so the adversary</font>

1571
01:56:27,140 --> 01:56:33,000
<font color="#E5E5E5">identifies which L are in the chain that</font>

1572
01:56:30,360 --> 01:56:34,740
<font color="#E5E5E5">it's it's targeting that's this index I</font>

1573
01:56:33,000 --> 01:56:37,100
and then the<font color="#CCCCCC"> ciphertext that</font><font color="#E5E5E5"> it's</font>

1574
01:56:34,740 --> 01:56:39,660
feeding<font color="#E5E5E5"> it and it gets back whatever the</font>

1575
01:56:37,100 --> 01:56:42,930
algorithm dictates should be returned

1576
01:56:39,660 --> 01:56:44,730
<font color="#E5E5E5">this is the real world we would like</font>

1577
01:56:42,930 --> 01:56:47,580
this to be indistinguishable<font color="#E5E5E5"> from an</font>

1578
01:56:44,730 --> 01:56:50,639
ideal world whose behavior is<font color="#CCCCCC"> very</font>

1579
01:56:47,580 --> 01:56:53,880
simple<font color="#E5E5E5"> whatever you</font><font color="#CCCCCC"> ask to encrypt it</font>

1580
01:56:50,640 --> 01:56:56,970
produces random bits<font color="#E5E5E5"> whatever you ask to</font>

1581
01:56:53,880 --> 01:56:59,250
decrypt<font color="#CCCCCC"> well usually it produces random</font>

1582
01:56:56,970 --> 01:57:03,030
bits<font color="#CCCCCC"> too</font><font color="#E5E5E5"> but it's very edge of the</font>

1583
01:56:59,250 --> 01:57:04,920
network<font color="#E5E5E5"> of the the</font><font color="#CCCCCC"> M fo r we're going to</font>

1584
01:57:03,030 --> 01:57:07,349
assume a fixed<font color="#CCCCCC"> length sequence of Oh</font>

1585
01:57:04,920 --> 01:57:10,110
<font color="#E5E5E5">arts at the very end it would produce</font>

1586
01:57:07,350 --> 01:57:13,790
instead of random bits<font color="#E5E5E5"> the indication of</font>

1587
01:57:10,110 --> 01:57:13,790
a failure of invalidity

1588
01:57:14,380 --> 01:57:20,980
this is a kind of utopian definition in

1589
01:57:17,409 --> 01:57:23,559
the sense<font color="#E5E5E5"> that if you stopped there</font>

1590
01:57:20,980 --> 01:57:26,138
you could easily distinguish the<font color="#CCCCCC"> real</font>

1591
01:57:23,560 --> 01:57:28,630
and the<font color="#E5E5E5"> ideal worlds this was typical</font>

1592
01:57:26,139 --> 01:57:30,909
when we do indistinguishability based

1593
01:57:28,630 --> 01:57:33,480
definitions that<font color="#E5E5E5"> we have to add in some</font>

1594
01:57:30,909 --> 01:57:37,030
<font color="#CCCCCC">extra little bells and whistles to</font>

1595
01:57:33,480 --> 01:57:38,888
<font color="#E5E5E5">effectively forbid the trivial</font><font color="#CCCCCC"> winds to</font>

1596
01:57:37,030 --> 01:57:41,349
ensure that<font color="#CCCCCC"> the adversary doesn't</font><font color="#E5E5E5"> get</font>

1597
01:57:38,889 --> 01:57:43,510
<font color="#CCCCCC">credit for them what makes this</font><font color="#E5E5E5"> setting</font>

1598
01:57:41,350 --> 01:57:46,000
unusual I think<font color="#E5E5E5"> compared to other</font>

1599
01:57:43,510 --> 01:57:49,060
authenticated encryption goals<font color="#E5E5E5"> is that</font>

1600
01:57:46,000 --> 01:57:51,790
<font color="#CCCCCC">it's annoyingly difficult to describe</font>

1601
01:57:49,060 --> 01:57:54,219
<font color="#CCCCCC">just what it is</font><font color="#E5E5E5"> that those trivial</font><font color="#CCCCCC"> winds</font>

1602
01:57:51,790 --> 01:57:56,170
are<font color="#CCCCCC"> okay and that's because we have this</font>

1603
01:57:54,219 --> 01:57:58,480
whole chain of<font color="#CCCCCC"> uh Lars</font><font color="#E5E5E5"> and each of them</font>

1604
01:57:56,170 --> 01:58:00,699
is<font color="#E5E5E5"> maintaining state and there are</font><font color="#CCCCCC"> kind</font>

1605
01:57:58,480 --> 01:58:03,070
of obvious attacks<font color="#E5E5E5"> but putting down</font>

1606
01:58:00,699 --> 01:58:06,400
formally what those obvious attacks are

1607
01:58:03,070 --> 01:58:13,570
and excluding all and<font color="#CCCCCC"> only them</font><font color="#E5E5E5"> is</font>

1608
01:58:06,400 --> 01:58:18,879
really<font color="#E5E5E5"> unpleasant the idea that we</font>

1609
01:58:13,570 --> 01:58:21,460
pursue here<font color="#E5E5E5"> is to automatically exclude</font>

1610
01:58:18,880 --> 01:58:22,570
the trivial<font color="#CCCCCC"> wind and when I say</font>

1611
01:58:21,460 --> 01:58:26,020
automatically

1612
01:58:22,570 --> 01:58:30,070
I mean<font color="#E5E5E5"> you exclude all and only</font><font color="#CCCCCC"> the</font>

1613
01:58:26,020 --> 01:58:32,110
<font color="#E5E5E5">winds which are unavoidable</font><font color="#CCCCCC"> by virtue of</font>

1614
01:58:30,070 --> 01:58:33,880
the correctness condition I just

1615
01:58:32,110 --> 01:58:36,190
described<font color="#E5E5E5"> you the correctness condition</font>

1616
01:58:33,880 --> 01:58:37,570
so usually correctness<font color="#E5E5E5"> only plays a role</font>

1617
01:58:36,190 --> 01:58:39,669
<font color="#E5E5E5">for saying you know what's the</font>

1618
01:58:37,570 --> 01:58:40,719
functionality of<font color="#CCCCCC"> your</font><font color="#E5E5E5"> protocol you know</font>

1619
01:58:39,670 --> 01:58:42,070
if you decrypt something you've

1620
01:58:40,719 --> 01:58:43,480
encrypted<font color="#E5E5E5"> you have to get back what you</font>

1621
01:58:42,070 --> 01:58:46,239
started with<font color="#E5E5E5"> it's a functional</font>

1622
01:58:43,480 --> 01:58:49,570
<font color="#CCCCCC">requirement but here now I'm going</font><font color="#E5E5E5"> to</font>

1623
01:58:46,239 --> 01:58:52,209
<font color="#E5E5E5">use correctness as as an integral</font><font color="#CCCCCC"> part</font>

1624
01:58:49,570 --> 01:58:54,250
of<font color="#E5E5E5"> giving the security definition the</font>

1625
01:58:52,210 --> 01:58:57,429
basic paradigm<font color="#E5E5E5"> is that you give a</font>

1626
01:58:54,250 --> 01:59:00,340
utopian game like the one depicted here

1627
01:58:57,429 --> 01:59:02,080
that is not achievable due to the

1628
01:59:00,340 --> 01:59:05,620
correctness condition<font color="#E5E5E5"> and you</font>

1629
01:59:02,080 --> 01:59:09,610
effectively<font color="#E5E5E5"> factor out those winds that</font>

1630
01:59:05,620 --> 01:59:11,889
<font color="#CCCCCC">are unavoidable</font><font color="#E5E5E5"> by by formalizing the</font>

1631
01:59:09,610 --> 01:59:14,210
correctness condition and<font color="#E5E5E5"> automatically</font>

1632
01:59:11,889 --> 01:59:16,430
adjusting the game accordingly

1633
01:59:14,210 --> 01:59:18,590
and this<font color="#E5E5E5"> idea is you know which</font>

1634
01:59:16,430 --> 01:59:21,020
logically<font color="#CCCCCC"> proceeds this this paper on</font>

1635
01:59:18,590 --> 01:59:22,760
onion encryption unfortunately is

1636
01:59:21,020 --> 01:59:25,400
published just after<font color="#E5E5E5"> thatl will appear</font>

1637
01:59:22,760 --> 01:59:32,200
in a separate<font color="#E5E5E5"> paper at crypto in a</font>

1638
01:59:25,400 --> 01:59:34,460
couple<font color="#E5E5E5"> of weeks so we call this idea</font>

1639
01:59:32,200 --> 01:59:37,210
<font color="#E5E5E5">indistinguishability</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> to correctness</font>

1640
01:59:34,460 --> 01:59:39,530
and we start off<font color="#E5E5E5"> with our</font>

1641
01:59:37,210 --> 01:59:41,780
indistinguishability game<font color="#CCCCCC"> the adversary</font>

1642
01:59:39,530 --> 01:59:43,580
trying to distinguish some real from

1643
01:59:41,780 --> 01:59:45,290
some ideal game with

1644
01:59:43,580 --> 01:59:49,280
indistinguishability defined in the

1645
01:59:45,290 --> 01:59:52,400
normal way<font color="#E5E5E5"> and we modify</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> by</font>

1646
01:59:49,280 --> 01:59:54,950
automatically silencing all of those

1647
01:59:52,400 --> 01:59:56,929
queries<font color="#E5E5E5"> that we somehow are obliged to</font>

1648
01:59:54,950 --> 02:00:00,099
<font color="#E5E5E5">do something</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> because of</font>

1649
01:59:56,930 --> 02:00:03,530
<font color="#E5E5E5">correctness when exactly do</font><font color="#CCCCCC"> you silence</font>

1650
02:00:00,100 --> 02:00:06,350
<font color="#E5E5E5">silence means instead of answering this</font>

1651
02:00:03,530 --> 02:00:09,519
why I value we answer<font color="#CCCCCC"> some distinguished</font>

1652
02:00:06,350 --> 02:00:14,540
value that says I'm<font color="#E5E5E5"> not I'm</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> saying</font>

1653
02:00:09,520 --> 02:00:17,870
you<font color="#E5E5E5"> silence when for every scheme pie in</font>

1654
02:00:14,540 --> 02:00:21,230
the class of correct schemes<font color="#E5E5E5"> the</font>

1655
02:00:17,870 --> 02:00:24,170
response is the<font color="#E5E5E5"> same it's determined by</font>

1656
02:00:21,230 --> 02:00:26,718
<font color="#CCCCCC">the transcript</font><font color="#E5E5E5"> that's already gone</font><font color="#CCCCCC"> of</font>

1657
02:00:24,170 --> 02:00:29,960
communication between<font color="#E5E5E5"> the adversary and</font>

1658
02:00:26,719 --> 02:00:31,670
that Oracle<font color="#CCCCCC"> the adversary</font><font color="#E5E5E5"> has been</font>

1659
02:00:29,960 --> 02:00:34,670
having<font color="#CCCCCC"> the conversation with the</font><font color="#E5E5E5"> Oracle</font>

1660
02:00:31,670 --> 02:00:37,250
<font color="#E5E5E5">if at some point in time what the Oracle</font>

1661
02:00:34,670 --> 02:00:39,830
answers is<font color="#E5E5E5"> that which it's obliged to</font>

1662
02:00:37,250 --> 02:00:42,080
answer<font color="#CCCCCC"> by virtue of correctness</font><font color="#E5E5E5"> then</font>

1663
02:00:39,830 --> 02:00:45,769
instead<font color="#E5E5E5"> of answering as you would like</font>

1664
02:00:42,080 --> 02:00:48,340
to you replace that<font color="#E5E5E5"> response by some</font>

1665
02:00:45,770 --> 02:00:51,730
distinguished value I'm not saying

1666
02:00:48,340 --> 02:00:51,730
that's<font color="#E5E5E5"> the idea</font>

1667
02:00:53,440 --> 02:00:59,980
here then is<font color="#CCCCCC"> the utopian game</font><font color="#E5E5E5"> for onion</font>

1668
02:00:57,340 --> 02:01:03,430
authenticated encryption<font color="#CCCCCC"> this is the</font>

1669
02:00:59,980 --> 02:01:05,709
full form with all the the silly details

1670
02:01:03,430 --> 02:01:07,330
like ensuring that you you set up the

1671
02:01:05,710 --> 02:01:09,820
key before<font color="#E5E5E5"> you start encrypting and</font>

1672
02:01:07,330 --> 02:01:12,750
decrypting<font color="#CCCCCC"> and this is everything</font><font color="#E5E5E5"> it</font>

1673
02:01:09,820 --> 02:01:16,330
<font color="#E5E5E5">together with the correctness condition</font>

1674
02:01:12,750 --> 02:01:19,060
then serves as an<font color="#E5E5E5"> input to</font><font color="#CCCCCC"> that Oracle</font>

1675
02:01:16,330 --> 02:01:23,980
silencing idea and out pops<font color="#CCCCCC"> your</font>

1676
02:01:19,060 --> 02:01:27,580
definition what would this look<font color="#E5E5E5"> like</font>

1677
02:01:23,980 --> 02:01:30,610
without the<font color="#E5E5E5"> Oracle silencing so in some</font>

1678
02:01:27,580 --> 02:01:32,890
<font color="#E5E5E5">sense we're kind of lucky because there</font>

1679
02:01:30,610 --> 02:01:35,769
<font color="#E5E5E5">was independent work going on we we</font>

1680
02:01:32,890 --> 02:01:39,310
recently learned<font color="#CCCCCC"> about</font><font color="#E5E5E5"> presented at</font><font color="#CCCCCC"> euro</font>

1681
02:01:35,770 --> 02:01:43,300
<font color="#CCCCCC">crypt a couple months</font><font color="#E5E5E5"> ago</font><font color="#CCCCCC"> by de</font>

1682
02:01:39,310 --> 02:01:44,680
<font color="#E5E5E5">Gabrielle and Martine</font><font color="#CCCCCC"> stam and they set</font>

1683
02:01:43,300 --> 02:01:46,510
<font color="#CCCCCC">out to solve essentially the same</font>

1684
02:01:44,680 --> 02:01:51,040
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> they wanted a gain</font><font color="#E5E5E5"> based</font>

1685
02:01:46,510 --> 02:01:54,310
formulation of the problem<font color="#CCCCCC"> that nested</font>

1686
02:01:51,040 --> 02:01:56,500
encryption<font color="#CCCCCC"> Falls and I've clipped the</font>

1687
02:01:54,310 --> 02:01:58,750
games from<font color="#E5E5E5"> their paper</font><font color="#CCCCCC"> this looks pretty</font>

1688
02:01:56,500 --> 02:02:04,540
bad but<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is only the</font><font color="#E5E5E5"> beginning</font><font color="#CCCCCC"> there</font>

1689
02:01:58,750 --> 02:02:08,440
are<font color="#CCCCCC"> the</font><font color="#E5E5E5"> rest of them so I believe this</font>

1690
02:02:04,540 --> 02:02:12,400
<font color="#E5E5E5">this seemingly simple idea really helps</font>

1691
02:02:08,440 --> 02:02:15,580
to to radically simplify the the games

1692
02:02:12,400 --> 02:02:17,739
you're<font color="#E5E5E5"> trying to understand when the</font>

1693
02:02:15,580 --> 02:02:18,670
context gets<font color="#E5E5E5"> you know just a little</font><font color="#CCCCCC"> bit</font>

1694
02:02:17,739 --> 02:02:21,190
<font color="#CCCCCC">more complicated</font>

1695
02:02:18,670 --> 02:02:22,880
something like onion authenticated

1696
02:02:21,190 --> 02:02:25,159
encryption

1697
02:02:22,880 --> 02:02:27,170
<font color="#CCCCCC">oh I think</font><font color="#E5E5E5"> the job a little out of</font><font color="#CCCCCC"> order</font>

1698
02:02:25,159 --> 02:02:28,339
<font color="#E5E5E5">there's a bunch of limitations I want to</font>

1699
02:02:27,170 --> 02:02:31,489
acknowledge right off what I've

1700
02:02:28,340 --> 02:02:33,530
described so far<font color="#CCCCCC"> only includes the</font>

1701
02:02:31,489 --> 02:02:36,530
outbound messages you need<font color="#E5E5E5"> to add in</font>

1702
02:02:33,530 --> 02:02:39,469
more stuff to take<font color="#CCCCCC"> care of inbound</font>

1703
02:02:36,530 --> 02:02:42,139
messages<font color="#E5E5E5"> coming in over the same Onion</font>

1704
02:02:39,469 --> 02:02:46,370
Routing<font color="#CCCCCC"> network I haven't included</font><font color="#E5E5E5"> the</font>

1705
02:02:42,139 --> 02:02:47,900
the<font color="#CCCCCC"> possibility of corrupted a lars</font><font color="#E5E5E5"> that</font>

1706
02:02:46,370 --> 02:02:50,599
seems very<font color="#E5E5E5"> strange</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> of course</font>

1707
02:02:47,900 --> 02:02:52,190
Onion Routing is largely about<font color="#CCCCCC"> ensuring</font>

1708
02:02:50,600 --> 02:02:55,010
that<font color="#E5E5E5"> you maintain privacy</font>

1709
02:02:52,190 --> 02:02:59,178
despite some subset of the onion routers

1710
02:02:55,010 --> 02:03:02,210
being being<font color="#E5E5E5"> corrupt we haven't included</font>

1711
02:02:59,179 --> 02:03:04,489
<font color="#E5E5E5">in our modeling this leaky pipe idea</font>

1712
02:03:02,210 --> 02:03:07,280
that appears in<font color="#CCCCCC"> tour where sometimes the</font>

1713
02:03:04,489 --> 02:03:09,110
length of the the sequence<font color="#CCCCCC"> of all hours</font>

1714
02:03:07,280 --> 02:03:10,639
<font color="#E5E5E5">you're passing through is three and</font>

1715
02:03:09,110 --> 02:03:11,059
<font color="#E5E5E5">sometimes it's four</font><font color="#CCCCCC"> or something like</font>

1716
02:03:10,639 --> 02:03:12,679
<font color="#E5E5E5">that</font>

1717
02:03:11,060 --> 02:03:14,659
it always has fixed<font color="#E5E5E5"> length in our</font>

1718
02:03:12,679 --> 02:03:17,690
treatment<font color="#E5E5E5"> and then I think the most</font>

1719
02:03:14,659 --> 02:03:20,179
interesting branch the most interesting

1720
02:03:17,690 --> 02:03:22,849
choice we had to make<font color="#E5E5E5"> was that we check</font>

1721
02:03:20,179 --> 02:03:25,250
all of our<font color="#E5E5E5"> authenticity</font><font color="#CCCCCC"> at the time of</font>

1722
02:03:22,850 --> 02:03:27,650
exit<font color="#E5E5E5"> when you're just about</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> leave the</font>

1723
02:03:25,250 --> 02:03:30,650
the<font color="#CCCCCC"> network</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the same choice that</font>

1724
02:03:27,650 --> 02:03:32,929
<font color="#CCCCCC">was made</font><font color="#E5E5E5"> in Tory's relay protocol but</font>

1725
02:03:30,650 --> 02:03:35,629
it's not the<font color="#CCCCCC"> only possible</font><font color="#E5E5E5"> choice you</font>

1726
02:03:32,929 --> 02:03:38,179
<font color="#E5E5E5">could instead have said once</font><font color="#CCCCCC"> a message</font>

1727
02:03:35,630 --> 02:03:40,159
gets inserted<font color="#E5E5E5"> into this this Onion</font>

1728
02:03:38,179 --> 02:03:41,870
Routing<font color="#CCCCCC"> network that's wrong you should</font>

1729
02:03:40,159 --> 02:03:45,769
stop it at your first opportunity

1730
02:03:41,870 --> 02:03:48,889
<font color="#CCCCCC">it shouldn't traverse the network these</font>

1731
02:03:45,770 --> 02:03:49,340
<font color="#E5E5E5">two different flavors of of Onion</font>

1732
02:03:48,889 --> 02:03:54,010
Routing

1733
02:03:49,340 --> 02:03:57,770
can both be formalized<font color="#E5E5E5"> in the in this</font>

1734
02:03:54,010 --> 02:04:00,020
<font color="#E5E5E5">Oracle silencing paradigm though in the</font>

1735
02:03:57,770 --> 02:04:03,710
the<font color="#CCCCCC"> pecks paper we only</font><font color="#E5E5E5"> formalized the</font>

1736
02:04:00,020 --> 02:04:05,150
the time of exit formulation<font color="#CCCCCC"> I don't</font>

1737
02:04:03,710 --> 02:04:06,620
<font color="#E5E5E5">really know which one is better</font><font color="#CCCCCC"> and I</font>

1738
02:04:05,150 --> 02:04:07,199
<font color="#CCCCCC">think it's an important question that</font>

1739
02:04:06,620 --> 02:04:10,019
<font color="#E5E5E5">you</font>

1740
02:04:07,199 --> 02:04:12,389
those doing concrete Onion Routing have

1741
02:04:10,020 --> 02:04:14,790
to face as to as<font color="#E5E5E5"> to which flavor of</font>

1742
02:04:12,390 --> 02:04:17,070
Onion Routing<font color="#E5E5E5"> they're after I'll mention</font>

1743
02:04:14,790 --> 02:04:19,920
<font color="#E5E5E5">that once you add in the extra</font><font color="#CCCCCC"> layer of</font>

1744
02:04:17,070 --> 02:04:22,769
encryption<font color="#E5E5E5"> that effectively goes on you</font>

1745
02:04:19,920 --> 02:04:25,260
know<font color="#CCCCCC"> by the TLS record layer</font><font color="#E5E5E5"> you're not</font>

1746
02:04:22,770 --> 02:04:27,900
actually getting<font color="#E5E5E5"> you know in int or</font>

1747
02:04:25,260 --> 02:04:30,300
something like this<font color="#E5E5E5"> time of exit</font>

1748
02:04:27,900 --> 02:04:32,870
<font color="#E5E5E5">authenticity checking you actually are</font>

1749
02:04:30,300 --> 02:04:36,719
<font color="#CCCCCC">getting the stronger form apparently of</font>

1750
02:04:32,870 --> 02:04:40,969
authenticity checking associated to<font color="#CCCCCC"> too</font>

1751
02:04:36,719 --> 02:04:44,340
<font color="#E5E5E5">eager authenticity just a little bit on</font>

1752
02:04:40,969 --> 02:04:46,650
<font color="#E5E5E5">constructions as I said towards</font><font color="#CCCCCC"> relay</font>

1753
02:04:44,340 --> 02:04:48,270
protocol doesn't<font color="#E5E5E5"> satisfy our definition</font>

1754
02:04:46,650 --> 02:04:52,049
and<font color="#E5E5E5"> it doesn't for the simple reason</font>

1755
02:04:48,270 --> 02:04:54,449
<font color="#E5E5E5">that tagging attacks are are excluded by</font>

1756
02:04:52,050 --> 02:04:56,460
<font color="#CCCCCC">this strong definition of security now</font>

1757
02:04:54,449 --> 02:04:58,949
quite informally tagging<font color="#CCCCCC"> air attacks are</font>

1758
02:04:56,460 --> 02:05:01,080
a consequence of<font color="#E5E5E5"> using a malleable</font>

1759
02:04:58,949 --> 02:05:04,530
encryption scheme<font color="#E5E5E5"> and authenticated</font>

1760
02:05:01,080 --> 02:05:06,600
encryption<font color="#E5E5E5"> is is invariably stronger</font>

1761
02:05:04,530 --> 02:05:12,620
than non malleability<font color="#CCCCCC"> as a</font><font color="#E5E5E5"> requirement</font>

1762
02:05:06,600 --> 02:05:15,060
it implies<font color="#E5E5E5"> non malleability</font><font color="#CCCCCC"> we do have a</font>

1763
02:05:12,620 --> 02:05:17,910
<font color="#E5E5E5">construction as I mentioned and it</font>

1764
02:05:15,060 --> 02:05:20,310
consists<font color="#E5E5E5"> of nested encryption but the</font>

1765
02:05:17,910 --> 02:05:22,620
kind of thing that<font color="#E5E5E5"> you're nesting is not</font>

1766
02:05:20,310 --> 02:05:24,540
a conventional<font color="#E5E5E5"> symmetric encryption</font>

1767
02:05:22,620 --> 02:05:26,219
scheme it's not something like<font color="#E5E5E5"> counter</font>

1768
02:05:24,540 --> 02:05:27,360
mode you need<font color="#CCCCCC"> a much more powerful</font>

1769
02:05:26,219 --> 02:05:30,449
<font color="#E5E5E5">primitives</font>

1770
02:05:27,360 --> 02:05:32,820
here what we're using is a wide block

1771
02:05:30,449 --> 02:05:35,219
pseudo-random permutation a wide block

1772
02:05:32,820 --> 02:05:36,840
block cipher and it has to<font color="#E5E5E5"> be tweakable</font>

1773
02:05:35,219 --> 02:05:40,110
<font color="#E5E5E5">in fact which means that there's this</font>

1774
02:05:36,840 --> 02:05:43,140
<font color="#CCCCCC">additional parameter</font><font color="#E5E5E5"> which impacts the</font>

1775
02:05:40,110 --> 02:05:46,739
behavior of the<font color="#E5E5E5"> wide block block cipher</font>

1776
02:05:43,140 --> 02:05:48,780
as though it were a separate key so we

1777
02:05:46,739 --> 02:05:50,820
do the nested encryption having added in

1778
02:05:48,780 --> 02:05:53,730
<font color="#E5E5E5">redundancy</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> check it at</font><font color="#CCCCCC"> the edge of</font>

1779
02:05:50,820 --> 02:05:56,340
the network<font color="#E5E5E5"> and then you tweak according</font>

1780
02:05:53,730 --> 02:05:59,549
to the cipher texts<font color="#E5E5E5"> that have been</font>

1781
02:05:56,340 --> 02:06:01,699
output so far at each layer in the in

1782
02:05:59,550 --> 02:06:01,699
the

1783
02:06:02,630 --> 02:06:08,550
<font color="#E5E5E5">okay just a few</font><font color="#CCCCCC"> take homes I want to</font>

1784
02:06:05,850 --> 02:06:10,890
emphasize<font color="#CCCCCC"> that there's importantly these</font>

1785
02:06:08,550 --> 02:06:13,440
two different<font color="#E5E5E5"> variants of onion AE</font>

1786
02:06:10,890 --> 02:06:15,300
<font color="#CCCCCC">whether you're checking</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> the very edge</font>

1787
02:06:13,440 --> 02:06:16,980
or constantly<font color="#E5E5E5"> as you traverse the</font>

1788
02:06:15,300 --> 02:06:19,970
<font color="#CCCCCC">network I think that's an important</font>

1789
02:06:16,980 --> 02:06:25,440
access<font color="#E5E5E5"> of comparison that</font><font color="#CCCCCC"> hasn't been</font>

1790
02:06:19,970 --> 02:06:27,210
discussed much<font color="#CCCCCC"> there's a much</font><font color="#E5E5E5"> more</font>

1791
02:06:25,440 --> 02:06:31,469
recent proposal than the one that<font color="#E5E5E5"> we've</font>

1792
02:06:27,210 --> 02:06:34,140
analyzed<font color="#CCCCCC"> number proposal 295</font><font color="#E5E5E5"> we've</font>

1793
02:06:31,470 --> 02:06:35,880
looked at it quite<font color="#CCCCCC"> recently and I can't</font>

1794
02:06:34,140 --> 02:06:38,760
tell you whether it does or doesn't

1795
02:06:35,880 --> 02:06:42,420
satisfy<font color="#E5E5E5"> this definition of of onion AE</font>

1796
02:06:38,760 --> 02:06:43,950
it's not at all<font color="#E5E5E5"> obvious and you know</font>

1797
02:06:42,420 --> 02:06:45,660
<font color="#E5E5E5">finally I'll ask whether any of this</font>

1798
02:06:43,950 --> 02:06:52,349
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> matters for a construction</font><font color="#E5E5E5"> like</font>

1799
02:06:45,660 --> 02:06:54,360
<font color="#E5E5E5">tour and the I guess my answer would be</font>

1800
02:06:52,350 --> 02:06:55,740
to ask a tour person whether the tagging

1801
02:06:54,360 --> 02:06:57,599
attacks<font color="#E5E5E5"> matter this seems to be</font>

1802
02:06:55,740 --> 02:07:00,809
something<font color="#CCCCCC"> that hasn't been</font><font color="#E5E5E5"> entirely</font>

1803
02:06:57,600 --> 02:07:02,820
closed on within<font color="#E5E5E5"> that community</font><font color="#CCCCCC"> from my</font>

1804
02:07:00,810 --> 02:07:06,900
point of view it's<font color="#CCCCCC"> really nice when you</font>

1805
02:07:02,820 --> 02:07:08,880
<font color="#E5E5E5">build your your protocols from</font>

1806
02:07:06,900 --> 02:07:11,549
primitives<font color="#CCCCCC"> that have some</font><font color="#E5E5E5"> kind of</font>

1807
02:07:08,880 --> 02:07:14,370
understood security property and here

1808
02:07:11,550 --> 02:07:16,620
<font color="#E5E5E5">you know I'm trying to get</font><font color="#CCCCCC"> to what</font>

1809
02:07:14,370 --> 02:07:20,010
understood security property nested

1810
02:07:16,620 --> 02:07:22,790
encryption might have if<font color="#E5E5E5"> you in if you</font>

1811
02:07:20,010 --> 02:07:22,790
implement<font color="#E5E5E5"> it well</font>

1812
02:07:29,160 --> 02:07:32,830
questions were filled or does anyone

1813
02:07:31,239 --> 02:07:35,879
<font color="#E5E5E5">from tour want to answer that last</font>

1814
02:07:32,830 --> 02:07:40,290
question<font color="#E5E5E5"> staring at some tour</font><font color="#CCCCCC"> people</font>

1815
02:07:35,880 --> 02:07:40,290
other tour people<font color="#E5E5E5"> Nick</font>

1816
02:07:51,530 --> 02:07:58,559
sorry for<font color="#E5E5E5"> being so far away from the</font>

1817
02:07:53,970 --> 02:08:00,330
logical place for<font color="#CCCCCC"> a microphone I think</font>

1818
02:07:58,560 --> 02:08:02,130
this is<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the kind of questions</font>

1819
02:08:00,330 --> 02:08:04,650
that<font color="#E5E5E5"> we can only really figure out in</font>

1820
02:08:02,130 --> 02:08:08,670
dialogue with cryptographers like you

1821
02:08:04,650 --> 02:08:11,389
because we sort<font color="#E5E5E5"> of know what we want</font>

1822
02:08:08,670 --> 02:08:15,840
from<font color="#E5E5E5"> an engineering point of view the</font>

1823
02:08:11,390 --> 02:08:20,270
big trade-off<font color="#E5E5E5"> on replacing</font><font color="#CCCCCC"> the relay</font>

1824
02:08:15,840 --> 02:08:23,390
<font color="#E5E5E5">crypto is performance</font><font color="#CCCCCC"> if there were a</font>

1825
02:08:20,270 --> 02:08:30,060
widely believed<font color="#E5E5E5"> to be strong and</font>

1826
02:08:23,390 --> 02:08:32,610
<font color="#E5E5E5">definitely and</font><font color="#CCCCCC"> definitely fast wide</font>

1827
02:08:30,060 --> 02:08:34,160
block cipher<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we could tweakable</font>

1828
02:08:32,610 --> 02:08:37,860
white block cipher<font color="#CCCCCC"> that we could drop in</font>

1829
02:08:34,160 --> 02:08:40,410
then<font color="#E5E5E5"> what</font><font color="#CCCCCC"> you would</font><font color="#E5E5E5"> love</font><font color="#CCCCCC"> to use it most</font>

1830
02:08:37,860 --> 02:08:42,420
of<font color="#E5E5E5"> the ones we've seen seem to have</font>

1831
02:08:40,410 --> 02:08:48,059
performance<font color="#CCCCCC"> problems on one platform</font><font color="#E5E5E5"> or</font>

1832
02:08:42,420 --> 02:08:52,290
another but um<font color="#E5E5E5"> we haven't tested out</font>

1833
02:08:48,060 --> 02:08:54,420
everything yes<font color="#CCCCCC"> I mentioned that one of</font>

1834
02:08:52,290 --> 02:08:57,420
<font color="#E5E5E5">the problems with this scheme I've</font>

1835
02:08:54,420 --> 02:08:59,750
suggested is<font color="#E5E5E5"> that this object is really</font>

1836
02:08:57,420 --> 02:09:01,890
not<font color="#E5E5E5"> a standard cryptographic primitives</font>

1837
02:08:59,750 --> 02:09:03,450
this is the complete set of

1838
02:09:01,890 --> 02:09:06,120
constructions<font color="#CCCCCC"> that I know</font><font color="#E5E5E5"> that have</font><font color="#CCCCCC"> been</font>

1839
02:09:03,450 --> 02:09:07,889
offered<font color="#CCCCCC"> for it and I don't know</font><font color="#E5E5E5"> that any</font>

1840
02:09:06,120 --> 02:09:10,370
of<font color="#E5E5E5"> them are particularly mature or</font>

1841
02:09:07,890 --> 02:09:10,370
efficient

1842
02:09:10,650 --> 02:09:19,080
other questions<font color="#CCCCCC"> I'll throw one so I</font>

1843
02:09:15,949 --> 02:09:22,650
really like the the<font color="#E5E5E5"> Oracle silencing</font>

1844
02:09:19,080 --> 02:09:25,650
trick<font color="#CCCCCC"> so that's cool</font><font color="#E5E5E5"> but I so I have</font><font color="#CCCCCC"> a</font>

1845
02:09:22,650 --> 02:09:29,489
question<font color="#CCCCCC"> so in the Oracle silencing</font>

1846
02:09:25,650 --> 02:09:33,900
trick you<font color="#E5E5E5"> basically in the real world</font>

1847
02:09:29,489 --> 02:09:38,669
<font color="#CCCCCC">you check whether the output would be</font>

1848
02:09:33,900 --> 02:09:40,980
<font color="#CCCCCC">the same</font><font color="#E5E5E5"> for all queries that for all</font>

1849
02:09:38,670 --> 02:09:43,650
transcripts<font color="#E5E5E5"> up till that point for all</font>

1850
02:09:40,980 --> 02:09:48,718
correct protocols<font color="#E5E5E5"> and I'm worried might</font>

1851
02:09:43,650 --> 02:09:53,159
it be<font color="#CCCCCC"> possible that</font><font color="#E5E5E5"> the adversary could</font>

1852
02:09:48,719 --> 02:09:56,730
construct a sequence<font color="#E5E5E5"> of queries for</font>

1853
02:09:53,159 --> 02:09:59,309
which say<font color="#CCCCCC"> the fifth output would always</font>

1854
02:09:56,730 --> 02:10:03,150
be the<font color="#CCCCCC"> same</font><font color="#E5E5E5"> but there's no way to know</font>

1855
02:09:59,310 --> 02:10:06,119
<font color="#CCCCCC">that yet right because you the Oracle</font>

1856
02:10:03,150 --> 02:10:10,460
<font color="#CCCCCC">sorry the real world might only be able</font>

1857
02:10:06,119 --> 02:10:13,259
<font color="#CCCCCC">to learn that later and so it couldn't</font>

1858
02:10:10,460 --> 02:10:14,909
<font color="#E5E5E5">simple so the silencing as I've</font>

1859
02:10:13,260 --> 02:10:18,869
described it here is<font color="#CCCCCC"> defined in this</font>

1860
02:10:14,909 --> 02:10:20,549
<font color="#E5E5E5">very existential way</font><font color="#CCCCCC"> and and</font><font color="#E5E5E5"> that would</font>

1861
02:10:18,869 --> 02:10:22,440
<font color="#E5E5E5">seem</font><font color="#CCCCCC"> to be a problem that you know can</font>

1862
02:10:20,550 --> 02:10:25,409
the Oracle can can it even compute

1863
02:10:22,440 --> 02:10:28,739
<font color="#E5E5E5">whether or not this thing is is should</font>

1864
02:10:25,409 --> 02:10:30,659
<font color="#CCCCCC">be silenced</font><font color="#E5E5E5"> and you know something I</font>

1865
02:10:28,739 --> 02:10:33,330
lost<font color="#E5E5E5"> over is that</font><font color="#CCCCCC"> in order for this</font>

1866
02:10:30,659 --> 02:10:35,940
notion<font color="#E5E5E5"> to be meaningful</font><font color="#CCCCCC"> you need to</font>

1867
02:10:33,330 --> 02:10:38,099
check that<font color="#E5E5E5"> the silencing actually is</font>

1868
02:10:35,940 --> 02:10:40,830
computable<font color="#E5E5E5"> that that function can</font><font color="#CCCCCC"> be</font>

1869
02:10:38,099 --> 02:10:43,260
efficiently computed and in order to

1870
02:10:40,830 --> 02:10:46,050
<font color="#E5E5E5">accomplish this I mean you typically</font>

1871
02:10:43,260 --> 02:10:47,639
have<font color="#E5E5E5"> to recharacterize</font><font color="#CCCCCC"> when silencing</font>

1872
02:10:46,050 --> 02:10:49,110
happens and you end<font color="#E5E5E5"> up with a</font>

1873
02:10:47,639 --> 02:10:51,179
<font color="#CCCCCC">complicated game nonetheless</font>

1874
02:10:49,110 --> 02:10:53,699
so this services serves as a<font color="#E5E5E5"> kind of</font>

1875
02:10:51,179 --> 02:10:55,320
simple<font color="#E5E5E5"> descriptive language for the</font>

1876
02:10:53,699 --> 02:10:57,900
definition<font color="#E5E5E5"> but you're not done</font>

1877
02:10:55,320 --> 02:11:00,389
<font color="#E5E5E5">unfortunately at</font><font color="#CCCCCC"> that point to</font><font color="#E5E5E5"> really do</font>

1878
02:10:57,900 --> 02:11:02,009
<font color="#CCCCCC">anything productive</font><font color="#E5E5E5"> you'll you'll have</font>

1879
02:11:00,389 --> 02:11:03,590
to check computability you'll have to

1880
02:11:02,010 --> 02:11:06,480
worry about things like<font color="#E5E5E5"> whether or not</font>

1881
02:11:03,590 --> 02:11:08,460
transcripts are arising<font color="#CCCCCC"> you know in the</font>

1882
02:11:06,480 --> 02:11:09,839
ideal game which could<font color="#CCCCCC"> never arise in</font>

1883
02:11:08,460 --> 02:11:19,090
the real

1884
02:11:09,840 --> 02:11:21,460
<font color="#E5E5E5">great thanks so</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the mic now I was</font>

1885
02:11:19,090 --> 02:11:26,140
<font color="#E5E5E5">wondering if you tried to</font><font color="#CCCCCC"> find a</font>

1886
02:11:21,460 --> 02:11:28,270
<font color="#CCCCCC">definition</font><font color="#E5E5E5"> that was kind of the weakest</font>

1887
02:11:26,140 --> 02:11:30,850
that would provide what somebody might

1888
02:11:28,270 --> 02:11:33,040
want want out of<font color="#E5E5E5"> nested encryption and</font>

1889
02:11:30,850 --> 02:11:35,560
if you were<font color="#CCCCCC"> willing to satisfy a</font>

1890
02:11:33,040 --> 02:11:37,990
stronger definition could<font color="#E5E5E5"> you do</font><font color="#CCCCCC"> it with</font>

1891
02:11:35,560 --> 02:11:40,270
<font color="#CCCCCC">the more standard</font><font color="#E5E5E5"> more widely available</font>

1892
02:11:37,990 --> 02:11:42,040
construction like for<font color="#CCCCCC"> example why not</font>

1893
02:11:40,270 --> 02:11:46,360
just nest and<font color="#CCCCCC"> err death</font><font color="#E5E5E5"> indicate</font>

1894
02:11:42,040 --> 02:11:48,310
encryption<font color="#E5E5E5"> mm-hmm</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> in answer to the</font>

1895
02:11:46,360 --> 02:11:51,339
last question<font color="#E5E5E5"> why</font><font color="#CCCCCC"> not nest and 'red</font>

1896
02:11:48,310 --> 02:11:53,140
authenticated encryption<font color="#CCCCCC"> this would</font>

1897
02:11:51,340 --> 02:11:55,840
cause a length increase with each<font color="#E5E5E5"> hop</font>

1898
02:11:53,140 --> 02:11:58,720
and we kind of took it<font color="#E5E5E5"> as a</font><font color="#CCCCCC"> requirement</font>

1899
02:11:55,840 --> 02:12:00,280
<font color="#E5E5E5">that we wanted the</font><font color="#CCCCCC"> ciphertext to stay</font>

1900
02:11:58,720 --> 02:12:03,370
constant<font color="#CCCCCC"> lane for guard less of the</font>

1901
02:12:00,280 --> 02:12:05,050
number of<font color="#CCCCCC"> hops you went through</font><font color="#E5E5E5"> the</font>

1902
02:12:03,370 --> 02:12:06,790
other part of the<font color="#E5E5E5"> question whether or</font>

1903
02:12:05,050 --> 02:12:08,950
<font color="#E5E5E5">not one might have done better in terms</font>

1904
02:12:06,790 --> 02:12:11,610
of efficient<font color="#CCCCCC"> constructibility of schemes</font>

1905
02:12:08,950 --> 02:12:17,019
if you targeted a somewhat<font color="#E5E5E5"> weak or goal</font>

1906
02:12:11,610 --> 02:12:19,299
<font color="#E5E5E5">that's certainly possible</font><font color="#CCCCCC"> nonetheless</font>

1907
02:12:17,020 --> 02:12:23,050
the space between<font color="#E5E5E5"> you probably really</font>

1908
02:12:19,300 --> 02:12:26,320
want<font color="#E5E5E5"> non malleability and authenticity</font>

1909
02:12:23,050 --> 02:12:28,540
we don't<font color="#E5E5E5"> even in the the you know</font>

1910
02:12:26,320 --> 02:12:31,179
<font color="#E5E5E5">conventional</font><font color="#CCCCCC"> symmetric encryption</font>

1911
02:12:28,540 --> 02:12:32,650
setting have interesting examples that

1912
02:12:31,180 --> 02:12:35,350
sit between there you can construct

1913
02:12:32,650 --> 02:12:37,960
artificial examples that<font color="#E5E5E5"> are you know in</font>

1914
02:12:35,350 --> 02:12:40,300
in that space but<font color="#E5E5E5"> we don't know how to</font>

1915
02:12:37,960 --> 02:12:42,250
achieve like non malleable symmetric

1916
02:12:40,300 --> 02:12:45,010
encryption<font color="#CCCCCC"> any more efficiently than</font>

1917
02:12:42,250 --> 02:12:47,380
authenticated encryption<font color="#E5E5E5"> and my guess is</font>

1918
02:12:45,010 --> 02:12:48,760
<font color="#CCCCCC">that there</font><font color="#E5E5E5"> is not there's not a big</font><font color="#CCCCCC"> gap</font>

1919
02:12:47,380 --> 02:12:51,160
there<font color="#E5E5E5"> in terms of the efficient</font>

1920
02:12:48,760 --> 02:12:53,350
<font color="#CCCCCC">constructibility of schemes if you do</font>

1921
02:12:51,160 --> 02:12:55,809
try<font color="#CCCCCC"> and target</font><font color="#E5E5E5"> non malleability</font><font color="#CCCCCC"> as</font>

1922
02:12:53,350 --> 02:12:57,430
you're basica land not authenticity<font color="#CCCCCC"> i</font>

1923
02:12:55,810 --> 02:13:00,540
believe you'll end up with<font color="#E5E5E5"> a much</font><font color="#CCCCCC"> more</font>

1924
02:12:57,430 --> 02:13:02,350
complicated definition than<font color="#E5E5E5"> then</font>

1925
02:13:00,540 --> 02:13:05,610
<font color="#E5E5E5">overshooting and trying for</font>

1926
02:13:02,350 --> 02:13:07,680
authenticated encryption counterpart

1927
02:13:05,610 --> 02:13:16,410
okay I'm<font color="#E5E5E5"> afraid we're out of time</font><font color="#CCCCCC"> so</font>

1928
02:13:07,680 --> 02:13:20,450
let's<font color="#CCCCCC"> thank the speaker again okay and</font>

1929
02:13:16,410 --> 02:13:20,450
the last<font color="#E5E5E5"> speaker of this session is</font>

1930
02:13:29,180 --> 02:13:32,840
<font color="#CCCCCC">about</font><font color="#E5E5E5"> taking capture from coach</font>

1931
02:13:31,260 --> 02:13:39,330
University and this<font color="#E5E5E5"> is joint work with</font>

1932
02:13:32,840 --> 02:13:41,250
<font color="#CCCCCC">one Nate bobbies and a so our setting is</font>

1933
02:13:39,330 --> 02:13:43,290
the<font color="#CCCCCC"> outsourced story</font><font color="#E5E5E5"> sitting there for</font>

1934
02:13:41,250 --> 02:13:46,290
<font color="#E5E5E5">the sake of</font><font color="#CCCCCC"> confidentiality we encrypt</font>

1935
02:13:43,290 --> 02:13:49,620
our<font color="#E5E5E5"> data but then how do we provide</font>

1936
02:13:46,290 --> 02:13:50,940
search functionality<font color="#E5E5E5"> so this trivial</font>

1937
02:13:49,620 --> 02:13:53,309
protocol can provide search

1938
02:13:50,940 --> 02:13:56,190
functionality<font color="#E5E5E5"> the client encrypts his</font>

1939
02:13:53,310 --> 02:13:58,980
files<font color="#CCCCCC"> outsources them to the cloud and</font>

1940
02:13:56,190 --> 02:14:02,429
<font color="#E5E5E5">then to search he downloads all these</font>

1941
02:13:58,980 --> 02:14:05,730
files<font color="#E5E5E5"> again</font><font color="#CCCCCC"> he Clips</font><font color="#E5E5E5"> them and performs a</font>

1942
02:14:02,430 --> 02:14:08,370
local search<font color="#E5E5E5"> this will be trivially and</font>

1943
02:14:05,730 --> 02:14:12,030
obviously<font color="#E5E5E5"> secure but unfortunately</font>

1944
02:14:08,370 --> 02:14:14,190
extremely inefficient<font color="#E5E5E5"> so what we want is</font>

1945
02:14:12,030 --> 02:14:16,519
a balance between<font color="#E5E5E5"> security and</font>

1946
02:14:14,190 --> 02:14:18,990
<font color="#CCCCCC">efficiency and</font><font color="#E5E5E5"> we are interested in</font>

1947
02:14:16,520 --> 02:14:21,540
index based searchable encryption

1948
02:14:18,990 --> 02:14:24,090
solutions<font color="#E5E5E5"> in this setting we have our</font>

1949
02:14:21,540 --> 02:14:28,380
files<font color="#E5E5E5"> and a dictionary</font><font color="#CCCCCC"> of keywords</font><font color="#E5E5E5"> and</font>

1950
02:14:24,090 --> 02:14:31,350
for each keyword we have a set of<font color="#CCCCCC"> files</font>

1951
02:14:28,380 --> 02:14:33,900
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> file identifiers file names if</font>

1952
02:14:31,350 --> 02:14:36,600
you<font color="#E5E5E5"> wish to</font><font color="#CCCCCC"> see that contain this</font>

1953
02:14:33,900 --> 02:14:39,360
keyword now what we<font color="#CCCCCC"> are going to do is</font>

1954
02:14:36,600 --> 02:14:42,060
we<font color="#E5E5E5"> will generate a key associated with</font>

1955
02:14:39,360 --> 02:14:45,030
<font color="#E5E5E5">this keyword and this is usually done</font>

1956
02:14:42,060 --> 02:14:47,340
<font color="#CCCCCC">through a pseudo-random function and we</font>

1957
02:14:45,030 --> 02:14:50,969
will encrypt this list with this key

1958
02:14:47,340 --> 02:14:52,890
then<font color="#E5E5E5"> we will store</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> list at let's</font>

1959
02:14:50,970 --> 02:14:56,670
say random locations in our<font color="#E5E5E5"> index and</font>

1960
02:14:52,890 --> 02:14:59,990
outsource this encrypted<font color="#E5E5E5"> index together</font>

1961
02:14:56,670 --> 02:15:03,360
<font color="#E5E5E5">with the encrypted files to the search</font>

1962
02:14:59,990 --> 02:15:06,540
<font color="#E5E5E5">so here the client will generate three</font>

1963
02:15:03,360 --> 02:15:10,290
things the encrypted<font color="#E5E5E5"> files the encrypted</font>

1964
02:15:06,540 --> 02:15:12,960
index<font color="#E5E5E5"> and some metadata the client will</font>

1965
02:15:10,290 --> 02:15:14,640
keep the metadata locally and<font color="#E5E5E5"> outsource</font>

1966
02:15:12,960 --> 02:15:17,940
the<font color="#E5E5E5"> encrypted index together with the</font>

1967
02:15:14,640 --> 02:15:20,159
encrypted files to the<font color="#CCCCCC"> server</font>

1968
02:15:17,940 --> 02:15:22,049
perform a search the client will

1969
02:15:20,159 --> 02:15:24,239
generate a<font color="#E5E5E5"> token associated with the</font>

1970
02:15:22,050 --> 02:15:27,989
keyboard<font color="#CCCCCC"> sent</font><font color="#E5E5E5"> this token to the server</font>

1971
02:15:24,239 --> 02:15:30,388
now this token will enable the server to

1972
02:15:27,989 --> 02:15:33,780
perform<font color="#E5E5E5"> a search over</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> encrypted</font>

1973
02:15:30,389 --> 02:15:36,810
index<font color="#E5E5E5"> but only learn the files</font>

1974
02:15:33,780 --> 02:15:38,790
associated with<font color="#E5E5E5"> this keyword when the</font>

1975
02:15:36,810 --> 02:15:42,350
server loads those sends the encrypted

1976
02:15:38,790 --> 02:15:45,300
<font color="#CCCCCC">files so now the client can decrypt them</font>

1977
02:15:42,350 --> 02:15:47,159
now what you<font color="#E5E5E5"> can observe here is</font><font color="#CCCCCC"> that</font>

1978
02:15:45,300 --> 02:15:48,960
there is<font color="#CCCCCC"> a leakage</font><font color="#E5E5E5"> we are leaking</font>

1979
02:15:47,159 --> 02:15:51,900
information<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the server</font>

1980
02:15:48,960 --> 02:15:53,400
what are we leaking we are<font color="#E5E5E5"> leaking</font>

1981
02:15:51,900 --> 02:15:55,949
what's called the access pattern

1982
02:15:53,400 --> 02:15:59,750
<font color="#E5E5E5">essentially the list of files</font><font color="#CCCCCC"> that are</font>

1983
02:15:55,949 --> 02:16:02,519
associated that contain<font color="#CCCCCC"> this</font><font color="#E5E5E5"> keyword</font>

1984
02:15:59,750 --> 02:16:04,949
unfortunately we need to leak this<font color="#CCCCCC"> if we</font>

1985
02:16:02,520 --> 02:16:07,889
want the scheme<font color="#CCCCCC"> to be efficient</font><font color="#E5E5E5"> because</font>

1986
02:16:04,949 --> 02:16:10,830
we want the server<font color="#CCCCCC"> to send us only the</font>

1987
02:16:07,889 --> 02:16:15,210
related files<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that our download is</font>

1988
02:16:10,830 --> 02:16:17,100
<font color="#E5E5E5">efficient but notice that here it</font>

1989
02:16:15,210 --> 02:16:20,070
doesn't<font color="#E5E5E5"> mean that the server knows the</font>

1990
02:16:17,100 --> 02:16:23,310
<font color="#CCCCCC">keyword or the files</font><font color="#E5E5E5"> it is done in a</font>

1991
02:16:20,070 --> 02:16:24,989
<font color="#E5E5E5">very hiding the actual keyword and the</font>

1992
02:16:23,310 --> 02:16:27,750
contents of the files they are encrypted

1993
02:16:24,989 --> 02:16:30,900
but it only<font color="#CCCCCC"> learns the association</font>

1994
02:16:27,750 --> 02:16:32,820
between<font color="#E5E5E5"> them there's also another</font>

1995
02:16:30,900 --> 02:16:34,949
leakage called the search pattern

1996
02:16:32,820 --> 02:16:37,860
<font color="#E5E5E5">essentially the</font><font color="#CCCCCC"> number of times a</font>

1997
02:16:34,950 --> 02:16:40,110
keyword is searched for and this<font color="#E5E5E5"> again</font>

1998
02:16:37,860 --> 02:16:42,510
leaks<font color="#E5E5E5"> in many searchable encryption</font>

1999
02:16:40,110 --> 02:16:46,920
schemes<font color="#E5E5E5"> because these tokens the client</font>

2000
02:16:42,510 --> 02:16:49,530
generates<font color="#E5E5E5"> are deterministic for dynamic</font>

2001
02:16:46,920 --> 02:16:51,870
schemes<font color="#E5E5E5"> as in our case we want to be</font>

2002
02:16:49,530 --> 02:16:55,380
able<font color="#CCCCCC"> to add or remove files</font><font color="#E5E5E5"> there is</font>

2003
02:16:51,870 --> 02:16:57,630
<font color="#E5E5E5">further leakage and without for word</font>

2004
02:16:55,379 --> 02:16:59,759
privacy<font color="#E5E5E5"> what leaks during a</font><font color="#CCCCCC"> file in</font>

2005
02:16:57,629 --> 02:17:02,188
assertion is that<font color="#E5E5E5"> the file identifier</font>

2006
02:16:59,760 --> 02:17:05,340
and file size<font color="#E5E5E5"> of course the number of</font>

2007
02:17:02,189 --> 02:17:07,469
<font color="#E5E5E5">keywords in the file and whether or not</font>

2008
02:17:05,340 --> 02:17:10,860
these keywords were previously searched

2009
02:17:07,468 --> 02:17:13,169
for and why does this happen with a

2010
02:17:10,860 --> 02:17:15,000
search the client is<font color="#CCCCCC"> sending</font><font color="#E5E5E5"> this token</font>

2011
02:17:13,170 --> 02:17:18,960
which is essentially the key<font color="#CCCCCC"> associated</font>

2012
02:17:15,000 --> 02:17:20,580
with this keyword<font color="#E5E5E5"> and then now we are</font>

2013
02:17:18,959 --> 02:17:22,558
adding<font color="#CCCCCC"> a new</font><font color="#E5E5E5"> file let's say that</font>

2014
02:17:20,580 --> 02:17:26,218
contains a<font color="#E5E5E5"> keyword that was previously</font>

2015
02:17:22,558 --> 02:17:29,459
<font color="#E5E5E5">searched for this token enables the</font>

2016
02:17:26,218 --> 02:17:30,830
server to link this<font color="#E5E5E5"> new file with the</font>

2017
02:17:29,459 --> 02:17:32,928
old<font color="#E5E5E5"> search</font><font color="#CCCCCC"> keeper</font>

2018
02:17:30,830 --> 02:17:34,280
and of course in the worst case if<font color="#E5E5E5"> all</font>

2019
02:17:32,929 --> 02:17:36,710
the<font color="#CCCCCC"> keywords were previously searched</font>

2020
02:17:34,280 --> 02:17:40,429
for<font color="#E5E5E5"> then the server knows all these</font>

2021
02:17:36,709 --> 02:17:42,500
<font color="#E5E5E5">associations such leakages in searchable</font>

2022
02:17:40,429 --> 02:17:44,599
encryption schemes may lead to<font color="#E5E5E5"> many</font>

2023
02:17:42,500 --> 02:17:47,000
attacks<font color="#E5E5E5"> access between attacks searching</font>

2024
02:17:44,599 --> 02:17:49,398
search<font color="#E5E5E5"> between attacks file injection</font>

2025
02:17:47,000 --> 02:17:54,138
attacks etc<font color="#CCCCCC"> and as we said without</font>

2026
02:17:49,398 --> 02:17:56,209
<font color="#E5E5E5">forward privacy each new file can be</font>

2027
02:17:54,138 --> 02:17:59,119
<font color="#E5E5E5">linked by the server to previous</font>

2028
02:17:56,209 --> 02:18:01,369
searches<font color="#E5E5E5"> for free essentially but the</font>

2029
02:17:59,120 --> 02:18:05,240
good<font color="#CCCCCC"> news is that forward privacy</font>

2030
02:18:01,370 --> 02:18:08,290
prevents this kind of and this helps

2031
02:18:05,240 --> 02:18:12,170
prevent some of these mentioned attacks

2032
02:18:08,290 --> 02:18:15,679
so with forward<font color="#E5E5E5"> privacy when we insert a</font>

2033
02:18:12,170 --> 02:18:17,780
file<font color="#E5E5E5"> we leak the number the file</font>

2034
02:18:15,679 --> 02:18:20,478
identifier<font color="#E5E5E5"> the file size and the number</font>

2035
02:18:17,780 --> 02:18:23,750
<font color="#CCCCCC">of keywords</font><font color="#E5E5E5"> in the file but we no longer</font>

2036
02:18:20,478 --> 02:18:27,920
<font color="#E5E5E5">geek any association with this new file</font>

2037
02:18:23,750 --> 02:18:30,648
and any previously<font color="#E5E5E5"> searched keyword so</font>

2038
02:18:27,920 --> 02:18:32,049
our scheme achieves<font color="#E5E5E5"> forward privacy</font>

2039
02:18:30,648 --> 02:18:35,949
roughly as follows

2040
02:18:32,049 --> 02:18:39,108
<font color="#E5E5E5">so as usual the client generates a token</font>

2041
02:18:35,950 --> 02:18:41,330
revealing this associated<font color="#E5E5E5"> key with a</font>

2042
02:18:39,109 --> 02:18:44,030
<font color="#E5E5E5">keyword to the server</font><font color="#CCCCCC"> the server</font><font color="#E5E5E5"> as</font>

2043
02:18:41,330 --> 02:18:46,549
usual performs its search over<font color="#E5E5E5"> the</font>

2044
02:18:44,030 --> 02:18:49,099
encrypted<font color="#E5E5E5"> index finds the associated</font>

2045
02:18:46,549 --> 02:18:53,108
files and returns to<font color="#E5E5E5"> the client now in</font>

2046
02:18:49,099 --> 02:18:56,630
addition<font color="#E5E5E5"> the server also deletes these</font>

2047
02:18:53,109 --> 02:18:59,929
entries that were accessed<font color="#E5E5E5"> and then the</font>

2048
02:18:56,629 --> 02:19:03,500
client<font color="#E5E5E5"> reinsert these entries with a</font>

2049
02:18:59,929 --> 02:19:06,710
fresh new key at new random<font color="#E5E5E5"> locations in</font>

2050
02:19:03,500 --> 02:19:08,660
the encrypted<font color="#CCCCCC"> index so on the slides I</font>

2051
02:19:06,709 --> 02:19:11,478
will<font color="#E5E5E5"> only mention an honest but curious</font>

2052
02:19:08,660 --> 02:19:15,109
setting and we will use some<font color="#E5E5E5"> mam</font>

2053
02:19:11,478 --> 02:19:17,718
constant but small client storage<font color="#E5E5E5"> in the</font>

2054
02:19:15,109 --> 02:19:19,760
paper<font color="#E5E5E5"> we have a dynamic efficient</font>

2055
02:19:17,718 --> 02:19:23,348
parallelizable<font color="#E5E5E5"> for word private scheme</font>

2056
02:19:19,760 --> 02:19:26,059
<font color="#E5E5E5">whose security</font><font color="#CCCCCC"> is proven by a</font><font color="#E5E5E5"> simulation</font>

2057
02:19:23,349 --> 02:19:28,130
so I will<font color="#E5E5E5"> demonstrate our scheme using</font>

2058
02:19:26,058 --> 02:19:32,959
an example<font color="#E5E5E5"> let's say we have three files</font>

2059
02:19:28,129 --> 02:19:35,779
file one has three<font color="#E5E5E5"> keywords file two and</font>

2060
02:19:32,959 --> 02:19:38,358
three contain two<font color="#E5E5E5"> keywords each so as</font>

2061
02:19:35,780 --> 02:19:42,590
you can<font color="#CCCCCC"> observe our dictionary is of</font>

2062
02:19:38,359 --> 02:19:44,269
<font color="#E5E5E5">size</font><font color="#CCCCCC"> for foreign keywords and I will use</font>

2063
02:19:42,590 --> 02:19:48,139
this<font color="#CCCCCC"> notation</font><font color="#E5E5E5"> WI</font>

2064
02:19:44,269 --> 02:19:51,560
J to denote that<font color="#E5E5E5"> file J contains keyword</font>

2065
02:19:48,138 --> 02:19:57,500
<font color="#CCCCCC">I so let's say file1</font><font color="#E5E5E5"> contains</font><font color="#CCCCCC"> keyword</font>

2066
02:19:51,560 --> 02:20:00,769
for I will denote before comma F<font color="#E5E5E5"> 1 we</font>

2067
02:19:57,500 --> 02:20:04,010
will employ two indices<font color="#E5E5E5"> one at the</font>

2068
02:20:00,770 --> 02:20:06,140
<font color="#E5E5E5">client</font><font color="#CCCCCC"> side keeps for each keyword</font><font color="#E5E5E5"> the</font>

2069
02:20:04,010 --> 02:20:09,229
number of files associated with that

2070
02:20:06,140 --> 02:20:10,640
keyword and the number of searches<font color="#CCCCCC"> we</font>

2071
02:20:09,229 --> 02:20:12,760
have performed over<font color="#E5E5E5"> that keyword so</font>

2072
02:20:10,640 --> 02:20:15,800
these are two simple<font color="#E5E5E5"> integer counters</font>

2073
02:20:12,760 --> 02:20:18,350
nothing cryptographic here<font color="#E5E5E5"> and at the</font>

2074
02:20:15,800 --> 02:20:23,778
server side<font color="#E5E5E5"> we have a dictionary let's</font>

2075
02:20:18,350 --> 02:20:27,529
say a<font color="#E5E5E5"> hash map now</font><font color="#CCCCCC"> initially</font><font color="#E5E5E5"> the client</font>

2076
02:20:23,779 --> 02:20:30,470
can build this index locally and then

2077
02:20:27,529 --> 02:20:32,869
finally outsource it to<font color="#E5E5E5"> the server so</font>

2078
02:20:30,470 --> 02:20:35,868
the client will take each file and<font color="#E5E5E5"> for</font>

2079
02:20:32,869 --> 02:20:38,510
<font color="#E5E5E5">each keyword in the file it will start</font>

2080
02:20:35,869 --> 02:20:40,520
with incrementing the counter and then

2081
02:20:38,510 --> 02:20:44,210
it will generate<font color="#CCCCCC"> the key associated with</font>

2082
02:20:40,520 --> 02:20:48,289
this<font color="#CCCCCC"> keyword then it will create a</font>

2083
02:20:44,210 --> 02:20:51,919
<font color="#CCCCCC">pseudorandom</font><font color="#E5E5E5"> address to store this</font>

2084
02:20:48,289 --> 02:20:56,630
<font color="#E5E5E5">association of</font><font color="#CCCCCC"> w1</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> f1 keyword 1 and</font>

2085
02:20:51,920 --> 02:20:59,420
file 1 and encrypt this entry<font color="#E5E5E5"> with again</font>

2086
02:20:56,630 --> 02:21:02,868
a key<font color="#E5E5E5"> derived for this particular entry</font>

2087
02:20:59,420 --> 02:21:05,300
so<font color="#E5E5E5"> I will show you the unencrypted</font>

2088
02:21:02,869 --> 02:21:11,060
version of this index<font color="#E5E5E5"> but everything in</font>

2089
02:21:05,300 --> 02:21:12,528
this index<font color="#CCCCCC"> is encrypted ok so the client</font>

2090
02:21:11,060 --> 02:21:15,979
will switch to<font color="#E5E5E5"> the next keyword in the</font>

2091
02:21:12,529 --> 02:21:18,590
file<font color="#E5E5E5"> increment</font><font color="#CCCCCC"> it's counter create the</font>

2092
02:21:15,979 --> 02:21:21,188
key associated<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this keyword find</font>

2093
02:21:18,590 --> 02:21:24,800
the<font color="#CCCCCC"> pseudonym address to store the</font>

2094
02:21:21,189 --> 02:21:28,159
<font color="#E5E5E5">association of</font><font color="#CCCCCC"> w3</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> f-fun encrypted</font>

2095
02:21:24,800 --> 02:21:31,099
and stored at<font color="#E5E5E5"> the index and the client</font>

2096
02:21:28,159 --> 02:21:33,319
continues encrypts and stores double

2097
02:21:31,100 --> 02:21:35,750
<font color="#CCCCCC">before f1</font><font color="#E5E5E5"> Association at some other</font>

2098
02:21:33,319 --> 02:21:39,890
pseudo-random location<font color="#E5E5E5"> and continues</font>

2099
02:21:35,750 --> 02:21:43,850
<font color="#E5E5E5">with other files and finishes completing</font>

2100
02:21:39,890 --> 02:21:45,560
<font color="#E5E5E5">this encrypted index now</font><font color="#CCCCCC"> together</font><font color="#E5E5E5"> with</font>

2101
02:21:43,850 --> 02:21:48,710
<font color="#E5E5E5">the encrypted files the client can</font>

2102
02:21:45,560 --> 02:21:50,989
outsource this encrypted<font color="#E5E5E5"> index and now</font>

2103
02:21:48,710 --> 02:21:53,630
we are ready<font color="#E5E5E5"> to</font><font color="#CCCCCC"> perform a search</font>

2104
02:21:50,989 --> 02:21:54,109
so to search for<font color="#E5E5E5"> let's say keyword</font>

2105
02:21:53,630 --> 02:21:56,599
<font color="#CCCCCC">fourth</font>

2106
02:21:54,109 --> 02:21:57,950
the client will generate the key

2107
02:21:56,600 --> 02:22:01,280
associated<font color="#CCCCCC"> key</font>

2108
02:21:57,950 --> 02:22:05,090
<font color="#E5E5E5">for and simply copy this counter and</font>

2109
02:22:01,280 --> 02:22:09,650
then<font color="#E5E5E5"> sent these values to the server now</font>

2110
02:22:05,090 --> 02:22:12,470
the server for each file associated<font color="#E5E5E5"> with</font>

2111
02:22:09,650 --> 02:22:16,070
<font color="#E5E5E5">this keyword so the counter was</font><font color="#CCCCCC"> 2 so the</font>

2112
02:22:12,470 --> 02:22:19,010
server will do this<font color="#E5E5E5"> twice it will find</font><font color="#CCCCCC"> 2</font>

2113
02:22:16,070 --> 02:22:21,470
locations and<font color="#E5E5E5"> decryption keys for the</font>

2114
02:22:19,010 --> 02:22:24,170
entries in<font color="#E5E5E5"> its index so it will compute</font>

2115
02:22:21,470 --> 02:22:26,810
<font color="#E5E5E5">the address find this location compute</font>

2116
02:22:24,170 --> 02:22:29,570
the decryption key<font color="#E5E5E5"> decrypt the entry and</font>

2117
02:22:26,810 --> 02:22:33,140
learn that this<font color="#E5E5E5"> keyword is associated</font>

2118
02:22:29,570 --> 02:22:35,449
with file 1 then it will<font color="#CCCCCC"> go</font><font color="#E5E5E5"> to the next</font>

2119
02:22:33,140 --> 02:22:37,789
<font color="#E5E5E5">entry find its location</font><font color="#CCCCCC"> and decrypt</font><font color="#E5E5E5"> and</font>

2120
02:22:35,450 --> 02:22:41,050
learn it's also<font color="#E5E5E5"> associated with file 3</font>

2121
02:22:37,790 --> 02:22:44,150
so the<font color="#E5E5E5"> query result is file1 and file2</font>

2122
02:22:41,050 --> 02:22:45,949
<font color="#E5E5E5">the client the server will just send</font>

2123
02:22:44,150 --> 02:22:50,449
these values to the client<font color="#E5E5E5"> for the</font>

2124
02:22:45,950 --> 02:22:53,650
client<font color="#CCCCCC"> to decrypt then the server</font>

2125
02:22:50,450 --> 02:22:58,040
<font color="#E5E5E5">removes these entries that were</font><font color="#CCCCCC"> reused</font>

2126
02:22:53,650 --> 02:23:01,340
<font color="#CCCCCC">okay simply remove</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> now the client</font>

2127
02:22:58,040 --> 02:23:03,020
increments<font color="#E5E5E5"> it's all local counter for</font>

2128
02:23:01,340 --> 02:23:06,950
the<font color="#CCCCCC"> number of searches</font><font color="#E5E5E5"> performed for</font>

2129
02:23:03,020 --> 02:23:11,150
keyword<font color="#E5E5E5"> 4 and then this enables him to</font>

2130
02:23:06,950 --> 02:23:14,630
derive a fresh new key with this fresh

2131
02:23:11,150 --> 02:23:16,880
key the client will compute Neve<font color="#CCCCCC"> pseudo</font>

2132
02:23:14,630 --> 02:23:19,310
<font color="#CCCCCC">random addresses and</font><font color="#E5E5E5"> Neve encryption</font>

2133
02:23:16,880 --> 02:23:22,759
keys to encrypt these two associations

2134
02:23:19,310 --> 02:23:28,160
<font color="#E5E5E5">and store them back at the server's</font>

2135
02:23:22,760 --> 02:23:30,500
index at Neve random locations now to

2136
02:23:28,160 --> 02:23:33,530
insert a file let's say which contains

2137
02:23:30,500 --> 02:23:36,080
<font color="#E5E5E5">two key words</font><font color="#CCCCCC"> 3 & 4</font><font color="#E5E5E5"> the client will</font>

2138
02:23:33,530 --> 02:23:38,650
again create the keys associated with

2139
02:23:36,080 --> 02:23:41,840
these key words<font color="#E5E5E5"> prepare these</font>

2140
02:23:38,650 --> 02:23:44,750
associations<font color="#E5E5E5"> of key verse 3 and file for</font>

2141
02:23:41,840 --> 02:23:46,910
<font color="#CCCCCC">keyword 4 & 5 4 encrypt them with these</font>

2142
02:23:44,750 --> 02:23:49,130
Neve pseudo random<font color="#E5E5E5"> keys find their</font>

2143
02:23:46,910 --> 02:23:51,050
<font color="#CCCCCC">pseudo-random addresses and then</font><font color="#E5E5E5"> sent</font>

2144
02:23:49,130 --> 02:23:56,060
these<font color="#E5E5E5"> to the server for the server to</font>

2145
02:23:51,050 --> 02:24:01,279
<font color="#E5E5E5">store them observe that at any point in</font>

2146
02:23:56,060 --> 02:24:04,490
time<font color="#E5E5E5"> the server's index only has entries</font>

2147
02:24:01,280 --> 02:24:07,970
that were encrypted with a key that<font color="#CCCCCC"> was</font>

2148
02:24:04,490 --> 02:24:10,520
never revealed<font color="#E5E5E5"> to the server so for</font>

2149
02:24:07,970 --> 02:24:11,510
<font color="#E5E5E5">example keyword 3 we never searched for</font>

2150
02:24:10,520 --> 02:24:13,970
it so

2151
02:24:11,510 --> 02:24:16,370
never received a token for it<font color="#E5E5E5"> keyword</font>

2152
02:24:13,970 --> 02:24:20,349
for<font color="#E5E5E5"> we searched for it the server has a</font>

2153
02:24:16,370 --> 02:24:22,790
token for keyword<font color="#E5E5E5"> for but this entry</font>

2154
02:24:20,350 --> 02:24:25,069
remember we generated a fresh key for

2155
02:24:22,790 --> 02:24:27,620
keyword<font color="#E5E5E5"> four so now</font><font color="#CCCCCC"> this entry is</font>

2156
02:24:25,069 --> 02:24:30,369
<font color="#E5E5E5">encrypted with a fresh key that was</font>

2157
02:24:27,620 --> 02:24:32,899
never<font color="#E5E5E5"> revealed to the server</font>

2158
02:24:30,370 --> 02:24:35,050
finally the client simply increments its

2159
02:24:32,899 --> 02:24:38,479
counters and we are done<font color="#E5E5E5"> with insertion</font>

2160
02:24:35,050 --> 02:24:41,630
to perform<font color="#E5E5E5"> deletion we need to add</font>

2161
02:24:38,479 --> 02:24:43,608
another index<font color="#CCCCCC"> so at the server</font><font color="#E5E5E5"> side we</font>

2162
02:24:41,630 --> 02:24:47,569
will<font color="#E5E5E5"> have</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> right-hand</font><font color="#CCCCCC"> side index as</font>

2163
02:24:43,609 --> 02:24:49,790
<font color="#CCCCCC">additional</font><font color="#E5E5E5"> this index keep again this</font>

2164
02:24:47,569 --> 02:24:53,899
index will<font color="#CCCCCC"> be encrypted it will</font><font color="#E5E5E5"> simply</font>

2165
02:24:49,790 --> 02:24:57,979
keep for each file<font color="#E5E5E5"> the address is on our</font>

2166
02:24:53,899 --> 02:25:01,069
left<font color="#E5E5E5"> hand side index for entries that</font>

2167
02:24:57,979 --> 02:25:04,010
<font color="#CCCCCC">are related to this file</font><font color="#E5E5E5"> that's it and</font>

2168
02:25:01,069 --> 02:25:06,710
at the client<font color="#CCCCCC"> side we</font><font color="#E5E5E5"> will keep another</font>

2169
02:25:04,010 --> 02:25:08,960
<font color="#E5E5E5">set of counters so for each file</font><font color="#CCCCCC"> how</font>

2170
02:25:06,710 --> 02:25:12,949
many keywords<font color="#E5E5E5"> are associated with this</font>

2171
02:25:08,960 --> 02:25:15,649
file to delete a file let's say file 3

2172
02:25:12,950 --> 02:25:18,170
the client generates the key associated

2173
02:25:15,649 --> 02:25:20,750
<font color="#CCCCCC">with this file</font><font color="#E5E5E5"> for this right-hand side</font>

2174
02:25:18,170 --> 02:25:22,310
index of the server and then simply

2175
02:25:20,750 --> 02:25:26,170
copies the counter and sends these

2176
02:25:22,310 --> 02:25:29,090
values to the server now the server

2177
02:25:26,170 --> 02:25:33,920
computes these addresses on the<font color="#E5E5E5"> right</font>

2178
02:25:29,090 --> 02:25:36,680
<font color="#E5E5E5">hand side index decrypt stem learns the</font>

2179
02:25:33,920 --> 02:25:40,430
addresses on the<font color="#CCCCCC"> left-hand side</font><font color="#E5E5E5"> index</font>

2180
02:25:36,680 --> 02:25:43,850
and now<font color="#E5E5E5"> simply deletes these entries and</font>

2181
02:25:40,430 --> 02:25:46,729
of course the file the client also

2182
02:25:43,850 --> 02:25:50,600
simply deletes its entry the counter in

2183
02:25:46,729 --> 02:25:54,800
its index so at the client side we have

2184
02:25:50,600 --> 02:25:57,080
this<font color="#CCCCCC"> left-hand</font><font color="#E5E5E5"> side counters for search</font>

2185
02:25:54,800 --> 02:25:59,259
and insertion operations and<font color="#CCCCCC"> right-hand</font>

2186
02:25:57,080 --> 02:26:04,609
side counters for insertion and deletion

2187
02:25:59,260 --> 02:26:06,800
operations so until our work<font color="#E5E5E5"> there are</font>

2188
02:26:04,609 --> 02:26:09,800
only<font color="#E5E5E5"> two schemes providing for word</font>

2189
02:26:06,800 --> 02:26:12,619
privacy<font color="#E5E5E5"> one was using an oblivious</font><font color="#CCCCCC"> RAM</font>

2190
02:26:09,800 --> 02:26:15,229
type of<font color="#E5E5E5"> structure</font><font color="#CCCCCC"> so it was</font><font color="#E5E5E5"> having some</font>

2191
02:26:12,620 --> 02:26:18,140
poly logarithmic<font color="#E5E5E5"> overhead and the other</font>

2192
02:26:15,229 --> 02:26:20,449
was using public key operations<font color="#E5E5E5"> so here</font>

2193
02:26:18,140 --> 02:26:24,448
we have for word<font color="#E5E5E5"> privacy together with</font>

2194
02:26:20,450 --> 02:26:27,270
parallelism<font color="#E5E5E5"> and achieving essentially</font>

2195
02:26:24,449 --> 02:26:31,560
optimal<font color="#E5E5E5"> asymptotic complexity with only</font>

2196
02:26:27,270 --> 02:26:33,989
<font color="#E5E5E5">simple symmetric primitives we also</font>

2197
02:26:31,560 --> 02:26:36,299
measured<font color="#CCCCCC"> the concrete performance of our</font>

2198
02:26:33,989 --> 02:26:39,448
scheme<font color="#E5E5E5"> with a data set containing</font>

2199
02:26:36,299 --> 02:26:43,589
<font color="#E5E5E5">roughly</font><font color="#CCCCCC"> 4 million</font><font color="#E5E5E5"> files</font><font color="#CCCCCC"> roughly 10</font>

2200
02:26:39,449 --> 02:26:46,909
million<font color="#E5E5E5"> keywords and 500 million total</font>

2201
02:26:43,589 --> 02:26:50,939
<font color="#E5E5E5">index size so 500 million</font><font color="#CCCCCC"> keyword</font><font color="#E5E5E5"> file</font>

2202
02:26:46,909 --> 02:26:53,520
associations we implemented this<font color="#E5E5E5"> and</font>

2203
02:26:50,939 --> 02:26:56,159
tested on an<font color="#E5E5E5"> Amazon server with multiple</font>

2204
02:26:53,520 --> 02:26:58,289
cores but our main tests were using only

2205
02:26:56,159 --> 02:27:01,649
a<font color="#CCCCCC"> single core and compared against the</font>

2206
02:26:58,289 --> 02:27:04,020
<font color="#CCCCCC">previous work suppose so I will only</font>

2207
02:27:01,649 --> 02:27:07,140
show<font color="#E5E5E5"> one graph for the sake of time here</font>

2208
02:27:04,020 --> 02:27:09,449
we have further<font color="#E5E5E5"> graphs in the paper this</font>

2209
02:27:07,140 --> 02:27:13,528
<font color="#E5E5E5">is the search performance and this is</font>

2210
02:27:09,449 --> 02:27:15,810
per<font color="#E5E5E5"> entry per keyword file Association</font>

2211
02:27:13,529 --> 02:27:18,239
<font color="#E5E5E5">our scheme with a single core the</font>

2212
02:27:15,810 --> 02:27:22,229
<font color="#CCCCCC">redline takes roughly ten microseconds</font>

2213
02:27:18,239 --> 02:27:24,839
<font color="#CCCCCC">per</font><font color="#E5E5E5"> Association and the blue line is our</font>

2214
02:27:22,229 --> 02:27:27,778
scheme with<font color="#CCCCCC"> five cores running in</font>

2215
02:27:24,839 --> 02:27:31,979
parallel<font color="#E5E5E5"> which takes</font><font color="#CCCCCC"> only roughly three</font>

2216
02:27:27,779 --> 02:27:36,329
<font color="#CCCCCC">my microseconds</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> more than three times</font>

2217
02:27:31,979 --> 02:27:39,269
speed up with<font color="#E5E5E5"> five-course so in</font>

2218
02:27:36,329 --> 02:27:42,419
conclusion what<font color="#CCCCCC"> we see is that</font><font color="#E5E5E5"> forward</font>

2219
02:27:39,270 --> 02:27:45,029
privacy is a very important feature for

2220
02:27:42,419 --> 02:27:47,999
searchable encryption schemes trying to

2221
02:27:45,029 --> 02:27:51,270
resist<font color="#E5E5E5"> some of these attacks and our</font>

2222
02:27:47,999 --> 02:27:54,628
scheme achieves<font color="#CCCCCC"> forward</font><font color="#E5E5E5"> privacy it is</font>

2223
02:27:51,270 --> 02:27:56,579
parallelizable<font color="#E5E5E5"> it is efficient so</font><font color="#CCCCCC"> we</font>

2224
02:27:54,629 --> 02:27:58,560
only employ pseudo-random functions hash

2225
02:27:56,579 --> 02:28:01,499
functions and at the server<font color="#CCCCCC"> side a</font>

2226
02:27:58,560 --> 02:28:04,640
simple hash map data structure and we

2227
02:28:01,499 --> 02:28:07,669
have a security proof<font color="#CCCCCC"> wire simulation as</font>

2228
02:28:04,640 --> 02:28:11,608
future work there are two main issues

2229
02:28:07,669 --> 02:28:14,100
one is backward privacy so remember

2230
02:28:11,609 --> 02:28:16,859
<font color="#CCCCCC">forward privacy removes the link in a</font>

2231
02:28:14,100 --> 02:28:20,100
new<font color="#E5E5E5"> file</font><font color="#CCCCCC"> that is inserted and previous</font>

2232
02:28:16,859 --> 02:28:23,869
searches<font color="#E5E5E5"> can we remove the linkage</font>

2233
02:28:20,100 --> 02:28:26,879
between<font color="#E5E5E5"> a deleted file and later</font>

2234
02:28:23,869 --> 02:28:31,890
<font color="#E5E5E5">searches unfortunately existing</font>

2235
02:28:26,879 --> 02:28:34,890
solutions are not efficient<font color="#E5E5E5"> and remember</font>

2236
02:28:31,890 --> 02:28:38,010
I said<font color="#E5E5E5"> we have this client storage for</font>

2237
02:28:34,890 --> 02:28:41,550
these counters so for

2238
02:28:38,010 --> 02:28:44,069
each file and<font color="#E5E5E5"> for each keyword we need</font>

2239
02:28:41,550 --> 02:28:46,170
to store these values in the<font color="#CCCCCC"> people we</font>

2240
02:28:44,069 --> 02:28:48,840
save<font color="#CCCCCC"> you can use obvious Ram to</font>

2241
02:28:46,170 --> 02:28:51,149
outsource<font color="#CCCCCC"> the storage but it adds a new</font>

2242
02:28:48,840 --> 02:28:53,880
round of communication can<font color="#CCCCCC"> you reduce</font>

2243
02:28:51,149 --> 02:28:56,130
<font color="#E5E5E5">storage without adding</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> rounds</font><font color="#CCCCCC"> of</font>

2244
02:28:53,880 --> 02:28:57,449
communication<font color="#E5E5E5"> thank you for listening</font>

2245
02:28:56,130 --> 02:29:13,619
and<font color="#E5E5E5"> I will be happy</font><font color="#CCCCCC"> to answer</font><font color="#E5E5E5"> your</font>

2246
02:28:57,450 --> 02:29:16,680
questions what you would you get

2247
02:29:13,620 --> 02:29:18,149
anything stronger<font color="#CCCCCC"> a few sort</font><font color="#E5E5E5"> of instead</font>

2248
02:29:16,680 --> 02:29:20,939
<font color="#CCCCCC">of</font><font color="#E5E5E5"> having just one counter if you sort</font>

2249
02:29:18,149 --> 02:29:23,550
<font color="#E5E5E5">of</font><font color="#CCCCCC"> pre-loaded the server with some</font>

2250
02:29:20,939 --> 02:29:27,359
random selection of keys in the future

2251
02:29:23,550 --> 02:29:28,830
<font color="#E5E5E5">so but sort of guessed what queries</font>

2252
02:29:27,359 --> 02:29:31,710
would happen and you<font color="#E5E5E5"> preload</font><font color="#CCCCCC"> the server</font>

2253
02:29:28,830 --> 02:29:35,700
with some things for<font color="#E5E5E5"> those so that</font><font color="#CCCCCC"> you</font>

2254
02:29:31,710 --> 02:29:37,830
don't actually<font color="#E5E5E5"> have to send so</font><font color="#CCCCCC"> that</font>

2255
02:29:35,700 --> 02:29:39,300
after<font color="#E5E5E5"> you do a query just the deletion</font>

2256
02:29:37,830 --> 02:29:42,060
happens and you<font color="#E5E5E5"> don't always have to</font>

2257
02:29:39,300 --> 02:29:44,910
<font color="#E5E5E5">repopulate you sometimes already done</font><font color="#CCCCCC"> I</font>

2258
02:29:42,060 --> 02:29:49,439
see something<font color="#CCCCCC"> to maybe amortize some of</font>

2259
02:29:44,910 --> 02:29:50,640
the complexity<font color="#E5E5E5"> you</font><font color="#CCCCCC"> mean or so let me if</font>

2260
02:29:49,439 --> 02:29:52,800
I understood you correctly

2261
02:29:50,640 --> 02:29:54,720
first of all in many searchable

2262
02:29:52,800 --> 02:29:58,289
encryption schemes<font color="#E5E5E5"> because this started</font>

2263
02:29:54,720 --> 02:30:00,510
<font color="#CCCCCC">with static schemes the description goes</font>

2264
02:29:58,290 --> 02:30:02,220
as<font color="#CCCCCC"> follows you have a beautiful critic</font>

2265
02:30:00,510 --> 02:30:04,109
competition let's say because<font color="#CCCCCC"> you</font>

2266
02:30:02,220 --> 02:30:06,210
already have a set of files and that

2267
02:30:04,109 --> 02:30:09,090
they contain keywords<font color="#E5E5E5"> so you build index</font>

2268
02:30:06,210 --> 02:30:11,220
ones and then upload it<font color="#E5E5E5"> to the server</font>

2269
02:30:09,090 --> 02:30:13,470
but for dynamic schemes<font color="#E5E5E5"> you may want to</font>

2270
02:30:11,220 --> 02:30:15,720
add any file or remove a file during<font color="#CCCCCC"> the</font>

2271
02:30:13,470 --> 02:30:20,119
process<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the problematic part</font>

2272
02:30:15,720 --> 02:30:23,810
now in our case this reinsertion<font color="#CCCCCC"> of</font>

2273
02:30:20,120 --> 02:30:26,910
fresh keys and<font color="#E5E5E5"> new random locations</font>

2274
02:30:23,810 --> 02:30:28,590
<font color="#E5E5E5">doesn't affect the asymptotic complexity</font>

2275
02:30:26,910 --> 02:30:30,149
<font color="#E5E5E5">so it</font><font color="#CCCCCC"> introduces a round of</font>

2276
02:30:28,590 --> 02:30:33,620
communication<font color="#E5E5E5"> but doesn't affect the</font>

2277
02:30:30,149 --> 02:30:33,619
overall asymptotic complexity

2278
02:30:37,590 --> 02:30:47,520
<font color="#CCCCCC">about 244</font><font color="#E5E5E5"> yeah can you bring but go to</font>

2279
02:30:44,700 --> 02:30:50,609
the loss<font color="#CCCCCC"> no</font><font color="#E5E5E5"> that was the last frame of</font>

2280
02:30:47,520 --> 02:30:55,109
<font color="#E5E5E5">44 no no go to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> velocity</font><font color="#CCCCCC"> yeah great</font>

2281
02:30:50,609 --> 02:30:57,780
so so when you do a deletion<font color="#CCCCCC"> it affects</font>

2282
02:30:55,109 --> 02:31:01,290
that right hand<font color="#E5E5E5"> table</font><font color="#CCCCCC"> this is the</font><font color="#E5E5E5"> left</font>

2283
02:30:57,780 --> 02:31:04,550
hand<font color="#E5E5E5"> table so yes so the left hand table</font>

2284
02:31:01,290 --> 02:31:07,590
is<font color="#CCCCCC"> really over counting the number of</font>

2285
02:31:04,550 --> 02:31:10,710
exactly<font color="#E5E5E5"> so this I don't know how visible</font>

2286
02:31:07,590 --> 02:31:15,720
is this so here is the interesting part

2287
02:31:10,710 --> 02:31:20,399
so the optimal search cost would be<font color="#E5E5E5"> OD</font>

2288
02:31:15,720 --> 02:31:23,880
meaning<font color="#E5E5E5"> D</font><font color="#CCCCCC"> is the result set size</font><font color="#E5E5E5"> so you</font>

2289
02:31:20,399 --> 02:31:25,890
are only spending<font color="#E5E5E5"> time and returning the</font>

2290
02:31:23,880 --> 02:31:29,160
files associated with that keyword<font color="#CCCCCC"> so</font>

2291
02:31:25,890 --> 02:31:32,310
now in<font color="#CCCCCC"> terms</font><font color="#E5E5E5"> of computation the previous</font>

2292
02:31:29,160 --> 02:31:35,399
scheme so<font color="#E5E5E5"> force has</font><font color="#CCCCCC"> D</font><font color="#E5E5E5"> plus number of</font>

2293
02:31:32,310 --> 02:31:37,830
additions and deletions<font color="#E5E5E5"> in our case we</font>

2294
02:31:35,399 --> 02:31:40,108
have<font color="#E5E5E5"> D plus number of deletions so even</font>

2295
02:31:37,830 --> 02:31:43,229
though we deleted a file<font color="#E5E5E5"> the search</font>

2296
02:31:40,109 --> 02:31:45,420
<font color="#E5E5E5">should still go</font><font color="#CCCCCC"> over up to the</font><font color="#E5E5E5"> total</font>

2297
02:31:43,229 --> 02:31:47,369
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> files</font><font color="#CCCCCC"> that were at some</font><font color="#E5E5E5"> point</font>

2298
02:31:45,420 --> 02:31:49,830
<font color="#E5E5E5">associated with that keyword</font><font color="#CCCCCC"> so the</font>

2299
02:31:47,370 --> 02:31:51,540
server still<font color="#E5E5E5"> spends that time but for</font>

2300
02:31:49,830 --> 02:31:54,510
<font color="#E5E5E5">the deleted entries the server will</font>

2301
02:31:51,540 --> 02:32:12,830
realize<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> no valid entry there so</font>

2302
02:31:54,510 --> 02:32:15,660
it's<font color="#E5E5E5"> not included</font><font color="#CCCCCC"> in the when</font><font color="#E5E5E5"> you</font>

2303
02:32:12,830 --> 02:32:20,100
recompute the<font color="#E5E5E5"> new key for</font><font color="#CCCCCC"> that keyword</font>

2304
02:32:15,660 --> 02:32:22,260
<font color="#CCCCCC">do you only have</font><font color="#E5E5E5"> to do the number of</font>

2305
02:32:20,100 --> 02:32:24,990
course<font color="#E5E5E5"> so when you recompute actually</font>

2306
02:32:22,260 --> 02:32:26,970
you can do it because<font color="#E5E5E5"> this number of</font>

2307
02:32:24,990 --> 02:32:30,949
deletions already leaked to the server

2308
02:32:26,970 --> 02:32:30,949
<font color="#E5E5E5">so we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> not trying</font><font color="#CCCCCC"> to hide</font><font color="#E5E5E5"> it anymore</font>

2309
02:32:33,010 --> 02:32:40,649
please have one<font color="#CCCCCC"> more</font><font color="#E5E5E5"> question actually</font>

2310
02:32:34,540 --> 02:32:44,410
<font color="#E5E5E5">so earlier</font><font color="#CCCCCC"> on you said</font><font color="#E5E5E5"> that forward</font>

2311
02:32:40,649 --> 02:32:48,340
<font color="#E5E5E5">privacy defends against file and surf</font>

2312
02:32:44,410 --> 02:32:50,710
file insertion attacks so<font color="#E5E5E5"> forward</font>

2313
02:32:48,340 --> 02:32:54,279
privacy<font color="#E5E5E5"> prevents the leakage between</font><font color="#CCCCCC"> a</font>

2314
02:32:50,710 --> 02:32:57,099
newly inserted file and a previously

2315
02:32:54,279 --> 02:33:01,120
searched keyword<font color="#E5E5E5"> right but there's the</font>

2316
02:32:57,100 --> 02:33:03,310
attack where the<font color="#E5E5E5"> server gives a file to</font>

2317
02:33:01,120 --> 02:33:05,710
be inserted right like say the<font color="#CCCCCC"> the</font>

2318
02:33:03,310 --> 02:33:07,330
databases email on the server<font color="#CCCCCC"> just sends</font>

2319
02:33:05,710 --> 02:33:09,519
email for the client<font color="#E5E5E5"> right so the server</font>

2320
02:33:07,330 --> 02:33:12,039
knows that this file that was just

2321
02:33:09,520 --> 02:33:15,279
inserted has these keywords and so when

2322
02:33:12,040 --> 02:33:19,660
<font color="#E5E5E5">one is looked up it knows this is that</font>

2323
02:33:15,279 --> 02:33:23,229
one<font color="#CCCCCC"> of those</font><font color="#E5E5E5"> keywords right so does your</font>

2324
02:33:19,660 --> 02:33:25,720
<font color="#E5E5E5">forward privacy technique stave off that</font>

2325
02:33:23,229 --> 02:33:30,160
attack so as far as<font color="#E5E5E5"> I know it</font><font color="#CCCCCC"> doesn't</font>

2326
02:33:25,720 --> 02:33:33,819
fully eliminate<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> any last</font>

2327
02:33:30,160 --> 02:33:36,600
<font color="#CCCCCC">questions in between you okay let's</font>

2328
02:33:33,819 --> 02:33:36,600
<font color="#CCCCCC">thank</font><font color="#E5E5E5"> the speaker again</font>

2329
02:33:37,750 --> 02:33:41,430
[Music]

2330
02:33:39,210 --> 02:33:43,319
speakers the next session<font color="#CCCCCC"> Joe Claudia</font>

2331
02:33:41,430 --> 02:33:45,270
and<font color="#E5E5E5"> just remember if you have not</font>

2332
02:33:43,319 --> 02:33:48,090
confirmed that<font color="#CCCCCC"> you're going on the hike</font>

2333
02:33:45,270 --> 02:33:48,570
<font color="#E5E5E5">with the registration people now is the</font>

2334
02:33:48,090 --> 02:33:56,100
time

2335
02:33:48,570 --> 02:33:56,100
[Music]

2336
02:34:04,160 --> 02:34:07,289
[Music]

2337
02:34:20,490 --> 02:34:23,610
[Music]

2338
02:34:29,620 --> 02:34:32,699
[Music]

2339
02:34:36,170 --> 02:34:39,239
[Music]

2340
02:35:04,030 --> 02:35:16,840
[Music]

2341
02:35:19,690 --> 02:35:26,409
[Music]

2342
02:35:28,520 --> 02:35:33,530
[Music]

2343
02:35:35,450 --> 02:35:59,809
<font color="#E5E5E5">I'm still</font><font color="#CCCCCC"> testing</font>

2344
02:35:38,620 --> 02:35:59,809
[Music]

