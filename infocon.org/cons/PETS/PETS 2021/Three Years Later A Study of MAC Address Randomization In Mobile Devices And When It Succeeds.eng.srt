1
00:00:00,000 --> 00:00:02,480
hello everyone my name is ellis fenske

2
00:00:02,480 --> 00:00:04,080
and i'm here to talk to you today

3
00:00:04,080 --> 00:00:05,600
about our paper three years later a

4
00:00:05,600 --> 00:00:07,200
study of mac address randomization in

5
00:00:07,200 --> 00:00:08,240
mobile devices

6
00:00:08,240 --> 00:00:10,240
and when it succeeds and this is joint

7
00:00:10,240 --> 00:00:11,920
work between the mitre corporation and

8
00:00:11,920 --> 00:00:14,880
the u.s naval academy

9
00:00:14,880 --> 00:00:16,480
so let's get started by way of

10
00:00:16,480 --> 00:00:18,320
motivation i just want to talk about

11
00:00:18,320 --> 00:00:20,800
location privacy and mobile devices so

12
00:00:20,800 --> 00:00:22,480
mobile devices are everywhere they're

13
00:00:22,480 --> 00:00:24,000
always in your pocket they're often

14
00:00:24,000 --> 00:00:25,599
co-located with people as they move

15
00:00:25,599 --> 00:00:26,720
around

16
00:00:26,720 --> 00:00:28,240
and they are constantly probing for

17
00:00:28,240 --> 00:00:29,920
wi-fi so in this talk we're just talking

18
00:00:29,920 --> 00:00:31,039
about wi-fi

19
00:00:31,039 --> 00:00:34,239
no other wireless protocols and so these

20
00:00:34,239 --> 00:00:35,200
probe requests

21
00:00:35,200 --> 00:00:37,440
tend to use persistent identifiers in

22
00:00:37,440 --> 00:00:38,800
particular we're interested in the mac

23
00:00:38,800 --> 00:00:40,879
address but also there are many others

24
00:00:40,879 --> 00:00:42,320
and so we're interested in what are

25
00:00:42,320 --> 00:00:44,000
these mobile devices constantly

26
00:00:44,000 --> 00:00:45,760
sending out that reveal information

27
00:00:45,760 --> 00:00:47,039
about sort of their owner or their

28
00:00:47,039 --> 00:00:48,480
identity

29
00:00:48,480 --> 00:00:50,719
and this is a serious tracking concern

30
00:00:50,719 --> 00:00:51,920
because you know you can follow

31
00:00:51,920 --> 00:00:53,920
devices as they walk around as the

32
00:00:53,920 --> 00:00:55,920
people who own them walk around

33
00:00:55,920 --> 00:00:57,680
and so industry is responded by

34
00:00:57,680 --> 00:00:59,440
implementing a technology called mac

35
00:00:59,440 --> 00:01:00,879
address randomization

36
00:01:00,879 --> 00:01:02,480
where when devices go to some probe

37
00:01:02,480 --> 00:01:04,559
requests which are sort of constant

38
00:01:04,559 --> 00:01:07,119
um they don't use their hardware address

39
00:01:07,119 --> 00:01:07,920
and instead

40
00:01:07,920 --> 00:01:09,680
they use a random address so no one can

41
00:01:09,680 --> 00:01:11,360
tell which probe request

42
00:01:11,360 --> 00:01:13,119
belongs to which advice device and they

43
00:01:13,119 --> 00:01:16,080
can't track anybody around

44
00:01:16,080 --> 00:01:17,439
and so let's just look at the previous

45
00:01:17,439 --> 00:01:19,759
work for a moment this is a follow-on

46
00:01:19,759 --> 00:01:20,400
paper

47
00:01:20,400 --> 00:01:23,040
so in 2017 mac address randomization had

48
00:01:23,040 --> 00:01:24,640
just been deployed

49
00:01:24,640 --> 00:01:28,000
very effectively in ios semi-effectively

50
00:01:28,000 --> 00:01:29,680
and android some devices did it and some

51
00:01:29,680 --> 00:01:31,200
devices didn't um so there have been

52
00:01:31,200 --> 00:01:32,400
many recommendations

53
00:01:32,400 --> 00:01:35,360
um and many improvements so things are

54
00:01:35,360 --> 00:01:37,040
quite different now

55
00:01:37,040 --> 00:01:39,119
and our goal was to update our previous

56
00:01:39,119 --> 00:01:40,880
results and try to understand

57
00:01:40,880 --> 00:01:42,479
sort of the current state of the mobile

58
00:01:42,479 --> 00:01:44,079
device landscape

59
00:01:44,079 --> 00:01:47,600
um and and try to understand well is the

60
00:01:47,600 --> 00:01:49,360
old result still true

61
00:01:49,360 --> 00:01:51,680
probably not but in which ways exactly

62
00:01:51,680 --> 00:01:53,600
so we also had to change our methodology

63
00:01:53,600 --> 00:01:54,240
from

64
00:01:54,240 --> 00:01:57,040
previous work because the methodology

65
00:01:57,040 --> 00:01:58,079
had relied on

66
00:01:58,079 --> 00:01:59,439
collecting a bunch of probe requests in

67
00:01:59,439 --> 00:02:01,520
the wild and then doing some identifying

68
00:02:01,520 --> 00:02:03,040
and piecing things together to try to

69
00:02:03,040 --> 00:02:03,680
figure out

70
00:02:03,680 --> 00:02:06,320
what was going on in the mobile device

71
00:02:06,320 --> 00:02:07,360
universe

72
00:02:07,360 --> 00:02:09,119
but privacy protections have gotten a

73
00:02:09,119 --> 00:02:10,720
bit better that is much more difficult

74
00:02:10,720 --> 00:02:11,360
now

75
00:02:11,360 --> 00:02:12,800
so we needed another approach and our

76
00:02:12,800 --> 00:02:14,800
approach was individual tests so we had

77
00:02:14,800 --> 00:02:15,599
a corpus

78
00:02:15,599 --> 00:02:18,720
of 264 mobile devices and we did passive

79
00:02:18,720 --> 00:02:19,760
tests where we put

80
00:02:19,760 --> 00:02:22,959
one device at a time in this rf shielded

81
00:02:22,959 --> 00:02:23,840
enclosure

82
00:02:23,840 --> 00:02:25,440
and recorded on the three

83
00:02:25,440 --> 00:02:28,640
non-overlapping 2.4 gigahertz channels

84
00:02:28,640 --> 00:02:30,400
and then we just waited until we saw

85
00:02:30,400 --> 00:02:32,400
enough probe requests or until 20

86
00:02:32,400 --> 00:02:33,280
minutes passed

87
00:02:33,280 --> 00:02:34,840
some of these devices were very not

88
00:02:34,840 --> 00:02:37,040
talkative

89
00:02:37,040 --> 00:02:39,200
and so we did this actually for three

90
00:02:39,200 --> 00:02:41,040
three tests per device

91
00:02:41,040 --> 00:02:42,800
we tested them in the action state while

92
00:02:42,800 --> 00:02:44,160
they were constantly being sort of

93
00:02:44,160 --> 00:02:45,040
stimulated

94
00:02:45,040 --> 00:02:46,800
with the robot the screen was on that's

95
00:02:46,800 --> 00:02:48,720
sort of simulating someone using them

96
00:02:48,720 --> 00:02:50,879
we tested them in the idle state where

97
00:02:50,879 --> 00:02:52,239
they were just left alone sort of

98
00:02:52,239 --> 00:02:54,160
simulated being in a pocket or a purse

99
00:02:54,160 --> 00:02:55,519
and then we also went into the wi-fi

100
00:02:55,519 --> 00:02:57,200
settings and physically turned wi-fi

101
00:02:57,200 --> 00:02:58,879
off to see if they were still sending

102
00:02:58,879 --> 00:03:00,879
out pro requests

103
00:03:00,879 --> 00:03:02,319
and then we also performed active

104
00:03:02,319 --> 00:03:04,480
attacks on a subset of

105
00:03:04,480 --> 00:03:06,640
the devices mostly modern devices so

106
00:03:06,640 --> 00:03:08,400
let's talk about the experiments

107
00:03:08,400 --> 00:03:10,959
first we have a pretty broad range of

108
00:03:10,959 --> 00:03:12,159
manufacturers

109
00:03:12,159 --> 00:03:14,159
focused primarily though on the

110
00:03:14,159 --> 00:03:16,000
manufacturers that

111
00:03:16,000 --> 00:03:17,840
produce most of the mobile devices that

112
00:03:17,840 --> 00:03:19,440
we sort of see in the wild in the united

113
00:03:19,440 --> 00:03:20,159
states

114
00:03:20,159 --> 00:03:22,959
and uh we also have um a pretty broad

115
00:03:22,959 --> 00:03:24,879
range of android version ios version

116
00:03:24,879 --> 00:03:27,200
and release year um i'll also mention

117
00:03:27,200 --> 00:03:28,799
that we updated these devices if we

118
00:03:28,799 --> 00:03:29,440
could so

119
00:03:29,440 --> 00:03:31,280
we we tested a lot of really older

120
00:03:31,280 --> 00:03:33,120
devices with the hopes that we could

121
00:03:33,120 --> 00:03:34,480
then update them and test them again to

122
00:03:34,480 --> 00:03:36,000
see if the privacy protections

123
00:03:36,000 --> 00:03:38,640
improve with the software update and so

124
00:03:38,640 --> 00:03:39,920
that's why you see a lot of these older

125
00:03:39,920 --> 00:03:41,760
devices being tested

126
00:03:41,760 --> 00:03:45,519
as well and so we found some

127
00:03:45,519 --> 00:03:49,599
surprising results uh in fact

128
00:03:49,599 --> 00:03:50,879
android devices are really different

129
00:03:50,879 --> 00:03:52,959
from each other as it turns out

130
00:03:52,959 --> 00:03:54,159
some of them will send their hardware

131
00:03:54,159 --> 00:03:56,080
address in pro requests while the wi-fi

132
00:03:56,080 --> 00:03:56,959
is turned off

133
00:03:56,959 --> 00:03:58,879
so the user is trying to turn wi-fi off

134
00:03:58,879 --> 00:04:01,599
and keep them quiet and instead they are

135
00:04:01,599 --> 00:04:03,040
sort of insisting on broadcasting a

136
00:04:03,040 --> 00:04:04,879
permanent unique identifier

137
00:04:04,879 --> 00:04:07,519
we found one device where when we up

138
00:04:07,519 --> 00:04:10,319
applied a major android version update

139
00:04:10,319 --> 00:04:12,879
randomization stopped so this the

140
00:04:12,879 --> 00:04:14,560
privacy protections got worse

141
00:04:14,560 --> 00:04:16,959
and there's many other sort of one-off

142
00:04:16,959 --> 00:04:18,720
uh strange behavior

143
00:04:18,720 --> 00:04:20,079
that you can see if you test you know

144
00:04:20,079 --> 00:04:21,918
hundreds of different android devices

145
00:04:21,918 --> 00:04:23,120
uh you can see the paper if you want to

146
00:04:23,120 --> 00:04:25,199
know more the big takeaway from all this

147
00:04:25,199 --> 00:04:26,560
though that i'm trying to get across

148
00:04:26,560 --> 00:04:29,280
is that if you have any question about

149
00:04:29,280 --> 00:04:30,400
sort of what's going on with mobile

150
00:04:30,400 --> 00:04:31,280
devices

151
00:04:31,280 --> 00:04:32,560
the answer is well it depends on the

152
00:04:32,560 --> 00:04:34,720
device more or less so we have to look

153
00:04:34,720 --> 00:04:36,160
at trends we have to look at patterns we

154
00:04:36,160 --> 00:04:37,199
have to look at sort of

155
00:04:37,199 --> 00:04:38,639
how things are changing in the mobile

156
00:04:38,639 --> 00:04:40,240
device landscape rather than sort of

157
00:04:40,240 --> 00:04:42,960
making categorical statements because

158
00:04:42,960 --> 00:04:45,199
the none of those will be correct

159
00:04:45,199 --> 00:04:46,560
entirely

160
00:04:46,560 --> 00:04:49,520
so um let's let's look at some of these

161
00:04:49,520 --> 00:04:51,360
features that allow sort of tracking in

162
00:04:51,360 --> 00:04:52,800
these probe requests

163
00:04:52,800 --> 00:04:54,000
the first one is obviously the mac

164
00:04:54,000 --> 00:04:56,320
address and mac addresses as we talked

165
00:04:56,320 --> 00:04:57,840
about before are random

166
00:04:57,840 --> 00:04:59,360
but they're not equally random all in

167
00:04:59,360 --> 00:05:00,960
the same way so uh

168
00:05:00,960 --> 00:05:03,199
in order to select a random address the

169
00:05:03,199 --> 00:05:04,800
device has to sort of pick

170
00:05:04,800 --> 00:05:06,639
uh which bits to be random and which

171
00:05:06,639 --> 00:05:08,000
bits to be fixed

172
00:05:08,000 --> 00:05:10,000
and sort of to design a scheme a bit

173
00:05:10,000 --> 00:05:11,039
wise structure

174
00:05:11,039 --> 00:05:13,120
for how they draw these random addresses

175
00:05:13,120 --> 00:05:14,800
and so we called that bitwise structure

176
00:05:14,800 --> 00:05:17,360
a mac address scheme and so the first

177
00:05:17,360 --> 00:05:18,639
scheme that we see

178
00:05:18,639 --> 00:05:22,080
is a 46-bit randomization and two of the

179
00:05:22,080 --> 00:05:25,280
bits in the mac address have to be fixed

180
00:05:25,280 --> 00:05:27,360
and randomizing the rest gives you 46

181
00:05:27,360 --> 00:05:28,639
bit randomization

182
00:05:28,639 --> 00:05:30,240
and that's what all ios devices have

183
00:05:30,240 --> 00:05:32,080
always done and it's what android 10

184
00:05:32,080 --> 00:05:34,240
devices are sort of doing now

185
00:05:34,240 --> 00:05:36,639
and some android 639 devices also have

186
00:05:36,639 --> 00:05:38,000
done it in the past

187
00:05:38,000 --> 00:05:39,840
too so it's sort of emerging as the de

188
00:05:39,840 --> 00:05:41,120
facto standard

189
00:05:41,120 --> 00:05:43,919
um and i will say this randomizes the

190
00:05:43,919 --> 00:05:45,039
most bits possible

191
00:05:45,039 --> 00:05:46,479
but that's not really strictly even

192
00:05:46,479 --> 00:05:48,880
necessary only randomizing half of these

193
00:05:48,880 --> 00:05:50,960
is going to give you enough

194
00:05:50,960 --> 00:05:52,720
sort of privacy and and collision

195
00:05:52,720 --> 00:05:54,000
avoidance i think

196
00:05:54,000 --> 00:05:56,720
um but you know this seems to be the the

197
00:05:56,720 --> 00:05:58,400
most common approach now

198
00:05:58,400 --> 00:06:00,160
in the modern era but there are other

199
00:06:00,160 --> 00:06:01,919
approaches especially if you just look

200
00:06:01,919 --> 00:06:04,639
maybe one two years in the past um so

201
00:06:04,639 --> 00:06:06,560
here is daa119

202
00:06:06,560 --> 00:06:08,880
uh this is one example of what we call a

203
00:06:08,880 --> 00:06:11,360
prefix scheme where you fix a prefix

204
00:06:11,360 --> 00:06:14,319
uh which is some number of bits or bytes

205
00:06:14,319 --> 00:06:15,840
and then you randomize the rest

206
00:06:15,840 --> 00:06:18,639
and so we call this one daa119 because

207
00:06:18,639 --> 00:06:20,240
uh those are the bytes that are fixed

208
00:06:20,240 --> 00:06:22,720
the first three this is a google cid uh

209
00:06:22,720 --> 00:06:24,000
the remaining three are random in this

210
00:06:24,000 --> 00:06:24,639
scheme

211
00:06:24,639 --> 00:06:26,560
and this is android 629 so pretty much

212
00:06:26,560 --> 00:06:28,160
gone on android 10 you upgraded device

213
00:06:28,160 --> 00:06:29,919
to 10 and this will stop

214
00:06:29,919 --> 00:06:33,520
uh usually and many manufacturers use

215
00:06:33,520 --> 00:06:35,039
this so not just google

216
00:06:35,039 --> 00:06:36,880
uh phones but but phones from many

217
00:06:36,880 --> 00:06:38,400
manufacturers

218
00:06:38,400 --> 00:06:41,039
the second one we saw was 9268c3 which

219
00:06:41,039 --> 00:06:42,960
is the motorola nexus 6.

220
00:06:42,960 --> 00:06:44,800
uh we only saw one device do this it's

221
00:06:44,800 --> 00:06:46,560
the only one we ever saw do it

222
00:06:46,560 --> 00:06:48,319
but that's is another scheme that we saw

223
00:06:48,319 --> 00:06:50,000
in the wild um

224
00:06:50,000 --> 00:06:53,199
in our lab and the the next one we saw

225
00:06:53,199 --> 00:06:54,560
was much more common

226
00:06:54,560 --> 00:06:56,080
which was sort of a more generic

227
00:06:56,080 --> 00:06:58,080
motorola scheme actually this scheme is

228
00:06:58,080 --> 00:06:58,639
kind of

229
00:06:58,639 --> 00:07:00,800
sort of properly a class of schemes

230
00:07:00,800 --> 00:07:02,000
because uh the scheme

231
00:07:02,000 --> 00:07:05,039
says to take the

232
00:07:05,039 --> 00:07:06,560
hardware mac address of the motorola

233
00:07:06,560 --> 00:07:08,960
device and then that hardware mac

234
00:07:08,960 --> 00:07:10,800
address has an oui and that oui

235
00:07:10,800 --> 00:07:14,240
is the fixed prefix so it fixes the oui

236
00:07:14,240 --> 00:07:15,840
of the device that is sending these

237
00:07:15,840 --> 00:07:17,759
these messages and then randomizes the

238
00:07:17,759 --> 00:07:18,160
rest

239
00:07:18,160 --> 00:07:20,160
so you can actually sort of tell a

240
00:07:20,160 --> 00:07:22,000
couple of motorola devices apart maybe

241
00:07:22,000 --> 00:07:24,080
using this scheme because they have

242
00:07:24,080 --> 00:07:26,000
different uis

243
00:07:26,000 --> 00:07:27,759
and the next one we saw was new it was

244
00:07:27,759 --> 00:07:30,400
o2 so the o2 scheme just fixes that

245
00:07:30,400 --> 00:07:31,199
first byte

246
00:07:31,199 --> 00:07:33,440
and randomizes the rest and this was

247
00:07:33,440 --> 00:07:35,199
deployed on samsung

248
00:07:35,199 --> 00:07:37,919
um android devices seven through nine

249
00:07:37,919 --> 00:07:40,160
not all samsung devices but many of them

250
00:07:40,160 --> 00:07:42,000
on these operating systems do but if you

251
00:07:42,000 --> 00:07:43,520
take samsung device and you upgrade to

252
00:07:43,520 --> 00:07:45,199
android 10 start doing 46-bit

253
00:07:45,199 --> 00:07:46,720
randomization instead

254
00:07:46,720 --> 00:07:48,879
so it's sort of older samsung devices of

255
00:07:48,879 --> 00:07:50,240
a certain class

256
00:07:50,240 --> 00:07:52,400
which actually allows you to learn a lot

257
00:07:52,400 --> 00:07:53,680
about what kind of device

258
00:07:53,680 --> 00:07:56,000
is sending these these pro requests if

259
00:07:56,000 --> 00:07:58,319
you see this address

260
00:07:58,319 --> 00:08:00,240
and then we this is not really a

261
00:08:00,240 --> 00:08:02,000
randomization scheme proper but just for

262
00:08:02,000 --> 00:08:03,120
completeness we have the hardware

263
00:08:03,120 --> 00:08:03,680
address

264
00:08:03,680 --> 00:08:04,960
some devices just use their hardware

265
00:08:04,960 --> 00:08:06,800
address all the time and

266
00:08:06,800 --> 00:08:08,720
that's android 629 phased out in android

267
00:08:08,720 --> 00:08:10,319
10.

268
00:08:10,319 --> 00:08:12,240
and so not only is the bitwise structure

269
00:08:12,240 --> 00:08:14,160
of these addresses

270
00:08:14,160 --> 00:08:16,639
change from manufacturer to manufacturer

271
00:08:16,639 --> 00:08:18,240
and os to os

272
00:08:18,240 --> 00:08:21,280
we also saw that the time at which sort

273
00:08:21,280 --> 00:08:22,639
of the random address and the hardware

274
00:08:22,639 --> 00:08:24,319
address are used

275
00:08:24,319 --> 00:08:26,479
the consistency of the randomization is

276
00:08:26,479 --> 00:08:28,160
different sort of within a device

277
00:08:28,160 --> 00:08:29,680
based on the state and behavioral

278
00:08:29,680 --> 00:08:31,919
characteristics and also between devices

279
00:08:31,919 --> 00:08:35,279
so lots of variation um and some devices

280
00:08:35,279 --> 00:08:37,360
we notice will change their behavior

281
00:08:37,360 --> 00:08:39,200
uh between the active state and the idle

282
00:08:39,200 --> 00:08:40,719
state so uh those

283
00:08:40,719 --> 00:08:42,719
those tests that we did the action state

284
00:08:42,719 --> 00:08:43,760
in the idle state

285
00:08:43,760 --> 00:08:45,519
uh were something that we invented based

286
00:08:45,519 --> 00:08:47,120
on guesses because we suspected that

287
00:08:47,120 --> 00:08:48,240
this might be happening

288
00:08:48,240 --> 00:08:50,080
right the devices will actually change

289
00:08:50,080 --> 00:08:52,399
their rf emissions their wi-fi missions

290
00:08:52,399 --> 00:08:54,720
uh based on whether or not a user is

291
00:08:54,720 --> 00:08:55,440
touching them

292
00:08:55,440 --> 00:08:57,040
and that's true for some devices not all

293
00:08:57,040 --> 00:08:58,640
devices but some devices but they'll

294
00:08:58,640 --> 00:08:59,680
stop randomizing

295
00:08:59,680 --> 00:09:01,920
when they become activated when a user

296
00:09:01,920 --> 00:09:04,959
touches them or turns the screen on

297
00:09:04,959 --> 00:09:07,200
some devices will sort of send out their

298
00:09:07,200 --> 00:09:08,880
hardware address in between

299
00:09:08,880 --> 00:09:11,360
um random addresses and just sort of you

300
00:09:11,360 --> 00:09:11,920
know

301
00:09:11,920 --> 00:09:14,320
say usually be randomizing and then just

302
00:09:14,320 --> 00:09:15,760
decide to send the hardware address in

303
00:09:15,760 --> 00:09:16,720
between

304
00:09:16,720 --> 00:09:19,360
for whatever reason maybe for fun and

305
00:09:19,360 --> 00:09:20,240
then

306
00:09:20,240 --> 00:09:22,720
we also you know we had to classify

307
00:09:22,720 --> 00:09:23,760
these sort of

308
00:09:23,760 --> 00:09:25,839
strange behaviors and so we have sort of

309
00:09:25,839 --> 00:09:28,160
four broad classification bins that we

310
00:09:28,160 --> 00:09:28,800
invented

311
00:09:28,800 --> 00:09:30,399
uh the first one is always where devices

312
00:09:30,399 --> 00:09:31,680
consistently use their random address

313
00:09:31,680 --> 00:09:32,959
all the time

314
00:09:32,959 --> 00:09:35,040
second is idle where you have consistent

315
00:09:35,040 --> 00:09:36,240
random addresses

316
00:09:36,240 --> 00:09:37,839
um but only while the device is left

317
00:09:37,839 --> 00:09:39,760
alone so if you use it it will at least

318
00:09:39,760 --> 00:09:40,800
some of the time start using the

319
00:09:40,800 --> 00:09:41,760
hardware address

320
00:09:41,760 --> 00:09:43,279
and that at least it gives you gives you

321
00:09:43,279 --> 00:09:44,959
uh so sort of peace of mind

322
00:09:44,959 --> 00:09:46,399
if the device is stuck in your pocket

323
00:09:46,399 --> 00:09:48,240
and you don't use it that it's not sort

324
00:09:48,240 --> 00:09:50,240
of broadcasting a persistent permanent

325
00:09:50,240 --> 00:09:52,000
identifier

326
00:09:52,000 --> 00:09:54,480
and then we have mixed which is to say

327
00:09:54,480 --> 00:09:56,000
we couldn't really identify behavioral

328
00:09:56,000 --> 00:09:57,600
characteristics that would

329
00:09:57,600 --> 00:09:59,279
make these devices do whatever they did

330
00:09:59,279 --> 00:10:01,360
but this is rotation right so

331
00:10:01,360 --> 00:10:03,360
they both used random addresses and

332
00:10:03,360 --> 00:10:04,640
hardware addresses

333
00:10:04,640 --> 00:10:06,480
but not in any discernible sort of

334
00:10:06,480 --> 00:10:08,399
pattern often it would be

335
00:10:08,399 --> 00:10:10,240
sort of rotating back and forth between

336
00:10:10,240 --> 00:10:13,360
the two in a given state

337
00:10:13,360 --> 00:10:15,040
and then for never this is just devices

338
00:10:15,040 --> 00:10:16,480
that never use random addresses and

339
00:10:16,480 --> 00:10:17,680
always use the hardware address

340
00:10:17,680 --> 00:10:19,120
so those are our four bins kind of in

341
00:10:19,120 --> 00:10:21,839
descending order of privacy protections

342
00:10:21,839 --> 00:10:24,720
on the left here are our results we have

343
00:10:24,720 --> 00:10:25,920
randomization type

344
00:10:25,920 --> 00:10:27,040
which is whether or not the

345
00:10:27,040 --> 00:10:28,800
randomization is consistent on the right

346
00:10:28,800 --> 00:10:30,240
we have the scheme which is the bitwise

347
00:10:30,240 --> 00:10:30,880
structure

348
00:10:30,880 --> 00:10:32,320
so you can sort of see all some of these

349
00:10:32,320 --> 00:10:33,760
schemes only appear in certain by

350
00:10:33,760 --> 00:10:35,279
certain manufacturers

351
00:10:35,279 --> 00:10:37,279
daa19 is kind of spread around that's

352
00:10:37,279 --> 00:10:38,560
that dark green

353
00:10:38,560 --> 00:10:40,720
46 bit is the emerging consensus that's

354
00:10:40,720 --> 00:10:43,040
sort of concentrated on the top

355
00:10:43,040 --> 00:10:45,040
and always of course for apple devices

356
00:10:45,040 --> 00:10:46,399
and then the yellow is sort of starting

357
00:10:46,399 --> 00:10:47,200
to disappear

358
00:10:47,200 --> 00:10:49,440
um and so actually the yellow on the

359
00:10:49,440 --> 00:10:50,480
right and the l and the left are the

360
00:10:50,480 --> 00:10:50,959
same

361
00:10:50,959 --> 00:10:53,040
but the colors uh the other colors are

362
00:10:53,040 --> 00:10:54,160
representing different things on the

363
00:10:54,160 --> 00:10:55,279
left and right

364
00:10:55,279 --> 00:10:57,120
um and so you can actually see for

365
00:10:57,120 --> 00:10:58,880
example motorola is only the motorola

366
00:10:58,880 --> 00:10:59,200
and

367
00:10:59,200 --> 00:11:01,600
and the purple o2 is only in samsung on

368
00:11:01,600 --> 00:11:02,800
the left you can see

369
00:11:02,800 --> 00:11:04,800
the emerging uh sort of improvement

370
00:11:04,800 --> 00:11:06,240
towards always randomizing

371
00:11:06,240 --> 00:11:07,839
with a couple of stragglers maybe in

372
00:11:07,839 --> 00:11:10,640
2019 but if you go back to 2018 2017

373
00:11:10,640 --> 00:11:12,000
devices released then

374
00:11:12,000 --> 00:11:13,760
you see all sorts of sort of mixed weird

375
00:11:13,760 --> 00:11:15,519
behavior we're getting towards

376
00:11:15,519 --> 00:11:17,600
consistent randomization for all devices

377
00:11:17,600 --> 00:11:20,399
but not quite there yet maybe uh you

378
00:11:20,399 --> 00:11:20,800
know

379
00:11:20,800 --> 00:11:23,360
maybe now in 2021 so let's talk about

380
00:11:23,360 --> 00:11:24,880
some of the other features uh pro

381
00:11:24,880 --> 00:11:26,560
requests do not only include just a mac

382
00:11:26,560 --> 00:11:27,200
address

383
00:11:27,200 --> 00:11:28,880
they also include variety a variety of

384
00:11:28,880 --> 00:11:30,720
other features i can't talk about all of

385
00:11:30,720 --> 00:11:32,399
them uh but you can look at the the

386
00:11:32,399 --> 00:11:33,920
the ones that i'm missing in the paper

387
00:11:33,920 --> 00:11:35,120
uh if you're interested but i'll talk

388
00:11:35,120 --> 00:11:36,320
about some of them that are that are

389
00:11:36,320 --> 00:11:37,440
interesting and

390
00:11:37,440 --> 00:11:39,519
so sequence numbers are one they're

391
00:11:39,519 --> 00:11:42,240
included in all probe requests um they

392
00:11:42,240 --> 00:11:44,160
are integers and supposed to be between

393
00:11:44,160 --> 00:11:45,519
0 and 40 and 95

394
00:11:45,519 --> 00:11:46,959
but we notice that some devices actually

395
00:11:46,959 --> 00:11:48,959
stop at 2047 so they don't use that

396
00:11:48,959 --> 00:11:51,600
last bit and traditionally they've been

397
00:11:51,600 --> 00:11:52,959
sequential because they're sequence

398
00:11:52,959 --> 00:11:53,680
numbers so

399
00:11:53,680 --> 00:11:56,320
it's kind of in the name but to protect

400
00:11:56,320 --> 00:11:57,440
privacy they are now

401
00:11:57,440 --> 00:12:00,000
randomized in many devices and the issue

402
00:12:00,000 --> 00:12:00,959
here is that

403
00:12:00,959 --> 00:12:03,279
if you your device changes its random

404
00:12:03,279 --> 00:12:04,160
mac address

405
00:12:04,160 --> 00:12:06,160
to a new random mac address but the

406
00:12:06,160 --> 00:12:08,240
sequence numbers are consistently

407
00:12:08,240 --> 00:12:10,399
increasing then you can just trivially

408
00:12:10,399 --> 00:12:11,839
link the old mac address the new mac

409
00:12:11,839 --> 00:12:12,959
address has belonging to the same

410
00:12:12,959 --> 00:12:14,480
address uh it's the same

411
00:12:14,480 --> 00:12:17,360
device so if you have sort of uh eyes on

412
00:12:17,360 --> 00:12:18,959
a device and you're watching it you can

413
00:12:18,959 --> 00:12:19,839
you watch the

414
00:12:19,839 --> 00:12:21,440
changeover then you can just link the

415
00:12:21,440 --> 00:12:24,000
two trivially um so this is bad

416
00:12:24,000 --> 00:12:27,279
uh for location privacy and luckily as

417
00:12:27,279 --> 00:12:28,240
it turns out

418
00:12:28,240 --> 00:12:30,639
um it is no longer really an issue

419
00:12:30,639 --> 00:12:31,360
because

420
00:12:31,360 --> 00:12:34,560
manufacturers have fixed it it is gone

421
00:12:34,560 --> 00:12:35,920
uh one thing that's interesting to note

422
00:12:35,920 --> 00:12:38,000
here is these two graphs we like the top

423
00:12:38,000 --> 00:12:39,760
one better than the bottom one that's

424
00:12:39,760 --> 00:12:41,120
because the top one is hardware and the

425
00:12:41,120 --> 00:12:42,240
bottom one is software

426
00:12:42,240 --> 00:12:44,639
so that's indicating that um this

427
00:12:44,639 --> 00:12:45,440
problem

428
00:12:45,440 --> 00:12:47,680
uh cannot be fixed simply with an os

429
00:12:47,680 --> 00:12:49,200
update for a lot of these devices

430
00:12:49,200 --> 00:12:50,959
you need a more modern device that can

431
00:12:50,959 --> 00:12:52,480
do it

432
00:12:52,480 --> 00:12:55,600
the first one is rtscts rts cts

433
00:12:55,600 --> 00:12:57,920
is an attack that was discovered in 2017

434
00:12:57,920 --> 00:12:59,519
by our research group

435
00:12:59,519 --> 00:13:02,160
and in rts cts the premise of it is that

436
00:13:02,160 --> 00:13:03,120
devices

437
00:13:03,120 --> 00:13:04,560
even when they're sending sort of random

438
00:13:04,560 --> 00:13:06,320
probe requests if you

439
00:13:06,320 --> 00:13:07,920
send the message to their hardware

440
00:13:07,920 --> 00:13:10,240
address they'll still respond to their

441
00:13:10,240 --> 00:13:11,200
hardware address

442
00:13:11,200 --> 00:13:12,959
even though they're sending out random

443
00:13:12,959 --> 00:13:14,240
pro requests

444
00:13:14,240 --> 00:13:16,320
so that that frame that you send them is

445
00:13:16,320 --> 00:13:18,000
called an rts frame request to send

446
00:13:18,000 --> 00:13:20,320
it's a control frame so you can use this

447
00:13:20,320 --> 00:13:22,240
to sort of confirm or deny the presence

448
00:13:22,240 --> 00:13:23,120
of a device

449
00:13:23,120 --> 00:13:25,360
if you already know its hardware address

450
00:13:25,360 --> 00:13:27,440
um and so in 2017

451
00:13:27,440 --> 00:13:29,519
all tested devices were vulnerable so we

452
00:13:29,519 --> 00:13:30,880
wanted to know if it was fixed

453
00:13:30,880 --> 00:13:34,240
second attack that we looked at was 2016

454
00:13:34,240 --> 00:13:37,279
um and qp is the access network query

455
00:13:37,279 --> 00:13:39,360
protocol and it is designed to sort of

456
00:13:39,360 --> 00:13:41,760
allow devices to query access points and

457
00:13:41,760 --> 00:13:43,199
ask them questions about

458
00:13:43,199 --> 00:13:44,880
some services they have usually for sort

459
00:13:44,880 --> 00:13:46,880
of interworking or or offloading onto

460
00:13:46,880 --> 00:13:49,360
wi-fi or something like that

461
00:13:49,360 --> 00:13:50,880
and uh this can reveal the hardware

462
00:13:50,880 --> 00:13:52,480
address as it turns out um so let's see

463
00:13:52,480 --> 00:13:53,760
how that works

464
00:13:53,760 --> 00:13:55,680
uh a device is sending probe requests

465
00:13:55,680 --> 00:13:57,279
out with the random address

466
00:13:57,279 --> 00:13:59,519
um and then a access point uh comes

467
00:13:59,519 --> 00:14:00,480
along and

468
00:14:00,480 --> 00:14:01,839
sends out a beacon that says hey i

469
00:14:01,839 --> 00:14:04,160
support amqp and the device goes hey i

470
00:14:04,160 --> 00:14:05,760
love anqp

471
00:14:05,760 --> 00:14:07,839
so much that i will enter the action

472
00:14:07,839 --> 00:14:09,839
state right so any action state

473
00:14:09,839 --> 00:14:11,199
behaviors that we talked about like

474
00:14:11,199 --> 00:14:13,040
if some devices will start sending their

475
00:14:13,040 --> 00:14:14,320
hardware address and in their pro

476
00:14:14,320 --> 00:14:15,279
requests

477
00:14:15,279 --> 00:14:17,760
instead of the random address and what's

478
00:14:17,760 --> 00:14:19,120
supposed to happen now

479
00:14:19,120 --> 00:14:21,199
is the device should send an anqp

480
00:14:21,199 --> 00:14:23,279
request with a random address

481
00:14:23,279 --> 00:14:24,480
because it's sending pro requests with

482
00:14:24,480 --> 00:14:26,399
the random address

483
00:14:26,399 --> 00:14:28,560
but we noticed and you know has been

484
00:14:28,560 --> 00:14:29,680
noticed before

485
00:14:29,680 --> 00:14:32,079
uh that some devices uh will actually

486
00:14:32,079 --> 00:14:33,279
send the same qpp request with a

487
00:14:33,279 --> 00:14:34,399
hardware address

488
00:14:34,399 --> 00:14:36,880
um sort of defeating randomization and

489
00:14:36,880 --> 00:14:38,800
so we notice this this still happens

490
00:14:38,800 --> 00:14:41,680
um not on all devices but in some modern

491
00:14:41,680 --> 00:14:43,440
devices 2019 devices you know this is a

492
00:14:43,440 --> 00:14:44,320
hardware

493
00:14:44,320 --> 00:14:47,199
year on the y-axis here and a lot of

494
00:14:47,199 --> 00:14:48,880
these 2019 devices amqp

495
00:14:48,880 --> 00:14:50,079
still vulnerable depends on the

496
00:14:50,079 --> 00:14:52,800
manufacturer mostly and rts

497
00:14:52,800 --> 00:14:55,279
cts so vulnerable and some for some

498
00:14:55,279 --> 00:14:56,800
manufacturers as well

499
00:14:56,800 --> 00:14:58,240
so everything that i've talked about up

500
00:14:58,240 --> 00:15:00,079
to this point has been about what we

501
00:15:00,079 --> 00:15:00,800
call

502
00:15:00,800 --> 00:15:03,360
pre-association randomization but the

503
00:15:03,360 --> 00:15:05,120
moment your device sees an ssid

504
00:15:05,120 --> 00:15:07,600
it recognizes it will try to associate

505
00:15:07,600 --> 00:15:08,800
to that ssid

506
00:15:08,800 --> 00:15:12,480
um usually and the first attempt that it

507
00:15:12,480 --> 00:15:14,000
makes to associate that first frame that

508
00:15:14,000 --> 00:15:14,800
it sends

509
00:15:14,800 --> 00:15:17,360
does not use a random address because

510
00:15:17,360 --> 00:15:18,639
during the association process you have

511
00:15:18,639 --> 00:15:19,760
to have the same address

512
00:15:19,760 --> 00:15:22,399
so it uses traditionally it's used the

513
00:15:22,399 --> 00:15:23,760
device hardware address

514
00:15:23,760 --> 00:15:25,360
so your device can be sending random

515
00:15:25,360 --> 00:15:27,120
addresses and be very good at protecting

516
00:15:27,120 --> 00:15:27,839
your privacy

517
00:15:27,839 --> 00:15:30,079
but the moment it thinks it sees an ssid

518
00:15:30,079 --> 00:15:31,680
that you've connected to before

519
00:15:31,680 --> 00:15:33,040
then it's going to immediately just

520
00:15:33,040 --> 00:15:35,360
start sort of

521
00:15:35,360 --> 00:15:37,839
sending out your your hardware address

522
00:15:37,839 --> 00:15:38,560
and so that

523
00:15:38,560 --> 00:15:41,040
is what we call post-association and

524
00:15:41,040 --> 00:15:43,040
until i was 14 and android 10 which are

525
00:15:43,040 --> 00:15:44,160
reasonably recent

526
00:15:44,160 --> 00:15:47,759
sort of last year all devices

527
00:15:47,759 --> 00:15:50,959
used their hardware address when they

528
00:15:50,959 --> 00:15:52,480
when they associated when they tried to

529
00:15:52,480 --> 00:15:54,000
associate

530
00:15:54,000 --> 00:15:56,320
and so that's no longer the case in

531
00:15:56,320 --> 00:15:58,000
these modern operating systems so let's

532
00:15:58,000 --> 00:15:59,199
talk about that

533
00:15:59,199 --> 00:16:01,279
these devices implement what's called

534
00:16:01,279 --> 00:16:02,480
connection specific

535
00:16:02,480 --> 00:16:05,360
strategy so what they do is when they go

536
00:16:05,360 --> 00:16:06,560
to a particular

537
00:16:06,560 --> 00:16:08,959
saved connection on the device that

538
00:16:08,959 --> 00:16:10,720
connection has a mac address associated

539
00:16:10,720 --> 00:16:11,279
with it

540
00:16:11,279 --> 00:16:12,800
and when you go to connect to that

541
00:16:12,800 --> 00:16:14,800
particular one you you keep that mac

542
00:16:14,800 --> 00:16:16,399
address

543
00:16:16,399 --> 00:16:18,639
and then new ssid i make a new

544
00:16:18,639 --> 00:16:19,759
connection to an

545
00:16:19,759 --> 00:16:21,600
access point a new address so the idea

546
00:16:21,600 --> 00:16:23,440
is i'll have a specific mac address

547
00:16:23,440 --> 00:16:25,839
that's persistent for my home but when i

548
00:16:25,839 --> 00:16:27,279
go to the cafe i have a different mac

549
00:16:27,279 --> 00:16:27,920
address

550
00:16:27,920 --> 00:16:29,360
so while you'll be able to tell that i'm

551
00:16:29,360 --> 00:16:31,120
at home you won't be able to tell that

552
00:16:31,120 --> 00:16:32,720
it's the same device at home and at the

553
00:16:32,720 --> 00:16:33,440
cafe

554
00:16:33,440 --> 00:16:34,639
because the mac addresses are different

555
00:16:34,639 --> 00:16:36,560
from each other

556
00:16:36,560 --> 00:16:38,880
so uh this presents some vulnerabilities

557
00:16:38,880 --> 00:16:40,800
uh adversaries can still track devices

558
00:16:40,800 --> 00:16:42,399
that return to the same location

559
00:16:42,399 --> 00:16:44,000
and we always human beings return to the

560
00:16:44,000 --> 00:16:45,839
same location quite a bit

561
00:16:45,839 --> 00:16:48,480
and it also doesn't really help with uh

562
00:16:48,480 --> 00:16:50,480
big networks so like eduroam or

563
00:16:50,480 --> 00:16:52,399
municipal wi-fi networks you can follow

564
00:16:52,399 --> 00:16:54,320
somebody around a big network if they're

565
00:16:54,320 --> 00:16:56,399
constantly associated to the same access

566
00:16:56,399 --> 00:16:57,440
same connection

567
00:16:57,440 --> 00:16:59,120
and finally you can also just fake one

568
00:16:59,120 --> 00:17:00,560
of these so if you know

569
00:17:00,560 --> 00:17:03,120
a device has a particular ssid loaded

570
00:17:03,120 --> 00:17:04,559
and you know that connection specific

571
00:17:04,559 --> 00:17:05,520
address

572
00:17:05,520 --> 00:17:07,599
then you can just sort of pretend to be

573
00:17:07,599 --> 00:17:09,199
that connection the device will try to

574
00:17:09,199 --> 00:17:10,319
associate with you

575
00:17:10,319 --> 00:17:11,679
you'll still get the device's connection

576
00:17:11,679 --> 00:17:13,439
persistent address because the first

577
00:17:13,439 --> 00:17:15,280
attempt that it sends

578
00:17:15,280 --> 00:17:17,119
will give you the connection specific

579
00:17:17,119 --> 00:17:18,480
address

580
00:17:18,480 --> 00:17:20,799
so let's look at the uh the summary here

581
00:17:20,799 --> 00:17:22,000
so all of these

582
00:17:22,000 --> 00:17:23,439
are the modern devices that we looked at

583
00:17:23,439 --> 00:17:25,839
so they were released 2018 or later and

584
00:17:25,839 --> 00:17:27,280
their operating system

585
00:17:27,280 --> 00:17:29,600
was released in 2018 or later and you

586
00:17:29,600 --> 00:17:32,080
can see some pretty clear trends

587
00:17:32,080 --> 00:17:34,320
random addresses in probe requests are

588
00:17:34,320 --> 00:17:35,840
pretty much consistent

589
00:17:35,840 --> 00:17:38,720
except for that one little outlier there

590
00:17:38,720 --> 00:17:40,080
a generic signature which i didn't

591
00:17:40,080 --> 00:17:41,520
really get a chance to talk about but it

592
00:17:41,520 --> 00:17:43,280
is a

593
00:17:43,280 --> 00:17:44,640
it is a characterization of the

594
00:17:44,640 --> 00:17:46,320
information elements associated with the

595
00:17:46,320 --> 00:17:47,200
probe request

596
00:17:47,200 --> 00:17:49,039
that sort of tell a access point's

597
00:17:49,039 --> 00:17:50,799
information about the querying device

598
00:17:50,799 --> 00:17:52,640
and will allow you to sort of bin a

599
00:17:52,640 --> 00:17:54,400
device and say well this pro request

600
00:17:54,400 --> 00:17:55,919
came from an iphone 7 or something like

601
00:17:55,919 --> 00:17:58,000
that

602
00:17:58,000 --> 00:18:00,080
mostly no devices protect against this

603
00:18:00,080 --> 00:18:02,960
they don't protect privacy in this way

604
00:18:02,960 --> 00:18:04,160
though there have been some attempts and

605
00:18:04,160 --> 00:18:06,160
that's discussed in the paper most

606
00:18:06,160 --> 00:18:07,919
devices have a random sequence number

607
00:18:07,919 --> 00:18:09,039
now

608
00:18:09,039 --> 00:18:11,600
anqp and rts these active attacks are a

609
00:18:11,600 --> 00:18:12,880
bit of a mixed bag

610
00:18:12,880 --> 00:18:14,559
some device is still vulnerable some not

611
00:18:14,559 --> 00:18:16,880
depends on the manufacturer

612
00:18:16,880 --> 00:18:19,360
and there's been marked improvement and

613
00:18:19,360 --> 00:18:21,280
post association is almost entirely

614
00:18:21,280 --> 00:18:23,120
based on operating system so if you have

615
00:18:23,120 --> 00:18:25,760
a device that's android 10 you have an

616
00:18:25,760 --> 00:18:28,080
ios 14 or higher device it's going to be

617
00:18:28,080 --> 00:18:30,480
doing post association almost certainly

618
00:18:30,480 --> 00:18:32,640
and then if you don't then it won't with

619
00:18:32,640 --> 00:18:35,679
that i will thank you for listening to

620
00:18:35,679 --> 00:18:37,760
this presentation and ask if you have

621
00:18:37,760 --> 00:18:41,280
any questions

