1
00:00:01,599 --> 00:00:03,439
hello everyone my name is ano maria

2
00:00:03,439 --> 00:00:05,440
mandalari and i'm a research associated

3
00:00:05,440 --> 00:00:07,200
imperial college london

4
00:00:07,200 --> 00:00:09,120
i'm now presenting a joint work with

5
00:00:09,120 --> 00:00:11,360
northeastern university which focuses on

6
00:00:11,360 --> 00:00:13,840
identifying and mitigating non-essential

7
00:00:13,840 --> 00:00:16,239
iot traffic

8
00:00:16,239 --> 00:00:18,560
we know that any object nowadays can be

9
00:00:18,560 --> 00:00:19,840
connected to the internet

10
00:00:19,840 --> 00:00:22,480
from smart speakers to cameras even your

11
00:00:22,480 --> 00:00:23,039
fridge

12
00:00:23,039 --> 00:00:25,279
can be connected to the internet and we

13
00:00:25,279 --> 00:00:27,840
call this internet of things devices and

14
00:00:27,840 --> 00:00:30,320
they are great we can ask them to

15
00:00:30,320 --> 00:00:33,360
shop for us they play music for us

16
00:00:33,360 --> 00:00:35,200
while these devices often come with

17
00:00:35,200 --> 00:00:37,120
convenient services

18
00:00:37,120 --> 00:00:39,440
they open the door to numerous privacy

19
00:00:39,440 --> 00:00:40,800
and security risks

20
00:00:40,800 --> 00:00:43,440
these devices often expose information

21
00:00:43,440 --> 00:00:44,000
to a large

22
00:00:44,000 --> 00:00:46,000
number of destinations including third

23
00:00:46,000 --> 00:00:48,079
parties advertising and tracking

24
00:00:48,079 --> 00:00:50,079
services

25
00:00:50,079 --> 00:00:52,320
one of the critical steps that will

26
00:00:52,320 --> 00:00:53,360
enable

27
00:00:53,360 --> 00:00:55,680
transparency and privacy by default is

28
00:00:55,680 --> 00:00:58,640
solution edge

29
00:00:58,640 --> 00:01:00,879
we need an automated framework for

30
00:01:00,879 --> 00:01:03,039
detecting and isolating non-critical

31
00:01:03,039 --> 00:01:04,879
communication from iot devices that

32
00:01:04,879 --> 00:01:06,240
automatically blocks

33
00:01:06,240 --> 00:01:08,159
any connections that are non-essential

34
00:01:08,159 --> 00:01:10,000
for the functionality

35
00:01:10,000 --> 00:01:12,400
for this approach to work we need a

36
00:01:12,400 --> 00:01:14,640
systematic approach to identify and

37
00:01:14,640 --> 00:01:16,640
block traffic it is not essential for a

38
00:01:16,640 --> 00:01:17,840
device to work

39
00:01:17,840 --> 00:01:21,680
with a little to no user configuration

40
00:01:21,680 --> 00:01:24,479
since the iot devices can potentially

41
00:01:24,479 --> 00:01:26,000
expose information about

42
00:01:26,000 --> 00:01:28,720
its users to any destination since most

43
00:01:28,720 --> 00:01:30,880
iot traffic is encrypted

44
00:01:30,880 --> 00:01:34,799
or encoded and the vast majority of iot

45
00:01:34,799 --> 00:01:36,560
systems are close

46
00:01:36,560 --> 00:01:39,600
it is infeasible to perfectly infer what

47
00:01:39,600 --> 00:01:41,840
information is exposed through network

48
00:01:41,840 --> 00:01:45,920
connection using black box techniques

49
00:01:45,920 --> 00:01:48,640
so from our previous work we learned

50
00:01:48,640 --> 00:01:50,320
that some traffic is essential

51
00:01:50,320 --> 00:01:52,840
some it's not essential so we had an

52
00:01:52,840 --> 00:01:54,560
idea

53
00:01:54,560 --> 00:01:57,040
maybe we can block some non-essential

54
00:01:57,040 --> 00:01:59,119
communication and still be able

55
00:01:59,119 --> 00:02:02,799
to use the device we have three main

56
00:02:02,799 --> 00:02:05,280
goals here the first one is to develop a

57
00:02:05,280 --> 00:02:06,240
methodology for

58
00:02:06,240 --> 00:02:08,479
automatically identify non-essential iot

59
00:02:08,479 --> 00:02:10,399
traffic and we in this case we seek to

60
00:02:10,399 --> 00:02:12,160
understand which destinations are not

61
00:02:12,160 --> 00:02:14,160
required for device functionality so

62
00:02:14,160 --> 00:02:15,200
that we can

63
00:02:15,200 --> 00:02:16,959
block them to mitigate their potential

64
00:02:16,959 --> 00:02:19,440
risk and to address this we propose a

65
00:02:19,440 --> 00:02:21,760
methodology for automatically detecting

66
00:02:21,760 --> 00:02:23,680
whether a natural traffic destination is

67
00:02:23,680 --> 00:02:24,800
required

68
00:02:24,800 --> 00:02:28,640
or not for a given functionality

69
00:02:28,640 --> 00:02:30,560
secondly we want to understand what is

70
00:02:30,560 --> 00:02:32,879
the nature of the non-essential iot

71
00:02:32,879 --> 00:02:33,519
traffic

72
00:02:33,519 --> 00:02:35,440
with so harmed with the measurement's

73
00:02:35,440 --> 00:02:37,200
methodology to detect non-essential

74
00:02:37,200 --> 00:02:38,560
traffic

75
00:02:38,560 --> 00:02:41,040
we apply it to identify and study

76
00:02:41,040 --> 00:02:43,280
non-essential traffic produced by our

77
00:02:43,280 --> 00:02:45,519
set of popular iot devices

78
00:02:45,519 --> 00:02:47,920
as part of this research question we are

79
00:02:47,920 --> 00:02:50,080
interested in the type of destinations

80
00:02:50,080 --> 00:02:51,440
conducted

81
00:02:51,440 --> 00:02:53,680
and finally we want to understand how we

82
00:02:53,680 --> 00:02:54,560
can

83
00:02:54,560 --> 00:02:57,120
mitigate non-essential iot traffic the

84
00:02:57,120 --> 00:02:57,920
knowledge

85
00:02:57,920 --> 00:03:00,720
of what destinations can be blocked for

86
00:03:00,720 --> 00:03:02,080
every devices

87
00:03:02,080 --> 00:03:05,200
allows us to make automatic runtime

88
00:03:05,200 --> 00:03:07,599
decisions on what traffic to allow or

89
00:03:07,599 --> 00:03:07,920
not

90
00:03:07,920 --> 00:03:11,519
in a typical iot deployment as any other

91
00:03:11,519 --> 00:03:12,640
research idea that we

92
00:03:12,640 --> 00:03:14,239
had until now there are various

93
00:03:14,239 --> 00:03:16,879
challenges that we need to be addressed

94
00:03:16,879 --> 00:03:21,040
and the main challenge is automation

95
00:03:21,040 --> 00:03:23,200
iot devices are very hard to test

96
00:03:23,200 --> 00:03:24,560
automatically they offer

97
00:03:24,560 --> 00:03:26,480
very different functionalities they

98
00:03:26,480 --> 00:03:29,120
suffer in our experiences from frequent

99
00:03:29,120 --> 00:03:30,080
blackout

100
00:03:30,080 --> 00:03:33,200
that must be detected and they typically

101
00:03:33,200 --> 00:03:35,519
require user interaction so they are not

102
00:03:35,519 --> 00:03:37,440
directly programmable

103
00:03:37,440 --> 00:03:39,840
it's very hard to verify if a

104
00:03:39,840 --> 00:03:41,440
functionality was actually

105
00:03:41,440 --> 00:03:44,720
executed or not but we had some ideas

106
00:03:44,720 --> 00:03:47,360
we can use companion devices of phones

107
00:03:47,360 --> 00:03:49,200
and voice assistants and we can use

108
00:03:49,200 --> 00:03:51,200
natural traffic patterns to classify

109
00:03:51,200 --> 00:03:54,799
iot devices response we consider

110
00:03:54,799 --> 00:03:58,400
iot devices as a black box so we have no

111
00:03:58,400 --> 00:03:59,519
control over

112
00:03:59,519 --> 00:04:03,760
how an iot device works internally

113
00:04:03,760 --> 00:04:05,840
we do not look at the content of iot

114
00:04:05,840 --> 00:04:07,920
communication which is mostly encrypted

115
00:04:07,920 --> 00:04:09,200
so no content

116
00:04:09,200 --> 00:04:12,720
interception and inference we do not

117
00:04:12,720 --> 00:04:13,519
test

118
00:04:13,519 --> 00:04:15,920
all the function we consider the most

119
00:04:15,920 --> 00:04:17,440
characterizing

120
00:04:17,440 --> 00:04:20,560
one depending on the device category and

121
00:04:20,560 --> 00:04:24,560
it must be initiated by the user

122
00:04:24,560 --> 00:04:26,479
so we develop a measurement methodology

123
00:04:26,479 --> 00:04:29,120
and we consider 31 devices in total and

124
00:04:29,120 --> 00:04:31,600
we have a router with ip filtering dns

125
00:04:31,600 --> 00:04:33,120
filtering capabilities

126
00:04:33,120 --> 00:04:36,000
we have power plugs and scripts to power

127
00:04:36,000 --> 00:04:38,560
cycle the devices with trigger script to

128
00:04:38,560 --> 00:04:40,960
invoke iot devices functionality

129
00:04:40,960 --> 00:04:43,040
we have companion app interaction and

130
00:04:43,040 --> 00:04:44,960
voice assistant interaction

131
00:04:44,960 --> 00:04:48,400
and we have prop script how did we use

132
00:04:48,400 --> 00:04:50,639
the taskbar and devices for doing the

133
00:04:50,639 --> 00:04:51,600
experiments

134
00:04:51,600 --> 00:04:55,040
we have control experiments in which we

135
00:04:55,040 --> 00:04:56,400
automate the interaction with the

136
00:04:56,400 --> 00:04:58,400
devices using a companion app

137
00:04:58,400 --> 00:05:01,039
or we use speakers for automatically

138
00:05:01,039 --> 00:05:02,320
asking questions

139
00:05:02,320 --> 00:05:06,240
to the device for each device and

140
00:05:06,240 --> 00:05:08,479
functionality we identify a trigger and

141
00:05:08,479 --> 00:05:10,400
a probe the trigger is created for

142
00:05:10,400 --> 00:05:12,160
execute the functionality that can be

143
00:05:12,160 --> 00:05:14,000
switching on the light for example and

144
00:05:14,000 --> 00:05:15,759
the probe for determining if the

145
00:05:15,759 --> 00:05:17,840
functionality was executed

146
00:05:17,840 --> 00:05:19,840
for example for the smart valve the

147
00:05:19,840 --> 00:05:21,600
trigger is switching on the light

148
00:05:21,600 --> 00:05:23,680
through the companion up and the problem

149
00:05:23,680 --> 00:05:25,680
is compared the screenshot of the app

150
00:05:25,680 --> 00:05:26,479
while i'm

151
00:05:26,479 --> 00:05:28,479
executing the trigger with the ground

152
00:05:28,479 --> 00:05:31,199
truth scription switching on the light

153
00:05:31,199 --> 00:05:34,240
we tested the probe 30 times against the

154
00:05:34,240 --> 00:05:36,639
ground route and we got an accuracy of

155
00:05:36,639 --> 00:05:38,479
at least 80 percent that's with the

156
00:05:38,479 --> 00:05:39,919
majority of the devices having an

157
00:05:39,919 --> 00:05:43,360
occurrence of 100 percentage

158
00:05:43,360 --> 00:05:45,840
we then need to identify the

159
00:05:45,840 --> 00:05:47,840
non-essential traffic so we collect all

160
00:05:47,840 --> 00:05:49,840
the destinations and block them

161
00:05:49,840 --> 00:05:53,120
one by one if the functionality succeeds

162
00:05:53,120 --> 00:05:54,639
when a destination is blocked

163
00:05:54,639 --> 00:05:56,960
satisfaction is no required

164
00:05:56,960 --> 00:06:01,440
otherwise we classify it as required

165
00:06:01,440 --> 00:06:03,520
we set up the experiments testing as

166
00:06:03,520 --> 00:06:05,759
much as function as possible per device

167
00:06:05,759 --> 00:06:06,960
and category

168
00:06:06,960 --> 00:06:09,520
for each of them triggering and probing

169
00:06:09,520 --> 00:06:11,600
strategies

170
00:06:11,600 --> 00:06:14,960
was used improp success rate evaluation

171
00:06:14,960 --> 00:06:17,199
in three different points on time may

172
00:06:17,199 --> 00:06:19,440
july and october 2020

173
00:06:19,440 --> 00:06:22,639
so we take a simple screenshot of the

174
00:06:22,639 --> 00:06:24,880
app for each device for the desired

175
00:06:24,880 --> 00:06:26,880
state during a preliminary manually

176
00:06:26,880 --> 00:06:28,720
executed experiments and then using the

177
00:06:28,720 --> 00:06:29,759
similarity to such

178
00:06:29,759 --> 00:06:33,520
screenshots to then infer the state of

179
00:06:33,520 --> 00:06:34,720
the devices

180
00:06:34,720 --> 00:06:36,720
we also use traffic analysis for

181
00:06:36,720 --> 00:06:38,400
understanding when a televisions or a

182
00:06:38,400 --> 00:06:39,759
smart speaker devices

183
00:06:39,759 --> 00:06:43,840
activate thus probing our function

184
00:06:43,840 --> 00:06:47,600
we found that more than 50 percentage

185
00:06:47,600 --> 00:06:50,400
of devices have non-essential traffic

186
00:06:50,400 --> 00:06:51,520
mostly cameras

187
00:06:51,520 --> 00:06:53,520
smart speakers and videos so devices

188
00:06:53,520 --> 00:06:55,680
that are streaming content

189
00:06:55,680 --> 00:06:58,080
there are some possible explanations for

190
00:06:58,080 --> 00:06:59,360
this first of all

191
00:06:59,360 --> 00:07:02,160
complexities so skills and apps in the

192
00:07:02,160 --> 00:07:04,080
case of these

193
00:07:04,080 --> 00:07:06,960
devices that are giving us content or

194
00:07:06,960 --> 00:07:07,599
for example

195
00:07:07,599 --> 00:07:10,000
uncommon vendors or rebranding in the

196
00:07:10,000 --> 00:07:12,319
case of cameras

197
00:07:12,319 --> 00:07:15,680
the number of no required designation is

198
00:07:15,680 --> 00:07:19,759
62 against 57 destinations marked as

199
00:07:19,759 --> 00:07:20,560
required

200
00:07:20,560 --> 00:07:22,720
no required destinations are contacted

201
00:07:22,720 --> 00:07:24,639
the most by camera speakers and video

202
00:07:24,639 --> 00:07:25,520
devices but

203
00:07:25,520 --> 00:07:28,880
it also happens on simple

204
00:07:28,880 --> 00:07:32,000
simple devices such as the tp-link smart

205
00:07:32,000 --> 00:07:37,039
plug and smart bulb for example

206
00:07:37,199 --> 00:07:40,160
third parties are always not required

207
00:07:40,160 --> 00:07:41,280
probably because of

208
00:07:41,280 --> 00:07:44,400
background up activity in the case of

209
00:07:44,400 --> 00:07:46,800
the video streaming devices netflix so

210
00:07:46,800 --> 00:07:47,280
some

211
00:07:47,280 --> 00:07:49,840
first support parties are also not

212
00:07:49,840 --> 00:07:50,879
required

213
00:07:50,879 --> 00:07:53,599
unfortunately we cannot know why some

214
00:07:53,599 --> 00:07:55,199
first party are not required because the

215
00:07:55,199 --> 00:07:57,520
majority of the trophy is encrypted

216
00:07:57,520 --> 00:07:59,199
the best guess is that those

217
00:07:59,199 --> 00:08:01,599
destinations are used for farmer upgrade

218
00:08:01,599 --> 00:08:02,639
or maintenance

219
00:08:02,639 --> 00:08:05,120
the worst guess is that those

220
00:08:05,120 --> 00:08:06,800
destinations are used for data

221
00:08:06,800 --> 00:08:09,199
collection

222
00:08:09,199 --> 00:08:12,160
there is a good news on all these

223
00:08:12,160 --> 00:08:14,240
non-essential traffic is relatively

224
00:08:14,240 --> 00:08:16,720
small so less than one kilobytes per

225
00:08:16,720 --> 00:08:18,240
devices

226
00:08:18,240 --> 00:08:21,680
however it's still possible to transmit

227
00:08:21,680 --> 00:08:24,080
with this few kilobytes the presence of

228
00:08:24,080 --> 00:08:24,960
the devices

229
00:08:24,960 --> 00:08:27,680
is status basic data from the sensor for

230
00:08:27,680 --> 00:08:30,800
example open close

231
00:08:30,800 --> 00:08:35,839
door some motion some alarm

232
00:08:35,839 --> 00:08:38,320
in this analysis we check whether any

233
00:08:38,320 --> 00:08:40,159
destinations that are not required

234
00:08:40,159 --> 00:08:42,240
for a devices are required for another

235
00:08:42,240 --> 00:08:44,720
devices and we define this destination

236
00:08:44,720 --> 00:08:45,200
as

237
00:08:45,200 --> 00:08:48,000
device dependent so knowing if there are

238
00:08:48,000 --> 00:08:49,839
any destinations that are device

239
00:08:49,839 --> 00:08:50,880
dependent

240
00:08:50,880 --> 00:08:53,680
is important since their existence means

241
00:08:53,680 --> 00:08:55,680
that the blocking approach

242
00:08:55,680 --> 00:08:57,920
to prevent non-essential traffic can

243
00:08:57,920 --> 00:08:58,720
rely

244
00:08:58,720 --> 00:09:01,200
only on a flat list of destinations

245
00:09:01,200 --> 00:09:03,839
rather blocking of destinations might be

246
00:09:03,839 --> 00:09:07,040
it must be a device specific for at

247
00:09:07,040 --> 00:09:07,360
least

248
00:09:07,360 --> 00:09:12,160
some devices so we found that um

249
00:09:12,160 --> 00:09:13,920
two destinations are not required for

250
00:09:13,920 --> 00:09:15,440
some devices but

251
00:09:15,440 --> 00:09:19,360
required for others even for devices

252
00:09:19,360 --> 00:09:22,560
from the same manufacturer

253
00:09:22,560 --> 00:09:25,839
we then investigate whether

254
00:09:25,839 --> 00:09:28,959
second level domains are enough for

255
00:09:28,959 --> 00:09:31,680
identifying not required destinations

256
00:09:31,680 --> 00:09:34,240
the figures show the list of second

257
00:09:34,240 --> 00:09:36,320
level domains that are simultaneously

258
00:09:36,320 --> 00:09:37,120
required and

259
00:09:37,120 --> 00:09:39,120
required and the list of devices

260
00:09:39,120 --> 00:09:40,160
contacting them

261
00:09:40,160 --> 00:09:42,959
as required and not required on the

262
00:09:42,959 --> 00:09:43,279
right

263
00:09:43,279 --> 00:09:46,640
four to half devices contacting the 11

264
00:09:46,640 --> 00:09:48,399
second event domains in the figure

265
00:09:48,399 --> 00:09:50,320
in the figure sudden level domains are

266
00:09:50,320 --> 00:09:51,600
not specific enough

267
00:09:51,600 --> 00:09:53,760
since both and special and non-essential

268
00:09:53,760 --> 00:09:55,440
traffic use the same second level

269
00:09:55,440 --> 00:09:56,320
domains

270
00:09:56,320 --> 00:09:58,480
the main takeaway here is that while

271
00:09:58,480 --> 00:10:00,399
this simplification of using second

272
00:10:00,399 --> 00:10:02,240
level domains is effective for

273
00:10:02,240 --> 00:10:04,240
identifying non-essential traffic for

274
00:10:04,240 --> 00:10:07,120
the majority of the devices we tested

275
00:10:07,120 --> 00:10:10,880
it will lead to some mislabeling

276
00:10:10,880 --> 00:10:15,519
traffic for a significant function of

277
00:10:16,839 --> 00:10:18,160
devices

278
00:10:18,160 --> 00:10:20,640
experiments demonstrate the devices from

279
00:10:20,640 --> 00:10:22,079
the same vendors

280
00:10:22,079 --> 00:10:25,360
tend to behave similarly probably

281
00:10:25,360 --> 00:10:29,440
due to sharing some code among them

282
00:10:29,440 --> 00:10:31,200
and integrating them in the same iot

283
00:10:31,200 --> 00:10:32,480
ecosystem

284
00:10:32,480 --> 00:10:34,959
this enables the extension of a blocking

285
00:10:34,959 --> 00:10:37,440
approach based on our destination

286
00:10:37,440 --> 00:10:39,920
list to order future devices from the

287
00:10:39,920 --> 00:10:41,680
same manufacturers

288
00:10:41,680 --> 00:10:43,519
our analysis does not show notable

289
00:10:43,519 --> 00:10:45,200
situations in which devices from

290
00:10:45,200 --> 00:10:46,880
different vendors contact the same no

291
00:10:46,880 --> 00:10:49,200
required destinations upset for the case

292
00:10:49,200 --> 00:10:51,120
of devices in the video category where

293
00:10:51,120 --> 00:10:51,600
both

294
00:10:51,600 --> 00:10:53,440
devices show up netflix video

295
00:10:53,440 --> 00:10:57,200
recommendation in their menu screen

296
00:10:57,360 --> 00:10:59,519
as you know there are already some ad

297
00:10:59,519 --> 00:11:00,800
blocking lists

298
00:11:00,800 --> 00:11:04,079
available but existing approach like

299
00:11:04,079 --> 00:11:08,399
piehole and others block destinations

300
00:11:08,399 --> 00:11:10,959
are mostly used for various web trackers

301
00:11:10,959 --> 00:11:12,959
that's missing no required designations

302
00:11:12,959 --> 00:11:15,440
specifically for consumer iot devices

303
00:11:15,440 --> 00:11:17,120
so we compare our non-required

304
00:11:17,120 --> 00:11:19,600
destinations with piehole firebog

305
00:11:19,600 --> 00:11:22,640
model board sofa list and

306
00:11:22,640 --> 00:11:26,000
up to only six of

307
00:11:26,000 --> 00:11:28,959
out of 62 non-required destinations are

308
00:11:28,959 --> 00:11:31,279
in existing block lists so public block

309
00:11:31,279 --> 00:11:32,079
lists are of

310
00:11:32,079 --> 00:11:34,399
limited help in blocking iot on

311
00:11:34,399 --> 00:11:35,839
essential traffic

312
00:11:35,839 --> 00:11:37,920
we determine whether the ip protocol

313
00:11:37,920 --> 00:11:39,600
import are alone

314
00:11:39,600 --> 00:11:41,279
enough to detect the traffic to no

315
00:11:41,279 --> 00:11:42,880
required destinations

316
00:11:42,880 --> 00:11:45,040
the answer is generally no we found that

317
00:11:45,040 --> 00:11:46,640
most non-required destinations

318
00:11:46,640 --> 00:11:48,000
constantly use

319
00:11:48,000 --> 00:11:50,800
https with just the following exceptions

320
00:11:50,800 --> 00:11:52,880
to domains using http

321
00:11:52,880 --> 00:11:56,320
destinations do not change over time so

322
00:11:56,320 --> 00:11:59,279
at least in our six months of

323
00:11:59,279 --> 00:12:00,880
experiments

324
00:12:00,880 --> 00:12:03,519
to mitigate non-essential iot traffic we

325
00:12:03,519 --> 00:12:04,959
propose some blocking

326
00:12:04,959 --> 00:12:08,000
strategies blocking no required

327
00:12:08,000 --> 00:12:10,079
destinations and allowing

328
00:12:10,079 --> 00:12:11,920
the rest of the traffic this strategy

329
00:12:11,920 --> 00:12:13,839
only works under the assumption that no

330
00:12:13,839 --> 00:12:15,839
recorded destinations are stable

331
00:12:15,839 --> 00:12:18,560
so they do not change over time and then

332
00:12:18,560 --> 00:12:20,959
we have the allowing listing

333
00:12:20,959 --> 00:12:24,880
so allowing required destinations and

334
00:12:24,880 --> 00:12:26,560
blocking the rest

335
00:12:26,560 --> 00:12:28,560
the assumption of this strategy is still

336
00:12:28,560 --> 00:12:30,160
that the required destination do not

337
00:12:30,160 --> 00:12:31,040
change over time

338
00:12:31,040 --> 00:12:33,600
we also verify this assumption on the

339
00:12:33,600 --> 00:12:35,920
same three sets of experiments over six

340
00:12:35,920 --> 00:12:36,800
months

341
00:12:36,800 --> 00:12:39,120
noticing that required destinations also

342
00:12:39,120 --> 00:12:41,040
do not change

343
00:12:41,040 --> 00:12:44,720
we believe that for the typical home iot

344
00:12:44,720 --> 00:12:47,200
environment a deny listing strategy may

345
00:12:47,200 --> 00:12:48,880
be more appropriate since maintaining

346
00:12:48,880 --> 00:12:50,079
the functionality is

347
00:12:50,079 --> 00:12:53,600
high priority and in this case

348
00:12:53,600 --> 00:12:56,480
we propose iotrima that is an iot

349
00:12:56,480 --> 00:12:58,399
blocking systems composed

350
00:12:58,399 --> 00:13:01,680
of device acting as a router this can be

351
00:13:01,680 --> 00:13:03,440
any computing devices such as a

352
00:13:03,440 --> 00:13:04,399
raspberry pi

353
00:13:04,399 --> 00:13:06,480
or an arc with at least two network

354
00:13:06,480 --> 00:13:08,160
enterprises

355
00:13:08,160 --> 00:13:11,600
um we have this national list

356
00:13:11,600 --> 00:13:14,000
so the list of non-required destinations

357
00:13:14,000 --> 00:13:15,920
that we call iu trim list and we

358
00:13:15,920 --> 00:13:16,639
anticipate

359
00:13:16,639 --> 00:13:18,959
the destination list will be maintaining

360
00:13:18,959 --> 00:13:20,079
the option

361
00:13:20,079 --> 00:13:22,639
like resourcing or by organizations that

362
00:13:22,639 --> 00:13:23,839
are willing to adopt

363
00:13:23,839 --> 00:13:25,680
our required and unrequited destinations

364
00:13:25,680 --> 00:13:27,120
management methodology

365
00:13:27,120 --> 00:13:30,079
on a regular basis similar to what

366
00:13:30,079 --> 00:13:30,720
happens

367
00:13:30,720 --> 00:13:34,480
for least to block trackers and

368
00:13:34,480 --> 00:13:36,720
basically advertisers from website and

369
00:13:36,720 --> 00:13:39,040
mobile apps

370
00:13:39,040 --> 00:13:42,560
to mitigate non-essential iot traffic we

371
00:13:42,560 --> 00:13:44,160
propose a blocking system

372
00:13:44,160 --> 00:13:46,320
composed of two components io trigger

373
00:13:46,320 --> 00:13:47,600
and iotrimmer so the

374
00:13:47,600 --> 00:13:50,160
former runs our methodology 2 produce

375
00:13:50,160 --> 00:13:51,920
non-required destination list

376
00:13:51,920 --> 00:13:55,600
and the letter uses such lists with a

377
00:13:55,600 --> 00:13:57,440
blocking strategy

378
00:13:57,440 --> 00:14:00,880
to generate farewell

379
00:14:00,880 --> 00:14:04,320
traffic blocking rules

380
00:14:04,639 --> 00:14:07,440
there are some limitations regarding our

381
00:14:07,440 --> 00:14:08,880
blocking approach that

382
00:14:08,880 --> 00:14:11,760
we need to take on account risk of

383
00:14:11,760 --> 00:14:12,560
allowing

384
00:14:12,560 --> 00:14:15,600
non-essential traffic or to black device

385
00:14:15,600 --> 00:14:17,199
functionality

386
00:14:17,199 --> 00:14:19,360
so destinations may change more

387
00:14:19,360 --> 00:14:21,760
frequently than listed are updated

388
00:14:21,760 --> 00:14:25,760
um they can use the same destination for

389
00:14:25,760 --> 00:14:26,240
both

390
00:14:26,240 --> 00:14:30,240
type for editing our

391
00:14:30,240 --> 00:14:33,800
blocking approach we can have also some

392
00:14:33,800 --> 00:14:36,399
non-observable functionalities like for

393
00:14:36,399 --> 00:14:38,680
example farmer updates or time

394
00:14:38,680 --> 00:14:40,240
synchronizations

395
00:14:40,240 --> 00:14:43,440
and also it's difficult to cover

396
00:14:43,440 --> 00:14:46,639
all the devices um

397
00:14:46,639 --> 00:14:50,560
so our methodology can have um

398
00:14:51,279 --> 00:14:53,760
because we we need to have input and

399
00:14:53,760 --> 00:14:56,639
output for every functionality

400
00:14:56,639 --> 00:15:00,079
but this limitations are not critical

401
00:15:00,079 --> 00:15:02,800
um and also shared with other blocking

402
00:15:02,800 --> 00:15:05,279
systems so blocking systems may miss

403
00:15:05,279 --> 00:15:07,760
or block something but they are useful

404
00:15:07,760 --> 00:15:10,560
regardless

405
00:15:10,560 --> 00:15:13,760
in this work we have seen that the main

406
00:15:13,760 --> 00:15:16,079
the many contacted destinations are not

407
00:15:16,079 --> 00:15:20,079
required for the devices to operate

408
00:15:20,160 --> 00:15:22,480
the good news is that the quantities of

409
00:15:22,480 --> 00:15:24,480
the number of bytes of data that we have

410
00:15:24,480 --> 00:15:25,199
sent

411
00:15:25,199 --> 00:15:26,959
to the non-required destinations that

412
00:15:26,959 --> 00:15:28,320
they are sentenced to the non-required

413
00:15:28,320 --> 00:15:30,240
decision is very small compared to the

414
00:15:30,240 --> 00:15:32,000
rest of the traffic

415
00:15:32,000 --> 00:15:34,160
however even if the amount of data is

416
00:15:34,160 --> 00:15:36,399
small it is still a concern from a

417
00:15:36,399 --> 00:15:38,240
privacy perspective since it's still

418
00:15:38,240 --> 00:15:40,320
enough to signal the presence of the

419
00:15:40,320 --> 00:15:40,959
device

420
00:15:40,959 --> 00:15:42,959
and the function in use so such no

421
00:15:42,959 --> 00:15:46,079
required destinations

422
00:15:46,079 --> 00:15:47,600
potentially violate the data

423
00:15:47,600 --> 00:15:49,920
minimization by design principle of

424
00:15:49,920 --> 00:15:55,440
some privacy regulations such as gdpr

425
00:15:55,440 --> 00:15:59,759
and unfortunately many devices privacy

426
00:15:59,759 --> 00:16:01,839
policies provide little information

427
00:16:01,839 --> 00:16:02,959
about how they use

428
00:16:02,959 --> 00:16:05,680
data from their customers devices in

429
00:16:05,680 --> 00:16:07,680
many cases it is unclear

430
00:16:07,680 --> 00:16:10,240
whether the behavior of some devices is

431
00:16:10,240 --> 00:16:11,279
not consistent

432
00:16:11,279 --> 00:16:14,880
with what is stated

433
00:16:14,880 --> 00:16:16,880
in conclusion we propose an automated

434
00:16:16,880 --> 00:16:19,040
approach to measure non-essential iot

435
00:16:19,040 --> 00:16:21,120
traffic the main takeaway is that our

436
00:16:21,120 --> 00:16:22,959
housemates are salty and

437
00:16:22,959 --> 00:16:26,160
existing block lists are not effective

438
00:16:26,160 --> 00:16:28,079
with iot devices

439
00:16:28,079 --> 00:16:29,680
we have designed and implemented a

440
00:16:29,680 --> 00:16:32,079
utrima a system to mitigate

441
00:16:32,079 --> 00:16:34,240
iot non-essential traffic using devices

442
00:16:34,240 --> 00:16:36,160
dependence destination based

443
00:16:36,160 --> 00:16:39,600
block list polaroid software and links

444
00:16:39,600 --> 00:16:41,279
are open source and available for

445
00:16:41,279 --> 00:16:42,639
download

446
00:16:42,639 --> 00:16:47,680
thank you very much for your attention

