1
00:00:02,399 --> 00:00:04,160
all right thank you all for coming to my

2
00:00:04,160 --> 00:00:06,240
pet stock on fast privacy preserving

3
00:00:06,240 --> 00:00:07,839
punch cards

4
00:00:07,839 --> 00:00:10,880
so the topic of this talk is going to be

5
00:00:10,880 --> 00:00:12,639
punch cards so this is a loyalty program

6
00:00:12,639 --> 00:00:14,400
you've probably seen at many stores

7
00:00:14,400 --> 00:00:15,920
where you get a card when you when you

8
00:00:15,920 --> 00:00:17,520
go there and each time you buy something

9
00:00:17,520 --> 00:00:18,800
they give it a hole punch

10
00:00:18,800 --> 00:00:20,480
and once it has enough full punches you

11
00:00:20,480 --> 00:00:22,480
can redeem the card for some

12
00:00:22,480 --> 00:00:24,400
reward so that's what we're going to be

13
00:00:24,400 --> 00:00:25,840
talking about today and in particular

14
00:00:25,840 --> 00:00:26,960
we're going to be talking about how

15
00:00:26,960 --> 00:00:27,840
punch cards

16
00:00:27,840 --> 00:00:29,920
can go digital so there's a lot of

17
00:00:29,920 --> 00:00:32,079
advantages to taking your your company's

18
00:00:32,079 --> 00:00:33,600
loyalty program digital

19
00:00:33,600 --> 00:00:36,000
and this applies for punch cards as well

20
00:00:36,000 --> 00:00:37,920
um one great advantage is customer

21
00:00:37,920 --> 00:00:38,719
convenience

22
00:00:38,719 --> 00:00:42,000
it's easy for customers to um carry

23
00:00:42,000 --> 00:00:43,040
around their phones they're almost

24
00:00:43,040 --> 00:00:44,399
certainly already carrying around their

25
00:00:44,399 --> 00:00:45,680
phones so why not

26
00:00:45,680 --> 00:00:47,440
use that for the punch card instead of

27
00:00:47,440 --> 00:00:49,200
having to have a physical punch card in

28
00:00:49,200 --> 00:00:50,239
addition to that

29
00:00:50,239 --> 00:00:51,680
if things are on your phone there isn't

30
00:00:51,680 --> 00:00:53,760
the possibility of losing your card

31
00:00:53,760 --> 00:00:55,199
so you don't have this situation where

32
00:00:55,199 --> 00:00:56,559
you have a bunch of different cards each

33
00:00:56,559 --> 00:00:58,719
of which has one hole punch in it

34
00:00:58,719 --> 00:01:01,039
it allows for easier bookkeeping um

35
00:01:01,039 --> 00:01:02,719
because it makes it easy for your

36
00:01:02,719 --> 00:01:04,239
for your for computers to kind of keep

37
00:01:04,239 --> 00:01:05,760
track of how many people are using your

38
00:01:05,760 --> 00:01:07,360
punch card program how many cards are

39
00:01:07,360 --> 00:01:08,560
being redeemed and stuff

40
00:01:08,560 --> 00:01:10,159
instead of requiring employees to kind

41
00:01:10,159 --> 00:01:11,920
of count up how many cards are being

42
00:01:11,920 --> 00:01:12,960
used

43
00:01:12,960 --> 00:01:15,119
it makes it harder to to counterfeit

44
00:01:15,119 --> 00:01:16,960
these cards so for one example of this

45
00:01:16,960 --> 00:01:19,680
i'm using pictures from an eatery i like

46
00:01:19,680 --> 00:01:20,400
and

47
00:01:20,400 --> 00:01:22,720
um and i'm hiding the name but i saw

48
00:01:22,720 --> 00:01:24,000
that you know they use this kind of

49
00:01:24,000 --> 00:01:25,600
custom looking hole punch

50
00:01:25,600 --> 00:01:28,320
that has this b shape for for each punch

51
00:01:28,320 --> 00:01:30,400
and i went online and within 10 minutes

52
00:01:30,400 --> 00:01:32,159
i was able to find an identical hole

53
00:01:32,159 --> 00:01:33,280
punch on etsy

54
00:01:33,280 --> 00:01:36,159
so you know for the price of one uh bowl

55
00:01:36,159 --> 00:01:36,960
you could get

56
00:01:36,960 --> 00:01:38,240
a punch card and then you could get a

57
00:01:38,240 --> 00:01:40,560
second free bowl by just faking the hole

58
00:01:40,560 --> 00:01:42,240
punches so very easy to counterfeit

59
00:01:42,240 --> 00:01:43,600
things that harder to counterfeit when

60
00:01:43,600 --> 00:01:45,520
it's made digital

61
00:01:45,520 --> 00:01:48,000
and as an added benefit when it's on

62
00:01:48,000 --> 00:01:49,040
your phone the

63
00:01:49,040 --> 00:01:50,640
the hole punch process can be

64
00:01:50,640 --> 00:01:52,560
contactless which is not the case

65
00:01:52,560 --> 00:01:56,079
uh in the physical punch cards

66
00:01:56,079 --> 00:01:58,159
so on the other hand there's one kind of

67
00:01:58,159 --> 00:02:00,000
big reason to not go digital

68
00:02:00,000 --> 00:02:01,680
and this is when additional when a

69
00:02:01,680 --> 00:02:03,600
loyalty program becomes digital it has

70
00:02:03,600 --> 00:02:04,560
this tendency

71
00:02:04,560 --> 00:02:07,119
to become a data stealing monster and

72
00:02:07,119 --> 00:02:09,440
collect huge amounts of information

73
00:02:09,440 --> 00:02:10,959
about customers by kind of linking

74
00:02:10,959 --> 00:02:12,239
together all of their different

75
00:02:12,239 --> 00:02:14,080
transactions at a business

76
00:02:14,080 --> 00:02:15,440
and there's kind of an asterisk here

77
00:02:15,440 --> 00:02:16,800
because i think for a lot of businesses

78
00:02:16,800 --> 00:02:18,480
maybe that's actually a feature

79
00:02:18,480 --> 00:02:20,000
but for the purposes of this talk i'm

80
00:02:20,000 --> 00:02:22,000
interested imagining a business that

81
00:02:22,000 --> 00:02:24,080
that cares about their customers privacy

82
00:02:24,080 --> 00:02:25,599
wants to protect the privacy but still

83
00:02:25,599 --> 00:02:27,680
wants to get all of these other benefits

84
00:02:27,680 --> 00:02:29,599
of having a digital loyalty program

85
00:02:29,599 --> 00:02:30,959
without having to subject their

86
00:02:30,959 --> 00:02:32,319
customers to kind of additional

87
00:02:32,319 --> 00:02:33,599
surveillance and wants to give strong

88
00:02:33,599 --> 00:02:35,120
privacy guarantees to customers

89
00:02:35,120 --> 00:02:36,640
while still giving the business all the

90
00:02:36,640 --> 00:02:39,760
benefits of having a digital punch card

91
00:02:39,760 --> 00:02:41,120
so the question we want to answer is can

92
00:02:41,120 --> 00:02:42,720
we get the benefits of digital loyalty

93
00:02:42,720 --> 00:02:43,360
programs

94
00:02:43,360 --> 00:02:46,319
without sacrificing privacy so there's a

95
00:02:46,319 --> 00:02:47,920
lot of tools in the cryptography

96
00:02:47,920 --> 00:02:48,959
literature that can

97
00:02:48,959 --> 00:02:50,720
help us do this we could use anonymous

98
00:02:50,720 --> 00:02:52,800
credentials we could use ecash

99
00:02:52,800 --> 00:02:55,599
we could use the incentive system and

100
00:02:55,599 --> 00:02:56,319
all of these

101
00:02:56,319 --> 00:02:57,760
of these tools what they do is they give

102
00:02:57,760 --> 00:02:59,519
customers an unlinkable token that they

103
00:02:59,519 --> 00:03:01,760
can use for each purchase that they make

104
00:03:01,760 --> 00:03:03,440
and then at the end after receiving

105
00:03:03,440 --> 00:03:05,680
several tokens customers can redeem the

106
00:03:05,680 --> 00:03:07,200
tokens by presenting a bunch

107
00:03:07,200 --> 00:03:09,360
a bunch of them at once and you know if

108
00:03:09,360 --> 00:03:10,800
you need 10 punch cards you pre 10

109
00:03:10,800 --> 00:03:12,640
punches to get a free item

110
00:03:12,640 --> 00:03:14,159
you'll present 10 tokens and then you'll

111
00:03:14,159 --> 00:03:15,519
get your free item in exchange for the

112
00:03:15,519 --> 00:03:16,080
tokens

113
00:03:16,080 --> 00:03:18,000
the tokens are unlinkable so it doesn't

114
00:03:18,000 --> 00:03:19,280
reveal anything about it

115
00:03:19,280 --> 00:03:20,800
it doesn't allow the business to link

116
00:03:20,800 --> 00:03:23,120
together the customer's transactions

117
00:03:23,120 --> 00:03:25,200
this gets the job done but the work will

118
00:03:25,200 --> 00:03:26,799
scale linearly in the number of hole

119
00:03:26,799 --> 00:03:28,159
punches because for each hole punch you

120
00:03:28,159 --> 00:03:29,599
need an extra token that means extra

121
00:03:29,599 --> 00:03:30,319
storage

122
00:03:30,319 --> 00:03:32,239
in the size of a token this means that

123
00:03:32,239 --> 00:03:34,159
the server needs to kind of keep track

124
00:03:34,159 --> 00:03:37,200
of as many um as much stuff as there are

125
00:03:37,200 --> 00:03:38,159
hole punches

126
00:03:38,159 --> 00:03:40,560
not as many things as there are um

127
00:03:40,560 --> 00:03:41,360
tokens

128
00:03:41,360 --> 00:03:42,640
i mean not as many things as there are

129
00:03:42,640 --> 00:03:44,720
redemptions so there's kind of a lot of

130
00:03:44,720 --> 00:03:46,239
extra work that's linear in the number

131
00:03:46,239 --> 00:03:48,560
of hole punches and that's not great

132
00:03:48,560 --> 00:03:50,239
so there has been a line of work

133
00:03:50,239 --> 00:03:52,640
recently and you can see some of them on

134
00:03:52,640 --> 00:03:53,760
the on the slide

135
00:03:53,760 --> 00:03:56,159
and these works present uh techniques

136
00:03:56,159 --> 00:03:57,439
that can be used to get punch card

137
00:03:57,439 --> 00:03:58,560
storage and performance

138
00:03:58,560 --> 00:04:00,319
that's independent of the number of

139
00:04:00,319 --> 00:04:02,159
punches so no matter how many punches

140
00:04:02,159 --> 00:04:03,280
you need on your punch card

141
00:04:03,280 --> 00:04:05,519
the storage and kind of cost performance

142
00:04:05,519 --> 00:04:07,040
is going to be the same

143
00:04:07,040 --> 00:04:08,959
additionally these works uh provide

144
00:04:08,959 --> 00:04:10,959
support for broader functionalities

145
00:04:10,959 --> 00:04:12,640
for example i'll talk about this more in

146
00:04:12,640 --> 00:04:13,760
a minute their support for what they

147
00:04:13,760 --> 00:04:14,000
call

148
00:04:14,000 --> 00:04:15,920
offline double spending their support

149
00:04:15,920 --> 00:04:17,519
for kind of penalizing people and giving

150
00:04:17,519 --> 00:04:18,720
them negative points

151
00:04:18,720 --> 00:04:20,399
their support for partial redemptions

152
00:04:20,399 --> 00:04:21,839
where someone instead of spending all of

153
00:04:21,839 --> 00:04:23,360
their points to redeem something

154
00:04:23,360 --> 00:04:25,120
has like several reward points in their

155
00:04:25,120 --> 00:04:26,800
budget and we can reward some of them

156
00:04:26,800 --> 00:04:29,440
for different kinds of prizes

157
00:04:29,440 --> 00:04:31,199
so this is kind of a nice set of

158
00:04:31,199 --> 00:04:33,280
features and it gets rid of this

159
00:04:33,280 --> 00:04:34,960
asymptotic issue

160
00:04:34,960 --> 00:04:37,040
but one partial drawback to these things

161
00:04:37,040 --> 00:04:38,160
is that their performance could be

162
00:04:38,160 --> 00:04:40,240
improved often they rely on pairings

163
00:04:40,240 --> 00:04:42,639
or involve zero knowledge proofs um so

164
00:04:42,639 --> 00:04:43,919
the performance is

165
00:04:43,919 --> 00:04:45,600
uh not as strong as it could be and

166
00:04:45,600 --> 00:04:46,639
we're going to see if we can improve

167
00:04:46,639 --> 00:04:47,280
that

168
00:04:47,280 --> 00:04:48,560
and another issue is i think there's

169
00:04:48,560 --> 00:04:50,160
kind of a mismatch between the schemes

170
00:04:50,160 --> 00:04:52,000
and the punch card deployment scenario

171
00:04:52,000 --> 00:04:53,919
so this is not to say that these are not

172
00:04:53,919 --> 00:04:56,160
useful in in certain use cases and in

173
00:04:56,160 --> 00:04:57,759
fact they provide support for kind of

174
00:04:57,759 --> 00:04:58,800
very general

175
00:04:58,800 --> 00:05:01,280
um loyalty programs which is great but

176
00:05:01,280 --> 00:05:02,639
what i'm saying is that for the punch

177
00:05:02,639 --> 00:05:04,000
card scenario itself

178
00:05:04,000 --> 00:05:06,320
these might be overkill so one example

179
00:05:06,320 --> 00:05:07,840
of this is this feature called offline

180
00:05:07,840 --> 00:05:08,880
double spending

181
00:05:08,880 --> 00:05:11,759
which allows uh detection of if somebody

182
00:05:11,759 --> 00:05:12,560
spends

183
00:05:12,560 --> 00:05:14,560
uh redeems the same punch card at two

184
00:05:14,560 --> 00:05:15,600
different locations

185
00:05:15,600 --> 00:05:17,039
but the locations aren't connected to

186
00:05:17,039 --> 00:05:18,560
the internet so they can't kind of check

187
00:05:18,560 --> 00:05:21,199
against each other in one live database

188
00:05:21,199 --> 00:05:23,440
there's a mechanism for checking and

189
00:05:23,440 --> 00:05:25,280
seeing if offline later if somebody

190
00:05:25,280 --> 00:05:26,720
double spent and then that gets tied

191
00:05:26,720 --> 00:05:28,000
back to the person's identity and they

192
00:05:28,000 --> 00:05:29,360
can be penalized

193
00:05:29,360 --> 00:05:30,639
now i'm saying this might not be great

194
00:05:30,639 --> 00:05:32,720
for punch cards because one oftentimes

195
00:05:32,720 --> 00:05:34,080
if you're using a punch card

196
00:05:34,080 --> 00:05:35,520
you're already connected to the internet

197
00:05:35,520 --> 00:05:36,720
because the point of sale terminal

198
00:05:36,720 --> 00:05:37,360
requires

199
00:05:37,360 --> 00:05:40,880
a requires an internet connection

200
00:05:40,880 --> 00:05:42,800
and also in terms of performance this

201
00:05:42,800 --> 00:05:44,320
offline double spending check can be

202
00:05:44,320 --> 00:05:44,960
expensive

203
00:05:44,960 --> 00:05:47,120
but perhaps most importantly when you

204
00:05:47,120 --> 00:05:49,039
have this way of checking somebody after

205
00:05:49,039 --> 00:05:51,120
the fact and seeing if they double spent

206
00:05:51,120 --> 00:05:53,600
this means that their their punch card

207
00:05:53,600 --> 00:05:55,120
is somehow tied to a notion of real

208
00:05:55,120 --> 00:05:56,080
world identity

209
00:05:56,080 --> 00:05:58,240
and this real world identity is revealed

210
00:05:58,240 --> 00:06:00,000
only if somebody tries to cheat

211
00:06:00,000 --> 00:06:01,360
but still there isn't real world

212
00:06:01,360 --> 00:06:02,960
identity that's connected to this and

213
00:06:02,960 --> 00:06:04,639
this is not something that we need

214
00:06:04,639 --> 00:06:07,759
for for punch cards um we want it to be

215
00:06:07,759 --> 00:06:09,039
kind of minimally

216
00:06:09,039 --> 00:06:10,560
privacy invasive so even if it's

217
00:06:10,560 --> 00:06:11,759
protecting your privacy you shouldn't

218
00:06:11,759 --> 00:06:12,720
have to upload

219
00:06:12,720 --> 00:06:14,800
sensitive information about yourself in

220
00:06:14,800 --> 00:06:16,479
order to use the privacy preserving

221
00:06:16,479 --> 00:06:17,840
system

222
00:06:17,840 --> 00:06:19,039
so we want to build something that kind

223
00:06:19,039 --> 00:06:20,960
of doesn't have any of that

224
00:06:20,960 --> 00:06:22,479
so in this work we focus on the

225
00:06:22,479 --> 00:06:23,759
requirements for punch cards

226
00:06:23,759 --> 00:06:24,880
specifically

227
00:06:24,880 --> 00:06:27,680
and we will not have any long-term user

228
00:06:27,680 --> 00:06:29,600
identity tied to public keys for the for

229
00:06:29,600 --> 00:06:30,800
the clients in fact clients will not

230
00:06:30,800 --> 00:06:32,400
have public keys at all

231
00:06:32,400 --> 00:06:34,400
um there will be no server work required

232
00:06:34,400 --> 00:06:35,680
to issue cards this

233
00:06:35,680 --> 00:06:37,280
avoids a potential denial of service

234
00:06:37,280 --> 00:06:39,199
situation where you kind of accrue a

235
00:06:39,199 --> 00:06:40,720
bunch of punch cards with zero punches

236
00:06:40,720 --> 00:06:41,759
on them

237
00:06:41,759 --> 00:06:44,400
um and also we're going to minimize

238
00:06:44,400 --> 00:06:45,919
round complexity

239
00:06:45,919 --> 00:06:47,360
we're also going to improve performance

240
00:06:47,360 --> 00:06:48,720
so we're going to remove the reliance on

241
00:06:48,720 --> 00:06:50,319
pairings that was present in most but

242
00:06:50,319 --> 00:06:51,680
not all of the prior works

243
00:06:51,680 --> 00:06:53,759
we're going to get a 14x faster card

244
00:06:53,759 --> 00:06:55,840
punch with 11x less communication to

245
00:06:55,840 --> 00:06:57,599
punch a card compared to the best prior

246
00:06:57,599 --> 00:06:58,160
work

247
00:06:58,160 --> 00:07:00,400
and we're going to have 128 times faster

248
00:07:00,400 --> 00:07:01,360
card redemption

249
00:07:01,360 --> 00:07:04,240
and 55x less communication to redeem a

250
00:07:04,240 --> 00:07:06,000
card compared to the best prior work so

251
00:07:06,000 --> 00:07:07,440
we have kind of significant

252
00:07:07,440 --> 00:07:09,039
improvements by focusing on the punch

253
00:07:09,039 --> 00:07:11,199
card use case

254
00:07:11,199 --> 00:07:12,560
in terms of the functionality that you

255
00:07:12,560 --> 00:07:13,840
need in a punch card there's going to be

256
00:07:13,840 --> 00:07:15,680
some server setup to initialize server

257
00:07:15,680 --> 00:07:16,319
secrets

258
00:07:16,319 --> 00:07:18,080
and create a database of redeemed cards

259
00:07:18,080 --> 00:07:19,280
to make sure people aren't double

260
00:07:19,280 --> 00:07:20,720
spending them

261
00:07:20,720 --> 00:07:22,800
then we need a mechanism for card

262
00:07:22,800 --> 00:07:24,639
issuance so that a customer can get a

263
00:07:24,639 --> 00:07:25,759
fresh punch card

264
00:07:25,759 --> 00:07:27,280
there needs to be a mechanism for a card

265
00:07:27,280 --> 00:07:28,639
punch so that when someone buy something

266
00:07:28,639 --> 00:07:30,080
they can add a punch to their existing

267
00:07:30,080 --> 00:07:31,039
punch card

268
00:07:31,039 --> 00:07:32,880
and there needs to be a way for cards to

269
00:07:32,880 --> 00:07:34,639
be redeemed or validated so someone can

270
00:07:34,639 --> 00:07:36,240
submit a completed punch card to get a

271
00:07:36,240 --> 00:07:37,759
reward

272
00:07:37,759 --> 00:07:39,360
in terms of security i'm just going to

273
00:07:39,360 --> 00:07:40,720
kind of sketch at a high level what we

274
00:07:40,720 --> 00:07:42,080
want in terms of security

275
00:07:42,080 --> 00:07:43,599
so we have a privacy requirement that

276
00:07:43,599 --> 00:07:45,360
the server shouldn't be able to link any

277
00:07:45,360 --> 00:07:47,360
issuances punches or redemptions to each

278
00:07:47,360 --> 00:07:48,720
other so you want this to be just like a

279
00:07:48,720 --> 00:07:49,759
paper punch card

280
00:07:49,759 --> 00:07:51,120
and the way we define this is by

281
00:07:51,120 --> 00:07:53,039
requiring that the server can simulate

282
00:07:53,039 --> 00:07:54,800
everything it sees when it's issuing

283
00:07:54,800 --> 00:07:56,560
punching or redeeming cards so it

284
00:07:56,560 --> 00:07:57,680
doesn't really learn anything

285
00:07:57,680 --> 00:08:00,080
from its interactions with customers

286
00:08:00,080 --> 00:08:01,599
there's also a soundness requirement you

287
00:08:01,599 --> 00:08:02,400
can think of this as an

288
00:08:02,400 --> 00:08:04,080
anti-counterfeiting requirement

289
00:08:04,080 --> 00:08:05,840
and this is that a client can't redeem

290
00:08:05,840 --> 00:08:08,000
more punches than it has received

291
00:08:08,000 --> 00:08:10,000
so here we capture this with a security

292
00:08:10,000 --> 00:08:11,360
game where the challenger allows the

293
00:08:11,360 --> 00:08:12,080
adversary

294
00:08:12,080 --> 00:08:13,680
to punch and redeem cards and the

295
00:08:13,680 --> 00:08:14,960
adversary can kind of play the role of

296
00:08:14,960 --> 00:08:16,319
many users there can be honest and

297
00:08:16,319 --> 00:08:17,360
malicious users

298
00:08:17,360 --> 00:08:18,960
security is adaptive so it's kind of a

299
00:08:18,960 --> 00:08:20,479
good security definition here

300
00:08:20,479 --> 00:08:22,960
and the adversary wins if more punches

301
00:08:22,960 --> 00:08:23,840
are redeemed

302
00:08:23,840 --> 00:08:26,000
than given so if the if the adversary is

303
00:08:26,000 --> 00:08:27,360
able to get a certain number of punches

304
00:08:27,360 --> 00:08:28,960
but then redeem more points

305
00:08:28,960 --> 00:08:32,559
than it got then it wins the game

306
00:08:32,559 --> 00:08:34,559
so let's see how we can build a scheme

307
00:08:34,559 --> 00:08:35,839
that satisfies these things and as a

308
00:08:35,839 --> 00:08:36,719
first attempt

309
00:08:36,719 --> 00:08:37,760
we're going to have something that

310
00:08:37,760 --> 00:08:39,440
actually has no security but it's just

311
00:08:39,440 --> 00:08:40,880
to get us thinking about this

312
00:08:40,880 --> 00:08:42,000
and the idea is going to be that the

313
00:08:42,000 --> 00:08:43,599
server is going to take a group element

314
00:08:43,599 --> 00:08:45,040
and it's going to raise it to a secret

315
00:08:45,040 --> 00:08:46,240
power for each punch

316
00:08:46,240 --> 00:08:49,279
so the server is going to have a secret

317
00:08:49,279 --> 00:08:51,200
value in zq

318
00:08:51,200 --> 00:08:52,959
it's going to choose randomly and a

319
00:08:52,959 --> 00:08:54,959
client when it gets issued a punch card

320
00:08:54,959 --> 00:08:56,240
is just going to pick a random group

321
00:08:56,240 --> 00:08:56,720
element

322
00:08:56,720 --> 00:09:00,160
in a group of order cube um

323
00:09:00,160 --> 00:09:02,320
and and that's it there's no interaction

324
00:09:02,320 --> 00:09:03,440
and this is actually a property that

325
00:09:03,440 --> 00:09:04,240
we're going to keep

326
00:09:04,240 --> 00:09:06,720
all the way through our final scheme so

327
00:09:06,720 --> 00:09:08,000
to get a hole punch the client

328
00:09:08,000 --> 00:09:09,440
is going to send its group element over

329
00:09:09,440 --> 00:09:10,959
to the server the server is going to

330
00:09:10,959 --> 00:09:12,240
raise it to its secret and then it's

331
00:09:12,240 --> 00:09:13,680
going to send it back to the to the

332
00:09:13,680 --> 00:09:14,560
client

333
00:09:14,560 --> 00:09:16,399
and then at the end once the client has

334
00:09:16,399 --> 00:09:17,839
n punches where n is the number of

335
00:09:17,839 --> 00:09:19,440
punches it needs for a reward

336
00:09:19,440 --> 00:09:21,760
it sends its original group element and

337
00:09:21,760 --> 00:09:23,600
the element that's been raised

338
00:09:23,600 --> 00:09:26,320
to the secret key n times to the server

339
00:09:26,320 --> 00:09:27,440
and the server checks

340
00:09:27,440 --> 00:09:28,720
uh that they have the correct

341
00:09:28,720 --> 00:09:30,640
relationship that is that the original

342
00:09:30,640 --> 00:09:31,760
group element has in fact been

343
00:09:31,760 --> 00:09:33,360
exponentiated end times

344
00:09:33,360 --> 00:09:34,959
and that the original group element had

345
00:09:34,959 --> 00:09:36,480
not been redeemed before

346
00:09:36,480 --> 00:09:38,399
so this satisfies kind of a correctness

347
00:09:38,399 --> 00:09:40,640
property but it doesn't have any privacy

348
00:09:40,640 --> 00:09:42,080
nor does it have any soundness so let's

349
00:09:42,080 --> 00:09:43,600
see how we can add those those

350
00:09:43,600 --> 00:09:45,200
properties in

351
00:09:45,200 --> 00:09:46,880
so to add privacy the idea is going to

352
00:09:46,880 --> 00:09:48,320
be straightforward the client is going

353
00:09:48,320 --> 00:09:50,000
to mask the punch card before sending

354
00:09:50,000 --> 00:09:51,839
it to the server so we have the same

355
00:09:51,839 --> 00:09:54,000
protocol as before for a punch

356
00:09:54,000 --> 00:09:56,240
but now whenever a client wants to to

357
00:09:56,240 --> 00:09:57,200
get a hole punch

358
00:09:57,200 --> 00:10:00,160
it picks a random element m in zq to

359
00:10:00,160 --> 00:10:02,640
mask its secret to mask its punch card

360
00:10:02,640 --> 00:10:03,920
it's going to raise the punch card to

361
00:10:03,920 --> 00:10:05,440
the mask and it's going to send that to

362
00:10:05,440 --> 00:10:06,079
the server

363
00:10:06,079 --> 00:10:07,920
then the server punches that by raising

364
00:10:07,920 --> 00:10:09,200
it to the secret key

365
00:10:09,200 --> 00:10:10,560
and then it sends it back to the client

366
00:10:10,560 --> 00:10:12,560
who raises it to the inverse of the mask

367
00:10:12,560 --> 00:10:14,160
which removes the mask and gives the

368
00:10:14,160 --> 00:10:15,839
client the the

369
00:10:15,839 --> 00:10:18,000
group element raised to the secret key

370
00:10:18,000 --> 00:10:20,240
so this way each time the server sees a

371
00:10:20,240 --> 00:10:20,959
punch card

372
00:10:20,959 --> 00:10:22,320
it's really seeing a random group

373
00:10:22,320 --> 00:10:24,720
element so this is great but it only

374
00:10:24,720 --> 00:10:26,880
provides semi-honest security

375
00:10:26,880 --> 00:10:29,839
and the reason is that when it comes

376
00:10:29,839 --> 00:10:30,880
redemption time

377
00:10:30,880 --> 00:10:32,800
the server can kind of do an attack

378
00:10:32,800 --> 00:10:34,560
where it will distinguish

379
00:10:34,560 --> 00:10:36,079
between it can kind of mark people and

380
00:10:36,079 --> 00:10:37,920
distinguish them later and the idea is

381
00:10:37,920 --> 00:10:39,519
that to do this the server raises one

382
00:10:39,519 --> 00:10:41,200
punch card to a different power

383
00:10:41,200 --> 00:10:42,640
than it raises the other punch cards and

384
00:10:42,640 --> 00:10:43,920
you can think of this as the digital

385
00:10:43,920 --> 00:10:44,720
analog

386
00:10:44,720 --> 00:10:46,880
of having one punch card a hole puncher

387
00:10:46,880 --> 00:10:48,000
that you use for everybody

388
00:10:48,000 --> 00:10:49,680
and then if somebody's a bad tipper you

389
00:10:49,680 --> 00:10:51,120
use a different punch card

390
00:10:51,120 --> 00:10:52,959
um so then you know at the end when they

391
00:10:52,959 --> 00:10:54,399
try to redeem their card you see oh this

392
00:10:54,399 --> 00:10:55,279
is the guy who

393
00:10:55,279 --> 00:10:56,720
was the bad tipper you have a different

394
00:10:56,720 --> 00:10:59,040
hole punch on yours so to do this

395
00:10:59,040 --> 00:11:00,800
digitally the server will just kind of

396
00:11:00,800 --> 00:11:02,000
raise everybody to the same group

397
00:11:02,000 --> 00:11:02,560
element

398
00:11:02,560 --> 00:11:04,880
except to the same secret except for one

399
00:11:04,880 --> 00:11:06,240
time it'll raise somebody to a different

400
00:11:06,240 --> 00:11:06,800
secret

401
00:11:06,800 --> 00:11:07,920
and then at the end when that person

402
00:11:07,920 --> 00:11:09,760
wants to redeem their card the server

403
00:11:09,760 --> 00:11:11,519
will see that it's not this card hasn't

404
00:11:11,519 --> 00:11:11,839
been

405
00:11:11,839 --> 00:11:13,920
raised to the main secret 10 times or n

406
00:11:13,920 --> 00:11:15,760
times it's been raised to the main

407
00:11:15,760 --> 00:11:17,200
secret n minus 1 times

408
00:11:17,200 --> 00:11:18,399
and it's been raised to this different

409
00:11:18,399 --> 00:11:20,640
value one time

410
00:11:20,640 --> 00:11:21,839
so to get around this we're going to

411
00:11:21,839 --> 00:11:23,760
have the server provide proof that it

412
00:11:23,760 --> 00:11:25,360
raises a punch card to the same power

413
00:11:25,360 --> 00:11:26,560
each time

414
00:11:26,560 --> 00:11:28,240
and to do this we're going to have the

415
00:11:28,240 --> 00:11:29,920
server setup modified so that it also

416
00:11:29,920 --> 00:11:31,519
includes a server public key

417
00:11:31,519 --> 00:11:32,959
which is just going to be the generator

418
00:11:32,959 --> 00:11:35,200
of the group raised to the secret

419
00:11:35,200 --> 00:11:37,200
and then every time the server does a

420
00:11:37,200 --> 00:11:38,720
hole punch it also sends a chom

421
00:11:38,720 --> 00:11:40,959
penderson proof to the client

422
00:11:40,959 --> 00:11:43,680
and this is just a proof that uh of two

423
00:11:43,680 --> 00:11:44,079
things

424
00:11:44,079 --> 00:11:46,160
one that the the server has a secret

425
00:11:46,160 --> 00:11:47,600
which is the secret that goes into the

426
00:11:47,600 --> 00:11:48,640
public key

427
00:11:48,640 --> 00:11:50,800
and second that the punch card has been

428
00:11:50,800 --> 00:11:52,639
raised to that same secret

429
00:11:52,639 --> 00:11:55,200
um so this is kind of a proof that these

430
00:11:55,200 --> 00:11:57,040
things form a ddh tuple

431
00:11:57,040 --> 00:11:58,959
um so it's just each time this the the

432
00:11:58,959 --> 00:12:00,880
server does a punch it proves that it's

433
00:12:00,880 --> 00:12:02,160
doing kind of an honest punch

434
00:12:02,160 --> 00:12:05,279
and the client verifies that so

435
00:12:05,279 --> 00:12:07,120
this gives us a system that actually has

436
00:12:07,120 --> 00:12:09,040
privacy the one thing that we need to

437
00:12:09,040 --> 00:12:10,800
now add is soundness which because we

438
00:12:10,800 --> 00:12:12,160
currently don't have and the reason we

439
00:12:12,160 --> 00:12:13,680
don't have it is as follows so right now

440
00:12:13,680 --> 00:12:15,040
in the redemption process

441
00:12:15,040 --> 00:12:16,560
the client is sending a group element

442
00:12:16,560 --> 00:12:18,320
that it shows as his punch card as well

443
00:12:18,320 --> 00:12:20,079
as that group element race of the secret

444
00:12:20,079 --> 00:12:20,880
end times

445
00:12:20,880 --> 00:12:22,880
and the server kind of checks uh that

446
00:12:22,880 --> 00:12:24,160
that relationship holds

447
00:12:24,160 --> 00:12:25,440
and that the original group element

448
00:12:25,440 --> 00:12:27,519
hadn't been redeemed before

449
00:12:27,519 --> 00:12:29,040
now the attack works as follows a

450
00:12:29,040 --> 00:12:31,839
malicious client first behaves honestly

451
00:12:31,839 --> 00:12:33,760
creates a valid punch card and redeems

452
00:12:33,760 --> 00:12:34,880
it

453
00:12:34,880 --> 00:12:37,600
then the malicious client takes one more

454
00:12:37,600 --> 00:12:38,160
punch

455
00:12:38,160 --> 00:12:40,399
on the card that had been redeemed so

456
00:12:40,399 --> 00:12:42,000
this takes pn which is like the final

457
00:12:42,000 --> 00:12:43,120
value of the punch card

458
00:12:43,120 --> 00:12:44,720
and gets it punched one more time and of

459
00:12:44,720 --> 00:12:46,079
course remember there's privacy here so

460
00:12:46,079 --> 00:12:46,959
the server doesn't know that it's

461
00:12:46,959 --> 00:12:49,360
punching the same card again

462
00:12:49,360 --> 00:12:52,240
then the the client takes the punch the

463
00:12:52,240 --> 00:12:53,200
card after had been

464
00:12:53,200 --> 00:12:55,200
pin punched once and the card after had

465
00:12:55,200 --> 00:12:56,800
been punched n plus one times

466
00:12:56,800 --> 00:12:58,720
and it submits this as a fresh punch

467
00:12:58,720 --> 00:13:00,480
card now the correct relationship is

468
00:13:00,480 --> 00:13:01,760
going to hold between these

469
00:13:01,760 --> 00:13:03,440
and the the group element raised to the

470
00:13:03,440 --> 00:13:04,880
secret once is going to be different

471
00:13:04,880 --> 00:13:06,160
from the original group element so it

472
00:13:06,160 --> 00:13:07,440
hasn't been redeemed before

473
00:13:07,440 --> 00:13:09,200
which allows the server to redeem it a

474
00:13:09,200 --> 00:13:11,519
second time so now the client

475
00:13:11,519 --> 00:13:13,680
has gotten n plus one punches but it has

476
00:13:13,680 --> 00:13:15,360
redeemed two end points

477
00:13:15,360 --> 00:13:16,959
and this breaks our soundness

478
00:13:16,959 --> 00:13:19,040
requirement so

479
00:13:19,040 --> 00:13:21,360
the idea for for fixing this is that we

480
00:13:21,360 --> 00:13:22,720
want to make sure that the client

481
00:13:22,720 --> 00:13:25,440
can't redeem a punch card p0 unless it

482
00:13:25,440 --> 00:13:27,600
knows the pre-image of a hash function

483
00:13:27,600 --> 00:13:29,120
that outputs that value and what this

484
00:13:29,120 --> 00:13:31,120
kind of does is it kind of anchors

485
00:13:31,120 --> 00:13:34,240
the beginning of a punch card to the to

486
00:13:34,240 --> 00:13:35,200
the hash function

487
00:13:35,200 --> 00:13:36,639
so you can't take a punch card that's

488
00:13:36,639 --> 00:13:38,399
been punched a few times and then use

489
00:13:38,399 --> 00:13:40,800
that value as like a fresh punch card

490
00:13:40,800 --> 00:13:42,160
so how this is going to work is we're

491
00:13:42,160 --> 00:13:43,600
just going to change the issuance

492
00:13:43,600 --> 00:13:44,720
process so it's still going to be

493
00:13:44,720 --> 00:13:46,320
non-interactive on the client

494
00:13:46,320 --> 00:13:48,079
but now the client is going to start by

495
00:13:48,079 --> 00:13:49,360
picking a random

496
00:13:49,360 --> 00:13:51,680
a lambda bit string and passing that

497
00:13:51,680 --> 00:13:53,120
through a hash function modeled as a

498
00:13:53,120 --> 00:13:53,920
random oracle

499
00:13:53,920 --> 00:13:55,440
and that's how it's going to pick its

500
00:13:55,440 --> 00:13:56,959
group element instead of just picking

501
00:13:56,959 --> 00:13:59,360
a group element randomly from the group

502
00:13:59,360 --> 00:14:00,639
and then at redemption time

503
00:14:00,639 --> 00:14:02,240
instead of sending the initial group

504
00:14:02,240 --> 00:14:04,399
element for the punch card it sends the

505
00:14:04,399 --> 00:14:06,399
id that gets hash to produce the initial

506
00:14:06,399 --> 00:14:07,680
group element

507
00:14:07,680 --> 00:14:09,760
and since the the client isn't able to

508
00:14:09,760 --> 00:14:11,519
kind of invert the hash function

509
00:14:11,519 --> 00:14:14,079
um if you model it as a random oracle

510
00:14:14,079 --> 00:14:16,079
then the client kind of is forced to use

511
00:14:16,079 --> 00:14:17,600
only this initial id

512
00:14:17,600 --> 00:14:20,000
uh and start the punch card at the the

513
00:14:20,000 --> 00:14:20,800
first punch

514
00:14:20,800 --> 00:14:23,040
not uh not somewhere halfway through and

515
00:14:23,040 --> 00:14:24,240
this rules out the attack

516
00:14:24,240 --> 00:14:26,560
from the previous slide so that's kind

517
00:14:26,560 --> 00:14:27,760
of how we get builds up

518
00:14:27,760 --> 00:14:29,920
our our whole scheme um there's some

519
00:14:29,920 --> 00:14:31,120
extensions in the paper that i'll

520
00:14:31,120 --> 00:14:32,480
mention briefly at the end

521
00:14:32,480 --> 00:14:34,160
but but that's it i want to tell you a

522
00:14:34,160 --> 00:14:35,600
little bit about our implementation

523
00:14:35,600 --> 00:14:36,320
though

524
00:14:36,320 --> 00:14:37,760
so what we did is we actually

525
00:14:37,760 --> 00:14:39,600
implemented all of the the crypto in

526
00:14:39,600 --> 00:14:40,160
rust

527
00:14:40,160 --> 00:14:42,800
and then i had a java android wrapper

528
00:14:42,800 --> 00:14:45,199
around that and the main construction is

529
00:14:45,199 --> 00:14:46,399
implemented using

530
00:14:46,399 --> 00:14:49,279
uh the curve 25519 dalek library as the

531
00:14:49,279 --> 00:14:50,480
elliptic curve

532
00:14:50,480 --> 00:14:53,600
and i evaluated this on a pixel one uh

533
00:14:53,600 --> 00:14:54,399
client

534
00:14:54,399 --> 00:14:56,560
for the for the punch card client and

535
00:14:56,560 --> 00:14:58,800
then a rebson thinkpad laptop with an i5

536
00:14:58,800 --> 00:15:01,040
processor as the server

537
00:15:01,040 --> 00:15:03,040
and i evaluated this both on an empty

538
00:15:03,040 --> 00:15:04,959
database of used cards and a database of

539
00:15:04,959 --> 00:15:06,399
a million used cards to see if it

540
00:15:06,399 --> 00:15:07,360
actually made any difference

541
00:15:07,360 --> 00:15:09,600
it turns out it makes really effectively

542
00:15:09,600 --> 00:15:10,639
no difference uh

543
00:15:10,639 --> 00:15:12,160
in performance because this is just one

544
00:15:12,160 --> 00:15:14,480
hash table lookup on the server

545
00:15:14,480 --> 00:15:16,320
so the numbers are kind of comparable

546
00:15:16,320 --> 00:15:18,160
and since in some prior works having a

547
00:15:18,160 --> 00:15:20,000
larger database of previously redeemed

548
00:15:20,000 --> 00:15:21,600
cards is much more expensive

549
00:15:21,600 --> 00:15:23,680
all of this evaluation is done assuming

550
00:15:23,680 --> 00:15:25,279
there's an empty database of used cards

551
00:15:25,279 --> 00:15:26,000
so there's been no

552
00:15:26,000 --> 00:15:27,839
redemptions prior and we're starting to

553
00:15:27,839 --> 00:15:29,519
do redemptions now and this kind of

554
00:15:29,519 --> 00:15:31,279
puts the work we compare to in the best

555
00:15:31,279 --> 00:15:33,199
possible way

556
00:15:33,199 --> 00:15:35,199
here you can see the performance of just

557
00:15:35,199 --> 00:15:36,399
of our scheme

558
00:15:36,399 --> 00:15:38,800
and you can see in the red boxes are

559
00:15:38,800 --> 00:15:40,240
kind of each step of the process so

560
00:15:40,240 --> 00:15:42,160
there's issuance in the first box

561
00:15:42,160 --> 00:15:44,079
um and then the second box is the the

562
00:15:44,079 --> 00:15:45,519
client and server sides of the hole

563
00:15:45,519 --> 00:15:46,240
punching

564
00:15:46,240 --> 00:15:47,759
and then the client and the server sides

565
00:15:47,759 --> 00:15:50,880
of redemption and you can see that in

566
00:15:50,880 --> 00:15:52,959
in computation time the client side is

567
00:15:52,959 --> 00:15:54,160
always more expensive and this is

568
00:15:54,160 --> 00:15:55,600
because the client is a phone

569
00:15:55,600 --> 00:15:58,639
whereas the server is a computer

570
00:15:58,639 --> 00:15:59,519
and you can see the amount of

571
00:15:59,519 --> 00:16:01,680
communication required is really rather

572
00:16:01,680 --> 00:16:02,160
small

573
00:16:02,160 --> 00:16:05,040
for for every part of the protocol so

574
00:16:05,040 --> 00:16:06,320
here we're going to compare

575
00:16:06,320 --> 00:16:07,759
to several of the prior works i

576
00:16:07,759 --> 00:16:09,680
mentioned earlier in the talk

577
00:16:09,680 --> 00:16:12,800
and the prior work is uh is evaluated on

578
00:16:12,800 --> 00:16:13,920
sometimes on different hardware

579
00:16:13,920 --> 00:16:15,120
sometimes slightly worse sometimes

580
00:16:15,120 --> 00:16:16,240
slightly better

581
00:16:16,240 --> 00:16:17,600
um so you know you can take it with a

582
00:16:17,600 --> 00:16:19,600
grain of salt um

583
00:16:19,600 --> 00:16:21,920
but the the main thing to see is that

584
00:16:21,920 --> 00:16:24,320
the the performance improvements we have

585
00:16:24,320 --> 00:16:27,040
are one or even two orders of magnitude

586
00:16:27,040 --> 00:16:27,519
uh

587
00:16:27,519 --> 00:16:30,079
over the other works so of the prior

588
00:16:30,079 --> 00:16:31,120
works bbw

589
00:16:31,120 --> 00:16:32,800
is kind of the the fastest in all

590
00:16:32,800 --> 00:16:35,120
categories and then our work

591
00:16:35,120 --> 00:16:36,639
gets one or two orders of magnitude

592
00:16:36,639 --> 00:16:38,240
improvement over that and you can think

593
00:16:38,240 --> 00:16:39,360
of this as being like this is the

594
00:16:39,360 --> 00:16:41,279
benefit of focusing specifically

595
00:16:41,279 --> 00:16:42,800
on the punch card use case instead of

596
00:16:42,800 --> 00:16:44,560
building something general and trying to

597
00:16:44,560 --> 00:16:45,600
retrofit it for

598
00:16:45,600 --> 00:16:48,959
four punch cards in particular

599
00:16:49,440 --> 00:16:52,399
there's also here uh comparison and

600
00:16:52,399 --> 00:16:54,079
communication only a couple of works

601
00:16:54,079 --> 00:16:56,639
um show the communication cost but you

602
00:16:56,639 --> 00:16:58,399
can see here that we're getting a

603
00:16:58,399 --> 00:17:00,639
uh order of magnitude reduction in

604
00:17:00,639 --> 00:17:02,240
communication compared to prior work as

605
00:17:02,240 --> 00:17:03,519
well

606
00:17:03,519 --> 00:17:05,679
so to wrap up we're able to get the

607
00:17:05,679 --> 00:17:08,480
order of magnitude reduction in

608
00:17:08,480 --> 00:17:10,559
card card punching time as well as

609
00:17:10,559 --> 00:17:12,400
communication and one or two orders of

610
00:17:12,400 --> 00:17:13,119
magnitude

611
00:17:13,119 --> 00:17:15,359
improvement in redemption and this is

612
00:17:15,359 --> 00:17:17,199
and also having qualitative improvements

613
00:17:17,199 --> 00:17:19,119
to better capture the punch card setting

614
00:17:19,119 --> 00:17:20,959
and this is we're able to do this by one

615
00:17:20,959 --> 00:17:22,559
focusing on the punch card setting

616
00:17:22,559 --> 00:17:24,319
to removing need for the need for

617
00:17:24,319 --> 00:17:26,160
pairings or expensive proofs

618
00:17:26,160 --> 00:17:27,760
that are used for kind of more elaborate

619
00:17:27,760 --> 00:17:29,440
functionalities

620
00:17:29,440 --> 00:17:30,880
so you can see the paper for more

621
00:17:30,880 --> 00:17:32,960
details and extensions one extension i

622
00:17:32,960 --> 00:17:34,400
think is worth mentioning is we're able

623
00:17:34,400 --> 00:17:36,080
to use pairings to actually privately

624
00:17:36,080 --> 00:17:38,240
merge partially used punch cards

625
00:17:38,240 --> 00:17:41,120
and this still gets you this still gets

626
00:17:41,120 --> 00:17:42,640
you performance that's better than most

627
00:17:42,640 --> 00:17:44,640
of the prior work as well

628
00:17:44,640 --> 00:17:46,160
the code for the project is available

629
00:17:46,160 --> 00:17:47,520
online and if you have any questions

630
00:17:47,520 --> 00:17:48,799
feel free to contact me

631
00:17:48,799 --> 00:17:55,120
at saba cs.stanford.edu thanks

