1
00:00:00,719 --> 00:00:03,280
so this is holes in the geofence privacy

2
00:00:03,280 --> 00:00:04,240
vulnerabilities

3
00:00:04,240 --> 00:00:07,120
in smart dns services my name is raquel

4
00:00:07,120 --> 00:00:07,759
feinstein

5
00:00:07,759 --> 00:00:10,240
and i did this work with adam j aviv

6
00:00:10,240 --> 00:00:11,280
mika sher

7
00:00:11,280 --> 00:00:15,200
stephen roboto and armand cooler

8
00:00:15,360 --> 00:00:18,800
to start off um let's talk about what

9
00:00:18,800 --> 00:00:20,960
smart dns is some sites only allow

10
00:00:20,960 --> 00:00:23,279
access from specific locations

11
00:00:23,279 --> 00:00:26,320
um as an example as you can see um

12
00:00:26,320 --> 00:00:29,359
hot star only allows a constant

13
00:00:29,359 --> 00:00:32,079
to be accessed from india someone

14
00:00:32,079 --> 00:00:33,680
outside of india say in the us

15
00:00:33,680 --> 00:00:36,719
might get a screen like this this is

16
00:00:36,719 --> 00:00:39,200
generally called geofencing since it

17
00:00:39,200 --> 00:00:40,000
relies on

18
00:00:40,000 --> 00:00:43,280
ipg location so

19
00:00:43,280 --> 00:00:45,200
smart dns are the self-proclaimed

20
00:00:45,200 --> 00:00:46,800
unblockers of the internet

21
00:00:46,800 --> 00:00:49,680
for getting around geofences many of

22
00:00:49,680 --> 00:00:51,760
these companies also offer vpns

23
00:00:51,760 --> 00:00:53,840
alongside of smart dns

24
00:00:53,840 --> 00:00:56,559
and add claims saying their services can

25
00:00:56,559 --> 00:00:57,120
provide

26
00:00:57,120 --> 00:01:00,000
anonymity or privacy which is often

27
00:01:00,000 --> 00:01:00,719
misleading

28
00:01:00,719 --> 00:01:03,920
because sdns offers no such

29
00:01:03,920 --> 00:01:07,280
protection while a vpn might so

30
00:01:07,280 --> 00:01:10,799
why sdns clearly as i just mentioned

31
00:01:10,799 --> 00:01:12,560
sdns isn't the only means by which

32
00:01:12,560 --> 00:01:15,360
someone could bypass a geofence

33
00:01:15,360 --> 00:01:17,600
um so the main reason is quality of

34
00:01:17,600 --> 00:01:18,720
service

35
00:01:18,720 --> 00:01:21,840
while tor for example is more secure

36
00:01:21,840 --> 00:01:25,040
the latency would make it unfeasible for

37
00:01:25,040 --> 00:01:27,600
someone to want to stream video or audio

38
00:01:27,600 --> 00:01:31,280
using it vpns

39
00:01:31,280 --> 00:01:33,280
while they can accommodate video

40
00:01:33,280 --> 00:01:36,560
streaming tend to cost more to use

41
00:01:36,560 --> 00:01:38,880
and they still have some latency so

42
00:01:38,880 --> 00:01:40,240
there could be issues

43
00:01:40,240 --> 00:01:43,439
such as buffering etc that someone faces

44
00:01:43,439 --> 00:01:46,880
while using a vpn because of the added

45
00:01:46,880 --> 00:01:49,759
delay caused by encryption and then

46
00:01:49,759 --> 00:01:51,040
finally

47
00:01:51,040 --> 00:01:54,079
open proxies while they would not pose

48
00:01:54,079 --> 00:01:57,200
that sort of issue to quality of service

49
00:01:57,200 --> 00:02:00,159
might pose two challenges one is they're

50
00:02:00,159 --> 00:02:02,240
potentially dangerous to use

51
00:02:02,240 --> 00:02:04,320
and the second is that they might not

52
00:02:04,320 --> 00:02:05,280
always be

53
00:02:05,280 --> 00:02:08,639
in the area you need to get access

54
00:02:08,639 --> 00:02:09,360
content

55
00:02:09,360 --> 00:02:11,360
so like different services will put up

56
00:02:11,360 --> 00:02:12,879
different geofences

57
00:02:12,879 --> 00:02:15,760
and you need to be in the correct

58
00:02:15,760 --> 00:02:16,800
geofence

59
00:02:16,800 --> 00:02:18,640
to actually be able to access the

60
00:02:18,640 --> 00:02:19,840
content

61
00:02:19,840 --> 00:02:23,360
so along those lines um what if your dns

62
00:02:23,360 --> 00:02:24,480
could determine

63
00:02:24,480 --> 00:02:26,720
which proxy to use to circumvent a given

64
00:02:26,720 --> 00:02:27,599
geofence

65
00:02:27,599 --> 00:02:28,959
and something i'm going to point out

66
00:02:28,959 --> 00:02:31,040
here is that these proxies

67
00:02:31,040 --> 00:02:34,080
are sd s run proxies always

68
00:02:34,080 --> 00:02:37,280
so that's what sdns does it

69
00:02:37,280 --> 00:02:40,239
smartly determines which proxy to use

70
00:02:40,239 --> 00:02:40,640
for

71
00:02:40,640 --> 00:02:44,319
each channel or domain requested

72
00:02:44,319 --> 00:02:46,959
if you were requesting site a you would

73
00:02:46,959 --> 00:02:49,760
likely be sent to some proxy a

74
00:02:49,760 --> 00:02:51,680
but if you were trying to access another

75
00:02:51,680 --> 00:02:53,599
fence site b that was from a different

76
00:02:53,599 --> 00:02:55,840
region you'd likely be sent to another

77
00:02:55,840 --> 00:03:00,400
proxy b let's look at how sdns does this

78
00:03:00,400 --> 00:03:03,360
and as a starting point let's go from

79
00:03:03,360 --> 00:03:04,239
what happens

80
00:03:04,239 --> 00:03:06,560
for someone outside of geofence without

81
00:03:06,560 --> 00:03:08,400
using who does not use

82
00:03:08,400 --> 00:03:11,920
smart dns so um

83
00:03:11,920 --> 00:03:14,720
as normal they would send their request

84
00:03:14,720 --> 00:03:16,560
to their dns resolver

85
00:03:16,560 --> 00:03:19,280
get the correct resolution but when they

86
00:03:19,280 --> 00:03:21,599
try to actually access the content

87
00:03:21,599 --> 00:03:23,440
since their ip registers from being

88
00:03:23,440 --> 00:03:25,120
outside the allowed region

89
00:03:25,120 --> 00:03:26,560
uh they're blocked from actually

90
00:03:26,560 --> 00:03:28,640
accessing the content they want to get

91
00:03:28,640 --> 00:03:31,840
in contrast when someone uses sdns

92
00:03:31,840 --> 00:03:34,799
instead of using the standard dns that

93
00:03:34,799 --> 00:03:37,280
they might get through say dhcp

94
00:03:37,280 --> 00:03:38,560
they send all of their resolution

95
00:03:38,560 --> 00:03:41,120
requests to an sdns resolver

96
00:03:41,120 --> 00:03:44,400
or a dns resolver that is controlled by

97
00:03:44,400 --> 00:03:47,920
the sdns provider so

98
00:03:47,920 --> 00:03:51,200
they send the request but this time the

99
00:03:51,200 --> 00:03:52,959
sdns resolver will check whether they're

100
00:03:52,959 --> 00:03:54,159
a customer

101
00:03:54,159 --> 00:03:57,599
and if they are we'll return

102
00:03:57,599 --> 00:04:00,239
an incorrect resolution here you see

103
00:04:00,239 --> 00:04:02,640
that uh the ip address corresponds

104
00:04:02,640 --> 00:04:06,159
to a proxy that's within the geofence

105
00:04:06,159 --> 00:04:09,280
for the content the client is requesting

106
00:04:09,280 --> 00:04:11,680
uh rather than the actual ip address

107
00:04:11,680 --> 00:04:12,560
that would be the

108
00:04:12,560 --> 00:04:15,280
correct resolution for streaming.net the

109
00:04:15,280 --> 00:04:16,798
client or customer

110
00:04:16,798 --> 00:04:20,000
follows the dns protocol and assumes

111
00:04:20,000 --> 00:04:21,680
that the resolution that they got is

112
00:04:21,680 --> 00:04:22,639
correct

113
00:04:22,639 --> 00:04:25,360
and sends their get request to the proxy

114
00:04:25,360 --> 00:04:26,240
the proxy

115
00:04:26,240 --> 00:04:29,199
then forwards the request to the

116
00:04:29,199 --> 00:04:31,280
streaming site

117
00:04:31,280 --> 00:04:33,440
which responds and the proxy then

118
00:04:33,440 --> 00:04:35,600
forwards that back to the client

119
00:04:35,600 --> 00:04:39,040
something important to uh emphasize

120
00:04:39,040 --> 00:04:44,080
is that we never witnessed or saw

121
00:04:44,080 --> 00:04:45,840
proxies doing any sort of traffic

122
00:04:45,840 --> 00:04:48,400
manipulation or tls men in the middle

123
00:04:48,400 --> 00:04:51,360
they were by and large transparent um

124
00:04:51,360 --> 00:04:52,160
http

125
00:04:52,160 --> 00:04:54,880
proxies that would just forward content

126
00:04:54,880 --> 00:04:56,320
acting as

127
00:04:56,320 --> 00:04:58,160
the server to the client and the client

128
00:04:58,160 --> 00:05:00,000
to the server

129
00:05:00,000 --> 00:05:02,880
as i mentioned before someone who uses

130
00:05:02,880 --> 00:05:05,360
sdns sends all of their dns resolution

131
00:05:05,360 --> 00:05:06,160
requests

132
00:05:06,160 --> 00:05:08,479
to an sdns resolver so for their

133
00:05:08,479 --> 00:05:09,680
internet to work

134
00:05:09,680 --> 00:05:12,560
when they request a non-fenced site uh

135
00:05:12,560 --> 00:05:14,400
the sdns resolver will

136
00:05:14,400 --> 00:05:15,919
actually resolve it correctly they'll

137
00:05:15,919 --> 00:05:18,240
forward it to

138
00:05:18,240 --> 00:05:22,240
the rest of the dns get a response

139
00:05:22,240 --> 00:05:25,600
and return the resolution and again the

140
00:05:25,600 --> 00:05:27,440
customer or client will follow the

141
00:05:27,440 --> 00:05:28,880
protocol

142
00:05:28,880 --> 00:05:31,680
and access the non-fence site directly

143
00:05:31,680 --> 00:05:33,520
with no proxies involved

144
00:05:33,520 --> 00:05:37,199
so i mentioned that the sdns resolver

145
00:05:37,199 --> 00:05:39,680
checks whether a request is coming from

146
00:05:39,680 --> 00:05:41,600
a customer

147
00:05:41,600 --> 00:05:45,520
so by and large sdns uses

148
00:05:45,520 --> 00:05:48,639
the more standard dns over udp

149
00:05:48,639 --> 00:05:50,960
so there's only one unauthenticated

150
00:05:50,960 --> 00:05:52,320
packet that's coming in

151
00:05:52,320 --> 00:05:54,160
so more advanced techniques like adding

152
00:05:54,160 --> 00:05:55,440
cookies or

153
00:05:55,440 --> 00:05:57,120
having some sort of handshake won't work

154
00:05:57,120 --> 00:05:58,479
here

155
00:05:58,479 --> 00:06:02,800
so to that effect i sdns relies on

156
00:06:02,800 --> 00:06:06,000
ip allow lists for authentication

157
00:06:06,000 --> 00:06:09,360
so when the client goes to request if

158
00:06:09,360 --> 00:06:10,800
they are not

159
00:06:10,800 --> 00:06:14,960
a customer they'd send their request

160
00:06:14,960 --> 00:06:17,039
the sdns resolver would check and find

161
00:06:17,039 --> 00:06:18,960
that no their ip is not on the allow

162
00:06:18,960 --> 00:06:21,280
list and they would do one of two things

163
00:06:21,280 --> 00:06:21,840
they would

164
00:06:21,840 --> 00:06:26,319
return either the correct ip resolution

165
00:06:26,319 --> 00:06:28,800
or they would send them to the login

166
00:06:28,800 --> 00:06:29,840
site

167
00:06:29,840 --> 00:06:31,840
for the service that they're attached to

168
00:06:31,840 --> 00:06:34,240
and ask the person to log in and fix

169
00:06:34,240 --> 00:06:36,800
their settings

170
00:06:37,039 --> 00:06:40,560
so with that in mind let's look at how

171
00:06:40,560 --> 00:06:43,600
a customer would set up their system

172
00:06:43,600 --> 00:06:45,120
their local computer

173
00:06:45,120 --> 00:06:48,160
to use smart dns so we say that

174
00:06:48,160 --> 00:06:51,680
they often will set and then forget

175
00:06:51,680 --> 00:06:54,319
based off of these two to three steps

176
00:06:54,319 --> 00:06:55,520
that we're going to outline

177
00:06:55,520 --> 00:06:58,639
so as i mentioned

178
00:06:58,639 --> 00:07:02,400
sdns providers rely on ip allow lists to

179
00:07:02,400 --> 00:07:04,479
discern customers from non-customers

180
00:07:04,479 --> 00:07:06,160
so the first thing a customer needs to

181
00:07:06,160 --> 00:07:08,479
do to be able to use sdns

182
00:07:08,479 --> 00:07:11,360
is once they've created an account to

183
00:07:11,360 --> 00:07:12,800
register their ip

184
00:07:12,800 --> 00:07:15,840
onto the allow list

185
00:07:15,840 --> 00:07:19,199
um once they've done that

186
00:07:19,199 --> 00:07:22,160
any requests sent to an sdns resolver

187
00:07:22,160 --> 00:07:22,800
will

188
00:07:22,800 --> 00:07:26,479
go through as belonging to a customer

189
00:07:26,479 --> 00:07:28,400
so then they need to send all of their

190
00:07:28,400 --> 00:07:30,319
dns resolution requests

191
00:07:30,319 --> 00:07:32,319
to the sdns resolver so for that they

192
00:07:32,319 --> 00:07:34,639
need to change their dns settings

193
00:07:34,639 --> 00:07:37,280
um often from the default which would be

194
00:07:37,280 --> 00:07:37,840
using

195
00:07:37,840 --> 00:07:42,800
the dns resolver provided by dhcp

196
00:07:42,800 --> 00:07:45,840
and um they would go in and

197
00:07:45,840 --> 00:07:49,199
click on advanced manually enter the ips

198
00:07:49,199 --> 00:07:51,840
of the dns resolvers or the sdns

199
00:07:51,840 --> 00:07:54,080
resolvers they want to use for their dns

200
00:07:54,080 --> 00:07:57,360
resolutions and then save those

201
00:07:57,360 --> 00:07:59,039
and then finally they can forget about

202
00:07:59,039 --> 00:08:00,960
it that's essentially step three

203
00:08:00,960 --> 00:08:03,520
um because unlike a vpn where you would

204
00:08:03,520 --> 00:08:04,479
have to

205
00:08:04,479 --> 00:08:07,520
initialize a session and log in and

206
00:08:07,520 --> 00:08:09,199
authenticate and then terminate your

207
00:08:09,199 --> 00:08:10,560
session

208
00:08:10,560 --> 00:08:12,560
whenever you're connected to wi-fi now

209
00:08:12,560 --> 00:08:14,560
you're using sdns because all of your

210
00:08:14,560 --> 00:08:15,759
resolution requests

211
00:08:15,759 --> 00:08:19,199
are being sent to the sdns resolver

212
00:08:19,199 --> 00:08:21,520
so that brings up a few unique

213
00:08:21,520 --> 00:08:22,479
properties

214
00:08:22,479 --> 00:08:25,919
of sdns services the first is that they

215
00:08:25,919 --> 00:08:27,919
don't require any special

216
00:08:27,919 --> 00:08:31,759
software to run as i mentioned before

217
00:08:31,759 --> 00:08:34,479
a client or a customer who's using sdns

218
00:08:34,479 --> 00:08:36,240
is simply running

219
00:08:36,240 --> 00:08:38,159
their side of the dns protocol

220
00:08:38,159 --> 00:08:40,159
faithfully but instead of sending their

221
00:08:40,159 --> 00:08:42,080
dns resolution to

222
00:08:42,080 --> 00:08:46,720
a standard or more known dns resolver

223
00:08:46,720 --> 00:08:50,959
they're sending it to an sdns resolver

224
00:08:50,959 --> 00:08:53,519
and then the second piece is that

225
00:08:53,519 --> 00:08:55,200
there's no robust support for clients

226
00:08:55,200 --> 00:08:56,320
authentication

227
00:08:56,320 --> 00:08:58,480
there's only the ipwhitelist or allow

228
00:08:58,480 --> 00:09:01,600
this that i mentioned before

229
00:09:01,600 --> 00:09:04,000
so as you probably can imagine this last

230
00:09:04,000 --> 00:09:05,519
point means that there are many things

231
00:09:05,519 --> 00:09:08,320
that could potentially go wrong

232
00:09:08,320 --> 00:09:11,519
so our contributions uh to the best of

233
00:09:11,519 --> 00:09:13,360
our knowledge this is the first study of

234
00:09:13,360 --> 00:09:15,120
sdns in the literature

235
00:09:15,120 --> 00:09:17,200
um so we do some analysis of the

236
00:09:17,200 --> 00:09:19,360
landscape and we've identified

237
00:09:19,360 --> 00:09:21,279
numerous privacy risks within these

238
00:09:21,279 --> 00:09:23,839
systems

239
00:09:24,000 --> 00:09:26,000
so before we can go into more detail

240
00:09:26,000 --> 00:09:27,680
it's important to note that there's

241
00:09:27,680 --> 00:09:30,880
a very specific dynamic between

242
00:09:30,880 --> 00:09:33,839
sdns providers and the content providers

243
00:09:33,839 --> 00:09:34,959
who run the channels

244
00:09:34,959 --> 00:09:37,760
that they claim to support here as you

245
00:09:37,760 --> 00:09:39,279
can read it's an ongoing

246
00:09:39,279 --> 00:09:41,839
game of whack-a-mole where the content

247
00:09:41,839 --> 00:09:42,640
providers

248
00:09:42,640 --> 00:09:45,279
tend to be the whackers and the sdns

249
00:09:45,279 --> 00:09:47,279
providers are the moles

250
00:09:47,279 --> 00:09:50,399
so streaming content providers usually

251
00:09:50,399 --> 00:09:52,640
don't own the content they stream or

252
00:09:52,640 --> 00:09:54,560
they don't own all of it

253
00:09:54,560 --> 00:09:58,480
oftentimes the content belongs to

254
00:09:58,480 --> 00:10:01,680
artists or their unions so

255
00:10:01,680 --> 00:10:03,760
the content provider can pay for the

256
00:10:03,760 --> 00:10:05,279
rights to offer

257
00:10:05,279 --> 00:10:08,480
streaming content in a given region

258
00:10:08,480 --> 00:10:11,040
but they can't do it universally so that

259
00:10:11,040 --> 00:10:11,760
contract

260
00:10:11,760 --> 00:10:15,760
is regionally bound so with that in mind

261
00:10:15,760 --> 00:10:17,839
they also are given the contractual

262
00:10:17,839 --> 00:10:18,880
obligation

263
00:10:18,880 --> 00:10:20,880
to stop people outside of the allowed

264
00:10:20,880 --> 00:10:22,560
region from accessing the content

265
00:10:22,560 --> 00:10:23,680
because

266
00:10:23,680 --> 00:10:26,240
there are they don't have the rights to

267
00:10:26,240 --> 00:10:28,399
stream in that location

268
00:10:28,399 --> 00:10:30,880
so a good example might be netflix

269
00:10:30,880 --> 00:10:32,880
offering an american tv show

270
00:10:32,880 --> 00:10:35,680
but they only have the rights to offer

271
00:10:35,680 --> 00:10:36,560
it

272
00:10:36,560 --> 00:10:39,279
in the united states they wouldn't have

273
00:10:39,279 --> 00:10:40,640
the right to offer it

274
00:10:40,640 --> 00:10:44,000
and say canada or australia so someone

275
00:10:44,000 --> 00:10:44,560
who

276
00:10:44,560 --> 00:10:46,320
is trying to access them from there they

277
00:10:46,320 --> 00:10:47,839
have to have a means of

278
00:10:47,839 --> 00:10:50,880
stopping that access

279
00:10:50,880 --> 00:10:54,000
um so that is exactly what sdns is

280
00:10:54,000 --> 00:10:55,120
trying to

281
00:10:55,120 --> 00:10:58,640
allow people to get around so

282
00:10:58,640 --> 00:11:02,000
for sdns providers it's ideal to not be

283
00:11:02,000 --> 00:11:04,320
noticed by the content providers they're

284
00:11:04,320 --> 00:11:07,120
um with the channels they're supporting

285
00:11:07,120 --> 00:11:07,839
and

286
00:11:07,839 --> 00:11:10,160
many of them also are cloud-based uh

287
00:11:10,160 --> 00:11:11,519
because that allows them to

288
00:11:11,519 --> 00:11:14,320
pop up at different places essentially

289
00:11:14,320 --> 00:11:15,920
they can change their ip address really

290
00:11:15,920 --> 00:11:16,720
easily

291
00:11:16,720 --> 00:11:18,399
it becomes that much harder to block

292
00:11:18,399 --> 00:11:19,760
them

293
00:11:19,760 --> 00:11:22,959
so by and large what we found that was

294
00:11:22,959 --> 00:11:24,480
that despite

295
00:11:24,480 --> 00:11:26,880
sdns providers best efforts to look

296
00:11:26,880 --> 00:11:28,079
professional

297
00:11:28,079 --> 00:11:31,920
and really good at security on

298
00:11:31,920 --> 00:11:34,079
the surface their systems were not

299
00:11:34,079 --> 00:11:36,160
nearly as well configured as they

300
00:11:36,160 --> 00:11:39,600
may have appeared specifically we're

301
00:11:39,600 --> 00:11:41,040
going to talk about two flavors of

302
00:11:41,040 --> 00:11:42,959
attacks

303
00:11:42,959 --> 00:11:45,680
one is going to be attacks against sdns

304
00:11:45,680 --> 00:11:46,880
customers

305
00:11:46,880 --> 00:11:49,120
and we'll cover de-proxying by content

306
00:11:49,120 --> 00:11:50,079
providers

307
00:11:50,079 --> 00:11:52,880
and ip enumeration of all customers and

308
00:11:52,880 --> 00:11:53,600
then against

309
00:11:53,600 --> 00:11:56,880
sdns providers we'll also talk about

310
00:11:56,880 --> 00:11:58,639
again the deproxy by the content

311
00:11:58,639 --> 00:12:00,959
provider and freeloading by would-be

312
00:12:00,959 --> 00:12:02,639
customers

313
00:12:02,639 --> 00:12:05,120
so attacks against customers so as a

314
00:12:05,120 --> 00:12:06,720
reminder

315
00:12:06,720 --> 00:12:09,040
sdns customers are able to access

316
00:12:09,040 --> 00:12:10,880
geofence content by having their

317
00:12:10,880 --> 00:12:13,760
requests routed to sdns proxies through

318
00:12:13,760 --> 00:12:14,000
an

319
00:12:14,000 --> 00:12:18,000
incorrect dns resolution um so

320
00:12:18,000 --> 00:12:20,160
um it generally has a pattern that looks

321
00:12:20,160 --> 00:12:21,519
as follows when

322
00:12:21,519 --> 00:12:24,800
a customer goes to fetch a supported

323
00:12:24,800 --> 00:12:25,440
channel

324
00:12:25,440 --> 00:12:28,000
however if the streaming content

325
00:12:28,000 --> 00:12:28,639
provider

326
00:12:28,639 --> 00:12:30,720
were to embed an object within their

327
00:12:30,720 --> 00:12:32,160
website or

328
00:12:32,160 --> 00:12:36,320
content um that was fetched directly

329
00:12:36,320 --> 00:12:38,880
or from their ip address and completely

330
00:12:38,880 --> 00:12:39,920
circumvented

331
00:12:39,920 --> 00:12:44,320
dns then the client or the customer

332
00:12:44,320 --> 00:12:47,360
would fetch that directly so in the case

333
00:12:47,360 --> 00:12:48,639
that

334
00:12:48,639 --> 00:12:51,360
a customer is trying to access fenced

335
00:12:51,360 --> 00:12:52,160
content

336
00:12:52,160 --> 00:12:54,560
they would send the majority of their

337
00:12:54,560 --> 00:12:56,160
requests through the proxy

338
00:12:56,160 --> 00:12:57,760
and then they would request that one

339
00:12:57,760 --> 00:13:00,320
embedded web object

340
00:13:00,320 --> 00:13:02,399
directly from the streaming content

341
00:13:02,399 --> 00:13:03,600
provider

342
00:13:03,600 --> 00:13:04,800
and this would allow the content

343
00:13:04,800 --> 00:13:06,959
provider to see that the customer's

344
00:13:06,959 --> 00:13:08,160
actual ip address

345
00:13:08,160 --> 00:13:09,920
is not the address that they were using

346
00:13:09,920 --> 00:13:11,839
to fetch the majority of the

347
00:13:11,839 --> 00:13:15,120
um streaming content and in that way

348
00:13:15,120 --> 00:13:17,600
they'd be able to identify

349
00:13:17,600 --> 00:13:21,040
the actual ip address of the customer

350
00:13:21,040 --> 00:13:22,720
and tell that no they're actually

351
00:13:22,720 --> 00:13:24,079
outside of the

352
00:13:24,079 --> 00:13:26,399
fence geofence and shouldn't access this

353
00:13:26,399 --> 00:13:27,440
content

354
00:13:27,440 --> 00:13:31,120
in addition um a third party could

355
00:13:31,120 --> 00:13:32,160
enumerate

356
00:13:32,160 --> 00:13:35,600
all customers of an sdns service

357
00:13:35,600 --> 00:13:38,959
by ip address remember that sdns

358
00:13:38,959 --> 00:13:40,079
resolvers use

359
00:13:40,079 --> 00:13:42,639
ip allow lists to distinguish customers

360
00:13:42,639 --> 00:13:43,920
from non-customers

361
00:13:43,920 --> 00:13:46,480
and that some providers sdns resolvers

362
00:13:46,480 --> 00:13:47,440
will not provide

363
00:13:47,440 --> 00:13:50,800
an sdns a dns resolution excuse me

364
00:13:50,800 --> 00:13:53,920
um to requests from unrecognized ips

365
00:13:53,920 --> 00:13:56,639
so this attack exploits that here an

366
00:13:56,639 --> 00:13:57,920
attacker is going to

367
00:13:57,920 --> 00:14:01,760
repeat this attack numerous times to

368
00:14:01,760 --> 00:14:05,120
iterate over a large swath of the ipv4

369
00:14:05,120 --> 00:14:06,079
namespace or the

370
00:14:06,079 --> 00:14:08,240
or its entirety to get a comprehensive

371
00:14:08,240 --> 00:14:09,120
list

372
00:14:09,120 --> 00:14:12,320
of the ip addresses of customers so

373
00:14:12,320 --> 00:14:14,639
for each iteration um the attacker is

374
00:14:14,639 --> 00:14:16,320
going to choose

375
00:14:16,320 --> 00:14:18,959
a candidate i p address to test in this

376
00:14:18,959 --> 00:14:19,680
case

377
00:14:19,680 --> 00:14:22,639
um 1.2.3.4 and the attacker is going to

378
00:14:22,639 --> 00:14:23,839
forge a request

379
00:14:23,839 --> 00:14:27,040
from uniqueid.attacker.net

380
00:14:27,040 --> 00:14:30,639
supposedly from that address and so then

381
00:14:30,639 --> 00:14:33,440
the sdns resolver is going to check the

382
00:14:33,440 --> 00:14:35,920
ip address against its allowed list

383
00:14:35,920 --> 00:14:38,320
and so in the case that um it's not a

384
00:14:38,320 --> 00:14:39,760
customer

385
00:14:39,760 --> 00:14:42,880
it will not resolve and so while

386
00:14:42,880 --> 00:14:46,399
the client who would be the actual owner

387
00:14:46,399 --> 00:14:47,120
of

388
00:14:47,120 --> 00:14:50,720
or the person actually at 1.2.3.44

389
00:14:50,720 --> 00:14:52,399
um might get a response saying please

390
00:14:52,399 --> 00:14:54,000
log into sdns

391
00:14:54,000 --> 00:14:57,199
um they're probably going to ignore it

392
00:14:57,199 --> 00:15:00,480
however if the attacker were to try

393
00:15:00,480 --> 00:15:04,880
and 1.2.3.44 did belong to a customer

394
00:15:04,880 --> 00:15:07,360
then the sdns resolver would have to

395
00:15:07,360 --> 00:15:08,720
find a resolution

396
00:15:08,720 --> 00:15:11,519
for this request and so it would then

397
00:15:11,519 --> 00:15:13,199
forward its request

398
00:15:13,199 --> 00:15:16,399
to the actual dns

399
00:15:16,399 --> 00:15:18,079
which means that the request would

400
00:15:18,079 --> 00:15:19,519
propagate to the attacker's

401
00:15:19,519 --> 00:15:21,120
authoritative name server

402
00:15:21,120 --> 00:15:23,839
before returning to the sdns resolver

403
00:15:23,839 --> 00:15:25,440
and being sent to the client

404
00:15:25,440 --> 00:15:28,160
and promptly discarded um what's

405
00:15:28,160 --> 00:15:29,920
important to keep in mind though

406
00:15:29,920 --> 00:15:32,079
is that once the request propagates to

407
00:15:32,079 --> 00:15:33,600
the authoritative name server

408
00:15:33,600 --> 00:15:36,800
the attacker now has a record of a query

409
00:15:36,800 --> 00:15:38,199
for

410
00:15:38,199 --> 00:15:39,759
uniquestring.attacker.net which the

411
00:15:39,759 --> 00:15:40,480
attacker can

412
00:15:40,480 --> 00:15:44,320
um map back to um the client ip

413
00:15:44,320 --> 00:15:47,839
in this case 1.2.3.44 and conclude okay

414
00:15:47,839 --> 00:15:50,480
that ip address belongs to a customer

415
00:15:50,480 --> 00:15:52,560
we should all i should also mention that

416
00:15:52,560 --> 00:15:54,399
we verified this with a proof of concept

417
00:15:54,399 --> 00:15:55,279
against ourselves

418
00:15:55,279 --> 00:15:58,399
and we found that this flaw

419
00:15:58,399 --> 00:16:00,720
was present within i believe four

420
00:16:00,720 --> 00:16:02,160
providers

421
00:16:02,160 --> 00:16:06,000
um we disclosed this uh flaw to them

422
00:16:06,000 --> 00:16:08,480
and one of the providers did actually

423
00:16:08,480 --> 00:16:09,360
remedy

424
00:16:09,360 --> 00:16:11,519
uh this issue within 24 hours of our

425
00:16:11,519 --> 00:16:12,880
disclosure

426
00:16:12,880 --> 00:16:15,680
so attacks against sdns providers

427
00:16:15,680 --> 00:16:18,000
revisiting the deproxy attack

428
00:16:18,000 --> 00:16:21,040
we saw that the content provider

429
00:16:21,040 --> 00:16:24,720
had both the ip address of the client or

430
00:16:24,720 --> 00:16:27,600
customer as well as that used by the

431
00:16:27,600 --> 00:16:29,120
client to access the majority of the

432
00:16:29,120 --> 00:16:29,680
content

433
00:16:29,680 --> 00:16:32,560
on their page um in this case that would

434
00:16:32,560 --> 00:16:33,199
be

435
00:16:33,199 --> 00:16:36,720
the sdns proxies ip

436
00:16:36,720 --> 00:16:38,880
which means that by performing this

437
00:16:38,880 --> 00:16:41,279
attack the content provider not only

438
00:16:41,279 --> 00:16:42,399
identifies

439
00:16:42,399 --> 00:16:45,759
which client is using sdns

440
00:16:45,759 --> 00:16:48,880
but also identifies the proxies

441
00:16:48,880 --> 00:16:51,519
for sdns providers and can block them in

442
00:16:51,519 --> 00:16:52,800
real time

443
00:16:52,800 --> 00:16:56,240
in addition not all of the sdns

444
00:16:56,240 --> 00:16:59,839
proxies are configured properly

445
00:16:59,839 --> 00:17:03,360
specifically when a customer goes

446
00:17:03,360 --> 00:17:06,480
and requests a resolution the sdns

447
00:17:06,480 --> 00:17:08,079
resolver will check whether they're a

448
00:17:08,079 --> 00:17:10,880
customer by

449
00:17:10,880 --> 00:17:13,599
consulting the ip allow list but in some

450
00:17:13,599 --> 00:17:14,240
cases

451
00:17:14,240 --> 00:17:17,439
the proxy does not so what that means

452
00:17:17,439 --> 00:17:20,720
is that someone who's not a customer say

453
00:17:20,720 --> 00:17:24,559
uncle penny bags um could then

454
00:17:24,559 --> 00:17:26,480
potentially take advantage of this again

455
00:17:26,480 --> 00:17:28,480
if uncle penny bags were to send a dns

456
00:17:28,480 --> 00:17:29,679
resolution

457
00:17:29,679 --> 00:17:32,320
um to the sdns resolver he would either

458
00:17:32,320 --> 00:17:32,799
get

459
00:17:32,799 --> 00:17:35,280
the correct resolution or he would get

460
00:17:35,280 --> 00:17:38,240
the request to please log into sdns

461
00:17:38,240 --> 00:17:41,280
however if uncle pennybags

462
00:17:41,280 --> 00:17:43,919
knew the ip address of the proxy he

463
00:17:43,919 --> 00:17:44,640
could send

464
00:17:44,640 --> 00:17:47,919
that get request directly to the proxy

465
00:17:47,919 --> 00:17:49,520
and get that exact same behavior as

466
00:17:49,520 --> 00:17:51,120
though he were a customer

467
00:17:51,120 --> 00:17:53,600
so as i mentioned before there are

468
00:17:53,600 --> 00:17:55,679
additional attacks that are not covered

469
00:17:55,679 --> 00:17:58,480
in this talk but that we find against

470
00:17:58,480 --> 00:18:00,160
sdns services

471
00:18:00,160 --> 00:18:02,320
um including uh an increased risk of

472
00:18:02,320 --> 00:18:03,360
traffic analysis

473
00:18:03,360 --> 00:18:06,960
and um the presence of a proxied content

474
00:18:06,960 --> 00:18:08,320
that's not advertised

475
00:18:08,320 --> 00:18:11,919
for customers and sdns providers facing

476
00:18:11,919 --> 00:18:13,600
potential exposure to analytics about

477
00:18:13,600 --> 00:18:15,280
their users

478
00:18:15,280 --> 00:18:18,559
through a dns cache enumeration attack

479
00:18:18,559 --> 00:18:21,919
so finally what does this mean um there

480
00:18:21,919 --> 00:18:22,400
are

481
00:18:22,400 --> 00:18:25,200
many vulnerabilities in sdns as we

482
00:18:25,200 --> 00:18:26,720
pointed out

483
00:18:26,720 --> 00:18:28,320
some of them have to do with

484
00:18:28,320 --> 00:18:30,000
misconfiguration but

485
00:18:30,000 --> 00:18:32,400
many of them are bound to persist for

486
00:18:32,400 --> 00:18:33,840
the foreseeable future

487
00:18:33,840 --> 00:18:35,840
for example i mentioned the use of

488
00:18:35,840 --> 00:18:37,440
standard udp

489
00:18:37,440 --> 00:18:40,799
based dns and

490
00:18:40,799 --> 00:18:43,200
while that wouldn't be the case using

491
00:18:43,200 --> 00:18:45,120
doh or dot

492
00:18:45,120 --> 00:18:48,320
um neither doh nor dot is supported by

493
00:18:48,320 --> 00:18:50,000
all major operating systems at this

494
00:18:50,000 --> 00:18:50,960
point in time

495
00:18:50,960 --> 00:18:53,919
so that would mean the inherent behavior

496
00:18:53,919 --> 00:18:54,799
of this

497
00:18:54,799 --> 00:18:56,880
lack of authenticate of robust

498
00:18:56,880 --> 00:18:58,240
authentication

499
00:18:58,240 --> 00:19:01,600
is bound to persist for an extended

500
00:19:01,600 --> 00:19:02,799
period of time

501
00:19:02,799 --> 00:19:05,840
in summary uh sc

502
00:19:05,840 --> 00:19:07,919
s offers geofence or convention but it

503
00:19:07,919 --> 00:19:10,480
does so at a high cost privacy

504
00:19:10,480 --> 00:19:12,720
so customers will face threats of ip

505
00:19:12,720 --> 00:19:14,000
enumeration

506
00:19:14,000 --> 00:19:17,120
sdns provider misbehavior and then sdns

507
00:19:17,120 --> 00:19:18,960
providers will face threats of real-time

508
00:19:18,960 --> 00:19:20,960
proxy discovery

509
00:19:20,960 --> 00:19:23,919
payment circumvention and possibly of

510
00:19:23,919 --> 00:19:26,400
dns cache enumeration as we talk about

511
00:19:26,400 --> 00:19:26,720
more

512
00:19:26,720 --> 00:19:31,440
in the paper um thank you very much

513
00:19:31,440 --> 00:19:32,720
please let me know if you have any

514
00:19:32,720 --> 00:19:35,600
questions

