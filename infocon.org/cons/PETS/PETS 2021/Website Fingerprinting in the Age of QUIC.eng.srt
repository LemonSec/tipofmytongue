1
00:00:00,719 --> 00:00:02,639
hello everyone my name is jean-pierre

2
00:00:02,639 --> 00:00:05,759
smith i'm a phd student at etihad zurich

3
00:00:05,759 --> 00:00:07,200
and i'm happy to have the opportunity

4
00:00:07,200 --> 00:00:09,040
today to talk to you about website

5
00:00:09,040 --> 00:00:10,880
fingerprinting in the age of quick

6
00:00:10,880 --> 00:00:13,360
which is a paper co-authored by myself

7
00:00:13,360 --> 00:00:15,280
professor petite mittal of princeton

8
00:00:15,280 --> 00:00:17,039
university and professor agent perrigov

9
00:00:17,039 --> 00:00:18,880
etihazzuric

10
00:00:18,880 --> 00:00:21,359
now originally an adversary who is

11
00:00:21,359 --> 00:00:22,960
located in the network and who is

12
00:00:22,960 --> 00:00:24,320
interested in

13
00:00:24,320 --> 00:00:26,800
identifying which web page a user is

14
00:00:26,800 --> 00:00:27,680
visiting

15
00:00:27,680 --> 00:00:30,880
could do so by observing the content of

16
00:00:30,880 --> 00:00:32,320
the communication between the user and

17
00:00:32,320 --> 00:00:33,760
the web server

18
00:00:33,760 --> 00:00:35,920
to counteract this the communication was

19
00:00:35,920 --> 00:00:38,320
encrypted using ssl tls and while the

20
00:00:38,320 --> 00:00:40,000
content was no longer available to the

21
00:00:40,000 --> 00:00:40,879
adversary

22
00:00:40,879 --> 00:00:42,719
he could still discern which web page

23
00:00:42,719 --> 00:00:44,000
was being visited

24
00:00:44,000 --> 00:00:45,920
by observing the destination ip address

25
00:00:45,920 --> 00:00:47,280
certificates and the

26
00:00:47,280 --> 00:00:49,760
server name indicator provided from the

27
00:00:49,760 --> 00:00:51,680
user to the web server

28
00:00:51,680 --> 00:00:53,920
privacy conscious users therefore turn

29
00:00:53,920 --> 00:00:56,559
towards privacy enhancing technologies

30
00:00:56,559 --> 00:01:01,039
such as vpns and anonymity networks

31
00:01:01,039 --> 00:01:03,359
however these privacy-enhancing

32
00:01:03,359 --> 00:01:04,799
technologies still leak communication

33
00:01:04,799 --> 00:01:06,799
metadata that is packet sizes timestamps

34
00:01:06,799 --> 00:01:08,240
and directions and this

35
00:01:08,240 --> 00:01:11,119
these form the basis of network-based

36
00:01:11,119 --> 00:01:12,720
website fingerprinting attacks which the

37
00:01:12,720 --> 00:01:15,040
adversary can still use to identify

38
00:01:15,040 --> 00:01:18,320
which web page is being visited so in a

39
00:01:18,320 --> 00:01:19,840
network-based website fingerprinting

40
00:01:19,840 --> 00:01:21,920
attack the adversary who is located on

41
00:01:21,920 --> 00:01:23,439
the encrypted communication channel

42
00:01:23,439 --> 00:01:25,360
between the user and the entry point to

43
00:01:25,360 --> 00:01:26,080
the

44
00:01:26,080 --> 00:01:29,119
privacy enhancing technology observes a

45
00:01:29,119 --> 00:01:31,200
sequence of packet sizes timestamps and

46
00:01:31,200 --> 00:01:32,320
directions

47
00:01:32,320 --> 00:01:35,520
he feeds this metadata to

48
00:01:35,520 --> 00:01:37,200
a feature extraction process which

49
00:01:37,200 --> 00:01:39,840
extracts details such as the total

50
00:01:39,840 --> 00:01:41,200
transmission time

51
00:01:41,200 --> 00:01:44,799
or the total transmission size

52
00:01:44,799 --> 00:01:47,920
or distribution of packet sizes etc and

53
00:01:47,920 --> 00:01:49,680
these features are then fed to a

54
00:01:49,680 --> 00:01:51,360
pre-trained classifier

55
00:01:51,360 --> 00:01:54,079
this classifier informs the adversary

56
00:01:54,079 --> 00:01:55,920
whether the metadata is associated with

57
00:01:55,920 --> 00:01:58,560
one of the pages he's interested in

58
00:01:58,560 --> 00:02:00,399
detect to which he's interested in

59
00:02:00,399 --> 00:02:01,759
detecting visits that is one of his

60
00:02:01,759 --> 00:02:03,119
monitored web pages

61
00:02:03,119 --> 00:02:05,200
or if it belongs to some other unwanted

62
00:02:05,200 --> 00:02:06,240
web page

63
00:02:06,240 --> 00:02:07,840
now there has been quite a bit of work

64
00:02:07,840 --> 00:02:09,758
in the area of network based website

65
00:02:09,758 --> 00:02:10,800
fingerprinting

66
00:02:10,800 --> 00:02:12,640
in both attacks and defenses however

67
00:02:12,640 --> 00:02:14,879
most of this work has focused on the tcp

68
00:02:14,879 --> 00:02:16,080
setting

69
00:02:16,080 --> 00:02:17,599
at this moment however the web is

70
00:02:17,599 --> 00:02:19,120
undergoing a transition and that

71
00:02:19,120 --> 00:02:22,319
transition is from tcp to quick

72
00:02:22,319 --> 00:02:25,920
quick is a udp udb udp based multipath

73
00:02:25,920 --> 00:02:27,120
multiplex transport

74
00:02:27,120 --> 00:02:30,560
protocol that was first deployed by

75
00:02:30,560 --> 00:02:32,319
google but has now been standardized

76
00:02:32,319 --> 00:02:34,640
at the ietf and is slated to be the only

77
00:02:34,640 --> 00:02:36,000
protocol that supports the next

78
00:02:36,000 --> 00:02:39,360
generation of http http3 and while

79
00:02:39,360 --> 00:02:41,360
quick is similar to tcp in that it is

80
00:02:41,360 --> 00:02:42,400
conduction controlled

81
00:02:42,400 --> 00:02:44,480
and it performs reliable delivery it

82
00:02:44,480 --> 00:02:45,599
differs from tcp

83
00:02:45,599 --> 00:02:48,640
in a number of ways for example in tcp

84
00:02:48,640 --> 00:02:50,720
a single in-order flow control by stream

85
00:02:50,720 --> 00:02:52,080
is provided from the client to the

86
00:02:52,080 --> 00:02:52,800
server

87
00:02:52,800 --> 00:02:54,959
whereas in quick multiple byte streams

88
00:02:54,959 --> 00:02:57,120
are sent over a single connection

89
00:02:57,120 --> 00:02:58,560
and these byte streams are all

90
00:02:58,560 --> 00:03:00,959
individually flow control and a loss on

91
00:03:00,959 --> 00:03:01,440
one

92
00:03:01,440 --> 00:03:04,000
stream does not does not affect the

93
00:03:04,000 --> 00:03:06,640
transmissions on another stream

94
00:03:06,640 --> 00:03:10,959
furthermore in tcp

95
00:03:10,959 --> 00:03:12,640
primarily only the data of the

96
00:03:12,640 --> 00:03:15,120
transmission was encrypted by tls

97
00:03:15,120 --> 00:03:16,800
and this allowed an adversary who is

98
00:03:16,800 --> 00:03:18,959
cleaning his data to perform his website

99
00:03:18,959 --> 00:03:20,319
fingerprinting attacks

100
00:03:20,319 --> 00:03:22,239
to easily remove control messages

101
00:03:22,239 --> 00:03:24,720
control packets and acknowledgements

102
00:03:24,720 --> 00:03:27,280
in quick however packet numbers

103
00:03:27,280 --> 00:03:29,200
acknowledgements control messages are

104
00:03:29,200 --> 00:03:29,440
all

105
00:03:29,440 --> 00:03:31,760
encrypted alongside the data and are all

106
00:03:31,760 --> 00:03:33,040
variable length

107
00:03:33,040 --> 00:03:33,920
and what this means is that the

108
00:03:33,920 --> 00:03:36,080
adversary can no longer simply discard a

109
00:03:36,080 --> 00:03:38,159
packet knowing for certainty like it is

110
00:03:38,159 --> 00:03:39,680
a control packet and not

111
00:03:39,680 --> 00:03:42,720
a small data packet

112
00:03:43,360 --> 00:03:45,840
furthermore connections in quick are

113
00:03:45,840 --> 00:03:48,000
established in zero to two rtts whereas

114
00:03:48,000 --> 00:03:49,840
connections in tcp are established in

115
00:03:49,840 --> 00:03:51,200
one to three rdts

116
00:03:51,200 --> 00:03:52,560
this means that patterns which are

117
00:03:52,560 --> 00:03:54,239
observed in the communication between

118
00:03:54,239 --> 00:03:55,760
the client and the web server

119
00:03:55,760 --> 00:03:57,280
may occur at different times in the

120
00:03:57,280 --> 00:03:59,280
connection and may be

121
00:03:59,280 --> 00:04:00,720
it forward or backward depending on

122
00:04:00,720 --> 00:04:02,159
which protocol is being used and can

123
00:04:02,159 --> 00:04:04,000
therefore affect the adversary's

124
00:04:04,000 --> 00:04:05,840
approach in

125
00:04:05,840 --> 00:04:07,200
extracting features from the

126
00:04:07,200 --> 00:04:09,040
communication he witnesses

127
00:04:09,040 --> 00:04:11,920
and finally whereas in originally in the

128
00:04:11,920 --> 00:04:14,239
internet when an adversary observed

129
00:04:14,239 --> 00:04:15,760
the loading of a web page you would know

130
00:04:15,760 --> 00:04:17,279
that most of that this was

131
00:04:17,279 --> 00:04:19,918
solely tcp connections within that

132
00:04:19,918 --> 00:04:21,358
corresponding to the metadata he's

133
00:04:21,358 --> 00:04:22,320
observing

134
00:04:22,320 --> 00:04:23,840
however due to quick's backwards

135
00:04:23,840 --> 00:04:26,240
compatibility and future support

136
00:04:26,240 --> 00:04:28,000
quick backward compatibility with tcp

137
00:04:28,000 --> 00:04:30,320
that is when a browser loads

138
00:04:30,320 --> 00:04:33,440
a web page it loads the html page and

139
00:04:33,440 --> 00:04:35,360
this html page may load dependent

140
00:04:35,360 --> 00:04:36,560
resources

141
00:04:36,560 --> 00:04:40,080
the html page may be loaded using quick

142
00:04:40,080 --> 00:04:42,160
however the dependent resources may

143
00:04:42,160 --> 00:04:44,560
still need to be loaded using tcp as the

144
00:04:44,560 --> 00:04:46,720
remote servers which they are located on

145
00:04:46,720 --> 00:04:50,240
may not yet support quick an adversary

146
00:04:50,240 --> 00:04:53,120
that observes metadata in the network

147
00:04:53,120 --> 00:04:54,479
therefore announced account for the fact

148
00:04:54,479 --> 00:04:56,000
that this metadata may come from

149
00:04:56,000 --> 00:04:58,800
both quick and tcp connections within

150
00:04:58,800 --> 00:04:59,840
the same

151
00:04:59,840 --> 00:05:02,720
for the same web page load so what we

152
00:05:02,720 --> 00:05:04,240
ask in this work is given all of these

153
00:05:04,240 --> 00:05:05,919
changes between the tcp and quick

154
00:05:05,919 --> 00:05:07,600
protocol

155
00:05:07,600 --> 00:05:09,280
how might the website fingerprinting

156
00:05:09,280 --> 00:05:10,960
landscape change with the introduction

157
00:05:10,960 --> 00:05:12,880
of quick

158
00:05:12,880 --> 00:05:14,560
to answer this question we use the

159
00:05:14,560 --> 00:05:16,160
similar procedure that the adversary

160
00:05:16,160 --> 00:05:17,280
uses

161
00:05:17,280 --> 00:05:20,479
when performing his attacks that is

162
00:05:20,479 --> 00:05:23,280
we created an setup for collecting a

163
00:05:23,280 --> 00:05:24,800
large data set of

164
00:05:24,800 --> 00:05:27,039
website fingerprinting samples to which

165
00:05:27,039 --> 00:05:27,919
adversary

166
00:05:27,919 --> 00:05:29,520
on which the adversary can train his

167
00:05:29,520 --> 00:05:31,520
classifier and in our setup the

168
00:05:31,520 --> 00:05:33,520
adversary is located on the encrypted

169
00:05:33,520 --> 00:05:35,919
communication between the user and a vpn

170
00:05:35,919 --> 00:05:37,199
gateway

171
00:05:37,199 --> 00:05:40,479
our vpn gateway was located in new york

172
00:05:40,479 --> 00:05:43,120
frankfurt and bengaluru india

173
00:05:43,120 --> 00:05:46,080
and this provided for a variety of

174
00:05:46,080 --> 00:05:48,320
network conditions

175
00:05:48,320 --> 00:05:50,240
the user was emulated using the

176
00:05:50,240 --> 00:05:52,080
orchestration of the chromium browser

177
00:05:52,080 --> 00:05:54,000
and the adversary would observe either

178
00:05:54,000 --> 00:05:55,520
the user loading a web page

179
00:05:55,520 --> 00:05:58,240
using tcp only or the user loading the

180
00:05:58,240 --> 00:05:59,440
web page

181
00:05:59,440 --> 00:06:01,600
using quick and potentially with

182
00:06:01,600 --> 00:06:03,120
dependent resources

183
00:06:03,120 --> 00:06:07,280
using tcp then

184
00:06:07,280 --> 00:06:09,280
the adversary constructed using this

185
00:06:09,280 --> 00:06:11,280
setup a data set of a hundred monitored

186
00:06:11,280 --> 00:06:12,400
web pages

187
00:06:12,400 --> 00:06:13,840
these are the web pages he's interested

188
00:06:13,840 --> 00:06:15,840
in identifying visits

189
00:06:15,840 --> 00:06:19,360
of and 16 000 unmonitored web pages and

190
00:06:19,360 --> 00:06:21,520
these he uses to train the classifier to

191
00:06:21,520 --> 00:06:22,080
ignore

192
00:06:22,080 --> 00:06:25,360
samples now

193
00:06:25,360 --> 00:06:27,680
for the classifier itself we use the kfp

194
00:06:27,680 --> 00:06:29,919
dfpfbc and varsity and classifiers which

195
00:06:29,919 --> 00:06:30,800
are all

196
00:06:30,800 --> 00:06:32,160
modern website fingerprinting

197
00:06:32,160 --> 00:06:33,680
classifiers the latter three of which

198
00:06:33,680 --> 00:06:35,840
are all deep learning classifiers

199
00:06:35,840 --> 00:06:38,160
and therefore learn features from the

200
00:06:38,160 --> 00:06:39,759
raw data

201
00:06:39,759 --> 00:06:42,160
this is effective in this setting where

202
00:06:42,160 --> 00:06:43,440
the

203
00:06:43,440 --> 00:06:45,280
where the traces belong to two different

204
00:06:45,280 --> 00:06:46,800
protocols and therefore

205
00:06:46,800 --> 00:06:48,560
different features may need to be

206
00:06:48,560 --> 00:06:49,919
learned

207
00:06:49,919 --> 00:06:51,280
for each of these classifiers we

208
00:06:51,280 --> 00:06:53,759
measured recall which is the fraction of

209
00:06:53,759 --> 00:06:55,280
the monitored samples which

210
00:06:55,280 --> 00:06:58,639
the adversary is which the fraction of

211
00:06:58,639 --> 00:07:00,160
the monthly samples which the adversary

212
00:07:00,160 --> 00:07:02,319
is able to detect and

213
00:07:02,319 --> 00:07:05,840
precision which is the fraction

214
00:07:05,840 --> 00:07:08,000
of those samples which the ad which the

215
00:07:08,000 --> 00:07:10,160
classifier claims to be

216
00:07:10,160 --> 00:07:11,759
monitored that are actually correctly

217
00:07:11,759 --> 00:07:14,319
labeled as monitored

218
00:07:14,319 --> 00:07:16,960
here we use r20 precision as it allows

219
00:07:16,960 --> 00:07:18,479
us to fix

220
00:07:18,479 --> 00:07:21,199
the number of unmonitored visits for

221
00:07:21,199 --> 00:07:23,280
every monitored visit that the user does

222
00:07:23,280 --> 00:07:25,280
in the computation of our metric and

223
00:07:25,280 --> 00:07:26,560
this beta emulates

224
00:07:26,560 --> 00:07:30,240
or lists better emulates or

225
00:07:30,240 --> 00:07:32,080
user in the real world which would not

226
00:07:32,080 --> 00:07:33,599
visit

227
00:07:33,599 --> 00:07:35,039
monitored and unwanted samples in the

228
00:07:35,039 --> 00:07:37,840
same ratio as our data set

229
00:07:37,840 --> 00:07:39,280
with this setup the first question that

230
00:07:39,280 --> 00:07:41,199
we saw to answer was do tcp train

231
00:07:41,199 --> 00:07:41,840
classifiers

232
00:07:41,840 --> 00:07:44,560
take quick visits that is assuming that

233
00:07:44,560 --> 00:07:46,879
the web has now deployed quick

234
00:07:46,879 --> 00:07:49,360
and the web pages that the adversary or

235
00:07:49,360 --> 00:07:51,120
the websites that adversary is

236
00:07:51,120 --> 00:07:53,360
interested in detecting support both

237
00:07:53,360 --> 00:07:56,240
quick and tcp

238
00:07:56,240 --> 00:07:58,400
but the adversary has not yet updated

239
00:07:58,400 --> 00:07:59,440
his collection

240
00:07:59,440 --> 00:08:01,199
or his approach to incorporate the quick

241
00:08:01,199 --> 00:08:03,039
protocol potentially because he believes

242
00:08:03,039 --> 00:08:04,639
it is not necessary as it is the same

243
00:08:04,639 --> 00:08:06,160
web page being loaded and the protocols

244
00:08:06,160 --> 00:08:08,479
may not be all that different

245
00:08:08,479 --> 00:08:11,120
how does this actually how does

246
00:08:11,120 --> 00:08:12,400
adversary actually perform in this

247
00:08:12,400 --> 00:08:13,120
setting

248
00:08:13,120 --> 00:08:14,400
and what we found was here the

249
00:08:14,400 --> 00:08:16,960
underlying transport protocol matters

250
00:08:16,960 --> 00:08:19,520
consider the var cnn classifier when it

251
00:08:19,520 --> 00:08:20,960
was able to detect

252
00:08:20,960 --> 00:08:24,080
tcp samples with nearly 100 precision

253
00:08:24,080 --> 00:08:27,039
and recall it was only able to detect

254
00:08:27,039 --> 00:08:28,960
less than four percent of the quick

255
00:08:28,960 --> 00:08:29,840
samples

256
00:08:29,840 --> 00:08:32,320
that means 96 of the quick samples were

257
00:08:32,320 --> 00:08:34,159
actually evading detection

258
00:08:34,159 --> 00:08:36,000
for this classifier the other

259
00:08:36,000 --> 00:08:38,080
classifiers did not perform

260
00:08:38,080 --> 00:08:40,320
as significantly better and most were

261
00:08:40,320 --> 00:08:42,000
unable to detect the majority of the

262
00:08:42,000 --> 00:08:43,200
quick samples

263
00:08:43,200 --> 00:08:45,920
quit monitored samples therefore an

264
00:08:45,920 --> 00:08:47,680
adversary will now need to consider both

265
00:08:47,680 --> 00:08:48,560
protocols

266
00:08:48,560 --> 00:08:51,760
in his future endeavors

267
00:08:51,760 --> 00:08:54,399
perhaps this was because the quick the

268
00:08:54,399 --> 00:08:54,800
quick

269
00:08:54,800 --> 00:08:56,160
quick is somehow more difficult to

270
00:08:56,160 --> 00:08:58,240
fingerprint than tcp so and this is

271
00:08:58,240 --> 00:09:01,040
therefore what we evaluated next

272
00:09:01,040 --> 00:09:03,760
here we train the classifiers on tcp

273
00:09:03,760 --> 00:09:05,760
only data set as well as on a quick only

274
00:09:05,760 --> 00:09:07,040
data set

275
00:09:07,040 --> 00:09:08,959
over the same web pages and we evaluated

276
00:09:08,959 --> 00:09:10,320
the classifier's performance

277
00:09:10,320 --> 00:09:12,320
in these respective settings what we

278
00:09:12,320 --> 00:09:14,080
found was that there really is no

279
00:09:14,080 --> 00:09:16,080
difference between the quick and tcp

280
00:09:16,080 --> 00:09:17,200
samples in this

281
00:09:17,200 --> 00:09:18,560
in the sense of difficulty of

282
00:09:18,560 --> 00:09:21,279
fingerprinting and all classifiers were

283
00:09:21,279 --> 00:09:22,560
able to detect

284
00:09:22,560 --> 00:09:24,880
both samples from both protocols with

285
00:09:24,880 --> 00:09:25,680
high

286
00:09:25,680 --> 00:09:29,200
precision and recall the pfpc classifier

287
00:09:29,200 --> 00:09:32,560
in fact was evil even able to perform

288
00:09:32,560 --> 00:09:34,320
better on the quick samples

289
00:09:34,320 --> 00:09:36,000
which we attribute to there being less

290
00:09:36,000 --> 00:09:37,839
variety in the

291
00:09:37,839 --> 00:09:39,760
web servers used for quick at the time

292
00:09:39,760 --> 00:09:42,560
of running these experiments

293
00:09:42,560 --> 00:09:44,560
so given that quick is not harder to

294
00:09:44,560 --> 00:09:46,160
fingerprint than tcp and that an

295
00:09:46,160 --> 00:09:47,360
adversary needs to account for both

296
00:09:47,360 --> 00:09:50,160
protocols how may he go about doing this

297
00:09:50,160 --> 00:09:52,000
we evaluated two potential approaches

298
00:09:52,000 --> 00:09:54,000
for jointly classifying quicken tcp

299
00:09:54,000 --> 00:09:55,120
samples

300
00:09:55,120 --> 00:09:56,720
the mixed approach which is the direct

301
00:09:56,720 --> 00:09:58,240
approach where the adversary takes a

302
00:09:58,240 --> 00:10:00,880
classifier and he trains a mixture of

303
00:10:00,880 --> 00:10:02,839
trains on a mixture of quick and tcp

304
00:10:02,839 --> 00:10:04,240
samples

305
00:10:04,240 --> 00:10:06,079
and another approach which leverages the

306
00:10:06,079 --> 00:10:07,920
fact that since the tcp

307
00:10:07,920 --> 00:10:09,519
only classifier and the quick only

308
00:10:09,519 --> 00:10:11,200
classifier are so adept

309
00:10:11,200 --> 00:10:14,399
at at detecting their respective at

310
00:10:14,399 --> 00:10:16,240
detecting samples loaded with their

311
00:10:16,240 --> 00:10:17,519
respective protocols

312
00:10:17,519 --> 00:10:19,279
if the adversary is able to distinguish

313
00:10:19,279 --> 00:10:21,360
whether a sample is a quick or a tcp

314
00:10:21,360 --> 00:10:22,640
sample then he can pass it to the

315
00:10:22,640 --> 00:10:23,600
dedicated

316
00:10:23,600 --> 00:10:25,680
classifier we'll begin with the mixed

317
00:10:25,680 --> 00:10:27,360
classification approach

318
00:10:27,360 --> 00:10:29,600
so we evaluated the mix and makes all of

319
00:10:29,600 --> 00:10:31,040
the classifiers trained

320
00:10:31,040 --> 00:10:33,200
on a mixture of quick and tcp samples

321
00:10:33,200 --> 00:10:34,240
across

322
00:10:34,240 --> 00:10:36,800
monitored on unmonitored samples and we

323
00:10:36,800 --> 00:10:37,519
found that

324
00:10:37,519 --> 00:10:40,160
as expected the additional noise added

325
00:10:40,160 --> 00:10:41,279
data set by the

326
00:10:41,279 --> 00:10:43,120
second protocol reduces the

327
00:10:43,120 --> 00:10:45,360
classification accuracy for most if not

328
00:10:45,360 --> 00:10:46,160
all of the

329
00:10:46,160 --> 00:10:48,160
classifiers the exception of which is

330
00:10:48,160 --> 00:10:49,519
var cnn which

331
00:10:49,519 --> 00:10:51,920
due to having among the longest training

332
00:10:51,920 --> 00:10:53,120
time as well as

333
00:10:53,120 --> 00:10:55,680
using two neural networks two

334
00:10:55,680 --> 00:10:57,279
independent neural networks combined in

335
00:10:57,279 --> 00:10:58,399
an ensemble

336
00:10:58,399 --> 00:11:02,240
um was least affected by by this change

337
00:11:02,240 --> 00:11:05,120
and what this means for us is that if an

338
00:11:05,120 --> 00:11:07,440
adversary would like to

339
00:11:07,440 --> 00:11:10,399
continue attacking the network and

340
00:11:10,399 --> 00:11:11,760
account for the fact that there are now

341
00:11:11,760 --> 00:11:13,440
both protocols then he needs to either

342
00:11:13,440 --> 00:11:14,000
increase

343
00:11:14,000 --> 00:11:15,839
the training time or the number of

344
00:11:15,839 --> 00:11:17,680
samples he uses in the training beyond

345
00:11:17,680 --> 00:11:19,040
what is currently used in the website

346
00:11:19,040 --> 00:11:21,120
fingerprinting literature

347
00:11:21,120 --> 00:11:24,560
so what about this split setting well

348
00:11:24,560 --> 00:11:27,920
can can can can the adversary actually

349
00:11:27,920 --> 00:11:28,480
train

350
00:11:28,480 --> 00:11:31,600
and distinguish her to identify which

351
00:11:31,600 --> 00:11:33,519
protocol the trace is loaded with and so

352
00:11:33,519 --> 00:11:35,040
we created such a distinguisher from a

353
00:11:35,040 --> 00:11:36,800
random forest classifier trained on a

354
00:11:36,800 --> 00:11:37,680
similar data set

355
00:11:37,680 --> 00:11:40,480
as is used for the kfp classifier and

356
00:11:40,480 --> 00:11:42,720
this distinguisher outputs a probability

357
00:11:42,720 --> 00:11:46,399
pd that the sample is a tcp sample

358
00:11:46,399 --> 00:11:48,320
and one minus pde that it is a quick

359
00:11:48,320 --> 00:11:49,680
sample

360
00:11:49,680 --> 00:11:52,399
and we found that after only 150 samples

361
00:11:52,399 --> 00:11:53,360
that's 75

362
00:11:53,360 --> 00:11:56,639
and 75 tcp samples the distinguisher was

363
00:11:56,639 --> 00:11:58,720
able to detect with over 99

364
00:11:58,720 --> 00:12:01,839
accuracy whether the sample was first

365
00:12:01,839 --> 00:12:02,880
loaded with tcp

366
00:12:02,880 --> 00:12:04,399
or whether it was first loaded with

367
00:12:04,399 --> 00:12:05,920
quick

368
00:12:05,920 --> 00:12:07,519
and when we investigated why this was

369
00:12:07,519 --> 00:12:09,040
the case we found that this was due to

370
00:12:09,040 --> 00:12:09,360
the

371
00:12:09,360 --> 00:12:11,279
hand differences in handshakes for

372
00:12:11,279 --> 00:12:13,360
example the differences in

373
00:12:13,360 --> 00:12:15,200
when the connection is established as

374
00:12:15,200 --> 00:12:16,399
well as in the size of the initial

375
00:12:16,399 --> 00:12:17,120
packets

376
00:12:17,120 --> 00:12:19,680
such as the fact that quick uses 1200

377
00:12:19,680 --> 00:12:21,440
byte packets to start its connection

378
00:12:21,440 --> 00:12:24,320
whereas tcp uses its small synapse

379
00:12:24,320 --> 00:12:25,360
so given that we can actually

380
00:12:25,360 --> 00:12:27,040
distinguish the protocols can we now go

381
00:12:27,040 --> 00:12:28,560
ahead and build an ensemble

382
00:12:28,560 --> 00:12:31,360
so in this ensemble the tcp classifier

383
00:12:31,360 --> 00:12:32,079
is trained

384
00:12:32,079 --> 00:12:34,639
only on tcp samples and the quick

385
00:12:34,639 --> 00:12:36,000
classifier is trained

386
00:12:36,000 --> 00:12:38,800
only on quick samples the distinction by

387
00:12:38,800 --> 00:12:40,720
contrast is trained on both quick and

388
00:12:40,720 --> 00:12:43,120
tcp samples

389
00:12:43,120 --> 00:12:45,279
when it comes to actually distinguishing

390
00:12:45,279 --> 00:12:47,279
between the two protocols

391
00:12:47,279 --> 00:12:49,120
and classifying a sample the

392
00:12:49,120 --> 00:12:50,880
distinguisher outputs its prediction

393
00:12:50,880 --> 00:12:53,200
that the sample is a tcp sample

394
00:12:53,200 --> 00:12:54,800
the tcp classifier outputs its

395
00:12:54,800 --> 00:12:56,560
prediction that this

396
00:12:56,560 --> 00:12:58,800
sample belongs to a particular web page

397
00:12:58,800 --> 00:13:00,720
and the quick classifier also

398
00:13:00,720 --> 00:13:02,560
outputs its confidence that this sample

399
00:13:02,560 --> 00:13:04,880
belongs to a particular web page

400
00:13:04,880 --> 00:13:06,880
the final prediction is the weighted sum

401
00:13:06,880 --> 00:13:09,440
of these two predictions with the belief

402
00:13:09,440 --> 00:13:11,680
of the distinguisher

403
00:13:11,680 --> 00:13:13,680
surprisingly this split classification

404
00:13:13,680 --> 00:13:14,800
approach performed

405
00:13:14,800 --> 00:13:18,399
worse than the mix classifier despite

406
00:13:18,399 --> 00:13:20,079
the tcp and quick classifier is

407
00:13:20,079 --> 00:13:22,079
performing very well

408
00:13:22,079 --> 00:13:24,079
the result of the split classifier is

409
00:13:24,079 --> 00:13:25,760
not that it performs as the weighted

410
00:13:25,760 --> 00:13:26,480
average of

411
00:13:26,480 --> 00:13:28,160
these two classifiers and the reason for

412
00:13:28,160 --> 00:13:30,639
this that unlike the mixed classifier

413
00:13:30,639 --> 00:13:33,120
this split ensemble in in the split

414
00:13:33,120 --> 00:13:34,959
ensemble the individual tcp and quick

415
00:13:34,959 --> 00:13:35,920
classifiers

416
00:13:35,920 --> 00:13:40,079
only see a fraction of the two

417
00:13:40,079 --> 00:13:43,040
of the samples of the two protocols so

418
00:13:43,040 --> 00:13:45,120
the tcp classifier sees only the tcp the

419
00:13:45,120 --> 00:13:46,480
quick only the quick whereas the mix

420
00:13:46,480 --> 00:13:48,320
classifier is able to leverage

421
00:13:48,320 --> 00:13:49,760
information common to these two

422
00:13:49,760 --> 00:13:52,480
protocols in the samples it sees

423
00:13:52,480 --> 00:13:54,160
moving forward it is likely that the

424
00:13:54,160 --> 00:13:55,680
adversary would

425
00:13:55,680 --> 00:13:58,240
use a mixed setting or increase it

426
00:13:58,240 --> 00:13:59,920
increases dataset to account for the

427
00:13:59,920 --> 00:14:01,199
fact that

428
00:14:01,199 --> 00:14:04,639
the tcp and quick sample classifiers

429
00:14:04,639 --> 00:14:06,399
would need to saturate with the number

430
00:14:06,399 --> 00:14:08,880
of samples they are given

431
00:14:08,880 --> 00:14:10,720
so in conclusion the web is

432
00:14:10,720 --> 00:14:12,320
transitioning to quick and this has

433
00:14:12,320 --> 00:14:13,920
privacy implications especially in the

434
00:14:13,920 --> 00:14:16,399
website fingerprinting landscape

435
00:14:16,399 --> 00:14:18,160
despite quick classification not being

436
00:14:18,160 --> 00:14:20,160
inherently more difficult than tcp

437
00:14:20,160 --> 00:14:23,120
if the adversary does not consider quick

438
00:14:23,120 --> 00:14:24,959
in his training procedure quick traces

439
00:14:24,959 --> 00:14:25,839
will evade

440
00:14:25,839 --> 00:14:28,560
classifiers are trained on only tcp

441
00:14:28,560 --> 00:14:30,320
however joint classification

442
00:14:30,320 --> 00:14:32,480
is possible of both quick and tcp

443
00:14:32,480 --> 00:14:34,399
samples however at a cost the adversary

444
00:14:34,399 --> 00:14:36,639
will either need to increase

445
00:14:36,639 --> 00:14:38,480
the number of samples or train for

446
00:14:38,480 --> 00:14:40,959
longer

447
00:14:41,040 --> 00:14:43,360
and finally determining if a trace

448
00:14:43,360 --> 00:14:46,000
begins with quick or tcp is trivial

449
00:14:46,000 --> 00:14:47,920
and this can have an impact of reducing

450
00:14:47,920 --> 00:14:49,279
dynamic set

451
00:14:49,279 --> 00:14:53,120
in um in when the adversary is

452
00:14:53,120 --> 00:14:54,800
performing his classification

453
00:14:54,800 --> 00:14:56,639
for example if the adversary sees the

454
00:14:56,639 --> 00:14:58,399
webpage is being loaded with quick he

455
00:14:58,399 --> 00:15:00,880
can already rule out anywhere any tcp

456
00:15:00,880 --> 00:15:03,920
only web pages from his predictions

457
00:15:03,920 --> 00:15:05,279
and with this i would like to end my

458
00:15:05,279 --> 00:15:06,639
presentation and i would like to thank

459
00:15:06,639 --> 00:15:08,160
you for your time

460
00:15:08,160 --> 00:15:10,639
the data system code for or work can be

461
00:15:10,639 --> 00:15:12,160
found at this location if you are

462
00:15:12,160 --> 00:15:13,040
interested

463
00:15:13,040 --> 00:15:15,360
and i am open to your questions thank

464
00:15:15,360 --> 00:15:17,839
you

