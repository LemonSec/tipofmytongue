1
00:00:00,080 --> 00:00:02,560
hello everyone my name is story pascual

2
00:00:02,560 --> 00:00:04,160
i'm from the critics group at the

3
00:00:04,160 --> 00:00:05,600
university of luxembourg

4
00:00:05,600 --> 00:00:07,520
and today i'm going to talk about a most

5
00:00:07,520 --> 00:00:08,880
recent work called

6
00:00:08,880 --> 00:00:13,280
dips dynamic private and security wwes

7
00:00:13,280 --> 00:00:15,120
let us start with a brief genomic

8
00:00:15,120 --> 00:00:18,080
background so the human dna consists of

9
00:00:18,080 --> 00:00:20,480
nucleotides that contains our genetic

10
00:00:20,480 --> 00:00:23,279
information those nucleotides are

11
00:00:23,279 --> 00:00:25,840
represented by letters such as a d

12
00:00:25,840 --> 00:00:28,800
c and g however at some specific

13
00:00:28,800 --> 00:00:30,880
positions of our dna

14
00:00:30,880 --> 00:00:33,280
the humans share different genetic

15
00:00:33,280 --> 00:00:34,719
information

16
00:00:34,719 --> 00:00:37,120
in those positions are called by single

17
00:00:37,120 --> 00:00:38,800
nucleotide polymorphism

18
00:00:38,800 --> 00:00:41,760
or his nibs in these nibs we can find

19
00:00:41,760 --> 00:00:43,280
two types of ions

20
00:00:43,280 --> 00:00:45,360
we have major alloys that are the most

21
00:00:45,360 --> 00:00:47,280
common in a population and they are

22
00:00:47,280 --> 00:00:48,879
represented by zeros

23
00:00:48,879 --> 00:00:51,039
and we have the minor islands that are

24
00:00:51,039 --> 00:00:52,960
the less common allele in a population

25
00:00:52,960 --> 00:00:54,879
and they are represented by ones

26
00:00:54,879 --> 00:00:56,719
on the right side we have the digital

27
00:00:56,719 --> 00:00:58,960
representation of the human degree

28
00:00:58,960 --> 00:01:00,800
we have the intercontinentals we have

29
00:01:00,800 --> 00:01:02,239
the is nip ids

30
00:01:02,239 --> 00:01:04,479
to identify the positions and we have

31
00:01:04,479 --> 00:01:05,438
the sequences

32
00:01:05,438 --> 00:01:09,119
of the alerts of each individual

33
00:01:09,119 --> 00:01:11,439
but why genomic data is important

34
00:01:11,439 --> 00:01:13,200
because we can use genomic data to

35
00:01:13,200 --> 00:01:13,840
conduct

36
00:01:13,840 --> 00:01:16,560
genome-wide association studies the main

37
00:01:16,560 --> 00:01:19,200
goal of gwas is to find the sleeps that

38
00:01:19,200 --> 00:01:20,960
are statistically associated with a

39
00:01:20,960 --> 00:01:21,920
phenotype

40
00:01:21,920 --> 00:01:25,200
for example a disease the first step of

41
00:01:25,200 --> 00:01:27,680
gwas is to collect genomic data from two

42
00:01:27,680 --> 00:01:29,439
different populations

43
00:01:29,439 --> 00:01:31,759
the case population that are the people

44
00:01:31,759 --> 00:01:33,680
that express the phenotype

45
00:01:33,680 --> 00:01:36,720
for example people that have diabetes

46
00:01:36,720 --> 00:01:38,560
and the cultural population that are the

47
00:01:38,560 --> 00:01:40,880
health people and then we process that

48
00:01:40,880 --> 00:01:41,759
data by

49
00:01:41,759 --> 00:01:44,799
computing statistics over it

50
00:01:44,799 --> 00:01:48,159
and finally we release gwis results

51
00:01:48,159 --> 00:01:51,360
and we have two type of gws results

52
00:01:51,360 --> 00:01:54,560
we release aggregate statistics such as

53
00:01:54,560 --> 00:01:57,280
minor outlet frequencies and pairwise

54
00:01:57,280 --> 00:01:58,719
solid frequencies

55
00:01:58,719 --> 00:02:01,040
and we can also release dicey statics

56
00:02:01,040 --> 00:02:02,000
such as

57
00:02:02,000 --> 00:02:05,280
linkage in zika leading between snips

58
00:02:05,280 --> 00:02:08,318
p values r squares and c squares to show

59
00:02:08,318 --> 00:02:10,239
how strong is the correlation between

60
00:02:10,239 --> 00:02:13,040
a snip and an a phenol type and now we

61
00:02:13,040 --> 00:02:15,120
are moving towards a federated gws

62
00:02:15,120 --> 00:02:15,680
setting

63
00:02:15,680 --> 00:02:17,599
where we consider the data from multiple

64
00:02:17,599 --> 00:02:18,720
sources

65
00:02:18,720 --> 00:02:21,440
instead of only one and as a result we

66
00:02:21,440 --> 00:02:23,840
will be able to produce more accurate

67
00:02:23,840 --> 00:02:26,160
and to find better statistical findings

68
00:02:26,160 --> 00:02:27,200
from the results

69
00:02:27,200 --> 00:02:29,280
however as we are managing a very

70
00:02:29,280 --> 00:02:30,560
sensitive data

71
00:02:30,560 --> 00:02:32,560
we need to enforce security and privacy

72
00:02:32,560 --> 00:02:33,680
desired processing

73
00:02:33,680 --> 00:02:36,160
and also to enforce private specific

74
00:02:36,160 --> 00:02:38,319
release let's see into more details what

75
00:02:38,319 --> 00:02:40,400
are the main challenges

76
00:02:40,400 --> 00:02:42,480
so the first challenge is how to secure

77
00:02:42,480 --> 00:02:44,239
and purpose preserving process

78
00:02:44,239 --> 00:02:47,519
the genomic data in the literature we

79
00:02:47,519 --> 00:02:48,959
have some approaches that would

80
00:02:48,959 --> 00:02:52,000
enforce such profits we can use secured

81
00:02:52,000 --> 00:02:53,920
multiparty computation protocols

82
00:02:53,920 --> 00:02:56,080
we could use a home of encryption

83
00:02:56,080 --> 00:02:57,519
differential premise

84
00:02:57,519 --> 00:03:00,000
or rely on trusted execution environment

85
00:03:00,000 --> 00:03:01,519
we have choose to use

86
00:03:01,519 --> 00:03:03,840
tes because it shows a better trade-off

87
00:03:03,840 --> 00:03:06,159
when compared to the

88
00:03:06,159 --> 00:03:08,879
approaching daily territory the second

89
00:03:08,879 --> 00:03:09,599
challenge

90
00:03:09,599 --> 00:03:12,959
is on the data release of cws it has to

91
00:03:12,959 --> 00:03:15,040
be in a purpose-designed manner

92
00:03:15,040 --> 00:03:17,280
it has been shown in the literature that

93
00:03:17,280 --> 00:03:19,599
the simple release of gws results are

94
00:03:19,599 --> 00:03:21,519
vulnerable to recovery and membership

95
00:03:21,519 --> 00:03:22,560
attacks

96
00:03:22,560 --> 00:03:26,239
in since 2018 the gws results are not

97
00:03:26,239 --> 00:03:27,040
made public

98
00:03:27,040 --> 00:03:29,680
anymore in addition these attacks can be

99
00:03:29,680 --> 00:03:31,680
fastly facilitated by collusion

100
00:03:31,680 --> 00:03:35,360
among participants now let's see

101
00:03:35,360 --> 00:03:37,519
more details on the previous attacks on

102
00:03:37,519 --> 00:03:39,120
gws releases

103
00:03:39,120 --> 00:03:41,519
we have the recover attack where the

104
00:03:41,519 --> 00:03:42,319
federation

105
00:03:42,319 --> 00:03:44,720
gathers encrypted genomic data and

106
00:03:44,720 --> 00:03:47,280
process it in a secure manner

107
00:03:47,280 --> 00:03:50,319
and then it finally releases the the

108
00:03:50,319 --> 00:03:52,640
statistical results however in a

109
00:03:52,640 --> 00:03:53,599
recovery attack

110
00:03:53,599 --> 00:03:56,080
the adversary can observe the the

111
00:03:56,080 --> 00:03:57,040
statics

112
00:03:57,040 --> 00:03:59,599
and might be able to compute many

113
00:03:59,599 --> 00:04:00,560
possibilities

114
00:04:00,560 --> 00:04:03,360
for the sequences of the general types

115
00:04:03,360 --> 00:04:04,720
of the individuals

116
00:04:04,720 --> 00:04:06,480
and might be able to find the correct

117
00:04:06,480 --> 00:04:08,400
sequences and then

118
00:04:08,400 --> 00:04:11,599
identifying and infering with success

119
00:04:11,599 --> 00:04:13,760
the genotype sequences of people that

120
00:04:13,760 --> 00:04:16,720
have participated in a study

121
00:04:16,720 --> 00:04:19,358
on the other end in a membership attack

122
00:04:19,358 --> 00:04:20,478
we follow the same

123
00:04:20,478 --> 00:04:23,120
pipeline as introduced before but now we

124
00:04:23,120 --> 00:04:25,040
assume that the university has access to

125
00:04:25,040 --> 00:04:27,199
the genome type of development

126
00:04:27,199 --> 00:04:30,479
in addition to the results of the study

127
00:04:30,479 --> 00:04:32,400
and then he might be able to have some

128
00:04:32,400 --> 00:04:33,680
statistical tests

129
00:04:33,680 --> 00:04:36,320
in order to find if the genotype of the

130
00:04:36,320 --> 00:04:38,639
victim participated in a study

131
00:04:38,639 --> 00:04:40,000
in the literature there are some

132
00:04:40,000 --> 00:04:42,479
approaches that forces safe releases of

133
00:04:42,479 --> 00:04:43,600
gws

134
00:04:43,600 --> 00:04:45,759
and we can categorize them into three

135
00:04:45,759 --> 00:04:46,639
types

136
00:04:46,639 --> 00:04:48,479
some of them are based on defining

137
00:04:48,479 --> 00:04:50,560
thresholds to avoid correct inferences

138
00:04:50,560 --> 00:04:52,400
from polynomial probabilistic time

139
00:04:52,400 --> 00:04:53,680
alleviators

140
00:04:53,680 --> 00:04:56,000
we can also rely on statistical tests

141
00:04:56,000 --> 00:04:58,160
such as likelihood rate to test

142
00:04:58,160 --> 00:04:59,759
to enforce that two individual can be

143
00:04:59,759 --> 00:05:02,400
identified as a participant in a study

144
00:05:02,400 --> 00:05:04,400
in addition we can also use differential

145
00:05:04,400 --> 00:05:06,720
files to protect the outputs of the

146
00:05:06,720 --> 00:05:07,520
releases

147
00:05:07,520 --> 00:05:09,360
by applying noise and make sure that the

148
00:05:09,360 --> 00:05:11,039
membership attack cannot be

149
00:05:11,039 --> 00:05:14,960
successful we built all mechanisms for

150
00:05:14,960 --> 00:05:18,000
a paper published in yes rx 2011

151
00:05:18,000 --> 00:05:20,320
and in this table we summarize they make

152
00:05:20,320 --> 00:05:22,960
us what are the safe conditions

153
00:05:22,960 --> 00:05:26,240
for gws releases flow to protect

154
00:05:26,240 --> 00:05:28,240
test and aggregate statistics against

155
00:05:28,240 --> 00:05:29,280
recovery attack

156
00:05:29,280 --> 00:05:30,960
we need to make sure that we are using

157
00:05:30,960 --> 00:05:32,400
enough genomes

158
00:05:32,400 --> 00:05:34,560
the same thing for protecting test is

159
00:05:34,560 --> 00:05:36,000
statistics results

160
00:05:36,000 --> 00:05:38,880
from membership attacks however to

161
00:05:38,880 --> 00:05:39,440
protect

162
00:05:39,440 --> 00:05:41,759
aggregate statics from membership

163
00:05:41,759 --> 00:05:42,880
attacks

164
00:05:42,880 --> 00:05:45,919
we rely on likelihood rate diseases to

165
00:05:45,919 --> 00:05:48,160
a force that no one can identify it

166
00:05:48,160 --> 00:05:50,080
however in practical settings

167
00:05:50,080 --> 00:05:52,400
genomes can be added or removed over

168
00:05:52,400 --> 00:05:54,479
time and therefore we cannot use the

169
00:05:54,479 --> 00:05:56,240
state-of-the-art solutions because they

170
00:05:56,240 --> 00:05:57,520
assume a static

171
00:05:57,520 --> 00:05:59,840
settings for an example in this

172
00:05:59,840 --> 00:06:00,800
illustration

173
00:06:00,800 --> 00:06:03,039
we show how an advisory can combine

174
00:06:03,039 --> 00:06:05,360
different releases from one study

175
00:06:05,360 --> 00:06:07,600
it observed how these statistics have

176
00:06:07,600 --> 00:06:08,400
evolved

177
00:06:08,400 --> 00:06:11,440
and then take advantage of this fact and

178
00:06:11,440 --> 00:06:13,120
be able to

179
00:06:13,120 --> 00:06:16,479
see prevent these solutions in this

180
00:06:16,479 --> 00:06:18,720
slide i will summarize the problem

181
00:06:18,720 --> 00:06:19,520
motivation

182
00:06:19,520 --> 00:06:22,240
and our contribution dips so during the

183
00:06:22,240 --> 00:06:23,680
data collection instead we need

184
00:06:23,680 --> 00:06:26,240
secure sharing of genomic data and for

185
00:06:26,240 --> 00:06:28,960
that dips uses only encrypted and silent

186
00:06:28,960 --> 00:06:29,840
data

187
00:06:29,840 --> 00:06:31,840
in the data processing we need purpose

188
00:06:31,840 --> 00:06:33,120
preserving and efficient

189
00:06:33,120 --> 00:06:36,560
processing and for that dips relies on

190
00:06:36,560 --> 00:06:38,240
trusted execution environments to do

191
00:06:38,240 --> 00:06:38,720
equip

192
00:06:38,720 --> 00:06:41,280
and process the data on the data release

193
00:06:41,280 --> 00:06:42,000
step

194
00:06:42,000 --> 00:06:44,639
of the problem we need to enforce

195
00:06:44,639 --> 00:06:46,639
purpose preserving releases considering

196
00:06:46,639 --> 00:06:48,880
dynamic settings and also able to cope

197
00:06:48,880 --> 00:06:50,720
with collusion attacks

198
00:06:50,720 --> 00:06:53,360
and for that dips offers a dynamic and

199
00:06:53,360 --> 00:06:56,000
collusion resident algorithms

200
00:06:56,000 --> 00:06:57,919
now let's discuss in more detail the

201
00:06:57,919 --> 00:07:00,000
system and threat models of dips

202
00:07:00,000 --> 00:07:02,319
so be assumed federation with b bar

203
00:07:02,319 --> 00:07:04,000
centers where

204
00:07:04,000 --> 00:07:07,039
f is strictly smaller than b by centers

205
00:07:07,039 --> 00:07:08,639
might collude to attack the final

206
00:07:08,639 --> 00:07:09,360
results

207
00:07:09,360 --> 00:07:13,280
in addition each biocenter sequences new

208
00:07:13,280 --> 00:07:15,680
new people at a different pace however

209
00:07:15,680 --> 00:07:17,039
before sharing their

210
00:07:17,039 --> 00:07:20,080
genomic data they will encrypt and sign

211
00:07:20,080 --> 00:07:23,039
the data before sending it to the to the

212
00:07:23,039 --> 00:07:24,000
enclave

213
00:07:24,000 --> 00:07:26,000
in the enclave the data is securely

214
00:07:26,000 --> 00:07:28,479
stored and it's decrypted only

215
00:07:28,479 --> 00:07:31,360
in the trusted area where dips runs its

216
00:07:31,360 --> 00:07:32,160
protocol

217
00:07:32,160 --> 00:07:35,199
and defines a safe batch of requests

218
00:07:35,199 --> 00:07:37,759
to be used

219
00:07:38,400 --> 00:07:41,440
now let's see the workflow of our brush

220
00:07:41,440 --> 00:07:44,560
so we have two physical cues one for

221
00:07:44,560 --> 00:07:46,639
addition and another four removals

222
00:07:46,639 --> 00:07:48,800
and the genome operations are treated in

223
00:07:48,800 --> 00:07:51,120
a fifo order

224
00:07:51,120 --> 00:07:53,680
next we run our cell request selection

225
00:07:53,680 --> 00:07:54,560
mechanism

226
00:07:54,560 --> 00:07:56,720
to find a safe budget of genome

227
00:07:56,720 --> 00:07:58,319
operations that will be used

228
00:07:58,319 --> 00:08:02,160
to compute the gwas in the third step

229
00:08:02,160 --> 00:08:04,960
we process the aggregate the test

230
00:08:04,960 --> 00:08:05,680
statistics

231
00:08:05,680 --> 00:08:09,360
data over the snips of the study

232
00:08:09,360 --> 00:08:11,840
using the selected genomes in the

233
00:08:11,840 --> 00:08:12,479
previous

234
00:08:12,479 --> 00:08:15,440
step and finally in the fourth step we

235
00:08:15,440 --> 00:08:17,120
need to run the membership test

236
00:08:17,120 --> 00:08:20,000
to find which subset of snips can also

237
00:08:20,000 --> 00:08:20,479
release

238
00:08:20,479 --> 00:08:24,960
aggregate statistics now let's see

239
00:08:24,960 --> 00:08:28,160
how our solution works so

240
00:08:28,160 --> 00:08:29,919
there is a static release condition in

241
00:08:29,919 --> 00:08:32,000
the state of the art that's defined by

242
00:08:32,000 --> 00:08:33,279
this inequality

243
00:08:33,279 --> 00:08:35,360
so we know the number of snips often

244
00:08:35,360 --> 00:08:36,320
studied that

245
00:08:36,320 --> 00:08:39,440
is represented by l and using this

246
00:08:39,440 --> 00:08:41,599
integration we can find how many genomes

247
00:08:41,599 --> 00:08:43,120
we will need to protect

248
00:08:43,120 --> 00:08:47,120
a release that is in this case n

249
00:08:47,120 --> 00:08:48,880
indeed on the right side we have an

250
00:08:48,880 --> 00:08:51,120
example so we want that to start alice

251
00:08:51,120 --> 00:08:52,480
nibs and we have

252
00:08:52,480 --> 00:08:55,360
gathered one genomes that satisfy the

253
00:08:55,360 --> 00:08:57,120
conditions of this inequality

254
00:08:57,120 --> 00:09:00,560
of this inequation however the state of

255
00:09:00,560 --> 00:09:00,959
that

256
00:09:00,959 --> 00:09:03,519
do not assume that inverters can combine

257
00:09:03,519 --> 00:09:04,399
releases

258
00:09:04,399 --> 00:09:07,279
and by observing multiple releases the

259
00:09:07,279 --> 00:09:09,200
advisor now is able to

260
00:09:09,200 --> 00:09:12,480
sequence these boundaries

261
00:09:12,480 --> 00:09:15,120
of the this integration however in our

262
00:09:15,120 --> 00:09:15,760
paper

263
00:09:15,760 --> 00:09:19,360
we show that following simple properties

264
00:09:19,360 --> 00:09:21,519
we can make sure that we have always

265
00:09:21,519 --> 00:09:23,920
safe releases even if they are combined

266
00:09:23,920 --> 00:09:26,080
in addition we don't need to use a brute

267
00:09:26,080 --> 00:09:27,040
force approach

268
00:09:27,040 --> 00:09:30,000
to combine every existing release so

269
00:09:30,000 --> 00:09:31,519
these properties are

270
00:09:31,519 --> 00:09:34,240
we make sure that we select a safe batch

271
00:09:34,240 --> 00:09:35,279
of requests

272
00:09:35,279 --> 00:09:38,080
we have more additions than removals and

273
00:09:38,080 --> 00:09:39,040
in addition

274
00:09:39,040 --> 00:09:41,440
the number of additional operations and

275
00:09:41,440 --> 00:09:42,880
remove operations

276
00:09:42,880 --> 00:09:46,560
is bigger than the l2nd function

277
00:09:46,560 --> 00:09:49,040
in addition we also assume that any

278
00:09:49,040 --> 00:09:51,760
subset of buyer centers

279
00:09:51,760 --> 00:09:54,800
will be vulnerable to to the collusion

280
00:09:54,800 --> 00:09:56,080
between orders

281
00:09:56,080 --> 00:09:59,279
as i said we make sure that every subset

282
00:09:59,279 --> 00:10:00,560
of our centers

283
00:10:00,560 --> 00:10:04,560
they have enough operations that will

284
00:10:04,560 --> 00:10:10,239
protect them against the coding ones

285
00:10:10,480 --> 00:10:12,320
we also offered a dynamic scale

286
00:10:12,320 --> 00:10:13,839
mechanism to help

287
00:10:13,839 --> 00:10:17,040
having sooner releases of gws what's the

288
00:10:17,040 --> 00:10:19,600
idea here if we understood a

289
00:10:19,600 --> 00:10:23,040
very huge gws that has a big number of l

290
00:10:23,040 --> 00:10:25,200
we would need to guard a million million

291
00:10:25,200 --> 00:10:26,320
genomes before

292
00:10:26,320 --> 00:10:28,720
being able to find a safe release

293
00:10:28,720 --> 00:10:29,360
however

294
00:10:29,360 --> 00:10:31,760
what we can do is to consider a smaller

295
00:10:31,760 --> 00:10:32,480
subset

296
00:10:32,480 --> 00:10:35,519
of his nibs instead of the full set and

297
00:10:35,519 --> 00:10:36,399
then it

298
00:10:36,399 --> 00:10:39,839
finding releases will be easier and

299
00:10:39,839 --> 00:10:40,640
faster

300
00:10:40,640 --> 00:10:43,120
in this example here we decreased the

301
00:10:43,120 --> 00:10:44,399
number of snips

302
00:10:44,399 --> 00:10:47,040
and we found a safe releasing used in

303
00:10:47,040 --> 00:10:48,480
one genome

304
00:10:48,480 --> 00:10:50,880
we also showed that we can increase the

305
00:10:50,880 --> 00:10:53,279
number of physics be considerate

306
00:10:53,279 --> 00:10:55,600
in the study by depending on how many

307
00:10:55,600 --> 00:10:56,959
genomes have been gathered

308
00:10:56,959 --> 00:11:01,040
at a later point in this release number

309
00:11:01,040 --> 00:11:01,440
three

310
00:11:01,440 --> 00:11:03,360
it's a standard release and some

311
00:11:03,360 --> 00:11:05,200
vertical release

312
00:11:05,200 --> 00:11:08,240
where we keep the number of snips and we

313
00:11:08,240 --> 00:11:09,200
guarded the

314
00:11:09,200 --> 00:11:12,560
sufficient number of genome operations

315
00:11:12,560 --> 00:11:14,480
on the other rank we also showed that if

316
00:11:14,480 --> 00:11:16,720
this number if the current number of

317
00:11:16,720 --> 00:11:19,120
genomes is already big enough we can

318
00:11:19,120 --> 00:11:20,959
increase the number of these nibs

319
00:11:20,959 --> 00:11:24,000
that will have statistics released in a

320
00:11:24,000 --> 00:11:25,360
safe manner

321
00:11:25,360 --> 00:11:27,680
now i will explain how we adapted the

322
00:11:27,680 --> 00:11:29,519
state-of-the-art solution to protect

323
00:11:29,519 --> 00:11:33,040
releases against membership the test

324
00:11:33,040 --> 00:11:35,440
so first of all we use a security genome

325
00:11:35,440 --> 00:11:37,200
that's a tool to identify

326
00:11:37,200 --> 00:11:40,800
which is nibs can be safely released

327
00:11:40,800 --> 00:11:43,040
so that no individual can be identified

328
00:11:43,040 --> 00:11:45,040
as a participant in a study

329
00:11:45,040 --> 00:11:47,279
and it uses a legal hold rate of test

330
00:11:47,279 --> 00:11:48,079
mechanism

331
00:11:48,079 --> 00:11:51,279
however as we are assuming dynamic

332
00:11:51,279 --> 00:11:53,120
releases we need to make sure that when

333
00:11:53,120 --> 00:11:55,120
releases are combined

334
00:11:55,120 --> 00:11:58,240
the same snips are being released as

335
00:11:58,240 --> 00:11:59,040
well

336
00:11:59,040 --> 00:12:01,040
for example here we had the first

337
00:12:01,040 --> 00:12:03,440
release and we selected the

338
00:12:03,440 --> 00:12:06,720
the three snips id one two and three

339
00:12:06,720 --> 00:12:09,200
to have aggregate statistical releases

340
00:12:09,200 --> 00:12:11,760
however in the second release

341
00:12:11,760 --> 00:12:15,279
we found that id1 and id2 were saved for

342
00:12:15,279 --> 00:12:18,079
aggregate statistics however we need to

343
00:12:18,079 --> 00:12:20,079
combine both releases and release one

344
00:12:20,079 --> 00:12:21,120
and release two

345
00:12:21,120 --> 00:12:24,079
and make sure that id1 was also is also

346
00:12:24,079 --> 00:12:24,959
safe

347
00:12:24,959 --> 00:12:26,959
when combine it with the previous

348
00:12:26,959 --> 00:12:29,279
release and that's the case for idea one

349
00:12:29,279 --> 00:12:31,040
however for id2

350
00:12:31,040 --> 00:12:32,959
when we combine those releases we

351
00:12:32,959 --> 00:12:35,440
identify that id2

352
00:12:35,440 --> 00:12:37,440
is not safe and therefore we cannot

353
00:12:37,440 --> 00:12:38,800
release

354
00:12:38,800 --> 00:12:42,240
id2 in this time

355
00:12:42,240 --> 00:12:44,480
and then after the example where we had

356
00:12:44,480 --> 00:12:46,079
a third release

357
00:12:46,079 --> 00:12:48,079
and we did five wishes nips can be

358
00:12:48,079 --> 00:12:50,560
released and again we need to make sure

359
00:12:50,560 --> 00:12:53,120
that when we combine previous releases

360
00:12:53,120 --> 00:12:56,320
the same ids are found as well

361
00:12:56,320 --> 00:12:58,639
and this is the case by the one it was

362
00:12:58,639 --> 00:12:59,760
unsafe

363
00:12:59,760 --> 00:13:03,680
when the combinations were evaluated ice

364
00:13:03,680 --> 00:13:06,399
id3 didn't succeed in the evaluation we

365
00:13:06,399 --> 00:13:07,920
cannot release data over

366
00:13:07,920 --> 00:13:10,800
basically by d3 and id4 was never

367
00:13:10,800 --> 00:13:11,839
released before

368
00:13:11,839 --> 00:13:13,760
so we can proceed with the aggregate

369
00:13:13,760 --> 00:13:15,279
statics releases

370
00:13:15,279 --> 00:13:17,760
over 94 as well now let's talk about the

371
00:13:17,760 --> 00:13:19,040
performance evaluation of

372
00:13:19,040 --> 00:13:21,440
our solution so we're using the graphene

373
00:13:21,440 --> 00:13:23,680
sgx to implement our protocol inside

374
00:13:23,680 --> 00:13:28,079
sdx enclave and we use the aes 256 bits

375
00:13:28,079 --> 00:13:31,600
encryption with ecdsa signature scheme

376
00:13:31,600 --> 00:13:34,079
we assume the different values for

377
00:13:34,079 --> 00:13:36,079
following a poisson distribution for

378
00:13:36,079 --> 00:13:38,000
generating genome requests from the

379
00:13:38,000 --> 00:13:39,120
biocenters

380
00:13:39,120 --> 00:13:41,760
and we consider a variety of gws

381
00:13:41,760 --> 00:13:43,120
scenarios

382
00:13:43,120 --> 00:13:46,079
we used simulated genomes up to 6

383
00:13:46,079 --> 00:13:46,639
million

384
00:13:46,639 --> 00:13:49,839
and also real genomes on the experiments

385
00:13:49,839 --> 00:13:52,000
for the real genome data sets we use the

386
00:13:52,000 --> 00:13:52,880
i-1

387
00:13:52,880 --> 00:13:56,480
with 200 2 000 and genomes

388
00:13:56,480 --> 00:13:58,720
and also the dbgap data set with

389
00:13:58,720 --> 00:14:02,160
approximately 28 000 genomes and we

390
00:14:02,160 --> 00:14:04,160
evaluated many metrics in of our

391
00:14:04,160 --> 00:14:04,800
approach

392
00:14:04,800 --> 00:14:07,279
such as the complexity and cpu run time

393
00:14:07,279 --> 00:14:08,720
of our algorithm

394
00:14:08,720 --> 00:14:10,880
and the bandwidth memory consumption

395
00:14:10,880 --> 00:14:13,120
progress risk then privacy gain

396
00:14:13,120 --> 00:14:16,240
releases performance and scalability

397
00:14:16,240 --> 00:14:18,079
the first result is on the complexity

398
00:14:18,079 --> 00:14:20,320
and cpu run time of our approach

399
00:14:20,320 --> 00:14:22,320
as i explained before we don't need a

400
00:14:22,320 --> 00:14:24,000
brute force approach to combine

401
00:14:24,000 --> 00:14:27,519
existing releases we only need to to

402
00:14:27,519 --> 00:14:29,279
to make sure that we are selecting a

403
00:14:29,279 --> 00:14:30,959
safe batch of requests

404
00:14:30,959 --> 00:14:32,800
that follows the the conditions i

405
00:14:32,800 --> 00:14:34,000
presented before

406
00:14:34,000 --> 00:14:36,639
and then we our algorithm has constant

407
00:14:36,639 --> 00:14:37,839
time

408
00:14:37,839 --> 00:14:40,079
otherwise if we use a brute force

409
00:14:40,079 --> 00:14:41,360
approach eating

410
00:14:41,360 --> 00:14:42,959
the complexity of the brute force

411
00:14:42,959 --> 00:14:44,959
approach increases exponentially as

412
00:14:44,959 --> 00:14:47,680
expected because as main rounds we have

413
00:14:47,680 --> 00:14:51,279
we need to check more villages

414
00:14:51,279 --> 00:14:53,360
and some numbers now for the bandwidth

415
00:14:53,360 --> 00:14:54,560
uh

416
00:14:54,560 --> 00:14:57,600
so we counted genomes is nibs

417
00:14:57,600 --> 00:15:00,320
with two beats for to represent issues

418
00:15:00,320 --> 00:15:01,040
nib so

419
00:15:01,040 --> 00:15:05,680
we we have a total of 75 kilobytes for

420
00:15:05,680 --> 00:15:08,959
300k and his nips study

421
00:15:08,959 --> 00:15:12,800
and the overall request size is 258 bits

422
00:15:12,800 --> 00:15:15,279
and approximately 48 bytes after the

423
00:15:15,279 --> 00:15:16,560
encryption

424
00:15:16,560 --> 00:15:19,120
so we have a shorter response and

425
00:15:19,120 --> 00:15:21,839
release construction time

426
00:15:21,839 --> 00:15:24,480
and and one important result here is the

427
00:15:24,480 --> 00:15:25,199
average

428
00:15:25,199 --> 00:15:28,720
consumption that deploys two megabytes

429
00:15:28,720 --> 00:15:31,279
and it's within the memory limitations

430
00:15:31,279 --> 00:15:34,000
of the gx

431
00:15:34,079 --> 00:15:36,880
in this slide we compare i showed the

432
00:15:36,880 --> 00:15:39,279
results on the comparison of our

433
00:15:39,279 --> 00:15:40,000
approach

434
00:15:40,000 --> 00:15:42,720
to a naive dynamic approach this naive

435
00:15:42,720 --> 00:15:44,720
dynamic approach does not consider that

436
00:15:44,720 --> 00:15:47,920
genomes and releases can be combined and

437
00:15:47,920 --> 00:15:51,440
using this approach we we would have we

438
00:15:51,440 --> 00:15:52,160
would find

439
00:15:52,160 --> 00:15:55,040
five up to five percent of the releases

440
00:15:55,040 --> 00:15:55,920
could contain

441
00:15:55,920 --> 00:15:59,360
uh genomes at risk however

442
00:15:59,360 --> 00:16:02,399
as they do they don't assume a safe

443
00:16:02,399 --> 00:16:04,000
selection of requests

444
00:16:04,000 --> 00:16:06,000
they are able to have more releases and

445
00:16:06,000 --> 00:16:09,199
also to consider more genome operations

446
00:16:09,199 --> 00:16:11,360
and then but the problem again is that

447
00:16:11,360 --> 00:16:13,279
up to eight percent of the genomes could

448
00:16:13,279 --> 00:16:15,839
be exposed to previous attacks

449
00:16:15,839 --> 00:16:17,920
if we use dips we release less

450
00:16:17,920 --> 00:16:19,839
frequently but we are protecting

451
00:16:19,839 --> 00:16:21,920
the genomic pregnancy this is light that

452
00:16:21,920 --> 00:16:23,600
represents the impact of colluding

453
00:16:23,600 --> 00:16:24,800
biocenters

454
00:16:24,800 --> 00:16:28,000
and this chart is showing the delays

455
00:16:28,000 --> 00:16:30,320
the operational delays or additions but

456
00:16:30,320 --> 00:16:32,800
they both for additions and removals we

457
00:16:32,800 --> 00:16:34,160
have a similar behavior

458
00:16:34,160 --> 00:16:36,079
and as expected as we increase the

459
00:16:36,079 --> 00:16:38,000
number of colluding biocenters in the

460
00:16:38,000 --> 00:16:39,360
federation

461
00:16:39,360 --> 00:16:41,040
it's more difficult to find a safe batch

462
00:16:41,040 --> 00:16:43,040
of requests we also compare dips to my

463
00:16:43,040 --> 00:16:45,279
static lr approach to protect the

464
00:16:45,279 --> 00:16:47,360
releases against membership attacks and

465
00:16:47,360 --> 00:16:49,040
as you can see dips is able to release

466
00:16:49,040 --> 00:16:50,720
since the beginning of the experiment

467
00:16:50,720 --> 00:16:52,720
on the other hand the static lr approach

468
00:16:52,720 --> 00:16:54,160
can only release at the end of the

469
00:16:54,160 --> 00:16:54,959
experiment

470
00:16:54,959 --> 00:16:56,959
when they have gathered the all of the

471
00:16:56,959 --> 00:16:59,040
genomes in addition deep does not

472
00:16:59,040 --> 00:17:00,639
degrade the number of slips

473
00:17:00,639 --> 00:17:03,600
and even at some some rounds dips was

474
00:17:03,600 --> 00:17:04,160
able to

475
00:17:04,160 --> 00:17:06,240
consider more snips than the static

476
00:17:06,240 --> 00:17:07,199
approach

477
00:17:07,199 --> 00:17:09,280
we also evaluate the dips on the uh

478
00:17:09,280 --> 00:17:11,199
larger scale gdpr setting with five

479
00:17:11,199 --> 00:17:12,799
thousand snips positions

480
00:17:12,799 --> 00:17:14,640
from five buyer centers and we use the

481
00:17:14,640 --> 00:17:16,959
dbgap data set with approximately twenty

482
00:17:16,959 --> 00:17:18,160
eight 000

483
00:17:18,160 --> 00:17:21,280
genomes and as you can see the shared

484
00:17:21,280 --> 00:17:23,599
dips has reasonable response time and

485
00:17:23,599 --> 00:17:25,520
the most expensive step is the snip

486
00:17:25,520 --> 00:17:26,959
selection algorithm

487
00:17:26,959 --> 00:17:28,880
where we need to combine and collect

488
00:17:28,880 --> 00:17:30,480
genomes from different

489
00:17:30,480 --> 00:17:33,360
releases to compute the lr statistics

490
00:17:33,360 --> 00:17:35,200
and now the conclusions of our work

491
00:17:35,200 --> 00:17:36,720
so we have offered here the first

492
00:17:36,720 --> 00:17:38,400
solution that combines fully privileged

493
00:17:38,400 --> 00:17:39,520
preservatives

494
00:17:39,520 --> 00:17:41,039
in terms of sharing processing and

495
00:17:41,039 --> 00:17:43,360
releasing and we also consider dynamic

496
00:17:43,360 --> 00:17:45,360
and resilient to collusion the players

497
00:17:45,360 --> 00:17:47,440
as a future work we plan to treat

498
00:17:47,440 --> 00:17:49,440
malicious biocenter threat model

499
00:17:49,440 --> 00:17:52,000
where we can cope with malicious

500
00:17:52,000 --> 00:17:53,280
requests from the

501
00:17:53,280 --> 00:17:55,760
biocenters in addition we plan to offer

502
00:17:55,760 --> 00:17:57,039
data oblivious version of

503
00:17:57,039 --> 00:17:58,799
our protocol in order to cope with

504
00:17:58,799 --> 00:18:00,240
cytosine attacks against

505
00:18:00,240 --> 00:18:03,120
sgx thank you very much for listening to

506
00:18:03,120 --> 00:18:06,080
this presentation

