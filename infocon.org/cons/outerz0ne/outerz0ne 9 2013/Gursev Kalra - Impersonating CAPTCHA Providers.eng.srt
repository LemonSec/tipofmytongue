1
00:00:00,110 --> 00:00:07,140
<font color="#CCCCCC">alright morning everyone am I audible</font>

2
00:00:04,380 --> 00:00:09,960
till the last bench last seat everybody

3
00:00:07,140 --> 00:00:12,450
<font color="#CCCCCC">alright I'm allowed am i</font><font color="#E5E5E5"> okay or I can</font>

4
00:00:09,960 --> 00:00:15,800
be at this volume<font color="#CCCCCC"> alright cool thank you</font>

5
00:00:12,450 --> 00:00:18,448
so but today we are going to<font color="#E5E5E5"> talk about</font>

6
00:00:15,800 --> 00:00:20,279
<font color="#CCCCCC">captcha provider impersonation so this</font>

7
00:00:18,449 --> 00:00:22,050
<font color="#CCCCCC">is an interesting technique may not be</font>

8
00:00:20,279 --> 00:00:24,710
very<font color="#E5E5E5"> practical and you may not be</font><font color="#CCCCCC"> able</font>

9
00:00:22,050 --> 00:00:26,939
<font color="#E5E5E5">to work it on the in the wild but</font>

10
00:00:24,710 --> 00:00:29,939
certainly a very interesting concept

11
00:00:26,939 --> 00:00:33,270
which you can<font color="#E5E5E5"> see and hack around if you</font>

12
00:00:29,939 --> 00:00:35,910
have time so let's get started i am good

13
00:00:33,270 --> 00:00:38,190
save and I work for mcafee functional

14
00:00:35,910 --> 00:00:40,199
professional services and here is the

15
00:00:38,190 --> 00:00:42,510
agenda<font color="#CCCCCC"> for today we are going</font><font color="#E5E5E5"> to look at</font>

16
00:00:40,200 --> 00:00:45,000
just one slide on capture provider

17
00:00:42,510 --> 00:00:46,649
integration starting it captures then we

18
00:00:45,000 --> 00:00:48,600
will see how<font color="#CCCCCC"> to impersonate capture</font>

19
00:00:46,649 --> 00:00:50,940
providers then there is<font color="#E5E5E5"> a tool that</font>

20
00:00:48,600 --> 00:00:53,280
comes along which is called clip capture

21
00:00:50,940 --> 00:00:55,050
will have a lot of demonstrations around

22
00:00:53,280 --> 00:00:58,800
that and then we'll be couple of

23
00:00:55,050 --> 00:01:00,690
recommendations followed by a Q&A so I

24
00:00:58,800 --> 00:01:02,160
work with the mcafee phones from

25
00:01:00,690 --> 00:01:05,009
professional services as a senior

26
00:01:02,160 --> 00:01:07,590
principal consultant I do some stuff I

27
00:01:05,010 --> 00:01:09,299
do security<font color="#E5E5E5"> research i do source code</font>

28
00:01:07,590 --> 00:01:12,510
reviews and some of the stuff along<font color="#CCCCCC"> with</font>

29
00:01:09,299 --> 00:01:14,700
that have written a lot of tools around

30
00:01:12,510 --> 00:01:16,110
four of them are<font color="#CCCCCC"> available a couple</font><font color="#E5E5E5"> of</font>

31
00:01:14,700 --> 00:01:18,509
them are open source and there are

32
00:01:16,110 --> 00:01:21,240
several internal which<font color="#CCCCCC"> i wrote which</font>

33
00:01:18,509 --> 00:01:22,710
simplifies and helps my job so what<font color="#E5E5E5"> is</font>

34
00:01:21,240 --> 00:01:24,780
the capture<font color="#CCCCCC"> i don't think i need to</font>

35
00:01:22,710 --> 00:01:27,030
delve more details here i think

36
00:01:24,780 --> 00:01:29,880
everybody here might have seen this it's

37
00:01:27,030 --> 00:01:32,750
<font color="#E5E5E5">just completely automated public curing</font>

38
00:01:29,880 --> 00:01:35,759
tests to tells computers<font color="#CCCCCC"> in</font><font color="#E5E5E5"> humans apart</font>

39
00:01:32,750 --> 00:01:39,470
and<font color="#E5E5E5"> i think</font><font color="#CCCCCC"> that'll be</font><font color="#E5E5E5"> it it can be</font>

40
00:01:35,759 --> 00:01:42,329
visual audio or a combination of both so

41
00:01:39,470 --> 00:01:44,610
what is<font color="#CCCCCC"> a capture provider and how does</font>

42
00:01:42,329 --> 00:01:48,419
it<font color="#E5E5E5"> integrate with normal</font><font color="#CCCCCC"> websites so</font>

43
00:01:44,610 --> 00:01:50,460
capture provider why do we need it and

44
00:01:48,420 --> 00:01:54,000
why does<font color="#E5E5E5"> it exist it exists because</font>

45
00:01:50,460 --> 00:01:56,250
writing a secure<font color="#CCCCCC"> capture is very hard I</font>

46
00:01:54,000 --> 00:01:58,590
mean you write an image you just

47
00:01:56,250 --> 00:01:59,939
generally<font color="#E5E5E5"> what it comes down to is you</font>

48
00:01:58,590 --> 00:02:02,399
have an image you have a<font color="#E5E5E5"> text on it you</font>

49
00:01:59,939 --> 00:02:05,460
ask somebody<font color="#CCCCCC"> to solve that for you but</font>

50
00:02:02,399 --> 00:02:07,200
the OCR engines today are good and the

51
00:02:05,460 --> 00:02:08,910
pre-processing or the capture p

52
00:02:07,200 --> 00:02:10,080
processing can be done in a very

53
00:02:08,910 --> 00:02:12,630
efficient manner that

54
00:02:10,080 --> 00:02:14,490
can help you solve the captures which

55
00:02:12,630 --> 00:02:17,340
are like more solvable by machines than

56
00:02:14,490 --> 00:02:20,220
humans so writing secure<font color="#CCCCCC"> captures is</font>

57
00:02:17,340 --> 00:02:22,140
hard today because of<font color="#E5E5E5"> the advancement in</font>

58
00:02:20,220 --> 00:02:26,790
<font color="#CCCCCC">the digital signal processing and image</font>

59
00:02:22,140 --> 00:02:28,859
processing algorithms then the capture

60
00:02:26,790 --> 00:02:30,750
providers for that purpose we<font color="#CCCCCC"> have</font>

61
00:02:28,860 --> 00:02:32,160
capture providers which what they do is

62
00:02:30,750 --> 00:02:33,630
they provide you a secure capture

63
00:02:32,160 --> 00:02:36,210
implementation<font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> incorporate</font>

64
00:02:33,630 --> 00:02:37,769
in your<font color="#E5E5E5"> web application or any type of</font>

65
00:02:36,210 --> 00:02:41,540
application you want either it can be

66
00:02:37,770 --> 00:02:44,580
image based or audio based so it offers

67
00:02:41,540 --> 00:02:47,670
<font color="#E5E5E5">capture generation and verification</font>

68
00:02:44,580 --> 00:02:49,590
capabilities so it does generation for

69
00:02:47,670 --> 00:02:52,530
you and also does the verification part

70
00:02:49,590 --> 00:02:55,410
for you and the<font color="#CCCCCC"> websites can consume</font>

71
00:02:52,530 --> 00:02:57,300
<font color="#CCCCCC">this services so you have an API you</font>

72
00:02:55,410 --> 00:02:58,799
create your login with those guys you

73
00:02:57,300 --> 00:03:01,110
have an API which you can<font color="#E5E5E5"> include in</font>

74
00:02:58,800 --> 00:03:03,330
your code and you can consume the

75
00:03:01,110 --> 00:03:05,040
services so<font color="#CCCCCC"> they have some websites like</font>

76
00:03:03,330 --> 00:03:07,350
any capture have limit like you can have

77
00:03:05,040 --> 00:03:09,540
a million captures at maximum consumed

78
00:03:07,350 --> 00:03:11,340
by the whips your website in one day and

79
00:03:09,540 --> 00:03:14,010
after<font color="#E5E5E5"> that they really do not specify</font>

80
00:03:11,340 --> 00:03:15,930
how it goes so and there are a lot of

81
00:03:14,010 --> 00:03:18,390
other capture providers i have given

82
00:03:15,930 --> 00:03:19,890
<font color="#E5E5E5">three here one is capsules dotnet one is</font>

83
00:03:18,390 --> 00:03:24,929
captured or and the third one is he

84
00:03:19,890 --> 00:03:26,940
capture to the right so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> how i</font>

85
00:03:24,930 --> 00:03:31,440
piccoli capture<font color="#CCCCCC"> Royd integration works</font>

86
00:03:26,940 --> 00:03:33,750
this is a user here and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

87
00:03:31,440 --> 00:03:36,209
capture provider and this is a server to

88
00:03:33,750 --> 00:03:38,790
which<font color="#E5E5E5"> you're going to try and create a</font>

89
00:03:36,209 --> 00:03:41,400
<font color="#E5E5E5">new login so let's see for example you</font>

90
00:03:38,790 --> 00:03:44,670
<font color="#E5E5E5">go on to register for</font><font color="#CCCCCC"> new mail ID so you</font>

91
00:03:41,400 --> 00:03:49,350
go to the registration page the next

92
00:03:44,670 --> 00:03:51,510
step you get an HTML back or GSP or what

93
00:03:49,350 --> 00:03:54,989
file here which has an image<font color="#E5E5E5"> or a script</font>

94
00:03:51,510 --> 00:03:58,380
tag so what<font color="#CCCCCC"> that does is it</font><font color="#E5E5E5"> allows the</font>

95
00:03:54,989 --> 00:04:00,090
browser when the power reaches that HTML

96
00:03:58,380 --> 00:04:02,040
tag it will retrieve the image or it

97
00:04:00,090 --> 00:04:03,900
will retrieve a<font color="#CCCCCC"> JavaScript which is</font>

98
00:04:02,040 --> 00:04:07,170
further going to retrieve images and

99
00:04:03,900 --> 00:04:09,810
then show it to you the<font color="#E5E5E5"> next</font><font color="#CCCCCC"> step is</font><font color="#E5E5E5"> the</font>

100
00:04:07,170 --> 00:04:12,208
capture retrieval process this goes to

101
00:04:09,810 --> 00:04:15,709
<font color="#CCCCCC">the capture provider and not this server</font>

102
00:04:12,209 --> 00:04:18,840
here so the capture retrieval is

103
00:04:15,709 --> 00:04:20,668
independent of this server so the only

104
00:04:18,839 --> 00:04:21,669
thing that sets is server does this it

105
00:04:20,668 --> 00:04:25,359
will<font color="#E5E5E5"> provide</font>

106
00:04:21,670 --> 00:04:27,160
an image tag which you will when you try

107
00:04:25,360 --> 00:04:30,550
to load the image it is going to be<font color="#E5E5E5"> from</font>

108
00:04:27,160 --> 00:04:33,370
a<font color="#CCCCCC"> CAPTCHA provider and then after you</font>

109
00:04:30,550 --> 00:04:36,640
get the image you solve a capture you

110
00:04:33,370 --> 00:04:39,750
send it<font color="#E5E5E5"> to the server and this server in</font>

111
00:04:36,640 --> 00:04:42,159
turn forwards it to the capture provider

112
00:04:39,750 --> 00:04:46,210
the capture provider validates the

113
00:04:42,160 --> 00:04:48,040
solution and sensor response back<font color="#E5E5E5"> to</font>

114
00:04:46,210 --> 00:04:49,810
this server so this response is

115
00:04:48,040 --> 00:04:52,270
typically a boolean it doesn't<font color="#E5E5E5"> have to</font>

116
00:04:49,810 --> 00:04:55,890
be more<font color="#CCCCCC"> than that it says</font><font color="#E5E5E5"> the capsized</font>

117
00:04:52,270 --> 00:04:58,539
successfully solved or it has failed<font color="#E5E5E5"> and</font>

118
00:04:55,890 --> 00:05:01,570
depending<font color="#E5E5E5"> on that your registration each</font>

119
00:04:58,540 --> 00:05:03,040
other allowed or it is disallowed so

120
00:05:01,570 --> 00:05:04,690
that is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> capture provider</font>

121
00:05:03,040 --> 00:05:06,730
integrations and are you does anybody

122
00:05:04,690 --> 00:05:08,560
have an equation here on how this really

123
00:05:06,730 --> 00:05:10,690
works<font color="#E5E5E5"> out because this is going to be</font>

124
00:05:08,560 --> 00:05:13,330
important when we look at the

125
00:05:10,690 --> 00:05:15,910
demonstrations and the attacks on this

126
00:05:13,330 --> 00:05:19,900
particular capture provide integration

127
00:05:15,910 --> 00:05:21,310
technique<font color="#CCCCCC"> all right let's move ahead so</font>

128
00:05:19,900 --> 00:05:26,530
this<font color="#CCCCCC"> is how</font><font color="#E5E5E5"> the retrieval typically</font>

129
00:05:21,310 --> 00:05:29,230
works you have the image and you have

130
00:05:26,530 --> 00:05:32,260
the source this is open capture and here

131
00:05:29,230 --> 00:05:34,750
when you talk about recapture it is

132
00:05:32,260 --> 00:05:36,820
google com<font color="#CCCCCC"> recaptcha API and then you</font>

133
00:05:34,750 --> 00:05:38,860
send the challenge along with that so

134
00:05:36,820 --> 00:05:41,080
this is<font color="#CCCCCC"> how the</font><font color="#E5E5E5"> capture retrieval works</font>

135
00:05:38,860 --> 00:05:44,710
in a typical web page and this is what

136
00:05:41,080 --> 00:05:46,810
gets displayed so what went wrong the

137
00:05:44,710 --> 00:05:48,640
libraries are insecure while<font color="#E5E5E5"> I was</font>

138
00:05:46,810 --> 00:05:50,140
looking at a lot of libraries for

139
00:05:48,640 --> 00:05:52,090
example let's<font color="#E5E5E5"> talk about recapture</font>

140
00:05:50,140 --> 00:05:56,320
because it is the<font color="#CCCCCC"> most popular out there</font>

141
00:05:52,090 --> 00:05:58,869
all<font color="#CCCCCC"> of the libraries that do the capture</font>

142
00:05:56,320 --> 00:06:01,000
validation part were insecure the

143
00:05:58,870 --> 00:06:03,310
capture verification was performed over

144
00:06:01,000 --> 00:06:05,860
plaintext HTTP and what that allowed you

145
00:06:03,310 --> 00:06:08,790
to do is the requests can be intercepted

146
00:06:05,860 --> 00:06:11,830
so for example if I am in a position to

147
00:06:08,790 --> 00:06:16,690
intercept the traffic which is coming<font color="#E5E5E5"> at</font>

148
00:06:11,830 --> 00:06:19,510
the step 5 here I can very much control

149
00:06:16,690 --> 00:06:22,480
what comes back<font color="#CCCCCC"> in step 6 and then I can</font>

150
00:06:19,510 --> 00:06:24,539
influence the behavior which is<font color="#E5E5E5"> coming</font>

151
00:06:22,480 --> 00:06:27,159
at step 7 here

152
00:06:24,539 --> 00:06:29,409
so the requests can be intercepted and

153
00:06:27,159 --> 00:06:32,619
there is a bullet<font color="#E5E5E5"> point here which says</font>

154
00:06:29,409 --> 00:06:35,819
steal private keys so<font color="#CCCCCC"> recapture uses</font>

155
00:06:32,619 --> 00:06:39,819
private keys to identify a particular

156
00:06:35,819 --> 00:06:43,149
website or web site that consumers the

157
00:06:39,819 --> 00:06:44,859
consumes its capture services so if and

158
00:06:43,149 --> 00:06:46,959
it sends these private keys over the

159
00:06:44,859 --> 00:06:49,089
plaintext HTTP protocol<font color="#E5E5E5"> so if you are</font>

160
00:06:46,959 --> 00:06:51,249
able to intercept the communication you

161
00:06:49,089 --> 00:06:53,799
can very much steal the private keys and

162
00:06:51,249 --> 00:06:56,709
you<font color="#E5E5E5"> don't really have to be a registered</font>

163
00:06:53,799 --> 00:06:58,269
<font color="#E5E5E5">recaps I user to use the services so you</font>

164
00:06:56,709 --> 00:07:01,089
can take a key put it on some other

165
00:06:58,269 --> 00:07:02,829
website which you own and then you can

166
00:07:01,089 --> 00:07:05,769
use that without even registering for

167
00:07:02,829 --> 00:07:07,119
<font color="#E5E5E5">Google services then there is</font><font color="#CCCCCC"> a</font>

168
00:07:05,769 --> 00:07:09,929
<font color="#E5E5E5">possibility that you can</font><font color="#CCCCCC"> generate</font>

169
00:07:07,119 --> 00:07:12,699
response or you can alter the responses

170
00:07:09,929 --> 00:07:15,669
and which are coming<font color="#E5E5E5"> from the capture</font>

171
00:07:12,699 --> 00:07:18,059
provider so let's see how<font color="#CCCCCC"> it goes so</font>

172
00:07:15,669 --> 00:07:20,709
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the capture verification</font>

173
00:07:18,059 --> 00:07:25,509
libraries so this<font color="#E5E5E5"> is that on the top you</font>

174
00:07:20,709 --> 00:07:28,349
<font color="#CCCCCC">see which is from real sly brary this is</font>

175
00:07:25,509 --> 00:07:32,949
a code in<font color="#E5E5E5"> Ruby and you can see that the</font>

176
00:07:28,349 --> 00:07:35,139
<font color="#E5E5E5">verify URL is HTTP and there is if you</font>

177
00:07:32,949 --> 00:07:38,019
see there is no verify URL which is over

178
00:07:35,139 --> 00:07:41,469
HTTPS there is a retrieval URL which is

179
00:07:38,019 --> 00:07:43,029
over HTTPS so the retrieval urs allows

180
00:07:41,469 --> 00:07:48,339
you to retrieve a capture from a

181
00:07:43,029 --> 00:07:50,589
particular website so you can so this

182
00:07:48,339 --> 00:07:53,589
allows<font color="#E5E5E5"> you to avoid mixing HTTP and</font>

183
00:07:50,589 --> 00:07:57,339
HTTPS but there<font color="#E5E5E5"> is no mechanism with</font>

184
00:07:53,589 --> 00:07:59,589
which you can ask recapture to validate

185
00:07:57,339 --> 00:08:03,999
over HTTP in the default libraries and

186
00:07:59,589 --> 00:08:07,089
similarly with the asp.net library i

187
00:08:03,999 --> 00:08:09,569
reversed it and saw<font color="#CCCCCC"> that the validation</font>

188
00:08:07,089 --> 00:08:14,409
requests were being sent to a plain text

189
00:08:09,569 --> 00:08:16,809
or s/t over HTTP so the impersonation

190
00:08:14,409 --> 00:08:19,869
part what<font color="#E5E5E5"> we are</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to see here is as</font>

191
00:08:16,809 --> 00:08:23,919
I said<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> are able</font><font color="#E5E5E5"> to impersonate</font>

192
00:08:19,869 --> 00:08:26,409
and redirect the reader<font color="#E5E5E5"> the verification</font>

193
00:08:23,919 --> 00:08:30,489
traffic to your server you can<font color="#E5E5E5"> control</font>

194
00:08:26,409 --> 00:08:33,610
the entire response and you can bypass

195
00:08:30,489 --> 00:08:35,139
the entire protection which is the

196
00:08:33,610 --> 00:08:38,020
<font color="#E5E5E5">CAPTCHA validation protection so here is</font>

197
00:08:35,139 --> 00:08:41,260
how<font color="#CCCCCC"> it goes step one two and</font>

198
00:08:38,020 --> 00:08:43,870
<font color="#CCCCCC">the complete as we saw earlier in the</font>

199
00:08:41,260 --> 00:08:46,030
step<font color="#CCCCCC"> for what you see</font><font color="#E5E5E5"> here is that</font><font color="#CCCCCC"> the</font>

200
00:08:43,870 --> 00:08:51,820
cabin capture solution comes and it goes

201
00:08:46,030 --> 00:08:54,370
out for validation we<font color="#E5E5E5"> hijack the traffic</font>

202
00:08:51,820 --> 00:08:57,550
<font color="#E5E5E5">and the validation is in turn performed</font>

203
00:08:54,370 --> 00:08:59,830
by the server that we<font color="#E5E5E5"> control and when</font>

204
00:08:57,550 --> 00:09:01,620
we control the server we can choose the

205
00:08:59,830 --> 00:09:04,210
response<font color="#CCCCCC"> that we want</font><font color="#E5E5E5"> to send back and</font>

206
00:09:01,620 --> 00:09:06,760
based on that we<font color="#CCCCCC"> can influence the step</font>

207
00:09:04,210 --> 00:09:10,840
seven and step 6 so if you are able<font color="#E5E5E5"> to</font>

208
00:09:06,760 --> 00:09:12,700
control 6v anyway control<font color="#CCCCCC"> seven so this</font>

209
00:09:10,840 --> 00:09:15,280
<font color="#CCCCCC">is</font><font color="#E5E5E5"> how the capture provider</font>

210
00:09:12,700 --> 00:09:22,360
impersonation works any questions on

211
00:09:15,280 --> 00:09:23,500
<font color="#CCCCCC">this slide alright so the tool that we</font>

212
00:09:22,360 --> 00:09:26,620
are<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> discuss today is click</font>

213
00:09:23,500 --> 00:09:29,590
capture so what<font color="#E5E5E5"> this does is it is</font>

214
00:09:26,620 --> 00:09:31,420
basically it lifts off ssl strip code

215
00:09:29,590 --> 00:09:34,780
base<font color="#CCCCCC"> i believe most of you will be</font>

216
00:09:31,420 --> 00:09:37,270
familiar with ssl strip right so i

217
00:09:34,780 --> 00:09:40,030
modified<font color="#CCCCCC"> ssense trip to suit my purpose</font>

218
00:09:37,270 --> 00:09:42,490
it's written in<font color="#CCCCCC"> Python because</font><font color="#E5E5E5"> SSS trip</font>

219
00:09:40,030 --> 00:09:44,890
was Python so what it does is<font color="#E5E5E5"> tell</font>

220
00:09:42,490 --> 00:09:46,570
impersonates capture providers so it

221
00:09:44,890 --> 00:09:48,970
allows you to become a capture provider

222
00:09:46,570 --> 00:09:51,310
so you can be<font color="#E5E5E5"> recapture you can be</font>

223
00:09:48,970 --> 00:09:54,460
captured or you can be<font color="#CCCCCC"> open capture or</font>

224
00:09:51,310 --> 00:09:56,079
any capture provider you want with easy

225
00:09:54,460 --> 00:09:59,170
configuration files which comes in the

226
00:09:56,080 --> 00:10:01,720
form of<font color="#CCCCCC"> XML then it administers capture</font>

227
00:09:59,170 --> 00:10:03,729
verification requests so you can accept

228
00:10:01,720 --> 00:10:06,520
a capture verification request allow it

229
00:10:03,730 --> 00:10:08,500
or<font color="#E5E5E5"> deny it or do whatever you want with</font>

230
00:10:06,520 --> 00:10:10,360
<font color="#CCCCCC">that and you can even I mean cause a</font>

231
00:10:08,500 --> 00:10:13,030
denial of service for some registrations

232
00:10:10,360 --> 00:10:16,750
by denying all the capture validation

233
00:10:13,030 --> 00:10:18,970
requests and then you can also record

234
00:10:16,750 --> 00:10:22,060
the logs and you can steal the private

235
00:10:18,970 --> 00:10:24,160
keys which we talked about<font color="#CCCCCC"> earlier so</font>

236
00:10:22,060 --> 00:10:27,099
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> how the capture verification</font>

237
00:10:24,160 --> 00:10:29,439
requests look like it<font color="#E5E5E5"> is an important</font>

238
00:10:27,100 --> 00:10:31,930
point to remember that all these

239
00:10:29,440 --> 00:10:35,230
requests go over HTTP one the second

240
00:10:31,930 --> 00:10:38,319
important thing is that a<font color="#E5E5E5"> combination of</font>

241
00:10:35,230 --> 00:10:41,710
<font color="#E5E5E5">the hostname and the validation path</font>

242
00:10:38,320 --> 00:10:43,570
here are used to<font color="#CCCCCC"> identify a unique</font>

243
00:10:41,710 --> 00:10:46,330
capture provider so let's<font color="#E5E5E5"> say for</font>

244
00:10:43,570 --> 00:10:48,310
example a request is going to google com

245
00:10:46,330 --> 00:10:51,279
and it is going to a validation path

246
00:10:48,310 --> 00:10:54,248
which is<font color="#CCCCCC"> recaptcha api verify</font>

247
00:10:51,279 --> 00:10:56,110
when click capture sees these through

248
00:10:54,249 --> 00:10:58,240
things<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> combination it will</font>

249
00:10:56,110 --> 00:11:00,910
recognize that it is<font color="#E5E5E5"> the request is for</font>

250
00:10:58,240 --> 00:11:03,939
recapture and then it will<font color="#CCCCCC"> go and</font>

251
00:11:00,910 --> 00:11:05,469
analyze the<font color="#E5E5E5"> contents of the body based</font>

252
00:11:03,939 --> 00:11:08,829
<font color="#E5E5E5">on these contents it will serve a</font>

253
00:11:05,470 --> 00:11:11,050
response back to<font color="#CCCCCC"> the requesting server</font>

254
00:11:08,829 --> 00:11:13,329
and then<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is open capture</font>

255
00:11:11,050 --> 00:11:16,959
specification so what it allows you to

256
00:11:13,329 --> 00:11:19,719
do<font color="#CCCCCC"> is you the host name is www open</font>

257
00:11:16,959 --> 00:11:23,489
capture com then the requests are<font color="#CCCCCC"> sent</font>

258
00:11:19,720 --> 00:11:26,230
to validate or PHP and this is the form

259
00:11:23,490 --> 00:11:28,300
which is<font color="#E5E5E5"> a answer is equal to solution</font>

260
00:11:26,230 --> 00:11:31,839
and image is<font color="#E5E5E5"> equal to capture identifier</font>

261
00:11:28,300 --> 00:11:34,120
so these this information<font color="#CCCCCC"> is used by</font>

262
00:11:31,839 --> 00:11:36,850
open capture to verify the capture<font color="#E5E5E5"> and</font>

263
00:11:34,120 --> 00:11:40,720
similarly here for recapture you see

264
00:11:36,850 --> 00:11:43,360
that a private key goes and then there

265
00:11:40,720 --> 00:11:45,550
<font color="#CCCCCC">is a remote IP address then there is a</font>

266
00:11:43,360 --> 00:11:50,350
challenge which is the<font color="#CCCCCC"> imager</font><font color="#E5E5E5"> NT file</font>

267
00:11:45,550 --> 00:11:53,109
and then there<font color="#CCCCCC"> is a response so clip</font>

268
00:11:50,350 --> 00:11:54,699
capture analyzes all of this to come to

269
00:11:53,110 --> 00:11:56,800
a conclusion that what should be the

270
00:11:54,699 --> 00:11:58,809
response that which be sending back what

271
00:11:56,800 --> 00:12:00,729
is the capture provider so it identifies

272
00:11:58,809 --> 00:12:03,430
that and based on that it responds to

273
00:12:00,730 --> 00:12:05,620
your<font color="#CCCCCC"> requests so these are the type of</font>

274
00:12:03,430 --> 00:12:08,109
responses which you typically see when

275
00:12:05,620 --> 00:12:10,809
<font color="#CCCCCC">you're validating captures so for</font>

276
00:12:08,110 --> 00:12:15,029
<font color="#CCCCCC">reCAPTCHA the validating</font><font color="#E5E5E5"> host we saw was</font>

277
00:12:10,809 --> 00:12:19,420
google com when a capture solution is

278
00:12:15,029 --> 00:12:22,269
successful you get a 200<font color="#CCCCCC"> okay some</font>

279
00:12:19,420 --> 00:12:25,628
capture providers give you a<font color="#E5E5E5"> 400 404 or</font>

280
00:12:22,269 --> 00:12:27,689
400 or 401 to indicate that the capture

281
00:12:25,629 --> 00:12:32,139
solution was incorrect but<font color="#CCCCCC"> recaptcha</font>

282
00:12:27,689 --> 00:12:35,019
uses 400 or 3200 open capture also does

283
00:12:32,139 --> 00:12:36,759
the same some capture providers rely on

284
00:12:35,019 --> 00:12:38,589
response headers for example somebody

285
00:12:36,759 --> 00:12:40,689
would just add a custom header which

286
00:12:38,589 --> 00:12:44,319
would be say success and then it would

287
00:12:40,689 --> 00:12:46,420
<font color="#E5E5E5">be like true or false so that for</font>

288
00:12:44,319 --> 00:12:48,849
recapture there is no mandatory header

289
00:12:46,420 --> 00:12:51,819
and for open capture also there is no

290
00:12:48,850 --> 00:12:54,279
header that<font color="#E5E5E5"> is mandated then the success</font>

291
00:12:51,819 --> 00:12:57,429
body so then the capture solution is

292
00:12:54,279 --> 00:13:00,220
correct you see that the body would

293
00:12:57,429 --> 00:13:02,680
contain just one string which is<font color="#E5E5E5"> true</font>

294
00:13:00,220 --> 00:13:05,290
and for open capture it will contain

295
00:13:02,680 --> 00:13:08,170
which is something<font color="#E5E5E5"> which is pass now</font>

296
00:13:05,290 --> 00:13:10,689
when you see a failure the first two

297
00:13:08,170 --> 00:13:14,829
things are same you get to knit<font color="#CCCCCC"> okay and</font>

298
00:13:10,690 --> 00:13:16,690
you also get there is no header again

299
00:13:14,830 --> 00:13:19,930
but the failure body is a little

300
00:13:16,690 --> 00:13:22,540
different so recapture returns an error

301
00:13:19,930 --> 00:13:25,479
code along<font color="#CCCCCC"> with the false message and</font>

302
00:13:22,540 --> 00:13:28,300
open capture just retains a string which

303
00:13:25,480 --> 00:13:31,210
is fail so some capture providers<font color="#CCCCCC"> return</font>

304
00:13:28,300 --> 00:13:33,490
like say one or zero true or false<font color="#E5E5E5"> so</font>

305
00:13:31,210 --> 00:13:35,650
there are<font color="#E5E5E5"> a lot of different</font><font color="#CCCCCC"> types of</font>

306
00:13:33,490 --> 00:13:37,120
responses that you need to cater to when

307
00:13:35,650 --> 00:13:39,640
you write a generic tool like click

308
00:13:37,120 --> 00:13:41,290
capture so it has<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look forward for</font>

309
00:13:39,640 --> 00:13:43,180
the signatures when the requests go out

310
00:13:41,290 --> 00:13:47,880
and it has<font color="#CCCCCC"> to be able to construct the</font>

311
00:13:43,180 --> 00:13:51,370
responses based on each capture type so

312
00:13:47,880 --> 00:13:53,950
capture verification and<font color="#E5E5E5"> wrist request</font>

313
00:13:51,370 --> 00:13:56,470
and response characteristics there is a

314
00:13:53,950 --> 00:13:58,600
<font color="#CCCCCC">dedicated server all the time and it has</font>

315
00:13:56,470 --> 00:14:00,760
<font color="#CCCCCC">to abide by HTTP specifications so that</font>

316
00:13:58,600 --> 00:14:03,730
makes writing the two little easier and

317
00:14:00,760 --> 00:14:06,580
the responses are true or<font color="#E5E5E5"> false pass or</font>

318
00:14:03,730 --> 00:14:09,010
fail one or zero so they are primarily

319
00:14:06,580 --> 00:14:12,850
boolean so that helps us write a general

320
00:14:09,010 --> 00:14:14,350
tool that can impersonate any capture

321
00:14:12,850 --> 00:14:16,600
provider because the responses are going

322
00:14:14,350 --> 00:14:18,820
to be<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> one it is not going to be</font>

323
00:14:16,600 --> 00:14:21,040
a content of an email for example there

324
00:14:18,820 --> 00:14:24,370
is no human interpreting it so even if

325
00:14:21,040 --> 00:14:26,380
there is let me put it<font color="#E5E5E5"> this way so if</font>

326
00:14:24,370 --> 00:14:28,060
there is no human interpreting it there

327
00:14:26,380 --> 00:14:29,380
is no way for the machine to be able<font color="#E5E5E5"> to</font>

328
00:14:28,060 --> 00:14:33,430
figure out that the person on the other

329
00:14:29,380 --> 00:14:35,560
side is a<font color="#E5E5E5"> machine or a human so that is</font>

330
00:14:33,430 --> 00:14:38,620
what<font color="#E5E5E5"> is the primary trust here and</font>

331
00:14:35,560 --> 00:14:40,420
that's what click capture exploits this

332
00:14:38,620 --> 00:14:43,720
is how the clip capture help looks like

333
00:14:40,420 --> 00:14:45,790
and there are several operational modes

334
00:14:43,720 --> 00:14:48,670
so there is<font color="#CCCCCC"> a monitor mode which allows</font>

335
00:14:45,790 --> 00:14:50,589
you to monitor all the capture

336
00:14:48,670 --> 00:14:52,719
validation requests log the<font color="#E5E5E5"> request</font>

337
00:14:50,590 --> 00:14:54,490
locally take out the<font color="#E5E5E5"> private keys and do</font>

338
00:14:52,720 --> 00:14:57,280
more stuff and there is a denial of

339
00:14:54,490 --> 00:14:59,680
service mode which allows you to<font color="#E5E5E5"> send a</font>

340
00:14:57,280 --> 00:15:01,329
denial of service or say a false for

341
00:14:59,680 --> 00:15:03,069
every capture requests that you receive

342
00:15:01,330 --> 00:15:05,540
so that

343
00:15:03,070 --> 00:15:07,399
effectively terminates are the

344
00:15:05,540 --> 00:15:09,740
possibility of creation of new accounts

345
00:15:07,399 --> 00:15:11,180
or any of those things<font color="#E5E5E5"> so for as long as</font>

346
00:15:09,740 --> 00:15:13,160
<font color="#CCCCCC">you are intercepting the traffic</font><font color="#E5E5E5"> and</font>

347
00:15:11,180 --> 00:15:14,779
you're sending<font color="#E5E5E5"> false for every request</font>

348
00:15:13,160 --> 00:15:17,540
there will be a denial<font color="#CCCCCC"> of service and</font>

349
00:15:14,779 --> 00:15:20,959
then there<font color="#CCCCCC"> is a stealth mode in which</font>

350
00:15:17,540 --> 00:15:23,779
you can<font color="#CCCCCC"> provide a custom string why this</font>

351
00:15:20,959 --> 00:15:25,670
<font color="#E5E5E5">is needed is because let's say you</font>

352
00:15:23,779 --> 00:15:27,589
happen to be able<font color="#E5E5E5"> to intercept capture</font>

353
00:15:25,670 --> 00:15:30,349
validation requests for one website and

354
00:15:27,589 --> 00:15:32,120
then you start approving every capture

355
00:15:30,350 --> 00:15:33,920
<font color="#E5E5E5">request that you receive there will be</font><font color="#CCCCCC"> a</font>

356
00:15:32,120 --> 00:15:36,260
surge in<font color="#E5E5E5"> the amount of account creations</font>

357
00:15:33,920 --> 00:15:40,219
and that may raise red flags so there<font color="#E5E5E5"> is</font>

358
00:15:36,260 --> 00:15:42,829
a stealth mode which would well whatever

359
00:15:40,220 --> 00:15:45,140
says approve the capture requests only

360
00:15:42,829 --> 00:15:47,209
those that you generate so if I am an

361
00:15:45,140 --> 00:15:49,850
attacker<font color="#E5E5E5"> I can control the capture</font>

362
00:15:47,209 --> 00:15:51,500
requests that my server would generate

363
00:15:49,850 --> 00:15:54,110
and those requests would belong only to

364
00:15:51,500 --> 00:15:56,779
me and not to for anybody<font color="#CCCCCC"> else and there</font>

365
00:15:54,110 --> 00:15:59,990
is a<font color="#E5E5E5"> random mode which would send out</font>

366
00:15:56,779 --> 00:16:01,939
randomly true and false responses this

367
00:15:59,990 --> 00:16:04,730
is just<font color="#E5E5E5"> a teaser mode and there is an</font>

368
00:16:01,940 --> 00:16:07,310
<font color="#E5E5E5">avalanche a mode once you initiate this</font>

369
00:16:04,730 --> 00:16:09,920
mood every capture request that comes to

370
00:16:07,310 --> 00:16:11,689
this to clip capture would be responded

371
00:16:09,920 --> 00:16:14,390
with<font color="#E5E5E5"> the truth so all the captures get</font>

372
00:16:11,690 --> 00:16:21,850
approved so let's<font color="#E5E5E5"> look at the few</font>

373
00:16:14,390 --> 00:16:21,850
demonstrations here<font color="#CCCCCC"> alright</font>

374
00:16:22,610 --> 00:16:27,180
so this<font color="#CCCCCC"> is a small raise application</font>

375
00:16:25,589 --> 00:16:30,569
that i have written and it's<font color="#E5E5E5"> running on</font>

376
00:16:27,180 --> 00:16:32,160
a vmware here so to<font color="#E5E5E5"> VMware's this is</font>

377
00:16:30,569 --> 00:16:35,670
where clip capture is running and this

378
00:16:32,160 --> 00:16:36,810
is where the server<font color="#CCCCCC"> is</font><font color="#E5E5E5"> running</font><font color="#CCCCCC"> now what</font>

379
00:16:35,670 --> 00:16:43,829
I'm going to do<font color="#E5E5E5"> is I'm</font><font color="#CCCCCC"> going to show you</font>

380
00:16:36,810 --> 00:16:46,349
<font color="#E5E5E5">how these are web applications work so</font>

381
00:16:43,829 --> 00:16:50,910
by there is a so<font color="#E5E5E5"> you can enter a new</font>

382
00:16:46,350 --> 00:16:54,839
secret here and if<font color="#E5E5E5"> you say some value</font>

383
00:16:50,910 --> 00:16:59,699
can somebody say his or her name all

384
00:16:54,839 --> 00:17:01,170
right i'll just pick move on myself<font color="#E5E5E5"> so</font>

385
00:16:59,699 --> 00:17:03,839
if you provide an incorrect capture

386
00:17:01,170 --> 00:17:05,908
solution what is going<font color="#CCCCCC"> to happen is that</font>

387
00:17:03,839 --> 00:17:07,919
value won't<font color="#E5E5E5"> be stored in the database so</font>

388
00:17:05,909 --> 00:17:11,329
it's that simple if you<font color="#E5E5E5"> provide a</font>

389
00:17:07,919 --> 00:17:11,329
correct solution to the capture

390
00:17:17,990 --> 00:17:22,670
you will see the value in the database

391
00:17:20,410 --> 00:17:24,800
so everyone understands this behavior

392
00:17:22,670 --> 00:17:26,240
now so if you solve the caps are

393
00:17:24,800 --> 00:17:28,250
correctly the value goes into the

394
00:17:26,240 --> 00:17:31,130
database and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> it persists there if</font>

395
00:17:28,250 --> 00:17:33,170
you<font color="#E5E5E5"> don't solve it correctly you get a</font>

396
00:17:31,130 --> 00:17:35,120
you resist you just have<font color="#E5E5E5"> to enter the</font>

397
00:17:33,170 --> 00:17:39,530
value again with a new capture so is

398
00:17:35,120 --> 00:17:42,639
that<font color="#CCCCCC"> okay similarly for this is a</font>

399
00:17:39,530 --> 00:17:44,510
capture tour again the same

400
00:17:42,640 --> 00:17:46,340
implementation is here for three

401
00:17:44,510 --> 00:17:50,420
different capture providers will test

402
00:17:46,340 --> 00:17:54,290
this out if it works well if<font color="#E5E5E5"> I give any</font>

403
00:17:50,420 --> 00:17:59,270
random string here it won't<font color="#CCCCCC"> work let me</font>

404
00:17:54,290 --> 00:18:02,590
provide something more useful dy6<font color="#E5E5E5"> and</font>

405
00:17:59,270 --> 00:18:02,590
see all right

406
00:18:03,220 --> 00:18:09,900
alright so that was submitted and we

407
00:18:06,190 --> 00:18:14,500
have two outer zone entries now

408
00:18:09,900 --> 00:18:16,960
similarly<font color="#CCCCCC"> for open capture so we can see</font>

409
00:18:14,500 --> 00:18:20,260
it across different captures now let's

410
00:18:16,960 --> 00:18:22,030
start with the<font color="#E5E5E5"> process of intercepting</font>

411
00:18:20,260 --> 00:18:24,100
the requests and to be able to modify

412
00:18:22,030 --> 00:18:27,250
the responses so what I'm going to do

413
00:18:24,100 --> 00:18:34,870
now<font color="#CCCCCC"> is I'm going to configure the VMware</font>

414
00:18:27,250 --> 00:18:36,909
or to enable up IP forwarding on the

415
00:18:34,870 --> 00:18:38,408
clip capture machine the next thing I'm

416
00:18:36,909 --> 00:18:41,710
going to do is I'm going<font color="#E5E5E5"> to enable the</font>

417
00:18:38,409 --> 00:18:45,010
port forwarding here so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> iptables</font>

418
00:18:41,710 --> 00:18:47,919
and<font color="#CCCCCC"> i initiate the pre routing and then</font>

419
00:18:45,010 --> 00:18:50,679
<font color="#E5E5E5">i say for the destination port is 80 and</font>

420
00:18:47,919 --> 00:18:52,809
then you have<font color="#E5E5E5"> to redirect to port 7777</font>

421
00:18:50,679 --> 00:18:55,570
which is the default port where clip

422
00:18:52,809 --> 00:18:58,360
capture works and then<font color="#CCCCCC"> i'm going</font><font color="#E5E5E5"> to</font>

423
00:18:55,570 --> 00:19:04,750
initiate op spoofing<font color="#E5E5E5"> I'll do that from</font>

424
00:18:58,360 --> 00:19:07,199
another so what just give<font color="#CCCCCC"> me a minute I</font>

425
00:19:04,750 --> 00:19:07,200
think<font color="#E5E5E5"> I'll</font>

426
00:19:07,890 --> 00:19:12,280
so what this command will do is it will

427
00:19:10,150 --> 00:19:15,580
initiate<font color="#E5E5E5"> an appt spoof of Ethan on</font>

428
00:19:12,280 --> 00:19:19,660
Ethernet<font color="#CCCCCC"> zero interface for all the</font>

429
00:19:15,580 --> 00:19:25,210
requests going to this I from this IP it

430
00:19:19,660 --> 00:19:28,300
will<font color="#CCCCCC"> it'll like a poison or 137 and it</font>

431
00:19:25,210 --> 00:19:31,300
will create the<font color="#E5E5E5"> Gateway for this host to</font>

432
00:19:28,300 --> 00:19:34,200
this so let's start<font color="#E5E5E5"> this now slop</font>

433
00:19:31,300 --> 00:19:38,129
poisoning takes place and it says

434
00:19:34,200 --> 00:19:40,180
<font color="#CCCCCC">alright so</font><font color="#E5E5E5"> they are poisoning is</font>

435
00:19:38,130 --> 00:19:43,650
effective now so what we are going<font color="#E5E5E5"> to do</font>

436
00:19:40,180 --> 00:19:43,650
<font color="#E5E5E5">now</font><font color="#CCCCCC"> is we are</font><font color="#E5E5E5"> going to run clip capture</font>

437
00:19:57,640 --> 00:20:03,170
alright so these are the various monitor

438
00:20:00,170 --> 00:20:04,940
modes monitor mode<font color="#E5E5E5"> avalancha mode by</font>

439
00:20:03,170 --> 00:20:07,370
default it runs in<font color="#E5E5E5"> the monitor mode so</font>

440
00:20:04,940 --> 00:20:08,990
we are<font color="#E5E5E5"> going to just start with that you</font>

441
00:20:07,370 --> 00:20:11,030
<font color="#E5E5E5">can choose the capture that you want to</font>

442
00:20:08,990 --> 00:20:14,050
intercept we are going<font color="#CCCCCC"> to just first run</font>

443
00:20:11,030 --> 00:20:16,790
in it in a monitor mode and let it

444
00:20:14,050 --> 00:20:20,419
capture the keys for recapture and<font color="#E5E5E5"> we</font>

445
00:20:16,790 --> 00:20:22,580
will be able to<font color="#E5E5E5"> see that so it is</font>

446
00:20:20,420 --> 00:20:24,320
capturing the captures for recapture

447
00:20:22,580 --> 00:20:26,620
open capture and captured or three

448
00:20:24,320 --> 00:20:26,620
providers

449
00:20:36,830 --> 00:20:41,570
so the monitor mode would allow all the

450
00:20:39,500 --> 00:20:45,710
requests to complete as they are so it

451
00:20:41,570 --> 00:20:47,120
would<font color="#CCCCCC"> just record the request and it</font>

452
00:20:45,710 --> 00:20:50,630
will just record the request and it will

453
00:20:47,120 --> 00:20:51,918
pass it on to the server so here you

454
00:20:50,630 --> 00:20:53,690
will see that we will<font color="#E5E5E5"> need to provide a</font>

455
00:20:51,919 --> 00:20:59,090
correct solution for us<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> able to</font>

456
00:20:53,690 --> 00:21:00,980
enter the value into the database we are

457
00:20:59,090 --> 00:21:06,769
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start clip stop clip capture</font>

458
00:21:00,980 --> 00:21:11,840
and look at its log so you see see here

459
00:21:06,769 --> 00:21:13,970
that it's today right<font color="#E5E5E5"> now and it was</font>

460
00:21:11,840 --> 00:21:16,730
able to get a private key which is

461
00:21:13,970 --> 00:21:19,669
<font color="#E5E5E5">something we can use and put it on our</font>

462
00:21:16,730 --> 00:21:21,740
servers to use the services recapture

463
00:21:19,669 --> 00:21:24,139
services without even registering for it

464
00:21:21,740 --> 00:21:26,870
and then there<font color="#CCCCCC"> is a response which we</font>

465
00:21:24,139 --> 00:21:29,000
really don't care to<font color="#CCCCCC"> know what it is and</font>

466
00:21:26,870 --> 00:21:30,489
now it really works out so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

467
00:21:29,000 --> 00:21:32,779
monitor mode where which you can

468
00:21:30,490 --> 00:21:34,549
intercept the captures take the private

469
00:21:32,779 --> 00:21:36,289
keys out and use private keys in your

470
00:21:34,549 --> 00:21:38,570
own website without registering for<font color="#CCCCCC"> the</font>

471
00:21:36,289 --> 00:21:43,490
services the next mode we are going to

472
00:21:38,570 --> 00:21:45,289
start is the Avalanche<font color="#CCCCCC"> a mode here you</font>

473
00:21:43,490 --> 00:21:47,990
will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to intercept all requests</font>

474
00:21:45,289 --> 00:21:51,399
and prove them no matter what solution

475
00:21:47,990 --> 00:21:53,690
you provide so what I've done is

476
00:21:51,399 --> 00:21:56,590
initiated<font color="#E5E5E5"> a net in avalanche a mode</font>

477
00:21:53,690 --> 00:22:01,250
which is with the hyphen a flag and

478
00:21:56,590 --> 00:22:03,709
let's see what we see now just and if I

479
00:22:01,250 --> 00:22:07,399
provide a wrong solution in ideal

480
00:22:03,710 --> 00:22:09,679
behavior I should be allowed to enter a

481
00:22:07,399 --> 00:22:14,479
new string but with and the current

482
00:22:09,679 --> 00:22:16,840
sting will not be stored so see we were

483
00:22:14,480 --> 00:22:16,840
able<font color="#E5E5E5"> to</font>

484
00:22:18,100 --> 00:22:25,600
thank you so we were able to bypass the

485
00:22:24,070 --> 00:22:27,760
protection and we were able<font color="#E5E5E5"> to put</font><font color="#CCCCCC"> the</font>

486
00:22:25,600 --> 00:22:31,030
values in<font color="#E5E5E5"> the database and we bypassed</font>

487
00:22:27,760 --> 00:22:33,850
Eddie capture protection so let's there

488
00:22:31,030 --> 00:22:36,070
<font color="#E5E5E5">is a automated code that i have here</font>

489
00:22:33,850 --> 00:22:39,850
what it is going<font color="#E5E5E5"> to do is it's going to</font>

490
00:22:36,070 --> 00:22:43,450
<font color="#E5E5E5">submit a large number of requests let's</font>

491
00:22:39,850 --> 00:22:45,399
see this code here so these are<font color="#CCCCCC"> the URIs</font>

492
00:22:43,450 --> 00:22:48,580
to which it will<font color="#E5E5E5"> be submitting the</font>

493
00:22:45,400 --> 00:22:50,020
requests and the answer here is autozone

494
00:22:48,580 --> 00:22:53,649
we will use it later on<font color="#E5E5E5"> during the</font>

495
00:22:50,020 --> 00:22:57,549
stealth mode and this is how the

496
00:22:53,650 --> 00:22:59,970
requests are going to go out so let's

497
00:22:57,549 --> 00:22:59,970
start<font color="#CCCCCC"> at</font>

498
00:23:08,780 --> 00:23:13,700
alright so you see that<font color="#E5E5E5"> the requests are</font>

499
00:23:11,600 --> 00:23:15,949
starting to go out and you see that it

500
00:23:13,700 --> 00:23:21,700
spawns body let's say to see how it

501
00:23:15,950 --> 00:23:21,700
really looks here right here

502
00:23:32,060 --> 00:23:36,560
so you see<font color="#E5E5E5"> you are able to bypass the</font>

503
00:23:34,460 --> 00:23:38,480
complete capture protection and you can

504
00:23:36,560 --> 00:23:41,000
enter as many values into<font color="#CCCCCC"> the database</font>

505
00:23:38,480 --> 00:23:42,740
as you<font color="#E5E5E5"> like and there are two three</font>

506
00:23:41,000 --> 00:23:47,090
hosts in action here one this<font color="#CCCCCC"> is a</font>

507
00:23:42,740 --> 00:23:50,330
windows box these two are<font color="#CCCCCC"> the VMS 133 is</font>

508
00:23:47,090 --> 00:23:53,419
where the clip capture is running 137 is

509
00:23:50,330 --> 00:23:54,679
where the real server is running and you

510
00:23:53,420 --> 00:23:58,760
can see that it is processing the

511
00:23:54,680 --> 00:24:01,130
requests and it is allowing and it is

512
00:23:58,760 --> 00:24:02,810
allowing all the requests to enter the

513
00:24:01,130 --> 00:24:04,520
data into the database so that is what

514
00:24:02,810 --> 00:24:07,490
the Avalanche a mode is where you can

515
00:24:04,520 --> 00:24:12,520
have success for<font color="#CCCCCC"> every request now let's</font>

516
00:24:07,490 --> 00:24:12,520
go ahead and look at the stealth mode

517
00:24:13,660 --> 00:24:20,870
<font color="#CCCCCC">alright so what this does mode allows</font>

518
00:24:16,730 --> 00:24:22,460
you to do<font color="#CCCCCC"> is you can enter the values it</font>

519
00:24:20,870 --> 00:24:24,350
will identify the values which have a

520
00:24:22,460 --> 00:24:26,570
particular string and allow only those

521
00:24:24,350 --> 00:24:28,340
values so there<font color="#E5E5E5"> is one value which is</font>

522
00:24:26,570 --> 00:24:30,950
common across all capture parameters

523
00:24:28,340 --> 00:24:33,110
which is the solution of the capture so

524
00:24:30,950 --> 00:24:35,360
if<font color="#E5E5E5"> I am able to provide solution which I</font>

525
00:24:33,110 --> 00:24:37,129
you know and<font color="#E5E5E5"> nobody else knows I can</font>

526
00:24:35,360 --> 00:24:39,290
filter that out from the request and

527
00:24:37,130 --> 00:24:43,370
approve the capture requests that I send

528
00:24:39,290 --> 00:24:47,530
out so that is what this does and let's

529
00:24:43,370 --> 00:24:47,530
say outer zone

530
00:24:49,620 --> 00:24:54,100
I'm going<font color="#E5E5E5"> to run against I'm going to</font>

531
00:24:52,570 --> 00:24:56,530
run<font color="#E5E5E5"> it in stealth mode and I'm going to</font>

532
00:24:54,100 --> 00:24:58,780
prove all the cap capture requests that

533
00:24:56,530 --> 00:25:01,300
have autozone<font color="#CCCCCC"> has the solution</font><font color="#E5E5E5"> so let's</font>

534
00:24:58,780 --> 00:25:04,210
<font color="#E5E5E5">look at this code again so it has outer</font>

535
00:25:01,300 --> 00:25:06,070
zone as its string I'm going<font color="#E5E5E5"> to just</font>

536
00:25:04,210 --> 00:25:07,720
erase it for a while and<font color="#E5E5E5"> this is the</font>

537
00:25:06,070 --> 00:25:10,179
answer<font color="#E5E5E5"> where it goes so you see</font>

538
00:25:07,720 --> 00:25:15,400
everything<font color="#E5E5E5"> is highlighted in green here</font>

539
00:25:10,180 --> 00:25:22,030
is the answer answer and let's run it

540
00:25:15,400 --> 00:25:24,610
one more time we will see the count here

541
00:25:22,030 --> 00:25:33,178
it's 3 100<font color="#CCCCCC"> 31</font><font color="#E5E5E5"> and then we will start it</font>

542
00:25:24,610 --> 00:25:33,178
again<font color="#E5E5E5"> give it</font><font color="#CCCCCC"> a while</font>

543
00:25:35,320 --> 00:25:39,960
you see it's at the same spot and there

544
00:25:37,630 --> 00:25:42,520
are no additions<font color="#CCCCCC"> after at</font><font color="#E5E5E5"> this point</font>

545
00:25:39,960 --> 00:25:46,390
this was the previous<font color="#E5E5E5"> one I believe yeah</font>

546
00:25:42,520 --> 00:25:49,360
0030 now what I'm going to do now is

547
00:25:46,390 --> 00:25:55,390
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to change this to outer</font>

548
00:25:49,360 --> 00:25:56,770
zone and I'm going<font color="#E5E5E5"> to run it again you</font>

549
00:25:55,390 --> 00:25:59,770
will<font color="#E5E5E5"> see</font><font color="#CCCCCC"> a different response pattern</font>

550
00:25:56,770 --> 00:26:01,480
coming<font color="#E5E5E5"> back and if you do a refresh here</font>

551
00:25:59,770 --> 00:26:04,150
you will see that the new requests have

552
00:26:01,480 --> 00:26:06,820
started coming into the database all the

553
00:26:04,150 --> 00:26:09,280
ones which have<font color="#CCCCCC"> outer zone as a answer</font>

554
00:26:06,820 --> 00:26:11,950
for<font color="#CCCCCC"> the capture are getting approved at</font>

555
00:26:09,280 --> 00:26:15,820
rest<font color="#E5E5E5"> everything is getting forwarded to</font>

556
00:26:11,950 --> 00:26:18,970
the remote server for validation back to

557
00:26:15,820 --> 00:26:20,970
the presentation so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> how you</font>

558
00:26:18,970 --> 00:26:23,560
configure click capture you have a

559
00:26:20,970 --> 00:26:26,620
configuration file you see a provider

560
00:26:23,560 --> 00:26:29,260
you provide its name there is host name

561
00:26:26,620 --> 00:26:32,320
and path these two values combined

562
00:26:29,260 --> 00:26:34,360
together identify unique capture so the

563
00:26:32,320 --> 00:26:36,730
host name and path as we discussed

564
00:26:34,360 --> 00:26:40,300
earlier and use tell it how it has to

565
00:26:36,730 --> 00:26:43,180
interpret the success so it will take<font color="#E5E5E5"> a</font>

566
00:26:40,300 --> 00:26:45,930
response code<font color="#CCCCCC"> it will</font><font color="#E5E5E5"> take a response</font>

567
00:26:43,180 --> 00:26:49,000
string and then the<font color="#E5E5E5"> response body and</font>

568
00:26:45,930 --> 00:26:51,250
similarly for<font color="#E5E5E5"> failure you do the</font>

569
00:26:49,000 --> 00:26:52,660
response core response string and the

570
00:26:51,250 --> 00:26:55,480
response body you can also provide

571
00:26:52,660 --> 00:26:57,790
headers there is the syntax for<font color="#E5E5E5"> that and</font>

572
00:26:55,480 --> 00:26:59,770
if you download its code you will be

573
00:26:57,790 --> 00:27:02,610
able<font color="#E5E5E5"> to see the complete syntax on all</font>

574
00:26:59,770 --> 00:27:05,379
the xml file has to look<font color="#CCCCCC"> like and then</font>

575
00:27:02,610 --> 00:27:09,159
the recommendations are to perform as a

576
00:27:05,380 --> 00:27:11,170
cell validation for captures and to make

577
00:27:09,160 --> 00:27:14,650
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> that the certificate validation is</font>

578
00:27:11,170 --> 00:27:20,200
turned on let's look at the complication

579
00:27:14,650 --> 00:27:22,030
file here again one more time so this<font color="#CCCCCC"> is</font>

580
00:27:20,200 --> 00:27:25,540
<font color="#E5E5E5">the configuration</font><font color="#CCCCCC"> file you can have a</font>

581
00:27:22,030 --> 00:27:30,580
response body and you can have response

582
00:27:25,540 --> 00:27:33,520
headers you<font color="#CCCCCC"> also get a config template</font>

583
00:27:30,580 --> 00:27:36,310
which is template dot XML you can

584
00:27:33,520 --> 00:27:38,590
provide the header values so here you

585
00:27:36,310 --> 00:27:41,889
see<font color="#E5E5E5"> the details you can provide headers</font>

586
00:27:38,590 --> 00:27:43,720
you can provide name value you<font color="#E5E5E5"> can add</font>

587
00:27:41,890 --> 00:27:45,970
as<font color="#CCCCCC"> many headers as you like if your</font>

588
00:27:43,720 --> 00:27:48,100
capture provider really is looking for a

589
00:27:45,970 --> 00:27:49,270
lot of headers and the will I Brady does

590
00:27:48,100 --> 00:27:52,300
validation against all of

591
00:27:49,270 --> 00:27:53,889
you can use all of them here<font color="#E5E5E5"> and the</font>

592
00:27:52,300 --> 00:27:56,139
response would be<font color="#E5E5E5"> generated based on all</font>

593
00:27:53,890 --> 00:27:59,110
the content<font color="#CCCCCC"> that you provide here and as</font>

594
00:27:56,140 --> 00:28:01,420
per the capture provider you<font color="#CCCCCC"> have and</font>

595
00:27:59,110 --> 00:28:05,199
you can have multiple lines of responses

596
00:28:01,420 --> 00:28:07,600
line one line<font color="#E5E5E5"> two in the sea data XML</font>

597
00:28:05,200 --> 00:28:13,120
see data so that's<font color="#E5E5E5"> about the</font>

598
00:28:07,600 --> 00:28:15,280
configuration file<font color="#CCCCCC"> and the special</font>

599
00:28:13,120 --> 00:28:16,629
thanks to moxie for writing assistance

600
00:28:15,280 --> 00:28:18,220
trip that saved me a lot of time

601
00:28:16,630 --> 00:28:25,270
<font color="#E5E5E5">otherwise</font><font color="#CCCCCC"> I had to write this from</font>

602
00:28:18,220 --> 00:28:31,390
scratch and I'm open<font color="#CCCCCC"> to questions any</font>

603
00:28:25,270 --> 00:28:34,660
questions<font color="#CCCCCC"> alright alright</font><font color="#E5E5E5"> so you can</font>

604
00:28:31,390 --> 00:28:36,180
<font color="#E5E5E5">download it from from github and there</font>

605
00:28:34,660 --> 00:28:39,520
is a white paper available<font color="#CCCCCC"> on</font>

606
00:28:36,180 --> 00:28:42,640
competitors very detailed information on

607
00:28:39,520 --> 00:28:47,760
the code and what this tool does and

608
00:28:42,640 --> 00:28:47,760
what the attack is and thank

609
00:28:53,280 --> 00:28:55,340
you

