1
00:00:00,000 --> 00:00:02,029
I

2
00:00:12,650 --> 00:00:22,020
now<font color="#E5E5E5"> all right there we go cool deal all</font>

3
00:00:19,800 --> 00:00:24,539
<font color="#E5E5E5">right so I want to talk about filters</font>

4
00:00:22,020 --> 00:00:26,570
we're<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> take a look at some of</font>

5
00:00:24,539 --> 00:00:30,619
the shortcomings of filters and

6
00:00:26,570 --> 00:00:30,619
shortcomings of signature development

7
00:00:30,800 --> 00:00:34,430
we're going<font color="#E5E5E5"> to talk about evasions</font>

8
00:00:33,449 --> 00:00:36,809
mainly we're going to talk about

9
00:00:34,430 --> 00:00:37,980
examining some relevant evasion

10
00:00:36,809 --> 00:00:42,000
techniques we're going to focus on web

11
00:00:37,980 --> 00:00:43,529
attacks and I'm going to<font color="#E5E5E5"> start out</font>

12
00:00:42,000 --> 00:00:45,480
talking about some some older evasion

13
00:00:43,530 --> 00:00:50,160
techniques and then towards the end talk

14
00:00:45,480 --> 00:00:53,309
about a way<font color="#E5E5E5"> to bypass snort so what</font><font color="#CCCCCC"> are</font>

15
00:00:50,160 --> 00:00:54,870
some<font color="#E5E5E5"> reasons to aveda filter money one</font>

16
00:00:53,309 --> 00:00:58,410
of the probably number one reason people

17
00:00:54,870 --> 00:01:01,828
do anything right<font color="#E5E5E5"> I guess a short second</font>

18
00:00:58,410 --> 00:01:03,538
would be fun probably<font color="#E5E5E5"> another good</font>

19
00:01:01,829 --> 00:01:04,709
reason to do things yeah I<font color="#E5E5E5"> mean so you</font>

20
00:01:03,539 --> 00:01:07,110
have spammers that are<font color="#E5E5E5"> trying to evade</font>

21
00:01:04,709 --> 00:01:10,820
spam filters you have you know lonely

22
00:01:07,110 --> 00:01:10,820
people trying<font color="#CCCCCC"> to evade porn filters</font>

23
00:01:11,149 --> 00:01:14,789
information of<font color="#E5E5E5"> course you got</font><font color="#CCCCCC"> truth</font>

24
00:01:13,289 --> 00:01:16,470
<font color="#CCCCCC">seekers like people behind the Great</font>

25
00:01:14,789 --> 00:01:18,179
Firewall of China people behind I guess

26
00:01:16,470 --> 00:01:19,410
now the great firewall of Australia did

27
00:01:18,179 --> 00:01:21,479
you<font color="#E5E5E5"> guys hear about that they're pretty</font>

28
00:01:19,410 --> 00:01:23,190
<font color="#CCCCCC">much doing the same thing as China and</font>

29
00:01:21,479 --> 00:01:26,910
filtering high speeds<font color="#E5E5E5"> in Australia are</font>

30
00:01:23,190 --> 00:01:28,200
filtering content I need legal act of

31
00:01:26,910 --> 00:01:29,819
<font color="#E5E5E5">course maybe you want to steal some</font>

32
00:01:28,200 --> 00:01:34,709
private data or steal money or steal

33
00:01:29,819 --> 00:01:36,630
porn or steal information so security

34
00:01:34,709 --> 00:01:38,910
filters responsibility of security

35
00:01:36,630 --> 00:01:41,848
filters just to detect actions that temp

36
00:01:38,910 --> 00:01:44,098
to compromise a resource typically they

37
00:01:41,849 --> 00:01:46,319
react by either allowing an attempt

38
00:01:44,099 --> 00:01:48,119
denying an attempt logging it or just

39
00:01:46,319 --> 00:01:51,599
removing<font color="#CCCCCC"> it from a network stream</font>

40
00:01:48,119 --> 00:01:54,569
entirely security filters are usually

41
00:01:51,599 --> 00:01:56,819
black box to people that purchase them

42
00:01:54,569 --> 00:01:57,899
or maybe<font color="#E5E5E5"> even they set up an open source</font>

43
00:01:56,819 --> 00:01:59,280
one but they really don't understand how

44
00:01:57,899 --> 00:02:01,259
<font color="#CCCCCC">it works it's just</font><font color="#E5E5E5"> something they</font>

45
00:01:59,280 --> 00:02:02,700
they've hooked into their network or

46
00:02:01,259 --> 00:02:04,500
they've installed on their web server

47
00:02:02,700 --> 00:02:05,819
and they really don't necessarily

48
00:02:04,500 --> 00:02:07,560
understand what how it works under the

49
00:02:05,819 --> 00:02:10,348
covers might not understand some of the

50
00:02:07,560 --> 00:02:13,319
shortcomings or or ways that it can be

51
00:02:10,348 --> 00:02:15,540
evaded and they typically use signatures

52
00:02:13,319 --> 00:02:18,470
which are<font color="#CCCCCC"> blacklist sure you guys know</font>

53
00:02:15,540 --> 00:02:20,370
<font color="#E5E5E5">that the dangers of blacklist</font>

54
00:02:18,470 --> 00:02:22,739
so why is<font color="#E5E5E5"> it important under</font><font color="#CCCCCC"> vent</font>

55
00:02:20,370 --> 00:02:25,410
understand evasion tactics because cyber

56
00:02:22,739 --> 00:02:27,000
criminals are using them that's you know

57
00:02:25,410 --> 00:02:28,349
<font color="#E5E5E5">for us security professionals that's the</font>

58
00:02:27,000 --> 00:02:29,790
number one reason if you're a

59
00:02:28,349 --> 00:02:31,170
penetration tester you need to know what

60
00:02:29,790 --> 00:02:32,760
the cyber criminals are doing so you can

61
00:02:31,170 --> 00:02:34,140
emulate them and hopefully you<font color="#E5E5E5"> know a</font>

62
00:02:32,760 --> 00:02:36,780
few techniques they don't so<font color="#CCCCCC"> that you're</font>

63
00:02:34,140 --> 00:02:38,970
one step ahead of them for developers

64
00:02:36,780 --> 00:02:42,090
<font color="#CCCCCC">especially developers of filters they</font>

65
00:02:38,970 --> 00:02:44,459
need to know how to you know make mega

66
00:02:42,090 --> 00:02:46,980
filters as best as possible and reduce

67
00:02:44,459 --> 00:02:48,840
the ways that they can be evaded and

68
00:02:46,980 --> 00:02:50,480
then the people<font color="#E5E5E5"> that are tests that are</font>

69
00:02:48,840 --> 00:02:55,380
testing the filters they need to know

70
00:02:50,480 --> 00:02:57,599
how<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> that properly I'm web filters</font>

71
00:02:55,380 --> 00:02:59,370
are everywhere I mean you have HTTP

72
00:02:57,599 --> 00:03:01,859
inspect preprocessor and snort you have

73
00:02:59,370 --> 00:03:03,720
web application firewalls like mod

74
00:03:01,860 --> 00:03:05,819
securities is probably the<font color="#CCCCCC"> most</font>

75
00:03:03,720 --> 00:03:07,950
notorious example you have things<font color="#E5E5E5"> that</font>

76
00:03:05,819 --> 00:03:09,720
install into your server like you are

77
00:03:07,950 --> 00:03:13,170
else can you have things baked into your

78
00:03:09,720 --> 00:03:14,970
development frameworks like asp.net XSS

79
00:03:13,170 --> 00:03:17,518
filter which is baked<font color="#E5E5E5"> in it's called out</font>

80
00:03:14,970 --> 00:03:18,840
it's for request validation you have

81
00:03:17,519 --> 00:03:21,209
things baked into<font color="#E5E5E5"> the browser now with</font>

82
00:03:18,840 --> 00:03:22,920
upcoming<font color="#E5E5E5"> release of IE</font><font color="#CCCCCC"> 8 and I mean</font>

83
00:03:21,209 --> 00:03:24,930
there's been discussion on how to evade

84
00:03:22,920 --> 00:03:27,149
that already and even though it's<font color="#CCCCCC"> not</font>

85
00:03:24,930 --> 00:03:30,000
even out officially it's still in RC one

86
00:03:27,150 --> 00:03:31,980
or two I think and then of course I mean

87
00:03:30,000 --> 00:03:33,000
you I'm sure you guys in here<font color="#CCCCCC"> have</font>

88
00:03:31,980 --> 00:03:36,328
written some code you've probably

89
00:03:33,000 --> 00:03:39,060
written a filter so everywhere and

90
00:03:36,329 --> 00:03:40,500
there's<font color="#CCCCCC"> even new filters just last</font><font color="#E5E5E5"> year</font>

91
00:03:39,060 --> 00:03:42,840
in October the Department of Homeland

92
00:03:40,500 --> 00:03:45,989
Security said that they're investing in

93
00:03:42,840 --> 00:03:47,760
developing new IDs and IPS and you know

94
00:03:45,989 --> 00:03:49,590
will they will they learn how<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do it</font>

95
00:03:47,760 --> 00:03:51,120
properly will they learn from<font color="#E5E5E5"> others</font>

96
00:03:49,590 --> 00:03:53,400
mistakes I guess time will tell

97
00:03:51,120 --> 00:03:56,690
hopefully they'll do some research and

98
00:03:53,400 --> 00:04:01,170
maybe a look at this presentation<font color="#E5E5E5"> even</font>

99
00:03:56,690 --> 00:04:04,500
and so we have filters across the entire

100
00:04:01,170 --> 00:04:06,298
OSI model we have you know maybe<font color="#E5E5E5"> not so</font>

101
00:04:04,500 --> 00:04:07,920
much at the physical<font color="#E5E5E5"> layer that's you</font>

102
00:04:06,299 --> 00:04:10,950
know physical security or whatever but

103
00:04:07,920 --> 00:04:14,190
we have in the segment portion of the

104
00:04:10,950 --> 00:04:16,320
model we have<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the transport layer we</font>

105
00:04:14,190 --> 00:04:18,298
have things<font color="#E5E5E5"> like IDs and then above that</font>

106
00:04:16,320 --> 00:04:22,710
we have things up you<font color="#CCCCCC"> know in</font><font color="#E5E5E5"> the</font>

107
00:04:18,298 --> 00:04:24,690
application layer protecting data and so

108
00:04:22,710 --> 00:04:26,310
the question I want you to think about

109
00:04:24,690 --> 00:04:29,250
is who's responsible for<font color="#CCCCCC"> all these</font>

110
00:04:26,310 --> 00:04:30,810
layers because as I'm<font color="#E5E5E5"> going to</font>

111
00:04:29,250 --> 00:04:32,040
demonstrate as<font color="#E5E5E5"> I go through some old</font>

112
00:04:30,810 --> 00:04:33,600
attacks

113
00:04:32,040 --> 00:04:35,580
attackers are consistently moving up the

114
00:04:33,600 --> 00:04:37,530
stack your networks perimeter is

115
00:04:35,580 --> 00:04:39,240
<font color="#E5E5E5">becoming more and more safe and your</font>

116
00:04:37,530 --> 00:04:44,250
applications are more exposed than ever

117
00:04:39,240 --> 00:04:45,960
especially web applications and so you

118
00:04:44,250 --> 00:04:48,060
know<font color="#E5E5E5"> when we when we</font><font color="#CCCCCC"> ask who's</font>

119
00:04:45,960 --> 00:04:50,340
responsible its security professionals

120
00:04:48,060 --> 00:04:51,300
like us we need<font color="#CCCCCC"> to be educated it's you</font>

121
00:04:50,340 --> 00:04:53,070
<font color="#E5E5E5">know if it's the open source community</font>

122
00:04:51,300 --> 00:04:54,720
developing these filters they need to be

123
00:04:53,070 --> 00:04:57,469
education selling proprietary products

124
00:04:54,720 --> 00:05:01,590
they all need<font color="#CCCCCC"> to they're responsible for</font>

125
00:04:57,470 --> 00:05:03,750
making these as best as possible and the

126
00:05:01,590 --> 00:05:04,919
<font color="#E5E5E5">problem that</font><font color="#CCCCCC"> I'm seeing is that proper</font>

127
00:05:03,750 --> 00:05:06,540
knowledge transfer isn't occurring

128
00:05:04,920 --> 00:05:11,280
because I'm seeing the same thing over

129
00:05:06,540 --> 00:05:12,630
and over again<font color="#CCCCCC"> and so I want</font><font color="#E5E5E5"> to like</font>

130
00:05:11,280 --> 00:05:14,190
back up a little bit and if you guys

131
00:05:12,630 --> 00:05:17,190
read<font color="#CCCCCC"> the website that i posted a little</font>

132
00:05:14,190 --> 00:05:18,600
bit of background in and how<font color="#E5E5E5"> this all</font>

133
00:05:17,190 --> 00:05:22,380
kind of started how I got interested in

134
00:05:18,600 --> 00:05:24,660
<font color="#E5E5E5">this topic was we were doing a pen test</font>

135
00:05:22,380 --> 00:05:27,480
at work on a fortune<font color="#E5E5E5"> I guess the</font>

136
00:05:24,660 --> 00:05:29,190
probably like fortune<font color="#E5E5E5"> 15 company will</font>

137
00:05:27,480 --> 00:05:32,790
just say their favorite color truck to

138
00:05:29,190 --> 00:05:35,640
drive is brown and they had basically

139
00:05:32,790 --> 00:05:37,800
challenged us to break in they<font color="#E5E5E5"> basically</font>

140
00:05:35,640 --> 00:05:39,390
said you know<font color="#E5E5E5"> why do I need</font><font color="#CCCCCC"> to protect</font>

141
00:05:37,800 --> 00:05:41,580
my my web applications I have all these

142
00:05:39,390 --> 00:05:44,250
<font color="#E5E5E5">network appliances that protect my my</font>

143
00:05:41,580 --> 00:05:49,310
site and you know prove to me that I

144
00:05:44,250 --> 00:05:51,840
need<font color="#E5E5E5"> to protect my web applications yeah</font>

145
00:05:49,310 --> 00:05:54,780
yeah<font color="#E5E5E5"> that's what the CIO basically of</font>

146
00:05:51,840 --> 00:05:57,270
this company said<font color="#E5E5E5"> or sepia or something</font>

147
00:05:54,780 --> 00:05:59,130
along those lines he um he wanted<font color="#E5E5E5"> us to</font>

148
00:05:57,270 --> 00:06:02,580
prove him prove prove him that he needed

149
00:05:59,130 --> 00:06:07,830
to<font color="#E5E5E5"> look into this more and what happened</font>

150
00:06:02,580 --> 00:06:11,159
was I got caught right noob<font color="#CCCCCC"> all right so</font>

151
00:06:07,830 --> 00:06:13,880
I i was running dirt Buster on a bunch

152
00:06:11,160 --> 00:06:16,350
of their URLs and I'm glad I did because

153
00:06:13,880 --> 00:06:18,600
after I got caught I got blocked i guess

154
00:06:16,350 --> 00:06:19,980
was causing way too much noise and<font color="#CCCCCC"> i</font>

155
00:06:18,600 --> 00:06:21,960
just moved<font color="#E5E5E5"> to another IP address and</font>

156
00:06:19,980 --> 00:06:26,070
continued running dirt Buster and I

157
00:06:21,960 --> 00:06:29,039
found this I guess dirt Buster in its

158
00:06:26,070 --> 00:06:32,760
default list had ups as one of their I

159
00:06:29,040 --> 00:06:35,010
guess I said it they had that is

160
00:06:32,760 --> 00:06:37,830
one of their directories and whenever we

161
00:06:35,010 --> 00:06:41,099
made a request to that their cash on

162
00:06:37,830 --> 00:06:43,320
delivery<font color="#CCCCCC"> their c.o.d site it redirected</font>

163
00:06:41,100 --> 00:06:44,820
to an admin pay admin directory from the

164
00:06:43,320 --> 00:06:45,750
UPS directory which<font color="#E5E5E5"> I thought was really</font>

165
00:06:44,820 --> 00:06:47,580
strange

166
00:06:45,750 --> 00:06:50,760
and then that admin login happened to

167
00:06:47,580 --> 00:06:53,099
have blind sequel injection in it and a

168
00:06:50,760 --> 00:06:55,080
co-worker of mine modified our sequin

169
00:06:53,100 --> 00:06:56,490
jected tool<font color="#E5E5E5"> would work on with with</font>

170
00:06:55,080 --> 00:06:58,200
<font color="#CCCCCC">Oracle which was running in the back end</font>

171
00:06:56,490 --> 00:07:00,420
and<font color="#E5E5E5"> we started downloading images of</font>

172
00:06:58,200 --> 00:07:02,909
checks from customers with account

173
00:07:00,420 --> 00:07:05,820
numbers on them and it's like wow this

174
00:07:02,910 --> 00:07:07,320
is really bad so I mean<font color="#E5E5E5"> this this got me</font>

175
00:07:05,820 --> 00:07:09,210
interested<font color="#E5E5E5"> in you know that that I was</font>

176
00:07:07,320 --> 00:07:11,790
blocked and<font color="#E5E5E5"> and but I you know still</font>

177
00:07:09,210 --> 00:07:15,630
found this great hack and and then we

178
00:07:11,790 --> 00:07:18,930
moved on and Billy actually<font color="#E5E5E5"> sent out an</font>

179
00:07:15,630 --> 00:07:20,880
email to all of our R&D and he asked us

180
00:07:18,930 --> 00:07:24,480
to or he asked anyone that<font color="#E5E5E5"> was willing</font>

181
00:07:20,880 --> 00:07:27,419
<font color="#CCCCCC">to do it to implement some old evasion</font>

182
00:07:24,480 --> 00:07:29,550
tactics that Jeff forced or reinforced

183
00:07:27,419 --> 00:07:35,070
puppy<font color="#CCCCCC"> or fee guys might have</font><font color="#E5E5E5"> read his</font>

184
00:07:29,550 --> 00:07:37,200
paper from<font color="#E5E5E5"> 1999 on anti IDs tactics and</font>

185
00:07:35,070 --> 00:07:39,000
so the<font color="#E5E5E5"> only one of these implemented</font>

186
00:07:37,200 --> 00:07:42,599
into our proxy so that we could actually

187
00:07:39,000 --> 00:07:44,520
<font color="#E5E5E5">just take</font><font color="#CCCCCC"> real-time web traffic and turn</font>

188
00:07:42,600 --> 00:07:46,470
on these of asians and the proxy would

189
00:07:44,520 --> 00:07:47,640
modify them on the fly<font color="#E5E5E5"> and it was like I</font>

190
00:07:46,470 --> 00:07:49,200
decided<font color="#E5E5E5"> to look into this because I</font>

191
00:07:47,640 --> 00:07:55,110
wanted<font color="#E5E5E5"> to learn</font><font color="#CCCCCC"> how not to get caught</font>

192
00:07:49,200 --> 00:07:56,310
and basically<font color="#E5E5E5"> uh it was really easy you</font>

193
00:07:55,110 --> 00:07:58,050
<font color="#E5E5E5">know we just did some searching</font><font color="#CCCCCC"> for</font>

194
00:07:56,310 --> 00:07:59,910
places and things were going across the

195
00:07:58,050 --> 00:08:02,669
wire and and so<font color="#E5E5E5"> that that's really what</font>

196
00:07:59,910 --> 00:08:05,130
I wanted to to say like when I this<font color="#CCCCCC"> this</font>

197
00:08:02,669 --> 00:08:07,409
<font color="#E5E5E5">all was based on some stuff that's been</font>

198
00:08:05,130 --> 00:08:09,540
done previously and as I researched into

199
00:08:07,410 --> 00:08:11,760
these older techniques you know thanks

200
00:08:09,540 --> 00:08:13,169
<font color="#E5E5E5">to Jeff worstall for his work and thanks</font>

201
00:08:11,760 --> 00:08:15,270
<font color="#E5E5E5">to</font><font color="#CCCCCC"> you know Billy for even putting that</font>

202
00:08:13,169 --> 00:08:21,599
out there or I probably wouldn't be up

203
00:08:15,270 --> 00:08:26,180
here talking today so these are his

204
00:08:21,600 --> 00:08:29,580
tactics this is 1999 and what he's<font color="#E5E5E5"> doing</font>

205
00:08:26,180 --> 00:08:32,520
is he has a method matching technique or

206
00:08:29,580 --> 00:08:34,620
Mike knows verb tampering changing

207
00:08:32,520 --> 00:08:36,809
things like get to head he's doing

208
00:08:34,620 --> 00:08:40,440
things like URL encoding just simple hex

209
00:08:36,809 --> 00:08:42,659
notation for ASCII text doing<font color="#E5E5E5"> things</font>

210
00:08:40,440 --> 00:08:45,120
like double slashes so servers will

211
00:08:42,659 --> 00:08:49,020
actually I assume it was a usability

212
00:08:45,120 --> 00:08:50,880
thing so maybe a web browser fat

213
00:08:49,020 --> 00:08:52,740
fingered in double type two slashes and

214
00:08:50,880 --> 00:08:54,780
the server just<font color="#E5E5E5"> replaces it with one and</font>

215
00:08:52,740 --> 00:08:56,130
<font color="#E5E5E5">accepts it well your filter also needs</font>

216
00:08:54,780 --> 00:08:59,100
<font color="#E5E5E5">to realize if it's just looking for one</font>

217
00:08:56,130 --> 00:09:02,310
slash that too is also acceptable bus

218
00:08:59,100 --> 00:09:04,110
servers<font color="#CCCCCC"> reversed reversal things such as</font>

219
00:09:02,310 --> 00:09:06,089
putting a fake directory in and stepping

220
00:09:04,110 --> 00:09:09,530
out of<font color="#CCCCCC"> it if they're looking for things</font>

221
00:09:06,090 --> 00:09:11,280
like traversal into admitting

222
00:09:09,530 --> 00:09:12,900
self-referencing directories where you

223
00:09:11,280 --> 00:09:14,850
can<font color="#CCCCCC"> just do dot slash dot slash slash</font>

224
00:09:12,900 --> 00:09:16,410
and evade signatures that are only

225
00:09:14,850 --> 00:09:19,530
looking for<font color="#E5E5E5"> requests to secure</font>

226
00:09:16,410 --> 00:09:22,589
directories prematurely<font color="#E5E5E5"> request ending</font>

227
00:09:19,530 --> 00:09:24,780
this is actually having multiple HTTP

228
00:09:22,590 --> 00:09:26,910
versions and new lines in a request<font color="#E5E5E5"> and</font>

229
00:09:24,780 --> 00:09:29,250
this one doesn't really work so so much

230
00:09:26,910 --> 00:09:30,719
anymore<font color="#CCCCCC"> um so I didn't even implement</font>

231
00:09:29,250 --> 00:09:34,770
that when I<font color="#E5E5E5"> implemented these into a</font>

232
00:09:30,720 --> 00:09:37,980
proxy things like parameter hidings such

233
00:09:34,770 --> 00:09:39,870
as unencoded certain parts of an encoded

234
00:09:37,980 --> 00:09:41,160
URL so<font color="#CCCCCC"> that a filter that if it thinks</font>

235
00:09:39,870 --> 00:09:43,350
<font color="#E5E5E5">everything's encoded and is trying to</font>

236
00:09:41,160 --> 00:09:47,250
normalize that it'll maybe miss

237
00:09:43,350 --> 00:09:48,990
something whitespace miss formatting

238
00:09:47,250 --> 00:09:51,390
things like changing space to tab so

239
00:09:48,990 --> 00:09:53,640
that the HTTP RFC says you need to<font color="#E5E5E5"> have</font>

240
00:09:51,390 --> 00:09:55,590
your verb and then space and then your

241
00:09:53,640 --> 00:09:57,900
URL that you're requesting and then

242
00:09:55,590 --> 00:10:01,380
space and then<font color="#E5E5E5"> HTTP version well most</font>

243
00:09:57,900 --> 00:10:04,069
servers also accept tab things like

244
00:10:01,380 --> 00:10:06,330
really long URLs where you might<font color="#CCCCCC"> have a</font>

245
00:10:04,070 --> 00:10:08,490
filter maybe this isn't so much of<font color="#CCCCCC"> an</font>

246
00:10:06,330 --> 00:10:09,570
issue in nowadays<font color="#E5E5E5"> that you know what we</font>

247
00:10:08,490 --> 00:10:12,060
have a lot more computing power and<font color="#E5E5E5"> a</font>

248
00:10:09,570 --> 00:10:14,940
<font color="#E5E5E5">lot more resources but in 1999 filters</font>

249
00:10:12,060 --> 00:10:17,400
were maybe only parsing the first two

250
00:10:14,940 --> 00:10:20,040
megabytes of a request so just put a

251
00:10:17,400 --> 00:10:21,870
bunch<font color="#CCCCCC"> of random text there and then you</font>

252
00:10:20,040 --> 00:10:23,339
can have<font color="#E5E5E5"> your payload for your attack</font>

253
00:10:21,870 --> 00:10:25,830
after that<font color="#E5E5E5"> because it stopped after</font><font color="#CCCCCC"> I</font>

254
00:10:23,340 --> 00:10:28,200
hit<font color="#E5E5E5"> two megabytes you have things like</font>

255
00:10:25,830 --> 00:10:31,380
on Windows servers where you it'll

256
00:10:28,200 --> 00:10:33,480
actually accept a backslash instead of a

257
00:10:31,380 --> 00:10:34,980
/url it'll the server will just convert

258
00:10:33,480 --> 00:10:37,340
it because again I'm sure<font color="#CCCCCC"> it's a</font>

259
00:10:34,980 --> 00:10:40,920
usability thing things like null byte

260
00:10:37,340 --> 00:10:42,540
<font color="#E5E5E5">processing where if it's a see library</font>

261
00:10:40,920 --> 00:10:44,819
that just hits a null byte and stops in

262
00:10:42,540 --> 00:10:46,890
the<font color="#E5E5E5"> filter you might miss the payload</font>

263
00:10:44,820 --> 00:10:48,870
after that and of course<font color="#CCCCCC"> things like</font>

264
00:10:46,890 --> 00:10:50,040
case sensitivity where<font color="#E5E5E5"> a signature is</font>

265
00:10:48,870 --> 00:10:52,100
really poorly written and it didn't

266
00:10:50,040 --> 00:10:54,300
check for multiple cases or mixed case

267
00:10:52,100 --> 00:10:59,400
and you can<font color="#E5E5E5"> check out more details on</font>

268
00:10:54,300 --> 00:11:01,520
<font color="#E5E5E5">these filters at this URL so what Jeff</font>

269
00:10:59,400 --> 00:11:05,340
Forster really gave<font color="#CCCCCC"> us was a playbook of</font>

270
00:11:01,520 --> 00:11:06,720
how to attack filters across the OSI

271
00:11:05,340 --> 00:11:09,660
model we<font color="#E5E5E5"> have things like an</font>

272
00:11:06,720 --> 00:11:11,790
optimization attacks or and encoding

273
00:11:09,660 --> 00:11:13,760
method tampering you know<font color="#E5E5E5"> basically what</font>

274
00:11:11,790 --> 00:11:17,699
I just<font color="#E5E5E5"> pointed out</font>

275
00:11:13,760 --> 00:11:19,200
so<font color="#E5E5E5"> canalization it's the process of</font>

276
00:11:17,700 --> 00:11:20,370
converting data to its simplest form so

277
00:11:19,200 --> 00:11:22,190
when I<font color="#E5E5E5"> mention normal normalization</font>

278
00:11:20,370 --> 00:11:24,750
<font color="#E5E5E5">before this is something that all</font>

279
00:11:22,190 --> 00:11:26,550
filters absolutely need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do very well</font>

280
00:11:24,750 --> 00:11:28,740
they need<font color="#E5E5E5"> to be able to take all the</font>

281
00:11:26,550 --> 00:11:30,660
different representations of data and be

282
00:11:28,740 --> 00:11:32,460
able to<font color="#E5E5E5"> simplify it so that that they</font>

283
00:11:30,660 --> 00:11:37,110
can then<font color="#E5E5E5"> perform their analysis and and</font>

284
00:11:32,460 --> 00:11:38,940
not miss things um this isn't so much an

285
00:11:37,110 --> 00:11:42,030
evasion and it's it's sort of a

286
00:11:38,940 --> 00:11:43,650
vulnerability but basically this one's

287
00:11:42,030 --> 00:11:47,189
near and dear to<font color="#E5E5E5"> my heart because I was</font>

288
00:11:43,650 --> 00:11:48,540
working as a asp.net developer in 2005

289
00:11:47,190 --> 00:11:51,540
which is what when this vulnerabilities

290
00:11:48,540 --> 00:11:52,980
from and it just blew<font color="#E5E5E5"> my mind that this</font>

291
00:11:51,540 --> 00:11:56,219
was something that was overlooked in

292
00:11:52,980 --> 00:12:01,620
testing of the<font color="#E5E5E5"> framework so basically</font>

293
00:11:56,220 --> 00:12:03,630
<font color="#E5E5E5">what you do is send a backslash instead</font>

294
00:12:01,620 --> 00:12:05,760
of<font color="#E5E5E5"> a forward slash in a URL and pull</font>

295
00:12:03,630 --> 00:12:09,360
down source code you<font color="#E5E5E5"> could pull down web</font>

296
00:12:05,760 --> 00:12:10,950
config files and in Mozilla you could do

297
00:12:09,360 --> 00:12:14,040
a backslash but IE would automatically

298
00:12:10,950 --> 00:12:16,890
convert it for you see hex encoded<font color="#CCCCCC"> 2% 5c</font>

299
00:12:14,040 --> 00:12:18,870
and like you know this<font color="#E5E5E5"> is you</font><font color="#CCCCCC"> know I was</font>

300
00:12:16,890 --> 00:12:21,360
developer and you know had an interest

301
00:12:18,870 --> 00:12:23,220
in security and this just blew my mind

302
00:12:21,360 --> 00:12:24,840
that this was<font color="#E5E5E5"> missed whereas if they</font>

303
00:12:23,220 --> 00:12:27,540
would<font color="#CCCCCC"> have you know tested something</font>

304
00:12:24,840 --> 00:12:29,940
like<font color="#CCCCCC"> rfps techniques where he actually</font>

305
00:12:27,540 --> 00:12:31,860
had something that<font color="#E5E5E5"> switched / it back</font>

306
00:12:29,940 --> 00:12:36,210
for such as the backslash slashes they

307
00:12:31,860 --> 00:12:38,940
might have seen this happen<font color="#E5E5E5"> um so poison</font>

308
00:12:36,210 --> 00:12:40,200
<font color="#E5E5E5">Mel bite attack was another as very</font>

309
00:12:38,940 --> 00:12:43,190
infamous one it's this is still

310
00:12:40,200 --> 00:12:46,950
<font color="#E5E5E5">happening all the time I think just in</font>

311
00:12:43,190 --> 00:12:48,060
silverlight there was a bomb found in

312
00:12:46,950 --> 00:12:51,450
the when<font color="#E5E5E5"> i when it was still in beta</font>

313
00:12:48,060 --> 00:12:54,170
with a null byte but the one this one it

314
00:12:51,450 --> 00:12:56,520
actually happened in 2007 and

315
00:12:54,170 --> 00:12:59,910
modsecurity was vulnerable to this and

316
00:12:56,520 --> 00:13:02,670
you could bypass any you can send any

317
00:12:59,910 --> 00:13:05,219
<font color="#E5E5E5">post request and bypass their analysis</font>

318
00:13:02,670 --> 00:13:08,790
<font color="#CCCCCC">if it was an ascii z encoded text and</font>

319
00:13:05,220 --> 00:13:09,990
what a skeezy is is it's a seat based on

320
00:13:08,790 --> 00:13:11,969
<font color="#E5E5E5">see and when you're assigning string</font>

321
00:13:09,990 --> 00:13:15,390
data the assignment<font color="#CCCCCC"> will stop if it hits</font>

322
00:13:11,970 --> 00:13:17,550
an embedded null byte so what that<font color="#E5E5E5"> would</font>

323
00:13:15,390 --> 00:13:20,010
look like is if the assignment to this

324
00:13:17,550 --> 00:13:22,790
string is a b c plus and<font color="#CCCCCC"> i'll bite orkin</font>

325
00:13:20,010 --> 00:13:25,439
cat no bike and cat<font color="#CCCCCC"> one two three the</font>

326
00:13:22,790 --> 00:13:27,449
strings value would actually just be ABC

327
00:13:25,440 --> 00:13:29,430
because it would stop and<font color="#CCCCCC"> then the</font>

328
00:13:27,450 --> 00:13:30,930
assignment<font color="#E5E5E5"> and so what modsecurity was</font>

329
00:13:29,430 --> 00:13:33,930
doing was it was used it was using this

330
00:13:30,930 --> 00:13:36,270
and you could send an attack such as

331
00:13:33,930 --> 00:13:39,630
this you could have this content type

332
00:13:36,270 --> 00:13:42,420
and<font color="#E5E5E5"> a post data that starts with an</font>

333
00:13:39,630 --> 00:13:45,510
unencoded null byte and send whatever

334
00:13:42,420 --> 00:13:51,150
attack you wanted and their their

335
00:13:45,510 --> 00:13:53,640
<font color="#E5E5E5">analysis didn't even see it another one</font>

336
00:13:51,150 --> 00:13:56,250
full width and half with<font color="#CCCCCC"> Unicode this</font>

337
00:13:53,640 --> 00:13:58,830
was huge this hit<font color="#CCCCCC"> Cisco tipping point</font>

338
00:13:56,250 --> 00:14:01,440
<font color="#E5E5E5">McAfee novell of information security</font>

339
00:13:58,830 --> 00:14:04,500
systems checkpoint all there HTTP

340
00:14:01,440 --> 00:14:09,210
scanners could not handle full width or

341
00:14:04,500 --> 00:14:10,710
half with an encoded strings and this

342
00:14:09,210 --> 00:14:12,810
this was just an evasion I mean this

343
00:14:10,710 --> 00:14:13,830
there's<font color="#E5E5E5"> really</font><font color="#CCCCCC"> what was no attack</font>

344
00:14:12,810 --> 00:14:15,689
involved with this but you could sneak

345
00:14:13,830 --> 00:14:17,300
any attack by there are scanners with

346
00:14:15,690 --> 00:14:20,700
this and so what what a<font color="#E5E5E5"> full with</font>

347
00:14:17,300 --> 00:14:25,130
<font color="#E5E5E5">encoded string looks like our full with</font>

348
00:14:20,700 --> 00:14:28,800
? looks like is<font color="#CCCCCC"> ufff or F F one F and</font>

349
00:14:25,130 --> 00:14:32,060
how you would you could<font color="#E5E5E5"> write some PHP</font>

350
00:14:28,800 --> 00:14:34,500
code that would look<font color="#E5E5E5"> like this and</font>

351
00:14:32,060 --> 00:14:37,770
actually you<font color="#E5E5E5"> have to have</font><font color="#CCCCCC"> the right</font>

352
00:14:34,500 --> 00:14:39,620
content type and then the output for

353
00:14:37,770 --> 00:14:43,980
full width would look like you f-f-for

354
00:14:39,620 --> 00:14:48,210
one and see script and half with looks

355
00:14:43,980 --> 00:14:52,880
like<font color="#CCCCCC"> efb</font><font color="#E5E5E5"> see so that was a pretty huge</font>

356
00:14:48,210 --> 00:14:57,690
one that they were<font color="#E5E5E5"> missing this encoding</font>

357
00:14:52,880 --> 00:14:59,490
so method tampering this there's paper

358
00:14:57,690 --> 00:15:02,760
just in june two thousand eight from our

359
00:14:59,490 --> 00:15:06,270
<font color="#E5E5E5">sean from aspect security their director</font>

360
00:15:02,760 --> 00:15:08,280
of research he pointed<font color="#E5E5E5"> out</font><font color="#CCCCCC"> that these</font>

361
00:15:06,270 --> 00:15:11,699
major frameworks and servers were

362
00:15:08,280 --> 00:15:12,660
vulnerable to this<font color="#E5E5E5"> method tampering</font>

363
00:15:11,700 --> 00:15:15,960
technique to let you bypass

364
00:15:12,660 --> 00:15:19,500
authorization I mean these are major

365
00:15:15,960 --> 00:15:22,290
players we had a patchy<font color="#CCCCCC"> Tomcat security</font>

366
00:15:19,500 --> 00:15:25,800
it basically what how what this let you

367
00:15:22,290 --> 00:15:27,089
do was for get functionality that's not

368
00:15:25,800 --> 00:15:28,650
in the potent or like if you're familiar

369
00:15:27,089 --> 00:15:31,170
with cross-site request forgery attacks

370
00:15:28,650 --> 00:15:33,089
its you get supposed to not alter any

371
00:15:31,170 --> 00:15:34,140
data whenever you make a get request to

372
00:15:33,089 --> 00:15:35,520
a server<font color="#E5E5E5"> it's supposed to give you the</font>

373
00:15:34,140 --> 00:15:37,350
same data back every time but if it's

374
00:15:35,520 --> 00:15:39,069
altering something you can have huge

375
00:15:37,350 --> 00:15:41,560
problems like I think the most

376
00:15:39,070 --> 00:15:44,680
the most famous non-security example of

377
00:15:41,560 --> 00:15:46,900
this was<font color="#CCCCCC"> on google had the google web</font>

378
00:15:44,680 --> 00:15:49,000
accelerator plugin for firefox at any of

379
00:15:46,900 --> 00:15:50,319
you ever tried that what it did was it

380
00:15:49,000 --> 00:15:53,050
would go and<font color="#E5E5E5"> get all the links on a page</font>

381
00:15:50,320 --> 00:15:55,930
<font color="#CCCCCC">and it would preemptively download them</font>

382
00:15:53,050 --> 00:15:57,699
before or go to them before<font color="#CCCCCC"> you did in</font>

383
00:15:55,930 --> 00:15:59,140
anticipation that it that you might go

384
00:15:57,700 --> 00:16:01,840
to them so it cash them and see maybe

385
00:15:59,140 --> 00:16:04,569
your web browsing<font color="#CCCCCC"> seemed faster but if</font>

386
00:16:01,840 --> 00:16:06,640
web developers didn't treat get as

387
00:16:04,570 --> 00:16:09,970
<font color="#E5E5E5">Indian potent method which</font><font color="#CCCCCC"> it's supposed</font>

388
00:16:06,640 --> 00:16:11,380
to be you<font color="#CCCCCC"> know you have really been a</font>

389
00:16:09,970 --> 00:16:12,700
ste things happen you have data being

390
00:16:11,380 --> 00:16:15,970
changed by google web accelerator when

391
00:16:12,700 --> 00:16:17,800
you didn't mean to click a link and you

392
00:16:15,970 --> 00:16:20,020
know another<font color="#CCCCCC"> thing that that was pointed</font>

393
00:16:17,800 --> 00:16:22,359
<font color="#E5E5E5">out in this paper was uh that if you</font>

394
00:16:20,020 --> 00:16:25,319
didn't have<font color="#E5E5E5"> your verb list configure</font>

395
00:16:22,360 --> 00:16:27,340
quickly it could accept arbitrary

396
00:16:25,320 --> 00:16:29,500
methods such I could send like Rob

397
00:16:27,340 --> 00:16:34,780
instead of get and it would act as a kit

398
00:16:29,500 --> 00:16:40,270
which I thought was incredible yeah so

399
00:16:34,780 --> 00:16:43,180
basically the RFC for HTTP says that

400
00:16:40,270 --> 00:16:44,590
head is to be treated identical to get

401
00:16:43,180 --> 00:16:47,589
<font color="#E5E5E5">except that the server must not return</font>

402
00:16:44,590 --> 00:16:50,250
message body in the response and so a

403
00:16:47,590 --> 00:16:52,350
get request to admit directory that

404
00:16:50,250 --> 00:16:56,560
that's supposed<font color="#CCCCCC"> to require some type of</font>

405
00:16:52,350 --> 00:16:58,030
user in an admin role might you might

406
00:16:56,560 --> 00:17:00,579
expect the head put and delete<font color="#CCCCCC"> would be</font>

407
00:16:58,030 --> 00:17:02,079
denied right well what was pointed<font color="#E5E5E5"> out</font>

408
00:17:00,580 --> 00:17:03,790
in those those web frameworks in the

409
00:17:02,080 --> 00:17:08,140
service if you<font color="#E5E5E5"> didn't explicitly deny</font>

410
00:17:03,790 --> 00:17:10,869
them in your configuration then they

411
00:17:08,140 --> 00:17:12,310
were allowed and they were not treated

412
00:17:10,869 --> 00:17:15,339
if you were just saying that get

413
00:17:12,310 --> 00:17:16,419
requests needed to be off<font color="#CCCCCC"> correctly but</font>

414
00:17:15,339 --> 00:17:18,399
you didn't say head needed to be off

415
00:17:16,420 --> 00:17:19,900
correctly it would<font color="#E5E5E5"> just</font><font color="#CCCCCC"> go through</font><font color="#E5E5E5"> and</font>

416
00:17:18,400 --> 00:17:21,730
if maybe made a request to something

417
00:17:19,900 --> 00:17:22,930
like delete user that<font color="#E5E5E5"> action would be</font>

418
00:17:21,730 --> 00:17:25,150
<font color="#E5E5E5">performed even though you're</font><font color="#CCCCCC"> not off</font>

419
00:17:22,930 --> 00:17:30,310
properly so that's that was a really big

420
00:17:25,150 --> 00:17:32,560
deal um so<font color="#E5E5E5"> I mentioned</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> you have</font>

421
00:17:30,310 --> 00:17:35,110
filters built into your frameworks such

422
00:17:32,560 --> 00:17:38,590
as if you bust out reflector and

423
00:17:35,110 --> 00:17:40,439
<font color="#CCCCCC">disassemble system.web of the.net</font>

424
00:17:38,590 --> 00:17:42,639
framework you hot you'll find this

425
00:17:40,440 --> 00:17:46,360
cross-site scripting validation class

426
00:17:42,640 --> 00:17:50,970
and in there is this is dangerous string

427
00:17:46,360 --> 00:17:55,049
function and what this does is

428
00:17:50,970 --> 00:17:57,049
it checks for a person pound it's

429
00:17:55,049 --> 00:18:01,289
looking for you know basically<font color="#E5E5E5"> encoded</font>

430
00:17:57,049 --> 00:18:02,639
strings it's looking for tags fault but

431
00:18:01,289 --> 00:18:04,590
it's kind<font color="#E5E5E5"> of limited here where it has a</font>

432
00:18:02,640 --> 00:18:06,120
tag and<font color="#E5E5E5"> then it expects alphanumeric</font>

433
00:18:04,590 --> 00:18:08,490
characters immediately after the less

434
00:18:06,120 --> 00:18:14,610
than sign and then it expects to have

435
00:18:08,490 --> 00:18:16,470
either /or exclamation or ? and it also

436
00:18:14,610 --> 00:18:18,000
skips strings that start with two

437
00:18:16,470 --> 00:18:19,890
underscores because there are reserved

438
00:18:18,000 --> 00:18:21,990
hidden fields in asp.net like<font color="#E5E5E5"> view state</font>

439
00:18:19,890 --> 00:18:23,490
that might have encoded data that it

440
00:18:21,990 --> 00:18:26,909
doesn't want to flag as cross-site

441
00:18:23,490 --> 00:18:28,919
scripting and you can bypass this filter

442
00:18:26,909 --> 00:18:31,559
with a string like<font color="#CCCCCC"> this you know you're</font>

443
00:18:28,919 --> 00:18:35,840
using basically CSS style element and

444
00:18:31,559 --> 00:18:35,840
you can pass in whatever attack you want

445
00:18:36,620 --> 00:18:42,959
another encoding attack this was just in

446
00:18:39,600 --> 00:18:44,219
<font color="#E5E5E5">August of last year we were</font><font color="#CCCCCC"> actually in</font>

447
00:18:42,960 --> 00:18:45,720
the<font color="#E5E5E5"> middle of the pen test that I</font>

448
00:18:44,220 --> 00:18:48,390
mentioned previously whenever I saw this

449
00:18:45,720 --> 00:18:50,070
<font color="#E5E5E5">and I was like really</font><font color="#CCCCCC"> Tomcat you're</font>

450
00:18:48,390 --> 00:18:52,700
still suffering<font color="#E5E5E5"> from this directory</font>

451
00:18:50,070 --> 00:18:54,928
traversal<font color="#CCCCCC"> in your latest release and</font>

452
00:18:52,700 --> 00:18:57,360
tested a bunch of servers but<font color="#E5E5E5"> I'm kind</font>

453
00:18:54,929 --> 00:18:59,340
<font color="#CCCCCC">of ran out</font><font color="#E5E5E5"> of time and so</font><font color="#CCCCCC"> basically this</font>

454
00:18:57,360 --> 00:19:02,370
is if you have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> special configuration</font>

455
00:18:59,340 --> 00:19:04,500
where you're allowing utf-8<font color="#E5E5E5"> encoding or</font>

456
00:19:02,370 --> 00:19:05,760
allow linking which is apparently not

457
00:19:04,500 --> 00:19:11,880
that uncommon if you're an international

458
00:19:05,760 --> 00:19:13,860
site you could encode the dot as % c 0 %

459
00:19:11,880 --> 00:19:19,049
AE and<font color="#E5E5E5"> you can directory traversal and</font>

460
00:19:13,860 --> 00:19:20,370
steal arbitrary files off the system so

461
00:19:19,049 --> 00:19:22,830
<font color="#E5E5E5">i'm</font><font color="#CCCCCC"> sure a lot</font><font color="#E5E5E5"> of you are familiar with</font>

462
00:19:20,370 --> 00:19:24,449
our snakes XSS cheat sheet let's<font color="#E5E5E5"> take a</font>

463
00:19:22,830 --> 00:19:25,770
look at some of the familiar things

464
00:19:24,450 --> 00:19:29,309
we're seeing here we're seeing now<font color="#CCCCCC"> bites</font>

465
00:19:25,770 --> 00:19:31,710
we're seeing case<font color="#E5E5E5"> insensitivity white</font>

466
00:19:29,309 --> 00:19:33,990
space and you know there's another white

467
00:19:31,710 --> 00:19:38,010
space where<font color="#CCCCCC"> you</font><font color="#E5E5E5"> bake a new line in there</font>

468
00:19:33,990 --> 00:19:40,020
to trip up filters you know this this

469
00:19:38,010 --> 00:19:44,280
<font color="#E5E5E5">all goes back to properly understanding</font>

470
00:19:40,020 --> 00:19:46,020
and coding and the RFC for URL states

471
00:19:44,280 --> 00:19:48,030
that you can only have alphanumeric and

472
00:19:46,020 --> 00:19:49,830
a few special characters you're not<font color="#CCCCCC"> even</font>

473
00:19:48,030 --> 00:19:52,918
<font color="#E5E5E5">lot to have spaces you're only allowed</font>

474
00:19:49,830 --> 00:19:55,020
to have<font color="#CCCCCC"> percent</font><font color="#E5E5E5"> 20 or plus and I've seen</font>

475
00:19:52,919 --> 00:19:59,730
web servers crash<font color="#E5E5E5"> like from sending an</font>

476
00:19:55,020 --> 00:20:02,658
unencoded space to it so our arsenic's

477
00:19:59,730 --> 00:20:05,210
chichi contains 70 unique ways to encode

478
00:20:02,659 --> 00:20:08,809
the lesson son or the opening opening

479
00:20:05,210 --> 00:20:10,340
tag yeah so I'm sure a lot<font color="#E5E5E5"> of you are</font>

480
00:20:08,809 --> 00:20:13,220
probably familiar with the first<font color="#E5E5E5"> four</font>

481
00:20:10,340 --> 00:20:14,449
but five through 70 maybe not<font color="#E5E5E5"> so</font><font color="#CCCCCC"> much</font>

482
00:20:13,220 --> 00:20:16,759
maybe you don't think about about<font color="#E5E5E5"> those</font>

483
00:20:14,450 --> 00:20:17,899
a lot and there's<font color="#CCCCCC"> even some missing</font>

484
00:20:16,759 --> 00:20:20,809
krameria doesn't have the full width or

485
00:20:17,899 --> 00:20:22,399
half with encoding I mean there's so

486
00:20:20,809 --> 00:20:25,249
many<font color="#CCCCCC"> different ways to</font><font color="#E5E5E5"> encode data and</font>

487
00:20:22,399 --> 00:20:29,599
it's really<font color="#CCCCCC"> hard for filter developers</font>

488
00:20:25,249 --> 00:20:31,099
to grasp this um so the moral of story

489
00:20:29,599 --> 00:20:33,769
<font color="#E5E5E5">is we're still partying like it's 1999</font>

490
00:20:31,099 --> 00:20:36,080
we still have you<font color="#CCCCCC"> know method matching</font>

491
00:20:33,769 --> 00:20:37,989
or verb tampering issues we still have

492
00:20:36,080 --> 00:20:41,359
encoding issues case sensitivity

493
00:20:37,989 --> 00:20:42,619
<font color="#E5E5E5">whitespace you know these these are</font>

494
00:20:41,359 --> 00:20:46,309
still happening<font color="#E5E5E5"> and that's that that's</font>

495
00:20:42,619 --> 00:20:48,379
the point I<font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> to make and we're</font>

496
00:20:46,309 --> 00:20:50,029
still seeing these in big worms<font color="#E5E5E5"> just the</font>

497
00:20:48,379 --> 00:20:53,228
<font color="#E5E5E5">ASP rocks are much like there was a talk</font>

498
00:20:50,029 --> 00:20:58,090
of that mentioned that earlier right so

499
00:20:53,229 --> 00:21:00,710
you still<font color="#CCCCCC"> see them using a cast which</font>

500
00:20:58,090 --> 00:21:03,859
lets you convert from between<font color="#E5E5E5"> data types</font>

501
00:21:00,710 --> 00:21:06,139
in TC equal and there you know decoding

502
00:21:03,859 --> 00:21:08,210
this hex and ascii string and putting

503
00:21:06,139 --> 00:21:09,879
null<font color="#E5E5E5"> bytes in there too perhaps the bait</font>

504
00:21:08,210 --> 00:21:12,139
things that are trying<font color="#E5E5E5"> to parse it or</font>

505
00:21:09,879 --> 00:21:14,570
people that are researching malware and

506
00:21:12,139 --> 00:21:16,219
maybe they don't<font color="#E5E5E5"> maybe their vm that</font>

507
00:21:14,570 --> 00:21:18,619
they're running<font color="#E5E5E5"> it through will miss</font><font color="#CCCCCC"> it</font>

508
00:21:16,220 --> 00:21:21,759
because they didn't they using some c

509
00:21:18,619 --> 00:21:25,759
library that stops it in all bytes and

510
00:21:21,759 --> 00:21:28,249
you know the other problem with this is

511
00:21:25,759 --> 00:21:30,499
that regular expressions are hard how

512
00:21:28,249 --> 00:21:33,049
many people<font color="#CCCCCC"> you know could look at this</font>

513
00:21:30,499 --> 00:21:34,789
<font color="#CCCCCC">and</font><font color="#E5E5E5"> explain in detail and concisely</font>

514
00:21:33,049 --> 00:21:36,499
about what this<font color="#E5E5E5"> is doing and like MIT</font>

515
00:21:34,789 --> 00:21:41,859
less than a minute probably can't do it

516
00:21:36,499 --> 00:21:44,509
you<font color="#E5E5E5"> do it cool you</font><font color="#CCCCCC"> should write filters</font>

517
00:21:41,859 --> 00:21:46,489
um how many you're familiar with

518
00:21:44,509 --> 00:21:52,820
backtracking when writing regular

519
00:21:46,489 --> 00:21:56,659
expressions yeah yeah<font color="#CCCCCC"> aka infinite regex</font>

520
00:21:52,820 --> 00:21:58,549
or runs indefinitely yeah so did I I

521
00:21:56,659 --> 00:22:01,849
actually was working on a static

522
00:21:58,549 --> 00:22:03,979
analysis product and we were we had a

523
00:22:01,849 --> 00:22:06,979
regex that just parse the HTML tags out

524
00:22:03,979 --> 00:22:10,039
of out<font color="#CCCCCC"> of a web page</font><font color="#E5E5E5"> when it came across</font>

525
00:22:06,979 --> 00:22:14,149
<font color="#E5E5E5">it and actually didn't figure out the</font>

526
00:22:10,039 --> 00:22:16,519
problem till a bit for for this until I

527
00:22:14,149 --> 00:22:16,889
got a bit a<font color="#CCCCCC"> bit obsessed we were driving</font>

528
00:22:16,519 --> 00:22:18,420
up to

529
00:22:16,890 --> 00:22:19,620
<font color="#CCCCCC">Freaknik a couple years</font><font color="#E5E5E5"> ago and my buddy</font>

530
00:22:18,420 --> 00:22:20,970
was driving and I was sitting the

531
00:22:19,620 --> 00:22:23,580
passion see with my laptop<font color="#E5E5E5"> and I was</font>

532
00:22:20,970 --> 00:22:26,840
just removing things from this HTML file

533
00:22:23,580 --> 00:22:30,320
to narrow down what the problem was and

534
00:22:26,840 --> 00:22:32,970
so what what backtracking is is

535
00:22:30,320 --> 00:22:35,129
basically if you written regex that

536
00:22:32,970 --> 00:22:39,090
exponentially increases your<font color="#E5E5E5"> CPU time</font>

537
00:22:35,130 --> 00:22:40,680
your Big O of<font color="#CCCCCC"> n N squared and it's</font>

538
00:22:39,090 --> 00:22:44,340
caused whenever you write something that

539
00:22:40,680 --> 00:22:46,200
can match a match and<font color="#E5E5E5"> I'll explain what</font>

540
00:22:44,340 --> 00:22:47,939
I mean by that<font color="#E5E5E5"> and another thing I</font>

541
00:22:46,200 --> 00:22:49,890
thought about is it potential<font color="#E5E5E5"> that if a</font>

542
00:22:47,940 --> 00:22:52,170
signature was poorly written could you

543
00:22:49,890 --> 00:22:56,250
denial service a filter with this yeah

544
00:22:52,170 --> 00:22:58,650
probably um so like let's look at this

545
00:22:56,250 --> 00:23:00,840
regex we have one or<font color="#CCCCCC"> more character of</font><font color="#E5E5E5"> X</font>

546
00:22:58,650 --> 00:23:02,670
1 or more character<font color="#E5E5E5"> X 1 or more previous</font>

547
00:23:00,840 --> 00:23:05,129
two matches combined followed by the

548
00:23:02,670 --> 00:23:07,350
single character y and reg ex is a great

549
00:23:05,130 --> 00:23:09,210
tool if you don't know about it it

550
00:23:07,350 --> 00:23:11,879
actually has backtrack detection in it

551
00:23:09,210 --> 00:23:13,920
and it'll it'll see it'll run this and

552
00:23:11,880 --> 00:23:16,440
<font color="#E5E5E5">i'll show you like</font><font color="#CCCCCC"> okay i</font><font color="#E5E5E5"> am basically</font>

553
00:23:13,920 --> 00:23:18,930
like running two loops because i have

554
00:23:16,440 --> 00:23:20,490
<font color="#E5E5E5">something like this where i'm tracing</font>

555
00:23:18,930 --> 00:23:22,440
over the same thing over<font color="#E5E5E5"> and over again</font>

556
00:23:20,490 --> 00:23:24,960
<font color="#E5E5E5">and</font><font color="#CCCCCC"> i'm gonna have</font><font color="#E5E5E5"> to start over to see</font>

557
00:23:22,440 --> 00:23:27,960
if the same if this is happening again

558
00:23:24,960 --> 00:23:29,400
and it it<font color="#CCCCCC"> just kills</font><font color="#E5E5E5"> your system and</font>

559
00:23:27,960 --> 00:23:32,340
it'll<font color="#CCCCCC"> just look like it's good hanging</font>

560
00:23:29,400 --> 00:23:35,030
and we know we ran into this<font color="#CCCCCC"> because we</font>

561
00:23:32,340 --> 00:23:37,560
were we were looking for HTML tags and

562
00:23:35,030 --> 00:23:40,440
we were looking<font color="#CCCCCC"> for you know open tag</font>

563
00:23:37,560 --> 00:23:44,730
and then some<font color="#E5E5E5"> alphanumeric and we didn't</font>

564
00:23:40,440 --> 00:23:47,670
really<font color="#E5E5E5"> count on that in asp.net there</font>

565
00:23:44,730 --> 00:23:49,290
you can have hyphens in there's a<font color="#E5E5E5"> lot of</font>

566
00:23:47,670 --> 00:23:50,550
properties<font color="#CCCCCC"> that have hyphens in them and</font>

567
00:23:49,290 --> 00:23:53,639
when we<font color="#CCCCCC"> encountered a page that's like</font>

568
00:23:50,550 --> 00:23:55,560
that followed by some a new line we

569
00:23:53,640 --> 00:23:58,080
basically<font color="#E5E5E5"> got into this loop of looking</font>

570
00:23:55,560 --> 00:23:59,460
for more opening and closing tags in and

571
00:23:58,080 --> 00:24:01,230
around this hyphen instead just kept

572
00:23:59,460 --> 00:24:07,530
racing over and over the same HTML tags

573
00:24:01,230 --> 00:24:11,610
and those hanging<font color="#CCCCCC"> are our program um so</font>

574
00:24:07,530 --> 00:24:13,500
I showed that regex<font color="#CCCCCC"> from modsecurity</font>

575
00:24:11,610 --> 00:24:15,240
which is massive<font color="#E5E5E5"> I hate hate regex is</font>

576
00:24:13,500 --> 00:24:17,550
like that because it's<font color="#CCCCCC"> just it's too</font>

577
00:24:15,240 --> 00:24:20,550
complicated and I feel like<font color="#E5E5E5"> something in</font>

578
00:24:17,550 --> 00:24:24,030
there is going to go wrong but I'm a big

579
00:24:20,550 --> 00:24:27,480
fan of the PHP ID s regex is<font color="#E5E5E5"> there</font>

580
00:24:24,030 --> 00:24:28,980
simple concise well documented a lot of

581
00:24:27,480 --> 00:24:29,610
<font color="#E5E5E5">people are using them</font><font color="#CCCCCC"> I'm actually using</font>

582
00:24:28,980 --> 00:24:33,330
the

583
00:24:29,610 --> 00:24:37,590
it in the tool on developing which<font color="#E5E5E5"> I'll</font>

584
00:24:33,330 --> 00:24:39,540
show you<font color="#E5E5E5"> later on um but it even has</font>

585
00:24:37,590 --> 00:24:40,770
some problems so I mean there's yeah

586
00:24:39,540 --> 00:24:42,570
they have to smoke test website where

587
00:24:40,770 --> 00:24:44,160
you can put in and it's an attack and

588
00:24:42,570 --> 00:24:45,389
it'll tell<font color="#E5E5E5"> you if anything flag so</font>

589
00:24:44,160 --> 00:24:49,679
there's a simple cross-site scripting

590
00:24:45,390 --> 00:24:51,600
attack but what it detected classic

591
00:24:49,679 --> 00:24:53,340
sequel injection probing just because I

592
00:24:51,600 --> 00:24:56,490
had some tick marks in there like that's

593
00:24:53,340 --> 00:24:59,070
that's a bit overkill in my opinion I

594
00:24:56,490 --> 00:25:02,190
really hate false positives but it's

595
00:24:59,070 --> 00:25:06,030
it's difficult you<font color="#CCCCCC"> know white lists are</font>

596
00:25:02,190 --> 00:25:07,650
good but how many developers and QA

597
00:25:06,030 --> 00:25:09,240
engineers really understand the subset

598
00:25:07,650 --> 00:25:12,299
of strings that the regex that their

599
00:25:09,240 --> 00:25:15,000
products using will match or miss not

600
00:25:12,299 --> 00:25:17,639
many what about signature writers<font color="#E5E5E5"> even</font>

601
00:25:15,000 --> 00:25:19,350
more importantly it's really difficult

602
00:25:17,640 --> 00:25:23,549
to find the balance between false

603
00:25:19,350 --> 00:25:25,139
positives and false negatives and even

604
00:25:23,549 --> 00:25:28,168
your even if you did everything<font color="#E5E5E5"> else</font>

605
00:25:25,140 --> 00:25:32,490
right your underlying signature engine

606
00:25:28,169 --> 00:25:34,799
can have problems<font color="#E5E5E5"> such as pcre which is</font>

607
00:25:32,490 --> 00:25:36,179
what snort uses it it's had a lot of

608
00:25:34,799 --> 00:25:39,480
serious vulnerabilities maybe only like

609
00:25:36,179 --> 00:25:43,190
memory corruption yeah if you're

610
00:25:39,480 --> 00:25:43,190
interested you<font color="#E5E5E5"> can go</font><font color="#CCCCCC"> check out the CVS</font>

611
00:25:43,429 --> 00:25:48,870
so you know once again moral the story

612
00:25:46,740 --> 00:25:51,260
is you know right now the biggest target

613
00:25:48,870 --> 00:25:53,820
seems to be the application layer but

614
00:25:51,260 --> 00:25:57,390
what<font color="#E5E5E5"> about that that transport layer is</font>

615
00:25:53,820 --> 00:26:01,889
it is it safe even with all<font color="#E5E5E5"> these these</font>

616
00:25:57,390 --> 00:26:06,059
<font color="#E5E5E5">uh network devices that we have yeah not</font>

617
00:26:01,890 --> 00:26:08,309
so much so one technique that<font color="#CCCCCC"> I didn't</font>

618
00:26:06,059 --> 00:26:11,460
<font color="#E5E5E5">mention yet that was in that 1999 paper</font>

619
00:26:08,309 --> 00:26:13,350
from Jeff Forrestal and that's his tribe

620
00:26:11,460 --> 00:26:17,580
tribal tatt right Billy said you say has

621
00:26:13,350 --> 00:26:19,199
that on his arm<font color="#E5E5E5"> okay cool it's it's</font>

622
00:26:17,580 --> 00:26:20,668
called session<font color="#CCCCCC"> splicing and it's the</font>

623
00:26:19,200 --> 00:26:23,669
<font color="#E5E5E5">only network level attack in his paper</font>

624
00:26:20,669 --> 00:26:24,720
and it involves sending parts of the

625
00:26:23,669 --> 00:26:26,250
<font color="#CCCCCC">requests in different packets how many</font>

626
00:26:24,720 --> 00:26:29,720
people have heard<font color="#E5E5E5"> of this before anyone</font>

627
00:26:26,250 --> 00:26:33,120
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> we've</font><font color="#E5E5E5"> got a few people cool so</font>

628
00:26:29,720 --> 00:26:34,830
basically if you have a request to root

629
00:26:33,120 --> 00:26:36,809
directory just a simple gate request it

630
00:26:34,830 --> 00:26:39,570
may might be split across multiple

631
00:26:36,809 --> 00:26:40,980
packets like this so each one<font color="#E5E5E5"> of these</font>

632
00:26:39,570 --> 00:26:42,029
would be you know I'm<font color="#E5E5E5"> just sending this</font>

633
00:26:40,980 --> 00:26:45,509
little bit<font color="#E5E5E5"> of data this</font>

634
00:26:42,029 --> 00:26:46,710
this<font color="#CCCCCC"> a little bit it's not the same as</font>

635
00:26:45,509 --> 00:26:47,999
IP fragmentation when I was explaining

636
00:26:46,710 --> 00:26:50,249
this a few<font color="#E5E5E5"> my friends like oh you mean</font>

637
00:26:47,999 --> 00:26:54,149
like like fragmentation like no not

638
00:26:50,249 --> 00:26:55,649
<font color="#E5E5E5">quite so IP fragmentation happens</font>

639
00:26:54,149 --> 00:26:56,609
whenever packets are too large and this

640
00:26:55,649 --> 00:26:59,070
<font color="#E5E5E5">is</font><font color="#CCCCCC"> something that can happen naturally</font>

641
00:26:56,609 --> 00:27:01,949
which is why these network appliances

642
00:26:59,070 --> 00:27:05,340
need to handle this<font color="#E5E5E5"> and basically</font>

643
00:27:01,950 --> 00:27:07,019
involves splitting between the router

644
00:27:05,340 --> 00:27:08,908
will split between multiple packets

645
00:27:07,019 --> 00:27:11,070
because it's too large<font color="#E5E5E5"> and sessions</font>

646
00:27:08,909 --> 00:27:13,019
blessing is purposefully making it small

647
00:27:11,070 --> 00:27:14,999
so that you're and you're<font color="#E5E5E5"> sending it</font>

648
00:27:13,019 --> 00:27:19,129
across multiple packets to evade

649
00:27:14,999 --> 00:27:21,839
detection so what's the defense that

650
00:27:19,129 --> 00:27:24,389
audiences have against this they can for

651
00:27:21,839 --> 00:27:26,700
fragmentation they reassemble packets

652
00:27:24,389 --> 00:27:27,869
even though like I p at the IP level

653
00:27:26,700 --> 00:27:29,219
it's supposed to be stateless and it's

654
00:27:27,869 --> 00:27:31,049
supposed<font color="#CCCCCC"> to be like fire packets and and</font>

655
00:27:29,219 --> 00:27:32,759
forget<font color="#CCCCCC"> about</font><font color="#E5E5E5"> them but you still if</font>

656
00:27:31,049 --> 00:27:33,960
fragmentation occurs you have to have a

657
00:27:32,759 --> 00:27:37,710
sense of what's happening<font color="#E5E5E5"> in the future</font>

658
00:27:33,960 --> 00:27:39,419
<font color="#CCCCCC">to and keep things around on the same</font>

659
00:27:37,710 --> 00:27:42,719
thing with session reassembly where

660
00:27:39,419 --> 00:27:44,159
which happens at the TCP layer and you

661
00:27:42,719 --> 00:27:47,460
have to<font color="#E5E5E5"> be able to reassemble these</font>

662
00:27:44,159 --> 00:27:49,950
packets and another simple defense that

663
00:27:47,460 --> 00:27:52,679
<font color="#E5E5E5">I like the</font><font color="#CCCCCC"> best</font><font color="#E5E5E5"> is if you think</font>

664
00:27:49,950 --> 00:27:54,690
something is is wrong if you think<font color="#E5E5E5"> your</font>

665
00:27:52,679 --> 00:27:56,279
your filters being attacked by this just

666
00:27:54,690 --> 00:27:57,389
sent a reset back it just kill the

667
00:27:56,279 --> 00:27:59,669
connection I mean maybe<font color="#E5E5E5"> you can't do</font>

668
00:27:57,389 --> 00:28:02,369
that if you're you've had to hide

669
00:27:59,669 --> 00:28:04,529
dependencies for business software on

670
00:28:02,369 --> 00:28:05,999
your network or something but um so I

671
00:28:04,529 --> 00:28:09,330
was I was trying<font color="#E5E5E5"> to do some session</font>

672
00:28:05,999 --> 00:28:10,559
splicing stuff against Google and they

673
00:28:09,330 --> 00:28:11,789
were<font color="#CCCCCC"> sending me</font><font color="#E5E5E5"> reset packets and I</font>

674
00:28:10,559 --> 00:28:14,700
actually have a<font color="#E5E5E5"> friend that works in</font>

675
00:28:11,789 --> 00:28:15,899
Zurich for Google and he asked him<font color="#CCCCCC"> do</font>

676
00:28:14,700 --> 00:28:16,979
you<font color="#E5E5E5"> know why this is</font><font color="#CCCCCC"> happening he's like</font>

677
00:28:15,899 --> 00:28:18,539
yeah I'll pull<font color="#E5E5E5"> up that code right now</font>

678
00:28:16,979 --> 00:28:19,769
<font color="#E5E5E5">and he's like well it's mainly for</font>

679
00:28:18,539 --> 00:28:20,999
performance reasons because we really

680
00:28:19,769 --> 00:28:22,559
don't there's<font color="#E5E5E5"> really no reason you</font>

681
00:28:20,999 --> 00:28:24,719
should have an open connection to our

682
00:28:22,559 --> 00:28:26,070
search engines there's you know<font color="#E5E5E5"> we can't</font>

683
00:28:24,719 --> 00:28:26,940
really<font color="#E5E5E5"> afford that performance so we're</font>

684
00:28:26,070 --> 00:28:28,229
just gonna send a reset if you're

685
00:28:26,940 --> 00:28:30,859
connected for longer than like 20

686
00:28:28,229 --> 00:28:30,859
seconds<font color="#E5E5E5"> or something</font>

687
00:28:32,460 --> 00:28:41,730
<font color="#E5E5E5">uh session splicing yeah yeah I'll show</font>

688
00:28:39,120 --> 00:28:44,280
you a little<font color="#E5E5E5"> bit more problem so what's</font>

689
00:28:41,730 --> 00:28:45,870
the state of the evasion does whiskers

690
00:28:44,280 --> 00:28:51,030
session splicing tactic still work on

691
00:28:45,870 --> 00:28:53,340
snort know why is that because the

692
00:28:51,030 --> 00:28:55,139
<font color="#CCCCCC">developers of snort read our fees paper</font>

693
00:28:53,340 --> 00:28:57,510
they they've said well he's pretty

694
00:28:55,140 --> 00:29:00,600
famous hacker I'll you know put right

695
00:28:57,510 --> 00:29:02,070
dry stuff to fix this and I'm I'll maybe

696
00:29:00,600 --> 00:29:04,500
not<font color="#E5E5E5"> really think about it anymore then</font>

697
00:29:02,070 --> 00:29:09,090
then I need<font color="#CCCCCC"> to and I'll just you know</font>

698
00:29:04,500 --> 00:29:11,010
patch whatever heat hole he found um so

699
00:29:09,090 --> 00:29:13,439
one really interesting piece about in

700
00:29:11,010 --> 00:29:16,680
his paper about session splicing as he

701
00:29:13,440 --> 00:29:19,290
says depending on<font color="#E5E5E5"> your net your system</font>

702
00:29:16,680 --> 00:29:21,800
or network speed it'll send one<font color="#E5E5E5"> to three</font>

703
00:29:19,290 --> 00:29:25,080
characters and so when I was<font color="#E5E5E5"> trying to</font>

704
00:29:21,800 --> 00:29:28,500
code this tactic up into into<font color="#E5E5E5"> the proxy</font>

705
00:29:25,080 --> 00:29:30,750
I i came across i came across this and

706
00:29:28,500 --> 00:29:33,090
didn't really<font color="#E5E5E5"> make sense to</font><font color="#CCCCCC"> me until it</font>

707
00:29:30,750 --> 00:29:35,670
<font color="#CCCCCC">was</font><font color="#E5E5E5"> implemented and it just wasn't</font>

708
00:29:33,090 --> 00:29:38,070
<font color="#CCCCCC">happening at all basically i wrote a</font>

709
00:29:35,670 --> 00:29:40,230
loop<font color="#CCCCCC"> that was</font><font color="#E5E5E5"> cutting these HTTP</font>

710
00:29:38,070 --> 00:29:42,540
requests up and sending them but my

711
00:29:40,230 --> 00:29:43,680
system was so fast that<font color="#E5E5E5"> it was going</font>

712
00:29:42,540 --> 00:29:44,790
through the loop so fast and putting

713
00:29:43,680 --> 00:29:46,110
them all together and by the time<font color="#E5E5E5"> it got</font>

714
00:29:44,790 --> 00:29:49,920
<font color="#E5E5E5">to my network adapter that was just</font>

715
00:29:46,110 --> 00:29:52,919
sending the whole<font color="#E5E5E5"> request and that's</font>

716
00:29:49,920 --> 00:29:54,930
just<font color="#E5E5E5"> probably the reason why um yeah and</font>

717
00:29:52,920 --> 00:29:56,760
<font color="#CCCCCC">i thought these up on</font><font color="#E5E5E5"> wikipedia now I</font>

718
00:29:54,930 --> 00:29:59,160
was kind of losing it at intel's

719
00:29:56,760 --> 00:30:04,080
marketing<font color="#E5E5E5"> because it's like well you</font>

720
00:29:59,160 --> 00:30:07,260
think<font color="#E5E5E5"> we need</font><font color="#CCCCCC"> another ! but yeah and so</font>

721
00:30:04,080 --> 00:30:11,750
<font color="#E5E5E5">now i'm on my beast top here I have some</font>

722
00:30:07,260 --> 00:30:17,310
like extreme core2duo action happening

723
00:30:11,750 --> 00:30:20,010
um so let's talk<font color="#CCCCCC"> about how how</font><font color="#E5E5E5"> I won't</font>

724
00:30:17,310 --> 00:30:24,000
follow through with this and bypassed

725
00:30:20,010 --> 00:30:26,400
snort basically what<font color="#E5E5E5"> I ended up doing</font>

726
00:30:24,000 --> 00:30:29,280
<font color="#E5E5E5">was a practical session splicing plus a</font>

727
00:30:26,400 --> 00:30:33,630
timing attack so because my system was

728
00:30:29,280 --> 00:30:35,399
so fast and it was making<font color="#CCCCCC"> it was putting</font>

729
00:30:33,630 --> 00:30:38,460
everything together before it could<font color="#CCCCCC"> went</font>

730
00:30:35,400 --> 00:30:44,700
<font color="#CCCCCC">over the network</font><font color="#E5E5E5"> I introduced a time</font>

731
00:30:38,460 --> 00:30:48,330
delay and the<font color="#E5E5E5"> practical part about it is</font>

732
00:30:44,700 --> 00:30:50,330
I ended up basically taking the

733
00:30:48,330 --> 00:30:54,540
signatures that I wanted<font color="#E5E5E5"> to evade and</font>

734
00:30:50,330 --> 00:30:57,330
splitting the payload and and the reason

735
00:30:54,540 --> 00:31:00,600
I did that was because at liner this

736
00:30:57,330 --> 00:31:02,159
time delay and I you<font color="#E5E5E5"> know kind of</font>

737
00:31:00,600 --> 00:31:05,969
thought what about like the session

738
00:31:02,160 --> 00:31:07,650
reassembly<font color="#E5E5E5"> timeout for snort if I if I</font>

739
00:31:05,970 --> 00:31:09,720
get up above that<font color="#E5E5E5"> it's you know maybe</font>

740
00:31:07,650 --> 00:31:11,880
going<font color="#E5E5E5"> to miss this stuff but if you</font>

741
00:31:09,720 --> 00:31:13,650
follow<font color="#CCCCCC"> RF peas paper he says you know</font>

742
00:31:11,880 --> 00:31:14,940
<font color="#E5E5E5">just split everything like one or two</font>

743
00:31:13,650 --> 00:31:16,440
packets of time and then<font color="#E5E5E5"> if I that had</font>

744
00:31:14,940 --> 00:31:18,300
to at that time delay we're looking at

745
00:31:16,440 --> 00:31:21,000
like<font color="#E5E5E5"> an hour and a half to send one HTTP</font>

746
00:31:18,300 --> 00:31:25,590
HTTP request which is not practical at

747
00:31:21,000 --> 00:31:27,560
all so to<font color="#E5E5E5"> make it more practical what we</font>

748
00:31:25,590 --> 00:31:30,870
<font color="#E5E5E5">ended or what what ended up doing was</font>

749
00:31:27,560 --> 00:31:32,520
taking the signature running the regex

750
00:31:30,870 --> 00:31:35,040
on my payload and only splitting where<font color="#E5E5E5"> I</font>

751
00:31:32,520 --> 00:31:40,440
needed to to evade the fill to evade the

752
00:31:35,040 --> 00:31:42,300
signature and any IDs is vulnerable<font color="#CCCCCC"> to</font>

753
00:31:40,440 --> 00:31:45,450
this if there's stateful inspection if

754
00:31:42,300 --> 00:31:48,300
<font color="#E5E5E5">they're reassembly of a packets timeout</font>

755
00:31:45,450 --> 00:31:52,590
is less than the reassembly of<font color="#E5E5E5"> the</font>

756
00:31:48,300 --> 00:31:53,790
server that's behind it and it's you

757
00:31:52,590 --> 00:31:56,250
know this is<font color="#CCCCCC"> similar to old</font>

758
00:31:53,790 --> 00:31:57,990
fragmentation attacks but<font color="#E5E5E5"> it's moved up</font>

759
00:31:56,250 --> 00:32:01,500
one layer as I as I said attackers are

760
00:31:57,990 --> 00:32:05,610
moving up though OSI stack and filter

761
00:32:01,500 --> 00:32:08,070
developers need to be aware of this so

762
00:32:05,610 --> 00:32:11,250
the code<font color="#E5E5E5"> name</font><font color="#CCCCCC"> for the to home writing is</font>

763
00:32:08,070 --> 00:32:12,149
called time splicer and<font color="#CCCCCC"> i don't know if</font>

764
00:32:11,250 --> 00:32:15,750
<font color="#E5E5E5">that'll be the final name but</font><font color="#CCCCCC"> i thought</font>

765
00:32:12,150 --> 00:32:18,960
that sounded cool so if<font color="#E5E5E5"> we have an</font>

766
00:32:15,750 --> 00:32:20,520
attack such as this and just a very

767
00:32:18,960 --> 00:32:22,920
simple<font color="#E5E5E5"> signature is looking for a</font>

768
00:32:20,520 --> 00:32:25,350
normalized opening script tag or closing

769
00:32:22,920 --> 00:32:26,670
script tag and we know that such the

770
00:32:25,350 --> 00:32:31,649
stateful inspection time out for the

771
00:32:26,670 --> 00:32:34,710
ideas which snorts is 30 seconds and we

772
00:32:31,650 --> 00:32:37,560
can recursively go over our HTTP<font color="#CCCCCC"> request</font>

773
00:32:34,710 --> 00:32:39,990
<font color="#CCCCCC">and split the attack string and make a</font>

774
00:32:37,560 --> 00:32:42,149
new packet and add time delay of you

775
00:32:39,990 --> 00:32:46,500
know maybe 31 seconds between each

776
00:32:42,150 --> 00:32:47,640
packet and yeah so as I said<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> north</font>

777
00:32:46,500 --> 00:32:51,930
vulnerable to this<font color="#E5E5E5"> because</font><font color="#CCCCCC"> of their</font>

778
00:32:47,640 --> 00:32:53,550
default time now so whatever<font color="#E5E5E5"> what the</font>

779
00:32:51,930 --> 00:32:56,910
request would end up looking like is the

780
00:32:53,550 --> 00:32:57,280
first section and we<font color="#CCCCCC"> stop after you know</font>

781
00:32:56,910 --> 00:33:00,460
<font color="#CCCCCC">the</font>

782
00:32:57,280 --> 00:33:03,340
opening tag and s and then wait you know

783
00:33:00,460 --> 00:33:06,130
<font color="#E5E5E5">30 seconds or so and then send the</font>

784
00:33:03,340 --> 00:33:07,840
middle<font color="#E5E5E5"> part of the attack and then you</font>

785
00:33:06,130 --> 00:33:09,310
know I'll wait to do is is wait another

786
00:33:07,840 --> 00:33:12,970
30 seconds and send last party attack

787
00:33:09,310 --> 00:33:14,110
and we have this sneak by a snort in a

788
00:33:12,970 --> 00:33:17,410
little<font color="#CCCCCC"> over a minute I'd say that's</font>

789
00:33:14,110 --> 00:33:21,240
<font color="#E5E5E5">practical especially if your cyber</font>

790
00:33:17,410 --> 00:33:23,860
criminal and you I'm sure you can wait

791
00:33:21,240 --> 00:33:26,980
so what this looks like in wireshark is

792
00:33:23,860 --> 00:33:29,649
you know we have our<font color="#E5E5E5"> since an ack ack</font>

793
00:33:26,980 --> 00:33:31,660
and then the first<font color="#E5E5E5"> part of the post we</font>

794
00:33:29,650 --> 00:33:34,900
get<font color="#E5E5E5"> a hundred continue from the server</font>

795
00:33:31,660 --> 00:33:38,110
and then<font color="#E5E5E5"> a knack</font><font color="#CCCCCC"> i say i got your</font>

796
00:33:34,900 --> 00:33:41,830
continued and then you'll see a weight

797
00:33:38,110 --> 00:33:44,530
and then you know send<font color="#CCCCCC"> the next</font><font color="#E5E5E5"> bit</font>

798
00:33:41,830 --> 00:33:46,540
which<font color="#CCCCCC"> is right here you can see the</font><font color="#E5E5E5"> data</font>

799
00:33:44,530 --> 00:33:48,760
right right there and then get another

800
00:33:46,540 --> 00:33:51,490
100 continue and<font color="#E5E5E5"> i sent another kin to</font>

801
00:33:48,760 --> 00:33:53,640
the rest of<font color="#E5E5E5"> my packet and then I get my</font>

802
00:33:51,490 --> 00:33:58,090
200 ok I got my full response back and

803
00:33:53,640 --> 00:34:01,030
<font color="#CCCCCC">hack and done and the default session</font>

804
00:33:58,090 --> 00:34:02,949
timeouts for you know Apache 10 minutes

805
00:34:01,030 --> 00:34:06,070
I was seeing whenever I was<font color="#CCCCCC"> sending this</font>

806
00:34:02,950 --> 00:34:08,490
attack talk to them I asked five point

807
00:34:06,070 --> 00:34:11,020
<font color="#CCCCCC">over 15</font><font color="#E5E5E5"> minutes and newer</font><font color="#CCCCCC"> is 20 minutes</font>

808
00:34:08,489 --> 00:34:13,359
<font color="#E5E5E5">you know so 30 seconds isn't really</font>

809
00:34:11,020 --> 00:34:15,460
going to cut it for your reassembly

810
00:34:13,360 --> 00:34:17,950
inspection so what else<font color="#E5E5E5"> can we do with</font>

811
00:34:15,460 --> 00:34:20,050
<font color="#E5E5E5">this information could fingerprint a</font>

812
00:34:17,949 --> 00:34:22,239
server based on its time out I can just

813
00:34:20,050 --> 00:34:24,760
you know open this connection and send

814
00:34:22,239 --> 00:34:26,560
send some data<font color="#E5E5E5"> to it and let it hang and</font>

815
00:34:24,760 --> 00:34:29,620
then when i<font color="#CCCCCC"> get a reset because it timed</font>

816
00:34:26,560 --> 00:34:32,380
out<font color="#E5E5E5"> i know i might be able to tell what</font>

817
00:34:29,620 --> 00:34:35,529
server it is same with<font color="#CCCCCC"> ids if the ids is</font>

818
00:34:32,380 --> 00:34:37,060
going to send<font color="#CCCCCC"> me</font><font color="#E5E5E5"> that reset or if it's i</font>

819
00:34:35,530 --> 00:34:40,810
might be able<font color="#E5E5E5"> to tell what I'd yes</font>

820
00:34:37,060 --> 00:34:43,020
they're running on so many demo this for

821
00:34:40,810 --> 00:34:43,020
you now

822
00:34:44,449 --> 00:34:55,460
so I have a snort running and you can

823
00:34:50,969 --> 00:34:55,459
see there's<font color="#E5E5E5"> no traffic here and</font>

824
00:35:08,700 --> 00:35:16,470
so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the prototype</font><font color="#CCCCCC"> of my tool and</font>

825
00:35:13,070 --> 00:35:21,020
so there we go we're connected at

826
00:35:16,470 --> 00:35:23,640
<font color="#CCCCCC">six-forty-five send the</font><font color="#E5E5E5"> first part um</font>

827
00:35:21,020 --> 00:35:24,900
I'm so does this tool<font color="#E5E5E5"> seem like</font>

828
00:35:23,640 --> 00:35:27,540
something you'd be interested in using

829
00:35:24,900 --> 00:35:29,520
to your pen testers out there would you

830
00:35:27,540 --> 00:35:31,170
if you you so<font color="#E5E5E5"> I'm thinking of having</font>

831
00:35:29,520 --> 00:35:33,869
like an interactive console where you

832
00:35:31,170 --> 00:35:35,579
can have any requests you want and you

833
00:35:33,869 --> 00:35:38,670
<font color="#CCCCCC">can just paste them in and this this</font>

834
00:35:35,579 --> 00:35:40,230
will just fire off and run or have a you

835
00:35:38,670 --> 00:35:41,700
can maybe load a file a little bunch<font color="#E5E5E5"> of</font>

836
00:35:40,230 --> 00:35:44,040
requests and it'll just this will fire

837
00:35:41,700 --> 00:35:46,500
off and run and<font color="#E5E5E5"> I was going to bake in</font>

838
00:35:44,040 --> 00:35:50,910
the PHP ID s up<font color="#CCCCCC"> so there's our response</font>

839
00:35:46,500 --> 00:35:53,670
coming back from the server yeah it's

840
00:35:50,910 --> 00:35:59,279
pretty big the base page the UI first

841
00:35:53,670 --> 00:36:02,339
snort web<font color="#CCCCCC"> UI is</font><font color="#E5E5E5"> pretty fat client here</font>

842
00:35:59,280 --> 00:36:06,510
we have 45 seconds and let's see it its

843
00:36:02,339 --> 00:36:11,730
<font color="#CCCCCC">North detect it refresh this</font><font color="#E5E5E5"> it's got</font>

844
00:36:06,510 --> 00:36:13,740
nothing let me just send<font color="#E5E5E5"> an attack to</font>

845
00:36:11,730 --> 00:36:19,579
this page which is running<font color="#E5E5E5"> on the snort</font>

846
00:36:13,740 --> 00:36:19,578
box see

847
00:36:29,950 --> 00:36:33,149
expect you to

848
00:36:49,339 --> 00:36:58,160
of course<font color="#CCCCCC"> demo never goes right I</font>

849
00:36:51,349 --> 00:37:01,059
expected it to to flag this alert yep me

850
00:36:58,160 --> 00:37:01,058
try something real quick

851
00:37:10,240 --> 00:37:15,700
yeah just using the<font color="#CCCCCC"> backtrack vm</font><font color="#E5E5E5"> i had</font>

852
00:37:13,930 --> 00:37:19,000
on my<font color="#E5E5E5"> machine to host snort which is</font>

853
00:37:15,700 --> 00:37:25,210
just<font color="#CCCCCC"> a default install love me some</font>

854
00:37:19,000 --> 00:37:27,160
<font color="#E5E5E5">backtrack this is 34 doesn't have this</font>

855
00:37:25,210 --> 00:37:29,619
nice little service here to just one

856
00:37:27,160 --> 00:37:32,529
click set it up yeah<font color="#E5E5E5"> I know it's yeah</font>

857
00:37:29,619 --> 00:37:34,090
<font color="#CCCCCC">it's still</font><font color="#E5E5E5"> in beta but uh I really like</font>

858
00:37:32,530 --> 00:37:36,900
<font color="#CCCCCC">that let's put a really insecure</font>

859
00:37:34,090 --> 00:37:36,900
password in there

860
00:37:45,540 --> 00:37:49,700
yeah that's all fine just start the

861
00:37:47,490 --> 00:37:49,700
service

862
00:37:59,450 --> 00:38:01,990
cool

863
00:38:06,520 --> 00:38:10,090
huh

864
00:38:08,020 --> 00:38:19,900
well

865
00:38:10,090 --> 00:38:23,680
I promise this works but um yeah<font color="#E5E5E5"> so is</font>

866
00:38:19,900 --> 00:38:29,020
there any questions a card face point

867
00:38:23,680 --> 00:38:30,490
I'm in there yeah yeah<font color="#E5E5E5"> i'm i mean if you</font>

868
00:38:29,020 --> 00:38:33,730
want<font color="#E5E5E5"> to be notified whenever this tool</font>

869
00:38:30,490 --> 00:38:35,770
is done and released just you can email

870
00:38:33,730 --> 00:38:37,590
me or and i'll let you know<font color="#E5E5E5"> as soon as</font>

871
00:38:35,770 --> 00:38:43,840
<font color="#E5E5E5">it's done or just pay attention to the</font>

872
00:38:37,590 --> 00:38:44,980
HP<font color="#E5E5E5"> security blog and post up some</font>

873
00:38:43,840 --> 00:38:56,830
<font color="#CCCCCC">information on it when it's ready to</font>

874
00:38:44,980 --> 00:38:57,850
download on there so thanks I don't know

875
00:38:56,830 --> 00:38:59,620
what the<font color="#E5E5E5"> final name of</font><font color="#CCCCCC"> it's going to be</font>

876
00:38:57,850 --> 00:39:02,350
because HP marketing might put the car

877
00:38:59,620 --> 00:39:05,310
Bosh on time splicer but uh that's what

878
00:39:02,350 --> 00:39:05,310
we're calling it now what's up

879
00:39:16,660 --> 00:39:27,788
<font color="#CCCCCC">okay this one yeah</font>

880
00:39:23,079 --> 00:39:30,729
yeah it's wire trip net / RFP / txt /

881
00:39:27,789 --> 00:39:33,700
whisker<font color="#CCCCCC"> IDs HTML highly recommend going</font>

882
00:39:30,729 --> 00:39:35,739
to read<font color="#E5E5E5"> that and also</font><font color="#CCCCCC"> Newsham and Patek</font>

883
00:39:33,700 --> 00:39:38,739
have they did<font color="#E5E5E5"> like the original IDs of</font>

884
00:39:35,739 --> 00:39:41,499
<font color="#E5E5E5">Asian presentation which in 98 that was</font>

885
00:39:38,739 --> 00:39:42,819
a big hit and should check<font color="#E5E5E5"> that out that</font>

886
00:39:41,499 --> 00:39:47,410
talks more about like IP fragmentation

887
00:39:42,819 --> 00:39:51,339
things like that and<font color="#CCCCCC"> Robert grams done</font>

888
00:39:47,410 --> 00:39:53,288
some cool stuff with<font color="#CCCCCC"> it dan kaminsky</font>

889
00:39:51,339 --> 00:39:56,430
black had a few years ago had some

890
00:39:53,289 --> 00:39:58,900
interesting points about it<font color="#CCCCCC"> as well he</font>

891
00:39:56,430 --> 00:40:02,529
was<font color="#E5E5E5"> basically saying like</font><font color="#CCCCCC"> that if your</font>

892
00:39:58,900 --> 00:40:06,309
time out<font color="#E5E5E5"> of your IDs doesn't match the</font>

893
00:40:02,529 --> 00:40:08,680
time out of the reassembly on or on<font color="#E5E5E5"> your</font>

894
00:40:06,309 --> 00:40:12,430
server that there you can even<font color="#CCCCCC"> do some</font>

895
00:40:08,680 --> 00:40:14,499
<font color="#E5E5E5">other cool things like basically if the</font>

896
00:40:12,430 --> 00:40:16,299
time out<font color="#CCCCCC"> of your</font><font color="#E5E5E5"> IDs is greater than the</font>

897
00:40:14,499 --> 00:40:17,769
<font color="#CCCCCC">server's you</font><font color="#E5E5E5"> can do some things</font><font color="#CCCCCC"> to</font>

898
00:40:16,299 --> 00:40:19,719
bypass it like have<font color="#E5E5E5"> it time out</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

899
00:40:17,769 --> 00:40:21,879
<font color="#CCCCCC">server first and then the</font><font color="#E5E5E5"> ids is still</font>

900
00:40:19,719 --> 00:40:24,459
holding it in place and then you start

901
00:40:21,880 --> 00:40:25,630
sending new payload but the idea still

902
00:40:24,459 --> 00:40:27,578
has the first part of the first payload

903
00:40:25,630 --> 00:40:29,529
you sent so that it gets confused

904
00:40:27,579 --> 00:40:31,239
because it has extra data in there and

905
00:40:29,529 --> 00:40:32,440
then you end up still being<font color="#CCCCCC"> able to</font>

906
00:40:31,239 --> 00:40:36,069
attack the server if the timeouts

907
00:40:32,440 --> 00:40:37,869
greater than your then on your IDs<font color="#E5E5E5"> than</font>

908
00:40:36,069 --> 00:40:41,499
it is on your server so they really<font color="#E5E5E5"> need</font>

909
00:40:37,869 --> 00:40:49,920
<font color="#E5E5E5">to match</font><font color="#CCCCCC"> up or do things like resets so</font>

910
00:40:41,499 --> 00:40:49,919
that's my recommendation you up do<font color="#E5E5E5"> it</font>

