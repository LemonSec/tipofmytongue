1
00:00:00,080 --> 00:00:02,639
reverse engineering protocols followed

2
00:00:02,639 --> 00:00:03,360
by

3
00:00:03,360 --> 00:00:06,799
assy art for beginners so it's all

4
00:00:06,799 --> 00:00:09,200
yours so alrighty hey everybody um

5
00:00:09,200 --> 00:00:10,480
welcome to my talk

6
00:00:10,480 --> 00:00:13,920
i am ned spooky and i'm here to

7
00:00:13,920 --> 00:00:16,160
give some talks about reverse

8
00:00:16,160 --> 00:00:17,600
engineering unknown protocols

9
00:00:17,600 --> 00:00:21,119
and ascii art for beginners so i spoke

10
00:00:21,119 --> 00:00:21,760
at last

11
00:00:21,760 --> 00:00:23,920
con it was really awesome big thank you

12
00:00:23,920 --> 00:00:25,279
to leslie and everybody who's doing this

13
00:00:25,279 --> 00:00:26,880
this has been awesome to watch all the

14
00:00:26,880 --> 00:00:28,240
talks have been great

15
00:00:28,240 --> 00:00:30,400
um and so yeah if anybody here has any

16
00:00:30,400 --> 00:00:32,399
questions too i'll have a q a at the end

17
00:00:32,399 --> 00:00:35,040
uh hopefully if you have anything um or

18
00:00:35,040 --> 00:00:36,800
if not you can't hit me up on twitter

19
00:00:36,800 --> 00:00:39,680
so okay let's get started so first who

20
00:00:39,680 --> 00:00:40,320
am i

21
00:00:40,320 --> 00:00:43,600
uh simple i'm not spooky my website is

22
00:00:43,600 --> 00:00:46,399
no.lol or n0.lol

23
00:00:46,399 --> 00:00:49,280
um so let's get right into it because i

24
00:00:49,280 --> 00:00:50,000
don't have too

25
00:00:50,000 --> 00:00:52,000
much time a lot of content to fit into

26
00:00:52,000 --> 00:00:54,640
this uh your thing

27
00:00:54,640 --> 00:00:58,000
so reverse engineering on protocols

28
00:00:58,000 --> 00:01:00,399
this is kind of like the the staging bit

29
00:01:00,399 --> 00:01:02,160
for it so

30
00:01:02,160 --> 00:01:04,000
you know it's hard to sometimes

31
00:01:04,000 --> 00:01:05,280
understand why you would want to do

32
00:01:05,280 --> 00:01:06,799
something like this so

33
00:01:06,799 --> 00:01:08,880
basically has this ever happened to you

34
00:01:08,880 --> 00:01:09,920
peering into the void

35
00:01:09,920 --> 00:01:12,320
so if you're seeing any strange requests

36
00:01:12,320 --> 00:01:13,200
in your logs

37
00:01:13,200 --> 00:01:14,400
or you notice something it doesn't

38
00:01:14,400 --> 00:01:16,240
really look right in wireshark

39
00:01:16,240 --> 00:01:18,400
uh or you have some devices that are

40
00:01:18,400 --> 00:01:20,159
speaking in some strange language or

41
00:01:20,159 --> 00:01:21,840
some software talking to a server

42
00:01:21,840 --> 00:01:24,000
in a you know binary protocol maybe some

43
00:01:24,000 --> 00:01:25,280
malware even

44
00:01:25,280 --> 00:01:27,840
um you might search online just you know

45
00:01:27,840 --> 00:01:28,880
look up ports and

46
00:01:28,880 --> 00:01:31,040
and different elements of the message

47
00:01:31,040 --> 00:01:32,560
and you don't find anything

48
00:01:32,560 --> 00:01:33,840
or you might find something but it

49
00:01:33,840 --> 00:01:35,520
doesn't really seem to match up with

50
00:01:35,520 --> 00:01:36,799
what you're seeing

51
00:01:36,799 --> 00:01:38,840
and you start to feel a little bit

52
00:01:38,840 --> 00:01:40,240
unnerved um

53
00:01:40,240 --> 00:01:42,320
so a lot of people when they are come

54
00:01:42,320 --> 00:01:43,680
across the situation

55
00:01:43,680 --> 00:01:45,520
might feel like they can't really do

56
00:01:45,520 --> 00:01:46,640
anything about it and so they just kind

57
00:01:46,640 --> 00:01:47,360
of give up

58
00:01:47,360 --> 00:01:50,159
um or they don't really have time for it

59
00:01:50,159 --> 00:01:51,040
um

60
00:01:51,040 --> 00:01:53,520
but today after this talk hopefully you

61
00:01:53,520 --> 00:01:54,720
will be a bit more

62
00:01:54,720 --> 00:01:57,360
um apt to to actually want to go in and

63
00:01:57,360 --> 00:01:59,520
investigate these kind of protocols

64
00:01:59,520 --> 00:02:03,040
um so when you're looking at a protocol

65
00:02:03,040 --> 00:02:04,159
you gotta ask yourself like what are you

66
00:02:04,159 --> 00:02:05,280
looking at here

67
00:02:05,280 --> 00:02:07,759
so for me i do protocol reversing

68
00:02:07,759 --> 00:02:08,639
professionally

69
00:02:08,639 --> 00:02:12,560
and i hold on i um

70
00:02:12,560 --> 00:02:14,080
i had to do a lot of um sort of like

71
00:02:14,080 --> 00:02:16,000
research and just study into this field

72
00:02:16,000 --> 00:02:16,640
to kind of

73
00:02:16,640 --> 00:02:19,280
put it into something that is like i

74
00:02:19,280 --> 00:02:20,000
guess

75
00:02:20,000 --> 00:02:21,920
able to be shared with all other people

76
00:02:21,920 --> 00:02:24,400
as well do so i do a lot of things with

77
00:02:24,400 --> 00:02:26,800
with with classifying languages or

78
00:02:26,800 --> 00:02:28,480
protocols as languages and

79
00:02:28,480 --> 00:02:30,160
uh you know writing to sectors and

80
00:02:30,160 --> 00:02:31,760
things so kind of some of the things

81
00:02:31,760 --> 00:02:32,560
that i really

82
00:02:32,560 --> 00:02:34,959
like the the ground truth for it is

83
00:02:34,959 --> 00:02:36,640
really that like protocols are just like

84
00:02:36,640 --> 00:02:37,680
a language where

85
00:02:37,680 --> 00:02:39,840
they are meant to make sense to somebody

86
00:02:39,840 --> 00:02:41,599
so you might see like a big mess of you

87
00:02:41,599 --> 00:02:43,120
know binary characters and you might

88
00:02:43,120 --> 00:02:44,480
think like i don't know what this could

89
00:02:44,480 --> 00:02:45,599
possibly mean

90
00:02:45,599 --> 00:02:47,040
but there's going to be something

91
00:02:47,040 --> 00:02:48,720
somewhere that this is meant

92
00:02:48,720 --> 00:02:50,400
to make sense too it might only be meant

93
00:02:50,400 --> 00:02:52,000
to make sense to one person

94
00:02:52,000 --> 00:02:54,239
but still it's supposed to make sense to

95
00:02:54,239 --> 00:02:56,319
somebody to a computer

96
00:02:56,319 --> 00:02:58,800
um whatever so there are certain

97
00:02:58,800 --> 00:03:00,159
characteristics that are part of every

98
00:03:00,159 --> 00:03:00,720
language

99
00:03:00,720 --> 00:03:02,400
um and so like you know there's

100
00:03:02,400 --> 00:03:04,080
different things like verb order

101
00:03:04,080 --> 00:03:06,480
or like how how words are are

102
00:03:06,480 --> 00:03:08,159
constructed and things like that

103
00:03:08,159 --> 00:03:09,680
and so not every language has every

104
00:03:09,680 --> 00:03:10,800
characteristic but there's like a

105
00:03:10,800 --> 00:03:11,440
general

106
00:03:11,440 --> 00:03:12,959
sense of how things are going to be

107
00:03:12,959 --> 00:03:14,800
naturally designed and so

108
00:03:14,800 --> 00:03:16,879
being aware of them like really helps to

109
00:03:16,879 --> 00:03:18,080
just understand how

110
00:03:18,080 --> 00:03:20,959
something might be structured um and so

111
00:03:20,959 --> 00:03:22,400
archaeologists and linguists people who

112
00:03:22,400 --> 00:03:23,519
look up dead languages

113
00:03:23,519 --> 00:03:25,440
things like hieroglyphics you know they

114
00:03:25,440 --> 00:03:26,959
understood how languages are

115
00:03:26,959 --> 00:03:29,760
structured and so they're able to piece

116
00:03:29,760 --> 00:03:30,560
out

117
00:03:30,560 --> 00:03:32,640
things based on on different analysis

118
00:03:32,640 --> 00:03:33,599
techniques

119
00:03:33,599 --> 00:03:35,599
and uh existing language linguistic

120
00:03:35,599 --> 00:03:37,360
knowledge to be able to figure out how

121
00:03:37,360 --> 00:03:38,400
something would have been written or

122
00:03:38,400 --> 00:03:39,200
spoken

123
00:03:39,200 --> 00:03:41,200
even if it hadn't been anybody had used

124
00:03:41,200 --> 00:03:43,200
it in over a thousand years

125
00:03:43,200 --> 00:03:46,560
um and so with this whole thing with

126
00:03:46,560 --> 00:03:48,799
there's a lot to it and so it's really

127
00:03:48,799 --> 00:03:50,080
important early on when you're looking

128
00:03:50,080 --> 00:03:52,080
at a protocol to establish your goal

129
00:03:52,080 --> 00:03:53,360
so you gotta ask yourself like what are

130
00:03:53,360 --> 00:03:55,040
you looking for here so you might be

131
00:03:55,040 --> 00:03:56,640
just trying to get a basic understanding

132
00:03:56,640 --> 00:03:58,480
of traffic so you can classify it

133
00:03:58,480 --> 00:04:00,959
uh maybe even put up a firewall rule for

134
00:04:00,959 --> 00:04:03,120
you know detecting something or

135
00:04:03,120 --> 00:04:05,840
um you know some sort of like a network

136
00:04:05,840 --> 00:04:06,159
uh

137
00:04:06,159 --> 00:04:08,560
monitoring alert um you can also try to

138
00:04:08,560 --> 00:04:10,000
decode the traffic into something

139
00:04:10,000 --> 00:04:11,200
meaningful

140
00:04:11,200 --> 00:04:12,879
you might be trying to expand the

141
00:04:12,879 --> 00:04:14,640
existing knowledge of a

142
00:04:14,640 --> 00:04:16,238
previously unknown or proprietary

143
00:04:16,238 --> 00:04:18,238
protocol or you might even be looking to

144
00:04:18,238 --> 00:04:19,680
find loans in the protocol which is

145
00:04:19,680 --> 00:04:21,839
always interesting too

146
00:04:21,839 --> 00:04:23,680
so the first and foremost thing you got

147
00:04:23,680 --> 00:04:26,000
to do with this is collect data

148
00:04:26,000 --> 00:04:27,680
there's some tools for collecting data

149
00:04:27,680 --> 00:04:29,520
well clicking data would be through tcp

150
00:04:29,520 --> 00:04:31,040
dump or wireshark there's other tools

151
00:04:31,040 --> 00:04:32,240
that you can use as well

152
00:04:32,240 --> 00:04:34,160
um those are my two main ones and then

153
00:04:34,160 --> 00:04:35,680
you can use network miner to also

154
00:04:35,680 --> 00:04:37,040
enumerate data from

155
00:04:37,040 --> 00:04:39,360
uh from wireshark or other peak apps um

156
00:04:39,360 --> 00:04:40,800
there's a lot of tools in this so this

157
00:04:40,800 --> 00:04:42,880
is like just my basic go-to's here

158
00:04:42,880 --> 00:04:44,720
but the point is to collect and isolate

159
00:04:44,720 --> 00:04:46,160
the traffic that you're trying to find

160
00:04:46,160 --> 00:04:48,479
um there are more information about um

161
00:04:48,479 --> 00:04:50,479
you want to find where the weirdness is

162
00:04:50,479 --> 00:04:53,199
in your in your pcaps and uh really just

163
00:04:53,199 --> 00:04:55,040
hone into it and look at it

164
00:04:55,040 --> 00:04:56,560
um you want to get a really detailed

165
00:04:56,560 --> 00:04:58,479
view of uh you know sessions

166
00:04:58,479 --> 00:05:00,240
ports protocols things like that just so

167
00:05:00,240 --> 00:05:01,440
you can have like a baseline

168
00:05:01,440 --> 00:05:02,400
understanding

169
00:05:02,400 --> 00:05:03,919
um i usually when i'm doing something

170
00:05:03,919 --> 00:05:05,759
like this i'll i'll create a capture

171
00:05:05,759 --> 00:05:07,440
filter on something

172
00:05:07,440 --> 00:05:09,919
um after i notice you know something i

173
00:05:09,919 --> 00:05:11,360
could try to like find out like

174
00:05:11,360 --> 00:05:13,680
okay what else is communicating on this

175
00:05:13,680 --> 00:05:15,440
port or has this value here

176
00:05:15,440 --> 00:05:17,840
you try to like get a lot of data and

177
00:05:17,840 --> 00:05:20,160
try to make it as specific as possible

178
00:05:20,160 --> 00:05:22,560
um and so a lot of this is like a sudoku

179
00:05:22,560 --> 00:05:24,320
puzzle i usually compare it to where you

180
00:05:24,320 --> 00:05:25,759
get some of the data some of the

181
00:05:25,759 --> 00:05:27,120
information but you have to like

182
00:05:27,120 --> 00:05:30,240
lay it out and you have to put um

183
00:05:30,240 --> 00:05:31,759
you know the need to fill in the blanks

184
00:05:31,759 --> 00:05:34,080
basically as you're you're uh

185
00:05:34,080 --> 00:05:37,199
going through the packets here

186
00:05:37,199 --> 00:05:39,680
so hold on

187
00:05:40,320 --> 00:05:42,320
so when it comes to as i said before

188
00:05:42,320 --> 00:05:43,440
with like the the different

189
00:05:43,440 --> 00:05:45,919
patterns and constructs in in language

190
00:05:45,919 --> 00:05:47,600
there's a lot of design patterns that

191
00:05:47,600 --> 00:05:48,639
are going to be in

192
00:05:48,639 --> 00:05:50,479
protocols and so people who design

193
00:05:50,479 --> 00:05:52,479
protocols they typically

194
00:05:52,479 --> 00:05:55,680
follow a certain you know design things

195
00:05:55,680 --> 00:05:56,080
that

196
00:05:56,080 --> 00:05:58,880
are going to be helpful not only from a

197
00:05:58,880 --> 00:05:59,520
um

198
00:05:59,520 --> 00:06:01,039
just like a general sensibility

199
00:06:01,039 --> 00:06:03,440
perspective but also for the medium like

200
00:06:03,440 --> 00:06:05,120
if they only have a certain

201
00:06:05,120 --> 00:06:06,720
you know transfer rate they might want

202
00:06:06,720 --> 00:06:09,120
to use smaller data sizes and smaller

203
00:06:09,120 --> 00:06:10,160
packet chunks

204
00:06:10,160 --> 00:06:11,360
or if they have something that might be

205
00:06:11,360 --> 00:06:13,600
noisy they might want to have a bit more

206
00:06:13,600 --> 00:06:15,440
um like error correction and things like

207
00:06:15,440 --> 00:06:17,280
that so there's a lot of paradigms

208
00:06:17,280 --> 00:06:19,759
the most common one you usually see is

209
00:06:19,759 --> 00:06:20,880
around like a

210
00:06:20,880 --> 00:06:23,440
tag length and value so like a tag would

211
00:06:23,440 --> 00:06:24,800
be something like say

212
00:06:24,800 --> 00:06:27,440
a message type or an auth code the

213
00:06:27,440 --> 00:06:29,280
length is the length of the overall

214
00:06:29,280 --> 00:06:29,759
packet

215
00:06:29,759 --> 00:06:31,840
or the message itself and then the value

216
00:06:31,840 --> 00:06:32,960
is the actual data you're going to

217
00:06:32,960 --> 00:06:34,000
transfer

218
00:06:34,000 --> 00:06:36,639
um usually a lot of pack a lot of

219
00:06:36,639 --> 00:06:38,080
protocols will have a header of some

220
00:06:38,080 --> 00:06:38,960
sort

221
00:06:38,960 --> 00:06:40,639
they can contain things like links or

222
00:06:40,639 --> 00:06:43,280
checksums or or op codes

223
00:06:43,280 --> 00:06:47,120
routing info you'll oftentimes find too

224
00:06:47,120 --> 00:06:48,880
delimiters and padding the same thing

225
00:06:48,880 --> 00:06:50,720
reason we have punctuation um so we can

226
00:06:50,720 --> 00:06:51,440
add

227
00:06:51,440 --> 00:06:53,120
you know where where certain thoughts

228
00:06:53,120 --> 00:06:55,120
and ideas begin and end

229
00:06:55,120 --> 00:06:57,520
um we also have support for different uh

230
00:06:57,520 --> 00:06:59,599
data types and fields

231
00:06:59,599 --> 00:07:01,440
there might be ranges within a value

232
00:07:01,440 --> 00:07:04,400
like um like say like a one byte might

233
00:07:04,400 --> 00:07:05,360
only be

234
00:07:05,360 --> 00:07:07,039
able to be expressed between you know

235
00:07:07,039 --> 00:07:09,440
zero and zero x ten

236
00:07:09,440 --> 00:07:11,599
um there's also encapsulation and

237
00:07:11,599 --> 00:07:13,440
wrapper protocols that you might have to

238
00:07:13,440 --> 00:07:16,000
you know contend to and use as well and

239
00:07:16,000 --> 00:07:16,800
have a

240
00:07:16,800 --> 00:07:19,280
have some other sub protocols that deal

241
00:07:19,280 --> 00:07:20,800
with that kind of stuff

242
00:07:20,800 --> 00:07:22,800
um and there's also just indian-ness too

243
00:07:22,800 --> 00:07:24,639
there's a big ndm which is like network

244
00:07:24,639 --> 00:07:26,000
byte order which is like you'll usually

245
00:07:26,000 --> 00:07:26,880
see that with

246
00:07:26,880 --> 00:07:28,319
network-based applications things will

247
00:07:28,319 --> 00:07:30,639
be big-indian indian or little indian

248
00:07:30,639 --> 00:07:31,840
and they can be mixed within the same

249
00:07:31,840 --> 00:07:34,240
message it gets really confusing

250
00:07:34,240 --> 00:07:36,479
um so the main thing i guess i want to

251
00:07:36,479 --> 00:07:37,680
talk about these are like the

252
00:07:37,680 --> 00:07:40,160
the lexical pieces that we'll we'll pull

253
00:07:40,160 --> 00:07:40,880
together

254
00:07:40,880 --> 00:07:44,000
for the demo in a second um and so when

255
00:07:44,000 --> 00:07:45,120
looking at a protocol it's really

256
00:07:45,120 --> 00:07:46,319
important to keep like the logical

257
00:07:46,319 --> 00:07:47,680
elements in mind because they can help

258
00:07:47,680 --> 00:07:48,000
you

259
00:07:48,000 --> 00:07:49,039
kind of make sense of what you're

260
00:07:49,039 --> 00:07:51,039
looking at here and so

261
00:07:51,039 --> 00:07:52,800
we have like data types and sizes so

262
00:07:52,800 --> 00:07:54,560
there's like the size of

263
00:07:54,560 --> 00:07:57,120
fields in a given packet um like

264
00:07:57,120 --> 00:07:58,639
typically you'll see things are like one

265
00:07:58,639 --> 00:07:59,759
or two

266
00:07:59,759 --> 00:08:02,240
or four or eight bytes in length um

267
00:08:02,240 --> 00:08:02,800
there's like

268
00:08:02,800 --> 00:08:04,319
other variable length ones too but those

269
00:08:04,319 --> 00:08:07,199
are like standardized block sizes

270
00:08:07,199 --> 00:08:10,639
there are also variable um the variable

271
00:08:10,639 --> 00:08:12,479
stuff has uh the links stored before it

272
00:08:12,479 --> 00:08:13,039
usually

273
00:08:13,039 --> 00:08:14,960
um like in the tad link value paradigm

274
00:08:14,960 --> 00:08:16,319
there um

275
00:08:16,319 --> 00:08:17,680
you'll find like sequence numbers and

276
00:08:17,680 --> 00:08:19,520
message ids and those are used to keep

277
00:08:19,520 --> 00:08:20,319
track of the

278
00:08:20,319 --> 00:08:23,840
order of messages um you know session

279
00:08:23,840 --> 00:08:25,520
ids are used to keep track of individual

280
00:08:25,520 --> 00:08:26,000
sessions

281
00:08:26,000 --> 00:08:28,080
so you can usually look for the same

282
00:08:28,080 --> 00:08:30,319
value only ever transmitted by

283
00:08:30,319 --> 00:08:32,159
one conversation or one host as the

284
00:08:32,159 --> 00:08:34,399
session id um there's authentication

285
00:08:34,399 --> 00:08:36,000
data which is any credentials used to

286
00:08:36,000 --> 00:08:37,599
authenticate to the host

287
00:08:37,599 --> 00:08:41,200
um message types are um

288
00:08:41,200 --> 00:08:43,039
anything that uh is a specific value

289
00:08:43,039 --> 00:08:44,720
associated with the type of data that's

290
00:08:44,720 --> 00:08:46,080
within a message

291
00:08:46,080 --> 00:08:48,720
um function codes are commands that are

292
00:08:48,720 --> 00:08:50,160
given to a host

293
00:08:50,160 --> 00:08:52,080
um they might specify like some

294
00:08:52,080 --> 00:08:54,160
operation to be done in the future

295
00:08:54,160 --> 00:08:55,519
they can be anything from a single byte

296
00:08:55,519 --> 00:08:57,760
to like a full string or a series of

297
00:08:57,760 --> 00:08:59,360
strings with parameters

298
00:08:59,360 --> 00:09:01,519
um there's checksums that are used to

299
00:09:01,519 --> 00:09:04,000
verify the integrity of data

300
00:09:04,000 --> 00:09:05,360
there can be encryption which is pretty

301
00:09:05,360 --> 00:09:07,360
hard to track sometimes

302
00:09:07,360 --> 00:09:09,200
you can kind of look at different ways

303
00:09:09,200 --> 00:09:11,440
of verifying that something is actually

304
00:09:11,440 --> 00:09:12,560
encrypted or not

305
00:09:12,560 --> 00:09:14,640
um but that's just something to be aware

306
00:09:14,640 --> 00:09:15,680
of in this too

307
00:09:15,680 --> 00:09:18,240
um unicast multicast like anything

308
00:09:18,240 --> 00:09:18,880
that's like

309
00:09:18,880 --> 00:09:20,240
some messages might be different if

310
00:09:20,240 --> 00:09:22,560
they're sent from one

311
00:09:22,560 --> 00:09:25,680
device to another versus um sent to the

312
00:09:25,680 --> 00:09:26,160
whole

313
00:09:26,160 --> 00:09:29,120
network of messages there's chunked data

314
00:09:29,120 --> 00:09:31,040
and streams which are just for like file

315
00:09:31,040 --> 00:09:32,800
uploads and real-time data

316
00:09:32,800 --> 00:09:34,880
um examining how that stuff is handled

317
00:09:34,880 --> 00:09:36,240
is really useful too you might be able

318
00:09:36,240 --> 00:09:36,480
to

319
00:09:36,480 --> 00:09:39,920
extract entire files from a packet um

320
00:09:39,920 --> 00:09:41,600
so following sessions and wire strike is

321
00:09:41,600 --> 00:09:44,080
good um flags can be some sort of like

322
00:09:44,080 --> 00:09:45,200
fluctuating values

323
00:09:45,200 --> 00:09:47,120
like a single bit or more that are

324
00:09:47,120 --> 00:09:48,640
within a specified like byte

325
00:09:48,640 --> 00:09:50,480
so usually flags will be in like a one

326
00:09:50,480 --> 00:09:51,920
or two byte kind of thing and

327
00:09:51,920 --> 00:09:53,920
you'll see like a boolean like either

328
00:09:53,920 --> 00:09:55,120
like one or zero

329
00:09:55,120 --> 00:09:57,519
on one bit um and then there's also

330
00:09:57,519 --> 00:09:58,959
padding as well which we said before

331
00:09:58,959 --> 00:10:01,040
which can help to like space out

332
00:10:01,040 --> 00:10:04,000
certain uh data types and data fields

333
00:10:04,000 --> 00:10:05,680
and then record counts are the

334
00:10:05,680 --> 00:10:08,720
number of records in in a message and

335
00:10:08,720 --> 00:10:11,440
one second

336
00:10:17,120 --> 00:10:19,440
perfect okay so the example here i have

337
00:10:19,440 --> 00:10:21,440
just a really quick one is tls

338
00:10:21,440 --> 00:10:23,200
um this is my favorite write-up by the

339
00:10:23,200 --> 00:10:25,279
way of any write-up it's just very well

340
00:10:25,279 --> 00:10:25,839
done

341
00:10:25,839 --> 00:10:28,640
it's a traffic analysis of an ssl tls

342
00:10:28,640 --> 00:10:29,519
session

343
00:10:29,519 --> 00:10:33,519
um real simple over here um

344
00:10:33,519 --> 00:10:35,519
this is like the protocol format so

345
00:10:35,519 --> 00:10:36,800
there's like these

346
00:10:36,800 --> 00:10:39,200
record type values and then the hex for

347
00:10:39,200 --> 00:10:39,839
it

348
00:10:39,839 --> 00:10:41,760
um there's versions and all this sort of

349
00:10:41,760 --> 00:10:43,440
stuff is just transmitted within this

350
00:10:43,440 --> 00:10:47,040
five byte um you know binary

351
00:10:47,040 --> 00:10:50,160
chunk here um and then within there

352
00:10:50,160 --> 00:10:52,640
this is encapsulated this alert layer

353
00:10:52,640 --> 00:10:54,160
which is just two bytes

354
00:10:54,160 --> 00:10:57,200
that explains um you know the severity

355
00:10:57,200 --> 00:10:58,079
of an alert

356
00:10:58,079 --> 00:11:00,079
and then the alert description so here

357
00:11:00,079 --> 00:11:01,200
this is just like a record

358
00:11:01,200 --> 00:11:03,440
um or a uh an example here with the

359
00:11:03,440 --> 00:11:04,880
record and alert layer

360
00:11:04,880 --> 00:11:07,600
um but it's just saying like a warning

361
00:11:07,600 --> 00:11:09,519
that the certificate is

362
00:11:09,519 --> 00:11:12,160
is bad or it's uh yeah it's a bad

363
00:11:12,160 --> 00:11:13,120
certificate

364
00:11:13,120 --> 00:11:14,880
and um especially funny because this

365
00:11:14,880 --> 00:11:16,480
fourth bit website doesn't have an ssl

366
00:11:16,480 --> 00:11:18,079
search so you kind of get this message

367
00:11:18,079 --> 00:11:18,880
too

368
00:11:18,880 --> 00:11:21,680
um but this translates directly to

369
00:11:21,680 --> 00:11:23,680
something like this where you have uh

370
00:11:23,680 --> 00:11:25,760
you know you see the cert name invalid

371
00:11:25,760 --> 00:11:27,440
right just a bad cert

372
00:11:27,440 --> 00:11:28,959
but this sort of thing here you can just

373
00:11:28,959 --> 00:11:30,880
read through and read the spec

374
00:11:30,880 --> 00:11:33,680
and see that there is uh you know the

375
00:11:33,680 --> 00:11:34,399
hex

376
00:11:34,399 --> 00:11:38,880
value for um what's it called

377
00:11:41,120 --> 00:11:42,800
hold on one second my computer is really

378
00:11:42,800 --> 00:11:45,760
being really weird hold on

379
00:11:49,360 --> 00:11:52,000
let me start with that um so yeah you

380
00:11:52,000 --> 00:11:53,200
can see this uh

381
00:11:53,200 --> 00:11:56,560
the hex message here is is in this

382
00:11:56,560 --> 00:11:58,079
lookup table here and this is within the

383
00:11:58,079 --> 00:11:59,360
spec itself

384
00:11:59,360 --> 00:12:00,720
um so not everything's going to have a

385
00:12:00,720 --> 00:12:02,480
spec but this is just kind of like how

386
00:12:02,480 --> 00:12:03,760
these sort of things that i had

387
00:12:03,760 --> 00:12:05,839
explained before kind of go

388
00:12:05,839 --> 00:12:08,079
um and are actually implemented there's

389
00:12:08,079 --> 00:12:09,440
like a record type

390
00:12:09,440 --> 00:12:10,800
and there's like the links and the

391
00:12:10,800 --> 00:12:12,720
values and things like that

392
00:12:12,720 --> 00:12:15,839
um and so it's really important to

393
00:12:15,839 --> 00:12:16,800
remember that there's just because

394
00:12:16,800 --> 00:12:18,160
something has a spec doesn't mean that

395
00:12:18,160 --> 00:12:20,160
the implementations actually follow it

396
00:12:20,160 --> 00:12:21,680
um there's a really big battle between

397
00:12:21,680 --> 00:12:23,600
like the protocol specs the hardware and

398
00:12:23,600 --> 00:12:25,120
software implementations and the type of

399
00:12:25,120 --> 00:12:26,560
traffic you actually see

400
00:12:26,560 --> 00:12:28,160
and this goes whether or not it's a

401
00:12:28,160 --> 00:12:29,839
documented spec with an rfc

402
00:12:29,839 --> 00:12:32,079
or it's a proprietary protocol there

403
00:12:32,079 --> 00:12:32,880
could still be

404
00:12:32,880 --> 00:12:34,880
errors in things so not everything can

405
00:12:34,880 --> 00:12:36,079
be really set in stone

406
00:12:36,079 --> 00:12:37,120
and that's why it's really important for

407
00:12:37,120 --> 00:12:39,920
you as a reverse engineer to look at the

408
00:12:39,920 --> 00:12:41,360
way that things are actually happening

409
00:12:41,360 --> 00:12:43,600
in the wire um

410
00:12:43,600 --> 00:12:45,200
so here's some simple re techniques i'm

411
00:12:45,200 --> 00:12:46,639
not going to go over them but you can do

412
00:12:46,639 --> 00:12:48,560
things like traffic manipulation

413
00:12:48,560 --> 00:12:51,120
like on the wire protocol fuzzing which

414
00:12:51,120 --> 00:12:53,040
is a lot of fun and then you can also re

415
00:12:53,040 --> 00:12:54,000
like the software

416
00:12:54,000 --> 00:12:56,160
the drivers or the hardware to figure

417
00:12:56,160 --> 00:12:58,560
out how protocol stacks are implemented

418
00:12:58,560 --> 00:13:01,440
um by various components of uh the speak

419
00:13:01,440 --> 00:13:01,760
um

420
00:13:01,760 --> 00:13:04,000
the protocol and so the thing we're

421
00:13:04,000 --> 00:13:05,600
gonna focus on for this demo here is

422
00:13:05,600 --> 00:13:06,959
analysis technique so

423
00:13:06,959 --> 00:13:08,959
there's really basic stuff um to just

424
00:13:08,959 --> 00:13:10,720
now and analyze like the the different

425
00:13:10,720 --> 00:13:12,240
components of a protocol

426
00:13:12,240 --> 00:13:13,760
and so we have things like frequency

427
00:13:13,760 --> 00:13:15,519
analysis which is how often does a value

428
00:13:15,519 --> 00:13:17,519
appear at a specific location

429
00:13:17,519 --> 00:13:19,519
um we also have length analysis which is

430
00:13:19,519 --> 00:13:20,800
just like how long are the different

431
00:13:20,800 --> 00:13:21,760
messages

432
00:13:21,760 --> 00:13:24,079
and um you know different sizes and

433
00:13:24,079 --> 00:13:25,120
things like that

434
00:13:25,120 --> 00:13:26,320
and then the my favorite one is

435
00:13:26,320 --> 00:13:28,000
differential analysis which kind of uses

436
00:13:28,000 --> 00:13:28,880
both of these two

437
00:13:28,880 --> 00:13:30,079
which are what are the specific

438
00:13:30,079 --> 00:13:32,000
differences between similar looking

439
00:13:32,000 --> 00:13:33,200
messages

440
00:13:33,200 --> 00:13:36,880
so we'll do this demo here with pdiff um

441
00:13:36,880 --> 00:13:41,199
and one second and just pull it up here

442
00:13:41,680 --> 00:13:45,440
okay so oh forgot so pdiff

443
00:13:45,440 --> 00:13:48,160
is a tool that i wrote earlier this year

444
00:13:48,160 --> 00:13:50,240
it's just a binary protocol differ

445
00:13:50,240 --> 00:13:52,160
and so what this does is it just helps

446
00:13:52,160 --> 00:13:54,320
with the differential analysis

447
00:13:54,320 --> 00:13:58,279
which um i can demo but it's it's uh

448
00:13:58,279 --> 00:14:00,160
github.compdiff

449
00:14:00,160 --> 00:14:02,800
um and so if we're going to be doing

450
00:14:02,800 --> 00:14:03,600
this let me

451
00:14:03,600 --> 00:14:07,199
grab my demo one-liners um

452
00:14:07,199 --> 00:14:10,240
well first we can take a look here at um

453
00:14:10,240 --> 00:14:11,760
at this peak app and then we'll use pdf

454
00:14:11,760 --> 00:14:13,920
for sorry about that um so this here is

455
00:14:13,920 --> 00:14:14,720
a protocol

456
00:14:14,720 --> 00:14:17,680
um that's a stock ticker protocol i

457
00:14:17,680 --> 00:14:19,199
think i don't really know

458
00:14:19,199 --> 00:14:21,360
um but i found this peak app randomly

459
00:14:21,360 --> 00:14:22,880
and it uh

460
00:14:22,880 --> 00:14:27,199
it has just random fields in here

461
00:14:28,639 --> 00:14:30,959
like my wireshark can't dissect it but i

462
00:14:30,959 --> 00:14:32,720
know that there's data here

463
00:14:32,720 --> 00:14:36,480
and so let me just

464
00:14:36,480 --> 00:14:38,880
move this over here so if we're going

465
00:14:38,880 --> 00:14:40,800
through

466
00:14:40,800 --> 00:14:43,120
um when you're looking at like a a p cap

467
00:14:43,120 --> 00:14:44,079
one of the first things that i usually

468
00:14:44,079 --> 00:14:45,040
try to do

469
00:14:45,040 --> 00:14:46,959
is just try to see like who's talking to

470
00:14:46,959 --> 00:14:49,279
who and so we see that there's a source

471
00:14:49,279 --> 00:14:51,839
and the destination are actually the

472
00:14:51,839 --> 00:14:52,959
same it looks like it's just like a

473
00:14:52,959 --> 00:14:54,800
one-way udp session

474
00:14:54,800 --> 00:14:56,880
um and we see things like the links here

475
00:14:56,880 --> 00:14:58,079
like length 58

476
00:14:58,079 --> 00:15:01,360
41 45 um

477
00:15:01,360 --> 00:15:04,800
the different sizes of messages um

478
00:15:04,800 --> 00:15:06,079
what i typically try to do is just

479
00:15:06,079 --> 00:15:07,680
scroll down and try to look at the dump

480
00:15:07,680 --> 00:15:08,160
here

481
00:15:08,160 --> 00:15:10,320
so we notice the data is right here you

482
00:15:10,320 --> 00:15:12,560
just scroll down and this kind of gives

483
00:15:12,560 --> 00:15:14,560
you like a better idea of like what

484
00:15:14,560 --> 00:15:17,600
is actually um

485
00:15:17,600 --> 00:15:18,480
what kind of data you're actually

486
00:15:18,480 --> 00:15:21,199
looking at here and so the payload here

487
00:15:21,199 --> 00:15:22,399
if you look if you notice

488
00:15:22,399 --> 00:15:26,000
the first like 16 bytes

489
00:15:26,000 --> 00:15:28,320
seem to be almost exactly the same that

490
00:15:28,320 --> 00:15:30,480
30 30 30 30

491
00:15:30,480 --> 00:15:33,600
and then all the way down to 1cde

492
00:15:33,600 --> 00:15:35,680
just all seem to be exactly the same and

493
00:15:35,680 --> 00:15:37,040
then

494
00:15:37,040 --> 00:15:40,639
the these bytes right here

495
00:15:40,639 --> 00:15:43,759
um like this can't really select it

496
00:15:43,759 --> 00:15:46,560
um these two though are um they seem to

497
00:15:46,560 --> 00:15:48,639
be incrementing in some way so it's like

498
00:15:48,639 --> 00:15:52,720
3 db 3dc 3dd etc

499
00:15:52,720 --> 00:15:54,079
um and then there's a lot of stuff that

500
00:15:54,079 --> 00:15:55,440
stays the same as well like all these

501
00:15:55,440 --> 00:15:56,959
zeros and stuff

502
00:15:56,959 --> 00:15:59,839
and so what's tough about this is that

503
00:15:59,839 --> 00:16:00,399
like

504
00:16:00,399 --> 00:16:01,519
you know when you look at something like

505
00:16:01,519 --> 00:16:03,120
this as a like a beginner or somebody

506
00:16:03,120 --> 00:16:04,160
who's just getting into it

507
00:16:04,160 --> 00:16:05,519
it can look just overwhelming because it

508
00:16:05,519 --> 00:16:06,720
doesn't really like tell you much

509
00:16:06,720 --> 00:16:08,560
there's just like some random

510
00:16:08,560 --> 00:16:10,320
like ascii and then there's a bunch of

511
00:16:10,320 --> 00:16:12,160
just bytes right

512
00:16:12,160 --> 00:16:15,199
um so for a tool like pdiff what you can

513
00:16:15,199 --> 00:16:15,680
do

514
00:16:15,680 --> 00:16:20,079
is let me just clear this real quick um

515
00:16:20,079 --> 00:16:22,720
you can run this on this pcap and what

516
00:16:22,720 --> 00:16:24,000
this will do

517
00:16:24,000 --> 00:16:27,040
is it will take the it'll

518
00:16:27,040 --> 00:16:29,279
basically count all the bytes in this

519
00:16:29,279 --> 00:16:30,320
data portion

520
00:16:30,320 --> 00:16:32,240
so if you know how we saw that 30 30 30

521
00:16:32,240 --> 00:16:34,240
that's the same

522
00:16:34,240 --> 00:16:36,880
if you look at all 62 bytes in this

523
00:16:36,880 --> 00:16:37,680
packet

524
00:16:37,680 --> 00:16:40,800
um byte 0 is always 30 and it's actually

525
00:16:40,800 --> 00:16:42,480
always the same for those first

526
00:16:42,480 --> 00:16:45,279
16 bytes here um which is good because

527
00:16:45,279 --> 00:16:46,720
we just are able to determine that right

528
00:16:46,720 --> 00:16:48,079
away that's what we were able to see

529
00:16:48,079 --> 00:16:49,360
with our eyes but

530
00:16:49,360 --> 00:16:51,199
sometimes um for really big peak hats

531
00:16:51,199 --> 00:16:52,399
especially it's hard to

532
00:16:52,399 --> 00:16:53,600
you know go through and scroll through

533
00:16:53,600 --> 00:16:54,880
the entire thing and figure out what

534
00:16:54,880 --> 00:16:55,920
it's saying

535
00:16:55,920 --> 00:16:58,160
um but so we started to see some

536
00:16:58,160 --> 00:16:59,519
interesting stuff here we saw that stuff

537
00:16:59,519 --> 00:17:00,800
that was incrementing

538
00:17:00,800 --> 00:17:02,959
and we see how they're in order here

539
00:17:02,959 --> 00:17:04,000
these things that are in

540
00:17:04,000 --> 00:17:06,319
order are probably like a sequence

541
00:17:06,319 --> 00:17:07,039
number or

542
00:17:07,039 --> 00:17:09,039
a message id of some sort that counts

543
00:17:09,039 --> 00:17:10,799
because if you see here

544
00:17:10,799 --> 00:17:13,280
this one will order it by with the first

545
00:17:13,280 --> 00:17:14,640
occurrence of it

546
00:17:14,640 --> 00:17:16,079
and then it'll just kind of go in

547
00:17:16,079 --> 00:17:17,760
alphabetical order down so

548
00:17:17,760 --> 00:17:20,720
we're seeing here that there is a um you

549
00:17:20,720 --> 00:17:22,000
know what appears to be a sequence

550
00:17:22,000 --> 00:17:23,599
number of some sort

551
00:17:23,599 --> 00:17:25,760
um and what i do know because i

552
00:17:25,760 --> 00:17:27,679
truncated this p cap but this actually

553
00:17:27,679 --> 00:17:29,280
this also increments as well so we know

554
00:17:29,280 --> 00:17:31,919
that there's at least a two byte

555
00:17:31,919 --> 00:17:34,720
sequence id here let me see other stuff

556
00:17:34,720 --> 00:17:38,160
there's padding and things like that

557
00:17:38,480 --> 00:17:42,400
but then hold on one second

558
00:17:42,400 --> 00:17:44,880
we can also go through and look at the

559
00:17:44,880 --> 00:17:46,080
other things that are staying the same

560
00:17:46,080 --> 00:17:47,919
like right here there's like a

561
00:17:47,919 --> 00:17:50,400
zero so we know there's always a zero

562
00:17:50,400 --> 00:17:51,360
here

563
00:17:51,360 --> 00:17:54,559
and then there's either a zero or a two

564
00:17:54,559 --> 00:17:56,640
um this is always the same here as well

565
00:17:56,640 --> 00:17:58,080
there's 37

566
00:17:58,080 --> 00:18:00,240
and then there's for some reason at 25

567
00:18:00,240 --> 00:18:01,360
and 24

568
00:18:01,360 --> 00:18:04,720
as well um and so you can start to see

569
00:18:04,720 --> 00:18:07,280
you know you're going through this um

570
00:18:07,280 --> 00:18:08,080
that there are

571
00:18:08,080 --> 00:18:09,440
these certain patterns and and

572
00:18:09,440 --> 00:18:11,360
delimiters and things like that um we

573
00:18:11,360 --> 00:18:13,360
have like a zero that's a delimiter here

574
00:18:13,360 --> 00:18:16,640
um but it also a zero

575
00:18:16,640 --> 00:18:19,039
next to like one number like this um

576
00:18:19,039 --> 00:18:20,640
could also mean that the field

577
00:18:20,640 --> 00:18:23,280
length is like two bytes or something

578
00:18:23,280 --> 00:18:24,080
like that

579
00:18:24,080 --> 00:18:27,520
um we have stuff like so

580
00:18:27,520 --> 00:18:29,200
kind of go through what i already know

581
00:18:29,200 --> 00:18:31,120
about this and having enumerated this

582
00:18:31,120 --> 00:18:32,559
is that we have stuff like this here

583
00:18:32,559 --> 00:18:34,000
where there's always a zero and there's

584
00:18:34,000 --> 00:18:34,720
like a one

585
00:18:34,720 --> 00:18:43,840
or a two and so if we look at say

586
00:18:46,080 --> 00:18:48,160
you can do a uh a wireshark thing for

587
00:18:48,160 --> 00:18:49,600
whatever here has

588
00:18:49,600 --> 00:18:53,360
two and we notice that there are um

589
00:18:53,360 --> 00:18:55,280
you know there's a two here and that's

590
00:18:55,280 --> 00:18:56,640
followed by 13

591
00:18:56,640 --> 00:18:58,640
right and so something that i try to

592
00:18:58,640 --> 00:19:00,240
look for in these kind of packets is

593
00:19:00,240 --> 00:19:01,600
what is a

594
00:19:01,600 --> 00:19:05,280
uh uh what's it called um

595
00:19:05,280 --> 00:19:07,280
like a length of the rest of the packet

596
00:19:07,280 --> 00:19:11,200
and so that sort of stuff here is um

597
00:19:11,200 --> 00:19:14,160
the length of the rest of the packet is

598
00:19:14,160 --> 00:19:14,799
at this

599
00:19:14,799 --> 00:19:17,440
field normally so if we go to like say

600
00:19:17,440 --> 00:19:18,559
right here

601
00:19:18,559 --> 00:19:21,600
there's zero one and then zero two four

602
00:19:21,600 --> 00:19:25,120
um two four you notice there's

603
00:19:25,120 --> 00:19:28,160
this is like one zero

604
00:19:28,160 --> 00:19:29,600
and then this is also another one zero

605
00:19:29,600 --> 00:19:31,440
so this is twenty and then four so

606
00:19:31,440 --> 00:19:34,559
in hex is two four um it's like tricky

607
00:19:34,559 --> 00:19:36,240
to eyeball but you kind of just get the

608
00:19:36,240 --> 00:19:38,400
hang of it as you look through here and

609
00:19:38,400 --> 00:19:38,960
see

610
00:19:38,960 --> 00:19:40,640
you know certain consistent values and

611
00:19:40,640 --> 00:19:42,160
then you can kind of like calculate

612
00:19:42,160 --> 00:19:44,240
you know the rest of the packet length

613
00:19:44,240 --> 00:19:45,280
and things like that

614
00:19:45,280 --> 00:19:46,880
are always stuff to look out for and i

615
00:19:46,880 --> 00:19:48,160
realized that i'm already almost at

616
00:19:48,160 --> 00:19:49,360
halfway through this thing

617
00:19:49,360 --> 00:19:52,799
um so um

618
00:19:52,799 --> 00:19:55,520
so all right so doing all this stuff

619
00:19:55,520 --> 00:19:55,840
here

620
00:19:55,840 --> 00:19:57,679
going through is a really good first

621
00:19:57,679 --> 00:19:59,280
step for just establishing the baseline

622
00:19:59,280 --> 00:20:00,320
of stuff here

623
00:20:00,320 --> 00:20:03,600
we can see in the

624
00:20:03,600 --> 00:20:05,360
peak app we know that there's like a

625
00:20:05,360 --> 00:20:06,960
this sort of long

626
00:20:06,960 --> 00:20:08,799
session id or something right up here

627
00:20:08,799 --> 00:20:10,960
with zero zero seven

628
00:20:10,960 --> 00:20:13,840
two or five two five b um that's like

629
00:20:13,840 --> 00:20:14,880
the

630
00:20:14,880 --> 00:20:17,120
session or you know token or something

631
00:20:17,120 --> 00:20:18,080
that might be

632
00:20:18,080 --> 00:20:19,679
transmitted we know that's always

633
00:20:19,679 --> 00:20:21,280
consistent we know there's consistent

634
00:20:21,280 --> 00:20:22,720
zeros and things like that

635
00:20:22,720 --> 00:20:25,919
i mean you can use that to

636
00:20:25,919 --> 00:20:29,120
um establish

637
00:20:29,120 --> 00:20:32,000
like a very baseline thing with the

638
00:20:32,000 --> 00:20:33,360
protocol spec

639
00:20:33,360 --> 00:20:36,240
so we can see like session id we know

640
00:20:36,240 --> 00:20:37,600
that some things are unknown but they're

641
00:20:37,600 --> 00:20:38,799
always the same

642
00:20:38,799 --> 00:20:39,679
and when you're trying to go through

643
00:20:39,679 --> 00:20:41,440
this you kind of want to like just space

644
00:20:41,440 --> 00:20:41,919
out

645
00:20:41,919 --> 00:20:43,200
you know different fields that you

646
00:20:43,200 --> 00:20:45,280
notice consistencies at and just throw

647
00:20:45,280 --> 00:20:46,960
them into like a little grid you can put

648
00:20:46,960 --> 00:20:48,559
them in an excel spreadsheet

649
00:20:48,559 --> 00:20:50,240
and then you can use that to you know

650
00:20:50,240 --> 00:20:52,640
build the sectors as well as

651
00:20:52,640 --> 00:20:54,640
you know guide the rest of your of your

652
00:20:54,640 --> 00:20:55,840
stuff but it's really good to take good

653
00:20:55,840 --> 00:20:57,280
notes of all this kind of thing just so

654
00:20:57,280 --> 00:20:58,240
you can know

655
00:20:58,240 --> 00:21:01,360
where data is appearing um

656
00:21:01,360 --> 00:21:02,799
so i'm already out of time on this

657
00:21:02,799 --> 00:21:04,400
specific talk and i

658
00:21:04,400 --> 00:21:06,080
knew i was going to because i have way

659
00:21:06,080 --> 00:21:07,679
too much info for this one

660
00:21:07,679 --> 00:21:09,760
and um so i might do a class or

661
00:21:09,760 --> 00:21:11,200
something like this in the future or

662
00:21:11,200 --> 00:21:12,159
like a presentation

663
00:21:12,159 --> 00:21:14,640
so um hit me up if you're more

664
00:21:14,640 --> 00:21:15,919
interested in this this probably wasn't

665
00:21:15,919 --> 00:21:16,799
the best

666
00:21:16,799 --> 00:21:19,120
way to present it so one moment while i

667
00:21:19,120 --> 00:21:31,520
switch over to the next one

668
00:21:31,520 --> 00:21:32,480
all right so i should be able to just

669
00:21:32,480 --> 00:21:34,640
breeze through this one because i was

670
00:21:34,640 --> 00:21:36,240
like realizing halfway through this that

671
00:21:36,240 --> 00:21:36,799
i was

672
00:21:36,799 --> 00:21:39,600
completely not on time for when i was

673
00:21:39,600 --> 00:21:41,440
trying to to finish here

674
00:21:41,440 --> 00:21:44,880
so ascii art for beginners um ascii art

675
00:21:44,880 --> 00:21:46,480
is something that i've been doing for a

676
00:21:46,480 --> 00:21:47,120
long time

677
00:21:47,120 --> 00:21:49,520
and i've been wanting to share more info

678
00:21:49,520 --> 00:21:50,240
about it

679
00:21:50,240 --> 00:21:52,000
um with people just because people ask

680
00:21:52,000 --> 00:21:54,000
me all the time like how i do things

681
00:21:54,000 --> 00:21:56,559
um and so i kind of wanted to do a quick

682
00:21:56,559 --> 00:21:57,919
overview of like what is actually

683
00:21:57,919 --> 00:21:58,880
available

684
00:21:58,880 --> 00:22:01,120
um in terms of ascii art to like you

685
00:22:01,120 --> 00:22:02,640
know what kind of styles and tools and

686
00:22:02,640 --> 00:22:03,360
things

687
00:22:03,360 --> 00:22:04,559
and so you might have seen stuff i've

688
00:22:04,559 --> 00:22:06,720
done before um

689
00:22:06,720 --> 00:22:10,559
here's like a fake fake uh dns server

690
00:22:10,559 --> 00:22:13,919
um for a ctf that was returning uh

691
00:22:13,919 --> 00:22:15,600
ask yard of gucci mane and some text

692
00:22:15,600 --> 00:22:17,280
records and dns

693
00:22:17,280 --> 00:22:20,240
um but stuff like this there's a lot of

694
00:22:20,240 --> 00:22:22,400
ways to liven up the things that you

695
00:22:22,400 --> 00:22:24,960
do and so i tend to just add ascii art

696
00:22:24,960 --> 00:22:25,679
to everything

697
00:22:25,679 --> 00:22:27,760
and just see you know if it's he will

698
00:22:27,760 --> 00:22:28,960
appreciate it

699
00:22:28,960 --> 00:22:32,080
um so all right let's go into some

700
00:22:32,080 --> 00:22:34,000
styles real quick so

701
00:22:34,000 --> 00:22:36,559
um it's basically like different styles

702
00:22:36,559 --> 00:22:38,000
of basket art

703
00:22:38,000 --> 00:22:41,120
this line based style is kind of a bit

704
00:22:41,120 --> 00:22:41,919
more common in

705
00:22:41,919 --> 00:22:44,320
older ascii art there's a lot of

706
00:22:44,320 --> 00:22:45,200
examples here

707
00:22:45,200 --> 00:22:48,080
um i so most of the examples in this i

708
00:22:48,080 --> 00:22:49,039
made myself but

709
00:22:49,039 --> 00:22:51,760
most of them on this page i did not um

710
00:22:51,760 --> 00:22:53,280
like this uh

711
00:22:53,280 --> 00:22:55,600
this tour one down here or the uh the

712
00:22:55,600 --> 00:22:57,760
goose that gilda put into um

713
00:22:57,760 --> 00:23:00,400
my metasploit or this uh cityscape with

714
00:23:00,400 --> 00:23:01,600
zero made

715
00:23:01,600 --> 00:23:05,360
um so we have the line based

716
00:23:05,360 --> 00:23:07,360
you know line shaped characters that are

717
00:23:07,360 --> 00:23:09,520
used to create like a bigger structure

718
00:23:09,520 --> 00:23:12,640
um so this is a style that i usually

719
00:23:12,640 --> 00:23:13,039
like

720
00:23:13,039 --> 00:23:14,799
to just kind of experiment with there's

721
00:23:14,799 --> 00:23:16,799
a lot of really cool fonts for it

722
00:23:16,799 --> 00:23:20,000
um there's also solid and shaded so

723
00:23:20,000 --> 00:23:21,600
you'll see a lot of this kind of stuff

724
00:23:21,600 --> 00:23:25,120
in um like a an ascii art generator

725
00:23:25,120 --> 00:23:28,080
um so you'll see in here like these are

726
00:23:28,080 --> 00:23:30,000
kind of like a rough approximations of

727
00:23:30,000 --> 00:23:30,960
stuff

728
00:23:30,960 --> 00:23:34,559
um that are used with the actual letters

729
00:23:34,559 --> 00:23:37,039
to do like the shading portions of it

730
00:23:37,039 --> 00:23:40,400
um oops uh ancr is a lot of there's too

731
00:23:40,400 --> 00:23:41,919
much to cover in nc art so i'm just

732
00:23:41,919 --> 00:23:43,440
going to like leave it to

733
00:23:43,440 --> 00:23:45,840
you you to uh to go to 16 colors and

734
00:23:45,840 --> 00:23:47,760
then look at some of the history of ncr

735
00:23:47,760 --> 00:23:49,360
but it's basically using block elements

736
00:23:49,360 --> 00:23:50,799
and antsy colors um

737
00:23:50,799 --> 00:23:53,840
to create terminal art um so one of my

738
00:23:53,840 --> 00:23:55,919
favorites one is this defcon one that

739
00:23:55,919 --> 00:23:58,960
my friend zero made um that has a qr

740
00:23:58,960 --> 00:24:01,200
code written in ansi it's so cool

741
00:24:01,200 --> 00:24:04,159
um but yeah these are these are done in

742
00:24:04,159 --> 00:24:05,279
like block elements

743
00:24:05,279 --> 00:24:07,600
um that you might have seen in you know

744
00:24:07,600 --> 00:24:08,960
twitter and stuff too

745
00:24:08,960 --> 00:24:12,000
or another ncr um but they're a lot of

746
00:24:12,000 --> 00:24:12,799
fun

747
00:24:12,799 --> 00:24:15,120
um cow emoji i really like too this is

748
00:24:15,120 --> 00:24:16,559
like a japanese style like

749
00:24:16,559 --> 00:24:19,120
emoticon so you'll see like a kind of

750
00:24:19,120 --> 00:24:20,640
like a line based stuff but they use

751
00:24:20,640 --> 00:24:22,240
like a large unicode

752
00:24:22,240 --> 00:24:24,400
char set to really like make stuff

753
00:24:24,400 --> 00:24:25,279
happen so

754
00:24:25,279 --> 00:24:27,120
if you can see this my favorite twitter

755
00:24:27,120 --> 00:24:28,559
is twit uh

756
00:24:28,559 --> 00:24:31,679
underscore bot it's um they just tweet

757
00:24:31,679 --> 00:24:32,080
out

758
00:24:32,080 --> 00:24:33,919
constantly all this kind of stuff and

759
00:24:33,919 --> 00:24:35,200
it's amazing

760
00:24:35,200 --> 00:24:36,880
um it's very very expressive because

761
00:24:36,880 --> 00:24:38,000
they use pretty much everything in

762
00:24:38,000 --> 00:24:38,799
unicode

763
00:24:38,799 --> 00:24:40,480
but it can also fit into small spaces

764
00:24:40,480 --> 00:24:42,159
like tweets so you might have seen a lot

765
00:24:42,159 --> 00:24:42,799
of this stuff

766
00:24:42,799 --> 00:24:45,760
um you know people posting variations of

767
00:24:45,760 --> 00:24:46,240
it

768
00:24:46,240 --> 00:24:47,840
um they're really popular and there's

769
00:24:47,840 --> 00:24:49,840
actually a really sick repository my

770
00:24:49,840 --> 00:24:51,360
favorite um

771
00:24:51,360 --> 00:24:54,159
like collection i guess of uh cow emoji

772
00:24:54,159 --> 00:24:54,720
is

773
00:24:54,720 --> 00:24:57,840
the cia vault seven leak which

774
00:24:57,840 --> 00:24:59,600
for some reason just has this japanese

775
00:24:59,600 --> 00:25:01,279
style faces page

776
00:25:01,279 --> 00:25:03,200
i guess for talking to people on

777
00:25:03,200 --> 00:25:04,559
japanese chats

778
00:25:04,559 --> 00:25:06,400
um but they have like some of the best

779
00:25:06,400 --> 00:25:07,919
kamoji's so

780
00:25:07,919 --> 00:25:09,840
you can use those as a starting point if

781
00:25:09,840 --> 00:25:11,279
you want to play with them

782
00:25:11,279 --> 00:25:13,840
um things with unique charses are a lot

783
00:25:13,840 --> 00:25:15,279
of fun to play with too so early

784
00:25:15,279 --> 00:25:15,919
computers

785
00:25:15,919 --> 00:25:17,520
have their own char sets with unique

786
00:25:17,520 --> 00:25:18,960
glyphs in them for

787
00:25:18,960 --> 00:25:20,720
expressing parts of the ui and stuff

788
00:25:20,720 --> 00:25:22,960
like that um petsky is a really good

789
00:25:22,960 --> 00:25:23,600
example

790
00:25:23,600 --> 00:25:26,799
of that um commodore petsky amiga fonts

791
00:25:26,799 --> 00:25:28,320
are also really well known for unique

792
00:25:28,320 --> 00:25:29,919
spacing and characters

793
00:25:29,919 --> 00:25:31,919
um and then this font lens key i really

794
00:25:31,919 --> 00:25:33,279
like because it tries to mimic some

795
00:25:33,279 --> 00:25:34,880
custom chart sets here

796
00:25:34,880 --> 00:25:37,520
by adding like random stuff like uh like

797
00:25:37,520 --> 00:25:38,880
triangles and

798
00:25:38,880 --> 00:25:41,120
portions of triangles so you can do

799
00:25:41,120 --> 00:25:43,760
interesting effects like this here

800
00:25:43,760 --> 00:25:46,960
um so tools are really important so

801
00:25:46,960 --> 00:25:49,200
ascii art generators these are things

802
00:25:49,200 --> 00:25:50,080
that there's

803
00:25:50,080 --> 00:25:51,360
quite a few of them so i kind of want to

804
00:25:51,360 --> 00:25:53,520
just go over them generators can

805
00:25:53,520 --> 00:25:55,600
make design decisions for you and make

806
00:25:55,600 --> 00:25:56,880
it a lot easier to do

807
00:25:56,880 --> 00:25:58,880
ascii art designs but the decisions can

808
00:25:58,880 --> 00:26:00,159
be flawed and

809
00:26:00,159 --> 00:26:02,400
the outcomes can be really weird um they

810
00:26:02,400 --> 00:26:03,919
often need a lot of space to make an

811
00:26:03,919 --> 00:26:05,200
image look right just because

812
00:26:05,200 --> 00:26:07,200
images now are pretty high resolution

813
00:26:07,200 --> 00:26:08,320
and they have a pretty hard time

814
00:26:08,320 --> 00:26:10,240
expressing small shapes

815
00:26:10,240 --> 00:26:12,480
image artifacts can also cause like

816
00:26:12,480 --> 00:26:13,679
rendering issues too

817
00:26:13,679 --> 00:26:16,000
so if you have like say like a just a

818
00:26:16,000 --> 00:26:17,760
random block of uh

819
00:26:17,760 --> 00:26:19,600
you know stuff that's just a little bit

820
00:26:19,600 --> 00:26:21,360
shaded differently from the background

821
00:26:21,360 --> 00:26:22,880
um due to compression or something that

822
00:26:22,880 --> 00:26:24,799
can just add randomly

823
00:26:24,799 --> 00:26:28,080
some different block that's generated uh

824
00:26:28,080 --> 00:26:30,320
in the generator um so manual cleanup

825
00:26:30,320 --> 00:26:32,559
can make the output a lot smoother

826
00:26:32,559 --> 00:26:34,799
and also just using it for small shapes

827
00:26:34,799 --> 00:26:35,840
too is

828
00:26:35,840 --> 00:26:37,279
is pretty okay but it's definitely

829
00:26:37,279 --> 00:26:39,679
tricky um some examples of ascii art

830
00:26:39,679 --> 00:26:41,200
generated stuff is this

831
00:26:41,200 --> 00:26:44,400
so i have like uh this bot eye um

832
00:26:44,400 --> 00:26:46,720
looks like an anime girl and then dj

833
00:26:46,720 --> 00:26:48,799
khaled's head

834
00:26:48,799 --> 00:26:52,400
with another one

835
00:26:52,400 --> 00:26:55,200
so editors are really important too um i

836
00:26:55,200 --> 00:26:56,960
use sublime text 3 for most of my stuff

837
00:26:56,960 --> 00:26:58,159
because i can do regex

838
00:26:58,159 --> 00:27:00,480
i can do column select which if you do

839
00:27:00,480 --> 00:27:02,159
shift and right click and sublime text

840
00:27:02,159 --> 00:27:03,120
you can do

841
00:27:03,120 --> 00:27:05,440
a column select and select and replace

842
00:27:05,440 --> 00:27:06,480
things like that

843
00:27:06,480 --> 00:27:08,400
um we can do configurable line spacing

844
00:27:08,400 --> 00:27:10,480
and it's really it's really nice for

845
00:27:10,480 --> 00:27:12,080
for just doing layouts and things like

846
00:27:12,080 --> 00:27:14,799
that moebius is an ansi editor

847
00:27:14,799 --> 00:27:16,960
that's uh i use pretty much exclusively

848
00:27:16,960 --> 00:27:18,880
now for my ansi art

849
00:27:18,880 --> 00:27:21,039
older ones are pablo draw which is um

850
00:27:21,039 --> 00:27:22,080
also really cool there's a lot of

851
00:27:22,080 --> 00:27:23,440
features in there as well

852
00:27:23,440 --> 00:27:24,880
and then there's pet mate for pets key

853
00:27:24,880 --> 00:27:26,720
if you're interested in that too

854
00:27:26,720 --> 00:27:29,600
so here's an example of using moebius to

855
00:27:29,600 --> 00:27:31,039
draw some vx underground

856
00:27:31,039 --> 00:27:34,080
fan art this is the slayer logo with vx

857
00:27:34,080 --> 00:27:34,960
underground

858
00:27:34,960 --> 00:27:37,679
uh but yeah so here's a general

859
00:27:37,679 --> 00:27:39,200
interface you can kind of just draw it's

860
00:27:39,200 --> 00:27:40,640
almost like a microsoft paint or

861
00:27:40,640 --> 00:27:41,520
something

862
00:27:41,520 --> 00:27:43,600
um you can just use it to like make

863
00:27:43,600 --> 00:27:44,960
different shapes and stuff

864
00:27:44,960 --> 00:27:47,440
as well as like shade and color stuff in

865
00:27:47,440 --> 00:27:49,679
um

866
00:27:49,679 --> 00:27:52,960
so figlet fonts are the like

867
00:27:52,960 --> 00:27:54,799
next big thing you might have seen a lot

868
00:27:54,799 --> 00:27:56,240
of um they've been around since the

869
00:27:56,240 --> 00:27:57,039
early 90s

870
00:27:57,039 --> 00:27:59,840
there's a lot of different fonts and you

871
00:27:59,840 --> 00:28:01,440
can modify them and create your own and

872
00:28:01,440 --> 00:28:02,960
i really like creating figlet fonts

873
00:28:02,960 --> 00:28:04,480
although i haven't released too many of

874
00:28:04,480 --> 00:28:05,200
them

875
00:28:05,200 --> 00:28:07,200
um but they're a lot of fun to just like

876
00:28:07,200 --> 00:28:09,240
generate um this patter

877
00:28:09,240 --> 00:28:13,600
jk.com um like the ascii art generator

878
00:28:13,600 --> 00:28:16,480
can do think with fonts in the browser

879
00:28:16,480 --> 00:28:17,360
there's also a

880
00:28:17,360 --> 00:28:19,120
really handy figure editor that i use a

881
00:28:19,120 --> 00:28:21,279
lot for laying out favorite fonts

882
00:28:21,279 --> 00:28:23,039
and my friend zero as well has his own

883
00:28:23,039 --> 00:28:24,720
figure font

884
00:28:24,720 --> 00:28:26,240
repository which you can see here

885
00:28:26,240 --> 00:28:27,840
there's a ton of different just random

886
00:28:27,840 --> 00:28:28,240
fonts

887
00:28:28,240 --> 00:28:30,880
you can use in the terminal um here's

888
00:28:30,880 --> 00:28:33,039
some examples of designs of some fonts i

889
00:28:33,039 --> 00:28:33,919
did recently

890
00:28:33,919 --> 00:28:36,559
one of the the top one is uh is based on

891
00:28:36,559 --> 00:28:37,520
links awakening

892
00:28:37,520 --> 00:28:40,559
from zelda font that i was working on

893
00:28:40,559 --> 00:28:42,399
and then another one is based on this uh

894
00:28:42,399 --> 00:28:44,240
n64 like bios

895
00:28:44,240 --> 00:28:47,679
font that my friend found um

896
00:28:47,679 --> 00:28:49,440
so if you look here there's like the

897
00:28:49,440 --> 00:28:51,039
layout of how like uh

898
00:28:51,039 --> 00:28:53,679
the figlet font files are actually done

899
00:28:53,679 --> 00:28:54,320
um

900
00:28:54,320 --> 00:28:55,520
so if you want to create your own

901
00:28:55,520 --> 00:28:56,640
there's a bunch of stuff that you kind

902
00:28:56,640 --> 00:28:58,640
of need to know um keep in mind but

903
00:28:58,640 --> 00:28:59,919
it's really important to just kind of

904
00:28:59,919 --> 00:29:02,399
experiment too um

905
00:29:02,399 --> 00:29:03,840
the most important thing is to know your

906
00:29:03,840 --> 00:29:06,000
medium and its limitations in the future

907
00:29:06,000 --> 00:29:06,720
so

908
00:29:06,720 --> 00:29:08,320
if you want to do something on like the

909
00:29:08,320 --> 00:29:10,000
terminal or the web

910
00:29:10,000 --> 00:29:12,720
or social media or whatever um there's

911
00:29:12,720 --> 00:29:13,679
limitations

912
00:29:13,679 --> 00:29:14,799
all over the place for those and you

913
00:29:14,799 --> 00:29:16,080
have to kind of just keep in mind how

914
00:29:16,080 --> 00:29:17,039
people are going to see

915
00:29:17,039 --> 00:29:18,880
them um or how you're going to transport

916
00:29:18,880 --> 00:29:19,760
them and how people are going to view

917
00:29:19,760 --> 00:29:20,399
them

918
00:29:20,399 --> 00:29:22,480
um so 80 chars is like the standard for

919
00:29:22,480 --> 00:29:23,840
terminal things is because

920
00:29:23,840 --> 00:29:25,919
that's just been the standard forever um

921
00:29:25,919 --> 00:29:27,440
i tend to stick to 80

922
00:29:27,440 --> 00:29:28,880
characters in terminal stuff just

923
00:29:28,880 --> 00:29:31,039
because i like to use things on random

924
00:29:31,039 --> 00:29:32,399
small computers too

925
00:29:32,399 --> 00:29:34,799
and so if you have like perfectly spaced

926
00:29:34,799 --> 00:29:36,640
art that's 80 by 24

927
00:29:36,640 --> 00:29:38,640
um it can look really nice and like a

928
00:29:38,640 --> 00:29:40,399
small screen um

929
00:29:40,399 --> 00:29:43,360
the widths are standard for standard uh

930
00:29:43,360 --> 00:29:44,799
there's like standard widths for sites

931
00:29:44,799 --> 00:29:45,760
like twitter

932
00:29:45,760 --> 00:29:47,600
um like so like if you view something in

933
00:29:47,600 --> 00:29:49,120
the mobile app versus viewing it

934
00:29:49,120 --> 00:29:52,159
in the web app you know things might

935
00:29:52,159 --> 00:29:53,840
look differently your shift and it takes

936
00:29:53,840 --> 00:29:55,279
a bit of experimentation

937
00:29:55,279 --> 00:29:56,720
there's also character limits too like

938
00:29:56,720 --> 00:29:58,559
280 characters for twitter

939
00:29:58,559 --> 00:30:01,760
uh 2 000 for discord 4000 for slack um

940
00:30:01,760 --> 00:30:02,320
those are all

941
00:30:02,320 --> 00:30:03,520
things just keep in mind when you're

942
00:30:03,520 --> 00:30:05,760
making something um knowing your char

943
00:30:05,760 --> 00:30:07,440
sets like you can only

944
00:30:07,440 --> 00:30:09,760
use ascii then you have to kind of stick

945
00:30:09,760 --> 00:30:11,200
within those bounds otherwise you might

946
00:30:11,200 --> 00:30:12,640
get some weird errors

947
00:30:12,640 --> 00:30:15,279
um or you might be using some encoding

948
00:30:15,279 --> 00:30:16,320
that has different

949
00:30:16,320 --> 00:30:19,039
char character sets in there as well but

950
00:30:19,039 --> 00:30:20,080
those are all like

951
00:30:20,080 --> 00:30:21,840
just super important to keep in mind a

952
00:30:21,840 --> 00:30:23,760
lot of the times people are using utf-8

953
00:30:23,760 --> 00:30:25,520
now which is pretty cool um because it's

954
00:30:25,520 --> 00:30:26,960
kind of standardized but

955
00:30:26,960 --> 00:30:29,440
you might find that there are cool

956
00:30:29,440 --> 00:30:31,520
characters that you can't use in utf-8

957
00:30:31,520 --> 00:30:33,120
and vice versa

958
00:30:33,120 --> 00:30:34,880
um and knowing your fonts is also really

959
00:30:34,880 --> 00:30:38,240
important too i have some suggestions

960
00:30:38,240 --> 00:30:40,720
later on so here's an example and

961
00:30:40,720 --> 00:30:43,360
actually you guys can use this too

962
00:30:43,360 --> 00:30:46,080
my website n o dot l l or n zero to l o

963
00:30:46,080 --> 00:30:47,279
l slash t

964
00:30:47,279 --> 00:30:49,840
slack emoji converter i redid the font

965
00:30:49,840 --> 00:30:51,279
for this tool somebody had written a

966
00:30:51,279 --> 00:30:52,000
tool

967
00:30:52,000 --> 00:30:53,360
and i had changed the font so it was a

968
00:30:53,360 --> 00:30:55,919
bit smaller um but this is for making

969
00:30:55,919 --> 00:30:58,559
slack emoji um blocks so we have this

970
00:30:58,559 --> 00:31:00,000
thing that says like stonks that's

971
00:31:00,000 --> 00:31:01,440
written in like bitcoin

972
00:31:01,440 --> 00:31:04,000
or rip to prod with that little rip

973
00:31:04,000 --> 00:31:05,360
gifts

974
00:31:05,360 --> 00:31:07,519
um stuff like that though it's like a

975
00:31:07,519 --> 00:31:08,960
you know perfectly valid

976
00:31:08,960 --> 00:31:12,720
esky art um

977
00:31:12,720 --> 00:31:14,559
the other things you need to know too so

978
00:31:14,559 --> 00:31:16,080
beyond that kind of stuff is

979
00:31:16,080 --> 00:31:16,880
if you're doing something in the

980
00:31:16,880 --> 00:31:19,120
terminal or doing something for

981
00:31:19,120 --> 00:31:20,880
um it's going to be like in source code

982
00:31:20,880 --> 00:31:22,640
or something is um

983
00:31:22,640 --> 00:31:24,640
to know like your your lines and blocks

984
00:31:24,640 --> 00:31:26,799
so there's like box drawing characters

985
00:31:26,799 --> 00:31:28,159
and block elements that

986
00:31:28,159 --> 00:31:29,519
there's a really good wikipedia page

987
00:31:29,519 --> 00:31:31,600
that i always reference for these things

988
00:31:31,600 --> 00:31:33,600
um knowing your basic shapes is really

989
00:31:33,600 --> 00:31:34,960
good too like knowing how to make a

990
00:31:34,960 --> 00:31:35,919
square

991
00:31:35,919 --> 00:31:39,760
or a plus or a triangle or this uh

992
00:31:39,760 --> 00:31:42,799
shading over here is really just useful

993
00:31:42,799 --> 00:31:44,159
to play around with

994
00:31:44,159 --> 00:31:45,919
um but super important is to know your

995
00:31:45,919 --> 00:31:48,000
ansi escape codes actually color stuff

996
00:31:48,000 --> 00:31:48,559
in

997
00:31:48,559 --> 00:31:50,799
um so you can add a lot of flair to your

998
00:31:50,799 --> 00:31:51,679
own um

999
00:31:51,679 --> 00:31:53,919
you know source code and other terminal

1000
00:31:53,919 --> 00:31:55,519
applications with uh

1001
00:31:55,519 --> 00:31:59,360
advanced er or the ansi codes here um

1002
00:31:59,360 --> 00:32:00,399
if we're gonna do something on a web

1003
00:32:00,399 --> 00:32:02,480
page um it's really simple to set up

1004
00:32:02,480 --> 00:32:05,600
uh like a tech start on the web um so

1005
00:32:05,600 --> 00:32:06,799
this fonts like lenski

1006
00:32:06,799 --> 00:32:10,000
topaz plus there's other really cool um

1007
00:32:10,000 --> 00:32:13,120
fonts that are here at in 10h.org

1008
00:32:13,120 --> 00:32:16,240
for old interesting monospace fonts

1009
00:32:16,240 --> 00:32:18,240
also you can feel free to steal any css

1010
00:32:18,240 --> 00:32:19,840
from nola.lol or

1011
00:32:19,840 --> 00:32:22,480
thecar.com because i did all the ansi

1012
00:32:22,480 --> 00:32:23,279
art there

1013
00:32:23,279 --> 00:32:26,320
or most of it on thumbpride um

1014
00:32:26,320 --> 00:32:28,159
and you can um you know feel free to use

1015
00:32:28,159 --> 00:32:29,200
that if you want to put this kind of

1016
00:32:29,200 --> 00:32:30,000
stuff

1017
00:32:30,000 --> 00:32:32,320
uh on your own website um there's also

1018
00:32:32,320 --> 00:32:33,679
something to be aware of dude just

1019
00:32:33,679 --> 00:32:34,720
something i was dealing with the other

1020
00:32:34,720 --> 00:32:37,120
day is sub pixel blur in css

1021
00:32:37,120 --> 00:32:39,760
for some bitmap fonts and other um like

1022
00:32:39,760 --> 00:32:41,200
old school fonts

1023
00:32:41,200 --> 00:32:43,760
um they're like specifically designed to

1024
00:32:43,760 --> 00:32:44,240
be at

1025
00:32:44,240 --> 00:32:47,760
a very very like specific pixel

1026
00:32:47,760 --> 00:32:50,240
um range and so sometimes you try to

1027
00:32:50,240 --> 00:32:51,760
like center it or move it weird

1028
00:32:51,760 --> 00:32:53,600
your browser will start to like make it

1029
00:32:53,600 --> 00:32:57,840
look really blurry

1030
00:32:59,440 --> 00:33:01,840
um so here's some examples of some

1031
00:33:01,840 --> 00:33:03,919
webpage stuff i've done

1032
00:33:03,919 --> 00:33:05,440
there's tons of different weird styles

1033
00:33:05,440 --> 00:33:07,679
all this stuff is done with css

1034
00:33:07,679 --> 00:33:09,519
um i used to do the doug crouch show

1035
00:33:09,519 --> 00:33:11,120
notes um

1036
00:33:11,120 --> 00:33:12,880
so i would just make stuff like this

1037
00:33:12,880 --> 00:33:14,799
every week and

1038
00:33:14,799 --> 00:33:17,760
just kind of experiment with things um

1039
00:33:17,760 --> 00:33:18,720
this is how i

1040
00:33:18,720 --> 00:33:20,240
really realistically learned how to do

1041
00:33:20,240 --> 00:33:21,760
most of the stuff was just by having an

1042
00:33:21,760 --> 00:33:22,960
application for it

1043
00:33:22,960 --> 00:33:24,480
but if you have like tools and things

1044
00:33:24,480 --> 00:33:26,960
you want to add you know your own art to

1045
00:33:26,960 --> 00:33:29,120
this is like a really you know you have

1046
00:33:29,120 --> 00:33:30,559
to have a good reason i guess to

1047
00:33:30,559 --> 00:33:32,880
get into it um so yeah there's a lot of

1048
00:33:32,880 --> 00:33:34,720
different styles i used here as well

1049
00:33:34,720 --> 00:33:37,919
you can see all those on the card.com

1050
00:33:37,919 --> 00:33:40,240
um but yeah so this is a lot of stuff

1051
00:33:40,240 --> 00:33:41,279
that i've done i've been

1052
00:33:41,279 --> 00:33:43,600
i've also been asked to do uh layouts

1053
00:33:43,600 --> 00:33:45,360
for other websites as well

1054
00:33:45,360 --> 00:33:48,880
and zines um but i like using web pages

1055
00:33:48,880 --> 00:33:50,080
because you can

1056
00:33:50,080 --> 00:33:52,159
you can experiment with different colors

1057
00:33:52,159 --> 00:33:53,120
and effects

1058
00:33:53,120 --> 00:33:55,360
like i only really use css but you're

1059
00:33:55,360 --> 00:33:57,200
able to use like css to do weird stuff

1060
00:33:57,200 --> 00:33:58,240
like this uh

1061
00:33:58,240 --> 00:34:00,960
the glowing pink cursive like sleazy

1062
00:34:00,960 --> 00:34:03,039
miami bug crowd

1063
00:34:03,039 --> 00:34:05,919
um logo that one is done with just css

1064
00:34:05,919 --> 00:34:07,200
like webkit

1065
00:34:07,200 --> 00:34:10,399
basic stuff um there's also like uh

1066
00:34:10,399 --> 00:34:12,399
different like color gradients and stuff

1067
00:34:12,399 --> 00:34:14,639
that you can implement with css too that

1068
00:34:14,639 --> 00:34:16,960
you can't really do with with anti-art

1069
00:34:16,960 --> 00:34:17,839
as much so

1070
00:34:17,839 --> 00:34:19,918
i typically prefer to do it like this um

1071
00:34:19,918 --> 00:34:20,960
but you might be

1072
00:34:20,960 --> 00:34:22,560
having different applications for it

1073
00:34:22,560 --> 00:34:24,480
it's not trans it's not really

1074
00:34:24,480 --> 00:34:26,560
easy to transport stuff from the web to

1075
00:34:26,560 --> 00:34:29,440
ansi but you can use ansi to html

1076
00:34:29,440 --> 00:34:31,839
um generators to create html pages out

1077
00:34:31,839 --> 00:34:34,879
of ansi which is cool um

1078
00:34:34,879 --> 00:34:36,320
so yeah on the terminal itself you can

1079
00:34:36,320 --> 00:34:38,960
use just an ansi file like mobius and

1080
00:34:38,960 --> 00:34:40,800
pablo drive will generate them

1081
00:34:40,800 --> 00:34:43,679
um they're like binary file formats um

1082
00:34:43,679 --> 00:34:45,359
but you can also do stuff like having a

1083
00:34:45,359 --> 00:34:48,079
script to generate it at runtime um

1084
00:34:48,079 --> 00:34:50,239
and so i like to do that that's that can

1085
00:34:50,239 --> 00:34:51,440
be fun

1086
00:34:51,440 --> 00:34:54,239
um for different reasons but it depends

1087
00:34:54,239 --> 00:34:55,839
on your application really

1088
00:34:55,839 --> 00:34:57,920
um i also like to add ascii art to

1089
00:34:57,920 --> 00:34:59,119
comments or

1090
00:34:59,119 --> 00:35:02,000
you know spice up my source code um and

1091
00:35:02,000 --> 00:35:03,520
you can also embed substitution can only

1092
00:35:03,520 --> 00:35:05,839
be viewed by certain tools so

1093
00:35:05,839 --> 00:35:09,119
um i've done documentation and stuff too

1094
00:35:09,119 --> 00:35:11,359
like here's um the big one in the top

1095
00:35:11,359 --> 00:35:12,960
right is uh

1096
00:35:12,960 --> 00:35:15,920
is like the python three pi c format and

1097
00:35:15,920 --> 00:35:18,480
it's really cool to use like ansi

1098
00:35:18,480 --> 00:35:20,079
escape codes and stuff like that to

1099
00:35:20,079 --> 00:35:21,599
color in documentation

1100
00:35:21,599 --> 00:35:23,680
um because it can make you know normally

1101
00:35:23,680 --> 00:35:26,720
really boring looking blobs of hex

1102
00:35:26,720 --> 00:35:29,520
um look really cool with uh and readable

1103
00:35:29,520 --> 00:35:30,000
with

1104
00:35:30,000 --> 00:35:32,079
clothes colors and layouts and things

1105
00:35:32,079 --> 00:35:33,680
but i've also just colored in randomly

1106
00:35:33,680 --> 00:35:34,000
too

1107
00:35:34,000 --> 00:35:35,599
like write ups and things as well just

1108
00:35:35,599 --> 00:35:37,119
so you can easily see stuff because if

1109
00:35:37,119 --> 00:35:37,680
you're

1110
00:35:37,680 --> 00:35:39,599
working with like big blobs of binary

1111
00:35:39,599 --> 00:35:40,880
data and stuff like that you want to

1112
00:35:40,880 --> 00:35:42,720
color it and make it look nice

1113
00:35:42,720 --> 00:35:45,760
um and then you can use curl to uh

1114
00:35:45,760 --> 00:35:48,320
to you know directly transmit and see

1115
00:35:48,320 --> 00:35:50,320
and put it into terminal stuff

1116
00:35:50,320 --> 00:35:51,920
um you can also use like this is an

1117
00:35:51,920 --> 00:35:54,640
example like raw escape so you can use

1118
00:35:54,640 --> 00:35:56,880
in your files so you can even color

1119
00:35:56,880 --> 00:35:58,320
within your source code

1120
00:35:58,320 --> 00:36:00,560
and it'll also render the same if you

1121
00:36:00,560 --> 00:36:02,480
just run the script as well

1122
00:36:02,480 --> 00:36:04,480
there's a lot of really cool uses for it

1123
00:36:04,480 --> 00:36:05,920
um

1124
00:36:05,920 --> 00:36:10,000
and yeah here's some more examples of uh

1125
00:36:10,000 --> 00:36:12,079
of just terminal art so you may have

1126
00:36:12,079 --> 00:36:13,680
seen my inhale.pie

1127
00:36:13,680 --> 00:36:16,320
um with the animated kirby mouth by

1128
00:36:16,320 --> 00:36:17,440
using the blink

1129
00:36:17,440 --> 00:36:20,480
it's a blink uh option for text in

1130
00:36:20,480 --> 00:36:22,960
um dancing and so the mouth blinks

1131
00:36:22,960 --> 00:36:23,839
basically and it

1132
00:36:23,839 --> 00:36:26,560
seems to open and close um there's some

1133
00:36:26,560 --> 00:36:27,839
other just random

1134
00:36:27,839 --> 00:36:30,400
layout stuff that i've done um over the

1135
00:36:30,400 --> 00:36:31,920
years

1136
00:36:31,920 --> 00:36:33,680
um this one was pretty cool too this is

1137
00:36:33,680 --> 00:36:35,440
just a script as i was saying before to

1138
00:36:35,440 --> 00:36:37,040
generate stuff so

1139
00:36:37,040 --> 00:36:39,040
this is this is a little bit overkill

1140
00:36:39,040 --> 00:36:40,160
but this is a

1141
00:36:40,160 --> 00:36:41,680
tantamount from digimon that's been

1142
00:36:41,680 --> 00:36:44,240
drawn and then it has this crazy script

1143
00:36:44,240 --> 00:36:46,240
this python script that actually runs

1144
00:36:46,240 --> 00:36:48,240
and generates it um which is a lot of

1145
00:36:48,240 --> 00:36:49,280
fun

1146
00:36:49,280 --> 00:36:51,520
um and then the final thing that i did

1147
00:36:51,520 --> 00:36:52,720
too was uh

1148
00:36:52,720 --> 00:36:54,079
making your source code look really

1149
00:36:54,079 --> 00:36:55,760
crazy so i like there's a lot of

1150
00:36:55,760 --> 00:36:57,040
languages you can do this with

1151
00:36:57,040 --> 00:37:00,400
and there's different like the ioc ccc

1152
00:37:00,400 --> 00:37:02,640
or the international obfuscated c code

1153
00:37:02,640 --> 00:37:04,160
contest is

1154
00:37:04,160 --> 00:37:06,960
like known for really crazy art like

1155
00:37:06,960 --> 00:37:07,599
this

1156
00:37:07,599 --> 00:37:09,280
um but there's a lot of ways you can do

1157
00:37:09,280 --> 00:37:11,040
it with stuff that doesn't see

1158
00:37:11,040 --> 00:37:13,280
um there's a lot of weird stuff like

1159
00:37:13,280 --> 00:37:14,320
with python

1160
00:37:14,320 --> 00:37:15,920
you can append strings together like

1161
00:37:15,920 --> 00:37:17,760
that without a plus but then you can use

1162
00:37:17,760 --> 00:37:18,720
that to make uh

1163
00:37:18,720 --> 00:37:20,880
eyes or like mouths or whatever like a

1164
00:37:20,880 --> 00:37:21,760
block of

1165
00:37:21,760 --> 00:37:25,839
of you know a payload like that um

1166
00:37:25,839 --> 00:37:29,200
and then you can use this to basically

1167
00:37:29,200 --> 00:37:30,079
like

1168
00:37:30,079 --> 00:37:32,079
the top left was a joke really it was

1169
00:37:32,079 --> 00:37:33,920
the most complicated hello world i could

1170
00:37:33,920 --> 00:37:34,960
think of

1171
00:37:34,960 --> 00:37:37,119
but then there's also stuff like this

1172
00:37:37,119 --> 00:37:38,560
with this different variables and

1173
00:37:38,560 --> 00:37:40,640
in arrays you can make like keys or

1174
00:37:40,640 --> 00:37:41,920
skulls

1175
00:37:41,920 --> 00:37:44,240
um you can also just i like to put stuff

1176
00:37:44,240 --> 00:37:45,520
in in

1177
00:37:45,520 --> 00:37:48,400
like embed things in the source code too

1178
00:37:48,400 --> 00:37:49,680
i'm just random comments so if you've

1179
00:37:49,680 --> 00:37:51,119
ever seen a page ever made

1180
00:37:51,119 --> 00:37:52,400
definitely check the source because i

1181
00:37:52,400 --> 00:37:54,480
always put like random youtube links or

1182
00:37:54,480 --> 00:37:56,079
drawings in there

1183
00:37:56,079 --> 00:37:59,839
um also really fun too is to make stuff

1184
00:37:59,839 --> 00:38:01,280
so you can only see it in certain tools

1185
00:38:01,280 --> 00:38:02,079
so

1186
00:38:02,079 --> 00:38:04,240
um right here this is things with mafia

1187
00:38:04,240 --> 00:38:05,119
this originally said

1188
00:38:05,119 --> 00:38:07,359
text dump mafia or something like that

1189
00:38:07,359 --> 00:38:09,440
but this was embedded inside of a binary

1190
00:38:09,440 --> 00:38:10,880
and so you wouldn't be able to normally

1191
00:38:10,880 --> 00:38:12,960
see this in a text editor if you open it

1192
00:38:12,960 --> 00:38:13,359
up

1193
00:38:13,359 --> 00:38:15,440
but if you open it up in a hex editor

1194
00:38:15,440 --> 00:38:17,200
then you'd be able to see that it spells

1195
00:38:17,200 --> 00:38:18,000
out this

1196
00:38:18,000 --> 00:38:21,280
and it's spaced to 16 basically um

1197
00:38:21,280 --> 00:38:22,960
one of my favorite ones i did recently

1198
00:38:22,960 --> 00:38:25,520
um was this pcapp scroller

1199
00:38:25,520 --> 00:38:29,599
and so it sends um it sends

1200
00:38:29,599 --> 00:38:31,520
basically a message that scrolls and it

1201
00:38:31,520 --> 00:38:33,520
says like you're reading pcaps on

1202
00:38:33,520 --> 00:38:35,280
reading your emails are not the same

1203
00:38:35,280 --> 00:38:36,960
but it scrolls it in that where that

1204
00:38:36,960 --> 00:38:38,800
little o is in the hex dump of the

1205
00:38:38,800 --> 00:38:41,119
of wireshark and it just it's perfectly

1206
00:38:41,119 --> 00:38:42,000
spaced

1207
00:38:42,000 --> 00:38:44,640
um that kind of stuff is always fun too

1208
00:38:44,640 --> 00:38:46,960
i'm just for trolling and things

1209
00:38:46,960 --> 00:38:48,800
um and so yeah the last thing is some

1210
00:38:48,800 --> 00:38:50,560
editors like moebius can export your

1211
00:38:50,560 --> 00:38:52,079
works to an image file other times you

1212
00:38:52,079 --> 00:38:53,680
need to take screenshots

1213
00:38:53,680 --> 00:38:57,440
um sometimes you like for some reason

1214
00:38:57,440 --> 00:38:59,280
ask your can be rendered really weird

1215
00:38:59,280 --> 00:39:00,560
like if you look at

1216
00:39:00,560 --> 00:39:03,760
uh like like here if you see like the

1217
00:39:03,760 --> 00:39:05,040
screenshot with um

1218
00:39:05,040 --> 00:39:06,480
this isn't the best screenshot in the

1219
00:39:06,480 --> 00:39:08,640
world but there's a screenshot of kirby

1220
00:39:08,640 --> 00:39:09,839
it has lines in it

1221
00:39:09,839 --> 00:39:12,000
there's other times other fonts and

1222
00:39:12,000 --> 00:39:14,000
configurations you can use that can

1223
00:39:14,000 --> 00:39:16,800
get rid of those um same with the blocks

1224
00:39:16,800 --> 00:39:19,119
that are sometimes in some of the bigger

1225
00:39:19,119 --> 00:39:22,240
and see art stuff you might do on um on

1226
00:39:22,240 --> 00:39:23,839
the web on a web page

1227
00:39:23,839 --> 00:39:26,480
um but yeah you kind of want to like

1228
00:39:26,480 --> 00:39:28,079
figure out what the best medium is to do

1229
00:39:28,079 --> 00:39:29,200
your images

1230
00:39:29,200 --> 00:39:31,200
um mode bs takes care of it for you but

1231
00:39:31,200 --> 00:39:32,400
other times when you take screenshots

1232
00:39:32,400 --> 00:39:33,599
you actually like have

1233
00:39:33,599 --> 00:39:36,720
that in mind and so with that um

1234
00:39:36,720 --> 00:39:40,240
i think i'm i'm done

1235
00:39:41,599 --> 00:39:44,560
all right that was great i i don't see a

1236
00:39:44,560 --> 00:39:45,760
whole lot of uh

1237
00:39:45,760 --> 00:39:48,720
questions in the chat but it looks like

1238
00:39:48,720 --> 00:39:49,680
people are

1239
00:39:49,680 --> 00:39:51,359
super excited about both of the things

1240
00:39:51,359 --> 00:39:53,359
that you talked about especially

1241
00:39:53,359 --> 00:39:55,119
the ascii art stuff which is super fun

1242
00:39:55,119 --> 00:39:57,200
and i'm gonna exploit the slack one

1243
00:39:57,200 --> 00:40:00,560
all the time in my work slack

1244
00:40:01,440 --> 00:40:04,880
so yeah that's uh super cool and uh

1245
00:40:04,880 --> 00:40:06,160
if anyone else comes up with any

1246
00:40:06,160 --> 00:40:08,160
questions actually we may have one

1247
00:40:08,160 --> 00:40:09,040
question but we're

1248
00:40:09,040 --> 00:40:10,400
[Music]

1249
00:40:10,400 --> 00:40:11,760
trying to track that one down yeah if

1250
00:40:11,760 --> 00:40:13,520
anyone else has any questions

1251
00:40:13,520 --> 00:40:16,400
let us know in the chat all right let's

1252
00:40:16,400 --> 00:40:17,599
see there's the link

1253
00:40:17,599 --> 00:40:19,200
can you elaborate on how to go about

1254
00:40:19,200 --> 00:40:20,880
analyzing and or interacting

1255
00:40:20,880 --> 00:40:23,839
with malicious binaries that does c2

1256
00:40:23,839 --> 00:40:25,520
over a non-standard protocol

1257
00:40:25,520 --> 00:40:28,880
using a malicious dll for example how do

1258
00:40:28,880 --> 00:40:30,800
you go about analyzing the switch tables

1259
00:40:30,800 --> 00:40:33,200
for example in the disassembled dll

1260
00:40:33,200 --> 00:40:35,440
code that represent various switch cases

1261
00:40:35,440 --> 00:40:39,119
based on the specific bytes received

1262
00:40:39,119 --> 00:40:40,720
all right so that's a really really good

1263
00:40:40,720 --> 00:40:42,400
question and this is so

1264
00:40:42,400 --> 00:40:44,560
i had written this talk and i was like

1265
00:40:44,560 --> 00:40:46,079
this is not going to fit into 20 minutes

1266
00:40:46,079 --> 00:40:47,280
because there's way too much that i want

1267
00:40:47,280 --> 00:40:47,839
to do

1268
00:40:47,839 --> 00:40:50,000
so again if you guys are interested in

1269
00:40:50,000 --> 00:40:51,440
that specific

1270
00:40:51,440 --> 00:40:54,640
topic i will do a presentation i might

1271
00:40:54,640 --> 00:40:55,760
just do like a twitch stream or

1272
00:40:55,760 --> 00:40:56,960
something where people can ask me

1273
00:40:56,960 --> 00:40:58,560
anything or i might do a private zoom

1274
00:40:58,560 --> 00:40:59,440
call

1275
00:40:59,440 --> 00:41:01,599
um but so for malware specifically if

1276
00:41:01,599 --> 00:41:03,760
you have us you know switch table

1277
00:41:03,760 --> 00:41:05,599
things like that there are definitely

1278
00:41:05,599 --> 00:41:07,280
paradigms you can recognize when you're

1279
00:41:07,280 --> 00:41:08,319
doing

1280
00:41:08,319 --> 00:41:10,880
analyzing you know like basically

1281
00:41:10,880 --> 00:41:12,240
comparing values

1282
00:41:12,240 --> 00:41:13,920
um is like a big thing that you'll see

1283
00:41:13,920 --> 00:41:15,760
within malware itself so like

1284
00:41:15,760 --> 00:41:18,960
compare eax to like some other you know

1285
00:41:18,960 --> 00:41:20,960
value like one or two or whatever and

1286
00:41:20,960 --> 00:41:22,480
then jump to somewhere else so you can

1287
00:41:22,480 --> 00:41:23,760
see those things

1288
00:41:23,760 --> 00:41:27,280
um you can you know you kind of have to

1289
00:41:27,280 --> 00:41:28,079
look at if you're

1290
00:41:28,079 --> 00:41:29,839
actually analyzing the malware look at

1291
00:41:29,839 --> 00:41:31,440
how it's iterating over

1292
00:41:31,440 --> 00:41:33,440
the buffer of data that it received

1293
00:41:33,440 --> 00:41:34,800
right so you want to see like

1294
00:41:34,800 --> 00:41:37,760
wherever the receive from buffer is in

1295
00:41:37,760 --> 00:41:38,319
memory

1296
00:41:38,319 --> 00:41:40,000
or on the stack or whatever you want to

1297
00:41:40,000 --> 00:41:41,599
see where that is and then you want to

1298
00:41:41,599 --> 00:41:43,359
just watch it iterate over the packet

1299
00:41:43,359 --> 00:41:45,280
because it's going to have to compare to

1300
00:41:45,280 --> 00:41:47,440
stuff in a jump table there might be

1301
00:41:47,440 --> 00:41:48,880
some other obfuscation but

1302
00:41:48,880 --> 00:41:50,640
in a classical form you'll see it like

1303
00:41:50,640 --> 00:41:52,800
that um and it'll jump to like another

1304
00:41:52,800 --> 00:41:54,079
function and then you can map out and

1305
00:41:54,079 --> 00:41:54,720
say okay

1306
00:41:54,720 --> 00:41:58,560
if this if byte12 is 0x15

1307
00:41:58,560 --> 00:42:00,640
then it jumps to this address and you

1308
00:42:00,640 --> 00:42:01,599
can you can

1309
00:42:01,599 --> 00:42:05,200
map that stuff out with a table but um

1310
00:42:05,200 --> 00:42:07,599
it's really important though to find the

1311
00:42:07,599 --> 00:42:10,480
exact place where the buffer goes

1312
00:42:10,480 --> 00:42:12,720
um into the binary because there might

1313
00:42:12,720 --> 00:42:14,400
be other transformations that are done

1314
00:42:14,400 --> 00:42:15,920
too like it might decrypt it with a

1315
00:42:15,920 --> 00:42:18,960
zorky or some other key um and you can

1316
00:42:18,960 --> 00:42:19,359
just

1317
00:42:19,359 --> 00:42:21,040
looking at that communication is really

1318
00:42:21,040 --> 00:42:22,240
useful to see how it's actually

1319
00:42:22,240 --> 00:42:23,599
processed and handled

1320
00:42:23,599 --> 00:42:24,960
um looking at it from a forward

1321
00:42:24,960 --> 00:42:26,160
perspective of how it's created

1322
00:42:26,160 --> 00:42:28,640
sometimes that can be really crazy

1323
00:42:28,640 --> 00:42:30,880
and so it's usually i like to look at

1324
00:42:30,880 --> 00:42:32,400
how it's decoded rather than it's

1325
00:42:32,400 --> 00:42:33,280
encoded

1326
00:42:33,280 --> 00:42:34,640
um just because it gives a more

1327
00:42:34,640 --> 00:42:36,720
straightforward way of the easiest path

1328
00:42:36,720 --> 00:42:38,079
to get the data

1329
00:42:38,079 --> 00:42:40,240
um but yeah you can usually just take

1330
00:42:40,240 --> 00:42:41,599
whatever that buffer is and compare it

1331
00:42:41,599 --> 00:42:43,040
to what you see on the wire

1332
00:42:43,040 --> 00:42:45,680
too and see how that changes over uh in

1333
00:42:45,680 --> 00:42:47,200
memory all right super cool i have no

1334
00:42:47,200 --> 00:42:48,480
idea what you're actually talking about

1335
00:42:48,480 --> 00:42:50,640
but i'm sure somebody does

1336
00:42:50,640 --> 00:42:54,160
so yeah that was great

