1
00:00:00,000 --> 00:00:04,920
hello<font color="#CCCCCC"> buddy</font><font color="#E5E5E5"> thank you for coming to my</font>

2
00:00:01,469 --> 00:00:08,429
talk about<font color="#CCCCCC"> diversity</font><font color="#E5E5E5"> hacking just before</font>

3
00:00:04,920 --> 00:00:10,290
we start a bit about myself<font color="#E5E5E5"> like</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> said</font>

4
00:00:08,429 --> 00:00:12,509
my name is<font color="#CCCCCC"> Jamie Hyneman and</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> a</font>

5
00:00:10,290 --> 00:00:14,700
security researcher from<font color="#CCCCCC"> Israel and</font>

6
00:00:12,509 --> 00:00:16,770
<font color="#CCCCCC">after hearing the last talked</font>

7
00:00:14,700 --> 00:00:21,090
<font color="#CCCCCC">no</font><font color="#E5E5E5"> I'm not a spy don't have any strong</font>

8
00:00:16,770 --> 00:00:23,100
political beliefs<font color="#CCCCCC"> our ideology i</font><font color="#E5E5E5"> work as</font>

9
00:00:21,090 --> 00:00:25,470
a security researcher and had a<font color="#E5E5E5"> research</font>

10
00:00:23,100 --> 00:00:28,800
<font color="#E5E5E5">small company called</font><font color="#CCCCCC"> equus</font><font color="#E5E5E5"> technologies</font>

11
00:00:25,470 --> 00:00:33,899
<font color="#E5E5E5">near Tel Aviv</font><font color="#CCCCCC"> I mostly do</font><font color="#E5E5E5"> an ability</font>

12
00:00:28,800 --> 00:00:38,820
research for<font color="#E5E5E5"> fun at home and at work</font><font color="#CCCCCC"> so</font>

13
00:00:33,899 --> 00:00:41,969
let's<font color="#CCCCCC"> just start now let's click what</font>

14
00:00:38,820 --> 00:00:44,579
<font color="#E5E5E5">exactly is</font><font color="#CCCCCC"> dvb-t</font><font color="#E5E5E5"> now deputies tens for</font>

15
00:00:41,969 --> 00:00:47,399
digital video broadcasting terrestrial

16
00:00:44,579 --> 00:00:49,500
<font color="#E5E5E5">which is just a standard for digital</font>

17
00:00:47,399 --> 00:00:51,629
television broadcasting and it replaced

18
00:00:49,500 --> 00:00:53,579
the all the analog<font color="#E5E5E5"> standard that we used</font>

19
00:00:51,629 --> 00:00:55,410
to have<font color="#CCCCCC"> so</font><font color="#E5E5E5"> if you remember those</font>

20
00:00:53,579 --> 00:00:59,039
antennas that you see here on the

21
00:00:55,410 --> 00:01:01,858
rooftops or this<font color="#E5E5E5"> then it's gone</font>

22
00:00:59,039 --> 00:01:04,589
what we have today<font color="#CCCCCC"> our receivers like</font>

23
00:01:01,859 --> 00:01:06,270
this and the way to work you go to the

24
00:01:04,589 --> 00:01:09,360
story by<font color="#E5E5E5"> your</font><font color="#CCCCCC"> cereal like this they're</font>

25
00:01:06,270 --> 00:01:12,060
<font color="#E5E5E5">pretty cheap</font><font color="#CCCCCC"> you plug-in</font><font color="#E5E5E5"> antenna implied</font>

26
00:01:09,360 --> 00:01:15,990
into your TV and you have digital video

27
00:01:12,060 --> 00:01:20,280
broadcasting<font color="#E5E5E5"> now usually have about four</font>

28
00:01:15,990 --> 00:01:23,729
channels<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> very popular but we do</font>

29
00:01:20,280 --> 00:01:26,490
have some<font color="#E5E5E5"> but once you buy</font><font color="#CCCCCC"> it's pretty</font>

30
00:01:23,729 --> 00:01:28,200
free<font color="#E5E5E5"> so it's cool</font><font color="#CCCCCC"> now the name</font><font color="#E5E5E5"> of the</font>

31
00:01:26,490 --> 00:01:31,380
network in<font color="#CCCCCC"> Israel it's called the</font><font color="#E5E5E5"> down</font>

32
00:01:28,200 --> 00:01:33,689
<font color="#CCCCCC">plus so if you hear me using this name</font>

33
00:01:31,380 --> 00:01:35,610
during the talk then just for you to

34
00:01:33,689 --> 00:01:37,500
follow the receiver like<font color="#CCCCCC"> I said</font><font color="#E5E5E5"> are</font>

35
00:01:35,610 --> 00:01:40,650
pretty cheap<font color="#CCCCCC"> they</font><font color="#E5E5E5"> cost about fifty</font>

36
00:01:37,500 --> 00:01:44,610
dollars<font color="#E5E5E5"> us and one of the most popular</font>

37
00:01:40,650 --> 00:01:46,920
one is the<font color="#CCCCCC"> silverline h.261 free and d</font>

38
00:01:44,610 --> 00:01:49,530
and<font color="#CCCCCC"> it's made</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> chinese</font><font color="#E5E5E5"> company called</font>

39
00:01:46,920 --> 00:01:52,950
<font color="#CCCCCC">M star and sold by different company in</font>

40
00:01:49,530 --> 00:01:56,880
<font color="#CCCCCC">Israel it's just a</font><font color="#E5E5E5"> sticker brand now</font>

41
00:01:52,950 --> 00:02:00,060
<font color="#E5E5E5">what actually brought me to research</font><font color="#CCCCCC"> pvt</font>

42
00:01:56,880 --> 00:02:02,548
<font color="#CCCCCC">i really like researching</font><font color="#E5E5E5"> IOT devices</font>

43
00:02:00,060 --> 00:02:04,350
it's pretty fun you find very nice

44
00:02:02,549 --> 00:02:08,789
vulnerabilities that you can exploit in

45
00:02:04,350 --> 00:02:12,269
a day or two<font color="#E5E5E5"> and</font><font color="#CCCCCC"> i really like it I love</font>

46
00:02:08,788 --> 00:02:13,149
it<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> like my hobby but lately it</font>

47
00:02:12,270 --> 00:02:14,950
seems that all

48
00:02:13,150 --> 00:02:17,230
routers in the world were written by the

49
00:02:14,950 --> 00:02:19,750
exact same person because you can find

50
00:02:17,230 --> 00:02:24,640
the exact same vulnerabilities<font color="#E5E5E5"> over and</font>

51
00:02:19,750 --> 00:02:26,709
<font color="#E5E5E5">over it's the exact same</font><font color="#CCCCCC"> ones</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> i</font>

52
00:02:24,640 --> 00:02:28,390
<font color="#E5E5E5">really</font><font color="#CCCCCC"> love</font><font color="#E5E5E5"> my TV</font><font color="#CCCCCC"> i have a smart TV I</font>

53
00:02:26,709 --> 00:02:30,760
thought of trying to mess around with it

54
00:02:28,390 --> 00:02:32,048
but it's pretty expensive<font color="#CCCCCC"> part</font><font color="#E5E5E5"> of</font>

55
00:02:30,760 --> 00:02:33,640
messing around with those<font color="#E5E5E5"> smart</font>

56
00:02:32,049 --> 00:02:38,170
refrigerators but<font color="#CCCCCC"> i don't know a single</font>

57
00:02:33,640 --> 00:02:39,548
person that have those and i would like

58
00:02:38,170 --> 00:02:42,879
to research them<font color="#E5E5E5"> rather than</font><font color="#CCCCCC"> or somebody</font>

59
00:02:39,549 --> 00:02:44,560
with that<font color="#E5E5E5"> and finally it's pretty cheap</font>

60
00:02:42,879 --> 00:02:46,149
the receivers like<font color="#CCCCCC"> I said are really</font>

61
00:02:44,560 --> 00:02:48,129
really cheap<font color="#E5E5E5"> so</font><font color="#CCCCCC"> i just went to the store</font>

62
00:02:46,150 --> 00:02:52,359
<font color="#CCCCCC">ask for the cheapest one that they have</font>

63
00:02:48,129 --> 00:02:54,670
and it was likely the most sold<font color="#E5E5E5"> one and</font>

64
00:02:52,359 --> 00:02:55,900
<font color="#E5E5E5">this is what they gave me this is the</font>

65
00:02:54,670 --> 00:02:59,170
exact<font color="#E5E5E5"> same one</font>

66
00:02:55,900 --> 00:03:01,450
<font color="#E5E5E5">now for those of you who were in my talk</font>

67
00:02:59,170 --> 00:03:04,659
yesterday<font color="#CCCCCC"> I usually</font><font color="#E5E5E5"> work with a simple</font>

68
00:03:01,450 --> 00:03:06,819
plan with<font color="#CCCCCC"> really like free steps and</font>

69
00:03:04,659 --> 00:03:07,810
<font color="#CCCCCC">evolving</font><font color="#E5E5E5"> as they go from like 12 free</font>

70
00:03:06,819 --> 00:03:10,000
<font color="#E5E5E5">profit</font>

71
00:03:07,810 --> 00:03:11,829
<font color="#CCCCCC">I</font><font color="#E5E5E5"> won't be doing this today though</font><font color="#CCCCCC"> i'm</font>

72
00:03:10,000 --> 00:03:15,069
<font color="#E5E5E5">going to give you the outline of my plan</font>

73
00:03:11,829 --> 00:03:18,310
so<font color="#CCCCCC"> I had one goal in mind i really want</font>

74
00:03:15,069 --> 00:03:20,589
to hack this<font color="#CCCCCC"> difficulty</font><font color="#E5E5E5"> receiver and</font>

75
00:03:18,310 --> 00:03:22,930
preferably over the air because<font color="#E5E5E5"> radio</font>

76
00:03:20,590 --> 00:03:26,169
frequencies<font color="#E5E5E5"> fine art</font><font color="#CCCCCC"> is fun</font><font color="#E5E5E5"> everybody</font>

77
00:03:22,930 --> 00:03:27,849
<font color="#CCCCCC">are hacking stuff over tcp now those</font>

78
00:03:26,169 --> 00:03:30,190
days and want to do something different

79
00:03:27,849 --> 00:03:32,980
something that people don't usually do

80
00:03:30,190 --> 00:03:35,530
so in order to hack it

81
00:03:32,980 --> 00:03:37,090
<font color="#CCCCCC">i first</font><font color="#E5E5E5"> have to get the femur now</font><font color="#CCCCCC"> need</font>

82
00:03:35,530 --> 00:03:39,220
to<font color="#E5E5E5"> find the correct</font><font color="#CCCCCC"> firmware the right</font>

83
00:03:37,090 --> 00:03:42,609
version<font color="#CCCCCC"> i need to reverse it for awhile</font>

84
00:03:39,220 --> 00:03:45,220
<font color="#CCCCCC">spend a few hours working on this</font><font color="#E5E5E5"> open</font>

85
00:03:42,609 --> 00:03:47,949
the casing get electrocuted<font color="#CCCCCC"> like it's a</font>

86
00:03:45,220 --> 00:03:50,470
risk that you get<font color="#E5E5E5"> get shell access</font>

87
00:03:47,949 --> 00:03:52,810
<font color="#CCCCCC">reverse</font><font color="#E5E5E5"> some more final bag</font><font color="#CCCCCC"> explain the</font>

88
00:03:50,470 --> 00:03:56,889
<font color="#CCCCCC">bug in yay</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> yes</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> giving a</font>

89
00:03:52,810 --> 00:03:59,379
talk here in<font color="#E5E5E5"> Romania</font><font color="#CCCCCC"> is pretty cool</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I</font>

90
00:03:56,889 --> 00:04:01,900
start with getting the femur and<font color="#CCCCCC"> there</font>

91
00:03:59,379 --> 00:04:03,459
are basically<font color="#E5E5E5"> two main ways to get a</font>

92
00:04:01,900 --> 00:04:06,579
<font color="#CCCCCC">femur</font><font color="#E5E5E5"> for device you're trying to</font>

93
00:04:03,459 --> 00:04:08,560
research<font color="#E5E5E5"> the first one is downloading</font>

94
00:04:06,579 --> 00:04:11,409
the<font color="#E5E5E5"> femur updates</font><font color="#CCCCCC"> either from the</font>

95
00:04:08,560 --> 00:04:13,659
manufacturer site or for some from some

96
00:04:11,409 --> 00:04:16,630
bizarre<font color="#E5E5E5"> chinese website or you could</font>

97
00:04:13,659 --> 00:04:18,668
extracted from the device itself<font color="#CCCCCC"> i tried</font>

98
00:04:16,630 --> 00:04:21,010
looking at the<font color="#CCCCCC"> manufacturer's site</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I</font>

99
00:04:18,668 --> 00:04:23,190
only found<font color="#CCCCCC"> out dated versions or</font>

100
00:04:21,010 --> 00:04:24,480
<font color="#E5E5E5">localized ones</font>

101
00:04:23,190 --> 00:04:26,160
and<font color="#CCCCCC"> I didn't find anything pretty</font>

102
00:04:24,480 --> 00:04:30,330
interesting in the<font color="#E5E5E5"> those chinese website</font>

103
00:04:26,160 --> 00:04:33,450
<font color="#CCCCCC">what I did find</font><font color="#E5E5E5"> was this</font><font color="#CCCCCC"> does</font><font color="#E5E5E5"> not sure</font>

104
00:04:30,330 --> 00:04:35,969
if you can see it and<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> licked em</font>

105
00:04:33,450 --> 00:04:38,010
<font color="#CCCCCC">star cpu schematics that's the same CPU</font>

106
00:04:35,970 --> 00:04:41,010
that<font color="#E5E5E5"> they're using in the receiver</font><font color="#CCCCCC"> died</font>

107
00:04:38,010 --> 00:04:41,700
<font color="#CCCCCC">bot and</font><font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> meat cpus you</font><font color="#E5E5E5"> need to</font>

108
00:04:41,010 --> 00:04:43,920
remember that

109
00:04:41,700 --> 00:04:46,590
<font color="#CCCCCC">its a mix</font><font color="#E5E5E5"> architecture and if we take a</font>

110
00:04:43,920 --> 00:04:49,350
closer look<font color="#E5E5E5"> you can see here in the red</font>

111
00:04:46,590 --> 00:04:50,250
<font color="#CCCCCC">there are two lines coming out</font><font color="#E5E5E5"> labeled</font>

112
00:04:49,350 --> 00:04:53,670
you are

113
00:04:50,250 --> 00:04:56,370
<font color="#CCCCCC">Deeks in your tarick's now you're just a</font>

114
00:04:53,670 --> 00:04:59,340
serial connection<font color="#E5E5E5"> so there's probably a</font>

115
00:04:56,370 --> 00:05:02,220
console we could connect to and using

116
00:04:59,340 --> 00:05:04,679
this<font color="#E5E5E5"> console</font><font color="#CCCCCC"> we might</font><font color="#E5E5E5"> be able to extract</font>

117
00:05:02,220 --> 00:05:07,590
<font color="#E5E5E5">important files maybe the</font><font color="#CCCCCC"> frame</font><font color="#E5E5E5"> itself</font>

118
00:05:04,680 --> 00:05:12,030
<font color="#E5E5E5">and now we'll have something to research</font>

119
00:05:07,590 --> 00:05:13,919
<font color="#E5E5E5">so let's get some</font><font color="#CCCCCC"> chair</font><font color="#E5E5E5"> access so start</font>

120
00:05:12,030 --> 00:05:16,679
by opening the case<font color="#E5E5E5"> and you can actually</font>

121
00:05:13,920 --> 00:05:18,900
see<font color="#E5E5E5"> you right away that there's always</font>

122
00:05:16,680 --> 00:05:20,610
space in the case they<font color="#CCCCCC"> could make it</font>

123
00:05:18,900 --> 00:05:22,620
like<font color="#CCCCCC"> three times</font><font color="#E5E5E5"> smaller and much</font>

124
00:05:20,610 --> 00:05:26,910
cheaper<font color="#CCCCCC"> so all this place is just</font><font color="#E5E5E5"> a</font>

125
00:05:22,620 --> 00:05:28,590
waste<font color="#CCCCCC"> of money</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> metal and</font><font color="#E5E5E5"> if we take</font>

126
00:05:26,910 --> 00:05:31,800
a closer look<font color="#E5E5E5"> we can start identifying</font>

127
00:05:28,590 --> 00:05:34,979
<font color="#E5E5E5">some of the parts</font><font color="#CCCCCC"> so the</font><font color="#E5E5E5"> first one</font>

128
00:05:31,800 --> 00:05:38,370
don't touch this if you over<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> open</font>

129
00:05:34,980 --> 00:05:39,540
one of those<font color="#E5E5E5"> who get electrocuted not</font>

130
00:05:38,370 --> 00:05:42,419
<font color="#E5E5E5">getting</font><font color="#CCCCCC"> it happened</font>

131
00:05:39,540 --> 00:05:44,940
this is the<font color="#CCCCCC"> cpu</font><font color="#E5E5E5"> it's pretty easy to spot</font>

132
00:05:42,419 --> 00:05:47,310
because of the large<font color="#CCCCCC"> heat sink here we</font>

133
00:05:44,940 --> 00:05:50,610
can see the serial connection

134
00:05:47,310 --> 00:05:52,230
<font color="#CCCCCC">enlarge little bit</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> there are some</font>

135
00:05:50,610 --> 00:05:53,850
other small parts that you can see

136
00:05:52,230 --> 00:05:56,910
around here scattered on the circuit

137
00:05:53,850 --> 00:05:59,130
board and<font color="#CCCCCC"> this was a bit hard to</font>

138
00:05:56,910 --> 00:06:01,980
identify them<font color="#E5E5E5"> so</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> need to find a better</font>

139
00:05:59,130 --> 00:06:04,409
way to get a look at them<font color="#E5E5E5"> so</font><font color="#CCCCCC"> i bought</font>

140
00:06:01,980 --> 00:06:07,200
this really cheap microscope<font color="#CCCCCC"> from the</font>

141
00:06:04,410 --> 00:06:09,990
<font color="#CCCCCC">extreme</font><font color="#E5E5E5"> and took some</font><font color="#CCCCCC"> close-up pictures</font>

142
00:06:07,200 --> 00:06:13,229
<font color="#E5E5E5">and here you can see it's hard to see</font>

143
00:06:09,990 --> 00:06:15,570
from here you can see the flash chip<font color="#E5E5E5"> you</font>

144
00:06:13,230 --> 00:06:17,850
can<font color="#E5E5E5"> see some writing on it so</font><font color="#CCCCCC"> I was</font>

145
00:06:15,570 --> 00:06:20,849
actually able to identify the exact

146
00:06:17,850 --> 00:06:24,390
<font color="#E5E5E5">vendor and brand and version of that</font>

147
00:06:20,850 --> 00:06:27,390
specific chip and it will help you later

148
00:06:24,390 --> 00:06:30,390
on<font color="#E5E5E5"> and after doing all this</font><font color="#CCCCCC"> i was</font><font color="#E5E5E5"> able</font>

149
00:06:27,390 --> 00:06:32,550
<font color="#E5E5E5">to build this basic blocks came for the</font>

150
00:06:30,390 --> 00:06:34,880
device itself so we have the<font color="#CCCCCC"> CQ</font><font color="#E5E5E5"> it's</font>

151
00:06:32,550 --> 00:06:38,180
connected to<font color="#E5E5E5"> USB on-the-go</font>

152
00:06:34,880 --> 00:06:39,680
<font color="#E5E5E5">it has 64 megabytes serial flash and</font><font color="#CCCCCC"> to</font>

153
00:06:38,180 --> 00:06:43,460
<font color="#CCCCCC">dram</font><font color="#E5E5E5"> memory</font>

154
00:06:39,680 --> 00:06:45,860
um<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I took a part of the circuit board</font>

155
00:06:43,460 --> 00:06:48,169
<font color="#E5E5E5">and this is actually me</font><font color="#CCCCCC"> soldiering</font><font color="#E5E5E5"> can</font>

156
00:06:45,860 --> 00:06:50,810
see a piece of my leg here you can see

157
00:06:48,170 --> 00:06:53,300
me<font color="#CCCCCC"> so during</font><font color="#E5E5E5"> the wires to the serial</font>

158
00:06:50,810 --> 00:06:54,560
connection<font color="#E5E5E5"> and like i said if</font><font color="#CCCCCC"> i get the</font>

159
00:06:53,300 --> 00:06:57,620
<font color="#CCCCCC">serial connection maybe</font><font color="#E5E5E5"> there is a</font>

160
00:06:54,560 --> 00:07:01,070
console and maybe<font color="#CCCCCC"> I</font><font color="#E5E5E5"> could extract some</font>

161
00:06:57,620 --> 00:07:02,930
of the files for me to research so<font color="#CCCCCC"> I</font>

162
00:07:01,070 --> 00:07:05,719
managed to identify which of the pins

163
00:07:02,930 --> 00:07:10,160
which<font color="#E5E5E5"> is the TX</font><font color="#CCCCCC"> Rx and</font><font color="#E5E5E5"> ground</font><font color="#CCCCCC"> was pretty</font>

164
00:07:05,720 --> 00:07:13,610
<font color="#E5E5E5">simple and but it's only the way to read</font>

165
00:07:10,160 --> 00:07:15,890
the data from it and<font color="#CCCCCC"> i bought</font><font color="#E5E5E5"> this fake</font>

166
00:07:13,610 --> 00:07:19,790
<font color="#CCCCCC">ftdi what this thing basically</font><font color="#E5E5E5"> does it</font>

167
00:07:15,890 --> 00:07:20,900
just<font color="#E5E5E5"> translate</font><font color="#CCCCCC"> cereal</font><font color="#E5E5E5"> your data to use</font>

168
00:07:19,790 --> 00:07:22,760
being vice versa

169
00:07:20,900 --> 00:07:26,239
it's pretty cheap<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you're into</font><font color="#CCCCCC"> hard</font>

170
00:07:22,760 --> 00:07:28,310
hacking<font color="#CCCCCC"> you want to get into it costs</font>

171
00:07:26,240 --> 00:07:31,730
less than ten dollars on<font color="#E5E5E5"> ebay</font><font color="#CCCCCC"> it's a</font>

172
00:07:28,310 --> 00:07:35,090
must<font color="#E5E5E5"> and after doing this</font><font color="#CCCCCC"> I had it's</font>

173
00:07:31,730 --> 00:07:36,890
pretty<font color="#E5E5E5"> cool setup at home like my wife</font>

174
00:07:35,090 --> 00:07:38,659
isn't here so<font color="#E5E5E5"> i can say</font><font color="#CCCCCC"> i am</font><font color="#E5E5E5"> not sorry</font>

175
00:07:36,890 --> 00:07:41,510
for the<font color="#E5E5E5"> mess and bringing people to see</font>

176
00:07:38,660 --> 00:07:43,130
that<font color="#CCCCCC"> calculus I'm so</font><font color="#E5E5E5"> these you can see</font>

177
00:07:41,510 --> 00:07:45,950
my computer connected to the box itself

178
00:07:43,130 --> 00:07:48,560
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> see the</font><font color="#CCCCCC"> FBI</font><font color="#E5E5E5"> in the serial</font>

179
00:07:45,950 --> 00:07:52,070
connection running on the carpet and

180
00:07:48,560 --> 00:07:53,720
after having<font color="#CCCCCC"> this setup i put</font><font color="#E5E5E5"> up the</font>

181
00:07:52,070 --> 00:07:55,909
device<font color="#E5E5E5"> and here you can see</font><font color="#CCCCCC"> it's</font>

182
00:07:53,720 --> 00:07:58,370
<font color="#CCCCCC">principle of data</font><font color="#E5E5E5"> to the screen</font><font color="#CCCCCC"> bring</font>

183
00:07:55,910 --> 00:08:02,300
some data about the board itself<font color="#CCCCCC"> about</font>

184
00:07:58,370 --> 00:08:05,180
the<font color="#E5E5E5"> bootloader</font><font color="#CCCCCC"> Prince some memory</font>

185
00:08:02,300 --> 00:08:08,570
addresses and<font color="#CCCCCC"> I</font><font color="#E5E5E5"> waited for a few minutes</font>

186
00:08:05,180 --> 00:08:09,560
for the shell to<font color="#E5E5E5"> pop up and after about</font>

187
00:08:08,570 --> 00:08:11,360
two minutes

188
00:08:09,560 --> 00:08:16,190
all<font color="#E5E5E5"> i got</font><font color="#CCCCCC"> was just</font><font color="#E5E5E5"> an in the slope of</font>

189
00:08:11,360 --> 00:08:19,370
this ring says<font color="#CCCCCC"> no this</font><font color="#E5E5E5"> country in dat</font><font color="#CCCCCC"> i</font>

190
00:08:16,190 --> 00:08:21,320
have no idea what it means and it wasn't

191
00:08:19,370 --> 00:08:23,480
quite what I was expecting<font color="#E5E5E5"> for</font><font color="#CCCCCC"> i was</font>

192
00:08:21,320 --> 00:08:26,000
expecting something more like here on

193
00:08:23,480 --> 00:08:31,160
the<font color="#CCCCCC"> left</font><font color="#E5E5E5"> like a real shell access the</font>

194
00:08:26,000 --> 00:08:34,070
<font color="#E5E5E5">linux</font><font color="#CCCCCC"> shell and it wasn't what</font><font color="#E5E5E5"> I got so</font>

195
00:08:31,160 --> 00:08:35,840
<font color="#CCCCCC">I took</font><font color="#E5E5E5"> a different</font><font color="#CCCCCC"> approach</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> i had</font><font color="#E5E5E5"> to</font>

196
00:08:34,070 --> 00:08:38,180
extracted from the flash chip itself

197
00:08:35,840 --> 00:08:42,110
<font color="#CCCCCC">like i</font><font color="#E5E5E5"> said</font><font color="#CCCCCC"> i was</font><font color="#E5E5E5"> able to identify the</font>

198
00:08:38,179 --> 00:08:44,120
exact brand of the<font color="#CCCCCC"> flash chip and I went</font>

199
00:08:42,110 --> 00:08:46,820
to<font color="#CCCCCC"> the manufacturer's site here they had</font>

200
00:08:44,120 --> 00:08:50,510
a pretty good documented data<font color="#E5E5E5"> sheet</font>

201
00:08:46,820 --> 00:08:52,880
and<font color="#CCCCCC"> I downloaded</font><font color="#E5E5E5"> it from their side</font><font color="#CCCCCC"> i</font>

202
00:08:50,510 --> 00:08:55,460
had the<font color="#CCCCCC"> functional block diagram so now</font>

203
00:08:52,880 --> 00:08:58,700
and you<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> leg</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> cheap dozen</font>

204
00:08:55,460 --> 00:09:01,190
<font color="#E5E5E5">and</font><font color="#CCCCCC"> I also</font><font color="#E5E5E5"> learned that it's using</font><font color="#CCCCCC"> asp</font>

205
00:08:58,700 --> 00:09:03,500
is as it's a communication protocol

206
00:09:01,190 --> 00:09:05,360
which is pretty cool because<font color="#CCCCCC"> they could</font>

207
00:09:03,500 --> 00:09:07,610
<font color="#E5E5E5">just take my</font><font color="#CCCCCC"> word</font><font color="#E5E5E5"> we know somebody</font>

208
00:09:05,360 --> 00:09:10,970
already implemented<font color="#CCCCCC"> and</font><font color="#E5E5E5"> SPL library for</font>

209
00:09:07,610 --> 00:09:13,700
<font color="#E5E5E5">arduino</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> I took the circuit board and</font>

210
00:09:10,970 --> 00:09:16,070
<font color="#CCCCCC">I did</font><font color="#E5E5E5"> the lazy way</font><font color="#CCCCCC"> I know it could make</font>

211
00:09:13,700 --> 00:09:18,200
electrical<font color="#CCCCCC"> engineer modified but</font><font color="#E5E5E5"> it took</font>

212
00:09:16,070 --> 00:09:20,210
the circuit board and I didn't really

213
00:09:18,200 --> 00:09:22,490
want to take the<font color="#CCCCCC"> flash chip out</font><font color="#E5E5E5"> because</font>

214
00:09:20,210 --> 00:09:25,790
<font color="#CCCCCC">it will take it out it was pretty sure</font>

215
00:09:22,490 --> 00:09:29,270
won't be able to solder it back in<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I</font>

216
00:09:25,790 --> 00:09:31,160
<font color="#E5E5E5">found the part of the circuit board</font><font color="#CCCCCC"> word</font>

217
00:09:29,270 --> 00:09:33,770
the legs of the chips coming out from

218
00:09:31,160 --> 00:09:35,780
the plastic on the<font color="#E5E5E5"> backside of it and</font>

219
00:09:33,770 --> 00:09:38,180
soldered wires<font color="#E5E5E5"> through it</font>

220
00:09:35,780 --> 00:09:40,939
<font color="#CCCCCC">I know it's it's it's the worst practice</font>

221
00:09:38,180 --> 00:09:43,640
you<font color="#CCCCCC"> could do but it's worked</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> i'm</font>

222
00:09:40,940 --> 00:09:45,560
sorry<font color="#E5E5E5"> about that and somebody already</font>

223
00:09:43,640 --> 00:09:48,080
implemented this specific cheap<font color="#CCCCCC"> product</font>

224
00:09:45,560 --> 00:09:50,359
<font color="#CCCCCC">all</font><font color="#E5E5E5"> so just put everything on my</font><font color="#CCCCCC"> arduino</font>

225
00:09:48,080 --> 00:09:52,910
<font color="#E5E5E5">told to dump all the frame all the data</font>

226
00:09:50,360 --> 00:09:55,880
from<font color="#CCCCCC"> Russia and the flat shape</font><font color="#E5E5E5"> and after</font>

227
00:09:52,910 --> 00:09:57,920
some work<font color="#E5E5E5"> some tedious work I got a</font>

228
00:09:55,880 --> 00:10:00,260
working<font color="#CCCCCC"> framework</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> i can actually</font>

229
00:09:57,920 --> 00:10:03,410
start reversing now<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is an actual</font>

230
00:10:00,260 --> 00:10:07,250
picture<font color="#E5E5E5"> from my</font><font color="#CCCCCC"> idea that's think the</font>

231
00:10:03,410 --> 00:10:09,800
entry point<font color="#CCCCCC"> that interesting so</font><font color="#E5E5E5"> I</font>

232
00:10:07,250 --> 00:10:13,280
<font color="#E5E5E5">reverse it for</font><font color="#CCCCCC"> a while</font><font color="#E5E5E5"> and those are my</font>

233
00:10:09,800 --> 00:10:17,479
notes<font color="#E5E5E5"> so it's running it</font><font color="#CCCCCC"> costs which is</font>

234
00:10:13,280 --> 00:10:20,990
a<font color="#E5E5E5"> anybody heard of it here</font><font color="#CCCCCC"> it costs</font>

235
00:10:17,480 --> 00:10:25,070
nobody<font color="#CCCCCC"> alright weird so it's just</font><font color="#E5E5E5"> an</font>

236
00:10:20,990 --> 00:10:28,190
<font color="#E5E5E5">everything so it's just an embedded</font><font color="#CCCCCC"> the</font>

237
00:10:25,070 --> 00:10:32,180
operation system for<font color="#CCCCCC"> its</font><font color="#E5E5E5"> for embedded</font>

238
00:10:28,190 --> 00:10:33,890
devices<font color="#E5E5E5"> took me about</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of hours to</font>

239
00:10:32,180 --> 00:10:36,979
understand<font color="#E5E5E5"> it's an</font><font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> after</font>

240
00:10:33,890 --> 00:10:38,840
<font color="#CCCCCC">reverse some function of it and it has</font>

241
00:10:36,980 --> 00:10:42,560
no shell access nobody compiled<font color="#CCCCCC"> any</font>

242
00:10:38,840 --> 00:10:44,480
<font color="#CCCCCC">shell into</font><font color="#E5E5E5"> it and on the CPU itself</font>

243
00:10:42,560 --> 00:10:46,699
there are no debugging options<font color="#E5E5E5"> enable</font>

244
00:10:44,480 --> 00:10:50,060
not even a<font color="#E5E5E5"> jtag that you can find on a</font>

245
00:10:46,700 --> 00:10:51,500
lot of different<font color="#E5E5E5"> meats</font><font color="#CCCCCC"> cpus</font><font color="#E5E5E5"> this</font>

246
00:10:50,060 --> 00:10:53,119
specific one they<font color="#CCCCCC"> try</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> make it</font><font color="#E5E5E5"> as</font>

247
00:10:51,500 --> 00:10:56,690
cheap as possible so<font color="#E5E5E5"> they didn't have</font>

248
00:10:53,120 --> 00:10:58,850
any support and there is a code on it

249
00:10:56,690 --> 00:11:00,320
<font color="#E5E5E5">when there is a lot of code and</font>

250
00:10:58,850 --> 00:11:04,160
reversing it statically

251
00:11:00,320 --> 00:11:05,930
<font color="#E5E5E5">it's gonna take a long time and it was</font>

252
00:11:04,160 --> 00:11:07,670
meant to be like a fun summer project

253
00:11:05,930 --> 00:11:10,670
for me<font color="#CCCCCC"> I didn't</font><font color="#E5E5E5"> want to work hard</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> it</font>

254
00:11:07,670 --> 00:11:12,800
<font color="#CCCCCC">and Iranian the debugger because when</font>

255
00:11:10,670 --> 00:11:14,120
you have<font color="#CCCCCC"> a debugger you can say well i'm</font>

256
00:11:12,800 --> 00:11:19,160
<font color="#CCCCCC">going to jump</font><font color="#E5E5E5"> over this function</font><font color="#CCCCCC"> again</font>

257
00:11:14,120 --> 00:11:20,840
just going to check what the outcome<font color="#E5E5E5"> so</font>

258
00:11:19,160 --> 00:11:23,630
<font color="#E5E5E5">I thought</font><font color="#CCCCCC"> what are in the bugger</font><font color="#E5E5E5"> what</font>

259
00:11:20,840 --> 00:11:24,980
should<font color="#CCCCCC"> i do</font><font color="#E5E5E5"> and then my wife she</font><font color="#CCCCCC"> liked</font>

260
00:11:23,630 --> 00:11:28,340
<font color="#CCCCCC">this show said well what would</font><font color="#E5E5E5"> be</font>

261
00:11:24,980 --> 00:11:30,110
<font color="#CCCCCC">welcomed the Guyver do the probability</font>

262
00:11:28,340 --> 00:11:32,480
<font color="#CCCCCC">bugger</font><font color="#E5E5E5"> so said</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> going to be able to</font>

263
00:11:30,110 --> 00:11:34,220
<font color="#CCCCCC">better myself</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I made the list</font><font color="#E5E5E5"> of</font>

264
00:11:32,480 --> 00:11:37,430
what the<font color="#E5E5E5"> debugger should be able to do</font>

265
00:11:34,220 --> 00:11:39,140
because<font color="#CCCCCC"> i</font><font color="#E5E5E5"> never done it before and</font><font color="#CCCCCC"> the</font>

266
00:11:37,430 --> 00:11:43,459
first thing your father<font color="#E5E5E5"> is inserting</font>

267
00:11:39,140 --> 00:11:45,199
<font color="#CCCCCC">breakpoints</font><font color="#E5E5E5"> it's like</font><font color="#CCCCCC"> efe on x86</font><font color="#E5E5E5"> like an</font>

268
00:11:43,460 --> 00:11:48,680
endless loop<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> something that</font><font color="#CCCCCC"> is a</font>

269
00:11:45,200 --> 00:11:52,580
must<font color="#E5E5E5"> and it's really important for when</font>

270
00:11:48,680 --> 00:11:54,079
trying to debug something<font color="#E5E5E5"> so that should</font>

271
00:11:52,580 --> 00:11:56,360
be able to insert<font color="#CCCCCC"> breakpoints should</font><font color="#E5E5E5"> be</font>

272
00:11:54,080 --> 00:11:58,910
able to read and write to memory to

273
00:11:56,360 --> 00:12:01,550
modify the program code<font color="#CCCCCC"> it should read</font>

274
00:11:58,910 --> 00:12:03,740
<font color="#CCCCCC">cpu and research should</font><font color="#E5E5E5"> be able to</font>

275
00:12:01,550 --> 00:12:06,079
single<font color="#E5E5E5"> stepping like</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> luxury but</font>

276
00:12:03,740 --> 00:12:08,090
maybe<font color="#CCCCCC"> something you shouldn't</font><font color="#E5E5E5"> it should</font>

277
00:12:06,080 --> 00:12:10,310
<font color="#E5E5E5">be able to do and the</font><font color="#CCCCCC"> debugger should be</font>

278
00:12:08,090 --> 00:12:13,790
able to talk to the buggy which is<font color="#CCCCCC"> a</font>

279
00:12:10,310 --> 00:12:17,180
<font color="#CCCCCC">natural</font><font color="#E5E5E5"> problem here because the body is</font>

280
00:12:13,790 --> 00:12:18,920
<font color="#E5E5E5">the box sitting on my table and it's not</font>

281
00:12:17,180 --> 00:12:22,910
a program like<font color="#CCCCCC"> I'm used to on my</font>

282
00:12:18,920 --> 00:12:25,370
computer<font color="#E5E5E5"> now with that in mind I thought</font>

283
00:12:22,910 --> 00:12:27,469
the<font color="#CCCCCC"> debugger should be made out of two</font>

284
00:12:25,370 --> 00:12:30,320
parts like a<font color="#E5E5E5"> lightweight server that</font>

285
00:12:27,470 --> 00:12:32,630
<font color="#E5E5E5">runs</font><font color="#CCCCCC"> on the box itself and a client-side</font>

286
00:12:30,320 --> 00:12:34,850
<font color="#E5E5E5">trying on my laptop that does all the</font>

287
00:12:32,630 --> 00:12:40,700
<font color="#E5E5E5">complicating processing</font><font color="#CCCCCC"> hold the state</font>

288
00:12:34,850 --> 00:12:41,900
machine and that's what<font color="#CCCCCC"> i thought it</font>

289
00:12:40,700 --> 00:12:43,370
<font color="#E5E5E5">should be able to do but still</font><font color="#CCCCCC"> there is</font>

290
00:12:41,900 --> 00:12:46,340
<font color="#CCCCCC">a question of</font><font color="#E5E5E5"> how they're going to talk</font>

291
00:12:43,370 --> 00:12:50,060
to each other<font color="#CCCCCC"> now if you remember to</font><font color="#E5E5E5"> set</font>

292
00:12:46,340 --> 00:12:52,850
<font color="#E5E5E5">up that</font><font color="#CCCCCC"> I had this one then my laptop is</font>

293
00:12:50,060 --> 00:12:55,699
going to be the client<font color="#E5E5E5"> the box is the</font>

294
00:12:52,850 --> 00:12:57,770
server<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I know there's a serial</font>

295
00:12:55,700 --> 00:13:00,980
connection<font color="#CCCCCC"> i could use</font><font color="#E5E5E5"> it to communicate</font>

296
00:12:57,770 --> 00:13:02,510
between the client and the server<font color="#E5E5E5"> now I</font>

297
00:13:00,980 --> 00:13:04,130
know it can read data from it because

298
00:13:02,510 --> 00:13:06,620
<font color="#E5E5E5">they</font><font color="#CCCCCC"> mention read all the data that</font>

299
00:13:04,130 --> 00:13:08,720
spills during the boot process<font color="#CCCCCC"> maybe we</font>

300
00:13:06,620 --> 00:13:11,020
can also write data to the box itself

301
00:13:08,720 --> 00:13:13,360
because there is what<font color="#E5E5E5"> I think</font>

302
00:13:11,020 --> 00:13:15,699
<font color="#E5E5E5">and</font><font color="#CCCCCC"> our export</font><font color="#E5E5E5"> on the receiver itself</font>

303
00:13:13,360 --> 00:13:18,460
<font color="#E5E5E5">but if</font><font color="#CCCCCC"> you need to prove this before</font>

304
00:13:15,700 --> 00:13:20,650
<font color="#CCCCCC">writing the debugger itself</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> started</font>

305
00:13:18,460 --> 00:13:22,600
reversing the easiest part<font color="#CCCCCC"> of could</font><font color="#E5E5E5"> find</font>

306
00:13:20,650 --> 00:13:26,230
and<font color="#E5E5E5"> school and</font><font color="#CCCCCC"> boot</font>

307
00:13:22,600 --> 00:13:28,360
<font color="#E5E5E5">it's a u-boat</font><font color="#CCCCCC"> rebuffed by M</font><font color="#E5E5E5"> star</font><font color="#CCCCCC"> I just</font>

308
00:13:26,230 --> 00:13:31,060
<font color="#CCCCCC">2</font><font color="#E5E5E5"> cubed change some strings but it's</font>

309
00:13:28,360 --> 00:13:33,700
basically the same and so<font color="#CCCCCC"> they'll</font><font color="#E5E5E5"> be</font>

310
00:13:31,060 --> 00:13:35,530
<font color="#E5E5E5">easy to understand code it right now</font>

311
00:13:33,700 --> 00:13:39,100
that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> maybe it's also read something</font>

312
00:13:35,530 --> 00:13:41,709
and after reversing for<font color="#CCCCCC"> a while finding</font>

313
00:13:39,100 --> 00:13:44,380
<font color="#CCCCCC">one of the first stages i</font><font color="#E5E5E5"> found this</font>

314
00:13:41,710 --> 00:13:47,860
function and you can see here<font color="#CCCCCC"> there is</font>

315
00:13:44,380 --> 00:13:51,220
<font color="#E5E5E5">this string on the first block that says</font>

316
00:13:47,860 --> 00:13:53,320
<font color="#E5E5E5">hit any key to stop the other</font><font color="#CCCCCC"> boat now</font>

317
00:13:51,220 --> 00:13:55,960
it's<font color="#E5E5E5"> interesting because</font><font color="#CCCCCC"> two-part</font><font color="#E5E5E5"> the</font>

318
00:13:53,320 --> 00:13:58,690
first part<font color="#E5E5E5"> i found the function</font><font color="#CCCCCC"> called</font>

319
00:13:55,960 --> 00:14:02,710
my print<font color="#CCCCCC"> it's a function that right data</font>

320
00:13:58,690 --> 00:14:06,910
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> cereal and the second thing now</font>

321
00:14:02,710 --> 00:14:10,150
it waits for user input and that's great

322
00:14:06,910 --> 00:14:12,130
<font color="#E5E5E5">so I reversed more and</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> found this</font>

323
00:14:10,150 --> 00:14:15,430
piece of code and you can see here

324
00:14:12,130 --> 00:14:20,260
<font color="#E5E5E5">that's what it does it</font><font color="#CCCCCC"> read data from a</font>

325
00:14:15,430 --> 00:14:22,689
specific address<font color="#E5E5E5"> BF 2013 20 attacks from</font>

326
00:14:20,260 --> 00:14:25,300
the<font color="#CCCCCC"> memory</font><font color="#E5E5E5"> and when the lower bit is set</font>

327
00:14:22,690 --> 00:14:28,540
on it goes to a different address<font color="#CCCCCC"> not</font>

328
00:14:25,300 --> 00:14:31,990
<font color="#E5E5E5">that far from it and read the whole</font><font color="#CCCCCC"> word</font>

329
00:14:28,540 --> 00:14:35,829
<font color="#E5E5E5">from it and then we turn one bite</font>

330
00:14:31,990 --> 00:14:38,020
so this looks like reading from<font color="#CCCCCC"> a serial</font>

331
00:14:35,830 --> 00:14:39,880
from some memory mapped i/o<font color="#E5E5E5"> and</font><font color="#CCCCCC"> is</font>

332
00:14:38,020 --> 00:14:42,550
<font color="#CCCCCC">actually the reading function from the</font>

333
00:14:39,880 --> 00:14:45,550
serial connection so<font color="#CCCCCC"> know how</font><font color="#E5E5E5"> to read</font>

334
00:14:42,550 --> 00:14:48,760
and write from the cereal and it's time

335
00:14:45,550 --> 00:14:50,979
to<font color="#E5E5E5"> write the burger itself so like I</font>

336
00:14:48,760 --> 00:14:54,850
said<font color="#CCCCCC"> breakpoints probably the most</font>

337
00:14:50,980 --> 00:14:55,960
important part in the debugger and this

338
00:14:54,850 --> 00:14:57,550
could be done you can implement

339
00:14:55,960 --> 00:15:00,400
<font color="#E5E5E5">breakpoint in different ways depending</font>

340
00:14:57,550 --> 00:15:02,859
on the architecture<font color="#CCCCCC"> you're running on</font><font color="#E5E5E5"> on</font>

341
00:15:00,400 --> 00:15:06,160
x86 you could use<font color="#CCCCCC"> hardware break points</font>

342
00:15:02,860 --> 00:15:09,310
<font color="#E5E5E5">with</font><font color="#CCCCCC"> specifically sisters</font><font color="#E5E5E5"> you could use</font>

343
00:15:06,160 --> 00:15:11,829
<font color="#E5E5E5">jtag on some</font><font color="#CCCCCC"> cpus</font><font color="#E5E5E5"> you can use special</font>

344
00:15:09,310 --> 00:15:13,599
<font color="#E5E5E5">instruction like</font><font color="#CCCCCC"> Bray construction or</font>

345
00:15:11,830 --> 00:15:14,350
you can do jump matching but it's pretty

346
00:15:13,600 --> 00:15:19,090
lame

347
00:15:14,350 --> 00:15:20,320
<font color="#E5E5E5">um</font><font color="#CCCCCC"> I chose the break method</font><font color="#E5E5E5"> and for</font>

348
00:15:19,090 --> 00:15:22,420
example if<font color="#E5E5E5"> you don't put a</font><font color="#CCCCCC"> break</font>

349
00:15:20,320 --> 00:15:23,449
<font color="#E5E5E5">instruction on this specific line</font>

350
00:15:22,420 --> 00:15:26,149
all you have to do

351
00:15:23,449 --> 00:15:28,729
<font color="#E5E5E5">is to replace your original</font><font color="#CCCCCC"> construction</font>

352
00:15:26,149 --> 00:15:32,779
<font color="#E5E5E5">with a</font><font color="#CCCCCC"> break instruction on my lips</font>

353
00:15:28,730 --> 00:15:35,119
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> zero the</font><font color="#E5E5E5"> hex and copy the original</font>

354
00:15:32,779 --> 00:15:37,669
<font color="#E5E5E5">data somewhere else</font><font color="#CCCCCC"> so you'll be able to</font>

355
00:15:35,119 --> 00:15:40,249
restore it and now whenever the program

356
00:15:37,669 --> 00:15:42,889
counter hits<font color="#CCCCCC"> this specific line with the</font>

357
00:15:40,249 --> 00:15:45,259
<font color="#CCCCCC">break</font><font color="#E5E5E5"> instruction then on me to get an</font>

358
00:15:42,889 --> 00:15:48,709
exception<font color="#E5E5E5"> and when you get the exception</font>

359
00:15:45,259 --> 00:15:50,779
<font color="#E5E5E5">then the program execution will move</font>

360
00:15:48,709 --> 00:15:53,479
this piece of code<font color="#E5E5E5"> and this is the</font>

361
00:15:50,779 --> 00:15:55,970
vector<font color="#CCCCCC"> the exception vector handler</font><font color="#E5E5E5"> it's</font>

362
00:15:53,480 --> 00:15:59,569
almost usually located on this address

363
00:15:55,970 --> 00:16:02,629
<font color="#CCCCCC">80 million 180 and what is essentially</font>

364
00:15:59,569 --> 00:16:05,868
<font color="#E5E5E5">doesn't it takes the exception code and</font>

365
00:16:02,629 --> 00:16:08,899
<font color="#CCCCCC">have a list of exception handlers are so</font>

366
00:16:05,869 --> 00:16:12,259
exceptional<font color="#CCCCCC"> mapes break instruction it's</font>

367
00:16:08,899 --> 00:16:14,569
<font color="#CCCCCC">exception number nine so it goes to cell</font>

368
00:16:12,259 --> 00:16:16,669
number<font color="#CCCCCC"> nine the exception vector and</font>

369
00:16:14,569 --> 00:16:19,699
check what is the handler for this

370
00:16:16,669 --> 00:16:21,739
specific case and<font color="#E5E5E5"> jump to this address</font>

371
00:16:19,699 --> 00:16:24,439
so if<font color="#E5E5E5"> you put it to our server client</font>

372
00:16:21,739 --> 00:16:26,749
design<font color="#E5E5E5"> if we heat the</font><font color="#CCCCCC"> break instruction</font>

373
00:16:24,439 --> 00:16:28,998
<font color="#E5E5E5">then the execution</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> jump</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> our</font>

374
00:16:26,749 --> 00:16:31,879
server code<font color="#CCCCCC"> the server will notify the</font>

375
00:16:28,999 --> 00:16:34,489
client<font color="#CCCCCC"> / you are</font><font color="#E5E5E5"> that something happened</font>

376
00:16:31,879 --> 00:16:37,669
and the client<font color="#CCCCCC"> we'll take it</font><font color="#E5E5E5"> from there</font>

377
00:16:34,489 --> 00:16:40,759
<font color="#E5E5E5">and decides what to do now</font>

378
00:16:37,669 --> 00:16:43,189
like<font color="#E5E5E5"> i said</font><font color="#CCCCCC"> i want to make</font><font color="#E5E5E5"> the server</font><font color="#CCCCCC"> as</font>

379
00:16:40,759 --> 00:16:45,410
lightweight<font color="#E5E5E5"> as possible and the best</font>

380
00:16:43,189 --> 00:16:47,269
<font color="#E5E5E5">wife</font><font color="#CCCCCC"> I love of making it like as</font>

381
00:16:45,410 --> 00:16:50,179
<font color="#E5E5E5">possible is that the server should all</font>

382
00:16:47,269 --> 00:16:52,730
implement<font color="#E5E5E5"> for primitives reading a bite</font>

383
00:16:50,179 --> 00:16:55,429
<font color="#E5E5E5">writing about getting our gear sir and</font>

384
00:16:52,730 --> 00:16:57,949
setting<font color="#CCCCCC"> and register</font><font color="#E5E5E5"> and if you remember</font>

385
00:16:55,429 --> 00:17:00,199
the list<font color="#CCCCCC"> I made</font><font color="#E5E5E5"> from before then</font><font color="#CCCCCC"> i can</font>

386
00:16:57,949 --> 00:17:01,819
show that<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> implement each and every</font>

387
00:17:00,199 --> 00:17:04,519
of those requirements with those for

388
00:17:01,819 --> 00:17:08,539
primitives<font color="#CCCCCC"> reading writing</font><font color="#E5E5E5"> getting and</font>

389
00:17:04,519 --> 00:17:10,760
setting<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Easter</font><font color="#E5E5E5"> so for example</font><font color="#CCCCCC"> of one</font>

390
00:17:08,539 --> 00:17:13,789
paper put a<font color="#CCCCCC"> breakpoint all</font><font color="#E5E5E5"> we have to do</font>

391
00:17:10,760 --> 00:17:16,519
is the client have to send a request to

392
00:17:13,789 --> 00:17:17,419
read<font color="#CCCCCC"> four bytes</font><font color="#E5E5E5"> and can ask for one bite</font>

393
00:17:16,519 --> 00:17:20,449
at a time

394
00:17:17,419 --> 00:17:23,750
save it on the side and then he writes

395
00:17:20,449 --> 00:17:26,569
<font color="#CCCCCC">for bites that says</font><font color="#E5E5E5"> break and continue</font>

396
00:17:23,750 --> 00:17:27,980
execution<font color="#CCCCCC"> is</font><font color="#E5E5E5"> how the</font><font color="#CCCCCC"> pseudocode we look</font>

397
00:17:26,569 --> 00:17:30,590
like

398
00:17:27,980 --> 00:17:34,519
<font color="#E5E5E5">so you can see just read the original</font>

399
00:17:30,590 --> 00:17:35,610
data and<font color="#CCCCCC"> writes for bites</font><font color="#E5E5E5"> and to the</font>

400
00:17:34,519 --> 00:17:38,940
program

401
00:17:35,610 --> 00:17:40,530
and whenever<font color="#CCCCCC"> it in color</font><font color="#E5E5E5"> a breakpoint</font><font color="#CCCCCC"> it</font>

402
00:17:38,940 --> 00:17:42,540
checks if the<font color="#E5E5E5"> breakpoint the exception</font>

403
00:17:40,530 --> 00:17:45,540
actually happened on the same<font color="#CCCCCC"> edge that</font>

404
00:17:42,540 --> 00:17:47,190
we put a<font color="#CCCCCC"> breakpoint on</font><font color="#E5E5E5"> and if so then it</font>

405
00:17:45,540 --> 00:17:49,110
restores the original data that was

406
00:17:47,190 --> 00:17:52,950
<font color="#E5E5E5">there</font><font color="#CCCCCC"> the same instruction and continue</font>

407
00:17:49,110 --> 00:17:53,729
execution<font color="#E5E5E5"> so I wrote the server pretty</font>

408
00:17:52,950 --> 00:17:56,370
quickly

409
00:17:53,730 --> 00:18:00,450
mostly in<font color="#E5E5E5"> see some assembly for the more</font>

410
00:17:56,370 --> 00:18:02,489
low-level<font color="#CCCCCC"> part the clients was written</font>

411
00:18:00,450 --> 00:18:04,020
in<font color="#CCCCCC"> python because it</font><font color="#E5E5E5"> makes sense because</font>

412
00:18:02,490 --> 00:18:06,270
<font color="#CCCCCC">from my computer</font>

413
00:18:04,020 --> 00:18:09,418
<font color="#CCCCCC">um but it</font><font color="#E5E5E5"> still need to find a way to</font>

414
00:18:06,270 --> 00:18:11,700
put the server on the box itself because

415
00:18:09,419 --> 00:18:13,830
having<font color="#E5E5E5"> it on my computer</font>

416
00:18:11,700 --> 00:18:16,740
it's nice and all but doesn't help me a

417
00:18:13,830 --> 00:18:20,070
lot<font color="#E5E5E5"> so if you remember this piece of</font>

418
00:18:16,740 --> 00:18:22,470
code<font color="#E5E5E5"> if UD any key which is actually not</font>

419
00:18:20,070 --> 00:18:24,629
<font color="#CCCCCC">the</font><font color="#E5E5E5"> any key</font><font color="#CCCCCC"> but specifically don't</font>

420
00:18:22,470 --> 00:18:28,590
remember which one<font color="#CCCCCC"> then you</font><font color="#E5E5E5"> get a pretty</font>

421
00:18:24,630 --> 00:18:32,250
sophisticated menu<font color="#CCCCCC"> it's a boot boot menu</font>

422
00:18:28,590 --> 00:18:35,399
like and it lets you using the USB

423
00:18:32,250 --> 00:18:37,410
on-the-go<font color="#CCCCCC"> port</font><font color="#E5E5E5"> that they have to upload</font>

424
00:18:35,400 --> 00:18:42,059
<font color="#CCCCCC">any binary that you want into the memory</font>

425
00:18:37,410 --> 00:18:44,880
of the device and run it so<font color="#CCCCCC"> i took the</font>

426
00:18:42,059 --> 00:18:47,399
<font color="#CCCCCC">femur that managed</font><font color="#E5E5E5"> um</font><font color="#CCCCCC"> 24 match the</font>

427
00:18:44,880 --> 00:18:49,380
exception vector 2.2 my debugger server

428
00:18:47,400 --> 00:18:53,190
code that just put at the end of the

429
00:18:49,380 --> 00:18:56,070
<font color="#E5E5E5">summer and</font><font color="#CCCCCC"> I did something called my</font>

430
00:18:53,190 --> 00:18:59,429
control<font color="#CCCCCC"> C and</font><font color="#E5E5E5"> absolute the device now</font>

431
00:18:56,070 --> 00:19:01,799
what exactly is my control<font color="#CCCCCC"> see you know</font>

432
00:18:59,429 --> 00:19:04,919
that when you debug a program<font color="#E5E5E5"> you can</font>

433
00:19:01,799 --> 00:19:08,190
press<font color="#CCCCCC"> ctrl c and it stops you can</font><font color="#E5E5E5"> start</font>

434
00:19:04,919 --> 00:19:12,150
<font color="#E5E5E5">messing around with</font><font color="#CCCCCC"> gdb</font><font color="#E5E5E5"> right all right</font>

435
00:19:08,190 --> 00:19:14,490
<font color="#CCCCCC">get right I guess so everyone to have</font>

436
00:19:12,150 --> 00:19:17,970
the same ability to do this on the box

437
00:19:14,490 --> 00:19:20,940
itself<font color="#CCCCCC"> now</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> is in</font><font color="#E5E5E5"> the keyboard but</font>

438
00:19:17,970 --> 00:19:22,320
what I do have is a remote control so<font color="#CCCCCC"> I</font>

439
00:19:20,940 --> 00:19:24,570
<font color="#CCCCCC">reversed for a while and found the</font>

440
00:19:22,320 --> 00:19:26,370
function<font color="#CCCCCC"> that</font><font color="#E5E5E5"> responsible</font><font color="#CCCCCC"> for the volume</font>

441
00:19:24,570 --> 00:19:28,740
up when you press<font color="#CCCCCC"> volume up on the</font>

442
00:19:26,370 --> 00:19:30,809
remote control then this function gets

443
00:19:28,740 --> 00:19:33,120
called<font color="#CCCCCC"> all I had to do just place a</font>

444
00:19:30,809 --> 00:19:35,820
<font color="#CCCCCC">break point</font><font color="#E5E5E5"> on it and now whenever you</font>

445
00:19:33,120 --> 00:19:38,668
press volume up<font color="#CCCCCC"> you get this on my</font>

446
00:19:35,820 --> 00:19:40,260
computer<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the actual debugger</font>

447
00:19:38,669 --> 00:19:43,410
code running my computer you can see all

448
00:19:40,260 --> 00:19:44,640
the<font color="#E5E5E5"> resistors and you can start</font><font color="#CCCCCC"> standing</font>

449
00:19:43,410 --> 00:19:48,750
<font color="#E5E5E5">the bag messages</font><font color="#CCCCCC"> too</font>

450
00:19:44,640 --> 00:19:51,600
<font color="#E5E5E5">using this console</font><font color="#CCCCCC"> it's made of a mix of</font>

451
00:19:48,750 --> 00:19:55,440
<font color="#CCCCCC">gdp</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> windy but</font><font color="#E5E5E5"> commands the one like</font>

452
00:19:51,600 --> 00:19:58,110
from each<font color="#CCCCCC"> of those buggers</font><font color="#E5E5E5"> and it worked</font>

453
00:19:55,440 --> 00:20:01,320
<font color="#E5E5E5">and</font><font color="#CCCCCC"> i'm not i can actually start working</font>

454
00:19:58,110 --> 00:20:04,139
on what I want to do so like<font color="#CCCCCC"> i said i</font>

455
00:20:01,320 --> 00:20:06,240
need to hack it like<font color="#E5E5E5"> add another goal of</font>

456
00:20:04,140 --> 00:20:08,880
building an embedded debugger because it

457
00:20:06,240 --> 00:20:10,770
was the first time for me so<font color="#CCCCCC"> i</font><font color="#E5E5E5"> added</font>

458
00:20:08,880 --> 00:20:15,930
<font color="#E5E5E5">then something else or some other thing</font>

459
00:20:10,770 --> 00:20:21,330
but it's time to find the back<font color="#E5E5E5"> so what</font>

460
00:20:15,930 --> 00:20:25,410
exactly is<font color="#CCCCCC"> deputy</font><font color="#E5E5E5"> so I read</font><font color="#CCCCCC"> the X</font>

461
00:20:21,330 --> 00:20:27,360
<font color="#CCCCCC">Emmanuel and dvds hundreds of highly</font>

462
00:20:25,410 --> 00:20:29,790
technical implementation<font color="#CCCCCC"> related data</font>

463
00:20:27,360 --> 00:20:30,870
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> four pages of abbreviations that</font>

464
00:20:29,790 --> 00:20:32,970
the start

465
00:20:30,870 --> 00:20:36,419
<font color="#E5E5E5">graphs that</font><font color="#CCCCCC"> don't understand everything</font>

466
00:20:32,970 --> 00:20:38,250
is called tables for some weird reason<font color="#E5E5E5"> i</font>

467
00:20:36,420 --> 00:20:39,960
call them packets because it's easier

468
00:20:38,250 --> 00:20:42,360
for me to understand that in packet

469
00:20:39,960 --> 00:20:44,940
forms and they're actually pretty

470
00:20:42,360 --> 00:20:48,030
documented and somebody had to make a

471
00:20:44,940 --> 00:20:51,030
mistake when implementing this thing

472
00:20:48,030 --> 00:20:54,149
the question is where now this is the

473
00:20:51,030 --> 00:20:55,950
protocol by me<font color="#CCCCCC"> i</font><font color="#E5E5E5"> tried reading the</font><font color="#CCCCCC"> SC</font>

474
00:20:54,150 --> 00:20:59,430
that<font color="#CCCCCC"> European telecommunications</font>

475
00:20:55,950 --> 00:21:01,980
standards Institute<font color="#CCCCCC"> manual winner</font>

476
00:20:59,430 --> 00:21:03,870
<font color="#E5E5E5">something</font><font color="#CCCCCC"> they I think they</font><font color="#E5E5E5"> did it on</font>

477
00:21:01,980 --> 00:21:06,919
purpose<font color="#CCCCCC"> to try to write it in a language</font>

478
00:21:03,870 --> 00:21:10,158
<font color="#CCCCCC">that nobody will understand</font>

479
00:21:06,919 --> 00:21:13,100
and<font color="#CCCCCC"> i interrupting</font>

480
00:21:10,159 --> 00:21:14,779
so wasn't really sure where to start<font color="#E5E5E5"> so</font>

481
00:21:13,100 --> 00:21:17,119
<font color="#CCCCCC">I thought well maybe I can</font><font color="#E5E5E5"> learn really</font>

482
00:21:14,779 --> 00:21:19,129
good about the<font color="#CCCCCC"> BBT could really focus on</font>

483
00:21:17,119 --> 00:21:21,709
it and maybe we could find a soft spot

484
00:21:19,129 --> 00:21:22,879
the place in the protocol that is prone

485
00:21:21,710 --> 00:21:25,100
to problems

486
00:21:22,879 --> 00:21:27,559
<font color="#CCCCCC">um</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I need to learn really good about</font>

487
00:21:25,100 --> 00:21:29,299
protocol before doing it<font color="#CCCCCC"> maybe could</font>

488
00:21:27,559 --> 00:21:31,549
<font color="#E5E5E5">start with that is the parts packets</font><font color="#CCCCCC"> the</font>

489
00:21:29,299 --> 00:21:33,619
one the simplest one<font color="#E5E5E5"> packets</font><font color="#CCCCCC"> means</font>

490
00:21:31,549 --> 00:21:36,799
<font color="#CCCCCC">tables somebody actually understand the</font>

491
00:21:33,619 --> 00:21:38,840
protocol here<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> find these</font>

492
00:21:36,799 --> 00:21:40,879
<font color="#CCCCCC">two parts one</font><font color="#E5E5E5"> and it will help me to</font>

493
00:21:38,840 --> 00:21:43,999
<font color="#E5E5E5">gain</font><font color="#CCCCCC"> better understanding of the program</font>

494
00:21:40,879 --> 00:21:47,509
<font color="#CCCCCC">i could go right away for the most</font>

495
00:21:43,999 --> 00:21:49,730
complicated one to be more<font color="#CCCCCC"> more</font>

496
00:21:47,509 --> 00:21:51,799
reversing work hard reversing work but

497
00:21:49,730 --> 00:21:55,279
<font color="#E5E5E5">somebody had to mess them up because</font>

498
00:21:51,799 --> 00:21:57,320
it's a pretty complicated protocol or

499
00:21:55,279 --> 00:22:01,580
can do<font color="#E5E5E5"> fuzzing because everybody</font><font color="#CCCCCC"> that's</font>

500
00:21:57,320 --> 00:22:04,158
<font color="#CCCCCC">causing now</font><font color="#E5E5E5"> so far during fasting and</font><font color="#CCCCCC"> i</font>

501
00:22:01,580 --> 00:22:08,059
started by placing a low-level hook with

502
00:22:04,159 --> 00:22:10,609
my debugger<font color="#CCCCCC"> so it's finally funny had to</font>

503
00:22:08,059 --> 00:22:12,350
use it on a packet<font color="#CCCCCC"> that they call it</font>

504
00:22:10,609 --> 00:22:14,749
<font color="#E5E5E5">package</font><font color="#CCCCCC"> received</font><font color="#E5E5E5"> and that was the lowest</font>

505
00:22:12,350 --> 00:22:18,199
part in the<font color="#CCCCCC"> femur that they found that</font>

506
00:22:14,749 --> 00:22:20,929
actually<font color="#CCCCCC"> talk to</font><font color="#E5E5E5"> the radio device in the</font>

507
00:22:18,200 --> 00:22:24,109
box itself in the receiver this is what

508
00:22:20,929 --> 00:22:26,179
actually takes the binary data that came

509
00:22:24,109 --> 00:22:29,539
from the air and send it to the other

510
00:22:26,179 --> 00:22:31,549
parts of the device<font color="#E5E5E5"> so place the</font>

511
00:22:29,539 --> 00:22:34,879
<font color="#E5E5E5">low-level hook on it and now</font><font color="#CCCCCC"> i can</font>

512
00:22:31,549 --> 00:22:36,019
control<font color="#E5E5E5"> the data coming from the device</font>

513
00:22:34,879 --> 00:22:37,369
because<font color="#CCCCCC"> I</font><font color="#E5E5E5"> could just change it to</font>

514
00:22:36,019 --> 00:22:40,159
whatever<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> and can do all the</font>

515
00:22:37,369 --> 00:22:42,049
<font color="#CCCCCC">fighting attempts from my laptop and</font>

516
00:22:40,159 --> 00:22:44,509
it's easier than trying to transmit<font color="#CCCCCC"> it</font>

517
00:22:42,049 --> 00:22:47,720
using the<font color="#CCCCCC"> usrp or</font><font color="#E5E5E5"> hacker efforts</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> like</font>

518
00:22:44,509 --> 00:22:50,690
that and way faster

519
00:22:47,720 --> 00:22:53,269
<font color="#CCCCCC">I thought</font><font color="#E5E5E5"> of using some generic father</font>

520
00:22:50,690 --> 00:22:54,859
for the mutation generating<font color="#E5E5E5"> you only</font>

521
00:22:53,269 --> 00:22:57,799
have<font color="#E5E5E5"> two files around 20 different</font>

522
00:22:54,859 --> 00:23:00,408
tables and all<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to do is to make</font>

523
00:22:57,799 --> 00:23:04,129
sure that the<font color="#CCCCCC"> secrecy</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> ok at the end</font>

524
00:23:00,409 --> 00:23:05,389
<font color="#E5E5E5">and this helped</font><font color="#CCCCCC"> a kid</font><font color="#E5E5E5"> looks like you can</font>

525
00:23:04,129 --> 00:23:07,668
see there is a lot of binary data

526
00:23:05,389 --> 00:23:10,428
<font color="#CCCCCC">floating around there seriously in</font><font color="#E5E5E5"> the</font>

527
00:23:07,669 --> 00:23:12,100
end<font color="#E5E5E5"> you just</font><font color="#CCCCCC"> have to make sure</font><font color="#E5E5E5"> it's it's</font>

528
00:23:10,429 --> 00:23:14,679
legit

529
00:23:12,100 --> 00:23:17,260
<font color="#E5E5E5">because</font><font color="#CCCCCC"> the result data to mess around</font>

530
00:23:14,679 --> 00:23:23,710
with section in<font color="#CCCCCC"> this index</font><font color="#E5E5E5"> indicator</font>

531
00:23:17,260 --> 00:23:25,059
<font color="#CCCCCC">reserve</font><font color="#E5E5E5"> that something so</font><font color="#CCCCCC"> I had</font>

532
00:23:23,710 --> 00:23:28,179
something to work with

533
00:23:25,059 --> 00:23:31,178
so if you want to<font color="#CCCCCC"> find</font><font color="#E5E5E5"> you can just run</font>

534
00:23:28,179 --> 00:23:34,360
this command and send it to<font color="#E5E5E5"> the debugger</font>

535
00:23:31,179 --> 00:23:38,049
to<font color="#E5E5E5"> place data</font><font color="#CCCCCC"> so what you see here is</font>

536
00:23:34,360 --> 00:23:40,059
just a packet being sent and it's

537
00:23:38,049 --> 00:23:42,490
changed<font color="#E5E5E5"> for and</font><font color="#CCCCCC"> I only</font><font color="#E5E5E5"> change one</font>

538
00:23:40,059 --> 00:23:46,299
<font color="#E5E5E5">percent of it at</font><font color="#CCCCCC"> a time to make it like</font>

539
00:23:42,490 --> 00:23:50,470
solid so one breaking up<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> helped</font>

540
00:23:46,299 --> 00:23:53,289
for about 20 seconds<font color="#E5E5E5"> because during the</font>

541
00:23:50,470 --> 00:23:56,500
first<font color="#CCCCCC"> buzzing attempt i started</font>

542
00:23:53,289 --> 00:23:59,408
reversing the easiest function<font color="#E5E5E5"> packet</font>

543
00:23:56,500 --> 00:24:02,860
<font color="#CCCCCC">that could</font><font color="#E5E5E5"> find and found this piece of</font>

544
00:23:59,409 --> 00:24:06,580
code<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> this packet that time off</font>

545
00:24:02,860 --> 00:24:11,110
the table<font color="#E5E5E5"> packet and you can see here</font>

546
00:24:06,580 --> 00:24:14,710
that it's<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> string because it has n</font>

547
00:24:11,110 --> 00:24:17,740
<font color="#E5E5E5">you can put as much of</font><font color="#CCCCCC"> one's</font><font color="#E5E5E5"> n different</font>

548
00:24:14,710 --> 00:24:21,460
descriptors inside of it<font color="#CCCCCC"> and n is</font>

549
00:24:17,740 --> 00:24:23,980
defined as the<font color="#CCCCCC"> descriptor loop length</font>

550
00:24:21,460 --> 00:24:26,049
and it's the size of 12 bits you can put

551
00:24:23,980 --> 00:24:29,559
about<font color="#CCCCCC"> four thousand</font><font color="#E5E5E5"> of those descriptors</font>

552
00:24:26,049 --> 00:24:32,350
inside this packet<font color="#E5E5E5"> and if you look at</font>

553
00:24:29,559 --> 00:24:34,480
how<font color="#CCCCCC"> descriptive</font><font color="#E5E5E5"> looks like then this is</font>

554
00:24:32,350 --> 00:24:36,010
a descriptor<font color="#E5E5E5"> and you can see the</font>

555
00:24:34,480 --> 00:24:38,169
<font color="#CCCCCC">descriptor</font><font color="#E5E5E5"> first of all</font><font color="#CCCCCC"> doesn't have a</font>

556
00:24:36,010 --> 00:24:41,830
seriously in it<font color="#CCCCCC"> that's interesting the</font>

557
00:24:38,169 --> 00:24:44,799
first place and it has an end of itself

558
00:24:41,830 --> 00:24:46,389
that is right from the descriptor length

559
00:24:44,799 --> 00:24:49,600
which is only<font color="#CCCCCC"> eight</font><font color="#E5E5E5"> bits</font>

560
00:24:46,390 --> 00:24:52,720
now you can send a pretty large packet

561
00:24:49,600 --> 00:24:55,959
<font color="#E5E5E5">this way over there and when it came</font>

562
00:24:52,720 --> 00:24:58,840
time to implement that the writers of

563
00:24:55,960 --> 00:25:01,360
this specific code<font color="#CCCCCC"> decide</font><font color="#E5E5E5"> that n is</font>

564
00:24:58,840 --> 00:25:04,899
always equal to<font color="#CCCCCC"> one</font><font color="#E5E5E5"> for some weird</font>

565
00:25:01,360 --> 00:25:06,850
reason<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is the descriptor this</font>

566
00:25:04,900 --> 00:25:09,490
destructive how it's supposed to look in

567
00:25:06,850 --> 00:25:12,189
memory<font color="#CCCCCC"> they decide that n is always one</font>

568
00:25:09,490 --> 00:25:14,919
so instead of having a dynamic<font color="#E5E5E5"> sighs</font>

569
00:25:12,190 --> 00:25:17,860
it's always a static<font color="#CCCCCC"> sighs of</font><font color="#E5E5E5"> 15</font><font color="#CCCCCC"> bites</font>

570
00:25:14,919 --> 00:25:20,890
because<font color="#CCCCCC"> who needs more data and</font>

571
00:25:17,860 --> 00:25:23,469
<font color="#CCCCCC">I honestly</font><font color="#E5E5E5"> don't know what this funk</font>

572
00:25:20,890 --> 00:25:27,549
what this descriptor has to do but it

573
00:25:23,470 --> 00:25:29,890
doesn't but not supposed<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and</font>

574
00:25:27,549 --> 00:25:32,320
this<font color="#E5E5E5"> is we can say this is the code that</font>

575
00:25:29,890 --> 00:25:36,370
<font color="#CCCCCC">they wrote it's like absolutely</font><font color="#E5E5E5"> love it</font>

576
00:25:32,320 --> 00:25:39,129
<font color="#E5E5E5">and they actually check that the</font>

577
00:25:36,370 --> 00:25:40,899
<font color="#CCCCCC">description</font><font color="#E5E5E5"> lieutenant is more than</font><font color="#CCCCCC"> zero</font>

578
00:25:39,130 --> 00:25:43,000
but they're all trying to<font color="#CCCCCC"> fall apart the</font>

579
00:25:40,900 --> 00:25:44,830
first descriptor<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you're thinking</font>

580
00:25:43,000 --> 00:25:47,140
that the descriptor is<font color="#CCCCCC"> instead excites</font>

581
00:25:44,830 --> 00:25:49,840
you<font color="#E5E5E5"> can see that</font><font color="#CCCCCC"> they're allocate</font><font color="#E5E5E5"> struck</font>

582
00:25:47,140 --> 00:25:52,750
down<font color="#E5E5E5"> the street on the stack itself in</font>

583
00:25:49,840 --> 00:25:55,659
the size of<font color="#E5E5E5"> 15</font><font color="#CCCCCC"> bites for the descriptor</font>

584
00:25:52,750 --> 00:25:57,730
<font color="#E5E5E5">but they're reading a dynamic</font><font color="#CCCCCC"> size from</font>

585
00:25:55,660 --> 00:26:00,220
<font color="#E5E5E5">the my</font><font color="#CCCCCC"> part time</font><font color="#E5E5E5"> off the descriptor</font>

586
00:25:57,730 --> 00:26:05,350
function because the internal function

587
00:26:00,220 --> 00:26:07,330
actually try to send back and then<font color="#CCCCCC"> I'm</font>

588
00:26:05,350 --> 00:26:09,879
<font color="#E5E5E5">excited for the scripture itself</font><font color="#CCCCCC"> so</font>

589
00:26:07,330 --> 00:26:11,918
<font color="#E5E5E5">again a pretty basic stackoverflow</font>

590
00:26:09,880 --> 00:26:14,740
<font color="#E5E5E5">pretty simple one</font>

591
00:26:11,919 --> 00:26:15,880
now<font color="#E5E5E5"> we found the bug</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> simple and</font>

592
00:26:14,740 --> 00:26:18,160
you can find the exact<font color="#CCCCCC"> same</font>

593
00:26:15,880 --> 00:26:20,440
<font color="#CCCCCC">vulnerability</font><font color="#E5E5E5"> almost anywhere where the</font>

594
00:26:18,160 --> 00:26:24,460
fact that<font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to have more than</font>

595
00:26:20,440 --> 00:26:26,530
<font color="#CCCCCC">five</font><font color="#E5E5E5"> antennas in in an area and</font><font color="#CCCCCC"> the only</font>

596
00:26:24,460 --> 00:26:28,480
allocate enough data for the amount<font color="#CCCCCC"> that</font>

597
00:26:26,530 --> 00:26:31,210
the<font color="#E5E5E5"> fact that somebody will ever send</font>

598
00:26:28,480 --> 00:26:33,340
<font color="#CCCCCC">I'm it's a pretty common mistake</font><font color="#E5E5E5"> that</font>

599
00:26:31,210 --> 00:26:36,700
they had all over the code<font color="#E5E5E5"> but this is</font>

600
00:26:33,340 --> 00:26:39,070
the<font color="#CCCCCC"> 1i decide</font><font color="#E5E5E5"> to exploit because of this</font>

601
00:26:36,700 --> 00:26:41,830
piece of code

602
00:26:39,070 --> 00:26:48,070
did anyone here ever try to exploit<font color="#E5E5E5"> a</font>

603
00:26:41,830 --> 00:26:50,230
<font color="#E5E5E5">miscibility on</font><font color="#CCCCCC"> my lips no alright</font><font color="#E5E5E5"> so if</font>

604
00:26:48,070 --> 00:26:52,480
you ever<font color="#CCCCCC"> try to</font><font color="#E5E5E5"> do it then you know that</font>

605
00:26:50,230 --> 00:26:55,540
<font color="#E5E5E5">this piece of code says that</font><font color="#CCCCCC"> everything</font>

606
00:26:52,480 --> 00:26:57,700
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> because usually on nice</font>

607
00:26:55,540 --> 00:26:59,980
<font color="#E5E5E5">when you call function then you get the</font>

608
00:26:57,700 --> 00:27:02,679
return address<font color="#CCCCCC"> not</font><font color="#E5E5E5"> on the stack like you</font>

609
00:26:59,980 --> 00:27:06,160
have on x86<font color="#CCCCCC"> but on a space</font><font color="#E5E5E5"> on a specific</font>

610
00:27:02,679 --> 00:27:09,190
<font color="#CCCCCC">easter called ra the return address</font><font color="#E5E5E5"> but</font>

611
00:27:06,160 --> 00:27:11,710
here they actually put the return

612
00:27:09,190 --> 00:27:13,090
address on the stack and we can control

613
00:27:11,710 --> 00:27:13,990
the<font color="#CCCCCC"> stack because</font><font color="#E5E5E5"> we have a stack</font>

614
00:27:13,090 --> 00:27:15,309
overflow

615
00:27:13,990 --> 00:27:16,660
<font color="#E5E5E5">so you can see on the first</font><font color="#CCCCCC"> lock that</font>

616
00:27:15,309 --> 00:27:18,850
<font color="#E5E5E5">we're reading their generators from the</font>

617
00:27:16,660 --> 00:27:21,669
stack<font color="#E5E5E5"> so we can control the flow of the</font>

618
00:27:18,850 --> 00:27:24,459
program<font color="#E5E5E5"> and this is what we want to have</font>

619
00:27:21,669 --> 00:27:27,130
<font color="#E5E5E5">and because</font><font color="#CCCCCC"> it's makes intimate and</font>

620
00:27:24,460 --> 00:27:28,210
<font color="#E5E5E5">better device you have no is larger you</font>

621
00:27:27,130 --> 00:27:30,670
have no<font color="#CCCCCC"> nxb</font>

622
00:27:28,210 --> 00:27:35,320
it is really fun<font color="#E5E5E5"> pretty simple to</font>

623
00:27:30,670 --> 00:27:39,010
<font color="#E5E5E5">exploit like</font><font color="#CCCCCC"> exploitation 101</font><font color="#E5E5E5"> every</font>

624
00:27:35,320 --> 00:27:40,570
tutorial that you ever took<font color="#CCCCCC"> and</font><font color="#E5E5E5"> all we</font>

625
00:27:39,010 --> 00:27:46,300
<font color="#CCCCCC">have to do is</font><font color="#E5E5E5"> something like a jump to</font>

626
00:27:40,570 --> 00:27:49,899
SP and on this specific<font color="#CCCCCC"> cpu</font><font color="#E5E5E5"> they</font>

627
00:27:46,300 --> 00:27:51,399
<font color="#E5E5E5">disabled the caching so the instruction</font>

628
00:27:49,900 --> 00:27:54,100
cache and data cache the only real

629
00:27:51,400 --> 00:27:57,070
problem that you have on<font color="#CCCCCC"> maple</font><font color="#E5E5E5"> devices</font>

630
00:27:54,100 --> 00:27:59,439
<font color="#CCCCCC">only thing that can actually destroy</font>

631
00:27:57,070 --> 00:28:01,210
your<font color="#CCCCCC"> explanation</font><font color="#E5E5E5"> doesn't even exist here</font>

632
00:27:59,440 --> 00:28:03,400
<font color="#CCCCCC">it's like</font><font color="#E5E5E5"> the easiest explanation</font><font color="#CCCCCC"> that</font>

633
00:28:01,210 --> 00:28:05,890
can have<font color="#CCCCCC"> so it would look something like</font>

634
00:28:03,400 --> 00:28:08,680
this<font color="#E5E5E5"> you just return to your shellcode</font>

635
00:28:05,890 --> 00:28:12,640
that you know<font color="#CCCCCC"> where it is and</font><font color="#E5E5E5"> it's</font>

636
00:28:08,680 --> 00:28:17,350
pretty simple<font color="#E5E5E5"> explanation work in two</font>

637
00:28:12,640 --> 00:28:19,660
minutes and<font color="#CCCCCC"> i bought</font><font color="#E5E5E5"> an RF couple months</font>

638
00:28:17,350 --> 00:28:21,669
ago<font color="#CCCCCC"> had to smuggle it for the airport</font>

639
00:28:19,660 --> 00:28:25,480
<font color="#E5E5E5">and that was the first time</font><font color="#CCCCCC"> customers</font>

640
00:28:21,670 --> 00:28:27,700
actually<font color="#CCCCCC"> arrested me</font><font color="#E5E5E5"> but look for drugs</font>

641
00:28:25,480 --> 00:28:30,310
that day so they open this thing which

642
00:28:27,700 --> 00:28:32,230
is legal<font color="#CCCCCC"> Israel</font><font color="#E5E5E5"> check that they don't</font>

643
00:28:30,310 --> 00:28:35,320
have drugs in the box and give it to me

644
00:28:32,230 --> 00:28:39,250
back<font color="#E5E5E5"> the first time in hundreds of</font>

645
00:28:35,320 --> 00:28:41,379
<font color="#E5E5E5">flights</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> ever check me and you</font>

646
00:28:39,250 --> 00:28:44,830
consider<font color="#E5E5E5"> it a lot of implementation</font>

647
00:28:41,380 --> 00:28:48,700
<font color="#E5E5E5">online for</font><font color="#CCCCCC"> a good new radio that help</font>

648
00:28:44,830 --> 00:28:51,639
<font color="#E5E5E5">you send</font><font color="#CCCCCC"> the DVP ABT packets or tables</font>

649
00:28:48,700 --> 00:28:55,060
or just<font color="#CCCCCC"> streaming over</font><font color="#E5E5E5"> the air and you</font>

650
00:28:51,640 --> 00:28:58,060
can send this exact same<font color="#E5E5E5"> vulnerability</font><font color="#CCCCCC"> I</font>

651
00:28:55,060 --> 00:28:59,679
<font color="#CCCCCC">try to</font><font color="#E5E5E5"> do it on the lowest power</font>

652
00:28:58,060 --> 00:29:02,139
<font color="#CCCCCC">actually I could do because they want to</font>

653
00:28:59,680 --> 00:29:05,350
destroy all the receivers for my

654
00:29:02,140 --> 00:29:06,310
neighbors<font color="#E5E5E5"> now this thing is pretty</font>

655
00:29:05,350 --> 00:29:08,980
stupid

656
00:29:06,310 --> 00:29:14,020
it doesn't do a lot<font color="#E5E5E5"> it can transmit</font>

657
00:29:08,980 --> 00:29:16,510
anything yet<font color="#E5E5E5"> so if you exploit this then</font>

658
00:29:14,020 --> 00:29:19,570
you can actually know that you<font color="#CCCCCC"> managed</font>

659
00:29:16,510 --> 00:29:21,400
to<font color="#E5E5E5"> have somebody you can start putting</font>

660
00:29:19,570 --> 00:29:24,070
your own broadcast if you want you can

661
00:29:21,400 --> 00:29:27,130
send your own commercials<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can make</font>

662
00:29:24,070 --> 00:29:30,159
somebody's life miserable<font color="#E5E5E5"> with that but</font>

663
00:29:27,130 --> 00:29:33,100
not more than that but<font color="#CCCCCC"> I'm actually</font>

664
00:29:30,160 --> 00:29:34,660
<font color="#E5E5E5">starting to look at this</font><font color="#CCCCCC"> it's the new TV</font>

665
00:29:33,100 --> 00:29:38,949
<font color="#CCCCCC">i bought and it's connected to this</font>

666
00:29:34,660 --> 00:29:44,289
receiver in my living room<font color="#E5E5E5"> and</font>

667
00:29:38,950 --> 00:29:46,299
<font color="#E5E5E5">now you can actually start from this</font>

668
00:29:44,289 --> 00:29:49,779
<font color="#CCCCCC">within</font><font color="#E5E5E5"> take over here you can maybe</font>

669
00:29:46,299 --> 00:29:51,940
<font color="#E5E5E5">attack this television which run</font><font color="#CCCCCC"> ties in</font>

670
00:29:49,779 --> 00:29:55,269
operation system which doesn't look very

671
00:29:51,940 --> 00:29:57,200
good for this time of being<font color="#E5E5E5"> thank you</font>

672
00:29:55,269 --> 00:30:03,339
<font color="#E5E5E5">very much</font>

673
00:29:57,200 --> 00:30:03,339
[Applause]

