1
00:00:00,030 --> 00:00:06,150
my name is kasnian I was I work as

2
00:00:03,959 --> 00:00:07,770
application security engineer for ax way

3
00:00:06,150 --> 00:00:11,040
and I do a little bit of security

4
00:00:07,770 --> 00:00:13,889
research in my little spare time it's my

5
00:00:11,040 --> 00:00:17,599
first time as a speaker at Def camp and

6
00:00:13,889 --> 00:00:22,650
I have to say that I'm nervous as hell

7
00:00:17,600 --> 00:00:25,590
today I'm gonna tell you a story but

8
00:00:22,650 --> 00:00:34,019
before we start how many of you are

9
00:00:25,590 --> 00:00:35,719
driving the Honda two three I bet you're

10
00:00:34,020 --> 00:00:40,790
more than that but anyways

11
00:00:35,719 --> 00:00:40,790
have you ever tried to hack your Honda

12
00:00:41,000 --> 00:00:48,870
alright cool

13
00:00:45,809 --> 00:00:50,218
I have good news and bad news the good

14
00:00:48,870 --> 00:00:52,199
news is that is that after this

15
00:00:50,219 --> 00:00:56,250
presentation you will be able to hack

16
00:00:52,199 --> 00:00:58,440
your Honda really it's no joke the bad

17
00:00:56,250 --> 00:01:03,650
news is that I have 46 slides so you

18
00:00:58,440 --> 00:01:08,250
will probably get bored all right so

19
00:01:03,650 --> 00:01:09,840
yeah as I said you will be able to hack

20
00:01:08,250 --> 00:01:11,939
your hold up and nothing's to me but

21
00:01:09,840 --> 00:01:15,600
thanks to the guy who published this

22
00:01:11,939 --> 00:01:18,869
site I don't know if you can see it it's

23
00:01:15,600 --> 00:01:22,979
Auto hack that work route your Honda

24
00:01:18,869 --> 00:01:24,659
head unit and install apps freely as you

25
00:01:22,979 --> 00:01:26,580
probably imagine I draw the Honda I'm

26
00:01:24,659 --> 00:01:30,329
very I'm very proud of it Honda Civic

27
00:01:26,580 --> 00:01:33,750
2018 I found this site I was and I was

28
00:01:30,329 --> 00:01:35,820
so really excited of course the first

29
00:01:33,750 --> 00:01:39,960
thing I did I clicked on civic 10th

30
00:01:35,820 --> 00:01:43,619
generation that led me to this

31
00:01:39,960 --> 00:01:45,929
instruction page connect your head you

32
00:01:43,619 --> 00:01:48,420
need to internet with Wi-Fi etcetera

33
00:01:45,930 --> 00:01:50,310
launch the browser navigate to that I

34
00:01:48,420 --> 00:01:52,490
was so excited I'd even eat I didn't

35
00:01:50,310 --> 00:01:56,310
even read the rest of the instructions I

36
00:01:52,490 --> 00:01:58,169
just clicked the first link open it in a

37
00:01:56,310 --> 00:02:01,290
new tab in my laptop's browser of course

38
00:01:58,170 --> 00:02:07,320
I wasn't even a car what I got was this

39
00:02:01,290 --> 00:02:10,230
very nice screen saying get start not

40
00:02:07,320 --> 00:02:14,560
get started gets

41
00:02:10,229 --> 00:02:16,299
my car is black by the way so why was

42
00:02:14,560 --> 00:02:19,000
stealing my laptop's browser not in my

43
00:02:16,300 --> 00:02:24,850
car with all that of course I've clicked

44
00:02:19,000 --> 00:02:28,690
on get started please enter the

45
00:02:24,850 --> 00:02:30,010
authorization code and I was like it's

46
00:02:28,690 --> 00:02:32,740
been a while since the last time I've

47
00:02:30,010 --> 00:02:36,070
seen a JavaScript pop-up asking for an

48
00:02:32,740 --> 00:02:37,480
authorization code and I was like what

49
00:02:36,070 --> 00:02:40,959
are the chances this guy is doing

50
00:02:37,480 --> 00:02:43,000
client-side validation hmmm something

51
00:02:40,960 --> 00:02:44,350
something is wrong here

52
00:02:43,000 --> 00:02:53,100
so I've checked the source code of the

53
00:02:44,350 --> 00:02:56,109
page my assumption was partially true

54
00:02:53,100 --> 00:02:59,230
he's not doing full code validation but

55
00:02:56,110 --> 00:03:04,090
he he's doing kind of validation so key

56
00:02:59,230 --> 00:03:06,489
lengths different Intel and I was like

57
00:03:04,090 --> 00:03:13,450
what are the chances those characters to

58
00:03:06,490 --> 00:03:16,300
be only digits we'll see so at this

59
00:03:13,450 --> 00:03:19,810
moment my only goal was to put my hands

60
00:03:16,300 --> 00:03:22,300
on the apk file that I thought it stored

61
00:03:19,810 --> 00:03:25,390
somewhere in on the server right so I

62
00:03:22,300 --> 00:03:30,310
had so I could bypass this authorization

63
00:03:25,390 --> 00:03:32,679
code and get the application link I

64
00:03:30,310 --> 00:03:34,810
thought I will go to my cart navigate

65
00:03:32,680 --> 00:03:37,570
from the browser to the application link

66
00:03:34,810 --> 00:03:41,920
and it will install boom so easy it

67
00:03:37,570 --> 00:03:43,600
wasn't that easy so what I did I just

68
00:03:41,920 --> 00:03:47,829
started one of my favorite tools derp

69
00:03:43,600 --> 00:03:51,340
the short version from there buster

70
00:03:47,830 --> 00:03:53,530
probably you are familiar with it it's a

71
00:03:51,340 --> 00:03:55,810
quick it's command line it provides

72
00:03:53,530 --> 00:03:58,600
great results even with the default

73
00:03:55,810 --> 00:04:00,310
default word list and I've tried to

74
00:03:58,600 --> 00:04:03,880
highlight here the first three results

75
00:04:00,310 --> 00:04:07,510
that caught my eye slash profile slash

76
00:04:03,880 --> 00:04:13,590
test slash download can you guess which

77
00:04:07,510 --> 00:04:13,590
one I've tried first easy guess

78
00:04:14,340 --> 00:04:20,790
I wasn't so lucky with the download /

79
00:04:17,940 --> 00:04:24,419
profile instead was more generous I got

80
00:04:20,790 --> 00:04:27,630
this nice login form of course what I

81
00:04:24,419 --> 00:04:30,750
did I try the classic combinations admin

82
00:04:27,630 --> 00:04:33,000
admin admin pass or one two three with

83
00:04:30,750 --> 00:04:41,220
no luck but I had even something better

84
00:04:33,000 --> 00:04:42,750
and I'll make a few steps register I was

85
00:04:41,220 --> 00:04:47,610
like there's no way this register link

86
00:04:42,750 --> 00:04:49,770
to be functional but it was I created an

87
00:04:47,610 --> 00:04:54,720
account with a random generated email

88
00:04:49,770 --> 00:04:57,630
address which provided me with a limited

89
00:04:54,720 --> 00:04:59,570
account though so I did still didn't

90
00:04:57,630 --> 00:05:02,850
have access to what I was interested in

91
00:04:59,570 --> 00:05:04,620
resources were unavailable I was kind of

92
00:05:02,850 --> 00:05:12,150
disappointed this is not me by the way

93
00:05:04,620 --> 00:05:14,850
but the third result the test page gave

94
00:05:12,150 --> 00:05:18,960
me hope because on the bottom of the

95
00:05:14,850 --> 00:05:19,830
page I found this link and I was like

96
00:05:18,960 --> 00:05:26,150
gotcha

97
00:05:19,830 --> 00:05:29,390
I found you but actually it was a no

98
00:05:26,150 --> 00:05:31,710
because that link was dead I got this

99
00:05:29,390 --> 00:05:33,810
disappointing message the point the page

100
00:05:31,710 --> 00:05:36,690
cannot be found but that I thought maybe

101
00:05:33,810 --> 00:05:39,120
that link is outdated maybe he deployed

102
00:05:36,690 --> 00:05:42,479
a new version and he forgot to update

103
00:05:39,120 --> 00:05:46,530
the link so I I was like let's brute

104
00:05:42,479 --> 00:05:49,979
force the link so I pulled out my burp

105
00:05:46,530 --> 00:05:52,799
Rosi burp proxy trying to brute force

106
00:05:49,979 --> 00:05:56,639
the version number this is how I

107
00:05:52,800 --> 00:05:59,340
configured the attack I use the cluster

108
00:05:56,639 --> 00:06:02,340
bomb to replace all the possible

109
00:05:59,340 --> 00:06:06,780
combinations with numbers from 0 to 100

110
00:06:02,340 --> 00:06:12,929
I wasn't successful though I was still

111
00:06:06,780 --> 00:06:16,169
getting 300 and let's see 201 HTTP

112
00:06:12,930 --> 00:06:19,979
response with the same message page

113
00:06:16,169 --> 00:06:21,960
cannot be found but then I remember

114
00:06:19,979 --> 00:06:26,570
about the derp tool that I lifted

115
00:06:21,960 --> 00:06:26,570
running in the background and boom

116
00:06:27,210 --> 00:06:33,188
and I was like are you kidding me I was

117
00:06:30,069 --> 00:06:38,979
trying to brute force the link and it

118
00:06:33,189 --> 00:06:43,240
was actually slash AB / latest of course

119
00:06:38,979 --> 00:06:47,919
I put it in the browser and boom I've

120
00:06:43,240 --> 00:06:49,979
got the download window so I got the apk

121
00:06:47,919 --> 00:06:54,310
and I was like mm-hmm

122
00:06:49,979 --> 00:06:56,889
of course next thing I did I run to my

123
00:06:54,310 --> 00:07:01,689
car open the browser in my car navigate

124
00:06:56,889 --> 00:07:04,719
to that link hoping that it will install

125
00:07:01,689 --> 00:07:07,779
the app of course it didn't work so I

126
00:07:04,719 --> 00:07:10,659
realized I have no way of installing it

127
00:07:07,779 --> 00:07:12,669
without rooting the device so in a way

128
00:07:10,659 --> 00:07:16,449
or another I had to find that

129
00:07:12,669 --> 00:07:20,318
authorization code so I beg I went back

130
00:07:16,449 --> 00:07:21,939
to my starting point the authorization

131
00:07:20,319 --> 00:07:24,129
code remember we established that the

132
00:07:21,939 --> 00:07:26,020
code is 10 characters long so there's a

133
00:07:24,129 --> 00:07:30,669
big chance it contains all the digits

134
00:07:26,020 --> 00:07:33,219
right so there we go

135
00:07:30,669 --> 00:07:36,128
chapter 2 brute-forcing the

136
00:07:33,219 --> 00:07:38,490
authorization code with the almighty app

137
00:07:36,129 --> 00:07:38,490
spider

138
00:07:40,830 --> 00:07:47,589
you really cannot read this right here's

139
00:07:44,830 --> 00:07:51,159
the the request that the app was sending

140
00:07:47,589 --> 00:07:55,810
to the server when when I was clicking

141
00:07:51,159 --> 00:08:01,539
the get start button and what is sending

142
00:07:55,810 --> 00:08:05,469
here it's the key so what I did I

143
00:08:01,539 --> 00:08:07,900
configured the attack to replace the key

144
00:08:05,469 --> 00:08:14,500
with every possible combination from 1 0

145
00:08:07,900 --> 00:08:20,409
0 0 0 to 999 and hit start attack

146
00:08:14,500 --> 00:08:23,349
shortly I had some good news first the

147
00:08:20,409 --> 00:08:26,560
server had no rate limit rate limiting

148
00:08:23,349 --> 00:08:29,889
mekinese or any other kind of defense

149
00:08:26,560 --> 00:08:32,110
mechanism that could I don't know stop

150
00:08:29,889 --> 00:08:36,130
me to perform the brute-force attack and

151
00:08:32,110 --> 00:08:39,250
second I had always the same response

152
00:08:36,130 --> 00:08:40,510
left even the HTTP state status I got

153
00:08:39,250 --> 00:08:42,940
was 200

154
00:08:40,510 --> 00:08:45,189
I have the same always the same response

155
00:08:42,940 --> 00:08:49,240
lengths so it was a big chance that in

156
00:08:45,190 --> 00:08:55,180
case a valid code is found the length

157
00:08:49,240 --> 00:08:58,060
would be different so my assumption was

158
00:08:55,180 --> 00:09:05,050
actually right you can see the results

159
00:08:58,060 --> 00:09:09,819
here I got the first valid code on the

160
00:09:05,050 --> 00:09:13,150
first row like in 84 seconds and the

161
00:09:09,820 --> 00:09:16,480
second one I got it after another like

162
00:09:13,150 --> 00:09:18,699
two and a half hours so at this stage I

163
00:09:16,480 --> 00:09:21,130
had already two validation code this

164
00:09:18,700 --> 00:09:23,770
thing doesn't working I had two

165
00:09:21,130 --> 00:09:31,390
validation valid codes there under the

166
00:09:23,770 --> 00:09:34,000
payload column consider cool okay after

167
00:09:31,390 --> 00:09:36,910
manually validating those code in the

168
00:09:34,000 --> 00:09:40,000
browser I went to the car open the

169
00:09:36,910 --> 00:09:41,890
browser navigated to that link this time

170
00:09:40,000 --> 00:09:44,520
I had the code I entered the code and

171
00:09:41,890 --> 00:09:48,120
you can see on the right hand side my

172
00:09:44,520 --> 00:09:50,410
Civic - with the app honda hat app

173
00:09:48,120 --> 00:09:52,930
installed and running on the left hand

174
00:09:50,410 --> 00:09:57,189
side it's me being so happy about doing

175
00:09:52,930 --> 00:09:59,199
it but the story doesn't end here here's

176
00:09:57,190 --> 00:10:03,400
the features I was actually interested

177
00:09:59,200 --> 00:10:04,810
in required the pro version for the pro

178
00:10:03,400 --> 00:10:07,449
version I need a key

179
00:10:04,810 --> 00:10:09,640
and I didn't had a key so at this stage

180
00:10:07,450 --> 00:10:11,770
I must confess I was more intrigued and

181
00:10:09,640 --> 00:10:13,990
curious about how this guy managed to

182
00:10:11,770 --> 00:10:15,819
implement a anti cracking technique or

183
00:10:13,990 --> 00:10:26,560
something rather than actually using the

184
00:10:15,820 --> 00:10:28,840
app there you go going pro so what I did

185
00:10:26,560 --> 00:10:30,760
I set up an environment with the tools I

186
00:10:28,840 --> 00:10:36,550
thought I might need for reverse

187
00:10:30,760 --> 00:10:38,910
engineering a Android application and

188
00:10:36,550 --> 00:10:42,819
this is kind of the steps I followed

189
00:10:38,910 --> 00:10:45,400
starting with a static analysis of the

190
00:10:42,820 --> 00:10:48,460
app after of course after unpacking and

191
00:10:45,400 --> 00:10:50,050
decompiling it looking through the code

192
00:10:48,460 --> 00:10:53,060
and there's a reason I highlighted

193
00:10:50,050 --> 00:10:55,250
strings here cuz strings

194
00:10:53,060 --> 00:10:57,859
as dummy as it seems it's still a great

195
00:10:55,250 --> 00:11:02,450
way to find what you need when looking

196
00:10:57,860 --> 00:11:05,750
into the code that is not yours followed

197
00:11:02,450 --> 00:11:09,110
by a dynamic analysis of the application

198
00:11:05,750 --> 00:11:11,330
running it trying to know how how it

199
00:11:09,110 --> 00:11:13,160
behaves and most important capturing the

200
00:11:11,330 --> 00:11:17,810
traffic has pay attention it was clear

201
00:11:13,160 --> 00:11:23,630
text so HTTP pure I was like what we're

202
00:11:17,810 --> 00:11:25,599
in the 80s so yeah without a HTTP I was

203
00:11:23,630 --> 00:11:30,350
able to put myself in the middle

204
00:11:25,600 --> 00:11:31,280
intercept the traffic and yeah doing all

205
00:11:30,350 --> 00:11:35,090
about your stuff

206
00:11:31,280 --> 00:11:37,160
and finally after identifying in the

207
00:11:35,090 --> 00:11:39,230
code the piece of code that was doing

208
00:11:37,160 --> 00:11:42,140
the code validation actually the key

209
00:11:39,230 --> 00:11:44,180
validation I was able to extract that

210
00:11:42,140 --> 00:11:46,910
code just put it into another

211
00:11:44,180 --> 00:11:51,849
application and running it separately

212
00:11:46,910 --> 00:11:55,040
thus attaining the actually the key that

213
00:11:51,850 --> 00:11:57,980
was matching against the value that the

214
00:11:55,040 --> 00:12:02,990
user was entering in the UI you'll see

215
00:11:57,980 --> 00:12:04,780
that in a moment so static analysis

216
00:12:02,990 --> 00:12:06,530
revealed some interesting piece of tough

217
00:12:04,780 --> 00:12:08,689
interesting piece of stuff in the

218
00:12:06,530 --> 00:12:14,959
beginning like this hard-coded paths

219
00:12:08,690 --> 00:12:17,240
there /etc out code and I was like I bet

220
00:12:14,960 --> 00:12:19,700
the code is stored here and when the

221
00:12:17,240 --> 00:12:22,790
user enters it in from the UI it's

222
00:12:19,700 --> 00:12:25,610
matched against this code so I was in a

223
00:12:22,790 --> 00:12:27,890
hurry opened a shell to the AVD the

224
00:12:25,610 --> 00:12:30,200
Android Android virtual device I

225
00:12:27,890 --> 00:12:36,800
navigated to that path but guess what it

226
00:12:30,200 --> 00:12:38,720
wasn't there so I've created it and put

227
00:12:36,800 --> 00:12:40,969
it a dummy value there and I was like I

228
00:12:38,720 --> 00:12:42,920
put this dummy value here I go into UI I

229
00:12:40,970 --> 00:12:49,210
entered the same value and that's it

230
00:12:42,920 --> 00:12:49,209
wrong wasn't that easy

231
00:12:50,420 --> 00:12:57,390
so as I said earlier I start digging

232
00:12:53,130 --> 00:12:59,790
after strings this is the pop up asking

233
00:12:57,390 --> 00:13:04,110
for the key right so I search for

234
00:12:59,790 --> 00:13:06,300
upgrade to pro version in the folder

235
00:13:04,110 --> 00:13:08,220
that I got after unpacking the

236
00:13:06,300 --> 00:13:09,630
application without being an Android

237
00:13:08,220 --> 00:13:13,200
expert really

238
00:13:09,630 --> 00:13:16,590
I surely noticed that each string that

239
00:13:13,200 --> 00:13:20,940
it's displayed in the UI it's mapped to

240
00:13:16,590 --> 00:13:25,920
a label in some XML file in turn that

241
00:13:20,940 --> 00:13:28,890
label has an ID of course I searched for

242
00:13:25,920 --> 00:13:31,949
this ID in the source code and I found

243
00:13:28,890 --> 00:13:35,670
nothing and it took me a while to figure

244
00:13:31,950 --> 00:13:37,740
out that while this ID is in hexa is in

245
00:13:35,670 --> 00:13:40,800
hex notation here the D compiled code

246
00:13:37,740 --> 00:13:44,040
that I got from the java decompiler were

247
00:13:40,800 --> 00:13:46,189
in decimal so i had to convert them

248
00:13:44,040 --> 00:13:51,329
obviously

249
00:13:46,190 --> 00:13:54,000
okay so searching this time for the

250
00:13:51,330 --> 00:13:57,000
decimal notation of the string I found

251
00:13:54,000 --> 00:14:00,060
another piece of interesting code we can

252
00:13:57,000 --> 00:14:05,130
see the set title method here called

253
00:14:00,060 --> 00:14:06,479
with our string interesting string ideas

254
00:14:05,130 --> 00:14:09,750
parameter which totally makes sense

255
00:14:06,480 --> 00:14:12,150
right you want a set title of that of

256
00:14:09,750 --> 00:14:16,250
that string and a couple of other string

257
00:14:12,150 --> 00:14:18,510
IDs here and there that using the same

258
00:14:16,250 --> 00:14:21,440
searching methodology I've identified

259
00:14:18,510 --> 00:14:25,110
them as being open Bluetooth

260
00:14:21,440 --> 00:14:28,260
registration key error and great Pro

261
00:14:25,110 --> 00:14:29,850
6-sided so all those things assured me

262
00:14:28,260 --> 00:14:32,730
that I'm looking at the right piece of

263
00:14:29,850 --> 00:14:35,700
code and more than that because of

264
00:14:32,730 --> 00:14:39,960
registration key error here I knew that

265
00:14:35,700 --> 00:14:41,880
this m dot a method here it's the method

266
00:14:39,960 --> 00:14:45,960
who does the code validation the key

267
00:14:41,880 --> 00:14:51,120
validation this is how m dot a method

268
00:14:45,960 --> 00:14:55,980
looks like pretty ugly right this is the

269
00:14:51,120 --> 00:15:00,050
same method in a more readable form we

270
00:14:55,980 --> 00:15:03,580
can see it does some processing on the

271
00:15:00,050 --> 00:15:07,990
two parameters and here on line

272
00:15:03,580 --> 00:15:13,930
eleven it does compare the results of

273
00:15:07,990 --> 00:15:15,940
the two that the two results of the of

274
00:15:13,930 --> 00:15:17,859
this computation here whatever daddy's

275
00:15:15,940 --> 00:15:19,570
but still we didn't know anything about

276
00:15:17,860 --> 00:15:22,300
those two parameters were where those

277
00:15:19,570 --> 00:15:26,459
came from where are those so let's see

278
00:15:22,300 --> 00:15:27,880
where else the same method is called

279
00:15:26,459 --> 00:15:29,859
there it is

280
00:15:27,880 --> 00:15:33,610
and it's even more interesting than the

281
00:15:29,860 --> 00:15:37,660
previous call so looks like the app it's

282
00:15:33,610 --> 00:15:43,600
crafting a URL it's making a HTTP

283
00:15:37,660 --> 00:15:49,390
request to that URL and later the HTTP

284
00:15:43,600 --> 00:15:52,990
response is decoded is JSON and the app

285
00:15:49,390 --> 00:15:58,000
Waze is looking for error and key Jason

286
00:15:52,990 --> 00:16:00,880
fields passing getting a series I'm

287
00:15:58,000 --> 00:16:06,000
sorry so this is another call to M that

288
00:16:00,880 --> 00:16:09,970
a method passing a context object and

289
00:16:06,000 --> 00:16:15,550
the string key received from the server

290
00:16:09,970 --> 00:16:17,200
as parameters now let's see how this

291
00:16:15,550 --> 00:16:19,029
communication between the app and the

292
00:16:17,200 --> 00:16:23,079
server look like because remember it's

293
00:16:19,029 --> 00:16:24,990
plain text capturing the traffic between

294
00:16:23,079 --> 00:16:28,660
the app and the server was really easy

295
00:16:24,990 --> 00:16:30,399
because when running in the AVD a VD is

296
00:16:28,660 --> 00:16:33,010
basically routing all the traffic

297
00:16:30,399 --> 00:16:35,920
through your main host network interface

298
00:16:33,010 --> 00:16:39,250
so all I had to do is to start Wireshark

299
00:16:35,920 --> 00:16:41,740
and start monitoring here we can see

300
00:16:39,250 --> 00:16:43,600
what the app is actually does what what

301
00:16:41,740 --> 00:16:48,940
the app actually does so it does a

302
00:16:43,600 --> 00:16:50,860
request to activate that PHP sending the

303
00:16:48,940 --> 00:16:55,829
key that surprise is the key that we've

304
00:16:50,860 --> 00:16:59,769
entered in that file along with an ID

305
00:16:55,829 --> 00:17:02,319
and of course the key was wrong so what

306
00:16:59,769 --> 00:17:05,470
we got was error or fail to activate pro

307
00:17:02,320 --> 00:17:08,199
this message error it's shown it's

308
00:17:05,470 --> 00:17:10,360
displayed in the UI so this kind of

309
00:17:08,199 --> 00:17:12,750
validates what we saw in source code

310
00:17:10,359 --> 00:17:12,750
right

311
00:17:14,900 --> 00:17:20,640
okay so let's take a closer look at the

312
00:17:17,849 --> 00:17:23,520
most interesting piece of code right the

313
00:17:20,640 --> 00:17:25,589
m dot a mat or the code code the routine

314
00:17:23,520 --> 00:17:27,059
that validates the key and I'll need you

315
00:17:25,589 --> 00:17:30,300
to focus a little bit here so this is

316
00:17:27,059 --> 00:17:34,110
the M that a method after making a null

317
00:17:30,300 --> 00:17:36,230
check again against params string the

318
00:17:34,110 --> 00:17:41,360
second parameter which is the key right

319
00:17:36,230 --> 00:17:46,050
and does it does another check it calls

320
00:17:41,360 --> 00:17:49,350
method age passing that context object

321
00:17:46,050 --> 00:17:52,320
the method age is in in the right-hand

322
00:17:49,350 --> 00:17:55,520
side here in the top corner the method

323
00:17:52,320 --> 00:17:58,950
age it's calling another method B and

324
00:17:55,520 --> 00:18:02,520
the result is compared to a hard-coded

325
00:17:58,950 --> 00:18:05,160
string which is like two four six eight

326
00:18:02,520 --> 00:18:08,790
characters long string so we know what

327
00:18:05,160 --> 00:18:10,470
the result of B looks like and it's even

328
00:18:08,790 --> 00:18:14,159
more interesting because B it's called

329
00:18:10,470 --> 00:18:16,770
here again at the next line and the

330
00:18:14,160 --> 00:18:24,360
method B looks like this it's a one-line

331
00:18:16,770 --> 00:18:28,710
method returning a hex notation of a

332
00:18:24,360 --> 00:18:35,250
hash code of some string contained by

333
00:18:28,710 --> 00:18:39,600
prefix - something and this something is

334
00:18:35,250 --> 00:18:42,030
here this something actually checks for

335
00:18:39,600 --> 00:18:48,178
the presence of a Bluetooth adapter if

336
00:18:42,030 --> 00:18:51,360
it is it returns the get address if it's

337
00:18:48,179 --> 00:18:53,730
not it should return null and this is

338
00:18:51,360 --> 00:18:56,610
interesting this is a coding mistake

339
00:18:53,730 --> 00:19:00,120
because the guy who wrote that assumed

340
00:18:56,610 --> 00:19:02,280
that if no Bluetooth adapter exists it

341
00:19:00,120 --> 00:19:04,379
will return null and it's using that

342
00:19:02,280 --> 00:19:08,460
there where you can see it highlighted

343
00:19:04,380 --> 00:19:10,830
in red it's using that check and for me

344
00:19:08,460 --> 00:19:16,130
it looks like a anti debugging technique

345
00:19:10,830 --> 00:19:18,870
the thing is that because of the type

346
00:19:16,130 --> 00:19:20,730
because of the type of the result of

347
00:19:18,870 --> 00:19:22,860
this method here which is string

348
00:19:20,730 --> 00:19:26,149
Java will automatically cast the null

349
00:19:22,860 --> 00:19:29,418
object to null string

350
00:19:26,149 --> 00:19:34,059
so actually that check there that

351
00:19:29,419 --> 00:19:34,059
condition will always be false

352
00:19:37,809 --> 00:19:49,418
okay so simplified our SDR variable from

353
00:19:44,599 --> 00:19:52,428
here it's a heck of a hash of prefix

354
00:19:49,419 --> 00:19:55,339
plus Bluetooth address which is known

355
00:19:52,429 --> 00:19:58,189
and you if you compute that you get that

356
00:19:55,339 --> 00:20:06,079
string but you know what I think I saw

357
00:19:58,189 --> 00:20:08,949
this before right here's a device ID now

358
00:20:06,079 --> 00:20:12,129
going further in the validation routine

359
00:20:08,949 --> 00:20:15,979
the device ID is appended to another

360
00:20:12,129 --> 00:20:18,168
something which is really this is method

361
00:20:15,979 --> 00:20:21,439
another a method it really returns to

362
00:20:18,169 --> 00:20:25,639
google.com lack of inspiration the

363
00:20:21,439 --> 00:20:30,729
result is then hash code again and the

364
00:20:25,639 --> 00:20:30,728
hash code is stored into the integer I

365
00:20:32,199 --> 00:20:38,989
that's being said at this stage this is

366
00:20:35,929 --> 00:20:41,599
the same code validation routine

367
00:20:38,989 --> 00:20:46,099
simplified at this stage we have control

368
00:20:41,599 --> 00:20:50,448
over all the parameters engaged in this

369
00:20:46,099 --> 00:20:55,779
validation so I is google.com plus the

370
00:20:50,449 --> 00:21:01,039
ID that we know J is derived from I and

371
00:20:55,779 --> 00:21:06,049
then here does some computation some bit

372
00:21:01,039 --> 00:21:11,059
shifting on the on I and J and it's

373
00:21:06,049 --> 00:21:13,599
comparing to the first half and this is

374
00:21:11,059 --> 00:21:21,439
interesting again to the first half of

375
00:21:13,599 --> 00:21:25,968
key from server array of strings 0 after

376
00:21:21,439 --> 00:21:29,269
splitting it by where are you there

377
00:21:25,969 --> 00:21:32,659
third line so it only validates the

378
00:21:29,269 --> 00:21:36,049
first half had on a Y so what we

379
00:21:32,659 --> 00:21:38,700
actually need to find out is the result

380
00:21:36,049 --> 00:21:41,700
of this computation

381
00:21:38,700 --> 00:21:42,360
and this is this Java code does exactly

382
00:21:41,700 --> 00:21:45,690
this

383
00:21:42,360 --> 00:21:48,800
it takes device ID from the command line

384
00:21:45,690 --> 00:21:54,720
argument does the super ultra secret

385
00:21:48,800 --> 00:21:57,930
complicated computation and returns the

386
00:21:54,720 --> 00:22:01,410
result if you take this code compile and

387
00:21:57,930 --> 00:22:03,560
run it you get a four characters code

388
00:22:01,410 --> 00:22:08,970
which is basically the first half of

389
00:22:03,560 --> 00:22:11,909
game of the key you can find this this

390
00:22:08,970 --> 00:22:17,250
code on my public get github profile

391
00:22:11,910 --> 00:22:20,130
sorry about that so we have the first

392
00:22:17,250 --> 00:22:23,340
half the next half could be really any

393
00:22:20,130 --> 00:22:27,000
random four character string it is not

394
00:22:23,340 --> 00:22:30,629
validated in any way what I did just

395
00:22:27,000 --> 00:22:35,580
type that inning into the application

396
00:22:30,630 --> 00:22:45,050
hit OK and finally I was happy to the

397
00:22:35,580 --> 00:22:47,820
end upgrade to pro succeeded all right

398
00:22:45,050 --> 00:22:49,889
as a summary because what we want to do

399
00:22:47,820 --> 00:22:51,840
is one we want to learn something from

400
00:22:49,890 --> 00:22:53,900
this story right I'm not here just to

401
00:22:51,840 --> 00:22:57,240
show off

402
00:22:53,900 --> 00:22:59,340
let's see house and wise was this

403
00:22:57,240 --> 00:23:02,190
possible remember all started with the

404
00:22:59,340 --> 00:23:04,889
client-side validation right don't do

405
00:23:02,190 --> 00:23:07,890
that don't do client-side validation of

406
00:23:04,890 --> 00:23:10,200
any secrets you can validate like phone

407
00:23:07,890 --> 00:23:12,930
numbers I don't know email addresses

408
00:23:10,200 --> 00:23:17,640
don't do any kind of validation on the

409
00:23:12,930 --> 00:23:22,890
secrets why on this earth would you

410
00:23:17,640 --> 00:23:26,520
restrict the password pool by allowing

411
00:23:22,890 --> 00:23:30,780
only digits it makes no sense this is

412
00:23:26,520 --> 00:23:35,040
what in different security we call weak

413
00:23:30,780 --> 00:23:37,740
password policy he did that the absence

414
00:23:35,040 --> 00:23:40,470
of a web application file or any kind of

415
00:23:37,740 --> 00:23:42,570
rate limiting mechanism either at

416
00:23:40,470 --> 00:23:45,060
application level or network level

417
00:23:42,570 --> 00:23:46,860
allowed me to brute-force that

418
00:23:45,060 --> 00:23:51,840
authorization code remember I got the

419
00:23:46,860 --> 00:23:55,320
first code in 84 seconds if you

420
00:23:51,840 --> 00:23:59,879
publish' servers be aware put a firewall

421
00:23:55,320 --> 00:24:01,649
in front next one the clear text

422
00:23:59,880 --> 00:24:03,929
communication between the app and the

423
00:24:01,650 --> 00:24:06,210
server allowed me to intercept the

424
00:24:03,929 --> 00:24:08,760
traffic reverse-engineer the

425
00:24:06,210 --> 00:24:15,029
communication and even impersonate the

426
00:24:08,760 --> 00:24:18,150
server I've modified the DNS table in

427
00:24:15,029 --> 00:24:21,210
the AVD and the app was sending the

428
00:24:18,150 --> 00:24:23,490
request to my web server under my

429
00:24:21,210 --> 00:24:25,950
control and I was saying I was sending

430
00:24:23,490 --> 00:24:28,799
funny error messages like how they are

431
00:24:25,950 --> 00:24:36,000
hey how's it going today and they were

432
00:24:28,799 --> 00:24:40,260
displayed in the in the application next

433
00:24:36,000 --> 00:24:43,679
one a week code obfuscation along with

434
00:24:40,260 --> 00:24:47,279
hard-coded strings allowed me by only

435
00:24:43,679 --> 00:24:50,700
taking a very quick look at the code I

436
00:24:47,279 --> 00:24:53,640
was able to have an idea at least about

437
00:24:50,700 --> 00:24:58,470
what that piece of code is doing so try

438
00:24:53,640 --> 00:25:03,450
to not hard code anything in your app

439
00:24:58,470 --> 00:25:09,419
not as not file names especially not

440
00:25:03,450 --> 00:25:13,620
passwords and last but not least no anti

441
00:25:09,419 --> 00:25:15,960
debugging mechanisms remember the wrong

442
00:25:13,620 --> 00:25:21,000
assumption that if there is no Bluetooth

443
00:25:15,960 --> 00:25:23,070
adapter that condition should have

444
00:25:21,000 --> 00:25:26,760
returned true so that the application

445
00:25:23,070 --> 00:25:28,889
won't won't run in the AVD there's no

446
00:25:26,760 --> 00:25:31,890
Bluetooth adapter but because of that

447
00:25:28,890 --> 00:25:37,880
assumption I was able to run and debug

448
00:25:31,890 --> 00:25:41,159
the the app in the AVD with no problems

449
00:25:37,880 --> 00:25:43,470
this is this is no magic you know when

450
00:25:41,159 --> 00:25:47,700
you're in individual and you you publish

451
00:25:43,470 --> 00:25:48,299
a service like this you do these

452
00:25:47,700 --> 00:25:52,529
mistakes

453
00:25:48,299 --> 00:25:55,830
maybe the overcome is not so so so bad

454
00:25:52,529 --> 00:25:57,809
but if you're a company you don't want

455
00:25:55,830 --> 00:26:01,740
to do that these mistakes in your

456
00:25:57,809 --> 00:26:04,050
products or services in ax way we try to

457
00:26:01,740 --> 00:26:06,240
keep a close look on

458
00:26:04,050 --> 00:26:11,220
those rules and many others of course

459
00:26:06,240 --> 00:26:13,440
and make sure we don't do these kind of

460
00:26:11,220 --> 00:26:16,050
mistakes this is all I have for you guys

461
00:26:13,440 --> 00:26:35,100
I hope you are not asleep I'm open for

462
00:26:16,050 --> 00:26:39,149
questions now saw you I saw you hey you

463
00:26:35,100 --> 00:26:41,490
still have the app on ah yes I do I have

464
00:26:39,150 --> 00:26:45,450
to upgrade it so you still have the

465
00:26:41,490 --> 00:26:46,320
traffic on going on HTTP so I can hack

466
00:26:45,450 --> 00:26:49,380
your car again

467
00:26:46,320 --> 00:26:52,100
yeah did you change anything no no so

468
00:26:49,380 --> 00:26:55,290
you know what my car is I will find I

469
00:26:52,100 --> 00:26:57,090
know your name so I will you know find

470
00:26:55,290 --> 00:26:59,129
something about your knowable yeah and

471
00:26:57,090 --> 00:27:00,959
you know it's black yeah and I know it's

472
00:26:59,130 --> 00:27:03,420
black so I have some ideas about your

473
00:27:00,960 --> 00:27:04,800
car did you think about changing

474
00:27:03,420 --> 00:27:07,230
something to this because you already

475
00:27:04,800 --> 00:27:10,590
find that the fact that the traffic it's

476
00:27:07,230 --> 00:27:11,640
on the HTTP and is not encrypted do you

477
00:27:10,590 --> 00:27:15,510
think to change something on that

478
00:27:11,640 --> 00:27:16,050
honestly I didn't but that's a good

479
00:27:15,510 --> 00:27:20,480
point

480
00:27:16,050 --> 00:27:20,480
maybe I should okay thank you thank you

481
00:27:25,549 --> 00:27:36,299
so have here someone okay yeah so we

482
00:27:29,669 --> 00:27:38,940
have hello so my question is what was

483
00:27:36,299 --> 00:27:43,139
the end result what were you able to do

484
00:27:38,940 --> 00:27:46,619
to your car after hacking it so the last

485
00:27:43,139 --> 00:27:49,678
last generation of Civic has a really

486
00:27:46,619 --> 00:27:50,519
annoying feature every time you turn on

487
00:27:49,679 --> 00:27:54,059
the engine

488
00:27:50,519 --> 00:27:57,029
you got a pop-up warning on in the dash

489
00:27:54,059 --> 00:27:59,399
saying hey drive safely etc and you have

490
00:27:57,029 --> 00:28:02,399
to click OK on that every time you start

491
00:27:59,399 --> 00:28:07,379
a car so I was able using this app to

492
00:28:02,399 --> 00:28:13,199
just dis act deactivate that feature so

493
00:28:07,379 --> 00:28:18,178
it's more easy anything like like what's

494
00:28:13,200 --> 00:28:20,220
right thankful like yeah there are a

495
00:28:18,179 --> 00:28:25,409
bunch of other features first one is

496
00:28:20,220 --> 00:28:27,779
installing any apk without this app you

497
00:28:25,409 --> 00:28:32,609
wouldn't be able to install I installed

498
00:28:27,779 --> 00:28:37,169
ways but it was way slower because it's

499
00:28:32,609 --> 00:28:41,309
still a low budget Android tablet at the

500
00:28:37,169 --> 00:28:43,379
base and the Android version is old it

501
00:28:41,309 --> 00:28:48,869
has some other features like you can

502
00:28:43,379 --> 00:28:51,238
remap the buttons on the wheel you can

503
00:28:48,869 --> 00:28:54,090
remap them to do any other functions

504
00:28:51,239 --> 00:28:59,070
than just playing the next song or turn

505
00:28:54,090 --> 00:29:03,899
on the volume but I didn't use it ok

506
00:28:59,070 --> 00:29:06,299
thank you thank you so cuz I mean it was

507
00:29:03,899 --> 00:29:07,649
a question there yeah I saw someone

508
00:29:06,299 --> 00:29:10,190
there and there are a couple of other

509
00:29:07,649 --> 00:29:10,189
folks here

510
00:29:16,279 --> 00:29:24,809
you showed us your you showed us your

511
00:29:19,700 --> 00:29:33,510
doing sorry you showed us your method of

512
00:29:24,809 --> 00:29:37,080
obtaining this app and versions the

513
00:29:33,510 --> 00:29:39,990
regular way is to send that guy 18 US

514
00:29:37,080 --> 00:29:43,289
Dollars and he will send in via PayPal

515
00:29:39,990 --> 00:29:48,270
and he will send you the code this is

516
00:29:43,289 --> 00:29:51,230
how his marketing company looks like I

517
00:29:48,270 --> 00:29:55,500
don't know if it's real didn't try it I

518
00:29:51,230 --> 00:29:58,559
have better ways we have another one

519
00:29:55,500 --> 00:30:00,360
here my turn right yeah exactly

520
00:29:58,559 --> 00:30:02,730
no my question was like did you try it

521
00:30:00,360 --> 00:30:05,250
some function hooking free the style was

522
00:30:02,730 --> 00:30:06,600
it possible if he asked no why could you

523
00:30:05,250 --> 00:30:06,990
explain us a little bit that would be

524
00:30:06,600 --> 00:30:10,199
cool

525
00:30:06,990 --> 00:30:13,169
Thanks I didn't try it honestly of

526
00:30:10,200 --> 00:30:16,860
course it's you can do way more things

527
00:30:13,169 --> 00:30:20,520
than that and I'm not an Android guy I'm

528
00:30:16,860 --> 00:30:23,309
not even at I don't know mobile device

529
00:30:20,520 --> 00:30:26,429
Panther sir or something so I didn't go

530
00:30:23,309 --> 00:30:29,940
that for but would be interesting thanks

531
00:30:26,429 --> 00:30:34,799
nice presentation Thanks okay cause I

532
00:30:29,940 --> 00:30:40,610
mean two more it's okay from the first

533
00:30:34,799 --> 00:30:46,950
row don't pick this guy just kidding

534
00:30:40,610 --> 00:30:47,610
okay could this be thank you for the

535
00:30:46,950 --> 00:30:50,130
presentation

536
00:30:47,610 --> 00:30:52,918
Oh to this application be dangerous I

537
00:30:50,130 --> 00:30:57,380
mean like because someone comes around

538
00:30:52,919 --> 00:31:00,330
your car oh heck your application and

539
00:30:57,380 --> 00:31:03,990
accelerate your car with not your

540
00:31:00,330 --> 00:31:09,059
permission your new crashing you die no

541
00:31:03,990 --> 00:31:13,649
no so I didn't spotted any back doors or

542
00:31:09,059 --> 00:31:16,830
something that could allow someone to

543
00:31:13,649 --> 00:31:19,459
hack you by having this application

544
00:31:16,830 --> 00:31:21,539
running I didn't spot it I didn't look I

545
00:31:19,460 --> 00:31:24,840
didn't target that kind of information

546
00:31:21,539 --> 00:31:27,270
specifically but don't trust me I mean

547
00:31:24,840 --> 00:31:30,720
don't install it at say that guy at deaf

548
00:31:27,270 --> 00:31:33,810
camp says I'm safe so okay thank you

549
00:31:30,720 --> 00:31:47,120
okay we have one other more there with

550
00:31:33,810 --> 00:31:47,120
me only I don't see you I'm here okay

551
00:31:50,600 --> 00:31:57,360
okay let's do far yeah it's too far oh

552
00:31:53,610 --> 00:31:59,389
okay you can ask me after I'm here I'm

553
00:31:57,360 --> 00:31:59,389
here

554
00:32:01,250 --> 00:32:08,040
hi isn't hacking an application that is

555
00:32:05,700 --> 00:32:10,490
not yours and you don't have permission

556
00:32:08,040 --> 00:32:13,200
to hack slightly illegal

557
00:32:10,490 --> 00:32:16,950
did you guys paid him to ask that

558
00:32:13,200 --> 00:32:19,920
question it is but def camp allowed me

559
00:32:16,950 --> 00:32:26,490
to present that and I think we're okay

560
00:32:19,920 --> 00:32:29,040
right hey I have a I have a short

561
00:32:26,490 --> 00:32:30,750
question can you now mirror your phone

562
00:32:29,040 --> 00:32:35,100
based on the fact that you have this

563
00:32:30,750 --> 00:32:38,250
future so this app I could do that I

564
00:32:35,100 --> 00:32:41,090
could do that before cuz I have okay

565
00:32:38,250 --> 00:32:41,090
Andrew

