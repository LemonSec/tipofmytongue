1
00:00:00,000 --> 00:00:07,610
hello<font color="#E5E5E5"> everybody</font><font color="#CCCCCC"> so I don't need</font><font color="#E5E5E5"> to</font>

2
00:00:03,810 --> 00:00:10,290
<font color="#E5E5E5">introduce myself</font><font color="#CCCCCC"> everything</font><font color="#E5E5E5"> was said so</font>

3
00:00:07,610 --> 00:00:14,000
<font color="#CCCCCC">now we are going</font><font color="#E5E5E5"> to talk a little bit</font>

4
00:00:10,290 --> 00:00:17,730
<font color="#CCCCCC">about what quantum cryptography</font><font color="#E5E5E5"> and and</font>

5
00:00:14,000 --> 00:00:19,529
we<font color="#E5E5E5"> are making some researches most of</font>

6
00:00:17,730 --> 00:00:22,980
them are in post quantum cryptography

7
00:00:19,529 --> 00:00:26,180
field<font color="#CCCCCC"> and here I want to</font><font color="#E5E5E5"> present the</font>

8
00:00:22,980 --> 00:00:29,609
<font color="#CCCCCC">results</font><font color="#E5E5E5"> of one of our researches and</font>

9
00:00:26,180 --> 00:00:33,149
it's a<font color="#CCCCCC"> radical one</font><font color="#E5E5E5"> and also we have a</font>

10
00:00:29,609 --> 00:00:35,329
practical implementation<font color="#E5E5E5"> it is of course</font>

11
00:00:33,149 --> 00:00:38,550
a<font color="#CCCCCC"> little bit complicated for</font><font color="#E5E5E5"> some of you</font>

12
00:00:35,329 --> 00:00:41,250
and I will give<font color="#CCCCCC"> you the necessary</font>

13
00:00:38,550 --> 00:00:49,199
background<font color="#E5E5E5"> I will make the introduction</font>

14
00:00:41,250 --> 00:00:50,820
and afterwards<font color="#E5E5E5"> let's begin</font><font color="#CCCCCC"> so maybe</font><font color="#E5E5E5"> for</font>

15
00:00:49,200 --> 00:00:53,390
some of<font color="#E5E5E5"> you it will be very boring but</font>

16
00:00:50,820 --> 00:00:56,219
let's quickly<font color="#E5E5E5"> cover to understand</font>

17
00:00:53,390 --> 00:00:59,280
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> what I'm talking about</font><font color="#E5E5E5"> so we</font>

18
00:00:56,219 --> 00:01:06,229
have here so with our<font color="#E5E5E5"> two heroes Alice</font>

19
00:00:59,280 --> 00:01:15,360
and<font color="#E5E5E5"> Bob</font><font color="#CCCCCC"> one minutes already here it is</font>

20
00:01:06,229 --> 00:01:18,990
<font color="#E5E5E5">and</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so first of all they have to</font>

21
00:01:15,360 --> 00:01:22,140
<font color="#CCCCCC">generate the qiyan</font><font color="#E5E5E5"> and they share the</font>

22
00:01:18,990 --> 00:01:25,289
scheme afterwards<font color="#E5E5E5"> Alice has a mass</font>

23
00:01:22,140 --> 00:01:28,740
message<font color="#E5E5E5"> and she wants to encrypt it so</font>

24
00:01:25,290 --> 00:01:33,030
she needs encryption algorithm for it

25
00:01:28,740 --> 00:01:37,560
she uses a Qian<font color="#E5E5E5"> and get her cipher yes</font>

26
00:01:33,030 --> 00:01:39,840
<font color="#E5E5E5">she sends the type of cipher to Bob Bob</font>

27
00:01:37,560 --> 00:01:43,229
<font color="#E5E5E5">uses his</font><font color="#CCCCCC"> decreaser decryption algorithm</font>

28
00:01:39,840 --> 00:01:46,770
<font color="#CCCCCC">say key he</font><font color="#E5E5E5"> has and he gets a message he</font>

29
00:01:43,229 --> 00:01:48,720
as always we have attacker that is if

30
00:01:46,770 --> 00:01:53,789
dropping on<font color="#E5E5E5"> the message and wants</font><font color="#CCCCCC"> to get</font>

31
00:01:48,720 --> 00:01:55,470
it yes so here is a scheme and the only

32
00:01:53,790 --> 00:01:58,560
obligatory thing is when<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font>

33
00:01:55,470 --> 00:02:04,770
decrypting<font color="#CCCCCC"> the cipher</font><font color="#E5E5E5"> we have to get our</font>

34
00:01:58,560 --> 00:02:07,619
message back yes so what<font color="#E5E5E5"> sort one-time</font>

35
00:02:04,770 --> 00:02:10,299
pad<font color="#CCCCCC"> it's very interesting crypto schema</font>

36
00:02:07,619 --> 00:02:12,760
<font color="#E5E5E5">it's the only one absolutely</font>

37
00:02:10,300 --> 00:02:17,470
secret with perfect secrecy<font color="#E5E5E5"> scheme in</font>

38
00:02:12,760 --> 00:02:20,799
the world how it works yes here<font color="#CCCCCC"> we</font>

39
00:02:17,470 --> 00:02:23,080
generate<font color="#E5E5E5"> zakian with generation</font>

40
00:02:20,800 --> 00:02:25,660
algorithm and afterwards<font color="#E5E5E5"> encryption is</font>

41
00:02:23,080 --> 00:02:29,230
very easy and<font color="#CCCCCC"> we just a exact</font><font color="#E5E5E5"> E and X</font>

42
00:02:25,660 --> 00:02:33,900
<font color="#CCCCCC">are it with a message and decryption is</font>

43
00:02:29,230 --> 00:02:37,390
the same<font color="#E5E5E5"> we XOR key and the cipher</font><font color="#CCCCCC"> so</font>

44
00:02:33,900 --> 00:02:41,260
here is<font color="#E5E5E5"> how encryption to how XOR box</font>

45
00:02:37,390 --> 00:02:45,220
yes when we XOR 0 with 1 we get 1 0 0 we

46
00:02:41,260 --> 00:02:48,459
get 0 1 and 1 0<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> only issue is</font>

47
00:02:45,220 --> 00:02:54,730
<font color="#CCCCCC">that</font><font color="#E5E5E5"> when we XOR the same values</font><font color="#CCCCCC"> we get</font>

48
00:02:48,460 --> 00:02:59,650
0 yes and here we can verify the

49
00:02:54,730 --> 00:03:03,209
correctness<font color="#CCCCCC"> to decrypt we XOR K with the</font>

50
00:02:59,650 --> 00:03:08,220
<font color="#E5E5E5">cipher what</font><font color="#CCCCCC"> is cipher cipher is K XOR M</font>

51
00:03:03,210 --> 00:03:12,280
<font color="#CCCCCC">ok and ok</font><font color="#E5E5E5"> K XOR K is 0 and after what we</font>

52
00:03:08,220 --> 00:03:15,130
we are<font color="#CCCCCC"> only with the message yes</font><font color="#E5E5E5"> so here</font>

53
00:03:12,280 --> 00:03:18,970
<font color="#E5E5E5">is illustrated how it works here is n</font>

54
00:03:15,130 --> 00:03:22,810
bit key and with message<font color="#CCCCCC"> its exhort bid</font>

55
00:03:18,970 --> 00:03:27,450
<font color="#CCCCCC">bye-bye it and afterwards we get cipher</font>

56
00:03:22,810 --> 00:03:28,630
<font color="#E5E5E5">its</font><font color="#CCCCCC"> each length</font><font color="#E5E5E5"> is only is also n bit</font>

57
00:03:27,450 --> 00:03:31,209
<font color="#CCCCCC">okay</font>

58
00:03:28,630 --> 00:03:33,760
it was the cipher with perfect secrecy

59
00:03:31,210 --> 00:03:36,640
<font color="#CCCCCC">it's so good it's so</font><font color="#E5E5E5"> nice</font><font color="#CCCCCC"> to implement</font>

60
00:03:33,760 --> 00:03:40,510
<font color="#E5E5E5">why it is not used today in real life</font>

61
00:03:36,640 --> 00:03:43,690
yes because<font color="#E5E5E5"> it has to draw back to robux</font>

62
00:03:40,510 --> 00:03:47,410
<font color="#E5E5E5">the first one is that</font><font color="#CCCCCC"> the size of the</font>

63
00:03:43,690 --> 00:03:51,850
key must<font color="#CCCCCC"> be in the same as a message</font>

64
00:03:47,410 --> 00:03:53,859
size is yes and so<font color="#E5E5E5"> usually in the</font>

65
00:03:51,850 --> 00:03:57,730
practice<font color="#E5E5E5"> we encrypt</font><font color="#CCCCCC"> really big messages</font>

66
00:03:53,860 --> 00:04:01,480
<font color="#E5E5E5">so the key must</font><font color="#CCCCCC"> be also really</font><font color="#E5E5E5"> big and</font>

67
00:03:57,730 --> 00:04:02,290
the second problem is that<font color="#E5E5E5"> we need one</font>

68
00:04:01,480 --> 00:04:04,720
time<font color="#E5E5E5"> key</font>

69
00:04:02,290 --> 00:04:08,560
what does it mean<font color="#E5E5E5"> so for every message</font>

70
00:04:04,720 --> 00:04:10,950
<font color="#E5E5E5">we need a unique key yes so let's talk</font>

71
00:04:08,560 --> 00:04:13,810
<font color="#CCCCCC">about the</font><font color="#E5E5E5"> second</font><font color="#CCCCCC"> problem</font><font color="#E5E5E5"> that's</font>

72
00:04:10,950 --> 00:04:18,120
intuitively understand why it<font color="#E5E5E5"> is</font><font color="#CCCCCC"> like</font>

73
00:04:13,810 --> 00:04:21,480
<font color="#E5E5E5">this so here we have</font><font color="#CCCCCC"> sawarna</font>

74
00:04:18,120 --> 00:04:24,030
so how<font color="#E5E5E5"> to get it works or key with a</font>

75
00:04:21,480 --> 00:04:25,710
message with<font color="#CCCCCC"> the first message</font><font color="#E5E5E5"> but is</font>

76
00:04:24,030 --> 00:04:29,580
the same in<font color="#E5E5E5"> both cases</font>

77
00:04:25,710 --> 00:04:34,289
<font color="#E5E5E5">see tune is exo-m - and afterwards works</font>

78
00:04:29,580 --> 00:04:39,359
<font color="#CCCCCC">Arya's</font><font color="#E5E5E5"> this values and what we did</font><font color="#CCCCCC"> okay</font>

79
00:04:34,290 --> 00:04:39,750
<font color="#CCCCCC">XOR m1 XOR K XOR m2 okay XOR K 0 m1 XOR</font>

80
00:04:39,360 --> 00:04:42,840
m2

81
00:04:39,750 --> 00:04:46,530
yes m1 XOR m2 so when we exhort to

82
00:04:42,840 --> 00:04:50,039
ciphers<font color="#E5E5E5"> we get the exhort of messages so</font>

83
00:04:46,530 --> 00:04:54,388
we<font color="#CCCCCC"> found some kind</font><font color="#E5E5E5"> of relation between</font>

84
00:04:50,040 --> 00:04:58,110
these two<font color="#CCCCCC"> messages</font><font color="#E5E5E5"> maybe it seems to be</font>

85
00:04:54,389 --> 00:05:03,780
<font color="#CCCCCC">nothing but even for</font><font color="#E5E5E5"> my students I give</font>

86
00:04:58,110 --> 00:05:07,440
this task<font color="#E5E5E5"> and decrypting and when you</font>

87
00:05:03,780 --> 00:05:10,369
have the<font color="#E5E5E5"> sufficient amount of messages</font>

88
00:05:07,440 --> 00:05:15,330
<font color="#CCCCCC">of ciphers it is very easy to decrypt</font>

89
00:05:10,370 --> 00:05:18,150
absolutely the whole text so<font color="#CCCCCC"> let's</font>

90
00:05:15,330 --> 00:05:22,560
understand what is<font color="#E5E5E5"> pure</font><font color="#CCCCCC"> chiyan save the</font>

91
00:05:18,150 --> 00:05:25,289
random number generator<font color="#E5E5E5"> yes so how it</font>

92
00:05:22,560 --> 00:05:27,660
works<font color="#CCCCCC"> it's some kind of function it gets</font>

93
00:05:25,289 --> 00:05:31,260
a seed<font color="#E5E5E5"> the little one the smaller one</font>

94
00:05:27,660 --> 00:05:33,860
and<font color="#E5E5E5"> it gets a say</font><font color="#CCCCCC"> input to generator</font><font color="#E5E5E5"> and</font>

95
00:05:31,260 --> 00:05:37,530
afterwards<font color="#CCCCCC"> we get the output and as</font><font color="#E5E5E5"> it's</font>

96
00:05:33,860 --> 00:05:39,690
<font color="#CCCCCC">illustrated output is much bigger</font><font color="#E5E5E5"> it's</font>

97
00:05:37,530 --> 00:05:43,590
bigger than<font color="#CCCCCC"> this input</font>

98
00:05:39,690 --> 00:05:47,669
<font color="#E5E5E5">it's the idea so let's we said that the</font>

99
00:05:43,590 --> 00:05:49,109
key must be of the<font color="#E5E5E5"> same size as the</font>

100
00:05:47,669 --> 00:05:51,299
message and<font color="#CCCCCC"> it was a</font><font color="#E5E5E5"> problem</font>

101
00:05:49,110 --> 00:05:54,300
so let's integrate our<font color="#CCCCCC"> perche to</font>

102
00:05:51,300 --> 00:05:59,639
one-time pad what we did we have the

103
00:05:54,300 --> 00:06:02,310
little<font color="#CCCCCC"> key that is n bits</font><font color="#E5E5E5"> we pull and</font>

104
00:05:59,639 --> 00:06:06,120
the message is P bits and P bits is my

105
00:06:02,310 --> 00:06:10,889
and P is much more than n so we put our

106
00:06:06,120 --> 00:06:13,500
key to generator and get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> observed</font>

107
00:06:10,889 --> 00:06:16,289
<font color="#CCCCCC">okyun</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> only of the size of P N and</font>

108
00:06:13,500 --> 00:06:18,150
now we can XOR it with our message

109
00:06:16,289 --> 00:06:21,300
normally and and<font color="#E5E5E5"> can't the cipher tape</font>

110
00:06:18,150 --> 00:06:23,969
that<font color="#CCCCCC"> it's lengths</font><font color="#E5E5E5"> also will be in just a</font>

111
00:06:21,300 --> 00:06:26,370
size P yes<font color="#E5E5E5"> of course in this</font><font color="#CCCCCC"> case we</font>

112
00:06:23,970 --> 00:06:28,500
don't have already perfect secrecy<font color="#CCCCCC"> but</font>

113
00:06:26,370 --> 00:06:31,820
in this<font color="#E5E5E5"> case we have computational</font>

114
00:06:28,500 --> 00:06:36,510
secrecy but<font color="#E5E5E5"> it works like this yes</font>

115
00:06:31,820 --> 00:06:38,280
after what was a revolution<font color="#E5E5E5"> public</font>

116
00:06:36,510 --> 00:06:41,669
we got<font color="#E5E5E5"> the public key encryption scheme</font>

117
00:06:38,280 --> 00:06:45,330
how it works<font color="#CCCCCC"> sir is a publican</font><font color="#E5E5E5"> by means</font>

118
00:06:41,669 --> 00:06:48,810
of public<font color="#CCCCCC"> ian bob encrypts his message</font>

119
00:06:45,330 --> 00:06:51,419
<font color="#E5E5E5">so to encrypt a message</font><font color="#CCCCCC"> everybody can</font>

120
00:06:48,810 --> 00:06:54,150
afterwards he sends<font color="#E5E5E5"> his message to Alice</font>

121
00:06:51,419 --> 00:06:58,080
and Alice<font color="#CCCCCC"> must have her secret key to</font>

122
00:06:54,150 --> 00:07:01,020
<font color="#E5E5E5">decrypt the</font><font color="#CCCCCC"> message</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> only the person</font>

123
00:06:58,080 --> 00:07:05,130
<font color="#CCCCCC">who has the secret key is a private key</font>

124
00:07:01,020 --> 00:07:07,260
only he can decrypt a message<font color="#E5E5E5"> so she got</font>

125
00:07:05,130 --> 00:07:13,200
some gets a message<font color="#E5E5E5"> and decrypt it</font><font color="#CCCCCC"> with</font>

126
00:07:07,260 --> 00:07:15,599
her algorithm and the most<font color="#E5E5E5"> obvious</font>

127
00:07:13,200 --> 00:07:19,740
example of public key and crypto system

128
00:07:15,600 --> 00:07:22,289
is<font color="#CCCCCC"> si that is our problem</font><font color="#E5E5E5"> today and we</font>

129
00:07:19,740 --> 00:07:24,330
will talk<font color="#E5E5E5"> about it it's used almost in</font>

130
00:07:22,289 --> 00:07:27,570
<font color="#E5E5E5">all the program in all the products so</font>

131
00:07:24,330 --> 00:07:30,448
how it works<font color="#CCCCCC"> yes we have let's say</font><font color="#E5E5E5"> like</font>

132
00:07:27,570 --> 00:07:34,260
this we have three numbers<font color="#E5E5E5"> and EAD the</font>

133
00:07:30,449 --> 00:07:36,810
public Qian is<font color="#E5E5E5"> N and</font><font color="#CCCCCC"> E</font><font color="#E5E5E5"> and our secret</font>

134
00:07:34,260 --> 00:07:43,440
<font color="#E5E5E5">key is des</font>

135
00:07:36,810 --> 00:07:47,370
so<font color="#CCCCCC"> Alice has</font><font color="#E5E5E5"> public</font><font color="#CCCCCC"> Ian she rips</font><font color="#E5E5E5"> a</font>

136
00:07:43,440 --> 00:07:50,520
message sends to Bob<font color="#E5E5E5"> and Bob using his</font>

137
00:07:47,370 --> 00:07:54,660
<font color="#E5E5E5">private key secret</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> to decrypt a</font>

138
00:07:50,520 --> 00:07:58,740
message yes<font color="#CCCCCC"> okay is that the</font><font color="#E5E5E5"> idea</font><font color="#CCCCCC"> okay</font>

139
00:07:54,660 --> 00:08:01,380
when we begin<font color="#CCCCCC"> to work all of this when</font>

140
00:07:58,740 --> 00:08:03,870
<font color="#E5E5E5">we saw the article</font><font color="#CCCCCC"> I said Google ante</font>

141
00:08:01,380 --> 00:08:06,770
<font color="#E5E5E5">wave</font><font color="#CCCCCC"> signed the</font><font color="#E5E5E5"> contract that</font><font color="#CCCCCC"> they are</font>

142
00:08:03,870 --> 00:08:09,810
<font color="#CCCCCC">working together on creating</font><font color="#E5E5E5"> the new</font>

143
00:08:06,770 --> 00:08:11,280
quantum processor the wave is<font color="#CCCCCC"> the</font>

144
00:08:09,810 --> 00:08:14,280
organization<font color="#CCCCCC"> that is working very</font>

145
00:08:11,280 --> 00:08:18,599
seriously on<font color="#E5E5E5"> creative quantum processor</font>

146
00:08:14,280 --> 00:08:21,239
it has<font color="#CCCCCC"> already developed weeks it's very</font>

147
00:08:18,599 --> 00:08:23,849
powerful processor<font color="#E5E5E5"> and so they sign the</font>

148
00:08:21,240 --> 00:08:27,419
contract<font color="#E5E5E5"> that they will work together as</font>

149
00:08:23,849 --> 00:08:32,338
<font color="#E5E5E5">we said</font><font color="#CCCCCC"> error say crypto system</font><font color="#E5E5E5"> is used</font>

150
00:08:27,419 --> 00:08:35,159
very<font color="#CCCCCC"> widely</font><font color="#E5E5E5"> today it's used in operating</font>

151
00:08:32,339 --> 00:08:37,820
systems<font color="#E5E5E5"> from Microsoft</font><font color="#CCCCCC"> Apple's</font>

152
00:08:35,159 --> 00:08:41,880
<font color="#CCCCCC">Arnaudville in all operating systems yes</font>

153
00:08:37,820 --> 00:08:43,650
she is<font color="#CCCCCC"> also used for cryptographic</font>

154
00:08:41,880 --> 00:08:44,110
<font color="#CCCCCC">primitives in hardware</font>

155
00:08:43,650 --> 00:08:46,630
she

156
00:08:44,110 --> 00:08:51,220
a part of communication protocols like

157
00:08:46,630 --> 00:08:55,180
SSL s1 and so on years<font color="#E5E5E5"> and quantum</font>

158
00:08:51,220 --> 00:08:58,329
computers can<font color="#CCCCCC"> easily break it</font><font color="#E5E5E5"> how to</font>

159
00:08:55,180 --> 00:09:01,000
break it they can<font color="#CCCCCC"> easily solve</font><font color="#E5E5E5"> ax the</font>

160
00:08:58,329 --> 00:09:07,180
factorization<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> and it's a great</font>

161
00:09:01,000 --> 00:09:11,800
problem<font color="#CCCCCC"> yesterday that it will break RSA</font>

162
00:09:07,180 --> 00:09:14,739
and also<font color="#CCCCCC"> a lot of products will be</font>

163
00:09:11,800 --> 00:09:18,130
really vulnerable<font color="#E5E5E5"> so we can see that</font>

164
00:09:14,740 --> 00:09:21,459
<font color="#E5E5E5">there is a be safe is used today by 500</font>

165
00:09:18,130 --> 00:09:24,490
million users around<font color="#E5E5E5"> the world</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> years</font>

166
00:09:21,459 --> 00:09:27,250
and it uses RSA algorithm solar cell<font color="#CCCCCC"> ger</font>

167
00:09:24,490 --> 00:09:30,610
<font color="#E5E5E5">it is a mostly used algorri</font>

168
00:09:27,250 --> 00:09:37,269
so as we said it will cause complete

169
00:09:30,610 --> 00:09:40,450
house<font color="#E5E5E5"> breaking this RSA yes what to do</font>

170
00:09:37,269 --> 00:09:43,600
<font color="#E5E5E5">okay we have today RSA alternatives</font><font color="#CCCCCC"> I</font>

171
00:09:40,450 --> 00:09:46,450
will talk today<font color="#E5E5E5"> about I will just</font>

172
00:09:43,600 --> 00:09:49,060
describe shortly<font color="#E5E5E5"> basic of them and</font>

173
00:09:46,450 --> 00:09:52,360
afterwards<font color="#E5E5E5"> we will make the research</font>

174
00:09:49,060 --> 00:09:55,180
seriously<font color="#CCCCCC"> on two of</font><font color="#E5E5E5"> them so the</font><font color="#CCCCCC"> first</font>

175
00:09:52,360 --> 00:09:57,370
one is<font color="#E5E5E5"> hash based digital signature</font>

176
00:09:55,180 --> 00:10:00,189
scheme I will not talk<font color="#CCCCCC"> about a lot</font><font color="#E5E5E5"> about</font>

177
00:09:57,370 --> 00:10:03,370
<font color="#E5E5E5">it now because I will talk really</font><font color="#CCCCCC"> a lot</font>

178
00:10:00,190 --> 00:10:06,399
about it very<font color="#E5E5E5"> soon</font><font color="#CCCCCC"> so its security</font>

179
00:10:03,370 --> 00:10:09,850
depends on<font color="#E5E5E5"> the hash functions that it</font>

180
00:10:06,399 --> 00:10:14,320
uses years<font color="#E5E5E5"> another one is</font><font color="#CCCCCC"> code based</font>

181
00:10:09,850 --> 00:10:18,640
public<font color="#E5E5E5"> key cryptosystem the main the</font>

182
00:10:14,320 --> 00:10:22,240
obvious example<font color="#E5E5E5"> of it is mark mikelis</font>

183
00:10:18,640 --> 00:10:27,160
crypto system yes so very<font color="#CCCCCC"> quickly how it</font>

184
00:10:22,240 --> 00:10:29,079
works<font color="#E5E5E5"> it has</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> public in G Newton and</font>

185
00:10:27,160 --> 00:10:36,850
the private<font color="#E5E5E5"> keys</font><font color="#CCCCCC"> SGP</font>

186
00:10:29,079 --> 00:10:39,189
<font color="#E5E5E5">okay so gene is generator matrix that so</font>

187
00:10:36,850 --> 00:10:47,079
generate a metric for<font color="#E5E5E5"> code</font><font color="#CCCCCC"> C and this</font>

188
00:10:39,190 --> 00:10:50,470
code<font color="#E5E5E5"> is capable</font><font color="#CCCCCC"> to fix terrors</font><font color="#E5E5E5"> yes here</font>

189
00:10:47,079 --> 00:10:54,870
is our<font color="#CCCCCC"> Jian</font><font color="#E5E5E5"> s is random non singular</font>

190
00:10:50,470 --> 00:10:56,379
<font color="#E5E5E5">matrix P</font><font color="#CCCCCC"> n is permutation matrix and</font>

191
00:10:54,870 --> 00:11:00,259
together

192
00:10:56,379 --> 00:11:04,309
<font color="#CCCCCC">Jr we just multiply</font><font color="#E5E5E5"> all these matrixes</font>

193
00:11:00,259 --> 00:11:08,809
years to get the cipher we calculate

194
00:11:04,309 --> 00:11:09,949
this<font color="#CCCCCC"> sheep and sorry sorry sorry sorry</font>

195
00:11:08,809 --> 00:11:13,909
<font color="#E5E5E5">sir</font>

196
00:11:09,949 --> 00:11:16,039
okay we calculate<font color="#E5E5E5"> sheep and after what</font>

197
00:11:13,909 --> 00:11:20,149
we generate the vector we<font color="#E5E5E5"> where it is</font>

198
00:11:16,039 --> 00:11:23,569
<font color="#CCCCCC">our here this error vector wheel and we</font>

199
00:11:20,149 --> 00:11:26,359
add it to<font color="#CCCCCC"> seep</font><font color="#E5E5E5"> and get the cipher to</font>

200
00:11:23,569 --> 00:11:29,029
decrypt<font color="#E5E5E5"> first of all we calculate</font><font color="#CCCCCC"> sheep</font>

201
00:11:26,359 --> 00:11:29,749
<font color="#E5E5E5">after what to calculate</font><font color="#CCCCCC"> mu</font><font color="#E5E5E5"> and after</font>

202
00:11:29,029 --> 00:11:31,639
<font color="#CCCCCC">what Seema</font>

203
00:11:29,749 --> 00:11:34,609
I will not talk<font color="#E5E5E5"> a lot about it today</font>

204
00:11:31,639 --> 00:11:39,889
<font color="#CCCCCC">because we have</font><font color="#E5E5E5"> to review other systems</font>

205
00:11:34,609 --> 00:11:40,579
on which we have the research<font color="#CCCCCC"> shocks</font>

206
00:11:39,889 --> 00:11:44,029
today

207
00:11:40,579 --> 00:11:45,799
another one is resort one is latest

208
00:11:44,029 --> 00:11:48,199
based crypto system it's<font color="#E5E5E5"> very</font>

209
00:11:45,799 --> 00:11:52,039
interesting crypto system is very

210
00:11:48,199 --> 00:11:56,059
interesting<font color="#CCCCCC"> representative because it's</font>

211
00:11:52,039 --> 00:12:01,369
security<font color="#CCCCCC"> and is based on</font><font color="#E5E5E5"> the worst case</font>

212
00:11:56,059 --> 00:12:03,738
hardness one of these examples<font color="#E5E5E5"> is</font><font color="#CCCCCC"> Shore</font>

213
00:12:01,369 --> 00:12:06,049
<font color="#CCCCCC">tractor problem asipi</font><font color="#E5E5E5"> problem problem or</font>

214
00:12:03,739 --> 00:12:08,720
claw finding<font color="#E5E5E5"> closest what the problem</font><font color="#CCCCCC"> I</font>

215
00:12:06,049 --> 00:12:11,299
<font color="#E5E5E5">will talk much more about it today and</font>

216
00:12:08,720 --> 00:12:14,209
another one is very interesting<font color="#CCCCCC"> but very</font>

217
00:12:11,299 --> 00:12:19,749
very complicated<font color="#CCCCCC"> representative</font>

218
00:12:14,209 --> 00:12:22,998
multivariate<font color="#CCCCCC"> public-key cryptosystem so</font>

219
00:12:19,749 --> 00:12:26,659
it has a set of<font color="#E5E5E5"> quadratic polynomials</font>

220
00:12:22,999 --> 00:12:31,129
<font color="#E5E5E5">over some thin children and it's based</font>

221
00:12:26,659 --> 00:12:36,589
on NP hardness<font color="#E5E5E5"> of solving this nonlinear</font>

222
00:12:31,129 --> 00:12:39,499
equations it<font color="#CCCCCC"> lags a lot of proofs of</font>

223
00:12:36,589 --> 00:12:42,349
security and to<font color="#E5E5E5"> profile the security</font>

224
00:12:39,499 --> 00:12:44,779
staff we need specialist expert in

225
00:12:42,349 --> 00:12:47,059
geometric<font color="#E5E5E5"> algebra</font><font color="#CCCCCC"> all over the world</font>

226
00:12:44,779 --> 00:12:49,369
they are not<font color="#E5E5E5"> too many because of it now</font>

227
00:12:47,059 --> 00:12:52,339
it<font color="#CCCCCC"> is a problem and</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> of it we</font>

228
00:12:49,369 --> 00:12:54,229
don't<font color="#E5E5E5"> have any relevant results when I</font>

229
00:12:52,339 --> 00:12:57,109
visited a lot<font color="#CCCCCC"> of conversation a lot</font><font color="#E5E5E5"> of</font>

230
00:12:54,229 --> 00:13:00,049
<font color="#E5E5E5">conferences there was written new result</font>

231
00:12:57,109 --> 00:13:02,209
in multivariate<font color="#CCCCCC"> cryptosystem I was</font>

232
00:13:00,049 --> 00:13:08,239
sitting in the first row<font color="#E5E5E5"> listening and</font>

233
00:13:02,209 --> 00:13:09,739
nothing new<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so we have four</font>

234
00:13:08,239 --> 00:13:12,740
alternatives

235
00:13:09,740 --> 00:13:15,280
everything is<font color="#CCCCCC"> ok what</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> no the</font>

236
00:13:12,740 --> 00:13:18,590
problem<font color="#E5E5E5"> we do have because they are</font>

237
00:13:15,280 --> 00:13:21,890
<font color="#E5E5E5">successful attacks on these alternatives</font>

238
00:13:18,590 --> 00:13:25,070
<font color="#E5E5E5">they have efficiency problem</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> example</font>

239
00:13:21,890 --> 00:13:27,890
I<font color="#CCCCCC"> told that there are one of the example</font>

240
00:13:25,070 --> 00:13:33,730
of<font color="#E5E5E5"> the main example of code based crypto</font>

241
00:13:27,890 --> 00:13:37,780
systems is<font color="#CCCCCC"> mikelis</font><font color="#E5E5E5"> yes crypto system so</font>

242
00:13:33,730 --> 00:13:42,260
they was published a tack on<font color="#E5E5E5"> it it was</font>

243
00:13:37,780 --> 00:13:45,949
performed by<font color="#E5E5E5"> Nell Costigan together with</font>

244
00:13:42,260 --> 00:13:48,220
<font color="#CCCCCC">Michael's Court</font><font color="#E5E5E5"> also four countries were</font>

245
00:13:45,950 --> 00:13:50,540
<font color="#E5E5E5">involved in this process and they needed</font>

246
00:13:48,220 --> 00:13:54,170
<font color="#CCCCCC">8,000 CPU hours</font><font color="#E5E5E5"> for it</font>

247
00:13:50,540 --> 00:13:57,650
so what scientists responded on it why

248
00:13:54,170 --> 00:14:02,270
it was<font color="#CCCCCC"> broken they said the size of the</font>

249
00:13:57,650 --> 00:14:05,660
<font color="#CCCCCC">Kea was</font><font color="#E5E5E5"> not enough so they recommended</font>

250
00:14:02,270 --> 00:14:09,260
<font color="#E5E5E5">to enhance the size so it's already</font><font color="#CCCCCC"> the</font>

251
00:14:05,660 --> 00:14:12,050
problem yes and afterwards<font color="#CCCCCC"> also it has</font>

252
00:14:09,260 --> 00:14:15,400
another<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> we cannot encrypt the</font>

253
00:14:12,050 --> 00:14:20,209
same message twice<font color="#E5E5E5"> and we cannot encrypt</font>

254
00:14:15,400 --> 00:14:25,520
<font color="#E5E5E5">two messages when they exist the</font>

255
00:14:20,210 --> 00:14:27,620
relation<font color="#E5E5E5"> between these two messages also</font>

256
00:14:25,520 --> 00:14:30,560
<font color="#CCCCCC">the efficiencies you</font><font color="#E5E5E5"> will see afterwards</font>

257
00:14:27,620 --> 00:14:33,350
<font color="#CCCCCC">in our research</font><font color="#E5E5E5"> we have the efficiency</font>

258
00:14:30,560 --> 00:14:34,910
and problem and today where they have

259
00:14:33,350 --> 00:14:41,390
wonderful<font color="#E5E5E5"> results in</font><font color="#CCCCCC"> cryptography and</font>

260
00:14:34,910 --> 00:14:43,339
rather good results and inefficient

261
00:14:41,390 --> 00:14:49,730
cryptography can be<font color="#CCCCCC"> OK for normal user</font>

262
00:14:43,340 --> 00:14:54,470
<font color="#E5E5E5">but for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> server that processes million</font>

263
00:14:49,730 --> 00:14:58,010
tasks a second a<font color="#E5E5E5"> minute years 482 it is</font>

264
00:14:54,470 --> 00:15:00,830
a great problem<font color="#E5E5E5"> and already</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> Google</font>

265
00:14:58,010 --> 00:15:03,530
<font color="#CCCCCC">has some problems with modern</font>

266
00:15:00,830 --> 00:15:06,680
cryptography<font color="#CCCCCC"> so we can imagine</font><font color="#E5E5E5"> what will</font>

267
00:15:03,530 --> 00:15:13,010
be in if cryptography will be much less

268
00:15:06,680 --> 00:15:15,280
efficient and<font color="#E5E5E5"> also we must</font>

269
00:15:13,010 --> 00:15:18,910
<font color="#CCCCCC">account we must take into</font><font color="#E5E5E5"> consider</font>

270
00:15:15,280 --> 00:15:24,490
consideration the side channel<font color="#E5E5E5"> attacks</font>

271
00:15:18,910 --> 00:15:28,880
<font color="#E5E5E5">for example not so far away goal was</font>

272
00:15:24,490 --> 00:15:34,450
published sidechain<font color="#CCCCCC"> wrote X gauge timing</font>

273
00:15:28,880 --> 00:15:38,810
attack on SaaS after it Intel integrated

274
00:15:34,450 --> 00:15:43,900
<font color="#CCCCCC">ions</font><font color="#E5E5E5"> instructions to his processors also</font>

275
00:15:38,810 --> 00:15:47,630
<font color="#CCCCCC">on code based encryption</font><font color="#E5E5E5"> there was</font>

276
00:15:43,900 --> 00:15:50,780
performed attack<font color="#E5E5E5"> concretely on Patterson</font>

277
00:15:47,630 --> 00:15:54,260
algorithm that could not restore the key

278
00:15:50,780 --> 00:15:58,220
<font color="#E5E5E5">but it could</font><font color="#CCCCCC"> restores an error measure</font>

279
00:15:54,260 --> 00:16:00,370
<font color="#CCCCCC">reactor and by means of it</font><font color="#E5E5E5"> mmm</font>

280
00:15:58,220 --> 00:16:05,290
it was able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> restore the whole message</font>

281
00:16:00,370 --> 00:16:09,020
<font color="#E5E5E5">so we need really</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> a very big work</font>

282
00:16:05,290 --> 00:16:11,000
to get a new crypto system yes because

283
00:16:09,020 --> 00:16:14,480
<font color="#E5E5E5">when the new crypto system is good and</font>

284
00:16:11,000 --> 00:16:15,620
<font color="#E5E5E5">it's received as a standard after</font><font color="#CCCCCC"> what</font>

285
00:16:14,480 --> 00:16:17,500
we have to<font color="#E5E5E5"> make the</font><font color="#CCCCCC"> software</font>

286
00:16:15,620 --> 00:16:22,520
implementation of it

287
00:16:17,500 --> 00:16:26,420
we need obviously to create<font color="#E5E5E5"> a concrete</font>

288
00:16:22,520 --> 00:16:28,939
<font color="#E5E5E5">hardware for it so let's talk now</font><font color="#CCCCCC"> deeply</font>

289
00:16:26,420 --> 00:16:32,209
about<font color="#CCCCCC"> HBase</font><font color="#E5E5E5"> digital signature schemes</font>

290
00:16:28,940 --> 00:16:35,690
yes<font color="#E5E5E5"> about hash based cryptography</font><font color="#CCCCCC"> and so</font>

291
00:16:32,210 --> 00:16:39,650
as I<font color="#E5E5E5"> said it uses hash functions and its</font>

292
00:16:35,690 --> 00:16:42,550
<font color="#E5E5E5">security and is based on the</font><font color="#CCCCCC"> security of</font>

293
00:16:39,650 --> 00:16:42,550
<font color="#E5E5E5">these functions yes</font>

294
00:16:44,410 --> 00:16:49,060
so first was offered one time signature

295
00:16:47,990 --> 00:16:52,490
schemes

296
00:16:49,060 --> 00:16:55,180
<font color="#CCCCCC">concretely lien for signature scheme</font><font color="#E5E5E5"> how</font>

297
00:16:52,490 --> 00:17:02,920
it works<font color="#E5E5E5"> it</font><font color="#CCCCCC"> has</font>

298
00:16:55,180 --> 00:17:07,299
the signature<font color="#CCCCCC"> key</font><font color="#E5E5E5"> so this key consists</font>

299
00:17:02,920 --> 00:17:12,129
of twin lion lines<font color="#E5E5E5"> each line has a size</font>

300
00:17:07,299 --> 00:17:14,829
<font color="#E5E5E5">n and to get verification key we apply</font>

301
00:17:12,130 --> 00:17:21,579
<font color="#CCCCCC">one-way</font><font color="#E5E5E5"> function to it so here you see</font>

302
00:17:14,829 --> 00:17:23,948
an X our own<font color="#E5E5E5"> signature keys why are our</font>

303
00:17:21,579 --> 00:17:28,720
verification keys and how they are good

304
00:17:23,949 --> 00:17:31,809
we apply<font color="#E5E5E5"> f1 wave function what is this F</font>

305
00:17:28,720 --> 00:17:37,929
is<font color="#CCCCCC"> one way function</font><font color="#E5E5E5"> that map's</font><font color="#CCCCCC"> n bits</font><font color="#E5E5E5"> to</font>

306
00:17:31,809 --> 00:17:41,470
end bits yes and in<font color="#E5E5E5"> Lamport a signature</font>

307
00:17:37,929 --> 00:17:46,059
scheme as you see we<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to apply a</font>

308
00:17:41,470 --> 00:17:51,880
function<font color="#E5E5E5"> to n times and we will use this</font>

309
00:17:46,059 --> 00:17:54,940
result<font color="#E5E5E5"> so how we in</font><font color="#CCCCCC"> signs message</font><font color="#E5E5E5"> first</font>

310
00:17:51,880 --> 00:17:57,309
of all we hash it<font color="#E5E5E5"> why we hash</font><font color="#CCCCCC"> it because</font>

311
00:17:54,940 --> 00:18:00,760
it can<font color="#E5E5E5"> be really</font><font color="#CCCCCC"> big</font><font color="#E5E5E5"> and we need some</font>

312
00:17:57,309 --> 00:18:03,100
concrete<font color="#E5E5E5"> and size yes we hash it using</font>

313
00:18:00,760 --> 00:18:08,860
the hash function<font color="#E5E5E5"> here is how</font><font color="#CCCCCC"> I function</font>

314
00:18:03,100 --> 00:18:11,709
<font color="#E5E5E5">age and it receives on the input the</font>

315
00:18:08,860 --> 00:18:17,889
<font color="#CCCCCC">input</font><font color="#E5E5E5"> of arbitrary</font><font color="#CCCCCC"> size yes</font><font color="#E5E5E5"> and it</font><font color="#CCCCCC"> maps</font>

316
00:18:11,710 --> 00:18:22,480
it to<font color="#CCCCCC"> concrete size n how is</font><font color="#E5E5E5"> the perform</font>

317
00:18:17,890 --> 00:18:26,500
the signature yes so we have<font color="#CCCCCC"> 2 n strings</font>

318
00:18:22,480 --> 00:18:30,909
of keys each of length<font color="#E5E5E5"> n yes we can say</font>

319
00:18:26,500 --> 00:18:34,029
that there is<font color="#CCCCCC"> a pair n strings yes pair</font>

320
00:18:30,909 --> 00:18:37,590
of n strings<font color="#E5E5E5"> so which will look at the</font>

321
00:18:34,029 --> 00:18:40,860
message<font color="#E5E5E5"> if the first bit is 0 we take</font>

322
00:18:37,590 --> 00:18:40,860
the first

323
00:18:41,020 --> 00:18:46,418
zigu first signature<font color="#E5E5E5"> key from</font><font color="#CCCCCC"> the pair</font>

324
00:18:43,809 --> 00:18:47,049
of the<font color="#E5E5E5"> keys so like this which had every</font>

325
00:18:46,419 --> 00:18:49,720
ice<font color="#CCCCCC"> bit</font>

326
00:18:47,049 --> 00:18:51,429
so if ice<font color="#E5E5E5"> beat is zero we take the first</font>

327
00:18:49,720 --> 00:19:00,000
key from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> payer if it's what we take</font>

328
00:18:51,429 --> 00:19:04,270
the second bit from the<font color="#CCCCCC"> Jetfire yes so</font>

329
00:19:00,000 --> 00:19:08,500
and what is<font color="#E5E5E5"> the size of the signature is</font>

330
00:19:04,270 --> 00:19:12,460
N squared<font color="#CCCCCC"> and in this case we</font><font color="#E5E5E5"> don't use</font>

331
00:19:08,500 --> 00:19:15,690
a function at<font color="#E5E5E5"> all how we verify yes</font>

332
00:19:12,460 --> 00:19:18,309
<font color="#E5E5E5">first of all who has the</font><font color="#CCCCCC"> message</font><font color="#E5E5E5"> and</font>

333
00:19:15,690 --> 00:19:22,720
afterwards<font color="#CCCCCC"> who look at the message and</font>

334
00:19:18,309 --> 00:19:25,029
check if the hashed value is equal<font color="#CCCCCC"> to</font><font color="#E5E5E5"> a</font>

335
00:19:22,720 --> 00:19:27,370
corresponding Y well you know<font color="#E5E5E5"> isn't a</font>

336
00:19:25,029 --> 00:19:30,399
zero to the<font color="#E5E5E5"> first one in the pair if we</font>

337
00:19:27,370 --> 00:19:36,668
want to<font color="#CCCCCC"> the second</font><font color="#E5E5E5"> one and a one-way</font>

338
00:19:30,399 --> 00:19:41,229
<font color="#CCCCCC">function here is used</font><font color="#E5E5E5"> f x okay</font><font color="#CCCCCC"> as we say</font>

339
00:19:36,669 --> 00:19:44,649
<font color="#CCCCCC">that signature</font><font color="#E5E5E5"> becomes N squared when</font>

340
00:19:41,230 --> 00:19:47,200
the key so N<font color="#E5E5E5"> squared - when the hash of</font>

341
00:19:44,649 --> 00:19:49,270
the message is saying it's really<font color="#E5E5E5"> big in</font>

342
00:19:47,200 --> 00:19:51,580
this<font color="#E5E5E5"> case we have winter</font><font color="#CCCCCC"> net1 time</font>

343
00:19:49,270 --> 00:19:55,418
signature scheme<font color="#E5E5E5"> it reduces the size a</font>

344
00:19:51,580 --> 00:19:59,470
little<font color="#E5E5E5"> bit so here we take</font><font color="#CCCCCC"> zakian of the</font>

345
00:19:55,419 --> 00:20:03,039
length and<font color="#CCCCCC"> PN so they are n so there'd</font>

346
00:19:59,470 --> 00:20:09,159
<font color="#CCCCCC">be</font><font color="#E5E5E5"> lines of length n let's see</font><font color="#CCCCCC"> them</font>

347
00:20:03,039 --> 00:20:11,169
what is this<font color="#CCCCCC"> PN</font><font color="#E5E5E5"> so we divide we have</font>

348
00:20:09,159 --> 00:20:15,460
here<font color="#CCCCCC"> winter next parameter it must be</font>

349
00:20:11,169 --> 00:20:18,940
more than<font color="#CCCCCC"> tune</font><font color="#E5E5E5"> or what is it it shows</font>

350
00:20:15,460 --> 00:20:25,390
how many and measure how many<font color="#E5E5E5"> bits we</font>

351
00:20:18,940 --> 00:20:29,260
<font color="#CCCCCC">can sign simultaneously so P</font><font color="#E5E5E5"> 1 is n</font>

352
00:20:25,390 --> 00:20:29,620
divided<font color="#CCCCCC"> by W</font><font color="#E5E5E5"> and P 2 is calculated</font><font color="#CCCCCC"> like</font>

353
00:20:29,260 --> 00:20:36,179
this

354
00:20:29,620 --> 00:20:36,178
and P is<font color="#E5E5E5"> the sum of this P 1 and P 2 so</font>

355
00:20:36,870 --> 00:20:43,959
how is done as a signature<font color="#CCCCCC"> so first of</font>

356
00:20:42,220 --> 00:20:47,200
all how<font color="#CCCCCC"> to get the</font><font color="#E5E5E5"> verification key and</font>

357
00:20:43,960 --> 00:20:51,070
verification key is got<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> so we</font>

358
00:20:47,200 --> 00:20:53,530
apply to X I a function<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to double</font><font color="#CCCCCC"> to</font>

359
00:20:51,070 --> 00:20:57,730
<font color="#CCCCCC">2w minus</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> times here</font>

360
00:20:53,530 --> 00:21:01,300
and the function f<font color="#E5E5E5"> here must be used P</font>

361
00:20:57,730 --> 00:21:03,660
<font color="#CCCCCC">to Delta W minus 1 times yes so quite a</font>

362
00:21:01,300 --> 00:21:03,659
lot

363
00:21:05,580 --> 00:21:11,439
so how we generate a signature<font color="#E5E5E5"> we have</font>

364
00:21:08,530 --> 00:21:14,680
the message prepend<font color="#E5E5E5"> the concrete number</font>

365
00:21:11,440 --> 00:21:21,910
of zeros to<font color="#CCCCCC"> it why because it might be</font>

366
00:21:14,680 --> 00:21:26,170
dividable by<font color="#CCCCCC"> w on so afterwards we</font>

367
00:21:21,910 --> 00:21:29,710
calculate the checksum we prepare we

368
00:21:26,170 --> 00:21:40,810
<font color="#E5E5E5">prepared zeros to eat it to be dividable</font>

369
00:21:29,710 --> 00:21:46,960
by<font color="#CCCCCC"> W and</font><font color="#E5E5E5"> one minute</font><font color="#CCCCCC"> okay PP</font><font color="#E5E5E5"> one we have</font>

370
00:21:40,810 --> 00:21:49,899
and we divide it it into W parts into P

371
00:21:46,960 --> 00:21:52,290
two parts and get this case yes so

372
00:21:49,900 --> 00:21:57,490
signature<font color="#CCCCCC"> will calculate like this and</font>

373
00:21:52,290 --> 00:22:00,879
in the worst case we<font color="#CCCCCC"> use our one-way</font>

374
00:21:57,490 --> 00:22:04,330
function f p<font color="#E5E5E5"> to double to</font><font color="#CCCCCC"> two 2w minus</font>

375
00:22:00,880 --> 00:22:06,790
<font color="#CCCCCC">one</font><font color="#E5E5E5"> times so let's consider the worst</font>

376
00:22:04,330 --> 00:22:11,500
<font color="#CCCCCC">case and the signature size as we said</font>

377
00:22:06,790 --> 00:22:17,170
is<font color="#CCCCCC"> piernas we made</font><font color="#E5E5E5"> the analysis it's</font>

378
00:22:11,500 --> 00:22:22,450
less<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it depends on something</font><font color="#CCCCCC"> and of</font>

379
00:22:17,170 --> 00:22:25,720
course it loses efficiency<font color="#CCCCCC"> oh so fourth</font>

380
00:22:22,450 --> 00:22:29,200
<font color="#CCCCCC">degree signature verification we have</font><font color="#E5E5E5"> to</font>

381
00:22:25,720 --> 00:22:30,970
<font color="#E5E5E5">for first of all we calculate</font><font color="#CCCCCC"> K eyes and</font>

382
00:22:29,200 --> 00:22:34,000
afterwards we verify the<font color="#E5E5E5"> following</font>

383
00:22:30,970 --> 00:22:35,800
<font color="#E5E5E5">equation if it's thrown the signature is</font>

384
00:22:34,000 --> 00:22:40,600
true and for signature verification

385
00:22:35,800 --> 00:22:44,260
phase<font color="#E5E5E5"> F must be</font><font color="#CCCCCC"> used people</font><font color="#E5E5E5"> 2w minus</font><font color="#CCCCCC"> 1</font>

386
00:22:40,600 --> 00:22:48,879
<font color="#E5E5E5">times okay so we talked about one time</font>

387
00:22:44,260 --> 00:22:51,040
signatures<font color="#E5E5E5"> here we have a lot of</font>

388
00:22:48,880 --> 00:22:53,410
verification<font color="#CCCCCC"> keys and as you know in</font>

389
00:22:51,040 --> 00:22:59,260
cryptography is very difficult

390
00:22:53,410 --> 00:23:01,900
problematic to send so many<font color="#E5E5E5"> keys so here</font>

391
00:22:59,260 --> 00:23:05,590
is<font color="#CCCCCC"> merkel a crypto system that uses</font><font color="#E5E5E5"> one</font>

392
00:23:01,900 --> 00:23:08,260
public in<font color="#E5E5E5"> that it is the root of</font><font color="#CCCCCC"> the</font>

393
00:23:05,590 --> 00:23:11,580
tree<font color="#CCCCCC"> i</font><font color="#E5E5E5"> will show you how it works</font><font color="#CCCCCC"> also</font>

394
00:23:08,260 --> 00:23:17,580
<font color="#CCCCCC">you will see</font><font color="#E5E5E5"> the implementation</font><font color="#CCCCCC"> so it</font>

395
00:23:11,580 --> 00:23:21,250
uses<font color="#E5E5E5"> the</font><font color="#CCCCCC"> public</font><font color="#E5E5E5"> ian and you will see how</font>

396
00:23:17,580 --> 00:23:24,129
so how<font color="#E5E5E5"> and of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> it uses one time</font>

397
00:23:21,250 --> 00:23:29,050
signature or Lamport<font color="#E5E5E5"> or winter needs so</font>

398
00:23:24,130 --> 00:23:34,480
let's<font color="#CCCCCC"> discuss how we generate a key yes</font>

399
00:23:29,050 --> 00:23:37,840
<font color="#E5E5E5">first of all we choose the length of the</font>

400
00:23:34,480 --> 00:23:42,820
trillion age and it must be<font color="#E5E5E5"> more or less</font>

401
00:23:37,840 --> 00:23:48,580
than<font color="#CCCCCC"> two yes and by means of</font><font color="#E5E5E5"> it we can</font>

402
00:23:42,820 --> 00:23:53,230
sign to<font color="#CCCCCC"> 2h signatures</font><font color="#E5E5E5"> to 2h messages so</font>

403
00:23:48,580 --> 00:23:58,530
afterwards we generate signature

404
00:23:53,230 --> 00:24:02,470
signature keys not to<font color="#E5E5E5"> to the age and</font>

405
00:23:58,530 --> 00:24:10,930
<font color="#E5E5E5">calculate say verification keys complete</font>

406
00:24:02,470 --> 00:24:14,050
but well our one-way function yes so and

407
00:24:10,930 --> 00:24:17,530
<font color="#E5E5E5">here look so we calculate</font><font color="#CCCCCC"> see we</font>

408
00:24:14,050 --> 00:24:20,980
generated<font color="#CCCCCC"> x i's afterwards</font><font color="#E5E5E5"> we get twice</font>

409
00:24:17,530 --> 00:24:23,860
<font color="#CCCCCC">y's are our signature verification keys</font>

410
00:24:20,980 --> 00:24:29,590
and wash them<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this hash values are</font>

411
00:24:23,860 --> 00:24:33,060
already<font color="#E5E5E5"> the Leafs of our tree</font><font color="#CCCCCC"> so how we</font>

412
00:24:29,590 --> 00:24:36,159
go up up up up up and<font color="#E5E5E5"> up yes we have to</font>

413
00:24:33,060 --> 00:24:38,800
come to this public<font color="#E5E5E5"> here the size is</font>

414
00:24:36,160 --> 00:24:43,510
real so<font color="#E5E5E5"> we can sign how many messages</font>

415
00:24:38,800 --> 00:24:49,110
<font color="#CCCCCC">eight yes</font><font color="#E5E5E5"> two to the three so here we</font>

416
00:24:43,510 --> 00:24:52,060
have a<font color="#CCCCCC"> 0 0</font><font color="#E5E5E5"> and a</font><font color="#CCCCCC"> 0 1 we concatenate</font>

417
00:24:49,110 --> 00:24:56,709
<font color="#CCCCCC">these two messages these</font><font color="#E5E5E5"> two nodes and</font>

418
00:24:52,060 --> 00:25:01,290
racism and here<font color="#E5E5E5"> a 0 a 1 0 is</font>

419
00:24:56,710 --> 00:25:04,330
concatenation of this<font color="#CCCCCC"> -</font><font color="#E5E5E5"> but hashed</font>

420
00:25:01,290 --> 00:25:06,820
afterwards<font color="#E5E5E5"> we calculate this one in the</font>

421
00:25:04,330 --> 00:25:09,389
same way<font color="#E5E5E5"> this one is</font><font color="#CCCCCC"> the same it's</font>

422
00:25:06,820 --> 00:25:13,710
concatenation of this - hey

423
00:25:09,390 --> 00:25:17,280
and like this<font color="#E5E5E5"> we</font><font color="#CCCCCC"> go up up up up</font><font color="#E5E5E5"> and here</font>

424
00:25:13,710 --> 00:25:20,490
is a<font color="#CCCCCC"> bubble yes our public</font><font color="#E5E5E5"> key and look</font>

425
00:25:17,280 --> 00:25:23,250
<font color="#E5E5E5">if we</font><font color="#CCCCCC"> begin from here</font><font color="#E5E5E5"> if we</font><font color="#CCCCCC"> begin</font><font color="#E5E5E5"> from</font>

426
00:25:20,490 --> 00:25:27,299
here<font color="#E5E5E5"> to go up this is</font><font color="#CCCCCC"> the main node and</font>

427
00:25:23,250 --> 00:25:31,620
<font color="#E5E5E5">then this is a flattened</font><font color="#CCCCCC"> node</font><font color="#E5E5E5"> so his</font>

428
00:25:27,299 --> 00:25:35,490
brother<font color="#E5E5E5"> so we got here this one is</font><font color="#CCCCCC"> a man</font>

429
00:25:31,620 --> 00:25:41,159
<font color="#E5E5E5">this one is the</font><font color="#CCCCCC"> flatten own and like</font>

430
00:25:35,490 --> 00:25:44,370
this<font color="#E5E5E5"> you</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> see where we</font><font color="#CCCCCC"> need it so to</font>

431
00:25:41,160 --> 00:25:48,570
sign the message<font color="#E5E5E5"> first of all we hash it</font>

432
00:25:44,370 --> 00:25:52,049
<font color="#E5E5E5">to make it to reduce it to</font><font color="#CCCCCC"> the size of n</font>

433
00:25:48,570 --> 00:25:54,299
<font color="#E5E5E5">and after what we generate one time</font>

434
00:25:52,049 --> 00:25:58,500
signature<font color="#E5E5E5"> yes we saw in previous</font>

435
00:25:54,299 --> 00:26:01,230
<font color="#E5E5E5">algorithm afterwards we choose one of</font>

436
00:25:58,500 --> 00:26:04,049
<font color="#E5E5E5">the signature keys</font><font color="#CCCCCC"> any of them for</font>

437
00:26:01,230 --> 00:26:06,090
example<font color="#E5E5E5"> let's call it with the index</font><font color="#CCCCCC"> N</font>

438
00:26:04,049 --> 00:26:13,049
yes here it is

439
00:26:06,090 --> 00:26:22,230
we calculate<font color="#E5E5E5"> why any and what we do we</font>

440
00:26:13,049 --> 00:26:26,450
go up we go up to the upper<font color="#CCCCCC"> node</font><font color="#E5E5E5"> yes to</font>

441
00:26:22,230 --> 00:26:29,490
our<font color="#CCCCCC"> call calculator</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> publican and</font>

442
00:26:26,450 --> 00:26:32,070
<font color="#CCCCCC">recorded all the browser</font><font color="#E5E5E5"> nodes all the</font>

443
00:26:29,490 --> 00:26:35,790
aisle<font color="#E5E5E5"> with</font><font color="#CCCCCC"> their called Alice's all the</font>

444
00:26:32,070 --> 00:26:39,510
<font color="#E5E5E5">Alice's I write somewhere yes and what</font>

445
00:26:35,790 --> 00:26:43,168
<font color="#E5E5E5">is my signature my signature is one time</font>

446
00:26:39,510 --> 00:26:44,820
signature my it also contains all the

447
00:26:43,169 --> 00:26:49,799
<font color="#CCCCCC">our C's</font><font color="#E5E5E5"> it called</font>

448
00:26:44,820 --> 00:26:52,080
it contains<font color="#E5E5E5"> why verification</font><font color="#CCCCCC"> key in from</font>

449
00:26:49,799 --> 00:26:55,049
way I began and the index of this

450
00:26:52,080 --> 00:26:57,899
<font color="#CCCCCC">verification key</font><font color="#E5E5E5"> here it is signature</font>

451
00:26:55,049 --> 00:27:01,710
<font color="#CCCCCC">pub one time signature pub public in</font>

452
00:26:57,900 --> 00:27:06,330
this index<font color="#E5E5E5"> why and all the offices how I</font>

453
00:27:01,710 --> 00:27:09,660
verify the signature<font color="#E5E5E5"> first of all I will</font>

454
00:27:06,330 --> 00:27:12,178
fire one time signature<font color="#CCCCCC"> ah oh it doesn't</font>

455
00:27:09,660 --> 00:27:13,590
depend which one will use lamb portal

456
00:27:12,179 --> 00:27:18,150
will turn<font color="#E5E5E5"> its years we know how to</font>

457
00:27:13,590 --> 00:27:21,720
verify both of them and afterwards<font color="#CCCCCC"> I</font>

458
00:27:18,150 --> 00:27:22,669
have<font color="#CCCCCC"> their Oh</font><font color="#E5E5E5"> sis low guys</font><font color="#CCCCCC"> I have their</font>

459
00:27:21,720 --> 00:27:25,609
<font color="#E5E5E5">Oh sis</font>

460
00:27:22,669 --> 00:27:29,210
so I<font color="#E5E5E5"> calculate the hash</font><font color="#CCCCCC"> of it I know it</font>

461
00:27:25,609 --> 00:27:32,389
I know<font color="#E5E5E5"> house it's in my public key and I</font>

462
00:27:29,210 --> 00:27:36,129
concatenate them calculate it<font color="#E5E5E5"> this one I</font>

463
00:27:32,389 --> 00:27:41,709
know<font color="#CCCCCC"> it's written</font><font color="#E5E5E5"> and can say Si and I</font>

464
00:27:36,129 --> 00:27:45,350
calculate my<font color="#E5E5E5"> public my public key and</font>

465
00:27:41,710 --> 00:27:48,279
check if it is<font color="#E5E5E5"> the same if one time</font>

466
00:27:45,350 --> 00:27:54,129
signature is<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> if public public key</font>

467
00:27:48,279 --> 00:27:57,169
is the<font color="#E5E5E5"> same so the signature is verified</font>

468
00:27:54,129 --> 00:28:00,889
<font color="#E5E5E5">okay everything is well it was some kind</font>

469
00:27:57,169 --> 00:28:03,470
of introduction<font color="#E5E5E5"> now what we do what we</font>

470
00:28:00,889 --> 00:28:08,330
did<font color="#E5E5E5"> this one is also on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> famous</font>

471
00:28:03,470 --> 00:28:11,720
<font color="#E5E5E5">result because it's a problem</font><font color="#CCCCCC"> to have to</font>

472
00:28:08,330 --> 00:28:14,629
store so many private<font color="#E5E5E5"> keys by off so for</font>

473
00:28:11,720 --> 00:28:18,399
this is used<font color="#CCCCCC"> safe the random number</font>

474
00:28:14,629 --> 00:28:23,899
generator that we looked through today

475
00:28:18,399 --> 00:28:26,209
<font color="#CCCCCC">so we store only the</font><font color="#E5E5E5"> seed afterwards we</font>

476
00:28:23,899 --> 00:28:29,418
apply it<font color="#E5E5E5"> to preserve the</font><font color="#CCCCCC"> oops</font><font color="#E5E5E5"> applied</font>

477
00:28:26,210 --> 00:28:33,109
random number generator to<font color="#CCCCCC"> the seed and</font>

478
00:28:29,419 --> 00:28:38,509
get the<font color="#E5E5E5"> next seed and one random number</font>

479
00:28:33,109 --> 00:28:42,168
so here how it works<font color="#E5E5E5"> it's applied to</font><font color="#CCCCCC"> our</font>

480
00:28:38,509 --> 00:28:45,679
<font color="#CCCCCC">seed gets</font><font color="#E5E5E5"> we get</font><font color="#CCCCCC"> a new seed and one</font>

481
00:28:42,169 --> 00:28:48,919
random number and<font color="#CCCCCC"> one and urine random</font>

482
00:28:45,679 --> 00:28:53,090
number<font color="#E5E5E5"> yes so here it is here</font><font color="#CCCCCC"> it's</font>

483
00:28:48,919 --> 00:28:57,019
<font color="#CCCCCC">illustrated how it works I have</font><font color="#E5E5E5"> the seed</font>

484
00:28:53,090 --> 00:29:01,399
I get a new seed and I calculate<font color="#CCCCCC"> OSIS</font><font color="#E5E5E5"> x</font>

485
00:28:57,019 --> 00:29:06,350
XY<font color="#E5E5E5"> z--</font><font color="#CCCCCC"> here is a</font><font color="#E5E5E5"> problem it's official</font>

486
00:29:01,399 --> 00:29:08,889
result<font color="#E5E5E5"> published by Bernstein and but</font>

487
00:29:06,350 --> 00:29:14,779
here is a problem<font color="#CCCCCC"> that quantum computer</font>

488
00:29:08,889 --> 00:29:16,549
can<font color="#E5E5E5"> break all a lot of</font><font color="#CCCCCC"> observe</font><font color="#E5E5E5"> the</font>

489
00:29:14,779 --> 00:29:22,399
random number generators that are

490
00:29:16,549 --> 00:29:27,440
considered safe today<font color="#E5E5E5"> so here was recall</font>

491
00:29:22,399 --> 00:29:31,099
also made implemented attack on<font color="#CCCCCC"> bloom</font>

492
00:29:27,440 --> 00:29:36,380
<font color="#CCCCCC">McCallion generator it was considered</font>

493
00:29:31,099 --> 00:29:40,428
safe<font color="#E5E5E5"> and was used in</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> products</font>

494
00:29:36,380 --> 00:29:46,789
and<font color="#CCCCCC"> this attack</font><font color="#E5E5E5"> used Grover's algorithm</font>

495
00:29:40,429 --> 00:29:49,760
<font color="#E5E5E5">it's quantum algorithm and</font><font color="#CCCCCC"> discrete and</font>

496
00:29:46,789 --> 00:29:52,520
quantum discrete logarithm so<font color="#E5E5E5"> and using</font>

497
00:29:49,760 --> 00:29:53,840
this method we<font color="#CCCCCC"> can break a lot</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> cell</font>

498
00:29:52,520 --> 00:29:55,760
<font color="#CCCCCC">to random number generators that are</font>

499
00:29:53,840 --> 00:29:59,480
considered safe today

500
00:29:55,760 --> 00:30:02,480
so what we offer<font color="#E5E5E5"> it was the first I</font>

501
00:29:59,480 --> 00:30:05,750
offer in this presentation<font color="#CCCCCC"> we offer to</font>

502
00:30:02,480 --> 00:30:09,909
use<font color="#E5E5E5"> through random number generator not</font>

503
00:30:05,750 --> 00:30:11,600
<font color="#CCCCCC">saved on what is saved on saved on is</font>

504
00:30:09,909 --> 00:30:15,380
not random

505
00:30:11,600 --> 00:30:20,059
it looks like random very much so if we

506
00:30:15,380 --> 00:30:22,429
check it according the tests<font color="#CCCCCC"> that exists</font>

507
00:30:20,059 --> 00:30:24,460
<font color="#CCCCCC">or we cannot</font><font color="#E5E5E5"> distinguish it yes but here</font>

508
00:30:22,429 --> 00:30:29,919
quantum computer distinguished<font color="#E5E5E5"> yes so</font>

509
00:30:24,460 --> 00:30:32,480
and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> advise</font><font color="#E5E5E5"> here we offer to create</font>

510
00:30:29,919 --> 00:30:34,760
<font color="#CCCCCC">true</font><font color="#E5E5E5"> random number generator using</font>

511
00:30:32,480 --> 00:30:38,150
qubits<font color="#CCCCCC"> because we are making</font><font color="#E5E5E5"> it for</font>

512
00:30:34,760 --> 00:30:40,429
quantum computers yes<font color="#E5E5E5"> so we can use</font>

513
00:30:38,150 --> 00:30:41,840
<font color="#E5E5E5">copies yes in it</font>

514
00:30:40,429 --> 00:30:43,309
it's already<font color="#CCCCCC"> a part of</font><font color="#E5E5E5"> quantum</font>

515
00:30:41,840 --> 00:30:45,199
cryptography<font color="#CCCCCC"> what I was talking about</font>

516
00:30:43,309 --> 00:30:48,080
was post quantum and this is<font color="#E5E5E5"> little part</font>

517
00:30:45,200 --> 00:30:53,929
of<font color="#E5E5E5"> quantum cryptography we will use some</font>

518
00:30:48,080 --> 00:30:57,590
aspects from here so and what is

519
00:30:53,929 --> 00:30:58,940
<font color="#E5E5E5">important so seldom</font><font color="#CCCCCC"> appear in chip so</font>

520
00:30:57,590 --> 00:31:02,090
<font color="#E5E5E5">the random number generator we need</font>

521
00:30:58,940 --> 00:31:06,970
twice<font color="#E5E5E5"> first in generation stage yes to</font>

522
00:31:02,090 --> 00:31:12,350
get all this signature keys<font color="#CCCCCC"> x wise and</font>

523
00:31:06,970 --> 00:31:16,490
<font color="#E5E5E5">also in signature stage stage to apply</font>

524
00:31:12,350 --> 00:31:20,780
this XY z-- to sign the message yes so

525
00:31:16,490 --> 00:31:24,220
what is a<font color="#CCCCCC"> qubit</font><font color="#E5E5E5"> quickly and so the</font><font color="#CCCCCC"> state</font>

526
00:31:20,780 --> 00:31:27,110
of<font color="#CCCCCC"> the qubit we can write like this</font>

527
00:31:24,220 --> 00:31:31,970
<font color="#CCCCCC">where alpha and beta are complex</font><font color="#E5E5E5"> numbers</font>

528
00:31:27,110 --> 00:31:36,020
<font color="#CCCCCC">and alpha squared plus beta squared is 1</font>

529
00:31:31,970 --> 00:31:40,970
so<font color="#CCCCCC"> when we measure this ku</font><font color="#E5E5E5"> bit it is</font>

530
00:31:36,020 --> 00:31:43,850
with<font color="#CCCCCC"> probability alpha squared</font><font color="#E5E5E5"> in state</font>

531
00:31:40,970 --> 00:31:46,820
<font color="#E5E5E5">0 and with probability beta squared</font><font color="#CCCCCC"> in</font>

532
00:31:43,850 --> 00:31:49,280
state 1 it doesn't<font color="#E5E5E5"> know where it is but</font>

533
00:31:46,820 --> 00:31:49,860
<font color="#E5E5E5">when you guys measure it afterwards it</font>

534
00:31:49,280 --> 00:31:53,040
goes to

535
00:31:49,860 --> 00:31:57,870
stage and<font color="#E5E5E5"> forget its previous stage is</font>

536
00:31:53,040 --> 00:32:03,840
the problem<font color="#E5E5E5"> so and we need random number</font>

537
00:31:57,870 --> 00:32:06,449
twice<font color="#E5E5E5"> so like this we</font><font color="#CCCCCC"> can describe the</font>

538
00:32:03,840 --> 00:32:12,949
<font color="#CCCCCC">system of two qubits</font><font color="#E5E5E5"> the same alphabet</font>

539
00:32:06,450 --> 00:32:16,530
are<font color="#CCCCCC"> our complex</font><font color="#E5E5E5"> numbers and the</font><font color="#CCCCCC"> sum of</font>

540
00:32:12,950 --> 00:32:19,799
alphas must be squared must<font color="#CCCCCC"> be</font><font color="#E5E5E5"> one so</font>

541
00:32:16,530 --> 00:32:23,190
<font color="#E5E5E5">very interesting property of qubits is</font>

542
00:32:19,799 --> 00:32:28,770
entanglement<font color="#CCCCCC"> so-called the</font><font color="#E5E5E5"> bell</font><font color="#CCCCCC"> state</font>

543
00:32:23,190 --> 00:32:31,320
<font color="#CCCCCC">what is it we connect two qubits</font><font color="#E5E5E5"> one we</font>

544
00:32:28,770 --> 00:32:34,350
can take to<font color="#E5E5E5"> the universe</font><font color="#CCCCCC"> it's some kind</font>

545
00:32:31,320 --> 00:32:38,639
<font color="#E5E5E5">of so-called teleportation so we can</font>

546
00:32:34,350 --> 00:32:40,860
take<font color="#CCCCCC"> it to universe and when we measure</font>

547
00:32:38,640 --> 00:32:44,790
the<font color="#E5E5E5"> first one the second one we measure</font>

548
00:32:40,860 --> 00:32:48,389
and get the<font color="#E5E5E5"> opposite state of this first</font>

549
00:32:44,790 --> 00:32:52,440
one so we can recover<font color="#E5E5E5"> we can understand</font>

550
00:32:48,390 --> 00:32:55,410
what was the<font color="#E5E5E5"> first one so this ball</font>

551
00:32:52,440 --> 00:32:58,200
state is described<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> what does</font>

552
00:32:55,410 --> 00:33:03,990
<font color="#E5E5E5">it mean it means that</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> we measure</font>

553
00:32:58,200 --> 00:33:05,640
<font color="#E5E5E5">the qubit is with the probability</font><font color="#CCCCCC"> 1/2</font>

554
00:33:03,990 --> 00:33:09,059
<font color="#CCCCCC">the tool</font><font color="#E5E5E5"> yes</font>

555
00:33:05,640 --> 00:33:12,270
probability 0 and<font color="#E5E5E5"> 1/2 in state 0 and</font>

556
00:33:09,059 --> 00:33:16,410
with the same<font color="#CCCCCC"> probability of course in</font>

557
00:33:12,270 --> 00:33:22,740
state 1 so it is<font color="#E5E5E5"> random number yes so</font>

558
00:33:16,410 --> 00:33:27,030
what we do in<font color="#CCCCCC"> key generally for key</font>

559
00:33:22,740 --> 00:33:31,290
<font color="#E5E5E5">generation we take the trillion of hate</font>

560
00:33:27,030 --> 00:33:35,610
<font color="#CCCCCC">H and we can sign 2 to the</font><font color="#E5E5E5"> H documents</font>

561
00:33:31,290 --> 00:33:38,970
yes<font color="#E5E5E5"> using our public</font><font color="#CCCCCC"> key we connect two</font>

562
00:33:35,610 --> 00:33:44,719
qubits<font color="#E5E5E5"> using</font><font color="#CCCCCC"> ball state yes we take 2</font><font color="#E5E5E5"> H</font>

563
00:33:38,970 --> 00:33:50,070
pairs of the set of kibitz<font color="#E5E5E5"> q</font><font color="#CCCCCC"> i qy + py</font>

564
00:33:44,720 --> 00:33:56,790
<font color="#E5E5E5">yes and we measure these qubits and use</font>

565
00:33:50,070 --> 00:34:00,210
them at X so we get signature keys after

566
00:33:56,790 --> 00:34:02,700
<font color="#CCCCCC">what we get</font><font color="#E5E5E5"> we calculate Y as usually</font>

567
00:34:00,210 --> 00:34:07,980
our verification keys

568
00:34:02,700 --> 00:34:11,639
and when we need<font color="#E5E5E5"> to sign the message how</font>

569
00:34:07,980 --> 00:34:13,649
we get<font color="#E5E5E5"> X we measure the second part of</font>

570
00:34:11,639 --> 00:34:18,750
the<font color="#E5E5E5"> copy that will be in the opposite to</font>

571
00:34:13,649 --> 00:34:22,078
<font color="#CCCCCC">C so we restore the information and sign</font>

572
00:34:18,750 --> 00:34:24,540
our message<font color="#E5E5E5"> and that's it about</font><font color="#CCCCCC"> the</font>

573
00:34:22,079 --> 00:34:27,359
<font color="#E5E5E5">security and it's of course</font><font color="#CCCCCC"> secure</font>

574
00:34:24,540 --> 00:34:30,000
because<font color="#CCCCCC"> we don't change the idea of</font>

575
00:34:27,359 --> 00:34:35,279
<font color="#E5E5E5">murkly but integrate through random</font>

576
00:34:30,000 --> 00:34:38,309
number generator<font color="#CCCCCC"> to it</font><font color="#E5E5E5"> okay so here mmm</font>

577
00:34:35,280 --> 00:34:42,530
we say we see in that<font color="#CCCCCC"> in</font><font color="#E5E5E5"> Lampert</font><font color="#CCCCCC"> one</font>

578
00:34:38,309 --> 00:34:48,230
time signature<font color="#E5E5E5"> one time function we use</font>

579
00:34:42,530 --> 00:34:51,149
to n times in

580
00:34:48,230 --> 00:34:55,040
signature<font color="#E5E5E5"> stage it</font><font color="#CCCCCC"> is not used at all</font>

581
00:34:51,149 --> 00:34:58,759
and to generate

582
00:34:55,040 --> 00:35:01,160
and verify the signature<font color="#E5E5E5"> we use it n</font>

583
00:34:58,760 --> 00:35:05,210
times yes and here are the<font color="#E5E5E5"> results for</font>

584
00:35:01,160 --> 00:35:07,009
<font color="#E5E5E5">Internet's as we said in</font><font color="#CCCCCC"> Merkley</font><font color="#E5E5E5"> we use</font>

585
00:35:05,210 --> 00:35:11,720
one time signature yes

586
00:35:07,010 --> 00:35:15,619
so all<font color="#E5E5E5"> this or this so we must use one</font>

587
00:35:11,720 --> 00:35:18,740
time function this number of times<font color="#CCCCCC"> and</font>

588
00:35:15,619 --> 00:35:22,930
also in<font color="#CCCCCC"> Murray class</font><font color="#E5E5E5"> you saw when</font><font color="#CCCCCC"> we use</font>

589
00:35:18,740 --> 00:35:27,350
a lot<font color="#CCCCCC"> of times</font><font color="#E5E5E5"> hash function we use it</font>

590
00:35:22,930 --> 00:35:32,000
this number of<font color="#E5E5E5"> times where H is</font><font color="#CCCCCC"> the head</font>

591
00:35:27,350 --> 00:35:37,368
<font color="#CCCCCC">of the three years so very serious</font>

592
00:35:32,000 --> 00:35:39,859
<font color="#E5E5E5">attention so we must the pace very</font>

593
00:35:37,369 --> 00:35:43,250
serious attention<font color="#CCCCCC"> to this one why one</font>

594
00:35:39,859 --> 00:35:45,410
way and<font color="#E5E5E5"> high function and here in the</font>

595
00:35:43,250 --> 00:35:48,470
beginning<font color="#CCCCCC"> I told about one of the</font>

596
00:35:45,410 --> 00:35:52,899
alternatives ladies based which<font color="#E5E5E5"> security</font>

597
00:35:48,470 --> 00:35:57,520
<font color="#CCCCCC">is based on</font><font color="#E5E5E5"> worst case hardness years so</font>

598
00:35:52,900 --> 00:36:00,820
here we offer to use<font color="#E5E5E5"> latest based</font>

599
00:35:57,520 --> 00:36:03,830
signature schemes<font color="#CCCCCC"> ladies</font><font color="#E5E5E5"> based</font>

600
00:36:00,820 --> 00:36:09,730
construction to construct hash and to

601
00:36:03,830 --> 00:36:13,220
<font color="#E5E5E5">construct one to</font><font color="#CCCCCC"> one to one functions so</font>

602
00:36:09,730 --> 00:36:16,690
about the hash function<font color="#CCCCCC"> we have shuttle</font>

603
00:36:13,220 --> 00:36:20,480
and<font color="#CCCCCC"> shasthri</font><font color="#E5E5E5"> yes there is no problem</font>

604
00:36:16,690 --> 00:36:23,119
they aren't broken<font color="#E5E5E5"> yet by quantum</font>

605
00:36:20,480 --> 00:36:27,020
computers<font color="#E5E5E5"> but we have grown</font><font color="#CCCCCC"> Grover's</font>

606
00:36:23,119 --> 00:36:30,460
algorithm<font color="#CCCCCC"> what it does it speed ups it</font>

607
00:36:27,020 --> 00:36:35,750
speed ups quadratically the search area

608
00:36:30,460 --> 00:36:39,619
<font color="#CCCCCC">so we have some kind</font><font color="#E5E5E5"> of threat</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> about</font>

609
00:36:35,750 --> 00:36:40,340
<font color="#E5E5E5">1 to the</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 1 function it's</font><font color="#E5E5E5"> always a</font>

610
00:36:39,619 --> 00:36:43,570
problem

611
00:36:40,340 --> 00:36:49,730
so using lattice is<font color="#CCCCCC"> very good approach</font>

612
00:36:43,570 --> 00:36:55,130
<font color="#E5E5E5">according our thoughts</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> here is our</font>

613
00:36:49,730 --> 00:36:58,760
<font color="#CCCCCC">latest</font><font color="#E5E5E5"> yes and</font><font color="#CCCCCC"> I try and</font><font color="#E5E5E5"> suggest is a</font>

614
00:36:55,130 --> 00:37:01,070
family<font color="#CCCCCC"> of the hash functions it's based</font>

615
00:36:58,760 --> 00:37:03,350
on s<font color="#CCCCCC"> will be</font><font color="#E5E5E5"> short will it security</font>

616
00:37:01,070 --> 00:37:05,760
based<font color="#E5E5E5"> on software</font><font color="#CCCCCC"> approvals shortest</font>

617
00:37:03,350 --> 00:37:09,250
vector<font color="#E5E5E5"> problem yes</font>

618
00:37:05,760 --> 00:37:12,580
and to construct<font color="#E5E5E5"> a family of hash</font>

619
00:37:09,250 --> 00:37:15,850
<font color="#CCCCCC">functions</font><font color="#E5E5E5"> we need four parameters where</font>

620
00:37:12,580 --> 00:37:20,200
<font color="#CCCCCC">and Divine's</font><font color="#E5E5E5"> define the security</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> our</font>

621
00:37:15,850 --> 00:37:23,920
hash function as<font color="#E5E5E5"> the key we take the</font>

622
00:37:20,200 --> 00:37:30,129
matrix M that<font color="#CCCCCC"> is chosen</font><font color="#E5E5E5"> uniformly from</font>

623
00:37:23,920 --> 00:37:33,220
that<font color="#CCCCCC"> Q</font><font color="#E5E5E5"> and hash function maps it to that</font>

624
00:37:30,130 --> 00:37:38,440
<font color="#E5E5E5">QN so the function Maps</font>

625
00:37:33,220 --> 00:37:41,290
envelope the<font color="#E5E5E5"> bits to n log</font><font color="#CCCCCC"> Q bits no</font><font color="#E5E5E5"> M</font>

626
00:37:38,440 --> 00:37:44,050
of course must be<font color="#E5E5E5"> more than the vision</font>

627
00:37:41,290 --> 00:37:46,420
<font color="#E5E5E5">of this tool and this function is</font><font color="#CCCCCC"> very</font>

628
00:37:44,050 --> 00:37:49,690
easy to<font color="#E5E5E5"> implement because it uses what</font>

629
00:37:46,420 --> 00:37:56,200
only<font color="#CCCCCC"> multiplication and addition modulo</font>

630
00:37:49,690 --> 00:37:59,410
Q yes so concretely we propose<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use</font>

631
00:37:56,200 --> 00:38:01,330
this construction in our<font color="#CCCCCC"> murkly</font><font color="#E5E5E5"> we</font>

632
00:37:59,410 --> 00:38:03,279
propose<font color="#CCCCCC"> to use as one-way function and</font>

633
00:38:01,330 --> 00:38:07,660
the hash function<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the hash function</font>

634
00:38:03,280 --> 00:38:11,560
<font color="#CCCCCC">and we take the key from set to an</font><font color="#E5E5E5"> M and</font>

635
00:38:07,660 --> 00:38:16,270
it transforms<font color="#E5E5E5"> M log B to where this n</font>

636
00:38:11,560 --> 00:38:18,910
log M log B<font color="#CCCCCC"> 2n log gian beats and and</font>

637
00:38:16,270 --> 00:38:23,050
afterwards we calculated like this is

638
00:38:18,910 --> 00:38:27,819
our key in our<font color="#E5E5E5"> matrix yes and X is our</font>

639
00:38:23,050 --> 00:38:30,970
message<font color="#E5E5E5"> yes so we multiply we multiply</font><font color="#CCCCCC"> M</font>

640
00:38:27,820 --> 00:38:33,760
mod a of course and in the case of

641
00:38:30,970 --> 00:38:37,569
<font color="#E5E5E5">one-way function we</font><font color="#CCCCCC"> take the key from</font>

642
00:38:33,760 --> 00:38:40,410
the<font color="#E5E5E5"> space and it will transform Emma log</font>

643
00:38:37,570 --> 00:38:46,060
B into M log B so this<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be our</font>

644
00:38:40,410 --> 00:38:48,129
<font color="#E5E5E5">one-way function yes it has very big</font>

645
00:38:46,060 --> 00:38:51,870
efficiency problems you will see<font color="#E5E5E5"> an it's</font>

646
00:38:48,130 --> 00:38:51,870
only the idea it's only the

647
00:38:52,119 --> 00:39:00,730
say initial<font color="#CCCCCC"> results yes we have we're</font>

648
00:38:55,490 --> 00:39:00,729
working wanna further solutions<font color="#E5E5E5"> so</font>

649
00:39:01,030 --> 00:39:08,119
according the attacks by combinational

650
00:39:04,119 --> 00:39:11,660
method for security of 100<font color="#CCCCCC"> beads</font><font color="#E5E5E5"> we must</font>

651
00:39:08,119 --> 00:39:14,240
use the key of the size<font color="#E5E5E5"> it's big you'll</font>

652
00:39:11,660 --> 00:39:16,129
see<font color="#E5E5E5"> that the key is</font><font color="#CCCCCC"> really big</font><font color="#E5E5E5"> so here I</font>

653
00:39:14,240 --> 00:39:18,680
have screenshots<font color="#CCCCCC"> but I don't want</font><font color="#E5E5E5"> to</font>

654
00:39:16,130 --> 00:39:24,710
<font color="#E5E5E5">screenshot let's run let's run and see</font>

655
00:39:18,680 --> 00:39:32,109
<font color="#CCCCCC">it so let's begin</font><font color="#E5E5E5"> as this is our</font><font color="#CCCCCC"> murkly</font>

656
00:39:24,710 --> 00:39:34,400
<font color="#E5E5E5">just implemented so here a</font><font color="#CCCCCC"> for cubit</font>

657
00:39:32,109 --> 00:39:37,420
<font color="#E5E5E5">measurements there it has</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> simulation</font>

658
00:39:34,400 --> 00:39:41,350
using photo random number generator<font color="#E5E5E5"> and</font>

659
00:39:37,420 --> 00:39:41,350
so as you<font color="#E5E5E5"> can see</font>

660
00:39:50,410 --> 00:39:58,890
<font color="#E5E5E5">Wow why doesn't it take one minute</font>

661
00:40:00,400 --> 00:40:10,960
it appeared<font color="#E5E5E5"> here it is somewhere one</font>

662
00:40:03,530 --> 00:40:10,960
minute can<font color="#E5E5E5"> we open it</font>

663
00:40:17,140 --> 00:40:27,029
<font color="#CCCCCC">mmm</font><font color="#E5E5E5"> thank you thank you thank you</font><font color="#CCCCCC"> and no</font>

664
00:40:19,570 --> 00:40:27,030
no no no no I need<font color="#E5E5E5"> this</font><font color="#CCCCCC"> they say head</font>

665
00:40:29,160 --> 00:40:32,160
yes

666
00:40:32,970 --> 00:40:37,480
here it is

667
00:40:34,540 --> 00:40:42,040
yes<font color="#E5E5E5"> thank you mm-hmm can you make it</font>

668
00:40:37,480 --> 00:40:44,410
bigger<font color="#E5E5E5"> it will be just</font><font color="#CCCCCC"> difficult for me</font>

669
00:40:42,040 --> 00:40:49,020
now<font color="#E5E5E5"> to show I will look here</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> one</font>

670
00:40:44,410 --> 00:40:49,020
minute<font color="#E5E5E5"> because I don't see it here so</font>

671
00:40:50,820 --> 00:40:57,460
<font color="#CCCCCC">here is the length of signature as you</font>

672
00:40:55,960 --> 00:41:02,950
see is<font color="#CCCCCC"> very big</font>

673
00:40:57,460 --> 00:41:05,490
the message was used 128-bit to sign but

674
00:41:02,950 --> 00:41:08,589
the encryption time is rather good

675
00:41:05,490 --> 00:41:12,009
signature time verification time is<font color="#E5E5E5"> also</font>

676
00:41:08,590 --> 00:41:17,520
good<font color="#E5E5E5"> here one time signature is checked</font>

677
00:41:12,010 --> 00:41:21,990
<font color="#E5E5E5">and the public is checked and a minute</font>

678
00:41:17,520 --> 00:41:27,310
<font color="#CCCCCC">now the second one here</font><font color="#E5E5E5"> I implemented</font>

679
00:41:21,990 --> 00:41:30,549
the hash function using<font color="#E5E5E5"> lattices rather</font>

680
00:41:27,310 --> 00:41:34,740
interesting by the way<font color="#E5E5E5"> as you can see</font>

681
00:41:30,550 --> 00:41:34,740
and<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> let's run it</font>

682
00:41:37,200 --> 00:41:48,970
<font color="#CCCCCC">Hey here is the key rather big rather</font>

683
00:41:46,780 --> 00:41:52,690
big matrix<font color="#CCCCCC"> yes</font>

684
00:41:48,970 --> 00:41:58,000
oh I<font color="#E5E5E5"> used it using the lists and the</font>

685
00:41:52,690 --> 00:42:02,170
message is the<font color="#CCCCCC"> same 128 bits and as you</font>

686
00:41:58,000 --> 00:42:07,720
see the key is<font color="#CCCCCC"> needed rather big</font><font color="#E5E5E5"> so and</font>

687
00:42:02,170 --> 00:42:11,230
as<font color="#CCCCCC"> you see it hashed it</font><font color="#E5E5E5"> 233 bits let's</font>

688
00:42:07,720 --> 00:42:14,319
now see<font color="#CCCCCC"> 1/2 wave function</font><font color="#E5E5E5"> what is the</font>

689
00:42:11,230 --> 00:42:16,720
difference the<font color="#CCCCCC"> key I</font><font color="#E5E5E5"> took of the I</font>

690
00:42:14,320 --> 00:42:22,950
generated the matrix<font color="#E5E5E5"> Qian of the</font>

691
00:42:16,720 --> 00:42:29,529
different size yes and let's run it so

692
00:42:22,950 --> 00:42:32,109
as<font color="#CCCCCC"> you see and it mapped it 128 128</font><font color="#E5E5E5"> as</font>

693
00:42:29,530 --> 00:42:41,130
it was<font color="#E5E5E5"> supposed to do and as you see the</font>

694
00:42:32,110 --> 00:42:41,130
key is<font color="#E5E5E5"> really big</font><font color="#CCCCCC"> and the last one is</font>

695
00:42:41,370 --> 00:42:48,819
integrated<font color="#CCCCCC"> 1 2</font><font color="#E5E5E5"> I found</font>

696
00:42:45,130 --> 00:42:52,090
and<font color="#CCCCCC"> his function to our schema I thought</font>

697
00:42:48,820 --> 00:42:58,080
I will<font color="#E5E5E5"> not integrate it but two days ago</font>

698
00:42:52,090 --> 00:43:01,690
I<font color="#E5E5E5"> made it in night</font><font color="#CCCCCC"> so let's run it also</font>

699
00:42:58,080 --> 00:43:04,990
so the same script that we had in the

700
00:43:01,690 --> 00:43:06,960
<font color="#E5E5E5">first one and here</font><font color="#CCCCCC"> know the final length</font>

701
00:43:04,990 --> 00:43:13,870
is the same<font color="#CCCCCC"> because</font><font color="#E5E5E5"> the script is the</font>

702
00:43:06,960 --> 00:43:16,540
<font color="#CCCCCC">same yes</font><font color="#E5E5E5"> and of course how big key very</font>

703
00:43:13,870 --> 00:43:19,600
big matrix for the<font color="#CCCCCC"> kiya</font><font color="#E5E5E5"> is its</font>

704
00:43:16,540 --> 00:43:23,070
efficiency problem<font color="#E5E5E5"> no for further we use</font>

705
00:43:19,600 --> 00:43:27,330
a deal matrices but not for now so and

706
00:43:23,070 --> 00:43:33,790
we use<font color="#CCCCCC"> different keys as you</font><font color="#E5E5E5"> see in for</font>

707
00:43:27,330 --> 00:43:36,910
one way and<font color="#E5E5E5"> for hash and verification in</font>

708
00:43:33,790 --> 00:43:40,779
decryption time it's also rather good

709
00:43:36,910 --> 00:43:44,740
because we said that<font color="#E5E5E5"> it is rather easy</font>

710
00:43:40,780 --> 00:43:49,690
<font color="#CCCCCC">it uses nothing</font><font color="#E5E5E5"> but multiplication and</font>

711
00:43:44,740 --> 00:43:55,629
addition modulo yes<font color="#E5E5E5"> okay where is my</font>

712
00:43:49,690 --> 00:43:56,880
presentation<font color="#CCCCCC"> bag and I finish this is</font>

713
00:43:55,630 --> 00:44:00,130
good

714
00:43:56,880 --> 00:44:09,030
well I don't<font color="#CCCCCC"> see</font><font color="#E5E5E5"> it of course but</font><font color="#CCCCCC"> okay</font>

715
00:44:00,130 --> 00:44:09,030
you see it one minute sorry

716
00:44:12,170 --> 00:44:32,010
<font color="#E5E5E5">okay nothing</font><font color="#CCCCCC"> is left and that's it</font><font color="#E5E5E5"> so it</font>

717
00:44:25,500 --> 00:44:34,109
was our latest result yes and<font color="#E5E5E5"> also we</font>

718
00:44:32,010 --> 00:44:36,539
have made the first<font color="#CCCCCC"> cybersecurity</font>

719
00:44:34,109 --> 00:44:39,569
<font color="#CCCCCC">practical scientific</font><font color="#E5E5E5"> journal in</font><font color="#CCCCCC"> Georgian</font>

720
00:44:36,539 --> 00:44:41,400
<font color="#CCCCCC">I ask all of you to publish the articles</font>

721
00:44:39,569 --> 00:44:45,230
in the journal<font color="#CCCCCC"> it's for free you are</font>

722
00:44:41,400 --> 00:44:48,809
just<font color="#E5E5E5"> helping us guys we need as more</font>

723
00:44:45,230 --> 00:44:50,520
publications<font color="#CCCCCC"> it's better for us we need</font>

724
00:44:48,809 --> 00:44:52,829
good<font color="#CCCCCC"> publications as know for Scopus in</font>

725
00:44:50,520 --> 00:44:55,890
the future and also for<font color="#CCCCCC"> Georgian</font>

726
00:44:52,829 --> 00:44:59,579
community and here are my contacts<font color="#E5E5E5"> if</font>

727
00:44:55,890 --> 00:45:01,500
some of<font color="#E5E5E5"> human is interested in post</font>

728
00:44:59,579 --> 00:45:03,869
quantum cryptography<font color="#E5E5E5"> quantum</font>

729
00:45:01,500 --> 00:45:06,660
cryptography researches<font color="#E5E5E5"> come to me</font><font color="#CCCCCC"> or</font>

730
00:45:03,869 --> 00:45:09,599
today or tomorrow<font color="#E5E5E5"> I will be glad to</font>

731
00:45:06,660 --> 00:45:13,368
extend the<font color="#CCCCCC"> team</font><font color="#E5E5E5"> the project will</font><font color="#CCCCCC"> also</font>

732
00:45:09,599 --> 00:45:16,230
always<font color="#E5E5E5"> have we are working working and I</font>

733
00:45:13,369 --> 00:45:17,579
will be very<font color="#E5E5E5"> glad to</font><font color="#CCCCCC"> discuss the issues</font>

734
00:45:16,230 --> 00:45:19,920
<font color="#E5E5E5">also the development of</font><font color="#CCCCCC"> different</font>

735
00:45:17,579 --> 00:45:23,510
penetration tools and so on<font color="#CCCCCC"> I am open</font>

736
00:45:19,920 --> 00:45:26,679
<font color="#CCCCCC">for conversation thank you very</font><font color="#E5E5E5"> much</font>

737
00:45:23,510 --> 00:45:26,679
[Applause]

738
00:45:27,710 --> 00:45:34,569
we have questions here<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> willwill</font>

739
00:45:35,619 --> 00:45:42,140
<font color="#CCCCCC">so besides</font><font color="#E5E5E5"> it's this algorithm</font><font color="#CCCCCC"> are there</font>

740
00:45:39,920 --> 00:45:45,819
any other post quantum algorithms that

741
00:45:42,140 --> 00:45:50,720
are currently in work for the modern era

742
00:45:45,819 --> 00:45:53,150
<font color="#E5E5E5">quantum algorithm cryptography -</font>

743
00:45:50,720 --> 00:45:55,640
algorithm<font color="#E5E5E5"> - main</font><font color="#CCCCCC"> algorithm</font><font color="#E5E5E5"> grower and</font>

744
00:45:53,150 --> 00:45:58,940
<font color="#CCCCCC">shorts one source</font><font color="#E5E5E5"> is problematic because</font>

745
00:45:55,640 --> 00:46:01,220
it<font color="#E5E5E5"> solves</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> factorization problem</font><font color="#CCCCCC"> and</font>

746
00:45:58,940 --> 00:46:04,700
<font color="#CCCCCC">grower algorithm is less</font><font color="#E5E5E5"> problematic</font>

747
00:46:01,220 --> 00:46:08,868
what it is<font color="#CCCCCC"> it's it only has quadratic</font>

748
00:46:04,700 --> 00:46:11,689
speed-up so when you have a quantum

749
00:46:08,869 --> 00:46:12,890
computer<font color="#CCCCCC"> when we when we have this</font>

750
00:46:11,690 --> 00:46:15,589
quantum computer yes

751
00:46:12,890 --> 00:46:17,629
and if<font color="#E5E5E5"> you begin</font><font color="#CCCCCC"> to check email or</font>

752
00:46:15,589 --> 00:46:20,000
something like this it will be<font color="#E5E5E5"> when much</font>

753
00:46:17,630 --> 00:46:23,290
more slows and normal computer<font color="#E5E5E5"> so only</font>

754
00:46:20,000 --> 00:46:25,819
in concrete compilations<font color="#E5E5E5"> it is faster</font><font color="#CCCCCC"> I</font>

755
00:46:23,290 --> 00:46:28,069
see that<font color="#E5E5E5"> there are lots of algorithms</font>

756
00:46:25,819 --> 00:46:29,720
<font color="#CCCCCC">that will probably develop</font><font color="#E5E5E5"> but they will</font>

757
00:46:28,069 --> 00:46:33,200
combine<font color="#E5E5E5"> the classic photography with</font>

758
00:46:29,720 --> 00:46:36,609
some quantum parts of course<font color="#CCCCCC"> they're</font>

759
00:46:33,200 --> 00:46:43,029
usually with<font color="#E5E5E5"> these two algorithms okay</font>

760
00:46:36,609 --> 00:46:43,029
thank you<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> a question there</font><font color="#CCCCCC"> i</font>

761
00:46:49,900 --> 00:46:56,569
<font color="#CCCCCC">maxim a really good presentation dude so</font>

762
00:46:54,109 --> 00:46:59,920
I have a<font color="#E5E5E5"> question but it takes some</font><font color="#CCCCCC"> time</font>

763
00:46:56,569 --> 00:47:02,540
in<font color="#E5E5E5"> order to compile for me so you</font>

764
00:46:59,920 --> 00:47:06,109
mentioned the true random number

765
00:47:02,540 --> 00:47:08,750
generator<font color="#CCCCCC"> if you use and also</font><font color="#E5E5E5"> your</font>

766
00:47:06,109 --> 00:47:12,410
patient<font color="#E5E5E5"> the d-wave</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> d-wave quantum</font>

767
00:47:08,750 --> 00:47:15,040
computer of IBM or<font color="#E5E5E5"> Google and I was</font>

768
00:47:12,410 --> 00:47:17,569
wondering how<font color="#E5E5E5"> these two connect because</font>

769
00:47:15,040 --> 00:47:23,480
my understanding<font color="#CCCCCC"> is that the d-wave</font>

770
00:47:17,569 --> 00:47:26,540
quantum computer uses not not the norm

771
00:47:23,480 --> 00:47:29,150
<font color="#E5E5E5">not the standard quantum quantum physics</font>

772
00:47:26,540 --> 00:47:31,210
<font color="#E5E5E5">but instead</font><font color="#CCCCCC"> of that it</font><font color="#E5E5E5"> uses something</font>

773
00:47:29,150 --> 00:47:31,210
like

774
00:47:31,660 --> 00:47:36,879
something<font color="#E5E5E5"> would matter like a condensed</font>

775
00:47:35,349 --> 00:47:39,760
matter physics or something<font color="#CCCCCC"> like that</font>

776
00:47:36,880 --> 00:47:43,420
<font color="#E5E5E5">which is a little</font><font color="#CCCCCC"> bit different with the</font>

777
00:47:39,760 --> 00:47:46,960
calculation of waves<font color="#CCCCCC"> yes the way a fuse</font>

778
00:47:43,420 --> 00:47:49,030
is a little bit different algorithms<font color="#CCCCCC"> for</font>

779
00:47:46,960 --> 00:47:49,599
<font color="#CCCCCC">example the computers</font><font color="#E5E5E5"> that are today</font><font color="#CCCCCC"> in</font>

780
00:47:49,030 --> 00:47:51,640
Google

781
00:47:49,599 --> 00:47:54,520
they don't have yet<font color="#CCCCCC"> Grover</font><font color="#E5E5E5"> and sir</font>

782
00:47:51,640 --> 00:47:56,410
algorithm<font color="#CCCCCC"> ax</font><font color="#E5E5E5"> as I know they didn't have</font>

783
00:47:54,520 --> 00:47:59,470
<font color="#CCCCCC">it before maybe today they made but they</font>

784
00:47:56,410 --> 00:48:02,500
don't<font color="#E5E5E5"> he'll and what about random number</font>

785
00:47:59,470 --> 00:48:04,680
generator<font color="#E5E5E5"> yes they exist quantum random</font>

786
00:48:02,500 --> 00:48:08,049
number generators<font color="#E5E5E5"> already for sale</font>

787
00:48:04,680 --> 00:48:10,480
<font color="#E5E5E5">commercial ones</font><font color="#CCCCCC"> I didn't try them by</font>

788
00:48:08,049 --> 00:48:13,990
<font color="#CCCCCC">myself</font><font color="#E5E5E5"> in practice and by the way they</font>

789
00:48:10,480 --> 00:48:18,670
are not too<font color="#CCCCCC"> expensive ones and</font><font color="#E5E5E5"> say no</font>

790
00:48:13,990 --> 00:48:21,879
<font color="#CCCCCC">see they</font><font color="#E5E5E5"> are not from the wave yeah that</font>

791
00:48:18,670 --> 00:48:25,420
was my<font color="#CCCCCC"> question because I don't see</font><font color="#E5E5E5"> the</font>

792
00:48:21,880 --> 00:48:27,220
wave is<font color="#E5E5E5"> the global manufacturer of</font>

793
00:48:25,420 --> 00:48:29,710
quantum processors and when we saw this

794
00:48:27,220 --> 00:48:32,890
article<font color="#CCCCCC"> we began to work but at random</font>

795
00:48:29,710 --> 00:48:34,690
number generator it's<font color="#E5E5E5"> already power</font>

796
00:48:32,890 --> 00:48:36,038
after result it's a vertical one<font color="#E5E5E5"> of</font>

797
00:48:34,690 --> 00:48:38,559
course because<font color="#CCCCCC"> of it</font><font color="#E5E5E5"> we made a</font>

798
00:48:36,039 --> 00:48:41,400
simulation and<font color="#CCCCCC"> you wave</font><font color="#E5E5E5"> if more do wave</font>

799
00:48:38,559 --> 00:48:44,319
is mostly used to prove<font color="#E5E5E5"> the already</font>

800
00:48:41,400 --> 00:48:50,559
coherent for now<font color="#CCCCCC"> yes</font>

801
00:48:44,319 --> 00:48:54,210
<font color="#E5E5E5">okay thanks your math is also good thank</font>

802
00:48:50,559 --> 00:48:54,210
you we have a<font color="#E5E5E5"> question in the second row</font>

803
00:48:57,190 --> 00:49:02,859
have you tried to push this ideas to

804
00:49:00,849 --> 00:49:05,740
cryptocurrency community because it's

805
00:49:02,859 --> 00:49:08,558
the<font color="#E5E5E5"> the great way to battle test new</font>

806
00:49:05,740 --> 00:49:11,348
cryptography<font color="#E5E5E5"> there is then big financial</font>

807
00:49:08,559 --> 00:49:14,170
insert if incentive to break it or if

808
00:49:11,349 --> 00:49:17,680
it's not broken then maybe it's it's

809
00:49:14,170 --> 00:49:22,390
ultimately a good idea so when it was

810
00:49:17,680 --> 00:49:27,250
<font color="#CCCCCC">the boom of this quantum currency and</font><font color="#E5E5E5"> we</font>

811
00:49:22,390 --> 00:49:29,470
offered we offer to eat<font color="#E5E5E5"> to</font><font color="#CCCCCC"> beat call not</font>

812
00:49:27,250 --> 00:49:31,000
a<font color="#E5E5E5"> Bitcoin but to some organization</font><font color="#CCCCCC"> that</font>

813
00:49:29,470 --> 00:49:32,848
was interested the global<font color="#E5E5E5"> government</font>

814
00:49:31,000 --> 00:49:36,130
organization that was interested in

815
00:49:32,849 --> 00:49:39,369
bitcoins and we offered<font color="#E5E5E5"> the new digital</font>

816
00:49:36,130 --> 00:49:41,230
signatures for because<font color="#E5E5E5"> bitcoin uses</font>

817
00:49:39,369 --> 00:49:43,640
digital signatures<font color="#CCCCCC"> and use concretely</font>

818
00:49:41,230 --> 00:49:46,550
<font color="#CCCCCC">RSA for it and we</font>

819
00:49:43,640 --> 00:49:48,830
offered our digital signatures but

820
00:49:46,550 --> 00:49:53,750
didn't get sinensis<font color="#E5E5E5"> because it's already</font>

821
00:49:48,830 --> 00:49:58,840
<font color="#CCCCCC">was</font><font color="#E5E5E5"> finish of boomer we were a little</font>

822
00:49:53,750 --> 00:50:02,270
bit late<font color="#E5E5E5"> maybe on the next bubble maybe</font>

823
00:49:58,840 --> 00:50:10,540
and we will take our<font color="#E5E5E5"> last question right</font>

824
00:50:02,270 --> 00:50:12,710
here or maybe<font color="#E5E5E5"> okay yeah hello</font>

825
00:50:10,540 --> 00:50:15,620
<font color="#E5E5E5">interesting presentation my question for</font>

826
00:50:12,710 --> 00:50:17,990
you<font color="#E5E5E5"> is I saw that you developed</font><font color="#CCCCCC"> your own</font>

827
00:50:15,620 --> 00:50:20,330
hashing function which was basically a

828
00:50:17,990 --> 00:50:23,000
product<font color="#E5E5E5"> and went on each you you apply</font>

829
00:50:20,330 --> 00:50:25,630
<font color="#CCCCCC">the mod modular function then</font><font color="#E5E5E5"> you came</font>

830
00:50:23,000 --> 00:50:29,300
up<font color="#E5E5E5"> with a result</font><font color="#CCCCCC"> that would prove that</font>

831
00:50:25,630 --> 00:50:32,240
this is<font color="#E5E5E5"> safe but I'm curious how</font><font color="#CCCCCC"> did you</font>

832
00:50:29,300 --> 00:50:34,430
do that<font color="#CCCCCC"> I mean isn't sensitizing</font><font color="#E5E5E5"> it's</font>

833
00:50:32,240 --> 00:50:41,890
using a<font color="#E5E5E5"> modular function isn't it</font><font color="#CCCCCC"> open</font>

834
00:50:34,430 --> 00:50:41,890
<font color="#CCCCCC">toe</font><font color="#E5E5E5"> collisions about the collisions yes</font>

835
00:50:42,790 --> 00:50:50,660
<font color="#E5E5E5">in</font><font color="#CCCCCC"> HCI construction they can be found a</font>

836
00:50:48,440 --> 00:50:52,250
collision I will explain you<font color="#CCCCCC"> I I</font><font color="#E5E5E5"> said</font>

837
00:50:50,660 --> 00:50:56,830
that we are<font color="#CCCCCC"> working</font><font color="#E5E5E5"> on forward</font>

838
00:50:52,250 --> 00:50:56,830
optimization of<font color="#E5E5E5"> a TTS as you saw the</font>

839
00:50:57,170 --> 00:51:02,930
efficiency problems<font color="#CCCCCC"> here's were a big</font>

840
00:50:59,650 --> 00:51:05,240
<font color="#CCCCCC">McKeon they said to use ETL matrixes</font>

841
00:51:02,930 --> 00:51:07,160
afterwards we<font color="#E5E5E5"> will use Swift not to get</font>

842
00:51:05,240 --> 00:51:09,220
this collisions<font color="#E5E5E5"> and watch the collisions</font>

843
00:51:07,160 --> 00:51:12,200
is what I will plane it's very easy<font color="#CCCCCC"> so</font>

844
00:51:09,220 --> 00:51:15,919
when it's multiplied yes<font color="#E5E5E5"> you don't get</font>

845
00:51:12,200 --> 00:51:20,180
concretely<font color="#E5E5E5"> the concrete size because it</font>

846
00:51:15,920 --> 00:51:22,430
<font color="#E5E5E5">changed</font><font color="#CCCCCC"> yes because you're from binary</font>

847
00:51:20,180 --> 00:51:24,799
to integer you multiply and<font color="#E5E5E5"> so on not</font>

848
00:51:22,430 --> 00:51:27,819
<font color="#E5E5E5">what you add you extend it a little bit</font>

849
00:51:24,800 --> 00:51:32,540
<font color="#E5E5E5">and when you extend if the size is not</font>

850
00:51:27,820 --> 00:51:34,730
<font color="#E5E5E5">big enough you can get</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> collision also</font>

851
00:51:32,540 --> 00:51:37,100
I<font color="#E5E5E5"> saw that they are basically</font><font color="#CCCCCC"> are saying</font>

852
00:51:34,730 --> 00:51:40,640
<font color="#E5E5E5">that you're using a bell state in order</font>

853
00:51:37,100 --> 00:51:44,500
<font color="#E5E5E5">to have a true random generator but this</font>

854
00:51:40,640 --> 00:51:49,310
has to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> generated by a computer right</font>

855
00:51:44,500 --> 00:51:51,110
by a quantum computer<font color="#CCCCCC"> yes yes</font><font color="#E5E5E5"> what I'm</font>

856
00:51:49,310 --> 00:51:52,730
trying to say is that the<font color="#CCCCCC"> quantum</font>

857
00:51:51,110 --> 00:51:55,540
verification problem is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it's solved</font>

858
00:51:52,730 --> 00:51:57,710
<font color="#E5E5E5">so this would be at the</font><font color="#CCCCCC"> core of your</font>

859
00:51:55,540 --> 00:52:00,080
<font color="#CCCCCC">algorithms you're saying</font><font color="#E5E5E5"> this algorithm</font>

860
00:51:57,710 --> 00:52:02,630
is going<font color="#E5E5E5"> to be safe</font><font color="#CCCCCC"> if the quantum</font>

861
00:52:00,080 --> 00:52:05,840
verification problem is solved but<font color="#E5E5E5"> you</font>

862
00:52:02,630 --> 00:52:07,790
do not have any way to prove<font color="#E5E5E5"> that number</font>

863
00:52:05,840 --> 00:52:09,710
is indeed<font color="#E5E5E5"> truly random because you do</font>

864
00:52:07,790 --> 00:52:14,420
not have<font color="#CCCCCC"> a way to test that</font><font color="#E5E5E5"> and now no</font>

865
00:52:09,710 --> 00:52:17,060
contributor understand<font color="#E5E5E5"> but all</font><font color="#CCCCCC"> these we</font>

866
00:52:14,420 --> 00:52:17,660
know theoretically<font color="#CCCCCC"> also</font><font color="#E5E5E5"> also Grover's</font>

867
00:52:17,060 --> 00:52:21,590
algorithm

868
00:52:17,660 --> 00:52:24,170
<font color="#E5E5E5">also shorts algorithm by now all these</font>

869
00:52:21,590 --> 00:52:29,150
<font color="#E5E5E5">are theoretical results yes because of</font>

870
00:52:24,170 --> 00:52:32,450
it<font color="#CCCCCC"> I</font><font color="#E5E5E5"> used a simulation</font><font color="#CCCCCC"> even when the</font>

871
00:52:29,150 --> 00:52:36,410
quantum key distribution yes<font color="#E5E5E5"> say</font><font color="#CCCCCC"> are or</font>

872
00:52:32,450 --> 00:52:39,859
it is<font color="#E5E5E5"> an equipment distribute quantum</font>

873
00:52:36,410 --> 00:52:41,810
key they are<font color="#E5E5E5"> go</font><font color="#CCCCCC"> to take the</font><font color="#E5E5E5"> test for</font>

874
00:52:39,860 --> 00:52:43,430
example<font color="#CCCCCC"> Belorussia or</font><font color="#E5E5E5"> friends in Paris</font>

875
00:52:41,810 --> 00:52:47,270
<font color="#E5E5E5">about it already in one of the</font>

876
00:52:43,430 --> 00:52:50,270
universities and it is on the very

877
00:52:47,270 --> 00:52:52,400
limited distance for now<font color="#CCCCCC"> so they are</font>

878
00:52:50,270 --> 00:52:54,020
experiments experiments and so on<font color="#CCCCCC"> thank</font>

879
00:52:52,400 --> 00:52:56,390
you for presentation again thank<font color="#E5E5E5"> you</font>

880
00:52:54,020 --> 00:52:58,990
thank<font color="#E5E5E5"> you and the last question if it's</font>

881
00:52:56,390 --> 00:52:58,990
still valid

882
00:52:59,219 --> 00:53:12,879
please hello like in one of<font color="#CCCCCC"> the few</font>

883
00:53:09,549 --> 00:53:15,729
slides you<font color="#E5E5E5"> discuss the difficulty of of</font>

884
00:53:12,879 --> 00:53:18,519
the mathematic problem that the multi

885
00:53:15,729 --> 00:53:20,468
variant system is based on so like I

886
00:53:18,519 --> 00:53:23,019
<font color="#CCCCCC">don't know can you press can you please</font>

887
00:53:20,469 --> 00:53:26,039
go back<font color="#CCCCCC"> to that slide</font><font color="#E5E5E5"> of multivariate</font>

888
00:53:23,019 --> 00:53:26,038
yes yes

889
00:53:40,680 --> 00:53:46,799
not here yes this is the one<font color="#E5E5E5"> yes so</font><font color="#CCCCCC"> here</font>

890
00:53:44,339 --> 00:53:49,369
like I see<font color="#E5E5E5"> you mentioned</font><font color="#CCCCCC"> there like the</font>

891
00:53:46,800 --> 00:53:52,349
security assumption of<font color="#CCCCCC"> multi-variant</font>

892
00:53:49,369 --> 00:53:56,099
<font color="#CCCCCC">Sisson is</font><font color="#E5E5E5"> beige expected by the NP</font>

893
00:53:52,349 --> 00:53:58,680
<font color="#E5E5E5">hardness of solving nonlinear equations</font>

894
00:53:56,099 --> 00:54:01,170
<font color="#E5E5E5">over finite field but like as far as my</font>

895
00:53:58,680 --> 00:54:04,348
<font color="#E5E5E5">understanding like this only holds if</font>

896
00:54:01,170 --> 00:54:06,810
<font color="#E5E5E5">the system is truly</font><font color="#CCCCCC"> rendon so I mean</font><font color="#E5E5E5"> 50</font>

897
00:54:04,349 --> 00:54:08,609
times what that<font color="#CCCCCC"> system is truly rendon</font>

898
00:54:06,810 --> 00:54:11,430
so each coefficient<font color="#CCCCCC"> inside this</font>

899
00:54:08,609 --> 00:54:13,589
nonlinear equation will need to be

900
00:54:11,430 --> 00:54:15,868
chosen completely uniformly from<font color="#E5E5E5"> this</font>

901
00:54:13,589 --> 00:54:18,500
finite<font color="#E5E5E5"> field where the coefficient come</font>

902
00:54:15,869 --> 00:54:21,270
<font color="#E5E5E5">from but for most of the multivariate</font>

903
00:54:18,500 --> 00:54:24,900
pop the key cryptosystems is not the

904
00:54:21,270 --> 00:54:27,000
case<font color="#E5E5E5"> because you</font><font color="#CCCCCC"> will have you have</font>

905
00:54:24,900 --> 00:54:29,010
three matrices<font color="#CCCCCC"> you have a switch is the</font>

906
00:54:27,000 --> 00:54:31,320
scrambling matrix you have<font color="#CCCCCC"> the</font>

907
00:54:29,010 --> 00:54:33,839
permutation matrix which is P and

908
00:54:31,320 --> 00:54:36,060
finally<font color="#E5E5E5"> you've defined a system which is</font>

909
00:54:33,839 --> 00:54:38,670
<font color="#E5E5E5">either under determined if you want to</font>

910
00:54:36,060 --> 00:54:40,020
use this for signature<font color="#E5E5E5"> screens or over</font>

911
00:54:38,670 --> 00:54:42,089
determine if<font color="#CCCCCC"> you under use for</font>

912
00:54:40,020 --> 00:54:45,990
encryption<font color="#E5E5E5"> schemes and then the product</font>

913
00:54:42,089 --> 00:54:48,299
of<font color="#CCCCCC"> the s times this matrix times P is</font>

914
00:54:45,990 --> 00:54:51,509
<font color="#CCCCCC">your public key</font><font color="#E5E5E5"> so this public key is</font>

915
00:54:48,300 --> 00:54:54,680
not<font color="#CCCCCC"> in fact truly random so the</font>

916
00:54:51,510 --> 00:54:59,220
difficulty of<font color="#E5E5E5"> solving this is not</font>

917
00:54:54,680 --> 00:55:02,399
decided yet<font color="#CCCCCC"> so I know this is fun what I</font>

918
00:54:59,220 --> 00:55:04,890
have learned what<font color="#CCCCCC"> you</font><font color="#E5E5E5"> think about</font><font color="#CCCCCC"> this</font>

919
00:55:02,400 --> 00:55:08,760
when I<font color="#E5E5E5"> was talking about it</font>

920
00:55:04,890 --> 00:55:14,009
I<font color="#E5E5E5"> said</font><font color="#CCCCCC"> concrete lazy schemes have the</font>

921
00:55:08,760 --> 00:55:17,849
browser<font color="#CCCCCC"> proof problems so these systems</font>

922
00:55:14,010 --> 00:55:19,859
<font color="#E5E5E5">are very good but we</font><font color="#CCCCCC"> cannot prove a lot</font>

923
00:55:17,849 --> 00:55:23,130
of things here and<font color="#E5E5E5"> completely I said</font>

924
00:55:19,859 --> 00:55:25,710
that we have the lack of yes<font color="#E5E5E5"> yes this</font>

925
00:55:23,130 --> 00:55:30,630
<font color="#E5E5E5">power I agree it's difficult to</font><font color="#CCCCCC"> show the</font>

926
00:55:25,710 --> 00:55:32,369
difficulty<font color="#CCCCCC"> of solving those</font><font color="#E5E5E5"> for it no</font>

927
00:55:30,630 --> 00:55:35,310
it's difficult<font color="#CCCCCC"> to analyze because it</font>

928
00:55:32,369 --> 00:55:38,490
depends on<font color="#E5E5E5"> the skin but only</font><font color="#CCCCCC"> true friend</font>

929
00:55:35,310 --> 00:55:42,328
<font color="#E5E5E5">insistence is unpaid hard to solve and</font>

930
00:55:38,490 --> 00:55:45,990
more basically<font color="#CCCCCC"> multivariant schemes do</font>

931
00:55:42,329 --> 00:55:48,480
not<font color="#CCCCCC"> satisfy this criteria so</font><font color="#E5E5E5"> I for YC</font>

932
00:55:45,990 --> 00:55:50,020
it's now<font color="#E5E5E5"> really np-hard</font><font color="#CCCCCC"> but yes it's</font>

933
00:55:48,480 --> 00:55:55,300
<font color="#CCCCCC">difficult to solve</font>

934
00:55:50,020 --> 00:55:57,820
it is just a lot<font color="#CCCCCC"> -</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> are a lot of</font>

935
00:55:55,300 --> 00:55:59,710
<font color="#E5E5E5">the assumptions</font><font color="#CCCCCC"> there is a book called</font>

936
00:55:57,820 --> 00:56:03,790
<font color="#E5E5E5">the post quantum cryptography</font>

937
00:55:59,710 --> 00:56:06,190
yes<font color="#CCCCCC"> very</font><font color="#E5E5E5"> seriously and is</font><font color="#CCCCCC"> are explained</font>

938
00:56:03,790 --> 00:56:07,990
<font color="#CCCCCC">in</font><font color="#E5E5E5"> this multivariate</font><font color="#CCCCCC"> crypto systems and</font>

939
00:56:06,190 --> 00:56:10,840
they<font color="#E5E5E5"> are published almost all the</font>

940
00:56:07,990 --> 00:56:12,759
results you have for now and they<font color="#E5E5E5"> are</font>

941
00:56:10,840 --> 00:56:13,869
completely and mentioned<font color="#E5E5E5"> all the</font>

942
00:56:12,760 --> 00:56:17,250
security<font color="#E5E5E5"> proof</font>

943
00:56:13,869 --> 00:56:20,590
yes way of this and<font color="#CCCCCC"> actually I have read</font>

944
00:56:17,250 --> 00:56:23,380
this I would like<font color="#E5E5E5"> to hold the discussion</font>

945
00:56:20,590 --> 00:56:25,119
<font color="#E5E5E5">here it's turning</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> a two-person</font>

946
00:56:23,380 --> 00:56:27,570
debate and I would like<font color="#E5E5E5"> to invite you to</font>

947
00:56:25,119 --> 00:56:31,050
carry<font color="#E5E5E5"> on this discussion in private</font>

948
00:56:27,570 --> 00:56:31,050
<font color="#CCCCCC">thank you very</font><font color="#E5E5E5"> much</font>

