1
00:00:00,120 --> 00:00:03,899
hello everyone my name is<font color="#E5E5E5"> rod I'm an</font>

2
00:00:01,890 --> 00:00:05,790
Alkesh<font color="#CCCCCC"> Carrillo I'm a security research</font>

3
00:00:03,899 --> 00:00:08,039
engineer<font color="#CCCCCC"> at X application threat</font>

4
00:00:05,790 --> 00:00:09,540
intelligence team and today I'm going to

5
00:00:08,039 --> 00:00:12,120
talk about<font color="#E5E5E5"> on web application</font>

6
00:00:09,540 --> 00:00:13,889
vulnerability that was extensively

7
00:00:12,120 --> 00:00:16,619
exploited in the<font color="#CCCCCC"> wild the vulnerability</font>

8
00:00:13,889 --> 00:00:18,840
appeared this year<font color="#E5E5E5"> it's a remote code</font>

9
00:00:16,619 --> 00:00:21,600
execution vulnerability that affected

10
00:00:18,840 --> 00:00:24,180
virtually all the versions<font color="#E5E5E5"> of Drupal</font>

11
00:00:21,600 --> 00:00:25,980
content management system because<font color="#E5E5E5"> of</font>

12
00:00:24,180 --> 00:00:29,009
<font color="#E5E5E5">that it received the name to forget on</font>

13
00:00:25,980 --> 00:00:30,720
<font color="#CCCCCC">to we might</font><font color="#E5E5E5"> wonder why</font><font color="#CCCCCC"> is it</font><font color="#E5E5E5"> called</font>

14
00:00:29,010 --> 00:00:36,540
<font color="#E5E5E5">Drupal get on</font><font color="#CCCCCC"> to instead of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> polecat</font>

15
00:00:30,720 --> 00:00:38,940
<font color="#CCCCCC">on one</font><font color="#E5E5E5"> its that is because the initial</font>

16
00:00:36,540 --> 00:00:43,710
vulnerability<font color="#E5E5E5"> was published in 2014 and</font>

17
00:00:38,940 --> 00:00:45,510
it's a SQL<font color="#CCCCCC"> injection vulnerability so</font>

18
00:00:43,710 --> 00:00:48,090
the vulnerability was identified by<font color="#E5E5E5"> the</font>

19
00:00:45,510 --> 00:00:53,129
<font color="#CCCCCC">Drupal security team and it made a</font><font color="#E5E5E5"> lot</font>

20
00:00:48,090 --> 00:00:54,750
of<font color="#E5E5E5"> noise on the media too</font><font color="#CCCCCC"> as a</font><font color="#E5E5E5"> follow-up</font>

21
00:00:53,129 --> 00:00:56,839
<font color="#CCCCCC">two weeks after the initial</font>

22
00:00:54,750 --> 00:00:59,239
vulnerability was identified<font color="#E5E5E5"> and patched</font>

23
00:00:56,840 --> 00:01:01,460
another vulnerability this time<font color="#CCCCCC"> our</font>

24
00:00:59,239 --> 00:01:07,020
authenticated remote code execution

25
00:01:01,460 --> 00:01:09,270
<font color="#E5E5E5">vulnerability was has appeared this</font><font color="#CCCCCC"> also</font>

26
00:01:07,020 --> 00:01:11,548
made a lot<font color="#CCCCCC"> of noise in the wild and they</font>

27
00:01:09,270 --> 00:01:15,840
made the headlines<font color="#E5E5E5"> of Latin articles so</font>

28
00:01:11,549 --> 00:01:18,420
you might wonder<font color="#E5E5E5"> what happened let's</font>

29
00:01:15,840 --> 00:01:22,740
take a look at the attack<font color="#E5E5E5"> timeline</font><font color="#CCCCCC"> one</font>

30
00:01:18,420 --> 00:01:24,540
21st of March the the<font color="#E5E5E5"> topic</font><font color="#CCCCCC"> a Toronto</font>

31
00:01:22,740 --> 00:01:28,740
variability was<font color="#E5E5E5"> patched by the Drupal</font>

32
00:01:24,540 --> 00:01:31,500
team then<font color="#CCCCCC"> was a week later they made an</font>

33
00:01:28,740 --> 00:01:35,070
official announcement<font color="#E5E5E5"> that instructed</font>

34
00:01:31,500 --> 00:01:37,350
everyone about the vulnerability<font color="#E5E5E5"> and how</font>

35
00:01:35,070 --> 00:01:40,889
to patch it<font color="#E5E5E5"> this is a form of</font>

36
00:01:37,350 --> 00:01:43,048
responsible disclosure in which the the

37
00:01:40,890 --> 00:01:45,180
vulnerability<font color="#E5E5E5"> is patched first and after</font>

38
00:01:43,049 --> 00:01:47,520
<font color="#E5E5E5">that you will</font><font color="#CCCCCC"> get information</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> how to</font>

39
00:01:45,180 --> 00:01:51,119
patch it<font color="#E5E5E5"> and what are and general</font>

40
00:01:47,520 --> 00:01:53,699
<font color="#CCCCCC">information about</font><font color="#E5E5E5"> it then a few days</font>

41
00:01:51,119 --> 00:01:55,740
later the proof of concept<font color="#CCCCCC"> for this</font>

42
00:01:53,700 --> 00:01:58,860
<font color="#CCCCCC">vulnerability was was made public and</font>

43
00:01:55,740 --> 00:02:03,060
the attacker start to use it on start

44
00:01:58,860 --> 00:02:05,490
use it widely<font color="#E5E5E5"> a different a different</font>

45
00:02:03,060 --> 00:02:07,560
<font color="#E5E5E5">thing entirely entirely happened with</font>

46
00:02:05,490 --> 00:02:09,769
the<font color="#E5E5E5"> Drupal</font><font color="#CCCCCC"> gantry vulnerability this</font>

47
00:02:07,560 --> 00:02:12,000
time the attackers<font color="#E5E5E5"> were faster they</font>

48
00:02:09,770 --> 00:02:13,880
published a proof<font color="#E5E5E5"> of</font><font color="#CCCCCC"> concept for</font><font color="#E5E5E5"> this</font>

49
00:02:12,000 --> 00:02:16,010
vulnerability<font color="#E5E5E5"> and made it public if</font>

50
00:02:13,880 --> 00:02:18,380
<font color="#E5E5E5">were the</font><font color="#CCCCCC"> drupal security team had a</font>

51
00:02:16,010 --> 00:02:20,390
chance to publish the security patch and

52
00:02:18,380 --> 00:02:26,000
the official<font color="#E5E5E5"> the security advisory for</font>

53
00:02:20,390 --> 00:02:27,320
<font color="#E5E5E5">it okay so in order to understand in</font>

54
00:02:26,000 --> 00:02:28,160
order to<font color="#E5E5E5"> understand what's going</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> with</font>

55
00:02:27,320 --> 00:02:29,750
<font color="#E5E5E5">this</font><font color="#CCCCCC"> vulnerability</font>

56
00:02:28,160 --> 00:02:33,829
<font color="#E5E5E5">we'll have to take a look at the core</font>

57
00:02:29,750 --> 00:02:35,750
functionality<font color="#CCCCCC"> of</font><font color="#E5E5E5"> Drupal first so we have</font>

58
00:02:33,830 --> 00:02:38,300
<font color="#CCCCCC">this form API</font><font color="#E5E5E5"> which the developer can</font>

59
00:02:35,750 --> 00:02:40,880
<font color="#CCCCCC">use</font><font color="#E5E5E5"> to create and present forms to</font><font color="#CCCCCC"> the</font>

60
00:02:38,300 --> 00:02:42,380
<font color="#E5E5E5">end user and</font><font color="#CCCCCC"> its basic building blocks</font>

61
00:02:40,880 --> 00:02:45,859
are the<font color="#E5E5E5"> so called the renderable arrays</font>

62
00:02:42,380 --> 00:02:48,680
<font color="#E5E5E5">what</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> renderable arrays well there</font>

63
00:02:45,860 --> 00:02:53,060
are simply opt areas that are<font color="#E5E5E5"> very</font>

64
00:02:48,680 --> 00:02:56,060
similar<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the Python dictionaries add</font>

65
00:02:53,060 --> 00:03:01,520
a map keys to HTML tags and the keys can

66
00:02:56,060 --> 00:03:03,220
<font color="#E5E5E5">be either properties or form elements so</font>

67
00:03:01,520 --> 00:03:06,410
what happens when<font color="#E5E5E5"> a user makes</font><font color="#CCCCCC"> a request</font>

68
00:03:03,220 --> 00:03:10,000
<font color="#E5E5E5">well</font><font color="#CCCCCC"> the parameters of the user request</font>

69
00:03:06,410 --> 00:03:13,250
are transformed in at PHP<font color="#E5E5E5"> array that</font>

70
00:03:10,000 --> 00:03:16,430
that will data<font color="#E5E5E5"> this is going to be used</font>

71
00:03:13,250 --> 00:03:18,500
to to retrieve the actual form that you

72
00:03:16,430 --> 00:03:21,040
and the<font color="#CCCCCC"> information</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> the form are</font>

73
00:03:18,500 --> 00:03:26,120
going to be sent<font color="#CCCCCC"> to the rendering module</font>

74
00:03:21,040 --> 00:03:28,310
of course the the information<font color="#CCCCCC"> about the</font>

75
00:03:26,120 --> 00:03:30,110
form are going to be represented in<font color="#E5E5E5"> a</font>

76
00:03:28,310 --> 00:03:32,600
render<font color="#CCCCCC"> polaron</font><font color="#E5E5E5"> they are going to contain</font>

77
00:03:30,110 --> 00:03:34,370
either properties or form elements and

78
00:03:32,600 --> 00:03:38,870
that is going<font color="#CCCCCC"> to affect the outcome of</font>

79
00:03:34,370 --> 00:03:41,090
the<font color="#E5E5E5"> rendering process okay so what</font>

80
00:03:38,870 --> 00:03:43,580
<font color="#CCCCCC">exactly the run ability lies the</font>

81
00:03:41,090 --> 00:03:45,410
variability is within the within the

82
00:03:43,580 --> 00:03:47,510
rendering module so we<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> the</font>

83
00:03:45,410 --> 00:03:48,740
render function which<font color="#E5E5E5"> takes as argument</font>

84
00:03:47,510 --> 00:03:53,690
the<font color="#CCCCCC"> elements array that we talked</font><font color="#E5E5E5"> about</font>

85
00:03:48,740 --> 00:03:55,459
earlier if a property<font color="#E5E5E5"> such as</font><font color="#CCCCCC"> post</font>

86
00:03:53,690 --> 00:03:58,130
render is present within the elementary

87
00:03:55,459 --> 00:04:01,130
then a call user function will be

88
00:03:58,130 --> 00:04:03,769
executed having as parameters<font color="#E5E5E5"> a callable</font>

89
00:04:01,130 --> 00:04:05,269
<font color="#E5E5E5">argument and some components of the</font>

90
00:04:03,770 --> 00:04:10,970
<font color="#E5E5E5">elements array which have the children</font>

91
00:04:05,270 --> 00:04:16,370
property set in other words the callable

92
00:04:10,970 --> 00:04:18,320
function will be executed<font color="#E5E5E5"> having having</font>

93
00:04:16,370 --> 00:04:20,120
as argument<font color="#E5E5E5"> or the components of the</font>

94
00:04:18,320 --> 00:04:22,580
<font color="#E5E5E5">elements</font><font color="#CCCCCC"> or additional property set</font><font color="#E5E5E5"> but</font>

95
00:04:20,120 --> 00:04:25,070
<font color="#E5E5E5">what that means is that</font><font color="#CCCCCC"> that this</font>

96
00:04:22,580 --> 00:04:27,590
execution is made with<font color="#E5E5E5"> any form without</font>

97
00:04:25,070 --> 00:04:29,480
<font color="#CCCCCC">any form of sanitization whatsoever</font>

98
00:04:27,590 --> 00:04:31,969
more<font color="#E5E5E5"> exactly the</font><font color="#CCCCCC"> color ball function it</font>

99
00:04:29,480 --> 00:04:35,060
<font color="#E5E5E5">can be any PHP function that we want</font><font color="#CCCCCC"> for</font>

100
00:04:31,970 --> 00:04:38,180
<font color="#E5E5E5">example</font><font color="#CCCCCC"> Pete except were passed rule</font><font color="#E5E5E5"> and</font>

101
00:04:35,060 --> 00:04:39,980
the long side we can specify<font color="#E5E5E5"> on a linux</font>

102
00:04:38,180 --> 00:04:42,260
command and maybe that<font color="#CCCCCC"> is going to be</font>

103
00:04:39,980 --> 00:04:44,360
<font color="#E5E5E5">executed on</font><font color="#CCCCCC"> the remote</font><font color="#E5E5E5"> server but the</font>

104
00:04:42,260 --> 00:04:47,180
<font color="#CCCCCC">only</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that we need is an entry</font>

105
00:04:44,360 --> 00:04:48,710
point in a way to somehow specify the

106
00:04:47,180 --> 00:04:52,370
property alongside<font color="#E5E5E5"> with the other</font>

107
00:04:48,710 --> 00:04:54,580
components<font color="#CCCCCC"> so what can</font><font color="#E5E5E5"> we do it turns</font>

108
00:04:52,370 --> 00:04:57,290
<font color="#E5E5E5">out that we have such an entry point</font>

109
00:04:54,580 --> 00:04:59,780
<font color="#CCCCCC">which is represented by managed file</font>

110
00:04:57,290 --> 00:05:01,790
that PHP<font color="#E5E5E5"> this is simply a form for</font>

111
00:04:59,780 --> 00:05:05,000
upload and save<font color="#E5E5E5"> files on the on the</font>

112
00:05:01,790 --> 00:05:07,370
<font color="#CCCCCC">Drupal on Drupal instance and it works</font>

113
00:05:05,000 --> 00:05:09,230
by<font color="#E5E5E5"> creating an Ajax response that</font>

114
00:05:07,370 --> 00:05:11,930
invokes the upload<font color="#E5E5E5"> Ajax callback</font>

115
00:05:09,230 --> 00:05:15,710
function this will this<font color="#E5E5E5"> will take as</font>

116
00:05:11,930 --> 00:05:22,370
argument<font color="#CCCCCC"> as arguments in</font><font color="#E5E5E5"> principle our</font>

117
00:05:15,710 --> 00:05:25,310
<font color="#E5E5E5">request then it will turn it then it</font>

118
00:05:22,370 --> 00:05:27,889
<font color="#E5E5E5">will turn it on a PHP or PHP or</font><font color="#CCCCCC"> a which</font>

119
00:05:25,310 --> 00:05:30,830
is which is<font color="#E5E5E5"> used to actually</font><font color="#CCCCCC"> retrieve</font>

120
00:05:27,889 --> 00:05:33,430
the form that<font color="#E5E5E5"> we want to render after</font>

121
00:05:30,830 --> 00:05:36,560
that<font color="#CCCCCC"> your</font><font color="#E5E5E5"> we are using that nested</font>

122
00:05:33,430 --> 00:05:38,240
renderable array and we're going<font color="#CCCCCC"> to send</font>

123
00:05:36,560 --> 00:05:40,250
it directly to<font color="#E5E5E5"> the to the rendering</font>

124
00:05:38,240 --> 00:05:42,169
function that we saw about that we saw

125
00:05:40,250 --> 00:05:43,940
it earlier<font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is exactly what we</font>

126
00:05:42,169 --> 00:05:47,870
need to specify the arguments in order

127
00:05:43,940 --> 00:05:50,060
<font color="#E5E5E5">to</font><font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> okay with</font><font color="#E5E5E5"> this in mind</font>

128
00:05:47,870 --> 00:05:51,350
how<font color="#E5E5E5"> the actual exploit looks like well</font>

129
00:05:50,060 --> 00:05:54,289
it's<font color="#E5E5E5"> pretty simple you</font><font color="#CCCCCC"> just have to</font>

130
00:05:51,350 --> 00:05:56,660
<font color="#CCCCCC">specify</font><font color="#E5E5E5"> the post render property then we</font>

131
00:05:54,289 --> 00:05:59,000
<font color="#CCCCCC">will specify PHP functions in this case</font>

132
00:05:56,660 --> 00:06:02,570
<font color="#E5E5E5">exact alongside with with the links</font>

133
00:05:59,000 --> 00:06:04,550
<font color="#E5E5E5">command that we want to execute</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> lo</font>

134
00:06:02,570 --> 00:06:07,310
and behold the vulnerable server<font color="#E5E5E5"> will</font>

135
00:06:04,550 --> 00:06:14,090
respond us with the output of the Linux

136
00:06:07,310 --> 00:06:16,729
command<font color="#CCCCCC"> pretty neat</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> ok now that we</font>

137
00:06:14,090 --> 00:06:18,979
saw the word the<font color="#CCCCCC"> run ability lies and</font>

138
00:06:16,729 --> 00:06:20,270
how can<font color="#E5E5E5"> be exploit it let's see how the</font>

139
00:06:18,979 --> 00:06:23,750
Drupal team responded to it

140
00:06:20,270 --> 00:06:26,320
well<font color="#E5E5E5"> they thought about it</font><font color="#CCCCCC"> and they</font>

141
00:06:23,750 --> 00:06:29,020
decided<font color="#E5E5E5"> that</font><font color="#CCCCCC"> they're going to build</font><font color="#E5E5E5"> a</font>

142
00:06:26,320 --> 00:06:32,539
sanitizer module which<font color="#E5E5E5"> is going to</font><font color="#CCCCCC"> be</font>

143
00:06:29,020 --> 00:06:34,250
introduced at boots at the<font color="#E5E5E5"> Drupal</font>

144
00:06:32,539 --> 00:06:37,150
<font color="#E5E5E5">bootstrap which</font><font color="#CCCCCC"> is what happens exactly</font>

145
00:06:34,250 --> 00:06:40,430
<font color="#CCCCCC">after the site loads</font><font color="#E5E5E5"> its configuration</font>

146
00:06:37,150 --> 00:06:41,330
so what is in this sanitizer module it

147
00:06:40,430 --> 00:06:43,970
contains

148
00:06:41,330 --> 00:06:46,370
<font color="#E5E5E5">dot call strip dangerous values as</font><font color="#CCCCCC"> it as</font>

149
00:06:43,970 --> 00:06:50,919
<font color="#CCCCCC">it naming implies it will simply parse</font>

150
00:06:46,370 --> 00:06:53,330
our<font color="#E5E5E5"> request for for the hash</font><font color="#CCCCCC"> character</font>

151
00:06:50,919 --> 00:06:58,008
<font color="#E5E5E5">which would imply</font><font color="#CCCCCC"> that we're trying</font><font color="#E5E5E5"> to</font>

152
00:06:53,330 --> 00:07:00,109
set<font color="#E5E5E5"> the</font><font color="#CCCCCC"> the pre-render up Ostrander</font>

153
00:06:58,009 --> 00:07:06,319
property what do you think this<font color="#E5E5E5"> is a</font>

154
00:07:00,110 --> 00:07:07,819
good<font color="#E5E5E5"> idea well I personally think</font><font color="#CCCCCC"> that</font>

155
00:07:06,319 --> 00:07:10,969
this is not<font color="#CCCCCC"> a good</font><font color="#E5E5E5"> idea because</font><font color="#CCCCCC"> you can</font>

156
00:07:07,819 --> 00:07:14,780
<font color="#CCCCCC">simply URI encode the the hash character</font>

157
00:07:10,969 --> 00:07:17,419
<font color="#E5E5E5">and pass the same at the same request</font>

158
00:07:14,780 --> 00:07:20,419
and you will probably<font color="#CCCCCC"> manage to</font><font color="#E5E5E5"> bypass</font>

159
00:07:17,419 --> 00:07:22,729
this dispatch<font color="#E5E5E5"> other thing that might</font>

160
00:07:20,419 --> 00:07:25,490
happen is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> there are there</font><font color="#CCCCCC"> may be</font>

161
00:07:22,729 --> 00:07:29,449
certain forms that are<font color="#E5E5E5"> not going to to</font>

162
00:07:25,490 --> 00:07:31,430
pass<font color="#E5E5E5"> this routine for example some some</font>

163
00:07:29,449 --> 00:07:33,169
<font color="#E5E5E5">care forms or some some forms that</font>

164
00:07:31,430 --> 00:07:35,509
require user interaction as a<font color="#E5E5E5"> confirmed</font>

165
00:07:33,169 --> 00:07:37,128
form and to bypass the<font color="#E5E5E5"> petrel together</font>

166
00:07:35,509 --> 00:07:42,590
and<font color="#E5E5E5"> this is exactly what happened with</font>

167
00:07:37,129 --> 00:07:44,569
the Drupal<font color="#CCCCCC"> 3 vulnerability</font><font color="#E5E5E5"> okay now that</font>

168
00:07:42,590 --> 00:07:47,150
we<font color="#E5E5E5"> know how they patched it or how they</font>

169
00:07:44,569 --> 00:07:49,699
wrongfully patch it let's take a look at

170
00:07:47,150 --> 00:07:52,090
the at the malicious activity<font color="#CCCCCC"> our</font>

171
00:07:49,699 --> 00:07:54,259
network<font color="#E5E5E5"> of honey pots started to</font>

172
00:07:52,090 --> 00:07:57,979
intercept<font color="#E5E5E5"> a Drupal get into related</font>

173
00:07:54,259 --> 00:07:59,389
activity<font color="#E5E5E5"> two days</font><font color="#CCCCCC"> after</font><font color="#E5E5E5"> the proof of</font>

174
00:07:57,979 --> 00:08:01,849
<font color="#E5E5E5">concept for the</font><font color="#CCCCCC"> plugin to vulnerability</font>

175
00:07:59,389 --> 00:08:05,089
<font color="#E5E5E5">has appeared we obtained all</font>

176
00:08:01,849 --> 00:08:08,839
approximately<font color="#E5E5E5"> 8,000 8,000 hits now in</font>

177
00:08:05,089 --> 00:08:14,300
<font color="#CCCCCC">our honey pots culminating with</font><font color="#E5E5E5"> 1600</font>

178
00:08:08,839 --> 00:08:19,039
<font color="#CCCCCC">events during 7th of</font><font color="#E5E5E5"> May which is two</font>

179
00:08:14,300 --> 00:08:20,690
<font color="#CCCCCC">days after both POC had made public we</font>

180
00:08:19,039 --> 00:08:24,469
<font color="#E5E5E5">can also infer the distribution of the</font>

181
00:08:20,690 --> 00:08:28,339
source of<font color="#E5E5E5"> the attacks</font><font color="#CCCCCC"> that of the total</font>

182
00:08:24,469 --> 00:08:30,580
total number<font color="#CCCCCC"> of attacks</font><font color="#E5E5E5"> this is pretty</font>

183
00:08:28,339 --> 00:08:33,289
interesting<font color="#E5E5E5"> because we would expect that</font>

184
00:08:30,580 --> 00:08:35,740
<font color="#E5E5E5">most of most of the source of the text</font>

185
00:08:33,289 --> 00:08:38,419
should be countries like China so on but

186
00:08:35,740 --> 00:08:41,570
of course<font color="#E5E5E5"> the attackers are smart they</font>

187
00:08:38,419 --> 00:08:43,490
are going<font color="#E5E5E5"> to use proxy</font><font color="#CCCCCC"> services or VPN</font>

188
00:08:41,570 --> 00:08:46,310
services<font color="#E5E5E5"> and it's interesting to see</font>

189
00:08:43,490 --> 00:08:49,640
what are their preferences<font color="#E5E5E5"> other thing</font>

190
00:08:46,310 --> 00:08:52,250
that might affect this this distribution

191
00:08:49,640 --> 00:08:54,380
<font color="#E5E5E5">is the fact that maybe some attacks</font>

192
00:08:52,250 --> 00:08:55,490
<font color="#E5E5E5">attackers won't conduct their</font><font color="#CCCCCC"> Maurice</font>

193
00:08:54,380 --> 00:08:57,290
activities from

194
00:08:55,490 --> 00:08:58,930
using a certain VPN<font color="#E5E5E5"> or proxy because</font>

195
00:08:57,290 --> 00:09:01,400
<font color="#E5E5E5">they don't trust</font><font color="#CCCCCC"> that they will</font><font color="#E5E5E5"> try to</font>

196
00:08:58,930 --> 00:09:03,680
<font color="#E5E5E5">actually infect certain</font><font color="#CCCCCC"> much machines</font>

197
00:09:01,400 --> 00:09:05,329
from countries<font color="#CCCCCC"> such as this which has</font>

198
00:09:03,680 --> 00:09:06,739
which are predominantly<font color="#E5E5E5"> English</font>

199
00:09:05,330 --> 00:09:10,960
<font color="#E5E5E5">english-speaking countries and they will</font>

200
00:09:06,740 --> 00:09:14,630
conduct their attack from there<font color="#E5E5E5"> okay now</font>

201
00:09:10,960 --> 00:09:16,190
<font color="#E5E5E5">to the interesting part we saw their</font>

202
00:09:14,630 --> 00:09:19,520
general<font color="#CCCCCC"> behavior now let's take a look</font>

203
00:09:16,190 --> 00:09:21,890
at some actual samples<font color="#CCCCCC"> the first one is</font>

204
00:09:19,520 --> 00:09:24,439
a easy enough sample it's a PHP agent we

205
00:09:21,890 --> 00:09:28,699
see that this attacker is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use</font>

206
00:09:24,440 --> 00:09:31,850
the Drupal to exploit<font color="#E5E5E5"> it in order</font><font color="#CCCCCC"> to</font>

207
00:09:28,700 --> 00:09:37,760
deliver a<font color="#E5E5E5"> PHP a PHP file so let's see</font>

208
00:09:31,850 --> 00:09:40,790
what's<font color="#E5E5E5"> within that</font><font color="#CCCCCC"> okay this looks</font>

209
00:09:37,760 --> 00:09:42,680
pretty<font color="#CCCCCC"> awful skated but it's not so</font><font color="#E5E5E5"> bad</font>

210
00:09:40,790 --> 00:09:45,860
usually when faced<font color="#CCCCCC"> with</font><font color="#E5E5E5"> samples such</font><font color="#CCCCCC"> as</font>

211
00:09:42,680 --> 00:09:48,790
these we we can replace the variables

212
00:09:45,860 --> 00:09:52,270
<font color="#E5E5E5">arrange the code a little bit and maybe</font>

213
00:09:48,790 --> 00:09:56,120
base64 decode the the<font color="#E5E5E5"> ugly string and</font>

214
00:09:52,270 --> 00:09:57,890
more importantly switch the<font color="#E5E5E5"> eval to echo</font>

215
00:09:56,120 --> 00:09:59,150
or something in order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be sure that we</font>

216
00:09:57,890 --> 00:10:05,210
won't execute<font color="#E5E5E5"> malicious code in our</font>

217
00:09:59,150 --> 00:10:07,490
machine this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the output</font><font color="#CCCCCC"> after we</font>

218
00:10:05,210 --> 00:10:10,160
managed to do office<font color="#CCCCCC"> K did</font><font color="#E5E5E5"> we see that</font>

219
00:10:07,490 --> 00:10:11,330
is simply enough PHP file uploader that

220
00:10:10,160 --> 00:10:13,550
the attacker can use<font color="#E5E5E5"> to further</font>

221
00:10:11,330 --> 00:10:16,130
<font color="#CCCCCC">compromised the machine this</font><font color="#E5E5E5"> is usually</font>

222
00:10:13,550 --> 00:10:17,540
used<font color="#E5E5E5"> in what is called a staging attack</font>

223
00:10:16,130 --> 00:10:19,130
the attacker doesn't<font color="#E5E5E5"> want to make a lot</font>

224
00:10:17,540 --> 00:10:22,490
of noise they don't want to trigger they

225
00:10:19,130 --> 00:10:25,880
use the exploit<font color="#E5E5E5"> to simply run</font><font color="#CCCCCC"> a command</font>

226
00:10:22,490 --> 00:10:28,700
<font color="#E5E5E5">it would use</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> file with a name</font><font color="#CCCCCC"> that</font>

227
00:10:25,880 --> 00:10:30,980
won't trigger<font color="#CCCCCC"> want make one make</font><font color="#E5E5E5"> a</font>

228
00:10:28,700 --> 00:10:35,470
question what there is and will<font color="#E5E5E5"> simply</font>

229
00:10:30,980 --> 00:10:40,970
use<font color="#CCCCCC"> that</font><font color="#E5E5E5"> to upload is needed files</font><font color="#CCCCCC"> okay</font>

230
00:10:35,470 --> 00:10:43,760
now the the second sample<font color="#CCCCCC"> this is a</font>

231
00:10:40,970 --> 00:10:47,240
little bit more interesting<font color="#CCCCCC"> this</font>

232
00:10:43,760 --> 00:10:48,800
attacker is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to use the exploit for</font>

233
00:10:47,240 --> 00:10:52,040
<font color="#E5E5E5">the beginning</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> vulnerability in order</font>

234
00:10:48,800 --> 00:10:55,250
to download<font color="#E5E5E5"> resource from a</font><font color="#CCCCCC"> domain that</font>

235
00:10:52,040 --> 00:10:57,680
<font color="#E5E5E5">on his control after</font><font color="#CCCCCC"> that is trying to</font>

236
00:10:55,250 --> 00:11:02,930
<font color="#E5E5E5">execute what seems</font><font color="#CCCCCC"> to be a shell script</font>

237
00:10:57,680 --> 00:11:04,660
<font color="#E5E5E5">so let's see what's within that mmm this</font>

238
00:11:02,930 --> 00:11:07,120
is getting interesting

239
00:11:04,660 --> 00:11:10,319
looking at this<font color="#CCCCCC"> were kind of</font>

240
00:11:07,120 --> 00:11:13,990
understanding what<font color="#E5E5E5"> the attacker is up to</font>

241
00:11:10,320 --> 00:11:16,450
so he's<font color="#CCCCCC"> thinking I want to use the</font>

242
00:11:13,990 --> 00:11:18,520
Drupal to<font color="#E5E5E5"> exploit in order to make some</font>

243
00:11:16,450 --> 00:11:20,800
money<font color="#E5E5E5"> push some coins out of</font><font color="#CCCCCC"> my wallet</font>

244
00:11:18,520 --> 00:11:22,150
but maybe other attacker is quicker than

245
00:11:20,800 --> 00:11:24,099
mean he's going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> compromise the</font>

246
00:11:22,150 --> 00:11:27,250
<font color="#CCCCCC">machine ahead of me so what can</font><font color="#E5E5E5"> I do</font><font color="#CCCCCC"> I</font>

247
00:11:24,100 --> 00:11:28,450
will simply be inspect all<font color="#CCCCCC"> the processes</font>

248
00:11:27,250 --> 00:11:29,860
that are<font color="#E5E5E5"> running on the vulnerable</font>

249
00:11:28,450 --> 00:11:32,790
machine<font color="#E5E5E5"> and I'm trying</font><font color="#CCCCCC"> to kill all of</font>

250
00:11:29,860 --> 00:11:35,020
<font color="#E5E5E5">that so no honor amongst thieves</font>

251
00:11:32,790 --> 00:11:36,910
<font color="#E5E5E5">probably what is going to follow and</font>

252
00:11:35,020 --> 00:11:41,620
he's trying to<font color="#E5E5E5"> start his mining process</font>

253
00:11:36,910 --> 00:11:44,290
<font color="#E5E5E5">but let's see this time the attacker</font>

254
00:11:41,620 --> 00:11:45,670
needs<font color="#E5E5E5"> on dependencies and he is assuring</font>

255
00:11:44,290 --> 00:11:48,370
that<font color="#E5E5E5"> this is happening by installing</font>

256
00:11:45,670 --> 00:11:50,140
them after that he<font color="#CCCCCC"> is trying to achieve</font>

257
00:11:48,370 --> 00:11:51,760
persistency so if the<font color="#E5E5E5"> compromise</font>

258
00:11:50,140 --> 00:11:54,010
<font color="#CCCCCC">venerable machine</font><font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to be</font>

259
00:11:51,760 --> 00:11:57,010
restarted<font color="#CCCCCC"> we simply insert</font><font color="#E5E5E5"> some cron</font>

260
00:11:54,010 --> 00:12:03,460
jobs and continue to make<font color="#E5E5E5"> money for</font><font color="#CCCCCC"> his</font>

261
00:11:57,010 --> 00:12:05,080
wallet<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> let's continue</font><font color="#CCCCCC"> now this is</font>

262
00:12:03,460 --> 00:12:08,350
<font color="#E5E5E5">more interesting</font><font color="#CCCCCC"> he's going</font><font color="#E5E5E5"> to use an</font>

263
00:12:05,080 --> 00:12:10,330
ACTH<font color="#CCCCCC"> Becker key and</font><font color="#E5E5E5"> we will introduce it</font>

264
00:12:08,350 --> 00:12:11,820
on<font color="#E5E5E5"> the authorized keys to assure that</font><font color="#CCCCCC"> he</font>

265
00:12:10,330 --> 00:12:14,710
has access<font color="#E5E5E5"> to the compromised</font><font color="#CCCCCC"> machine</font>

266
00:12:11,820 --> 00:12:16,930
then more importantly<font color="#CCCCCC"> he is double</font>

267
00:12:14,710 --> 00:12:18,880
<font color="#CCCCCC">downloading on the Venerable machine</font>

268
00:12:16,930 --> 00:12:21,520
more resources and we see that our two

269
00:12:18,880 --> 00:12:24,250
<font color="#CCCCCC">files of interested that are caught p2</font>

270
00:12:21,520 --> 00:12:25,720
to TMP<font color="#CCCCCC"> clean migrations</font><font color="#E5E5E5"> one of them we</font>

271
00:12:24,250 --> 00:12:27,610
already suspect that is going to be the

272
00:12:25,720 --> 00:12:33,940
<font color="#CCCCCC">miner but what is happening with the</font>

273
00:12:27,610 --> 00:12:39,040
next with<font color="#CCCCCC"> the next one as we</font><font color="#E5E5E5"> expected</font><font color="#CCCCCC"> I</font>

274
00:12:33,940 --> 00:12:41,920
<font color="#CCCCCC">expected the the files are executed TMP</font>

275
00:12:39,040 --> 00:12:44,410
<font color="#CCCCCC">client</font><font color="#E5E5E5"> TMP migrations</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> from this we</font>

276
00:12:41,920 --> 00:12:47,140
<font color="#E5E5E5">can we can infer that the migration is</font>

277
00:12:44,410 --> 00:12:49,360
actually quite<font color="#E5E5E5"> minor but we still have</font>

278
00:12:47,140 --> 00:12:51,340
to see what is with the<font color="#E5E5E5"> other file of</font>

279
00:12:49,360 --> 00:12:53,290
course<font color="#CCCCCC"> he is expecting if the process</font>

280
00:12:51,340 --> 00:12:55,180
starting and if it's not it's<font color="#CCCCCC"> probably</font>

281
00:12:53,290 --> 00:12:57,640
<font color="#E5E5E5">missing library so he solves that by</font>

282
00:12:55,180 --> 00:13:00,390
downloading<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and running along running</font>

283
00:12:57,640 --> 00:13:00,390
with the client<font color="#CCCCCC"> minor</font>

284
00:13:03,200 --> 00:13:07,870
<font color="#E5E5E5">okay so we know this we know that the NP</font>

285
00:13:05,899 --> 00:13:11,329
migration is probably<font color="#E5E5E5"> the client minor</font>

286
00:13:07,870 --> 00:13:13,399
<font color="#CCCCCC">he is using uncommon minor pool and</font>

287
00:13:11,329 --> 00:13:15,829
specifies it and<font color="#E5E5E5"> what the other file</font>

288
00:13:13,399 --> 00:13:20,000
gets executed directly<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> have to see</font>

289
00:13:15,829 --> 00:13:22,399
what's within<font color="#E5E5E5"> it just to make</font><font color="#CCCCCC"> sure let's</font>

290
00:13:20,000 --> 00:13:24,230
<font color="#E5E5E5">look again at file migrations this is</font><font color="#CCCCCC"> U</font>

291
00:13:22,399 --> 00:13:28,810
<font color="#CCCCCC">P expect so we're trying</font><font color="#E5E5E5"> to unpack it</font>

292
00:13:24,230 --> 00:13:28,810
<font color="#E5E5E5">this time is in</font><font color="#CCCCCC"> a binary</font><font color="#E5E5E5"> executable file</font>

293
00:13:28,870 --> 00:13:33,920
looking inspecting the strings we see

294
00:13:31,490 --> 00:13:35,810
that indeed<font color="#E5E5E5"> it's um it's a more narrow</font>

295
00:13:33,920 --> 00:13:39,079
<font color="#CCCCCC">coin</font><font color="#E5E5E5"> minor and you see we can specify</font>

296
00:13:35,810 --> 00:13:43,790
the the mining pool and this is how he

297
00:13:39,079 --> 00:13:44,930
achieves it but we<font color="#E5E5E5"> still were left with</font>

298
00:13:43,790 --> 00:13:48,680
the<font color="#CCCCCC"> question what's within the other</font>

299
00:13:44,930 --> 00:13:51,949
file<font color="#E5E5E5"> this is directly on binary</font>

300
00:13:48,680 --> 00:13:53,630
executable<font color="#E5E5E5"> but it's cool that it's</font>

301
00:13:51,949 --> 00:13:55,729
statically<font color="#E5E5E5"> linked and it's also not</font>

302
00:13:53,630 --> 00:13:57,410
stripped so we can<font color="#CCCCCC"> inspect it</font><font color="#E5E5E5"> further so</font>

303
00:13:55,730 --> 00:14:01,310
I got curious<font color="#CCCCCC"> and I started to look</font>

304
00:13:57,410 --> 00:14:03,560
within it now this<font color="#E5E5E5"> is interesting</font>

305
00:14:01,310 --> 00:14:09,018
<font color="#E5E5E5">because we can see strings such as a tag</font>

306
00:14:03,560 --> 00:14:12,109
<font color="#CCCCCC">base tcp attack or loop CMD shell</font>

307
00:14:09,019 --> 00:14:14,899
command which<font color="#CCCCCC"> which would</font><font color="#E5E5E5"> probably</font>

308
00:14:12,110 --> 00:14:17,630
<font color="#E5E5E5">suggest that we're facing with a client</font>

309
00:14:14,899 --> 00:14:20,949
for a botnet also there are a bunch<font color="#E5E5E5"> of</font>

310
00:14:17,630 --> 00:14:23,390
<font color="#E5E5E5">IP is present in the in the binary file</font>

311
00:14:20,949 --> 00:14:25,399
looking for them we<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see that or</font><font color="#E5E5E5"> have</font>

312
00:14:23,390 --> 00:14:28,100
been<font color="#E5E5E5"> reporting have been reported as</font>

313
00:14:25,399 --> 00:14:32,420
being pertaining to domains that were

314
00:14:28,100 --> 00:14:34,160
conducting malicious activities but<font color="#CCCCCC"> I</font>

315
00:14:32,420 --> 00:14:37,519
wanted<font color="#CCCCCC"> to look further</font><font color="#E5E5E5"> into it so I use</font>

316
00:14:34,160 --> 00:14:39,490
<font color="#CCCCCC">gdb and</font><font color="#E5E5E5"> hopper disassembly in order to</font>

317
00:14:37,519 --> 00:14:41,899
understand what's going<font color="#CCCCCC"> on there for</font>

318
00:14:39,490 --> 00:14:43,490
<font color="#CCCCCC">starters it has some anti debugging</font>

319
00:14:41,899 --> 00:14:45,829
logic<font color="#E5E5E5"> going on so if you're trying</font><font color="#CCCCCC"> to</font>

320
00:14:43,490 --> 00:14:49,040
<font color="#E5E5E5">execute</font><font color="#CCCCCC"> is within</font><font color="#E5E5E5"> GDP it will assist the</font>

321
00:14:45,829 --> 00:14:51,469
execution also there<font color="#E5E5E5"> is a important</font>

322
00:14:49,040 --> 00:14:53,360
method which I<font color="#E5E5E5"> entitle start</font><font color="#CCCCCC"> a start</font>

323
00:14:51,470 --> 00:14:57,560
back door<font color="#E5E5E5"> and I start a little</font><font color="#CCCCCC"> bit in</font>

324
00:14:53,360 --> 00:14:59,540
that<font color="#E5E5E5"> this method will call a method</font>

325
00:14:57,560 --> 00:15:01,790
<font color="#E5E5E5">which I entered</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> deploy backdoor and</font>

326
00:14:59,540 --> 00:15:04,339
here there<font color="#E5E5E5"> are three things of interest</font>

327
00:15:01,790 --> 00:15:07,180
<font color="#E5E5E5">there is main Bay Kong its main monitor</font>

328
00:15:04,339 --> 00:15:09,500
<font color="#CCCCCC">and main</font><font color="#E5E5E5"> backdoor what happens here a</font>

329
00:15:07,180 --> 00:15:14,180
bunch of<font color="#CCCCCC"> information</font><font color="#E5E5E5"> about the machine</font>

330
00:15:09,500 --> 00:15:16,670
<font color="#CCCCCC">are</font><font color="#E5E5E5"> are obtained information such as the</font>

331
00:15:14,180 --> 00:15:19,540
<font color="#E5E5E5">CPU</font><font color="#CCCCCC"> load network load and so on</font>

332
00:15:16,670 --> 00:15:23,120
and<font color="#E5E5E5"> they're sent within the main monitor</font>

333
00:15:19,540 --> 00:15:27,770
<font color="#E5E5E5">main winter method to the command and</font>

334
00:15:23,120 --> 00:15:30,110
control server we see some interesting

335
00:15:27,770 --> 00:15:33,079
<font color="#E5E5E5">files such as build that lock which</font>

336
00:15:30,110 --> 00:15:38,390
would suggest that is some kind of

337
00:15:33,080 --> 00:15:40,430
<font color="#CCCCCC">sibling of the bill gates</font><font color="#E5E5E5"> malware which</font>

338
00:15:38,390 --> 00:15:43,130
is<font color="#E5E5E5"> interesting but another</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> is that</font>

339
00:15:40,430 --> 00:15:46,040
in the main<font color="#CCCCCC"> backdoor</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> will start</font>

340
00:15:43,130 --> 00:15:48,260
this this would run again as a<font color="#CCCCCC"> daemon</font>

341
00:15:46,040 --> 00:15:50,270
<font color="#CCCCCC">and will write direct all its out all</font>

342
00:15:48,260 --> 00:15:53,240
its output to<font color="#E5E5E5"> the TMP now in order to</font>

343
00:15:50,270 --> 00:15:55,400
<font color="#CCCCCC">make such a lot</font><font color="#E5E5E5"> of noise and also there</font>

344
00:15:53,240 --> 00:15:57,800
are there's some logic added for a more

345
00:15:55,400 --> 00:16:00,980
resilient replication<font color="#E5E5E5"> for example in</font>

346
00:15:57,800 --> 00:16:02,630
copied copying<font color="#E5E5E5"> itself to the</font><font color="#CCCCCC"> init D or</font>

347
00:16:00,980 --> 00:16:07,070
receive orders it without the and so on

348
00:16:02,630 --> 00:16:08,900
<font color="#CCCCCC">a virus total</font><font color="#E5E5E5"> confirm is fine</font>

349
00:16:07,070 --> 00:16:12,200
maliciousness we see<font color="#E5E5E5"> that we get we got</font>

350
00:16:08,900 --> 00:16:16,160
hit from<font color="#E5E5E5"> a lot of anti viruses so it's</font>

351
00:16:12,200 --> 00:16:20,690
<font color="#E5E5E5">more it's certainly a trojan or and the</font>

352
00:16:16,160 --> 00:16:23,600
<font color="#CCCCCC">backdoor</font><font color="#E5E5E5"> for linux so what have you</font>

353
00:16:20,690 --> 00:16:25,430
<font color="#CCCCCC">learned for starting security robust</font>

354
00:16:23,600 --> 00:16:27,890
security won't work<font color="#E5E5E5"> why is that</font>

355
00:16:25,430 --> 00:16:29,060
well the drupal security team tried to

356
00:16:27,890 --> 00:16:31,819
<font color="#E5E5E5">apply a general patch to this</font>

357
00:16:29,060 --> 00:16:35,300
<font color="#CCCCCC">vulnerability</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> thought</font><font color="#E5E5E5"> that if we we</font>

358
00:16:31,820 --> 00:16:36,620
somehow<font color="#E5E5E5"> built a sanitization module and</font>

359
00:16:35,300 --> 00:16:40,670
you apply<font color="#CCCCCC"> it directly at the</font><font color="#E5E5E5"> site load</font>

360
00:16:36,620 --> 00:16:42,230
we will<font color="#E5E5E5"> make the will make the attackers</font>

361
00:16:40,670 --> 00:16:44,420
go further<font color="#E5E5E5"> from the actual vulnerability</font>

362
00:16:42,230 --> 00:16:47,270
so they<font color="#E5E5E5"> thought that well they might not</font>

363
00:16:44,420 --> 00:16:50,510
<font color="#E5E5E5">be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> to infer the vulnerability as</font>

364
00:16:47,270 --> 00:16:52,250
being presented a rendering module but

365
00:16:50,510 --> 00:16:55,069
<font color="#E5E5E5">he saw that that</font><font color="#CCCCCC"> wasn't</font><font color="#E5E5E5"> true</font><font color="#CCCCCC"> because</font>

366
00:16:52,250 --> 00:16:57,710
they<font color="#E5E5E5"> actually managed</font><font color="#CCCCCC"> to bypass it</font><font color="#E5E5E5"> also</font>

367
00:16:55,070 --> 00:17:01,190
<font color="#E5E5E5">her</font><font color="#CCCCCC"> designs makes it bad code and this</font>

368
00:16:57,710 --> 00:17:03,260
<font color="#E5E5E5">is true because after they they</font><font color="#CCCCCC"> made a</font>

369
00:17:01,190 --> 00:17:05,600
<font color="#E5E5E5">patch for the</font><font color="#CCCCCC"> drupal gallantry</font><font color="#E5E5E5"> one month</font>

370
00:17:03,260 --> 00:17:07,579
<font color="#E5E5E5">ago another vulnerability</font><font color="#CCCCCC"> let's call it</font>

371
00:17:05,599 --> 00:17:10,659
triple kill and for has appeared<font color="#E5E5E5"> it</font>

372
00:17:07,579 --> 00:17:12,589
seems to be a critical vulnerability

373
00:17:10,660 --> 00:17:14,810
publicly exploit hasn't been released

374
00:17:12,589 --> 00:17:19,310
yet<font color="#CCCCCC"> but i'm expecting any time from that</font>

375
00:17:14,810 --> 00:17:20,839
<font color="#E5E5E5">one and</font><font color="#CCCCCC"> the last thing and this</font><font color="#E5E5E5"> is</font>

376
00:17:19,310 --> 00:17:23,720
pretty important<font color="#CCCCCC"> from my perspective is</font>

377
00:17:20,839 --> 00:17:24,859
that the the lack<font color="#E5E5E5"> of input sanitization</font>

378
00:17:23,720 --> 00:17:26,540
is still a big problem<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of</font>

379
00:17:24,859 --> 00:17:29,159
vulnerabilities that<font color="#E5E5E5"> have appeared this</font>

380
00:17:26,540 --> 00:17:34,170
year<font color="#E5E5E5"> are based on this</font>

381
00:17:29,160 --> 00:17:35,880
also it seems<font color="#CCCCCC"> that Drupal</font><font color="#E5E5E5"> it's a it's</font>

382
00:17:34,170 --> 00:17:38,700
<font color="#E5E5E5">pretty bad again with another critical</font>

383
00:17:35,880 --> 00:17:40,890
vulnerability<font color="#E5E5E5"> I'm expecting</font><font color="#CCCCCC"> that the</font>

384
00:17:38,700 --> 00:17:42,300
number<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> Drupal get</font><font color="#CCCCCC"> on run a build</font>

385
00:17:40,890 --> 00:17:45,210
<font color="#CCCCCC">are going</font><font color="#E5E5E5"> to appear from now on is going</font>

386
00:17:42,300 --> 00:17:48,750
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> bigger than episodes of young and</font>

387
00:17:45,210 --> 00:17:50,520
restless episodes<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that's it from</font>

388
00:17:48,750 --> 00:17:51,870
from me if you<font color="#CCCCCC"> want to read the full</font>

389
00:17:50,520 --> 00:17:57,230
articles you can<font color="#E5E5E5"> follow me on Twitter</font>

390
00:17:51,870 --> 00:17:57,229
<font color="#E5E5E5">and thank you for for listening to this</font>

391
00:18:02,840 --> 00:18:08,189
thank you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> Aman</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> thank you</font>

392
00:18:05,760 --> 00:18:09,990
if we have questions<font color="#CCCCCC"> I mean we sure have</font>

393
00:18:08,190 --> 00:18:12,480
questions in<font color="#E5E5E5"> the in the room</font>

394
00:18:09,990 --> 00:18:16,110
remember there are goodies<font color="#E5E5E5"> that you will</font>

395
00:18:12,480 --> 00:18:19,320
receive so be sure to raise the hand and

396
00:18:16,110 --> 00:18:24,659
can I<font color="#E5E5E5"> ask myself a question please know</font>

397
00:18:19,320 --> 00:18:27,870
it<font color="#E5E5E5"> I meant</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> goodies I don't hear</font>

398
00:18:24,660 --> 00:18:29,460
a question<font color="#CCCCCC"> any questions we</font><font color="#E5E5E5"> have a</font>

399
00:18:27,870 --> 00:18:37,959
<font color="#E5E5E5">question there in the back the</font>

400
00:18:29,460 --> 00:18:46,360
<font color="#E5E5E5">microphone please hello Stefan thanks</font>

401
00:18:37,960 --> 00:18:53,499
oh it's a it's<font color="#CCCCCC"> a little bit down it's</font>

402
00:18:46,360 --> 00:18:57,689
<font color="#E5E5E5">not on</font><font color="#CCCCCC"> but it's there I made sure we</font>

403
00:18:53,499 --> 00:18:57,690
have a hand there

404
00:19:04,830 --> 00:19:07,460
hello

405
00:19:16,560 --> 00:19:23,050
no it's a<font color="#E5E5E5"> thank you for</font><font color="#CCCCCC"> a question it's</font>

406
00:19:19,960 --> 00:19:26,080
actually the decompiler that is present

407
00:19:23,050 --> 00:19:28,690
within the<font color="#E5E5E5"> hopper disassembly tool</font><font color="#CCCCCC"> I</font>

408
00:19:26,080 --> 00:19:31,300
<font color="#E5E5E5">don't think it's as powerful as either</font>

409
00:19:28,690 --> 00:19:35,100
<font color="#E5E5E5">or</font><font color="#CCCCCC"> the one that I</font><font color="#E5E5E5"> use a hex</font><font color="#CCCCCC"> ray but it's</font>

410
00:19:31,300 --> 00:19:35,100
good enough<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this purposes</font>

411
00:19:38,310 --> 00:19:46,240
anyone else please<font color="#E5E5E5"> don't be</font><font color="#CCCCCC"> shy we have</font>

412
00:19:43,690 --> 00:19:48,520
finished a bit earlier<font color="#CCCCCC"> than the</font><font color="#E5E5E5"> schedule</font>

413
00:19:46,240 --> 00:19:51,460
so we we have more<font color="#CCCCCC"> and more time for</font><font color="#E5E5E5"> for</font>

414
00:19:48,520 --> 00:19:57,970
questions<font color="#CCCCCC"> if you want to go deeper into</font>

415
00:19:51,460 --> 00:19:59,920
<font color="#E5E5E5">the subject someone someone asked what</font>

416
00:19:57,970 --> 00:20:01,600
<font color="#E5E5E5">would be for example some</font>

417
00:19:59,920 --> 00:20:04,990
recommendations that<font color="#E5E5E5"> you would give as</font>

418
00:20:01,600 --> 00:20:06,699
<font color="#E5E5E5">countermeasures</font><font color="#CCCCCC"> I'm sorry</font><font color="#E5E5E5"> what what</font>

419
00:20:04,990 --> 00:20:13,960
would be some countermeasures<font color="#CCCCCC"> that you</font>

420
00:20:06,700 --> 00:20:15,580
would recommend recommendations for<font color="#CCCCCC"> what</font>

421
00:20:13,960 --> 00:20:17,560
<font color="#CCCCCC">exactly because</font><font color="#E5E5E5"> I don't understand</font><font color="#CCCCCC"> why</font>

422
00:20:15,580 --> 00:20:23,139
<font color="#E5E5E5">an countermeasures</font>

423
00:20:17,560 --> 00:20:28,240
<font color="#CCCCCC">oh no</font><font color="#E5E5E5"> measures okay</font><font color="#CCCCCC"> maybe three top</font>

424
00:20:23,140 --> 00:20:31,060
ideas<font color="#CCCCCC"> of course it's a it's tailored I</font>

425
00:20:28,240 --> 00:20:33,460
spend most of my time doing<font color="#E5E5E5"> looking</font>

426
00:20:31,060 --> 00:20:35,050
through through vulnerable code and

427
00:20:33,460 --> 00:20:38,650
understand how the vulnerabilities<font color="#CCCCCC"> are</font>

428
00:20:35,050 --> 00:20:41,560
built based on that<font color="#E5E5E5"> but I don't know if</font>

429
00:20:38,650 --> 00:20:45,100
you're developing C++ code I say you go

430
00:20:41,560 --> 00:20:48,639
directly to the there is<font color="#CCCCCC"> the security</font>

431
00:20:45,100 --> 00:20:51,550
book of a country<font color="#E5E5E5"> called David</font><font color="#CCCCCC"> seek word</font>

432
00:20:48,640 --> 00:20:53,320
<font color="#E5E5E5">it's a great book</font><font color="#CCCCCC"> for for understanding</font>

433
00:20:51,550 --> 00:20:55,570
how to write secure code<font color="#E5E5E5"> of course there</font>

434
00:20:53,320 --> 00:20:57,370
<font color="#CCCCCC">are also there are more books for</font><font color="#E5E5E5"> other</font>

435
00:20:55,570 --> 00:20:59,220
languages too but it's a great start to

436
00:20:57,370 --> 00:21:01,659
understand the mindset<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you have to</font>

437
00:20:59,220 --> 00:21:04,900
to<font color="#E5E5E5"> develop in order to write secure code</font>

438
00:21:01,660 --> 00:21:07,680
<font color="#E5E5E5">and it's a it's a great right it's a</font>

439
00:21:04,900 --> 00:21:10,600
<font color="#E5E5E5">great read to I recommend it with one</font>

440
00:21:07,680 --> 00:21:13,180
<font color="#CCCCCC">that would be my principal</font>

441
00:21:10,600 --> 00:21:14,860
recommendation<font color="#E5E5E5"> you just have to it's</font>

442
00:21:13,180 --> 00:21:17,620
it's the experience<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is gained with</font>

443
00:21:14,860 --> 00:21:19,840
time the attackers are getting smarter

444
00:21:17,620 --> 00:21:23,889
they are trying<font color="#E5E5E5"> to develop new means to</font>

445
00:21:19,840 --> 00:21:26,459
to attack but if you're if you're

446
00:21:23,890 --> 00:21:29,759
<font color="#E5E5E5">writing the code based on certain</font>

447
00:21:26,460 --> 00:21:31,379
guidelines and it's a very audited then

448
00:21:29,759 --> 00:21:33,350
chances<font color="#E5E5E5"> are they're not going to get</font>

449
00:21:31,379 --> 00:21:37,168
anything<font color="#E5E5E5"> from you</font>

450
00:21:33,350 --> 00:21:43,019
thank you<font color="#E5E5E5"> my was was there someone in</font>

451
00:21:37,169 --> 00:21:46,850
the right area<font color="#E5E5E5"> raising a hand no</font><font color="#CCCCCC"> okay</font>

452
00:21:43,019 --> 00:21:46,850
then<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> very much</font><font color="#E5E5E5"> thank you</font>

