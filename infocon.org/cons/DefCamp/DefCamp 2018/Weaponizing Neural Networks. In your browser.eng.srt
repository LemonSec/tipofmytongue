1
00:00:00,030 --> 00:00:04,319
hello<font color="#E5E5E5"> everybody my</font><font color="#CCCCCC"> name is Andre quota</font>

2
00:00:02,310 --> 00:00:05,609
and together<font color="#E5E5E5"> my</font><font color="#CCCCCC"> corrected Barry Boris we</font>

3
00:00:04,319 --> 00:00:08,879
are going to have a discussion regarding

4
00:00:05,609 --> 00:00:10,950
machine learning<font color="#E5E5E5"> and how we can use it</font>

5
00:00:08,880 --> 00:00:14,250
<font color="#E5E5E5">in our</font><font color="#CCCCCC"> day-to-day work for good or for</font>

6
00:00:10,950 --> 00:00:17,100
<font color="#CCCCCC">evil</font><font color="#E5E5E5"> so we are going to begin</font><font color="#CCCCCC"> with a</font>

7
00:00:14,250 --> 00:00:18,779
<font color="#CCCCCC">short disclaimer adobe invest a lot of</font>

8
00:00:17,100 --> 00:00:20,640
<font color="#E5E5E5">effort</font><font color="#CCCCCC"> in developing machine learning</font>

9
00:00:18,779 --> 00:00:23,519
algorithms that aim<font color="#E5E5E5"> at improving</font>

10
00:00:20,640 --> 00:00:25,470
<font color="#E5E5E5">customer experience however we do not</font>

11
00:00:23,519 --> 00:00:28,049
<font color="#CCCCCC">represent our employer or any of the</font>

12
00:00:25,470 --> 00:00:30,509
unknowing<font color="#E5E5E5"> projects and that's especially</font>

13
00:00:28,050 --> 00:00:33,989
because<font color="#E5E5E5"> what we were sending today is</font>

14
00:00:30,510 --> 00:00:36,079
not most the most correct<font color="#E5E5E5"> message anyway</font>

15
00:00:33,989 --> 00:00:38,820
<font color="#CCCCCC">regarding this presentation</font>

16
00:00:36,079 --> 00:00:42,930
the main question<font color="#CCCCCC"> do it trust machine</font>

17
00:00:38,820 --> 00:00:45,360
learning they don't want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> answer to</font>

18
00:00:42,930 --> 00:00:47,640
Barry<font color="#E5E5E5"> you can go ahead</font><font color="#CCCCCC"> okay so I think</font>

19
00:00:45,360 --> 00:00:49,769
we do because<font color="#E5E5E5"> every</font><font color="#CCCCCC"> day</font><font color="#E5E5E5"> we consume</font>

20
00:00:47,640 --> 00:00:54,210
technologies that are enabled by machine

21
00:00:49,770 --> 00:00:57,030
learning<font color="#E5E5E5"> so as as all of you all of you</font>

22
00:00:54,210 --> 00:00:59,550
<font color="#E5E5E5">know big online platforms use machine</font>

23
00:00:57,030 --> 00:01:01,469
learning to<font color="#E5E5E5"> create that</font><font color="#CCCCCC"> experience</font><font color="#E5E5E5"> that</font>

24
00:00:59,550 --> 00:01:04,768
we<font color="#CCCCCC"> already take</font><font color="#E5E5E5"> for granted</font><font color="#CCCCCC"> and this is</font>

25
00:01:01,469 --> 00:01:09,200
<font color="#E5E5E5">just the beginning so are you familiar</font>

26
00:01:04,769 --> 00:01:12,720
with generative models anyone anyone

27
00:01:09,200 --> 00:01:15,320
that's wait<font color="#E5E5E5"> there are a special type</font><font color="#CCCCCC"> of</font>

28
00:01:12,720 --> 00:01:20,070
machine<font color="#CCCCCC"> learning algorithm which is</font>

29
00:01:15,320 --> 00:01:21,809
designed<font color="#E5E5E5"> to produce samples so we have a</font>

30
00:01:20,070 --> 00:01:24,929
couple<font color="#E5E5E5"> of examples</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> we have</font>

31
00:01:21,810 --> 00:01:29,390
handwriting<font color="#CCCCCC"> we have audio so we also</font>

32
00:01:24,930 --> 00:01:32,939
have have you seen the deep fake videos

33
00:01:29,390 --> 00:01:36,299
that's nice<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> that's pretty</font><font color="#E5E5E5"> much the</font>

34
00:01:32,939 --> 00:01:38,070
<font color="#E5E5E5">whole deal so</font><font color="#CCCCCC"> I mention these models</font>

35
00:01:36,299 --> 00:01:42,509
<font color="#CCCCCC">because we are going to use them</font><font color="#E5E5E5"> in</font>

36
00:01:38,070 --> 00:01:44,309
today's presentation<font color="#CCCCCC"> okay so we actually</font>

37
00:01:42,509 --> 00:01:45,630
give it a lot of<font color="#E5E5E5"> thought what we want to</font>

38
00:01:44,310 --> 00:01:48,390
deliver today<font color="#E5E5E5"> through this presentation</font>

39
00:01:45,630 --> 00:01:50,640
how<font color="#CCCCCC"> complicated to</font><font color="#E5E5E5"> make it or how boring</font>

40
00:01:48,390 --> 00:01:53,610
for<font color="#E5E5E5"> that matter</font><font color="#CCCCCC"> so we actually decided</font>

41
00:01:50,640 --> 00:01:56,250
<font color="#CCCCCC">to make it pretty straightforward simple</font>

42
00:01:53,610 --> 00:01:57,930
<font color="#CCCCCC">and</font><font color="#E5E5E5"> applicable so we would like at the</font>

43
00:01:56,250 --> 00:01:59,549
<font color="#E5E5E5">end of this presentation</font><font color="#CCCCCC"> everybody in</font>

44
00:01:57,930 --> 00:02:00,040
the<font color="#E5E5E5"> room to actually</font><font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to train</font>

45
00:01:59,549 --> 00:02:01,870
their<font color="#CCCCCC"> own</font>

46
00:02:00,040 --> 00:02:04,180
neural network<font color="#CCCCCC"> for what</font><font color="#E5E5E5"> purpose</font><font color="#CCCCCC"> it's</font>

47
00:02:01,870 --> 00:02:06,220
your business<font color="#E5E5E5"> so we are going to test</font>

48
00:02:04,180 --> 00:02:08,229
some<font color="#E5E5E5"> subjects like machine</font><font color="#CCCCCC"> learning and</font>

49
00:02:06,220 --> 00:02:10,570
<font color="#E5E5E5">especially neural networks</font><font color="#CCCCCC"> we are going</font>

50
00:02:08,229 --> 00:02:12,760
to show you how<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> train a</font>

51
00:02:10,570 --> 00:02:15,519
neural network<font color="#CCCCCC"> how</font><font color="#E5E5E5"> you can execute it in</font>

52
00:02:12,760 --> 00:02:17,230
different<font color="#E5E5E5"> environments</font><font color="#CCCCCC"> and some small</font>

53
00:02:15,520 --> 00:02:20,140
chatter about<font color="#E5E5E5"> JavaScript reverse</font>

54
00:02:17,230 --> 00:02:23,920
engineering and<font color="#E5E5E5"> some anti forensic basic</font>

55
00:02:20,140 --> 00:02:25,149
concepts so before<font color="#E5E5E5"> going further with</font>

56
00:02:23,920 --> 00:02:26,980
<font color="#E5E5E5">the presentation I would just like to</font>

57
00:02:25,150 --> 00:02:29,530
mention<font color="#E5E5E5"> that this piece you</font><font color="#CCCCCC"> are actually</font>

58
00:02:26,980 --> 00:02:31,510
<font color="#CCCCCC">this idea can be translated into</font><font color="#E5E5E5"> any</font>

59
00:02:29,530 --> 00:02:35,110
programming<font color="#CCCCCC"> language that actually works</font>

60
00:02:31,510 --> 00:02:36,940
with machine learning frameworks now<font color="#E5E5E5"> and</font>

61
00:02:35,110 --> 00:02:39,720
I presume<font color="#CCCCCC"> that most</font><font color="#E5E5E5"> of them are able to</font>

62
00:02:36,940 --> 00:02:41,980
<font color="#E5E5E5">do that today but why JavaScript well</font>

63
00:02:39,720 --> 00:02:43,600
<font color="#E5E5E5">javascript is actually everywhere</font><font color="#CCCCCC"> I'm</font>

64
00:02:41,980 --> 00:02:44,980
pretty sure like most of the pages<font color="#CCCCCC"> you</font>

65
00:02:43,600 --> 00:02:46,510
<font color="#CCCCCC">are going to visit in one day they're</font>

66
00:02:44,980 --> 00:02:48,910
<font color="#E5E5E5">going to contain a JavaScript piece of</font>

67
00:02:46,510 --> 00:02:50,260
block there there is JavaScript<font color="#E5E5E5"> code</font>

68
00:02:48,910 --> 00:02:51,880
<font color="#E5E5E5">tuned in on your system there are</font>

69
00:02:50,260 --> 00:02:53,590
<font color="#E5E5E5">JavaScript files on your</font><font color="#CCCCCC"> system there</font>

70
00:02:51,880 --> 00:02:55,780
<font color="#CCCCCC">are native interpreters who actually</font><font color="#E5E5E5"> can</font>

71
00:02:53,590 --> 00:02:57,400
execute those files<font color="#E5E5E5"> and lately we</font>

72
00:02:55,780 --> 00:02:59,140
actually saw a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> desktop</font>

73
00:02:57,400 --> 00:03:01,420
applications<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> built on</font><font color="#CCCCCC"> a</font>

74
00:02:59,140 --> 00:03:02,589
<font color="#E5E5E5">JavaScript frameworks like the electron</font>

75
00:03:01,420 --> 00:03:04,450
one so I'm pretty<font color="#E5E5E5"> sure there are a</font>

76
00:03:02,590 --> 00:03:06,850
couple of<font color="#CCCCCC"> icons that</font><font color="#E5E5E5"> most of you guys</font>

77
00:03:04,450 --> 00:03:08,799
are<font color="#CCCCCC"> actually using daily</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that means</font>

78
00:03:06,850 --> 00:03:11,019
there is<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of JavaScript</font><font color="#CCCCCC"> code that</font>

79
00:03:08,800 --> 00:03:12,940
<font color="#E5E5E5">we trust and</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> might mean actually a</font>

80
00:03:11,019 --> 00:03:16,510
lot of<font color="#CCCCCC"> JavaScript</font><font color="#E5E5E5"> bad coding that you</font>

81
00:03:12,940 --> 00:03:17,920
might be able<font color="#E5E5E5"> to exploit now I'm pretty</font>

82
00:03:16,510 --> 00:03:20,140
<font color="#CCCCCC">sure everybody in the room is pretty</font>

83
00:03:17,920 --> 00:03:22,298
familiar with<font color="#E5E5E5"> most of the attack vectors</font>

84
00:03:20,140 --> 00:03:23,609
regarding<font color="#E5E5E5"> JavaScript and those are</font>

85
00:03:22,299 --> 00:03:26,260
because things like bad coding

86
00:03:23,610 --> 00:03:28,060
vulnerable servers fake services or

87
00:03:26,260 --> 00:03:29,920
third-party compromises like<font color="#E5E5E5"> we saw the</font>

88
00:03:28,060 --> 00:03:32,709
<font color="#E5E5E5">British Airways hack a couple of months</font>

89
00:03:29,920 --> 00:03:34,988
ago<font color="#CCCCCC"> but what do I attack the attackers</font>

90
00:03:32,709 --> 00:03:36,519
try to achieve through those vectors

91
00:03:34,989 --> 00:03:38,230
<font color="#E5E5E5">well they're trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do things like</font>

92
00:03:36,519 --> 00:03:41,230
recon<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> trying to get as much</font>

93
00:03:38,230 --> 00:03:42,700
information about about you they're even

94
00:03:41,230 --> 00:03:43,988
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> JavaScript pieces of</font>

95
00:03:42,700 --> 00:03:46,540
function<font color="#E5E5E5"> to scan your internal network</font>

96
00:03:43,989 --> 00:03:49,120
<font color="#CCCCCC">and send the data back</font><font color="#E5E5E5"> or maybe they</font>

97
00:03:46,540 --> 00:03:51,790
just try<font color="#E5E5E5"> to hijack your resources and do</font>

98
00:03:49,120 --> 00:03:53,650
mining<font color="#CCCCCC"> click-fraud</font><font color="#E5E5E5"> maybe sometimes just</font>

99
00:03:51,790 --> 00:03:56,010
drop a little<font color="#CCCCCC"> bit of a mullah</font><font color="#E5E5E5"> on your</font>

100
00:03:53,650 --> 00:03:58,750
system or why not

101
00:03:56,010 --> 00:04:00,880
exploit your vulnerable web browser and

102
00:03:58,750 --> 00:04:03,340
around<font color="#E5E5E5"> unbeautiful shellcode</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> but</font>

103
00:04:00,880 --> 00:04:05,950
what<font color="#CCCCCC"> to most of those pieces</font><font color="#E5E5E5"> of code are</font>

104
00:04:03,340 --> 00:04:08,380
<font color="#CCCCCC">have in common well most</font><font color="#E5E5E5"> likely</font><font color="#CCCCCC"> they're</font>

105
00:04:05,950 --> 00:04:10,869
off you skated<font color="#E5E5E5"> confiscation is not</font>

106
00:04:08,380 --> 00:04:12,400
necessarily something<font color="#E5E5E5"> bad lots of</font>

107
00:04:10,870 --> 00:04:13,480
developer use it and<font color="#E5E5E5"> that's because</font><font color="#CCCCCC"> you</font>

108
00:04:12,400 --> 00:04:15,819
<font color="#CCCCCC">basically when you</font><font color="#E5E5E5"> V</font>

109
00:04:13,480 --> 00:04:17,529
the page you're going<font color="#E5E5E5"> to download the</font>

110
00:04:15,819 --> 00:04:19,298
content<font color="#E5E5E5"> locally</font><font color="#CCCCCC"> so that means you're</font>

111
00:04:17,529 --> 00:04:22,000
going to<font color="#CCCCCC"> have clear text</font><font color="#E5E5E5"> access to the</font>

112
00:04:19,298 --> 00:04:24,039
entire code there<font color="#E5E5E5"> so developers are</font>

113
00:04:22,000 --> 00:04:25,780
<font color="#E5E5E5">going to try to</font><font color="#CCCCCC"> copyright protect their</font>

114
00:04:24,040 --> 00:04:27,250
code by office<font color="#E5E5E5"> occasions so that means</font>

115
00:04:25,780 --> 00:04:28,510
messing up with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> variables</font><font color="#E5E5E5"> missing</font>

116
00:04:27,250 --> 00:04:30,520
capital logic messing up with<font color="#E5E5E5"> the</font>

117
00:04:28,510 --> 00:04:34,030
strings they're trying to<font color="#E5E5E5"> make make this</font>

118
00:04:30,520 --> 00:04:36,940
as<font color="#CCCCCC"> are readable</font><font color="#E5E5E5"> as possible but that's</font>

119
00:04:34,030 --> 00:04:39,429
still statically probable<font color="#E5E5E5"> probably you</font>

120
00:04:36,940 --> 00:04:41,169
<font color="#CCCCCC">are going to be able to</font><font color="#E5E5E5"> revert it</font><font color="#CCCCCC"> to not</font>

121
00:04:39,430 --> 00:04:42,639
necessary to<font color="#E5E5E5"> do so to its original code</font>

122
00:04:41,169 --> 00:04:44,680
because<font color="#CCCCCC"> you can never</font><font color="#E5E5E5"> know how that</font>

123
00:04:42,639 --> 00:04:46,479
<font color="#E5E5E5">variable should be named but you can</font>

124
00:04:44,680 --> 00:04:49,479
have an<font color="#CCCCCC"> understanding what what that</font>

125
00:04:46,479 --> 00:04:51,669
code can be<font color="#E5E5E5"> it's doing there now</font>

126
00:04:49,479 --> 00:04:53,949
<font color="#E5E5E5">attackers are trying to do basically the</font>

127
00:04:51,669 --> 00:04:55,859
<font color="#CCCCCC">same thing not</font><font color="#E5E5E5"> necessarily because they</font>

128
00:04:53,949 --> 00:04:58,210
have<font color="#E5E5E5"> concern regarding copyright</font>

129
00:04:55,860 --> 00:05:00,310
protecting but they're trying to<font color="#E5E5E5"> plain</font>

130
00:04:58,210 --> 00:05:02,469
to blend in they're<font color="#CCCCCC"> trying to hide their</font>

131
00:05:00,310 --> 00:05:03,970
<font color="#CCCCCC">presence or their intentions</font><font color="#E5E5E5"> there so</font>

132
00:05:02,470 --> 00:05:05,850
what we<font color="#E5E5E5"> are trying</font><font color="#CCCCCC"> to do today is</font>

133
00:05:03,970 --> 00:05:08,520
actually<font color="#E5E5E5"> taking one step further and</font>

134
00:05:05,850 --> 00:05:11,350
demonstrate<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> hide</font>

135
00:05:08,520 --> 00:05:13,510
code malicious code for that<font color="#E5E5E5"> matter in</font>

136
00:05:11,350 --> 00:05:15,460
neural network and there is no

137
00:05:13,510 --> 00:05:18,550
<font color="#CCCCCC">mathematical way to actually</font><font color="#E5E5E5"> revert the</font>

138
00:05:15,460 --> 00:05:19,750
code back<font color="#E5E5E5"> and also we are</font><font color="#CCCCCC"> going to you</font>

139
00:05:18,550 --> 00:05:21,880
<font color="#E5E5E5">actually are going</font><font color="#CCCCCC"> to see that's</font><font color="#E5E5E5"> pretty</font>

140
00:05:19,750 --> 00:05:27,010
hard to<font color="#E5E5E5"> do even dynamically debug that</font>

141
00:05:21,880 --> 00:05:29,289
code<font color="#E5E5E5"> even in a debugger so because we</font>

142
00:05:27,010 --> 00:05:31,180
<font color="#E5E5E5">are dealing with machine learning we</font>

143
00:05:29,289 --> 00:05:32,409
want<font color="#CCCCCC"> to raise the</font><font color="#E5E5E5"> attention to one</font>

144
00:05:31,180 --> 00:05:34,900
<font color="#E5E5E5">question which we have in mind for</font>

145
00:05:32,410 --> 00:05:36,669
<font color="#E5E5E5">today's presentation that is machine</font>

146
00:05:34,900 --> 00:05:37,599
<font color="#CCCCCC">learning</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> about encoding</font><font color="#E5E5E5"> encryption or</font>

147
00:05:36,669 --> 00:05:39,669
<font color="#E5E5E5">compression of data</font>

148
00:05:37,599 --> 00:05:43,960
so basically everything<font color="#E5E5E5"> will orbit</font>

149
00:05:39,669 --> 00:05:46,030
around<font color="#E5E5E5"> that in what follows so there are</font>

150
00:05:43,960 --> 00:05:48,130
many recipes<font color="#E5E5E5"> for</font><font color="#CCCCCC"> being generative models</font>

151
00:05:46,030 --> 00:05:49,869
<font color="#CCCCCC">I mean you can train a field for a</font>

152
00:05:48,130 --> 00:05:51,700
<font color="#E5E5E5">neural network in a certain way to</font><font color="#CCCCCC"> make</font>

153
00:05:49,870 --> 00:05:53,590
<font color="#E5E5E5">it generate samples you can use</font>

154
00:05:51,700 --> 00:05:55,120
convolutional neural networks<font color="#CCCCCC"> or you can</font>

155
00:05:53,590 --> 00:05:57,159
use recurrent neural networks which are

156
00:05:55,120 --> 00:06:00,220
<font color="#E5E5E5">my personal favorite so on the left side</font>

157
00:05:57,160 --> 00:06:02,260
<font color="#E5E5E5">that is a schematic of a basic building</font>

158
00:06:00,220 --> 00:06:05,080
<font color="#E5E5E5">block</font><font color="#CCCCCC"> of which is called a long</font>

159
00:06:02,260 --> 00:06:07,150
short-term memory<font color="#E5E5E5"> Network</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> designed</font>

160
00:06:05,080 --> 00:06:09,460
<font color="#CCCCCC">for a special type of</font><font color="#E5E5E5"> network and the</font>

161
00:06:07,150 --> 00:06:13,030
thing about it it<font color="#E5E5E5"> that it learns what it</font>

162
00:06:09,460 --> 00:06:15,969
<font color="#E5E5E5">needs to remember so it's a type</font><font color="#CCCCCC"> of kind</font>

163
00:06:13,030 --> 00:06:17,679
<font color="#E5E5E5">of a fuzzy memory which is controlled by</font>

164
00:06:15,970 --> 00:06:20,320
a couple of<font color="#E5E5E5"> gates</font><font color="#CCCCCC"> so we have the input</font>

165
00:06:17,680 --> 00:06:22,450
<font color="#E5E5E5">gate or what it</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> remember the update</font>

166
00:06:20,320 --> 00:06:25,180
gate or what it needs to<font color="#E5E5E5"> when in is</font>

167
00:06:22,450 --> 00:06:26,800
remember the forget gate<font color="#E5E5E5"> what it needs</font>

168
00:06:25,180 --> 00:06:29,110
<font color="#E5E5E5">to forget and also the output gate</font>

169
00:06:26,800 --> 00:06:34,090
which stands<font color="#CCCCCC"> for what it will let others</font>

170
00:06:29,110 --> 00:06:36,879
know<font color="#E5E5E5"> it remembers so we actually use</font>

171
00:06:34,090 --> 00:06:37,840
this<font color="#E5E5E5"> network by overfitting it's on what</font>

172
00:06:36,879 --> 00:06:39,789
is overfitting

173
00:06:37,840 --> 00:06:41,619
well<font color="#E5E5E5"> machine learning algorithms like</font>

174
00:06:39,789 --> 00:06:45,580
lots of data so they can<font color="#E5E5E5"> extract</font>

175
00:06:41,620 --> 00:06:47,650
<font color="#E5E5E5">patterns</font><font color="#CCCCCC"> from it but imagine that</font><font color="#E5E5E5"> you</font>

176
00:06:45,580 --> 00:06:50,349
have a really<font color="#CCCCCC"> train a</font><font color="#E5E5E5"> really small</font>

177
00:06:47,650 --> 00:06:52,419
training<font color="#CCCCCC"> set and</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> network that</font>

178
00:06:50,349 --> 00:06:54,009
<font color="#E5E5E5">supposed to label images</font><font color="#CCCCCC"> and you show</font><font color="#E5E5E5"> it</font>

179
00:06:52,419 --> 00:06:56,318
<font color="#CCCCCC">okay this</font><font color="#E5E5E5"> is a cat is another cat is</font>

180
00:06:54,009 --> 00:06:58,599
<font color="#E5E5E5">also a cat on a cat when you show it a</font>

181
00:06:56,319 --> 00:07:01,620
different picture<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the office maybe</font>

182
00:06:58,599 --> 00:07:04,210
it will actually<font color="#E5E5E5"> choose to see cats so</font>

183
00:07:01,620 --> 00:07:06,159
this is one definition<font color="#E5E5E5"> what of what</font>

184
00:07:04,210 --> 00:07:07,568
overfitting means<font color="#CCCCCC"> the other one is that</font>

185
00:07:06,159 --> 00:07:09,219
<font color="#E5E5E5">the</font><font color="#CCCCCC"> network is able to perfectly</font>

186
00:07:07,569 --> 00:07:11,349
reproduce the training set<font color="#CCCCCC"> but it</font>

187
00:07:09,220 --> 00:07:15,849
generalizes really poorly<font color="#E5E5E5"> and we are</font>

188
00:07:11,349 --> 00:07:17,800
actually counting<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> there are</font>

189
00:07:15,849 --> 00:07:20,860
plenty of machine learning frameworks

190
00:07:17,800 --> 00:07:24,250
out there you can see a whole bunch<font color="#E5E5E5"> of</font>

191
00:07:20,860 --> 00:07:25,780
them which we quickly googled we use

192
00:07:24,250 --> 00:07:28,330
brain juice which is<font color="#CCCCCC"> an awesome platform</font>

193
00:07:25,780 --> 00:07:31,710
<font color="#CCCCCC">but actually it</font><font color="#E5E5E5"> was around random choice</font>

194
00:07:28,330 --> 00:07:34,659
for us because it worked at that moment

195
00:07:31,710 --> 00:07:37,090
<font color="#CCCCCC">ok so now let us combine our favorite</font>

196
00:07:34,659 --> 00:07:38,740
technologies<font color="#E5E5E5"> the JavaScript machine</font>

197
00:07:37,090 --> 00:07:42,279
learning in HTML<font color="#CCCCCC"> and see what we</font>

198
00:07:38,740 --> 00:07:43,990
<font color="#CCCCCC">actually can achieve but before that</font><font color="#E5E5E5"> I'm</font>

199
00:07:42,279 --> 00:07:45,699
pretty sure this equation you heard a

200
00:07:43,990 --> 00:07:47,409
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> times in</font><font color="#CCCCCC"> movies or at work or</font>

201
00:07:45,699 --> 00:07:49,419
when your<font color="#E5E5E5"> bosses are just asking</font><font color="#CCCCCC"> you</font>

202
00:07:47,409 --> 00:07:52,180
<font color="#CCCCCC">something but</font><font color="#E5E5E5"> anyway what is the</font>

203
00:07:49,419 --> 00:07:53,409
<font color="#E5E5E5">definition of insanity so if you do a</font>

204
00:07:52,180 --> 00:07:55,330
<font color="#E5E5E5">Google search</font><font color="#CCCCCC"> for that you're going</font><font color="#E5E5E5"> to</font>

205
00:07:53,409 --> 00:07:57,370
<font color="#E5E5E5">see that the definition</font><font color="#CCCCCC"> is doing the</font>

206
00:07:55,330 --> 00:07:59,080
same<font color="#CCCCCC"> thing over and over again and</font>

207
00:07:57,370 --> 00:08:00,729
expecting different results<font color="#CCCCCC"> and that's</font>

208
00:07:59,080 --> 00:08:02,318
not what<font color="#E5E5E5"> actually we are going to do</font>

209
00:08:00,729 --> 00:08:04,479
today<font color="#E5E5E5"> we're going to have run the same</font>

210
00:08:02,319 --> 00:08:07,029
<font color="#E5E5E5">POC four times but we are going to have</font>

211
00:08:04,479 --> 00:08:09,460
<font color="#E5E5E5">different results now there is a catch</font>

212
00:08:07,029 --> 00:08:10,599
and<font color="#CCCCCC"> we're lying here a little</font><font color="#E5E5E5"> even</font>

213
00:08:09,460 --> 00:08:13,029
though<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> actually the same JavaScript</font>

214
00:08:10,599 --> 00:08:14,409
<font color="#CCCCCC">code the neural network is different so</font>

215
00:08:13,029 --> 00:08:15,880
<font color="#E5E5E5">the things we are</font><font color="#CCCCCC"> going to put in</font><font color="#E5E5E5"> our</font>

216
00:08:14,409 --> 00:08:18,159
neural<font color="#CCCCCC"> network</font><font color="#E5E5E5"> are different and are</font>

217
00:08:15,880 --> 00:08:21,669
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> going to execute</font><font color="#CCCCCC"> different stuff</font>

218
00:08:18,159 --> 00:08:23,590
<font color="#E5E5E5">so</font><font color="#CCCCCC"> let's get with the first demo and</font>

219
00:08:21,669 --> 00:08:25,990
this<font color="#E5E5E5"> is the most important one why is it</font>

220
00:08:23,590 --> 00:08:27,580
important it's<font color="#E5E5E5"> because is the full code</font>

221
00:08:25,990 --> 00:08:31,569
that you need in actually to train a

222
00:08:27,580 --> 00:08:34,419
neural network<font color="#E5E5E5"> for for our case so let's</font>

223
00:08:31,569 --> 00:08:35,860
dig into it<font color="#E5E5E5"> now people already mentioned</font>

224
00:08:34,419 --> 00:08:37,728
<font color="#CCCCCC">that we are</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> use the brain</font><font color="#E5E5E5"> JS</font>

225
00:08:35,860 --> 00:08:40,159
library for this

226
00:08:37,729 --> 00:08:41,959
the bridge is a really cool<font color="#E5E5E5"> library and</font>

227
00:08:40,159 --> 00:08:43,968
they have an awesome<font color="#CCCCCC"> grid page for this</font>

228
00:08:41,958 --> 00:08:45,649
<font color="#E5E5E5">and if you go to their get page you're</font>

229
00:08:43,969 --> 00:08:48,260
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> see a couple</font><font color="#E5E5E5"> of really really</font>

230
00:08:45,649 --> 00:08:49,790
<font color="#E5E5E5">nice example so do you totally need to</font>

231
00:08:48,260 --> 00:08:51,740
know machine<font color="#E5E5E5"> learning</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> order to use</font>

232
00:08:49,790 --> 00:08:53,569
their<font color="#CCCCCC"> toolkit they have examples for</font>

233
00:08:51,740 --> 00:08:55,910
<font color="#E5E5E5">that</font><font color="#CCCCCC"> so in our case you are actually</font>

234
00:08:53,570 --> 00:08:58,940
going to download<font color="#E5E5E5"> locally the library</font>

235
00:08:55,910 --> 00:09:00,170
and we<font color="#E5E5E5"> are going to load it from there</font>

236
00:08:58,940 --> 00:09:02,899
<font color="#CCCCCC">and that's</font><font color="#E5E5E5"> how we're actually going</font><font color="#CCCCCC"> to</font>

237
00:09:00,170 --> 00:09:04,729
<font color="#CCCCCC">use this framework</font><font color="#E5E5E5"> now in order to train</font>

238
00:09:02,899 --> 00:09:06,620
<font color="#E5E5E5">a neural network or</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> machine learning</font>

239
00:09:04,730 --> 00:09:08,060
<font color="#E5E5E5">object for</font><font color="#CCCCCC"> that matter</font><font color="#E5E5E5"> you need three</font>

240
00:09:06,620 --> 00:09:10,699
elements<font color="#E5E5E5"> you need the machine learning</font>

241
00:09:08,060 --> 00:09:13,790
object you need a training function and

242
00:09:10,699 --> 00:09:16,189
you need<font color="#E5E5E5"> training data so in our case</font>

243
00:09:13,790 --> 00:09:17,810
that<font color="#CCCCCC"> is the training</font><font color="#E5E5E5"> data and</font><font color="#CCCCCC"> tip</font>

244
00:09:16,190 --> 00:09:21,290
<font color="#E5E5E5">already mentioned that machine</font><font color="#CCCCCC"> learning</font>

245
00:09:17,810 --> 00:09:22,819
really like patterns<font color="#E5E5E5"> like a tape they</font>

246
00:09:21,290 --> 00:09:24,290
don't want to<font color="#E5E5E5"> reproduce they want to</font>

247
00:09:22,820 --> 00:09:26,209
learn<font color="#E5E5E5"> stuff and they want to do as</font><font color="#CCCCCC"> best</font>

248
00:09:24,290 --> 00:09:28,010
as<font color="#CCCCCC"> they can in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> for that they need</font>

249
00:09:26,209 --> 00:09:29,839
<font color="#E5E5E5">lots and lots of data</font><font color="#CCCCCC"> if we're</font><font color="#E5E5E5"> speaking</font>

250
00:09:28,010 --> 00:09:32,600
about<font color="#E5E5E5"> neural</font><font color="#CCCCCC"> networks we</font><font color="#E5E5E5"> may actually</font>

251
00:09:29,839 --> 00:09:37,699
<font color="#E5E5E5">need millions of entries there well in</font>

252
00:09:32,600 --> 00:09:39,470
our<font color="#E5E5E5"> case we have</font><font color="#CCCCCC"> just one entry which is</font>

253
00:09:37,699 --> 00:09:42,410
pretty simple<font color="#E5E5E5"> and let's take a look at</font>

254
00:09:39,470 --> 00:09:44,389
it we<font color="#E5E5E5"> have two keys inside</font><font color="#CCCCCC"> the Maori</font>

255
00:09:42,410 --> 00:09:46,339
entry we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> input and output so input</font>

256
00:09:44,389 --> 00:09:48,019
<font color="#E5E5E5">means what I'm going to fit a neural</font>

257
00:09:46,339 --> 00:09:49,639
network<font color="#CCCCCC"> and output</font><font color="#E5E5E5"> means what I'm</font>

258
00:09:48,019 --> 00:09:52,819
expecting<font color="#CCCCCC"> the neural network to respond</font>

259
00:09:49,639 --> 00:09:54,529
with in our case there is no pattern

260
00:09:52,819 --> 00:09:56,269
because the<font color="#E5E5E5"> things let's be honest we</font>

261
00:09:54,529 --> 00:09:58,899
have a string which is<font color="#CCCCCC"> one and we</font><font color="#E5E5E5"> have a</font>

262
00:09:56,269 --> 00:10:01,459
huge<font color="#E5E5E5"> string which</font><font color="#CCCCCC"> is apparently</font>

263
00:09:58,899 --> 00:10:03,139
<font color="#E5E5E5">JavaScript so there is no way our neural</font>

264
00:10:01,459 --> 00:10:05,239
network<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to be able to learn any</font>

265
00:10:03,139 --> 00:10:08,000
pattern from this<font color="#CCCCCC"> small amount</font><font color="#E5E5E5"> of code</font>

266
00:10:05,240 --> 00:10:10,490
so as<font color="#CCCCCC"> I mentioned next</font><font color="#E5E5E5"> we need the</font>

267
00:10:08,000 --> 00:10:12,620
machine learning object and we're going

268
00:10:10,490 --> 00:10:14,000
to<font color="#E5E5E5"> create that by using the brain</font><font color="#CCCCCC"> Jay</font>

269
00:10:12,620 --> 00:10:16,639
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> we're going to create a neural</font>

270
00:10:14,000 --> 00:10:19,040
<font color="#E5E5E5">network and it's actual riser and lsdm</font>

271
00:10:16,639 --> 00:10:20,480
kind of network and then we<font color="#CCCCCC"> are going to</font>

272
00:10:19,040 --> 00:10:21,769
train the neural<font color="#CCCCCC"> networking we're going</font>

273
00:10:20,480 --> 00:10:23,839
<font color="#E5E5E5">to do that by using the built-in</font>

274
00:10:21,769 --> 00:10:26,180
training function that<font color="#CCCCCC"> the brain Chase</font>

275
00:10:23,839 --> 00:10:28,069
has so the training<font color="#CCCCCC"> function requires</font>

276
00:10:26,180 --> 00:10:29,750
two input parameters it requires the

277
00:10:28,069 --> 00:10:31,910
training<font color="#E5E5E5"> data which we recover</font><font color="#CCCCCC"> and</font>

278
00:10:29,750 --> 00:10:34,069
requires the number of<font color="#E5E5E5"> iteration that</font>

279
00:10:31,910 --> 00:10:35,930
means how many<font color="#E5E5E5"> times should the training</font>

280
00:10:34,069 --> 00:10:37,880
function<font color="#CCCCCC"> go through the data until it's</font>

281
00:10:35,930 --> 00:10:40,430
going to learn whatever<font color="#E5E5E5"> it has to learn</font>

282
00:10:37,880 --> 00:10:42,769
<font color="#E5E5E5">so in our case having a really small</font>

283
00:10:40,430 --> 00:10:44,239
amount<font color="#E5E5E5"> of training data</font><font color="#CCCCCC"> and lots and</font>

284
00:10:42,769 --> 00:10:45,829
<font color="#E5E5E5">lots</font><font color="#CCCCCC"> of iteration</font><font color="#E5E5E5"> that's actually going</font>

285
00:10:44,240 --> 00:10:48,740
to<font color="#E5E5E5"> achieve overfitting which the</font><font color="#CCCCCC"> bettor</font>

286
00:10:45,829 --> 00:10:49,779
<font color="#E5E5E5">already</font><font color="#CCCCCC"> mention now for our code here</font>

287
00:10:48,740 --> 00:10:52,749
we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use the</font>

288
00:10:49,779 --> 00:10:55,240
<font color="#CCCCCC">built-in</font><font color="#E5E5E5"> script function to</font><font color="#CCCCCC"> JSON and</font>

289
00:10:52,749 --> 00:10:57,310
<font color="#E5E5E5">we're going to convert the just</font>

290
00:10:55,240 --> 00:10:59,439
generated neural network<font color="#E5E5E5"> into a JSON</font>

291
00:10:57,310 --> 00:11:01,268
configuration and then we're going<font color="#CCCCCC"> to</font>

292
00:10:59,439 --> 00:11:03,579
write it<font color="#CCCCCC"> to disk so we can move it in</font>

293
00:11:01,269 --> 00:11:05,370
<font color="#E5E5E5">another place and</font><font color="#CCCCCC"> in order to</font><font color="#E5E5E5"> run the</font>

294
00:11:03,579 --> 00:11:07,540
neural network you actually need a

295
00:11:05,370 --> 00:11:10,470
function that's<font color="#CCCCCC"> going to do that in</font><font color="#E5E5E5"> our</font>

296
00:11:07,540 --> 00:11:12,998
case the function<font color="#E5E5E5"> is called run it's</font>

297
00:11:10,470 --> 00:11:14,980
pretty<font color="#CCCCCC"> straightforward</font><font color="#E5E5E5"> and run takes as</font>

298
00:11:12,999 --> 00:11:17,350
a input parameter the input that<font color="#CCCCCC"> you are</font>

299
00:11:14,980 --> 00:11:21,100
going<font color="#CCCCCC"> to fit a neural network so in our</font>

300
00:11:17,350 --> 00:11:23,139
<font color="#E5E5E5">case we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> will the training data</font>

301
00:11:21,100 --> 00:11:24,819
contains the input<font color="#E5E5E5"> 1 so the neural</font>

302
00:11:23,139 --> 00:11:26,769
network should perfectly reproduce that

303
00:11:24,819 --> 00:11:28,269
output<font color="#E5E5E5"> but if you are going to</font><font color="#CCCCCC"> enter</font>

304
00:11:26,769 --> 00:11:30,370
something<font color="#E5E5E5"> different something it hasn't</font>

305
00:11:28,269 --> 00:11:32,680
learned is going to generate total

306
00:11:30,370 --> 00:11:34,720
gibberish because it thinks it<font color="#E5E5E5"> learn a</font>

307
00:11:32,680 --> 00:11:36,638
pattern<font color="#E5E5E5"> but has no idea what is</font><font color="#CCCCCC"> going to</font>

308
00:11:34,720 --> 00:11:38,290
<font color="#E5E5E5">do there</font><font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> still going</font><font color="#CCCCCC"> to generate</font>

309
00:11:36,639 --> 00:11:40,899
<font color="#CCCCCC">something but most likely tatting is not</font>

310
00:11:38,290 --> 00:11:43,389
<font color="#E5E5E5">going to execute anyway in the meanwhile</font>

311
00:11:40,899 --> 00:11:46,779
you<font color="#E5E5E5"> we</font><font color="#CCCCCC"> actually trained our neural</font>

312
00:11:43,389 --> 00:11:50,410
<font color="#CCCCCC">network and if you're going</font><font color="#E5E5E5"> to take</font><font color="#CCCCCC"> a</font>

313
00:11:46,779 --> 00:11:52,930
look<font color="#E5E5E5"> there were</font><font color="#CCCCCC"> 1000 execution and it</font>

314
00:11:50,410 --> 00:11:55,540
<font color="#E5E5E5">perfectly</font><font color="#CCCCCC"> produce my input</font><font color="#E5E5E5"> now just a</font>

315
00:11:52,930 --> 00:11:58,239
second to look at the string we<font color="#CCCCCC"> have</font>

316
00:11:55,540 --> 00:12:00,160
there so it's a<font color="#E5E5E5"> JavaScript piece of</font>

317
00:11:58,240 --> 00:12:02,079
string<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> declaring a function called</font>

318
00:12:00,160 --> 00:12:03,790
<font color="#CCCCCC">jabo because that's how a great</font>

319
00:12:02,079 --> 00:12:06,969
programmer I am and all my friends<font color="#CCCCCC"> know</font>

320
00:12:03,790 --> 00:12:08,259
how I like<font color="#CCCCCC"> to name my variables</font><font color="#E5E5E5"> and in</font>

321
00:12:06,970 --> 00:12:11,139
the function I'm declaring a variable

322
00:12:08,259 --> 00:12:12,550
<font color="#CCCCCC">core PR</font><font color="#E5E5E5"> I'm pretty sure PR style for</font>

323
00:12:11,139 --> 00:12:14,500
browser initially when I thought<font color="#CCCCCC"> of this</font>

324
00:12:12,550 --> 00:12:17,139
and it's getting<font color="#CCCCCC"> an information from the</font>

325
00:12:14,500 --> 00:12:18,639
<font color="#CCCCCC">navigator</font><font color="#E5E5E5"> and after that it's a calling</font>

326
00:12:17,139 --> 00:12:22,480
and a lot<font color="#CCCCCC"> of function that</font><font color="#E5E5E5"> should make a</font>

327
00:12:18,639 --> 00:12:26,949
<font color="#E5E5E5">pop up and tell</font><font color="#CCCCCC"> me you are using</font><font color="#E5E5E5"> PR so</font>

328
00:12:22,480 --> 00:12:29,230
pretty simple<font color="#CCCCCC"> is</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> ok so if</font><font color="#E5E5E5"> we actually</font>

329
00:12:26,949 --> 00:12:32,439
look of what the network has stored on

330
00:12:29,230 --> 00:12:34,629
disk<font color="#CCCCCC"> you'll see that we have a couple of</font>

331
00:12:32,439 --> 00:12:36,370
hyper parameters which describe the

332
00:12:34,629 --> 00:12:39,459
<font color="#E5E5E5">network such</font><font color="#CCCCCC"> as the hidden layer sizes</font>

333
00:12:36,370 --> 00:12:41,500
the input size the output size some<font color="#E5E5E5"> I</font>

334
00:12:39,459 --> 00:12:43,420
<font color="#E5E5E5">mean</font><font color="#CCCCCC"> luggage which we can</font><font color="#E5E5E5"> throw</font><font color="#CCCCCC"> away</font>

335
00:12:41,500 --> 00:12:45,279
such as the learning<font color="#E5E5E5"> rate on which the</font>

336
00:12:43,420 --> 00:12:50,800
<font color="#CCCCCC">network was trained on the</font><font color="#E5E5E5"> decay clip</font>

337
00:12:45,279 --> 00:12:54,250
rate and so on<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have one second</font><font color="#CCCCCC"> yeah</font>

338
00:12:50,800 --> 00:12:58,510
my<font color="#E5E5E5"> pet I forgot to</font><font color="#CCCCCC"> preserve key</font>

339
00:12:54,250 --> 00:13:00,850
so we are<font color="#E5E5E5"> going to have Dictionary of</font>

340
00:12:58,510 --> 00:13:03,010
<font color="#E5E5E5">symbols which</font><font color="#CCCCCC"> I use to translate from</font>

341
00:13:00,850 --> 00:13:06,520
<font color="#E5E5E5">the</font><font color="#CCCCCC"> network's output to whatever our</font>

342
00:13:03,010 --> 00:13:10,540
data looks<font color="#CCCCCC"> like right here on the on the</font>

343
00:13:06,520 --> 00:13:12,310
bottom<font color="#CCCCCC"> size of the screen</font><font color="#E5E5E5"> there are the</font>

344
00:13:10,540 --> 00:13:13,719
typical characters in the English

345
00:13:12,310 --> 00:13:15,449
alphabet<font color="#CCCCCC"> past a couple of social</font>

346
00:13:13,720 --> 00:13:18,430
<font color="#E5E5E5">characters which are used</font><font color="#CCCCCC"> by the</font>

347
00:13:15,450 --> 00:13:20,380
JavaScript functions<font color="#CCCCCC"> and we also have</font>

348
00:13:18,430 --> 00:13:23,109
the weights which make the magic happen

349
00:13:20,380 --> 00:13:25,600
<font color="#CCCCCC">so these weights are used by the gates</font>

350
00:13:23,110 --> 00:13:27,310
themselves<font color="#CCCCCC"> which is on the previous the</font>

351
00:13:25,600 --> 00:13:29,470
previous slide and they are used to

352
00:13:27,310 --> 00:13:30,939
<font color="#E5E5E5">project or transform the input data into</font>

353
00:13:29,470 --> 00:13:34,720
something<font color="#E5E5E5"> the network can actually use</font>

354
00:13:30,940 --> 00:13:35,830
so they are trained they<font color="#E5E5E5"> are computed</font>

355
00:13:34,720 --> 00:13:37,900
using something called<font color="#CCCCCC"> complex</font>

356
00:13:35,830 --> 00:13:40,960
<font color="#CCCCCC">optimization or back propagation will</font>

357
00:13:37,900 --> 00:13:42,340
give you in<font color="#E5E5E5"> this end and I don't think</font>

358
00:13:40,960 --> 00:13:45,370
there is<font color="#E5E5E5"> any way of actually telling</font>

359
00:13:42,340 --> 00:13:46,990
from the photo the weights look what the

360
00:13:45,370 --> 00:13:51,730
network has actually learned or<font color="#CCCCCC"> what is</font>

361
00:13:46,990 --> 00:13:53,260
it going<font color="#E5E5E5"> to do okay so I promise you</font>

362
00:13:51,730 --> 00:13:55,630
<font color="#E5E5E5">that we're going</font><font color="#CCCCCC"> to execute</font><font color="#E5E5E5"> this from</font>

363
00:13:53,260 --> 00:13:58,210
the browser<font color="#CCCCCC"> so let's</font><font color="#E5E5E5"> have a built our</font>

364
00:13:55,630 --> 00:14:00,580
HTML script<font color="#E5E5E5"> we again we are going to</font>

365
00:13:58,210 --> 00:14:01,900
<font color="#E5E5E5">need a machine learning library</font><font color="#CCCCCC"> and this</font>

366
00:14:00,580 --> 00:14:03,400
time we're not going<font color="#CCCCCC"> to take</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> from the</font>

367
00:14:01,900 --> 00:14:05,470
local DS we're actually going directly

368
00:14:03,400 --> 00:14:06,640
to their git repository which I

369
00:14:05,470 --> 00:14:09,310
mentioned already it's pretty awesome

370
00:14:06,640 --> 00:14:11,140
<font color="#E5E5E5">and we're going to dynamically load it</font>

371
00:14:09,310 --> 00:14:13,479
from<font color="#E5E5E5"> there</font><font color="#CCCCCC"> so everything it's on the fly</font>

372
00:14:11,140 --> 00:14:15,430
right after that<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find a</font>

373
00:14:13,480 --> 00:14:16,900
variable that<font color="#E5E5E5"> and our the variable it's</font>

374
00:14:15,430 --> 00:14:18,670
actually going<font color="#E5E5E5"> to contain that huge</font>

375
00:14:16,900 --> 00:14:20,350
string with the<font color="#CCCCCC"> Burridge's display that</font>

376
00:14:18,670 --> 00:14:23,560
contains some information<font color="#CCCCCC"> regarding the</font>

377
00:14:20,350 --> 00:14:27,580
network the character table and all the

378
00:14:23,560 --> 00:14:29,469
<font color="#CCCCCC">floating numbers</font><font color="#E5E5E5"> all the weights so</font><font color="#CCCCCC"> next</font>

379
00:14:27,580 --> 00:14:31,570
as before<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to define a</font>

380
00:14:29,470 --> 00:14:33,640
machine learning<font color="#E5E5E5"> object and we're going</font>

381
00:14:31,570 --> 00:14:35,410
<font color="#E5E5E5">to use the</font><font color="#CCCCCC"> privileges library for that</font>

382
00:14:33,640 --> 00:14:37,330
and then instead<font color="#E5E5E5"> of training</font><font color="#CCCCCC"> the neural</font>

383
00:14:35,410 --> 00:14:39,400
network we're going to take this huge

384
00:14:37,330 --> 00:14:41,620
string there which is Acrobat JSON and

385
00:14:39,400 --> 00:14:43,660
<font color="#E5E5E5">we're going to put it</font><font color="#CCCCCC"> inside the machine</font>

386
00:14:41,620 --> 00:14:45,310
learning object we just created in the

387
00:14:43,660 --> 00:14:46,959
<font color="#E5E5E5">end we're going to execute the neural</font>

388
00:14:45,310 --> 00:14:49,569
network as<font color="#CCCCCC"> we've done</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> using</font><font color="#E5E5E5"> the</font>

389
00:14:46,960 --> 00:14:51,360
round<font color="#CCCCCC"> function and after</font><font color="#E5E5E5"> that we're</font>

390
00:14:49,570 --> 00:14:54,070
going to<font color="#E5E5E5"> use an eval to actually execute</font>

391
00:14:51,360 --> 00:14:56,290
<font color="#E5E5E5">output and see what is this so can</font>

392
00:14:54,070 --> 00:14:58,210
anybody tell me<font color="#CCCCCC"> what's</font><font color="#E5E5E5"> wrong with this</font>

393
00:14:56,290 --> 00:15:00,400
HTML page like what's definitely

394
00:14:58,210 --> 00:15:03,610
triggering your spider sense of security

395
00:15:00,400 --> 00:15:05,709
awareness<font color="#CCCCCC"> you're by searchers</font><font color="#E5E5E5"> type so</font>

396
00:15:03,610 --> 00:15:07,630
eval<font color="#E5E5E5"> everybody knows that ever has been</font>

397
00:15:05,710 --> 00:15:07,970
<font color="#E5E5E5">miss</font><font color="#CCCCCC"> abuse so many times in achieving</font>

398
00:15:07,630 --> 00:15:10,670
the

399
00:15:07,970 --> 00:15:12,620
malicious stuff<font color="#E5E5E5"> but just as a take we</font>

400
00:15:10,670 --> 00:15:14,180
bear in mind that<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are quite a</font>

401
00:15:12,620 --> 00:15:16,009
<font color="#E5E5E5">couple of other functions that are doing</font>

402
00:15:14,180 --> 00:15:18,888
<font color="#E5E5E5">basically the same thing maybe not as</font>

403
00:15:16,009 --> 00:15:19,970
easy<font color="#E5E5E5"> to implement</font><font color="#CCCCCC"> as eval but in in the</font>

404
00:15:18,889 --> 00:15:24,079
end are going<font color="#CCCCCC"> to achieve the same</font><font color="#E5E5E5"> thing</font>

405
00:15:19,970 --> 00:15:26,660
<font color="#CCCCCC">dynamic code execution in the page so we</font>

406
00:15:24,079 --> 00:15:29,089
just create<font color="#CCCCCC"> our page it's pretty simple</font>

407
00:15:26,660 --> 00:15:30,620
<font color="#E5E5E5">we are going</font><font color="#CCCCCC"> to execute it and as you</font>

408
00:15:29,089 --> 00:15:33,230
<font color="#CCCCCC">guys expect we're going to</font><font color="#E5E5E5"> have an alert</font>

409
00:15:30,620 --> 00:15:34,670
that's going to tell me to use<font color="#CCCCCC"> Mozilla</font>

410
00:15:33,230 --> 00:15:36,589
<font color="#E5E5E5">even though I'm actually using a</font><font color="#CCCCCC"> chrome</font>

411
00:15:34,670 --> 00:15:41,060
page what<font color="#CCCCCC"> we'll go we'll come</font><font color="#E5E5E5"> back to</font>

412
00:15:36,589 --> 00:15:43,550
that so let's go in front further and

413
00:15:41,060 --> 00:15:46,489
maybe<font color="#E5E5E5"> enhance our network</font><font color="#CCCCCC"> we with by</font>

414
00:15:43,550 --> 00:15:48,769
writing<font color="#E5E5E5"> some more code</font><font color="#CCCCCC"> this time what</font>

415
00:15:46,490 --> 00:15:51,769
we're going to do we are going<font color="#CCCCCC"> to make</font>

416
00:15:48,769 --> 00:15:54,410
the network respond in some way when it

417
00:15:51,769 --> 00:15:56,180
sees one<font color="#E5E5E5"> input and in a different way</font>

418
00:15:54,410 --> 00:15:57,949
when we see when it sees a different

419
00:15:56,180 --> 00:16:02,029
input so this<font color="#E5E5E5"> is a really good method of</font>

420
00:15:57,949 --> 00:16:04,399
<font color="#E5E5E5">actually hiding behavior because it's</font>

421
00:16:02,029 --> 00:16:06,860
<font color="#E5E5E5">it's called conditioning</font><font color="#CCCCCC"> I don't know if</font>

422
00:16:04,399 --> 00:16:08,449
that's relevant<font color="#E5E5E5"> for for now so in the</font>

423
00:16:06,860 --> 00:16:10,069
first<font color="#E5E5E5"> the first part of the code we</font>

424
00:16:08,449 --> 00:16:12,378
actually<font color="#CCCCCC"> set the same variable which is</font>

425
00:16:10,069 --> 00:16:15,529
browser with<font color="#CCCCCC"> the application code name</font>

426
00:16:12,379 --> 00:16:18,649
and<font color="#E5E5E5"> we also load on URL which is with</font>

427
00:16:15,529 --> 00:16:21,860
which point on<font color="#E5E5E5"> endpoint</font><font color="#CCCCCC"> that displays</font>

428
00:16:18,649 --> 00:16:23,930
the<font color="#E5E5E5"> public IP address of the client also</font>

429
00:16:21,860 --> 00:16:25,579
<font color="#CCCCCC">in the first code we launch the</font>

430
00:16:23,930 --> 00:16:27,680
execution of the network again<font color="#CCCCCC"> to</font>

431
00:16:25,579 --> 00:16:29,540
<font color="#E5E5E5">generate the second code which then</font>

432
00:16:27,680 --> 00:16:32,000
<font color="#E5E5E5">makes</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> function which will actually</font>

433
00:16:29,540 --> 00:16:33,860
<font color="#CCCCCC">call</font><font color="#E5E5E5"> will make the request</font><font color="#CCCCCC"> and display a</font>

434
00:16:32,000 --> 00:16:35,779
<font color="#CCCCCC">message and because they are</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the same</font>

435
00:16:33,860 --> 00:16:37,339
dome well actually have access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

436
00:16:35,779 --> 00:16:46,579
<font color="#E5E5E5">same variables which we described which</font>

437
00:16:37,339 --> 00:16:50,209
we defined in<font color="#E5E5E5"> the first execution</font><font color="#CCCCCC"> oh we</font>

438
00:16:46,579 --> 00:16:54,050
<font color="#E5E5E5">are going to run it and any minute now</font>

439
00:16:50,209 --> 00:16:58,128
<font color="#E5E5E5">we are running it</font><font color="#CCCCCC"> we have a personal</font>

440
00:16:54,050 --> 00:17:00,378
public<font color="#CCCCCC"> IP address so and if you're</font><font color="#E5E5E5"> going</font>

441
00:16:58,129 --> 00:17:02,449
to<font color="#E5E5E5"> look at the source code of the page</font>

442
00:17:00,379 --> 00:17:04,429
<font color="#E5E5E5">which is basically the same code just a</font>

443
00:17:02,449 --> 00:17:08,599
different machine<font color="#CCCCCC"> learning object with a</font>

444
00:17:04,429 --> 00:17:10,699
lot of<font color="#E5E5E5"> float numbers anyway so we saw</font>

445
00:17:08,599 --> 00:17:12,740
that<font color="#CCCCCC"> we actually we can add more code to</font>

446
00:17:10,699 --> 00:17:14,990
<font color="#CCCCCC">our neural network and don't have to</font>

447
00:17:12,740 --> 00:17:17,560
change our HTML page because we<font color="#CCCCCC"> made a</font>

448
00:17:14,990 --> 00:17:18,970
network call itself<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> end of</font>

449
00:17:17,560 --> 00:17:22,409
<font color="#CCCCCC">at the end of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> execution of the</font><font color="#E5E5E5"> first</font>

450
00:17:18,970 --> 00:17:25,240
line so we have<font color="#E5E5E5"> random</font><font color="#CCCCCC"> Cochin</font><font color="#E5E5E5"> array</font>

451
00:17:22,410 --> 00:17:26,770
execution we have get<font color="#CCCCCC"> request let us</font>

452
00:17:25,240 --> 00:17:28,600
actually<font color="#E5E5E5"> add a post request so you can</font>

453
00:17:26,770 --> 00:17:32,740
actually move<font color="#E5E5E5"> towards a</font><font color="#CCCCCC"> more malicious</font>

454
00:17:28,600 --> 00:17:34,389
<font color="#E5E5E5">spectrum so in our case the most</font>

455
00:17:32,740 --> 00:17:36,160
interesting part of<font color="#E5E5E5"> this code</font><font color="#CCCCCC"> is</font>

456
00:17:34,390 --> 00:17:38,080
<font color="#CCCCCC">actually the last input the input called</font>

457
00:17:36,160 --> 00:17:40,630
post so that's the key I am going to

458
00:17:38,080 --> 00:17:42,370
execute<font color="#CCCCCC"> the neural network with and the</font>

459
00:17:40,630 --> 00:17:44,890
output if you look at it it's<font color="#CCCCCC"> actually a</font>

460
00:17:42,370 --> 00:17:47,139
function it's called send<font color="#E5E5E5"> data so I'm</font>

461
00:17:44,890 --> 00:17:49,090
<font color="#E5E5E5">not the most clever attacker ever but</font><font color="#CCCCCC"> my</font>

462
00:17:47,140 --> 00:17:51,520
send data function is<font color="#E5E5E5"> actually going to</font>

463
00:17:49,090 --> 00:17:52,780
make a post request<font color="#E5E5E5"> or the random IP</font>

464
00:17:51,520 --> 00:17:55,480
which I<font color="#E5E5E5"> just killed last night</font>

465
00:17:52,780 --> 00:17:58,810
<font color="#CCCCCC">and it's</font><font color="#E5E5E5"> going to send the content of</font>

466
00:17:55,480 --> 00:18:01,300
the variable data to that I to that IP

467
00:17:58,810 --> 00:18:04,030
<font color="#E5E5E5">now the cool part</font><font color="#CCCCCC"> is if you look at my</font>

468
00:18:01,300 --> 00:18:05,680
first input<font color="#E5E5E5"> there at the I'm starting</font>

469
00:18:04,030 --> 00:18:08,050
the execution of<font color="#E5E5E5"> the neural network</font><font color="#CCCCCC"> with</font>

470
00:18:05,680 --> 00:18:10,270
<font color="#E5E5E5">making another eval to the last part of</font>

471
00:18:08,050 --> 00:18:12,460
code<font color="#E5E5E5"> so I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> exit when I'm going</font>

472
00:18:10,270 --> 00:18:15,610
to execute<font color="#E5E5E5"> this part of the code this</font>

473
00:18:12,460 --> 00:18:17,080
<font color="#E5E5E5">function is going to be locally</font>

474
00:18:15,610 --> 00:18:18,729
accessible in the<font color="#E5E5E5"> middle of the browser</font>

475
00:18:17,080 --> 00:18:20,800
so I don't have to call<font color="#CCCCCC"> then</font><font color="#E5E5E5"> your letter</font>

476
00:18:18,730 --> 00:18:23,440
again and again and again<font color="#E5E5E5"> I just load it</font>

477
00:18:20,800 --> 00:18:26,310
<font color="#E5E5E5">a piece of code in the memory which I</font>

478
00:18:23,440 --> 00:18:29,410
can reuse<font color="#E5E5E5"> so let us go</font><font color="#CCCCCC"> through the data</font>

479
00:18:26,310 --> 00:18:31,480
it's basically the<font color="#E5E5E5"> same data as before</font>

480
00:18:29,410 --> 00:18:33,430
<font color="#E5E5E5">as I said I'm</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to load a function</font>

481
00:18:31,480 --> 00:18:36,310
send<font color="#CCCCCC"> data</font><font color="#E5E5E5"> by calling the neural network</font>

482
00:18:33,430 --> 00:18:38,410
<font color="#E5E5E5">again the magic URL and we're going</font><font color="#CCCCCC"> to</font>

483
00:18:36,310 --> 00:18:40,360
make a jump from the first branch to<font color="#CCCCCC"> the</font>

484
00:18:38,410 --> 00:18:43,090
second<font color="#E5E5E5"> branch remember in the HTML page</font>

485
00:18:40,360 --> 00:18:45,969
that's just<font color="#CCCCCC"> one eval function</font><font color="#E5E5E5"> now going</font>

486
00:18:43,090 --> 00:18:48,879
the second input<font color="#E5E5E5"> I'm going to have my</font>

487
00:18:45,970 --> 00:18:50,410
<font color="#E5E5E5">favorite variable again PR and then I'm</font>

488
00:18:48,880 --> 00:18:52,060
going<font color="#CCCCCC"> to call the sin theta function</font>

489
00:18:50,410 --> 00:18:54,040
which I just<font color="#E5E5E5"> declared in the first input</font>

490
00:18:52,060 --> 00:18:56,350
<font color="#E5E5E5">and after that I'm going</font><font color="#CCCCCC"> to do the same</font>

491
00:18:54,040 --> 00:18:58,870
exact<font color="#CCCCCC"> yueshen set</font><font color="#E5E5E5"> before so my page is</font>

492
00:18:56,350 --> 00:19:08,199
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> behave exactly</font><font color="#E5E5E5"> the same as we</font>

493
00:18:58,870 --> 00:19:12,479
saw<font color="#E5E5E5"> before I'm sorry</font><font color="#CCCCCC"> it's under funny</font>

494
00:19:08,200 --> 00:19:14,890
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> I'm missing one slide</font><font color="#E5E5E5"> anyway</font>

495
00:19:12,480 --> 00:19:16,390
now let us<font color="#CCCCCC"> actually look</font><font color="#E5E5E5"> at the c2</font>

496
00:19:14,890 --> 00:19:20,200
server because apparently<font color="#E5E5E5"> this is still</font>

497
00:19:16,390 --> 00:19:22,630
here so my civil service is<font color="#CCCCCC"> actually a</font>

498
00:19:20,200 --> 00:19:24,340
PHP page<font color="#E5E5E5"> and I'm going</font><font color="#CCCCCC"> to listen</font><font color="#E5E5E5"> for all</font>

499
00:19:22,630 --> 00:19:26,350
the connections so when the machine

500
00:19:24,340 --> 00:19:28,000
<font color="#CCCCCC">learning algorithm is</font><font color="#E5E5E5"> going to call it</font>

501
00:19:26,350 --> 00:19:29,320
is going<font color="#CCCCCC"> to send a request</font><font color="#E5E5E5"> here and the</font>

502
00:19:28,000 --> 00:19:30,429
page<font color="#E5E5E5"> is pretty</font><font color="#CCCCCC"> simple</font><font color="#E5E5E5"> it's just going to</font>

503
00:19:29,320 --> 00:19:33,668
write the<font color="#E5E5E5"> content of the</font>

504
00:19:30,429 --> 00:19:36,730
file to file so in our case this<font color="#CCCCCC"> is the</font>

505
00:19:33,669 --> 00:19:38,019
file and<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to execute Network</font>

506
00:19:36,730 --> 00:19:39,820
and voila

507
00:19:38,019 --> 00:19:43,299
I just<font color="#CCCCCC"> received that beautiful PR</font>

508
00:19:39,820 --> 00:19:47,168
<font color="#CCCCCC">variable Mozilla to</font><font color="#E5E5E5"> my code here so it's</font>

509
00:19:43,299 --> 00:19:49,149
pretty simple<font color="#E5E5E5"> so basically in order to</font>

510
00:19:47,169 --> 00:19:51,789
<font color="#E5E5E5">get a better picture</font><font color="#CCCCCC"> of what the code</font>

511
00:19:49,149 --> 00:19:54,039
<font color="#E5E5E5">does in this type</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> scenarios a good</font>

512
00:19:51,789 --> 00:19:56,919
idea is<font color="#CCCCCC"> to debug the code so we can do</font>

513
00:19:54,039 --> 00:19:59,169
<font color="#E5E5E5">that really easily by opening the chrome</font>

514
00:19:56,919 --> 00:20:00,700
developer console<font color="#CCCCCC"> and we are going to</font>

515
00:19:59,169 --> 00:20:01,960
set<font color="#CCCCCC"> to</font><font color="#E5E5E5"> breakpoints one before the</font>

516
00:20:00,700 --> 00:20:04,149
<font color="#CCCCCC">execution of the network another one</font>

517
00:20:01,960 --> 00:20:05,860
<font color="#E5E5E5">after the section of the network to</font>

518
00:20:04,149 --> 00:20:08,049
actually<font color="#E5E5E5"> look a</font><font color="#CCCCCC"> little bit of how the</font>

519
00:20:05,860 --> 00:20:14,820
memory looks how the variables are set

520
00:20:08,049 --> 00:20:24,100
and so on so wait<font color="#CCCCCC"> for breakpoints</font><font color="#E5E5E5"> a</font>

521
00:20:14,820 --> 00:20:26,049
<font color="#CCCCCC">console.log run it</font><font color="#E5E5E5"> okay so right now we</font>

522
00:20:24,100 --> 00:20:28,090
<font color="#CCCCCC">only have</font><font color="#E5E5E5"> except from the standard</font>

523
00:20:26,049 --> 00:20:30,789
variables we only have one object<font color="#CCCCCC"> in</font>

524
00:20:28,090 --> 00:20:32,619
memory which is<font color="#E5E5E5"> the network itself is</font>

525
00:20:30,789 --> 00:20:34,658
the<font color="#CCCCCC"> last TM we defined earlier it has</font>

526
00:20:32,619 --> 00:20:36,220
some<font color="#E5E5E5"> its parameters its weight and so on</font>

527
00:20:34,659 --> 00:20:40,809
<font color="#E5E5E5">and we're going</font><font color="#CCCCCC"> to jump off the</font>

528
00:20:36,220 --> 00:20:43,919
execution and<font color="#E5E5E5"> now we're going to get</font>

529
00:20:40,809 --> 00:20:48,610
more variables here such as<font color="#E5E5E5"> the browser</font>

530
00:20:43,919 --> 00:20:52,059
the URL which gets the public<font color="#CCCCCC"> IP</font><font color="#E5E5E5"> address</font>

531
00:20:48,610 --> 00:20:55,689
and of course the send data function

532
00:20:52,059 --> 00:20:58,090
which we defined earlier so these are a

533
00:20:55,690 --> 00:21:02,080
lot of artifacts<font color="#E5E5E5"> which we created</font><font color="#CCCCCC"> just</font>

534
00:20:58,090 --> 00:21:04,509
by<font color="#E5E5E5"> launching the network so again if we</font>

535
00:21:02,080 --> 00:21:06,070
<font color="#E5E5E5">go to the network</font><font color="#CCCCCC"> tab</font><font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to see</font>

536
00:21:04,509 --> 00:21:07,629
<font color="#CCCCCC">all the</font><font color="#E5E5E5"> requests made</font><font color="#CCCCCC"> so it loaded</font><font color="#E5E5E5"> some</font>

537
00:21:06,070 --> 00:21:10,689
pretty standard<font color="#CCCCCC"> stuff such as</font><font color="#E5E5E5"> the HTML</font>

538
00:21:07,629 --> 00:21:13,418
<font color="#CCCCCC">itself the browser component for the</font>

539
00:21:10,690 --> 00:21:16,749
machinery library jQuery<font color="#E5E5E5"> it also made a</font>

540
00:21:13,419 --> 00:21:20,080
call<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the public IP address endpoint</font>

541
00:21:16,749 --> 00:21:22,659
<font color="#E5E5E5">and the funny thing</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that it made a</font>

542
00:21:20,080 --> 00:21:25,389
post to some weird-looking<font color="#E5E5E5"> IP address</font>

543
00:21:22,659 --> 00:21:27,159
which is<font color="#E5E5E5"> written in clear we also can</font>

544
00:21:25,389 --> 00:21:30,219
<font color="#CCCCCC">look</font><font color="#E5E5E5"> at the post data and</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> see that</font>

545
00:21:27,159 --> 00:21:34,629
<font color="#E5E5E5">the payload was Mozilla so yeah that</font>

546
00:21:30,220 --> 00:21:37,210
<font color="#E5E5E5">that's a lot of things to work on so now</font>

547
00:21:34,629 --> 00:21:38,769
we<font color="#CCCCCC"> actually can see</font><font color="#E5E5E5"> the page and when we</font>

548
00:21:37,210 --> 00:21:41,080
execute<font color="#CCCCCC"> it</font><font color="#E5E5E5"> out we saw</font><font color="#CCCCCC"> before it's</font>

549
00:21:38,769 --> 00:21:41,849
actually<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> return</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> beautiful</font>

550
00:21:41,080 --> 00:21:44,039
alert

551
00:21:41,849 --> 00:21:46,109
that's<font color="#E5E5E5"> telling my IP but in the meantime</font>

552
00:21:44,039 --> 00:21:50,399
it's actually made also connection to my

553
00:21:46,109 --> 00:21:52,168
third party<font color="#E5E5E5"> I Peter so as we saw the</font>

554
00:21:50,399 --> 00:21:54,149
simple execution<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that piece of code</font>

555
00:21:52,169 --> 00:21:57,570
actually<font color="#E5E5E5"> generated quite a lot of fart</font>

556
00:21:54,149 --> 00:22:00,238
effects so maybe too many artifacts

557
00:21:57,570 --> 00:22:01,950
maybe it's<font color="#E5E5E5"> not an investigator doesn't</font>

558
00:22:00,239 --> 00:22:03,659
<font color="#E5E5E5">need</font><font color="#CCCCCC"> anymore to deepen the code</font><font color="#E5E5E5"> because</font>

559
00:22:01,950 --> 00:22:05,249
he's going<font color="#CCCCCC"> to understand</font><font color="#E5E5E5"> was there and</font>

560
00:22:03,659 --> 00:22:07,200
let's be honest<font color="#E5E5E5"> a sin theta function</font>

561
00:22:05,249 --> 00:22:10,679
it's always something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> trigger</font>

562
00:22:07,200 --> 00:22:12,419
attention so<font color="#E5E5E5"> listing what we</font><font color="#CCCCCC"> actually</font>

563
00:22:10,679 --> 00:22:15,539
can do for code to make it better<font color="#E5E5E5"> to</font>

564
00:22:12,419 --> 00:22:17,039
make<font color="#E5E5E5"> it</font><font color="#CCCCCC"> attract attention so maybe we</font>

565
00:22:15,539 --> 00:22:19,408
could implement<font color="#E5E5E5"> some based coding</font>

566
00:22:17,039 --> 00:22:20,669
practices there and the last<font color="#E5E5E5"> corner on a</font>

567
00:22:19,409 --> 00:22:22,229
<font color="#E5E5E5">tour is going to make it's actually</font>

568
00:22:20,669 --> 00:22:24,419
going to unset or delete all the

569
00:22:22,229 --> 00:22:26,299
variables which we<font color="#CCCCCC"> should do regular</font>

570
00:22:24,419 --> 00:22:28,739
<font color="#CCCCCC">base is</font><font color="#E5E5E5"> not only for this code and</font>

571
00:22:26,299 --> 00:22:32,279
instead<font color="#E5E5E5"> of sending data to that public</font>

572
00:22:28,739 --> 00:22:34,320
strange IP were strange domain<font color="#E5E5E5"> maybe can</font>

573
00:22:32,279 --> 00:22:35,669
<font color="#CCCCCC">we</font><font color="#E5E5E5"> some cover channels so maybe there is</font>

574
00:22:34,320 --> 00:22:37,229
a way we can<font color="#CCCCCC"> actually leverage</font><font color="#E5E5E5"> some</font>

575
00:22:35,669 --> 00:22:40,079
cover<font color="#E5E5E5"> channels directly from the neural</font>

576
00:22:37,229 --> 00:22:42,299
network<font color="#CCCCCC"> and the last thing</font><font color="#E5E5E5"> you have to</font>

577
00:22:40,079 --> 00:22:44,759
<font color="#E5E5E5">be intelligent</font><font color="#CCCCCC"> I mean you can add as</font>

578
00:22:42,299 --> 00:22:45,779
much code as<font color="#CCCCCC"> you want it's your decision</font>

579
00:22:44,759 --> 00:22:47,849
how we're going<font color="#E5E5E5"> to make all the</font>

580
00:22:45,779 --> 00:22:49,589
transition between the<font color="#CCCCCC"> branches and how</font>

581
00:22:47,849 --> 00:22:51,059
you can hide your code so<font color="#E5E5E5"> now just think</font>

582
00:22:49,589 --> 00:22:53,759
of<font color="#E5E5E5"> a couple of</font><font color="#CCCCCC"> examples</font><font color="#E5E5E5"> we can actually</font>

583
00:22:51,059 --> 00:22:54,959
<font color="#E5E5E5">learn your neural</font><font color="#CCCCCC"> network with</font><font color="#E5E5E5"> 100 lines</font>

584
00:22:53,759 --> 00:22:58,169
of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> and make four different</font>

585
00:22:54,959 --> 00:23:00,059
executing execution branches<font color="#E5E5E5"> so when an</font>

586
00:22:58,169 --> 00:23:02,369
<font color="#E5E5E5">investigator is going</font><font color="#CCCCCC"> to look he</font><font color="#E5E5E5"> will</font>

587
00:23:00,059 --> 00:23:03,809
never know exactly<font color="#CCCCCC"> the full code as</font>

588
00:23:02,369 --> 00:23:05,218
there he will<font color="#CCCCCC"> have no way actually of</font>

589
00:23:03,809 --> 00:23:06,779
reverting the<font color="#E5E5E5"> code he's going to</font>

590
00:23:05,219 --> 00:23:09,779
investigate one branch<font color="#E5E5E5"> and one branch</font>

591
00:23:06,779 --> 00:23:13,169
only<font color="#E5E5E5"> or maybe a practical example take</font>

592
00:23:09,779 --> 00:23:14,669
<font color="#CCCCCC">ten user agents browser user agent put</font>

593
00:23:13,169 --> 00:23:17,190
<font color="#CCCCCC">it</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> machine learning</font><font color="#E5E5E5"> in a neural</font>

594
00:23:14,669 --> 00:23:19,379
network<font color="#E5E5E5"> and make the neural network to</font>

595
00:23:17,190 --> 00:23:22,289
generic malicious code<font color="#E5E5E5"> only</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> one of</font>

596
00:23:19,379 --> 00:23:23,849
them so it's going to<font color="#E5E5E5"> be really hard</font><font color="#CCCCCC"> for</font>

597
00:23:22,289 --> 00:23:26,190
the investigator to<font color="#E5E5E5"> actually determine</font>

598
00:23:23,849 --> 00:23:28,019
<font color="#CCCCCC">which what is the machine learning</font><font color="#E5E5E5"> doing</font>

599
00:23:26,190 --> 00:23:30,239
what is the neural<font color="#E5E5E5"> network</font><font color="#CCCCCC"> going to put</font>

600
00:23:28,019 --> 00:23:31,679
there if<font color="#E5E5E5"> he's not going</font><font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> put</font>

601
00:23:30,239 --> 00:23:33,599
for the neural<font color="#E5E5E5"> network with all known</font>

602
00:23:31,679 --> 00:23:35,369
user agent and<font color="#CCCCCC"> here he will</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

603
00:23:33,599 --> 00:23:36,718
one<font color="#E5E5E5"> that's actually going to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the</font>

604
00:23:35,369 --> 00:23:40,399
malicious code and maybe that's<font color="#E5E5E5"> the way</font>

605
00:23:36,719 --> 00:23:43,499
you can<font color="#CCCCCC"> actually exploit a</font><font color="#E5E5E5"> browser now</font>

606
00:23:40,399 --> 00:23:45,359
<font color="#CCCCCC">last</font><font color="#E5E5E5"> POC so this is my slack room and as</font>

607
00:23:43,499 --> 00:23:48,209
you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see here I'm pretty lonely</font><font color="#E5E5E5"> it</font>

608
00:23:45,359 --> 00:23:50,039
time I only have a<font color="#E5E5E5"> path there that will</font>

609
00:23:48,209 --> 00:23:51,419
give<font color="#CCCCCC"> me a company so I'm going to</font><font color="#E5E5E5"> make a</font>

610
00:23:50,039 --> 00:23:53,069
neural<font color="#E5E5E5"> network that are actually going</font>

611
00:23:51,419 --> 00:23:55,440
to<font color="#E5E5E5"> resolve that problem for me and my</font>

612
00:23:53,069 --> 00:23:58,080
<font color="#CCCCCC">pron leanness issues</font><font color="#E5E5E5"> so I'm going to</font>

613
00:23:55,440 --> 00:23:59,460
will execute the page and this time I'm

614
00:23:58,080 --> 00:24:01,110
going to<font color="#E5E5E5"> have an alert with my user</font>

615
00:23:59,460 --> 00:24:03,779
<font color="#E5E5E5">agent so</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> took it to the</font><font color="#CCCCCC"> next level</font>

616
00:24:01,110 --> 00:24:05,279
there<font color="#E5E5E5"> and if I'm going back in slack</font><font color="#CCCCCC"> oh</font>

617
00:24:03,779 --> 00:24:07,289
<font color="#E5E5E5">well guess what</font>

618
00:24:05,279 --> 00:24:09,389
my browser just<font color="#CCCCCC"> hit me a slack message</font>

619
00:24:07,289 --> 00:24:11,100
<font color="#CCCCCC">via the</font><font color="#E5E5E5"> user agent like reasons like a</font>

620
00:24:09,389 --> 00:24:14,158
great tool like<font color="#E5E5E5"> you can do so many stuff</font>

621
00:24:11,100 --> 00:24:16,408
with it I personally<font color="#E5E5E5"> love it so let us</font>

622
00:24:14,159 --> 00:24:18,929
now take exactly<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same approach whoo</font>

623
00:24:16,409 --> 00:24:21,750
<font color="#E5E5E5">that ability to look at this</font><font color="#CCCCCC"> specific</font>

624
00:24:18,929 --> 00:24:23,070
neural network again so we're going to

625
00:24:21,750 --> 00:24:27,950
press f12<font color="#E5E5E5"> and use the chrome debugger</font>

626
00:24:23,070 --> 00:24:31,620
<font color="#E5E5E5">which is an awesome</font><font color="#CCCCCC"> tool after if I said</font>

627
00:24:27,950 --> 00:24:33,629
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so going at the source going to set</font>

628
00:24:31,620 --> 00:24:35,250
the breakpoints again<font color="#CCCCCC"> before and</font><font color="#E5E5E5"> after</font>

629
00:24:33,629 --> 00:24:37,168
the execution of<font color="#E5E5E5"> the neural</font><font color="#CCCCCC"> network</font>

630
00:24:35,250 --> 00:24:38,820
<font color="#E5E5E5">we're going to execute the neural</font>

631
00:24:37,169 --> 00:24:40,980
network and you're going to see we're

632
00:24:38,820 --> 00:24:43,529
basically going<font color="#CCCCCC"> to have the same</font>

633
00:24:40,980 --> 00:24:45,299
variables<font color="#E5E5E5"> there like like the</font><font color="#CCCCCC"> previous</font>

634
00:24:43,529 --> 00:24:47,250
<font color="#E5E5E5">time the only variable we actually have</font>

635
00:24:45,299 --> 00:24:49,860
<font color="#CCCCCC">defined is the L which is actually a</font>

636
00:24:47,250 --> 00:24:53,129
<font color="#CCCCCC">machine learning</font><font color="#E5E5E5"> object now let us</font>

637
00:24:49,860 --> 00:24:54,629
execute<font color="#E5E5E5"> the page the alert and you're</font>

638
00:24:53,129 --> 00:24:57,840
going<font color="#CCCCCC"> to see now that we</font><font color="#E5E5E5"> actually have a</font>

639
00:24:54,629 --> 00:24:59,490
lot<font color="#CCCCCC"> of variables</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> no we have</font><font color="#E5E5E5"> only</font>

640
00:24:57,840 --> 00:25:01,500
one<font color="#E5E5E5"> variable that was created this time</font>

641
00:24:59,490 --> 00:25:03,659
<font color="#CCCCCC">it's the same</font><font color="#E5E5E5"> data function which this</font>

642
00:25:01,500 --> 00:25:05,309
time is<font color="#CCCCCC"> undefined</font><font color="#E5E5E5"> so you have no idea of</font>

643
00:25:03,659 --> 00:25:08,370
<font color="#E5E5E5">the content of</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> the same data</font>

644
00:25:05,309 --> 00:25:09,960
function is doing there<font color="#E5E5E5"> maybe I could</font>

645
00:25:08,370 --> 00:25:12,049
have them<font color="#CCCCCC"> in other words maybe I could</font>

646
00:25:09,960 --> 00:25:14,850
have<font color="#CCCCCC"> the emitter login as development or</font>

647
00:25:12,049 --> 00:25:17,220
recommended so it having been even more

648
00:25:14,850 --> 00:25:19,168
office<font color="#CCCCCC"> cated but that's the cool part</font>

649
00:25:17,220 --> 00:25:21,179
like the last call I did in my<font color="#E5E5E5"> new role</font>

650
00:25:19,169 --> 00:25:22,799
network was actually to delete or unset

651
00:25:21,179 --> 00:25:24,899
<font color="#E5E5E5">all the variables so in dynamic</font>

652
00:25:22,799 --> 00:25:28,019
<font color="#CCCCCC">execution</font><font color="#E5E5E5"> after</font><font color="#CCCCCC"> the executing of the</font>

653
00:25:24,899 --> 00:25:29,639
neural net you're not going<font color="#E5E5E5"> to see okay</font>

654
00:25:28,019 --> 00:25:32,100
let's<font color="#E5E5E5"> go</font><font color="#CCCCCC"> to the network tab</font><font color="#E5E5E5"> and this</font>

655
00:25:29,639 --> 00:25:33,508
time we<font color="#E5E5E5"> have the same things like</font>

656
00:25:32,100 --> 00:25:35,399
<font color="#E5E5E5">logging the page</font><font color="#CCCCCC"> routing the machine</font>

657
00:25:33,509 --> 00:25:37,169
learning<font color="#CCCCCC"> library jQuery because use the</font>

658
00:25:35,399 --> 00:25:39,600
for the post and<font color="#E5E5E5"> this interesting</font><font color="#CCCCCC"> post</font>

659
00:25:37,169 --> 00:25:44,279
here that<font color="#CCCCCC"> we have toward</font><font color="#E5E5E5"> slack so I just</font>

660
00:25:39,600 --> 00:25:46,709
<font color="#E5E5E5">leverage slack to send a message or</font><font color="#CCCCCC"> a</font>

661
00:25:44,279 --> 00:25:49,139
<font color="#CCCCCC">random message</font><font color="#E5E5E5"> from my browser to</font><font color="#CCCCCC"> my</font>

662
00:25:46,710 --> 00:25:50,460
channel<font color="#E5E5E5"> by slack infrastructure so</font>

663
00:25:49,139 --> 00:25:52,529
should<font color="#E5E5E5"> I ask you how many of you guys</font>

664
00:25:50,460 --> 00:25:55,289
actually<font color="#E5E5E5"> are black listings like in our</font>

665
00:25:52,529 --> 00:25:58,169
infrastructure<font color="#CCCCCC"> I know we aren't</font><font color="#E5E5E5"> we're</font>

666
00:25:55,289 --> 00:25:59,730
using grow in the daily basis<font color="#E5E5E5"> so this is</font>

667
00:25:58,169 --> 00:26:01,980
<font color="#E5E5E5">really nice</font><font color="#CCCCCC"> like that's what I</font><font color="#E5E5E5"> mean by</font>

668
00:25:59,730 --> 00:26:03,869
cover channels using<font color="#E5E5E5"> some totally legit</font>

669
00:26:01,980 --> 00:26:06,419
infrastructure like slack to send<font color="#E5E5E5"> the</font>

670
00:26:03,869 --> 00:26:07,870
data there<font color="#E5E5E5"> and the cool part there what</font>

671
00:26:06,419 --> 00:26:10,230
I really like regarding the

672
00:26:07,870 --> 00:26:13,149
the chrome debugger is the fact that

673
00:26:10,230 --> 00:26:15,550
everything is clear text my tokens my

674
00:26:13,150 --> 00:26:18,010
<font color="#E5E5E5">other my headers my everything and</font>

675
00:26:15,550 --> 00:26:20,260
that's because<font color="#E5E5E5"> chrome actually runs the</font>

676
00:26:18,010 --> 00:26:22,540
debugger in<font color="#CCCCCC"> Chrome runs at a level</font><font color="#E5E5E5"> seven</font>

677
00:26:20,260 --> 00:26:24,520
<font color="#CCCCCC">you know SOC model or level develop with</font>

678
00:26:22,540 --> 00:26:26,290
<font color="#CCCCCC">Kiesha from a tcp/ip point of view so</font>

679
00:26:24,520 --> 00:26:28,540
<font color="#CCCCCC">that means I'm going to display the</font>

680
00:26:26,290 --> 00:26:30,070
entire<font color="#E5E5E5"> content in</font><font color="#CCCCCC"> clear text</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> this</font>

681
00:26:28,540 --> 00:26:33,040
<font color="#E5E5E5">actually encrypted and sent over the</font>

682
00:26:30,070 --> 00:26:34,330
<font color="#CCCCCC">wire and Wireshark sorry and chrome</font><font color="#E5E5E5"> is</font>

683
00:26:33,040 --> 00:26:36,129
actually<font color="#CCCCCC"> a really powerful</font><font color="#E5E5E5"> tool from</font>

684
00:26:34,330 --> 00:26:37,810
<font color="#E5E5E5">this point of view and if you think of</font>

685
00:26:36,130 --> 00:26:39,130
wire shock you cannot do<font color="#CCCCCC"> that in a wire</font>

686
00:26:37,810 --> 00:26:40,810
<font color="#CCCCCC">shocky</font><font color="#E5E5E5"> everything is going to be</font>

687
00:26:39,130 --> 00:26:42,100
encrypted<font color="#E5E5E5"> so basically you're actually</font>

688
00:26:40,810 --> 00:26:45,490
going to<font color="#CCCCCC"> need the public and the private</font>

689
00:26:42,100 --> 00:26:46,840
key<font color="#E5E5E5"> only to debug to debug to decrypt</font>

690
00:26:45,490 --> 00:26:52,870
<font color="#E5E5E5">the code to</font><font color="#CCCCCC"> see exactly what</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> a</font>

691
00:26:46,840 --> 00:26:55,780
sender<font color="#E5E5E5"> so I guess those</font><font color="#CCCCCC"> are our POC</font><font color="#E5E5E5"> my</font>

692
00:26:52,870 --> 00:26:58,330
<font color="#CCCCCC">mascha foci separate</font><font color="#E5E5E5"> who actually has it</font>

693
00:26:55,780 --> 00:27:01,420
on<font color="#E5E5E5"> display now so</font><font color="#CCCCCC"> I got</font><font color="#E5E5E5"> inspired</font><font color="#CCCCCC"> from</font>

694
00:26:58,330 --> 00:27:03,879
there<font color="#CCCCCC"> that mentaiko is that you can do</font>

695
00:27:01,420 --> 00:27:05,800
it<font color="#E5E5E5"> herself</font><font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> pretty easy and this</font>

696
00:27:03,880 --> 00:27:07,120
<font color="#CCCCCC">pc was made on JavaScript participation</font>

697
00:27:05,800 --> 00:27:08,649
can<font color="#CCCCCC"> be applied in any programming</font>

698
00:27:07,120 --> 00:27:10,840
language<font color="#CCCCCC"> you can use</font><font color="#E5E5E5"> it in Python</font><font color="#CCCCCC"> you</font>

699
00:27:08,650 --> 00:27:13,210
can use it in C so imagine that you're

700
00:27:10,840 --> 00:27:15,870
<font color="#E5E5E5">going to make malware that's going to</font>

701
00:27:13,210 --> 00:27:18,040
call its code from<font color="#E5E5E5"> a neural network</font><font color="#CCCCCC"> and</font>

702
00:27:15,870 --> 00:27:20,110
when you're doing<font color="#E5E5E5"> the classic reverse</font>

703
00:27:18,040 --> 00:27:21,670
engineering of<font color="#E5E5E5"> a malware maybe you're</font>

704
00:27:20,110 --> 00:27:23,229
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> put in a debugger</font><font color="#CCCCCC"> maybe</font>

705
00:27:21,670 --> 00:27:26,470
everything is going to<font color="#E5E5E5"> be in clear text</font>

706
00:27:23,230 --> 00:27:29,070
or you have actually have to unpack your

707
00:27:26,470 --> 00:27:29,070
malware

708
00:27:47,500 --> 00:27:50,690
[Music]

709
00:27:55,770 --> 00:28:01,860
what exactly

710
00:28:06,890 --> 00:28:10,059
[Applause]

711
00:28:27,230 --> 00:28:30,590
<font color="#E5E5E5">thank you very much</font>

712
00:28:30,830 --> 00:28:35,889
[Music]

713
00:28:38,450 --> 00:28:42,830
we apologize for the technical<font color="#E5E5E5"> problems</font>

714
00:28:41,059 --> 00:28:45,168
we're trying to figure<font color="#CCCCCC"> out what's</font>

715
00:28:42,830 --> 00:28:48,379
happening<font color="#E5E5E5"> meanwhile let's see some</font>

716
00:28:45,169 --> 00:28:52,570
<font color="#E5E5E5">questions we have our</font><font color="#CCCCCC"> pin East as usual</font>

717
00:28:48,379 --> 00:28:52,570
and in the second row

718
00:28:56,070 --> 00:29:04,169
is the main issue<font color="#CCCCCC"> of all staying</font><font color="#E5E5E5"> here on</font>

719
00:28:59,410 --> 00:29:04,170
<font color="#E5E5E5">the books when you print and with</font>

720
00:29:18,770 --> 00:29:23,139
static everywhere<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you can</font>

721
00:29:31,300 --> 00:29:36,590
so maybe I understand the question

722
00:29:34,730 --> 00:29:39,170
<font color="#CCCCCC">differently I mean you could actually</font>

723
00:29:36,590 --> 00:29:41,540
<font color="#E5E5E5">what you what you could do is train</font><font color="#CCCCCC"> the</font>

724
00:29:39,170 --> 00:29:43,190
network<font color="#E5E5E5"> to respond to user input in a</font>

725
00:29:41,540 --> 00:29:45,560
certain way that<font color="#E5E5E5"> will generate malicious</font>

726
00:29:43,190 --> 00:29:53,300
code at some point<font color="#CCCCCC"> I mean maybe some you</font>

727
00:29:45,560 --> 00:29:55,100
know yeah yeah<font color="#E5E5E5"> maybe we have some</font>

728
00:29:53,300 --> 00:29:59,419
questions<font color="#E5E5E5"> in the back there and</font><font color="#CCCCCC"> actually</font>

729
00:29:55,100 --> 00:30:03,050
<font color="#E5E5E5">they were first the two hands to the far</font>

730
00:29:59,420 --> 00:30:05,620
right<font color="#E5E5E5"> as we stand in front of you so to</font>

731
00:30:03,050 --> 00:30:05,620
your<font color="#E5E5E5"> left</font>

732
00:30:11,920 --> 00:30:17,840
presentation<font color="#CCCCCC"> I don't deal with</font>

733
00:30:15,740 --> 00:30:20,170
<font color="#CCCCCC">Occupational intelligence but the</font>

734
00:30:17,840 --> 00:30:20,169
question

735
00:30:21,840 --> 00:30:28,120
algorithm are repeated your kitchens

736
00:30:24,490 --> 00:30:33,460
<font color="#CCCCCC">what</font><font color="#E5E5E5"> we did</font><font color="#CCCCCC"> replicate it and it reminded</font>

737
00:30:28,120 --> 00:30:36,090
<font color="#E5E5E5">me as activity of the program</font><font color="#CCCCCC"> sideshow</font>

738
00:30:33,460 --> 00:30:43,900
<font color="#E5E5E5">Microsoft Office Photoshop</font><font color="#CCCCCC"> democracy's</font>

739
00:30:36,090 --> 00:30:48,159
<font color="#CCCCCC">way you record macros yes</font><font color="#E5E5E5"> and so no way</font>

740
00:30:43,900 --> 00:30:51,010
<font color="#CCCCCC">they artificial intelligence and</font><font color="#E5E5E5"> the</font>

741
00:30:48,160 --> 00:30:53,140
difference well basically<font color="#CCCCCC"> think that</font><font color="#E5E5E5"> you</font>

742
00:30:51,010 --> 00:30:55,240
could train it to<font color="#E5E5E5"> maybe generate</font><font color="#CCCCCC"> music</font>

743
00:30:53,140 --> 00:30:57,210
<font color="#E5E5E5">and malicious code at some point so I</font>

744
00:30:55,240 --> 00:31:00,940
don't<font color="#E5E5E5"> think we can actually do that with</font>

745
00:30:57,210 --> 00:31:04,059
with a macro<font color="#CCCCCC"> analyst</font><font color="#E5E5E5"> you have I mean</font><font color="#CCCCCC"> you</font>

746
00:31:00,940 --> 00:31:06,130
know there are<font color="#E5E5E5"> lots of use cases which</font>

747
00:31:04,059 --> 00:31:12,480
cannot be<font color="#CCCCCC"> covered by just the terminus</font>

748
00:31:06,130 --> 00:31:12,480
<font color="#CCCCCC">Takai secretion of code that's it I</font>

749
00:31:13,020 --> 00:31:40,120
don't think<font color="#E5E5E5"> so thank</font><font color="#CCCCCC"> you thank</font><font color="#E5E5E5"> you we</font>

750
00:31:18,370 --> 00:31:45,340
<font color="#CCCCCC">had a question in the back right with my</font>

751
00:31:40,120 --> 00:31:46,959
<font color="#CCCCCC">tribe</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> qian but if you go in the</font>

752
00:31:45,340 --> 00:31:48,970
<font color="#CCCCCC">bridges leave now you're</font><font color="#E5E5E5"> going to</font>

753
00:31:46,960 --> 00:31:51,640
basically<font color="#E5E5E5"> see exactly the</font><font color="#CCCCCC"> same code</font><font color="#E5E5E5"> just</font>

754
00:31:48,970 --> 00:31:53,020
different implementations<font color="#CCCCCC"> second</font>

755
00:31:51,640 --> 00:31:55,059
<font color="#E5E5E5">question as an investigator you</font>

756
00:31:53,020 --> 00:31:56,670
basically will<font color="#CCCCCC"> have access</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the all</font>

757
00:31:55,059 --> 00:31:59,610
the<font color="#CCCCCC"> pathways and can see</font>

758
00:31:56,670 --> 00:32:02,430
more or less<font color="#E5E5E5"> where the entire container</font>

759
00:31:59,610 --> 00:32:04,139
<font color="#E5E5E5">which pathways can be taken you wouldn't</font>

760
00:32:02,430 --> 00:32:06,780
know which pathway will be taken but<font color="#CCCCCC"> you</font>

761
00:32:04,140 --> 00:32:08,070
will have<font color="#E5E5E5"> access to</font><font color="#CCCCCC"> all of the artifacts</font>

762
00:32:06,780 --> 00:32:10,500
you'll have access to all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> strains</font>

763
00:32:08,070 --> 00:32:14,250
<font color="#E5E5E5">all these</font><font color="#CCCCCC"> ratings Cochrane</font><font color="#E5E5E5"> yeah but</font>

764
00:32:10,500 --> 00:32:16,350
<font color="#E5E5E5">doesn't think</font><font color="#CCCCCC"> like so the</font><font color="#E5E5E5"> other</font>

765
00:32:14,250 --> 00:32:18,180
<font color="#CCCCCC">tradition is</font><font color="#E5E5E5"> going to take</font><font color="#CCCCCC"> on you was</font>

766
00:32:16,350 --> 00:32:19,949
that<font color="#CCCCCC"> input affected him the user agent</font>

767
00:32:18,180 --> 00:32:21,930
<font color="#CCCCCC">as you mentioned</font><font color="#E5E5E5"> and that's going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go</font>

768
00:32:19,950 --> 00:32:24,450
<font color="#E5E5E5">through a</font><font color="#CCCCCC"> path</font><font color="#E5E5E5"> or it can be something</font>

769
00:32:21,930 --> 00:32:26,820
<font color="#E5E5E5">else like if you're going to give</font><font color="#CCCCCC"> you</font>

770
00:32:24,450 --> 00:32:28,800
<font color="#E5E5E5">the wrong user agent it's not going well</font>

771
00:32:26,820 --> 00:32:31,350
it's going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> say something gibberish so</font>

772
00:32:28,800 --> 00:32:32,909
you can target specific user agents but

773
00:32:31,350 --> 00:32:35,219
for me<font color="#E5E5E5"> a saying basically</font><font color="#CCCCCC"> someone</font>

774
00:32:32,910 --> 00:32:37,020
determinants me<font color="#E5E5E5"> please check that out</font>

775
00:32:35,220 --> 00:32:39,960
and I have no idea<font color="#CCCCCC"> from where to start</font>

776
00:32:37,020 --> 00:32:52,320
I'm not stuck or you<font color="#E5E5E5"> can actually if you</font>

777
00:32:39,960 --> 00:32:54,330
train your it's actually on a branch

778
00:32:52,320 --> 00:32:56,490
<font color="#E5E5E5">that doesn't exist then who knows</font>

779
00:32:54,330 --> 00:32:57,899
<font color="#CCCCCC">exactly what's going to happen but it's</font>

780
00:32:56,490 --> 00:33:00,180
complicating my<font color="#E5E5E5"> life possibility</font>

781
00:32:57,900 --> 00:33:05,220
basically because I have no vision on

782
00:33:00,180 --> 00:33:08,580
what the next<font color="#E5E5E5"> step thank you thank you</font>

783
00:33:05,220 --> 00:33:11,010
<font color="#E5E5E5">very much we had some questions here so</font>

784
00:33:08,580 --> 00:33:14,449
<font color="#E5E5E5">if you still have them no no I don't</font>

785
00:33:11,010 --> 00:33:14,450
then we'll be going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the front row</font>

786
00:33:14,960 --> 00:33:20,570
or someone<font color="#CCCCCC"> was</font><font color="#E5E5E5"> somebody</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> Beck</font><font color="#CCCCCC"> yes it</font>

787
00:33:18,020 --> 00:33:22,250
was closer<font color="#CCCCCC"> to you maybe you know thank</font>

788
00:33:20,570 --> 00:33:34,730
<font color="#E5E5E5">you will</font><font color="#CCCCCC"> we'll be getting</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> front</font>

789
00:33:22,250 --> 00:33:47,480
<font color="#E5E5E5">row as well</font><font color="#CCCCCC"> what what do</font><font color="#E5E5E5"> you mean by</font>

790
00:33:34,730 --> 00:33:50,059
<font color="#CCCCCC">that</font><font color="#E5E5E5"> performance</font><font color="#CCCCCC"> oh no don't worry I</font>

791
00:33:47,480 --> 00:33:52,340
mean really<font color="#E5E5E5"> fast and it you can learn</font>

792
00:33:50,059 --> 00:33:56,090
<font color="#E5E5E5">really large patterns</font><font color="#CCCCCC"> I mean we actually</font>

793
00:33:52,340 --> 00:33:59,418
generated like<font color="#E5E5E5"> 20k</font><font color="#CCCCCC"> code with a single</font>

794
00:33:56,090 --> 00:34:03,529
model<font color="#E5E5E5"> to 200 cells so it's really fast I</font>

795
00:33:59,419 --> 00:34:06,020
<font color="#E5E5E5">mean in consideration like there is one</font>

796
00:34:03,529 --> 00:34:08,719
big<font color="#E5E5E5"> project actually was the one lasting</font>

797
00:34:06,020 --> 00:34:12,560
<font color="#E5E5E5">at least like this are frozen that's</font>

798
00:34:08,719 --> 00:34:15,348
Google<font color="#E5E5E5"> Earth project modularity in</font><font color="#CCCCCC"> Java</font>

799
00:34:12,560 --> 00:34:21,409
<font color="#E5E5E5">spirits so I presume they</font><font color="#CCCCCC"> have the</font>

800
00:34:15,349 --> 00:34:24,470
<font color="#E5E5E5">solution for computational issues will</font>

801
00:34:21,409 --> 00:34:26,869
<font color="#CCCCCC">be coming to</font><font color="#E5E5E5"> the first row if you still</font>

802
00:34:24,469 --> 00:34:30,529
have<font color="#E5E5E5"> the question it's still there</font>

803
00:34:26,869 --> 00:34:34,629
you're very<font color="#CCCCCC"> determined</font><font color="#E5E5E5"> yeah just just a</font>

804
00:34:30,530 --> 00:34:38,480
tiny little second until<font color="#E5E5E5"> we have a</font>

805
00:34:34,629 --> 00:34:40,690
<font color="#E5E5E5">teleportation technology we will just</font>

806
00:34:38,480 --> 00:34:40,690
walk

807
00:34:47,629 --> 00:34:55,859
question yes I mentioned<font color="#E5E5E5"> worse</font><font color="#CCCCCC"> they're</font>

808
00:34:53,639 --> 00:34:57,839
<font color="#CCCCCC">going to train</font><font color="#E5E5E5"> a neural network on</font>

809
00:34:55,859 --> 00:35:00,859
different user agents<font color="#CCCCCC"> you see how it</font>

810
00:34:57,839 --> 00:35:03,599
behaves<font color="#CCCCCC"> in there and we want to go with</font>

811
00:35:00,859 --> 00:35:06,420
also the malware part like we want<font color="#E5E5E5"> to</font>

812
00:35:03,599 --> 00:35:09,119
<font color="#E5E5E5">build a piece of my</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> because I got</font>

813
00:35:06,420 --> 00:35:12,270
such a great programmer there but to

814
00:35:09,119 --> 00:35:13,829
actually build a binary that has<font color="#E5E5E5"> machine</font>

815
00:35:12,270 --> 00:35:17,549
<font color="#E5E5E5">learning</font><font color="#CCCCCC"> abilities and here are the</font>

816
00:35:13,829 --> 00:35:20,099
<font color="#CCCCCC">inside and</font><font color="#E5E5E5"> try to make it as I</font><font color="#CCCCCC"> explain</font>

817
00:35:17,549 --> 00:35:21,930
and then move the body to<font color="#E5E5E5"> see exactly</font>

818
00:35:20,099 --> 00:35:23,579
how<font color="#E5E5E5"> I can see the code there what I'm</font>

819
00:35:21,930 --> 00:35:31,529
going<font color="#CCCCCC"> to see if it's possible</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> me to</font>

820
00:35:23,579 --> 00:35:36,829
actually understand<font color="#E5E5E5"> the other projects</font>

821
00:35:31,530 --> 00:35:36,829
that are defensive we we<font color="#CCCCCC"> just</font>

822
00:35:48,920 --> 00:35:55,170
<font color="#CCCCCC">we'll be taking one last question if</font>

823
00:35:51,780 --> 00:35:57,840
there's any if not<font color="#CCCCCC"> we'll be</font><font color="#E5E5E5"> closing so</font>

824
00:35:55,170 --> 00:35:59,160
maybe you<font color="#CCCCCC"> have some</font><font color="#E5E5E5"> questions that work</font>

825
00:35:57,840 --> 00:36:01,950
things that you would like<font color="#E5E5E5"> to discuss in</font>

826
00:35:59,160 --> 00:36:05,310
private and we will invite you to<font color="#CCCCCC"> us off</font>

827
00:36:01,950 --> 00:36:07,200
with our guests<font color="#CCCCCC"> in</font><font color="#E5E5E5"> private afterwards</font>

828
00:36:05,310 --> 00:36:12,219
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> very much</font><font color="#E5E5E5"> thank you</font>

829
00:36:07,200 --> 00:36:12,218
[Applause]

