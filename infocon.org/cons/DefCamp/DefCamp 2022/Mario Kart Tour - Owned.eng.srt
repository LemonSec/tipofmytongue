1
00:00:00,120 --> 00:00:01,319
hello

2
00:00:01,319 --> 00:00:03,720
my name is Antonio and together with

3
00:00:03,720 --> 00:00:05,759
Greg we are going to show you how we

4
00:00:05,759 --> 00:00:09,919
hacked Mario Kart tour the Android game

5
00:00:10,440 --> 00:00:12,599
second

6
00:00:12,599 --> 00:00:14,940
so first of all we have to ask ourselves

7
00:00:14,940 --> 00:00:18,060
the why question why hack video games

8
00:00:18,060 --> 00:00:20,300
well money of course

9
00:00:20,300 --> 00:00:23,160
the video game hacking Market is a

10
00:00:23,160 --> 00:00:26,160
growing Market which which has gone up

11
00:00:26,160 --> 00:00:28,619
to about 70 million dollars

12
00:00:28,619 --> 00:00:31,080
from selling exploits you know whatever

13
00:00:31,080 --> 00:00:33,600
Nintendo makes about 15.3 billion

14
00:00:33,600 --> 00:00:36,239
dollars only from selling video games

15
00:00:36,239 --> 00:00:38,160
so he can't really say that Nintendo has

16
00:00:38,160 --> 00:00:40,020
to be threatened about this but they

17
00:00:40,020 --> 00:00:41,760
still have the responsibility to try and

18
00:00:41,760 --> 00:00:43,620
stop the Hackers from ruining everyone's

19
00:00:43,620 --> 00:00:45,860
game

20
00:00:46,020 --> 00:00:48,239
so when it comes to video games what

21
00:00:48,239 --> 00:00:50,520
exactly is there worth protecting as you

22
00:00:50,520 --> 00:00:52,020
already know from the tenets of cyber

23
00:00:52,020 --> 00:00:53,879
security we have the CIA Triad

24
00:00:53,879 --> 00:00:55,739
confidentiality integrity and

25
00:00:55,739 --> 00:00:58,379
availability where confidentiality

26
00:00:58,379 --> 00:01:01,260
stands for protecting the user's data

27
00:01:01,260 --> 00:01:04,280
Integrity refers to

28
00:01:04,280 --> 00:01:09,960
expect to having the video game controls

29
00:01:09,960 --> 00:01:12,240
perform the same for everyone

30
00:01:12,240 --> 00:01:15,299
and the availability well for the game

31
00:01:15,299 --> 00:01:17,220
to be available

32
00:01:17,220 --> 00:01:19,759
what happens if two of these properties

33
00:01:19,759 --> 00:01:22,759
sorry for a video game

34
00:01:22,759 --> 00:01:26,100
excuse me so for a video game we are

35
00:01:26,100 --> 00:01:27,320
really interested in

36
00:01:27,320 --> 00:01:29,700
integrity and availability since

37
00:01:29,700 --> 00:01:31,640
confidentiality is not really a problem

38
00:01:31,640 --> 00:01:35,700
when we don't store other users data on

39
00:01:35,700 --> 00:01:37,140
each device

40
00:01:37,140 --> 00:01:40,439
so what happens if we don't ensure if we

41
00:01:40,439 --> 00:01:42,900
fail to ensure the integrity and the

42
00:01:42,900 --> 00:01:45,360
availability of a game well Gamers will

43
00:01:45,360 --> 00:01:48,140
throw away that game

44
00:01:48,320 --> 00:01:50,700
so uh

45
00:01:50,700 --> 00:01:53,159
game hacking and security have a lot of

46
00:01:53,159 --> 00:01:55,259
overlapping since for each of them we

47
00:01:55,259 --> 00:01:59,220
have to uh to reverse engineer and we

48
00:01:59,220 --> 00:02:01,200
can either do a static or dynamic

49
00:02:01,200 --> 00:02:04,079
analysis and a forensic analysis to find

50
00:02:04,079 --> 00:02:06,719
out the behavior of the game and for the

51
00:02:06,719 --> 00:02:10,560
actual hacking we have to to hook or

52
00:02:10,560 --> 00:02:13,940
patch the behavior during runtime

53
00:02:13,940 --> 00:02:16,260
this brings us to the research questions

54
00:02:16,260 --> 00:02:18,360
that this presentation is based on since

55
00:02:18,360 --> 00:02:20,700
this was a university project we also

56
00:02:20,700 --> 00:02:22,500
have an accompanying paper

57
00:02:22,500 --> 00:02:25,200
uh so the questions are what are the

58
00:02:25,200 --> 00:02:27,120
anti-temper mechanisms implemented in

59
00:02:27,120 --> 00:02:28,860
the application and how can we bypass

60
00:02:28,860 --> 00:02:31,020
them and what are the anti-cheat methods

61
00:02:31,020 --> 00:02:32,640
implemented within the application and

62
00:02:32,640 --> 00:02:35,160
of course how we can bypass them

63
00:02:35,160 --> 00:02:37,680
uh first we need to establish the

64
00:02:37,680 --> 00:02:39,060
difference between the anti-temper

65
00:02:39,060 --> 00:02:41,400
mechanisms and the anti-anti cheating

66
00:02:41,400 --> 00:02:42,680
mechanisms

67
00:02:42,680 --> 00:02:44,760
anti-temper refers to techniques

68
00:02:44,760 --> 00:02:46,800
employed to frustrate the efforts of

69
00:02:46,800 --> 00:02:48,660
individuals intending to modify the

70
00:02:48,660 --> 00:02:50,819
application in a manner not intended by

71
00:02:50,819 --> 00:02:53,580
the developers while antichit refers to

72
00:02:53,580 --> 00:02:55,500
techniques used to identify a

73
00:02:55,500 --> 00:02:57,300
illegitimate gameplay

74
00:02:57,300 --> 00:02:59,640
as well as the means with which we

75
00:02:59,640 --> 00:03:01,980
ensure the fairness during the gameplay

76
00:03:01,980 --> 00:03:03,599
to

77
00:03:03,599 --> 00:03:05,220
to make a quick side note the

78
00:03:05,220 --> 00:03:06,720
anti-tempering techniques are also

79
00:03:06,720 --> 00:03:08,700
interesting interesting because they are

80
00:03:08,700 --> 00:03:10,379
used in uh

81
00:03:10,379 --> 00:03:13,980
in malware applications

82
00:03:13,980 --> 00:03:16,560
finally before we get to the part that

83
00:03:16,560 --> 00:03:19,440
everyone is waiting for we have to look

84
00:03:19,440 --> 00:03:21,599
to have a little look at the anatomy of

85
00:03:21,599 --> 00:03:22,739
a unity game

86
00:03:22,739 --> 00:03:25,200
first of all we need an engine which in

87
00:03:25,200 --> 00:03:26,879
our case is unity

88
00:03:26,879 --> 00:03:30,540
and the IL to CPP component that takes

89
00:03:30,540 --> 00:03:32,159
the c-sharp

90
00:03:32,159 --> 00:03:35,040
assembly code that was generated during

91
00:03:35,040 --> 00:03:37,940
the creation with the unity engine and

92
00:03:37,940 --> 00:03:40,200
transform that into C plus plus code

93
00:03:40,200 --> 00:03:42,780
which then with the help of the lib IL

94
00:03:42,780 --> 00:03:46,260
to CPP can be compiled for multiple

95
00:03:46,260 --> 00:03:49,760
platforms ensuring the portability

96
00:03:50,879 --> 00:03:53,819
okay this brings us to The Entity to the

97
00:03:53,819 --> 00:03:55,920
anti-temporing bypasses that we managed

98
00:03:55,920 --> 00:03:58,080
to find

99
00:03:58,080 --> 00:04:02,519
first of all the the Mario Kart store

100
00:04:02,519 --> 00:04:05,280
game was protected by having a metadata

101
00:04:05,280 --> 00:04:07,620
file embedded in the binary whereas

102
00:04:07,620 --> 00:04:09,959
normally this metadata file would come

103
00:04:09,959 --> 00:04:12,900
in a separate as a separate file

104
00:04:12,900 --> 00:04:15,120
we have the emulator detection the arrow

105
00:04:15,120 --> 00:04:17,880
detection and the feature that prevents

106
00:04:17,880 --> 00:04:19,320
the game from being played on a rooted

107
00:04:19,320 --> 00:04:20,220
phone

108
00:04:20,220 --> 00:04:23,220
the last three features are implemented

109
00:04:23,220 --> 00:04:25,259
via safety net attestation which is

110
00:04:25,259 --> 00:04:28,580
Google's Library

111
00:04:28,580 --> 00:04:30,720
designed specifically to help Android

112
00:04:30,720 --> 00:04:33,600
applications for this purpose and which

113
00:04:33,600 --> 00:04:36,600
was later renamed to play Integrity API

114
00:04:36,600 --> 00:04:39,060
and also we found the remnants in the

115
00:04:39,060 --> 00:04:41,340
code of the application from sakasho

116
00:04:41,340 --> 00:04:43,919
safety net which seems to be a custom

117
00:04:43,919 --> 00:04:46,680
code for the same purpose

118
00:04:46,680 --> 00:04:48,960
so during our analysis we managed to

119
00:04:48,960 --> 00:04:52,020
bypass the three

120
00:04:52,020 --> 00:04:54,600
the three bullet points as you can see

121
00:04:54,600 --> 00:04:57,600
the emulator detection by using an

122
00:04:57,600 --> 00:04:59,820
actual phone instead of an emulator the

123
00:04:59,820 --> 00:05:02,160
root detection by using the safety net

124
00:05:02,160 --> 00:05:06,300
fix as part of the magic module

125
00:05:06,300 --> 00:05:07,560
and

126
00:05:07,560 --> 00:05:08,400
um

127
00:05:08,400 --> 00:05:10,680
with this fix we also we were also able

128
00:05:10,680 --> 00:05:13,320
to play on the rooted phone and for the

129
00:05:13,320 --> 00:05:14,880
first thing as I mentioned it usually

130
00:05:14,880 --> 00:05:18,120
comes in a separate file so in order to

131
00:05:18,120 --> 00:05:21,080
actually get access to the metadata file

132
00:05:21,080 --> 00:05:24,000
we had to dump it during the runtime

133
00:05:24,000 --> 00:05:26,699
using another matches module called

134
00:05:26,699 --> 00:05:33,000
called zygisk or IL to CPP dumper which

135
00:05:34,199 --> 00:05:36,780
dumps all the classes methods functions

136
00:05:36,780 --> 00:05:40,560
and their offsets in the binary

137
00:05:40,560 --> 00:05:43,080
now we are we can go on to the

138
00:05:43,080 --> 00:05:45,139
anti-cheat bypass

139
00:05:45,139 --> 00:05:48,300
for this purpose we used Frida which is

140
00:05:48,300 --> 00:05:50,400
a well-known Dynamic instrumentation

141
00:05:50,400 --> 00:05:52,740
toolkit which injects a JavaScript

142
00:05:52,740 --> 00:05:54,900
engine into the running process and

143
00:05:54,900 --> 00:05:57,000
basically allows you to hook any

144
00:05:57,000 --> 00:06:00,539
function and modify the behavior during

145
00:06:00,539 --> 00:06:01,979
runtime

146
00:06:01,979 --> 00:06:05,340
it also it can also act as a debugger so

147
00:06:05,340 --> 00:06:07,340
you can also see more information

148
00:06:07,340 --> 00:06:09,720
live as it happens

149
00:06:09,720 --> 00:06:11,940
we also have a special note here for the

150
00:06:11,940 --> 00:06:15,060
author of uh Freda which you can give a

151
00:06:15,060 --> 00:06:17,639
follow on Twitter

152
00:06:17,639 --> 00:06:20,820
so did the anti-cheat implemented by

153
00:06:20,820 --> 00:06:23,039
Nintendo work well the answer would be

154
00:06:23,039 --> 00:06:24,840
no because we managed to get a score of

155
00:06:24,840 --> 00:06:27,419
99 999.

156
00:06:27,419 --> 00:06:30,360
but then maybe it worked because later

157
00:06:30,360 --> 00:06:33,419
on I think a few hours or one day later

158
00:06:33,419 --> 00:06:35,940
we got banned so they might have

159
00:06:35,940 --> 00:06:38,580
something uh that we can classify as a

160
00:06:38,580 --> 00:06:40,860
passive anti-cheat method where it's

161
00:06:40,860 --> 00:06:43,740
either automated and or or manual

162
00:06:43,740 --> 00:06:48,000
inspection where uh someone looks at the

163
00:06:48,000 --> 00:06:51,000
scores and the gameplay gameplay of

164
00:06:51,000 --> 00:06:53,400
different things and if it's out of

165
00:06:53,400 --> 00:06:55,800
normal bounds like our score then it

166
00:06:55,800 --> 00:06:57,960
should get banned

167
00:06:57,960 --> 00:07:00,479
from here on my colleague Greg will try

168
00:07:00,479 --> 00:07:02,280
to explain more about the the engine

169
00:07:02,280 --> 00:07:06,318
that we created for this exploit

170
00:07:06,960 --> 00:07:08,400
thanks Antonio

171
00:07:08,400 --> 00:07:12,180
uh yeah so for our div flow basically we

172
00:07:12,180 --> 00:07:14,520
created an API that we could attach to

173
00:07:14,520 --> 00:07:17,280
using Frida to the um to the running

174
00:07:17,280 --> 00:07:19,800
binary and with that uh basically call

175
00:07:19,800 --> 00:07:21,780
whatever methods we want uh very easily

176
00:07:21,780 --> 00:07:23,340
and efficiently

177
00:07:23,340 --> 00:07:25,020
the way this API worked the way that we

178
00:07:25,020 --> 00:07:27,960
developed it uh was we took the dump of

179
00:07:27,960 --> 00:07:30,720
the metadata that's dump.cs and I

180
00:07:30,720 --> 00:07:32,580
created a custom parser that just passed

181
00:07:32,580 --> 00:07:34,919
it into a Json file uh fed that into a

182
00:07:34,919 --> 00:07:36,780
ginger template that created some

183
00:07:36,780 --> 00:07:39,800
JavaScript and put that together with

184
00:07:39,800 --> 00:07:41,759
cheats.js which is

185
00:07:41,759 --> 00:07:43,259
it's in the name

186
00:07:43,259 --> 00:07:46,380
um and with that we basically have a way

187
00:07:46,380 --> 00:07:49,319
to create custom cheats um on the Fly

188
00:07:49,319 --> 00:07:52,560
and run them in Frida

189
00:07:52,560 --> 00:07:55,020
what does a custom cheat look like

190
00:07:55,020 --> 00:07:57,660
so on the right you can see the Json

191
00:07:57,660 --> 00:08:00,120
metadata for one of the functions in

192
00:08:00,120 --> 00:08:01,860
this case it's the add action score

193
00:08:01,860 --> 00:08:04,220
function for the race score recorder

194
00:08:04,220 --> 00:08:08,000
method so that controls your score and

195
00:08:08,000 --> 00:08:11,660
it takes an uh an integer value that

196
00:08:11,660 --> 00:08:13,919
tells it how much to add to the score

197
00:08:13,919 --> 00:08:18,479
and we just replaced it with 1 337 at

198
00:08:18,479 --> 00:08:22,560
the top complete that's in our cheat at

199
00:08:22,560 --> 00:08:26,220
the top and over time over the course of

200
00:08:26,220 --> 00:08:27,900
the gameplay you end up with a Max score

201
00:08:27,900 --> 00:08:30,960
of 99 999 which shouldn't be anywhere

202
00:08:30,960 --> 00:08:32,820
near possible uh you should get in the

203
00:08:32,820 --> 00:08:36,360
10 000 to 15 000 range of points

204
00:08:36,360 --> 00:08:38,640
um so that's probably why uh our conquer

205
00:08:38,640 --> 00:08:40,679
banned that's pretty easy to detect if

206
00:08:40,679 --> 00:08:44,159
someone gets an insane score like that

207
00:08:44,159 --> 00:08:46,320
um and what feeder does is it can attack

208
00:08:46,320 --> 00:08:48,660
attach to a function on enter and on

209
00:08:48,660 --> 00:08:50,279
leave and in this case we just change

210
00:08:50,279 --> 00:08:53,660
the arguments uh going into the function

211
00:08:53,660 --> 00:08:57,560
every time the function ran

212
00:08:57,720 --> 00:08:59,640
um I don't recommend doing this

213
00:08:59,640 --> 00:09:00,720
um I don't recommend creating your own

214
00:09:00,720 --> 00:09:04,440
custom API like this it was after the

215
00:09:04,440 --> 00:09:06,240
after our project that I discovered that

216
00:09:06,240 --> 00:09:07,440
someone had made a much better way of

217
00:09:07,440 --> 00:09:08,580
doing this

218
00:09:08,580 --> 00:09:09,660
um that's a lot faster and more

219
00:09:09,660 --> 00:09:11,279
efficient and if you want to do

220
00:09:11,279 --> 00:09:13,080
something like this mess around with

221
00:09:13,080 --> 00:09:15,720
Android games I recommend that you use

222
00:09:15,720 --> 00:09:18,200
this GitHub

223
00:09:18,200 --> 00:09:21,779
repo it's really really cool I recommend

224
00:09:21,779 --> 00:09:23,339
trying it out

225
00:09:23,339 --> 00:09:25,200
but anyways we ran into another issue

226
00:09:25,200 --> 00:09:27,720
which is that there's 99 600 different

227
00:09:27,720 --> 00:09:30,720
functions approximately to look at and

228
00:09:30,720 --> 00:09:32,700
sifting through those manually in a

229
00:09:32,700 --> 00:09:34,920
short amount of time is quite difficult

230
00:09:34,920 --> 00:09:38,100
uh so we need an intention way to find

231
00:09:38,100 --> 00:09:40,200
um which functions did what

232
00:09:40,200 --> 00:09:42,600
and we tried hooking all the functions

233
00:09:42,600 --> 00:09:44,220
uh just to see what would happen and of

234
00:09:44,220 --> 00:09:46,260
course the game crashed because that's a

235
00:09:46,260 --> 00:09:47,940
lot to handle

236
00:09:47,940 --> 00:09:51,600
um so I created another Custom Tool

237
00:09:51,600 --> 00:09:53,160
um called the timeliner

238
00:09:53,160 --> 00:09:57,660
what it does is it will automatically

239
00:09:57,660 --> 00:09:59,880
record your screen and at the same time

240
00:09:59,880 --> 00:10:03,480
we'll hook onto a certain subset of

241
00:10:03,480 --> 00:10:05,040
functions that you can Define using a

242
00:10:05,040 --> 00:10:06,320
regular expression

243
00:10:06,320 --> 00:10:07,860
and

244
00:10:07,860 --> 00:10:09,720
um it allows you to very easily look up

245
00:10:09,720 --> 00:10:11,700
frame by frame which function is running

246
00:10:11,700 --> 00:10:12,839
when

247
00:10:12,839 --> 00:10:15,360
um more or less and uh with a little bit

248
00:10:15,360 --> 00:10:19,019
of leeway of about 10 microseconds 100

249
00:10:19,019 --> 00:10:21,300
microseconds something like that

250
00:10:21,300 --> 00:10:23,399
um and uh yeah that way you can very

251
00:10:23,399 --> 00:10:25,080
easily figure out which functions are

252
00:10:25,080 --> 00:10:27,360
running when and that allows you to

253
00:10:27,360 --> 00:10:28,800
figure out which functions you want to

254
00:10:28,800 --> 00:10:30,120
hook to and which ones you want to hack

255
00:10:30,120 --> 00:10:33,080
and patch

256
00:10:33,180 --> 00:10:35,580
um I should note that for ethical

257
00:10:35,580 --> 00:10:38,100
reasons we were looking uh primarily at

258
00:10:38,100 --> 00:10:40,080
the single player mode of Mario Kart we

259
00:10:40,080 --> 00:10:42,540
didn't want to ruin anyone else's game

260
00:10:42,540 --> 00:10:44,820
having said that another way that you

261
00:10:44,820 --> 00:10:46,860
could hack if you were going to hack

262
00:10:46,860 --> 00:10:48,360
multiplayer

263
00:10:48,360 --> 00:10:51,600
um is to just reverse the packets being

264
00:10:51,600 --> 00:10:53,339
sent on the wire and not actually touch

265
00:10:53,339 --> 00:10:54,720
the binary itself

266
00:10:54,720 --> 00:10:56,640
so we didn't spend too much time on this

267
00:10:56,640 --> 00:10:58,019
because we were running out of time at

268
00:10:58,019 --> 00:10:59,760
this point in our project but I think

269
00:10:59,760 --> 00:11:02,279
it's worth noting we're looking at the

270
00:11:02,279 --> 00:11:03,660
UDP packets that are sent during

271
00:11:03,660 --> 00:11:06,720
multiplayer to see if we could reverse

272
00:11:06,720 --> 00:11:09,260
any of that just off the bat

273
00:11:09,260 --> 00:11:12,000
and primarily to see if whether or not

274
00:11:12,000 --> 00:11:14,899
these were encrypted

275
00:11:15,180 --> 00:11:17,339
um what we found is that some of them

276
00:11:17,339 --> 00:11:19,320
aren't encrypted

277
00:11:19,320 --> 00:11:22,200
um so by 12 of the EDP packets for

278
00:11:22,200 --> 00:11:25,440
example uh give this sort of a Sawtooth

279
00:11:25,440 --> 00:11:28,440
pattern when you plot it on a graph so

280
00:11:28,440 --> 00:11:31,740
it goes up and drops anyone who does

281
00:11:31,740 --> 00:11:33,600
networking here might recognize this as

282
00:11:33,600 --> 00:11:35,100
some sort of maybe a congestion

283
00:11:35,100 --> 00:11:36,440
algorithm

284
00:11:36,440 --> 00:11:39,839
to deal with congestion on the network

285
00:11:39,839 --> 00:11:43,019
by 13 shows another similar or another

286
00:11:43,019 --> 00:11:45,240
pattern so these are clearly not

287
00:11:45,240 --> 00:11:47,459
encrypted which would make sense and we

288
00:11:47,459 --> 00:11:50,100
found that a few of the bytes at the

289
00:11:50,100 --> 00:11:52,079
head of the file and the Fiat the tail

290
00:11:52,079 --> 00:11:54,420
of each sorry of each packet of each

291
00:11:54,420 --> 00:11:55,680
payload

292
00:11:55,680 --> 00:11:57,720
um showed patterns which indicates that

293
00:11:57,720 --> 00:11:59,279
they were probably not encrypted the

294
00:11:59,279 --> 00:12:01,860
rest of the um of the packet was a bit

295
00:12:01,860 --> 00:12:03,420
inconclusive and we didn't have time to

296
00:12:03,420 --> 00:12:06,060
dig further unfortunately but we can

297
00:12:06,060 --> 00:12:08,640
leave that up to you guys if you want to

298
00:12:08,640 --> 00:12:12,740
uh reverse some UDP packets

299
00:12:12,899 --> 00:12:14,839
um but we had another another account

300
00:12:14,839 --> 00:12:17,760
and it wasn't banned so we thought we'd

301
00:12:17,760 --> 00:12:20,100
uh give another shot at single player

302
00:12:20,100 --> 00:12:22,260
mode and see if we could come up with

303
00:12:22,260 --> 00:12:24,959
any cheats that were harder to detect

304
00:12:24,959 --> 00:12:27,120
um and our philosophy behind this was

305
00:12:27,120 --> 00:12:30,240
that if we tried to reuse the code of

306
00:12:30,240 --> 00:12:33,540
the game itself as much as possible then

307
00:12:33,540 --> 00:12:35,640
the behavior would probably be similar

308
00:12:35,640 --> 00:12:38,160
to how the game would react and

309
00:12:38,160 --> 00:12:39,480
therefore it might be harder to detect

310
00:12:39,480 --> 00:12:40,860
especially if they're using a passive

311
00:12:40,860 --> 00:12:42,120
detection technique where they just look

312
00:12:42,120 --> 00:12:45,740
at the results of each game

313
00:12:46,800 --> 00:12:50,040
um so no more 99 999 points I have to

314
00:12:50,040 --> 00:12:53,639
keep it in a reasonable range and to do

315
00:12:53,639 --> 00:12:55,380
that we came up uh we tried a whole

316
00:12:55,380 --> 00:12:57,060
bunch of things and we came up with uh

317
00:12:57,060 --> 00:12:59,760
what we called the Silver Bullet exploit

318
00:12:59,760 --> 00:13:02,160
the way this works essentially is

319
00:13:02,160 --> 00:13:05,100
um during gameplay uh you will at

320
00:13:05,100 --> 00:13:07,620
certain intervals in the map get a

321
00:13:07,620 --> 00:13:09,779
random item this item is a little

322
00:13:09,779 --> 00:13:10,860
Lottery

323
00:13:10,860 --> 00:13:13,139
um a weighted lottery so sometimes

324
00:13:13,139 --> 00:13:14,399
you'll get a really really good item

325
00:13:14,399 --> 00:13:17,220
like Bullet Bill I would change into a

326
00:13:17,220 --> 00:13:19,019
bullet you're on autopilot you're

327
00:13:19,019 --> 00:13:21,420
invincible and you're going at twice the

328
00:13:21,420 --> 00:13:22,260
speed

329
00:13:22,260 --> 00:13:24,360
the problem is that you're only doing

330
00:13:24,360 --> 00:13:26,760
that for about three seconds so it's

331
00:13:26,760 --> 00:13:28,920
nice but it's a bit short

332
00:13:28,920 --> 00:13:31,200
so what would happen if we rigged the

333
00:13:31,200 --> 00:13:34,079
lottery and also made it said we just

334
00:13:34,079 --> 00:13:37,260
stay in that state forever

335
00:13:37,260 --> 00:13:39,839
um well uh yeah you're basically

336
00:13:39,839 --> 00:13:41,820
guaranteed a win

337
00:13:41,820 --> 00:13:44,959
and it's also harder to detect because

338
00:13:44,959 --> 00:13:47,339
you won't get

339
00:13:47,339 --> 00:13:49,380
um you won't get the maximum points but

340
00:13:49,380 --> 00:13:51,420
you will come first in every single game

341
00:13:51,420 --> 00:13:53,639
guaranteed

342
00:13:53,639 --> 00:13:55,440
um and we actually have a demo of that

343
00:13:55,440 --> 00:13:59,120
uh if we could pull up the video

344
00:14:12,480 --> 00:14:14,760
uh so here you can see a normal uh

345
00:14:14,760 --> 00:14:16,380
single player game I'm playing against a

346
00:14:16,380 --> 00:14:19,200
bunch of NPCs and

347
00:14:19,200 --> 00:14:20,820
um Lottery starts there's a little bit

348
00:14:20,820 --> 00:14:23,240
of a lag as we hook a bunch of functions

349
00:14:23,240 --> 00:14:26,760
and uh just like that uh We've rigged

350
00:14:26,760 --> 00:14:29,040
the game and

351
00:14:29,040 --> 00:14:30,120
um yeah

352
00:14:30,120 --> 00:14:34,740
you have no ability to uh to to uh act

353
00:14:34,740 --> 00:14:36,120
against us

354
00:14:36,120 --> 00:14:38,220
um and um just in case anyone's curious

355
00:14:38,220 --> 00:14:40,680
that would also work in multiplayer um

356
00:14:40,680 --> 00:14:44,459
you can create uh games with just uh two

357
00:14:44,459 --> 00:14:47,279
people so we uh used it with uh two

358
00:14:47,279 --> 00:14:49,079
devices that we controlled

359
00:14:49,079 --> 00:14:51,540
um and uh on the second player screen

360
00:14:51,540 --> 00:14:54,899
all you see is uh first player going

361
00:14:54,899 --> 00:14:58,880
around the map really really fast

362
00:14:59,100 --> 00:15:02,519
um and uh yeah so in in the situation I

363
00:15:02,519 --> 00:15:04,560
think all the NPCs have just passed

364
00:15:04,560 --> 00:15:06,899
their first round uh now and we're about

365
00:15:06,899 --> 00:15:09,180
halfway through the second round

366
00:15:09,180 --> 00:15:10,500
um so yeah there's no way you can

367
00:15:10,500 --> 00:15:11,820
compete

368
00:15:11,820 --> 00:15:12,959
um

369
00:15:12,959 --> 00:15:16,099
you're guaranteed to win

370
00:15:16,980 --> 00:15:21,380
um yeah switching back to the slides

371
00:15:23,579 --> 00:15:25,980
uh the second player the legitimate

372
00:15:25,980 --> 00:15:27,360
player will not see you in bullet form

373
00:15:27,360 --> 00:15:29,160
now

374
00:15:29,160 --> 00:15:31,079
um yeah fun

375
00:15:31,079 --> 00:15:32,279
um

376
00:15:32,279 --> 00:15:34,740
uh so interestingly enough

377
00:15:34,740 --> 00:15:37,199
um Nintendo a couple days after we got

378
00:15:37,199 --> 00:15:39,060
banned Nintendo released a new patent

379
00:15:39,060 --> 00:15:41,699
for an anti-cheat method and

380
00:15:41,699 --> 00:15:44,100
interestingly it uses code reuse so um

381
00:15:44,100 --> 00:15:46,560
they they didn't give too many details

382
00:15:46,560 --> 00:15:48,000
but it sounds a little bit like Rob

383
00:15:48,000 --> 00:15:49,680
chaining if for those of you that might

384
00:15:49,680 --> 00:15:52,500
know about that but basically reusing

385
00:15:52,500 --> 00:15:54,300
code from within the game to check to

386
00:15:54,300 --> 00:15:56,160
see if the game has been modified it's

387
00:15:56,160 --> 00:15:58,320
really really interesting and I think it

388
00:15:58,320 --> 00:16:01,320
will pose an interesting challenge for

389
00:16:01,320 --> 00:16:04,560
uh game mod of modification

390
00:16:04,560 --> 00:16:06,120
um so yeah curious to see where that

391
00:16:06,120 --> 00:16:07,260
goes

392
00:16:07,260 --> 00:16:09,720
uh ethical considerations I told you

393
00:16:09,720 --> 00:16:12,600
that we only wanted to do things in um

394
00:16:12,600 --> 00:16:13,920
single player mode

395
00:16:13,920 --> 00:16:15,540
uh what we didn't know

396
00:16:15,540 --> 00:16:19,099
was that single player mode was ranked

397
00:16:19,500 --> 00:16:23,160
um and uh we may have ruined some poor

398
00:16:23,160 --> 00:16:25,519
kids day

399
00:16:25,980 --> 00:16:27,839
all week seeing as these are weekly

400
00:16:27,839 --> 00:16:29,100
ranks

401
00:16:29,100 --> 00:16:29,880
um

402
00:16:29,880 --> 00:16:33,779
but yeah a lesson in double checking

403
00:16:33,779 --> 00:16:36,540
your scope

404
00:16:36,540 --> 00:16:38,220
um but yeah this was an interesting uh

405
00:16:38,220 --> 00:16:40,980
look into trusting the client uh

406
00:16:40,980 --> 00:16:42,779
trusting a game client

407
00:16:42,779 --> 00:16:47,040
um and um uh looking at how anti-cheat

408
00:16:47,040 --> 00:16:49,079
and anti-tamper methods were implemented

409
00:16:49,079 --> 00:16:51,360
in that if you want to go ahead and mess

410
00:16:51,360 --> 00:16:53,160
around with your own Unity games

411
00:16:53,160 --> 00:16:54,480
um I recommend checking these links out

412
00:16:54,480 --> 00:16:56,459
it will give you a really good Head

413
00:16:56,459 --> 00:16:59,759
Start especially that Frida iltcpp

414
00:16:59,759 --> 00:17:03,180
Bridge that's uh an amazing API tool

415
00:17:03,180 --> 00:17:06,240
that I think is very very useful

416
00:17:06,240 --> 00:17:08,339
thank you very much and I hope you

417
00:17:08,339 --> 00:17:10,579
enjoyed

418
00:17:10,859 --> 00:17:13,319
foreign

419
00:17:13,319 --> 00:17:15,740
thank you guys for sharing this with us

420
00:17:15,740 --> 00:17:19,199
uh let's have let's see if we have a

421
00:17:19,199 --> 00:17:21,119
question yeah we have questions in the

422
00:17:21,119 --> 00:17:23,640
audience let's uh start with the fox

423
00:17:23,640 --> 00:17:25,260
question

424
00:17:25,260 --> 00:17:27,540
hello and thank you for the presentation

425
00:17:27,540 --> 00:17:32,299
uh I have a quick question uh did the

426
00:17:32,299 --> 00:17:36,480
anti-cheat patent after 19th of May

427
00:17:36,480 --> 00:17:39,720
right uh did it get implemented into the

428
00:17:39,720 --> 00:17:42,660
recent and Nintendo games on Google Play

429
00:17:42,660 --> 00:17:46,919
uh no not that we've heard of yet

430
00:17:46,919 --> 00:17:48,720
um they just they announced the patent

431
00:17:48,720 --> 00:17:51,240
and that's as far as we know uh about

432
00:17:51,240 --> 00:17:53,039
the entity sheets we don't even know if

433
00:17:53,039 --> 00:17:55,860
it's been developed just that it's uh is

434
00:17:55,860 --> 00:17:58,140
it uh safe to assume or you probably

435
00:17:58,140 --> 00:18:00,660
didn't get the chance for the time to to

436
00:18:00,660 --> 00:18:04,320
investigate that if the same techniques

437
00:18:04,320 --> 00:18:08,520
work on the same Nintendo apps uh games

438
00:18:08,520 --> 00:18:10,620
that are published right now I haven't

439
00:18:10,620 --> 00:18:12,720
checked Mario Kart but I can attest that

440
00:18:12,720 --> 00:18:14,220
I've checked out other Nintendo games

441
00:18:14,220 --> 00:18:18,480
recently and the same techniques do work

442
00:18:18,480 --> 00:18:22,620
So yeah thank you nice presentation okay

443
00:18:22,620 --> 00:18:26,100
you we have another question over here

444
00:18:26,100 --> 00:18:30,059
just defaulted to your question

445
00:18:30,059 --> 00:18:32,700
um hey guys I just wanted to know I

446
00:18:32,700 --> 00:18:34,799
actually have two questions can I be

447
00:18:34,799 --> 00:18:37,320
very quick uh have you used something

448
00:18:37,320 --> 00:18:41,460
like cheat engine uh because it's like

449
00:18:41,460 --> 00:18:44,340
very useful in desktop games so have you

450
00:18:44,340 --> 00:18:46,980
used something like that here yep I grew

451
00:18:46,980 --> 00:18:48,960
up messing around with cheat engine

452
00:18:48,960 --> 00:18:50,820
um in this scenario we were hacking an

453
00:18:50,820 --> 00:18:52,860
Android app so it was easier to use

454
00:18:52,860 --> 00:18:55,860
something like Frida if it was a windows

455
00:18:55,860 --> 00:18:57,840
program I probably would have missed

456
00:18:57,840 --> 00:18:59,760
around this cheat engine as well nice

457
00:18:59,760 --> 00:19:01,320
access to memory so nothing similar to

458
00:19:01,320 --> 00:19:03,600
cheat engine for for Android that's what

459
00:19:03,600 --> 00:19:05,880
I was asking did it do something similar

460
00:19:05,880 --> 00:19:07,679
just Frida if there is something similar

461
00:19:07,679 --> 00:19:08,700
okay

462
00:19:08,700 --> 00:19:10,500
um I I don't know I don't know if there

463
00:19:10,500 --> 00:19:13,140
is a memory uh like a memory editor like

464
00:19:13,140 --> 00:19:15,000
that or if you've used it here but you

465
00:19:15,000 --> 00:19:16,559
say you've only used Frida for that

466
00:19:16,559 --> 00:19:19,140
freedom yeah but if you've used feeder

467
00:19:19,140 --> 00:19:21,480
right you can give it just as much power

468
00:19:21,480 --> 00:19:23,940
if not more than uh and the second one

469
00:19:23,940 --> 00:19:26,039
uh you I don't know if the presentation

470
00:19:26,039 --> 00:19:27,539
is over yet but it was something about

471
00:19:27,539 --> 00:19:31,500
patching you didn't tell us about how

472
00:19:31,500 --> 00:19:35,039
you you patched the application like did

473
00:19:35,039 --> 00:19:38,580
you use after hooking right in order to

474
00:19:38,580 --> 00:19:40,200
create an APK you need to patch it like

475
00:19:40,200 --> 00:19:42,120
to be compile it to Somali code and then

476
00:19:42,120 --> 00:19:43,860
edit this Mali code recompile it to an

477
00:19:43,860 --> 00:19:44,760
APK

478
00:19:44,760 --> 00:19:47,220
right so uh that the slides you're

479
00:19:47,220 --> 00:19:49,140
referring to uh we were talking about

480
00:19:49,140 --> 00:19:52,440
how security and game hacking have a lot

481
00:19:52,440 --> 00:19:55,500
in common right and in our scenario we

482
00:19:55,500 --> 00:19:57,059
didn't Focus too much on patching more

483
00:19:57,059 --> 00:19:59,460
on hooking um which is kind of I suppose

484
00:19:59,460 --> 00:20:02,100
on the Fly sort of patching right

485
00:20:02,100 --> 00:20:04,260
yeah we just hooked the functions

486
00:20:04,260 --> 00:20:05,880
um there was some patching involved but

487
00:20:05,880 --> 00:20:07,740
that was more uh with other with other

488
00:20:07,740 --> 00:20:10,679
tools uh things like the um IL to CPP

489
00:20:10,679 --> 00:20:12,179
dumper that we used

490
00:20:12,179 --> 00:20:14,340
um patches the binary as it loads into

491
00:20:14,340 --> 00:20:17,899
memory and uh yeah

492
00:20:21,720 --> 00:20:24,480
um there is certificate pinning

493
00:20:24,480 --> 00:20:28,740
um but not for the UDP packets for some

494
00:20:28,740 --> 00:20:31,380
of the API calls that were web requests

495
00:20:31,380 --> 00:20:34,919
that uh certificate yeah

496
00:20:34,919 --> 00:20:37,679
other questions yes I think we have

497
00:20:37,679 --> 00:20:40,520
another question here

498
00:20:40,860 --> 00:20:42,720
um what do you think about games going

499
00:20:42,720 --> 00:20:45,240
for uh more aggressive ventai cheats

500
00:20:45,240 --> 00:20:47,760
such as those either kernel level are

501
00:20:47,760 --> 00:20:51,179
they really that harder to bypass and

502
00:20:51,179 --> 00:20:54,360
are they safe for the user

503
00:20:54,360 --> 00:20:56,640
um I I'm definitely not an expert in

504
00:20:56,640 --> 00:20:59,460
attacking kernel level anti-cheat but I

505
00:20:59,460 --> 00:21:01,860
do think it is a lot harder

506
00:21:01,860 --> 00:21:02,520
um

507
00:21:02,520 --> 00:21:04,919
I would imagine

508
00:21:04,919 --> 00:21:07,140
um yeah I I'm not a huge fan of that

509
00:21:07,140 --> 00:21:08,460
obviously I don't like people cheating

510
00:21:08,460 --> 00:21:09,720
in games either but I don't like

511
00:21:09,720 --> 00:21:11,880
anything running in my kernel that yeah

512
00:21:11,880 --> 00:21:15,000
is just there yeah

513
00:21:15,000 --> 00:21:17,720
it's a good question

514
00:21:19,700 --> 00:21:22,679
okay uh we have another question over

515
00:21:22,679 --> 00:21:25,260
here another question over there please

516
00:21:25,260 --> 00:21:28,440
hello nice presentation thank you can we

517
00:21:28,440 --> 00:21:30,659
read somewhere more details on your

518
00:21:30,659 --> 00:21:32,880
research

519
00:21:32,880 --> 00:21:36,000
um we have a paper uh if you want to

520
00:21:36,000 --> 00:21:38,880
read a technical paper yep um yeah uh

521
00:21:38,880 --> 00:21:40,260
yeah we can definitely give you access

522
00:21:40,260 --> 00:21:42,720
to that uh we have our um our context

523
00:21:42,720 --> 00:21:44,220
we're in the slides

524
00:21:44,220 --> 00:21:46,020
um okay if you just email one of us

525
00:21:46,020 --> 00:21:48,360
we'll be happy to give you access thank

526
00:21:48,360 --> 00:21:50,479
you

527
00:21:51,480 --> 00:21:53,640
so next question

528
00:21:53,640 --> 00:21:55,679
fix the Hat

529
00:21:55,679 --> 00:21:58,220
hello

530
00:22:00,600 --> 00:22:03,139
okay

531
00:22:03,260 --> 00:22:07,260
uh quick question so uh first of all the

532
00:22:07,260 --> 00:22:09,419
second account that you managed to use

533
00:22:09,419 --> 00:22:12,780
the bullet heck did it get banned in the

534
00:22:12,780 --> 00:22:15,240
end or did it manage to stay and bend uh

535
00:22:15,240 --> 00:22:19,020
no we we remain number one for a week

536
00:22:19,020 --> 00:22:21,900
and as far as I know that account is

537
00:22:21,900 --> 00:22:23,940
still active well it's not active we're

538
00:22:23,940 --> 00:22:26,880
not using it but it hasn't been bad is

539
00:22:26,880 --> 00:22:28,980
what I'm saying and uh one more quick

540
00:22:28,980 --> 00:22:32,520
question from your research uh did you

541
00:22:32,520 --> 00:22:34,980
hear of any anti-chat method that

542
00:22:34,980 --> 00:22:38,400
protects from using Frida for trying to

543
00:22:38,400 --> 00:22:40,919
hack the application

544
00:22:40,919 --> 00:22:43,200
um uh the author of Freedom South Ole

545
00:22:43,200 --> 00:22:46,080
has mentioned that he stumbled upon

546
00:22:46,080 --> 00:22:48,659
anti-freeder techniques being used in

547
00:22:48,659 --> 00:22:50,520
applications but according to him it's

548
00:22:50,520 --> 00:22:52,260
futile to try and do something like that

549
00:22:52,260 --> 00:22:53,700
because Fida sits on top of the

550
00:22:53,700 --> 00:22:55,200
application so you can always patch the

551
00:22:55,200 --> 00:22:58,520
functions that are looking for freedom

552
00:23:01,500 --> 00:23:04,980
okay uh let's see if we have any other

553
00:23:04,980 --> 00:23:06,539
questions

554
00:23:06,539 --> 00:23:10,580
yes we do have another question

555
00:23:14,480 --> 00:23:17,700
regarding time I'm only asking for the

556
00:23:17,700 --> 00:23:21,360
neighbor of my brother's friend is his

557
00:23:21,360 --> 00:23:23,460
timeliner on GitHub

558
00:23:23,460 --> 00:23:27,360
it's not will it be uh if I can work out

559
00:23:27,360 --> 00:23:29,520
some Kinks and make it worth worth your

560
00:23:29,520 --> 00:23:31,320
while to actually use yeah even with

561
00:23:31,320 --> 00:23:33,299
contributions from the uh from my

562
00:23:33,299 --> 00:23:36,360
neighbor's brother's friend what I can

563
00:23:36,360 --> 00:23:38,340
recommend what I can recommend is that

564
00:23:38,340 --> 00:23:39,659
uh other

565
00:23:39,659 --> 00:23:41,400
um project that I mentioned that I uh

566
00:23:41,400 --> 00:23:44,360
Freda ilcp Bridge

567
00:23:44,360 --> 00:23:47,820
has a tracing function uh integrated

568
00:23:47,820 --> 00:23:49,440
into it which does the same thing as

569
00:23:49,440 --> 00:23:52,140
timeliner just in your terminal you

570
00:23:52,140 --> 00:23:53,340
could easily write a little Jupiter

571
00:23:53,340 --> 00:23:55,679
notebook that integrates with that

572
00:23:55,679 --> 00:23:56,900
sure

573
00:23:56,900 --> 00:23:59,460
awesome presentation guys thank you so

574
00:23:59,460 --> 00:24:01,580
much let's have a round of applause

575
00:24:01,580 --> 00:24:08,020
[Applause]

