1
00:00:00,000 --> 00:00:01,560
on and thank you for coming to this

2
00:00:01,560 --> 00:00:04,920
presentation I'm Andre and I will talk

3
00:00:04,920 --> 00:00:07,680
today about automation open source and

4
00:00:07,680 --> 00:00:09,919
security

5
00:00:10,679 --> 00:00:13,259
I want to start with a little story a

6
00:00:13,259 --> 00:00:15,660
story about an economic jungle

7
00:00:15,660 --> 00:00:18,300
in this jungle there are multiple

8
00:00:18,300 --> 00:00:21,779
animals and uh the lives of these

9
00:00:21,779 --> 00:00:25,019
animals unfolds they divorce in multiple

10
00:00:25,019 --> 00:00:26,939
characteristics namely number of

11
00:00:26,939 --> 00:00:28,160
employees

12
00:00:28,160 --> 00:00:30,900
Revenue business model and security

13
00:00:30,900 --> 00:00:32,640
posture

14
00:00:32,640 --> 00:00:35,700
but in difference to the mighty jungle

15
00:00:35,700 --> 00:00:38,160
in which the lion sleeps here the

16
00:00:38,160 --> 00:00:41,280
Predators are alive are awake and are

17
00:00:41,280 --> 00:00:43,640
hungry

18
00:00:44,340 --> 00:00:47,160
but in difference to the mighty jungle

19
00:00:47,160 --> 00:00:49,860
that we already know here uh the

20
00:00:49,860 --> 00:00:53,640
Predators doesn't sleep they want to do

21
00:00:53,640 --> 00:00:56,160
they doesn't want to kill other animals

22
00:00:56,160 --> 00:00:58,079
they want to steal their resources

23
00:00:58,079 --> 00:01:00,719
and the explanation here is that if you

24
00:01:00,719 --> 00:01:03,059
have a damaged animal they will heal

25
00:01:03,059 --> 00:01:05,280
themselves and they will produce other

26
00:01:05,280 --> 00:01:06,659
resources

27
00:01:06,659 --> 00:01:11,960
and you you can hunt them uh later

28
00:01:12,060 --> 00:01:15,420
uh in this in this graph we can see that

29
00:01:15,420 --> 00:01:18,299
uh we can see the percentage of the 80

30
00:01:18,299 --> 00:01:21,479
budget that is allocated by each company

31
00:01:21,479 --> 00:01:24,240
in in security and they will say a

32
00:01:24,240 --> 00:01:26,640
no-brainer but if you multiply this

33
00:01:26,640 --> 00:01:30,840
percentage with the uh ID budget we can

34
00:01:30,840 --> 00:01:32,880
determine that the security budget for

35
00:01:32,880 --> 00:01:37,860
small companies is uh is uh less for

36
00:01:37,860 --> 00:01:40,020
small companies that than than for the

37
00:01:40,020 --> 00:01:43,140
big ones and in addition the percentage

38
00:01:43,140 --> 00:01:44,220
of

39
00:01:44,220 --> 00:01:47,159
of this budget that can be invested in

40
00:01:47,159 --> 00:01:51,420
I.T for example for the evolution of the

41
00:01:51,420 --> 00:01:54,840
I.T infrastructure is is less for small

42
00:01:54,840 --> 00:01:56,759
companies than for the big the biggest

43
00:01:56,759 --> 00:02:00,540
one the the biggest one

44
00:02:00,540 --> 00:02:02,880
and we in this jungle that I already

45
00:02:02,880 --> 00:02:05,040
presented there are two type of animals

46
00:02:05,040 --> 00:02:07,920
there are uh

47
00:02:07,920 --> 00:02:09,959
there are two type of animals here we

48
00:02:09,959 --> 00:02:12,180
have Google like elephants and we will

49
00:02:12,180 --> 00:02:15,959
see that are zebras too

50
00:02:15,959 --> 00:02:18,420
to give you some numbers about about

51
00:02:18,420 --> 00:02:20,760
these elephants we can we can talk about

52
00:02:20,760 --> 00:02:23,819
Google and they have three digits uh

53
00:02:23,819 --> 00:02:26,760
three digit uh billion dollars Revenue

54
00:02:26,760 --> 00:02:31,260
in 2021. in addition uh there they own

55
00:02:31,260 --> 00:02:35,819
uh 10 of multi-billion dollars industry

56
00:02:35,819 --> 00:02:40,020
um Cloud industry but to to come to come

57
00:02:40,020 --> 00:02:43,080
back to to the security part uh we have

58
00:02:43,080 --> 00:02:45,180
this playlist these are some playlists

59
00:02:45,180 --> 00:02:48,540
that Google that Google published one

60
00:02:48,540 --> 00:02:51,239
month ago in which they described uh

61
00:02:51,239 --> 00:02:56,040
their evolution since 29 uh 2009 uh then

62
00:02:56,040 --> 00:02:58,739
they had this operation Aurora in which

63
00:02:58,739 --> 00:03:01,920
the Chinese the Chinese people broke up

64
00:03:01,920 --> 00:03:04,980
their infrastructure and wanted to to

65
00:03:04,980 --> 00:03:07,500
steal their information and since then

66
00:03:07,500 --> 00:03:08,940
they invested a lot in their

67
00:03:08,940 --> 00:03:11,220
infrastructure the infrastructure that

68
00:03:11,220 --> 00:03:15,720
is uh shared with their clients

69
00:03:15,720 --> 00:03:18,659
and to summarize the characteristic of

70
00:03:18,659 --> 00:03:21,300
of this this type of animals we can we

71
00:03:21,300 --> 00:03:23,700
can see we can see that they have the

72
00:03:23,700 --> 00:03:26,640
budget to invest in best-in-class uh

73
00:03:26,640 --> 00:03:29,819
cyber Security Solutions they have uh

74
00:03:29,819 --> 00:03:32,580
socks in-house or outsourced to other

75
00:03:32,580 --> 00:03:37,640
mssps uh we have uh in-house fantastic

76
00:03:37,640 --> 00:03:40,980
teams uh threat hunting teams maybe bug

77
00:03:40,980 --> 00:03:43,440
Bounty programs in which they can pay

78
00:03:43,440 --> 00:03:47,220
other people from the internet to hunt

79
00:03:47,220 --> 00:03:49,739
their vulnerabilities to from systems

80
00:03:49,739 --> 00:03:52,200
that are Exposed on the internet and

81
00:03:52,200 --> 00:03:54,260
hard usage of configuration management

82
00:03:54,260 --> 00:03:56,819
and this is because they have a lot of

83
00:03:56,819 --> 00:03:58,799
Specialists and these Specialists can

84
00:03:58,799 --> 00:04:00,720
learn domain specific languages like

85
00:04:00,720 --> 00:04:04,019
ansible Chef or or puppet

86
00:04:04,019 --> 00:04:07,140
on the other hand we we have zebras and

87
00:04:07,140 --> 00:04:09,239
here I I want to invite you to make an

88
00:04:09,239 --> 00:04:11,299
imagination exercise and think about

89
00:04:11,299 --> 00:04:14,819
this small I.T Outsourcing company and

90
00:04:14,819 --> 00:04:17,940
let's tame it zagazaga

91
00:04:17,940 --> 00:04:19,918
uh to to give you a little glimpse into

92
00:04:19,918 --> 00:04:23,460
what security means we can see this gig

93
00:04:23,460 --> 00:04:27,300
on Fiverr this guy for 42 Euros will

94
00:04:27,300 --> 00:04:30,900
install vasu which is an xdr and CM

95
00:04:30,900 --> 00:04:34,699
and its agents and Audi do

96
00:04:34,699 --> 00:04:37,139
sakasaga will benefit from an offer like

97
00:04:37,139 --> 00:04:38,639
this because they don't have the

98
00:04:38,639 --> 00:04:41,460
specialist to to invest in this kind of

99
00:04:41,460 --> 00:04:43,320
projects

100
00:04:43,320 --> 00:04:46,020
and to to to give you a list of the

101
00:04:46,020 --> 00:04:47,940
characteristics for for the zaga zaga

102
00:04:47,940 --> 00:04:50,280
like zebra we have open source or

103
00:04:50,280 --> 00:04:52,620
entry-level Solutions because they don't

104
00:04:52,620 --> 00:04:55,380
uh have the budget to invest in other

105
00:04:55,380 --> 00:04:57,720
security and in other modern security

106
00:04:57,720 --> 00:05:01,740
Security Solutions uh they all they own

107
00:05:01,740 --> 00:05:04,919
few security specialist or none at all

108
00:05:04,919 --> 00:05:08,340
and they do a lot of manual work because

109
00:05:08,340 --> 00:05:12,180
of the lack of the expertise and the

110
00:05:12,180 --> 00:05:14,460
lack of the time

111
00:05:14,460 --> 00:05:16,800
at the moment at this moment you may ask

112
00:05:16,800 --> 00:05:18,780
but Andrei I came to this presentation

113
00:05:18,780 --> 00:05:21,180
to talk about open source what's this

114
00:05:21,180 --> 00:05:25,080
zaga zaga uh animal uh

115
00:05:25,080 --> 00:05:27,000
what's what's the link between these

116
00:05:27,000 --> 00:05:29,460
animals and your open source open source

117
00:05:29,460 --> 00:05:31,139
program

118
00:05:31,139 --> 00:05:34,500
and uh to to respond to respond to this

119
00:05:34,500 --> 00:05:37,380
we have we want to Target with mutable

120
00:05:37,380 --> 00:05:40,500
security the animals that are the most

121
00:05:40,500 --> 00:05:43,440
vulnerable in this jungle

122
00:05:43,440 --> 00:05:45,840
mutable security is a platform for

123
00:05:45,840 --> 00:05:49,259
automating the automation to automate

124
00:05:49,259 --> 00:05:51,479
the setup configuration and the

125
00:05:51,479 --> 00:05:53,940
management of cyber security solution

126
00:05:53,940 --> 00:05:57,419
you can you can think of this as a tool

127
00:05:57,419 --> 00:05:59,280
that can be used by it and Security

128
00:05:59,280 --> 00:06:01,800
Professionals with smaller medium

129
00:06:01,800 --> 00:06:05,460
infrastructures to deploy cyber Security

130
00:06:05,460 --> 00:06:07,740
Solutions to configure them initially

131
00:06:07,740 --> 00:06:11,280
and after that to test them to further

132
00:06:11,280 --> 00:06:14,460
configure them to Monitor and to update

133
00:06:14,460 --> 00:06:17,580
and it is it is the if it is the case to

134
00:06:17,580 --> 00:06:19,560
uninstall them

135
00:06:19,560 --> 00:06:22,080
at the moment we published this open

136
00:06:22,080 --> 00:06:24,240
source project on GitHub

137
00:06:24,240 --> 00:06:26,639
and we support only Linux virtual

138
00:06:26,639 --> 00:06:29,039
machines

139
00:06:29,039 --> 00:06:31,740
in addition there are multiple cyber

140
00:06:31,740 --> 00:06:33,660
Security Solutions that are implemented

141
00:06:33,660 --> 00:06:35,759
as modules in mutable security and time

142
00:06:35,759 --> 00:06:37,620
retailer which is on web intrusion

143
00:06:37,620 --> 00:06:39,000
detection system

144
00:06:39,000 --> 00:06:42,060
failed to ban which is a host IPS

145
00:06:42,060 --> 00:06:44,039
surikata which is a network intrusion

146
00:06:44,039 --> 00:06:45,960
detection system searchboard for

147
00:06:45,960 --> 00:06:48,199
generating SSL certificates

148
00:06:48,199 --> 00:06:52,440
for detective malware on operating

149
00:06:52,440 --> 00:06:54,900
system or Linux operating systems and

150
00:06:54,900 --> 00:06:58,259
Vector for shipping logs to grafana

151
00:06:58,259 --> 00:07:01,919
uh in addition we have two more modules

152
00:07:01,919 --> 00:07:03,419
that are work in progress namely

153
00:07:03,419 --> 00:07:06,000
duplicate for uh generating and

154
00:07:06,000 --> 00:07:09,000
restoring backups and Wazoo which is the

155
00:07:09,000 --> 00:07:11,580
CM and xdr that I that I previewed

156
00:07:11,580 --> 00:07:14,220
previously mentioned

157
00:07:14,220 --> 00:07:18,840
and to to switch to a realistic scenario

158
00:07:18,840 --> 00:07:22,740
we will try to hack and defend zagazaga

159
00:07:22,740 --> 00:07:26,099
in this instance in this C4 diagram we

160
00:07:26,099 --> 00:07:28,979
can see that there is a server a server

161
00:07:28,979 --> 00:07:31,139
that hosts a website

162
00:07:31,139 --> 00:07:34,560
uh this this server basically serves

163
00:07:34,560 --> 00:07:37,080
some pages to the real users of zaga

164
00:07:37,080 --> 00:07:39,120
zaga in addition we have a remote access

165
00:07:39,120 --> 00:07:42,599
server an open SSH that lets a private a

166
00:07:42,599 --> 00:07:44,099
lot of privileged user

167
00:07:44,099 --> 00:07:47,479
to access the website and administer it

168
00:07:47,479 --> 00:07:52,800
and uh this website and server as it is

169
00:07:52,800 --> 00:07:55,919
exposed on the internet uh will uh will

170
00:07:55,919 --> 00:07:58,020
be attacked by some random guys on the

171
00:07:58,020 --> 00:07:59,699
internet who hacks all the things that

172
00:07:59,699 --> 00:08:02,940
are uh vulnerable and unsecure

173
00:08:02,940 --> 00:08:05,699
let's suppose that these uh it

174
00:08:05,699 --> 00:08:08,639
administer that deals with the security

175
00:08:08,639 --> 00:08:10,680
and the infrastructure zaga zaga

176
00:08:10,680 --> 00:08:15,979
discover mutable security what can he do

177
00:08:16,800 --> 00:08:19,740
um in the index in the infrastructure

178
00:08:19,740 --> 00:08:22,680
before we doesn't have this this cyber

179
00:08:22,680 --> 00:08:25,080
Security Solutions there is on web ideas

180
00:08:25,080 --> 00:08:28,680
that will detect the attacks on the web

181
00:08:28,680 --> 00:08:31,560
server we have this remote we have this

182
00:08:31,560 --> 00:08:33,958
host type yes that will inspect the

183
00:08:33,958 --> 00:08:36,539
dialers others that are generated by by

184
00:08:36,539 --> 00:08:39,299
teller and in addition we'll monitor the

185
00:08:39,299 --> 00:08:41,399
remote access server and will block the

186
00:08:41,399 --> 00:08:42,599
attackers

187
00:08:42,599 --> 00:08:44,459
uh the third solution that we can

188
00:08:44,459 --> 00:08:46,860
install at the at this moment is the log

189
00:08:46,860 --> 00:08:50,100
shipper namely Victory it will collect

190
00:08:50,100 --> 00:08:52,080
the logs that are generated by the host

191
00:08:52,080 --> 00:08:55,200
IPS and the web IDs and will ship them

192
00:08:55,200 --> 00:08:57,360
to a graph on a cloud instance that will

193
00:08:57,360 --> 00:08:59,880
store the logs into a lock key into

194
00:08:59,880 --> 00:09:02,580
locking uh instance and will display

195
00:09:02,580 --> 00:09:06,959
them in in dashboards using grafana

196
00:09:06,959 --> 00:09:11,300
and to switch to a demo

197
00:09:20,040 --> 00:09:22,200
a little a little observation here is

198
00:09:22,200 --> 00:09:24,420
that we have two type of slides the

199
00:09:24,420 --> 00:09:26,399
first the first type is a red one in

200
00:09:26,399 --> 00:09:28,260
which we are in the shoes of an attacker

201
00:09:28,260 --> 00:09:31,380
and there are purple ones in which uh we

202
00:09:31,380 --> 00:09:33,360
can think about ourselves at it

203
00:09:33,360 --> 00:09:37,019
administers at Saga zaga with mutable

204
00:09:37,019 --> 00:09:38,880
Security in our hands

205
00:09:38,880 --> 00:09:41,160
the first step was an attacker is to

206
00:09:41,160 --> 00:09:44,580
discover the the website of zaga zaga on

207
00:09:44,580 --> 00:09:46,880
internet

208
00:09:52,320 --> 00:09:55,640
yeah I'll stay here

209
00:09:55,980 --> 00:09:58,380
as you can see the attacker will will

210
00:09:58,380 --> 00:10:00,420
visit the pages that are available on

211
00:10:00,420 --> 00:10:02,100
the website by clicking by clicking

212
00:10:02,100 --> 00:10:04,680
these random buttons on the website and

213
00:10:04,680 --> 00:10:07,680
we as we can see the the last part of

214
00:10:07,680 --> 00:10:11,640
the URL with uh with this view parameter

215
00:10:11,640 --> 00:10:14,100
is changing and you may think about this

216
00:10:14,100 --> 00:10:16,680
as a path and we will see later that

217
00:10:16,680 --> 00:10:18,660
there is a local file inclusion

218
00:10:18,660 --> 00:10:20,700
vulnerability involved

219
00:10:20,700 --> 00:10:24,180
after this information we can switch the

220
00:10:24,180 --> 00:10:26,459
attack to a scanning to a scanning phase

221
00:10:26,459 --> 00:10:29,940
in which we will use nmap with two two

222
00:10:29,940 --> 00:10:34,200
flags namely SV and SC for scanning the

223
00:10:34,200 --> 00:10:35,880
server that is exposed on the internet

224
00:10:35,880 --> 00:10:39,540
SV and SC are used for uh letting and

225
00:10:39,540 --> 00:10:43,140
map to scan with the default script and

226
00:10:43,140 --> 00:10:47,100
the the other is for Banner grabbing and

227
00:10:47,100 --> 00:10:49,200
we can see that there are two open ports

228
00:10:49,200 --> 00:10:52,260
here namely the open SSH and the nginx

229
00:10:52,260 --> 00:10:53,700
one

230
00:10:53,700 --> 00:10:55,920
we can validate afterwards the local

231
00:10:55,920 --> 00:10:58,200
fine inclusion vulnerability

232
00:10:58,200 --> 00:11:02,640
by making a curl with the data slash

233
00:11:02,640 --> 00:11:05,820
sequence and an Etsy machine ID

234
00:11:05,820 --> 00:11:08,279
and we can see that in the response

235
00:11:08,279 --> 00:11:11,459
there is also a hash that identifies a

236
00:11:11,459 --> 00:11:14,000
virtual machine

237
00:11:14,760 --> 00:11:18,540
after that we can check if the if on SSH

238
00:11:18,540 --> 00:11:22,019
white listing mechanism is involved and

239
00:11:22,019 --> 00:11:25,140
we can we will see that no none of this

240
00:11:25,140 --> 00:11:28,200
is so is enabled

241
00:11:28,200 --> 00:11:31,140
yeah we assh and we can see that the

242
00:11:31,140 --> 00:11:32,940
random password that we introduce is

243
00:11:32,940 --> 00:11:34,019
invalid

244
00:11:34,019 --> 00:11:37,560
so the the web server the remote server

245
00:11:37,560 --> 00:11:39,660
will respond to any user from the

246
00:11:39,660 --> 00:11:42,779
internet we can automate this with a

247
00:11:42,779 --> 00:11:45,000
python script

248
00:11:45,000 --> 00:11:47,279
with four functions the first two are

249
00:11:47,279 --> 00:11:52,140
for uh checking is the if the lfi is is

250
00:11:52,140 --> 00:11:56,160
enabled and the other two for uh

251
00:11:56,160 --> 00:11:58,920
for iterating through a dictionary and

252
00:11:58,920 --> 00:12:02,839
Brute Force the SSH server

253
00:12:03,240 --> 00:12:07,260
after running this the HTTP request is

254
00:12:07,260 --> 00:12:09,660
done and we can see that the root entry

255
00:12:09,660 --> 00:12:11,700
is found in the exit password that is

256
00:12:11,700 --> 00:12:13,860
returned in the content of the page and

257
00:12:13,860 --> 00:12:16,800
after that some credentials are reported

258
00:12:16,800 --> 00:12:20,760
as invalid but after this dummy dummy

259
00:12:20,760 --> 00:12:25,880
password this password parola uh pass

260
00:12:26,339 --> 00:12:31,399
the the valid one is so is detected

261
00:12:32,519 --> 00:12:35,339
after this we will switch to the shoes

262
00:12:35,339 --> 00:12:38,100
of a Defender which will use mutable

263
00:12:38,100 --> 00:12:40,640
security to to install cyber Security

264
00:12:40,640 --> 00:12:43,380
Solutions at first we want to install

265
00:12:43,380 --> 00:12:46,320
teller which is the web IDs at this

266
00:12:46,320 --> 00:12:49,680
moment we run mutable security and we

267
00:12:49,680 --> 00:12:52,200
can see that multiple Solutions are are

268
00:12:52,200 --> 00:12:54,600
available namely surikata fail to ban

269
00:12:54,600 --> 00:12:57,300
Etc and some operations in this screen

270
00:12:57,300 --> 00:12:59,519
we can see that there are multiple of

271
00:12:59,519 --> 00:13:02,279
objects implemented namely actions

272
00:13:02,279 --> 00:13:06,000
informations log sources and tests

273
00:13:06,000 --> 00:13:09,000
but we are interested at this moment to

274
00:13:09,000 --> 00:13:11,700
configure the the solution with the init

275
00:13:11,700 --> 00:13:13,860
operation

276
00:13:13,860 --> 00:13:15,420
uh

277
00:13:15,420 --> 00:13:17,880
a file is generated like in kubernetes

278
00:13:17,880 --> 00:13:20,880
and we can change this with the values

279
00:13:20,880 --> 00:13:23,519
that better represent our infrastructure

280
00:13:23,519 --> 00:13:27,800
we then use the install operation

281
00:13:29,880 --> 00:13:32,540
and after some minutes in which the

282
00:13:32,540 --> 00:13:34,380
executables are retrieved from the

283
00:13:34,380 --> 00:13:36,240
internet and the solution since the

284
00:13:36,240 --> 00:13:38,700
solution is installed we can use the get

285
00:13:38,700 --> 00:13:40,740
information operation in order to

286
00:13:40,740 --> 00:13:42,540
retrieve the configuration that is set

287
00:13:42,540 --> 00:13:45,720
to the security solution

288
00:13:45,720 --> 00:13:48,779
and the some metrics about its

289
00:13:48,779 --> 00:13:51,200
functioning

290
00:13:53,760 --> 00:13:56,700
the next operation involved is testing

291
00:13:56,700 --> 00:13:59,459
namely executing a battery of tests

292
00:13:59,459 --> 00:14:02,399
against the solution that we installed

293
00:14:02,399 --> 00:14:04,500
and in this table we can see the

294
00:14:04,500 --> 00:14:08,399
identifier what did the test was about

295
00:14:08,399 --> 00:14:11,480
and the value that represents a Boolean

296
00:14:11,480 --> 00:14:16,260
which she states that the tests are

297
00:14:16,260 --> 00:14:18,360
executed correct are executed correctly

298
00:14:18,360 --> 00:14:21,120
we can see here the locks the logs that

299
00:14:21,120 --> 00:14:24,060
are produced and then we switch to fail

300
00:14:24,060 --> 00:14:27,120
to ban in order to detect and block SSH

301
00:14:27,120 --> 00:14:28,680
Brute Force

302
00:14:28,680 --> 00:14:30,959
as previously you will use mutable

303
00:14:30,959 --> 00:14:34,200
security at this moment with the minus s

304
00:14:34,200 --> 00:14:38,639
flag with with failed to ban as value

305
00:14:38,639 --> 00:14:42,260
we can see its objects

306
00:14:43,260 --> 00:14:46,800
and with minus o in it we generate the

307
00:14:46,800 --> 00:14:49,680
initial configuration

308
00:14:49,680 --> 00:14:52,199
as previously the the values that are

309
00:14:52,199 --> 00:14:55,380
already up there the default one are

310
00:14:55,380 --> 00:14:58,199
okay for us and we can use the install

311
00:14:58,199 --> 00:15:00,859
operation

312
00:15:02,480 --> 00:15:05,880
after some some seconds the solution

313
00:15:05,880 --> 00:15:09,199
will be installed

314
00:15:12,060 --> 00:15:14,940
and we will use the get information in

315
00:15:14,940 --> 00:15:17,339
order to see its configuration and

316
00:15:17,339 --> 00:15:18,779
metrics

317
00:15:18,779 --> 00:15:21,899
in this case for example the jails that

318
00:15:21,899 --> 00:15:24,959
are enabled in in fail to ban the band

319
00:15:24,959 --> 00:15:28,320
seconds of the band IPS

320
00:15:28,320 --> 00:15:30,180
Etc

321
00:15:30,180 --> 00:15:32,880
then the test operation is used the same

322
00:15:32,880 --> 00:15:35,040
battery of test is executed and we can

323
00:15:35,040 --> 00:15:36,959
see that all of all of them paths are

324
00:15:36,959 --> 00:15:39,380
passing

325
00:15:39,620 --> 00:15:44,000
and uh the get locks of the get locks of

326
00:15:44,000 --> 00:15:46,620
operation with minus E for for

327
00:15:46,620 --> 00:15:50,100
specifying the uh identifier in order to

328
00:15:50,100 --> 00:15:53,279
see the the the logs that are exposed by

329
00:15:53,279 --> 00:15:56,279
by fell to blend

330
00:15:56,279 --> 00:15:59,519
we switch to the attacker position and

331
00:15:59,519 --> 00:16:02,399
we will observe that we will get banned

332
00:16:02,399 --> 00:16:05,959
after some some requests

333
00:16:06,600 --> 00:16:09,600
the LF files is still available

334
00:16:09,600 --> 00:16:13,880
but the Brute Force fails

335
00:16:18,660 --> 00:16:21,720
okay now we want to unban an IP namely

336
00:16:21,720 --> 00:16:25,320
to use an action that is exposed on on

337
00:16:25,320 --> 00:16:27,360
mutable security

338
00:16:27,360 --> 00:16:30,779
we use minus as fail to ban with the get

339
00:16:30,779 --> 00:16:33,420
information of operation

340
00:16:33,420 --> 00:16:36,540
in order to see the band IPS and we can

341
00:16:36,540 --> 00:16:38,519
see two of them

342
00:16:38,519 --> 00:16:42,240
and now I switch to an ipgo location in

343
00:16:42,240 --> 00:16:47,120
order to see what the second IP is

344
00:16:47,220 --> 00:16:50,639
and yeah this is my IP

345
00:16:50,639 --> 00:16:53,160
and another random guy on the internet

346
00:16:53,160 --> 00:16:56,940
who won in like turn three minutes

347
00:16:56,940 --> 00:16:59,519
wanted to brute force that SSH server

348
00:16:59,519 --> 00:17:01,820
that is exposed on the internet okay

349
00:17:01,820 --> 00:17:06,780
coming back we we embed that IP

350
00:17:06,780 --> 00:17:10,500
as previously we we use fail to ban in

351
00:17:10,500 --> 00:17:15,559
order to to see the the exposed objects

352
00:17:16,919 --> 00:17:21,359
we'll use the minus o execute

353
00:17:21,359 --> 00:17:24,678
after this operation

354
00:17:30,059 --> 00:17:32,160
yeah we can see the two IPS that are

355
00:17:32,160 --> 00:17:34,620
that are blocked at the moment

356
00:17:34,620 --> 00:17:37,020
here

357
00:17:37,020 --> 00:17:39,840
and minus o execute with the minus E

358
00:17:39,840 --> 00:17:42,000
identifier in

359
00:17:42,000 --> 00:17:43,740
with unban

360
00:17:43,740 --> 00:17:46,440
and a list of arguments namely the the

361
00:17:46,440 --> 00:17:48,000
jail name

362
00:17:48,000 --> 00:17:51,200
which is sshd

363
00:17:53,460 --> 00:17:55,320
thank you

364
00:17:55,320 --> 00:18:00,020
and the IP that we want to unban

365
00:18:01,980 --> 00:18:04,860
after running this operation we can make

366
00:18:04,860 --> 00:18:07,459
requests again

367
00:18:14,580 --> 00:18:17,880
yeah we we now try to integrate the

368
00:18:17,880 --> 00:18:20,640
teller that is able only to detect web

369
00:18:20,640 --> 00:18:22,860
attacks with fail to Ben which is used

370
00:18:22,860 --> 00:18:26,880
to to block an attacker uh for this we

371
00:18:26,880 --> 00:18:29,460
can use an information that is exposed

372
00:18:29,460 --> 00:18:31,260
on mutable security which is failed to

373
00:18:31,260 --> 00:18:33,960
fail to paint integration with minus as

374
00:18:33,960 --> 00:18:36,600
Stellar minus o set information and the

375
00:18:36,600 --> 00:18:39,120
identifier of that information namely

376
00:18:39,120 --> 00:18:41,760
failed to ban integration and we set it

377
00:18:41,760 --> 00:18:44,539
to true

378
00:18:50,760 --> 00:18:54,419
in some moments it will pass

379
00:18:54,419 --> 00:18:56,460
and we switch to the attacker position

380
00:18:56,460 --> 00:19:00,120
and try to execute in dlfi again and

381
00:19:00,120 --> 00:19:02,160
getting banned

382
00:19:02,160 --> 00:19:05,520
here I used a for Loop and after some

383
00:19:05,520 --> 00:19:09,059
some requests or Taylor will produce the

384
00:19:09,059 --> 00:19:12,840
logs for this attacker and fail to ban

385
00:19:12,840 --> 00:19:15,660
will retrieve them and uh and will bend

386
00:19:15,660 --> 00:19:18,000
the IP

387
00:19:18,000 --> 00:19:20,100
we switch back to to the defender

388
00:19:20,100 --> 00:19:23,280
position and now we will install Vector

389
00:19:23,280 --> 00:19:25,320
which is a log shipper developed by the

390
00:19:25,320 --> 00:19:28,080
datadog will which will retrieve the

391
00:19:28,080 --> 00:19:30,780
logs that are produced by uh by uh fail

392
00:19:30,780 --> 00:19:33,900
to ban and the upteller and send them to

393
00:19:33,900 --> 00:19:37,860
to a grafana instance in in Cloud

394
00:19:37,860 --> 00:19:42,000
as previously we use minus o o init for

395
00:19:42,000 --> 00:19:45,120
initializing this but as the default

396
00:19:45,120 --> 00:19:49,860
configuration is not good here I I just

397
00:19:49,860 --> 00:19:53,340
use another file from from from the disk

398
00:19:53,340 --> 00:19:56,039
and here we have things like the

399
00:19:56,039 --> 00:20:00,120
endpoint a token and a user and at the

400
00:20:00,120 --> 00:20:02,039
top or list of the enabled Solutions

401
00:20:02,039 --> 00:20:05,580
namely fail to ban and Teller that we

402
00:20:05,580 --> 00:20:08,659
previously installed

403
00:20:12,720 --> 00:20:15,539
it will be installed in some seconds and

404
00:20:15,539 --> 00:20:20,179
after this we can get its information

405
00:20:25,140 --> 00:20:28,580
and testing it

406
00:20:34,740 --> 00:20:39,440
we can go to grafana In This Moment

407
00:20:39,720 --> 00:20:42,780
and in the lock sources in the log

408
00:20:42,780 --> 00:20:45,419
sources section we can see that lock is

409
00:20:45,419 --> 00:20:48,780
enabled we can test that the labels can

410
00:20:48,780 --> 00:20:49,980
be retrieved

411
00:20:49,980 --> 00:20:52,500
and in the explore section we can set

412
00:20:52,500 --> 00:20:56,520
the label uh from for source and the

413
00:20:56,520 --> 00:20:58,860
source of the logs namely failed to bend

414
00:20:58,860 --> 00:21:01,020
logs in in this example

415
00:21:01,020 --> 00:21:04,020
and we can see that in in the last

416
00:21:04,020 --> 00:21:07,919
minutes the logs from fail to band were

417
00:21:07,919 --> 00:21:09,240
sent

418
00:21:09,240 --> 00:21:13,520
and the same thing for for teller

419
00:21:18,720 --> 00:21:21,299
after all of the all of this I wanted to

420
00:21:21,299 --> 00:21:24,179
to let this virtual machine on on the

421
00:21:24,179 --> 00:21:27,000
internet 24 hours and see how many

422
00:21:27,000 --> 00:21:29,760
random guys on the internet wants wants

423
00:21:29,760 --> 00:21:32,880
to to brute force that SSH server

424
00:21:32,880 --> 00:21:36,059
and there are multiple lists so you will

425
00:21:36,059 --> 00:21:36,840
see

426
00:21:36,840 --> 00:21:39,780
with getting with the get information

427
00:21:39,780 --> 00:21:42,900
operation we can see that this is the

428
00:21:42,900 --> 00:21:46,020
list of of guys from the internet that

429
00:21:46,020 --> 00:21:48,720
wanted to Bruce force it coming back to

430
00:21:48,720 --> 00:21:51,320
the presentation

431
00:21:59,340 --> 00:22:02,400
I want to end with some some security

432
00:22:02,400 --> 00:22:04,500
mechanisms that we used immutable

433
00:22:04,500 --> 00:22:07,320
security to defend our code base

434
00:22:07,320 --> 00:22:10,020
to give you a little uh information

435
00:22:10,020 --> 00:22:14,280
about how we develop this we have as a

436
00:22:14,280 --> 00:22:15,900
main programming language as the main

437
00:22:15,900 --> 00:22:18,659
programming language Python and as for

438
00:22:18,659 --> 00:22:20,940
for automating the operations that are

439
00:22:20,940 --> 00:22:23,760
done on the remote servers we use Pi

440
00:22:23,760 --> 00:22:26,760
infra here the advantage of Pi infra is

441
00:22:26,760 --> 00:22:30,260
that uh is that it is python basically

442
00:22:30,260 --> 00:22:33,419
namely you can call a function in Python

443
00:22:33,419 --> 00:22:36,559
and some operations are executed

444
00:22:36,559 --> 00:22:39,480
instantaneously on the the remote server

445
00:22:39,480 --> 00:22:41,940
in addition we have Firebase react.js

446
00:22:41,940 --> 00:22:45,720
Cloud Fair GitHub some GC from gcp and

447
00:22:45,720 --> 00:22:48,179
another security mechanisms that I will

448
00:22:48,179 --> 00:22:49,320
describe

449
00:22:49,320 --> 00:22:51,960
the first service that we use is the

450
00:22:51,960 --> 00:22:54,659
banterbot basically you take your

451
00:22:54,659 --> 00:22:57,120
repository from Gita for example and

452
00:22:57,120 --> 00:23:01,260
install the panda bot on it and this bot

453
00:23:01,260 --> 00:23:04,200
will watch your dependencies and will

454
00:23:04,200 --> 00:23:07,140
create pull requests once another

455
00:23:07,140 --> 00:23:10,740
version is available we recommend here

456
00:23:10,740 --> 00:23:13,440
to to integrate with your unit testing

457
00:23:13,440 --> 00:23:16,620
because there may be some different huge

458
00:23:16,620 --> 00:23:18,480
differences between versions for example

459
00:23:18,480 --> 00:23:21,539
the major the major ones and you want to

460
00:23:21,539 --> 00:23:25,620
to detect this in order to not affect

461
00:23:25,620 --> 00:23:27,480
the functionality of your of your

462
00:23:27,480 --> 00:23:29,039
application

463
00:23:29,039 --> 00:23:31,799
in addition we used deep source which is

464
00:23:31,799 --> 00:23:36,480
another SAS uh we link the repository

465
00:23:36,480 --> 00:23:39,480
and they will do some static code

466
00:23:39,480 --> 00:23:43,080
analysis uh coverage and creating

467
00:23:43,080 --> 00:23:46,200
automatically pull requests for issues

468
00:23:46,200 --> 00:23:49,320
that are detected by by them

469
00:23:49,320 --> 00:23:52,320
and lastly we use Pi test for creating

470
00:23:52,320 --> 00:23:53,940
the unit test that I previously

471
00:23:53,940 --> 00:23:57,299
mentioned only for the core API it will

472
00:23:57,299 --> 00:23:59,400
be nice if in the future we can create

473
00:23:59,400 --> 00:24:02,820
we can create the unit testing but for

474
00:24:02,820 --> 00:24:05,159
Security Solutions for example if there

475
00:24:05,159 --> 00:24:08,760
is another version of suricata that is

476
00:24:08,760 --> 00:24:12,179
published we want to detect if some

477
00:24:12,179 --> 00:24:16,200
flags on the CLI were changed in order

478
00:24:16,200 --> 00:24:19,500
to let the mutable security users to not

479
00:24:19,500 --> 00:24:22,440
be do not be affected

480
00:24:22,440 --> 00:24:24,480
uh to switch the presentation to to

481
00:24:24,480 --> 00:24:28,559
Future uh we want to to create a

482
00:24:28,559 --> 00:24:31,500
Marketplace but at this moment uh there

483
00:24:31,500 --> 00:24:33,659
are multiple Security Solutions each of

484
00:24:33,659 --> 00:24:37,679
them with the uh which is which with its

485
00:24:37,679 --> 00:24:41,720
own documentation uh it's a oh no

486
00:24:41,720 --> 00:24:44,700
interface and we want to bring all of

487
00:24:44,700 --> 00:24:49,620
them uh under a standardized umbrella to

488
00:24:49,620 --> 00:24:52,980
to learn only a tool named immutable

489
00:24:52,980 --> 00:24:55,080
security without learning the

490
00:24:55,080 --> 00:24:57,419
documentation and the usage of each

491
00:24:57,419 --> 00:25:00,120
security solution that you use

492
00:25:00,120 --> 00:25:03,120
uh as I previously mentioned we only

493
00:25:03,120 --> 00:25:05,400
support Linux virtual machine but it

494
00:25:05,400 --> 00:25:07,980
will be nice if we can uh deploy to

495
00:25:07,980 --> 00:25:09,659
other infrastructures for example

496
00:25:09,659 --> 00:25:13,400
kubernetes and docker

497
00:25:13,440 --> 00:25:16,919
uh yeah how you can help

498
00:25:16,919 --> 00:25:19,980
first we we bring some beer and here are

499
00:25:19,980 --> 00:25:23,580
some some uh and I want to apologize to

500
00:25:23,580 --> 00:25:25,679
the def cam team but yeah we have beer

501
00:25:25,679 --> 00:25:28,080
and we want to to talk with you after

502
00:25:28,080 --> 00:25:31,140
this presentation and to to hear your

503
00:25:31,140 --> 00:25:33,179
opinion about this project and how we

504
00:25:33,179 --> 00:25:35,419
can do this better

505
00:25:35,419 --> 00:25:38,700
uh in addition there is this saying that

506
00:25:38,700 --> 00:25:40,620
one man's guitar GitHub story is another

507
00:25:40,620 --> 00:25:43,559
man treasure so you can have if you have

508
00:25:43,559 --> 00:25:45,720
a GitHub account and you like this

509
00:25:45,720 --> 00:25:48,659
project just just drop us a start there

510
00:25:48,659 --> 00:25:52,440
we'll appreciate it we'll appreciate it

511
00:25:52,440 --> 00:25:54,659
and to to finally thanks to the team

512
00:25:54,659 --> 00:25:58,380
that make of make all of this possible

513
00:25:58,380 --> 00:26:00,779
here here is the members of YouTuber

514
00:26:00,779 --> 00:26:03,179
Security First riolin which is a core

515
00:26:03,179 --> 00:26:06,120
core developer and student or yonos

516
00:26:06,120 --> 00:26:08,940
which is a cyber security student uh

517
00:26:08,940 --> 00:26:12,120
incident a pen tester and uh and core

518
00:26:12,120 --> 00:26:15,240
developer Jay XB Defender and now she

519
00:26:15,240 --> 00:26:18,600
saw a super bad group and I want to and

520
00:26:18,600 --> 00:26:21,000
I give you him many thanks for letting

521
00:26:21,000 --> 00:26:23,340
me be the second person in in Dev Camp

522
00:26:23,340 --> 00:26:27,200
which who uses this I generated content

523
00:26:27,200 --> 00:26:32,279
and Marios in our startup in divorce he

524
00:26:32,279 --> 00:26:34,980
is the chief operating system Chief

525
00:26:34,980 --> 00:26:38,580
Operating Officer and I was Andre the

526
00:26:38,580 --> 00:26:41,520
leader of this team

527
00:26:41,520 --> 00:26:45,740
yeah that was it thanks

528
00:26:45,900 --> 00:26:46,690
thank you Andre

529
00:26:46,690 --> 00:26:49,320
[Applause]

530
00:26:49,320 --> 00:26:50,130
thank you

531
00:26:50,130 --> 00:26:52,200
[Applause]

532
00:26:52,200 --> 00:26:54,900
so uh that sounds like a really cool

533
00:26:54,900 --> 00:26:58,080
project uh besides that do we have any

534
00:26:58,080 --> 00:27:00,419
questions in the audience yes we do have

535
00:27:00,419 --> 00:27:03,840
questions in the audience perfect

536
00:27:03,840 --> 00:27:06,419
not quite quite impressive project

537
00:27:06,419 --> 00:27:08,900
quick question

538
00:27:08,900 --> 00:27:12,059
a quick question what kind of

539
00:27:12,059 --> 00:27:14,039
organizations do you see as being the

540
00:27:14,039 --> 00:27:16,020
primary targets or the primary users for

541
00:27:16,020 --> 00:27:18,059
this system

542
00:27:18,059 --> 00:27:20,220
at this moment or this moment we want to

543
00:27:20,220 --> 00:27:21,720
Target the smaller organization that

544
00:27:21,720 --> 00:27:24,419
doesn't have the the budget or the

545
00:27:24,419 --> 00:27:27,419
Personnel to invest in in uh

546
00:27:27,419 --> 00:27:30,740
in more hardcore operations for example

547
00:27:30,740 --> 00:27:33,179
installing cyber security solution and

548
00:27:33,179 --> 00:27:35,940
managing them with ansible and Chef and

549
00:27:35,940 --> 00:27:38,400
this automation of languages that are

550
00:27:38,400 --> 00:27:43,700
available available in in the market

551
00:27:43,860 --> 00:27:45,960
thank you too

552
00:27:45,960 --> 00:27:48,539
do we have other questions in the

553
00:27:48,539 --> 00:27:52,440
audience yes like me lose weight in that

554
00:27:52,440 --> 00:27:54,120
direction

555
00:27:54,120 --> 00:27:56,299
foreign

556
00:27:57,440 --> 00:27:59,760
thank you for the presentation thank you

557
00:27:59,760 --> 00:28:01,559
I was curious what other Integrations do

558
00:28:01,559 --> 00:28:03,659
you have in mind for the roadmap like

559
00:28:03,659 --> 00:28:04,799
for example have you thought about

560
00:28:04,799 --> 00:28:06,779
integrated sync

561
00:28:06,779 --> 00:28:09,840
can you repeat the solution please

562
00:28:09,840 --> 00:28:12,840
um whatever what other Integrations do

563
00:28:12,840 --> 00:28:16,740
you have in mind for uh in your roadmap

564
00:28:16,740 --> 00:28:19,080
at this moment we we developed some

565
00:28:19,080 --> 00:28:21,419
modules that are previously that are

566
00:28:21,419 --> 00:28:24,480
already available on GitHub but we want

567
00:28:24,480 --> 00:28:28,020
this moment to validate uh namely to to

568
00:28:28,020 --> 00:28:31,380
post for example on reddit's on

569
00:28:31,380 --> 00:28:34,740
subreddits or or publishing to LinkedIn

570
00:28:34,740 --> 00:28:37,380
groups in order to validate that there

571
00:28:37,380 --> 00:28:39,900
is a need for this kind of solution

572
00:28:39,900 --> 00:28:43,200
uh and regarding your question we didn't

573
00:28:43,200 --> 00:28:46,320
we don't want to establish a roadmap

574
00:28:46,320 --> 00:28:48,539
without any further validation yeah

575
00:28:48,539 --> 00:28:50,520
we'll be it will be nice to integrate

576
00:28:50,520 --> 00:28:52,380
for example kubernetes Solutions but

577
00:28:52,380 --> 00:28:54,659
there is a need we need to answer this

578
00:28:54,659 --> 00:28:56,220
question first

579
00:28:56,220 --> 00:28:58,380
also there is a project on GitHub that

580
00:28:58,380 --> 00:29:01,080
is searching for vulnerabilities and in

581
00:29:01,080 --> 00:29:03,840
the repository dependencies Sync It's

582
00:29:03,840 --> 00:29:05,520
called okay maybe you want to check it

583
00:29:05,520 --> 00:29:07,500
out sure sure thanks thank you again

584
00:29:07,500 --> 00:29:09,059
thank you

585
00:29:09,059 --> 00:29:11,159
awesome

586
00:29:11,159 --> 00:29:15,260
any other questions yes

587
00:29:15,960 --> 00:29:18,179
okay let's move on

588
00:29:18,179 --> 00:29:20,700
if there are one one more question

589
00:29:20,700 --> 00:29:23,240
perfect

590
00:29:37,679 --> 00:29:38,820
this one

591
00:29:38,820 --> 00:29:42,439
or this one this okay

592
00:29:42,919 --> 00:29:46,679
uh I was wondering

593
00:29:46,679 --> 00:29:47,480
um

594
00:29:47,480 --> 00:29:50,940
the the architecture it seems okay it's

595
00:29:50,940 --> 00:29:53,220
just not clear to me why

596
00:29:53,220 --> 00:29:57,419
uh the IDS is sending long inspection a

597
00:29:57,419 --> 00:30:00,360
log inspection to the web server

598
00:30:00,360 --> 00:30:02,520
while the log shipper sends it to the

599
00:30:02,520 --> 00:30:04,080
idps

600
00:30:04,080 --> 00:30:07,380
no basically the ideas will watch the

601
00:30:07,380 --> 00:30:10,380
logs that are produces by by nginx and

602
00:30:10,380 --> 00:30:13,140
based on on these logs teller will

603
00:30:13,140 --> 00:30:17,159
generate other logs that are alerts and

604
00:30:17,159 --> 00:30:19,559
these sellers that are produced by by

605
00:30:19,559 --> 00:30:22,320
teller are then are then passed to the

606
00:30:22,320 --> 00:30:24,779
host IPS fail to ban

607
00:30:24,779 --> 00:30:27,419
and when multiple lines are generated

608
00:30:27,419 --> 00:30:30,120
for for a single IP address fail to band

609
00:30:30,120 --> 00:30:32,399
will bend the IP that generated that

610
00:30:32,399 --> 00:30:34,559
alerts yeah I understood that but that's

611
00:30:34,559 --> 00:30:36,840
not what the architecture says it says

612
00:30:36,840 --> 00:30:39,299
the IDS is setting inspection logs to

613
00:30:39,299 --> 00:30:41,279
the web server yeah

614
00:30:41,279 --> 00:30:43,559
but not to the idea yeah yeah the ideas

615
00:30:43,559 --> 00:30:46,140
watch watches the the logs that are

616
00:30:46,140 --> 00:30:48,120
produced that are produced by the web

617
00:30:48,120 --> 00:30:50,479
server

618
00:30:50,760 --> 00:30:52,500
so the arrow should be from the web

619
00:30:52,500 --> 00:30:55,559
server to the IDS then right uh not

620
00:30:55,559 --> 00:30:58,200
really this is the C4 convention I

621
00:30:58,200 --> 00:31:00,720
respected it and okay I misunderstood it

622
00:31:00,720 --> 00:31:03,720
and the second one this is just out of

623
00:31:03,720 --> 00:31:06,179
curiosity did you check out the aips of

624
00:31:06,179 --> 00:31:07,799
the random guys

625
00:31:07,799 --> 00:31:11,520
yeah I I actually plotted them on on a

626
00:31:11,520 --> 00:31:14,460
map yeah and there were five guys from

627
00:31:14,460 --> 00:31:18,480
China to four from Russia to from UK and

628
00:31:18,480 --> 00:31:22,679
other other corners of or of the world

629
00:31:22,679 --> 00:31:24,240
okay

630
00:31:24,240 --> 00:31:26,159
yeah

631
00:31:26,159 --> 00:31:29,520
did you check if those isps were ever

632
00:31:29,520 --> 00:31:32,640
spotted doing attacks or who reported as

633
00:31:32,640 --> 00:31:35,580
I don't know malicious in any way not

634
00:31:35,580 --> 00:31:38,840
really not really okay

635
00:31:39,120 --> 00:31:41,460
um you mentioned that you had uh in mind

636
00:31:41,460 --> 00:31:44,640
the integration with Wazoo

637
00:31:44,640 --> 00:31:46,860
um do you want to tell us more about

638
00:31:46,860 --> 00:31:49,020
that because I would be interested in in

639
00:31:49,020 --> 00:31:51,600
that for example yeah uh we already

640
00:31:51,600 --> 00:31:55,200
integrated with in uh in a previous

641
00:31:55,200 --> 00:31:57,480
version of mutable security but we

642
00:31:57,480 --> 00:32:01,080
changed some aspects of the API uh how

643
00:32:01,080 --> 00:32:03,419
it will work there will be two modules

644
00:32:03,419 --> 00:32:06,960
for vazur namely one for the manager and

645
00:32:06,960 --> 00:32:09,419
one for the agent uh you will install

646
00:32:09,419 --> 00:32:12,360
first uh first the manager he will

647
00:32:12,360 --> 00:32:15,600
expose some API API keys for example to

648
00:32:15,600 --> 00:32:18,000
let the agents connect to to the manager

649
00:32:18,000 --> 00:32:20,580
and afterwards you can install the agent

650
00:32:20,580 --> 00:32:24,140
on the servers that you want to monitor

651
00:32:24,140 --> 00:32:27,240
do you want to monitor only web servers

652
00:32:27,240 --> 00:32:29,100
or are you planning to

653
00:32:29,100 --> 00:32:32,159
um take logs from other sources as well

654
00:32:32,159 --> 00:32:34,980
uh we at the moment we we Target only

655
00:32:34,980 --> 00:32:38,820
Linux servers not uh not especially web

656
00:32:38,820 --> 00:32:43,500
ones uh but we if there is a request to

657
00:32:43,500 --> 00:32:46,320
implement uh Windows solar security

658
00:32:46,320 --> 00:32:49,140
solution for example we will do that

659
00:32:49,140 --> 00:32:51,539
okay thank you

660
00:32:51,539 --> 00:32:53,580
thank you so much for this presentation

661
00:32:53,580 --> 00:32:57,000
I think it's a cool project and um if

662
00:32:57,000 --> 00:33:00,240
you want to work on it I think uh it has

663
00:33:00,240 --> 00:33:01,620
some uh

664
00:33:01,620 --> 00:33:04,860
ugly apps and and the first one is the

665
00:33:04,860 --> 00:33:07,380
price obviously because there are a lot

666
00:33:07,380 --> 00:33:11,220
of free solution Solutions however uh

667
00:33:11,220 --> 00:33:14,360
the work that you need to do in order to

668
00:33:14,360 --> 00:33:17,779
make everything

669
00:33:18,000 --> 00:33:20,880
we'll talk to each other yeah yeah it's

670
00:33:20,880 --> 00:33:22,500
not that easy

671
00:33:22,500 --> 00:33:25,200
uh thank you so much Andre and thank you

672
00:33:25,200 --> 00:33:28,260
for having me and uh we have beer yeah

673
00:33:28,260 --> 00:33:30,539
if you want to to talk with us about

674
00:33:30,539 --> 00:33:32,760
this and the Automation and the open

675
00:33:32,760 --> 00:33:36,299
source we we you will recognize Us by

676
00:33:36,299 --> 00:33:41,120
the t-shirts yeah thank you thank you

