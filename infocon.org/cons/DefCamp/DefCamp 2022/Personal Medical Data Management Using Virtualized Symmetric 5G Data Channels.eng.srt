1
00:00:00,240 --> 00:00:02,940
thank you very much for the introduction

2
00:00:02,940 --> 00:00:06,600
this this presentation concerns

3
00:00:06,600 --> 00:00:11,099
the the description of a system which

4
00:00:11,099 --> 00:00:14,219
allows for the arithmetic computations

5
00:00:14,219 --> 00:00:18,000
to be performed directly over encrypted

6
00:00:18,000 --> 00:00:20,600
data

7
00:00:21,600 --> 00:00:25,260
the real world use case involves that

8
00:00:25,260 --> 00:00:29,400
the medical data is collected from the

9
00:00:29,400 --> 00:00:31,920
enrolled patients

10
00:00:31,920 --> 00:00:35,399
um they are transported to the back-end

11
00:00:35,399 --> 00:00:38,820
components where they are processed so

12
00:00:38,820 --> 00:00:41,340
the arithmetic computations are

13
00:00:41,340 --> 00:00:43,440
conducted directly over the encrypted

14
00:00:43,440 --> 00:00:47,340
data and they are also stored in a

15
00:00:47,340 --> 00:00:51,719
secure fashion and the decryption occurs

16
00:00:51,719 --> 00:00:56,940
only at the client side when the patient

17
00:00:56,940 --> 00:00:58,160
requests

18
00:00:58,160 --> 00:01:01,879
some medical information

19
00:01:03,660 --> 00:01:08,460
so just a few words about myself I am an

20
00:01:08,460 --> 00:01:11,040
associate professor at the Transylvania

21
00:01:11,040 --> 00:01:12,960
University of brushov

22
00:01:12,960 --> 00:01:17,240
uh in this capacity I conduct various

23
00:01:17,240 --> 00:01:20,100
didactic and research oriented

24
00:01:20,100 --> 00:01:22,020
activities

25
00:01:22,020 --> 00:01:26,640
and I am also a researcher with the

26
00:01:26,640 --> 00:01:29,960
Siemens Industry software in in Bradshaw

27
00:01:29,960 --> 00:01:32,340
in the department of research and

28
00:01:32,340 --> 00:01:36,060
technology and I also conduct a research

29
00:01:36,060 --> 00:01:38,360
projects with business

30
00:01:38,360 --> 00:01:41,840
oriented value

31
00:01:42,600 --> 00:01:45,259
just a little bit of

32
00:01:45,259 --> 00:01:48,900
mathematical background before jumping

33
00:01:48,900 --> 00:01:52,820
into the presentation of the use case

34
00:01:52,820 --> 00:01:55,280
we should be able to

35
00:01:55,280 --> 00:01:59,280
make computations directly over the

36
00:01:59,280 --> 00:02:03,899
encrypted data and in this respect we

37
00:02:03,899 --> 00:02:06,600
use two logical Gates

38
00:02:06,600 --> 00:02:10,340
it's a and and

39
00:02:10,340 --> 00:02:14,280
exclusive or as you see here

40
00:02:14,280 --> 00:02:18,780
so the exclusive war is the gate which

41
00:02:18,780 --> 00:02:22,440
is being used for the sum and at the end

42
00:02:22,440 --> 00:02:24,420
is being used for the product

43
00:02:24,420 --> 00:02:27,599
and the reason behind this is clearly

44
00:02:27,599 --> 00:02:30,319
visible here

45
00:02:30,840 --> 00:02:34,140
and uh we we can say that this system

46
00:02:34,140 --> 00:02:38,520
that is made up of the end and exclusive

47
00:02:38,520 --> 00:02:41,459
or Gates is during Complete because we

48
00:02:41,459 --> 00:02:45,060
can perform any kind of uh arithmetic

49
00:02:45,060 --> 00:02:49,280
operation using only these two gates

50
00:02:51,140 --> 00:02:55,379
the the whole idea is based on the

51
00:02:55,379 --> 00:02:57,599
concept of fully homomorphic encryption

52
00:02:57,599 --> 00:03:00,239
historically the concept has been

53
00:03:00,239 --> 00:03:03,019
introduced in the scientific literature

54
00:03:03,019 --> 00:03:09,480
uh by a researcher that is named Gentry

55
00:03:09,480 --> 00:03:11,720
in 2008

56
00:03:11,720 --> 00:03:18,500
where he presented it in his PhD thesis

57
00:03:19,080 --> 00:03:21,659
and a fully homomorphic encryption

58
00:03:21,659 --> 00:03:26,280
system is capable of conducting any

59
00:03:26,280 --> 00:03:32,040
number of additions and multiplication

60
00:03:35,519 --> 00:03:38,640
okay so I'll jump over some of the

61
00:03:38,640 --> 00:03:41,900
slides that may not be interesting

62
00:03:41,900 --> 00:03:44,760
uh for uh for this

63
00:03:44,760 --> 00:03:48,840
uh particular stage of the presentation

64
00:03:48,840 --> 00:03:53,700
and uh I'll uh I'll start by talking

65
00:03:53,700 --> 00:03:54,799
about

66
00:03:54,799 --> 00:03:58,200
the mechanism which is behind the

67
00:03:58,200 --> 00:04:00,299
symmetric encryption

68
00:04:00,299 --> 00:04:03,360
so in order to define the symmetric

69
00:04:03,360 --> 00:04:07,560
encryption model uh let us consider our

70
00:04:07,560 --> 00:04:10,879
secret key as a very large odd number

71
00:04:10,879 --> 00:04:16,320
that is uh designated by PE

72
00:04:16,320 --> 00:04:20,220
then in order to encrypt a certain bit B

73
00:04:20,220 --> 00:04:23,520
we choose a preferably random large

74
00:04:23,520 --> 00:04:30,380
multiple of P so we get the Q times p

75
00:04:31,020 --> 00:04:36,020
then we choose a preferably small number

76
00:04:36,020 --> 00:04:39,780
which is called the noise in the context

77
00:04:39,780 --> 00:04:43,560
of our discussion which is uh 2 times R

78
00:04:43,560 --> 00:04:44,880
plus b

79
00:04:44,880 --> 00:04:48,620
and this noise is very

80
00:04:48,620 --> 00:04:52,740
relevant in our discussion because it is

81
00:04:52,740 --> 00:04:56,660
important to keep it at a proper level

82
00:04:56,660 --> 00:05:00,600
as otherwise it would be impossible to

83
00:05:00,600 --> 00:05:05,100
decrypt the beats and therefore the

84
00:05:05,100 --> 00:05:06,360
fully homomorphic encryption

85
00:05:06,360 --> 00:05:10,320
computations would output an incorrect

86
00:05:10,320 --> 00:05:14,360
bit and would not work at all

87
00:05:14,940 --> 00:05:16,759
so uh

88
00:05:16,759 --> 00:05:22,139
one of the main tasks in implementing a

89
00:05:22,139 --> 00:05:24,539
system like the one that is described in

90
00:05:24,539 --> 00:05:26,820
this presentation is to keep the level

91
00:05:26,820 --> 00:05:30,000
of the noise under control

92
00:05:30,000 --> 00:05:33,060
and there are several techniques in this

93
00:05:33,060 --> 00:05:35,000
respect

94
00:05:35,000 --> 00:05:40,620
one of the most used techniques

95
00:05:40,620 --> 00:05:44,160
is uh referred as the bootstrapping

96
00:05:44,160 --> 00:05:46,580
method

97
00:05:46,979 --> 00:05:50,699
so why why is this important because in

98
00:05:50,699 --> 00:05:52,580
a kind of an exclusive or operation

99
00:05:52,580 --> 00:05:57,539
which which implement the uh the

100
00:05:57,539 --> 00:06:00,120
addition operation

101
00:06:00,120 --> 00:06:03,000
you you see that the noise is relatively

102
00:06:03,000 --> 00:06:06,419
small from a quantitative perspective

103
00:06:06,419 --> 00:06:07,620
but

104
00:06:07,620 --> 00:06:13,259
if we apply an end operation so if we

105
00:06:13,259 --> 00:06:15,240
perform a multiplication

106
00:06:15,240 --> 00:06:17,759
the size of the noise

107
00:06:17,759 --> 00:06:19,740
which is

108
00:06:19,740 --> 00:06:22,740
okay

109
00:06:25,919 --> 00:06:28,758
does not work

110
00:06:30,120 --> 00:06:32,520
you have to hold it

111
00:06:32,520 --> 00:06:36,300
okay so this is the noise

112
00:06:36,300 --> 00:06:40,340
and we we see that is it is sensibly

113
00:06:40,340 --> 00:06:45,240
larger than what the the addition

114
00:06:45,240 --> 00:06:48,419
operation would produce

115
00:06:48,419 --> 00:06:51,020
I am

116
00:06:51,960 --> 00:06:55,800
so in order to keep the noise under

117
00:06:55,800 --> 00:06:59,220
control several Solutions have been uh

118
00:06:59,220 --> 00:07:03,360
proposed and the the most well-known one

119
00:07:03,360 --> 00:07:08,960
is called as the bootstrapping method

120
00:07:09,180 --> 00:07:11,819
uh what does the bootstrapping method

121
00:07:11,819 --> 00:07:14,240
says

122
00:07:14,300 --> 00:07:19,520
we establish a predefined threshold

123
00:07:19,520 --> 00:07:22,039
and if

124
00:07:22,039 --> 00:07:26,880
the size of the noise goes beyond that

125
00:07:26,880 --> 00:07:30,560
threshold we should apply certain

126
00:07:30,560 --> 00:07:33,120
arithmetic methods in order to decrease

127
00:07:33,120 --> 00:07:35,880
the respective value

128
00:07:35,880 --> 00:07:39,360
and we'll see in a moment how we

129
00:07:39,360 --> 00:07:42,660
implemented this in our real world use

130
00:07:42,660 --> 00:07:45,960
case scenario

131
00:07:48,660 --> 00:07:52,340
and usually the threshold

132
00:07:52,340 --> 00:07:54,500
is

133
00:07:54,500 --> 00:08:01,639
set as a half of the value of the

134
00:08:01,639 --> 00:08:05,280
ciphertext but of course in real world

135
00:08:05,280 --> 00:08:08,520
settings this can take other values as

136
00:08:08,520 --> 00:08:10,020
well

137
00:08:10,020 --> 00:08:13,500
and I'll jump over to the presentation

138
00:08:13,500 --> 00:08:16,860
of of the use case so that you can

139
00:08:16,860 --> 00:08:18,319
understand better

140
00:08:18,319 --> 00:08:22,220
what this is all about

141
00:08:28,560 --> 00:08:33,799
okay so the use case is uh reported

142
00:08:33,799 --> 00:08:38,120
mainly into to papers the first one

143
00:08:38,120 --> 00:08:41,700
which describes the initial version of

144
00:08:41,700 --> 00:08:45,240
the system has been published in 2019

145
00:08:45,240 --> 00:08:49,019
and the second one which describes an

146
00:08:49,019 --> 00:08:51,180
updated version of the system has been

147
00:08:51,180 --> 00:08:53,220
published this year

148
00:08:53,220 --> 00:08:56,959
as you as you see here

149
00:08:57,060 --> 00:09:00,180
it considers the following use case

150
00:09:00,180 --> 00:09:01,820
there are

151
00:09:01,820 --> 00:09:07,500
750 patients that are citizens of of

152
00:09:07,500 --> 00:09:10,920
Bradshaw City in Romania

153
00:09:10,920 --> 00:09:16,220
and each of the enrolled patients is

154
00:09:16,220 --> 00:09:20,399
fitted with the polar h10 wearable

155
00:09:20,399 --> 00:09:23,940
device which is essentially measures

156
00:09:23,940 --> 00:09:27,540
their cardiac Rhythm data

157
00:09:27,540 --> 00:09:32,399
and the data is being transmitted using

158
00:09:32,399 --> 00:09:35,399
a Bluetooth connection to their mobile

159
00:09:35,399 --> 00:09:38,399
phones and the mobile phone sends it

160
00:09:38,399 --> 00:09:39,959
over to the

161
00:09:39,959 --> 00:09:42,240
backend components for further

162
00:09:42,240 --> 00:09:45,480
processing and the data processing

163
00:09:45,480 --> 00:09:48,540
occurs directly over the encrypted data

164
00:09:48,540 --> 00:09:52,279
which uh

165
00:09:52,320 --> 00:09:57,080
practically overt any attempt to

166
00:09:57,080 --> 00:10:00,060
tamper with the data or to to read it

167
00:10:00,060 --> 00:10:02,399
even if a hacker got access to the

168
00:10:02,399 --> 00:10:07,019
system he would not be able to use it in

169
00:10:07,019 --> 00:10:10,339
any useful way

170
00:10:11,459 --> 00:10:15,480
okay so uh in order to transfer the data

171
00:10:15,480 --> 00:10:19,440
we use uh virtualize the 5G data

172
00:10:19,440 --> 00:10:23,700
channels and the 5G data channels are

173
00:10:23,700 --> 00:10:25,640
defined

174
00:10:25,640 --> 00:10:29,459
using uh the virtual Network function

175
00:10:29,459 --> 00:10:32,459
model as it is known in the literature

176
00:10:32,459 --> 00:10:37,580
uh in essence this means that instead of

177
00:10:37,580 --> 00:10:41,240
using Hardware components for every

178
00:10:41,240 --> 00:10:45,720
level of the 5G Network we simply use a

179
00:10:45,720 --> 00:10:49,980
certain virtualization model and most of

180
00:10:49,980 --> 00:10:53,339
these Hardware components are defined by

181
00:10:53,339 --> 00:10:55,260
your software

182
00:10:55,260 --> 00:10:58,160
routines

183
00:11:01,380 --> 00:11:06,240
okay so um in order to specify and

184
00:11:06,240 --> 00:11:09,899
implement the 5G virtual channels we

185
00:11:09,899 --> 00:11:13,800
have used the Ericsson Network function

186
00:11:13,800 --> 00:11:16,860
virtualization infrastructure

187
00:11:16,860 --> 00:11:21,959
and as you can see uh here the

188
00:11:21,959 --> 00:11:23,820
uh

189
00:11:23,820 --> 00:11:26,760
the first stage pertains to the data

190
00:11:26,760 --> 00:11:31,500
acquisition as I told you using uh the

191
00:11:31,500 --> 00:11:34,200
acquisition method that I described then

192
00:11:34,200 --> 00:11:36,779
the second stage refer to the data

193
00:11:36,779 --> 00:11:39,240
transmission to the backend components

194
00:11:39,240 --> 00:11:42,300
uh the back-end components for our use

195
00:11:42,300 --> 00:11:48,660
case are being deployed into the IBM

196
00:11:48,660 --> 00:11:51,899
Cloud infrastructure but of course it

197
00:11:51,899 --> 00:11:54,660
can be deployed to any other Cloud

198
00:11:54,660 --> 00:11:58,920
modern Cloud infrastructure

199
00:12:01,560 --> 00:12:06,540
okay uh the third stage it's uh the the

200
00:12:06,540 --> 00:12:09,180
actual storage of the collected data and

201
00:12:09,180 --> 00:12:12,300
of course we also have data processing

202
00:12:12,300 --> 00:12:15,839
uh we'll see in a moment how data is

203
00:12:15,839 --> 00:12:18,060
being processed in a homomorphic

204
00:12:18,060 --> 00:12:21,380
encryption manner

205
00:12:21,480 --> 00:12:25,680
we see here a general schema of the

206
00:12:25,680 --> 00:12:29,600
system you see that there are basically

207
00:12:29,600 --> 00:12:34,220
two data pads when we deal with the

208
00:12:34,220 --> 00:12:38,820
transmission of system State data we use

209
00:12:38,820 --> 00:12:42,600
a standard standardly encrypted data

210
00:12:42,600 --> 00:12:43,380
Channel

211
00:12:43,380 --> 00:12:46,560
and when we should deal with the

212
00:12:46,560 --> 00:12:50,220
personal uh data we use the fully

213
00:12:50,220 --> 00:12:53,220
homomorphic encryption routines why is

214
00:12:53,220 --> 00:12:55,740
this because

215
00:12:55,740 --> 00:12:57,420
um the fully homomorphic encryption

216
00:12:57,420 --> 00:13:01,339
routines are very time expensive

217
00:13:04,560 --> 00:13:05,700
okay

218
00:13:05,700 --> 00:13:09,720
uh uh so what what word are the basic

219
00:13:09,720 --> 00:13:12,959
operation that the system supports

220
00:13:12,959 --> 00:13:15,779
the first operation is the homomorphic

221
00:13:15,779 --> 00:13:16,820
addition

222
00:13:16,820 --> 00:13:20,700
we've already understood how this is

223
00:13:20,700 --> 00:13:21,720
implemented

224
00:13:21,720 --> 00:13:24,300
then we deal with homomorphic

225
00:13:24,300 --> 00:13:26,579
multiplications

226
00:13:26,579 --> 00:13:32,040
and the implementation is done using an

227
00:13:32,040 --> 00:13:34,680
end gate

228
00:13:34,680 --> 00:13:38,399
then we have the homomorphic rotate as

229
00:13:38,399 --> 00:13:40,279
the name implies

230
00:13:40,279 --> 00:13:45,360
it rotates the data bits at some moment

231
00:13:45,360 --> 00:13:48,959
during the data processing stages

232
00:13:48,959 --> 00:13:52,040
and then is the homomorphic

233
00:13:52,040 --> 00:13:54,839
cell mask operation

234
00:13:54,839 --> 00:13:59,399
which has the role to correct the bits

235
00:13:59,399 --> 00:14:01,860
that may become altered during the

236
00:14:01,860 --> 00:14:03,480
computation

237
00:14:03,480 --> 00:14:04,560
then

238
00:14:04,560 --> 00:14:07,860
very important is this level

239
00:14:07,860 --> 00:14:12,839
because this level is how the threshold

240
00:14:12,839 --> 00:14:15,600
is being defined

241
00:14:15,600 --> 00:14:17,360
um

242
00:14:17,360 --> 00:14:21,000
one multiplication operation basically

243
00:14:21,000 --> 00:14:24,480
increments with the one the value of

244
00:14:24,480 --> 00:14:25,940
this level

245
00:14:25,940 --> 00:14:27,620
and

246
00:14:27,620 --> 00:14:31,680
we established a certain threshold for

247
00:14:31,680 --> 00:14:33,779
the value of the level

248
00:14:33,779 --> 00:14:38,420
and this threshold was determined

249
00:14:38,420 --> 00:14:40,980
through successive experimental

250
00:14:40,980 --> 00:14:42,959
assessments

251
00:14:42,959 --> 00:14:45,079
and uh

252
00:14:45,079 --> 00:14:49,920
we have made sure that any homorphic

253
00:14:49,920 --> 00:14:54,899
operation is being conducted correctly

254
00:14:54,899 --> 00:14:56,220
okay

255
00:14:56,220 --> 00:14:59,339
and then we have another important

256
00:14:59,339 --> 00:15:01,980
parameter which is the number of the

257
00:15:01,980 --> 00:15:07,079
cipher texts which is this n city that

258
00:15:07,079 --> 00:15:09,199
you can see here

259
00:15:09,199 --> 00:15:11,300
and uh

260
00:15:11,300 --> 00:15:15,380
let's see what what follows

261
00:15:15,380 --> 00:15:18,440
here is a general uh

262
00:15:18,440 --> 00:15:22,079
architectural model of the system which

263
00:15:22,079 --> 00:15:24,839
suggests how the operations are being

264
00:15:24,839 --> 00:15:26,060
performed

265
00:15:26,060 --> 00:15:30,199
uh computationally wise

266
00:15:31,620 --> 00:15:35,940
and um we have used our system and the

267
00:15:35,940 --> 00:15:39,720
collected data in order to detect and

268
00:15:39,720 --> 00:15:43,680
assess three medical parameters and

269
00:15:43,680 --> 00:15:46,279
conditions

270
00:15:47,459 --> 00:15:51,060
uh just as a an additional remark which

271
00:15:51,060 --> 00:15:54,180
is not particularly important for the

272
00:15:54,180 --> 00:15:56,940
fully homomorphic encryption is that we

273
00:15:56,940 --> 00:16:01,040
have also included some and true

274
00:16:01,040 --> 00:16:02,600
homomorphic

275
00:16:02,600 --> 00:16:06,060
mechanisms apart from the standard fully

276
00:16:06,060 --> 00:16:08,459
homomorphic encryption ones

277
00:16:08,459 --> 00:16:12,959
uh This was done in order to speed up

278
00:16:12,959 --> 00:16:19,099
the computation as much as as possible

279
00:16:28,199 --> 00:16:30,660
okay

280
00:16:30,660 --> 00:16:34,139
so the the slides that I jumped over uh

281
00:16:34,139 --> 00:16:36,300
have always have already been presented

282
00:16:36,300 --> 00:16:39,420
uh so uh there's no need to insist on

283
00:16:39,420 --> 00:16:40,380
them

284
00:16:40,380 --> 00:16:43,259
so what are the three medical parameters

285
00:16:43,259 --> 00:16:45,899
and conditions which this system

286
00:16:45,899 --> 00:16:48,420
considers uh

287
00:16:48,420 --> 00:16:52,199
first is the average heart rate

288
00:16:52,199 --> 00:16:55,440
which is uh determined out of the data

289
00:16:55,440 --> 00:16:59,940
that is uh collected by the polar h10

290
00:16:59,940 --> 00:17:01,740
sensors

291
00:17:01,740 --> 00:17:04,919
then there is the delayed repolarization

292
00:17:04,919 --> 00:17:06,240
of the heart

293
00:17:06,240 --> 00:17:10,140
this is a hard medical condition which

294
00:17:10,140 --> 00:17:14,480
is uh generated by a an abnormal

295
00:17:14,480 --> 00:17:18,839
influx of the electrical signals that

296
00:17:18,839 --> 00:17:20,880
flow through the heart

297
00:17:20,880 --> 00:17:24,419
and this abnormal condition May

298
00:17:24,419 --> 00:17:27,480
determine for the oxygenated blood to

299
00:17:27,480 --> 00:17:31,200
mix up with the non-oxygenated blood

300
00:17:31,200 --> 00:17:35,640
and the last one are the minimum and the

301
00:17:35,640 --> 00:17:39,860
maximum Hertz heart rates

302
00:17:42,059 --> 00:17:45,299
yes some brief remarks about each of

303
00:17:45,299 --> 00:17:49,020
these conditions and how they were they

304
00:17:49,020 --> 00:17:51,620
were implemented the

305
00:17:51,620 --> 00:17:54,840
the computation of the average Verge

306
00:17:54,840 --> 00:17:58,020
rate is based on the storage of the

307
00:17:58,020 --> 00:18:03,120
encrypted values using those and CT

308
00:18:03,120 --> 00:18:06,900
ciphertexts that have been mentioned

309
00:18:06,900 --> 00:18:12,320
and in in essence we

310
00:18:12,320 --> 00:18:16,500
perform a homomorphic addition

311
00:18:16,500 --> 00:18:22,080
and then we divide it by the number of

312
00:18:22,080 --> 00:18:24,360
the values that have been collected

313
00:18:24,360 --> 00:18:27,059
during a certain period of time

314
00:18:27,059 --> 00:18:30,660
uh client-wise the client is being

315
00:18:30,660 --> 00:18:34,200
represented by an Android application

316
00:18:34,200 --> 00:18:37,980
and when the user requests

317
00:18:37,980 --> 00:18:40,500
the average herd value

318
00:18:40,500 --> 00:18:45,780
he specifies a certain time interval and

319
00:18:45,780 --> 00:18:49,140
in a certain time interval there is a

320
00:18:49,140 --> 00:18:51,720
number of Cipher texts that have been

321
00:18:51,720 --> 00:18:54,200
collected

322
00:18:56,760 --> 00:19:00,740
okay so uh

323
00:19:01,400 --> 00:19:05,820
the the detection of the delayed

324
00:19:05,820 --> 00:19:08,780
repolarization of the heart syndrome

325
00:19:08,780 --> 00:19:14,100
uh considers a certain time interval in

326
00:19:14,100 --> 00:19:17,840
this example we speak about

327
00:19:17,840 --> 00:19:21,000
475 milliseconds

328
00:19:21,000 --> 00:19:23,400
the the parameters that you see here

329
00:19:23,400 --> 00:19:29,780
mainly tqt and trr are standard medical

330
00:19:29,780 --> 00:19:32,640
parameters or physiological parameters

331
00:19:32,640 --> 00:19:35,299
that are generated by any

332
00:19:35,299 --> 00:19:37,370
electrocardiogram test

333
00:19:37,370 --> 00:19:38,940
[Music]

334
00:19:38,940 --> 00:19:42,860
and the value of

335
00:19:42,860 --> 00:19:47,000
475 milliseconds has been

336
00:19:47,000 --> 00:19:49,940
ticked up and fine-tuned through

337
00:19:49,940 --> 00:19:53,400
successive experimental evaluations

338
00:19:53,400 --> 00:19:59,299
so that the detection rate became uh

339
00:20:00,360 --> 00:20:06,620
had a high enough level of the accuracy

340
00:20:10,200 --> 00:20:13,799
and uh foreign the last medical

341
00:20:13,799 --> 00:20:16,640
condition we speak about the

342
00:20:16,640 --> 00:20:21,000
minimum and the maximum heart rates

343
00:20:21,000 --> 00:20:23,780
the the principle here

344
00:20:23,780 --> 00:20:27,539
is to convert the data in a binary

345
00:20:27,539 --> 00:20:31,559
format this data in a binary format is

346
00:20:31,559 --> 00:20:33,620
being compared

347
00:20:33,620 --> 00:20:38,220
bitwise in a homomorphic manner

348
00:20:38,220 --> 00:20:42,240
and if the first number is greater than

349
00:20:42,240 --> 00:20:45,840
the other number then the result will

350
00:20:45,840 --> 00:20:48,299
include a single bit of one

351
00:20:48,299 --> 00:20:53,170
if the the number is not greater then

352
00:20:53,170 --> 00:20:54,600
[Music]

353
00:20:54,600 --> 00:20:58,400
it we will have the opposite situation

354
00:20:58,400 --> 00:21:01,559
and this is how we Implement a

355
00:21:01,559 --> 00:21:04,679
comparison directly over the encrypted

356
00:21:04,679 --> 00:21:07,100
data

357
00:21:07,500 --> 00:21:11,100
and we are able to determine the minimum

358
00:21:11,100 --> 00:21:15,740
heart rate and the maximum heart rates

359
00:21:17,400 --> 00:21:19,559
okay

360
00:21:19,559 --> 00:21:24,679
so uh the system currently supports

361
00:21:24,679 --> 00:21:29,480
android-based client devices but

362
00:21:29,480 --> 00:21:32,760
it can certainly be extended to any type

363
00:21:32,760 --> 00:21:38,299
of mobile oriented client device

364
00:21:39,480 --> 00:21:43,799
and the study population as I've already

365
00:21:43,799 --> 00:21:46,820
mentioned is composed of

366
00:21:46,820 --> 00:21:48,799
750

367
00:21:48,799 --> 00:21:52,080
enrolled let's call them patients

368
00:21:52,080 --> 00:21:55,380
although they are not like proper

369
00:21:55,380 --> 00:21:56,580
patients

370
00:21:56,580 --> 00:22:00,840
and the the data collection device is a

371
00:22:00,840 --> 00:22:05,240
polar h10 h10 device

372
00:22:10,620 --> 00:22:15,659
I I described how the data stream is

373
00:22:15,659 --> 00:22:17,000
being

374
00:22:17,000 --> 00:22:20,640
configured while the data collected by

375
00:22:20,640 --> 00:22:22,559
the polars are being sent to the mobile

376
00:22:22,559 --> 00:22:25,380
phones which in turn send them to the

377
00:22:25,380 --> 00:22:28,140
background components which perform all

378
00:22:28,140 --> 00:22:30,179
the computations

379
00:22:30,179 --> 00:22:31,919
uh

380
00:22:31,919 --> 00:22:35,400
the encryption occurs directly on the

381
00:22:35,400 --> 00:22:38,179
client device so it's being sent over

382
00:22:38,179 --> 00:22:41,100
over the 5G data channels in an

383
00:22:41,100 --> 00:22:42,539
encrypted form

384
00:22:42,539 --> 00:22:46,320
the computations and data storage is

385
00:22:46,320 --> 00:22:49,679
also done in an encrypted format and

386
00:22:49,679 --> 00:22:52,919
when the client so the patient requests

387
00:22:52,919 --> 00:22:55,260
some medical information

388
00:22:55,260 --> 00:22:58,520
the encrypted the data is sent back

389
00:22:58,520 --> 00:23:03,179
the and the client devices uses the keys

390
00:23:03,179 --> 00:23:07,620
that are stored for any data requests in

391
00:23:07,620 --> 00:23:11,460
part and this is able to decrypt the

392
00:23:11,460 --> 00:23:15,260
data only on the client device

393
00:23:16,620 --> 00:23:19,919
the performance evaluation has

394
00:23:19,919 --> 00:23:23,780
considered several parameters

395
00:23:23,780 --> 00:23:27,059
the first ones refer to the data

396
00:23:27,059 --> 00:23:30,360
transfer as you see here is a data

397
00:23:30,360 --> 00:23:33,799
transfer in and the data transfer out

398
00:23:33,799 --> 00:23:37,380
the direction of the transfer is

399
00:23:37,380 --> 00:23:40,020
relative to the backend component so

400
00:23:40,020 --> 00:23:43,380
transfer in means the data that enters

401
00:23:43,380 --> 00:23:45,780
into the backend components and transfer

402
00:23:45,780 --> 00:23:48,600
out is the data that gets out of the

403
00:23:48,600 --> 00:23:51,140
backend component when the client

404
00:23:51,140 --> 00:23:53,100
requests it

405
00:23:53,100 --> 00:23:56,179
then is the storage ratio

406
00:23:56,179 --> 00:23:58,940
we should know that uh

407
00:23:58,940 --> 00:24:03,360
one bit of plain Text data is multiplied

408
00:24:03,360 --> 00:24:06,179
by a number of times when it's being

409
00:24:06,179 --> 00:24:08,280
processed in a homomorphic encryption

410
00:24:08,280 --> 00:24:09,780
fashion

411
00:24:09,780 --> 00:24:14,039
so if this storage ratio is for example

412
00:24:14,039 --> 00:24:17,820
500 it means that one bit of plain Text

413
00:24:17,820 --> 00:24:20,059
data is being

414
00:24:20,059 --> 00:24:25,100
multiplied by five times in order to

415
00:24:25,100 --> 00:24:29,179
store it in an encrypted format

416
00:24:29,179 --> 00:24:33,539
then is the processing speed which is

417
00:24:33,539 --> 00:24:36,659
defined as you see here the number of

418
00:24:36,659 --> 00:24:40,500
the cipher texts and the very important

419
00:24:40,500 --> 00:24:44,840
level L which which you understood

420
00:24:44,840 --> 00:24:47,120
uh and

421
00:24:47,120 --> 00:24:51,179
this this level L is essential as if we

422
00:24:51,179 --> 00:24:54,320
don't manage it properly our whole

423
00:24:54,320 --> 00:24:57,240
homomorphic encryption process will not

424
00:24:57,240 --> 00:25:00,080
work properly

425
00:25:01,320 --> 00:25:05,340
and the these are the performance Matrix

426
00:25:05,340 --> 00:25:08,720
values that were obtained

427
00:25:09,179 --> 00:25:12,419
um as you see here we have considered

428
00:25:12,419 --> 00:25:14,900
the several

429
00:25:14,900 --> 00:25:18,539
data collection intervals they range

430
00:25:18,539 --> 00:25:22,679
from one minute and go all the way up to

431
00:25:22,679 --> 00:25:24,960
24 hours

432
00:25:24,960 --> 00:25:28,020
and the

433
00:25:28,020 --> 00:25:30,240
on the First Column you see the load

434
00:25:30,240 --> 00:25:33,500
that is placed on the 5G

435
00:25:33,500 --> 00:25:36,299
data Channel

436
00:25:36,299 --> 00:25:38,120
which

437
00:25:38,120 --> 00:25:41,039
suggests that the 5G data channel is

438
00:25:41,039 --> 00:25:43,460
used in a scalable fashion

439
00:25:43,460 --> 00:25:46,580
or the most

440
00:25:46,580 --> 00:25:50,700
load that has been registered is uh 0.81

441
00:25:50,700 --> 00:25:53,580
which is very good considering the

442
00:25:53,580 --> 00:25:56,220
amount of data

443
00:25:56,220 --> 00:25:59,340
then we have the number of Cipher texts

444
00:25:59,340 --> 00:26:01,200
that are being

445
00:26:01,200 --> 00:26:05,940
processed and the values of the level l

446
00:26:05,940 --> 00:26:09,059
and the amount of of data that has been

447
00:26:09,059 --> 00:26:10,760
transferred

448
00:26:10,760 --> 00:26:16,320
we have more data that's been sent out

449
00:26:16,320 --> 00:26:19,159
of the back-end components

450
00:26:19,159 --> 00:26:22,500
the the more frequent the data

451
00:26:22,500 --> 00:26:25,140
collection intervals are so that will be

452
00:26:25,140 --> 00:26:27,720
the explanation for this value

453
00:26:27,720 --> 00:26:31,860
and finally the storage ratio and the

454
00:26:31,860 --> 00:26:37,219
processing speed on the last two columns

455
00:26:38,120 --> 00:26:41,880
these uh the values of this performance

456
00:26:41,880 --> 00:26:45,960
metrics suggest that the system is

457
00:26:45,960 --> 00:26:47,340
scalable

458
00:26:47,340 --> 00:26:50,400
and as we determined in practice

459
00:26:50,400 --> 00:26:53,420
it was capable to

460
00:26:53,420 --> 00:26:53,640
[Music]

461
00:26:53,640 --> 00:26:55,640
um

462
00:26:55,640 --> 00:26:59,179
correctly determine and assess all the

463
00:26:59,179 --> 00:27:02,820
implemented medical condition with the

464
00:27:02,820 --> 00:27:05,760
accuracy with good accuracy

465
00:27:05,760 --> 00:27:10,679
and also with the very good speeds from

466
00:27:10,679 --> 00:27:13,820
a client perspective this means that

467
00:27:13,820 --> 00:27:17,659
the greatest time that

468
00:27:17,659 --> 00:27:20,700
the process took from the client

469
00:27:20,700 --> 00:27:24,900
perspective or was at most three or four

470
00:27:24,900 --> 00:27:26,419
seconds

471
00:27:26,419 --> 00:27:29,640
which is a very good time considering

472
00:27:29,640 --> 00:27:32,520
the complexity of the homomorphic

473
00:27:32,520 --> 00:27:35,039
encryption operations that are performed

474
00:27:35,039 --> 00:27:38,179
in the background

475
00:27:39,720 --> 00:27:41,960
and uh

476
00:27:41,960 --> 00:27:47,360
one uh let's call it anecdotal remark

477
00:27:47,360 --> 00:27:50,220
considering the importance of the level

478
00:27:50,220 --> 00:27:54,480
L that I've discussed about

479
00:27:54,480 --> 00:27:58,919
uh during the the early stages of the

480
00:27:58,919 --> 00:28:02,279
system's implementation the value of

481
00:28:02,279 --> 00:28:04,799
this level was not properly calibrated

482
00:28:04,799 --> 00:28:08,940
and we had the situation when a patient

483
00:28:08,940 --> 00:28:10,520
that

484
00:28:10,520 --> 00:28:14,240
has been wearing the polar h10

485
00:28:14,240 --> 00:28:18,840
arrived in the uh Intensive Care Unit

486
00:28:18,840 --> 00:28:22,700
due to some medical medical condition

487
00:28:22,700 --> 00:28:27,240
and the the data that was being uh

488
00:28:27,240 --> 00:28:30,779
reported at that time suggested that he

489
00:28:30,779 --> 00:28:34,020
suffers he was suffering from uh that

490
00:28:34,020 --> 00:28:36,539
delayed repolarization syndrome

491
00:28:36,539 --> 00:28:39,980
which was not actually the case

492
00:28:39,980 --> 00:28:44,100
so the incorrect calibration of the

493
00:28:44,100 --> 00:28:44,960
level

494
00:28:44,960 --> 00:28:49,260
produces uh very unexpected results

495
00:28:49,260 --> 00:28:52,080
especially when we speak about personal

496
00:28:52,080 --> 00:28:54,779
medical data

497
00:28:54,779 --> 00:28:59,539
and this is as well the performance

498
00:28:59,539 --> 00:29:03,659
metrics values for the detection of a

499
00:29:03,659 --> 00:29:07,520
delayed repolarization syndrome

500
00:29:08,059 --> 00:29:09,779
so

501
00:29:09,779 --> 00:29:13,039
um as far as as we know

502
00:29:13,039 --> 00:29:16,100
this system is one of the few

503
00:29:16,100 --> 00:29:20,460
that collects the medical data in this

504
00:29:20,460 --> 00:29:24,200
way and it also

505
00:29:24,200 --> 00:29:28,080
encrypted end-to-end so from the client

506
00:29:28,080 --> 00:29:30,779
devices to the server components and

507
00:29:30,779 --> 00:29:32,700
backwards

508
00:29:32,700 --> 00:29:37,520
uh which ensures Absolute Data privacy

509
00:29:37,520 --> 00:29:40,140
in almost any condition

510
00:29:40,140 --> 00:29:43,559
the downside of the approach is uh

511
00:29:43,559 --> 00:29:45,899
represented by the fact that

512
00:29:45,899 --> 00:29:47,940
the homomorphic encryption operations

513
00:29:47,940 --> 00:29:50,880
are very time consuming

514
00:29:50,880 --> 00:29:52,799
and

515
00:29:52,799 --> 00:29:57,179
in the absence of a proper algorithmic

516
00:29:57,179 --> 00:30:01,620
optimization we need increasingly more

517
00:30:01,620 --> 00:30:04,279
powerful Hardware

518
00:30:04,279 --> 00:30:06,480
components in order to be able to

519
00:30:06,480 --> 00:30:08,940
sustain the the implementation of such

520
00:30:08,940 --> 00:30:10,220
routines

521
00:30:10,220 --> 00:30:13,919
therefore there is a lot to do

522
00:30:13,919 --> 00:30:17,279
uh in the coming years concerning the

523
00:30:17,279 --> 00:30:18,960
time efficiency and computational

524
00:30:18,960 --> 00:30:23,279
efficiency of the homomorphic encryption

525
00:30:23,279 --> 00:30:26,059
routines

526
00:30:26,299 --> 00:30:31,320
in essence this is what I wanted to to

527
00:30:31,320 --> 00:30:33,000
present

528
00:30:33,000 --> 00:30:38,840
and I'm waiting for your questions

529
00:30:40,679 --> 00:30:42,720
so do we have questions in the audience

530
00:30:42,720 --> 00:30:45,200
yes

531
00:30:46,200 --> 00:30:48,360
thank you for your presentation very

532
00:30:48,360 --> 00:30:52,020
interesting I have several questions

533
00:30:52,020 --> 00:30:54,260
so in the end

534
00:30:54,260 --> 00:30:56,299
what exactly

535
00:30:56,299 --> 00:31:00,120
is the encryption scheme

536
00:31:00,120 --> 00:31:06,360
so uh the the encryption scheme uh is uh

537
00:31:06,360 --> 00:31:08,000
for the

538
00:31:08,000 --> 00:31:10,620
processing of the personal medical data

539
00:31:10,620 --> 00:31:13,679
is that homorphic encryption scheme

540
00:31:13,679 --> 00:31:17,399
which is based on the operations that I

541
00:31:17,399 --> 00:31:19,919
enumerated so it's homomorphic and

542
00:31:19,919 --> 00:31:22,679
addition homomorphic multiplication as

543
00:31:22,679 --> 00:31:25,020
the two basic operations

544
00:31:25,020 --> 00:31:28,440
that are sustained by you the end and

545
00:31:28,440 --> 00:31:30,659
exclusive or Gates

546
00:31:30,659 --> 00:31:33,179
and uh

547
00:31:33,179 --> 00:31:37,940
this is the scheme and for the

548
00:31:37,940 --> 00:31:42,080
transmission of data synchronization

549
00:31:42,080 --> 00:31:45,419
or state data through the system we use

550
00:31:45,419 --> 00:31:48,380
a standard AES

551
00:31:48,380 --> 00:31:51,299
encryption scheme but for the processing

552
00:31:51,299 --> 00:31:53,880
of the personal data is the homomorphic

553
00:31:53,880 --> 00:31:56,720
encryption

554
00:31:56,880 --> 00:32:01,220
okay yes we have another question

555
00:32:05,820 --> 00:32:07,679
so I was curious can you speak a little

556
00:32:07,679 --> 00:32:10,679
bit about why you had to use those 5G

557
00:32:10,679 --> 00:32:13,679
virtual Network functions uh instead of

558
00:32:13,679 --> 00:32:15,480
uh

559
00:32:15,480 --> 00:32:19,200
um uh just a normal let's say https

560
00:32:19,200 --> 00:32:22,740
based data transfer to get the data into

561
00:32:22,740 --> 00:32:24,299
the secure

562
00:32:24,299 --> 00:32:26,658
storage

563
00:32:26,720 --> 00:32:33,179
uh so uh the the 5G is uh represents

564
00:32:33,179 --> 00:32:36,659
only the physical layer which allows us

565
00:32:36,659 --> 00:32:41,399
to implement the data channels for the

566
00:32:41,399 --> 00:32:43,620
transmission of the data mainly in order

567
00:32:43,620 --> 00:32:46,679
to contact the server backend components

568
00:32:46,679 --> 00:32:50,580
uh of course we use secured data

569
00:32:50,580 --> 00:32:51,720
channels

570
00:32:51,720 --> 00:32:55,700
and the the choice for uh the 5G

571
00:32:55,700 --> 00:32:59,100
virtualize the channels was made because

572
00:32:59,100 --> 00:33:03,120
we wanted to see how such a system would

573
00:33:03,120 --> 00:33:05,100
couple with the transmission of the data

574
00:33:05,100 --> 00:33:08,820
through a virtualized 5G infrastructure

575
00:33:08,820 --> 00:33:10,860
and how

576
00:33:10,860 --> 00:33:13,620
such an infrastructure would would

577
00:33:13,620 --> 00:33:17,220
simply scale up with the amount of data

578
00:33:17,220 --> 00:33:20,279
the initial version of the system uh

579
00:33:20,279 --> 00:33:23,159
consider the standard data connections

580
00:33:23,159 --> 00:33:26,760
such as wireless connections uh 3G 4G

581
00:33:26,760 --> 00:33:28,080
connections

582
00:33:28,080 --> 00:33:32,760
but this represents a

583
00:33:32,760 --> 00:33:36,919
another iteration of the research

584
00:33:38,640 --> 00:33:41,820
great uh any other questions

585
00:33:41,820 --> 00:33:45,740
yes yes we have a question

586
00:33:46,320 --> 00:33:47,760
good day

587
00:33:47,760 --> 00:33:50,159
thank you for the presentation and you

588
00:33:50,159 --> 00:33:53,640
mentioned neutral system and and what

589
00:33:53,640 --> 00:33:56,580
word do you use it do you think about

590
00:33:56,580 --> 00:33:59,039
making pizza encryption post Quantum

591
00:33:59,039 --> 00:34:01,340
safe

592
00:34:03,179 --> 00:34:05,659
we haven't

593
00:34:06,120 --> 00:34:09,719
relevant uh research assessments

594
00:34:09,719 --> 00:34:12,480
concerning the level of safety against

595
00:34:12,480 --> 00:34:16,139
the quantum computers attacks

596
00:34:16,139 --> 00:34:20,820
so we I cannot express with a sufficient

597
00:34:20,820 --> 00:34:23,879
degree of relevance on how safe the

598
00:34:23,879 --> 00:34:25,679
model is for Quantum computer-based

599
00:34:25,679 --> 00:34:27,119
attacks

600
00:34:27,119 --> 00:34:29,300
but

601
00:34:29,300 --> 00:34:32,280
at least for uh poorly implemented

602
00:34:32,280 --> 00:34:34,260
attacks it should be

603
00:34:34,260 --> 00:34:37,260
pretty safe yeah

604
00:34:37,260 --> 00:34:40,980
okay uh I have seen another hand raised

605
00:34:40,980 --> 00:34:44,159
over here someplace and my

606
00:34:44,159 --> 00:34:47,060
yeah there

607
00:34:47,639 --> 00:34:49,918
oh okay

608
00:34:49,918 --> 00:34:53,460
so we've all you've already managed to

609
00:34:53,460 --> 00:34:56,219
answer two questions in one so I think

610
00:34:56,219 --> 00:35:00,180
that's a great performance uh thank you

611
00:35:00,180 --> 00:35:04,700
so much uh for your presentation

