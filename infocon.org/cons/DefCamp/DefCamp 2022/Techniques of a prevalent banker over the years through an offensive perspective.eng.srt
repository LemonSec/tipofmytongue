1
00:00:00,000 --> 00:00:01,439
everyone

2
00:00:01,439 --> 00:00:04,140
have you ever wondered why malicious

3
00:00:04,140 --> 00:00:05,940
actors use different techniques while

4
00:00:05,940 --> 00:00:07,919
developing their modeler or how they

5
00:00:07,919 --> 00:00:08,760
think

6
00:00:08,760 --> 00:00:11,099
well today I'm gonna present you the

7
00:00:11,099 --> 00:00:12,660
techniques of a prevalent Banker over

8
00:00:12,660 --> 00:00:13,679
the years

9
00:00:13,679 --> 00:00:15,480
to an offensive perspective and I hope

10
00:00:15,480 --> 00:00:17,340
I'm gonna answer to the previous

11
00:00:17,340 --> 00:00:19,560
questions

12
00:00:19,560 --> 00:00:22,980
well my name is Mariano and I'm a

13
00:00:22,980 --> 00:00:24,960
specialist threat researcher at Northern

14
00:00:24,960 --> 00:00:27,720
LifeLock currently we have changed our

15
00:00:27,720 --> 00:00:30,119
name and now we are gen digital

16
00:00:30,119 --> 00:00:33,000
and my main responsibilities are threat

17
00:00:33,000 --> 00:00:36,000
and vulnerability research

18
00:00:36,000 --> 00:00:39,540
well let's get into it today's topic I'm

19
00:00:39,540 --> 00:00:41,820
gonna start with a brief introduction to

20
00:00:41,820 --> 00:00:43,980
Black Moon and the terminology the

21
00:00:43,980 --> 00:00:46,980
technical analysis of a mother family

22
00:00:46,980 --> 00:00:49,620
how would the malware arrives the

23
00:00:49,620 --> 00:00:51,300
delivery methods and the expected

24
00:00:51,300 --> 00:00:54,360
results the techniques that were used in

25
00:00:54,360 --> 00:00:56,520
the latest version of Black Moon

26
00:00:56,520 --> 00:00:58,739
the offensive perspective over those

27
00:00:58,739 --> 00:01:01,559
techniques and some comparison with

28
00:01:01,559 --> 00:01:04,019
other variants of this model

29
00:01:04,019 --> 00:01:08,700
okay so a short introduction

30
00:01:08,700 --> 00:01:13,200
black moon it's also known as bambra or

31
00:01:13,200 --> 00:01:16,260
KR Banker because it was originally in

32
00:01:16,260 --> 00:01:18,540
Korea in 2014

33
00:01:18,540 --> 00:01:22,920
and its smaller category it's a Trojan a

34
00:01:22,920 --> 00:01:24,540
banker exactly

35
00:01:24,540 --> 00:01:28,500
and it's copied to steal credentials

36
00:01:28,500 --> 00:01:30,840
from banking institutions client in

37
00:01:30,840 --> 00:01:34,799
order to access their their accounts and

38
00:01:34,799 --> 00:01:35,880
Gain

39
00:01:35,880 --> 00:01:38,280
gain access to to their financial

40
00:01:38,280 --> 00:01:39,600
information

41
00:01:39,600 --> 00:01:42,600
other variants also delivered malicious

42
00:01:42,600 --> 00:01:44,400
payloads

43
00:01:44,400 --> 00:01:47,640
to the targeted users okay a short

44
00:01:47,640 --> 00:01:48,960
disclaimer

45
00:01:48,960 --> 00:01:50,820
we are not covering all the black moon

46
00:01:50,820 --> 00:01:54,360
variants due to various reasons one of

47
00:01:54,360 --> 00:01:56,280
them is the fact that the time is

48
00:01:56,280 --> 00:01:57,899
limited for this talk

49
00:01:57,899 --> 00:02:03,960
and some changes were small so

50
00:02:03,960 --> 00:02:06,119
we didn't want him to to mention them

51
00:02:06,119 --> 00:02:08,940
because the flow was somehow the same

52
00:02:08,940 --> 00:02:12,780
but the changes were really small and

53
00:02:12,780 --> 00:02:16,560
also the research was done based on our

54
00:02:16,560 --> 00:02:18,840
Telemetry so there might be some cases

55
00:02:18,840 --> 00:02:21,900
that we have probably missed but let's

56
00:02:21,900 --> 00:02:25,739
focus on on the one that

57
00:02:25,739 --> 00:02:28,220
that are are part of this presentation

58
00:02:28,220 --> 00:02:32,700
okay here are some some numbers

59
00:02:32,700 --> 00:02:34,800
regarding the samples that were

60
00:02:34,800 --> 00:02:37,260
identified in the Years

61
00:02:37,260 --> 00:02:40,739
the idea is that even the

62
00:02:40,739 --> 00:02:44,480
the malware started in 2014 we are still

63
00:02:44,480 --> 00:02:46,700
we still

64
00:02:46,700 --> 00:02:50,760
uh received a lot of samples in 2022

65
00:02:50,760 --> 00:02:52,800
here is a

66
00:02:52,800 --> 00:02:55,860
photo from our Telemetry and between

67
00:02:55,860 --> 00:02:58,379
June and September 2022 we received

68
00:02:58,379 --> 00:03:01,260
around 7 000 samples so the the numbers

69
00:03:01,260 --> 00:03:03,360
are still increasing

70
00:03:03,360 --> 00:03:06,900
okay a short recap about malware

71
00:03:06,900 --> 00:03:08,580
analysis

72
00:03:08,580 --> 00:03:11,760
portable executable looks on on disk

73
00:03:11,760 --> 00:03:16,860
uh PE file is actually uh it's actually

74
00:03:16,860 --> 00:03:19,260
the executable files on Windows systems

75
00:03:19,260 --> 00:03:23,400
so we see here the architecture in the

76
00:03:23,400 --> 00:03:25,800
header the sections some the compile

77
00:03:25,800 --> 00:03:28,080
time and other informations that are

78
00:03:28,080 --> 00:03:30,000
available

79
00:03:30,000 --> 00:03:33,080
about static analysis

80
00:03:33,080 --> 00:03:36,260
we refer to static analysis as

81
00:03:36,260 --> 00:03:38,700
everything that we can obtain from a

82
00:03:38,700 --> 00:03:42,060
sample without executing it so

83
00:03:42,060 --> 00:03:45,379
everything that we can see like strings

84
00:03:45,379 --> 00:03:47,700
linked libraries Imports function

85
00:03:47,700 --> 00:03:52,079
exports and others and

86
00:03:52,920 --> 00:03:54,780
when we are talking about Dynamic

87
00:03:54,780 --> 00:03:57,840
analysis we will run the sample and see

88
00:03:57,840 --> 00:04:01,379
everything that the sample is doing on

89
00:04:01,379 --> 00:04:03,599
the the system like registry

90
00:04:03,599 --> 00:04:07,200
modifications if there are any process

91
00:04:07,200 --> 00:04:10,200
activity or network activity and then we

92
00:04:10,200 --> 00:04:12,239
can go to the debugging state

93
00:04:12,239 --> 00:04:15,840
to Kernel debugging user mode debugging

94
00:04:15,840 --> 00:04:19,139
and dump some memory and see what we can

95
00:04:19,139 --> 00:04:20,579
extract from that point

96
00:04:20,579 --> 00:04:24,360
okay now the delivery methods for Black

97
00:04:24,360 --> 00:04:25,380
Moon

98
00:04:25,380 --> 00:04:27,180
well it was

99
00:04:27,180 --> 00:04:30,120
social engineering and also by other

100
00:04:30,120 --> 00:04:31,380
malware

101
00:04:31,380 --> 00:04:34,919
by social engineering we meant that the

102
00:04:34,919 --> 00:04:37,080
user restricted to allow malware onto

103
00:04:37,080 --> 00:04:40,040
their machines and this is actually made

104
00:04:40,040 --> 00:04:43,800
by a psychological manipulation and I

105
00:04:43,800 --> 00:04:45,960
have a statement here a good scam is

106
00:04:45,960 --> 00:04:48,120
targeting people's reaction on specific

107
00:04:48,120 --> 00:04:49,940
emotions so

108
00:04:49,940 --> 00:04:52,860
these These are the one that that have

109
00:04:52,860 --> 00:04:54,240
the most impact

110
00:04:54,240 --> 00:04:57,000
because they are somehow playing with

111
00:04:57,000 --> 00:04:59,880
with our emotions

112
00:04:59,880 --> 00:05:03,000
okay how this is done via spam emails

113
00:05:03,000 --> 00:05:05,520
attachments other campaigns or as

114
00:05:05,520 --> 00:05:09,000
mentioned before through other modelers

115
00:05:09,000 --> 00:05:12,900
droppers downloaders backdoors what what

116
00:05:12,900 --> 00:05:16,139
are those exactly well a dropper drops

117
00:05:16,139 --> 00:05:18,780
the malicious file on disk a downloader

118
00:05:18,780 --> 00:05:22,139
interact with the internet and make

119
00:05:22,139 --> 00:05:24,660
requests and try to download the

120
00:05:24,660 --> 00:05:29,600
malicious payload into the the system

121
00:05:29,600 --> 00:05:33,979
and the back door means that the

122
00:05:33,979 --> 00:05:37,500
attacker already gained the access to

123
00:05:37,500 --> 00:05:40,680
the targeted machine and

124
00:05:40,680 --> 00:05:42,840
just download the the malware and

125
00:05:42,840 --> 00:05:46,440
execute it okay now the infection chain

126
00:05:46,440 --> 00:05:49,259
of the latest version identified in our

127
00:05:49,259 --> 00:05:50,940
telemetry

128
00:05:50,940 --> 00:05:54,900
we have here the initial sample that is

129
00:05:54,900 --> 00:05:57,360
going to drop a file into program files

130
00:05:57,360 --> 00:05:59,580
then it's going to create some

131
00:05:59,580 --> 00:06:02,300
persistence in services

132
00:06:02,300 --> 00:06:06,259
after that it's going to

133
00:06:06,259 --> 00:06:09,419
the service is going to start and a new

134
00:06:09,419 --> 00:06:12,000
process is going to to be run and the

135
00:06:12,000 --> 00:06:16,199
payload is executed it's injected

136
00:06:16,199 --> 00:06:17,699
actually in memory and then it's

137
00:06:17,699 --> 00:06:22,199
executed okay uh

138
00:06:22,500 --> 00:06:26,340
at step six uh I see that here is a

139
00:06:26,340 --> 00:06:28,500
little problem with with the

140
00:06:28,500 --> 00:06:30,720
presentation but at step six we we have

141
00:06:30,720 --> 00:06:34,020
a VBS file a script that is going to to

142
00:06:34,020 --> 00:06:36,360
just delete the initial file from disk

143
00:06:36,360 --> 00:06:38,100
okay

144
00:06:38,100 --> 00:06:39,539
now

145
00:06:39,539 --> 00:06:40,199
um

146
00:06:40,199 --> 00:06:42,900
we can see the the first thing that we

147
00:06:42,900 --> 00:06:46,979
observed is that the the file was packed

148
00:06:46,979 --> 00:06:50,100
uh was packed with a common Packer what

149
00:06:50,100 --> 00:06:53,340
packing means well actually we can think

150
00:06:53,340 --> 00:06:56,460
like the executable is compressed and we

151
00:06:56,460 --> 00:06:58,919
don't have access to the initial

152
00:06:58,919 --> 00:07:01,800
information like we cannot access all

153
00:07:01,800 --> 00:07:04,199
the strings all the import files and and

154
00:07:04,199 --> 00:07:06,600
everything that was mentioned before at

155
00:07:06,600 --> 00:07:08,699
the static analysis

156
00:07:08,699 --> 00:07:11,340
so um I'm gonna focus on something more

157
00:07:11,340 --> 00:07:12,660
visual now

158
00:07:12,660 --> 00:07:15,960
we can see here that a new process is

159
00:07:15,960 --> 00:07:19,860
created the FD launcher sr.exe

160
00:07:19,860 --> 00:07:22,020
this is really important because as

161
00:07:22,020 --> 00:07:24,240
mentioned before the persistence

162
00:07:24,240 --> 00:07:27,360
persistence was done via services

163
00:07:27,360 --> 00:07:32,639
and we can see at sample.exe that we

164
00:07:32,639 --> 00:07:35,699
don't have the new process under its

165
00:07:35,699 --> 00:07:37,139
initial process tree

166
00:07:37,139 --> 00:07:40,080
why this is made why why this was done

167
00:07:40,080 --> 00:07:41,419
actually

168
00:07:41,419 --> 00:07:44,960
well because

169
00:07:45,060 --> 00:07:46,860
some

170
00:07:46,860 --> 00:07:48,139
some

171
00:07:48,139 --> 00:07:52,319
defensive mechanism are watching over

172
00:07:52,319 --> 00:07:54,479
the processary of

173
00:07:54,479 --> 00:07:57,479
of the initial sample and in order to

174
00:07:57,479 --> 00:08:01,039
evade such detections it's actually

175
00:08:01,039 --> 00:08:04,740
starting from the services that EMC the

176
00:08:04,740 --> 00:08:06,900
the service manager on Windows

177
00:08:06,900 --> 00:08:10,319
so this is actually an evasion technique

178
00:08:10,319 --> 00:08:11,699
okay

179
00:08:11,699 --> 00:08:16,039
now what we can see here is that the the

180
00:08:16,039 --> 00:08:21,020
process if the the sample FD launcher Sr

181
00:08:21,020 --> 00:08:24,539
was dropped on the program files uh

182
00:08:24,539 --> 00:08:27,599
under named Microsoft SQL Server compact

183
00:08:27,599 --> 00:08:29,460
Edition

184
00:08:29,460 --> 00:08:32,880
do anyone know why this was done can we

185
00:08:32,880 --> 00:08:34,559
think about

186
00:08:34,559 --> 00:08:38,279
an interpretation why why this was made

187
00:08:38,279 --> 00:08:40,580
why in that

188
00:08:40,580 --> 00:08:44,099
directory why in that way under that

189
00:08:44,099 --> 00:08:45,899
name

190
00:08:45,899 --> 00:08:47,940
well you can think about it and maybe

191
00:08:47,940 --> 00:08:51,360
maybe you will answer later

192
00:08:51,360 --> 00:08:52,800
um

193
00:08:52,800 --> 00:08:55,140
I really I really want to to hear your

194
00:08:55,140 --> 00:08:57,200
opinion about that

195
00:08:57,200 --> 00:09:01,200
and also we can see here that we have

196
00:09:01,200 --> 00:09:03,899
persistence as a service the name and

197
00:09:03,899 --> 00:09:06,240
description is also related to Microsoft

198
00:09:06,240 --> 00:09:10,140
services and the start type it's two so

199
00:09:10,140 --> 00:09:12,560
the service is gonna start automatically

200
00:09:12,560 --> 00:09:15,660
so again uh to run offensive perspective

201
00:09:15,660 --> 00:09:18,839
this is done to various reasons one of

202
00:09:18,839 --> 00:09:21,600
them let's see like okay the user

203
00:09:21,600 --> 00:09:25,200
understand that okay I'm compromised I

204
00:09:25,200 --> 00:09:27,300
see new files on disk or something like

205
00:09:27,300 --> 00:09:30,120
that let's just shut the computer down

206
00:09:30,120 --> 00:09:33,480
and put it again well when we have

207
00:09:33,480 --> 00:09:37,560
persistence over this kind of samples it

208
00:09:37,560 --> 00:09:39,720
doesn't matter because the the sample is

209
00:09:39,720 --> 00:09:44,100
gonna start again again at each boot so

210
00:09:44,100 --> 00:09:48,300
this is this is done for for persistence

211
00:09:48,300 --> 00:09:52,980
okay here a little cleanup stage

212
00:09:52,980 --> 00:09:55,920
where the the script it's uh it's going

213
00:09:55,920 --> 00:09:58,740
to delete the initial file from disk

214
00:09:58,740 --> 00:10:00,839
and um

215
00:10:00,839 --> 00:10:02,760
here we can see the process injection

216
00:10:02,760 --> 00:10:05,880
phase and the network communication that

217
00:10:05,880 --> 00:10:08,459
is going to gather the

218
00:10:08,459 --> 00:10:11,700
the information from the user

219
00:10:11,700 --> 00:10:16,040
system okay after we

220
00:10:16,040 --> 00:10:20,100
analyzed the after we dumped the memory

221
00:10:20,100 --> 00:10:24,000
and received retrieved the

222
00:10:24,000 --> 00:10:28,140
the the process injection we analyzed it

223
00:10:28,140 --> 00:10:31,800
and we see here some strings that are

224
00:10:31,800 --> 00:10:34,500
related with everything that I already

225
00:10:34,500 --> 00:10:37,279
mentioned before so the SQL

226
00:10:37,279 --> 00:10:40,500
Microsoft SQL service

227
00:10:40,500 --> 00:10:43,740
um the location of the file and

228
00:10:43,740 --> 00:10:48,300
also some some of the URLs that are used

229
00:10:48,300 --> 00:10:50,220
okay

230
00:10:50,220 --> 00:10:54,060
another technique it's um

231
00:10:54,060 --> 00:10:57,240
the the fact that some strings were

232
00:10:57,240 --> 00:10:59,880
hidden and this was done by moving a

233
00:10:59,880 --> 00:11:02,040
single character at a time this is

234
00:11:02,040 --> 00:11:04,820
actually made because when we try to

235
00:11:04,820 --> 00:11:07,640
retrieve all the strings from a sample

236
00:11:07,640 --> 00:11:11,220
we don't always

237
00:11:11,220 --> 00:11:15,120
to recognize such such strings because

238
00:11:15,120 --> 00:11:17,459
they are placed one character at a time

239
00:11:17,459 --> 00:11:21,300
and usually someone is looking on

240
00:11:21,300 --> 00:11:24,540
strings that are longer as

241
00:11:24,540 --> 00:11:28,579
as analyzing the sample okay

242
00:11:28,980 --> 00:11:32,040
so here is the the meter techniques the

243
00:11:32,040 --> 00:11:33,660
all the techniques that that were

244
00:11:33,660 --> 00:11:37,380
identified for for this sample they are

245
00:11:37,380 --> 00:11:40,800
presented in this table and they are a

246
00:11:40,800 --> 00:11:44,180
sum up of what I have already presented

247
00:11:44,180 --> 00:11:47,880
and now I would like to to go to the

248
00:11:47,880 --> 00:11:49,800
techniques comparison with other

249
00:11:49,800 --> 00:11:51,600
variants of this model because as

250
00:11:51,600 --> 00:11:54,060
mentioned before it started in 2014 and

251
00:11:54,060 --> 00:11:56,339
we are still receiving samples today

252
00:11:56,339 --> 00:12:00,180
in 2014 a little background it was used

253
00:12:00,180 --> 00:12:03,600
the farming attack so um

254
00:12:03,600 --> 00:12:07,380
the traffic is redirected from a website

255
00:12:07,380 --> 00:12:10,560
to another and that another website it's

256
00:12:10,560 --> 00:12:14,220
usually owned by a malicious actor and

257
00:12:14,220 --> 00:12:18,600
it's made in a way to masquerade the

258
00:12:18,600 --> 00:12:19,980
legitimate one

259
00:12:19,980 --> 00:12:23,940
so the user want to so the user will be

260
00:12:23,940 --> 00:12:27,600
tricked and put his credential in there

261
00:12:27,600 --> 00:12:30,839
okay when we are performing a web

262
00:12:30,839 --> 00:12:32,940
request using DNS

263
00:12:32,940 --> 00:12:35,339
it's important to know that IP

264
00:12:35,339 --> 00:12:37,800
information is retrieved from the local

265
00:12:37,800 --> 00:12:40,920
system in this order first the DNS cache

266
00:12:40,920 --> 00:12:43,680
memory is going to be checked then the

267
00:12:43,680 --> 00:12:45,899
host.ics file which

268
00:12:45,899 --> 00:12:50,459
lays under C Windows system 32 drivers

269
00:12:50,459 --> 00:12:54,899
EDC and then the hosts file without an

270
00:12:54,899 --> 00:12:56,519
extension which stays in the same

271
00:12:56,519 --> 00:12:58,860
directory okay this is really important

272
00:12:58,860 --> 00:13:01,680
because it's going to be used by the the

273
00:13:01,680 --> 00:13:03,480
attackers

274
00:13:03,480 --> 00:13:06,060
in in 2014

275
00:13:06,060 --> 00:13:08,700
the the setup was done like this first

276
00:13:08,700 --> 00:13:11,700
we have the initial sample it's going to

277
00:13:11,700 --> 00:13:14,700
make a web request get request

278
00:13:14,700 --> 00:13:18,060
and something interesting is that we

279
00:13:18,060 --> 00:13:19,860
have

280
00:13:19,860 --> 00:13:22,920
here at that page

281
00:13:22,920 --> 00:13:26,700
a zip file but the zip file it's not

282
00:13:26,700 --> 00:13:29,220
actually a zip file it's just containing

283
00:13:29,220 --> 00:13:34,380
the zip header and if we if we try to

284
00:13:34,380 --> 00:13:37,980
download that zip file and open it as a

285
00:13:37,980 --> 00:13:40,519
zip we won't be able to do that because

286
00:13:40,519 --> 00:13:43,260
it only has the header of the zip file

287
00:13:43,260 --> 00:13:46,680
and all the content it's encrypted

288
00:13:46,680 --> 00:13:51,120
so what is actually happening the

289
00:13:51,120 --> 00:13:53,880
the sample it's decrypting the data and

290
00:13:53,880 --> 00:13:57,779
this host that is ICS file which will

291
00:13:57,779 --> 00:14:00,860
contain multiple banking internet Pages

292
00:14:00,860 --> 00:14:03,120
which are

293
00:14:03,120 --> 00:14:06,000
going to be moved under the the

294
00:14:06,000 --> 00:14:09,779
specified folder with name host.exe so

295
00:14:09,779 --> 00:14:10,920
okay

296
00:14:10,920 --> 00:14:14,040
why this is done I think you you can

297
00:14:14,040 --> 00:14:17,519
guess it but the fact is that next stage

298
00:14:17,519 --> 00:14:21,060
is to disable the DNS cache memory

299
00:14:21,060 --> 00:14:24,180
uh using the the registry

300
00:14:24,180 --> 00:14:28,500
and we are going to see that the the

301
00:14:28,500 --> 00:14:30,420
model where it's creating some more

302
00:14:30,420 --> 00:14:31,620
persistence

303
00:14:31,620 --> 00:14:33,360
and um

304
00:14:33,360 --> 00:14:34,639
again

305
00:14:34,639 --> 00:14:37,880
we we can expect

306
00:14:37,880 --> 00:14:40,800
uh that the the file is going to run

307
00:14:40,800 --> 00:14:42,720
when the

308
00:14:42,720 --> 00:14:45,420
the system is going to boot again okay

309
00:14:45,420 --> 00:14:47,940
how the data is collected this is really

310
00:14:47,940 --> 00:14:50,399
simple because now the user is is

311
00:14:50,399 --> 00:14:52,620
compromised when he is going to make a

312
00:14:52,620 --> 00:14:53,459
request

313
00:14:53,459 --> 00:14:57,480
it's going to use the IP that is

314
00:14:57,480 --> 00:15:00,720
specified in the host.hc so this is

315
00:15:00,720 --> 00:15:03,600
going to be freshly

316
00:15:03,600 --> 00:15:04,440
um

317
00:15:04,440 --> 00:15:08,579
a new list of of ips each time the the

318
00:15:08,579 --> 00:15:10,019
system boots

319
00:15:10,019 --> 00:15:11,579
okay

320
00:15:11,579 --> 00:15:15,540
now in 2016 a little background we have

321
00:15:15,540 --> 00:15:19,820
a proxy that enters it's an intermediary

322
00:15:19,820 --> 00:15:22,800
for our requests

323
00:15:22,800 --> 00:15:25,620
and a pack file which is actually a

324
00:15:25,620 --> 00:15:28,800
JavaScript that

325
00:15:28,800 --> 00:15:31,079
it's going to decide what is going to

326
00:15:31,079 --> 00:15:32,639
happen with our request

327
00:15:32,639 --> 00:15:34,920
okay

328
00:15:34,920 --> 00:15:37,199
in the same configuration the initial

329
00:15:37,199 --> 00:15:39,480
sample is going to start a proxy which

330
00:15:39,480 --> 00:15:43,440
is going to be host on the uh which is

331
00:15:43,440 --> 00:15:45,019
going to host the the encrypted

332
00:15:45,019 --> 00:15:47,160
encrypted JavaScript

333
00:15:47,160 --> 00:15:49,500
which is going to decide what is going

334
00:15:49,500 --> 00:15:51,660
to happen with our request

335
00:15:51,660 --> 00:15:55,019
the decrypted JavaScript contains

336
00:15:55,019 --> 00:15:57,360
multiple

337
00:15:57,360 --> 00:16:01,500
um internet banking pages and when the

338
00:16:01,500 --> 00:16:03,600
data is going to be collected the user

339
00:16:03,600 --> 00:16:06,240
is going to make a request

340
00:16:06,240 --> 00:16:09,480
and the back file it's actually going to

341
00:16:09,480 --> 00:16:12,240
check what type of request is there so

342
00:16:12,240 --> 00:16:14,579
if the request is something related with

343
00:16:14,579 --> 00:16:17,100
a banking institution is going to

344
00:16:17,100 --> 00:16:19,339
redirect it to the malicious website

345
00:16:19,339 --> 00:16:23,100
otherwise it's going to resolve it as a

346
00:16:23,100 --> 00:16:25,440
normal request

347
00:16:25,440 --> 00:16:27,420
okay

348
00:16:27,420 --> 00:16:31,219
now in 2017

349
00:16:31,260 --> 00:16:34,920
we have a downloader

350
00:16:34,920 --> 00:16:37,740
which is going to perform a get request

351
00:16:37,740 --> 00:16:39,360
to a web page

352
00:16:39,360 --> 00:16:41,160
and it's going to download the malicious

353
00:16:41,160 --> 00:16:44,360
file on disk okay

354
00:16:44,459 --> 00:16:47,639
the file is going to be executed and we

355
00:16:47,639 --> 00:16:50,940
can see here that something new

356
00:16:50,940 --> 00:16:53,160
has changed in the way of operation of

357
00:16:53,160 --> 00:16:54,120
this model

358
00:16:54,120 --> 00:16:57,360
so auxor operation is going to be made

359
00:16:57,360 --> 00:17:00,540
on some of its bytes in order to decode

360
00:17:00,540 --> 00:17:01,860
an URL

361
00:17:01,860 --> 00:17:05,220
and it's going to make a get request to

362
00:17:05,220 --> 00:17:08,220
that URL which is going to download a

363
00:17:08,220 --> 00:17:12,260
gpg file on disk

364
00:17:12,660 --> 00:17:14,179
okay

365
00:17:14,179 --> 00:17:18,919
now that file is actually not a gpg file

366
00:17:18,919 --> 00:17:23,040
uh and uh it's going to make another

367
00:17:23,040 --> 00:17:26,819
store to decode the bytes of that gpg

368
00:17:26,819 --> 00:17:28,199
file and obtain a new portable

369
00:17:28,199 --> 00:17:30,480
executable one

370
00:17:30,480 --> 00:17:33,780
that portable executable it's going to

371
00:17:33,780 --> 00:17:36,900
be executed and it's going to check the

372
00:17:36,900 --> 00:17:38,160
device language

373
00:17:38,160 --> 00:17:39,840
this is a really really interesting step

374
00:17:39,840 --> 00:17:41,400
because

375
00:17:41,400 --> 00:17:44,280
if the language doesn't correspond with

376
00:17:44,280 --> 00:17:46,320
the targeted

377
00:17:46,320 --> 00:17:48,840
the targeted country it's just going to

378
00:17:48,840 --> 00:17:50,340
stop

379
00:17:50,340 --> 00:17:53,280
otherwise it's going to interact with

380
00:17:53,280 --> 00:17:55,740
the command and control server and it's

381
00:17:55,740 --> 00:17:58,380
going to download the black moon and

382
00:17:58,380 --> 00:18:00,720
then it's going to execute it but this

383
00:18:00,720 --> 00:18:02,160
step it doesn't matter what kind of

384
00:18:02,160 --> 00:18:05,280
Black Moon it is if it's a 2014 2016 20

385
00:18:05,280 --> 00:18:06,660
whatever stage

386
00:18:06,660 --> 00:18:09,840
uh the the important the important thing

387
00:18:09,840 --> 00:18:11,580
is that

388
00:18:11,580 --> 00:18:14,640
all those steps were done

389
00:18:14,640 --> 00:18:18,380
with with what reason

390
00:18:18,480 --> 00:18:22,280
can can someone guess it

391
00:18:30,360 --> 00:18:32,880
okay someone said like to to not

392
00:18:32,880 --> 00:18:34,740
download the binary the right directly

393
00:18:34,740 --> 00:18:36,840
on the virtual machine and analyze it

394
00:18:36,840 --> 00:18:41,159
yes other yes

395
00:18:42,360 --> 00:18:45,840
trigger any defenses

396
00:18:45,840 --> 00:18:48,600
if all those steps go

397
00:18:48,600 --> 00:18:50,940
I would say that all those steps are

398
00:18:50,940 --> 00:18:53,640
designed to try and Trigger any defenses

399
00:18:53,640 --> 00:18:54,980
possibly

400
00:18:54,980 --> 00:18:57,900
and if if it so happens that all of this

401
00:18:57,900 --> 00:19:01,380
execution passes successfully then it's

402
00:19:01,380 --> 00:19:03,600
more likely that black moon will also be

403
00:19:03,600 --> 00:19:06,179
executed successfully yes somehow it's

404
00:19:06,179 --> 00:19:08,820
it's done to to actually evade the

405
00:19:08,820 --> 00:19:11,280
detection for the for the in the the

406
00:19:11,280 --> 00:19:13,799
actually the the payload the black mold

407
00:19:13,799 --> 00:19:19,080
so to somehow not detect in the first

408
00:19:19,080 --> 00:19:23,580
stage the the model directly so just go

409
00:19:23,580 --> 00:19:25,740
to the Drone downloaders over and over

410
00:19:25,740 --> 00:19:30,960
again and see where it can get okay

411
00:19:32,640 --> 00:19:37,919
in 2021 or the

412
00:19:37,919 --> 00:19:42,299
the stages were a little

413
00:19:42,299 --> 00:19:45,660
a little different so the initial sample

414
00:19:45,660 --> 00:19:49,440
made a copy of itself then it drops the

415
00:19:49,440 --> 00:19:51,299
VBS file

416
00:19:51,299 --> 00:19:53,760
that downloaded the payload

417
00:19:53,760 --> 00:19:57,360
which it's actually going to to perform

418
00:19:57,360 --> 00:19:59,820
a get request and obtain that to that

419
00:19:59,820 --> 00:20:02,760
malicious file and then it's going to

420
00:20:02,760 --> 00:20:04,980
run the malware

421
00:20:04,980 --> 00:20:07,500
for that the persistence is going to be

422
00:20:07,500 --> 00:20:10,380
created in the Run registry

423
00:20:10,380 --> 00:20:13,799
for the copy so if the initial sample is

424
00:20:13,799 --> 00:20:15,720
going to be deleted the copy is going to

425
00:20:15,720 --> 00:20:17,580
be still there and the persistence is

426
00:20:17,580 --> 00:20:20,520
made on the the copy of

427
00:20:20,520 --> 00:20:23,160
of the modeler okay

428
00:20:23,160 --> 00:20:25,380
now as a conclusion

429
00:20:25,380 --> 00:20:29,640
it is actually better when you know what

430
00:20:29,640 --> 00:20:31,980
you are fighting against so what I

431
00:20:31,980 --> 00:20:35,100
wanted to point is that both offensive

432
00:20:35,100 --> 00:20:37,200
perspectives and defensive perspectives

433
00:20:37,200 --> 00:20:39,539
are linked together

434
00:20:39,539 --> 00:20:42,500
uh through an offensive perspective

435
00:20:42,500 --> 00:20:47,039
when we we want to to see things through

436
00:20:47,039 --> 00:20:49,460
an offensive perspective

437
00:20:49,460 --> 00:20:54,059
adversaries are have to evaluate need to

438
00:20:54,059 --> 00:20:57,840
evaluate all the mechanisms that uh

439
00:20:57,840 --> 00:21:00,299
Solutions defensive Solutions provide in

440
00:21:00,299 --> 00:21:02,039
order to bypass them

441
00:21:02,039 --> 00:21:05,160
and when we are creating defensive

442
00:21:05,160 --> 00:21:08,160
powerful defensive Solutions we have to

443
00:21:08,160 --> 00:21:10,260
take in considerations how adversaries

444
00:21:10,260 --> 00:21:13,100
thinks and to try to

445
00:21:13,100 --> 00:21:15,840
identify and

446
00:21:15,840 --> 00:21:18,539
mitigate such actions

447
00:21:18,539 --> 00:21:22,740
and this is what what we work on at gen

448
00:21:22,740 --> 00:21:25,860
digital we try to build

449
00:21:25,860 --> 00:21:28,220
to build powerful defensive Solutions

450
00:21:28,220 --> 00:21:31,140
well thank you if you have any questions

451
00:21:31,140 --> 00:21:35,880
please and also I I want to to check the

452
00:21:35,880 --> 00:21:37,559
the answers for the the previous

453
00:21:37,559 --> 00:21:39,980
question

454
00:21:49,380 --> 00:21:52,620
sorry uh can we help with the microphone

455
00:21:52,620 --> 00:21:55,440
thank you for the presentation uh

456
00:21:55,440 --> 00:21:58,799
one question here is this avoidable by

457
00:21:58,799 --> 00:22:00,120
using a secure

458
00:22:00,120 --> 00:22:01,980
security or will it be overwritten

459
00:22:01,980 --> 00:22:02,880
anyway

460
00:22:02,880 --> 00:22:05,880
uh Excuse excuse me could you please

461
00:22:05,880 --> 00:22:08,460
repeat the question is this avoidable by

462
00:22:08,460 --> 00:22:11,220
using a secure DNS server or will it be

463
00:22:11,220 --> 00:22:13,140
overwritten anyway

464
00:22:13,140 --> 00:22:16,980
if it is if you can avoid downloading

465
00:22:16,980 --> 00:22:18,360
them

466
00:22:18,360 --> 00:22:18,960
um

467
00:22:18,960 --> 00:22:20,820
malicious

468
00:22:20,820 --> 00:22:22,559
well

469
00:22:22,559 --> 00:22:25,380
yes this can be avoided through through

470
00:22:25,380 --> 00:22:29,400
different mechanisms and this can also

471
00:22:29,400 --> 00:22:31,860
be detected also

472
00:22:31,860 --> 00:22:34,559
okay but if you like change your DNS

473
00:22:34,559 --> 00:22:37,380
server does it help in any way like

474
00:22:37,380 --> 00:22:42,179
or it's uh well the idea is that the you

475
00:22:42,179 --> 00:22:44,880
are referring to the DNS cache memory

476
00:22:44,880 --> 00:22:49,140
stage at the 2017 when it was disabled

477
00:22:49,140 --> 00:22:51,500
and

478
00:22:51,900 --> 00:22:56,720
it was used the host.ics file

479
00:22:57,419 --> 00:23:02,100
figure out if you can like avoid this by

480
00:23:02,100 --> 00:23:04,140
like without

481
00:23:04,140 --> 00:23:07,860
um antivirus or anything like that

482
00:23:07,860 --> 00:23:11,220
oh here's a proxy depends yeah I use a

483
00:23:11,220 --> 00:23:13,320
proxy or different uh different

484
00:23:13,320 --> 00:23:15,600
techniques yes

485
00:23:15,600 --> 00:23:18,240
okay thanks

486
00:23:18,240 --> 00:23:19,679
okay

487
00:23:19,679 --> 00:23:22,080
so to the first question the answer is

488
00:23:22,080 --> 00:23:24,240
to make it seem legit that it belongs to

489
00:23:24,240 --> 00:23:26,419
Microsoft at least that's why I think

490
00:23:26,419 --> 00:23:30,240
there is no compact Edition anyway so it

491
00:23:30,240 --> 00:23:33,059
wouldn't uh overwrite anything it would

492
00:23:33,059 --> 00:23:35,220
seem like an artifact because Microsoft

493
00:23:35,220 --> 00:23:38,659
does live artifacts in setups okay yes

494
00:23:38,659 --> 00:23:42,539
maybe one way to avoid that I think is

495
00:23:42,539 --> 00:23:44,820
by being a low privileged user because

496
00:23:44,820 --> 00:23:47,039
you can write in program files

497
00:23:47,039 --> 00:23:49,500
and that's why they avoided everything

498
00:23:49,500 --> 00:23:51,179
in uh

499
00:23:51,179 --> 00:23:53,940
later versions regarding program files

500
00:23:53,940 --> 00:23:58,260
and downloading a JPEG is

501
00:23:58,260 --> 00:24:01,620
let's say an innocent at first glance

502
00:24:01,620 --> 00:24:03,780
uh

503
00:24:03,780 --> 00:24:04,980
can you please repeat the other

504
00:24:04,980 --> 00:24:06,120
questions

505
00:24:06,120 --> 00:24:09,179
well this was the question the why the

506
00:24:09,179 --> 00:24:11,280
name is used and why in that specific

507
00:24:11,280 --> 00:24:13,559
folder why end program files and to the

508
00:24:13,559 --> 00:24:16,260
other the other question for obfuscation

509
00:24:16,260 --> 00:24:18,480
with all the actor and everything else

510
00:24:18,480 --> 00:24:22,200
to not make it seem so easy to detect

511
00:24:22,200 --> 00:24:25,559
because it's one thing to see a VBS and

512
00:24:25,559 --> 00:24:27,980
even someone not

513
00:24:27,980 --> 00:24:31,919
I.T servicing a link that they don't

514
00:24:31,919 --> 00:24:34,500
recognize and might seem suspicious but

515
00:24:34,500 --> 00:24:37,140
some garbage code that is obfuscated

516
00:24:37,140 --> 00:24:40,500
might not seem that dangerous maybe yes

517
00:24:40,500 --> 00:24:42,659
not just to avoid detection for uh

518
00:24:42,659 --> 00:24:45,120
anti-viruses but I mean even to the user

519
00:24:45,120 --> 00:24:47,220
because some users might Panic if they

520
00:24:47,220 --> 00:24:49,919
see a new file yes if it's innocent it's

521
00:24:49,919 --> 00:24:53,100
innocent somehow yeah this is this is

522
00:24:53,100 --> 00:24:55,679
really a really good question thank you

523
00:24:55,679 --> 00:24:56,760
um

524
00:24:56,760 --> 00:25:00,900
the the idea is that obviously to to

525
00:25:00,900 --> 00:25:03,539
masquerade Itself by as a Microsoft

526
00:25:03,539 --> 00:25:06,900
legitimate software and under that that

527
00:25:06,900 --> 00:25:09,600
specific directory in program files

528
00:25:09,600 --> 00:25:12,960
because what do we have in program files

529
00:25:12,960 --> 00:25:15,960
we we have the installed software that

530
00:25:15,960 --> 00:25:18,720
is in our devices so a normal user when

531
00:25:18,720 --> 00:25:21,000
it's going to just check there it's

532
00:25:21,000 --> 00:25:22,559
going to see something from Microsoft

533
00:25:22,559 --> 00:25:24,840
and it's going to say oh okay this is

534
00:25:24,840 --> 00:25:27,299
legitimate I'm not gonna delete anything

535
00:25:27,299 --> 00:25:29,760
from here so this is one of the reasons

536
00:25:29,760 --> 00:25:32,460
and also somehow to bypass the

537
00:25:32,460 --> 00:25:34,380
detections because

538
00:25:34,380 --> 00:25:38,640
maybe the user it's going to make some

539
00:25:38,640 --> 00:25:40,919
exclusion lists and is going to include

540
00:25:40,919 --> 00:25:43,320
that that directory on the exclusion

541
00:25:43,320 --> 00:25:46,799
list and somehow to to evade detection I

542
00:25:46,799 --> 00:25:48,900
think the temp folder is better for that

543
00:25:48,900 --> 00:25:51,480
because nobody clears it and it's

544
00:25:51,480 --> 00:25:53,940
usually excluded

545
00:25:53,940 --> 00:25:57,480
uh yes temp folder it's somehow of a

546
00:25:57,480 --> 00:25:59,820
directory that it's commonly targeted by

547
00:25:59,820 --> 00:26:03,000
malware indeed I I was surprised to not

548
00:26:03,000 --> 00:26:05,820
see stuck on a stagnography used in the

549
00:26:05,820 --> 00:26:08,100
jpeg I thought that's what it will use

550
00:26:08,100 --> 00:26:12,620
to do another get request uh actually no

551
00:26:12,620 --> 00:26:15,900
stenography it wasn't used but um

552
00:26:15,900 --> 00:26:20,279
the the payload was each time obfuscated

553
00:26:20,279 --> 00:26:26,100
and encoded so we had to check the

554
00:26:26,100 --> 00:26:28,440
the decoded mechanism and retrieve

555
00:26:28,440 --> 00:26:30,360
somehow the payload

556
00:26:30,360 --> 00:26:31,740
thank you

557
00:26:31,740 --> 00:26:35,460
uh so how does this string get installed

558
00:26:35,460 --> 00:26:37,320
is it installed through initial access

559
00:26:37,320 --> 00:26:42,080
Brokers or do like the the

560
00:26:42,080 --> 00:26:44,580
initialize that do they have their email

561
00:26:44,580 --> 00:26:48,179
campaigns directly the malware operators

562
00:26:48,179 --> 00:26:50,039
or do they go through initial access

563
00:26:50,039 --> 00:26:52,559
Brokers or something and link to these

564
00:26:52,559 --> 00:26:56,760
questions is how do they get persistence

565
00:26:56,760 --> 00:27:00,120
well uh first the first question

566
00:27:00,120 --> 00:27:01,400
um

567
00:27:01,400 --> 00:27:04,020
usually the the mother arrives through

568
00:27:04,020 --> 00:27:07,020
as mentioned through other campaigns to

569
00:27:07,020 --> 00:27:10,140
email campaigns to to phishing campaigns

570
00:27:10,140 --> 00:27:12,299
and um

571
00:27:12,299 --> 00:27:15,080
uh it's

572
00:27:15,080 --> 00:27:17,460
once it's on the the victim machine it's

573
00:27:17,460 --> 00:27:20,460
executed and from from that stage the

574
00:27:20,460 --> 00:27:23,659
the user is compromised

575
00:27:23,659 --> 00:27:26,400
uh if it requires administrator

576
00:27:26,400 --> 00:27:30,059
privileges yes some of them it requires

577
00:27:30,059 --> 00:27:33,020
administrative beverages

578
00:27:33,659 --> 00:27:36,299
how do they ask for them

579
00:27:36,299 --> 00:27:38,159
well

580
00:27:38,159 --> 00:27:41,460
because they are targeting users devices

581
00:27:41,460 --> 00:27:43,740
because they are not targeting somehow

582
00:27:43,740 --> 00:27:45,900
the banking institution itself they're

583
00:27:45,900 --> 00:27:47,940
targeting the clients of the banking

584
00:27:47,940 --> 00:27:51,179
institutions to gain access to them they

585
00:27:51,179 --> 00:27:54,659
doesn't really uh

586
00:27:54,659 --> 00:27:58,260
they just hope that the the user has

587
00:27:58,260 --> 00:28:00,360
that many Privileges and they allow it

588
00:28:00,360 --> 00:28:03,979
to run as administrator okay

589
00:28:05,400 --> 00:28:07,500
and there was the second question sorry

590
00:28:07,500 --> 00:28:10,919
I could you please repeat it

591
00:28:10,919 --> 00:28:13,760
oh okay

592
00:28:13,860 --> 00:28:17,220
like do they use uh some other service

593
00:28:17,220 --> 00:28:20,820
like to ask for administrator privileges

594
00:28:20,820 --> 00:28:24,059
or does the binary itself downloaded

595
00:28:24,059 --> 00:28:25,799
from the internet ask for administrator

596
00:28:25,799 --> 00:28:27,360
privileges that was the question okay

597
00:28:27,360 --> 00:28:29,940
thank you thank you

598
00:28:29,940 --> 00:28:32,400
yeah so I have a question about the

599
00:28:32,400 --> 00:28:36,299
defenses uh I can think of a scenario

600
00:28:36,299 --> 00:28:39,840
where you can poison the DNS at one

601
00:28:39,840 --> 00:28:42,480
stage and at another stage maybe after a

602
00:28:42,480 --> 00:28:45,659
reboot of numerous reboots you can

603
00:28:45,659 --> 00:28:48,299
actually download the file from

604
00:28:48,299 --> 00:28:51,360
another website with the poison DNS do

605
00:28:51,360 --> 00:28:52,500
you actually take into the

606
00:28:52,500 --> 00:28:55,860
considerations via about your defenses

607
00:28:55,860 --> 00:28:57,480
in your socials do you take into

608
00:28:57,480 --> 00:29:00,419
considerations these scenarios like when

609
00:29:00,419 --> 00:29:02,760
dynamically analyzing and running those

610
00:29:02,760 --> 00:29:06,059
binaries and trying to detect the

611
00:29:06,059 --> 00:29:08,159
malware to actually take the

612
00:29:08,159 --> 00:29:10,799
conversations the cases where it

613
00:29:10,799 --> 00:29:12,840
requires multiple reboots or just one

614
00:29:12,840 --> 00:29:15,260
reboot well

615
00:29:15,260 --> 00:29:18,179
we take in consideration multiple

616
00:29:18,179 --> 00:29:21,840
scenarios when we are developing our

617
00:29:21,840 --> 00:29:23,840
Solutions but

618
00:29:23,840 --> 00:29:25,500
I

619
00:29:25,500 --> 00:29:28,940
am not going to to get into details of

620
00:29:28,940 --> 00:29:31,380
everything of How It's implemented and

621
00:29:31,380 --> 00:29:35,120
how it's done thank you for the question

622
00:29:38,220 --> 00:29:40,860
okay well if there are any questions you

623
00:29:40,860 --> 00:29:43,320
can find me in the lobby in our break

624
00:29:43,320 --> 00:29:46,140
and I'm happy to to respond to them

625
00:29:46,140 --> 00:29:48,860
thank you guys

