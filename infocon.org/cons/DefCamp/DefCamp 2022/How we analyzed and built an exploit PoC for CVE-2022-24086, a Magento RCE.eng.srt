1
00:00:00,000 --> 00:00:02,250
the stage is yours

2
00:00:02,250 --> 00:00:09,980
[Applause]

3
00:00:12,480 --> 00:00:14,940
hello everybody my name is Catalin

4
00:00:14,940 --> 00:00:17,100
Philippe and today I'll present you our

5
00:00:17,100 --> 00:00:19,500
struggle in building a functional

6
00:00:19,500 --> 00:00:23,880
exploit on Magento Magento is a is an

7
00:00:23,880 --> 00:00:27,660
e-commerce app for shopping and just for

8
00:00:27,660 --> 00:00:31,940
buying things this is our today's agenda

9
00:00:31,940 --> 00:00:37,380
we will go through a bit on uh on what

10
00:00:37,380 --> 00:00:40,739
is Magento and uh where is uh what are

11
00:00:40,739 --> 00:00:43,460
the product implications and

12
00:00:43,460 --> 00:00:46,500
in the end we will continue with our

13
00:00:46,500 --> 00:00:51,120
live demo of how we did this exploit

14
00:00:51,120 --> 00:00:53,520
first of all who am I my name is

15
00:00:53,520 --> 00:00:55,800
Catalina Philip I've studied at military

16
00:00:55,800 --> 00:00:59,460
Technical Academy after that I was at

17
00:00:59,460 --> 00:01:02,399
the University of polite campus

18
00:01:02,399 --> 00:01:05,280
I do like to point things to do reverse

19
00:01:05,280 --> 00:01:07,380
engineering exploits and I'm a big fan

20
00:01:07,380 --> 00:01:10,939
of Formula One Lewis Hamilton

21
00:01:13,860 --> 00:01:16,520
's

22
00:01:16,560 --> 00:01:19,860
there I found a nice Sim and we did a

23
00:01:19,860 --> 00:01:21,119
lot of things together

24
00:01:21,119 --> 00:01:25,040
so let's impact a bit our CV

25
00:01:25,040 --> 00:01:27,540
it's all about an improper input

26
00:01:27,540 --> 00:01:31,320
validation like most of the CDs on the

27
00:01:31,320 --> 00:01:33,900
market which leads to a remote code

28
00:01:33,900 --> 00:01:36,659
execution vulnerability

29
00:01:36,659 --> 00:01:40,140
uh how it started well it's all started

30
00:01:40,140 --> 00:01:43,500
with a lot of face if you are on the

31
00:01:43,500 --> 00:01:45,960
subject you could find at that time when

32
00:01:45,960 --> 00:01:49,740
this vulnerability was published that a

33
00:01:49,740 --> 00:01:52,200
lot of things were on GitHub if you

34
00:01:52,200 --> 00:01:55,259
notice there it is an endpoint where the

35
00:01:55,259 --> 00:01:58,920
exploit should happen but if you look a

36
00:01:58,920 --> 00:02:01,500
bit upper you can see that this is not

37
00:02:01,500 --> 00:02:04,020
the true POC

38
00:02:04,020 --> 00:02:08,038
or a lot of content was hidden other

39
00:02:08,038 --> 00:02:10,318
companies did this research and they

40
00:02:10,318 --> 00:02:13,560
just showed that on Twitter and

41
00:02:13,560 --> 00:02:16,620
somehow they make fun of us

42
00:02:16,620 --> 00:02:18,900
so this is for sending after all what is

43
00:02:18,900 --> 00:02:22,319
Magento Magento is a an e-commerce

44
00:02:22,319 --> 00:02:25,379
platform basically written in PHP it's

45
00:02:25,379 --> 00:02:28,860
open source and it was acquired by Adobe

46
00:02:28,860 --> 00:02:32,400
and it has 2.3 percent of market share

47
00:02:32,400 --> 00:02:36,480
of global Commerce platforms

48
00:02:36,480 --> 00:02:39,840
what about Adobe Adobe practically

49
00:02:39,840 --> 00:02:43,400
bought Magento they

50
00:02:43,400 --> 00:02:45,720
integrated that you know their product

51
00:02:45,720 --> 00:02:48,540
Adobe e-commerce and they had several

52
00:02:48,540 --> 00:02:52,620
versions and those versions allowed us

53
00:02:52,620 --> 00:02:57,480
to buy things like in three user types

54
00:02:57,480 --> 00:03:01,379
like guests administrators or customers

55
00:03:01,379 --> 00:03:03,840
why we chose this because it's widely

56
00:03:03,840 --> 00:03:07,620
used it's open source and also it

57
00:03:07,620 --> 00:03:10,680
represents a challenge for us and

58
00:03:10,680 --> 00:03:13,860
we said that we can't make this happen

59
00:03:13,860 --> 00:03:16,560
okay now let's have a bit of technical

60
00:03:16,560 --> 00:03:17,879
data

61
00:03:17,879 --> 00:03:20,640
before we dig in I want to mention my

62
00:03:20,640 --> 00:03:23,580
sniper team we do a lot of things there

63
00:03:23,580 --> 00:03:26,340
are a lot of security researches

64
00:03:26,340 --> 00:03:27,420
um

65
00:03:27,420 --> 00:03:29,840
we have a product

66
00:03:29,840 --> 00:03:33,120
where our product practically scans for

67
00:03:33,120 --> 00:03:36,480
vulnerabilities and exploits our targets

68
00:03:36,480 --> 00:03:39,180
and after all of these we clean up

69
00:03:39,180 --> 00:03:40,920
things because we don't want somebody

70
00:03:40,920 --> 00:03:43,980
else to take advantage of what we've

71
00:03:43,980 --> 00:03:45,920
done there

72
00:03:45,920 --> 00:03:51,000
and because all we we live we like uh

73
00:03:51,000 --> 00:03:53,519
automated reports and Pen testers should

74
00:03:53,519 --> 00:03:57,500
not write reports anymore

75
00:03:57,680 --> 00:04:01,099
the steps we took to do this was

76
00:04:01,099 --> 00:04:03,599
practically the deployment of our

77
00:04:03,599 --> 00:04:06,840
Magento but we did a bit of store

78
00:04:06,840 --> 00:04:08,819
configuration because the exploit

79
00:04:08,819 --> 00:04:12,060
happens when we try to buy something

80
00:04:12,060 --> 00:04:14,879
we set up the environment here we had a

81
00:04:14,879 --> 00:04:17,579
little struggle with the X debug configs

82
00:04:17,579 --> 00:04:21,120
to make a debugging environment working

83
00:04:21,120 --> 00:04:24,240
and after that we did a lot of research

84
00:04:24,240 --> 00:04:29,220
crashing and testing to achieve our goal

85
00:04:29,220 --> 00:04:32,699
uh if we started by following the patch

86
00:04:32,699 --> 00:04:36,199
you could see there that when the

87
00:04:36,199 --> 00:04:40,020
vulnerability was uh disclosed by Adobe

88
00:04:40,020 --> 00:04:43,020
they immediately come up with a patch

89
00:04:43,020 --> 00:04:45,180
which practically added the

90
00:04:45,180 --> 00:04:48,960
sanitizations to our input if you

91
00:04:48,960 --> 00:04:50,460
see

92
00:04:50,460 --> 00:04:53,880
here they have a pattern which

93
00:04:53,880 --> 00:04:57,720
practically if it is found in a string

94
00:04:57,720 --> 00:05:02,160
of user input it just deletes that

95
00:05:02,160 --> 00:05:06,440
so we thought that this is our

96
00:05:06,440 --> 00:05:11,180
point of a point of start

97
00:05:11,180 --> 00:05:14,340
we tested this we found that directive

98
00:05:14,340 --> 00:05:17,639
which in the current version of Magento

99
00:05:17,639 --> 00:05:19,800
which was the one we it could be

100
00:05:19,800 --> 00:05:21,900
exploited uh

101
00:05:21,900 --> 00:05:25,020
we found that the patch wasn't there

102
00:05:25,020 --> 00:05:28,979
normally and we could see there that

103
00:05:28,979 --> 00:05:31,800
that patterns that commas we could put

104
00:05:31,800 --> 00:05:34,340
there and we

105
00:05:34,340 --> 00:05:37,919
we could practically do whatever we want

106
00:05:37,919 --> 00:05:42,440
with the input of the text

107
00:05:42,479 --> 00:05:45,180
this is the exploit flow practically

108
00:05:45,180 --> 00:05:49,740
after that trans directive part of code

109
00:05:49,740 --> 00:05:54,780
we somehow end up in a sequence of code

110
00:05:54,780 --> 00:05:58,919
where the Magento tries to resolve some

111
00:05:58,919 --> 00:06:01,800
variables and also it tries to find out

112
00:06:01,800 --> 00:06:06,199
if a method exists or an object or

113
00:06:06,199 --> 00:06:10,039
here it is that part

114
00:06:10,620 --> 00:06:12,660
okay

115
00:06:12,660 --> 00:06:17,340
after that if an object is found on a

116
00:06:17,340 --> 00:06:20,840
Magento Apple it's created and

117
00:06:20,840 --> 00:06:23,340
further is sent to a Handler which

118
00:06:23,340 --> 00:06:25,620
practically tries to resolve all the

119
00:06:25,620 --> 00:06:28,699
methods of that object

120
00:06:29,580 --> 00:06:31,639
um

121
00:06:34,020 --> 00:06:37,020
our goal was to reach a function which

122
00:06:37,020 --> 00:06:39,240
is called the magic function in PHP

123
00:06:39,240 --> 00:06:42,720
because magic functions could lead to

124
00:06:42,720 --> 00:06:45,720
remote code execution and we if we could

125
00:06:45,720 --> 00:06:50,340
do some input like we wanted to do we

126
00:06:50,340 --> 00:06:53,940
could end up here and call user func

127
00:06:53,940 --> 00:06:56,120
which has to

128
00:06:56,120 --> 00:06:59,039
parameters callback and value if we

129
00:06:59,039 --> 00:07:01,639
could modify those values we could

130
00:07:01,639 --> 00:07:04,259
practically reach our remote code

131
00:07:04,259 --> 00:07:07,220
execution thing

132
00:07:07,220 --> 00:07:11,300
just watch changed

133
00:07:11,460 --> 00:07:13,860
now we'll start with the demo part this

134
00:07:13,860 --> 00:07:16,039
is our shop so it's a

135
00:07:16,039 --> 00:07:19,680
custom Magento store I put there some

136
00:07:19,680 --> 00:07:21,419
watches

137
00:07:21,419 --> 00:07:24,000
you can't find a Rolex at a thousand

138
00:07:24,000 --> 00:07:26,300
dollars

139
00:07:28,080 --> 00:07:31,020
okay do you hear me yes

140
00:07:31,020 --> 00:07:34,919
so uh first of all we try to find a

141
00:07:34,919 --> 00:07:38,520
perfect payload for us this is the back

142
00:07:38,520 --> 00:07:40,440
end of the Magento store

143
00:07:40,440 --> 00:07:45,060
as I said before we run our X debug

144
00:07:45,060 --> 00:07:46,860
debugger

145
00:07:46,860 --> 00:07:49,319
and uh

146
00:07:49,319 --> 00:07:51,780
we tried several

147
00:07:51,780 --> 00:07:54,180
inputs

148
00:07:54,180 --> 00:07:56,520
till we reached

149
00:07:56,520 --> 00:08:00,599
a flow so we did that normal part with

150
00:08:00,599 --> 00:08:04,800
with the put an object to the cart we

151
00:08:04,800 --> 00:08:08,120
had some values here

152
00:08:08,520 --> 00:08:12,198
sorry for this what

153
00:08:16,080 --> 00:08:18,919
okay

154
00:08:20,580 --> 00:08:24,020
just random values

155
00:08:24,240 --> 00:08:26,539
because all the vulnerability is

156
00:08:26,539 --> 00:08:29,400
produced in the first name and last name

157
00:08:29,400 --> 00:08:33,120
fields it may be possible to happen in

158
00:08:33,120 --> 00:08:35,700
other fields but we didn't try to test

159
00:08:35,700 --> 00:08:38,880
all of that Fields because our scope was

160
00:08:38,880 --> 00:08:42,860
to find the public POC

161
00:08:43,440 --> 00:08:46,159
sorry

162
00:08:51,000 --> 00:08:53,580
okay now I'll present you our first try

163
00:08:53,580 --> 00:08:58,200
of uh finding the POC uh

164
00:08:58,200 --> 00:09:00,600
we will

165
00:09:00,600 --> 00:09:04,080
we will see that in the filter function

166
00:09:04,080 --> 00:09:07,700
we see that Magento tries to

167
00:09:07,700 --> 00:09:11,220
change paths or find the objects using

168
00:09:11,220 --> 00:09:13,019
this kind of

169
00:09:13,019 --> 00:09:15,899
this kind of template so you just we

170
00:09:15,899 --> 00:09:20,459
said why we can't do that to access what

171
00:09:20,459 --> 00:09:22,200
templates we want

172
00:09:22,200 --> 00:09:26,459
so somehow we could do that

173
00:09:26,459 --> 00:09:29,359
okay

174
00:09:29,700 --> 00:09:32,640
I just have to continue till we buy that

175
00:09:32,640 --> 00:09:34,880
thing

176
00:09:44,160 --> 00:09:46,819
okay

177
00:09:47,399 --> 00:09:50,940
let's go again and this time we will put

178
00:09:50,940 --> 00:09:54,680
our first try of payload

179
00:10:10,560 --> 00:10:13,320
you have to input a proper email address

180
00:10:13,320 --> 00:10:17,100
or to have that Gmail thing

181
00:10:17,100 --> 00:10:18,899
and

182
00:10:18,899 --> 00:10:23,720
I'll pass that because it's faster

183
00:10:29,640 --> 00:10:31,019
okay

184
00:10:31,019 --> 00:10:34,200
so this was our

185
00:10:34,200 --> 00:10:36,000
you could see that

186
00:10:36,000 --> 00:10:40,200
this uh this was our first try of uh of

187
00:10:40,200 --> 00:10:42,480
exploiting this thing and we wanted to

188
00:10:42,480 --> 00:10:46,200
see if we could uh redirect our code

189
00:10:46,200 --> 00:10:49,579
flow wherever we want

190
00:10:49,800 --> 00:10:52,279
foreign

191
00:11:17,339 --> 00:11:20,420
here we go again

192
00:11:24,120 --> 00:11:27,899
now we could see that we reach that

193
00:11:27,899 --> 00:11:30,120
section of code which checks for our

194
00:11:30,120 --> 00:11:33,800
method if it exists

195
00:11:33,800 --> 00:11:37,440
if you if we watch on the

196
00:11:37,440 --> 00:11:39,420
on the values

197
00:11:39,420 --> 00:11:42,060
we could see that the method practically

198
00:11:42,060 --> 00:11:43,440
is this

199
00:11:43,440 --> 00:11:46,260
and arcs was load

200
00:11:46,260 --> 00:11:49,680
uh hopefully here we find out that our

201
00:11:49,680 --> 00:11:50,720
code

202
00:11:50,720 --> 00:11:54,360
reaches this part of the Magento and

203
00:11:54,360 --> 00:11:58,440
from here now we could do some other

204
00:11:58,440 --> 00:12:02,000
things to explore this

205
00:12:05,220 --> 00:12:08,220
okay

206
00:12:20,040 --> 00:12:23,220
and nothing happens because uh in our

207
00:12:23,220 --> 00:12:25,200
presentation I

208
00:12:25,200 --> 00:12:27,959
I've showed you that we have to reach

209
00:12:27,959 --> 00:12:31,560
that magical function which uh calls a

210
00:12:31,560 --> 00:12:35,459
call function array with our specific

211
00:12:35,459 --> 00:12:36,540
values

212
00:12:36,540 --> 00:12:41,040
this exploits didn't work but we

213
00:12:41,040 --> 00:12:43,320
also uh

214
00:12:43,320 --> 00:12:47,639
try to find where these method methods

215
00:12:47,639 --> 00:12:48,600
were

216
00:12:48,600 --> 00:12:51,000
and we could find that

217
00:12:51,000 --> 00:12:55,200
we could get there by

218
00:12:55,200 --> 00:12:57,480
practically calling a lot of other

219
00:12:57,480 --> 00:13:00,300
methods which gives us an object

220
00:13:00,300 --> 00:13:05,880
which has these methods implemented

221
00:13:05,880 --> 00:13:09,540
so the next flow we thought that what if

222
00:13:09,540 --> 00:13:13,019
we will give this function this function

223
00:13:13,019 --> 00:13:15,959
gives us an object

224
00:13:15,959 --> 00:13:18,739
and

225
00:13:19,260 --> 00:13:22,220
after that

226
00:13:22,680 --> 00:13:25,800
we tried somehow to call this function

227
00:13:25,800 --> 00:13:28,500
this function was in that object it's a

228
00:13:28,500 --> 00:13:30,720
public function it could be called

229
00:13:30,720 --> 00:13:33,600
but our goal was to reach here this

230
00:13:33,600 --> 00:13:35,579
function is a protected one and we could

231
00:13:35,579 --> 00:13:38,940
not get this one so in order to reach

232
00:13:38,940 --> 00:13:39,959
this

233
00:13:39,959 --> 00:13:42,240
we can see that it's called from here

234
00:13:42,240 --> 00:13:44,700
here this function also is a public

235
00:13:44,700 --> 00:13:48,660
function so a protected method uh is not

236
00:13:48,660 --> 00:13:50,940
it cannot be called directly it is

237
00:13:50,940 --> 00:13:53,279
called by another function from that

238
00:13:53,279 --> 00:13:54,480
object

239
00:13:54,480 --> 00:13:57,360
so in the end Tower

240
00:13:57,360 --> 00:14:02,000
exploit was something like this

241
00:14:08,519 --> 00:14:12,380
okay let's continue shopping

242
00:14:20,519 --> 00:14:22,700
foreign

243
00:14:44,160 --> 00:14:47,000
okay

244
00:15:02,279 --> 00:15:04,820
foreign

245
00:15:11,839 --> 00:15:14,959
go again

246
00:15:25,380 --> 00:15:28,320
now we see that we are again at this

247
00:15:28,320 --> 00:15:31,260
part of the code if we look at stake

248
00:15:31,260 --> 00:15:33,480
arcs we can see that

249
00:15:33,480 --> 00:15:38,339
we have again our very design our value

250
00:15:38,339 --> 00:15:42,180
is in the variable category

251
00:15:42,180 --> 00:15:44,880
we see that it has another method like

252
00:15:44,880 --> 00:15:46,920
get template filter

253
00:15:46,920 --> 00:15:49,560
with arguments but they are none because

254
00:15:49,560 --> 00:15:51,660
we didn't put something there

255
00:15:51,660 --> 00:15:55,139
we have another method with with the

256
00:15:55,139 --> 00:15:58,320
system argument or also the last method

257
00:15:58,320 --> 00:16:01,199
which was the filter which should call

258
00:16:01,199 --> 00:16:03,899
our magic function with who am I

259
00:16:03,899 --> 00:16:05,399
parameter

260
00:16:05,399 --> 00:16:08,339
but if we

261
00:16:08,339 --> 00:16:10,860
go next

262
00:16:10,860 --> 00:16:13,440
we can see that our object is handled

263
00:16:13,440 --> 00:16:14,459
here

264
00:16:14,459 --> 00:16:20,160
it calls the adapter filter callback

265
00:16:20,160 --> 00:16:23,220
we can see that after filter callback it

266
00:16:23,220 --> 00:16:27,180
has the parameter which we gave it it

267
00:16:27,180 --> 00:16:29,779
was system

268
00:16:33,420 --> 00:16:37,800
now it's time to call the filter method

269
00:16:37,800 --> 00:16:42,500
with the specific argument who am I

270
00:16:46,320 --> 00:16:50,339
and we end up to that magic function but

271
00:16:50,339 --> 00:16:52,800
if you were if we watch to the

272
00:16:52,800 --> 00:16:55,199
parameters we see that the Callback

273
00:16:55,199 --> 00:16:57,779
array it has an another object and

274
00:16:57,779 --> 00:17:00,959
another value from the Magento

275
00:17:00,959 --> 00:17:03,420
environment and our value just where am

276
00:17:03,420 --> 00:17:05,699
I we did we cannot see the system

277
00:17:05,699 --> 00:17:10,640
present here so this thing won't work

278
00:17:11,220 --> 00:17:14,419
so next was our question how we can

279
00:17:14,419 --> 00:17:17,220
solve that

280
00:17:17,220 --> 00:17:20,280
and our first thought was

281
00:17:20,280 --> 00:17:24,540
why should why don't we put our the same

282
00:17:24,540 --> 00:17:26,280
payload again

283
00:17:26,280 --> 00:17:29,480
to chain it a bit

284
00:17:56,280 --> 00:17:58,620
sorry

285
00:17:58,620 --> 00:18:01,080
let's take that

286
00:18:01,080 --> 00:18:03,500
again

287
00:18:06,480 --> 00:18:09,360
I will put the ID command because it

288
00:18:09,360 --> 00:18:11,460
shows us all

289
00:18:11,460 --> 00:18:15,080
a lot of things

290
00:18:21,120 --> 00:18:25,100
let's double check yep

291
00:18:46,440 --> 00:18:49,220
okay

292
00:19:02,820 --> 00:19:06,439
here we are again

293
00:19:10,440 --> 00:19:13,620
now practically we are resolving the

294
00:19:13,620 --> 00:19:16,020
first part of the payload the one which

295
00:19:16,020 --> 00:19:18,840
didn't work and put some bad things on

296
00:19:18,840 --> 00:19:22,760
our callback variable

297
00:19:25,440 --> 00:19:28,320
if you watch we can see that the same

298
00:19:28,320 --> 00:19:31,500
things are here but

299
00:19:31,500 --> 00:19:35,340
if we keep continue that we see that we

300
00:19:35,340 --> 00:19:38,460
end up again in our handle data object

301
00:19:38,460 --> 00:19:40,559
method

302
00:19:40,559 --> 00:19:43,140
and practically now we are solving the

303
00:19:43,140 --> 00:19:47,120
second part of our payload

304
00:19:47,400 --> 00:19:50,100
we see again that we have adapter filter

305
00:19:50,100 --> 00:19:52,939
callback here

306
00:19:54,539 --> 00:19:58,919
we had again our variable system

307
00:19:58,919 --> 00:20:00,840
now we have

308
00:20:00,840 --> 00:20:05,059
again our filter method

309
00:20:06,360 --> 00:20:09,059
and we end up here with our desired

310
00:20:09,059 --> 00:20:11,820
values we have in we see that we have in

311
00:20:11,820 --> 00:20:15,179
callback system and value we have ID so

312
00:20:15,179 --> 00:20:17,940
if you just step forward

313
00:20:17,940 --> 00:20:20,340
we can see it in the value that we have

314
00:20:20,340 --> 00:20:23,340
practically our code executed and we are

315
00:20:23,340 --> 00:20:26,539
demon on that box

316
00:20:32,220 --> 00:20:35,100
yep then

317
00:20:35,100 --> 00:20:38,760
this thing is also reflected in the burp

318
00:20:38,760 --> 00:20:41,160
Suite if you watch it

319
00:20:41,160 --> 00:20:44,880
um I'll show you a bit in my browser how

320
00:20:44,880 --> 00:20:48,380
it it is reflected

321
00:21:20,400 --> 00:21:23,059
okay

322
00:21:30,480 --> 00:21:33,600
in the inspector we will see the request

323
00:21:33,600 --> 00:21:37,380
which will be to the payment information

324
00:21:37,380 --> 00:21:40,090
I'll make it a bit a little bit bigger

325
00:21:40,090 --> 00:21:43,109
[Music]

326
00:21:49,500 --> 00:21:51,539
this is the true endpoint of our

327
00:21:51,539 --> 00:21:54,539
exploits the one which bothered us from

328
00:21:54,539 --> 00:21:56,159
the beginning

329
00:21:56,159 --> 00:21:58,679
and the response is practically our

330
00:21:58,679 --> 00:21:59,760
comment

331
00:21:59,760 --> 00:22:03,179
so that was our

332
00:22:03,179 --> 00:22:07,200
POC exploitation and development from

333
00:22:07,200 --> 00:22:09,650
sniper tools

334
00:22:09,650 --> 00:22:17,829
[Applause]

335
00:22:18,840 --> 00:22:20,820
all right if we have any questions

336
00:22:20,820 --> 00:22:24,799
questions for Catalina regarding this

337
00:22:26,980 --> 00:22:30,069
[Music]

338
00:22:35,360 --> 00:22:39,000
uh did you start from the magic method

339
00:22:39,000 --> 00:22:42,780
or the other the other way around with

340
00:22:42,780 --> 00:22:43,880
the input

341
00:22:43,880 --> 00:22:49,320
uh we kind of look from that

342
00:22:49,320 --> 00:22:53,580
that what was added to that uh to the

343
00:22:53,580 --> 00:22:57,419
patch and we tried to figure out how

344
00:22:57,419 --> 00:23:01,380
Magento solves things and uh we

345
00:23:01,380 --> 00:23:02,760
practically

346
00:23:02,760 --> 00:23:06,600
uh started to find magic methods and

347
00:23:06,600 --> 00:23:08,700
that was the first part we wanted

348
00:23:08,700 --> 00:23:12,900
because of so you looked at what was

349
00:23:12,900 --> 00:23:16,320
fixed yes yes okay

350
00:23:16,320 --> 00:23:19,820
I hope that I've answered

351
00:23:21,059 --> 00:23:24,419
uh thank you for the presentation uh in

352
00:23:24,419 --> 00:23:26,100
your testing did you discover any

353
00:23:26,100 --> 00:23:28,080
additional vulnerabilities

354
00:23:28,080 --> 00:23:31,860
uh no could you repeat that please uh

355
00:23:31,860 --> 00:23:33,780
did you in your testing did you discover

356
00:23:33,780 --> 00:23:38,280
any additional vulnerabilities uh yes uh

357
00:23:38,280 --> 00:23:42,799
uh I forgot to mention uh on some

358
00:23:42,799 --> 00:23:46,320
Publications uh they said that it could

359
00:23:46,320 --> 00:23:50,760
be some SQL injection uh going around

360
00:23:50,760 --> 00:23:55,080
this we found something like that but we

361
00:23:55,080 --> 00:23:58,380
thought that that might be a next step

362
00:23:58,380 --> 00:24:02,640
for us and we kind of look from several

363
00:24:02,640 --> 00:24:05,640
methods like load delete we find some

364
00:24:05,640 --> 00:24:07,380
parts of the code which interacts with

365
00:24:07,380 --> 00:24:11,220
the DB and we end up to that phase where

366
00:24:11,220 --> 00:24:12,840
we try to do some query with delete

367
00:24:12,840 --> 00:24:16,320
don't ask me why we did that and we just

368
00:24:16,320 --> 00:24:18,840
crashed our system and we thought that

369
00:24:18,840 --> 00:24:21,960
not is not good for us

370
00:24:21,960 --> 00:24:24,419
but it's possible to have a SQL

371
00:24:24,419 --> 00:24:27,900
injections we we had we somehow

372
00:24:27,900 --> 00:24:30,659
triggered an error for that thing but we

373
00:24:30,659 --> 00:24:34,380
didn't pursue that because uh like I've

374
00:24:34,380 --> 00:24:36,840
said before we tried to find that those

375
00:24:36,840 --> 00:24:39,900
magic functions because it was PHP and

376
00:24:39,900 --> 00:24:41,520
that was

377
00:24:41,520 --> 00:24:43,980
our way of doing things

378
00:24:43,980 --> 00:24:45,240
thank you

379
00:24:45,240 --> 00:24:47,840
thank you

380
00:24:52,140 --> 00:24:53,760
if we don't have any other questions

381
00:24:53,760 --> 00:24:56,159
thank you so much Katana for your

382
00:24:56,159 --> 00:24:58,559
presentation a lot of pressure to do a

383
00:24:58,559 --> 00:25:00,440
live demo thank you

384
00:25:00,440 --> 00:25:06,960
[Applause]

