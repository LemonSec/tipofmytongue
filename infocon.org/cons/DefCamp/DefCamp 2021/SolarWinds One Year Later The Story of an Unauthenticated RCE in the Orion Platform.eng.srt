1
00:00:00,080 --> 00:00:03,919
i would like to welcome alex bernberg to

2
00:00:03,919 --> 00:00:08,399
def cam 2021 hi alex welcome

3
00:00:08,559 --> 00:00:09,920
just to

4
00:00:09,920 --> 00:00:11,920
give you a quick intro and to let you

5
00:00:11,920 --> 00:00:14,000
know who alex is and what he's here to

6
00:00:14,000 --> 00:00:15,679
talk to us about in case you haven't

7
00:00:15,679 --> 00:00:17,680
checked out a schedule before

8
00:00:17,680 --> 00:00:20,320
so alex is a security researcher and ceo

9
00:00:20,320 --> 00:00:22,720
of zuma security he

10
00:00:22,720 --> 00:00:25,119
does it spends a lot of time energy

11
00:00:25,119 --> 00:00:27,039
resources and know-how in finding

12
00:00:27,039 --> 00:00:29,519
vulnerabilities and fine vulnerabilities

13
00:00:29,519 --> 00:00:33,520
it did so in in 2021 um

14
00:00:33,520 --> 00:00:35,360
they did an application security

15
00:00:35,360 --> 00:00:38,320
assessment on solarwinds orion which we

16
00:00:38,320 --> 00:00:40,719
all know by now and it's so kind of

17
00:00:40,719 --> 00:00:42,640
echoing throughout the industry and

18
00:00:42,640 --> 00:00:45,200
beyond and found four critical

19
00:00:45,200 --> 00:00:48,399
vulnerabilities that then um you

20
00:00:48,399 --> 00:00:50,480
ethically disclosed so now we're about

21
00:00:50,480 --> 00:00:52,480
to hear the story behind that thanks so

22
00:00:52,480 --> 00:00:54,079
much for being here with us alex i'm

23
00:00:54,079 --> 00:00:56,239
looking forward thank you very much

24
00:00:56,239 --> 00:00:58,719
all right so today i'll be presenting to

25
00:00:58,719 --> 00:01:02,399
you for zero days that uh we discovered

26
00:01:02,399 --> 00:01:05,119
uh in the solarwinds orion platform that

27
00:01:05,119 --> 00:01:07,119
uh when chained together can be used to

28
00:01:07,119 --> 00:01:08,880
obtain an authenticated remote cone

29
00:01:08,880 --> 00:01:11,680
execution and unauthenticated file read

30
00:01:11,680 --> 00:01:12,560
on the

31
00:01:12,560 --> 00:01:13,920
target server

32
00:01:13,920 --> 00:01:15,920
but before i get into the technical

33
00:01:15,920 --> 00:01:18,320
details i would first like to shortly

34
00:01:18,320 --> 00:01:20,960
introduce myself so

35
00:01:20,960 --> 00:01:23,520
my name is alex milmer i'm a security

36
00:01:23,520 --> 00:01:27,040
researcher i mostly deal with uh

37
00:01:27,040 --> 00:01:29,040
vulnerability research and expert

38
00:01:29,040 --> 00:01:31,840
development and i also founded zemo

39
00:01:31,840 --> 00:01:35,200
security and and the ceo with where uh

40
00:01:35,200 --> 00:01:37,920
we also do about the same stuff so

41
00:01:37,920 --> 00:01:38,880
uh

42
00:01:38,880 --> 00:01:40,960
vulnerability research and exploit

43
00:01:40,960 --> 00:01:43,280
development but um

44
00:01:43,280 --> 00:01:45,680
let's get into the presentation so the

45
00:01:45,680 --> 00:01:47,520
first question then we should ask

46
00:01:47,520 --> 00:01:51,520
ourselves is uh why target solar winds

47
00:01:51,520 --> 00:01:52,399
well

48
00:01:52,399 --> 00:01:55,840
uh it may seem obvious that it was

49
00:01:55,840 --> 00:01:57,840
already targeted in a sunburst incident

50
00:01:57,840 --> 00:01:59,200
so uh

51
00:01:59,200 --> 00:02:02,479
we may already have interest in it since

52
00:02:02,479 --> 00:02:04,799
we would like to know if

53
00:02:04,799 --> 00:02:07,439
the if the security got better or if

54
00:02:07,439 --> 00:02:10,878
it's uh if it's still the same so

55
00:02:10,878 --> 00:02:12,160
that is a

56
00:02:12,160 --> 00:02:14,480
very very good reason but

57
00:02:14,480 --> 00:02:16,879
what i think is better is to see why

58
00:02:16,879 --> 00:02:19,280
solar winds was targeted in the first

59
00:02:19,280 --> 00:02:21,520
place so uh

60
00:02:21,520 --> 00:02:25,440
this chart was uh taken from uh 2016 uh

61
00:02:25,440 --> 00:02:26,640
where uh

62
00:02:26,640 --> 00:02:29,520
solarwinds had a highest market share of

63
00:02:29,520 --> 00:02:30,640
uh

64
00:02:30,640 --> 00:02:33,440
of network management software uh right

65
00:02:33,440 --> 00:02:34,879
now

66
00:02:34,879 --> 00:02:38,319
i don't think it's the highest but it's

67
00:02:38,319 --> 00:02:40,560
along the highest the highest market

68
00:02:40,560 --> 00:02:41,440
shares

69
00:02:41,440 --> 00:02:42,800
in

70
00:02:42,800 --> 00:02:45,519
this software is used primarily in uh

71
00:02:45,519 --> 00:02:49,360
government and corporate institutions so

72
00:02:49,360 --> 00:02:51,680
these are the primary targets of most

73
00:02:51,680 --> 00:02:54,560
attackers these days right and

74
00:02:54,560 --> 00:02:56,959
besides besides all these

75
00:02:56,959 --> 00:02:58,720
so besides the fact that

76
00:02:58,720 --> 00:03:01,599
it's widespread uh

77
00:03:01,599 --> 00:03:03,680
it's a widespread software

78
00:03:03,680 --> 00:03:06,239
it's also business critical so what we

79
00:03:06,239 --> 00:03:08,800
will get to understand about what this

80
00:03:08,800 --> 00:03:10,640
software does is that

81
00:03:10,640 --> 00:03:12,800
it is used uh

82
00:03:12,800 --> 00:03:14,560
primarily for a network and system

83
00:03:14,560 --> 00:03:16,879
management but actually the solar winds

84
00:03:16,879 --> 00:03:20,000
uh vendor has released quite a few

85
00:03:20,000 --> 00:03:22,319
others

86
00:03:23,519 --> 00:03:25,280
quite a few other software for example

87
00:03:25,280 --> 00:03:27,200
they do patch management they do quite a

88
00:03:27,200 --> 00:03:28,799
lot of stuff

89
00:03:28,799 --> 00:03:31,840
so yeah think that

90
00:03:31,840 --> 00:03:32,959
usually

91
00:03:32,959 --> 00:03:35,599
this software

92
00:03:35,599 --> 00:03:38,400
not only controls

93
00:03:38,400 --> 00:03:40,720
controls one server but since it's

94
00:03:40,720 --> 00:03:42,400
monitoring

95
00:03:42,400 --> 00:03:45,360
since it's monitoring the network it

96
00:03:45,360 --> 00:03:47,360
also controls all the endpoints that

97
00:03:47,360 --> 00:03:48,879
it's monitoring because the purpose of

98
00:03:48,879 --> 00:03:51,599
this software is to

99
00:03:51,599 --> 00:03:54,239
is to see if there is any failure in the

100
00:03:54,239 --> 00:03:57,519
network so for for uh for an attacker

101
00:03:57,519 --> 00:03:59,200
this would be very useful to have

102
00:03:59,200 --> 00:04:00,720
control over

103
00:04:00,720 --> 00:04:01,760
our

104
00:04:01,760 --> 00:04:04,560
over this software right uh because from

105
00:04:04,560 --> 00:04:06,879
there we can get control over uh

106
00:04:06,879 --> 00:04:09,519
pretty much any endpoint

107
00:04:09,519 --> 00:04:10,720
so let's

108
00:04:10,720 --> 00:04:12,480
see more about uh

109
00:04:12,480 --> 00:04:15,040
the products right so uh i was saying

110
00:04:15,040 --> 00:04:17,600
that there is a network monitoring so

111
00:04:17,600 --> 00:04:19,440
there are network performance monitor

112
00:04:19,440 --> 00:04:20,560
products

113
00:04:20,560 --> 00:04:23,919
but um the most popular product is the

114
00:04:23,919 --> 00:04:26,000
server and application monitor which

115
00:04:26,000 --> 00:04:29,440
pretty much does uh uh detects failures

116
00:04:29,440 --> 00:04:31,360
in networks but they also have a quite a

117
00:04:31,360 --> 00:04:32,960
lot of other interesting products for

118
00:04:32,960 --> 00:04:34,479
example they do

119
00:04:34,479 --> 00:04:37,120
uh patch patch management they do

120
00:04:37,120 --> 00:04:39,680
they do quite a lot of stuff and at the

121
00:04:39,680 --> 00:04:42,160
foundation of all this lies the ram

122
00:04:42,160 --> 00:04:46,960
platform so you can think as is a

123
00:04:47,199 --> 00:04:50,160
basis for all of their software

124
00:04:50,160 --> 00:04:53,120
right so uh each of their software

125
00:04:53,120 --> 00:04:55,440
it's somewhat of a specialized extension

126
00:04:55,440 --> 00:04:58,479
of it so

127
00:04:58,720 --> 00:05:01,919
the orion platform uh

128
00:05:01,919 --> 00:05:05,199
deals with uh quite rudimentary

129
00:05:05,199 --> 00:05:06,000
uh

130
00:05:06,000 --> 00:05:08,080
rudimentary functionality so let's see

131
00:05:08,080 --> 00:05:09,840
more about the orion platform

132
00:05:09,840 --> 00:05:12,320
architecture

133
00:05:12,320 --> 00:05:16,080
the orion platform architecture

134
00:05:16,080 --> 00:05:18,400
mostly consists of alerting and

135
00:05:18,400 --> 00:05:20,560
reporting functionality

136
00:05:20,560 --> 00:05:23,199
today we will take a look a lot more at

137
00:05:23,199 --> 00:05:26,479
the alerting functionality uh but uh

138
00:05:26,479 --> 00:05:29,440
this ram platform stands uh

139
00:05:29,440 --> 00:05:32,240
uh at the core of each one of these

140
00:05:32,240 --> 00:05:34,240
products so finding a vulnerability in

141
00:05:34,240 --> 00:05:35,199
uh

142
00:05:35,199 --> 00:05:37,039
in the orion platform

143
00:05:37,039 --> 00:05:38,800
would also mean that

144
00:05:38,800 --> 00:05:41,039
we have the same vulnerability in all of

145
00:05:41,039 --> 00:05:43,120
their products so that's what actually

146
00:05:43,120 --> 00:05:44,880
ended up happening

147
00:05:44,880 --> 00:05:48,160
but uh yeah more more on this later

148
00:05:48,160 --> 00:05:51,039
so about the

149
00:05:51,039 --> 00:05:53,360
server and application monitor

150
00:05:53,360 --> 00:05:56,880
this is how the

151
00:05:57,039 --> 00:05:59,840
uh how the web console looks

152
00:05:59,840 --> 00:06:01,120
so this

153
00:06:01,120 --> 00:06:03,039
gives us

154
00:06:03,039 --> 00:06:04,479
a viewpoint

155
00:06:04,479 --> 00:06:05,680
to

156
00:06:05,680 --> 00:06:06,720
all the

157
00:06:06,720 --> 00:06:08,639
all the endpoints connected to it so for

158
00:06:08,639 --> 00:06:11,600
example on the left we could see that uh

159
00:06:11,600 --> 00:06:13,199
there are quite a few endpoints

160
00:06:13,199 --> 00:06:15,520
connected this is a demo

161
00:06:15,520 --> 00:06:17,680
screenshot but uh

162
00:06:17,680 --> 00:06:18,800
in this

163
00:06:18,800 --> 00:06:20,400
demo application we can see that there

164
00:06:20,400 --> 00:06:22,240
are for example uh

165
00:06:22,240 --> 00:06:24,319
apache or

166
00:06:24,319 --> 00:06:26,400
app inside but

167
00:06:26,400 --> 00:06:28,880
we can also see that

168
00:06:28,880 --> 00:06:31,840
where there are failures or warnings

169
00:06:31,840 --> 00:06:34,560
we can see them on the screen so i hope

170
00:06:34,560 --> 00:06:39,360
you can kind of get a feeling of what

171
00:06:39,440 --> 00:06:42,560
the purpose of this application is

172
00:06:42,560 --> 00:06:43,680
uh

173
00:06:43,680 --> 00:06:45,680
but yeah

174
00:06:45,680 --> 00:06:48,720
we can get a lot of insight into

175
00:06:48,720 --> 00:06:51,599
what is going on on target

176
00:06:51,599 --> 00:06:54,560
target network

177
00:06:56,639 --> 00:06:58,960
all right so uh

178
00:06:58,960 --> 00:07:02,560
let's take a look at how this

179
00:07:02,560 --> 00:07:05,599
how this software is organized so

180
00:07:05,599 --> 00:07:07,440
uh a very

181
00:07:07,440 --> 00:07:08,479
uh

182
00:07:08,479 --> 00:07:12,479
good point to see first is what kind of

183
00:07:12,479 --> 00:07:15,120
privileges do users have

184
00:07:15,120 --> 00:07:17,199
because there will be quite a few a lot

185
00:07:17,199 --> 00:07:20,319
of users in uh

186
00:07:20,319 --> 00:07:22,400
in the software for example uh there

187
00:07:22,400 --> 00:07:24,880
will be six admins there will be

188
00:07:24,880 --> 00:07:27,680
uh complete administrators but there may

189
00:07:27,680 --> 00:07:29,360
also be good guests

190
00:07:29,360 --> 00:07:30,720
uh well

191
00:07:30,720 --> 00:07:33,360
this all of these users uh have quite a

192
00:07:33,360 --> 00:07:35,520
few permissions our interest is in the

193
00:07:35,520 --> 00:07:37,599
alert management permission

194
00:07:37,599 --> 00:07:39,280
uh that uh

195
00:07:39,280 --> 00:07:41,520
allows us to well allows us to add edit

196
00:07:41,520 --> 00:07:43,919
and delete alerts but what this actually

197
00:07:43,919 --> 00:07:46,400
means is that

198
00:07:46,400 --> 00:07:50,080
the sysadmins are permitted to

199
00:07:50,080 --> 00:07:52,639
uh to configure okay well if this goes

200
00:07:52,639 --> 00:07:56,479
wrong we want to be alerted in this way

201
00:07:56,479 --> 00:07:57,280
so

202
00:07:57,280 --> 00:08:00,400
uh it gives them the power to do that

203
00:08:00,400 --> 00:08:03,120
but it doesn't give them much more so

204
00:08:03,120 --> 00:08:04,240
they

205
00:08:04,240 --> 00:08:06,639
they don't have much more control over

206
00:08:06,639 --> 00:08:08,240
the server besides

207
00:08:08,240 --> 00:08:10,479
uh that effect and also there is a guest

208
00:08:10,479 --> 00:08:11,360
user

209
00:08:11,360 --> 00:08:13,520
so uh uh

210
00:08:13,520 --> 00:08:15,680
thing to point out here is that if you

211
00:08:15,680 --> 00:08:17,680
have a lower privilege rc in your

212
00:08:17,680 --> 00:08:19,599
ranking platform you may use the guest

213
00:08:19,599 --> 00:08:21,759
user uh because it's installed by

214
00:08:21,759 --> 00:08:23,520
default but

215
00:08:23,520 --> 00:08:26,000
sometimes uh well by default also it's

216
00:08:26,000 --> 00:08:28,240
not enabled but if you are lucky you can

217
00:08:28,240 --> 00:08:30,560
get enough rc for

218
00:08:30,560 --> 00:08:32,399
through your low privilege

219
00:08:32,399 --> 00:08:33,919
rc

220
00:08:33,919 --> 00:08:35,360
so

221
00:08:35,360 --> 00:08:38,240
let's see about the previous research

222
00:08:38,240 --> 00:08:40,799
so we know from the sunburst incidents

223
00:08:40,799 --> 00:08:42,080
that uh

224
00:08:42,080 --> 00:08:44,320
uh well we don't exactly know how it

225
00:08:44,320 --> 00:08:45,279
happened

226
00:08:45,279 --> 00:08:46,800
but we know

227
00:08:46,800 --> 00:08:48,640
that during that time there were two

228
00:08:48,640 --> 00:08:50,240
vulnerabilities that were uh chained

229
00:08:50,240 --> 00:08:52,399
together to obtain an authenticated

230
00:08:52,399 --> 00:08:54,480
remote code execution so the cross-site

231
00:08:54,480 --> 00:08:55,519
scripting

232
00:08:55,519 --> 00:08:57,040
for which there are no

233
00:08:57,040 --> 00:08:59,440
no known public details

234
00:08:59,440 --> 00:09:01,600
and the command injection and the

235
00:09:01,600 --> 00:09:03,680
execution of arbitrary ubiscript this

236
00:09:03,680 --> 00:09:06,800
has been analyzed by the zdi

237
00:09:06,800 --> 00:09:09,920
and also uh a lot of reports came from

238
00:09:09,920 --> 00:09:13,279
the zdi that started this uh this attack

239
00:09:13,279 --> 00:09:14,720
surface that i will be talking about so

240
00:09:14,720 --> 00:09:17,839
like uh for example the sql injection uh

241
00:09:17,839 --> 00:09:20,560
is uh targeting this and also they they

242
00:09:20,560 --> 00:09:23,360
did some more analysis or more but

243
00:09:23,360 --> 00:09:25,040
more on this later

244
00:09:25,040 --> 00:09:28,560
uh what we will be focusing on is uh

245
00:09:28,560 --> 00:09:30,399
the same attack surface that has been

246
00:09:30,399 --> 00:09:32,399
hit by the

247
00:09:32,399 --> 00:09:34,320
uh by one of the vulnerabilities from

248
00:09:34,320 --> 00:09:36,560
the assembled incident and by quite a

249
00:09:36,560 --> 00:09:38,880
few others from the zdi

250
00:09:38,880 --> 00:09:40,800
so about

251
00:09:40,800 --> 00:09:42,000
our work

252
00:09:42,000 --> 00:09:42,959
uh

253
00:09:42,959 --> 00:09:45,040
well

254
00:09:45,040 --> 00:09:47,680
we found the email webpage command

255
00:09:47,680 --> 00:09:51,120
injection and export to pdf command

256
00:09:51,120 --> 00:09:53,600
arbitrary thyroid we found this in the

257
00:09:53,600 --> 00:09:56,240
same attack surface then that uh the

258
00:09:56,240 --> 00:09:58,399
previous uh two four appears that i told

259
00:09:58,399 --> 00:09:59,519
you so like the

260
00:09:59,519 --> 00:10:01,920
uh the second from samples and the sql

261
00:10:01,920 --> 00:10:03,920
injection

262
00:10:03,920 --> 00:10:05,440
this was found in the same attack

263
00:10:05,440 --> 00:10:06,959
surface

264
00:10:06,959 --> 00:10:09,600
and we collaborated with fire to make

265
00:10:09,600 --> 00:10:12,000
sure that

266
00:10:12,240 --> 00:10:14,560
organizations are protected before the

267
00:10:14,560 --> 00:10:16,320
before the patch is

268
00:10:16,320 --> 00:10:17,680
released

269
00:10:17,680 --> 00:10:20,000
but we also found uh

270
00:10:20,000 --> 00:10:22,320
two others well the reflected uh

271
00:10:22,320 --> 00:10:24,720
scripting is quite basic uh

272
00:10:24,720 --> 00:10:26,320
and the

273
00:10:26,320 --> 00:10:28,800
i the key to

274
00:10:28,800 --> 00:10:31,360
our chain was the

275
00:10:31,360 --> 00:10:34,800
improper access control but

276
00:10:34,800 --> 00:10:38,160
yeah i will talk about this shortly

277
00:10:38,160 --> 00:10:40,160
uh so let's

278
00:10:40,160 --> 00:10:42,399
see about the reflected classes

279
00:10:42,399 --> 00:10:44,839
so as i was saying

280
00:10:44,839 --> 00:10:46,079
this uh

281
00:10:46,079 --> 00:10:48,800
vulnerability is quite basic so

282
00:10:48,800 --> 00:10:51,360
now we can just see it takes the query

283
00:10:51,360 --> 00:10:53,120
parameter from the

284
00:10:53,120 --> 00:10:55,440
uh the title query parameter from the

285
00:10:55,440 --> 00:10:58,240
get request and uh

286
00:10:58,240 --> 00:11:00,450
if it's not there it just

287
00:11:00,450 --> 00:11:02,959
[Music]

288
00:11:02,959 --> 00:11:05,519
defaults to an alternative but uh

289
00:11:05,519 --> 00:11:07,440
yeah it just takes the query parameter

290
00:11:07,440 --> 00:11:10,560
it says the title title to it

291
00:11:10,560 --> 00:11:11,279
and

292
00:11:11,279 --> 00:11:14,560
now html escaping whatsoever no like

293
00:11:14,560 --> 00:11:17,839
not any kind of escaping so again quite

294
00:11:17,839 --> 00:11:20,959
basic how why did this happen

295
00:11:20,959 --> 00:11:23,440
but a payload for it

296
00:11:23,440 --> 00:11:24,640
uh

297
00:11:24,640 --> 00:11:27,519
would be the following uh the resource

298
00:11:27,519 --> 00:11:29,760
query parameter is needed because there

299
00:11:29,760 --> 00:11:31,519
is a check for it if

300
00:11:31,519 --> 00:11:32,320
the

301
00:11:32,320 --> 00:11:34,079
the query parameter is the resource

302
00:11:34,079 --> 00:11:36,079
query parameter is not there uh

303
00:11:36,079 --> 00:11:36,880
the

304
00:11:36,880 --> 00:11:38,640
exploit will fail

305
00:11:38,640 --> 00:11:42,000
so what we did with the title means we

306
00:11:42,000 --> 00:11:43,200
just uh

307
00:11:43,200 --> 00:11:46,079
close the title tag and we open the

308
00:11:46,079 --> 00:11:47,839
script tag and we just injected our

309
00:11:47,839 --> 00:11:51,920
payload there so uh yeah we

310
00:11:51,920 --> 00:11:56,920
this could have been done in more uh

311
00:11:57,040 --> 00:12:00,000
like in better ways that would not be

312
00:12:00,000 --> 00:12:02,880
that that obvious but for a proof of

313
00:12:02,880 --> 00:12:04,720
concept this uh

314
00:12:04,720 --> 00:12:09,040
uh this is uh enough i would say

315
00:12:09,040 --> 00:12:10,720
all right so

316
00:12:10,720 --> 00:12:12,959
uh what capabilities do we have so far

317
00:12:12,959 --> 00:12:16,079
so uh we can bypass authentication

318
00:12:16,079 --> 00:12:17,040
uh

319
00:12:17,040 --> 00:12:19,440
obviously we can impersonate users uh

320
00:12:19,440 --> 00:12:21,519
since uh

321
00:12:21,519 --> 00:12:24,000
we have the cross-site scripting we can

322
00:12:24,000 --> 00:12:26,560
also bypass firewalls which i think this

323
00:12:26,560 --> 00:12:29,279
is quite an interesting point to make

324
00:12:29,279 --> 00:12:31,519
since we are not directly connecting to

325
00:12:31,519 --> 00:12:35,040
the solarwinds server and most often

326
00:12:35,040 --> 00:12:36,959
these are not directly exposed to the

327
00:12:36,959 --> 00:12:39,440
internet

328
00:12:39,440 --> 00:12:40,240
we

329
00:12:40,240 --> 00:12:43,040
we can deliver the exploit uh

330
00:12:43,040 --> 00:12:44,880
through different ways

331
00:12:44,880 --> 00:12:45,680
so

332
00:12:45,680 --> 00:12:48,480
for example we can deliver email to the

333
00:12:48,480 --> 00:12:50,720
sysadmin with the exploit embedded in it

334
00:12:50,720 --> 00:12:53,920
and yeah when the sysadmin clicks

335
00:12:53,920 --> 00:12:57,599
the exploit triggers but

336
00:12:58,480 --> 00:13:02,000
well a pretty hard limitation is that it

337
00:13:02,000 --> 00:13:05,120
requires user interaction so like

338
00:13:05,120 --> 00:13:07,440
this limitation is quite bad

339
00:13:07,440 --> 00:13:09,760
but i think that because of the outcome

340
00:13:09,760 --> 00:13:11,360
i think it's worth it

341
00:13:11,360 --> 00:13:12,560
uh but

342
00:13:12,560 --> 00:13:15,920
yeah let's let's see more on the

343
00:13:15,920 --> 00:13:17,760
alerts

344
00:13:17,760 --> 00:13:20,639
so i was talking previously about the

345
00:13:20,639 --> 00:13:23,279
the attack surface about

346
00:13:23,279 --> 00:13:24,560
alerts and the other management

347
00:13:24,560 --> 00:13:25,680
permission so

348
00:13:25,680 --> 00:13:27,440
why do we need this so

349
00:13:27,440 --> 00:13:30,079
well the purpose of this software is to

350
00:13:30,079 --> 00:13:31,600
is to alert

351
00:13:31,600 --> 00:13:33,680
the user if something goes wrong right

352
00:13:33,680 --> 00:13:35,839
so

353
00:13:36,000 --> 00:13:38,399
what alerts do

354
00:13:38,399 --> 00:13:40,160
is uh

355
00:13:40,160 --> 00:13:41,040
uh

356
00:13:41,040 --> 00:13:42,959
when uh

357
00:13:42,959 --> 00:13:44,560
when a condition

358
00:13:44,560 --> 00:13:46,839
or multiple conditions are

359
00:13:46,839 --> 00:13:49,839
true our programmable action is

360
00:13:49,839 --> 00:13:51,199
triggered

361
00:13:51,199 --> 00:13:54,160
so uh the solar winds uh quran platform

362
00:13:54,160 --> 00:13:56,480
constantly polls if

363
00:13:56,480 --> 00:13:58,720
that condition is true and uh if that's

364
00:13:58,720 --> 00:14:01,279
the case it triggers our actions yeah so

365
00:14:01,279 --> 00:14:03,360
like we can also see the definition that

366
00:14:03,360 --> 00:14:04,160
uh

367
00:14:04,160 --> 00:14:06,240
the vendor gave like uh

368
00:14:06,240 --> 00:14:08,880
uh if it gives an automatic notification

369
00:14:08,880 --> 00:14:10,240
that the

370
00:14:10,240 --> 00:14:11,760
event has occurred

371
00:14:11,760 --> 00:14:14,320
uh so yeah we can see also example of

372
00:14:14,320 --> 00:14:15,920
what does this mean like when a

373
00:14:15,920 --> 00:14:17,279
component goes down

374
00:14:17,279 --> 00:14:18,800
yeah

375
00:14:18,800 --> 00:14:21,279
when an application goes down so let's

376
00:14:21,279 --> 00:14:24,560
get to see first

377
00:14:24,560 --> 00:14:26,639
the conditions right

378
00:14:26,639 --> 00:14:29,680
so um

379
00:14:29,680 --> 00:14:31,839
what are conditions uh

380
00:14:31,839 --> 00:14:33,040
well

381
00:14:33,040 --> 00:14:34,959
for in order for the action to be

382
00:14:34,959 --> 00:14:36,399
triggered we

383
00:14:36,399 --> 00:14:38,720
need to set some form of condition

384
00:14:38,720 --> 00:14:39,839
uh

385
00:14:39,839 --> 00:14:42,079
so most commonly this is used to like a

386
00:14:42,079 --> 00:14:45,120
monitoring condition

387
00:14:45,279 --> 00:14:49,279
did this server this ip go down at any

388
00:14:49,279 --> 00:14:51,760
point in time well if it's down for more

389
00:14:51,760 --> 00:14:54,000
than five minutes triggered action

390
00:14:54,000 --> 00:14:56,560
but what we actually need

391
00:14:56,560 --> 00:14:58,880
is uh

392
00:14:58,880 --> 00:15:01,519
for the condition to evaluate to true

393
00:15:01,519 --> 00:15:02,399
because

394
00:15:02,399 --> 00:15:05,440
the attack surface is in the

395
00:15:05,440 --> 00:15:06,399
uh

396
00:15:06,399 --> 00:15:08,959
the action that will be triggered

397
00:15:08,959 --> 00:15:09,760
so

398
00:15:09,760 --> 00:15:13,199
we need to be able to trigger the

399
00:15:13,199 --> 00:15:15,760
action constantly

400
00:15:15,760 --> 00:15:17,920
so about the actions

401
00:15:17,920 --> 00:15:20,160
uh

402
00:15:20,480 --> 00:15:23,199
so this is an action that

403
00:15:23,199 --> 00:15:26,959
has a user-defining configuration that

404
00:15:26,959 --> 00:15:29,839
triggers when the condition is true

405
00:15:29,839 --> 00:15:31,600
and uh yeah

406
00:15:31,600 --> 00:15:33,600
we can see here that uh

407
00:15:33,600 --> 00:15:35,519
there are quite a few actions if you

408
00:15:35,519 --> 00:15:37,279
look in the in the software you will

409
00:15:37,279 --> 00:15:40,560
find quite a few more actions so

410
00:15:40,560 --> 00:15:43,600
this is quite a wide attack surface

411
00:15:43,600 --> 00:15:46,639
so in in our case we use the email

412
00:15:46,639 --> 00:15:50,560
webpage action to obtain obtain rc but

413
00:15:50,560 --> 00:15:52,399
yeah in the samples the

414
00:15:52,399 --> 00:15:53,120
the

415
00:15:53,120 --> 00:15:55,040
the ones

416
00:15:55,040 --> 00:15:57,360
right below the execute external uh

417
00:15:57,360 --> 00:15:59,839
program and execute external db scripts

418
00:15:59,839 --> 00:16:00,800
were used

419
00:16:00,800 --> 00:16:02,720
but

420
00:16:02,720 --> 00:16:04,800
yeah these actions are

421
00:16:04,800 --> 00:16:07,440
quite a good attack surface for uh

422
00:16:07,440 --> 00:16:10,959
the solar winds or ram platform

423
00:16:12,959 --> 00:16:15,440
so um

424
00:16:15,440 --> 00:16:18,959
about the action we can also trigger it

425
00:16:18,959 --> 00:16:20,880
uh programmatically

426
00:16:20,880 --> 00:16:22,800
so uh

427
00:16:22,800 --> 00:16:24,560
what this means is that we can make a

428
00:16:24,560 --> 00:16:25,920
post request to

429
00:16:25,920 --> 00:16:29,199
the api action uh test endpoint

430
00:16:29,199 --> 00:16:30,639
and uh

431
00:16:30,639 --> 00:16:32,959
we can give it

432
00:16:32,959 --> 00:16:33,759
like

433
00:16:33,759 --> 00:16:36,720
we can give quite a few user controlled

434
00:16:36,720 --> 00:16:38,320
parameters

435
00:16:38,320 --> 00:16:39,360
so

436
00:16:39,360 --> 00:16:40,639
when thinking of the action

437
00:16:40,639 --> 00:16:42,720
configuration

438
00:16:42,720 --> 00:16:44,880
most of it we can control

439
00:16:44,880 --> 00:16:45,170
so

440
00:16:45,170 --> 00:16:46,880
[Music]

441
00:16:46,880 --> 00:16:48,079
like

442
00:16:48,079 --> 00:16:50,959
we can control quite a few parameters

443
00:16:50,959 --> 00:16:52,240
that

444
00:16:52,240 --> 00:16:53,519
in my opinion

445
00:16:53,519 --> 00:16:54,400
shouldn't really be

446
00:16:54,400 --> 00:16:55,519
[Music]

447
00:16:55,519 --> 00:16:58,160
led to be controlled but

448
00:16:58,160 --> 00:17:02,320
in this example we can see that

449
00:17:02,320 --> 00:17:03,279
the

450
00:17:03,279 --> 00:17:07,039
this is just a simple uh action that uh

451
00:17:07,039 --> 00:17:10,880
uh will uh set the property with the

452
00:17:10,880 --> 00:17:13,760
with a certain name to a certain value

453
00:17:13,760 --> 00:17:17,359
but uh yeah for this functionality we we

454
00:17:17,359 --> 00:17:19,679
can trigger all the other all the other

455
00:17:19,679 --> 00:17:21,599
actions too so like uh

456
00:17:21,599 --> 00:17:23,520
our expert can be triggered through this

457
00:17:23,520 --> 00:17:25,760
functionality and uh

458
00:17:25,760 --> 00:17:26,799
uh

459
00:17:26,799 --> 00:17:30,080
the ones used from using sunburst

460
00:17:30,080 --> 00:17:32,160
can be triggered through the same

461
00:17:32,160 --> 00:17:33,760
functionality

462
00:17:33,760 --> 00:17:36,480
so um

463
00:17:36,480 --> 00:17:40,880
let's get a bit into the sunburst

464
00:17:40,880 --> 00:17:43,039
of vulnerability first

465
00:17:43,039 --> 00:17:44,840
so

466
00:17:44,840 --> 00:17:48,320
uh the symbols vulnerability are

467
00:17:48,320 --> 00:17:49,600
actually

468
00:17:49,600 --> 00:17:51,200
two uh

469
00:17:51,200 --> 00:17:54,799
in uh two of the actions but it uh

470
00:17:54,799 --> 00:17:56,320
uh

471
00:17:56,320 --> 00:17:58,640
they they don't differ that much

472
00:17:58,640 --> 00:18:01,440
so uh this just uh

473
00:18:01,440 --> 00:18:03,039
executes a

474
00:18:03,039 --> 00:18:04,320
vbscript

475
00:18:04,320 --> 00:18:05,760
from

476
00:18:05,760 --> 00:18:08,880
a network path on the solarwinds orion

477
00:18:08,880 --> 00:18:10,960
platform server

478
00:18:10,960 --> 00:18:12,000
but

479
00:18:12,000 --> 00:18:14,720
what this means is that so

480
00:18:14,720 --> 00:18:17,120
yeah we can execute scripts but we are

481
00:18:17,120 --> 00:18:19,200
not administrators like this is a

482
00:18:19,200 --> 00:18:20,799
problem because

483
00:18:20,799 --> 00:18:22,080
we only need the alert management

484
00:18:22,080 --> 00:18:25,360
permissions to do this so this

485
00:18:25,360 --> 00:18:27,600
this uh

486
00:18:27,600 --> 00:18:30,080
capability should be only reserved at

487
00:18:30,080 --> 00:18:33,280
most for the administrators

488
00:18:33,280 --> 00:18:34,559
hopefully

489
00:18:34,559 --> 00:18:36,960
not even a user with administrator

490
00:18:36,960 --> 00:18:38,880
administrator permissions would be able

491
00:18:38,880 --> 00:18:41,120
to do this

492
00:18:41,120 --> 00:18:42,559
but yeah

493
00:18:42,559 --> 00:18:45,120
in that case i i you could see why it

494
00:18:45,120 --> 00:18:47,200
would be possible to exit commands but

495
00:18:47,200 --> 00:18:48,960
not really from the other management

496
00:18:48,960 --> 00:18:50,880
other management

497
00:18:50,880 --> 00:18:52,000
is not

498
00:18:52,000 --> 00:18:54,000
for that

499
00:18:54,000 --> 00:18:54,840
but

500
00:18:54,840 --> 00:18:56,480
um

501
00:18:56,480 --> 00:18:58,160
about the

502
00:18:58,160 --> 00:18:59,440
uh

503
00:18:59,440 --> 00:19:01,039
this rce

504
00:19:01,039 --> 00:19:03,679
there has been another one patched under

505
00:19:03,679 --> 00:19:06,240
the same cv so like

506
00:19:06,240 --> 00:19:08,640
direction

507
00:19:08,720 --> 00:19:11,520
next to it was uh yeah execute an

508
00:19:11,520 --> 00:19:14,240
external and external program so these

509
00:19:14,240 --> 00:19:16,320
are quite similar the other one was

510
00:19:16,320 --> 00:19:19,200
executing a vbscript and it just again

511
00:19:19,200 --> 00:19:20,880
goes to

512
00:19:20,880 --> 00:19:21,840
our

513
00:19:21,840 --> 00:19:23,440
remote smb

514
00:19:23,440 --> 00:19:25,039
assemble and

515
00:19:25,039 --> 00:19:27,039
executes the program

516
00:19:27,039 --> 00:19:29,280
so

517
00:19:29,679 --> 00:19:31,039
about

518
00:19:31,039 --> 00:19:31,919
the

519
00:19:31,919 --> 00:19:32,720
uh

520
00:19:32,720 --> 00:19:35,280
the action functionality there is also

521
00:19:35,280 --> 00:19:39,720
there was also sql injection

522
00:19:39,919 --> 00:19:42,799
that was reported for the cdi

523
00:19:42,799 --> 00:19:44,160
so

524
00:19:44,160 --> 00:19:47,039
in the body to post

525
00:19:47,039 --> 00:19:50,799
in the user configuration of the action

526
00:19:50,799 --> 00:19:53,760
we were able to insert macros and

527
00:19:53,760 --> 00:19:56,720
execute our execute whatever

528
00:19:56,720 --> 00:19:58,160
sql

529
00:19:58,160 --> 00:20:00,320
sql query we wanted

530
00:20:00,320 --> 00:20:01,679
so

531
00:20:01,679 --> 00:20:04,880
in in this example we are

532
00:20:04,880 --> 00:20:07,200
we are selecting the password hash from

533
00:20:07,200 --> 00:20:08,640
uh

534
00:20:08,640 --> 00:20:10,880
from the database but what we can also

535
00:20:10,880 --> 00:20:13,120
do is we can update this password

536
00:20:13,120 --> 00:20:15,760
hashtag uh value now so

537
00:20:15,760 --> 00:20:17,600
through uh

538
00:20:17,600 --> 00:20:19,200
through this way by updating the

539
00:20:19,200 --> 00:20:21,760
password hash we are able to hijack the

540
00:20:21,760 --> 00:20:24,879
administrator account

541
00:20:24,960 --> 00:20:26,720
and

542
00:20:26,720 --> 00:20:28,720
about our vulnerability

543
00:20:28,720 --> 00:20:30,880
the first one is the

544
00:20:30,880 --> 00:20:33,600
file read information disclosure

545
00:20:33,600 --> 00:20:35,200
so

546
00:20:35,200 --> 00:20:37,840
each one of these actions has a

547
00:20:37,840 --> 00:20:38,880
method

548
00:20:38,880 --> 00:20:41,039
in uh

549
00:20:41,039 --> 00:20:43,600
in its class that is executing terminal

550
00:20:43,600 --> 00:20:47,600
this method is called whenever the

551
00:20:47,600 --> 00:20:49,840
the action is triggered so this is the

552
00:20:49,840 --> 00:20:51,679
entry point of the action everything

553
00:20:51,679 --> 00:20:54,960
that the action does starts from here

554
00:20:54,960 --> 00:20:58,320
so we can see that in this case

555
00:20:58,320 --> 00:21:00,720
our configuration is uh

556
00:21:00,720 --> 00:21:02,799
is loaded at point one

557
00:21:02,799 --> 00:21:05,600
uh and uh

558
00:21:05,600 --> 00:21:08,080
what happens here is that

559
00:21:08,080 --> 00:21:11,520
we give it our configuration and uh

560
00:21:11,520 --> 00:21:15,120
this action goes to a

561
00:21:15,120 --> 00:21:18,000
remote http server that we control

562
00:21:18,000 --> 00:21:19,280
and uh

563
00:21:19,280 --> 00:21:22,480
converts the html of the

564
00:21:22,480 --> 00:21:23,360
uh

565
00:21:23,360 --> 00:21:26,480
that the server serves it converts it to

566
00:21:26,480 --> 00:21:30,799
pdf then it emails it back to our

567
00:21:30,799 --> 00:21:32,400
email that we control

568
00:21:32,400 --> 00:21:36,080
so how did we exploit this

569
00:21:36,240 --> 00:21:37,600
uh well

570
00:21:37,600 --> 00:21:38,720
first

571
00:21:38,720 --> 00:21:40,799
we can see that we can set quite a few

572
00:21:40,799 --> 00:21:44,320
parameters so again we can set uh the

573
00:21:44,320 --> 00:21:48,080
webpage url we can uh

574
00:21:48,320 --> 00:21:50,640
we will be able to modify the smtp

575
00:21:50,640 --> 00:21:52,320
configuration

576
00:21:52,320 --> 00:21:54,480
but

577
00:21:55,760 --> 00:21:57,600
this allows us

578
00:21:57,600 --> 00:21:59,679
and this gives us a lot of leverage over

579
00:21:59,679 --> 00:22:01,679
what we can do with this

580
00:22:01,679 --> 00:22:02,960
so what

581
00:22:02,960 --> 00:22:06,559
ended up happening is that

582
00:22:08,000 --> 00:22:12,679
this action uses uh

583
00:22:12,799 --> 00:22:15,520
external pdf converter so the pdf

584
00:22:15,520 --> 00:22:17,919
converter is in another binary

585
00:22:17,919 --> 00:22:20,159
that

586
00:22:20,400 --> 00:22:22,320
what it does it again it just goes to

587
00:22:22,320 --> 00:22:23,840
the

588
00:22:23,840 --> 00:22:24,880
remote

589
00:22:24,880 --> 00:22:27,840
remote server and

590
00:22:27,840 --> 00:22:29,440
converts

591
00:22:29,440 --> 00:22:32,080
converts the file to

592
00:22:32,080 --> 00:22:35,280
pdf and it adds it as a attachment

593
00:22:35,280 --> 00:22:37,520
and

594
00:22:37,520 --> 00:22:39,679
the problem here is

595
00:22:39,679 --> 00:22:41,840
that

596
00:22:42,400 --> 00:22:45,679
we can also reference

597
00:22:46,080 --> 00:22:47,600
local files

598
00:22:47,600 --> 00:22:50,640
so here the

599
00:22:50,640 --> 00:22:54,400
arguments for the pdf converter are

600
00:22:54,400 --> 00:22:57,120
created and the pdf converter is run at

601
00:22:57,120 --> 00:22:59,678
0.5

602
00:22:59,840 --> 00:23:02,080
and

603
00:23:02,400 --> 00:23:04,799
how can we

604
00:23:04,799 --> 00:23:06,000
use this

605
00:23:06,000 --> 00:23:08,799
we can use this by uh

606
00:23:08,799 --> 00:23:11,200
for example we can point an iframe

607
00:23:11,200 --> 00:23:12,400
to a

608
00:23:12,400 --> 00:23:13,840
local uh

609
00:23:13,840 --> 00:23:15,520
file on the server

610
00:23:15,520 --> 00:23:18,400
and by this since uh

611
00:23:18,400 --> 00:23:19,919
we control

612
00:23:19,919 --> 00:23:21,679
everything about the web page

613
00:23:21,679 --> 00:23:22,880
we can

614
00:23:22,880 --> 00:23:25,840
link pretty much any text file

615
00:23:25,840 --> 00:23:28,159
through the iframe

616
00:23:28,159 --> 00:23:30,559
we do need control over the smtp

617
00:23:30,559 --> 00:23:32,480
configuration

618
00:23:32,480 --> 00:23:33,200
but

619
00:23:33,200 --> 00:23:36,159
more on this later um

620
00:23:36,159 --> 00:23:37,039
and

621
00:23:37,039 --> 00:23:41,279
yeah this allows us uh to exfiltrate uh

622
00:23:41,279 --> 00:23:42,320
files

623
00:23:42,320 --> 00:23:43,039
uh

624
00:23:43,039 --> 00:23:46,320
from the target server to our smtp uh

625
00:23:46,320 --> 00:23:47,679
server

626
00:23:47,679 --> 00:23:48,559
so

627
00:23:48,559 --> 00:23:50,960
the capabilities that

628
00:23:50,960 --> 00:23:53,360
we have so far is that

629
00:23:53,360 --> 00:23:55,840
we can leak arbitrary files

630
00:23:55,840 --> 00:23:59,279
we had a limitation that

631
00:24:00,640 --> 00:24:02,080
we required

632
00:24:02,080 --> 00:24:04,320
user credentials with other management

633
00:24:04,320 --> 00:24:05,440
permission

634
00:24:05,440 --> 00:24:06,640
but

635
00:24:06,640 --> 00:24:08,159
since we already already have the

636
00:24:08,159 --> 00:24:10,720
cross-site scripting uh

637
00:24:10,720 --> 00:24:12,000
we don't really

638
00:24:12,000 --> 00:24:14,080
need that anymore but we also have a

639
00:24:14,080 --> 00:24:16,640
requirement we require that we control

640
00:24:16,640 --> 00:24:19,520
the sntp server configuration

641
00:24:19,520 --> 00:24:21,918
because

642
00:24:22,320 --> 00:24:25,039
in order to exfiltrate the data

643
00:24:25,039 --> 00:24:28,400
not only we need some entry in the smtp

644
00:24:28,400 --> 00:24:30,559
configuration but we also need the entry

645
00:24:30,559 --> 00:24:33,360
to point to our server

646
00:24:33,360 --> 00:24:34,559
because

647
00:24:34,559 --> 00:24:37,200
if not it will won't end up where we

648
00:24:37,200 --> 00:24:39,360
need where we need to so we won't be

649
00:24:39,360 --> 00:24:42,240
able to successfully link the file if we

650
00:24:42,240 --> 00:24:43,440
uh

651
00:24:43,440 --> 00:24:46,799
don't uh if the files doesn't end up to

652
00:24:46,799 --> 00:24:47,679
our

653
00:24:47,679 --> 00:24:50,159
to our server

654
00:24:50,159 --> 00:24:51,120
but

655
00:24:51,120 --> 00:24:53,200
also within this uh

656
00:24:53,200 --> 00:24:56,000
this same action we discovered also

657
00:24:56,000 --> 00:24:58,720
command injection

658
00:24:59,520 --> 00:25:00,480
so

659
00:25:00,480 --> 00:25:02,960
uh when the

660
00:25:02,960 --> 00:25:04,080
uh

661
00:25:04,080 --> 00:25:05,520
when the conversion

662
00:25:05,520 --> 00:25:07,279
takes place

663
00:25:07,279 --> 00:25:08,400
uh

664
00:25:08,400 --> 00:25:10,159
the

665
00:25:10,159 --> 00:25:13,919
uh arguments are generated from the url

666
00:25:13,919 --> 00:25:17,200
that we provide and from our file that

667
00:25:17,200 --> 00:25:20,640
we don't really control

668
00:25:20,640 --> 00:25:21,679
but

669
00:25:21,679 --> 00:25:26,400
this is done in an unsafe way so

670
00:25:26,400 --> 00:25:30,000
when we take a look at uh the format

671
00:25:30,000 --> 00:25:30,880
uh

672
00:25:30,880 --> 00:25:32,720
we only control the arguments we don't

673
00:25:32,720 --> 00:25:35,600
control what we can uh

674
00:25:35,600 --> 00:25:37,919
what program can we execute

675
00:25:37,919 --> 00:25:39,679
so this is not really that

676
00:25:39,679 --> 00:25:41,760
straightforward we we cannot

677
00:25:41,760 --> 00:25:43,760
we cannot say execute

678
00:25:43,760 --> 00:25:46,960
command prompt with our command

679
00:25:46,960 --> 00:25:50,640
we can only execute the pdf converter

680
00:25:50,640 --> 00:25:52,640
and um

681
00:25:52,640 --> 00:25:54,159
what we can do

682
00:25:54,159 --> 00:25:57,679
is we can inject some more arguments in

683
00:25:57,679 --> 00:25:59,919
the url parameter

684
00:25:59,919 --> 00:26:02,159
since uh

685
00:26:02,159 --> 00:26:04,000
since the url parameter is never

686
00:26:04,000 --> 00:26:06,080
actually checked that it's a new error

687
00:26:06,080 --> 00:26:07,600
we can uh

688
00:26:07,600 --> 00:26:11,120
we can also inject for example our

689
00:26:11,120 --> 00:26:14,080
output file uh parameter and we can

690
00:26:14,080 --> 00:26:18,080
control that to point to our shell

691
00:26:18,080 --> 00:26:19,039
so

692
00:26:19,039 --> 00:26:22,159
when the pdf is converted instead of

693
00:26:22,159 --> 00:26:23,039
how

694
00:26:23,039 --> 00:26:25,440
it's set to be converted to a temporary

695
00:26:25,440 --> 00:26:26,640
file

696
00:26:26,640 --> 00:26:28,799
and

697
00:26:29,120 --> 00:26:32,400
later that file is deleted we

698
00:26:32,400 --> 00:26:33,279
uh

699
00:26:33,279 --> 00:26:36,320
we output the

700
00:26:36,320 --> 00:26:38,480
pdf to our control locations for for

701
00:26:38,480 --> 00:26:42,480
example our backdoor is in shell.spx

702
00:26:42,480 --> 00:26:45,039
so uh

703
00:26:45,039 --> 00:26:48,159
yeah we we have one problem though

704
00:26:48,159 --> 00:26:50,159
our problem is that

705
00:26:50,159 --> 00:26:53,039
we are outputting a pdf

706
00:26:53,039 --> 00:26:53,840
so

707
00:26:53,840 --> 00:26:54,799
uh

708
00:26:54,799 --> 00:26:57,200
by this doesn't mean that we can just

709
00:26:57,200 --> 00:27:00,000
put our uh put our shell

710
00:27:00,000 --> 00:27:01,600
on the

711
00:27:01,600 --> 00:27:04,080
on the http server and when it gets

712
00:27:04,080 --> 00:27:06,559
converted to pdf the html will just show

713
00:27:06,559 --> 00:27:08,720
up and

714
00:27:08,720 --> 00:27:10,480
we will be able to

715
00:27:10,480 --> 00:27:12,960
just go to spx and

716
00:27:12,960 --> 00:27:14,159
get rc

717
00:27:14,159 --> 00:27:16,159
it's not that fast the

718
00:27:16,159 --> 00:27:17,679
regular text

719
00:27:17,679 --> 00:27:21,360
that is found on the on the web page is

720
00:27:21,360 --> 00:27:24,240
encoded in the pdf so this breaks our

721
00:27:24,240 --> 00:27:25,440
shell

722
00:27:25,440 --> 00:27:28,640
we cannot directly obtain a remote code

723
00:27:28,640 --> 00:27:30,000
execution or

724
00:27:30,000 --> 00:27:31,200
through this path

725
00:27:31,200 --> 00:27:32,399
but

726
00:27:32,399 --> 00:27:34,960
what we can do

727
00:27:34,960 --> 00:27:38,720
is we can use images uh fun fact uh

728
00:27:38,720 --> 00:27:39,520
some

729
00:27:39,520 --> 00:27:42,480
well actually images are not

730
00:27:42,480 --> 00:27:45,120
uh are not encoded

731
00:27:45,120 --> 00:27:46,840
in the pdf

732
00:27:46,840 --> 00:27:50,640
so we we can just embed an image

733
00:27:50,640 --> 00:27:51,919
in the

734
00:27:51,919 --> 00:27:53,520
uh with

735
00:27:53,520 --> 00:27:56,320
our payload in the exif section of the

736
00:27:56,320 --> 00:27:57,360
image

737
00:27:57,360 --> 00:28:00,000
and uh since this is not encoded this

738
00:28:00,000 --> 00:28:03,760
will remain the same

739
00:28:03,760 --> 00:28:05,679
this will remain the same in the pdf

740
00:28:05,679 --> 00:28:06,559
that

741
00:28:06,559 --> 00:28:08,480
is converted

742
00:28:08,480 --> 00:28:10,559
thus allowing us to

743
00:28:10,559 --> 00:28:13,360
get a clean shell and uh

744
00:28:13,360 --> 00:28:14,960
and execute

745
00:28:14,960 --> 00:28:16,480
arbitrary commands

746
00:28:16,480 --> 00:28:19,039
uh so

747
00:28:19,039 --> 00:28:20,720
we also place

748
00:28:20,720 --> 00:28:22,480
this chameleon is actually the proof of

749
00:28:22,480 --> 00:28:24,799
concept we place this chameleon uh at

750
00:28:24,799 --> 00:28:27,600
the top of the page in the hopes that it

751
00:28:27,600 --> 00:28:28,480
will

752
00:28:28,480 --> 00:28:30,399
show up earlier in the pdf

753
00:28:30,399 --> 00:28:33,840
we actually needed to show as earlier as

754
00:28:33,840 --> 00:28:37,120
earliest as possible because uh

755
00:28:37,120 --> 00:28:41,120
any any any kind of other character will

756
00:28:41,120 --> 00:28:44,880
or might possibly break the shell and

757
00:28:44,880 --> 00:28:46,559
will

758
00:28:46,559 --> 00:28:48,399
break our exploit

759
00:28:48,399 --> 00:28:49,279
but

760
00:28:49,279 --> 00:28:51,840
this usually doesn't happen so

761
00:28:51,840 --> 00:28:55,918
rc can now easily be achieved

762
00:28:57,120 --> 00:28:59,760
and what do we have so far so so far so

763
00:28:59,760 --> 00:29:01,760
good we can execute arbitrary commands

764
00:29:01,760 --> 00:29:03,440
again we don't really require user

765
00:29:03,440 --> 00:29:04,799
credentials

766
00:29:04,799 --> 00:29:07,200
uh but we require control over the sntp

767
00:29:07,200 --> 00:29:10,159
configuration again uh

768
00:29:10,159 --> 00:29:12,320
the difference between uh between the

769
00:29:12,320 --> 00:29:14,320
fire read and uh

770
00:29:14,320 --> 00:29:18,639
and the commander injection is that uh

771
00:29:18,799 --> 00:29:21,360
the fire it requires uh

772
00:29:21,360 --> 00:29:23,919
requires us to be able to control what

773
00:29:23,919 --> 00:29:27,520
entries are in the smtp configuration

774
00:29:27,520 --> 00:29:29,679
this vulnerability doesn't this one only

775
00:29:29,679 --> 00:29:31,360
requires uh

776
00:29:31,360 --> 00:29:33,520
the target server to have some kind of

777
00:29:33,520 --> 00:29:35,039
smtp

778
00:29:35,039 --> 00:29:36,960
uh configuration in place

779
00:29:36,960 --> 00:29:38,720
so uh

780
00:29:38,720 --> 00:29:40,640
this is uh

781
00:29:40,640 --> 00:29:42,399
this would be a

782
00:29:42,399 --> 00:29:44,000
a common instance

783
00:29:44,000 --> 00:29:46,080
of the software so

784
00:29:46,080 --> 00:29:47,919
these two could happen commonly in the

785
00:29:47,919 --> 00:29:51,039
world since uh sysad means

786
00:29:51,039 --> 00:29:52,960
required to be notified

787
00:29:52,960 --> 00:29:55,520
about what is happening in the network

788
00:29:55,520 --> 00:29:57,279
so this we might actually see it in the

789
00:29:57,279 --> 00:30:00,159
world the firings without without the

790
00:30:00,159 --> 00:30:03,039
next vulnerability not so much

791
00:30:03,039 --> 00:30:05,679
so uh

792
00:30:06,080 --> 00:30:09,679
the smtp configuration uh

793
00:30:09,679 --> 00:30:11,600
what do we use it for well

794
00:30:11,600 --> 00:30:14,240
we use it for mostly to

795
00:30:14,240 --> 00:30:15,679
uh

796
00:30:15,679 --> 00:30:17,440
uh

797
00:30:17,440 --> 00:30:18,240
to

798
00:30:18,240 --> 00:30:19,760
help the

799
00:30:19,760 --> 00:30:20,720
uh

800
00:30:20,720 --> 00:30:22,480
the sys admins

801
00:30:22,480 --> 00:30:23,279
uh

802
00:30:23,279 --> 00:30:26,159
gets notified about what is happening so

803
00:30:26,159 --> 00:30:28,320
how i said previously but in this case

804
00:30:28,320 --> 00:30:31,520
we are using it uh to send the

805
00:30:31,520 --> 00:30:33,919
uh pdf or for web page

806
00:30:33,919 --> 00:30:36,640
uh for example in the case where

807
00:30:36,640 --> 00:30:38,559
let's say uh

808
00:30:38,559 --> 00:30:41,120
a server breaks that we are monitoring

809
00:30:41,120 --> 00:30:42,399
uh

810
00:30:42,399 --> 00:30:43,200
this

811
00:30:43,200 --> 00:30:45,120
software will just go out to the server

812
00:30:45,120 --> 00:30:48,320
see okay well it shows the error

813
00:30:48,320 --> 00:30:51,200
status code 500 with this error

814
00:30:51,200 --> 00:30:54,000
so send that to the sysadmin and uh yeah

815
00:30:54,000 --> 00:30:56,159
here you will hopefully know what to do

816
00:30:56,159 --> 00:30:57,519
uh

817
00:30:57,519 --> 00:30:58,640
so the s

818
00:30:58,640 --> 00:31:00,720
sntp configuration is primarily needed

819
00:31:00,720 --> 00:31:01,679
uh

820
00:31:01,679 --> 00:31:02,880
by the

821
00:31:02,880 --> 00:31:05,120
uh by the alerts

822
00:31:05,120 --> 00:31:07,360
uh but

823
00:31:07,360 --> 00:31:09,919
the servers may only be added by an

824
00:31:09,919 --> 00:31:11,600
administrator

825
00:31:11,600 --> 00:31:13,360
and well

826
00:31:13,360 --> 00:31:16,080
we might be able to get uh

827
00:31:16,080 --> 00:31:18,080
get control over an account with alert

828
00:31:18,080 --> 00:31:21,200
management uh privileges so uh

829
00:31:21,200 --> 00:31:23,120
sysadmin but we most likely won't be

830
00:31:23,120 --> 00:31:24,159
able to

831
00:31:24,159 --> 00:31:26,399
to get a

832
00:31:26,399 --> 00:31:28,240
control over an accounting

833
00:31:28,240 --> 00:31:29,679
administrator

834
00:31:29,679 --> 00:31:30,880
so

835
00:31:30,880 --> 00:31:32,640
we need to handle this

836
00:31:32,640 --> 00:31:35,600
we need to find a way in which we can

837
00:31:35,600 --> 00:31:36,960
add the

838
00:31:36,960 --> 00:31:38,240
entries to the

839
00:31:38,240 --> 00:31:39,360
sntp

840
00:31:39,360 --> 00:31:41,200
server configuration

841
00:31:41,200 --> 00:31:43,360
so

842
00:31:43,679 --> 00:31:44,799
uh

843
00:31:44,799 --> 00:31:47,600
the next golamity is the final piece of

844
00:31:47,600 --> 00:31:49,279
the puzzle

845
00:31:49,279 --> 00:31:50,640
so

846
00:31:50,640 --> 00:31:52,559
only privileged uh

847
00:31:52,559 --> 00:31:55,600
users are allowed to import alerts that

848
00:31:55,600 --> 00:31:57,200
is that we know

849
00:31:57,200 --> 00:31:58,840
but

850
00:31:58,840 --> 00:32:02,480
uh as you can see in this case if the

851
00:32:02,480 --> 00:32:05,760
import sntp server is set we can also

852
00:32:05,760 --> 00:32:09,919
import the smtp server configuration

853
00:32:09,919 --> 00:32:12,799
which is what we need

854
00:32:12,799 --> 00:32:16,080
so this is so far so good uh

855
00:32:16,080 --> 00:32:18,480
since only privileged users are allowed

856
00:32:18,480 --> 00:32:20,320
to import alerts

857
00:32:20,320 --> 00:32:21,440
uh

858
00:32:21,440 --> 00:32:23,760
if you don't have the privilege well

859
00:32:23,760 --> 00:32:25,360
what it should have happened is if you

860
00:32:25,360 --> 00:32:26,960
don't have the privilege

861
00:32:26,960 --> 00:32:28,559
you are not able to call this

862
00:32:28,559 --> 00:32:30,799
functionality

863
00:32:30,799 --> 00:32:31,679
but

864
00:32:31,679 --> 00:32:33,519
that is not the case

865
00:32:33,519 --> 00:32:37,120
what ended up happening is that the

866
00:32:37,120 --> 00:32:40,240
the privilege that you can import

867
00:32:40,240 --> 00:32:42,399
you can import alerts is checked only at

868
00:32:42,399 --> 00:32:44,399
the end so the

869
00:32:44,399 --> 00:32:47,279
uh the alert is created and uh

870
00:32:47,279 --> 00:32:48,080
if

871
00:32:48,080 --> 00:32:50,960
only the user doesn't have the

872
00:32:50,960 --> 00:32:52,640
correct permissions

873
00:32:52,640 --> 00:32:53,919
uh

874
00:32:53,919 --> 00:32:57,200
the alert is deleted but

875
00:32:57,200 --> 00:32:59,679
well this is an alternative way of doing

876
00:32:59,679 --> 00:33:00,559
things

877
00:33:00,559 --> 00:33:03,760
and would be good as long as it doesn't

878
00:33:03,760 --> 00:33:05,279
have side effects

879
00:33:05,279 --> 00:33:07,840
which unfortunately did

880
00:33:07,840 --> 00:33:10,559
so what i showed you earlier about the

881
00:33:10,559 --> 00:33:11,679
uh

882
00:33:11,679 --> 00:33:14,960
the fact that we are able to import uh

883
00:33:14,960 --> 00:33:17,200
uh smtp servers

884
00:33:17,200 --> 00:33:18,080
uh

885
00:33:18,080 --> 00:33:19,039
on the

886
00:33:19,039 --> 00:33:21,919
ram platform well

887
00:33:21,919 --> 00:33:24,720
we can do this and

888
00:33:24,720 --> 00:33:27,519
the configuration will stable will will

889
00:33:27,519 --> 00:33:30,000
stay there even though the

890
00:33:30,000 --> 00:33:32,480
the alert is deleted because

891
00:33:32,480 --> 00:33:34,880
they are stored in separate places

892
00:33:34,880 --> 00:33:36,000
so

893
00:33:36,000 --> 00:33:38,240
if a low privileged user ends up doing

894
00:33:38,240 --> 00:33:42,799
that they will only be able to import uh

895
00:33:43,120 --> 00:33:46,320
to to insert entries in the snpp server

896
00:33:46,320 --> 00:33:47,919
configuration because their alert will

897
00:33:47,919 --> 00:33:49,279
be deleted

898
00:33:49,279 --> 00:33:50,799
so

899
00:33:50,799 --> 00:33:53,200
this is good this is what we needed

900
00:33:53,200 --> 00:33:55,519
we are able now to

901
00:33:55,519 --> 00:33:57,760
uh change the configuration from our low

902
00:33:57,760 --> 00:33:59,360
privileged user

903
00:33:59,360 --> 00:34:00,240
uh

904
00:34:00,240 --> 00:34:02,799
and the

905
00:34:02,799 --> 00:34:04,799
the sntp entries that we inserted are

906
00:34:04,799 --> 00:34:07,519
never checked so

907
00:34:07,519 --> 00:34:09,440
there is nothing in place that would

908
00:34:09,440 --> 00:34:11,760
delete them

909
00:34:11,760 --> 00:34:12,800
so

910
00:34:12,800 --> 00:34:14,639
we can see here uh

911
00:34:14,639 --> 00:34:18,240
in swl studio

912
00:34:18,320 --> 00:34:20,399
that our uh

913
00:34:20,399 --> 00:34:21,359
our

914
00:34:21,359 --> 00:34:24,800
smtp server is inserted in the database

915
00:34:24,800 --> 00:34:26,239
uh and

916
00:34:26,239 --> 00:34:27,199
yeah

917
00:34:27,199 --> 00:34:30,159
in this case uh it is not set to the

918
00:34:30,159 --> 00:34:33,918
default server and it is not enabled but

919
00:34:33,918 --> 00:34:36,560
we can also control those parameters so

920
00:34:36,560 --> 00:34:39,839
we can also add a other server that

921
00:34:39,839 --> 00:34:42,079
is is default

922
00:34:42,079 --> 00:34:43,440
right

923
00:34:43,440 --> 00:34:45,440
and

924
00:34:45,440 --> 00:34:47,679
we we don't actually need

925
00:34:47,679 --> 00:34:49,918
needed to be the default

926
00:34:49,918 --> 00:34:51,839
but would be quite useful in other

927
00:34:51,839 --> 00:34:56,399
attack scenarios uh in our case since we

928
00:34:56,399 --> 00:34:59,839
we can select what server we can use

929
00:34:59,839 --> 00:35:01,119
in the

930
00:35:01,119 --> 00:35:03,359
in the alert configuration

931
00:35:03,359 --> 00:35:04,240
uh

932
00:35:04,240 --> 00:35:06,160
we can just select the server by the

933
00:35:06,160 --> 00:35:08,800
sntp server id and uh everything will

934
00:35:08,800 --> 00:35:11,280
work fine so we don't

935
00:35:11,280 --> 00:35:13,680
really need to bother about the

936
00:35:13,680 --> 00:35:14,640
is

937
00:35:14,640 --> 00:35:18,000
the fact that it is or is not default

938
00:35:18,000 --> 00:35:18,960
so

939
00:35:18,960 --> 00:35:21,760
what capabilities we have so far well we

940
00:35:21,760 --> 00:35:24,160
can insert new sntp server records which

941
00:35:24,160 --> 00:35:25,920
is what we needed

942
00:35:25,920 --> 00:35:27,760
we don't require user credentials since

943
00:35:27,760 --> 00:35:29,599
we have the xss

944
00:35:29,599 --> 00:35:31,680
and yeah this is the final piece of the

945
00:35:31,680 --> 00:35:33,280
puzzle

946
00:35:33,280 --> 00:35:34,320
we can

947
00:35:34,320 --> 00:35:37,200
we can do what we want we can obtain uh

948
00:35:37,200 --> 00:35:38,160
uh

949
00:35:38,160 --> 00:35:40,240
remote code execution on the on the

950
00:35:40,240 --> 00:35:43,119
server by chaining orders

951
00:35:43,119 --> 00:35:45,359
so about the training

952
00:35:45,359 --> 00:35:46,400
uh

953
00:35:46,400 --> 00:35:47,359
putting

954
00:35:47,359 --> 00:35:48,800
all these uh

955
00:35:48,800 --> 00:35:50,560
vulnerabilities together

956
00:35:50,560 --> 00:35:51,760
uh

957
00:35:51,760 --> 00:35:53,839
what we need to do is to to get a target

958
00:35:53,839 --> 00:35:55,200
to

959
00:35:55,200 --> 00:35:56,240
click on

960
00:35:56,240 --> 00:35:58,480
our malicious link we need to add the

961
00:35:58,480 --> 00:36:00,560
configuration uh this entity server

962
00:36:00,560 --> 00:36:02,079
configuration and then we can just get

963
00:36:02,079 --> 00:36:05,119
rca for the pdf and then we can enjoy

964
00:36:05,119 --> 00:36:08,880
our show uh well we didn't really end up

965
00:36:08,880 --> 00:36:10,160
using the

966
00:36:10,160 --> 00:36:11,599
the fyrid

967
00:36:11,599 --> 00:36:13,119
i just thought

968
00:36:13,119 --> 00:36:15,440
it was a cool vulnerability to include

969
00:36:15,440 --> 00:36:18,320
uh since it had the same uh

970
00:36:18,320 --> 00:36:20,079
the same attack flow

971
00:36:20,079 --> 00:36:25,720
but yeah it didn't render useful

972
00:36:27,200 --> 00:36:29,119
so uh

973
00:36:29,119 --> 00:36:30,000
on

974
00:36:30,000 --> 00:36:31,040
how the

975
00:36:31,040 --> 00:36:32,640
attack flow

976
00:36:32,640 --> 00:36:35,440
is happening so again when we just send

977
00:36:35,440 --> 00:36:37,280
the malicious link to the victim we

978
00:36:37,280 --> 00:36:38,960
trigger the exercise we modify the

979
00:36:38,960 --> 00:36:42,000
configuration we trigger the action

980
00:36:42,000 --> 00:36:43,359
uh

981
00:36:43,359 --> 00:36:44,960
all this is happening from the victim's

982
00:36:44,960 --> 00:36:47,359
browser nevertheless so

983
00:36:47,359 --> 00:36:48,800
we don't

984
00:36:48,800 --> 00:36:49,680
do

985
00:36:49,680 --> 00:36:53,040
do anything from the attacker machine

986
00:36:53,040 --> 00:36:55,760
uh and after that

987
00:36:55,760 --> 00:36:58,240
the solarwinds uh orion platform server

988
00:36:58,240 --> 00:36:59,920
will uh

989
00:36:59,920 --> 00:37:02,800
go to our

990
00:37:03,119 --> 00:37:06,240
to our server we'll take the

991
00:37:06,240 --> 00:37:09,119
html convert it to pdf

992
00:37:09,119 --> 00:37:11,440
here it will uh

993
00:37:11,440 --> 00:37:12,880
uh

994
00:37:12,880 --> 00:37:13,680
then

995
00:37:13,680 --> 00:37:16,560
uh send the shell

996
00:37:16,560 --> 00:37:17,680
and

997
00:37:17,680 --> 00:37:20,000
after that our shell will be will be

998
00:37:20,000 --> 00:37:22,800
written to disk on the solarwinds

999
00:37:22,800 --> 00:37:24,280
we use the

1000
00:37:24,280 --> 00:37:29,200
sml login dot aspx location because

1001
00:37:29,200 --> 00:37:32,240
we needed a place

1002
00:37:32,240 --> 00:37:34,320
for ourselves that was unauthenticated

1003
00:37:34,320 --> 00:37:36,880
so we actually can make use of our

1004
00:37:36,880 --> 00:37:40,560
authenticated rc and after that uh

1005
00:37:40,560 --> 00:37:41,440
uh

1006
00:37:41,440 --> 00:37:42,800
sent

1007
00:37:42,800 --> 00:37:44,640
the response is sent to the to the

1008
00:37:44,640 --> 00:37:46,880
victim and we can execute commands via

1009
00:37:46,880 --> 00:37:48,079
our shirt

1010
00:37:48,079 --> 00:37:48,839
well

1011
00:37:48,839 --> 00:37:50,640
um

1012
00:37:50,640 --> 00:37:52,960
we can also execute commands via the

1013
00:37:52,960 --> 00:37:55,599
shell from the victim side but it's just

1014
00:37:55,599 --> 00:37:58,160
faster this way

1015
00:37:58,160 --> 00:38:01,359
so yeah it's just a preference uh choice

1016
00:38:01,359 --> 00:38:05,680
and i'll see not much else

1017
00:38:05,680 --> 00:38:07,839
so let's see a demo

1018
00:38:07,839 --> 00:38:10,078
uh

1019
00:38:10,320 --> 00:38:11,040
so

1020
00:38:11,040 --> 00:38:14,079
what is happening here is uh

1021
00:38:14,079 --> 00:38:14,880
that

1022
00:38:14,880 --> 00:38:17,119
i'm copying the xss to the bitcoin

1023
00:38:17,119 --> 00:38:18,640
browser

1024
00:38:18,640 --> 00:38:20,480
while this is happening i also set an

1025
00:38:20,480 --> 00:38:22,800
iframe to

1026
00:38:22,800 --> 00:38:25,200
to the default web page so nothing looks

1027
00:38:25,200 --> 00:38:27,200
that sketchy we are

1028
00:38:27,200 --> 00:38:28,800
delivering the

1029
00:38:28,800 --> 00:38:31,040
uh the stages of the

1030
00:38:31,040 --> 00:38:33,040
javascript expert we are delivering it

1031
00:38:33,040 --> 00:38:35,119
to the

1032
00:38:35,119 --> 00:38:37,920
user's user browser right now we are in

1033
00:38:37,920 --> 00:38:41,520
we are installing the smtp configuration

1034
00:38:41,520 --> 00:38:42,400
entry

1035
00:38:42,400 --> 00:38:45,119
and after the sntp configuration entry

1036
00:38:45,119 --> 00:38:46,880
is installed

1037
00:38:46,880 --> 00:38:49,599
we are overwriting the sml

1038
00:38:49,599 --> 00:38:50,720
login

1039
00:38:50,720 --> 00:38:52,879
so

1040
00:38:53,599 --> 00:38:57,720
it should not happen anytime

1041
00:39:15,599 --> 00:39:17,200
just under the impression that you froze

1042
00:39:17,200 --> 00:39:19,440
i wasn't sure oh no no no no i was just

1043
00:39:19,440 --> 00:39:22,640
waiting for the for the uh shell to

1044
00:39:22,640 --> 00:39:24,320
pop

1045
00:39:24,320 --> 00:39:26,079
all right so yeah

1046
00:39:26,079 --> 00:39:28,079
we can see

1047
00:39:28,079 --> 00:39:30,000
we can see that our backdoor is

1048
00:39:30,000 --> 00:39:32,079
installed at a small

1049
00:39:32,079 --> 00:39:35,839
aspx location we also have a

1050
00:39:35,839 --> 00:39:38,480
i also made a vector to have a password

1051
00:39:38,480 --> 00:39:41,440
so only us can execute

1052
00:39:41,440 --> 00:39:43,599
commands on the target server so let's

1053
00:39:43,599 --> 00:39:46,000
do that

1054
00:39:46,400 --> 00:39:49,200
so right now we are

1055
00:39:51,040 --> 00:39:53,200
yeah we are executing we executed the

1056
00:39:53,200 --> 00:39:55,040
calculator

1057
00:39:55,040 --> 00:39:59,680
and we are executing executing notepad

1058
00:40:01,280 --> 00:40:03,760
and yeah we can see this impossible so

1059
00:40:03,760 --> 00:40:06,000
uh

1060
00:40:07,520 --> 00:40:10,800
we managed to use our backboard to

1061
00:40:10,800 --> 00:40:12,560
execute

1062
00:40:12,560 --> 00:40:15,680
whatever code we want

1063
00:40:16,079 --> 00:40:17,440
so a

1064
00:40:17,440 --> 00:40:20,480
conclusion over all this

1065
00:40:20,480 --> 00:40:22,240
i would say that solarwinds is still a

1066
00:40:22,240 --> 00:40:23,200
good

1067
00:40:23,200 --> 00:40:24,400
a good target

1068
00:40:24,400 --> 00:40:25,760
but

1069
00:40:25,760 --> 00:40:29,119
their security is improving and is

1070
00:40:29,119 --> 00:40:31,599
improving considerably

1071
00:40:31,599 --> 00:40:32,480
quite

1072
00:40:32,480 --> 00:40:34,640
quite a few

1073
00:40:34,640 --> 00:40:37,680
very good reports came from the zdi

1074
00:40:37,680 --> 00:40:40,319
and i would say that

1075
00:40:40,319 --> 00:40:42,960
their security posture and the way that

1076
00:40:42,960 --> 00:40:45,839
they handle this kind of incidents is

1077
00:40:45,839 --> 00:40:47,920
quite good so

1078
00:40:47,920 --> 00:40:50,720
personally i had a good good experience

1079
00:40:50,720 --> 00:40:54,480
reporting this reliability student

1080
00:40:54,720 --> 00:40:57,200
but as an attacker if you are interested

1081
00:40:57,200 --> 00:41:00,560
to target solarwinds products uh

1082
00:41:00,560 --> 00:41:01,520
go for

1083
00:41:01,520 --> 00:41:03,839
orion platform first

1084
00:41:03,839 --> 00:41:06,880
if you find anything in it you you will

1085
00:41:06,880 --> 00:41:08,560
get the same vulnerability in

1086
00:41:08,560 --> 00:41:10,000
all of the products

1087
00:41:10,000 --> 00:41:12,079
so your vulnerability will be much more

1088
00:41:12,079 --> 00:41:13,440
impactful if you

1089
00:41:13,440 --> 00:41:16,079
if you get it in the orion platform

1090
00:41:16,079 --> 00:41:18,160
and on top of all this

1091
00:41:18,160 --> 00:41:20,319
thing that there is there is a lot of

1092
00:41:20,319 --> 00:41:23,119
unexplored attack surface so

1093
00:41:23,119 --> 00:41:23,920
i

1094
00:41:23,920 --> 00:41:26,079
in a previous slide i i showed the

1095
00:41:26,079 --> 00:41:30,319
swollen ql studio so what that is is a

1096
00:41:30,319 --> 00:41:34,240
custom sql like language that

1097
00:41:34,240 --> 00:41:36,079
any user can execute

1098
00:41:36,079 --> 00:41:38,240
they don't have the same privileges over

1099
00:41:38,240 --> 00:41:39,359
what they can

1100
00:41:39,359 --> 00:41:40,319
read

1101
00:41:40,319 --> 00:41:42,800
but any user can execute so

1102
00:41:42,800 --> 00:41:45,040
i didn't look into it but

1103
00:41:45,040 --> 00:41:46,800
i think it would be really interesting

1104
00:41:46,800 --> 00:41:49,839
to to see if

1105
00:41:50,160 --> 00:41:52,560
we can do any kind of sandbox escape to

1106
00:41:52,560 --> 00:41:54,319
full-fledged uh

1107
00:41:54,319 --> 00:41:57,520
sql or maybe in the syntax parser or in

1108
00:41:57,520 --> 00:41:58,400
the

1109
00:41:58,400 --> 00:42:00,880
interpreter anywhere like that i think

1110
00:42:00,880 --> 00:42:03,440
would be a really good exception to him

1111
00:42:03,440 --> 00:42:04,720
but

1112
00:42:04,720 --> 00:42:05,760
yeah

1113
00:42:05,760 --> 00:42:08,480
this was my talk thank you for

1114
00:42:08,480 --> 00:42:10,640
being here thank you for listening

1115
00:42:10,640 --> 00:42:15,119
uh you can find me on twitter and email

1116
00:42:15,119 --> 00:42:18,640
at the contacts listed and

1117
00:42:18,640 --> 00:42:19,520
yeah

1118
00:42:19,520 --> 00:42:21,440
that was about it

1119
00:42:21,440 --> 00:42:24,079
thank you so much alex we appreciate it

1120
00:42:24,079 --> 00:42:26,319
that was super detailed and insightful

1121
00:42:26,319 --> 00:42:28,880
and i think that it's so important to

1122
00:42:28,880 --> 00:42:30,400
talk about positive examples and

1123
00:42:30,400 --> 00:42:32,319
positive experiences in the industry you

1124
00:42:32,319 --> 00:42:34,560
think that it really helps to see how a

1125
00:42:34,560 --> 00:42:37,280
process like this can work how a process

1126
00:42:37,280 --> 00:42:39,280
of vulnerability disclosure can work

1127
00:42:39,280 --> 00:42:42,160
when uh you know everyone kind of puts

1128
00:42:42,160 --> 00:42:44,480
their best foot forward so thank you for

1129
00:42:44,480 --> 00:42:47,440
this uh and uh we won't be taking any

1130
00:42:47,440 --> 00:42:49,520
questions now simply because paul's

1131
00:42:49,520 --> 00:42:50,720
waiting to

1132
00:42:50,720 --> 00:42:52,880
uh share his presentation as well it was

1133
00:42:52,880 --> 00:42:55,200
great having you here and we hope that

1134
00:42:55,200 --> 00:42:58,160
you'll stick around for the next asphalt

1135
00:42:58,160 --> 00:43:00,799
thank you

