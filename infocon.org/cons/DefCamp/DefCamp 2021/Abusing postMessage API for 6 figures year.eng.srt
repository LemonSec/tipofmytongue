1
00:00:00,080 --> 00:00:02,720
and i will super super quickly jump to

2
00:00:02,720 --> 00:00:05,600
our next speaker to daniel um and i'm

3
00:00:05,600 --> 00:00:08,160
sure that you'll enjoy his presentation

4
00:00:08,160 --> 00:00:09,200
as well

5
00:00:09,200 --> 00:00:11,040
uh thank you so much for coming here

6
00:00:11,040 --> 00:00:14,000
today um daniel also has some cool

7
00:00:14,000 --> 00:00:16,400
stories he'll talk about abusing post

8
00:00:16,400 --> 00:00:19,359
message api for six figures a year his

9
00:00:19,359 --> 00:00:21,760
talk highlights several vulnerabilities

10
00:00:21,760 --> 00:00:24,000
that were found during the past years

11
00:00:24,000 --> 00:00:26,000
many of which could have affected

12
00:00:26,000 --> 00:00:28,560
millions of people it's a story about

13
00:00:28,560 --> 00:00:32,759
big bounties and um not very fixable

14
00:00:32,759 --> 00:00:35,520
vulnerabilities as he puts it daniel the

15
00:00:35,520 --> 00:00:37,040
floor is yours

16
00:00:37,040 --> 00:00:39,280
uh well first of all thank you thank you

17
00:00:39,280 --> 00:00:41,680
for a very good presentation

18
00:00:41,680 --> 00:00:44,239
i will try to speed up to at least my

19
00:00:44,239 --> 00:00:46,000
presentation since

20
00:00:46,000 --> 00:00:47,440
we are a bit late

21
00:00:47,440 --> 00:00:50,239
and uh yeah as you mentioned today i

22
00:00:50,239 --> 00:00:54,559
will be speaking about how we can abuse

23
00:00:54,559 --> 00:00:59,839
the postmessage jk in backward programs

24
00:01:00,160 --> 00:01:01,760
about me

25
00:01:01,760 --> 00:01:04,479
i'm an ethical hacker working with the

26
00:01:04,479 --> 00:01:07,600
team of uh romania for more than

27
00:01:07,600 --> 00:01:10,000
seven years now

28
00:01:10,000 --> 00:01:13,040
i am interested in everything that

29
00:01:13,040 --> 00:01:16,479
is cyber related but uh for for the

30
00:01:16,479 --> 00:01:18,240
purpose of this presentation i will be

31
00:01:18,240 --> 00:01:20,960
focusing on bulk bounties

32
00:01:20,960 --> 00:01:23,840
and uh when i say that i'm a big monkey

33
00:01:23,840 --> 00:01:24,880
hunter

34
00:01:24,880 --> 00:01:26,880
i really mean that i'm trying to hunt

35
00:01:26,880 --> 00:01:28,960
for big vulnerabilities

36
00:01:28,960 --> 00:01:30,799
but as you can see

37
00:01:30,799 --> 00:01:32,880
i don't know what's happening so i tend

38
00:01:32,880 --> 00:01:35,280
to sleep on rc's and

39
00:01:35,280 --> 00:01:37,360
other cool stuff and i want to find

40
00:01:37,360 --> 00:01:39,280
precisely things

41
00:01:39,280 --> 00:01:42,079
but yeah let's uh let's make the the

42
00:01:42,079 --> 00:01:44,399
most of it

43
00:01:44,399 --> 00:01:47,360
uh in this presentation uh we'll touch a

44
00:01:47,360 --> 00:01:50,479
bit of theory regarding first message

45
00:01:50,479 --> 00:01:54,000
but not not too much not to bore you

46
00:01:54,000 --> 00:01:56,479
we'll see a bit

47
00:01:56,479 --> 00:01:59,280
a few ideas which can help us

48
00:01:59,280 --> 00:02:01,360
to discover

49
00:02:01,360 --> 00:02:02,479
more

50
00:02:02,479 --> 00:02:04,960
riskier vulnerabilities

51
00:02:04,960 --> 00:02:05,759
and

52
00:02:05,759 --> 00:02:06,880
a number of

53
00:02:06,880 --> 00:02:08,560
actual vulnerabilities that were found

54
00:02:08,560 --> 00:02:11,360
in the in the past year some of them

55
00:02:11,360 --> 00:02:13,680
were paid others or not

56
00:02:13,680 --> 00:02:15,840
and uh in the end you will see a few

57
00:02:15,840 --> 00:02:19,200
vulnerabilities that paid the paid point

58
00:02:19,200 --> 00:02:20,720
quite well

59
00:02:20,720 --> 00:02:24,400
well uh i hope that you are comfortable

60
00:02:24,400 --> 00:02:26,879
reading javascript code because if you

61
00:02:26,879 --> 00:02:28,720
are not then

62
00:02:28,720 --> 00:02:30,720
you will have a hard time during this

63
00:02:30,720 --> 00:02:32,400
presentation

64
00:02:32,400 --> 00:02:34,400
um

65
00:02:34,400 --> 00:02:36,480
the the only slide for the for theory i

66
00:02:36,480 --> 00:02:37,920
promise um

67
00:02:37,920 --> 00:02:40,480
post message vulnerabilities basically

68
00:02:40,480 --> 00:02:41,920
have two components

69
00:02:41,920 --> 00:02:44,400
the first one would be the

70
00:02:44,400 --> 00:02:47,599
event listener which can be put on any

71
00:02:47,599 --> 00:02:50,480
window in a browser this event listener

72
00:02:50,480 --> 00:02:51,519
as uh

73
00:02:51,519 --> 00:02:53,040
as you can see

74
00:02:53,040 --> 00:02:54,480
um

75
00:02:54,480 --> 00:02:57,200
can verify that the message received is

76
00:02:57,200 --> 00:02:59,920
from a trusted origin or from a trusted

77
00:02:59,920 --> 00:03:03,120
source a trusted window

78
00:03:03,120 --> 00:03:06,239
and uh if the validation is performed at

79
00:03:06,239 --> 00:03:08,560
all and is correct then you can process

80
00:03:08,560 --> 00:03:10,640
the event data

81
00:03:10,640 --> 00:03:11,920
in

82
00:03:11,920 --> 00:03:14,879
any for any purpose that that you wish

83
00:03:14,879 --> 00:03:17,599
in order to trigger such such an event

84
00:03:17,599 --> 00:03:19,120
you have to

85
00:03:19,120 --> 00:03:22,319
post a message to a target window you

86
00:03:22,319 --> 00:03:24,720
need this window handle

87
00:03:24,720 --> 00:03:27,120
and you have to send

88
00:03:27,120 --> 00:03:29,920
a message in operatic structure

89
00:03:29,920 --> 00:03:32,640
a few tips and tricks

90
00:03:32,640 --> 00:03:34,080
as i mentioned you can find the

91
00:03:34,080 --> 00:03:39,319
postmaster vulnerabilities on any window

92
00:03:46,319 --> 00:03:48,239
right you are not navigating for a

93
00:03:48,239 --> 00:03:50,640
website but you still see people's

94
00:03:50,640 --> 00:03:53,439
message event listeners

95
00:03:53,439 --> 00:03:55,439
being present here

96
00:03:55,439 --> 00:03:58,000
and when i mean any

97
00:03:58,000 --> 00:04:01,439
uh window i really mean any window for

98
00:04:01,439 --> 00:04:02,480
example in

99
00:04:02,480 --> 00:04:04,560
the second screenshot you can see that

100
00:04:04,560 --> 00:04:08,239
on my frame within this uh this page has

101
00:04:08,239 --> 00:04:09,519
its own

102
00:04:09,519 --> 00:04:12,560
post message event listener right so

103
00:04:12,560 --> 00:04:15,120
it's important to to remember this that

104
00:04:15,120 --> 00:04:17,600
iframes can have different to even

105
00:04:17,600 --> 00:04:19,279
listeners than

106
00:04:19,279 --> 00:04:20,399
the main

107
00:04:20,399 --> 00:04:23,440
the parent window

108
00:04:23,440 --> 00:04:24,800
um

109
00:04:24,800 --> 00:04:27,520
when trying to to trigger

110
00:04:27,520 --> 00:04:28,880
such an event

111
00:04:28,880 --> 00:04:33,360
as i mentioned we have to know the uh

112
00:04:33,440 --> 00:04:35,520
the target window

113
00:04:35,520 --> 00:04:38,080
well which one is it and

114
00:04:38,080 --> 00:04:40,560
we can obtain this in javascript

115
00:04:40,560 --> 00:04:43,280
in a number of ways but my perfect

116
00:04:43,280 --> 00:04:45,040
perfect for

117
00:04:45,040 --> 00:04:47,280
a proof of concept would be to use a

118
00:04:47,280 --> 00:04:48,880
window.opener

119
00:04:48,880 --> 00:04:49,680
one

120
00:04:49,680 --> 00:04:50,800
you can

121
00:04:50,800 --> 00:04:54,000
obtain a window handle by any other meme

122
00:04:54,000 --> 00:04:56,720
but you have to have a valid window

123
00:04:56,720 --> 00:04:57,840
handle

124
00:04:57,840 --> 00:05:00,479
other than that when sending a message

125
00:05:00,479 --> 00:05:04,080
it is important to know what to

126
00:05:04,080 --> 00:05:07,680
structure that message is expected to be

127
00:05:07,680 --> 00:05:10,720
should it be a json should it be a

128
00:05:10,720 --> 00:05:14,160
string formatted in a special way

129
00:05:14,160 --> 00:05:16,080
and

130
00:05:16,080 --> 00:05:19,280
in in order to to have the

131
00:05:19,280 --> 00:05:22,479
message accepted you have to bypass any

132
00:05:22,479 --> 00:05:25,600
check that is in place for example

133
00:05:25,600 --> 00:05:26,880
you have to

134
00:05:26,880 --> 00:05:28,880
to send a message from a trusted source

135
00:05:28,880 --> 00:05:29,919
or

136
00:05:29,919 --> 00:05:33,919
to have to be one of the trusted origins

137
00:05:33,919 --> 00:05:35,520
right

138
00:05:35,520 --> 00:05:37,280
um

139
00:05:37,280 --> 00:05:40,400
what exactly do we find the high impact

140
00:05:40,400 --> 00:05:43,840
vulnerabilities well i try to search for

141
00:05:43,840 --> 00:05:46,080
such vulnerabilities in applications

142
00:05:46,080 --> 00:05:49,039
which have lots of functionalities

143
00:05:49,039 --> 00:05:52,400
the more functionalities the better

144
00:05:52,400 --> 00:05:54,639
and where some cross-domain

145
00:05:54,639 --> 00:05:56,880
communication is needed and from

146
00:05:56,880 --> 00:05:59,759
experience i i can say that i've seen

147
00:05:59,759 --> 00:06:01,199
such communication

148
00:06:01,199 --> 00:06:03,039
in lots of

149
00:06:03,039 --> 00:06:04,560
websites which

150
00:06:04,560 --> 00:06:05,600
implement

151
00:06:05,600 --> 00:06:08,400
chat functionality chat support

152
00:06:08,400 --> 00:06:11,039
we have this in payment flows you if the

153
00:06:11,039 --> 00:06:13,840
payment is opening in a new window or if

154
00:06:13,840 --> 00:06:18,240
it is embedded in our page in an iframe

155
00:06:18,240 --> 00:06:20,880
we have it in login flows

156
00:06:20,880 --> 00:06:22,080
and

157
00:06:22,080 --> 00:06:24,240
in any case where the

158
00:06:24,240 --> 00:06:26,479
iphones are are used

159
00:06:26,479 --> 00:06:29,759
right so okay let's let's just see some

160
00:06:29,759 --> 00:06:33,280
some examples to better understand this

161
00:06:33,280 --> 00:06:37,039
the first warm-up vulnerability

162
00:06:37,039 --> 00:06:40,479
we can see the even listener which tries

163
00:06:40,479 --> 00:06:42,560
to

164
00:06:42,560 --> 00:06:44,639
get the fm

165
00:06:44,639 --> 00:06:47,199
from a window property

166
00:06:47,199 --> 00:06:49,919
the event data fallback

167
00:06:49,919 --> 00:06:51,919
the event data is the message that we

168
00:06:51,919 --> 00:06:54,880
sent and the callback is probably a part

169
00:06:54,880 --> 00:06:58,000
of the json object that we sent

170
00:06:58,000 --> 00:07:01,840
and yeah if this fm exists and it is a

171
00:07:01,840 --> 00:07:05,039
function then this function will execute

172
00:07:05,039 --> 00:07:07,840
part of our message again

173
00:07:07,840 --> 00:07:11,360
so how can we trigger this for uh

174
00:07:11,360 --> 00:07:13,199
exploit this for triggering

175
00:07:13,199 --> 00:07:15,360
precise scripting

176
00:07:15,360 --> 00:07:16,720
something like this

177
00:07:16,720 --> 00:07:18,000
we

178
00:07:18,000 --> 00:07:21,039
have to get to a handle of this window

179
00:07:21,039 --> 00:07:23,199
and after that we send a post message

180
00:07:23,199 --> 00:07:24,160
with

181
00:07:24,160 --> 00:07:26,639
the following json the callback

182
00:07:26,639 --> 00:07:29,759
parameter could be the eval function

183
00:07:29,759 --> 00:07:33,120
and the param parameter could be any

184
00:07:33,120 --> 00:07:36,319
javascript code and there's that

185
00:07:36,319 --> 00:07:38,319
okay i i know what you you're thinking

186
00:07:38,319 --> 00:07:41,360
this is only this is still theory there

187
00:07:41,360 --> 00:07:44,319
is no way this with any anywhere out

188
00:07:44,319 --> 00:07:46,639
there you know

189
00:07:46,639 --> 00:07:48,160
in real world

190
00:07:48,160 --> 00:07:50,879
but the sad rules is that this

191
00:07:50,879 --> 00:07:53,599
vulnerability is affected affecting a

192
00:07:53,599 --> 00:07:56,319
romanian company one that i'm a customer

193
00:07:56,319 --> 00:07:57,360
of

194
00:07:57,360 --> 00:08:00,000
um this company has no bulk bounty

195
00:08:00,000 --> 00:08:02,720
program but they are as big as they can

196
00:08:02,720 --> 00:08:04,160
get and

197
00:08:04,160 --> 00:08:06,080
they have the resources they have the

198
00:08:06,080 --> 00:08:09,440
know-how for fixing this vulnerability

199
00:08:09,440 --> 00:08:11,520
but they are not doing so i don't know

200
00:08:11,520 --> 00:08:13,440
why please guys if you're seeing this

201
00:08:13,440 --> 00:08:16,240
try to fix it it's affecting my account

202
00:08:16,240 --> 00:08:17,680
please

203
00:08:17,680 --> 00:08:20,400
um yeah i reported

204
00:08:20,400 --> 00:08:23,759
to them more than one year ago and

205
00:08:23,759 --> 00:08:27,199
still no fixing but who knows maybe

206
00:08:27,199 --> 00:08:29,280
maybe

207
00:08:29,280 --> 00:08:31,440
let's see some vulnerabilities that to

208
00:08:31,440 --> 00:08:32,958
actually pay

209
00:08:32,958 --> 00:08:35,199
for

210
00:08:36,320 --> 00:08:37,200
for

211
00:08:37,200 --> 00:08:39,120
their discovery

212
00:08:39,120 --> 00:08:41,519
the first example and this will be the

213
00:08:41,519 --> 00:08:44,000
only example where i give the the

214
00:08:44,000 --> 00:08:47,920
company's name um this one is in mozilla

215
00:08:47,920 --> 00:08:49,440
foundation

216
00:08:49,440 --> 00:08:52,399
um they used to register a

217
00:08:52,399 --> 00:08:55,839
post message event listener

218
00:08:55,839 --> 00:08:57,120
on

219
00:08:57,120 --> 00:08:59,040
on a page where they

220
00:08:59,040 --> 00:09:01,040
they were expecting comments from our

221
00:09:01,040 --> 00:09:02,560
users

222
00:09:02,560 --> 00:09:04,160
and

223
00:09:04,160 --> 00:09:07,440
this message you do not this even is not

224
00:09:07,440 --> 00:09:09,440
did not check to in any way the origin

225
00:09:09,440 --> 00:09:11,440
or the source of

226
00:09:11,440 --> 00:09:14,800
the receiving message but they did check

227
00:09:14,800 --> 00:09:15,920
for the

228
00:09:15,920 --> 00:09:18,399
message itself to be in a specific

229
00:09:18,399 --> 00:09:19,440
format

230
00:09:19,440 --> 00:09:21,680
uh maybe if i can

231
00:09:21,680 --> 00:09:24,640
zoom in a little

232
00:09:24,640 --> 00:09:27,360
um they are violating validating the

233
00:09:27,360 --> 00:09:30,800
data to follow a specific rejects

234
00:09:30,800 --> 00:09:33,760
which is not that complicated it has to

235
00:09:33,760 --> 00:09:35,760
have a few letters

236
00:09:35,760 --> 00:09:38,320
within between parameters and uh that's

237
00:09:38,320 --> 00:09:39,279
it

238
00:09:39,279 --> 00:09:41,360
so um

239
00:09:41,360 --> 00:09:43,279
yeah there was a

240
00:09:43,279 --> 00:09:45,279
origin checking place but they were

241
00:09:45,279 --> 00:09:48,399
accepting messages from any domain from

242
00:09:48,399 --> 00:09:50,640
start so any domain

243
00:09:50,640 --> 00:09:52,800
uh that was not really a problem

244
00:09:52,800 --> 00:09:55,519
probably it was misconfigured for

245
00:09:55,519 --> 00:09:57,680
remaining from from a taste environment

246
00:09:57,680 --> 00:10:00,160
i don't know

247
00:10:01,279 --> 00:10:03,920
while processing the receive message you

248
00:10:03,920 --> 00:10:07,040
could do end up in multiple other

249
00:10:07,040 --> 00:10:08,560
functions

250
00:10:08,560 --> 00:10:10,719
in

251
00:10:11,519 --> 00:10:13,920
functions that could handle this this

252
00:10:13,920 --> 00:10:17,200
event i went through all of them

253
00:10:17,200 --> 00:10:19,040
most of the functions do a lot of stuff

254
00:10:19,040 --> 00:10:21,040
with your message but there was no

255
00:10:21,040 --> 00:10:23,120
redirecting there no

256
00:10:23,120 --> 00:10:25,519
process skipping no nothing

257
00:10:25,519 --> 00:10:28,000
except for the navigate function

258
00:10:28,000 --> 00:10:31,279
uh where i think i got lucky

259
00:10:31,279 --> 00:10:34,480
because if we look at the navigate

260
00:10:34,480 --> 00:10:35,519
function

261
00:10:35,519 --> 00:10:38,320
we can see that

262
00:10:38,640 --> 00:10:41,040
it uses part of the receive message in

263
00:10:41,040 --> 00:10:43,360
order to open a new window

264
00:10:43,360 --> 00:10:45,600
in this case if

265
00:10:45,600 --> 00:10:47,440
the window is pointing towards the

266
00:10:47,440 --> 00:10:50,160
javascript

267
00:10:50,800 --> 00:10:53,360
url then we will have a process between

268
00:10:53,360 --> 00:10:55,519
vulnerability

269
00:10:55,519 --> 00:10:57,760
the proof of concept for this

270
00:10:57,760 --> 00:11:02,480
vulnerability is rather straightforward

271
00:11:02,480 --> 00:11:06,000
we open the vulnerable page in a tab for

272
00:11:06,000 --> 00:11:08,560
obtaining that window handle that that

273
00:11:08,560 --> 00:11:09,519
we need

274
00:11:09,519 --> 00:11:11,839
and after a few seconds after the page

275
00:11:11,839 --> 00:11:13,680
loads we send

276
00:11:13,680 --> 00:11:15,920
the post message in

277
00:11:15,920 --> 00:11:18,880
in a format that would be accepted right

278
00:11:18,880 --> 00:11:23,839
to to bypass that to reduce validation

279
00:11:23,839 --> 00:11:25,440
um

280
00:11:25,440 --> 00:11:29,839
mozilla is a pretty pretty cool with

281
00:11:29,839 --> 00:11:32,800
the robot program they try to

282
00:11:32,800 --> 00:11:34,720
to pay for everything that is needed

283
00:11:34,720 --> 00:11:36,720
this was not necessarily available

284
00:11:36,720 --> 00:11:39,440
payable vulnerability on their site but

285
00:11:39,440 --> 00:11:41,920
they did try to pay for it but three

286
00:11:41,920 --> 00:11:46,399
digits bounty which is pretty cool hey

287
00:11:46,399 --> 00:11:48,640
let's move forward

288
00:11:48,640 --> 00:11:50,720
uh the second vulnerability this one is

289
00:11:50,720 --> 00:11:54,000
slightly more complicated

290
00:11:54,000 --> 00:11:56,959
in this case we can see that

291
00:11:56,959 --> 00:11:58,000
well

292
00:11:58,000 --> 00:11:59,680
it's part of the

293
00:11:59,680 --> 00:12:02,320
eval listener but in this part of the

294
00:12:02,320 --> 00:12:04,720
event listener we can see that they try

295
00:12:04,720 --> 00:12:05,760
to

296
00:12:05,760 --> 00:12:08,800
to validate the origin of the receiving

297
00:12:08,800 --> 00:12:11,920
message is just that they do it in a

298
00:12:11,920 --> 00:12:13,120
correct way

299
00:12:13,120 --> 00:12:15,040
for example

300
00:12:15,040 --> 00:12:17,760
in this case they try to to see if

301
00:12:17,760 --> 00:12:18,959
our

302
00:12:18,959 --> 00:12:22,639
domain is contained within a wide list

303
00:12:22,639 --> 00:12:24,720
of their own

304
00:12:24,720 --> 00:12:27,600
their wildlife domain was something like

305
00:12:27,600 --> 00:12:28,880
very trusted

306
00:12:28,880 --> 00:12:31,200
that domain.com

307
00:12:31,200 --> 00:12:33,839
which is an incorrect mode of validating

308
00:12:33,839 --> 00:12:36,720
the origin because it also validates the

309
00:12:36,720 --> 00:12:39,839
very trusted that though domain right

310
00:12:39,839 --> 00:12:41,680
and uh what i did

311
00:12:41,680 --> 00:12:43,680
i registered that domain it was

312
00:12:43,680 --> 00:12:45,040
available

313
00:12:45,040 --> 00:12:47,680
okay this is a demo not really very

314
00:12:47,680 --> 00:12:50,000
trusted but another thing

315
00:12:50,000 --> 00:12:53,040
this domain was available so i bypassed

316
00:12:53,040 --> 00:12:55,360
the origin checking this way

317
00:12:55,360 --> 00:12:57,440
this is only the first part the second

318
00:12:57,440 --> 00:12:59,920
part would be to actually find the

319
00:12:59,920 --> 00:13:02,320
process speaking vulnerability within

320
00:13:02,320 --> 00:13:05,680
the listener or any other vulnerability

321
00:13:05,680 --> 00:13:07,519
so was there any

322
00:13:07,519 --> 00:13:09,200
yeah that was

323
00:13:09,200 --> 00:13:11,200
in this case you can see that again the

324
00:13:11,200 --> 00:13:14,560
user is redirected to

325
00:13:14,560 --> 00:13:16,560
a part of the message

326
00:13:16,560 --> 00:13:18,880
and if this part of the message would be

327
00:13:18,880 --> 00:13:21,120
a javascript url then again we would

328
00:13:21,120 --> 00:13:22,320
have a

329
00:13:22,320 --> 00:13:25,519
precise scripting vulnerability

330
00:13:25,519 --> 00:13:28,480
and again another part of the event

331
00:13:28,480 --> 00:13:30,560
listener would do something something

332
00:13:30,560 --> 00:13:32,000
very similar

333
00:13:32,000 --> 00:13:33,839
and then the other one would construct

334
00:13:33,839 --> 00:13:36,320
the model window using part of the

335
00:13:36,320 --> 00:13:39,680
message as a url so we had multiple

336
00:13:39,680 --> 00:13:43,120
ways to trigger the the xss

337
00:13:43,120 --> 00:13:45,040
and

338
00:13:45,040 --> 00:13:46,240
we

339
00:13:46,240 --> 00:13:49,360
i created a concept for this uh

340
00:13:49,360 --> 00:13:53,199
where i tried to do the same to

341
00:13:53,199 --> 00:13:55,279
uh trigger for

342
00:13:55,279 --> 00:13:58,160
in each case the

343
00:13:58,160 --> 00:13:59,199
the

344
00:13:59,199 --> 00:14:03,120
uh precise skipping by sending a

345
00:14:03,920 --> 00:14:07,120
post message

346
00:14:07,680 --> 00:14:09,440
it would only require the

347
00:14:09,440 --> 00:14:12,399
user to click on on a button and the

348
00:14:12,399 --> 00:14:13,920
function will hold

349
00:14:13,920 --> 00:14:16,560
the vulnerable domain would be open and

350
00:14:16,560 --> 00:14:18,800
within a few seconds the javascript

351
00:14:18,800 --> 00:14:20,959
pop-up would appear

352
00:14:20,959 --> 00:14:22,720
um

353
00:14:22,720 --> 00:14:24,240
this uh

354
00:14:24,240 --> 00:14:26,399
this vulnerability was downgraded to

355
00:14:26,399 --> 00:14:29,120
media you know usually backbone is do

356
00:14:29,120 --> 00:14:31,040
not

357
00:14:31,040 --> 00:14:32,959
handle very nicely processed keeping

358
00:14:32,959 --> 00:14:36,240
vulnerabilities in terms of retraining

359
00:14:36,240 --> 00:14:37,360
and uh

360
00:14:37,360 --> 00:14:39,360
i've got a nice payout for this so three

361
00:14:39,360 --> 00:14:41,680
digit payout but

362
00:14:41,680 --> 00:14:43,760
their bounty table was

363
00:14:43,760 --> 00:14:47,519
hyping way way higher rewards for

364
00:14:47,519 --> 00:14:49,519
such vulnerabilities and i was kind of

365
00:14:49,519 --> 00:14:53,839
disappointed but hey this is good money

366
00:14:53,839 --> 00:14:56,160
um

367
00:14:57,279 --> 00:14:59,440
yeah

368
00:14:59,440 --> 00:15:02,480
um let's see let's see another example

369
00:15:02,480 --> 00:15:06,000
of vulnerability one where this

370
00:15:06,000 --> 00:15:08,079
was not played

371
00:15:08,079 --> 00:15:09,360
you know

372
00:15:09,360 --> 00:15:11,839
in this uh this example we can see that

373
00:15:11,839 --> 00:15:14,399
at some point in the even listener we

374
00:15:14,399 --> 00:15:17,040
are again redirected to a part of the

375
00:15:17,040 --> 00:15:19,760
message again using javascript urls we

376
00:15:19,760 --> 00:15:20,480
could

377
00:15:20,480 --> 00:15:23,360
trigger a precise 50 vulnerability

378
00:15:23,360 --> 00:15:25,760
we can see that there was

379
00:15:25,760 --> 00:15:27,760
an event origin check for

380
00:15:27,760 --> 00:15:29,759
for a specific domain

381
00:15:29,759 --> 00:15:31,920
so yeah we have a process clipping but

382
00:15:31,920 --> 00:15:34,320
you can only get it from one domain

383
00:15:34,320 --> 00:15:36,880
which is not really a vulnerability

384
00:15:36,880 --> 00:15:37,839
but

385
00:15:37,839 --> 00:15:39,040
what if

386
00:15:39,040 --> 00:15:41,440
what if we can get the precise lifting

387
00:15:41,440 --> 00:15:43,759
within the specific domain could you

388
00:15:43,759 --> 00:15:46,240
could we will use that in order to

389
00:15:46,240 --> 00:15:47,519
trigger

390
00:15:47,519 --> 00:15:50,160
our vulnerability

391
00:15:50,160 --> 00:15:52,639
lucky for us there was a knife frame

392
00:15:52,639 --> 00:15:53,519
within

393
00:15:53,519 --> 00:15:56,240
the same page and this iframe

394
00:15:56,240 --> 00:15:58,639
would contain a vulnerable code

395
00:15:58,639 --> 00:16:00,240
you can see that

396
00:16:00,240 --> 00:16:02,480
part of the message would be added

397
00:16:02,480 --> 00:16:04,720
directly to the dom without proper

398
00:16:04,720 --> 00:16:07,279
validation using the html jquery

399
00:16:07,279 --> 00:16:08,959
function

400
00:16:08,959 --> 00:16:11,440
and of course this would result in you

401
00:16:11,440 --> 00:16:13,519
know precise keeping

402
00:16:13,519 --> 00:16:15,279
the

403
00:16:15,279 --> 00:16:17,120
the triggering of this vulnerability

404
00:16:17,120 --> 00:16:20,079
would be something that like this

405
00:16:20,079 --> 00:16:22,000
call a function that is set to read

406
00:16:22,000 --> 00:16:25,360
message count and uh an html tag

407
00:16:25,360 --> 00:16:28,560
and that would be it

408
00:16:28,639 --> 00:16:30,320
uh the proof of concept for this

409
00:16:30,320 --> 00:16:33,199
vulnerability would imply for us to

410
00:16:33,199 --> 00:16:34,880
first open the

411
00:16:34,880 --> 00:16:36,560
trusted domain that was opened in the

412
00:16:36,560 --> 00:16:37,759
iframe

413
00:16:37,759 --> 00:16:40,079
uh trigger

414
00:16:40,079 --> 00:16:42,079
process scripting within it with a

415
00:16:42,079 --> 00:16:44,240
slightly different payload one pillow

416
00:16:44,240 --> 00:16:45,839
that would actually

417
00:16:45,839 --> 00:16:46,959
open

418
00:16:46,959 --> 00:16:49,360
our main website and exploit the

419
00:16:49,360 --> 00:16:51,600
vulnerability from hitting it

420
00:16:51,600 --> 00:16:52,399
and

421
00:16:52,399 --> 00:16:54,240
yeah

422
00:16:54,240 --> 00:16:56,480
you can see that i tried to to do a

423
00:16:56,480 --> 00:16:59,199
little bit of base64 encryption and

424
00:16:59,199 --> 00:17:01,519
description so that i could

425
00:17:01,519 --> 00:17:04,480
maintain my payload you know on intact

426
00:17:04,480 --> 00:17:06,959
form without escaping characters and so

427
00:17:06,959 --> 00:17:08,319
on

428
00:17:08,319 --> 00:17:11,520
um long story short i reported this and

429
00:17:11,520 --> 00:17:13,839
after about

430
00:17:13,839 --> 00:17:16,160
two months it was fixed

431
00:17:16,160 --> 00:17:16,959
but

432
00:17:16,959 --> 00:17:20,480
i've got the lowest payout you know

433
00:17:20,480 --> 00:17:23,599
in my career 40 euro payout

434
00:17:23,599 --> 00:17:27,439
to digi spell and um yeah i

435
00:17:27,439 --> 00:17:30,480
i kindly suggested to this company to

436
00:17:30,480 --> 00:17:32,960
donate the money because

437
00:17:32,960 --> 00:17:36,000
well bring in the

438
00:17:38,320 --> 00:17:40,320
financial for for this would be harder

439
00:17:40,320 --> 00:17:42,000
than actually

440
00:17:42,000 --> 00:17:43,760
getting the reward

441
00:17:43,760 --> 00:17:45,840
so yeah some vulnerabilities are not

442
00:17:45,840 --> 00:17:48,160
really paying

443
00:17:48,160 --> 00:17:50,799
that much for at all

444
00:17:50,799 --> 00:17:53,840
uh and it really felt like this company

445
00:17:53,840 --> 00:17:57,280
was telling me to take a few bucks and

446
00:17:57,280 --> 00:17:59,919
go go some other part with my

447
00:17:59,919 --> 00:18:01,520
vulnerabilities because i don't really

448
00:18:01,520 --> 00:18:02,320
need

449
00:18:02,320 --> 00:18:04,320
to bother them with the false message

450
00:18:04,320 --> 00:18:06,799
and process communication and what is

451
00:18:06,799 --> 00:18:08,559
that nobody cares

452
00:18:08,559 --> 00:18:10,000
right

453
00:18:10,000 --> 00:18:12,960
so let's change our approach a bit so

454
00:18:12,960 --> 00:18:15,120
we will not get into six figures if i

455
00:18:15,120 --> 00:18:17,600
continue with two or three figures right

456
00:18:17,600 --> 00:18:19,200
um

457
00:18:19,200 --> 00:18:21,600
uh the the problem is that uh

458
00:18:21,600 --> 00:18:23,679
until now i mentioned programs which

459
00:18:23,679 --> 00:18:25,200
would have a

460
00:18:25,200 --> 00:18:28,720
table similarly to this one and while

461
00:18:28,720 --> 00:18:30,880
you are hoping to to score a critical

462
00:18:30,880 --> 00:18:34,000
vulnerability you will most likely be

463
00:18:34,000 --> 00:18:36,400
rewarded the medium bounty which is not

464
00:18:36,400 --> 00:18:38,720
that much at least not comparing with

465
00:18:38,720 --> 00:18:41,440
them their maximum payout

466
00:18:41,440 --> 00:18:44,720
so what we need to do is uh to focus on

467
00:18:44,720 --> 00:18:48,240
programs that have bigger pills

468
00:18:48,240 --> 00:18:50,480
and there are a lot of them

469
00:18:50,480 --> 00:18:52,799
out there even public ones

470
00:18:52,799 --> 00:18:55,679
um and even bigger payouts

471
00:18:55,679 --> 00:18:57,919
depending on

472
00:18:57,919 --> 00:18:59,600
what

473
00:18:59,600 --> 00:19:02,320
you report we have to prove that what

474
00:19:02,320 --> 00:19:04,799
you we report is hierarchical

475
00:19:04,799 --> 00:19:07,440
vulnerabilities and we actually have to

476
00:19:07,440 --> 00:19:09,520
work with companies that are actually

477
00:19:09,520 --> 00:19:11,039
interested in those types of

478
00:19:11,039 --> 00:19:13,440
vulnerabilities right otherwise they

479
00:19:13,440 --> 00:19:15,520
will just not pay if they are only

480
00:19:15,520 --> 00:19:18,799
interested in rcs and server security

481
00:19:18,799 --> 00:19:21,760
uh without caring about the user's

482
00:19:21,760 --> 00:19:23,919
security on the client side then they

483
00:19:23,919 --> 00:19:25,679
will not pay

484
00:19:25,679 --> 00:19:29,520
so let's uh let's see the the biggest uh

485
00:19:29,520 --> 00:19:32,720
payout so far in this example we had

486
00:19:32,720 --> 00:19:33,919
an iframe

487
00:19:33,919 --> 00:19:35,840
which would take a little

488
00:19:35,840 --> 00:19:38,160
session from the local storage and just

489
00:19:38,160 --> 00:19:39,440
send it to

490
00:19:39,440 --> 00:19:41,280
the parent

491
00:19:41,280 --> 00:19:43,679
without any other check if we i think

492
00:19:43,679 --> 00:19:45,600
this vulnerability

493
00:19:45,600 --> 00:19:48,240
we will get the session token

494
00:19:48,240 --> 00:19:49,840
um in

495
00:19:49,840 --> 00:19:51,520
in this

496
00:19:51,520 --> 00:19:52,480
case

497
00:19:52,480 --> 00:19:54,559
the triage did not really understand the

498
00:19:54,559 --> 00:19:56,960
vulnerability and they caused it as

499
00:19:56,960 --> 00:19:58,320
informative

500
00:19:58,320 --> 00:20:00,799
after three months of trying them to

501
00:20:00,799 --> 00:20:03,280
make to understand this

502
00:20:03,280 --> 00:20:06,159
i just decided to tell them and make

503
00:20:06,159 --> 00:20:08,400
this public because it was affecting a

504
00:20:08,400 --> 00:20:09,919
lot of users

505
00:20:09,919 --> 00:20:11,600
and

506
00:20:11,600 --> 00:20:14,240
what happened is that within 24 hours so

507
00:20:14,240 --> 00:20:15,840
they decided to pay for the

508
00:20:15,840 --> 00:20:18,559
vulnerability and try to fix it and they

509
00:20:18,559 --> 00:20:21,280
did so within

510
00:20:21,280 --> 00:20:23,919
two weeks this was my highest paying

511
00:20:23,919 --> 00:20:26,480
vulnerability at that moment very close

512
00:20:26,480 --> 00:20:28,480
to a five digit

513
00:20:28,480 --> 00:20:30,320
vulnerability payout

514
00:20:30,320 --> 00:20:33,120
and uh yeah i'm really

515
00:20:33,120 --> 00:20:35,280
really proud of them for for fixing this

516
00:20:35,280 --> 00:20:36,960
because

517
00:20:36,960 --> 00:20:38,320
i'll be one

518
00:20:38,320 --> 00:20:40,240
let's see something a bit

519
00:20:40,240 --> 00:20:41,760
simpler

520
00:20:41,760 --> 00:20:46,720
um in this example again the

521
00:20:46,799 --> 00:20:48,720
event listener would

522
00:20:48,720 --> 00:20:50,799
follow up or redirect we can use the

523
00:20:50,799 --> 00:20:53,200
same javascript url trick

524
00:20:53,200 --> 00:20:55,440
this would be the

525
00:20:55,440 --> 00:20:58,000
proof of concept for this vulnerability

526
00:20:58,000 --> 00:21:00,880
again we send a predirect message with

527
00:21:00,880 --> 00:21:03,760
javascript url

528
00:21:03,760 --> 00:21:06,640
and what happened is that this

529
00:21:06,640 --> 00:21:10,320
vulnerability was playing

530
00:21:10,320 --> 00:21:11,360
a

531
00:21:11,360 --> 00:21:13,919
five-digit bounty for this and no the

532
00:21:13,919 --> 00:21:17,600
first digit is not zero

533
00:21:17,600 --> 00:21:19,360
um

534
00:21:19,360 --> 00:21:20,480
yeah so

535
00:21:20,480 --> 00:21:23,440
the the payout was really high

536
00:21:23,440 --> 00:21:25,200
basically because it was in a very

537
00:21:25,200 --> 00:21:27,919
trusted domain for for this company

538
00:21:27,919 --> 00:21:28,880
they

539
00:21:28,880 --> 00:21:30,559
they will use this domain

540
00:21:30,559 --> 00:21:32,480
not only for clients but only for

541
00:21:32,480 --> 00:21:34,640
internal use for employees and a lot of

542
00:21:34,640 --> 00:21:38,640
problems could arise for from there

543
00:21:38,640 --> 00:21:41,200
the next vulnerability really resembles

544
00:21:41,200 --> 00:21:43,280
the one from the warm-up vulnerability

545
00:21:43,280 --> 00:21:45,200
if you remember it the one that is still

546
00:21:45,200 --> 00:21:49,200
not fixed well this one is fixed happily

547
00:21:49,200 --> 00:21:52,159
um in in this case again part of the

548
00:21:52,159 --> 00:21:54,720
message is used for searching a function

549
00:21:54,720 --> 00:21:57,440
within the window object and

550
00:21:57,440 --> 00:21:59,520
after that function is found that

551
00:21:59,520 --> 00:22:01,280
function executes another part of the

552
00:22:01,280 --> 00:22:02,640
message

553
00:22:02,640 --> 00:22:03,440
and

554
00:22:03,440 --> 00:22:06,799
the triggering this is as simple as this

555
00:22:06,799 --> 00:22:09,120
this vulnerability is you know payment

556
00:22:09,120 --> 00:22:10,840
flow they are

557
00:22:10,840 --> 00:22:12,640
expecting

558
00:22:12,640 --> 00:22:15,200
something like a payment success with uh

559
00:22:15,200 --> 00:22:17,440
well congratulations you paid for this

560
00:22:17,440 --> 00:22:19,919
successfully

561
00:22:19,919 --> 00:22:21,679
um

562
00:22:21,679 --> 00:22:24,159
and yeah the proof of concept for this

563
00:22:24,159 --> 00:22:27,520
is as simple as you can get you open the

564
00:22:27,520 --> 00:22:30,400
vulnerable page you know in a new

565
00:22:30,400 --> 00:22:32,880
window in this case you had to do a

566
00:22:32,880 --> 00:22:35,520
pause request to get there but you could

567
00:22:35,520 --> 00:22:39,200
do that via proxy page

568
00:22:39,200 --> 00:22:40,320
and uh

569
00:22:40,320 --> 00:22:42,640
nevertheless in less than three two

570
00:22:42,640 --> 00:22:44,320
months they again

571
00:22:44,320 --> 00:22:45,679
paid

572
00:22:45,679 --> 00:22:49,120
a very very good bounty for this the

573
00:22:49,120 --> 00:22:53,120
biggest bounty at to that time again a

574
00:22:53,120 --> 00:22:56,479
five digit bounty

575
00:22:56,799 --> 00:22:57,919
um

576
00:22:57,919 --> 00:23:00,799
and yeah it it looks like uh proving

577
00:23:00,799 --> 00:23:03,120
that you can actually still credit our

578
00:23:03,120 --> 00:23:05,760
data or user information or compromising

579
00:23:05,760 --> 00:23:08,400
your victim's account with this actually

580
00:23:08,400 --> 00:23:09,840
increases the

581
00:23:09,840 --> 00:23:13,120
that is rating for for the vulnerability

582
00:23:13,120 --> 00:23:15,520
and the the last one that that i want to

583
00:23:15,520 --> 00:23:17,840
show this one is a little bit more

584
00:23:17,840 --> 00:23:21,200
complicated again in our payment flow

585
00:23:21,200 --> 00:23:22,400
um

586
00:23:22,400 --> 00:23:24,480
in this case um

587
00:23:24,480 --> 00:23:26,960
uh the event listener

588
00:23:26,960 --> 00:23:29,280
would expect a message from the payment

589
00:23:29,280 --> 00:23:31,039
timeframe that is embedded within the

590
00:23:31,039 --> 00:23:34,080
page they would validate that

591
00:23:34,080 --> 00:23:36,480
the message only comes from that domain

592
00:23:36,480 --> 00:23:38,240
and no other domain

593
00:23:38,240 --> 00:23:38,960
but

594
00:23:38,960 --> 00:23:40,480
they would include the part of the

595
00:23:40,480 --> 00:23:43,200
message in our payment so in

596
00:23:43,200 --> 00:23:45,520
the html you know secure way so they

597
00:23:45,520 --> 00:23:48,960
would have a normal precisely

598
00:23:48,960 --> 00:23:52,080
the payment timeframe itself would also

599
00:23:52,080 --> 00:23:55,120
have a similar vulnerability they would

600
00:23:55,120 --> 00:23:56,320
only

601
00:23:56,320 --> 00:23:58,880
accept messages from the parent window

602
00:23:58,880 --> 00:24:01,120
and

603
00:24:01,520 --> 00:24:03,600
this message would do

604
00:24:03,600 --> 00:24:06,320
would be added to the dome in an

605
00:24:06,320 --> 00:24:07,919
insecure way

606
00:24:07,919 --> 00:24:10,880
uh so at this moment i have a transit

607
00:24:10,880 --> 00:24:13,520
relationship between the

608
00:24:13,520 --> 00:24:15,840
parent window and the iframe one can

609
00:24:15,840 --> 00:24:18,240
execute to process skipping within the

610
00:24:18,240 --> 00:24:20,559
other but i cannot really put myself in

611
00:24:20,559 --> 00:24:21,600
between

612
00:24:21,600 --> 00:24:23,679
right or can i

613
00:24:23,679 --> 00:24:26,480
uh so i decided to try to and then do

614
00:24:26,480 --> 00:24:28,720
this payment flow in a website of my own

615
00:24:28,720 --> 00:24:31,039
the idea being that after i do this i

616
00:24:31,039 --> 00:24:34,400
can try to hack my own payment to iframe

617
00:24:34,400 --> 00:24:36,400
and from that payment timeframe to to

618
00:24:36,400 --> 00:24:39,279
move towards the targeted domain and

619
00:24:39,279 --> 00:24:40,400
execute

620
00:24:40,400 --> 00:24:43,200
this so when i got this idea i was

621
00:24:43,200 --> 00:24:45,679
really proud of myself but

622
00:24:45,679 --> 00:24:50,320
yeah again putting it in practice

623
00:24:55,600 --> 00:24:58,400
so let's uh let's see we have the main

624
00:24:58,400 --> 00:25:00,799
website that that can execute or process

625
00:25:00,799 --> 00:25:02,159
scripting between

626
00:25:02,159 --> 00:25:03,679
the payment typeframe

627
00:25:03,679 --> 00:25:05,760
and again the payment iphone can execute

628
00:25:05,760 --> 00:25:08,000
to something similar within the main

629
00:25:08,000 --> 00:25:09,600
website right

630
00:25:09,600 --> 00:25:10,320
so

631
00:25:10,320 --> 00:25:12,000
i decided to implement

632
00:25:12,000 --> 00:25:14,080
my own payment timeframe and from this

633
00:25:14,080 --> 00:25:16,559
payment iframe once i get process 15 in

634
00:25:16,559 --> 00:25:19,440
that domain i would trigger the

635
00:25:19,440 --> 00:25:21,760
precise clicking in the main website

636
00:25:21,760 --> 00:25:24,159
easier said than done

637
00:25:24,159 --> 00:25:27,200
i worked for this proof of concept for

638
00:25:27,200 --> 00:25:28,880
weeks i think

639
00:25:28,880 --> 00:25:31,120
mainly because implementing a payment

640
00:25:31,120 --> 00:25:33,600
flow is not that easy

641
00:25:33,600 --> 00:25:34,480
and

642
00:25:34,480 --> 00:25:35,520
the

643
00:25:35,520 --> 00:25:37,600
proof of concept

644
00:25:37,600 --> 00:25:40,720
was on way more lines than i could to

645
00:25:40,720 --> 00:25:43,279
add within a screenshot in this

646
00:25:43,279 --> 00:25:45,039
presentation

647
00:25:45,039 --> 00:25:47,679
uh but the general idea is that this

648
00:25:47,679 --> 00:25:51,600
vulnerability was pretty well received

649
00:25:51,600 --> 00:25:54,960
one company paid me again a

650
00:25:54,960 --> 00:25:56,559
five digit

651
00:25:56,559 --> 00:25:58,080
payout for this

652
00:25:58,080 --> 00:26:00,159
and uh this is

653
00:26:00,159 --> 00:26:02,240
my biggest payout today

654
00:26:02,240 --> 00:26:04,640
for a precise scripting on arabic or for

655
00:26:04,640 --> 00:26:07,039
any other vulnerability and not only

656
00:26:07,039 --> 00:26:09,039
that this is a problem that was

657
00:26:09,039 --> 00:26:11,039
reoccurring for for a number of other

658
00:26:11,039 --> 00:26:12,640
companies um

659
00:26:12,640 --> 00:26:15,039
not in the exact same manner

660
00:26:15,039 --> 00:26:17,919
but the similar implementations were out

661
00:26:17,919 --> 00:26:19,039
there

662
00:26:19,039 --> 00:26:22,159
and multiple other smaller payouts

663
00:26:22,159 --> 00:26:24,640
followed up

664
00:26:24,640 --> 00:26:27,440
so uh this is uh this is it

665
00:26:27,440 --> 00:26:29,600
in the end i would like to

666
00:26:29,600 --> 00:26:32,400
show you a few bloopers

667
00:26:32,400 --> 00:26:33,279
that i

668
00:26:33,279 --> 00:26:34,559
received

669
00:26:34,559 --> 00:26:36,320
in the last year

670
00:26:36,320 --> 00:26:37,840
for example a dot

671
00:26:37,840 --> 00:26:39,440
duplicate

672
00:26:39,440 --> 00:26:40,799
and another one

673
00:26:40,799 --> 00:26:43,679
and another one and another one

674
00:26:43,679 --> 00:26:45,600
and another one

675
00:26:45,600 --> 00:26:47,840
and i don't know what buzz guitar does

676
00:26:47,840 --> 00:26:50,880
but he only duplicates my findings

677
00:26:50,880 --> 00:26:53,600
and in the end sometimes even microsoft

678
00:26:53,600 --> 00:26:56,000
believes that what i'm reporting are not

679
00:26:56,000 --> 00:26:57,360
real issues

680
00:26:57,360 --> 00:26:59,360
so yeah if

681
00:26:59,360 --> 00:27:01,760
you watch this so far please

682
00:27:01,760 --> 00:27:04,840
focus on finding this no matter who says

683
00:27:04,840 --> 00:27:08,480
that is not worth it even if microsoft

684
00:27:08,480 --> 00:27:10,080
says it's not worth it just do your

685
00:27:10,080 --> 00:27:12,320
thing thank you for um

686
00:27:12,320 --> 00:27:14,640
for doing this presentation fast

687
00:27:14,640 --> 00:27:16,720
there are so many things that we would

688
00:27:16,720 --> 00:27:18,559
like to to ask you

689
00:27:18,559 --> 00:27:21,039
one of them would be um

690
00:27:21,039 --> 00:27:22,799
so you're making a lot of money right

691
00:27:22,799 --> 00:27:25,039
you're you're trying to think at

692
00:27:25,039 --> 00:27:26,559
bug bounties

693
00:27:26,559 --> 00:27:29,200
um as a business and this is i think

694
00:27:29,200 --> 00:27:31,760
something we should all learn it's not

695
00:27:31,760 --> 00:27:33,679
that we just have a skill and we're

696
00:27:33,679 --> 00:27:35,440
having fun we have to make a business

697
00:27:35,440 --> 00:27:38,799
out of this and this is fantastic um

698
00:27:38,799 --> 00:27:41,200
how much time do you put into this how

699
00:27:41,200 --> 00:27:43,919
much time do you work

700
00:27:43,919 --> 00:27:46,399
well um

701
00:27:46,399 --> 00:27:48,320
i have to say last year was a pandemic

702
00:27:48,320 --> 00:27:50,240
and with all the lockdown and everything

703
00:27:50,240 --> 00:27:52,320
i had more time on my hands

704
00:27:52,320 --> 00:27:55,760
uh usually i spend a few hours

705
00:27:55,760 --> 00:27:57,840
every now and then

706
00:27:57,840 --> 00:28:00,720
for some vulnerabilities i

707
00:28:00,720 --> 00:28:03,120
uh i can find them in a few minutes if

708
00:28:03,120 --> 00:28:05,600
i'm looking in the correct spot for

709
00:28:05,600 --> 00:28:06,480
others

710
00:28:06,480 --> 00:28:08,159
as in the last one

711
00:28:08,159 --> 00:28:11,360
finding it and knowing how to exploit it

712
00:28:11,360 --> 00:28:12,640
took me days

713
00:28:12,640 --> 00:28:13,760
and

714
00:28:13,760 --> 00:28:15,760
actually doing the exploit took me more

715
00:28:15,760 --> 00:28:18,080
than one week

716
00:28:18,080 --> 00:28:20,240
again i'm doing this part time my

717
00:28:20,240 --> 00:28:23,279
personal time i have a day job and wife

718
00:28:23,279 --> 00:28:24,080
and

719
00:28:24,080 --> 00:28:26,159
school and everything so

720
00:28:26,159 --> 00:28:27,600
yeah only

721
00:28:27,600 --> 00:28:30,559
one even it's free time out there

722
00:28:30,559 --> 00:28:32,480
thank you so much daniel for being here

723
00:28:32,480 --> 00:28:35,200
with us today

