1
00:00:00,320 --> 00:00:03,120
hello and welcome back everyone i hope

2
00:00:03,120 --> 00:00:06,000
you've had a chance to take a breather

3
00:00:06,000 --> 00:00:07,839
look into the distance a bit so your

4
00:00:07,839 --> 00:00:08,880
eyes can

5
00:00:08,880 --> 00:00:11,599
give it you know give them a rest uh

6
00:00:11,599 --> 00:00:13,120
maybe wipe your eyeglasses because

7
00:00:13,120 --> 00:00:14,719
that's what i have to do like five times

8
00:00:14,719 --> 00:00:18,080
a day uh get hydrated and maybe feed the

9
00:00:18,080 --> 00:00:19,600
cat so it doesn't make a surprise

10
00:00:19,600 --> 00:00:22,240
appearance hopefully keeping my fingers

11
00:00:22,240 --> 00:00:23,119
crossed

12
00:00:23,119 --> 00:00:25,920
uh so before we kick off the rest of the

13
00:00:25,920 --> 00:00:29,279
day at dev camp 2021 day one

14
00:00:29,279 --> 00:00:31,039
i would like to remind you that the

15
00:00:31,039 --> 00:00:34,239
hacking village is on and it's packed

16
00:00:34,239 --> 00:00:36,719
with a lot of action so you can play for

17
00:00:36,719 --> 00:00:38,559
fun you can play learn but you can also

18
00:00:38,559 --> 00:00:41,280
play to win especially because the

19
00:00:41,280 --> 00:00:43,920
competitions are live until this sunday

20
00:00:43,920 --> 00:00:45,280
so there's plenty of time to get

21
00:00:45,280 --> 00:00:48,000
involved and plus the winners will walk

22
00:00:48,000 --> 00:00:50,399
away with vouchers for international

23
00:00:50,399 --> 00:00:52,719
certifications and licenses for

24
00:00:52,719 --> 00:00:55,840
professional cyber security tools so you

25
00:00:55,840 --> 00:00:57,680
will not be sorry you will definitely

26
00:00:57,680 --> 00:00:59,840
walk away with something either

27
00:00:59,840 --> 00:01:02,559
experience fun new friends or

28
00:01:02,559 --> 00:01:05,360
prizes so check that out

29
00:01:05,360 --> 00:01:09,520
so now we have an exciting presentation

30
00:01:09,520 --> 00:01:10,840
with two

31
00:01:10,840 --> 00:01:14,080
co-presenters so we have

32
00:01:14,080 --> 00:01:17,200
marek zmizlovsky which i did not

33
00:01:17,200 --> 00:01:19,200
pronounce correctly but i promise i did

34
00:01:19,200 --> 00:01:23,040
my best marek and piotr basidlo who are

35
00:01:23,040 --> 00:01:26,159
going to walk us through their supervest

36
00:01:26,159 --> 00:01:28,479
experience and talk about penetration

37
00:01:28,479 --> 00:01:31,520
testing management and the problems that

38
00:01:31,520 --> 00:01:34,560
large corporations face uh in their

39
00:01:34,560 --> 00:01:37,520
processes um in their workflows and so

40
00:01:37,520 --> 00:01:39,840
on i bet that there's a ton to learn

41
00:01:39,840 --> 00:01:41,759
from both of them so thank you for

42
00:01:41,759 --> 00:01:44,720
joining us today and i'm excited to dig

43
00:01:44,720 --> 00:01:46,159
into the details

44
00:01:46,159 --> 00:01:48,799
okay thank you very much uh once again

45
00:01:48,799 --> 00:01:50,159
my name is

46
00:01:50,159 --> 00:01:52,399
marek ms miswovsky and i have a pleasure

47
00:01:52,399 --> 00:01:53,680
to give you this

48
00:01:53,680 --> 00:01:56,479
uh presentation today with my uh

49
00:01:56,479 --> 00:01:59,119
colleague and co-worker uh people based

50
00:01:59,119 --> 00:02:01,040
on so i will be

51
00:02:01,040 --> 00:02:03,600
i will be presenting the first part of

52
00:02:03,600 --> 00:02:06,240
of this presentation uh he will present

53
00:02:06,240 --> 00:02:07,280
in the

54
00:02:07,280 --> 00:02:08,878
second part

55
00:02:08,878 --> 00:02:10,878
this presentation was also

56
00:02:10,878 --> 00:02:12,640
this presentation was created also with

57
00:02:12,640 --> 00:02:15,760
our third colleague martin zashak

58
00:02:15,760 --> 00:02:18,640
unfortunately he couldn't

59
00:02:18,640 --> 00:02:20,959
join today

60
00:02:20,959 --> 00:02:23,360
at the beginning a few words who we are

61
00:02:23,360 --> 00:02:24,879
so currently

62
00:02:24,879 --> 00:02:27,360
uh all three of us are working for

63
00:02:27,360 --> 00:02:29,440
standard chartered bank

64
00:02:29,440 --> 00:02:31,760
uh as a

65
00:02:31,760 --> 00:02:36,599
in a penetration testing team so i'm

66
00:02:36,879 --> 00:02:38,560
uh team

67
00:02:38,560 --> 00:02:42,160
and uh martin and piotr are uh pen

68
00:02:42,160 --> 00:02:45,920
testers that uh doing quite uh

69
00:02:45,920 --> 00:02:49,680
good stuff uh in our bank

70
00:02:49,680 --> 00:02:51,440
at the beginning i would like to tell

71
00:02:51,440 --> 00:02:53,519
you how this presentation was created

72
00:02:53,519 --> 00:02:55,680
what was what was the reason

73
00:02:55,680 --> 00:02:58,319
uh of of creating this this presentation

74
00:02:58,319 --> 00:03:01,280
so in 2019 standard chapter it started

75
00:03:01,280 --> 00:03:03,680
building an uh international penetration

76
00:03:03,680 --> 00:03:06,080
testing team hunter was was hired to

77
00:03:06,080 --> 00:03:07,840
create uh

78
00:03:07,840 --> 00:03:11,120
a big robust and very good penetration

79
00:03:11,120 --> 00:03:13,440
testing team that can handle

80
00:03:13,440 --> 00:03:14,959
everything that's need to be handled in

81
00:03:14,959 --> 00:03:19,360
the worldwide uh corporation right so

82
00:03:19,360 --> 00:03:21,280
now in the middle of course we are not

83
00:03:21,280 --> 00:03:25,760
in the middle but uh at the end of 2021

84
00:03:25,760 --> 00:03:28,959
we have over 30 people working in in our

85
00:03:28,959 --> 00:03:29,840
team

86
00:03:29,840 --> 00:03:31,840
are coming from different environments

87
00:03:31,840 --> 00:03:34,319
at different companies different sectors

88
00:03:34,319 --> 00:03:36,319
we have people from finance we have

89
00:03:36,319 --> 00:03:38,560
people that were working for

90
00:03:38,560 --> 00:03:40,239
consulting were people that were doing

91
00:03:40,239 --> 00:03:42,400
security in some kind of critical

92
00:03:42,400 --> 00:03:44,400
infrastructure

93
00:03:44,400 --> 00:03:46,400
we have people in poland so

94
00:03:46,400 --> 00:03:49,040
half of a team is in poland have a

95
00:03:49,040 --> 00:03:49,920
team

96
00:03:49,920 --> 00:03:51,519
in india so

97
00:03:51,519 --> 00:03:54,000
a wide range of different experience

98
00:03:54,000 --> 00:03:55,280
right and

99
00:03:55,280 --> 00:03:58,480
uh when we were working together we

100
00:03:58,480 --> 00:04:00,720
we discussed what can be done how we can

101
00:04:00,720 --> 00:04:02,799
improve some processes how it was done

102
00:04:02,799 --> 00:04:04,720
in different companies so

103
00:04:04,720 --> 00:04:06,879
uh together we summarize those different

104
00:04:06,879 --> 00:04:09,680
points of views uh issues that we

105
00:04:09,680 --> 00:04:12,400
encountered and create this presentation

106
00:04:12,400 --> 00:04:14,560
that we would like to

107
00:04:14,560 --> 00:04:15,920
share with you

108
00:04:15,920 --> 00:04:18,000
of course those opinion or everything

109
00:04:18,000 --> 00:04:18,959
that is

110
00:04:18,959 --> 00:04:21,040
expressed in this presentation are our

111
00:04:21,040 --> 00:04:23,280
own opinions and do not express the view

112
00:04:23,280 --> 00:04:24,080
of

113
00:04:24,080 --> 00:04:25,840
of our employee of

114
00:04:25,840 --> 00:04:28,000
of the bank and of course the things we

115
00:04:28,000 --> 00:04:30,080
are sharing it's not that related to our

116
00:04:30,080 --> 00:04:33,040
bank is just taken from many years of

117
00:04:33,040 --> 00:04:36,160
uh of our work

118
00:04:36,160 --> 00:04:37,759
i would like to start with the

119
00:04:37,759 --> 00:04:39,759
definition what the penetration testing

120
00:04:39,759 --> 00:04:42,560
is maybe not uh what it is but how we

121
00:04:42,560 --> 00:04:45,040
define in this presentation the the

122
00:04:45,040 --> 00:04:47,360
penetration test where it's kind of

123
00:04:47,360 --> 00:04:48,880
authorized

124
00:04:48,880 --> 00:04:51,040
systematic and in-depth evaluation

125
00:04:51,040 --> 00:04:53,199
process of testing computer systems

126
00:04:53,199 --> 00:04:54,080
right

127
00:04:54,080 --> 00:04:56,960
networks web applications

128
00:04:56,960 --> 00:04:59,360
whatever you need and any part of of

129
00:04:59,360 --> 00:05:01,840
your infrastructure to find security

130
00:05:01,840 --> 00:05:03,919
vulnerabilities right that

131
00:05:03,919 --> 00:05:07,360
external attacker or internal attacker

132
00:05:07,360 --> 00:05:09,600
can exploit and of course this process

133
00:05:09,600 --> 00:05:11,680
involves gathering information

134
00:05:11,680 --> 00:05:14,160
identify possible entries trying to

135
00:05:14,160 --> 00:05:15,600
break and

136
00:05:15,600 --> 00:05:18,479
important part of it is also

137
00:05:18,479 --> 00:05:21,199
reporting right part of penetration

138
00:05:21,199 --> 00:05:23,199
testing is create appropriate report

139
00:05:23,199 --> 00:05:24,880
that is distributed to

140
00:05:24,880 --> 00:05:27,280
two different team

141
00:05:27,280 --> 00:05:30,160
and it will be also information about uh

142
00:05:30,160 --> 00:05:32,880
it during our presentation

143
00:05:32,880 --> 00:05:35,120
okay three important

144
00:05:35,120 --> 00:05:36,960
definitions that i would like to share

145
00:05:36,960 --> 00:05:38,520
because there are some uh

146
00:05:38,520 --> 00:05:41,039
misunderstanding and uh

147
00:05:41,039 --> 00:05:44,400
i met many times that uh for people that

148
00:05:44,400 --> 00:05:45,759
are maybe not

149
00:05:45,759 --> 00:05:48,560
much technical or not much in the

150
00:05:48,560 --> 00:05:51,520
security environment some of them they

151
00:05:51,520 --> 00:05:54,240
think they are the same but they are not

152
00:05:54,240 --> 00:05:56,800
so first definition is a bug right back

153
00:05:56,800 --> 00:05:59,520
it's a it's an error flow of fault in a

154
00:05:59,520 --> 00:06:01,840
computer program system

155
00:06:01,840 --> 00:06:04,720
uh that cause some kind of unexpected

156
00:06:04,720 --> 00:06:08,400
behavior right unexpected unintended way

157
00:06:08,400 --> 00:06:10,800
right the the issue normally is located

158
00:06:10,800 --> 00:06:13,520
this issue the back is located either in

159
00:06:13,520 --> 00:06:14,880
source code

160
00:06:14,880 --> 00:06:17,120
or in some kind of configuration

161
00:06:17,120 --> 00:06:19,199
service configuration infrastructure

162
00:06:19,199 --> 00:06:20,960
configuration

163
00:06:20,960 --> 00:06:23,600
and the components configuration

164
00:06:23,600 --> 00:06:26,160
the vulnerability however is a weakness

165
00:06:26,160 --> 00:06:28,319
that can be exploited by an attacker

166
00:06:28,319 --> 00:06:30,479
right to get

167
00:06:30,479 --> 00:06:32,720
some privileges

168
00:06:32,720 --> 00:06:35,440
in the computer system right

169
00:06:35,440 --> 00:06:37,680
so uh if the attacker wants to exploit

170
00:06:37,680 --> 00:06:39,280
this vulnerability

171
00:06:39,280 --> 00:06:41,440
there must be a tool or technique that

172
00:06:41,440 --> 00:06:43,840
allows him to connect to the to the weak

173
00:06:43,840 --> 00:06:45,039
system

174
00:06:45,039 --> 00:06:46,960
the third definition i would like to

175
00:06:46,960 --> 00:06:49,520
present is defining we define a finding

176
00:06:49,520 --> 00:06:51,759
as a description of vulnerability in the

177
00:06:51,759 --> 00:06:54,479
report right

178
00:06:55,680 --> 00:06:56,960
difference between back and

179
00:06:56,960 --> 00:06:59,759
vulnerability this is the

180
00:06:59,759 --> 00:07:02,319
the situation when there is uh the most

181
00:07:02,319 --> 00:07:05,440
differences with the understand right so

182
00:07:05,440 --> 00:07:07,039
on this picture we have a we have an

183
00:07:07,039 --> 00:07:08,960
attacker right and as you can see

184
00:07:08,960 --> 00:07:10,639
attacker is

185
00:07:10,639 --> 00:07:11,599
on his

186
00:07:11,599 --> 00:07:14,400
laptop on his system sees an application

187
00:07:14,400 --> 00:07:15,280
and

188
00:07:15,280 --> 00:07:18,000
finding a vulnerability right

189
00:07:18,000 --> 00:07:21,520
this vulnerability is located somehow

190
00:07:21,520 --> 00:07:24,880
in the code in the system whatever right

191
00:07:24,880 --> 00:07:28,400
but what is important uh the attacker

192
00:07:28,400 --> 00:07:30,880
the pen tester doesn't find a bug

193
00:07:30,880 --> 00:07:33,280
he finds vulnerability vulnerability is

194
00:07:33,280 --> 00:07:35,120
caused by the back sometimes

195
00:07:35,120 --> 00:07:37,599
vulnerability goes too straightforward

196
00:07:37,599 --> 00:07:39,199
to to a back

197
00:07:39,199 --> 00:07:41,199
but it is not always

198
00:07:41,199 --> 00:07:43,039
the same right

199
00:07:43,039 --> 00:07:45,840
we will see why uh why this definition

200
00:07:45,840 --> 00:07:47,360
is important

201
00:07:47,360 --> 00:07:50,560
uh for us later

202
00:07:51,120 --> 00:07:52,319
okay what is the goal of this

203
00:07:52,319 --> 00:07:54,479
presentation well we we

204
00:07:54,479 --> 00:07:57,039
don't we would like to tell you about

205
00:07:57,039 --> 00:07:58,800
everything that is around the

206
00:07:58,800 --> 00:08:00,639
penetration testing in large corporation

207
00:08:00,639 --> 00:08:02,560
we will not talking about the technical

208
00:08:02,560 --> 00:08:05,039
details of penetration itself there's

209
00:08:05,039 --> 00:08:06,720
like hundreds of presentation different

210
00:08:06,720 --> 00:08:08,720
methodologies and everything we would

211
00:08:08,720 --> 00:08:10,560
like to show you how it looks like when

212
00:08:10,560 --> 00:08:12,960
you do not perform one pen test

213
00:08:12,960 --> 00:08:16,000
but when you perform 30 pence per month

214
00:08:16,000 --> 00:08:19,199
40 per month for one one organization

215
00:08:19,199 --> 00:08:20,879
right it's it's completely different

216
00:08:20,879 --> 00:08:22,560
when you have a

217
00:08:22,560 --> 00:08:25,199
consulting company that that you are

218
00:08:25,199 --> 00:08:27,039
performing of course you can still

219
00:08:27,039 --> 00:08:30,560
perform 20 30 40 uh penetration testing

220
00:08:30,560 --> 00:08:32,958
per per month but they are like spread

221
00:08:32,958 --> 00:08:35,279
to different customers they are having

222
00:08:35,279 --> 00:08:36,159
here

223
00:08:36,159 --> 00:08:38,399
we have a one company

224
00:08:38,399 --> 00:08:41,279
and uh we need to handle everything that

225
00:08:41,279 --> 00:08:43,599
is around this penetration test index

226
00:08:43,599 --> 00:08:47,200
bring us a lot of issues problems

227
00:08:47,200 --> 00:08:50,240
uh that would like to share and uh so we

228
00:08:50,240 --> 00:08:52,399
can you you can you can see maybe

229
00:08:52,399 --> 00:08:55,440
clearly or identify in your in your

230
00:08:55,440 --> 00:08:56,959
company

231
00:08:56,959 --> 00:08:58,240
okay

232
00:08:58,240 --> 00:08:59,760
for this presentation i would like to

233
00:08:59,760 --> 00:09:00,959
also

234
00:09:00,959 --> 00:09:02,880
give these two definitions

235
00:09:02,880 --> 00:09:05,120
application a scope

236
00:09:05,120 --> 00:09:07,200
as application i understand in this

237
00:09:07,200 --> 00:09:10,240
presentation is understood as a smallest

238
00:09:10,240 --> 00:09:12,080
undivided part

239
00:09:12,080 --> 00:09:15,200
like a module component we call it an

240
00:09:15,200 --> 00:09:17,360
application right

241
00:09:17,360 --> 00:09:18,480
a single

242
00:09:18,480 --> 00:09:20,560
url doesn't mean that it's a

243
00:09:20,560 --> 00:09:22,800
single application right which is uh

244
00:09:22,800 --> 00:09:24,560
happens very often

245
00:09:24,560 --> 00:09:26,000
and the scope

246
00:09:26,000 --> 00:09:28,880
is definition what will be tested right

247
00:09:28,880 --> 00:09:30,800
sometimes the scope contains few

248
00:09:30,800 --> 00:09:33,279
applications and sometimes the scope may

249
00:09:33,279 --> 00:09:34,399
uh

250
00:09:34,399 --> 00:09:36,800
contain only part of the application

251
00:09:36,800 --> 00:09:38,880
this is also important to understand

252
00:09:38,880 --> 00:09:41,760
what we are testing

253
00:09:41,760 --> 00:09:44,399
uh let's have an example we have a

254
00:09:44,399 --> 00:09:48,640
example domain called www.domain.com

255
00:09:48,640 --> 00:09:49,680
right

256
00:09:49,680 --> 00:09:52,399
it often happens even i have this in my

257
00:09:52,399 --> 00:09:54,240
private bank right we're going to the

258
00:09:54,240 --> 00:09:55,920
main web page on the

259
00:09:55,920 --> 00:09:59,200
on your bank uh when there is a multiple

260
00:09:59,200 --> 00:10:01,600
forms information right so this is one

261
00:10:01,600 --> 00:10:02,959
application

262
00:10:02,959 --> 00:10:06,160
then we have a part sub url going to

263
00:10:06,160 --> 00:10:08,399
your your account your private account

264
00:10:08,399 --> 00:10:11,680
which i call it here retail and also

265
00:10:11,680 --> 00:10:14,480
often happens uh there is some kind of

266
00:10:14,480 --> 00:10:17,440
sub url to corporate bank which is

267
00:10:17,440 --> 00:10:19,760
slightly slightly different right so as

268
00:10:19,760 --> 00:10:22,240
you can see on the pictures we have one

269
00:10:22,240 --> 00:10:23,440
scope

270
00:10:23,440 --> 00:10:24,320
but

271
00:10:24,320 --> 00:10:26,880
three different

272
00:10:26,880 --> 00:10:29,600
applications

273
00:10:31,200 --> 00:10:32,720
uh another

274
00:10:32,720 --> 00:10:34,800
term that i would like to present is

275
00:10:34,800 --> 00:10:36,800
something called uh

276
00:10:36,800 --> 00:10:39,040
completeness

277
00:10:39,040 --> 00:10:41,760
right i would like to present the the

278
00:10:41,760 --> 00:10:43,920
completeness for the for the penetration

279
00:10:43,920 --> 00:10:45,680
testing it's a

280
00:10:45,680 --> 00:10:49,440
theoretical term but it's important uh

281
00:10:49,440 --> 00:10:52,240
to understand what kind of penetration

282
00:10:52,240 --> 00:10:54,560
testing you are you are performing and

283
00:10:54,560 --> 00:10:56,800
the management level of the engineering

284
00:10:56,800 --> 00:10:59,360
level must understand

285
00:10:59,360 --> 00:11:00,880
what

286
00:11:00,880 --> 00:11:02,240
implication

287
00:11:02,240 --> 00:11:03,920
this brings to the future i will of

288
00:11:03,920 --> 00:11:04,959
course

289
00:11:04,959 --> 00:11:07,680
show you later so penetration

290
00:11:07,680 --> 00:11:10,560
testing can be done as a completed

291
00:11:10,560 --> 00:11:12,560
complete with application coverage

292
00:11:12,560 --> 00:11:15,760
complete with the vulnerability coverage

293
00:11:15,760 --> 00:11:19,200
or in general not complete

294
00:11:19,200 --> 00:11:21,040
so let's start when the penetration

295
00:11:21,040 --> 00:11:22,800
testing is complete

296
00:11:22,800 --> 00:11:25,200
in my opinion it's almost impossible to

297
00:11:25,200 --> 00:11:26,959
to perform because this means that we

298
00:11:26,959 --> 00:11:29,200
test every single

299
00:11:29,200 --> 00:11:30,079
uh

300
00:11:30,079 --> 00:11:32,000
place every single part of the

301
00:11:32,000 --> 00:11:34,000
applications against every single

302
00:11:34,000 --> 00:11:37,120
possible vulnerability right so from

303
00:11:37,120 --> 00:11:39,279
from technical point of view and the

304
00:11:39,279 --> 00:11:41,200
time constraints it's like

305
00:11:41,200 --> 00:11:44,399
it's impossible to make this kind of uh

306
00:11:44,399 --> 00:11:46,000
penetration test

307
00:11:46,000 --> 00:11:47,120
however

308
00:11:47,120 --> 00:11:50,480
this type of testing have few advantages

309
00:11:50,480 --> 00:11:53,440
one of it is that every new penetration

310
00:11:53,440 --> 00:11:55,839
testing every new report that you have

311
00:11:55,839 --> 00:11:57,920
close the old vulnerabilities right if

312
00:11:57,920 --> 00:12:00,240
you have in your company vulnerability

313
00:12:00,240 --> 00:12:01,600
management

314
00:12:01,600 --> 00:12:03,519
for applications and you have some old

315
00:12:03,519 --> 00:12:05,600
vulnerabilities that were found a year

316
00:12:05,600 --> 00:12:07,360
ago a half year ago in the previous

317
00:12:07,360 --> 00:12:09,680
contest so when you assume that your

318
00:12:09,680 --> 00:12:12,079
penetration testing is completed

319
00:12:12,079 --> 00:12:14,079
it close the all vulnerabilities right

320
00:12:14,079 --> 00:12:16,000
if they are not in the report

321
00:12:16,000 --> 00:12:17,680
it means they uh

322
00:12:17,680 --> 00:12:19,519
they are closed

323
00:12:19,519 --> 00:12:21,519
the other important advantage of this is

324
00:12:21,519 --> 00:12:22,639
that

325
00:12:22,639 --> 00:12:23,600
if you

326
00:12:23,600 --> 00:12:26,000
pentest if your pentax is complete for

327
00:12:26,000 --> 00:12:29,200
the whole scope as we've seen uh

328
00:12:29,200 --> 00:12:31,680
on the previous slide it's also

329
00:12:31,680 --> 00:12:34,079
completed for a domain for a retail and

330
00:12:34,079 --> 00:12:38,279
for a corporation right

331
00:12:38,639 --> 00:12:40,800
when the penetration testing is

332
00:12:40,800 --> 00:12:43,279
complete with application coverage in

333
00:12:43,279 --> 00:12:46,160
this situation we we assume that

334
00:12:46,160 --> 00:12:48,560
all parts of the application were

335
00:12:48,560 --> 00:12:52,320
enumerated somehow and tested of course

336
00:12:52,320 --> 00:12:55,839
different part of the applications were

337
00:12:55,839 --> 00:12:58,480
test against different vulnerabilities

338
00:12:58,480 --> 00:13:00,959
it's it's difficult to achieve because

339
00:13:00,959 --> 00:13:03,040
not always pentester has a full

340
00:13:03,040 --> 00:13:05,680
knowledge how the application looks like

341
00:13:05,680 --> 00:13:08,399
not every time we have access to every

342
00:13:08,399 --> 00:13:11,040
functionality we sometimes we do not

343
00:13:11,040 --> 00:13:12,480
have access to

344
00:13:12,480 --> 00:13:14,880
a documentation so we we don't know what

345
00:13:14,880 --> 00:13:17,920
should be there else what else can be

346
00:13:17,920 --> 00:13:21,040
uh can be found there so that's why

347
00:13:21,040 --> 00:13:24,560
it's not every time uh possible to uh to

348
00:13:24,560 --> 00:13:26,880
achieve

349
00:13:27,200 --> 00:13:29,680
complete with the vulnerability uh

350
00:13:29,680 --> 00:13:31,519
coverage so we assume that the

351
00:13:31,519 --> 00:13:34,480
application was tested against all the

352
00:13:34,480 --> 00:13:35,839
possible

353
00:13:35,839 --> 00:13:38,320
vulnerabilities i have seen many times

354
00:13:38,320 --> 00:13:41,360
the reports that we tested against all

355
00:13:41,360 --> 00:13:42,800
aspects of them

356
00:13:42,800 --> 00:13:45,920
we tested against

357
00:13:45,920 --> 00:13:47,680
some kind of other checklist some kind

358
00:13:47,680 --> 00:13:50,320
of other methodologies right so

359
00:13:50,320 --> 00:13:53,440
if you create or you have uh some kind

360
00:13:53,440 --> 00:13:55,839
of methodology or

361
00:13:55,839 --> 00:13:58,480
guideline right it's easy to say okay we

362
00:13:58,480 --> 00:14:03,519
tested against everything that was uh

363
00:14:03,519 --> 00:14:06,000
was in this uh in this guideline the

364
00:14:06,000 --> 00:14:08,399
problem here is that first of all it

365
00:14:08,399 --> 00:14:10,480
depends on the tester knowledge and

366
00:14:10,480 --> 00:14:12,320
experience right there are some part of

367
00:14:12,320 --> 00:14:14,639
application that testing i don't know

368
00:14:14,639 --> 00:14:17,839
for example against sql injection are

369
00:14:17,839 --> 00:14:20,160
pointless right there will be no sql

370
00:14:20,160 --> 00:14:22,320
injection in that part

371
00:14:22,320 --> 00:14:24,560
uh because there is no relation to any

372
00:14:24,560 --> 00:14:26,560
database right sometimes it's pointless

373
00:14:26,560 --> 00:14:28,399
to test against xss so everything

374
00:14:28,399 --> 00:14:29,600
depends

375
00:14:29,600 --> 00:14:31,519
on the knowledge and the experience of

376
00:14:31,519 --> 00:14:32,560
the

377
00:14:32,560 --> 00:14:35,120
of the pen tester and how he behaves

378
00:14:35,120 --> 00:14:37,120
where he is looking for

379
00:14:37,120 --> 00:14:40,800
uh for vulnerabilities

380
00:14:41,440 --> 00:14:43,839
the last part that in in my opinion is

381
00:14:43,839 --> 00:14:45,760
the closest to the reality is just not

382
00:14:45,760 --> 00:14:46,959
completed

383
00:14:46,959 --> 00:14:48,399
right that's

384
00:14:48,399 --> 00:14:50,639
that's how the most of the panthers are

385
00:14:50,639 --> 00:14:52,800
performed right so we have some kind of

386
00:14:52,800 --> 00:14:55,120
common practice that we test

387
00:14:55,120 --> 00:14:56,880
against the most promising

388
00:14:56,880 --> 00:14:58,639
vulnerabilities right

389
00:14:58,639 --> 00:15:01,680
we are trying to test the most promising

390
00:15:01,680 --> 00:15:04,160
part of of uh of the application

391
00:15:04,160 --> 00:15:06,639
sometimes the applications are very huge

392
00:15:06,639 --> 00:15:09,360
and we know uh we don't have enough time

393
00:15:09,360 --> 00:15:12,399
right so we are testing those parts that

394
00:15:12,399 --> 00:15:14,720
can be interesting right where there are

395
00:15:14,720 --> 00:15:17,279
some kind of forms when there is uh some

396
00:15:17,279 --> 00:15:19,920
kind of calls to uh database when

397
00:15:19,920 --> 00:15:21,600
there's like uploading file

398
00:15:21,600 --> 00:15:23,839
functionality

399
00:15:23,839 --> 00:15:26,480
right so everything uh depends how the

400
00:15:26,480 --> 00:15:30,000
application is built and of course uh

401
00:15:30,000 --> 00:15:31,759
it depends on the

402
00:15:31,759 --> 00:15:34,560
on the pen tester

403
00:15:34,560 --> 00:15:38,320
the other problem here is that

404
00:15:38,320 --> 00:15:40,399
we cannot say as with the completed that

405
00:15:40,399 --> 00:15:43,519
and all vulnerabilities still exist or

406
00:15:43,519 --> 00:15:45,279
not right if we do not have the

407
00:15:45,279 --> 00:15:47,920
knowledge about the old vulnerability

408
00:15:47,920 --> 00:15:49,839
based on this kind of pandas we cannot

409
00:15:49,839 --> 00:15:52,480
say that if we're close or not well if

410
00:15:52,480 --> 00:15:55,040
if we find it then then we confirm that

411
00:15:55,040 --> 00:15:56,480
they still exist

412
00:15:56,480 --> 00:15:58,720
but if we do not find it we don't know

413
00:15:58,720 --> 00:16:00,079
what uh

414
00:16:00,079 --> 00:16:02,638
what happened

415
00:16:04,560 --> 00:16:07,680
advantages and disadvantages of

416
00:16:07,680 --> 00:16:09,440
this kind of approach

417
00:16:09,440 --> 00:16:12,160
if we move more into the

418
00:16:12,160 --> 00:16:14,320
application coverage right

419
00:16:14,320 --> 00:16:16,800
so it covers wider area of the

420
00:16:16,800 --> 00:16:19,360
application and help find the bugs

421
00:16:19,360 --> 00:16:20,639
across the

422
00:16:20,639 --> 00:16:23,839
the whole scope it is easier for the

423
00:16:23,839 --> 00:16:25,199
engineering team

424
00:16:25,199 --> 00:16:27,199
right if we are reporting this kind of

425
00:16:27,199 --> 00:16:30,000
stuff so they they know the exact places

426
00:16:30,000 --> 00:16:31,600
uh

427
00:16:31,600 --> 00:16:34,000
when the vulnerabilities are found so it

428
00:16:34,000 --> 00:16:35,440
helps them to

429
00:16:35,440 --> 00:16:37,759
to fix it

430
00:16:37,759 --> 00:16:39,920
and of course if we uh detect the

431
00:16:39,920 --> 00:16:42,240
vulnerability in many places it's also

432
00:16:42,240 --> 00:16:44,079
easier to

433
00:16:44,079 --> 00:16:46,639
to distribute those vulnerabilities uh

434
00:16:46,639 --> 00:16:48,639
to our responsible teams i will show you

435
00:16:48,639 --> 00:16:50,959
on example

436
00:16:50,959 --> 00:16:54,959
exactly how does it works a little later

437
00:16:54,959 --> 00:16:56,880
what are the the problems here where

438
00:16:56,880 --> 00:16:58,880
some high impact vulnerabilities can be

439
00:16:58,880 --> 00:17:01,279
missed right we are focusing here on

440
00:17:01,279 --> 00:17:03,199
covering the application then looking

441
00:17:03,199 --> 00:17:04,400
something

442
00:17:04,400 --> 00:17:05,439
uh

443
00:17:05,439 --> 00:17:07,599
that is interesting and as i mentioned

444
00:17:07,599 --> 00:17:09,520
it's very difficult to achieve if you

445
00:17:09,520 --> 00:17:12,400
don't have any relay the documentation

446
00:17:12,400 --> 00:17:14,959
or any information how the application

447
00:17:14,959 --> 00:17:16,720
is built and what should be uh what

448
00:17:16,720 --> 00:17:18,400
should be there

449
00:17:18,400 --> 00:17:20,720
if you are if we are moving more into

450
00:17:20,720 --> 00:17:23,039
vulnerability coverage of course we have

451
00:17:23,039 --> 00:17:26,079
a different type of vulnerabilities

452
00:17:26,079 --> 00:17:27,679
covered and of course

453
00:17:27,679 --> 00:17:29,520
it saves time

454
00:17:29,520 --> 00:17:31,360
right so

455
00:17:31,360 --> 00:17:33,840
in my previous jobs when i was a band

456
00:17:33,840 --> 00:17:35,120
tester

457
00:17:35,120 --> 00:17:37,039
what we are doing we are just finding

458
00:17:37,039 --> 00:17:38,240
one uh

459
00:17:38,240 --> 00:17:40,240
vulnerability of each type so for

460
00:17:40,240 --> 00:17:43,520
example if you find reflected xss

461
00:17:43,520 --> 00:17:45,840
we were stopped focusing on the

462
00:17:45,840 --> 00:17:47,919
reflected xss and trying to look

463
00:17:47,919 --> 00:17:49,840
different type of the

464
00:17:49,840 --> 00:17:51,919
of the bug right so

465
00:17:51,919 --> 00:17:53,840
trying to find the highest possible

466
00:17:53,840 --> 00:17:56,160
range of the vulnerabilities the problem

467
00:17:56,160 --> 00:17:58,720
is that uh the engineering

468
00:17:58,720 --> 00:18:01,039
or the engineers i tend to fix only

469
00:18:01,039 --> 00:18:03,280
dimension and vulnerabilities right so

470
00:18:03,280 --> 00:18:05,120
if you report it i've seen this many

471
00:18:05,120 --> 00:18:08,320
times if you reported for example xss

472
00:18:08,320 --> 00:18:12,080
and the xss is caused by

473
00:18:12,080 --> 00:18:14,000
input that is not sanitized they're not

474
00:18:14,000 --> 00:18:15,360
trying to

475
00:18:15,360 --> 00:18:18,320
to make this sanitization correct

476
00:18:18,320 --> 00:18:21,039
they try to fix what i uh what i

477
00:18:21,039 --> 00:18:23,360
mentioned and uh in my life i had a

478
00:18:23,360 --> 00:18:25,200
situation when i showed them there is a

479
00:18:25,200 --> 00:18:26,640
unique success

480
00:18:26,640 --> 00:18:28,960
because you can just run script alert

481
00:18:28,960 --> 00:18:30,320
right so what they did they were

482
00:18:30,320 --> 00:18:32,640
filtering word alert so i

483
00:18:32,640 --> 00:18:35,280
next round i said well you can

484
00:18:35,280 --> 00:18:38,240
do script prompt right so they filtered

485
00:18:38,240 --> 00:18:40,640
script so i said okay so you can do

486
00:18:40,640 --> 00:18:42,960
image with error

487
00:18:42,960 --> 00:18:46,320
so they filter error etc etc right so

488
00:18:46,320 --> 00:18:49,039
this happens uh often that engineering

489
00:18:49,039 --> 00:18:50,160
team is trying to fix the

490
00:18:50,160 --> 00:18:52,080
vulnerabilities or even the attack

491
00:18:52,080 --> 00:18:54,640
vectors presented in the report and not

492
00:18:54,640 --> 00:18:57,600
true problem

493
00:18:57,600 --> 00:18:59,520
the other also the other problem is if

494
00:18:59,520 --> 00:19:01,919
the the scope or inside the scope there

495
00:19:01,919 --> 00:19:04,240
are a few applications managed by uh by

496
00:19:04,240 --> 00:19:06,160
different engineering team and then

497
00:19:06,160 --> 00:19:08,240
there is a problem with distributing who

498
00:19:08,240 --> 00:19:09,679
should fix

499
00:19:09,679 --> 00:19:11,840
what

500
00:19:13,840 --> 00:19:16,080
also the type of the

501
00:19:16,080 --> 00:19:17,760
penetration testing

502
00:19:17,760 --> 00:19:20,559
influence the completeness right

503
00:19:20,559 --> 00:19:22,559
it's completely different when we have a

504
00:19:22,559 --> 00:19:24,320
black boxing and completely different

505
00:19:24,320 --> 00:19:26,320
when we have a

506
00:19:26,320 --> 00:19:28,720
white box man test

507
00:19:28,720 --> 00:19:31,280
i've i don't remember if i ever have

508
00:19:31,280 --> 00:19:34,080
true on white box penetration testing at

509
00:19:34,080 --> 00:19:35,760
this time of

510
00:19:35,760 --> 00:19:39,440
testing is very time consuming

511
00:19:39,440 --> 00:19:41,919
some people may not agree

512
00:19:41,919 --> 00:19:43,600
there is also as i mentioned many times

513
00:19:43,600 --> 00:19:45,440
hidden parameters

514
00:19:45,440 --> 00:19:47,679
hidden end points hidden functionality

515
00:19:47,679 --> 00:19:50,160
and sometimes it happened that

516
00:19:50,160 --> 00:19:52,240
even the functionality is uh is

517
00:19:52,240 --> 00:19:53,360
available

518
00:19:53,360 --> 00:19:56,640
right so uh for example you have a

519
00:19:56,640 --> 00:19:59,919
bank right you have internet bank and

520
00:19:59,919 --> 00:20:01,919
you have some operations you can perform

521
00:20:01,919 --> 00:20:03,760
on different credit cards right if you

522
00:20:03,760 --> 00:20:05,760
don't have a data for a credit card the

523
00:20:05,760 --> 00:20:07,440
functionality is there

524
00:20:07,440 --> 00:20:08,960
but you cannot use it because you don't

525
00:20:08,960 --> 00:20:09,919
have

526
00:20:09,919 --> 00:20:13,120
enough data right so this is also

527
00:20:13,120 --> 00:20:15,039
uh influence your

528
00:20:15,039 --> 00:20:18,080
your penetration test

529
00:20:18,240 --> 00:20:21,039
okay let's uh let's move a little bit

530
00:20:21,039 --> 00:20:23,760
into the uh the example that i i would

531
00:20:23,760 --> 00:20:26,159
like to show you and explain how does it

532
00:20:26,159 --> 00:20:26,960
work

533
00:20:26,960 --> 00:20:29,120
at the same we have we already discussed

534
00:20:29,120 --> 00:20:32,000
that we have a domain.com retail

535
00:20:32,000 --> 00:20:33,120
corp

536
00:20:33,120 --> 00:20:34,960
okay so

537
00:20:34,960 --> 00:20:37,039
we received the so the pentester create

538
00:20:37,039 --> 00:20:39,280
a report inside the report there is one

539
00:20:39,280 --> 00:20:42,640
vulnerability xss this vulnerability

540
00:20:42,640 --> 00:20:46,480
this is xss is present against the

541
00:20:46,480 --> 00:20:48,840
web page retail slash

542
00:20:48,840 --> 00:20:52,400
details.html they exercise in inside

543
00:20:52,400 --> 00:20:54,480
program one right

544
00:20:54,480 --> 00:20:55,840
and you receive the report and the

545
00:20:55,840 --> 00:20:58,880
question is okay so what is the relation

546
00:20:58,880 --> 00:21:01,600
with the with the corp application right

547
00:21:01,600 --> 00:21:04,000
it also has the same web page details

548
00:21:04,000 --> 00:21:06,720
that may behave exactly the same but

549
00:21:06,720 --> 00:21:08,640
it's not in the report so what is the

550
00:21:08,640 --> 00:21:09,840
relation

551
00:21:09,840 --> 00:21:11,039
right well

552
00:21:11,039 --> 00:21:13,440
that depends how you define the the

553
00:21:13,440 --> 00:21:15,120
completeness of the

554
00:21:15,120 --> 00:21:18,080
uh of the report of the penetration test

555
00:21:18,080 --> 00:21:20,480
if you define it as a complete

556
00:21:20,480 --> 00:21:22,640
the link is safe right everything that

557
00:21:22,640 --> 00:21:24,480
is vulnerable should be in the report if

558
00:21:24,480 --> 00:21:26,159
it's not in the report

559
00:21:26,159 --> 00:21:28,400
there is no vulnerability right if you

560
00:21:28,400 --> 00:21:31,200
assume that you your penetration testing

561
00:21:31,200 --> 00:21:33,039
is complete in the application coverage

562
00:21:33,039 --> 00:21:34,799
it's undefined

563
00:21:34,799 --> 00:21:36,960
right we know that that link was tested

564
00:21:36,960 --> 00:21:39,760
somehow but it may not be tested against

565
00:21:39,760 --> 00:21:42,720
xss right

566
00:21:42,960 --> 00:21:46,240
uh if we uh state that the report was

567
00:21:46,240 --> 00:21:47,120
that the

568
00:21:47,120 --> 00:21:48,720
pentax was a complete in the

569
00:21:48,720 --> 00:21:50,720
vulnerability coverage it's exactly the

570
00:21:50,720 --> 00:21:53,440
same we test it against the xss but in

571
00:21:53,440 --> 00:21:56,000
completely different area right so we

572
00:21:56,000 --> 00:21:57,600
don't know

573
00:21:57,600 --> 00:21:58,480
uh

574
00:21:58,480 --> 00:22:00,559
what is the problem with the with the

575
00:22:00,559 --> 00:22:01,600
corporal

576
00:22:01,600 --> 00:22:03,200
slash details of

577
00:22:03,200 --> 00:22:05,679
html if it's not completed and

578
00:22:05,679 --> 00:22:08,480
completely undefined we cannot say

579
00:22:08,480 --> 00:22:10,640
anything about

580
00:22:10,640 --> 00:22:13,840
about the second link right

581
00:22:16,559 --> 00:22:19,360
that's why um summarizing this this this

582
00:22:19,360 --> 00:22:21,200
completeness uh

583
00:22:21,200 --> 00:22:23,760
you may not uh

584
00:22:23,760 --> 00:22:26,720
meet with this kind of problems with the

585
00:22:26,720 --> 00:22:27,919
smaller

586
00:22:27,919 --> 00:22:30,159
companies or when you are consulting

587
00:22:30,159 --> 00:22:32,320
right in our companies when we have

588
00:22:32,320 --> 00:22:34,000
sometimes very large

589
00:22:34,000 --> 00:22:35,840
applications that are combined with

590
00:22:35,840 --> 00:22:38,720
different modules when the

591
00:22:38,720 --> 00:22:40,720
different engineering teams are

592
00:22:40,720 --> 00:22:43,039
responsible for for those models it's

593
00:22:43,039 --> 00:22:45,520
it's very important to understand

594
00:22:45,520 --> 00:22:46,880
uh what are the

595
00:22:46,880 --> 00:22:49,360
implications right because uh

596
00:22:49,360 --> 00:22:51,760
okay let's assume um

597
00:22:51,760 --> 00:22:54,000
let's assume that we have found this xss

598
00:22:54,000 --> 00:22:56,559
in retail and we send it to the retail

599
00:22:56,559 --> 00:22:57,840
uh

600
00:22:57,840 --> 00:22:59,760
team and we send it to the corporate

601
00:22:59,760 --> 00:23:02,400
team and the corporate team say okay

602
00:23:02,400 --> 00:23:04,799
there is no problem here nor core nor

603
00:23:04,799 --> 00:23:06,720
corporal mentioned we don't have a

604
00:23:06,720 --> 00:23:09,679
problem well you might do have like just

605
00:23:09,679 --> 00:23:11,200
check it right we show it that it's

606
00:23:11,200 --> 00:23:13,120
possible check in the same place but

607
00:23:13,120 --> 00:23:14,240
they may say

608
00:23:14,240 --> 00:23:16,559
no no in the report

609
00:23:16,559 --> 00:23:18,400
i'm not fixing anything right that's

610
00:23:18,400 --> 00:23:21,760
that's why it is important to understand

611
00:23:21,760 --> 00:23:24,080
the relations where we are how the

612
00:23:24,080 --> 00:23:26,240
penetration

613
00:23:26,240 --> 00:23:29,200
looks right

614
00:23:29,620 --> 00:23:31,760
[Music]

615
00:23:31,760 --> 00:23:33,200
i would like to switch

616
00:23:33,200 --> 00:23:35,919
the topic right now a little bit to uh

617
00:23:35,919 --> 00:23:38,159
sharing previous reports right this is

618
00:23:38,159 --> 00:23:40,720
in the context of like if we fix the old

619
00:23:40,720 --> 00:23:43,919
the previous vulnerability or uh

620
00:23:43,919 --> 00:23:45,360
if we don't fix the the previous

621
00:23:45,360 --> 00:23:48,159
vulnerability i have only one slide with

622
00:23:48,159 --> 00:23:49,039
uh

623
00:23:49,039 --> 00:23:51,200
just the questions right but these are

624
00:23:51,200 --> 00:23:53,120
the questions that

625
00:23:53,120 --> 00:23:55,679
uh you need to answer right we we also

626
00:23:55,679 --> 00:23:57,919
in our uh companies we needed to answer

627
00:23:57,919 --> 00:23:59,919
those those questions

628
00:23:59,919 --> 00:24:02,000
and everyone needs to define how how

629
00:24:02,000 --> 00:24:04,400
does it work right

630
00:24:04,400 --> 00:24:06,320
so the question is should the previous

631
00:24:06,320 --> 00:24:09,440
report be share be shared with the

632
00:24:09,440 --> 00:24:10,240
uh

633
00:24:10,240 --> 00:24:12,159
with the current pen tester

634
00:24:12,159 --> 00:24:15,120
oh sorry with current manchester is was

635
00:24:15,120 --> 00:24:16,960
wrong in english i think with the with

636
00:24:16,960 --> 00:24:19,120
the pentester that is currently perform

637
00:24:19,120 --> 00:24:21,120
uh the penetration test right the

638
00:24:21,120 --> 00:24:23,440
advantages is that he can quickly

639
00:24:23,440 --> 00:24:25,919
identify uh if the previous

640
00:24:25,919 --> 00:24:28,000
vulnerabilities uh

641
00:24:28,000 --> 00:24:29,200
i'll still

642
00:24:29,200 --> 00:24:32,159
i'll still exist or not if you have this

643
00:24:32,159 --> 00:24:33,760
this report if he doesn't have this

644
00:24:33,760 --> 00:24:36,640
report the question is if the new report

645
00:24:36,640 --> 00:24:38,080
can fix the uh

646
00:24:38,080 --> 00:24:39,600
the vulnerabilities in the previous

647
00:24:39,600 --> 00:24:41,440
report right

648
00:24:41,440 --> 00:24:43,840
and what if he found a

649
00:24:43,840 --> 00:24:46,400
different vulnerability in the uh in the

650
00:24:46,400 --> 00:24:48,880
place that was not mentioned before

651
00:24:48,880 --> 00:24:51,840
right or what if if he found more that

652
00:24:51,840 --> 00:24:54,320
was not previously or what if he found

653
00:24:54,320 --> 00:24:55,679
less

654
00:24:55,679 --> 00:24:57,520
than the previously but not all were

655
00:24:57,520 --> 00:24:59,760
fixed right these are these are the the

656
00:24:59,760 --> 00:25:02,960
questions that uh it's very important to

657
00:25:02,960 --> 00:25:04,720
to answer to yourself

658
00:25:04,720 --> 00:25:07,520
and decide if you would like to share

659
00:25:07,520 --> 00:25:10,720
the previous penetration testing report

660
00:25:10,720 --> 00:25:14,039
or not

661
00:25:14,080 --> 00:25:16,240
multiple security controls here is the

662
00:25:16,240 --> 00:25:18,080
uh the time and the place when i would

663
00:25:18,080 --> 00:25:21,440
like to uh give my voice to my colleague

664
00:25:21,440 --> 00:25:23,200
uh piotr

665
00:25:23,200 --> 00:25:24,799
culture

666
00:25:24,799 --> 00:25:26,400
so thanks so uh

667
00:25:26,400 --> 00:25:28,000
for the rest of the presentation i will

668
00:25:28,000 --> 00:25:30,320
just quickly go for several other points

669
00:25:30,320 --> 00:25:33,440
that are very important in terms of

670
00:25:33,440 --> 00:25:37,279
penetration testing in big organizations

671
00:25:37,279 --> 00:25:38,080
so

672
00:25:38,080 --> 00:25:40,880
to begin with we can have security

673
00:25:40,880 --> 00:25:42,720
controls that are applied for

674
00:25:42,720 --> 00:25:45,120
environment systems applications and so

675
00:25:45,120 --> 00:25:47,840
on so we are discussing the penetration

676
00:25:47,840 --> 00:25:50,240
testing right but we've got some things

677
00:25:50,240 --> 00:25:52,799
that are somehow related like code

678
00:25:52,799 --> 00:25:57,520
review or automatic scanning right so

679
00:25:57,520 --> 00:25:58,720
probably

680
00:25:58,720 --> 00:26:01,919
almost every mature organization

681
00:26:01,919 --> 00:26:03,840
has severity con

682
00:26:03,840 --> 00:26:06,559
implements several of those controls to

683
00:26:06,559 --> 00:26:08,400
their systems right

684
00:26:08,400 --> 00:26:11,279
and the question is how to apply those

685
00:26:11,279 --> 00:26:12,799
controls

686
00:26:12,799 --> 00:26:15,440
so we can have both of those controls

687
00:26:15,440 --> 00:26:18,159
applied at the same time right

688
00:26:18,159 --> 00:26:20,480
to the some kind of application for

689
00:26:20,480 --> 00:26:21,679
example

690
00:26:21,679 --> 00:26:25,120
or we can have another approach which is

691
00:26:25,120 --> 00:26:27,840
and one by one or sequential approach so

692
00:26:27,840 --> 00:26:29,520
we are applying one control we are

693
00:26:29,520 --> 00:26:31,279
finishing it then we are going to

694
00:26:31,279 --> 00:26:32,720
another control

695
00:26:32,720 --> 00:26:34,640
and so on

696
00:26:34,640 --> 00:26:36,640
so just to quickly discuss the

697
00:26:36,640 --> 00:26:38,640
differences between those two approaches

698
00:26:38,640 --> 00:26:39,520
that

699
00:26:39,520 --> 00:26:40,799
or of course there are a lot of

700
00:26:40,799 --> 00:26:43,120
differences but those are the most

701
00:26:43,120 --> 00:26:45,679
important ones so if you are applying

702
00:26:45,679 --> 00:26:48,159
all the controls at the same time we

703
00:26:48,159 --> 00:26:50,080
highly reduce the time needed for the

704
00:26:50,080 --> 00:26:52,559
application to apply those controls so

705
00:26:52,559 --> 00:26:54,880
it may appear to be very important if we

706
00:26:54,880 --> 00:26:56,880
have a go live soon for example right

707
00:26:56,880 --> 00:26:58,799
because sometimes you are receiving

708
00:26:58,799 --> 00:27:00,720
apprentice requests and okay we've got

709
00:27:00,720 --> 00:27:03,200
to go live like in one week right or two

710
00:27:03,200 --> 00:27:04,960
weeks

711
00:27:04,960 --> 00:27:07,600
on the other hand the security team may

712
00:27:07,600 --> 00:27:10,080
duplicate the work because for example

713
00:27:10,080 --> 00:27:12,480
all the controls may find the same bugs

714
00:27:12,480 --> 00:27:14,799
or vulnerabilities right and we are

715
00:27:14,799 --> 00:27:16,960
duplicating all the work because all of

716
00:27:16,960 --> 00:27:20,000
this has to be assessed and so on

717
00:27:20,000 --> 00:27:23,120
in terms of a sequential approach

718
00:27:23,120 --> 00:27:25,840
the process takes much more time because

719
00:27:25,840 --> 00:27:28,240
one control is waiting for another but

720
00:27:28,240 --> 00:27:30,640
on the other hand we can have a better

721
00:27:30,640 --> 00:27:32,720
result because for example

722
00:27:32,720 --> 00:27:34,799
we are performing penetration tests

723
00:27:34,799 --> 00:27:37,679
after the automatic scanning and a lot

724
00:27:37,679 --> 00:27:40,320
of low and medium severity issues are

725
00:27:40,320 --> 00:27:42,960
already gone right so we do not have to

726
00:27:42,960 --> 00:27:44,960
focus on them but we can dig into some

727
00:27:44,960 --> 00:27:47,200
more complicated stuff like business

728
00:27:47,200 --> 00:27:49,520
logic and some more complicated

729
00:27:49,520 --> 00:27:52,000
vulnerabilities

730
00:27:52,000 --> 00:27:54,960
and now i would like to quickly switch

731
00:27:54,960 --> 00:27:56,399
to one of the

732
00:27:56,399 --> 00:27:58,640
most important topics of the penetration

733
00:27:58,640 --> 00:28:01,520
testing environment so typically when we

734
00:28:01,520 --> 00:28:03,760
are doing a planning a penetration test

735
00:28:03,760 --> 00:28:06,240
for some kind of system we are thinking

736
00:28:06,240 --> 00:28:07,919
whether the penetration test should be

737
00:28:07,919 --> 00:28:10,080
performed on production or

738
00:28:10,080 --> 00:28:12,399
non-production environment

739
00:28:12,399 --> 00:28:14,159
of course there are

740
00:28:14,159 --> 00:28:16,320
advantages and disadvantages of both

741
00:28:16,320 --> 00:28:18,320
approaches so i would like to highlight

742
00:28:18,320 --> 00:28:20,960
them and discuss some um real-world

743
00:28:20,960 --> 00:28:23,760
scenarios regarding that so

744
00:28:23,760 --> 00:28:26,240
uh if we are performing a penetration

745
00:28:26,240 --> 00:28:28,080
test in the production

746
00:28:28,080 --> 00:28:29,760
then we are performing a penetration

747
00:28:29,760 --> 00:28:32,559
test on the most accurate environment

748
00:28:32,559 --> 00:28:35,360
that will be eventually used or attacked

749
00:28:35,360 --> 00:28:37,600
by our adversary right

750
00:28:37,600 --> 00:28:39,840
on the other hand is the most

751
00:28:39,840 --> 00:28:43,360
dangerous environment to test because

752
00:28:43,360 --> 00:28:46,399
uh it is commonly known that we

753
00:28:46,399 --> 00:28:48,000
tend to break things during the

754
00:28:48,000 --> 00:28:50,240
penetration test it happens right

755
00:28:50,240 --> 00:28:52,559
because we are doing a lot of different

756
00:28:52,559 --> 00:28:54,000
stuff with the application we are

757
00:28:54,000 --> 00:28:56,480
fuzzing it and so on so we can have a

758
00:28:56,480 --> 00:28:58,799
very serious impact on integrity or

759
00:28:58,799 --> 00:29:00,880
availability of a product production

760
00:29:00,880 --> 00:29:03,919
application or system which may

761
00:29:03,919 --> 00:29:06,640
introduce a lot of troubles

762
00:29:06,640 --> 00:29:07,919
on the other hand we've got the

763
00:29:07,919 --> 00:29:10,640
non-production environment which is may

764
00:29:10,640 --> 00:29:14,480
not be accurate sometimes we have an iq

765
00:29:14,480 --> 00:29:15,600
non-production environment and

766
00:29:15,600 --> 00:29:17,200
production environment are almost the

767
00:29:17,200 --> 00:29:20,880
same however it always typically occurs

768
00:29:20,880 --> 00:29:23,279
that there are some differences we can

769
00:29:23,279 --> 00:29:25,840
have differences in both

770
00:29:25,840 --> 00:29:27,440
code level right so we can have a

771
00:29:27,440 --> 00:29:29,520
different codebase but

772
00:29:29,520 --> 00:29:32,159
the typical changes are

773
00:29:32,159 --> 00:29:34,240
present in the configuration right so

774
00:29:34,240 --> 00:29:36,720
the configuration of the http server

775
00:29:36,720 --> 00:29:39,279
reverse proxy there are some components

776
00:29:39,279 --> 00:29:40,960
which are missing in non-production

777
00:29:40,960 --> 00:29:42,240
environment

778
00:29:42,240 --> 00:29:43,760
and so on but

779
00:29:43,760 --> 00:29:45,039
of course

780
00:29:45,039 --> 00:29:48,240
typically there is no risk that we will

781
00:29:48,240 --> 00:29:51,440
have some serious impact on integrity or

782
00:29:51,440 --> 00:29:54,480
availability during this penetration

783
00:29:54,480 --> 00:29:55,520
test

784
00:29:55,520 --> 00:29:57,360
when we are performing it on the

785
00:29:57,360 --> 00:29:59,200
non-production environment

786
00:29:59,200 --> 00:30:02,640
and now i would like to quickly look how

787
00:30:02,640 --> 00:30:05,440
maybe not typically but quite a lot

788
00:30:05,440 --> 00:30:06,799
quite often

789
00:30:06,799 --> 00:30:08,559
the process of go live

790
00:30:08,559 --> 00:30:09,600
um

791
00:30:09,600 --> 00:30:11,279
happens so

792
00:30:11,279 --> 00:30:13,520
we have let's say some kind of

793
00:30:13,520 --> 00:30:15,919
application that has a go live soon and

794
00:30:15,919 --> 00:30:17,200
we are

795
00:30:17,200 --> 00:30:19,039
performing a penetration test on

796
00:30:19,039 --> 00:30:21,200
non-production environment right so we

797
00:30:21,200 --> 00:30:23,200
are doing penetration testing we are

798
00:30:23,200 --> 00:30:24,559
fighting we have found some

799
00:30:24,559 --> 00:30:26,640
vulnerabilities we are providing a

800
00:30:26,640 --> 00:30:29,600
report with the results we have fixes we

801
00:30:29,600 --> 00:30:32,000
are performing a retest okay all issues

802
00:30:32,000 --> 00:30:34,960
are closed we are going live right

803
00:30:34,960 --> 00:30:38,880
and it occurs that typically

804
00:30:38,880 --> 00:30:39,919
the

805
00:30:39,919 --> 00:30:40,880
pull

806
00:30:40,880 --> 00:30:43,360
the code the already fixed

807
00:30:43,360 --> 00:30:45,200
code is pushed

808
00:30:45,200 --> 00:30:47,760
to a completely different server right

809
00:30:47,760 --> 00:30:49,600
which may consist of different

810
00:30:49,600 --> 00:30:51,120
components it may have a different

811
00:30:51,120 --> 00:30:55,279
configuration and so on and i have

812
00:30:55,279 --> 00:30:58,320
i think a very good real world example

813
00:30:58,320 --> 00:31:00,799
with a web cache poisoning vulnerability

814
00:31:00,799 --> 00:31:03,600
so once we were doing a penetration test

815
00:31:03,600 --> 00:31:04,480
on

816
00:31:04,480 --> 00:31:08,000
a non-production environment

817
00:31:08,000 --> 00:31:09,440
and

818
00:31:09,440 --> 00:31:11,279
the hostgator injection vulnerability

819
00:31:11,279 --> 00:31:12,960
was found right so

820
00:31:12,960 --> 00:31:13,760
the

821
00:31:13,760 --> 00:31:16,840
content could be injected in the

822
00:31:16,840 --> 00:31:19,840
um http response of the application we

823
00:31:19,840 --> 00:31:21,679
had the host header and it led to the

824
00:31:21,679 --> 00:31:24,000
cross-site scripting vulnerability and

825
00:31:24,000 --> 00:31:26,000
during the penetration test this issue

826
00:31:26,000 --> 00:31:28,640
was evaluated as an informative one

827
00:31:28,640 --> 00:31:31,200
because it could not be exploited right

828
00:31:31,200 --> 00:31:33,279
because attacker has no control over the

829
00:31:33,279 --> 00:31:35,519
host header that is

830
00:31:35,519 --> 00:31:38,240
being sent by the victims browser right

831
00:31:38,240 --> 00:31:41,519
of course as every informative

832
00:31:41,519 --> 00:31:44,000
finding the issue was ignored by the

833
00:31:44,000 --> 00:31:47,039
application team they went live and it

834
00:31:47,039 --> 00:31:48,720
has occurred that in the production

835
00:31:48,720 --> 00:31:50,640
environment there is a webcast

836
00:31:50,640 --> 00:31:52,480
implemented right so there is a caching

837
00:31:52,480 --> 00:31:54,799
mechanism and it has occurred that this

838
00:31:54,799 --> 00:31:56,960
simple host header injection and this

839
00:31:56,960 --> 00:31:58,480
content injection that was not

840
00:31:58,480 --> 00:32:00,480
exploitable is now completely

841
00:32:00,480 --> 00:32:02,080
exploitable on the production

842
00:32:02,080 --> 00:32:04,320
environment because there is a cache

843
00:32:04,320 --> 00:32:06,320
which remembers the malicious http

844
00:32:06,320 --> 00:32:08,720
response and services to the client so

845
00:32:08,720 --> 00:32:10,799
from the information

846
00:32:10,799 --> 00:32:13,200
informative vulnerability we now have a

847
00:32:13,200 --> 00:32:15,600
high or critical severity vulnerability

848
00:32:15,600 --> 00:32:18,559
right and it was on and it was

849
00:32:18,559 --> 00:32:20,480
impossible to identify it during the

850
00:32:20,480 --> 00:32:22,480
penetration test because there was no

851
00:32:22,480 --> 00:32:25,279
web cage no production environment so

852
00:32:25,279 --> 00:32:28,000
there is this is something that we have

853
00:32:28,000 --> 00:32:30,880
to remember about that it is always good

854
00:32:30,880 --> 00:32:32,480
to ask the application team

855
00:32:32,480 --> 00:32:34,720
infrastructure team and so on

856
00:32:34,720 --> 00:32:35,760
uh

857
00:32:35,760 --> 00:32:38,080
are you really sure that the environment

858
00:32:38,080 --> 00:32:39,679
is the same there are no additional

859
00:32:39,679 --> 00:32:42,799
components and so on

860
00:32:42,799 --> 00:32:45,760
just one additional note it is pretty

861
00:32:45,760 --> 00:32:48,320
common to have some functionalities not

862
00:32:48,320 --> 00:32:49,840
working or disabled on the

863
00:32:49,840 --> 00:32:52,640
non-production environment right so

864
00:32:52,640 --> 00:32:54,640
we can for example have a situation

865
00:32:54,640 --> 00:32:56,960
where functionality is not working

866
00:32:56,960 --> 00:32:58,240
because

867
00:32:58,240 --> 00:32:59,360
um

868
00:32:59,360 --> 00:33:01,360
we've got some for example some credit

869
00:33:01,360 --> 00:33:03,519
processing right or second factor which

870
00:33:03,519 --> 00:33:05,760
is not implemented in a non-production

871
00:33:05,760 --> 00:33:09,200
environment so we also have to

872
00:33:09,200 --> 00:33:11,600
have it in mind and eventually provide a

873
00:33:11,600 --> 00:33:14,320
limitation to the penetration test

874
00:33:14,320 --> 00:33:15,440
and

875
00:33:15,440 --> 00:33:18,399
then now i would like to go to next very

876
00:33:18,399 --> 00:33:21,440
important thing so to the retas so

877
00:33:21,440 --> 00:33:23,200
everybody thinks the twitters are pretty

878
00:33:23,200 --> 00:33:24,399
simple right but

879
00:33:24,399 --> 00:33:26,320
in reality it is a very challenging

880
00:33:26,320 --> 00:33:28,720
process because we deal with a lot of

881
00:33:28,720 --> 00:33:30,799
problems here there

882
00:33:30,799 --> 00:33:32,960
for example where is the border of the

883
00:33:32,960 --> 00:33:36,159
retest should the penetration tester

884
00:33:36,159 --> 00:33:38,640
only try to reproduce the proof of

885
00:33:38,640 --> 00:33:41,120
concept from the original report or the

886
00:33:41,120 --> 00:33:44,320
should and if it's fixed then it's okay

887
00:33:44,320 --> 00:33:46,960
or should the net resolution tester try

888
00:33:46,960 --> 00:33:49,440
make an attempt to bypass the

889
00:33:49,440 --> 00:33:51,120
implemented protection mechanism for

890
00:33:51,120 --> 00:33:52,640
example right

891
00:33:52,640 --> 00:33:54,559
or

892
00:33:54,559 --> 00:33:55,440
maybe

893
00:33:55,440 --> 00:33:57,440
another very important thing about the

894
00:33:57,440 --> 00:33:59,440
retests are the partially fixed

895
00:33:59,440 --> 00:34:01,679
evaluation right you have already

896
00:34:01,679 --> 00:34:03,039
seen that so

897
00:34:03,039 --> 00:34:04,960
there is no strict definition for the

898
00:34:04,960 --> 00:34:07,039
partially fixed and it often means

899
00:34:07,039 --> 00:34:10,079
completely different things so it's

900
00:34:10,079 --> 00:34:12,560
hard to track those vulnerabilities

901
00:34:12,560 --> 00:34:14,399
which are partially fixed after the

902
00:34:14,399 --> 00:34:15,679
re-test

903
00:34:15,679 --> 00:34:19,280
and of course the shuttling has a very

904
00:34:19,280 --> 00:34:22,399
big impact on re-testing because

905
00:34:22,399 --> 00:34:25,760
if we have a shuttle to reduce so the

906
00:34:25,760 --> 00:34:27,599
penetration tester has no other

907
00:34:27,599 --> 00:34:30,500
activities only doritas he can

908
00:34:30,500 --> 00:34:32,320
[Music]

909
00:34:32,320 --> 00:34:36,399
he can have more time for for example

910
00:34:36,399 --> 00:34:38,399
those um bypasses of protection

911
00:34:38,399 --> 00:34:40,320
mechanisms right so the vulnerabilities

912
00:34:40,320 --> 00:34:42,399
is fixed but i don't like it i will try

913
00:34:42,399 --> 00:34:44,960
to see if i can disrupt it right so i

914
00:34:44,960 --> 00:34:46,960
can if i can bypass the protections and

915
00:34:46,960 --> 00:34:50,560
so on in reality we are

916
00:34:50,560 --> 00:34:52,719
in majority of cases we are performing

917
00:34:52,719 --> 00:34:54,879
an advocacy test

918
00:34:54,879 --> 00:34:55,870
where we

919
00:34:55,870 --> 00:34:56,960
[Music]

920
00:34:56,960 --> 00:34:59,920
are performing other parallel parallel

921
00:34:59,920 --> 00:35:02,160
tasks like another penetration test

922
00:35:02,160 --> 00:35:03,680
right so we are performing penetration

923
00:35:03,680 --> 00:35:05,440
tests somebody calls okay we've got an

924
00:35:05,440 --> 00:35:08,720
ur urgent retest we've got four hours to

925
00:35:08,720 --> 00:35:11,040
retest and vulnerabilities right

926
00:35:11,040 --> 00:35:12,000
so

927
00:35:12,000 --> 00:35:14,480
we have to bear in mind that it may lead

928
00:35:14,480 --> 00:35:16,320
to the situation when we close the

929
00:35:16,320 --> 00:35:17,839
vulnerability

930
00:35:17,839 --> 00:35:20,320
and say that it is fixed but it has

931
00:35:20,320 --> 00:35:22,000
it will occur that if the penetration

932
00:35:22,000 --> 00:35:23,200
tester had

933
00:35:23,200 --> 00:35:26,320
one or two hours more it may occur that

934
00:35:26,320 --> 00:35:28,480
this particle protection mechanics could

935
00:35:28,480 --> 00:35:30,480
be bypass and the vulnerability still

936
00:35:30,480 --> 00:35:32,960
exists

937
00:35:32,960 --> 00:35:35,760
and one sentence regarding the part uh

938
00:35:35,760 --> 00:35:37,359
the distinction between vulnerability

939
00:35:37,359 --> 00:35:39,520
and back that mark was

940
00:35:39,520 --> 00:35:40,640
saying in the beginning of the

941
00:35:40,640 --> 00:35:42,880
presentation the penetration testing

942
00:35:42,880 --> 00:35:44,320
doesn't find bugs but it finds

943
00:35:44,320 --> 00:35:47,920
vulnerabilities and during the re-test

944
00:35:47,920 --> 00:35:50,800
we typically cannot prove that the book

945
00:35:50,800 --> 00:35:53,119
was also fixed right we can only

946
00:35:53,119 --> 00:35:55,119
typically prove that the vulnerability

947
00:35:55,119 --> 00:35:58,160
was fixed

948
00:35:58,160 --> 00:35:59,280
just one

949
00:35:59,280 --> 00:36:02,240
sentence about the change management

950
00:36:02,240 --> 00:36:03,119
so

951
00:36:03,119 --> 00:36:05,520
it is probably a topic for a

952
00:36:05,520 --> 00:36:07,359
different presentation

953
00:36:07,359 --> 00:36:10,160
because it's really big however the

954
00:36:10,160 --> 00:36:13,040
biggest problem is that sometimes the

955
00:36:13,040 --> 00:36:15,119
fixes are applied only to the

956
00:36:15,119 --> 00:36:17,440
non-production environment or the

957
00:36:17,440 --> 00:36:19,119
environment when where you are

958
00:36:19,119 --> 00:36:21,440
performing a penetration test but in

959
00:36:21,440 --> 00:36:23,680
reality it is not applied to production

960
00:36:23,680 --> 00:36:25,839
right because application project

961
00:36:25,839 --> 00:36:27,599
application team just wanted to quickly

962
00:36:27,599 --> 00:36:29,280
close the issue right

963
00:36:29,280 --> 00:36:30,800
so

964
00:36:30,800 --> 00:36:33,040
we have to bear in mind that

965
00:36:33,040 --> 00:36:34,480
when we

966
00:36:34,480 --> 00:36:36,320
do a re-test on also on the

967
00:36:36,320 --> 00:36:38,480
non-production environment

968
00:36:38,480 --> 00:36:41,680
there is a slight chance that the fix is

969
00:36:41,680 --> 00:36:43,920
not implemented in the most important

970
00:36:43,920 --> 00:36:45,280
environment

971
00:36:45,280 --> 00:36:47,680
and then uh probably the basis of the

972
00:36:47,680 --> 00:36:49,680
penetration test is so the scope right

973
00:36:49,680 --> 00:36:51,760
so it's really a huge problem in the

974
00:36:51,760 --> 00:36:53,280
larger organizations when we've got a

975
00:36:53,280 --> 00:36:55,119
big ecosystem you've got a lot of

976
00:36:55,119 --> 00:36:57,119
different systems which are connected to

977
00:36:57,119 --> 00:36:59,440
each other and uh pretty often one

978
00:36:59,440 --> 00:37:01,359
system redirects you to another and so

979
00:37:01,359 --> 00:37:03,040
on and so on

980
00:37:03,040 --> 00:37:07,040
so we also have to keep it in mind

981
00:37:07,040 --> 00:37:08,480
that

982
00:37:08,480 --> 00:37:11,040
such limitations uh such uh

983
00:37:11,040 --> 00:37:13,520
problems scope definition may occur and

984
00:37:13,520 --> 00:37:16,960
it is very easy to attach average system

985
00:37:16,960 --> 00:37:18,880
during the penetration test and we may

986
00:37:18,880 --> 00:37:20,800
not even be aware of that

987
00:37:20,800 --> 00:37:22,560
and for example we've got foreign

988
00:37:22,560 --> 00:37:25,040
vulnerabilities so we are performing a

989
00:37:25,040 --> 00:37:27,440
penetration test of one application and

990
00:37:27,440 --> 00:37:30,079
we are exploiting like sql injection but

991
00:37:30,079 --> 00:37:31,839
in reality it occurs that we are

992
00:37:31,839 --> 00:37:34,320
exploiting sql injection in different

993
00:37:34,320 --> 00:37:36,560
applications because it has occurred

994
00:37:36,560 --> 00:37:39,280
that one api is for wire forwarding

995
00:37:39,280 --> 00:37:42,079
request to another api right so it has

996
00:37:42,079 --> 00:37:44,160
happened once so i was exploiting a

997
00:37:44,160 --> 00:37:46,000
square injection in completely different

998
00:37:46,000 --> 00:37:48,560
company because

999
00:37:48,560 --> 00:37:50,480
the scope did not include

1000
00:37:50,480 --> 00:37:52,640
did not include the fact that

1001
00:37:52,640 --> 00:37:55,119
these particular endpoints forward

1002
00:37:55,119 --> 00:37:58,880
requests to another api right

1003
00:37:58,880 --> 00:38:01,040
and of course we've got some limitations

1004
00:38:01,040 --> 00:38:01,920
like

1005
00:38:01,920 --> 00:38:03,200
we cannot

1006
00:38:03,200 --> 00:38:04,800
for example

1007
00:38:04,800 --> 00:38:06,800
especially if we are working on

1008
00:38:06,800 --> 00:38:08,960
non-production environment we can have

1009
00:38:08,960 --> 00:38:11,040
some functionalities disabled or for

1010
00:38:11,040 --> 00:38:12,960
example it is very common if you've got

1011
00:38:12,960 --> 00:38:14,880
a second factor so the second factor is

1012
00:38:14,880 --> 00:38:16,800
not fully implemented in the

1013
00:38:16,800 --> 00:38:20,160
non-production environment

1014
00:38:20,160 --> 00:38:21,119
and

1015
00:38:21,119 --> 00:38:23,200
it occurs that every

1016
00:38:23,200 --> 00:38:25,440
provided value is accepted so we are not

1017
00:38:25,440 --> 00:38:27,839
able to

1018
00:38:28,160 --> 00:38:29,280
validate

1019
00:38:29,280 --> 00:38:31,680
whether the second factor is properly

1020
00:38:31,680 --> 00:38:33,200
implemented in the production for

1021
00:38:33,200 --> 00:38:35,040
example

1022
00:38:35,040 --> 00:38:37,119
uh one quick note about findings

1023
00:38:37,119 --> 00:38:38,800
granularity so

1024
00:38:38,800 --> 00:38:40,079
we can

1025
00:38:40,079 --> 00:38:41,200
if we have

1026
00:38:41,200 --> 00:38:43,359
multiple connected findings like for

1027
00:38:43,359 --> 00:38:45,200
example five reflected process scripting

1028
00:38:45,200 --> 00:38:47,760
vulnerabilities we can aggregate it into

1029
00:38:47,760 --> 00:38:49,680
one vulnerability like multiple

1030
00:38:49,680 --> 00:38:51,280
processes scripting vulnerabilities and

1031
00:38:51,280 --> 00:38:54,000
so on or we can split them

1032
00:38:54,000 --> 00:38:56,800
so there are some drawbacks and

1033
00:38:56,800 --> 00:38:58,960
advantages of that but we have to also

1034
00:38:58,960 --> 00:39:01,599
keep in mind that if we are connecting

1035
00:39:01,599 --> 00:39:03,839
vulnerabilities into

1036
00:39:03,839 --> 00:39:06,560
into a one big one

1037
00:39:06,560 --> 00:39:08,880
back in here for example we've got ssl

1038
00:39:08,880 --> 00:39:12,880
issues so we cr cipher ceos tls21 tls10

1039
00:39:12,880 --> 00:39:15,680
and so on and we aggregate them into a

1040
00:39:15,680 --> 00:39:17,839
one finding then

1041
00:39:17,839 --> 00:39:20,800
there will be problems with tracking and

1042
00:39:20,800 --> 00:39:23,280
retesting right because for example if

1043
00:39:23,280 --> 00:39:25,119
you have five issues then we are

1044
00:39:25,119 --> 00:39:27,440
retesting five issues right four are

1045
00:39:27,440 --> 00:39:30,240
closed and one is still open right but

1046
00:39:30,240 --> 00:39:33,440
if we have a one finding in the report

1047
00:39:33,440 --> 00:39:35,839
then it will probably end up as

1048
00:39:35,839 --> 00:39:38,160
partially fixed right because not all

1049
00:39:38,160 --> 00:39:38,880
the

1050
00:39:38,880 --> 00:39:41,839
vulnerabilities and problems were

1051
00:39:41,839 --> 00:39:44,560
so maybe i will try i will skip the time

1052
00:39:44,560 --> 00:39:47,920
of penetration testing because we have

1053
00:39:47,920 --> 00:39:50,160
we are almost on time and with the time

1054
00:39:50,160 --> 00:39:52,320
for questions so just to finish i will

1055
00:39:52,320 --> 00:39:53,760
quickly

1056
00:39:53,760 --> 00:39:55,440
say two words about internal

1057
00:39:55,440 --> 00:39:58,079
methodologies so large organizations

1058
00:39:58,079 --> 00:40:00,000
like to have control

1059
00:40:00,000 --> 00:40:03,040
over everything i mean everything and it

1060
00:40:03,040 --> 00:40:05,119
is pretty common to have some internal

1061
00:40:05,119 --> 00:40:07,040
policies and methodologies regarding the

1062
00:40:07,040 --> 00:40:09,119
penetration testing right

1063
00:40:09,119 --> 00:40:11,680
so it may occur that

1064
00:40:11,680 --> 00:40:14,560
organization has a

1065
00:40:14,560 --> 00:40:17,280
set of uh to-do checklists the

1066
00:40:17,280 --> 00:40:19,760
penetration tester has to do during the

1067
00:40:19,760 --> 00:40:21,119
dentist right

1068
00:40:21,119 --> 00:40:23,839
and those checklists are good in general

1069
00:40:23,839 --> 00:40:25,920
because sometimes penetration tester can

1070
00:40:25,920 --> 00:40:27,599
forget about something and then he looks

1071
00:40:27,599 --> 00:40:29,599
at it and says oh okay i forget about

1072
00:40:29,599 --> 00:40:31,440
that and it's in the checklist right so

1073
00:40:31,440 --> 00:40:33,359
i will do that right now

1074
00:40:33,359 --> 00:40:36,160
however there are some traps right so

1075
00:40:36,160 --> 00:40:38,240
typically those methodologies are time

1076
00:40:38,240 --> 00:40:40,880
consuming sometimes they may make heal

1077
00:40:40,880 --> 00:40:43,760
fantastic creativity if the checklist

1078
00:40:43,760 --> 00:40:44,400
and

1079
00:40:44,400 --> 00:40:46,480
methodology is too big

1080
00:40:46,480 --> 00:40:48,319
to white

1081
00:40:48,319 --> 00:40:51,440
even if these dyspolis methodologies are

1082
00:40:51,440 --> 00:40:54,240
well prepared there may they may

1083
00:40:54,240 --> 00:40:57,359
appear to be impractical in some

1084
00:40:57,359 --> 00:41:00,800
untypical cases right and as a one

1085
00:41:00,800 --> 00:41:02,720
example we can

1086
00:41:02,720 --> 00:41:05,040
assume that we have an application which

1087
00:41:05,040 --> 00:41:06,480
is quite complex

1088
00:41:06,480 --> 00:41:08,319
it has a high number of endpoints we've

1089
00:41:08,319 --> 00:41:10,960
got uncommon technology and so on and

1090
00:41:10,960 --> 00:41:13,119
we've got 10

1091
00:41:13,119 --> 00:41:15,359
10 days scoped for the penetration test

1092
00:41:15,359 --> 00:41:18,240
right and also we've got an internal

1093
00:41:18,240 --> 00:41:21,040
methodology which has to be fulfilled

1094
00:41:21,040 --> 00:41:23,040
and it appears that

1095
00:41:23,040 --> 00:41:26,000
we've got several approaches here so

1096
00:41:26,000 --> 00:41:27,200
uh in this

1097
00:41:27,200 --> 00:41:29,280
maybe we'll start with a second approach

1098
00:41:29,280 --> 00:41:31,359
so the second approach says that

1099
00:41:31,359 --> 00:41:33,760
methodology gets completely fulfilled so

1100
00:41:33,760 --> 00:41:36,480
for example penetration tester

1101
00:41:36,480 --> 00:41:39,200
does everything for

1102
00:41:39,200 --> 00:41:40,560
all of the airports right so the

1103
00:41:40,560 --> 00:41:42,720
methodology says that do these days

1104
00:41:42,720 --> 00:41:44,800
these and this for this particular for

1105
00:41:44,800 --> 00:41:47,200
all of the endpoints right so

1106
00:41:47,200 --> 00:41:48,880
the penetration has fulfilled

1107
00:41:48,880 --> 00:41:50,960
methodology and is compliant with a

1108
00:41:50,960 --> 00:41:53,520
methodology and policies right but

1109
00:41:53,520 --> 00:41:55,280
penetration tester for example is not

1110
00:41:55,280 --> 00:41:57,280
happy because he had to skip some parts

1111
00:41:57,280 --> 00:41:59,760
of the application which seems to be in

1112
00:41:59,760 --> 00:42:02,000
particular suspicious and probably

1113
00:42:02,000 --> 00:42:04,560
vulnerable but he had no time to verify

1114
00:42:04,560 --> 00:42:06,880
that right

1115
00:42:06,880 --> 00:42:10,160
in the first approach

1116
00:42:10,160 --> 00:42:10,880
the

1117
00:42:10,880 --> 00:42:12,880
pentester can base his work on his

1118
00:42:12,880 --> 00:42:15,359
experience and knowledge right so he

1119
00:42:15,359 --> 00:42:17,280
knows that he will not be able to cover

1120
00:42:17,280 --> 00:42:18,960
the whole application during a single

1121
00:42:18,960 --> 00:42:21,760
penetration test so he tries to focus on

1122
00:42:21,760 --> 00:42:24,240
the most important issues and

1123
00:42:24,240 --> 00:42:26,079
looks for them in the places that look

1124
00:42:26,079 --> 00:42:28,880
suspicious to him right so

1125
00:42:28,880 --> 00:42:31,119
it's pretty often reasonable

1126
00:42:31,119 --> 00:42:33,280
but it's incompliant right so we are not

1127
00:42:33,280 --> 00:42:35,599
compliant with our internal policies and

1128
00:42:35,599 --> 00:42:37,359
the third approach is the mixture of

1129
00:42:37,359 --> 00:42:39,839
first and second however

1130
00:42:39,839 --> 00:42:41,520
typically we would need

1131
00:42:41,520 --> 00:42:43,359
twice more time

1132
00:42:43,359 --> 00:42:45,280
to combine both of those approaches

1133
00:42:45,280 --> 00:42:46,960
right so we've got

1134
00:42:46,960 --> 00:42:48,160
of course

1135
00:42:48,160 --> 00:42:50,319
we could talk about it a lot and we

1136
00:42:50,319 --> 00:42:53,680
could find uh far more issues and

1137
00:42:53,680 --> 00:42:56,319
problems with the penetration testing in

1138
00:42:56,319 --> 00:42:58,800
large organizations however

1139
00:42:58,800 --> 00:43:01,440
uh we would like to highlight that we

1140
00:43:01,440 --> 00:43:03,599
have to remember that the success of the

1141
00:43:03,599 --> 00:43:07,119
penetration testing is not only

1142
00:43:07,119 --> 00:43:09,280
dependent on one person's penetration

1143
00:43:09,280 --> 00:43:11,839
tester it's important how application

1144
00:43:11,839 --> 00:43:14,079
team cooperates with the penetration

1145
00:43:14,079 --> 00:43:16,240
tester right so if they are helpful they

1146
00:43:16,240 --> 00:43:16,880
are

1147
00:43:16,880 --> 00:43:18,319
they want to have their application

1148
00:43:18,319 --> 00:43:19,760
secure it goes

1149
00:43:19,760 --> 00:43:22,319
well right if not

1150
00:43:22,319 --> 00:43:24,319
we may have problems right and the

1151
00:43:24,319 --> 00:43:27,920
penetration test the quality may be

1152
00:43:27,920 --> 00:43:29,680
lowered

1153
00:43:29,680 --> 00:43:31,440
and the last sentence from the

1154
00:43:31,440 --> 00:43:33,599
conclusion penetration testing is based

1155
00:43:33,599 --> 00:43:35,839
on the creativity right

1156
00:43:35,839 --> 00:43:37,040
so

1157
00:43:37,040 --> 00:43:39,040
it's hard to close

1158
00:43:39,040 --> 00:43:41,680
penetration tests within some boundaries

1159
00:43:41,680 --> 00:43:43,880
which were

1160
00:43:43,880 --> 00:43:46,960
organizations tend to do that right so

1161
00:43:46,960 --> 00:43:49,359
we have to remember that

1162
00:43:49,359 --> 00:43:51,520
penetration testers like freedom and

1163
00:43:51,520 --> 00:43:54,560
creativity and they work better in such

1164
00:43:54,560 --> 00:43:56,319
situations

1165
00:43:56,319 --> 00:43:59,040
so uh i think that will be all

1166
00:43:59,040 --> 00:44:00,880
we have one question just one we can

1167
00:44:00,880 --> 00:44:03,040
take one uh thank you both for the

1168
00:44:03,040 --> 00:44:05,040
presentation that's a lot of food for

1169
00:44:05,040 --> 00:44:06,560
thought and thank you for bringing so

1170
00:44:06,560 --> 00:44:09,200
much new nuance and for for anchoring

1171
00:44:09,200 --> 00:44:10,880
all of the complexity

1172
00:44:10,880 --> 00:44:13,599
that penetration testing evolves into

1173
00:44:13,599 --> 00:44:15,920
reality especially since you deal with

1174
00:44:15,920 --> 00:44:19,520
systems that are so critical um to the

1175
00:44:19,520 --> 00:44:21,440
financial well-being of not just the

1176
00:44:21,440 --> 00:44:24,240
company but its many customers as well

1177
00:44:24,240 --> 00:44:27,200
so a single question the

1178
00:44:27,200 --> 00:44:30,160
one that i picked for you from um from

1179
00:44:30,160 --> 00:44:33,839
attendees is how large of a challenge is

1180
00:44:33,839 --> 00:44:36,720
to centralize findings from multiple

1181
00:44:36,720 --> 00:44:39,760
types of automated scans and from manual

1182
00:44:39,760 --> 00:44:42,079
pen tests so that everyone on the team

1183
00:44:42,079 --> 00:44:45,119
has maximum visibility in clarity and

1184
00:44:45,119 --> 00:44:47,440
how time consuming is that and if you

1185
00:44:47,440 --> 00:44:50,160
have any tricks or solutions to help you

1186
00:44:50,160 --> 00:44:51,200
deal

1187
00:44:51,200 --> 00:44:55,118
with this and then create that clarity

1188
00:44:55,520 --> 00:44:56,560
so

1189
00:44:56,560 --> 00:44:59,280
it's uh it's not so easy right and of

1190
00:44:59,280 --> 00:45:01,040
course everything depends on the

1191
00:45:01,040 --> 00:45:02,720
organization

1192
00:45:02,720 --> 00:45:04,480
how large it is

1193
00:45:04,480 --> 00:45:06,160
all right so as i mentioned right now we

1194
00:45:06,160 --> 00:45:08,640
have only only penetration testing team

1195
00:45:08,640 --> 00:45:10,720
is 30 people

1196
00:45:10,720 --> 00:45:12,560
right so we have a

1197
00:45:12,560 --> 00:45:14,960
probably the same huge team that is

1198
00:45:14,960 --> 00:45:16,960
responsible for for kind of

1199
00:45:16,960 --> 00:45:19,760
vulnerability scanning and code scanning

1200
00:45:19,760 --> 00:45:22,319
right there is there are also a teams

1201
00:45:22,319 --> 00:45:25,040
responsible for the vulnerabilities that

1202
00:45:25,040 --> 00:45:27,839
are published uh

1203
00:45:27,839 --> 00:45:30,079
in in internet right so when when you

1204
00:45:30,079 --> 00:45:31,839
have i don't know infrastructure or

1205
00:45:31,839 --> 00:45:34,720
systems when when you have like cvs for

1206
00:45:34,720 --> 00:45:37,680
for windows for uh red hat whatever and

1207
00:45:37,680 --> 00:45:39,440
it's it's coming live and then there is

1208
00:45:39,440 --> 00:45:41,280
a pipe there is second there is another

1209
00:45:41,280 --> 00:45:42,319
team

1210
00:45:42,319 --> 00:45:46,160
uh that's handling that so it's a quite

1211
00:45:46,160 --> 00:45:47,760
challenging

1212
00:45:47,760 --> 00:45:51,760
to bring everyone in uh in one place

1213
00:45:51,760 --> 00:45:54,960
uh it's it's not it's not very easy so

1214
00:45:54,960 --> 00:45:56,480
we we are still

1215
00:45:56,480 --> 00:45:58,079
we are still evolving we are still

1216
00:45:58,079 --> 00:45:59,839
working on

1217
00:45:59,839 --> 00:46:02,000
on that in our company i cannot tell you

1218
00:46:02,000 --> 00:46:04,480
how because it's not about our company

1219
00:46:04,480 --> 00:46:05,520
but

1220
00:46:05,520 --> 00:46:07,839
it's uh it's very it's very quite

1221
00:46:07,839 --> 00:46:10,079
challenging right you can you can you

1222
00:46:10,079 --> 00:46:12,160
can see so like uh

1223
00:46:12,160 --> 00:46:14,319
try try ask your colleagues who want to

1224
00:46:14,319 --> 00:46:16,400
go for a lunch and ask what they want

1225
00:46:16,400 --> 00:46:18,240
like and you have a 10 people

1226
00:46:18,240 --> 00:46:19,920
12 different answer and you need to

1227
00:46:19,920 --> 00:46:21,599
coordinate right and right now in this

1228
00:46:21,599 --> 00:46:23,599
organization we have a

1229
00:46:23,599 --> 00:46:25,599
three or four different teams that they

1230
00:46:25,599 --> 00:46:27,119
generate uh

1231
00:46:27,119 --> 00:46:29,280
hundreds well maybe hundreds not but

1232
00:46:29,280 --> 00:46:32,480
thousands of of reports per uh per month

1233
00:46:32,480 --> 00:46:34,960
right so this is kind of uh

1234
00:46:34,960 --> 00:46:36,960
kind of challenging and of course diff

1235
00:46:36,960 --> 00:46:39,440
different teams has uh like uh different

1236
00:46:39,440 --> 00:46:42,880
approaches uh a different even even

1237
00:46:42,880 --> 00:46:45,359
different report is a problem right like

1238
00:46:45,359 --> 00:46:46,960
different templates

1239
00:46:46,960 --> 00:46:48,560
different things are coming from

1240
00:46:48,560 --> 00:46:50,240
vulnerability scanning different things

1241
00:46:50,240 --> 00:46:52,400
are coming from us right we provide

1242
00:46:52,400 --> 00:46:54,160
different evidencing the vulnerability

1243
00:46:54,160 --> 00:46:55,680
scanning provide different evidencing

1244
00:46:55,680 --> 00:46:57,200
the code scanning

1245
00:46:57,200 --> 00:46:59,119
provides completely different evidencing

1246
00:46:59,119 --> 00:47:00,640
and they are

1247
00:47:00,640 --> 00:47:03,599
performed in different ways so it's uh

1248
00:47:03,599 --> 00:47:05,760
it's unfortunately it's not

1249
00:47:05,760 --> 00:47:08,560
not easy to manage and there is no

1250
00:47:08,560 --> 00:47:11,440
one golden recipe that i can provide you

1251
00:47:11,440 --> 00:47:14,800
to to have it uh build correctly in one

1252
00:47:14,800 --> 00:47:16,079
month right

1253
00:47:16,079 --> 00:47:17,760
it's a process

1254
00:47:17,760 --> 00:47:19,599
absolutely absolutely i was just about

1255
00:47:19,599 --> 00:47:21,760
to highlight that the value of process

1256
00:47:21,760 --> 00:47:23,760
and the fact that standardization is

1257
00:47:23,760 --> 00:47:25,920
difficult to achieve when you have so

1258
00:47:25,920 --> 00:47:27,839
many components working together and

1259
00:47:27,839 --> 00:47:30,880
it's basically the game of moving parts

1260
00:47:30,880 --> 00:47:33,040
that's constantly changing so

1261
00:47:33,040 --> 00:47:35,280
specialization coupled with hopefully

1262
00:47:35,280 --> 00:47:36,880
good communication

1263
00:47:36,880 --> 00:47:38,800
can help alleviate some of those

1264
00:47:38,800 --> 00:47:40,160
problems

1265
00:47:40,160 --> 00:47:42,400
exactly and well i can come to the dev

1266
00:47:42,400 --> 00:47:44,400
camp in five years and answer to that

1267
00:47:44,400 --> 00:47:46,240
question

1268
00:47:46,240 --> 00:47:48,000
fingers crossed i hope you found a

1269
00:47:48,000 --> 00:47:50,480
solution before then

1270
00:47:50,480 --> 00:47:53,599
of course of course right

1271
00:47:53,599 --> 00:47:55,200
thank you both for being here and for

1272
00:47:55,200 --> 00:47:57,119
sharing your your experience and being

1273
00:47:57,119 --> 00:47:59,119
so generous with us we really appreciate

1274
00:47:59,119 --> 00:48:00,160
it

1275
00:48:00,160 --> 00:48:02,000
thank you thank you very much and have a

1276
00:48:02,000 --> 00:48:03,359
good day and

1277
00:48:03,359 --> 00:48:06,759
have a good conference

