1
00:00:11,920 --> 00:00:14,240
okay hello and happy saturday everyone

2
00:00:14,240 --> 00:00:16,160
so i wanted to just say a great thank

3
00:00:16,160 --> 00:00:18,560
you to all of our sponsors and i'm so

4
00:00:18,560 --> 00:00:21,119
thrilled to have with us here maria and

5
00:00:21,119 --> 00:00:23,119
she was speaking about information

6
00:00:23,119 --> 00:00:25,439
leakage i will sign off and she will

7
00:00:25,439 --> 00:00:28,400
take it away

8
00:00:28,640 --> 00:00:30,800
hi thank you for joining me today my

9
00:00:30,800 --> 00:00:32,880
name is maria harado and a little

10
00:00:32,880 --> 00:00:35,920
something about me i'm a phd student at

11
00:00:35,920 --> 00:00:37,520
the florida international university in

12
00:00:37,520 --> 00:00:40,079
miami i study computer science and

13
00:00:40,079 --> 00:00:41,760
specifically i study leakage i've been

14
00:00:41,760 --> 00:00:43,680
doing this for the last four years

15
00:00:43,680 --> 00:00:46,879
so let's go ahead and just jump right in

16
00:00:46,879 --> 00:00:48,559
so i'm sure many of you have heard about

17
00:00:48,559 --> 00:00:51,520
strava a social fitness app with a great

18
00:00:51,520 --> 00:00:53,039
gps heat map

19
00:00:53,039 --> 00:00:54,559
the steam map was so good that it

20
00:00:54,559 --> 00:00:56,239
revealed the location of suspected

21
00:00:56,239 --> 00:00:57,840
military sites i'll walk through how

22
00:00:57,840 --> 00:01:00,399
this happened really quickly

23
00:01:00,399 --> 00:01:02,719
so here we have a heat map corresponding

24
00:01:02,719 --> 00:01:04,319
to the running and swimming routes of

25
00:01:04,319 --> 00:01:05,920
people using the strava fitness app

26
00:01:05,920 --> 00:01:08,479
which is often used with fitbits

27
00:01:08,479 --> 00:01:10,640
i've taken the liberty of outlining

28
00:01:10,640 --> 00:01:12,720
afghanistan and purple and we can see

29
00:01:12,720 --> 00:01:14,880
just a few small dots here and there

30
00:01:14,880 --> 00:01:16,960
everything is else is so dark that these

31
00:01:16,960 --> 00:01:18,880
like really stand out

32
00:01:18,880 --> 00:01:20,960
so what happens when we zoom in on this

33
00:01:20,960 --> 00:01:23,759
dot right here

34
00:01:23,759 --> 00:01:25,920
we see camp dwyer a u.s forward

35
00:01:25,920 --> 00:01:28,000
operating base in afghanistan and with

36
00:01:28,000 --> 00:01:29,520
the satellite view

37
00:01:29,520 --> 00:01:30,640
we can

38
00:01:30,640 --> 00:01:32,640
zoom in and see the individual rotors of

39
00:01:32,640 --> 00:01:34,960
the planes so although the exact

40
00:01:34,960 --> 00:01:36,880
coordinates of the base and airport are

41
00:01:36,880 --> 00:01:38,720
available on wikipedia

42
00:01:38,720 --> 00:01:40,960
this base will not show up in google or

43
00:01:40,960 --> 00:01:42,399
apple maps

44
00:01:42,399 --> 00:01:44,640
so the strava heat map is an intuitive

45
00:01:44,640 --> 00:01:46,880
example of information leakage

46
00:01:46,880 --> 00:01:48,720
revealing something fun like the common

47
00:01:48,720 --> 00:01:50,640
running paths in your neighborhood also

48
00:01:50,640 --> 00:01:52,399
reveal the locations of sensitive

49
00:01:52,399 --> 00:01:55,840
military bases the key word here is

50
00:01:55,840 --> 00:01:57,920
correlation

51
00:01:57,920 --> 00:02:00,640
okay but to make things more complicated

52
00:02:00,640 --> 00:02:02,640
sometimes we reveal information on

53
00:02:02,640 --> 00:02:04,399
purpose

54
00:02:04,399 --> 00:02:07,119
consider a vulnerability in a system

55
00:02:07,119 --> 00:02:08,239
a company finds out about the

56
00:02:08,239 --> 00:02:09,440
vulnerability

57
00:02:09,440 --> 00:02:10,878
what do they do next if they're

58
00:02:10,878 --> 00:02:12,239
responsible

59
00:02:12,239 --> 00:02:14,000
they develop a patch and push it to all

60
00:02:14,000 --> 00:02:15,680
the vulnerable systems and what do we do

61
00:02:15,680 --> 00:02:17,120
as users

62
00:02:17,120 --> 00:02:19,440
update next week again and again or

63
00:02:19,440 --> 00:02:21,200
maybe versus admins and we're concerned

64
00:02:21,200 --> 00:02:22,720
that it'll break something else and so

65
00:02:22,720 --> 00:02:23,920
we wait

66
00:02:23,920 --> 00:02:26,080
so the patch doesn't get applied

67
00:02:26,080 --> 00:02:27,599
you know who was paying attention to the

68
00:02:27,599 --> 00:02:29,760
patch release

69
00:02:29,760 --> 00:02:31,360
attackers

70
00:02:31,360 --> 00:02:33,200
some patch releases tell them there's a

71
00:02:33,200 --> 00:02:35,200
crucial vulnerability somewhere and

72
00:02:35,200 --> 00:02:36,720
sometimes with the help of some reverse

73
00:02:36,720 --> 00:02:39,920
engineering tells them how to exploit it

74
00:02:39,920 --> 00:02:42,000
a patch represents information that we

75
00:02:42,000 --> 00:02:43,599
want people to know

76
00:02:43,599 --> 00:02:44,959
and even though it's intentional

77
00:02:44,959 --> 00:02:48,840
information release it still helps an

78
00:02:48,840 --> 00:02:51,519
attacker so we can see that information

79
00:02:51,519 --> 00:02:53,920
is like water it's hard to control

80
00:02:53,920 --> 00:02:55,280
so we have two different definitions

81
00:02:55,280 --> 00:02:57,280
here the first one is information flow

82
00:02:57,280 --> 00:03:00,080
which we define as information moving

83
00:03:00,080 --> 00:03:02,400
from a source who knows the information

84
00:03:02,400 --> 00:03:04,400
to a target who doesn't

85
00:03:04,400 --> 00:03:06,080
and some information flow is

86
00:03:06,080 --> 00:03:07,519
unintentional

87
00:03:07,519 --> 00:03:10,080
unavoidable or inevitable and sometimes

88
00:03:10,080 --> 00:03:11,599
it gets to who we want it to get to and

89
00:03:11,599 --> 00:03:13,840
sometimes it doesn't but we want is to

90
00:03:13,840 --> 00:03:15,920
control it to make sure that it gets to

91
00:03:15,920 --> 00:03:17,440
who we want to have it and keep it from

92
00:03:17,440 --> 00:03:19,360
those who we don't

93
00:03:19,360 --> 00:03:21,360
so what's leakage then

94
00:03:21,360 --> 00:03:23,599
information leakage is when observable

95
00:03:23,599 --> 00:03:25,440
information can be correlated with a

96
00:03:25,440 --> 00:03:26,720
secret

97
00:03:26,720 --> 00:03:28,959
information flows from a secret to

98
00:03:28,959 --> 00:03:30,959
something observable and we have to ask

99
00:03:30,959 --> 00:03:32,959
if that flow is acceptable

100
00:03:32,959 --> 00:03:35,120
so for both of these examples we have

101
00:03:35,120 --> 00:03:37,040
the feeling that they're bad somehow but

102
00:03:37,040 --> 00:03:40,640
we would like to know how bad

103
00:03:40,720 --> 00:03:42,799
so today i want you to come away knowing

104
00:03:42,799 --> 00:03:44,480
a simple framework for thinking about

105
00:03:44,480 --> 00:03:45,519
leakage

106
00:03:45,519 --> 00:03:47,360
knowing how you can calculate

107
00:03:47,360 --> 00:03:49,040
information leakage and what goes into

108
00:03:49,040 --> 00:03:51,120
this calculation and that you can apply

109
00:03:51,120 --> 00:03:52,879
this framework to relevant problems to

110
00:03:52,879 --> 00:03:54,959
compare systems reason about trade-offs

111
00:03:54,959 --> 00:03:56,959
between security and functionality and

112
00:03:56,959 --> 00:03:59,519
reduce your attack surface

113
00:03:59,519 --> 00:04:02,480
before we dive in let's get some very

114
00:04:02,480 --> 00:04:04,080
let's get some history here and look at

115
00:04:04,080 --> 00:04:07,120
a brief academic timeline

116
00:04:07,120 --> 00:04:10,400
okay so modern information flow security

117
00:04:10,400 --> 00:04:12,720
work starts in the 1970s

118
00:04:12,720 --> 00:04:14,319
when bella and lapadula who were working

119
00:04:14,319 --> 00:04:16,720
for mitre devised an access control

120
00:04:16,720 --> 00:04:19,040
model for classified information

121
00:04:19,040 --> 00:04:20,880
so simply the idea was to protect

122
00:04:20,880 --> 00:04:22,560
classified secrets by ensuring that

123
00:04:22,560 --> 00:04:24,320
those who know a higher classification

124
00:04:24,320 --> 00:04:26,639
of data can reveal what they know by

125
00:04:26,639 --> 00:04:28,639
writing it to people who don't

126
00:04:28,639 --> 00:04:30,720
and those who know less shouldn't learn

127
00:04:30,720 --> 00:04:33,280
the seeker information by reading it

128
00:04:33,280 --> 00:04:36,800
or write up read down

129
00:04:36,800 --> 00:04:39,120
a decade later this principle becomes

130
00:04:39,120 --> 00:04:40,840
codified in the concept of

131
00:04:40,840 --> 00:04:42,639
non-interference

132
00:04:42,639 --> 00:04:44,720
which means that the public output of a

133
00:04:44,720 --> 00:04:46,720
program shouldn't tell you anything

134
00:04:46,720 --> 00:04:49,120
about the secret input

135
00:04:49,120 --> 00:04:50,560
but the requirements to meet

136
00:04:50,560 --> 00:04:52,479
non-interference were really strict the

137
00:04:52,479 --> 00:04:54,560
idea was that if the output had any

138
00:04:54,560 --> 00:04:56,960
dependence on the secret at all that the

139
00:04:56,960 --> 00:04:58,720
secret was unsafe

140
00:04:58,720 --> 00:05:00,479
the system was unsafe but you can think

141
00:05:00,479 --> 00:05:02,639
about vote counts for a second

142
00:05:02,639 --> 00:05:04,880
the vote tali tells you who won the

143
00:05:04,880 --> 00:05:06,880
office and this is directly dependent on

144
00:05:06,880 --> 00:05:08,880
the secret vote so in this case it's

145
00:05:08,880 --> 00:05:11,919
necessary to be dependent on the secret

146
00:05:11,919 --> 00:05:14,240
so in the 90s researchers decided that

147
00:05:14,240 --> 00:05:16,320
the earlier requirements on dependents

148
00:05:16,320 --> 00:05:18,080
were too strict

149
00:05:18,080 --> 00:05:19,440
there are trade-offs that we need to

150
00:05:19,440 --> 00:05:21,360
make between security and function and

151
00:05:21,360 --> 00:05:23,199
to evaluate these systems we need to

152
00:05:23,199 --> 00:05:25,199
move past the binary and move to a

153
00:05:25,199 --> 00:05:26,960
nuanced understanding

154
00:05:26,960 --> 00:05:29,680
with the ability to evaluate tolerable

155
00:05:29,680 --> 00:05:31,759
insecurity

156
00:05:31,759 --> 00:05:33,520
for example we want to make informed

157
00:05:33,520 --> 00:05:35,360
policy decisions based on statistical

158
00:05:35,360 --> 00:05:37,280
databases without hurting privacy and

159
00:05:37,280 --> 00:05:38,720
these are real trade-offs that we have

160
00:05:38,720 --> 00:05:40,720
to evaluate

161
00:05:40,720 --> 00:05:43,039
so at this point the question shifted

162
00:05:43,039 --> 00:05:46,479
to how much does information flow

163
00:05:46,479 --> 00:05:48,000
early attempts to answer this question

164
00:05:48,000 --> 00:05:49,600
relied on concepts borrowed from

165
00:05:49,600 --> 00:05:51,680
information theory like mutual

166
00:05:51,680 --> 00:05:54,160
information and shannon entropy

167
00:05:54,160 --> 00:05:55,600
the problem was that these measurements

168
00:05:55,600 --> 00:05:56,960
didn't provide an operational

169
00:05:56,960 --> 00:05:58,720
significance they didn't really reflect

170
00:05:58,720 --> 00:06:01,120
how vulnerable a secret was to a given

171
00:06:01,120 --> 00:06:03,039
attack

172
00:06:03,039 --> 00:06:05,280
so in the 2000s the argument was made

173
00:06:05,280 --> 00:06:07,039
that there are better measures like min

174
00:06:07,039 --> 00:06:09,280
entropy that reflect how vulnerable a

175
00:06:09,280 --> 00:06:11,520
seeker is to a particular attack

176
00:06:11,520 --> 00:06:13,440
and with measures like these were able

177
00:06:13,440 --> 00:06:16,080
to meaningfully compare systems

178
00:06:16,080 --> 00:06:18,000
and just last year some of the top

179
00:06:18,000 --> 00:06:20,319
academics in the space collected all

180
00:06:20,319 --> 00:06:21,680
their theories and unified their

181
00:06:21,680 --> 00:06:23,520
notation into a textbook reflecting the

182
00:06:23,520 --> 00:06:25,919
state of the art called the science of

183
00:06:25,919 --> 00:06:28,319
quantitative information flow and it's

184
00:06:28,319 --> 00:06:29,600
from this work that i'm going to talk

185
00:06:29,600 --> 00:06:32,840
about today

186
00:06:34,479 --> 00:06:37,759
information flow or qif models a system

187
00:06:37,759 --> 00:06:39,759
as a channel that takes in a secret

188
00:06:39,759 --> 00:06:42,720
input and outputs something observable

189
00:06:42,720 --> 00:06:44,319
so secrets can be anything that we would

190
00:06:44,319 --> 00:06:46,160
like to keep secret from medical

191
00:06:46,160 --> 00:06:49,280
diagnosis pii passwords votes salaries

192
00:06:49,280 --> 00:06:51,120
encrypted messages

193
00:06:51,120 --> 00:06:53,360
observable outputs are anything that an

194
00:06:53,360 --> 00:06:55,759
adversary can observe that's correlated

195
00:06:55,759 --> 00:06:57,039
with the secret

196
00:06:57,039 --> 00:06:59,039
so when we hear about an email leak this

197
00:06:59,039 --> 00:07:01,120
is a blatant example of leakage the

198
00:07:01,120 --> 00:07:04,560
observable output is the secret itself

199
00:07:04,560 --> 00:07:06,240
but there are more subtle leaks

200
00:07:06,240 --> 00:07:07,759
information that's not obviously

201
00:07:07,759 --> 00:07:09,759
correlated with the secret but can still

202
00:07:09,759 --> 00:07:12,080
help an adversary like side channels

203
00:07:12,080 --> 00:07:12,800
from

204
00:07:12,800 --> 00:07:15,599
heat time and electrical consumption

205
00:07:15,599 --> 00:07:17,840
so there's this flow here from secrets

206
00:07:17,840 --> 00:07:20,240
to observable information and we want to

207
00:07:20,240 --> 00:07:22,880
quantify this flow to decide if the flow

208
00:07:22,880 --> 00:07:26,479
is dangerous or tolerable

209
00:07:26,960 --> 00:07:28,720
okay so i won't go into a lot of detail

210
00:07:28,720 --> 00:07:31,360
on this today but qif does integrate

211
00:07:31,360 --> 00:07:33,360
adversarial goals and constraints which

212
00:07:33,360 --> 00:07:35,039
allow us to mathematically formalize

213
00:07:35,039 --> 00:07:36,639
threat modeling

214
00:07:36,639 --> 00:07:38,160
so some questions that we can model with

215
00:07:38,160 --> 00:07:41,520
qif are what are an adversary's goals

216
00:07:41,520 --> 00:07:43,360
do they want to know the secret exactly

217
00:07:43,360 --> 00:07:44,720
or are they satisfied with knowing it

218
00:07:44,720 --> 00:07:46,319
approximately

219
00:07:46,319 --> 00:07:48,160
what are an adversary's abilities and

220
00:07:48,160 --> 00:07:49,680
constraints do they have multiple

221
00:07:49,680 --> 00:07:52,720
chances what are their limitations

222
00:07:52,720 --> 00:07:54,400
what's the cost to an adversary will

223
00:07:54,400 --> 00:07:56,639
they be penalized for guessing wrong do

224
00:07:56,639 --> 00:07:57,919
they win more if they guess about a

225
00:07:57,919 --> 00:07:59,840
particular secret like jeff bezos

226
00:07:59,840 --> 00:08:01,840
account number

227
00:08:01,840 --> 00:08:03,680
okay so let's return to this java

228
00:08:03,680 --> 00:08:05,440
example and see how it fits within the

229
00:08:05,440 --> 00:08:08,080
qif model

230
00:08:08,080 --> 00:08:10,560
so here the secret input is the location

231
00:08:10,560 --> 00:08:12,479
of a u.s forward operating base

232
00:08:12,479 --> 00:08:14,400
and the observable output is a heat map

233
00:08:14,400 --> 00:08:16,160
showing running paths

234
00:08:16,160 --> 00:08:18,080
so as shown by nathan russer back in

235
00:08:18,080 --> 00:08:20,639
2018 this was enough information to

236
00:08:20,639 --> 00:08:22,400
reveal the base location

237
00:08:22,400 --> 00:08:24,319
as well as other theorized safe houses

238
00:08:24,319 --> 00:08:27,680
and other nations military bases

239
00:08:27,680 --> 00:08:29,599
similarly for the patching example the

240
00:08:29,599 --> 00:08:31,759
secret input is the existence of a

241
00:08:31,759 --> 00:08:34,320
vulnerability and the observable output

242
00:08:34,320 --> 00:08:35,679
is a patch

243
00:08:35,679 --> 00:08:37,360
sometimes the patch does give an

244
00:08:37,360 --> 00:08:39,120
attacker enough information to learn

245
00:08:39,120 --> 00:08:41,760
about and exploit the vulnerability

246
00:08:41,760 --> 00:08:43,519
okay so now we know the qif model of

247
00:08:43,519 --> 00:08:45,600
information flow and we can start

248
00:08:45,600 --> 00:08:48,560
measuring leakage

249
00:08:48,640 --> 00:08:51,360
our goal here is to isolate the effect

250
00:08:51,360 --> 00:08:53,680
of the channel to determine how it

251
00:08:53,680 --> 00:08:57,200
affected the vulnerability of our secret

252
00:08:57,200 --> 00:08:59,360
using qif means we don't have to rely on

253
00:08:59,360 --> 00:09:00,880
our intuition to tell us how bad

254
00:09:00,880 --> 00:09:02,800
something is so let's start with a high

255
00:09:02,800 --> 00:09:06,120
level overview

256
00:09:08,320 --> 00:09:10,000
we have two measurements that we use to

257
00:09:10,000 --> 00:09:11,920
isolate the effect of the system

258
00:09:11,920 --> 00:09:14,959
the first is prior vulnerability

259
00:09:14,959 --> 00:09:16,959
which is an adversary's probability of

260
00:09:16,959 --> 00:09:19,200
succeeding at a given task

261
00:09:19,200 --> 00:09:21,120
when they only know the distribution on

262
00:09:21,120 --> 00:09:23,120
the secrets so the attacker hasn't

263
00:09:23,120 --> 00:09:25,200
observed anything yet

264
00:09:25,200 --> 00:09:27,200
the second measure is posterior

265
00:09:27,200 --> 00:09:29,279
vulnerability which is an adversary's

266
00:09:29,279 --> 00:09:31,440
probability of success when they know

267
00:09:31,440 --> 00:09:33,600
the distribution on the secrets and can

268
00:09:33,600 --> 00:09:35,680
observe the output

269
00:09:35,680 --> 00:09:37,680
an important point here is that there

270
00:09:37,680 --> 00:09:39,519
are generally many outputs that an

271
00:09:39,519 --> 00:09:41,519
adversary can observe and we would like

272
00:09:41,519 --> 00:09:43,200
to account for all of them so you can

273
00:09:43,200 --> 00:09:45,040
think about an output as something that

274
00:09:45,040 --> 00:09:46,720
lets the adversary narrow down what the

275
00:09:46,720 --> 00:09:47,920
secret is

276
00:09:47,920 --> 00:09:49,360
different outputs let the adversary

277
00:09:49,360 --> 00:09:51,120
narrow down the secret in different ways

278
00:09:51,120 --> 00:09:53,200
which we need to account for

279
00:09:53,200 --> 00:09:54,959
okay so functionally we can think of

280
00:09:54,959 --> 00:09:56,800
posterior vulnerability as a weighted

281
00:09:56,800 --> 00:09:57,920
average

282
00:09:57,920 --> 00:10:00,160
of how likely an adversary is to succeed

283
00:10:00,160 --> 00:10:01,839
when they can observe the correlated

284
00:10:01,839 --> 00:10:04,399
output

285
00:10:04,399 --> 00:10:05,839
so we're thinking about these two terms

286
00:10:05,839 --> 00:10:08,240
prior vulnerability is basically how

287
00:10:08,240 --> 00:10:09,600
well an attacker would do if they're

288
00:10:09,600 --> 00:10:11,680
sitting at their desk planning out their

289
00:10:11,680 --> 00:10:12,560
attack

290
00:10:12,560 --> 00:10:14,320
while posterior vulnerability is the

291
00:10:14,320 --> 00:10:16,000
average of how they do once they launch

292
00:10:16,000 --> 00:10:17,519
their attack and can actually see what's

293
00:10:17,519 --> 00:10:19,519
going on

294
00:10:19,519 --> 00:10:21,839
so with these two we actually want to

295
00:10:21,839 --> 00:10:24,240
calculate how much the secret the system

296
00:10:24,240 --> 00:10:26,240
increased or decreased the secret's

297
00:10:26,240 --> 00:10:27,600
vulnerability

298
00:10:27,600 --> 00:10:30,079
so we define leakage as the difference

299
00:10:30,079 --> 00:10:31,600
between prior and posterior

300
00:10:31,600 --> 00:10:32,720
vulnerability

301
00:10:32,720 --> 00:10:34,880
and this is how we can isolate how a

302
00:10:34,880 --> 00:10:38,160
system affects a secret input

303
00:10:38,160 --> 00:10:40,640
let's go through an example

304
00:10:40,640 --> 00:10:42,079
so you're in charge of buying the locks

305
00:10:42,079 --> 00:10:43,600
for a new warehouse

306
00:10:43,600 --> 00:10:44,800
should you get the traditional

307
00:10:44,800 --> 00:10:47,279
keypadlock with the buttons or the fancy

308
00:10:47,279 --> 00:10:49,519
one with the flat touch screen that cost

309
00:10:49,519 --> 00:10:52,480
thirty dollars more

310
00:10:52,480 --> 00:10:54,240
so to model this under the q i a

311
00:10:54,240 --> 00:10:56,079
framework we first need to identify what

312
00:10:56,079 --> 00:10:57,600
our secret is

313
00:10:57,600 --> 00:10:59,920
in this case we know it's going to be a

314
00:10:59,920 --> 00:11:03,040
four-digit code that opens the door

315
00:11:03,040 --> 00:11:04,880
we can also identify our at our

316
00:11:04,880 --> 00:11:07,519
adversary and so for now we will

317
00:11:07,519 --> 00:11:09,760
consider what we call a bayes adversary

318
00:11:09,760 --> 00:11:11,279
which corresponds to somebody who's

319
00:11:11,279 --> 00:11:12,959
guessing the entire secret correctly in

320
00:11:12,959 --> 00:11:15,360
one try this adversary is a good place

321
00:11:15,360 --> 00:11:17,279
to start it's simple it's operationally

322
00:11:17,279 --> 00:11:19,279
significant and it has the advantage of

323
00:11:19,279 --> 00:11:21,760
being related to other leakage measures

324
00:11:21,760 --> 00:11:23,440
it's also ambitious there are a lot of

325
00:11:23,440 --> 00:11:24,800
cases when we're concerned about

326
00:11:24,800 --> 00:11:26,880
adversaries who are satisfied with a lot

327
00:11:26,880 --> 00:11:27,680
less

328
00:11:27,680 --> 00:11:29,040
and we'll consider one of those weaker

329
00:11:29,040 --> 00:11:31,440
adversaries later on

330
00:11:31,440 --> 00:11:33,680
okay so let's look at the exact steps we

331
00:11:33,680 --> 00:11:37,920
need to calculate bayes leakage

332
00:11:37,920 --> 00:11:40,240
here's our algorithm a recipe

333
00:11:40,240 --> 00:11:41,600
we'll walk through these steps one by

334
00:11:41,600 --> 00:11:43,440
one but for the moment keep in mind that

335
00:11:43,440 --> 00:11:45,839
to calculate leakage we need the prior

336
00:11:45,839 --> 00:11:47,760
vulnerability and the posterior

337
00:11:47,760 --> 00:11:51,360
vulnerability highlighted in green

338
00:11:51,360 --> 00:11:53,600
let's start with the first step

339
00:11:53,600 --> 00:11:55,920
so the qif framework makes the worst

340
00:11:55,920 --> 00:11:57,920
case assumption that an adversary knows

341
00:11:57,920 --> 00:12:00,160
the distribution on secrets and uses

342
00:12:00,160 --> 00:12:02,079
this to inform their decisions

343
00:12:02,079 --> 00:12:04,000
so we need to find a distribution that

344
00:12:04,000 --> 00:12:06,560
corresponds to our secret

345
00:12:06,560 --> 00:12:08,160
for some secrets we can make the

346
00:12:08,160 --> 00:12:09,360
assumption that all secrets are

347
00:12:09,360 --> 00:12:11,440
uniformly likely but we know for key

348
00:12:11,440 --> 00:12:13,360
codes that this isn't the case

349
00:12:13,360 --> 00:12:15,680
some of our 10 000 possible key codes

350
00:12:15,680 --> 00:12:18,560
are much more likely than others

351
00:12:18,560 --> 00:12:20,800
thankfully kind of there's a lot of data

352
00:12:20,800 --> 00:12:22,800
breaches with this information

353
00:12:22,800 --> 00:12:25,760
for example there's the rocky data set

354
00:12:25,760 --> 00:12:27,440
they made widgets back for myspace back

355
00:12:27,440 --> 00:12:30,880
in the day and in 2008 32 million user

356
00:12:30,880 --> 00:12:32,720
accounts stored in plain text got

357
00:12:32,720 --> 00:12:33,600
breached

358
00:12:33,600 --> 00:12:36,320
this data contained 28 million key codes

359
00:12:36,320 --> 00:12:38,720
and this nice page on github has the key

360
00:12:38,720 --> 00:12:40,720
code frequencies from which we can get

361
00:12:40,720 --> 00:12:43,519
the distribution on the secrets

362
00:12:43,519 --> 00:12:44,959
so here's a graph representing that

363
00:12:44,959 --> 00:12:46,880
information and so now we have the

364
00:12:46,880 --> 00:12:49,040
distribution on our secrets step one

365
00:12:49,040 --> 00:12:50,079
complete

366
00:12:50,079 --> 00:12:50,839
now

367
00:12:50,839 --> 00:12:53,519
what step two

368
00:12:53,519 --> 00:12:55,519
determine the prior vulnerability by

369
00:12:55,519 --> 00:12:57,519
picking the most likely secret from the

370
00:12:57,519 --> 00:12:58,959
distribution

371
00:12:58,959 --> 00:13:00,480
okay so let's go back to our

372
00:13:00,480 --> 00:13:02,959
distribution

373
00:13:02,959 --> 00:13:04,959
to understand prior vulnerability you

374
00:13:04,959 --> 00:13:06,399
can think about an adversary who's

375
00:13:06,399 --> 00:13:07,760
sitting at home they're not at the

376
00:13:07,760 --> 00:13:09,839
warehouse yet they're just prepping for

377
00:13:09,839 --> 00:13:12,000
the heist they went online and also saw

378
00:13:12,000 --> 00:13:13,360
this distribution

379
00:13:13,360 --> 00:13:15,279
if they're trying to guess your key code

380
00:13:15,279 --> 00:13:16,880
what do they do

381
00:13:16,880 --> 00:13:18,639
well we can see from this graph that

382
00:13:18,639 --> 00:13:20,320
there are three codes that are much more

383
00:13:20,320 --> 00:13:22,480
likely than the other ten thousand

384
00:13:22,480 --> 00:13:24,240
one two three four has over a two

385
00:13:24,240 --> 00:13:26,480
percent probability and then two three

386
00:13:26,480 --> 00:13:29,120
four five and three four five six

387
00:13:29,120 --> 00:13:30,480
we're going to assume that a smart

388
00:13:30,480 --> 00:13:32,720
adversary guessing the secret will pick

389
00:13:32,720 --> 00:13:34,399
the most likely one

390
00:13:34,399 --> 00:13:36,320
so our thief should guess the most

391
00:13:36,320 --> 00:13:37,760
likely code

392
00:13:37,760 --> 00:13:39,279
one two three four

393
00:13:39,279 --> 00:13:41,600
and they'll be right just under

394
00:13:41,600 --> 00:13:44,320
2.5 percent of the time this is the

395
00:13:44,320 --> 00:13:46,480
prior base vulnerability

396
00:13:46,480 --> 00:13:47,360
okay

397
00:13:47,360 --> 00:13:50,079
so now we have the first measure done

398
00:13:50,079 --> 00:13:52,560
onto step three

399
00:13:52,560 --> 00:13:53,760
outputs

400
00:13:53,760 --> 00:13:55,519
we haven't even talked about outputs yet

401
00:13:55,519 --> 00:13:58,880
what's the output let's start there

402
00:13:59,519 --> 00:14:01,440
so while we're looking at keypads we go

403
00:14:01,440 --> 00:14:03,279
online and see this picture from a bruce

404
00:14:03,279 --> 00:14:06,320
schneier blog back in 2009

405
00:14:06,320 --> 00:14:08,880
oh okay so if we use the keypad enough

406
00:14:08,880 --> 00:14:11,120
the keys can get worn down

407
00:14:11,120 --> 00:14:13,040
how bad is this

408
00:14:13,040 --> 00:14:14,639
well in the picture the numbers worn

409
00:14:14,639 --> 00:14:18,240
down are 1 6 8 and 9.

410
00:14:18,240 --> 00:14:20,800
well now the adversary doesn't have 10

411
00:14:20,800 --> 00:14:22,399
000 candidates for the key code they

412
00:14:22,399 --> 00:14:24,800
only have 24

413
00:14:24,800 --> 00:14:26,800
but this is only one set of keys that

414
00:14:26,800 --> 00:14:29,040
could get worn down if the admin at the

415
00:14:29,040 --> 00:14:31,199
site chooses a different password then

416
00:14:31,199 --> 00:14:32,800
different keys could get worn down over

417
00:14:32,800 --> 00:14:33,920
time

418
00:14:33,920 --> 00:14:36,959
so if 4 6 and 7 are worn down

419
00:14:36,959 --> 00:14:39,120
then our attacker has 36 candidates for

420
00:14:39,120 --> 00:14:40,399
the secret

421
00:14:40,399 --> 00:14:42,800
if for example 2 and 5 are worn down

422
00:14:42,800 --> 00:14:44,480
then our adversary has to pick between

423
00:14:44,480 --> 00:14:46,160
14 codes

424
00:14:46,160 --> 00:14:48,560
and if only the three is worn down then

425
00:14:48,560 --> 00:14:50,320
the adversary knows for sure that the

426
00:14:50,320 --> 00:14:54,160
secret code was three three three three

427
00:14:54,160 --> 00:14:56,639
there's a lot of possible observations

428
00:14:56,639 --> 00:14:59,040
that an adversary can can make from this

429
00:14:59,040 --> 00:15:00,800
information in fact

430
00:15:00,800 --> 00:15:04,000
there are 385 possible combinations of

431
00:15:04,000 --> 00:15:06,000
keys that could get worn down for four

432
00:15:06,000 --> 00:15:08,079
digit code and we would like to account

433
00:15:08,079 --> 00:15:10,800
for all of them

434
00:15:11,279 --> 00:15:13,120
so now we've defined our input and

435
00:15:13,120 --> 00:15:15,120
output in the qif model

436
00:15:15,120 --> 00:15:17,040
the secret is a four digit code and the

437
00:15:17,040 --> 00:15:19,760
observable output is worn numbers

438
00:15:19,760 --> 00:15:22,000
the button keypad acts as a channel that

439
00:15:22,000 --> 00:15:24,240
allows information to flow from the

440
00:15:24,240 --> 00:15:27,279
secret input to the observable output

441
00:15:27,279 --> 00:15:28,959
is this an acceptable flow how bad is

442
00:15:28,959 --> 00:15:31,439
this really

443
00:15:31,920 --> 00:15:34,240
so now that we've defined our outputs

444
00:15:34,240 --> 00:15:36,800
for every possible output remember there

445
00:15:36,800 --> 00:15:39,440
are 385 we need to do the following

446
00:15:39,440 --> 00:15:40,800
steps

447
00:15:40,800 --> 00:15:42,399
isolate the secrets that could produce

448
00:15:42,399 --> 00:15:43,519
the output

449
00:15:43,519 --> 00:15:45,120
sum their probabilities and get the

450
00:15:45,120 --> 00:15:47,279
probability of that output

451
00:15:47,279 --> 00:15:49,440
normalize these probabilities and pick

452
00:15:49,440 --> 00:15:51,120
the most likely one and so we'll go

453
00:15:51,120 --> 00:15:53,759
through this step by step but

454
00:15:53,759 --> 00:15:55,920
basically for every output we want two

455
00:15:55,920 --> 00:15:56,959
numbers

456
00:15:56,959 --> 00:16:00,000
the probability of the output or po and

457
00:16:00,000 --> 00:16:02,079
the probability of success given that

458
00:16:02,079 --> 00:16:04,160
output or ps

459
00:16:04,160 --> 00:16:05,600
so let's talk about what these two

460
00:16:05,600 --> 00:16:08,720
numbers mean

461
00:16:08,720 --> 00:16:10,160
so the first number we need is the

462
00:16:10,160 --> 00:16:13,680
probability of the output how likely is

463
00:16:13,680 --> 00:16:15,759
that set of numbers going to be worn

464
00:16:15,759 --> 00:16:18,560
down relative to all the other

465
00:16:18,560 --> 00:16:20,240
possibilities

466
00:16:20,240 --> 00:16:21,040
so

467
00:16:21,040 --> 00:16:24,639
a first guess is one in 385

468
00:16:24,639 --> 00:16:28,000
since there are 385 possible outputs but

469
00:16:28,000 --> 00:16:30,079
we know from the rocky u data set that

470
00:16:30,079 --> 00:16:32,720
passcodes are equally likely so numbers

471
00:16:32,720 --> 00:16:35,519
won't get worn down uniformly either so

472
00:16:35,519 --> 00:16:37,199
we need to integrate that rock u

473
00:16:37,199 --> 00:16:40,800
passcode distribution information

474
00:16:40,800 --> 00:16:42,399
the second number that we need is the

475
00:16:42,399 --> 00:16:46,639
probability of success given that output

476
00:16:46,639 --> 00:16:49,519
for example if an adversary does see

477
00:16:49,519 --> 00:16:51,440
that this set of numbers are worn down

478
00:16:51,440 --> 00:16:53,360
the one six eight and nine

479
00:16:53,360 --> 00:16:54,959
what's the chance the adversary will be

480
00:16:54,959 --> 00:16:57,360
able to guess the passcode

481
00:16:57,360 --> 00:16:58,639
for this guess

482
00:16:58,639 --> 00:17:00,000
i mean a first

483
00:17:00,000 --> 00:17:02,160
for this case a good first guess is one

484
00:17:02,160 --> 00:17:04,880
in 24 since there's 24 ways to pick a

485
00:17:04,880 --> 00:17:06,480
four digit passcode from these four

486
00:17:06,480 --> 00:17:09,199
numbers but again that would be the case

487
00:17:09,199 --> 00:17:10,880
if all passcodes were equally likely and

488
00:17:10,880 --> 00:17:12,959
we know that's not the case so we have

489
00:17:12,959 --> 00:17:14,400
to integrate that distribution

490
00:17:14,400 --> 00:17:17,039
information

491
00:17:17,119 --> 00:17:18,640
so i've done the work for us and i'll

492
00:17:18,640 --> 00:17:20,000
show you the results in a minute with

493
00:17:20,000 --> 00:17:21,039
python

494
00:17:21,039 --> 00:17:22,400
uh not by hand

495
00:17:22,400 --> 00:17:24,480
but i do want to walk through these how

496
00:17:24,480 --> 00:17:26,559
we get these two numbers just for the

497
00:17:26,559 --> 00:17:28,480
one six eight and nine click case so we

498
00:17:28,480 --> 00:17:32,200
get a little bit more intuition

499
00:17:32,559 --> 00:17:33,679
okay

500
00:17:33,679 --> 00:17:35,919
step 3.1

501
00:17:35,919 --> 00:17:37,760
remember we're dealing with a 1 6 8 and

502
00:17:37,760 --> 00:17:39,520
9 case okay

503
00:17:39,520 --> 00:17:41,600
isolate the secrets that could produce

504
00:17:41,600 --> 00:17:43,039
this output

505
00:17:43,039 --> 00:17:44,720
we kind of already did this we know

506
00:17:44,720 --> 00:17:46,640
there are 24 codes that could result

507
00:17:46,640 --> 00:17:48,880
with one six eight nine being worn down

508
00:17:48,880 --> 00:17:50,559
that's a lot less than ten thousand so

509
00:17:50,559 --> 00:17:52,160
already our adversary is in a much

510
00:17:52,160 --> 00:17:54,080
better position

511
00:17:54,080 --> 00:17:55,360
now what

512
00:17:55,360 --> 00:17:57,280
we need to integrate that passcode

513
00:17:57,280 --> 00:18:00,280
distribution

514
00:18:00,480 --> 00:18:02,720
step 3.2

515
00:18:02,720 --> 00:18:04,640
sum the probabilities

516
00:18:04,640 --> 00:18:05,840
so let's go back to the chart

517
00:18:05,840 --> 00:18:07,280
representing the distribution of

518
00:18:07,280 --> 00:18:10,160
passcodes from the rocky data breach

519
00:18:10,160 --> 00:18:13,120
so we know that when the keys 1 6 8 and

520
00:18:13,120 --> 00:18:14,480
9 are worn off

521
00:18:14,480 --> 00:18:16,799
the secret must be one of these 24 codes

522
00:18:16,799 --> 00:18:19,600
and i've highlighted these 24 codes in

523
00:18:19,600 --> 00:18:20,799
purple

524
00:18:20,799 --> 00:18:22,640
it's really tiny and at the bottom it's

525
00:18:22,640 --> 00:18:25,360
kind of hard to see

526
00:18:25,760 --> 00:18:28,200
to get the probability of this output of

527
00:18:28,200 --> 00:18:30,640
1689 being worn down

528
00:18:30,640 --> 00:18:32,799
we need to add the probabilities of

529
00:18:32,799 --> 00:18:36,000
these 24 possible secrets together

530
00:18:36,000 --> 00:18:41,080
and when we do that we get .003592

531
00:18:41,520 --> 00:18:44,480
this means that the adversary will see

532
00:18:44,480 --> 00:18:48,000
1 6 8 and 9 worn down about 0.3 percent

533
00:18:48,000 --> 00:18:49,600
of the time

534
00:18:49,600 --> 00:18:51,520
that's useful that's the first number

535
00:18:51,520 --> 00:18:52,880
that we need to calculate for this

536
00:18:52,880 --> 00:18:54,240
output

537
00:18:54,240 --> 00:18:55,520
but beyond this we can't really see

538
00:18:55,520 --> 00:18:57,360
what's going on the numbers are so small

539
00:18:57,360 --> 00:18:59,120
and spread out

540
00:18:59,120 --> 00:19:02,320
so now what we can do is step 3.3 we can

541
00:19:02,320 --> 00:19:05,280
normalize these purple dot numbers which

542
00:19:05,280 --> 00:19:06,960
means we're going to think about these

543
00:19:06,960 --> 00:19:10,080
24 secrets as if there are only options

544
00:19:10,080 --> 00:19:11,760
the idea here is that we want to see

545
00:19:11,760 --> 00:19:13,520
their relative probabilities a little

546
00:19:13,520 --> 00:19:16,160
more clearly

547
00:19:16,720 --> 00:19:18,880
so here are all of our 24 candidates and

548
00:19:18,880 --> 00:19:21,200
only our 24 candidates now we're not

549
00:19:21,200 --> 00:19:23,120
looking at how likely they are to all of

550
00:19:23,120 --> 00:19:25,679
the original 10 000 possibilities but

551
00:19:25,679 --> 00:19:27,120
instead we're just looking at how

552
00:19:27,120 --> 00:19:31,280
relatively likely they are to each other

553
00:19:31,760 --> 00:19:34,400
from this we can see that one code is

554
00:19:34,400 --> 00:19:36,960
far more likely than the rest

555
00:19:36,960 --> 00:19:40,240
1986 1986 is far more likely than any of

556
00:19:40,240 --> 00:19:42,480
the other passcodes

557
00:19:42,480 --> 00:19:44,799
this means that when the adversary sees

558
00:19:44,799 --> 00:19:46,400
one six eight and nine they'll guess

559
00:19:46,400 --> 00:19:49,039
that the secret passcode was 1986 and

560
00:19:49,039 --> 00:19:51,679
they'll be right 38 of the time

561
00:19:51,679 --> 00:19:53,679
so now we've calculated our two numbers

562
00:19:53,679 --> 00:19:55,200
for this output

563
00:19:55,200 --> 00:19:57,039
the probability of the output which is

564
00:19:57,039 --> 00:19:59,840
0.3 percent from the earlier slide

565
00:19:59,840 --> 00:20:01,600
and the probability of success given

566
00:20:01,600 --> 00:20:06,480
this output which is 38 percent

567
00:20:06,480 --> 00:20:08,960
okay so let's go back to our algorithm

568
00:20:08,960 --> 00:20:10,720
for the 1 6 8 and 9 output we've

569
00:20:10,720 --> 00:20:13,120
completed all the sub steps we isolated

570
00:20:13,120 --> 00:20:15,200
the secrets we sum their probabilities

571
00:20:15,200 --> 00:20:17,440
to get the probability of the output we

572
00:20:17,440 --> 00:20:19,120
normalize these probabilities to pick

573
00:20:19,120 --> 00:20:20,480
the most likely one

574
00:20:20,480 --> 00:20:21,760
and get the probability that the

575
00:20:21,760 --> 00:20:25,440
adversary succeeds if they see 1 6 8 and

576
00:20:25,440 --> 00:20:26,960
9 1 down

577
00:20:26,960 --> 00:20:28,720
but the steps need to be done for all of

578
00:20:28,720 --> 00:20:30,720
the outputs so we can sum them up to get

579
00:20:30,720 --> 00:20:33,039
our posterior vulnerability

580
00:20:33,039 --> 00:20:37,760
two numbers for 385 outputs

581
00:20:37,760 --> 00:20:39,520
okay

582
00:20:39,520 --> 00:20:41,120
well here they are

583
00:20:41,120 --> 00:20:42,960
and i know it's a lot you don't have to

584
00:20:42,960 --> 00:20:44,400
look at every single number we'll kind

585
00:20:44,400 --> 00:20:46,080
of walk through it first

586
00:20:46,080 --> 00:20:48,400
so these are sorted by the worn down

587
00:20:48,400 --> 00:20:49,760
keys

588
00:20:49,760 --> 00:20:51,600
um and i know that they're hard to see

589
00:20:51,600 --> 00:20:54,240
but here are the cases when only a

590
00:20:54,240 --> 00:20:56,000
single key is worn down

591
00:20:56,000 --> 00:20:57,679
zero through nine

592
00:20:57,679 --> 00:21:00,080
and here are all the cases when two keys

593
00:21:00,080 --> 00:21:02,960
are worn down and when three keys are

594
00:21:02,960 --> 00:21:04,000
worn down

595
00:21:04,000 --> 00:21:06,880
and when the four keys are worn down

596
00:21:06,880 --> 00:21:09,840
the one six eight and nine case is right

597
00:21:09,840 --> 00:21:12,400
here in green in the seventh column

598
00:21:12,400 --> 00:21:14,080
we can't really see what's going on from

599
00:21:14,080 --> 00:21:15,600
the numbers alone

600
00:21:15,600 --> 00:21:17,440
remember there are two numbers listed

601
00:21:17,440 --> 00:21:18,799
here for every

602
00:21:18,799 --> 00:21:20,720
set of keys that can get worn down so

603
00:21:20,720 --> 00:21:23,679
we're going to graph it

604
00:21:23,679 --> 00:21:26,000
okay this feels better

605
00:21:26,000 --> 00:21:28,320
take a second to orient yourself here

606
00:21:28,320 --> 00:21:30,880
because now we're looking at our 385

607
00:21:30,880 --> 00:21:33,200
outputs in a different way we're seeing

608
00:21:33,200 --> 00:21:34,960
a visual representation of those two

609
00:21:34,960 --> 00:21:37,360
numbers

610
00:21:37,440 --> 00:21:40,320
so here the size of the square indicates

611
00:21:40,320 --> 00:21:42,799
the probability of the output that the

612
00:21:42,799 --> 00:21:44,799
adversary sees that sets of numbers worn

613
00:21:44,799 --> 00:21:45,919
off

614
00:21:45,919 --> 00:21:48,080
so we can see that the really big

615
00:21:48,080 --> 00:21:50,480
squares one two three four two three

616
00:21:50,480 --> 00:21:52,720
four five three four five six

617
00:21:52,720 --> 00:21:55,039
zero one two zero one three and zero one

618
00:21:55,039 --> 00:21:57,360
nine are some of the most likely keys

619
00:21:57,360 --> 00:21:59,840
that are going to be worn down

620
00:21:59,840 --> 00:22:02,159
the color of the box

621
00:22:02,159 --> 00:22:03,840
corresponds to the adversaries

622
00:22:03,840 --> 00:22:06,320
probability of success if they see that

623
00:22:06,320 --> 00:22:07,600
output

624
00:22:07,600 --> 00:22:10,320
so the more purple the more likely the

625
00:22:10,320 --> 00:22:12,400
adversary is to guess the passcode

626
00:22:12,400 --> 00:22:15,760
correctly on the first try

627
00:22:16,720 --> 00:22:18,720
so let's orient ourselves with this a

628
00:22:18,720 --> 00:22:20,320
little bit better and start to walk

629
00:22:20,320 --> 00:22:22,159
through some of these outputs

630
00:22:22,159 --> 00:22:23,600
let's start with the case that we did by

631
00:22:23,600 --> 00:22:27,200
hand the 1 6 8 and nine case

632
00:22:27,200 --> 00:22:29,919
it is right here

633
00:22:29,919 --> 00:22:31,520
you can see that it's relatively more

634
00:22:31,520 --> 00:22:33,360
likely to be the output the adversary

635
00:22:33,360 --> 00:22:36,159
sees it's at point three percent

636
00:22:36,159 --> 00:22:37,520
because there's definitely some smaller

637
00:22:37,520 --> 00:22:39,600
boxes that the adversary is much less

638
00:22:39,600 --> 00:22:42,240
likely to see

639
00:22:42,240 --> 00:22:44,240
given this output the adversary will

640
00:22:44,240 --> 00:22:46,880
guess that the secret code is 1986 and

641
00:22:46,880 --> 00:22:49,440
they'll be right 38 of the time giving

642
00:22:49,440 --> 00:22:52,480
this box this teal color

643
00:22:52,480 --> 00:22:54,080
okay so let's look at a few other

644
00:22:54,080 --> 00:22:56,080
outputs

645
00:22:56,080 --> 00:22:58,400
if we go back to our main graph we can

646
00:22:58,400 --> 00:23:00,880
see these bright purple boxes

647
00:23:00,880 --> 00:23:02,559
it turns out that they correspond to

648
00:23:02,559 --> 00:23:05,919
seeing only one key worn down

649
00:23:05,919 --> 00:23:07,600
for example this is the case when the

650
00:23:07,600 --> 00:23:10,720
adversary sees that only one key the one

651
00:23:10,720 --> 00:23:12,159
is worn down

652
00:23:12,159 --> 00:23:14,320
if only this one key is worn down the

653
00:23:14,320 --> 00:23:16,000
adversary will guess that the passcode

654
00:23:16,000 --> 00:23:18,240
is one one one one and they'll be

655
00:23:18,240 --> 00:23:20,799
correct a hundred percent of the time

656
00:23:20,799 --> 00:23:23,840
according to our model

657
00:23:23,840 --> 00:23:25,600
the most likely thing that the adversary

658
00:23:25,600 --> 00:23:28,159
will see however is that one two three

659
00:23:28,159 --> 00:23:29,919
and four are worn down and this

660
00:23:29,919 --> 00:23:32,400
corresponds to this large purple box in

661
00:23:32,400 --> 00:23:35,039
the bottom left

662
00:23:35,039 --> 00:23:36,799
the adversary will see keys one two and

663
00:23:36,799 --> 00:23:37,679
three

664
00:23:37,679 --> 00:23:39,919
one two three and four one down almost

665
00:23:39,919 --> 00:23:42,000
three percent of the time

666
00:23:42,000 --> 00:23:44,400
which is relatively a lot

667
00:23:44,400 --> 00:23:46,240
and when they see these keys worn down

668
00:23:46,240 --> 00:23:48,240
the adversary will be super confident

669
00:23:48,240 --> 00:23:50,240
that the code was one two three four

670
00:23:50,240 --> 00:23:52,720
with a really really high probability of

671
00:23:52,720 --> 00:23:54,640
86 percent

672
00:23:54,640 --> 00:23:56,799
this is going to drag our average our

673
00:23:56,799 --> 00:24:00,480
posterior vulnerability up

674
00:24:01,279 --> 00:24:04,320
so what is our posterior vulnerability

675
00:24:04,320 --> 00:24:06,000
it's a weighted average of these two

676
00:24:06,000 --> 00:24:09,760
numbers for all outputs

677
00:24:09,760 --> 00:24:10,960
you can think about posterior

678
00:24:10,960 --> 00:24:13,440
vulnerability as a single number that

679
00:24:13,440 --> 00:24:15,760
summarizes this entire chart

680
00:24:15,760 --> 00:24:17,760
we weigh the adversaries probability of

681
00:24:17,760 --> 00:24:20,559
success or the color of the square

682
00:24:20,559 --> 00:24:22,880
with the probability of the output or

683
00:24:22,880 --> 00:24:24,960
the size of the square

684
00:24:24,960 --> 00:24:26,720
we add them all up and we get the

685
00:24:26,720 --> 00:24:29,200
posterior phase vulnerability which is

686
00:24:29,200 --> 00:24:32,720
around 0.2 or 20 percent

687
00:24:32,720 --> 00:24:34,799
if you prefer to see the full equation

688
00:24:34,799 --> 00:24:36,320
we can return to the numbers that we saw

689
00:24:36,320 --> 00:24:38,080
before

690
00:24:38,080 --> 00:24:39,360
and we can see that we weigh them

691
00:24:39,360 --> 00:24:41,840
together by multiplying them and then we

692
00:24:41,840 --> 00:24:43,679
add them to get the average and the

693
00:24:43,679 --> 00:24:47,120
result of this is 0.201

694
00:24:47,120 --> 00:24:49,200
or 20

695
00:24:49,200 --> 00:24:51,360
the output that we calculated by hand is

696
00:24:51,360 --> 00:24:53,360
right here highlighted in green in the

697
00:24:53,360 --> 00:24:55,840
seventh column and these numbers get

698
00:24:55,840 --> 00:24:57,360
added to the final posterior

699
00:24:57,360 --> 00:25:00,159
vulnerability

700
00:25:00,159 --> 00:25:02,080
so now we have our posterior

701
00:25:02,080 --> 00:25:04,799
vulnerability

702
00:25:04,880 --> 00:25:05,919
and now

703
00:25:05,919 --> 00:25:08,799
we can talk about the l word

704
00:25:08,799 --> 00:25:10,559
leakage

705
00:25:10,559 --> 00:25:12,400
the point of calculating the leakage is

706
00:25:12,400 --> 00:25:15,200
to isolate the effect of the channel

707
00:25:15,200 --> 00:25:16,960
where did we start and where did we end

708
00:25:16,960 --> 00:25:17,600
up

709
00:25:17,600 --> 00:25:19,600
are we in a slightly worse position or a

710
00:25:19,600 --> 00:25:21,360
much worse one

711
00:25:21,360 --> 00:25:23,200
so we can see from the right here that

712
00:25:23,200 --> 00:25:24,720
we started off with a two percent

713
00:25:24,720 --> 00:25:27,440
vulnerability and we ended with a twenty

714
00:25:27,440 --> 00:25:29,600
percent vulnerability

715
00:25:29,600 --> 00:25:31,600
so we can compare prior and posterior

716
00:25:31,600 --> 00:25:33,679
vulnerability by dividing

717
00:25:33,679 --> 00:25:35,919
to get the relative difference

718
00:25:35,919 --> 00:25:37,760
if we divide twenty percent by two

719
00:25:37,760 --> 00:25:40,400
percent we see that this worn down

720
00:25:40,400 --> 00:25:42,799
keypad channel increased our secrets

721
00:25:42,799 --> 00:25:47,120
vulnerability by almost 10 fold

722
00:25:47,200 --> 00:25:49,039
we can also compare the vulnerabilities

723
00:25:49,039 --> 00:25:50,880
by subtracting to get the absolute

724
00:25:50,880 --> 00:25:53,120
difference so in this case

725
00:25:53,120 --> 00:25:56,080
20 minus 2 percent is 18

726
00:25:56,080 --> 00:25:58,080
and so the channel increased an

727
00:25:58,080 --> 00:25:59,679
adversary's probability of success in

728
00:25:59,679 --> 00:26:02,880
absolute terms by 18 points so what can

729
00:26:02,880 --> 00:26:04,720
we say from all of this

730
00:26:04,720 --> 00:26:06,799
without the warren keys an adversary can

731
00:26:06,799 --> 00:26:09,600
guess the code two percent of the time

732
00:26:09,600 --> 00:26:11,440
if they can see the warring down keys

733
00:26:11,440 --> 00:26:14,240
they'll succeed 20 of the time 20 is

734
00:26:14,240 --> 00:26:16,799
pretty high a one in five chance and so

735
00:26:16,799 --> 00:26:19,039
as the person deciding on the keypads

736
00:26:19,039 --> 00:26:21,279
you may want to avoid this and just pay

737
00:26:21,279 --> 00:26:24,720
the extra 30 for the touch screen

738
00:26:24,720 --> 00:26:27,039
so now we've gone over how to exactly

739
00:26:27,039 --> 00:26:29,440
calculate leakage and how to use this

740
00:26:29,440 --> 00:26:33,120
information to inform our decisions

741
00:26:33,120 --> 00:26:36,400
but we aren't limited to small examples

742
00:26:36,400 --> 00:26:37,919
we can also use this framework to

743
00:26:37,919 --> 00:26:40,320
address pressing security questions and

744
00:26:40,320 --> 00:26:41,600
to evaluate state-of-the-art

745
00:26:41,600 --> 00:26:43,760
cryptography in fact i just presented

746
00:26:43,760 --> 00:26:45,760
this work at an academic security

747
00:26:45,760 --> 00:26:47,360
conference last month

748
00:26:47,360 --> 00:26:49,360
in which we looked at order revealing

749
00:26:49,360 --> 00:26:50,559
encryption

750
00:26:50,559 --> 00:26:53,918
or ore

751
00:26:54,000 --> 00:26:57,200
so the motivation behind ore comes from

752
00:26:57,200 --> 00:27:00,080
our desire to store sensitive data while

753
00:27:00,080 --> 00:27:02,159
also being able to search and sort the

754
00:27:02,159 --> 00:27:03,760
data quickly

755
00:27:03,760 --> 00:27:06,080
we can't store it in plain text because

756
00:27:06,080 --> 00:27:09,679
of data breaches and we can't use

757
00:27:09,679 --> 00:27:11,440
traditional encryption

758
00:27:11,440 --> 00:27:13,279
because the cipher text from traditional

759
00:27:13,279 --> 00:27:15,600
encryption look like junk and will

760
00:27:15,600 --> 00:27:19,279
prevent us from searching and sorting

761
00:27:19,279 --> 00:27:21,279
so in response

762
00:27:21,279 --> 00:27:23,120
specialized cryptography has been

763
00:27:23,120 --> 00:27:25,840
developed that encrypts the data while

764
00:27:25,840 --> 00:27:28,000
also revealing some property of the

765
00:27:28,000 --> 00:27:30,480
plain text so we can use our database

766
00:27:30,480 --> 00:27:31,679
functions

767
00:27:31,679 --> 00:27:33,600
order revealing encryption

768
00:27:33,600 --> 00:27:35,679
reveals only the order so that the

769
00:27:35,679 --> 00:27:38,080
server can answer queries without having

770
00:27:38,080 --> 00:27:39,919
to decrypt you can think about this like

771
00:27:39,919 --> 00:27:42,480
as a type of homomorphic encryption

772
00:27:42,480 --> 00:27:44,159
since we're evaluating something over

773
00:27:44,159 --> 00:27:45,919
encrypted data

774
00:27:45,919 --> 00:27:49,039
i'll walk through how this works

775
00:27:49,039 --> 00:27:51,120
you can think of three entities a

776
00:27:51,120 --> 00:27:54,159
database admin a trusted proxy and an

777
00:27:54,159 --> 00:27:56,000
untrusted server

778
00:27:56,000 --> 00:27:58,960
the idea is that a database database

779
00:27:58,960 --> 00:28:01,440
admin will insert a record like an

780
00:28:01,440 --> 00:28:04,159
employee named maria garcia who earns 28

781
00:28:04,159 --> 00:28:06,000
dollars an hour

782
00:28:06,000 --> 00:28:09,039
the proxy encrypts this record using ore

783
00:28:09,039 --> 00:28:11,360
and sends this entry to the server

784
00:28:11,360 --> 00:28:14,080
and you can see this n6 blah blah blah

785
00:28:14,080 --> 00:28:16,159
seemingly random value and it looks like

786
00:28:16,159 --> 00:28:19,919
junk but it has special properties

787
00:28:19,919 --> 00:28:22,559
so to query the admin will send their

788
00:28:22,559 --> 00:28:25,200
request to the proxy say they want all

789
00:28:25,200 --> 00:28:27,120
employees who are making between 25 and

790
00:28:27,120 --> 00:28:28,880
30 an hour

791
00:28:28,880 --> 00:28:30,960
the proxy will encrypt

792
00:28:30,960 --> 00:28:33,200
these values using ore and submit the

793
00:28:33,200 --> 00:28:35,360
query to the server

794
00:28:35,360 --> 00:28:36,720
at this point

795
00:28:36,720 --> 00:28:38,240
magic happens

796
00:28:38,240 --> 00:28:40,159
the nature of ore ensures that the

797
00:28:40,159 --> 00:28:42,480
server can compare these seemingly junk

798
00:28:42,480 --> 00:28:43,760
values

799
00:28:43,760 --> 00:28:45,600
for every entry in the database the

800
00:28:45,600 --> 00:28:47,840
server will check if it falls within the

801
00:28:47,840 --> 00:28:49,840
range given to it by the proxy and it

802
00:28:49,840 --> 00:28:52,080
will return the correct records

803
00:28:52,080 --> 00:28:53,919
as an implementation note we wouldn't

804
00:28:53,919 --> 00:28:55,440
want the server to return just one

805
00:28:55,440 --> 00:28:57,039
record since it would break some privacy

806
00:28:57,039 --> 00:29:01,120
properties but this is just an example

807
00:29:01,440 --> 00:29:04,080
so the proxy will decrypt the record and

808
00:29:04,080 --> 00:29:06,320
return the plaintext to the admin

809
00:29:06,320 --> 00:29:08,960
so at no point during this process does

810
00:29:08,960 --> 00:29:11,039
the server have access to the sensitive

811
00:29:11,039 --> 00:29:12,480
secret data

812
00:29:12,480 --> 00:29:14,960
it can only test for order if a value is

813
00:29:14,960 --> 00:29:17,279
less than equal to or greater than

814
00:29:17,279 --> 00:29:18,720
another value

815
00:29:18,720 --> 00:29:20,399
this type of solution represents the

816
00:29:20,399 --> 00:29:21,919
exact type of trade-off that we've been

817
00:29:21,919 --> 00:29:23,919
discussing between security and

818
00:29:23,919 --> 00:29:26,080
functionality some information is

819
00:29:26,080 --> 00:29:27,840
intentionally revealed

820
00:29:27,840 --> 00:29:30,399
in exchange for searching and sorting so

821
00:29:30,399 --> 00:29:32,559
the question we have to ask ourselves

822
00:29:32,559 --> 00:29:35,120
is is it worth it and under what

823
00:29:35,120 --> 00:29:36,880
conditions

824
00:29:36,880 --> 00:29:38,960
we can begin to answer this question

825
00:29:38,960 --> 00:29:42,960
through the application of qif

826
00:29:44,000 --> 00:29:45,039
so

827
00:29:45,039 --> 00:29:48,399
in this work we analyzed two variations

828
00:29:48,399 --> 00:29:53,520
of ore the first is ideal ore ideally

829
00:29:53,520 --> 00:29:55,200
no information about the plain text

830
00:29:55,200 --> 00:29:57,679
should be observable by the adversary

831
00:29:57,679 --> 00:30:00,640
except the underlying order of the plain

832
00:30:00,640 --> 00:30:02,640
text which allows the server to perform

833
00:30:02,640 --> 00:30:04,399
range queries and sorting

834
00:30:04,399 --> 00:30:06,640
so in the qif model this secret is a

835
00:30:06,640 --> 00:30:09,279
plain text column of numeric values and

836
00:30:09,279 --> 00:30:13,440
the output is ordered indices so in this

837
00:30:13,440 --> 00:30:16,159
example let's say we have this column of

838
00:30:16,159 --> 00:30:18,640
hourly rates for employees

839
00:30:18,640 --> 00:30:21,840
all the adversary or server should be

840
00:30:21,840 --> 00:30:24,480
able to deduce about this column is that

841
00:30:24,480 --> 00:30:26,880
whatever is that indices 1 and 3 are

842
00:30:26,880 --> 00:30:29,679
equal and less than whatever is at index

843
00:30:29,679 --> 00:30:32,240
2 which is less than the contents at

844
00:30:32,240 --> 00:30:34,000
index 4.

845
00:30:34,000 --> 00:30:35,600
and like in the keypad example this is

846
00:30:35,600 --> 00:30:37,360
just one of the possible inputs and

847
00:30:37,360 --> 00:30:39,600
outputs that an adversary could observe

848
00:30:39,600 --> 00:30:41,520
and just like in the keypad example when

849
00:30:41,520 --> 00:30:43,039
we calculate prior and posterior

850
00:30:43,039 --> 00:30:44,640
vulnerability we're going to want to

851
00:30:44,640 --> 00:30:48,240
address all possible inputs and outputs

852
00:30:48,240 --> 00:30:49,600
okay but it's at this point that we come

853
00:30:49,600 --> 00:30:52,080
up against a problem it seems like a

854
00:30:52,080 --> 00:30:54,399
deal ore is difficult to implement

855
00:30:54,399 --> 00:30:55,520
efficiently

856
00:30:55,520 --> 00:30:57,679
it relies on some fancy cryptographic

857
00:30:57,679 --> 00:30:59,120
primitives that we're not sure about the

858
00:30:59,120 --> 00:31:01,039
security of they're just expensive to

859
00:31:01,039 --> 00:31:02,640
run they take a long time it's just not

860
00:31:02,640 --> 00:31:04,240
efficient

861
00:31:04,240 --> 00:31:05,760
and so

862
00:31:05,760 --> 00:31:07,519
cryptographers have developed a scheme

863
00:31:07,519 --> 00:31:10,320
that is efficiently implementable but

864
00:31:10,320 --> 00:31:12,640
maybe leaks a little bit more

865
00:31:12,640 --> 00:31:16,559
so it's named clw ore after the authors

866
00:31:16,559 --> 00:31:18,080
and the scheme reveals order i mean

867
00:31:18,080 --> 00:31:20,000
that's the whole point you need order to

868
00:31:20,000 --> 00:31:21,519
do querying

869
00:31:21,519 --> 00:31:24,640
but it also reveals a tiny bit more of

870
00:31:24,640 --> 00:31:26,080
information

871
00:31:26,080 --> 00:31:28,720
just the index of the most significant

872
00:31:28,720 --> 00:31:30,559
differing bit

873
00:31:30,559 --> 00:31:32,399
so you do not have to remember how

874
00:31:32,399 --> 00:31:34,159
binary works to walk through this

875
00:31:34,159 --> 00:31:35,440
example with me

876
00:31:35,440 --> 00:31:38,399
but if we represent 20 in binary it

877
00:31:38,399 --> 00:31:39,760
looks like this

878
00:31:39,760 --> 00:31:42,559
zero zero one zero one zero zero

879
00:31:42,559 --> 00:31:45,279
and if we represent 28 in binary it

880
00:31:45,279 --> 00:31:46,640
looks like this

881
00:31:46,640 --> 00:31:50,799
zero zero one one one zero zero

882
00:31:50,799 --> 00:31:53,360
so from here let's label the bit

883
00:31:53,360 --> 00:31:55,120
positions from the right

884
00:31:55,120 --> 00:31:58,320
from b1 through b7

885
00:31:58,320 --> 00:32:00,960
so what clw ori wants to do is to

886
00:32:00,960 --> 00:32:02,799
determine order right

887
00:32:02,799 --> 00:32:04,799
so starting from the left both numbers

888
00:32:04,799 --> 00:32:06,480
have zeros

889
00:32:06,480 --> 00:32:08,960
more zeros and then ones

890
00:32:08,960 --> 00:32:11,519
but at position before the number 20 has

891
00:32:11,519 --> 00:32:14,799
a zero and 28 has a 1.

892
00:32:14,799 --> 00:32:16,960
functionally this means that 28 is

893
00:32:16,960 --> 00:32:19,279
larger than 20. they were the same up to

894
00:32:19,279 --> 00:32:20,880
this point but now it's clear that the

895
00:32:20,880 --> 00:32:22,480
28 is larger

896
00:32:22,480 --> 00:32:24,720
so we're going to write a 4

897
00:32:24,720 --> 00:32:25,600
here

898
00:32:25,600 --> 00:32:28,000
because our column contents at indices

899
00:32:28,000 --> 00:32:29,919
one and three are smaller than

900
00:32:29,919 --> 00:32:31,919
whatever's at index two and the first

901
00:32:31,919 --> 00:32:34,399
differing bit that reveals this

902
00:32:34,399 --> 00:32:38,158
is at position b4

903
00:32:38,880 --> 00:32:41,279
so let's move on to the next number uh

904
00:32:41,279 --> 00:32:44,159
here's the binary representation of 120.

905
00:32:44,159 --> 00:32:48,080
it's one one one one zero zero zero

906
00:32:48,080 --> 00:32:50,480
compared to 28 the two numbers differ

907
00:32:50,480 --> 00:32:53,760
immediately at position b7

908
00:32:53,760 --> 00:32:55,600
one number is greater than 64 while the

909
00:32:55,600 --> 00:32:56,960
number isn't

910
00:32:56,960 --> 00:33:00,000
so between 28 and 120 the index of the

911
00:33:00,000 --> 00:33:01,679
first significant differing bit from the

912
00:33:01,679 --> 00:33:04,240
left is at index seven so we write a

913
00:33:04,240 --> 00:33:05,760
seven here

914
00:33:05,760 --> 00:33:07,840
indicating that whatever is that index

915
00:33:07,840 --> 00:33:10,960
two is less than the contents at index 4

916
00:33:10,960 --> 00:33:13,919
and they first differ at position b7 and

917
00:33:13,919 --> 00:33:15,279
so this

918
00:33:15,279 --> 00:33:18,240
makes our most significant differing bit

919
00:33:18,240 --> 00:33:20,799
profile

920
00:33:21,200 --> 00:33:23,600
so returning to our qif model the input

921
00:33:23,600 --> 00:33:26,640
for clw ore is the same it's a plain

922
00:33:26,640 --> 00:33:27,840
text column

923
00:33:27,840 --> 00:33:29,760
but in contrast instead of just

924
00:33:29,760 --> 00:33:31,760
revealing the order the adversary can

925
00:33:31,760 --> 00:33:33,600
see the index of the most significant

926
00:33:33,600 --> 00:33:36,159
differing bit between the blocks

927
00:33:36,159 --> 00:33:38,000
so the question we have to ask ourselves

928
00:33:38,000 --> 00:33:41,360
is is this clw ori version

929
00:33:41,360 --> 00:33:43,120
that bad is revealing the most

930
00:33:43,120 --> 00:33:44,640
significant differing bit information

931
00:33:44,640 --> 00:33:46,000
that much worse

932
00:33:46,000 --> 00:33:48,559
does it put our secret in any real risk

933
00:33:48,559 --> 00:33:50,840
or are its effects

934
00:33:50,840 --> 00:33:53,679
negligible so let's start to build up

935
00:33:53,679 --> 00:33:56,799
some intuition here what can this

936
00:33:56,799 --> 00:33:58,960
added most significant differing bit

937
00:33:58,960 --> 00:34:01,279
information do

938
00:34:01,279 --> 00:34:03,760
well let's start with the ideal ore

939
00:34:03,760 --> 00:34:05,919
output that only tells you the order of

940
00:34:05,919 --> 00:34:07,519
the column indices

941
00:34:07,519 --> 00:34:10,000
okay so from an adversary's perspective

942
00:34:10,000 --> 00:34:10,719
or

943
00:34:10,719 --> 00:34:12,560
whoever breached the server they'll see

944
00:34:12,560 --> 00:34:14,639
that the contents at index one and three

945
00:34:14,639 --> 00:34:15,679
are equal

946
00:34:15,679 --> 00:34:17,679
less than whatever's at index two and

947
00:34:17,679 --> 00:34:20,399
less than the contents at index four

948
00:34:20,399 --> 00:34:22,879
so from this observable output they

949
00:34:22,879 --> 00:34:24,159
could guess

950
00:34:24,159 --> 00:34:28,239
that the secret column is this uh 125

951
00:34:28,239 --> 00:34:32,320
126 125 and 127

952
00:34:32,320 --> 00:34:34,399
this is a perfectly legitimate guess

953
00:34:34,399 --> 00:34:36,560
since it would produce the same output

954
00:34:36,560 --> 00:34:39,280
everything is in the right order

955
00:34:39,280 --> 00:34:42,159
the adversary could also guess

956
00:34:42,159 --> 00:34:45,839
11 50 11 and 65. this is also a fine

957
00:34:45,839 --> 00:34:48,159
guess the output is also the same since

958
00:34:48,159 --> 00:34:49,760
the contents are ordered in the right

959
00:34:49,760 --> 00:34:53,199
way this could be the secret column

960
00:34:53,199 --> 00:34:56,639
but under clw the observable output has

961
00:34:56,639 --> 00:34:59,040
this additional information

962
00:34:59,040 --> 00:35:01,359
of the most significant differing bit

963
00:35:01,359 --> 00:35:03,520
so now the adversary knows that they're

964
00:35:03,520 --> 00:35:06,079
looking for a column which matches this

965
00:35:06,079 --> 00:35:09,599
profile so can the adversary guess 125

966
00:35:09,599 --> 00:35:13,839
126 125 and 127 now

967
00:35:13,839 --> 00:35:14,839
oops

968
00:35:14,839 --> 00:35:17,280
sorry um no

969
00:35:17,280 --> 00:35:18,720
this column has a different most

970
00:35:18,720 --> 00:35:20,640
significant differing bit profile this

971
00:35:20,640 --> 00:35:23,359
isn't an acceptable candidate anymore

972
00:35:23,359 --> 00:35:28,240
can the adversary guess 11 50 11 and 65

973
00:35:28,240 --> 00:35:30,640
nope no again it has a different profile

974
00:35:30,640 --> 00:35:33,520
and so it cannot be the secret

975
00:35:33,520 --> 00:35:35,200
so what's the effect of this most

976
00:35:35,200 --> 00:35:38,240
significant differing bit information

977
00:35:38,240 --> 00:35:40,320
it helps the adversary by reducing the

978
00:35:40,320 --> 00:35:42,320
possible secrets making it easier for

979
00:35:42,320 --> 00:35:45,599
them to guess the right one

980
00:35:45,599 --> 00:35:49,359
so let's see how much it could help

981
00:35:53,440 --> 00:35:55,920
with a seven bit secret and only four

982
00:35:55,920 --> 00:35:58,000
people in the database only four the

983
00:35:58,000 --> 00:36:00,040
adversary has over

984
00:36:00,040 --> 00:36:03,200
268 million possibilities of guessing

985
00:36:03,200 --> 00:36:05,200
everyone's salary

986
00:36:05,200 --> 00:36:07,680
when they can see the example order from

987
00:36:07,680 --> 00:36:10,079
ideal ore

988
00:36:10,079 --> 00:36:12,720
the possibilities get reduced down to 1

989
00:36:12,720 --> 00:36:16,800
000 of the original 250 and 68 million

990
00:36:16,800 --> 00:36:20,880
so now the adversary only has 341

991
00:36:20,880 --> 00:36:23,599
000 possibilities to guess from

992
00:36:23,599 --> 00:36:25,680
okay this is pretty bad but

993
00:36:25,680 --> 00:36:27,760
when an adversary can also see that the

994
00:36:27,760 --> 00:36:30,000
most significant differing bit between

995
00:36:30,000 --> 00:36:32,800
these order numbers is four and seven

996
00:36:32,800 --> 00:36:34,640
another three hundred thousand

997
00:36:34,640 --> 00:36:36,880
possibilities get thrown out

998
00:36:36,880 --> 00:36:38,960
candidate salary combinations are now

999
00:36:38,960 --> 00:36:42,000
just one ten thousandth of the original

1000
00:36:42,000 --> 00:36:44,560
possibilities

1001
00:36:44,560 --> 00:36:46,640
so this isn't even to scale like you

1002
00:36:46,640 --> 00:36:48,800
wouldn't be able to see the origin like

1003
00:36:48,800 --> 00:36:52,079
the 32 000 if the original 268 million

1004
00:36:52,079 --> 00:36:55,040
was fully represented the intuition here

1005
00:36:55,040 --> 00:36:56,800
then is that the added most significant

1006
00:36:56,800 --> 00:36:59,359
difference but info vastly reduces the

1007
00:36:59,359 --> 00:37:01,440
possible secrets making the adversary's

1008
00:37:01,440 --> 00:37:04,640
job much much easier

1009
00:37:04,640 --> 00:37:06,960
okay so keep in mind that this is just

1010
00:37:06,960 --> 00:37:09,520
the secret input and output pair is just

1011
00:37:09,520 --> 00:37:11,280
an example eventually we're going to

1012
00:37:11,280 --> 00:37:14,240
want to take all of them to an account

1013
00:37:14,240 --> 00:37:17,359
okay so what the authors of the clw ore

1014
00:37:17,359 --> 00:37:20,000
scheme do is they describe what the

1015
00:37:20,000 --> 00:37:21,680
adversary can see which is a good first

1016
00:37:21,680 --> 00:37:22,960
step

1017
00:37:22,960 --> 00:37:25,200
the issue of quantification how much

1018
00:37:25,200 --> 00:37:28,560
worse clw is than ideal is a different

1019
00:37:28,560 --> 00:37:30,240
question which we can answer by

1020
00:37:30,240 --> 00:37:32,640
calculating the vulnerabilities

1021
00:37:32,640 --> 00:37:37,119
so let's characterize our adversary

1022
00:37:37,119 --> 00:37:38,800
we're going to deal with what we call a

1023
00:37:38,800 --> 00:37:40,880
bucketing adversary and so this

1024
00:37:40,880 --> 00:37:42,640
adversary doesn't really care about

1025
00:37:42,640 --> 00:37:45,440
guessing every salary down to last penny

1026
00:37:45,440 --> 00:37:46,720
but instead they want to know what

1027
00:37:46,720 --> 00:37:48,640
people make approximately where the

1028
00:37:48,640 --> 00:37:50,720
level of precision is determined by the

1029
00:37:50,720 --> 00:37:52,640
number of buckets i'll show you what

1030
00:37:52,640 --> 00:37:54,720
this means so let's say we have this

1031
00:37:54,720 --> 00:37:56,800
graph of employee salaries

1032
00:37:56,800 --> 00:38:01,200
in ascending order by their hourly rate

1033
00:38:01,440 --> 00:38:02,960
let's say that the adversary wants to

1034
00:38:02,960 --> 00:38:05,119
find who makes the most money so they

1035
00:38:05,119 --> 00:38:06,960
can steal from them and so there are

1036
00:38:06,960 --> 00:38:08,640
three buckets the adversary wants to put

1037
00:38:08,640 --> 00:38:11,680
everyone into a poor bucket an okay

1038
00:38:11,680 --> 00:38:15,200
bucket and a rich bucket

1039
00:38:15,200 --> 00:38:17,200
a successful adversary

1040
00:38:17,200 --> 00:38:20,160
will by only seeing the output be able

1041
00:38:20,160 --> 00:38:22,000
to correctly determine which bucket

1042
00:38:22,000 --> 00:38:23,839
everyone falls into

1043
00:38:23,839 --> 00:38:25,119
they'll be able to see that they

1044
00:38:25,119 --> 00:38:27,440
shouldn't try to steal from taylor elena

1045
00:38:27,440 --> 00:38:29,359
or maria but and should instead go for

1046
00:38:29,359 --> 00:38:33,839
jose or rob or tyra

1047
00:38:34,320 --> 00:38:36,720
so let's cut to the chase

1048
00:38:36,720 --> 00:38:39,520
clw ore does a lot worse under this

1049
00:38:39,520 --> 00:38:41,119
adversary

1050
00:38:41,119 --> 00:38:43,680
so this graph shows what happens when we

1051
00:38:43,680 --> 00:38:45,440
encrypt the data of a thousand people

1052
00:38:45,440 --> 00:38:47,760
with numeric values ranging from 0 to

1053
00:38:47,760 --> 00:38:51,200
1023 indicating a 10-bit secret

1054
00:38:51,200 --> 00:38:53,440
the x-axis reflects the number of

1055
00:38:53,440 --> 00:38:55,440
buckets and there's this cool property

1056
00:38:55,440 --> 00:38:57,280
here where the number of buckets

1057
00:38:57,280 --> 00:38:59,520
corresponds to guessing the first bits

1058
00:38:59,520 --> 00:39:01,040
of the secret

1059
00:39:01,040 --> 00:39:03,040
so you can see the bottom left far

1060
00:39:03,040 --> 00:39:05,599
bottom left with 2 to the 10 number of

1061
00:39:05,599 --> 00:39:07,920
buckets this corresponds to an adversary

1062
00:39:07,920 --> 00:39:10,000
wishing to guess all the 10 bits

1063
00:39:10,000 --> 00:39:11,839
and then the first 9 bits and then the

1064
00:39:11,839 --> 00:39:14,960
first 8 bits and so on and so if we look

1065
00:39:14,960 --> 00:39:17,520
at the green ideal ore line we can see

1066
00:39:17,520 --> 00:39:19,440
that the vulnerability of the secret is

1067
00:39:19,440 --> 00:39:21,680
really small consistently

1068
00:39:21,680 --> 00:39:23,359
it's only when the adversary wants to

1069
00:39:23,359 --> 00:39:25,440
know if the secret is in the top half or

1070
00:39:25,440 --> 00:39:28,079
the bottom half do they have any type of

1071
00:39:28,079 --> 00:39:29,520
success

1072
00:39:29,520 --> 00:39:32,560
but the results for clw ore are

1073
00:39:32,560 --> 00:39:34,800
absolutely devastating an adversary

1074
00:39:34,800 --> 00:39:37,200
guessing only the first seven bits of

1075
00:39:37,200 --> 00:39:39,839
the value will succeed with probability

1076
00:39:39,839 --> 00:39:43,599
over 97 percent seven out of the ten

1077
00:39:43,599 --> 00:39:46,320
bits guessed for all a thousand people

1078
00:39:46,320 --> 00:39:50,720
with ninety seven percent accuracy

1079
00:39:50,720 --> 00:39:54,000
so under a bucketing adversary clw ori

1080
00:39:54,000 --> 00:39:57,040
is much worse than ideal and it turns

1081
00:39:57,040 --> 00:39:58,960
out that just a few added bits of

1082
00:39:58,960 --> 00:40:03,040
information can be devastating

1083
00:40:03,839 --> 00:40:05,040
okay

1084
00:40:05,040 --> 00:40:07,920
so now you know how to model leakage

1085
00:40:07,920 --> 00:40:09,920
how to calculate leakage and how to use

1086
00:40:09,920 --> 00:40:12,240
this process to compare systems and

1087
00:40:12,240 --> 00:40:14,400
reduce attack surfaces

1088
00:40:14,400 --> 00:40:15,920
you know how to think about

1089
00:40:15,920 --> 00:40:18,880
systems in terms of secret information

1090
00:40:18,880 --> 00:40:22,000
and correlated observable information

1091
00:40:22,000 --> 00:40:23,839
you know to buy the touch screen keypad

1092
00:40:23,839 --> 00:40:25,760
you know to be wary of how one tiny bit

1093
00:40:25,760 --> 00:40:28,000
of information may make your system much

1094
00:40:28,000 --> 00:40:29,760
more vulnerable

1095
00:40:29,760 --> 00:40:32,640
so while you can apply the qif framework

1096
00:40:32,640 --> 00:40:35,040
to calculate leakage exactly

1097
00:40:35,040 --> 00:40:38,079
you can also incorporate qif principles

1098
00:40:38,079 --> 00:40:40,480
to help inform your system design

1099
00:40:40,480 --> 00:40:43,280
so going forward i encourage blue

1100
00:40:43,280 --> 00:40:45,839
teamers and architects to use the qif

1101
00:40:45,839 --> 00:40:47,599
framework and take the time to answer

1102
00:40:47,599 --> 00:40:50,319
the following questions

1103
00:40:50,319 --> 00:40:52,000
what is the secret that you're trying to

1104
00:40:52,000 --> 00:40:53,440
protect

1105
00:40:53,440 --> 00:40:55,599
regardless of the size or resources of

1106
00:40:55,599 --> 00:40:57,520
your company or system you should take

1107
00:40:57,520 --> 00:40:59,200
the time to identify the high value

1108
00:40:59,200 --> 00:41:00,960
information that you want to protect

1109
00:41:00,960 --> 00:41:02,560
we do not need to care about all of our

1110
00:41:02,560 --> 00:41:04,319
assets to the same degree but we should

1111
00:41:04,319 --> 00:41:06,400
be prioritizing the security of specific

1112
00:41:06,400 --> 00:41:09,119
high-value secrets

1113
00:41:09,119 --> 00:41:10,319
next

1114
00:41:10,319 --> 00:41:13,119
ask what can your adversary observe

1115
00:41:13,119 --> 00:41:14,880
what information could be correlated

1116
00:41:14,880 --> 00:41:16,160
with your secret

1117
00:41:16,160 --> 00:41:18,160
you want to be as comprehensible as

1118
00:41:18,160 --> 00:41:20,160
possible and ask yourself how this

1119
00:41:20,160 --> 00:41:22,240
information can be leveraged to discover

1120
00:41:22,240 --> 00:41:23,520
the secret

1121
00:41:23,520 --> 00:41:25,119
you can sketch this out or it can be a

1122
00:41:25,119 --> 00:41:27,359
more thorough modeling but remember that

1123
00:41:27,359 --> 00:41:29,200
observable information can include

1124
00:41:29,200 --> 00:41:33,200
things like time logs electricity use

1125
00:41:33,200 --> 00:41:34,560
header information

1126
00:41:34,560 --> 00:41:37,440
metadata and notifications

1127
00:41:37,440 --> 00:41:39,280
once you've identified what an attacker

1128
00:41:39,280 --> 00:41:41,200
could observe a good preventative

1129
00:41:41,200 --> 00:41:43,599
measure is to disassociate this

1130
00:41:43,599 --> 00:41:45,119
observable information from your

1131
00:41:45,119 --> 00:41:47,119
sensitive information

1132
00:41:47,119 --> 00:41:49,440
for example if you notice that a program

1133
00:41:49,440 --> 00:41:51,280
processing some sensitive information

1134
00:41:51,280 --> 00:41:53,599
takes longer with one put than another

1135
00:41:53,599 --> 00:41:55,599
you can take steps to standardize that

1136
00:41:55,599 --> 00:41:57,359
processing time

1137
00:41:57,359 --> 00:41:58,800
you really just don't want to give an

1138
00:41:58,800 --> 00:42:01,760
attacker any hints

1139
00:42:01,920 --> 00:42:03,520
so how in depth you go on the next

1140
00:42:03,520 --> 00:42:05,520
questions depends on your resources

1141
00:42:05,520 --> 00:42:07,040
since the thorough job could require

1142
00:42:07,040 --> 00:42:09,280
higher levels of labor computation and

1143
00:42:09,280 --> 00:42:12,000
expense but the next thing you can do is

1144
00:42:12,000 --> 00:42:13,359
threat model

1145
00:42:13,359 --> 00:42:15,520
ask what are the operational constraints

1146
00:42:15,520 --> 00:42:17,680
of your adversary what are their goals

1147
00:42:17,680 --> 00:42:19,280
or sets of goals

1148
00:42:19,280 --> 00:42:21,119
the process of establishing the range of

1149
00:42:21,119 --> 00:42:23,680
what an adversary would consider success

1150
00:42:23,680 --> 00:42:26,480
could inform your system design

1151
00:42:26,480 --> 00:42:29,280
lastly after you identify your secrets

1152
00:42:29,280 --> 00:42:30,480
you can ask

1153
00:42:30,480 --> 00:42:32,000
what's the secret's probability

1154
00:42:32,000 --> 00:42:34,720
distribution are they all equally likely

1155
00:42:34,720 --> 00:42:37,359
or is one more likely than the next

1156
00:42:37,359 --> 00:42:38,880
assume that an attacker knows the

1157
00:42:38,880 --> 00:42:40,079
distribution of whatever you're trying

1158
00:42:40,079 --> 00:42:42,480
to protect whether passwords or salaries

1159
00:42:42,480 --> 00:42:44,720
or pii and given that assumption

1160
00:42:44,720 --> 00:42:46,640
consider how that information could help

1161
00:42:46,640 --> 00:42:49,040
an attacker so for example if an

1162
00:42:49,040 --> 00:42:50,560
attacker knows that some passwords are

1163
00:42:50,560 --> 00:42:52,240
more common than the rest take steps to

1164
00:42:52,240 --> 00:42:54,000
avoid those passwords

1165
00:42:54,000 --> 00:42:55,839
if an attacker knows that smith is the

1166
00:42:55,839 --> 00:42:58,079
most column last common last name in the

1167
00:42:58,079 --> 00:43:00,480
u.s then maybe you should not rely on

1168
00:43:00,480 --> 00:43:02,560
your user's mother's maiden name for

1169
00:43:02,560 --> 00:43:04,720
authentication

1170
00:43:04,720 --> 00:43:06,640
depending on your security requirements

1171
00:43:06,640 --> 00:43:08,720
and the value of the secret this can be

1172
00:43:08,720 --> 00:43:10,480
an extensive process where you examine

1173
00:43:10,480 --> 00:43:12,720
auxiliary databases to determine the

1174
00:43:12,720 --> 00:43:15,119
distribution or it can be a back of the

1175
00:43:15,119 --> 00:43:16,960
envelope solution where you give some

1176
00:43:16,960 --> 00:43:18,800
passing thought on how easy it is for an

1177
00:43:18,800 --> 00:43:21,119
adversary to achieve a certain goal if

1178
00:43:21,119 --> 00:43:22,480
they were to have access to the

1179
00:43:22,480 --> 00:43:24,400
distribution

1180
00:43:24,400 --> 00:43:26,240
if you want to dig deeper you can find

1181
00:43:26,240 --> 00:43:28,160
the science of quantitative information

1182
00:43:28,160 --> 00:43:30,319
flow from springer and sometimes i write

1183
00:43:30,319 --> 00:43:33,280
about it on my blog spray on security

1184
00:43:33,280 --> 00:43:36,920
thank you for your time

