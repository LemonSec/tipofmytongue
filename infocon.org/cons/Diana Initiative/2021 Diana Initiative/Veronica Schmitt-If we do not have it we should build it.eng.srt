1
00:00:12,240 --> 00:00:14,639
welcome to day two of the diana

2
00:00:14,639 --> 00:00:17,039
initiative of course we want to thank

3
00:00:17,039 --> 00:00:20,560
our sponsors once again um imeg learn

4
00:00:20,560 --> 00:00:25,439
security xonius um juniper mongodb

5
00:00:25,439 --> 00:00:26,720
corelight

6
00:00:26,720 --> 00:00:28,400
google um

7
00:00:28,400 --> 00:00:31,119
also we hack purple and of course bridge

8
00:00:31,119 --> 00:00:34,480
crew we could not do this without you we

9
00:00:34,480 --> 00:00:36,960
thank you all for sponsoring and please

10
00:00:36,960 --> 00:00:39,920
remember to stop by the expo

11
00:00:39,920 --> 00:00:43,600
um go go pop in to some of the sponsors

12
00:00:43,600 --> 00:00:44,719
say hi

13
00:00:44,719 --> 00:00:47,600
and see what's going on there um today

14
00:00:47,600 --> 00:00:49,280
i'm really excited to introduce this

15
00:00:49,280 --> 00:00:52,559
talk and the speaker um veronica schmidt

16
00:00:52,559 --> 00:00:53,680
um

17
00:00:53,680 --> 00:00:55,360
the the

18
00:00:55,360 --> 00:00:57,600
i i've always been fascinated by the

19
00:00:57,600 --> 00:01:00,719
fact that we don't log enough in

20
00:01:00,719 --> 00:01:04,080
applications and i tell my own

21
00:01:04,080 --> 00:01:07,439
developers we need more veronica's talk

22
00:01:07,439 --> 00:01:10,400
today is going to take us down into

23
00:01:10,400 --> 00:01:12,720
application logging and more as it

24
00:01:12,720 --> 00:01:14,000
affects to

25
00:01:14,000 --> 00:01:15,200
um

26
00:01:15,200 --> 00:01:18,799
incident response so without further ado

27
00:01:18,799 --> 00:01:22,560
i'm gonna let veronica take it away

28
00:01:24,720 --> 00:01:27,759
hi everyone good evening from a very

29
00:01:27,759 --> 00:01:31,840
sunny and bright norway uh it is the

30
00:01:31,840 --> 00:01:34,479
country where the sun never sits in

31
00:01:34,479 --> 00:01:37,360
summertime who knew i am very happy to

32
00:01:37,360 --> 00:01:39,920
be here today and to present to you my

33
00:01:39,920 --> 00:01:41,439
talk um

34
00:01:41,439 --> 00:01:43,520
if we do not have it we should build it

35
00:01:43,520 --> 00:01:44,799
um

36
00:01:44,799 --> 00:01:45,680
so

37
00:01:45,680 --> 00:01:48,960
with that just short and sweet who i am

38
00:01:48,960 --> 00:01:50,799
i'm an assistant professor at norfolk

39
00:01:50,799 --> 00:01:53,520
university college i'm a director for

40
00:01:53,520 --> 00:01:56,399
incident response in my company in the

41
00:01:56,399 --> 00:01:57,680
south africa

42
00:01:57,680 --> 00:01:59,759
as well as an advisement security

43
00:01:59,759 --> 00:02:01,200
engineer at a medical device

44
00:02:01,200 --> 00:02:03,040
manufacturer but probably the most

45
00:02:03,040 --> 00:02:05,759
important thing is that i'm a cyborg

46
00:02:05,759 --> 00:02:08,720
i have a cardiac device that keeps me

47
00:02:08,720 --> 00:02:10,720
living and breathing and keeps my broken

48
00:02:10,720 --> 00:02:12,080
heart beating

49
00:02:12,080 --> 00:02:13,840
and this is kind of what set me into the

50
00:02:13,840 --> 00:02:16,080
world of looking at different

51
00:02:16,080 --> 00:02:18,560
applications and devices and

52
00:02:18,560 --> 00:02:20,080
understanding what

53
00:02:20,080 --> 00:02:22,080
they do

54
00:02:22,080 --> 00:02:24,800
now incident response is one of those

55
00:02:24,800 --> 00:02:28,160
things where we come in and we are well

56
00:02:28,160 --> 00:02:30,800
let's just say the building's on fire

57
00:02:30,800 --> 00:02:34,160
everyone's panicked and we are sometimes

58
00:02:34,160 --> 00:02:37,200
left with having to make determinations

59
00:02:37,200 --> 00:02:41,519
of what happened with little to no logs

60
00:02:41,519 --> 00:02:43,519
now just to give you an introduction

61
00:02:43,519 --> 00:02:45,519
story is i worked on an incident

62
00:02:45,519 --> 00:02:47,360
response in a big enterprise in south

63
00:02:47,360 --> 00:02:48,720
africa where

64
00:02:48,720 --> 00:02:52,480
uh we only had a single source of logs

65
00:02:52,480 --> 00:02:55,440
we didn't have any vpn logs any firewall

66
00:02:55,440 --> 00:02:58,159
logs any seam logs we literally had the

67
00:02:58,159 --> 00:03:01,120
endpoint logs on the devices themselves

68
00:03:01,120 --> 00:03:03,200
these ironically have been cleared at

69
00:03:03,200 --> 00:03:05,519
the time and the client looked to me and

70
00:03:05,519 --> 00:03:07,599
said but

71
00:03:07,599 --> 00:03:09,599
what happened

72
00:03:09,599 --> 00:03:12,000
well somehow we were

73
00:03:12,000 --> 00:03:15,599
asked to create some very dark art you

74
00:03:15,599 --> 00:03:17,920
know incident response is part of the

75
00:03:17,920 --> 00:03:20,480
dark arts that we can manufacture

76
00:03:20,480 --> 00:03:24,000
evidence when it doesn't exist

77
00:03:24,000 --> 00:03:28,080
about three years ago i embarked on a

78
00:03:28,080 --> 00:03:29,840
journey with the biohacker village at

79
00:03:29,840 --> 00:03:31,920
defcon and trying to understand how

80
00:03:31,920 --> 00:03:34,319
medical devices work specifically how

81
00:03:34,319 --> 00:03:36,400
mine worked and that is how i presented

82
00:03:36,400 --> 00:03:38,239
my first talk

83
00:03:38,239 --> 00:03:40,959
but i became obsessed in a way whenever

84
00:03:40,959 --> 00:03:42,959
um there was a press release or

85
00:03:42,959 --> 00:03:44,959
something's been published where we said

86
00:03:44,959 --> 00:03:47,599
up until this point we do not know if

87
00:03:47,599 --> 00:03:50,000
any devices have been exploited by this

88
00:03:50,000 --> 00:03:52,879
vulnerability or any application in the

89
00:03:52,879 --> 00:03:54,959
healthcare medical sector has been

90
00:03:54,959 --> 00:03:56,480
exploited

91
00:03:56,480 --> 00:03:59,200
and i started collecting medical devices

92
00:03:59,200 --> 00:04:01,599
that i would hack

93
00:04:01,599 --> 00:04:03,760
i would then go and forensically image

94
00:04:03,760 --> 00:04:06,799
them and try and do incident response or

95
00:04:06,799 --> 00:04:08,879
dead box forensics to understand what

96
00:04:08,879 --> 00:04:11,040
evidence is on there

97
00:04:11,040 --> 00:04:14,239
it became glaringly obvious that logs

98
00:04:14,239 --> 00:04:18,320
for security was not a thing

99
00:04:18,320 --> 00:04:21,040
these things had maintenance logs they

100
00:04:21,040 --> 00:04:23,440
had logs that could you know help with

101
00:04:23,440 --> 00:04:25,120
debugging

102
00:04:25,120 --> 00:04:27,600
they had everything except what i needed

103
00:04:27,600 --> 00:04:30,320
to do incident response

104
00:04:30,320 --> 00:04:33,199
now the question is we state that we

105
00:04:33,199 --> 00:04:35,199
up until this point we're not aware that

106
00:04:35,199 --> 00:04:37,440
something has been compromised but if we

107
00:04:37,440 --> 00:04:40,000
do not have the necessary evidence to

108
00:04:40,000 --> 00:04:41,360
determine that something's been

109
00:04:41,360 --> 00:04:42,479
compromised

110
00:04:42,479 --> 00:04:44,960
we cannot really state

111
00:04:44,960 --> 00:04:46,240
that

112
00:04:46,240 --> 00:04:47,360
you know

113
00:04:47,360 --> 00:04:50,400
it's it's hasn't been compromised

114
00:04:50,400 --> 00:04:52,400
because the simple fact of the matter is

115
00:04:52,400 --> 00:04:54,479
there's generally not enough evidence or

116
00:04:54,479 --> 00:04:57,040
information for us to do a root cause

117
00:04:57,040 --> 00:04:59,199
analysis

118
00:04:59,199 --> 00:05:02,400
so after 12 years of always going like i

119
00:05:02,400 --> 00:05:04,720
wish i had this you know i wish i had

120
00:05:04,720 --> 00:05:07,759
more information in the logs if only we

121
00:05:07,759 --> 00:05:10,880
had correlating evidence across multiple

122
00:05:10,880 --> 00:05:12,800
log states we will be able to

123
00:05:12,800 --> 00:05:15,919
reconstruct the timeline i came up with

124
00:05:15,919 --> 00:05:18,160
you know we were sitting having coffee

125
00:05:18,160 --> 00:05:20,080
one day and i'm like

126
00:05:20,080 --> 00:05:22,240
you know but if nothing goes right maybe

127
00:05:22,240 --> 00:05:23,759
i should go left

128
00:05:23,759 --> 00:05:25,199
and my partner looked at me and said

129
00:05:25,199 --> 00:05:26,800
what do you mean i'm like well i'm

130
00:05:26,800 --> 00:05:28,560
thinking like we're always trying to

131
00:05:28,560 --> 00:05:31,199
come and solve things at the right hand

132
00:05:31,199 --> 00:05:33,600
side of of development or where

133
00:05:33,600 --> 00:05:35,680
applications lie it's always after the

134
00:05:35,680 --> 00:05:38,080
fact it's always playing catch up it's

135
00:05:38,080 --> 00:05:39,759
always being

136
00:05:39,759 --> 00:05:43,680
there at the end of when things occur

137
00:05:43,680 --> 00:05:46,160
and it became glaringly obvious that if

138
00:05:46,160 --> 00:05:48,880
i wanted to make an impact for future

139
00:05:48,880 --> 00:05:51,600
breaches or future investigations

140
00:05:51,600 --> 00:05:54,720
i would need to make logs sexy i need to

141
00:05:54,720 --> 00:05:57,840
make logs a feature i need to make logs

142
00:05:57,840 --> 00:06:00,080
something that we think about right in

143
00:06:00,080 --> 00:06:02,560
the beginning versus right at the end

144
00:06:02,560 --> 00:06:04,800
when in retrospective we look back and

145
00:06:04,800 --> 00:06:08,880
realize we don't have enough information

146
00:06:08,880 --> 00:06:10,880
now disclaimer for the day i am

147
00:06:10,880 --> 00:06:12,960
absolutely not a developer if i write

148
00:06:12,960 --> 00:06:15,280
code something will explode

149
00:06:15,280 --> 00:06:16,720
however

150
00:06:16,720 --> 00:06:20,000
i love the processes and how software

151
00:06:20,000 --> 00:06:23,039
development works how teams are put

152
00:06:23,039 --> 00:06:24,000
together

153
00:06:24,000 --> 00:06:25,280
and looking at

154
00:06:25,280 --> 00:06:26,880
you know solving constraints and

155
00:06:26,880 --> 00:06:28,960
problems i'm a problem solver it's what

156
00:06:28,960 --> 00:06:30,800
incident response and digital forensics

157
00:06:30,800 --> 00:06:31,600
do

158
00:06:31,600 --> 00:06:33,520
we want to solve what happened now

159
00:06:33,520 --> 00:06:37,280
development is no different

160
00:06:37,840 --> 00:06:40,720
now what i realized after about three

161
00:06:40,720 --> 00:06:42,800
years working with development

162
00:06:42,800 --> 00:06:45,520
operations rare teaming

163
00:06:45,520 --> 00:06:48,800
blue teaming all these kind of things is

164
00:06:48,800 --> 00:06:50,800
that it's always green versus blue

165
00:06:50,800 --> 00:06:54,400
versus red versus purple um it's almost

166
00:06:54,400 --> 00:06:56,400
like we have our silos our little

167
00:06:56,400 --> 00:06:59,039
protective bubbles that we don't want to

168
00:06:59,039 --> 00:07:02,000
be inclusive and actually

169
00:07:02,000 --> 00:07:04,560
have um others involved

170
00:07:04,560 --> 00:07:06,960
now when i started my career i was

171
00:07:06,960 --> 00:07:08,880
solely forensics and incident response

172
00:07:08,880 --> 00:07:10,479
that's all that i did

173
00:07:10,479 --> 00:07:13,120
and i always was i was fascinated with

174
00:07:13,120 --> 00:07:16,000
how rich would manage to pry open the

175
00:07:16,000 --> 00:07:18,720
window jump through and cause all kinds

176
00:07:18,720 --> 00:07:22,560
of havoc and again i was amazed by how

177
00:07:22,560 --> 00:07:25,840
blue would defend and absolutely kick

178
00:07:25,840 --> 00:07:27,680
someone off

179
00:07:27,680 --> 00:07:28,720
right

180
00:07:28,720 --> 00:07:30,960
and then i look at green which is

181
00:07:30,960 --> 00:07:33,360
something that i look you know got into

182
00:07:33,360 --> 00:07:35,919
the last two years is how they able to

183
00:07:35,919 --> 00:07:39,199
take a concept and make it come to life

184
00:07:39,199 --> 00:07:41,039
you know it's some kind of voodoo magic

185
00:07:41,039 --> 00:07:43,680
i'm not quite you know sure of

186
00:07:43,680 --> 00:07:46,240
how exactly this works

187
00:07:46,240 --> 00:07:49,280
but these teams always seem to be at

188
00:07:49,280 --> 00:07:52,879
odds right green is there and inevitably

189
00:07:52,879 --> 00:07:56,000
they build something that we need

190
00:07:56,000 --> 00:07:57,759
red is there that only has to get

191
00:07:57,759 --> 00:07:59,599
through one open window

192
00:07:59,599 --> 00:08:01,919
and then green's gonna be in trouble

193
00:08:01,919 --> 00:08:03,919
blue is the ones that need to keep what

194
00:08:03,919 --> 00:08:06,720
greens develop safe and purple well we

195
00:08:06,720 --> 00:08:08,800
get to come in when things have gone

196
00:08:08,800 --> 00:08:10,319
horribly wrong

197
00:08:10,319 --> 00:08:12,639
and as i sometimes feel like the parent

198
00:08:12,639 --> 00:08:15,039
in this relationship where you know no

199
00:08:15,039 --> 00:08:16,400
one's getting along

200
00:08:16,400 --> 00:08:19,120
but what i learned is to do any one of

201
00:08:19,120 --> 00:08:21,039
these teams we need to understand the

202
00:08:21,039 --> 00:08:22,879
different perspective

203
00:08:22,879 --> 00:08:25,440
developers need to understand how red

204
00:08:25,440 --> 00:08:27,680
attacks how blue defends and what purple

205
00:08:27,680 --> 00:08:30,160
needs to know to solve the crime

206
00:08:30,160 --> 00:08:32,559
the same with red needs to understand

207
00:08:32,559 --> 00:08:34,399
how an application is put together so

208
00:08:34,399 --> 00:08:36,479
that they can find the loophole to get

209
00:08:36,479 --> 00:08:39,200
in they also need to understand how blue

210
00:08:39,200 --> 00:08:41,519
defends so that they can actually

211
00:08:41,519 --> 00:08:43,679
anticipate what the defense side is

212
00:08:43,679 --> 00:08:45,279
going to do

213
00:08:45,279 --> 00:08:46,959
more so they need to understand what

214
00:08:46,959 --> 00:08:49,120
they leave behind because purple will

215
00:08:49,120 --> 00:08:52,240
pick up on any trace that is left behind

216
00:08:52,240 --> 00:08:54,480
and this is applicable to all the things

217
00:08:54,480 --> 00:08:56,880
and i realized that the point in my

218
00:08:56,880 --> 00:08:59,279
career where i explored all of these

219
00:08:59,279 --> 00:09:00,480
sections

220
00:09:00,480 --> 00:09:02,800
made purple teaming much better for me i

221
00:09:02,800 --> 00:09:04,640
could understand and anticipate how the

222
00:09:04,640 --> 00:09:06,160
attackers got in

223
00:09:06,160 --> 00:09:09,200
how to get them off and potentially why

224
00:09:09,200 --> 00:09:11,200
it happened and how we can fix it right

225
00:09:11,200 --> 00:09:12,959
in the bulb

226
00:09:12,959 --> 00:09:15,200
so it's almost having this

227
00:09:15,200 --> 00:09:17,680
unified or realistic view of all these

228
00:09:17,680 --> 00:09:20,080
different disciplines

229
00:09:20,080 --> 00:09:22,000
now incident response and logs have

230
00:09:22,000 --> 00:09:23,839
quite a unique relationship i eat them

231
00:09:23,839 --> 00:09:25,440
for breakfast lunch and suppers and

232
00:09:25,440 --> 00:09:28,399
sometimes even snacks i think it is the

233
00:09:28,399 --> 00:09:31,440
dirty laundry of application development

234
00:09:31,440 --> 00:09:33,600
as well as enterprise

235
00:09:33,600 --> 00:09:35,760
if if you know if anything is going to

236
00:09:35,760 --> 00:09:37,760
be accidentally leaked it will be within

237
00:09:37,760 --> 00:09:39,120
the logs

238
00:09:39,120 --> 00:09:41,200
now as incident responders we generally

239
00:09:41,200 --> 00:09:43,760
come in once the compromise has occurred

240
00:09:43,760 --> 00:09:46,320
um we get to investigate what's in the

241
00:09:46,320 --> 00:09:48,480
logs so we want to know who what where

242
00:09:48,480 --> 00:09:51,680
why and how it happened without the logs

243
00:09:51,680 --> 00:09:54,000
we kind of twiddling our thumbs and not

244
00:09:54,000 --> 00:09:55,839
knowing what to do

245
00:09:55,839 --> 00:09:57,839
we are also the magicians that make

246
00:09:57,839 --> 00:10:00,160
findings from whatever we have to work

247
00:10:00,160 --> 00:10:01,440
with

248
00:10:01,440 --> 00:10:04,160
however i hate doing findings when there

249
00:10:04,160 --> 00:10:07,519
is not enough information

250
00:10:08,000 --> 00:10:08,720
so

251
00:10:08,720 --> 00:10:10,560
now i'm sitting with the problem of

252
00:10:10,560 --> 00:10:12,480
always having difficult problems to

253
00:10:12,480 --> 00:10:15,760
solve without the information to do so

254
00:10:15,760 --> 00:10:18,320
so i start i decided about a year ago

255
00:10:18,320 --> 00:10:19,920
that i was going to infiltrate the world

256
00:10:19,920 --> 00:10:22,480
of development i wanted to understand

257
00:10:22,480 --> 00:10:24,560
what the thought process around logs are

258
00:10:24,560 --> 00:10:26,560
i wanted to get into the psychological

259
00:10:26,560 --> 00:10:29,040
factors of how developers think how i

260
00:10:29,040 --> 00:10:31,519
can better communicate with them and how

261
00:10:31,519 --> 00:10:33,839
i can corrupt them to create the logs

262
00:10:33,839 --> 00:10:36,399
that i need this was basically my master

263
00:10:36,399 --> 00:10:37,600
plan

264
00:10:37,600 --> 00:10:39,680
i also realized that not all application

265
00:10:39,680 --> 00:10:43,800
logs are created equal

266
00:10:47,760 --> 00:10:48,480
so

267
00:10:48,480 --> 00:10:50,959
but i also think you know after the year

268
00:10:50,959 --> 00:10:53,279
i saw that development and application

269
00:10:53,279 --> 00:10:55,279
laws you know development with their

270
00:10:55,279 --> 00:10:56,880
logs have a different relationship than

271
00:10:56,880 --> 00:10:58,079
i have

272
00:10:58,079 --> 00:10:59,920
right they want to know when something's

273
00:10:59,920 --> 00:11:02,160
gone wrong so that can they do debugging

274
00:11:02,160 --> 00:11:04,720
can they handle errors can they measure

275
00:11:04,720 --> 00:11:06,959
how the application is performing and

276
00:11:06,959 --> 00:11:08,800
can they see that this system is acting

277
00:11:08,800 --> 00:11:10,800
favorably

278
00:11:10,800 --> 00:11:11,680
now

279
00:11:11,680 --> 00:11:13,519
when we look at incident response i'm

280
00:11:13,519 --> 00:11:15,120
going to tell you that development does

281
00:11:15,120 --> 00:11:17,120
their own type of incident response as

282
00:11:17,120 --> 00:11:18,640
well i had a conversation with the

283
00:11:18,640 --> 00:11:20,000
developer and i said to him you know

284
00:11:20,000 --> 00:11:20,800
what

285
00:11:20,800 --> 00:11:22,560
you and i do the same thing and he's

286
00:11:22,560 --> 00:11:25,040
like no we don't i'm like but yes we do

287
00:11:25,040 --> 00:11:26,959
you do field investigations when

288
00:11:26,959 --> 00:11:28,720
something goes wrong you go back to your

289
00:11:28,720 --> 00:11:30,959
logs and you try and find out what the

290
00:11:30,959 --> 00:11:33,200
error was you you tried to debug the

291
00:11:33,200 --> 00:11:34,480
problem

292
00:11:34,480 --> 00:11:37,040
well i do the same my incidents are just

293
00:11:37,040 --> 00:11:39,360
different your incidents are development

294
00:11:39,360 --> 00:11:40,720
incidents where something's gone wrong

295
00:11:40,720 --> 00:11:42,480
or something's broken something's

296
00:11:42,480 --> 00:11:43,920
misbehaving

297
00:11:43,920 --> 00:11:46,160
mine is from a security perspective but

298
00:11:46,160 --> 00:11:49,519
incident response is exactly the same as

299
00:11:49,519 --> 00:11:51,360
field investigations just from different

300
00:11:51,360 --> 00:11:52,959
perspectives

301
00:11:52,959 --> 00:11:54,800
i soon realized that the way that we

302
00:11:54,800 --> 00:11:56,800
look at logs depend on the role that we

303
00:11:56,800 --> 00:11:57,760
have

304
00:11:57,760 --> 00:11:59,839
we have different colored lenses and

305
00:11:59,839 --> 00:12:01,680
therefore we look at them

306
00:12:01,680 --> 00:12:04,079
differently

307
00:12:04,079 --> 00:12:07,040
now i also realized that statistically

308
00:12:07,040 --> 00:12:08,399
green

309
00:12:08,399 --> 00:12:11,920
art measures blue red and purple

310
00:12:11,920 --> 00:12:14,399
so meaning that if we actually wanted to

311
00:12:14,399 --> 00:12:17,279
create change or we wanted to have the

312
00:12:17,279 --> 00:12:18,720
biggest impact

313
00:12:18,720 --> 00:12:21,360
we would need to turn developers into

314
00:12:21,360 --> 00:12:25,480
forensic coding ninjas

315
00:12:26,240 --> 00:12:26,959
now

316
00:12:26,959 --> 00:12:29,519
in security and application logs for

317
00:12:29,519 --> 00:12:32,240
security i want to be able to audit

318
00:12:32,240 --> 00:12:34,320
what's happened now audit in terms of

319
00:12:34,320 --> 00:12:36,399
security is not like

320
00:12:36,399 --> 00:12:38,560
ticking the box and saying things are

321
00:12:38,560 --> 00:12:41,760
there i want to see from authentication

322
00:12:41,760 --> 00:12:44,160
session management step by step how the

323
00:12:44,160 --> 00:12:47,040
workflow went i want to be do be able to

324
00:12:47,040 --> 00:12:49,800
do traceability in it i want more

325
00:12:49,800 --> 00:12:52,160
observability within the log so that i

326
00:12:52,160 --> 00:12:54,480
am able to early on detect that

327
00:12:54,480 --> 00:12:56,480
something is busy going wrong

328
00:12:56,480 --> 00:12:58,240
i want to know the who the what the

329
00:12:58,240 --> 00:13:01,600
where and all of the security things

330
00:13:01,600 --> 00:13:03,040
but these are not the same as what

331
00:13:03,040 --> 00:13:05,360
developers want

332
00:13:05,360 --> 00:13:07,600
so again different perspective but the

333
00:13:07,600 --> 00:13:09,360
same logs

334
00:13:09,360 --> 00:13:12,399
development wants to know can they debug

335
00:13:12,399 --> 00:13:14,560
can they do system checks can they look

336
00:13:14,560 --> 00:13:17,120
at the integrity of the application how

337
00:13:17,120 --> 00:13:18,880
it performs

338
00:13:18,880 --> 00:13:20,880
now currently application logs are

339
00:13:20,880 --> 00:13:24,480
designed by developers for developers

340
00:13:24,480 --> 00:13:28,079
because security is all is often right

341
00:13:28,079 --> 00:13:29,920
on the at the end and it's something

342
00:13:29,920 --> 00:13:31,519
that's bolted on it's not something

343
00:13:31,519 --> 00:13:33,440
that's considered throughout

344
00:13:33,440 --> 00:13:35,200
what the developers that i worked with

345
00:13:35,200 --> 00:13:37,519
it became glaringly obvious that the

346
00:13:37,519 --> 00:13:40,399
process of forensic readiness and system

347
00:13:40,399 --> 00:13:43,040
isn't embedded into these things

348
00:13:43,040 --> 00:13:44,639
and this is where we are failing a

349
00:13:44,639 --> 00:13:46,560
security and forensic practitioners we

350
00:13:46,560 --> 00:13:49,040
should be training the guys

351
00:13:49,040 --> 00:13:50,959
you know passing on the knowledge to

352
00:13:50,959 --> 00:13:53,279
those that are building the applications

353
00:13:53,279 --> 00:13:55,920
we are safe to defend and we are safe to

354
00:13:55,920 --> 00:13:57,839
do incident response on

355
00:13:57,839 --> 00:13:59,600
security wants to know the who where

356
00:13:59,600 --> 00:14:01,760
what why and just be able to do breach

357
00:14:01,760 --> 00:14:05,519
analysis and early detection

358
00:14:05,600 --> 00:14:07,600
again now i'm going to give you the the

359
00:14:07,600 --> 00:14:10,959
scoop on how i managed to infiltrate the

360
00:14:10,959 --> 00:14:12,959
world of development and just for the

361
00:14:12,959 --> 00:14:15,519
record this scared the crap out of me

362
00:14:15,519 --> 00:14:18,079
because i know nothing about it

363
00:14:18,079 --> 00:14:20,320
but i was willing to sit listen and just

364
00:14:20,320 --> 00:14:23,199
take in what was going on around me

365
00:14:23,199 --> 00:14:24,880
now one of the things that i realized

366
00:14:24,880 --> 00:14:26,800
that the developers were talking about

367
00:14:26,800 --> 00:14:29,440
that security always enforces is the

368
00:14:29,440 --> 00:14:32,560
security controls from the nest 800

369
00:14:32,560 --> 00:14:34,959
and i also realized that developers

370
00:14:34,959 --> 00:14:37,120
wanted to be able to measure things they

371
00:14:37,120 --> 00:14:39,279
wanted to be able to see well this is

372
00:14:39,279 --> 00:14:41,279
where i am this is the plan where i want

373
00:14:41,279 --> 00:14:43,040
to go and this is what will be a

374
00:14:43,040 --> 00:14:44,959
favorable outcome

375
00:14:44,959 --> 00:14:47,120
so for my research i started looking at

376
00:14:47,120 --> 00:14:49,440
these kind of security controls in these

377
00:14:49,440 --> 00:14:52,320
categories and started designing a

378
00:14:52,320 --> 00:14:54,480
benchmark

379
00:14:54,480 --> 00:14:56,880
i designed a test that they could do

380
00:14:56,880 --> 00:14:59,040
unit testings with that they could

381
00:14:59,040 --> 00:15:03,680
integrate into their testing frameworks

382
00:15:06,240 --> 00:15:07,839
i also looked at the 20 critical

383
00:15:07,839 --> 00:15:09,199
controls because these are things that

384
00:15:09,199 --> 00:15:11,440
security cares about right you want and

385
00:15:11,440 --> 00:15:13,360
one of the control 6 says maintenance

386
00:15:13,360 --> 00:15:15,680
monitoring and analysis of audit logs

387
00:15:15,680 --> 00:15:18,000
now again the term audit here is

388
00:15:18,000 --> 00:15:21,920
something security is very very um

389
00:15:21,920 --> 00:15:23,279
familiar with

390
00:15:23,279 --> 00:15:25,360
however developers don't understand what

391
00:15:25,360 --> 00:15:28,000
an audit log is

392
00:15:28,000 --> 00:15:30,000
so i tried to see what was out there in

393
00:15:30,000 --> 00:15:32,480
terms of standards so that we can create

394
00:15:32,480 --> 00:15:34,800
a benchmark tool and i and i use the

395
00:15:34,800 --> 00:15:36,480
word tool very loosely because at this

396
00:15:36,480 --> 00:15:38,800
point it's an excel spreadsheet up until

397
00:15:38,800 --> 00:15:40,399
the point that i'm confident enough to

398
00:15:40,399 --> 00:15:42,399
turn it into a web application and yes

399
00:15:42,399 --> 00:15:44,240
it scares the crap out of me because i

400
00:15:44,240 --> 00:15:46,639
can code to pass logs

401
00:15:46,639 --> 00:15:48,800
but i'm scared of building things

402
00:15:48,800 --> 00:15:50,800
that is an art form in itself

403
00:15:50,800 --> 00:15:53,519
the asps from owasp was another thing

404
00:15:53,519 --> 00:15:55,759
that i that i knew the developers were

405
00:15:55,759 --> 00:15:58,320
using to measure their applications with

406
00:15:58,320 --> 00:16:01,600
and it talks a little bit about logging

407
00:16:01,600 --> 00:16:04,480
and monitoring and testing logs

408
00:16:04,480 --> 00:16:06,959
and it specifically says that

409
00:16:06,959 --> 00:16:08,639
there needs to be verification that

410
00:16:08,639 --> 00:16:11,839
there is a common log format approach is

411
00:16:11,839 --> 00:16:13,759
used across the system

412
00:16:13,759 --> 00:16:15,839
this is another thing that clearly

413
00:16:15,839 --> 00:16:18,720
obvious that in an organization

414
00:16:18,720 --> 00:16:20,399
the logs for an application each

415
00:16:20,399 --> 00:16:22,959
application is vastly different

416
00:16:22,959 --> 00:16:25,759
because it's designed by different teams

417
00:16:25,759 --> 00:16:28,480
these teams often work in isolation from

418
00:16:28,480 --> 00:16:29,600
each other

419
00:16:29,600 --> 00:16:32,000
so meaning that within a big enterprise

420
00:16:32,000 --> 00:16:33,920
that does software development and you

421
00:16:33,920 --> 00:16:36,240
have six or seven applications your

422
00:16:36,240 --> 00:16:38,079
structure of your log will be vastly

423
00:16:38,079 --> 00:16:39,920
different the contents of the log will

424
00:16:39,920 --> 00:16:41,600
be vastly different

425
00:16:41,600 --> 00:16:44,160
now that has some

426
00:16:44,160 --> 00:16:47,279
struggles or difficulties when you have

427
00:16:47,279 --> 00:16:49,920
a scene solution that you're hoping to

428
00:16:49,920 --> 00:16:50,800
you know

429
00:16:50,800 --> 00:16:53,920
parse these you know ingest into

430
00:16:53,920 --> 00:16:56,480
if you don't have a unified format or a

431
00:16:56,480 --> 00:16:59,440
structure or a standard for logs it

432
00:16:59,440 --> 00:17:01,360
across the system it becomes very

433
00:17:01,360 --> 00:17:03,920
difficult for an incident responded to

434
00:17:03,920 --> 00:17:05,919
be able to look at the the broader

435
00:17:05,919 --> 00:17:06,880
picture

436
00:17:06,880 --> 00:17:08,240
and one of these things that i've

437
00:17:08,240 --> 00:17:11,359
noticed is date and time discrepancies

438
00:17:11,359 --> 00:17:14,799
where the application might be in utc

439
00:17:14,799 --> 00:17:16,240
time

440
00:17:16,240 --> 00:17:17,760
where

441
00:17:17,760 --> 00:17:20,240
it gets information from a device that

442
00:17:20,240 --> 00:17:23,359
is in local time zone and there's no

443
00:17:23,359 --> 00:17:25,760
reverting it back or indications of the

444
00:17:25,760 --> 00:17:27,839
time zone or even just the date and time

445
00:17:27,839 --> 00:17:30,480
stamps are formatted so much differently

446
00:17:30,480 --> 00:17:32,480
it's very important

447
00:17:32,480 --> 00:17:35,520
for um actually log analysis to have

448
00:17:35,520 --> 00:17:37,520
things structured well

449
00:17:37,520 --> 00:17:39,120
to have your date and time stamps

450
00:17:39,120 --> 00:17:42,480
consistent across the system

451
00:17:42,480 --> 00:17:44,960
now another thing that the asbs looks at

452
00:17:44,960 --> 00:17:46,960
is where the logs are securely

453
00:17:46,960 --> 00:17:48,320
transmitted

454
00:17:48,320 --> 00:17:50,160
we need to understand that some of our

455
00:17:50,160 --> 00:17:52,320
application logs actually reside on a

456
00:17:52,320 --> 00:17:53,760
mobile phone

457
00:17:53,760 --> 00:17:54,640
um

458
00:17:54,640 --> 00:17:56,960
on a local desktop

459
00:17:56,960 --> 00:17:59,280
on systems that we do not control or

460
00:17:59,280 --> 00:18:01,440
even on um cloud solutions that we do

461
00:18:01,440 --> 00:18:03,120
not control and they are seen to a

462
00:18:03,120 --> 00:18:05,280
localized server where they are ingested

463
00:18:05,280 --> 00:18:06,880
hopefully

464
00:18:06,880 --> 00:18:09,600
and it has to cross multiple

465
00:18:09,600 --> 00:18:11,679
multiple trust boundaries

466
00:18:11,679 --> 00:18:13,600
so the question needs to be asked are

467
00:18:13,600 --> 00:18:15,200
you actually

468
00:18:15,200 --> 00:18:17,440
protecting your logs both at rest

469
00:18:17,440 --> 00:18:19,679
transmission are you checking the

470
00:18:19,679 --> 00:18:22,080
integrity of what you sent within the

471
00:18:22,080 --> 00:18:24,799
contents of the log is received by the

472
00:18:24,799 --> 00:18:27,360
server is indeed what you received

473
00:18:27,360 --> 00:18:29,840
do you those do those kind of

474
00:18:29,840 --> 00:18:32,160
checks

475
00:18:32,160 --> 00:18:34,400
can you tell that when something's

476
00:18:34,400 --> 00:18:36,480
occurred or a log's been cleared that

477
00:18:36,480 --> 00:18:38,400
you have an indication that that has

478
00:18:38,400 --> 00:18:39,760
happened

479
00:18:39,760 --> 00:18:41,679
often in application logging these are

480
00:18:41,679 --> 00:18:43,520
not considerations that the development

481
00:18:43,520 --> 00:18:44,960
team would take

482
00:18:44,960 --> 00:18:47,280
and these are why

483
00:18:47,280 --> 00:18:49,520
these standards that are out there are

484
00:18:49,520 --> 00:18:53,120
super important to know about

485
00:18:54,799 --> 00:18:56,559
so one of the things that i've also

486
00:18:56,559 --> 00:18:58,880
noticed and what the asvs talks about a

487
00:18:58,880 --> 00:19:00,640
lot is not collecting or logging

488
00:19:00,640 --> 00:19:02,640
sensitive information

489
00:19:02,640 --> 00:19:05,760
now sensitive data disclosure is one of

490
00:19:05,760 --> 00:19:08,240
the things that is still super relevant

491
00:19:08,240 --> 00:19:10,080
and still something that occurs from all

492
00:19:10,080 --> 00:19:12,000
the teams that we deal with with data

493
00:19:12,000 --> 00:19:14,320
breaches often the information was

494
00:19:14,320 --> 00:19:16,320
leaked through the logs

495
00:19:16,320 --> 00:19:19,679
and the logs got accessed by an attacker

496
00:19:19,679 --> 00:19:22,400
now for a red teamer and doing reverse

497
00:19:22,400 --> 00:19:24,480
engineering of an application one of the

498
00:19:24,480 --> 00:19:26,080
first places that we go to for

499
00:19:26,080 --> 00:19:29,120
information is logs on the local device

500
00:19:29,120 --> 00:19:31,600
is to look at how the application

501
00:19:31,600 --> 00:19:34,080
communicates authenticates

502
00:19:34,080 --> 00:19:35,280
um

503
00:19:35,280 --> 00:19:37,440
whether there's any app keys and secrets

504
00:19:37,440 --> 00:19:38,480
and

505
00:19:38,480 --> 00:19:40,480
you know in my job you know doing log

506
00:19:40,480 --> 00:19:42,559
analysis i have found many apps and

507
00:19:42,559 --> 00:19:43,919
secrets that have accidentally been

508
00:19:43,919 --> 00:19:46,240
disclosed within logs

509
00:19:46,240 --> 00:19:47,200
you need to

510
00:19:47,200 --> 00:19:49,200
you also need to know that logs are

511
00:19:49,200 --> 00:19:52,880
often not stored for a absolute

512
00:19:52,880 --> 00:19:55,440
lifetime and generally as short as

513
00:19:55,440 --> 00:19:56,480
possible

514
00:19:56,480 --> 00:19:57,919
meaning that the logs that we need to

515
00:19:57,919 --> 00:19:59,840
get in we need to be able to do early

516
00:19:59,840 --> 00:20:02,000
detection on we need to be able to do

517
00:20:02,000 --> 00:20:04,880
real-time analysis to get to you know

518
00:20:04,880 --> 00:20:08,720
identifying a bridge faster

519
00:20:09,280 --> 00:20:11,760
when logs contain private or sensitive

520
00:20:11,760 --> 00:20:14,080
information

521
00:20:14,080 --> 00:20:16,159
or what these things are you know might

522
00:20:16,159 --> 00:20:18,080
depend from country to country some

523
00:20:18,080 --> 00:20:20,159
countries if your applications cross

524
00:20:20,159 --> 00:20:22,720
borders might not want any geolocation

525
00:20:22,720 --> 00:20:24,799
information published if it's perhaps in

526
00:20:24,799 --> 00:20:27,760
the u.s phi mpi

527
00:20:27,760 --> 00:20:30,320
that might not be able that definition

528
00:20:30,320 --> 00:20:31,679
may change

529
00:20:31,679 --> 00:20:33,440
so if you are doing application

530
00:20:33,440 --> 00:20:35,280
development and you're doing it across

531
00:20:35,280 --> 00:20:37,360
borders it becomes absolutely tricky to

532
00:20:37,360 --> 00:20:39,840
understand what you may or may not do

533
00:20:39,840 --> 00:20:42,960
and just because you have access to the

534
00:20:42,960 --> 00:20:44,640
information doesn't mean you should

535
00:20:44,640 --> 00:20:47,679
necessarily have it in your logs

536
00:20:47,679 --> 00:20:49,840
it's one of those things is do you need

537
00:20:49,840 --> 00:20:51,760
it for

538
00:20:51,760 --> 00:20:53,919
any technical purposes or is there a

539
00:20:53,919 --> 00:20:55,840
different way that we can print the same

540
00:20:55,840 --> 00:20:58,000
information

541
00:20:58,000 --> 00:21:00,400
without exposing us

542
00:21:00,400 --> 00:21:04,240
now when it comes to organizations um

543
00:21:04,240 --> 00:21:07,760
sensitive information or data in itself

544
00:21:07,760 --> 00:21:09,919
is become the target specifically if you

545
00:21:09,919 --> 00:21:12,559
even look at ransomware groups they have

546
00:21:12,559 --> 00:21:14,720
moved and shifted from just encryption

547
00:21:14,720 --> 00:21:17,520
to actually now go into selling the data

548
00:21:17,520 --> 00:21:18,880
because data is something that's a

549
00:21:18,880 --> 00:21:20,960
commodity that you can constantly sell

550
00:21:20,960 --> 00:21:21,840
and

551
00:21:21,840 --> 00:21:24,400
get financial remuneration for it's also

552
00:21:24,400 --> 00:21:26,159
something organizations don't want

553
00:21:26,159 --> 00:21:29,159
leaked

554
00:21:31,520 --> 00:21:33,520
now i scratched my head for a little bit

555
00:21:33,520 --> 00:21:35,600
and thought to myself well so how am i

556
00:21:35,600 --> 00:21:37,520
going to do this because you know i'm

557
00:21:37,520 --> 00:21:38,960
going to walk into a development room

558
00:21:38,960 --> 00:21:40,240
and i'm going to be the sauce i'm

559
00:21:40,240 --> 00:21:41,520
sticking out i'm going to be the girl

560
00:21:41,520 --> 00:21:42,960
with the blue hair

561
00:21:42,960 --> 00:21:44,400
that is going to scream

562
00:21:44,400 --> 00:21:46,400
hacker immediately

563
00:21:46,400 --> 00:21:49,120
now a friend of mine gave me these two

564
00:21:49,120 --> 00:21:51,440
books and said you know what

565
00:21:51,440 --> 00:21:53,520
i think you should go read this

566
00:21:53,520 --> 00:21:55,520
i think that this would actually help

567
00:21:55,520 --> 00:21:57,280
you understand it now the unicorn

568
00:21:57,280 --> 00:21:58,640
project in the phoenix project is

569
00:21:58,640 --> 00:22:00,799
probably what changed my perspective on

570
00:22:00,799 --> 00:22:02,720
everything it's an excellent book that i

571
00:22:02,720 --> 00:22:04,000
can recommend for any security

572
00:22:04,000 --> 00:22:05,360
practitioner you don't have to be in

573
00:22:05,360 --> 00:22:07,600
development to read this but if you are

574
00:22:07,600 --> 00:22:09,440
engaging with the development team these

575
00:22:09,440 --> 00:22:11,600
are the books that you need to read

576
00:22:11,600 --> 00:22:14,559
and this is how i formulated my plan

577
00:22:14,559 --> 00:22:17,600
i realized that way most development

578
00:22:17,600 --> 00:22:20,000
teams were failing were in the five

579
00:22:20,000 --> 00:22:22,720
philosophies from the book

580
00:22:22,720 --> 00:22:23,600
uh

581
00:22:23,600 --> 00:22:26,520
it it has this way of framing the

582
00:22:26,520 --> 00:22:29,280
dysfunctional family that is operations

583
00:22:29,280 --> 00:22:31,200
and development

584
00:22:31,200 --> 00:22:33,679
and i realized that security often comes

585
00:22:33,679 --> 00:22:35,280
in we kick down the door and we say we

586
00:22:35,280 --> 00:22:37,039
found these vulnerabilities and we want

587
00:22:37,039 --> 00:22:38,720
you to fix it

588
00:22:38,720 --> 00:22:41,280
i kind of now feel looking back at you

589
00:22:41,280 --> 00:22:42,960
like the bully or the one that said you

590
00:22:42,960 --> 00:22:45,280
know if i had this information i'd be

591
00:22:45,280 --> 00:22:47,840
able to do better incident response but

592
00:22:47,840 --> 00:22:50,000
not once in my 12 years that i think hey

593
00:22:50,000 --> 00:22:51,919
perhaps i should pass on some of the

594
00:22:51,919 --> 00:22:55,600
knowledge um and one of the first ideas

595
00:22:55,600 --> 00:22:58,000
in this book was locality and simplicity

596
00:22:58,000 --> 00:23:01,360
was you know how easy is it to on board

597
00:23:01,360 --> 00:23:03,600
how easy is it for our developers to

598
00:23:03,600 --> 00:23:04,480
work

599
00:23:04,480 --> 00:23:06,720
um do we make it hard by going back to

600
00:23:06,720 --> 00:23:08,720
them and forcing them to fix things that

601
00:23:08,720 --> 00:23:10,640
shouldn't be fixed

602
00:23:10,640 --> 00:23:13,120
you know do we are we fair in our

603
00:23:13,120 --> 00:23:16,080
assumptions that they build things badly

604
00:23:16,080 --> 00:23:18,400
on purpose or do we just not understand

605
00:23:18,400 --> 00:23:20,240
how the process works

606
00:23:20,240 --> 00:23:23,600
the second idea is focus flow and joy

607
00:23:23,600 --> 00:23:25,440
uh you know

608
00:23:25,440 --> 00:23:27,280
you have to love what you do and

609
00:23:27,280 --> 00:23:30,080
developers love to build

610
00:23:30,080 --> 00:23:32,400
developers don't necessarily love to

611
00:23:32,400 --> 00:23:34,640
defend or to do investigations but they

612
00:23:34,640 --> 00:23:37,039
love to build it's a puzzle it's a

613
00:23:37,039 --> 00:23:38,720
problem that they solve

614
00:23:38,720 --> 00:23:40,240
the third idea in the book is

615
00:23:40,240 --> 00:23:43,520
improvement of daily work

616
00:23:43,520 --> 00:23:45,360
and the fourth idea was probably the one

617
00:23:45,360 --> 00:23:46,960
that i failed in as an incident

618
00:23:46,960 --> 00:23:49,039
responder and i'm quite honest about it

619
00:23:49,039 --> 00:23:51,120
is psychological safety

620
00:23:51,120 --> 00:23:53,200
is being able to say that i made a

621
00:23:53,200 --> 00:23:56,080
mistake in a safe environment without

622
00:23:56,080 --> 00:23:58,960
you know having repercussions or having

623
00:23:58,960 --> 00:24:00,559
dire um

624
00:24:00,559 --> 00:24:02,559
someone losing their jobs now when

625
00:24:02,559 --> 00:24:04,320
incident response occurs one of the

626
00:24:04,320 --> 00:24:06,960
things that we have noticed so often is

627
00:24:06,960 --> 00:24:08,720
the fact that

628
00:24:08,720 --> 00:24:10,880
organizations will go to the development

629
00:24:10,880 --> 00:24:13,279
team and say you've built this wrong who

630
00:24:13,279 --> 00:24:15,440
is responsible and most likely there

631
00:24:15,440 --> 00:24:18,640
will be heads cut and jobs lost which

632
00:24:18,640 --> 00:24:21,039
shouldn't be the way because then we are

633
00:24:21,039 --> 00:24:23,279
not learning from our mistakes i'm a big

634
00:24:23,279 --> 00:24:25,279
supporter these days to say well you

635
00:24:25,279 --> 00:24:27,279
made a mistake did you learn from it if

636
00:24:27,279 --> 00:24:29,039
you learn from it cool let's move on and

637
00:24:29,039 --> 00:24:31,520
not do this mistake again i've invested

638
00:24:31,520 --> 00:24:33,919
into that developer by saying you know

639
00:24:33,919 --> 00:24:36,080
what you made a mistake but you learned

640
00:24:36,080 --> 00:24:37,679
from it i don't have to invest in

641
00:24:37,679 --> 00:24:39,440
someone new that's going to make the

642
00:24:39,440 --> 00:24:41,919
same mistake the first idea which is

643
00:24:41,919 --> 00:24:44,080
very important for a development team is

644
00:24:44,080 --> 00:24:46,320
customer focus they want to get a

645
00:24:46,320 --> 00:24:48,240
product out to the customer that is the

646
00:24:48,240 --> 00:24:50,640
whole purpose of it that is why they are

647
00:24:50,640 --> 00:24:52,080
there

648
00:24:52,080 --> 00:24:54,080
now i decided based on these books that

649
00:24:54,080 --> 00:24:56,159
i wanted to go on an adventure to build

650
00:24:56,159 --> 00:24:57,760
logs with a purpose

651
00:24:57,760 --> 00:24:59,840
right log should be so much more than

652
00:24:59,840 --> 00:25:02,000
just an output from the console

653
00:25:02,000 --> 00:25:03,679
they need to be built with purpose and

654
00:25:03,679 --> 00:25:05,760
with meaning i know it sounds like a

655
00:25:05,760 --> 00:25:07,760
pipe dream but after a year i can say

656
00:25:07,760 --> 00:25:09,360
that this pipe dream has got the

657
00:25:09,360 --> 00:25:11,840
potential if more developers come on

658
00:25:11,840 --> 00:25:15,039
board to actually become a reality

659
00:25:15,039 --> 00:25:17,520
so i sat and i thought well everyone

660
00:25:17,520 --> 00:25:20,320
always says how can i build better lots

661
00:25:20,320 --> 00:25:23,039
so based upon and inspired by gene kim

662
00:25:23,039 --> 00:25:25,520
and his writings i actually created the

663
00:25:25,520 --> 00:25:27,279
five philosophies for building better

664
00:25:27,279 --> 00:25:29,840
logs

665
00:25:30,240 --> 00:25:32,799
now philosophy one uh

666
00:25:32,799 --> 00:25:35,039
keep it simple structured and detailed

667
00:25:35,039 --> 00:25:36,880
enough and i know this sounds actually

668
00:25:36,880 --> 00:25:39,360
so complicated but it's not

669
00:25:39,360 --> 00:25:40,880
you need to ask yourself within

670
00:25:40,880 --> 00:25:43,120
development a few questions

671
00:25:43,120 --> 00:25:44,960
are my logs only going to be used for

672
00:25:44,960 --> 00:25:46,960
debugging am i only going to be the one

673
00:25:46,960 --> 00:25:48,799
or is it going to play a larger role

674
00:25:48,799 --> 00:25:50,640
within the enterprise

675
00:25:50,640 --> 00:25:53,600
to go into a seam solution

676
00:25:53,600 --> 00:25:56,080
because this plays a role in both the

677
00:25:56,080 --> 00:25:57,760
output and the design structure of the

678
00:25:57,760 --> 00:25:59,440
logs right

679
00:25:59,440 --> 00:26:00,559
because then we're gonna have to

680
00:26:00,559 --> 00:26:04,080
actively build in early detection threat

681
00:26:04,080 --> 00:26:07,039
intelligence triggers warnings things

682
00:26:07,039 --> 00:26:09,520
that are gonna go hey

683
00:26:09,520 --> 00:26:11,440
the application's misbehaving and

684
00:26:11,440 --> 00:26:13,520
sometimes logs can play a large role

685
00:26:13,520 --> 00:26:16,480
within a theme to actually find errors

686
00:26:16,480 --> 00:26:20,480
that that could be missed by a developer

687
00:26:20,480 --> 00:26:22,640
now you also need to think about this

688
00:26:22,640 --> 00:26:24,000
right in the beginning what is the

689
00:26:24,000 --> 00:26:26,240
purpose of the event that you're going

690
00:26:26,240 --> 00:26:27,679
to create

691
00:26:27,679 --> 00:26:30,000
and monitor are they going to be more

692
00:26:30,000 --> 00:26:32,240
related to debugging error handling are

693
00:26:32,240 --> 00:26:34,240
you going to include security events are

694
00:26:34,240 --> 00:26:35,760
you going to include things for future

695
00:26:35,760 --> 00:26:37,679
forensic incidents

696
00:26:37,679 --> 00:26:40,400
or system performance measurements

697
00:26:40,400 --> 00:26:42,320
this is very good to figure out right in

698
00:26:42,320 --> 00:26:44,400
the beginning often logs are just a

699
00:26:44,400 --> 00:26:46,640
byproduct of code

700
00:26:46,640 --> 00:26:48,480
now

701
00:26:48,480 --> 00:26:50,799
uncle bob was another person that i

702
00:26:50,799 --> 00:26:53,039
found inspiration from he said that

703
00:26:53,039 --> 00:26:54,640
clean code

704
00:26:54,640 --> 00:26:57,360
you know is a professional

705
00:26:57,360 --> 00:27:00,080
thing that developers need to do

706
00:27:00,080 --> 00:27:02,240
well i want to go so far as to say that

707
00:27:02,240 --> 00:27:04,880
the teams that i've looked at with large

708
00:27:04,880 --> 00:27:06,559
projects or the large teams that had

709
00:27:06,559 --> 00:27:07,919
sloppy logs

710
00:27:07,919 --> 00:27:10,799
often the code was also sloppy but if i

711
00:27:10,799 --> 00:27:13,120
looked at the smaller streamlined teams

712
00:27:13,120 --> 00:27:15,440
that were like very well planned and

713
00:27:15,440 --> 00:27:17,440
very thought out

714
00:27:17,440 --> 00:27:19,200
or had many constraints within their

715
00:27:19,200 --> 00:27:22,000
logs i realized that their code was very

716
00:27:22,000 --> 00:27:24,559
structured very clean and i translate it

717
00:27:24,559 --> 00:27:26,559
over into the logs

718
00:27:26,559 --> 00:27:29,679
so i kind of go and say that clean logs

719
00:27:29,679 --> 00:27:32,720
is an indication of clean code

720
00:27:32,720 --> 00:27:34,960
but if you look at logs and they are

721
00:27:34,960 --> 00:27:38,320
unstructured and messy and you know just

722
00:27:38,320 --> 00:27:40,480
print bodies all over the place it might

723
00:27:40,480 --> 00:27:42,720
be a good idea to actually do a critical

724
00:27:42,720 --> 00:27:46,559
review of how the code looks

725
00:27:47,360 --> 00:27:49,679
this also to keep it simple keep it

726
00:27:49,679 --> 00:27:52,720
structure do not log any more than you

727
00:27:52,720 --> 00:27:53,840
should

728
00:27:53,840 --> 00:27:55,679
is important when you start passing the

729
00:27:55,679 --> 00:27:57,679
information we want to be able to

730
00:27:57,679 --> 00:27:59,679
actually digest and inject the

731
00:27:59,679 --> 00:28:02,960
information and if it's just a jumbled

732
00:28:02,960 --> 00:28:05,200
unstructured mess that is unable to be

733
00:28:05,200 --> 00:28:08,960
rejected or passed or processed

734
00:28:08,960 --> 00:28:11,360
we're wasting our time

735
00:28:11,360 --> 00:28:13,520
because incident response wants to come

736
00:28:13,520 --> 00:28:15,440
look at the pattern security wants to

737
00:28:15,440 --> 00:28:17,279
build in early indications of a

738
00:28:17,279 --> 00:28:19,039
compromise

739
00:28:19,039 --> 00:28:21,520
but even developers need to be kind to

740
00:28:21,520 --> 00:28:23,840
their future selves when they have to do

741
00:28:23,840 --> 00:28:25,679
debugging six months down the line and

742
00:28:25,679 --> 00:28:27,919
they now have to look through the logs

743
00:28:27,919 --> 00:28:30,240
i did a survey and asked developers how

744
00:28:30,240 --> 00:28:31,760
much they enjoyed going through the

745
00:28:31,760 --> 00:28:33,679
application logs and shockingly enough

746
00:28:33,679 --> 00:28:37,440
out of five it was about a 1.25

747
00:28:37,440 --> 00:28:40,240
which leads me to believe that either

748
00:28:40,240 --> 00:28:41,919
logs are really not sexy and there's

749
00:28:41,919 --> 00:28:44,720
something very wrong with me which i'm

750
00:28:44,720 --> 00:28:46,880
not you know which i'm not saying is not

751
00:28:46,880 --> 00:28:48,559
true

752
00:28:48,559 --> 00:28:50,799
all logs and applications are such a

753
00:28:50,799 --> 00:28:52,480
horrible thing to review that even the

754
00:28:52,480 --> 00:28:53,760
developers don't want to do it

755
00:28:53,760 --> 00:28:56,240
themselves

756
00:28:56,240 --> 00:28:59,520
now philosophy two is keep a tag create

757
00:28:59,520 --> 00:29:01,679
metadata and use it

758
00:29:01,679 --> 00:29:03,840
so what do i mean with keep it tagged

759
00:29:03,840 --> 00:29:08,000
well let's look at it this way um

760
00:29:08,000 --> 00:29:09,919
when we deal with some data elements or

761
00:29:09,919 --> 00:29:12,399
variables that contain phi

762
00:29:12,399 --> 00:29:13,679
pii

763
00:29:13,679 --> 00:29:15,840
and we're not allowed to log it what's

764
00:29:15,840 --> 00:29:17,440
one of the ways that we can easily

765
00:29:17,440 --> 00:29:19,600
redact it well apple does is quite cool

766
00:29:19,600 --> 00:29:21,279
in their logo system is the way they

767
00:29:21,279 --> 00:29:25,520
actually tag these as phi confidential

768
00:29:25,520 --> 00:29:27,279
so another thing that developers need to

769
00:29:27,279 --> 00:29:28,799
consider and teams need to consider

770
00:29:28,799 --> 00:29:31,600
right in front is privacy you know what

771
00:29:31,600 --> 00:29:33,840
are the privacy considerations what

772
00:29:33,840 --> 00:29:36,799
variables fall within those um

773
00:29:36,799 --> 00:29:39,120
those data elements and those privacy

774
00:29:39,120 --> 00:29:40,559
levels and how you're going to deal with

775
00:29:40,559 --> 00:29:41,200
it

776
00:29:41,200 --> 00:29:42,799
so one of the ways that you can do that

777
00:29:42,799 --> 00:29:45,200
is to tag them so that you can within

778
00:29:45,200 --> 00:29:46,000
your

779
00:29:46,000 --> 00:29:48,159
code build in the security controls to

780
00:29:48,159 --> 00:29:50,720
not print them in logs to either salt

781
00:29:50,720 --> 00:29:51,679
them

782
00:29:51,679 --> 00:29:53,919
to redact them to not print them you

783
00:29:53,919 --> 00:29:55,840
know at all or just

784
00:29:55,840 --> 00:29:58,320
find an alternate way to have them in

785
00:29:58,320 --> 00:30:00,559
your logs

786
00:30:00,559 --> 00:30:03,200
this helps with controlling accidental

787
00:30:03,200 --> 00:30:05,600
leakage you know accidental information

788
00:30:05,600 --> 00:30:07,679
that's printed into logs

789
00:30:07,679 --> 00:30:09,679
you need to be aware right at the

790
00:30:09,679 --> 00:30:11,440
beginning the types of data you're

791
00:30:11,440 --> 00:30:13,600
recording in your logs and whether you

792
00:30:13,600 --> 00:30:14,720
have

793
00:30:14,720 --> 00:30:17,039
the right to actually retain and access

794
00:30:17,039 --> 00:30:18,240
that

795
00:30:18,240 --> 00:30:20,480
and also consideration needs to be given

796
00:30:20,480 --> 00:30:23,520
as to how much access an internal

797
00:30:23,520 --> 00:30:25,840
development team would have to be able

798
00:30:25,840 --> 00:30:28,480
to access debugging information

799
00:30:28,480 --> 00:30:31,120
i am a big supporter of having a debug

800
00:30:31,120 --> 00:30:32,399
level

801
00:30:32,399 --> 00:30:34,960
log split from the application logs

802
00:30:34,960 --> 00:30:37,840
themselves that the debug logs never go

803
00:30:37,840 --> 00:30:40,399
into production but it is a you know it

804
00:30:40,399 --> 00:30:44,320
is a separate log that we can look at

805
00:30:46,159 --> 00:30:49,600
now philosophy three is probably one of

806
00:30:49,600 --> 00:30:51,840
my favorite ones and if you cannot tell

807
00:30:51,840 --> 00:30:54,559
i'm an absolute nerd when it comes to

808
00:30:54,559 --> 00:30:55,840
star wars

809
00:30:55,840 --> 00:30:58,399
keep it clean and focused

810
00:30:58,399 --> 00:31:00,880
now there's a trend here it's all about

811
00:31:00,880 --> 00:31:02,799
structure it's all about you know

812
00:31:02,799 --> 00:31:04,960
thinking ahead of time what we need to

813
00:31:04,960 --> 00:31:06,480
do

814
00:31:06,480 --> 00:31:08,000
now

815
00:31:08,000 --> 00:31:10,480
you as a developer you do different

816
00:31:10,480 --> 00:31:13,360
sprints and updates to your code and

817
00:31:13,360 --> 00:31:16,480
changes and your application grows

818
00:31:16,480 --> 00:31:18,720
but often one of the things that's not

819
00:31:18,720 --> 00:31:21,919
looked at is logs now your logs grow

820
00:31:21,919 --> 00:31:23,600
over time

821
00:31:23,600 --> 00:31:25,600
with your application

822
00:31:25,600 --> 00:31:27,440
with changes to what you have done

823
00:31:27,440 --> 00:31:29,039
within your code there might be the

824
00:31:29,039 --> 00:31:30,720
introduction of information you're not

825
00:31:30,720 --> 00:31:33,120
aware is in your locks

826
00:31:33,120 --> 00:31:35,600
you might also you know only reveal your

827
00:31:35,600 --> 00:31:38,000
logs once something has gone wrong much

828
00:31:38,000 --> 00:31:40,240
like incident response we only really

829
00:31:40,240 --> 00:31:41,919
look at these things

830
00:31:41,919 --> 00:31:44,559
once an incidence occurred

831
00:31:44,559 --> 00:31:46,799
it's never before an incidence occurred

832
00:31:46,799 --> 00:31:48,240
but there's a whole shift in the

833
00:31:48,240 --> 00:31:50,240
paradigm of security where we actually

834
00:31:50,240 --> 00:31:52,240
wanted to take these breaches before

835
00:31:52,240 --> 00:31:53,519
they happen

836
00:31:53,519 --> 00:31:55,360
we want to be able to look at them and

837
00:31:55,360 --> 00:31:57,679
say hey you know what there's something

838
00:31:57,679 --> 00:31:59,600
funky going on we might need to not pull

839
00:31:59,600 --> 00:32:03,600
this device or look at portions of code

840
00:32:03,600 --> 00:32:06,720
now logging is often also a byproduct of

841
00:32:06,720 --> 00:32:09,840
the various features and so as a new

842
00:32:09,840 --> 00:32:11,600
feature is added there are new

843
00:32:11,600 --> 00:32:15,200
information that's included in the logs

844
00:32:15,200 --> 00:32:17,600
now technical bit is absolutely a swear

845
00:32:17,600 --> 00:32:19,279
word that no one wants to deal with no

846
00:32:19,279 --> 00:32:21,200
one wants to think about

847
00:32:21,200 --> 00:32:24,480
but much of that we have it's its sister

848
00:32:24,480 --> 00:32:26,640
which is locking date

849
00:32:26,640 --> 00:32:29,200
if we don't deal with things within our

850
00:32:29,200 --> 00:32:32,640
logs over time it grows and it becomes

851
00:32:32,640 --> 00:32:33,760
worse

852
00:32:33,760 --> 00:32:35,919
now logging data is a real problem it's

853
00:32:35,919 --> 00:32:38,000
also a real security consideration

854
00:32:38,000 --> 00:32:39,519
because that is where you are going to

855
00:32:39,519 --> 00:32:42,080
have sensitive data disclosure there's

856
00:32:42,080 --> 00:32:43,600
most likely where you're going to have

857
00:32:43,600 --> 00:32:46,480
some information you don't want there

858
00:32:46,480 --> 00:32:48,960
it also means that your logs have turned

859
00:32:48,960 --> 00:32:51,440
into a sea of useless information that

860
00:32:51,440 --> 00:32:53,919
really doesn't have any value

861
00:32:53,919 --> 00:32:56,240
now when i dealt with teams and spoke to

862
00:32:56,240 --> 00:32:58,320
them about you know how we deal with

863
00:32:58,320 --> 00:33:00,320
logging dead they said but you know we

864
00:33:00,320 --> 00:33:02,320
have no way to measure

865
00:33:02,320 --> 00:33:04,000
how much debt

866
00:33:04,000 --> 00:33:07,360
we have accumulated with analogs

867
00:33:07,360 --> 00:33:09,440
with this i say to them well perhaps

868
00:33:09,440 --> 00:33:12,000
what we can do is in regular intervals

869
00:33:12,000 --> 00:33:14,159
look at doing this

870
00:33:14,159 --> 00:33:16,799
not development teams have sprints every

871
00:33:16,799 --> 00:33:19,360
two weeks three weeks or however long

872
00:33:19,360 --> 00:33:21,919
they um they choose to have it

873
00:33:21,919 --> 00:33:23,919
i always say to them we should be

874
00:33:23,919 --> 00:33:26,399
dealing with one bad thing in our logs

875
00:33:26,399 --> 00:33:28,080
each sprint

876
00:33:28,080 --> 00:33:31,200
if you find something deal with it

877
00:33:31,200 --> 00:33:32,399
um

878
00:33:32,399 --> 00:33:34,320
so what you would do and specifically

879
00:33:34,320 --> 00:33:36,960
with regards to this is make it like a

880
00:33:36,960 --> 00:33:40,720
ctf uh inspire them to go look at what

881
00:33:40,720 --> 00:33:42,799
what's broken or where these were mostly

882
00:33:42,799 --> 00:33:44,159
over logging

883
00:33:44,159 --> 00:33:45,760
where they could potentially make it

884
00:33:45,760 --> 00:33:48,080
better

885
00:33:48,080 --> 00:33:50,080
one of the things that i got asked is

886
00:33:50,080 --> 00:33:51,760
well how am i going to test where my

887
00:33:51,760 --> 00:33:54,480
logs are and how after i've cleaned them

888
00:33:54,480 --> 00:33:56,880
how i can benchmark them regularly

889
00:33:56,880 --> 00:33:59,039
now i have an alwas project that i am

890
00:33:59,039 --> 00:34:00,960
always keen on having more people aboard

891
00:34:00,960 --> 00:34:03,279
that does a benchmarking of vlogs it

892
00:34:03,279 --> 00:34:06,000
takes the security controls from nist

893
00:34:06,000 --> 00:34:08,879
translates them into security events as

894
00:34:08,879 --> 00:34:10,960
well as taking into consideration things

895
00:34:10,960 --> 00:34:13,119
the development might need

896
00:34:13,119 --> 00:34:15,918
you are able to score your logs out of

897
00:34:15,918 --> 00:34:19,839
five to develop a percentage of maturity

898
00:34:19,839 --> 00:34:22,800
and to identify which components you are

899
00:34:22,800 --> 00:34:25,440
over logging or underlogging it also

900
00:34:25,440 --> 00:34:28,480
gives developers an idea of what they

901
00:34:28,480 --> 00:34:30,800
should be logging in terms of security

902
00:34:30,800 --> 00:34:32,800
and what kind of events we are looking

903
00:34:32,800 --> 00:34:36,320
at these tests well this benchmark is

904
00:34:36,320 --> 00:34:38,399
designed to fit in with your unit

905
00:34:38,399 --> 00:34:39,760
testings

906
00:34:39,760 --> 00:34:43,119
and can be part of quality assurance

907
00:34:43,119 --> 00:34:44,800
in the long run

908
00:34:44,800 --> 00:34:46,320
but the most important thing with

909
00:34:46,320 --> 00:34:48,159
dealing with logging debt is to do so

910
00:34:48,159 --> 00:34:51,280
with every sprint

911
00:34:51,280 --> 00:34:53,839
now philosophy 4 is probably the most

912
00:34:53,839 --> 00:34:55,599
controversial one that's the one that i

913
00:34:55,599 --> 00:34:57,280
get frowns upon

914
00:34:57,280 --> 00:35:00,240
more often than none it's assume that at

915
00:35:00,240 --> 00:35:02,240
some point you will suffer a compromise

916
00:35:02,240 --> 00:35:03,920
and log accordingly

917
00:35:03,920 --> 00:35:06,000
i always say to my clients it's not

918
00:35:06,000 --> 00:35:08,560
about the if but the when

919
00:35:08,560 --> 00:35:11,040
everyone gets breached at some point but

920
00:35:11,040 --> 00:35:13,200
the real question is are you going to

921
00:35:13,200 --> 00:35:15,200
firstly be able to detect that you've

922
00:35:15,200 --> 00:35:16,400
been breached

923
00:35:16,400 --> 00:35:18,960
are you even going to be able to do a

924
00:35:18,960 --> 00:35:21,040
full incident response process and root

925
00:35:21,040 --> 00:35:23,440
cause analysis are you going to be able

926
00:35:23,440 --> 00:35:25,760
to defend and get actionable information

927
00:35:25,760 --> 00:35:28,079
from your logs

928
00:35:28,079 --> 00:35:30,720
now this is applicable whether it is

929
00:35:30,720 --> 00:35:33,200
sensitive data disclosure or actual

930
00:35:33,200 --> 00:35:35,440
unauthorized access

931
00:35:35,440 --> 00:35:37,760
when this happens the logs are going to

932
00:35:37,760 --> 00:35:39,839
be your friend you're going to want to

933
00:35:39,839 --> 00:35:42,720
be having that information stored

934
00:35:42,720 --> 00:35:45,280
that you are able to revert back to them

935
00:35:45,280 --> 00:35:48,640
logs gives us a grant into the past of

936
00:35:48,640 --> 00:35:50,160
things that have occurred and the

937
00:35:50,160 --> 00:35:53,839
workflow of our application

938
00:35:55,520 --> 00:35:58,400
logs can also be your enemy if they are

939
00:35:58,400 --> 00:36:00,880
unstructured and unreadable and very

940
00:36:00,880 --> 00:36:03,280
just difficult to deal with leaving gaps

941
00:36:03,280 --> 00:36:04,960
and holes

942
00:36:04,960 --> 00:36:07,040
it becomes more of an enemy than a

943
00:36:07,040 --> 00:36:08,240
friend

944
00:36:08,240 --> 00:36:11,280
so i also i always ask people be kind to

945
00:36:11,280 --> 00:36:13,680
your future incident responder we want

946
00:36:13,680 --> 00:36:15,599
to see your logs we want to read your

947
00:36:15,599 --> 00:36:17,680
logs but only if

948
00:36:17,680 --> 00:36:20,640
they are readable

949
00:36:23,040 --> 00:36:26,320
so let's look at building logs with you

950
00:36:26,320 --> 00:36:28,800
know actionable information now you know

951
00:36:28,800 --> 00:36:30,880
i always get said why are you hammering

952
00:36:30,880 --> 00:36:33,280
on early detection well if we can see

953
00:36:33,280 --> 00:36:35,040
that something's going wrong we can act

954
00:36:35,040 --> 00:36:36,320
appropriately

955
00:36:36,320 --> 00:36:39,119
generally it takes very long for us to

956
00:36:39,119 --> 00:36:41,520
identify that something's happened

957
00:36:41,520 --> 00:36:43,760
but also another thing that's important

958
00:36:43,760 --> 00:36:45,760
is knowing where you're vulnerable and

959
00:36:45,760 --> 00:36:48,640
every application has a vulnerability

960
00:36:48,640 --> 00:36:50,400
has a weakness

961
00:36:50,400 --> 00:36:52,560
we are not at an age where we build the

962
00:36:52,560 --> 00:36:55,040
perfect applications with no flaws no

963
00:36:55,040 --> 00:36:56,880
problems no issues

964
00:36:56,880 --> 00:36:59,440
you need to know what behavior is normal

965
00:36:59,440 --> 00:37:01,200
in your environment to be in a position

966
00:37:01,200 --> 00:37:03,599
to identify what could be evil

967
00:37:03,599 --> 00:37:06,079
i always say the best people to hack an

968
00:37:06,079 --> 00:37:07,520
application or the ones that have

969
00:37:07,520 --> 00:37:10,240
designed it they know where the

970
00:37:10,240 --> 00:37:11,839
weaknesses lie

971
00:37:11,839 --> 00:37:14,320
but just because an application has a

972
00:37:14,320 --> 00:37:17,359
vulnerability or a weakness or a point

973
00:37:17,359 --> 00:37:19,760
where the threat is high

974
00:37:19,760 --> 00:37:21,839
doesn't mean that application needs to

975
00:37:21,839 --> 00:37:24,320
be burned and sacrificed what we need to

976
00:37:24,320 --> 00:37:26,720
do is buff up our reporting

977
00:37:26,720 --> 00:37:29,680
to support that vulnerability to get you

978
00:37:29,680 --> 00:37:33,280
know create observability across it more

979
00:37:33,280 --> 00:37:34,800
in-depth

980
00:37:34,800 --> 00:37:37,599
now philosophy five consider who has

981
00:37:37,599 --> 00:37:39,359
access to the logs and how they are

982
00:37:39,359 --> 00:37:42,000
stored and how they are transported

983
00:37:42,000 --> 00:37:43,839
this is probably one of the things that

984
00:37:43,839 --> 00:37:46,880
incident response plays a high role in i

985
00:37:46,880 --> 00:37:48,160
wanna know

986
00:37:48,160 --> 00:37:50,640
that what i'm looking at is true and not

987
00:37:50,640 --> 00:37:52,880
false information

988
00:37:52,880 --> 00:37:55,680
ultimately trust no device no system or

989
00:37:55,680 --> 00:37:57,680
no method of transmission

990
00:37:57,680 --> 00:37:59,839
you need to build your logs with this in

991
00:37:59,839 --> 00:38:02,880
mind almost have a zero trust mentality

992
00:38:02,880 --> 00:38:05,359
of knowing that at any time the logs can

993
00:38:05,359 --> 00:38:07,119
be tampered with so we want to know if

994
00:38:07,119 --> 00:38:08,560
they've been tampered with we want to

995
00:38:08,560 --> 00:38:10,640
create controls that does that

996
00:38:10,640 --> 00:38:13,520
uh we shouldn't be trusting systems or

997
00:38:13,520 --> 00:38:15,520
methods of you know transmission we can

998
00:38:15,520 --> 00:38:17,680
build in controls that these are there

999
00:38:17,680 --> 00:38:19,680
but we need to see

1000
00:38:19,680 --> 00:38:22,640
that the confirmation is done um

1001
00:38:22,640 --> 00:38:25,119
of tls or you know

1002
00:38:25,119 --> 00:38:27,839
just data validation

1003
00:38:27,839 --> 00:38:30,400
in multiple breaches there has been an

1004
00:38:30,400 --> 00:38:32,560
unreasonable amount of trace trust

1005
00:38:32,560 --> 00:38:34,240
placed in the fact that the device can

1006
00:38:34,240 --> 00:38:35,440
be trusted

1007
00:38:35,440 --> 00:38:37,599
that the way of transportation can be

1008
00:38:37,599 --> 00:38:40,000
trusted but what we found is that within

1009
00:38:40,000 --> 00:38:41,920
application logs

1010
00:38:41,920 --> 00:38:43,200
there's been events that have been

1011
00:38:43,200 --> 00:38:45,119
overwritten and often we don't know that

1012
00:38:45,119 --> 00:38:46,480
it's been overwritten but the only

1013
00:38:46,480 --> 00:38:48,079
reason we do is because things the

1014
00:38:48,079 --> 00:38:50,480
workflow doesn't make logical sense now

1015
00:38:50,480 --> 00:38:52,079
windows does a very unique thing and

1016
00:38:52,079 --> 00:38:54,000
please for the record i am not a windows

1017
00:38:54,000 --> 00:38:56,160
baby or windows fan but for for logging

1018
00:38:56,160 --> 00:38:59,839
windows event logs are quite cool

1019
00:38:59,839 --> 00:39:01,920
windows interact you know the security

1020
00:39:01,920 --> 00:39:04,240
event log is written to you by als.exe

1021
00:39:04,240 --> 00:39:06,720
the executable that is in control of it

1022
00:39:06,720 --> 00:39:09,520
whenever a log is cleared or changed

1023
00:39:09,520 --> 00:39:11,280
there is an event that's created

1024
00:39:11,280 --> 00:39:13,680
automatically that tells us that it's

1025
00:39:13,680 --> 00:39:15,359
happened

1026
00:39:15,359 --> 00:39:16,960
now something that developers need to

1027
00:39:16,960 --> 00:39:18,720
understand is we want to build in the

1028
00:39:18,720 --> 00:39:20,800
low card principle within our logs

1029
00:39:20,800 --> 00:39:22,480
meaning that every two things that come

1030
00:39:22,480 --> 00:39:23,920
interaction with each other leave the

1031
00:39:23,920 --> 00:39:25,680
trace evidence behind

1032
00:39:25,680 --> 00:39:27,920
and yes in general life in

1033
00:39:27,920 --> 00:39:29,920
computer forensics this happens but in

1034
00:39:29,920 --> 00:39:32,560
applications we need to build in that

1035
00:39:32,560 --> 00:39:35,040
forensic capabilities

1036
00:39:35,040 --> 00:39:37,119
organizations should also consider all

1037
00:39:37,119 --> 00:39:41,400
their log data as public

1038
00:39:44,000 --> 00:39:45,599
i always say it's not about the if but

1039
00:39:45,599 --> 00:39:46,560
the win

1040
00:39:46,560 --> 00:39:48,240
and the most important thing is how

1041
00:39:48,240 --> 00:39:49,760
you're going to deal with it

1042
00:39:49,760 --> 00:39:52,240
how do you deal with the breach and and

1043
00:39:52,240 --> 00:39:54,400
i've seen organizations actually feel

1044
00:39:54,400 --> 00:39:55,520
like they

1045
00:39:55,520 --> 00:39:57,680
have to um

1046
00:39:57,680 --> 00:40:01,280
almost hide it because they get shamed

1047
00:40:01,280 --> 00:40:03,520
we should not be shaming developers for

1048
00:40:03,520 --> 00:40:05,520
making a mistake we should be showing

1049
00:40:05,520 --> 00:40:07,599
them how to fix it and we should be

1050
00:40:07,599 --> 00:40:10,880
enabling them to grow and learn from it

1051
00:40:10,880 --> 00:40:13,040
now sensitive data disclosure is still

1052
00:40:13,040 --> 00:40:15,200
part of the os top 10.

1053
00:40:15,200 --> 00:40:18,800
and 34 of data breaches in 2018 involved

1054
00:40:18,800 --> 00:40:20,720
an internal actor and this is why i say

1055
00:40:20,720 --> 00:40:22,800
consider what information

1056
00:40:22,800 --> 00:40:24,880
you you know internally you have access

1057
00:40:24,880 --> 00:40:27,680
to logs can be such a great source of

1058
00:40:27,680 --> 00:40:29,280
information to leak if you are

1059
00:40:29,280 --> 00:40:31,280
constantly having information you think

1060
00:40:31,280 --> 00:40:32,800
no one's gonna see

1061
00:40:32,800 --> 00:40:35,119
until the insider threat occurs and that

1062
00:40:35,119 --> 00:40:37,119
information is leaked which causes

1063
00:40:37,119 --> 00:40:38,400
reputation reputation

1064
00:40:38,400 --> 00:40:39,920
or financial

1065
00:40:39,920 --> 00:40:41,599
impact for you

1066
00:40:41,599 --> 00:40:43,680
it's also estimated that a business will

1067
00:40:43,680 --> 00:40:45,760
fall victim to a ransomware attack every

1068
00:40:45,760 --> 00:40:47,520
11 seconds

1069
00:40:47,520 --> 00:40:48,319
now

1070
00:40:48,319 --> 00:40:51,280
52 of all the data breaches were caused

1071
00:40:51,280 --> 00:40:54,400
by cyber criminals 25 system glitches

1072
00:40:54,400 --> 00:40:57,119
and 23 by human error

1073
00:40:57,119 --> 00:40:59,920
now i can hypothesize that 23 of those

1074
00:40:59,920 --> 00:41:01,520
human errors most likely were

1075
00:41:01,520 --> 00:41:03,200
information that either were

1076
00:41:03,200 --> 00:41:05,440
accidentally disclosed

1077
00:41:05,440 --> 00:41:07,839
of his information within logs

1078
00:41:07,839 --> 00:41:09,920
now the average time to identify breach

1079
00:41:09,920 --> 00:41:14,079
in 2020 was 228 days i ask you can your

1080
00:41:14,079 --> 00:41:15,920
application

1081
00:41:15,920 --> 00:41:16,880
logs

1082
00:41:16,880 --> 00:41:18,800
indicate within a seam solution that you

1083
00:41:18,800 --> 00:41:20,359
have been breached or is it going to be

1084
00:41:20,359 --> 00:41:23,920
228 days or as soon as an actor tells

1085
00:41:23,920 --> 00:41:25,920
you that they were in there

1086
00:41:25,920 --> 00:41:28,000
i know these you know i would think like

1087
00:41:28,000 --> 00:41:30,640
we're in the 2020 one that the stats are

1088
00:41:30,640 --> 00:41:32,960
going to be looking better but detection

1089
00:41:32,960 --> 00:41:35,200
is still something that we are really

1090
00:41:35,200 --> 00:41:37,599
failing upon

1091
00:41:37,599 --> 00:41:39,920
now the securing secure logging

1092
00:41:39,920 --> 00:41:42,720
benchmark is a good idea to understand

1093
00:41:42,720 --> 00:41:45,040
exactly where your logs are specifically

1094
00:41:45,040 --> 00:41:47,440
when it comes to legacy logs

1095
00:41:47,440 --> 00:41:49,520
now legacy logs are those that we forgot

1096
00:41:49,520 --> 00:41:52,319
we had we never looked at and there are

1097
00:41:52,319 --> 00:41:53,760
issues with them

1098
00:41:53,760 --> 00:41:54,880
often

1099
00:41:54,880 --> 00:41:57,119
logs can be forgotten and it can be

1100
00:41:57,119 --> 00:41:58,960
forgotten what they hold

1101
00:41:58,960 --> 00:42:00,880
right because we are so focused on

1102
00:42:00,880 --> 00:42:02,800
building the next application update

1103
00:42:02,800 --> 00:42:04,480
getting the next sprint done getting the

1104
00:42:04,480 --> 00:42:06,560
next feature out

1105
00:42:06,560 --> 00:42:08,319
i always say don't get caught with your

1106
00:42:08,319 --> 00:42:10,079
pants down and sensitive data leaking

1107
00:42:10,079 --> 00:42:11,760
through your legacy logs because often

1108
00:42:11,760 --> 00:42:13,599
in incident response we found legacy

1109
00:42:13,599 --> 00:42:16,640
systems or legacy code producing log log

1110
00:42:16,640 --> 00:42:19,200
information that just shouldn't be there

1111
00:42:19,200 --> 00:42:21,359
you need to figure out where you are and

1112
00:42:21,359 --> 00:42:23,200
figure out where you need to go

1113
00:42:23,200 --> 00:42:25,040
and you need to do this introspective

1114
00:42:25,040 --> 00:42:27,680
look at your logs and identify what is

1115
00:42:27,680 --> 00:42:30,880
broken so you can know what to fix

1116
00:42:30,880 --> 00:42:32,960
now i've already spoken about working

1117
00:42:32,960 --> 00:42:34,400
and dealing with your log data in

1118
00:42:34,400 --> 00:42:36,800
sprints where i feel that logging should

1119
00:42:36,800 --> 00:42:38,800
be a feature logging should be dealt

1120
00:42:38,800 --> 00:42:41,359
with actively every two weeks whether it

1121
00:42:41,359 --> 00:42:43,599
is to improve it whether it's to change

1122
00:42:43,599 --> 00:42:45,359
it whether it's to move it over or

1123
00:42:45,359 --> 00:42:47,839
whether it's to actually just take out

1124
00:42:47,839 --> 00:42:51,040
and refactor legacy information

1125
00:42:51,040 --> 00:42:53,040
now you also can are able to find

1126
00:42:53,040 --> 00:42:55,359
vulnerabilities within your logs who

1127
00:42:55,359 --> 00:42:56,880
would have thought who would have

1128
00:42:56,880 --> 00:42:59,680
thought that you find jwt tokens or you

1129
00:42:59,680 --> 00:43:01,680
know app keys and secrets

1130
00:43:01,680 --> 00:43:04,160
go into your logs and look at them look

1131
00:43:04,160 --> 00:43:06,640
at them critically have security go

1132
00:43:06,640 --> 00:43:08,000
through your logs have your local

1133
00:43:08,000 --> 00:43:10,000
incident responder go through your logs

1134
00:43:10,000 --> 00:43:12,720
a good way to identify sensitive data

1135
00:43:12,720 --> 00:43:14,960
disclosure with you know within your

1136
00:43:14,960 --> 00:43:18,160
logs is to actually go and read them

1137
00:43:18,160 --> 00:43:20,319
now one of the biggest things i realize

1138
00:43:20,319 --> 00:43:22,240
that i'm super excited about is almost

1139
00:43:22,240 --> 00:43:25,680
has a project called cornucopia now

1140
00:43:25,680 --> 00:43:27,760
cornucopia is threat modeling for

1141
00:43:27,760 --> 00:43:30,079
developers done by developers

1142
00:43:30,079 --> 00:43:33,440
now i said early on that rate teaming is

1143
00:43:33,440 --> 00:43:35,040
you know the best rate team is to

1144
00:43:35,040 --> 00:43:36,880
pentest an application is the ones that

1145
00:43:36,880 --> 00:43:38,240
have designed it because they have the

1146
00:43:38,240 --> 00:43:39,599
inside scoop

1147
00:43:39,599 --> 00:43:42,079
now having um thread modeling done helps

1148
00:43:42,079 --> 00:43:43,760
you with your log design because once

1149
00:43:43,760 --> 00:43:45,920
you've identified potential threat

1150
00:43:45,920 --> 00:43:48,240
landscapes and areas of

1151
00:43:48,240 --> 00:43:50,720
higher thread values you are actually

1152
00:43:50,720 --> 00:43:52,839
able to log

1153
00:43:52,839 --> 00:43:55,680
appropriately now almost cornucopia

1154
00:43:55,680 --> 00:43:57,119
takes um

1155
00:43:57,119 --> 00:43:59,440
what is done in stride which is still

1156
00:43:59,440 --> 00:44:01,200
very much used as a threat modeling

1157
00:44:01,200 --> 00:44:04,079
component and gamifies it i'm a big fan

1158
00:44:04,079 --> 00:44:06,560
of gamification i have my developers

1159
00:44:06,560 --> 00:44:09,680
play owasp cornucopia as well as

1160
00:44:09,680 --> 00:44:11,760
actually to play things like tabletop

1161
00:44:11,760 --> 00:44:15,040
instant response games i am known for

1162
00:44:15,040 --> 00:44:17,200
actually putting them in the security

1163
00:44:17,200 --> 00:44:19,440
seat and say hey this has happened on an

1164
00:44:19,440 --> 00:44:20,800
application

1165
00:44:20,800 --> 00:44:23,280
how do we do incident response how do we

1166
00:44:23,280 --> 00:44:25,280
find out what happened how happened who

1167
00:44:25,280 --> 00:44:27,760
was involved and why it happened

1168
00:44:27,760 --> 00:44:29,680
it's putting them in the mind for it and

1169
00:44:29,680 --> 00:44:32,240
saying okay i built this how will i

1170
00:44:32,240 --> 00:44:33,520
protect it

1171
00:44:33,520 --> 00:44:35,440
how will i threat model it how would i

1172
00:44:35,440 --> 00:44:38,160
attack it and how would i investigate it

1173
00:44:38,160 --> 00:44:40,560
now this is a card game specifically

1174
00:44:40,560 --> 00:44:42,880
meant for teams in the agile environment

1175
00:44:42,880 --> 00:44:45,440
i have played this in

1176
00:44:45,440 --> 00:44:48,560
hybrid situations but it is also in a

1177
00:44:48,560 --> 00:44:50,480
language and platform that is actually

1178
00:44:50,480 --> 00:44:53,319
technol technology agnostic but it just

1179
00:44:53,319 --> 00:44:55,440
identifies threat modeling with an

1180
00:44:55,440 --> 00:44:57,680
inverted stride not from the attacker's

1181
00:44:57,680 --> 00:45:00,480
perspective but how do we build it more

1182
00:45:00,480 --> 00:45:02,960
better how do we build

1183
00:45:02,960 --> 00:45:04,640
our application to be better with

1184
00:45:04,640 --> 00:45:07,040
authentication authorization data

1185
00:45:07,040 --> 00:45:09,760
validation and encoding and various

1186
00:45:09,760 --> 00:45:11,839
things if you want to check this out go

1187
00:45:11,839 --> 00:45:14,640
check this out i was has a link

1188
00:45:14,640 --> 00:45:17,040
i will also try and find the link for my

1189
00:45:17,040 --> 00:45:18,960
project and if you want to get involved

1190
00:45:18,960 --> 00:45:22,160
please hit me up

1191
00:45:22,160 --> 00:45:24,319
i need more developers to get involved

1192
00:45:24,319 --> 00:45:26,960
with forensic readiness i need

1193
00:45:26,960 --> 00:45:29,040
them to turn

1194
00:45:29,040 --> 00:45:32,000
into forensic coding ninjas

1195
00:45:32,000 --> 00:45:35,280
i want to inspire developers to learn to

1196
00:45:35,280 --> 00:45:37,040
be purple teamers because they do it

1197
00:45:37,040 --> 00:45:41,279
best i also want them to do red teaming

1198
00:45:41,839 --> 00:45:43,839
if the only thing you remember from this

1199
00:45:43,839 --> 00:45:45,920
whole conversation is your logs should

1200
00:45:45,920 --> 00:45:48,160
be simple and structured they should be

1201
00:45:48,160 --> 00:45:49,760
they should only contain enough

1202
00:45:49,760 --> 00:45:51,839
information without disclosing sensitive

1203
00:45:51,839 --> 00:45:53,040
data

1204
00:45:53,040 --> 00:45:55,680
often accidental information disclosure

1205
00:45:55,680 --> 00:45:58,079
will happen within the logs so

1206
00:45:58,079 --> 00:46:00,800
accordingly log for future breaches in

1207
00:46:00,800 --> 00:46:02,240
mind

1208
00:46:02,240 --> 00:46:04,160
here is my contact information if you

1209
00:46:04,160 --> 00:46:06,240
want to have a chat there is my always

1210
00:46:06,240 --> 00:46:07,839
project if you want to get involved

1211
00:46:07,839 --> 00:46:10,160
thank you so much for your time

1212
00:46:10,160 --> 00:46:12,800
i had thorough fun um

1213
00:46:12,800 --> 00:46:14,960
and i hope that at least one developer

1214
00:46:14,960 --> 00:46:16,960
thinks a little bit differently about

1215
00:46:16,960 --> 00:46:20,400
why logging is important

1216
00:46:21,640 --> 00:46:25,680
absolutely awesome the thank you so much

1217
00:46:25,680 --> 00:46:27,440
i learned quite a bit are you gonna make

1218
00:46:27,440 --> 00:46:29,280
your slides available

1219
00:46:29,280 --> 00:46:32,400
definitely um i will put it out there

1220
00:46:32,400 --> 00:46:34,560
and i will you know publish it and on my

1221
00:46:34,560 --> 00:46:36,240
blog post as well

1222
00:46:36,240 --> 00:46:37,520
um

1223
00:46:37,520 --> 00:46:39,119
i really am open to having more

1224
00:46:39,119 --> 00:46:41,119
conversations about this

1225
00:46:41,119 --> 00:46:43,119
if anyone wants to have a chat

1226
00:46:43,119 --> 00:46:45,920
awesome awesome um i was just looking

1227
00:46:45,920 --> 00:46:48,000
through i didn't see any other questions

1228
00:46:48,000 --> 00:46:50,800
yet anybody just in case are there any

1229
00:46:50,800 --> 00:46:52,640
questions we have a couple minutes left

1230
00:46:52,640 --> 00:46:54,240
here

1231
00:46:54,240 --> 00:46:58,479
and we'll see if anybody types in

1232
00:47:00,560 --> 00:47:02,319
i i think one of the things that caught

1233
00:47:02,319 --> 00:47:05,280
me the most i remember it from 2019 but

1234
00:47:05,280 --> 00:47:06,760
2020 being

1235
00:47:06,760 --> 00:47:10,560
228 days to discover uh an incident in

1236
00:47:10,560 --> 00:47:11,760
the in

1237
00:47:11,760 --> 00:47:14,000
you know and figure it out

1238
00:47:14,000 --> 00:47:16,560
um that's just that's absolutely

1239
00:47:16,560 --> 00:47:19,040
frightening

1240
00:47:19,280 --> 00:47:22,640
no no wonder we're doing so poorly

1241
00:47:22,640 --> 00:47:24,720
well that's the thing right is we are

1242
00:47:24,720 --> 00:47:26,720
unable to detect early and the only

1243
00:47:26,720 --> 00:47:28,480
reason we knowing about the ransomware

1244
00:47:28,480 --> 00:47:30,160
attacks is because they're violent right

1245
00:47:30,160 --> 00:47:32,000
they encrypt everything and they stop us

1246
00:47:32,000 --> 00:47:33,839
from working but if we look at the solar

1247
00:47:33,839 --> 00:47:35,920
winds and we look at the guy sarah and

1248
00:47:35,920 --> 00:47:37,440
all those kind of things that are now

1249
00:47:37,440 --> 00:47:39,599
actually going into you know where the

1250
00:47:39,599 --> 00:47:41,680
binaries are created and infiltrating

1251
00:47:41,680 --> 00:47:44,079
the pipeline that we are trying to you

1252
00:47:44,079 --> 00:47:46,559
know where we create our applications

1253
00:47:46,559 --> 00:47:48,079
we need to have something in our logs

1254
00:47:48,079 --> 00:47:49,680
that you know give us an indication that

1255
00:47:49,680 --> 00:47:51,359
this is happening

1256
00:47:51,359 --> 00:47:52,800
we need to start building in

1257
00:47:52,800 --> 00:47:54,559
observability i think it's one of the

1258
00:47:54,559 --> 00:47:56,640
things i miss the most in logs is i

1259
00:47:56,640 --> 00:47:58,160
don't have observability into the

1260
00:47:58,160 --> 00:48:01,200
workflow everyone says but it it does

1261
00:48:01,200 --> 00:48:03,440
happen and i'm like but it's not in your

1262
00:48:03,440 --> 00:48:05,520
lives but i'm implying it's in my life

1263
00:48:05,520 --> 00:48:07,599
if it's not explicitly in your logs it

1264
00:48:07,599 --> 00:48:10,400
didn't happen

1265
00:48:10,559 --> 00:48:13,040
in a previous company i was at i also

1266
00:48:13,040 --> 00:48:16,559
found that they were logging everything

1267
00:48:16,559 --> 00:48:18,640
they just had no analysis

1268
00:48:18,640 --> 00:48:21,440
and the only time they did analysis of

1269
00:48:21,440 --> 00:48:24,079
the logs especially the application logs

1270
00:48:24,079 --> 00:48:26,079
was if somebody said hey i think we have

1271
00:48:26,079 --> 00:48:27,359
a problem

1272
00:48:27,359 --> 00:48:29,760
so it was always waiting until somebody

1273
00:48:29,760 --> 00:48:31,280
figured something out there was nothing

1274
00:48:31,280 --> 00:48:33,359
else going on and that just absolutely

1275
00:48:33,359 --> 00:48:34,960
blew my mind

1276
00:48:34,960 --> 00:48:35,920
anyway

1277
00:48:35,920 --> 00:48:38,720
um i i really want to thank you again i

1278
00:48:38,720 --> 00:48:41,599
didn't see any other questions pop up

1279
00:48:41,599 --> 00:48:42,480
um

1280
00:48:42,480 --> 00:48:45,200
i did put the survey out there everyone

1281
00:48:45,200 --> 00:48:47,920
if you could take a few moments and go

1282
00:48:47,920 --> 00:48:49,520
rate the talk

1283
00:48:49,520 --> 00:48:52,000
um that would be great that's that's one

1284
00:48:52,000 --> 00:48:53,839
of the things that i like to push a

1285
00:48:53,839 --> 00:48:57,119
little bit because i'm a speaker as well

1286
00:48:57,119 --> 00:48:59,599
and i don't think speakers get enough

1287
00:48:59,599 --> 00:49:02,960
surveys to know how well they're doing

1288
00:49:02,960 --> 00:49:04,880
i've seen talks where there's you know

1289
00:49:04,880 --> 00:49:07,040
500 people in a room

1290
00:49:07,040 --> 00:49:10,160
and they'll get 10 surveys filled out

1291
00:49:10,160 --> 00:49:13,119
for the particular session so please

1292
00:49:13,119 --> 00:49:15,599
take a few minutes it won't take long at

1293
00:49:15,599 --> 00:49:18,720
all it's it's a single form um it would

1294
00:49:18,720 --> 00:49:21,680
be greatly appreciated for both v and

1295
00:49:21,680 --> 00:49:26,919
all of our speakers thank you so much

