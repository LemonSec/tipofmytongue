1
00:00:00,439 --> 00:00:07,109
hello everyone thank you for attending

2
00:00:03,899 --> 00:00:10,260
this session this talk titled the red

3
00:00:07,109 --> 00:00:13,710
square mapping the connections inside

4
00:00:10,260 --> 00:00:15,570
Russia's apt echo system let me give you

5
00:00:13,710 --> 00:00:19,289
a short introduction about his talk so

6
00:00:15,570 --> 00:00:22,109
on in the last 15 years many Russian

7
00:00:19,289 --> 00:00:24,840
operations and Malwa families in futures

8
00:00:22,109 --> 00:00:26,880
were publicly exposed by different

9
00:00:24,840 --> 00:00:30,119
security vendors and intelligence

10
00:00:26,880 --> 00:00:33,589
organizations those publications focus

11
00:00:30,119 --> 00:00:36,480
on specific Russian actors or operations

12
00:00:33,590 --> 00:00:39,059
but the bigger picture remains unclear

13
00:00:36,480 --> 00:00:42,328
which is the Russian apt ecosystem as a

14
00:00:39,059 --> 00:00:44,610
whole and we wanted to get a better

15
00:00:42,329 --> 00:00:47,879
understanding of how this ecosystem

16
00:00:44,610 --> 00:00:49,649
looks like in terms of the connections

17
00:00:47,879 --> 00:00:51,649
between the different components and

18
00:00:49,649 --> 00:00:54,690
that is why we conducted this research

19
00:00:51,649 --> 00:00:57,360
we really happy to be here today and to

20
00:00:54,690 --> 00:01:00,390
show the results and we will also

21
00:00:57,360 --> 00:01:03,030
present several open source tools that

22
00:01:00,390 --> 00:01:06,000
we built during our research and now can

23
00:01:03,030 --> 00:01:09,060
be used by by you guys the community for

24
00:01:06,000 --> 00:01:11,189
further investigation but before we

25
00:01:09,060 --> 00:01:15,119
start I would like to introduce

26
00:01:11,189 --> 00:01:18,839
ourselves so my name is Ali Aten and I'm

27
00:01:15,119 --> 00:01:21,030
the VP of research at integer hello I'm

28
00:01:18,840 --> 00:01:23,400
a Thai Korean I'm a reverse engineering

29
00:01:21,030 --> 00:01:25,590
checkpoint research I'm also one of the

30
00:01:23,400 --> 00:01:28,229
developers of to the open-source reverse

31
00:01:25,590 --> 00:01:31,619
engineering platform and maintainer of

32
00:01:28,229 --> 00:01:33,750
the Qatar project so as you can see this

33
00:01:31,619 --> 00:01:35,790
research is a result of a collaboration

34
00:01:33,750 --> 00:01:38,159
made by checkpoint research group and

35
00:01:35,790 --> 00:01:41,329
integers research team which was led by

36
00:01:38,159 --> 00:01:44,220
ETA and on women basalt from outside and

37
00:01:41,329 --> 00:01:50,460
in total we worked on this research for

38
00:01:44,220 --> 00:01:52,170
a few months so let's start as I said we

39
00:01:50,460 --> 00:01:55,048
wanted to detect connections between

40
00:01:52,170 --> 00:01:58,350
different Russian entities such as a

41
00:01:55,049 --> 00:02:00,659
pair of malicious samples whole families

42
00:01:58,350 --> 00:02:03,119
or even between Russian actors

43
00:02:00,659 --> 00:02:06,210
themselves now what is the connection

44
00:02:03,119 --> 00:02:10,139
right a connection can be a shared

45
00:02:06,210 --> 00:02:12,120
module tool or even a specific

46
00:02:10,139 --> 00:02:15,179
implementation of a function

47
00:02:12,120 --> 00:02:17,220
our research was very wide and we we

48
00:02:15,180 --> 00:02:22,770
weren't limited to one type of of

49
00:02:17,220 --> 00:02:25,860
connection well we had many questions in

50
00:02:22,770 --> 00:02:27,599
mind that we wanted to answer for

51
00:02:25,860 --> 00:02:30,540
example are the different Russian

52
00:02:27,599 --> 00:02:32,280
government entities working alone or are

53
00:02:30,540 --> 00:02:35,120
they sharing code and techniques with

54
00:02:32,280 --> 00:02:38,849
each other and if so what artifacts

55
00:02:35,120 --> 00:02:41,790
libraries and code are more likely to be

56
00:02:38,849 --> 00:02:44,429
shared between two different actors to

57
00:02:41,790 --> 00:02:46,739
different families can we support

58
00:02:44,430 --> 00:02:49,440
unknown connection between two different

59
00:02:46,739 --> 00:02:50,970
families or tools but from a technical

60
00:02:49,440 --> 00:02:53,250
perspective and not from the

61
00:02:50,970 --> 00:02:58,349
intelligence perspective and so on and

62
00:02:53,250 --> 00:03:00,120
so forth I really had many questions and

63
00:02:58,349 --> 00:03:02,609
all those questions led us to start

64
00:03:00,120 --> 00:03:04,799
reading public information that was

65
00:03:02,610 --> 00:03:07,680
shared by other vendors and researchers

66
00:03:04,799 --> 00:03:09,390
regarding Russian attacks there is a lot

67
00:03:07,680 --> 00:03:12,030
of information available out there in

68
00:03:09,390 --> 00:03:14,880
many reports so that was the first step

69
00:03:12,030 --> 00:03:16,560
that we took and it was a very important

70
00:03:14,880 --> 00:03:18,329
one so first of all we would like to

71
00:03:16,560 --> 00:03:20,430
thank all the amazing researchers who

72
00:03:18,329 --> 00:03:26,220
published regarding Russian attacks it

73
00:03:20,430 --> 00:03:28,890
was really helpful for us after days of

74
00:03:26,220 --> 00:03:31,470
reading background materials and

75
00:03:28,890 --> 00:03:34,828
publications it was quite clear to us

76
00:03:31,470 --> 00:03:37,069
how we should proceed towards this goal

77
00:03:34,829 --> 00:03:40,230
of mapping the Russian an ecosystem to

78
00:03:37,069 --> 00:03:43,920
put it simply we split the research into

79
00:03:40,230 --> 00:03:47,010
four steps the first step is to collect

80
00:03:43,920 --> 00:03:50,518
samples that we know were attributed to

81
00:03:47,010 --> 00:03:52,350
Russian actors then we need to classify

82
00:03:50,519 --> 00:03:54,299
those samples which was a very

83
00:03:52,350 --> 00:03:57,450
challenging step and I'll elaborate

84
00:03:54,299 --> 00:03:59,519
about that after that we want to find

85
00:03:57,450 --> 00:04:02,459
the code connections the similarities

86
00:03:59,519 --> 00:04:04,859
between the different samples and lastly

87
00:04:02,459 --> 00:04:10,889
analyze the interesting and relevant

88
00:04:04,859 --> 00:04:13,650
connections right so let's start first

89
00:04:10,889 --> 00:04:15,870
of all we collected the samples I told

90
00:04:13,650 --> 00:04:18,450
you we we read many reports extracted

91
00:04:15,870 --> 00:04:20,940
our seeds from them and then we had to

92
00:04:18,450 --> 00:04:23,490
grab the actual samples the binaries

93
00:04:20,940 --> 00:04:25,610
from many sources overall we had

94
00:04:23,490 --> 00:04:30,520
approximately 2,000 unique

95
00:04:25,610 --> 00:04:34,520
has to work with the next step was to

96
00:04:30,520 --> 00:04:37,370
classify the samples and although it may

97
00:04:34,520 --> 00:04:41,810
look easy since the name of the attack

98
00:04:37,370 --> 00:04:44,629
or or campaign appears in the report

99
00:04:41,810 --> 00:04:47,060
that we grab the i/o system classifying

100
00:04:44,629 --> 00:04:49,580
the samples turned out we one of the

101
00:04:47,060 --> 00:04:54,830
most complicated parts of this research

102
00:04:49,580 --> 00:04:57,050
and I'll explain why first of all there

103
00:04:54,830 --> 00:04:59,438
is no naming conventions for Mau

104
00:04:57,050 --> 00:05:02,990
families and threat actors in the

105
00:04:59,439 --> 00:05:05,659
InfoSec industry every mom or family in

106
00:05:02,990 --> 00:05:07,879
every actor have more than one name

107
00:05:05,659 --> 00:05:11,000
given to them by different researchers

108
00:05:07,879 --> 00:05:13,009
or vendors some vendors will be used

109
00:05:11,000 --> 00:05:16,909
different names to describe the same

110
00:05:13,009 --> 00:05:21,680
family other mama families simply do not

111
00:05:16,909 --> 00:05:24,620
have clear name so those issues and more

112
00:05:21,680 --> 00:05:27,949
made us face one of the most painful

113
00:05:24,620 --> 00:05:31,039
drawbacks of classification and required

114
00:05:27,949 --> 00:05:34,339
us to be very careful when we classify a

115
00:05:31,039 --> 00:05:37,849
specific piece of malware to a family or

116
00:05:34,339 --> 00:05:41,629
or an actor but naming convention was

117
00:05:37,849 --> 00:05:44,930
not the only problem and sometimes we

118
00:05:41,629 --> 00:05:48,680
discovered problems with the IOC s there

119
00:05:44,930 --> 00:05:50,599
were too generic or even wrong and since

120
00:05:48,680 --> 00:05:54,800
we needed to know exactly what every

121
00:05:50,599 --> 00:06:00,319
sample does we we had to dive in deeper

122
00:05:54,800 --> 00:06:02,419
and we did we built the template for

123
00:06:00,319 --> 00:06:05,210
pieces of information that we wanted to

124
00:06:02,419 --> 00:06:06,128
collect for every sample of malware that

125
00:06:05,210 --> 00:06:10,188
we had

126
00:06:06,129 --> 00:06:12,169
first of all actor which actor is known

127
00:06:10,189 --> 00:06:15,620
or likely to have written this malware

128
00:06:12,169 --> 00:06:20,359
for example tearless officee a grey

129
00:06:15,620 --> 00:06:23,180
energy and so on next family what is the

130
00:06:20,360 --> 00:06:28,699
common family name that is associated

131
00:06:23,180 --> 00:06:31,339
with this mower module many more files

132
00:06:28,699 --> 00:06:34,789
are built in a modular way in which the

133
00:06:31,339 --> 00:06:37,279
model can extract a specific module

134
00:06:34,789 --> 00:06:38,180
embedded in it or downloaded from a c2

135
00:06:37,279 --> 00:06:40,280
server

136
00:06:38,180 --> 00:06:42,550
so when possible we wanted to know

137
00:06:40,280 --> 00:06:45,530
whether the binary we have right now is

138
00:06:42,550 --> 00:06:47,900
is a key logger module a communication

139
00:06:45,530 --> 00:06:48,710
module and injection module log or

140
00:06:47,900 --> 00:06:52,849
anything else

141
00:06:48,710 --> 00:06:55,549
and lastly version some files have a

142
00:06:52,850 --> 00:06:57,920
clear version stem better than them and

143
00:06:55,550 --> 00:07:01,130
we wanted to differentiate between

144
00:06:57,920 --> 00:07:04,850
earlier and recent versions of the same

145
00:07:01,130 --> 00:07:08,600
module at this point we classified all

146
00:07:04,850 --> 00:07:15,710
our samples into sixty families and 200

147
00:07:08,600 --> 00:07:17,930
different modules so after collecting

148
00:07:15,710 --> 00:07:21,680
the samples and classify classifying

149
00:07:17,930 --> 00:07:23,330
them we were ready to get to the actual

150
00:07:21,680 --> 00:07:26,990
thing which is finding the code

151
00:07:23,330 --> 00:07:29,960
connections between the samples and for

152
00:07:26,990 --> 00:07:33,230
that we used integers genetic malware

153
00:07:29,960 --> 00:07:36,109
analysis technology we automatically

154
00:07:33,230 --> 00:07:39,350
disassembled and dissected each binary

155
00:07:36,110 --> 00:07:44,240
file into thousands of small fragments

156
00:07:39,350 --> 00:07:46,130
of assembly also referred as genes then

157
00:07:44,240 --> 00:07:48,890
we search in which other Marvel Zombies

158
00:07:46,130 --> 00:07:52,490
Russian samples we have seen those genes

159
00:07:48,890 --> 00:07:55,010
in the past using this genome database

160
00:07:52,490 --> 00:07:57,680
made by interval now this database

161
00:07:55,010 --> 00:08:01,039
contains binary genes from both

162
00:07:57,680 --> 00:08:04,880
previously seen by Marvel files but also

163
00:08:01,040 --> 00:08:07,640
from legitimate files this helps us to

164
00:08:04,880 --> 00:08:10,580
focus only on the malicious and unique

165
00:08:07,640 --> 00:08:13,340
code between the samples without wasting

166
00:08:10,580 --> 00:08:17,359
time on shared library code like open

167
00:08:13,340 --> 00:08:19,880
SSL for example eventually we were able

168
00:08:17,360 --> 00:08:22,970
to connect different samples Russian

169
00:08:19,880 --> 00:08:26,390
samples based on the pure assembly code

170
00:08:22,970 --> 00:08:28,190
and every connection means that those

171
00:08:26,390 --> 00:08:31,090
two samples shall code with each other

172
00:08:28,190 --> 00:08:34,909
that was never seen before in any other

173
00:08:31,090 --> 00:08:39,010
trusted software or malware which is not

174
00:08:34,909 --> 00:08:41,870
Russian right so it's really powerful

175
00:08:39,010 --> 00:08:44,270
actually it was a bit more complex than

176
00:08:41,870 --> 00:08:47,210
that because some of the samples were

177
00:08:44,270 --> 00:08:50,470
packed in order to stay basic probably

178
00:08:47,210 --> 00:08:51,950
so we had to automatically unpack them

179
00:08:50,470 --> 00:08:55,670
statically or

180
00:08:51,950 --> 00:08:58,310
dynamic and the output of this process

181
00:08:55,670 --> 00:09:01,550
was a list with pairs of samples that

182
00:08:58,310 --> 00:09:03,709
share assembly code with each other the

183
00:09:01,550 --> 00:09:07,579
next step was to make though this list

184
00:09:03,709 --> 00:09:14,000
to a graph and it I will take it from

185
00:09:07,579 --> 00:09:16,279
him thank you so as a reset intercepts

186
00:09:14,000 --> 00:09:19,550
technology did its magic and now it got

187
00:09:16,279 --> 00:09:22,519
a decent amount of data and connections

188
00:09:19,550 --> 00:09:24,709
to analyze and so we search for a way to

189
00:09:22,519 --> 00:09:26,570
visualize these connections and came

190
00:09:24,709 --> 00:09:28,880
upon this open source software called

191
00:09:26,570 --> 00:09:30,470
Gaffey and get free is a platform to

192
00:09:28,880 --> 00:09:31,880
visualize and analyze graphs it was

193
00:09:30,470 --> 00:09:35,029
exactly what we were looking for

194
00:09:31,880 --> 00:09:40,399
so we downloaded Gaffey and loaded our

195
00:09:35,029 --> 00:09:42,620
data to it and got this result now this

196
00:09:40,399 --> 00:09:45,199
is of course useless we cannot work with

197
00:09:42,620 --> 00:09:48,440
it so we had to apply some graph layout

198
00:09:45,199 --> 00:09:52,540
algorithms to this thing in order to

199
00:09:48,440 --> 00:09:55,220
make it usable so we did and we got a

200
00:09:52,540 --> 00:09:57,860
much better graph with thousands of

201
00:09:55,220 --> 00:10:01,310
samples thousands of node each node is a

202
00:09:57,860 --> 00:10:04,370
sample of course with a lot of clusters

203
00:10:01,310 --> 00:10:06,529
and a visible connections but still we

204
00:10:04,370 --> 00:10:08,089
have a problem because all we see is

205
00:10:06,529 --> 00:10:09,980
black know it's all over the place and

206
00:10:08,089 --> 00:10:13,339
we don't have any context what are these

207
00:10:09,980 --> 00:10:16,610
nodes so we added more information we

208
00:10:13,339 --> 00:10:19,279
had labels to each to each node with

209
00:10:16,610 --> 00:10:21,740
malware family with the name of the

210
00:10:19,279 --> 00:10:24,560
family of the sample and we added colors

211
00:10:21,740 --> 00:10:27,829
and each actor on the graph has its own

212
00:10:24,560 --> 00:10:30,079
color so now it was much easier for us

213
00:10:27,829 --> 00:10:33,109
to see things in a visual way we could

214
00:10:30,079 --> 00:10:34,670
simply see connections between nodes of

215
00:10:33,110 --> 00:10:37,160
different colors we can see clusters of

216
00:10:34,670 --> 00:10:40,670
colors it was much easier to start

217
00:10:37,160 --> 00:10:42,050
working so we had we have this graph and

218
00:10:40,670 --> 00:10:44,599
we can start looking at the connections

219
00:10:42,050 --> 00:10:47,899
and we have three types of connections

220
00:10:44,600 --> 00:10:49,250
on the graph the first one is is the

221
00:10:47,899 --> 00:10:51,860
first type of connection is when two

222
00:10:49,250 --> 00:10:54,019
samples of the same actor and of the

223
00:10:51,860 --> 00:10:55,790
same our family are sharing code with

224
00:10:54,019 --> 00:10:58,060
each other and that means that these

225
00:10:55,790 --> 00:11:00,709
samples belong to the same Mauro family

226
00:10:58,060 --> 00:11:02,268
basically the same different versions of

227
00:11:00,709 --> 00:11:04,489
different variants of the same family

228
00:11:02,269 --> 00:11:05,240
the second type of connection that we

229
00:11:04,490 --> 00:11:07,610
have is when two

230
00:11:05,240 --> 00:11:11,930
samples of different actors or Shannon

231
00:11:07,610 --> 00:11:14,870
code with each other and the but there

232
00:11:11,930 --> 00:11:16,310
are of me of same actor but of different

233
00:11:14,870 --> 00:11:18,560
families and this is very good for

234
00:11:16,310 --> 00:11:20,180
attribution and the third type of

235
00:11:18,560 --> 00:11:22,579
connection that we have is for us the

236
00:11:20,180 --> 00:11:24,229
most important one and the most

237
00:11:22,580 --> 00:11:26,060
interesting one is when two samples of

238
00:11:24,230 --> 00:11:27,560
different actors and of different

239
00:11:26,060 --> 00:11:28,060
families are sharing code with each

240
00:11:27,560 --> 00:11:30,949
other

241
00:11:28,060 --> 00:11:33,260
so before shall we do any results of the

242
00:11:30,950 --> 00:11:35,240
analysis we did let me introduce you

243
00:11:33,260 --> 00:11:40,279
with the first tool that we are showing

244
00:11:35,240 --> 00:11:42,920
today we took this huge map from Gaffey

245
00:11:40,279 --> 00:11:45,970
with the thousands of nodes and turned

246
00:11:42,920 --> 00:11:49,160
it into the what we call the Russian apt

247
00:11:45,970 --> 00:11:51,080
ecosystem up and this is a web-based map

248
00:11:49,160 --> 00:11:52,819
interactive map that you can get a

249
00:11:51,080 --> 00:11:54,110
better understanding of the old echo

250
00:11:52,820 --> 00:11:57,290
system and the connections between the

251
00:11:54,110 --> 00:12:03,140
different families so let's have a quick

252
00:11:57,290 --> 00:12:06,260
demo ok so this is the map and unlike

253
00:12:03,140 --> 00:12:08,899
the previous graph from Gaffey where

254
00:12:06,260 --> 00:12:12,770
each node was a sample in this map each

255
00:12:08,899 --> 00:12:15,020
node represents a Marvel family so we

256
00:12:12,770 --> 00:12:20,980
can immediately start start seeing some

257
00:12:15,020 --> 00:12:23,660
clusters and we can dig deeper and get

258
00:12:20,980 --> 00:12:26,089
the names of each family and we can

259
00:12:23,660 --> 00:12:27,529
hover for example Agent P T Z we can

260
00:12:26,089 --> 00:12:29,839
over a cursor on it

261
00:12:27,529 --> 00:12:31,970
and see the highlighted connection for

262
00:12:29,839 --> 00:12:33,290
example comrade Andrew burrows and the

263
00:12:31,970 --> 00:12:36,560
name of the actor behind it which is

264
00:12:33,290 --> 00:12:40,459
Tula and and if I click on on the node I

265
00:12:36,560 --> 00:12:42,170
see this sidebar on the left which I

266
00:12:40,459 --> 00:12:43,880
have more information about the smaller

267
00:12:42,170 --> 00:12:46,459
family such as the name of the family

268
00:12:43,880 --> 00:12:48,380
the actor behind it when it was first

269
00:12:46,459 --> 00:12:51,160
spotted in the wild other names for the

270
00:12:48,380 --> 00:12:54,140
family where the short description and

271
00:12:51,160 --> 00:12:55,880
references articles research papers that

272
00:12:54,140 --> 00:12:58,819
we recommend to read about this family

273
00:12:55,880 --> 00:13:02,390
and of course links to into the reports

274
00:12:58,820 --> 00:13:04,670
down there and in which you can dig

275
00:13:02,390 --> 00:13:06,290
deeper inside the connections themself

276
00:13:04,670 --> 00:13:08,120
understand what pieces of assembly code

277
00:13:06,290 --> 00:13:12,880
are shared between samples of this

278
00:13:08,120 --> 00:13:12,880
family and samples of other families so

279
00:13:15,279 --> 00:13:21,020
the the team this map and the hoe

280
00:13:18,890 --> 00:13:24,040
Oh data that we walked in all open

281
00:13:21,020 --> 00:13:26,630
source and available on our geetha page

282
00:13:24,040 --> 00:13:28,150
so make sure you try it we invite you to

283
00:13:26,630 --> 00:13:31,689
do your own analysis

284
00:13:28,150 --> 00:13:35,840
using the map ok so now that we have

285
00:13:31,690 --> 00:13:38,090
this huge graph from Gaffey and this map

286
00:13:35,840 --> 00:13:39,980
we can start looking at the connections

287
00:13:38,090 --> 00:13:41,540
themselves and try to understand what

288
00:13:39,980 --> 00:13:43,880
are they are the interesting or the

289
00:13:41,540 --> 00:13:45,890
false positive and for us as reverse

290
00:13:43,880 --> 00:13:49,850
engineers this is where the fun part

291
00:13:45,890 --> 00:13:53,870
began so we did we analyzed and analyzed

292
00:13:49,850 --> 00:13:55,370
so many connections for days and we

293
00:13:53,870 --> 00:13:58,400
really hope to find some groundbreaking

294
00:13:55,370 --> 00:14:00,260
finding some new and interesting

295
00:13:58,400 --> 00:14:03,620
connections that nobody mentioned before

296
00:14:00,260 --> 00:14:05,840
but to our disappointment we could not

297
00:14:03,620 --> 00:14:08,140
find any indication that two different

298
00:14:05,840 --> 00:14:12,020
actors are sharing code with each other

299
00:14:08,140 --> 00:14:15,140
we did find many examples of two samples

300
00:14:12,020 --> 00:14:16,750
of different families but of the same

301
00:14:15,140 --> 00:14:19,550
actor that shared code with each other

302
00:14:16,750 --> 00:14:21,440
but we could not find two samples of

303
00:14:19,550 --> 00:14:22,939
different actors that the shared

304
00:14:21,440 --> 00:14:25,190
connection the shellcode between them

305
00:14:22,940 --> 00:14:26,930
was meaningful enough to say that some

306
00:14:25,190 --> 00:14:28,310
module or library of functions were

307
00:14:26,930 --> 00:14:31,489
shared between a different organization

308
00:14:28,310 --> 00:14:32,449
different Russian organizations so at

309
00:14:31,490 --> 00:14:34,580
the beginning we were quite disappointed

310
00:14:32,450 --> 00:14:37,700
but disappointed by these results ever

311
00:14:34,580 --> 00:14:40,370
really hope to find something more than

312
00:14:37,700 --> 00:14:42,200
that but later we figured that the fact

313
00:14:40,370 --> 00:14:44,690
that no code was shared between these

314
00:14:42,200 --> 00:14:47,060
these organizations is for itself an

315
00:14:44,690 --> 00:14:50,240
interesting piece of information so we

316
00:14:47,060 --> 00:14:52,369
started asking ourselves why why

317
00:14:50,240 --> 00:14:55,310
different organizations do not share

318
00:14:52,370 --> 00:14:57,740
code with each other and why we could

319
00:14:55,310 --> 00:15:00,709
come up with some theories the truth is

320
00:14:57,740 --> 00:15:03,560
that we really don't know and we have no

321
00:15:00,710 --> 00:15:07,010
one to ask and if we did not sure it

322
00:15:03,560 --> 00:15:09,319
will be wise but we have some theories

323
00:15:07,010 --> 00:15:12,710
and maybe the first one and maybe the

324
00:15:09,320 --> 00:15:14,660
strongest one is is that Russia is well

325
00:15:12,710 --> 00:15:17,390
aware for the importance of a good OPSEC

326
00:15:14,660 --> 00:15:19,280
and let away a quick pros and cons for

327
00:15:17,390 --> 00:15:23,840
the decision not to share code in terms

328
00:15:19,280 --> 00:15:26,270
of OPSEC Russia knows that if two

329
00:15:23,840 --> 00:15:29,480
different organizations will share code

330
00:15:26,270 --> 00:15:30,740
with each other in case were two

331
00:15:29,480 --> 00:15:31,800
different operations which are called

332
00:15:30,740 --> 00:15:34,080
with each other in case

333
00:15:31,800 --> 00:15:36,120
one operation will get caught my

334
00:15:34,080 --> 00:15:38,550
security researchers by security vendors

335
00:15:36,120 --> 00:15:40,950
it will put the other operations at risk

336
00:15:38,550 --> 00:15:44,010
so making sure the code is entirely

337
00:15:40,950 --> 00:15:45,750
separate and we'll make sure that this

338
00:15:44,010 --> 00:15:47,399
is not going to happen because nowadays

339
00:15:45,750 --> 00:15:49,709
we use code attribution is a

340
00:15:47,399 --> 00:15:53,430
Constabulary as a very good way to

341
00:15:49,709 --> 00:15:56,819
detect new operations but it comes with

342
00:15:53,430 --> 00:15:58,410
a cost and an expensive one because if

343
00:15:56,820 --> 00:16:00,690
this theory is true that means that

344
00:15:58,410 --> 00:16:02,730
Russia is willing to invest a lot of

345
00:16:00,690 --> 00:16:05,910
money a lot of time a lot of man-hours

346
00:16:02,730 --> 00:16:07,950
in having different teams of meroe

347
00:16:05,910 --> 00:16:09,890
developers writing the exact same

348
00:16:07,950 --> 00:16:12,690
functionality over and over again

349
00:16:09,890 --> 00:16:16,350
instead of reusing the existing

350
00:16:12,690 --> 00:16:21,990
knowledge existing models and this is

351
00:16:16,350 --> 00:16:26,519
very expensive the second theory that we

352
00:16:21,990 --> 00:16:28,079
have is that Russia is that the

353
00:16:26,519 --> 00:16:31,529
different organization do not share code

354
00:16:28,079 --> 00:16:33,390
due to internal politics and while this

355
00:16:31,529 --> 00:16:36,870
might be the case we are not too

356
00:16:33,390 --> 00:16:38,329
familiar with the internal relationships

357
00:16:36,870 --> 00:16:41,160
between with different organizations

358
00:16:38,329 --> 00:16:43,050
under the Russian government so we just

359
00:16:41,160 --> 00:16:45,540
wanted to point it out as a possible

360
00:16:43,050 --> 00:16:51,930
option but we don't have a lot of

361
00:16:45,540 --> 00:16:53,520
information to support it so we did not

362
00:16:51,930 --> 00:16:56,760
find the cross actor connections we

363
00:16:53,520 --> 00:16:59,730
wanted to but we do have a lot of data

364
00:16:56,760 --> 00:17:02,160
to work with we did enormous analysis of

365
00:16:59,730 --> 00:17:03,870
so many samples and we can still use

366
00:17:02,160 --> 00:17:07,939
this data and you already saw it in the

367
00:17:03,870 --> 00:17:10,470
apt map that we showed but we we also

368
00:17:07,939 --> 00:17:14,870
wrote another tool and even more

369
00:17:10,470 --> 00:17:17,760
practical this time so having access to

370
00:17:14,869 --> 00:17:19,739
thousands of samples and millions of

371
00:17:17,760 --> 00:17:22,439
pieces of code that were shared between

372
00:17:19,740 --> 00:17:26,010
these samples allowed us to understand

373
00:17:22,439 --> 00:17:27,900
which pieces of code which genes are

374
00:17:26,010 --> 00:17:31,379
more likely to be shared between the

375
00:17:27,900 --> 00:17:33,510
Russian organizations so we took each

376
00:17:31,380 --> 00:17:35,490
family and took all these samples of

377
00:17:33,510 --> 00:17:37,710
this man of this family and found the

378
00:17:35,490 --> 00:17:39,990
unique genes of these samples of this

379
00:17:37,710 --> 00:17:42,150
family that were repeated over and over

380
00:17:39,990 --> 00:17:44,250
again that were so popular so we

381
00:17:42,150 --> 00:17:44,820
automatically automatically generated

382
00:17:44,250 --> 00:17:48,480
garrison

383
00:17:44,820 --> 00:17:50,700
just for them and we took all these

384
00:17:48,480 --> 00:17:53,370
signatures for all these families put

385
00:17:50,700 --> 00:17:55,200
them in a in a arable set wrap it up

386
00:17:53,370 --> 00:17:57,979
together in a Python script and

387
00:17:55,200 --> 00:18:01,860
executable and we are sharing with you

388
00:17:57,980 --> 00:18:04,169
this tool you can scan your system your

389
00:18:01,860 --> 00:18:08,610
files against known and unknown Russia

390
00:18:04,169 --> 00:18:10,110
amputees and of course this tool and the

391
00:18:08,610 --> 00:18:12,120
rule set and the other rules are all

392
00:18:10,110 --> 00:18:13,979
open source and available on github so

393
00:18:12,120 --> 00:18:16,379
you can simply take it and put it in

394
00:18:13,980 --> 00:18:20,070
your favorite our scanners your favorite

395
00:18:16,380 --> 00:18:22,740
systems and we invite you to give it a

396
00:18:20,070 --> 00:18:26,250
try and give us your feedback about this

397
00:18:22,740 --> 00:18:27,720
tool even contribute to the project just

398
00:18:26,250 --> 00:18:29,429
few weeks ago we got we've got a very

399
00:18:27,720 --> 00:18:31,529
nice contribution from an external user

400
00:18:29,429 --> 00:18:34,500
and that made this tool cross-platform

401
00:18:31,529 --> 00:18:37,980
so now it can run on Windows Linux and

402
00:18:34,500 --> 00:18:41,580
Mac so please don't hesitate to to try

403
00:18:37,980 --> 00:18:42,250
it and that's it thank you very much for

404
00:18:41,580 --> 00:18:47,869
listening

405
00:18:42,250 --> 00:18:47,869
[Applause]

