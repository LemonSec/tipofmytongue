1
00:00:00,000 --> 00:00:05,490
<font color="#CCCCCC">a year ago I was invited to kind of</font>

2
00:00:03,659 --> 00:00:09,660
special conference<font color="#E5E5E5"> that was designed for</font>

3
00:00:05,490 --> 00:00:11,700
<font color="#CCCCCC">kids and teachers</font><font color="#E5E5E5"> especially in</font>

4
00:00:09,660 --> 00:00:15,299
secondary<font color="#E5E5E5"> school so they were like</font>

5
00:00:11,700 --> 00:00:17,430
<font color="#E5E5E5">pretty</font><font color="#CCCCCC"> much teenagers</font><font color="#E5E5E5"> and I was</font><font color="#CCCCCC"> supposed</font>

6
00:00:15,299 --> 00:00:19,680
to talk<font color="#CCCCCC"> about how</font><font color="#E5E5E5"> to safely</font><font color="#CCCCCC"> use the</font>

7
00:00:17,430 --> 00:00:23,630
<font color="#E5E5E5">internet like then what what to do what</font>

8
00:00:19,680 --> 00:00:27,779
not to<font color="#E5E5E5"> do and it was like in a place</font>

9
00:00:23,630 --> 00:00:32,360
quite<font color="#E5E5E5"> similar to this and I</font><font color="#CCCCCC"> was starting</font>

10
00:00:27,779 --> 00:00:35,820
<font color="#CCCCCC">my amazing speech my</font><font color="#E5E5E5"> amazing talk so</font>

11
00:00:32,360 --> 00:00:37,290
most<font color="#E5E5E5"> of the kids were like staring at</font>

12
00:00:35,820 --> 00:00:39,780
<font color="#CCCCCC">the</font><font color="#E5E5E5"> phones</font><font color="#CCCCCC"> they were like looking</font>

13
00:00:37,290 --> 00:00:43,589
downward in this like massive<font color="#CCCCCC"> 45-degree</font>

14
00:00:39,780 --> 00:00:46,289
angle<font color="#CCCCCC"> their</font><font color="#E5E5E5"> faces will mysteriously lit</font>

15
00:00:43,590 --> 00:00:48,899
up by<font color="#CCCCCC"> the screen</font><font color="#E5E5E5"> so you guys can imagine</font>

16
00:00:46,289 --> 00:00:52,500
what it could<font color="#CCCCCC"> be like to give a speech</font>

17
00:00:48,899 --> 00:00:56,239
<font color="#E5E5E5">to this kind of audience</font><font color="#CCCCCC"> and I stopped</font>

18
00:00:52,500 --> 00:00:59,280
and I<font color="#E5E5E5"> said hey</font><font color="#CCCCCC"> guys I mean am I being</font>

19
00:00:56,239 --> 00:01:03,000
annoying you or am I being disturbing or

20
00:00:59,280 --> 00:01:06,090
what and one of the kids<font color="#E5E5E5"> looked up and</font>

21
00:01:03,000 --> 00:01:07,979
he told<font color="#E5E5E5"> me this like I</font><font color="#CCCCCC"> did like</font><font color="#E5E5E5"> this is</font>

22
00:01:06,090 --> 00:01:12,240
<font color="#E5E5E5">like boring stuff you're talking</font><font color="#CCCCCC"> about</font>

23
00:01:07,979 --> 00:01:14,210
so the thing<font color="#CCCCCC"> is the only</font><font color="#E5E5E5"> thing that is</font>

24
00:01:12,240 --> 00:01:17,399
<font color="#E5E5E5">really interesting for</font><font color="#CCCCCC"> us from a</font>

25
00:01:14,210 --> 00:01:20,789
programming<font color="#E5E5E5"> or ID point of view is like</font>

26
00:01:17,400 --> 00:01:23,700
game cheats<font color="#E5E5E5"> that's pretty much they were</font>

27
00:01:20,790 --> 00:01:29,549
all interested in at least<font color="#CCCCCC"> that's what</font>

28
00:01:23,700 --> 00:01:31,860
they told me so<font color="#E5E5E5"> said</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> why not let's</font>

29
00:01:29,549 --> 00:01:34,710
talk about game cheats and from then on

30
00:01:31,860 --> 00:01:36,810
they<font color="#E5E5E5"> put on</font><font color="#CCCCCC"> their phones and we started</font>

31
00:01:34,710 --> 00:01:39,509
to<font color="#E5E5E5"> have like a really good discussion</font>

32
00:01:36,810 --> 00:01:39,960
<font color="#CCCCCC">and that was like an interesting lesson</font>

33
00:01:39,509 --> 00:01:43,079
for me

34
00:01:39,960 --> 00:01:45,899
first of all writing cheats<font color="#E5E5E5"> must be sexy</font>

35
00:01:43,079 --> 00:01:48,679
because<font color="#E5E5E5"> teenager kids are really</font>

36
00:01:45,899 --> 00:01:51,210
interested<font color="#E5E5E5"> in that</font><font color="#CCCCCC"> and on the other</font><font color="#E5E5E5"> hand</font>

37
00:01:48,680 --> 00:01:53,009
writing cheats<font color="#E5E5E5"> and dealing with cheats</font>

38
00:01:51,210 --> 00:01:55,199
<font color="#E5E5E5">and working with application cheats or</font>

39
00:01:53,009 --> 00:01:58,140
game cheats is a real cool<font color="#CCCCCC"> thing to</font>

40
00:01:55,200 --> 00:02:00,659
introduce people into to hook them into

41
00:01:58,140 --> 00:02:03,570
writing programs and hook them<font color="#E5E5E5"> into</font>

42
00:02:00,659 --> 00:02:06,060
writing<font color="#CCCCCC"> applications and that</font><font color="#E5E5E5"> was a</font>

43
00:02:03,570 --> 00:02:08,519
<font color="#E5E5E5">wrench was really interesting theory for</font>

44
00:02:06,060 --> 00:02:12,450
me and as I<font color="#E5E5E5"> was talking to some other</font>

45
00:02:08,520 --> 00:02:13,260
<font color="#E5E5E5">people</font><font color="#CCCCCC"> as it turned out this is like a</font>

46
00:02:12,450 --> 00:02:17,159
really

47
00:02:13,260 --> 00:02:19,679
<font color="#E5E5E5">in topic like we had some meetups which</font>

48
00:02:17,159 --> 00:02:22,709
were dealing<font color="#CCCCCC"> with applications and game</font>

49
00:02:19,680 --> 00:02:24,989
cheats<font color="#E5E5E5"> and they were really</font><font color="#CCCCCC"> popular</font><font color="#E5E5E5"> so</font>

50
00:02:22,709 --> 00:02:28,049
we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> writing cheats</font>

51
00:02:24,989 --> 00:02:29,250
<font color="#E5E5E5">especially for Android applications so</font>

52
00:02:28,049 --> 00:02:32,069
just<font color="#E5E5E5"> quick</font>

53
00:02:29,250 --> 00:02:36,030
Who am I my name is sommore<font color="#E5E5E5"> collage</font><font color="#CCCCCC"> I</font>

54
00:02:32,069 --> 00:02:39,629
work currently<font color="#E5E5E5"> as a researcher for</font><font color="#CCCCCC"> Maga</font>

55
00:02:36,030 --> 00:02:41,879
fit us<font color="#E5E5E5"> in my spare time</font><font color="#CCCCCC"> I've waste too</font>

56
00:02:39,629 --> 00:02:44,548
many hours trying<font color="#CCCCCC"> to break</font><font color="#E5E5E5"> Android</font>

57
00:02:41,879 --> 00:02:47,970
applications<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> a founder of</font>

58
00:02:44,549 --> 00:02:51,540
<font color="#CCCCCC">hacker shulie and this is a really</font><font color="#E5E5E5"> nice</font>

59
00:02:47,970 --> 00:02:54,120
opportunity to give<font color="#E5E5E5"> us give you guys an</font>

60
00:02:51,540 --> 00:02:55,769
introduction<font color="#E5E5E5"> into how to write game</font>

61
00:02:54,120 --> 00:03:00,150
cheats and<font color="#E5E5E5"> how to get started in</font><font color="#CCCCCC"> this</font>

62
00:02:55,769 --> 00:03:03,299
topic<font color="#E5E5E5"> so before we get</font><font color="#CCCCCC"> started let's</font>

63
00:03:00,150 --> 00:03:10,049
talk a little<font color="#CCCCCC"> bit about how an Android</font>

64
00:03:03,299 --> 00:03:11,849
application<font color="#E5E5E5"> is via top so we have the</font>

65
00:03:10,049 --> 00:03:15,200
<font color="#E5E5E5">application itself</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> first</font>

66
00:03:11,849 --> 00:03:18,569
glance<font color="#E5E5E5"> we have a local device which</font>

67
00:03:15,200 --> 00:03:21,959
wants the application code we have some

68
00:03:18,569 --> 00:03:23,790
network amp<font color="#E5E5E5"> endpoint and there must be</font>

69
00:03:21,959 --> 00:03:26,419
<font color="#E5E5E5">some connection between the network</font>

70
00:03:23,790 --> 00:03:29,429
endpoint and<font color="#E5E5E5"> the application code itself</font>

71
00:03:26,419 --> 00:03:32,699
of<font color="#E5E5E5"> course we have a piece</font><font color="#CCCCCC"> of hardware</font>

72
00:03:29,430 --> 00:03:35,190
<font color="#E5E5E5">running</font><font color="#CCCCCC"> like cameras GPS</font><font color="#E5E5E5"> equipments</font><font color="#CCCCCC"> the</font>

73
00:03:32,699 --> 00:03:39,389
<font color="#CCCCCC">screen itself sound cards gyroscopes</font>

74
00:03:35,190 --> 00:03:41,250
<font color="#E5E5E5">whatever</font><font color="#CCCCCC"> which must be also being</font>

75
00:03:39,389 --> 00:03:44,400
interaction being in interaction with

76
00:03:41,250 --> 00:03:47,340
<font color="#CCCCCC">the application code</font><font color="#E5E5E5"> we have some local</font>

77
00:03:44,400 --> 00:03:50,519
files we have<font color="#E5E5E5"> some interactions with</font>

78
00:03:47,340 --> 00:03:53,040
local files so that's pretty much<font color="#CCCCCC"> the</font>

79
00:03:50,519 --> 00:03:54,000
basic idea how an<font color="#E5E5E5"> Android application is</font>

80
00:03:53,040 --> 00:03:57,810
supposed to be working

81
00:03:54,000 --> 00:04:00,659
<font color="#E5E5E5">but let's dig a little bit deeper into</font>

82
00:03:57,810 --> 00:04:04,139
how that<font color="#E5E5E5"> thing works and how that can</font><font color="#CCCCCC"> be</font>

83
00:04:00,659 --> 00:04:06,899
used<font color="#E5E5E5"> to write</font><font color="#CCCCCC"> cheat</font><font color="#E5E5E5"> so let's get back to</font>

84
00:04:04,139 --> 00:04:11,459
<font color="#E5E5E5">square one we have the cold we have a</font>

85
00:04:06,900 --> 00:04:13,409
device we<font color="#CCCCCC"> have some</font><font color="#E5E5E5"> network and point we</font>

86
00:04:11,459 --> 00:04:17,220
have a piece of<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> some</font>

87
00:04:13,409 --> 00:04:19,409
local<font color="#E5E5E5"> files but that's not all</font><font color="#CCCCCC"> we have</font>

88
00:04:17,220 --> 00:04:22,650
something<font color="#E5E5E5"> that is called</font><font color="#CCCCCC"> the runtime</font>

89
00:04:19,409 --> 00:04:24,810
<font color="#CCCCCC">environment and this is like the service</font>

90
00:04:22,650 --> 00:04:27,000
<font color="#E5E5E5">that the operating system</font><font color="#CCCCCC"> provides to</font>

91
00:04:24,810 --> 00:04:30,030
the application<font color="#E5E5E5"> itself to</font>

92
00:04:27,000 --> 00:04:35,370
get<font color="#E5E5E5"> access</font><font color="#CCCCCC"> to old</font><font color="#E5E5E5"> goodies in the</font>

93
00:04:30,030 --> 00:04:37,919
previous slides<font color="#E5E5E5"> so hardware is reached</font>

94
00:04:35,370 --> 00:04:41,370
<font color="#E5E5E5">through these runtime environment</font>

95
00:04:37,920 --> 00:04:46,650
<font color="#E5E5E5">details it also handles local files</font>

96
00:04:41,370 --> 00:04:48,950
it also has API calls to to call other

97
00:04:46,650 --> 00:04:51,359
endpoints other network servers and

98
00:04:48,950 --> 00:04:53,880
basically this is<font color="#CCCCCC"> how</font><font color="#E5E5E5"> Android</font>

99
00:04:51,360 --> 00:04:56,700
applications work in the first<font color="#CCCCCC"> place and</font>

100
00:04:53,880 --> 00:04:59,310
<font color="#E5E5E5">as you will see the methods I show you</font>

101
00:04:56,700 --> 00:05:01,669
<font color="#E5E5E5">guys</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> they can be used to hack all</font>

102
00:04:59,310 --> 00:05:06,120
sorts of<font color="#CCCCCC"> applications not only games</font>

103
00:05:01,669 --> 00:05:08,310
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> so how do we</font><font color="#CCCCCC"> attack so what what</font>

104
00:05:06,120 --> 00:05:12,210
what<font color="#E5E5E5"> should we do with this kind of</font>

105
00:05:08,310 --> 00:05:14,910
<font color="#CCCCCC">application layout</font><font color="#E5E5E5"> so first of all what</font>

106
00:05:12,210 --> 00:05:18,450
what can we attack of course<font color="#E5E5E5"> we can go</font>

107
00:05:14,910 --> 00:05:20,460
for the network stream<font color="#E5E5E5"> so we can do</font>

108
00:05:18,450 --> 00:05:23,789
man-in-the-middle attacks we<font color="#CCCCCC"> have a lot</font>

109
00:05:20,460 --> 00:05:27,030
of<font color="#E5E5E5"> cool tools to do that</font><font color="#CCCCCC"> that can be</font>

110
00:05:23,790 --> 00:05:28,950
<font color="#E5E5E5">done quite</font><font color="#CCCCCC"> easily of</font><font color="#E5E5E5"> course if we have</font>

111
00:05:27,030 --> 00:05:30,450
some<font color="#CCCCCC"> SSL countermeasures like</font>

112
00:05:28,950 --> 00:05:34,020
certificate pinning<font color="#E5E5E5"> and that kind of</font>

113
00:05:30,450 --> 00:05:36,870
stuff that<font color="#E5E5E5"> can make our job much</font><font color="#CCCCCC"> harder</font>

114
00:05:34,020 --> 00:05:40,530
<font color="#E5E5E5">but nevertheless we can overcome those</font>

115
00:05:36,870 --> 00:05:43,110
problems<font color="#E5E5E5"> also we can attack the</font>

116
00:05:40,530 --> 00:05:47,039
application code itself<font color="#E5E5E5"> we take a hex</font>

117
00:05:43,110 --> 00:05:48,060
<font color="#CCCCCC">editor or just use</font><font color="#E5E5E5"> either pro or some</font>

118
00:05:47,040 --> 00:05:50,310
other<font color="#CCCCCC"> binary</font>

119
00:05:48,060 --> 00:05:52,470
tweaking<font color="#CCCCCC"> to to patch the application</font>

120
00:05:50,310 --> 00:05:55,229
code itself<font color="#E5E5E5"> and we can change the</font>

121
00:05:52,470 --> 00:05:57,510
applications<font color="#E5E5E5"> behavior we can also tweak</font>

122
00:05:55,229 --> 00:05:59,760
the local files within<font color="#E5E5E5"> the file system</font>

123
00:05:57,510 --> 00:06:02,070
so when it comes to<font color="#E5E5E5"> Android applications</font>

124
00:05:59,760 --> 00:06:05,310
<font color="#E5E5E5">this usually involves changing files in</font>

125
00:06:02,070 --> 00:06:08,849
the sandbox<font color="#E5E5E5"> we also can</font><font color="#CCCCCC"> use the</font><font color="#E5E5E5"> hardware</font>

126
00:06:05,310 --> 00:06:11,790
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we can mock things we can spoof our</font>

127
00:06:08,850 --> 00:06:15,120
GPS location<font color="#CCCCCC"> or we can use as</font><font color="#E5E5E5"> we saw</font>

128
00:06:11,790 --> 00:06:17,910
<font color="#CCCCCC">yesterday we can use a GPS jammer</font><font color="#E5E5E5"> to go</font>

129
00:06:15,120 --> 00:06:21,630
wherever we want on<font color="#E5E5E5"> the world we also</font>

130
00:06:17,910 --> 00:06:24,870
can attack the network<font color="#E5E5E5"> endpoint if we</font>

131
00:06:21,630 --> 00:06:28,890
<font color="#CCCCCC">allow to do so but most</font><font color="#E5E5E5"> in most cases</font>

132
00:06:24,870 --> 00:06:31,950
<font color="#CCCCCC">that option is off the table</font><font color="#E5E5E5"> and finally</font>

133
00:06:28,890 --> 00:06:35,520
which I will show<font color="#E5E5E5"> you and which we will</font>

134
00:06:31,950 --> 00:06:37,380
be<font color="#E5E5E5"> using in the</font><font color="#CCCCCC"> next few demos we can</font>

135
00:06:35,520 --> 00:06:39,719
also change the<font color="#CCCCCC"> runtime we can tweak</font>

136
00:06:37,380 --> 00:06:40,620
<font color="#E5E5E5">with the runtime which surrounds</font><font color="#CCCCCC"> the</font>

137
00:06:39,720 --> 00:06:43,590
application code

138
00:06:40,620 --> 00:06:46,490
and that's responsible<font color="#E5E5E5"> for every for</font>

139
00:06:43,590 --> 00:06:50,219
<font color="#CCCCCC">every interaction of the application</font>

140
00:06:46,490 --> 00:06:50,970
<font color="#CCCCCC">alright so how can we do that</font><font color="#E5E5E5"> and why</font>

141
00:06:50,220 --> 00:06:55,199
would we<font color="#E5E5E5"> do that</font>

142
00:06:50,970 --> 00:06:57,720
<font color="#E5E5E5">so runtime environment manipulation</font>

143
00:06:55,199 --> 00:06:59,760
<font color="#E5E5E5">comes with a whole lot of benefits first</font>

144
00:06:57,720 --> 00:07:03,389
<font color="#E5E5E5">of all we can intercept and change</font>

145
00:06:59,760 --> 00:07:05,310
<font color="#E5E5E5">application calls</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we can change the</font>

146
00:07:03,389 --> 00:07:08,430
way the<font color="#CCCCCC"> application interacts with its</font>

147
00:07:05,310 --> 00:07:10,790
environment<font color="#E5E5E5"> and we can also change how</font>

148
00:07:08,430 --> 00:07:13,680
the application functions internally<font color="#E5E5E5"> so</font>

149
00:07:10,790 --> 00:07:17,130
what this basically<font color="#E5E5E5"> means that we can</font>

150
00:07:13,680 --> 00:07:19,080
take<font color="#CCCCCC"> any object</font><font color="#E5E5E5"> if we consider on a java</font>

151
00:07:17,130 --> 00:07:21,840
application<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> take any job that</font>

152
00:07:19,080 --> 00:07:25,250
<font color="#E5E5E5">wanna class</font><font color="#CCCCCC"> within</font><font color="#E5E5E5"> the memory and we can</font>

153
00:07:21,840 --> 00:07:27,479
change<font color="#E5E5E5"> what it does how it</font><font color="#CCCCCC"> does it and</font>

154
00:07:25,250 --> 00:07:30,240
basically we<font color="#CCCCCC"> can hijack the entire</font>

155
00:07:27,479 --> 00:07:33,000
operation flow of the application<font color="#E5E5E5"> we can</font>

156
00:07:30,240 --> 00:07:36,180
<font color="#E5E5E5">override methods and then what which is</font>

157
00:07:33,000 --> 00:07:40,050
a really nice touch we can just quit<font color="#E5E5E5"> or</font>

158
00:07:36,180 --> 00:07:42,720
<font color="#CCCCCC">- and the application will</font><font color="#E5E5E5"> return to its</font>

159
00:07:40,050 --> 00:07:45,960
normal<font color="#E5E5E5"> state</font><font color="#CCCCCC"> of operation</font><font color="#E5E5E5"> which we will</font>

160
00:07:42,720 --> 00:07:50,280
see that it's not not<font color="#E5E5E5"> something that</font>

161
00:07:45,960 --> 00:07:52,440
every tool provides for us<font color="#E5E5E5"> so how can we</font>

162
00:07:50,280 --> 00:07:56,809
move on<font color="#E5E5E5"> so what what</font><font color="#CCCCCC"> are the tools we</font>

163
00:07:52,440 --> 00:08:01,260
<font color="#E5E5E5">can use to tamper with the runtime so I</font>

164
00:07:56,810 --> 00:08:02,789
will show<font color="#E5E5E5"> you three tools to do that</font><font color="#CCCCCC"> the</font>

165
00:08:01,260 --> 00:08:04,820
<font color="#E5E5E5">first of all first one is the xposed</font>

166
00:08:02,789 --> 00:08:08,099
framework<font color="#E5E5E5"> I'm pretty sure that you guys</font>

167
00:08:04,820 --> 00:08:12,599
<font color="#E5E5E5">all those veterans who have been using</font>

168
00:08:08,099 --> 00:08:15,060
Android<font color="#E5E5E5"> since inception</font><font color="#CCCCCC"> many of the</font>

169
00:08:12,599 --> 00:08:17,789
security<font color="#CCCCCC"> features which are now built</font><font color="#E5E5E5"> in</font>

170
00:08:15,060 --> 00:08:19,650
<font color="#E5E5E5">to Android they were they used to be</font>

171
00:08:17,789 --> 00:08:21,960
<font color="#CCCCCC">available only for rooted devices</font>

172
00:08:19,650 --> 00:08:25,109
<font color="#CCCCCC">through the use of xposed framework</font><font color="#E5E5E5"> back</font>

173
00:08:21,960 --> 00:08:28,590
in the old<font color="#E5E5E5"> KitKat marshmallow days for</font>

174
00:08:25,110 --> 00:08:31,949
instance<font color="#E5E5E5"> in those days</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> were not able</font>

175
00:08:28,590 --> 00:08:34,319
to<font color="#E5E5E5"> change which application to has</font>

176
00:08:31,949 --> 00:08:36,360
access to<font color="#E5E5E5"> which permissions so for</font>

177
00:08:34,320 --> 00:08:38,820
instance if you<font color="#E5E5E5"> install it like</font><font color="#CCCCCC"> facebook</font>

178
00:08:36,360 --> 00:08:41,070
or<font color="#CCCCCC"> facebook Messenger and it wanted to</font>

179
00:08:38,820 --> 00:08:45,209
have<font color="#E5E5E5"> access</font><font color="#CCCCCC"> to for say</font><font color="#E5E5E5"> the GPS</font>

180
00:08:41,070 --> 00:08:47,850
<font color="#E5E5E5">coordinates</font><font color="#CCCCCC"> you had no chance to</font><font color="#E5E5E5"> revoke</font>

181
00:08:45,209 --> 00:08:50,489
it later on<font color="#CCCCCC"> so once when you installed</font>

182
00:08:47,850 --> 00:08:54,270
the<font color="#E5E5E5"> application</font><font color="#CCCCCC"> it was there forever</font>

183
00:08:50,490 --> 00:08:57,750
<font color="#E5E5E5">so</font><font color="#CCCCCC"> but later</font><font color="#E5E5E5"> on Google in Google changed</font>

184
00:08:54,270 --> 00:08:59,640
this permission<font color="#CCCCCC"> model with 6.0 and now</font>

185
00:08:57,750 --> 00:09:01,829
it's<font color="#E5E5E5"> it's a feature</font><font color="#CCCCCC"> built in duty</font>

186
00:08:59,640 --> 00:09:04,020
operating system<font color="#E5E5E5"> but back in the days</font>

187
00:09:01,829 --> 00:09:05,790
you<font color="#E5E5E5"> had to use</font><font color="#CCCCCC"> the ex privacy framework</font>

188
00:09:04,020 --> 00:09:08,670
<font color="#E5E5E5">and naturally if that brings</font><font color="#CCCCCC"> a reverse</font>

189
00:09:05,790 --> 00:09:11,660
to you guys<font color="#CCCCCC"> but</font><font color="#E5E5E5"> that was a that was an</font>

190
00:09:08,670 --> 00:09:17,370
extension<font color="#E5E5E5"> to this</font><font color="#CCCCCC"> exposed homework so</font>

191
00:09:11,660 --> 00:09:19,680
exposed<font color="#E5E5E5"> had like module repository which</font>

192
00:09:17,370 --> 00:09:23,870
contained<font color="#E5E5E5"> modules for literally</font>

193
00:09:19,680 --> 00:09:27,060
everything<font color="#CCCCCC"> from-from bypassing detection</font>

194
00:09:23,870 --> 00:09:31,770
by passing certificate pinning all sorts

195
00:09:27,060 --> 00:09:33,930
of stuff the<font color="#E5E5E5"> other tool is called the</font>

196
00:09:31,770 --> 00:09:37,319
<font color="#E5E5E5">city a substrate</font><font color="#CCCCCC"> those folks who have</font>

197
00:09:33,930 --> 00:09:40,229
<font color="#CCCCCC">been using GRA jailbroken hi phones</font><font color="#E5E5E5"> back</font>

198
00:09:37,320 --> 00:09:43,020
in the day pretty sure you guys<font color="#CCCCCC"> know</font>

199
00:09:40,230 --> 00:09:45,440
this term this is<font color="#CCCCCC"> the same guy and it</font>

200
00:09:43,020 --> 00:09:48,089
basically does the<font color="#E5E5E5"> same thing so</font><font color="#CCCCCC"> it's a</font>

201
00:09:45,440 --> 00:09:51,810
runtime environment manipulation

202
00:09:48,089 --> 00:09:53,940
framework and unfortunately<font color="#CCCCCC"> it's now</font>

203
00:09:51,810 --> 00:09:57,209
abandoned as far as I know<font color="#E5E5E5"> so the latest</font>

204
00:09:53,940 --> 00:09:59,160
supported version is a KitKat<font color="#E5E5E5"> so it</font>

205
00:09:57,209 --> 00:10:02,279
doesn't work on recent Android<font color="#E5E5E5"> devices</font>

206
00:09:59,160 --> 00:10:04,860
<font color="#E5E5E5">but we have</font><font color="#CCCCCC"> something way way way better</font>

207
00:10:02,279 --> 00:10:07,200
it's good<font color="#CCCCCC"> Frida</font><font color="#E5E5E5"> as I was told it's a</font>

208
00:10:04,860 --> 00:10:10,170
<font color="#E5E5E5">Norwegian project and that's the</font><font color="#CCCCCC"> correct</font>

209
00:10:07,200 --> 00:10:13,110
<font color="#E5E5E5">way of pronouncing the name so this this</font>

210
00:10:10,170 --> 00:10:16,199
<font color="#E5E5E5">framework is really really cool I mean</font>

211
00:10:13,110 --> 00:10:18,150
it does everything we need to do as you

212
00:10:16,200 --> 00:10:21,779
will see it later<font color="#CCCCCC"> on so it's perfect for</font>

213
00:10:18,150 --> 00:10:23,939
<font color="#E5E5E5">penetration testers so for you folks out</font>

214
00:10:21,779 --> 00:10:27,360
there who<font color="#CCCCCC"> have to test spend their time</font>

215
00:10:23,940 --> 00:10:29,700
testing<font color="#CCCCCC"> a banking Android or mobile</font>

216
00:10:27,360 --> 00:10:31,589
<font color="#E5E5E5">banking Android applications this is one</font>

217
00:10:29,700 --> 00:10:34,290
<font color="#E5E5E5">of the coolest things you can get in</font>

218
00:10:31,589 --> 00:10:37,050
your arsenal so basically what it does

219
00:10:34,290 --> 00:10:39,449
it gives<font color="#E5E5E5"> you a scriptable quite easily</font>

220
00:10:37,050 --> 00:10:42,060
scriptable framework for application

221
00:10:39,450 --> 00:10:46,050
manipulation and<font color="#CCCCCC"> the nice</font><font color="#E5E5E5"> API to do so</font>

222
00:10:42,060 --> 00:10:49,349
and what is<font color="#CCCCCC"> last but not least it's</font>

223
00:10:46,050 --> 00:10:51,630
rock-solid<font color="#E5E5E5"> in terms of it never crashed</font>

224
00:10:49,350 --> 00:10:54,120
<font color="#E5E5E5">like seriously</font><font color="#CCCCCC"> I been</font><font color="#E5E5E5"> using</font>

225
00:10:51,630 --> 00:10:54,959
<font color="#CCCCCC">frida</font><font color="#E5E5E5"> for for a long time and it never</font>

226
00:10:54,120 --> 00:10:56,819
<font color="#E5E5E5">was Christ</font>

227
00:10:54,959 --> 00:10:58,829
I mean sometimes<font color="#CCCCCC"> the application crashed</font>

228
00:10:56,819 --> 00:11:01,530
of course but that<font color="#E5E5E5"> was because of me</font>

229
00:10:58,829 --> 00:11:03,060
writing the wrong hooks<font color="#E5E5E5"> and eventually</font>

230
00:11:01,530 --> 00:11:05,079
it caused some kind<font color="#E5E5E5"> of exception what</font>

231
00:11:03,060 --> 00:11:09,699
the application was<font color="#CCCCCC"> not able to</font><font color="#E5E5E5"> handle</font>

232
00:11:05,080 --> 00:11:09,700
so basically<font color="#E5E5E5"> that's for either for me</font>

233
00:11:09,910 --> 00:11:16,010
<font color="#E5E5E5">okay let's see how we work with freedom</font>

234
00:11:12,980 --> 00:11:18,830
<font color="#CCCCCC">typical work flow it's like we have an</font>

235
00:11:16,010 --> 00:11:20,720
apk<font color="#CCCCCC"> an</font><font color="#E5E5E5"> Android application</font><font color="#CCCCCC"> either</font><font color="#E5E5E5"> from</font>

236
00:11:18,830 --> 00:11:23,150
the<font color="#CCCCCC"> app store or</font><font color="#E5E5E5"> from wherever</font><font color="#CCCCCC"> s from</font>

237
00:11:20,720 --> 00:11:24,620
<font color="#E5E5E5">like to say that this is like a pen</font>

238
00:11:23,150 --> 00:11:27,079
testing assignment and the client gave

239
00:11:24,620 --> 00:11:29,060
<font color="#E5E5E5">us the application installer so first of</font>

240
00:11:27,080 --> 00:11:33,020
<font color="#E5E5E5">all we need to get access to the code</font>

241
00:11:29,060 --> 00:11:34,849
itself<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> D compile the application I</font>

242
00:11:33,020 --> 00:11:37,850
will<font color="#E5E5E5"> show you a couple of tools which</font>

243
00:11:34,850 --> 00:11:40,340
can capable of doing that<font color="#E5E5E5"> and then we</font>

244
00:11:37,850 --> 00:11:44,270
have to throw<font color="#E5E5E5"> a dig through the code</font>

245
00:11:40,340 --> 00:11:49,010
code and to find our way around<font color="#CCCCCC"> and to</font>

246
00:11:44,270 --> 00:11:50,990
see which are<font color="#CCCCCC"> the methods and which are</font>

247
00:11:49,010 --> 00:11:52,640
the classes which are crucial from<font color="#E5E5E5"> a</font>

248
00:11:50,990 --> 00:11:55,010
security point of view and which are

249
00:11:52,640 --> 00:11:58,010
interesting for<font color="#CCCCCC"> us</font><font color="#E5E5E5"> and then we create</font>

250
00:11:55,010 --> 00:12:00,980
<font color="#E5E5E5">little Freida script to tweak what with</font>

251
00:11:58,010 --> 00:12:05,180
those objects<font color="#CCCCCC"> and those classes and then</font>

252
00:12:00,980 --> 00:12:06,980
<font color="#E5E5E5">we marry we married those things the</font>

253
00:12:05,180 --> 00:12:09,829
application and<font color="#E5E5E5"> the free the script</font>

254
00:12:06,980 --> 00:12:15,230
itself<font color="#E5E5E5"> and then we see the change in the</font>

255
00:12:09,830 --> 00:12:17,360
applications behavior<font color="#E5E5E5"> how can we get get</font>

256
00:12:15,230 --> 00:12:19,130
around or way for<font color="#CCCCCC"> the through the first</font>

257
00:12:17,360 --> 00:12:21,170
step which like how<font color="#E5E5E5"> come with the</font>

258
00:12:19,130 --> 00:12:26,960
compiler application<font color="#E5E5E5"> so there are many</font>

259
00:12:21,170 --> 00:12:29,719
<font color="#E5E5E5">ways we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> do that</font><font color="#CCCCCC"> so the basic idea</font><font color="#E5E5E5"> of</font>

260
00:12:26,960 --> 00:12:32,570
application<font color="#CCCCCC"> the compilation</font><font color="#E5E5E5"> is to have</font>

261
00:12:29,720 --> 00:12:36,020
an approximation of<font color="#E5E5E5"> the actual</font><font color="#CCCCCC"> java code</font>

262
00:12:32,570 --> 00:12:38,360
which was used<font color="#E5E5E5"> to build the</font><font color="#CCCCCC"> application</font>

263
00:12:36,020 --> 00:12:40,460
so we can use a couple<font color="#E5E5E5"> of tools to do</font>

264
00:12:38,360 --> 00:12:41,990
<font color="#CCCCCC">that first</font><font color="#E5E5E5"> of all we have</font><font color="#CCCCCC"> the x2</font>

265
00:12:40,460 --> 00:12:45,140
<font color="#CCCCCC">Georgette's a quite old</font><font color="#E5E5E5"> project it's</font>

266
00:12:41,990 --> 00:12:47,300
available<font color="#E5E5E5"> on</font><font color="#CCCCCC"> Google code and that</font>

267
00:12:45,140 --> 00:12:51,260
translates an<font color="#E5E5E5"> apk file to a jar file</font>

268
00:12:47,300 --> 00:12:54,199
which can be<font color="#E5E5E5"> subsequently torn apart</font>

269
00:12:51,260 --> 00:12:56,720
<font color="#E5E5E5">using your favorite java decompiler</font><font color="#CCCCCC"> -</font>

270
00:12:54,200 --> 00:13:00,200
like<font color="#E5E5E5"> je degree</font><font color="#CCCCCC"> jaw dex or whichever two</font>

271
00:12:56,720 --> 00:13:03,020
you want but fortunately you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have</font>

272
00:13:00,200 --> 00:13:05,930
to have<font color="#E5E5E5"> those tools on</font><font color="#CCCCCC"> your computer</font>

273
00:13:03,020 --> 00:13:07,670
permanently because there are a couple

274
00:13:05,930 --> 00:13:10,790
<font color="#E5E5E5">of websites which provides you this</font>

275
00:13:07,670 --> 00:13:12,349
<font color="#E5E5E5">service for like for free so this means</font>

276
00:13:10,790 --> 00:13:16,790
that<font color="#CCCCCC"> you just simply upload your apk</font>

277
00:13:12,350 --> 00:13:18,170
file to<font color="#E5E5E5"> that web page and it in return</font>

278
00:13:16,790 --> 00:13:21,189
returns you the

279
00:13:18,170 --> 00:13:23,510
<font color="#E5E5E5">compiled Java source in a nice zip file</font>

280
00:13:21,190 --> 00:13:27,470
<font color="#CCCCCC">so it's quite easy to</font><font color="#E5E5E5"> get through this</font>

281
00:13:23,510 --> 00:13:32,149
time<font color="#E5E5E5"> okay see</font><font color="#CCCCCC"> let's see how Freda works</font>

282
00:13:27,470 --> 00:13:34,190
<font color="#E5E5E5">so we have the</font><font color="#CCCCCC"> application code</font><font color="#E5E5E5"> and the</font>

283
00:13:32,149 --> 00:13:38,480
local device<font color="#E5E5E5"> which is running free the</font>

284
00:13:34,190 --> 00:13:40,880
server<font color="#E5E5E5"> in order to inject or hook</font><font color="#CCCCCC"> into</font>

285
00:13:38,480 --> 00:13:44,510
freedom<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have to have a</font><font color="#CCCCCC"> Freda client</font>

286
00:13:40,880 --> 00:13:47,750
<font color="#CCCCCC">running</font><font color="#E5E5E5"> in on our machine so most of the</font>

287
00:13:44,510 --> 00:13:49,339
time<font color="#CCCCCC"> this means</font><font color="#E5E5E5"> that the free server can</font>

288
00:13:47,750 --> 00:13:51,730
interact with<font color="#E5E5E5"> the runtime and it can</font>

289
00:13:49,339 --> 00:13:56,800
tweak<font color="#E5E5E5"> whatever we want</font>

290
00:13:51,730 --> 00:14:02,990
<font color="#CCCCCC">alright so how do</font><font color="#E5E5E5"> we do that</font>

291
00:13:56,800 --> 00:14:06,740
come on<font color="#CCCCCC"> ok so let's see</font><font color="#E5E5E5"> a couple of a</font>

292
00:14:02,990 --> 00:14:08,540
couple<font color="#CCCCCC"> of templates for our layer of</font>

293
00:14:06,740 --> 00:14:10,910
tweaks<font color="#E5E5E5"> so this will be really</font>

294
00:14:08,540 --> 00:14:14,139
<font color="#E5E5E5">interesting and this</font><font color="#CCCCCC"> is quite</font><font color="#E5E5E5"> cool</font>

295
00:14:10,910 --> 00:14:16,910
because I didn't really<font color="#E5E5E5"> find such a</font>

296
00:14:14,139 --> 00:14:21,410
compilation of typical<font color="#CCCCCC"> Freda templates</font>

297
00:14:16,910 --> 00:14:24,850
on<font color="#CCCCCC"> the web</font><font color="#E5E5E5"> so first of all if</font><font color="#CCCCCC"> we want to</font>

298
00:14:21,410 --> 00:14:28,130
tweak with<font color="#CCCCCC"> a method let's say we have a</font>

299
00:14:24,850 --> 00:14:30,649
class which is have just called main

300
00:14:28,130 --> 00:14:33,140
activity here<font color="#E5E5E5"> and we have a method here</font>

301
00:14:30,649 --> 00:14:36,800
which<font color="#E5E5E5"> takes two parameters like two</font>

302
00:14:33,140 --> 00:14:41,390
strings<font color="#CCCCCC"> here how do we well if you want</font>

303
00:14:36,800 --> 00:14:43,459
<font color="#E5E5E5">to change this method</font><font color="#CCCCCC"> we apply the</font>

304
00:14:41,390 --> 00:14:45,470
following<font color="#E5E5E5"> Freda code</font>

305
00:14:43,459 --> 00:14:48,260
so basically the whole<font color="#CCCCCC"> point</font><font color="#E5E5E5"> is this is</font>

306
00:14:45,470 --> 00:14:50,990
like a template thing so we include the

307
00:14:48,260 --> 00:14:52,339
name of<font color="#CCCCCC"> the object itself</font><font color="#E5E5E5"> which is</font>

308
00:14:50,990 --> 00:14:56,269
called this package name<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> main</font>

309
00:14:52,339 --> 00:14:59,690
<font color="#E5E5E5">activity and we can overwrite the</font>

310
00:14:56,269 --> 00:15:02,569
implementation of the the method<font color="#E5E5E5"> using</font>

311
00:14:59,690 --> 00:15:05,630
this construct<font color="#CCCCCC"> cause egg dot method</font>

312
00:15:02,569 --> 00:15:08,810
implementation and then we take two

313
00:15:05,630 --> 00:15:12,860
parameters we do whatever we<font color="#E5E5E5"> want and we</font>

314
00:15:08,810 --> 00:15:15,160
can<font color="#E5E5E5"> then return either the</font><font color="#CCCCCC"> original</font>

315
00:15:12,860 --> 00:15:18,139
value with this this dot method

316
00:15:15,160 --> 00:15:20,779
<font color="#E5E5E5">construct or we can return true or false</font>

317
00:15:18,139 --> 00:15:23,180
because<font color="#E5E5E5"> as we see this in our example is</font>

318
00:15:20,779 --> 00:15:25,130
a<font color="#E5E5E5"> boolean method this method returns</font><font color="#CCCCCC"> a</font>

319
00:15:23,180 --> 00:15:26,899
boolean value<font color="#E5E5E5"> so if you don't want to</font>

320
00:15:25,130 --> 00:15:28,560
break the application<font color="#CCCCCC"> flow we also have</font>

321
00:15:26,899 --> 00:15:32,889
to return<font color="#E5E5E5"> a boolean value</font>

322
00:15:28,560 --> 00:15:35,138
all right let's move on what if we<font color="#CCCCCC"> just</font>

323
00:15:32,889 --> 00:15:40,360
simply we don't<font color="#E5E5E5"> want to change</font><font color="#CCCCCC"> the</font>

324
00:15:35,139 --> 00:15:43,029
applications behavior<font color="#E5E5E5"> but we want to to</font>

325
00:15:40,360 --> 00:15:46,630
tweak and to look<font color="#E5E5E5"> into the application</font>

326
00:15:43,029 --> 00:15:50,860
itself<font color="#CCCCCC"> to dump the for instance dump</font>

327
00:15:46,630 --> 00:15:54,370
some kind of<font color="#E5E5E5"> value which is in in a</font>

328
00:15:50,860 --> 00:15:58,149
<font color="#E5E5E5">variable within an</font><font color="#CCCCCC"> object</font><font color="#E5E5E5"> so let's say</font>

329
00:15:54,370 --> 00:16:01,899
that<font color="#E5E5E5"> we have here a my object object</font>

330
00:15:58,149 --> 00:16:07,209
which has a string array which<font color="#CCCCCC"> is called</font>

331
00:16:01,899 --> 00:16:10,209
a in order to get access<font color="#E5E5E5"> to this secret</font>

332
00:16:07,209 --> 00:16:15,130
parameter<font color="#E5E5E5"> we use this kind of</font><font color="#CCCCCC"> frida</font>

333
00:16:10,209 --> 00:16:20,170
script so we<font color="#E5E5E5"> simply take we look for the</font>

334
00:16:15,130 --> 00:16:23,410
<font color="#E5E5E5">my object object in the memory and we</font>

335
00:16:20,170 --> 00:16:27,849
once we have we found that instance<font color="#E5E5E5"> we</font>

336
00:16:23,410 --> 00:16:30,010
take the value<font color="#E5E5E5"> of its secret parameter</font>

337
00:16:27,850 --> 00:16:32,740
and we just dump<font color="#E5E5E5"> it so that's that's</font>

338
00:16:30,010 --> 00:16:34,149
<font color="#E5E5E5">pretty easy</font><font color="#CCCCCC"> it doesn't really change the</font>

339
00:16:32,740 --> 00:16:36,310
application<font color="#E5E5E5"> flow it doesn't do anything</font>

340
00:16:34,149 --> 00:16:38,680
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the objects themselves it</font><font color="#CCCCCC"> doesn't</font>

341
00:16:36,310 --> 00:16:41,619
replace<font color="#E5E5E5"> anything it just</font><font color="#CCCCCC"> simply dumps</font>

342
00:16:38,680 --> 00:16:45,729
whatever we have put in the object

343
00:16:41,620 --> 00:16:48,430
itself<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> this is cool</font><font color="#CCCCCC"> right but</font>

344
00:16:45,730 --> 00:16:51,579
what if<font color="#E5E5E5"> we have which is like a common</font>

345
00:16:48,430 --> 00:16:55,029
scenario when it comes to decompile

346
00:16:51,579 --> 00:16:57,219
<font color="#E5E5E5">Android source so most applications</font>

347
00:16:55,029 --> 00:17:01,029
which come from<font color="#E5E5E5"> the App Store</font><font color="#CCCCCC"> they go</font>

348
00:16:57,220 --> 00:17:03,089
through some form of office<font color="#E5E5E5"> keishon so</font>

349
00:17:01,029 --> 00:17:05,559
most<font color="#E5E5E5"> of the time this means that the</font>

350
00:17:03,089 --> 00:17:08,549
ProGuard<font color="#CCCCCC"> rules are enabled</font><font color="#E5E5E5"> within</font>

351
00:17:05,559 --> 00:17:11,049
Android<font color="#E5E5E5"> studio and</font><font color="#CCCCCC"> that manuals</font><font color="#E5E5E5"> the</font>

352
00:17:08,549 --> 00:17:12,910
classes<font color="#E5E5E5"> and method names within the</font>

353
00:17:11,049 --> 00:17:15,250
application source<font color="#E5E5E5"> so even if you</font><font color="#CCCCCC"> D</font>

354
00:17:12,910 --> 00:17:17,730
compile the<font color="#E5E5E5"> source itself</font><font color="#CCCCCC"> you won't be</font>

355
00:17:15,250 --> 00:17:20,980
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> figure out what the applications</font>

356
00:17:17,730 --> 00:17:23,890
<font color="#CCCCCC">methods and objects - because their</font>

357
00:17:20,980 --> 00:17:28,089
names will be<font color="#E5E5E5"> reduced to like letters</font>

358
00:17:23,890 --> 00:17:33,460
like a or b or like<font color="#E5E5E5"> a a or anything like</font>

359
00:17:28,089 --> 00:17:37,059
so you guys kind<font color="#E5E5E5"> of get the idea</font><font color="#CCCCCC"> so Java</font>

360
00:17:33,460 --> 00:17:39,370
allows<font color="#E5E5E5"> a</font><font color="#CCCCCC"> developer to use</font><font color="#E5E5E5"> the same name</font>

361
00:17:37,059 --> 00:17:41,350
<font color="#CCCCCC">for</font><font color="#E5E5E5"> a variable and for a function</font>

362
00:17:39,370 --> 00:17:42,139
<font color="#E5E5E5">because the signature will be still</font>

363
00:17:41,350 --> 00:17:45,290
different

364
00:17:42,140 --> 00:17:47,929
for those two<font color="#E5E5E5"> and you know that you get</font>

365
00:17:45,290 --> 00:17:50,420
<font color="#CCCCCC">ax get around that problem let's</font><font color="#E5E5E5"> say we</font>

366
00:17:47,929 --> 00:17:53,330
have this secret<font color="#E5E5E5"> perimeter here and also</font>

367
00:17:50,420 --> 00:17:55,790
<font color="#E5E5E5">we have a function which</font><font color="#CCCCCC"> is called a in</font>

368
00:17:53,330 --> 00:17:58,970
order to get<font color="#E5E5E5"> around this problem</font><font color="#CCCCCC"> we use</font>

369
00:17:55,790 --> 00:18:03,309
a similar problem<font color="#E5E5E5"> similar solution in</font>

370
00:17:58,970 --> 00:18:07,150
<font color="#CCCCCC">Frida</font><font color="#E5E5E5"> but we have to use an underscore</font>

371
00:18:03,309 --> 00:18:09,710
<font color="#E5E5E5">prepended to the variable name okay</font>

372
00:18:07,150 --> 00:18:12,890
enough of<font color="#E5E5E5"> code let's let's let's create</font>

373
00:18:09,710 --> 00:18:17,929
some<font color="#E5E5E5"> cheat all right so how do</font><font color="#CCCCCC"> we get</font>

374
00:18:12,890 --> 00:18:22,760
<font color="#CCCCCC">started</font><font color="#E5E5E5"> first of all no no</font><font color="#CCCCCC"> no first of</font>

375
00:18:17,929 --> 00:18:30,380
all we need<font color="#CCCCCC"> to start</font><font color="#E5E5E5"> freedom so first of</font>

376
00:18:22,760 --> 00:18:33,490
all I come<font color="#E5E5E5"> to my device if you look at</font>

377
00:18:30,380 --> 00:18:37,940
the<font color="#CCCCCC"> Frida website you can find</font>

378
00:18:33,490 --> 00:18:40,160
distributions<font color="#E5E5E5"> to and the servers to many</font>

379
00:18:37,940 --> 00:18:42,980
platforms for instance like iOS<font color="#E5E5E5"> Android</font>

380
00:18:40,160 --> 00:18:45,320
Linux<font color="#E5E5E5"> whatever and you have to download</font>

381
00:18:42,980 --> 00:18:47,540
the corresponding version of course from

382
00:18:45,320 --> 00:18:50,720
<font color="#E5E5E5">the architecture to your device</font><font color="#CCCCCC"> I'm</font>

383
00:18:47,540 --> 00:19:01,700
using<font color="#E5E5E5"> android x86 here</font>

384
00:18:50,720 --> 00:19:05,809
so<font color="#E5E5E5"> I started</font><font color="#CCCCCC"> Frida server okay so</font><font color="#E5E5E5"> just</font>

385
00:19:01,700 --> 00:19:06,770
<font color="#E5E5E5">to</font><font color="#CCCCCC"> check that</font><font color="#E5E5E5"> Frida is working freedom</font>

386
00:19:05,809 --> 00:19:11,059
yes

387
00:19:06,770 --> 00:19:14,270
gives us a list of the<font color="#CCCCCC"> processes</font><font color="#E5E5E5"> which</font>

388
00:19:11,059 --> 00:19:17,240
<font color="#CCCCCC">can be tweaked using the USB</font><font color="#E5E5E5"> connection</font>

389
00:19:14,270 --> 00:19:21,200
hence the - you switch after<font color="#CCCCCC"> freedom</font>

390
00:19:17,240 --> 00:19:23,840
<font color="#E5E5E5">okay so let's see the first thing</font><font color="#CCCCCC"> so now</font>

391
00:19:21,200 --> 00:19:25,880
we see<font color="#CCCCCC"> that all the applications and</font><font color="#E5E5E5"> all</font>

392
00:19:23,840 --> 00:19:29,360
the environment is working<font color="#CCCCCC"> up</font><font color="#E5E5E5"> working</font>

393
00:19:25,880 --> 00:19:32,240
fine let's see so I start<font color="#CCCCCC"> to type in</font>

394
00:19:29,360 --> 00:19:35,209
some<font color="#CCCCCC"> stuff and I tap</font><font color="#E5E5E5"> on encrypt and</font>

395
00:19:32,240 --> 00:19:39,470
apparently the application encrypts

396
00:19:35,210 --> 00:19:43,640
whatever I have is interesting<font color="#E5E5E5"> and the</font>

397
00:19:39,470 --> 00:19:48,080
the task is<font color="#E5E5E5"> to find out what the key is</font>

398
00:19:43,640 --> 00:19:50,210
<font color="#E5E5E5">so how can we do that the first approach</font>

399
00:19:48,080 --> 00:19:52,610
like<font color="#E5E5E5"> let's call it the</font><font color="#CCCCCC"> traditional</font>

400
00:19:50,210 --> 00:19:55,840
approach is that we<font color="#E5E5E5"> simply take the</font>

401
00:19:52,610 --> 00:19:58,658
<font color="#E5E5E5">application we</font>

402
00:19:55,840 --> 00:20:02,110
<font color="#CCCCCC">depart</font><font color="#E5E5E5"> and we try to figure out what the</font>

403
00:19:58,659 --> 00:20:03,850
encryption key<font color="#CCCCCC"> is so I see that</font><font color="#E5E5E5"> this is</font>

404
00:20:02,110 --> 00:20:07,299
<font color="#CCCCCC">kind of a static key so if I press</font>

405
00:20:03,850 --> 00:20:10,320
<font color="#E5E5E5">encrypt again it returns the same</font><font color="#CCCCCC"> output</font>

406
00:20:07,299 --> 00:20:13,450
for the same plaintext value so this

407
00:20:10,320 --> 00:20:16,200
concludes<font color="#E5E5E5"> that it's a static it's using</font>

408
00:20:13,450 --> 00:20:18,909
some<font color="#E5E5E5"> kind of static gate this is</font><font color="#CCCCCC"> the</font>

409
00:20:16,200 --> 00:20:20,799
<font color="#E5E5E5">actual cold piece of code that is</font>

410
00:20:18,909 --> 00:20:23,950
<font color="#E5E5E5">responsible for encryption so it's not a</font>

411
00:20:20,799 --> 00:20:26,770
very<font color="#CCCCCC"> hard to understand how it</font><font color="#E5E5E5"> works so</font>

412
00:20:23,950 --> 00:20:30,940
once we have<font color="#CCCCCC"> to string values to swing</font>

413
00:20:26,770 --> 00:20:34,090
parameters it defines<font color="#E5E5E5"> an</font><font color="#CCCCCC"> Aes ECB cipher</font>

414
00:20:30,940 --> 00:20:37,270
with pkcs5 padding<font color="#E5E5E5"> and what it simply</font>

415
00:20:34,090 --> 00:20:39,279
does it takes the<font color="#CCCCCC"> value the plaintext</font>

416
00:20:37,270 --> 00:20:42,070
<font color="#CCCCCC">and it encrypts the whole thing with the</font>

417
00:20:39,279 --> 00:20:45,220
first<font color="#CCCCCC"> parameter and returns</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> as a</font>

418
00:20:42,070 --> 00:20:49,870
string value so<font color="#CCCCCC"> that's not really</font><font color="#E5E5E5"> hard</font>

419
00:20:45,220 --> 00:20:52,090
<font color="#CCCCCC">to fall out so in order</font><font color="#E5E5E5"> to know to find</font>

420
00:20:49,870 --> 00:20:57,100
<font color="#E5E5E5">out what the key is we simply use this</font>

421
00:20:52,090 --> 00:20:59,918
<font color="#CCCCCC">frida function we take the mainactivity</font>

422
00:20:57,100 --> 00:21:02,500
<font color="#E5E5E5">parameter which is enclosing this</font>

423
00:20:59,919 --> 00:21:04,299
encrypt function and we replace the

424
00:21:02,500 --> 00:21:10,120
implementation of this encrypt function

425
00:21:04,299 --> 00:21:12,730
with one that<font color="#CCCCCC"> is before executing the</font>

426
00:21:10,120 --> 00:21:14,678
actual encryption<font color="#E5E5E5"> feature it logs</font>

427
00:21:12,730 --> 00:21:18,159
<font color="#E5E5E5">everything to the console so let's see</font>

428
00:21:14,679 --> 00:21:22,179
how it works<font color="#E5E5E5"> out so how we invoke</font>

429
00:21:18,159 --> 00:21:26,730
freedom is we simply<font color="#E5E5E5"> provide the process</font>

430
00:21:22,179 --> 00:21:29,919
name which we want<font color="#E5E5E5"> to hook using this</font>

431
00:21:26,730 --> 00:21:32,799
set of processes<font color="#E5E5E5"> and we also need to</font>

432
00:21:29,919 --> 00:21:34,720
provide<font color="#CCCCCC"> the</font><font color="#E5E5E5"> JavaScript file which</font>

433
00:21:32,799 --> 00:21:37,059
contains the<font color="#CCCCCC"> code of the actual hook</font>

434
00:21:34,720 --> 00:21:39,690
<font color="#E5E5E5">that's what I showed you</font><font color="#CCCCCC"> guys here so</font>

435
00:21:37,059 --> 00:21:44,049
<font color="#CCCCCC">this is the</font><font color="#E5E5E5"> actual contents of that</font>

436
00:21:39,690 --> 00:21:48,270
<font color="#CCCCCC">javascript file</font><font color="#E5E5E5"> so we started that and</font>

437
00:21:44,049 --> 00:21:52,120
if we click on encrypt<font color="#E5E5E5"> we see that the</font>

438
00:21:48,270 --> 00:21:55,658
encryption key is written<font color="#E5E5E5"> out</font><font color="#CCCCCC"> on the on</font>

439
00:21:52,120 --> 00:21:57,580
the<font color="#E5E5E5"> screen or along</font><font color="#CCCCCC"> with the</font><font color="#E5E5E5"> cipher</font><font color="#CCCCCC"> text</font>

440
00:21:55,659 --> 00:21:59,049
which<font color="#CCCCCC"> is kind of</font><font color="#E5E5E5"> cool because we didn't</font>

441
00:21:57,580 --> 00:22:00,820
<font color="#CCCCCC">have to touch anything</font><font color="#E5E5E5"> within the</font>

442
00:21:59,049 --> 00:22:02,799
application I didn't have to resign it

443
00:22:00,820 --> 00:22:04,629
didn't have to patch it didn't have to

444
00:22:02,799 --> 00:22:08,020
do anything with it which could break

445
00:22:04,630 --> 00:22:08,679
its internal<font color="#E5E5E5"> integrity check controls</font>

446
00:22:08,020 --> 00:22:17,379
which

447
00:22:08,679 --> 00:22:19,749
kind of cool<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we are almost as</font>

448
00:22:17,379 --> 00:22:23,678
cool as Tom Cruise<font color="#CCCCCC"> using this Kawasaki</font>

449
00:22:19,749 --> 00:22:26,309
motorcycle<font color="#E5E5E5"> okay let's move on to</font>

450
00:22:23,679 --> 00:22:26,309
something<font color="#CCCCCC"> more interesting</font>

451
00:22:26,409 --> 00:22:35,320
our second application is a kind of a

452
00:22:32,909 --> 00:22:37,869
little logging at the<font color="#CCCCCC"> login application</font>

453
00:22:35,320 --> 00:22:40,240
so I enter something here<font color="#E5E5E5"> and the</font>

454
00:22:37,869 --> 00:22:41,769
application returns<font color="#E5E5E5"> incorrect</font>

455
00:22:40,240 --> 00:22:46,419
credentials entered so<font color="#CCCCCC"> I</font><font color="#E5E5E5"> obviously</font>

456
00:22:41,769 --> 00:22:50,559
<font color="#CCCCCC">there's some kind of local</font><font color="#E5E5E5"> pin screen</font>

457
00:22:46,419 --> 00:22:52,090
<font color="#E5E5E5">which can be quite often seen in the</font>

458
00:22:50,559 --> 00:22:56,499
client applications or<font color="#E5E5E5"> mobile</font><font color="#CCCCCC"> banking</font>

459
00:22:52,090 --> 00:22:59,470
applications<font color="#E5E5E5"> and it's that's the reason</font>

460
00:22:56,499 --> 00:23:03,700
how that we should find out how to get

461
00:22:59,470 --> 00:23:07,059
our way<font color="#CCCCCC"> around this if we come back</font><font color="#E5E5E5"> to</font>

462
00:23:03,700 --> 00:23:11,529
the present<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> actual code that</font>

463
00:23:07,059 --> 00:23:14,440
<font color="#CCCCCC">is responsible</font><font color="#E5E5E5"> for the application login</font>

464
00:23:11,529 --> 00:23:16,450
logic<font color="#CCCCCC"> so as we see there's a click</font>

465
00:23:14,440 --> 00:23:20,919
listener<font color="#CCCCCC"> which is associated to</font><font color="#E5E5E5"> this</font>

466
00:23:16,450 --> 00:23:24,129
<font color="#E5E5E5">login button and it invokes</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> boolean is</font>

467
00:23:20,919 --> 00:23:27,009
<font color="#CCCCCC">pin correct function which</font><font color="#E5E5E5"> takes a</font>

468
00:23:24,129 --> 00:23:29,529
string<font color="#CCCCCC"> as a</font><font color="#E5E5E5"> parameter and it passed</font>

469
00:23:27,009 --> 00:23:32,559
something<font color="#E5E5E5"> which is irrelevant for us at</font>

470
00:23:29,529 --> 00:23:36,070
<font color="#E5E5E5">this</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> and returns a boolean true or</font>

471
00:23:32,559 --> 00:23:39,279
false<font color="#E5E5E5"> so let's find out how we can</font>

472
00:23:36,070 --> 00:23:42,240
<font color="#E5E5E5">bypass this obviously we could use the</font>

473
00:23:39,279 --> 00:23:45,039
same method as earlier<font color="#E5E5E5"> so that the</font>

474
00:23:42,240 --> 00:23:46,600
application is<font color="#E5E5E5"> changed so that it always</font>

475
00:23:45,039 --> 00:23:49,379
<font color="#E5E5E5">returns true so</font><font color="#CCCCCC"> that we can basically</font>

476
00:23:46,600 --> 00:23:53,699
<font color="#E5E5E5">bypass the login screen</font><font color="#CCCCCC"> but I found</font>

477
00:23:49,379 --> 00:23:58,959
<font color="#E5E5E5">something way cooler than that so let's</font>

478
00:23:53,700 --> 00:24:04,059
let's see if we can brute force the<font color="#E5E5E5"> code</font>

479
00:23:58,960 --> 00:24:05,730
so what<font color="#E5E5E5"> we do is we locate this class in</font>

480
00:24:04,059 --> 00:24:11,289
the memory this<font color="#CCCCCC"> object in the memory</font><font color="#E5E5E5"> and</font>

481
00:24:05,730 --> 00:24:17,919
we start iterating<font color="#E5E5E5"> potential key space</font>

482
00:24:11,289 --> 00:24:20,039
of potential pins<font color="#E5E5E5"> and should the is</font><font color="#CCCCCC"> pin</font>

483
00:24:17,919 --> 00:24:22,470
correct function return a true value

484
00:24:20,039 --> 00:24:26,250
then we<font color="#E5E5E5"> log out</font>

485
00:24:22,470 --> 00:24:31,440
get out<font color="#E5E5E5"> on the screen and we know that</font>

486
00:24:26,250 --> 00:24:46,890
<font color="#E5E5E5">it's been the correct pin okay let's</font>

487
00:24:31,440 --> 00:24:49,559
have<font color="#CCCCCC"> a run at it and as we turn out as</font>

488
00:24:46,890 --> 00:24:52,730
it turns out it's quite<font color="#E5E5E5"> quick ten</font>

489
00:24:49,559 --> 00:24:57,720
<font color="#E5E5E5">thousand is a really small key space and</font>

490
00:24:52,730 --> 00:25:01,890
as we see that the correct<font color="#E5E5E5"> answer</font><font color="#CCCCCC"> is</font>

491
00:24:57,720 --> 00:25:03,630
eight six four six which is<font color="#E5E5E5"> true and</font>

492
00:25:01,890 --> 00:25:07,169
it's this is<font color="#E5E5E5"> quite a cool because in</font>

493
00:25:03,630 --> 00:25:09,990
order to brute force<font color="#E5E5E5"> this pin the actual</font>

494
00:25:07,169 --> 00:25:11,850
way of how the pin is checked<font color="#E5E5E5"> is</font>

495
00:25:09,990 --> 00:25:15,299
completely irrelevant from<font color="#E5E5E5"> my point of</font>

496
00:25:11,850 --> 00:25:17,459
view<font color="#E5E5E5"> because</font><font color="#CCCCCC"> I used</font><font color="#E5E5E5"> the very same method</font>

497
00:25:15,299 --> 00:25:18,870
call<font color="#E5E5E5"> which the application uses so this</font>

498
00:25:17,460 --> 00:25:21,390
is<font color="#E5E5E5"> quite cool because I didn't have to</font>

499
00:25:18,870 --> 00:25:24,209
<font color="#CCCCCC">reverse-engineer</font><font color="#E5E5E5"> whichever intricate</font>

500
00:25:21,390 --> 00:25:26,100
encryption method the developers<font color="#E5E5E5"> happen</font>

501
00:25:24,210 --> 00:25:28,039
to implement within<font color="#E5E5E5"> their code</font><font color="#CCCCCC"> I don't</font>

502
00:25:26,100 --> 00:25:29,760
care<font color="#E5E5E5"> I don't have to know because</font>

503
00:25:28,039 --> 00:25:31,590
manipulating the one time<font color="#E5E5E5"> I'm</font>

504
00:25:29,760 --> 00:25:33,000
manipulating the application<font color="#CCCCCC"> I can use</font>

505
00:25:31,590 --> 00:25:36,059
the very same implementation of the

506
00:25:33,000 --> 00:25:39,390
piece of code so this this makes things

507
00:25:36,059 --> 00:25:41,580
way way quicker than<font color="#E5E5E5"> trying to reverse</font>

508
00:25:39,390 --> 00:25:45,000
<font color="#E5E5E5">engineer the crypto of the application</font>

509
00:25:41,580 --> 00:25:50,730
<font color="#E5E5E5">itself okay</font>

510
00:25:45,000 --> 00:25:56,309
scenario number<font color="#E5E5E5"> one number three we also</font>

511
00:25:50,730 --> 00:25:58,200
<font color="#E5E5E5">this cool Android applications have a</font>

512
00:25:56,309 --> 00:26:00,928
tendency to detect<font color="#CCCCCC"> too</font><font color="#E5E5E5"> routed</font>

513
00:25:58,200 --> 00:26:03,510
applications<font color="#E5E5E5"> of course there is a whole</font>

514
00:26:00,929 --> 00:26:06,000
bunch<font color="#E5E5E5"> of tools</font><font color="#CCCCCC"> around that many of those</font>

515
00:26:03,510 --> 00:26:08,640
<font color="#E5E5E5">tools involve for instance the xposed</font>

516
00:26:06,000 --> 00:26:10,919
framework I think<font color="#E5E5E5"> route clock is the</font>

517
00:26:08,640 --> 00:26:12,990
application<font color="#E5E5E5"> or</font><font color="#CCCCCC"> the or the xposed module</font>

518
00:26:10,919 --> 00:26:15,059
which<font color="#CCCCCC"> you want to</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> should you want to</font>

519
00:26:12,990 --> 00:26:18,240
<font color="#E5E5E5">bypass</font><font color="#CCCCCC"> traditional route detection</font>

520
00:26:15,059 --> 00:26:24,500
methods but<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can do that by</font><font color="#E5E5E5"> hand I can</font>

521
00:26:18,240 --> 00:26:28,380
show you<font color="#E5E5E5"> two demos which are supposed to</font>

522
00:26:24,500 --> 00:26:33,600
show how route detection<font color="#CCCCCC"> buffers can be</font>

523
00:26:28,380 --> 00:26:35,520
done<font color="#E5E5E5"> okay let's see my demo application</font>

524
00:26:33,600 --> 00:26:37,889
which is quite

525
00:26:35,520 --> 00:26:42,330
for the crude one<font color="#E5E5E5"> so when I press check</font>

526
00:26:37,890 --> 00:26:45,690
and<font color="#E5E5E5"> it</font><font color="#CCCCCC"> tries it responds</font><font color="#E5E5E5"> back that my</font>

527
00:26:42,330 --> 00:26:48,689
device is<font color="#CCCCCC"> dirty so its rooted so how can</font>

528
00:26:45,690 --> 00:26:54,870
<font color="#E5E5E5">we get our way around that we take the</font>

529
00:26:48,690 --> 00:26:56,250
<font color="#E5E5E5">application we simply look at what the</font>

530
00:26:54,870 --> 00:26:59,489
application does one<font color="#E5E5E5"> will press this</font>

531
00:26:56,250 --> 00:27:01,620
button<font color="#E5E5E5"> and</font><font color="#CCCCCC"> as we see that</font><font color="#E5E5E5"> the logic is</font>

532
00:26:59,490 --> 00:27:05,450
very<font color="#CCCCCC"> similar</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the previous example so</font>

533
00:27:01,620 --> 00:27:09,209
<font color="#CCCCCC">this means that there is</font><font color="#E5E5E5"> a boolean</font>

534
00:27:05,450 --> 00:27:11,850
returning function which I topped is

535
00:27:09,210 --> 00:27:15,240
rooted but it can be anything and should

536
00:27:11,850 --> 00:27:16,530
the application<font color="#E5E5E5"> detect a</font><font color="#CCCCCC"> root device</font><font color="#E5E5E5"> it</font>

537
00:27:15,240 --> 00:27:19,200
returns with<font color="#E5E5E5"> the true otherwise</font><font color="#CCCCCC"> it</font>

538
00:27:16,530 --> 00:27:22,950
<font color="#CCCCCC">returns false so it's quite quite</font>

539
00:27:19,200 --> 00:27:27,060
trivial<font color="#CCCCCC"> what it does</font><font color="#E5E5E5"> so what we do is</font>

540
00:27:22,950 --> 00:27:30,210
simply take the implementation of that

541
00:27:27,060 --> 00:27:33,300
method<font color="#E5E5E5"> and we simply overload it with</font>

542
00:27:30,210 --> 00:27:36,780
<font color="#CCCCCC">our custom code and we always return</font>

543
00:27:33,300 --> 00:27:39,050
<font color="#E5E5E5">false in this example and let's see how</font>

544
00:27:36,780 --> 00:27:39,050
<font color="#E5E5E5">it works</font>

545
00:27:49,260 --> 00:27:54,669
again I use the<font color="#CCCCCC"> same method as earlier</font>

546
00:27:51,910 --> 00:27:56,890
<font color="#E5E5E5">if I click</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> then we have a</font><font color="#CCCCCC"> route</font>

547
00:27:54,669 --> 00:27:58,960
detection involved message as we asked

548
00:27:56,890 --> 00:28:02,470
and boom the device detects<font color="#CCCCCC"> it's clean</font>

549
00:27:58,960 --> 00:28:05,440
<font color="#E5E5E5">see it's quite a boring and it's it</font>

550
00:28:02,470 --> 00:28:08,860
<font color="#E5E5E5">looks quite trivial</font><font color="#CCCCCC"> I mean like come on</font>

551
00:28:05,440 --> 00:28:11,830
<font color="#E5E5E5">who would do such a very trivial to</font>

552
00:28:08,860 --> 00:28:20,408
bypass method of route detection<font color="#CCCCCC"> I</font><font color="#E5E5E5"> show</font>

553
00:28:11,830 --> 00:28:22,889
you these guys so one<font color="#E5E5E5"> click here said no</font>

554
00:28:20,409 --> 00:28:28,419
no no<font color="#E5E5E5"> sorry</font><font color="#CCCCCC"> you can't use</font><font color="#E5E5E5"> our</font>

555
00:28:22,890 --> 00:28:30,820
application on a rooted device<font color="#CCCCCC"> but how</font>

556
00:28:28,419 --> 00:28:33,720
can<font color="#E5E5E5"> we get our way around that using the</font>

557
00:28:30,820 --> 00:28:33,720
exact same method

558
00:28:39,299 --> 00:28:46,559
I obviously<font color="#E5E5E5"> won't shoot code to you guys</font>

559
00:28:42,330 --> 00:28:50,750
<font color="#CCCCCC">I hope</font><font color="#E5E5E5"> you understand</font><font color="#CCCCCC"> all right</font><font color="#E5E5E5"> if we go</font>

560
00:28:46,559 --> 00:28:53,930
here click<font color="#E5E5E5"> and then we can move on</font>

561
00:28:50,750 --> 00:28:53,930
[Applause]

562
00:28:56,690 --> 00:29:05,309
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> now let's let's let's have some</font>

563
00:29:00,510 --> 00:29:08,100
<font color="#E5E5E5">fun</font><font color="#CCCCCC"> I won't show you</font><font color="#E5E5E5"> Tom Cruise's</font>

564
00:29:05,309 --> 00:29:10,830
obviously has a tendency to do all<font color="#CCCCCC"> sorts</font>

565
00:29:08,100 --> 00:29:13,830
of crazy stunts with motorcycles<font color="#E5E5E5"> without</font>

566
00:29:10,830 --> 00:29:18,928
any proper<font color="#E5E5E5"> protective equipment</font><font color="#CCCCCC"> kids</font>

567
00:29:13,830 --> 00:29:23,490
<font color="#E5E5E5">this is not cool</font><font color="#CCCCCC"> alright let's have</font><font color="#E5E5E5"> some</font>

568
00:29:18,929 --> 00:29:28,740
fun<font color="#E5E5E5"> so let's do I promised you guys a</font>

569
00:29:23,490 --> 00:29:31,769
cheater for<font color="#E5E5E5"> a minesweeper game this is</font>

570
00:29:28,740 --> 00:29:34,919
our favorite<font color="#E5E5E5"> - paper game it's</font>

571
00:29:31,769 --> 00:29:38,940
apparently quite similar to<font color="#CCCCCC"> all</font>

572
00:29:34,919 --> 00:29:42,899
minesweeper implementations so how<font color="#E5E5E5"> cool</font>

573
00:29:38,940 --> 00:29:45,990
it would be to know where the mines are

574
00:29:42,899 --> 00:29:51,840
<font color="#E5E5E5">this is also possible</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> freedom</font><font color="#CCCCCC"> if</font>

575
00:29:45,990 --> 00:29:54,870
you want to find out how<font color="#E5E5E5"> to reproduce</font>

576
00:29:51,840 --> 00:29:57,330
<font color="#E5E5E5">this kind of hack you supposed to find</font>

577
00:29:54,870 --> 00:29:59,850
like a<font color="#E5E5E5"> two dimensional array</font><font color="#CCCCCC"> in the</font>

578
00:29:57,330 --> 00:30:02,730
memory<font color="#E5E5E5"> because most applicants my</font><font color="#CCCCCC"> sweet</font>

579
00:29:59,850 --> 00:30:05,610
<font color="#CCCCCC">four applications have a tendency to</font>

580
00:30:02,730 --> 00:30:08,370
<font color="#E5E5E5">have only one or two two-dimensional</font>

581
00:30:05,610 --> 00:30:12,870
arrays and those are responsible for the

582
00:30:08,370 --> 00:30:15,979
table itself<font color="#CCCCCC"> so let's see how they work</font>

583
00:30:12,870 --> 00:30:15,979
[Music]

584
00:30:21,450 --> 00:30:27,090
<font color="#E5E5E5">okay and now that we see that</font><font color="#CCCCCC"> this is</font>

585
00:30:24,090 --> 00:30:30,030
the table<font color="#E5E5E5"> so this supposed to be mine</font>

586
00:30:27,090 --> 00:30:32,310
here<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> and you see it's basically</font><font color="#E5E5E5"> the</font>

587
00:30:30,030 --> 00:30:35,910
same stuff<font color="#CCCCCC"> so</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> original the really</font>

588
00:30:32,310 --> 00:30:38,310
cool thing about these hacks<font color="#E5E5E5"> is that you</font>

589
00:30:35,910 --> 00:30:45,810
don't really<font color="#CCCCCC"> have to spend too much time</font>

590
00:30:38,310 --> 00:30:49,139
on trying<font color="#E5E5E5"> to figure out how to do how to</font>

591
00:30:45,810 --> 00:30:51,030
do stuff<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> these hacks can be</font>

592
00:30:49,140 --> 00:30:54,810
developed in quite literally like a

593
00:30:51,030 --> 00:30:57,240
couple<font color="#E5E5E5"> of hours so no hard programming</font>

594
00:30:54,810 --> 00:31:00,090
skills are required<font color="#E5E5E5"> so that's if you</font>

595
00:30:57,240 --> 00:31:03,000
want<font color="#E5E5E5"> to if you happen to have a kid who</font>

596
00:31:00,090 --> 00:31:07,699
wants to<font color="#E5E5E5"> get into developing game cheats</font>

597
00:31:03,000 --> 00:31:16,760
<font color="#CCCCCC">freida is the go-to</font><font color="#E5E5E5"> solution for those</font>

598
00:31:07,700 --> 00:31:16,760
all<font color="#E5E5E5"> right let's let's see what I know</font>

599
00:31:21,350 --> 00:31:27,120
<font color="#E5E5E5">okay and now let's have a cheater</font><font color="#CCCCCC"> for a</font>

600
00:31:24,660 --> 00:31:31,260
blackjack game<font color="#E5E5E5"> that's that's what this</font>

601
00:31:27,120 --> 00:31:36,209
one was really<font color="#E5E5E5"> really fun</font><font color="#CCCCCC"> so the game</font>

602
00:31:31,260 --> 00:31:38,460
itself is it goes like<font color="#CCCCCC"> this</font><font color="#E5E5E5"> I just</font>

603
00:31:36,210 --> 00:31:42,030
<font color="#CCCCCC">downloaded it from</font><font color="#E5E5E5"> Play Store it's a</font>

604
00:31:38,460 --> 00:31:44,130
free<font color="#E5E5E5"> blackjack application fortunately</font>

605
00:31:42,030 --> 00:31:46,530
it<font color="#E5E5E5"> doesn't allow you to</font><font color="#CCCCCC"> earn money so</font>

606
00:31:44,130 --> 00:31:52,500
<font color="#E5E5E5">it's not connected to anything</font><font color="#CCCCCC"> it works</font>

607
00:31:46,530 --> 00:31:54,300
<font color="#E5E5E5">pretty okay in every environment</font><font color="#CCCCCC"> so as</font>

608
00:31:52,500 --> 00:31:58,710
you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> I must be pretty good at</font>

609
00:31:54,300 --> 00:32:03,450
<font color="#E5E5E5">this game as I have one point 23</font>

610
00:31:58,710 --> 00:32:07,410
quintillion of whatever currency<font color="#CCCCCC"> the</font>

611
00:32:03,450 --> 00:32:08,960
<font color="#CCCCCC">game happens to be using and okay let's</font>

612
00:32:07,410 --> 00:32:13,290
let's see let's let's<font color="#E5E5E5"> play something</font>

613
00:32:08,960 --> 00:32:16,680
let's see how it work it's like<font color="#CCCCCC"> a quite</font>

614
00:32:13,290 --> 00:32:19,230
<font color="#CCCCCC">traditional game of blackjack so I'm</font>

615
00:32:16,680 --> 00:32:21,090
pretty<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> you guys know the rules but</font>

616
00:32:19,230 --> 00:32:22,440
<font color="#E5E5E5">how cool it would be if</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> could have</font>

617
00:32:21,090 --> 00:32:26,820
access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the stack let's do the deck</font>

618
00:32:22,440 --> 00:32:29,300
itself let's see how we can get<font color="#CCCCCC"> around</font>

619
00:32:26,820 --> 00:32:29,300
<font color="#CCCCCC">that problem</font>

620
00:32:29,650 --> 00:32:47,620
they called it<font color="#CCCCCC"> - okay</font><font color="#E5E5E5"> so what this</font>

621
00:32:43,150 --> 00:32:50,380
<font color="#CCCCCC">fritter script does it finds the deck</font>

622
00:32:47,620 --> 00:32:54,610
object within<font color="#E5E5E5"> a memory and it just</font>

623
00:32:50,380 --> 00:32:56,320
enumerates<font color="#E5E5E5"> it so now we see</font><font color="#CCCCCC"> that there</font>

624
00:32:54,610 --> 00:32:59,590
must be<font color="#E5E5E5"> something dodgy going</font><font color="#CCCCCC"> on as we</font>

625
00:32:56,320 --> 00:33:03,340
have two tenths of<font color="#CCCCCC"> dimes right after one</font>

626
00:32:59,590 --> 00:33:05,080
after<font color="#CCCCCC"> another if I say</font><font color="#E5E5E5"> that's deal I'm</font>

627
00:33:03,340 --> 00:33:07,240
supposed to have a<font color="#CCCCCC"> ten and a nice and</font>

628
00:33:05,080 --> 00:33:11,620
<font color="#E5E5E5">I'm suppose to have a blackjack boom but</font>

629
00:33:07,240 --> 00:33:13,420
I did it was not<font color="#E5E5E5"> me I'm serious</font><font color="#CCCCCC"> okay</font>

630
00:33:11,620 --> 00:33:15,850
<font color="#E5E5E5">let's let's try another one this was</font>

631
00:33:13,420 --> 00:33:20,010
<font color="#E5E5E5">completely accidental</font><font color="#CCCCCC"> I was not supposed</font>

632
00:33:15,850 --> 00:33:24,070
<font color="#CCCCCC">to have a blackjack</font><font color="#E5E5E5"> yet okay now I</font>

633
00:33:20,010 --> 00:33:32,980
should have a<font color="#E5E5E5"> dime and the night okay</font>

634
00:33:24,070 --> 00:33:38,110
see I'm not winning at this point okay

635
00:33:32,980 --> 00:33:41,470
<font color="#CCCCCC">see so</font><font color="#E5E5E5"> this is quite cool because you</font>

636
00:33:38,110 --> 00:33:45,010
can peek into the<font color="#CCCCCC"> cards that</font><font color="#E5E5E5"> are</font>

637
00:33:41,470 --> 00:33:48,370
supposed to come so that<font color="#E5E5E5"> this means that</font>

638
00:33:45,010 --> 00:33:53,290
from now<font color="#E5E5E5"> on it's quite trivial to</font><font color="#CCCCCC"> win</font><font color="#E5E5E5"> so</font>

639
00:33:48,370 --> 00:33:55,300
that's<font color="#CCCCCC"> quite it</font><font color="#E5E5E5"> kind of cool but I was</font>

640
00:33:53,290 --> 00:33:57,909
<font color="#E5E5E5">thinking</font><font color="#CCCCCC"> like I made like several</font>

641
00:33:55,300 --> 00:34:01,419
trillion dollars using this method<font color="#E5E5E5"> but</font>

642
00:33:57,910 --> 00:34:02,220
it made me<font color="#E5E5E5"> think that</font><font color="#CCCCCC"> maybe we can do</font>

643
00:34:01,420 --> 00:34:05,380
better<font color="#E5E5E5"> than that</font>

644
00:34:02,220 --> 00:34:07,929
so how come how about like having<font color="#CCCCCC"> a</font>

645
00:34:05,380 --> 00:34:10,899
blackjack each and every time<font color="#CCCCCC"> in</font><font color="#E5E5E5"> my hand</font>

646
00:34:07,929 --> 00:34:14,080
one I store the game so that's<font color="#E5E5E5"> also</font>

647
00:34:10,899 --> 00:34:16,440
possible<font color="#CCCCCC"> I have a</font><font color="#E5E5E5"> two version of this</font>

648
00:34:14,080 --> 00:34:16,440
<font color="#E5E5E5">cheat</font>

649
00:34:17,159 --> 00:34:25,120
<font color="#E5E5E5">so what it</font><font color="#CCCCCC"> basically what it does it</font>

650
00:34:19,659 --> 00:34:28,830
simply substitute the values of the deck

651
00:34:25,120 --> 00:34:33,929
object so it's basically an array<font color="#E5E5E5"> and it</font>

652
00:34:28,830 --> 00:34:37,418
<font color="#E5E5E5">substitutes</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> cards that are</font><font color="#CCCCCC"> in the</font>

653
00:34:33,929 --> 00:34:40,980
position of<font color="#CCCCCC"> being handed to the player</font>

654
00:34:37,418 --> 00:34:43,290
and now I'm<font color="#E5E5E5"> supposed to have a blackjack</font>

655
00:34:40,980 --> 00:34:45,210
<font color="#E5E5E5">whenever I played</font>

656
00:34:43,290 --> 00:34:48,480
so that's that's<font color="#CCCCCC"> kind of cool</font><font color="#E5E5E5"> because I</font>

657
00:34:45,210 --> 00:34:51,750
<font color="#CCCCCC">can win</font><font color="#E5E5E5"> whenever I want so from now on</font>

658
00:34:48,480 --> 00:34:53,580
this has completely<font color="#E5E5E5"> changed the focus of</font>

659
00:34:51,750 --> 00:34:56,010
the<font color="#E5E5E5"> game so I what I was really</font>

660
00:34:53,580 --> 00:34:58,170
<font color="#E5E5E5">interested</font><font color="#CCCCCC"> in how</font><font color="#E5E5E5"> far can you get like</font>

661
00:34:56,010 --> 00:34:59,940
for the first<font color="#E5E5E5"> time</font><font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to see</font>

662
00:34:58,170 --> 00:35:02,700
what's the biggest chip in the game<font color="#E5E5E5"> like</font>

663
00:34:59,940 --> 00:35:03,420
<font color="#E5E5E5">and it turns out this 1 billion is</font><font color="#CCCCCC"> the</font>

664
00:35:02,700 --> 00:35:09,600
biggest one

665
00:35:03,420 --> 00:35:11,850
the game has<font color="#E5E5E5"> but you see this this thing</font>

666
00:35:09,600 --> 00:35:16,020
that<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> supposed to</font><font color="#CCCCCC"> win</font><font color="#E5E5E5"> all the time</font>

667
00:35:11,850 --> 00:35:19,980
this presented<font color="#CCCCCC"> the</font><font color="#E5E5E5"> problem as you can't</font>

668
00:35:16,020 --> 00:35:23,130
put all your money in the stack<font color="#E5E5E5"> as you</font>

669
00:35:19,980 --> 00:35:25,650
have to press this one<font color="#CCCCCC"> vidiian chip each</font>

670
00:35:23,130 --> 00:35:28,590
and every time<font color="#CCCCCC"> you want to</font><font color="#E5E5E5"> enter</font><font color="#CCCCCC"> 1</font>

671
00:35:25,650 --> 00:35:31,140
<font color="#E5E5E5">billion units to the stack and it's</font>

672
00:35:28,590 --> 00:35:35,700
quite<font color="#E5E5E5"> boring because I should in order</font>

673
00:35:31,140 --> 00:35:38,520
<font color="#E5E5E5">to put all this amount I should press it</font>

674
00:35:35,700 --> 00:35:41,100
1 million<font color="#CCCCCC"> times which is kind of boring</font>

675
00:35:38,520 --> 00:35:46,400
<font color="#CCCCCC">so I came up with a little</font><font color="#E5E5E5"> script that</font>

676
00:35:41,100 --> 00:35:53,850
does<font color="#E5E5E5"> this</font><font color="#CCCCCC"> for me which does</font><font color="#E5E5E5"> where is it</font>

677
00:35:46,400 --> 00:35:56,960
<font color="#CCCCCC">no let's say I want to put it</font><font color="#E5E5E5"> like 500</font>

678
00:35:53,850 --> 00:35:56,960
times and

679
00:36:05,560 --> 00:36:16,870
this made things<font color="#E5E5E5"> way quicker and then I</font>

680
00:36:12,870 --> 00:36:37,839
have my nice<font color="#E5E5E5"> cheat which allows me to</font>

681
00:36:16,870 --> 00:36:40,859
win amazing so at this point we are<font color="#E5E5E5"> this</font>

682
00:36:37,840 --> 00:36:44,650
<font color="#E5E5E5">cool as Tom Cruise on this</font><font color="#CCCCCC"> motorcycle</font>

683
00:36:40,860 --> 00:36:46,660
<font color="#E5E5E5">which which this image is like brilliant</font>

684
00:36:44,650 --> 00:36:49,020
because<font color="#E5E5E5"> it has everything that can</font><font color="#CCCCCC"> be</font>

685
00:36:46,660 --> 00:36:53,319
cool<font color="#E5E5E5"> about an action movie like a hero</font>

686
00:36:49,020 --> 00:36:56,980
explosions dog pigeons<font color="#CCCCCC"> a motorcycle</font>

687
00:36:53,320 --> 00:36:59,920
running away<font color="#CCCCCC"> from the explosion and cool</font>

688
00:36:56,980 --> 00:37:04,240
<font color="#E5E5E5">sunglasses</font><font color="#CCCCCC"> leather jackets</font><font color="#E5E5E5"> and no safety</font>

689
00:36:59,920 --> 00:37:06,840
equipment<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> was all thank</font>

690
00:37:04,240 --> 00:37:06,839
<font color="#CCCCCC">you</font><font color="#E5E5E5"> for your attention</font>

691
00:37:11,460 --> 00:37:17,700
another thing<font color="#E5E5E5"> so in order to if we come</font>

692
00:37:15,060 --> 00:37:20,370
<font color="#CCCCCC">back</font><font color="#E5E5E5"> to my little game</font><font color="#CCCCCC"> so you know what</font>

693
00:37:17,700 --> 00:37:25,220
was really interested<font color="#CCCCCC"> in</font><font color="#E5E5E5"> how far you can</font>

694
00:37:20,370 --> 00:37:29,670
get<font color="#CCCCCC"> with this so</font><font color="#E5E5E5"> I just</font><font color="#CCCCCC"> pointed</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> 1.2</font>

695
00:37:25,220 --> 00:37:32,160
<font color="#E5E5E5">quintillion units and the fact that the</font>

696
00:37:29,670 --> 00:37:36,060
game is prepared for such a ridiculous

697
00:37:32,160 --> 00:37:38,100
amount<font color="#E5E5E5"> of money and the fact that it has</font>

698
00:37:36,060 --> 00:37:41,509
a<font color="#E5E5E5"> wall that the the biggest chip the</font>

699
00:37:38,100 --> 00:37:45,360
game has is 1 billion<font color="#E5E5E5"> whatever unit so</font>

700
00:37:41,510 --> 00:37:48,540
if like this<font color="#E5E5E5"> supposed to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> like a real</font>

701
00:37:45,360 --> 00:37:52,080
use case of a player<font color="#E5E5E5"> reaching this</font>

702
00:37:48,540 --> 00:37:54,000
amount<font color="#E5E5E5"> of money with no cheats or the</font>

703
00:37:52,080 --> 00:37:57,270
game developers<font color="#E5E5E5"> worse were prepared for</font>

704
00:37:54,000 --> 00:38:01,770
cheating<font color="#E5E5E5"> so in order to put everything</font>

705
00:37:57,270 --> 00:38:04,500
<font color="#E5E5E5">on the stack you should employ you</font>

706
00:38:01,770 --> 00:38:07,140
should<font color="#E5E5E5"> click this</font><font color="#CCCCCC"> money time on that</font>

707
00:38:04,500 --> 00:38:10,350
billion chip so this made me<font color="#CCCCCC"> think this</font>

708
00:38:07,140 --> 00:38:12,270
game the developers<font color="#E5E5E5"> of</font><font color="#CCCCCC"> this game</font><font color="#E5E5E5"> they</font>

709
00:38:10,350 --> 00:38:15,799
may or may not<font color="#E5E5E5"> have been expecting some</font>

710
00:38:12,270 --> 00:38:22,980
cheaters thank you

711
00:38:15,800 --> 00:38:22,980
[Applause]

