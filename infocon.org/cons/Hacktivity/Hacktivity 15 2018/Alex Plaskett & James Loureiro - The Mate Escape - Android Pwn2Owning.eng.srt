1
00:00:00,030 --> 00:00:05,549
so yeah this is<font color="#E5E5E5"> an hour story of taking</font>

2
00:00:02,970 --> 00:00:07,200
part<font color="#E5E5E5"> in</font><font color="#CCCCCC"> poem last year and also</font><font color="#E5E5E5"> our</font>

3
00:00:05,549 --> 00:00:07,680
incredible ability to<font color="#E5E5E5"> use Microsoft</font>

4
00:00:07,200 --> 00:00:10,710
Paint

5
00:00:07,680 --> 00:00:13,649
to<font color="#E5E5E5"> create that as well so yeah let's get</font>

6
00:00:10,710 --> 00:00:14,639
going<font color="#CCCCCC"> so</font><font color="#E5E5E5"> just a quick agenda</font><font color="#CCCCCC"> things we</font>

7
00:00:13,650 --> 00:00:16,320
want to<font color="#E5E5E5"> go through is</font><font color="#CCCCCC"> just some</font><font color="#E5E5E5"> of the</font>

8
00:00:14,639 --> 00:00:18,990
background to<font color="#E5E5E5"> us taking part in poems</font>

9
00:00:16,320 --> 00:00:20,369
<font color="#E5E5E5">way some of the important bits we</font>

10
00:00:18,990 --> 00:00:22,769
thought are around<font color="#CCCCCC"> our bar content</font>

11
00:00:20,369 --> 00:00:26,160
<font color="#E5E5E5">approach</font><font color="#CCCCCC"> so of how do we find the</font><font color="#E5E5E5"> bones</font>

12
00:00:22,769 --> 00:00:28,198
that<font color="#CCCCCC"> we ended</font><font color="#E5E5E5"> up using last year</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> of</font>

13
00:00:26,160 --> 00:00:30,300
the<font color="#E5E5E5"> tooling we used and how we try to</font>

14
00:00:28,199 --> 00:00:32,640
approach<font color="#E5E5E5"> automation which I'll become a</font>

15
00:00:30,300 --> 00:00:34,230
bit clearer in a bit<font color="#CCCCCC"> we'll go through</font>

16
00:00:32,640 --> 00:00:35,850
<font color="#CCCCCC">all the vulnerabilities we found how we</font>

17
00:00:34,230 --> 00:00:43,019
chained them all together<font color="#E5E5E5"> to</font><font color="#CCCCCC"> create an</font>

18
00:00:35,850 --> 00:00:45,450
exploit as well so well really<font color="#E5E5E5"> quickly</font>

19
00:00:43,020 --> 00:00:47,460
<font color="#CCCCCC">then who are we so on James</font>

20
00:00:45,450 --> 00:00:50,700
<font color="#CCCCCC">I</font><font color="#E5E5E5"> lead up</font><font color="#CCCCCC"> the security research team at</font>

21
00:00:47,460 --> 00:00:53,489
<font color="#CCCCCC">MWR my main focus is around</font><font color="#E5E5E5"> VR reverse</font>

22
00:00:50,700 --> 00:00:54,930
engineering<font color="#E5E5E5"> and new management</font>

23
00:00:53,489 --> 00:00:56,760
responsibilities as<font color="#E5E5E5"> well</font>

24
00:00:54,930 --> 00:00:59,550
so trying to<font color="#CCCCCC"> heard other researchers</font>

25
00:00:56,760 --> 00:01:01,589
into doing cool<font color="#CCCCCC"> stuff as well a bit</font>

26
00:00:59,550 --> 00:01:03,470
later we'll hear<font color="#CCCCCC"> from Alex</font><font color="#E5E5E5"> he's an</font>

27
00:01:01,590 --> 00:01:06,659
offensive security<font color="#CCCCCC"> research for MWR</font>

28
00:01:03,470 --> 00:01:08,520
again<font color="#E5E5E5"> primarily doing VR so he's done</font>

29
00:01:06,659 --> 00:01:10,140
things like<font color="#E5E5E5"> Windows Phone 7 jailbreaks</font>

30
00:01:08,520 --> 00:01:12,439
<font color="#E5E5E5">did</font><font color="#CCCCCC"> pounds Wayne this</font><font color="#E5E5E5"> year it gets</font>

31
00:01:10,140 --> 00:01:14,610
<font color="#E5E5E5">safari lots of</font><font color="#CCCCCC"> mobile security</font><font color="#E5E5E5"> as well</font>

32
00:01:12,439 --> 00:01:18,600
<font color="#CCCCCC">yeah we're pretty big on I'll move our</font>

33
00:01:14,610 --> 00:01:21,180
security particular against Android<font color="#E5E5E5"> so</font>

34
00:01:18,600 --> 00:01:25,289
bit of<font color="#CCCCCC"> background then around</font><font color="#E5E5E5"> particular</font>

35
00:01:21,180 --> 00:01:27,119
<font color="#CCCCCC">our</font><font color="#E5E5E5"> MWR involvement</font><font color="#CCCCCC"> impound</font><font color="#E5E5E5"> home so we</font>

36
00:01:25,290 --> 00:01:29,040
have a bit<font color="#E5E5E5"> of a history with it back in</font>

37
00:01:27,119 --> 00:01:31,979
2014<font color="#CCCCCC"> we took part</font><font color="#E5E5E5"> against the</font><font color="#CCCCCC"> Samsung</font>

38
00:01:29,040 --> 00:01:33,390
<font color="#CCCCCC">Galaxy s5 and the Amazon fire phone so</font>

39
00:01:31,979 --> 00:01:35,610
we were<font color="#E5E5E5"> successful in both those</font>

40
00:01:33,390 --> 00:01:38,189
categories exploiting the NFC component

41
00:01:35,610 --> 00:01:39,210
on the<font color="#E5E5E5"> Samsung</font><font color="#CCCCCC"> Galaxy s5 and the Amazon</font>

42
00:01:38,189 --> 00:01:43,229
fire phone for a man-in-the-middle

43
00:01:39,210 --> 00:01:45,479
attack actually<font color="#E5E5E5"> the Samsung NFC attack</font>

44
00:01:43,229 --> 00:01:48,149
was hilarious it<font color="#E5E5E5"> basically if you did a</font>

45
00:01:45,479 --> 00:01:50,970
touch to transfer files<font color="#E5E5E5"> it just opened a</font>

46
00:01:48,149 --> 00:01:52,829
web server in the root of<font color="#CCCCCC"> the phone</font><font color="#E5E5E5"> so</font>

47
00:01:50,970 --> 00:01:57,298
probably one of the easiest<font color="#E5E5E5"> pwned home</font>

48
00:01:52,829 --> 00:02:00,630
wins<font color="#E5E5E5"> ever we took part again in 2016</font>

49
00:01:57,299 --> 00:02:03,750
against the Google Nexus 6p so again we

50
00:02:00,630 --> 00:02:06,329
found<font color="#E5E5E5"> a bone in the browser component</font><font color="#CCCCCC"> at</font>

51
00:02:03,750 --> 00:02:08,020
the<font color="#E5E5E5"> time that was only a partial success</font>

52
00:02:06,329 --> 00:02:09,130
unfortunately because

53
00:02:08,020 --> 00:02:12,040
rolled out the day before<font color="#CCCCCC"> the</font>

54
00:02:09,130 --> 00:02:14,349
competition<font color="#E5E5E5"> which affected our exploit</font><font color="#CCCCCC"> a</font>

55
00:02:12,040 --> 00:02:16,810
few days<font color="#E5E5E5"> later it was working again but</font>

56
00:02:14,349 --> 00:02:19,329
just<font color="#CCCCCC"> not in</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> competition</font><font color="#CCCCCC"> but</font>

57
00:02:16,810 --> 00:02:25,090
we'll<font color="#E5E5E5"> take that yeah</font><font color="#CCCCCC"> it still worked in</font>

58
00:02:19,330 --> 00:02:28,300
the end so we come<font color="#E5E5E5"> to pound to bone 2017</font>

59
00:02:25,090 --> 00:02:30,099
<font color="#E5E5E5">and these are the two devices we decided</font>

60
00:02:28,300 --> 00:02:31,569
we were<font color="#E5E5E5"> going to have a look at so</font><font color="#CCCCCC"> we</font>

61
00:02:30,099 --> 00:02:34,149
had two guys looking<font color="#CCCCCC"> at the Samsung</font>

62
00:02:31,569 --> 00:02:35,530
Galaxy s8<font color="#E5E5E5"> and Alex and I decided we were</font>

63
00:02:34,150 --> 00:02:38,080
going to<font color="#E5E5E5"> look at the</font><font color="#CCCCCC"> huar way</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> nine</font>

64
00:02:35,530 --> 00:02:41,530
<font color="#CCCCCC">Pro so both flagship devices for both</font>

65
00:02:38,080 --> 00:02:42,549
Samsung<font color="#E5E5E5"> and hawala reason we chose these</font>

66
00:02:41,530 --> 00:02:44,709
devices well

67
00:02:42,549 --> 00:02:46,870
Samsung<font color="#E5E5E5"> you know we've had a lot of</font>

68
00:02:44,709 --> 00:02:51,330
success<font color="#CCCCCC"> with them in the</font><font color="#E5E5E5"> past and their</font>

69
00:02:46,870 --> 00:02:53,739
<font color="#CCCCCC">security is questionable at best and</font>

70
00:02:51,330 --> 00:02:55,569
this was last year was the<font color="#CCCCCC"> first time</font>

71
00:02:53,739 --> 00:02:58,450
<font color="#E5E5E5">kawari was part of pound</font><font color="#CCCCCC"> round as</font><font color="#E5E5E5"> well</font>

72
00:02:55,569 --> 00:03:00,760
and so Alex<font color="#CCCCCC"> and I decided well let's</font><font color="#E5E5E5"> see</font>

73
00:02:58,450 --> 00:03:04,298
how<font color="#CCCCCC"> good they are and so we decided</font><font color="#E5E5E5"> to</font>

74
00:03:00,760 --> 00:03:06,280
<font color="#E5E5E5">take a pop</font><font color="#CCCCCC"> at that so kind of an</font>

75
00:03:04,299 --> 00:03:08,200
interesting<font color="#E5E5E5"> part with with both these</font>

76
00:03:06,280 --> 00:03:12,040
<font color="#E5E5E5">phones which you might not be aware</font><font color="#CCCCCC"> of</font>

77
00:03:08,200 --> 00:03:14,709
is just how much comes with the<font color="#CCCCCC"> device</font>

78
00:03:12,040 --> 00:03:16,000
<font color="#E5E5E5">and</font><font color="#CCCCCC"> there's just an incredible number of</font>

79
00:03:14,709 --> 00:03:17,709
apps that<font color="#E5E5E5"> will ship</font><font color="#CCCCCC"> with both the</font>

80
00:03:16,000 --> 00:03:19,720
Samsung<font color="#CCCCCC"> kawari kind</font><font color="#E5E5E5"> of a lot of these</font>

81
00:03:17,709 --> 00:03:24,640
matter<font color="#CCCCCC"> REM manufacturers phones by</font>

82
00:03:19,720 --> 00:03:27,880
default so we we find<font color="#CCCCCC"> around 200 apps by</font>

83
00:03:24,640 --> 00:03:29,350
default installed on the device<font color="#CCCCCC"> which</font>

84
00:03:27,880 --> 00:03:31,329
provides us with a<font color="#E5E5E5"> massive attack</font>

85
00:03:29,350 --> 00:03:33,700
surface especially<font color="#CCCCCC"> when a</font><font color="#E5E5E5"> lot of these</font>

86
00:03:31,329 --> 00:03:37,030
apps are made by<font color="#E5E5E5"> Samsung in Hawai away</font>

87
00:03:33,700 --> 00:03:38,410
themselves so for us this<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> gives</font>

88
00:03:37,030 --> 00:03:40,859
us<font color="#E5E5E5"> a great starting point</font><font color="#CCCCCC"> for taking</font>

89
00:03:38,410 --> 00:03:45,579
part<font color="#CCCCCC"> paint</font><font color="#E5E5E5"> away lots of custom apps</font>

90
00:03:40,859 --> 00:03:46,750
again with questionable security<font color="#E5E5E5"> for</font>

91
00:03:45,579 --> 00:03:49,959
those that don't<font color="#CCCCCC"> know so we heard this</font>

92
00:03:46,750 --> 00:03:51,160
morning<font color="#CCCCCC"> about Pantera and</font><font color="#E5E5E5"> Zed</font><font color="#CCCCCC"> di but I</font>

93
00:03:49,959 --> 00:03:53,139
thought<font color="#CCCCCC"> it'd be</font><font color="#E5E5E5"> good to</font><font color="#CCCCCC"> just go through</font>

94
00:03:51,160 --> 00:03:56,829
the rules explicitly because<font color="#CCCCCC"> it's pretty</font>

95
00:03:53,139 --> 00:03:59,319
<font color="#E5E5E5">difficult so for paint alone you need to</font>

96
00:03:56,829 --> 00:04:00,700
<font color="#E5E5E5">fully</font><font color="#CCCCCC"> compromise the device so that</font><font color="#E5E5E5"> is</font>

97
00:03:59,319 --> 00:04:02,920
<font color="#CCCCCC">release be</font><font color="#E5E5E5"> able to execute arbitrary</font>

98
00:04:00,700 --> 00:04:05,530
instructions<font color="#E5E5E5"> retrieve sensitive</font>

99
00:04:02,920 --> 00:04:07,630
information<font color="#E5E5E5"> off</font><font color="#CCCCCC"> the device a full</font>

100
00:04:05,530 --> 00:04:11,730
sandbox<font color="#E5E5E5"> is required so particular on</font>

101
00:04:07,630 --> 00:04:14,500
browsers<font color="#E5E5E5"> without any user interaction</font><font color="#CCCCCC"> so</font>

102
00:04:11,730 --> 00:04:16,659
for the browser component as an example

103
00:04:14,500 --> 00:04:19,060
<font color="#E5E5E5">all you get is a link to click on to</font>

104
00:04:16,660 --> 00:04:21,019
<font color="#CCCCCC">what web server</font><font color="#E5E5E5"> and then from that</font><font color="#CCCCCC"> point</font>

105
00:04:19,060 --> 00:04:23,180
on with no further user interaction is

106
00:04:21,019 --> 00:04:28,759
loud<font color="#CCCCCC"> we have to fully</font><font color="#E5E5E5"> compromise the</font>

107
00:04:23,180 --> 00:04:30,050
device<font color="#E5E5E5"> so it's not trivial another</font>

108
00:04:28,759 --> 00:04:31,280
<font color="#E5E5E5">interesting thing I think</font><font color="#CCCCCC"> about</font>

109
00:04:30,050 --> 00:04:33,919
<font color="#CCCCCC">pentavalent of some of the categories</font>

110
00:04:31,280 --> 00:04:35,299
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then there's a lot of attack vectors</font>

111
00:04:33,919 --> 00:04:37,250
open for<font color="#CCCCCC"> exploitation but the same rules</font>

112
00:04:35,300 --> 00:04:39,889
<font color="#CCCCCC">do apply so you know</font><font color="#E5E5E5"> for remote code</font>

113
00:04:37,250 --> 00:04:41,690
exec without any user interaction<font color="#CCCCCC"> but</font>

114
00:04:39,889 --> 00:04:43,099
some of this I think<font color="#CCCCCC"> the interesting bit</font>

115
00:04:41,690 --> 00:04:45,620
<font color="#CCCCCC">is you can kinda see the</font><font color="#E5E5E5"> expected</font>

116
00:04:43,099 --> 00:04:47,810
difficulty for each category<font color="#CCCCCC"> and so you</font>

117
00:04:45,620 --> 00:04:49,669
know that from<font color="#E5E5E5"> the prize money and so</font>

118
00:04:47,810 --> 00:04:51,080
exploitation<font color="#CCCCCC"> v</font><font color="#E5E5E5"> baseband</font><font color="#CCCCCC"> in the</font>

119
00:04:49,669 --> 00:04:54,710
competition expected to be potentially

120
00:04:51,080 --> 00:04:56,780
<font color="#E5E5E5">the hardest target</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> us ourselves so</font>

121
00:04:54,710 --> 00:04:59,900
we decided we were going<font color="#E5E5E5"> to go after the</font>

122
00:04:56,780 --> 00:05:01,630
browser category mostly this<font color="#E5E5E5"> is from</font>

123
00:04:59,900 --> 00:05:04,609
from a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> previous knowledge</font>

124
00:05:01,630 --> 00:05:07,340
targeting<font color="#E5E5E5"> this lots of previous wins and</font>

125
00:05:04,610 --> 00:05:09,020
again<font color="#E5E5E5"> like</font><font color="#CCCCCC"> I say this this is a click</font>

126
00:05:07,340 --> 00:05:14,210
<font color="#CCCCCC">click on a link</font><font color="#E5E5E5"> then we've got fully</font>

127
00:05:09,020 --> 00:05:15,590
compromised the device one other thing<font color="#CCCCCC"> I</font>

128
00:05:14,210 --> 00:05:18,258
thought it was worth pointing<font color="#E5E5E5"> out as</font>

129
00:05:15,590 --> 00:05:21,378
well is some of the<font color="#E5E5E5"> standing so these</font>

130
00:05:18,259 --> 00:05:24,229
are<font color="#CCCCCC"> the standings from 2017 mobile paint</font>

131
00:05:21,379 --> 00:05:25,610
<font color="#CCCCCC">appointment and</font><font color="#E5E5E5"> you might</font><font color="#CCCCCC"> think well why</font>

132
00:05:24,229 --> 00:05:29,539
the hell<font color="#CCCCCC"> am</font><font color="#E5E5E5"> i showing you this</font>

133
00:05:25,610 --> 00:05:33,050
you came third but actually the<font color="#CCCCCC"> two</font>

134
00:05:29,539 --> 00:05:34,849
teams<font color="#CCCCCC"> they're 10% and 360</font><font color="#E5E5E5"> they invest is</font>

135
00:05:33,050 --> 00:05:37,659
a hell of a lot more<font color="#E5E5E5"> into this than what</font>

136
00:05:34,849 --> 00:05:38,900
we did<font color="#E5E5E5"> and they'd have teams</font><font color="#CCCCCC"> or people</font>

137
00:05:37,659 --> 00:05:41,630
so

138
00:05:38,900 --> 00:05:45,109
so for us we<font color="#CCCCCC"> spend</font><font color="#E5E5E5"> two maybe three man</font>

139
00:05:41,630 --> 00:05:46,699
months total against both both devices

140
00:05:45,110 --> 00:05:50,509
<font color="#E5E5E5">whereas they suspect significantly</font>

141
00:05:46,699 --> 00:05:52,550
longer<font color="#CCCCCC"> with with significantly more</font>

142
00:05:50,509 --> 00:05:55,039
<font color="#CCCCCC">resources available to</font><font color="#E5E5E5"> them which I</font>

143
00:05:52,550 --> 00:05:56,900
think kind<font color="#E5E5E5"> of shows that the approach we</font>

144
00:05:55,039 --> 00:05:59,180
took<font color="#E5E5E5"> for parent alone it's kind of a</font>

145
00:05:56,900 --> 00:06:01,489
good one<font color="#E5E5E5"> it sort of demonstrates that we</font>

146
00:05:59,180 --> 00:06:05,360
can find quite a lot of<font color="#CCCCCC"> valent pretty</font>

147
00:06:01,490 --> 00:06:07,819
quickly<font color="#CCCCCC"> that are also exploitable so</font>

148
00:06:05,360 --> 00:06:09,409
hopefully our approach is kind<font color="#E5E5E5"> of</font>

149
00:06:07,819 --> 00:06:12,710
winning even<font color="#CCCCCC"> though we did only come</font>

150
00:06:09,409 --> 00:06:13,330
third which is<font color="#CCCCCC"> still</font><font color="#E5E5E5"> pretty reasonable</font><font color="#CCCCCC"> I</font>

151
00:06:12,710 --> 00:06:18,400
think

152
00:06:13,330 --> 00:06:19,810
and<font color="#E5E5E5"> okay so one of the things I</font><font color="#CCCCCC"> think</font>

153
00:06:18,400 --> 00:06:21,729
it's important to<font color="#E5E5E5"> show is sort of our</font>

154
00:06:19,810 --> 00:06:22,930
<font color="#CCCCCC">approach to bug</font><font color="#E5E5E5"> hunting so it's all good</font>

155
00:06:21,729 --> 00:06:24,370
<font color="#E5E5E5">and well</font><font color="#CCCCCC"> us coming up here and saying</font>

156
00:06:22,930 --> 00:06:27,340
look<font color="#E5E5E5"> at the phones we found but actually</font>

157
00:06:24,370 --> 00:06:28,720
how do you get to<font color="#CCCCCC"> that point and</font>

158
00:06:27,340 --> 00:06:30,489
<font color="#CCCCCC">actually one of the first</font><font color="#E5E5E5"> things we need</font>

159
00:06:28,720 --> 00:06:31,900
<font color="#E5E5E5">to do when we start in the</font><font color="#CCCCCC"> VR project is</font>

160
00:06:30,490 --> 00:06:34,720
<font color="#E5E5E5">just looking at that entire attack</font>

161
00:06:31,900 --> 00:06:37,539
surface and this<font color="#E5E5E5"> is sort of our brain</font>

162
00:06:34,720 --> 00:06:39,099
dump of what we think<font color="#E5E5E5"> the attack surface</font>

163
00:06:37,539 --> 00:06:42,849
on sort<font color="#CCCCCC"> of a modern browser modern</font>

164
00:06:39,099 --> 00:06:44,259
Android browser looks like and it's

165
00:06:42,849 --> 00:06:45,669
<font color="#E5E5E5">pretty big</font><font color="#CCCCCC"> you know there's a lot of</font>

166
00:06:44,259 --> 00:06:49,110
<font color="#E5E5E5">potential there</font><font color="#CCCCCC"> to start looking</font><font color="#E5E5E5"> at</font>

167
00:06:45,669 --> 00:06:51,669
<font color="#E5E5E5">things but you</font><font color="#CCCCCC"> gotta</font><font color="#E5E5E5"> sort of think about</font>

168
00:06:49,110 --> 00:06:53,379
the fact that other researchers<font color="#CCCCCC"> are</font>

169
00:06:51,669 --> 00:06:55,750
<font color="#CCCCCC">looking at this and so if you think</font>

170
00:06:53,379 --> 00:06:58,150
<font color="#CCCCCC">various such</font><font color="#E5E5E5"> as file formats so</font><font color="#CCCCCC"> that</font>

171
00:06:55,750 --> 00:07:00,099
JavaScript engine you know lots of

172
00:06:58,150 --> 00:07:01,810
people<font color="#CCCCCC"> have routine fuzzing those you</font>

173
00:07:00,099 --> 00:07:03,729
know that's Google<font color="#CCCCCC"> themselves the wider</font>

174
00:07:01,810 --> 00:07:07,990
security research community<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> us</font>

175
00:07:03,729 --> 00:07:10,180
<font color="#CCCCCC">lock and finding Vons</font><font color="#E5E5E5"> reporting them so</font>

176
00:07:07,990 --> 00:07:11,590
it's no good us<font color="#E5E5E5"> turning</font><font color="#CCCCCC"> up to pound home</font>

177
00:07:10,180 --> 00:07:13,060
with a problem<font color="#E5E5E5"> that's been found and</font>

178
00:07:11,590 --> 00:07:16,448
patched<font color="#E5E5E5"> the week before</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> not going</font>

179
00:07:13,060 --> 00:07:17,979
to<font color="#E5E5E5"> count</font><font color="#CCCCCC"> as a win and also</font><font color="#E5E5E5"> there's kind</font>

180
00:07:16,449 --> 00:07:19,539
of some<font color="#E5E5E5"> difficulties around exploitation</font>

181
00:07:17,979 --> 00:07:21,150
which I'll cover<font color="#E5E5E5"> in a minute as</font><font color="#CCCCCC"> well so</font>

182
00:07:19,539 --> 00:07:23,860
particularly for memory corruption bugs

183
00:07:21,150 --> 00:07:25,229
<font color="#E5E5E5">so for</font><font color="#CCCCCC"> us we decided</font><font color="#E5E5E5"> we were going to</font>

184
00:07:23,860 --> 00:07:28,060
just<font color="#E5E5E5"> focus our attention on</font>

185
00:07:25,229 --> 00:07:30,969
<font color="#E5E5E5">inter-process communication issues sort</font>

186
00:07:28,060 --> 00:07:32,349
<font color="#E5E5E5">of can we get out of the browser</font><font color="#CCCCCC"> how do</font>

187
00:07:30,969 --> 00:07:34,000
we go<font color="#CCCCCC"> out the browser as quickly as</font>

188
00:07:32,349 --> 00:07:37,389
<font color="#CCCCCC">possible and</font><font color="#E5E5E5"> start attacking other apps</font>

189
00:07:34,000 --> 00:07:39,669
<font color="#E5E5E5">so</font><font color="#CCCCCC"> like I said</font><font color="#E5E5E5"> before there's a there's</font>

190
00:07:37,389 --> 00:07:41,590
a lot of apps on the device<font color="#CCCCCC"> and a lot of</font>

191
00:07:39,669 --> 00:07:43,779
<font color="#E5E5E5">them have questionable security so can</font>

192
00:07:41,590 --> 00:07:50,830
we<font color="#E5E5E5"> jump from the browser into</font><font color="#CCCCCC"> those apps</font>

193
00:07:43,779 --> 00:07:53,979
and<font color="#E5E5E5"> start attacking those instead and</font>

194
00:07:50,830 --> 00:07:55,150
like I say with me the<font color="#E5E5E5"> typical</font><font color="#CCCCCC"> sort of</font>

195
00:07:53,979 --> 00:07:57,430
memory corruption vulnerabilities

196
00:07:55,150 --> 00:07:58,779
<font color="#E5E5E5">there's a lot of exploit mitigations</font>

197
00:07:57,430 --> 00:08:00,099
that<font color="#E5E5E5"> are slowly making their way into</font>

198
00:07:58,779 --> 00:08:02,740
<font color="#CCCCCC">android</font><font color="#E5E5E5"> that we would need</font><font color="#CCCCCC"> to put</font><font color="#E5E5E5"> my</font>

199
00:08:00,099 --> 00:08:04,750
past as<font color="#E5E5E5"> well so it kind of makes</font>

200
00:08:02,740 --> 00:08:06,430
traditional<font color="#E5E5E5"> exploitation</font>

201
00:08:04,750 --> 00:08:07,870
a little bit more difficult particularly

202
00:08:06,430 --> 00:08:10,270
<font color="#E5E5E5">in the</font><font color="#CCCCCC"> timeframes were working till</font><font color="#E5E5E5"> I</font>

203
00:08:07,870 --> 00:08:11,979
say we're sort of<font color="#CCCCCC"> two three months at</font>

204
00:08:10,270 --> 00:08:14,310
most<font color="#E5E5E5"> that we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> focus on on</font>

205
00:08:11,979 --> 00:08:17,740
working<font color="#E5E5E5"> on this so that's going from</font>

206
00:08:14,310 --> 00:08:21,069
getting phone<font color="#E5E5E5"> through to full remote</font>

207
00:08:17,740 --> 00:08:23,639
code exec so we kind<font color="#E5E5E5"> of wanted a simpler</font>

208
00:08:21,069 --> 00:08:27,040
way<font color="#CCCCCC"> to achieve the same effect you know</font>

209
00:08:23,639 --> 00:08:30,550
how do we<font color="#E5E5E5"> get</font><font color="#CCCCCC"> to that so the approach we</font>

210
00:08:27,040 --> 00:08:32,890
cake is looking<font color="#E5E5E5"> at</font><font color="#CCCCCC"> logic bugs and I kind</font>

211
00:08:30,550 --> 00:08:34,919
of have a few nice positives<font color="#E5E5E5"> over</font>

212
00:08:32,890 --> 00:08:38,729
typical memory<font color="#E5E5E5"> corruption</font><font color="#CCCCCC"> valence</font>

213
00:08:34,919 --> 00:08:42,669
<font color="#CCCCCC">typically harder to fix and identify</font>

214
00:08:38,729 --> 00:08:44,470
purely from a<font color="#CCCCCC"> they kind of</font><font color="#E5E5E5"> sometimes</font>

215
00:08:42,669 --> 00:08:47,140
<font color="#E5E5E5">seen as features rather than necessarily</font>

216
00:08:44,470 --> 00:08:49,840
<font color="#E5E5E5">bugs or you know they could they could a</font>

217
00:08:47,140 --> 00:08:51,189
developer might not understand what<font color="#E5E5E5"> the</font>

218
00:08:49,840 --> 00:08:53,980
feature it would actually<font color="#E5E5E5"> allow an</font>

219
00:08:51,190 --> 00:08:56,170
attacker to do<font color="#CCCCCC"> they're also typically</font>

220
00:08:53,980 --> 00:08:58,060
more reliable<font color="#CCCCCC"> you know again</font><font color="#E5E5E5"> boots or</font>

221
00:08:56,170 --> 00:08:59,170
potentially using<font color="#E5E5E5"> an app in the way it's</font>

222
00:08:58,060 --> 00:09:02,880
supposed to be used<font color="#E5E5E5"> but to achieve</font>

223
00:08:59,170 --> 00:09:05,790
<font color="#E5E5E5">things that</font><font color="#CCCCCC"> the developer</font><font color="#E5E5E5"> didn't expect</font>

224
00:09:02,880 --> 00:09:09,189
<font color="#CCCCCC">they're also got architecture agnostic</font>

225
00:09:05,790 --> 00:09:10,540
so we don't need<font color="#CCCCCC"> shell code we don't</font>

226
00:09:09,190 --> 00:09:14,230
<font color="#CCCCCC">really need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> know what memory looks</font>

227
00:09:10,540 --> 00:09:16,329
like across devices<font color="#CCCCCC"> and you know flows</font>

228
00:09:14,230 --> 00:09:20,050
in the blue team<font color="#E5E5E5"> they're kind</font><font color="#CCCCCC"> of harder</font>

229
00:09:16,330 --> 00:09:22,420
<font color="#E5E5E5">detect as well so you know</font><font color="#CCCCCC"> let's say</font>

230
00:09:20,050 --> 00:09:24,300
<font color="#E5E5E5">we're kind of using</font><font color="#CCCCCC"> the app in kind of</font>

231
00:09:22,420 --> 00:09:27,670
<font color="#E5E5E5">the way</font><font color="#CCCCCC"> it should be</font><font color="#E5E5E5"> used but to achieve</font>

232
00:09:24,300 --> 00:09:32,349
<font color="#E5E5E5">bad things or good things for our</font>

233
00:09:27,670 --> 00:09:35,140
perspective there's<font color="#E5E5E5"> also quite a few</font>

234
00:09:32,350 --> 00:09:36,700
negatives to use in logic bugs<font color="#CCCCCC"> so the</font>

235
00:09:35,140 --> 00:09:39,310
guys have<font color="#E5E5E5"> compromised the Samsung Galaxy</font>

236
00:09:36,700 --> 00:09:41,520
s8 last year<font color="#CCCCCC"> Rob and Georgie they ended</font>

237
00:09:39,310 --> 00:09:45,160
up<font color="#E5E5E5"> using</font><font color="#CCCCCC"> eleven bugs chained together</font>

238
00:09:41,520 --> 00:09:47,079
now<font color="#E5E5E5"> that's you know it's questionable as</font>

239
00:09:45,160 --> 00:09:49,900
to<font color="#CCCCCC"> whether that's</font><font color="#E5E5E5"> actually any easier so</font>

240
00:09:47,080 --> 00:09:51,340
<font color="#CCCCCC">going</font><font color="#E5E5E5"> out finding</font><font color="#CCCCCC"> eleven bugs</font><font color="#E5E5E5"> chaining</font>

241
00:09:49,900 --> 00:09:52,510
them all together<font color="#E5E5E5"> is that actually any</font>

242
00:09:51,340 --> 00:09:53,920
easier than<font color="#CCCCCC"> just</font><font color="#E5E5E5"> going out and find</font>

243
00:09:52,510 --> 00:09:56,350
<font color="#E5E5E5">yourself a nice memory corruption bug</font>

244
00:09:53,920 --> 00:10:00,040
and exploiting that well that's

245
00:09:56,350 --> 00:10:03,460
questionable<font color="#E5E5E5"> I guess they don't always</font>

246
00:10:00,040 --> 00:10:05,890
tend<font color="#E5E5E5"> to be very stealthy so with the</font>

247
00:10:03,460 --> 00:10:08,110
Samsung device as part of our exploit

248
00:10:05,890 --> 00:10:10,390
chain or the guys exploit chain there

249
00:10:08,110 --> 00:10:12,250
was a full reboot of the device<font color="#E5E5E5"> now</font>

250
00:10:10,390 --> 00:10:13,840
<font color="#CCCCCC">alright maybe</font><font color="#E5E5E5"> your average user will</font>

251
00:10:12,250 --> 00:10:16,240
just go oh that's crappy<font color="#E5E5E5"> Samsung I</font>

252
00:10:13,840 --> 00:10:18,940
expect that<font color="#CCCCCC"> to happen but</font><font color="#E5E5E5"> still it's not</font>

253
00:10:16,240 --> 00:10:20,170
particularly so stealthy<font color="#CCCCCC"> and you're</font>

254
00:10:18,940 --> 00:10:23,650
seeing<font color="#CCCCCC"> the demo at the end for our</font>

255
00:10:20,170 --> 00:10:26,560
<font color="#E5E5E5">Hawaii exploit</font><font color="#CCCCCC"> B the phone noticeably</font>

256
00:10:23,650 --> 00:10:30,699
shifts<font color="#E5E5E5"> apps so you know</font><font color="#CCCCCC"> a user will</font>

257
00:10:26,560 --> 00:10:34,089
notice it kind<font color="#CCCCCC"> of also requires a much</font>

258
00:10:30,700 --> 00:10:36,309
deeper understanding<font color="#CCCCCC"> of the application</font>

259
00:10:34,089 --> 00:10:39,189
and how it works<font color="#CCCCCC"> so like I say we're</font>

260
00:10:36,309 --> 00:10:40,569
kind of abusing features of the app<font color="#E5E5E5"> but</font>

261
00:10:39,189 --> 00:10:43,599
to abuse<font color="#E5E5E5"> those features you kind of</font>

262
00:10:40,569 --> 00:10:47,469
really need to understand a lot on how

263
00:10:43,600 --> 00:10:49,990
<font color="#E5E5E5">those features work first</font><font color="#CCCCCC"> and it's also</font>

264
00:10:47,470 --> 00:10:52,870
much much<font color="#CCCCCC"> harder</font><font color="#E5E5E5"> to automate the</font>

265
00:10:49,990 --> 00:10:55,809
detection<font color="#E5E5E5"> of these logic bugs</font><font color="#CCCCCC"> like how</font>

266
00:10:52,870 --> 00:10:57,970
would<font color="#E5E5E5"> you fuzz for a logic bug or how</font>

267
00:10:55,809 --> 00:10:59,800
<font color="#CCCCCC">would you automate any of this you know</font>

268
00:10:57,970 --> 00:11:01,269
<font color="#E5E5E5">fuzzing is a well-known thing</font>

269
00:10:59,800 --> 00:11:03,279
particularly<font color="#E5E5E5"> for memory corruption bugs</font>

270
00:11:01,269 --> 00:11:05,319
<font color="#E5E5E5">it's kind of a lot</font><font color="#CCCCCC"> more difficult for</font>

271
00:11:03,279 --> 00:11:07,480
<font color="#E5E5E5">logic bugs but we'll go through</font><font color="#CCCCCC"> some of</font>

272
00:11:05,319 --> 00:11:13,120
<font color="#E5E5E5">the progress we made as part</font><font color="#CCCCCC"> pound to</font>

273
00:11:07,480 --> 00:11:14,709
<font color="#CCCCCC">own</font><font color="#E5E5E5"> in a little bit and just some tips</font>

274
00:11:13,120 --> 00:11:15,610
so if<font color="#CCCCCC"> you guys</font><font color="#E5E5E5"> are looking at taking</font>

275
00:11:14,709 --> 00:11:20,469
part tone-tone

276
00:11:15,610 --> 00:11:21,999
<font color="#E5E5E5">it's coming up in a month or two so you</font>

277
00:11:20,470 --> 00:11:24,430
want to be able<font color="#E5E5E5"> to find when you're</font>

278
00:11:21,999 --> 00:11:25,389
<font color="#CCCCCC">looking for logic</font><font color="#E5E5E5"> bugs to quickly find a</font>

279
00:11:24,430 --> 00:11:26,859
<font color="#E5E5E5">number of apps which we could</font>

280
00:11:25,389 --> 00:11:29,439
<font color="#CCCCCC">potentially exploit but how do</font><font color="#E5E5E5"> you</font>

281
00:11:26,860 --> 00:11:31,059
prioritize those<font color="#E5E5E5"> so the first thing we</font>

282
00:11:29,439 --> 00:11:32,319
do is we just<font color="#E5E5E5"> look at</font><font color="#CCCCCC"> all apps</font><font color="#E5E5E5"> are</font>

283
00:11:31,059 --> 00:11:34,469
potentially reachable<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the browser</font>

284
00:11:32,319 --> 00:11:36,878
<font color="#E5E5E5">that's where we start</font>

285
00:11:34,470 --> 00:11:38,589
we also want to be able<font color="#E5E5E5"> to get</font><font color="#CCCCCC"> to apps</font>

286
00:11:36,879 --> 00:11:40,389
at some point that have reasonable

287
00:11:38,589 --> 00:11:43,300
permissions<font color="#E5E5E5"> so that'll allow us to do</font>

288
00:11:40,389 --> 00:11:45,429
more<font color="#CCCCCC"> on the device I mean it's not</font>

289
00:11:43,300 --> 00:11:47,529
<font color="#CCCCCC">necessarily an</font><font color="#E5E5E5"> issue for the initial</font>

290
00:11:45,429 --> 00:11:49,179
<font color="#E5E5E5">foothold on some device but at some</font>

291
00:11:47,529 --> 00:11:53,019
<font color="#E5E5E5">point we'll probably</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> get to an</font>

292
00:11:49,179 --> 00:11:56,290
app that<font color="#E5E5E5"> allows us</font><font color="#CCCCCC"> to do things and also</font>

293
00:11:53,019 --> 00:11:58,059
<font color="#E5E5E5">grep turns out yet still really helpful</font>

294
00:11:56,290 --> 00:12:00,219
so<font color="#CCCCCC"> just correcting through the codebase</font>

295
00:11:58,059 --> 00:12:03,040
for dangerous words so things<font color="#E5E5E5"> like you</font>

296
00:12:00,220 --> 00:12:05,110
know install update file<font color="#CCCCCC"> reads</font><font color="#E5E5E5"> far</font><font color="#CCCCCC"> right</font>

297
00:12:03,040 --> 00:12:07,089
it's that<font color="#CCCCCC"> type of</font><font color="#E5E5E5"> thing is</font><font color="#CCCCCC"> just a</font><font color="#E5E5E5"> really</font>

298
00:12:05,110 --> 00:12:09,370
nice quick way<font color="#E5E5E5"> of finding apps that you</font>

299
00:12:07,089 --> 00:12:15,579
could potentially<font color="#CCCCCC"> then go</font><font color="#E5E5E5"> onto to</font>

300
00:12:09,370 --> 00:12:21,279
exploit so yeah the tooling and

301
00:12:15,579 --> 00:12:23,620
automation that<font color="#CCCCCC"> we used so let's say the</font>

302
00:12:21,279 --> 00:12:26,170
tool sets we used are<font color="#E5E5E5"> kind of focused</font>

303
00:12:23,620 --> 00:12:28,300
down<font color="#E5E5E5"> on what we want to achieve so you</font>

304
00:12:26,170 --> 00:12:29,800
know what do we<font color="#CCCCCC"> care about as</font><font color="#E5E5E5"> part of</font>

305
00:12:28,300 --> 00:12:32,559
this and<font color="#E5E5E5"> we care about browser boy</font>

306
00:12:29,800 --> 00:12:34,809
intense<font color="#CCCCCC"> and intense that we can hit</font><font color="#E5E5E5"> from</font>

307
00:12:32,559 --> 00:12:37,600
the browser<font color="#E5E5E5"> or what we can hit from</font>

308
00:12:34,809 --> 00:12:39,910
other and this just massively increases

309
00:12:37,600 --> 00:12:41,290
our attack surface so you know rather

310
00:12:39,910 --> 00:12:43,120
<font color="#E5E5E5">than</font><font color="#CCCCCC"> just broken down</font><font color="#E5E5E5"> on what's in</font>

311
00:12:41,290 --> 00:12:45,549
<font color="#CCCCCC">chrome we've now got what's in chrome</font>

312
00:12:43,120 --> 00:12:47,310
and also the apps chrome can talk to and

313
00:12:45,549 --> 00:12:49,170
then at some<font color="#CCCCCC"> point</font><font color="#E5E5E5"> what we want</font>

314
00:12:47,310 --> 00:12:51,540
get<font color="#E5E5E5"> to is them what those apps can talk</font>

315
00:12:49,170 --> 00:12:55,849
to so you know you go from<font color="#E5E5E5"> one out to</font>

316
00:12:51,540 --> 00:12:55,849
<font color="#CCCCCC">thirty forty that we can now hit the</font>

317
00:12:56,180 --> 00:13:01,410
<font color="#CCCCCC">other things we're looking at are things</font>

318
00:12:59,220 --> 00:13:03,480
like the content<font color="#E5E5E5"> that we can load in so</font>

319
00:13:01,410 --> 00:13:05,579
you know things like unsafe web views

320
00:13:03,480 --> 00:13:08,070
really<font color="#CCCCCC"> old</font><font color="#E5E5E5"> Android issue they're still</font>

321
00:13:05,580 --> 00:13:10,950
quite prevalent as a<font color="#CCCCCC"> Alex</font><font color="#E5E5E5"> will touch on</font>

322
00:13:08,070 --> 00:13:12,570
in a<font color="#CCCCCC"> little bit you know can</font><font color="#E5E5E5"> we do</font>

323
00:13:10,950 --> 00:13:14,490
<font color="#E5E5E5">things like controlled</font><font color="#CCCCCC"> file reads and</font>

324
00:13:12,570 --> 00:13:16,800
<font color="#E5E5E5">writes particularly</font><font color="#CCCCCC"> over sensitive</font><font color="#E5E5E5"> files</font>

325
00:13:14,490 --> 00:13:19,380
<font color="#CCCCCC">you know again kind of a known well</font>

326
00:13:16,800 --> 00:13:22,170
<font color="#CCCCCC">known</font><font color="#E5E5E5"> issue but it's still being found</font>

327
00:13:19,380 --> 00:13:25,380
out out on apps<font color="#CCCCCC"> particularly</font><font color="#E5E5E5"> from</font>

328
00:13:22,170 --> 00:13:27,120
Samsung and<font color="#CCCCCC"> how re other</font><font color="#E5E5E5"> really old</font>

329
00:13:25,380 --> 00:13:29,220
phones or and<font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> about phones</font>

330
00:13:27,120 --> 00:13:33,750
are things like unsafe fast<font color="#E5E5E5"> loading is</font>

331
00:13:29,220 --> 00:13:35,370
there<font color="#CCCCCC"> any of</font><font color="#E5E5E5"> that going on</font><font color="#CCCCCC"> and like none</font>

332
00:13:33,750 --> 00:13:36,930
<font color="#CCCCCC">of this is particularly novel but the</font>

333
00:13:35,370 --> 00:13:38,160
thing<font color="#E5E5E5"> that we're looking</font><font color="#CCCCCC"> to do is find</font>

334
00:13:36,930 --> 00:13:40,770
in these<font color="#E5E5E5"> phones chaining them together</font>

335
00:13:38,160 --> 00:13:46,230
<font color="#E5E5E5">to show</font><font color="#CCCCCC"> that actually</font><font color="#E5E5E5"> together</font><font color="#CCCCCC"> we can</font>

336
00:13:40,770 --> 00:13:47,850
get<font color="#E5E5E5"> full remote code exec and like I say</font>

337
00:13:46,230 --> 00:13:49,560
<font color="#E5E5E5">the key here is</font><font color="#CCCCCC"> really to try and</font>

338
00:13:47,850 --> 00:13:52,650
<font color="#E5E5E5">increase our attack surface as much as</font>

339
00:13:49,560 --> 00:13:55,619
<font color="#CCCCCC">possible so the things</font><font color="#E5E5E5"> we're looking at</font>

340
00:13:52,650 --> 00:13:56,910
are for things<font color="#CCCCCC"> like intent proxy bugs so</font>

341
00:13:55,620 --> 00:13:58,410
that's the thing that<font color="#E5E5E5"> allows us to</font><font color="#CCCCCC"> talk</font>

342
00:13:56,910 --> 00:13:59,760
<font color="#CCCCCC">to other apps</font><font color="#E5E5E5"> are there any issues</font><font color="#CCCCCC"> there</font>

343
00:13:58,410 --> 00:14:02,790
<font color="#CCCCCC">that then allow us to do things we</font>

344
00:13:59,760 --> 00:14:04,080
<font color="#CCCCCC">shouldn't be allowed to</font><font color="#E5E5E5"> do as part of</font>

345
00:14:02,790 --> 00:14:06,120
<font color="#E5E5E5">pounder whoa</font><font color="#CCCCCC"> you're on the same Wi-Fi</font>

346
00:14:04,080 --> 00:14:08,070
<font color="#E5E5E5">network so are there things we could</font>

347
00:14:06,120 --> 00:14:13,050
<font color="#CCCCCC">potentially do there</font><font color="#E5E5E5"> you know SSL</font>

348
00:14:08,070 --> 00:14:15,030
weaknesses and<font color="#CCCCCC"> things like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> so for</font>

349
00:14:13,050 --> 00:14:16,709
<font color="#E5E5E5">those that don't know about Android or</font>

350
00:14:15,030 --> 00:14:20,010
<font color="#CCCCCC">intent proxies this is just a code</font>

351
00:14:16,710 --> 00:14:21,900
example<font color="#E5E5E5"> so in in this code</font><font color="#CCCCCC"> example we</font>

352
00:14:20,010 --> 00:14:24,569
control the package name and the URI

353
00:14:21,900 --> 00:14:26,850
<font color="#CCCCCC">that's being loaded</font><font color="#E5E5E5"> here and then we can</font>

354
00:14:24,570 --> 00:14:28,740
follow these code paths and see what the

355
00:14:26,850 --> 00:14:30,959
application<font color="#CCCCCC"> is trying to do and then</font><font color="#E5E5E5"> can</font>

356
00:14:28,740 --> 00:14:33,570
we do things<font color="#E5E5E5"> like you know load away for</font>

357
00:14:30,959 --> 00:14:39,750
you do<font color="#CCCCCC"> Farley's do file</font><font color="#E5E5E5"> rights that type</font>

358
00:14:33,570 --> 00:14:41,850
of<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> so the tool sets we used as</font>

359
00:14:39,750 --> 00:14:44,750
part<font color="#E5E5E5"> of our last year is nothing</font>

360
00:14:41,850 --> 00:14:47,279
particularly<font color="#E5E5E5"> amazing if we're honest</font><font color="#CCCCCC"> so</font>

361
00:14:44,750 --> 00:14:49,620
we have an internal scripts that<font color="#E5E5E5"> we use</font>

362
00:14:47,279 --> 00:14:51,779
so this<font color="#E5E5E5"> just goes in we plug the</font><font color="#CCCCCC"> device</font>

363
00:14:49,620 --> 00:14:54,180
in run the script<font color="#CCCCCC"> it'll go away grab all</font>

364
00:14:51,779 --> 00:14:56,730
the apps off the device and<font color="#CCCCCC"> decompile</font>

365
00:14:54,180 --> 00:14:58,949
them for us so it's it takes<font color="#CCCCCC"> a few hours</font>

366
00:14:56,730 --> 00:15:00,980
like I said there's at least 200 apps on

367
00:14:58,950 --> 00:15:03,320
<font color="#CCCCCC">a</font><font color="#E5E5E5"> device but what this gives us is</font>

368
00:15:00,980 --> 00:15:05,389
nice directory full of apps<font color="#CCCCCC"> off the</font>

369
00:15:03,320 --> 00:15:08,360
device<font color="#CCCCCC"> that we can</font><font color="#E5E5E5"> then start wrapping</font>

370
00:15:05,389 --> 00:15:09,290
through<font color="#E5E5E5"> start looking through</font><font color="#CCCCCC"> Jeb Jeb's</font>

371
00:15:08,360 --> 00:15:11,990
are pretty<font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> reverse</font>

372
00:15:09,290 --> 00:15:14,449
engineering<font color="#CCCCCC"> tool</font><font color="#E5E5E5"> so once we start</font>

373
00:15:11,990 --> 00:15:16,070
<font color="#CCCCCC">finding a vulnerable or potentially</font>

374
00:15:14,449 --> 00:15:17,689
vulnerable apps<font color="#CCCCCC"> we'll throw it</font><font color="#E5E5E5"> into Jeb</font>

375
00:15:16,070 --> 00:15:19,639
start reverse engineering it and

376
00:15:17,690 --> 00:15:20,660
starting to<font color="#E5E5E5"> see how and we might be able</font>

377
00:15:19,639 --> 00:15:23,720
<font color="#E5E5E5">to get to that potentially vulnerable</font>

378
00:15:20,660 --> 00:15:26,740
function and like I<font color="#CCCCCC"> said</font><font color="#E5E5E5"> before the</font>

379
00:15:23,720 --> 00:15:29,000
always amazing and hacker friendly grep

380
00:15:26,740 --> 00:15:31,490
again<font color="#E5E5E5"> just gripping through the</font><font color="#CCCCCC"> code</font>

381
00:15:29,000 --> 00:15:33,170
base looking for dangerous words<font color="#E5E5E5"> and it</font>

382
00:15:31,490 --> 00:15:37,970
turns up lots of potentially useful

383
00:15:33,170 --> 00:15:41,779
results but this is<font color="#E5E5E5"> very manual</font><font color="#CCCCCC"> this is</font>

384
00:15:37,970 --> 00:15:43,430
<font color="#CCCCCC">an incredibly time intensive process</font><font color="#E5E5E5"> and</font>

385
00:15:41,779 --> 00:15:46,820
we kind of<font color="#E5E5E5"> want to get to a point where</font>

386
00:15:43,430 --> 00:15:49,250
actually<font color="#E5E5E5"> so we know what a potentially</font>

387
00:15:46,820 --> 00:15:51,139
vulnerable function looks like<font color="#E5E5E5"> but we</font>

388
00:15:49,250 --> 00:15:53,269
don't know if we can potentially hit it

389
00:15:51,139 --> 00:15:55,790
and that's<font color="#E5E5E5"> kind of the difficult</font><font color="#CCCCCC"> thing</font>

390
00:15:53,269 --> 00:15:56,930
so can we go<font color="#E5E5E5"> from a browser through to</font>

391
00:15:55,790 --> 00:16:00,139
our<font color="#E5E5E5"> vulnerable function in a different</font>

392
00:15:56,930 --> 00:16:02,029
<font color="#CCCCCC">app so</font><font color="#E5E5E5"> what we try</font><font color="#CCCCCC"> to do then is is come</font>

393
00:16:00,139 --> 00:16:04,820
up with<font color="#CCCCCC"> a tool</font><font color="#E5E5E5"> that will do that and we</font>

394
00:16:02,029 --> 00:16:07,100
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of just to speed up</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> UNECE</font><font color="#E5E5E5"> these</font>

395
00:16:04,820 --> 00:16:08,510
ended up using graph theory<font color="#E5E5E5"> to find</font>

396
00:16:07,100 --> 00:16:10,399
<font color="#E5E5E5">these</font><font color="#CCCCCC"> fundable code paths</font><font color="#E5E5E5"> and actually</font>

397
00:16:08,510 --> 00:16:13,310
all<font color="#CCCCCC"> of this is just based off yet but</font>

398
00:16:10,399 --> 00:16:16,339
<font color="#CCCCCC">we've</font><font color="#E5E5E5"> sorted it over to work with</font>

399
00:16:13,310 --> 00:16:18,410
<font color="#E5E5E5">Android apps and</font><font color="#CCCCCC"> so we just knocked up a</font>

400
00:16:16,339 --> 00:16:20,060
<font color="#CCCCCC">proof-of-concept and</font><font color="#E5E5E5"> just to see how</font>

401
00:16:18,410 --> 00:16:21,860
<font color="#CCCCCC">effective it would be and using</font><font color="#E5E5E5"> no</font>

402
00:16:20,060 --> 00:16:24,949
vulnerabilities<font color="#CCCCCC"> in some apps that</font><font color="#E5E5E5"> that</font>

403
00:16:21,860 --> 00:16:28,730
<font color="#CCCCCC">we'd built</font><font color="#E5E5E5"> ourselves so in the example</font>

404
00:16:24,949 --> 00:16:30,229
up here<font color="#CCCCCC"> that we can see there's a find</font>

405
00:16:28,730 --> 00:16:32,149
everything<font color="#E5E5E5"> that is cooled initially</font><font color="#CCCCCC"> from</font>

406
00:16:30,230 --> 00:16:34,279
an exported intent<font color="#E5E5E5"> that we can reach and</font>

407
00:16:32,149 --> 00:16:36,649
we know he can reach that<font color="#CCCCCC"> also</font><font color="#E5E5E5"> uses get</font>

408
00:16:34,279 --> 00:16:38,870
<font color="#E5E5E5">external storage and that also uses Dex</font>

409
00:16:36,649 --> 00:16:41,060
class loader<font color="#CCCCCC"> so at this point we we</font>

410
00:16:38,870 --> 00:16:43,250
might be able<font color="#E5E5E5"> to drop a file onto the</font><font color="#CCCCCC"> SD</font>

411
00:16:41,060 --> 00:16:44,689
card<font color="#E5E5E5"> and this app would then</font><font color="#CCCCCC"> potentially</font>

412
00:16:43,250 --> 00:16:47,660
load it and we might<font color="#CCCCCC"> potentially get</font>

413
00:16:44,690 --> 00:16:49,819
code exec<font color="#E5E5E5"> so we can just pass that that</font>

414
00:16:47,660 --> 00:16:51,230
through<font color="#CCCCCC"> I mean actually this comes</font><font color="#E5E5E5"> from</font>

415
00:16:49,819 --> 00:16:55,430
<font color="#E5E5E5">a real</font><font color="#CCCCCC"> world example that we used as</font>

416
00:16:51,230 --> 00:16:57,500
part<font color="#CCCCCC"> of payment away this is another</font>

417
00:16:55,430 --> 00:17:00,380
<font color="#E5E5E5">example of how we</font><font color="#CCCCCC"> potentially use the</font>

418
00:16:57,500 --> 00:17:03,680
tool<font color="#CCCCCC"> to map out relationships from</font><font color="#E5E5E5"> on</font>

419
00:17:00,380 --> 00:17:05,179
<font color="#E5E5E5">create</font><font color="#CCCCCC"> so on create in Android is the</font>

420
00:17:03,680 --> 00:17:07,730
function<font color="#E5E5E5"> from where an application is</font>

421
00:17:05,179 --> 00:17:09,380
initialized<font color="#E5E5E5"> so if we call try and call</font>

422
00:17:07,730 --> 00:17:10,819
<font color="#CCCCCC">in application we kind of want to know</font>

423
00:17:09,380 --> 00:17:14,120
<font color="#CCCCCC">what it then potentially goes on to</font>

424
00:17:10,819 --> 00:17:16,579
<font color="#E5E5E5">execute in this case a class late</font>

425
00:17:14,119 --> 00:17:18,139
again this is just a dummy example but

426
00:17:16,579 --> 00:17:20,260
it provides<font color="#E5E5E5"> us with a quick easy</font>

427
00:17:18,140 --> 00:17:26,000
visualized way of<font color="#E5E5E5"> potentially finding</font>

428
00:17:20,260 --> 00:17:27,980
vulnerable code paths so yeah<font color="#CCCCCC"> so there's</font>

429
00:17:26,000 --> 00:17:29,450
<font color="#CCCCCC">a</font><font color="#E5E5E5"> lot more so Robin Georgie talks about</font>

430
00:17:27,980 --> 00:17:31,400
<font color="#E5E5E5">this in a lot more depth than I will do</font>

431
00:17:29,450 --> 00:17:34,039
today<font color="#E5E5E5"> in their presentation chain</font>

432
00:17:31,400 --> 00:17:35,000
spotting well worth<font color="#CCCCCC"> checking it out so</font>

433
00:17:34,039 --> 00:17:41,299
that's<font color="#E5E5E5"> how they went about and</font>

434
00:17:35,000 --> 00:17:43,669
compromised<font color="#CCCCCC"> Samsung the other tools that</font>

435
00:17:41,299 --> 00:17:47,000
we very much like to touch upon<font color="#E5E5E5"> our</font>

436
00:17:43,669 --> 00:17:50,390
dynamic analysis tool sets<font color="#E5E5E5"> so big ones</font>

437
00:17:47,000 --> 00:17:52,549
<font color="#E5E5E5">for Android</font><font color="#CCCCCC"> have exposed</font><font color="#E5E5E5"> and freedom</font><font color="#CCCCCC"> to</font>

438
00:17:50,390 --> 00:17:55,070
be honest we mostly use freedom just

439
00:17:52,549 --> 00:17:57,020
just for preference that's<font color="#E5E5E5"> kind of an</font>

440
00:17:55,070 --> 00:17:59,450
<font color="#CCCCCC">example</font><font color="#E5E5E5"> there so exposed that you can do</font>

441
00:17:57,020 --> 00:18:01,760
things like<font color="#E5E5E5"> early injection and global</font>

442
00:17:59,450 --> 00:18:04,159
hooks across multiple applications<font color="#E5E5E5"> which</font>

443
00:18:01,760 --> 00:18:07,250
was used as<font color="#CCCCCC"> part</font><font color="#E5E5E5"> of the guys efforts</font>

444
00:18:04,159 --> 00:18:09,380
against<font color="#CCCCCC"> Samsung to find</font><font color="#E5E5E5"> a to find what</font>

445
00:18:07,250 --> 00:18:11,899
particular file<font color="#E5E5E5"> what application was</font>

446
00:18:09,380 --> 00:18:13,610
<font color="#CCCCCC">right into a particular file then</font><font color="#E5E5E5"> you've</font>

447
00:18:11,899 --> 00:18:16,340
<font color="#E5E5E5">got</font><font color="#CCCCCC"> Frida</font><font color="#E5E5E5"> for those</font><font color="#CCCCCC"> that have news</font>

448
00:18:13,610 --> 00:18:19,189
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> popular nowadays really quick</font>

449
00:18:16,340 --> 00:18:20,899
and<font color="#E5E5E5"> easy for</font><font color="#CCCCCC"> prototyping</font><font color="#E5E5E5"> and debugging</font>

450
00:18:19,190 --> 00:18:24,740
<font color="#E5E5E5">and dynamic analysis</font><font color="#CCCCCC"> of obvious gauge</font>

451
00:18:20,899 --> 00:18:27,739
<font color="#E5E5E5">powder so that kind of goes</font><font color="#CCCCCC"> through our</font>

452
00:18:24,740 --> 00:18:29,809
background<font color="#CCCCCC"> pantomime how we approached</font>

453
00:18:27,740 --> 00:18:31,130
it and<font color="#E5E5E5"> some of the tooling and some of</font>

454
00:18:29,809 --> 00:18:32,870
the tooling we ended up having us<font color="#E5E5E5"> will</font>

455
00:18:31,130 --> 00:18:36,140
try and develop to<font color="#CCCCCC"> try and speed up our</font>

456
00:18:32,870 --> 00:18:38,779
efforts<font color="#E5E5E5"> so now alex is going to go</font>

457
00:18:36,140 --> 00:18:41,149
through the vulnerabilities<font color="#E5E5E5"> we found how</font>

458
00:18:38,779 --> 00:18:43,580
and how we exploited them<font color="#E5E5E5"> so basically</font>

459
00:18:41,149 --> 00:18:46,908
and<font color="#E5E5E5"> James talk has talked</font><font color="#CCCCCC"> about the</font>

460
00:18:43,580 --> 00:18:48,350
approach and<font color="#CCCCCC"> the like the</font><font color="#E5E5E5"> the methods we</font>

461
00:18:46,909 --> 00:18:50,179
went through<font color="#CCCCCC"> factually finding these</font>

462
00:18:48,350 --> 00:18:51,709
vulnerabilities<font color="#CCCCCC"> I'm going to talk about</font>

463
00:18:50,179 --> 00:18:55,059
the actual vulnerabilities themselves

464
00:18:51,710 --> 00:18:57,409
and so what<font color="#E5E5E5"> these bugs were and</font>

465
00:18:55,059 --> 00:18:58,789
basically how how we approached

466
00:18:57,409 --> 00:19:02,919
exploiting them<font color="#CCCCCC"> and</font><font color="#E5E5E5"> chaining them</font>

467
00:18:58,789 --> 00:19:06,020
together<font color="#E5E5E5"> so</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> pointer own and for</font>

468
00:19:02,919 --> 00:19:09,200
just exploitation in general because and

469
00:19:06,020 --> 00:19:11,240
like mitigations and things have

470
00:19:09,200 --> 00:19:14,179
improved like some boxing that kind of

471
00:19:11,240 --> 00:19:16,940
<font color="#E5E5E5">thing and it's no longer possible to</font>

472
00:19:14,179 --> 00:19:20,330
<font color="#E5E5E5">just be like one vulnerability or two</font>

473
00:19:16,940 --> 00:19:22,280
vulnerabilities and and an exploit and

474
00:19:20,330 --> 00:19:25,039
like take those vulnerabilities and

475
00:19:22,280 --> 00:19:26,960
<font color="#E5E5E5">produce an exploit it often requires you</font>

476
00:19:25,039 --> 00:19:29,240
<font color="#CCCCCC">to jump through different</font>

477
00:19:26,960 --> 00:19:33,710
<font color="#E5E5E5">of all different steps within the</font><font color="#CCCCCC"> Jane</font>

478
00:19:29,240 --> 00:19:37,490
and so this is like from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> perspective</font>

479
00:19:33,710 --> 00:19:39,049
<font color="#CCCCCC">of logic bugs as well</font><font color="#E5E5E5"> so we've got to</font>

480
00:19:37,490 --> 00:19:40,760
assume<font color="#E5E5E5"> that there's like no memory</font>

481
00:19:39,049 --> 00:19:42,918
corruption we're not doing like use

482
00:19:40,760 --> 00:19:45,080
after free plus some but break out<font color="#E5E5E5"> and</font>

483
00:19:42,919 --> 00:19:48,799
that's like a totally different<font color="#CCCCCC"> kind of</font>

484
00:19:45,080 --> 00:19:51,139
attack<font color="#E5E5E5"> what we're going to do is so the</font>

485
00:19:48,799 --> 00:19:53,450
<font color="#E5E5E5">approach we took were initially to look</font>

486
00:19:51,140 --> 00:19:55,340
for browsable<font color="#E5E5E5"> intents so the kind of</font>

487
00:19:53,450 --> 00:19:57,529
things which<font color="#E5E5E5"> were accessible from</font><font color="#CCCCCC"> the</font>

488
00:19:55,340 --> 00:20:00,070
web<font color="#E5E5E5"> browser which would allow you to</font>

489
00:19:57,529 --> 00:20:03,799
basically pivot from the web browser

490
00:20:00,070 --> 00:20:06,470
<font color="#E5E5E5">into another</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> potentially an</font>

491
00:20:03,799 --> 00:20:08,179
application which is<font color="#E5E5E5"> more</font><font color="#CCCCCC"> vulnerable</font><font color="#E5E5E5"> we</font>

492
00:20:06,470 --> 00:20:09,679
started off<font color="#CCCCCC"> within</font><font color="#E5E5E5"> within</font><font color="#CCCCCC"> chrome</font>

493
00:20:08,179 --> 00:20:11,659
Chrome's goths

494
00:20:09,679 --> 00:20:13,340
<font color="#E5E5E5">it's got a pretty good</font><font color="#CCCCCC"> security team</font>

495
00:20:11,659 --> 00:20:15,950
it's got<font color="#E5E5E5"> quite good security history</font>

496
00:20:13,340 --> 00:20:18,949
<font color="#E5E5E5">it's it's quite difficult to</font><font color="#CCCCCC"> find bugs</font>

497
00:20:15,950 --> 00:20:21,950
<font color="#E5E5E5">within chrome so for</font><font color="#CCCCCC"> us it made sense</font><font color="#E5E5E5"> to</font>

498
00:20:18,950 --> 00:20:24,409
switch to as<font color="#E5E5E5"> quickly as possible to</font>

499
00:20:21,950 --> 00:20:28,309
another application<font color="#E5E5E5"> or something to get</font>

500
00:20:24,409 --> 00:20:31,190
code execution<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> as James said</font>

501
00:20:28,309 --> 00:20:34,070
first<font color="#CCCCCC"> stages you browse to a website</font><font color="#E5E5E5"> on</font>

502
00:20:31,190 --> 00:20:38,029
<font color="#E5E5E5">the device this triggers a browsable</font>

503
00:20:34,070 --> 00:20:40,129
intent so I started looking<font color="#E5E5E5"> well I mean</font>

504
00:20:38,029 --> 00:20:43,190
I was analyzing through all of the

505
00:20:40,130 --> 00:20:45,529
<font color="#E5E5E5">browsable intents</font><font color="#CCCCCC"> there's not hundreds</font>

506
00:20:43,190 --> 00:20:48,130
on the device because for attack surface

507
00:20:45,529 --> 00:20:50,570
reduction the vendors actually<font color="#E5E5E5"> tried to</font>

508
00:20:48,130 --> 00:20:54,020
<font color="#E5E5E5">restrict this amount of attack surface</font>

509
00:20:50,570 --> 00:20:57,529
<font color="#E5E5E5">but</font><font color="#CCCCCC"> I came across the hawawa marketplace</font>

510
00:20:54,020 --> 00:21:00,799
application so this is essentially how

511
00:20:57,529 --> 00:21:04,309
<font color="#E5E5E5">always unsaid to the to the Google</font>

512
00:21:00,799 --> 00:21:07,279
<font color="#CCCCCC">Playstore it's a application which is</font>

513
00:21:04,309 --> 00:21:12,168
it's got high permissions<font color="#CCCCCC"> there has</font>

514
00:21:07,279 --> 00:21:14,929
<font color="#E5E5E5">installed packages permissions so it's a</font>

515
00:21:12,169 --> 00:21:17,419
good target<font color="#E5E5E5"> for an attacker because it's</font>

516
00:21:14,929 --> 00:21:20,029
a high privileged app and and it also

517
00:21:17,419 --> 00:21:22,970
exposes<font color="#E5E5E5"> a browsable intent</font><font color="#CCCCCC"> so I was like</font>

518
00:21:20,029 --> 00:21:26,149
well<font color="#CCCCCC"> ok this makes sense</font><font color="#E5E5E5"> to to start</font>

519
00:21:22,970 --> 00:21:27,429
reverse engineering so<font color="#E5E5E5"> I started looking</font>

520
00:21:26,149 --> 00:21:30,949
<font color="#CCCCCC">through it</font><font color="#E5E5E5"> looking through the</font>

521
00:21:27,429 --> 00:21:33,679
application manifest<font color="#E5E5E5"> and I spotted that</font>

522
00:21:30,950 --> 00:21:36,010
<font color="#E5E5E5">there was the browsable intent was this</font>

523
00:21:33,679 --> 00:21:38,120
thing called high up high up<font color="#CCCCCC"> schema</font>

524
00:21:36,010 --> 00:21:40,669
<font color="#E5E5E5">hopefully you're familiar with Android</font>

525
00:21:38,120 --> 00:21:45,590
but basically<font color="#E5E5E5"> what this says</font>

526
00:21:40,669 --> 00:21:47,989
is the<font color="#E5E5E5"> third API activity is it's an</font>

527
00:21:45,590 --> 00:21:49,609
<font color="#CCCCCC">expose browsable</font><font color="#E5E5E5"> well it's it's an</font>

528
00:21:47,989 --> 00:21:51,830
<font color="#E5E5E5">activity which is allowed to be</font>

529
00:21:49,609 --> 00:21:54,320
triggered<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the web browser</font><font color="#CCCCCC"> and it</font>

530
00:21:51,830 --> 00:21:58,850
registers<font color="#E5E5E5"> an intent filter to say that</font>

531
00:21:54,320 --> 00:22:01,369
<font color="#E5E5E5">it accepts like intents of a certain</font>

532
00:21:58,850 --> 00:22:04,309
type<font color="#CCCCCC"> and one of these is the</font><font color="#E5E5E5"> h h ir</font>

533
00:22:01,369 --> 00:22:06,709
protocol<font color="#CCCCCC"> schema</font><font color="#E5E5E5"> so if you've got hir</font>

534
00:22:04,309 --> 00:22:08,710
colon slash slash<font color="#E5E5E5"> then you can trigger</font>

535
00:22:06,710 --> 00:22:13,070
the the browsable intent

536
00:22:08,710 --> 00:22:15,679
<font color="#E5E5E5">um but</font><font color="#CCCCCC"> Hawai we tried to they tried to</font>

537
00:22:13,070 --> 00:22:17,439
<font color="#E5E5E5">actually lock this down because</font><font color="#CCCCCC"> they</font>

538
00:22:15,679 --> 00:22:19,730
they<font color="#E5E5E5"> were I guess</font><font color="#CCCCCC"> they were aware that</font>

539
00:22:17,440 --> 00:22:21,529
they didn't<font color="#CCCCCC"> really want</font><font color="#E5E5E5"> like people</font>

540
00:22:19,730 --> 00:22:24,590
performing arbitrary actions in the

541
00:22:21,529 --> 00:22:27,519
context of their marketplace application

542
00:22:24,590 --> 00:22:30,609
<font color="#CCCCCC">and so what they did was they basically</font>

543
00:22:27,519 --> 00:22:34,039
did lock they'd implemented a whitelist

544
00:22:30,609 --> 00:22:38,389
<font color="#E5E5E5">as you can see here and this this</font>

545
00:22:34,039 --> 00:22:41,658
whitelist essentially hides<font color="#E5E5E5"> it has three</font>

546
00:22:38,389 --> 00:22:45,830
<font color="#CCCCCC">different domains</font><font color="#E5E5E5"> and high up high cloud</font>

547
00:22:41,659 --> 00:22:47,869
<font color="#CCCCCC">com female common hawawa calm but if you</font>

548
00:22:45,830 --> 00:22:51,080
look closely<font color="#E5E5E5"> they're basically they</font>

549
00:22:47,869 --> 00:22:55,850
using a<font color="#CCCCCC"> red X to</font><font color="#E5E5E5"> match the the</font><font color="#CCCCCC"> domain</font>

550
00:22:51,080 --> 00:22:58,070
see<font color="#E5E5E5"> okay well our malicious content has</font>

551
00:22:55,850 --> 00:23:01,459
to be hosted<font color="#E5E5E5"> within one of these</font><font color="#CCCCCC"> domains</font>

552
00:22:58,070 --> 00:23:03,529
for it to<font color="#E5E5E5"> work</font><font color="#CCCCCC"> and but</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> red</font><font color="#E5E5E5"> X much is</font>

553
00:23:01,460 --> 00:23:07,450
<font color="#E5E5E5">it's like dot star so it much is</font>

554
00:23:03,529 --> 00:23:10,159
anything coming<font color="#E5E5E5"> for high cloud</font><font color="#CCCCCC"> com</font><font color="#E5E5E5"> um</font>

555
00:23:07,450 --> 00:23:12,409
what this means is it means that<font color="#E5E5E5"> they</font>

556
00:23:10,159 --> 00:23:15,109
didn't lock it down<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> HTTPS either</font>

557
00:23:12,409 --> 00:23:17,119
<font color="#E5E5E5">so you could you could essentially use</font>

558
00:23:15,109 --> 00:23:21,889
DNS pot well you could use<font color="#E5E5E5"> DNS poisoning</font>

559
00:23:17,119 --> 00:23:25,519
<font color="#E5E5E5">and yeah and basically impersonating the</font>

560
00:23:21,889 --> 00:23:27,889
high cloud of email<font color="#CCCCCC"> com domain and this</font>

561
00:23:25,519 --> 00:23:31,369
would<font color="#E5E5E5"> allow you to allow load content in</font>

562
00:23:27,889 --> 00:23:33,949
<font color="#CCCCCC">the HT like from an HTTP site</font><font color="#E5E5E5"> in the</font>

563
00:23:31,369 --> 00:23:36,859
context of it would essentially treated

564
00:23:33,950 --> 00:23:38,029
as if it was a white listed domain so

565
00:23:36,859 --> 00:23:39,889
this was quite<font color="#E5E5E5"> cool because this</font>

566
00:23:38,029 --> 00:23:44,080
basically<font color="#E5E5E5"> allowed us to load content</font>

567
00:23:39,889 --> 00:23:46,519
<font color="#E5E5E5">into the web view in the marketplace</font>

568
00:23:44,080 --> 00:23:50,059
<font color="#CCCCCC">okay so what</font><font color="#E5E5E5"> can you kind of do with</font>

569
00:23:46,519 --> 00:23:53,460
this well first thing I want to<font color="#E5E5E5"> talk</font>

570
00:23:50,059 --> 00:23:55,260
about the<font color="#E5E5E5"> the actual protocol</font><font color="#CCCCCC"> schema</font>

571
00:23:53,460 --> 00:23:57,780
it's a bit of a weird protocol<font color="#CCCCCC"> schema</font>

572
00:23:55,260 --> 00:24:00,060
<font color="#CCCCCC">it's not something which is super</font>

573
00:23:57,780 --> 00:24:02,970
intuitive<font color="#CCCCCC"> it</font><font color="#E5E5E5"> took me a while to</font><font color="#CCCCCC"> reverse</font>

574
00:24:00,060 --> 00:24:05,669
<font color="#CCCCCC">engineer out like the format of the of</font>

575
00:24:02,970 --> 00:24:10,050
the protocol<font color="#CCCCCC"> and how you pass parameters</font>

576
00:24:05,670 --> 00:24:12,210
<font color="#E5E5E5">and so</font><font color="#CCCCCC"> on - and but they had</font><font color="#E5E5E5"> like the</font>

577
00:24:10,050 --> 00:24:14,310
HUD thing<font color="#E5E5E5"> like act the activity</font><font color="#CCCCCC"> name</font>

578
00:24:12,210 --> 00:24:16,710
which you<font color="#E5E5E5"> wanted to call on the URI</font>

579
00:24:14,310 --> 00:24:18,780
which you wanted<font color="#E5E5E5"> to pass and</font><font color="#CCCCCC"> I need</font>

580
00:24:16,710 --> 00:24:20,910
these some JSON representation of the

581
00:24:18,780 --> 00:24:23,750
<font color="#E5E5E5">parameters so this is pretty flexible</font>

582
00:24:20,910 --> 00:24:27,750
<font color="#E5E5E5">because it allows you to basically pass</font>

583
00:24:23,750 --> 00:24:33,030
parameters to activities on the device

584
00:24:27,750 --> 00:24:36,030
<font color="#E5E5E5">on the nhi app</font><font color="#CCCCCC"> application and one of</font>

585
00:24:33,030 --> 00:24:38,550
these was<font color="#CCCCCC"> the webview</font><font color="#E5E5E5"> so using this</font>

586
00:24:36,030 --> 00:24:42,060
protocol<font color="#E5E5E5"> schema</font><font color="#CCCCCC"> that's how we pivoted</font><font color="#E5E5E5"> to</font>

587
00:24:38,550 --> 00:24:44,879
the to the webview<font color="#CCCCCC"> and at this point</font>

588
00:24:42,060 --> 00:24:47,340
we've now got<font color="#E5E5E5"> our HTML page</font><font color="#CCCCCC"> executing</font>

589
00:24:44,880 --> 00:24:51,330
within the within<font color="#E5E5E5"> the context of the</font>

590
00:24:47,340 --> 00:24:53,310
marketplace application and the next

591
00:24:51,330 --> 00:24:55,710
thing was<font color="#E5E5E5"> okay well what does this</font>

592
00:24:53,310 --> 00:25:00,090
webview allow you to do like what what's

593
00:24:55,710 --> 00:25:04,290
the actual benefit of doing<font color="#E5E5E5"> this it uses</font>

594
00:25:00,090 --> 00:25:07,020
the HR space object which is like a<font color="#CCCCCC"> Java</font>

595
00:25:04,290 --> 00:25:10,950
<font color="#CCCCCC">Script</font><font color="#E5E5E5"> the Java</font><font color="#CCCCCC"> object which is used as</font>

596
00:25:07,020 --> 00:25:14,100
a way<font color="#CCCCCC"> of allowing JavaScript to call</font>

597
00:25:10,950 --> 00:25:15,990
between<font color="#E5E5E5"> JavaScript and native code so</font>

598
00:25:14,100 --> 00:25:17,669
you<font color="#E5E5E5"> can go from JavaScript to Java code</font>

599
00:25:15,990 --> 00:25:20,930
<font color="#E5E5E5">and it's like essentially a bridge</font>

600
00:25:17,670 --> 00:25:23,670
between<font color="#CCCCCC"> the two and so</font><font color="#E5E5E5"> I analyzed the</font>

601
00:25:20,930 --> 00:25:27,090
JavaScript interface<font color="#E5E5E5"> you can basically</font>

602
00:25:23,670 --> 00:25:30,240
only<font color="#E5E5E5"> call methods with which annotated</font>

603
00:25:27,090 --> 00:25:32,280
<font color="#CCCCCC">with the JavaScript interface now</font><font color="#E5E5E5"> in the</font>

604
00:25:30,240 --> 00:25:34,650
bridge<font color="#E5E5E5"> so they have to specifically</font>

605
00:25:32,280 --> 00:25:37,649
annotate certain methods which they want

606
00:25:34,650 --> 00:25:39,060
to<font color="#CCCCCC"> be called and so I was looking</font>

607
00:25:37,650 --> 00:25:42,860
<font color="#CCCCCC">through</font><font color="#E5E5E5"> the different methods in the</font>

608
00:25:39,060 --> 00:25:46,440
attack surface<font color="#CCCCCC"> Fathers and essentially</font><font color="#E5E5E5"> I</font>

609
00:25:42,860 --> 00:25:50,189
<font color="#E5E5E5">located one which was called</font><font color="#CCCCCC"> launch app</font>

610
00:25:46,440 --> 00:25:52,500
functionality<font color="#E5E5E5"> so this sound this sounds</font>

611
00:25:50,190 --> 00:25:55,020
pretty dodgy to<font color="#CCCCCC"> me I was like</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> okay</font>

612
00:25:52,500 --> 00:25:57,230
like does this allow me to<font color="#E5E5E5"> launch like</font>

613
00:25:55,020 --> 00:26:02,430
any arbitrary<font color="#CCCCCC"> application on the device</font>

614
00:25:57,230 --> 00:26:04,140
<font color="#E5E5E5">from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> web page</font><font color="#CCCCCC"> and but they I don't</font>

615
00:26:02,430 --> 00:26:06,549
<font color="#CCCCCC">think they're intending to do this I</font>

616
00:26:04,140 --> 00:26:09,049
<font color="#CCCCCC">think they they</font><font color="#E5E5E5"> only really wanted</font><font color="#CCCCCC"> like</font>

617
00:26:06,549 --> 00:26:13,100
certain applications to be<font color="#E5E5E5"> launched but</font>

618
00:26:09,049 --> 00:26:17,240
they<font color="#E5E5E5"> they use this intent</font><font color="#CCCCCC"> pause</font><font color="#E5E5E5"> URI</font>

619
00:26:13,100 --> 00:26:20,240
functionality so you<font color="#E5E5E5"> pass your URI from</font>

620
00:26:17,240 --> 00:26:23,570
JavaScript into the Java intent<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Paz</font>

621
00:26:20,240 --> 00:26:27,289
<font color="#CCCCCC">Eri is</font><font color="#E5E5E5"> called on the URI to convert it</font>

622
00:26:23,570 --> 00:26:29,689
into into an intense URL then the<font color="#CCCCCC"> use</font>

623
00:26:27,289 --> 00:26:32,539
set package<font color="#E5E5E5"> and set package basically</font>

624
00:26:29,690 --> 00:26:34,669
allows you<font color="#E5E5E5"> to specify any package on the</font>

625
00:26:32,539 --> 00:26:36,740
device so we've got a<font color="#E5E5E5"> pretty good</font>

626
00:26:34,669 --> 00:26:40,100
exploit primitive there visit we can

627
00:26:36,740 --> 00:26:43,129
essentially<font color="#E5E5E5"> pass our own we can craft</font>

628
00:26:40,100 --> 00:26:45,199
<font color="#E5E5E5">our own URI and we can and we</font><font color="#CCCCCC"> can</font>

629
00:26:43,129 --> 00:26:48,009
basically craft where the package for

630
00:26:45,200 --> 00:26:52,340
<font color="#CCCCCC">the</font><font color="#E5E5E5"> application which receives that</font>

631
00:26:48,009 --> 00:26:56,269
receives the intent so essentially at

632
00:26:52,340 --> 00:26:58,939
this point you can call any activity<font color="#CCCCCC"> on</font>

633
00:26:56,269 --> 00:27:01,220
the device which<font color="#CCCCCC"> is exported so we've</font>

634
00:26:58,940 --> 00:27:05,210
gone<font color="#CCCCCC"> from just</font><font color="#E5E5E5"> having browsable intents</font>

635
00:27:01,220 --> 00:27:07,399
<font color="#E5E5E5">to</font><font color="#CCCCCC"> now export it intense we've start</font><font color="#E5E5E5"> on</font>

636
00:27:05,210 --> 00:27:11,019
the opposite<font color="#CCCCCC"> of attack surface reduction</font>

637
00:27:07,399 --> 00:27:13,508
we've we've increased<font color="#CCCCCC"> that so and but</font>

638
00:27:11,019 --> 00:27:16,820
this wasn't actually<font color="#CCCCCC"> like super</font>

639
00:27:13,509 --> 00:27:17,360
<font color="#CCCCCC">well-known there's a protocol schemer</font>

640
00:27:16,820 --> 00:27:19,789
called

641
00:27:17,360 --> 00:27:23,120
<font color="#E5E5E5">Android app</font><font color="#CCCCCC"> your I schema and basically</font>

642
00:27:19,789 --> 00:27:24,769
this<font color="#E5E5E5"> allows you to craft Android app</font>

643
00:27:23,120 --> 00:27:29,508
colon slash slash and then<font color="#E5E5E5"> a package</font>

644
00:27:24,769 --> 00:27:33,950
name and then using the intent<font color="#CCCCCC"> schema</font>

645
00:27:29,509 --> 00:27:37,309
<font color="#E5E5E5">you can basically embed extras so if</font>

646
00:27:33,950 --> 00:27:39,620
you're not<font color="#E5E5E5"> familiar with Android what</font>

647
00:27:37,309 --> 00:27:41,470
extras are are essentially the

648
00:27:39,620 --> 00:27:44,689
parameters which<font color="#CCCCCC"> you can pass to you</font>

649
00:27:41,470 --> 00:27:48,620
activities or IPC methods on the<font color="#E5E5E5"> device</font>

650
00:27:44,690 --> 00:27:52,009
<font color="#E5E5E5">and using this Android app</font><font color="#CCCCCC"> schema you</font>

651
00:27:48,620 --> 00:27:54,379
can<font color="#E5E5E5"> basically specify the you can</font>

652
00:27:52,009 --> 00:27:58,639
specify the D parameters<font color="#E5E5E5"> which</font><font color="#CCCCCC"> you want</font>

653
00:27:54,379 --> 00:28:01,600
to<font color="#E5E5E5"> pass the DRI</font><font color="#CCCCCC"> and but at this point</font><font color="#E5E5E5"> I</font>

654
00:27:58,639 --> 00:28:04,428
always<font color="#E5E5E5"> like well I I kept looking</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the</font>

655
00:28:01,600 --> 00:28:07,279
<font color="#E5E5E5">marketplace application we we need to</font>

656
00:28:04,429 --> 00:28:09,470
achieve code execution<font color="#E5E5E5"> like just having</font>

657
00:28:07,279 --> 00:28:12,769
launching apps and stuff like that is

658
00:28:09,470 --> 00:28:14,419
not really good<font color="#CCCCCC"> enough and I kept</font>

659
00:28:12,769 --> 00:28:17,360
<font color="#CCCCCC">looking</font><font color="#E5E5E5"> at the bridge and there wasn't</font>

660
00:28:14,419 --> 00:28:19,240
<font color="#E5E5E5">any like obvious way to turn</font><font color="#CCCCCC"> it into</font>

661
00:28:17,360 --> 00:28:21,360
remote code execution

662
00:28:19,240 --> 00:28:23,860
so the next<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> to do was to</font><font color="#E5E5E5"> basically</font>

663
00:28:21,360 --> 00:28:26,580
<font color="#E5E5E5">start</font><font color="#CCCCCC"> analyzing the other apps which</font>

664
00:28:23,860 --> 00:28:31,600
this new increased attack surface would

665
00:28:26,580 --> 00:28:34,658
allow you<font color="#E5E5E5"> to now access so this is what</font>

666
00:28:31,600 --> 00:28:37,990
the<font color="#E5E5E5"> DRI looks like so you craft the</font>

667
00:28:34,659 --> 00:28:41,049
Android app<font color="#CCCCCC"> URI</font><font color="#E5E5E5"> with the parameters for</font>

668
00:28:37,990 --> 00:28:42,640
the extra<font color="#E5E5E5"> for the intent</font><font color="#CCCCCC"> and then you</font>

669
00:28:41,049 --> 00:28:44,830
and then<font color="#E5E5E5"> you call the window</font><font color="#CCCCCC"> dot</font><font color="#E5E5E5"> high</font>

670
00:28:42,640 --> 00:28:47,380
space object which is exported when<font color="#CCCCCC"> in</font>

671
00:28:44,830 --> 00:28:49,779
the Dom which is hosted on our malicious

672
00:28:47,380 --> 00:28:53,649
web server<font color="#CCCCCC"> and at that point</font><font color="#E5E5E5"> we can now</font>

673
00:28:49,779 --> 00:28:54,909
pivot into other applications<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can</font>

674
00:28:53,649 --> 00:28:57,760
kind of see where<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going really</font>

675
00:28:54,909 --> 00:28:59,470
like I I followed the<font color="#E5E5E5"> same approach I</font>

676
00:28:57,760 --> 00:29:02,260
looked for other<font color="#CCCCCC"> applications on the</font>

677
00:28:59,470 --> 00:29:05,220
device<font color="#E5E5E5"> which had which which I could</font>

678
00:29:02,260 --> 00:29:08,110
trigger which post which had more

679
00:29:05,220 --> 00:29:12,190
important which which would lead to<font color="#E5E5E5"> code</font>

680
00:29:08,110 --> 00:29:15,070
execution<font color="#CCCCCC"> and one</font><font color="#E5E5E5"> of these was the it</font>

681
00:29:12,190 --> 00:29:16,570
was<font color="#CCCCCC"> the hawawa</font><font color="#E5E5E5"> reader application now I</font>

682
00:29:15,070 --> 00:29:19,330
wouldn't necessarily<font color="#E5E5E5"> look</font><font color="#CCCCCC"> at this</font>

683
00:29:16,570 --> 00:29:21,100
because<font color="#CCCCCC"> it was and it</font><font color="#E5E5E5"> was a low</font>

684
00:29:19,330 --> 00:29:25,178
privileged application it didn't<font color="#E5E5E5"> really</font>

685
00:29:21,100 --> 00:29:27,399
have that<font color="#E5E5E5"> many permissions and but it</font>

686
00:29:25,179 --> 00:29:29,289
looked<font color="#E5E5E5"> like</font><font color="#CCCCCC"> they'd done like no security</font>

687
00:29:27,399 --> 00:29:32,770
<font color="#E5E5E5">on this</font><font color="#CCCCCC"> application at all</font>

688
00:29:29,289 --> 00:29:34,419
so probably because they had the<font color="#E5E5E5"> same</font>

689
00:29:32,770 --> 00:29:36,179
thoughts as me they were like yeah this

690
00:29:34,419 --> 00:29:40,210
app is just<font color="#E5E5E5"> like it's an e-book reader</font>

691
00:29:36,179 --> 00:29:41,740
<font color="#CCCCCC">like</font><font color="#E5E5E5"> it's yeah like it doesn't have</font>

692
00:29:40,210 --> 00:29:44,380
installed permissions it doesn't have

693
00:29:41,740 --> 00:29:47,169
elevated access<font color="#E5E5E5"> what's the worst</font><font color="#CCCCCC"> at</font>

694
00:29:44,380 --> 00:29:49,750
which can happen but turns out this was

695
00:29:47,169 --> 00:29:51,520
like a mass like this had like every bad

696
00:29:49,750 --> 00:29:54,460
vulnerability you could think<font color="#E5E5E5"> of within</font>

697
00:29:51,520 --> 00:29:57,460
<font color="#E5E5E5">this</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> visit obvious clearly I</font>

698
00:29:54,460 --> 00:30:02,620
didn't mean like tested<font color="#E5E5E5"> or developers</font>

699
00:29:57,460 --> 00:30:04,720
with security knowledge<font color="#E5E5E5"> so firstly they</font>

700
00:30:02,620 --> 00:30:08,199
had data flow with the input validation

701
00:30:04,720 --> 00:30:13,149
which allowed you to load a<font color="#E5E5E5"> website up</font>

702
00:30:08,200 --> 00:30:17,590
into the in this application<font color="#CCCCCC"> similar to</font>

703
00:30:13,149 --> 00:30:20,370
the first<font color="#E5E5E5"> one but um but</font><font color="#CCCCCC"> basically yeah</font>

704
00:30:17,590 --> 00:30:23,168
allows you to trigger<font color="#CCCCCC"> that</font><font color="#E5E5E5"> webview and</font>

705
00:30:20,370 --> 00:30:25,330
the code<font color="#E5E5E5"> for this I did the same</font>

706
00:30:23,169 --> 00:30:28,630
processes before<font color="#CCCCCC"> I</font><font color="#E5E5E5"> analyzed the bridge I</font>

707
00:30:25,330 --> 00:30:31,029
found this<font color="#CCCCCC"> do command and functionality</font>

708
00:30:28,630 --> 00:30:32,050
within<font color="#E5E5E5"> the bridge what this allows you</font>

709
00:30:31,029 --> 00:30:34,120
<font color="#E5E5E5">to do is</font>

710
00:30:32,050 --> 00:30:36,100
I think it's for<font color="#E5E5E5"> like online reading of</font>

711
00:30:34,120 --> 00:30:37,750
<font color="#CCCCCC">e-books</font><font color="#E5E5E5"> so you can either download an</font>

712
00:30:36,100 --> 00:30:40,959
e-book or<font color="#E5E5E5"> you can like browse to online</font>

713
00:30:37,750 --> 00:30:44,980
<font color="#E5E5E5">and so I started analyzing each one of</font>

714
00:30:40,960 --> 00:30:48,310
<font color="#E5E5E5">these online reader and read now it</font>

715
00:30:44,980 --> 00:30:51,010
turns out<font color="#E5E5E5"> that they had they had a</font>

716
00:30:48,310 --> 00:30:52,810
directory<font color="#CCCCCC"> server so within the within</font>

717
00:30:51,010 --> 00:30:55,150
<font color="#E5E5E5">the</font><font color="#CCCCCC"> online reading functionality or the</font>

718
00:30:52,810 --> 00:30:59,649
<font color="#CCCCCC">download functionality which allows you</font>

719
00:30:55,150 --> 00:31:01,930
to<font color="#E5E5E5"> specify the file name</font><font color="#CCCCCC"> so as you</font><font color="#E5E5E5"> can</font>

720
00:30:59,650 --> 00:31:02,710
<font color="#CCCCCC">see here it does</font><font color="#E5E5E5"> path to get book</font>

721
00:31:01,930 --> 00:31:07,900
directory

722
00:31:02,710 --> 00:31:10,990
Plus um v7 dot<font color="#CCCCCC"> get string</font><font color="#E5E5E5"> filename v7</font>

723
00:31:07,900 --> 00:31:12,580
get string<font color="#E5E5E5"> filename is a JSON parameter</font>

724
00:31:10,990 --> 00:31:15,130
which is<font color="#CCCCCC"> passed by the attacker</font>

725
00:31:12,580 --> 00:31:16,330
they don't do any<font color="#E5E5E5"> path sanitization on</font>

726
00:31:15,130 --> 00:31:19,150
<font color="#E5E5E5">the path on the path</font>

727
00:31:16,330 --> 00:31:20,649
so essentially you can direct you

728
00:31:19,150 --> 00:31:23,050
traverse<font color="#CCCCCC"> site you can</font><font color="#E5E5E5"> be like dot dot</font>

729
00:31:20,650 --> 00:31:26,260
<font color="#E5E5E5">slash dot dot slash and at that point</font>

730
00:31:23,050 --> 00:31:28,629
you've got an arbitrary right you

731
00:31:26,260 --> 00:31:30,820
control<font color="#E5E5E5"> the content</font><font color="#CCCCCC"> of the file</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font>

732
00:31:28,630 --> 00:31:32,650
control where<font color="#CCCCCC"> you write the file to seek</font>

733
00:31:30,820 --> 00:31:35,679
me like dot dot slash<font color="#E5E5E5"> dot</font><font color="#CCCCCC"> slash</font><font color="#E5E5E5"> dot</font>

734
00:31:32,650 --> 00:31:38,200
slash SD card or<font color="#CCCCCC"> whatever and then</font><font color="#E5E5E5"> you</font>

735
00:31:35,680 --> 00:31:40,210
can write<font color="#E5E5E5"> outside of that so that's</font>

736
00:31:38,200 --> 00:31:42,160
<font color="#E5E5E5">pretty useful as well and I don't know</font>

737
00:31:40,210 --> 00:31:45,090
how readable that<font color="#E5E5E5"> is at the back but</font>

738
00:31:42,160 --> 00:31:48,640
that's the<font color="#CCCCCC"> json schema for doing the</font>

739
00:31:45,090 --> 00:31:51,879
<font color="#E5E5E5">downloading of the file a little</font><font color="#CCCCCC"> bit</font>

740
00:31:48,640 --> 00:31:55,930
<font color="#CCCCCC">whit like I did I when I</font><font color="#E5E5E5"> was reverse</font>

741
00:31:51,880 --> 00:31:59,410
engineering this<font color="#E5E5E5"> I I tried hosting the</font>

742
00:31:55,930 --> 00:32:01,290
file on<font color="#E5E5E5"> my own web server</font><font color="#CCCCCC"> but um they</font>

743
00:31:59,410 --> 00:32:05,110
were doing some<font color="#E5E5E5"> crazy stuff with</font><font color="#CCCCCC"> like</font>

744
00:32:01,290 --> 00:32:07,510
with load balancing<font color="#E5E5E5"> and AWS so in the</font>

745
00:32:05,110 --> 00:32:09,010
end<font color="#E5E5E5"> I like I couldn't spoof the protocol</font>

746
00:32:07,510 --> 00:32:11,770
so in the<font color="#E5E5E5"> end I</font><font color="#CCCCCC"> just gave up</font><font color="#E5E5E5"> and then</font>

747
00:32:09,010 --> 00:32:13,660
hosted on AWS the payload<font color="#E5E5E5"> because it was</font>

748
00:32:11,770 --> 00:32:16,180
<font color="#CCCCCC">just</font><font color="#E5E5E5"> like taking me so much time to work</font>

749
00:32:13,660 --> 00:32:18,760
out to basically<font color="#E5E5E5"> fix bugs within hawawa</font>

750
00:32:16,180 --> 00:32:20,650
HTTP implementation<font color="#E5E5E5"> but it wasn't</font>

751
00:32:18,760 --> 00:32:22,270
adhering to the<font color="#CCCCCC"> standards</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> was just</font>

752
00:32:20,650 --> 00:32:25,410
<font color="#E5E5E5">like yeah I'll just do</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> like a poster</font>

753
00:32:22,270 --> 00:32:29,770
on<font color="#CCCCCC"> an under load</font><font color="#E5E5E5"> balance thing as well</font>

754
00:32:25,410 --> 00:32:31,840
<font color="#E5E5E5">so yeah at this</font><font color="#CCCCCC"> point we're like okay</font><font color="#E5E5E5"> so</font>

755
00:32:29,770 --> 00:32:33,610
we can arbitrary<font color="#E5E5E5"> write data to anywhere</font>

756
00:32:31,840 --> 00:32:36,780
<font color="#E5E5E5">on the phone well we can arbitrate</font>

757
00:32:33,610 --> 00:32:39,250
create a file to anywhere on<font color="#CCCCCC"> the phone</font>

758
00:32:36,780 --> 00:32:41,440
<font color="#E5E5E5">with</font><font color="#CCCCCC"> whatever content we want</font>

759
00:32:39,250 --> 00:32:43,930
surely that's like game<font color="#E5E5E5"> like game over</font>

760
00:32:41,440 --> 00:32:46,540
<font color="#CCCCCC">now sure that's go to execution</font>

761
00:32:43,930 --> 00:32:48,370
and in the past<font color="#E5E5E5"> in earlier versions of</font>

762
00:32:46,540 --> 00:32:51,899
Android<font color="#E5E5E5"> you would have been able to</font>

763
00:32:48,370 --> 00:32:54,729
<font color="#E5E5E5">override the</font><font color="#CCCCCC"> dalvik cache</font><font color="#E5E5E5"> and trigger</font>

764
00:32:51,900 --> 00:32:58,540
<font color="#E5E5E5">reoptimize ation of the Dex loading and</font>

765
00:32:54,730 --> 00:33:01,050
an abuse<font color="#E5E5E5"> that the dalvik cache this</font><font color="#CCCCCC"> was</font>

766
00:32:58,540 --> 00:33:03,430
quite<font color="#E5E5E5"> a well-known</font><font color="#CCCCCC"> technique</font><font color="#E5E5E5"> but um</font>

767
00:33:01,050 --> 00:33:04,780
<font color="#CCCCCC">Google patched this</font><font color="#E5E5E5"> Google I increased</font>

768
00:33:03,430 --> 00:33:06,940
their security in later versions<font color="#CCCCCC"> of</font>

769
00:33:04,780 --> 00:33:11,530
<font color="#E5E5E5">Android so I needed</font><font color="#CCCCCC"> another way of</font>

770
00:33:06,940 --> 00:33:14,310
gaining<font color="#E5E5E5"> code execution</font><font color="#CCCCCC"> um so I also had</font>

771
00:33:11,530 --> 00:33:17,470
another<font color="#E5E5E5"> restriction as well which was I</font>

772
00:33:14,310 --> 00:33:21,280
wasn't able to<font color="#E5E5E5"> direct</font><font color="#CCCCCC"> you to us I know</font>

773
00:33:17,470 --> 00:33:22,930
overwrite an existing file<font color="#E5E5E5"> because there</font>

774
00:33:21,280 --> 00:33:24,670
was some checking<font color="#E5E5E5"> to see if the file</font>

775
00:33:22,930 --> 00:33:27,640
which<font color="#CCCCCC"> you were writing to already</font>

776
00:33:24,670 --> 00:33:29,110
<font color="#E5E5E5">existed and if not it would it would</font>

777
00:33:27,640 --> 00:33:32,220
<font color="#E5E5E5">basically prevent you from writing this</font>

778
00:33:29,110 --> 00:33:34,959
file so I couldn't<font color="#E5E5E5"> just</font><font color="#CCCCCC"> like like</font>

779
00:33:32,220 --> 00:33:36,820
<font color="#CCCCCC">overwrites like config file or an</font>

780
00:33:34,960 --> 00:33:40,660
existing Java file or<font color="#E5E5E5"> something like</font>

781
00:33:36,820 --> 00:33:44,320
that<font color="#E5E5E5"> so I was</font><font color="#CCCCCC"> like well what</font><font color="#E5E5E5"> can I do</font>

782
00:33:40,660 --> 00:33:48,190
now<font color="#E5E5E5"> and what I was like I was kind of</font>

783
00:33:44,320 --> 00:33:49,990
like it'd be really good<font color="#CCCCCC"> to see if there</font>

784
00:33:48,190 --> 00:33:52,270
wasn't like if they'd exposed an

785
00:33:49,990 --> 00:33:55,750
arbitrary delete primitive like I don't

786
00:33:52,270 --> 00:33:57,610
<font color="#E5E5E5">know why why</font><font color="#CCCCCC"> this would exist but I</font>

787
00:33:55,750 --> 00:33:59,860
actually found one which was<font color="#E5E5E5"> also</font>

788
00:33:57,610 --> 00:34:02,169
vulnerable to directory traversal<font color="#CCCCCC"> which</font>

789
00:33:59,860 --> 00:34:07,168
is kind<font color="#CCCCCC"> of useful</font><font color="#E5E5E5"> and but as you can see</font>

790
00:34:02,170 --> 00:34:10,990
<font color="#E5E5E5">here and it calls file is exists and</font>

791
00:34:07,169 --> 00:34:13,389
checked the path<font color="#CCCCCC"> dog</font><font color="#E5E5E5"> a buck name check</font>

792
00:34:10,989 --> 00:34:17,589
open<font color="#E5E5E5"> which basically so that checks to</font>

793
00:34:13,389 --> 00:34:19,839
see if the file exists and finds<font color="#E5E5E5"> yeah</font>

794
00:34:17,590 --> 00:34:22,810
<font color="#E5E5E5">and in the function and if it does then</font>

795
00:34:19,840 --> 00:34:25,530
<font color="#CCCCCC">it calls file that delays on</font><font color="#E5E5E5"> the path so</font>

796
00:34:22,810 --> 00:34:31,299
looking more into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> this.get name</font>

797
00:34:25,530 --> 00:34:34,840
check open<font color="#E5E5E5"> fail function essentially it</font>

798
00:34:31,300 --> 00:34:37,570
gets the open<font color="#CCCCCC"> failed directory and then</font>

799
00:34:34,840 --> 00:34:40,750
appends it with an md5<font color="#CCCCCC"> so this is like a</font>

800
00:34:37,570 --> 00:34:44,560
way of<font color="#CCCCCC"> caching these cache files and</font>

801
00:34:40,750 --> 00:34:46,540
these<font color="#E5E5E5"> the the md5 name of the file is</font>

802
00:34:44,560 --> 00:34:46,960
like the cache<font color="#E5E5E5"> so I was like hold on a</font>

803
00:34:46,540 --> 00:34:50,560
minute

804
00:34:46,960 --> 00:34:53,168
we control<font color="#E5E5E5"> both the weak we control the</font>

805
00:34:50,560 --> 00:34:55,659
<font color="#E5E5E5">file name so we can cut we can pre</font>

806
00:34:53,168 --> 00:34:57,790
calculate an md5 hash of<font color="#E5E5E5"> the file name</font>

807
00:34:55,659 --> 00:35:00,730
<font color="#E5E5E5">why don't we just pre calculate</font>

808
00:34:57,790 --> 00:35:03,520
<font color="#CCCCCC">md5 hash of</font><font color="#E5E5E5"> a directory traversal file</font>

809
00:35:00,730 --> 00:35:07,690
name or<font color="#E5E5E5"> file path and then that will get</font>

810
00:35:03,520 --> 00:35:10,090
<font color="#E5E5E5">appended to the to the book directory so</font>

811
00:35:07,690 --> 00:35:13,570
<font color="#E5E5E5">that what</font><font color="#CCCCCC"> that looks like is so</font><font color="#E5E5E5"> that's</font>

812
00:35:10,090 --> 00:35:16,660
the hash of<font color="#E5E5E5"> md5</font><font color="#CCCCCC"> hash of dot dot slash</font>

813
00:35:13,570 --> 00:35:19,900
<font color="#CCCCCC">plugin /</font><font color="#E5E5E5"> DF</font><font color="#CCCCCC"> services slash classes</font><font color="#E5E5E5"> jar</font>

814
00:35:16,660 --> 00:35:23,470
and then when that<font color="#E5E5E5"> code runs if we</font>

815
00:35:19,900 --> 00:35:25,240
create a file within like in the right

816
00:35:23,470 --> 00:35:28,990
location<font color="#E5E5E5"> using our arbitrary</font><font color="#CCCCCC"> ride</font>

817
00:35:25,240 --> 00:35:32,529
primitive then essentially the directory

818
00:35:28,990 --> 00:35:35,859
<font color="#E5E5E5">the delete well</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> trigger the deletion</font>

819
00:35:32,530 --> 00:35:38,440
of this<font color="#E5E5E5"> this jar file and so at that</font>

820
00:35:35,860 --> 00:35:41,770
<font color="#E5E5E5">point I want to be like okay</font><font color="#CCCCCC"> well like</font>

821
00:35:38,440 --> 00:35:44,260
we can replace the jar file<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> where</font>

822
00:35:41,770 --> 00:35:48,940
the jar file came from as well was the

823
00:35:44,260 --> 00:35:53,350
<font color="#CCCCCC">in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> hawaii reader application</font><font color="#E5E5E5"> the</font>

824
00:35:48,940 --> 00:35:55,600
they<font color="#E5E5E5"> actually they implemented like</font>

825
00:35:53,350 --> 00:35:58,810
<font color="#E5E5E5">additional functionality for loading</font>

826
00:35:55,600 --> 00:36:01,080
<font color="#E5E5E5">plugins so it was an e-book reader but</font>

827
00:35:58,810 --> 00:36:03,850
it also handled things like text files

828
00:36:01,080 --> 00:36:05,650
PDF and things like<font color="#CCCCCC"> that and</font><font color="#E5E5E5"> for some</font>

829
00:36:03,850 --> 00:36:08,259
<font color="#E5E5E5">reason they</font><font color="#CCCCCC"> were loading</font><font color="#E5E5E5"> jar files like</font>

830
00:36:05,650 --> 00:36:12,180
off the<font color="#CCCCCC"> SD card which is</font><font color="#E5E5E5"> pretty bad</font>

831
00:36:08,260 --> 00:36:17,050
because<font color="#E5E5E5"> the SD card is globally writable</font>

832
00:36:12,180 --> 00:36:19,839
<font color="#CCCCCC">in certain directories</font><font color="#E5E5E5"> and so that means</font>

833
00:36:17,050 --> 00:36:22,120
<font color="#E5E5E5">that but I mean we're already executing</font>

834
00:36:19,840 --> 00:36:25,050
in the context of<font color="#E5E5E5"> the app so it doesn't</font>

835
00:36:22,120 --> 00:36:27,460
really<font color="#E5E5E5"> make</font><font color="#CCCCCC"> too much difference but um</font>

836
00:36:25,050 --> 00:36:29,170
but they're still<font color="#CCCCCC"> loading a</font><font color="#E5E5E5"> jar file</font>

837
00:36:27,460 --> 00:36:30,940
from there<font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> in the sandbox it's</font>

838
00:36:29,170 --> 00:36:34,000
not somewhere where where we<font color="#E5E5E5"> wouldn't be</font>

839
00:36:30,940 --> 00:36:35,590
able to write<font color="#CCCCCC"> to and so this</font><font color="#E5E5E5"> is what</font>

840
00:36:34,000 --> 00:36:39,060
this<font color="#E5E5E5"> code does it uses</font><font color="#CCCCCC"> the Dex class</font>

841
00:36:35,590 --> 00:36:43,270
loader in<font color="#E5E5E5"> Android and</font><font color="#CCCCCC"> Java</font><font color="#E5E5E5"> and basically</font>

842
00:36:39,060 --> 00:36:45,549
yeah load classes<font color="#E5E5E5"> that jar</font><font color="#CCCCCC"> from the from</font>

843
00:36:43,270 --> 00:36:47,940
the from this directory which is<font color="#E5E5E5"> on the</font>

844
00:36:45,550 --> 00:36:51,160
SD<font color="#CCCCCC"> card which we have right access</font><font color="#E5E5E5"> to</font>

845
00:36:47,940 --> 00:36:54,610
and then calls and then creates a new

846
00:36:51,160 --> 00:36:58,089
<font color="#CCCCCC">instance of the of of the</font><font color="#E5E5E5"> object which</font>

847
00:36:54,610 --> 00:37:03,070
is<font color="#E5E5E5"> loaded from the jar so</font><font color="#CCCCCC"> putting it</font><font color="#E5E5E5"> all</font>

848
00:36:58,090 --> 00:37:04,900
together<font color="#E5E5E5"> and so at this point we can we</font>

849
00:37:03,070 --> 00:37:06,610
can override the jar file but but

850
00:37:04,900 --> 00:37:09,390
there's another areas like how do<font color="#E5E5E5"> we get</font>

851
00:37:06,610 --> 00:37:11,950
the jar file to actually load and

852
00:37:09,390 --> 00:37:14,230
<font color="#E5E5E5">hawawa implement in another method for</font>

853
00:37:11,950 --> 00:37:16,839
like triggering loading of<font color="#E5E5E5"> the Java of</font>

854
00:37:14,230 --> 00:37:19,930
the<font color="#E5E5E5"> Java and loading of the plugin</font>

855
00:37:16,839 --> 00:37:22,869
<font color="#E5E5E5">basically if you access a file of like</font>

856
00:37:19,930 --> 00:37:24,640
txt type it would essentially trigger

857
00:37:22,869 --> 00:37:29,140
the loading of<font color="#CCCCCC"> the Java file</font><font color="#E5E5E5"> so at that</font>

858
00:37:24,640 --> 00:37:31,990
<font color="#E5E5E5">point</font><font color="#CCCCCC"> and yeah</font><font color="#E5E5E5"> your malicious Java file</font>

859
00:37:29,140 --> 00:37:34,480
can<font color="#CCCCCC"> be loaded</font><font color="#E5E5E5"> as long as you create the</font>

860
00:37:31,990 --> 00:37:36,189
payload in the correct format<font color="#E5E5E5"> so that's</font>

861
00:37:34,480 --> 00:37:38,410
the code<font color="#CCCCCC"> for their payload</font><font color="#E5E5E5"> and</font>

862
00:37:36,190 --> 00:37:44,079
essentially exposes the<font color="#E5E5E5"> dock</font><font color="#CCCCCC"> feature</font>

863
00:37:38,410 --> 00:37:49,359
class and<font color="#E5E5E5"> and</font><font color="#CCCCCC"> executes</font><font color="#E5E5E5"> remote busybox</font>

864
00:37:44,079 --> 00:37:50,829
shell using that cut and<font color="#E5E5E5"> yeah and that</font>

865
00:37:49,359 --> 00:37:51,940
point you've got a remote shell running

866
00:37:50,829 --> 00:37:56,650
on the device<font color="#E5E5E5"> so you've got code</font>

867
00:37:51,940 --> 00:37:58,539
execution<font color="#E5E5E5"> so game over so I've got a</font>

868
00:37:56,650 --> 00:38:04,569
<font color="#E5E5E5">demo of this as well</font><font color="#CCCCCC"> what this actually</font>

869
00:37:58,539 --> 00:38:06,690
<font color="#CCCCCC">looks</font><font color="#E5E5E5"> like in practice if it plays so</font>

870
00:38:04,569 --> 00:38:09,130
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to be pretty</font><font color="#CCCCCC"> quick but</font>

871
00:38:06,690 --> 00:38:13,329
essentially this<font color="#CCCCCC"> is loading the website</font>

872
00:38:09,130 --> 00:38:14,950
from<font color="#E5E5E5"> the malicious web server then it's</font>

873
00:38:13,329 --> 00:38:17,559
creating the harsh to trigger the

874
00:38:14,950 --> 00:38:21,640
download<font color="#E5E5E5"> of to trigger the directory</font>

875
00:38:17,559 --> 00:38:23,109
traversal of the which will be used<font color="#E5E5E5"> to</font>

876
00:38:21,640 --> 00:38:26,440
trigger the directory traversal of the

877
00:38:23,109 --> 00:38:29,140
<font color="#E5E5E5">Java file and then it's pivoted</font><font color="#CCCCCC"> to the</font>

878
00:38:26,440 --> 00:38:33,369
hawawa reader application<font color="#E5E5E5"> loaded the</font>

879
00:38:29,140 --> 00:38:34,960
<font color="#CCCCCC">Java file</font><font color="#E5E5E5"> then it's yeah triggering the</font>

880
00:38:33,369 --> 00:38:38,020
<font color="#E5E5E5">plug-in</font><font color="#CCCCCC"> loading</font><font color="#E5E5E5"> so load the plugin and</font>

881
00:38:34,960 --> 00:38:39,660
then finally I'm executing<font color="#E5E5E5"> busybox and</font>

882
00:38:38,020 --> 00:38:41,410
start in the netcat listener<font color="#CCCCCC"> I</font>

883
00:38:39,660 --> 00:38:44,649
understand I've gone<font color="#E5E5E5"> pretty quickly</font>

884
00:38:41,410 --> 00:38:46,328
through through<font color="#E5E5E5"> the disprin ability but</font>

885
00:38:44,650 --> 00:38:49,440
<font color="#E5E5E5">we've got a white paper basically</font><font color="#CCCCCC"> outs</font>

886
00:38:46,329 --> 00:38:52,569
<font color="#CCCCCC">done like outlining all of the steps and</font>

887
00:38:49,440 --> 00:38:56,260
I've also published<font color="#E5E5E5"> the code for the</font>

888
00:38:52,569 --> 00:38:57,849
full exploit as well and to end<font color="#CCCCCC"> and yeah</font>

889
00:38:56,260 --> 00:39:01,230
<font color="#E5E5E5">and then that's great</font><font color="#CCCCCC"> execution at that</font>

890
00:38:57,849 --> 00:39:01,230
point yeah

891
00:39:04,989 --> 00:39:07,989
<font color="#E5E5E5">Thanks</font>

