1
00:00:00,030 --> 00:00:01,800
if you're still wondering acting after

2
00:00:01,800 --> 00:00:04,799
keynote how's the pronunciation of the

3
00:00:04,799 --> 00:00:06,750
paleontologists friends of the keynote

4
00:00:06,750 --> 00:00:09,570
speaker is shrug off and bear with me

5
00:00:09,570 --> 00:00:13,259
now ranchers to get you can of course

6
00:00:13,259 --> 00:00:16,740
find a YouTube video with that so please

7
00:00:16,740 --> 00:00:18,810
google it and you can repeat it out

8
00:00:18,810 --> 00:00:20,430
there is a German officer who tries to

9
00:00:20,430 --> 00:00:22,260
write it down so that's awesome video I

10
00:00:22,260 --> 00:00:24,960
recommend it also called Polish comedy

11
00:00:24,960 --> 00:00:29,099
alright how many of you have a Facebook

12
00:00:29,099 --> 00:00:30,630
account please raise your hand guys and

13
00:00:30,630 --> 00:00:33,090
girls awesome

14
00:00:33,090 --> 00:00:36,270
this guy is innocently looking guy could

15
00:00:36,270 --> 00:00:39,320
hack and take over your Facebook account

16
00:00:39,320 --> 00:00:43,739
my facebook account all I think it's

17
00:00:43,739 --> 00:00:46,440
around billion Facebook accounts just by

18
00:00:46,440 --> 00:00:51,690
knowing the email or mobile number of

19
00:00:51,690 --> 00:00:53,629
yours just to take over your account

20
00:00:53,629 --> 00:00:56,340
what he found out was I think it most

21
00:00:56,340 --> 00:00:58,800
spectacular example of the missing rate

22
00:00:58,800 --> 00:01:00,390
limiting back which is AB a

23
00:01:00,390 --> 00:01:03,420
characteristic for IP I so bear with me

24
00:01:03,420 --> 00:01:05,700
I will discuss it in a bit more detail

25
00:01:05,700 --> 00:01:11,610
see the problem was and reset password

26
00:01:11,610 --> 00:01:15,450
procedure you have to ask Facebook I

27
00:01:15,450 --> 00:01:17,250
wish to receive my password and he will

28
00:01:17,250 --> 00:01:20,640
send you six digit code either to your

29
00:01:20,640 --> 00:01:22,890
phone or to your mail you have to put it

30
00:01:22,890 --> 00:01:25,680
down just to set up a new password

31
00:01:25,680 --> 00:01:30,060
so usually and what he did here found

32
00:01:30,060 --> 00:01:32,400
that after we try to brute force that

33
00:01:32,400 --> 00:01:35,070
number the site will block you after few

34
00:01:35,070 --> 00:01:39,030
attempts free in this case 10 or 12 but

35
00:01:39,030 --> 00:01:41,280
moreover that he found out that two

36
00:01:41,280 --> 00:01:45,450
domains were missing this protection so

37
00:01:45,450 --> 00:01:47,790
that's why he was able to brute force

38
00:01:47,790 --> 00:01:52,020
that and to to get the valid values

39
00:01:52,020 --> 00:01:53,880
without the problem just by brute

40
00:01:53,880 --> 00:01:55,530
forcing the six digit which is not

41
00:01:55,530 --> 00:01:59,130
difficult to brute force luckily for all

42
00:01:59,130 --> 00:01:59,820
of us

43
00:01:59,820 --> 00:02:03,390
poor Facebook users is the good guy he

44
00:02:03,390 --> 00:02:05,549
reported the back to the Facebook bug

45
00:02:05,549 --> 00:02:08,128
bounty program this is the response he

46
00:02:08,128 --> 00:02:10,169
got the fifteen thousand dollars which

47
00:02:10,169 --> 00:02:12,750
is I think quite nice bounty also he got

48
00:02:12,750 --> 00:02:14,650
quite a media cover

49
00:02:14,650 --> 00:02:16,930
as you can see yeah throws the back that

50
00:02:16,930 --> 00:02:19,870
could unlock any users account you have

51
00:02:19,870 --> 00:02:21,610
to have an email out our mobile but

52
00:02:21,610 --> 00:02:26,500
still he got quite a media coverage so

53
00:02:26,500 --> 00:02:28,510
what's the reason for the stuff why I

54
00:02:28,510 --> 00:02:31,300
decided to talk about REST API there are

55
00:02:31,300 --> 00:02:33,700
several reasons I think first is that is

56
00:02:33,700 --> 00:02:37,480
everywhere behind every almost every web

57
00:02:37,480 --> 00:02:39,010
application you had mobile applications

58
00:02:39,010 --> 00:02:42,099
the trend is somehow growing a REST API

59
00:02:42,099 --> 00:02:47,260
is being added to existing applications

60
00:02:47,260 --> 00:02:52,000
as well and more and more companies

61
00:02:52,000 --> 00:02:55,299
allowed to use its API and nowadays if

62
00:02:55,299 --> 00:02:57,400
you develop software you don't have to

63
00:02:57,400 --> 00:03:00,220
write yourself everything you can

64
00:03:00,220 --> 00:03:02,019
happily use for example for sending

65
00:03:02,019 --> 00:03:04,420
emails there are a bunch of services

66
00:03:04,420 --> 00:03:08,650
which at this moment will do it better

67
00:03:08,650 --> 00:03:10,209
than you if you start from scratch to

68
00:03:10,209 --> 00:03:13,030
writing that so we just buy the services

69
00:03:13,030 --> 00:03:15,430
you just get API key and you integrate

70
00:03:15,430 --> 00:03:18,100
it with the API systems are getting more

71
00:03:18,100 --> 00:03:19,630
and more interconnected there are no

72
00:03:19,630 --> 00:03:23,320
more stand alone database browsers right

73
00:03:23,320 --> 00:03:26,579
there are many connections there also

74
00:03:26,579 --> 00:03:30,370
software developers follow trends

75
00:03:30,370 --> 00:03:32,200
similar in fashion and one of the

76
00:03:32,200 --> 00:03:35,350
current trends in software development

77
00:03:35,350 --> 00:03:37,510
is micro services which are a bunch of

78
00:03:37,510 --> 00:03:41,650
small services with IP I will expose the

79
00:03:41,650 --> 00:03:44,100
expose API they use API for others other

80
00:03:44,100 --> 00:03:46,930
services so this trend is drunk they

81
00:03:46,930 --> 00:03:49,019
told me once that nice talk should

82
00:03:49,019 --> 00:03:51,850
contain reference to Gartner so here it

83
00:03:51,850 --> 00:03:55,030
is you can see that gartner predicts

84
00:03:55,030 --> 00:04:00,269
that in 2018 which is I think quite soon

85
00:04:00,269 --> 00:04:02,739
more than 50 business to business

86
00:04:02,739 --> 00:04:04,389
communication will go through some kind

87
00:04:04,389 --> 00:04:06,700
of they call it web IP is but I think

88
00:04:06,700 --> 00:04:10,590
most of them will be done by rest iti

89
00:04:10,590 --> 00:04:15,459
from the security perspective from the

90
00:04:15,459 --> 00:04:18,310
security perspective the more API REST

91
00:04:18,310 --> 00:04:22,720
API code means the more IDI bugs so this

92
00:04:22,720 --> 00:04:25,090
is the last I think argument to talk

93
00:04:25,090 --> 00:04:27,610
about res API all right some few words

94
00:04:27,610 --> 00:04:30,550
about me hi my name is Matteo and I work

95
00:04:30,550 --> 00:04:33,099
in Polish company called securing we do

96
00:04:33,099 --> 00:04:34,689
mostly well application mobile

97
00:04:34,689 --> 00:04:37,030
application and security assessment also

98
00:04:37,030 --> 00:04:39,219
we help software service companies to

99
00:04:39,219 --> 00:04:42,639
help with security related issues on

100
00:04:42,639 --> 00:04:45,509
each stage of software development

101
00:04:45,509 --> 00:04:48,580
moreover I'm a member of OS Poland

102
00:04:48,580 --> 00:04:51,280
we recently organized our first OS Play

103
00:04:51,280 --> 00:04:54,129
so if you happen to be in Poland next

104
00:04:54,129 --> 00:04:56,530
year or who you wish to speak please

105
00:04:56,530 --> 00:05:00,009
submit a safety forum I encourage you to

106
00:05:00,009 --> 00:05:02,219
do that and to visit a visit crack of or

107
00:05:02,219 --> 00:05:05,349
even if the next Poland day I was Poland

108
00:05:05,349 --> 00:05:08,289
it will be in worsen before I started my

109
00:05:08,289 --> 00:05:10,629
career in security field I was a

110
00:05:10,629 --> 00:05:13,270
developer software developer and my

111
00:05:13,270 --> 00:05:15,960
first first encounter with security was

112
00:05:15,960 --> 00:05:18,879
actually fixing bugs which were reported

113
00:05:18,879 --> 00:05:19,979
to us

114
00:05:19,979 --> 00:05:23,710
and one other thing that one of my kids

115
00:05:23,710 --> 00:05:25,750
and my wife fall asleep and I'm happily

116
00:05:25,750 --> 00:05:28,389
still awake I do some bug bounties here

117
00:05:28,389 --> 00:05:32,289
are companies you can I found some some

118
00:05:32,289 --> 00:05:34,020
bugs in it all right

119
00:05:34,020 --> 00:05:36,879
the agenda for the talk first I give you

120
00:05:36,879 --> 00:05:39,129
just a glimpse what recipe is how it

121
00:05:39,129 --> 00:05:42,069
looks how it works and then we will get

122
00:05:42,069 --> 00:05:44,770
through steps related to Pentos or to

123
00:05:44,770 --> 00:05:47,710
bug bounty approach to finding bugs in

124
00:05:47,710 --> 00:05:51,460
API which I recommend to use if not

125
00:05:51,460 --> 00:05:55,089
mentioned anywhere else the all examples

126
00:05:55,089 --> 00:05:56,740
most of the examples are based on my

127
00:05:56,740 --> 00:06:00,969
experiences bug bounty hunter so let's

128
00:06:00,969 --> 00:06:03,189
move on what's the rest API

129
00:06:03,189 --> 00:06:05,560
rest means the representational state

130
00:06:05,560 --> 00:06:08,349
transfer API is application programming

131
00:06:08,349 --> 00:06:10,900
interface and that's that's it basically

132
00:06:10,900 --> 00:06:13,319
I'm not going to describe in detail

133
00:06:13,319 --> 00:06:15,430
architectural constraints behind REST

134
00:06:15,430 --> 00:06:17,529
API what I wish you to remember that

135
00:06:17,529 --> 00:06:20,889
recipe is is a successor basically on

136
00:06:20,889 --> 00:06:24,000
all web services and all the soap stuff

137
00:06:24,000 --> 00:06:26,740
REST API messages exchanged between

138
00:06:26,740 --> 00:06:29,409
client and the server are easy to read

139
00:06:29,409 --> 00:06:32,680
they should be they should surface to

140
00:06:32,680 --> 00:06:34,509
determine the state of the objects

141
00:06:34,509 --> 00:06:40,500
represented in that that message what is

142
00:06:40,500 --> 00:06:43,930
more important yeah data is usually send

143
00:06:43,930 --> 00:06:45,580
us JSON that can also be

144
00:06:45,580 --> 00:06:49,810
XML or HTML and HTTP methods have the

145
00:06:49,810 --> 00:06:54,190
meaning mostly there are flame wars on

146
00:06:54,190 --> 00:06:56,500
internet which is more restful than

147
00:06:56,500 --> 00:06:58,659
which idea is more restful than the

148
00:06:58,659 --> 00:07:00,969
other but in general as you can see here

149
00:07:00,969 --> 00:07:04,209
get is for getting the information but

150
00:07:04,209 --> 00:07:07,870
it's for replacing all or either date of

151
00:07:07,870 --> 00:07:09,879
the object or whole the whole collection

152
00:07:09,879 --> 00:07:11,860
of the objects but is for updating

153
00:07:11,860 --> 00:07:15,190
certain properties post just usually

154
00:07:15,190 --> 00:07:18,370
usually creates new entity until it is

155
00:07:18,370 --> 00:07:21,699
yeah so maybe example here we have get

156
00:07:21,699 --> 00:07:23,800
requests we wish to get a version

157
00:07:23,800 --> 00:07:26,019
details we have an endpoint which this

158
00:07:26,019 --> 00:07:28,750
version is and we don't send any

159
00:07:28,750 --> 00:07:31,509
parameters but if we do we would put

160
00:07:31,509 --> 00:07:34,120
here the same stuff as here and here is

161
00:07:34,120 --> 00:07:35,740
the response from the call and we have

162
00:07:35,740 --> 00:07:38,709
some details related to API endpoint

163
00:07:38,709 --> 00:07:39,990
named

164
00:07:39,990 --> 00:07:44,580
wear foot all right

165
00:07:44,580 --> 00:07:47,800
in case of recipe I pentas it should be

166
00:07:47,800 --> 00:07:50,199
straightforward usually when you're

167
00:07:50,199 --> 00:07:53,110
dealing with web application or mobile

168
00:07:53,110 --> 00:07:55,779
application you can see the cause to the

169
00:07:55,779 --> 00:07:58,419
API just by looking at the traffic

170
00:07:58,419 --> 00:08:01,389
sometimes in the mobile world you have

171
00:08:01,389 --> 00:08:03,759
to get get through some layer of

172
00:08:03,759 --> 00:08:06,129
encryption some additional rain oven of

173
00:08:06,129 --> 00:08:09,370
encryption over there HTTP POST message

174
00:08:09,370 --> 00:08:11,199
body parameters you cannot see them

175
00:08:11,199 --> 00:08:13,539
there are some some kind some way

176
00:08:13,539 --> 00:08:15,519
encrypted and you have to take that

177
00:08:15,519 --> 00:08:17,319
encryption out just to see what

178
00:08:17,319 --> 00:08:19,839
parameters are exchanging exchange in

179
00:08:19,839 --> 00:08:26,560
the API all right so basic steps oh one

180
00:08:26,560 --> 00:08:28,810
other thing sometimes you only test the

181
00:08:28,810 --> 00:08:30,580
API without prior knowledge of the

182
00:08:30,580 --> 00:08:33,880
application so then I recommend to start

183
00:08:33,880 --> 00:08:35,769
with getting endpoints which is URLs

184
00:08:35,769 --> 00:08:39,039
basically to the API methods getting the

185
00:08:39,039 --> 00:08:40,740
dogs to understand how the API works

186
00:08:40,740 --> 00:08:43,750
getting some sort of keys or credentials

187
00:08:43,750 --> 00:08:46,300
just to make to authenticate your calls

188
00:08:46,300 --> 00:08:49,480
to the API and get sample calls and get

189
00:08:49,480 --> 00:08:50,920
sample responses because

190
00:08:50,920 --> 00:08:54,149
why is that important sometimes there is

191
00:08:54,149 --> 00:08:57,160
let's say bad validation and you put

192
00:08:57,160 --> 00:08:59,589
some values as parameters you put some

193
00:08:59,589 --> 00:09:01,810
parameter values I'd you done now really

194
00:09:01,810 --> 00:09:04,810
what causes the error so it's better to

195
00:09:04,810 --> 00:09:09,430
get the proper values that's the best

196
00:09:09,430 --> 00:09:11,860
case scenario when we all get all these

197
00:09:11,860 --> 00:09:14,560
data my experience from background is

198
00:09:14,560 --> 00:09:16,870
sometimes you don't know there are any

199
00:09:16,870 --> 00:09:19,240
end points there sometimes you don't

200
00:09:19,240 --> 00:09:21,220
have ducks sometimes it's public API so

201
00:09:21,220 --> 00:09:22,920
you have dogs but sometimes you don't

202
00:09:22,920 --> 00:09:27,190
know keys credential of course sometimes

203
00:09:27,190 --> 00:09:31,899
no sample no sample course as well so I

204
00:09:31,899 --> 00:09:36,130
will just now go to the old steps to get

205
00:09:36,130 --> 00:09:38,200
those information in order to start

206
00:09:38,200 --> 00:09:41,680
testing to fuzzing those calls all right

207
00:09:41,680 --> 00:09:44,920
we'll start with finding endpoints my

208
00:09:44,920 --> 00:09:48,130
usual starting point is that I my tool

209
00:09:48,130 --> 00:09:50,440
for finding subdomains tells me that

210
00:09:50,440 --> 00:09:53,829
there is a new domain of in scope of one

211
00:09:53,829 --> 00:09:56,170
of the bug bounty programs and the root

212
00:09:56,170 --> 00:10:00,579
path returns on for HTTPS or HTTP

213
00:10:00,579 --> 00:10:02,920
returns for a for not part and I have to

214
00:10:02,920 --> 00:10:05,769
somehow decide if there is something on

215
00:10:05,769 --> 00:10:08,199
that server or just it's just empty so I

216
00:10:08,199 --> 00:10:11,949
start with finding I let's say root API

217
00:10:11,949 --> 00:10:14,620
path you can see here I think most

218
00:10:14,620 --> 00:10:18,790
common ones path maybe let's go to

219
00:10:18,790 --> 00:10:21,760
examples you can just check you can

220
00:10:21,760 --> 00:10:23,800
you're checking those at path and

221
00:10:23,800 --> 00:10:26,199
sometimes it goes like this we have here

222
00:10:26,199 --> 00:10:28,839
something something something the wal /

223
00:10:28,839 --> 00:10:32,380
IP I said v1 and here it is community

224
00:10:32,380 --> 00:10:35,440
community platform API v1 so I think it

225
00:10:35,440 --> 00:10:37,600
means that we are at the right track we

226
00:10:37,600 --> 00:10:41,170
found the right place and now after v1

227
00:10:41,170 --> 00:10:44,110
slash we can put names which I'll

228
00:10:44,110 --> 00:10:46,959
describe in a minute of the end points

229
00:10:46,959 --> 00:10:49,149
the next example even better than the

230
00:10:49,149 --> 00:10:51,040
previous one here it is

231
00:10:51,040 --> 00:10:54,670
we found API endpoint and this is nice

232
00:10:54,670 --> 00:10:56,740
message says that this is all list of

233
00:10:56,740 --> 00:10:58,630
all endpoints and we can

234
00:10:58,630 --> 00:11:00,850
here is only one but still can sometimes

235
00:11:00,850 --> 00:11:03,340
it's a lot of more you're sure that this

236
00:11:03,340 --> 00:11:05,680
is all endpoints available at this

237
00:11:05,680 --> 00:11:09,310
particular version because this is the

238
00:11:09,310 --> 00:11:10,090
version yeah

239
00:11:10,090 --> 00:11:12,730
v1 can be could be v2 here and another

240
00:11:12,730 --> 00:11:15,340
set of endpoints

241
00:11:15,340 --> 00:11:18,580
sometimes this approach doesn't return

242
00:11:18,580 --> 00:11:21,940
anything so I recommend to combine it

243
00:11:21,940 --> 00:11:24,430
with this pink health and status are

244
00:11:24,430 --> 00:11:29,170
most common endpoints which are usually

245
00:11:29,170 --> 00:11:31,810
available without any authentication so

246
00:11:31,810 --> 00:11:36,520
you can just call pink or health and you

247
00:11:36,520 --> 00:11:39,310
can get some proper response proper I

248
00:11:39,310 --> 00:11:45,160
mean other than 401 or 403 forbidden for

249
00:11:45,160 --> 00:11:47,380
example a pink if you send pink you

250
00:11:47,380 --> 00:11:49,360
expect to get pong in response that's

251
00:11:49,360 --> 00:11:52,390
proper resource of pink so it means that

252
00:11:52,390 --> 00:11:54,850
we are at the right place we got Punk so

253
00:11:54,850 --> 00:11:57,760
it means that here at this depth we

254
00:11:57,760 --> 00:12:00,760
should search for another endpoints all

255
00:12:00,760 --> 00:12:04,900
right how I think is more popular here

256
00:12:04,900 --> 00:12:07,150
we see health and the status is good

257
00:12:07,150 --> 00:12:12,190
which is quite fine sometimes we can get

258
00:12:12,190 --> 00:12:14,130
an error message which will say that

259
00:12:14,130 --> 00:12:17,080
unknown method requested mental health

260
00:12:17,080 --> 00:12:20,590
so I think we are at the right track we

261
00:12:20,590 --> 00:12:24,190
just got the wrong end point 9 so still

262
00:12:24,190 --> 00:12:25,810
we can brute force the health you

263
00:12:25,810 --> 00:12:28,870
replace with something else and try to

264
00:12:28,870 --> 00:12:30,940
check based on that message if we hit

265
00:12:30,940 --> 00:12:37,980
any other error message all right health

266
00:12:37,980 --> 00:12:40,300
another example which got me interesting

267
00:12:40,300 --> 00:12:43,630
because mainly because it contains TNT

268
00:12:43,630 --> 00:12:46,390
admin app whatever that means and I got

269
00:12:46,390 --> 00:12:51,880
to interested I googled status dot up in

270
00:12:51,880 --> 00:12:53,530
capital letters and I found that it's

271
00:12:53,530 --> 00:12:55,090
related to spin good actuator

272
00:12:55,090 --> 00:12:56,830
so now it's the story of fingered

273
00:12:56,830 --> 00:13:00,340
actuator maybe I should start with which

274
00:13:00,340 --> 00:13:03,220
is spring but let's go with spring both

275
00:13:03,220 --> 00:13:04,600
Springville this eye tool which helps

276
00:13:04,600 --> 00:13:07,570
you to rapidly develop spring

277
00:13:07,570 --> 00:13:10,300
applications and what is interesting

278
00:13:10,300 --> 00:13:12,420
from this description is the last

279
00:13:12,420 --> 00:13:14,740
it provides a production already

280
00:13:14,740 --> 00:13:17,019
features such as matrix health health

281
00:13:17,019 --> 00:13:19,319
checks and externalize configuration

282
00:13:19,319 --> 00:13:22,120
similar information is in Springwood

283
00:13:22,120 --> 00:13:24,040
actuator which is some kind of sub

284
00:13:24,040 --> 00:13:27,730
project of spring boot and here we have

285
00:13:27,730 --> 00:13:28,300
yeah

286
00:13:28,300 --> 00:13:29,699
it adds several production great

287
00:13:29,699 --> 00:13:33,180
features services so let's see those

288
00:13:33,180 --> 00:13:35,680
interesting end points this is the list

289
00:13:35,680 --> 00:13:38,079
of end points of activator and that's

290
00:13:38,079 --> 00:13:39,610
good not complete but I think that the

291
00:13:39,610 --> 00:13:41,920
most interesting ones first activator

292
00:13:41,920 --> 00:13:44,529
just give you the whole list of end

293
00:13:44,529 --> 00:13:46,930
points available health we've seen as an

294
00:13:46,930 --> 00:13:52,089
example before traces what trace does

295
00:13:52,089 --> 00:13:55,779
returns you the list of all HD of recent

296
00:13:55,779 --> 00:13:58,809
HTTP requests where you can find cookies

297
00:13:58,809 --> 00:14:02,079
or API keys this is what it does log

298
00:14:02,079 --> 00:14:03,999
file is similar it returns your recent

299
00:14:03,999 --> 00:14:06,309
entries in the log file metrics returns

300
00:14:06,309 --> 00:14:08,139
to some metrics related to the web

301
00:14:08,139 --> 00:14:09,610
application or the performance of the

302
00:14:09,610 --> 00:14:11,589
whole a server on which the web

303
00:14:11,589 --> 00:14:13,509
application is running from the metrics

304
00:14:13,509 --> 00:14:16,540
sometimes you can get also the API

305
00:14:16,540 --> 00:14:19,360
endpoints and keep them was most

306
00:14:19,360 --> 00:14:21,160
interesting permits announced the story

307
00:14:21,160 --> 00:14:24,970
of hip hop what hip dumb returns is

308
00:14:24,970 --> 00:14:28,449
actually compressed H profile which I

309
00:14:28,449 --> 00:14:30,759
then I was first time I was dealing with

310
00:14:30,759 --> 00:14:31,360
hip down

311
00:14:31,360 --> 00:14:34,000
I dedicated from the Google that it's

312
00:14:34,000 --> 00:14:37,540
some kind of memory dump so I used

313
00:14:37,540 --> 00:14:40,680
Eclipse memory analyzer and let me just

314
00:14:40,680 --> 00:14:51,970
show you I have it somewhere here yeah

315
00:14:51,970 --> 00:14:54,310
[Music]

316
00:14:54,310 --> 00:14:59,589
here we have a histogram which lays type

317
00:14:59,589 --> 00:15:02,600
types available and we skip them a

318
00:15:02,600 --> 00:15:05,630
number of instances in the hip damp and

319
00:15:05,630 --> 00:15:08,660
I think about string finding string

320
00:15:08,660 --> 00:15:10,279
maybe it should be interesting string

321
00:15:10,279 --> 00:15:12,680
but I didn't I couldn't certain string I

322
00:15:12,680 --> 00:15:13,910
couldn't match we finally think so I

323
00:15:13,910 --> 00:15:18,649
went with the byte array and here I

324
00:15:18,649 --> 00:15:22,370
hopefully you can see they're part of oh

325
00:15:22,370 --> 00:15:23,000
sorry

326
00:15:23,000 --> 00:15:26,019
you can see that this 401 unauthorized

327
00:15:26,019 --> 00:15:29,019
you have see you can see part of

328
00:15:29,019 --> 00:15:30,949
responses from the server on the heat

329
00:15:30,949 --> 00:15:32,329
because keeps the place where Java

330
00:15:32,329 --> 00:15:34,190
stores objects basically so everything

331
00:15:34,190 --> 00:15:36,709
which will be represented as object for

332
00:15:36,709 --> 00:15:40,009
example HTTP request will end up here

333
00:15:40,009 --> 00:15:42,850
and let me just move it a little bit

334
00:15:42,850 --> 00:15:46,009
when things got really interesting for

335
00:15:46,009 --> 00:15:51,610
me yeah

336
00:15:51,610 --> 00:15:56,360
for example I think when I select this

337
00:15:56,360 --> 00:15:59,149
you can read it but it says m2 domain

338
00:15:59,149 --> 00:16:02,240
cookie private key parade prefix for

339
00:16:02,240 --> 00:16:09,620
example let me see I have one screenshot

340
00:16:09,620 --> 00:16:13,100
if I won't find it now should should be

341
00:16:13,100 --> 00:16:17,750
there are some passwords and keys all

342
00:16:17,750 --> 00:16:19,639
right just let me go back to the

343
00:16:19,639 --> 00:16:23,540
screenshot I have it I have it right

344
00:16:23,540 --> 00:16:25,599
here

345
00:16:26,769 --> 00:16:31,579
yeah it's just you can I probably can

346
00:16:31,579 --> 00:16:35,060
read sorry m2 IMS service token client

347
00:16:35,060 --> 00:16:39,709
and value some kind of m2 model DB root

348
00:16:39,709 --> 00:16:41,060
password whatever that means

349
00:16:41,060 --> 00:16:43,339
row house 55 that's password so every

350
00:16:43,339 --> 00:16:46,399
every entries configuration entries were

351
00:16:46,399 --> 00:16:50,480
sound at hip and we got it all with you

352
00:16:50,480 --> 00:16:53,209
the use of only one and authenticated

353
00:16:53,209 --> 00:16:54,670
call to the API

354
00:16:54,670 --> 00:16:58,819
alright when we found on the neck at the

355
00:16:58,819 --> 00:17:02,810
end point list we should try to get

356
00:17:02,810 --> 00:17:04,880
sample calls some of them are quite easy

357
00:17:04,880 --> 00:17:05,550
because

358
00:17:05,550 --> 00:17:07,680
only get requests without parameters but

359
00:17:07,680 --> 00:17:09,150
some of them require some parameters so

360
00:17:09,150 --> 00:17:11,460
we have to somehow be able to call them

361
00:17:11,460 --> 00:17:13,230
properly so we start with finding dogs

362
00:17:13,230 --> 00:17:18,060
crease the list of most popular paths to

363
00:17:18,060 --> 00:17:20,160
get the dogs I will start with

364
00:17:20,160 --> 00:17:23,000
application dot W ad l which is a

365
00:17:23,000 --> 00:17:27,359
successor of WSDL web service

366
00:17:27,359 --> 00:17:28,770
description language this is web

367
00:17:28,770 --> 00:17:30,300
application description language and

368
00:17:30,300 --> 00:17:35,550
just let me show you an example this is

369
00:17:35,550 --> 00:17:43,310
the soap oh sorry this is the soap UI

370
00:17:43,310 --> 00:17:48,690
which are usually use for our web

371
00:17:48,690 --> 00:17:50,280
service evaluation but still you can

372
00:17:50,280 --> 00:17:58,340
import this file let me just find it

373
00:18:03,050 --> 00:18:07,670
yeah we have some example W a deal file

374
00:18:07,670 --> 00:18:10,820
I can show you also it's the next XML

375
00:18:10,820 --> 00:18:14,120
description similar to reverse the WSDL

376
00:18:14,120 --> 00:18:17,330
files it's yeah you can read that but

377
00:18:17,330 --> 00:18:21,890
it's better just to see so qi and here

378
00:18:21,890 --> 00:18:27,500
let me select one call hopefully it will

379
00:18:27,500 --> 00:18:32,480
work here we can get whole HTTP requests

380
00:18:32,480 --> 00:18:34,160
this is the accounting mobile yahoo

381
00:18:34,160 --> 00:18:37,550
something be freaked status and sorry

382
00:18:37,550 --> 00:18:41,860
and we can all play request and bank

383
00:18:41,860 --> 00:18:45,969
hopefully my internal connection works

384
00:18:47,260 --> 00:18:50,260
should

385
00:18:53,870 --> 00:18:56,420
I don't have the proxy set up but it's I

386
00:18:56,420 --> 00:18:58,460
checked it should work alright we get

387
00:18:58,460 --> 00:19:02,120
some response yeah we can see maybe

388
00:19:02,120 --> 00:19:04,460
wrong would be bad we got some status

389
00:19:04,460 --> 00:19:06,440
information so this is the tool which

390
00:19:06,440 --> 00:19:09,590
allows you easily produce HTTP requests

391
00:19:09,590 --> 00:19:14,780
from the description after in the wal

392
00:19:14,780 --> 00:19:19,820
file another example once I managed to

393
00:19:19,820 --> 00:19:22,370
obtain the whole PDF specification of

394
00:19:22,370 --> 00:19:24,710
the API which I checked later

395
00:19:24,710 --> 00:19:27,140
it wasn't publicly available so that was

396
00:19:27,140 --> 00:19:29,540
the nice kit because it gave me all the

397
00:19:29,540 --> 00:19:31,460
details of how the parameters are

398
00:19:31,460 --> 00:19:36,440
composed what I should enter there one

399
00:19:36,440 --> 00:19:39,170
of my favorite tools is swagger any of

400
00:19:39,170 --> 00:19:42,740
you use swagger or used right it is I

401
00:19:42,740 --> 00:19:45,590
think for me the easiest one you just

402
00:19:45,590 --> 00:19:48,620
put API key and you browse through the

403
00:19:48,620 --> 00:19:53,800
API let me just show you

404
00:19:59,460 --> 00:20:03,080
I have it here

405
00:20:06,210 --> 00:20:09,450
this is Adobe this time this is you

406
00:20:09,450 --> 00:20:11,639
usually you put here in a key you can

407
00:20:11,639 --> 00:20:14,639
see version info controller let's say we

408
00:20:14,639 --> 00:20:19,860
have a get request version and we can

409
00:20:19,860 --> 00:20:22,769
see that yeah it doesn't require any

410
00:20:22,769 --> 00:20:24,779
parameters so we can try it out so let's

411
00:20:24,779 --> 00:20:29,580
try it out and yeah it returned the nice

412
00:20:29,580 --> 00:20:33,269
version maybe I can show you something

413
00:20:33,269 --> 00:20:37,440
with parameters just to be sure

414
00:20:37,440 --> 00:20:42,559
oh maybe post yeah

415
00:20:42,659 --> 00:20:45,269
qu we have to produce some parameters

416
00:20:45,269 --> 00:20:48,480
collection IDE whatever and here we can

417
00:20:48,480 --> 00:20:52,139
click and just to present those

418
00:20:52,139 --> 00:20:53,789
parameters the same parameters as well

419
00:20:53,789 --> 00:20:59,869
add at the end and there is a try it out

420
00:21:00,019 --> 00:21:03,269
we also got get response

421
00:21:03,269 --> 00:21:05,850
unable to validate token which is no

422
00:21:05,850 --> 00:21:07,230
more response I would expect because I

423
00:21:07,230 --> 00:21:10,980
didn't send any token all right let's

424
00:21:10,980 --> 00:21:20,309
get back to slides of course most of the

425
00:21:20,309 --> 00:21:22,919
tools I plug it into burp which is HTTP

426
00:21:22,919 --> 00:21:26,940
proxy and I grab requests and responses

427
00:21:26,940 --> 00:21:29,369
and I fast rig API requests from burp or

428
00:21:29,369 --> 00:21:31,440
forms up on whatever you wish to use all

429
00:21:31,440 --> 00:21:35,340
right so we got the dogs if we still

430
00:21:35,340 --> 00:21:39,960
don't didn't find any documentation we

431
00:21:39,960 --> 00:21:41,580
can for example first approach would be

432
00:21:41,580 --> 00:21:46,860
to use error messages so first of all

433
00:21:46,860 --> 00:21:50,159
message this is this server's IP I

434
00:21:50,159 --> 00:21:53,399
really wishes to help you you made some

435
00:21:53,399 --> 00:21:56,519
error in the request and you get you

436
00:21:56,519 --> 00:21:59,970
have requested this URI but did you mean

437
00:21:59,970 --> 00:22:03,059
and you give you exact propositions of

438
00:22:03,059 --> 00:22:05,999
which endpoints you should check next so

439
00:22:05,999 --> 00:22:06,659
I like that

440
00:22:06,659 --> 00:22:09,509
I didn't know there exists are you here

441
00:22:09,509 --> 00:22:13,470
also I have parameters to use so that's

442
00:22:13,470 --> 00:22:16,740
nice and another example would be yeah I

443
00:22:16,740 --> 00:22:19,450
just sent some requests get

444
00:22:19,450 --> 00:22:23,679
was to rest be one out and it says mater

445
00:22:23,679 --> 00:22:26,289
not allowed right I will select post and

446
00:22:26,289 --> 00:22:28,600
do the same could not find username

447
00:22:28,600 --> 00:22:30,460
parameter I like that

448
00:22:30,460 --> 00:22:32,919
I can add user name parameter could not

449
00:22:32,919 --> 00:22:36,309
find a password parameter all right here

450
00:22:36,309 --> 00:22:38,919
we go and this message I understand it

451
00:22:38,919 --> 00:22:40,870
means that I selected parameters

452
00:22:40,870 --> 00:22:44,250
correctly just I didn't hit the values

453
00:22:44,250 --> 00:22:48,010
here I can recommend you the approach of

454
00:22:48,010 --> 00:22:51,820
the pyramid to if you try to brute-force

455
00:22:51,820 --> 00:22:55,350
parameters name look for the change in

456
00:22:55,350 --> 00:22:58,809
response length and response status this

457
00:22:58,809 --> 00:23:01,029
tool does exactly this idea implements

458
00:23:01,029 --> 00:23:05,740
this idea so if you hit as you can see

459
00:23:05,740 --> 00:23:09,700
here hopefully password password and

460
00:23:09,700 --> 00:23:11,710
username is the same length but if the

461
00:23:11,710 --> 00:23:13,179
names will be different you could see

462
00:23:13,179 --> 00:23:15,190
different length of the response so it

463
00:23:15,190 --> 00:23:16,990
means that something changed during your

464
00:23:16,990 --> 00:23:19,179
brute-force you can also use the same

465
00:23:19,179 --> 00:23:23,679
approach from for example from verb to

466
00:23:23,679 --> 00:23:27,639
deal with planted names in case of the

467
00:23:27,639 --> 00:23:30,309
web applications I recommend a scan tool

468
00:23:30,309 --> 00:23:33,309
which is PHP tool to scan and analyze

469
00:23:33,309 --> 00:23:36,279
JavaScript files to get you from there

470
00:23:36,279 --> 00:23:39,250
to extract API endpoints at least go and

471
00:23:39,250 --> 00:23:41,139
see the regular expression there which

472
00:23:41,139 --> 00:23:43,539
is used to exact those those endpoints

473
00:23:43,539 --> 00:23:44,980
if you are dealing with a web

474
00:23:44,980 --> 00:23:47,350
application you can also try to search

475
00:23:47,350 --> 00:23:49,659
for a JavaScript file which are

476
00:23:49,659 --> 00:23:52,529
sometimes start in popular location or

477
00:23:52,529 --> 00:23:54,940
just the location of the JavaScript file

478
00:23:54,940 --> 00:23:57,880
can be predicted in case of mobile

479
00:23:57,880 --> 00:23:59,320
application is the same you can also

480
00:23:59,320 --> 00:24:01,360
detect a mobile application to analyze

481
00:24:01,360 --> 00:24:06,970
that it's code and there is an app for

482
00:24:06,970 --> 00:24:07,210
that

483
00:24:07,210 --> 00:24:09,820
which is apk scan which is like

484
00:24:09,820 --> 00:24:11,830
something like similar to virustotal you

485
00:24:11,830 --> 00:24:15,669
upload your apk file and you it will

486
00:24:15,669 --> 00:24:18,519
analyze it its content against malware

487
00:24:18,519 --> 00:24:22,779
if it contains more links of those tools

488
00:24:22,779 --> 00:24:24,549
I mentioned there are at the end of the

489
00:24:24,549 --> 00:24:26,950
talk you can grab slice and there are

490
00:24:26,950 --> 00:24:28,330
there so you don't have to write those

491
00:24:28,330 --> 00:24:32,340
names all right

492
00:24:32,350 --> 00:24:36,860
finding keys in case of keys there are

493
00:24:36,860 --> 00:24:39,410
two places you can find we are in still

494
00:24:39,410 --> 00:24:41,270
in the mobile environment so we can

495
00:24:41,270 --> 00:24:43,340
check the mobile application I think one

496
00:24:43,340 --> 00:24:45,950
of the most spectacular examples is from

497
00:24:45,950 --> 00:24:50,630
three years back guys made a to play

498
00:24:50,630 --> 00:24:53,660
drone which crawled all apps from the

499
00:24:53,660 --> 00:24:56,900
Google store and checked for the storage

500
00:24:56,900 --> 00:25:00,740
for hard hard coded keys and I think

501
00:25:00,740 --> 00:25:03,170
Airbnb was the most interesting example

502
00:25:03,170 --> 00:25:05,150
because start keys for Facebook Google

503
00:25:05,150 --> 00:25:08,030
LinkedIn Microsoft and Yahoo so having

504
00:25:08,030 --> 00:25:10,940
that you could present yourself like

505
00:25:10,940 --> 00:25:13,490
like a regular Airbnb application for

506
00:25:13,490 --> 00:25:15,230
the Facebook for example to post your

507
00:25:15,230 --> 00:25:19,340
comments as the users and the second

508
00:25:19,340 --> 00:25:23,140
place is where you should look for keys

509
00:25:23,140 --> 00:25:25,490
github there are several tools to

510
00:25:25,490 --> 00:25:29,060
Crowell github you can also query it by

511
00:25:29,060 --> 00:25:32,090
yourself and ask for some string and it

512
00:25:32,090 --> 00:25:34,700
will give you I think we've Equifax

513
00:25:34,700 --> 00:25:36,590
someone that done that just to show

514
00:25:36,590 --> 00:25:40,760
there are there you can scan all public

515
00:25:40,760 --> 00:25:42,980
repositories of a company if it has any

516
00:25:42,980 --> 00:25:46,640
and also remember this company if there

517
00:25:46,640 --> 00:25:48,830
has a public repositories it has some

518
00:25:48,830 --> 00:25:51,080
developers there so also scan their

519
00:25:51,080 --> 00:25:54,290
repositories maybe someone saved his

520
00:25:54,290 --> 00:25:57,050
talk endure for one example here is a

521
00:25:57,050 --> 00:26:01,490
sample comet you can see that here's a -

522
00:26:01,490 --> 00:26:04,370
which is the change that this line was

523
00:26:04,370 --> 00:26:07,250
removed and here is the exact value zero

524
00:26:07,250 --> 00:26:09,440
five three and something something after

525
00:26:09,440 --> 00:26:11,780
access token and here is to replace with

526
00:26:11,780 --> 00:26:14,330
the way it should be done it just takes

527
00:26:14,330 --> 00:26:20,600
the environment entry given name so I it

528
00:26:20,600 --> 00:26:23,630
was the they had the public API so I

529
00:26:23,630 --> 00:26:26,120
went there and checked and this is the

530
00:26:26,120 --> 00:26:28,880
way you check token so what was

531
00:26:28,880 --> 00:26:30,650
interesting that token yeah it's still

532
00:26:30,650 --> 00:26:32,240
active and the role is of course

533
00:26:32,240 --> 00:26:35,960
administrator there sometimes travel

534
00:26:35,960 --> 00:26:39,250
 leaves you with a lot of lot of

535
00:26:39,250 --> 00:26:41,990
output to analyze but you can find their

536
00:26:41,990 --> 00:26:43,650
gems like this

537
00:26:43,650 --> 00:26:46,890
so I really recommend just to play to

538
00:26:46,890 --> 00:26:50,370
check what what things can be found now

539
00:26:50,370 --> 00:26:53,659
I wish to give you two more examples

540
00:26:54,140 --> 00:26:57,210
from my experience first one is yoga

541
00:26:57,210 --> 00:26:59,370
which is another unprotected endpoint

542
00:26:59,370 --> 00:27:03,390
similar to actuator what euro PR this is

543
00:27:03,390 --> 00:27:05,610
the response casual response to your

544
00:27:05,610 --> 00:27:09,240
locker if it's not protected it retains

545
00:27:09,240 --> 00:27:10,650
some stuff like that

546
00:27:10,650 --> 00:27:13,190
agent protocol configuration and so on

547
00:27:13,190 --> 00:27:17,610
what is your opium it's basically I rest

548
00:27:17,610 --> 00:27:21,420
like interface to deal with Jam mix

549
00:27:21,420 --> 00:27:24,090
which is development extension so maybe

550
00:27:24,090 --> 00:27:28,130
to give you an example this is the

551
00:27:28,130 --> 00:27:31,350
operation you can see I mentioned that

552
00:27:31,350 --> 00:27:34,260
get requests usually only pull the data

553
00:27:34,260 --> 00:27:37,290
this is here you can see right so this

554
00:27:37,290 --> 00:27:39,500
requests actually changed some property

555
00:27:39,500 --> 00:27:43,080
this is the entity which is a connector

556
00:27:43,080 --> 00:27:45,059
of the Tomcat on running on the port

557
00:27:45,059 --> 00:27:48,120
specified and what this operation does

558
00:27:48,120 --> 00:27:51,570
is just enables a exploit by request why

559
00:27:51,570 --> 00:27:55,530
I did that because the reason is there

560
00:27:55,530 --> 00:27:58,260
was a production application I didn't

561
00:27:58,260 --> 00:28:00,690
want to close the connector down I could

562
00:28:00,690 --> 00:28:02,880
have done that the same way like this I

563
00:28:02,880 --> 00:28:05,280
just wanted to share simple proof of

564
00:28:05,280 --> 00:28:07,020
concept that it's possible I can switch

565
00:28:07,020 --> 00:28:09,210
it on switch it off and the header as

566
00:28:09,210 --> 00:28:13,130
you can see at the bottom appeared

567
00:28:13,130 --> 00:28:15,870
what's most funny in this case for me

568
00:28:15,870 --> 00:28:18,290
that there is also a way to perform

569
00:28:18,290 --> 00:28:24,290
operations I mean by going by calling

570
00:28:24,290 --> 00:28:27,120
functions exposed you can this is the

571
00:28:27,120 --> 00:28:29,250
exact documentation and you can see at

572
00:28:29,250 --> 00:28:31,559
the bottom you can call garbage

573
00:28:31,559 --> 00:28:34,230
collector just by using this API which

574
00:28:34,230 --> 00:28:37,050
is nice it's designed to do do that but

575
00:28:37,050 --> 00:28:39,240
you shouldn't leave it and protect that

576
00:28:39,240 --> 00:28:41,429
should leave it anonymous access to that

577
00:28:41,429 --> 00:28:43,770
endpoint because I think the garbage

578
00:28:43,770 --> 00:28:46,440
collector collecting is a resource

579
00:28:46,440 --> 00:28:48,480
consuming operation so coin that many

580
00:28:48,480 --> 00:28:50,550
times could just broke the app and cause

581
00:28:50,550 --> 00:28:56,220
gos alright a last story which is a

582
00:28:56,220 --> 00:28:57,600
little bit different

583
00:28:57,600 --> 00:29:00,690
from the previous examples because it's

584
00:29:00,690 --> 00:29:03,030
not from my bounteous experience but my

585
00:29:03,030 --> 00:29:06,450
job I'm not allowed to disclose any

586
00:29:06,450 --> 00:29:09,090
details but I think you'll find you will

587
00:29:09,090 --> 00:29:11,730
find story interesting imagine a form

588
00:29:11,730 --> 00:29:13,950
some web applications you are logged

589
00:29:13,950 --> 00:29:16,200
into you have to fill some form for

590
00:29:16,200 --> 00:29:20,190
example to renew your drivers license or

591
00:29:20,190 --> 00:29:22,080
something like that you'll feel some

592
00:29:22,080 --> 00:29:24,059
data and you have to wait to put some

593
00:29:24,059 --> 00:29:26,970
kind of let's say national ID your

594
00:29:26,970 --> 00:29:29,160
national ID to populate the form

595
00:29:29,160 --> 00:29:31,169
automatically after you're solved

596
00:29:31,169 --> 00:29:35,730
properly the CAPTCHA to have to complete

597
00:29:35,730 --> 00:29:37,500
the form with your data so your name

598
00:29:37,500 --> 00:29:40,200
address whatever the hell is in the

599
00:29:40,200 --> 00:29:43,820
database so you have to put your ID

600
00:29:43,820 --> 00:29:47,429
solve the CAPTCHA and then the front

601
00:29:47,429 --> 00:29:51,960
gets the data yeah on this moment

602
00:29:51,960 --> 00:29:53,520
everything is normal this application

603
00:29:53,520 --> 00:29:56,850
was secured you couldn't ever circumvent

604
00:29:56,850 --> 00:30:01,080
CAPTCHA you couldn't resolve more than

605
00:30:01,080 --> 00:30:04,169
three captures because you were getting

606
00:30:04,169 --> 00:30:07,289
logged out and it was difficult to to

607
00:30:07,289 --> 00:30:11,419
automate that attack but the REST API

608
00:30:11,419 --> 00:30:15,000
was this was quite quite a legacy up

609
00:30:15,000 --> 00:30:19,530
those days and recipe I was added on it

610
00:30:19,530 --> 00:30:22,380
straight down the database level because

611
00:30:22,380 --> 00:30:23,760
they wanted to do the same from the

612
00:30:23,760 --> 00:30:28,440
mobile app top down new mobile app no

613
00:30:28,440 --> 00:30:33,809
capture mobile no rave limiting to

614
00:30:33,809 --> 00:30:36,900
regret now you could brute force anyone

615
00:30:36,900 --> 00:30:38,520
didn't think that adding recipient

616
00:30:38,520 --> 00:30:40,650
mobile app changed anything in the

617
00:30:40,650 --> 00:30:42,929
threat landscape of this app so

618
00:30:42,929 --> 00:30:44,630
basically you can brute force now and

619
00:30:44,630 --> 00:30:47,220
yeah as I mentioned it's the clients or

620
00:30:47,220 --> 00:30:48,840
you didn't sell the data because this

621
00:30:48,840 --> 00:30:52,740
imagine driver's license data the size

622
00:30:52,740 --> 00:30:55,650
of the the data we reported that the

623
00:30:55,650 --> 00:30:57,990
client as a critical one because they

624
00:30:57,990 --> 00:30:59,520
had the protection of the web api but

625
00:30:59,520 --> 00:31:02,220
not on the mobile someone I don't know

626
00:31:02,220 --> 00:31:04,350
that they didn't communicate sometimes

627
00:31:04,350 --> 00:31:08,580
the another team does the mobile down

628
00:31:08,580 --> 00:31:12,720
the web app alright to sum up

629
00:31:12,720 --> 00:31:14,970
I discussed how to find end points and

630
00:31:14,970 --> 00:31:18,060
to find dogs either they're public or

631
00:31:18,060 --> 00:31:22,200
you have some apps to check how to fight

632
00:31:22,200 --> 00:31:25,140
I discussed how to find sample calls how

633
00:31:25,140 --> 00:31:27,930
to get keys in case of fuzzing if you

634
00:31:27,930 --> 00:31:30,360
have sample calls obtained the first

635
00:31:30,360 --> 00:31:32,700
thing is similar in the way you do it

636
00:31:32,700 --> 00:31:34,500
for web application so I didn't dive

637
00:31:34,500 --> 00:31:40,850
into that these are the steps to start

638
00:31:40,850 --> 00:31:43,050
assessment either security or you to

639
00:31:43,050 --> 00:31:44,610
background to your pen test of a

640
00:31:44,610 --> 00:31:50,030
background of a REST API so questions I

641
00:31:50,030 --> 00:31:53,070
want to one thing I want to add that I

642
00:31:53,070 --> 00:31:56,130
don't Lee sighs you saw a few entries

643
00:31:56,130 --> 00:31:59,100
I'm gonna release on our github if you

644
00:31:59,100 --> 00:32:01,140
wish to to use them there were not

645
00:32:01,140 --> 00:32:04,620
extensive ones those to find API root or

646
00:32:04,620 --> 00:32:08,190
ipi methods but still it's a it's a

647
00:32:08,190 --> 00:32:10,140
start if you if someone of you wish to

648
00:32:10,140 --> 00:32:12,360
copyright on that please find me at the

649
00:32:12,360 --> 00:32:14,280
conference we can talk and discuss their

650
00:32:14,280 --> 00:32:19,040
cooperation so now I'll take questions

651
00:32:19,880 --> 00:32:25,260
just one maybe oh sorry that's just the

652
00:32:25,260 --> 00:32:32,790
light yeah please no no I thought it

653
00:32:32,790 --> 00:32:34,830
should be somehow could be possible to

654
00:32:34,830 --> 00:32:37,470
do but I didn't yes but it's on my list

655
00:32:37,470 --> 00:32:40,860
to try to because you can do that from

656
00:32:40,860 --> 00:32:43,560
for example we have Tomcat console right

657
00:32:43,560 --> 00:32:46,230
you can do that there I didn't find any

658
00:32:46,230 --> 00:32:49,440
obvious way in the Internet to do that I

659
00:32:49,440 --> 00:32:53,430
tried to analyze the available options

660
00:32:53,430 --> 00:32:55,530
because you get if you hit your locker

661
00:32:55,530 --> 00:32:58,020
you get all the end points all the codes

662
00:32:58,020 --> 00:33:00,000
available but it's huge list and I

663
00:33:00,000 --> 00:33:01,560
didn't manage to find remote code

664
00:33:01,560 --> 00:33:06,330
execution abuse but it wasn't similar to

665
00:33:06,330 --> 00:33:09,900
the one you can do with with the usual

666
00:33:09,900 --> 00:33:11,520
setup with the old old way I would say

667
00:33:11,520 --> 00:33:14,430
all right I understand what you mean I

668
00:33:14,430 --> 00:33:16,950
unfortunately know there I haven't seen

669
00:33:16,950 --> 00:33:19,620
a standard would describe how to handle

670
00:33:19,620 --> 00:33:21,640
API keys how to

671
00:33:21,640 --> 00:33:24,400
for example get those obtained from the

672
00:33:24,400 --> 00:33:26,590
web application itself because you

673
00:33:26,590 --> 00:33:28,960
somehow you have to get those keys how

674
00:33:28,960 --> 00:33:30,760
to exchange them how to revoke them

675
00:33:30,760 --> 00:33:33,850
there is I don't I'm not aware of the

676
00:33:33,850 --> 00:33:35,350
standard how to have to approach it

677
00:33:35,350 --> 00:33:38,200
that's difficult difficult in knots

678
00:33:38,200 --> 00:33:42,220
I recommend to analyze how github does

679
00:33:42,220 --> 00:33:45,490
it or the big players does it but you

680
00:33:45,490 --> 00:33:47,980
you know that you won't find any simple

681
00:33:47,980 --> 00:33:50,110
description you can only see how they do

682
00:33:50,110 --> 00:33:53,559
it just by using it that's it no no

683
00:33:53,559 --> 00:33:55,840
standard here is very very difficult

684
00:33:55,840 --> 00:33:58,929
area and everyone is trying to find some

685
00:33:58,929 --> 00:34:02,220
sort of solution to the problem

