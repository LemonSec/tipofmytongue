1
00:00:02,480 --> 00:00:04,160
good morning everybody

2
00:00:04,160 --> 00:00:06,319
i hope you're enjoying your coffee and

3
00:00:06,319 --> 00:00:08,639
listen to great talks today

4
00:00:08,639 --> 00:00:10,480
i have the horner to start the second

5
00:00:10,480 --> 00:00:13,679
day of the activity 2020.

6
00:00:13,679 --> 00:00:16,079
my name is moritz apple and in the next

7
00:00:16,079 --> 00:00:17,199
couple of minutes

8
00:00:17,199 --> 00:00:19,279
we will attack a modern unified

9
00:00:19,279 --> 00:00:22,800
communication infrastructure

10
00:00:23,439 --> 00:00:27,279
who am i i'm an i.t security consultant

11
00:00:27,279 --> 00:00:29,760
for a german company called sus

12
00:00:29,760 --> 00:00:32,479
i have been working with voice over ip

13
00:00:32,479 --> 00:00:34,399
and unified communication technologies

14
00:00:34,399 --> 00:00:35,280
for years

15
00:00:35,280 --> 00:00:38,640
with a special focus on it security

16
00:00:38,640 --> 00:00:41,760
and finally i'm just another guy who is

17
00:00:41,760 --> 00:00:44,000
interested in information technology

18
00:00:44,000 --> 00:00:47,200
and i.t security

19
00:00:48,559 --> 00:00:51,600
when we hear about voice over ip

20
00:00:51,600 --> 00:00:54,960
we usually see something like this

21
00:00:54,960 --> 00:00:58,719
two ip headphones and one ippx

22
00:00:58,719 --> 00:01:01,120
and for signaling they're using sip and

23
00:01:01,120 --> 00:01:02,320
for media transport

24
00:01:02,320 --> 00:01:05,760
they're using rtp

25
00:01:05,760 --> 00:01:08,880
but my opinion is this chart is no

26
00:01:08,880 --> 00:01:12,000
longer current

27
00:01:12,000 --> 00:01:14,320
let's look at a common voiceover ip and

28
00:01:14,320 --> 00:01:16,240
unify communication scenario

29
00:01:16,240 --> 00:01:19,600
of a medium-sized company

30
00:01:19,600 --> 00:01:23,119
obviously we have still pbx

31
00:01:23,119 --> 00:01:26,240
and desk phones

32
00:01:26,240 --> 00:01:28,960
but we also have soft phones and some

33
00:01:28,960 --> 00:01:32,240
kind of unifi communication client

34
00:01:32,240 --> 00:01:35,680
and because the it administrator loves

35
00:01:35,680 --> 00:01:38,400
to central administration we also have

36
00:01:38,400 --> 00:01:40,960
some kind of application server

37
00:01:40,960 --> 00:01:42,880
it also provides the backend for the

38
00:01:42,880 --> 00:01:46,320
unified communication software

39
00:01:47,280 --> 00:01:50,079
and because the it administrator do not

40
00:01:50,079 --> 00:01:52,479
want to maintain two user databases

41
00:01:52,479 --> 00:01:55,040
we often have a ldap connection to the

42
00:01:55,040 --> 00:01:58,000
active directory

43
00:02:00,320 --> 00:02:02,320
all of these are only the internet

44
00:02:02,320 --> 00:02:03,920
services and we have

45
00:02:03,920 --> 00:02:06,479
not talking about fax applications or

46
00:02:06,479 --> 00:02:10,399
contact center systems and so on

47
00:02:10,399 --> 00:02:13,599
but today we usually have sip trunks to

48
00:02:13,599 --> 00:02:16,239
call to external parties

49
00:02:16,239 --> 00:02:19,200
and because of the corona crisis we also

50
00:02:19,200 --> 00:02:20,959
have remote workers who want to

51
00:02:20,959 --> 00:02:23,440
communicate with their iphones

52
00:02:23,440 --> 00:02:25,599
or their smartphones with the office

53
00:02:25,599 --> 00:02:28,000
extension

54
00:02:28,000 --> 00:02:29,760
also important for communication and

55
00:02:29,760 --> 00:02:33,599
collaboration is a conferencing system

56
00:02:33,599 --> 00:02:35,599
where we can meet our colleagues from

57
00:02:35,599 --> 00:02:38,720
everywhere on the planet

58
00:02:40,480 --> 00:02:43,280
but we want to keep our internet network

59
00:02:43,280 --> 00:02:44,800
secure and clean so

60
00:02:44,800 --> 00:02:48,640
we implement a session border controller

61
00:02:48,640 --> 00:02:51,280
it is a kind of voice application

62
00:02:51,280 --> 00:02:53,920
firewall

63
00:02:55,760 --> 00:02:57,760
and finally because we all hear these

64
00:02:57,760 --> 00:02:59,680
horror histories about man in the middle

65
00:02:59,680 --> 00:03:01,360
and eve dropped calls

66
00:03:01,360 --> 00:03:04,720
we separate our internal network

67
00:03:04,720 --> 00:03:07,760
to keep it secure

68
00:03:08,560 --> 00:03:11,680
okay now we know this scenario

69
00:03:11,680 --> 00:03:16,319
let's talk about the agenda of this talk

70
00:03:16,319 --> 00:03:19,440
well it's pretty simple we will

71
00:03:19,440 --> 00:03:23,360
attack all these applications

72
00:03:23,360 --> 00:03:25,760
but first let's talk about the problems

73
00:03:25,760 --> 00:03:28,480
with the tools

74
00:03:29,120 --> 00:03:31,120
there are not many tools for voiceover

75
00:03:31,120 --> 00:03:32,799
ip security analysis

76
00:03:32,799 --> 00:03:35,920
and those there are available they

77
00:03:35,920 --> 00:03:38,560
partially outdated to static and

78
00:03:38,560 --> 00:03:39,280
sometimes

79
00:03:39,280 --> 00:03:42,640
manufacturer dependent

80
00:03:42,879 --> 00:03:45,200
so based on this problem i developed my

81
00:03:45,200 --> 00:03:46,879
own tool set which is called

82
00:03:46,879 --> 00:03:49,760
wirebug it is open source and it's

83
00:03:49,760 --> 00:03:51,599
written in python

84
00:03:51,599 --> 00:03:53,599
the advantages of this open source

85
00:03:53,599 --> 00:03:56,159
project is that it is manufacturer

86
00:03:56,159 --> 00:03:58,879
independent customizable and it comes

87
00:03:58,879 --> 00:04:01,040
with a wizard to keep the usage

88
00:04:01,040 --> 00:04:05,040
simple because everybody knows these

89
00:04:05,040 --> 00:04:08,080
long and complex terminal commands

90
00:04:08,080 --> 00:04:10,879
but if you like these you can use every

91
00:04:10,879 --> 00:04:15,360
tool independently from the command line

92
00:04:15,360 --> 00:04:18,399
so in order to get warm

93
00:04:18,399 --> 00:04:20,639
we start with the network separation of

94
00:04:20,639 --> 00:04:23,440
the desk phones

95
00:04:25,520 --> 00:04:27,520
everyone knows network access control

96
00:04:27,520 --> 00:04:30,000
with 802.1x

97
00:04:30,000 --> 00:04:33,280
and mac based authentication but this is

98
00:04:33,280 --> 00:04:35,360
not the point in this talk

99
00:04:35,360 --> 00:04:37,680
if you are interested how to bypass this

100
00:04:37,680 --> 00:04:39,600
you can read the linked document

101
00:04:39,600 --> 00:04:41,600
and use the open source tool of my

102
00:04:41,600 --> 00:04:43,840
colleague

103
00:04:45,360 --> 00:04:48,720
for automatic voice over ipv vlan

104
00:04:48,720 --> 00:04:49,600
assignment

105
00:04:49,600 --> 00:04:51,759
a protocol called link layer discovery

106
00:04:51,759 --> 00:04:53,840
protocol with the media extension is

107
00:04:53,840 --> 00:04:55,600
often used

108
00:04:55,600 --> 00:04:58,080
it is a layer 2 based protocol with no

109
00:04:58,080 --> 00:05:00,080
authentication

110
00:05:00,080 --> 00:05:02,880
and it's for exchanging information like

111
00:05:02,880 --> 00:05:03,840
vlan ids

112
00:05:03,840 --> 00:05:05,919
server addresses quality of service

113
00:05:05,919 --> 00:05:09,520
things between network neighbors

114
00:05:09,520 --> 00:05:11,600
this protocol is pretty cool for

115
00:05:11,600 --> 00:05:13,840
automatic rollout

116
00:05:13,840 --> 00:05:15,840
because you plug in a phone and the

117
00:05:15,840 --> 00:05:17,840
switchboard will be configured with the

118
00:05:17,840 --> 00:05:19,440
voiceover pv lan

119
00:05:19,440 --> 00:05:22,080
and the phone knows which vlan id it has

120
00:05:22,080 --> 00:05:25,840
to tag on its network interface

121
00:05:26,160 --> 00:05:30,800
but because it has no authentication

122
00:05:30,800 --> 00:05:35,120
an attacker can pretend to be a phone

123
00:05:35,120 --> 00:05:38,560
and the switch will say hello iphone

124
00:05:38,560 --> 00:05:40,800
please set the vlan id and i will give

125
00:05:40,800 --> 00:05:42,240
you network access

126
00:05:42,240 --> 00:05:45,680
to the voiceover ipvlan

127
00:05:48,960 --> 00:05:53,840
so now it's time for a demo

128
00:05:55,440 --> 00:05:57,840
so first i start wirebug with its

129
00:05:57,840 --> 00:06:00,400
built-in wizard

130
00:06:00,400 --> 00:06:03,520
as you can see wirebug supports

131
00:06:03,520 --> 00:06:06,880
also tab completion

132
00:06:06,880 --> 00:06:09,600
we have to do lldp spoof enter the

133
00:06:09,600 --> 00:06:12,319
interface and the vendor

134
00:06:12,319 --> 00:06:14,160
send the packet to our network neighbor

135
00:06:14,160 --> 00:06:21,840
and we will receive a response

136
00:06:24,319 --> 00:06:27,120
if we go into the ldp response packet

137
00:06:27,120 --> 00:06:27,919
from the switch

138
00:06:27,919 --> 00:06:33,039
we can see the vlan id 301

139
00:06:33,120 --> 00:06:36,000
and if we now create a virtual interface

140
00:06:36,000 --> 00:06:40,560
with detect vlan id 301

141
00:06:41,520 --> 00:06:49,840
we have access to the wiper network

142
00:06:50,319 --> 00:06:54,560
okay now we're in the voip vlan

143
00:06:54,560 --> 00:06:58,720
so let's look at the iphones

144
00:07:00,400 --> 00:07:02,560
eavesdropping calls is not so easy today

145
00:07:02,560 --> 00:07:04,080
because we usually have

146
00:07:04,080 --> 00:07:07,440
encrypted zip in rtp traffic

147
00:07:07,440 --> 00:07:10,720
encryption for zip is done with usual

148
00:07:10,720 --> 00:07:12,800
tls

149
00:07:12,800 --> 00:07:16,639
but because rdp is used with a udp-based

150
00:07:16,639 --> 00:07:17,919
protocol

151
00:07:17,919 --> 00:07:21,199
rtp is encrypted with other methods and

152
00:07:21,199 --> 00:07:24,560
desk phones almost all using srtp sds

153
00:07:24,560 --> 00:07:27,039
method

154
00:07:29,440 --> 00:07:32,479
in this method the ies key for symmetric

155
00:07:32,479 --> 00:07:34,560
rtp encryption is delivered in a

156
00:07:34,560 --> 00:07:36,560
signaling part

157
00:07:36,560 --> 00:07:38,960
and in zip it is a media attribute

158
00:07:38,960 --> 00:07:40,160
called crypto

159
00:07:40,160 --> 00:07:43,520
which can be found in the body of zip

160
00:07:43,520 --> 00:07:45,919
so the problem is if an attacker has

161
00:07:45,919 --> 00:07:47,840
access to the signaling stream

162
00:07:47,840 --> 00:07:50,960
for example with a simple trs proxy he

163
00:07:50,960 --> 00:07:53,440
could decrypt the call

164
00:07:53,440 --> 00:07:56,400
and yeah the tls proxy method usually

165
00:07:56,400 --> 00:07:57,360
works because

166
00:07:57,360 --> 00:07:59,840
certificate validation is a foreign word

167
00:07:59,840 --> 00:08:01,759
in zip

168
00:08:01,759 --> 00:08:03,919
and in case the phone and the server

169
00:08:03,919 --> 00:08:06,400
validates the certificate correctly

170
00:08:06,400 --> 00:08:08,160
sometimes you could find the signaling

171
00:08:08,160 --> 00:08:09,919
traffic in the log files which are

172
00:08:09,919 --> 00:08:10,639
publicly

173
00:08:10,639 --> 00:08:12,800
publicly accessible on the web server of

174
00:08:12,800 --> 00:08:15,280
the phones

175
00:08:16,080 --> 00:08:18,720
and additionally this is not end to end

176
00:08:18,720 --> 00:08:21,199
encrypted

177
00:08:22,160 --> 00:08:27,840
so it's time for the next demo

178
00:08:33,039 --> 00:08:34,880
i have this network capture of a voice

179
00:08:34,880 --> 00:08:36,958
call

180
00:08:36,958 --> 00:08:38,958
and if we analyze the stream in the

181
00:08:38,958 --> 00:08:40,000
capture we will

182
00:08:40,000 --> 00:08:42,719
see random noise which is an indicator

183
00:08:42,719 --> 00:08:55,839
for encrypted chord

184
00:08:56,240 --> 00:09:00,640
so yes it is encrypted

185
00:09:00,720 --> 00:09:04,000
so now let's have a look at the packets

186
00:09:04,000 --> 00:09:06,560
in the body of the zip invite packet we

187
00:09:06,560 --> 00:09:08,320
can see the crypto attribute

188
00:09:08,320 --> 00:09:11,440
with its key for rtp encryption

189
00:09:11,440 --> 00:09:15,360
for further steps we copy this key

190
00:09:18,000 --> 00:09:19,920
and because we only want to decrypt the

191
00:09:19,920 --> 00:09:22,399
correct rtp stream we have to extract

192
00:09:22,399 --> 00:09:23,360
only the rtp

193
00:09:23,360 --> 00:09:26,640
packets into a new file

194
00:09:33,839 --> 00:09:35,839
yeah sometimes these screws are not so

195
00:09:35,839 --> 00:09:51,839
easy to handle

196
00:10:02,839 --> 00:10:05,360
okay

197
00:10:05,360 --> 00:10:08,880
now i use wirebox decode srtp tool for

198
00:10:08,880 --> 00:10:11,120
extracting and decrypting the rtp

199
00:10:11,120 --> 00:10:14,800
stream from the given file

200
00:10:15,200 --> 00:10:18,399
i have to enter the key length and the

201
00:10:18,399 --> 00:10:33,839
encrypted key which i copied previously

202
00:10:47,760 --> 00:10:50,160
the tool creates a new file which with

203
00:10:50,160 --> 00:10:52,399
the decrypted stream

204
00:10:52,399 --> 00:10:55,440
and if we now open this file

205
00:10:55,440 --> 00:10:57,920
and look at the rtp stream we should see

206
00:10:57,920 --> 00:11:01,839
the decrypted call

207
00:11:25,040 --> 00:11:29,839
this is an encrypted call

208
00:11:30,000 --> 00:11:33,920
great it is decrypted

209
00:11:41,440 --> 00:11:44,640
so now let's have a look at

210
00:11:44,640 --> 00:11:47,519
the provisioning

211
00:11:48,959 --> 00:11:51,519
as an admin you want as little effort as

212
00:11:51,519 --> 00:11:52,959
possible

213
00:11:52,959 --> 00:11:55,120
automatic provisioning and deployment of

214
00:11:55,120 --> 00:11:56,320
new phones

215
00:11:56,320 --> 00:12:00,720
and after all central administration

216
00:12:00,720 --> 00:12:03,519
so let's see how it how this works in

217
00:12:03,519 --> 00:12:05,279
example of unifi

218
00:12:05,279 --> 00:12:08,399
openscape business

219
00:12:08,880 --> 00:12:11,120
the server sensor http requests to the

220
00:12:11,120 --> 00:12:12,560
phone and asks for

221
00:12:12,560 --> 00:12:16,720
a call a so called contact me request

222
00:12:16,720 --> 00:12:19,600
the phone sends a https post request

223
00:12:19,600 --> 00:12:20,000
with

224
00:12:20,000 --> 00:12:22,720
information about itself to provide to

225
00:12:22,720 --> 00:12:25,600
the provided ip address

226
00:12:25,600 --> 00:12:27,920
the server now responds with a new

227
00:12:27,920 --> 00:12:29,519
contact me with the message

228
00:12:29,519 --> 00:12:33,680
i have new configs for you so the phone

229
00:12:33,680 --> 00:12:36,720
requests these new configurations and

230
00:12:36,720 --> 00:12:38,320
finally the server sends back the

231
00:12:38,320 --> 00:12:40,320
configurations for example

232
00:12:40,320 --> 00:12:44,240
for setting a new call forwarding key

233
00:12:45,920 --> 00:12:49,839
but if an attacker do this

234
00:12:49,839 --> 00:12:54,399
the phone says okay sir you're the boss

235
00:12:54,399 --> 00:12:56,720
and we have something like remote code

236
00:12:56,720 --> 00:13:00,880
execution with administrative rights

237
00:13:01,440 --> 00:13:07,839
so it's time for the next demo

238
00:13:07,920 --> 00:13:10,240
here we can see the admin web interface

239
00:13:10,240 --> 00:13:13,040
of a voip phone

240
00:13:14,000 --> 00:13:17,200
now i try to log in

241
00:13:18,320 --> 00:13:22,639
as expected the authentication failed

242
00:13:24,079 --> 00:13:26,240
and now i pretend to be the provisioning

243
00:13:26,240 --> 00:13:28,399
server and instruct the phone to set the

244
00:13:28,399 --> 00:13:29,040
new

245
00:13:29,040 --> 00:13:34,160
admin password

246
00:13:34,160 --> 00:13:36,399
yeah i changed the field type to text so

247
00:13:36,399 --> 00:13:37,360
you can see the

248
00:13:37,360 --> 00:13:48,240
entered password

249
00:13:48,240 --> 00:13:51,120
and yes we are logged in as

250
00:13:51,120 --> 00:13:53,279
administrator and have the full control

251
00:13:53,279 --> 00:13:56,160
of the voiceover

252
00:14:00,839 --> 00:14:03,839
phone

253
00:14:09,920 --> 00:14:15,599
so now focus on the soft phones

254
00:14:15,680 --> 00:14:19,040
soft phones uses srgp sds2

255
00:14:19,040 --> 00:14:20,959
but some newer softphones also

256
00:14:20,959 --> 00:14:23,600
supporting set rtp

257
00:14:23,600 --> 00:14:26,720
set rtp is similar to ssh where we have

258
00:14:26,720 --> 00:14:28,720
a divi helmet key exchange between the

259
00:14:28,720 --> 00:14:31,279
media endpoints

260
00:14:31,279 --> 00:14:33,760
the problem is there is no information

261
00:14:33,760 --> 00:14:35,040
in the signaling part

262
00:14:35,040 --> 00:14:39,680
that the soft phones using set rgp

263
00:14:39,680 --> 00:14:41,760
that's because they are sending these

264
00:14:41,760 --> 00:14:44,079
set rtp hello packets

265
00:14:44,079 --> 00:14:47,760
to each other but

266
00:14:47,760 --> 00:14:50,399
what happens if an attacker could drop

267
00:14:50,399 --> 00:14:53,600
these hello messages

268
00:14:55,680 --> 00:14:59,839
let's have a look at the next demo

269
00:15:02,560 --> 00:15:06,160
so i have these two soft phones

270
00:15:06,160 --> 00:15:08,160
and because alice has caught bob too

271
00:15:08,160 --> 00:15:09,360
often in the past

272
00:15:09,360 --> 00:15:12,560
bob is now calling alice and if

273
00:15:12,560 --> 00:15:15,519
alice accepts the call we can see these

274
00:15:15,519 --> 00:15:16,720
encryption symbol

275
00:15:16,720 --> 00:15:20,639
with the information of set rgp

276
00:15:24,839 --> 00:15:27,440
okay let's have a look at the network

277
00:15:27,440 --> 00:15:29,839
capture

278
00:15:30,160 --> 00:15:34,719
and here we can see the set rgp pickets

279
00:15:36,800 --> 00:15:40,160
and if we analyze the stream we should

280
00:15:40,160 --> 00:15:54,880
see an encrypted rtp stream

281
00:15:54,880 --> 00:15:58,079
yes there it is

282
00:16:02,959 --> 00:16:05,119
now

283
00:16:06,480 --> 00:16:10,079
i start wirebox set rtp downgrade tool

284
00:16:10,079 --> 00:16:13,359
and see what's happened

285
00:16:15,680 --> 00:16:17,759
if we now have a call between alice and

286
00:16:17,759 --> 00:16:20,000
bob

287
00:16:20,560 --> 00:16:25,518
we see no encryption symbol anymore

288
00:16:30,240 --> 00:16:32,320
okay let's have a look at the network

289
00:16:32,320 --> 00:16:34,399
capture and wireshark's

290
00:16:34,399 --> 00:16:37,839
rtp player

291
00:16:46,560 --> 00:16:49,839
there we can see a unencrypted call

292
00:16:49,839 --> 00:16:50,720
therefore

293
00:16:50,720 --> 00:16:54,079
the attack was successful

294
00:16:54,079 --> 00:16:55,920
and the tool also responds as a

295
00:16:55,920 --> 00:17:05,839
successful downgrade to clear rtp

296
00:17:08,240 --> 00:17:12,400
okay now let's have a look

297
00:17:12,400 --> 00:17:16,240
at the active directory connection

298
00:17:16,240 --> 00:17:18,720
as previously said the administrator do

299
00:17:18,720 --> 00:17:20,160
not want to maintain

300
00:17:20,160 --> 00:17:23,599
two or more user databases so

301
00:17:23,599 --> 00:17:26,000
that's why active directory replication

302
00:17:26,000 --> 00:17:28,480
is often done

303
00:17:28,480 --> 00:17:31,520
so very simple add up query to get user

304
00:17:31,520 --> 00:17:32,880
informations

305
00:17:32,880 --> 00:17:35,120
like their name and phone number and so

306
00:17:35,120 --> 00:17:37,360
on

307
00:17:37,440 --> 00:17:42,000
so what do you do as an admin

308
00:17:42,000 --> 00:17:44,720
you configure the systems as it is

309
00:17:44,720 --> 00:17:46,880
recommended by the manufacturer

310
00:17:46,880 --> 00:17:49,120
right

311
00:17:49,919 --> 00:17:52,640
but if we look at this example of a

312
00:17:52,640 --> 00:17:55,679
voiceover ip manufacturer

313
00:17:55,679 --> 00:17:58,559
we see we should enter the domain

314
00:17:58,559 --> 00:18:00,160
administrator account

315
00:18:00,160 --> 00:18:02,480
and query the active directory with a

316
00:18:02,480 --> 00:18:05,679
unencrypted add-up

317
00:18:05,760 --> 00:18:08,799
bad idea right

318
00:18:10,480 --> 00:18:13,440
therefore if an attacker is able to man

319
00:18:13,440 --> 00:18:14,480
in the middle this

320
00:18:14,480 --> 00:18:17,039
he takes over the domain administrative

321
00:18:17,039 --> 00:18:18,720
account

322
00:18:18,720 --> 00:18:22,240
and by the way in past projects i often

323
00:18:22,240 --> 00:18:23,360
have become

324
00:18:23,360 --> 00:18:26,240
the main admin by exploiting exactly

325
00:18:26,240 --> 00:18:29,840
these situations

326
00:18:33,280 --> 00:18:36,720
ok now it's time to attack

327
00:18:36,720 --> 00:18:39,440
the pbx

328
00:18:41,200 --> 00:18:43,600
zip proxies often have the problem that

329
00:18:43,600 --> 00:18:47,120
user enumeration is possible

330
00:18:47,120 --> 00:18:49,039
this is done by sending a register

331
00:18:49,039 --> 00:18:51,520
request to the pbx

332
00:18:51,520 --> 00:18:55,679
and if we receive a 401 or 407 response

333
00:18:55,679 --> 00:18:58,080
we know the pbx wants authentication

334
00:18:58,080 --> 00:18:59,919
data

335
00:18:59,919 --> 00:19:02,400
that's usually an indicator that this

336
00:19:02,400 --> 00:19:04,400
user exists

337
00:19:04,400 --> 00:19:06,960
it's similar like in web application

338
00:19:06,960 --> 00:19:08,000
when the

339
00:19:08,000 --> 00:19:10,960
response says something like user exists

340
00:19:10,960 --> 00:19:11,520
but

341
00:19:11,520 --> 00:19:14,320
wrong password

342
00:19:16,320 --> 00:19:19,280
additionally if we get a 200 okay

343
00:19:19,280 --> 00:19:23,600
response instead of 401 or in 407

344
00:19:23,600 --> 00:19:28,240
we are registered without authentication

345
00:19:29,280 --> 00:19:34,559
spoiler yes this happens in practice

346
00:19:35,360 --> 00:19:37,679
and the next problem is online brute

347
00:19:37,679 --> 00:19:39,520
forcing

348
00:19:39,520 --> 00:19:42,799
here two problems come together there is

349
00:19:42,799 --> 00:19:45,200
no technique like captures or something

350
00:19:45,200 --> 00:19:46,400
like that

351
00:19:46,400 --> 00:19:50,559
to slow down and limit the attack

352
00:19:51,520 --> 00:19:54,480
we could only block the ip address or

353
00:19:54,480 --> 00:19:56,799
the user account itself for a specific

354
00:19:56,799 --> 00:19:59,360
time frame

355
00:19:59,360 --> 00:20:02,480
but telephony should always work right

356
00:20:02,480 --> 00:20:04,640
because it's on telephone and the

357
00:20:04,640 --> 00:20:06,320
telephone has to work

358
00:20:06,320 --> 00:20:11,120
always and the next problem is that zip

359
00:20:11,120 --> 00:20:13,760
extensions often have weak passwords

360
00:20:13,760 --> 00:20:14,159
like

361
00:20:14,159 --> 00:20:16,400
one two three four five or zero zero

362
00:20:16,400 --> 00:20:17,280
zero

363
00:20:17,280 --> 00:20:21,919
and so on that's why online brute force

364
00:20:21,919 --> 00:20:22,480
attacks

365
00:20:22,480 --> 00:20:25,600
are often possible and in combined with

366
00:20:25,600 --> 00:20:26,720
user enumeration

367
00:20:26,720 --> 00:20:29,760
also successful

368
00:20:32,240 --> 00:20:37,280
okay now let's see the demo

369
00:20:40,880 --> 00:20:44,000
for enumeration we can use wirebox tool

370
00:20:44,000 --> 00:20:48,400
zip anim it uses a zip request given by

371
00:20:48,400 --> 00:20:50,960
a file and replace the variables

372
00:20:50,960 --> 00:20:54,720
inside for users you

373
00:20:54,720 --> 00:20:57,600
can use delivered user extension files

374
00:20:57,600 --> 00:21:03,840
or your own file with usernames

375
00:21:04,960 --> 00:21:10,000
now i run the tool to enumerate users

376
00:21:11,440 --> 00:21:14,559
and depending on how fast the zip stack

377
00:21:14,559 --> 00:21:15,600
of the zip proxy

378
00:21:15,600 --> 00:21:20,240
responses the enumeration takes time

379
00:21:27,760 --> 00:21:30,640
but finally we are able to enumerate the

380
00:21:30,640 --> 00:21:31,600
existing zip

381
00:21:31,600 --> 00:21:34,320
extensions and also register to all zip

382
00:21:34,320 --> 00:21:35,440
extensions

383
00:21:35,440 --> 00:21:39,440
which do not require an authentication

384
00:21:41,440 --> 00:21:43,039
to show the difference between zip

385
00:21:43,039 --> 00:21:45,840
stacks i have a second ippx which we

386
00:21:45,840 --> 00:21:46,480
will

387
00:21:46,480 --> 00:21:50,320
enumerate and there you can see it's

388
00:21:50,320 --> 00:21:53,120
much faster

389
00:21:55,200 --> 00:21:58,240
ok let's see

390
00:21:58,240 --> 00:22:01,520
sip brute forcing

391
00:22:02,480 --> 00:22:05,120
to protrude the zip extension now we can

392
00:22:05,120 --> 00:22:06,880
use the zip blue tool

393
00:22:06,880 --> 00:22:08,880
the requests are also based on the given

394
00:22:08,880 --> 00:22:11,200
file

395
00:22:11,200 --> 00:22:13,280
and in default the two uses a password

396
00:22:13,280 --> 00:22:15,200
file with one to six

397
00:22:15,200 --> 00:22:18,000
digit numbers

398
00:22:18,880 --> 00:22:20,720
for our online brute force attack we

399
00:22:20,720 --> 00:22:22,559
want to use our own password file and

400
00:22:22,559 --> 00:22:24,320
brute force the password for the zipper

401
00:22:24,320 --> 00:22:27,280
extension 80.

402
00:22:27,280 --> 00:22:30,400
and yes we were able to guess the

403
00:22:30,400 --> 00:22:31,120
password

404
00:22:31,120 --> 00:22:41,840
which is 999

405
00:22:44,640 --> 00:22:48,559
so we are done with the internet network

406
00:22:48,559 --> 00:22:51,120
but we also want to call external

407
00:22:51,120 --> 00:22:52,080
parties

408
00:22:52,080 --> 00:22:56,639
so let's have a look at zip trunking

409
00:22:57,360 --> 00:22:59,520
for sip trucking there are two modes

410
00:22:59,520 --> 00:23:00,640
available

411
00:23:00,640 --> 00:23:02,559
the registration mode and the static

412
00:23:02,559 --> 00:23:03,679
mode

413
00:23:03,679 --> 00:23:07,760
by the way in the main rsc 3261

414
00:23:07,760 --> 00:23:10,960
zip there is no talk of trunking and yes

415
00:23:10,960 --> 00:23:13,280
zip is originally not developed to have

416
00:23:13,280 --> 00:23:15,678
trunks

417
00:23:16,960 --> 00:23:19,200
okay so in registration mode the

418
00:23:19,200 --> 00:23:21,200
authentication is done by username and

419
00:23:21,200 --> 00:23:22,880
password

420
00:23:22,880 --> 00:23:25,600
so it is similar to the internal pbx and

421
00:23:25,600 --> 00:23:28,559
softphones for example

422
00:23:28,559 --> 00:23:30,559
the security in this mode depends on the

423
00:23:30,559 --> 00:23:33,520
password quality

424
00:23:34,320 --> 00:23:37,039
in the static mode the authentication is

425
00:23:37,039 --> 00:23:40,799
done by the source ip address

426
00:23:40,799 --> 00:23:43,200
and the security is based on the network

427
00:23:43,200 --> 00:23:44,480
access control list

428
00:23:44,480 --> 00:23:47,520
you have configured

429
00:23:48,320 --> 00:23:51,200
okay so i said in registration mode we

430
00:23:51,200 --> 00:23:51,760
have

431
00:23:51,760 --> 00:23:54,000
a similar authentication like internal

432
00:23:54,000 --> 00:23:57,919
when using zip phones and pbx

433
00:24:00,640 --> 00:24:03,120
therefore we have the same issues user

434
00:24:03,120 --> 00:24:05,039
enumeration and online brute forcing

435
00:24:05,039 --> 00:24:09,200
right the answer is

436
00:24:09,200 --> 00:24:13,120
it depends often the proxies of

437
00:24:13,120 --> 00:24:16,559
itsp providers replace with 401

438
00:24:16,559 --> 00:24:19,679
messages for any requested username

439
00:24:19,679 --> 00:24:24,400
so you could not emulate users

440
00:24:24,880 --> 00:24:26,960
and yes this is also the recommendation

441
00:24:26,960 --> 00:24:30,559
for your internship proxy

442
00:24:30,720 --> 00:24:34,640
but what's about online brute force

443
00:24:34,640 --> 00:24:37,679
well if we have no permission of the

444
00:24:37,679 --> 00:24:39,440
provider to pentest this

445
00:24:39,440 --> 00:24:43,840
we cannot do this but in practical

446
00:24:43,840 --> 00:24:46,400
i am very bad in typing complex and long

447
00:24:46,400 --> 00:24:49,360
passwords into hidden password fields

448
00:24:49,360 --> 00:24:51,679
therefore i need many attempts to type

449
00:24:51,679 --> 00:24:54,000
the correct password

450
00:24:54,000 --> 00:24:56,559
and after all my registration attempts

451
00:24:56,559 --> 00:24:57,120
like

452
00:24:57,120 --> 00:25:00,640
about 50 times i am successfully

453
00:25:00,640 --> 00:25:03,279
registered

454
00:25:03,760 --> 00:25:05,919
but seriously there are some zip

455
00:25:05,919 --> 00:25:07,840
trunking providers where online brute

456
00:25:07,840 --> 00:25:08,720
force

457
00:25:08,720 --> 00:25:11,840
attacks are possible

458
00:25:11,840 --> 00:25:14,640
and because the username is usually the

459
00:25:14,640 --> 00:25:15,600
phone number

460
00:25:15,600 --> 00:25:18,000
you can easily find the username on

461
00:25:18,000 --> 00:25:21,679
company's homepage for example

462
00:25:24,559 --> 00:25:26,960
but if we use the static mode the

463
00:25:26,960 --> 00:25:28,080
security depends

464
00:25:28,080 --> 00:25:30,480
on the network rules because you have to

465
00:25:30,480 --> 00:25:33,440
make your support external reachable

466
00:25:33,440 --> 00:25:36,400
so if you miss to configure a white list

467
00:25:36,400 --> 00:25:39,039
of the zip proxy ip addresses of your

468
00:25:39,039 --> 00:25:40,400
provider

469
00:25:40,400 --> 00:25:42,400
you have the same issues as from

470
00:25:42,400 --> 00:25:43,600
internet

471
00:25:43,600 --> 00:25:45,840
so you can annotate users and brute

472
00:25:45,840 --> 00:25:48,799
force passwords

473
00:25:53,600 --> 00:25:56,880
the next things we analyze are mobile

474
00:25:56,880 --> 00:25:59,440
softwares

475
00:26:01,120 --> 00:26:03,520
when we have external softwares we have

476
00:26:03,520 --> 00:26:05,039
external access to

477
00:26:05,039 --> 00:26:08,080
internal services and usually

478
00:26:08,080 --> 00:26:11,440
customers say something like this is not

479
00:26:11,440 --> 00:26:12,559
a problem because

480
00:26:12,559 --> 00:26:15,120
everything is encrypted and we are using

481
00:26:15,120 --> 00:26:17,279
a expensive session border controller to

482
00:26:17,279 --> 00:26:19,360
detect and prevent attacks

483
00:26:19,360 --> 00:26:22,840
and finally keep our internet network

484
00:26:22,840 --> 00:26:25,840
secure

485
00:26:27,520 --> 00:26:30,720
for better understanding how the session

486
00:26:30,720 --> 00:26:32,720
border controller secures your internet

487
00:26:32,720 --> 00:26:34,000
network

488
00:26:34,000 --> 00:26:36,400
i have a screenshot from a session

489
00:26:36,400 --> 00:26:40,480
border controller default configuration

490
00:26:42,080 --> 00:26:44,559
oh yeah we have that very secure

491
00:26:44,559 --> 00:26:46,480
malicious signature database

492
00:26:46,480 --> 00:26:49,120
which protects our internet network from

493
00:26:49,120 --> 00:26:51,120
evil

494
00:26:51,120 --> 00:26:54,880
yeah from evil what user agents

495
00:26:54,880 --> 00:26:58,559
is this secure spoiler

496
00:26:58,559 --> 00:27:02,320
it is not this only protects you from

497
00:27:02,320 --> 00:27:04,720
low level attackers like script kitties

498
00:27:04,720 --> 00:27:09,600
who firing up a kali linux zip tool

499
00:27:10,480 --> 00:27:12,640
do you remember the advantage of biobug

500
00:27:12,640 --> 00:27:14,880
to customize it

501
00:27:14,880 --> 00:27:17,840
so that's what we could do we can change

502
00:27:17,840 --> 00:27:19,520
everything in our zip request

503
00:27:19,520 --> 00:27:22,720
by simply editing editing the file or

504
00:27:22,720 --> 00:27:26,320
using our own request files

505
00:27:26,320 --> 00:27:28,559
at this point i would like to talk about

506
00:27:28,559 --> 00:27:30,960
a pass project

507
00:27:30,960 --> 00:27:32,960
i had this project where i have to

508
00:27:32,960 --> 00:27:34,880
pentest the session border controller

509
00:27:34,880 --> 00:27:37,919
and mobizen phones

510
00:27:38,240 --> 00:27:41,440
finally i was able to eavesdrop calls

511
00:27:41,440 --> 00:27:43,679
initiate and receive them and they

512
00:27:43,679 --> 00:27:46,840
register internet soft

513
00:27:46,840 --> 00:27:49,279
phones and all this

514
00:27:49,279 --> 00:27:52,399
from the public internet

515
00:27:52,399 --> 00:27:55,679
why because the expensive session border

516
00:27:55,679 --> 00:27:57,039
controller implemention

517
00:27:57,039 --> 00:28:00,840
only checked the user agent of zip

518
00:28:00,840 --> 00:28:03,840
requests

519
00:28:06,240 --> 00:28:09,679
okay but what's about

520
00:28:09,679 --> 00:28:13,039
the remote iphones

521
00:28:14,080 --> 00:28:15,919
again we have external access to

522
00:28:15,919 --> 00:28:18,799
internet services

523
00:28:18,799 --> 00:28:20,880
external iphones usually do the

524
00:28:20,880 --> 00:28:22,880
connection with a vpn

525
00:28:22,880 --> 00:28:26,720
or through a reverse proxy

526
00:28:26,720 --> 00:28:30,399
for vpn i often saw installed ipsec

527
00:28:30,399 --> 00:28:34,399
lines directly on the phone

528
00:28:34,399 --> 00:28:36,000
for the connection through a reverse

529
00:28:36,000 --> 00:28:37,440
proxy the phone

530
00:28:37,440 --> 00:28:39,760
optimally should authenticate with its

531
00:28:39,760 --> 00:28:42,080
exclusive client certificate

532
00:28:42,080 --> 00:28:45,120
so the reverse proxy can verify

533
00:28:45,120 --> 00:28:48,799
requests and forward only authenticated

534
00:28:48,799 --> 00:28:52,399
requests to internet services

535
00:28:53,919 --> 00:28:56,799
again let's look at extract of a

536
00:28:56,799 --> 00:28:59,039
documentation or such a reverse proxy

537
00:28:59,039 --> 00:29:02,399
for external defaults

538
00:29:03,360 --> 00:29:05,760
the reverse proxy will validate incoming

539
00:29:05,760 --> 00:29:09,600
registrations against their certificate

540
00:29:09,600 --> 00:29:13,440
alright sounds good

541
00:29:13,440 --> 00:29:17,120
the next sentence is if the certificate

542
00:29:17,120 --> 00:29:17,919
is valid

543
00:29:17,919 --> 00:29:20,480
the registration is forwarded to the pbx

544
00:29:20,480 --> 00:29:23,200
using tls

545
00:29:23,200 --> 00:29:26,640
ok go for it

546
00:29:26,640 --> 00:29:28,880
but the next sentence in this

547
00:29:28,880 --> 00:29:32,559
documentation is the following

548
00:29:33,200 --> 00:29:35,840
if the certificate is not valid or the

549
00:29:35,840 --> 00:29:38,640
incoming registration was sent with tcp

550
00:29:38,640 --> 00:29:42,000
not tls or the check check certificate

551
00:29:42,000 --> 00:29:43,279
check mark is not set

552
00:29:43,279 --> 00:29:48,080
it is forwarded to the pbx using tcp

553
00:29:48,960 --> 00:29:53,600
so what's the actual security function

554
00:29:53,600 --> 00:29:58,879
of this reverse proxy i don't know

555
00:29:59,760 --> 00:30:03,760
the full documentation can be found here

556
00:30:04,640 --> 00:30:08,080
so if you use this reverse proxy with

557
00:30:08,080 --> 00:30:09,120
the recommended

558
00:30:09,120 --> 00:30:11,760
recommended configuration we can attack

559
00:30:11,760 --> 00:30:12,960
internet services

560
00:30:12,960 --> 00:30:16,880
from the public internet

561
00:30:20,720 --> 00:30:24,880
okay so what's left

562
00:30:25,919 --> 00:30:29,279
the confluencing solution

563
00:30:30,720 --> 00:30:32,880
at this point i will not go too much

564
00:30:32,880 --> 00:30:35,039
into details of webrtc

565
00:30:35,039 --> 00:30:37,200
interactive connectivity establishment

566
00:30:37,200 --> 00:30:39,279
and conferencing units

567
00:30:39,279 --> 00:30:42,320
but important to know is that

568
00:30:42,320 --> 00:30:46,080
it was agreed to use srtp dtls

569
00:30:46,080 --> 00:30:49,520
in webrtc so this is

570
00:30:49,520 --> 00:30:51,760
another method to exchange the key for

571
00:30:51,760 --> 00:30:54,399
encryption

572
00:30:55,120 --> 00:30:58,320
by using dtl as the endpoints exchanging

573
00:30:58,320 --> 00:30:59,760
the is key

574
00:30:59,760 --> 00:31:02,320
for encryption in the dtls channel which

575
00:31:02,320 --> 00:31:02,880
is like

576
00:31:02,880 --> 00:31:07,519
tls for udp and to verify the identity

577
00:31:07,519 --> 00:31:08,720
of the upside

578
00:31:08,720 --> 00:31:11,120
they're sending the fingerprint of their

579
00:31:11,120 --> 00:31:14,559
certificate in the signaling stream

580
00:31:14,559 --> 00:31:17,440
so if the received fingerprint matched

581
00:31:17,440 --> 00:31:18,080
the one

582
00:31:18,080 --> 00:31:20,480
which is present in the dtls channel the

583
00:31:20,480 --> 00:31:23,840
connection may be secure

584
00:31:23,919 --> 00:31:26,640
the advantage of this is that the

585
00:31:26,640 --> 00:31:28,880
conference server do not know

586
00:31:28,880 --> 00:31:33,120
the key for media encryption

587
00:31:33,120 --> 00:31:35,200
it is not really end-to-end encrypted

588
00:31:35,200 --> 00:31:37,120
but i think it is better than

589
00:31:37,120 --> 00:31:41,039
srgb sds where everybody knows the exact

590
00:31:41,039 --> 00:31:43,279
key

591
00:31:45,760 --> 00:31:47,840
before we started demo there is much

592
00:31:47,840 --> 00:31:49,760
more to talk about conferencing and

593
00:31:49,760 --> 00:31:50,960
webrtc

594
00:31:50,960 --> 00:31:54,320
so if you want to know how it works

595
00:31:54,320 --> 00:31:56,720
and how secure this is read my

596
00:31:56,720 --> 00:31:59,840
publication about conferencing analysis

597
00:31:59,840 --> 00:32:03,840
it's available on our home page

598
00:32:07,039 --> 00:32:11,840
ok now it's time for the demo

599
00:32:12,320 --> 00:32:15,039
for webrtc analysis we can use the

600
00:32:15,039 --> 00:32:17,519
built-in tools of modern browsers

601
00:32:17,519 --> 00:32:22,240
for chrome it is webrtc internals

602
00:32:22,960 --> 00:32:25,279
so now let's see what's happened if we

603
00:32:25,279 --> 00:32:27,840
receive a point-point call in microsoft

604
00:32:27,840 --> 00:32:30,158
teams

605
00:32:31,919 --> 00:32:34,559
there it is

606
00:32:38,640 --> 00:32:42,080
then we have a new object which stores

607
00:32:42,080 --> 00:32:44,080
the attributes and parameters of this

608
00:32:44,080 --> 00:32:45,840
session

609
00:32:45,840 --> 00:32:47,440
and when we look in the remote

610
00:32:47,440 --> 00:32:49,600
description we can see there is a

611
00:32:49,600 --> 00:32:52,720
fingerprint of the opposite certificate

612
00:32:52,720 --> 00:32:56,080
so we can verify the identity

613
00:32:56,080 --> 00:33:00,158
and also the same for the video stream

614
00:33:01,919 --> 00:33:04,000
similar to the remote description we can

615
00:33:04,000 --> 00:33:05,679
find our own fingerprint of the

616
00:33:05,679 --> 00:33:09,679
certificate in our local description

617
00:33:09,679 --> 00:33:12,000
and finally we can see the audio

618
00:33:12,000 --> 00:33:12,720
transport

619
00:33:12,720 --> 00:33:15,440
that the audio stream is encrypted via

620
00:33:15,440 --> 00:33:17,919
ies

621
00:33:21,519 --> 00:33:25,600
but what's going on in a conference

622
00:33:25,600 --> 00:33:28,719
in microsoft teams

623
00:33:31,120 --> 00:33:39,840
so i have to set up a quick conference

624
00:33:47,760 --> 00:33:52,720
and yes i can join it

625
00:33:52,720 --> 00:33:56,320
now we are in the conference

626
00:33:56,559 --> 00:34:00,559
and again we check the session object

627
00:34:01,679 --> 00:34:05,200
and yes what's that

628
00:34:05,200 --> 00:34:08,639
it is the crypto attribute for

629
00:34:08,639 --> 00:34:12,480
srtp sds yes we also have that

630
00:34:12,480 --> 00:34:14,320
fingerprint in our description but

631
00:34:14,320 --> 00:34:16,079
what's going on with the

632
00:34:16,079 --> 00:34:19,119
encryption which

633
00:34:19,119 --> 00:34:22,240
method will be used

634
00:34:23,760 --> 00:34:25,839
and as we can see in the local

635
00:34:25,839 --> 00:34:27,679
description there is also the crypto

636
00:34:27,679 --> 00:34:30,159
attribute

637
00:34:30,159 --> 00:34:35,839
and now fingerprint here

638
00:34:38,960 --> 00:34:42,000
in the audio transport we also not see

639
00:34:42,000 --> 00:34:44,879
the cipher for srtp

640
00:34:44,879 --> 00:34:48,399
so the answer is in this conference the

641
00:34:48,399 --> 00:34:49,839
encryption is done with

642
00:34:49,839 --> 00:34:53,280
srtp sds which means

643
00:34:53,280 --> 00:34:55,760
we are sending the key to microsoft in

644
00:34:55,760 --> 00:34:58,960
clear and microsoft server sends it

645
00:34:58,960 --> 00:35:03,839
to the rtp endpoint

646
00:35:05,280 --> 00:35:10,000
okay let's have a closer look at that

647
00:35:15,200 --> 00:35:18,560
i set up burp suite as an http proxy so

648
00:35:18,560 --> 00:35:21,759
we can see the traffic

649
00:35:25,680 --> 00:35:31,839
and again we are joining conference

650
00:35:33,920 --> 00:35:36,560
there it is

651
00:35:38,960 --> 00:35:45,839
okay now let's check the http traffic

652
00:35:48,960 --> 00:35:51,359
there we have the crypto attributes in a

653
00:35:51,359 --> 00:35:59,359
post request

654
00:35:59,359 --> 00:36:01,280
let's have a look where this key is

655
00:36:01,280 --> 00:36:12,480
going to

656
00:36:12,480 --> 00:36:15,200
so the key is going to this external ip

657
00:36:15,200 --> 00:36:16,000
address of

658
00:36:16,000 --> 00:36:19,280
microsoft but

659
00:36:19,280 --> 00:36:22,400
if we check wireshark we can see the

660
00:36:22,400 --> 00:36:23,280
audio stream

661
00:36:23,280 --> 00:36:27,839
is going to another external ip address

662
00:36:33,119 --> 00:36:36,160
summarize this means we are sending the

663
00:36:36,160 --> 00:36:38,240
clear ies key

664
00:36:38,240 --> 00:36:41,200
for rtp encryption to external microsoft

665
00:36:41,200 --> 00:36:42,800
server

666
00:36:42,800 --> 00:36:45,280
and this server sends the key to another

667
00:36:45,280 --> 00:36:47,119
external microsoft server

668
00:36:47,119 --> 00:36:50,640
which is our rtp endpoint

669
00:36:50,640 --> 00:36:53,119
so this is really not end to and

670
00:36:53,119 --> 00:36:55,839
encrypted

671
00:36:56,560 --> 00:37:00,000
and do you remember

672
00:37:00,400 --> 00:37:02,800
a similar story about sending keys

673
00:37:02,800 --> 00:37:05,760
around the world this year

674
00:37:05,760 --> 00:37:07,520
soon was in the headlines this year

675
00:37:07,520 --> 00:37:10,560
because of this problem

676
00:37:10,560 --> 00:37:12,960
so we have this similar issue in

677
00:37:12,960 --> 00:37:15,599
microsoft teams right

678
00:37:15,599 --> 00:37:23,839
just think about it

679
00:37:25,760 --> 00:37:27,520
now we come to the conclusion and

680
00:37:27,520 --> 00:37:30,240
recommendation

681
00:37:31,200 --> 00:37:33,359
voice over ip and unified communication

682
00:37:33,359 --> 00:37:35,440
means not just

683
00:37:35,440 --> 00:37:40,079
have few ip phones in our network

684
00:37:40,880 --> 00:37:43,680
do not trust the encryption which means

685
00:37:43,680 --> 00:37:45,200
manufacturer often

686
00:37:45,200 --> 00:37:48,839
deplo developing in a just works

687
00:37:48,839 --> 00:37:51,680
principle

688
00:37:51,680 --> 00:37:54,000
think twice if you follow manufacturer

689
00:37:54,000 --> 00:37:56,880
documentations

690
00:37:57,760 --> 00:37:59,440
include voiceover ip and unify

691
00:37:59,440 --> 00:38:01,599
communication components in your

692
00:38:01,599 --> 00:38:05,839
it security concept

693
00:38:06,400 --> 00:38:08,800
two voiceover ip and unify communication

694
00:38:08,800 --> 00:38:11,760
penetration tests

695
00:38:12,640 --> 00:38:15,920
and as joe mcrae said in his talk

696
00:38:15,920 --> 00:38:18,960
at the activity 2012

697
00:38:18,960 --> 00:38:21,599
smart people defend your networks

698
00:38:21,599 --> 00:38:22,400
products

699
00:38:22,400 --> 00:38:25,440
do not defend your networks

700
00:38:25,440 --> 00:38:28,079
and just to get sure the problems and

701
00:38:28,079 --> 00:38:30,480
security issues we attacked in this talk

702
00:38:30,480 --> 00:38:34,000
are not new vulnerabilities itself

703
00:38:34,000 --> 00:38:36,960
this is just the result of insecure

704
00:38:36,960 --> 00:38:38,240
configurations and

705
00:38:38,240 --> 00:38:41,200
implementations and finally my daily

706
00:38:41,200 --> 00:38:47,040
work as a penetration tester

707
00:38:47,040 --> 00:38:49,760
so thank you everybody for your

708
00:38:49,760 --> 00:38:50,720
attention

709
00:38:50,720 --> 00:38:53,200
and if you're interested in more or just

710
00:38:53,200 --> 00:38:54,880
want to talk about voiceover ip and

711
00:38:54,880 --> 00:38:57,359
unified communication security

712
00:38:57,359 --> 00:39:01,839
you can contact me here

