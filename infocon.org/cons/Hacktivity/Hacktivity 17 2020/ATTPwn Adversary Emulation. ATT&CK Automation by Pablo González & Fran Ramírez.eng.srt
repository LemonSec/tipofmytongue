1
00:00:08,320 --> 00:00:09,200
hello

2
00:00:09,200 --> 00:00:11,920
my name is paolo gonzalez and this is my

3
00:00:11,920 --> 00:00:13,679
colleagues from ramirez

4
00:00:13,679 --> 00:00:16,239
we are proud to introduce the atv pound

5
00:00:16,239 --> 00:00:18,160
adversarial emulation and offensive

6
00:00:18,160 --> 00:00:21,039
technics collaborative project

7
00:00:21,039 --> 00:00:23,680
we are proud to be at activities this

8
00:00:23,680 --> 00:00:24,640
year

9
00:00:24,640 --> 00:00:27,760
besides we like very much the fmc part

10
00:00:27,760 --> 00:00:32,000
and that's why we bring a tool call it

11
00:00:32,000 --> 00:00:34,640
80-pound which helps to perform the

12
00:00:34,640 --> 00:00:36,800
emulation of aversaries

13
00:00:36,800 --> 00:00:39,040
also we want to tell you about the

14
00:00:39,040 --> 00:00:40,239
collaborative side of

15
00:00:40,239 --> 00:00:44,079
drawing first of all let's introduce

16
00:00:44,079 --> 00:00:47,600
ourselves i am paulo phaleth i work at

17
00:00:47,600 --> 00:00:49,600
telefonica in spain in april innovation

18
00:00:49,600 --> 00:00:50,480
department

19
00:00:50,480 --> 00:00:52,960
where we are very lucky to play with

20
00:00:52,960 --> 00:00:54,399
cyber security and artificial

21
00:00:54,399 --> 00:00:56,160
intelligence

22
00:00:56,160 --> 00:00:58,719
we will develop several open source

23
00:00:58,719 --> 00:00:59,280
tools

24
00:00:59,280 --> 00:01:02,800
a year and try to contribute with crazy

25
00:01:02,800 --> 00:01:03,760
ideas

26
00:01:03,760 --> 00:01:07,200
i am mvp of microsoft

27
00:01:07,200 --> 00:01:10,880
science since 2017

28
00:01:10,880 --> 00:01:13,520
i have written some books in spanish

29
00:01:13,520 --> 00:01:15,040
about cyber security

30
00:01:15,040 --> 00:01:17,200
and i am a teacher at several

31
00:01:17,200 --> 00:01:18,240
universities in

32
00:01:18,240 --> 00:01:21,600
spain well my partner

33
00:01:21,600 --> 00:01:24,320
fran ramirez works with me at telefonica

34
00:01:24,320 --> 00:01:25,040
in the same

35
00:01:25,040 --> 00:01:27,280
industrial department focusing on social

36
00:01:27,280 --> 00:01:29,439
security and machine learning projects

37
00:01:29,439 --> 00:01:32,479
he has worked several years in the usa

38
00:01:32,479 --> 00:01:35,759
as a senior assistant administrator has

39
00:01:35,759 --> 00:01:36,479
writing

40
00:01:36,479 --> 00:01:39,119
some books about docker and machine

41
00:01:39,119 --> 00:01:40,640
learning

42
00:01:40,640 --> 00:01:43,759
before we discuss the tool and shows the

43
00:01:43,759 --> 00:01:45,840
use cases first card

44
00:01:45,840 --> 00:01:54,159
let's have a look at mitre 80 and ziki

45
00:01:54,159 --> 00:01:56,399
the emulation of adversaries has become

46
00:01:56,399 --> 00:01:58,719
extremely important directing work

47
00:01:58,719 --> 00:02:01,360
it's an exercise that provides a glimpse

48
00:02:01,360 --> 00:02:03,840
into the potential for a real threat

49
00:02:03,840 --> 00:02:06,719
like many others that both business and

50
00:02:06,719 --> 00:02:08,720
society have experienced

51
00:02:08,720 --> 00:02:12,000
to affect an organization the goal is to

52
00:02:12,000 --> 00:02:13,360
be capable capable

53
00:02:13,360 --> 00:02:15,920
of verifying if the organization control

54
00:02:15,920 --> 00:02:17,680
are efficient and effective

55
00:02:17,680 --> 00:02:19,840
by detecting the threats or displaying

56
00:02:19,840 --> 00:02:21,040
what new weakness

57
00:02:21,040 --> 00:02:25,040
in response to them the purpose of a red

58
00:02:25,040 --> 00:02:27,280
team exercise are the following

59
00:02:27,280 --> 00:02:29,760
demonstration of the exposure run risk

60
00:02:29,760 --> 00:02:30,560
level

61
00:02:30,560 --> 00:02:32,319
demonstration of the business impact

62
00:02:32,319 --> 00:02:34,000
demonstration of the prevention

63
00:02:34,000 --> 00:02:35,840
capabilities demonstration of the

64
00:02:35,840 --> 00:02:37,280
detection capabilities

65
00:02:37,280 --> 00:02:39,360
demonstration of the capabilities of

66
00:02:39,360 --> 00:02:40,319
reacting or

67
00:02:40,319 --> 00:02:43,760
addressing incidents now we are going to

68
00:02:43,760 --> 00:02:44,560
speak about

69
00:02:44,560 --> 00:02:48,560
hdmc mitre identity is a database

70
00:02:48,560 --> 00:02:50,080
containing the most common

71
00:02:50,080 --> 00:02:52,480
techniques tactics and methods being

72
00:02:52,480 --> 00:02:53,120
used

73
00:02:53,120 --> 00:02:56,160
by attackers tactics are the high level

74
00:02:56,160 --> 00:02:56,800
vectors of

75
00:02:56,800 --> 00:02:59,519
attack and the techniques represent

76
00:02:59,519 --> 00:03:01,760
implementation of methods of attack

77
00:03:01,760 --> 00:03:03,840
the organizations can perform an

78
00:03:03,840 --> 00:03:05,440
adversarial emulation and keep

79
00:03:05,440 --> 00:03:07,680
mapping the security controls that are

80
00:03:07,680 --> 00:03:09,200
applied to techniques

81
00:03:09,200 --> 00:03:11,840
organizations can also have several

82
00:03:11,840 --> 00:03:13,280
security controls related

83
00:03:13,280 --> 00:03:16,319
to a giving technique the goal is to

84
00:03:16,319 --> 00:03:18,560
verify the performance and efficiency

85
00:03:18,560 --> 00:03:20,720
as regards the security control by

86
00:03:20,720 --> 00:03:22,560
technics implemented

87
00:03:22,560 --> 00:03:26,000
and the metered tnc key framework

88
00:03:26,000 --> 00:03:29,680
that i takes on the security bridge to

89
00:03:29,680 --> 00:03:32,319
so the starting point is the original

90
00:03:32,319 --> 00:03:33,599
intrusion tactic

91
00:03:33,599 --> 00:03:35,920
any activity that has been previously

92
00:03:35,920 --> 00:03:37,440
carried out

93
00:03:37,440 --> 00:03:40,239
will be covered by a framework called

94
00:03:40,239 --> 00:03:41,040
pre

95
00:03:41,040 --> 00:03:46,239
pre detensive

96
00:03:46,239 --> 00:03:49,360
now let's find out more about the

97
00:03:49,360 --> 00:03:50,239
rebound

98
00:03:50,239 --> 00:03:52,000
edit the bound is a computer security

99
00:03:52,000 --> 00:03:53,760
tool designed to emulate

100
00:03:53,760 --> 00:03:56,080
other sites the tool aims to bring

101
00:03:56,080 --> 00:03:58,319
emulation of a real threat into closer

102
00:03:58,319 --> 00:04:00,799
contact with implementation based on

103
00:04:00,799 --> 00:04:02,400
the techniques and tactics from the

104
00:04:02,400 --> 00:04:04,560
meteorite in cqe framework

105
00:04:04,560 --> 00:04:07,200
the goal is to simulate how a threat

106
00:04:07,200 --> 00:04:07,680
works

107
00:04:07,680 --> 00:04:10,799
in an intrusion scenario where the

108
00:04:10,799 --> 00:04:11,280
threat

109
00:04:11,280 --> 00:04:14,400
has been successfully deployed

110
00:04:14,400 --> 00:04:16,798
its focus on microsoft windows systems

111
00:04:16,798 --> 00:04:18,238
through the use of the powershell

112
00:04:18,238 --> 00:04:19,358
command line

113
00:04:19,358 --> 00:04:21,519
this enables the different techniques

114
00:04:21,519 --> 00:04:24,560
based on meter ethnicity to be applied

115
00:04:24,560 --> 00:04:27,040
httpound is designed to allow the

116
00:04:27,040 --> 00:04:28,800
evolution of our service as for our

117
00:04:28,800 --> 00:04:31,280
retina society fund to verify the

118
00:04:31,280 --> 00:04:33,840
effective effectiveness and efficiency

119
00:04:33,840 --> 00:04:35,600
of the organization contract

120
00:04:35,600 --> 00:04:39,040
in the face of a real threat what is the

121
00:04:39,040 --> 00:04:39,759
atd bank

122
00:04:39,759 --> 00:04:43,440
core power cell okay a power cell is

123
00:04:43,440 --> 00:04:46,720
released along with microsoft microsoft

124
00:04:46,720 --> 00:04:48,560
windows vista

125
00:04:48,560 --> 00:04:51,440
it's not natively embedded in the

126
00:04:51,440 --> 00:04:53,199
operating system which

127
00:04:53,199 --> 00:04:56,560
makes it very interesting for both its

128
00:04:56,560 --> 00:04:59,040
itn administration military and

129
00:04:59,040 --> 00:05:00,320
pentester

130
00:05:00,320 --> 00:05:04,000
its new version includes a large

131
00:05:04,000 --> 00:05:06,479
number of the of new features and models

132
00:05:06,479 --> 00:05:07,759
that will help

133
00:05:07,759 --> 00:05:10,560
to integrate interest in with the

134
00:05:10,560 --> 00:05:12,080
operating system

135
00:05:12,080 --> 00:05:17,520
and its many tools and

136
00:05:17,520 --> 00:05:20,759
first version was released in

137
00:05:20,759 --> 00:05:25,520
26. the first stable version okay

138
00:05:25,520 --> 00:05:29,120
two version appeared in 29

139
00:05:29,120 --> 00:05:32,479
with the release of windows 7

140
00:05:32,479 --> 00:05:37,840
version 3 appeared in 2012

141
00:05:37,840 --> 00:05:41,280
with release of windows 8 and

142
00:05:41,280 --> 00:05:44,639
later and the last version

143
00:05:44,639 --> 00:05:48,160
version 7 appeared in the year

144
00:05:48,160 --> 00:05:53,520
year of 2020

145
00:05:53,520 --> 00:05:56,000
the idea underlying entity bound to link

146
00:05:56,000 --> 00:05:57,919
the meteorite lcd framework

147
00:05:57,919 --> 00:05:59,520
along with the techniques that are

148
00:05:59,520 --> 00:06:01,360
implemented via the microsoft windows

149
00:06:01,360 --> 00:06:03,120
powershell command line

150
00:06:03,120 --> 00:06:05,440
the many techniques implemented to using

151
00:06:05,440 --> 00:06:06,240
powershell

152
00:06:06,240 --> 00:06:09,919
support a high percentage of techniques

153
00:06:09,919 --> 00:06:10,960
laced

154
00:06:10,960 --> 00:06:13,759
in the editing schematics that can be

155
00:06:13,759 --> 00:06:14,479
replaced

156
00:06:14,479 --> 00:06:17,919
replicated the project is also provative

157
00:06:17,919 --> 00:06:21,199
it means that the user can have

158
00:06:21,199 --> 00:06:24,400
his initial knowledge base based

159
00:06:24,400 --> 00:06:28,560
on 80 tnc key but can import new

160
00:06:28,560 --> 00:06:31,759
implementations of the techniques using

161
00:06:31,759 --> 00:06:34,720
powershell and relaunch them using the

162
00:06:34,720 --> 00:06:37,440
techniques and tactics in the file

163
00:06:37,440 --> 00:06:40,240
we have used json format files to export

164
00:06:40,240 --> 00:06:41,840
this new call knowledge

165
00:06:41,840 --> 00:06:44,880
and import it in other environments

166
00:06:44,880 --> 00:06:47,759
where hd pawn has been deployed in this

167
00:06:47,759 --> 00:06:48,080
way

168
00:06:48,080 --> 00:06:50,560
the cooperative knowledge has become

169
00:06:50,560 --> 00:06:52,319
very significant

170
00:06:52,319 --> 00:06:55,919
this facilities multiple users to

171
00:06:55,919 --> 00:06:57,919
serve knowledge between several

172
00:06:57,919 --> 00:06:58,960
environments

173
00:06:58,960 --> 00:07:01,759
the technical dynamic elements that are

174
00:07:01,759 --> 00:07:02,400
emerging

175
00:07:02,400 --> 00:07:04,080
through the evolution of offensive

176
00:07:04,080 --> 00:07:06,560
security

177
00:07:06,560 --> 00:07:08,720
now my colleagues from ramirez is going

178
00:07:08,720 --> 00:07:09,759
to give

179
00:07:09,759 --> 00:07:14,160
you little insight into attp

180
00:07:14,800 --> 00:07:17,280
hello everyone first of all i want to

181
00:07:17,280 --> 00:07:18,000
say that

182
00:07:18,000 --> 00:07:20,960
it is an honor for us to be again at the

183
00:07:20,960 --> 00:07:22,319
awesome activity

184
00:07:22,319 --> 00:07:25,840
for one more year okay so now

185
00:07:25,840 --> 00:07:28,160
let's see what the architecture of att

186
00:07:28,160 --> 00:07:31,199
pound looks like

187
00:07:31,199 --> 00:07:35,919
http has three main different components

188
00:07:35,919 --> 00:07:39,520
the first one is the console that is the

189
00:07:39,520 --> 00:07:40,880
power cell code

190
00:07:40,880 --> 00:07:43,039
that will be running on the windows

191
00:07:43,039 --> 00:07:46,800
machines emulating the treat

192
00:07:47,680 --> 00:07:50,639
after this code is executed on windows

193
00:07:50,639 --> 00:07:51,520
machines

194
00:07:51,520 --> 00:07:53,680
it connects towards a command and

195
00:07:53,680 --> 00:07:54,639
control and

196
00:07:54,639 --> 00:07:57,199
it waits for the adversary's commands to

197
00:07:57,199 --> 00:07:59,840
be emulated

198
00:08:00,479 --> 00:08:04,160
the second one are the functions

199
00:08:04,160 --> 00:08:06,479
these are the technical implementations

200
00:08:06,479 --> 00:08:07,199
that are

201
00:08:07,199 --> 00:08:12,000
mapped in mitre att and ck

202
00:08:12,000 --> 00:08:14,879
this is interesting since any user can

203
00:08:14,879 --> 00:08:15,520
create

204
00:08:15,520 --> 00:08:20,319
their functions written in powershell

205
00:08:20,319 --> 00:08:23,120
this makes http collaborative and a

206
00:08:23,120 --> 00:08:24,879
project where any user

207
00:08:24,879 --> 00:08:27,759
can contribute with their knowledge in

208
00:08:27,759 --> 00:08:29,360
the form of technical

209
00:08:29,360 --> 00:08:33,360
implementations all the functions will

210
00:08:33,360 --> 00:08:34,719
be carried out

211
00:08:34,719 --> 00:08:37,279
by the console when it is executed

212
00:08:37,279 --> 00:08:41,838
through windows machines

213
00:08:42,000 --> 00:08:43,519
and the last one is the command and

214
00:08:43,519 --> 00:08:45,120
control mvc or

215
00:08:45,120 --> 00:08:50,800
c2 this is the att bound control panel

216
00:08:50,800 --> 00:08:53,200
from this panel you can set up the treat

217
00:08:53,200 --> 00:08:57,360
or adversary to be emulated

218
00:08:58,480 --> 00:09:01,040
you can use already preset up treats or

219
00:09:01,040 --> 00:09:02,240
you can build you

220
00:09:02,240 --> 00:09:08,399
treat or test

221
00:09:08,399 --> 00:09:10,720
the tool's knowledge can be imported and

222
00:09:10,720 --> 00:09:11,600
exported

223
00:09:11,600 --> 00:09:13,920
from this panel since the user can

224
00:09:13,920 --> 00:09:15,200
create his content

225
00:09:15,200 --> 00:09:17,279
in the form of an implementation of a

226
00:09:17,279 --> 00:09:22,720
technique in powershell

227
00:09:22,720 --> 00:09:25,279
in other words a basic architecture

228
00:09:25,279 --> 00:09:25,760
scheme

229
00:09:25,760 --> 00:09:27,839
has two main elements from the

230
00:09:27,839 --> 00:09:28,800
networking

231
00:09:28,800 --> 00:09:32,080
point of view the first

232
00:09:32,080 --> 00:09:35,200
is the agent or warrior is

233
00:09:35,200 --> 00:09:38,640
the adversarial emulation and its code

234
00:09:38,640 --> 00:09:42,000
is in powershell

235
00:09:43,120 --> 00:09:45,200
the second one is the root node or

236
00:09:45,200 --> 00:09:47,600
command control

237
00:09:47,600 --> 00:09:50,000
from this web application it is possible

238
00:09:50,000 --> 00:09:50,720
to manage

239
00:09:50,720 --> 00:09:53,279
the application of the cheat to be

240
00:09:53,279 --> 00:09:55,519
simulated by the different deployed

241
00:09:55,519 --> 00:09:59,040
warriors also you can manage

242
00:09:59,040 --> 00:10:01,360
the results of the emulation and make

243
00:10:01,360 --> 00:10:02,079
decisions

244
00:10:02,079 --> 00:10:05,360
about the controls

245
00:10:05,360 --> 00:10:07,200
everything is fully connected with the

246
00:10:07,200 --> 00:10:09,040
identifiers of the entity

247
00:10:09,040 --> 00:10:12,480
and ck metrics

248
00:10:13,839 --> 00:10:16,000
again from the networking point of view

249
00:10:16,000 --> 00:10:17,920
the deployment of warriors over the

250
00:10:17,920 --> 00:10:20,079
network will be accomplished

251
00:10:20,079 --> 00:10:22,720
through different options remote

252
00:10:22,720 --> 00:10:24,720
invocation through the network privilege

253
00:10:24,720 --> 00:10:26,560
invocation of remote machine without

254
00:10:26,560 --> 00:10:30,479
privilege local invocation

255
00:10:30,839 --> 00:10:33,200
etc

256
00:10:33,200 --> 00:10:35,680
it is recommendable not to include more

257
00:10:35,680 --> 00:10:38,800
than 10 or 15 computers in this process

258
00:10:38,800 --> 00:10:46,000
as indicated by the att and ck

259
00:10:46,000 --> 00:10:49,120
these exercises are simulation but you

260
00:10:49,120 --> 00:10:49,600
must

261
00:10:49,600 --> 00:10:52,720
have a real as possible environment for

262
00:10:52,720 --> 00:10:56,000
better results

263
00:10:58,480 --> 00:11:00,399
okay and now let's talk about the

264
00:11:00,399 --> 00:11:03,440
operational flows

265
00:11:05,279 --> 00:11:07,279
these are the different flows between

266
00:11:07,279 --> 00:11:08,880
the console or agent

267
00:11:08,880 --> 00:11:14,320
and the entitybound command and control

268
00:11:14,320 --> 00:11:17,440
the first flow is the connection flow

269
00:11:17,440 --> 00:11:19,440
when a console is running on a windows

270
00:11:19,440 --> 00:11:20,480
machine it

271
00:11:20,480 --> 00:11:24,000
sends a high command

272
00:11:25,600 --> 00:11:27,839
when the console is running it gathers

273
00:11:27,839 --> 00:11:29,440
information from the machine

274
00:11:29,440 --> 00:11:32,640
and then pass it on the control panel

275
00:11:32,640 --> 00:11:35,760
through this packet

276
00:11:38,560 --> 00:11:40,720
during the wire generation the ip

277
00:11:40,720 --> 00:11:42,240
address to be connected

278
00:11:42,240 --> 00:11:45,519
must be specified

279
00:11:45,839 --> 00:11:49,519
but this is discussed further below

280
00:11:50,320 --> 00:11:53,040
when the warrior needs to register as a

281
00:11:53,040 --> 00:11:53,920
compromised

282
00:11:53,920 --> 00:11:57,200
computer it sends a request

283
00:11:57,200 --> 00:12:00,399
through the http pos method

284
00:12:00,399 --> 00:12:04,160
of the root node stating the wire id

285
00:12:04,160 --> 00:12:06,240
and they collect the information from

286
00:12:06,240 --> 00:12:11,200
the computer

287
00:12:11,200 --> 00:12:13,680
when this information is received by the

288
00:12:13,680 --> 00:12:15,040
root node

289
00:12:15,040 --> 00:12:17,279
the data will be stored into the

290
00:12:17,279 --> 00:12:18,079
database

291
00:12:18,079 --> 00:12:22,320
and will be made available for the user

292
00:12:22,320 --> 00:12:25,040
that is in order to assign the plan set

293
00:12:25,040 --> 00:12:25,760
in a treat

294
00:12:25,760 --> 00:12:29,920
and perform its execution

295
00:12:30,800 --> 00:12:33,040
when all this information reach the

296
00:12:33,040 --> 00:12:34,320
command and control

297
00:12:34,320 --> 00:12:37,200
it saves the information into a database

298
00:12:37,200 --> 00:12:38,000
and sends

299
00:12:38,000 --> 00:12:41,360
an ok signal

300
00:12:41,760 --> 00:12:43,760
the second flow refers to the

301
00:12:43,760 --> 00:12:45,040
adversarial planning

302
00:12:45,040 --> 00:12:48,639
and execution process

303
00:12:48,639 --> 00:12:51,279
the console or agent will ask for

304
00:12:51,279 --> 00:12:52,079
information

305
00:12:52,079 --> 00:12:56,240
about the treat plan to be performed

306
00:12:56,240 --> 00:12:58,720
if the user has not created acid plan

307
00:12:58,720 --> 00:13:00,160
for that console

308
00:13:00,160 --> 00:13:04,240
the answer will be no treat plan

309
00:13:04,240 --> 00:13:06,240
when there is already a treat plan

310
00:13:06,240 --> 00:13:08,000
created for that console

311
00:13:08,000 --> 00:13:11,279
an ok signal will be sent

312
00:13:11,279 --> 00:13:13,920
later the console will start asking for

313
00:13:13,920 --> 00:13:14,880
the functions that

314
00:13:14,880 --> 00:13:18,480
are part of the trig plan

315
00:13:19,040 --> 00:13:22,000
for its function downloaded and executed

316
00:13:22,000 --> 00:13:24,000
the results will be reported to the

317
00:13:24,000 --> 00:13:24,480
command

318
00:13:24,480 --> 00:13:27,200
and control

319
00:13:28,720 --> 00:13:31,200
in other words when the warrior connects

320
00:13:31,200 --> 00:13:32,320
to etpound

321
00:13:32,320 --> 00:13:35,279
it requests a new treat plan through the

322
00:13:35,279 --> 00:13:38,399
get plan function

323
00:13:39,120 --> 00:13:41,600
if the user has assigned already any

324
00:13:41,600 --> 00:13:42,160
plan

325
00:13:42,160 --> 00:13:44,959
to the warrior it answer okay and the

326
00:13:44,959 --> 00:13:48,240
threat plan will be delivered

327
00:13:48,240 --> 00:13:51,680
this plan is generated in a json

328
00:13:51,680 --> 00:13:55,839
format more details about this file will

329
00:13:55,839 --> 00:13:56,079
be

330
00:13:56,079 --> 00:13:59,839
provided later once statute plan

331
00:13:59,839 --> 00:14:02,720
is available for the warrior it will

332
00:14:02,720 --> 00:14:03,519
perform

333
00:14:03,519 --> 00:14:06,160
the request of its function or task to

334
00:14:06,160 --> 00:14:08,800
be accomplished

335
00:14:08,800 --> 00:14:11,040
this is made through the get task

336
00:14:11,040 --> 00:14:13,519
function

337
00:14:13,519 --> 00:14:16,639
a get task function will be run for its

338
00:14:16,639 --> 00:14:17,199
technique

339
00:14:17,199 --> 00:14:19,680
implementation that the warrior requires

340
00:14:19,680 --> 00:14:20,720
to be performed

341
00:14:20,720 --> 00:14:25,519
in order to fulfill the trade plan

342
00:14:26,880 --> 00:14:29,760
for x prior run two values will be

343
00:14:29,760 --> 00:14:30,480
returned

344
00:14:30,480 --> 00:14:34,560
through the put result function

345
00:14:34,560 --> 00:14:38,240
the first one whether or not the adtck

346
00:14:38,240 --> 00:14:42,800
technique has been executed successfully

347
00:14:43,040 --> 00:14:45,839
in the second case we get the output

348
00:14:45,839 --> 00:14:46,880
from the function

349
00:14:46,880 --> 00:14:50,000
that implements the return technique

350
00:14:50,000 --> 00:14:52,000
ready for a technical review that can

351
00:14:52,000 --> 00:14:54,480
check the results

352
00:14:54,480 --> 00:14:57,040
okay and now the third flow is the sign

353
00:14:57,040 --> 00:14:59,279
out flow

354
00:14:59,279 --> 00:15:01,120
after all the techniques have been

355
00:15:01,120 --> 00:15:03,680
performed the communication close and

356
00:15:03,680 --> 00:15:07,120
the threat emulation is finished

357
00:15:07,120 --> 00:15:13,839
so the console will send the by command

358
00:15:13,839 --> 00:15:17,120
therefore the root note will also

359
00:15:17,120 --> 00:15:20,560
assume the warrior as dead if it does

360
00:15:20,560 --> 00:15:21,440
not report

361
00:15:21,440 --> 00:15:24,959
any activity for a long period of time

362
00:15:24,959 --> 00:15:27,440
in the other side the warrior will show

363
00:15:27,440 --> 00:15:28,480
activity if

364
00:15:28,480 --> 00:15:30,959
before a treat plan is associated the

365
00:15:30,959 --> 00:15:41,839
warrior is requesting a plan

366
00:15:42,320 --> 00:15:44,560
now let's talk about some key elements

367
00:15:44,560 --> 00:15:45,680
in the http

368
00:15:45,680 --> 00:15:48,639
to go a little deeper console the

369
00:15:48,639 --> 00:15:49,279
console

370
00:15:49,279 --> 00:15:51,279
will be created from the web cli

371
00:15:51,279 --> 00:15:53,040
application specifying

372
00:15:53,040 --> 00:15:55,519
the ip address from where the console

373
00:15:55,519 --> 00:15:56,240
file

374
00:15:56,240 --> 00:15:59,680
will be downloaded there there is a

375
00:15:59,680 --> 00:16:02,480
file called cultural template that

376
00:16:02,480 --> 00:16:03,040
houses

377
00:16:03,040 --> 00:16:06,160
the instructions that will manage

378
00:16:06,160 --> 00:16:08,959
the connection the threat plan and the

379
00:16:08,959 --> 00:16:10,639
connection clause will mention it

380
00:16:10,639 --> 00:16:13,279
in the previous section uh when the

381
00:16:13,279 --> 00:16:14,399
instruction provided

382
00:16:14,399 --> 00:16:17,440
is being executed on a windows machine

383
00:16:17,440 --> 00:16:19,440
the power cell code necessary to carry

384
00:16:19,440 --> 00:16:21,040
out the of the

385
00:16:21,040 --> 00:16:24,240
warrior instantiation will be

386
00:16:24,240 --> 00:16:27,759
launched the control has two parts

387
00:16:27,759 --> 00:16:31,519
with a large if in the middle

388
00:16:31,519 --> 00:16:34,079
the first part of the basic starting

389
00:16:34,079 --> 00:16:35,440
part is the beginning

390
00:16:35,440 --> 00:16:38,560
of the thread as seen

391
00:16:38,560 --> 00:16:41,120
in the previous section connection

392
00:16:41,120 --> 00:16:42,000
requests all

393
00:16:42,000 --> 00:16:45,199
be made first a new unique id

394
00:16:45,199 --> 00:16:48,560
is generated for the systems instance of

395
00:16:48,560 --> 00:16:48,959
the

396
00:16:48,959 --> 00:16:52,800
today to be identified in the root node

397
00:16:52,800 --> 00:16:55,040
also the information of the on the

398
00:16:55,040 --> 00:16:57,360
operating system where it's

399
00:16:57,360 --> 00:17:00,639
running is gathered the second part

400
00:17:00,639 --> 00:17:04,319
is driving by a case that

401
00:17:04,319 --> 00:17:07,679
can happen in many threat emulations

402
00:17:07,679 --> 00:17:10,240
the process will approve the circulation

403
00:17:10,240 --> 00:17:11,919
or lateral movement

404
00:17:11,919 --> 00:17:14,000
to another machine produce a new

405
00:17:14,000 --> 00:17:15,359
privilege process

406
00:17:15,359 --> 00:17:18,480
or one that can be executed in another

407
00:17:18,480 --> 00:17:21,520
environment has been called splitting

408
00:17:21,520 --> 00:17:24,720
in this case the console will be invoked

409
00:17:24,720 --> 00:17:28,000
with an id that is it will not

410
00:17:28,000 --> 00:17:30,559
have to generate the warrior id that

411
00:17:30,559 --> 00:17:32,799
individual difficult individual

412
00:17:32,799 --> 00:17:35,520
the warrior to the root node in other

413
00:17:35,520 --> 00:17:36,480
words

414
00:17:36,480 --> 00:17:39,600
if there is a plan with the

415
00:17:39,600 --> 00:17:42,160
three tasks and the second task is a

416
00:17:42,160 --> 00:17:42,720
privilege

417
00:17:42,720 --> 00:17:46,080
escalation and this one is successful

418
00:17:46,080 --> 00:17:48,799
then the third task will be executed and

419
00:17:48,799 --> 00:17:50,000
in another

420
00:17:50,000 --> 00:17:53,200
process at an operating system level

421
00:17:53,200 --> 00:17:56,080
but from the att bound logical point of

422
00:17:56,080 --> 00:17:56,720
view

423
00:17:56,720 --> 00:17:59,760
it's the same word that is it

424
00:17:59,760 --> 00:18:03,600
inhibits the same word ready

425
00:18:05,280 --> 00:18:08,880
how do we find a thread simple through

426
00:18:08,880 --> 00:18:12,240
a json file the thread plan is generated

427
00:18:12,240 --> 00:18:14,799
in the root node according to the user's

428
00:18:14,799 --> 00:18:15,919
needs

429
00:18:15,919 --> 00:18:18,480
the user can use real threads already

430
00:18:18,480 --> 00:18:19,760
created or reveal

431
00:18:19,760 --> 00:18:21,840
their threats and see the output of

432
00:18:21,840 --> 00:18:24,000
their monitoring techniques

433
00:18:24,000 --> 00:18:26,640
the document format delivered with the

434
00:18:26,640 --> 00:18:29,840
plan is json

435
00:18:30,799 --> 00:18:34,000
let's talk about how create your http

436
00:18:34,000 --> 00:18:38,559
functions using the skeleton function

437
00:18:39,760 --> 00:18:43,200
any user can create or add features to

438
00:18:43,200 --> 00:18:43,840
implement

439
00:18:43,840 --> 00:18:48,799
techniques from the mitre 80d and ck

440
00:18:49,280 --> 00:18:52,160
x implemented function is linked to a

441
00:18:52,160 --> 00:18:52,799
technique

442
00:18:52,799 --> 00:18:57,840
and one or more tactics in the framework

443
00:18:58,400 --> 00:19:00,799
the main components from the skeleton

444
00:19:00,799 --> 00:19:01,679
functions

445
00:19:01,679 --> 00:19:03,919
are

446
00:19:05,120 --> 00:19:06,799
the technique to be launched or the

447
00:19:06,799 --> 00:19:08,320
function and

448
00:19:08,320 --> 00:19:11,600
the main program this main program will

449
00:19:11,600 --> 00:19:13,679
be in charge of managing the flow

450
00:19:13,679 --> 00:19:17,520
of the technique to be performed

451
00:19:18,799 --> 00:19:21,600
and this main program is in charge of

452
00:19:21,600 --> 00:19:25,280
another three tasks

453
00:19:25,280 --> 00:19:28,240
the first one is request the necessary

454
00:19:28,240 --> 00:19:28,799
data

455
00:19:28,799 --> 00:19:31,360
to the root node for the technique to be

456
00:19:31,360 --> 00:19:33,360
executed

457
00:19:33,360 --> 00:19:39,200
this is an execution prerequisite

458
00:19:39,200 --> 00:19:42,400
the second one is check if the execution

459
00:19:42,400 --> 00:19:43,360
of the technique

460
00:19:43,360 --> 00:19:47,039
has been successful or not

461
00:19:47,840 --> 00:19:50,480
the output will be stored in a true

462
00:19:50,480 --> 00:19:51,039
first

463
00:19:51,039 --> 00:19:53,840
variable

464
00:19:54,480 --> 00:19:56,880
and the last one is there is some data

465
00:19:56,880 --> 00:19:57,600
collected

466
00:19:57,600 --> 00:20:00,640
saxa credentials dump ap addresses

467
00:20:00,640 --> 00:20:03,919
or user enumeration that can be used

468
00:20:03,919 --> 00:20:06,880
by another technique because all this

469
00:20:06,880 --> 00:20:08,159
information will be

470
00:20:08,159 --> 00:20:11,679
jumped to a data store that has the root

471
00:20:11,679 --> 00:20:13,840
node

472
00:20:13,840 --> 00:20:16,720
this scheme can be visualized in any of

473
00:20:16,720 --> 00:20:18,559
the functions that can be found

474
00:20:18,559 --> 00:20:21,760
in hdt pounds

475
00:20:21,919 --> 00:20:24,480
ettipone is a collaborative project

476
00:20:24,480 --> 00:20:25,280
where the goal

477
00:20:25,280 --> 00:20:27,520
is to share knowledge through treat

478
00:20:27,520 --> 00:20:29,918
plans

479
00:20:30,880 --> 00:20:33,919
for the reason the tool allows sporting

480
00:20:33,919 --> 00:20:35,520
user generated treats

481
00:20:35,520 --> 00:20:38,880
and importing them into other 80-pound

482
00:20:38,880 --> 00:20:41,360
instance

483
00:20:42,960 --> 00:20:44,960
during the treat plan generation or

484
00:20:44,960 --> 00:20:47,120
query the export plan

485
00:20:47,120 --> 00:20:52,158
option can be used as shown in the image

486
00:20:54,960 --> 00:20:57,679
once the file is stored in json format

487
00:20:57,679 --> 00:21:01,360
it can be shared with the community

488
00:21:01,360 --> 00:21:03,360
the json file contains all the

489
00:21:03,360 --> 00:21:04,720
information needed

490
00:21:04,720 --> 00:21:07,360
to recreate the drip plan with all the

491
00:21:07,360 --> 00:21:08,080
tasks

492
00:21:08,080 --> 00:21:10,320
and implementation of techniques

493
00:21:10,320 --> 00:21:12,240
involved

494
00:21:12,240 --> 00:21:14,880
even if these are not available in the

495
00:21:14,880 --> 00:21:15,360
new

496
00:21:15,360 --> 00:21:18,400
scenario now

497
00:21:18,400 --> 00:21:21,840
let's look at some use cases in 80

498
00:21:21,840 --> 00:21:24,400
pounds you can execute the fall or noun

499
00:21:24,400 --> 00:21:26,799
threats and the threads or adversaries

500
00:21:26,799 --> 00:21:30,720
that we create with our custom

501
00:21:30,720 --> 00:21:34,080
threads we can make our own

502
00:21:34,080 --> 00:21:37,200
version of a noun thread with http

503
00:21:37,200 --> 00:21:38,400
technique set

504
00:21:38,400 --> 00:21:41,600
selected by us create

505
00:21:41,600 --> 00:21:44,880
our own version of an attack with http

506
00:21:44,880 --> 00:21:46,159
techniques

507
00:21:46,159 --> 00:21:49,360
and perform an execution of a threat

508
00:21:49,360 --> 00:21:53,039
noun or created by us that implements

509
00:21:53,039 --> 00:21:55,679
our own functions through the skeleton

510
00:21:55,679 --> 00:21:58,159
function

511
00:21:58,320 --> 00:22:00,720
in this section we will perform

512
00:22:00,720 --> 00:22:02,000
different dictionaries

513
00:22:02,000 --> 00:22:05,200
and explain them

514
00:22:09,600 --> 00:22:12,400
okay in this first demo let's see what a

515
00:22:12,400 --> 00:22:14,640
warrior is

516
00:22:14,640 --> 00:22:17,360
to do this we will create the warrior in

517
00:22:17,360 --> 00:22:18,320
this option

518
00:22:18,320 --> 00:22:21,120
and copy the code that ettie pound

519
00:22:21,120 --> 00:22:27,840
delivers to us

520
00:22:28,159 --> 00:22:31,120
then we go to the computer where we will

521
00:22:31,120 --> 00:22:31,520
make

522
00:22:31,520 --> 00:22:34,559
the adversary or treat test paste the

523
00:22:34,559 --> 00:22:35,919
code

524
00:22:35,919 --> 00:22:38,799
it will be executed in a new powershell

525
00:22:38,799 --> 00:22:40,080
and finally it

526
00:22:40,080 --> 00:22:45,280
connects with http downloading a console

527
00:22:46,720 --> 00:22:50,400
if we go to home section we will be able

528
00:22:50,400 --> 00:22:50,960
to see

529
00:22:50,960 --> 00:22:53,200
the computer where the warrior is

530
00:22:53,200 --> 00:22:55,520
running

531
00:22:55,520 --> 00:22:58,799
here we have the architecture data the

532
00:22:58,799 --> 00:23:00,799
process dust is running

533
00:23:00,799 --> 00:23:04,000
the ap address to which it belongs and

534
00:23:04,000 --> 00:23:08,880
the warriors identified

535
00:23:08,880 --> 00:23:11,360
in the plan section we have some

536
00:23:11,360 --> 00:23:12,400
predeterminate

537
00:23:12,400 --> 00:23:15,679
treats as we can see here

538
00:23:15,679 --> 00:23:18,799
like wannacry not petty a flame dark

539
00:23:18,799 --> 00:23:19,360
comet

540
00:23:19,360 --> 00:23:23,039
or dooku let's select

541
00:23:23,039 --> 00:23:26,000
for example wannacry and here we can see

542
00:23:26,000 --> 00:23:26,240
the

543
00:23:26,240 --> 00:23:29,679
techniques and the tt and ck tactic

544
00:23:29,679 --> 00:23:34,799
identifier that forms this version of

545
00:23:34,840 --> 00:23:37,840
wannacry

546
00:23:40,880 --> 00:23:44,240
we could use it against a warrior

547
00:23:44,240 --> 00:23:46,320
launch the warrior plan and finally

548
00:23:46,320 --> 00:23:47,279
execute it

549
00:23:47,279 --> 00:23:50,159
step by step all those techniques that

550
00:23:50,159 --> 00:23:51,039
correspond

551
00:23:51,039 --> 00:23:54,720
to wannacry in this case

552
00:23:59,760 --> 00:24:02,320
in this second demo we are going to

553
00:24:02,320 --> 00:24:02,880
gather

554
00:24:02,880 --> 00:24:05,600
information to verify that there are

555
00:24:05,600 --> 00:24:06,240
different

556
00:24:06,240 --> 00:24:09,360
techniques within att and ck and

557
00:24:09,360 --> 00:24:12,480
att bomb to be able to collect that

558
00:24:12,480 --> 00:24:16,840
information to recreate the malware

559
00:24:16,840 --> 00:24:19,840
treat

560
00:24:20,080 --> 00:24:22,080
next we are going to do a privilege

561
00:24:22,080 --> 00:24:23,600
escalation technique

562
00:24:23,600 --> 00:24:26,320
that will split the 80-pound console

563
00:24:26,320 --> 00:24:28,960
process into

564
00:24:28,960 --> 00:24:31,520
one without privilege and the new one

565
00:24:31,520 --> 00:24:34,400
with privilege

566
00:24:36,480 --> 00:24:38,720
the first step will be to create the

567
00:24:38,720 --> 00:24:40,880
warrior

568
00:24:40,880 --> 00:24:47,279
copy the code

569
00:24:47,279 --> 00:24:50,400
go to the powershell

570
00:24:52,400 --> 00:25:01,840
run the code

571
00:25:06,080 --> 00:25:15,760
and finally obtain the warrior executed

572
00:25:15,760 --> 00:25:20,000
okay now let's go to the plan option

573
00:25:21,760 --> 00:25:29,840
create a new one

574
00:25:30,720 --> 00:25:33,360
select the gutter intacted where we can

575
00:25:33,360 --> 00:25:33,760
see

576
00:25:33,760 --> 00:25:37,279
here besides the implemented techniques

577
00:25:37,279 --> 00:25:39,919
we also have the discovery tactic where

578
00:25:39,919 --> 00:25:42,480
we can see some entity and ck techniques

579
00:25:42,480 --> 00:25:45,039
generated

580
00:25:45,919 --> 00:25:48,640
in this case we are simply going to make

581
00:25:48,640 --> 00:25:50,880
a selection of the processes

582
00:25:50,880 --> 00:25:54,159
that the machine has we will add this

583
00:25:54,159 --> 00:25:55,120
technique

584
00:25:55,120 --> 00:25:57,039
then we'll go to the escalation of

585
00:25:57,039 --> 00:25:58,720
privilege

586
00:25:58,720 --> 00:26:01,120
where we are going to use a bypass of

587
00:26:01,120 --> 00:26:02,240
usc technique

588
00:26:02,240 --> 00:26:05,679
named 1088

589
00:26:05,679 --> 00:26:11,840
we add it we put a name to the tweet

590
00:26:20,240 --> 00:26:23,679
and finally we will create the plan

591
00:26:23,679 --> 00:26:26,240
once we have the plan created we can

592
00:26:26,240 --> 00:26:29,200
select it here

593
00:26:31,840 --> 00:26:34,960
we see the elements of our plan with

594
00:26:34,960 --> 00:26:37,360
which metric tactics the mapping is

595
00:26:37,360 --> 00:26:39,840
performed

596
00:26:40,240 --> 00:26:42,400
and we can identify the wire over the

597
00:26:42,400 --> 00:26:44,000
wire we want to launch it

598
00:26:44,000 --> 00:26:47,840
and finally we launch the plan

599
00:26:48,559 --> 00:26:51,039
at this moment the hdt pound console

600
00:26:51,039 --> 00:26:52,000
will start

601
00:26:52,000 --> 00:26:55,120
working and it will read the plan

602
00:26:55,120 --> 00:27:00,479
and here we have the bending task

603
00:27:01,520 --> 00:27:03,840
if we go to the result option we will

604
00:27:03,840 --> 00:27:05,840
see how the first technique has already

605
00:27:05,840 --> 00:27:08,799
been executed

606
00:27:11,120 --> 00:27:13,279
in bulk process which is just a

607
00:27:13,279 --> 00:27:14,880
collection of processes

608
00:27:14,880 --> 00:27:17,919
we can see success

609
00:27:18,880 --> 00:27:21,279
if we refresh it or we wait for a little

610
00:27:21,279 --> 00:27:23,600
while

611
00:27:27,679 --> 00:27:30,720
we will find that usc bypass has

612
00:27:30,720 --> 00:27:35,840
also been successful

613
00:27:36,799 --> 00:27:41,279
and we really get a double process

614
00:27:41,279 --> 00:27:46,159
the one of the left is without privilege

615
00:27:46,799 --> 00:27:50,000
but the one on the right is a process in

616
00:27:50,000 --> 00:27:51,200
which instructions

617
00:27:51,200 --> 00:27:54,559
with privilege are being executed but we

618
00:27:54,559 --> 00:27:56,080
had no more technique

619
00:27:56,080 --> 00:27:58,000
after the privileged elevation of

620
00:27:58,000 --> 00:27:59,760
execution

621
00:27:59,760 --> 00:28:02,880
in the 80-pound technical part we can

622
00:28:02,880 --> 00:28:04,159
see the techniques

623
00:28:04,159 --> 00:28:06,640
output

624
00:28:08,399 --> 00:28:10,720
we can check the processes that the

625
00:28:10,720 --> 00:28:11,679
computer has

626
00:28:11,679 --> 00:28:14,799
and here we can also see the uac

627
00:28:14,799 --> 00:28:17,840
bypass result

628
00:28:21,520 --> 00:28:30,480
and here's the second demo

629
00:28:30,480 --> 00:28:32,799
in this third demo we are going to

630
00:28:32,799 --> 00:28:33,600
perform

631
00:28:33,600 --> 00:28:36,480
an escalation of privilege but also a

632
00:28:36,480 --> 00:28:39,600
credential stamp

633
00:28:42,720 --> 00:28:45,360
to do this let's create a warrior

634
00:28:45,360 --> 00:28:48,559
pointing to the http panel

635
00:28:48,559 --> 00:28:50,960
copy the code and run it on the

636
00:28:50,960 --> 00:28:53,520
powershell console

637
00:28:53,520 --> 00:28:59,840
as we see before

638
00:29:00,720 --> 00:29:03,120
here we can see the information about

639
00:29:03,120 --> 00:29:05,440
the new warrior connected to the panel

640
00:29:05,440 --> 00:29:13,840
and now we are going to create a plan

641
00:29:14,240 --> 00:29:16,240
the drip plan will have a privilege

642
00:29:16,240 --> 00:29:18,320
escalation

643
00:29:18,320 --> 00:29:21,360
we will use again one zero eight eight

644
00:29:21,360 --> 00:29:26,399
that is the usc bypass

645
00:29:26,399 --> 00:29:28,799
we will execute a credential access

646
00:29:28,799 --> 00:29:29,679
tactic

647
00:29:29,679 --> 00:29:32,799
using a power dump but we could also use

648
00:29:32,799 --> 00:29:34,399
mimikatz to perform

649
00:29:34,399 --> 00:29:41,840
the credential damp

650
00:29:48,720 --> 00:29:51,760
the interesting part is that once we get

651
00:29:51,760 --> 00:29:54,080
the privilege escalation working

652
00:29:54,080 --> 00:29:57,200
we will get a new process with privilege

653
00:29:57,200 --> 00:30:00,000
and this process will be able to perform

654
00:30:00,000 --> 00:30:03,279
the credential damp

655
00:30:04,640 --> 00:30:06,880
okay so let's create the plan deploy the

656
00:30:06,880 --> 00:30:08,640
treats select the treat

657
00:30:08,640 --> 00:30:10,720
select the warrior and finally launch

658
00:30:10,720 --> 00:30:13,120
the plan

659
00:30:20,320 --> 00:30:23,279
okay and now let's go to the edit output

660
00:30:23,279 --> 00:30:24,000
section

661
00:30:24,000 --> 00:30:26,559
and here we'll be able to see the

662
00:30:26,559 --> 00:30:27,279
techniques

663
00:30:27,279 --> 00:30:31,600
or task pending execution

664
00:30:33,120 --> 00:30:36,399
like the 1088

665
00:30:36,399 --> 00:30:40,320
if we give it a little time

666
00:30:42,320 --> 00:30:44,159
we will see that heath has been

667
00:30:44,159 --> 00:30:45,520
successful

668
00:30:45,520 --> 00:30:48,159
this new process with privilege has not

669
00:30:48,159 --> 00:30:49,440
been created yet

670
00:30:49,440 --> 00:30:53,039
we will see in the next afresh

671
00:30:54,320 --> 00:30:56,080
here we can see the console without

672
00:30:56,080 --> 00:30:58,559
privilege

673
00:31:02,880 --> 00:31:05,600
and the second panel we will find the

674
00:31:05,600 --> 00:31:06,320
credentials

675
00:31:06,320 --> 00:31:09,439
damn still running

676
00:31:16,159 --> 00:31:18,799
and now we can see that the power drum

677
00:31:18,799 --> 00:31:19,519
technique

678
00:31:19,519 --> 00:31:22,799
is finished but

679
00:31:22,799 --> 00:31:25,679
where can we see the results like in the

680
00:31:25,679 --> 00:31:26,799
previous demo

681
00:31:26,799 --> 00:31:29,200
here we can see the output that this

682
00:31:29,200 --> 00:31:32,080
technique has

683
00:31:32,080 --> 00:31:36,080
in this case the uac bypass

684
00:31:36,159 --> 00:31:38,080
while the second technique executed in

685
00:31:38,080 --> 00:31:40,320
this process the credential damping

686
00:31:40,320 --> 00:31:44,720
has returned us all this information

687
00:31:45,039 --> 00:31:48,080
this information is very important as we

688
00:31:48,080 --> 00:31:48,640
see here

689
00:31:48,640 --> 00:31:52,159
we have users user id has lm

690
00:31:52,159 --> 00:31:56,080
hash ntlm as i said this information is

691
00:31:56,080 --> 00:31:56,480
very

692
00:31:56,480 --> 00:31:59,039
important because we will be able to use

693
00:31:59,039 --> 00:32:02,480
it through a data store

694
00:32:04,880 --> 00:32:07,919
the data store can be used by techniques

695
00:32:07,919 --> 00:32:11,600
that are performed afterward for example

696
00:32:11,600 --> 00:32:14,799
a lateral movement technique can be used

697
00:32:14,799 --> 00:32:17,519
these hashes and these users because of

698
00:32:17,519 --> 00:32:20,480
this data store

699
00:32:20,480 --> 00:32:22,880
this is a very very important element

700
00:32:22,880 --> 00:32:25,279
within

701
00:32:26,840 --> 00:32:29,840
edtpan

702
00:32:31,840 --> 00:32:34,720
in this fourth demo we will perform the

703
00:32:34,720 --> 00:32:37,200
following scenario

704
00:32:37,200 --> 00:32:40,640
first an escalation of relays

705
00:32:40,640 --> 00:32:45,279
second ready and dump orchestra lamping

706
00:32:45,279 --> 00:32:47,519
and finally we will make a lateral

707
00:32:47,519 --> 00:32:50,000
movement from computer with windows 7

708
00:32:50,000 --> 00:32:53,519
to the computer with windows 10.

709
00:32:53,519 --> 00:32:56,159
first we are going to play a warrior on

710
00:32:56,159 --> 00:32:59,679
the windows 7 machine

711
00:33:01,760 --> 00:33:05,200
okay as we have done in previous demos

712
00:33:05,200 --> 00:33:08,320
we type in the 80-pound ip address and

713
00:33:08,320 --> 00:33:10,480
finally create

714
00:33:10,480 --> 00:33:13,760
the code we copy the code

715
00:33:13,760 --> 00:33:16,960
from powershell and run it on windows

716
00:33:16,960 --> 00:33:19,279
cell

717
00:33:21,600 --> 00:33:25,039
okay we copy the code

718
00:33:25,039 --> 00:33:28,080
from at this point

719
00:33:28,080 --> 00:33:33,120
and run it on windows 7 on powershell

720
00:33:33,679 --> 00:33:37,120
ok once executed

721
00:33:37,120 --> 00:33:41,440
we hope we go to home obtainers before

722
00:33:41,440 --> 00:33:43,360
they need the new warrior running

723
00:33:43,360 --> 00:33:46,080
windows 7

724
00:33:49,519 --> 00:33:53,840
ok well

725
00:33:53,919 --> 00:33:57,679
now let's generate a plan where the

726
00:33:57,679 --> 00:34:00,799
first step is to

727
00:34:00,799 --> 00:34:05,120
execute this technique for example

728
00:34:05,120 --> 00:34:08,960
by the counts t1078

729
00:34:08,960 --> 00:34:12,239
okay the second

730
00:34:12,239 --> 00:34:15,520
technique is an excretion of privilege

731
00:34:15,520 --> 00:34:18,719
and third person technique is

732
00:34:18,719 --> 00:34:21,119
the credential damping and the fourth

733
00:34:21,119 --> 00:34:21,839
step

734
00:34:21,839 --> 00:34:24,800
or fourth technique will be a lateral

735
00:34:24,800 --> 00:34:27,359
movement

736
00:34:30,399 --> 00:34:33,760
okay now

737
00:34:33,760 --> 00:34:38,560
insert plan and

738
00:34:41,199 --> 00:34:44,560
select a plan new plan

739
00:34:44,560 --> 00:34:48,560
or new thread and

740
00:34:48,560 --> 00:34:51,839
we assign a water id

741
00:34:51,839 --> 00:34:55,040
or id warrior to

742
00:34:55,040 --> 00:34:59,200
to your plan okay

743
00:34:59,200 --> 00:35:02,480
and look at results

744
00:35:02,480 --> 00:35:06,480
view and we have

745
00:35:06,480 --> 00:35:16,240
a data data store okay

746
00:35:16,240 --> 00:35:19,359
these these are these are

747
00:35:19,359 --> 00:35:22,480
uh techniques several techniques

748
00:35:22,480 --> 00:35:26,320
about the new plan and data store

749
00:35:26,320 --> 00:35:28,960
we are we add an ip address to the

750
00:35:28,960 --> 00:35:30,000
desktop

751
00:35:30,000 --> 00:35:32,160
ok

752
00:35:43,359 --> 00:35:46,880
okay well refresh the web page

753
00:35:46,880 --> 00:35:50,240
several times until the lateral movement

754
00:35:50,240 --> 00:35:51,599
is complete

755
00:35:51,599 --> 00:35:54,800
and the technique of flattering

756
00:35:54,800 --> 00:35:58,560
movement is complete

757
00:35:58,560 --> 00:36:01,599
now led pawn is still

758
00:36:01,599 --> 00:36:05,680
executing execute

759
00:36:05,680 --> 00:36:08,399
all process

760
00:36:10,839 --> 00:36:12,480
and

761
00:36:12,480 --> 00:36:15,040
now refresh the web page several times

762
00:36:15,040 --> 00:36:16,800
until the lateral movement is complete

763
00:36:16,800 --> 00:36:17,440
okay

764
00:36:17,440 --> 00:36:21,440
observe that we have an hd pound

765
00:36:21,440 --> 00:36:27,839
console running on windows 10.

766
00:36:30,079 --> 00:36:33,920
yeah then now we can conclude

767
00:36:33,920 --> 00:36:36,800
this demo form

768
00:36:38,800 --> 00:36:42,880
okay now we are going to

769
00:36:42,880 --> 00:36:55,839
speech about demo 5.

770
00:36:56,880 --> 00:37:00,240
well in this five fifth

771
00:37:00,240 --> 00:37:04,000
demo we will work on

772
00:37:04,000 --> 00:37:07,119
in all in one thread concept

773
00:37:07,119 --> 00:37:10,000
where we will automate the service

774
00:37:10,000 --> 00:37:11,280
discovery

775
00:37:11,280 --> 00:37:13,920
and the discovery of machines within

776
00:37:13,920 --> 00:37:14,480
within

777
00:37:14,480 --> 00:37:17,440
a network as a threat or an anniversary

778
00:37:17,440 --> 00:37:19,119
could do

779
00:37:19,119 --> 00:37:21,760
the data discovered will be stored on

780
00:37:21,760 --> 00:37:22,880
the data store

781
00:37:22,880 --> 00:37:26,160
by a technique being used then we will

782
00:37:26,160 --> 00:37:26,720
perform

783
00:37:26,720 --> 00:37:29,359
appropriate escalation obtain a new

784
00:37:29,359 --> 00:37:30,000
privilege

785
00:37:30,000 --> 00:37:33,200
process on the windows 7 machine

786
00:37:33,200 --> 00:37:36,400
then we will make a credential dump

787
00:37:36,400 --> 00:37:38,720
thanks thanks to that privilege

788
00:37:38,720 --> 00:37:40,079
speculation

789
00:37:40,079 --> 00:37:44,880
where we will acquire houses and users

790
00:37:44,880 --> 00:37:47,440
then we will make a lateral move where

791
00:37:47,440 --> 00:37:48,240
we will use

792
00:37:48,240 --> 00:37:51,359
the houses users and the ip addresses

793
00:37:51,359 --> 00:37:52,000
for

794
00:37:52,000 --> 00:37:54,560
from the computers within the network to

795
00:37:54,560 --> 00:37:56,400
try to make

796
00:37:56,400 --> 00:37:58,880
to make that lateral move through the

797
00:37:58,880 --> 00:38:00,480
meter hd

798
00:38:00,480 --> 00:38:04,240
technique in this way the whole process

799
00:38:04,240 --> 00:38:05,040
is fully

800
00:38:05,040 --> 00:38:09,359
dramatic so we can we can test the

801
00:38:09,359 --> 00:38:11,920
effectiveness or efficiency of security

802
00:38:11,920 --> 00:38:12,800
controls within

803
00:38:12,800 --> 00:38:16,480
the organization we will start as always

804
00:38:16,480 --> 00:38:18,720
by generating a warrior in this case we

805
00:38:18,720 --> 00:38:19,119
check

806
00:38:19,119 --> 00:38:22,240
the ip address again copy the gold and

807
00:38:22,240 --> 00:38:22,960
go to

808
00:38:22,960 --> 00:38:27,760
powershell to paste the code okay

809
00:38:29,119 --> 00:38:32,240
okay in the home section

810
00:38:32,240 --> 00:38:34,960
uh we'll we will see the control

811
00:38:34,960 --> 00:38:36,400
connected soon

812
00:38:36,400 --> 00:38:39,839
here we see the data now we go to the

813
00:38:39,839 --> 00:38:40,320
plan

814
00:38:40,320 --> 00:38:42,720
section

815
00:38:44,400 --> 00:38:49,200
okay waiting for the warrior

816
00:38:53,599 --> 00:38:56,880
and we go to the plan section we create

817
00:38:56,880 --> 00:39:00,320
we create a new plan begin with

818
00:39:00,320 --> 00:39:06,079
a discovery tactic tactic using the

819
00:39:06,520 --> 00:39:09,040
t1046 technique

820
00:39:09,040 --> 00:39:12,800
where this port's scanning will allow

821
00:39:12,800 --> 00:39:16,800
us to discover computers okay

822
00:39:16,800 --> 00:39:19,599
we add the technique to the plan

823
00:39:19,599 --> 00:39:20,720
indicating an

824
00:39:20,720 --> 00:39:23,839
escalation of privilege and then

825
00:39:23,839 --> 00:39:25,119
credential damp

826
00:39:25,119 --> 00:39:29,839
with power dump or mimics and finally

827
00:39:29,839 --> 00:39:33,200
the large technique again

828
00:39:33,200 --> 00:39:36,640
a lateral movement okay

829
00:39:36,640 --> 00:39:39,680
and thread name defcon demo

830
00:39:39,680 --> 00:39:43,040
5 and

831
00:39:43,040 --> 00:39:46,320
an all-in-one and thread

832
00:39:46,320 --> 00:39:49,520
description blah blah

833
00:39:51,359 --> 00:39:53,680
okay we put the name only one create a

834
00:39:53,680 --> 00:39:55,119
plan and link it

835
00:39:55,119 --> 00:39:58,400
with the warrior we go now

836
00:39:58,400 --> 00:40:02,320
to the results okay well

837
00:40:02,320 --> 00:40:05,920
first allocate plan and now

838
00:40:05,920 --> 00:40:11,359
we go now to the results

839
00:40:11,359 --> 00:40:14,880
we see the control begins to work

840
00:40:14,880 --> 00:40:18,560
and now

841
00:40:18,560 --> 00:40:22,720
we can see here the task to be done

842
00:40:22,720 --> 00:40:26,319
and the scan begins

843
00:40:27,760 --> 00:40:30,800
one moment here

844
00:40:31,760 --> 00:40:34,640
the scan is a technique that in duality

845
00:40:34,640 --> 00:40:35,520
can take

846
00:40:35,520 --> 00:40:38,880
quite a long time can be seconds or

847
00:40:38,880 --> 00:40:40,880
meals

848
00:40:40,880 --> 00:40:43,599
so we will speed up the demo a little

849
00:40:43,599 --> 00:40:44,160
bit

850
00:40:44,160 --> 00:40:46,720
so that this part goes as fast as

851
00:40:46,720 --> 00:40:49,200
possible

852
00:40:51,520 --> 00:40:55,680
okay once the scan has finished

853
00:40:55,680 --> 00:40:59,040
we will be able to check that it has

854
00:40:59,040 --> 00:41:00,079
been successful

855
00:41:00,079 --> 00:41:04,960
and if we go to the data store

856
00:41:05,599 --> 00:41:10,079
okay now we go to the data store

857
00:41:10,079 --> 00:41:12,640
we will be able to see the computer ap

858
00:41:12,640 --> 00:41:13,760
addresses that

859
00:41:13,760 --> 00:41:17,119
are currently alive on the network

860
00:41:17,119 --> 00:41:21,200
um right now the second technique

861
00:41:21,200 --> 00:41:23,440
that is the escalation of village has

862
00:41:23,440 --> 00:41:24,400
also also

863
00:41:24,400 --> 00:41:27,440
been successful so the process has

864
00:41:27,440 --> 00:41:30,400
has been unfolded and right now the

865
00:41:30,400 --> 00:41:32,839
process dumped

866
00:41:32,839 --> 00:41:35,599
credentials

867
00:41:35,599 --> 00:41:39,280
okay if we refresh the page we

868
00:41:39,280 --> 00:41:41,440
will see the credentials dumping has

869
00:41:41,440 --> 00:41:42,880
been successful too

870
00:41:42,880 --> 00:41:46,400
and if we go to the thread datastore

871
00:41:46,400 --> 00:41:50,319
we see that we have ip addresses

872
00:41:50,319 --> 00:41:53,599
users and hashes

873
00:41:53,599 --> 00:41:56,640
the discussions can be identified

874
00:41:56,640 --> 00:41:59,760
from here directly like any data

875
00:41:59,760 --> 00:42:02,880
from the data store and the changes will

876
00:42:02,880 --> 00:42:06,079
be saved by clicking on the after record

877
00:42:06,079 --> 00:42:09,200
okay for the thread to finish

878
00:42:09,200 --> 00:42:11,520
we will have to check if the result is

879
00:42:11,520 --> 00:42:12,480
covered or not

880
00:42:12,480 --> 00:42:16,000
in the lateral movement we must

881
00:42:16,000 --> 00:42:18,240
consider that these techniques are used

882
00:42:18,240 --> 00:42:19,040
to test

883
00:42:19,040 --> 00:42:21,839
to test the efficiency and effect and

884
00:42:21,839 --> 00:42:22,800
fitness

885
00:42:22,800 --> 00:42:24,800
of the security counters within the

886
00:42:24,800 --> 00:42:26,560
organization

887
00:42:26,560 --> 00:42:29,599
therefore certain implementations may be

888
00:42:29,599 --> 00:42:32,880
updated and avoid the execution of

889
00:42:32,880 --> 00:42:35,680
some codes

890
00:42:36,400 --> 00:42:40,960
okay now a new process on windows 10 has

891
00:42:40,960 --> 00:42:42,000
been implemented

892
00:42:42,000 --> 00:42:44,800
there are no tasks and we have performed

893
00:42:44,800 --> 00:42:46,400
the lateral movement

894
00:42:46,400 --> 00:42:49,280
in other words the thread has moved from

895
00:42:49,280 --> 00:42:51,119
windows 7 to windows 10

896
00:42:51,119 --> 00:42:53,920
from one machine machine to another over

897
00:42:53,920 --> 00:42:54,960
the network

898
00:42:54,960 --> 00:42:58,000
and we have also done the

899
00:42:58,000 --> 00:43:01,200
whole process of a threat that is real

900
00:43:01,200 --> 00:43:03,520
for us detecting computers in the

901
00:43:03,520 --> 00:43:05,680
network trying to escalate privileged

902
00:43:05,680 --> 00:43:06,480
dumping and

903
00:43:06,480 --> 00:43:10,240
accessing information such as houses

904
00:43:10,240 --> 00:43:13,200
and finally a lateral move with one of

905
00:43:13,200 --> 00:43:14,560
the techniques

906
00:43:14,560 --> 00:43:16,880
that can be implemented within the

907
00:43:16,880 --> 00:43:17,839
lateral movement

908
00:43:17,839 --> 00:43:20,720
most tactics

909
00:43:22,560 --> 00:43:25,359
in this sixth and final demo we are

910
00:43:25,359 --> 00:43:26,720
going to export

911
00:43:26,720 --> 00:43:30,640
the thread plan and then import it into

912
00:43:30,640 --> 00:43:34,000
http to make a simple example

913
00:43:34,000 --> 00:43:37,040
we can choose notepadia

914
00:43:37,040 --> 00:43:40,079
select the thread get the techniques to

915
00:43:40,079 --> 00:43:40,640
use

916
00:43:40,640 --> 00:43:45,680
and proceed with the playing sport

917
00:43:46,160 --> 00:43:51,680
in this button we we export

918
00:43:51,680 --> 00:43:55,119
this knowledge we if if

919
00:43:55,119 --> 00:43:57,280
we want to share knowledge with other

920
00:43:57,280 --> 00:43:58,319
users uh

921
00:43:58,319 --> 00:44:01,520
our threat knowledge that we already

922
00:44:01,520 --> 00:44:04,560
have have created or even even

923
00:44:04,560 --> 00:44:06,800
techniques that we have implemented in

924
00:44:06,800 --> 00:44:08,319
power cell and

925
00:44:08,319 --> 00:44:11,839
add it to a http we call create any plan

926
00:44:11,839 --> 00:44:13,680
set a name create a plan

927
00:44:13,680 --> 00:44:23,839
choose it and proceed to export it

928
00:44:30,160 --> 00:44:33,200
if we want to share this plan with

929
00:44:33,200 --> 00:44:36,640
another user we will send him

930
00:44:36,640 --> 00:44:39,200
the json file which we are going to open

931
00:44:39,200 --> 00:44:39,760
to see

932
00:44:39,760 --> 00:44:42,400
the content

933
00:44:46,960 --> 00:44:50,400
okay json opening json file

934
00:44:50,400 --> 00:44:53,839
in firefox okay

935
00:44:55,359 --> 00:44:58,640
okay as you can see even

936
00:44:58,640 --> 00:45:01,599
the function definition writing power

937
00:45:01,599 --> 00:45:02,880
cell

938
00:45:02,880 --> 00:45:06,000
exactly as we have created it is

939
00:45:06,000 --> 00:45:08,160
transferred

940
00:45:08,160 --> 00:45:11,760
so if we want to share this information

941
00:45:11,760 --> 00:45:12,720
with another

942
00:45:12,720 --> 00:45:15,920
user we can export those plans

943
00:45:15,920 --> 00:45:18,000
containing the functions that

944
00:45:18,000 --> 00:45:21,359
we have created in powershell and i did

945
00:45:21,359 --> 00:45:26,078
to edit the pound and send this json

946
00:45:31,440 --> 00:45:33,920
okay it's very simple and collaborative

947
00:45:33,920 --> 00:45:35,200
way to provide

948
00:45:35,200 --> 00:45:37,920
the knowledge to other users with

949
00:45:37,920 --> 00:45:39,520
offensive techniques

950
00:45:39,520 --> 00:45:42,720
within the httc key mapping

951
00:45:42,720 --> 00:45:45,520
well this is the last demo and i will

952
00:45:45,520 --> 00:45:46,720
pass the war

953
00:45:46,720 --> 00:45:50,480
on to my partner front

954
00:45:50,560 --> 00:45:53,440
okay so that's all feel free to visit

955
00:45:53,440 --> 00:45:55,119
the att pound github

956
00:45:55,119 --> 00:45:58,800
and download the software this is a new

957
00:45:58,800 --> 00:45:59,200
tool

958
00:45:59,200 --> 00:46:01,520
we are currently working on and we are

959
00:46:01,520 --> 00:46:04,880
adding new techniques

960
00:46:04,880 --> 00:46:07,119
also the project is collaborative and

961
00:46:07,119 --> 00:46:10,560
everyone can help the project grow

962
00:46:10,560 --> 00:46:13,040
and now we are ready to answer any

963
00:46:13,040 --> 00:46:15,119
questions you may have about

964
00:46:15,119 --> 00:46:24,880
edtpawn thanks a lot

