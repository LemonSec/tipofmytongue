1
00:00:01,620 --> 00:00:03,540
so ladies and gentlemen welcome back

2
00:00:03,540 --> 00:00:07,080
from uh the lunch break we'll get the

3
00:00:07,080 --> 00:00:11,480
afternoon session underway now uh with

4
00:00:11,480 --> 00:00:14,519
piotra grashka who some of you may

5
00:00:14,519 --> 00:00:18,060
recognize I'll hand you over all yours

6
00:00:18,060 --> 00:00:20,400
thank you

7
00:00:20,400 --> 00:00:23,340
uh good afternoon everybody thanks for

8
00:00:23,340 --> 00:00:27,180
coming up for dessert after the lunch

9
00:00:27,180 --> 00:00:30,060
so for dessert we have today the session

10
00:00:30,060 --> 00:00:33,480
how Fred actors used and abused DNS

11
00:00:33,480 --> 00:00:36,059
protocol DNS system so we will have a

12
00:00:36,059 --> 00:00:38,899
look at real life real malware examples

13
00:00:38,899 --> 00:00:41,399
and we will look just under one angle

14
00:00:41,399 --> 00:00:45,780
how the threat actor was using DNS uh

15
00:00:45,780 --> 00:00:47,219
during the attack

16
00:00:47,219 --> 00:00:51,000
not attacking DNS but using DNS protocol

17
00:00:51,000 --> 00:00:53,820
for example within a ransomware APT

18
00:00:53,820 --> 00:00:57,120
attacks and so on my name is piot I'm

19
00:00:57,120 --> 00:00:59,820
based in Poland I work for infoblox

20
00:00:59,820 --> 00:01:02,460
which is American vendor of secure DNS

21
00:01:02,460 --> 00:01:03,840
Solutions

22
00:01:03,840 --> 00:01:06,420
that's why uh

23
00:01:06,420 --> 00:01:08,460
it's also actually not only my work but

24
00:01:08,460 --> 00:01:12,420
also a passion to look how DNS is used

25
00:01:12,420 --> 00:01:14,760
by the threat actors and how it can be

26
00:01:14,760 --> 00:01:18,299
used for security purposes for defense

27
00:01:18,299 --> 00:01:21,080
uh

28
00:01:21,119 --> 00:01:23,600
small introduction

29
00:01:23,600 --> 00:01:26,640
how basically DNS is used during the

30
00:01:26,640 --> 00:01:29,820
Cyber kill chain so how they are using

31
00:01:29,820 --> 00:01:32,759
DNS within each of uh phases of cyber

32
00:01:32,759 --> 00:01:35,579
kitchen so there are the seven phases of

33
00:01:35,579 --> 00:01:39,119
the attack of targeted attack and it

34
00:01:39,119 --> 00:01:40,560
starts with reconnaissance right

35
00:01:40,560 --> 00:01:42,240
attacker tries to get as much

36
00:01:42,240 --> 00:01:44,579
information as possible about the victim

37
00:01:44,579 --> 00:01:46,740
about the infrastructure systems used

38
00:01:46,740 --> 00:01:50,520
and so on usually they use DNS here to

39
00:01:50,520 --> 00:01:53,460
gather information about IP addressing

40
00:01:53,460 --> 00:01:56,159
because in the DNS Zone you have

41
00:01:56,159 --> 00:01:58,619
information about IP addresses very

42
00:01:58,619 --> 00:02:01,020
often you can find even private

43
00:02:01,020 --> 00:02:03,180
addressing then because people which

44
00:02:03,180 --> 00:02:05,759
administer DNS they do mistakes like

45
00:02:05,759 --> 00:02:08,940
every people do so sometimes you can

46
00:02:08,940 --> 00:02:11,038
find even private IP addresses you can

47
00:02:11,038 --> 00:02:14,160
find host names which can mean what kind

48
00:02:14,160 --> 00:02:17,459
of systems are used and so on this

49
00:02:17,459 --> 00:02:18,780
this information gathering could be

50
00:02:18,780 --> 00:02:21,420
passive through passive DNS systems it

51
00:02:21,420 --> 00:02:25,879
could be active through DNS enumeration

52
00:02:26,640 --> 00:02:29,340
but that's it for for the next phase uh

53
00:02:29,340 --> 00:02:31,319
there is a weaponization if they will

54
00:02:31,319 --> 00:02:34,980
use DNS they need to usually register

55
00:02:34,980 --> 00:02:37,739
domains set up authoritative DNS name

56
00:02:37,739 --> 00:02:41,640
servers uh maybe put some code in the

57
00:02:41,640 --> 00:02:44,400
malware which will use DNS somehow or

58
00:02:44,400 --> 00:02:46,040
buy such code

59
00:02:46,040 --> 00:02:49,319
so that's the weaponization phase they

60
00:02:49,319 --> 00:02:51,480
prepare the tools the malicious content

61
00:02:51,480 --> 00:02:52,920
which will be used later

62
00:02:52,920 --> 00:02:55,200
then we have delivery phase where the

63
00:02:55,200 --> 00:02:57,239
actual actual malicious content is

64
00:02:57,239 --> 00:02:59,000
delivered to the victim

65
00:02:59,000 --> 00:03:01,260
uh this can be done in many different

66
00:03:01,260 --> 00:03:03,180
ways of course right it could be an

67
00:03:03,180 --> 00:03:04,860
email with attachment could be an email

68
00:03:04,860 --> 00:03:07,800
with a link to a website with malicious

69
00:03:07,800 --> 00:03:10,319
content so it could be indirect it

70
00:03:10,319 --> 00:03:12,000
doesn't have to be an email could be a

71
00:03:12,000 --> 00:03:14,819
message on LinkedIn from the Headhunter

72
00:03:14,819 --> 00:03:18,900
anything like that if attackers will use

73
00:03:18,900 --> 00:03:20,819
some kind of Link

74
00:03:20,819 --> 00:03:23,099
it usually contains a domain name which

75
00:03:23,099 --> 00:03:25,440
needs to be resolved by the computer of

76
00:03:25,440 --> 00:03:28,500
the victim right so usually when people

77
00:03:28,500 --> 00:03:31,519
think about using DNS in the defense

78
00:03:31,519 --> 00:03:33,780
they think about

79
00:03:33,780 --> 00:03:37,140
uh weaponizing let's say DNS resolver

80
00:03:37,140 --> 00:03:39,840
with a list of malicious domains IP

81
00:03:39,840 --> 00:03:42,000
addresses and the functionality to

82
00:03:42,000 --> 00:03:44,480
basically block resolution of such names

83
00:03:44,480 --> 00:03:47,519
we will definitely not cover such basic

84
00:03:47,519 --> 00:03:50,760
scenarios today we will look at the the

85
00:03:50,760 --> 00:03:52,620
most advanced techniques used by the

86
00:03:52,620 --> 00:03:53,819
attackers

87
00:03:53,819 --> 00:03:56,879
then we have an exploitation phase in

88
00:03:56,879 --> 00:03:59,280
the exploitation phase attacker will try

89
00:03:59,280 --> 00:04:00,900
to

90
00:04:00,900 --> 00:04:04,280
exploit some vulnerabilities in the

91
00:04:04,280 --> 00:04:07,879
victim infrastructure or systems

92
00:04:07,879 --> 00:04:11,400
processes and so on in terms of DNS

93
00:04:11,400 --> 00:04:12,799
usually

94
00:04:12,799 --> 00:04:15,420
it's about exploiting vulnerabilities

95
00:04:15,420 --> 00:04:19,380
DNS server software or in DNS client

96
00:04:19,380 --> 00:04:20,579
software

97
00:04:20,579 --> 00:04:23,100
by DNS client I mean this part of TCP

98
00:04:23,100 --> 00:04:25,440
stack which is responsible for resolving

99
00:04:25,440 --> 00:04:28,860
name into the IP and this is a code this

100
00:04:28,860 --> 00:04:31,199
code is made by humans so it also

101
00:04:31,199 --> 00:04:33,900
contains possible vulnerabilities and I

102
00:04:33,900 --> 00:04:35,580
will show you one example

103
00:04:35,580 --> 00:04:37,740
then we have installation phase where

104
00:04:37,740 --> 00:04:40,800
the malware is installed on the asset

105
00:04:40,800 --> 00:04:43,440
and after that the malware will try to

106
00:04:43,440 --> 00:04:46,199
contact command and control server so

107
00:04:46,199 --> 00:04:49,919
basically needs to register itself send

108
00:04:49,919 --> 00:04:52,199
some information ask what to do next

109
00:04:52,199 --> 00:04:54,840
send results of the executed tags and so

110
00:04:54,840 --> 00:04:57,900
on to do that basically IP address of

111
00:04:57,900 --> 00:05:00,360
the C2 server is needed these IP address

112
00:05:00,360 --> 00:05:02,660
can be either hard-coded in the malware

113
00:05:02,660 --> 00:05:06,000
which usually is the case in about 15

114
00:05:06,000 --> 00:05:09,080
percent of malware cases

115
00:05:09,080 --> 00:05:13,440
uh but more often it is stored as a

116
00:05:13,440 --> 00:05:15,960
fully qualified domain name because if

117
00:05:15,960 --> 00:05:17,820
they store it as an IP

118
00:05:17,820 --> 00:05:19,560
and someone will notice the

119
00:05:19,560 --> 00:05:21,720
communication with this IP is suspicious

120
00:05:21,720 --> 00:05:23,820
it will be blocked on the firewall and

121
00:05:23,820 --> 00:05:25,860
that's the end of the story so basically

122
00:05:25,860 --> 00:05:29,100
all the work done before is lost for

123
00:05:29,100 --> 00:05:31,680
them so you always Advance group

124
00:05:31,680 --> 00:05:35,820
especially they will try to make some

125
00:05:35,820 --> 00:05:38,220
redundant ways how to connect to C2

126
00:05:38,220 --> 00:05:40,380
server uh

127
00:05:40,380 --> 00:05:43,500
other ways they achieve that is maybe

128
00:05:43,500 --> 00:05:45,479
for example instead of hard coding

129
00:05:45,479 --> 00:05:47,220
domain name of the C2 server in the

130
00:05:47,220 --> 00:05:49,740
malware for example getting that domain

131
00:05:49,740 --> 00:05:51,960
name from some external service

132
00:05:51,960 --> 00:05:55,020
usually legitimate one for example there

133
00:05:55,020 --> 00:05:57,539
are some malware families which are

134
00:05:57,539 --> 00:06:00,259
connecting to a legitimate

135
00:06:00,259 --> 00:06:03,720
cryptocurrency service asking about how

136
00:06:03,720 --> 00:06:05,520
much money was spent from a specific

137
00:06:05,520 --> 00:06:09,080
crypto wallet and this amount of money

138
00:06:09,080 --> 00:06:12,960
will determine which or what kind of

139
00:06:12,960 --> 00:06:14,880
domain will be generated

140
00:06:14,880 --> 00:06:17,160
so anytime they need to change C2 domain

141
00:06:17,160 --> 00:06:19,139
name they just reach out to this

142
00:06:19,139 --> 00:06:20,940
legitimate service ask about the

143
00:06:20,940 --> 00:06:23,819
currency amount and then use this amount

144
00:06:23,819 --> 00:06:27,500
to generate a new C2 domain

145
00:06:28,139 --> 00:06:30,060
other methods of generating domain names

146
00:06:30,060 --> 00:06:33,380
from Southern random characters or words

147
00:06:33,380 --> 00:06:37,620
and so on after they know finally the IP

148
00:06:37,620 --> 00:06:39,600
address of the C2 server there is

149
00:06:39,600 --> 00:06:41,220
communication happening between the

150
00:06:41,220 --> 00:06:44,460
infected host and the C2 server uh this

151
00:06:44,460 --> 00:06:46,500
communication usually is using some

152
00:06:46,500 --> 00:06:48,539
typical popular protocols on the

153
00:06:48,539 --> 00:06:50,819
internet and the most popular obviously

154
00:06:50,819 --> 00:06:54,539
are HTTP https mail protocols and also

155
00:06:54,539 --> 00:06:56,819
DNS DNS is probably one of the most

156
00:06:56,819 --> 00:06:57,840
popular

157
00:06:57,840 --> 00:07:00,660
and probably not that much inspected

158
00:07:00,660 --> 00:07:02,639
right most Security Solutions are

159
00:07:02,639 --> 00:07:04,560
focusing on inspecting HTTP traffic

160
00:07:04,560 --> 00:07:07,860
https traffic with decryption mail

161
00:07:07,860 --> 00:07:10,259
traffic with mail gateways but not too

162
00:07:10,259 --> 00:07:11,759
many solutions are focusing on

163
00:07:11,759 --> 00:07:13,919
inspecting DNS which is a very popular

164
00:07:13,919 --> 00:07:15,419
protocol

165
00:07:15,419 --> 00:07:19,259
so one of the ways how attackers avoid

166
00:07:19,259 --> 00:07:22,199
detection is to use DNS as a common and

167
00:07:22,199 --> 00:07:23,699
control

168
00:07:23,699 --> 00:07:26,759
protocol and this is done in form of

169
00:07:26,759 --> 00:07:29,280
sending DNS queries from infected host

170
00:07:29,280 --> 00:07:31,800
to the C2 server and then the query

171
00:07:31,800 --> 00:07:34,440
itself the name queried contained

172
00:07:34,440 --> 00:07:37,620
encoded information and then reply DNS

173
00:07:37,620 --> 00:07:40,919
reply from the C2 server can contain

174
00:07:40,919 --> 00:07:44,699
some data stored in different DNS

175
00:07:44,699 --> 00:07:48,180
records txt but also a records or any

176
00:07:48,180 --> 00:07:49,500
other record

177
00:07:49,500 --> 00:07:52,979
finally we have last phase actions and

178
00:07:52,979 --> 00:07:55,680
objectives attacks are done for a

179
00:07:55,680 --> 00:07:58,319
purpose it could be for example

180
00:07:58,319 --> 00:08:00,000
encrypting data and requesting around

181
00:08:00,000 --> 00:08:02,220
some it could be stealing sensitive

182
00:08:02,220 --> 00:08:04,979
information it could be having an impact

183
00:08:04,979 --> 00:08:07,740
on Business Services DNS is usually used

184
00:08:07,740 --> 00:08:10,319
for two things either having an impact

185
00:08:10,319 --> 00:08:13,819
because if DNS servers don't work

186
00:08:13,819 --> 00:08:16,680
the network doesn't work internal DNS

187
00:08:16,680 --> 00:08:18,539
doesn't work active directory doesn't

188
00:08:18,539 --> 00:08:21,240
work external DNS doesn't work external

189
00:08:21,240 --> 00:08:24,300
domain names doesn't work so in case of

190
00:08:24,300 --> 00:08:27,240
bank for example Bank services are not

191
00:08:27,240 --> 00:08:30,419
available or they can be used to steal

192
00:08:30,419 --> 00:08:33,000
information because this information the

193
00:08:33,000 --> 00:08:34,679
sensitive information can be hidden

194
00:08:34,679 --> 00:08:38,458
inside of DNS query and send through a

195
00:08:38,458 --> 00:08:41,700
DNS servers towards C2 server

196
00:08:41,700 --> 00:08:44,300
so that's a overview let's look at some

197
00:08:44,300 --> 00:08:47,279
real examples

198
00:08:47,279 --> 00:08:49,080
first one and we will start actually

199
00:08:49,080 --> 00:08:51,899
from quite Advanced ones and then I will

200
00:08:51,899 --> 00:08:53,839
show you more simpler

201
00:08:53,839 --> 00:08:56,399
this one is

202
00:08:56,399 --> 00:09:00,060
was used by a APT group called by

203
00:09:00,060 --> 00:09:02,000
Ukrainian assert

204
00:09:02,000 --> 00:09:05,100
uic0035 the malware is called invisible

205
00:09:05,100 --> 00:09:08,760
and this one which you see the

206
00:09:08,760 --> 00:09:10,260
screenshots of of the attachment

207
00:09:10,260 --> 00:09:13,440
actually which you see were detected in

208
00:09:13,440 --> 00:09:16,380
March this year during the Russian

209
00:09:16,380 --> 00:09:17,580
invasion

210
00:09:17,580 --> 00:09:19,440
so it was sent to one of the government

211
00:09:19,440 --> 00:09:22,140
officials the attachment contain

212
00:09:22,140 --> 00:09:25,680
actually the link to get data from

213
00:09:25,680 --> 00:09:28,740
external service and

214
00:09:28,740 --> 00:09:31,260
I will focus only the on the on the DNS

215
00:09:31,260 --> 00:09:34,399
part here uh the malware the invisible

216
00:09:34,399 --> 00:09:37,820
uh was seen also around two years ago

217
00:09:37,820 --> 00:09:40,380
also attacking Ukrainian government

218
00:09:40,380 --> 00:09:43,380
institutions military institutions and

219
00:09:43,380 --> 00:09:46,560
they like to use DNS because

220
00:09:46,560 --> 00:09:49,160
when they attack such institutions

221
00:09:49,160 --> 00:09:52,140
usually they have different segments of

222
00:09:52,140 --> 00:09:54,600
the networks some segments have internet

223
00:09:54,600 --> 00:09:56,820
connectivity some don't have internet

224
00:09:56,820 --> 00:09:59,399
connectivity and some are basically

225
00:09:59,399 --> 00:10:02,339
completely disconnected from any network

226
00:10:02,339 --> 00:10:07,019
uh if they will infect some hust in a

227
00:10:07,019 --> 00:10:10,080
segment which is let's say

228
00:10:10,080 --> 00:10:12,240
firewall from the internet right so

229
00:10:12,240 --> 00:10:14,040
basically there is network connectivity

230
00:10:14,040 --> 00:10:16,140
but there is no direct internet

231
00:10:16,140 --> 00:10:19,019
connection for example let's say this

232
00:10:19,019 --> 00:10:19,980
host

233
00:10:19,980 --> 00:10:22,980
cannot reach any internet IP addresses

234
00:10:22,980 --> 00:10:25,260
because basically several layers of

235
00:10:25,260 --> 00:10:27,620
firewalls are blocking this traffic

236
00:10:27,620 --> 00:10:30,120
uh still very often is there is

237
00:10:30,120 --> 00:10:32,820
possibility to connect with such cost

238
00:10:32,820 --> 00:10:34,560
and communicate with them

239
00:10:34,560 --> 00:10:38,339
so for example if this horse gets

240
00:10:38,339 --> 00:10:40,740
infected and wants to connect to the C2

241
00:10:40,740 --> 00:10:44,399
server it can do it over DNS by sending

242
00:10:44,399 --> 00:10:47,880
a DNS query to local DNS resolver so

243
00:10:47,880 --> 00:10:49,980
something like Microsoft DNS bind or

244
00:10:49,980 --> 00:10:52,200
whatever the victim is using

245
00:10:52,200 --> 00:10:55,500
then because DNS as a protocol it works

246
00:10:55,500 --> 00:10:57,839
as a proxy mechanism so basically this

247
00:10:57,839 --> 00:11:01,320
resolver is not just for warding the

248
00:11:01,320 --> 00:11:02,339
packets

249
00:11:02,339 --> 00:11:05,220
from clients to the server now it is

250
00:11:05,220 --> 00:11:08,100
basically based on the client request it

251
00:11:08,100 --> 00:11:10,500
is creating a new DNS query and it is

252
00:11:10,500 --> 00:11:12,600
sending it to the authoritative server

253
00:11:12,600 --> 00:11:14,760
which in this case is controlled by the

254
00:11:14,760 --> 00:11:15,779
attacker

255
00:11:15,779 --> 00:11:19,380
uh then the server is responding

256
00:11:19,380 --> 00:11:23,160
sending the reply to DNS resolver and

257
00:11:23,160 --> 00:11:26,100
then this DNS resolver will supply DNS

258
00:11:26,100 --> 00:11:28,079
reply to the client so basically even

259
00:11:28,079 --> 00:11:29,399
though the client has no internet

260
00:11:29,399 --> 00:11:32,160
connection it still can connect to

261
00:11:32,160 --> 00:11:33,079
internet

262
00:11:33,079 --> 00:11:36,240
uh but to to other hosts on the internet

263
00:11:36,240 --> 00:11:39,480
and have bi-directional communication

264
00:11:39,480 --> 00:11:42,959
uh they used their very own DNS

265
00:11:42,959 --> 00:11:44,579
tunneling mechanics so they didn't use

266
00:11:44,579 --> 00:11:46,079
any open source tools to do that

267
00:11:46,079 --> 00:11:48,360
basically they write the code it's an

268
00:11:48,360 --> 00:11:50,640
apt group backed by government so they

269
00:11:50,640 --> 00:11:52,800
have time money resources to do that

270
00:11:52,800 --> 00:11:55,459
they don't need to go the easy way

271
00:11:55,459 --> 00:11:58,140
they encoded data

272
00:11:58,140 --> 00:12:01,940
uh Indiana's quarry with base 32

273
00:12:01,940 --> 00:12:04,560
encoding with custom alphabet so it's

274
00:12:04,560 --> 00:12:06,839
not a standard base 32 and this is

275
00:12:06,839 --> 00:12:08,820
typical for apt groups they will not use

276
00:12:08,820 --> 00:12:12,060
any simple encoding behind such as

277
00:12:12,060 --> 00:12:15,839
base64 or hex which are widely available

278
00:12:15,839 --> 00:12:18,060
in the scripting languages they usually

279
00:12:18,060 --> 00:12:20,220
use base 32 because of the characters

280
00:12:20,220 --> 00:12:24,480
which better fit DNS rfcs and usually

281
00:12:24,480 --> 00:12:27,240
they will use custom alphabet not as

282
00:12:27,240 --> 00:12:31,640
standard by 32 alphabet uh

283
00:12:31,640 --> 00:12:34,260
let's look at another example in more

284
00:12:34,260 --> 00:12:37,620
detail here we have an attack by apt-34

285
00:12:37,620 --> 00:12:41,640
Group which is uh Iranian apt group

286
00:12:41,640 --> 00:12:44,100
and here we have example from this here

287
00:12:44,100 --> 00:12:46,980
of the attack targeting Jordanian

288
00:12:46,980 --> 00:12:48,300
government

289
00:12:48,300 --> 00:12:50,399
there was an email sent to government

290
00:12:50,399 --> 00:12:51,620
official

291
00:12:51,620 --> 00:12:55,200
the sender was pretending to be an I.T

292
00:12:55,200 --> 00:12:57,120
employee so basically first name last

293
00:12:57,120 --> 00:12:59,540
name was of the real it

294
00:12:59,540 --> 00:13:03,180
employee of course the email itself was

295
00:13:03,180 --> 00:13:05,100
not proper one it was some external

296
00:13:05,100 --> 00:13:07,820
outlook.com I believe it was the domain

297
00:13:07,820 --> 00:13:11,220
it was also interesting to see that how

298
00:13:11,220 --> 00:13:13,620
they send this email you will not see it

299
00:13:13,620 --> 00:13:15,120
here but

300
00:13:15,120 --> 00:13:16,500
uh

301
00:13:16,500 --> 00:13:18,959
the original email which is quoted here

302
00:13:18,959 --> 00:13:21,060
the original email was sent without

303
00:13:21,060 --> 00:13:23,519
attachment so it was the email was

304
00:13:23,519 --> 00:13:25,980
saying please uh fill the attached form

305
00:13:25,980 --> 00:13:28,320
but actually there was no attachment and

306
00:13:28,320 --> 00:13:29,820
there was no link

307
00:13:29,820 --> 00:13:31,860
so the email itself was not that

308
00:13:31,860 --> 00:13:33,300
suspicious because there was nothing

309
00:13:33,300 --> 00:13:36,779
which could harm the user

310
00:13:36,779 --> 00:13:38,940
a few hours later there was a second

311
00:13:38,940 --> 00:13:41,820
mail email to this employee sorry I

312
00:13:41,820 --> 00:13:43,680
forgot to attach attachment right so it

313
00:13:43,680 --> 00:13:46,740
was like pretending to to do typical

314
00:13:46,740 --> 00:13:51,200
mistake in companies

315
00:13:51,360 --> 00:13:54,360
uh attachment was an Excel file a

316
00:13:54,360 --> 00:13:57,300
malicious Excel file which was

317
00:13:57,300 --> 00:13:59,760
containing Visual Basic macro

318
00:13:59,760 --> 00:14:02,160
and interesting from my perspective from

319
00:14:02,160 --> 00:14:05,399
DNS perspective was that every major

320
00:14:05,399 --> 00:14:09,180
step in this macro was reported to C2

321
00:14:09,180 --> 00:14:13,500
server via DNS query so every time they

322
00:14:13,500 --> 00:14:16,260
achieve a major step in the in the macro

323
00:14:16,260 --> 00:14:18,959
they send a DNS query to C2 server which

324
00:14:18,959 --> 00:14:22,200
was basically very simple one saying we

325
00:14:22,200 --> 00:14:24,300
are at phase one we are at phase two we

326
00:14:24,300 --> 00:14:26,220
are at phase three so if anything will

327
00:14:26,220 --> 00:14:28,560
go wrong they know at which point

328
00:14:28,560 --> 00:14:31,740
Defenders for example have stopped uh

329
00:14:31,740 --> 00:14:33,180
the actions

330
00:14:33,180 --> 00:14:37,320
this is example of such DNS query uh so

331
00:14:37,320 --> 00:14:39,600
basically quite short one not very

332
00:14:39,600 --> 00:14:42,480
suspicious uh

333
00:14:42,480 --> 00:14:45,360
it was containing an ID of the step and

334
00:14:45,360 --> 00:14:48,300
some random number because uh in case of

335
00:14:48,300 --> 00:14:50,940
DNS you need to make sure that any query

336
00:14:50,940 --> 00:14:53,880
you send as an attacker cannot be

337
00:14:53,880 --> 00:14:56,820
answered from the cache by the local DNS

338
00:14:56,820 --> 00:14:58,560
resolver because if you get the answer

339
00:14:58,560 --> 00:15:01,320
from the cache it means the query will

340
00:15:01,320 --> 00:15:04,380
not go further will not go to the final

341
00:15:04,380 --> 00:15:07,079
authoritative DNS so every query during

342
00:15:07,079 --> 00:15:11,060
DNS tunneling has to be unique

343
00:15:11,160 --> 00:15:12,540
uh

344
00:15:12,540 --> 00:15:15,300
also interesting was how they sent the

345
00:15:15,300 --> 00:15:17,940
DNS queries normally you use either

346
00:15:17,940 --> 00:15:21,480
nslookup or some kind of function or API

347
00:15:21,480 --> 00:15:24,839
request to resolve name to IP

348
00:15:24,839 --> 00:15:28,079
in this case though they use as you see

349
00:15:28,079 --> 00:15:30,779
win32 pink status function

350
00:15:30,779 --> 00:15:33,480
why they do that because sometimes some

351
00:15:33,480 --> 00:15:36,959
EDR systems might be counting how many

352
00:15:36,959 --> 00:15:40,320
queries is sending a specific process

353
00:15:40,320 --> 00:15:42,120
if it's sending a lot of queries it

354
00:15:42,120 --> 00:15:44,339
might be suspicious Behavior right

355
00:15:44,339 --> 00:15:47,279
but if they do that it's not that

356
00:15:47,279 --> 00:15:50,639
suspicious and with every pink actually

357
00:15:50,639 --> 00:15:53,100
there is the end not with every icmp

358
00:15:53,100 --> 00:15:55,500
packet but with every call to this

359
00:15:55,500 --> 00:15:57,720
function the resolving function will be

360
00:15:57,720 --> 00:15:59,279
used because if you do like Ping

361
00:15:59,279 --> 00:16:01,920
google.com basically a DNS query is sent

362
00:16:01,920 --> 00:16:03,120
in the background

363
00:16:03,120 --> 00:16:06,060
uh so this is how they avoid being

364
00:16:06,060 --> 00:16:10,320
detected by uh some functions of vdr

365
00:16:10,320 --> 00:16:12,839
also there was an anti-sandbox function

366
00:16:12,839 --> 00:16:15,720
a very simple one before the Excel was

367
00:16:15,720 --> 00:16:17,699
dropping malicious content to the disk

368
00:16:17,699 --> 00:16:21,480
it would check if a mouse is connected

369
00:16:21,480 --> 00:16:23,459
to this machine because if there is no

370
00:16:23,459 --> 00:16:25,860
mouse that's suspicious most likely the

371
00:16:25,860 --> 00:16:28,199
system is running in the sandbox if

372
00:16:28,199 --> 00:16:30,540
there is a mouse connected most likely

373
00:16:30,540 --> 00:16:32,699
it's not but of course it's a just of

374
00:16:32,699 --> 00:16:34,380
the one of the methods

375
00:16:34,380 --> 00:16:37,980
uh an Excel file contain the back door

376
00:16:37,980 --> 00:16:40,500
which was stored in an interesting way

377
00:16:40,500 --> 00:16:43,199
because in the Excel there was a user

378
00:16:43,199 --> 00:16:45,839
form so the form to be filled by user

379
00:16:45,839 --> 00:16:49,860
and the name of the text field text

380
00:16:49,860 --> 00:16:50,959
field

381
00:16:50,959 --> 00:16:53,759
basically contained base64 encoded

382
00:16:53,759 --> 00:16:55,079
malware

383
00:16:55,079 --> 00:16:57,360
so it was not very typical way to look

384
00:16:57,360 --> 00:16:59,899
for the malicious code

385
00:16:59,899 --> 00:17:03,180
the factor itself finally was not run by

386
00:17:03,180 --> 00:17:07,079
the Excel but it was uh written to the

387
00:17:07,079 --> 00:17:09,179
scheduler so basically the scheduler

388
00:17:09,179 --> 00:17:11,220
would finally run the process not the

389
00:17:11,220 --> 00:17:12,839
excellent cell because again that would

390
00:17:12,839 --> 00:17:16,079
be a little bit suspicious

391
00:17:16,079 --> 00:17:18,599
about the back door saitama bagdar which

392
00:17:18,599 --> 00:17:21,599
was dropped so that was.net binary able

393
00:17:21,599 --> 00:17:24,240
to execute some pre-coded comment but

394
00:17:24,240 --> 00:17:26,880
also custom comments and also able to

395
00:17:26,880 --> 00:17:29,400
download some new tank malicious plugins

396
00:17:29,400 --> 00:17:31,640
from the C2 server

397
00:17:31,640 --> 00:17:35,640
by the way some comments were as I said

398
00:17:35,640 --> 00:17:39,120
hardcoded recorded and these are

399
00:17:39,120 --> 00:17:42,720
examples of such comments so you can see

400
00:17:42,720 --> 00:17:45,059
that they did some reconnaissance before

401
00:17:45,059 --> 00:17:48,380
because the malware contained

402
00:17:48,380 --> 00:17:51,120
precoded information such as names of

403
00:17:51,120 --> 00:17:54,660
the servers to resolve or IP addresses

404
00:17:54,660 --> 00:17:57,179
of the servers to check if the malware

405
00:17:57,179 --> 00:17:59,940
has connectivity to for example so

406
00:17:59,940 --> 00:18:02,460
definitely before this attack they did

407
00:18:02,460 --> 00:18:04,140
some reconnaissance they knew what are

408
00:18:04,140 --> 00:18:06,840
the important costs and it was

409
00:18:06,840 --> 00:18:08,640
hard-coded in the malware

410
00:18:08,640 --> 00:18:10,799
here we have example of C2 over DNS

411
00:18:10,799 --> 00:18:12,000
communication

412
00:18:12,000 --> 00:18:14,400
so it doesn't look very suspicious it's

413
00:18:14,400 --> 00:18:17,280
like not a very long query they are

414
00:18:17,280 --> 00:18:18,780
changing domain names so it's not like

415
00:18:18,780 --> 00:18:21,179
they sent a lot of queries to one domain

416
00:18:21,179 --> 00:18:23,520
you have one domain here another here

417
00:18:23,520 --> 00:18:26,220
another here they were using three

418
00:18:26,220 --> 00:18:28,440
domains and randomly choosing them with

419
00:18:28,440 --> 00:18:29,700
each query

420
00:18:29,700 --> 00:18:33,539
it's not very long it's even above below

421
00:18:33,539 --> 00:18:36,240
average length of Internet queries so

422
00:18:36,240 --> 00:18:38,600
not too suspicious

423
00:18:38,600 --> 00:18:42,179
each query contains a counter so here

424
00:18:42,179 --> 00:18:47,520
you you see nrj NRC and R6 that's a

425
00:18:47,520 --> 00:18:50,340
counter the counter is used to for

426
00:18:50,340 --> 00:18:52,140
example check if all the queries are

427
00:18:52,140 --> 00:18:55,020
reach the C2 server it is also used to

428
00:18:55,020 --> 00:18:57,120
make the query unique because it's a

429
00:18:57,120 --> 00:18:59,880
counter it doesn't look like you know

430
00:18:59,880 --> 00:19:01,740
one two three four because it's actually

431
00:19:01,740 --> 00:19:05,160
base 36 encoded with custom alphabet

432
00:19:05,160 --> 00:19:07,679
that's why it looks a little bit strange

433
00:19:07,679 --> 00:19:10,260
let's say but it is a counter and this

434
00:19:10,260 --> 00:19:12,419
counter lighter is also used to encode

435
00:19:12,419 --> 00:19:17,580
the content each value of the counter is

436
00:19:17,580 --> 00:19:21,059
used to set up a table to transcode

437
00:19:21,059 --> 00:19:22,620
letters

438
00:19:22,620 --> 00:19:25,440
so this is how they basically encoded

439
00:19:25,440 --> 00:19:26,460
the

440
00:19:26,460 --> 00:19:29,640
the information in the uh situ

441
00:19:29,640 --> 00:19:30,660
communication

442
00:19:30,660 --> 00:19:33,059
another example

443
00:19:33,059 --> 00:19:35,600
uh lyceum group

444
00:19:35,600 --> 00:19:38,820
also quite fresh from March they were

445
00:19:38,820 --> 00:19:40,980
attacking for example Israeli companies

446
00:19:40,980 --> 00:19:43,140
Israeli energy companies and they were

447
00:19:43,140 --> 00:19:46,440
using uh topics such as Russian war

448
00:19:46,440 --> 00:19:49,440
crimes in Ukraine so this is example

449
00:19:49,440 --> 00:19:52,860
email and the key thing here is is the

450
00:19:52,860 --> 00:19:53,580
link

451
00:19:53,580 --> 00:19:55,860
which was used basically to download

452
00:19:55,860 --> 00:19:58,200
malicious Word document onto the

453
00:19:58,200 --> 00:20:00,299
computer of the victim

454
00:20:00,299 --> 00:20:04,580
after opening this document the

455
00:20:04,580 --> 00:20:07,140
word would be macro would be dropping

456
00:20:07,140 --> 00:20:09,720
the malware in the startup folder so

457
00:20:09,720 --> 00:20:12,179
basically it will not run directly the

458
00:20:12,179 --> 00:20:14,280
malware but after the computer is

459
00:20:14,280 --> 00:20:15,919
restarted then the malware will be

460
00:20:15,919 --> 00:20:20,960
executed and it was using in similar way

461
00:20:20,960 --> 00:20:23,760
C2 over DNS

462
00:20:23,760 --> 00:20:27,620
this is how it was done

463
00:20:28,799 --> 00:20:32,640
actually it could do C2 over DNS but

464
00:20:32,640 --> 00:20:36,299
also over HTTP so usually

465
00:20:36,299 --> 00:20:38,520
really Advanced groups they will try to

466
00:20:38,520 --> 00:20:40,799
have a backup connectivity if something

467
00:20:40,799 --> 00:20:42,360
will be blocked they want to have

468
00:20:42,360 --> 00:20:44,220
additional method like I said in the

469
00:20:44,220 --> 00:20:46,980
very beginning they need to have ways to

470
00:20:46,980 --> 00:20:49,460
make sure connectivity will be achieved

471
00:20:49,460 --> 00:20:52,080
this is also kind of sorry this is also

472
00:20:52,080 --> 00:20:54,179
kind of a problem because seat over DNS

473
00:20:54,179 --> 00:20:56,400
is different than C2 over HTTP so how

474
00:20:56,400 --> 00:20:58,620
they make it easier for them basically

475
00:20:58,620 --> 00:21:01,860
they send comments in the files and they

476
00:21:01,860 --> 00:21:03,960
have just a file transmission method

477
00:21:03,960 --> 00:21:07,380
over DNS or over HTTP so it was like two

478
00:21:07,380 --> 00:21:10,520
layers separated

479
00:21:11,000 --> 00:21:12,900
uh

480
00:21:12,900 --> 00:21:16,320
they use a queries to exfiltrate data

481
00:21:16,320 --> 00:21:19,200
and txt replies for command and control

482
00:21:19,200 --> 00:21:23,520
communication again base 32 sorry base

483
00:21:23,520 --> 00:21:26,640
32 encoding with some custom alphabets

484
00:21:26,640 --> 00:21:28,740
like you see here normally base 32

485
00:21:28,740 --> 00:21:31,740
alphabet is like ABCD and so on here you

486
00:21:31,740 --> 00:21:33,900
can say it's completely different

487
00:21:33,900 --> 00:21:37,080
again several domains used and in this

488
00:21:37,080 --> 00:21:39,240
case they were just a little bit simpler

489
00:21:39,240 --> 00:21:42,179
they were using nslookup and DNS API

490
00:21:42,179 --> 00:21:44,820
calls to resolve domain names to IP

491
00:21:44,820 --> 00:21:46,559
address

492
00:21:46,559 --> 00:21:50,520
so that's the before examples were quiet

493
00:21:50,520 --> 00:21:53,820
uh Advanced here we have an example of

494
00:21:53,820 --> 00:21:56,760
Simple banking Trojan uh

495
00:21:56,760 --> 00:21:59,100
well maybe not that simple but a banking

496
00:21:59,100 --> 00:22:01,260
Trojan so a malware which is attacking

497
00:22:01,260 --> 00:22:04,080
individual users basically not very well

498
00:22:04,080 --> 00:22:06,600
defended right so one would could expect

499
00:22:06,600 --> 00:22:09,419
it will use Simple techniques but in

500
00:22:09,419 --> 00:22:11,700
case of flobot actually from a DNS

501
00:22:11,700 --> 00:22:14,820
perspective they were quite advanced

502
00:22:14,820 --> 00:22:18,059
because what we can see here is they

503
00:22:18,059 --> 00:22:20,640
were using for example domain generation

504
00:22:20,640 --> 00:22:24,900
algorithm DGA to resolve C2 address to

505
00:22:24,900 --> 00:22:28,320
the IP address for example

506
00:22:28,320 --> 00:22:31,980
domain used by them could look like this

507
00:22:31,980 --> 00:22:35,580
one so randomly selected characters in

508
00:22:35,580 --> 00:22:38,460
this case in REO domain so that was a

509
00:22:38,460 --> 00:22:43,200
domain created from generated by some

510
00:22:43,200 --> 00:22:45,480
kind of algorith they were using

511
00:22:45,480 --> 00:22:47,820
so it is not easy to predict what would

512
00:22:47,820 --> 00:22:50,340
be the next domain unless you know the

513
00:22:50,340 --> 00:22:51,480
algorithm

514
00:22:51,480 --> 00:22:54,960
they were using for example command and

515
00:22:54,960 --> 00:22:56,940
control over DNS

516
00:22:56,940 --> 00:22:59,220
but actually they were also using DNS

517
00:22:59,220 --> 00:23:02,940
over https so it was C2 over DNS over

518
00:23:02,940 --> 00:23:05,600
https

519
00:23:05,640 --> 00:23:07,620
um

520
00:23:07,620 --> 00:23:10,080
is it useful for the attackers

521
00:23:10,080 --> 00:23:12,600
when attacking Enterprise not

522
00:23:12,600 --> 00:23:15,120
necessarily depending on the

523
00:23:15,120 --> 00:23:18,000
configuration but definitely for example

524
00:23:18,000 --> 00:23:20,340
if they attack individual user which

525
00:23:20,340 --> 00:23:22,020
could potentially use some kind of

526
00:23:22,020 --> 00:23:24,120
secure DNS service

527
00:23:24,120 --> 00:23:27,240
open Open Source One or like open

528
00:23:27,240 --> 00:23:29,159
resolver or maybe their provider is

529
00:23:29,159 --> 00:23:31,320
providing something then when they use

530
00:23:31,320 --> 00:23:34,100
DNS over https and connect

531
00:23:34,100 --> 00:23:38,159
to Google dns.google or cloudflare DNS

532
00:23:38,159 --> 00:23:40,260
then basically they can bypass such

533
00:23:40,260 --> 00:23:41,880
Security in a system

534
00:23:41,880 --> 00:23:43,980
in Enterprise it's very easy to block

535
00:23:43,980 --> 00:23:46,440
actually because it it is enough to

536
00:23:46,440 --> 00:23:50,159
block on firewalls any IP packet to 888

537
00:23:50,159 --> 00:23:53,700
or 1111 and basically you are making

538
00:23:53,700 --> 00:23:57,140
enable such malware to communicate with

539
00:23:57,140 --> 00:24:01,580
Doh resolvers public most popular public

540
00:24:01,580 --> 00:24:06,299
Doh resolvers so usually if attackers

541
00:24:06,299 --> 00:24:09,179
are using Doh it's rather in attacks

542
00:24:09,179 --> 00:24:10,400
against

543
00:24:10,400 --> 00:24:13,320
individual users or let's say simple

544
00:24:13,320 --> 00:24:15,320
targets

545
00:24:15,320 --> 00:24:18,720
uh base 32 and coding

546
00:24:18,720 --> 00:24:21,419
completely untypical in in such simple

547
00:24:21,419 --> 00:24:24,240
malware usually they would use hex or

548
00:24:24,240 --> 00:24:27,900
base64 they were using base64 to encode

549
00:24:27,900 --> 00:24:30,120
data in txt replies

550
00:24:30,120 --> 00:24:33,840
but uh I think it's a first simple model

551
00:24:33,840 --> 00:24:36,120
which is using base 32 which I have seen

552
00:24:36,120 --> 00:24:39,360
so far in the last few years

553
00:24:39,360 --> 00:24:41,640
also they were actually using encryption

554
00:24:41,640 --> 00:24:43,500
for command and control communication so

555
00:24:43,500 --> 00:24:48,860
also not that typical for simple malware

556
00:24:50,159 --> 00:24:53,340
another example this is a Linux backdoor

557
00:24:53,340 --> 00:24:55,460
called B1

558
00:24:55,460 --> 00:24:57,140
txr20

559
00:24:57,140 --> 00:25:00,780
which is also using seat over DNS

560
00:25:00,780 --> 00:25:04,500
this one is exploiting lock for J

561
00:25:04,500 --> 00:25:05,820
vulnerability

562
00:25:05,820 --> 00:25:07,860
so basically it is scanning the network

563
00:25:07,860 --> 00:25:11,820
if some host contain a vulnerable host

564
00:25:11,820 --> 00:25:13,799
they will use this vulnerability to to

565
00:25:13,799 --> 00:25:17,220
to install the bug door uh the bugger

566
00:25:17,220 --> 00:25:18,840
has possibility to basically you know

567
00:25:18,840 --> 00:25:20,520
execute commands download new malicious

568
00:25:20,520 --> 00:25:23,760
plugins install socks 5 proxy there was

569
00:25:23,760 --> 00:25:25,559
possibility to install a rootkit

570
00:25:25,559 --> 00:25:28,200
exfiltrate data

571
00:25:28,200 --> 00:25:31,679
those those actions and how

572
00:25:31,679 --> 00:25:34,440
communication was achieved here so

573
00:25:34,440 --> 00:25:36,059
uh

574
00:25:36,059 --> 00:25:38,520
basic connection the primary connection

575
00:25:38,520 --> 00:25:41,880
was a direct one which means a malware

576
00:25:41,880 --> 00:25:44,460
will encode data

577
00:25:44,460 --> 00:25:47,520
uh before encoding it would also

578
00:25:47,520 --> 00:25:49,799
compress the data encrypt the data then

579
00:25:49,799 --> 00:25:52,260
base 64 encode and send it as a DNS

580
00:25:52,260 --> 00:25:56,580
query but directly to

581
00:25:56,940 --> 00:25:59,460
sorry Priority One was a connection to

582
00:25:59,460 --> 00:26:01,860
public DNS as you see so quad 8 so

583
00:26:01,860 --> 00:26:05,340
Google DNS uh

584
00:26:05,340 --> 00:26:07,679
a little bit untypical because it was

585
00:26:07,679 --> 00:26:11,880
sent over TCP normally UDP queries UDP

586
00:26:11,880 --> 00:26:14,700
protocol is used to send DNS queries

587
00:26:14,700 --> 00:26:17,220
here TCP was used

588
00:26:17,220 --> 00:26:19,500
but anyway this suggests that this

589
00:26:19,500 --> 00:26:22,200
malware is not targeting companies it's

590
00:26:22,200 --> 00:26:24,600
not targeting Enterprises because in the

591
00:26:24,600 --> 00:26:25,340
Enterprise

592
00:26:25,340 --> 00:26:28,940
no host will have ability to contact

593
00:26:28,940 --> 00:26:33,120
uh basic external DNS Services there is

594
00:26:33,120 --> 00:26:34,980
a requirement that every computer on the

595
00:26:34,980 --> 00:26:38,039
network should use a local DNS Port 53

596
00:26:38,039 --> 00:26:41,460
is blocked basically on the firewalls so

597
00:26:41,460 --> 00:26:43,500
this if this is the first priority it

598
00:26:43,500 --> 00:26:45,179
means this malware is not targeting

599
00:26:45,179 --> 00:26:48,299
companies but rather individual users

600
00:26:48,299 --> 00:26:50,520
maybe home routers for example because

601
00:26:50,520 --> 00:26:52,320
this is actually a Linux backed all

602
00:26:52,320 --> 00:26:55,020
right so how many Linux computers are

603
00:26:55,020 --> 00:26:57,720
used at home rather we talk about CCTV

604
00:26:57,720 --> 00:27:00,779
cameras or home routers for example

605
00:27:00,779 --> 00:27:03,179
there was some backup paths so could be

606
00:27:03,179 --> 00:27:05,760
a direct connection over DNS to C2

607
00:27:05,760 --> 00:27:08,539
server which is also very

608
00:27:08,539 --> 00:27:12,059
untypical for let's say

609
00:27:12,059 --> 00:27:15,659
malware targeting companies and as a

610
00:27:15,659 --> 00:27:17,940
third option there was a backup to local

611
00:27:17,940 --> 00:27:21,779
DNS resolver this method is typically

612
00:27:21,779 --> 00:27:23,400
used by attackers when they attack

613
00:27:23,400 --> 00:27:26,460
companies they will use C2 over DNS by

614
00:27:26,460 --> 00:27:29,400
using local DNS resolver most typically

615
00:27:29,400 --> 00:27:33,360
Microsoft DNS plus some bind servers

616
00:27:33,360 --> 00:27:35,539
foreign

617
00:27:36,559 --> 00:27:39,620
sometimes DNS is used in very simple way

618
00:27:39,620 --> 00:27:43,100
but not the one which was designed for

619
00:27:43,100 --> 00:27:46,200
for example here we have example of

620
00:27:46,200 --> 00:27:49,140
malware which is distributed with crack

621
00:27:49,140 --> 00:27:51,240
copies of some games

622
00:27:51,240 --> 00:27:55,159
and they basically try to use

623
00:27:55,159 --> 00:27:58,559
hacked computers to mine cryptocurrency

624
00:27:58,559 --> 00:28:00,659
they required successful with that

625
00:28:00,659 --> 00:28:02,340
because they mined at least two million

626
00:28:02,340 --> 00:28:03,860
dollars

627
00:28:03,860 --> 00:28:07,559
and how they use DNS here if the malware

628
00:28:07,559 --> 00:28:09,299
want to check if there is a new

629
00:28:09,299 --> 00:28:12,000
malicious uh if there is a new version

630
00:28:12,000 --> 00:28:14,100
of this malware basically on the C2

631
00:28:14,100 --> 00:28:17,039
server uh it needed again information

632
00:28:17,039 --> 00:28:19,500
about IP address of this server and

633
00:28:19,500 --> 00:28:21,779
what's the new version if there is a new

634
00:28:21,779 --> 00:28:24,539
version so how they did that they were

635
00:28:24,539 --> 00:28:26,700
asking about

636
00:28:26,700 --> 00:28:30,840
such DNS entry txt record type

637
00:28:30,840 --> 00:28:33,539
and in the txt reply they had an IP

638
00:28:33,539 --> 00:28:35,640
address but as you see it was encoded so

639
00:28:35,640 --> 00:28:38,159
it was not normal use of DNS where you

640
00:28:38,159 --> 00:28:40,260
ask about an a record and you get an IP

641
00:28:40,260 --> 00:28:42,360
address here they ask about txt record

642
00:28:42,360 --> 00:28:46,260
and in this txt record they have an IP

643
00:28:46,260 --> 00:28:49,140
address encoded port on these servers to

644
00:28:49,140 --> 00:28:51,720
connect to and also the version the the

645
00:28:51,720 --> 00:28:54,000
current version of the malware on This

646
00:28:54,000 --> 00:28:55,919
Server so they were asking about this

647
00:28:55,919 --> 00:28:58,380
record regularly just to check if there

648
00:28:58,380 --> 00:29:00,120
is a new version if there is they were

649
00:29:00,120 --> 00:29:01,740
connecting to This Server to this port

650
00:29:01,740 --> 00:29:06,320
and downloading new uh new malware

651
00:29:06,860 --> 00:29:11,220
uh also interesting case uh not maybe

652
00:29:11,220 --> 00:29:13,860
from DNS perspective actually but uh the

653
00:29:13,860 --> 00:29:15,900
first malware was seen which was

654
00:29:15,900 --> 00:29:18,659
targeting AWS Lambda serverless

655
00:29:18,659 --> 00:29:20,760
functionality

656
00:29:20,760 --> 00:29:24,360
uh this malware was written in go

657
00:29:24,360 --> 00:29:27,059
it was used again to mine cryptocurrency

658
00:29:27,059 --> 00:29:28,559
on

659
00:29:28,559 --> 00:29:33,299
Lambda instances and to avoid using

660
00:29:33,299 --> 00:29:36,179
local DNS resolver in AWS which could

661
00:29:36,179 --> 00:29:38,580
potentially block something they were

662
00:29:38,580 --> 00:29:42,059
using Doh or DNS over https to resolve

663
00:29:42,059 --> 00:29:45,000
C2 domain by using Google resolver

664
00:29:45,000 --> 00:29:47,220
Google resolver is completely insecure

665
00:29:47,220 --> 00:29:49,320
basically it will resolve anything so

666
00:29:49,320 --> 00:29:50,940
that's why attackers like to use it

667
00:29:50,940 --> 00:29:53,640
because they then they can be sure that

668
00:29:53,640 --> 00:29:55,559
the domain name will be resolved to an

669
00:29:55,559 --> 00:29:58,919
IP address Google doesn't block anything

670
00:29:58,919 --> 00:30:00,720
um

671
00:30:00,720 --> 00:30:03,179
so this is how they were resolving C2

672
00:30:03,179 --> 00:30:06,360
domain name uh connection over https DNS

673
00:30:06,360 --> 00:30:08,640
google.com resolve so basically this is

674
00:30:08,640 --> 00:30:11,279
Doh protocol and then you have a C2

675
00:30:11,279 --> 00:30:14,520
domain name and the query type they are

676
00:30:14,520 --> 00:30:17,279
also using the second uh also very

677
00:30:17,279 --> 00:30:20,279
popular open resolver from cloudflare

678
00:30:20,279 --> 00:30:22,399
basically attackers like to use those

679
00:30:22,399 --> 00:30:26,340
because every Google Chrome every

680
00:30:26,340 --> 00:30:29,880
Mozilla Firefox will issue a lot of

681
00:30:29,880 --> 00:30:33,539
queries over the uh they will try to

682
00:30:33,539 --> 00:30:36,539
connect to Google to cloud3 DNS over Doh

683
00:30:36,539 --> 00:30:38,940
and start resolving DNS using those

684
00:30:38,940 --> 00:30:41,460
functionalities so in your networks

685
00:30:41,460 --> 00:30:43,200
basically you will see a lot of

686
00:30:43,200 --> 00:30:45,960
communication or communication attempts

687
00:30:45,960 --> 00:30:48,600
to cloudflare DNS and to Google DNS so

688
00:30:48,600 --> 00:30:50,100
if you see that it's not suspicious

689
00:30:50,100 --> 00:30:52,500
right which means it's a perfect way for

690
00:30:52,500 --> 00:30:55,039
the attacker

691
00:30:55,320 --> 00:30:58,220
uh

692
00:30:58,440 --> 00:31:02,340
another interesting use case its

693
00:31:02,340 --> 00:31:07,080
dependency confusion Mr Alex Pearson I

694
00:31:07,080 --> 00:31:09,120
believe it was this year beginning of

695
00:31:09,120 --> 00:31:11,940
this year or end of last year uh he did

696
00:31:11,940 --> 00:31:17,340
interesting research regarding how

697
00:31:17,340 --> 00:31:21,059
how software packages are downloaded by

698
00:31:21,059 --> 00:31:24,059
uh software developing tools because you

699
00:31:24,059 --> 00:31:26,880
know developers like to reuse software

700
00:31:26,880 --> 00:31:29,039
modules written by them or by anybody

701
00:31:29,039 --> 00:31:31,919
else so when they create their code they

702
00:31:31,919 --> 00:31:34,799
reuse different software modules from

703
00:31:34,799 --> 00:31:37,200
written for example by someone else and

704
00:31:37,200 --> 00:31:39,179
those modules are downloaded from

705
00:31:39,179 --> 00:31:42,059
software repositories either private one

706
00:31:42,059 --> 00:31:44,580
of the company or the public one

707
00:31:44,580 --> 00:31:48,899
and uh Alex basically discovered that

708
00:31:48,899 --> 00:31:50,100
the way

709
00:31:50,100 --> 00:31:52,919
how decisions make from where to get the

710
00:31:52,919 --> 00:31:55,860
software module it's not very clear and

711
00:31:55,860 --> 00:31:57,779
sometimes the software will actually

712
00:31:57,779 --> 00:31:59,880
reach first to the public repository to

713
00:31:59,880 --> 00:32:03,480
get the module so if you put a module in

714
00:32:03,480 --> 00:32:05,039
the public repository which will have

715
00:32:05,039 --> 00:32:07,200
the same name as the one in the private

716
00:32:07,200 --> 00:32:09,179
repository of the company you have a big

717
00:32:09,179 --> 00:32:11,820
chance that your code will be used by

718
00:32:11,820 --> 00:32:14,760
the developer so

719
00:32:14,760 --> 00:32:19,799
he did some research get the names of

720
00:32:19,799 --> 00:32:22,500
the packages used by some companies such

721
00:32:22,500 --> 00:32:25,559
as Microsoft Netflix PayPal Uber and so

722
00:32:25,559 --> 00:32:27,960
on which was not very hard because those

723
00:32:27,960 --> 00:32:29,640
names could be found in the public web

724
00:32:29,640 --> 00:32:30,840
pages

725
00:32:30,840 --> 00:32:33,419
and then he put his code in public

726
00:32:33,419 --> 00:32:37,039
repositories under the same names

727
00:32:37,380 --> 00:32:39,659
that information that his code was run

728
00:32:39,659 --> 00:32:43,740
in these companies he put a small code

729
00:32:43,740 --> 00:32:46,020
which would exfiltrate over DNS

730
00:32:46,020 --> 00:32:48,840
information about current working

731
00:32:48,840 --> 00:32:53,279
directory operating system user which

732
00:32:53,279 --> 00:32:56,640
executed the code some very basic

733
00:32:56,640 --> 00:32:58,380
information

734
00:32:58,380 --> 00:33:01,380
and then he put those packages in public

735
00:33:01,380 --> 00:33:03,059
software depositories

736
00:33:03,059 --> 00:33:05,100
and he discovered that basically in

737
00:33:05,100 --> 00:33:07,740
every company which he tested he was

738
00:33:07,740 --> 00:33:10,140
able to execute his code because he got

739
00:33:10,140 --> 00:33:12,720
those DNS queries coming very deep from

740
00:33:12,720 --> 00:33:14,700
their networks because usually you know

741
00:33:14,700 --> 00:33:17,100
this code is executed somewhere behind

742
00:33:17,100 --> 00:33:20,519
several layers of firewalls but it was

743
00:33:20,519 --> 00:33:22,740
still able to exfiltrate the information

744
00:33:22,740 --> 00:33:24,899
from this host because it was sent over

745
00:33:24,899 --> 00:33:28,320
DNS thanks to many DNS resolvers on the

746
00:33:28,320 --> 00:33:29,059
way

747
00:33:29,059 --> 00:33:31,019
uh

748
00:33:31,019 --> 00:33:33,659
after that some companies start to

749
00:33:33,659 --> 00:33:36,240
research even more and for example jfrog

750
00:33:36,240 --> 00:33:39,539
did uh some scanning of python

751
00:33:39,539 --> 00:33:41,399
repository and they found a lot of

752
00:33:41,399 --> 00:33:43,799
malicious modules

753
00:33:43,799 --> 00:33:46,679
and here are some examples which are

754
00:33:46,679 --> 00:33:50,399
using DNS for example PPT test module

755
00:33:50,399 --> 00:33:51,960
you can also note

756
00:33:51,960 --> 00:33:55,500
the version 99 something why is that

757
00:33:55,500 --> 00:33:59,519
because again when a decision is made to

758
00:33:59,519 --> 00:34:02,100
get the software package from public or

759
00:34:02,100 --> 00:34:04,440
from private repository the versions are

760
00:34:04,440 --> 00:34:06,299
compared as well and the newest version

761
00:34:06,299 --> 00:34:08,040
is downloaded so if you put in the

762
00:34:08,040 --> 00:34:10,219
public repository version like

763
00:34:10,219 --> 00:34:14,460
999 or 9999 you have a bigger chance

764
00:34:14,460 --> 00:34:16,918
that your code will be actually pulled

765
00:34:16,918 --> 00:34:18,540
and executed

766
00:34:18,540 --> 00:34:21,119
and here those examples also were using

767
00:34:21,119 --> 00:34:25,020
DNS for some data exfiltration over DNS

768
00:34:25,020 --> 00:34:27,480
for example this one is similar to what

769
00:34:27,480 --> 00:34:29,659
Alex did actually trading hostname

770
00:34:29,659 --> 00:34:33,960
current working the directory local IP

771
00:34:33,960 --> 00:34:36,199
address

772
00:34:38,639 --> 00:34:40,859
and finally

773
00:34:40,859 --> 00:34:44,159
last example uh it's from exploitation

774
00:34:44,159 --> 00:34:46,320
phase so I told you that there is

775
00:34:46,320 --> 00:34:48,119
possibility sometimes to exploit also

776
00:34:48,119 --> 00:34:51,260
DNS client software and this is example

777
00:34:51,260 --> 00:34:55,739
of such a such vulnerability infra halt

778
00:34:55,739 --> 00:34:58,260
but actually in last two years there

779
00:34:58,260 --> 00:35:00,720
were many such vulnerabilities at least

780
00:35:00,720 --> 00:35:04,440
three last year two two years ago and

781
00:35:04,440 --> 00:35:07,020
they were very very much the same this

782
00:35:07,020 --> 00:35:09,839
one is from Niche stack a TCP stack

783
00:35:09,839 --> 00:35:13,160
which is used commonly with Siemens S7

784
00:35:13,160 --> 00:35:15,960
programmable logic controller so

785
00:35:15,960 --> 00:35:18,180
a little bit topic better for tomorrow

786
00:35:18,180 --> 00:35:21,720
to be honest because it's about

787
00:35:21,720 --> 00:35:24,300
OT devices iot devices

788
00:35:24,300 --> 00:35:27,180
and the quality of the code in in such

789
00:35:27,180 --> 00:35:30,240
TCP Stacks is very very low so for

790
00:35:30,240 --> 00:35:33,060
example if your computer is sending a

791
00:35:33,060 --> 00:35:35,579
DNS query to DNS server

792
00:35:35,579 --> 00:35:38,579
it will first randomly select a UDP Port

793
00:35:38,579 --> 00:35:41,460
from which to send the packet it will

794
00:35:41,460 --> 00:35:43,980
randomly generate a transaction ID

795
00:35:43,980 --> 00:35:47,700
16-bit number of DNS transaction and

796
00:35:47,700 --> 00:35:49,920
then we'll send this packet to the IP of

797
00:35:49,920 --> 00:35:53,339
a DNS server when the reply comes back

798
00:35:53,339 --> 00:35:55,740
uh of course it should be coming back

799
00:35:55,740 --> 00:35:57,960
from the same IP of the server should be

800
00:35:57,960 --> 00:36:00,480
coming to the same UDP Port from which

801
00:36:00,480 --> 00:36:02,640
you send it and the transaction ID

802
00:36:02,640 --> 00:36:04,260
should match

803
00:36:04,260 --> 00:36:07,079
and guess what in in this case in this

804
00:36:07,079 --> 00:36:09,540
stack transaction ID is not randomly

805
00:36:09,540 --> 00:36:10,740
generated

806
00:36:10,740 --> 00:36:13,440
UDP Port is not randomly selected and

807
00:36:13,440 --> 00:36:16,440
the IP port IP hundreds of the server is

808
00:36:16,440 --> 00:36:19,140
not checked at all when the reply comes

809
00:36:19,140 --> 00:36:21,540
back so here you have a screenshot from

810
00:36:21,540 --> 00:36:23,280
POC

811
00:36:23,280 --> 00:36:28,619
uh where this device was tested 1.21 and

812
00:36:28,619 --> 00:36:32,160
it is sending a DNS query to 8008 that's

813
00:36:32,160 --> 00:36:34,560
the server then the reply comes back

814
00:36:34,560 --> 00:36:36,740
from a completely different IP address

815
00:36:36,740 --> 00:36:38,880
and even though it's a completely

816
00:36:38,880 --> 00:36:40,320
different IP address and should be

817
00:36:40,320 --> 00:36:42,599
ignored basically it is actually

818
00:36:42,599 --> 00:36:45,900
accepted processed the exploit basically

819
00:36:45,900 --> 00:36:48,720
it's using some vulnerability to execute

820
00:36:48,720 --> 00:36:52,140
a code on this device and then an FTP

821
00:36:52,140 --> 00:36:53,820
session is started because that was the

822
00:36:53,820 --> 00:36:55,320
task of this POC

823
00:36:55,320 --> 00:36:59,099
so wherever you have in your network you

824
00:36:59,099 --> 00:37:01,740
know OT devices iot devices basically

825
00:37:01,740 --> 00:37:03,180
make sure that they are really

826
00:37:03,180 --> 00:37:05,339
disconnected from the internet and never

827
00:37:05,339 --> 00:37:08,579
forget about checking if they can send a

828
00:37:08,579 --> 00:37:10,980
DNS query about Internet domain name

829
00:37:10,980 --> 00:37:13,260
because if they can they will get the

830
00:37:13,260 --> 00:37:15,240
answer it means there is bi-directional

831
00:37:15,240 --> 00:37:17,700
communication through DNS resolver and

832
00:37:17,700 --> 00:37:21,140
this is often overlooked

833
00:37:21,859 --> 00:37:27,140
uh okay that's it from my site

834
00:37:27,140 --> 00:37:31,220
uh maybe you have some questions

835
00:37:32,579 --> 00:37:35,820
do we have any questions for piot I'll

836
00:37:35,820 --> 00:37:37,859
be there with the mic

837
00:37:37,859 --> 00:37:40,700
that's the question

838
00:37:53,520 --> 00:37:56,040
thank you for the talk

839
00:37:56,040 --> 00:38:01,380
um you told us some examples of Mal told

840
00:38:01,380 --> 00:38:03,359
about some of the examples of malware

841
00:38:03,359 --> 00:38:06,920
that use DNS over https

842
00:38:06,920 --> 00:38:11,540
and there is a technology of domain

843
00:38:11,540 --> 00:38:14,700
fronting uh

844
00:38:14,700 --> 00:38:17,460
and it uses basically the same

845
00:38:17,460 --> 00:38:19,980
infrastructure cloudflare Microsoft and

846
00:38:19,980 --> 00:38:23,900
blah blah blah but uh it is harder to

847
00:38:23,900 --> 00:38:29,040
detect uh these abuse because you need

848
00:38:29,040 --> 00:38:31,260
to break the SSL chain

849
00:38:31,260 --> 00:38:33,720
yeah correct so domain front the

850
00:38:33,720 --> 00:38:35,160
question was about domain fronting right

851
00:38:35,160 --> 00:38:37,800
that you can have a DNS query about one

852
00:38:37,800 --> 00:38:40,440
domain but actually later in HTTP which

853
00:38:40,440 --> 00:38:42,900
would be running under TLS as well you

854
00:38:42,900 --> 00:38:45,060
have a different hosting right yeah and

855
00:38:45,060 --> 00:38:48,480
it was a huge issue uh maybe two years

856
00:38:48,480 --> 00:38:50,339
ago because actually you could do that

857
00:38:50,339 --> 00:38:53,280
with Google DNS for example you you

858
00:38:53,280 --> 00:38:55,619
connect to theoretically Google DNS but

859
00:38:55,619 --> 00:38:57,960
then you have an https connection and

860
00:38:57,960 --> 00:39:01,380
request other hosting but main Cloud

861
00:39:01,380 --> 00:39:04,260
vendors have fixed that and for

862
00:39:04,260 --> 00:39:06,240
cloudflare you cannot do domain fronting

863
00:39:06,240 --> 00:39:08,579
right now with their DNS servers with

864
00:39:08,579 --> 00:39:10,980
Google also you cannot of course there

865
00:39:10,980 --> 00:39:13,200
will be for sure some vendors some

866
00:39:13,200 --> 00:39:15,060
providers which can

867
00:39:15,060 --> 00:39:17,780
still be exploited in this way let's say

868
00:39:17,780 --> 00:39:21,240
and there is no easy way because then as

869
00:39:21,240 --> 00:39:23,640
you said it is like you need to go and

870
00:39:23,640 --> 00:39:25,859
look what's in the decrypted packet

871
00:39:25,859 --> 00:39:27,960
right because otherwise you cannot see

872
00:39:27,960 --> 00:39:30,119
but for now you cannot do it with for

873
00:39:30,119 --> 00:39:32,579
example Google DNS because they fixed it

874
00:39:32,579 --> 00:39:35,820
I believe it was two years ago

875
00:39:35,820 --> 00:39:38,579
so thank you word is a little bit safer

876
00:39:38,579 --> 00:39:39,660
thanks to that

877
00:39:39,660 --> 00:39:41,760
because it was disaster I mean if you

878
00:39:41,760 --> 00:39:43,740
have situation like every computer on

879
00:39:43,740 --> 00:39:45,960
your network is connecting to dns.google

880
00:39:45,960 --> 00:39:47,700
and you don't know what it's doing

881
00:39:47,700 --> 00:39:51,180
actually behind right so it's not nice

882
00:39:51,180 --> 00:39:55,460
uh any more questions

883
00:39:57,119 --> 00:40:02,160
uh if not then if you like the session

884
00:40:02,160 --> 00:40:05,160
and you would like to learn more we are

885
00:40:05,160 --> 00:40:08,220
doing uh such training for about six

886
00:40:08,220 --> 00:40:11,760
hours it's a free training uh here's the

887
00:40:11,760 --> 00:40:13,920
agenda if you are interested just come

888
00:40:13,920 --> 00:40:16,020
to infoblox Booth leave your email and

889
00:40:16,020 --> 00:40:18,540
we can set up such training either for

890
00:40:18,540 --> 00:40:21,480
your company or if you are a student or

891
00:40:21,480 --> 00:40:23,160
maybe smaller company then we can have a

892
00:40:23,160 --> 00:40:25,380
bigger session and we can do a search

893
00:40:25,380 --> 00:40:26,900
training online

894
00:40:26,900 --> 00:40:31,260
uh thank you that's it oh no thank you

895
00:40:31,260 --> 00:40:31,460
very much

896
00:40:31,460 --> 00:40:36,559
[Applause]

