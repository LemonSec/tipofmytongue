1
00:00:00,240 --> 00:00:02,280
right ladies and gents It's the final

2
00:00:02,280 --> 00:00:04,319
one for today and it's actually I

3
00:00:04,319 --> 00:00:07,200
understand the recorded uh presentation

4
00:00:07,200 --> 00:00:10,440
so Focus your eyes on the screen when it

5
00:00:10,440 --> 00:00:12,960
starts just to remind you after we've

6
00:00:12,960 --> 00:00:14,219
finished

7
00:00:14,219 --> 00:00:17,820
um we have uh beers for peers

8
00:00:17,820 --> 00:00:20,699
and that will be uh some some beer

9
00:00:20,699 --> 00:00:22,800
benches on the ground floor

10
00:00:22,800 --> 00:00:26,100
to maintain a little October Oktoberfest

11
00:00:26,100 --> 00:00:28,140
feeling for you so you can go down and

12
00:00:28,140 --> 00:00:31,080
grab a beer after the presentation

13
00:00:31,080 --> 00:00:32,940
finishes

14
00:00:32,940 --> 00:00:35,340
apologies everyone that I cannot join

15
00:00:35,340 --> 00:00:37,440
you today personally on this stage but

16
00:00:37,440 --> 00:00:39,420
uh I hope to see you soon next year

17
00:00:39,420 --> 00:00:42,059
hopefully so uh I'll be starting my

18
00:00:42,059 --> 00:00:44,760
presentation now uh today my topic of

19
00:00:44,760 --> 00:00:46,800
the talk will be what are we still

20
00:00:46,800 --> 00:00:49,620
missing in web applications so uh I'll

21
00:00:49,620 --> 00:00:51,840
start the presentation quickly few words

22
00:00:51,840 --> 00:00:53,460
about myself as you're aware that my

23
00:00:53,460 --> 00:00:55,320
name is and I'm working with the senior

24
00:00:55,320 --> 00:00:57,239
security consultant in a UK based firm

25
00:00:57,239 --> 00:01:00,000
and I was heavily involved in bug bounty

26
00:01:00,000 --> 00:01:02,460
hunting programs back in 2012 and 13 and

27
00:01:02,460 --> 00:01:04,319
awarded an honored by Google Microsoft

28
00:01:04,319 --> 00:01:05,880
Facebook and there are a lot of

29
00:01:05,880 --> 00:01:08,040
companies in the list I'm an oscp

30
00:01:08,040 --> 00:01:10,680
certified and along with that I have

31
00:01:10,680 --> 00:01:13,260
some known credentials as well and I've

32
00:01:13,260 --> 00:01:15,360
been working as a penetration tester for

33
00:01:15,360 --> 00:01:17,159
around eight years now which covers the

34
00:01:17,159 --> 00:01:18,900
Network mobile applications and all the

35
00:01:18,900 --> 00:01:20,700
other things then I do work to the

36
00:01:20,700 --> 00:01:23,520
threat team inside of the work and I'm

37
00:01:23,520 --> 00:01:26,280
quite enjoying that so uh I've been work

38
00:01:26,280 --> 00:01:28,380
I I've worked and I've been working with

39
00:01:28,380 --> 00:01:31,140
a financial industry Health industry and

40
00:01:31,140 --> 00:01:32,880
all the other government Industries in

41
00:01:32,880 --> 00:01:34,979
and all the other things that we can see

42
00:01:34,979 --> 00:01:38,400
so now uh today my talk topic of the

43
00:01:38,400 --> 00:01:40,380
talk will be the what are we still

44
00:01:40,380 --> 00:01:42,299
missing the web applications let's move

45
00:01:42,299 --> 00:01:44,460
with that okay as you're talking about

46
00:01:44,460 --> 00:01:47,340
the major changes in the last top 10 uh

47
00:01:47,340 --> 00:01:50,399
we have to take a look at 2017 and 2021

48
00:01:50,399 --> 00:01:52,740
chart right now so if you can see that

49
00:01:52,740 --> 00:01:54,659
the injections are the most important

50
00:01:54,659 --> 00:01:57,180
thing in the 2017 now they're running

51
00:01:57,180 --> 00:02:00,060
down to the uh some other number and

52
00:02:00,060 --> 00:02:01,920
broken Access Controller the number one

53
00:02:01,920 --> 00:02:04,920
thing in the uh was top 10 right now so

54
00:02:04,920 --> 00:02:07,140
the main question arise that why we need

55
00:02:07,140 --> 00:02:09,060
change so if we are talking about the

56
00:02:09,060 --> 00:02:10,619
change everything needs to be changed

57
00:02:10,619 --> 00:02:12,120
because there are a lot of new

58
00:02:12,120 --> 00:02:14,280
technologies involving in the web

59
00:02:14,280 --> 00:02:16,200
application mobile network and

60
00:02:16,200 --> 00:02:18,720
everything is changing right so we need

61
00:02:18,720 --> 00:02:20,160
to change the methodology as well

62
00:02:20,160 --> 00:02:21,120
because there are two kind of

63
00:02:21,120 --> 00:02:23,340
methodologies one was top 10 gave you

64
00:02:23,340 --> 00:02:24,840
the methodology to test the web

65
00:02:24,840 --> 00:02:26,700
application and the second one you think

66
00:02:26,700 --> 00:02:29,520
by your own head because I've I was

67
00:02:29,520 --> 00:02:30,780
heavily involved in the bug Bounty

68
00:02:30,780 --> 00:02:33,360
program that uh I just told you you guys

69
00:02:33,360 --> 00:02:35,959
about so we have to think uh very very

70
00:02:35,959 --> 00:02:38,640
with the change perspective we cannot

71
00:02:38,640 --> 00:02:40,260
follow that was top 10 and get the

72
00:02:40,260 --> 00:02:42,060
Bounty so we have to try different

73
00:02:42,060 --> 00:02:44,700
methodologies and do the things so these

74
00:02:44,700 --> 00:02:47,400
changes needs to be implemented why I'll

75
00:02:47,400 --> 00:02:50,220
tell you why uh there are aesthetic and

76
00:02:50,220 --> 00:02:51,840
the dynamic scanners as you are very

77
00:02:51,840 --> 00:02:54,060
well aware we we use this scanner to

78
00:02:54,060 --> 00:02:55,560
scan the web application from the front

79
00:02:55,560 --> 00:02:57,420
end and the back end as well source code

80
00:02:57,420 --> 00:02:59,879
analysis what we are calling it there a

81
00:02:59,879 --> 00:03:01,379
lot of tools that do the source code

82
00:03:01,379 --> 00:03:03,540
analysis as well and the front end

83
00:03:03,540 --> 00:03:06,000
scanner like for example if you use the

84
00:03:06,000 --> 00:03:08,160
front end scanner if I name few of them

85
00:03:08,160 --> 00:03:11,760
economics net spark and a few of them so

86
00:03:11,760 --> 00:03:14,099
this kind of vulnerability that I am

87
00:03:14,099 --> 00:03:16,980
going to talk about none of them gonna

88
00:03:16,980 --> 00:03:20,400
uh find that not the static scanner not

89
00:03:20,400 --> 00:03:22,920
the dynamic scanner see uh I'll explain

90
00:03:22,920 --> 00:03:25,560
you why uh so I'll just explain you with

91
00:03:25,560 --> 00:03:28,620
an example how the injections were done

92
00:03:28,620 --> 00:03:30,659
and how they're protected now as you can

93
00:03:30,659 --> 00:03:33,780
see over here uh the injection if we

94
00:03:33,780 --> 00:03:35,580
just focus on the SQL injection right

95
00:03:35,580 --> 00:03:39,360
now so in for uh SQL injections are uh

96
00:03:39,360 --> 00:03:40,920
previously not protected by the

97
00:03:40,920 --> 00:03:43,860
Frameworks MVC or or any kind of

98
00:03:43,860 --> 00:03:46,080
framework I would like to talk about but

99
00:03:46,080 --> 00:03:49,260
now the browser the Frameworks the the

100
00:03:49,260 --> 00:03:51,599
patterns they're more defined they're

101
00:03:51,599 --> 00:03:54,239
more intelligent and they can secure

102
00:03:54,239 --> 00:03:56,159
your application before it goes to the

103
00:03:56,159 --> 00:03:58,620
server end so if you talk about the uh

104
00:03:58,620 --> 00:04:01,680
SQL injection for example so we can

105
00:04:01,680 --> 00:04:03,720
secure it by the stored procedures

106
00:04:03,720 --> 00:04:05,879
parameterize queries the correct

107
00:04:05,879 --> 00:04:07,799
escaping input validation there are a

108
00:04:07,799 --> 00:04:09,720
lot of them going on that we can secure

109
00:04:09,720 --> 00:04:13,140
the SQL injections and so and so forth

110
00:04:13,140 --> 00:04:14,459
other vulnerabilities if you talk about

111
00:04:14,459 --> 00:04:16,440
the exercise so that can be mitigated by

112
00:04:16,440 --> 00:04:19,199
the browsers itself on the front level

113
00:04:19,199 --> 00:04:21,478
uh defense line but you can secure that

114
00:04:21,478 --> 00:04:23,759
on the server end but right now we are

115
00:04:23,759 --> 00:04:25,199
talking about a certain kind of

116
00:04:25,199 --> 00:04:26,699
vulnerability that won't be protected

117
00:04:26,699 --> 00:04:29,220
from the server and not the client and

118
00:04:29,220 --> 00:04:32,699
but that is just uh in the hand of the

119
00:04:32,699 --> 00:04:34,560
developers who are building that

120
00:04:34,560 --> 00:04:37,380
publisher yes I am talking about the

121
00:04:37,380 --> 00:04:39,600
business logic flaws yes ladies and

122
00:04:39,600 --> 00:04:41,160
gentlemen the business logic flaws are

123
00:04:41,160 --> 00:04:43,259
the only flaws that cannot be detected

124
00:04:43,259 --> 00:04:45,900
by the dynamic or the static scanner but

125
00:04:45,900 --> 00:04:48,060
there are few tricks and knobs uh you

126
00:04:48,060 --> 00:04:50,040
can try that to automate the process but

127
00:04:50,040 --> 00:04:52,320
that is not fully automated process so

128
00:04:52,320 --> 00:04:54,180
what is the business logic flaws how we

129
00:04:54,180 --> 00:04:56,880
gonna find that uh what impact does it

130
00:04:56,880 --> 00:04:58,860
have on the application and what we are

131
00:04:58,860 --> 00:05:00,900
looking forward so let's do it uh what

132
00:05:00,900 --> 00:05:02,160
are the business logic flaws uh

133
00:05:02,160 --> 00:05:05,520
vulnerabilities just in one word I'm

134
00:05:05,520 --> 00:05:06,720
getting your data out of your

135
00:05:06,720 --> 00:05:08,220
application or I'm just changing your

136
00:05:08,220 --> 00:05:10,259
data without your permission so if

137
00:05:10,259 --> 00:05:11,820
you're talking about the business this

138
00:05:11,820 --> 00:05:14,940
logic law that is a very critical matter

139
00:05:14,940 --> 00:05:18,180
how they arise negligence simple word by

140
00:05:18,180 --> 00:05:19,620
the developers if you're not putting the

141
00:05:19,620 --> 00:05:20,940
right access control on the right

142
00:05:20,940 --> 00:05:22,919
controller or the view or anything else

143
00:05:22,919 --> 00:05:24,419
if you're developing other product

144
00:05:24,419 --> 00:05:27,539
platforms so negligence is the main key

145
00:05:27,539 --> 00:05:29,280
for the business logic flaws and there

146
00:05:29,280 --> 00:05:31,259
are a lot of people who did the bug

147
00:05:31,259 --> 00:05:34,020
bounty hunting and they earn thousands

148
00:05:34,020 --> 00:05:37,380
of dollar just for bypassing a logic or

149
00:05:37,380 --> 00:05:40,259
a process see this is very simple I'll

150
00:05:40,259 --> 00:05:42,539
explain it in a bit as well ABC and

151
00:05:42,539 --> 00:05:43,919
you're skipping the B and you directly

152
00:05:43,919 --> 00:05:45,479
jumping from a to c that's a business

153
00:05:45,479 --> 00:05:47,580
logic flaw and you have to check in your

154
00:05:47,580 --> 00:05:49,860
application right now as well so what's

155
00:05:49,860 --> 00:05:52,020
the impact impact could be a disastrous

156
00:05:52,020 --> 00:05:55,020
you can lose your data I can fetch all

157
00:05:55,020 --> 00:05:56,699
the information from your system with a

158
00:05:56,699 --> 00:05:59,699
local admin oh sorry a local user low

159
00:05:59,699 --> 00:06:02,699
privileged user so if I can fetch and I

160
00:06:02,699 --> 00:06:04,620
can redirect all the data from one end

161
00:06:04,620 --> 00:06:06,539
to another end so I'm successfully doing

162
00:06:06,539 --> 00:06:09,000
the business logic flow operation so

163
00:06:09,000 --> 00:06:10,919
let's move forward

164
00:06:10,919 --> 00:06:13,020
common vulnerabilities in the business

165
00:06:13,020 --> 00:06:14,639
logic flaws what are the common

166
00:06:14,639 --> 00:06:17,039
vulnerabilities and what are you looking

167
00:06:17,039 --> 00:06:20,160
forward so one thing that is most

168
00:06:20,160 --> 00:06:22,319
important thing that you trust your

169
00:06:22,319 --> 00:06:25,139
client excessive trust in your client

170
00:06:25,139 --> 00:06:27,840
site controls that I have asked email

171
00:06:27,840 --> 00:06:30,060
they will provide me the email no that

172
00:06:30,060 --> 00:06:32,300
won't be happening any above every time

173
00:06:32,300 --> 00:06:35,660
trusted user won't always remain

174
00:06:35,660 --> 00:06:38,460
trustworthy for example if I follow the

175
00:06:38,460 --> 00:06:41,880
intent ABC and if I do ABC one two three

176
00:06:41,880 --> 00:06:44,400
four five time but now I need to

177
00:06:44,400 --> 00:06:46,319
manipulate your script and I'm just

178
00:06:46,319 --> 00:06:48,840
jumping from a to c so I have to look

179
00:06:48,840 --> 00:06:51,240
for all the combinations as a developer

180
00:06:51,240 --> 00:06:53,819
that no user is trusted in my

181
00:06:53,819 --> 00:06:56,460
application yeah so user won't always

182
00:06:56,460 --> 00:06:59,580
follow the intended sequence that I just

183
00:06:59,580 --> 00:07:01,500
explained that user won't always Supply

184
00:07:01,500 --> 00:07:03,300
mandatory input as you explained that

185
00:07:03,300 --> 00:07:05,039
you're asking for the numbers and I'm

186
00:07:05,039 --> 00:07:07,259
providing you the spatial characters so

187
00:07:07,259 --> 00:07:09,960
you have to look for that that what your

188
00:07:09,960 --> 00:07:12,660
users are pro providing you and what

189
00:07:12,660 --> 00:07:14,580
they are giving you from the front end

190
00:07:14,580 --> 00:07:17,039
to be processed on the back end

191
00:07:17,039 --> 00:07:18,360
so

192
00:07:18,360 --> 00:07:21,120
now I'll be explaining a few examples

193
00:07:21,120 --> 00:07:23,400
practical example that I have faced in

194
00:07:23,400 --> 00:07:26,340
my uh tenure and these are already

195
00:07:26,340 --> 00:07:28,800
patched and they're pretty old but

196
00:07:28,800 --> 00:07:31,020
they're my live experience and the

197
00:07:31,020 --> 00:07:32,400
Practical experience I want to share

198
00:07:32,400 --> 00:07:34,860
with you with the example so first thing

199
00:07:34,860 --> 00:07:37,319
if you talk about the Oracle one I would

200
00:07:37,319 --> 00:07:40,139
like to just explain you over here I

201
00:07:40,139 --> 00:07:42,780
published a CV in 2019 and that's

202
00:07:42,780 --> 00:07:44,819
vulnerability was in the Oracle

203
00:07:44,819 --> 00:07:47,039
financials and that was a fraud

204
00:07:47,039 --> 00:07:48,599
management system fraud detection

205
00:07:48,599 --> 00:07:51,060
basically system and it was implemented

206
00:07:51,060 --> 00:07:53,819
in one of the banks in some other

207
00:07:53,819 --> 00:07:56,880
country so uh what happened uh they

208
00:07:56,880 --> 00:07:58,560
deployed the solution and they want to

209
00:07:58,560 --> 00:08:00,360
do the penetration testing as a normal

210
00:08:00,360 --> 00:08:03,419
vendor vvv initiated the testing so what

211
00:08:03,419 --> 00:08:06,599
happens there were two users if I uh if

212
00:08:06,599 --> 00:08:08,460
I can name them over here if you can see

213
00:08:08,460 --> 00:08:10,919
that on this screen there were analyst

214
00:08:10,919 --> 00:08:13,740
my and there's another analyst so the

215
00:08:13,740 --> 00:08:15,539
problem is that I have one low

216
00:08:15,539 --> 00:08:17,400
privileged user and a high privileged

217
00:08:17,400 --> 00:08:19,620
user what I did it from the hyper

218
00:08:19,620 --> 00:08:22,500
Village user I just copy and paste every

219
00:08:22,500 --> 00:08:24,360
request and response from the server to

220
00:08:24,360 --> 00:08:27,120
the client and I just saved that in a

221
00:08:27,120 --> 00:08:29,580
file now what happens I log in with the

222
00:08:29,580 --> 00:08:31,919
low privilege user and in the burp suit

223
00:08:31,919 --> 00:08:35,520
what I did I just copy and paste and do

224
00:08:35,520 --> 00:08:36,958
some tweaks that I'm not gonna explain

225
00:08:36,958 --> 00:08:38,219
it over here because they are

226
00:08:38,219 --> 00:08:41,039
confidential so I did some tweaking in

227
00:08:41,039 --> 00:08:42,719
the request in the response of the

228
00:08:42,719 --> 00:08:45,899
server and what happens it shows me all

229
00:08:45,899 --> 00:08:47,940
the data that the higher privilege user

230
00:08:47,940 --> 00:08:50,580
can see see now I can show you here if

231
00:08:50,580 --> 00:08:54,360
you can see there's a analyst SC and

232
00:08:54,360 --> 00:08:56,700
there is analyst my I just explained you

233
00:08:56,700 --> 00:08:59,040
analyst and why was responsible for all

234
00:08:59,040 --> 00:09:02,640
the things but now I can request the

235
00:09:02,640 --> 00:09:05,220
same process same request same data

236
00:09:05,220 --> 00:09:07,860
these are the pure pretty uh ND money

237
00:09:07,860 --> 00:09:09,600
laundering application and I'm just

238
00:09:09,600 --> 00:09:11,580
looking at the logs alerts and

239
00:09:11,580 --> 00:09:13,080
everything in the application I've just

240
00:09:13,080 --> 00:09:15,600
masked it down by the way so everything

241
00:09:15,600 --> 00:09:17,700
is secure and confidential but the

242
00:09:17,700 --> 00:09:20,040
problem is that I saved the request from

243
00:09:20,040 --> 00:09:22,320
the high privileged user and applied

244
00:09:22,320 --> 00:09:24,959
that to the low privileged user that's

245
00:09:24,959 --> 00:09:28,320
how I bypass the application and uh they

246
00:09:28,320 --> 00:09:32,100
publish the cve in 2019 and yeah I'm

247
00:09:32,100 --> 00:09:34,140
pretty happy with that

248
00:09:34,140 --> 00:09:36,899
so moving towards this second example I

249
00:09:36,899 --> 00:09:38,339
mostly work for the banks and insurance

250
00:09:38,339 --> 00:09:40,560
companies so uh there was a mobile

251
00:09:40,560 --> 00:09:43,380
application for a bank and uh remember I

252
00:09:43,380 --> 00:09:45,180
was saying that business logic flaws

253
00:09:45,180 --> 00:09:46,860
cannot be detected by the static other

254
00:09:46,860 --> 00:09:48,420
Dynamic scanners you have to work around

255
00:09:48,420 --> 00:09:50,160
in your mind to change the methodology

256
00:09:50,160 --> 00:09:53,700
and skip the good parts and just jump to

257
00:09:53,700 --> 00:09:56,220
the bad parts right so this particular

258
00:09:56,220 --> 00:09:57,779
example is a pretty much straightforward

259
00:09:57,779 --> 00:10:00,360
to that example what kind of uh

260
00:10:00,360 --> 00:10:02,580
methodology I applied on that let's have

261
00:10:02,580 --> 00:10:04,560
a look at that so if you can see from

262
00:10:04,560 --> 00:10:06,959
the left hand side first image pretty

263
00:10:06,959 --> 00:10:08,519
normal username and password they're

264
00:10:08,519 --> 00:10:11,339
requesting so my methodology and my way

265
00:10:11,339 --> 00:10:12,839
of testing is that first of all I

266
00:10:12,839 --> 00:10:14,580
provide all the valid credential to the

267
00:10:14,580 --> 00:10:17,220
application username password OTP then I

268
00:10:17,220 --> 00:10:19,440
manipulate them because once I see all

269
00:10:19,440 --> 00:10:21,240
the requests and response that are valid

270
00:10:21,240 --> 00:10:24,000
then I can play around right so capture

271
00:10:24,000 --> 00:10:25,260
all the requests in response from the

272
00:10:25,260 --> 00:10:27,420
server to the client and do the from the

273
00:10:27,420 --> 00:10:29,279
client to the server as well because you

274
00:10:29,279 --> 00:10:31,140
can uh just click on the verb so then

275
00:10:31,140 --> 00:10:33,000
you can capture the server response so

276
00:10:33,000 --> 00:10:34,500
pretty straightforward application right

277
00:10:34,500 --> 00:10:36,660
username and password it sent the

278
00:10:36,660 --> 00:10:37,920
passcode on the mobile application

279
00:10:37,920 --> 00:10:40,740
mobile number that I have so

280
00:10:40,740 --> 00:10:43,680
first time uh what I did I just put the

281
00:10:43,680 --> 00:10:45,660
username and password then it provided

282
00:10:45,660 --> 00:10:46,620
me the

283
00:10:46,620 --> 00:10:49,079
OTP I provided the OTB in the Box as

284
00:10:49,079 --> 00:10:53,220
well and it logged me so how did it

285
00:10:53,220 --> 00:10:55,019
happen uh normal pretty straightforward

286
00:10:55,019 --> 00:10:57,540
application username password OTP I'm in

287
00:10:57,540 --> 00:11:01,800
so I logged out I log out again and when

288
00:11:01,800 --> 00:11:04,920
I try to log in again with the wrong OTP

289
00:11:04,920 --> 00:11:08,040
it says invalid OTB invalid passcode so

290
00:11:08,040 --> 00:11:10,019
I try multiple options multiple options

291
00:11:10,019 --> 00:11:11,940
a b c

292
00:11:11,940 --> 00:11:14,399
um there is an image I posted in other

293
00:11:14,399 --> 00:11:16,440
slide I'll show you that there's a

294
00:11:16,440 --> 00:11:19,200
sequence check one two three one wrong

295
00:11:19,200 --> 00:11:21,959
two wrong three wrong four boom on so

296
00:11:21,959 --> 00:11:25,260
now what I did I just tried to use the

297
00:11:25,260 --> 00:11:27,480
that approach username and password is

298
00:11:27,480 --> 00:11:29,519
correct but I don't have a passcode so

299
00:11:29,519 --> 00:11:32,040
what I did I tried zero zero zero zero

300
00:11:32,040 --> 00:11:34,860
it read it says invalid passcode and it

301
00:11:34,860 --> 00:11:37,740
redirect me back to my login screen now

302
00:11:37,740 --> 00:11:40,500
what I did I just put a username and

303
00:11:40,500 --> 00:11:43,320
password sword and I click login and it

304
00:11:43,320 --> 00:11:46,620
bypass the OTP system and it showed me

305
00:11:46,620 --> 00:11:48,420
my account

306
00:11:48,420 --> 00:11:51,300
so that's how I bypass the logic without

307
00:11:51,300 --> 00:11:54,480
any tool without any scanner without

308
00:11:54,480 --> 00:11:58,200
doing anything on the system or scanning

309
00:11:58,200 --> 00:12:00,600
or the coding process I just use

310
00:12:00,600 --> 00:12:02,100
username and password

311
00:12:02,100 --> 00:12:04,800
OTP OTP back and it just logged in

312
00:12:04,800 --> 00:12:06,420
because there's a flaw in the

313
00:12:06,420 --> 00:12:08,820
application it was checking for the

314
00:12:08,820 --> 00:12:11,100
passcode for the one time only if that

315
00:12:11,100 --> 00:12:13,680
is correct or wrong no matter the second

316
00:12:13,680 --> 00:12:16,200
time you're coming your passcode is

317
00:12:16,200 --> 00:12:18,899
finished and you can bypass that

318
00:12:18,899 --> 00:12:21,240
application so that's how I bypass this

319
00:12:21,240 --> 00:12:23,940
application so you have to look out for

320
00:12:23,940 --> 00:12:26,459
the particular Minor Details in the

321
00:12:26,459 --> 00:12:28,260
application as well that you cannot

322
00:12:28,260 --> 00:12:30,720
Escape right

323
00:12:30,720 --> 00:12:32,279
now let's have a look to another

324
00:12:32,279 --> 00:12:34,079
application this also belongs to a

325
00:12:34,079 --> 00:12:36,300
banking application and this is the

326
00:12:36,300 --> 00:12:37,680
internet banking that we are talking

327
00:12:37,680 --> 00:12:42,540
about and I bypassed this uh system as a

328
00:12:42,540 --> 00:12:44,519
normally pretty standard way that I used

329
00:12:44,519 --> 00:12:48,180
to do I I love bypassing the otps by the

330
00:12:48,180 --> 00:12:50,160
way so in this example particular

331
00:12:50,160 --> 00:12:53,760
example I bypass the OTP again and this

332
00:12:53,760 --> 00:12:56,700
is a different bank uh all together so

333
00:12:56,700 --> 00:12:59,279
how it happens uh let's have a look uh

334
00:12:59,279 --> 00:13:01,019
first thing first you know my Approach

335
00:13:01,019 --> 00:13:03,660
login pretty straightforward capture all

336
00:13:03,660 --> 00:13:05,160
the requests in the response from the

337
00:13:05,160 --> 00:13:07,019
client to the server and do this from

338
00:13:07,019 --> 00:13:09,000
the server to the client and I just

339
00:13:09,000 --> 00:13:11,040
capture everything and place it in a

340
00:13:11,040 --> 00:13:14,160
notepad file I literally have 30 plus

341
00:13:14,160 --> 00:13:16,320
tabs in the notepad plus plus at the

342
00:13:16,320 --> 00:13:18,899
time when I was testing and still I have

343
00:13:18,899 --> 00:13:21,480
a lot of tabs going on but I close them

344
00:13:21,480 --> 00:13:24,000
because I don't see any potential so I

345
00:13:24,000 --> 00:13:27,060
close them all so I restart again and

346
00:13:27,060 --> 00:13:30,000
build that 3D tabs again in an hour so

347
00:13:30,000 --> 00:13:32,639
there is a pro coach what I did I just

348
00:13:32,639 --> 00:13:35,040
log in I just captured the details and

349
00:13:35,040 --> 00:13:37,079
all the response and requests forcing if

350
00:13:37,079 --> 00:13:39,060
you can see on the left hand side screen

351
00:13:39,060 --> 00:13:42,000
there's image username and password and

352
00:13:42,000 --> 00:13:44,820
the OTP I provided the right OTP that

353
00:13:44,820 --> 00:13:46,740
was sent on my mobile application mobile

354
00:13:46,740 --> 00:13:48,360
phone and if you can see on the right

355
00:13:48,360 --> 00:13:50,579
hand side top uh right top there's an

356
00:13:50,579 --> 00:13:53,040
image that log in DN and text OTP it

357
00:13:53,040 --> 00:13:55,079
says four one three three four two

358
00:13:55,079 --> 00:13:57,240
something like that right and it is a

359
00:13:57,240 --> 00:14:00,000
valid OTP and in the bottom image you

360
00:14:00,000 --> 00:14:01,680
can see it's redirecting me a certain

361
00:14:01,680 --> 00:14:05,519
page of the internet banking now what I

362
00:14:05,519 --> 00:14:08,100
feel uh I posted the right OTP so it's

363
00:14:08,100 --> 00:14:10,860
root detecting me to another page what I

364
00:14:10,860 --> 00:14:13,200
did I just tried to manipulate this

365
00:14:13,200 --> 00:14:15,180
request this screen request I capture

366
00:14:15,180 --> 00:14:17,220
this one that redirecting to certain

367
00:14:17,220 --> 00:14:19,920
page I capture this one and I try to

368
00:14:19,920 --> 00:14:21,480
manipulate it with the wrong OTP let's

369
00:14:21,480 --> 00:14:23,459
see what happens now on the left hand

370
00:14:23,459 --> 00:14:25,079
side you can see on the top left hand

371
00:14:25,079 --> 00:14:28,019
side I provided the wrong OTP I provided

372
00:14:28,019 --> 00:14:31,260
the wrong OTP on the middle image if you

373
00:14:31,260 --> 00:14:35,160
can see and there is a line provided OTP

374
00:14:35,160 --> 00:14:37,620
is incorrect as soon as it show me that

375
00:14:37,620 --> 00:14:40,139
the next screen I just copy and paste it

376
00:14:40,139 --> 00:14:42,300
that request that I've already saved

377
00:14:42,300 --> 00:14:44,279
which was a valid response from the

378
00:14:44,279 --> 00:14:46,260
server that yes we are redirecting you

379
00:14:46,260 --> 00:14:49,260
to the dashboard or the home or the menu

380
00:14:49,260 --> 00:14:51,360
screen something like that and I just

381
00:14:51,360 --> 00:14:53,940
replace that and what happens it just

382
00:14:53,940 --> 00:14:55,380
opened up me the dashboard of the

383
00:14:55,380 --> 00:14:57,720
application and it's it is a banking

384
00:14:57,720 --> 00:15:00,660
internet banking internet facing

385
00:15:00,660 --> 00:15:03,660
application Android was very critical so

386
00:15:03,660 --> 00:15:05,820
that was all NDS signed so we just

387
00:15:05,820 --> 00:15:08,220
responded back to the uh client and they

388
00:15:08,220 --> 00:15:10,199
fixed that the next day but this is our

389
00:15:10,199 --> 00:15:11,940
methodology that we use to take the

390
00:15:11,940 --> 00:15:13,860
screenshots and all the other things to

391
00:15:13,860 --> 00:15:16,380
uh work on that to do the r d further

392
00:15:16,380 --> 00:15:18,240
and we do the reporting as well after

393
00:15:18,240 --> 00:15:20,940
that but we uh inform the client and fix

394
00:15:20,940 --> 00:15:22,680
it on the next morning

395
00:15:22,680 --> 00:15:24,000
so

396
00:15:24,000 --> 00:15:25,980
so the problem with the business logic

397
00:15:25,980 --> 00:15:27,600
flow is the security design flaw

398
00:15:27,600 --> 00:15:29,760
remember that example I just bypass the

399
00:15:29,760 --> 00:15:31,620
mobile operations with this particular

400
00:15:31,620 --> 00:15:34,320
thing attempt one no attempt to no

401
00:15:34,320 --> 00:15:37,199
attempt three yes you can go inside so I

402
00:15:37,199 --> 00:15:38,820
bypass the mobile application with this

403
00:15:38,820 --> 00:15:41,699
approach and yeah there's a design flaw

404
00:15:41,699 --> 00:15:44,459
you have to be very careful what you are

405
00:15:44,459 --> 00:15:46,079
putting in your Access Control list

406
00:15:46,079 --> 00:15:48,420
while accessing every request in your

407
00:15:48,420 --> 00:15:50,579
server and the client inside what you're

408
00:15:50,579 --> 00:15:53,220
providing your clients is the thing that

409
00:15:53,220 --> 00:15:54,860
you have to control on your server side

410
00:15:54,860 --> 00:15:57,420
okay now let's talk about something

411
00:15:57,420 --> 00:15:59,279
Automation and the scanning things

412
00:15:59,279 --> 00:16:01,139
remember I was saying there is no

413
00:16:01,139 --> 00:16:03,360
scanner to detect the business logic

414
00:16:03,360 --> 00:16:05,100
flaw in the web application or the

415
00:16:05,100 --> 00:16:07,380
mobile application now remember I was

416
00:16:07,380 --> 00:16:09,660
saying that there are no scanner for the

417
00:16:09,660 --> 00:16:12,060
business logic floor neither the dynamic

418
00:16:12,060 --> 00:16:14,940
or the static scanners but the good news

419
00:16:14,940 --> 00:16:17,220
is we have multiple plugins in the burp

420
00:16:17,220 --> 00:16:19,440
suit as well one of them is auth metrics

421
00:16:19,440 --> 00:16:23,040
displayed over here dot metrics to a lot

422
00:16:23,040 --> 00:16:26,220
of thing and it saves your time while

423
00:16:26,220 --> 00:16:27,660
testing the other thing in the

424
00:16:27,660 --> 00:16:30,000
application what it does uh repeat the

425
00:16:30,000 --> 00:16:31,860
workflow with a different user user

426
00:16:31,860 --> 00:16:33,839
roles skip forward this tab in the

427
00:16:33,839 --> 00:16:36,480
workflows for example ABCD ACD remember

428
00:16:36,480 --> 00:16:38,160
that approach so it does it

429
00:16:38,160 --> 00:16:40,259
automatically and you have to provide

430
00:16:40,259 --> 00:16:43,139
two credential one with the lower and

431
00:16:43,139 --> 00:16:45,060
one with the privileged so it can

432
00:16:45,060 --> 00:16:46,860
manipulate the requests and do what

433
00:16:46,860 --> 00:16:48,120
basically what we are doing manually

434
00:16:48,120 --> 00:16:50,339
it's doing uh automatically on the web

435
00:16:50,339 --> 00:16:52,500
application uh from the perp suit

436
00:16:52,500 --> 00:16:54,660
perspective so there are a lot of things

437
00:16:54,660 --> 00:16:56,399
I want to talk about how you're going to

438
00:16:56,399 --> 00:16:57,899
plan your attack how you are going to

439
00:16:57,899 --> 00:16:59,639
test your next application if you're a

440
00:16:59,639 --> 00:17:01,980
penetration tester what to look for in

441
00:17:01,980 --> 00:17:04,140
the source code to mitigate it so I

442
00:17:04,140 --> 00:17:05,760
would like to talk about a lot of things

443
00:17:05,760 --> 00:17:07,380
how you're gonna test it how you're

444
00:17:07,380 --> 00:17:09,119
gonna secure it so first thing first

445
00:17:09,119 --> 00:17:10,799
having full understanding of what the

446
00:17:10,799 --> 00:17:12,419
application is supposed to do you have

447
00:17:12,419 --> 00:17:15,419
to be uh take the understanding how the

448
00:17:15,419 --> 00:17:16,799
application is working what are the

449
00:17:16,799 --> 00:17:19,500
flaws of the application and the main

450
00:17:19,500 --> 00:17:21,839
thing is the good thing is dividing and

451
00:17:21,839 --> 00:17:24,059
modeling the workflows every feature of

452
00:17:24,059 --> 00:17:26,280
the the application you have to design

453
00:17:26,280 --> 00:17:30,000
and design the workflow of that then and

454
00:17:30,000 --> 00:17:31,860
create the thread models of that as well

455
00:17:31,860 --> 00:17:34,440
individual modules thread model is a

456
00:17:34,440 --> 00:17:36,120
good approach rather than going for the

457
00:17:36,120 --> 00:17:37,799
whole application and just making one

458
00:17:37,799 --> 00:17:39,780
thread model so if you can just take a

459
00:17:39,780 --> 00:17:41,580
look at what companies are involved in

460
00:17:41,580 --> 00:17:43,740
this one so you can secure it precisely

461
00:17:43,740 --> 00:17:45,840
right analyzing the control carried out

462
00:17:45,840 --> 00:17:47,760
the parameter send the response is

463
00:17:47,760 --> 00:17:50,520
returned every time you have to look out

464
00:17:50,520 --> 00:17:52,320
for something in your web application

465
00:17:52,320 --> 00:17:55,020
now as manager what you have to ask as a

466
00:17:55,020 --> 00:17:56,940
developer as a security concern what you

467
00:17:56,940 --> 00:17:59,160
have to ask if you are turning your data

468
00:17:59,160 --> 00:18:01,860
to someone else who from womb to whom

469
00:18:01,860 --> 00:18:04,380
with whom for whom my data is going

470
00:18:04,380 --> 00:18:07,020
where it is going how much time will it

471
00:18:07,020 --> 00:18:10,980
need to be returned and who is using how

472
00:18:10,980 --> 00:18:13,140
by what means you're saying that I have

473
00:18:13,140 --> 00:18:14,640
to send the request okay perfectly fine

474
00:18:14,640 --> 00:18:17,640
how by what means API okay the API is

475
00:18:17,640 --> 00:18:20,280
secure now it's running on the HTTP so

476
00:18:20,280 --> 00:18:22,440
that's your flow is over here so most of

477
00:18:22,440 --> 00:18:23,940
the apis that I have personally tested

478
00:18:23,940 --> 00:18:26,340
there are HTTP and they are not they are

479
00:18:26,340 --> 00:18:29,580
not protected enough right how much what

480
00:18:29,580 --> 00:18:31,020
quantities are you talking about because

481
00:18:31,020 --> 00:18:32,640
business logic flaws if you go to the

482
00:18:32,640 --> 00:18:34,260
Portugal website that I've mentioned the

483
00:18:34,260 --> 00:18:36,059
image of they have a lot of labs going

484
00:18:36,059 --> 00:18:38,280
on if you go to the business logic Flow

485
00:18:38,280 --> 00:18:39,179
app

486
00:18:39,179 --> 00:18:41,700
um uh testing parameters so you'll see

487
00:18:41,700 --> 00:18:43,860
there are a lot of applications and you

488
00:18:43,860 --> 00:18:45,720
can do the Hands-On testing while doing

489
00:18:45,720 --> 00:18:47,520
the business logic flaws in the current

490
00:18:47,520 --> 00:18:50,520
application so uh

491
00:18:50,520 --> 00:18:52,559
these are all the things that I just

492
00:18:52,559 --> 00:18:53,700
want to say

493
00:18:53,700 --> 00:18:55,440
um so my final word for the presentation

494
00:18:55,440 --> 00:18:57,840
is that if you're a tester and if you

495
00:18:57,840 --> 00:18:59,280
are more interested in the web

496
00:18:59,280 --> 00:19:00,960
application and the mobile exam mainly

497
00:19:00,960 --> 00:19:04,200
in the web applications do consider all

498
00:19:04,200 --> 00:19:06,600
the requests and response never never

499
00:19:06,600 --> 00:19:09,120
earn this estimate any request of the

500
00:19:09,120 --> 00:19:11,400
response just capture and save it for a

501
00:19:11,400 --> 00:19:14,220
while and then delete it no worries but

502
00:19:14,220 --> 00:19:17,179
you have to try one by one everything

503
00:19:17,179 --> 00:19:20,880
just capture a flow first of all right

504
00:19:20,880 --> 00:19:25,320
correct uh legit user login then just

505
00:19:25,320 --> 00:19:28,380
repeat that flow without the valid

506
00:19:28,380 --> 00:19:30,480
credentials then you can see how your

507
00:19:30,480 --> 00:19:32,460
servers are sponsing and your

508
00:19:32,460 --> 00:19:34,559
application is working there are a lot

509
00:19:34,559 --> 00:19:36,480
of things people confuse it with the

510
00:19:36,480 --> 00:19:38,700
idor indirect object reference but

511
00:19:38,700 --> 00:19:40,559
either is something else and you are

512
00:19:40,559 --> 00:19:42,419
talking about we are talking about

513
00:19:42,419 --> 00:19:43,679
something else

514
00:19:43,679 --> 00:19:45,660
so with the snow thank you very much

515
00:19:45,660 --> 00:19:48,720
everyone for your time and I hope to see

516
00:19:48,720 --> 00:19:51,780
you soon uh hopefully and there are some

517
00:19:51,780 --> 00:19:53,340
details if you want to contact me and

518
00:19:53,340 --> 00:19:54,960
there's a barcode you can scan to go

519
00:19:54,960 --> 00:20:00,020
reach me and yeah happy Hunting bye

520
00:20:01,760 --> 00:20:04,140
polite Applause

521
00:20:04,140 --> 00:20:05,760
um thanks that wraps it up for the day

522
00:20:05,760 --> 00:20:08,820
two quick points uh you can gain CPE

523
00:20:08,820 --> 00:20:11,160
credits at the isaca for attending this

524
00:20:11,160 --> 00:20:13,260
conference and they have a stand on this

525
00:20:13,260 --> 00:20:14,160
floor

526
00:20:14,160 --> 00:20:16,200
outside on the right

527
00:20:16,200 --> 00:20:18,480
and they'll be there tomorrow and go

528
00:20:18,480 --> 00:20:20,100
grab yourselves a beer if you want but

529
00:20:20,100 --> 00:20:21,660
don't drink too much because you have to

530
00:20:21,660 --> 00:20:24,380
come back tomorrow

