1
00:00:00,719 --> 00:00:03,540
great news we fixed the problem here

2
00:00:03,540 --> 00:00:06,779
um reintroducing Matthias oleaka

3
00:00:06,779 --> 00:00:09,780
yeah I hope it works

4
00:00:09,780 --> 00:00:14,219
[Applause]

5
00:00:14,219 --> 00:00:17,940
sorry I have like more I thought I would

6
00:00:17,940 --> 00:00:19,980
have more time so I'll be rushing a bit

7
00:00:19,980 --> 00:00:22,619
but don't worry I'm still I'm staying at

8
00:00:22,619 --> 00:00:24,539
till the end of the conference so if you

9
00:00:24,539 --> 00:00:26,160
have any questions or want to discuss

10
00:00:26,160 --> 00:00:29,160
things I'm happy to do that after my

11
00:00:29,160 --> 00:00:31,679
talk so

12
00:00:31,679 --> 00:00:32,340
um

13
00:00:32,340 --> 00:00:34,559
complexity is one of the biggest

14
00:00:34,559 --> 00:00:36,660
challenges we face as a security

15
00:00:36,660 --> 00:00:39,960
industry or I.T security I.T industry in

16
00:00:39,960 --> 00:00:42,480
general we have like different Cloud

17
00:00:42,480 --> 00:00:47,399
providers different VMS containers skus

18
00:00:47,399 --> 00:00:50,340
apis microservices from time to time we

19
00:00:50,340 --> 00:00:52,500
add a new layer of abstraction

20
00:00:52,500 --> 00:00:57,000
and it's harder to keep it secure and

21
00:00:57,000 --> 00:00:59,399
since software is more embedded in our

22
00:00:59,399 --> 00:01:01,379
lives than ever and nothing is going to

23
00:01:01,379 --> 00:01:03,320
change here anytime soon

24
00:01:03,320 --> 00:01:08,119
it is getting more interesting

25
00:01:08,119 --> 00:01:11,820
as a target for criminals

26
00:01:11,820 --> 00:01:12,979
um my name is

27
00:01:12,979 --> 00:01:16,200
I work in securing I'm the principal

28
00:01:16,200 --> 00:01:17,580
security consultant and head of web

29
00:01:17,580 --> 00:01:20,460
security I did counter a training for

30
00:01:20,460 --> 00:01:21,479
Developers

31
00:01:21,479 --> 00:01:24,060
and before uh

32
00:01:24,060 --> 00:01:26,220
I started my journey in security 10

33
00:01:26,220 --> 00:01:27,900
years ago I was software developer

34
00:01:27,900 --> 00:01:30,479
myself I somehow I developed interest in

35
00:01:30,479 --> 00:01:33,479
attacks on developers I splitted that

36
00:01:33,479 --> 00:01:39,560
into uh free areas oh sorry

37
00:01:39,860 --> 00:01:43,380
uh three areas libraries tools and

38
00:01:43,380 --> 00:01:45,840
infrastructure

39
00:01:45,840 --> 00:01:49,320
um getting to libraries since MIT there

40
00:01:49,320 --> 00:01:51,960
was a drawer in MIT you could find the

41
00:01:51,960 --> 00:01:54,180
best algorithms they had and to borrow

42
00:01:54,180 --> 00:01:56,579
them we do the same now we call it

43
00:01:56,579 --> 00:01:58,979
libraries just not to reinvent the wheel

44
00:01:58,979 --> 00:02:02,520
and that's okay but uh those libraries

45
00:02:02,520 --> 00:02:07,259
are a target for attacks now and it got

46
00:02:07,259 --> 00:02:08,758
more complex sometimes when you want to

47
00:02:08,758 --> 00:02:10,440
install just one Library you might end

48
00:02:10,440 --> 00:02:12,180
up having 30 of them because that one

49
00:02:12,180 --> 00:02:14,040
Library depended on something which

50
00:02:14,040 --> 00:02:15,900
depends on something Etc

51
00:02:15,900 --> 00:02:18,480
and you have to secure all of those

52
00:02:18,480 --> 00:02:22,440
dependencies not just one just the 30.

53
00:02:22,440 --> 00:02:24,500
um

54
00:02:25,379 --> 00:02:28,860
here is the catalog of the attacks some

55
00:02:28,860 --> 00:02:30,420
of them are new some of them are things

56
00:02:30,420 --> 00:02:36,019
you now applied to other areas

57
00:02:36,060 --> 00:02:36,780
um

58
00:02:36,780 --> 00:02:40,379
package managers is the way are the way

59
00:02:40,379 --> 00:02:43,379
we get packages and most of them are

60
00:02:43,379 --> 00:02:47,099
console tools and developers make typos

61
00:02:47,099 --> 00:02:50,519
it's supposed to be electron but use

62
00:02:50,519 --> 00:02:54,599
electron instead if you see this

63
00:02:54,599 --> 00:02:57,540
purple graph it's like from Monday to

64
00:02:57,540 --> 00:03:01,140
the week back it's like 32 errors done

65
00:03:01,140 --> 00:03:03,959
32 times this library was downloaded

66
00:03:03,959 --> 00:03:07,860
even though it's locked for some time to

67
00:03:07,860 --> 00:03:09,660
give you an example just from this

68
00:03:09,660 --> 00:03:13,980
Monday a men's company identified a new

69
00:03:13,980 --> 00:03:17,099
npm account which published

70
00:03:17,099 --> 00:03:20,760
more than 150 libraries impersonating in

71
00:03:20,760 --> 00:03:22,440
this attack using type of squatting just

72
00:03:22,440 --> 00:03:23,360
of

73
00:03:23,360 --> 00:03:25,560
be downloaded instead of the original

74
00:03:25,560 --> 00:03:28,560
libraries

75
00:03:30,180 --> 00:03:31,680
sorry

76
00:03:31,680 --> 00:03:37,280
oh yeah can you move

77
00:03:40,680 --> 00:03:46,680
oh sorry sorry I see we were here yeah

78
00:03:46,680 --> 00:03:50,220
so that was the just Monday that's one

79
00:03:50,220 --> 00:03:52,379
incident

80
00:03:52,379 --> 00:03:55,260
um here is the catalog of uh

81
00:03:55,260 --> 00:03:57,480
techniques used in typo squatting so you

82
00:03:57,480 --> 00:04:00,000
see this not only misspelling sometimes

83
00:04:00,000 --> 00:04:03,180
you have a prefix postfix if there are a

84
00:04:03,180 --> 00:04:04,920
few words in the name you have some

85
00:04:04,920 --> 00:04:06,840
ordering attacks some different

86
00:04:06,840 --> 00:04:10,080
separators all of that used to

87
00:04:10,080 --> 00:04:13,760
make developers install that

88
00:04:13,760 --> 00:04:16,440
instead of a

89
00:04:16,440 --> 00:04:20,220
proper original Library

90
00:04:20,220 --> 00:04:24,300
another thing introduced in 2021 what

91
00:04:24,300 --> 00:04:26,880
you see here is a part of package.json

92
00:04:26,880 --> 00:04:30,540
file with dependencies those blue ones

93
00:04:30,540 --> 00:04:34,860
are in public npm repository those in

94
00:04:34,860 --> 00:04:35,940
red

95
00:04:35,940 --> 00:04:39,360
never mind the names those red are

96
00:04:39,360 --> 00:04:41,699
private libraries developed by PayPal

97
00:04:41,699 --> 00:04:44,759
and they should be available only from

98
00:04:44,759 --> 00:04:48,540
private papers package Repository

99
00:04:48,540 --> 00:04:51,120
researcher Alex Burson asks himself a

100
00:04:51,120 --> 00:04:53,639
very good question what will happen if I

101
00:04:53,639 --> 00:04:57,180
will make library with the same name and

102
00:04:57,180 --> 00:04:59,400
I will publish that publicly in public

103
00:04:59,400 --> 00:05:02,280
npm repository but he found out that his

104
00:05:02,280 --> 00:05:04,139
libraries were downloaded either by

105
00:05:04,139 --> 00:05:07,979
developers or cicd servers from PayPal

106
00:05:07,979 --> 00:05:10,199
but it was not only PayPal it was

107
00:05:10,199 --> 00:05:12,419
different package managers and different

108
00:05:12,419 --> 00:05:14,699
companies vulnerable to that just

109
00:05:14,699 --> 00:05:18,120
confusing conclusion from where I

110
00:05:18,120 --> 00:05:19,740
download Library it should be taken from

111
00:05:19,740 --> 00:05:22,259
private not from public but it appeared

112
00:05:22,259 --> 00:05:25,919
that that was wrong since from that we

113
00:05:25,919 --> 00:05:29,940
have this confusion he earned I think a

114
00:05:29,940 --> 00:05:33,539
100 000 dollars in back bounties using

115
00:05:33,539 --> 00:05:36,180
that vulnerability and it's still around

116
00:05:36,180 --> 00:05:38,840
us today

117
00:05:38,940 --> 00:05:41,280
um this is classic fishing we take a

118
00:05:41,280 --> 00:05:43,800
popular Library you might see you have

119
00:05:43,800 --> 00:05:46,800
like weekly downloads almost 8 million

120
00:05:46,800 --> 00:05:49,380
and we fish the maintainer and we

121
00:05:49,380 --> 00:05:51,600
publish a new version so let's have a

122
00:05:51,600 --> 00:05:53,880
very quick analysis what happened in

123
00:05:53,880 --> 00:05:56,100
this modified version so of course

124
00:05:56,100 --> 00:05:57,840
version bump

125
00:05:57,840 --> 00:06:00,000
and the principle directive at the

126
00:06:00,000 --> 00:06:02,699
bottom will it was added it will run

127
00:06:02,699 --> 00:06:04,800
during the package installation

128
00:06:04,800 --> 00:06:09,360
uh so what does it do it starts with OS

129
00:06:09,360 --> 00:06:12,479
detection Macos users are safe in Linux

130
00:06:12,479 --> 00:06:14,160
it will happen something for Linux in

131
00:06:14,160 --> 00:06:19,340
Windows princel dot but will be executed

132
00:06:19,500 --> 00:06:22,919
in Linux the same but sh and let's dive

133
00:06:22,919 --> 00:06:26,639
into what will Linux script will do

134
00:06:26,639 --> 00:06:29,400
first we have geolocation

135
00:06:29,400 --> 00:06:33,180
if you're in Russia Ukraine Belarus or

136
00:06:33,180 --> 00:06:36,600
Kazakhstan it won't work then you skip

137
00:06:36,600 --> 00:06:39,000
to this part it will check if JS

138
00:06:39,000 --> 00:06:41,280
extension process is running if it's not

139
00:06:41,280 --> 00:06:44,220
running it will try with curl on wget

140
00:06:44,220 --> 00:06:46,919
download this file make it executable

141
00:06:46,919 --> 00:06:49,440
around it and this is a cryptocurrency

142
00:06:49,440 --> 00:06:53,160
miner so pretty simple attack Maybe

143
00:06:53,160 --> 00:06:55,500
and more or less the same will happen on

144
00:06:55,500 --> 00:06:58,280
Windows

145
00:06:59,580 --> 00:07:02,960
another example that this this

146
00:07:02,960 --> 00:07:05,580
attacks are happening is from two weeks

147
00:07:05,580 --> 00:07:07,080
back

148
00:07:07,080 --> 00:07:10,280
again mandaio reported that a popular

149
00:07:10,280 --> 00:07:13,680
cryptocurrency exchange dydx npm account

150
00:07:13,680 --> 00:07:15,720
was hacked and they published I think

151
00:07:15,720 --> 00:07:17,060
four

152
00:07:17,060 --> 00:07:19,500
versions of libraries this

153
00:07:19,500 --> 00:07:22,440
cryptocurrency maintains

154
00:07:22,440 --> 00:07:26,580
so it's still a thing

155
00:07:26,580 --> 00:07:30,720
uh here is the idea of attack I find an

156
00:07:30,720 --> 00:07:33,900
old unused npm package or an other

157
00:07:33,900 --> 00:07:37,620
package takeover the expired domain

158
00:07:37,620 --> 00:07:40,440
and recreate the maintainer's email on

159
00:07:40,440 --> 00:07:43,620
npm but this is just the idea the

160
00:07:43,620 --> 00:07:45,240
package it was connected to was for it

161
00:07:45,240 --> 00:07:46,919
and the maintainer stated that yes of

162
00:07:46,919 --> 00:07:50,340
course in the repository was my email on

163
00:07:50,340 --> 00:07:52,319
the domain that expired but my npm

164
00:07:52,319 --> 00:07:54,479
account is tied to a different

165
00:07:54,479 --> 00:07:57,060
a domain but this is this is still a way

166
00:07:57,060 --> 00:08:00,599
to take over something which was with

167
00:08:00,599 --> 00:08:03,000
which some libraries Which is popular

168
00:08:03,000 --> 00:08:05,639
but not maintained anymore maybe some

169
00:08:05,639 --> 00:08:08,340
domain expired

170
00:08:08,340 --> 00:08:11,699
and protest work that's New Breed around

171
00:08:11,699 --> 00:08:14,699
I think March this year

172
00:08:14,699 --> 00:08:18,180
what you see here is a for Loop which

173
00:08:18,180 --> 00:08:20,340
will run indefinitely this is denial of

174
00:08:20,340 --> 00:08:21,479
service

175
00:08:21,479 --> 00:08:23,460
basically it will lock something to the

176
00:08:23,460 --> 00:08:26,520
console and that's it and now uh

177
00:08:26,520 --> 00:08:29,099
stopping in this case

178
00:08:29,099 --> 00:08:32,339
you might ask what will am do IM

179
00:08:32,339 --> 00:08:34,620
displays this gentleman here

180
00:08:34,620 --> 00:08:37,380
on the outer because those changes those

181
00:08:37,380 --> 00:08:39,299
malicious changes were introduced in

182
00:08:39,299 --> 00:08:40,799
colors and Faker those are popular

183
00:08:40,799 --> 00:08:43,799
libraries the author doesn't like big

184
00:08:43,799 --> 00:08:45,540
corporations using his open source

185
00:08:45,540 --> 00:08:47,279
software so he decided to protest in

186
00:08:47,279 --> 00:08:49,019
this way and we have several examples of

187
00:08:49,019 --> 00:08:49,740
that

188
00:08:49,740 --> 00:08:52,019
so imagine you'll use library and the

189
00:08:52,019 --> 00:08:55,440
outer ghost Rogue

190
00:08:55,440 --> 00:08:57,540
to give you some numbers I took a quick

191
00:08:57,540 --> 00:08:59,459
look on sonotypes block they publish

192
00:08:59,459 --> 00:09:00,860
weekly

193
00:09:00,860 --> 00:09:03,959
number of incidents they detected and it

194
00:09:03,959 --> 00:09:06,600
appeared to me that there's almost 90

195
00:09:06,600 --> 00:09:09,120
incidents per week in last month

196
00:09:09,120 --> 00:09:11,220
so it's huge they stated I think

197
00:09:11,220 --> 00:09:13,200
yesterday that they see in last three

198
00:09:13,200 --> 00:09:16,860
years they see 700 percent increase in

199
00:09:16,860 --> 00:09:18,839
attacks on open source software so

200
00:09:18,839 --> 00:09:20,940
that's an issue we were going to stay in

201
00:09:20,940 --> 00:09:24,180
a few next years is not going

202
00:09:24,180 --> 00:09:26,580
um anywhere

203
00:09:26,580 --> 00:09:29,399
uh that was libraries going back to

204
00:09:29,399 --> 00:09:32,519
tools I remember just using my IDE which

205
00:09:32,519 --> 00:09:34,560
was visual studio and you basically

206
00:09:34,560 --> 00:09:36,420
needed just that to make software now

207
00:09:36,420 --> 00:09:38,820
you have very complex CI CD pipelines

208
00:09:38,820 --> 00:09:41,880
very many tools included into creating

209
00:09:41,880 --> 00:09:44,040
of software and few examples

210
00:09:44,040 --> 00:09:46,260
please notice that three of these

211
00:09:46,260 --> 00:09:49,459
examples are package managers we decided

212
00:09:49,459 --> 00:09:51,899
discussed packages now we go into

213
00:09:51,899 --> 00:09:53,700
package managers

214
00:09:53,700 --> 00:09:56,279
on aprils 4 code cough which is still

215
00:09:56,279 --> 00:09:58,500
responsible for dealing with code

216
00:09:58,500 --> 00:09:59,820
coverage you learned that they have an

217
00:09:59,820 --> 00:10:02,459
incident with their tool which is called

218
00:10:02,459 --> 00:10:04,680
Bachelor powder how they learned because

219
00:10:04,680 --> 00:10:06,959
of one of the customers downloaded the

220
00:10:06,959 --> 00:10:09,060
file this is a file and checked it

221
00:10:09,060 --> 00:10:11,519
checked some and indeed it matched the

222
00:10:11,519 --> 00:10:15,080
checksum published on Cloud golf website

223
00:10:15,080 --> 00:10:17,760
basically this is the way you should use

224
00:10:17,760 --> 00:10:20,220
tool this is from original docs you

225
00:10:20,220 --> 00:10:23,580
basically call it and run it without any

226
00:10:23,580 --> 00:10:25,260
kind of verification so please don't do

227
00:10:25,260 --> 00:10:27,019
that

228
00:10:27,019 --> 00:10:31,320
the file contains around 2000 lines of

229
00:10:31,320 --> 00:10:34,980
code which is pretty big bar script that

230
00:10:34,980 --> 00:10:37,980
was just line or one line added by an

231
00:10:37,980 --> 00:10:39,779
attacker and basically what he does here

232
00:10:39,779 --> 00:10:41,700
he grabs

233
00:10:41,700 --> 00:10:42,800
um

234
00:10:42,800 --> 00:10:45,660
environmental variables and sensing I

235
00:10:45,660 --> 00:10:48,660
send those variables to his or her IP

236
00:10:48,660 --> 00:10:50,899
address

237
00:10:51,000 --> 00:10:53,820
and now you might think what the hell is

238
00:10:53,820 --> 00:10:56,519
kotkov that was my fault back then but

239
00:10:56,519 --> 00:10:59,279
to give an example uh a lot of as you

240
00:10:59,279 --> 00:11:01,920
see from this this is one mem I have a

241
00:11:01,920 --> 00:11:06,060
lot of companies is using are using that

242
00:11:06,060 --> 00:11:09,740
amongst others there is rapid seven

243
00:11:09,740 --> 00:11:13,320
who wrote incident response you might

244
00:11:13,320 --> 00:11:17,040
know the Metasploit Creator and a bigger

245
00:11:17,040 --> 00:11:19,320
cooperation I think is hashcorp which

246
00:11:19,320 --> 00:11:21,899
created Vault terraform and several

247
00:11:21,899 --> 00:11:24,420
other very known tools those two

248
00:11:24,420 --> 00:11:27,480
companies among others were affected by

249
00:11:27,480 --> 00:11:29,820
this similar funny

250
00:11:29,820 --> 00:11:31,560
um incident

251
00:11:31,560 --> 00:11:33,899
to comments from the combinator I think

252
00:11:33,899 --> 00:11:35,640
they are very good

253
00:11:35,640 --> 00:11:39,240
do not download think and execute that

254
00:11:39,240 --> 00:11:41,700
immediately in every CA run just not

255
00:11:41,700 --> 00:11:45,300
once but once like a day for example and

256
00:11:45,300 --> 00:11:47,579
verify your own checksum if you publish

257
00:11:47,579 --> 00:11:49,500
something and you publish checks and

258
00:11:49,500 --> 00:11:54,380
make sure that you verify them yourself

259
00:11:54,600 --> 00:11:57,480
another package manager Homebrew is a

260
00:11:57,480 --> 00:12:00,000
for missing packager package manager for

261
00:12:00,000 --> 00:12:01,160
Mac

262
00:12:01,160 --> 00:12:04,100
they have an automated

263
00:12:04,100 --> 00:12:06,540
pull request review

264
00:12:06,540 --> 00:12:10,140
and researchers discovered that there

265
00:12:10,140 --> 00:12:12,120
was a flaw in library they used to make

266
00:12:12,120 --> 00:12:14,820
sure make the diff of files in a way

267
00:12:14,820 --> 00:12:17,040
that he could uh

268
00:12:17,040 --> 00:12:21,300
create a specific pull request to bypass

269
00:12:21,300 --> 00:12:23,339
that and to be accepted which would

270
00:12:23,339 --> 00:12:26,820
execute running and literary a code on

271
00:12:26,820 --> 00:12:29,459
machines using Homebrew fortunately for

272
00:12:29,459 --> 00:12:31,320
us and for humble users it was a

273
00:12:31,320 --> 00:12:35,880
researcher not a an attacker

274
00:12:35,880 --> 00:12:39,300
another incident in npm itself

275
00:12:39,300 --> 00:12:42,060
uh a vulnerability was reported to them

276
00:12:42,060 --> 00:12:45,540
that you could publish basically any

277
00:12:45,540 --> 00:12:48,600
package existing in npm

278
00:12:48,600 --> 00:12:51,300
probably complexity here as I discussed

279
00:12:51,300 --> 00:12:54,240
it in the beginning I popped in you see

280
00:12:54,240 --> 00:12:56,399
we have microservices and inconsistent

281
00:12:56,399 --> 00:12:58,920
authorization and validation of data so

282
00:12:58,920 --> 00:13:00,600
basically you could publish package

283
00:13:00,600 --> 00:13:04,139
what's funny they state that since they

284
00:13:04,139 --> 00:13:05,760
have Telemetry which is around two years

285
00:13:05,760 --> 00:13:08,160
they didn't see exploit of exploitation

286
00:13:08,160 --> 00:13:09,839
of this vulnerability but before that

287
00:13:09,839 --> 00:13:11,760
they they don't know and the

288
00:13:11,760 --> 00:13:13,639
vulnerability predates

289
00:13:13,639 --> 00:13:18,060
uh the timeline they have logs

290
00:13:18,060 --> 00:13:21,779
uh ruby gems had an interesting

291
00:13:21,779 --> 00:13:24,860
um also issue with package

292
00:13:24,860 --> 00:13:28,440
if you could guess the next

293
00:13:28,440 --> 00:13:31,200
um version number of a package to be

294
00:13:31,200 --> 00:13:32,459
published

295
00:13:32,459 --> 00:13:35,279
you could craft invalid James spec and

296
00:13:35,279 --> 00:13:38,000
publish your malicious code to S3

297
00:13:38,000 --> 00:13:40,920
which will hold your package as the

298
00:13:40,920 --> 00:13:43,560
package you are spoofing

299
00:13:43,560 --> 00:13:45,600
and later of course the proper package

300
00:13:45,600 --> 00:13:47,100
will overwrite

301
00:13:47,100 --> 00:13:51,420
the your packaging S3 unless you make

302
00:13:51,420 --> 00:13:54,380
the CDN cache before that so interesting

303
00:13:54,380 --> 00:13:57,120
uh chain of vulnerabilities

304
00:13:57,120 --> 00:14:01,860
to put a spoofed package via uh ruby

305
00:14:01,860 --> 00:14:03,720
gems

306
00:14:03,720 --> 00:14:07,019
an infrastructure back then I when I was

307
00:14:07,019 --> 00:14:10,320
developer I remember we had just we

308
00:14:10,320 --> 00:14:13,800
switched uh release mode in visual

309
00:14:13,800 --> 00:14:16,200
studio and we set our app to some

310
00:14:16,200 --> 00:14:17,480
Network

311
00:14:17,480 --> 00:14:20,040
disk we copied the binaries basically

312
00:14:20,040 --> 00:14:23,180
now you have a lot of tools in cicd

313
00:14:23,180 --> 00:14:25,920
servers and infrastructure

314
00:14:25,920 --> 00:14:29,360
just one example from PHP

315
00:14:29,360 --> 00:14:31,500
from last year

316
00:14:31,500 --> 00:14:33,420
they learned that they have two

317
00:14:33,420 --> 00:14:35,339
malicious comments done

318
00:14:35,339 --> 00:14:38,519
probably via compromise of their git

319
00:14:38,519 --> 00:14:40,740
service

320
00:14:40,740 --> 00:14:43,740
those are two comments and two just two

321
00:14:43,740 --> 00:14:45,600
quick things I want to point out

322
00:14:45,600 --> 00:14:48,959
here we have a sleep C class because PHP

323
00:14:48,959 --> 00:14:51,240
is in C and the latest compression and

324
00:14:51,240 --> 00:14:54,540
from the heaven from we are now dealing

325
00:14:54,540 --> 00:14:57,120
with HTTP here so that's a first thing

326
00:14:57,120 --> 00:15:01,019
uh you want to pay attention to and then

327
00:15:01,019 --> 00:15:03,660
what's happened here they

328
00:15:03,660 --> 00:15:05,820
check a user agent they created a

329
00:15:05,820 --> 00:15:07,920
variable they check user agent if the

330
00:15:07,920 --> 00:15:09,899
user agent starts with xerodium they

331
00:15:09,899 --> 00:15:13,079
will basically execute any code back

332
00:15:13,079 --> 00:15:16,440
then the string as a PHP so this is like

333
00:15:16,440 --> 00:15:18,600
a very

334
00:15:18,600 --> 00:15:22,100
easy to spot a backdoor

335
00:15:22,100 --> 00:15:24,660
this is the owner of zerogam zero to

336
00:15:24,660 --> 00:15:26,639
miss company who buys and sells zero

337
00:15:26,639 --> 00:15:29,760
days and he says it's trolling of course

338
00:15:29,760 --> 00:15:33,360
and somehow I agree with that but what's

339
00:15:33,360 --> 00:15:35,339
most interesting in this incident is how

340
00:15:35,339 --> 00:15:37,079
it was done

341
00:15:37,079 --> 00:15:41,100
so PHP after analysis the team behind

342
00:15:41,100 --> 00:15:43,440
PHP learned that you could push comments

343
00:15:43,440 --> 00:15:47,940
not only via SSH but also via https and

344
00:15:47,940 --> 00:15:49,740
it used a different library and

345
00:15:49,740 --> 00:15:52,199
different user database

346
00:15:52,199 --> 00:15:55,860
and yes they found logs and yes those

347
00:15:55,860 --> 00:15:59,339
Comics were made via this mechanism so

348
00:15:59,339 --> 00:16:01,019
https

349
00:16:01,019 --> 00:16:03,660
what they analyzed they say that there

350
00:16:03,660 --> 00:16:05,940
were too few guesses because in this log

351
00:16:05,940 --> 00:16:08,279
you might see there's like 401 so

352
00:16:08,279 --> 00:16:10,680
probably bad password or something

353
00:16:10,680 --> 00:16:15,000
but the guesses were too few to be this

354
00:16:15,000 --> 00:16:18,480
uh as a successful uh Brute Force attack

355
00:16:18,480 --> 00:16:20,880
so probably someone compromised a

356
00:16:20,880 --> 00:16:22,800
massive PHP Network the user base and

357
00:16:22,800 --> 00:16:25,680
passwords were stored

358
00:16:25,680 --> 00:16:27,480
and that's uh

359
00:16:27,480 --> 00:16:29,940
of course all of this is quote quotes

360
00:16:29,940 --> 00:16:31,440
from their statement but this is the

361
00:16:31,440 --> 00:16:34,740
best one this uh system was running very

362
00:16:34,740 --> 00:16:38,399
old cold very old OS very old PHP

363
00:16:38,399 --> 00:16:40,680
version so something

364
00:16:40,680 --> 00:16:43,560
had to go wrong in this case so this is

365
00:16:43,560 --> 00:16:45,600
yeah a few Lessons Learned to learn

366
00:16:45,600 --> 00:16:47,220
about

367
00:16:47,220 --> 00:16:50,339
um infrastructure and security from PHP

368
00:16:50,339 --> 00:16:53,100
uh skipping to summary in case of

369
00:16:53,100 --> 00:16:55,380
libraries most important thing is to be

370
00:16:55,380 --> 00:16:57,320
aware of the

371
00:16:57,320 --> 00:17:00,779
attacks are in it I hope I made you

372
00:17:00,779 --> 00:17:03,540
aware of these types of attacks make no

373
00:17:03,540 --> 00:17:06,119
typos yeah that's funny everyone makes

374
00:17:06,119 --> 00:17:09,179
typos but yeah use tools either open

375
00:17:09,179 --> 00:17:11,160
source or commercial to detect malicious

376
00:17:11,160 --> 00:17:13,199
dependencies

377
00:17:13,199 --> 00:17:15,299
of course download it only from official

378
00:17:15,299 --> 00:17:17,579
sources when you're not sure of anything

379
00:17:17,579 --> 00:17:20,339
about the library do not install that

380
00:17:20,339 --> 00:17:23,579
and enable2fa if you maintain any open

381
00:17:23,579 --> 00:17:26,280
source or not project enabled to the

382
00:17:26,280 --> 00:17:29,760
file the one story about UFA both npm

383
00:17:29,760 --> 00:17:33,720
and Pipi decided to enforce 25 for

384
00:17:33,720 --> 00:17:37,039
critical projects npm said 100

385
00:17:37,039 --> 00:17:39,720
might be classified 4000 projects as

386
00:17:39,720 --> 00:17:40,919
critical

387
00:17:40,919 --> 00:17:42,120
and

388
00:17:42,120 --> 00:17:44,640
yeah I don't have any data about the npm

389
00:17:44,640 --> 00:17:47,280
if it worked and in case of pipe those

390
00:17:47,280 --> 00:17:49,500
are stats they published and in case of

391
00:17:49,500 --> 00:17:50,940
adoption

392
00:17:50,940 --> 00:17:54,720
uh I think they are reaching basing on

393
00:17:54,720 --> 00:17:57,320
those

394
00:17:57,320 --> 00:17:59,039
uh

395
00:17:59,039 --> 00:18:00,960
screens they are reaching their

396
00:18:00,960 --> 00:18:03,600
assumption but there is always someone

397
00:18:03,600 --> 00:18:06,419
who disagrees and this is this is a

398
00:18:06,419 --> 00:18:08,280
story of atomic rights that's a library

399
00:18:08,280 --> 00:18:10,679
in pipei which is quite popular if you

400
00:18:10,679 --> 00:18:13,140
see the last month download

401
00:18:13,140 --> 00:18:16,620
got such email and he was saying that hi

402
00:18:16,620 --> 00:18:18,900
your project was made as critical and

403
00:18:18,900 --> 00:18:24,000
you we would want to give you a free key

404
00:18:24,000 --> 00:18:27,480
to make you you more secure account more

405
00:18:27,480 --> 00:18:29,340
secure by an album to effect and he said

406
00:18:29,340 --> 00:18:30,419
no

407
00:18:30,419 --> 00:18:34,140
I better delete the library instead and

408
00:18:34,140 --> 00:18:35,460
he deleted that

409
00:18:35,460 --> 00:18:38,280
because he was like

410
00:18:38,280 --> 00:18:41,820
he disagrees with with 2fa and he broke

411
00:18:41,820 --> 00:18:44,820
a bit of Ip libraries because uh some of

412
00:18:44,820 --> 00:18:47,580
them related to those he deleted and

413
00:18:47,580 --> 00:18:51,539
pipey uh in the end Reign stated those

414
00:18:51,539 --> 00:18:55,080
libraries and he uh archived and stopped

415
00:18:55,080 --> 00:18:56,039
uh

416
00:18:56,039 --> 00:18:59,220
dealing with with this Atomic rights

417
00:18:59,220 --> 00:19:01,140
Library this is the quote from him so I

418
00:19:01,140 --> 00:19:03,000
I'm not going to worry about your supply

419
00:19:03,000 --> 00:19:06,660
engine for free basically

420
00:19:06,660 --> 00:19:09,120
so enable to file explain it that is

421
00:19:09,120 --> 00:19:12,539
important and enable to effect in case

422
00:19:12,539 --> 00:19:14,460
of tools

423
00:19:14,460 --> 00:19:16,620
repeat please repeat after me I will not

424
00:19:16,620 --> 00:19:18,419
download and execute anything from the

425
00:19:18,419 --> 00:19:21,780
internet without checking that yeah I

426
00:19:21,780 --> 00:19:23,700
will verify check some or signature or

427
00:19:23,700 --> 00:19:25,260
whatever it means I have to make sure

428
00:19:25,260 --> 00:19:27,600
that this is the one tool and that's it

429
00:19:27,600 --> 00:19:30,720
that's the one thing I wanted

430
00:19:30,720 --> 00:19:33,480
install again from official sources and

431
00:19:33,480 --> 00:19:37,260
update what you already have installed

432
00:19:37,260 --> 00:19:39,660
that's it in case of tools

433
00:19:39,660 --> 00:19:41,820
and in case of your infrastructure your

434
00:19:41,820 --> 00:19:44,039
developer infrastructure be careful you

435
00:19:44,039 --> 00:19:46,320
have to at each point in time you have

436
00:19:46,320 --> 00:19:48,660
to know what you have especially if it's

437
00:19:48,660 --> 00:19:50,400
publicly available in the cloud you have

438
00:19:50,400 --> 00:19:52,799
to have good asset inventory

439
00:19:52,799 --> 00:19:55,559
learn from PHP and disable what you

440
00:19:55,559 --> 00:19:56,700
don't use

441
00:19:56,700 --> 00:20:00,600
uh secure everything else

442
00:20:00,600 --> 00:20:03,440
remember to update it frequently

443
00:20:03,440 --> 00:20:07,140
to fix issues which are known

444
00:20:07,140 --> 00:20:09,240
and of course monitor at the end monitor

445
00:20:09,240 --> 00:20:11,340
everything and especially your developer

446
00:20:11,340 --> 00:20:14,039
infrastructure to make sure that you

447
00:20:14,039 --> 00:20:18,059
know what's going on inside your

448
00:20:18,059 --> 00:20:20,220
uh infrastructure if it's your

449
00:20:20,220 --> 00:20:21,600
developers or someone else actually

450
00:20:21,600 --> 00:20:23,760
putting out your source code

451
00:20:23,760 --> 00:20:25,679
and that's it apologies for the

452
00:20:25,679 --> 00:20:27,660
technical problems if you have any

453
00:20:27,660 --> 00:20:31,280
questions feel free to reach me out

454
00:20:31,710 --> 00:20:32,190
[Applause]

455
00:20:32,190 --> 00:20:35,339
[Music]

