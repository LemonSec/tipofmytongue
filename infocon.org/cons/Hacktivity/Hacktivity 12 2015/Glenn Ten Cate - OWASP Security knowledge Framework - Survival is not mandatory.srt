1
00:00:00,000 --> 00:00:06,370
so yeah I'm really happy to be here and
well explain more and juicy aviation as

2
00:00:06,370 --> 00:00:12,460
a comparison to the whole security and
software development so yeah survival is

3
00:00:12,460 --> 00:00:17,510
not mandatory and the Air Force One has
departures and are you on board so later

4
00:00:17,510 --> 00:00:27,910
on in the end we will come back to
discretion and yeah dive into it so who

5
00:00:27,910 --> 00:00:33,130
am i i'm glad the cat and security do
that you were killers also the authors

6
00:00:33,130 --> 00:00:35,110
together with my brother Alastair

7
00:00:35,110 --> 00:00:40,340
security knowledge framework well you're
some coordinates if you want to contact

8
00:00:40,340 --> 00:00:47,829
or have questions so yeah I want to
start with airplanes I mean I am

9
00:00:47,829 --> 00:00:53,430
personally really scared when I first
went into an airplane I mean you give up

10
00:00:53,430 --> 00:00:58,949
control but again it's really a false
mean of traveling rights it's it's also

11
00:00:58,949 --> 00:01:04,390
has a really cool it's using the latest
technology it has also pilots a lot of

12
00:01:04,390 --> 00:01:10,450
cool technology and they're monitoring
communication and yeah in my opinion

13
00:01:10,450 --> 00:01:16,650
they are very reliable like if you take
a bike or go walking and there's a

14
00:01:16,650 --> 00:01:23,290
higher chance of you would die rights so
yeah I want to dive into the OL aviation

15
00:01:23,290 --> 00:01:29,790
and airplanes and to see how day handle
well problems how they deal with risk

16
00:01:29,790 --> 00:01:35,930
and I think it was a really good
comparison to the whole software

17
00:01:35,930 --> 00:01:43,880
development part and security I'm so
indie airplane aviation world you have a

18
00:01:43,880 --> 00:01:48,810
lot of training of course training is
essential when creating new pilots and

19
00:01:48,810 --> 00:01:50,399
you know teach them all the time

20
00:01:50,399 --> 00:01:55,460
all the things and she conceded has to
know a lot of things before they even

21
00:01:55,460 --> 00:02:02,509
can start right ed instrumentations the
automation do all the stuff so training

22
00:02:02,509 --> 00:02:09,410
takes a long time and it's really the
profession right it's part of the whole

23
00:02:09,410 --> 00:02:15,079
we are not to develop cycle but the
whole cycle the aviation and getting to

24
00:02:15,080 --> 00:02:21,270
learn the experience and the things that
shouldn't know so and the other thing is

25
00:02:21,270 --> 00:02:26,440
checklists they use a lot of checklist
before they land before it ago they

26
00:02:26,440 --> 00:02:32,820
check everything because you don't want
to ever airplane drop out of the sky or

27
00:02:32,820 --> 00:02:36,900
lease the airplane did this cost
billions of dollars and there's also

28
00:02:36,900 --> 00:02:43,760
people in there so hey let's Jack Jack
to Jack so checklists are really

29
00:02:43,760 --> 00:02:48,950
important for the aviation and the
airport wireless also you have a lot of

30
00:02:48,950 --> 00:02:55,130
manuals I mean when there is a critical
situation they can grab the manual go to

31
00:02:55,130 --> 00:02:59,030
discuss if point in there and have some
guidance on the issue

32
00:02:59,030 --> 00:03:03,570
how to solve it if the engine feels what
is the next procedure what should we do

33
00:03:03,570 --> 00:03:09,640
right now also manuals are part of the
whole flow over a vision

34
00:03:09,640 --> 00:03:16,309
very important then of course you have
testing they test everything in very in

35
00:03:16,310 --> 00:03:23,170
depth fuse right they really check like
you did yesterday a matter of how strong

36
00:03:23,170 --> 00:03:28,820
is it how many birds can resist right so
all their data parts of the airplane are

37
00:03:28,820 --> 00:03:35,070
really tested in depth let you see here
in the picture here you see a pump water

38
00:03:35,070 --> 00:03:40,290
into D engine because yeah and there is
a use case when you are in the sky and

39
00:03:40,290 --> 00:03:46,140
there's a big storm the engine shouldn't
you know drop outdoor fields are closed

40
00:03:46,140 --> 00:03:51,000
because of the amount of water being
pumped into the engine so in here you

41
00:03:51,000 --> 00:03:57,870
see it being tested properly to see and
if it's handled correctly so they do a

42
00:03:57,870 --> 00:04:03,140
lot of testing like to create critical
individual components certain conditions

43
00:04:03,140 --> 00:04:07,829
are really rare rights mineral testing
of course and in your PC will

44
00:04:07,830 --> 00:04:13,260
automatically testing testing of all the
stuff all the components and how they

45
00:04:13,260 --> 00:04:20,108
work together a really important also I
think this is very important part

46
00:04:20,108 --> 00:04:24,400
sharing information so the airline
companies when they found something and

47
00:04:24,400 --> 00:04:30,489
that's really an issue like possible to
let the airplane crash or you know they

48
00:04:30,490 --> 00:04:36,060
they immediately send this information
around also the other Aviation's an

49
00:04:36,060 --> 00:04:40,500
airplane manufacturing to see if this
problem also is in their right they

50
00:04:40,500 --> 00:04:46,069
really have a close connection together
and learn from their mistakes and trying

51
00:04:46,069 --> 00:04:51,189
to share his knowledge thirty other
loans so they can keep their assets safe

52
00:04:51,189 --> 00:04:57,240
and keep our life safe right not letting
the plane crash so in the end I see this

53
00:04:57,240 --> 00:05:02,569
as an old old this is for the good of
protecting us for protecting the

54
00:05:02,569 --> 00:05:07,259
airplanes protecting the people and I
really like this idea this open

55
00:05:07,259 --> 00:05:12,759
mindedness authority charter helping
because it's a win-win for everybody if

56
00:05:12,759 --> 00:05:20,009
they're playing keeps in the air right
so now I want to make sure this step to

57
00:05:20,009 --> 00:05:27,360
the software development world so I want
to start with how important it is to do

58
00:05:27,360 --> 00:05:33,900
security i mean last year this year
around 45 million web applications

59
00:05:33,900 --> 00:05:40,239
Gottex and these are only misstep in the
metrics we know overrides so 545 million

60
00:05:40,240 --> 00:05:46,430
that were open about it like a we got
heck so we don't even see arrested in

61
00:05:46,430 --> 00:05:53,729
guts reported right so also a lot of
sensitive information is leaked well

62
00:05:53,729 --> 00:06:00,680
correlated to the airplane industry lies
of people are at risk and also really

63
00:06:00,680 --> 00:06:09,500
better in ninety and and heck you know
and I CIT is still behind so yeah the

64
00:06:09,500 --> 00:06:15,779
title says it those who fail to learn
from history are forced to repeat bust

65
00:06:15,779 --> 00:06:26,339
and well yeah we have to learn we have
to adopt we have to share knowledge like

66
00:06:26,339 --> 00:06:30,700
the aviation industry is doing

67
00:06:30,700 --> 00:06:37,260
so then I come to the point where the
sharing knowledge sharing knowledge I

68
00:06:37,260 --> 00:06:43,980
see is indeed software security World
Gym already mentioned it a little bit is

69
00:06:43,980 --> 00:06:48,190
the open-air web application security
effort well wide non-profit charitable

70
00:06:48,190 --> 00:06:54,210
organization really focus on improving
security helping developers helping to

71
00:06:54,210 --> 00:06:59,750
world to do security right so it is
really enormous sharing platform /

72
00:06:59,750 --> 00:07:05,200
network for everybody is interested in
doing security proper and and you know

73
00:07:05,200 --> 00:07:14,500
want to have guidance with it so again I
like just like doing the aviation parts

74
00:07:14,500 --> 00:07:18,820
sharing the knowledge it is a win-win
situation for everybody

75
00:07:18,820 --> 00:07:25,700
also use checklists like we see in
aviation industry so application

76
00:07:25,700 --> 00:07:30,670
security verification standards that's
the world wide use checklists is already

77
00:07:30,670 --> 00:07:32,970
like five six years old

78
00:07:32,970 --> 00:07:39,010
we're now at their traditional
three-point 0 that is going to be

79
00:07:39,010 --> 00:07:45,680
released like yesterday wow ok so
yesterday the new version of the ICS

80
00:07:45,680 --> 00:07:49,300
checklists came out like I said this is
really worldwide

81
00:07:49,300 --> 00:07:56,350
already accepted and it's all about
securing replications in deaths yeah of

82
00:07:56,350 --> 00:07:59,660
course visit us for more information

83
00:07:59,660 --> 00:08:06,400
so what is the ICS it is the
verification standard and not only did

84
00:08:06,400 --> 00:08:10,549
you can also use it as a security
requirements depending on what type of

85
00:08:10,550 --> 00:08:16,640
application will defend you can say okay
the security requirement can be level 14

86
00:08:16,640 --> 00:08:21,780
really easy simple web applications or a
level 34 really critical applications

87
00:08:21,780 --> 00:08:25,890
and depending on what level you choose
their different type of security

88
00:08:25,890 --> 00:08:34,299
controls will be in there so what does
it mean if you don't have security

89
00:08:34,299 --> 00:08:35,780
requirements

90
00:08:35,780 --> 00:08:40,740
well in my honest opinion can only lead
to one thing in this case in the eight

91
00:08:40,740 --> 00:08:41,380
years

92
00:08:41,380 --> 00:08:48,020
it it you know an airplane crash right i
mean the only question is when

93
00:08:48,020 --> 00:08:53,120
if we don't deal with security and we
don't have security requirements

94
00:08:53,120 --> 00:09:00,420
this is reality lies are at risk so now
the good part

95
00:09:00,420 --> 00:09:06,219
training also owe us as a lot of
training capabilities like I said I am

96
00:09:06,220 --> 00:09:10,990
the author of two security military it
is really a tool intended to help and

97
00:09:10,990 --> 00:09:16,630
guide different person trained them it
is fully open it is all about creating

98
00:09:16,630 --> 00:09:23,080
web applications security by design we
also make use of the ASDs suppose

99
00:09:23,080 --> 00:09:31,740
development stage and again you know
also we try to map and learn from the

100
00:09:31,740 --> 00:09:37,250
aviation I mean I have really safe good
feeling when I get into an airplane and

101
00:09:37,250 --> 00:09:42,810
I know it you know I get there I get
some agencies and a land safely show

102
00:09:42,810 --> 00:09:48,770
training in here is also very important
now I want to talk a little bit about GE

103
00:09:48,770 --> 00:09:54,600
Security knowledge framework so in the
security military have multiple core

104
00:09:54,600 --> 00:09:59,860
functionality like the pre-development
face those developments face the

105
00:09:59,860 --> 00:10:04,140
security knowledge framework as a
reference for looking up their heads

106
00:10:04,140 --> 00:10:08,410
because when we find out when you are in
desperate and you want to have some

107
00:10:08,410 --> 00:10:14,010
guidance on specific how to do or
implement certain type of functionality

108
00:10:14,010 --> 00:10:20,590
is still hard to find find a really good
place where there's an authority and you

109
00:10:20,590 --> 00:10:25,100
can trust or you know it's validated
with you look there and it was really

110
00:10:25,100 --> 00:10:30,000
hard because well it take for example
cool site request forgery

111
00:10:30,000 --> 00:10:34,970
if you google it he get tons of examples
of those tons of examples only like

112
00:10:34,970 --> 00:10:39,080
three or four are really good they're
really security by design

113
00:10:39,080 --> 00:10:42,860
thought about it they didn't miss any
implementation force you know they

114
00:10:42,860 --> 00:10:49,310
thought well if you were lucky and just
use the other see ya then you head you

115
00:10:49,310 --> 00:10:50,560
you implemented

116
00:10:50,560 --> 00:10:56,050
we cross I so want to address this issue

117
00:10:56,050 --> 00:11:00,300
want to you know to create a global
place where you can look up the

118
00:11:00,300 --> 00:11:05,900
information get guidance and also is in
place because it's transparent its

119
00:11:05,900 --> 00:11:11,439
open-source everybody can preview and
edit or make you know contributions to

120
00:11:11,440 --> 00:11:17,040
it and we also have a security code
examples

121
00:11:17,040 --> 00:11:22,170
those are really intended to help the
developer really implementation level

122
00:11:22,170 --> 00:11:28,050
and the code examples are not meant to
taste all about getting the right

123
00:11:28,050 --> 00:11:33,540
mindset to empower developer to create
defensible web applications that are

124
00:11:33,540 --> 00:11:38,620
really secure by design and get the
security code examples we tried to get

125
00:11:38,620 --> 00:11:44,240
more guidance and thats about the whole
mindset that a developer you have right

126
00:11:44,240 --> 00:11:53,600
so now I want to explore all of you and
look at the security knowledge framework

127
00:11:53,600 --> 00:11:58,410
itself the security military is
basically a web application that you can

128
00:11:58,410 --> 00:12:04,800
see on your local machine if you want
one that you can also spend it up as a

129
00:12:04,800 --> 00:12:23,010
surface in such a company and you should
like that so let me

130
00:12:23,010 --> 00:12:33,450
opened everybody can inject we also have
that so if somebody now so I see inject

131
00:12:33,450 --> 00:12:39,020
the application will go to look down
month so please don't so basically this

132
00:12:39,020 --> 00:12:43,650
is the landing page of these securities
this application you can also run like I

133
00:12:43,650 --> 00:12:48,640
said before as a service or local on the
machine of the developer this is the

134
00:12:48,640 --> 00:12:54,939
landing page and as you can see we have
a certain type of things so I will want

135
00:12:54,940 --> 00:12:59,100
to start with the knowledge base the
knowledge base is basically what all the

136
00:12:59,100 --> 00:13:03,510
other things are built around it so the
knowledge base are like almost more than

137
00:13:03,510 --> 00:13:10,020
200 items that you should take into
consideration or implement in your call

138
00:13:10,020 --> 00:13:16,970
may be critical replication so she can
see here is very extensive and really

139
00:13:16,970 --> 00:13:22,610
big list so if you have a critical that
the application and you know that really

140
00:13:22,610 --> 00:13:24,810
is critical

141
00:13:24,810 --> 00:13:32,199
you should implement all those checklist
items but look how many are so again so

142
00:13:32,200 --> 00:13:36,810
the whole idea of the knowledge bases to
have a central place of reference where

143
00:13:36,810 --> 00:13:40,689
you can look something up so many here
you can just say I want to know

144
00:13:40,690 --> 00:13:45,430
something about uploading and then you
get the file upload injections so the

145
00:13:45,430 --> 00:13:50,569
knowledge base is basically explaining
what the attack vector is off this item

146
00:13:50,570 --> 00:13:55,740
so what can attack you do when you have
injections and as you can see we don't

147
00:13:55,740 --> 00:14:02,150
bother showing how the developer can
ahead or a dude is no we were just

148
00:14:02,150 --> 00:14:09,000
creating awareness and mindset also
after deadline what show what the X

149
00:14:09,000 --> 00:14:14,140
Factor israel's I have a solution and in
the solution we want to guide the

150
00:14:14,140 --> 00:14:19,140
developer and tell him what are all the
possibilities to really mitigate and you

151
00:14:19,140 --> 00:14:25,730
know stop this in type of a tech sector
this knowledgebase items are done also

152
00:14:25,730 --> 00:14:29,520
used in the pre-development face and
oppose development phase but I will show

153
00:14:29,520 --> 00:14:34,110
you did in a bit then we have like I
said before

154
00:14:34,110 --> 00:14:39,360
codec samples we do have like PHP
and.net examples we are working on the

155
00:14:39,360 --> 00:14:47,350
white sand and Josh Peck samples and in
here we can have again a more in-depth

156
00:14:47,350 --> 00:14:54,680
view and how to approach this type of
functionality so for example this code

157
00:14:54,680 --> 00:15:00,469
example is about each be followed load a
PHP file plans can be done in like three

158
00:15:00,470 --> 00:15:04,140
four lines of code you have to
functionality then you have to follow

159
00:15:04,140 --> 00:15:10,209
the road but if you don't properly build
this functionality and Decker can easily

160
00:15:10,209 --> 00:15:15,880
own you're serious about loading his own
coat raining it's executed and yeah you

161
00:15:15,880 --> 00:15:21,000
don't deserve ur so in here we have the
code examples where we really want to

162
00:15:21,000 --> 00:15:26,300
guide the developer implementation level
and create the right mindset to how to

163
00:15:26,300 --> 00:15:31,899
approach is so for example in here we we
start to validation gloss restart the

164
00:15:31,899 --> 00:15:38,329
looking glass then rejected the image we
selected upload their then we have well

165
00:15:38,329 --> 00:15:43,660
we tell about what do we check so we do
an input validation and again

166
00:15:43,660 --> 00:15:49,519
input validation is really important
because those metrics we can use later

167
00:15:49,519 --> 00:15:55,010
on in the application to make the
application make decisions do proactive

168
00:15:55,010 --> 00:16:00,930
counter measurements or all that type of
stuff that we continue to validation

169
00:16:00,930 --> 00:16:06,479
than we do and handle the whole
functionality but before we do that we

170
00:16:06,480 --> 00:16:10,740
gonna log that we gonna do this so
sometimes you have an application that

171
00:16:10,740 --> 00:16:17,070
doesn't action and it does the action
after day action in the section but what

172
00:16:17,070 --> 00:16:21,529
would happen if the attacker did a
successful a pic then it probably never

173
00:16:21,529 --> 00:16:25,310
reach the logging functionality you
wouldn't know that there's something

174
00:16:25,310 --> 00:16:30,859
wrong or somebody tried to text you so
also in here we have I don't know it's

175
00:16:30,860 --> 00:16:35,699
very visible but so the comment says
seven counter if counting its read

176
00:16:35,699 --> 00:16:39,969
user's session must be terminated after
three sessions terminations user account

177
00:16:39,970 --> 00:16:43,110
should be blocked since the high threat
level will lead to a meeting

178
00:16:43,110 --> 00:16:47,190
early session termination so when you
have really critical functionality you

179
00:16:47,190 --> 00:16:50,970
want to punish that user you want to use
the validation the law

180
00:16:50,970 --> 00:16:56,269
increase the counter and saying no
you're doing bad stuff move so here is a

181
00:16:56,269 --> 00:17:01,130
good example how you can use your
logging and the audits to prevent and do

182
00:17:01,130 --> 00:17:07,540
proactive counter measurements well then
we go further we do a location if the

183
00:17:07,540 --> 00:17:14,540
checks not correct we do the effluent
you type checking when its successful we

184
00:17:14,540 --> 00:17:19,829
look that also right and then we
continue so as you can see it's really

185
00:17:19,829 --> 00:17:25,359
about getting the right mindset and how
a developer should approach it

186
00:17:25,359 --> 00:17:31,189
yeah and like I said before we also have
it for a.net I'm so also here you can

187
00:17:31,190 --> 00:17:32,730
have a look

188
00:17:32,730 --> 00:17:38,919
bloat so yeah basically that the
reference part right if you want to have

189
00:17:38,919 --> 00:17:44,720
a specific question or want to have on
the sports information about the certain

190
00:17:44,720 --> 00:17:50,250
subject you can use to knowledge base or
new code examples to look it up but

191
00:17:50,250 --> 00:17:53,799
that's not the only thing the security
monitoring america's for we also have

192
00:17:53,799 --> 00:18:01,960
the ability to create projects and in
this project you can see I already

193
00:18:01,960 --> 00:18:08,030
created one we have the ability to use
the pre-development functionality or

194
00:18:08,030 --> 00:18:12,350
deposed development functionality and
the pre-development functionality that

195
00:18:12,350 --> 00:18:18,399
is basically what a developer would use
when he's in the sprint or thinking much

196
00:18:18,400 --> 00:18:23,549
use cases so you have to develop new
type of functionality and in here you

197
00:18:23,549 --> 00:18:28,299
can put it into it so even before you
write a single line of code you get

198
00:18:28,299 --> 00:18:34,250
awareness by using their pre development
tool so for example I can say here I'm

199
00:18:34,250 --> 00:18:42,200
gonna work on like Sprint too and I'm
gonna add functionality so now I can

200
00:18:42,200 --> 00:18:46,900
select multiple types of function and
basically this is a technology stacks or

201
00:18:46,900 --> 00:18:50,600
the functionality developer is no common
and

202
00:18:50,600 --> 00:18:55,850
it's often being used so in here I can
say well we gonna do something with

203
00:18:55,850 --> 00:19:08,189
forms you gotta do something with the
uploads see where is ya applauded well

204
00:19:08,190 --> 00:19:13,190
we are applauding so maybe it's also
nice to do the file download so now we

205
00:19:13,190 --> 00:19:18,450
can add those type of technology and
functionality to this redevelopment face

206
00:19:18,450 --> 00:19:21,960
and I we can say okay this is the type
of functionality will want to deliver

207
00:19:21,960 --> 00:19:28,100
for the next release then we can click
here to do and view the results so what

208
00:19:28,100 --> 00:19:32,740
happens now is to security know it's
rumored made a correlation with this

209
00:19:32,740 --> 00:19:36,860
type of functionality 2d knowledge base
item in the security knowledge framework

210
00:19:36,860 --> 00:19:40,959
so for example the following blows what
what time with X Factor's do you have

211
00:19:40,960 --> 00:19:45,200
there well the fall if those injections
and again you see the whole knowledge

212
00:19:45,200 --> 00:19:51,169
base item in here so before developer
starts riding coat is already aware of

213
00:19:51,169 --> 00:19:56,659
the tech sectors that are lurking around
the corner for him so for the file

214
00:19:56,659 --> 00:20:00,860
downloads you have to respect reflective
download and install download injections

215
00:20:00,860 --> 00:20:06,729
same for forums you have a sort of
veteran you can not only do and say like

216
00:20:06,730 --> 00:20:10,350
oh yeah you have to do this reform know
if there are multiple things you have to

217
00:20:10,350 --> 00:20:15,750
do to make it really acute form and
submission for example symbols a single

218
00:20:15,750 --> 00:20:19,640
user input validation controls and other
looks yesterday you get your cross-site

219
00:20:19,640 --> 00:20:25,970
request forgery tokens respect the
principles lost privileges are you have

220
00:20:25,970 --> 00:20:30,000
to use get / both so if you're doing
data mutations you have to do it always

221
00:20:30,000 --> 00:20:35,289
by posting a good example 300 they are
using get so everything is is leaked in

222
00:20:35,289 --> 00:20:39,950
your browser in the low except for us so
these are all type of things

223
00:20:39,950 --> 00:20:46,210
developer should take into consideration
and I like I said it's it's telling him

224
00:20:46,210 --> 00:20:49,909
up front so even before he writes a
single line of code you get this

225
00:20:49,909 --> 00:20:54,700
feedback you can also download the
report as a docx where all this

226
00:20:54,700 --> 00:20:59,180
information is in and shared among his
colleagues or team

227
00:20:59,180 --> 00:21:04,780
so basically the developer has this
feedback he goes and built the

228
00:21:04,780 --> 00:21:08,210
functionality that was desire when he
created

229
00:21:08,210 --> 00:21:11,870
functionality he wanted then we got it

230
00:21:11,870 --> 00:21:16,469
oppose development face the pose
development face is the place where we

231
00:21:16,470 --> 00:21:21,160
created all the coat and we want to do
the verification if it's implemented

232
00:21:21,160 --> 00:21:29,070
correctly and four deaths we are using
open still readable we are using SPSS

233
00:21:29,070 --> 00:21:36,300
application security verification
standards we do have split up into level

234
00:21:36,300 --> 00:21:41,620
1 level one is very nice if you want to
start you don't doing any security yet I

235
00:21:41,620 --> 00:21:46,209
would recommend starting at level one
but for this example just a mo we will

236
00:21:46,210 --> 00:21:56,270
have to look at the level 3 and she
delivered real yeah so basically this is

237
00:21:56,270 --> 00:22:01,980
the a serious project and as you can see
it is really really extensive checklist

238
00:22:01,980 --> 00:22:07,430
for helping developers doing the
verification so this part only is about

239
00:22:07,430 --> 00:22:13,500
a tenth occasion verification so as you
can see there are lot of security

240
00:22:13,500 --> 00:22:21,340
controls items in there like so let's
say 15 they get the next section is

241
00:22:21,340 --> 00:22:25,520
about session management how to do
proper session management I mean if you

242
00:22:25,520 --> 00:22:29,810
would miss or not do one of those your
whole session management design is

243
00:22:29,810 --> 00:22:34,629
fraught if you forget to set for example
the failure to secure Flickr you kookie

244
00:22:34,630 --> 00:22:41,260
kookie you can do all this stuff and I
still or an attacker can still exploit

245
00:22:41,260 --> 00:22:48,290
exploit it and you know each whole
purpose of it so access control

246
00:22:48,290 --> 00:22:51,760
malicious input handling crypto

247
00:22:51,760 --> 00:22:56,320
error handling and logging data
protection communications security to

248
00:22:56,320 --> 00:23:02,439
have a protocol security militias
controls business logic and resources

249
00:23:02,440 --> 00:23:04,830
all those checks are helping

250
00:23:04,830 --> 00:23:10,970
you know to do the verification for the
developer so how would a developer use

251
00:23:10,970 --> 00:23:18,149
this basically it is an expert system so
it is basically using this security

252
00:23:18,149 --> 00:23:22,739
controls as a question and if the
developer says well yeah I thought of it

253
00:23:22,740 --> 00:23:29,190
and checked it would buy this it's all
good he can select Yes I'm good if he

254
00:23:29,190 --> 00:23:34,330
comes to an item and he didn't
implemented also she was not echoed user

255
00:23:34,330 --> 00:23:38,750
password when it sends it so in this
case he's like oh shit yeah I'm sending

256
00:23:38,750 --> 00:23:43,730
DePaul swing through an email it's like
oh yeah no you didn't correctly

257
00:23:43,730 --> 00:23:47,710
implemented security control so you
leave it all know we also have the

258
00:23:47,710 --> 00:23:52,110
information box it gives some more
complex about the checklist your airfare

259
00:23:52,110 --> 00:23:58,928
flying so again to help him understand
him better what is required

260
00:23:58,929 --> 00:24:05,320
basically the developer will do and fill
in the hole checklist then safety

261
00:24:05,320 --> 00:24:09,950
checklist and what disputing the
literary merck has done now he has

262
00:24:09,950 --> 00:24:13,450
correlated all the items that were
selected as a No

263
00:24:13,450 --> 00:24:16,840
and correlated those two again
knowledgebase items to help the

264
00:24:16,840 --> 00:24:22,178
developer making him and we're hey you
didn't implement this security control

265
00:24:22,179 --> 00:24:29,360
so what is the impact what can an
attacker do what arnie a tech sectors so

266
00:24:29,360 --> 00:24:34,740
for example the first 10 possibly not
echoed between its uses the internet so

267
00:24:34,740 --> 00:24:39,350
people can boss word leaking data
security knowledge base item this

268
00:24:39,350 --> 00:24:43,668
security control is correlated to so
again you get a description of what is

269
00:24:43,669 --> 00:24:47,460
possible for an attacker and again you
get a solution allows developers should

270
00:24:47,460 --> 00:24:55,110
approach it at the adult so here this is
determining the level of the ass vs item

271
00:24:55,110 --> 00:25:00,340
it's coming from so you also know if its
level one item or a level 3 like really

272
00:25:00,340 --> 00:25:06,080
critical for for a highly critical
applications yeah I'm basically again

273
00:25:06,080 --> 00:25:09,539
this disk can be shared this can be

274
00:25:09,539 --> 00:25:15,850
shared among the team and you know help
the developer empower him with knowledge

275
00:25:15,850 --> 00:25:22,609
yeah and and make it really aware that
what the possibilities are we don't

276
00:25:22,609 --> 00:25:30,840
implement security controls so basically
done those are the type of course when

277
00:25:30,840 --> 00:25:36,049
you using the security malicious rumor
what I do personally is posed

278
00:25:36,049 --> 00:25:43,080
developments face I sit together with
the development team and really do like

279
00:25:43,080 --> 00:25:49,609
extreme programming approach like get
them all in the room put the decoder the

280
00:25:49,609 --> 00:25:55,039
Beamer on the big screen and really go
through each item on the code level and

281
00:25:55,039 --> 00:26:00,299
try to well I tried to challenge them so
did you thought about this or when did

282
00:26:00,299 --> 00:26:04,639
you and then we go check decode duty
implementation check all the air

283
00:26:04,639 --> 00:26:09,869
security controls and will take me like
you and a day and a half to really feel

284
00:26:09,869 --> 00:26:11,270
in the level 3

285
00:26:11,270 --> 00:26:17,870
checklist right because it's that
expensive and so that's really in my

286
00:26:17,870 --> 00:26:22,909
experience it creates a lot of synergy I
mean I learn a lot of those developers

287
00:26:22,910 --> 00:26:27,270
I'm also developed by hard so you get
this nice in directional sharing

288
00:26:27,270 --> 00:26:35,090
knowledge and it really is a nice get
some nice atmosphere to basically no was

289
00:26:35,090 --> 00:26:43,750
a little game of work and now I want to
go into the next level so you know

290
00:26:43,750 --> 00:26:48,880
having a literary enhancing security
requirements that is basically the first

291
00:26:48,880 --> 00:26:54,240
step right in the whole software
development lifecycle so you still have

292
00:26:54,240 --> 00:26:58,960
to do a manual things in the software
development lifecycle by example using

293
00:26:58,960 --> 00:27:04,540
security framework feeling all the
questions but also you want to do code

294
00:27:04,540 --> 00:27:08,639
review if you have critical
functionality like a login or password

295
00:27:08,640 --> 00:27:14,580
reset or whatever you want to do it code
refuel before ice principle of course

296
00:27:14,580 --> 00:27:19,949
you want to use their their static
analyzer security tooling right so the

297
00:27:19,950 --> 00:27:23,880
other debate checkers and I don't want
to know anything

298
00:27:23,880 --> 00:27:29,090
am so so tooling then you have the
dynamic version of it so that is for

299
00:27:29,090 --> 00:27:35,060
example 200 soapbox he does really and
dynamic application should it can be run

300
00:27:35,060 --> 00:27:39,610
automatically that's true but still you
have to manually validate all the

301
00:27:39,610 --> 00:27:45,030
findings that will pop out and of course
at the old at the end of the whole of

302
00:27:45,030 --> 00:27:49,800
the whole security development lifecycle
you want to do in manual dentist by an

303
00:27:49,800 --> 00:27:54,889
expert and why is that because those
aren't experts right they can then do a

304
00:27:54,890 --> 00:27:59,250
phone stuff not focusing on core site
scripting or you know the low staff

305
00:27:59,250 --> 00:28:08,700
really advanced stuff so always do
fantastic i really X expert so of course

306
00:28:08,700 --> 00:28:14,370
we also have a lot of possibilities to
automate things and the things you can

307
00:28:14,370 --> 00:28:17,539
automate we should do right so

308
00:28:17,539 --> 00:28:22,629
what made my life really easy when
developing gold security knowledge

309
00:28:22,629 --> 00:28:27,939
framework is having automation
continuous integration so we can do

310
00:28:27,940 --> 00:28:33,309
deploys whenever you like or multiple
times a day and still get the quality of

311
00:28:33,309 --> 00:28:38,460
coat and you know that we want to
deliver so for example we use in our

312
00:28:38,460 --> 00:28:42,789
software development life cycle of the
overall security monitoring her project

313
00:28:42,789 --> 00:28:47,879
itself use three type of continuous
integration tooling the first one is

314
00:28:47,879 --> 00:28:54,330
Trevor's overalls and scrutinized to
traverse is basically a sort of the

315
00:28:54,330 --> 00:29:00,939
Jenkins it's built streets right what
happened this you can track is up to

316
00:29:00,940 --> 00:29:06,249
your guests hope when did have to change
it will notify Trevor's he will see you

317
00:29:06,249 --> 00:29:11,519
pick up to new coat and tried to run it
ran it as in spending over an instance

318
00:29:11,519 --> 00:29:17,720
putting your code there and depending on
what your folly as it will do

319
00:29:17,720 --> 00:29:22,679
built project verify if still correctly
being set up and build all that stuff

320
00:29:22,679 --> 00:29:28,109
then you have to control the coveralls
is basically that's happening after the

321
00:29:28,109 --> 00:29:32,149
bill after Travis when Travis all
successful you don't have any syntax

322
00:29:32,149 --> 00:29:36,889
errors the project is still running and
installing then it's time to do the

323
00:29:36,889 --> 00:29:42,389
overalls and coveralls is basically
getting metrics from the unit testing

324
00:29:42,389 --> 00:29:49,869
and display it in a very nice manner so
ideas when a developer does it commits

325
00:29:49,869 --> 00:29:56,570
and he passes the built on the rivers
but maybe he changed code and then some

326
00:29:56,570 --> 00:30:00,499
type of functionality feels the
developer can then see because it's

327
00:30:00,499 --> 00:30:05,619
going to use integrated after 11 holes
minute that's almost a unit test feels

328
00:30:05,619 --> 00:30:10,799
certain percentage of the whole
government metrics drops instantly so it

329
00:30:10,799 --> 00:30:15,879
is a really good feedback visual loop
for developer to CEO's I i killed some

330
00:30:15,879 --> 00:30:23,219
functionality so I have to relook at me
and see where I messed up then the los

331
00:30:23,220 --> 00:30:28,130
parties the scrutinize her and basically
scrutinize aristede code quality

332
00:30:28,130 --> 00:30:33,940
checking tool so what it does is Wendy
first Travis it was successful

333
00:30:33,940 --> 00:30:39,170
windy roads to unit test was successful
then the los martes to scrutinize and

334
00:30:39,170 --> 00:30:44,010
what this does is it will analyze to
coat on quality level to do you have any

335
00:30:44,010 --> 00:30:49,450
debt and go do you have any duplication
go do you have any really complex FL

336
00:30:49,450 --> 00:30:56,530
state block that is you know any to
complexity but there's also decreasing

337
00:30:56,530 --> 00:31:03,710
their maturity in the quality of your
clothes so again with this integration

338
00:31:03,710 --> 00:31:09,180
surface when a developer does it commits
and he had traded slope because you're

339
00:31:09,180 --> 00:31:14,860
dead end or duplication go to great
softie project will drop and well you

340
00:31:14,860 --> 00:31:17,189
know now we have eight so if it goes

341
00:31:17,190 --> 00:31:24,790
definitely know and then see the impact
of to commit you have done so now I want

342
00:31:24,790 --> 00:31:32,620
to also show a little about the software
development lifecycle and show you their

343
00:31:32,620 --> 00:31:40,679
different service so in here this is the
place where security is placed

344
00:31:40,680 --> 00:31:47,260
everything is is in here so for example
the information the codec samples all

345
00:31:47,260 --> 00:31:52,100
that stuff you can just look it up here
click it is all in markdown foremost so

346
00:31:52,100 --> 00:31:56,889
if you want to see anybody can be easy
modify it and then

347
00:31:56,890 --> 00:32:11,870
push it so for example let me edit
something here and commit change so what

348
00:32:11,870 --> 00:32:18,209
does no happiness I made a modification
travelers will notice and pick it up

349
00:32:18,210 --> 00:32:28,220
that I didn't different that this is a
new coat being pushed and as you can see

350
00:32:28,220 --> 00:32:33,240
here and already picked it up so
transnational hey something strange

351
00:32:33,240 --> 00:32:37,210
change there in the ghetto project I
need to read validate recheck if

352
00:32:37,210 --> 00:32:40,860
everything still works so this is
basically an automatic process that

353
00:32:40,860 --> 00:32:46,110
happens every time I do admit it also
works when somebody's for can guess

354
00:32:46,110 --> 00:32:52,399
project in their own repo space and you
also have all those benefits it'll duty

355
00:32:52,400 --> 00:32:58,490
integration only Travis part in dense
correctly being built then it will do

356
00:32:58,490 --> 00:33:03,220
the unit testing and when that's done it
will decode quality and it's all

357
00:33:03,220 --> 00:33:09,180
independent of the main branch right so
really cool that everybody dan has this

358
00:33:09,180 --> 00:33:16,450
support and and continuous integration
this would normally take about two and a

359
00:33:16,450 --> 00:33:21,700
half minutes to rebuild the whole
project setup install it and to see if

360
00:33:21,700 --> 00:33:29,780
there's any errors in it is that when
dole quickly and then creates metrics

361
00:33:29,780 --> 00:33:34,770
for you know the outcome of the unit
testing so unit testing produce metrics

362
00:33:34,770 --> 00:33:41,830
and those metrics you will see back in
here and again so it's very obvious if

363
00:33:41,830 --> 00:33:47,540
you forget or break a functionality
because they're displaying the graphics

364
00:33:47,540 --> 00:33:51,530
will immediately issue and give you
feedback hey something's wrong go fix

365
00:33:51,530 --> 00:33:58,020
and then of course it lost then we have
two years scrutinize her and then she

366
00:33:58,020 --> 00:34:02,510
can see here and we'll give you a great
so if somebody again put very bad or

367
00:34:02,510 --> 00:34:05,180
good not good coach you will see me

368
00:34:05,180 --> 00:34:10,630
neatly that he made a mistake or not he
didn't add me ride quality of the cold

369
00:34:10,630 --> 00:34:16,570
we can have a look at for example this
one did this has D and was already gone

370
00:34:16,570 --> 00:34:24,810
but again so if you could click on the
race you get the feedback of why it is

371
00:34:24,810 --> 00:34:30,570
getting this great and again so you have
feedback loop that's very short that

372
00:34:30,570 --> 00:34:36,920
really helps the developer so when I was
talking it now successfully run the

373
00:34:36,920 --> 00:34:42,830
whole project did he said up tested when
the overall no extra code then we go to

374
00:34:42,830 --> 00:34:49,299
detest face and we're in two tests and
then we'll see that all the unit testing

375
00:34:49,300 --> 00:34:55,290
was correctly then we will show the
Symmetrix 2d coveralls and what we are

376
00:34:55,290 --> 00:35:00,620
seriously near and India when we refresh
it we will see if data- code example

377
00:35:00,620 --> 00:35:05,279
fall applauded by blah blah and we have
still the same coverage so I didn't miss

378
00:35:05,280 --> 00:35:09,390
our break any functionality down over
here

379
00:35:09,390 --> 00:35:13,970
same again will do this can and will
create your post so if you go back to

380
00:35:13,970 --> 00:35:20,930
the main project over here you have all
those project status details and this

381
00:35:20,930 --> 00:35:27,200
gives me an instant overview what the
state and the quality airsoft my project

382
00:35:27,200 --> 00:35:31,210
and when you have a lot of contributors
you really want something like this

383
00:35:31,210 --> 00:35:38,890
right it also helps takes away time from
the developer so he has more time to do

384
00:35:38,890 --> 00:35:44,140
security right that's what we want so
again it's really short feedback loop

385
00:35:44,140 --> 00:35:46,540
that is really valuable

386
00:35:46,540 --> 00:35:56,630
for for developers so yeah I like I said
we did the whole aviation example make

387
00:35:56,630 --> 00:36:03,280
it compares so what would happen if if
if somebody would say this to the

388
00:36:03,280 --> 00:36:08,710
president for his air force one airplane
like yes not necessary to change is not

389
00:36:08,710 --> 00:36:19,790
mandatory and then I mean c'mon so take
lessons from the aviation work together

390
00:36:19,790 --> 00:36:25,420
if you have experience if you have
knowledge about security please help I

391
00:36:25,420 --> 00:36:29,820
mean we all in here to you know make it
a better world its old win-win for

392
00:36:29,820 --> 00:36:34,610
everybody if you would like to help
disputing the literary merit please do

393
00:36:34,610 --> 00:36:38,630
if you want to help other OS projects
where you have a certain type of

394
00:36:38,630 --> 00:36:44,650
experience build up please help I mean
we are all in it together I also use the

395
00:36:44,650 --> 00:36:48,500
same airplane euro of going to use and
I'm also gonna use all these services

396
00:36:48,500 --> 00:36:55,320
you i mean it's all heavily connected
right now and this is the moment to step

397
00:36:55,320 --> 00:37:02,960
up or we end up like the airplane that's
coming down right so yeah basically that

398
00:37:02,960 --> 00:37:08,820
was my talk aren't any questions

399
00:37:08,820 --> 00:37:15,050
it was a lot of information and it's not
only about doing security by design but

400
00:37:15,050 --> 00:37:20,460
it's also about the whole process about
the whole software development lifecycle

401
00:37:20,460 --> 00:37:44,800
using integration tools just words and
you still can have the awareness that

402
00:37:44,800 --> 00:37:48,920
you know you have to do something but
only implementation level there are so

403
00:37:48,920 --> 00:37:51,400
many things that the wrong and that's
also where do you

404
00:37:51,400 --> 00:37:58,240
show so yeah I would like to have more
code examples that that the help and

405
00:37:58,240 --> 00:38:02,089
guide to developers and empower them
with the knowledge to really you know

406
00:38:02,089 --> 00:38:08,890
create secure web applications so yeah
if you can write that stuff please help

407
00:38:08,890 --> 00:38:15,598
if you're really good at you know towns
and and written it nicely also step in

408
00:38:15,599 --> 00:38:21,619
and help check the other side there are
tons of really cool project that that

409
00:38:21,619 --> 00:38:27,520
are you know and in jail you for example
2000 dependency check it is static

410
00:38:27,520 --> 00:38:34,809
analyzer tool that is finding all old
season in you know whatever and every

411
00:38:34,809 --> 00:38:41,829
time I run that project and and duck to
I found like 150 foreign abilities known

412
00:38:41,829 --> 00:38:48,089
CD East in projects is likely not so
again never ever look at that the

413
00:38:48,089 --> 00:38:53,569
oversight and and maybe the security
framework and you know step up and help

414
00:38:53,569 --> 00:38:58,808
us help yourself right

415
00:38:58,809 --> 00:39:13,230
Lt seal is your re-election guy he's
also you know open source visionary

416
00:39:13,230 --> 00:39:18,400
created the second Bristol for example
so yeah we are all in the same mindset

417
00:39:18,400 --> 00:39:23,180
over there and really want to add sell
you to the world and make it available

418
00:39:23,180 --> 00:39:25,669
for everybody so yeah

