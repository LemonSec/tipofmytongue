1
00:00:00,030 --> 00:00:02,820
good afternoon my name is mathias agin

2
00:00:02,820 --> 00:00:05,100
the next couple of minutes I want to

3
00:00:05,100 --> 00:00:07,880
talk about yeah mice and keyboards

4
00:00:07,880 --> 00:00:10,740
especially the security of so-called

5
00:00:10,740 --> 00:00:14,400
modern wireless desktop sets some words

6
00:00:14,400 --> 00:00:16,580
about me I work as an IT security

7
00:00:16,580 --> 00:00:19,820
consultant for company called Zeus since

8
00:00:19,820 --> 00:00:22,619
2007 I'm interested in information

9
00:00:22,619 --> 00:00:25,980
technology since I was a little kid yeah

10
00:00:25,980 --> 00:00:28,199
and especially actually security I

11
00:00:28,199 --> 00:00:29,279
studied computer science at the

12
00:00:29,279 --> 00:00:32,130
University of Rome in Germany a long

13
00:00:32,130 --> 00:00:34,770
time ago and Anita's research together

14
00:00:34,770 --> 00:00:37,710
with my colleague mr. Gekkos samaya he

15
00:00:37,710 --> 00:00:40,110
unfortunately couldn't be here today so

16
00:00:40,110 --> 00:00:42,649
I'll present this talk on my own and

17
00:00:42,649 --> 00:00:45,360
yeah Mr host Mars also very interested

18
00:00:45,360 --> 00:00:48,300
in information technology especially IT

19
00:00:48,300 --> 00:00:52,110
security yeah he studied IT security at

20
00:00:52,110 --> 00:00:54,989
University of Allen and also works as a

21
00:00:54,989 --> 00:00:56,399
colleague of mine as IT security

22
00:00:56,399 --> 00:00:59,850
consultant since 2014 the agenda of this

23
00:00:59,850 --> 00:01:02,399
this talk is as follows at first I want

24
00:01:02,399 --> 00:01:04,229
to give a short introduction about the

25
00:01:04,229 --> 00:01:06,810
use technology of this research I will

26
00:01:06,810 --> 00:01:08,760
shortly present the previous work of

27
00:01:08,760 --> 00:01:10,890
other researches that our research is

28
00:01:10,890 --> 00:01:13,680
based on then we'll give a short

29
00:01:13,680 --> 00:01:16,530
overview of our research that we did

30
00:01:16,530 --> 00:01:19,890
then I will talk about the text surface

31
00:01:19,890 --> 00:01:22,140
and attack scenarios concerning the test

32
00:01:22,140 --> 00:01:24,930
devices so wireless keyboards and

33
00:01:24,930 --> 00:01:27,810
wireless mice and then this interesting

34
00:01:27,810 --> 00:01:30,000
part the found security vulnerabilities

35
00:01:30,000 --> 00:01:33,990
of our research I will also show some

36
00:01:33,990 --> 00:01:36,750
demos some hour not live so I have

37
00:01:36,750 --> 00:01:39,689
videos but at the end of the talk I will

38
00:01:39,689 --> 00:01:42,720
also try to show one demo and I hope the

39
00:01:42,720 --> 00:01:46,439
demo gods are well with me today and of

40
00:01:46,439 --> 00:01:47,340
course it'll be conclusion

41
00:01:47,340 --> 00:01:49,259
recommendations or recommendation and

42
00:01:49,259 --> 00:01:53,729
Q&A after the talk so what I'm going to

43
00:01:53,729 --> 00:01:56,100
talk about is actually this what we can

44
00:01:56,100 --> 00:01:57,780
see here on the picture on the upper row

45
00:01:57,780 --> 00:02:00,659
you can see that target device in this

46
00:02:00,659 --> 00:02:02,880
case it's a wireless desktop set from

47
00:02:02,880 --> 00:02:05,700
Microsoft is a desktop mm I'm actually

48
00:02:05,700 --> 00:02:08,550
and the desktop set consists of a

49
00:02:08,550 --> 00:02:09,989
keyboard and mouse and dongle I know

50
00:02:09,989 --> 00:02:12,020
everybody in this room

51
00:02:12,020 --> 00:02:15,980
and in the lower row of the picture you

52
00:02:15,980 --> 00:02:18,620
can see some devices I and my colleague

53
00:02:18,620 --> 00:02:22,040
have used for an analysis purposes it's

54
00:02:22,040 --> 00:02:23,150
on the left you can see a

55
00:02:23,150 --> 00:02:25,640
software-defined radio I for example

56
00:02:25,640 --> 00:02:27,860
used a heck of one made by great Scot

57
00:02:27,860 --> 00:02:30,550
gadgets my Cosmin it's a great device

58
00:02:30,550 --> 00:02:34,310
then we've also used a crazy radio PAE I

59
00:02:34,310 --> 00:02:36,920
will use this kind of device I have here

60
00:02:36,920 --> 00:02:39,380
in my hands afterwards in the live demo

61
00:02:39,380 --> 00:02:42,200
and I have also a Logitech unifying

62
00:02:42,200 --> 00:02:44,690
receiver right here in my hand that's

63
00:02:44,690 --> 00:02:48,020
very small some of you may also own

64
00:02:48,020 --> 00:02:50,810
subsidies and you can't actually or

65
00:02:50,810 --> 00:02:52,220
perform all the tracks that will show

66
00:02:52,220 --> 00:02:54,590
here using a Logitech unifying receiver

67
00:02:54,590 --> 00:02:57,500
that costs 16 euros I think on Amazon

68
00:02:57,500 --> 00:03:01,240
right now okay on this slide you can see

69
00:03:01,240 --> 00:03:04,130
how wireless devices actually work it's

70
00:03:04,130 --> 00:03:06,770
it's easy as shown here you have a

71
00:03:06,770 --> 00:03:08,570
keyboard that sends keystrokes

72
00:03:08,570 --> 00:03:11,090
wirelessly so over-the-air using radio

73
00:03:11,090 --> 00:03:13,970
communication 2 USB dongle that works as

74
00:03:13,970 --> 00:03:16,220
an receiver and this USB dongle is

75
00:03:16,220 --> 00:03:18,280
plugged into your PC and then you have

76
00:03:18,280 --> 00:03:21,230
human human interface device and you can

77
00:03:21,230 --> 00:03:24,080
have user input on your PC and same as

78
00:03:24,080 --> 00:03:25,400
with the mouse so you have a wireless

79
00:03:25,400 --> 00:03:29,170
mouse it's also communicates using

80
00:03:29,170 --> 00:03:31,880
regular data communication with the USB

81
00:03:31,880 --> 00:03:34,370
dongle and Sam's in this case specific

82
00:03:34,370 --> 00:03:36,320
mouse actions like mouse movements or

83
00:03:36,320 --> 00:03:40,280
mouse clicks to the domino concerning

84
00:03:40,280 --> 00:03:42,050
the previous work our research is based

85
00:03:42,050 --> 00:03:47,360
on yeah there are actually four projects

86
00:03:47,360 --> 00:03:52,400
it started back in 2009 what our

87
00:03:52,400 --> 00:03:54,260
research is based on with a key curriki

88
00:03:54,260 --> 00:03:56,810
as well as actually 2009 with 2 version

89
00:03:56,810 --> 00:04:00,620
at one point 0 and 2010 with the version

90
00:04:00,620 --> 00:04:04,520
2 of ki-ki-ri-ki it was research done by

91
00:04:04,520 --> 00:04:07,160
a dream lab technologies max mu Santos

92
00:04:07,160 --> 00:04:10,520
Masuda who yeah had a look at what is

93
00:04:10,520 --> 00:04:13,010
test upsets and found some

94
00:04:13,010 --> 00:04:14,780
vulnerabilities for example they were

95
00:04:14,780 --> 00:04:16,910
able to break the proprietary encryption

96
00:04:16,910 --> 00:04:18,680
of the Microsoft Wireless Desktop set

97
00:04:18,680 --> 00:04:22,460
and 27 megahertz keyboard and they also

98
00:04:22,460 --> 00:04:26,140
had a look in a 2.4 gigahertz

99
00:04:26,710 --> 00:04:30,820
technology that was used by some other

100
00:04:30,820 --> 00:04:32,780
keywords later on for example also

101
00:04:32,780 --> 00:04:34,340
Microsoft Bartlett's test subsets a

102
00:04:34,340 --> 00:04:38,690
logitech then in 2011 Travis good speech

103
00:04:38,690 --> 00:04:39,560
yeah

104
00:04:39,560 --> 00:04:42,700
was also here a tenant's conference

105
00:04:42,700 --> 00:04:46,880
released nautical about promiscuity

106
00:04:46,880 --> 00:04:50,540
of the specific transmitter that was

107
00:04:50,540 --> 00:04:53,450
used in these kind of devices and he was

108
00:04:53,450 --> 00:04:55,700
able to improve the work done by the

109
00:04:55,700 --> 00:04:58,460
dream lab guys and found a very

110
00:04:58,460 --> 00:05:01,790
interesting cool way to sniff this kind

111
00:05:01,790 --> 00:05:03,950
of radio communication with only one

112
00:05:03,950 --> 00:05:08,900
device one radio last year there was the

113
00:05:08,900 --> 00:05:11,540
release of a tool called his paper it is

114
00:05:11,540 --> 00:05:14,240
part of the so-called NSA playset by

115
00:05:14,240 --> 00:05:16,790
semi come car and this is actually a

116
00:05:16,790 --> 00:05:20,540
better version of ki-ki-ri-ki I think

117
00:05:20,540 --> 00:05:25,670
it's it fits in a USB power connector

118
00:05:25,670 --> 00:05:30,770
and can sniff the proprietary data

119
00:05:30,770 --> 00:05:33,650
communication that was also significant

120
00:05:33,650 --> 00:05:35,690
by clicker Ricky and you can D clear the

121
00:05:35,690 --> 00:05:38,330
data communication and send it while the

122
00:05:38,330 --> 00:05:41,090
radio communication they are outside of

123
00:05:41,090 --> 00:05:43,490
a building and you can sniff on wireless

124
00:05:43,490 --> 00:05:45,770
keyboards and then in February this year

125
00:05:45,770 --> 00:05:48,320
your mouth check was releases this is a

126
00:05:48,320 --> 00:05:50,980
set of actually different

127
00:05:50,980 --> 00:05:55,550
vulnerabilities in devices like wireless

128
00:05:55,550 --> 00:05:57,770
mice and wireless keyboard and this

129
00:05:57,770 --> 00:06:00,380
research was done by Mullen of the steel

130
00:06:00,380 --> 00:06:04,190
networks and yeah we also use some of

131
00:06:04,190 --> 00:06:06,350
the tools as we see later on that's mark

132
00:06:06,350 --> 00:06:08,150
England has released in February and

133
00:06:08,150 --> 00:06:11,360
later on so our research actually

134
00:06:11,360 --> 00:06:14,300
started way back in April 2015 as a

135
00:06:14,300 --> 00:06:16,430
customer project so one of our customers

136
00:06:16,430 --> 00:06:18,470
wanted us to have a look at actual three

137
00:06:18,470 --> 00:06:20,720
wireless test subsets that are using AES

138
00:06:20,720 --> 00:06:22,970
encryption so we now research we only

139
00:06:22,970 --> 00:06:26,930
looked at devices that had a a AES

140
00:06:26,930 --> 00:06:30,140
encryption yeah so we actually tested

141
00:06:30,140 --> 00:06:31,880
different devices but during the

142
00:06:31,880 --> 00:06:33,200
customer project we were not able to

143
00:06:33,200 --> 00:06:35,120
find all the bomb abilities are we the

144
00:06:35,120 --> 00:06:35,500
talking

145
00:06:35,500 --> 00:06:38,350
here right now because liberation was

146
00:06:38,350 --> 00:06:41,290
rather limited of this project and in

147
00:06:41,290 --> 00:06:44,380
the end we had a look at the five

148
00:06:44,380 --> 00:06:46,170
devices that are listed here so

149
00:06:46,170 --> 00:06:48,700
Microsoft Wireless test of 2000 a cherry

150
00:06:48,700 --> 00:06:51,700
a ESB unlimited Fujitsu balls keyboard

151
00:06:51,700 --> 00:06:57,550
set Alex yeah 901 a Logitech MK 520 and

152
00:06:57,550 --> 00:07:01,480
the pair Xterra duo 710 w we bought

153
00:07:01,480 --> 00:07:02,860
these devices because they were all

154
00:07:02,860 --> 00:07:05,230
available in Germany wire Emerson and

155
00:07:05,230 --> 00:07:07,900
worshipped in one day so that was

156
00:07:07,900 --> 00:07:09,580
actually how I found it and these

157
00:07:09,580 --> 00:07:12,370
devices while a search query on Amazon

158
00:07:12,370 --> 00:07:14,530
Wallace desktop set AES and that's what

159
00:07:14,530 --> 00:07:17,200
we got our research actually was very

160
00:07:17,200 --> 00:07:19,780
fragmented due to more important things

161
00:07:19,780 --> 00:07:22,600
like doing work for money to pay the

162
00:07:22,600 --> 00:07:22,990
rent

163
00:07:22,990 --> 00:07:25,450
so there were times where we didn't do

164
00:07:25,450 --> 00:07:27,610
anything on this project for a couple of

165
00:07:27,610 --> 00:07:30,250
months so around the fragmented yeah

166
00:07:30,250 --> 00:07:32,800
it's just a picture showing yeah the

167
00:07:32,800 --> 00:07:34,180
boxes of all the devices that we've

168
00:07:34,180 --> 00:07:38,050
tested so our test methodology with it

169
00:07:38,050 --> 00:07:40,680
several things with the devices the

170
00:07:40,680 --> 00:07:43,479
general approach that you will do when

171
00:07:43,479 --> 00:07:45,850
you have such an a hardware device so

172
00:07:45,850 --> 00:07:47,830
the first thing boss hardware analysis

173
00:07:47,830 --> 00:07:50,620
so we go opening up the keyboards the

174
00:07:50,620 --> 00:07:53,440
mice and the USB dongles we stared at

175
00:07:53,440 --> 00:07:55,840
the circuit boards try to identify it

176
00:07:55,840 --> 00:07:58,150
all the chips or least interesting chips

177
00:07:58,150 --> 00:08:00,880
we were reading the fine documentation

178
00:08:00,880 --> 00:08:03,010
that we found concerning these chips we

179
00:08:03,010 --> 00:08:05,110
try to find some interesting test points

180
00:08:05,110 --> 00:08:07,990
on the PCBs and of course we were

181
00:08:07,990 --> 00:08:10,600
solving some bars and try to dump flash

182
00:08:10,600 --> 00:08:12,700
memory that we actually were able to

183
00:08:12,700 --> 00:08:14,410
achieve on some of the devices rather

184
00:08:14,410 --> 00:08:18,760
easily as we will see a few slides so

185
00:08:18,760 --> 00:08:21,130
when we were able to dump actual

186
00:08:21,130 --> 00:08:23,080
firmware we of course could analyze this

187
00:08:23,080 --> 00:08:27,850
using Ida Pro the target devices mostly

188
00:08:27,850 --> 00:08:31,660
used a system on a chip not extended

189
00:08:31,660 --> 00:08:34,110
conductor transceiver actually with a

190
00:08:34,110 --> 00:08:36,969
8051 microcontroller so we were staring

191
00:08:36,969 --> 00:08:38,710
it's and this assemblies for quite some

192
00:08:38,710 --> 00:08:40,960
time read some more file documentation

193
00:08:40,960 --> 00:08:43,330
and of course we were checking not xme

194
00:08:43,330 --> 00:08:45,040
conductors and our 24 software

195
00:08:45,040 --> 00:08:47,410
development kit which was very helpful

196
00:08:47,410 --> 00:08:50,920
we also read some code we wrote some

197
00:08:50,920 --> 00:08:53,400
code did some analysis to find out how

198
00:08:53,400 --> 00:08:55,810
the compiler actually worked for this

199
00:08:55,810 --> 00:08:57,220
platform because we didn't have that

200
00:08:57,220 --> 00:09:00,610
much experience well with this device

201
00:09:00,610 --> 00:09:03,490
and also with 8051 so we had to learn

202
00:09:03,490 --> 00:09:04,870
some stuff

203
00:09:04,870 --> 00:09:06,730
yeah entered Hertz playing with it

204
00:09:06,730 --> 00:09:09,100
during our test our research was radio

205
00:09:09,100 --> 00:09:11,230
based analysis and this was completely

206
00:09:11,230 --> 00:09:13,270
new to me so this project actually is

207
00:09:13,270 --> 00:09:15,910
the first approaches I did using a

208
00:09:15,910 --> 00:09:17,500
software-defined radio so what I

209
00:09:17,500 --> 00:09:19,300
personally did is I watched my Goffman's

210
00:09:19,300 --> 00:09:21,970
great software defined radio video

211
00:09:21,970 --> 00:09:23,770
tutorials that are freely available

212
00:09:23,770 --> 00:09:29,230
online actually several times - ya know

213
00:09:29,230 --> 00:09:32,170
what I had to do with the heck RF in my

214
00:09:32,170 --> 00:09:35,170
case yeah I know also read some more

215
00:09:35,170 --> 00:09:37,330
documentation that we found during our

216
00:09:37,330 --> 00:09:40,330
research process we also found out that

217
00:09:40,330 --> 00:09:43,450
actually the NRF 24 or the family of the

218
00:09:43,450 --> 00:09:48,250
NRF 24 radios meaning transceivers the

219
00:09:48,250 --> 00:09:50,050
transmitters receivers and also

220
00:09:50,050 --> 00:09:51,850
transceivers are quite popular in the

221
00:09:51,850 --> 00:09:53,670
maker scene and that many many devices

222
00:09:53,670 --> 00:09:56,710
actually used them also the devices that

223
00:09:56,710 --> 00:09:59,080
the guys from dream labs analyzed back

224
00:09:59,080 --> 00:10:03,880
in 2009 and 2008 in 2010 used one of the

225
00:10:03,880 --> 00:10:07,000
NRF 24 radio devices so we also started

226
00:10:07,000 --> 00:10:10,510
playing around with the new radio wrote

227
00:10:10,510 --> 00:10:14,080
some Python scripts analyzed the NRF 24

228
00:10:14,080 --> 00:10:16,240
data communication using freely

229
00:10:16,240 --> 00:10:19,300
available tools like the NRF 24 btle

230
00:10:19,300 --> 00:10:23,320
decoder that we could find and yeah

231
00:10:23,320 --> 00:10:26,950
after but still released their mouse

232
00:10:26,950 --> 00:10:28,600
check vulnerabilities and their to set

233
00:10:28,600 --> 00:10:31,420
in february this year we changed our

234
00:10:31,420 --> 00:10:33,600
toolset because their tool set was

235
00:10:33,600 --> 00:10:37,330
superiors to our so yeah it was easier

236
00:10:37,330 --> 00:10:40,000
to do some stuff yeah then it was -

237
00:10:40,000 --> 00:10:42,790
doing new radio actually so on this

238
00:10:42,790 --> 00:10:44,140
slide you can see the identified

239
00:10:44,140 --> 00:10:46,090
transceivers and system owner chips we

240
00:10:46,090 --> 00:10:49,450
found in our 5 test devices and as you

241
00:10:49,450 --> 00:10:51,430
can see 4 of the 5 test devices actually

242
00:10:51,430 --> 00:10:54,970
used the same low power for point a 2.4

243
00:10:54,970 --> 00:10:57,310
gigahertz and RF transceiver made by not

244
00:10:57,310 --> 00:10:58,670
extended conductor

245
00:10:58,670 --> 00:11:00,860
so we decided to focus on this

246
00:11:00,860 --> 00:11:06,110
transceiver actually yeah and as I

247
00:11:06,110 --> 00:11:08,050
always mention we well a lot of

248
00:11:08,050 --> 00:11:10,250
documentation a lot of data sheets and

249
00:11:10,250 --> 00:11:11,450
it's very important and it's very

250
00:11:11,450 --> 00:11:12,740
important to read them several times

251
00:11:12,740 --> 00:11:14,630
because you may miss some important

252
00:11:14,630 --> 00:11:18,910
facts there actually yeah standing there

253
00:11:18,910 --> 00:11:21,370
information the manufacturer gives you

254
00:11:21,370 --> 00:11:23,180
in my opinion the knowledge

255
00:11:23,180 --> 00:11:24,860
semiconductors data sheets for the end

256
00:11:24,860 --> 00:11:26,750
of 24 hour very good everything is in

257
00:11:26,750 --> 00:11:28,100
there that you need to know about the

258
00:11:28,100 --> 00:11:32,330
device yeah and as already mentioned

259
00:11:32,330 --> 00:11:34,010
these devices are very popular in the

260
00:11:34,010 --> 00:11:36,500
maker scene and many people are using

261
00:11:36,500 --> 00:11:38,770
them for different stuff home

262
00:11:38,770 --> 00:11:41,480
optimization things sensor networks

263
00:11:41,480 --> 00:11:43,640
because they're low power they are cheap

264
00:11:43,640 --> 00:11:47,180
yeah and we also use freely available

265
00:11:47,180 --> 00:11:48,830
software tools I already mentioned the

266
00:11:48,830 --> 00:11:51,680
NFS 24 PT le decoder and we also used an

267
00:11:51,680 --> 00:11:54,740
RF proc which was freely available and

268
00:11:54,740 --> 00:11:58,280
still is freely available too yeah read

269
00:11:58,280 --> 00:12:00,110
and write flash memory of these devices

270
00:12:00,110 --> 00:12:02,540
so in the next couple of slides I have

271
00:12:02,540 --> 00:12:04,790
some excerpts from the data sheets here

272
00:12:04,790 --> 00:12:07,970
you can see the actual your knowledge

273
00:12:07,970 --> 00:12:10,730
semiconductor transceiver we dealt with

274
00:12:10,730 --> 00:12:12,830
in the four devices under test and

275
00:12:12,830 --> 00:12:16,880
everything is yeah good documented or

276
00:12:16,880 --> 00:12:19,370
well documented the most important pins

277
00:12:19,370 --> 00:12:22,820
for us actually were spying SPI a so

278
00:12:22,820 --> 00:12:26,330
Siri interface where we hoped to get

279
00:12:26,330 --> 00:12:32,450
access to the memory and yeah on the

280
00:12:32,450 --> 00:12:33,710
lower side of the slide you can see

281
00:12:33,710 --> 00:12:35,600
these receives by knowledge

282
00:12:35,600 --> 00:12:37,700
semiconductor actually support read back

283
00:12:37,700 --> 00:12:41,060
protection but yeah as you can guess not

284
00:12:41,060 --> 00:12:42,770
all devices use this we expect

285
00:12:42,770 --> 00:12:44,960
protection so we could just simply

286
00:12:44,960 --> 00:12:50,740
access sensitive data like from there

287
00:12:50,740 --> 00:12:53,900
one other important thing concerning the

288
00:12:53,900 --> 00:12:56,120
specific versions of the Nordic

289
00:12:56,120 --> 00:12:58,610
semiconductor transceiver we dealt with

290
00:12:58,610 --> 00:13:00,920
the ears that the data memory is divided

291
00:13:00,920 --> 00:13:03,590
in two parts one part is addressable

292
00:13:03,590 --> 00:13:06,110
wires by externally and the other part

293
00:13:06,110 --> 00:13:07,420
is only

294
00:13:07,420 --> 00:13:10,420
internally via the microcontroller so in

295
00:13:10,420 --> 00:13:12,330
order to get to some interesting data

296
00:13:12,330 --> 00:13:15,430
meaning encryption keys we had to write

297
00:13:15,430 --> 00:13:17,440
our own firmware to actually get access

298
00:13:17,440 --> 00:13:19,840
to all the data that was on there but

299
00:13:19,840 --> 00:13:22,750
this was also rather easy on this data

300
00:13:22,750 --> 00:13:24,910
sheet you can see the enhanced shock

301
00:13:24,910 --> 00:13:27,070
burst protocol is a proprietary radio

302
00:13:27,070 --> 00:13:28,630
communication protocols are not examined

303
00:13:28,630 --> 00:13:29,620
conductor that is used in these

304
00:13:29,620 --> 00:13:32,500
transceivers the details are not that

305
00:13:32,500 --> 00:13:34,840
important now in the first step it was

306
00:13:34,840 --> 00:13:36,460
because we used in radio and had to know

307
00:13:36,460 --> 00:13:38,140
well what was actually going on what's

308
00:13:38,140 --> 00:13:39,670
the preamble at rest package control

309
00:13:39,670 --> 00:13:41,650
checksum and so on later on we just

310
00:13:41,650 --> 00:13:43,440
focused on the payload and the payload

311
00:13:43,440 --> 00:13:46,510
actually it was IES encrypted so we just

312
00:13:46,510 --> 00:13:48,910
wanted to know how can we attack these

313
00:13:48,910 --> 00:13:54,660
kind of devices maybe yeah and in the

314
00:13:54,660 --> 00:13:57,310
lower table you can see that the

315
00:13:57,310 --> 00:13:58,570
knowledge semiconductor transceiver

316
00:13:58,570 --> 00:14:01,150
actually supports hardware AES

317
00:14:01,150 --> 00:14:04,420
encryption in some way and this it's

318
00:14:04,420 --> 00:14:07,870
also used in the firmware yeah so here's

319
00:14:07,870 --> 00:14:10,600
an example of PCB the backside actually

320
00:14:10,600 --> 00:14:12,160
of a Microsoft Wireless Keyboard

321
00:14:12,160 --> 00:14:14,830
and Microsoft was so nice to label all

322
00:14:14,830 --> 00:14:17,980
the interesting contacts or test points

323
00:14:17,980 --> 00:14:21,390
for us so as you can see the interesting

324
00:14:21,390 --> 00:14:25,510
SPI contacts Meisel mozi chip select

325
00:14:25,510 --> 00:14:28,930
clock yeah you just knew whether we and

326
00:14:28,930 --> 00:14:32,410
the program peon was also labeled and to

327
00:14:32,410 --> 00:14:36,430
reset pin so this was not easy to get

328
00:14:36,430 --> 00:14:39,460
access to this device and concerning

329
00:14:39,460 --> 00:14:41,110
Cherokee what we had to do some tests

330
00:14:41,110 --> 00:14:42,700
but yeah it's in within a couple of

331
00:14:42,700 --> 00:14:44,110
minutes we also have two test points and

332
00:14:44,110 --> 00:14:46,060
this is test setup using a bus pilot

333
00:14:46,060 --> 00:14:48,900
just to communicate where the

334
00:14:48,900 --> 00:14:51,310
transceiver and we get read and wide

335
00:14:51,310 --> 00:14:55,570
access to the data flash memory

336
00:14:55,570 --> 00:14:57,850
yeah and they did the same thing not

337
00:14:57,850 --> 00:14:59,620
only with the keyboards but also with

338
00:14:59,620 --> 00:15:01,180
the Donalds because we just wanted to

339
00:15:01,180 --> 00:15:02,110
know where she is

340
00:15:02,110 --> 00:15:04,930
AES key stored for example so yeah

341
00:15:04,930 --> 00:15:06,640
thanks to my colleague Alexander Stein

342
00:15:06,640 --> 00:15:08,950
who did the soldering work right here

343
00:15:08,950 --> 00:15:12,400
made it little break out board yeah and

344
00:15:12,400 --> 00:15:14,560
we could also gain access on this device

345
00:15:14,560 --> 00:15:16,630
then as mentioned before with some

346
00:15:16,630 --> 00:15:17,990
thermal analysis

347
00:15:17,990 --> 00:15:19,940
using either Pro and here also helpful

348
00:15:19,940 --> 00:15:22,310
actually have the SDK so we could we

349
00:15:22,310 --> 00:15:24,800
could identify commonly used libraries

350
00:15:24,800 --> 00:15:27,740
with this platform and just annotate the

351
00:15:27,740 --> 00:15:29,420
interesting functions for us to security

352
00:15:29,420 --> 00:15:31,610
related functions for example concerning

353
00:15:31,610 --> 00:15:35,990
AES encryption as you can see here yeah

354
00:15:35,990 --> 00:15:38,950
and regarding radio based analysis we

355
00:15:38,950 --> 00:15:43,370
initially used the new radio and the NRF

356
00:15:43,370 --> 00:15:46,070
24 btle decoder the most widely readily

357
00:15:46,070 --> 00:15:49,310
available and the sample output is shown

358
00:15:49,310 --> 00:15:52,490
here I think it's from jelly device and

359
00:15:52,490 --> 00:15:56,000
yeah so that's that was our first step

360
00:15:56,000 --> 00:15:57,980
concerning radio based analysis so we

361
00:15:57,980 --> 00:16:00,440
were able just to receive all the data

362
00:16:00,440 --> 00:16:05,540
packets stand over the air and yeah this

363
00:16:05,540 --> 00:16:07,760
was rather helpful and as mentioned

364
00:16:07,760 --> 00:16:10,670
before after Brazil released their tool

365
00:16:10,670 --> 00:16:13,790
set this February with the mouse check

366
00:16:13,790 --> 00:16:16,459
vulnerabilities we also switched to

367
00:16:16,459 --> 00:16:18,440
their superior and out of 24 tool sets

368
00:16:18,440 --> 00:16:21,200
meaning that we didn't used new radio

369
00:16:21,200 --> 00:16:23,360
anymore for analysis purposes and also

370
00:16:23,360 --> 00:16:25,160
for tech purposes because it was more

371
00:16:25,160 --> 00:16:27,020
reliable to switch to another platform

372
00:16:27,020 --> 00:16:29,029
and as platform was actually on the

373
00:16:29,029 --> 00:16:31,790
trace radio PA it's a remote control for

374
00:16:31,790 --> 00:16:32,779
a quadrocopter

375
00:16:32,779 --> 00:16:34,630
from a Swedish company a bit crazy

376
00:16:34,630 --> 00:16:37,339
there's an open source firmware for this

377
00:16:37,339 --> 00:16:39,290
patrol copter remote control and

378
00:16:39,290 --> 00:16:43,459
pastille enhanced this firmware naming

379
00:16:43,459 --> 00:16:45,560
at the end of research firmware and they

380
00:16:45,560 --> 00:16:48,110
also released some Python tools namely n

381
00:16:48,110 --> 00:16:50,870
RF 24 sniffer and and a scanner and some

382
00:16:50,870 --> 00:16:52,670
other tools that you can just simply use

383
00:16:52,670 --> 00:16:54,980
in this combination and this phase radio

384
00:16:54,980 --> 00:16:57,829
is also not that expensive I think 30

385
00:16:57,829 --> 00:17:00,200
euros including the antenna to play

386
00:17:00,200 --> 00:17:02,990
around will so we developed all our

387
00:17:02,990 --> 00:17:05,929
Python fuels using crazy radio PA and

388
00:17:05,929 --> 00:17:08,119
DNR's research firmware because it's

389
00:17:08,119 --> 00:17:11,569
very very easy here and of course be

390
00:17:11,569 --> 00:17:14,359
encountered some problems and has some

391
00:17:14,359 --> 00:17:16,459
solutions but not for all problems so

392
00:17:16,459 --> 00:17:17,809
what I personally learned is that

393
00:17:17,809 --> 00:17:19,339
software finally the software-defined

394
00:17:19,339 --> 00:17:20,089
radio

395
00:17:20,089 --> 00:17:23,089
actually has rather steep learning curve

396
00:17:23,089 --> 00:17:24,359
if you have never done there

397
00:17:24,359 --> 00:17:28,679
kind of stuff before so some things that

398
00:17:28,679 --> 00:17:31,080
I thought might be easy are not that

399
00:17:31,080 --> 00:17:34,340
easy actually for example replay attacks

400
00:17:34,340 --> 00:17:37,440
yeah because there are some things you

401
00:17:37,440 --> 00:17:39,540
have to be aware of for example channel

402
00:17:39,540 --> 00:17:42,900
hopping concerning radio based devices

403
00:17:42,900 --> 00:17:44,760
they are timing issues if there are

404
00:17:44,760 --> 00:17:47,580
specific protocols implemented and yeah

405
00:17:47,580 --> 00:17:51,059
it's simply not that easy and also

406
00:17:51,059 --> 00:17:53,220
correctly identifying chips when you

407
00:17:53,220 --> 00:17:55,380
have a look at the labels when doing

408
00:17:55,380 --> 00:17:57,630
analysis of the PCBs is an out in itself

409
00:17:57,630 --> 00:18:00,330
because for example we just missed that

410
00:18:00,330 --> 00:18:01,950
there's also a one-time programmable

411
00:18:01,950 --> 00:18:03,840
version of the transceiver that's for

412
00:18:03,840 --> 00:18:05,250
example used in the Microsoft device

413
00:18:05,250 --> 00:18:08,280
yeah and we for example bricked one of

414
00:18:08,280 --> 00:18:11,610
the Microsoft keyboards in this way

415
00:18:11,610 --> 00:18:14,160
playing around with it without being

416
00:18:14,160 --> 00:18:15,090
aware it's one-time programmable

417
00:18:15,090 --> 00:18:19,890
actually yeah and what is true in

418
00:18:19,890 --> 00:18:21,840
general is that using a development kit

419
00:18:21,840 --> 00:18:24,179
or a board with the same technology as

420
00:18:24,179 --> 00:18:26,700
the target device you are testing is

421
00:18:26,700 --> 00:18:29,270
really helpful and saves a lot of time

422
00:18:29,270 --> 00:18:32,309
and the availability of proper tool sets

423
00:18:32,309 --> 00:18:34,140
actually makes a real difference and

424
00:18:34,140 --> 00:18:39,720
this is a true for all technologies yeah

425
00:18:39,720 --> 00:18:41,730
so what's the attack surface MP attack

426
00:18:41,730 --> 00:18:43,919
scenarios concerning the devices I'm

427
00:18:43,919 --> 00:18:47,130
talking about yeah in our opinion there

428
00:18:47,130 --> 00:18:49,169
are actually two scenarios or two

429
00:18:49,169 --> 00:18:51,150
approaches one where the attacker has

430
00:18:51,150 --> 00:18:52,770
physical access to the wireless desktop

431
00:18:52,770 --> 00:18:55,080
set and one where you can just attack

432
00:18:55,080 --> 00:18:57,059
these kind of devices via radio signals

433
00:18:57,059 --> 00:18:58,230
meaning over-the-air

434
00:18:58,230 --> 00:19:01,080
and remotely with some physical

435
00:19:01,080 --> 00:19:03,419
proximity but you don't have to have

436
00:19:03,419 --> 00:19:06,780
direct access to a device we have

437
00:19:06,780 --> 00:19:08,190
physical access you can do different

438
00:19:08,190 --> 00:19:11,070
things that can be considered a security

439
00:19:11,070 --> 00:19:12,660
issue for example extracting the

440
00:19:12,660 --> 00:19:14,730
firmware manipulating the firmware

441
00:19:14,730 --> 00:19:17,210
extracting cryptographic keys or

442
00:19:17,210 --> 00:19:19,610
manipulating cryptographic keys

443
00:19:19,610 --> 00:19:22,140
concerning attacking wire radio signals

444
00:19:22,140 --> 00:19:24,960
you can do other stuff for example

445
00:19:24,960 --> 00:19:27,980
simply exploiting unencrypted and/or

446
00:19:27,980 --> 00:19:30,240
unauthenticated radio communication you

447
00:19:30,240 --> 00:19:33,660
can try to do simple replay attacks you

448
00:19:33,660 --> 00:19:37,280
can maybe do keystroke injection attacks

449
00:19:37,280 --> 00:19:40,580
or you can maybe decrypt encrypted data

450
00:19:40,580 --> 00:19:45,740
communication so here are the security

451
00:19:45,740 --> 00:19:49,340
vulnerabilities we found in the five

452
00:19:49,340 --> 00:19:51,740
devices under test the first one was

453
00:19:51,740 --> 00:19:54,290
insufficient protection of code in this

454
00:19:54,290 --> 00:19:56,170
case meaning the firmware and data

455
00:19:56,170 --> 00:19:59,630
meaning a cryptographic keys the second

456
00:19:59,630 --> 00:20:01,400
one was unencrypted and unauthenticated

457
00:20:01,400 --> 00:20:05,480
data communication of these Wireless

458
00:20:05,480 --> 00:20:08,330
Desktop sets using AES encryption then

459
00:20:08,330 --> 00:20:10,160
we found missing protection against

460
00:20:10,160 --> 00:20:12,250
replay attacks and we also found

461
00:20:12,250 --> 00:20:14,090
insufficient protection against replay

462
00:20:14,090 --> 00:20:16,520
attacks and the last one was

463
00:20:16,520 --> 00:20:19,700
cryptographic issues yes we were also

464
00:20:19,700 --> 00:20:24,200
able to exploit so yeah the first

465
00:20:24,200 --> 00:20:25,940
security won't build insufficient

466
00:20:25,940 --> 00:20:28,970
protection of code and day down what

467
00:20:28,970 --> 00:20:32,840
this means is yeah this is just a slide

468
00:20:32,840 --> 00:20:34,580
with an example code it's a memory copy

469
00:20:34,580 --> 00:20:37,310
firmware we have just written to access

470
00:20:37,310 --> 00:20:39,470
the flash data memory that's not

471
00:20:39,470 --> 00:20:41,690
external externally at the rest of all

472
00:20:41,690 --> 00:20:44,990
why is P I so well this this is all it

473
00:20:44,990 --> 00:20:49,040
needs to just copy from the extended

474
00:20:49,040 --> 00:20:51,860
endurance Ram what it's called - the not

475
00:20:51,860 --> 00:20:54,440
extended engines Ram then you can just

476
00:20:54,440 --> 00:20:57,920
dump this data using spy by having

477
00:20:57,920 --> 00:21:00,170
access to the correct interface while

478
00:21:00,170 --> 00:21:03,710
the test points so yeah we were actually

479
00:21:03,710 --> 00:21:07,790
able to dump the firmware of three of

480
00:21:07,790 --> 00:21:10,690
the four devices that used an RF 24

481
00:21:10,690 --> 00:21:13,430
communication we were able to get access

482
00:21:13,430 --> 00:21:15,800
to the firmware and the cryptographic

483
00:21:15,800 --> 00:21:17,840
key and so here's an example for off

484
00:21:17,840 --> 00:21:20,090
Jerry keyboard and a chariot dongle and

485
00:21:20,090 --> 00:21:22,250
as you can see we found the same 16

486
00:21:22,250 --> 00:21:24,830
bytes in the dongle and in the keyboard

487
00:21:24,830 --> 00:21:28,520
and it was - yeah AES key that was

488
00:21:28,520 --> 00:21:29,810
actually manufactured in the device

489
00:21:29,810 --> 00:21:32,560
during the manufacturing process

490
00:21:32,560 --> 00:21:35,450
yeah so embedded flash memory could be

491
00:21:35,450 --> 00:21:37,700
easily accessed using spyware physical

492
00:21:37,700 --> 00:21:39,830
access to the devices and the flash

493
00:21:39,830 --> 00:21:42,350
memory often is not protected by the

494
00:21:42,350 --> 00:21:43,730
read back protection others actually

495
00:21:43,730 --> 00:21:46,910
implements it in the devices the only

496
00:21:46,910 --> 00:21:48,370
manufacturer that

497
00:21:48,370 --> 00:21:52,300
this was a Logitech Microsoft cherry

498
00:21:52,300 --> 00:21:54,790
empirics did not and we also found out

499
00:21:54,790 --> 00:21:58,570
that it's possible to modify the content

500
00:21:58,570 --> 00:22:01,870
of one-time programmable flash memory so

501
00:22:01,870 --> 00:22:04,540
you can change the 1 bit 2 bit but not

502
00:22:04,540 --> 00:22:06,970
vice versa so for example concerning the

503
00:22:06,970 --> 00:22:10,000
Microsoft wireless keyboard we can also

504
00:22:10,000 --> 00:22:12,730
manipulate the s key for example or we

505
00:22:12,730 --> 00:22:14,710
can manipulate the firmware in some

506
00:22:14,710 --> 00:22:17,890
limited ways yeah and what's important

507
00:22:17,890 --> 00:22:20,050
to know is that some Wireless Desktop

508
00:22:20,050 --> 00:22:22,630
sets are just permanently paired during

509
00:22:22,630 --> 00:22:25,170
the manufacturing process so there is no

510
00:22:25,170 --> 00:22:27,520
way for the end user to change the

511
00:22:27,520 --> 00:22:29,650
cryptographic easily but these devices

512
00:22:29,650 --> 00:22:31,350
so you have to trust the manufacturers

513
00:22:31,350 --> 00:22:33,550
the cryptographic key generation is

514
00:22:33,550 --> 00:22:37,179
unknown so I have politely asked some of

515
00:22:37,179 --> 00:22:38,890
the manufacturers how they actually do

516
00:22:38,890 --> 00:22:41,170
it is there a key derivation in some way

517
00:22:41,170 --> 00:22:43,990
or are they randomly generated but

518
00:22:43,990 --> 00:22:46,450
actually know what he replied through

519
00:22:46,450 --> 00:22:49,510
these answers and yeah a conclusion is

520
00:22:49,510 --> 00:22:50,679
they have an attack with physical

521
00:22:50,679 --> 00:22:52,360
excellence can either extract the

522
00:22:52,360 --> 00:22:55,240
cryptographic key or he can modify the

523
00:22:55,240 --> 00:22:58,110
firmware and order photographic he in

524
00:22:58,110 --> 00:23:02,080
some ways he wants to do and this always

525
00:23:02,080 --> 00:23:03,730
reminds me of this picture that was

526
00:23:03,730 --> 00:23:06,360
released I think three years ago

527
00:23:06,360 --> 00:23:08,050
concerning the tailored access

528
00:23:08,050 --> 00:23:11,110
operations of the NSA and what they seem

529
00:23:11,110 --> 00:23:15,340
to do is manipulating Hardware in post

530
00:23:15,340 --> 00:23:18,010
offices so when it's rather easy to

531
00:23:18,010 --> 00:23:19,270
manipulate the device when you have

532
00:23:19,270 --> 00:23:23,200
labeled spy access points and you can

533
00:23:23,200 --> 00:23:25,420
manipulate a device within five or ten

534
00:23:25,420 --> 00:23:28,020
minutes maybe somebody actually does it

535
00:23:28,020 --> 00:23:36,010
in real attacks ok so the next attack I

536
00:23:36,010 --> 00:23:38,440
will talk about is mouse moving attacks

537
00:23:38,440 --> 00:23:40,480
this one is rather obvious and it is

538
00:23:40,480 --> 00:23:43,270
actually known for a long time and here

539
00:23:43,270 --> 00:23:48,340
I have a short demo video that I want to

540
00:23:48,340 --> 00:23:53,428
show you so let's see video

541
00:23:59,100 --> 00:24:02,130
yeah so this is our so-called NRF 24

542
00:24:02,130 --> 00:24:05,909
playset its consists of several tools

543
00:24:05,909 --> 00:24:07,860
and radioactive mouse is actually just

544
00:24:07,860 --> 00:24:10,380
one of these tools and what radioactive

545
00:24:10,380 --> 00:24:13,769
mouse does it is it can't conduct

546
00:24:13,769 --> 00:24:16,830
so-called mouse spoofing attacks and

547
00:24:16,830 --> 00:24:20,639
here you can see they all just mouse

548
00:24:20,639 --> 00:24:22,980
spoofing attack against a Windows 7

549
00:24:22,980 --> 00:24:24,480
operating system that is actually

550
00:24:24,480 --> 00:24:26,309
operated with a warmer world Wireless

551
00:24:26,309 --> 00:24:30,299
Desktop set in this case a Microsoft one

552
00:24:30,299 --> 00:24:33,149
is just upset so here the attack is just

553
00:24:33,149 --> 00:24:34,620
sped up because it takes some time I

554
00:24:34,620 --> 00:24:36,690
think three minutes we also did a

555
00:24:36,690 --> 00:24:39,029
YouTube video a couple of weeks ago and

556
00:24:39,029 --> 00:24:41,789
put it online so in the attack in real

557
00:24:41,789 --> 00:24:44,850
time it can be still sped up but for pou

558
00:24:44,850 --> 00:24:46,980
of concept we thought hey that's just

559
00:24:46,980 --> 00:24:50,340
enough and I just wanted to have such a

560
00:24:50,340 --> 00:24:53,460
video as a reference because when I talk

561
00:24:53,460 --> 00:24:54,629
to people they just say oh yeah it's

562
00:24:54,629 --> 00:24:55,950
obvious most communication is

563
00:24:55,950 --> 00:24:57,389
unencrypted and unauthenticated you can

564
00:24:57,389 --> 00:24:59,370
do multiple finger texts but what's deal

565
00:24:59,370 --> 00:25:02,580
and I say well in some cases you could

566
00:25:02,580 --> 00:25:05,389
actually have remote code execution with

567
00:25:05,389 --> 00:25:08,490
physical proximity and that that's what

568
00:25:08,490 --> 00:25:11,070
oh sorry this attack actually shows so

569
00:25:11,070 --> 00:25:12,720
now it slowed down again to the real

570
00:25:12,720 --> 00:25:17,490
time it yeah doesn't virtual mouse click

571
00:25:17,490 --> 00:25:20,940
here and then we have a simple download

572
00:25:20,940 --> 00:25:23,070
and execute power shell attack vector

573
00:25:23,070 --> 00:25:25,169
executed on this target system and for

574
00:25:25,169 --> 00:25:28,139
example ransomware like a cryptolocker

575
00:25:28,139 --> 00:25:30,059
is installed on this device

576
00:25:30,059 --> 00:25:32,159
and this is just an example for most

577
00:25:32,159 --> 00:25:34,169
code execution so this is just for

578
00:25:34,169 --> 00:25:37,049
reference and yeah this was the first

579
00:25:37,049 --> 00:25:40,740
demo here so this was multiple thing

580
00:25:40,740 --> 00:25:43,139
attacks these are just some backup

581
00:25:43,139 --> 00:25:46,950
slides that we've seen and you know

582
00:25:46,950 --> 00:25:49,230
what's about mount spoofing attacks so

583
00:25:49,230 --> 00:25:50,879
the radio communication of all tested

584
00:25:50,879 --> 00:25:52,440
wireless mice laws unencrypted on all

585
00:25:52,440 --> 00:25:55,200
authenticated by knowing the right Mouse

586
00:25:55,200 --> 00:25:57,720
data protocol an attacker can spoof

587
00:25:57,720 --> 00:25:59,759
Mouse actions as we've seen mouse

588
00:25:59,759 --> 00:26:02,190
movements and mouse clicks and by this

589
00:26:02,190 --> 00:26:05,909
he can yeah get control unauthorized

590
00:26:05,909 --> 00:26:07,260
control over the

591
00:26:07,260 --> 00:26:09,600
mouse pointer mouse cursor actually

592
00:26:09,600 --> 00:26:11,190
remotely because it's regular

593
00:26:11,190 --> 00:26:14,370
communication this is rather old news

594
00:26:14,370 --> 00:26:16,590
but I think it's nevertheless exciting

595
00:26:16,590 --> 00:26:19,500
and it's still exploitable in current

596
00:26:19,500 --> 00:26:23,580
modern wireless desktop sets but this

597
00:26:23,580 --> 00:26:25,769
kind of attack is not that reliable so

598
00:26:25,769 --> 00:26:27,570
it doesn't work in yeah

599
00:26:27,570 --> 00:26:29,970
ten of ten cases actually so it's based

600
00:26:29,970 --> 00:26:33,179
on some heuristics so yes trial never

601
00:26:33,179 --> 00:26:35,820
involved and do the educated guesses

602
00:26:35,820 --> 00:26:37,919
and that is what I did and what I've

603
00:26:37,919 --> 00:26:39,779
explored it in the proof-of-concept

604
00:26:39,779 --> 00:26:43,169
attack so the heuristics actually

605
00:26:43,169 --> 00:26:44,970
concerned operating system so you have

606
00:26:44,970 --> 00:26:46,200
to know something about the screen

607
00:26:46,200 --> 00:26:48,389
layout and the screen content the

608
00:26:48,389 --> 00:26:49,649
language settings are important

609
00:26:49,649 --> 00:26:51,570
concerning the virtual on-screen

610
00:26:51,570 --> 00:26:53,429
keyboard that we've seen it as exploited

611
00:26:53,429 --> 00:26:54,960
you also have to know something about

612
00:26:54,960 --> 00:26:56,730
the mouse settings that are actually

613
00:26:56,730 --> 00:26:57,090
used

614
00:26:57,090 --> 00:26:59,700
concerning Mouse accelerate acceleration

615
00:26:59,700 --> 00:27:03,630
on the target device and yeah you have

616
00:27:03,630 --> 00:27:05,340
to make a good guess about the window

617
00:27:05,340 --> 00:27:06,870
position of the virtual on-screen

618
00:27:06,870 --> 00:27:08,519
keyboard that I for example exploited

619
00:27:08,519 --> 00:27:11,279
right here in this you know what exploit

620
00:27:11,279 --> 00:27:14,490
you know the code execution scenario but

621
00:27:14,490 --> 00:27:16,080
I think it's a good way to go with a

622
00:27:16,080 --> 00:27:18,570
default so the default of Windows 7 I've

623
00:27:18,570 --> 00:27:20,700
put up here of the target device so I

624
00:27:20,700 --> 00:27:22,799
think it's a good educated guess that

625
00:27:22,799 --> 00:27:25,590
most of the people don't change the

626
00:27:25,590 --> 00:27:27,960
default Mouse settings in their Windows

627
00:27:27,960 --> 00:27:30,690
operating system so you have enhanced

628
00:27:30,690 --> 00:27:33,350
pointer precision the mouse acceleration

629
00:27:33,350 --> 00:27:37,620
activated actually you have the default

630
00:27:37,620 --> 00:27:40,440
Mouse acceleration curve and you also

631
00:27:40,440 --> 00:27:42,179
have a default position of your

632
00:27:42,179 --> 00:27:44,279
on-screen keyboard so it has a fixed

633
00:27:44,279 --> 00:27:46,740
position on the screen and it's fixed

634
00:27:46,740 --> 00:27:48,179
time management if you've never opened

635
00:27:48,179 --> 00:27:49,889
it before and moved it around for

636
00:27:49,889 --> 00:27:51,929
example so I think this is a good guess

637
00:27:51,929 --> 00:27:56,700
and works in most of the cases and we're

638
00:27:56,700 --> 00:27:58,320
not using this kind of attack in a

639
00:27:58,320 --> 00:28:00,440
target attack way but when you're just

640
00:28:00,440 --> 00:28:03,590
targeting a company you don't have to

641
00:28:03,590 --> 00:28:06,960
get code execution on one on on one

642
00:28:06,960 --> 00:28:08,639
specific device but you can have for

643
00:28:08,639 --> 00:28:12,240
example 100 devices 500 if you have code

644
00:28:12,240 --> 00:28:14,309
execution remotely on one of these

645
00:28:14,309 --> 00:28:17,740
devices so this may be your way

646
00:28:17,740 --> 00:28:21,070
to the internal network for example yeah

647
00:28:21,070 --> 00:28:23,260
what I wasn't able to achieve was pixel

648
00:28:23,260 --> 00:28:24,730
perfect control over the mouse point at

649
00:28:24,730 --> 00:28:26,140
first I thought hey it's deterministic

650
00:28:26,140 --> 00:28:27,910
and I just have to find out the

651
00:28:27,910 --> 00:28:29,590
algorithm and so on but it's not that

652
00:28:29,590 --> 00:28:32,440
easy actually it can be done but more

653
00:28:32,440 --> 00:28:34,450
work is just required and concerning

654
00:28:34,450 --> 00:28:38,050
Windows at least Windows 7 this mouse

655
00:28:38,050 --> 00:28:41,800
acceleration magic still is in a driver

656
00:28:41,800 --> 00:28:43,929
window 32 cases and you have to

657
00:28:43,929 --> 00:28:45,730
reverse-engineer it there is some fixed

658
00:28:45,730 --> 00:28:48,880
point map in it it's a legacy code I

659
00:28:48,880 --> 00:28:52,900
think it's almost 20 years old the code

660
00:28:52,900 --> 00:28:54,880
in there it's changed it has changed a

661
00:28:54,880 --> 00:28:58,090
little bit between Windows XP where you

662
00:28:58,090 --> 00:29:00,040
can still find some documentation and

663
00:29:00,040 --> 00:29:04,330
Windows 7 and from windows 8 to 8.1 and

664
00:29:04,330 --> 00:29:06,670
also Windows 10 so the mouse

665
00:29:06,670 --> 00:29:08,080
acceleration is a little bit different

666
00:29:08,080 --> 00:29:11,350
on these devices but yeah that's part of

667
00:29:11,350 --> 00:29:13,900
the heuristic the basics then you have

668
00:29:13,900 --> 00:29:15,850
to exploit so the counts I guess that

669
00:29:15,850 --> 00:29:18,130
I've used a handcrafted and slowdown

670
00:29:18,130 --> 00:29:21,700
Mouse action for this attack to make it

671
00:29:21,700 --> 00:29:24,790
more reliable and yeah it actually works

672
00:29:24,790 --> 00:29:27,340
as proof of concept right now but if

673
00:29:27,340 --> 00:29:29,020
somebody puts more work into this it can

674
00:29:29,020 --> 00:29:33,280
be more reliable yeah and the tools that

675
00:29:33,280 --> 00:29:36,190
I've used as mentioned before is this

676
00:29:36,190 --> 00:29:38,320
pipe into radioactive Mouse and the

677
00:29:38,320 --> 00:29:39,190
crazy OPA

678
00:29:39,190 --> 00:29:40,780
Donal using bastille's and I've

679
00:29:40,780 --> 00:29:43,570
researched firmware so it's all freely

680
00:29:43,570 --> 00:29:47,160
available yeah so the next time of

681
00:29:47,160 --> 00:29:49,420
vulnerability and attack that is

682
00:29:49,420 --> 00:29:52,240
resulting we player text I've also

683
00:29:52,240 --> 00:29:54,790
prepared a short demo here video demo

684
00:29:54,790 --> 00:29:56,880
but I will also demonstrate it later on

685
00:29:56,880 --> 00:30:00,850
handling actual hardware if the demo

686
00:30:00,850 --> 00:30:03,840
gods Allah

687
00:30:05,799 --> 00:30:10,419
so let's have a look at the next one

688
00:30:10,419 --> 00:30:13,190
okay so I'll just pause for a second

689
00:30:13,190 --> 00:30:15,980
right here to describe the setup I

690
00:30:15,980 --> 00:30:22,519
wanted to pause okay here's a fitting so

691
00:30:22,519 --> 00:30:24,860
that's just a simple setup on the Left

692
00:30:24,860 --> 00:30:27,529
we have the attacker laptop that's

693
00:30:27,529 --> 00:30:29,119
connected to a software-defined radio

694
00:30:29,119 --> 00:30:30,619
that you can see in the middle on the

695
00:30:30,619 --> 00:30:33,110
table it's the hacker of one and on the

696
00:30:33,110 --> 00:30:36,019
right you have the target device that's

697
00:30:36,019 --> 00:30:38,029
running Windows 7 in this case and it's

698
00:30:38,029 --> 00:30:41,899
operated with vulnerable Mouse and the

699
00:30:41,899 --> 00:30:43,190
wireless keyboard in this case at

700
00:30:43,190 --> 00:30:46,009
Fujitsu Wireless Desktop set and what

701
00:30:46,009 --> 00:30:47,690
the attacker simply does he runs a new

702
00:30:47,690 --> 00:30:49,580
radio with a very simple flow graph and

703
00:30:49,580 --> 00:30:51,859
it just records wireless data

704
00:30:51,859 --> 00:30:54,710
communication and later on he replays it

705
00:30:54,710 --> 00:30:57,169
so that's a replay attack as simple as

706
00:30:57,169 --> 00:31:01,009
it can get so let's see what this

707
00:31:01,009 --> 00:31:05,720
actually care me so here's the attacker

708
00:31:05,720 --> 00:31:09,440
he starts a new radio recording the

709
00:31:09,440 --> 00:31:11,779
radio communication now the victim is

710
00:31:11,779 --> 00:31:15,879
for example unlocking it's Windows

711
00:31:15,879 --> 00:31:18,980
operating system then the attacker just

712
00:31:18,980 --> 00:31:21,529
stops the recording some time later the

713
00:31:21,529 --> 00:31:24,200
victim will lock it screen grab a coffee

714
00:31:24,200 --> 00:31:27,590
and during this time the attacker can

715
00:31:27,590 --> 00:31:31,460
just get near the device replay the

716
00:31:31,460 --> 00:31:35,509
recorded data communication yeah and if

717
00:31:35,509 --> 00:31:37,460
all goes well just gets unauthorized

718
00:31:37,460 --> 00:31:40,909
access to a foreign system yeah so

719
00:31:40,909 --> 00:31:44,259
that's the danger of replay attacks and

720
00:31:44,259 --> 00:31:47,239
I was a little surprised that this kind

721
00:31:47,239 --> 00:31:48,859
of attack actually work with one of the

722
00:31:48,859 --> 00:31:51,619
devices and the funny thing is it works

723
00:31:51,619 --> 00:31:53,269
with all of the tested devices so all

724
00:31:53,269 --> 00:31:55,070
test devices are vulnerable to replay

725
00:31:55,070 --> 00:31:57,710
attacks and that's one thing you don't

726
00:31:57,710 --> 00:32:00,649
want to have using yeah crypto devices

727
00:32:00,649 --> 00:32:02,989
in this way that a simple replay of the

728
00:32:02,989 --> 00:32:05,210
communication has the same effect as it

729
00:32:05,210 --> 00:32:08,049
was done before because there's no

730
00:32:08,049 --> 00:32:11,179
session initialization going on using

731
00:32:11,179 --> 00:32:12,730
proper crypto and

732
00:32:12,730 --> 00:32:14,590
like that yeah so this is just a

733
00:32:14,590 --> 00:32:17,740
description of the setup you've seen in

734
00:32:17,740 --> 00:32:20,980
the video and here's the simple flow

735
00:32:20,980 --> 00:32:24,280
graph concerning the radio it doesn't

736
00:32:24,280 --> 00:32:27,610
get much simpler than that what I could

737
00:32:27,610 --> 00:32:30,970
also disable or leave out is the

738
00:32:30,970 --> 00:32:32,740
bandpass filter but being nice to the

739
00:32:32,740 --> 00:32:34,330
neighbors as Trevor's always said is an

740
00:32:34,330 --> 00:32:36,400
important thing but yeah you actually

741
00:32:36,400 --> 00:32:38,530
have a source and a sink you're

742
00:32:38,530 --> 00:32:40,870
recording from the radio to the file and

743
00:32:40,870 --> 00:32:42,970
later on you just switch directions so

744
00:32:42,970 --> 00:32:44,650
we replay from a file to the radio and

745
00:32:44,650 --> 00:32:47,620
that's it so this attack just takes a

746
00:32:47,620 --> 00:32:48,940
couple of minutes five minutes to test

747
00:32:48,940 --> 00:32:52,450
the device and it can also be done as a

748
00:32:52,450 --> 00:32:53,860
black box so you don't have to know

749
00:32:53,860 --> 00:32:55,390
anything about the radio communication

750
00:32:55,390 --> 00:32:57,070
and just have to find the right

751
00:32:57,070 --> 00:33:00,070
frequency the devices communicating on

752
00:33:00,070 --> 00:33:01,929
that is well documented and all the bias

753
00:33:01,929 --> 00:33:03,910
actually that is sold in your s has an

754
00:33:03,910 --> 00:33:06,460
so called FCC ID you can just research

755
00:33:06,460 --> 00:33:08,290
online and have all the information you

756
00:33:08,290 --> 00:33:12,850
need so this is rather easy and yeah

757
00:33:12,850 --> 00:33:14,169
we've also written a simple Python

758
00:33:14,169 --> 00:33:15,880
script and that's the same thing using

759
00:33:15,880 --> 00:33:17,650
another tool set

760
00:33:17,650 --> 00:33:19,870
so not new radio and a software-defined

761
00:33:19,870 --> 00:33:23,650
radio but the crazy radio PA and the

762
00:33:23,650 --> 00:33:25,750
research firmware and this Python script

763
00:33:25,750 --> 00:33:28,120
and I think here it's an example using a

764
00:33:28,120 --> 00:33:30,580
Microsoft wireless keyboard and you can

765
00:33:30,580 --> 00:33:32,110
just record the encrypted data

766
00:33:32,110 --> 00:33:33,880
communication and replay it at a later

767
00:33:33,880 --> 00:33:35,830
time and it will just work he has the

768
00:33:35,830 --> 00:33:38,820
same effect as the initial keystrokes

769
00:33:38,820 --> 00:33:41,320
yeah so as mentioned before all he was

770
00:33:41,320 --> 00:33:43,870
also tested Wireless Desktop sets were

771
00:33:43,870 --> 00:33:45,790
vulnerable to replay attacks and all

772
00:33:45,790 --> 00:33:50,880
white mice yeah - and the only

773
00:33:50,880 --> 00:33:53,410
difference between devices was there -

774
00:33:53,410 --> 00:33:56,110
Microsoft desktop set hats actually some

775
00:33:56,110 --> 00:33:59,440
kind of replay protection so the actual

776
00:33:59,440 --> 00:34:02,980
tech window is limited but we don't know

777
00:34:02,980 --> 00:34:05,650
actually how small it is I think it's

778
00:34:05,650 --> 00:34:08,379
about 1,000 keystrokes that can happen

779
00:34:08,379 --> 00:34:11,469
between the recording and the playback

780
00:34:11,469 --> 00:34:14,830
so it seems to get out of sync and then

781
00:34:14,830 --> 00:34:16,510
it doesn't work concerning the other

782
00:34:16,510 --> 00:34:19,179
devices so for example parry X Logitech

783
00:34:19,179 --> 00:34:21,639
or Jerry we could just replay

784
00:34:21,639 --> 00:34:23,080
communication we have recorded the day

785
00:34:23,080 --> 00:34:24,790
before or the week before and it still

786
00:34:24,790 --> 00:34:25,510
works

787
00:34:25,510 --> 00:34:27,550
so they're just wonderful to replay

788
00:34:27,550 --> 00:34:30,879
attack simply replay attacks and yeah we

789
00:34:30,879 --> 00:34:33,010
play text Kim has also already mentioned

790
00:34:33,010 --> 00:34:33,340
before

791
00:34:33,340 --> 00:34:35,800
Donna's so-called black box text text

792
00:34:35,800 --> 00:34:37,750
test you don't have to know the actual

793
00:34:37,750 --> 00:34:42,129
protocol and more sophisticated attacks

794
00:34:42,129 --> 00:34:45,340
can be performed using Dalek toolsets

795
00:34:45,340 --> 00:34:47,889
crazy radio PA Python tools and enough

796
00:34:47,889 --> 00:34:50,800
research firmware and replay attacks as

797
00:34:50,800 --> 00:34:52,090
we've seen allow for the following

798
00:34:52,090 --> 00:34:53,739
attacks you can gain unauthorized access

799
00:34:53,739 --> 00:34:56,469
to unattended screen lock computer

800
00:34:56,469 --> 00:34:58,510
systems where you are able to previously

801
00:34:58,510 --> 00:35:01,960
records the password entry and you're

802
00:35:01,960 --> 00:35:03,640
also able to recover the clear text

803
00:35:03,640 --> 00:35:06,670
passwords or yeah clear text keystrokes

804
00:35:06,670 --> 00:35:08,710
for example passwords when you have

805
00:35:08,710 --> 00:35:11,230
physical access to a USB radio tunnel

806
00:35:11,230 --> 00:35:14,140
off a target device so if you can record

807
00:35:14,140 --> 00:35:16,359
to rate your comment radio communication

808
00:35:16,359 --> 00:35:19,000
and later on can get your hands on the

809
00:35:19,000 --> 00:35:22,390
USB dongle you can just steal it or

810
00:35:22,390 --> 00:35:23,800
replace it take it home

811
00:35:23,800 --> 00:35:25,030
stick it in one of your computers

812
00:35:25,030 --> 00:35:26,680
perform a replay attack and then you

813
00:35:26,680 --> 00:35:30,100
will get all the clear text keystrokes

814
00:35:30,100 --> 00:35:33,250
that somebody's entered before so this

815
00:35:33,250 --> 00:35:38,020
is also useful it can be useful in a

816
00:35:38,020 --> 00:35:42,790
kilo a scenario for example so a company

817
00:35:42,790 --> 00:35:45,730
itself installs all the wireless desktop

818
00:35:45,730 --> 00:35:47,740
sets and devices you're sitting in the

819
00:35:47,740 --> 00:35:51,640
office nearby for example on another

820
00:35:51,640 --> 00:35:52,720
floor you're just recording

821
00:35:52,720 --> 00:35:54,220
communication for several weeks and then

822
00:35:54,220 --> 00:35:55,810
you gain physical access to the devices

823
00:35:55,810 --> 00:35:57,430
replace them nobody will know

824
00:35:57,430 --> 00:35:59,830
take it home we play the communication

825
00:35:59,830 --> 00:36:00,790
and you have all the clear text

826
00:36:00,790 --> 00:36:02,560
communication of several days or weeks

827
00:36:02,560 --> 00:36:05,530
for example so a keylogger scenario with

828
00:36:05,530 --> 00:36:07,450
one-time physical access and it's rather

829
00:36:07,450 --> 00:36:10,960
stealthy you have oh you have one time

830
00:36:10,960 --> 00:36:12,340
physical act you need to have one time

831
00:36:12,340 --> 00:36:15,970
physical access to the facility ok and

832
00:36:15,970 --> 00:36:18,310
now we are already coming to the last

833
00:36:18,310 --> 00:36:21,119
and I think most interesting keys to

834
00:36:21,119 --> 00:36:24,220
vulnerability an attack the so called a

835
00:36:24,220 --> 00:36:26,590
keystroke injection attack and this is

836
00:36:26,590 --> 00:36:31,300
the one I want to try life so now I have

837
00:36:31,300 --> 00:36:33,540
to

838
00:36:35,609 --> 00:36:39,969
do some preparations for example I will

839
00:36:39,969 --> 00:36:42,869
here to a life hack concerning

840
00:36:42,869 --> 00:36:46,180
picture-in-picture on my display let's

841
00:36:46,180 --> 00:36:54,369
see if this works out so I have my

842
00:36:54,369 --> 00:36:57,099
target device here I just have to unlock

843
00:36:57,099 --> 00:37:01,960
it so this is not a real-world example

844
00:37:01,960 --> 00:37:06,160
because nobody runs Windows 7 virtual

845
00:37:06,160 --> 00:37:08,979
machine on a MacBook Pro through work

846
00:37:08,979 --> 00:37:11,559
but I couldn't find another device sorry

847
00:37:11,559 --> 00:37:17,950
for that sure shoulder surfing using a

848
00:37:17,950 --> 00:37:25,839
camera so put the camera back I hope

849
00:37:25,839 --> 00:37:28,239
that the autofocus will work on this one

850
00:37:28,239 --> 00:37:30,670
and it's not an important it's not an

851
00:37:30,670 --> 00:37:33,329
important that you can see every

852
00:37:33,329 --> 00:37:35,069
character on the device is just

853
00:37:35,069 --> 00:37:37,420
important that that you can see that

854
00:37:37,420 --> 00:37:38,920
something actually is happening on the

855
00:37:38,920 --> 00:37:41,469
device so yeah what I have here is a

856
00:37:41,469 --> 00:37:43,630
cherry Wallis just upset in this case

857
00:37:43,630 --> 00:37:45,670
this is the receiver the USB don't know

858
00:37:45,670 --> 00:37:48,749
I'll plug it in here so it's used by the

859
00:37:48,749 --> 00:37:51,219
virtual machine and here I have a

860
00:37:51,219 --> 00:37:53,109
hopefully one of all Wireless Desktop

861
00:37:53,109 --> 00:37:57,279
sets I will just test it yeah and you

862
00:37:57,279 --> 00:38:00,960
can see there are some keystrokes here

863
00:38:00,960 --> 00:38:05,019
in notepad so now I'll go to my attacker

864
00:38:05,019 --> 00:38:09,759
system and prepare this one so what I

865
00:38:09,759 --> 00:38:11,979
will use he is crazy radio PA and the

866
00:38:11,979 --> 00:38:15,219
NRF research firm rabbi Bastille so many

867
00:38:15,219 --> 00:38:16,839
thanks to Mark Newland who actually did

868
00:38:16,839 --> 00:38:21,400
this research and here I have a proof of

869
00:38:21,400 --> 00:38:24,519
concept attack tool just to demonstrate

870
00:38:24,519 --> 00:38:26,410
to count our two attacks or a

871
00:38:26,410 --> 00:38:28,599
combination attack it's a combination of

872
00:38:28,599 --> 00:38:30,609
a replay attack and a keystroke

873
00:38:30,609 --> 00:38:35,079
injection attack so I will fire this up

874
00:38:35,079 --> 00:38:39,279
and so what I will have to do first is

875
00:38:39,279 --> 00:38:41,410
scan the devices so I will just do some

876
00:38:41,410 --> 00:38:44,259
key presses and you can see I can

877
00:38:44,259 --> 00:38:46,070
identify the radio communication

878
00:38:46,070 --> 00:38:50,760
and find the device and you can also see

879
00:38:50,760 --> 00:38:53,550
there is some output concerning crypto

880
00:38:53,550 --> 00:38:55,619
we will get into this later

881
00:38:55,619 --> 00:38:57,119
let's first see if the attack actually

882
00:38:57,119 --> 00:39:00,630
works so what I can do now is for

883
00:39:00,630 --> 00:39:05,510
example recording so for replay attack

884
00:39:05,510 --> 00:39:08,340
so as a victim what I will do is I will

885
00:39:08,340 --> 00:39:12,290
lock my screen as an attacker I have to

886
00:39:12,290 --> 00:39:15,030
press record and now I'll try to unlock

887
00:39:15,030 --> 00:39:18,900
it I'm using the correct password so

888
00:39:18,900 --> 00:39:21,180
this was a success as an attacker I

889
00:39:21,180 --> 00:39:24,630
stopped the recording later on the

890
00:39:24,630 --> 00:39:27,660
victim will lock her or his machine

891
00:39:27,660 --> 00:39:30,330
again and then I can just try if I'm

892
00:39:30,330 --> 00:39:33,210
able to remotely unlock the device let's

893
00:39:33,210 --> 00:39:36,090
see if the demo gods help me in this

894
00:39:36,090 --> 00:39:39,390
case as you can see works perfectly so

895
00:39:39,390 --> 00:39:40,890
this is one way to get unauthorized

896
00:39:40,890 --> 00:39:43,140
access with Pacifica proximity to

897
00:39:43,140 --> 00:39:45,330
devices that are operated with yeah

898
00:39:45,330 --> 00:39:48,780
affected while one durable Wireless

899
00:39:48,780 --> 00:39:51,750
Desktop sets so well that's not all more

900
00:39:51,750 --> 00:39:54,900
the more interesting thing is oh no it

901
00:39:54,900 --> 00:40:01,820
just went this is the Mac OS

902
00:40:13,680 --> 00:40:17,640
so well it's in the same state so I hope

903
00:40:17,640 --> 00:40:21,809
you can see yep so and what I can do

904
00:40:21,809 --> 00:40:24,930
next as an attacker is yeah due to other

905
00:40:24,930 --> 00:40:29,789
issues hopefully this a keystroke

906
00:40:29,789 --> 00:40:31,440
injection attack and as you can see just

907
00:40:31,440 --> 00:40:33,720
the window opened its windows execution

908
00:40:33,720 --> 00:40:35,460
you can see there's a command shell it's

909
00:40:35,460 --> 00:40:38,520
a PowerShell actually and if we wait

910
00:40:38,520 --> 00:40:43,319
some time we hopefully get remote code

911
00:40:43,319 --> 00:40:48,420
execution yeah and it worked so it's the

912
00:40:48,420 --> 00:40:50,400
same mock up attack vector using

913
00:40:50,400 --> 00:40:52,799
ransomware cryptolocker in this case I

914
00:40:52,799 --> 00:40:55,589
just did a keystroke injection attack

915
00:40:55,589 --> 00:40:58,140
using download and execute attack vector

916
00:40:58,140 --> 00:41:00,390
as with Mouse the radioactive Mouse

917
00:41:00,390 --> 00:41:03,109
before and this means yeah you have

918
00:41:03,109 --> 00:41:06,089
completely controlled remotely over the

919
00:41:06,089 --> 00:41:09,329
affected devices okay

920
00:41:09,329 --> 00:41:13,289
so that was the live demo let's go back

921
00:41:13,289 --> 00:41:16,289
to the slides and see why it works yeah

922
00:41:16,289 --> 00:41:18,900
it worked the first time thanks to the

923
00:41:18,900 --> 00:41:24,779
demo gods okay so I can just kill this

924
00:41:24,779 --> 00:41:27,359
one here so yeah that's not a true we've

925
00:41:27,359 --> 00:41:29,579
written I just showed you another one so

926
00:41:29,579 --> 00:41:31,529
that's a command-line interface version

927
00:41:31,529 --> 00:41:34,849
and here we have one with a fancy GUI

928
00:41:34,849 --> 00:41:37,529
yeah it was a cherry attack tool that

929
00:41:37,529 --> 00:41:40,650
we've seen and now why lost this history

930
00:41:40,650 --> 00:41:43,260
injection work because this device this

931
00:41:43,260 --> 00:41:44,700
charity was for example to use AES

932
00:41:44,700 --> 00:41:47,069
encryption right it also has a year

933
00:41:47,069 --> 00:41:49,829
security written on it and it's true and

934
00:41:49,829 --> 00:41:51,750
all packets that we've seen so far in

935
00:41:51,750 --> 00:41:53,069
the radio communications are actually

936
00:41:53,069 --> 00:41:55,799
AES encrypted but there are some issues

937
00:41:55,799 --> 00:41:59,160
concerning the mode of operation yes

938
00:41:59,160 --> 00:42:02,160
they have used namely AES in counter

939
00:42:02,160 --> 00:42:05,069
mode so the first thing we thought about

940
00:42:05,069 --> 00:42:07,470
is how there is synchronize in any way

941
00:42:07,470 --> 00:42:10,710
and what we found out and also could

942
00:42:10,710 --> 00:42:13,559
read in the SDK in the lip crypt header

943
00:42:13,559 --> 00:42:15,690
file is that there are differences

944
00:42:15,690 --> 00:42:19,109
between two versions of the actual

945
00:42:19,109 --> 00:42:21,420
transceiver there's an Lu one and an L

946
00:42:21,420 --> 00:42:22,880
even

947
00:42:22,880 --> 00:42:24,979
and the implementation slightly

948
00:42:24,979 --> 00:42:27,819
different between these and the le

949
00:42:27,819 --> 00:42:32,959
implementation the Ellis 5b that is here

950
00:42:32,959 --> 00:42:34,969
it's a plain text counter actually is

951
00:42:34,969 --> 00:42:37,489
not a counter but random values

952
00:42:37,489 --> 00:42:39,380
generated by the bells random number

953
00:42:39,380 --> 00:42:41,929
generator so there is simply no way of

954
00:42:41,929 --> 00:42:44,359
syncing between the receiver and the

955
00:42:44,359 --> 00:42:47,059
sender actually and this is part of the

956
00:42:47,059 --> 00:42:51,199
issue in this case yeah and here is

957
00:42:51,199 --> 00:42:52,880
actually the source code for generating

958
00:42:52,880 --> 00:42:56,660
this random 5 byte or 40 bit value that

959
00:42:56,660 --> 00:42:59,179
is used and also transmitted in short

960
00:42:59,179 --> 00:43:03,380
bursts packets over the air and it uses

961
00:43:03,380 --> 00:43:06,679
the hardware random number generator and

962
00:43:06,679 --> 00:43:08,419
honestly I didn't have a look at the

963
00:43:08,419 --> 00:43:10,339
hardware and anomaly generator if this

964
00:43:10,339 --> 00:43:13,130
has any issues but maybe enhance maybe

965
00:43:13,130 --> 00:43:15,589
that's not so but more important why

966
00:43:15,589 --> 00:43:17,119
does the keystroke injection attack work

967
00:43:17,119 --> 00:43:19,849
on AES encrypted keyboards so what we

968
00:43:19,849 --> 00:43:21,589
found out concerning cherry Antep erics

969
00:43:21,589 --> 00:43:23,380
well as key words is that they are using

970
00:43:23,380 --> 00:43:27,589
100 bit keys with AES in counter mode in

971
00:43:27,589 --> 00:43:30,259
general linear initialization vector

972
00:43:30,259 --> 00:43:32,449
consists in this case of Ananse and a

973
00:43:32,449 --> 00:43:34,849
counter the nonce after tested cherry

974
00:43:34,849 --> 00:43:37,029
keyboard and also the perixx keyboard

975
00:43:37,029 --> 00:43:41,059
and the Logitech keyboard was null bites

976
00:43:41,059 --> 00:43:42,890
and the counter as we've seen in

977
00:43:42,890 --> 00:43:46,249
documentation was just 40 random bits so

978
00:43:46,249 --> 00:43:49,519
5 bytes and by manipulating the firmware

979
00:43:49,519 --> 00:43:51,739
of the cherry keyboard having physical

980
00:43:51,739 --> 00:43:54,049
access to the wires having found SPI

981
00:43:54,049 --> 00:43:56,719
access points by being able to dump the

982
00:43:56,719 --> 00:43:59,349
firmware analyzing it using either Pro

983
00:43:59,349 --> 00:44:03,169
yeah we could actually find out how

984
00:44:03,169 --> 00:44:05,299
Jerry for example thus all the AES

985
00:44:05,299 --> 00:44:07,640
communication and initialization of the

986
00:44:07,640 --> 00:44:09,679
data as its transmitted and what we

987
00:44:09,679 --> 00:44:12,019
found out there is that a so-called he

988
00:44:12,019 --> 00:44:14,900
released packet consists of 11 all bytes

989
00:44:14,900 --> 00:44:18,049
so when Akira is released a packet is

990
00:44:18,049 --> 00:44:21,319
sent the encrypted packet but actually

991
00:44:21,319 --> 00:44:23,479
the plaintext that is sent is this one

992
00:44:23,479 --> 00:44:26,209
11 are bytes so when you have a look at

993
00:44:26,209 --> 00:44:28,519
how counter mode in general works for

994
00:44:28,519 --> 00:44:31,609
example for a block cipher like AES

995
00:44:31,609 --> 00:44:35,150
it works like this so in a diagram

996
00:44:35,150 --> 00:44:37,969
and when you consider what is known to

997
00:44:37,969 --> 00:44:40,999
an attacker in our scenario concerning

998
00:44:40,999 --> 00:44:43,460
Wireless Desktop sets we know all the

999
00:44:43,460 --> 00:44:45,979
things that are marked in red so we know

1000
00:44:45,979 --> 00:44:48,079
the complete initialization vector the

1001
00:44:48,079 --> 00:44:50,569
lawns as mention before is always zero

1002
00:44:50,569 --> 00:44:53,749
we found this out too due to the Fermi

1003
00:44:53,749 --> 00:44:56,089
analysis the counter is justified by the

1004
00:44:56,089 --> 00:44:58,279
random random value but it's transmitted

1005
00:44:58,279 --> 00:45:00,259
over the air so it's no secret everybody

1006
00:45:00,259 --> 00:45:03,499
can read it the ciphertext is also

1007
00:45:03,499 --> 00:45:07,460
transmitted a in combination with the

1008
00:45:07,460 --> 00:45:09,440
counter over-the-air in the enhanced

1009
00:45:09,440 --> 00:45:14,210
rock burst payload the plaintext is

1010
00:45:14,210 --> 00:45:16,009
something below for some specific

1011
00:45:16,009 --> 00:45:18,940
packets namely every key release packet

1012
00:45:18,940 --> 00:45:21,319
so what we can do do the mode of

1013
00:45:21,319 --> 00:45:24,289
operation is some kind of known

1014
00:45:24,289 --> 00:45:27,140
plaintext attack because the exclusive

1015
00:45:27,140 --> 00:45:29,269
order is used in counter mode that you

1016
00:45:29,269 --> 00:45:33,349
can see here concerning the input values

1017
00:45:33,349 --> 00:45:35,450
history and block that comes from the

1018
00:45:35,450 --> 00:45:37,999
block cipher that is based on a secret

1019
00:45:37,999 --> 00:45:39,859
key Derby though do not have access to

1020
00:45:39,859 --> 00:45:41,869
because it's in a device and it's never

1021
00:45:41,869 --> 00:45:44,420
shared it's it's a secret but the X

1022
00:45:44,420 --> 00:45:46,609
operation yeah concerned the inputs heat

1023
00:45:46,609 --> 00:45:48,920
stream block and lane text block is that

1024
00:45:48,920 --> 00:45:52,309
this one we can just yeah or we just

1025
00:45:52,309 --> 00:45:54,769
know the key stream block for some

1026
00:45:54,769 --> 00:45:58,670
specific packets and that's the

1027
00:45:58,670 --> 00:46:00,319
important thing and actually this is the

1028
00:46:00,319 --> 00:46:03,589
vulnerability Y keystroke injection

1029
00:46:03,589 --> 00:46:06,079
works so I have an example for this on

1030
00:46:06,079 --> 00:46:08,630
the air they are two slides and more

1031
00:46:08,630 --> 00:46:12,440
explanation so what we know is that the

1032
00:46:12,440 --> 00:46:15,769
initialization vector actually is only a

1033
00:46:15,769 --> 00:46:19,309
random random value random v by value

1034
00:46:19,309 --> 00:46:21,769
and we already know that it can be

1035
00:46:21,769 --> 00:46:24,559
reused with which is also a security

1036
00:46:24,559 --> 00:46:26,839
issue because it allows replay attacks

1037
00:46:26,839 --> 00:46:29,690
as we've seen before so when we consider

1038
00:46:29,690 --> 00:46:31,849
a recruited cheerilee's packet

1039
00:46:31,849 --> 00:46:34,940
consisting of 16 bytes we have 11 bytes

1040
00:46:34,940 --> 00:46:37,759
data and we have 5 bytes random value

1041
00:46:37,759 --> 00:46:38,960
and that is what you can sniff

1042
00:46:38,960 --> 00:46:42,499
over-the-air using new radio or yeah a

1043
00:46:42,499 --> 00:46:44,989
device like a crazy radio and now we

1044
00:46:44,989 --> 00:46:46,999
know that the data of a key release

1045
00:46:46,999 --> 00:46:48,020
packet is simply

1046
00:46:48,020 --> 00:46:49,990
all mites and we also know that X

1047
00:46:49,990 --> 00:46:54,020
exclusive or zero equals x simple as

1048
00:46:54,020 --> 00:46:56,060
that and what this means is that we have

1049
00:46:56,060 --> 00:47:02,020
yeah control over a complete data packet

1050
00:47:02,020 --> 00:47:05,090
with a specific counter value a specific

1051
00:47:05,090 --> 00:47:07,010
initialization vector yeah and this

1052
00:47:07,010 --> 00:47:08,900
allows for every time manipulation of

1053
00:47:08,900 --> 00:47:12,920
this kind of packets and what you also

1054
00:47:12,920 --> 00:47:14,240
have to know is what is the plain text

1055
00:47:14,240 --> 00:47:16,130
data format but this one was rather easy

1056
00:47:16,130 --> 00:47:18,940
because all the devices use some kind of

1057
00:47:18,940 --> 00:47:22,460
default USB human interface device data

1058
00:47:22,460 --> 00:47:24,650
format the cheery one actually uses this

1059
00:47:24,650 --> 00:47:27,350
so we have eight bytes and total the

1060
00:47:27,350 --> 00:47:29,510
first part is modifiers for example a

1061
00:47:29,510 --> 00:47:31,880
shift key or all key then there's a zero

1062
00:47:31,880 --> 00:47:34,160
byte and then you have just six key

1063
00:47:34,160 --> 00:47:36,530
codes that are stamped with one packet

1064
00:47:36,530 --> 00:47:39,860
HID packets an example for modifier keys

1065
00:47:39,860 --> 00:47:42,920
and key codes they are also specified in

1066
00:47:42,920 --> 00:47:47,450
the USB HID specification and here's an

1067
00:47:47,450 --> 00:47:51,140
actual example concerning a keystroke

1068
00:47:51,140 --> 00:47:54,170
will the uppercase letter a so what we

1069
00:47:54,170 --> 00:47:55,930
have is we have a key release packet

1070
00:47:55,930 --> 00:47:59,750
sniffed and we want to have an uppercase

1071
00:47:59,750 --> 00:48:02,420
letter A so the modifier is for example

1072
00:48:02,420 --> 00:48:05,900
shift left plus a in this case it means

1073
00:48:05,900 --> 00:48:08,750
we have modifier of zero one and the key

1074
00:48:08,750 --> 00:48:10,790
codes the first key code is just zero

1075
00:48:10,790 --> 00:48:12,560
four and what we have to do is simple

1076
00:48:12,560 --> 00:48:14,540
math we have an exclusive for with this

1077
00:48:14,540 --> 00:48:16,400
encrypted packet we sniffed with this

1078
00:48:16,400 --> 00:48:17,930
one and have a resulting pickle and

1079
00:48:17,930 --> 00:48:19,670
that's the one we can simply inject and

1080
00:48:19,670 --> 00:48:22,730
the result is because counters can be

1081
00:48:22,730 --> 00:48:24,890
actually reused as in the replay

1082
00:48:24,890 --> 00:48:28,070
scenario that the receiver will send a

1083
00:48:28,070 --> 00:48:29,810
correct keystroke with an uppercase

1084
00:48:29,810 --> 00:48:31,880
letter a to the PC the donal is

1085
00:48:31,880 --> 00:48:34,490
connected to so he spoke injection in

1086
00:48:34,490 --> 00:48:37,880
five easy steps you have to find for

1087
00:48:37,880 --> 00:48:39,860
asset target device but it's easy

1088
00:48:39,860 --> 00:48:42,560
sniffing it using the tools that we have

1089
00:48:42,560 --> 00:48:44,630
now available you have to find a key

1090
00:48:44,630 --> 00:48:46,340
release peckers this one is also based

1091
00:48:46,340 --> 00:48:49,870
on heuristics but there you see I use is

1092
00:48:49,870 --> 00:48:53,060
when the the last packet I've seen

1093
00:48:53,060 --> 00:48:55,970
before a pause of two seconds most

1094
00:48:55,970 --> 00:48:57,770
probably is a key release packet right

1095
00:48:57,770 --> 00:49:00,520
and this works in well

1096
00:49:00,520 --> 00:49:03,430
almost 100% but radio is not that

1097
00:49:03,430 --> 00:49:06,730
reliable but yeah in my test case it was

1098
00:49:06,730 --> 00:49:09,220
very reliable and then what you have to

1099
00:49:09,220 --> 00:49:11,650
do is two simple math the XOR operation

1100
00:49:11,650 --> 00:49:13,570
and then you just send modified key

1101
00:49:13,570 --> 00:49:15,670
beliefs packets for keystroke injection

1102
00:49:15,670 --> 00:49:17,619
and repeat until you're done with your

1103
00:49:17,619 --> 00:49:19,270
attack vector for example download

1104
00:49:19,270 --> 00:49:21,700
execute install malware do whatever you

1105
00:49:21,700 --> 00:49:27,100
want on the remote system yeah and here

1106
00:49:27,100 --> 00:49:30,520
just for illustration that's all the

1107
00:49:30,520 --> 00:49:32,770
source code it it takes concerning

1108
00:49:32,770 --> 00:49:35,430
Python for modifying a packet it's

1109
00:49:35,430 --> 00:49:39,720
actually here only this XOR operation

1110
00:49:39,720 --> 00:49:42,280
yeah and my boss also asked me to have a

1111
00:49:42,280 --> 00:49:45,070
standalone version of this attack and

1112
00:49:45,070 --> 00:49:47,680
what we've done is we've picked up an

1113
00:49:47,680 --> 00:49:50,619
old Raspberry Pi we are lying around and

1114
00:49:50,619 --> 00:49:52,540
I've built a Lego box it was actually

1115
00:49:52,540 --> 00:49:54,670
the most time-consuming task the other

1116
00:49:54,670 --> 00:49:57,640
rest was rather easy and yeah it's just

1117
00:49:57,640 --> 00:50:00,010
a Raspberry Pi as you can see here isn't

1118
00:50:00,010 --> 00:50:03,790
a breadboard setup and with this device

1119
00:50:03,790 --> 00:50:06,100
you can simply perform this kind of a

1120
00:50:06,100 --> 00:50:07,510
tackle also so we play attack the

1121
00:50:07,510 --> 00:50:10,240
keystroke injection attack and my boss

1122
00:50:10,240 --> 00:50:13,750
also told me last week not to put in the

1123
00:50:13,750 --> 00:50:16,119
hand luggage when flying because the

1124
00:50:16,119 --> 00:50:17,740
airport security may ask you some

1125
00:50:17,740 --> 00:50:21,550
question when they see this kind in the

1126
00:50:21,550 --> 00:50:24,280
x-ray scanner a hand soldered

1127
00:50:24,280 --> 00:50:29,980
PCB ok so now for the manufacture

1128
00:50:29,980 --> 00:50:32,590
statements and feedback because due to

1129
00:50:32,590 --> 00:50:35,080
our responsible disclosure program yeah

1130
00:50:35,080 --> 00:50:37,420
we are responsible disclosing and

1131
00:50:37,420 --> 00:50:40,060
coordinating the release of found

1132
00:50:40,060 --> 00:50:41,530
vulnerabilities with the manufacturers

1133
00:50:41,530 --> 00:50:43,750
or vendors and so we've sent security

1134
00:50:43,750 --> 00:50:46,540
advisories to them we got no response

1135
00:50:46,540 --> 00:50:49,450
from perixx so nothing to say here

1136
00:50:49,450 --> 00:50:53,700
Microsoft yeah gave us some feedback

1137
00:50:53,700 --> 00:50:55,510
concerning the insufficient protection

1138
00:50:55,510 --> 00:50:58,300
of code and data they just said well if

1139
00:50:58,300 --> 00:50:59,830
somebody has physical access to device

1140
00:50:59,830 --> 00:51:00,970
you could also just replace it

1141
00:51:00,970 --> 00:51:02,830
completely so that's not a real issue

1142
00:51:02,830 --> 00:51:04,780
and if you put some more effort in here

1143
00:51:04,780 --> 00:51:06,369
TK and always time to firmware in some

1144
00:51:06,369 --> 00:51:08,170
way and I think yet it's actually true

1145
00:51:08,170 --> 00:51:10,420
it's I think the third law of Microsoft

1146
00:51:10,420 --> 00:51:12,630
standing due to the loss of security

1147
00:51:12,630 --> 00:51:15,339
but I think you can raise the bar rather

1148
00:51:15,339 --> 00:51:17,799
easily by simply using the data read

1149
00:51:17,799 --> 00:51:19,569
back protection that is always there in

1150
00:51:19,569 --> 00:51:21,549
the device you just have to activate it

1151
00:51:21,549 --> 00:51:23,829
in the manufacturing process and then

1152
00:51:23,829 --> 00:51:26,609
somebody like me is not able to just

1153
00:51:26,609 --> 00:51:30,130
connect to the spy test points and dump

1154
00:51:30,130 --> 00:51:31,539
the firmware within a couple of minutes

1155
00:51:31,539 --> 00:51:34,209
and also the key so yeah you can raise

1156
00:51:34,209 --> 00:51:36,609
the bar here concerning the unencrypted

1157
00:51:36,609 --> 00:51:38,769
Mass Communication Microsoft Microsoft

1158
00:51:38,769 --> 00:51:40,779
replied yeah that this behavior is just

1159
00:51:40,779 --> 00:51:44,380
by design and they will no not fix it

1160
00:51:44,380 --> 00:51:47,410
and concerning replay a text now we also

1161
00:51:47,410 --> 00:51:49,539
found the microscope keyboard they are

1162
00:51:49,539 --> 00:51:51,969
still signed some kind of working on it

1163
00:51:51,969 --> 00:51:54,069
but I haven't heard from Microsoft since

1164
00:51:54,069 --> 00:51:56,499
a couple of weeks so I don't know what's

1165
00:51:56,499 --> 00:52:00,519
the current status is yeah and Logitech

1166
00:52:00,519 --> 00:52:02,709
HS replied yeah thank you for

1167
00:52:02,709 --> 00:52:04,509
modification and they will provide

1168
00:52:04,509 --> 00:52:07,420
better encryption in future products so

1169
00:52:07,420 --> 00:52:09,699
I hope that's proved it to and yeah

1170
00:52:09,699 --> 00:52:13,390
Fujitsu they also said that it will

1171
00:52:13,390 --> 00:52:17,679
incorporate this knowledge in successful

1172
00:52:17,679 --> 00:52:20,369
products actually but they also said

1173
00:52:20,369 --> 00:52:22,599
yeah we believe that described scenario

1174
00:52:22,599 --> 00:52:24,369
is not easy to perform and this concerns

1175
00:52:24,369 --> 00:52:28,239
only replay attacks in this case they

1176
00:52:28,239 --> 00:52:30,009
say it's not that easy to perform under

1177
00:52:30,009 --> 00:52:31,209
real conditions due to the radio

1178
00:52:31,209 --> 00:52:33,910
protocol here and as you have to be a

1179
00:52:33,910 --> 00:52:35,529
sophisticated tech or I think that's not

1180
00:52:35,529 --> 00:52:37,269
true because as I mentioned before you

1181
00:52:37,269 --> 00:52:39,189
can actually perform this attack thanks

1182
00:52:39,189 --> 00:52:41,679
to mark Newlin from Bastille using this

1183
00:52:41,679 --> 00:52:44,589
tiny USB receiver Logitech unifying

1184
00:52:44,589 --> 00:52:46,929
Donal or flashing a firmware on it the

1185
00:52:46,929 --> 00:52:48,219
owner of research firmer and you can

1186
00:52:48,219 --> 00:52:53,019
actually perform replay attack yeah okay

1187
00:52:53,019 --> 00:52:55,599
but it's not my mistake it's not true

1188
00:52:55,599 --> 00:52:57,160
for the Fujitsu okay because it's not a

1189
00:52:57,160 --> 00:52:58,749
protocol so for the frigate so you have

1190
00:52:58,749 --> 00:53:00,219
to have a software-defined radio

1191
00:53:00,219 --> 00:53:01,779
concerning the other devices you can do

1192
00:53:01,779 --> 00:53:03,759
it with this one with a lot check

1193
00:53:03,759 --> 00:53:05,499
unifying receiver while concerning

1194
00:53:05,499 --> 00:53:06,670
software-defined radios they become

1195
00:53:06,670 --> 00:53:08,079
cheaper and cheaper over the last a

1196
00:53:08,079 --> 00:53:12,549
month or years so you don't have to be a

1197
00:53:12,549 --> 00:53:15,969
state actor to perform replay attacks

1198
00:53:15,969 --> 00:53:18,759
yeah and Jerry they were the first one

1199
00:53:18,759 --> 00:53:20,589
we contacted and where we actually found

1200
00:53:20,589 --> 00:53:23,500
the security at one button is in

1201
00:53:23,500 --> 00:53:25,690
yeah they just decided not to longer

1202
00:53:25,690 --> 00:53:28,630
promote the AES encryption so they are

1203
00:53:28,630 --> 00:53:31,510
now selling the product not anymore I

1204
00:53:31,510 --> 00:53:34,780
think as is a ESB unlimited so they

1205
00:53:34,780 --> 00:53:38,500
rebranded device here and they recommend

1206
00:53:38,500 --> 00:53:40,480
their customer to use while products

1207
00:53:40,480 --> 00:53:42,700
Ian's if they have more security months

1208
00:53:42,700 --> 00:53:44,980
in other security related environments

1209
00:53:44,980 --> 00:53:48,490
so conclusion all the test devices all

1210
00:53:48,490 --> 00:53:51,310
the five of them had one or more

1211
00:53:51,310 --> 00:53:54,310
security vulnerabilities in my opinion

1212
00:53:54,310 --> 00:53:55,780
all the phone security vulnerabilities

1213
00:53:55,780 --> 00:53:57,310
can be exploited in real world attack

1214
00:53:57,310 --> 00:54:00,700
scenarios so if I can gain physical

1215
00:54:00,700 --> 00:54:02,020
access for a couple of minutes I can

1216
00:54:02,020 --> 00:54:03,700
extract the firmware in some cases I can

1217
00:54:03,700 --> 00:54:05,770
extract the cryptographic key I can

1218
00:54:05,770 --> 00:54:07,270
manipulate the firmware and I can

1219
00:54:07,270 --> 00:54:11,380
manipulate photographic keys I can

1220
00:54:11,380 --> 00:54:13,480
perform replay attacks rather reliably

1221
00:54:13,480 --> 00:54:18,520
and concerning devices from Jerry from

1222
00:54:18,520 --> 00:54:19,599
perixx

1223
00:54:19,599 --> 00:54:21,220
and from Logitech I can also perform

1224
00:54:21,220 --> 00:54:24,010
keys to our injection attacks very

1225
00:54:24,010 --> 00:54:27,150
reliably yeah and as we've seen in a

1226
00:54:27,150 --> 00:54:29,980
manufacturer feedback or statements the

1227
00:54:29,980 --> 00:54:32,650
phone security vulnerabilities cannot or

1228
00:54:32,650 --> 00:54:35,220
will not be fixed in the tested products

1229
00:54:35,220 --> 00:54:38,230
but maybe in future ones they won't

1230
00:54:38,230 --> 00:54:40,990
exist anymore so on this slide you can

1231
00:54:40,990 --> 00:54:43,810
just just see a summary of them five

1232
00:54:43,810 --> 00:54:45,220
vulnerabilities or insufficient

1233
00:54:45,220 --> 00:54:48,040
protection of code and data means with

1234
00:54:48,040 --> 00:54:51,099
access to sensitive data namely firm

1235
00:54:51,099 --> 00:54:53,290
vector traffic keys unencrypted enough

1236
00:54:53,290 --> 00:54:55,420
and the data communication is rather old

1237
00:54:55,420 --> 00:54:57,790
news but it's still exploitable if I

1238
00:54:57,790 --> 00:54:59,980
have to correct heuristics a good

1239
00:54:59,980 --> 00:55:02,170
educated guesses missing protection

1240
00:55:02,170 --> 00:55:04,089
against replay attacks here allows for

1241
00:55:04,089 --> 00:55:05,830
replay attacks and you can use it as

1242
00:55:05,830 --> 00:55:08,130
we've seen to gain unauthorized access

1243
00:55:08,130 --> 00:55:12,970
with physical proximity to computer

1244
00:55:12,970 --> 00:55:15,520
systems and the same is true for

1245
00:55:15,520 --> 00:55:17,320
insufficient protection concerning the

1246
00:55:17,320 --> 00:55:19,810
Microsoft case and cryptographic issues

1247
00:55:19,810 --> 00:55:21,970
as we've seen in the AES counter mode

1248
00:55:21,970 --> 00:55:23,890
encryption can lead to keystroke

1249
00:55:23,890 --> 00:55:26,650
injection where an attacker can remotely

1250
00:55:26,650 --> 00:55:29,380
execute code on your target machine just

1251
00:55:29,380 --> 00:55:31,660
as if he is sitting in front of the

1252
00:55:31,660 --> 00:55:35,349
machine so in this table

1253
00:55:35,349 --> 00:55:37,210
it's another summary of our research

1254
00:55:37,210 --> 00:55:39,670
salts so what we found concerning these

1255
00:55:39,670 --> 00:55:43,270
for actual vulnerability types as you

1256
00:55:43,270 --> 00:55:45,460
can see about everywhere else there's

1257
00:55:45,460 --> 00:55:47,650
check mark the attack and vulnerability

1258
00:55:47,650 --> 00:55:51,940
exists where there is a red X we were

1259
00:55:51,940 --> 00:55:54,760
not able to find this vulnerability and

1260
00:55:54,760 --> 00:55:56,410
there are still some question marks in

1261
00:55:56,410 --> 00:55:58,270
there so concerned the Fujitsu keyboard

1262
00:55:58,270 --> 00:56:00,430
that uses another technology there's

1263
00:56:00,430 --> 00:56:02,410
still work in progress but I think we

1264
00:56:02,410 --> 00:56:06,370
can yeah have a look at it beginning of

1265
00:56:06,370 --> 00:56:09,010
next year sadly but we will have a look

1266
00:56:09,010 --> 00:56:10,770
at it because it's it's fun to do

1267
00:56:10,770 --> 00:56:13,300
software-defined radio stuff and

1268
00:56:13,300 --> 00:56:15,160
concerning the Microsoft fever there's

1269
00:56:15,160 --> 00:56:16,960
also a question are concerning keystroke

1270
00:56:16,960 --> 00:56:19,030
injection because up to now we still

1271
00:56:19,030 --> 00:56:21,520
don't know exactly what kind of

1272
00:56:21,520 --> 00:56:25,030
encryption mode they are using yeah so

1273
00:56:25,030 --> 00:56:27,520
it doesn't seem to be the same thing as

1274
00:56:27,520 --> 00:56:30,220
a yes counter mode concerning the cherry

1275
00:56:30,220 --> 00:56:32,440
the perixx and the Logitech Keyboard

1276
00:56:32,440 --> 00:56:35,170
they do something else but I'm not sure

1277
00:56:35,170 --> 00:56:37,630
if it's really secure or not but I will

1278
00:56:37,630 --> 00:56:40,920
also have a look at this in the future

1279
00:56:40,920 --> 00:56:43,960
ok so there's only one recommendation I

1280
00:56:43,960 --> 00:56:45,670
can give you actually and that it's not

1281
00:56:45,670 --> 00:56:47,710
to use wireless test upstairs with no

1282
00:56:47,710 --> 00:56:50,530
one want abilities in security like that

1283
00:56:50,530 --> 00:56:53,950
one ones because somebody may or can

1284
00:56:53,950 --> 00:56:55,720
actually exploit them in a real world

1285
00:56:55,720 --> 00:56:58,630
attack scenario here and as radioactive

1286
00:56:58,630 --> 00:57:00,880
now says all I want for Christmas is a

1287
00:57:00,880 --> 00:57:04,680
secure low-power wireless desktop set

1288
00:57:04,920 --> 00:57:07,900
yeah and another thing is so security

1289
00:57:07,900 --> 00:57:10,690
awareness I think is is always a good

1290
00:57:10,690 --> 00:57:13,450
thing and I'm a big fan of mr. robot

1291
00:57:13,450 --> 00:57:15,430
maybe some of you are too I would like

1292
00:57:15,430 --> 00:57:18,100
to see some of these attacks or these

1293
00:57:18,100 --> 00:57:19,540
one of the tech maybe the combo attack

1294
00:57:19,540 --> 00:57:21,460
replaying keystroke injection in the

1295
00:57:21,460 --> 00:57:23,350
next episode of mr. robot to an evil

1296
00:57:23,350 --> 00:57:24,940
Corp is attacked or something like that

1297
00:57:24,940 --> 00:57:26,680
this would be great and I think it would

1298
00:57:26,680 --> 00:57:29,680
be a cool security awareness stuff when

1299
00:57:29,680 --> 00:57:31,570
people can see this kind of attack

1300
00:57:31,570 --> 00:57:33,910
because many devices that are still

1301
00:57:33,910 --> 00:57:34,390
vulnerable

1302
00:57:34,390 --> 00:57:37,270
yeah are used and I won't be replaced

1303
00:57:37,270 --> 00:57:39,930
for the next few months or years maybe

1304
00:57:39,930 --> 00:57:42,340
who knows yeah and here also some

1305
00:57:42,340 --> 00:57:44,680
references reference to

1306
00:57:44,680 --> 00:57:46,839
research done by researchers previously

1307
00:57:46,839 --> 00:57:50,710
and also to the security advisories we

1308
00:57:50,710 --> 00:57:54,030
police concerning this research project

1309
00:57:54,030 --> 00:57:57,609
quite a few and yeah we also released as

1310
00:57:57,609 --> 00:58:01,000
mentioned before a short YouTube video

1311
00:58:01,000 --> 00:58:02,650
you can find here it needs some more

1312
00:58:02,650 --> 00:58:05,109
abuse some more clicks and here you can

1313
00:58:05,109 --> 00:58:07,319
see just a complete attack in real time

1314
00:58:07,319 --> 00:58:10,390
if you need a reference if somebody

1315
00:58:10,390 --> 00:58:12,700
doesn't believe you that it's possible

1316
00:58:12,700 --> 00:58:14,530
under some circumstances - some

1317
00:58:14,530 --> 00:58:16,210
situations to actually get remote code

1318
00:58:16,210 --> 00:58:18,460
execution by exploiting an unencrypted

1319
00:58:18,460 --> 00:58:22,359
and authenticated wireless knows yeah so

1320
00:58:22,359 --> 00:58:23,589
thank you very much for your attention

1321
00:58:23,589 --> 00:58:26,829
and yeah I will also uh

1322
00:58:26,829 --> 00:58:29,140
answer your questions but I have one

1323
00:58:29,140 --> 00:58:30,359
more thing that I forgot to mention

1324
00:58:30,359 --> 00:58:32,980
because it's not well not only Wireless

1325
00:58:32,980 --> 00:58:34,839
Desktop sets it's also other devices

1326
00:58:34,839 --> 00:58:37,089
that use the same technology and one

1327
00:58:37,089 --> 00:58:39,400
obvious one is Wireless presenters so

1328
00:58:39,400 --> 00:58:41,079
this logitech wireless presenter that

1329
00:58:41,079 --> 00:58:44,500
some of you use and also used here this

1330
00:58:44,500 --> 00:58:46,210
is my own they're also vulnerable to

1331
00:58:46,210 --> 00:58:48,190
keystroke injection attacks they are not

1332
00:58:48,190 --> 00:58:52,270
encrypted in any way but yeah you can

1333
00:58:52,270 --> 00:58:55,000
spoof them you can send manipulated data

1334
00:58:55,000 --> 00:58:57,280
communication and you have the same

1335
00:58:57,280 --> 00:58:59,109
effect you have keystroke injection on

1336
00:58:59,109 --> 00:59:04,900
unlocked systems in the right time so

1337
00:59:04,900 --> 00:59:07,859
thank you very much

1338
00:59:10,700 --> 00:59:12,759
you

