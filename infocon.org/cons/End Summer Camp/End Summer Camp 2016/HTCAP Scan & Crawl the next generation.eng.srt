1
00:00:00,000 --> 00:00:03,440
hello everyone I'm sorry it's tube

2
00:00:03,440 --> 00:00:07,830
ok I'm filippo cavallerin and I'm here

3
00:00:07,830 --> 00:00:09,780
to introduce you to ht cup which is an

4
00:00:09,780 --> 00:00:11,460
open source project my open source project

5
00:00:11,460 --> 00:00:13,469
that I started about a pound and a half

6
00:00:13,469 --> 00:00:18,840
ago so what is ht cup htk is a web

7
00:00:18,840 --> 00:00:20,789
application scanner that is able to

8
00:00:20,789 --> 00:00:23,400
analyze the single weights application

9
00:00:23,400 --> 00:00:26,130
single thinks application are

10
00:00:26,130 --> 00:00:28,859
web applications that always work

11
00:00:28,859 --> 00:00:31,590
on the single page for example gmail is

12
00:00:31,590 --> 00:00:33,329
a single page application when

13
00:00:33,329 --> 00:00:35,309
we enter limbo that we have

14
00:00:35,309 --> 00:00:36,809
variations but we always remain on the

15
00:00:36,809 --> 00:00:37,670
same page

16
00:00:37,670 --> 00:00:41,390
as we do  does a to analyze then a

17
00:00:41,390 --> 00:00:43,620
clown and the area let's say this type of

18
00:00:43,620 --> 00:00:45,690
application you have to proceed in three

19
00:00:45,690 --> 00:00:48,059
steps the first is to interact with

20
00:00:48,059 --> 00:00:50,610
the page then practically simulate

21
00:00:50,610 --> 00:00:52,410
what the user would do within

22
00:00:52,410 --> 00:00:55,170
the typical page click on the

23
00:00:55,170 --> 00:00:56,969
buttons and  then trigger areas all

24
00:00:56,969 --> 00:00:58,199
the events that have been

25
00:00:58,199 --> 00:01:00,690
recorded on that page

26
00:01:00,690 --> 00:01:04,110
the second step is to intercept

27
00:01:04,110 --> 00:01:06,330
the communications between the p  agina and the

28
00:01:06,330 --> 00:01:09,240
server is supposed to trigger the

29
00:01:09,240 --> 00:01:11,340
events for example by clicking on the

30
00:01:11,340 --> 00:01:13,710
button a typical call can be issued and

31
00:01:13,710 --> 00:01:15,390
there is already a call on its web socket

32
00:01:15,390 --> 00:01:17,369
so the purpose is to trigger areas

33
00:01:17,369 --> 00:01:20,280
the events for inter to intercept

34
00:01:20,280 --> 00:01:23,460
communications last  step is to

35
00:01:23,460 --> 00:01:26,430
understand if following an ajax call

36
00:01:26,430 --> 00:01:27,990
the dom has been modified

37
00:01:27,990 --> 00:01:29,790
for example one can make a call and

38
00:01:29,790 --> 00:01:31,770
jax download the content some

39
00:01:31,770 --> 00:01:34,170
popular html another star within

40
00:01:34,170 --> 00:01:36,090
the page and then add

41
00:01:36,090 --> 00:01:40,740
elements to the domm explaining graphically

42
00:01:40,740 --> 00:01:42,799
this concept, that is, how does the

43
00:01:42,799 --> 00:01:47,960
use of analysis nichols iva begin

44
00:01:54,370 --> 00:01:57,200
sap sent in eight

45
00:01:57,200 --> 00:02:00,229
forgive me then I was saying at time 0 1

46
00:02:00,229 --> 00:02:02,240
load the page and the first content is loaded

47
00:02:02,240 --> 00:02:03,020


48
00:02:03,020 --> 00:02:06,800
then the space content second step

49
00:02:06,800 --> 00:02:08,179
is exactly as I said before

50
00:02:08,179 --> 00:02:09,860
interacting with this content  which has

51
00:02:09,860 --> 00:02:13,490
just been created once in placid

52
00:02:13,490 --> 00:02:16,850
with the content we have to wonder is

53
00:02:16,850 --> 00:02:19,010
patrick herat has at least one call and

54
00:02:19,010 --> 00:02:19,430
jazz

55
00:02:19,430 --> 00:02:21,530
if not exact thankful for nothing we can

56
00:02:21,530 --> 00:02:23,120
return because our analysis is

57
00:02:23,120 --> 00:02:25,459
over otherwise so if

58
00:02:25,459 --> 00:02:27,260
the interaction with the content has given me

59
00:02:27,260 --> 00:02:29,060
some communication some

60
00:02:29,060 --> 00:02:31,489
calls I have to wait for all the

61
00:02:31,489 --> 00:02:32,709
calls that have been initiated to

62
00:02:32,709 --> 00:02:35,959
end once they are finished

63
00:02:35,959 --> 00:02:37,670
I make a '  other question

64
00:02:37,670 --> 00:02:41,360
the content has been changed the content has been

65
00:02:41,360 --> 00:02:43,220
changed and I apply

66
00:02:43,220 --> 00:02:44,930
our algorithm co accidents to the new

67
00:02:44,930 --> 00:02:47,690
content that has been added

68
00:02:47,690 --> 00:02:48,230
otherwise

69
00:02:48,230 --> 00:02:51,320
I exit and this is how

70
00:02:51,320 --> 00:02:54,140
recursion works a practical example then

71
00:02:54,140 --> 00:02:57,200
this is a page that has been made

72
00:02:57,200 --> 00:02:59,239
on purpose in angola which uses a lot of

73
00:02:59,239 --> 00:03:01,190
calls sachs was made as a demo

74
00:03:01,190 --> 00:03:02,870
to demonstrate the concept of recursion

75
00:03:02,870 --> 00:03:04,459
within a page

76
00:03:04,459 --> 00:03:06,040
then one loads the page at the

77
00:03:06,040 --> 00:03:08,269
beginning finds the start button click

78
00:03:08,269 --> 00:03:11,420
on the start button starts a call and zac

79
00:03:11,420 --> 00:03:13,489
downloads  the contribution of the second boxes

80
00:03:13,489 --> 00:03:14,930
with boxing in turn another

81
00:03:14,930 --> 00:03:15,980
button step 2 we

82
00:03:15,980 --> 00:03:19,250
click on start 2 2 called hex  c

83
00:03:19,250 --> 00:03:21,140
download 2 contained we have two branches

84
00:03:21,140 --> 00:03:23,720
now we go to a left branch

85
00:03:23,720 --> 00:03:27,799
it is 21 22 and this ends we go

86
00:03:27,799 --> 00:03:29,180
somewhere else needs to insert a

87
00:03:29,180 --> 00:03:32,120
text click on the key st 34 and so

88
00:03:32,120 --> 00:03:32,360
on

89
00:03:32,360 --> 00:03:35,690
we arrive at the end at the end of this

90
00:03:35,690 --> 00:03:37,810
recursion I know if  you see here there is a link

91
00:03:37,810 --> 00:03:40,640
xs is a link to a page that contains

92
00:03:40,640 --> 00:03:45,260
an xss ok so theoretically launching

93
00:03:45,260 --> 00:03:48,200
a web applications kernel against that

94
00:03:48,200 --> 00:03:50,690
scream should return you that there is an

95
00:03:50,690 --> 00:03:52,970
xss inside this page

96
00:03:52,970 --> 00:03:55,850
I tried some ethics with my friend and

97
00:03:55,850 --> 00:03:57,620
did not find anything while ht cup that is

98
00:03:57,620 --> 00:03:59,180
able to do that kind of

99
00:03:59,180 --> 00:04:00,739
recursive analysis came to the end of the

100
00:04:00,739 --> 00:04:02,150
path and found that the vulnerable page

101
00:04:02,150 --> 00:04:04,629


102
00:04:04,930 --> 00:04:07,159
now let's talk a little about the structure

103
00:04:07,159 --> 00:04:08,269
that has seen a little how it works the

104
00:04:08,269 --> 00:04:10,340
basic concepts how it is structured  a

105
00:04:10,340 --> 00:04:11,030
cut and cap

106
00:04:11,030 --> 00:04:13,640
then two words are two marco the fingers

107
00:04:13,640 --> 00:04:16,250
the clown and the scanner the cloud will be the

108
00:04:16,250 --> 00:04:18,680
one that applause from the page

109
00:04:18,680 --> 00:04:21,139
will analyze the web application and save

110
00:04:21,139 --> 00:04:23,660
all the things c  he found the

111
00:04:23,660 --> 00:04:25,340
scanner it takes from dough those things

112
00:04:25,340 --> 00:04:27,650
it will try to do the part of the phase in

113
00:04:27,650 --> 00:04:28,910
which it is to find the vulnerabilities

114
00:04:28,910 --> 00:04:32,990
within those urls how

115
00:04:32,990 --> 00:04:35,510
claudio works then the cabbage is written in

116
00:04:35,510 --> 00:04:38,330
python and uses fanta a following which is  a

117
00:04:38,330 --> 00:04:41,270
command line browser to analyze

118
00:04:41,270 --> 00:04:43,580
the pages so there was the python that

119
00:04:43,580 --> 00:04:45,500
launches fan consequences fantasies s load

120
00:04:45,500 --> 00:04:49,039
the page and do analysis once

121
00:04:49,039 --> 00:04:51,229
the analysis of a page is finished

122
00:04:51,229 --> 00:04:53,960
the results are returned to the cloud

123
00:04:53,960 --> 00:04:55,490
and which will serve  in real time the data

124
00:04:55,490 --> 00:04:58,310
on the born but that it in real time

125
00:04:58,310 --> 00:04:59,270
means that every time one is

126
00:04:59,270 --> 00:05:01,669
found one of these is saved

127
00:05:01,669 --> 00:05:03,860
and at the moment here if we interrupt the

128
00:05:03,860 --> 00:05:05,210
airport in half, however, it has not been well

129
00:05:05,210 --> 00:05:06,530
populated with what it has found

130
00:05:06,530 --> 00:05:10,190
so far here  we talk about request because

131
00:05:10,190 --> 00:05:13,460
one can imagine that the result

132
00:05:13,460 --> 00:05:14,990
of a clown is to come up with

133
00:05:14,990 --> 00:05:17,900
a list of urls in reality it is not true

134
00:05:17,900 --> 00:05:19,849
because if for example we find a form

135
00:05:19,849 --> 00:05:21,410
inside the londr page  a to

136
00:05:21,410 --> 00:05:23,030
return only the scream of the return to me the

137
00:05:23,030 --> 00:05:25,820
method the url any data and lecce between

138
00:05:25,820 --> 00:05:27,950
so when we talk about

139
00:05:27,950 --> 00:05:29,750
crowley results we talk about this this

140
00:05:29,750 --> 00:05:34,550
entity and this then graphically

141
00:05:34,550 --> 00:05:36,490
how this thing of the clown works

142
00:05:36,490 --> 00:05:39,979
we have our claure who called a

143
00:05:39,979 --> 00:05:41,660
ex here then executes an external command

144
00:05:41,660 --> 00:05:44,270
executes a script in javascript which

145
00:05:44,270 --> 00:05:48,010
is processed by fanton js fanton jsc

146
00:05:48,010 --> 00:05:50,479
processes the page and returns to the

147
00:05:50,479 --> 00:05:52,210
standard output to whoever called lecce

148
00:05:52,210 --> 00:05:54,650
all the disputes of this who

149
00:05:54,650 --> 00:05:56,750
found last thing

150
00:05:56,750 --> 00:05:58,789
the clown will save the of this  find

151
00:05:58,789 --> 00:06:03,530
on the sqlite database the scanner how it

152
00:06:03,530 --> 00:06:06,500
works then we said that to htk

153
00:06:06,500 --> 00:06:08,330
this masculinity the clown and the

154
00:06:08,330 --> 00:06:09,830
scanner

155
00:06:09,830 --> 00:06:11,820
a little note then

156
00:06:11,820 --> 00:06:13,860
what it took over the years at

157
00:06:13,860 --> 00:06:15,690
the web application level is the part

158
00:06:15,690 --> 00:06:17,100
of the interface the part that is there  behind

159
00:06:17,100 --> 00:06:18,690
therefore that of the requests is

160
00:06:18,690 --> 00:06:20,460
practically unchanged for about ten

161
00:06:20,460 --> 00:06:21,870
years perhaps even better

162
00:06:21,870 --> 00:06:24,000
therefore the purpose which the dht heads that

163
00:06:24,000 --> 00:06:25,800
of conce  enter the Crowley part

164
00:06:25,800 --> 00:06:27,210
that the more delicate one

165
00:06:27,210 --> 00:06:29,040
while leaving the phising part to

166
00:06:29,040 --> 00:06:31,170
tools that have existed for tens of years and

167
00:06:31,170 --> 00:06:32,700
do their job perfectly since in

168
00:06:32,700 --> 00:06:35,430
any case their field of

169
00:06:35,430 --> 00:06:36,660
action has absolutely not changed while

170
00:06:36,660 --> 00:06:38,220
that of the page analysis  it

171
00:06:38,220 --> 00:06:39,990
changed because we wanted how

172
00:06:39,990 --> 00:06:42,360
the user how the programmer makes the

173
00:06:42,360 --> 00:06:43,230
interfaces how the interface is made

174
00:06:43,230 --> 00:06:46,470
look then

175
00:06:46,470 --> 00:06:49,880
how the scanner part works dht cup

176
00:06:49,880 --> 00:06:53,430
we have a modular architecture

177
00:06:53,430 --> 00:06:58,110
so each scanner will be a dht cup module

178
00:06:58,110 --> 00:06:59,610
and so  we can customize

179
00:06:59,610 --> 00:07:01,170
how much scanners we can add

180
00:07:01,170 --> 00:07:03,600
other modules we can also create

181
00:07:03,600 --> 00:07:05,220
custom modules we can kick

182
00:07:05,220 --> 00:07:08,160
custom fuzzing tools as

183
00:07:08,160 --> 00:07:09,990
functional modular architecture is very

184
00:07:09,990 --> 00:07:11,790
similar to that of the clown so we

185
00:07:11,790 --> 00:07:15,330
don't have our module continuing

186
00:07:15,330 --> 00:07:18,950
while or not our python module

187
00:07:18,950 --> 00:07:22,230
catching  requests from the

188
00:07:22,230 --> 00:07:23,850
sequel light database which was previously

189
00:07:23,850 --> 00:07:25,850
populated by our  ro klauser

190
00:07:25,850 --> 00:07:28,080
visible of this who found the

191
00:07:28,080 --> 00:07:33,480
qaule at ster first executes his

192
00:07:33,480 --> 00:07:36,540
module to execute the command at

193
00:07:36,540 --> 00:07:38,970
3a acne plays the part of

194
00:07:38,970 --> 00:07:41,490
the request fuzzing scanni and returns the

195
00:07:41,490 --> 00:07:44,190
vulnerabilities he found the module

196
00:07:44,190 --> 00:07:46,110
will finally save the vulnerabilities on the

197
00:07:46,110 --> 00:07:48,510
same  database on which claudia had

198
00:07:48,510 --> 00:07:50,220
saved the requests so at the end

199
00:07:50,220 --> 00:07:51,840
of the circle we will practically have a single

200
00:07:51,840 --> 00:07:53,640
database that contains both the requests

201
00:07:53,640 --> 00:07:56,880
of the clown and the vulnerabilities found

202
00:07:56,880 --> 00:07:59,130
by the scanners so every practically

203
00:07:59,130 --> 00:08:00,720
every request at the end at the end of

204
00:08:00,720 --> 00:08:02,340
everything for every request there can

205
00:08:02,340 --> 00:08:04,110
be neither vulnerabilities  found by m

206
00:08:04,110 --> 00:08:08,520
tools subsequently launched then

207
00:08:08,520 --> 00:08:10,980
once populated database with the

208
00:08:10,980 --> 00:08:12,750
results of the scanner with

209
00:08:12,750 --> 00:08:15,990
clown results it is possible to generate a report

210
00:08:15,990 --> 00:08:18,180
the report looks like a single

211
00:08:18,180 --> 00:08:21,120
html page written in java I wrote

212
00:08:21,120 --> 00:08:23,200
in the non-static fact

213
00:08:23,200 --> 00:08:25,660
that looks like this then  above

214
00:08:25,660 --> 00:08:28,500
we have some information on

215
00:08:28,500 --> 00:08:31,150
clouding about what it did  tto

216
00:08:31,150 --> 00:08:32,409
we have two buttons where it is possible to

217
00:08:32,409 --> 00:08:34,659
open all the urls that have

218
00:08:34,659 --> 00:08:36,520
been found auto purpose which means

219
00:08:36,520 --> 00:08:38,130
for example that I know claure on the

220
00:08:38,130 --> 00:08:40,390
google.com side and inside found a

221
00:08:40,390 --> 00:08:41,830
free link that is considered auto

222
00:08:41,830 --> 00:08:43,479
purpose because it is not inside  of the

223
00:08:43,479 --> 00:08:44,110
same domain

224
00:08:44,110 --> 00:08:45,880
the default dht cup purpose is to

225
00:08:45,880 --> 00:08:47,350
analyze only the pages that are

226
00:08:47,350 --> 00:08:49,320
within the starting domain

227
00:08:49,320 --> 00:08:51,370
below we have the possibility to open

228
00:08:51,370 --> 00:08:53,620
all the pages that are not html for

229
00:08:53,620 --> 00:08:55,510
example both in a clouding phase I

230
00:08:55,510 --> 00:08:57,460
found some pdf of the  linked images

231
00:08:57,460 --> 00:08:59,350
cannot be clearly clowns the

232
00:08:59,350 --> 00:09:00,700
rates cannot be realized and

233
00:09:00,700 --> 00:09:02,320
are simply reported

234
00:09:02,320 --> 00:09:04,870
in the report the part under

235
00:09:04,870 --> 00:09:07,600
this band here there are whips a

236
00:09:07,600 --> 00:09:11,140
by phil the filter that allow you to

237
00:09:11,140 --> 00:09:13,270
filter the results that are those

238
00:09:13,270 --> 00:09:14,590
below and if there  there are four so it does

239
00:09:14,590 --> 00:09:15,820
n't make much sense but the idea is to

240
00:09:15,820 --> 00:09:19,900
be able, for example, to be able to search for all of them

241
00:09:19,900 --> 00:09:21,730
here check box and leave only annoyed

242
00:09:21,730 --> 00:09:23,110
vulnerabilities  and below it shows

243
00:09:23,110 --> 00:09:25,710
only the pages that have vulnerabilities

244
00:09:25,710 --> 00:09:28,240
below we have the results that

245
00:09:28,240 --> 00:09:29,980
are all the urls not all

246
00:09:29,980 --> 00:09:31,780
the urls found by the clown but only

247
00:09:31,780 --> 00:09:33,040
those that have interesting things

248
00:09:33,040 --> 00:09:35,530
in quotation marks for example the first there

249
00:09:35,530 --> 00:09:37,990
are these connects to the side of the  simeto

250
00:09:37,990 --> 00:09:40,720
the cursor you see them if there are these

251
00:09:40,720 --> 00:09:42,070
connections here side that tell me that

252
00:09:42,070 --> 00:09:43,660
this

253
00:09:43,660 --> 00:09:47,290
exchange page has at least one call hicks stands

254
00:09:47,290 --> 00:09:50,920
for at least one jackson call more or

255
00:09:50,920 --> 00:09:53,080
less a web socket call and at least one

256
00:09:53,080 --> 00:09:56,490
format the one below is just an

257
00:09:56,490 --> 00:09:59,800
xhr call the latest  two pages contain

258
00:09:59,800 --> 00:10:02,069
only vulnerabilities

259
00:10:02,500 --> 00:10:04,720
now it is possible to expand the results

260
00:10:04,720 --> 00:10:06,280
actually predict what has been

261
00:10:06,280 --> 00:10:07,570
found

262
00:10:07,570 --> 00:10:09,190
we have the spaces all for

263
00:10:09,190 --> 00:10:11,920
convenience and what we see that are

264
00:10:11,920 --> 00:10:13,740
concussion

265
00:10:13,740 --> 00:10:16,300
then the rooms calls found two a

266
00:10:16,300 --> 00:10:17,380
calls and jackson

267
00:10:17,380 --> 00:10:19,510
the first is made in get to this  one

268
00:10:19,510 --> 00:10:20,830
here the second was made imposed

269
00:10:20,830 --> 00:10:23,590
this one analogous for the jackson p

270
00:10:23,590 --> 00:10:26,020
a loaded a was found  to page from

271
00:10:26,020 --> 00:10:29,710
jake here via wap the through of the supi web

272
00:10:29,710 --> 00:10:32,590
socket analogous always reports the

273
00:10:32,590 --> 00:10:34,930
call to the web socket informs the same

274
00:10:34,930 --> 00:10:36,070
thing

275
00:10:36,070 --> 00:10:40,240
this you see is sky news the mg care

276
00:10:40,240 --> 00:10:41,590
to the page shown here before the

277
00:10:41,590 --> 00:10:43,260
recursion this is the result

278
00:10:43,260 --> 00:10:45,280
of the analysis of acate  cup on that

279
00:10:45,280 --> 00:10:46,360
page

280
00:10:46,360 --> 00:10:49,300
and in fact we see that the call has found

281
00:10:49,300 --> 00:10:50,830
the step 1 the call to step

282
00:10:50,830 --> 00:10:53,080
2 the call the staff 20 34 etc.

283
00:10:53,080 --> 00:10:55,210


284
00:10:55,210 --> 00:10:59,590


285
00:10:59,590 --> 00:11:01,630


286
00:11:01,630 --> 00:11:03,070
etc.  'other

287
00:11:03,070 --> 00:11:06,220
information this here is the element that

288
00:11:06,220 --> 00:11:08,770
inside the page gave

289
00:11:08,770 --> 00:11:11,350
that call and jazz

290
00:11:11,350 --> 00:11:13,300
for example in this case the trigger

291
00:11:13,300 --> 00:11:15,700
ata an engine that has the default btn class

292
00:11:15,700 --> 00:11:17,710
as of ajax cat

293
00:11:17,710 --> 00:11:20,220
etcetera etcetera is the event that was

294
00:11:20,220 --> 00:11:23,410
revealed it was the click then at the click

295
00:11:23,410 --> 00:11:24,910
of the button I know that the

296
00:11:24,910 --> 00:11:27,850
one called isaksson was done same thing for

297
00:11:27,850 --> 00:11:32,140
all the others a little note

298
00:11:32,140 --> 00:11:33,640
on the filtering

299
00:11:33,640 --> 00:11:35,500
part sometimes you find yourself com  pages that have

300
00:11:35,500 --> 00:11:38,320
dozens and dozens of identical sachs calls

301
00:11:38,320 --> 00:11:40,560
for which it may be convenient to

302
00:11:40,560 --> 00:11:42,850
generate a pattern a

303
00:11:42,850 --> 00:11:45,010
regular expression for example and to the report to

304
00:11:45,010 --> 00:11:47,170
hide all those

305
00:11:47,170 --> 00:11:48,460
results that put which often not

306
00:11:48,460 --> 00:11:52,290
regular for example I can highlight

307
00:11:52,290 --> 00:11:55,030
whether to select a piece of  text which

308
00:11:55,030 --> 00:11:56,830
will appear with a select button and

309
00:11:56,830 --> 00:11:58,780
texture as soon as I click it he will

310
00:11:58,780 --> 00:12:00,970
reach me here a regular expression

311
00:12:00,970 --> 00:12:05,950
that match has precisely exchanges energy and

312
00:12:05,950 --> 00:12:08,800
jazz point php and what happens here

313
00:12:08,800 --> 00:12:11,490
are hidden all the

314
00:12:11,490 --> 00:12:14,470
results they see before and these

315
00:12:14,470 --> 00:12:17,260
connect it is  slightly faded which

316
00:12:17,260 --> 00:12:19,390
is pumping me to indicate that yes there

317
00:12:19,390 --> 00:12:21,340
are results within that entry

318
00:12:21,340 --> 00:12:22,870
but that they have been hidden by filtering

319
00:12:22,870 --> 00:12:25,000
here second we have a very

320
00:12:25,000 --> 00:12:27,040
long page to scroll at a glance I will be able to

321
00:12:27,040 --> 00:12:28,390
see those that do not contain the

322
00:12:28,390 --> 00:12:29,500
calls xa carle o  those that

323
00:12:29,500 --> 00:12:30,910
contain called icsa meat that I have

324
00:12:30,910 --> 00:12:34,060
chosen to filter to hide

325
00:12:34,060 --> 00:12:35,650
last what we know  tto the

326
00:12:35,650 --> 00:12:37,810
vulnerabilities in this case he found

327
00:12:37,810 --> 00:12:39,730
that famous xss we were talking about before

328
00:12:39,730 --> 00:12:43,900
I can click on how much anger

329
00:12:43,900 --> 00:12:46,600
clicked a pop up opens and shows me

330
00:12:46,600 --> 00:12:48,700
all the details of that as

331
00:12:48,700 --> 00:12:49,410
the ability

332
00:12:49,410 --> 00:12:53,430
a cross and scripting the usual le fs le

333
00:12:53,430 --> 00:12:55,680
quarrels and brings me under the request it is

334
00:12:55,680 --> 00:12:59,329
deadly that I can take it and replicate it

335
00:12:59,509 --> 00:13:02,550
now I show you a small video that

336
00:13:02,550 --> 00:13:04,379
summarizes a bit with what has been said so far and

337
00:13:04,379 --> 00:13:06,680
then we can a bit more technical part

338
00:13:06,680 --> 00:13:09,029
here it is clearly launched at the

339
00:13:09,029 --> 00:13:12,120
command line and we talk often  nothing is a

340
00:13:12,120 --> 00:13:18,269
db he does his thing and here we have

341
00:13:18,269 --> 00:13:20,759
finished the clouding part we

342
00:13:20,759 --> 00:13:22,050
can then execute one from the command line

343
00:13:22,050 --> 00:13:24,779
via sequel to the three to see for

344
00:13:24,779 --> 00:13:26,730
example how many xhr calls have been

345
00:13:26,730 --> 00:13:30,480
found is a selector from of these

346
00:13:30,480 --> 00:13:33,089
selection and here he pulls me  out all the

347
00:13:33,089 --> 00:13:35,189
ones he found second phase

348
00:13:35,189 --> 00:13:38,129
we scan using arachnids alone

349
00:13:38,129 --> 00:13:41,550
the xhr calls taking them from cut and

350
00:13:41,550 --> 00:13:42,750
cap michael hall point from bigg

351
00:13:42,750 --> 00:13:44,939
created the cloud first the same thing

352
00:13:44,939 --> 00:13:46,800
we do a select count and see

353
00:13:46,800 --> 00:13:48,089
how much it is and the skills have been

354
00:13:48,089 --> 00:13:55,199
found a fantastic we generate the

355
00:13:55,199 --> 00:14:02,360
true report it is in fact yes this here very

356
00:14:02,360 --> 00:14:05,790
quiet I launch my browser at a

357
00:14:05,790 --> 00:14:06,600
record award

358
00:14:06,600 --> 00:14:09,290
and here it is

359
00:14:11,519 --> 00:14:14,300
I click it opens

360
00:14:58,160 --> 00:15:01,140
we can also trace the requests it is

361
00:15:01,140 --> 00:15:03,720
certain to be this is  more or less the

362
00:15:03,720 --> 00:15:06,420
summary of what has been said so far part

363
00:15:06,420 --> 00:15:09,810
a little more technical structure of the database

364
00:15:09,810 --> 00:15:12,000
then we have with the table then

365
00:15:12,000 --> 00:15:13,620
since we have said that the database

366
00:15:13,620 --> 00:15:17,550
is formed by the data of the clown and the data

367
00:15:17,550 --> 00:15:19,890
of n scanners therefore the information of the

368
00:15:19,890 --> 00:15:21,360
cloud on a single  therefore a

369
00:15:21,360 --> 00:15:23,089
database will correspond to 1 to a single one

370
00:15:23,089 --> 00:15:25,860
while the databases seem to

371
00:15:25,860 --> 00:15:27,720
correspond m hans hess while each

372
00:15:27,720 --> 00:15:29,160
absence while it is precisely an execution

373
00:15:29,160 --> 00:15:30,570
of a scanner against the

374
00:15:30,570 --> 00:15:33,839
database saved requests and therefore for the

375
00:15:33,839 --> 00:15:35,310
clowns in part we have a clouding

376
00:15:35,310 --> 00:15:38,100
fox table from a series of  fields

377
00:15:38,100 --> 00:15:39,660
the fundamental table which is the table

378
00:15:39,660 --> 00:15:41,279
of this one where

379
00:15:41,279 --> 00:15:42,990
all the requests we have ty are saved  pe

380
00:15:42,990 --> 00:15:45,600
method url rapper number of lire

381
00:15:45,600 --> 00:15:48,510
direct cookies if the url is auto purpose what is the

382
00:15:48,510 --> 00:15:50,550
trigger that knows that it is an html element

383
00:15:50,550 --> 00:15:52,290
that they demonstrate first in the report it has

384
00:15:52,290 --> 00:15:54,329
been plowed offense possible errors of the

385
00:15:54,329 --> 00:15:56,459
clown and any html generated by the

386
00:15:56,459 --> 00:16:03,440
page now  a small note on

387
00:16:03,440 --> 00:16:05,310
a site generally we think of a

388
00:16:05,310 --> 00:16:06,839
site we think of a blog for example a

389
00:16:06,839 --> 00:16:09,450
blog with n navigation levels can

390
00:16:09,450 --> 00:16:10,740
start from work send on the blog

391
00:16:10,740 --> 00:16:12,180
open a post and from a lap of himself

392
00:16:12,180 --> 00:16:14,130
an image and has made a path to

393
00:16:14,130 --> 00:16:16,500
get to  that image,

394
00:16:16,500 --> 00:16:18,000
however, that image within the site can

395
00:16:18,000 --> 00:16:19,140
also be referenced by other pages

396
00:16:19,140 --> 00:16:22,170
so that page is a single entity but

397
00:16:22,170 --> 00:16:24,690
from the site there are n different paths to

398
00:16:24,690 --> 00:16:27,950
reach it a clown with a clown make it

399
00:16:27,950 --> 00:16:30,149
follow all the paths for which it is

400
00:16:30,149 --> 00:16:31,620
enough to arrive  to that page and

401
00:16:31,620 --> 00:16:32,970
follow a single path and save us

402
00:16:32,970 --> 00:16:37,399
that path so it works

403
00:16:37,399 --> 00:16:39,750
within this there will

404
00:16:39,750 --> 00:16:41,670
simply be parent kelly liri of

405
00:16:41,670 --> 00:16:44,459
the request that generated q  his

406
00:16:44,459 --> 00:16:46,829
request here and then going backwards

407
00:16:46,829 --> 00:16:49,350
we can understand which

408
00:16:49,350 --> 00:16:50,610
path our claudio took to get to that

409
00:16:50,610 --> 00:16:53,970
page so as not to leave aside all

410
00:16:53,970 --> 00:16:55,260
the other paths even if

411
00:16:55,260 --> 00:16:56,519
we wanted to create sides are still

412
00:16:56,519 --> 00:16:58,470
useful information that is to understand on that

413
00:16:58,470 --> 00:16:59,910
page what all the  other

414
00:16:59,910 --> 00:17:01,949
possible paths this thing is

415
00:17:01,949 --> 00:17:04,079
done with this protection table which will

416
00:17:04,079 --> 00:17:07,140
simply be all how many lyrs of the Spanish

417
00:17:07,140 --> 00:17:08,730
languages and all how many and those

418
00:17:08,730 --> 00:17:10,230
of these so in the end

419
00:17:10,230 --> 00:17:11,650
when the database has been populated it

420
00:17:11,650 --> 00:17:13,720
is possible not only to understand what path

421
00:17:13,720 --> 00:17:15,160
lacquered has made  cup to get to

422
00:17:15,160 --> 00:17:16,210
that page

423
00:17:16,210 --> 00:17:17,290
but what are also all the other

424
00:17:17,290 --> 00:17:20,050
potential paths that we can follow

425
00:17:20,050 --> 00:17:22,569
to always get there and this is

426
00:17:22,569 --> 00:17:23,950
with regard to the clouding part which

427
00:17:23,950 --> 00:17:26,770
is this the scanning part is

428
00:17:26,770 --> 00:17:28,600
simpler we simply have a

429
00:17:28,600 --> 00:17:31,480
sex table nor that contains a  id they

430
00:17:31,480 --> 00:17:32,830
swap was used so then

431
00:17:32,830 --> 00:17:34,510
we used at 15 wrote aracne

432
00:17:34,510 --> 00:17:36,880
st  art and tend only when it has begun

433
00:17:36,880 --> 00:17:39,910
with the scanner defined etc.

434
00:17:39,910 --> 00:17:42,970
n vulnerabilities correspond to each assessment

435
00:17:42,970 --> 00:17:45,580
then a scanner is launched creole

436
00:17:45,580 --> 00:17:48,220
core inside assessment and the scanner every

437
00:17:48,220 --> 00:17:49,660
wants the life that it finds to add to

438
00:17:49,660 --> 00:17:51,340
the vulnerability table and

439
00:17:51,340 --> 00:17:54,040
clearly referring to its assessment the

440
00:17:54,040 --> 00:17:55,720
vulnerabilities as I said  first they are

441
00:17:55,720 --> 00:17:58,150
connected to the entities for the quests for

442
00:17:58,150 --> 00:18:00,520
which I will have my enne of quests and peloni

443
00:18:00,520 --> 00:18:02,920
of this one I will have potentially nv in the

444
00:18:02,920 --> 00:18:08,410
perfect life then we have seen that

445
00:18:08,410 --> 00:18:10,240
you can look at the data through the

446
00:18:10,240 --> 00:18:13,030
reports in html which is quite

447
00:18:13,030 --> 00:18:15,370
convenient precisely how not  brings them all

448
00:18:15,370 --> 00:18:17,950
the screams found because for

449
00:18:17,950 --> 00:18:19,780
example it will only report the screams in

450
00:18:19,780 --> 00:18:21,250
which at least one call has been found

451
00:18:21,250 --> 00:18:22,570
is already on at least one

452
00:18:22,570 --> 00:18:24,850
web call are that you are at least fit etc.

453
00:18:24,850 --> 00:18:28,120
while exploring they love the database it is

454
00:18:28,120 --> 00:18:29,680
possible to bring out all the data

455
00:18:29,680 --> 00:18:33,610
to  example this is the

456
00:18:33,610 --> 00:18:36,160
request table screen opened with the

457
00:18:36,160 --> 00:18:37,740
very handy tool

458
00:18:37,740 --> 00:18:42,809
graph from here we can see all

459
00:18:42,809 --> 00:18:44,880
the saved data of the clown we have

460
00:18:44,880 --> 00:18:48,480
see the methods we have the type of the

461
00:18:48,480 --> 00:18:50,250
type of request that can be a link

462
00:18:50,250 --> 00:18:52,590
if the cloud has found the classic link

463
00:18:52,590 --> 00:18:55,470
a forum is found a forum xhr if it has

464
00:18:55,470 --> 00:18:57,870
found a call and  jay sean pe web

465
00:18:57,870 --> 00:19:00,330
socket etc. from here they

466
00:19:00,330 --> 00:19:02,070
can clearly be launched directly, which

467
00:19:02,070 --> 00:19:03,750
even the one for which it can be given

468
00:19:03,750 --> 00:19:06,750
weighs also by customizing the type of

469
00:19:06,750 --> 00:19:11,580
results returned a quick overview

470
00:19:11,580 --> 00:19:15,030
of the command line arguments in which

471
00:19:15,030 --> 00:19:16,470
we can safely say that the

472
00:19:16,470 --> 00:19:18,840
only two interesting  they are the way and the

473
00:19:18,840 --> 00:19:20,460
purpose the others are all things that more

474
00:19:20,460 --> 00:19:22,050
or less all the other scanners

475
00:19:22,050 --> 00:19:25,980
then in fashion and the purpose what are they

476
00:19:25,980 --> 00:19:28,050
is possible in htk specifies the three

477
00:19:28,050 --> 00:19:30,990
clouding methods the passive one that

478
00:19:30,990 --> 00:19:33,030
simply loads the page does not do

479
00:19:33,030 --> 00:19:35,250
any kind of  interaction here acts in

480
00:19:35,250 --> 00:19:36,870
a passive way what manages to

481
00:19:36,870 --> 00:19:38,490
sample simply by loading the

482
00:19:38,490 --> 00:19:41,520
page saves it and finally the method a

483
00:19:41,520 --> 00:19:43,620
few co  me the passive clearly loads

484
00:19:43,620 --> 00:19:45,600
the page but it will go to others that also

485
00:19:45,600 --> 00:19:47,580
rare all the events so he will click

486
00:19:47,580 --> 00:19:49,410
on the buttons click on the links he wants

487
00:19:49,410 --> 00:19:50,760
to score the page will try to

488
00:19:50,760 --> 00:19:53,130
interact with the page as a user would do

489
00:19:53,130 --> 00:19:56,340
the default method is the

490
00:19:56,340 --> 00:19:58,559
fat one that is  behaves exactly

491
00:19:58,559 --> 00:20:00,210
like the active, that is, it loads the

492
00:20:00,210 --> 00:20:03,059
trigger page to the members of the events but it

493
00:20:03,059 --> 00:20:05,309
will also fill in all the

494
00:20:05,309 --> 00:20:07,890
fields of the forums because it is very

495
00:20:07,890 --> 00:20:09,510
likely that if there is a forum with a

496
00:20:09,510 --> 00:20:11,400
send button until you fill it in the

497
00:20:11,400 --> 00:20:12,929
forum even if that form  jax

498
00:20:12,929 --> 00:20:14,850
will never start so it is convenient to fill in

499
00:20:14,850 --> 00:20:18,120
all the inputs the clown also

500
00:20:18,120 --> 00:20:20,970
will also be the forum clown so it

501
00:20:20,970 --> 00:20:22,950
will follow the pages that have been

502
00:20:22,950 --> 00:20:25,440
loaded via place

503
00:20:25,440 --> 00:20:28,559
the purpose we have three purposes with which it

504
00:20:28,559 --> 00:20:30,540
is possible to run ht cup that the

505
00:20:30,540 --> 00:20:33,720
default is the  domain that is, they will be

506
00:20:33,720 --> 00:20:35,640
considered in the drain for all the

507
00:20:35,640 --> 00:20:37,559
requests that will have the same domain as

508
00:20:37,559 --> 00:20:40,920
the initial non-director purpose request

509
00:20:40,920 --> 00:20:43,260
y which limits the clouding to the

510
00:20:43,260 --> 00:20:45,559
domain and only to the director in those

511
00:20:45,559 --> 00:20:48,540
from which one started for example if one

512
00:20:48,540 --> 00:20:50,309
has to heat a slash then something

513
00:20:50,309 --> 00:20:51,149
will pass them

514
00:20:51,149 --> 00:20:52,950
the purpose directory such as url what is

515
00:20:52,950 --> 00:20:56,219
slay admin and senses a teacup will

516
00:20:56,219 --> 00:20:57,649
never go back to level  before admin

517
00:20:57,649 --> 00:21:00,869
while the last one who screams simply

518
00:21:00,869 --> 00:21:03,179
practically does not do the clouding analyzes

519
00:21:03,179 --> 00:21:04,830
that single page and I return

520
00:21:04,830 --> 00:21:06,029
to everything he has found in a

521
00:21:06,029 --> 00:21:08,450
single page

522
00:21:09,379 --> 00:21:12,749
then how do they work how they write

523
00:21:12,749 --> 00:21:14,519
more than anything else the scanners the module the

524
00:21:14,519 --> 00:21:16,049
forms of the waste forms  of the scanners

525
00:21:16,049 --> 00:21:19,289
then each module is a python class

526
00:21:19,289 --> 00:21:21,029
that goes right make the class ben

527
00:21:21,029 --> 00:21:24,359
scanner which is a class of ht cup and

528
00:21:24,359 --> 00:21:26,009
must lobby raid these four

529
00:21:26,009 --> 00:21:29,759
methods which are limits i get setting which

530
00:21:29,759 --> 00:21:32,820
koman and scanner execute and now let's see for a

531
00:21:32,820 --> 00:21:34,559
moment  graphically how

532
00:21:34,559 --> 00:21:37,739
these two entities behave then it is a part

533
00:21:37,739 --> 00:21:40,219
we have well scanned that the parent class

534
00:21:40,219 --> 00:21:43,019
here we have our module that the

535
00:21:43,019 --> 00:21:44,669
child class qu  she who lays ben

536
00:21:44,669 --> 00:21:49,529
scanner initially what will happen

537
00:21:49,529 --> 00:21:51,299
our ben scanner will fish the

538
00:21:51,299 --> 00:21:52,919
requests from the sequel light database that

539
00:21:52,919 --> 00:21:56,450
has been populated by our claure

540
00:21:56,450 --> 00:22:00,119
will call two methods in the module which are

541
00:22:00,119 --> 00:22:01,499
gas settings and in it

542
00:22:01,499 --> 00:22:04,559
then i neet is a kind of constructor

543
00:22:04,559 --> 00:22:06,119
of the module c  'is inside tin.it my

544
00:22:06,119 --> 00:22:08,729
module I can put some code to

545
00:22:08,729 --> 00:22:12,570
initialize while drawers is the

546
00:22:12,570 --> 00:22:15,149
method that the son uses to tell

547
00:22:15,149 --> 00:22:17,489
the father what type of scanner and how many 3 he

548
00:22:17,489 --> 00:22:19,320
will have to use which is for example the

549
00:22:19,320 --> 00:22:20,580
tamar time of each  single request

550
00:22:20,580 --> 00:22:22,679
then a series of settings then

551
00:22:22,679 --> 00:22:24,960
fishes in the parent class calls

552
00:22:24,960 --> 00:22:26,190
methods on the daughter class which

553
00:22:26,190 --> 00:22:28,440
returns with the first step in settings

554
00:22:28,440 --> 00:22:29,580
so now the airport is

555
00:22:29,580 --> 00:22:32,599
initialized and knows what it must do

556
00:22:32,599 --> 00:22:35,879
second step what the scanner must do

557
00:22:35,879 --> 00:22:38,399
benz kahn must pass  to the module the

558
00:22:38,399 --> 00:22:41,239
various requests that will be scanned

559
00:22:41,239 --> 00:22:43,109
clearly we take into account that our

560
00:22:43,109 --> 00:22:45,359
module goes to execute the external commands

561
00:22:45,359 --> 00:22:48,659
therefore the one we are talking about  the is to generate

562
00:22:48,659 --> 00:22:50,429
the command for example a acne and blah

563
00:22:50,429 --> 00:22:50,789
blah blah

564
00:22:50,789 --> 00:22:52,349
and the final scream of my request

565
00:22:52,349 --> 00:22:55,440
then ben scanner calls get koman on the

566
00:22:55,440 --> 00:22:58,499
son passing them this the son

567
00:22:58,499 --> 00:23:00,599
takes the run up generates all

568
00:23:00,599 --> 00:23:01,950
the options of the command we are going to

569
00:23:01,950 --> 00:23:03,899
do it  scan of that of this and

570
00:23:03,899 --> 00:23:04,590
returns

571
00:23:04,590 --> 00:23:08,340
to the father the command to be executed the father

572
00:23:08,340 --> 00:23:10,230
will execute the command and once

573
00:23:10,230 --> 00:23:11,940
returned the command will pass

574
00:23:11,940 --> 00:23:14,970
the command output to the module calling

575
00:23:14,970 --> 00:23:16,409
that scanner at risk because it is

576
00:23:16,409 --> 00:23:17,760
the last of the four meters that

577
00:23:17,760 --> 00:23:20,159
must be done  the first will come at this

578
00:23:20,159 --> 00:23:24,049
point the module parcelizes the output of

579
00:23:24,049 --> 00:23:26,370
the command to predict if life is

580
00:23:26,370 --> 00:23:29,549
good or with its own logic

581
00:23:29,549 --> 00:23:30,990
and at this point there is also the ability it

582
00:23:30,990 --> 00:23:33,330
will be himself to save them

583
00:23:33,330 --> 00:23:36,240
in the weight and clearly the ways

584
00:23:36,240 --> 00:23:38,159
the architecture  of the modules is always

585
00:23:38,159 --> 00:23:39,659
multithreaded so it will show a single

586
00:23:39,659 --> 00:23:41,429
module when it will be launched by

587
00:23:41,429 --> 00:23:42,720
snow fishing launched in a multi

588
00:23:42,720 --> 00:23:44,159
threaded environment then the requests para

589
00:23:44,159 --> 00:23:49,049
realize some code from out here

590
00:23:49,049 --> 00:23:50,659
yes  understand a little better the concept

591
00:23:50,659 --> 00:23:53,279
of how this thing

592
00:23:53,279 --> 00:23:56,159
about scanners is structured then in this example

593
00:23:56,159 --> 00:23:59,220
we do the curl class what it means

594
00:23:59,220 --> 00:24:01,169
simply our scanner has to

595
00:24:01,169 --> 00:24:03,000
check if there is a protection

596
00:24:03,000 --> 00:24:05,250
of the xs sm leader so just

597
00:24:05,250 --> 00:24:06,570
simply how you would

598
00:24:06,570 --> 00:24:09,360
manually predict if  a server has or does

599
00:24:09,360 --> 00:24:11,309
not have those from milan you need to curle less and

600
00:24:11,309 --> 00:24:13,409
you go to lourdes you see leaders and

601
00:24:13,409 --> 00:24:15,090
see if there are those of the very

602
00:24:15,090 --> 00:24:18,890
simple to do if the thing with htk

603
00:24:18,890 --> 00:24:21,500
you have to write this module then

604
00:24:21,500 --> 00:24:25,919
limits does nothing pass I see which ones for

605
00:24:25,919 --> 00:24:27,960
example can  have passed harvey which

606
00:24:27,960 --> 00:24:29,640
can be additional

607
00:24:29,640 --> 00:24:31,740
command line options that are passed from the

608
00:24:31,740 --> 00:24:35,580
user to the module to the single module and here

609
00:24:35,580 --> 00:24:36,870
I can clearly customize the

610
00:24:36,870 --> 00:24:39,480
behavior of the module kids

611
00:24:39,480 --> 00:24:43,500
returns an object a dictionary in

612
00:24:43,500 --> 00:24:45,270
which I will tell him which requests

613
00:24:45,270 --> 00:24:47,010
I have to go to make in this  case

614
00:24:47,010 --> 00:24:48,929
only link or the screams coming from a

615
00:24:48,929 --> 00:24:51,299
possible direct with how many numbers with

616
00:24:51,299 --> 00:24:53,700
qu  anti thread I have to parallelize my

617
00:24:53,700 --> 00:24:55,289
search my situation

618
00:24:55,289 --> 00:24:57,539
and how long to wait at most

619
00:24:57,539 --> 00:25:00,510
because in this case the return command

620
00:25:00,510 --> 00:25:03,899
after 20 seconds is dropped and what is

621
00:25:03,899 --> 00:25:05,370
the scanner executable in this

622
00:25:05,370 --> 00:25:08,460
case we simply pass them curl now

623
00:25:08,460 --> 00:25:10,020
to our initialized scanner knows

624
00:25:10,020 --> 00:25:11,669
what  he has to warm up how long he has to

625
00:25:11,669 --> 00:25:14,730
wait and the command to use then

626
00:25:14,730 --> 00:25:17,320
at the first request he will try

627
00:25:17,320 --> 00:25:20,159
from the parent class he will call cat cmd

628
00:25:20,159 --> 00:25:22,899
passing them lari this is he will

629
00:25:22,899 --> 00:25:25,539
simply return less ie of this point

630
00:25:25,539 --> 00:25:28,330
url the return to the command the parent class

631
00:25:28,330 --> 00:25:31,570
executes it once returned it will execute

632
00:25:31,570 --> 00:25:34,210
sparse  the cures by passing him

633
00:25:34,210 --> 00:25:37,840
the output of the command program and

634
00:25:37,840 --> 00:25:39,730
he does it other than doing a search for a

635
00:25:39,730 --> 00:25:41,529
regular expression he put this

636
00:25:41,529 --> 00:25:44,830
if not half this xss protection

637
00:25:44,830 --> 00:25:47,620
our out to point I will call follow the

638
00:25:47,620 --> 00:25:50,200
ability and I will say that the xss protector is missing

639
00:25:50,200 --> 00:25:53,320
in the leaders a little

640
00:25:53,320 --> 00:25:56,490
parenthesis on this tmp dir

641
00:25:56,490 --> 00:26:00,279
then this is a temporary directory

642
00:26:00,279 --> 00:26:02,440
that is ge  nerated for every single

643
00:26:02,440 --> 00:26:04,750
thread this because because it is quite

644
00:26:04,750 --> 00:26:08,500
common for a scanner such as acne

645
00:26:08,500 --> 00:26:11,350
not to go back to me any

646
00:26:11,350 --> 00:26:13,299
vulnerabilities on the standard output apples

647
00:26:13,299 --> 00:26:14,830
will probably save on a report it

648
00:26:14,830 --> 00:26:16,480
generates a report for me that I need

649
00:26:16,480 --> 00:26:18,789
for every command that that  launched the

650
00:26:18,789 --> 00:26:21,220
need for one a place where my

651
00:26:21,220 --> 00:26:22,870
aracri can go there to save his

652
00:26:22,870 --> 00:26:25,149
report in this case precisely through

653
00:26:25,149 --> 00:26:28,629
both the md boys and the scale of s

654
00:26:28,629 --> 00:26:30,700
and then closes before and after the execution

655
00:26:30,700 --> 00:26:32,980
of the program each creed will have its

656
00:26:32,980 --> 00:26:34,149
temporal directory in which

657
00:26:34,149 --> 00:26:35,019


658
00:26:35,019 --> 00:26:37,059
for example, the scanner reports can be saved, a

659
00:26:37,059 --> 00:26:39,159
possible cookie file to be

660
00:26:39,159 --> 00:26:42,120
scanned, etc., etc.

661
00:26:42,720 --> 00:26:46,600


662
00:26:46,600 --> 00:26:49,179


663
00:26:49,179 --> 00:26:51,700


664
00:26:51,700 --> 00:26:53,379


665
00:26:53,379 --> 00:26:55,299
to another to avoid making

666
00:26:55,299 --> 00:26:57,159
two scans of the same thing

667
00:26:57,159 --> 00:26:59,529
practically for example these 21 here

668
00:26:59,529 --> 00:27:01,990
you see seem different but from the point

669
00:27:01,990 --> 00:27:03,519
of view  sta di mosca they are the

670
00:27:03,519 --> 00:27:06,429
same thing for which they have the same

671
00:27:06,429 --> 00:27:08,799
method they have the same url load the

672
00:27:08,799 --> 00:27:11,139
same page which is an index they will have

673
00:27:11,139 --> 00:27:13,809
part 1 and part ii part 1 and part ii also

674
00:27:13,809 --> 00:27:15,940
are in different order or if their

675
00:27:15,940 --> 00:27:18,250
value is different  to an application a

676
00:27:18,250 --> 00:27:19,509
scanner that has to

677
00:27:19,509 --> 00:27:21,100
fuzz that 1 does not change absolutely anything

678
00:27:21,100 --> 00:27:23,740
so a teacup in fact scanning must

679
00:27:23,740 --> 00:27:24,700
be able to tell this

680
00:27:24,700 --> 00:27:25,629
request

681
00:27:25,629 --> 00:27:27,970
or rather when it tries to scale these

682
00:27:27,970 --> 00:27:29,110
requests it has to tell me look at this

683
00:27:29,110 --> 00:27:30,940
request it is already slaughtered do not go

684
00:27:30,940 --> 00:27:33,610
beyond this is an example quite

685
00:27:33,610 --> 00:27:35,080
always if we have a scream with

686
00:27:35,080 --> 00:27:37,420
parameters a much more complex example is

687
00:27:37,420 --> 00:27:40,390
this in which we have instead of

688
00:27:40,390 --> 00:27:43,330
a gap of nothing and parameters on the

689
00:27:43,330 --> 00:27:45,580
url we have our application that

690
00:27:45,580 --> 00:27:49,600
makes a post of a very complicated xml or

691
00:27:49,600 --> 00:27:51,160
you can see that in reality these two things

692
00:27:51,160 --> 00:27:54,490
are the same what I changed the order but

693
00:27:54,490 --> 00:27:57,880
we always have north with n elements and

694
00:27:57,880 --> 00:27:59,860
not with l elements only that after elements

695
00:27:59,860 --> 00:28:03,970
here are changes  ate of their own but

696
00:28:03,970 --> 00:28:06,670
the structure of these xml has not changed

697
00:28:06,670 --> 00:28:08,260
so even in this case htk must

698
00:28:08,260 --> 00:28:10,030
be able to say once you

699
00:28:10,030 --> 00:28:11,860
have slaughtered this is the life of a scanner and

700
00:28:11,860 --> 00:28:13,330
this is because the title was the same things

701
00:28:13,330 --> 00:28:15,760
because the payload is practically indeed it

702
00:28:15,760 --> 00:28:16,960
is  same from the point of view of the

703
00:28:16,960 --> 00:28:19,810
scanner how do you do this

704
00:28:19,810 --> 00:28:22,240
from the point of view of the

705
00:28:22,240 --> 00:28:25,810
modul scanner simply by inserting

706
00:28:25,810 --> 00:28:27,580
this code here inside cats

707
00:28:27,580 --> 00:28:30,760
cmd because the father or well scanner

708
00:28:30,760 --> 00:28:33,670
before starting the

709
00:28:33,670 --> 00:28:35,710
sample scan all of them  requests will

710
00:28:35,710 --> 00:28:37,060
catalog all those that are

711
00:28:37,060 --> 00:28:38,620
duplicated in such a way that when the

712
00:28:38,620 --> 00:28:40,270
son asks dad question that he

713
00:28:40,270 --> 00:28:42,520
pleaded with poliziano and consequently he

714
00:28:42,520 --> 00:28:46,180
can return maybe if the son if

715
00:28:46,180 --> 00:28:48,160
so boys md the return to maybe the

716
00:28:48,160 --> 00:28:49,930
father will not execute that command because he

717
00:28:49,930 --> 00:28:52,210
will understand that the  the son wants to

718
00:28:52,210 --> 00:28:54,600
ignore

719
00:28:54,690 --> 00:28:59,770
one last and after this he concludes a

720
00:28:59,770 --> 00:29:02,290
small note on this feature which is not

721
00:29:02,290 --> 00:29:03,670
yet public but which I am currently  nte

722
00:29:03,670 --> 00:29:06,190
implementing that it is the possibility of

723
00:29:06,190 --> 00:29:10,120
encrypting the part that does the analysis of the

724
00:29:10,120 --> 00:29:11,650
page what was said before that does

725
00:29:11,650 --> 00:29:13,320
the recursion analyzes the various things

726
00:29:13,320 --> 00:29:17,080
because for example we could find ourselves

727
00:29:17,080 --> 00:29:19,450
in the condition in which our web

728
00:29:19,450 --> 00:29:21,100
application in the phase of clown in

729
00:29:21,100 --> 00:29:22,510
then trigger phase of events

730
00:29:22,510 --> 00:29:25,150
analyze things ask me for a prompt with

731
00:29:25,150 --> 00:29:27,040
your name and surname written about

732
00:29:27,040 --> 00:29:29,020
centuries responds a string vote he

733
00:29:29,020 --> 00:29:30,850
freezes and the application can no longer

734
00:29:30,850 --> 00:29:33,370
be implemented as can be done in

735
00:29:33,370 --> 00:29:35,410
this case in in it

736
00:29:35,410 --> 00:29:37,180
then  these here are a series of looks

737
00:29:37,180 --> 00:29:38,300
a series

738
00:29:38,300 --> 00:29:40,750
of callbacks that are executed

739
00:29:40,750 --> 00:29:43,340
by the analysis part at certain

740
00:29:43,340 --> 00:29:47,090
times of the path to unit will be

741
00:29:47,090 --> 00:29:50,480
initialized before starting

742
00:29:50,480 --> 00:29:52,550
indeed it is used when

743
00:29:52,550 --> 00:29:55,970
the page is loaded so it is the

744
00:29:55,970 --> 00:29:57,530
best place to  for example to be able to

745
00:29:57,530 --> 00:29:59,510
do lover raid of methods the tv that

746
00:29:59,510 --> 00:30:00,830
are inside windows in this case

747
00:30:00,830 --> 00:30:02,660
let's do it you will come the diploma which is

748
00:30:02,660 --> 00:30:04,040
what in that case I asked for  or

749
00:30:04,040 --> 00:30:06,050
the name and surname and we say to

750
00:30:06,050 --> 00:30:09,710
always return to so when our klauser

751
00:30:09,710 --> 00:30:11,840
trigger at that damn prompt that

752
00:30:11,840 --> 00:30:13,610
previously stopped because no one was

753
00:30:13,610 --> 00:30:14,660
there to put the name and surname

754
00:30:14,660 --> 00:30:16,730
in this case it will return to and

755
00:30:16,730 --> 00:30:17,960
the application will continue to work

756
00:30:17,960 --> 00:30:19,850
perfectly because  he thought that he

757
00:30:19,850 --> 00:30:23,030
called me depending on what you can do

758
00:30:23,030 --> 00:30:25,010
inside the index is to

759
00:30:25,010 --> 00:30:27,890
initialize some variables that

760
00:30:27,890 --> 00:30:29,450
can be there that will be common

761
00:30:29,450 --> 00:30:32,440
within all the calls

762
00:30:32,440 --> 00:30:34,730
then no before start is

763
00:30:34,730 --> 00:30:37,820
triggered when before the start the  analysis at

764
00:30:37,820 --> 00:30:40,280
a before trigger event is 3 grateful

765
00:30:40,280 --> 00:30:42,740
every time there is before each attempt

766
00:30:42,740 --> 00:30:44,570
by the sum that does the analysis

767
00:30:44,570 --> 00:30:46,010
of the trigger page areas an event

768
00:30:46,010 --> 00:30:49,250
for example before the example of before

769
00:30:49,250 --> 00:30:50,930
that clicked on the buttons are

770
00:30:50,930 --> 00:30:53,350
we had  told a before trigger event

771
00:30:53,350 --> 00:30:56,000
retour was always it would not give

772
00:30:56,000 --> 00:30:58,370
anything because this event is

773
00:30:58,370 --> 00:31:00,230
called before the parser

774
00:31:00,230 --> 00:31:02,000
starts doing the trigun part in

775
00:31:02,000 --> 00:31:05,240
deg  The events in this example I am

776
00:31:05,240 --> 00:31:06,530
passed the element and the event

777
00:31:06,530 --> 00:31:09,470
obviously so it is telling me that I am

778
00:31:09,470 --> 00:31:11,030
trying to pull this event on

779
00:31:11,030 --> 00:31:12,170
this element

780
00:31:12,170 --> 00:31:13,550
I can say that if this

781
00:31:13,550 --> 00:31:16,160
element is applied it has the class chillon it returns me

782
00:31:16,160 --> 00:31:18,350
strength and not recreate those that

783
00:31:18,350 --> 00:31:18,680
event

784
00:31:18,680 --> 00:31:21,800
a practical example could be I am

785
00:31:21,800 --> 00:31:23,450
analyzing the page a pop up opens to me

786
00:31:23,450 --> 00:31:25,760
the first rate and close the second

787
00:31:25,760 --> 00:31:28,730
button is submit if the clown by chance

788
00:31:28,730 --> 00:31:30,680
clicks before it closes the pop up

789
00:31:30,680 --> 00:31:32,660
closes and then it will skip the analysis of

790
00:31:32,660 --> 00:31:34,430
that of that pap

791
00:31:34,430 --> 00:31:36,110
if instead I tell you that if for example the

792
00:31:36,110 --> 00:31:37,730
text of that element that must find

793
00:31:37,730 --> 00:31:40,700
the event is khan circle what is the

794
00:31:40,700 --> 00:31:44,600
return maybe and misano the popup except the

795
00:31:44,600 --> 00:31:45,980
possibility of analyzing that

796
00:31:45,980 --> 00:31:49,580
pop up with trigger event is revealed

797
00:31:49,580 --> 00:31:51,539
after the execution of an

798
00:31:51,539 --> 00:31:54,929
ungrateful hr event before each ajax call

799
00:31:54,929 --> 00:31:57,419
so even here if I return maybe my

800
00:31:57,419 --> 00:31:58,979
application will not execute that

801
00:31:58,979 --> 00:32:03,749
call on all xhr completed is

802
00:32:03,749 --> 00:32:05,340
integrated with all the keys  mate and

803
00:32:05,340 --> 00:32:08,159
jackets have been completed and to a

804
00:32:08,159 --> 00:32:09,869
down modified that precisely the last step

805
00:32:09,869 --> 00:32:14,549
is private when the dom is modified

806
00:32:14,549 --> 00:32:14,940


807
00:32:14,940 --> 00:32:17,609
following an exaction call

808
00:32:17,609 --> 00:32:20,789
the root elements and all

809
00:32:20,789 --> 00:32:22,739
the elements are passed the difference these

810
00:32:22,739 --> 00:32:25,229
two what is then when you modify  the

811
00:32:25,229 --> 00:32:29,340
dom elements are added from the

812
00:32:29,340 --> 00:32:30,269
point of view of those who go to do

813
00:32:30,269 --> 00:32:32,399
the analysis it is not interesting to

814
00:32:32,399 --> 00:32:34,499
actually analyze the elements added but

815
00:32:34,499 --> 00:32:36,629
what is their parent node what is

816
00:32:36,629 --> 00:32:39,359
the element that contains them then all

817
00:32:39,359 --> 00:32:41,460
elements will contain an array of all of

818
00:32:41,460 --> 00:32:42,539
them  the elements that have been

819
00:32:42,539 --> 00:32:44,609
found that have been added at that

820
00:32:44,609 --> 00:32:46,769
time to the page and the root element

821
00:32:46,769 --> 00:32:49,349
are the routh elements that contain

822
00:32:49,349 --> 00:32:51,389
those elements presents possible that

823
00:32:51,389 --> 00:32:52,830
half of these elements have been

824
00:32:52,830 --> 00:32:54,539
placed in a meta of the others the

825
00:32:54,539 --> 00:32:55,320
minds of a div

826
00:32:55,320 --> 00:32:58,649
so if  those are eight here this

827
00:32:58,649 --> 00:33:00,299
with 38 element this that will count only

828
00:33:00,299 --> 00:33:06,570
two per kate element are two to all of

829
00:33:06,570 --> 00:33:10,109
these this c  olpa is that

830
00:33:10,109 --> 00:33:11,759
this variable is always passed that ui

831
00:33:11,759 --> 00:33:16,190
user interface which serves precisely to

832
00:33:16,190 --> 00:33:18,629
be able to perform certain actions such

833
00:33:18,629 --> 00:33:21,210
as the ability to render

834
00:33:21,210 --> 00:33:22,769
the page then to save a

835
00:33:22,769 --> 00:33:26,909
screenshot of the peace at that

836
00:33:26,909 --> 00:33:28,499
moment in this case if I load

837
00:33:28,499 --> 00:33:30,509
this script in the phase of  clown insua cut

838
00:33:30,509 --> 00:33:31,409
and cap

839
00:33:31,409 --> 00:33:33,659
every time the dom is modified

840
00:33:33,659 --> 00:33:35,190
I hope a script of that page

841
00:33:35,190 --> 00:33:37,349
saved on my file system the example

842
00:33:37,349 --> 00:33:40,309
before we saw the appeals page must be

843
00:33:40,309 --> 00:33:42,419
relaunched this script will have had the

844
00:33:42,419 --> 00:33:44,609
same result so the screenshot one

845
00:33:44,609 --> 00:33:46,979
for each modification  del dom then state

846
00:33:46,979 --> 00:33:53,369
a stop lasts if among etcetera other things

847
00:33:53,369 --> 00:33:56,720
the exact on and is called when

848
00:33:56,720 --> 00:33:59,549
the analysis ends what can be useful

849
00:33:59,549 --> 00:34:00,779
within this method here for

850
00:34:00,779 --> 00:34:02,669
example put a slip in such a way

851
00:34:02,669 --> 00:34:04,289
that if by chance I have to wait for

852
00:34:04,289 --> 00:34:05,159
some operation

853
00:34:05,159 --> 00:34:06,539
is completed I can put the slip there

854
00:34:06,539 --> 00:34:10,020
and wait until it does not exit

855
00:34:10,020 --> 00:34:10,799
so that time out is over

856
00:34:10,799 --> 00:34:16,788
and with this I am finished  or have any

857
00:34:23,809 --> 00:34:29,389
questions or and go

858
00:34:29,960 --> 00:34:35,000
no questions then thanks

