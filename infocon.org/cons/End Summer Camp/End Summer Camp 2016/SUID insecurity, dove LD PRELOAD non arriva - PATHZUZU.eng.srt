1
00:00:00,290 --> 00:00:08,389
ok ok sorry then roberto b from

2
00:00:08,389 --> 00:00:11,490
cybersecurity junkie linux

3
00:00:11,490 --> 00:00:14,280
system administration is a lot of

4
00:00:14,280 --> 00:00:17,070
other things he wants to dominate the beige used board

5
00:00:17,070 --> 00:00:17,550


6
00:00:17,550 --> 00:00:19,800
then maybe you explain to us why ben rhodes

7
00:00:19,800 --> 00:00:22,470
and for himself h

8
00:00:22,470 --> 00:00:30,380
he likes the ump and does ho sensi security

9
00:00:30,380 --> 00:00:35,579
penetration test that is  today we have

10
00:00:35,579 --> 00:00:39,780
bolchi here it is not you you did not write

11
00:00:39,780 --> 00:00:50,129
this morning then I would say give the floor to

12
00:00:50,129 --> 00:00:52,530
this person who is not described by

13
00:00:52,530 --> 00:00:55,949
this bio how it will be a job

14
00:00:55,949 --> 00:01:00,059
we have a man speaker beautiful the

15
00:01:00,059 --> 00:01:02,460
direct the initial part was also

16
00:01:02,460 --> 00:01:04,589
right after I do not know what

17
00:01:04,589 --> 00:01:08,189
the rest came out but no matter

18
00:01:08,189 --> 00:01:11,449
a round of applause to roberto nuti

19
00:01:13,280 --> 00:01:17,880
thanks to all nothing i am roberto bindi

20
00:01:17,880 --> 00:01:20,580
maybe you know me and shotokan from some

21
00:01:20,580 --> 00:01:26,280
online forum uol wolf broker a bit

22
00:01:26,280 --> 00:01:31,200
everywhere however starting more or

23
00:01:31,200 --> 00:01:33,439
less year ago i started studying

24
00:01:33,439 --> 00:01:37,070
seriously vulnerabilities of type

25
00:01:37,070 --> 00:01:40,560
substitution of environment variables

26
00:01:40,560 --> 00:01:45,259
on linux subhash in particular we say

27
00:01:45,259 --> 00:01:48,750
for the whole environment

28
00:01:48,750 --> 00:01:52,659
concerning linux both x86 and rm in

29
00:01:52,659 --> 00:01:54,729
general  and

30
00:01:54,729 --> 00:01:57,700
then the environment and year variables

31
00:01:57,700 --> 00:02:01,719
are a bit generic let's say for

32
00:02:01,719 --> 00:02:05,890
all distributions what we can get

33
00:02:05,890 --> 00:02:08,348
from these variables we can

34
00:02:08,348 --> 00:02:11,379
get information about the user on the

35
00:02:11,379 --> 00:02:16,810
recurring directory on the

36
00:02:16,810 --> 00:02:19,690
user's iom director are all information

37
00:02:19,690 --> 00:02:22,480
that at first glance  they tell us

38
00:02:22,480 --> 00:02:26,560
absolutely nothing new if we are a

39
00:02:26,560 --> 00:02:29,890
privileged user we do not have

40
00:02:29,890 --> 00:02:32,319
environment variables that amaze us

41
00:02:32,319 --> 00:02:35,230
that they can do

42
00:02:35,230 --> 00:02:37,030
stratospheric things simply they are

43
00:02:37,030 --> 00:02:40,750
information given to the user what

44
00:02:40,750 --> 00:02:43,799
happens however if we go to modify

45
00:02:43,799 --> 00:02:48,180
these environment variables some

46
00:02:48,180 --> 00:02:52,030
we say  are are and remain

47
00:02:52,030 --> 00:02:54,670
information we modify nothing happens

48
00:02:54,670 --> 00:02:56,970
the system

49
00:02:56,970 --> 00:02:59,920
others instead may have

50
00:02:59,920 --> 00:03:02,730
decidedly dangerous aspects and behaviors

51
00:03:02,730 --> 00:03:06,190
in particular we want to

52
00:03:06,190 --> 00:03:10,000
talk today about the variable because

53
00:03:10,000 --> 00:03:13,440
what is the variable for the variable for

54
00:03:13,440 --> 00:03:17,799
contains within it all the lands

55
00:03:17,799 --> 00:03:21,430
hector i di  system where linux will go

56
00:03:21,430 --> 00:03:26,319
to catch the programs  the binaries to

57
00:03:26,319 --> 00:03:27,760
execute without entering the

58
00:03:27,760 --> 00:03:30,989
complete path so if we go to look for

59
00:03:30,989 --> 00:03:35,739
if we execute the sms it is not

60
00:03:35,739 --> 00:03:41,829
in the mind and it is not even intrinsic

61
00:03:41,829 --> 00:03:42,730
in beige

62
00:03:42,730 --> 00:03:49,139
as the command can be the cms is a

63
00:03:49,139 --> 00:03:54,690
command present and loyalty in been then

64
00:03:54,690 --> 00:03:59,980
since  here nothing new if we go to

65
00:03:59,980 --> 00:04:01,870
see above in beige

66
00:04:01,870 --> 00:04:04,900
in pes bean is present in our

67
00:04:04,900 --> 00:04:06,269
skin

68
00:04:06,269 --> 00:04:09,730
ok so what was what

69
00:04:09,730 --> 00:04:11,110
happened when we went to

70
00:04:11,110 --> 00:04:13,360
execute ls

71
00:04:13,360 --> 00:04:15,489
simply all variable was passed

72
00:04:15,489 --> 00:04:19,000
starting from local user spin

73
00:04:19,000 --> 00:04:21,370
in  continue until he found

74
00:04:21,370 --> 00:04:24,669
the binary ls rubin was the first

75
00:04:24,669 --> 00:04:26,350
folder where he could find the

76
00:04:26,350 --> 00:04:29,560
binary ls so if we

77
00:04:29,560 --> 00:04:32,020
modify the pec before calling the

78
00:04:32,020 --> 00:04:34,800
s it may be that we do not find it so

79
00:04:34,800 --> 00:04:40,870
we put them as a cue and execute the sms

80
00:04:40,870 --> 00:04:43,360
not  exists

81
00:04:43,360 --> 00:04:48,220
ok this oh well we don't give a damn

82
00:04:48,220 --> 00:04:50,260
we could run it quietly from

83
00:04:50,260 --> 00:04:52,240
the current folder by pressing sly

84
00:04:52,240 --> 00:04:57,070
cls if it existed but in case of

85
00:04:57,070 --> 00:05:00,060
already existing binaries p  we can

86
00:05:00,060 --> 00:05:03,610
modify them I think before running them

87
00:05:03,610 --> 00:05:04,979
let's make a fairly

88
00:05:04,979 --> 00:05:11,620
simple example ok within user local

89
00:05:11,620 --> 00:05:15,639
been or two binaries with you tuili aim ruth

90
00:05:15,639 --> 00:05:19,380
ruth firewall are binaries quite

91
00:05:19,380 --> 00:05:22,150
simple in reality it is only binaries that

92
00:05:22,150 --> 00:05:25,690
can be found in

93
00:05:25,690 --> 00:05:29,410
system environments of  every day in the data

94
00:05:29,410 --> 00:05:32,650
to en route point si pp a test but

95
00:05:32,650 --> 00:05:39,430
ruth firewall is already more truthful this

96
00:05:39,430 --> 00:05:44,139
is what ruth firewall does and seeing is a

97
00:05:44,139 --> 00:05:47,500
quite varied set of commands

98
00:05:47,500 --> 00:05:49,500
because I wanted to use all the

99
00:05:49,500 --> 00:05:52,690
more or less resistant system calls as

100
00:05:52,690 --> 00:05:59,979
system as I thought of you only system and

101
00:05:59,979 --> 00:06:00,729
pio x

102
00:06:00,729 --> 00:06:02,919
on the other side also used ex ex ex

103
00:06:02,919 --> 00:06:05,080
etc.

104
00:06:05,080 --> 00:06:06,699
this command there is this program

105
00:06:06,699 --> 00:06:08,289
what does

106
00:06:08,289 --> 00:06:11,710
video grit the why it writes the id of the

107
00:06:11,710 --> 00:06:14,220
current user

108
00:06:14,220 --> 00:06:17,790
writes the name of the current user yes

109
00:06:17,790 --> 00:06:23,880
elevates to ruth it is not you and of 0 it

110
00:06:23,880 --> 00:06:25,290
rewrites the user name again so we

111
00:06:25,290 --> 00:06:28,710
suspect that it writes root and after

112
00:06:28,710 --> 00:06:30,660
precisely it gives me the possibility to press

113
00:06:30,660 --> 00:06:35,370
a key to wait for you to list  All

114
00:06:35,370 --> 00:06:38,280
the rules ip tables I was like the magazines

115
00:06:38,280 --> 00:06:39,120
to all of them

116
00:06:39,120 --> 00:06:41,850
is a fairly standard thing because

117
00:06:41,850 --> 00:06:44,910
many systems engineers actually put a

118
00:06:44,910 --> 00:06:47,670
binary to see perhaps the ip

119
00:06:47,670 --> 00:06:50,520
banned from a server so that even a

120
00:06:50,520 --> 00:06:54,450
normal user not ruth can see

121
00:06:54,450 --> 00:06:57,420
the list of banned users

122
00:06:57,420 --> 00:07:00,210
ok so so far the program is ugly

123
00:07:00,210 --> 00:07:02,340
and definitely ugly but it does what it

124
00:07:02,340 --> 00:07:06,630
should do there is no

125
00:07:06,630 --> 00:07:09,510
user input apart from the get shark and ok

126
00:07:09,510 --> 00:07:11,250
nothing in particular does not go

127
00:07:11,250 --> 00:07:16,410
anywhere and the system seems closed to itself

128
00:07:16,410 --> 00:07:18,120
same the binary

129
00:07:18,120 --> 00:07:23,180
this is this should end let's say

130
00:07:23,180 --> 00:07:25,410
if we don't go to see also the binary

131
00:07:25,410 --> 00:07:30,510
aim ruth does more or less the same things

132
00:07:30,510 --> 00:07:32,430
let's say in the end write the faz

133
00:07:32,430 --> 00:07:36,630
write the user id write the

134
00:07:36,630 --> 00:07:40,560
user name and lush and launch  in through

135
00:07:40,560 --> 00:07:43,680
csec it launches the command i say new

136
00:07:43,680 --> 00:07:46,080
then it will show us again the id of the

137
00:07:46,080 --> 00:07:48,419
end user which will be in

138
00:07:48,419 --> 00:07:51,720
ruth with under user the current user

139
00:07:51,720 --> 00:07:52,490
etc.

140
00:07:52,490 --> 00:07:55,830
ok let's go and do a blank test

141
00:07:55,830 --> 00:08:00,300
let's say to the  ra we launch ea in brut and

142
00:08:00,300 --> 00:08:03,840
brut he writes me all the because as

143
00:08:03,840 --> 00:08:06,120
we have seen before it says that I am

144
00:08:06,120 --> 00:08:12,000
the shotokan user with us of mille ok the

145
00:08:12,000 --> 00:08:13,740
script is running as

146
00:08:13,740 --> 00:08:17,220
shotokan user at the moment of elevation lady

147
00:08:17,220 --> 00:08:19,620
suddenly becomes utd 0

148
00:08:19,620 --> 00:08:21,320
ruth because it is  what we expect

149
00:08:21,320 --> 00:08:24,860
nothing more nothing less

150
00:08:24,860 --> 00:08:27,080
ok so we can also go and

151
00:08:27,080 --> 00:08:28,009
see

152
00:08:28,009 --> 00:08:32,899
now the root firewall firewall does more

153
00:08:32,899 --> 00:08:34,429
or less the same thing as before so

154
00:08:34,429 --> 00:08:37,190
sprint and the paix sprint to him of the

155
00:08:37,190 --> 00:08:39,169
current user tells me you are

156
00:08:39,169 --> 00:08:41,419
coming is  running as shotokan it

157
00:08:41,419 --> 00:08:44,750
rises as root gives me the possibility and

158
00:08:44,750 --> 00:08:46,610
shows you that this uni bi tables which is

159
00:08:46,610 --> 00:08:47,450
empty

160
00:08:47,450 --> 00:08:50,600
ok ok

161
00:08:50,600 --> 00:08:56,149
from here I was able to write precisely this

162
00:08:56,149 --> 00:08:59,390
script which is called pasty which is

163
00:08:59,390 --> 00:09:01,399
a script that precisely tests

164
00:09:01,399 --> 00:09:04,490
vulnerability of type substitution of the

165
00:09:04,490 --> 00:09:08,860
pec  replacement of the pec which

166
00:09:08,860 --> 00:09:12,410
also works in the achieved binaries so if

167
00:09:12,410 --> 00:09:15,140
we are going to call empty then

168
00:09:15,140 --> 00:09:20,600
for cue ruth firewall for example

169
00:09:20,600 --> 00:09:22,730
gives me these errors here medicei d  the

170
00:09:22,730 --> 00:09:24,860
program not found I can't find it in the

171
00:09:24,860 --> 00:09:27,920
skin because the pec is precisely the mockery

172
00:09:27,920 --> 00:09:31,699
what I defined it says ok it is

173
00:09:31,699 --> 00:09:33,980
running with me I don't know who you are because

174
00:09:33,980 --> 00:09:37,339
it is not in the for yet I do not know who

175
00:09:37,339 --> 00:09:41,480
you are and we notice that the second is never and

176
00:09:41,480 --> 00:09:47,290
after the elevation so I could do the

177
00:09:47,290 --> 00:09:49,810
same thing for ip tables and more

178
00:09:49,810 --> 00:09:53,959
but let's see compact suv what

179
00:09:53,959 --> 00:09:58,010
happens if I launch for example ruth

180
00:09:58,010 --> 00:10:02,709
firewall empty

181
00:10:04,040 --> 00:10:09,709
ok what happened the pec has changed the

182
00:10:09,709 --> 00:10:11,199
person temporary folder

183
00:10:11,199 --> 00:10:14,690
we have here in the second line

184
00:10:14,690 --> 00:10:17,500
in fact he went on to talk

185
00:10:17,500 --> 00:10:21,769
describe the user with him to tell me

186
00:10:21,769 --> 00:10:23,750
that the user shotokan who got up and

187
00:10:23,750 --> 00:10:27,170
ruth and in fact tomorrow there is a

188
00:10:27,170 --> 00:10:29,600
rate premium foresee the rules and below

189
00:10:29,600 --> 00:10:32,660
in the log I see the commands executed by

190
00:10:32,660 --> 00:10:35,270
whom  which user and what commands did he

191
00:10:35,270 --> 00:10:37,300
execute then

192
00:10:37,300 --> 00:10:40,120
he managed to

193
00:10:40,120 --> 00:10:42,310
intercept all the calls and

194
00:10:42,310 --> 00:10:44,170
describe exactly what commands

195
00:10:44,170 --> 00:10:46,589
were executed

196
00:10:46,990 --> 00:10:50,350
ok so we managed to

197
00:10:50,350 --> 00:10:52,510
intercept these calls andi  I love to

198
00:10:52,510 --> 00:10:56,350
see even with a en route that an

199
00:10:56,350 --> 00:10:59,860
even simpler binary also here

200
00:10:59,860 --> 00:11:03,610
just tells me the user shotokan has

201
00:11:03,610 --> 00:11:06,880
executed i of the user shot gun executed

202
00:11:06,880 --> 00:11:11,430
web never the root user executed i of ok

203
00:11:11,430 --> 00:11:14,519
mazzù what allows you to do over

204
00:11:14,519 --> 00:11:19,089
a  'must-use analysis allows you to create

205
00:11:19,089 --> 00:11:23,829
a reverse shell if it catches certain

206
00:11:23,829 --> 00:11:25,779
conditions so if there are

207
00:11:25,779 --> 00:11:29,620
vulnerable binaries inside then if

208
00:11:29,620 --> 00:11:31,630
an exec system call is made or

209
00:11:31,630 --> 00:11:34,209
anything that could be

210
00:11:34,209 --> 00:11:38,740
logged in then if we go to

211
00:11:38,740 --> 00:11:41,910
call ourselves net cat

212
00:11:41,910 --> 00:11:50,320
ok here we call park ju ju 12700

213
00:11:50,320 --> 00:11:57,880
12 34 a en route see

214
00:11:57,880 --> 00:12:00,790
ok a reverse shell started but I

215
00:12:00,790 --> 00:12:03,459
started as the user shotokan who was

216
00:12:03,459 --> 00:12:06,610
the first user who executed a

217
00:12:06,610 --> 00:12:11,529
command ok let's say in this case it was

218
00:12:11,529 --> 00:12:14,170
really of little use  because pink

219
00:12:14,170 --> 00:12:16,990
the user photos they have therefore did not

220
00:12:16,990 --> 00:12:18,750
bring me anything new

221
00:12:18,750 --> 00:12:25,209
but we can re-execute the command

222
00:12:25,209 --> 00:12:28,480
started by defining which user we

223
00:12:28,480 --> 00:12:30,390
want him to look like

224
00:12:30,390 --> 00:12:32,890
so let's say we want the user with

225
00:12:32,890 --> 00:12:39,000
us from 0 see  i love again net cat

226
00:12:40,350 --> 00:12:42,890
relaunch

227
00:12:42,890 --> 00:12:46,790
ruth we got a reverse shell

228
00:12:46,790 --> 00:12:49,290
directly from a binary that had

229
00:12:49,290 --> 00:12:51,120
nothing particular

230
00:12:51,120 --> 00:12:54,269
but it simply recalled some binaries

231
00:12:54,269 --> 00:12:56,519
inside it without carrying out

232
00:12:56,519 --> 00:12:59,670
checks on the pac that was passed

233
00:12:59,670 --> 00:13:02,760
therefore without sanitizer and peace is

234
00:13:02,760 --> 00:13:06,470
something that does not do  none

235
00:13:06,470 --> 00:13:11,190
exist csec calls that

236
00:13:11,190 --> 00:13:16,529
filter the patch which are the ex p with

237
00:13:16,529 --> 00:13:20,190
the final api the ex hac and that filter

238
00:13:20,190 --> 00:13:22,620
the environment variables do not filter the

239
00:13:22,620 --> 00:13:25,589
head so in most

240
00:13:25,589 --> 00:13:28,760
cases they have never found me a call

241
00:13:28,760 --> 00:13:31,440
exex p

242
00:13:31,440 --> 00:13:33,390
so all  binary sectors of that I have

243
00:13:33,390 --> 00:13:34,890
found so far they were all

244
00:13:34,890 --> 00:13:39,240
with maximum filtering on the

245
00:13:39,240 --> 00:13:42,350
environment variables without the patch

246
00:13:42,350 --> 00:13:47,370
ok then how it works mainly

247
00:13:47,370 --> 00:13:49,980
this script does not work rightly

248
00:13:49,980 --> 00:13:53,360
for black magic

249
00:13:53,660 --> 00:13:57,329
let's call for example it is a

250
00:13:57,329 --> 00:14:07,290
moment with ruth firewall ok ok ruth

251
00:14:07,290 --> 00:14:10,350
firewall because it allows us a wait

252
00:14:10,350 --> 00:14:11,970
so we can analyze what

253
00:14:11,970 --> 00:14:17,820
is happening in the median itself

254
00:14:17,820 --> 00:14:34,220
stopped did we are directly ok ok

255
00:14:36,450 --> 00:14:39,190
we are completely

256
00:14:39,190 --> 00:14:42,390
let's go make the clean call ok

257
00:14:42,390 --> 00:14:57,399
then let's call ruth firewall ok lutfi

258
00:14:57,399 --> 00:14:59,680
role now put me on hold

259
00:14:59,680 --> 00:15:01,209
what can we do while

260
00:15:01,209 --> 00:15:03,160
waiting we can show us what

261
00:15:03,160 --> 00:15:06,160
's in fishing and what's coming  created by

262
00:15:06,160 --> 00:15:13,930
pastoso lopez is full of links of

263
00:15:13,930 --> 00:15:16,480
symbolic links to a single file in

264
00:15:16,480 --> 00:15:18,279
reality they are all pointing

265
00:15:18,279 --> 00:15:23,170
to the same file this time was 30

266
00:15:23,170 --> 00:15:26,670
etc. that is created dynamically

267
00:15:26,670 --> 00:15:29,950
then let's go and see

268
00:15:29,950 --> 00:15:32,279
ok

269
00:15:35,500 --> 00:15:41,920
we move from ok these here are

270
00:15:41,920 --> 00:15:46,270
all  links that have

271
00:15:46,270 --> 00:15:48,880
all been created point to the same binary

272
00:15:48,880 --> 00:15:52,720
point which is actually a bash script

273
00:15:52,720 --> 00:16:00,070
this too let's go ok

274
00:16:00,070 --> 00:16:03,120
what this script does bash script

275
00:16:03,120 --> 00:16:06,010
simply intercepts all

276
00:16:06,010 --> 00:16:08,830
calls because it rightly gets

277
00:16:08,830 --> 00:16:12,340
the caller name so we have z

278
00:16:12,340 --> 00:16:14,740
morra we have z  new all other

279
00:16:14,740 --> 00:16:17,590
binaries present in the distribution have

280
00:16:17,590 --> 00:16:22,600
been thrown into this folder is

281
00:16:22,600 --> 00:16:25,060
rejected by original piece  and for which

282
00:16:25,060 --> 00:16:28,180
this binary this script knows where

283
00:16:28,180 --> 00:16:31,050
i was going to get the original milonga binaries

284
00:16:31,050 --> 00:16:34,320
on a temp file

285
00:16:34,320 --> 00:16:37,030
where there is the call that was

286
00:16:37,030 --> 00:16:40,180
executed and after just liar it

287
00:16:40,180 --> 00:16:42,550
executes cleanly

288
00:16:42,550 --> 00:16:46,120
so this here is in case we did

289
00:16:46,120 --> 00:16:48,810
n't ask  of the reverse shells

290
00:16:48,810 --> 00:16:52,960
in case we had requested a

291
00:16:52,960 --> 00:16:55,990
reverse shell other

292
00:16:55,990 --> 00:16:59,730
details are added to the script

293
00:16:59,730 --> 00:17:03,730
the controls for him of zungoli are added

294
00:17:03,730 --> 00:17:06,369
controls also for the rpm because in

295
00:17:06,369 --> 00:17:09,730
reality he wanted to put both types of

296
00:17:09,730 --> 00:17:14,410
controls and after in case of scripts that

297
00:17:14,410 --> 00:17:19,060
could  stop that put a

298
00:17:19,060 --> 00:17:21,880
time out system that works around

299
00:17:21,880 --> 00:17:24,280
are scripts are all programs with

300
00:17:24,280 --> 00:17:26,560
a host and you can then decide

301
00:17:26,560 --> 00:17:28,810
the teams not to die and that if we

302
00:17:28,810 --> 00:17:32,070
are not ruta we can not help it

303
00:17:33,760 --> 00:17:39,840
the beauty of zug is that it is relatively

304
00:17:39,840 --> 00:17:44,080
skillful script the sense we

305
00:17:44,080 --> 00:17:47,200
can run it on all its of the

306
00:17:47,200 --> 00:17:48,600
system

307
00:17:48,600 --> 00:17:51,600
if it is vulnerable

308
00:17:51,600 --> 00:17:54,120
to the only analysis without fa  r

309
00:17:54,120 --> 00:17:55,890
directly start a reverse shell we can

310
00:17:55,890 --> 00:18:01,380
also do it anyway it returns zero to me

311
00:18:01,380 --> 00:18:03,419
so by returning 0 I can steel arms a

312
00:18:03,419 --> 00:18:06,059
list of skilled programs found

313
00:18:06,059 --> 00:18:09,000
within the system and I can also

314
00:18:09,000 --> 00:18:11,850
decide directly to

315
00:18:11,850 --> 00:18:15,840
start versus shells or execute commands if

316
00:18:15,840 --> 00:18:19,309
the target is vulnerable  so i can

317
00:18:19,309 --> 00:18:22,380
define another script launch

318
00:18:22,380 --> 00:18:25,640
another program what we

319
00:18:28,080 --> 00:18:34,350
want this script is pretty raw

320
00:18:34,350 --> 00:18:39,809
let's say and sense created at night with

321
00:18:39,809 --> 00:18:44,490
lots of beer does what it can

322
00:18:44,490 --> 00:18:48,020
works because i can assure you that

323
00:18:48,020 --> 00:18:52,799
even on different nas synology if you

324
00:18:52,799 --> 00:18:54,330
have any at home

325
00:18:54,330 --> 00:18:56,730
and synology  they have the peculiarity of

326
00:18:56,730 --> 00:18:59,419
being full of tracks with them

327
00:18:59,419 --> 00:19:06,090
so you can have fun works the

328
00:19:06,090 --> 00:19:07,860
peculiarity that should come out

329
00:19:07,860 --> 00:19:12,110
shortly I am finishing developing it

330
00:19:12,360 --> 00:19:15,559
I am creating a virtual shell let's say

331
00:19:15,559 --> 00:19:18,990
where once the peaceful command is called

332
00:19:18,990 --> 00:19:23,690
he will create me a

333
00:19:23,690 --> 00:19:25,710
very normal jaw as if I had recalled

334
00:19:25,710 --> 00:19:28,799
beige  where all the commands that are

335
00:19:28,799 --> 00:19:31,230
called intern  or they will be tested

336
00:19:31,230 --> 00:19:33,840
for a real life type per stop

337
00:19:33,840 --> 00:19:37,760
rubbing so we can actually

338
00:19:37,760 --> 00:19:40,409
test what we want and eventually

339
00:19:40,409 --> 00:19:42,330
we will have a log or a direct reverse shell

340
00:19:42,330 --> 00:19:47,120
for all vulnerable b binaries

341
00:19:49,890 --> 00:19:54,970
this is pretty much all it does

342
00:19:54,970 --> 00:20:00,340
mushy hopefully soon  to be able to

343
00:20:00,340 --> 00:20:01,690
add other

344
00:20:01,690 --> 00:20:04,390
interesting features even if the

345
00:20:04,390 --> 00:20:07,990
main function remains precisely that of

346
00:20:07,990 --> 00:20:11,020
being a tester for pax functionality

347
00:20:11,020 --> 00:20:14,250
manages spas substitution so

348
00:20:14,250 --> 00:20:17,110
adding many other details

349
00:20:17,110 --> 00:20:23,500
would not make sense recently from the end of July it is

350
00:20:23,500 --> 00:20:27,330
also present in the

351
00:20:27,330 --> 00:20:33,760
blackheart distribution in the official repositories on

352
00:20:33,760 --> 00:20:36,730
kitab you can find it on github

353
00:20:36,730 --> 00:20:39,580
puntocom slash shocking notch so

354
00:20:39,580 --> 00:20:42,450
all well source and all beige

355
00:20:42,450 --> 00:20:45,010
if you can lend a hand you are

356
00:20:45,010 --> 00:20:49,080
welcome thanks to all

357
00:20:53,710 --> 00:21:01,160
if someone has some quick questions the

358
00:21:01,160 --> 00:21:12,590
beer is good anyway very very

359
00:21:12,590 --> 00:21:15,110
simply that what kind of help to the

360
00:21:15,110 --> 00:21:18,440
needs some  request if anyone

361
00:21:18,440 --> 00:21:20,450
wants to help you are looking for some

362
00:21:20,450 --> 00:21:23,840
part  then for now

363
00:21:23,840 --> 00:21:27,460
there is nothing specifically to do let's say

364
00:21:27,460 --> 00:21:30,950
surely there is to be done one of the villas

365
00:21:30,950 --> 00:21:34,580
of the source because he also wanted to

366
00:21:34,580 --> 00:21:38,780
use some switches that are a little better than

367
00:21:38,780 --> 00:21:44,360
those there are now maybe

368
00:21:44,360 --> 00:21:46,670
just joining more heads can come out

369
00:21:46,670 --> 00:21:49,610
of the  functions that would not have

370
00:21:49,610 --> 00:21:53,210
come to my mind as a dear

371
00:21:53,210 --> 00:21:56,230
friend has suggested to me the talk of

372
00:21:56,230 --> 00:22:02,390
the interactive saab sel nothing if there

373
00:22:02,390 --> 00:22:04,820
are things that you think can be

374
00:22:04,820 --> 00:22:06,680
added if there are better ones and if

375
00:22:06,680 --> 00:22:09,800
there is a way to fix the

376
00:22:09,800 --> 00:22:11,660
time out function that if you work on kitab is

377
00:22:11,660 --> 00:22:14,470
bad but already written that bad so

378
00:22:14,470 --> 00:22:18,160
ok and indeed another thing that could

379
00:22:18,160 --> 00:22:21,830
be useful instead the program

380
00:22:21,830 --> 00:22:24,290
currently works on almost all

381
00:22:24,290 --> 00:22:26,630
linux distributions also works on rm

382
00:22:26,630 --> 00:22:28,240
so I tried to keep it as

383
00:22:28,240 --> 00:22:31,640
generic as possible

384
00:22:31,640 --> 00:22:34,940
there are two things that have not been

385
00:22:34,940 --> 00:22:38,410
introduced yet that I want to introduce

386
00:22:38,410 --> 00:22:41,420
one would be integration with or sx

387
00:22:41,420 --> 00:22:45,230
because the gap with the regex beads does

388
00:22:45,230 --> 00:22:48,920
not  like it not at all from the left so it will have to be

389
00:22:48,920 --> 00:22:50,270
passed in another way

390
00:22:50,270 --> 00:22:52,340
but in the nothing particular

391
00:22:52,340 --> 00:22:54,920
I simply did not want

392
00:22:54,920 --> 00:22:59,270
the second thing which instead is quite

393
00:22:59,270 --> 00:23:01,790
complicated so I am looking for help a

394
00:23:01,790 --> 00:23:04,670
bit everywhere try to do

395
00:23:04,670 --> 00:23:07,940
an analysis of the file before running it

396
00:23:07,940 --> 00:23:12,200
for  understand if the file contains calls

397
00:23:12,200 --> 00:23:17,150
to you are assisting mexes has a bit for

398
00:23:17,150 --> 00:23:20,600
any function that can execute

399
00:23:20,600 --> 00:23:26,630
another command and and if it makes asset calls

400
00:23:26,630 --> 00:23:29,900
wii ds 3ds tgv etc so we can

401
00:23:29,900 --> 00:23:31,490
say is equal to this binary is

402
00:23:31,490 --> 00:23:35,150
vulnerable street station however it is not

403
00:23:35,150 --> 00:23:38,420
it has no calls to itself tui of this

404
00:23:38,420 --> 00:23:42,260
binary here although tweedy so it

405
00:23:42,260 --> 00:23:44,120
could be that it manages to get to

406
00:23:44,120 --> 00:23:49,550
ruth if the problem with this thing is that it

407
00:23:49,550 --> 00:23:52,679
would be to use

408
00:23:52,679 --> 00:23:58,409
all let's say how can you say all the

409
00:23:58,409 --> 00:23:59,970
programs already present in

410
00:23:59,970 --> 00:24:03,600
any linux distribution then  i

411
00:24:03,600 --> 00:24:06,539
can't use riedel because it would have to

412
00:24:06,539 --> 00:24:09,629
be installed in these cases i'm sure

413
00:24:09,629 --> 00:24:12,269
we can't install things

414
00:24:12,269 --> 00:24:14,460
when we go looking for these  to type of

415
00:24:14,460 --> 00:24:18,619
vulnerability riedel vidal code

416
00:24:18,619 --> 00:24:21,139
unwatchable just today they passed me

417
00:24:21,139 --> 00:24:23,870


418
00:24:23,870 --> 00:24:27,410
on asx apparently there is a

419
00:24:27,410 --> 00:24:31,130
python variant of ritel that will have to

420
00:24:31,130 --> 00:24:34,309
check if it is feasible to

421
00:24:34,309 --> 00:24:36,950
somehow switch to dark beige ash to

422
00:24:36,950 --> 00:24:39,260
be compatible with all  systems

423
00:24:39,260 --> 00:24:43,040
in short this is what I

424
00:24:43,040 --> 00:24:48,580
need now in short thanks

