1
00:00:01,129 --> 00:00:06,449
so welcome everybody here we have cynic

2
00:00:06,450 --> 00:00:09,780
is a computer scientist from Washington

3
00:00:09,780 --> 00:00:13,349
and he actually lives in Milan where he

4
00:00:13,349 --> 00:00:17,580
works for her mass project for digital

5
00:00:17,580 --> 00:00:23,389
human rights see okay so welcome cynic

6
00:00:27,109 --> 00:00:31,740
okay so globe leaks I think most of you

7
00:00:31,740 --> 00:00:33,809
are familiar with this project but for

8
00:00:33,809 --> 00:00:39,090
those out for those of you who are not

9
00:00:39,090 --> 00:00:44,579
familiar this is a project this is

10
00:00:44,579 --> 00:00:45,989
really a platform that anonymized

11
00:00:45,989 --> 00:00:47,489
whistleblowers as they transmit

12
00:00:47,489 --> 00:00:50,640
information to organizations so it's

13
00:00:50,640 --> 00:00:52,920
kind of like WordPress but it is a

14
00:00:52,920 --> 00:00:56,190
website that runs on a tour as a

15
00:00:56,190 --> 00:01:01,140
hidden service so we've seen over 25

16
00:01:01,140 --> 00:01:04,650
different a thing I think it's closer to

17
00:01:04,650 --> 00:01:08,510
50 now but we've seen many civic

18
00:01:08,510 --> 00:01:10,860
organizations and civic society use this

19
00:01:10,860 --> 00:01:13,560
tool to collect information from

20
00:01:13,560 --> 00:01:17,040
whistleblowers and do interesting things

21
00:01:17,040 --> 00:01:19,560
with it either take taken from take data

22
00:01:19,560 --> 00:01:24,150
public challenge their states or you

23
00:01:24,150 --> 00:01:27,720
know promote transparency at this

24
00:01:27,720 --> 00:01:31,229
conference five years ago actually this

25
00:01:31,229 --> 00:01:33,119
project was started so I'm not sure how

26
00:01:33,119 --> 00:01:35,070
many of you however it how many of you

27
00:01:35,070 --> 00:01:38,549
were a task five years ago is there

28
00:01:38,549 --> 00:01:42,689
anybody no that's fantastic nave this

29
00:01:42,689 --> 00:01:46,049
guy was but five years ago Arthur offal

30
00:01:46,049 --> 00:01:50,220
Astro actually announced at we know we

31
00:01:50,220 --> 00:01:51,509
did a presentation and they announced

32
00:01:51,509 --> 00:01:55,860
the the founding of this project very

33
00:01:55,860 --> 00:01:59,280
interesting now five years ago there was

34
00:01:59,280 --> 00:02:02,130
kind of a different approach that was

35
00:02:02,130 --> 00:02:05,490
taken and the the thinking was global

36
00:02:05,490 --> 00:02:09,050
eeks was going to be a tool to

37
00:02:09,050 --> 00:02:12,209
aggressive not aggressively but I get

38
00:02:12,209 --> 00:02:13,550
information to

39
00:02:13,550 --> 00:02:16,400
targets via a web portal so you hand

40
00:02:16,400 --> 00:02:20,000
somebody a link out and I it's kind of a

41
00:02:20,000 --> 00:02:21,860
true it's kind of a trolling idea but

42
00:02:21,860 --> 00:02:24,110
it's very entertaining if you give

43
00:02:24,110 --> 00:02:26,650
somebody a link with information that

44
00:02:26,650 --> 00:02:29,510
may or may not be something they want to

45
00:02:29,510 --> 00:02:32,000
see but you know if if you can sort of

46
00:02:32,000 --> 00:02:33,590
bring them into the leaking process

47
00:02:33,590 --> 00:02:35,870
maybe you can generate some form of

48
00:02:35,870 --> 00:02:41,090
activism today we've we've not moved on

49
00:02:41,090 --> 00:02:43,480
but we change the frickin dialogue and

50
00:02:43,480 --> 00:02:47,210
we're looking at providing manuals for

51
00:02:47,210 --> 00:02:49,700
the people who use the system so what's

52
00:02:49,700 --> 00:02:52,090
happened is as this project has grown

53
00:02:52,090 --> 00:02:54,530
we've seen you know we're trying to

54
00:02:54,530 --> 00:02:56,150
support more and more users in more and

55
00:02:56,150 --> 00:02:59,150
more different use cases for a tool for

56
00:02:59,150 --> 00:03:01,670
whistleblowing and a tool for taking

57
00:03:01,670 --> 00:03:04,880
information from sources who want to

58
00:03:04,880 --> 00:03:07,670
stay anonymous and keeping them

59
00:03:07,670 --> 00:03:09,260
anonymous for as long as possible so we

60
00:03:09,260 --> 00:03:13,970
can process that data safely so it's

61
00:03:13,970 --> 00:03:17,060
interesting so what we're looking at

62
00:03:17,060 --> 00:03:20,959
today is more changes to the system and

63
00:03:20,959 --> 00:03:24,140
specifically we're looking at moving the

64
00:03:24,140 --> 00:03:26,570
encryption that we've previously done on

65
00:03:26,570 --> 00:03:30,800
a server into a web browsers to protect

66
00:03:30,800 --> 00:03:34,640
data arrest the idea here is that in the

67
00:03:34,640 --> 00:03:38,480
current system at organizations that

68
00:03:38,480 --> 00:03:40,970
that have non technical folks that have

69
00:03:40,970 --> 00:03:43,400
journalists that are you know better

70
00:03:43,400 --> 00:03:47,720
governments that are corporations either

71
00:03:47,720 --> 00:03:50,630
have stringent requirements for handling

72
00:03:50,630 --> 00:03:53,720
data or or installing new applications

73
00:03:53,720 --> 00:03:59,239
so what we're trying to do is provide a

74
00:03:59,239 --> 00:04:02,390
complete solution for whistleblowing so

75
00:04:02,390 --> 00:04:06,110
what that means is we want to get rid of

76
00:04:06,110 --> 00:04:07,700
a requirement that we have which is a

77
00:04:07,700 --> 00:04:11,570
dependency on using gpg or a custom tool

78
00:04:11,570 --> 00:04:16,548
that sits on a recipient to information

79
00:04:16,548 --> 00:04:21,680
a recipients computer so and this is a

80
00:04:21,680 --> 00:04:23,120
specification we've been working on for

81
00:04:23,120 --> 00:04:24,290
the last

82
00:04:24,290 --> 00:04:27,250
I think I mean originally it was like

83
00:04:27,250 --> 00:04:29,780
2012 we started talking about this and

84
00:04:29,780 --> 00:04:32,300
we started implementing it in December

85
00:04:32,300 --> 00:04:36,070
of 2015 we're at the point now where

86
00:04:36,070 --> 00:04:38,060
we're trying to put this in front of

87
00:04:38,060 --> 00:04:39,380
people we're trying to put this in front

88
00:04:39,380 --> 00:04:44,120
of you guys describe it well and see if

89
00:04:44,120 --> 00:04:46,280
there are problems with this with this

90
00:04:46,280 --> 00:04:49,700
approach there's problems if if there's

91
00:04:49,700 --> 00:04:53,180
weaknesses and this is the this is the

92
00:04:53,180 --> 00:04:54,620
part where we defend it we defend our

93
00:04:54,620 --> 00:04:56,270
choices and we say okay this is this is

94
00:04:56,270 --> 00:04:58,280
actually an active change this is new

95
00:04:58,280 --> 00:05:01,660
cryptography and we think it's secure so

96
00:05:01,660 --> 00:05:04,960
with that said what are we doing

97
00:05:04,960 --> 00:05:07,730
basically the goal is the store is for

98
00:05:07,730 --> 00:05:09,350
whistleblower to store nothing in their

99
00:05:09,350 --> 00:05:11,420
browser so we're performing encryption

100
00:05:11,420 --> 00:05:13,340
in the browser and we want that that we

101
00:05:13,340 --> 00:05:14,570
want that whistleblower to have no

102
00:05:14,570 --> 00:05:16,790
information stored in their browser so

103
00:05:16,790 --> 00:05:19,130
they take a secret away once they

104
00:05:19,130 --> 00:05:20,450
generate a submission once they send

105
00:05:20,450 --> 00:05:23,300
files to us via tour via HTTP ask for

106
00:05:23,300 --> 00:05:27,500
some some other transport they walk away

107
00:05:27,500 --> 00:05:30,140
with a single piece of a single

108
00:05:30,140 --> 00:05:31,310
authentication took and it's something

109
00:05:31,310 --> 00:05:35,720
we call a receipt said this already and

110
00:05:35,720 --> 00:05:39,080
additionally we want the ability for the

111
00:05:39,080 --> 00:05:41,420
organizations that are that are taking

112
00:05:41,420 --> 00:05:42,920
this information they're receiving this

113
00:05:42,920 --> 00:05:45,010
information to be able to add new

114
00:05:45,010 --> 00:05:49,460
recipients to at two submissions that

115
00:05:49,460 --> 00:05:52,940
have been created so if you are you know

116
00:05:52,940 --> 00:05:54,500
the the authority for national

117
00:05:54,500 --> 00:05:57,590
corruption in Italia maybe you have

118
00:05:57,590 --> 00:06:00,470
turnover of handlers who you know or you

119
00:06:00,470 --> 00:06:02,840
have a review process where somebody

120
00:06:02,840 --> 00:06:04,100
somebody at the top of your

121
00:06:04,100 --> 00:06:06,530
organization's take submissions and says

122
00:06:06,530 --> 00:06:08,390
ah this is for this team this is where

123
00:06:08,390 --> 00:06:10,190
this team is for this team we want to

124
00:06:10,190 --> 00:06:11,830
handle that in cryptography not through

125
00:06:11,830 --> 00:06:15,640
some access control system and finally

126
00:06:15,640 --> 00:06:17,990
for the deployed systems out there we

127
00:06:17,990 --> 00:06:20,120
want to try to support an upgrade that

128
00:06:20,120 --> 00:06:23,990
lets them take the the version of global

129
00:06:23,990 --> 00:06:25,400
League so we have deployed today and

130
00:06:25,400 --> 00:06:30,530
upgrade into this new system okay so I'm

131
00:06:30,530 --> 00:06:32,570
just going to walk through the the use

132
00:06:32,570 --> 00:06:36,020
case here because why not so we get a

133
00:06:36,020 --> 00:06:37,550
whistleblower he's somebody who see

134
00:06:37,550 --> 00:06:38,150
something wrong

135
00:06:38,150 --> 00:06:42,560
is somebody who cannot or does not want

136
00:06:42,560 --> 00:06:44,330
to or has tried the traditional channels

137
00:06:44,330 --> 00:06:46,510
within their organization or within

138
00:06:46,510 --> 00:06:50,420
their environment and said I can't go

139
00:06:50,420 --> 00:06:52,040
public with this information this way I

140
00:06:52,040 --> 00:06:53,930
need to remain anonymous I need to use a

141
00:06:53,930 --> 00:06:56,510
tool like global leaks maybe you read

142
00:06:56,510 --> 00:07:01,940
the manual not a requirement after after

143
00:07:01,940 --> 00:07:05,210
figuring out who to talk to he can

144
00:07:05,210 --> 00:07:08,110
connect with either a normal web browser

145
00:07:08,110 --> 00:07:10,820
it actually depends on the configuration

146
00:07:10,820 --> 00:07:13,490
of the hour of the service that's

147
00:07:13,490 --> 00:07:14,810
running but either you can connect with

148
00:07:14,810 --> 00:07:17,150
a normal web browser tor browser via tor

149
00:07:17,150 --> 00:07:20,750
hidden service once that once that

150
00:07:20,750 --> 00:07:22,220
connections established the uploads

151
00:07:22,220 --> 00:07:24,440
files he answers a questionnaire and

152
00:07:24,440 --> 00:07:28,760
he's issue receipt after that has

153
00:07:28,760 --> 00:07:30,760
happened the organization is basically

154
00:07:30,760 --> 00:07:33,080
it's like a content management system

155
00:07:33,080 --> 00:07:35,240
lovely says the console I mean you get

156
00:07:35,240 --> 00:07:38,090
us you see a submission and the whistle

157
00:07:38,090 --> 00:07:41,060
in the the organization can follow up

158
00:07:41,060 --> 00:07:43,280
and we find this is very important for

159
00:07:43,280 --> 00:07:45,230
groups that actually want high quality

160
00:07:45,230 --> 00:07:49,370
and feet you know it's sort of it's a

161
00:07:49,370 --> 00:07:51,290
process it's not just you know dump a

162
00:07:51,290 --> 00:07:55,670
bunch of files and walk away so you know

163
00:07:55,670 --> 00:07:58,400
we try to support this at we try to

164
00:07:58,400 --> 00:08:02,230
support this use case of having at

165
00:08:02,230 --> 00:08:06,110
having comments and messages and the

166
00:08:06,110 --> 00:08:09,680
ability to handle the the relationship

167
00:08:09,680 --> 00:08:11,990
of a whistleblower with that

168
00:08:11,990 --> 00:08:15,320
organization and after after that

169
00:08:15,320 --> 00:08:16,580
submission is being created after that

170
00:08:16,580 --> 00:08:19,640
conversation has occurred though that

171
00:08:19,640 --> 00:08:21,800
the organization decides what they want

172
00:08:21,800 --> 00:08:24,230
to do and they don't you know this

173
00:08:24,230 --> 00:08:27,680
service doesn't provide any ability to

174
00:08:27,680 --> 00:08:29,750
take that information and publish it on

175
00:08:29,750 --> 00:08:31,490
the web or publish it on the torrent or

176
00:08:31,490 --> 00:08:35,630
put in IP IP FS it's just internally

177
00:08:35,630 --> 00:08:38,690
it's just an internal system once once

178
00:08:38,690 --> 00:08:42,470
the whistleblowers come in so what

179
00:08:42,470 --> 00:08:44,480
actually what is actually happening what

180
00:08:44,480 --> 00:08:47,170
is what lives on this and I'm sure the

181
00:08:47,170 --> 00:08:49,640
names here aren't important it's just to

182
00:08:49,640 --> 00:08:51,590
get to get the concept for a moment

183
00:08:51,590 --> 00:08:55,160
which is on the date on the system on

184
00:08:55,160 --> 00:08:57,310
this this global leaks node we have

185
00:08:57,310 --> 00:08:59,960
files that gets stored which are you

186
00:08:59,960 --> 00:09:04,840
know files and comments which are

187
00:09:04,840 --> 00:09:07,790
messages which everybody in the

188
00:09:07,790 --> 00:09:11,450
everybody who's a party to this tip or a

189
00:09:11,450 --> 00:09:13,160
party to the submission can read and

190
00:09:13,160 --> 00:09:14,960
messages which is which are intended to

191
00:09:14,960 --> 00:09:17,480
be private between a single recipient

192
00:09:17,480 --> 00:09:20,720
innocent in the whistleblower okay and

193
00:09:20,720 --> 00:09:22,040
these are the these are the new

194
00:09:22,040 --> 00:09:24,040
constructs that we're introducing here

195
00:09:24,040 --> 00:09:27,200
these are the new data structures okay

196
00:09:27,200 --> 00:09:29,720
so at a technical level what actually

197
00:09:29,720 --> 00:09:31,820
happens when you connect to global weeks

198
00:09:31,820 --> 00:09:33,920
with a web browser either the tor

199
00:09:33,920 --> 00:09:39,220
browser or you know incognito session of

200
00:09:39,220 --> 00:09:43,550
your browser choice so after the

201
00:09:43,550 --> 00:09:47,600
application loads we issue a challenge

202
00:09:47,600 --> 00:09:50,030
the server issues the challenge sends

203
00:09:50,030 --> 00:09:51,710
the public keys of the intended

204
00:09:51,710 --> 00:09:55,100
recipients and a salt to the users

205
00:09:55,100 --> 00:09:58,550
browser the user creates responds with a

206
00:09:58,550 --> 00:10:04,090
challenge CA which has which is

207
00:10:04,090 --> 00:10:06,170
basically it's a combination of a

208
00:10:06,170 --> 00:10:09,590
CAPTCHA let's configure about its sorry

209
00:10:09,590 --> 00:10:11,420
it's configurable but it's a combination

210
00:10:11,420 --> 00:10:18,470
of a CAPTCHA and a proof-of-work so once

211
00:10:18,470 --> 00:10:20,210
we determine once the server which

212
00:10:20,210 --> 00:10:25,580
determines that the there's a there's a

213
00:10:25,580 --> 00:10:30,410
human and functioning JavaScript on that

214
00:10:30,410 --> 00:10:32,900
in that client in this session it issues

215
00:10:32,900 --> 00:10:35,770
a token and this token is going to live

216
00:10:35,770 --> 00:10:38,510
for the rest of rest of the submission

217
00:10:38,510 --> 00:10:40,580
the rest of the process and it's and

218
00:10:40,580 --> 00:10:43,040
it's going to live as t parameterised on

219
00:10:43,040 --> 00:10:46,090
these submissions to the to the server

220
00:10:46,090 --> 00:10:48,170
so this is the initialization it

221
00:10:48,170 --> 00:10:51,110
actually happens any time a

222
00:10:51,110 --> 00:10:53,870
whistleblower connects and if there are

223
00:10:53,870 --> 00:10:56,990
any problems with that that connection

224
00:10:56,990 --> 00:10:59,200
we can just revoke T and walk away so

225
00:10:59,200 --> 00:11:01,940
this this is this is the authentication

226
00:11:01,940 --> 00:11:04,430
of the session itself for the whistle

227
00:11:04,430 --> 00:11:05,209
are

228
00:11:05,209 --> 00:11:10,249
now when that when that whistleblower

229
00:11:10,249 --> 00:11:12,559
walks through the the submission process

230
00:11:12,559 --> 00:11:16,300
what's actually happening are two key to

231
00:11:16,300 --> 00:11:20,269
gpg keys are generated sorry PGP keys

232
00:11:20,269 --> 00:11:23,290
are generated I always mix this up and

233
00:11:23,290 --> 00:11:26,089
the notation is a little funky here but

234
00:11:26,089 --> 00:11:28,339
this is the private key of the

235
00:11:28,339 --> 00:11:30,439
whistleblower and the public key of the

236
00:11:30,439 --> 00:11:32,720
whistleblower and this is the so it's s4

237
00:11:32,720 --> 00:11:36,470
secret but it's the private key of the

238
00:11:36,470 --> 00:11:38,839
for the session and the public key for

239
00:11:38,839 --> 00:11:43,579
the session so the whistleblowers client

240
00:11:43,579 --> 00:11:47,660
generates 22 keys this session key is

241
00:11:47,660 --> 00:11:51,860
actually this key right here which he

242
00:11:51,860 --> 00:11:56,360
generates up for the for the intended

243
00:11:56,360 --> 00:12:00,980
recipients of this of this submission so

244
00:12:00,980 --> 00:12:05,179
once we've got this key we encrypt using

245
00:12:05,179 --> 00:12:08,269
the session key we encrypt files that he

246
00:12:08,269 --> 00:12:11,119
submits using the session key and the

247
00:12:11,119 --> 00:12:14,209
server is going to store these uh and T

248
00:12:14,209 --> 00:12:15,619
is gone there should be a tee whatever

249
00:12:15,619 --> 00:12:21,529
and after okay so after we do these and

250
00:12:21,529 --> 00:12:23,299
actually what's interesting is this is

251
00:12:23,299 --> 00:12:24,889
happening in a in a web browser so this

252
00:12:24,889 --> 00:12:27,410
encrypt so this key is generated in the

253
00:12:27,410 --> 00:12:31,160
session of the browser and these these

254
00:12:31,160 --> 00:12:32,660
files are actually encrypt that we

255
00:12:32,660 --> 00:12:34,399
upload them in the browser we encrypt

256
00:12:34,399 --> 00:12:36,259
them in memory we send them it's

257
00:12:36,259 --> 00:12:37,970
complicated there's a there's a protocol

258
00:12:37,970 --> 00:12:40,999
to stream this and we can we can sort of

259
00:12:40,999 --> 00:12:42,649
do streaming data encryption in the

260
00:12:42,649 --> 00:12:44,779
browser interesting stuff kind of

261
00:12:44,779 --> 00:12:48,889
complicated whatever um okay we've

262
00:12:48,889 --> 00:12:51,049
generated some keys we can generate a

263
00:12:51,049 --> 00:12:54,139
receipt in the format I'll get into it a

264
00:12:54,139 --> 00:12:57,889
little bit but um we generate what we

265
00:12:57,889 --> 00:13:01,069
what we call a the key the receipt key

266
00:13:01,069 --> 00:13:05,360
pass phrase which is RK which is a half

267
00:13:05,360 --> 00:13:08,480
of this receipt and his hash is

268
00:13:08,480 --> 00:13:11,329
parametrized with a salt sent from the

269
00:13:11,329 --> 00:13:13,399
server which we which was submitted

270
00:13:13,399 --> 00:13:17,449
earlier and the receipt so a script is a

271
00:13:17,449 --> 00:13:18,950
hash function it's a

272
00:13:18,950 --> 00:13:21,710
memory hard password key derivation

273
00:13:21,710 --> 00:13:27,020
function actually and we use it to do

274
00:13:27,020 --> 00:13:29,990
basically extend and it make it

275
00:13:29,990 --> 00:13:31,520
difficult to brute force the key space

276
00:13:31,520 --> 00:13:33,860
okay so s script is a function that is

277
00:13:33,860 --> 00:13:39,920
that you can force a user to compute for

278
00:13:39,920 --> 00:13:42,880
some some amount of time so if you want

279
00:13:42,880 --> 00:13:47,750
at 250 millisecond computation you can

280
00:13:47,750 --> 00:13:49,940
force that with the right parameters in

281
00:13:49,940 --> 00:13:52,550
s script and so this is what we do in a

282
00:13:52,550 --> 00:13:54,740
sense of if you want to try a receipt

283
00:13:54,740 --> 00:13:58,580
key sorry out a receipt key you have to

284
00:13:58,580 --> 00:14:00,830
spend 250 milliseconds computing that in

285
00:14:00,830 --> 00:14:04,130
a web browser and you can do it faster

286
00:14:04,130 --> 00:14:07,520
and we're going to go into that now once

287
00:14:07,520 --> 00:14:12,410
this content has been encrypted once the

288
00:14:12,410 --> 00:14:14,240
files have been encrypted there's a cert

289
00:14:14,240 --> 00:14:18,760
there's a final step of uploading the

290
00:14:18,760 --> 00:14:23,360
whistleblowers key the a half of this

291
00:14:23,360 --> 00:14:28,010
receipt key and the tip the the

292
00:14:28,010 --> 00:14:31,730
submission session key sks so what the

293
00:14:31,730 --> 00:14:33,740
final step of actually creating a

294
00:14:33,740 --> 00:14:37,250
submission is uploading encrypt and

295
00:14:37,250 --> 00:14:39,530
uploading an encrypted package so we

296
00:14:39,530 --> 00:14:42,080
have files and we have the the content

297
00:14:42,080 --> 00:14:44,600
that's going to let us re access this

298
00:14:44,600 --> 00:14:48,080
submission and what's interesting here

299
00:14:48,080 --> 00:14:51,620
so this encryption of access public

300
00:14:51,620 --> 00:14:54,350
either lists the the access public key

301
00:14:54,350 --> 00:15:03,260
list is exists as a session key as it

302
00:15:03,260 --> 00:15:06,830
exists as a oh this is complicated I

303
00:15:06,830 --> 00:15:14,090
love it though so PKR PKR to PKR three

304
00:15:14,090 --> 00:15:18,530
are any public keys that correspond to

305
00:15:18,530 --> 00:15:20,870
the the offline private keys of the

306
00:15:20,870 --> 00:15:27,050
receiver we issue a we there's a there's

307
00:15:27,050 --> 00:15:32,160
a s sub there's another sub keeper

308
00:15:32,160 --> 00:15:35,399
this a symmetric key that each one of

309
00:15:35,399 --> 00:15:36,870
these that there's a single

310
00:15:36,870 --> 00:15:39,480
symmetrically that encrypts the session

311
00:15:39,480 --> 00:15:42,870
key for this app for this object which

312
00:15:42,870 --> 00:15:46,470
is the session key for the holes for the

313
00:15:46,470 --> 00:15:49,949
whole submission and it's issued to the

314
00:15:49,949 --> 00:15:54,060
intended recipients of this at the

315
00:15:54,060 --> 00:15:55,589
intended recipients of this submission

316
00:15:55,589 --> 00:15:57,959
very simple these guys have access to it

317
00:15:57,959 --> 00:16:03,810
and this this session key as we as I'm

318
00:16:03,810 --> 00:16:07,800
trying to point out is what protects the

319
00:16:07,800 --> 00:16:13,230
these files and comments uh yeah okay

320
00:16:13,230 --> 00:16:18,029
now um this yeah so this is the data

321
00:16:18,029 --> 00:16:20,129
this is this this content is still the

322
00:16:20,129 --> 00:16:22,319
data stored on the server this this

323
00:16:22,319 --> 00:16:23,879
receipt has been stored offline and

324
00:16:23,879 --> 00:16:27,839
these are offline now it's important

325
00:16:27,839 --> 00:16:30,839
that we're storing this the hash of RK

326
00:16:30,839 --> 00:16:33,120
because it allows us to authenticate the

327
00:16:33,120 --> 00:16:35,670
the whistleblower in future session so

328
00:16:35,670 --> 00:16:37,470
if the whistleblower wants to return to

329
00:16:37,470 --> 00:16:43,009
this submission he needs to regenerate

330
00:16:43,009 --> 00:16:47,509
RK and submit the hash of RK to

331
00:16:47,509 --> 00:16:51,000
re-access comments and messages that are

332
00:16:51,000 --> 00:16:53,220
stored in the system ok i'm not sure if

333
00:16:53,220 --> 00:16:55,860
actually you guys probably haven't been

334
00:16:55,860 --> 00:16:59,670
able to see this corner but I Laura so

335
00:16:59,670 --> 00:17:04,919
at so when a whistleblower wants to come

336
00:17:04,919 --> 00:17:08,159
back after maybe so what happens is you

337
00:17:08,159 --> 00:17:09,809
know submission gets a submission gets

338
00:17:09,809 --> 00:17:13,349
generated the the intended recipients

339
00:17:13,349 --> 00:17:14,909
review it they get in to get an email

340
00:17:14,909 --> 00:17:16,919
notification about hey something has

341
00:17:16,919 --> 00:17:19,109
been submitted take a look maybe they

342
00:17:19,109 --> 00:17:21,510
leave some comments maybe they review it

343
00:17:21,510 --> 00:17:22,949
and I delete it i said no this this

344
00:17:22,949 --> 00:17:26,280
isn't worth it but if they if they're if

345
00:17:26,280 --> 00:17:27,599
they want to see that whistleblower come

346
00:17:27,599 --> 00:17:31,080
back the receipt that he was issued is

347
00:17:31,080 --> 00:17:38,010
going to have this this happy this this

348
00:17:38,010 --> 00:17:39,659
this guy is going to live and this is

349
00:17:39,659 --> 00:17:41,820
the key for the whistleblower return of

350
00:17:41,820 --> 00:17:45,539
the system so um when you return

351
00:17:45,539 --> 00:17:46,919
turns after when the whistleblower

352
00:17:46,919 --> 00:17:51,119
returns after generating a new access

353
00:17:51,119 --> 00:17:55,799
control token uses the hash of RK to get

354
00:17:55,799 --> 00:17:58,590
to get back the it's he's encrypted his

355
00:17:58,590 --> 00:18:01,320
encrypted messages and the encrypted

356
00:18:01,320 --> 00:18:05,669
session key of that whistleblower with

357
00:18:05,669 --> 00:18:08,519
that with these with this content he can

358
00:18:08,519 --> 00:18:11,720
decrypt he can basically reconstruct

359
00:18:11,720 --> 00:18:15,809
what he originally had which was s KW

360
00:18:15,809 --> 00:18:18,239
and the message is submitted ignore this

361
00:18:18,239 --> 00:18:22,849
this is a mistake additionally you can

362
00:18:22,849 --> 00:18:28,619
submit more he can he can encrypt new

363
00:18:28,619 --> 00:18:30,359
files and new messages and have the

364
00:18:30,359 --> 00:18:32,190
surface for them so it's it's like you

365
00:18:32,190 --> 00:18:37,519
reconstruct the original state without

366
00:18:37,549 --> 00:18:39,509
you reconstruct the original state

367
00:18:39,509 --> 00:18:42,090
without this with only the public key of

368
00:18:42,090 --> 00:18:44,099
the tips with it with only the public

369
00:18:44,099 --> 00:18:46,379
key of the tip session and you're back

370
00:18:46,379 --> 00:18:49,399
to where you started very interesting ok

371
00:18:49,399 --> 00:18:54,299
so if this is the this is the setup if

372
00:18:54,299 --> 00:18:57,119
we if we're going to use this we

373
00:18:57,119 --> 00:18:58,349
actually need to look at what that

374
00:18:58,349 --> 00:19:00,830
receipt the format of that receipt

375
00:19:00,830 --> 00:19:04,139
because if it's there's a you know

376
00:19:04,139 --> 00:19:05,820
there's a requirement of entropy on

377
00:19:05,820 --> 00:19:08,509
brute forcing the key space that this

378
00:19:08,509 --> 00:19:12,470
that we have to look at in the sense of

379
00:19:12,470 --> 00:19:18,590
right now we use a sixth 16 digit

380
00:19:18,590 --> 00:19:22,039
receipt and we only use that to

381
00:19:22,039 --> 00:19:27,210
authenticate the the recipient in the

382
00:19:27,210 --> 00:19:29,549
same way but we actually because we're

383
00:19:29,549 --> 00:19:32,489
not performing it allora actually it's

384
00:19:32,489 --> 00:19:34,440
not important we're just going to talk

385
00:19:34,440 --> 00:19:37,409
about it in the abstract so there's a

386
00:19:37,409 --> 00:19:39,210
couple different formats that we can use

387
00:19:39,210 --> 00:19:45,960
for at for receipts the goal is to keep

388
00:19:45,960 --> 00:19:47,999
it the goal is to keep the receipts

389
00:19:47,999 --> 00:19:52,009
small so that it's memorable and

390
00:19:52,009 --> 00:19:55,529
feasibly deniable in the sense of if you

391
00:19:55,529 --> 00:19:59,160
write down 16 digits

392
00:19:59,160 --> 00:20:00,600
you could pretend this is a credit card

393
00:20:00,600 --> 00:20:02,190
number this is the same format as a

394
00:20:02,190 --> 00:20:05,700
credit card number but if you have like

395
00:20:05,700 --> 00:20:08,730
a base 58 string it's a little less

396
00:20:08,730 --> 00:20:10,650
little less obvious if you have a heck

397
00:20:10,650 --> 00:20:14,130
string I you know if you're an artist or

398
00:20:14,130 --> 00:20:18,840
you're like you your secretary it's it

399
00:20:18,840 --> 00:20:20,370
doesn't quite you know it's like why do

400
00:20:20,370 --> 00:20:21,900
you why would you have this if you're

401
00:20:21,900 --> 00:20:23,580
walking out of a building with this with

402
00:20:23,580 --> 00:20:27,300
this with a USB oh if you're walking out

403
00:20:27,300 --> 00:20:30,570
of a building with a USB and a hexadecyl

404
00:20:30,570 --> 00:20:35,250
extend digit hexadecimal string so so we

405
00:20:35,250 --> 00:20:38,910
got this thing and we can actually look

406
00:20:38,910 --> 00:20:44,010
at the difficulty of computing you know

407
00:20:44,010 --> 00:20:47,400
enumerated in the key space so if we're

408
00:20:47,400 --> 00:20:51,060
interested in understanding what a good

409
00:20:51,060 --> 00:20:54,870
what makes a good receipt for to issue

410
00:20:54,870 --> 00:20:56,640
to people so they don't have to memorize

411
00:20:56,640 --> 00:20:58,680
much they don't have to write down much

412
00:20:58,680 --> 00:21:02,730
and its resistance to an attacker we

413
00:21:02,730 --> 00:21:04,890
just we can just analyze the the entropy

414
00:21:04,890 --> 00:21:06,450
and the difficulty of a new writing the

415
00:21:06,450 --> 00:21:10,260
key space so this is this graph and

416
00:21:10,260 --> 00:21:14,040
basically the parameters were using for

417
00:21:14,040 --> 00:21:17,970
a script are in it not so important but

418
00:21:17,970 --> 00:21:23,250
the the output is the this function uses

419
00:21:23,250 --> 00:21:27,060
256 megabytes of memory it takes about

420
00:21:27,060 --> 00:21:29,910
250 milliseconds in JavaScript to

421
00:21:29,910 --> 00:21:33,960
compute one half in in Python using a

422
00:21:33,960 --> 00:21:36,900
native implementation you can do it in

423
00:21:36,900 --> 00:21:40,340
17 you can do you can run it at 17 hertz

424
00:21:40,340 --> 00:21:45,720
hashes per second and i think from from

425
00:21:45,720 --> 00:21:48,600
what it looks like from from the way the

426
00:21:48,600 --> 00:21:50,850
ASIC industry you know the the a6

427
00:21:50,850 --> 00:21:55,520
compare maybe you can run an ASIC at

428
00:21:55,520 --> 00:21:58,410
1010 Killa hashes a second in the sense

429
00:21:58,410 --> 00:22:03,590
of you can compute a ten ten thousand

430
00:22:03,590 --> 00:22:09,540
outputs of s crypt in a second so if we

431
00:22:09,540 --> 00:22:12,659
had if you were a

432
00:22:12,659 --> 00:22:16,019
a nation or maybe your stick with the

433
00:22:16,019 --> 00:22:17,249
nation if you're a nation and you're

434
00:22:17,249 --> 00:22:20,580
interested in a global leaks node and

435
00:22:20,580 --> 00:22:27,059
you've taken that server how much money

436
00:22:27,059 --> 00:22:30,539
if you spend 15 million dollars you

437
00:22:30,539 --> 00:22:34,559
produce 50,000 a6 that that run at ten

438
00:22:34,559 --> 00:22:40,440
kill at ten Killa hash is a second this

439
00:22:40,440 --> 00:22:42,179
is how long it takes to enumerate the

440
00:22:42,179 --> 00:22:47,759
key space and so basically from my point

441
00:22:47,759 --> 00:22:51,299
of view uh this is you basically have to

442
00:22:51,299 --> 00:22:56,190
use something that requires more than

443
00:22:56,190 --> 00:22:57,779
thirty three weeks to enumerate the

444
00:22:57,779 --> 00:22:59,039
entirety of space because once you've

445
00:22:59,039 --> 00:23:02,090
enumerated this this key space you know

446
00:23:02,090 --> 00:23:07,559
all of the input you know all of the

447
00:23:07,559 --> 00:23:13,950
inputs for data data encrypted with the

448
00:23:13,950 --> 00:23:15,330
whistleblowers key so you can go back

449
00:23:15,330 --> 00:23:18,299
and read the comments of submissions and

450
00:23:18,299 --> 00:23:20,369
you can go back and read the messages so

451
00:23:20,369 --> 00:23:22,789
you can go back and read the metadata

452
00:23:22,789 --> 00:23:25,289
you still can't actually access the

453
00:23:25,289 --> 00:23:27,809
files because they weren't they you know

454
00:23:27,809 --> 00:23:29,759
that we never intended for the

455
00:23:29,759 --> 00:23:31,080
whistleblower to have access to the

456
00:23:31,080 --> 00:23:33,299
files after they were encrypted but if

457
00:23:33,299 --> 00:23:37,590
you us you know sees if you go and grab

458
00:23:37,590 --> 00:23:39,509
a receiver if you go and grab one of

459
00:23:39,509 --> 00:23:42,960
these journalists and you get there you

460
00:23:42,960 --> 00:23:45,749
know you take their private key you can

461
00:23:45,749 --> 00:23:48,090
come back through it and get the files

462
00:23:48,090 --> 00:23:50,700
of comments in the messages okay this

463
00:23:50,700 --> 00:23:54,059
though is resolved with a hammer you

464
00:23:54,059 --> 00:23:56,190
just destroy the hard drive and isn't

465
00:23:56,190 --> 00:24:00,389
only our problem okay so basically this

466
00:24:00,389 --> 00:24:07,229
is the new system and you know it's

467
00:24:07,229 --> 00:24:11,489
described its described online and we've

468
00:24:11,489 --> 00:24:16,200
implemented most of it and okay it does

469
00:24:16,200 --> 00:24:18,710
you know it's it's actually I think

470
00:24:18,710 --> 00:24:21,899
quite modest and its goals but I think

471
00:24:21,899 --> 00:24:26,130
it accomplishes them well now there's

472
00:24:26,130 --> 00:24:27,480
couple you know there's a couple side

473
00:24:27,480 --> 00:24:34,170
notes right we can we can run we can

474
00:24:34,170 --> 00:24:36,270
accomplish this this adding of new users

475
00:24:36,270 --> 00:24:39,660
to sessions simply by adding the the

476
00:24:39,660 --> 00:24:42,390
users public key to the tip session key

477
00:24:42,390 --> 00:24:44,730
once you know once somebody approves the

478
00:24:44,730 --> 00:24:49,860
request we can run all of the the logic

479
00:24:49,860 --> 00:24:52,020
all of the Java scripts for recipients

480
00:24:52,020 --> 00:24:57,390
in a in an application that lives on a

481
00:24:57,390 --> 00:24:58,860
desktop environment so it's just a

482
00:24:58,860 --> 00:25:01,610
wrapper for JavaScript it's just a

483
00:25:01,610 --> 00:25:05,160
that's a native WebKit environment so

484
00:25:05,160 --> 00:25:08,730
it's just a v8 driver that lives that

485
00:25:08,730 --> 00:25:11,040
runs natively on on your your laptop

486
00:25:11,040 --> 00:25:14,000
instead of loading from a website and

487
00:25:14,000 --> 00:25:19,020
there are some interesting crypto

488
00:25:19,020 --> 00:25:21,360
there's some interesting Apes standards

489
00:25:21,360 --> 00:25:25,170
that we are waiting for for larger

490
00:25:25,170 --> 00:25:27,990
compliance across browsers to increase

491
00:25:27,990 --> 00:25:33,540
the speed of our implementation so the

492
00:25:33,540 --> 00:25:36,150
wc3 has a candidate recommendation for a

493
00:25:36,150 --> 00:25:38,610
web crypto API that we are waiting for

494
00:25:38,610 --> 00:25:43,260
to basically you know native AES and

495
00:25:43,260 --> 00:25:45,570
it's I think there's GCM there's a GC

496
00:25:45,570 --> 00:25:50,010
bag a stream cipher at GCM that's much

497
00:25:50,010 --> 00:25:54,330
faster that may become a standard across

498
00:25:54,330 --> 00:25:56,540
all the browsers which would let us

499
00:25:56,540 --> 00:26:01,470
increase the speed of file upload which

500
00:26:01,470 --> 00:26:06,060
would be great side notes um this is the

501
00:26:06,060 --> 00:26:09,960
system if you are interested at all in

502
00:26:09,960 --> 00:26:11,310
contributing to global leaks if you're

503
00:26:11,310 --> 00:26:12,870
interested in learning more about the

504
00:26:12,870 --> 00:26:14,940
system if you're interested in running

505
00:26:14,940 --> 00:26:19,470
up if you're interested in working with

506
00:26:19,470 --> 00:26:25,860
us either come to the oft see IRC

507
00:26:25,860 --> 00:26:28,590
network and join the channel global

508
00:26:28,590 --> 00:26:30,540
leaks weave email there's a website

509
00:26:30,540 --> 00:26:32,520
there's a github this project lives on

510
00:26:32,520 --> 00:26:36,150
github right now and this is my

511
00:26:36,150 --> 00:26:40,730
fingerprint and I am cynic on Oh FTC

512
00:26:40,730 --> 00:26:43,110
I'm not sure how much time I have but

513
00:26:43,110 --> 00:26:46,770
happy to answer any questions and thank

514
00:26:46,770 --> 00:26:49,110
you guys it's kind of a funky little

515
00:26:49,110 --> 00:27:03,200
environment but oh thank you later

516
00:27:03,200 --> 00:27:11,340
fantastic baby yeah I think there's one

517
00:27:11,340 --> 00:27:15,690
year oh god all right so i came in late

518
00:27:15,690 --> 00:27:18,060
for which I apologize and missed most of

519
00:27:18,060 --> 00:27:19,770
the actual stuff about JavaScript crypto

520
00:27:19,770 --> 00:27:21,600
but I'm curious have you had a chance to

521
00:27:21,600 --> 00:27:23,190
talk with nadeem Cabaye see about his

522
00:27:23,190 --> 00:27:27,080
PhD thesis no he is working on

523
00:27:27,080 --> 00:27:30,000
verifiable JavaScript and a compiler to

524
00:27:30,000 --> 00:27:32,880
to do that but to do to do a lot of the

525
00:27:32,880 --> 00:27:34,800
nasty verification work for you and the

526
00:27:34,800 --> 00:27:38,130
papers not out yet but global leaks is

527
00:27:38,130 --> 00:27:39,780
easy to remember I can poke you I can

528
00:27:39,780 --> 00:27:41,280
send a copy your way that way I wonder

529
00:27:41,280 --> 00:27:43,530
if I left out I'm super excited about it

530
00:27:43,530 --> 00:27:49,560
so that's great yeah we um a for running

531
00:27:49,560 --> 00:27:51,450
JavaScript in a browser there's all

532
00:27:51,450 --> 00:27:53,640
sorts of funky stuff i think it's S&I

533
00:27:53,640 --> 00:27:56,400
which is a na madison sni notes that's

534
00:27:56,400 --> 00:27:59,790
for jealous but uh I there's also like

535
00:27:59,790 --> 00:28:04,290
hash based verification and for you know

536
00:28:04,290 --> 00:28:06,750
you content that you know external CD n

537
00:28:06,750 --> 00:28:08,850
so you have some content of maybe an

538
00:28:08,850 --> 00:28:11,520
application and you store the hash of

539
00:28:11,520 --> 00:28:13,560
that application next to the the

540
00:28:13,560 --> 00:28:15,270
javascript file that you load in your

541
00:28:15,270 --> 00:28:21,600
HTML and like uh it seems like maybe you

542
00:28:21,600 --> 00:28:23,970
could do this in in global excuse case

543
00:28:23,970 --> 00:28:26,670
but you know that first once you hit

544
00:28:26,670 --> 00:28:29,640
that server the index page that you

545
00:28:29,640 --> 00:28:33,090
download is going to be at totally

546
00:28:33,090 --> 00:28:34,260
determined by that service you're

547
00:28:34,260 --> 00:28:37,140
trusting the server on first use but if

548
00:28:37,140 --> 00:28:39,300
it's you know if we if we generated a

549
00:28:39,300 --> 00:28:42,180
Chrome application or something okay

550
00:28:42,180 --> 00:28:43,650
maybe we could get around trusting this

551
00:28:43,650 --> 00:28:45,540
javascript in the browser and I be in an

552
00:28:45,540 --> 00:28:50,340
am so yeah and it's something yeah it

553
00:28:50,340 --> 00:28:52,460
spent a lot of time working on it

554
00:28:52,460 --> 00:28:57,420
it's kind of a crapshoot um so thank you

555
00:28:57,420 --> 00:29:04,070
guys i'll throw ya

