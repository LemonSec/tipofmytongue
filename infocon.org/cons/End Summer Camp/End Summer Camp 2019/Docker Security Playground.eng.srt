1
00:00:00,000 --> 00:00:02,700
good afternoon everyone thanks

2
00:00:02,700 --> 00:00:04,529
first of all for allowing us to

3
00:00:04,529 --> 00:00:07,049
participate in this beautiful event we are here

4
00:00:07,049 --> 00:00:10,740
to present this gentleman here who is

5
00:00:10,740 --> 00:00:13,230
called docker secret i playground which is

6
00:00:13,230 --> 00:00:15,839
a platform oriented to micro

7
00:00:15,839 --> 00:00:17,880
services that allows us to

8
00:00:17,880 --> 00:00:20,550
create attack scenarios on

9
00:00:20,550 --> 00:00:23,519
network infrastructures  that are visualized I

10
00:00:23,519 --> 00:00:25,710
introduce myself I am the second of these two

11
00:00:25,710 --> 00:00:28,769
francesco caturano I am a doctoral student

12
00:00:28,769 --> 00:00:30,179
at the federico ii university of

13
00:00:30,179 --> 00:00:33,870
naples he is second both for himself and that I

14
00:00:33,870 --> 00:00:35,700
am younger but also because I

15
00:00:35,700 --> 00:00:38,070
jumped on board the project a little

16
00:00:38,070 --> 00:00:40,440
later he who will speak  after gaetano

17
00:00:40,440 --> 00:00:44,280
perrone actually the creator and star

18
00:00:44,280 --> 00:00:48,270
of the presentation of what we are talking about

19
00:00:48,270 --> 00:00:49,530
there is a lot of talk clearly about

20
00:00:49,530 --> 00:00:52,050
cyber security and we don't like the term

21
00:00:52,050 --> 00:00:55,110
often because it is a bit too generic we

22
00:00:55,110 --> 00:00:56,730
rather like to talk about network security

23
00:00:56,730 --> 00:01:00,559
so we say put protection

24
00:01:00,559 --> 00:01:03,539
both systems and all  that infrastructure

25
00:01:03,539 --> 00:01:06,180
that then allows access to services and

26
00:01:06,180 --> 00:01:08,549
then we talk a lot about techn

27
00:01:08,549 --> 00:01:10,530
virtualization, referring to

28
00:01:10,530 --> 00:01:11,909
those that are a little younger, those a little

29
00:01:11,909 --> 00:01:15,150
lighter, read in particular with

30
00:01:15,150 --> 00:01:17,939
reference to ad hoc air, the contribution

31
00:01:17,939 --> 00:01:20,909
we make and point is the creation of a

32
00:01:20,909 --> 00:01:23,220
platform to which we give a meaning

33
00:01:23,220 --> 00:01:25,500
strongly linked to the study of

34
00:01:25,500 --> 00:01:28,320
internet security issues and  the

35
00:01:28,320 --> 00:01:29,880
contribution comes precisely from an

36
00:01:29,880 --> 00:01:32,310
approach that is the one with which

37
00:01:32,310 --> 00:01:34,140
we always do things very

38
00:01:34,140 --> 00:01:36,900
experimental very hands on and in fact

39
00:01:36,900 --> 00:01:39,210
we try to communicate the enthusiasm we

40
00:01:39,210 --> 00:01:40,860
have for this platform which is

41
00:01:40,860 --> 00:01:43,670
double because it is important to study

42
00:01:43,670 --> 00:01:46,200
network security for many figures

43
00:01:46,200 --> 00:01:48,479
in the field  of

44
00:01:48,479 --> 00:01:51,689
security consulting somehow in

45
00:01:51,689 --> 00:01:53,670
our modesty we find ourselves in

46
00:01:53,670 --> 00:01:54,600
our activities

47
00:01:54,600 --> 00:01:56,549
we say to carry out each of these

48
00:01:56,549 --> 00:01:58,159
roles that of

49
00:01:58,159 --> 00:02:00,710
developers that of penetration test

50
00:02:00,710 --> 00:02:04,520
air and systems administrators the

51
00:02:04,520 --> 00:02:06,469
problem is that if we want to do it and

52
00:02:06,469 --> 00:02:09,110
certainly I don't have to explain it in

53
00:02:09,110 --> 00:02:11,690
this  this seat if we want to do it going

54
00:02:11,690 --> 00:02:14,599
to use  let's say

55
00:02:14,599 --> 00:02:16,790
real network infrastructures

56
00:02:16,790 --> 00:02:18,080
we risk ending up like this

57
00:02:18,080 --> 00:02:21,590
gentleman here that poor kevin condor

58
00:02:21,590 --> 00:02:22,790
nyt nic

59
00:02:22,790 --> 00:02:25,310
let's say that he spent a

60
00:02:25,310 --> 00:02:27,349
good part of his life a good part of his life

61
00:02:27,349 --> 00:02:30,140
being there in progress by the

62
00:02:30,140 --> 00:02:33,950
judicial authorities defending himself also we

63
00:02:33,950 --> 00:02:36,970
often say with a point that  it made sense

64
00:02:36,970 --> 00:02:40,310
that basically he was going to

65
00:02:40,310 --> 00:02:42,670
carry out a test that in the end

66
00:02:42,670 --> 00:02:44,239
exposed what were the

67
00:02:44,239 --> 00:02:46,459
vulnerabilities of rather

68
00:02:46,459 --> 00:02:48,379
complex systems so what we learn from

69
00:02:48,379 --> 00:02:49,549
this experience

70
00:02:49,549 --> 00:02:52,280
an approach that is ethics la

71
00:02:52,280 --> 00:02:54,280
king that is to say

72
00:02:54,280 --> 00:02:56,599
we try to report that experience

73
00:02:56,599 --> 00:02:58,340
of penetration testing  of the

74
00:02:58,340 --> 00:03:00,440
vulnerability assessment, however, on

75
00:03:00,440 --> 00:03:01,819
what are virtualized network infrastructures

76
00:03:01,819 --> 00:03:04,790
and therefore represent

77
00:03:04,790 --> 00:03:06,410
a real tenth album

78
00:03:06,410 --> 00:03:08,599
real armament which however is loaded without

79
00:03:08,599 --> 00:03:11,959
prejudice to dockers duty playground

80
00:03:11,959 --> 00:03:13,579
thus becomes a system that allows the

81
00:03:13,579 --> 00:03:15,169
creation and management

82
00:03:15,169 --> 00:03:17,750
of network infrastructures  that are virtual

83
00:03:17,750 --> 00:03:19,849
to which we give access  strongly

84
00:03:19,849 --> 00:03:22,130
linked to the study of

85
00:03:22,130 --> 00:03:23,090


86
00:03:23,090 --> 00:03:25,700
internet security how, by developing a set of

87
00:03:25,700 --> 00:03:28,030
laboratories, each of which

88
00:03:28,030 --> 00:03:30,169
focuses on a specific security aspect, they

89
00:03:30,169 --> 00:03:32,780
are publicly available

90
00:03:32,780 --> 00:03:34,250
on the internet that is, let's say they can be

91
00:03:34,250 --> 00:03:36,109
shared with a

92
00:03:36,109 --> 00:03:39,290
clearly open source community and which are based

93
00:03:39,290 --> 00:03:41,349
on a convention that we have

94
00:03:41,349 --> 00:03:44,299
introduced us and that I will briefly describe

95
00:03:44,299 --> 00:03:45,520


96
00:03:45,520 --> 00:03:48,280
in one of the following slides what are

97
00:03:48,280 --> 00:03:50,410
the objectives we have said to study

98
00:03:50,410 --> 00:03:51,760
internet security in some way we cover

99
00:03:51,760 --> 00:03:53,260
each of these requirements

100
00:03:53,260 --> 00:03:56,860
in our daily activities

101
00:03:56,860 --> 00:03:58,480


102
00:03:58,480 --> 00:04:00,370
so in addition to studying security we

103
00:04:00,370 --> 00:04:03,310
introduce the black backs to the

104
00:04:03,310 --> 00:04:04,630
study of  security we use it

105
00:04:04,630 --> 00:04:07,330
for example in the network

106
00:04:07,330 --> 00:04:09,370
security course that is held by our

107
00:04:09,370 --> 00:04:11,080
advisor is carried out between them at

108
00:04:11,080 --> 00:04:15,370
the federico ii in naples and to

109
00:04:15,370 --> 00:04:18,670
surely then simulate attack scenarios the

110
00:04:18,670 --> 00:04:20,670
complex and then actually

111
00:04:20,670 --> 00:04:23,830
experiment with

112
00:04:23,830 --> 00:04:28,540
innovative solutions and thanks  ie to the

113
00:04:28,540 --> 00:04:30,160
platform that is that of

114
00:04:30,160 --> 00:04:31,660
light virtualization docker in

115
00:04:31,660 --> 00:04:34,420
fact we reduce many of the costs,

116
00:04:34,420 --> 00:04:36,700
let's say the heaviness that

117
00:04:36,700 --> 00:04:39,340
would lead us to the use of

118
00:04:39,340 --> 00:04:41,650
classic virtualization to virtual machines

119
00:04:41,650 --> 00:04:42,190


120
00:04:42,190 --> 00:04:44,380
which are the bricks on which the

121
00:04:44,380 --> 00:04:47,260
secret docker of playground is formed in the end it

122
00:04:47,260 --> 00:04:49,270
becomes a  platform that allows you to

123
00:04:49,270 --> 00:04:53,410
create through a drag

124
00:04:53,410 --> 00:04:55,930
and drop interface very simple to use

125
00:04:55,930 --> 00:04:57,970
the output of the creation of a

126
00:04:57,970 --> 00:05:00,280
laboratory is a file that the file docker

127
00:05:00,280 --> 00:05:03,130
comples poker composed is another

128
00:05:03,130 --> 00:05:05,080
tool that relies on clear do

129
00:05:05,080 --> 00:05:06,760
that allows you to create

130
00:05:06,760 --> 00:05:12,940
multi applications  in container the

131
00:05:12,940 --> 00:05:15,540
fundamental part therefore the data on which

132
00:05:15,540 --> 00:05:18,220
the application works are undoubtedly the

133
00:05:18,220 --> 00:05:21,160
laboratories but let's say all around there is

134
00:05:21,160 --> 00:05:22,810
a set of vulnerable docker images

135
00:05:22,810 --> 00:05:24,970
that we clearly create

136
00:05:24,970 --> 00:05:27,130
by art is a set of what we

137
00:05:27,130 --> 00:05:29,020
call actus that  in the end they are

138
00:05:29,020 --> 00:05:31,900
always docker images but they

139
00:05:31,900 --> 00:05:34,660
represent the tools that the china

140
00:05:34,660 --> 00:05:37,350
of Fr.  enetration test air let's say

141
00:05:37,350 --> 00:05:39,160
transferred in the form of docker

142
00:05:39,160 --> 00:05:42,010
contain you use to carry out

143
00:05:42,010 --> 00:05:44,169
the ex floyd however the penetration test

144
00:05:44,169 --> 00:05:46,840
of the laboratories that are carried out

145
00:05:46,840 --> 00:05:49,150
I do not know if you are familiar with works

146
00:05:49,150 --> 00:05:52,240
that I have already mentioned many times up

147
00:05:52,240 --> 00:05:53,650
to now

148
00:05:53,650 --> 00:05:55,570
we could talk about it from many  points of

149
00:05:55,570 --> 00:05:57,940
view this is a view that we

150
00:05:57,940 --> 00:05:59,770
particularly like because it gives us a bit of

151
00:05:59,770 --> 00:06:02,080
an idea of what are the

152
00:06:02,080 --> 00:06:04,150
activities that we commonly do

153
00:06:04,150 --> 00:06:06,449
when we use docker, that is to say

154
00:06:06,449 --> 00:06:08,770
we have a client installed on

155
00:06:08,770 --> 00:06:10,690
our machine that communicates with a

156
00:06:10,690 --> 00:06:12,520
server that  typically always knows

157
00:06:12,520 --> 00:06:15,130
about our machine and the typical

158
00:06:15,130 --> 00:06:16,810
operations we ask him to do

159
00:06:16,810 --> 00:06:19,539
let's take one for example doc were

160
00:06:19,539 --> 00:06:22,720
that is, run a container

161
00:06:22,720 --> 00:06:24,160
this is a request that is

162
00:06:24,160 --> 00:06:28,600
made to the dock airserver which

163
00:06:28,600 --> 00:06:31,180
communicates precisely with a docker daemon

164
00:06:31,180 --> 00:06:33,010
running constantly on ours

165
00:06:33,010 --> 00:06:34,539
machine and allows you to

166
00:06:34,539 --> 00:06:36,310
run a container

167
00:06:36,310 --> 00:06:38,639
what is a container no  n an isolated

168
00:06:38,639 --> 00:06:40,389
virtualized environment at the operating system level

169
00:06:40,389 --> 00:06:42,699
then then all contain in

170
00:06:42,699 --> 00:06:44,710
effect then when they are put into

171
00:06:44,710 --> 00:06:46,570
execution they become processes

172
00:06:46,570 --> 00:06:49,830
within our operating system

173
00:06:49,830 --> 00:06:52,240
what stalled inside the container

174
00:06:52,240 --> 00:06:55,990
and here the design paradigm comes into play

175
00:06:55,990 --> 00:06:57,849
which is that of micro services

176
00:06:57,849 --> 00:06:59,919
for which I stalled within a

177
00:06:59,919 --> 00:07:01,840
content the sun those functionalities

178
00:07:01,840 --> 00:07:03,880
those components that allow you to

179
00:07:03,880 --> 00:07:06,880
create a single micro service

180
00:07:06,880 --> 00:07:08,620
functionality let's say components that are

181
00:07:08,620 --> 00:07:10,380
strongly coupled to each other

182
00:07:10,380 --> 00:07:12,580
the skeleton of all these

183
00:07:12,580 --> 00:07:17,889
functionalities of these components  I said

184
00:07:17,889 --> 00:07:20,580
the skeleton of all these components

185
00:07:20,580 --> 00:07:22,960
represents the image of the

186
00:07:22,960 --> 00:07:25,030
docker container which typically can be

187
00:07:25,030 --> 00:07:27,099
kept within a

188
00:07:27,099 --> 00:07:29,949
public register the Arabic doc and this is the other

189
00:07:29,949 --> 00:07:31,599
gentleman they fly before it is necessary to

190
00:07:31,599 --> 00:07:35,139
compose that both endeavors that where

191
00:07:35,139 --> 00:07:38,139
the composer heads to a paradigm that

192
00:07:38,139 --> 00:07:40,210
that of infrastructure and scott

193
00:07:40,210 --> 00:07:42,370
according to q  hen I

194
00:07:42,370 --> 00:07:44,220
describe an entire

195
00:07:44,220 --> 00:07:48,220
virtual infrastructure together with all the part of

196
00:07:48,220 --> 00:07:49,419
procurement of the resources

197
00:07:49,419 --> 00:07:52,090
necessary to execute and

198
00:07:52,090 --> 00:07:54,220
manage this infrastructure by writing

199
00:07:54,220 --> 00:07:55,990
substantially some code

200
00:07:55,990 --> 00:07:58,830
inside a single file

201
00:07:59,680 --> 00:08:01,240
at this point the meaning comes into play

202
00:08:01,240 --> 00:08:04,060
linked to the security that

203
00:08:04,060 --> 00:08:05,169
we give to the development of this

204
00:08:05,169 --> 00:08:06,370
platform

205
00:08:06,370 --> 00:08:08,349
and it is precisely this docker

206
00:08:08,349 --> 00:08:11,710
image brower convention substantially in addition to the

207
00:08:11,710 --> 00:08:13,419
creation of the laboratories through a

208
00:08:13,419 --> 00:08:15,490
drag and drop interface which then

209
00:08:15,490 --> 00:08:17,409
become together to contain that

210
00:08:17,409 --> 00:08:19,419
are put into execution and with

211
00:08:19,419 --> 00:08:21,340
which we can interact through  a

212
00:08:21,340 --> 00:08:25,330
set of hack tools when

213
00:08:25,330 --> 00:08:27,639
the images are created so what I

214
00:08:27,639 --> 00:08:29,440
stall inside a container which

215
00:08:29,440 --> 00:08:31,029
must be vulnerable if we want to

216
00:08:31,029 --> 00:08:32,620
create connectable labs

217
00:08:32,620 --> 00:08:35,200
think for example of the challenges capture

218
00:08:35,200 --> 00:08:38,140
the flag I

219
00:08:38,140 --> 00:08:40,150
generally need to customize them

220
00:08:40,150 --> 00:08:42,250
customize these images means

221
00:08:42,250 --> 00:08:43,659
let's say do a series of operations and

222
00:08:43,659 --> 00:08:44,950
then allow these operations

223
00:08:44,950 --> 00:08:48,760
to be entered directly

224
00:08:48,760 --> 00:08:51,970
from the graphical interface then we

225
00:08:51,970 --> 00:08:54,220
basically invented this

226
00:08:54,220 --> 00:08:56,140
convention which is based on let's say the

227
00:08:56,140 --> 00:09:00,120
same syntax of the doc and poker files

228
00:09:00,120 --> 00:09:02,860
which is based on the concept of action

229
00:09:02,860 --> 00:09:04,779
let's do a  example the first thing I

230
00:09:04,779 --> 00:09:06,579
do when I am developing a

231
00:09:06,579 --> 00:09:08,770
scenario that wants to be let's say

232
00:09:08,770 --> 00:09:10,630
shared to become a

233
00:09:10,630 --> 00:09:12,070
real capture the flag

234
00:09:12,070 --> 00:09:13,420
the first thing I do when

235
00:09:13,420 --> 00:09:15,520
the virtual machine is stalled for example

236
00:09:15,520 --> 00:09:17,350
in the classic approach is to

237
00:09:17,350 --> 00:09:19,600
insert the flag which then  it will have to be

238
00:09:19,600 --> 00:09:21,550
captured at the end of the challenge

239
00:09:21,550 --> 00:09:23,440
this operation is somehow

240
00:09:23,440 --> 00:09:25,480
parameterized it becomes a script that

241
00:09:25,480 --> 00:09:27,050
is made available

242
00:09:27,050 --> 00:09:29,240
image when I

243
00:09:29,240 --> 00:09:31,250
want to

244
00:09:31,250 --> 00:09:34,010
interactively create this new laboratory from the graphical interface and

245
00:09:34,010 --> 00:09:36,440
I want it to be, for example, a future

246
00:09:36,440 --> 00:09:38,750
capture the flag directly

247
00:09:38,750 --> 00:09:40,700
from the interface  graphics if the

248
00:09:40,700 --> 00:09:42,560
image supports it at  through this

249
00:09:42,560 --> 00:09:45,380
convention it will be possible to insert

250
00:09:45,380 --> 00:09:47,240
it very easily without the

251
00:09:47,240 --> 00:09:48,890
need for the developer to

252
00:09:48,890 --> 00:09:50,870
know precisely the syntax

253
00:09:50,870 --> 00:09:53,920
ledogar file

254
00:09:54,470 --> 00:09:57,350
this is a view let's say that it gives us a

255
00:09:57,350 --> 00:09:59,029
little idea even if over

256
00:09:59,029 --> 00:10:01,880
time it has been enriched gives us a little  the idea

257
00:10:01,880 --> 00:10:03,890
of the set of v airest falls

258
00:10:03,890 --> 00:10:06,260
of the application docker secrets

259
00:10:06,260 --> 00:10:08,420
playground there is a part linked for

260
00:10:08,420 --> 00:10:10,399
example to the configuration files because

261
00:10:10,399 --> 00:10:11,440
when installing the

262
00:10:11,440 --> 00:10:15,200
application on our

263
00:10:15,200 --> 00:10:16,040
host machine

264
00:10:16,040 --> 00:10:17,810
the first thing I do is create  a

265
00:10:17,810 --> 00:10:19,160
folder in which

266
00:10:19,160 --> 00:10:21,709
all the laboratories

267
00:10:21,709 --> 00:10:24,709
that the user intends to develop will be stored then there is

268
00:10:24,709 --> 00:10:26,690
a whole part linked to the

269
00:10:26,690 --> 00:10:28,490
actual laboratories so when I create a

270
00:10:28,490 --> 00:10:30,589
laboratory I do the post operation

271
00:10:30,589 --> 00:10:32,300
when I modify it when I put it in

272
00:10:32,300 --> 00:10:34,760
execution when I go to read all

273
00:10:34,760 --> 00:10:40,300
the information it related to the laboratories

274
00:10:40,300 --> 00:10:42,290
as it happens let's say the

275
00:10:42,290 --> 00:10:45,459
configuration of the laboratories

276
00:10:45,459 --> 00:10:48,170
substantially or  Each laboratory is

277
00:10:48,170 --> 00:10:50,839
made up of a set of containing and

278
00:10:50,839 --> 00:10:53,300
let's say a network infrastructure to

279
00:10:53,300 --> 00:10:55,690
support these containers,

280
00:10:55,690 --> 00:10:58,970
let's see for example the

281
00:10:58,970 --> 00:11:04,240
next image to give you an idea of

282
00:11:04,250 --> 00:11:07,190
the typical layout of the

283
00:11:07,190 --> 00:11:09,410
drag'n'drop interface I have a set of letters

284
00:11:09,410 --> 00:11:11,959
that I can say drag

285
00:11:11,959 --> 00:11:14,899
inside this white canvas I can go and

286
00:11:14,899 --> 00:11:17,149
connect them according to

287
00:11:17,149 --> 00:11:18,529
clearly the scenario I intend to

288
00:11:18,529 --> 00:11:21,350
create and then I can enter a

289
00:11:21,350 --> 00:11:23,810
configuration panel linked to the

290
00:11:23,810 --> 00:11:24,490
film

291
00:11:24,490 --> 00:11:28,730
element which then when the

292
00:11:28,730 --> 00:11:30,319
laboratory is performed becomes everyone

293
00:11:30,319 --> 00:11:32,509
the effects a dockery container

294
00:11:32,509 --> 00:11:35,420
running on your machine when

295
00:11:35,420 --> 00:11:36,620
I go to carry out the configuration for example

296
00:11:36,620 --> 00:11:38,800
each element I choose

297
00:11:38,800 --> 00:11:41,509
the image to install inside

298
00:11:41,509 --> 00:11:42,819
that container

299
00:11:42,819 --> 00:11:45,500
each of these laboratories then can

300
00:11:45,500 --> 00:11:48,230
be shared with an open

301
00:11:48,230 --> 00:11:51,199
source community for example the folder I was saying

302
00:11:51,199 --> 00:11:52,819
before it installs you on your

303
00:11:52,819 --> 00:11:58,430
system you automatically hear something

304
00:11:58,430 --> 00:12:00,439
it can and do  be synchronized with a

305
00:12:00,439 --> 00:12:02,089
club repository and then made

306
00:12:02,089 --> 00:12:04,639
available to the open source community

307
00:12:04,639 --> 00:12:07,100
and then shared with any

308
00:12:07,100 --> 00:12:09,920
user who wants to import the laboratories that

309
00:12:09,920 --> 00:12:12,079
you have developed in the

310
00:12:12,079 --> 00:12:14,480
personal version of having to secrets

311
00:12:14,480 --> 00:12:17,839
playground to conclude I go back

312
00:12:17,839 --> 00:12:20,000
then passed the word Gaetano for the part

313
00:12:20,000 --> 00:12:23,300
final the presentation which are

314
00:12:23,300 --> 00:12:25,160
let's say the actors involved

315
00:12:25,160 --> 00:12:27,860
in the development of the application various

316
00:12:27,860 --> 00:12:29,959
figures certainly the developers

317
00:12:29,959 --> 00:12:32,449
then those who maintain the code

318
00:12:32,449 --> 00:12:35,779
including us those who

319
00:12:35,779 --> 00:12:38,660
develop the laboratories therefore who have

320
00:12:38,660 --> 00:12:40,399
skills for example in the field of

321
00:12:40,399 --> 00:12:42,350
penetration testing in the field

322
00:12:42,350 --> 00:12:44,389
vulnerability assessment and have fun

323
00:12:44,389 --> 00:12:46,490
precisely in creating laboratories with

324
00:12:46,490 --> 00:12:48,189
which you can then experiment

325
00:12:48,189 --> 00:12:52,220
later students clearly who

326
00:12:52,220 --> 00:12:54,230
use the laboratories that

327
00:12:54,230 --> 00:12:59,060
interact interactively and those

328
00:12:59,060 --> 00:13:00,740
who instead directly develop

329
00:13:00,740 --> 00:13:02,949
vulnerable images so let's say I'm

330
00:13:02,949 --> 00:13:06,589
going to s  develop a version of

331
00:13:06,589 --> 00:13:09,470
a certain service that is a black

332
00:13:09,470 --> 00:13:10,759
bile I want to make it available

333
00:13:10,759 --> 00:13:13,699
through a container where if I know

334
00:13:13,699 --> 00:13:16,189
the fake poker syntax I know the

335
00:13:16,189 --> 00:13:17,449
convention that

336
00:13:17,449 --> 00:13:19,699
I previously produced I can create

337
00:13:19,699 --> 00:13:22,639
images in special to use in the

338
00:13:22,639 --> 00:13:25,490
creation of subsequent laboratories

339
00:13:25,490 --> 00:13:27,950
passed at this point  the word believe

340
00:13:27,950 --> 00:13:30,200
that it will describe the workshops that

341
00:13:30,200 --> 00:13:33,890
were created when di sp was

342
00:13:33,890 --> 00:13:36,140
presented as part of

343
00:13:36,140 --> 00:13:38,270
the black cat conference

344
00:13:38,270 --> 00:13:40,910
in las vegas in august 2000 18

345
00:13:40,910 --> 00:13:43,779
thanks for your attention

346
00:13:44,500 --> 00:13:47,700
[Applause]

347
00:13:48,850 --> 00:13:52,600
hi to all I am gaetano perrone

348
00:13:52,600 --> 00:13:55,540
developer creatures  of dockers

349
00:13:55,540 --> 00:13:57,830
I will try to be brief also because I

350
00:13:57,830 --> 00:14:02,649
am very annoyed I hear jam it is

351
00:14:02,649 --> 00:14:05,029
basically we have created

352
00:14:05,029 --> 00:14:07,550
this scenario to present our

353
00:14:07,550 --> 00:14:09,860
idea has blocked fortunately they

354
00:14:09,860 --> 00:14:13,610
accepted it my doctoral professor

355
00:14:13,610 --> 00:14:15,200
also I liked the federico ii

356
00:14:15,200 --> 00:14:17,630
we are pietro romano a  to present it

357
00:14:17,630 --> 00:14:20,750
we created a capture the fla  g perhaps

358
00:14:20,750 --> 00:14:24,490
a little too difficult in general

359
00:14:24,490 --> 00:14:28,339
that it would show a little all the

360
00:14:28,339 --> 00:14:30,740
functionalities let's say we have to security

361
00:14:30,740 --> 00:14:33,529
playground if you see in this image

362
00:14:33,529 --> 00:14:35,990
now the interface has changed but in

363
00:14:35,990 --> 00:14:38,270
general

364
00:14:38,270 --> 00:14:42,290
there are three machines of the same and the idea was to

365
00:14:42,290 --> 00:14:44,230
insert some  flag in the first machine

366
00:14:44,230 --> 00:14:47,149
both as a normal user as root user

367
00:14:47,149 --> 00:14:50,770
and the information that was needed to

368
00:14:50,770 --> 00:14:54,250
have access to the second machine

369
00:14:54,250 --> 00:14:57,410
get other flags and finally we say with

370
00:14:57,410 --> 00:14:59,329
these flags exploit

371
00:14:59,329 --> 00:15:01,430
vulnerabilities on the third machine to

372
00:15:01,430 --> 00:15:04,820
access then we say at the completion of

373
00:15:04,820 --> 00:15:06,050
everything

374
00:15:06,050 --> 00:15:12,060
in the challenge basically as it is

375
00:15:12,060 --> 00:15:15,750
it was made first let's say I

376
00:15:15,750 --> 00:15:18,750
created some scripts

377
00:15:18,750 --> 00:15:20,430
inside each of the machines

378
00:15:20,430 --> 00:15:22,710
for each service

379
00:15:22,710 --> 00:15:26,010
the first is an apache image

380
00:15:26,010 --> 00:15:29,340
so let's say the script trivially a

381
00:15:29,340 --> 00:15:32,700
service start at peace within

382
00:15:32,700 --> 00:15:35,460
a vulnerable application on a port

383
00:15:35,460 --> 00:15:39,300
let's say not  standard 1 2 3 4 5 and

384
00:15:39,300 --> 00:15:41,520
then let's say using a speed

385
00:15:41,520 --> 00:15:43,470
of local file inc  lusion an attacker

386
00:15:43,470 --> 00:15:46,470
could be able to access the

387
00:15:46,470 --> 00:15:49,770
machine with let's say normal privileges and

388
00:15:49,770 --> 00:15:53,040
then be able to obtain excalation privileges with a heel of

389
00:15:53,040 --> 00:15:55,860
privileges by modifying a

390
00:15:55,860 --> 00:15:57,960
configuration file called past

391
00:15:57,960 --> 00:15:59,610
vidi which contains the list of all

392
00:15:59,610 --> 00:16:02,520
passwords in linux you will know very well that

393
00:16:02,520 --> 00:16:05,970
however it was attributable  from all users

394
00:16:05,970 --> 00:16:08,010
we say to be able to obtain

395
00:16:08,010 --> 00:16:09,660
root access

396
00:16:09,660 --> 00:16:12,120
how then to create other actions

397
00:16:12,120 --> 00:16:14,460
that would allow the creator in this

398
00:16:14,460 --> 00:16:17,010
case then to make a

399
00:16:17,010 --> 00:16:20,760
file editable in this case step pd on mai

400
00:16:20,760 --> 00:16:22,740
sequel instead on the second machine

401
00:16:22,740 --> 00:16:24,690
a service was created let's say never

402
00:16:24,690 --> 00:16:27,120
sequel with a vulnerability called

403
00:16:27,120 --> 00:16:29,520
user defined function vulnerability that

404
00:16:29,520 --> 00:16:32,700
allows 1 as an attacker to be able to

405
00:16:32,700 --> 00:16:35,060
practically inject

406
00:16:35,060 --> 00:16:38,130
functionalities that inter through the never

407
00:16:38,130 --> 00:16:41,700
sequel client to interact with let's say

408
00:16:41,700 --> 00:16:43,080
a month two need to inject

409
00:16:43,080 --> 00:16:44,760
functionalities that allow then to

410
00:16:44,760 --> 00:16:47,060
accept

411
00:16:56,730 --> 00:17:03,730
test test ok is therefore  let's say

412
00:17:03,730 --> 00:17:06,579
background concept is c  h by capturing flags on

413
00:17:06,579 --> 00:17:08,349
this side of the first machine from the

414
00:17:08,349 --> 00:17:10,569
second machine I was able to pierce the

415
00:17:10,569 --> 00:17:13,510
third machine and obviously to access

416
00:17:13,510 --> 00:17:15,010
the first machine I needed a

417
00:17:15,010 --> 00:17:16,209
browser

418
00:17:16,209 --> 00:17:18,160
there are various possibilities

419
00:17:18,160 --> 00:17:20,440
to access a container container via browser or

420
00:17:20,440 --> 00:17:24,490
expose the port on the  your host

421
00:17:24,490 --> 00:17:28,240
or via vpn you create an entry point

422
00:17:28,240 --> 00:17:31,180
within the network or what

423
00:17:31,180 --> 00:17:33,010
you want to do you can use what

424
00:17:33,010 --> 00:17:34,870
is called in di sp a hack tool

425
00:17:34,870 --> 00:17:37,780
that is practically a tool that

426
00:17:37,780 --> 00:17:39,340
hackers could use that is

427
00:17:39,340 --> 00:17:42,780
simulated within the infrastructure

428
00:17:42,780 --> 00:17:45,670
in this case for this laboratory

429
00:17:45,670 --> 00:17:48,940
we have created 3h tullo 1 and browser is a

430
00:17:48,940 --> 00:17:51,370
fire phone containing firefox that is

431
00:17:51,370 --> 00:17:54,430
inside the network practically of let's say

432
00:17:54,430 --> 00:17:57,550
vulnerable so I inside my

433
00:17:57,550 --> 00:18:00,100
browser ships with a particular url that

434
00:18:00,100 --> 00:18:02,050
makes me and it was another browser than the

435
00:18:02,050 --> 00:18:03,970
container  that is inside the net like

436
00:18:03,970 --> 00:18:10,120
matryoshka says there is an image is this

437
00:18:10,120 --> 00:18:11,560
then I am inside my browser of the

438
00:18:11,560 --> 00:18:13,330
bone and inside  they see practically

439
00:18:13,330 --> 00:18:17,020
a browser that is this below

440
00:18:17,020 --> 00:18:19,480
I am in a container that is a browser that

441
00:18:19,480 --> 00:18:21,250
is inside the internal network so it is

442
00:18:21,250 --> 00:18:24,460
completely an isolated environment

443
00:18:24,460 --> 00:18:26,410
there is another acute one that is the one that

444
00:18:26,410 --> 00:18:28,960
contains almost all the images almost

445
00:18:28,960 --> 00:18:31,990
all the usual tools  of dips is obviously

446
00:18:31,990 --> 00:18:33,640
very light compared to a

447
00:18:33,640 --> 00:18:35,820
galia distribution about 2 gb

448
00:18:35,820 --> 00:18:38,740
our idea to the east of evolving the

449
00:18:38,740 --> 00:18:40,300
concept of happened what we

450
00:18:40,300 --> 00:18:43,090
define a catullo oneliner there is

451
00:18:43,090 --> 00:18:44,800
practically there is a particular option

452
00:18:44,800 --> 00:18:46,570
in duty that allows you to launch a

453
00:18:46,570 --> 00:18:48,700
command then start a container

454
00:18:48,700 --> 00:18:51,490
destroy it immediately the idea of integrating it

455
00:18:51,490 --> 00:18:53,440
in di sp so now our

456
00:18:53,440 --> 00:18:54,730
development activities are mainly

457
00:18:54,730 --> 00:18:57,670
focused on this is practically

458
00:18:57,670 --> 00:18:59,470
therefore giving users the possibility

459
00:18:59,470 --> 00:19:01,660
to have a set of tools to

460
00:19:01,660 --> 00:19:02,770
use

461
00:19:02,770 --> 00:19:04,630
within the album that  one can

462
00:19:04,630 --> 00:19:06,970
basically choose to launch and then

463
00:19:06,970 --> 00:19:09,250
restore the system as it was

464
00:19:09,250 --> 00:19:12,250
before launching it currently the accumulations

465
00:19:12,250 --> 00:19:13,810
work in mode  damon and then they

466
00:19:13,810 --> 00:19:15,220
are running

467
00:19:15,220 --> 00:19:17,740
let's say inside your operating system it

468
00:19:17,740 --> 00:19:19,920


469
00:19:20,760 --> 00:19:24,400
's okay so let's say this is for

470
00:19:24,400 --> 00:19:26,380
example another tough one who uses a

471
00:19:26,380 --> 00:19:29,470
service that makes use of the web socket

472
00:19:29,470 --> 00:19:31,930
to access white shark so if

473
00:19:31,930 --> 00:19:33,730
even sciacca inside contains dog

474
00:19:33,730 --> 00:19:36,640
with  containers must almost possible to

475
00:19:36,640 --> 00:19:38,290
transform everything through a

476
00:19:38,290 --> 00:19:41,700
micro services approach

477
00:19:41,800 --> 00:19:45,310
ok this we say the link we say we

478
00:19:45,310 --> 00:19:47,740
have to injured great is present on who

479
00:19:47,740 --> 00:19:49,780
tab is an open source project licensed

480
00:19:49,780 --> 00:19:52,920
with anyone who wants to help us we say to

481
00:19:52,920 --> 00:19:55,830
develop features to create laboratories

482
00:19:55,830 --> 00:19:59,230
anything we are very happy to

483
00:19:59,230 --> 00:20:01,890
welcome it

484
00:20:02,500 --> 00:20:06,400
is this the and updated the this

485
00:20:06,400 --> 00:20:10,290
we skip if you have any questions we are here

486
00:20:10,290 --> 00:20:13,290
thanks

487
00:20:13,400 --> 00:20:22,299
[Applause]

