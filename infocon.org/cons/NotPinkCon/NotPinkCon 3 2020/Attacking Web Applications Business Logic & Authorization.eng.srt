1
00:00:06,960 --> 00:00:07,839
hi everyone

2
00:00:07,839 --> 00:00:10,719
uh my name is denise i welcome you all

3
00:00:10,719 --> 00:00:11,040
to

4
00:00:11,040 --> 00:00:12,719
not being calm for those who you are

5
00:00:12,719 --> 00:00:14,400
just joining the session

6
00:00:14,400 --> 00:00:16,720
uh i'm gonna be your hostess alongside

7
00:00:16,720 --> 00:00:17,760
uh sheila

8
00:00:17,760 --> 00:00:20,560
in this track and our next talk it's

9
00:00:20,560 --> 00:00:21,039
also

10
00:00:21,039 --> 00:00:22,560
in english and that is why i'm

11
00:00:22,560 --> 00:00:24,400
presenting in english as well but be

12
00:00:24,400 --> 00:00:25,519
sure to check our

13
00:00:25,519 --> 00:00:28,240
live translation uh channel on discord

14
00:00:28,240 --> 00:00:28,720
so

15
00:00:28,720 --> 00:00:31,679
don't miss out on that uh i'm i hope you

16
00:00:31,679 --> 00:00:32,880
are enjoying the conference

17
00:00:32,880 --> 00:00:35,920
so far i am i'm definitely am

18
00:00:35,920 --> 00:00:38,079
i'm so excited about presenting our next

19
00:00:38,079 --> 00:00:40,559
speaker because she comes from far far

20
00:00:40,559 --> 00:00:41,600
away and she's

21
00:00:41,600 --> 00:00:43,280
such a cool professional when it comes

22
00:00:43,280 --> 00:00:45,200
to cyber security

23
00:00:45,200 --> 00:00:48,640
she's a phd candidate on in computer

24
00:00:48,640 --> 00:00:52,160
science and she has an amazing blog so

25
00:00:52,160 --> 00:00:54,000
be sure to check it out afterwards

26
00:00:54,000 --> 00:00:54,559
because

27
00:00:54,559 --> 00:00:58,079
she writes a very detailed vlogs on

28
00:00:58,079 --> 00:01:00,480
web applications and and security in

29
00:01:00,480 --> 00:01:01,199
general

30
00:01:01,199 --> 00:01:04,640
so be sure to check it out um today

31
00:01:04,640 --> 00:01:05,920
she's going to talk about web

32
00:01:05,920 --> 00:01:08,479
applications particularly authorization

33
00:01:08,479 --> 00:01:09,760
and web applications

34
00:01:09,760 --> 00:01:11,040
and she's going to talk about she's

35
00:01:11,040 --> 00:01:13,200
going to dissect a very common type of

36
00:01:13,200 --> 00:01:14,400
vulnerability

37
00:01:14,400 --> 00:01:17,600
that is the idol vulnerability

38
00:01:17,600 --> 00:01:20,240
but the truth is a lot of people may not

39
00:01:20,240 --> 00:01:20,640
really

40
00:01:20,640 --> 00:01:24,000
understand what are the basics of

41
00:01:24,000 --> 00:01:26,240
this flaws and how what are the

42
00:01:26,240 --> 00:01:28,159
consequences for the applications

43
00:01:28,159 --> 00:01:30,960
so uh without further to say i'd like to

44
00:01:30,960 --> 00:01:31,439
welcome

45
00:01:31,439 --> 00:01:35,919
aisha to our not to not be gone

46
00:01:38,240 --> 00:01:40,880
hi everyone today i will talk about

47
00:01:40,880 --> 00:01:42,960
attacking web application business logic

48
00:01:42,960 --> 00:01:45,040
and authorization

49
00:01:45,040 --> 00:01:47,439
okay first i'd like to talk about who am

50
00:01:47,439 --> 00:01:48,320
i

51
00:01:48,320 --> 00:01:51,439
um my name is aisha gigandos i'm a phd

52
00:01:51,439 --> 00:01:53,040
candidate at computer engineering

53
00:01:53,040 --> 00:01:54,000
department

54
00:01:54,000 --> 00:01:57,119
in istanbul and i'm an active member of

55
00:01:57,119 --> 00:01:59,119
women developers of turkey

56
00:01:59,119 --> 00:02:02,479
i love and i'm a fan of application

57
00:02:02,479 --> 00:02:05,119
security and data science i do my thai

58
00:02:05,119 --> 00:02:06,640
in my free time

59
00:02:06,640 --> 00:02:08,160
if you would like to follow me you can

60
00:02:08,160 --> 00:02:10,560
either either follow me

61
00:02:10,560 --> 00:02:13,840
on twitter or medium those are my

62
00:02:13,840 --> 00:02:16,560
usernames

63
00:02:16,959 --> 00:02:20,160
okay let's talk about our table of

64
00:02:20,160 --> 00:02:21,520
contents

65
00:02:21,520 --> 00:02:24,640
first i will give brief information

66
00:02:24,640 --> 00:02:26,400
about web application architecture

67
00:02:26,400 --> 00:02:27,440
revolution

68
00:02:27,440 --> 00:02:31,120
which is the difference between how was

69
00:02:31,120 --> 00:02:34,160
the architecture at the past and how is

70
00:02:34,160 --> 00:02:35,040
it today

71
00:02:35,040 --> 00:02:38,080
the modern web architecture

72
00:02:38,080 --> 00:02:39,840
and then we will talk about business

73
00:02:39,840 --> 00:02:42,080
logic then we will talk about

74
00:02:42,080 --> 00:02:43,680
authorization and

75
00:02:43,680 --> 00:02:46,720
authentication and then

76
00:02:46,720 --> 00:02:49,840
i will give information

77
00:02:49,840 --> 00:02:53,280
about access control and um

78
00:02:53,280 --> 00:02:56,160
insecure direct object references then i

79
00:02:56,160 --> 00:02:57,760
will try to elaborate

80
00:02:57,760 --> 00:03:01,360
the idol with real life examples

81
00:03:01,360 --> 00:03:05,440
and um i will try to explain

82
00:03:05,440 --> 00:03:07,840
i will try to give some tips and tricks

83
00:03:07,840 --> 00:03:09,040
uh about

84
00:03:09,040 --> 00:03:12,159
how to hunt spider and then uh

85
00:03:12,159 --> 00:03:14,319
of course i will try to explain the

86
00:03:14,319 --> 00:03:15,280
mitigation

87
00:03:15,280 --> 00:03:17,360
how to mitigate how can we mitigate the

88
00:03:17,360 --> 00:03:20,560
either vulnerability

89
00:03:20,959 --> 00:03:24,480
okay let's back in 2000 everything

90
00:03:24,480 --> 00:03:28,400
is located was located in the same place

91
00:03:28,400 --> 00:03:31,680
everything is located at one code base

92
00:03:31,680 --> 00:03:33,680
it's a monolithic architecture which

93
00:03:33,680 --> 00:03:36,799
opens to a single point of failure

94
00:03:36,799 --> 00:03:38,640
so what a single point of failure

95
00:03:38,640 --> 00:03:40,239
density in single

96
00:03:40,239 --> 00:03:42,799
point of failure anything fails in our

97
00:03:42,799 --> 00:03:44,799
system the whole system

98
00:03:44,799 --> 00:03:47,599
that's it okay in this architecture

99
00:03:47,599 --> 00:03:48,959
let's say that we have

100
00:03:48,959 --> 00:03:52,720
an e-commerce website and we

101
00:03:52,720 --> 00:03:55,840
started to popular so we have more

102
00:03:55,840 --> 00:03:57,599
visitors and

103
00:03:57,599 --> 00:04:00,879
the traffic loads increases

104
00:04:00,879 --> 00:04:03,040
so this architecture is not enough for

105
00:04:03,040 --> 00:04:05,920
us we need more

106
00:04:05,920 --> 00:04:08,480
so let's say that we migrate to this

107
00:04:08,480 --> 00:04:10,159
architecture

108
00:04:10,159 --> 00:04:12,000
in this architecture scalable

109
00:04:12,000 --> 00:04:13,599
scalability comes into

110
00:04:13,599 --> 00:04:17,440
our life and we have load balancer to

111
00:04:17,440 --> 00:04:18,720
forward the traffic

112
00:04:18,720 --> 00:04:23,040
why do we need for example

113
00:04:24,800 --> 00:04:28,080
when black

114
00:04:28,080 --> 00:04:31,199
friday comes in um

115
00:04:31,199 --> 00:04:34,639
our visitors and traffic loads increase

116
00:04:34,639 --> 00:04:37,680
so rapidly and so

117
00:04:37,680 --> 00:04:40,240
web server only one web server is not

118
00:04:40,240 --> 00:04:42,160
enough for us we need to forward the

119
00:04:42,160 --> 00:04:43,919
traffic between

120
00:04:43,919 --> 00:04:47,680
web servers so at this point

121
00:04:47,680 --> 00:04:51,040
load balancer comes into our life

122
00:04:51,040 --> 00:04:54,400
but in this kind of architecture we may

123
00:04:54,400 --> 00:04:56,160
have a synchronization

124
00:04:56,160 --> 00:04:59,280
problem so i will try to

125
00:04:59,280 --> 00:05:02,320
give an example about it a session

126
00:05:02,320 --> 00:05:05,440
information is located

127
00:05:05,440 --> 00:05:08,880
stored into disk normally until this

128
00:05:08,880 --> 00:05:12,000
session ends in the web servers disk

129
00:05:12,000 --> 00:05:15,360
in default of course um so

130
00:05:15,360 --> 00:05:18,960
if for example we have user a and

131
00:05:18,960 --> 00:05:22,240
user a is validate username and password

132
00:05:22,240 --> 00:05:22,960
and

133
00:05:22,960 --> 00:05:26,160
the this session and then station is

134
00:05:26,160 --> 00:05:26,960
created and

135
00:05:26,960 --> 00:05:29,680
session is stored into web server one's

136
00:05:29,680 --> 00:05:30,880
desk

137
00:05:30,880 --> 00:05:33,600
uh when the load is high the next time

138
00:05:33,600 --> 00:05:34,240
user a

139
00:05:34,240 --> 00:05:38,240
came with the same session information

140
00:05:38,240 --> 00:05:41,199
load balance if load balancer forward

141
00:05:41,199 --> 00:05:43,840
user ace traffic to web server 2

142
00:05:43,840 --> 00:05:46,080
we have a synchronization problem in

143
00:05:46,080 --> 00:05:47,199
this point because

144
00:05:47,199 --> 00:05:50,320
there is no station information for user

145
00:05:50,320 --> 00:05:51,120
a

146
00:05:51,120 --> 00:05:54,160
stored in web server 2. so that's a

147
00:05:54,160 --> 00:05:54,800
problem

148
00:05:54,800 --> 00:05:58,080
how can we solve this so we may

149
00:05:58,080 --> 00:06:00,639
solve this problem by storing the

150
00:06:00,639 --> 00:06:02,639
session information in

151
00:06:02,639 --> 00:06:06,080
db in database but what about

152
00:06:06,080 --> 00:06:09,919
our query load then for our database of

153
00:06:09,919 --> 00:06:10,720
course

154
00:06:10,720 --> 00:06:13,759
since session is not a permanent object

155
00:06:13,759 --> 00:06:16,960
when the session ends we need to

156
00:06:16,960 --> 00:06:20,400
delete it so it's even more load

157
00:06:20,400 --> 00:06:24,560
for our database so we may need

158
00:06:24,560 --> 00:06:27,680
a better solution better architecture

159
00:06:27,680 --> 00:06:28,479
which is

160
00:06:28,479 --> 00:06:32,720
for our the modern web architecture

161
00:06:32,720 --> 00:06:36,960
so in modern web architecture uh we have

162
00:06:36,960 --> 00:06:40,160
again load balancer web servers then we

163
00:06:40,160 --> 00:06:40,639
have

164
00:06:40,639 --> 00:06:44,400
api gateway we have microservices

165
00:06:44,400 --> 00:06:48,319
we have databases more than one

166
00:06:48,319 --> 00:06:51,919
and we have even memcached or redis

167
00:06:51,919 --> 00:06:55,280
and s3 buckets

168
00:06:55,280 --> 00:06:57,840
we have a lot of stuff as you can see in

169
00:06:57,840 --> 00:06:58,800
here

170
00:06:58,800 --> 00:07:02,000
so it's a modern map as we speak of

171
00:07:02,000 --> 00:07:05,840
memcached um i'd like to dig this point

172
00:07:05,840 --> 00:07:08,639
a little bit more previously we talked

173
00:07:08,639 --> 00:07:09,360
about

174
00:07:09,360 --> 00:07:12,400
the issue by storing the session

175
00:07:12,400 --> 00:07:13,280
information

176
00:07:13,280 --> 00:07:15,919
where can we store it how can we store

177
00:07:15,919 --> 00:07:18,319
it how can we delete it later

178
00:07:18,319 --> 00:07:22,080
so memcached is a key value storage

179
00:07:22,080 --> 00:07:25,120
and a fast memory so we can store the

180
00:07:25,120 --> 00:07:26,479
session information

181
00:07:26,479 --> 00:07:30,560
into memcached and then

182
00:07:30,560 --> 00:07:33,599
accessing and i mean accessing the

183
00:07:33,599 --> 00:07:34,240
session

184
00:07:34,240 --> 00:07:35,840
information storing the session

185
00:07:35,840 --> 00:07:37,599
information and cached

186
00:07:37,599 --> 00:07:39,790
won't be a big deal for our um

187
00:07:39,790 --> 00:07:41,199
[Music]

188
00:07:41,199 --> 00:07:45,599
architecture in in our system

189
00:07:45,599 --> 00:07:47,820
so um

190
00:07:47,820 --> 00:07:49,919
[Music]

191
00:07:49,919 --> 00:07:53,599
for example um when a user

192
00:07:53,599 --> 00:07:56,800
comes into our system

193
00:07:57,680 --> 00:08:01,280
it comes through i mean it will it comes

194
00:08:01,280 --> 00:08:01,680
through

195
00:08:01,680 --> 00:08:05,280
api get gateway to memcached

196
00:08:05,280 --> 00:08:08,000
to check the session and so when the

197
00:08:08,000 --> 00:08:08,479
session

198
00:08:08,479 --> 00:08:11,599
ends we can delete it into memcached and

199
00:08:11,599 --> 00:08:12,720
also

200
00:08:12,720 --> 00:08:14,720
we talked about static files at the

201
00:08:14,720 --> 00:08:16,560
beginning if you remember

202
00:08:16,560 --> 00:08:19,280
we can store the static files into our

203
00:08:19,280 --> 00:08:21,199
s3 bucket in this

204
00:08:21,199 --> 00:08:24,080
architecture

205
00:08:25,680 --> 00:08:29,280
so let's summarize everything why

206
00:08:29,280 --> 00:08:32,559
let's talk about why uh are we talking

207
00:08:32,559 --> 00:08:36,240
about web applications past and today's

208
00:08:36,240 --> 00:08:39,919
architecture at past everything is

209
00:08:39,919 --> 00:08:40,799
everything were

210
00:08:40,799 --> 00:08:44,240
together and now

211
00:08:44,240 --> 00:08:46,560
everything is divided with bigger

212
00:08:46,560 --> 00:08:48,000
architecture

213
00:08:48,000 --> 00:08:50,800
at past roles were reaching data

214
00:08:50,800 --> 00:08:52,000
directly

215
00:08:52,000 --> 00:08:55,680
there was no difference between i mean

216
00:08:55,680 --> 00:08:59,680
there was nothing between the roles so

217
00:08:59,680 --> 00:09:03,120
roles were reaching directly status now

218
00:09:03,120 --> 00:09:07,279
roles go to services um then

219
00:09:07,279 --> 00:09:10,240
services reaching the roles in formation

220
00:09:10,240 --> 00:09:10,800
and

221
00:09:10,800 --> 00:09:14,880
comes back with this information

222
00:09:15,120 --> 00:09:18,800
um we can at the past session

223
00:09:18,800 --> 00:09:22,080
was a problem but today we storing the

224
00:09:22,080 --> 00:09:22,640
session

225
00:09:22,640 --> 00:09:26,480
into like test memories like

226
00:09:26,480 --> 00:09:29,680
can be memcached it can be redis and the

227
00:09:29,680 --> 00:09:31,440
session information comes

228
00:09:31,440 --> 00:09:34,560
through api gateway into memcached

229
00:09:34,560 --> 00:09:38,240
so why am i talking about this

230
00:09:38,240 --> 00:09:41,680
let me explain it let's say we have

231
00:09:41,680 --> 00:09:42,399
users

232
00:09:42,399 --> 00:09:45,040
which are customers for our e-commerce

233
00:09:45,040 --> 00:09:47,360
websites

234
00:09:47,360 --> 00:09:51,279
so our customers may need to

235
00:09:51,279 --> 00:09:54,320
access their information their data

236
00:09:54,320 --> 00:09:54,959
right

237
00:09:54,959 --> 00:09:58,080
but in today's world

238
00:09:58,080 --> 00:10:01,519
um even

239
00:10:01,519 --> 00:10:04,399
merchants may need to access some of the

240
00:10:04,399 --> 00:10:07,519
data of that customer of that user

241
00:10:07,519 --> 00:10:10,560
some seller may need to use

242
00:10:10,560 --> 00:10:14,000
and access the same data and

243
00:10:14,000 --> 00:10:17,839
even customer service may need if a

244
00:10:17,839 --> 00:10:20,320
customer has a problem for example even

245
00:10:20,320 --> 00:10:22,959
marketing may need so everybody needs to

246
00:10:22,959 --> 00:10:23,920
see the

247
00:10:23,920 --> 00:10:27,360
same data and all of them are seeing

248
00:10:27,360 --> 00:10:32,480
these data's through microservices

249
00:10:32,480 --> 00:10:35,279
so as it can be seen modern web

250
00:10:35,279 --> 00:10:36,320
architecture is

251
00:10:36,320 --> 00:10:39,760
multi-tier architecture and we have a

252
00:10:39,760 --> 00:10:43,200
huge permission and authorization

253
00:10:43,200 --> 00:10:44,160
requirements

254
00:10:44,160 --> 00:10:47,440
and sometimes they are

255
00:10:47,440 --> 00:10:50,880
issues they are problems as well

256
00:10:50,880 --> 00:10:54,440
any kind of issue or vulnerability in

257
00:10:54,440 --> 00:10:58,079
microservices um

258
00:10:58,079 --> 00:11:01,600
will turn into a problem a security

259
00:11:01,600 --> 00:11:02,320
problem

260
00:11:02,320 --> 00:11:05,760
a vulnerability for the system

261
00:11:05,760 --> 00:11:09,040
so let's um

262
00:11:09,040 --> 00:11:11,920
try to explain it in a better way let's

263
00:11:11,920 --> 00:11:14,320
summarize that

264
00:11:14,320 --> 00:11:17,440
user today's modern architecture

265
00:11:17,440 --> 00:11:20,640
user comes into our system goes through

266
00:11:20,640 --> 00:11:23,920
load balancer comes to api gateway

267
00:11:23,920 --> 00:11:26,480
and go to the sql proxy with username

268
00:11:26,480 --> 00:11:27,519
and password

269
00:11:27,519 --> 00:11:30,720
at first and after validation is done

270
00:11:30,720 --> 00:11:31,120
and

271
00:11:31,120 --> 00:11:34,320
session created it goes to the

272
00:11:34,320 --> 00:11:37,600
uh fast memory he said that it can be

273
00:11:37,600 --> 00:11:39,120
memcached already

274
00:11:39,120 --> 00:11:42,560
and it's stored in here

275
00:11:42,560 --> 00:11:46,000
and every time any traffic

276
00:11:46,000 --> 00:11:49,279
comes and goes it goes via

277
00:11:49,279 --> 00:11:52,240
it uses microservices obviously and any

278
00:11:52,240 --> 00:11:53,600
vulnerability

279
00:11:53,600 --> 00:11:57,600
or problems um and mostly logical one

280
00:11:57,600 --> 00:12:00,240
as we speak of about this uh in this

281
00:12:00,240 --> 00:12:02,639
presentation

282
00:12:02,639 --> 00:12:05,760
it it it may affect the whole system

283
00:12:05,760 --> 00:12:09,360
i mean anything affects microservices

284
00:12:09,360 --> 00:12:11,920
it may it will affect the whole system

285
00:12:11,920 --> 00:12:15,360
as a security problem vulnerability

286
00:12:15,360 --> 00:12:17,839
so that's the reason why i'm talking

287
00:12:17,839 --> 00:12:19,120
about the architecture

288
00:12:19,120 --> 00:12:22,079
architecture today's architecture is

289
00:12:22,079 --> 00:12:24,079
bigger and distributed and

290
00:12:24,079 --> 00:12:27,200
everything but we have microservices

291
00:12:27,200 --> 00:12:30,160
we're using data's through microservices

292
00:12:30,160 --> 00:12:32,880
and anything

293
00:12:34,399 --> 00:12:36,399
happens any problem happens in

294
00:12:36,399 --> 00:12:38,560
microservices it can cause

295
00:12:38,560 --> 00:12:40,560
can come back as a problem as a

296
00:12:40,560 --> 00:12:44,399
vulnerability to a whole system

297
00:12:44,639 --> 00:12:45,940
okay

298
00:12:45,940 --> 00:12:47,920
[Music]

299
00:12:47,920 --> 00:12:51,519
we talked about so far we talked about

300
00:12:51,519 --> 00:12:55,920
architectures and we talked about the

301
00:12:55,920 --> 00:13:00,079
uh informations um the data's

302
00:13:00,079 --> 00:13:03,440
we're reaching we're accessing and

303
00:13:03,440 --> 00:13:05,920
i think it's the time talking about

304
00:13:05,920 --> 00:13:07,600
business logic technical

305
00:13:07,600 --> 00:13:11,200
and logical vulnerabilities

306
00:13:11,200 --> 00:13:14,800
so for technical vulnerabilities

307
00:13:14,800 --> 00:13:18,839
i can give an example like sql injection

308
00:13:18,839 --> 00:13:20,240
um

309
00:13:20,240 --> 00:13:23,360
vulnerabilities like sql injections

310
00:13:23,360 --> 00:13:26,480
can can be detected automatedly

311
00:13:26,480 --> 00:13:28,160
automatically so technical

312
00:13:28,160 --> 00:13:29,519
vulnerabilities are

313
00:13:29,519 --> 00:13:32,000
mostly

314
00:13:33,040 --> 00:13:36,079
detected can be detected mostly

315
00:13:36,079 --> 00:13:39,920
in an automatic way for example by

316
00:13:39,920 --> 00:13:42,480
using scanners but logical

317
00:13:42,480 --> 00:13:44,639
vulnerabilities on the other hand

318
00:13:44,639 --> 00:13:48,000
are about uh they are systems

319
00:13:48,000 --> 00:13:51,600
decision the system's decision mechanism

320
00:13:51,600 --> 00:13:52,160
mostly

321
00:13:52,160 --> 00:13:55,199
and they are hard to find what in an

322
00:13:55,199 --> 00:13:59,199
automatic automatedly in automatic way

323
00:13:59,199 --> 00:14:02,480
with scanners for example

324
00:14:02,480 --> 00:14:04,959
so when we speak of logical

325
00:14:04,959 --> 00:14:06,560
vulnerabilities we can

326
00:14:06,560 --> 00:14:09,120
give an example we can give idor as an

327
00:14:09,120 --> 00:14:10,000
example for

328
00:14:10,000 --> 00:14:12,480
logical

329
00:14:13,279 --> 00:14:16,639
okay before go dig into

330
00:14:16,639 --> 00:14:19,839
either i will try to

331
00:14:19,839 --> 00:14:23,199
uh make it clear for your eyes

332
00:14:23,199 --> 00:14:26,240
i will try to make it clear the terms in

333
00:14:26,240 --> 00:14:28,000
your into your eyes

334
00:14:28,000 --> 00:14:32,000
so let's talk about authentication and

335
00:14:32,000 --> 00:14:33,839
authorization which are

336
00:14:33,839 --> 00:14:38,079
two different terms but always confused

337
00:14:38,079 --> 00:14:41,120
and so authentication is

338
00:14:41,120 --> 00:14:44,240
a validation of users and

339
00:14:44,240 --> 00:14:48,240
identity in authentication we're asking

340
00:14:48,240 --> 00:14:51,360
the user who are you you're asking the

341
00:14:51,360 --> 00:14:52,720
user to

342
00:14:52,720 --> 00:14:55,760
introduce to the system for example

343
00:14:55,760 --> 00:14:58,480
this is authentication on the other hand

344
00:14:58,480 --> 00:15:01,279
authorization

345
00:15:01,279 --> 00:15:04,160
consists of business rules actually in

346
00:15:04,160 --> 00:15:07,680
authorization we're asking what actions

347
00:15:07,680 --> 00:15:11,120
the user is allowed we're determining

348
00:15:11,120 --> 00:15:11,760
users

349
00:15:11,760 --> 00:15:14,480
permissions

350
00:15:21,279 --> 00:15:25,199
so when we speak of user's permission

351
00:15:25,199 --> 00:15:29,440
um about access control i guess

352
00:15:29,440 --> 00:15:32,320
since we're clear about business rules

353
00:15:32,320 --> 00:15:35,440
authorization authentication

354
00:15:35,440 --> 00:15:38,399
let's talk about what is access control

355
00:15:38,399 --> 00:15:39,759
access control

356
00:15:39,759 --> 00:15:43,199
can be explained in

357
00:15:43,199 --> 00:15:46,320
under tree topic three main topic the

358
00:15:46,320 --> 00:15:47,360
first one is

359
00:15:47,360 --> 00:15:50,320
vertical access control the second one

360
00:15:50,320 --> 00:15:52,320
is horizontal access control and the

361
00:15:52,320 --> 00:15:53,360
third one is

362
00:15:53,360 --> 00:15:56,480
context dependent access for the first

363
00:15:56,480 --> 00:15:57,440
one for the

364
00:15:57,440 --> 00:16:02,800
vertical one we can say that it is

365
00:16:02,800 --> 00:16:06,000
the the access control and

366
00:16:06,000 --> 00:16:09,040
aims to control the restrictions to

367
00:16:09,040 --> 00:16:11,279
access functions according to the user

368
00:16:11,279 --> 00:16:12,000
roles

369
00:16:12,000 --> 00:16:15,600
what am i talking about for example

370
00:16:15,600 --> 00:16:18,399
in our systems like in the as you can

371
00:16:18,399 --> 00:16:19,920
see it in the table

372
00:16:19,920 --> 00:16:23,040
we have registered user

373
00:16:23,040 --> 00:16:27,120
and our registered user only has

374
00:16:27,120 --> 00:16:31,040
an access right to reading a post

375
00:16:31,040 --> 00:16:34,000
in our systems but on the other hand

376
00:16:34,000 --> 00:16:34,800
moderator

377
00:16:34,800 --> 00:16:37,920
has many more of them like creating a

378
00:16:37,920 --> 00:16:39,440
new post

379
00:16:39,440 --> 00:16:43,279
reading the existing posts updating

380
00:16:43,279 --> 00:16:46,639
the existing posts but not deleting

381
00:16:46,639 --> 00:16:50,079
obviously in our system so

382
00:16:50,079 --> 00:16:54,160
if our registered user is able to

383
00:16:54,160 --> 00:16:58,720
um create a post for example

384
00:16:58,720 --> 00:17:01,839
then we can we have a problem about

385
00:17:01,839 --> 00:17:03,920
vertical access control we can say that

386
00:17:03,920 --> 00:17:04,720
and

387
00:17:04,720 --> 00:17:07,199
we may talk about insecure direct object

388
00:17:07,199 --> 00:17:09,199
reference

389
00:17:09,199 --> 00:17:12,319
so if we clear about vertical access

390
00:17:12,319 --> 00:17:14,079
control let's talk about horizontal

391
00:17:14,079 --> 00:17:14,880
access

392
00:17:14,880 --> 00:17:17,039
horizontal access control on the other

393
00:17:17,039 --> 00:17:18,319
hand is

394
00:17:18,319 --> 00:17:21,919
aims to control the access accessing

395
00:17:21,919 --> 00:17:24,880
resources by users who have the same

396
00:17:24,880 --> 00:17:26,799
ability

397
00:17:26,799 --> 00:17:29,840
which means we have two users in the

398
00:17:29,840 --> 00:17:30,840
same

399
00:17:30,840 --> 00:17:34,000
level they can be two moderators for

400
00:17:34,000 --> 00:17:35,840
example

401
00:17:35,840 --> 00:17:39,520
and let's call them user a and user b

402
00:17:39,520 --> 00:17:43,200
if user a let's let's

403
00:17:43,200 --> 00:17:46,320
come back to e-commerce website and say

404
00:17:46,320 --> 00:17:47,120
that

405
00:17:47,120 --> 00:17:50,799
both users has orders they are seeing

406
00:17:50,799 --> 00:17:52,160
these orders in

407
00:17:52,160 --> 00:17:56,400
order list html let's say

408
00:17:56,400 --> 00:17:59,679
they can list their orders

409
00:17:59,679 --> 00:18:04,000
and user a and user b has the same role

410
00:18:04,000 --> 00:18:07,360
and they can both see their

411
00:18:07,360 --> 00:18:10,640
own orders in order lists html

412
00:18:10,640 --> 00:18:14,320
in in their page in the website

413
00:18:14,320 --> 00:18:18,400
but if user a can or able to see

414
00:18:18,400 --> 00:18:22,080
uh users these orders then

415
00:18:22,080 --> 00:18:24,400
it's a problem it's a problem of

416
00:18:24,400 --> 00:18:27,840
horizontal access control

417
00:18:27,840 --> 00:18:30,000
what about context dependent access

418
00:18:30,000 --> 00:18:30,880
control

419
00:18:30,880 --> 00:18:34,160
it aims to control the

420
00:18:34,160 --> 00:18:36,400
restrictions specified for the user

421
00:18:36,400 --> 00:18:37,679
itself

422
00:18:37,679 --> 00:18:41,520
for example let's say that

423
00:18:41,520 --> 00:18:45,360
one user a bought and

424
00:18:45,360 --> 00:18:48,480
a book in our website and

425
00:18:48,480 --> 00:18:51,840
then um user a

426
00:18:51,840 --> 00:18:55,520
paid the cost of the book

427
00:18:55,520 --> 00:18:59,840
or book and then and i mean

428
00:18:59,840 --> 00:19:02,960
enter the information of address and our

429
00:19:02,960 --> 00:19:04,960
e-commerce

430
00:19:04,960 --> 00:19:08,559
ship this book to the address of user

431
00:19:08,559 --> 00:19:09,600
ace

432
00:19:09,600 --> 00:19:13,039
if after that if user a is able to

433
00:19:13,039 --> 00:19:16,080
change the address information

434
00:19:16,080 --> 00:19:19,440
for the product which is already shipped

435
00:19:19,440 --> 00:19:21,840
it's the shoe for context dependent

436
00:19:21,840 --> 00:19:23,600
access control

437
00:19:23,600 --> 00:19:27,120
and it means that lack of authorization

438
00:19:27,120 --> 00:19:28,240
mechanisms

439
00:19:28,240 --> 00:19:32,480
generally speaking and any of them

440
00:19:32,480 --> 00:19:37,360
if any access control has issue

441
00:19:37,360 --> 00:19:40,880
we have an issue i mean then we can talk

442
00:19:40,880 --> 00:19:43,200
about insecure direct object reference

443
00:19:43,200 --> 00:19:46,559
in this part so

444
00:19:46,559 --> 00:19:49,919
i have to say that um insecure direct

445
00:19:49,919 --> 00:19:51,200
object reference

446
00:19:51,200 --> 00:19:53,679
is still in the os top 10 under

447
00:19:53,679 --> 00:19:57,919
brokenness access control if you check

448
00:19:58,559 --> 00:20:01,919
so let's talk about

449
00:20:01,919 --> 00:20:06,159
insecure direct object references

450
00:20:06,159 --> 00:20:09,039
insecure direct object references we

451
00:20:09,039 --> 00:20:09,600
said that

452
00:20:09,600 --> 00:20:13,200
cause if the um if there is a little

453
00:20:13,200 --> 00:20:15,760
there's lack of ownership control lack

454
00:20:15,760 --> 00:20:17,520
of authorization control

455
00:20:17,520 --> 00:20:22,080
right so let's talk about it more

456
00:20:22,080 --> 00:20:24,559
uh as you can see it in here in the in

457
00:20:24,559 --> 00:20:25,440
the

458
00:20:25,440 --> 00:20:28,640
presentation we have a table we have two

459
00:20:28,640 --> 00:20:30,240
users in our table

460
00:20:30,240 --> 00:20:32,240
the first one is user a the second one

461
00:20:32,240 --> 00:20:35,679
is user b there is order id belongs to

462
00:20:35,679 --> 00:20:39,360
for each users and they ordered

463
00:20:39,360 --> 00:20:42,159
they select some products and created an

464
00:20:42,159 --> 00:20:42,640
ordered

465
00:20:42,640 --> 00:20:45,840
list those are under the

466
00:20:45,840 --> 00:20:49,520
products column in the table

467
00:20:49,520 --> 00:20:51,840
and under the table you can see a

468
00:20:51,840 --> 00:20:53,760
relational database about

469
00:20:53,760 --> 00:20:56,960
in into our website

470
00:20:56,960 --> 00:20:59,919
for example we have users table there's

471
00:20:59,919 --> 00:21:01,039
a user id

472
00:21:01,039 --> 00:21:03,840
it's a full name when it is created for

473
00:21:03,840 --> 00:21:04,880
example

474
00:21:04,880 --> 00:21:08,400
then we have orders table

475
00:21:08,400 --> 00:21:12,400
in here in in our database scheme

476
00:21:12,400 --> 00:21:16,240
and there's also an id for orders and

477
00:21:16,240 --> 00:21:19,280
it is a relation with user id

478
00:21:19,280 --> 00:21:21,760
and with products as well and also we

479
00:21:21,760 --> 00:21:23,200
have products table

480
00:21:23,200 --> 00:21:25,600
as well

481
00:21:26,480 --> 00:21:29,600
so as we could see it

482
00:21:29,600 --> 00:21:32,799
in here user a let's say that user a

483
00:21:32,799 --> 00:21:36,559
and user b has the same

484
00:21:36,559 --> 00:21:39,600
they're both registered users uh in the

485
00:21:39,600 --> 00:21:40,640
same role

486
00:21:40,640 --> 00:21:44,000
and has same capabilities if user

487
00:21:44,000 --> 00:21:47,679
a is able to change the products

488
00:21:47,679 --> 00:21:51,200
for you in user b's orders

489
00:21:51,200 --> 00:21:54,480
then we can talk about insecure direct

490
00:21:54,480 --> 00:21:55,600
object references

491
00:21:55,600 --> 00:21:59,120
if user a is able to change the order id

492
00:21:59,120 --> 00:22:02,240
and when user a changes

493
00:22:02,240 --> 00:22:05,440
can see the products belonging to this

494
00:22:05,440 --> 00:22:08,080
id then we're saying that it's an

495
00:22:08,080 --> 00:22:10,840
insecure direct object

496
00:22:10,840 --> 00:22:13,360
references

497
00:22:13,360 --> 00:22:17,760
so i will try to elaborate more with an

498
00:22:17,760 --> 00:22:19,360
example

499
00:22:19,360 --> 00:22:21,679
under user a and user b there is two

500
00:22:21,679 --> 00:22:23,039
vulnerabilities

501
00:22:23,039 --> 00:22:26,240
which is lead says order details

502
00:22:26,240 --> 00:22:29,520
page uh and in order details page

503
00:22:29,520 --> 00:22:32,640
user a and every every user i mean

504
00:22:32,640 --> 00:22:35,520
but for our example user a and user b

505
00:22:35,520 --> 00:22:35,919
can

506
00:22:35,919 --> 00:22:38,720
see their orders can list their orders

507
00:22:38,720 --> 00:22:40,000
according to the order

508
00:22:40,000 --> 00:22:43,840
id so if we check

509
00:22:43,840 --> 00:22:47,840
this um code block

510
00:22:47,840 --> 00:22:51,039
then we can see more

511
00:22:51,039 --> 00:22:54,320
we can learn more details about our

512
00:22:54,320 --> 00:22:57,200
quotes and we can see that if we have a

513
00:22:57,200 --> 00:23:00,080
problem in here we can see that as well

514
00:23:00,080 --> 00:23:03,440
as we could see in in here we have

515
00:23:03,440 --> 00:23:06,000
a function definition which is order

516
00:23:06,000 --> 00:23:06,720
details

517
00:23:06,720 --> 00:23:09,600
and the fifth line we could see that

518
00:23:09,600 --> 00:23:10,240
we're

519
00:23:10,240 --> 00:23:12,960
getting orders according to the

520
00:23:12,960 --> 00:23:16,240
filtering by order id

521
00:23:16,240 --> 00:23:19,679
and in the eighth line

522
00:23:19,679 --> 00:23:22,720
we get the order list which

523
00:23:22,720 --> 00:23:26,320
has products in it filtered by

524
00:23:26,320 --> 00:23:30,320
order id and then we're rendering it

525
00:23:30,320 --> 00:23:31,600
we're listing

526
00:23:31,600 --> 00:23:34,480
the products in order details html

527
00:23:34,480 --> 00:23:36,080
according to the order

528
00:23:36,080 --> 00:23:38,640
id but we have a problem in here as if

529
00:23:38,640 --> 00:23:39,120
you can

530
00:23:39,120 --> 00:23:43,120
see it in here um when a user visits

531
00:23:43,120 --> 00:23:45,039
order details html

532
00:23:45,039 --> 00:23:47,919
there is no authorization check i mean

533
00:23:47,919 --> 00:23:48,240
it

534
00:23:48,240 --> 00:23:51,440
asks at the fifth line a task order id

535
00:23:51,440 --> 00:23:54,480
directly without checking anything

536
00:23:54,480 --> 00:23:56,960
so it's that lack of ownership control

537
00:23:56,960 --> 00:23:58,480
we can say that

538
00:23:58,480 --> 00:24:00,640
so

539
00:24:02,400 --> 00:24:05,440
okay so in here for example

540
00:24:05,440 --> 00:24:08,880
this is user a which is me let's say

541
00:24:08,880 --> 00:24:11,840
and this is user b which is another user

542
00:24:11,840 --> 00:24:14,080
in our e-commerce websites

543
00:24:14,080 --> 00:24:17,360
i have an id one zero zero five

544
00:24:17,360 --> 00:24:21,440
six and my friend has the i mean user b

545
00:24:21,440 --> 00:24:25,120
is the other id one zero zero one seven

546
00:24:25,120 --> 00:24:28,159
we have two different users and i'm a

547
00:24:28,159 --> 00:24:29,600
hacker in here

548
00:24:29,600 --> 00:24:32,880
in the middle so when i order when i

549
00:24:32,880 --> 00:24:34,000
send

550
00:24:34,000 --> 00:24:38,000
that when i ask for my ordered lists

551
00:24:38,000 --> 00:24:41,919
with the id of one zero zero five six

552
00:24:41,919 --> 00:24:45,440
and when i intercept my request

553
00:24:45,440 --> 00:24:48,960
without reaching to the end and

554
00:24:48,960 --> 00:24:52,000
when if if i am able to change the order

555
00:24:52,000 --> 00:24:52,799
id when

556
00:24:52,799 --> 00:24:56,000
and if it comes back with okay and if i

557
00:24:56,000 --> 00:24:57,279
can see the

558
00:24:57,279 --> 00:24:59,520
order information belongs to one zero

559
00:24:59,520 --> 00:25:01,120
zero one seven

560
00:25:01,120 --> 00:25:04,159
it means that yes there is an insecure

561
00:25:04,159 --> 00:25:06,400
direct object references vulnerability

562
00:25:06,400 --> 00:25:07,039
in here

563
00:25:07,039 --> 00:25:10,480
which is an either which stands as idor

564
00:25:10,480 --> 00:25:14,480
we have an eidor in here we can say that

565
00:25:14,480 --> 00:25:17,760
is it really that easy uh

566
00:25:17,760 --> 00:25:20,960
sometimes yes but sometimes

567
00:25:20,960 --> 00:25:23,520
you need to dig more and more and more

568
00:25:23,520 --> 00:25:24,799
but don't be afraid

569
00:25:24,799 --> 00:25:27,279
i will talk about that as well how can

570
00:25:27,279 --> 00:25:28,559
we dig it

571
00:25:28,559 --> 00:25:31,760
um because there's a certain path you

572
00:25:31,760 --> 00:25:33,039
can follow

573
00:25:33,039 --> 00:25:36,080
at this point

574
00:25:36,080 --> 00:25:40,080
you have to have at least two users

575
00:25:40,080 --> 00:25:43,360
for each role types first of all

576
00:25:43,360 --> 00:25:46,559
then you have to list all end points

577
00:25:46,559 --> 00:25:49,840
and try to perform to exploit

578
00:25:49,840 --> 00:25:52,240
um either vulnerability for each

579
00:25:52,240 --> 00:25:54,559
endpoints

580
00:25:54,559 --> 00:25:57,600
which is trying to perform

581
00:25:57,600 --> 00:25:59,679
equals to trying to perform crowd

582
00:25:59,679 --> 00:26:01,039
operations

583
00:26:01,039 --> 00:26:04,720
over cross users if uh any of the cred

584
00:26:04,720 --> 00:26:07,120
operation is successful then

585
00:26:07,120 --> 00:26:10,080
you're successful finding either which

586
00:26:10,080 --> 00:26:12,480
means credit operation means create

587
00:26:12,480 --> 00:26:17,520
read update delete creations

588
00:26:18,559 --> 00:26:21,600
so let's talk about

589
00:26:21,600 --> 00:26:25,679
our real life example

590
00:26:25,679 --> 00:26:28,960
the first one comes from wine

591
00:26:28,960 --> 00:26:33,200
at the past we have a web application

592
00:26:33,200 --> 00:26:36,960
as wine so after that twitter

593
00:26:36,960 --> 00:26:41,360
voted and closed it but in

594
00:26:41,360 --> 00:26:44,919
july 11 um at

595
00:26:44,919 --> 00:26:46,730
2017 um

596
00:26:46,730 --> 00:26:48,159
[Music]

597
00:26:48,159 --> 00:26:51,279
real islam khan i guess name

598
00:26:51,279 --> 00:26:54,799
found the idol vulnerability

599
00:26:54,799 --> 00:26:58,400
in in wine's website and as you could

600
00:26:58,400 --> 00:27:02,720
see then here the severity is critical

601
00:27:03,279 --> 00:27:06,960
the security researcher is able to

602
00:27:06,960 --> 00:27:07,679
access

603
00:27:07,679 --> 00:27:11,039
all users private information in this

604
00:27:11,039 --> 00:27:15,120
example so let's dig it more

605
00:27:15,120 --> 00:27:18,559
because he wrote about it

606
00:27:18,559 --> 00:27:22,320
so this is the url of

607
00:27:22,320 --> 00:27:25,760
wine and there's the users

608
00:27:25,760 --> 00:27:29,520
users profiles i assume we're reaching

609
00:27:29,520 --> 00:27:30,480
and

610
00:27:30,480 --> 00:27:33,919
the user's profiles comes with user id

611
00:27:33,919 --> 00:27:35,520
it says in here

612
00:27:35,520 --> 00:27:38,880
and he says that choose any user id to

613
00:27:38,880 --> 00:27:39,520
get

614
00:27:39,520 --> 00:27:42,000
the information of that user belong to

615
00:27:42,000 --> 00:27:42,960
that user

616
00:27:42,960 --> 00:27:46,080
and you can collect the user ids

617
00:27:46,080 --> 00:27:48,240
after that and you can even see the

618
00:27:48,240 --> 00:27:51,600
private information like that

619
00:27:51,600 --> 00:27:55,360
i will cut some of them and

620
00:27:55,360 --> 00:27:58,720
show you more um for example you can see

621
00:27:58,720 --> 00:27:59,760
the tutor id

622
00:27:59,760 --> 00:28:02,960
phone number location

623
00:28:02,960 --> 00:28:07,039
anything email ip addresses platforms

624
00:28:07,039 --> 00:28:09,120
anything about belong to that user i

625
00:28:09,120 --> 00:28:10,960
mean private information this is

626
00:28:10,960 --> 00:28:11,760
critical

627
00:28:11,760 --> 00:28:14,799
i guess but

628
00:28:14,799 --> 00:28:17,039
you can ask me that is it that simple

629
00:28:17,039 --> 00:28:18,480
really if i change

630
00:28:18,480 --> 00:28:23,039
the id information when i see the

631
00:28:23,039 --> 00:28:26,559
in the url if i i can see the private

632
00:28:26,559 --> 00:28:27,840
information like

633
00:28:27,840 --> 00:28:31,039
this person did uh

634
00:28:31,039 --> 00:28:33,360
sometimes as i told sometimes yes but

635
00:28:33,360 --> 00:28:34,640
sometimes no

636
00:28:34,640 --> 00:28:37,200
so let's check another example which is

637
00:28:37,200 --> 00:28:37,840
more

638
00:28:37,840 --> 00:28:42,320
hard to find the eidor vulnerability

639
00:28:42,320 --> 00:28:46,240
it comes from uber the app secure inn

640
00:28:46,240 --> 00:28:49,120
is a research um is a secretary

641
00:28:49,120 --> 00:28:50,080
researcher

642
00:28:50,080 --> 00:28:54,399
and he found um either vulnerability in

643
00:28:54,399 --> 00:28:56,080
uber's system and

644
00:28:56,080 --> 00:28:59,279
with with this vulnerability with eidor

645
00:28:59,279 --> 00:29:02,640
he said that account takeover is

646
00:29:02,640 --> 00:29:03,679
possible for

647
00:29:03,679 --> 00:29:07,520
any type of uh account

648
00:29:07,520 --> 00:29:10,720
i mean including writers partners and

649
00:29:10,720 --> 00:29:13,840
even uber eats

650
00:29:13,840 --> 00:29:17,120
so but how right let's see

651
00:29:17,120 --> 00:29:20,159
we have two apis at this point

652
00:29:20,159 --> 00:29:23,679
to exploit the either vulnerability for

653
00:29:23,679 --> 00:29:24,080
this

654
00:29:24,080 --> 00:29:27,200
example for uber's example so

655
00:29:27,200 --> 00:29:30,320
we will talk about the first one

656
00:29:30,320 --> 00:29:34,799
first um there's a request

657
00:29:34,799 --> 00:29:38,240
and the host is partners uber.com

658
00:29:38,240 --> 00:29:40,960
this is our first api as well as i told

659
00:29:40,960 --> 00:29:42,320
you before

660
00:29:42,320 --> 00:29:45,520
and it asked national phone number

661
00:29:45,520 --> 00:29:48,799
as a parameter and when you write about

662
00:29:48,799 --> 00:29:49,120
a

663
00:29:49,120 --> 00:29:52,720
national phone number response

664
00:29:52,720 --> 00:29:54,960
under the request there is response

665
00:29:54,960 --> 00:29:55,919
response

666
00:29:55,919 --> 00:29:58,720
if you if you focus on response message

667
00:29:58,720 --> 00:29:59,760
it reveals

668
00:29:59,760 --> 00:30:02,799
a sensitive information in in here

669
00:30:02,799 --> 00:30:06,960
driver's id id i mean

670
00:30:06,960 --> 00:30:10,000
so okay we found one then

671
00:30:10,000 --> 00:30:13,919
let's go another api it's also

672
00:30:13,919 --> 00:30:16,880
the second api the hosts are same but

673
00:30:16,880 --> 00:30:19,039
there's two different apis in here we're

674
00:30:19,039 --> 00:30:22,159
talking about the first one was asking

675
00:30:22,159 --> 00:30:24,880
phone number but the second one is

676
00:30:24,880 --> 00:30:27,120
asking email information

677
00:30:27,120 --> 00:30:30,320
and with email information

678
00:30:30,320 --> 00:30:33,039
we're sending email information here it

679
00:30:33,039 --> 00:30:34,399
comes back

680
00:30:34,399 --> 00:30:38,640
with a message again with an uuid

681
00:30:38,640 --> 00:30:41,679
the ueid is leaked in here

682
00:30:41,679 --> 00:30:44,960
it's uber's uber's ui id

683
00:30:44,960 --> 00:30:48,240
with exchanging email information

684
00:30:48,240 --> 00:30:51,279
so we had two apis one

685
00:30:51,279 --> 00:30:54,480
is asking phone number and gives us id

686
00:30:54,480 --> 00:30:57,519
of the user and the second one is asking

687
00:30:57,519 --> 00:30:59,440
email as a parameter and

688
00:30:59,440 --> 00:31:02,480
gives also id you your id of the

689
00:31:02,480 --> 00:31:05,760
of that user

690
00:31:05,760 --> 00:31:09,279
and um since we have

691
00:31:09,279 --> 00:31:13,600
leaked uuid information

692
00:31:13,840 --> 00:31:17,840
we can replay the blow requests

693
00:31:17,840 --> 00:31:21,039
with with victims uh

694
00:31:21,039 --> 00:31:24,080
uuid in uber and

695
00:31:24,080 --> 00:31:27,200
as you could see in the 14th line that

696
00:31:27,200 --> 00:31:27,519
it

697
00:31:27,519 --> 00:31:31,039
asked user uid as a parameter here and

698
00:31:31,039 --> 00:31:32,880
host is bonjour uber

699
00:31:32,880 --> 00:31:36,320
dot com and

700
00:31:36,320 --> 00:31:39,519
here is the response in our response

701
00:31:39,519 --> 00:31:43,120
we can see many many informations

702
00:31:43,120 --> 00:31:46,640
in here belong to any user

703
00:31:46,640 --> 00:31:49,760
role and user type in here

704
00:31:49,760 --> 00:31:53,120
so we had two different endpoints

705
00:31:53,120 --> 00:31:56,480
which were giving us uid

706
00:31:56,480 --> 00:32:00,240
and another endpoint which is this one

707
00:32:00,240 --> 00:32:03,760
asking you this ui these as a parameter

708
00:32:03,760 --> 00:32:04,320
and

709
00:32:04,320 --> 00:32:08,159
um return with

710
00:32:08,159 --> 00:32:12,000
uh information private information of

711
00:32:12,000 --> 00:32:16,080
the user belong to that user uid

712
00:32:16,080 --> 00:32:18,320
so

713
00:32:19,519 --> 00:32:23,519
welcome if you're able to hang on so far

714
00:32:23,519 --> 00:32:26,960
everything is fine so after this part

715
00:32:26,960 --> 00:32:30,559
we will talk about um

716
00:32:30,559 --> 00:32:33,360
hunting the idol and i will talk about

717
00:32:33,360 --> 00:32:34,159
tips and

718
00:32:34,159 --> 00:32:38,159
tricks about hunting either and

719
00:32:38,159 --> 00:32:41,200
try to explain some tools to

720
00:32:41,200 --> 00:32:45,600
make it easier so

721
00:32:45,600 --> 00:32:48,640
oh so far we always talked about

722
00:32:48,640 --> 00:32:51,600
two users two different users in same

723
00:32:51,600 --> 00:32:52,799
roles or different

724
00:32:52,799 --> 00:32:55,760
roles but we have talked about two users

725
00:32:55,760 --> 00:32:58,480
all the time about testing either so far

726
00:32:58,480 --> 00:33:02,000
but mostly we have more than two users

727
00:33:02,000 --> 00:33:05,679
and when when we need when we're limited

728
00:33:05,679 --> 00:33:06,960
with

729
00:33:06,960 --> 00:33:10,240
our browser then we don't

730
00:33:10,240 --> 00:33:13,840
have a clean test we we may confused

731
00:33:13,840 --> 00:33:17,440
and it can be messy but

732
00:33:17,440 --> 00:33:19,679
with autochrome autochrome is a chromium

733
00:33:19,679 --> 00:33:20,720
browser

734
00:33:20,720 --> 00:33:24,880
um let us have more than one user

735
00:33:24,880 --> 00:33:27,919
and as you can see in here

736
00:33:27,919 --> 00:33:31,440
each user has a different colored in a

737
00:33:31,440 --> 00:33:32,799
different color

738
00:33:32,799 --> 00:33:37,200
so for every typo for each type you have

739
00:33:37,200 --> 00:33:41,120
different colors so it can

740
00:33:41,120 --> 00:33:44,480
it let us clean test really and

741
00:33:44,480 --> 00:33:47,120
we have we may have active concurrent

742
00:33:47,120 --> 00:33:49,279
sessions in here it

743
00:33:49,279 --> 00:33:53,840
lead us clean environment

744
00:33:55,279 --> 00:33:59,679
so this is another one pawn fox is a

745
00:33:59,679 --> 00:34:02,640
autochrome for

746
00:34:03,440 --> 00:34:07,279
firefox we can say um but

747
00:34:07,279 --> 00:34:10,639
in the latest version it has for firefox

748
00:34:10,639 --> 00:34:12,480
and burp suite as well

749
00:34:12,480 --> 00:34:15,520
you can add as an add-on on

750
00:34:15,520 --> 00:34:18,879
firefox or you can add as an extension

751
00:34:18,879 --> 00:34:20,000
in birch suite

752
00:34:20,000 --> 00:34:23,599
as well it's the same

753
00:34:23,599 --> 00:34:26,399
everything is colored in every each user

754
00:34:26,399 --> 00:34:26,960
i mean

755
00:34:26,960 --> 00:34:29,440
each different user is colored in

756
00:34:29,440 --> 00:34:30,000
different

757
00:34:30,000 --> 00:34:33,199
colors so it is easy to control

758
00:34:33,199 --> 00:34:36,560
and it is easy easier

759
00:34:36,560 --> 00:34:40,639
to test the eidor

760
00:34:41,520 --> 00:34:44,800
last one but not least one

761
00:34:44,800 --> 00:34:48,079
automatrix is an extension in birth

762
00:34:48,079 --> 00:34:48,800
suite

763
00:34:48,800 --> 00:34:52,399
specifically um it can be

764
00:34:52,399 --> 00:34:56,639
added as another top tab on burp suite

765
00:34:56,639 --> 00:35:00,640
from extensions and you can create

766
00:35:00,640 --> 00:35:04,480
many users in many permission levels

767
00:35:04,480 --> 00:35:07,440
and you you can ask for the test for

768
00:35:07,440 --> 00:35:08,079
each one

769
00:35:08,079 --> 00:35:10,560
and you can say that this is for read

770
00:35:10,560 --> 00:35:11,440
permission

771
00:35:11,440 --> 00:35:14,839
this is for update permission for

772
00:35:14,839 --> 00:35:16,320
example and

773
00:35:16,320 --> 00:35:20,880
the the colors means uh of different

774
00:35:20,880 --> 00:35:23,920
things like for example green said that

775
00:35:23,920 --> 00:35:27,280
this is legit and uh

776
00:35:27,280 --> 00:35:30,560
red said that there can be vulnerability

777
00:35:30,560 --> 00:35:31,119
in here

778
00:35:31,119 --> 00:35:33,599
check it and also there is blue i guess

779
00:35:33,599 --> 00:35:34,720
it's not

780
00:35:34,720 --> 00:35:37,200
shown and displayed in here blue said

781
00:35:37,200 --> 00:35:40,320
that it can be false positive

782
00:35:40,320 --> 00:35:43,520
so there's only just one setback about

783
00:35:43,520 --> 00:35:46,800
automatrix which is which can occur

784
00:35:46,800 --> 00:35:50,560
in delete operation

785
00:35:50,560 --> 00:35:54,560
read and update operation is works well

786
00:35:54,560 --> 00:35:58,000
but naturally delete operation can be

787
00:35:58,000 --> 00:36:01,040
a bit problematic so let's

788
00:36:01,040 --> 00:36:04,079
come back to order details examples you

789
00:36:04,079 --> 00:36:04,720
remember

790
00:36:04,720 --> 00:36:08,160
we had user a we had user b both have

791
00:36:08,160 --> 00:36:11,839
products and their orders were different

792
00:36:11,839 --> 00:36:12,320
and

793
00:36:12,320 --> 00:36:15,599
the ids were different etc and

794
00:36:15,599 --> 00:36:19,440
let's say that we asked to test um

795
00:36:19,440 --> 00:36:22,079
old matrix delete operation for user a

796
00:36:22,079 --> 00:36:23,599
and user b

797
00:36:23,599 --> 00:36:26,800
and let's say that uh first

798
00:36:26,800 --> 00:36:30,320
tried um to delete the

799
00:36:30,320 --> 00:36:34,000
user a sport which was one zero zero

800
00:36:34,000 --> 00:36:35,119
five six

801
00:36:35,119 --> 00:36:38,640
with the order id which was belong to

802
00:36:38,640 --> 00:36:41,760
user a and then let's say

803
00:36:41,760 --> 00:36:44,960
it is succeeded and the

804
00:36:44,960 --> 00:36:48,160
order is deleted then if

805
00:36:48,160 --> 00:36:52,240
alt matrix tried as user b

806
00:36:52,240 --> 00:36:55,680
and change the order id to one zero zero

807
00:36:55,680 --> 00:36:56,880
five six which

808
00:36:56,880 --> 00:36:59,839
user b had one zero zero one seven order

809
00:36:59,839 --> 00:37:00,240
id

810
00:37:00,240 --> 00:37:03,520
let's say and tries to delete user

811
00:37:03,520 --> 00:37:06,720
a's orders for example

812
00:37:06,720 --> 00:37:10,079
i mean user b is

813
00:37:10,079 --> 00:37:13,920
trying user a's orders trying to delete

814
00:37:13,920 --> 00:37:14,880
user a's

815
00:37:14,880 --> 00:37:18,160
orders let's say with automatrix

816
00:37:18,160 --> 00:37:21,280
we automate it

817
00:37:21,280 --> 00:37:24,720
if automatic it if if it can't be

818
00:37:24,720 --> 00:37:27,119
deleted it doesn't mean that there's no

819
00:37:27,119 --> 00:37:29,440
either it means that we already deleted

820
00:37:29,440 --> 00:37:31,680
the order

821
00:37:31,680 --> 00:37:35,359
when we when we're testing for user a

822
00:37:35,359 --> 00:37:38,960
when we see http 4 0 0 it doesn't mean

823
00:37:38,960 --> 00:37:40,800
that there's no either it means that

824
00:37:40,800 --> 00:37:41,119
it's

825
00:37:41,119 --> 00:37:44,640
already deleted so naturally

826
00:37:44,640 --> 00:37:46,640
delete operation can be a bit

827
00:37:46,640 --> 00:37:48,400
problematic for

828
00:37:48,400 --> 00:37:50,960
automatics for automated test to

829
00:37:50,960 --> 00:37:53,920
automated way

830
00:37:54,640 --> 00:37:59,680
okay let's talk about mitigations

831
00:38:00,560 --> 00:38:04,240
either is a complex vulnerability

832
00:38:04,240 --> 00:38:08,240
let's accept that and also finding

833
00:38:08,240 --> 00:38:10,960
a mitigation for either to mitigate

834
00:38:10,960 --> 00:38:12,079
ardor is

835
00:38:12,079 --> 00:38:13,650
a bit um

836
00:38:13,650 --> 00:38:15,280
[Music]

837
00:38:15,280 --> 00:38:20,160
complex but it's possible of course

838
00:38:22,800 --> 00:38:25,040
the main point of eidor is insufficient

839
00:38:25,040 --> 00:38:26,720
access control

840
00:38:26,720 --> 00:38:28,960
so roles and their business rules should

841
00:38:28,960 --> 00:38:31,440
have been defined well

842
00:38:31,440 --> 00:38:36,240
and you can do necessary tests with

843
00:38:36,240 --> 00:38:39,920
automatrix kind of tools so if you do

844
00:38:39,920 --> 00:38:40,640
that

845
00:38:40,640 --> 00:38:45,040
then there won't be either vulnerability

846
00:38:45,040 --> 00:38:46,290
but um

847
00:38:46,290 --> 00:38:48,079
[Music]

848
00:38:48,079 --> 00:38:51,760
even if you did that

849
00:38:53,760 --> 00:38:57,680
um or you forget something then either

850
00:38:57,680 --> 00:38:59,440
may occur

851
00:38:59,440 --> 00:39:01,680
when the for example authorization check

852
00:39:01,680 --> 00:39:03,359
is forgotten

853
00:39:03,359 --> 00:39:06,800
reach an object so

854
00:39:06,800 --> 00:39:11,040
you can use randomly generated uuids

855
00:39:11,040 --> 00:39:13,440
instead of id information auto

856
00:39:13,440 --> 00:39:14,720
incremental id

857
00:39:14,720 --> 00:39:17,520
information so in this case you can

858
00:39:17,520 --> 00:39:17,920
store

859
00:39:17,920 --> 00:39:21,119
it into db so in this case even if

860
00:39:21,119 --> 00:39:24,640
either occurs in your system uh the

861
00:39:24,640 --> 00:39:28,480
attacker or intruder whatever you say um

862
00:39:28,480 --> 00:39:31,760
can't guess the next uuid

863
00:39:31,760 --> 00:39:36,240
because it's random to your id

864
00:39:37,359 --> 00:39:40,880
so the last one sometimes

865
00:39:40,880 --> 00:39:44,320
it can be really hard to apply

866
00:39:44,320 --> 00:39:47,440
first and second step on

867
00:39:47,440 --> 00:39:50,000
huge applications like legacy

868
00:39:50,000 --> 00:39:51,040
applications

869
00:39:51,040 --> 00:39:54,560
mostly usually so

870
00:39:54,560 --> 00:39:58,480
you have auto incremental object ids

871
00:39:58,480 --> 00:40:01,920
in your system in in this point you can

872
00:40:01,920 --> 00:40:04,960
apply a hash function with salt

873
00:40:04,960 --> 00:40:08,800
and put a hash map create a hash map

874
00:40:08,800 --> 00:40:12,079
as a key value payer and store you can

875
00:40:12,079 --> 00:40:13,359
store them into

876
00:40:13,359 --> 00:40:16,240
session and when the session ends will

877
00:40:16,240 --> 00:40:18,160
be deleted of course

878
00:40:18,160 --> 00:40:22,560
so there's a

879
00:40:23,599 --> 00:40:26,640
function built-in function for that or

880
00:40:26,640 --> 00:40:29,040
you can create it of course

881
00:40:29,040 --> 00:40:30,880
as you can see it in here the first one

882
00:40:30,880 --> 00:40:33,040
is random access reference map

883
00:40:33,040 --> 00:40:36,400
which creates um hash value

884
00:40:36,400 --> 00:40:39,359
and the other one get direct reference

885
00:40:39,359 --> 00:40:40,079
when you

886
00:40:40,079 --> 00:40:43,599
give the hash value you can get the real

887
00:40:43,599 --> 00:40:46,560
value and the last one is get indirect

888
00:40:46,560 --> 00:40:47,280
reference

889
00:40:47,280 --> 00:40:50,560
which is when you give the real

890
00:40:50,560 --> 00:40:54,480
id you can get the hash id

891
00:40:54,800 --> 00:40:57,040
so

892
00:40:58,000 --> 00:41:01,119
in in here instead of id information

893
00:41:01,119 --> 00:41:04,319
we expose the corresponding uid

894
00:41:04,319 --> 00:41:07,440
information as we we could check in the

895
00:41:07,440 --> 00:41:10,560
example we have random access reference

896
00:41:10,560 --> 00:41:12,160
map we have our

897
00:41:12,160 --> 00:41:15,280
i mean we give order as a parameter it

898
00:41:15,280 --> 00:41:16,079
creates a

899
00:41:16,079 --> 00:41:19,359
map object and with with this map object

900
00:41:19,359 --> 00:41:22,800
we can um stored it into

901
00:41:22,800 --> 00:41:25,920
our session and when

902
00:41:25,920 --> 00:41:28,640
we need our order id we can use get

903
00:41:28,640 --> 00:41:29,839
direct reference

904
00:41:29,839 --> 00:41:32,400
with uid information of course and we

905
00:41:32,400 --> 00:41:33,200
can get the

906
00:41:33,200 --> 00:41:36,000
order id information so in this way

907
00:41:36,000 --> 00:41:37,760
we're proxying the data

908
00:41:37,760 --> 00:41:41,440
and storing into the server side of

909
00:41:41,440 --> 00:41:42,160
course

910
00:41:42,160 --> 00:41:45,440
um in this way it is

911
00:41:45,440 --> 00:41:48,560
it became harder

912
00:41:48,560 --> 00:41:51,839
to learn the order id since we have uuid

913
00:41:51,839 --> 00:41:53,200
again instead of the

914
00:41:53,200 --> 00:41:56,240
id itself

915
00:41:57,119 --> 00:42:00,480
so that's all folks thanks for listening

916
00:42:00,480 --> 00:42:02,720
and if you'd like to follow me again you

917
00:42:02,720 --> 00:42:04,880
can follow me on either

918
00:42:04,880 --> 00:42:10,319
twitter or medium i'm waiting for the

919
00:42:14,839 --> 00:42:17,839
questions

920
00:42:21,119 --> 00:42:24,240
what an amazing talk didn't i tell you

921
00:42:24,240 --> 00:42:25,680
this was going to be amazing

922
00:42:25,680 --> 00:42:27,680
i was so excited there was a reason for

923
00:42:27,680 --> 00:42:30,240
this and now i'm happy to announce that

924
00:42:30,240 --> 00:42:31,839
we have aisha here

925
00:42:31,839 --> 00:42:34,880
with us so um welcome you to

926
00:42:34,880 --> 00:42:38,160
nothing come live and uh

927
00:42:38,160 --> 00:42:40,240
so we can answer all the questions

928
00:42:40,240 --> 00:42:41,839
please if you

929
00:42:41,839 --> 00:42:44,480
uh in the audience want to ask questions

930
00:42:44,480 --> 00:42:45,280
you can do it

931
00:42:45,280 --> 00:42:48,160
either via twitch or you can also use

932
00:42:48,160 --> 00:42:49,359
the questions

933
00:42:49,359 --> 00:42:53,119
channel on our discord server so

934
00:42:53,119 --> 00:42:55,680
okay uh questions are actually popping

935
00:42:55,680 --> 00:42:57,599
in

936
00:42:57,599 --> 00:43:00,960
yeah uh we we got one is uh in a few

937
00:43:00,960 --> 00:43:02,480
words

938
00:43:02,480 --> 00:43:04,480
and with all your experience how much do

939
00:43:04,480 --> 00:43:06,319
you trust mainstream web apps

940
00:43:06,319 --> 00:43:08,800
in regards of your personal information

941
00:43:08,800 --> 00:43:09,520
like twitter

942
00:43:09,520 --> 00:43:12,800
amazon facebook twitch

943
00:43:12,800 --> 00:43:16,160
okay i don't i don't

944
00:43:16,160 --> 00:43:18,800
but there's nothing that we can do for

945
00:43:18,800 --> 00:43:20,000
that i guess

946
00:43:20,000 --> 00:43:22,480
everything is processing our data and

947
00:43:22,480 --> 00:43:24,400
everything has our data even our

948
00:43:24,400 --> 00:43:25,440
government has

949
00:43:25,440 --> 00:43:28,480
our data and even some applications are

950
00:43:28,480 --> 00:43:31,200
selling our data so i don't but

951
00:43:31,200 --> 00:43:32,960
i don't know what we can do about it

952
00:43:32,960 --> 00:43:35,920
right now it's a matter of privacy but

953
00:43:35,920 --> 00:43:39,040
it's like nobody is respecting

954
00:43:39,040 --> 00:43:41,760
totally like uh we have to find a way to

955
00:43:41,760 --> 00:43:43,040
empower users

956
00:43:43,040 --> 00:43:46,160
to uh demand rights when it comes to to

957
00:43:46,160 --> 00:43:46,880
privacy

958
00:43:46,880 --> 00:43:50,960
and uh data security right

959
00:43:50,960 --> 00:43:54,079
um exactly but some people are asking

960
00:43:54,079 --> 00:43:55,359
for you to revisit the

961
00:43:55,359 --> 00:43:59,200
logical what a logical vulnerability is

962
00:43:59,200 --> 00:44:02,400
okay i can explain that one i guess

963
00:44:02,400 --> 00:44:04,880
uh the difference between the technical

964
00:44:04,880 --> 00:44:07,520
and logical vulnerability is that

965
00:44:07,520 --> 00:44:09,680
we're not finding the logical

966
00:44:09,680 --> 00:44:10,800
liabilities in

967
00:44:10,800 --> 00:44:14,160
our source code i mean we cannot

968
00:44:14,160 --> 00:44:18,160
um how can i extend for example sql

969
00:44:18,160 --> 00:44:20,079
injection is a technical vulnerability

970
00:44:20,079 --> 00:44:22,240
another logical one and it's

971
00:44:22,240 --> 00:44:25,599
mostly about um

972
00:44:25,599 --> 00:44:27,839
a vulnerability happen into our source

973
00:44:27,839 --> 00:44:29,920
code but the insecure direct object

974
00:44:29,920 --> 00:44:31,599
references on the other hand is a

975
00:44:31,599 --> 00:44:34,880
logical vulnerability

976
00:44:35,440 --> 00:44:38,000
it's it's mostly about the decision of

977
00:44:38,000 --> 00:44:39,040
web application

978
00:44:39,040 --> 00:44:41,280
it's it's mostly the problem in the

979
00:44:41,280 --> 00:44:42,400
decision mechanism

980
00:44:42,400 --> 00:44:44,160
in our web application this is the

981
00:44:44,160 --> 00:44:46,160
logical vulnerability i think we can

982
00:44:46,160 --> 00:44:49,520
describe it amazing

983
00:44:49,520 --> 00:44:52,560
it's it's so clear and i was uh talking

984
00:44:52,560 --> 00:44:53,040
to you

985
00:44:53,040 --> 00:44:55,520
backstage that if you wanted to share

986
00:44:55,520 --> 00:44:56,480
about uh

987
00:44:56,480 --> 00:44:58,319
information about your blog because you

988
00:44:58,319 --> 00:45:00,319
you write so much about this

989
00:45:00,319 --> 00:45:02,640
that i think maybe the audience might be

990
00:45:02,640 --> 00:45:04,880
interested in actually

991
00:45:04,880 --> 00:45:08,319
visiting afterwards

992
00:45:08,319 --> 00:45:11,599
yeah sure since i'm a phd candidate

993
00:45:11,599 --> 00:45:12,240
right now

994
00:45:12,240 --> 00:45:15,119
an academical student i'm trying to

995
00:45:15,119 --> 00:45:16,079
write

996
00:45:16,079 --> 00:45:18,480
technical as much as possible and some

997
00:45:18,480 --> 00:45:19,280
of them are

998
00:45:19,280 --> 00:45:20,880
related to machine learning deep

999
00:45:20,880 --> 00:45:22,720
learning stuff and some of them

1000
00:45:22,720 --> 00:45:26,240
are related to uh security stuff and

1001
00:45:26,240 --> 00:45:29,359
so far i couldn't write a lot of

1002
00:45:29,359 --> 00:45:33,119
blog posts but i do as much as i could

1003
00:45:33,119 --> 00:45:36,480
so if you would like to check the uh my

1004
00:45:36,480 --> 00:45:37,680
blog post you can

1005
00:45:37,680 --> 00:45:40,480
check from the medium i shared and also

1006
00:45:40,480 --> 00:45:41,680
i can share it

1007
00:45:41,680 --> 00:45:44,960
in the in discord as well the link i

1008
00:45:44,960 --> 00:45:46,319
mean

1009
00:45:46,319 --> 00:45:48,960
that's great yeah that would be amazing

1010
00:45:48,960 --> 00:45:51,280
uh we got another question that says

1011
00:45:51,280 --> 00:45:53,680
what framework do you recommend to start

1012
00:45:53,680 --> 00:45:54,720
to know more about

1013
00:45:54,720 --> 00:45:58,400
access control uh where is it

1014
00:45:58,400 --> 00:46:02,079
i could i couldn't see it it's right i

1015
00:46:02,079 --> 00:46:06,400
couldn't okay on twitch

1016
00:46:06,400 --> 00:46:09,680
i wanted to see what framework you

1017
00:46:09,680 --> 00:46:11,680
comment start to know more about access

1018
00:46:11,680 --> 00:46:12,880
control

1019
00:46:12,880 --> 00:46:16,240
uh i guess i don't have a recommendation

1020
00:46:16,240 --> 00:46:17,680
about it

1021
00:46:17,680 --> 00:46:20,000
okay i don't think that i can recommend

1022
00:46:20,000 --> 00:46:23,119
the framework specifically

1023
00:46:23,119 --> 00:46:25,599
yeah it's like i think it's most like a

1024
00:46:25,599 --> 00:46:27,280
a set of tools

1025
00:46:27,280 --> 00:46:29,359
that you can use there are so many

1026
00:46:29,359 --> 00:46:30,560
different workshops

1027
00:46:30,560 --> 00:46:32,319
um for the audience if you are

1028
00:46:32,319 --> 00:46:34,079
interested there we have a

1029
00:46:34,079 --> 00:46:36,640
a group that's called lesbian infosec a

1030
00:46:36,640 --> 00:46:37,520
different server

1031
00:46:37,520 --> 00:46:39,839
and we have different channels also in

1032
00:46:39,839 --> 00:46:42,000
our not ping con server

1033
00:46:42,000 --> 00:46:45,359
where you can post different resources

1034
00:46:45,359 --> 00:46:47,119
about different topics and information

1035
00:46:47,119 --> 00:46:48,480
security so

1036
00:46:48,480 --> 00:46:50,960
if any of you have any recommendations

1037
00:46:50,960 --> 00:46:52,640
when it comes to access control or

1038
00:46:52,640 --> 00:46:54,240
platforms or tools that you want to

1039
00:46:54,240 --> 00:46:56,800
share you may want to post it on this

1040
00:46:56,800 --> 00:46:58,640
different channels that we have prepared

1041
00:46:58,640 --> 00:46:59,200
for you

1042
00:46:59,200 --> 00:47:01,280
to have this discussion and to continue

1043
00:47:01,280 --> 00:47:03,839
this q a that we are now having

1044
00:47:03,839 --> 00:47:07,920
um live with aisha

1045
00:47:08,560 --> 00:47:10,640
okay should applications move out the

1046
00:47:10,640 --> 00:47:11,839
authorization logic

1047
00:47:11,839 --> 00:47:16,240
to external components uh

1048
00:47:16,240 --> 00:47:18,880
i i i don't think that i can say that

1049
00:47:18,880 --> 00:47:20,079
you should

1050
00:47:20,079 --> 00:47:23,280
but if you i mean you can of course

1051
00:47:23,280 --> 00:47:26,640
but you have to be um

1052
00:47:26,640 --> 00:47:31,760
you have to prepare the logic

1053
00:47:31,760 --> 00:47:35,119
in a proper way i think

1054
00:47:35,680 --> 00:47:38,720
okay yeah i get it

1055
00:47:38,720 --> 00:47:41,119
um let's see if we have any more

1056
00:47:41,119 --> 00:47:42,240
questions

1057
00:47:42,240 --> 00:47:44,400
everybody is crazy about your talk we

1058
00:47:44,400 --> 00:47:46,079
have so many comments

1059
00:47:46,079 --> 00:47:48,559
people loved it and we knew they would

1060
00:47:48,559 --> 00:47:50,000
because it was amazing

1061
00:47:50,000 --> 00:47:52,480
like we saw the right yes this is going

1062
00:47:52,480 --> 00:47:55,200
to work so well

1063
00:47:55,200 --> 00:47:58,000
um so last chance for anyone who wants

1064
00:47:58,000 --> 00:47:59,359
to

1065
00:47:59,359 --> 00:48:03,759
post questions in either channel

1066
00:48:04,839 --> 00:48:06,240
and

1067
00:48:06,240 --> 00:48:08,880
meanwhile i'm gonna say that i'm i'm so

1068
00:48:08,880 --> 00:48:10,640
happy that you are a part of this

1069
00:48:10,640 --> 00:48:11,520
conference

1070
00:48:11,520 --> 00:48:13,440
i believe you really like buenos aires

1071
00:48:13,440 --> 00:48:15,200
someone told me so tell me

1072
00:48:15,200 --> 00:48:20,800
yeah i'm so sorry

1073
00:48:20,800 --> 00:48:23,280
i mean i i told that i want to live for

1074
00:48:23,280 --> 00:48:25,520
a while and buenos aires i guess like

1075
00:48:25,520 --> 00:48:28,240
six months or something i love the city

1076
00:48:28,240 --> 00:48:29,359
really

1077
00:48:29,359 --> 00:48:31,200
well that would be an experience and you

1078
00:48:31,200 --> 00:48:32,400
are welcome

1079
00:48:32,400 --> 00:48:34,960
if you want to come you're totally you

1080
00:48:34,960 --> 00:48:36,000
have to

1081
00:48:36,000 --> 00:48:38,319
i have friends right now that i i won't

1082
00:48:38,319 --> 00:48:39,520
be alone when i

1083
00:48:39,520 --> 00:48:42,160
come in there totally you have so many

1084
00:48:42,160 --> 00:48:42,640
friends

1085
00:48:42,640 --> 00:48:44,240
and people waiting for you and perhaps

1086
00:48:44,240 --> 00:48:46,240
we can organize another chat about

1087
00:48:46,240 --> 00:48:49,599
web application logic yeah i hope so

1088
00:48:49,599 --> 00:48:53,520
thank you so much for inviting me

1089
00:48:53,520 --> 00:48:55,680
it's an amazing conference that you're

1090
00:48:55,680 --> 00:48:57,200
organizing i mean

1091
00:48:57,200 --> 00:49:00,559
the whole process was so meticulous and

1092
00:49:00,559 --> 00:49:03,280
flawless i have to say that congrats oh

1093
00:49:03,280 --> 00:49:04,800
that means a lot to us

1094
00:49:04,800 --> 00:49:07,599
seriously because we have worked so far

1095
00:49:07,599 --> 00:49:09,280
so much for so long

1096
00:49:09,280 --> 00:49:12,000
to make this happen so thank you thanks

1097
00:49:12,000 --> 00:49:12,400
the

1098
00:49:12,400 --> 00:49:14,400
to the audience that's behind the

1099
00:49:14,400 --> 00:49:16,880
screens being part of this conference

1100
00:49:16,880 --> 00:49:19,920
and we also want to extend our support

1101
00:49:19,920 --> 00:49:21,680
and our thoughts to all the women in

1102
00:49:21,680 --> 00:49:24,079
turkey who are having such a rough time

1103
00:49:24,079 --> 00:49:26,240
when it comes to the violation of their

1104
00:49:26,240 --> 00:49:27,440
civil and

1105
00:49:27,440 --> 00:49:30,960
human rights so also extend all of our

1106
00:49:30,960 --> 00:49:31,359
love

1107
00:49:31,359 --> 00:49:33,680
and support to this woman and we're

1108
00:49:33,680 --> 00:49:35,200
going to be posting different

1109
00:49:35,200 --> 00:49:38,240
uh links on our lovey and different

1110
00:49:38,240 --> 00:49:39,440
channels on discord

1111
00:49:39,440 --> 00:49:42,319
to make awareness create awareness about

1112
00:49:42,319 --> 00:49:43,359
this topic

1113
00:49:43,359 --> 00:49:46,160
so thank you all for joining i'm we're

1114
00:49:46,160 --> 00:49:46,720
going to

1115
00:49:46,720 --> 00:49:49,200
a short break and then we are going to

1116
00:49:49,200 --> 00:49:49,839
continue

1117
00:49:49,839 --> 00:49:59,200
with more not pink on talks

1118
00:49:59,200 --> 00:50:26,840
[Music]

1119
00:50:26,840 --> 00:50:28,830
[Applause]

1120
00:50:28,830 --> 00:50:50,000
[Music]

1121
00:50:50,000 --> 00:50:52,079
you

