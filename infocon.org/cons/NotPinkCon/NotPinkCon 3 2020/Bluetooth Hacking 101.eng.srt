1
00:00:07,120 --> 00:00:08,720
hi again let's continue

2
00:00:08,720 --> 00:00:11,200
with our talks the next one is going to

3
00:00:11,200 --> 00:00:12,240
be in english

4
00:00:12,240 --> 00:00:14,000
so remember that we have live

5
00:00:14,000 --> 00:00:16,720
translation in our discord server

6
00:00:16,720 --> 00:00:18,960
this talk is about bluetooth hacking if

7
00:00:18,960 --> 00:00:21,520
you are interested in wireless security

8
00:00:21,520 --> 00:00:24,640
but have no idea where to start this

9
00:00:24,640 --> 00:00:26,160
talk is for you

10
00:00:26,160 --> 00:00:28,800
iska the presenter is a specialist in

11
00:00:28,800 --> 00:00:30,160
bluetooth security

12
00:00:30,160 --> 00:00:32,000
and she will talk about the current

13
00:00:32,000 --> 00:00:33,760
state of bluetooth security

14
00:00:33,760 --> 00:00:35,520
and how to find bags in its

15
00:00:35,520 --> 00:00:38,079
specifications and implementations

16
00:00:38,079 --> 00:00:42,399
so let's welcome yiska with her talk

17
00:00:42,840 --> 00:00:45,039
bluetoothhacking101

18
00:00:45,039 --> 00:00:46,879
hello everyone and welcome to the talk

19
00:00:46,879 --> 00:00:48,640
loot packing 101

20
00:00:48,640 --> 00:00:50,640
i've been working quite a lot in the

21
00:00:50,640 --> 00:00:53,360
past on bluetooth and developing my own

22
00:00:53,360 --> 00:00:55,120
tools but i've also been supervising

23
00:00:55,120 --> 00:00:57,199
students who built even better tools and

24
00:00:57,199 --> 00:00:58,239
also tried

25
00:00:58,239 --> 00:01:00,879
tools by other people who were trying to

26
00:01:00,879 --> 00:01:01,520
hex

27
00:01:01,520 --> 00:01:03,440
bluetooth or even successfully hacked

28
00:01:03,440 --> 00:01:06,000
things there

29
00:01:06,159 --> 00:01:09,520
so you might ask yourself why

30
00:01:09,520 --> 00:01:11,280
do you even want to have bluetooth well

31
00:01:11,280 --> 00:01:13,439
everything is better with bluetooth

32
00:01:13,439 --> 00:01:16,000
as we already know and because

33
00:01:16,000 --> 00:01:17,280
everything is better with bluetooth

34
00:01:17,280 --> 00:01:17,920
pluto

35
00:01:17,920 --> 00:01:21,040
is everywhere and also everything can be

36
00:01:21,040 --> 00:01:21,520
hacked

37
00:01:21,520 --> 00:01:23,680
with bluetooth because of this and if i

38
00:01:23,680 --> 00:01:24,880
say bluetooth is

39
00:01:24,880 --> 00:01:27,920
everywhere i mean like really everywhere

40
00:01:27,920 --> 00:01:29,759
in your smart home in your car in your

41
00:01:29,759 --> 00:01:31,280
smartphones in your iot and your

42
00:01:31,280 --> 00:01:32,880
headsets in your medical devices

43
00:01:32,880 --> 00:01:36,079
and even a lot of other places so

44
00:01:36,079 --> 00:01:38,159
um if you can hack bluetooth you can

45
00:01:38,159 --> 00:01:41,840
hack almost every device

46
00:01:42,799 --> 00:01:44,560
but actually there are two types of

47
00:01:44,560 --> 00:01:46,240
bluetooth and you might not have heard

48
00:01:46,240 --> 00:01:47,520
about this before

49
00:01:47,520 --> 00:01:49,439
but there is classic bluetooth and

50
00:01:49,439 --> 00:01:51,200
there's bluetooth low energy and classic

51
00:01:51,200 --> 00:01:52,479
bluetooth is what you know

52
00:01:52,479 --> 00:01:54,159
as for example your headset or your

53
00:01:54,159 --> 00:01:56,320
current zone they typically have

54
00:01:56,320 --> 00:01:58,880
the classic bluetooth which has a high

55
00:01:58,880 --> 00:02:01,439
data throughput but a short battery life

56
00:02:01,439 --> 00:02:02,960
and then there is put to flow energy

57
00:02:02,960 --> 00:02:05,280
which you would see in iot devices it

58
00:02:05,280 --> 00:02:07,520
has like a low data throughput

59
00:02:07,520 --> 00:02:10,000
but a long battery life for example with

60
00:02:10,000 --> 00:02:12,000
a button cell you could like survive

61
00:02:12,000 --> 00:02:14,400
a full year just weakening some data

62
00:02:14,400 --> 00:02:15,440
around so

63
00:02:15,440 --> 00:02:18,480
these are the two types of bluetooth and

64
00:02:18,480 --> 00:02:20,000
you need to distinguish them they have

65
00:02:20,000 --> 00:02:20,720
two different

66
00:02:20,720 --> 00:02:22,959
physical layers so it's not really

67
00:02:22,959 --> 00:02:24,879
important for us what the difference is

68
00:02:24,879 --> 00:02:25,920
here but

69
00:02:25,920 --> 00:02:27,920
it's important to know that the

70
00:02:27,920 --> 00:02:29,680
bluetooth le physical layer has a

71
00:02:29,680 --> 00:02:31,360
different modulation scheme

72
00:02:31,360 --> 00:02:33,760
and it's usually having a very wide

73
00:02:33,760 --> 00:02:35,440
distance between

74
00:02:35,440 --> 00:02:38,080
each event so here it says 1.25

75
00:02:38,080 --> 00:02:39,440
milliseconds multiple of them but

76
00:02:39,440 --> 00:02:41,519
usually it's like every few seconds

77
00:02:41,519 --> 00:02:45,200
if you want to save energy

78
00:02:45,200 --> 00:02:48,000
and then there is actually some changes

79
00:02:48,000 --> 00:02:49,519
happening to the

80
00:02:49,519 --> 00:02:52,879
specifications so um data packets in the

81
00:02:52,879 --> 00:02:54,800
newer specifications become larger

82
00:02:54,800 --> 00:02:57,200
the physical layer changes a bit and so

83
00:02:57,200 --> 00:02:59,680
on and in bluetooth 5.2 they even

84
00:02:59,680 --> 00:03:03,040
introduced le audio but this is nothing

85
00:03:03,040 --> 00:03:04,159
i've seen

86
00:03:04,159 --> 00:03:06,480
in a device so far except from property

87
00:03:06,480 --> 00:03:08,080
solutions that are not the official

88
00:03:08,080 --> 00:03:11,200
bluetooth le audio

89
00:03:11,360 --> 00:03:14,239
and then what you also have is on top of

90
00:03:14,239 --> 00:03:15,680
these layers of the physics layer

91
00:03:15,680 --> 00:03:17,599
there's acl which is for data transfer

92
00:03:17,599 --> 00:03:18,480
and it's

93
00:03:18,480 --> 00:03:20,480
pretty much the same for the two and

94
00:03:20,480 --> 00:03:23,040
also the way how they handle encryption

95
00:03:23,040 --> 00:03:24,000
and keys is

96
00:03:24,000 --> 00:03:25,519
very similar even though it's called

97
00:03:25,519 --> 00:03:27,280
slight difference it has like a few

98
00:03:27,280 --> 00:03:29,120
differences but it's like almost the

99
00:03:29,120 --> 00:03:29,760
same

100
00:03:29,760 --> 00:03:33,360
on the upper layers now if you want to

101
00:03:33,360 --> 00:03:34,879
hack bluetooth there are a couple of

102
00:03:34,879 --> 00:03:36,799
setups that you can take

103
00:03:36,799 --> 00:03:38,480
and the first one is like you just have

104
00:03:38,480 --> 00:03:39,920
a lot of money and you

105
00:03:39,920 --> 00:03:41,920
buy an analyzer that can already do all

106
00:03:41,920 --> 00:03:44,000
of this

107
00:03:44,000 --> 00:03:45,680
it depends on even there are differences

108
00:03:45,680 --> 00:03:47,599
if you want one that really can do

109
00:03:47,599 --> 00:03:50,400
also classic bluetooth and so on uh you

110
00:03:50,400 --> 00:03:52,239
might end up paying a lot of money so

111
00:03:52,239 --> 00:03:53,920
this site at something like

112
00:03:53,920 --> 00:03:56,159
ten thousand dollars but it might be

113
00:03:56,159 --> 00:03:57,920
even more than this more like seventy

114
00:03:57,920 --> 00:03:59,840
thousand depending on what you want to

115
00:03:59,840 --> 00:04:00,799
do

116
00:04:00,799 --> 00:04:03,439
so with money you can of course solve

117
00:04:03,439 --> 00:04:05,040
this issue and

118
00:04:05,040 --> 00:04:06,959
if you want to start bluetooth hacking

119
00:04:06,959 --> 00:04:08,879
this is exactly what you want to invest

120
00:04:08,879 --> 00:04:09,439
right

121
00:04:09,439 --> 00:04:12,400
no not really but the good news is if

122
00:04:12,400 --> 00:04:12,959
you just

123
00:04:12,959 --> 00:04:15,680
want to hack bluetooth le what you can

124
00:04:15,680 --> 00:04:17,279
also do is you can

125
00:04:17,279 --> 00:04:18,880
buy some microcontrollers with some

126
00:04:18,880 --> 00:04:20,720
loaded chips on them so the microbits

127
00:04:20,720 --> 00:04:21,839
have this

128
00:04:21,839 --> 00:04:24,000
and there is a very nice maintained

129
00:04:24,000 --> 00:04:26,000
project it's called btl eject and with

130
00:04:26,000 --> 00:04:26,560
ptld

131
00:04:26,560 --> 00:04:29,919
check you can actually sniff bluetooth

132
00:04:29,919 --> 00:04:30,720
lead traffic

133
00:04:30,720 --> 00:04:34,240
and also manipulate some in this but

134
00:04:34,240 --> 00:04:36,240
actually because of the hopping and so

135
00:04:36,240 --> 00:04:37,440
on you actually need

136
00:04:37,440 --> 00:04:38,960
three of them but still each of them is

137
00:04:38,960 --> 00:04:40,639
like 15 so

138
00:04:40,639 --> 00:04:42,400
three of them is still an investment you

139
00:04:42,400 --> 00:04:44,400
might want to do when you start with

140
00:04:44,400 --> 00:04:46,720
bluetooth hacking

141
00:04:46,720 --> 00:04:49,919
and the next variant of a setup is a bit

142
00:04:49,919 --> 00:04:50,560
different

143
00:04:50,560 --> 00:04:52,240
so this works for classic bluetooth and

144
00:04:52,240 --> 00:04:54,000
bluetooth e but

145
00:04:54,000 --> 00:04:55,680
again has one restriction because you

146
00:04:55,680 --> 00:04:57,840
have need to have a device under your

147
00:04:57,840 --> 00:04:58,880
control so

148
00:04:58,880 --> 00:05:00,560
this wouldn't work between the headset

149
00:05:00,560 --> 00:05:02,560
and the car because

150
00:05:02,560 --> 00:05:04,320
you cannot manipulate the headset or the

151
00:05:04,320 --> 00:05:06,400
car but as soon as one of the

152
00:05:06,400 --> 00:05:08,960
communication ends is under your control

153
00:05:08,960 --> 00:05:11,120
you can actually use our internal blue

154
00:05:11,120 --> 00:05:13,120
tool suite and

155
00:05:13,120 --> 00:05:15,520
maybe you need to jailbreak a rooted

156
00:05:15,520 --> 00:05:17,360
device on linux and macos it just works

157
00:05:17,360 --> 00:05:19,680
without this

158
00:05:19,680 --> 00:05:21,840
and then you can manipulate the traffic

159
00:05:21,840 --> 00:05:24,240
on one of the ends instead of over the

160
00:05:24,240 --> 00:05:26,479
air

161
00:05:27,199 --> 00:05:29,360
and now the next part is like if you

162
00:05:29,360 --> 00:05:31,199
want to hack a connection it somehow

163
00:05:31,199 --> 00:05:32,320
needs to be insecure

164
00:05:32,320 --> 00:05:34,720
so at least if it is encrypted so you

165
00:05:34,720 --> 00:05:36,560
need to understand

166
00:05:36,560 --> 00:05:40,880
how the encryption works in bluetooth

167
00:05:40,880 --> 00:05:42,880
and for this you need to distinguish

168
00:05:42,880 --> 00:05:44,960
between two parts so first of all there

169
00:05:44,960 --> 00:05:46,960
is some initial pairing this is the part

170
00:05:46,960 --> 00:05:48,080
where you get the

171
00:05:48,080 --> 00:05:49,919
numeric comparison for example so you

172
00:05:49,919 --> 00:05:51,680
have two devices where you

173
00:05:51,680 --> 00:05:53,199
get this number and then you need to

174
00:05:53,199 --> 00:05:55,360
compare it and say cancel a pair

175
00:05:55,360 --> 00:05:57,520
this is something that you do once and

176
00:05:57,520 --> 00:05:58,639
then you have

177
00:05:58,639 --> 00:06:01,680
this trust between the two devices and

178
00:06:01,680 --> 00:06:03,919
then later on you have sessions so each

179
00:06:03,919 --> 00:06:05,440
time you can actually have like kind of

180
00:06:05,440 --> 00:06:06,960
a session key

181
00:06:06,960 --> 00:06:09,360
um and this one is derived so it's not

182
00:06:09,360 --> 00:06:11,120
exactly the same key it's just a derived

183
00:06:11,120 --> 00:06:12,400
key that is then used

184
00:06:12,400 --> 00:06:14,319
for the session and it can also be

185
00:06:14,319 --> 00:06:16,400
re-keyed and so on

186
00:06:16,400 --> 00:06:18,639
and the only thing that prevents from a

187
00:06:18,639 --> 00:06:20,160
machine in the middle attack is this

188
00:06:20,160 --> 00:06:22,160
initial pairing so when you do this

189
00:06:22,160 --> 00:06:24,400
numeric comparison or also pass key

190
00:06:24,400 --> 00:06:26,800
entry

191
00:06:26,800 --> 00:06:28,240
if you look into this dialogue so this

192
00:06:28,240 --> 00:06:31,039
is what you see on ios right now

193
00:06:31,039 --> 00:06:34,240
then it even says like do not enter this

194
00:06:34,240 --> 00:06:36,800
code on an accessory so that means you

195
00:06:36,800 --> 00:06:38,240
have to compare the number you don't

196
00:06:38,240 --> 00:06:39,840
have to enter it somewhere

197
00:06:39,840 --> 00:06:41,520
because you can actually confuse these

198
00:06:41,520 --> 00:06:43,759
two methods and there we also

199
00:06:43,759 --> 00:06:46,960
already start uh with the attacks so

200
00:06:46,960 --> 00:06:49,039
um the security pairing as you might

201
00:06:49,039 --> 00:06:50,080
know is maybe

202
00:06:50,080 --> 00:06:51,759
not that simple some of you might have

203
00:06:51,759 --> 00:06:53,840
already tried to pair bluetooth devices

204
00:06:53,840 --> 00:06:55,440
and often you need like multiple

205
00:06:55,440 --> 00:06:57,120
attempts and you stop reading what is

206
00:06:57,120 --> 00:06:58,639
there you just click click click and

207
00:06:58,639 --> 00:06:59,680
then like at the

208
00:06:59,680 --> 00:07:02,319
third attempt finally you paired a

209
00:07:02,319 --> 00:07:03,599
bluetooth headset

210
00:07:03,599 --> 00:07:06,639
and so it's not simple and

211
00:07:06,639 --> 00:07:09,680
i also think it's not secure

212
00:07:09,680 --> 00:07:13,360
so it actually started a while ago like

213
00:07:13,360 --> 00:07:15,840
back in 2005 that someone said like in

214
00:07:15,840 --> 00:07:16,800
the old

215
00:07:16,800 --> 00:07:18,240
bluetooth pairing that is now called

216
00:07:18,240 --> 00:07:19,840
legacy pairing because it's

217
00:07:19,840 --> 00:07:21,360
considered not to be secure you can

218
00:07:21,360 --> 00:07:23,039
actually correct the pin

219
00:07:23,039 --> 00:07:24,960
that you have to end on one device just

220
00:07:24,960 --> 00:07:26,720
within like a few seconds back

221
00:07:26,720 --> 00:07:28,639
then so something that you could also do

222
00:07:28,639 --> 00:07:31,120
in a live connection

223
00:07:31,120 --> 00:07:33,919
and so they fixed this with the secure

224
00:07:33,919 --> 00:07:35,280
simple pairing scheme

225
00:07:35,280 --> 00:07:37,520
but they said for bluetooth floor energy

226
00:07:37,520 --> 00:07:38,560
yeah i mean we

227
00:07:38,560 --> 00:07:40,479
just don't want to do that many

228
00:07:40,479 --> 00:07:41,840
computations so we

229
00:07:41,840 --> 00:07:43,520
do something simpler than the secure

230
00:07:43,520 --> 00:07:45,599
simple pairing and this has also been

231
00:07:45,599 --> 00:07:48,960
uh broken in 2013 and so on so

232
00:07:48,960 --> 00:07:52,240
then they adapted the um secure simple

233
00:07:52,240 --> 00:07:54,479
pairing sle secure connection so it's

234
00:07:54,479 --> 00:07:55,840
almost the same but

235
00:07:55,840 --> 00:07:59,039
under a different name to the

236
00:07:59,039 --> 00:08:02,080
le part of the specification and someone

237
00:08:02,080 --> 00:08:03,840
also has proven that secure simple

238
00:08:03,840 --> 00:08:06,240
pairing is secure like around 2007

239
00:08:06,240 --> 00:08:09,120
so yeah of course then there are no

240
00:08:09,120 --> 00:08:10,160
attacks right but

241
00:08:10,160 --> 00:08:12,879
there came quite a lot of attacks so um

242
00:08:12,879 --> 00:08:14,560
the method confusion where you have this

243
00:08:14,560 --> 00:08:16,319
past key entry versus

244
00:08:16,319 --> 00:08:19,599
um the numeric comparison um but then

245
00:08:19,599 --> 00:08:21,360
there are also like for example the knob

246
00:08:21,360 --> 00:08:21,919
attack

247
00:08:21,919 --> 00:08:23,759
which is not the initial pairing but

248
00:08:23,759 --> 00:08:25,440
then in each session key you can

249
00:08:25,440 --> 00:08:26,080
actually

250
00:08:26,080 --> 00:08:28,879
specify the amount of entropy that goes

251
00:08:28,879 --> 00:08:30,160
into a key

252
00:08:30,160 --> 00:08:32,559
and this is a setting that like it's

253
00:08:32,559 --> 00:08:33,919
just a digital message

254
00:08:33,919 --> 00:08:36,479
and these stacks actually implement this

255
00:08:36,479 --> 00:08:38,399
so you could like downgrade the

256
00:08:38,399 --> 00:08:39,440
encryption

257
00:08:39,440 --> 00:08:42,080
within a session and so it just goes

258
00:08:42,080 --> 00:08:43,679
like this and they're probably even more

259
00:08:43,679 --> 00:08:44,560
like this but

260
00:08:44,560 --> 00:08:47,360
so since this elliptic curve attack in

261
00:08:47,360 --> 00:08:49,680
2018 it really started off like just

262
00:08:49,680 --> 00:08:51,760
all those specification compliant

263
00:08:51,760 --> 00:08:53,120
attacks but

264
00:08:53,120 --> 00:08:54,800
it's not an issue because it's like it's

265
00:08:54,800 --> 00:08:56,399
all scientific research and

266
00:08:56,399 --> 00:08:58,560
the tools are like really crappy to use

267
00:08:58,560 --> 00:08:59,680
so there's

268
00:08:59,680 --> 00:09:03,680
not like one tool that breaks them all

269
00:09:03,920 --> 00:09:05,839
anyway you still need to choose your

270
00:09:05,839 --> 00:09:07,760
weapon so to say so

271
00:09:07,760 --> 00:09:10,640
how do you start uh well there are two

272
00:09:10,640 --> 00:09:12,399
parts so first of all the

273
00:09:12,399 --> 00:09:15,360
uh here this parity over the air

274
00:09:15,360 --> 00:09:16,560
connection might be

275
00:09:16,560 --> 00:09:19,360
encrypted but the chip decrypts it so

276
00:09:19,360 --> 00:09:20,959
within the operating system you would

277
00:09:20,959 --> 00:09:22,480
always see plain text

278
00:09:22,480 --> 00:09:24,640
except from if there is the smartphone

279
00:09:24,640 --> 00:09:26,560
app or like even a cloud

280
00:09:26,560 --> 00:09:28,800
encryption so then you would have an

281
00:09:28,800 --> 00:09:31,760
encrypted connection but

282
00:09:31,760 --> 00:09:33,200
usually it would be plain text on the

283
00:09:33,200 --> 00:09:34,800
host

284
00:09:34,800 --> 00:09:37,120
and this is something that you can like

285
00:09:37,120 --> 00:09:38,720
already break so if you have pluto for

286
00:09:38,720 --> 00:09:40,480
leaders btl eject

287
00:09:40,480 --> 00:09:43,200
sadly uber tooth if is not that well

288
00:09:43,200 --> 00:09:43,839
maintained

289
00:09:43,839 --> 00:09:45,360
and does not really work for classic

290
00:09:45,360 --> 00:09:48,240
pluto so you would go for btl eject

291
00:09:48,240 --> 00:09:51,279
and if you are happy and uh like if

292
00:09:51,279 --> 00:09:52,240
you're lucky and

293
00:09:52,240 --> 00:09:54,720
then it might just be like that there is

294
00:09:54,720 --> 00:09:55,760
also an old

295
00:09:55,760 --> 00:09:57,440
legacy pairing and you can work with

296
00:09:57,440 --> 00:10:00,399
crack elite break the encryption

297
00:10:00,399 --> 00:10:01,920
the next part is that you could

298
00:10:01,920 --> 00:10:03,519
impersonate a device so this is

299
00:10:03,519 --> 00:10:04,640
something you could do with internal

300
00:10:04,640 --> 00:10:05,680
blue or also

301
00:10:05,680 --> 00:10:08,160
like the micro bits or other nordic

302
00:10:08,160 --> 00:10:11,120
semiconductor devices

303
00:10:11,120 --> 00:10:12,640
if you understand everything about the

304
00:10:12,640 --> 00:10:14,480
protocol

305
00:10:14,480 --> 00:10:16,480
or the next option is if you are on the

306
00:10:16,480 --> 00:10:18,160
device itself you can

307
00:10:18,160 --> 00:10:19,839
hook into the bluetooth daemon or the

308
00:10:19,839 --> 00:10:21,680
bluetooth chip itself the bluetooth chip

309
00:10:21,680 --> 00:10:23,440
might be required depending on the layer

310
00:10:23,440 --> 00:10:25,760
you want to interact with

311
00:10:25,760 --> 00:10:28,800
and the last option is that you just

312
00:10:28,800 --> 00:10:30,320
hook into the smartphone app so this

313
00:10:30,320 --> 00:10:32,079
might be helpful if the smartphone app

314
00:10:32,079 --> 00:10:33,600
does additional encryption

315
00:10:33,600 --> 00:10:35,680
that is not handled within a cloud part

316
00:10:35,680 --> 00:10:37,279
of the iot app

317
00:10:37,279 --> 00:10:38,480
and this is something you can do with

318
00:10:38,480 --> 00:10:40,240
frida so there are a lot of tools

319
00:10:40,240 --> 00:10:41,120
depending on

320
00:10:41,120 --> 00:10:44,399
what you want to achieve the

321
00:10:44,399 --> 00:10:45,760
two on the left hand side are probably

322
00:10:45,760 --> 00:10:47,839
the most powerful but it requires a

323
00:10:47,839 --> 00:10:50,000
device that's like rooted or jailbroken

324
00:10:50,000 --> 00:10:51,920
at least on ios and android on linux and

325
00:10:51,920 --> 00:10:54,399
macos just works as it is but then again

326
00:10:54,399 --> 00:10:57,120
as i said not all devices might be under

327
00:10:57,120 --> 00:11:00,959
your control

328
00:11:00,959 --> 00:11:02,880
and the next part is the protocol

329
00:11:02,880 --> 00:11:04,000
analysis so

330
00:11:04,000 --> 00:11:05,839
how does bluetooth even look like and

331
00:11:05,839 --> 00:11:07,600
what kind of protocols are there that

332
00:11:07,600 --> 00:11:08,959
you could attack

333
00:11:08,959 --> 00:11:11,920
so first of all it starts very low on

334
00:11:11,920 --> 00:11:13,519
the link layer so there's some link

335
00:11:13,519 --> 00:11:14,640
management

336
00:11:14,640 --> 00:11:16,399
and the interesting part here is that

337
00:11:16,399 --> 00:11:18,320
link management is not really

338
00:11:18,320 --> 00:11:20,720
transparent to the operating system so

339
00:11:20,720 --> 00:11:22,320
the operating system for example it

340
00:11:22,320 --> 00:11:23,920
would just say like let's

341
00:11:23,920 --> 00:11:26,560
please let's connect and then um you

342
00:11:26,560 --> 00:11:27,600
would have the

343
00:11:27,600 --> 00:11:29,519
link layer and the link layer tries to

344
00:11:29,519 --> 00:11:31,440
establish a connection

345
00:11:31,440 --> 00:11:35,200
and if that works out it would say yeah

346
00:11:35,200 --> 00:11:37,279
everything is okay so it would just send

347
00:11:37,279 --> 00:11:39,600
an hci event that says success

348
00:11:39,600 --> 00:11:41,600
but it could also be a page timeout so

349
00:11:41,600 --> 00:11:43,200
after a while if it doesn't work it says

350
00:11:43,200 --> 00:11:44,560
page time out

351
00:11:44,560 --> 00:11:47,680
and all the messages that are uh

352
00:11:47,680 --> 00:11:49,839
exchanged here to like keep a connection

353
00:11:49,839 --> 00:11:51,200
alive and so on

354
00:11:51,200 --> 00:11:53,920
it's just stuff that's not not sent to

355
00:11:53,920 --> 00:11:55,519
the host so there's also like nile

356
00:11:55,519 --> 00:11:57,279
packets to keep the connection live and

357
00:11:57,279 --> 00:12:00,480
all kinds of weird stuff um that you

358
00:12:00,480 --> 00:12:04,000
probably wouldn't see on the host

359
00:12:05,200 --> 00:12:06,880
and this is also the reason why i think

360
00:12:06,880 --> 00:12:08,240
like a lot of this

361
00:12:08,240 --> 00:12:10,800
research into the pairing and encryption

362
00:12:10,800 --> 00:12:12,399
schemes did not take place in the past

363
00:12:12,399 --> 00:12:14,399
or only like during the last

364
00:12:14,399 --> 00:12:16,959
two years because a lot of these even

365
00:12:16,959 --> 00:12:19,120
depend on our internal bluetooth suite

366
00:12:19,120 --> 00:12:19,440
and

367
00:12:19,440 --> 00:12:21,120
of course like also like the first

368
00:12:21,120 --> 00:12:22,720
people who looked into this i like

369
00:12:22,720 --> 00:12:24,000
always kicking off on your topic

370
00:12:24,000 --> 00:12:26,240
probably for research but like all the

371
00:12:26,240 --> 00:12:27,519
recent attacks

372
00:12:27,519 --> 00:12:29,760
uh are like somewhere here in those

373
00:12:29,760 --> 00:12:31,760
parameters and stuff that you

374
00:12:31,760 --> 00:12:34,399
um can change if you have control over

375
00:12:34,399 --> 00:12:35,760
the linked layer but

376
00:12:35,760 --> 00:12:37,440
couldn't do it just from the operating

377
00:12:37,440 --> 00:12:40,480
system typically

378
00:12:42,959 --> 00:12:45,200
and then on top of the link layer there

379
00:12:45,200 --> 00:12:46,320
is

380
00:12:46,320 --> 00:12:48,800
various protocols so there is hci or in

381
00:12:48,800 --> 00:12:51,040
parallel there is hcl and acl

382
00:12:51,040 --> 00:12:53,040
is for the data transfer so hci would

383
00:12:53,040 --> 00:12:54,800
establish the connection but then acl

384
00:12:54,800 --> 00:12:56,800
would do the data transfer on top of it

385
00:12:56,800 --> 00:12:58,480
and it's like a very generic data

386
00:12:58,480 --> 00:13:00,880
transfer and it exists in bluetooth

387
00:13:00,880 --> 00:13:02,320
input of classic even though it's like

388
00:13:02,320 --> 00:13:02,959
slightly

389
00:13:02,959 --> 00:13:04,839
different from the features that it

390
00:13:04,839 --> 00:13:06,480
supports and

391
00:13:06,480 --> 00:13:09,279
in classic bluetooth you would get very

392
00:13:09,279 --> 00:13:11,040
fancy stuff like music streaming

393
00:13:11,040 --> 00:13:14,079
tethering uh and even fire transfer

394
00:13:14,079 --> 00:13:16,560
here it's an important part to note that

395
00:13:16,560 --> 00:13:17,120
like

396
00:13:17,120 --> 00:13:19,360
airdrop is actually doing the file

397
00:13:19,360 --> 00:13:21,040
transfer with wi-fi and only detection

398
00:13:21,040 --> 00:13:22,880
in bluetooth so you cannot transfer

399
00:13:22,880 --> 00:13:25,600
files between apple devices and android

400
00:13:25,600 --> 00:13:26,399
devices

401
00:13:26,399 --> 00:13:28,240
because android is using the standard

402
00:13:28,240 --> 00:13:30,000
flight transfer

403
00:13:30,000 --> 00:13:33,360
and that's not compatible with airdrop

404
00:13:33,360 --> 00:13:36,480
and then the last thing is that you can

405
00:13:36,480 --> 00:13:38,800
actually see all of this so because this

406
00:13:38,800 --> 00:13:39,680
is not in the

407
00:13:39,680 --> 00:13:42,720
link management but actually stuff that

408
00:13:42,720 --> 00:13:44,480
is sent to the operating system you can

409
00:13:44,480 --> 00:13:46,800
can observe it on the operating system

410
00:13:46,800 --> 00:13:49,760
and on linux you can just use wireshark

411
00:13:49,760 --> 00:13:52,079
and then there is packet logger on macos

412
00:13:52,079 --> 00:13:54,480
and even on ios so since ios 13 and also

413
00:13:54,480 --> 00:13:56,240
still working ios 14

414
00:13:56,240 --> 00:13:59,440
with a bluetooth debug profile you can

415
00:13:59,440 --> 00:14:03,360
see your traffic on ios

416
00:14:03,360 --> 00:14:05,120
even though you cannot inject something

417
00:14:05,120 --> 00:14:07,680
uh without a jailbreak but you can

418
00:14:07,680 --> 00:14:09,760
observe it and on android there is a

419
00:14:09,760 --> 00:14:11,040
developer option

420
00:14:11,040 --> 00:14:13,680
bluetooth snoop lock and all of these

421
00:14:13,680 --> 00:14:16,240
can also be read with wireshark later

422
00:14:16,240 --> 00:14:18,160
so this is really a nice thing to

423
00:14:18,160 --> 00:14:19,360
observe

424
00:14:19,360 --> 00:14:22,240
not everything is acl so there are uh

425
00:14:22,240 --> 00:14:24,240
hci events so bluetooth advertisements

426
00:14:24,240 --> 00:14:26,000
contain data but they are in

427
00:14:26,000 --> 00:14:29,120
hdi events and then there's also seo for

428
00:14:29,120 --> 00:14:30,959
headsets and classic bluetooth

429
00:14:30,959 --> 00:14:32,959
but it's everything that you can observe

430
00:14:32,959 --> 00:14:35,199
there

431
00:14:35,920 --> 00:14:37,839
and that starts with the bluetooth led

432
00:14:37,839 --> 00:14:39,279
advertisements because

433
00:14:39,279 --> 00:14:40,800
even though they are like really really

434
00:14:40,800 --> 00:14:42,959
tiny packets just a few bytes

435
00:14:42,959 --> 00:14:46,399
um they can do a lot so they are just

436
00:14:46,399 --> 00:14:48,639
broadcasted there's no acknowledgement

437
00:14:48,639 --> 00:14:50,399
and usually this would be this

438
00:14:50,399 --> 00:14:52,240
application like when you power a

439
00:14:52,240 --> 00:14:54,000
bluetooth device for a year with a

440
00:14:54,000 --> 00:14:56,160
button cell and it just broadcasts some

441
00:14:56,160 --> 00:14:59,600
information every few seconds

442
00:14:59,600 --> 00:15:01,600
and it broadcasts them on three

443
00:15:01,600 --> 00:15:03,360
different frequencies so you have 40

444
00:15:03,360 --> 00:15:03,839
channel

445
00:15:03,839 --> 00:15:06,560
input of le 2 megahertz right each of

446
00:15:06,560 --> 00:15:07,120
them but

447
00:15:07,120 --> 00:15:08,959
you have three of them just in case that

448
00:15:08,959 --> 00:15:10,800
you are interfering for example with a

449
00:15:10,800 --> 00:15:11,360
wi-fi

450
00:15:11,360 --> 00:15:13,600
tops around and changes to so it's

451
00:15:13,600 --> 00:15:15,120
really just some kind of random

452
00:15:15,120 --> 00:15:17,839
broadcasts on on random channels and

453
00:15:17,839 --> 00:15:21,360
eventually you get them so nothing for a

454
00:15:21,360 --> 00:15:22,720
high data throughput

455
00:15:22,720 --> 00:15:25,440
but at least if you have interference

456
00:15:25,440 --> 00:15:26,160
there's no

457
00:15:26,160 --> 00:15:29,040
like very sophisticated mechanism you

458
00:15:29,040 --> 00:15:30,880
just also hop around and try to sniff

459
00:15:30,880 --> 00:15:33,199
these

460
00:15:33,199 --> 00:15:35,199
and the next part is that the sender

461
00:15:35,199 --> 00:15:36,720
address can be randomized or

462
00:15:36,720 --> 00:15:38,079
non-connectable

463
00:15:38,079 --> 00:15:40,399
and this is very useful for exposure

464
00:15:40,399 --> 00:15:41,680
notifications so

465
00:15:41,680 --> 00:15:43,920
probably the only document that has an

466
00:15:43,920 --> 00:15:45,600
apple and a google logo on it

467
00:15:45,600 --> 00:15:47,519
because this one is compatible between

468
00:15:47,519 --> 00:15:48,959
the two yay

469
00:15:48,959 --> 00:15:51,440
and so the sender is randomized there is

470
00:15:51,440 --> 00:15:53,120
no feedback if

471
00:15:53,120 --> 00:15:55,040
an advertisement arrived so this is also

472
00:15:55,040 --> 00:15:56,720
important because that means

473
00:15:56,720 --> 00:15:59,040
it's probably not exploitable because

474
00:15:59,040 --> 00:16:00,800
modern exploit always need a feedback

475
00:16:00,800 --> 00:16:02,079
channel

476
00:16:02,079 --> 00:16:05,199
and random addresses so that's a very

477
00:16:05,199 --> 00:16:06,560
nice thing to build

478
00:16:06,560 --> 00:16:10,079
with plea advertisements and

479
00:16:10,079 --> 00:16:12,560
well apple does much more with billy

480
00:16:12,560 --> 00:16:14,000
advertisements so this is

481
00:16:14,000 --> 00:16:15,839
maybe a bit scary there is this

482
00:16:15,839 --> 00:16:17,440
continuity framework

483
00:16:17,440 --> 00:16:20,560
and most of this is somewhat based in

484
00:16:20,560 --> 00:16:22,000
the early advertisements not out of

485
00:16:22,000 --> 00:16:25,120
it but so for example the airdrop is

486
00:16:25,120 --> 00:16:28,000
advertising uh first of all like that

487
00:16:28,000 --> 00:16:29,440
there is an airdrop thing

488
00:16:29,440 --> 00:16:32,240
uh over ble but then switching to wi-fi

489
00:16:32,240 --> 00:16:34,079
for the data transfer and then

490
00:16:34,079 --> 00:16:35,440
the same is like for example for the

491
00:16:35,440 --> 00:16:37,360
auto unlock there's also first

492
00:16:37,360 --> 00:16:40,399
vle notification also handoff and so on

493
00:16:40,399 --> 00:16:41,519
so all of this

494
00:16:41,519 --> 00:16:45,440
is using uh ble advertisements before

495
00:16:45,440 --> 00:16:47,600
it goes into certain states of data

496
00:16:47,600 --> 00:16:49,199
transfer that then are usually handled

497
00:16:49,199 --> 00:16:51,279
within wifi

498
00:16:51,279 --> 00:16:53,040
and now something that's also super

499
00:16:53,040 --> 00:16:55,120
super weird and just

500
00:16:55,120 --> 00:16:58,800
based on the advertisements it's mesh

501
00:16:58,800 --> 00:17:00,560
so the bluetooth stick just thought like

502
00:17:00,560 --> 00:17:02,000
yeah i mean

503
00:17:02,000 --> 00:17:04,400
advertisements are super compatible

504
00:17:04,400 --> 00:17:06,400
between all kinds of devices so let's

505
00:17:06,400 --> 00:17:08,160
just build a mesh on top of it so it's

506
00:17:08,160 --> 00:17:10,400
definitely not a high throughput mesh

507
00:17:10,400 --> 00:17:12,160
but maybe something that you could have

508
00:17:12,160 --> 00:17:13,919
like to

509
00:17:13,919 --> 00:17:17,119
mesh multiple iot

510
00:17:17,119 --> 00:17:19,280
lights or something and then switch them

511
00:17:19,280 --> 00:17:21,439
on and off with this mesh so this might

512
00:17:21,439 --> 00:17:22,319
work

513
00:17:22,319 --> 00:17:24,000
still you need to consider it as like

514
00:17:24,000 --> 00:17:25,839
packet loss in just a few bytes and

515
00:17:25,839 --> 00:17:29,280
like not what other people might

516
00:17:29,280 --> 00:17:30,880
think of as a mesh and it's also

517
00:17:30,880 --> 00:17:32,320
separate specification so it's not in

518
00:17:32,320 --> 00:17:33,760
the main specification but

519
00:17:33,760 --> 00:17:36,480
it's like 400 500 pages on top in a

520
00:17:36,480 --> 00:17:39,360
separate document

521
00:17:40,160 --> 00:17:42,799
in bluetooth and e you will always see

522
00:17:42,799 --> 00:17:44,720
this so called generic attribute

523
00:17:44,720 --> 00:17:46,400
protocols on get

524
00:17:46,400 --> 00:17:50,480
and ble gat is just some kind of data

525
00:17:50,480 --> 00:17:52,320
transfer mode for an active connection

526
00:17:52,320 --> 00:17:53,760
and it has

527
00:17:53,760 --> 00:17:56,400
services um and within those services or

528
00:17:56,400 --> 00:17:58,160
attributes you can like

529
00:17:58,160 --> 00:18:00,480
read and write them i mean they might

530
00:18:00,480 --> 00:18:02,559
also be restricted so maybe you can only

531
00:18:02,559 --> 00:18:04,640
read them and maybe they require

532
00:18:04,640 --> 00:18:06,799
prior pairing and you can even subscribe

533
00:18:06,799 --> 00:18:08,799
to notifications so for example you

534
00:18:08,799 --> 00:18:09,520
could just

535
00:18:09,520 --> 00:18:12,160
subscribe to a thermometer and then each

536
00:18:12,160 --> 00:18:13,919
time the temperature changes you would

537
00:18:13,919 --> 00:18:15,679
get a new notification instead of

538
00:18:15,679 --> 00:18:18,400
pulling each time

539
00:18:18,400 --> 00:18:19,760
and there are a lot of them that are

540
00:18:19,760 --> 00:18:21,760
standardized so for the device name for

541
00:18:21,760 --> 00:18:23,679
example this is something

542
00:18:23,679 --> 00:18:25,200
almost every device implements the

543
00:18:25,200 --> 00:18:27,520
device name and also the battery level

544
00:18:27,520 --> 00:18:29,360
and there might also be custom

545
00:18:29,360 --> 00:18:31,200
proprietary ones

546
00:18:31,200 --> 00:18:33,360
and you just see them everywhere now the

547
00:18:33,360 --> 00:18:35,039
nice part here is that if they are in

548
00:18:35,039 --> 00:18:36,000
plain text

549
00:18:36,000 --> 00:18:39,760
you might just spoof them for example or

550
00:18:39,760 --> 00:18:40,320
exchange

551
00:18:40,320 --> 00:18:43,440
the information and impress your friends

552
00:18:43,440 --> 00:18:44,880
like because your fitness tracker might

553
00:18:44,880 --> 00:18:46,799
also be using this

554
00:18:46,799 --> 00:18:49,200
this screenshot was actually using

555
00:18:49,200 --> 00:18:50,080
modified

556
00:18:50,080 --> 00:18:52,640
firmware in a fitbit flex but the

557
00:18:52,640 --> 00:18:54,000
previous versions did not

558
00:18:54,000 --> 00:18:55,600
encrypt the traffic so you could

559
00:18:55,600 --> 00:18:57,760
actually also do this over the air if

560
00:18:57,760 --> 00:19:00,240
you wanted

561
00:19:01,360 --> 00:19:05,200
and talking about injecting funny or

562
00:19:05,200 --> 00:19:08,240
invalid values to impress your friends

563
00:19:08,240 --> 00:19:10,320
you can also just go to wireless fuzzing

564
00:19:10,320 --> 00:19:12,640
so fuzzing is about

565
00:19:12,640 --> 00:19:15,200
injecting invalid traffic and then

566
00:19:15,200 --> 00:19:16,240
trying to

567
00:19:16,240 --> 00:19:18,799
even get code execution on a chip or on

568
00:19:18,799 --> 00:19:21,360
a device

569
00:19:21,760 --> 00:19:23,600
and now you might say yeah i mean what

570
00:19:23,600 --> 00:19:25,200
is the difference between like

571
00:19:25,200 --> 00:19:28,160
wireless fuzzing and so on so well if

572
00:19:28,160 --> 00:19:28,559
you

573
00:19:28,559 --> 00:19:30,240
if you would not do wireless fuzzing you

574
00:19:30,240 --> 00:19:32,000
would just let's say fuzz an image

575
00:19:32,000 --> 00:19:33,760
pulsar then you would generate image

576
00:19:33,760 --> 00:19:34,799
files

577
00:19:34,799 --> 00:19:37,280
and send them for example to afl plus

578
00:19:37,280 --> 00:19:38,480
plus and then

579
00:19:38,480 --> 00:19:41,440
it's like pricing those images and might

580
00:19:41,440 --> 00:19:44,080
record crashes and so on

581
00:19:44,080 --> 00:19:46,640
but for this you need to recompile it

582
00:19:46,640 --> 00:19:47,760
and this is something you

583
00:19:47,760 --> 00:19:49,280
typically cannot do because like

584
00:19:49,280 --> 00:19:50,720
wireless devices that's like very

585
00:19:50,720 --> 00:19:52,240
proprietary stuff so you don't have

586
00:19:52,240 --> 00:19:53,520
source code

587
00:19:53,520 --> 00:19:56,240
um also the state tends to get very

588
00:19:56,240 --> 00:19:58,400
complex so it's not just like you

589
00:19:58,400 --> 00:20:00,559
put in one packet and then something

590
00:20:00,559 --> 00:20:01,919
happens but you might

591
00:20:01,919 --> 00:20:03,840
need to have like a paired device with

592
00:20:03,840 --> 00:20:06,080
an active connection

593
00:20:06,080 --> 00:20:09,200
and to to have like all the states that

594
00:20:09,200 --> 00:20:10,960
the packet actually goes through and so

595
00:20:10,960 --> 00:20:12,880
on um

596
00:20:12,880 --> 00:20:15,280
and it's also hard to emulate like a

597
00:20:15,280 --> 00:20:16,480
full wireless stack

598
00:20:16,480 --> 00:20:18,559
so usually you would do emulation if you

599
00:20:18,559 --> 00:20:20,320
don't have source code but emulating

600
00:20:20,320 --> 00:20:22,320
something wireless is

601
00:20:22,320 --> 00:20:23,919
depending on how much you want to

602
00:20:23,919 --> 00:20:27,600
emulate of it it's also very hard

603
00:20:27,840 --> 00:20:30,159
so the first fuzzing setup is that you

604
00:20:30,159 --> 00:20:31,520
just like let's say

605
00:20:31,520 --> 00:20:33,840
take internal blue or anything else that

606
00:20:33,840 --> 00:20:35,120
somehow

607
00:20:35,120 --> 00:20:38,080
changes traffic and then you send

608
00:20:38,080 --> 00:20:40,720
invalid traffic over the air

609
00:20:40,720 --> 00:20:43,200
it's very slow of course because it's

610
00:20:43,200 --> 00:20:44,960
restricted to the bluetooth connection

611
00:20:44,960 --> 00:20:46,799
over the air so that's the maximum speed

612
00:20:46,799 --> 00:20:48,000
you can reach but

613
00:20:48,000 --> 00:20:49,440
if you have invalid traffic you would

614
00:20:49,440 --> 00:20:51,600
very often just get disconnects

615
00:20:51,600 --> 00:20:53,919
and then you need to reconnect and there

616
00:20:53,919 --> 00:20:55,679
is also no feedback so of course no

617
00:20:55,679 --> 00:20:57,280
coverage of code but

618
00:20:57,280 --> 00:20:59,919
also um if you crashed or if you just

619
00:20:59,919 --> 00:21:02,000
disconnected because of invalid traffic

620
00:21:02,000 --> 00:21:03,440
might be indistinguishable

621
00:21:03,440 --> 00:21:05,280
and then you can like check the log

622
00:21:05,280 --> 00:21:07,200
files maybe if you have them of the of

623
00:21:07,200 --> 00:21:09,919
the destination device and so on but

624
00:21:09,919 --> 00:21:12,799
it's very hard still you need some

625
00:21:12,799 --> 00:21:14,400
over-the-air fuzzing or at least over

626
00:21:14,400 --> 00:21:16,720
the implementation of some bugs later so

627
00:21:16,720 --> 00:21:17,679
if you have

628
00:21:17,679 --> 00:21:20,720
found a vulnerability you might want to

629
00:21:20,720 --> 00:21:22,480
build a proof of concept that works over

630
00:21:22,480 --> 00:21:24,159
the air and this is definitely where you

631
00:21:24,159 --> 00:21:26,720
then take internal glue and

632
00:21:26,720 --> 00:21:29,760
craft that type of traffic but more or

633
00:21:29,760 --> 00:21:31,600
less it's like very random especially if

634
00:21:31,600 --> 00:21:32,720
you want to uh

635
00:21:32,720 --> 00:21:35,200
fasten iot device like you have no idea

636
00:21:35,200 --> 00:21:37,200
what is going on and you're just like

637
00:21:37,200 --> 00:21:39,760
oh yeah i i maybe found a new bug with

638
00:21:39,760 --> 00:21:40,480
this traffic

639
00:21:40,480 --> 00:21:44,159
but it's really not what you want to do

640
00:21:44,159 --> 00:21:47,120
the next type of setup is when you

641
00:21:47,120 --> 00:21:48,640
actually hook into the bluetooth demon

642
00:21:48,640 --> 00:21:49,760
while it's running

643
00:21:49,760 --> 00:21:52,080
and even yeah you can do kind of two

644
00:21:52,080 --> 00:21:53,120
things so the first

645
00:21:53,120 --> 00:21:55,039
part that's like very easy is what you

646
00:21:55,039 --> 00:21:56,320
can do if you find

647
00:21:56,320 --> 00:21:58,159
the transmit receiver and you can just

648
00:21:58,159 --> 00:21:59,600
like change

649
00:21:59,600 --> 00:22:02,159
single bytes within the packet flow or

650
00:22:02,159 --> 00:22:04,480
even just flip some bits

651
00:22:04,480 --> 00:22:06,720
and then see what happens but for this

652
00:22:06,720 --> 00:22:08,240
you need to have an active connection so

653
00:22:08,240 --> 00:22:10,320
for example i connect to my headset

654
00:22:10,320 --> 00:22:13,440
and inject this traffic into the ongoing

655
00:22:13,440 --> 00:22:14,480
connection

656
00:22:14,480 --> 00:22:16,799
and the other option is that you um

657
00:22:16,799 --> 00:22:18,320
create a virtual connection but

658
00:22:18,320 --> 00:22:20,559
available to demons running and

659
00:22:20,559 --> 00:22:22,559
forged packets like within those

660
00:22:22,559 --> 00:22:24,240
handlers

661
00:22:24,240 --> 00:22:26,480
which is uh easier to control and

662
00:22:26,480 --> 00:22:28,640
especially with feeder you can then also

663
00:22:28,640 --> 00:22:30,640
get coverage so you even know like where

664
00:22:30,640 --> 00:22:32,159
in the code you have been and which

665
00:22:32,159 --> 00:22:34,240
parts you fast

666
00:22:34,240 --> 00:22:36,960
and you would also be able to observe

667
00:22:36,960 --> 00:22:37,520
some

668
00:22:37,520 --> 00:22:39,840
system endeavor crash locks in addition

669
00:22:39,840 --> 00:22:40,559
so

670
00:22:40,559 --> 00:22:43,039
you have some possibility maybe to

671
00:22:43,039 --> 00:22:45,679
observe what happens

672
00:22:45,679 --> 00:22:47,520
and the nice part is if you hook into

673
00:22:47,520 --> 00:22:48,880
the bluetooth demand while it's running

674
00:22:48,880 --> 00:22:50,360
you don't have to care about chip

675
00:22:50,360 --> 00:22:51,679
initialization or

676
00:22:51,679 --> 00:22:54,320
other states and also interaction with

677
00:22:54,320 --> 00:22:56,320
other demons so for example if something

678
00:22:56,320 --> 00:22:58,640
happens in the apple i cloud that is

679
00:22:58,640 --> 00:23:00,400
connected to the pairing and so on then

680
00:23:00,400 --> 00:23:02,240
it might just talk to the daemon and get

681
00:23:02,240 --> 00:23:03,440
some feedback

682
00:23:03,440 --> 00:23:06,840
instead of crashing because this is not

683
00:23:06,840 --> 00:23:08,480
implemented

684
00:23:08,480 --> 00:23:10,799
and the most advanced option is chip

685
00:23:10,799 --> 00:23:12,720
emulation for example for filing then

686
00:23:12,720 --> 00:23:14,320
you're just like emulating

687
00:23:14,320 --> 00:23:15,760
the chip and fuzzing the chip not the

688
00:23:15,760 --> 00:23:17,440
operating system on top

689
00:23:17,440 --> 00:23:20,240
but this can already be very interesting

690
00:23:20,240 --> 00:23:20,960
and

691
00:23:20,960 --> 00:23:23,039
one approach to do is like base safe is

692
00:23:23,039 --> 00:23:25,679
doing it for a media attack based band

693
00:23:25,679 --> 00:23:28,799
that you just take unicorn and qmo and

694
00:23:28,799 --> 00:23:31,200
emulate single handlers so give that

695
00:23:31,200 --> 00:23:33,679
handler one packet and see what happens

696
00:23:33,679 --> 00:23:36,159
this might already be sufficient to find

697
00:23:36,159 --> 00:23:38,080
simple parting bugs just within one

698
00:23:38,080 --> 00:23:38,799
handler

699
00:23:38,799 --> 00:23:40,720
and it's like very very fast because it

700
00:23:40,720 --> 00:23:42,640
just give one packet to one handler

701
00:23:42,640 --> 00:23:44,559
crash no crash that's it or

702
00:23:44,559 --> 00:23:47,039
you can also add memory sanitizers and

703
00:23:47,039 --> 00:23:48,880
that's it

704
00:23:48,880 --> 00:23:50,559
a very different approach is something

705
00:23:50,559 --> 00:23:52,159
that one of my students built

706
00:23:52,159 --> 00:23:55,120
is a frankenstein so you would actually

707
00:23:55,120 --> 00:23:57,360
emulate the whole modem of the chip and

708
00:23:57,360 --> 00:24:00,080
input certain registers um into the

709
00:24:00,080 --> 00:24:00,880
emulator chip

710
00:24:00,880 --> 00:24:02,640
do task switches and connect this to a

711
00:24:02,640 --> 00:24:04,400
real linux host and with this you can

712
00:24:04,400 --> 00:24:05,840
get like full stack but

713
00:24:05,840 --> 00:24:08,880
works like for example the host um

714
00:24:08,880 --> 00:24:10,799
scans for devices the modern reports

715
00:24:10,799 --> 00:24:12,720
devices and then the host

716
00:24:12,720 --> 00:24:14,799
is oh i want more information about this

717
00:24:14,799 --> 00:24:16,880
device and then sends another request

718
00:24:16,880 --> 00:24:18,640
back and then like in this loop there

719
00:24:18,640 --> 00:24:19,360
can

720
00:24:19,360 --> 00:24:23,200
be a bug and it includes a lot of

721
00:24:23,200 --> 00:24:25,520
messages that go through this so you can

722
00:24:25,520 --> 00:24:28,480
find more complex bugs but it's also

723
00:24:28,480 --> 00:24:32,799
not that fast and tidy to control

724
00:24:32,799 --> 00:24:34,080
so if you have further questions there

725
00:24:34,080 --> 00:24:35,919
will be a q a session and i'm also

726
00:24:35,919 --> 00:24:36,880
available

727
00:24:36,880 --> 00:24:41,120
on twitter or by mail thanks for

728
00:24:44,840 --> 00:24:46,159
listening

729
00:24:46,159 --> 00:24:48,720
how interesting talk thank you so much

730
00:24:48,720 --> 00:24:49,919
gizka for

731
00:24:49,919 --> 00:24:52,559
for this uh we are happy to continue in

732
00:24:52,559 --> 00:24:53,760
this edition of

733
00:24:53,760 --> 00:24:56,720
not being gone so really really thank

734
00:24:56,720 --> 00:24:57,679
you so much for

735
00:24:57,679 --> 00:25:01,600
for this talk um we have some questions

736
00:25:01,600 --> 00:25:05,520
i am seeing one in the chat

737
00:25:05,520 --> 00:25:07,520
what would you recommend in order to

738
00:25:07,520 --> 00:25:09,279
take a progressive concept

739
00:25:09,279 --> 00:25:11,679
logic what should i start to is one of

740
00:25:11,679 --> 00:25:13,440
the questions

741
00:25:13,440 --> 00:25:17,520
like to start what uh exactly

742
00:25:17,520 --> 00:25:21,840
for to to it's it's a bit abstract right

743
00:25:21,840 --> 00:25:22,320
i mean

744
00:25:22,320 --> 00:25:25,520
uh i actually think like knowing where

745
00:25:25,520 --> 00:25:27,279
to start that's probably

746
00:25:27,279 --> 00:25:31,200
the the most complex question

747
00:25:31,200 --> 00:25:34,080
um so like when to start a project or

748
00:25:34,080 --> 00:25:36,000
what to start for research so i don't

749
00:25:36,000 --> 00:25:36,400
really

750
00:25:36,400 --> 00:25:38,799
understand the the question behind it

751
00:25:38,799 --> 00:25:40,840
actually so it's

752
00:25:40,840 --> 00:25:44,320
yeah it's too generic maybe

753
00:25:44,320 --> 00:25:48,559
yeah well but we have a lot of people

754
00:25:48,559 --> 00:25:50,000
asking about

755
00:25:50,000 --> 00:25:52,960
how did you do the finger things in your

756
00:25:52,960 --> 00:25:54,080
your presentation

757
00:25:54,080 --> 00:25:56,480
do you want to share that speak yes yes

758
00:25:56,480 --> 00:25:58,240
yes for this i need to do a screen share

759
00:25:58,240 --> 00:25:59,760
and i just realized i can

760
00:25:59,760 --> 00:26:03,039
only uh either share my obs setup or my

761
00:26:03,039 --> 00:26:04,480
webcam so

762
00:26:04,480 --> 00:26:07,600
yeah so i'm actually working with two

763
00:26:07,600 --> 00:26:08,880
webcams for this

764
00:26:08,880 --> 00:26:12,000
so i have an iphone to my right so

765
00:26:12,000 --> 00:26:14,000
that's what you can see there

766
00:26:14,000 --> 00:26:18,080
and then in obs i actually have

767
00:26:18,080 --> 00:26:21,919
two cameras so i have a webcam which is

768
00:26:21,919 --> 00:26:25,679
just the facetime mac os webcam

769
00:26:25,679 --> 00:26:28,320
and i have my iphone which i call iphone

770
00:26:28,320 --> 00:26:29,520
but it doesn't matter

771
00:26:29,520 --> 00:26:32,159
and that only works on on mac os on

772
00:26:32,159 --> 00:26:34,240
linux you need a different driver to use

773
00:26:34,240 --> 00:26:36,080
your android phone for example

774
00:26:36,080 --> 00:26:38,720
and then i i basically have two cameras

775
00:26:38,720 --> 00:26:39,279
at once

776
00:26:39,279 --> 00:26:42,720
so that's the first important part here

777
00:26:42,720 --> 00:26:46,320
um and then i actually

778
00:26:46,320 --> 00:26:49,360
have a window capture and in the window

779
00:26:49,360 --> 00:26:51,200
capture i would have my slides which i

780
00:26:51,200 --> 00:26:52,080
currently don't

781
00:26:52,080 --> 00:26:55,520
have here and the important part is that

782
00:26:55,520 --> 00:26:55,760
i

783
00:26:55,760 --> 00:26:58,080
set a color key to white so everything

784
00:26:58,080 --> 00:27:00,159
that's white in my slides

785
00:27:00,159 --> 00:27:03,600
is then overlaid to um

786
00:27:03,600 --> 00:27:05,919
the second camera which i just use as

787
00:27:05,919 --> 00:27:07,840
the background so that's

788
00:27:07,840 --> 00:27:10,480
the other important thing here this one

789
00:27:10,480 --> 00:27:11,440
has

790
00:27:11,440 --> 00:27:14,640
also some filters so that i correct the

791
00:27:14,640 --> 00:27:16,799
color to be a bit brighter and then so

792
00:27:16,799 --> 00:27:18,840
the second camera is just in the

793
00:27:18,840 --> 00:27:20,000
background

794
00:27:20,000 --> 00:27:22,559
so i have basically two cameras and

795
00:27:22,559 --> 00:27:23,760
that's

796
00:27:23,760 --> 00:27:25,919
all of it a few features and then

797
00:27:25,919 --> 00:27:27,919
everything works live just within one

798
00:27:27,919 --> 00:27:30,399
recording

799
00:27:31,200 --> 00:27:34,880
yeah wow well it's fantastic

800
00:27:34,880 --> 00:27:37,360
so besides of your talk about bluetooth

801
00:27:37,360 --> 00:27:39,600
hacking we also got a trick about

802
00:27:39,600 --> 00:27:42,559
obs so thank you so much for sharing it

803
00:27:42,559 --> 00:27:44,399
it's really really interesting

804
00:27:44,399 --> 00:27:47,520
but i don't know if there is any

805
00:27:47,520 --> 00:27:50,720
question uh remember that we also have

806
00:27:50,720 --> 00:27:52,399
the discord

807
00:27:52,399 --> 00:27:54,880
so you can go there and ask questions in

808
00:27:54,880 --> 00:27:55,440
the

809
00:27:55,440 --> 00:28:00,159
uh one it's for questions

810
00:28:01,120 --> 00:28:02,880
my twitter edms are also open if you

811
00:28:02,880 --> 00:28:04,559
want to message me

812
00:28:04,559 --> 00:28:07,600
um yeah i mean it was a very basic

813
00:28:07,600 --> 00:28:09,279
introductory talk so i hope there are

814
00:28:09,279 --> 00:28:11,919
just not that many questions

815
00:28:11,919 --> 00:28:15,200
yeah yeah it's a fantastic super

816
00:28:15,200 --> 00:28:16,000
technical talk

817
00:28:16,000 --> 00:28:18,240
and we we love technical talks so we are

818
00:28:18,240 --> 00:28:19,279
happy to contact you

819
00:28:19,279 --> 00:28:21,200
in this this edition thank you so much

820
00:28:21,200 --> 00:28:22,720
for sharing your

821
00:28:22,720 --> 00:28:25,120
your knowledge about bluetooth and also

822
00:28:25,120 --> 00:28:27,120
your knowledge about obvious

823
00:28:27,120 --> 00:28:29,600
thank you so much for this and and see

824
00:28:29,600 --> 00:28:30,720
you

825
00:28:30,720 --> 00:28:35,200
thank you let's go for a lunch break

826
00:28:35,200 --> 00:28:45,840
and we are back in an hour

827
00:28:45,840 --> 00:29:13,480
[Music]

828
00:29:13,480 --> 00:29:15,470
[Applause]

829
00:29:15,470 --> 00:29:36,069
[Music]

830
00:29:36,200 --> 00:29:39,200
so

