1
00:00:01,520 --> 00:00:11,719
[Music]

2
00:00:16,960 --> 00:00:20,049
[Music]

3
00:00:20,180 --> 00:00:23,970
so my talk today is how secure is this

4
00:00:23,970 --> 00:00:26,820
thing anyway a guide into bug bounties

5
00:00:26,820 --> 00:00:32,460
and mobile security okay so a little

6
00:00:32,460 --> 00:00:36,540
about me I'm originally from the Bay

7
00:00:36,540 --> 00:00:39,350
Area so I'm from Berkeley California

8
00:00:39,350 --> 00:00:43,980
which is not too far from San Francisco

9
00:00:43,980 --> 00:00:47,370
California and I currently reside in

10
00:00:47,370 --> 00:00:49,770
Charlotte North Carolina I've been there

11
00:00:49,770 --> 00:00:53,399
for the past 10 years I worked as a

12
00:00:53,399 --> 00:00:56,160
penetration tester with the focus on app

13
00:00:56,160 --> 00:00:59,850
set and I've always been interested in

14
00:00:59,850 --> 00:01:02,870
mobile and decided to take the plunge

15
00:01:02,870 --> 00:01:06,090
this year at the beginning of this year

16
00:01:06,090 --> 00:01:10,469
and you can find me on Twitter at the

17
00:01:10,469 --> 00:01:12,979
fluffy double-oh-seven

18
00:01:12,979 --> 00:01:19,319
the goal of this presentation is I want

19
00:01:19,319 --> 00:01:23,280
everyone to become empower to start your

20
00:01:23,280 --> 00:01:25,920
journey into bug bounties if you so

21
00:01:25,920 --> 00:01:31,200
desire so just to give ok so just to

22
00:01:31,200 --> 00:01:36,380
give a little background on this here I

23
00:01:36,380 --> 00:01:40,039
jumped in the beginning of this year and

24
00:01:40,039 --> 00:01:44,459
I participated in a bug bounty weekend

25
00:01:44,459 --> 00:01:48,840
group with hacker one and I had that

26
00:01:48,840 --> 00:01:50,849
expression the whole weekend it was like

27
00:01:50,849 --> 00:01:52,979
what did I get myself into

28
00:01:52,979 --> 00:01:59,279
why but I learned a lot and I found that

29
00:01:59,279 --> 00:02:02,069
when most people they have that same

30
00:02:02,069 --> 00:02:08,669
expression as well okay at this fiber so

31
00:02:08,669 --> 00:02:11,038
the images used in this presentation are

32
00:02:11,038 --> 00:02:14,489
not from actual bug bounties programs

33
00:02:14,489 --> 00:02:16,800
and the reason I'm doing that

34
00:02:16,800 --> 00:02:19,230
for most of them have non-disclosure

35
00:02:19,230 --> 00:02:21,330
agreements and I'm not trying to get in

36
00:02:21,330 --> 00:02:27,150
trouble so this library so what is about

37
00:02:27,150 --> 00:02:27,960
bounties

38
00:02:27,960 --> 00:02:31,980
so a bug bounty is where you can find

39
00:02:31,980 --> 00:02:34,500
vulnerabilities for a specific company

40
00:02:34,500 --> 00:02:39,420
for instance here we have Credit Karma

41
00:02:39,420 --> 00:02:42,810
this is from bugcrowd so essentially

42
00:02:42,810 --> 00:02:45,420
what they do is they provide a short

43
00:02:45,420 --> 00:02:50,880
synopsis of the company also tell you on

44
00:02:50,880 --> 00:02:53,550
the right how many vulnerabilities have

45
00:02:53,550 --> 00:02:57,930
we rewarded validation is after you

46
00:02:57,930 --> 00:03:01,890
submit a report the validating is to

47
00:03:01,890 --> 00:03:03,930
make sure that is actual a true is

48
00:03:03,930 --> 00:03:06,540
actually a true bug and in this case it

49
00:03:06,540 --> 00:03:10,020
takes within four days and 75% of

50
00:03:10,020 --> 00:03:11,730
submissions are accepted or rejected

51
00:03:11,730 --> 00:03:14,670
within the four day period and it gives

52
00:03:14,670 --> 00:03:16,830
you an average payout so in this

53
00:03:16,830 --> 00:03:20,010
instance the average payout was 250

54
00:03:20,010 --> 00:03:30,530
dollars and okay so here it lists the

55
00:03:30,530 --> 00:03:34,830
ranges per for nur ability so two two

56
00:03:34,830 --> 00:03:37,620
hundred to five thousand the five

57
00:03:37,620 --> 00:03:40,950
thousand will be for a more critical bug

58
00:03:40,950 --> 00:03:48,239
like SQL injection in similar bugs so

59
00:03:48,239 --> 00:03:50,100
the types of bug bounties you have

60
00:03:50,100 --> 00:03:59,780
reward and swag so for reward

61
00:03:59,780 --> 00:04:03,060
compensation based based on the

62
00:04:03,060 --> 00:04:05,880
vulnerability and platform and higher

63
00:04:05,880 --> 00:04:08,130
the severity hired the payout so what do

64
00:04:08,130 --> 00:04:10,890
I mean by that so if you look on the

65
00:04:10,890 --> 00:04:18,060
right-hand side of the slide oh crap

66
00:04:18,060 --> 00:04:23,220
sorry too ambitious here on the right

67
00:04:23,220 --> 00:04:27,920
side you will notice that for api's I

68
00:04:27,920 --> 00:04:32,870
an Android a p1 which is signifies a

69
00:04:32,870 --> 00:04:36,920
critical you could you pay 5,000 whereas

70
00:04:36,920 --> 00:04:40,690
if you find it on the website it is 3000

71
00:04:40,690 --> 00:04:46,520
so again so P ones are critical P twos

72
00:04:46,520 --> 00:04:50,600
are high P 3s or medium mp4s are low so

73
00:04:50,600 --> 00:04:53,000
higher the severity higher the payout

74
00:04:53,000 --> 00:04:56,600
you would notice the p4 is 250 whereas

75
00:04:56,600 --> 00:05:03,140
the p1 is 5000 swag so with other

76
00:05:03,140 --> 00:05:06,020
companies and lieu of giving you money

77
00:05:06,020 --> 00:05:09,110
they like to give you prices incidence

78
00:05:09,110 --> 00:05:13,270
clothes hats shirts hoodies gadgets

79
00:05:13,270 --> 00:05:17,840
backpacks and stickers on this picture

80
00:05:17,840 --> 00:05:21,350
here is sample swag I'm sure anyone who

81
00:05:21,350 --> 00:05:23,960
has gone to a conference you've picked

82
00:05:23,960 --> 00:05:26,720
up somewhere before from the different

83
00:05:26,720 --> 00:05:34,730
members ok but bouncy steps here is from

84
00:05:34,730 --> 00:05:40,900
hyper one so this is a guidance for

85
00:05:40,900 --> 00:05:43,100
companies that are thinking about going

86
00:05:43,100 --> 00:05:46,970
into the bug bounty space so level one

87
00:05:46,970 --> 00:05:52,900
is a company that is just entering the

88
00:05:59,920 --> 00:06:05,090
worked out in their program and their

89
00:06:05,090 --> 00:06:11,660
mature you will notice that as for the

90
00:06:11,660 --> 00:06:14,390
criticals the more mature the bug bounty

91
00:06:14,390 --> 00:06:21,920
program the more the payout is ok so to

92
00:06:21,920 --> 00:06:23,840
talk a little bit about mobile devices

93
00:06:23,840 --> 00:06:27,080
because that is part of the talk so I'm

94
00:06:27,080 --> 00:06:28,169
sure

95
00:06:28,169 --> 00:06:31,960
majority of the majority of you have a

96
00:06:31,960 --> 00:06:35,860
little device so you know they're great

97
00:06:35,860 --> 00:06:38,350
you could do a lot of stuff look at bank

98
00:06:38,350 --> 00:06:41,440
information shop if you want to browse

99
00:06:41,440 --> 00:06:47,770
the Internet to you and browse social

100
00:06:47,770 --> 00:06:52,660
media so wow this is great for your

101
00:06:52,660 --> 00:06:55,690
device these are the different attack

102
00:06:55,690 --> 00:07:00,220
their attack vectors from now secure so

103
00:07:00,220 --> 00:07:03,039
it's broken up into the actual device

104
00:07:03,039 --> 00:07:07,510
the network in cloud data center so as

105
00:07:07,510 --> 00:07:11,080
you can see while your device you can do

106
00:07:11,080 --> 00:07:12,669
many lovely things

107
00:07:12,669 --> 00:07:17,440
it is very there's not secure so there's

108
00:07:17,440 --> 00:07:20,680
many things you can do for instance you

109
00:07:20,680 --> 00:07:26,139
can do SMS phishing texted fishing for

110
00:07:26,139 --> 00:07:30,580
apps you know system data storage intent

111
00:07:30,580 --> 00:07:34,710
hijacking GPS spoofing you know this is

112
00:07:34,710 --> 00:07:38,800
the attack surface for mobile devices so

113
00:07:38,800 --> 00:07:42,820
as you can see there's a lot of ways to

114
00:07:42,820 --> 00:07:46,590
hack into your homes

115
00:07:47,010 --> 00:07:52,360
ok so my top would be on Android I have

116
00:07:52,360 --> 00:08:02,800
Android so to give a little bit of

117
00:08:02,800 --> 00:08:05,949
background with Android devices they are

118
00:08:05,949 --> 00:08:09,190
severely fragmented what does that mean

119
00:08:09,190 --> 00:08:13,330
whoa Android is open source and the

120
00:08:13,330 --> 00:08:17,020
fragmentation comes in where mobile

121
00:08:17,020 --> 00:08:19,080
providers can add

122
00:08:19,080 --> 00:08:21,629
some cold on top of the Android

123
00:08:21,629 --> 00:08:24,330
operating system for specific devices so

124
00:08:24,330 --> 00:08:27,719
for instance and if I have a phone and

125
00:08:27,719 --> 00:08:33,029
for this sample Android window sighs I

126
00:08:33,029 --> 00:08:34,828
don't like it I'm like it doesn't work

127
00:08:34,828 --> 00:08:38,700
for my phone is too small I can go and

128
00:08:38,700 --> 00:08:42,799
modify that for my specific device so

129
00:08:42,799 --> 00:08:46,140
well that sounds really really good the

130
00:08:46,140 --> 00:08:48,140
problem with that is it leads to

131
00:08:48,140 --> 00:08:53,269
interoperability issues meaning that you

132
00:08:53,269 --> 00:08:58,019
depending on the device to you can have

133
00:08:58,019 --> 00:09:00,450
two devices that don't have the same

134
00:09:00,450 --> 00:09:04,050
code and that comes into play when you -

135
00:09:04,050 --> 00:09:08,040
but bug bounties because you realize hey

136
00:09:08,040 --> 00:09:13,589
wow you know if the Galaxy s8 you know

137
00:09:13,589 --> 00:09:20,880
is secure the s6 might not be for s7 so

138
00:09:20,880 --> 00:09:23,550
to give a little bit about Android

139
00:09:23,550 --> 00:09:26,959
security it is based on the Linux kernel

140
00:09:26,959 --> 00:09:30,600
it provides the following security

141
00:09:30,600 --> 00:09:34,070
features of a user race permission model

142
00:09:34,070 --> 00:09:37,800
process isolation and the ability to

143
00:09:37,800 --> 00:09:40,500
remove unnecessary and potentially

144
00:09:40,500 --> 00:09:44,180
insecure part of the kernel so

145
00:09:44,180 --> 00:09:47,370
application sandboxing so how this works

146
00:09:47,370 --> 00:09:53,300
is you can ask isolate X from each other

147
00:09:54,829 --> 00:09:58,860
it assigns that unique user ID to each

148
00:09:58,860 --> 00:10:01,980
Android application in words that his

149
00:10:01,980 --> 00:10:07,170
own process uses this UI need to set up

150
00:10:07,170 --> 00:10:11,440
the kernel level application sandbox

151
00:10:11,440 --> 00:10:15,730
forces security between that and system

152
00:10:15,730 --> 00:10:19,180
at the process level to abused our group

153
00:10:19,180 --> 00:10:23,470
IDs that are assigning 2x by default

154
00:10:23,470 --> 00:10:26,860
can't interact with each other and have

155
00:10:26,860 --> 00:10:30,900
limited access to the operating system

156
00:10:31,170 --> 00:10:34,230
application assigning so this allows

157
00:10:34,230 --> 00:10:37,240
developers to identify the author of the

158
00:10:37,240 --> 00:10:40,480
application that provides a more

159
00:10:40,480 --> 00:10:42,910
streamlined process to update the

160
00:10:42,910 --> 00:10:46,150
application every application that runs

161
00:10:46,150 --> 00:10:48,910
on the Android platform must be signed

162
00:10:48,910 --> 00:10:51,940
by the developer an application is that

163
00:10:51,940 --> 00:10:54,790
attempt to install on a device without

164
00:10:54,790 --> 00:10:57,340
the inside rejected by Google Play

165
00:10:57,340 --> 00:11:01,120
that's the repository for Google X or

166
00:11:01,120 --> 00:11:03,990
the package installer application

167
00:11:03,990 --> 00:11:07,420
assignment is the first step to placing

168
00:11:07,420 --> 00:11:09,430
an application in the application

169
00:11:09,430 --> 00:11:13,780
sandbox assigning defines the user ID is

170
00:11:13,780 --> 00:11:15,910
associated with the application and

171
00:11:15,910 --> 00:11:18,010
different applications marking the

172
00:11:18,010 --> 00:11:22,930
different user IDs so let's talk about

173
00:11:22,930 --> 00:11:26,400
the importance of routing the device so

174
00:11:26,400 --> 00:11:29,740
Android only allows a small subset of

175
00:11:29,740 --> 00:11:31,540
applications to run with root

176
00:11:31,540 --> 00:11:35,050
permissions Android does not stop users

177
00:11:35,050 --> 00:11:37,270
or applications or modifying the

178
00:11:37,270 --> 00:11:39,580
operating system kernel organ the other

179
00:11:39,580 --> 00:11:43,750
application so if you had a root you

180
00:11:43,750 --> 00:11:46,240
have full access to the application and

181
00:11:46,240 --> 00:11:49,620
all application data on that device

182
00:11:49,620 --> 00:11:52,900
users that allow applications to run as

183
00:11:52,900 --> 00:11:55,710
root increase their direct exposure to

184
00:11:55,710 --> 00:11:58,330
malicious applications and application

185
00:11:58,330 --> 00:12:04,150
flaws so now I'm going to talk about

186
00:12:04,150 --> 00:12:05,690
components of

187
00:12:05,690 --> 00:12:09,440
application activities services content

188
00:12:09,440 --> 00:12:13,610
providers and broadcast receivers so an

189
00:12:13,610 --> 00:12:16,850
activity represents a single screen with

190
00:12:16,850 --> 00:12:19,940
a user interface this is similar to a

191
00:12:19,940 --> 00:12:23,660
window and a desktop application and the

192
00:12:23,660 --> 00:12:26,150
application can contain one or more

193
00:12:26,150 --> 00:12:30,200
activities a service is a

194
00:12:30,200 --> 00:12:32,840
general-purpose entry point for keeping

195
00:12:32,840 --> 00:12:34,370
the application running in the

196
00:12:34,370 --> 00:12:40,480
background this is not a user interface

197
00:12:40,480 --> 00:12:44,600
performs long write operations are

198
00:12:44,600 --> 00:12:48,140
performed remote processes so for

199
00:12:48,140 --> 00:12:51,710
instance examples internet downloads and

200
00:12:51,710 --> 00:12:55,850
data processing then you have content

201
00:12:55,850 --> 00:12:59,390
providers which supplies data from one

202
00:12:59,390 --> 00:13:02,650
application to others on request

203
00:13:02,650 --> 00:13:05,510
centralized content in one place and

204
00:13:05,510 --> 00:13:08,360
allows different applications to access

205
00:13:08,360 --> 00:13:10,850
it so a common example of this will be

206
00:13:10,850 --> 00:13:15,740
blank database broadcast receivers of

207
00:13:15,740 --> 00:13:19,210
response to system-wide broadcast

208
00:13:19,210 --> 00:13:22,550
announcements these messages are called

209
00:13:22,550 --> 00:13:25,880
events or attempts so an example of this

210
00:13:25,880 --> 00:13:28,880
will be when you've turned off the

211
00:13:28,880 --> 00:13:31,820
screen on your device or if you have a

212
00:13:31,820 --> 00:13:38,800
low battery so I wanted to talk about a

213
00:13:38,800 --> 00:13:42,890
apk tool for a second so it's a tool

214
00:13:42,890 --> 00:13:44,530
that allows you to invert

215
00:13:44,530 --> 00:13:48,410
reverse-engineer third-party apps can

216
00:13:48,410 --> 00:13:51,260
decode resources close to original form

217
00:13:51,260 --> 00:13:54,120
you can reveal the application

218
00:13:54,120 --> 00:13:56,370
after modification so for instance you

219
00:13:56,370 --> 00:13:58,920
can be decompile the application make

220
00:13:58,920 --> 00:14:02,670
changes and then we recompile with your

221
00:14:02,670 --> 00:14:04,850
changes to see if it's there

222
00:14:04,850 --> 00:14:09,810
so after D compelling JPK you'll have

223
00:14:09,810 --> 00:14:12,690
the following folders small e

224
00:14:12,690 --> 00:14:16,470
rest veterans and the bow into our

225
00:14:16,470 --> 00:14:21,660
manifest XML so for smiley you could

226
00:14:21,660 --> 00:14:25,110
think of this as a simply language used

227
00:14:25,110 --> 00:14:28,130
by the Android dalvik virtual machine

228
00:14:28,130 --> 00:14:34,110
and decompose through ad expound is used

229
00:14:34,110 --> 00:14:37,560
for low-level inspection excuse me up a

230
00:14:37,560 --> 00:14:42,390
Natori at content so again I like to

231
00:14:42,390 --> 00:14:45,089
think of it as assembly most people

232
00:14:45,089 --> 00:14:48,120
don't look at the small e Android is

233
00:14:48,120 --> 00:14:52,650
based on Java you build it with Java

234
00:14:52,650 --> 00:14:54,720
code coating with Java so most people

235
00:14:54,720 --> 00:14:56,190
will just looking at the Java source

236
00:14:56,190 --> 00:14:59,100
code but other people who are very

237
00:14:59,100 --> 00:15:01,110
ambitious they might like to look at the

238
00:15:01,110 --> 00:15:04,529
small team to figure out the logic of

239
00:15:04,529 --> 00:15:10,680
the application so right this is the

240
00:15:10,680 --> 00:15:13,200
folder for additional files and static

241
00:15:13,200 --> 00:15:15,930
content such as images

242
00:15:15,930 --> 00:15:18,779
layout definitions user interface

243
00:15:18,779 --> 00:15:23,580
strings and animation strings and the

244
00:15:23,580 --> 00:15:27,779
meta gem folder contains the following

245
00:15:27,779 --> 00:15:31,200
files the SERP de Artes a SERP die

246
00:15:31,200 --> 00:15:32,350
except

247
00:15:32,350 --> 00:15:38,620
mm so the first is assigned contents of

248
00:15:38,620 --> 00:15:41,410
the cert SFL along with the cert

249
00:15:41,410 --> 00:15:44,560
certificate chain of the public key used

250
00:15:44,560 --> 00:15:48,120
to sign the contents the cert SF

251
00:15:48,120 --> 00:15:51,700
contains a list of all files along with

252
00:15:51,700 --> 00:15:54,910
a sha-1 hash and then the manifest

253
00:15:54,910 --> 00:15:57,430
contains information for the application

254
00:15:57,430 --> 00:16:00,100
such as package versions Bureau number

255
00:16:00,100 --> 00:16:05,070
and creator of the package with the

256
00:16:05,070 --> 00:16:08,950
Android manifest this is located at the

257
00:16:08,950 --> 00:16:12,820
root of the project every Android

258
00:16:12,820 --> 00:16:15,670
application has an Android manifest file

259
00:16:15,670 --> 00:16:20,200
and so this file declares components

260
00:16:20,200 --> 00:16:22,930
such as the package of application

261
00:16:22,930 --> 00:16:26,080
it describes the components of the

262
00:16:26,080 --> 00:16:28,920
application activities services

263
00:16:28,920 --> 00:16:31,360
broadcast receivers and content

264
00:16:31,360 --> 00:16:35,230
providers declare permissions the

265
00:16:35,230 --> 00:16:37,620
application must have in order to

266
00:16:37,620 --> 00:16:40,900
interact with protected api's and other

267
00:16:40,900 --> 00:16:43,720
applications and I declared the middle

268
00:16:43,720 --> 00:16:46,900
level of the Android API that the

269
00:16:46,900 --> 00:16:52,470
application requires so we have a sample

270
00:16:52,470 --> 00:17:06,010
Android manifest so here the manifest

271
00:17:06,010 --> 00:17:10,450
describes the package here the minimum

272
00:17:10,450 --> 00:17:14,349
level of Android that needs to run on

273
00:17:14,349 --> 00:17:19,089
that the minimum level of Android for

274
00:17:19,089 --> 00:17:19,640
this

275
00:17:19,640 --> 00:17:22,670
right in this case is number two so it's

276
00:17:22,670 --> 00:17:25,790
like the very first operating system of

277
00:17:25,790 --> 00:17:35,960
Android also the activity is defined

278
00:17:35,960 --> 00:17:46,580
here have intense here along with

279
00:17:46,580 --> 00:17:51,860
actions and categories so to switch back

280
00:17:51,860 --> 00:17:59,930
to counties for a second so you it's

281
00:17:59,930 --> 00:18:04,160
like okay I want ease I think I wanted

282
00:18:04,160 --> 00:18:08,000
to Android found an app I think I found

283
00:18:08,000 --> 00:18:16,150
a loaner ability you want to do Android

284
00:18:16,570 --> 00:18:25,070
so the reason why I specified Android is

285
00:18:25,070 --> 00:18:27,410
because again it's an open source

286
00:18:27,410 --> 00:18:31,220
platform it is a lower entry to pick

287
00:18:31,220 --> 00:18:34,550
Lord intrusive barrier as opposed to the

288
00:18:34,550 --> 00:18:39,290
iOS with the iOS that code is

289
00:18:39,290 --> 00:18:42,020
proprietary and it belongs to Apple so

290
00:18:42,020 --> 00:18:44,870
not saying that you cannot do bug

291
00:18:44,870 --> 00:18:47,510
bounties with iOS is it's just a little

292
00:18:47,510 --> 00:18:53,210
harder so you might be thinking okay why

293
00:18:53,210 --> 00:18:57,400
honey so there are multiple programs

294
00:18:57,400 --> 00:19:00,770
ranging from different sizes from small

295
00:19:00,770 --> 00:19:05,820
to large sample programs you have

296
00:19:05,820 --> 00:19:12,250
defense Apple and Facebook and so when

297
00:19:12,250 --> 00:19:14,559
getting started with bug bounties I tell

298
00:19:14,559 --> 00:19:17,919
people to focus on programs that are

299
00:19:17,919 --> 00:19:24,539
small so because most people are going

300
00:19:26,600 --> 00:19:29,789
[Music]

301
00:19:29,789 --> 00:20:18,789
because with those easier already you

302
00:20:18,789 --> 00:20:24,039
know so I would say reporting is

303
00:20:24,039 --> 00:20:28,740
probably the most important part the

304
00:20:28,740 --> 00:20:31,450
process and the reason I say that is

305
00:20:31,450 --> 00:20:34,450
because there are a lot of people who

306
00:20:34,450 --> 00:20:38,220
found really sexy you know

307
00:20:38,220 --> 00:20:40,780
vulnerabilities but they didn't convey

308
00:20:40,780 --> 00:20:44,650
it and apart in the proper way and the

309
00:20:44,650 --> 00:20:48,760
company was like not loved so when

310
00:20:48,760 --> 00:20:51,640
composing your report you should be

311
00:20:51,640 --> 00:20:54,070
thinking about business impact to the

312
00:20:54,070 --> 00:20:59,380
company meaning okay if a attacker was

313
00:20:59,380 --> 00:21:01,659
able to find this what can they do

314
00:21:01,659 --> 00:21:05,080
can they you know steal all your data

315
00:21:05,080 --> 00:21:07,420
you know what's the impact was you know

316
00:21:07,420 --> 00:21:10,510
it's a awesome reputation you know you

317
00:21:10,510 --> 00:21:13,300
need to think and the terms of the

318
00:21:13,300 --> 00:21:15,970
climate the business and when you think

319
00:21:15,970 --> 00:21:16,750
of that

320
00:21:16,750 --> 00:21:22,740
most times your report will be accepted

321
00:21:22,740 --> 00:21:24,070
awesome

322
00:21:24,070 --> 00:21:27,280
if you find you know you submit your

323
00:21:27,280 --> 00:21:30,100
really good report and you get a

324
00:21:30,100 --> 00:21:31,900
response in this leg hey it's the

325
00:21:31,900 --> 00:21:34,510
duplicate someone you know around us

326
00:21:34,510 --> 00:21:35,580
before you did

327
00:21:35,580 --> 00:21:38,230
don't be discouraged I mean that just

328
00:21:38,230 --> 00:21:40,600
shows that you're on the right track

329
00:21:40,600 --> 00:21:43,810
so you know keep going summer someone

330
00:21:43,810 --> 00:21:48,820
just beat you first when you know doing

331
00:21:48,820 --> 00:21:51,310
bug bounties you know make sure it's the

332
00:21:51,310 --> 00:21:56,800
same notes because you realized with

333
00:21:56,800 --> 00:22:00,600
different platforms different group

334
00:22:00,600 --> 00:22:03,190
different companies you might have

335
00:22:03,190 --> 00:22:06,640
encountered a similar bug and if you

336
00:22:06,640 --> 00:22:09,700
don't have notes you have to rely you

337
00:22:09,700 --> 00:22:18,160
know so similar to this let me see what

338
00:22:18,160 --> 00:22:27,360
I did in my five for that new so

339
00:22:27,360 --> 00:22:32,170
involved with gravities reading products

340
00:22:32,170 --> 00:22:35,890
as possible once again with bug bounties

341
00:22:35,890 --> 00:22:41,920
there is no disclosure and non public

342
00:22:41,920 --> 00:22:45,220
disclosure so what that means is will

343
00:22:45,220 --> 00:22:47,410
public disclosure the company's like oh

344
00:22:47,410 --> 00:22:50,020
yeah you know write a report you know

345
00:22:50,020 --> 00:22:54,550
how you found this bug right and you'll

346
00:22:54,550 --> 00:22:56,039
find other companies there

347
00:22:56,039 --> 00:23:00,690
like well no don't don't release how you

348
00:23:00,690 --> 00:23:02,850
found this you know won't pay you but

349
00:23:02,850 --> 00:23:10,169
don't release and take the plunger to

350
00:23:10,169 --> 00:23:24,629
bug bounties to also there's tutorials

351
00:23:24,629 --> 00:23:29,609
Heffron one has the CTF and after you

352
00:23:29,609 --> 00:23:32,849
accumulate a certain number of points I

353
00:23:32,849 --> 00:23:35,519
think the first is 26 then you start

354
00:23:35,519 --> 00:23:38,909
getting invited to actual bug bounty

355
00:23:38,909 --> 00:23:41,249
programs so I think that's really cool

356
00:23:41,249 --> 00:23:44,070
and then you have but proud University

357
00:23:44,070 --> 00:23:52,340
that teaches you different securities ok

358
00:24:01,940 --> 00:24:04,940
engineering and Android application

359
00:24:04,940 --> 00:24:18,119
using the Olas testing so here are using

360
00:24:18,119 --> 00:24:21,979
an android emulator called android x86

361
00:24:21,979 --> 00:24:26,929
most times we if you're going to do

362
00:24:26,929 --> 00:24:30,090
android reverse engineering where

363
00:24:30,090 --> 00:24:32,190
android apps you will really want to

364
00:24:32,190 --> 00:24:36,269
have the actual physical device but for

365
00:24:36,269 --> 00:24:40,170
this demo i'm using an emulator

366
00:24:40,170 --> 00:24:47,550
machine so here so just to give a quick

367
00:24:47,550 --> 00:24:53,600
disclaimer I did this demo like 30 times

368
00:24:59,840 --> 00:25:05,910
I didn't do that when I first started so

369
00:25:05,910 --> 00:25:09,330
I'm starting from A to Z so that's why

370
00:25:09,330 --> 00:25:15,800
I'm installing it here so after this I

371
00:25:15,800 --> 00:25:24,720
am going and type I have to fear so

372
00:25:24,720 --> 00:25:28,290
essentially I need to get the IP address

373
00:25:28,290 --> 00:25:30,980
because I have another personal machine

374
00:25:30,980 --> 00:25:41,880
that I need I need my emulator in my

375
00:25:41,880 --> 00:25:44,280
virtual machine to talk so I'm getting

376
00:25:44,280 --> 00:25:46,860
that IP address so I can use that inside

377
00:25:46,860 --> 00:25:54,200
not other virtual machine so the 192 168

378
00:25:54,200 --> 00:25:59,130
56 1/2 so this is my other virtual

379
00:25:59,130 --> 00:26:03,870
machine here and I'm using adb Android

380
00:26:03,870 --> 00:26:08,400
debug bridge so and I'm connecting to

381
00:26:08,400 --> 00:26:12,180
the Android emulator so it connected

382
00:26:12,180 --> 00:26:16,140
successfully also I'm using freedom

383
00:26:16,140 --> 00:26:20,490
which is a dynamic and now analysis tool

384
00:26:20,490 --> 00:26:26,310
where you can change the logic and

385
00:26:26,310 --> 00:26:29,390
[Music]

386
00:26:29,390 --> 00:26:33,270
Android applications in real time so we

387
00:26:33,270 --> 00:26:37,220
will be using that shortly

388
00:26:39,539 --> 00:26:44,200
so right now I'm pushing the server to

389
00:26:44,200 --> 00:26:50,980
my emulator and starting as brew and

390
00:26:50,980 --> 00:26:55,659
then I'm already connected but I just

391
00:26:55,659 --> 00:26:58,090
did that for sanity check and again

392
00:26:58,090 --> 00:27:03,460
going going into the shell of my Android

393
00:27:03,460 --> 00:27:07,770
emulator and I'm going to change the

394
00:27:07,770 --> 00:27:10,059
permissions for the Freedom Summer and

395
00:27:10,059 --> 00:27:22,620
then I'm going to start it now I'm

396
00:27:22,620 --> 00:27:28,630
putting the uncrackable app on my

397
00:27:28,630 --> 00:27:35,860
android emulator so next I will go and

398
00:27:35,860 --> 00:27:40,330
install it so I set it to the download

399
00:27:40,330 --> 00:27:44,220
folder inside the emulator

400
00:28:06,010 --> 00:28:09,190
this unknown apps are you sure you want

401
00:28:09,190 --> 00:28:20,290
to install so installing the app now I'm

402
00:28:20,290 --> 00:28:24,130
going to run it in old route has been

403
00:28:24,130 --> 00:28:25,090
detected

404
00:28:25,090 --> 00:28:27,220
this is unacceptable that app is now

405
00:28:27,220 --> 00:28:31,809
going to exit so it stopped us so next

406
00:28:31,809 --> 00:28:36,010
what I'm going to do is show that yes I

407
00:28:36,010 --> 00:28:39,040
am connected the emulator is connected

408
00:28:39,040 --> 00:28:42,400
and then I'm going to use Frida to look

409
00:28:42,400 --> 00:28:45,340
for the part on the different processes

410
00:28:45,340 --> 00:28:49,620
and make sure that the uncrackable

411
00:28:49,620 --> 00:28:53,950
wasn't cooked using Frida which it was

412
00:28:53,950 --> 00:29:00,059
now I am opening

413
00:29:00,059 --> 00:29:05,370
jadx Bui which is a decompiler for

414
00:29:05,370 --> 00:29:10,390
Android apps and for this you can sorry

415
00:29:10,390 --> 00:29:14,500
you can use source code so that's what

416
00:29:14,500 --> 00:29:17,410
you're doing now you're viewing the

417
00:29:17,410 --> 00:29:21,070
source code for that so once again this

418
00:29:21,070 --> 00:29:24,760
is written in Java just a quick note

419
00:29:24,760 --> 00:29:29,799
when you're when you you know D compound

420
00:29:29,799 --> 00:29:33,130
you're not going to get the full Java

421
00:29:33,130 --> 00:29:38,530
code what a lot of companies do is they

422
00:29:38,530 --> 00:29:41,679
use authorization so the reason that

423
00:29:41,679 --> 00:29:43,450
they do that is so because they don't

424
00:29:43,450 --> 00:29:46,990
want it to where when you compile their

425
00:29:46,990 --> 00:29:48,549
application you have the keys to the

426
00:29:48,549 --> 00:29:51,460
kingdom and know how the application

427
00:29:51,460 --> 00:29:53,390
works so what they'll do

428
00:29:53,390 --> 00:29:57,830
though a few states the code and make it

429
00:29:57,830 --> 00:30:00,700
rude hard for you to try to

430
00:30:00,700 --> 00:30:04,130
reverse-engineer you can reverse

431
00:30:04,130 --> 00:30:09,320
engineer after scanning cold I know

432
00:30:09,320 --> 00:30:11,960
with its Android studio they have Pro

433
00:30:11,960 --> 00:30:15,110
Bowler widget which is an option alpha

434
00:30:15,110 --> 00:30:17,750
station tool that should be used to

435
00:30:17,750 --> 00:30:25,910
deoxy scape apps so here we are we use

436
00:30:25,910 --> 00:30:30,850
freedom and now we have bypass that

437
00:30:30,850 --> 00:30:35,240
route has been detected so and I'm going

438
00:30:35,240 --> 00:30:39,679
to show the code and a little bit so

439
00:30:39,679 --> 00:30:43,309
essentially we have bypassed that so now

440
00:30:43,309 --> 00:30:47,110
we need to figure out what is the secret

441
00:30:47,110 --> 00:30:53,049
string so going back to the application

442
00:30:53,049 --> 00:30:58,270
we notice that there is a base64 decode

443
00:30:58,270 --> 00:31:10,120
to the right along with we're using a

444
00:31:10,120 --> 00:31:14,840
site work so next we need to figure out

445
00:31:14,840 --> 00:31:18,410
the string and we're going to use this

446
00:31:18,410 --> 00:31:27,110
code here to get that so next I'm going

447
00:31:27,110 --> 00:31:35,809
to run freida again to get the secret

448
00:31:35,809 --> 00:31:38,139
string

449
00:31:57,600 --> 00:32:00,660
now for this to work I need to go back

450
00:32:00,660 --> 00:32:03,990
to the app and type in anything so at

451
00:32:03,990 --> 00:32:05,370
this point I'm going to type in your

452
00:32:05,370 --> 00:32:10,560
text and it's going to say nope 98

453
00:32:10,560 --> 00:32:17,940
try again going back to the terminal we

454
00:32:17,940 --> 00:32:20,310
have the passcode which is I want to

455
00:32:20,310 --> 00:32:22,760
believe

456
00:32:34,070 --> 00:32:38,030
so now you know success we enter the

457
00:32:38,030 --> 00:32:43,660
correct secret so now I'm going to show

458
00:32:43,660 --> 00:32:48,380
the actual code to make this possible so

459
00:32:48,380 --> 00:32:52,130
with freedom i'm using javascript but

460
00:32:52,130 --> 00:32:55,760
we're freedom to use python and other

461
00:32:55,760 --> 00:32:58,790
languages I just use JavaScript for this

462
00:32:58,790 --> 00:33:12,730
example and so essentially what I did so

463
00:33:12,730 --> 00:33:16,100
essentially what I did was simply

464
00:33:16,100 --> 00:33:20,540
override those methods and have them

465
00:33:20,540 --> 00:33:25,940
return false so essentially for the root

466
00:33:25,940 --> 00:33:29,630
privileges that logic was returning true

467
00:33:29,630 --> 00:33:35,000
that's why that dialog box came up it

468
00:33:35,000 --> 00:33:39,830
was like route detected so I set those

469
00:33:39,830 --> 00:33:44,830
to false to bypass that and then I also

470
00:33:44,830 --> 00:33:53,690
overrode the 880's cold so created an

471
00:33:53,690 --> 00:33:59,330
array and then essentially once typing

472
00:33:59,330 --> 00:34:04,570
in any text basically changing it into

473
00:34:04,570 --> 00:34:08,870
the character equivalent and having the

474
00:34:08,870 --> 00:34:15,040
string be presented to us inside the

475
00:34:15,040 --> 00:34:18,040
terminal

476
00:34:32,840 --> 00:34:41,230
so just showing basically the overriding

477
00:34:43,030 --> 00:34:47,050
overriding those methods

478
00:35:16,580 --> 00:35:20,870
okay so the last little bit is just

479
00:35:20,870 --> 00:35:23,840
basically showing how to use the apk to

480
00:35:23,840 --> 00:35:28,730
the d4d compound so essentially I'm

481
00:35:28,730 --> 00:35:32,480
going to decompile the uncrackable level

482
00:35:32,480 --> 00:35:37,690
one application just showing just how

483
00:35:37,690 --> 00:35:41,270
you know how you would use the apk to

484
00:35:41,270 --> 00:35:46,640
move and then showing some of the

485
00:35:46,640 --> 00:35:48,530
folders that I talked about small e

486
00:35:48,530 --> 00:35:56,620
bread and the Android manifest that XML

487
00:36:26,240 --> 00:36:29,900
then again and really can't see that was

488
00:36:29,900 --> 00:36:35,420
just the XML describing the intense and

489
00:36:35,420 --> 00:36:38,710
everything for that application

490
00:36:47,050 --> 00:36:50,830
so summary the attack vector for our

491
00:36:50,830 --> 00:36:54,700
mobile devices local apps and devices is

492
00:36:54,700 --> 00:36:57,520
wider barrier to entry is loved with

493
00:36:57,520 --> 00:37:00,610
Android you know you can decompile

494
00:37:00,610 --> 00:37:03,670
Android apps and look under the hood bug

495
00:37:03,670 --> 00:37:06,810
bounties are not a one-size-fits-all

496
00:37:06,810 --> 00:37:10,090
freedom you know as a good tool to use

497
00:37:10,090 --> 00:37:13,930
for dynamic analysis as you can change

498
00:37:13,930 --> 00:37:17,680
logic on the fly and there is no silver

499
00:37:17,680 --> 00:37:18,580
bullet

500
00:37:18,580 --> 00:37:24,660
application with mobile security so I

501
00:37:24,660 --> 00:37:29,020
created an intro to Android security VM

502
00:37:29,020 --> 00:37:32,500
so it has two additional apps the

503
00:37:32,500 --> 00:37:35,500
insecure bank in the hacking playground

504
00:37:35,500 --> 00:37:40,180
I will add the debug and secure app and

505
00:37:40,180 --> 00:37:44,680
the next release so to use it

506
00:37:44,680 --> 00:37:47,620
push the apps to the emulator using

507
00:37:47,620 --> 00:37:53,260
Android debug bridge also I'm working

508
00:37:53,260 --> 00:37:56,410
with try Hackney which is a online

509
00:37:56,410 --> 00:38:02,290
hacking company to add the videos to the

510
00:38:02,290 --> 00:38:05,260
site but if you want to download the

511
00:38:05,260 --> 00:38:10,450
video you can go to source board and URL

512
00:38:10,450 --> 00:38:17,200
is right here and just resources and

513
00:38:17,200 --> 00:38:21,060
suggested reading and

514
00:38:31,960 --> 00:38:34,020
you

