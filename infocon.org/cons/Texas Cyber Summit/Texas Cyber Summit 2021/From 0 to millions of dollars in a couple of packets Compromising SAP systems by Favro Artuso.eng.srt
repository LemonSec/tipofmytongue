1
00:00:00,799 --> 00:00:03,040
okay thank you everybody for joining to

2
00:00:03,040 --> 00:00:05,120
our presentation and thank you texas

3
00:00:05,120 --> 00:00:06,560
summit for letting us be part of this

4
00:00:06,560 --> 00:00:08,559
amazing conference

5
00:00:08,559 --> 00:00:10,400
uh today we're going to speak about

6
00:00:10,400 --> 00:00:11,920
different vulnerabilities that we found

7
00:00:11,920 --> 00:00:15,200
last year in the 2020 uh that will allow

8
00:00:15,200 --> 00:00:17,920
ultimately an authenticated attacker to

9
00:00:17,920 --> 00:00:19,920
basically compromise full compromise and

10
00:00:19,920 --> 00:00:22,560
sap system so hope you enjoy our

11
00:00:22,560 --> 00:00:24,160
presentation

12
00:00:24,160 --> 00:00:25,680
uh who are we

13
00:00:25,680 --> 00:00:27,279
my name is pablo artusso and today with

14
00:00:27,279 --> 00:00:29,279
ignacio photo we both work as security

15
00:00:29,279 --> 00:00:30,800
researchers at the anapsy security

16
00:00:30,800 --> 00:00:33,760
research labs we're both from argentina

17
00:00:33,760 --> 00:00:35,840
uh and yes we enjoy our day today

18
00:00:35,840 --> 00:00:38,320
basically doing vulnerability research

19
00:00:38,320 --> 00:00:40,000
penetration tests

20
00:00:40,000 --> 00:00:41,600
from time to time

21
00:00:41,600 --> 00:00:43,760
and at the bottom of the screen you will

22
00:00:43,760 --> 00:00:46,800
find a link to our github or team github

23
00:00:46,800 --> 00:00:48,879
where we are gonna publish we we are

24
00:00:48,879 --> 00:00:50,800
gonna be publishing our latest

25
00:00:50,800 --> 00:00:53,039
advisories so if you are curious about

26
00:00:53,039 --> 00:00:54,800
them just

27
00:00:54,800 --> 00:00:56,800
i recommend you go there

28
00:00:56,800 --> 00:00:58,559
this is our agenda for today first we're

29
00:00:58,559 --> 00:01:00,000
going to start with an introduction to

30
00:01:00,000 --> 00:01:02,640
acp world they will go in deeply details

31
00:01:02,640 --> 00:01:04,080
about the different vulnerabilities that

32
00:01:04,080 --> 00:01:05,600
we found last year

33
00:01:05,600 --> 00:01:07,920
uh we have a special chapter talking

34
00:01:07,920 --> 00:01:09,520
about threatening delicious campaign

35
00:01:09,520 --> 00:01:11,280
that we were part of

36
00:01:11,280 --> 00:01:12,640
last year and is really really

37
00:01:12,640 --> 00:01:16,000
interesting and finally some conclusions

38
00:01:16,000 --> 00:01:18,080
so let's start with introduction

39
00:01:18,080 --> 00:01:20,560
why sap why we keep insisting on oacp

40
00:01:20,560 --> 00:01:21,680
security

41
00:01:21,680 --> 00:01:24,560
well acp is one of the largest companies

42
00:01:24,560 --> 00:01:28,240
in the world and the solutions that sap

43
00:01:28,240 --> 00:01:30,640
develop basically are business solutions

44
00:01:30,640 --> 00:01:32,799
are being used by the most

45
00:01:32,799 --> 00:01:35,040
largest companies

46
00:01:35,040 --> 00:01:36,799
in the world so if you go to the fortune

47
00:01:36,799 --> 00:01:39,040
500 oil and gas for example companies

48
00:01:39,040 --> 00:01:40,720
all of them are using sap for the daily

49
00:01:40,720 --> 00:01:41,840
business

50
00:01:41,840 --> 00:01:44,720
acp manages resource financial resources

51
00:01:44,720 --> 00:01:46,479
human resources information stock

52
00:01:46,479 --> 00:01:49,040
resources um

53
00:01:49,040 --> 00:01:51,680
what else business processes so a lot of

54
00:01:51,680 --> 00:01:52,799
different

55
00:01:52,799 --> 00:01:54,479
important and critical

56
00:01:54,479 --> 00:01:56,799
information of a company related to the

57
00:01:56,799 --> 00:01:59,280
business goes through an sap system so

58
00:01:59,280 --> 00:02:02,240
that's why we believe that acp system

59
00:02:02,240 --> 00:02:04,159
should uh

60
00:02:04,159 --> 00:02:05,200
take

61
00:02:05,200 --> 00:02:07,520
should be taken more seriously when it

62
00:02:07,520 --> 00:02:10,479
comes to security

63
00:02:10,479 --> 00:02:12,239
um

64
00:02:12,239 --> 00:02:14,480
today as i already told you we are going

65
00:02:14,480 --> 00:02:17,840
to speak particularly about a layer

66
00:02:17,840 --> 00:02:19,920
that is part of a hundreds of different

67
00:02:19,920 --> 00:02:21,040
solutions

68
00:02:21,040 --> 00:02:23,360
of sap which is called the sap netweaver

69
00:02:23,360 --> 00:02:24,319
layer

70
00:02:24,319 --> 00:02:28,000
this layer is a base layer for

71
00:02:28,000 --> 00:02:29,840
a lot of different solutions and this

72
00:02:29,840 --> 00:02:31,920
means that a lot of sap solutions are

73
00:02:31,920 --> 00:02:34,239
built on top of this layer right so they

74
00:02:34,239 --> 00:02:36,319
share this layer in particular the

75
00:02:36,319 --> 00:02:38,160
subnet wheel layer could be found in two

76
00:02:38,160 --> 00:02:39,840
different ways

77
00:02:39,840 --> 00:02:42,080
developed in java or developed in app

78
00:02:42,080 --> 00:02:43,680
today we're going to be focusing

79
00:02:43,680 --> 00:02:47,040
specifically in the java network layer

80
00:02:47,040 --> 00:02:49,200
right and here for example we have a

81
00:02:49,200 --> 00:02:51,200
very well known solutions of sap like

82
00:02:51,200 --> 00:02:52,959
the solution manager the landscape

83
00:02:52,959 --> 00:02:54,080
manager

84
00:02:54,080 --> 00:02:56,720
the enterprise portal

85
00:02:56,720 --> 00:02:58,879
these are some of the solutions that are

86
00:02:58,879 --> 00:03:03,720
based on the subnet revert java layer

87
00:03:04,000 --> 00:03:05,920
from an architecture point of view this

88
00:03:05,920 --> 00:03:08,239
is how an application server a java

89
00:03:08,239 --> 00:03:11,200
application server looks like right

90
00:03:11,200 --> 00:03:14,560
uh we can see there that

91
00:03:14,560 --> 00:03:17,040
we have two different type of instances

92
00:03:17,040 --> 00:03:18,879
within java we have what is called the

93
00:03:18,879 --> 00:03:21,040
java instance and the central instance

94
00:03:21,040 --> 00:03:21,760
right

95
00:03:21,760 --> 00:03:23,360
the central instance is unique per

96
00:03:23,360 --> 00:03:25,440
system so every system we have only one

97
00:03:25,440 --> 00:03:26,720
central distance

98
00:03:26,720 --> 00:03:29,200
and we have a particular processes

99
00:03:29,200 --> 00:03:31,760
running in that central distance and

100
00:03:31,760 --> 00:03:33,760
besides that we have multiple java

101
00:03:33,760 --> 00:03:35,920
instances as many as you want right

102
00:03:35,920 --> 00:03:38,560
inside each of the java instances we

103
00:03:38,560 --> 00:03:40,560
will have some different processes in

104
00:03:40,560 --> 00:03:42,560
particular as you can see in the slide

105
00:03:42,560 --> 00:03:45,120
we have the icm which is basically the

106
00:03:45,120 --> 00:03:46,720
http server

107
00:03:46,720 --> 00:03:48,640
from um

108
00:03:48,640 --> 00:03:51,120
from this from this sorry from each java

109
00:03:51,120 --> 00:03:52,239
instance

110
00:03:52,239 --> 00:03:54,000
and this means that the way to

111
00:03:54,000 --> 00:03:56,239
communicate to these solutions or to

112
00:03:56,239 --> 00:03:58,720
these uh systems basically is through

113
00:03:58,720 --> 00:04:00,799
the http protocol which is really well

114
00:04:00,799 --> 00:04:02,879
known protocol on the other side if we

115
00:04:02,879 --> 00:04:05,120
were discussing out avap application

116
00:04:05,120 --> 00:04:07,120
servers we are going to see

117
00:04:07,120 --> 00:04:09,040
different binary protocols and custom

118
00:04:09,040 --> 00:04:10,159
protocols which is a little bit

119
00:04:10,159 --> 00:04:13,200
different here in java

120
00:04:13,360 --> 00:04:15,200
uh besides the icm we have what is

121
00:04:15,200 --> 00:04:17,759
called the server process so within the

122
00:04:17,759 --> 00:04:19,759
java instance we have the i think that

123
00:04:19,759 --> 00:04:22,720
is the the the smallest unit of

124
00:04:22,720 --> 00:04:25,040
processing which is the server process

125
00:04:25,040 --> 00:04:27,199
each server process of the java system

126
00:04:27,199 --> 00:04:30,320
has its sound cluster manager as you can

127
00:04:30,320 --> 00:04:32,000
see there on the right

128
00:04:32,000 --> 00:04:33,840
so i just want to mention this because

129
00:04:33,840 --> 00:04:34,800
we're gonna

130
00:04:34,800 --> 00:04:39,120
go back to this in a couple of minutes

131
00:04:39,280 --> 00:04:41,120
another interesting

132
00:04:41,120 --> 00:04:43,840
feature or characteristic of the sap

133
00:04:43,840 --> 00:04:44,960
java

134
00:04:44,960 --> 00:04:47,360
systems is that they are usually exposed

135
00:04:47,360 --> 00:04:49,440
to the internet this means that

136
00:04:49,440 --> 00:04:52,080
sorry they are not usually exposed but

137
00:04:52,080 --> 00:04:54,000
if you grab all the systems that are

138
00:04:54,000 --> 00:04:55,840
exposed to the internet to the internet

139
00:04:55,840 --> 00:04:59,120
the acp systems most of them are sap

140
00:04:59,120 --> 00:05:01,840
java systems and basically from my point

141
00:05:01,840 --> 00:05:04,720
of view this is because they are

142
00:05:04,720 --> 00:05:06,960
http based so this means that they are

143
00:05:06,960 --> 00:05:08,000
easily

144
00:05:08,000 --> 00:05:10,000
being exposed but besides that there is

145
00:05:10,000 --> 00:05:12,560
a particular solution based on sap java

146
00:05:12,560 --> 00:05:14,479
netweaver which is called the enterprise

147
00:05:14,479 --> 00:05:17,280
portal the sap enterprise portal is

148
00:05:17,280 --> 00:05:19,919
basically one of the solutions that

149
00:05:19,919 --> 00:05:22,560
um was brilliant was developed by sap in

150
00:05:22,560 --> 00:05:24,320
order to be exposed to the internet and

151
00:05:24,320 --> 00:05:25,600
allow

152
00:05:25,600 --> 00:05:27,840
sorry allow external users to log into

153
00:05:27,840 --> 00:05:30,240
the system through the enterprise portal

154
00:05:30,240 --> 00:05:31,600
so we are gonna

155
00:05:31,600 --> 00:05:32,720
uh

156
00:05:32,720 --> 00:05:35,600
go back to this again in future chapters

157
00:05:35,600 --> 00:05:37,840
uh because this is a crucial and

158
00:05:37,840 --> 00:05:39,520
important information for the rest of

159
00:05:39,520 --> 00:05:42,240
the of the talk

160
00:05:42,960 --> 00:05:45,440
next chapter is about our findings 20 20

161
00:05:45,440 --> 00:05:46,560
20.

162
00:05:46,560 --> 00:05:49,440
so let's continue with the first of the

163
00:05:49,440 --> 00:05:51,919
lunaries that we have for today

164
00:05:51,919 --> 00:05:54,240
motivation so

165
00:05:54,240 --> 00:05:56,639
why we decided to start looking for this

166
00:05:56,639 --> 00:05:58,720
bug

167
00:05:58,720 --> 00:06:02,240
uh in the early 2020 on march 2020 um

168
00:06:02,240 --> 00:06:04,720
together with a friend ivan we

169
00:06:04,720 --> 00:06:06,800
discovered a bag that was really

170
00:06:06,800 --> 00:06:10,479
critical in the sub solution manager

171
00:06:10,479 --> 00:06:12,720
we finally combined this with another uh

172
00:06:12,720 --> 00:06:15,280
vulnerability and we delivered a talk in

173
00:06:15,280 --> 00:06:17,919
blackhat usa last year i really

174
00:06:17,919 --> 00:06:19,680
recommend it to you go there if you are

175
00:06:19,680 --> 00:06:20,960
interested in all these topics because

176
00:06:20,960 --> 00:06:22,960
we finally got root shells from every

177
00:06:22,960 --> 00:06:25,120
sap server that was part of the acp

178
00:06:25,120 --> 00:06:27,199
landscape so it's really interesting but

179
00:06:27,199 --> 00:06:29,039
besides that the important thing was

180
00:06:29,039 --> 00:06:30,800
that the there was a bug in a sub

181
00:06:30,800 --> 00:06:33,039
solution manager that was basically

182
00:06:33,039 --> 00:06:35,120
a web service exposed without

183
00:06:35,120 --> 00:06:36,880
authentication

184
00:06:36,880 --> 00:06:37,600
so

185
00:06:37,600 --> 00:06:39,120
after that we started asking to

186
00:06:39,120 --> 00:06:40,639
ourselves okay

187
00:06:40,639 --> 00:06:42,720
are there more web services exposed

188
00:06:42,720 --> 00:06:44,240
without authentication what about the

189
00:06:44,240 --> 00:06:45,919
web services that are exposed at the

190
00:06:45,919 --> 00:06:47,919
subnet we would layer because this one

191
00:06:47,919 --> 00:06:49,759
was specifically from the sub solution

192
00:06:49,759 --> 00:06:52,560
manager but the subnet layer also

193
00:06:52,560 --> 00:06:55,120
exposes web services

194
00:06:55,120 --> 00:06:56,080
so

195
00:06:56,080 --> 00:06:57,599
i start like

196
00:06:57,599 --> 00:07:00,080
creating a tool capable of at least all

197
00:07:00,080 --> 00:07:01,520
the web services

198
00:07:01,520 --> 00:07:04,479
decide if or designer check if they have

199
00:07:04,479 --> 00:07:07,199
they need or not authentication

200
00:07:07,199 --> 00:07:08,800
and of course this in an automatic way

201
00:07:08,800 --> 00:07:10,479
because it was a tool after a couple of

202
00:07:10,479 --> 00:07:13,520
weeks or months is i finally got the run

203
00:07:13,520 --> 00:07:15,360
in the tool and

204
00:07:15,360 --> 00:07:16,880
once i run it

205
00:07:16,880 --> 00:07:19,360
uh it gave me a lot of different web

206
00:07:19,360 --> 00:07:20,720
services that were exposed without

207
00:07:20,720 --> 00:07:21,919
authentication

208
00:07:21,919 --> 00:07:23,919
and among all of them there was one that

209
00:07:23,919 --> 00:07:26,400
was called ctc web service si which is

210
00:07:26,400 --> 00:07:28,319
our main uh

211
00:07:28,319 --> 00:07:32,319
topic for for for this analysis

212
00:07:32,319 --> 00:07:35,280
so this endpoint is a soap endpoint so

213
00:07:35,280 --> 00:07:37,039
for those who are not aware about soap

214
00:07:37,039 --> 00:07:39,199
it's just a really interesting protocol

215
00:07:39,199 --> 00:07:41,599
based on xml that allow uh basically

216
00:07:41,599 --> 00:07:44,879
executing co accessory executing methods

217
00:07:44,879 --> 00:07:46,879
remotely

218
00:07:46,879 --> 00:07:48,639
and if you can see in the middle of the

219
00:07:48,639 --> 00:07:51,280
screen the first image we have all the

220
00:07:51,280 --> 00:07:53,120
methods that are available to be

221
00:07:53,120 --> 00:07:55,919
executed or to be used uh

222
00:07:55,919 --> 00:07:58,560
through exit through calling this

223
00:07:58,560 --> 00:08:00,240
soap endpoint

224
00:08:00,240 --> 00:08:01,759
and among all of them there is one that

225
00:08:01,759 --> 00:08:04,479
is called execute which seems to be

226
00:08:04,479 --> 00:08:06,720
interesting on the right side of the of

227
00:08:06,720 --> 00:08:08,240
the slide you have

228
00:08:08,240 --> 00:08:09,280
the

229
00:08:09,280 --> 00:08:11,360
let's say the body of the of the packet

230
00:08:11,360 --> 00:08:13,120
that you should send in order to execute

231
00:08:13,120 --> 00:08:14,080
that

232
00:08:14,080 --> 00:08:16,160
that method and

233
00:08:16,160 --> 00:08:18,080
also you have all the

234
00:08:18,080 --> 00:08:19,680
parameters that they are needed the

235
00:08:19,680 --> 00:08:22,240
identifier context messages and resource

236
00:08:22,240 --> 00:08:25,039
so at this point i didn't know how to

237
00:08:25,039 --> 00:08:26,319
use this

238
00:08:26,319 --> 00:08:29,199
but what i did know was that is all this

239
00:08:29,199 --> 00:08:31,360
is developing in java and

240
00:08:31,360 --> 00:08:34,000
java is easy to decompile right

241
00:08:34,000 --> 00:08:35,839
so i decompile the code and initiate

242
00:08:35,839 --> 00:08:36,958
from a

243
00:08:36,958 --> 00:08:40,559
more box sorry more black box um let's

244
00:08:40,559 --> 00:08:43,440
say strategy to a more white box one

245
00:08:43,440 --> 00:08:45,519
and i found implementation of this web

246
00:08:45,519 --> 00:08:46,480
service

247
00:08:46,480 --> 00:08:48,000
in particular you can see there the

248
00:08:48,000 --> 00:08:50,480
execute function having receiving the

249
00:08:50,480 --> 00:08:51,920
three parameters that we were talking

250
00:08:51,920 --> 00:08:55,360
about uh before and what we have there

251
00:08:55,360 --> 00:08:59,200
are the data types of each of these um

252
00:08:59,200 --> 00:09:01,120
parameters so this is this was really

253
00:09:01,120 --> 00:09:03,120
interesting and really helpful because i

254
00:09:03,120 --> 00:09:04,560
started looking for that data types in

255
00:09:04,560 --> 00:09:06,480
order to find the definition of them but

256
00:09:06,480 --> 00:09:08,399
instead i found

257
00:09:08,399 --> 00:09:10,880
um a piece of snippet of a snippet of

258
00:09:10,880 --> 00:09:13,200
code that was actually

259
00:09:13,200 --> 00:09:16,560
creating a resource identifier

260
00:09:16,560 --> 00:09:18,720
and it had all the different parameters

261
00:09:18,720 --> 00:09:21,040
that this resource identifier

262
00:09:21,040 --> 00:09:23,040
constructor received

263
00:09:23,040 --> 00:09:24,080
so

264
00:09:24,080 --> 00:09:26,160
this was really useful because i could

265
00:09:26,160 --> 00:09:29,279
just grab these three parameters and use

266
00:09:29,279 --> 00:09:32,399
them in order to call uh through the

267
00:09:32,399 --> 00:09:35,040
through a stop message uh the execute

268
00:09:35,040 --> 00:09:36,399
function right

269
00:09:36,399 --> 00:09:38,720
so you can see there the body of the of

270
00:09:38,720 --> 00:09:41,040
the packet of the

271
00:09:41,040 --> 00:09:42,959
of the soap message that i had to send

272
00:09:42,959 --> 00:09:45,600
using all the three um parameters that i

273
00:09:45,600 --> 00:09:47,440
grabbed from the snippet of code and

274
00:09:47,440 --> 00:09:49,680
once i send that

275
00:09:49,680 --> 00:09:52,640
i receive an idea as an answer

276
00:09:52,640 --> 00:09:54,160
so i didn't know

277
00:09:54,160 --> 00:09:56,560
what this idea was but

278
00:09:56,560 --> 00:09:58,160
after playing a little bit with other

279
00:09:58,160 --> 00:10:00,880
methods like events available or read

280
00:10:00,880 --> 00:10:03,279
next event i saw that they were asking

281
00:10:03,279 --> 00:10:04,720
for a parameter that was called session

282
00:10:04,720 --> 00:10:07,360
id so i did a

283
00:10:07,360 --> 00:10:09,760
i think i did some synapses synapses and

284
00:10:09,760 --> 00:10:12,560
i realized that maybe this id was

285
00:10:12,560 --> 00:10:15,120
exactly this that session id that these

286
00:10:15,120 --> 00:10:18,000
methods are asking for

287
00:10:18,000 --> 00:10:20,079
so i started looking for that number

288
00:10:20,079 --> 00:10:22,160
that particular number in the os of the

289
00:10:22,160 --> 00:10:24,959
sap system and i found a log

290
00:10:24,959 --> 00:10:27,200
that was talking about that about that

291
00:10:27,200 --> 00:10:30,160
specific session id and when i

292
00:10:30,160 --> 00:10:33,200
realized that log was uh related to the

293
00:10:33,200 --> 00:10:35,519
configuration with our application the

294
00:10:35,519 --> 00:10:36,720
confirmation with an application i

295
00:10:36,720 --> 00:10:38,959
didn't know what that application was i

296
00:10:38,959 --> 00:10:40,480
knew that was part of the network

297
00:10:40,480 --> 00:10:43,279
administrator panel so i entered to that

298
00:10:43,279 --> 00:10:45,120
as you can see in the images

299
00:10:45,120 --> 00:10:48,000
and within the running configuration

300
00:10:48,000 --> 00:10:50,800
task section i found

301
00:10:50,800 --> 00:10:51,600
a

302
00:10:51,600 --> 00:10:54,160
seems to be a task a configuration task

303
00:10:54,160 --> 00:10:56,240
that was running over there and had the

304
00:10:56,240 --> 00:10:58,079
session exactly the session the same

305
00:10:58,079 --> 00:10:59,440
session i did the right if she was an

306
00:10:59,440 --> 00:11:01,200
answer

307
00:11:01,200 --> 00:11:02,000
so

308
00:11:02,000 --> 00:11:05,040
just just to recap here um i didn't know

309
00:11:05,040 --> 00:11:06,560
what the confirmation wisdom was so i

310
00:11:06,560 --> 00:11:08,640
look for it and i have a quote here from

311
00:11:08,640 --> 00:11:10,240
sap documentation which the most

312
00:11:10,240 --> 00:11:12,640
important thing is that it says it makes

313
00:11:12,640 --> 00:11:14,640
the technical settings in an automatic

314
00:11:14,640 --> 00:11:16,399
way

315
00:11:16,399 --> 00:11:19,040
sorry so it seems that

316
00:11:19,040 --> 00:11:20,240
um

317
00:11:20,240 --> 00:11:22,320
it does really interesting things right

318
00:11:22,320 --> 00:11:24,800
like the technical settings and also in

319
00:11:24,800 --> 00:11:26,240
an automatic way so it seems like

320
00:11:26,240 --> 00:11:27,760
somehow related to scripting or

321
00:11:27,760 --> 00:11:29,920
something else

322
00:11:29,920 --> 00:11:31,279
some part

323
00:11:31,279 --> 00:11:32,720
if we go back to the image we can see

324
00:11:32,720 --> 00:11:34,320
that there is a task name over there

325
00:11:34,320 --> 00:11:36,320
right that is the create users so

326
00:11:36,320 --> 00:11:39,440
somehow it seems there are more tasks

327
00:11:39,440 --> 00:11:41,680
more possible configuration tasks and

328
00:11:41,680 --> 00:11:43,519
some part of our

329
00:11:43,519 --> 00:11:46,079
message that we send through soap

330
00:11:46,079 --> 00:11:47,839
decided that we have to use that

331
00:11:47,839 --> 00:11:50,560
configuration task and if you see if you

332
00:11:50,560 --> 00:11:52,320
pay attention to the parameters you can

333
00:11:52,320 --> 00:11:54,160
quickly see that most probably the good

334
00:11:54,160 --> 00:11:57,680
candidate it was the last parameter

335
00:11:57,680 --> 00:11:59,519
also that parameter seems to be a path

336
00:11:59,519 --> 00:12:01,200
right so i went to the operating system

337
00:12:01,200 --> 00:12:03,760
and tried to look for that possible file

338
00:12:03,760 --> 00:12:05,680
and i found it it was there it was

339
00:12:05,680 --> 00:12:07,920
exactly in the same path that

340
00:12:07,920 --> 00:12:11,839
that that parameter uh said

341
00:12:11,839 --> 00:12:13,920
so it it was really interesting because

342
00:12:13,920 --> 00:12:15,839
okay now i have the file in order to

343
00:12:15,839 --> 00:12:18,000
understand what a ziprock is and what uh

344
00:12:18,000 --> 00:12:20,160
what basically that file is

345
00:12:20,160 --> 00:12:22,320
but besides that i look for that

346
00:12:22,320 --> 00:12:24,959
extension cproc and i realized and i

347
00:12:24,959 --> 00:12:26,959
found that it was more than 500 c

348
00:12:26,959 --> 00:12:28,240
products so at this point i didn't know

349
00:12:28,240 --> 00:12:30,320
what a ziprock is but i know there are a

350
00:12:30,320 --> 00:12:33,040
lot of them but seems that

351
00:12:33,040 --> 00:12:36,000
dc proc the spc user management is the

352
00:12:36,000 --> 00:12:38,320
one that basically decided what

353
00:12:38,320 --> 00:12:41,440
configuration task to run

354
00:12:41,440 --> 00:12:44,639
so i opened that file and i found this

355
00:12:44,639 --> 00:12:45,760
basic

356
00:12:45,760 --> 00:12:47,760
of course as you can see it seems to be

357
00:12:47,760 --> 00:12:48,720
something

358
00:12:48,720 --> 00:12:50,639
xml based here we can find the

359
00:12:50,639 --> 00:12:52,240
description that is the create user the

360
00:12:52,240 --> 00:12:54,320
thing that we appear in the image we can

361
00:12:54,320 --> 00:12:55,760
see some tags like for each inbox

362
00:12:55,760 --> 00:12:57,440
service input that makes the idea that

363
00:12:57,440 --> 00:12:59,680
is something related to scripting

364
00:12:59,680 --> 00:13:02,240
we i found also these which is a message

365
00:13:02,240 --> 00:13:03,839
something that will be

366
00:13:03,839 --> 00:13:07,360
helpful uh later on um

367
00:13:07,360 --> 00:13:09,120
that is called user delays and if you

368
00:13:09,120 --> 00:13:11,040
can see in the first part of the of the

369
00:13:11,040 --> 00:13:13,440
file uh we have something commented we

370
00:13:13,440 --> 00:13:15,920
have user details and some information

371
00:13:15,920 --> 00:13:17,760
that i don't know what it what that

372
00:13:17,760 --> 00:13:20,320
means and finally we have within the

373
00:13:20,320 --> 00:13:21,920
expression tag

374
00:13:21,920 --> 00:13:23,440
we found like

375
00:13:23,440 --> 00:13:26,480
some dash user dash java or raver

376
00:13:26,480 --> 00:13:28,480
user dash username

377
00:13:28,480 --> 00:13:30,959
and if we can see here inside the user

378
00:13:30,959 --> 00:13:34,480
details tag we have the same four tags

379
00:13:34,480 --> 00:13:36,560
so it seems like somehow this is

380
00:13:36,560 --> 00:13:39,600
accessing the data which is over here

381
00:13:39,600 --> 00:13:41,360
so what we can think is like the user

382
00:13:41,360 --> 00:13:43,519
data is like kind of the parameters that

383
00:13:43,519 --> 00:13:46,720
we have to put here or to provide to

384
00:13:46,720 --> 00:13:50,240
this kind of scripts and here

385
00:13:50,240 --> 00:13:53,120
in the pink uh squares they will be

386
00:13:53,120 --> 00:13:55,440
grabbing that values from the parameters

387
00:13:55,440 --> 00:13:57,839
these are just an ideas

388
00:13:57,839 --> 00:14:00,000
so what we know about cprox zipworks are

389
00:14:00,000 --> 00:14:01,600
xml days

390
00:14:01,600 --> 00:14:03,360
there seem to be scripts and there's

391
00:14:03,360 --> 00:14:06,560
interesting parameters how well

392
00:14:06,560 --> 00:14:07,839
if you remember the symbol of the

393
00:14:07,839 --> 00:14:09,920
snippet of code that i already told you

394
00:14:09,920 --> 00:14:13,040
besides that behind that sorry um

395
00:14:13,040 --> 00:14:15,839
the the code also was creating a ctc

396
00:14:15,839 --> 00:14:17,920
context message

397
00:14:17,920 --> 00:14:19,519
with the

398
00:14:19,519 --> 00:14:21,839
with this basically with this string

399
00:14:21,839 --> 00:14:24,000
that is the same string that we were

400
00:14:24,000 --> 00:14:26,240
talking about before this uterus the

401
00:14:26,240 --> 00:14:28,959
user details

402
00:14:28,959 --> 00:14:29,760
and

403
00:14:29,760 --> 00:14:31,600
all this piece of information that was

404
00:14:31,600 --> 00:14:35,279
part of the commented section

405
00:14:35,279 --> 00:14:38,079
so this was the way to provide connect

406
00:14:38,079 --> 00:14:40,880
to provide um parameters to this script

407
00:14:40,880 --> 00:14:42,399
and here as you can see they were

408
00:14:42,399 --> 00:14:44,240
executing with the identifier that we

409
00:14:44,240 --> 00:14:46,000
had before and the input with this

410
00:14:46,000 --> 00:14:48,800
ascetic sorry a ctc context message

411
00:14:48,800 --> 00:14:50,880
um data type

412
00:14:50,880 --> 00:14:53,760
so now we have all things to test this

413
00:14:53,760 --> 00:14:56,560
through the soap endpoints however i had

414
00:14:56,560 --> 00:14:59,440
some issues there uh trying to to make

415
00:14:59,440 --> 00:15:01,680
that work so what happened finally was

416
00:15:01,680 --> 00:15:03,680
that i shift to a more simpler c product

417
00:15:03,680 --> 00:15:05,600
i found another one that was much more

418
00:15:05,600 --> 00:15:08,880
simpler uh it has a message that is

419
00:15:08,880 --> 00:15:11,199
called delete user here we can see that

420
00:15:11,199 --> 00:15:14,000
we have access that this um zip is

421
00:15:14,000 --> 00:15:15,839
accessing the root username

422
00:15:15,839 --> 00:15:17,519
um

423
00:15:17,519 --> 00:15:19,920
tags within the parameters

424
00:15:19,920 --> 00:15:22,560
and it seems that this cproc is deleting

425
00:15:22,560 --> 00:15:26,240
a user right just providing this message

426
00:15:26,240 --> 00:15:28,480
so now we have the knowledge on how

427
00:15:28,480 --> 00:15:31,279
ziprox works at least basic knowledge

428
00:15:31,279 --> 00:15:32,800
and then we have the c product so let's

429
00:15:32,800 --> 00:15:34,079
try it

430
00:15:34,079 --> 00:15:36,240
so i craft uh first of all i create a

431
00:15:36,240 --> 00:15:37,680
new user in the system that was called

432
00:15:37,680 --> 00:15:39,600
this recon user and then i craft the

433
00:15:39,600 --> 00:15:41,279
soap request that is that we have to

434
00:15:41,279 --> 00:15:42,079
send

435
00:15:42,079 --> 00:15:44,240
with the corresponding of course um

436
00:15:44,240 --> 00:15:46,560
parameters here we are choosing the c

437
00:15:46,560 --> 00:15:47,680
proc

438
00:15:47,680 --> 00:15:49,680
task that we want to use

439
00:15:49,680 --> 00:15:51,199
the delete user is the name of the

440
00:15:51,199 --> 00:15:54,160
context message and the content of that

441
00:15:54,160 --> 00:15:56,079
message right that remember it has to be

442
00:15:56,079 --> 00:16:00,880
b6 uh basic c4 encoded we got an id

443
00:16:00,880 --> 00:16:02,880
and this id says that it does well it

444
00:16:02,880 --> 00:16:04,720
has almost the same amount as the other

445
00:16:04,720 --> 00:16:06,079
one it

446
00:16:06,079 --> 00:16:09,519
finished successfully and when i went to

447
00:16:09,519 --> 00:16:11,519
the system to list all the users test

448
00:16:11,519 --> 00:16:14,800
recon user wasn't there anymore

449
00:16:14,800 --> 00:16:16,240
so what happened

450
00:16:16,240 --> 00:16:19,040
so specifically the script executed

451
00:16:19,040 --> 00:16:21,600
successfully and we deleted a user but

452
00:16:21,600 --> 00:16:23,759
in more general terms what we finally

453
00:16:23,759 --> 00:16:26,079
did was we were able to execute a

454
00:16:26,079 --> 00:16:28,399
configuration task without any kind of

455
00:16:28,399 --> 00:16:30,639
authentication and if you remember we

456
00:16:30,639 --> 00:16:34,720
have 500 more configuration tasks right

457
00:16:34,720 --> 00:16:36,880
so at this point i say okay now it's

458
00:16:36,880 --> 00:16:39,279
time to look for the most critical c

459
00:16:39,279 --> 00:16:41,839
proc right

460
00:16:43,440 --> 00:16:45,759
so in order to do that i had to learn a

461
00:16:45,759 --> 00:16:47,680
lot more about c products i had to go

462
00:16:47,680 --> 00:16:50,800
more deeply in details about all the how

463
00:16:50,800 --> 00:16:53,360
they are build what that means i mean

464
00:16:53,360 --> 00:16:55,920
the nature of steps i mean each zip is

465
00:16:55,920 --> 00:16:59,120
based on steps they can have 20 50 50

466
00:16:59,120 --> 00:17:00,959
steps um

467
00:17:00,959 --> 00:17:02,000
they

468
00:17:02,000 --> 00:17:05,599
clearly are our scripts you can uh skip

469
00:17:05,599 --> 00:17:07,679
some steps if they are not interesting

470
00:17:07,679 --> 00:17:09,520
for you

471
00:17:09,520 --> 00:17:11,119
and also in order to talk and to

472
00:17:11,119 --> 00:17:13,119
understand how the process is going

473
00:17:13,119 --> 00:17:15,599
basically it's working you can you can

474
00:17:15,599 --> 00:17:16,559
there is a

475
00:17:16,559 --> 00:17:19,280
a lot of things like um not a lot of

476
00:17:19,280 --> 00:17:22,480
framework uh event driven that i had to

477
00:17:22,480 --> 00:17:24,000
learn how to read an event how to

478
00:17:24,000 --> 00:17:25,679
provide a new event so

479
00:17:25,679 --> 00:17:27,520
after a couple of analysis after a

480
00:17:27,520 --> 00:17:29,679
couple of days doing some analysis i

481
00:17:29,679 --> 00:17:31,360
found one of the

482
00:17:31,360 --> 00:17:33,520
maybe one of the most in critical c

483
00:17:33,520 --> 00:17:35,360
perks that at least from my point of

484
00:17:35,360 --> 00:17:36,640
view

485
00:17:36,640 --> 00:17:39,120
it was really really interesting it had

486
00:17:39,120 --> 00:17:41,600
more than 20 steps but within the first

487
00:17:41,600 --> 00:17:44,160
two steps it did all the critical things

488
00:17:44,160 --> 00:17:46,320
that we needed

489
00:17:46,320 --> 00:17:48,240
this was the code

490
00:17:48,240 --> 00:17:50,320
of the cproc the name was create java

491
00:17:50,320 --> 00:17:51,280
users

492
00:17:51,280 --> 00:17:53,919
in the first step you will create a user

493
00:17:53,919 --> 00:17:55,679
with a password that you provided and of

494
00:17:55,679 --> 00:17:57,679
course the username and in the second

495
00:17:57,679 --> 00:17:58,840
step you

496
00:17:58,840 --> 00:18:03,120
will assign a role to that user and

497
00:18:03,120 --> 00:18:04,720
which role well the role that you

498
00:18:04,720 --> 00:18:06,720
provide also as parameter

499
00:18:06,720 --> 00:18:08,880
here is the template of the message that

500
00:18:08,880 --> 00:18:10,640
we can send the user the password and

501
00:18:10,640 --> 00:18:13,440
the role that we want to that user

502
00:18:13,440 --> 00:18:16,080
so stop talking please

503
00:18:16,080 --> 00:18:18,880
go directly to the demo so here we are

504
00:18:18,880 --> 00:18:20,080
gonna see

505
00:18:20,080 --> 00:18:21,600
um

506
00:18:21,600 --> 00:18:23,760
a demo of this first of all the attacker

507
00:18:23,760 --> 00:18:25,760
will try to log in to the system with

508
00:18:25,760 --> 00:18:28,960
the texas admin user this user doesn't

509
00:18:28,960 --> 00:18:31,360
exist yet so it will actually it would

510
00:18:31,360 --> 00:18:32,240
fail

511
00:18:32,240 --> 00:18:33,520
perfect

512
00:18:33,520 --> 00:18:35,200
um so now

513
00:18:35,200 --> 00:18:37,919
what is the attacker gonna do is uh

514
00:18:37,919 --> 00:18:39,840
basically execute a script that is

515
00:18:39,840 --> 00:18:42,000
exploiting this vulnerability

516
00:18:42,000 --> 00:18:43,440
called recon

517
00:18:43,440 --> 00:18:45,440
has to provide of course the host the

518
00:18:45,440 --> 00:18:49,200
port the username and the password of

519
00:18:49,200 --> 00:18:50,960
the user that it was that he had that he

520
00:18:50,960 --> 00:18:53,360
wants sorry to create and

521
00:18:53,360 --> 00:18:55,360
the administrator role that is one that

522
00:18:55,360 --> 00:18:57,360
is the role that is going to be assigned

523
00:18:57,360 --> 00:18:59,039
it is basically hard coded inside the

524
00:18:59,039 --> 00:19:00,400
script

525
00:19:00,400 --> 00:19:02,400
so as you can see here is it executing

526
00:19:02,400 --> 00:19:05,039
the c pro the create java users and we

527
00:19:05,039 --> 00:19:07,360
only need the first two steps then we

528
00:19:07,360 --> 00:19:09,360
can cancel the execution because we

529
00:19:09,360 --> 00:19:11,679
don't need anything else right

530
00:19:11,679 --> 00:19:14,240
so now we are going to try to login with

531
00:19:14,240 --> 00:19:16,160
the assist with that user again and this

532
00:19:16,160 --> 00:19:18,400
time it works because the user was

533
00:19:18,400 --> 00:19:19,600
created

534
00:19:19,600 --> 00:19:22,640
uh now just uh just you to to

535
00:19:22,640 --> 00:19:25,840
to be sure if we list the user roles we

536
00:19:25,840 --> 00:19:26,960
are going to see that it has

537
00:19:26,960 --> 00:19:28,559
administrator

538
00:19:28,559 --> 00:19:31,039
assigned

539
00:19:32,640 --> 00:19:34,240
so

540
00:19:34,240 --> 00:19:35,679
what happened here

541
00:19:35,679 --> 00:19:38,559
basically an unauthenticated attacker

542
00:19:38,559 --> 00:19:40,960
with access just to the http port of the

543
00:19:40,960 --> 00:19:42,880
sap java system

544
00:19:42,880 --> 00:19:45,039
was able to

545
00:19:45,039 --> 00:19:46,000
grab

546
00:19:46,000 --> 00:19:48,799
an administrator user and potentially

547
00:19:48,799 --> 00:19:52,160
fully compromise the entire sap system

548
00:19:52,160 --> 00:19:54,240
so let's talk about the protections and

549
00:19:54,240 --> 00:19:55,520
in particularly when we talk about

550
00:19:55,520 --> 00:19:56,559
patching

551
00:19:56,559 --> 00:19:58,480
sap releases the patch

552
00:19:58,480 --> 00:20:01,840
within the first month after we um we

553
00:20:01,840 --> 00:20:05,280
submit the the vulnerability right so

554
00:20:05,280 --> 00:20:07,520
this talks really good about the appears

555
00:20:07,520 --> 00:20:10,559
art psrt team because

556
00:20:10,559 --> 00:20:12,799
i'm not sure if you all are aware about

557
00:20:12,799 --> 00:20:15,760
this but sap releases security patches

558
00:20:15,760 --> 00:20:18,400
for their solutions every second tuesday

559
00:20:18,400 --> 00:20:22,080
of every month and

560
00:20:22,240 --> 00:20:24,159
and yes they they released the patch

561
00:20:24,159 --> 00:20:26,000
within the first month so in the next

562
00:20:26,000 --> 00:20:28,400
possible patch day

563
00:20:28,400 --> 00:20:31,120
the the patch was already out so this

564
00:20:31,120 --> 00:20:33,280
was really quickly and well it talks

565
00:20:33,280 --> 00:20:36,240
really good about the the ps rt team and

566
00:20:36,240 --> 00:20:37,520
of course all the developers that are

567
00:20:37,520 --> 00:20:38,480
involved

568
00:20:38,480 --> 00:20:41,120
um but besides the patch sap also

569
00:20:41,120 --> 00:20:42,640
released three different

570
00:20:42,640 --> 00:20:45,360
notes talking about x-informational

571
00:20:45,360 --> 00:20:47,919
recon explaining to their customers how

572
00:20:47,919 --> 00:20:49,360
this

573
00:20:49,360 --> 00:20:53,039
vulnerability worked where it was an faq

574
00:20:53,039 --> 00:20:55,679
talking about how to install the patch

575
00:20:55,679 --> 00:20:57,600
explaining again uh the different

576
00:20:57,600 --> 00:20:59,360
questions are the most simple questions

577
00:20:59,360 --> 00:21:01,120
that could arise

578
00:21:01,120 --> 00:21:03,360
and a third note that talk about

579
00:21:03,360 --> 00:21:07,360
workarounds sap knows that sometimes um

580
00:21:07,360 --> 00:21:08,480
it's

581
00:21:08,480 --> 00:21:12,080
not easy or not so quickly to implement

582
00:21:12,080 --> 00:21:13,280
patches

583
00:21:13,280 --> 00:21:15,919
in sap systems so they also release a

584
00:21:15,919 --> 00:21:18,159
workaround that is busy how to disable

585
00:21:18,159 --> 00:21:19,760
the application in case you are not

586
00:21:19,760 --> 00:21:23,679
using not using it so yeah for sap uh

587
00:21:23,679 --> 00:21:26,000
this was really important and they

588
00:21:26,000 --> 00:21:27,600
address it really well in terms of

589
00:21:27,600 --> 00:21:29,120
protections

590
00:21:29,120 --> 00:21:31,280
talking about extra protections besides

591
00:21:31,280 --> 00:21:34,559
the one provided by the vendor um

592
00:21:34,559 --> 00:21:37,360
also the community office north uh

593
00:21:37,360 --> 00:21:40,880
created a rules for that and the most

594
00:21:40,880 --> 00:21:44,559
well-known ips is on firewalls develop

595
00:21:44,559 --> 00:21:47,120
new rules to to address this this

596
00:21:47,120 --> 00:21:49,760
vulnerability from an apses

597
00:21:49,760 --> 00:21:52,240
we develop a free assessment tool that

598
00:21:52,240 --> 00:21:54,480
you have you can download it directly

599
00:21:54,480 --> 00:21:56,640
from our github or you can also use our

600
00:21:56,640 --> 00:22:00,400
cloud version from the from our web page

601
00:22:00,400 --> 00:22:02,880
in terms of publication

602
00:22:02,880 --> 00:22:05,039
well this attack was in some

603
00:22:05,039 --> 00:22:07,360
of the most important resources in terms

604
00:22:07,360 --> 00:22:09,760
of news like cdn and upgrading but the

605
00:22:09,760 --> 00:22:11,919
most interesting thing is that different

606
00:22:11,919 --> 00:22:14,159
countries different certs from different

607
00:22:14,159 --> 00:22:16,080
countries issued alerts

608
00:22:16,080 --> 00:22:18,080
about this topic and primarily because

609
00:22:18,080 --> 00:22:19,039
there

610
00:22:19,039 --> 00:22:21,280
there were a lot of companies

611
00:22:21,280 --> 00:22:24,400
within their their countries like that

612
00:22:24,400 --> 00:22:26,320
uses this

613
00:22:26,320 --> 00:22:28,559
software saps

614
00:22:28,559 --> 00:22:31,039
and in terms of public exploit well we

615
00:22:31,039 --> 00:22:31,840
have

616
00:22:31,840 --> 00:22:34,720
three of the most i mean these were the

617
00:22:34,720 --> 00:22:36,720
three most common

618
00:22:36,720 --> 00:22:38,640
uh tpeak i think it was the first one

619
00:22:38,640 --> 00:22:40,640
that releases the

620
00:22:40,640 --> 00:22:43,039
working exploit and sir stainer is a

621
00:22:43,039 --> 00:22:44,799
really well known 33 researcher that

622
00:22:44,799 --> 00:22:46,880
usually he developed

623
00:22:46,880 --> 00:22:48,720
metasploit modules so i think that

624
00:22:48,720 --> 00:22:51,360
within the first or second week

625
00:22:51,360 --> 00:22:53,200
they already had a fully functional

626
00:22:53,200 --> 00:22:55,039
working exploit within the metabolic

627
00:22:55,039 --> 00:22:57,280
framework

628
00:22:57,280 --> 00:23:00,480
and now i will let patel actuary ignacio

629
00:23:00,480 --> 00:23:04,000
continue with with the talk

630
00:23:06,880 --> 00:23:09,600
thanks paolo hi everyone i am ignacio

631
00:23:09,600 --> 00:23:11,120
and i'm really glad to be here today

632
00:23:11,120 --> 00:23:12,480
speaking about the cluster manager

633
00:23:12,480 --> 00:23:15,520
peer-to-peer communication research

634
00:23:15,520 --> 00:23:17,520
and the reason behind this research was

635
00:23:17,520 --> 00:23:19,840
first at all that an sap system is a

636
00:23:19,840 --> 00:23:21,440
software platform

637
00:23:21,440 --> 00:23:23,039
which means that it's made of several

638
00:23:23,039 --> 00:23:24,799
components which some of them highly

639
00:23:24,799 --> 00:23:26,400
couple each other and exchanging

640
00:23:26,400 --> 00:23:29,360
messages or opening ports for external

641
00:23:29,360 --> 00:23:31,280
connections for example

642
00:23:31,280 --> 00:23:34,000
but also as pablo said before the sap

643
00:23:34,000 --> 00:23:36,559
java system are more frequently exposed

644
00:23:36,559 --> 00:23:38,559
on internet becoming a really

645
00:23:38,559 --> 00:23:41,919
interesting product to analyze

646
00:23:41,919 --> 00:23:44,080
so we decided to see what is open by

647
00:23:44,080 --> 00:23:46,480
default

648
00:23:46,960 --> 00:23:48,960
with a list of services that

649
00:23:48,960 --> 00:23:50,960
has open ports and waiting for

650
00:23:50,960 --> 00:23:53,440
connections in all interfaces

651
00:23:53,440 --> 00:23:55,200
and filtering out those that we already

652
00:23:55,200 --> 00:23:56,799
know what it is looking for the fresh

653
00:23:56,799 --> 00:23:57,760
target

654
00:23:57,760 --> 00:23:59,039
we establish a connection with the

655
00:23:59,039 --> 00:24:01,520
remaining ones and one of them gives us

656
00:24:01,520 --> 00:24:05,760
this sap cluster manager banner

657
00:24:05,760 --> 00:24:07,440
for us was quite new

658
00:24:07,440 --> 00:24:09,120
and not a lot of documentation were

659
00:24:09,120 --> 00:24:12,159
available at that time

660
00:24:12,159 --> 00:24:14,400
so we decided to interact a bit more

661
00:24:14,400 --> 00:24:16,000
with this service

662
00:24:16,000 --> 00:24:18,799
playing with different payload size and

663
00:24:18,799 --> 00:24:21,679
also sending back for example

664
00:24:21,679 --> 00:24:22,799
the

665
00:24:22,799 --> 00:24:25,279
the banner that we received when we

666
00:24:25,279 --> 00:24:26,799
started the connection

667
00:24:26,799 --> 00:24:29,679
and for this last case

668
00:24:29,679 --> 00:24:31,760
the behavior of the service was quite

669
00:24:31,760 --> 00:24:33,520
different

670
00:24:33,520 --> 00:24:35,840
it keeps waiting for more information

671
00:24:35,840 --> 00:24:38,959
after this banner

672
00:24:40,400 --> 00:24:42,720
checking the processes calls we realized

673
00:24:42,720 --> 00:24:45,760
that what it seems to be a two-step

674
00:24:45,760 --> 00:24:48,480
communication because first the service

675
00:24:48,480 --> 00:24:50,960
try to read up to 47 bytes which is the

676
00:24:50,960 --> 00:24:53,919
same length of the banner that we get

677
00:24:53,919 --> 00:24:58,000
and after that more data is required

678
00:24:58,559 --> 00:25:01,279
also analyzing the logs reaction to our

679
00:25:01,279 --> 00:25:03,679
different payloads in the first case we

680
00:25:03,679 --> 00:25:06,400
have an exception when we sent a puree

681
00:25:06,400 --> 00:25:09,760
payload full of a payload and

682
00:25:09,760 --> 00:25:10,480
a

683
00:25:10,480 --> 00:25:13,039
handshake java class

684
00:25:13,039 --> 00:25:14,880
and another supporter protocol version

685
00:25:14,880 --> 00:25:17,760
is printed out in this log files

686
00:25:17,760 --> 00:25:19,840
but if we send the banner we send back

687
00:25:19,840 --> 00:25:21,600
the banner that we get when we establish

688
00:25:21,600 --> 00:25:24,400
the connection and append some a's at

689
00:25:24,400 --> 00:25:25,520
the end

690
00:25:25,520 --> 00:25:27,360
another java class

691
00:25:27,360 --> 00:25:29,120
throw an exception

692
00:25:29,120 --> 00:25:31,679
about a character header and a checksum

693
00:25:31,679 --> 00:25:34,480
so we decided to take these two java

694
00:25:34,480 --> 00:25:37,200
classes as our starting point for this

695
00:25:37,200 --> 00:25:38,480
analysis

696
00:25:38,480 --> 00:25:40,640
and we were able to identify all of the

697
00:25:40,640 --> 00:25:43,200
fields that make up these messages

698
00:25:43,200 --> 00:25:45,039
on the left side we have the hand check

699
00:25:45,039 --> 00:25:48,559
which is 47 byte as we as we tell before

700
00:25:48,559 --> 00:25:50,559
and after that we have

701
00:25:50,559 --> 00:25:52,960
the header of the message

702
00:25:52,960 --> 00:25:56,720
48 byte which was new for us

703
00:25:56,720 --> 00:25:58,000
in that moment

704
00:25:58,000 --> 00:25:58,799
and

705
00:25:58,799 --> 00:26:00,880
as we can see we have a variable length

706
00:26:00,880 --> 00:26:02,159
body

707
00:26:02,159 --> 00:26:04,320
for this message

708
00:26:04,320 --> 00:26:06,640
and this body will be processed by

709
00:26:06,640 --> 00:26:08,559
different kind of

710
00:26:08,559 --> 00:26:10,640
services

711
00:26:10,640 --> 00:26:13,039
this is the role of this service id

712
00:26:13,039 --> 00:26:16,080
field in the header of the of the

713
00:26:16,080 --> 00:26:18,080
message

714
00:26:18,080 --> 00:26:22,000
the service id will pick the listener

715
00:26:22,000 --> 00:26:24,159
that will be in charge of process or

716
00:26:24,159 --> 00:26:26,880
handle our request

717
00:26:26,880 --> 00:26:29,200
and this internal message listener is an

718
00:26:29,200 --> 00:26:31,840
interface and we found around 40

719
00:26:31,840 --> 00:26:35,440
implementation of this message listener

720
00:26:35,440 --> 00:26:37,440
some of them we highly critical and

721
00:26:37,440 --> 00:26:39,679
privileged action as we will see as

722
00:26:39,679 --> 00:26:42,000
follow

723
00:26:42,480 --> 00:26:44,240
here we have a scenario in which an

724
00:26:44,240 --> 00:26:46,559
attacker which has direct access to this

725
00:26:46,559 --> 00:26:49,440
cluster manager

726
00:26:49,520 --> 00:26:51,360
no authentication authentication is

727
00:26:51,360 --> 00:26:54,799
required here so it can interact with

728
00:26:54,799 --> 00:26:57,679
any of these service ids or any of these

729
00:26:57,679 --> 00:27:00,880
internal message listeners

730
00:27:00,880 --> 00:27:02,880
first we will talk about

731
00:27:02,880 --> 00:27:06,240
the sld listener

732
00:27:06,240 --> 00:27:08,559
which gives us information about the

733
00:27:08,559 --> 00:27:10,880
system or system properties for example

734
00:27:10,880 --> 00:27:12,880
the username that is running

735
00:27:12,880 --> 00:27:14,240
this

736
00:27:14,240 --> 00:27:15,120
this

737
00:27:15,120 --> 00:27:18,080
sap system and also the global directory

738
00:27:18,080 --> 00:27:21,760
and version about the java about sap and

739
00:27:21,760 --> 00:27:24,000
and

740
00:27:24,080 --> 00:27:25,360
other info

741
00:27:25,360 --> 00:27:28,639
about this system

742
00:27:29,520 --> 00:27:32,159
but also we found this database manager

743
00:27:32,159 --> 00:27:33,279
listener

744
00:27:33,279 --> 00:27:35,279
which allows us to modify some

745
00:27:35,279 --> 00:27:38,320
connection parameters for example the

746
00:27:38,320 --> 00:27:40,559
max connections allowed to be

747
00:27:40,559 --> 00:27:44,080
established so if we set this value

748
00:27:44,080 --> 00:27:45,679
for example to one

749
00:27:45,679 --> 00:27:47,760
only one connection will be available

750
00:27:47,760 --> 00:27:49,919
accessing the available connections for

751
00:27:49,919 --> 00:27:52,559
real users and leading to a denial of

752
00:27:52,559 --> 00:27:55,918
service for example

753
00:27:56,880 --> 00:28:00,000
and the last one for today

754
00:28:00,000 --> 00:28:03,279
is this gmx listener jmx is a java

755
00:28:03,279 --> 00:28:05,919
technology is not an sap thing

756
00:28:05,919 --> 00:28:08,960
which allows to be short basically to

757
00:28:08,960 --> 00:28:12,559
register and invoke dynamically some

758
00:28:12,559 --> 00:28:14,240
something called

759
00:28:14,240 --> 00:28:16,480
m bins

760
00:28:16,480 --> 00:28:18,240
it is a java bean

761
00:28:18,240 --> 00:28:20,159
with some specific characteristic for

762
00:28:20,159 --> 00:28:22,080
this technology

763
00:28:22,080 --> 00:28:23,039
it's not

764
00:28:23,039 --> 00:28:24,720
really interesting for our analysis

765
00:28:24,720 --> 00:28:26,000
today

766
00:28:26,000 --> 00:28:26,880
but

767
00:28:26,880 --> 00:28:29,279
as we can see here we can invoke and

768
00:28:29,279 --> 00:28:30,960
query all the

769
00:28:30,960 --> 00:28:33,120
m bins that

770
00:28:33,120 --> 00:28:34,399
were available

771
00:28:34,399 --> 00:28:35,679
in this

772
00:28:35,679 --> 00:28:38,080
sap system

773
00:28:38,080 --> 00:28:40,520
and we found around

774
00:28:40,520 --> 00:28:42,159
130

775
00:28:42,159 --> 00:28:43,360
m bins

776
00:28:43,360 --> 00:28:46,720
registered by default in an s and clean

777
00:28:46,720 --> 00:28:49,039
sap installation

778
00:28:49,039 --> 00:28:51,679
and some of them with high privileged

779
00:28:51,679 --> 00:28:53,360
actions

780
00:28:53,360 --> 00:28:56,719
or critical actions

781
00:28:57,039 --> 00:29:00,480
and we will we will see the effect of

782
00:29:00,480 --> 00:29:03,120
these basically of these three march

783
00:29:03,120 --> 00:29:06,000
bins and this met and its methods

784
00:29:06,000 --> 00:29:09,360
the first one is the single sign-on

785
00:29:09,360 --> 00:29:12,159
which allows us to add a trusted ticket

786
00:29:12,159 --> 00:29:13,600
issue

787
00:29:13,600 --> 00:29:16,960
this means i can register myself

788
00:29:16,960 --> 00:29:20,799
as a single sign-on ticket creator

789
00:29:20,799 --> 00:29:23,919
with my public key and after that with

790
00:29:23,919 --> 00:29:24,799
my

791
00:29:24,799 --> 00:29:28,320
private key i can create my own

792
00:29:28,320 --> 00:29:30,399
single sign-on authentication tickets

793
00:29:30,399 --> 00:29:33,440
and authenticate in inside the system as

794
00:29:33,440 --> 00:29:36,320
any kind of user

795
00:29:36,320 --> 00:29:40,240
and pablo will talk about this

796
00:29:40,240 --> 00:29:42,720
configuration in the system about create

797
00:29:42,720 --> 00:29:45,840
http alias and enabling enabling

798
00:29:45,840 --> 00:29:47,840
directory these things

799
00:29:47,840 --> 00:29:49,200
um

800
00:29:49,200 --> 00:29:51,600
this kind of configuration can be

801
00:29:51,600 --> 00:29:54,240
performed also this through this cluster

802
00:29:54,240 --> 00:29:58,799
manager and its service listeners

803
00:29:59,120 --> 00:30:02,159
now we will show you a demo

804
00:30:02,159 --> 00:30:06,240
about these jmx listener and adding a

805
00:30:06,240 --> 00:30:09,120
thruster a trusted system to create

806
00:30:09,120 --> 00:30:12,000
single sign-on tickets

807
00:30:12,000 --> 00:30:14,159
here we are gonna start from already

808
00:30:14,159 --> 00:30:16,399
logged in user just to show you the

809
00:30:16,399 --> 00:30:18,559
configuration that can be achieved

810
00:30:18,559 --> 00:30:20,640
through this cluster manager

811
00:30:20,640 --> 00:30:23,679
as we can see no trusted system

812
00:30:23,679 --> 00:30:25,840
is available so far

813
00:30:25,840 --> 00:30:27,600
so first the attacker check the

814
00:30:27,600 --> 00:30:29,600
connection is possible to the cluster

815
00:30:29,600 --> 00:30:30,640
manager

816
00:30:30,640 --> 00:30:33,120
and after that we'll try to inject its

817
00:30:33,120 --> 00:30:35,679
own system on its own publicly as a

818
00:30:35,679 --> 00:30:37,360
trusted

819
00:30:37,360 --> 00:30:39,600
first the script will try to

820
00:30:39,600 --> 00:30:42,320
identify the message id that is required

821
00:30:42,320 --> 00:30:43,919
once we get this

822
00:30:43,919 --> 00:30:46,960
we'll try to identify the service id

823
00:30:46,960 --> 00:30:49,120
which is running the

824
00:30:49,120 --> 00:30:51,520
jmx listener and after that as we can

825
00:30:51,520 --> 00:30:55,120
see here now we have a new

826
00:30:55,120 --> 00:30:58,080
trusted system to create logon ticket

827
00:30:58,080 --> 00:31:01,120
for single sign-on

828
00:31:01,760 --> 00:31:03,760
about protection measures to this

829
00:31:03,760 --> 00:31:06,640
service sap releases a node

830
00:31:06,640 --> 00:31:08,720
basically adding authentication to this

831
00:31:08,720 --> 00:31:11,600
cluster manager service

832
00:31:11,600 --> 00:31:14,720
but also it's a good option here to

833
00:31:14,720 --> 00:31:17,039
first configure the message server acl

834
00:31:17,039 --> 00:31:19,360
to allow connections only from ip

835
00:31:19,360 --> 00:31:20,799
addresses

836
00:31:20,799 --> 00:31:21,840
of this

837
00:31:21,840 --> 00:31:25,200
for instances of the same sap system

838
00:31:25,200 --> 00:31:27,200
and also end users

839
00:31:27,200 --> 00:31:29,600
usually don't need access and interact

840
00:31:29,600 --> 00:31:31,679
with this cluster manager so firewall

841
00:31:31,679 --> 00:31:33,279
restriction

842
00:31:33,279 --> 00:31:36,000
dropping connection from end users only

843
00:31:36,000 --> 00:31:37,440
allowing from

844
00:31:37,440 --> 00:31:40,000
as i said before instances of the same

845
00:31:40,000 --> 00:31:43,039
sap system is a good option

846
00:31:43,039 --> 00:31:44,960
next pablo will continue with the last

847
00:31:44,960 --> 00:31:48,320
vulnerability for today

848
00:31:50,000 --> 00:31:52,399
so yes thank you ignacio and let's start

849
00:31:52,399 --> 00:31:54,640
with the final

850
00:31:54,640 --> 00:31:56,480
vulnerability of today

851
00:31:56,480 --> 00:31:59,360
first of all motivation so either with

852
00:31:59,360 --> 00:32:02,399
the cluster manager or with recon an

853
00:32:02,399 --> 00:32:05,200
authenticated attacker is able to grab a

854
00:32:05,200 --> 00:32:07,760
user an administrator user of the sap

855
00:32:07,760 --> 00:32:09,120
system right

856
00:32:09,120 --> 00:32:11,519
however administrator users are not able

857
00:32:11,519 --> 00:32:14,240
to execute os commands and as securities

858
00:32:14,240 --> 00:32:16,880
researchers when we start looking for

859
00:32:16,880 --> 00:32:18,240
vulnerabilities we want to follow the

860
00:32:18,240 --> 00:32:21,120
pre-op remote code execution right

861
00:32:21,120 --> 00:32:23,519
so in order to achieve that goal let's

862
00:32:23,519 --> 00:32:25,039
say uh

863
00:32:25,039 --> 00:32:27,600
we have i mean we have half of that goal

864
00:32:27,600 --> 00:32:30,080
we already know how to without

865
00:32:30,080 --> 00:32:32,559
authentication grab a user of the system

866
00:32:32,559 --> 00:32:35,200
and of the system sorry and not any user

867
00:32:35,200 --> 00:32:37,039
but an administrator one

868
00:32:37,039 --> 00:32:38,960
so the we have to

869
00:32:38,960 --> 00:32:41,200
fill that gap you know we have to find a

870
00:32:41,200 --> 00:32:42,559
way to

871
00:32:42,559 --> 00:32:44,399
execute commands but being an

872
00:32:44,399 --> 00:32:46,799
administrator users which is something

873
00:32:46,799 --> 00:32:48,240
that should not happen

874
00:32:48,240 --> 00:32:51,039
but it's most probably to find it

875
00:32:51,039 --> 00:32:53,039
that finding a pre-op remote code

876
00:32:53,039 --> 00:32:55,120
execution from scratch

877
00:32:55,120 --> 00:32:58,000
so we start our search

878
00:32:58,000 --> 00:33:00,000
uh with the netweaver administrator

879
00:33:00,000 --> 00:33:02,799
application this application holds a lot

880
00:33:02,799 --> 00:33:04,399
of different and

881
00:33:04,399 --> 00:33:05,679
and

882
00:33:05,679 --> 00:33:08,000
sever i mean several applications within

883
00:33:08,000 --> 00:33:10,720
this application um there is part of the

884
00:33:10,720 --> 00:33:13,679
sap netweaver java layer and allow you

885
00:33:13,679 --> 00:33:17,120
to control a lot of different stuff from

886
00:33:17,120 --> 00:33:19,840
your sap system you can control

887
00:33:19,840 --> 00:33:21,919
connections you can control

888
00:33:21,919 --> 00:33:25,799
configurations regarding um

889
00:33:25,799 --> 00:33:27,840
applications you can control

890
00:33:27,840 --> 00:33:30,559
connectivity like give authentication to

891
00:33:30,559 --> 00:33:33,440
some part to the other part etc in fact

892
00:33:33,440 --> 00:33:35,200
the configuration with our application

893
00:33:35,200 --> 00:33:37,440
the one that is related to recon

894
00:33:37,440 --> 00:33:38,480
is

895
00:33:38,480 --> 00:33:41,039
inside this nwa

896
00:33:41,039 --> 00:33:42,880
another application that is part of it

897
00:33:42,880 --> 00:33:44,880
is called java http provider

898
00:33:44,880 --> 00:33:46,240
configuration and within this

899
00:33:46,240 --> 00:33:48,240
application you can configure several

900
00:33:48,240 --> 00:33:51,440
things related to the http server for

901
00:33:51,440 --> 00:33:53,600
example you can define application

902
00:33:53,600 --> 00:33:55,200
analysis application analysis are

903
00:33:55,200 --> 00:33:57,679
basically a path a short path in order

904
00:33:57,679 --> 00:33:59,679
to relate an application so if you want

905
00:33:59,679 --> 00:34:03,120
to define um i don't know what dash asd

906
00:34:03,120 --> 00:34:05,039
and you would every time that somebody

907
00:34:05,039 --> 00:34:07,279
enters you asd

908
00:34:07,279 --> 00:34:08,719
you're going to write

909
00:34:08,719 --> 00:34:10,480
it to an application to a particular

910
00:34:10,480 --> 00:34:11,599
application that is running on your

911
00:34:11,599 --> 00:34:13,679
system you can define that you can also

912
00:34:13,679 --> 00:34:15,119
define aliases

913
00:34:15,119 --> 00:34:17,918
aliases are the same thing i mean you

914
00:34:17,918 --> 00:34:19,918
can define an alias like the previous

915
00:34:19,918 --> 00:34:23,520
one dash acsd but instead of related to

916
00:34:23,520 --> 00:34:25,599
the application you will relate it to an

917
00:34:25,599 --> 00:34:28,320
open operating system path so you can

918
00:34:28,320 --> 00:34:31,040
for example link it to a temp

919
00:34:31,040 --> 00:34:33,040
directory

920
00:34:33,040 --> 00:34:35,679
um also you can define virtual hosts of

921
00:34:35,679 --> 00:34:38,079
course the cache usage and you can

922
00:34:38,079 --> 00:34:40,399
activate directory listing so if you pay

923
00:34:40,399 --> 00:34:42,399
attention i mentioned directly listing

924
00:34:42,399 --> 00:34:44,320
analysis right

925
00:34:44,320 --> 00:34:46,560
combining those two things what you

926
00:34:46,560 --> 00:34:48,879
could do is basically you activate an

927
00:34:48,879 --> 00:34:51,359
alias in order to

928
00:34:51,359 --> 00:34:52,480
uh

929
00:34:52,480 --> 00:34:54,399
link a particular

930
00:34:54,399 --> 00:34:55,599
um

931
00:34:55,599 --> 00:34:59,040
asd for example a particular url to an

932
00:34:59,040 --> 00:35:01,200
os directory or

933
00:35:01,200 --> 00:35:02,800
ios file

934
00:35:02,800 --> 00:35:04,400
and then browse that file because you

935
00:35:04,400 --> 00:35:06,880
have the directory listing activated

936
00:35:06,880 --> 00:35:09,119
is that possible yes it is possible and

937
00:35:09,119 --> 00:35:12,079
with that an administra an administrator

938
00:35:12,079 --> 00:35:14,960
user already will be able to read files

939
00:35:14,960 --> 00:35:16,640
from the os

940
00:35:16,640 --> 00:35:17,599
but

941
00:35:17,599 --> 00:35:19,920
if we want to execute commands we need

942
00:35:19,920 --> 00:35:22,400
something else right and one option is

943
00:35:22,400 --> 00:35:24,720
to upload a web shell for example place

944
00:35:24,720 --> 00:35:26,880
it in the os and then reference it with

945
00:35:26,880 --> 00:35:28,400
this technique

946
00:35:28,400 --> 00:35:31,200
but how we can upload a webshop

947
00:35:31,200 --> 00:35:33,359
well we started looking for ways to

948
00:35:33,359 --> 00:35:35,440
upload a web shell and we finally found

949
00:35:35,440 --> 00:35:37,359
a candidate application this application

950
00:35:37,359 --> 00:35:40,480
was or basically allows you to upload a

951
00:35:40,480 --> 00:35:42,480
configuration file

952
00:35:42,480 --> 00:35:45,359
uh inside a zip file

953
00:35:45,359 --> 00:35:46,240
but

954
00:35:46,240 --> 00:35:47,119
if

955
00:35:47,119 --> 00:35:50,240
the file that you compressed and upload

956
00:35:50,240 --> 00:35:53,200
doesn't follow certain structure

957
00:35:53,200 --> 00:35:55,119
after the compressing the application

958
00:35:55,119 --> 00:35:58,160
will read that file will fail because

959
00:35:58,160 --> 00:35:59,839
again it doesn't follow the correct

960
00:35:59,839 --> 00:36:01,440
structure

961
00:36:01,440 --> 00:36:04,800
but it will never delete that file

962
00:36:04,800 --> 00:36:07,440
and moreover it will return an error

963
00:36:07,440 --> 00:36:09,359
saying hey

964
00:36:09,359 --> 00:36:12,560
the path where i decompress it and the

965
00:36:12,560 --> 00:36:15,359
file is doesn't follow or this file is

966
00:36:15,359 --> 00:36:17,760
not uh found there blah blah but

967
00:36:17,760 --> 00:36:19,359
important thing is that it also gives

968
00:36:19,359 --> 00:36:20,880
you the path

969
00:36:20,880 --> 00:36:23,119
so with those two things what you can do

970
00:36:23,119 --> 00:36:25,920
is basically upload a web show and then

971
00:36:25,920 --> 00:36:28,960
grab that path and use it as an alias so

972
00:36:28,960 --> 00:36:30,560
the full exploitation will work like

973
00:36:30,560 --> 00:36:32,160
this first of all log in as

974
00:36:32,160 --> 00:36:34,320
administrator enter to the nmu

975
00:36:34,320 --> 00:36:36,160
application activate the directory

976
00:36:36,160 --> 00:36:37,280
listing

977
00:36:37,280 --> 00:36:39,440
upload this configuration

978
00:36:39,440 --> 00:36:41,920
web shell over there

979
00:36:41,920 --> 00:36:44,240
inside the zip once it fails the

980
00:36:44,240 --> 00:36:46,560
webshell will remain over there and it

981
00:36:46,560 --> 00:36:48,800
will give you it will return you the

982
00:36:48,800 --> 00:36:51,200
path where this website was uploaded use

983
00:36:51,200 --> 00:36:53,599
that to create an alias

984
00:36:53,599 --> 00:36:55,920
of the system and you can reference your

985
00:36:55,920 --> 00:36:58,000
web shell and finally you will be

986
00:36:58,000 --> 00:36:59,280
executing

987
00:36:59,280 --> 00:37:00,320
commands

988
00:37:00,320 --> 00:37:03,040
as the sad adm user

989
00:37:03,040 --> 00:37:06,079
so demo time let's see this in a video

990
00:37:06,079 --> 00:37:08,400
how it works this video will be a little

991
00:37:08,400 --> 00:37:11,119
blurred because there is not a public

992
00:37:11,119 --> 00:37:13,760
exploit about this so it's

993
00:37:13,760 --> 00:37:16,480
better to keep some things private still

994
00:37:16,480 --> 00:37:19,200
so here the attacker is activating the

995
00:37:19,200 --> 00:37:20,160
um

996
00:37:20,160 --> 00:37:21,920
directory listing now is defined in the

997
00:37:21,920 --> 00:37:24,160
alias the alias will be named java

998
00:37:24,160 --> 00:37:28,320
underscore rse underscore poke

999
00:37:28,320 --> 00:37:30,480
here is checking that the

1000
00:37:30,480 --> 00:37:31,520
basically

1001
00:37:31,520 --> 00:37:34,560
that directory or that alias

1002
00:37:34,560 --> 00:37:35,280
is

1003
00:37:35,280 --> 00:37:37,920
is an empty directory so far

1004
00:37:37,920 --> 00:37:40,079
now we are going to blur uh but here

1005
00:37:40,079 --> 00:37:41,839
what is happening is the attacker is

1006
00:37:41,839 --> 00:37:43,119
uploading the web shell to that

1007
00:37:43,119 --> 00:37:44,880
particular uh

1008
00:37:44,880 --> 00:37:46,480
directory and here we have it devops

1009
00:37:46,480 --> 00:37:48,640
shell.jsp

1010
00:37:48,640 --> 00:37:51,200
so now it's a matter of executing the

1011
00:37:51,200 --> 00:37:53,760
command that we want for example who am

1012
00:37:53,760 --> 00:37:57,359
i and this will return the sad adm user

1013
00:37:57,359 --> 00:37:59,359
that is being used by the system in this

1014
00:37:59,359 --> 00:38:02,880
case rd1 idm

1015
00:38:02,880 --> 00:38:07,520
so this basically means that um

1016
00:38:07,520 --> 00:38:10,000
a user with administrator privileges was

1017
00:38:10,000 --> 00:38:12,320
able to execute os commands of course

1018
00:38:12,320 --> 00:38:15,040
abusing this vulnerability and if this

1019
00:38:15,040 --> 00:38:17,440
winner is combined with recon or with

1020
00:38:17,440 --> 00:38:19,599
the cluster monitor issue then it will

1021
00:38:19,599 --> 00:38:21,359
be a fully functional exploit of a

1022
00:38:21,359 --> 00:38:24,160
pre-op remote code execution

1023
00:38:24,160 --> 00:38:26,480
let's talk a bit about protections um

1024
00:38:26,480 --> 00:38:29,839
about the patching again sap patched

1025
00:38:29,839 --> 00:38:32,160
this monarity in the first patch day

1026
00:38:32,160 --> 00:38:33,680
possible this means within the first

1027
00:38:33,680 --> 00:38:36,480
month we we submitted that uh

1028
00:38:36,480 --> 00:38:38,079
vulnerability and within the first month

1029
00:38:38,079 --> 00:38:40,480
it was already patched so this talks

1030
00:38:40,480 --> 00:38:42,720
really good about of course the psrt

1031
00:38:42,720 --> 00:38:44,480
minority technical steam involved in

1032
00:38:44,480 --> 00:38:47,680
developing the the protection

1033
00:38:47,680 --> 00:38:50,480
but it also talks really good about sap

1034
00:38:50,480 --> 00:38:52,800
in general because uh it's clearly how

1035
00:38:52,800 --> 00:38:53,920
they have

1036
00:38:53,920 --> 00:38:55,760
been improving in terms of security how

1037
00:38:55,760 --> 00:38:58,000
they are putting effort into protecting

1038
00:38:58,000 --> 00:39:00,880
the your customers and and of course

1039
00:39:00,880 --> 00:39:03,440
make creating or developing a more

1040
00:39:03,440 --> 00:39:07,359
secure software in fact we can see that

1041
00:39:07,359 --> 00:39:08,480
uh

1042
00:39:08,480 --> 00:39:10,400
we see that really often

1043
00:39:10,400 --> 00:39:12,560
uh because each day is harder and harder

1044
00:39:12,560 --> 00:39:14,720
to find a new vulnerability so yeah

1045
00:39:14,720 --> 00:39:15,839
really

1046
00:39:15,839 --> 00:39:17,839
really good for them

1047
00:39:17,839 --> 00:39:20,000
as an extra protection besides of course

1048
00:39:20,000 --> 00:39:22,400
applying the patch uh an extra

1049
00:39:22,400 --> 00:39:24,320
recommendation will be also to keep

1050
00:39:24,320 --> 00:39:26,640
firewalls and all the

1051
00:39:26,640 --> 00:39:29,200
your security um

1052
00:39:29,200 --> 00:39:32,640
endpoints that you have updated because

1053
00:39:32,640 --> 00:39:34,560
we are dealing with http issues so here

1054
00:39:34,560 --> 00:39:36,960
for example if you have a firewall in

1055
00:39:36,960 --> 00:39:39,040
the middle maybe the firewall will have

1056
00:39:39,040 --> 00:39:40,160
detect

1057
00:39:40,160 --> 00:39:40,960
the

1058
00:39:40,960 --> 00:39:44,480
reverse the web shell and will blocked

1059
00:39:44,480 --> 00:39:47,680
that attack so it's always a good uh

1060
00:39:47,680 --> 00:39:49,760
advice and good recommendation to have

1061
00:39:49,760 --> 00:39:52,000
all those uh

1062
00:39:52,000 --> 00:39:55,520
security endpoints up to date

1063
00:39:55,599 --> 00:39:57,760
now i will leave in asia to continue

1064
00:39:57,760 --> 00:40:01,200
with the with the following topic

1065
00:40:04,079 --> 00:40:06,160
forecasting the implication of these new

1066
00:40:06,160 --> 00:40:08,000
critical vulnerabilities that were about

1067
00:40:08,000 --> 00:40:09,280
to be published

1068
00:40:09,280 --> 00:40:11,599
most of them targeting potential

1069
00:40:11,599 --> 00:40:13,760
internet exposed solution i can mention

1070
00:40:13,760 --> 00:40:15,839
for example the solution manager or the

1071
00:40:15,839 --> 00:40:19,759
sap java stack system

1072
00:40:19,920 --> 00:40:22,319
along with some previous vulnerabilities

1073
00:40:22,319 --> 00:40:23,839
really all vulnerabilities that are

1074
00:40:23,839 --> 00:40:25,680
still being exploited in the while

1075
00:40:25,680 --> 00:40:27,920
nowadays and apps decided to take the

1076
00:40:27,920 --> 00:40:29,520
lead into this threat intelligent

1077
00:40:29,520 --> 00:40:32,000
campaign

1078
00:40:32,160 --> 00:40:34,000
as we mentioned before the sap system

1079
00:40:34,000 --> 00:40:36,160
are mission critical systems

1080
00:40:36,160 --> 00:40:38,480
which means that manage or handle

1081
00:40:38,480 --> 00:40:40,800
financial records uh transactions

1082
00:40:40,800 --> 00:40:43,440
customer records so

1083
00:40:43,440 --> 00:40:45,520
very important information from the

1084
00:40:45,520 --> 00:40:47,760
biggest companies around the world so

1085
00:40:47,760 --> 00:40:50,240
sabotage tax and spinach attacks are

1086
00:40:50,240 --> 00:40:52,400
everyday threats for these kind of

1087
00:40:52,400 --> 00:40:53,599
systems

1088
00:40:53,599 --> 00:40:55,839
but beside these

1089
00:40:55,839 --> 00:40:58,800
targeted attacks or from expert attacks

1090
00:40:58,800 --> 00:41:01,359
we found some other interesting reasons

1091
00:41:01,359 --> 00:41:03,359
for example cryptominers or bounty

1092
00:41:03,359 --> 00:41:06,400
hunters or botnets which are

1093
00:41:06,400 --> 00:41:08,240
more

1094
00:41:08,240 --> 00:41:10,800
automated attacks and massive attacks

1095
00:41:10,800 --> 00:41:13,119
that could lead to a security breaching

1096
00:41:13,119 --> 00:41:16,400
in our sap systems

1097
00:41:16,960 --> 00:41:19,040
these new rules in the technological

1098
00:41:19,040 --> 00:41:20,400
environment for example

1099
00:41:20,400 --> 00:41:22,319
anonymous payments and anonymous

1100
00:41:22,319 --> 00:41:24,000
networks and

1101
00:41:24,000 --> 00:41:24,960
some

1102
00:41:24,960 --> 00:41:27,119
bps in the cloud

1103
00:41:27,119 --> 00:41:28,400
services

1104
00:41:28,400 --> 00:41:31,359
that give the feeling of anonymity in

1105
00:41:31,359 --> 00:41:32,960
the in the

1106
00:41:32,960 --> 00:41:34,480
internet connection

1107
00:41:34,480 --> 00:41:38,480
bring new players uh to this game

1108
00:41:38,480 --> 00:41:41,760
so not only expert attackers

1109
00:41:41,760 --> 00:41:42,640
has

1110
00:41:42,640 --> 00:41:43,760
are

1111
00:41:43,760 --> 00:41:46,960
actively exploiting or trying to exploit

1112
00:41:46,960 --> 00:41:49,359
these vulnerabilities

1113
00:41:49,359 --> 00:41:52,720
also internet tech indexers

1114
00:41:52,720 --> 00:41:54,640
give the information about

1115
00:41:54,640 --> 00:41:57,839
sap system exposed to internet

1116
00:41:57,839 --> 00:42:00,000
joining all this information together

1117
00:42:00,000 --> 00:42:02,560
imagine that there is a lot of people

1118
00:42:02,560 --> 00:42:04,880
trying to

1119
00:42:04,880 --> 00:42:09,839
break into this kind of sap systems

1120
00:42:10,079 --> 00:42:12,319
we have kept track of seven thread

1121
00:42:12,319 --> 00:42:13,440
vectors

1122
00:42:13,440 --> 00:42:15,599
and as a result of our threat

1123
00:42:15,599 --> 00:42:18,079
intelligence campaign we have evidence

1124
00:42:18,079 --> 00:42:19,280
of

1125
00:42:19,280 --> 00:42:22,720
more than 500 confirmed expectations

1126
00:42:22,720 --> 00:42:25,040
with more than 100

1127
00:42:25,040 --> 00:42:27,359
with the attackers with their hands on

1128
00:42:27,359 --> 00:42:30,000
the keyboard trying to access the data

1129
00:42:30,000 --> 00:42:33,040
or exploring the system

1130
00:42:33,040 --> 00:42:35,839
and as a key tca takeaway is an

1131
00:42:35,839 --> 00:42:37,920
implication the three actors are

1132
00:42:37,920 --> 00:42:40,400
actively targeting and exploiting

1133
00:42:40,400 --> 00:42:43,280
unsecured sap applications and some of

1134
00:42:43,280 --> 00:42:45,359
them possess a lot of expertise and

1135
00:42:45,359 --> 00:42:47,119
capabilities to carry out really

1136
00:42:47,119 --> 00:42:49,839
sophisticated attacks

1137
00:42:49,839 --> 00:42:51,680
besides that the window to defend is

1138
00:42:51,680 --> 00:42:54,240
getting shorter uh for instance the

1139
00:42:54,240 --> 00:42:56,880
exploitation for recon started in less

1140
00:42:56,880 --> 00:43:00,160
than 72 hours that sap

1141
00:43:00,160 --> 00:43:01,680
released the patch

1142
00:43:01,680 --> 00:43:04,800
and also a new sap system that were

1143
00:43:04,800 --> 00:43:07,520
provisioned in the in cloud environments

1144
00:43:07,520 --> 00:43:10,319
has been discovered an attack in in

1145
00:43:10,319 --> 00:43:12,960
about three hours but the attacks are

1146
00:43:12,960 --> 00:43:15,760
not only targeting missing sap security

1147
00:43:15,760 --> 00:43:18,000
patches but also for example

1148
00:43:18,000 --> 00:43:20,240
misconfiguration as could be default

1149
00:43:20,240 --> 00:43:22,160
credentials or

1150
00:43:22,160 --> 00:43:24,079
misconfigured acls

1151
00:43:24,079 --> 00:43:26,640
and finally these three not only

1152
00:43:26,640 --> 00:43:29,680
represent a cyber security risk

1153
00:43:29,680 --> 00:43:32,160
they also could have some compliance

1154
00:43:32,160 --> 00:43:33,680
implication in

1155
00:43:33,680 --> 00:43:37,118
sox or gdpr

1156
00:43:39,280 --> 00:43:41,440
well some fun facts during our thread

1157
00:43:41,440 --> 00:43:43,200
intelligent campaign was for example

1158
00:43:43,200 --> 00:43:45,280
that after exploiting recon and

1159
00:43:45,280 --> 00:43:47,520
successfully creating a user the

1160
00:43:47,520 --> 00:43:49,599
attacker applies a workaround to protect

1161
00:43:49,599 --> 00:43:52,560
the the sap system so i think that maybe

1162
00:43:52,560 --> 00:43:55,440
not all here were capes

1163
00:43:55,440 --> 00:43:57,200
but someone else that was able to

1164
00:43:57,200 --> 00:43:59,359
execute os command of using a really old

1165
00:43:59,359 --> 00:44:01,520
bernability did it just to run a mono

1166
00:44:01,520 --> 00:44:03,680
crypto miner

1167
00:44:03,680 --> 00:44:05,040
and finally

1168
00:44:05,040 --> 00:44:07,839
we have evidence that some vulnerable

1169
00:44:07,839 --> 00:44:09,680
endpoints were tested around three

1170
00:44:09,680 --> 00:44:12,000
months before the exploit was publicly

1171
00:44:12,000 --> 00:44:14,000
available

1172
00:44:14,000 --> 00:44:15,920
and concluding this presentation for

1173
00:44:15,920 --> 00:44:17,440
today

1174
00:44:17,440 --> 00:44:19,200
i want to share with you the list of

1175
00:44:19,200 --> 00:44:21,280
vulnerabilities and patches but also i

1176
00:44:21,280 --> 00:44:23,680
want to emphasize that combining some of

1177
00:44:23,680 --> 00:44:25,359
them for example

1178
00:44:25,359 --> 00:44:28,240
recon with the java rce or cluster

1179
00:44:28,240 --> 00:44:30,640
manager with the java rce is possible to

1180
00:44:30,640 --> 00:44:32,560
perform and authenticate the remote

1181
00:44:32,560 --> 00:44:34,960
common execution

1182
00:44:34,960 --> 00:44:37,440
and as a conclusion in itself

1183
00:44:37,440 --> 00:44:39,520
we have that critical exploits are

1184
00:44:39,520 --> 00:44:41,839
becoming publicly available

1185
00:44:41,839 --> 00:44:44,640
and maybe because of this or the public

1186
00:44:44,640 --> 00:44:46,800
attention on the new technological rules

1187
00:44:46,800 --> 00:44:48,839
that we share with you during this

1188
00:44:48,839 --> 00:44:52,240
presentation attacks on sap systems are

1189
00:44:52,240 --> 00:44:54,880
getting more and more common

1190
00:44:54,880 --> 00:44:57,119
and on the other side we have that

1191
00:44:57,119 --> 00:45:00,160
finding bugs in sap is getting harder

1192
00:45:00,160 --> 00:45:02,160
this is sample as

1193
00:45:02,160 --> 00:45:04,960
how important the the security is for

1194
00:45:04,960 --> 00:45:08,640
sap and also along with this sap patches

1195
00:45:08,640 --> 00:45:10,800
are being released faster and system

1196
00:45:10,800 --> 00:45:12,640
getting stronger so

1197
00:45:12,640 --> 00:45:14,800
and sure but you need to ensure that you

1198
00:45:14,800 --> 00:45:18,319
have your system as updated as possible

1199
00:45:18,319 --> 00:45:20,640
and i want to thank you and i hope you

1200
00:45:20,640 --> 00:45:23,520
that you have enjoyed this presentation

1201
00:45:23,520 --> 00:45:26,680
bye bye

