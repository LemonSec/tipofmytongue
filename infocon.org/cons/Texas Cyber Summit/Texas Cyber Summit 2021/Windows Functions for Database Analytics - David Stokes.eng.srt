1
00:00:01,520 --> 00:00:04,240
hello texas cyber summit my name is dave

2
00:00:04,240 --> 00:00:06,879
stokes i am a mysql community manager

3
00:00:06,879 --> 00:00:09,280
for oracle corporation i've been on the

4
00:00:09,280 --> 00:00:12,480
community team for just over a decade

5
00:00:12,480 --> 00:00:14,480
and sorry i can't make it in person

6
00:00:14,480 --> 00:00:17,039
today oracle corporation has a travel

7
00:00:17,039 --> 00:00:18,160
ban

8
00:00:18,160 --> 00:00:20,560
if i could i would drive down from where

9
00:00:20,560 --> 00:00:22,800
i live in north texas and

10
00:00:22,800 --> 00:00:25,519
be down there with you on the riverwalk

11
00:00:25,519 --> 00:00:27,680
and today i'm talking about window

12
00:00:27,680 --> 00:00:30,560
functions for database analytics

13
00:00:30,560 --> 00:00:31,920
i'm not going to assume that you have

14
00:00:31,920 --> 00:00:35,280
any knowledge of windowing functions or

15
00:00:35,280 --> 00:00:37,520
even that much about mysql a matter of

16
00:00:37,520 --> 00:00:39,360
fact this should

17
00:00:39,360 --> 00:00:41,120
translate pretty much much between any

18
00:00:41,120 --> 00:00:42,719
other relational database out there that

19
00:00:42,719 --> 00:00:44,559
has window functions

20
00:00:44,559 --> 00:00:47,680
and let's get started

21
00:00:47,680 --> 00:00:50,079
about me uh yeah this picture of me down

22
00:00:50,079 --> 00:00:52,000
in ingram with the

23
00:00:52,000 --> 00:00:52,960
uh

24
00:00:52,960 --> 00:00:56,239
the stonehenge in the background and the

25
00:00:56,239 --> 00:00:58,399
easter island type figurehead

26
00:00:58,399 --> 00:01:00,239
that's out there in one of the parks uh

27
00:01:00,239 --> 00:01:01,760
once again i'm on the mysql community

28
00:01:01,760 --> 00:01:05,360
team uh my twitter handle is at stoker

29
00:01:05,360 --> 00:01:06,920
my blog is

30
00:01:06,920 --> 00:01:08,400
elephantdolphinblogspot.com and if you

31
00:01:08,400 --> 00:01:10,960
need to get hold of me by email it's

32
00:01:10,960 --> 00:01:12,080
dot com david.stokesurville.com the

33
00:01:12,080 --> 00:01:13,680
slides for this presentation are

34
00:01:13,680 --> 00:01:16,080
available at slideshare slash net dave

35
00:01:16,080 --> 00:01:18,400
stokes look for texas cyber summit or

36
00:01:18,400 --> 00:01:22,080
windowing functions or both

37
00:01:22,960 --> 00:01:25,119
and that's a nice little

38
00:01:25,119 --> 00:01:27,439
graphic image you'll see uh that i use

39
00:01:27,439 --> 00:01:29,680
somewhat created for me for another show

40
00:01:29,680 --> 00:01:32,960
now this is an introduction uh this is a

41
00:01:32,960 --> 00:01:35,200
subject can take a great deal time to

42
00:01:35,200 --> 00:01:36,880
master

43
00:01:36,880 --> 00:01:37,840
this is

44
00:01:37,840 --> 00:01:40,079
the equivalent of walking into a second

45
00:01:40,079 --> 00:01:42,560
semester calculus class in college when

46
00:01:42,560 --> 00:01:45,439
you really should be in pre-algebra but

47
00:01:45,439 --> 00:01:47,520
let's get through it as much as we can

48
00:01:47,520 --> 00:01:50,159
now i am using mysql8 for demos

49
00:01:50,159 --> 00:01:51,759
as i mentioned earlier this should work

50
00:01:51,759 --> 00:01:53,680
with other relational databases out

51
00:01:53,680 --> 00:01:56,079
there that have window functions

52
00:01:56,079 --> 00:01:59,520
the good thing is that

53
00:01:59,520 --> 00:02:01,520
this is an introduction and i'm not

54
00:02:01,520 --> 00:02:03,520
going to deeply into the analytics or

55
00:02:03,520 --> 00:02:06,719
the statistics and they can be very

56
00:02:06,719 --> 00:02:08,399
complex

57
00:02:08,399 --> 00:02:10,399
and there are good news for you is

58
00:02:10,399 --> 00:02:12,400
there's a lot of good books videos and

59
00:02:12,400 --> 00:02:14,720
courses out there that you can go

60
00:02:14,720 --> 00:02:16,560
through at your own pace

61
00:02:16,560 --> 00:02:19,120
and by the way learn to double check

62
00:02:19,120 --> 00:02:21,120
your assumptions it's really easy when

63
00:02:21,120 --> 00:02:23,120
you're starting off

64
00:02:23,120 --> 00:02:25,440
to either reinvent the wheel or find

65
00:02:25,440 --> 00:02:27,520
something that

66
00:02:27,520 --> 00:02:29,280
you've made a mistake on your

67
00:02:29,280 --> 00:02:31,440
calculations and suddenly you're you're

68
00:02:31,440 --> 00:02:34,319
down the rabbit hole

69
00:02:34,319 --> 00:02:37,040
and also take small steps this is not

70
00:02:37,040 --> 00:02:39,440
something you have to know right away uh

71
00:02:39,440 --> 00:02:42,080
start playing with these and make little

72
00:02:42,080 --> 00:02:43,360
little steps

73
00:02:43,360 --> 00:02:45,519
and progress does take practice uh to

74
00:02:45,519 --> 00:02:46,720
get really good at this it's like

75
00:02:46,720 --> 00:02:48,480
learning a musical instrument or martial

76
00:02:48,480 --> 00:02:49,360
art

77
00:02:49,360 --> 00:02:51,200
you have to practice practice and

78
00:02:51,200 --> 00:02:52,480
practice

79
00:02:52,480 --> 00:02:54,400
and the good news if you're really into

80
00:02:54,400 --> 00:02:56,080
this there's years of material out there

81
00:02:56,080 --> 00:02:59,040
for you to get really good at

82
00:02:59,040 --> 00:02:59,840
so

83
00:02:59,840 --> 00:03:03,280
analytics what am i talking about

84
00:03:03,280 --> 00:03:04,879
well according to wikipedia analytics is

85
00:03:04,879 --> 00:03:07,280
the systemic computational analysis of

86
00:03:07,280 --> 00:03:09,440
data or statistics

87
00:03:09,440 --> 00:03:10,959
now there's a lot of good information in

88
00:03:10,959 --> 00:03:13,519
your data that you may not have

89
00:03:13,519 --> 00:03:15,519
done putting the two and two together

90
00:03:15,519 --> 00:03:18,080
sometimes the data is hidden sometimes

91
00:03:18,080 --> 00:03:20,239
you have to tease out the pattern

92
00:03:20,239 --> 00:03:21,519
sometimes you don't even know there's a

93
00:03:21,519 --> 00:03:23,360
pattern there until something

94
00:03:23,360 --> 00:03:25,360
pops up in your face

95
00:03:25,360 --> 00:03:27,440
so

96
00:03:27,440 --> 00:03:28,560
don't get

97
00:03:28,560 --> 00:03:30,400
scared by the numbers and don't get

98
00:03:30,400 --> 00:03:32,480
scared by the complexity we're going to

99
00:03:32,480 --> 00:03:35,599
start simple and build

100
00:03:35,599 --> 00:03:37,760
now most relational databases have

101
00:03:37,760 --> 00:03:39,840
things called aggregate functions which

102
00:03:39,840 --> 00:03:42,319
is what we in the mysql used a lot

103
00:03:42,319 --> 00:03:43,360
before

104
00:03:43,360 --> 00:03:44,959
window functions came out three years

105
00:03:44,959 --> 00:03:47,599
ago in mysql eight

106
00:03:47,599 --> 00:03:50,159
there's functions to average numbers uh

107
00:03:50,159 --> 00:03:52,560
find the max and a list the minimalist

108
00:03:52,560 --> 00:03:55,280
do a standard deviation

109
00:03:55,280 --> 00:03:55,550
and

110
00:03:55,550 --> 00:03:57,280
[Music]

111
00:03:57,280 --> 00:04:00,560
some numbers and some other stuff these

112
00:04:00,560 --> 00:04:02,239
are all fairly well

113
00:04:02,239 --> 00:04:05,360
described in the mysql manual i would

114
00:04:05,360 --> 00:04:07,040
ask you to go out and take a look at

115
00:04:07,040 --> 00:04:08,480
those

116
00:04:08,480 --> 00:04:10,879
and these are pretty good for a lot of

117
00:04:10,879 --> 00:04:12,879
basic analysis

118
00:04:12,879 --> 00:04:15,040
don't sell them short

119
00:04:15,040 --> 00:04:17,680
however windowing functions

120
00:04:17,680 --> 00:04:20,160
uh have some advantages over these now

121
00:04:20,160 --> 00:04:22,160
aggregate functions operate on a set of

122
00:04:22,160 --> 00:04:23,550
values and

123
00:04:23,550 --> 00:04:25,680
[Music]

124
00:04:25,680 --> 00:04:27,280
that set is kind of defined by you but

125
00:04:27,280 --> 00:04:28,639
it's kind of a limited way that you can

126
00:04:28,639 --> 00:04:29,840
set it you'll see what i mean in a

127
00:04:29,840 --> 00:04:30,800
minute

128
00:04:30,800 --> 00:04:32,960
now you can also use these with group by

129
00:04:32,960 --> 00:04:35,840
to kind of break them into subsets

130
00:04:35,840 --> 00:04:37,759
so instead of getting a sum of all sales

131
00:04:37,759 --> 00:04:40,880
from a chain of stores you can get group

132
00:04:40,880 --> 00:04:44,240
it by the individual store

133
00:04:44,240 --> 00:04:46,160
and one thing you'll see again a little

134
00:04:46,160 --> 00:04:48,080
bit is it returns a single value for

135
00:04:48,080 --> 00:04:49,840
multiple rows which may not be what you

136
00:04:49,840 --> 00:04:52,160
want and sometimes it's misleading or

137
00:04:52,160 --> 00:04:54,720
confusing

138
00:04:54,720 --> 00:04:56,639
now rendering functions and this is just

139
00:04:56,639 --> 00:04:58,720
a list of some of them are

140
00:04:58,720 --> 00:05:00,800
allowing allow you to kind of group your

141
00:05:00,800 --> 00:05:02,240
data differently

142
00:05:02,240 --> 00:05:04,720
uh you can do

143
00:05:04,720 --> 00:05:07,440
distributions ranks i get the first

144
00:05:07,440 --> 00:05:11,840
value lag which just means you skip over

145
00:05:12,080 --> 00:05:13,440
certain numbers before you start

146
00:05:13,440 --> 00:05:15,759
counting

147
00:05:15,759 --> 00:05:17,759
you can use that with lead

148
00:05:17,759 --> 00:05:19,840
you can get the nth value

149
00:05:19,840 --> 00:05:24,479
quartiles or end tiles percent ranks and

150
00:05:24,479 --> 00:05:26,240
other little functions and you'll see

151
00:05:26,240 --> 00:05:27,919
how these are useful in just a little

152
00:05:27,919 --> 00:05:30,000
bit

153
00:05:30,000 --> 00:05:32,639
now these use values for one or more

154
00:05:32,639 --> 00:05:36,800
rows to return a value for each row

155
00:05:36,800 --> 00:05:38,560
this is uh

156
00:05:38,560 --> 00:05:40,400
might seem like i'm splitting hairs here

157
00:05:40,400 --> 00:05:41,840
but you'll see what i'm talking about in

158
00:05:41,840 --> 00:05:43,360
a minute

159
00:05:43,360 --> 00:05:44,639
now

160
00:05:44,639 --> 00:05:47,039
let's proceed on to the next slide

161
00:05:47,039 --> 00:05:49,280
so here's some sample data we're going

162
00:05:49,280 --> 00:05:52,960
to create a simple table called w1

163
00:05:52,960 --> 00:05:54,320
it has

164
00:05:54,320 --> 00:05:57,039
four columns

165
00:05:57,039 --> 00:06:01,520
b c and d are all unsigned integers

166
00:06:01,520 --> 00:06:05,840
and a is a auto incrementing

167
00:06:05,840 --> 00:06:07,840
value that's going to be

168
00:06:07,840 --> 00:06:11,280
uh we're going to use as a as a

169
00:06:11,280 --> 00:06:13,120
as our main number here every time we

170
00:06:13,120 --> 00:06:16,560
insert a record into

171
00:06:16,720 --> 00:06:18,800
w1 it will automatically have a

172
00:06:18,800 --> 00:06:20,720
generated for us as you'll see over here

173
00:06:20,720 --> 00:06:22,639
we insert three records and a is

174
00:06:22,639 --> 00:06:24,960
generated as one two and three

175
00:06:24,960 --> 00:06:26,639
down below we actually insert the the

176
00:06:26,639 --> 00:06:27,759
data

177
00:06:27,759 --> 00:06:29,919
our first row is

178
00:06:29,919 --> 00:06:31,840
a value of 10

179
00:06:31,840 --> 00:06:36,000
100 and a thousand for b c and d

180
00:06:36,000 --> 00:06:38,160
and so on so that's some very simple

181
00:06:38,160 --> 00:06:39,440
data

182
00:06:39,440 --> 00:06:41,360
let's do some analysis on this and this

183
00:06:41,360 --> 00:06:43,440
will show you how you can basically step

184
00:06:43,440 --> 00:06:45,360
on your own feet and trip yourself

185
00:06:45,360 --> 00:06:47,680
we're going to select all the columns

186
00:06:47,680 --> 00:06:49,199
from our table

187
00:06:49,199 --> 00:06:50,639
we're going to sum up

188
00:06:50,639 --> 00:06:52,560
columns a and b

189
00:06:52,560 --> 00:06:54,319
and we're going to nickname that a and b

190
00:06:54,319 --> 00:06:57,440
which you see down here from the table

191
00:06:57,440 --> 00:06:59,440
now if you look at this

192
00:06:59,440 --> 00:07:01,120
and you're paying attention and you had

193
00:07:01,120 --> 00:07:03,199
some caffeine in your system

194
00:07:03,199 --> 00:07:04,319
you're going to see this first row it's

195
00:07:04,319 --> 00:07:05,520
going to say

196
00:07:05,520 --> 00:07:06,800
a's 1

197
00:07:06,800 --> 00:07:10,560
b is 10 and we got a value of 66.

198
00:07:10,560 --> 00:07:12,720
hopefully you notice that well what went

199
00:07:12,720 --> 00:07:14,479
on there

200
00:07:14,479 --> 00:07:17,199
well what happened is we took

201
00:07:17,199 --> 00:07:19,759
all our three rows and the three values

202
00:07:19,759 --> 00:07:22,639
for a and the three values for b

203
00:07:22,639 --> 00:07:24,000
and put them together and that ends up

204
00:07:24,000 --> 00:07:27,039
being 66. uh this is

205
00:07:27,039 --> 00:07:29,520
uh where you can often mislead yourself

206
00:07:29,520 --> 00:07:32,960
and not get the numbers you want

207
00:07:32,960 --> 00:07:34,000
now

208
00:07:34,000 --> 00:07:35,520
looking this carefully

209
00:07:35,520 --> 00:07:37,120
you'd say well a

210
00:07:37,120 --> 00:07:39,520
is 1 b is 10 so

211
00:07:39,520 --> 00:07:42,000
it should be 11 why is it 66

212
00:07:42,000 --> 00:07:44,879
well the computer or the the database

213
00:07:44,879 --> 00:07:46,400
server in this case

214
00:07:46,400 --> 00:07:48,240
uh did not know that you when you were

215
00:07:48,240 --> 00:07:50,160
summing these up that you just wanted to

216
00:07:50,160 --> 00:07:54,240
do each of the rows by itself

217
00:07:54,319 --> 00:07:55,840
and because your intentions weren't

218
00:07:55,840 --> 00:07:57,440
clear it assumed you knew what you're

219
00:07:57,440 --> 00:07:59,840
asking for

220
00:08:00,639 --> 00:08:03,440
now let's work with the group by

221
00:08:03,440 --> 00:08:04,400
function

222
00:08:04,400 --> 00:08:05,440
uh what we're going to do is we're going

223
00:08:05,440 --> 00:08:07,440
to run the same query but here we're

224
00:08:07,440 --> 00:08:09,520
going to group by the values of a so

225
00:08:09,520 --> 00:08:13,280
everything that's for a uh related to

226
00:08:13,280 --> 00:08:14,720
the row

227
00:08:14,720 --> 00:08:17,199
for each row is going to be used so it's

228
00:08:17,199 --> 00:08:20,160
going to take the sum of a and b

229
00:08:20,160 --> 00:08:22,800
for the first record and sum that this

230
00:08:22,800 --> 00:08:24,560
is probably what we wanted with the

231
00:08:24,560 --> 00:08:25,440
first

232
00:08:25,440 --> 00:08:27,919
first query but as you can see it's easy

233
00:08:27,919 --> 00:08:30,800
to misdirect yourself

234
00:08:30,800 --> 00:08:33,360
now let's do a new data set

235
00:08:33,360 --> 00:08:35,440
we're going to have a

236
00:08:35,440 --> 00:08:38,080
table where we have id numbers again

237
00:08:38,080 --> 00:08:40,399
we're going to have prices and

238
00:08:40,399 --> 00:08:42,399
for each id number they're either in

239
00:08:42,399 --> 00:08:44,959
warehouse one or warehouse two and they

240
00:08:44,959 --> 00:08:48,640
come from vendor one or two

241
00:08:49,440 --> 00:08:50,480
now

242
00:08:50,480 --> 00:08:52,720
if we select our warehouses and we're

243
00:08:52,720 --> 00:08:54,480
subbing the price

244
00:08:54,480 --> 00:08:56,399
from our table that we created and we

245
00:08:56,399 --> 00:08:58,160
want to figure out what the values are

246
00:08:58,160 --> 00:09:01,120
with the warehouse we can do that

247
00:09:01,120 --> 00:09:03,440
now if we add with roll up it will

248
00:09:03,440 --> 00:09:05,440
actually give us the sum

249
00:09:05,440 --> 00:09:06,880
of the sum

250
00:09:06,880 --> 00:09:09,040
so for warehouse one the sum of all the

251
00:09:09,040 --> 00:09:12,160
items in there is 13.59

252
00:09:12,160 --> 00:09:13,680
uh the sum of all the values in

253
00:09:13,680 --> 00:09:16,240
warehouse two is 99 cents

254
00:09:16,240 --> 00:09:19,519
or 99 whatever units freezing and then

255
00:09:19,519 --> 00:09:21,360
you get the total price of the 99 plus

256
00:09:21,360 --> 00:09:24,240
13 15 works out of 1458

257
00:09:24,240 --> 00:09:26,399
but when we roll up stuff you'll see

258
00:09:26,399 --> 00:09:29,519
that we get this lovely null value

259
00:09:29,519 --> 00:09:31,279
for those who aren't used to databases

260
00:09:31,279 --> 00:09:34,320
in the early days they wanted to use

261
00:09:34,320 --> 00:09:37,200
binary logic so one would say something

262
00:09:37,200 --> 00:09:38,720
was there zero would say something

263
00:09:38,720 --> 00:09:40,480
wasn't there and they say well how do

264
00:09:40,480 --> 00:09:42,160
you notate the stuff for your missing

265
00:09:42,160 --> 00:09:44,959
data the stuff we don't know uh the

266
00:09:44,959 --> 00:09:46,959
unknown unknowns so they came up with

267
00:09:46,959 --> 00:09:49,200
the idea of a third set of logic called

268
00:09:49,200 --> 00:09:50,800
null which causes its own set of

269
00:09:50,800 --> 00:09:52,000
confusions

270
00:09:52,000 --> 00:09:53,440
and unfortunately databases tend to

271
00:09:53,440 --> 00:09:55,120
throw nulls like this

272
00:09:55,120 --> 00:09:56,800
when they don't have

273
00:09:56,800 --> 00:09:59,200
something else they can put in there so

274
00:09:59,200 --> 00:10:01,200
in this case if you're not used to

275
00:10:01,200 --> 00:10:02,720
databases

276
00:10:02,720 --> 00:10:04,320
you do all the sums you get the numbers

277
00:10:04,320 --> 00:10:05,920
that you're happy with but this null

278
00:10:05,920 --> 00:10:08,560
will throw you

279
00:10:09,279 --> 00:10:11,519
so be careful that

280
00:10:11,519 --> 00:10:12,800
now

281
00:10:12,800 --> 00:10:14,079
here's another

282
00:10:14,079 --> 00:10:15,519
uh

283
00:10:15,519 --> 00:10:16,959
similar thing we're going to sum the

284
00:10:16,959 --> 00:10:19,360
price and we're going to group it by

285
00:10:19,360 --> 00:10:22,560
vendor instead of by warehouse

286
00:10:22,560 --> 00:10:24,399
and

287
00:10:24,399 --> 00:10:26,640
some results

288
00:10:26,640 --> 00:10:28,560
now if you're used to this it's great if

289
00:10:28,560 --> 00:10:30,320
you're not used to this it's bad if

290
00:10:30,320 --> 00:10:33,040
you're using some sort of data analytic

291
00:10:33,040 --> 00:10:34,880
package that's not used to this it's

292
00:10:34,880 --> 00:10:37,360
going to skew your results

293
00:10:37,360 --> 00:10:39,920
and once again null is confusing

294
00:10:39,920 --> 00:10:41,519
make sure you understand that null means

295
00:10:41,519 --> 00:10:43,360
that you don't have a value to put in

296
00:10:43,360 --> 00:10:45,600
there

297
00:10:45,760 --> 00:10:46,640
so

298
00:10:46,640 --> 00:10:48,399
wondering functions let me warn you

299
00:10:48,399 --> 00:10:49,920
again they are difficult you have to

300
00:10:49,920 --> 00:10:51,440
practice with them

301
00:10:51,440 --> 00:10:53,200
if you really want to build competence

302
00:10:53,200 --> 00:10:55,279
and understanding you need to work with

303
00:10:55,279 --> 00:10:56,720
them for a while

304
00:10:56,720 --> 00:10:59,440
and if you panic at first don't worry

305
00:10:59,440 --> 00:11:02,000
about it they are learned skill uh it's

306
00:11:02,000 --> 00:11:03,600
it's not like

307
00:11:03,600 --> 00:11:07,600
uh learning how to play a violin um

308
00:11:07,600 --> 00:11:09,600
we're

309
00:11:09,600 --> 00:11:10,880
where you actually need some innate

310
00:11:10,880 --> 00:11:13,920
talent to do it this just takes a lot of

311
00:11:13,920 --> 00:11:16,880
sticking to it and working through it

312
00:11:16,880 --> 00:11:18,240
so

313
00:11:18,240 --> 00:11:19,440
if you're used to

314
00:11:19,440 --> 00:11:21,519
structured query language

315
00:11:21,519 --> 00:11:24,160
the first thing you'll notice about

316
00:11:24,160 --> 00:11:29,200
windowing functions is the keyword over

317
00:11:29,200 --> 00:11:31,920
now in this case we're going to

318
00:11:31,920 --> 00:11:33,200
select

319
00:11:33,200 --> 00:11:36,240
year country product profit

320
00:11:36,240 --> 00:11:38,079
we're going to sum the profit in two

321
00:11:38,079 --> 00:11:39,920
different locations here

322
00:11:39,920 --> 00:11:42,240
and the first one we're going to sum

323
00:11:42,240 --> 00:11:44,320
over and the parenthesis here means

324
00:11:44,320 --> 00:11:45,839
everything where it's empty it means

325
00:11:45,839 --> 00:11:48,160
everything this is total profit over all

326
00:11:48,160 --> 00:11:51,120
the columns and then we also sum over

327
00:11:51,120 --> 00:11:53,440
a partition by country

328
00:11:53,440 --> 00:11:55,680
we're going to call that country profit

329
00:11:55,680 --> 00:11:57,440
and if you look at the

330
00:11:57,440 --> 00:12:00,079
first three lines of this table

331
00:12:00,079 --> 00:12:00,800
uh

332
00:12:00,800 --> 00:12:02,000
the year

333
00:12:02,000 --> 00:12:04,399
2000 2000 2001 from the country of

334
00:12:04,399 --> 00:12:05,440
finland

335
00:12:05,440 --> 00:12:07,600
we have three products sold a computer

336
00:12:07,600 --> 00:12:09,279
and two phones

337
00:12:09,279 --> 00:12:12,959
the total profit is the sum

338
00:12:12,959 --> 00:12:14,079
of

339
00:12:14,079 --> 00:12:16,800
everything in the profit column so over

340
00:12:16,800 --> 00:12:19,200
means everything so everything in that

341
00:12:19,200 --> 00:12:22,240
column is put up there so if you add up

342
00:12:22,240 --> 00:12:23,040
all

343
00:12:23,040 --> 00:12:24,399
this

344
00:12:24,399 --> 00:12:27,519
you end up with 75.35

345
00:12:27,519 --> 00:12:29,279
now if you just want by partitioning by

346
00:12:29,279 --> 00:12:32,160
the country you get the value of 1610

347
00:12:32,160 --> 00:12:35,120
which is our 1500 for the computer

348
00:12:35,120 --> 00:12:38,560
110 for the two phones and

349
00:12:38,560 --> 00:12:40,480
there you go there's what the profit was

350
00:12:40,480 --> 00:12:43,680
from the country of finland

351
00:12:44,880 --> 00:12:47,040
i'm going to apologize for examples i

352
00:12:47,040 --> 00:12:50,160
have to make them as clear as i can

353
00:12:50,160 --> 00:12:51,519
for a lot of folks who are used to this

354
00:12:51,519 --> 00:12:54,480
this is grass vast over simplification

355
00:12:54,480 --> 00:12:56,240
for those of you who aren't used to it

356
00:12:56,240 --> 00:12:58,399
i'm trying to make them as obvious as i

357
00:12:58,399 --> 00:12:59,360
can

358
00:12:59,360 --> 00:13:01,519
now let's go over the explanation again

359
00:13:01,519 --> 00:13:03,839
well the first column we had some profit

360
00:13:03,839 --> 00:13:05,279
over

361
00:13:05,279 --> 00:13:07,680
the over clause is empty which treats

362
00:13:07,680 --> 00:13:10,399
the entire set of rows as a partition

363
00:13:10,399 --> 00:13:13,120
it's a global for that column

364
00:13:13,120 --> 00:13:15,120
now the second over we're going to

365
00:13:15,120 --> 00:13:17,760
partition by country so we actually

366
00:13:17,760 --> 00:13:20,240
break it down by those rows we get more

367
00:13:20,240 --> 00:13:22,000
granularity we can direct the

368
00:13:22,000 --> 00:13:23,680
granularity

369
00:13:23,680 --> 00:13:25,760
so you start defining how you partition

370
00:13:25,760 --> 00:13:28,320
your data

371
00:13:28,320 --> 00:13:30,480
okay now i'll take a look at rank and

372
00:13:30,480 --> 00:13:32,720
dense rank

373
00:13:32,720 --> 00:13:35,920
we're going to take this table table

374
00:13:35,920 --> 00:13:36,720
here

375
00:13:36,720 --> 00:13:40,959
uh the value of x has two zeros one two

376
00:13:40,959 --> 00:13:43,199
two threes and a four

377
00:13:43,199 --> 00:13:45,440
and when we go to do

378
00:13:45,440 --> 00:13:45,760
um

379
00:13:45,760 --> 00:13:47,120
[Music]

380
00:13:47,120 --> 00:13:48,480
our selection we're first i'm going to

381
00:13:48,480 --> 00:13:49,920
ask for is

382
00:13:49,920 --> 00:13:52,800
row number which is a window function

383
00:13:52,800 --> 00:13:54,720
and we're going to

384
00:13:54,720 --> 00:13:57,040
order it by x

385
00:13:57,040 --> 00:13:58,800
we're going to call that row number

386
00:13:58,800 --> 00:14:01,440
so our first value that we get this zero

387
00:14:01,440 --> 00:14:03,920
here comes over here as a value zero

388
00:14:03,920 --> 00:14:05,920
that's our first one we pull out now

389
00:14:05,920 --> 00:14:08,000
databases you sometimes get the data

390
00:14:08,000 --> 00:14:10,320
coming out um as it's pulled off the

391
00:14:10,320 --> 00:14:12,000
disk not in the way it was written down

392
00:14:12,000 --> 00:14:13,600
or any order that you set up unless you

393
00:14:13,600 --> 00:14:15,360
specify it

394
00:14:15,360 --> 00:14:16,480
so

395
00:14:16,480 --> 00:14:18,320
in this case our row number and rank

396
00:14:18,320 --> 00:14:20,480
number are the same

397
00:14:20,480 --> 00:14:22,639
we read some more rows and we come down

398
00:14:22,639 --> 00:14:23,519
here

399
00:14:23,519 --> 00:14:25,519
second row the value is zero

400
00:14:25,519 --> 00:14:27,600
its rank is one because

401
00:14:27,600 --> 00:14:29,760
that's the same value

402
00:14:29,760 --> 00:14:32,639
our dense rank is also one now this is

403
00:14:32,639 --> 00:14:35,040
where it gets a little odd now our first

404
00:14:35,040 --> 00:14:36,160
value that we bring that's different

405
00:14:36,160 --> 00:14:37,839
than a zero is a two

406
00:14:37,839 --> 00:14:39,680
this is our row number three this is the

407
00:14:39,680 --> 00:14:40,959
third

408
00:14:40,959 --> 00:14:43,279
row out of the of the table

409
00:14:43,279 --> 00:14:46,079
its rank is three you notice that these

410
00:14:46,079 --> 00:14:48,720
two are tied so you have two first place

411
00:14:48,720 --> 00:14:50,880
and then the bronze medalist

412
00:14:50,880 --> 00:14:53,760
two goals one silver one bronze

413
00:14:53,760 --> 00:14:56,399
and the dense rank is

414
00:14:56,399 --> 00:14:58,560
two well why is that well it's the

415
00:14:58,560 --> 00:14:59,920
second

416
00:14:59,920 --> 00:15:02,639
value that we have here

417
00:15:02,639 --> 00:15:04,320
and if we go down to

418
00:15:04,320 --> 00:15:05,760
three

419
00:15:05,760 --> 00:15:07,760
our two values of three we have two

420
00:15:07,760 --> 00:15:09,040
different rows so we have two different

421
00:15:09,040 --> 00:15:12,720
rows there once again our rank is

422
00:15:12,720 --> 00:15:13,680
four

423
00:15:13,680 --> 00:15:15,600
so we've skipped over

424
00:15:15,600 --> 00:15:17,839
over two these two are tied for

425
00:15:17,839 --> 00:15:20,000
fourth place and our dense rank is three

426
00:15:20,000 --> 00:15:21,760
this is the third unique set of values

427
00:15:21,760 --> 00:15:24,240
we've had

428
00:15:25,279 --> 00:15:27,920
now this is kind of confusing uh

429
00:15:27,920 --> 00:15:29,519
something to play with

430
00:15:29,519 --> 00:15:30,800
so

431
00:15:30,800 --> 00:15:32,560
once again

432
00:15:32,560 --> 00:15:33,839
our

433
00:15:33,839 --> 00:15:36,320
if we select the row number as the row

434
00:15:36,320 --> 00:15:39,360
number the rank over everything as the

435
00:15:39,360 --> 00:15:42,240
rank and the dense rank once again you

436
00:15:42,240 --> 00:15:44,079
see how this breaks down

437
00:15:44,079 --> 00:15:46,720
our first value that comes out

438
00:15:46,720 --> 00:15:49,360
has rank of one second value that comes

439
00:15:49,360 --> 00:15:51,279
out has

440
00:15:51,279 --> 00:15:53,839
a dense rank of second but its overall

441
00:15:53,839 --> 00:15:56,000
ranking is third so once again the two

442
00:15:56,000 --> 00:15:57,360
gold medalists and then the bronze

443
00:15:57,360 --> 00:15:59,920
medalists

444
00:16:00,160 --> 00:16:02,000
now you can add modifiers to window

445
00:16:02,000 --> 00:16:03,279
definitions

446
00:16:03,279 --> 00:16:06,000
on however you want to use them

447
00:16:06,000 --> 00:16:08,399
like in this example we're going to

448
00:16:08,399 --> 00:16:09,360
select

449
00:16:09,360 --> 00:16:12,720
the first value of year

450
00:16:12,720 --> 00:16:15,199
and we're going to order that by year

451
00:16:15,199 --> 00:16:16,560
ascending

452
00:16:16,560 --> 00:16:18,880
and the next column we're going to get

453
00:16:18,880 --> 00:16:20,800
the first value of year

454
00:16:20,800 --> 00:16:23,600
over our window but we're going

455
00:16:23,600 --> 00:16:25,199
instead of ascending we're going to

456
00:16:25,199 --> 00:16:26,639
descend

457
00:16:26,639 --> 00:16:28,800
so you can add modifiers to your window

458
00:16:28,800 --> 00:16:30,639
function remember over defines the

459
00:16:30,639 --> 00:16:33,360
partition

460
00:16:34,320 --> 00:16:36,399
and what if you create a contradiction

461
00:16:36,399 --> 00:16:38,160
when you're doing this in this example

462
00:16:38,160 --> 00:16:40,079
we're going to get the first value

463
00:16:40,079 --> 00:16:42,240
and we're going to

464
00:16:42,240 --> 00:16:43,759
uh

465
00:16:43,759 --> 00:16:45,680
order by name

466
00:16:45,680 --> 00:16:46,720
so

467
00:16:46,720 --> 00:16:48,560
that's what we're going to do our

468
00:16:48,560 --> 00:16:50,720
definition is we're going to

469
00:16:50,720 --> 00:16:53,440
use a window called w but

470
00:16:53,440 --> 00:16:55,839
that w this window here

471
00:16:55,839 --> 00:16:58,880
this is an alias for the window here we

472
00:16:58,880 --> 00:17:00,880
already set up as order by date

473
00:17:00,880 --> 00:17:02,160
so if you set up something that

474
00:17:02,160 --> 00:17:05,119
contradicts in your parameters it will

475
00:17:05,119 --> 00:17:08,799
tell you that that isn't allowed

476
00:17:09,760 --> 00:17:12,240
okay here's another data set

477
00:17:12,240 --> 00:17:14,240
we're going to create a table

478
00:17:14,240 --> 00:17:15,679
we're going to call it x we're going to

479
00:17:15,679 --> 00:17:17,439
have one column called x and then once

480
00:17:17,439 --> 00:17:19,119
again as a serial field

481
00:17:19,119 --> 00:17:22,079
and we're going to insert insert in 1 2

482
00:17:22,079 --> 00:17:26,319
3 4 5 6 7 8 9 and 10

483
00:17:26,319 --> 00:17:29,120
null values which will tell the server

484
00:17:29,120 --> 00:17:31,919
go ahead and insert 10 rows and auto

485
00:17:31,919 --> 00:17:34,559
increment this so we have our 10 values

486
00:17:34,559 --> 00:17:37,039
of x

487
00:17:37,360 --> 00:17:40,320
now once again when we define our

488
00:17:40,320 --> 00:17:43,919
partition for the windowing function

489
00:17:43,919 --> 00:17:46,480
what goes in the perimeter is what

490
00:17:46,480 --> 00:17:48,480
defines what partitions the data the

491
00:17:48,480 --> 00:17:51,440
granularity of it and we say over with

492
00:17:51,440 --> 00:17:53,440
just empty parentheses

493
00:17:53,440 --> 00:17:54,960
that means the entire thing in the

494
00:17:54,960 --> 00:17:57,520
column so if we're

495
00:17:57,520 --> 00:17:58,840
doing it

496
00:17:58,840 --> 00:18:02,400
on on the entire table

497
00:18:02,400 --> 00:18:04,559
when we do

498
00:18:04,559 --> 00:18:07,039
count x over everything

499
00:18:07,039 --> 00:18:08,640
we're going to

500
00:18:08,640 --> 00:18:10,240
get

501
00:18:10,240 --> 00:18:13,440
10 here well why is that well there's 10

502
00:18:13,440 --> 00:18:15,679
different entries here

503
00:18:15,679 --> 00:18:18,080
now if we sum up all this the 10 9 8 7 6

504
00:18:18,080 --> 00:18:22,240
5 4 3 2 1 the value ends up being 55

505
00:18:22,240 --> 00:18:23,840
so

506
00:18:23,840 --> 00:18:25,679
here's basically

507
00:18:25,679 --> 00:18:27,919
we're counting all the numbers of

508
00:18:27,919 --> 00:18:29,840
columns we have and here we're summing

509
00:18:29,840 --> 00:18:32,639
all the columns

510
00:18:34,000 --> 00:18:35,440
now

511
00:18:35,440 --> 00:18:37,679
is the value of 55

512
00:18:37,679 --> 00:18:39,520
a piece of useful information we can use

513
00:18:39,520 --> 00:18:41,440
is it something that you can give off to

514
00:18:41,440 --> 00:18:43,200
manufacturer marketing to have them make

515
00:18:43,200 --> 00:18:46,799
a valuable decision probably not

516
00:18:46,799 --> 00:18:48,799
now here's another example we're going

517
00:18:48,799 --> 00:18:51,039
to take our same table

518
00:18:51,039 --> 00:18:54,320
we're going to sum all the values of x

519
00:18:54,320 --> 00:18:56,480
and call that sum

520
00:18:56,480 --> 00:18:58,720
and what we're going to do is we're

521
00:18:58,720 --> 00:19:01,280
going to create a window

522
00:19:01,280 --> 00:19:03,440
and we're going to order it by that

523
00:19:03,440 --> 00:19:07,440
value of x so our first record comes in

524
00:19:07,440 --> 00:19:10,080
the value is 1 we sum that value we get

525
00:19:10,080 --> 00:19:11,440
our value of 1.

526
00:19:11,440 --> 00:19:13,760
second row is red

527
00:19:13,760 --> 00:19:16,720
value column number 2

528
00:19:16,720 --> 00:19:18,960
which has a value 2 and we're going to

529
00:19:18,960 --> 00:19:20,320
sum

530
00:19:20,320 --> 00:19:23,280
the previous value plus this value

531
00:19:23,280 --> 00:19:24,880
this might have some

532
00:19:24,880 --> 00:19:27,360
use for you in some other

533
00:19:27,360 --> 00:19:29,120
application

534
00:19:29,120 --> 00:19:30,799
now there are some words and phrasing

535
00:19:30,799 --> 00:19:32,880
that are unique to windowing functions

536
00:19:32,880 --> 00:19:35,039
that don't make a lot of sense to get

537
00:19:35,039 --> 00:19:36,720
used to using them

538
00:19:36,720 --> 00:19:40,000
and one of those sets is rose unbounded

539
00:19:40,000 --> 00:19:41,919
preceding

540
00:19:41,919 --> 00:19:44,320
so in this example we're selecting x

541
00:19:44,320 --> 00:19:46,559
which is our 1 through 10 the sum of

542
00:19:46,559 --> 00:19:48,400
those values

543
00:19:48,400 --> 00:19:50,799
once again as some

544
00:19:50,799 --> 00:19:52,880
but what we're going to do is we're

545
00:19:52,880 --> 00:19:54,720
going to

546
00:19:54,720 --> 00:19:55,919
sum

547
00:19:55,919 --> 00:19:58,160
the rows that we have with

548
00:19:58,160 --> 00:20:00,240
any ones that proceed so this is very

549
00:20:00,240 --> 00:20:02,880
much the same thing as what you just saw

550
00:20:02,880 --> 00:20:03,760
but

551
00:20:03,760 --> 00:20:06,799
it's a different phraseology so

552
00:20:06,799 --> 00:20:07,919
x

553
00:20:07,919 --> 00:20:10,000
is one the sum is one

554
00:20:10,000 --> 00:20:13,280
the new x is two so two plus one is

555
00:20:13,280 --> 00:20:14,240
three

556
00:20:14,240 --> 00:20:16,080
the third thing three plus two plus one

557
00:20:16,080 --> 00:20:17,520
is six

558
00:20:17,520 --> 00:20:18,559
so

559
00:20:18,559 --> 00:20:20,080
you already knew rose unbounded

560
00:20:20,080 --> 00:20:21,679
proceeding without actually knowing any

561
00:20:21,679 --> 00:20:25,120
new rows and battling proceeding

562
00:20:26,640 --> 00:20:27,760
now

563
00:20:27,760 --> 00:20:29,679
something else you can do to define your

564
00:20:29,679 --> 00:20:32,640
partition is to limit its scope

565
00:20:32,640 --> 00:20:34,480
so like you're just looking uh comparing

566
00:20:34,480 --> 00:20:36,240
data from two different quarters or two

567
00:20:36,240 --> 00:20:37,440
different years

568
00:20:37,440 --> 00:20:39,679
uh in this example we're going to select

569
00:20:39,679 --> 00:20:41,600
x and the sum of x

570
00:20:41,600 --> 00:20:43,440
as we've done before but now we're

571
00:20:43,440 --> 00:20:45,200
defining our partition is rows between

572
00:20:45,200 --> 00:20:47,600
one proceeding in the current row

573
00:20:47,600 --> 00:20:50,159
so our first record we read in the value

574
00:20:50,159 --> 00:20:53,440
of x is one and the sum of that is one

575
00:20:53,440 --> 00:20:55,760
the second run second row we read in the

576
00:20:55,760 --> 00:20:59,280
values x and the sum of the

577
00:20:59,280 --> 00:21:01,600
current row and the preceding row is 2

578
00:21:01,600 --> 00:21:04,640
plus 1 so the sum is 3.

579
00:21:04,640 --> 00:21:06,480
now the third row

580
00:21:06,480 --> 00:21:08,720
we're going to read in a value of x

581
00:21:08,720 --> 00:21:11,120
and the value of that is

582
00:21:11,120 --> 00:21:12,640
the current row

583
00:21:12,640 --> 00:21:14,240
and the preceding row

584
00:21:14,240 --> 00:21:16,880
so instead of uh we're in the past where

585
00:21:16,880 --> 00:21:18,400
we've just put them all together

586
00:21:18,400 --> 00:21:20,159
anything to be previously we're just

587
00:21:20,159 --> 00:21:21,280
gonna

588
00:21:21,280 --> 00:21:24,559
sum these two rows

589
00:21:26,720 --> 00:21:29,120
and you can also uh reach beyond your

590
00:21:29,120 --> 00:21:31,360
current row which is rather unique to

591
00:21:31,360 --> 00:21:32,960
when doing functions

592
00:21:32,960 --> 00:21:35,360
so in this example we're doing our

593
00:21:35,360 --> 00:21:37,840
summing of x again but we're saying now

594
00:21:37,840 --> 00:21:39,840
rows between one proceeding and one

595
00:21:39,840 --> 00:21:41,200
following

596
00:21:41,200 --> 00:21:43,200
so we're reading the value of x and

597
00:21:43,200 --> 00:21:45,520
we're summing the rows between the the

598
00:21:45,520 --> 00:21:46,960
one proceeding while there's none

599
00:21:46,960 --> 00:21:49,120
proceeding and one following well we can

600
00:21:49,120 --> 00:21:50,559
grab the one following but there's none

601
00:21:50,559 --> 00:21:54,400
proceeding so one plus two equals three

602
00:21:54,400 --> 00:21:56,159
if we go to the next row

603
00:21:56,159 --> 00:21:58,960
we're going to take the row proceeding

604
00:21:58,960 --> 00:22:00,960
which has a value of 1 and the row

605
00:22:00,960 --> 00:22:02,799
following which is 3

606
00:22:02,799 --> 00:22:04,799
and put these three rows together which

607
00:22:04,799 --> 00:22:08,400
comes up to a value of 6.

608
00:22:10,400 --> 00:22:12,720
now with winning functions you define a

609
00:22:12,720 --> 00:22:15,360
frame of how you're going to

610
00:22:15,360 --> 00:22:17,440
partition your data

611
00:22:17,440 --> 00:22:19,280
if you have unbounding proceeding that

612
00:22:19,280 --> 00:22:21,600
means everything from the current row to

613
00:22:21,600 --> 00:22:23,679
when you started reading that row and if

614
00:22:23,679 --> 00:22:26,080
you do unbounded following that's from

615
00:22:26,080 --> 00:22:28,480
your current row to the last row in the

616
00:22:28,480 --> 00:22:29,840
table

617
00:22:29,840 --> 00:22:31,600
and you can also say

618
00:22:31,600 --> 00:22:34,720
n rows preceding or n rows after the

619
00:22:34,720 --> 00:22:36,480
current row

620
00:22:36,480 --> 00:22:38,480
i love this little diagram here because

621
00:22:38,480 --> 00:22:40,960
it shows you visually what's going on so

622
00:22:40,960 --> 00:22:42,559
if you do unbounded proceeding to

623
00:22:42,559 --> 00:22:44,799
unbounded following that's everything in

624
00:22:44,799 --> 00:22:46,240
the column there if you remember right

625
00:22:46,240 --> 00:22:49,600
that's just an empty center set of

626
00:22:49,600 --> 00:22:51,840
of parentheses there

627
00:22:51,840 --> 00:22:54,400
okay let's look at another data set

628
00:22:54,400 --> 00:22:55,840
if we're going to select everything from

629
00:22:55,840 --> 00:22:58,400
our employee table where we have

630
00:22:58,400 --> 00:23:02,320
mo larry curley shemp joe and ted

631
00:23:02,320 --> 00:23:03,840
and we put them

632
00:23:03,840 --> 00:23:05,679
in different departments and different

633
00:23:05,679 --> 00:23:07,200
pays

634
00:23:07,200 --> 00:23:08,880
you're going to see how analytics can

635
00:23:08,880 --> 00:23:12,159
work on different pay groups

636
00:23:12,159 --> 00:23:13,600
so

637
00:23:13,600 --> 00:23:15,120
let's select the name the department the

638
00:23:15,120 --> 00:23:17,120
pay the sum of the pay

639
00:23:17,120 --> 00:23:18,559
and we're going to partition this by

640
00:23:18,559 --> 00:23:19,840
department

641
00:23:19,840 --> 00:23:22,640
so mo larry and curly all are in

642
00:23:22,640 --> 00:23:24,320
department one

643
00:23:24,320 --> 00:23:26,559
they all get paid a hundred

644
00:23:26,559 --> 00:23:28,480
units of whatever we're doing and the

645
00:23:28,480 --> 00:23:31,840
sum for the department is three hundred

646
00:23:31,840 --> 00:23:32,720
now

647
00:23:32,720 --> 00:23:34,799
if we look at the department two chem

648
00:23:34,799 --> 00:23:38,080
joe and ted uh shrimp gets paid 110 joe

649
00:23:38,080 --> 00:23:40,640
gets paid 50 ted gets paid eight and

650
00:23:40,640 --> 00:23:43,520
that sums up to 248 so this is how we're

651
00:23:43,520 --> 00:23:47,120
partitioning by department

652
00:23:47,600 --> 00:23:50,240
now if we partition by department and

653
00:23:50,240 --> 00:23:52,240
order by pay

654
00:23:52,240 --> 00:23:53,840
maybe you want to know the lowest paid

655
00:23:53,840 --> 00:23:55,760
person in each department

656
00:23:55,760 --> 00:23:57,600
uh you can do that

657
00:23:57,600 --> 00:23:59,679
if you look at department one

658
00:23:59,679 --> 00:24:01,279
they all get paid the same so it doesn't

659
00:24:01,279 --> 00:24:03,360
really make a difference department 2

660
00:24:03,360 --> 00:24:06,880
however ted here remember gets paid 50.

661
00:24:06,880 --> 00:24:08,640
so now we know he's the lowest paid

662
00:24:08,640 --> 00:24:10,960
person in his department and we know

663
00:24:10,960 --> 00:24:12,159
whoever

664
00:24:12,159 --> 00:24:14,080
this is down here i believe that shemp

665
00:24:14,080 --> 00:24:15,679
is the highest paid person in the

666
00:24:15,679 --> 00:24:18,679
department

667
00:24:18,880 --> 00:24:20,720
now you can use multiple windows if you

668
00:24:20,720 --> 00:24:21,600
want

669
00:24:21,600 --> 00:24:24,240
in this case

670
00:24:24,320 --> 00:24:25,919
we're using the

671
00:24:25,919 --> 00:24:28,080
the syntax of over w

672
00:24:28,080 --> 00:24:30,320
and down here we define the window w as

673
00:24:30,320 --> 00:24:32,559
being partitioned by department

674
00:24:32,559 --> 00:24:34,880
and we're also using over y which is

675
00:24:34,880 --> 00:24:37,039
row's unbounded preceding and current

676
00:24:37,039 --> 00:24:38,559
row

677
00:24:38,559 --> 00:24:39,840
so we're going to go out and get the

678
00:24:39,840 --> 00:24:41,600
department to pay the sum of the pay

679
00:24:41,600 --> 00:24:44,240
over w and the sum of the pay over y so

680
00:24:44,240 --> 00:24:46,000
first department one pays a hundred

681
00:24:46,000 --> 00:24:48,080
departmental summit is a hundred that's

682
00:24:48,080 --> 00:24:50,480
three hundred and

683
00:24:50,480 --> 00:24:52,880
our y which is row's unbounded

684
00:24:52,880 --> 00:24:54,880
proceeding the current row uh there's

685
00:24:54,880 --> 00:24:56,240
nothing proceeding so it's just the

686
00:24:56,240 --> 00:24:58,240
value of the current row

687
00:24:58,240 --> 00:25:02,159
uh second row we bring in the the uh the

688
00:25:02,159 --> 00:25:04,400
second row of data the department center

689
00:25:04,400 --> 00:25:07,039
again once again it's 300 and we now

690
00:25:07,039 --> 00:25:09,679
have the

691
00:25:09,679 --> 00:25:11,600
these two first pay

692
00:25:11,600 --> 00:25:13,520
columns

693
00:25:13,520 --> 00:25:15,360
sum together

694
00:25:15,360 --> 00:25:17,760
so we end up getting our value of

695
00:25:17,760 --> 00:25:19,440
of 200

696
00:25:19,440 --> 00:25:21,919
and if we go down yet another row you

697
00:25:21,919 --> 00:25:25,039
see how this all builds

698
00:25:27,679 --> 00:25:28,400
now

699
00:25:28,400 --> 00:25:32,480
when we get hat down here to the

700
00:25:32,799 --> 00:25:34,559
to this line here we get to department

701
00:25:34,559 --> 00:25:35,520
two

702
00:25:35,520 --> 00:25:37,520
uh the pay is 110

703
00:25:37,520 --> 00:25:39,360
the department pay

704
00:25:39,360 --> 00:25:41,919
some for the entire department's 248.

705
00:25:41,919 --> 00:25:43,760
but our total pay our total payroll to

706
00:25:43,760 --> 00:25:47,559
this point is 410

707
00:25:50,640 --> 00:25:52,080
right well sometimes you have to rank

708
00:25:52,080 --> 00:25:53,200
stuff

709
00:25:53,200 --> 00:25:55,440
if we're going to

710
00:25:55,440 --> 00:25:57,440
rank employees and we're going to order

711
00:25:57,440 --> 00:25:59,760
it by their id number

712
00:25:59,760 --> 00:26:01,360
we're going to

713
00:26:01,360 --> 00:26:02,320
since

714
00:26:02,320 --> 00:26:05,039
mo has the lowest id number

715
00:26:05,039 --> 00:26:09,120
we're going to be able to rank him first

716
00:26:09,120 --> 00:26:10,640
uh probably should be ranking by some

717
00:26:10,640 --> 00:26:12,799
other thing but sometimes businesses do

718
00:26:12,799 --> 00:26:14,320
stuff like that

719
00:26:14,320 --> 00:26:16,799
now once again ranking bid may not be

720
00:26:16,799 --> 00:26:19,039
something valuable may not be useful uh

721
00:26:19,039 --> 00:26:22,480
it probably has no quantitative

722
00:26:22,480 --> 00:26:24,400
reason for being but something's

723
00:26:24,400 --> 00:26:25,279
happened

724
00:26:25,279 --> 00:26:28,720
now let's rank them by pay

725
00:26:28,720 --> 00:26:30,320
descending

726
00:26:30,320 --> 00:26:31,120
so

727
00:26:31,120 --> 00:26:33,520
highest pay rank number one is good old

728
00:26:33,520 --> 00:26:36,320
champ and then we have

729
00:26:36,320 --> 00:26:37,679
three people

730
00:26:37,679 --> 00:26:40,000
who are motoring curly who all get paid

731
00:26:40,000 --> 00:26:42,480
a hundred so they're ranked as number

732
00:26:42,480 --> 00:26:44,640
two i would say in this kind of olympic

733
00:26:44,640 --> 00:26:46,320
medal situation

734
00:26:46,320 --> 00:26:49,039
now the

735
00:26:49,039 --> 00:26:53,440
third highest paid by a rate person is

736
00:26:53,440 --> 00:26:56,240
good old ted at 88.

737
00:26:56,240 --> 00:26:58,400
so

738
00:26:59,360 --> 00:27:01,840
as you see

739
00:27:02,159 --> 00:27:03,440
if you're doing dense rank it would

740
00:27:03,440 --> 00:27:05,039
probably it would be a little different

741
00:27:05,039 --> 00:27:06,960
but if we're ranking these by their

742
00:27:06,960 --> 00:27:08,240
their values

743
00:27:08,240 --> 00:27:10,799
10 ends up being the number five

744
00:27:10,799 --> 00:27:13,520
ranked person

745
00:27:13,840 --> 00:27:15,600
now

746
00:27:15,600 --> 00:27:17,840
let's

747
00:27:19,039 --> 00:27:21,120
come up with a percent rankage

748
00:27:21,120 --> 00:27:22,799
and we're going to once again order by

749
00:27:22,799 --> 00:27:24,480
id

750
00:27:24,480 --> 00:27:25,679
and

751
00:27:25,679 --> 00:27:26,880
when you

752
00:27:26,880 --> 00:27:28,799
take the

753
00:27:28,799 --> 00:27:30,080
uh

754
00:27:30,080 --> 00:27:33,279
entire pay base and

755
00:27:33,279 --> 00:27:34,559
do that by

756
00:27:34,559 --> 00:27:37,520
most pay of 100 you get something that's

757
00:27:37,520 --> 00:27:38,640
below

758
00:27:38,640 --> 00:27:40,799
what will be recognized by the server

759
00:27:40,799 --> 00:27:45,360
but if you add larry and mo together

760
00:27:45,360 --> 00:27:49,039
you get roughly 20 of the pay

761
00:27:49,039 --> 00:27:49,919
and

762
00:27:49,919 --> 00:27:53,279
uh adding in surely curly and shemp uh

763
00:27:53,279 --> 00:27:57,120
you end up with sixty percent of the pay

764
00:27:57,120 --> 00:27:58,320
so if they tell you that you have to

765
00:27:58,320 --> 00:27:59,440
trim

766
00:27:59,440 --> 00:28:00,720
uh

767
00:28:00,720 --> 00:28:02,480
ninety percent of your budget

768
00:28:02,480 --> 00:28:03,760
probably ted's the one that's going to

769
00:28:03,760 --> 00:28:06,399
fall out here

770
00:28:07,039 --> 00:28:08,159
now

771
00:28:08,159 --> 00:28:10,159
make sure you're using the proper

772
00:28:10,159 --> 00:28:12,559
partitioning to get data that's

773
00:28:12,559 --> 00:28:15,120
meaningful uh in this case you probably

774
00:28:15,120 --> 00:28:16,880
instead of ordering the id probably want

775
00:28:16,880 --> 00:28:20,799
to do it by their rank of pay

776
00:28:21,600 --> 00:28:23,600
so let's take a look at percentage rank

777
00:28:23,600 --> 00:28:24,799
by pay

778
00:28:24,799 --> 00:28:27,600
so we're going to select name and pay

779
00:28:27,600 --> 00:28:30,320
and get the percentage rank that we're

780
00:28:30,320 --> 00:28:33,039
going to nickname is percent rank and

781
00:28:33,039 --> 00:28:35,440
we're going to order by pay so

782
00:28:35,440 --> 00:28:38,640
this time uh joe being paid 50

783
00:28:38,640 --> 00:28:40,960
doesn't show up

784
00:28:40,960 --> 00:28:41,760
but

785
00:28:41,760 --> 00:28:43,520
ted

786
00:28:43,520 --> 00:28:46,320
is 20

787
00:28:46,799 --> 00:28:48,880
and

788
00:28:48,880 --> 00:28:52,399
as we add uh joe ted and mo together we

789
00:28:52,399 --> 00:28:54,559
have 40 percent of our overall pay are

790
00:28:54,559 --> 00:28:58,720
now represented in this table

791
00:28:58,720 --> 00:29:01,200
let's take this a little uh

792
00:29:01,200 --> 00:29:02,159
a little

793
00:29:02,159 --> 00:29:04,640
uh differently uh get the percentage

794
00:29:04,640 --> 00:29:06,880
rank we're going to order by pay and

795
00:29:06,880 --> 00:29:08,720
call that percentage rank

796
00:29:08,720 --> 00:29:10,399
and then we're going to rank people over

797
00:29:10,399 --> 00:29:12,880
by pay

798
00:29:12,880 --> 00:29:15,440
and we're going to rank them low to high

799
00:29:15,440 --> 00:29:17,600
so

800
00:29:18,080 --> 00:29:19,919
joe pay a 50

801
00:29:19,919 --> 00:29:21,279
doesn't have a percentage rank that

802
00:29:21,279 --> 00:29:23,520
shows up a meaningful value

803
00:29:23,520 --> 00:29:26,799
and he's our lowest person

804
00:29:26,799 --> 00:29:28,159
low to high

805
00:29:28,159 --> 00:29:30,240
and we go down to shemp who gets paid

806
00:29:30,240 --> 00:29:31,919
110

807
00:29:31,919 --> 00:29:34,960
or 110 units uh he's gonna

808
00:29:34,960 --> 00:29:36,480
be a hundred percent of our pay when you

809
00:29:36,480 --> 00:29:38,240
sum all these together and his rank is

810
00:29:38,240 --> 00:29:40,399
going to be number six

811
00:29:40,399 --> 00:29:42,480
now as i say using the three stooges

812
00:29:42,480 --> 00:29:44,320
here is kind of convoluted but i'm

813
00:29:44,320 --> 00:29:45,679
trying to give you an example of how the

814
00:29:45,679 --> 00:29:47,360
functions work at rather than actual

815
00:29:47,360 --> 00:29:48,960
usable

816
00:29:48,960 --> 00:29:50,880
um

817
00:29:50,880 --> 00:29:51,840
functions you're going to be able to use

818
00:29:51,840 --> 00:29:53,360
on your own data but we're getting a

819
00:29:53,360 --> 00:29:55,200
little closer there hold on there

820
00:29:55,200 --> 00:29:58,480
so if we rank over everything

821
00:29:58,480 --> 00:30:00,320
and we do a dense rank

822
00:30:00,320 --> 00:30:02,159
and a percentage rank

823
00:30:02,159 --> 00:30:04,399
uh we can get some more information

824
00:30:04,399 --> 00:30:06,240
about uh

825
00:30:06,240 --> 00:30:10,000
who who is the highest ranking person so

826
00:30:10,000 --> 00:30:13,039
shemp highest ranking and a pay of 110

827
00:30:13,039 --> 00:30:15,440
his dense ranking is one

828
00:30:15,440 --> 00:30:17,279
now

829
00:30:17,279 --> 00:30:20,880
mo larry and curley all get a paid 100

830
00:30:20,880 --> 00:30:23,520
and their dense rank is tied for second

831
00:30:23,520 --> 00:30:24,799
place

832
00:30:24,799 --> 00:30:26,880
and you can see that their percentage

833
00:30:26,880 --> 00:30:28,080
ranking

834
00:30:28,080 --> 00:30:31,199
is two percent

835
00:30:31,360 --> 00:30:33,279
when you put them all together

836
00:30:33,279 --> 00:30:35,440
now when you add in ted

837
00:30:35,440 --> 00:30:38,000
his rank is number five but his tent is

838
00:30:38,000 --> 00:30:38,799
dense

839
00:30:38,799 --> 00:30:41,840
or his uh

840
00:30:41,840 --> 00:30:43,600
rank is

841
00:30:43,600 --> 00:30:46,480
fifth since there is no

842
00:30:46,480 --> 00:30:47,919
third fourth

843
00:30:47,919 --> 00:30:50,240
third or fourth

844
00:30:50,240 --> 00:30:52,320
these guys time for second but the tenth

845
00:30:52,320 --> 00:30:55,520
rank is third

846
00:30:57,279 --> 00:30:59,200
now let's take a look at cumulative

847
00:30:59,200 --> 00:31:00,799
distributions

848
00:31:00,799 --> 00:31:03,760
once again we're going to

849
00:31:03,760 --> 00:31:06,399
order the percent rank by pay

850
00:31:06,399 --> 00:31:10,159
and all the other ones by by pay also

851
00:31:10,159 --> 00:31:10,960
so

852
00:31:10,960 --> 00:31:11,760
joe

853
00:31:11,760 --> 00:31:13,519
whose pay is 50

854
00:31:13,519 --> 00:31:15,039
doesn't show up high enough to be a

855
00:31:15,039 --> 00:31:17,120
percentage he's the lowest person from

856
00:31:17,120 --> 00:31:18,559
low to high

857
00:31:18,559 --> 00:31:20,799
his dense rankings lowest and his

858
00:31:20,799 --> 00:31:23,679
cumulative pay out of everybody

859
00:31:23,679 --> 00:31:24,880
uh

860
00:31:24,880 --> 00:31:26,240
of the entire payroll if you just paid

861
00:31:26,240 --> 00:31:27,760
him didn't pay anyone else you've paid

862
00:31:27,760 --> 00:31:30,880
16 percent of your total payroll due

863
00:31:30,880 --> 00:31:32,720
now if you pay

864
00:31:32,720 --> 00:31:34,799
ted and joe together your cumulative

865
00:31:34,799 --> 00:31:37,840
rank goes up to 33 percent

866
00:31:37,840 --> 00:31:39,840
and by the time you get down to schemp

867
00:31:39,840 --> 00:31:42,640
when you pay him your cumulative rank or

868
00:31:42,640 --> 00:31:44,399
the sum of all these together ends up to

869
00:31:44,399 --> 00:31:47,399
one

870
00:31:47,440 --> 00:31:50,080
calculating percentages

871
00:31:50,080 --> 00:31:52,879
if you want to

872
00:31:53,120 --> 00:31:54,640
to do some of that there are things you

873
00:31:54,640 --> 00:31:56,880
can do like using a rounding function

874
00:31:56,880 --> 00:32:00,000
we're going to take the amount of pay

875
00:32:00,000 --> 00:32:01,919
and over the sum of pay so that's the

876
00:32:01,919 --> 00:32:03,440
pay per person

877
00:32:03,440 --> 00:32:06,240
over the sum of all the pay over an

878
00:32:06,240 --> 00:32:07,600
entire column

879
00:32:07,600 --> 00:32:10,080
uh we're going to multiply that by a

880
00:32:10,080 --> 00:32:12,080
hundred and then just

881
00:32:12,080 --> 00:32:13,279
show the

882
00:32:13,279 --> 00:32:16,080
the right uh two places after the

883
00:32:16,080 --> 00:32:18,240
uh after the

884
00:32:18,240 --> 00:32:20,720
of the calculation call that percentage

885
00:32:20,720 --> 00:32:22,640
so shem

886
00:32:22,640 --> 00:32:24,960
has paid 110 units of whatever paying

887
00:32:24,960 --> 00:32:27,519
he's 20 over 20 percent of the entire

888
00:32:27,519 --> 00:32:28,640
payroll

889
00:32:28,640 --> 00:32:30,480
uh mo larry and curly are each

890
00:32:30,480 --> 00:32:32,559
respectively eighteen and a quarter

891
00:32:32,559 --> 00:32:34,399
percent entire payroll

892
00:32:34,399 --> 00:32:36,880
and poor joe with his pay unit is fifty

893
00:32:36,880 --> 00:32:39,440
is only nine point one twelve percent of

894
00:32:39,440 --> 00:32:41,360
the total payroll

895
00:32:41,360 --> 00:32:42,640
so you might see how this works out a

896
00:32:42,640 --> 00:32:43,919
little bit better

897
00:32:43,919 --> 00:32:44,799
now

898
00:32:44,799 --> 00:32:46,720
let's work out a quartile

899
00:32:46,720 --> 00:32:49,120
the function is end tile and if you put

900
00:32:49,120 --> 00:32:50,480
in four there's forums so you can call

901
00:32:50,480 --> 00:32:52,240
that a quartile

902
00:32:52,240 --> 00:32:53,600
so

903
00:32:53,600 --> 00:32:55,039
if you

904
00:32:55,039 --> 00:32:57,919
put the people into a histogram

905
00:32:57,919 --> 00:32:59,200
uh our

906
00:32:59,200 --> 00:33:00,480
are six people here and put them in a

907
00:33:00,480 --> 00:33:02,480
histogram first first people in the

908
00:33:02,480 --> 00:33:04,960
first quartile are going to be joe and

909
00:33:04,960 --> 00:33:06,000
ted

910
00:33:06,000 --> 00:33:09,679
at nine and point 12 and 1606

911
00:33:09,679 --> 00:33:12,799
of the total percentage of the payroll

912
00:33:12,799 --> 00:33:13,600
and

913
00:33:13,600 --> 00:33:15,279
mo and curley are going to fall into the

914
00:33:15,279 --> 00:33:16,480
second one

915
00:33:16,480 --> 00:33:17,600
and

916
00:33:17,600 --> 00:33:19,519
curly falls into the third and chem is

917
00:33:19,519 --> 00:33:20,960
going to be in the fourth quartile all

918
00:33:20,960 --> 00:33:23,279
by himself

919
00:33:23,279 --> 00:33:25,200
now quartiles are real popular a lot of

920
00:33:25,200 --> 00:33:28,480
statisticians as it tends to

921
00:33:28,480 --> 00:33:30,240
give you fairly easy analysis of how

922
00:33:30,240 --> 00:33:32,799
things work

923
00:33:33,279 --> 00:33:34,640
now

924
00:33:34,640 --> 00:33:36,240
let's take a look at the average and the

925
00:33:36,240 --> 00:33:39,440
difference from the average so

926
00:33:39,440 --> 00:33:42,240
we're going to

927
00:33:42,240 --> 00:33:45,600
round off the average pay

928
00:33:45,600 --> 00:33:47,360
and call that

929
00:33:47,360 --> 00:33:48,799
average

930
00:33:48,799 --> 00:33:50,960
and then we're going to

931
00:33:50,960 --> 00:33:53,760
calculate the

932
00:33:53,760 --> 00:33:55,840
the pay that the person is being paid

933
00:33:55,840 --> 00:33:58,159
minus the average pay and call that the

934
00:33:58,159 --> 00:34:00,240
difference to average

935
00:34:00,240 --> 00:34:03,600
so shem gets paid 110

936
00:34:03,600 --> 00:34:07,440
the average of everyone in the

937
00:34:07,440 --> 00:34:09,800
business is

938
00:34:09,800 --> 00:34:12,079
91.33 units of pay

939
00:34:12,079 --> 00:34:15,440
and he is 18.67

940
00:34:15,440 --> 00:34:19,320
above that 91.33

941
00:34:19,679 --> 00:34:21,119
now mo

942
00:34:21,119 --> 00:34:23,520
larry and curly being paid 100 they're

943
00:34:23,520 --> 00:34:27,440
each 8.67 units above that

944
00:34:27,440 --> 00:34:30,440
ted at 88 is

945
00:34:30,440 --> 00:34:34,159
3.33 under the average and poor old joe

946
00:34:34,159 --> 00:34:37,919
is 41 under the average

947
00:34:38,879 --> 00:34:40,480
now the lead function

948
00:34:40,480 --> 00:34:43,359
is um takes a little bit of explanation

949
00:34:43,359 --> 00:34:45,679
but you'll hopefully catch on to it

950
00:34:45,679 --> 00:34:48,639
uh we're going to take our pay and we're

951
00:34:48,639 --> 00:34:50,320
going to

952
00:34:50,320 --> 00:34:51,918
subtract

953
00:34:51,918 --> 00:34:53,599
the pay value

954
00:34:53,599 --> 00:34:54,960
of the one

955
00:34:54,960 --> 00:34:56,320
proceeding

956
00:34:56,320 --> 00:34:58,079
and we're going to calculate the

957
00:34:58,079 --> 00:35:00,160
difference to the next person being paid

958
00:35:00,160 --> 00:35:02,880
so we're going to take the pay

959
00:35:02,880 --> 00:35:06,000
column and go one more down

960
00:35:06,000 --> 00:35:08,320
and subtract that

961
00:35:08,320 --> 00:35:10,240
value so the pay of the next person in

962
00:35:10,240 --> 00:35:12,480
line from the current pay

963
00:35:12,480 --> 00:35:15,760
so shemp gets paid 110

964
00:35:15,760 --> 00:35:17,520
and the difference to the next person is

965
00:35:17,520 --> 00:35:19,680
10. so this is 110

966
00:35:19,680 --> 00:35:22,400
minus our lead of the next column

967
00:35:22,400 --> 00:35:25,280
to which is 100 so it's 110 minus 100

968
00:35:25,280 --> 00:35:27,760
which is the value of 10. now the next

969
00:35:27,760 --> 00:35:30,640
uh 2006 is you have 100 minus the lead

970
00:35:30,640 --> 00:35:31,839
of the next

971
00:35:31,839 --> 00:35:34,960
uh value so that's zero and zero when

972
00:35:34,960 --> 00:35:36,560
you get to curly the next person in the

973
00:35:36,560 --> 00:35:40,560
ranking uh they're 12 below them

974
00:35:40,560 --> 00:35:42,960
so that ends up giving them

975
00:35:42,960 --> 00:35:46,400
a uh poor ted the difference to the next

976
00:35:46,400 --> 00:35:49,280
person between him and the next is uh 38

977
00:35:49,280 --> 00:35:51,040
and there's no one below joe but between

978
00:35:51,040 --> 00:35:52,800
curly and ted once again there's a

979
00:35:52,800 --> 00:35:56,000
difference of 12.

980
00:35:56,480 --> 00:35:59,119
so once again lead gets row number n

981
00:35:59,119 --> 00:36:01,920
from the column

982
00:36:02,400 --> 00:36:04,240
now lag

983
00:36:04,240 --> 00:36:06,560
is interesting in that you can skip a

984
00:36:06,560 --> 00:36:08,560
certain number of values

985
00:36:08,560 --> 00:36:12,160
so if i lag

986
00:36:12,160 --> 00:36:14,480
a one

987
00:36:14,480 --> 00:36:16,720
over w as lag one

988
00:36:16,720 --> 00:36:18,320
um what we're gonna do is we're gonna

989
00:36:18,320 --> 00:36:19,359
skip

990
00:36:19,359 --> 00:36:21,119
we're gonna read in the first column but

991
00:36:21,119 --> 00:36:21,920
not

992
00:36:21,920 --> 00:36:23,599
uh

993
00:36:23,599 --> 00:36:26,000
read in a value

994
00:36:26,000 --> 00:36:28,800
and we'll read the second column

995
00:36:28,800 --> 00:36:31,520
our lagged value is a as you see second

996
00:36:31,520 --> 00:36:34,079
column the lag is one

997
00:36:34,079 --> 00:36:36,640
if we read in the second the third

998
00:36:36,640 --> 00:36:37,599
column

999
00:36:37,599 --> 00:36:40,400
or the third row of data the lag is

1000
00:36:40,400 --> 00:36:42,960
lag of 1 is the previous column's value

1001
00:36:42,960 --> 00:36:44,640
for a

1002
00:36:44,640 --> 00:36:47,760
now if we lag 2 when you read in the

1003
00:36:47,760 --> 00:36:50,800
first two rows

1004
00:36:50,800 --> 00:36:52,160
you're skipping over the first two so

1005
00:36:52,160 --> 00:36:53,680
you're going to have null or no value

1006
00:36:53,680 --> 00:36:56,079
there but when you read in 3 you're

1007
00:36:56,079 --> 00:36:58,640
going to be able to subtract

1008
00:36:58,640 --> 00:37:00,720
or come up with the

1009
00:37:00,720 --> 00:37:03,280
point here to the value of a that was 2

1010
00:37:03,280 --> 00:37:06,000
behind so a lag of 2 points up this

1011
00:37:06,000 --> 00:37:08,560
column 2 a lag of one points up this

1012
00:37:08,560 --> 00:37:11,200
column one

1013
00:37:13,359 --> 00:37:15,680
lead is the opposite of lag this is

1014
00:37:15,680 --> 00:37:17,599
where you're going to skip ahead

1015
00:37:17,599 --> 00:37:21,119
so if we read in our first row where a

1016
00:37:21,119 --> 00:37:23,440
has a value of one and we're going to

1017
00:37:23,440 --> 00:37:25,760
lead off one we're going to

1018
00:37:25,760 --> 00:37:27,760
go down to the next row and if we're

1019
00:37:27,760 --> 00:37:28,960
going to lead two we're going to go off

1020
00:37:28,960 --> 00:37:31,760
to the third row

1021
00:37:31,920 --> 00:37:33,280
now the syntax for the window and

1022
00:37:33,280 --> 00:37:35,359
functions please read the manual page

1023
00:37:35,359 --> 00:37:37,440
for this explains it a lot better but

1024
00:37:37,440 --> 00:37:38,640
there

1025
00:37:38,640 --> 00:37:40,560
the way these are ordered uh you have to

1026
00:37:40,560 --> 00:37:42,960
pay attention to otherwise the syntax

1027
00:37:42,960 --> 00:37:45,200
check will kick it out

1028
00:37:45,200 --> 00:37:48,240
and that is the end of this introduction

1029
00:37:48,240 --> 00:37:51,839
i gotta apologize that i don't have um

1030
00:37:51,839 --> 00:37:54,240
clever industry specific data for

1031
00:37:54,240 --> 00:37:56,480
everybody but i wanted to show you how

1032
00:37:56,480 --> 00:37:57,920
these functions worked without getting

1033
00:37:57,920 --> 00:38:00,000
too much into the weeds

1034
00:38:00,000 --> 00:38:02,000
now if you want to learn more i

1035
00:38:02,000 --> 00:38:04,079
recommend if you're using mysql use the

1036
00:38:04,079 --> 00:38:06,079
mysql manual

1037
00:38:06,079 --> 00:38:07,839
if you are

1038
00:38:07,839 --> 00:38:09,920
using a relational database i recommend

1039
00:38:09,920 --> 00:38:12,000
going off to bruce momgen who's from the

1040
00:38:12,000 --> 00:38:14,480
postgres world he works for

1041
00:38:14,480 --> 00:38:16,640
the competitor

1042
00:38:16,640 --> 00:38:18,640
kind of in the open source world but he

1043
00:38:18,640 --> 00:38:20,560
has wonderful presentations on windowing

1044
00:38:20,560 --> 00:38:22,880
functions that are out there uh i got a

1045
00:38:22,880 --> 00:38:24,800
lot of my training from him

1046
00:38:24,800 --> 00:38:27,040
and i highly recommend these

1047
00:38:27,040 --> 00:38:29,599
uh there's another tutorial on windowing

1048
00:38:29,599 --> 00:38:31,040
functions that's a little more detailed

1049
00:38:31,040 --> 00:38:33,040
that i can be in my short amount of time

1050
00:38:33,040 --> 00:38:35,280
and also this other intro to win

1051
00:38:35,280 --> 00:38:37,680
functions in sql is worth a read

1052
00:38:37,680 --> 00:38:39,760
with an hour investment in your time i

1053
00:38:39,760 --> 00:38:41,520
really think you could have big

1054
00:38:41,520 --> 00:38:44,320
dividends there

1055
00:38:44,839 --> 00:38:47,200
and whoops

1056
00:38:47,200 --> 00:38:52,160
uh this is uh bruce momgens

1057
00:38:53,520 --> 00:38:55,520
presentation i recommend that

1058
00:38:55,520 --> 00:38:58,160
okay let me

1059
00:38:58,880 --> 00:39:01,280
head down if you want to try the mysql

1060
00:39:01,280 --> 00:39:02,960
database service on the oracle cloud

1061
00:39:02,960 --> 00:39:05,359
infrastructure you can get 300 in

1062
00:39:05,359 --> 00:39:07,200
credits uh

1063
00:39:07,200 --> 00:39:09,920
that will last you free for 30 days if

1064
00:39:09,920 --> 00:39:13,040
you stay to the smaller

1065
00:39:13,359 --> 00:39:16,240
machine sizes that will last you a while

1066
00:39:16,240 --> 00:39:18,560
if you want to try the bigger stuff like

1067
00:39:18,560 --> 00:39:19,520
our

1068
00:39:19,520 --> 00:39:21,599
heatwave analytics engine with autopilot

1069
00:39:21,599 --> 00:39:24,880
which is a machine learning based way of

1070
00:39:24,880 --> 00:39:27,440
watching your queries and your instances

1071
00:39:27,440 --> 00:39:28,960
to see how they could be tailored for

1072
00:39:28,960 --> 00:39:31,280
better performance uh that will chew up

1073
00:39:31,280 --> 00:39:33,200
a little bit faster but that's out there

1074
00:39:33,200 --> 00:39:34,880
if you want to try that

1075
00:39:34,880 --> 00:39:36,480
uh if you want to keep a track with

1076
00:39:36,480 --> 00:39:39,560
mysql mysql.com

1077
00:39:39,560 --> 00:39:41,920
twitter.commysql we're on facebook of

1078
00:39:41,920 --> 00:39:43,599
course we're on linkedin

1079
00:39:43,599 --> 00:39:45,200
we have roughly 21 000 people in the

1080
00:39:45,200 --> 00:39:47,760
mysql group on there and of course mysql

1081
00:39:47,760 --> 00:39:50,640
community.slack

1082
00:39:50,640 --> 00:39:52,480
and if you're in a startup

1083
00:39:52,480 --> 00:39:55,440
please look into oracle.com startup

1084
00:39:55,440 --> 00:39:57,760
there's a lot of marketing

1085
00:39:57,760 --> 00:39:59,520
exposure you can get

1086
00:39:59,520 --> 00:40:02,480
some credits for the cloud and it's

1087
00:40:02,480 --> 00:40:04,079
interesting especially if you're a

1088
00:40:04,079 --> 00:40:05,760
startup of some of the stuff that moscow

1089
00:40:05,760 --> 00:40:07,359
do to help leverage you

1090
00:40:07,359 --> 00:40:09,599
into your future

1091
00:40:09,599 --> 00:40:11,119
by the way i wrote a book if you're

1092
00:40:11,119 --> 00:40:14,480
doing the json data type with mysql

1093
00:40:14,480 --> 00:40:17,200
please consider my book the user guide

1094
00:40:17,200 --> 00:40:19,040
or the manual is pretty good but doesn't

1095
00:40:19,040 --> 00:40:20,960
have a lot of

1096
00:40:20,960 --> 00:40:22,720
coding examples and there's lovely

1097
00:40:22,720 --> 00:40:24,880
coding examples in there and how

1098
00:40:24,880 --> 00:40:28,000
uh json works within mysql has a lot of

1099
00:40:28,000 --> 00:40:29,920
interesting future features it's a

1100
00:40:29,920 --> 00:40:31,440
wonderful data type you can actually

1101
00:40:31,440 --> 00:40:34,160
store a gigabyte of data in a column

1102
00:40:34,160 --> 00:40:36,640
in json format

1103
00:40:36,640 --> 00:40:38,800
and with that i want to thank you and if

1104
00:40:38,800 --> 00:40:40,319
you have any questions please do not

1105
00:40:40,319 --> 00:40:42,720
hesitate to reach out to me

1106
00:40:42,720 --> 00:40:44,079
and the slides once again are

1107
00:40:44,079 --> 00:40:46,000
slideshare.net dave stokes look for the

1108
00:40:46,000 --> 00:40:48,079
name of the show and windowing functions

1109
00:40:48,079 --> 00:40:50,400
thank you

