1
00:00:01,199 --> 00:00:02,720
all right thank you everyone for making

2
00:00:02,720 --> 00:00:06,880
it to the last talk in our salon

3
00:00:08,320 --> 00:00:10,240
so uh real quick

4
00:00:10,240 --> 00:00:13,599
we have uh our last speaker of the day

5
00:00:13,599 --> 00:00:16,960
and uh i know you can read on the screen

6
00:00:16,960 --> 00:00:18,000
here

7
00:00:18,000 --> 00:00:18,960
nader

8
00:00:18,960 --> 00:00:20,240
zaveri

9
00:00:20,240 --> 00:00:23,119
and uh manager in incident response and

10
00:00:23,119 --> 00:00:25,439
remediation from mandiant

11
00:00:25,439 --> 00:00:28,320
so looking forward to getting some

12
00:00:28,320 --> 00:00:31,119
our last enriched uh knowledge here and

13
00:00:31,119 --> 00:00:32,399
then as

14
00:00:32,399 --> 00:00:34,719
after this talk we will have the closing

15
00:00:34,719 --> 00:00:37,680
ceremony in the following uh and the

16
00:00:37,680 --> 00:00:39,760
following salon just right across just

17
00:00:39,760 --> 00:00:41,280
on the other side of this wall so

18
00:00:41,280 --> 00:00:43,760
without further ado take it over

19
00:00:43,760 --> 00:00:45,680
thank you so much

20
00:00:45,680 --> 00:00:48,719
good afternoon everyone uh as was stated

21
00:00:48,719 --> 00:00:51,520
my name is nader zaveri i am a manager

22
00:00:51,520 --> 00:00:53,520
with mandiant

23
00:00:53,520 --> 00:00:55,360
as part of their incident response and

24
00:00:55,360 --> 00:00:58,559
remediation team so usually that means

25
00:00:58,559 --> 00:01:01,199
during an investigation uh there's two

26
00:01:01,199 --> 00:01:03,120
major teams that are deployed there's

27
00:01:03,120 --> 00:01:05,280
the investigative team understanding the

28
00:01:05,280 --> 00:01:07,119
storyline of the attack

29
00:01:07,119 --> 00:01:09,119
and then there's my team where we come

30
00:01:09,119 --> 00:01:12,000
in and try to contain and eradicate the

31
00:01:12,000 --> 00:01:15,360
threat actors access

32
00:01:15,520 --> 00:01:18,000
quick little agenda to go through i'm

33
00:01:18,000 --> 00:01:19,360
going i'm a

34
00:01:19,360 --> 00:01:21,920
quick introduction myself

35
00:01:21,920 --> 00:01:23,600
going to go through the cloud threat

36
00:01:23,600 --> 00:01:25,600
landscape what is what we're seeing

37
00:01:25,600 --> 00:01:28,080
right now from the front lines and also

38
00:01:28,080 --> 00:01:29,200
what are some common attack

39
00:01:29,200 --> 00:01:30,960
methodologies either we've seen

40
00:01:30,960 --> 00:01:32,479
personally through

41
00:01:32,479 --> 00:01:34,159
our own investigations or what is kind

42
00:01:34,159 --> 00:01:35,840
of publicly available

43
00:01:35,840 --> 00:01:38,479
and then i'll come in with a

44
00:01:38,479 --> 00:01:40,960
a kind of novel technique that has

45
00:01:40,960 --> 00:01:43,920
really came into fruition in the past

46
00:01:43,920 --> 00:01:47,119
uh one year with the solarwinds threat

47
00:01:47,119 --> 00:01:50,000
actor called the golden samuel attack

48
00:01:50,000 --> 00:01:51,520
and then we'll walk through some

49
00:01:51,520 --> 00:01:54,079
security best practices of how to secure

50
00:01:54,079 --> 00:01:55,920
the cloud to try to prevent these types

51
00:01:55,920 --> 00:01:57,600
of attacks from happening

52
00:01:57,600 --> 00:02:00,560
and of course ask questions as

53
00:02:00,560 --> 00:02:03,360
we get to the end

54
00:02:03,759 --> 00:02:05,600
just a quick introduction

55
00:02:05,600 --> 00:02:08,479
nader zaveri i'm a manager i have about

56
00:02:08,479 --> 00:02:11,120
14 years of security infrastructure

57
00:02:11,120 --> 00:02:12,319
experience

58
00:02:12,319 --> 00:02:14,640
and the last seven years i've worked

59
00:02:14,640 --> 00:02:17,200
in different consulting firms with the

60
00:02:17,200 --> 00:02:21,720
last three years being with mandiant

61
00:02:24,239 --> 00:02:27,760
just a quick housekeeping item um

62
00:02:27,760 --> 00:02:29,360
the case studies i'll be talking about

63
00:02:29,360 --> 00:02:30,800
throughout the talk i'm going to talk a

64
00:02:30,800 --> 00:02:32,080
lot about

65
00:02:32,080 --> 00:02:35,040
things that we've seen and we'll try to

66
00:02:35,040 --> 00:02:38,319
obscure and obfuscate a lot of the

67
00:02:38,319 --> 00:02:40,720
data points enough so then you can't

68
00:02:40,720 --> 00:02:42,640
trace it back to an incident because

69
00:02:42,640 --> 00:02:44,720
we'll try to always keep things close to

70
00:02:44,720 --> 00:02:46,959
our chest and maintain our clients

71
00:02:46,959 --> 00:02:49,680
confidentiality

72
00:02:49,680 --> 00:02:51,200
so some what is the current threat

73
00:02:51,200 --> 00:02:53,360
landscape for the cloud uh what we're

74
00:02:53,360 --> 00:02:56,239
seeing is a rapid growth in the cloud

75
00:02:56,239 --> 00:02:59,200
and rapid cloud adoption this is

76
00:02:59,200 --> 00:03:01,200
actually been highlighted even further

77
00:03:01,200 --> 00:03:03,440
because of

78
00:03:03,440 --> 00:03:07,200
covid when covid happened the we saw the

79
00:03:07,200 --> 00:03:09,920
expansion and acceleration of people's

80
00:03:09,920 --> 00:03:11,200
cloud journey

81
00:03:11,200 --> 00:03:13,120
to the point that they were going in the

82
00:03:13,120 --> 00:03:17,360
cloud and a lot of our influx in cloud

83
00:03:17,360 --> 00:03:20,400
ir started to turn up as well because

84
00:03:20,400 --> 00:03:22,080
it was such a fast journey into the

85
00:03:22,080 --> 00:03:24,640
cloud we started seeing a lot a lot of

86
00:03:24,640 --> 00:03:26,159
misconfigurations and this is where

87
00:03:26,159 --> 00:03:27,760
we're getting into misconfiguration of

88
00:03:27,760 --> 00:03:30,959
basic tenet settings as well as

89
00:03:30,959 --> 00:03:32,560
you're making this quick journey into

90
00:03:32,560 --> 00:03:33,599
the cloud

91
00:03:33,599 --> 00:03:35,440
accelerating this journey

92
00:03:35,440 --> 00:03:37,680
there's a lot of security settings that

93
00:03:37,680 --> 00:03:39,280
are maybe native

94
00:03:39,280 --> 00:03:41,120
or security configurations that are

95
00:03:41,120 --> 00:03:43,120
native or services that are native that

96
00:03:43,120 --> 00:03:45,040
maybe the organization was not fully

97
00:03:45,040 --> 00:03:47,200
aware of and this is where

98
00:03:47,200 --> 00:03:49,680
you'll have a lot of these uh issues

99
00:03:49,680 --> 00:03:53,599
around some of these instant responses

100
00:03:53,599 --> 00:03:56,159
some some basic cloud stats that i like

101
00:03:56,159 --> 00:03:57,760
to kind of point out

102
00:03:57,760 --> 00:03:59,920
just from our own

103
00:03:59,920 --> 00:04:03,599
anecdotal uh irs which is pretty uh this

104
00:04:03,599 --> 00:04:06,400
hasn't been updated for the latest 2021

105
00:04:06,400 --> 00:04:07,840
but i can guarantee it's going to be a

106
00:04:07,840 --> 00:04:10,400
lot higher than 11 percent of our irs

107
00:04:10,400 --> 00:04:12,239
which we do about a thousand incident

108
00:04:12,239 --> 00:04:14,879
responses a year for organizations

109
00:04:14,879 --> 00:04:17,199
across the world it's it's

110
00:04:17,199 --> 00:04:18,880
more looking like just purely from an

111
00:04:18,880 --> 00:04:20,720
anecdotal experience

112
00:04:20,720 --> 00:04:24,080
i'm seeing about 25 having some sort of

113
00:04:24,080 --> 00:04:25,680
cloud component

114
00:04:25,680 --> 00:04:28,080
with the significant portions being in

115
00:04:28,080 --> 00:04:30,240
the cloud meaning it's not just

116
00:04:30,240 --> 00:04:31,199
a

117
00:04:31,199 --> 00:04:33,680
forensics of one ec2 instance it means

118
00:04:33,680 --> 00:04:35,680
that the entire investigation a majority

119
00:04:35,680 --> 00:04:38,320
of the investigation is happening on the

120
00:04:38,320 --> 00:04:41,040
cloud using cloud services

121
00:04:41,040 --> 00:04:45,520
the biggest and most jarring stat is 95

122
00:04:45,520 --> 00:04:48,639
of the irs we do and that is publicly

123
00:04:48,639 --> 00:04:49,759
disclosed

124
00:04:49,759 --> 00:04:52,479
has to do with the customer or the

125
00:04:52,479 --> 00:04:54,560
organization's failure in some way shape

126
00:04:54,560 --> 00:04:57,919
or form it is not really on the

127
00:04:57,919 --> 00:05:01,600
cloud provider per se it is sometimes a

128
00:05:01,600 --> 00:05:04,080
misconfiguration of a setting or a

129
00:05:04,080 --> 00:05:06,560
log that was already logged but was not

130
00:05:06,560 --> 00:05:09,360
uh really a paid attention to so that's

131
00:05:09,360 --> 00:05:12,639
kind of the most drawing stat

132
00:05:12,639 --> 00:05:15,280
some of the key things we in m trends of

133
00:05:15,280 --> 00:05:18,160
2020 we had a high we highlighted a lot

134
00:05:18,160 --> 00:05:20,560
of cloud-based

135
00:05:20,560 --> 00:05:23,199
activities one of them that we did we

136
00:05:23,199 --> 00:05:25,120
noticed yes you're getting into the

137
00:05:25,120 --> 00:05:26,400
cloud

138
00:05:26,400 --> 00:05:28,400
you're trying to enable logging which

139
00:05:28,400 --> 00:05:30,000
you know you have the ability to log a

140
00:05:30,000 --> 00:05:31,360
lot of things

141
00:05:31,360 --> 00:05:34,080
but there wasn't a lot of things after

142
00:05:34,080 --> 00:05:36,560
that you weren't tuning you didn't have

143
00:05:36,560 --> 00:05:38,320
use cases developed to tune what's

144
00:05:38,320 --> 00:05:41,199
happening and the threat detection and

145
00:05:41,199 --> 00:05:43,199
response portion of

146
00:05:43,199 --> 00:05:45,280
your logging and monitoring strategy was

147
00:05:45,280 --> 00:05:47,600
not as mature as when you have it

148
00:05:47,600 --> 00:05:49,680
on-prem

149
00:05:49,680 --> 00:05:51,919
and they used attackers utilize hybrid

150
00:05:51,919 --> 00:05:53,680
environments so hybrid environments

151
00:05:53,680 --> 00:05:55,919
meaning that you have an on-prem

152
00:05:55,919 --> 00:05:58,160
presence as well as a cloud presence

153
00:05:58,160 --> 00:06:01,280
and what we've seen is attackers go

154
00:06:01,280 --> 00:06:04,880
pivot from the cloud into on-prem or

155
00:06:04,880 --> 00:06:08,160
vice versa from on-prem into the cloud

156
00:06:08,160 --> 00:06:09,919
and that's one of the things that we're

157
00:06:09,919 --> 00:06:11,280
starting to see a lot especially when

158
00:06:11,280 --> 00:06:13,680
you're really pushing for a single

159
00:06:13,680 --> 00:06:15,600
sign-on the ability to

160
00:06:15,600 --> 00:06:17,919
go use your on-prem credentials instead

161
00:06:17,919 --> 00:06:19,600
of using localized credentials in the

162
00:06:19,600 --> 00:06:21,440
cloud this is where you're going to see

163
00:06:21,440 --> 00:06:23,520
this even happen further

164
00:06:23,520 --> 00:06:26,160
credential management is important we

165
00:06:26,160 --> 00:06:27,520
like to say it's a

166
00:06:27,520 --> 00:06:29,039
it's a common phrase in the cloud

167
00:06:29,039 --> 00:06:32,000
security community that your identity is

168
00:06:32,000 --> 00:06:35,440
the new perimeter it is not your typical

169
00:06:35,440 --> 00:06:38,000
ford firewall inside the office building

170
00:06:38,000 --> 00:06:40,080
that is your you know your inside

171
00:06:40,080 --> 00:06:42,240
trusted network and then if it's coming

172
00:06:42,240 --> 00:06:44,800
from the outside now your identity your

173
00:06:44,800 --> 00:06:47,199
username password your access keys that

174
00:06:47,199 --> 00:06:49,919
is now the perimeter to the cloud so

175
00:06:49,919 --> 00:06:52,800
making sure your identity and access

176
00:06:52,800 --> 00:06:55,360
management techniques and security

177
00:06:55,360 --> 00:06:57,840
controls around that is of utmost

178
00:06:57,840 --> 00:06:59,599
importance

179
00:06:59,599 --> 00:07:00,720
and we're starting to see a lack of

180
00:07:00,720 --> 00:07:04,080
granularity of policies and permissions

181
00:07:04,080 --> 00:07:05,680
a lot of organizations when they're in

182
00:07:05,680 --> 00:07:08,240
the cloud whether it's aws or azure or

183
00:07:08,240 --> 00:07:09,599
gcp

184
00:07:09,599 --> 00:07:11,840
they'll use a lot of basic managed

185
00:07:11,840 --> 00:07:13,680
policies that the

186
00:07:13,680 --> 00:07:15,840
cloud provider has tried to create

187
00:07:15,840 --> 00:07:17,039
sometimes

188
00:07:17,039 --> 00:07:20,240
as a quick way for organizations to

189
00:07:20,240 --> 00:07:21,759
get themselves into the cloud but

190
00:07:21,759 --> 00:07:23,039
maintain that

191
00:07:23,039 --> 00:07:25,199
so there's not a granularity of policies

192
00:07:25,199 --> 00:07:27,360
there's not a way to

193
00:07:27,360 --> 00:07:30,000
truly do an entitlements review of these

194
00:07:30,000 --> 00:07:31,199
policies

195
00:07:31,199 --> 00:07:34,000
and then figure out if they need to

196
00:07:34,000 --> 00:07:36,240
remove some of the permissions so that

197
00:07:36,240 --> 00:07:37,840
what they'll do is just put in these

198
00:07:37,840 --> 00:07:39,599
managed policies

199
00:07:39,599 --> 00:07:42,000
and one thing that aws recently just

200
00:07:42,000 --> 00:07:43,759
came out with with

201
00:07:43,759 --> 00:07:44,960
in the past

202
00:07:44,960 --> 00:07:47,199
three to five months which is im access

203
00:07:47,199 --> 00:07:50,080
analyzer which allows you to

204
00:07:50,080 --> 00:07:53,680
look at a role and see what permissions

205
00:07:53,680 --> 00:07:54,400
a

206
00:07:54,400 --> 00:07:56,840
specific user was able to

207
00:07:56,840 --> 00:08:00,000
accumulate throughout 90 days or so

208
00:08:00,000 --> 00:08:02,400
through cloudtrail logs and based off of

209
00:08:02,400 --> 00:08:04,720
the non-used permissions you can start

210
00:08:04,720 --> 00:08:06,960
stripping that away and a lot of other

211
00:08:06,960 --> 00:08:08,879
organizat cloud providers are starting

212
00:08:08,879 --> 00:08:10,720
to go that route that way we can get a

213
00:08:10,720 --> 00:08:12,400
little bit more granular the principle

214
00:08:12,400 --> 00:08:14,160
of least privilege that principle the

215
00:08:14,160 --> 00:08:16,639
old adage that is used throughout the

216
00:08:16,639 --> 00:08:18,879
time and everyone hates to hear about it

217
00:08:18,879 --> 00:08:23,039
this is just as paramount as ever

218
00:08:24,400 --> 00:08:27,199
some common attack methodologies um this

219
00:08:27,199 --> 00:08:29,520
is really not an attack methodology per

220
00:08:29,520 --> 00:08:30,240
se

221
00:08:30,240 --> 00:08:31,919
but of a

222
00:08:31,919 --> 00:08:34,399
when when you see an organization having

223
00:08:34,399 --> 00:08:35,599
some of these

224
00:08:35,599 --> 00:08:38,000
incidents a lot of times this is one of

225
00:08:38,000 --> 00:08:40,240
the main causes

226
00:08:40,240 --> 00:08:43,120
back in about 10 15 years ago when i was

227
00:08:43,120 --> 00:08:46,800
first in it a big thing was rogue i.t or

228
00:08:46,800 --> 00:08:49,120
shadow i.t services

229
00:08:49,120 --> 00:08:51,040
where an organization will have their

230
00:08:51,040 --> 00:08:53,440
own entire i.t department separate from

231
00:08:53,440 --> 00:08:55,760
the centralized iit department this is

232
00:08:55,760 --> 00:08:57,120
the same thing that's happening in the

233
00:08:57,120 --> 00:08:59,279
cloud this is because

234
00:08:59,279 --> 00:09:01,360
cloud is such a

235
00:09:01,360 --> 00:09:02,720
lucrative

236
00:09:02,720 --> 00:09:06,000
area for let's say devops people for the

237
00:09:06,000 --> 00:09:09,120
agile nature of being able to do quick

238
00:09:09,120 --> 00:09:12,640
devops creations creating applications

239
00:09:12,640 --> 00:09:14,480
through an agile process

240
00:09:14,480 --> 00:09:17,120
a lot of organizations have devops being

241
00:09:17,120 --> 00:09:18,880
the first people getting there

242
00:09:18,880 --> 00:09:21,360
and because of that issue then we're

243
00:09:21,360 --> 00:09:23,200
seeing that you could just all you need

244
00:09:23,200 --> 00:09:25,040
is a credit card

245
00:09:25,040 --> 00:09:26,480
all you need is a credit card to get

246
00:09:26,480 --> 00:09:29,360
there and with a lot of devops

247
00:09:29,360 --> 00:09:30,160
their

248
00:09:30,160 --> 00:09:33,200
first priority or even their second or

249
00:09:33,200 --> 00:09:35,440
third priority is not really security so

250
00:09:35,440 --> 00:09:37,040
we're starting to see a lot of

251
00:09:37,040 --> 00:09:39,680
applications being developed with not a

252
00:09:39,680 --> 00:09:42,480
lot of scrutiny around security controls

253
00:09:42,480 --> 00:09:44,560
and within the application

254
00:09:44,560 --> 00:09:47,040
and you'll have the famous internet

255
00:09:47,040 --> 00:09:49,600
facing remote management servers

256
00:09:49,600 --> 00:09:53,040
or just i t back doors this is

257
00:09:53,040 --> 00:09:56,080
it admins being it admins notoriously

258
00:09:56,080 --> 00:10:00,080
lazy trying to find ways they can go and

259
00:10:00,080 --> 00:10:02,160
do their maintenance windows without

260
00:10:02,160 --> 00:10:04,480
having to get through the vpn having an

261
00:10:04,480 --> 00:10:07,120
external facing remote management area

262
00:10:07,120 --> 00:10:09,040
this is what we're seeing a lot and of

263
00:10:09,040 --> 00:10:09,839
course

264
00:10:09,839 --> 00:10:12,959
unpatched applications unpatched

265
00:10:12,959 --> 00:10:15,279
linux or windows or any sort of

266
00:10:15,279 --> 00:10:17,519
applications we're starting to see that

267
00:10:17,519 --> 00:10:18,880
because you're

268
00:10:18,880 --> 00:10:21,760
you've worked so hard on prem for your

269
00:10:21,760 --> 00:10:24,240
patch management strategy but because

270
00:10:24,240 --> 00:10:26,560
it's not a centralized form of getting

271
00:10:26,560 --> 00:10:29,120
into the cloud it is a shadow method of

272
00:10:29,120 --> 00:10:30,959
getting into cloud which means you're

273
00:10:30,959 --> 00:10:32,800
have limited visibility your patch

274
00:10:32,800 --> 00:10:35,839
management team is not fully aware of

275
00:10:35,839 --> 00:10:38,480
the assets that are in the cloud which

276
00:10:38,480 --> 00:10:40,480
then lends itself to having things that

277
00:10:40,480 --> 00:10:43,279
are unpatched

278
00:10:45,440 --> 00:10:48,000
another thing is credential compromise

279
00:10:48,000 --> 00:10:51,360
via fishing yes phishing is not in out

280
00:10:51,360 --> 00:10:53,360
of the picture just because you're in

281
00:10:53,360 --> 00:10:54,720
the cloud

282
00:10:54,720 --> 00:10:56,240
this is something that we're seeing a

283
00:10:56,240 --> 00:10:58,959
lot as an initial access vector fishing

284
00:10:58,959 --> 00:11:00,640
does not go away just because you're in

285
00:11:00,640 --> 00:11:01,680
the cloud

286
00:11:01,680 --> 00:11:03,120
um

287
00:11:03,120 --> 00:11:05,200
this is the reason because

288
00:11:05,200 --> 00:11:07,760
you can phish an organization's uh

289
00:11:07,760 --> 00:11:10,240
person and a lot of times with cloud

290
00:11:10,240 --> 00:11:12,880
when you're accessing cloud you'll store

291
00:11:12,880 --> 00:11:14,560
those credentials you're stored those

292
00:11:14,560 --> 00:11:17,760
ssh keys those credential files on your

293
00:11:17,760 --> 00:11:18,800
device

294
00:11:18,800 --> 00:11:20,560
and one of the common ways we're seeing

295
00:11:20,560 --> 00:11:22,480
attackers do is once they get initial

296
00:11:22,480 --> 00:11:27,440
access into the organ into that person's

297
00:11:27,440 --> 00:11:30,560
endpoint they'll start doing queries and

298
00:11:30,560 --> 00:11:33,519
searches through the entire endpoint

299
00:11:33,519 --> 00:11:35,680
device to find these credential files

300
00:11:35,680 --> 00:11:37,519
because they're all kind of mentioned in

301
00:11:37,519 --> 00:11:39,920
the same type of either

302
00:11:39,920 --> 00:11:42,240
name or they're certain of key

303
00:11:42,240 --> 00:11:43,760
characteristics that you'll be able to

304
00:11:43,760 --> 00:11:46,240
quickly search to be able to get that

305
00:11:46,240 --> 00:11:49,200
type of access key or password and once

306
00:11:49,200 --> 00:11:50,720
they have that they'll just pivot

307
00:11:50,720 --> 00:11:53,839
straight into the cloud

308
00:11:55,839 --> 00:11:58,160
another one is uh conventional

309
00:11:58,160 --> 00:12:00,959
compromise via endpoint exploits so

310
00:12:00,959 --> 00:12:02,880
your endpoint is not in the clear just

311
00:12:02,880 --> 00:12:05,279
because you're going into the cloud and

312
00:12:05,279 --> 00:12:06,959
you're using a

313
00:12:06,959 --> 00:12:08,800
cloud provider's

314
00:12:08,800 --> 00:12:11,920
asset or resource your endpoint is just

315
00:12:11,920 --> 00:12:15,200
as important and crucial it is the thing

316
00:12:15,200 --> 00:12:18,240
that you are accessing the cloud so we

317
00:12:18,240 --> 00:12:20,079
are seeing once again

318
00:12:20,079 --> 00:12:22,079
if you are using a

319
00:12:22,079 --> 00:12:25,360
share a username and password to go

320
00:12:25,360 --> 00:12:28,079
log in and being able to go traverse the

321
00:12:28,079 --> 00:12:30,320
internet with that same computer the

322
00:12:30,320 --> 00:12:32,720
ability for you to get malware either

323
00:12:32,720 --> 00:12:34,560
through phishing or just a random

324
00:12:34,560 --> 00:12:37,519
website to be able to once to get that

325
00:12:37,519 --> 00:12:39,600
endpoint to get to the end point the

326
00:12:39,600 --> 00:12:41,440
same thing happens they'll try to find

327
00:12:41,440 --> 00:12:43,279
those credential files they'll try to

328
00:12:43,279 --> 00:12:46,959
find the ssh keys the certificates to be

329
00:12:46,959 --> 00:12:48,959
able to get there get into the cloud

330
00:12:48,959 --> 00:12:52,079
from there

331
00:12:52,079 --> 00:12:53,839
another thing is public exposure this is

332
00:12:53,839 --> 00:12:56,399
probably the most common form that i'm

333
00:12:56,399 --> 00:12:57,519
seeing on

334
00:12:57,519 --> 00:13:00,320
a daily basis when i'm doing irs this is

335
00:13:00,320 --> 00:13:02,240
easily once or twice a month i'm seeing

336
00:13:02,240 --> 00:13:05,200
an ir that i have to do because of this

337
00:13:05,200 --> 00:13:07,120
and this is because

338
00:13:07,120 --> 00:13:08,720
sometimes it's accidental credential

339
00:13:08,720 --> 00:13:10,959
exposure sometimes there's a

340
00:13:10,959 --> 00:13:14,160
credential exposure from a

341
00:13:14,160 --> 00:13:17,440
a minor a few hours that then

342
00:13:17,440 --> 00:13:20,000
once you have the crawlers to go out

343
00:13:20,000 --> 00:13:23,200
they'll be able to catch it in the cache

344
00:13:23,200 --> 00:13:24,160
so this

345
00:13:24,160 --> 00:13:26,079
you'll see an attacker just do their

346
00:13:26,079 --> 00:13:28,720
normal ocean open source intelligence

347
00:13:28,720 --> 00:13:30,320
going through google dorking going

348
00:13:30,320 --> 00:13:32,399
through github get lab going through

349
00:13:32,399 --> 00:13:34,480
pace spin and being able to catch these

350
00:13:34,480 --> 00:13:35,680
credentials

351
00:13:35,680 --> 00:13:38,240
uh on for an organization on these types

352
00:13:38,240 --> 00:13:39,920
of things there's actually tools out

353
00:13:39,920 --> 00:13:41,040
there

354
00:13:41,040 --> 00:13:42,160
that can

355
00:13:42,160 --> 00:13:44,480
you know traverse these types of github

356
00:13:44,480 --> 00:13:46,959
repos and git lab instances

357
00:13:46,959 --> 00:13:50,079
that become public for these certain key

358
00:13:50,079 --> 00:13:52,880
items and once they're able to get that

359
00:13:52,880 --> 00:13:54,800
they'll be able to come in and usually

360
00:13:54,800 --> 00:13:56,240
you want to make sure you're not having

361
00:13:56,240 --> 00:13:58,800
those long lift credentials at all times

362
00:13:58,800 --> 00:14:01,040
and once they're in they go then be able

363
00:14:01,040 --> 00:14:03,600
to traverse and get their uh from

364
00:14:03,600 --> 00:14:06,399
lateral movement

365
00:14:07,120 --> 00:14:09,199
this is a very unique one so yes it is

366
00:14:09,199 --> 00:14:10,480
common but this is something that we're

367
00:14:10,480 --> 00:14:12,560
going to probably see a lot more so

368
00:14:12,560 --> 00:14:15,839
cloud platform service attacking where

369
00:14:15,839 --> 00:14:16,880
uh

370
00:14:16,880 --> 00:14:20,160
once an organization has a this is for

371
00:14:20,160 --> 00:14:22,079
your more modern organization they're

372
00:14:22,079 --> 00:14:24,160
using serverless apps they're using

373
00:14:24,160 --> 00:14:26,000
serverless functions like a lambda

374
00:14:26,000 --> 00:14:28,480
function to be able to

375
00:14:28,480 --> 00:14:31,279
perform things on their uh application

376
00:14:31,279 --> 00:14:34,079
so the from an attacker standpoint they

377
00:14:34,079 --> 00:14:35,920
you know do some reconnaissance find out

378
00:14:35,920 --> 00:14:37,920
what's about the application

379
00:14:37,920 --> 00:14:39,519
then once they're able to find

380
00:14:39,519 --> 00:14:41,440
vulnerability within let's say a

381
00:14:41,440 --> 00:14:44,240
container or of that application they'll

382
00:14:44,240 --> 00:14:47,279
try to write a function code to be able

383
00:14:47,279 --> 00:14:48,880
to

384
00:14:48,880 --> 00:14:50,240
create permissions create the

385
00:14:50,240 --> 00:14:52,639
credentials in that function to

386
00:14:52,639 --> 00:14:54,880
continuously be able to

387
00:14:54,880 --> 00:14:56,720
log in and because they're writing a

388
00:14:56,720 --> 00:15:00,160
function the the credentials are not

389
00:15:00,160 --> 00:15:02,560
even long lived so there's being re-uh

390
00:15:02,560 --> 00:15:05,040
rotated each time so they're able to

391
00:15:05,040 --> 00:15:05,839
then

392
00:15:05,839 --> 00:15:08,079
come in and do this at a comment at a

393
00:15:08,079 --> 00:15:11,040
consistent place as well as as long as

394
00:15:11,040 --> 00:15:12,959
the credentials being rotated they can

395
00:15:12,959 --> 00:15:14,320
still do this

396
00:15:14,320 --> 00:15:16,800
and this is something we've seen a lot

397
00:15:16,800 --> 00:15:18,320
and something i think that's going to

398
00:15:18,320 --> 00:15:20,240
happen a lot more with

399
00:15:20,240 --> 00:15:21,920
organizations already in the cloud for a

400
00:15:21,920 --> 00:15:24,720
long time the next step is to be having

401
00:15:24,720 --> 00:15:27,120
more modern apps and modern base apps

402
00:15:27,120 --> 00:15:29,199
where it's purely serverless it's not

403
00:15:29,199 --> 00:15:33,599
it's purely just code that is being ran

404
00:15:34,320 --> 00:15:36,399
hybrid cloud movement via cloud app so

405
00:15:36,399 --> 00:15:39,920
this is a dual one one is a lot of our

406
00:15:39,920 --> 00:15:41,360
organizations especially financial

407
00:15:41,360 --> 00:15:43,600
organizations they have a

408
00:15:43,600 --> 00:15:46,079
external facing app whether it's mobile

409
00:15:46,079 --> 00:15:48,560
app or website where they ask you to

410
00:15:48,560 --> 00:15:50,639
upload a document you can upload a

411
00:15:50,639 --> 00:15:53,440
document to do some verification and

412
00:15:53,440 --> 00:15:55,279
what we've seen is attackers are

413
00:15:55,279 --> 00:15:57,759
uploading malicious files

414
00:15:57,759 --> 00:16:00,560
that if they're not being

415
00:16:00,560 --> 00:16:03,839
traced and not being reviewed at that

416
00:16:03,839 --> 00:16:06,160
cloud app level and is being downloaded

417
00:16:06,160 --> 00:16:08,240
on the endpoint of whoever's reviewing

418
00:16:08,240 --> 00:16:09,920
that business analyst

419
00:16:09,920 --> 00:16:13,040
then the it does a code execution once

420
00:16:13,040 --> 00:16:15,759
it's turned on with some macro or if

421
00:16:15,759 --> 00:16:17,680
it's a pdf they'll have some javascript

422
00:16:17,680 --> 00:16:20,320
in the back to run whenever it is opened

423
00:16:20,320 --> 00:16:22,320
and that way they'll be able to run it

424
00:16:22,320 --> 00:16:24,160
on that endpoint

425
00:16:24,160 --> 00:16:26,399
get the necessary information be able to

426
00:16:26,399 --> 00:16:28,480
do some code execution and they have

427
00:16:28,480 --> 00:16:30,160
that initial access

428
00:16:30,160 --> 00:16:32,480
and from there they'll go in and of

429
00:16:32,480 --> 00:16:34,240
course traverse the cloud or traverse

430
00:16:34,240 --> 00:16:37,440
the in on-prem to then make it into the

431
00:16:37,440 --> 00:16:38,320
cloud

432
00:16:38,320 --> 00:16:40,000
another way of doing hybrid is if you

433
00:16:40,000 --> 00:16:43,040
have that hybrid identity you have an on

434
00:16:43,040 --> 00:16:44,240
and a

435
00:16:44,240 --> 00:16:46,480
cloud identity and because of that

436
00:16:46,480 --> 00:16:48,880
you'll be able to traverse either from

437
00:16:48,880 --> 00:16:52,320
on-prem or into the cloud

438
00:16:53,279 --> 00:16:55,360
third-party library supply chain attack

439
00:16:55,360 --> 00:16:57,360
so this is uh

440
00:16:57,360 --> 00:16:59,680
it's funny when i was uh just

441
00:16:59,680 --> 00:17:02,000
last week this is something that's gonna

442
00:17:02,000 --> 00:17:05,119
hit home for us so this is where a an

443
00:17:05,119 --> 00:17:07,359
attack it's very it's very sophisticated

444
00:17:07,359 --> 00:17:08,640
and modern

445
00:17:08,640 --> 00:17:11,359
so you'll have your application and your

446
00:17:11,359 --> 00:17:14,559
application has packages npm being a

447
00:17:14,559 --> 00:17:17,760
major library package provider where

448
00:17:17,760 --> 00:17:18,640
you'll

449
00:17:18,640 --> 00:17:20,240
have your

450
00:17:20,240 --> 00:17:22,880
packages run and with that what we've

451
00:17:22,880 --> 00:17:25,520
seen is an attacker is able to

452
00:17:25,520 --> 00:17:27,599
find out information about the

453
00:17:27,599 --> 00:17:29,039
application

454
00:17:29,039 --> 00:17:30,000
through

455
00:17:30,000 --> 00:17:32,000
open source intelligence once you're

456
00:17:32,000 --> 00:17:33,600
able to find out you can figure out what

457
00:17:33,600 --> 00:17:35,760
type of packages are being ran on the

458
00:17:35,760 --> 00:17:37,760
endpoint and what the this specific

459
00:17:37,760 --> 00:17:39,840
third actor was able to do is put a

460
00:17:39,840 --> 00:17:41,120
malicious

461
00:17:41,120 --> 00:17:43,120
code and malicious set of functions

462
00:17:43,120 --> 00:17:46,400
within an already existing npm

463
00:17:46,400 --> 00:17:47,600
package

464
00:17:47,600 --> 00:17:50,640
and as part of the build process

465
00:17:50,640 --> 00:17:52,080
the

466
00:17:52,080 --> 00:17:54,960
victim organization has the application

467
00:17:54,960 --> 00:17:57,600
go to npm major uh library and then

468
00:17:57,600 --> 00:17:58,799
install it

469
00:17:58,799 --> 00:18:00,400
and once it's installed it installs a

470
00:18:00,400 --> 00:18:01,919
malicious version

471
00:18:01,919 --> 00:18:03,440
and then once they have the malicious

472
00:18:03,440 --> 00:18:04,559
version

473
00:18:04,559 --> 00:18:07,440
then they have the ability to access

474
00:18:07,440 --> 00:18:09,440
whatever they need

475
00:18:09,440 --> 00:18:12,400
i i kind of laugh at this because

476
00:18:12,400 --> 00:18:15,520
this just happened last week so last

477
00:18:15,520 --> 00:18:18,880
week another npm library was just

478
00:18:18,880 --> 00:18:20,799
discovered that was malicious it's the

479
00:18:20,799 --> 00:18:22,720
ua-parser

480
00:18:22,720 --> 00:18:25,679
library and this just came out news last

481
00:18:25,679 --> 00:18:26,799
week

482
00:18:26,799 --> 00:18:30,320
where a malicious version of a library

483
00:18:30,320 --> 00:18:32,720
package that's been downloaded millions

484
00:18:32,720 --> 00:18:34,080
of times

485
00:18:34,080 --> 00:18:35,120
was

486
00:18:35,120 --> 00:18:36,799
was turned out to be have a malicious

487
00:18:36,799 --> 00:18:38,640
code in there

488
00:18:38,640 --> 00:18:40,640
up to three different versions of it so

489
00:18:40,640 --> 00:18:43,360
they had all the organizations who used

490
00:18:43,360 --> 00:18:44,559
a specific

491
00:18:44,559 --> 00:18:48,320
library package to go back and do the

492
00:18:48,320 --> 00:18:50,160
more updated version to remove the

493
00:18:50,160 --> 00:18:53,520
malicious code and functions

494
00:18:53,760 --> 00:18:56,480
and there's a bunch of other types of

495
00:18:56,480 --> 00:18:58,400
attacks that i don't want to kind of get

496
00:18:58,400 --> 00:19:01,679
too deep into because of time but your

497
00:19:01,679 --> 00:19:04,160
your typical open s3 bucket or storage

498
00:19:04,160 --> 00:19:06,480
blob this is still happening and we're

499
00:19:06,480 --> 00:19:08,840
still seeing this all the time where an

500
00:19:08,840 --> 00:19:11,280
organization maybe accidentally creates

501
00:19:11,280 --> 00:19:13,679
an s3 bucket or by

502
00:19:13,679 --> 00:19:16,400
the very nature of how their application

503
00:19:16,400 --> 00:19:18,080
or their website set up they have an

504
00:19:18,080 --> 00:19:21,360
open s3 bucket but the files that they

505
00:19:21,360 --> 00:19:25,039
have there are not supposed to be public

506
00:19:25,039 --> 00:19:26,720
credential compromise through endpoint

507
00:19:26,720 --> 00:19:28,080
and phishing we've talked about and then

508
00:19:28,080 --> 00:19:30,240
the third party application so

509
00:19:30,240 --> 00:19:32,160
because a lot of these applications are

510
00:19:32,160 --> 00:19:35,440
using oauth types of methodologies like

511
00:19:35,440 --> 00:19:39,200
oauth in the app store or on a google

512
00:19:39,200 --> 00:19:41,039
play they'll be able to put in a

513
00:19:41,039 --> 00:19:43,440
malicious application either you could

514
00:19:43,440 --> 00:19:45,679
do that through let's say g workspace

515
00:19:45,679 --> 00:19:47,600
and download a malicious application

516
00:19:47,600 --> 00:19:48,400
from

517
00:19:48,400 --> 00:19:50,720
their google play store or if you're

518
00:19:50,720 --> 00:19:54,160
using any sort of application

519
00:19:54,160 --> 00:19:55,760
library where you can download

520
00:19:55,760 --> 00:19:57,600
applications they're also doing it like

521
00:19:57,600 --> 00:19:59,440
that

522
00:19:59,440 --> 00:20:02,559
and this gets us into a more novel

523
00:20:02,559 --> 00:20:03,600
technique

524
00:20:03,600 --> 00:20:05,760
and and this is what we're calling uh

525
00:20:05,760 --> 00:20:07,440
what's been deemed and termed as a

526
00:20:07,440 --> 00:20:09,679
golden saml attack

527
00:20:09,679 --> 00:20:13,600
and what what this is is um if it was

528
00:20:13,600 --> 00:20:16,159
first thought of and conceived by the

529
00:20:16,159 --> 00:20:18,640
cyber arc researchers in 2017

530
00:20:18,640 --> 00:20:21,440
this was known in our in the cyber

531
00:20:21,440 --> 00:20:22,799
security community and the cloud

532
00:20:22,799 --> 00:20:24,400
security community as

533
00:20:24,400 --> 00:20:27,600
a theoretical approach and attack method

534
00:20:27,600 --> 00:20:29,679
of the cloud but this really came into

535
00:20:29,679 --> 00:20:31,760
fruition with the solarwinds threat

536
00:20:31,760 --> 00:20:34,559
actor that happened over december when

537
00:20:34,559 --> 00:20:37,600
this uh when everyone kind of the whole

538
00:20:37,600 --> 00:20:39,039
world stopped in the cyber security

539
00:20:39,039 --> 00:20:40,559
community because of the solar winds

540
00:20:40,559 --> 00:20:42,799
through actor and the one of the methods

541
00:20:42,799 --> 00:20:45,679
they were able to abuse was

542
00:20:45,679 --> 00:20:47,520
the golden samuel attack and what is

543
00:20:47,520 --> 00:20:48,960
that really

544
00:20:48,960 --> 00:20:50,799
before getting in there

545
00:20:50,799 --> 00:20:52,159
one thing you do have the golden salmon

546
00:20:52,159 --> 00:20:53,679
where you can get into any cloud

547
00:20:53,679 --> 00:20:54,799
platform

548
00:20:54,799 --> 00:20:56,880
i just wanted to kind of mention aws

549
00:20:56,880 --> 00:20:58,960
azure gcp has a major

550
00:20:58,960 --> 00:21:00,400
types of cloud platforms but anything

551
00:21:00,400 --> 00:21:04,480
that uses an idp in to single sign on

552
00:21:04,480 --> 00:21:06,880
into a cloud platform is is vulnerable

553
00:21:06,880 --> 00:21:09,360
to this type of attack

554
00:21:09,360 --> 00:21:12,799
so before we getting we get into what is

555
00:21:12,799 --> 00:21:13,380
a

556
00:21:13,380 --> 00:21:14,640
[Music]

557
00:21:14,640 --> 00:21:16,159
golden samuel attack we have to kind of

558
00:21:16,159 --> 00:21:17,200
go through

559
00:21:17,200 --> 00:21:20,159
what is saml and what is a saml

560
00:21:20,159 --> 00:21:22,400
type of authentication that happens

561
00:21:22,400 --> 00:21:27,440
so samwell 1.0 came out in 2001

562
00:21:27,440 --> 00:21:28,960
and the version that pretty much

563
00:21:28,960 --> 00:21:31,120
everyone uses now is saml 2.0 which just

564
00:21:31,120 --> 00:21:33,120
came out around 2005

565
00:21:33,120 --> 00:21:34,720
and it's really based off of three

566
00:21:34,720 --> 00:21:37,120
things you have your user agent

567
00:21:37,120 --> 00:21:39,919
you have your identity provider

568
00:21:39,919 --> 00:21:42,000
and then you have your service that your

569
00:21:42,000 --> 00:21:44,320
application that you're trying to access

570
00:21:44,320 --> 00:21:47,280
so whenever you go in as a user you try

571
00:21:47,280 --> 00:21:49,919
to go and access let's say aws

572
00:21:49,919 --> 00:21:52,240
when you access aws aws says hey you

573
00:21:52,240 --> 00:21:54,320
have to go back to my identity to the

574
00:21:54,320 --> 00:21:56,880
identity provider to validate yourself

575
00:21:56,880 --> 00:21:58,640
you validate yourself with the identity

576
00:21:58,640 --> 00:22:00,559
provider then

577
00:22:00,559 --> 00:22:02,159
once you validate yourself you then

578
00:22:02,159 --> 00:22:03,200
create a

579
00:22:03,200 --> 00:22:06,320
saml assertion that samuel insertion is

580
00:22:06,320 --> 00:22:08,240
then passed from

581
00:22:08,240 --> 00:22:09,280
the

582
00:22:09,280 --> 00:22:11,120
identity provider

583
00:22:11,120 --> 00:22:13,280
to the cloud provider to the whatever

584
00:22:13,280 --> 00:22:15,280
application you want and then you have

585
00:22:15,280 --> 00:22:16,559
access

586
00:22:16,559 --> 00:22:19,039
now this got the cyborg researchers

587
00:22:19,039 --> 00:22:20,720
thinking and

588
00:22:20,720 --> 00:22:23,919
how can we be able to abuse this

589
00:22:23,919 --> 00:22:27,039
then came the code and samuel attack

590
00:22:27,039 --> 00:22:30,159
they said what if we were to

591
00:22:30,159 --> 00:22:30,960
get

592
00:22:30,960 --> 00:22:33,919
access to the identity provider

593
00:22:33,919 --> 00:22:35,840
and be able to extract those

594
00:22:35,840 --> 00:22:38,640
certificates that were already created

595
00:22:38,640 --> 00:22:40,400
then we'll be able to

596
00:22:40,400 --> 00:22:41,600
basically

597
00:22:41,600 --> 00:22:45,280
masquerade as a

598
00:22:45,280 --> 00:22:46,960
as an as a user

599
00:22:46,960 --> 00:22:48,799
by using that samuel assertion because

600
00:22:48,799 --> 00:22:50,480
at the end of the day the semi-assertion

601
00:22:50,480 --> 00:22:52,559
is getting passed

602
00:22:52,559 --> 00:22:56,480
so we can create a kind of forged ticket

603
00:22:56,480 --> 00:22:58,559
into the cloud and this is what

604
00:22:58,559 --> 00:23:00,880
we saw is once they got into the for for

605
00:23:00,880 --> 00:23:03,280
example the solarwinds director they got

606
00:23:03,280 --> 00:23:05,600
into the adfs database once they're in

607
00:23:05,600 --> 00:23:07,520
the adfs database

608
00:23:07,520 --> 00:23:09,120
they were able to

609
00:23:09,120 --> 00:23:10,799
extract a

610
00:23:10,799 --> 00:23:12,080
certificate

611
00:23:12,080 --> 00:23:13,200
once they're able to extract their

612
00:23:13,200 --> 00:23:15,520
certificate they'll be they then pushed

613
00:23:15,520 --> 00:23:18,640
the saml assertion of forged sample

614
00:23:18,640 --> 00:23:21,039
assertion into the cloud which they were

615
00:23:21,039 --> 00:23:23,440
able to bypass mfa mfa is

616
00:23:23,440 --> 00:23:26,320
not even an issue with this because

617
00:23:26,320 --> 00:23:27,919
you're coming from a trusted identity

618
00:23:27,919 --> 00:23:29,919
provider it's going to show mfa's

619
00:23:29,919 --> 00:23:31,120
already been

620
00:23:31,120 --> 00:23:33,440
included even though there was no mfa

621
00:23:33,440 --> 00:23:36,440
prompt

622
00:23:36,640 --> 00:23:38,640
so then this gets into one of the major

623
00:23:38,640 --> 00:23:41,679
reasons for this talk is how can we

624
00:23:41,679 --> 00:23:43,520
be able to

625
00:23:43,520 --> 00:23:46,799
detect an alert on this very novel way

626
00:23:46,799 --> 00:23:49,039
because this is something that has just

627
00:23:49,039 --> 00:23:51,840
barely been thought of and we it was

628
00:23:51,840 --> 00:23:53,840
always a theoretical

629
00:23:53,840 --> 00:23:56,400
method of attacking the cloud

630
00:23:56,400 --> 00:23:58,000
but the solarwinds through act really

631
00:23:58,000 --> 00:23:59,760
put this into the forefront because of

632
00:23:59,760 --> 00:24:01,200
the fact that they were able to use and

633
00:24:01,200 --> 00:24:02,960
abuse this technique

634
00:24:02,960 --> 00:24:04,559
so there's you know one thing is we have

635
00:24:04,559 --> 00:24:06,000
to attack

636
00:24:06,000 --> 00:24:07,360
we have to understand detecting the

637
00:24:07,360 --> 00:24:09,279
different phases of the gold of the saml

638
00:24:09,279 --> 00:24:10,640
process

639
00:24:10,640 --> 00:24:12,559
what are the data sources and then of

640
00:24:12,559 --> 00:24:15,440
course alerting

641
00:24:15,440 --> 00:24:16,960
so there are some different detection

642
00:24:16,960 --> 00:24:20,559
opportunities and you have

643
00:24:20,559 --> 00:24:22,640
some log sources such as from the

644
00:24:22,640 --> 00:24:24,960
identity provider on the left the

645
00:24:24,960 --> 00:24:28,320
identity provider is let's say octa

646
00:24:28,320 --> 00:24:31,279
or some other idp mobile iron or some

647
00:24:31,279 --> 00:24:34,880
other idp like adfs they have logs

648
00:24:34,880 --> 00:24:36,480
so you want to take the logs from your

649
00:24:36,480 --> 00:24:38,000
identity provider

650
00:24:38,000 --> 00:24:40,480
and then also take the logs from

651
00:24:40,480 --> 00:24:42,240
your service

652
00:24:42,240 --> 00:24:44,720
that you're trying to get into aws

653
00:24:44,720 --> 00:24:47,600
gcp azure or whatever cloud platform

654
00:24:47,600 --> 00:24:50,159
and then be able to correlate that

655
00:24:50,159 --> 00:24:53,760
you know if there is a specific uh

656
00:24:53,760 --> 00:24:56,000
login activity that's happening in the

657
00:24:56,000 --> 00:24:58,559
idp and that login activity is also

658
00:24:58,559 --> 00:25:00,799
happening in the cloud

659
00:25:00,799 --> 00:25:02,880
that's a legitimate session

660
00:25:02,880 --> 00:25:04,720
but what you'll notice is during the

661
00:25:04,720 --> 00:25:06,720
golden samuel process

662
00:25:06,720 --> 00:25:09,360
that those two log correlations do not

663
00:25:09,360 --> 00:25:11,600
work because there is no true login

664
00:25:11,600 --> 00:25:14,480
happening at the idp level

665
00:25:14,480 --> 00:25:16,000
they're just uh if they've already

666
00:25:16,000 --> 00:25:18,960
extracted the tokens and then forging a

667
00:25:18,960 --> 00:25:21,919
sample token later

668
00:25:22,159 --> 00:25:24,559
so one one ways and i'm going to use aws

669
00:25:24,559 --> 00:25:27,279
as an example is you know going through

670
00:25:27,279 --> 00:25:29,520
aws logs for example you want to look at

671
00:25:29,520 --> 00:25:32,159
the aws api calls

672
00:25:32,159 --> 00:25:34,559
and seeing those types of calls and then

673
00:25:34,559 --> 00:25:36,640
correlating that with your idp so a lot

674
00:25:36,640 --> 00:25:39,840
of idps for example adfs has logs

675
00:25:39,840 --> 00:25:42,480
it is something that they're

676
00:25:42,480 --> 00:25:44,720
they're continuously working on

677
00:25:44,720 --> 00:25:46,400
and to improve the

678
00:25:46,400 --> 00:25:48,799
the specifics of the logs and getting a

679
00:25:48,799 --> 00:25:50,559
lot more robust

680
00:25:50,559 --> 00:25:52,240
but you'll be able to see majority of

681
00:25:52,240 --> 00:25:54,480
the major idps should be able to give

682
00:25:54,480 --> 00:25:58,400
you the logins the users the time stamps

683
00:25:58,400 --> 00:26:00,480
and the big thing is making sure your

684
00:26:00,480 --> 00:26:02,400
timestamps match

685
00:26:02,400 --> 00:26:05,200
it is an investigator's nightmare when

686
00:26:05,200 --> 00:26:07,120
we have to deal with 10 15 different

687
00:26:07,120 --> 00:26:08,480
timestamps

688
00:26:08,480 --> 00:26:09,679
and

689
00:26:09,679 --> 00:26:11,840
there's not a consistent method usually

690
00:26:11,840 --> 00:26:13,440
utc is

691
00:26:13,440 --> 00:26:15,279
the standard method whenever we're doing

692
00:26:15,279 --> 00:26:17,520
our instant response reports it keeps

693
00:26:17,520 --> 00:26:20,559
everyone in line in terms of making sure

694
00:26:20,559 --> 00:26:21,760
when we whenever we're putting a

695
00:26:21,760 --> 00:26:24,720
storyline together of an attack it it

696
00:26:24,720 --> 00:26:28,159
makes sense and to in a nice a specific

697
00:26:28,159 --> 00:26:29,440
timeline

698
00:26:29,440 --> 00:26:32,080
so for this example you'll have your uh

699
00:26:32,080 --> 00:26:33,279
event type

700
00:26:33,279 --> 00:26:34,799
your api call

701
00:26:34,799 --> 00:26:36,720
you're having your user and then you

702
00:26:36,720 --> 00:26:39,120
want to verify that user has also logged

703
00:26:39,120 --> 00:26:41,120
in at the idp

704
00:26:41,120 --> 00:26:43,679
so if if you don't see that then you

705
00:26:43,679 --> 00:26:46,400
will notice that that is a forged

706
00:26:46,400 --> 00:26:47,440
sample

707
00:26:47,440 --> 00:26:49,440
so let's let's think about building out

708
00:26:49,440 --> 00:26:52,000
a detection so we have the cloud service

709
00:26:52,000 --> 00:26:54,799
logs if it's a cloud shell logs if it's

710
00:26:54,799 --> 00:26:56,000
azure

711
00:26:56,000 --> 00:27:00,240
80 sign in logs or gcp logs stack driver

712
00:27:00,240 --> 00:27:02,320
then you have your idp logs you want to

713
00:27:02,320 --> 00:27:04,400
make sure your idp logs are

714
00:27:04,400 --> 00:27:07,200
enforced and advanced so for example you

715
00:27:07,200 --> 00:27:09,520
need to make sure in your adfs you're

716
00:27:09,520 --> 00:27:12,480
getting event ids 1200 1202s you want to

717
00:27:12,480 --> 00:27:15,200
make sure you're getting not just the

718
00:27:15,200 --> 00:27:16,960
general logs the administrative logs

719
00:27:16,960 --> 00:27:18,640
that's there by default but also some of

720
00:27:18,640 --> 00:27:20,720
the diagnostic logs it's used a lot of

721
00:27:20,720 --> 00:27:22,159
times it's used for diagnostics but in

722
00:27:22,159 --> 00:27:24,000
terms of an investigation

723
00:27:24,000 --> 00:27:26,480
more information is never bad

724
00:27:26,480 --> 00:27:28,000
and then we want to aggregate it and

725
00:27:28,000 --> 00:27:29,760
being able to

726
00:27:29,760 --> 00:27:32,799
ensure that both logs are being able to

727
00:27:32,799 --> 00:27:34,720
be coalesced and

728
00:27:34,720 --> 00:27:37,039
events are being able to be correlated

729
00:27:37,039 --> 00:27:37,919
and then

730
00:27:37,919 --> 00:27:39,600
last but not least you want to filter

731
00:27:39,600 --> 00:27:41,279
you want to filter making sure that the

732
00:27:41,279 --> 00:27:43,679
mfa sessions are showing and being able

733
00:27:43,679 --> 00:27:46,000
to show that if you have an mfa session

734
00:27:46,000 --> 00:27:48,399
it is showing that an mfa has been

735
00:27:48,399 --> 00:27:50,480
provided but as i said the golden

736
00:27:50,480 --> 00:27:52,000
sandwich still

737
00:27:52,000 --> 00:27:55,919
shows an mfa session was present

738
00:27:56,559 --> 00:27:58,880
so let's i'm going to give an example of

739
00:27:58,880 --> 00:28:01,919
how you would build an alert using

740
00:28:01,919 --> 00:28:02,960
splunk

741
00:28:02,960 --> 00:28:05,440
so this is splunk queries

742
00:28:05,440 --> 00:28:07,919
the same thing can be for any specific

743
00:28:07,919 --> 00:28:10,320
uh sim or log aggregation platform

744
00:28:10,320 --> 00:28:13,039
elastic or qradar with the same

745
00:28:13,039 --> 00:28:14,799
principles which is

746
00:28:14,799 --> 00:28:17,840
you have your aw api calls you want to

747
00:28:17,840 --> 00:28:19,039
also have

748
00:28:19,039 --> 00:28:21,760
for a user and you want to put it for

749
00:28:21,760 --> 00:28:23,679
let's say an hour

750
00:28:23,679 --> 00:28:26,000
and you want to keep that uh you know

751
00:28:26,000 --> 00:28:27,919
making sure it's not let's say in the

752
00:28:27,919 --> 00:28:31,039
sds assume role it is not just a general

753
00:28:31,039 --> 00:28:32,960
aws account making sure it's not a

754
00:28:32,960 --> 00:28:34,559
source ip being

755
00:28:34,559 --> 00:28:35,520
uh

756
00:28:35,520 --> 00:28:38,240
let's say an amazon aws so then we can

757
00:28:38,240 --> 00:28:42,080
make sure it's coming from your idp

758
00:28:42,080 --> 00:28:44,559
and then you want to also look at the

759
00:28:44,559 --> 00:28:46,640
idp authentication events you want to

760
00:28:46,640 --> 00:28:48,159
see something over the previous five

761
00:28:48,159 --> 00:28:51,039
hours generally mfa sessions last four

762
00:28:51,039 --> 00:28:52,159
hours

763
00:28:52,159 --> 00:28:54,080
this is the reason why we

764
00:28:54,080 --> 00:28:57,360
created this alert to say five hours and

765
00:28:57,360 --> 00:28:59,600
you'll be able to see if something has a

766
00:28:59,600 --> 00:29:01,919
user has logged in and then 12 hours

767
00:29:01,919 --> 00:29:04,640
later the login actually happens at the

768
00:29:04,640 --> 00:29:07,200
service provider that is a telltale sign

769
00:29:07,200 --> 00:29:10,840
of a potential golden saml

770
00:29:10,840 --> 00:29:13,279
attack then you want to combine the

771
00:29:13,279 --> 00:29:15,760
usernames across the different fields of

772
00:29:15,760 --> 00:29:18,080
the idp and your

773
00:29:18,080 --> 00:29:20,159
cloud service provider using things like

774
00:29:20,159 --> 00:29:22,720
coalesce making sure the user that's

775
00:29:22,720 --> 00:29:25,440
happening in the cloudtrail logs is also

776
00:29:25,440 --> 00:29:28,320
the same user that is in the

777
00:29:28,320 --> 00:29:30,399
idp so making sure those usernames are

778
00:29:30,399 --> 00:29:31,760
matching

779
00:29:31,760 --> 00:29:33,679
then you want to aggregate you know both

780
00:29:33,679 --> 00:29:36,640
the indexes to be able to show that the

781
00:29:36,640 --> 00:29:37,679
timing

782
00:29:37,679 --> 00:29:38,799
and the

783
00:29:38,799 --> 00:29:41,760
different events are in a successive

784
00:29:41,760 --> 00:29:43,840
fashion you should see the these types

785
00:29:43,840 --> 00:29:46,799
of events happen in in succession

786
00:29:46,799 --> 00:29:49,039
so with a few milliseconds difference or

787
00:29:49,039 --> 00:29:50,320
a second difference if you're starting

788
00:29:50,320 --> 00:29:52,640
to see that delay in

789
00:29:52,640 --> 00:29:54,880
hours that's where you need to have a

790
00:29:54,880 --> 00:29:56,799
further investigation of what exactly is

791
00:29:56,799 --> 00:29:59,200
happening

792
00:29:59,520 --> 00:30:00,960
and then you get the final resort

793
00:30:00,960 --> 00:30:04,559
results you'll have the aws for example

794
00:30:04,559 --> 00:30:06,880
this one we use ping federated as this

795
00:30:06,880 --> 00:30:08,640
example and

796
00:30:08,640 --> 00:30:12,000
you know showing that if the api has

797
00:30:12,000 --> 00:30:14,480
shown no mfa allowed or the output

798
00:30:14,480 --> 00:30:16,320
filter you can use this for kind of

799
00:30:16,320 --> 00:30:18,320
looking up if a user has been able to

800
00:30:18,320 --> 00:30:19,919
bypass mfa

801
00:30:19,919 --> 00:30:22,640
and been able to filter out any sort of

802
00:30:22,640 --> 00:30:26,159
additional logs past that 14400 which is

803
00:30:26,159 --> 00:30:29,120
that four hour window

804
00:30:29,120 --> 00:30:31,200
some additional resources to go through

805
00:30:31,200 --> 00:30:33,679
which is around some minor mitigations

806
00:30:33,679 --> 00:30:36,399
so miters put together since this

807
00:30:36,399 --> 00:30:38,000
solarwinds thread actor

808
00:30:38,000 --> 00:30:40,399
has put together some specific

809
00:30:40,399 --> 00:30:43,039
attack techno detections as well as

810
00:30:43,039 --> 00:30:44,320
mitigations

811
00:30:44,320 --> 00:30:46,480
and from the miter you have your active

812
00:30:46,480 --> 00:30:48,480
directory configurations

813
00:30:48,480 --> 00:30:50,880
one zero four seven with around audit

814
00:30:50,880 --> 00:30:52,480
privilege account management and user

815
00:30:52,480 --> 00:30:55,360
account management

816
00:30:57,200 --> 00:30:59,279
some additional resources so uh what

817
00:30:59,279 --> 00:31:01,200
we've done after the slowest threat

818
00:31:01,200 --> 00:31:04,480
actor that was able to abuse

819
00:31:04,480 --> 00:31:06,480
ourselves as well as a lot of other

820
00:31:06,480 --> 00:31:08,320
government organizations we put together

821
00:31:08,320 --> 00:31:10,880
a white paper and just yesterday we did

822
00:31:10,880 --> 00:31:12,720
an update to this white paper because

823
00:31:12,720 --> 00:31:14,559
the solarwinds threat actors are not

824
00:31:14,559 --> 00:31:15,600
stopping

825
00:31:15,600 --> 00:31:18,000
they're finding out more novel ways so

826
00:31:18,000 --> 00:31:21,919
this just yesterday we had a new update

827
00:31:21,919 --> 00:31:23,919
to this white paper where we

828
00:31:23,919 --> 00:31:27,039
specifically found some additional novel

829
00:31:27,039 --> 00:31:28,799
techniques that they're using

830
00:31:28,799 --> 00:31:30,960
such as the impersonation role as well

831
00:31:30,960 --> 00:31:33,919
as using cloud providers from other

832
00:31:33,919 --> 00:31:35,919
organizations to go into victim

833
00:31:35,919 --> 00:31:38,640
organizations

834
00:31:39,919 --> 00:31:41,039
now i just want to kind of go through

835
00:31:41,039 --> 00:31:43,440
some security best practices

836
00:31:43,440 --> 00:31:44,720
starting with governance you know

837
00:31:44,720 --> 00:31:47,440
something that we don't like as

838
00:31:47,440 --> 00:31:49,760
tech people governance is kind of a oh

839
00:31:49,760 --> 00:31:51,200
man we have to do it but it is a

840
00:31:51,200 --> 00:31:53,200
necessary evil it is something that has

841
00:31:53,200 --> 00:31:54,320
to occur

842
00:31:54,320 --> 00:31:55,440
something

843
00:31:55,440 --> 00:31:57,360
you need to have guardrails in place you

844
00:31:57,360 --> 00:31:59,679
need to have that top down approach so

845
00:31:59,679 --> 00:32:02,640
then you are able to specify what

846
00:32:02,640 --> 00:32:04,080
exactly

847
00:32:04,080 --> 00:32:06,000
from the organization's

848
00:32:06,000 --> 00:32:08,880
policies can something happen because

849
00:32:08,880 --> 00:32:12,000
you as a security analyst an incident

850
00:32:12,000 --> 00:32:14,559
responder you can't change

851
00:32:14,559 --> 00:32:17,120
uh or you can a lot of times whenever

852
00:32:17,120 --> 00:32:19,039
i'm doing instant responses

853
00:32:19,039 --> 00:32:21,519
or and or just proactive assessments

854
00:32:21,519 --> 00:32:23,600
you'll see a organization saying yeah

855
00:32:23,600 --> 00:32:25,840
but it's not in our policy

856
00:32:25,840 --> 00:32:27,679
if it's not in our policy i can still do

857
00:32:27,679 --> 00:32:28,480
it

858
00:32:28,480 --> 00:32:30,240
so this is where it's very crucial to

859
00:32:30,240 --> 00:32:32,159
have that top down approach

860
00:32:32,159 --> 00:32:35,360
um you know understanding the the cloud

861
00:32:35,360 --> 00:32:37,440
providers and each cloud provider has

862
00:32:37,440 --> 00:32:39,360
their security contact field

863
00:32:39,360 --> 00:32:41,600
this is key because whenever a

864
00:32:41,600 --> 00:32:43,279
notification comes out from let's say

865
00:32:43,279 --> 00:32:46,799
aws or azure or if you have any sort of

866
00:32:46,799 --> 00:32:49,200
an investigation that needs to occur you

867
00:32:49,200 --> 00:32:51,519
can contact your security contact field

868
00:32:51,519 --> 00:32:53,519
and they'll be the first ones to contact

869
00:32:53,519 --> 00:32:56,000
that person and then determine what what

870
00:32:56,000 --> 00:32:58,320
exactly is happening

871
00:32:58,320 --> 00:32:59,840
and then understand the compliance uh

872
00:32:59,840 --> 00:33:01,760
compliance requirements based off

873
00:33:01,760 --> 00:33:03,679
regulatory standard what is it that

874
00:33:03,679 --> 00:33:05,919
needs to occur and then how can a cloud

875
00:33:05,919 --> 00:33:08,880
service provider be able to

876
00:33:08,880 --> 00:33:11,200
apply that with if it's a native service

877
00:33:11,200 --> 00:33:13,200
or if it's a service that has to be a

878
00:33:13,200 --> 00:33:15,840
third party

879
00:33:15,919 --> 00:33:18,399
identity and access management

880
00:33:18,399 --> 00:33:21,840
mfa is still very important it is

881
00:33:21,840 --> 00:33:24,000
something we're seeing all the time one

882
00:33:24,000 --> 00:33:26,080
thing we're seeing is people focus on

883
00:33:26,080 --> 00:33:27,360
mfa

884
00:33:27,360 --> 00:33:30,320
on console access but they totally

885
00:33:30,320 --> 00:33:31,840
neglect

886
00:33:31,840 --> 00:33:35,039
mfa for cli command line command line

887
00:33:35,039 --> 00:33:37,600
interface or powershell

888
00:33:37,600 --> 00:33:38,799
this is something that we're seeing

889
00:33:38,799 --> 00:33:40,480
attackers utilize because that's how

890
00:33:40,480 --> 00:33:43,039
they're able to run a lot of their

891
00:33:43,039 --> 00:33:45,279
quick reconnaissance on an on

892
00:33:45,279 --> 00:33:47,679
on a victim's organization is using

893
00:33:47,679 --> 00:33:51,679
these command line types of arguments

894
00:33:51,679 --> 00:33:54,640
which which you'll need to have an mfa

895
00:33:54,640 --> 00:33:58,640
on both the organization coming in the

896
00:33:58,640 --> 00:34:01,120
person coming in from a console

897
00:34:01,120 --> 00:34:03,120
as well as a person coming in from a

898
00:34:03,120 --> 00:34:05,600
command line interface

899
00:34:05,600 --> 00:34:07,679
least privilege is still very key i

900
00:34:07,679 --> 00:34:09,280
talked about a little bit earlier the

901
00:34:09,280 --> 00:34:11,679
principal lease privilege gets even

902
00:34:11,679 --> 00:34:14,719
enhanced more because of

903
00:34:14,719 --> 00:34:16,960
just the nature of identities and how

904
00:34:16,960 --> 00:34:19,440
they are in the cloud

905
00:34:19,440 --> 00:34:21,119
privilege accounts so privilege account

906
00:34:21,119 --> 00:34:23,679
management is something that i feel like

907
00:34:23,679 --> 00:34:25,520
a lot of organizations are are starting

908
00:34:25,520 --> 00:34:27,599
to lose focus on when they get into the

909
00:34:27,599 --> 00:34:30,079
cloud because this is usually the

910
00:34:30,079 --> 00:34:31,679
byproduct of

911
00:34:31,679 --> 00:34:32,560
the

912
00:34:32,560 --> 00:34:34,239
people who are in the cloud the people

913
00:34:34,239 --> 00:34:35,599
who are in the cloud as i mentioned are

914
00:34:35,599 --> 00:34:36,960
not your

915
00:34:36,960 --> 00:34:39,040
i.t security folks it's usually the last

916
00:34:39,040 --> 00:34:41,760
people to the party is i.t security or

917
00:34:41,760 --> 00:34:43,520
cyber security teams or any of your

918
00:34:43,520 --> 00:34:46,079
security teams the first as i mentioned

919
00:34:46,079 --> 00:34:48,560
is devops and you have other teams

920
00:34:48,560 --> 00:34:50,800
creating their own cloud

921
00:34:50,800 --> 00:34:53,040
instances and the last one is probably

922
00:34:53,040 --> 00:34:54,879
uh one of the last ones are it and for

923
00:34:54,879 --> 00:34:57,839
sure the very last ones are security so

924
00:34:57,839 --> 00:34:59,839
privilege account is

925
00:34:59,839 --> 00:35:02,800
a is just a wild west it's like oprah

926
00:35:02,800 --> 00:35:05,359
everyone gets admin in this instance

927
00:35:05,359 --> 00:35:07,040
because

928
00:35:07,040 --> 00:35:08,720
best way to troubleshoot is just give

929
00:35:08,720 --> 00:35:10,079
the person admin access so you don't

930
00:35:10,079 --> 00:35:11,599
have to worry about permission issues

931
00:35:11,599 --> 00:35:13,760
and you can troubleshoot an application

932
00:35:13,760 --> 00:35:15,920
which is of course never a great thing

933
00:35:15,920 --> 00:35:17,200
to do

934
00:35:17,200 --> 00:35:19,359
temporary credentials this happens all

935
00:35:19,359 --> 00:35:21,200
the time so

936
00:35:21,200 --> 00:35:22,720
long live credentials is one of the

937
00:35:22,720 --> 00:35:24,960
biggest things and one of the ways we've

938
00:35:24,960 --> 00:35:26,960
seen a lot of threat actors

939
00:35:26,960 --> 00:35:29,440
get access maintain persistence and

940
00:35:29,440 --> 00:35:32,480
being able to exfiltrate data i can kind

941
00:35:32,480 --> 00:35:35,920
of give one specific example i had a

942
00:35:35,920 --> 00:35:37,119
ir

943
00:35:37,119 --> 00:35:39,119
about in 2019

944
00:35:39,119 --> 00:35:40,079
for an

945
00:35:40,079 --> 00:35:42,880
organization that had their long-lived

946
00:35:42,880 --> 00:35:46,160
credentials exposed and

947
00:35:46,160 --> 00:35:48,000
one of the things is this organization's

948
00:35:48,000 --> 00:35:50,480
been in aws

949
00:35:50,480 --> 00:35:54,560
since 2008 2009 these were the ogs of

950
00:35:54,560 --> 00:35:57,280
aws they had when s3 was first conceived

951
00:35:57,280 --> 00:36:00,079
they've been in aws so this is not a new

952
00:36:00,079 --> 00:36:02,079
organization barely making their cloud

953
00:36:02,079 --> 00:36:03,839
journey this is an established

954
00:36:03,839 --> 00:36:06,640
organization but of course with aws and

955
00:36:06,640 --> 00:36:08,400
other cloud providers they've made

956
00:36:08,400 --> 00:36:10,720
tremendous

957
00:36:10,720 --> 00:36:12,880
movements and good movements and forward

958
00:36:12,880 --> 00:36:15,359
movements in the in the security space

959
00:36:15,359 --> 00:36:17,280
but for example this specific client

960
00:36:17,280 --> 00:36:19,760
they had the older account they called

961
00:36:19,760 --> 00:36:21,599
it the legacy account

962
00:36:21,599 --> 00:36:23,599
and that lo and behold that was the

963
00:36:23,599 --> 00:36:25,280
account that was abused because they had

964
00:36:25,280 --> 00:36:27,280
long-lived credentials so once we were

965
00:36:27,280 --> 00:36:29,119
able to discover that this specific

966
00:36:29,119 --> 00:36:30,320
credential

967
00:36:30,320 --> 00:36:32,720
was the one that was being

968
00:36:32,720 --> 00:36:34,960
targeted we said okay we have to rotate

969
00:36:34,960 --> 00:36:36,079
it

970
00:36:36,079 --> 00:36:37,680
they were like we can't do that right

971
00:36:37,680 --> 00:36:39,599
away because we have no idea what's

972
00:36:39,599 --> 00:36:40,880
going to break

973
00:36:40,880 --> 00:36:42,560
because these types of credentials are

974
00:36:42,560 --> 00:36:44,240
have never been rotated

975
00:36:44,240 --> 00:36:47,040
sim same thing that happens on-prem

976
00:36:47,040 --> 00:36:49,359
service accounts that's the bane of

977
00:36:49,359 --> 00:36:51,760
every i t and security person's

978
00:36:51,760 --> 00:36:53,040
existence

979
00:36:53,040 --> 00:36:55,680
service accounts that have never rotated

980
00:36:55,680 --> 00:36:57,839
during an incident we tell them hey this

981
00:36:57,839 --> 00:36:59,200
service gun is being abused by threat

982
00:36:59,200 --> 00:37:01,359
actor we need to rotate it

983
00:37:01,359 --> 00:37:03,280
and then they look at us with the face

984
00:37:03,280 --> 00:37:04,960
and say we can't do that right away we

985
00:37:04,960 --> 00:37:08,400
have no idea the impact it could have

986
00:37:08,400 --> 00:37:10,240
and this is something this is happens

987
00:37:10,240 --> 00:37:12,880
on-prem it's happening in the cloud

988
00:37:12,880 --> 00:37:14,960
privilege access workstations as i

989
00:37:14,960 --> 00:37:17,599
mentioned your endpoint is very key and

990
00:37:17,599 --> 00:37:19,520
vital to getting into the cloud

991
00:37:19,520 --> 00:37:21,599
so one of the things you want to do is

992
00:37:21,599 --> 00:37:23,680
protecting your credentials and

993
00:37:23,680 --> 00:37:25,599
protecting your endpoint one way to do

994
00:37:25,599 --> 00:37:27,599
that is using a privilege access

995
00:37:27,599 --> 00:37:29,760
workstation to get into

996
00:37:29,760 --> 00:37:31,760
the cloud so you're not using your

997
00:37:31,760 --> 00:37:33,760
day-to-day workstation that you're going

998
00:37:33,760 --> 00:37:36,400
on the internet checking emails

999
00:37:36,400 --> 00:37:38,560
so then you remove the ability for

1000
00:37:38,560 --> 00:37:41,839
phishing type of compromises or having a

1001
00:37:41,839 --> 00:37:44,079
malware that you get on your own machine

1002
00:37:44,079 --> 00:37:46,560
you're actually logging into a separate

1003
00:37:46,560 --> 00:37:48,480
bastion host or a privilege accident

1004
00:37:48,480 --> 00:37:50,880
workstation a paw machine

1005
00:37:50,880 --> 00:37:53,119
and then logging in from there into the

1006
00:37:53,119 --> 00:37:55,920
cloud provider and when you have a sep

1007
00:37:55,920 --> 00:37:57,520
the best way to do that is if you have

1008
00:37:57,520 --> 00:37:59,359
only a few bastion hosts that gets into

1009
00:37:59,359 --> 00:38:01,280
the cloud provider you can create i am

1010
00:38:01,280 --> 00:38:03,760
policies to say i only want these five

1011
00:38:03,760 --> 00:38:06,560
or six ips to log into my cloud provider

1012
00:38:06,560 --> 00:38:11,078
so then you don't say i want a 10.0.0.8

1013
00:38:11,280 --> 00:38:12,960
ability to log in which if it's an

1014
00:38:12,960 --> 00:38:16,800
internal login you specify ips

1015
00:38:17,599 --> 00:38:19,200
configuration management so

1016
00:38:19,200 --> 00:38:21,040
configurations are going to be key and

1017
00:38:21,040 --> 00:38:22,800
it's where you're going to be able to

1018
00:38:22,800 --> 00:38:24,320
restrict users access i just kind of

1019
00:38:24,320 --> 00:38:26,560
talked about a little bit earlier um

1020
00:38:26,560 --> 00:38:29,040
legacy authentication protocols so back

1021
00:38:29,040 --> 00:38:30,079
in

1022
00:38:30,079 --> 00:38:33,119
the pre-covered days uh it was supposed

1023
00:38:33,119 --> 00:38:37,040
to end uh early on in covid the legacy

1024
00:38:37,040 --> 00:38:39,760
authentication for m365

1025
00:38:39,760 --> 00:38:42,480
uh because of covid and everyone's

1026
00:38:42,480 --> 00:38:43,920
pushing themselves to the cloud they

1027
00:38:43,920 --> 00:38:46,400
actually try to walk that back

1028
00:38:46,400 --> 00:38:49,359
and now they've recreated a new deadline

1029
00:38:49,359 --> 00:38:51,440
of 2022

1030
00:38:51,440 --> 00:38:52,480
but

1031
00:38:52,480 --> 00:38:54,160
legacy authentication why is legacy

1032
00:38:54,160 --> 00:38:56,320
authentication back what is so legacy

1033
00:38:56,320 --> 00:38:57,280
about it

1034
00:38:57,280 --> 00:38:59,520
these authentication types

1035
00:38:59,520 --> 00:39:00,880
imap pop

1036
00:39:00,880 --> 00:39:03,280
do or cannot take multi-factor

1037
00:39:03,280 --> 00:39:05,359
authentication it's just a legacy

1038
00:39:05,359 --> 00:39:07,760
authentication protocol because of that

1039
00:39:07,760 --> 00:39:09,520
you want to kind of remove yourself from

1040
00:39:09,520 --> 00:39:11,520
it so there's a nice way within let's

1041
00:39:11,520 --> 00:39:14,320
say if you have azure m365 you can look

1042
00:39:14,320 --> 00:39:16,720
at your azure ad sign-ons if you go to

1043
00:39:16,720 --> 00:39:18,880
sign-ins you go to user sign-ins you

1044
00:39:18,880 --> 00:39:21,440
then go to client apps there's 13

1045
00:39:21,440 --> 00:39:22,400
different

1046
00:39:22,400 --> 00:39:24,400
applications that are considered a

1047
00:39:24,400 --> 00:39:26,800
legacy right now that you can check the

1048
00:39:26,800 --> 00:39:29,520
boxes to see successful type of sign-ins

1049
00:39:29,520 --> 00:39:31,680
and see which applications are doing

1050
00:39:31,680 --> 00:39:33,760
these types of legacy authentication or

1051
00:39:33,760 --> 00:39:35,280
which individuals

1052
00:39:35,280 --> 00:39:37,920
most of the newer phones like an iphone

1053
00:39:37,920 --> 00:39:40,400
that is newer they are going to use a

1054
00:39:40,400 --> 00:39:42,560
modern authentication but if you have an

1055
00:39:42,560 --> 00:39:45,200
older version of a phone an older ios

1056
00:39:45,200 --> 00:39:46,880
it'll use an older version it'll use

1057
00:39:46,880 --> 00:39:49,680
like activesync

1058
00:39:51,040 --> 00:39:54,160
application security devops because

1059
00:39:54,160 --> 00:39:56,640
devops are the first people to the cloud

1060
00:39:56,640 --> 00:39:58,320
this is something that is

1061
00:39:58,320 --> 00:39:59,520
so

1062
00:39:59,520 --> 00:40:01,599
pertinent and so uh

1063
00:40:01,599 --> 00:40:02,560
vital

1064
00:40:02,560 --> 00:40:05,440
you want to prevent those uh credentials

1065
00:40:05,440 --> 00:40:07,760
being committed in code hard-coded

1066
00:40:07,760 --> 00:40:09,920
credentials are still an issue even in

1067
00:40:09,920 --> 00:40:12,079
the cloud you'll see you're going to see

1068
00:40:12,079 --> 00:40:15,200
people have credentials and access keys

1069
00:40:15,200 --> 00:40:15,920
in

1070
00:40:15,920 --> 00:40:18,160
application and code repositories so you

1071
00:40:18,160 --> 00:40:20,160
can create things like a pre-commit hook

1072
00:40:20,160 --> 00:40:23,599
so whenever a developer is committing

1073
00:40:23,599 --> 00:40:26,720
their code in a repository you can use

1074
00:40:26,720 --> 00:40:28,640
something an open source tool or now the

1075
00:40:28,640 --> 00:40:30,960
newer tool so open source tools like git

1076
00:40:30,960 --> 00:40:32,640
secrets and you can create a pre-commit

1077
00:40:32,640 --> 00:40:34,960
hook you use git secrets and whenever

1078
00:40:34,960 --> 00:40:36,640
you commit a

1079
00:40:36,640 --> 00:40:38,960
code it runs git secrets to see if

1080
00:40:38,960 --> 00:40:40,560
there's any code in the

1081
00:40:40,560 --> 00:40:42,480
any credentials in that code that was

1082
00:40:42,480 --> 00:40:45,680
just committed once it once it is clean

1083
00:40:45,680 --> 00:40:47,280
it'll push the code

1084
00:40:47,280 --> 00:40:50,319
but now with github enterprise they just

1085
00:40:50,319 --> 00:40:51,440
went

1086
00:40:51,440 --> 00:40:54,160
general available which allows an

1087
00:40:54,160 --> 00:40:56,800
organization to scan the repositories

1088
00:40:56,800 --> 00:40:57,920
natively

1089
00:40:57,920 --> 00:41:00,079
with github enterprise to be able to see

1090
00:41:00,079 --> 00:41:02,160
if there's any credentials any sort of

1091
00:41:02,160 --> 00:41:05,359
access keys any certificates any rsa

1092
00:41:05,359 --> 00:41:08,160
certificates anything that is on the

1093
00:41:08,160 --> 00:41:09,760
repository

1094
00:41:09,760 --> 00:41:11,440
scanning infrastructure's code we know

1095
00:41:11,440 --> 00:41:13,599
infrastructure's code is going to be one

1096
00:41:13,599 --> 00:41:14,880
of the big things because that is a

1097
00:41:14,880 --> 00:41:17,599
future right you want to take as much

1098
00:41:17,599 --> 00:41:19,599
cooks out of the kitchen

1099
00:41:19,599 --> 00:41:22,160
so you don't want any devops person or

1100
00:41:22,160 --> 00:41:24,960
anyone to be able to spin up an ec2

1101
00:41:24,960 --> 00:41:27,520
instance or spin up an rds instance you

1102
00:41:27,520 --> 00:41:30,160
want to have that doing through let's

1103
00:41:30,160 --> 00:41:32,839
say infrastructures code terraform

1104
00:41:32,839 --> 00:41:35,839
templates cloud formation templates but

1105
00:41:35,839 --> 00:41:36,960
even then

1106
00:41:36,960 --> 00:41:39,040
we're starting to see that code is being

1107
00:41:39,040 --> 00:41:41,599
injected hard coded into these types of

1108
00:41:41,599 --> 00:41:43,680
templates and files so you want to also

1109
00:41:43,680 --> 00:41:45,440
scan those types of code you can scan it

1110
00:41:45,440 --> 00:41:48,400
with open source tools cfn nag for cloud

1111
00:41:48,400 --> 00:41:50,720
formation templates tara scan for

1112
00:41:50,720 --> 00:41:53,280
terraform templates uh

1113
00:41:53,280 --> 00:41:55,760
aws just came out last i mean two three

1114
00:41:55,760 --> 00:41:58,319
weeks ago with the ability to with the

1115
00:41:58,319 --> 00:42:01,599
ability to use cfn nag as a native tool

1116
00:42:01,599 --> 00:42:04,240
to review and scan your cloud formation

1117
00:42:04,240 --> 00:42:05,920
templates so you're starting to see a

1118
00:42:05,920 --> 00:42:07,440
lot of these cloud providers trying to

1119
00:42:07,440 --> 00:42:08,720
proactively

1120
00:42:08,720 --> 00:42:12,079
uh secure their platforms and give the

1121
00:42:12,079 --> 00:42:13,760
organizations as much time but remember

1122
00:42:13,760 --> 00:42:17,040
this is i do this on a daily basis i try

1123
00:42:17,040 --> 00:42:18,880
to keep up with the news it's even hard

1124
00:42:18,880 --> 00:42:20,640
for me to keep up

1125
00:42:20,640 --> 00:42:21,359
so

1126
00:42:21,359 --> 00:42:22,960
these types of new services that come

1127
00:42:22,960 --> 00:42:24,160
out that they're trying to push around

1128
00:42:24,160 --> 00:42:27,599
security that's not related to your

1129
00:42:27,599 --> 00:42:29,280
devops person that's not related to even

1130
00:42:29,280 --> 00:42:32,160
the security folks so it might be there

1131
00:42:32,160 --> 00:42:34,880
it might be present for years or half a

1132
00:42:34,880 --> 00:42:36,960
year but maybe your organization is not

1133
00:42:36,960 --> 00:42:39,680
utilizing it because it just kind of

1134
00:42:39,680 --> 00:42:41,760
falls down the uh follows down and kind

1135
00:42:41,760 --> 00:42:45,200
of loses traction

1136
00:42:45,200 --> 00:42:48,000
data and secrets protection so dummy

1137
00:42:48,000 --> 00:42:50,560
data being able to rotate

1138
00:42:50,560 --> 00:42:53,040
access keys i always say you treat

1139
00:42:53,040 --> 00:42:55,200
access keys like passwords you always

1140
00:42:55,200 --> 00:42:57,440
want to monitor for secrets that are

1141
00:42:57,440 --> 00:42:58,640
being leaked

1142
00:42:58,640 --> 00:43:00,960
and always have a plan to revoke and

1143
00:43:00,960 --> 00:43:02,240
rotate

1144
00:43:02,240 --> 00:43:04,480
go through a tabletop exercise if you

1145
00:43:04,480 --> 00:43:06,640
were to find a access key can you rotate

1146
00:43:06,640 --> 00:43:09,359
that right away or are you scared that

1147
00:43:09,359 --> 00:43:10,960
if you were to rotate this access key

1148
00:43:10,960 --> 00:43:13,119
related to this major application

1149
00:43:13,119 --> 00:43:15,040
that it's not going to

1150
00:43:15,040 --> 00:43:17,119
it's going to have a major impact

1151
00:43:17,119 --> 00:43:18,800
always try to do these types of disaster

1152
00:43:18,800 --> 00:43:20,640
scenarios either from an incident or

1153
00:43:20,640 --> 00:43:24,079
disaster recovery standpoint

1154
00:43:24,079 --> 00:43:25,680
and you all you want to definitely want

1155
00:43:25,680 --> 00:43:28,319
to uh use resource tagging as much as

1156
00:43:28,319 --> 00:43:29,359
possible

1157
00:43:29,359 --> 00:43:32,240
so resource tagging with uh

1158
00:43:32,240 --> 00:43:34,480
with the ability of using security based

1159
00:43:34,480 --> 00:43:36,480
resource tagging a lot of organizations

1160
00:43:36,480 --> 00:43:38,800
use resource tagging for

1161
00:43:38,800 --> 00:43:41,200
just your general kind of billing so if

1162
00:43:41,200 --> 00:43:43,280
it helps with billing this department

1163
00:43:43,280 --> 00:43:44,480
this group

1164
00:43:44,480 --> 00:43:47,599
let's try to go and tag those specific

1165
00:43:47,599 --> 00:43:50,079
resources now you want to use resource

1166
00:43:50,079 --> 00:43:51,680
tagging for

1167
00:43:51,680 --> 00:43:54,240
security purposes if it's a critical

1168
00:43:54,240 --> 00:43:56,880
function it's a sensitive data if it's

1169
00:43:56,880 --> 00:43:58,880
specifically related to this group for

1170
00:43:58,880 --> 00:44:00,720
example you can go down to

1171
00:44:00,720 --> 00:44:02,720
resource-based tagging for a specific

1172
00:44:02,720 --> 00:44:03,680
group

1173
00:44:03,680 --> 00:44:06,000
and which develop which developers are

1174
00:44:06,000 --> 00:44:08,240
working on which projects this is where

1175
00:44:08,240 --> 00:44:10,319
you get past the rbac model which is

1176
00:44:10,319 --> 00:44:12,319
role-based access control and get into

1177
00:44:12,319 --> 00:44:13,680
the abac

1178
00:44:13,680 --> 00:44:16,079
attribute based access control which is

1179
00:44:16,079 --> 00:44:17,599
technically going to be the future of

1180
00:44:17,599 --> 00:44:18,880
how you want to

1181
00:44:18,880 --> 00:44:21,280
provide access and control within an

1182
00:44:21,280 --> 00:44:22,480
environment

1183
00:44:22,480 --> 00:44:24,720
and you want to and you want to also

1184
00:44:24,720 --> 00:44:27,920
do uh encryption of course not only at

1185
00:44:27,920 --> 00:44:29,839
rest but sometimes in motion depending

1186
00:44:29,839 --> 00:44:32,160
on your regulatory requirements whenever

1187
00:44:32,160 --> 00:44:34,400
you're having it on let's say storing

1188
00:44:34,400 --> 00:44:36,240
something on an s3 bucket you can easily

1189
00:44:36,240 --> 00:44:38,560
encrypt it at the s3 bucket level but

1190
00:44:38,560 --> 00:44:40,160
maybe you need to encrypt it before it

1191
00:44:40,160 --> 00:44:42,240
gets to the s3 bucket right so then

1192
00:44:42,240 --> 00:44:45,119
using a client-side encryption instead

1193
00:44:45,119 --> 00:44:47,839
of just a managed encryption at the

1194
00:44:47,839 --> 00:44:48,839
cloud

1195
00:44:48,839 --> 00:44:51,839
provider threat detection response so

1196
00:44:51,839 --> 00:44:53,520
we've talked about this quite often

1197
00:44:53,520 --> 00:44:55,280
throughout the talk as this was kind of

1198
00:44:55,280 --> 00:44:56,560
the main purpose

1199
00:44:56,560 --> 00:44:58,319
you know enable logging features but

1200
00:44:58,319 --> 00:44:59,920
also enable object level logging

1201
00:44:59,920 --> 00:45:00,960
features

1202
00:45:00,960 --> 00:45:03,920
for example the s3 has your general

1203
00:45:03,920 --> 00:45:06,400
server access logging and then you have

1204
00:45:06,400 --> 00:45:08,240
your object level logging which then

1205
00:45:08,240 --> 00:45:10,240
gives it a lot more granular and you

1206
00:45:10,240 --> 00:45:12,560
want to know you want to also aggregate

1207
00:45:12,560 --> 00:45:14,720
logs into a sim so what we're starting

1208
00:45:14,720 --> 00:45:16,880
to see is they're enabling logs but it

1209
00:45:16,880 --> 00:45:19,040
just sits in the cloud provider

1210
00:45:19,040 --> 00:45:21,119
it hasn't made its way into their

1211
00:45:21,119 --> 00:45:23,680
centralized sim where the on-prem data

1212
00:45:23,680 --> 00:45:24,880
is at

1213
00:45:24,880 --> 00:45:26,560
and you want to also be able to

1214
00:45:26,560 --> 00:45:29,760
correlate rules between the on-prem and

1215
00:45:29,760 --> 00:45:32,240
cloud to see when those types of

1216
00:45:32,240 --> 00:45:34,319
accesses are occurring to be able to do

1217
00:45:34,319 --> 00:45:36,400
these types of golden samuel type of

1218
00:45:36,400 --> 00:45:38,480
scenarios

1219
00:45:38,480 --> 00:45:41,119
and you want to always do uh specific

1220
00:45:41,119 --> 00:45:43,599
use cases and playbooks for a

1221
00:45:43,599 --> 00:45:45,520
cloud-based incident how can your

1222
00:45:45,520 --> 00:45:46,800
organization

1223
00:45:46,800 --> 00:45:49,760
respond to a credential that's been

1224
00:45:49,760 --> 00:45:52,000
exposed in the public internet

1225
00:45:52,000 --> 00:45:54,880
or a cr or a

1226
00:45:54,880 --> 00:45:56,400
phishing that's happened that now they

1227
00:45:56,400 --> 00:45:58,720
have ssh keys can you rotate those ssh

1228
00:45:58,720 --> 00:46:01,920
keys are those ssh keys

1229
00:46:01,920 --> 00:46:05,119
common across multiple types of hosts

1230
00:46:05,119 --> 00:46:07,440
or are you using something like ssm to

1231
00:46:07,440 --> 00:46:08,720
be able to

1232
00:46:08,720 --> 00:46:13,040
have a rotation and multiple ssh keys

1233
00:46:13,040 --> 00:46:15,920
and that gets us right to the end with

1234
00:46:15,920 --> 00:46:18,480
some time remaining

1235
00:46:18,480 --> 00:46:22,520
feel free to ask any questions

1236
00:46:30,400 --> 00:46:32,640
all right awesome

1237
00:46:32,640 --> 00:46:36,279
all right thank you so much

1238
00:46:36,560 --> 00:46:40,660
[Applause]

