1
00:00:00,390 --> 00:00:00,719
[Music]

2
00:00:00,719 --> 00:00:03,719
foreign

3
00:00:05,360 --> 00:00:16,250
[Music]

4
00:00:31,920 --> 00:00:34,190
foreign

5
00:00:34,190 --> 00:00:40,629
[Music]

6
00:00:48,800 --> 00:00:51,120
I think it's it's a very important you

7
00:00:51,120 --> 00:00:53,219
know orc is a membership organization I

8
00:00:53,219 --> 00:00:54,840
feel it's a very important part of

9
00:00:54,840 --> 00:00:56,579
running a membership organization that

10
00:00:56,579 --> 00:00:58,620
we are transparent and communicate to

11
00:00:58,620 --> 00:01:00,360
you the members and The Wider Community

12
00:01:00,360 --> 00:01:02,820
what it is that we're doing

13
00:01:02,820 --> 00:01:04,440
um the way we try and do this is not to

14
00:01:04,440 --> 00:01:06,420
eat into huge quantities or Workshop

15
00:01:06,420 --> 00:01:10,200
Time by taking forever to to drone on

16
00:01:10,200 --> 00:01:11,400
um rather you will find a bunch of

17
00:01:11,400 --> 00:01:12,780
written reports

18
00:01:12,780 --> 00:01:14,820
um there's a quarterly report from me

19
00:01:14,820 --> 00:01:16,740
and there's also several engineering

20
00:01:16,740 --> 00:01:17,880
reports

21
00:01:17,880 --> 00:01:20,700
um and and really the presentations that

22
00:01:20,700 --> 00:01:22,560
we're doing over the next hour are a

23
00:01:22,560 --> 00:01:24,840
quick overview of what's in the report

24
00:01:24,840 --> 00:01:26,460
um if you read the reports happy to

25
00:01:26,460 --> 00:01:28,200
answer any questions about the content

26
00:01:28,200 --> 00:01:30,060
if you see anything that's of interest

27
00:01:30,060 --> 00:01:31,680
in the slide deck and you haven't read

28
00:01:31,680 --> 00:01:33,540
the reports you can find more detail in

29
00:01:33,540 --> 00:01:35,040
the reports

30
00:01:35,040 --> 00:01:37,560
so orc's mission statement what are we

31
00:01:37,560 --> 00:01:39,119
here to do we're here to make the DNS

32
00:01:39,119 --> 00:01:41,220
work better and to do that in a way

33
00:01:41,220 --> 00:01:42,659
which

34
00:01:42,659 --> 00:01:45,079
builds relations amongst our community

35
00:01:45,079 --> 00:01:47,460
encourages interaction between the

36
00:01:47,460 --> 00:01:50,460
operator and research communities

37
00:01:50,460 --> 00:01:53,579
um and transfers knowledge and one of

38
00:01:53,579 --> 00:01:55,020
the main ways that we do that is through

39
00:01:55,020 --> 00:01:56,880
these workshops but it's by no means the

40
00:01:56,880 --> 00:01:59,280
only way that we do that

41
00:01:59,280 --> 00:02:02,220
our membership has been pretty steady I

42
00:02:02,220 --> 00:02:04,439
really appreciate the solid support that

43
00:02:04,439 --> 00:02:07,320
the members have given us over the past

44
00:02:07,320 --> 00:02:08,758
two years which have been very

45
00:02:08,758 --> 00:02:11,400
challenging in many ways many of you

46
00:02:11,400 --> 00:02:14,160
have upped your commitment

47
00:02:14,160 --> 00:02:16,200
um and you know it's been really good to

48
00:02:16,200 --> 00:02:18,780
to see that ongoing support and you know

49
00:02:18,780 --> 00:02:20,879
we have a very diverse member Community

50
00:02:20,879 --> 00:02:23,280
as you can see from all the names that

51
00:02:23,280 --> 00:02:27,180
you may recognize in Our member tree

52
00:02:27,180 --> 00:02:30,300
um we haven't done an update since

53
00:02:30,300 --> 00:02:33,420
um orc 36

54
00:02:33,420 --> 00:02:37,920
um in the um the fall of 2021

55
00:02:37,920 --> 00:02:39,900
um so um this isn't just um everything

56
00:02:39,900 --> 00:02:41,519
that happens since the last Workshop but

57
00:02:41,519 --> 00:02:44,400
since the last two workshops uh 2021 was

58
00:02:44,400 --> 00:02:46,019
a pretty good year

59
00:02:46,019 --> 00:02:48,000
um we during the pandemic we focused on

60
00:02:48,000 --> 00:02:49,800
bringing in as much grant funding as

61
00:02:49,800 --> 00:02:51,300
possible and we had a bit of a success

62
00:02:51,300 --> 00:02:53,459
disaster there

63
00:02:53,459 --> 00:02:56,580
um so um there was some good work done

64
00:02:56,580 --> 00:02:58,860
um and I'm pleased to say that all the

65
00:02:58,860 --> 00:03:02,160
work objectives that we made were

66
00:03:02,160 --> 00:03:05,640
delivered on time and successfully

67
00:03:05,640 --> 00:03:08,519
um and all that work is completed and we

68
00:03:08,519 --> 00:03:10,560
don't have any outstanding externally

69
00:03:10,560 --> 00:03:12,120
funded work at the moment although we

70
00:03:12,120 --> 00:03:15,420
did just submit another Grant proposal

71
00:03:15,420 --> 00:03:17,700
um 2021 we did three and a half online

72
00:03:17,700 --> 00:03:20,580
workshops three two day ones and a short

73
00:03:20,580 --> 00:03:21,659
one

74
00:03:21,659 --> 00:03:23,099
um as I say thanks to all the members

75
00:03:23,099 --> 00:03:24,000
support

76
00:03:24,000 --> 00:03:26,099
um we exceeded a million in revenue for

77
00:03:26,099 --> 00:03:27,540
the first time which was a great

78
00:03:27,540 --> 00:03:29,159
milestone

79
00:03:29,159 --> 00:03:30,720
um and that's allowed us to build on

80
00:03:30,720 --> 00:03:32,640
pretty much the best part of a year in

81
00:03:32,640 --> 00:03:34,319
operating reserves which is a very good

82
00:03:34,319 --> 00:03:36,319
position for any non-profit to be in

83
00:03:36,319 --> 00:03:38,940
other things that we achieved as 2020

84
00:03:38,940 --> 00:03:40,980
went on was with significant progress on

85
00:03:40,980 --> 00:03:43,560
systems cleanup and automation

86
00:03:43,560 --> 00:03:46,260
what have you achieved this year so far

87
00:03:46,260 --> 00:03:48,060
um we've appointed a new systems

88
00:03:48,060 --> 00:03:51,180
engineer uh Mike bear has has joined us

89
00:03:51,180 --> 00:03:54,060
a couple of months ago so that will

90
00:03:54,060 --> 00:03:56,819
significantly help with a huge amount of

91
00:03:56,819 --> 00:03:58,500
backlog and systems of work that we need

92
00:03:58,500 --> 00:04:00,540
to do and in that we're already making

93
00:04:00,540 --> 00:04:02,760
progress on that

94
00:04:02,760 --> 00:04:04,260
um privacy committee

95
00:04:04,260 --> 00:04:06,780
um I'd like to thank Beno and Sarah

96
00:04:06,780 --> 00:04:08,459
Dickinson in particular

97
00:04:08,459 --> 00:04:10,980
um for for moving that forward

98
00:04:10,980 --> 00:04:12,959
um and um they've done our report

99
00:04:12,959 --> 00:04:14,400
Bennett will be saying more about that

100
00:04:14,400 --> 00:04:16,380
in a minute but there's a report on the

101
00:04:16,380 --> 00:04:19,139
existing data usage and there's a draft

102
00:04:19,139 --> 00:04:20,880
Charter which board should be able to

103
00:04:20,880 --> 00:04:22,919
sign off very shortly and we've seen

104
00:04:22,919 --> 00:04:24,900
some very useful expert input from uh

105
00:04:24,900 --> 00:04:28,620
from PIR and a number of other parties

106
00:04:28,620 --> 00:04:30,180
um we came up with a new software

107
00:04:30,180 --> 00:04:31,860
development strategy which rather than

108
00:04:31,860 --> 00:04:33,240
trying to support everything all the

109
00:04:33,240 --> 00:04:37,139
time will focus on particular areas

110
00:04:37,139 --> 00:04:39,419
um and for now that is focused on

111
00:04:39,419 --> 00:04:41,880
testing tools and there is focus on that

112
00:04:41,880 --> 00:04:43,560
has allowed us to generate some

113
00:04:43,560 --> 00:04:45,240
interesting new features for check my

114
00:04:45,240 --> 00:04:48,360
DNS including an updated user interfaces

115
00:04:48,360 --> 00:04:52,080
and DNS over quick support

116
00:04:52,080 --> 00:04:54,300
um and once again we did our annual day

117
00:04:54,300 --> 00:04:55,500
in the life of the internet data

118
00:04:55,500 --> 00:04:58,139
collection on the hunt for 2022 and we

119
00:04:58,139 --> 00:04:59,639
released the raw data for that almost

120
00:04:59,639 --> 00:05:01,259
immediately

121
00:05:01,259 --> 00:05:02,699
um and the other data set has been

122
00:05:02,699 --> 00:05:05,040
processed

123
00:05:05,040 --> 00:05:07,380
um other achievements this year we did

124
00:05:07,380 --> 00:05:09,600
our first hybrid Workshop in Austin as I

125
00:05:09,600 --> 00:05:11,220
say that was mostly remotely attended

126
00:05:11,220 --> 00:05:13,740
but it was it was a good test bed and

127
00:05:13,740 --> 00:05:15,479
also to get back with co-locating with

128
00:05:15,479 --> 00:05:16,199
another

129
00:05:16,199 --> 00:05:19,680
um work um event at nanog and here we

130
00:05:19,680 --> 00:05:21,360
are in Philadelphia

131
00:05:21,360 --> 00:05:22,919
um we had hoped to do the workshop maybe

132
00:05:22,919 --> 00:05:25,979
on May June but we decided the various

133
00:05:25,979 --> 00:05:28,680
challenges meant that we it was easier

134
00:05:28,680 --> 00:05:30,240
to co-locate with ITF and it's the first

135
00:05:30,240 --> 00:05:32,360
time we've collocated with ITF and and

136
00:05:32,360 --> 00:05:35,280
quite a long time

137
00:05:35,280 --> 00:05:36,960
um it also meant we were the team over

138
00:05:36,960 --> 00:05:38,580
the first half of this year were able to

139
00:05:38,580 --> 00:05:41,280
get out and um meet with people meet

140
00:05:41,280 --> 00:05:43,259
with the community represent or work at

141
00:05:43,259 --> 00:05:46,080
a bunch of Industry events and I think

142
00:05:46,080 --> 00:05:48,060
you know we've certainly found that very

143
00:05:48,060 --> 00:05:50,160
helpful and and motivating and I hope

144
00:05:50,160 --> 00:05:52,620
you found that useful as well it's also

145
00:05:52,620 --> 00:05:53,940
led us to some internal planning

146
00:05:53,940 --> 00:05:56,639
meetings which is kind of boring stuff

147
00:05:56,639 --> 00:05:59,039
um from your point of view but it meant

148
00:05:59,039 --> 00:06:00,240
that we were able to get the whole team

149
00:06:00,240 --> 00:06:02,400
together including our two pandemic

150
00:06:02,400 --> 00:06:04,740
hires um first face to face for the

151
00:06:04,740 --> 00:06:07,919
first time we did a first Fremont site

152
00:06:07,919 --> 00:06:10,919
visit in over a year and done quite a

153
00:06:10,919 --> 00:06:12,660
bit of engineering planning we also

154
00:06:12,660 --> 00:06:15,780
listed on all hands this week as well

155
00:06:15,780 --> 00:06:17,699
um Matt relocated our site in Ottawa

156
00:06:17,699 --> 00:06:21,479
which is generously donated by Sarah I'm

157
00:06:21,479 --> 00:06:22,620
going to purchased some new routers

158
00:06:22,620 --> 00:06:24,240
which will get deployed over the next

159
00:06:24,240 --> 00:06:25,979
few weeks and address some long-standing

160
00:06:25,979 --> 00:06:29,699
issues with these and um Mike has been

161
00:06:29,699 --> 00:06:31,979
gradually spring cleaning all our

162
00:06:31,979 --> 00:06:33,960
websites and getting the uh the platform

163
00:06:33,960 --> 00:06:36,660
so that he's up to date

164
00:06:36,660 --> 00:06:38,940
um I'm pleased to say that five over six

165
00:06:38,940 --> 00:06:40,319
board members

166
00:06:40,319 --> 00:06:42,600
um are here so you know if you'll please

167
00:06:42,600 --> 00:06:44,940
do speak to them they contribute a lot

168
00:06:44,940 --> 00:06:48,600
to or both in terms of wisdom and time

169
00:06:48,600 --> 00:06:51,680
um so um

170
00:06:54,539 --> 00:06:56,699
they're all here

171
00:06:56,699 --> 00:06:58,620
um program committee

172
00:06:58,620 --> 00:07:00,060
um again program committee has been

173
00:07:00,060 --> 00:07:02,039
doing a great job since they were

174
00:07:02,039 --> 00:07:03,539
appointed at the start of the year with

175
00:07:03,539 --> 00:07:06,360
quite a few new members again they are

176
00:07:06,360 --> 00:07:09,300
all here in person with the exception of

177
00:07:09,300 --> 00:07:12,259
um Hazel um who is our remote

178
00:07:12,259 --> 00:07:14,819
participant and helping out there and

179
00:07:14,819 --> 00:07:18,180
also willamas it sends his apologies

180
00:07:18,180 --> 00:07:20,699
um so again you know a big thank you to

181
00:07:20,699 --> 00:07:22,020
the program committee for all the work

182
00:07:22,020 --> 00:07:24,300
that you're certainly helping in all

183
00:07:24,300 --> 00:07:26,340
kinds of ways this time and put together

184
00:07:26,340 --> 00:07:29,479
what I think is great program

185
00:07:29,520 --> 00:07:31,080
um this is the team

186
00:07:31,080 --> 00:07:32,699
um you know we don't all work full-time

187
00:07:32,699 --> 00:07:34,860
for work most of us spend most of our

188
00:07:34,860 --> 00:07:36,300
time on the wall but do all this stuff

189
00:07:36,300 --> 00:07:38,699
as well as I say Mike has joined us from

190
00:07:38,699 --> 00:07:40,620
Berkeley California

191
00:07:40,620 --> 00:07:41,940
um this is probably the first time that

192
00:07:41,940 --> 00:07:43,259
most of you are met on your membership

193
00:07:43,259 --> 00:07:45,180
coordinator Steve who joined us a year

194
00:07:45,180 --> 00:07:47,460
ago and again you you Steve is at the

195
00:07:47,460 --> 00:07:49,440
registration desk he's Keen to speak to

196
00:07:49,440 --> 00:07:52,020
you so please speak to him

197
00:07:52,020 --> 00:07:54,419
um as far as our workshops are concerned

198
00:07:54,419 --> 00:07:56,580
we're continuing with hybrid like the

199
00:07:56,580 --> 00:07:58,380
rest of the world until further notice

200
00:07:58,380 --> 00:08:01,380
the last two years the AGM the formal

201
00:08:01,380 --> 00:08:03,599
member business and elections have been

202
00:08:03,599 --> 00:08:05,400
Standalone that seems to have worked

203
00:08:05,400 --> 00:08:06,900
quite well so we will be sticking to

204
00:08:06,900 --> 00:08:09,780
doing that in an online format this year

205
00:08:09,780 --> 00:08:11,880
which also frees up more time for

206
00:08:11,880 --> 00:08:15,120
program and content at the the Autumn

207
00:08:15,120 --> 00:08:16,919
Workshop

208
00:08:16,919 --> 00:08:18,419
um are planning at that at the moment

209
00:08:18,419 --> 00:08:21,240
that's going to be in Belgrade Serbia

210
00:08:21,240 --> 00:08:23,819
um co-located with ripe 85 and with

211
00:08:23,819 --> 00:08:26,099
centrotech we still need to work out the

212
00:08:26,099 --> 00:08:28,440
formal details of that so

213
00:08:28,440 --> 00:08:29,840
um

214
00:08:29,840 --> 00:08:32,159
you should guard that as provisional

215
00:08:32,159 --> 00:08:34,260
until we announce registration

216
00:08:34,260 --> 00:08:36,360
um but with this you know we have we

217
00:08:36,360 --> 00:08:38,458
have two members in Serbia they're Keen

218
00:08:38,458 --> 00:08:40,440
to work with us so um you should assume

219
00:08:40,440 --> 00:08:42,360
that that is a plan and then we have a

220
00:08:42,360 --> 00:08:45,000
firm commitment for orac 40 to co-locate

221
00:08:45,000 --> 00:08:47,339
with the anode meeting mixed February in

222
00:08:47,339 --> 00:08:48,500
Atlanta

223
00:08:48,500 --> 00:08:50,339
41

224
00:08:50,339 --> 00:08:53,220
um we're reviewing at the moment running

225
00:08:53,220 --> 00:08:55,740
three workshops was our plan before the

226
00:08:55,740 --> 00:08:57,480
start of pandemic it's proving a little

227
00:08:57,480 --> 00:09:00,060
bit of an operational stretch

228
00:09:00,060 --> 00:09:01,740
um so we're removing it reviewing at the

229
00:09:01,740 --> 00:09:03,660
moment whether we go for two workshops a

230
00:09:03,660 --> 00:09:06,480
year or three or maybe we do two

231
00:09:06,480 --> 00:09:09,120
um and one virtual or one short one

232
00:09:09,120 --> 00:09:10,980
um also ties in with whether we get back

233
00:09:10,980 --> 00:09:13,800
to collocating with icon IDs or not your

234
00:09:13,800 --> 00:09:15,899
feedback on that is welcome but watch

235
00:09:15,899 --> 00:09:18,540
this space as far as spring make sure is

236
00:09:18,540 --> 00:09:22,200
concerned and um it's great that we get

237
00:09:22,200 --> 00:09:24,839
sponsor and patronage support for our

238
00:09:24,839 --> 00:09:26,700
workshops and if that's something you're

239
00:09:26,700 --> 00:09:28,620
interested in doing then please speak to

240
00:09:28,620 --> 00:09:30,300
Dinesh

241
00:09:30,300 --> 00:09:31,860
so what we got planned for the rest of

242
00:09:31,860 --> 00:09:34,500
this year and into next year uh we did

243
00:09:34,500 --> 00:09:36,480
some engineering objective setting in

244
00:09:36,480 --> 00:09:38,459
Fremont so we have some quite ambitious

245
00:09:38,459 --> 00:09:40,380
plans there

246
00:09:40,380 --> 00:09:42,180
um many of you will

247
00:09:42,180 --> 00:09:43,920
um probably be ruling your eyeballs when

248
00:09:43,920 --> 00:09:45,300
we say yes we're really going to get the

249
00:09:45,300 --> 00:09:47,040
new data store project finished this

250
00:09:47,040 --> 00:09:47,880
time

251
00:09:47,880 --> 00:09:49,500
um but um you know now that we've got

252
00:09:49,500 --> 00:09:52,620
Mike on board he's able to focus on that

253
00:09:52,620 --> 00:09:55,200
um and free up Matt for for doing other

254
00:09:55,200 --> 00:09:57,060
things so they'll be saying a little bit

255
00:09:57,060 --> 00:10:00,060
more about their plans for that

256
00:10:00,060 --> 00:10:02,519
um the intended output of the Privacy

257
00:10:02,519 --> 00:10:04,220
committee is

258
00:10:04,220 --> 00:10:06,779
restructuring the data the participation

259
00:10:06,779 --> 00:10:08,399
agreement to make it private more

260
00:10:08,399 --> 00:10:11,339
privacy Centric and Cloud flexible for

261
00:10:11,339 --> 00:10:13,260
the future so expect some progress on

262
00:10:13,260 --> 00:10:14,640
that

263
00:10:14,640 --> 00:10:16,399
um we've been discussing this week about

264
00:10:16,399 --> 00:10:19,080
higher ways in which we can make the

265
00:10:19,080 --> 00:10:21,600
integration of the member portal

266
00:10:21,600 --> 00:10:22,980
um Steve will be saying a bit more about

267
00:10:22,980 --> 00:10:25,500
the portal shortly no matter most chat

268
00:10:25,500 --> 00:10:27,000
in the workshop registration are

269
00:10:27,000 --> 00:10:29,399
slightly less um convoluted process for

270
00:10:29,399 --> 00:10:30,779
you all and also a more efficient

271
00:10:30,779 --> 00:10:33,240
process for us

272
00:10:33,240 --> 00:10:35,459
um it has been nearly four years since

273
00:10:35,459 --> 00:10:37,860
we last increased our fees

274
00:10:37,860 --> 00:10:41,220
um we're already seeing various expenses

275
00:10:41,220 --> 00:10:43,740
um increase at the moment

276
00:10:43,740 --> 00:10:45,420
um so we're planning to increase the

277
00:10:45,420 --> 00:10:47,160
York membership subscription

278
00:10:47,160 --> 00:10:48,959
um on the 1st of January next year

279
00:10:48,959 --> 00:10:51,060
exactly how much we're going to increase

280
00:10:51,060 --> 00:10:52,800
it by we're going to keep in a careful

281
00:10:52,800 --> 00:10:54,540
eye on the inflation figures this year

282
00:10:54,540 --> 00:10:56,700
but there will be a proposal for member

283
00:10:56,700 --> 00:10:59,940
approval at the AGM for that

284
00:10:59,940 --> 00:11:01,860
um I'm also at the moment trying to hire

285
00:11:01,860 --> 00:11:03,660
an office administrator

286
00:11:03,660 --> 00:11:05,459
um so that we can make more efficient

287
00:11:05,459 --> 00:11:07,800
use of the uh

288
00:11:07,800 --> 00:11:10,019
um Technical and on other parts of the

289
00:11:10,019 --> 00:11:11,880
team and also my time and that's also

290
00:11:11,880 --> 00:11:13,800
intended to facilitate the transition to

291
00:11:13,800 --> 00:11:15,779
to new leadership when I eventually um

292
00:11:15,779 --> 00:11:18,000
Step Back From My executive role in this

293
00:11:18,000 --> 00:11:20,279
industry uh which is again something

294
00:11:20,279 --> 00:11:22,560
that we will hopefully make progress

295
00:11:22,560 --> 00:11:25,500
with before the end of the year

296
00:11:25,500 --> 00:11:26,880
um so

297
00:11:26,880 --> 00:11:28,800
um one other thing that remains to be

298
00:11:28,800 --> 00:11:30,060
done

299
00:11:30,060 --> 00:11:32,180
um is the term

300
00:11:32,180 --> 00:11:34,440
that's not quite yet

301
00:11:34,440 --> 00:11:35,399
um

302
00:11:35,399 --> 00:11:36,779
so

303
00:11:36,779 --> 00:11:39,360
um that is my update

304
00:11:39,360 --> 00:11:43,019
um I will now hand you over so bennil is

305
00:11:43,019 --> 00:11:44,820
um like board chair and he's going to

306
00:11:44,820 --> 00:11:46,380
give you an update on the progress of

307
00:11:46,380 --> 00:11:49,200
the Privacy committee

308
00:11:49,200 --> 00:11:53,459
thank you uh well welcome uh Beno

309
00:11:53,459 --> 00:11:55,860
alfreiner next slide I'm in control yeah

310
00:11:55,860 --> 00:11:57,120
I'm in control

311
00:11:57,120 --> 00:11:58,860
so

312
00:11:58,860 --> 00:12:01,560
first present here the our privacy

313
00:12:01,560 --> 00:12:04,079
committee members

314
00:12:04,079 --> 00:12:07,800
um we have Joe joao Sarah Dave George

315
00:12:07,800 --> 00:12:12,060
myself Shivan and Steve in the Privacy

316
00:12:12,060 --> 00:12:13,980
committee subcommittee

317
00:12:13,980 --> 00:12:16,920
uh joao is in the room

318
00:12:16,920 --> 00:12:19,019
over there

319
00:12:19,019 --> 00:12:22,680
tail is over there thank you and Steve

320
00:12:22,680 --> 00:12:26,940
over there so please contact us later if

321
00:12:26,940 --> 00:12:28,980
any questions

322
00:12:28,980 --> 00:12:31,019
um we're also very happy that we have an

323
00:12:31,019 --> 00:12:33,300
external consultant this Beth Beth bacon

324
00:12:33,300 --> 00:12:34,740
from PIR

325
00:12:34,740 --> 00:12:35,820
ate

326
00:12:35,820 --> 00:12:38,160
um I will come to that back later how

327
00:12:38,160 --> 00:12:39,779
she advises and

328
00:12:39,779 --> 00:12:41,459
he's got a great support to our

329
00:12:41,459 --> 00:12:44,459
committee so in

330
00:12:44,459 --> 00:12:47,899
I think I work 36

331
00:12:47,899 --> 00:12:51,899
Autumn last year we presented our

332
00:12:51,899 --> 00:12:54,660
subcommittee working on the privacy and

333
00:12:54,660 --> 00:12:57,720
our goals Etc so this is an update where

334
00:12:57,720 --> 00:13:00,060
we are now right now so made some

335
00:13:00,060 --> 00:13:03,420
progress so this is kind of the the the

336
00:13:03,420 --> 00:13:06,300
major goals we set out in our Charter

337
00:13:06,300 --> 00:13:09,180
and it's first of all we have to

338
00:13:09,180 --> 00:13:12,300
identify if the current participation

339
00:13:12,300 --> 00:13:14,880
agreement and data share agreement are

340
00:13:14,880 --> 00:13:17,100
in compliance with data privacy or

341
00:13:17,100 --> 00:13:19,639
privacy laws in different regions

342
00:13:19,639 --> 00:13:22,500
another goal one of the important

343
00:13:22,500 --> 00:13:24,600
articles of the Privacy committee is to

344
00:13:24,600 --> 00:13:26,820
increase or to maximize the usability

345
00:13:26,820 --> 00:13:29,339
and the usage of the data our work is

346
00:13:29,339 --> 00:13:30,240
collecting

347
00:13:30,240 --> 00:13:32,480
and you see some other

348
00:13:32,480 --> 00:13:35,519
goals that are a little bit lower the

349
00:13:35,519 --> 00:13:38,160
below list or lower in priority

350
00:13:38,160 --> 00:13:40,680
or less feasible but other thing is

351
00:13:40,680 --> 00:13:42,779
important the end is of course

352
00:13:42,779 --> 00:13:45,060
we give advice to the board on changes

353
00:13:45,060 --> 00:13:47,040
on the data sharing agreements and the

354
00:13:47,040 --> 00:13:48,980
participation agreement

355
00:13:48,980 --> 00:13:51,959
and part of it is also proposal process

356
00:13:51,959 --> 00:13:54,240
to appoint a privacy officer and that's

357
00:13:54,240 --> 00:13:56,760
not a person it's a role

358
00:13:56,760 --> 00:13:59,100
any person in organization and stuff can

359
00:13:59,100 --> 00:14:00,600
fulfill

360
00:14:00,600 --> 00:14:03,839
good so from the charter and the

361
00:14:03,839 --> 00:14:05,519
Milestones we've finished some of them

362
00:14:05,519 --> 00:14:08,459
we draft a charter we send it to the

363
00:14:08,459 --> 00:14:11,820
board for review we got feedback we have

364
00:14:11,820 --> 00:14:13,620
to incorporate the feedback and we'll

365
00:14:13,620 --> 00:14:15,360
publish the charter on the membership

366
00:14:15,360 --> 00:14:16,700
mailing list

367
00:14:16,700 --> 00:14:19,740
uh maybe also DNS operates but it's more

368
00:14:19,740 --> 00:14:21,660
technical so primarily the the

369
00:14:21,660 --> 00:14:24,360
membership mailing list is our

370
00:14:24,360 --> 00:14:28,920
the mailing list we want we communicate

371
00:14:28,920 --> 00:14:31,320
um we did conduct a survey

372
00:14:31,320 --> 00:14:34,860
we presented the first results at orac36

373
00:14:34,860 --> 00:14:37,200
then we reopened the survey we got

374
00:14:37,200 --> 00:14:40,160
additional data points we wrote a report

375
00:14:40,160 --> 00:14:43,079
presented to the our work board for

376
00:14:43,079 --> 00:14:45,899
information and for yeah for for

377
00:14:45,899 --> 00:14:48,000
feedback

378
00:14:48,000 --> 00:14:48,600
um

379
00:14:48,600 --> 00:14:52,620
we so so one of the last bullet points

380
00:14:52,620 --> 00:14:54,000
is so we did some analysis on

381
00:14:54,000 --> 00:14:56,459
Publications actually that's in italic

382
00:14:56,459 --> 00:14:59,480
we still have to do some work on that

383
00:14:59,480 --> 00:15:02,579
next Milestones of the Privacy uh

384
00:15:02,579 --> 00:15:05,760
subcommunity is well do the kind of the

385
00:15:05,760 --> 00:15:08,940
real work here and uh identify the

386
00:15:08,940 --> 00:15:10,320
deficiencies

387
00:15:10,320 --> 00:15:12,540
uh with the current agreement uh

388
00:15:12,540 --> 00:15:15,660
agreements we have regarding and in in

389
00:15:15,660 --> 00:15:18,480
relation with the privacy laws so we

390
00:15:18,480 --> 00:15:22,019
really get great help by from Beth Beth

391
00:15:22,019 --> 00:15:23,279
bacon she

392
00:15:23,279 --> 00:15:25,800
manage the process at PIR

393
00:15:25,800 --> 00:15:27,959
so she's not a lawyer she's stressing

394
00:15:27,959 --> 00:15:31,500
that but she managed the process and

395
00:15:31,500 --> 00:15:33,420
with her experience we go through the

396
00:15:33,420 --> 00:15:35,399
same process here at or it's a smaller

397
00:15:35,399 --> 00:15:37,680
organization but we have to go through

398
00:15:37,680 --> 00:15:39,959
the similar steps

399
00:15:39,959 --> 00:15:42,060
um and also we have looked at the

400
00:15:42,060 --> 00:15:43,800
different privacy

401
00:15:43,800 --> 00:15:48,000
laws in different regions and advices

402
00:15:48,000 --> 00:15:51,300
take this take the most strict Privacy

403
00:15:51,300 --> 00:15:53,579
Law the gdpr as an example and you're

404
00:15:53,579 --> 00:15:56,459
good for 80 over the world so that's why

405
00:15:56,459 --> 00:15:58,680
we had to heading for so you also

406
00:15:58,680 --> 00:16:01,079
strongly advised evolve a lawyer a

407
00:16:01,079 --> 00:16:03,420
consultant that helps us through the

408
00:16:03,420 --> 00:16:04,980
process because

409
00:16:04,980 --> 00:16:07,339
from a lawyer we have to get the

410
00:16:07,339 --> 00:16:10,019
suggestions to fix all the the

411
00:16:10,019 --> 00:16:12,480
deficiencies in our agreements

412
00:16:12,480 --> 00:16:15,240
good of course we will come back to the

413
00:16:15,240 --> 00:16:16,380
community

414
00:16:16,380 --> 00:16:19,019
with a survey or another presentation

415
00:16:19,019 --> 00:16:21,600
for feedback from the community and

416
00:16:21,600 --> 00:16:22,860
eventually we make a number of

417
00:16:22,860 --> 00:16:25,079
recommendations to the board for changes

418
00:16:25,079 --> 00:16:27,540
in the different agreements

419
00:16:27,540 --> 00:16:31,680
good and also important to maximize the

420
00:16:31,680 --> 00:16:35,399
usage of data and usability we also make

421
00:16:35,399 --> 00:16:38,279
a number of advices or recommendations

422
00:16:38,279 --> 00:16:42,300
to the board about the infrastrategy and

423
00:16:42,300 --> 00:16:44,459
making the data available

424
00:16:44,459 --> 00:16:46,740
good

425
00:16:46,740 --> 00:16:50,459
um then call out to you to the community

426
00:16:50,459 --> 00:16:52,500
if you have any questions please reach

427
00:16:52,500 --> 00:16:54,000
out to us we are here in the room for

428
00:16:54,000 --> 00:16:55,579
the for today and tomorrow

429
00:16:55,579 --> 00:16:58,980
uh Steve is our secretary so Steve is

430
00:16:58,980 --> 00:17:00,660
always a good contact point if you're

431
00:17:00,660 --> 00:17:03,000
not here send him an email

432
00:17:03,000 --> 00:17:05,819
and we will make sure that we uh it's on

433
00:17:05,819 --> 00:17:07,140
our agenda

434
00:17:07,140 --> 00:17:08,939
if you have an interest in this topic

435
00:17:08,939 --> 00:17:11,459
questions suggestions anything please

436
00:17:11,459 --> 00:17:13,980
reach out to us we are open for feedback

437
00:17:13,980 --> 00:17:16,679
or actually asking for feedback and your

438
00:17:16,679 --> 00:17:19,140
expertise and input and if you might

439
00:17:19,140 --> 00:17:21,179
have a legal advisor in your

440
00:17:21,179 --> 00:17:25,079
organization a lawyer uh well please

441
00:17:25,079 --> 00:17:28,439
reach out to us because we're

442
00:17:28,439 --> 00:17:30,120
we're not the lawyers we're not the

443
00:17:30,120 --> 00:17:32,820
legal advices so we can help we can use

444
00:17:32,820 --> 00:17:36,320
any help here uh and also well with

445
00:17:36,320 --> 00:17:38,820
qualified people that have experience in

446
00:17:38,820 --> 00:17:39,780
this area

447
00:17:39,780 --> 00:17:42,840
that's it any questions

448
00:17:42,840 --> 00:17:45,059
no no questions online

449
00:17:45,059 --> 00:17:48,678
okay thank you all

450
00:17:52,140 --> 00:17:54,419
okay thank you benno so next

451
00:17:54,419 --> 00:17:56,880
presentation is from Steve Sullivan our

452
00:17:56,880 --> 00:17:59,340
membership coordinator Steve is going to

453
00:17:59,340 --> 00:18:01,740
be telling you a bit about how to make

454
00:18:01,740 --> 00:18:03,780
use of the orac portal and what we've

455
00:18:03,780 --> 00:18:05,640
been doing with it to make it easier to

456
00:18:05,640 --> 00:18:08,460
use so Steve

457
00:18:08,460 --> 00:18:10,799
thanks Keith

458
00:18:10,799 --> 00:18:12,900
hey everybody thank you for coming

459
00:18:12,900 --> 00:18:14,400
um my name is Steve Sullivan as he's

460
00:18:14,400 --> 00:18:15,780
mentioned I'm membership coordinator for

461
00:18:15,780 --> 00:18:17,960
orc my role in the organization is

462
00:18:17,960 --> 00:18:21,179
mainly to field New membership inquiries

463
00:18:21,179 --> 00:18:22,940
excuse me

464
00:18:22,940 --> 00:18:25,679
field New membership inquiries if

465
00:18:25,679 --> 00:18:27,480
anybody has any friends or leads they

466
00:18:27,480 --> 00:18:29,160
want to send my way I'm happy to speak

467
00:18:29,160 --> 00:18:31,140
with them and give them a little

468
00:18:31,140 --> 00:18:33,240
um information on what the organization

469
00:18:33,240 --> 00:18:35,640
organization is about and what we do

470
00:18:35,640 --> 00:18:38,280
I also like to assist current members in

471
00:18:38,280 --> 00:18:40,320
navigating the orc landscape if you're

472
00:18:40,320 --> 00:18:42,419
lost you need to point in the right

473
00:18:42,419 --> 00:18:43,980
direction please don't hesitate to give

474
00:18:43,980 --> 00:18:46,559
me a an email or a call I will take

475
00:18:46,559 --> 00:18:48,360
phone calls or matter most and you

476
00:18:48,360 --> 00:18:51,360
should all have my matamos handle

477
00:18:51,360 --> 00:18:53,640
um and just general questions about

478
00:18:53,640 --> 00:18:55,260
membership and

479
00:18:55,260 --> 00:18:57,419
in data work today I'm going to give you

480
00:18:57,419 --> 00:18:59,460
an update on the orc portal uh what

481
00:18:59,460 --> 00:19:01,380
we've been doing since the AGM back in

482
00:19:01,380 --> 00:19:02,660
November 21

483
00:19:02,660 --> 00:19:05,520
2021 Jerry's put some work into it to

484
00:19:05,520 --> 00:19:07,500
make it a lot more useful and try to

485
00:19:07,500 --> 00:19:09,720
evolve it from what was an older less

486
00:19:09,720 --> 00:19:11,640
useful portal and you all actually have

487
00:19:11,640 --> 00:19:13,080
access if you're a member of the

488
00:19:13,080 --> 00:19:15,120
organization or a participant of the

489
00:19:15,120 --> 00:19:16,320
organization

490
00:19:16,320 --> 00:19:18,240
to set up your profile

491
00:19:18,240 --> 00:19:20,039
and it's important to keep that profile

492
00:19:20,039 --> 00:19:24,240
up to date make sure you're on top of uh

493
00:19:24,240 --> 00:19:26,039
changing of an employee's leave or

494
00:19:26,039 --> 00:19:28,080
somebody is promoted to another

495
00:19:28,080 --> 00:19:30,120
department in your organization please

496
00:19:30,120 --> 00:19:32,280
take a stop in the portal and do make

497
00:19:32,280 --> 00:19:33,780
that change for us because that actually

498
00:19:33,780 --> 00:19:36,120
drives the membership or the member to

499
00:19:36,120 --> 00:19:38,460
member contact database and that

500
00:19:38,460 --> 00:19:41,100
actually if if that is not up to date to

501
00:19:41,100 --> 00:19:42,120
the minute it can cause a little

502
00:19:42,120 --> 00:19:43,500
frustration for folks when they're

503
00:19:43,500 --> 00:19:45,539
trying to reach out during periods of

504
00:19:45,539 --> 00:19:47,280
time where there's an issue resolution

505
00:19:47,280 --> 00:19:48,660
community

506
00:19:48,660 --> 00:19:50,940
response to an issue that's going on out

507
00:19:50,940 --> 00:19:53,160
there in DNS so please do keep that up

508
00:19:53,160 --> 00:19:55,679
to date I'm always there to help out so

509
00:19:55,679 --> 00:19:57,539
if you're too busy just throw the

510
00:19:57,539 --> 00:19:59,280
information my way I'm happy to do the

511
00:19:59,280 --> 00:20:01,140
work for you

512
00:20:01,140 --> 00:20:03,140
um

513
00:20:04,080 --> 00:20:06,179
let's see next slide here

514
00:20:06,179 --> 00:20:07,679
so the upgrades we've done since

515
00:20:07,679 --> 00:20:10,380
November of 2021 they're put into three

516
00:20:10,380 --> 00:20:11,280
different

517
00:20:11,280 --> 00:20:11,820
um

518
00:20:11,820 --> 00:20:14,700
categories first we since this is an

519
00:20:14,700 --> 00:20:16,320
iteration from a previous version of the

520
00:20:16,320 --> 00:20:18,900
portal we had to do a lot of cleanup so

521
00:20:18,900 --> 00:20:20,700
we revised some fields and layout

522
00:20:20,700 --> 00:20:22,740
actually Jerry did that with some of my

523
00:20:22,740 --> 00:20:24,240
counsel input

524
00:20:24,240 --> 00:20:26,700
we removed a lot of unneeded fields that

525
00:20:26,700 --> 00:20:28,200
were artifacts of the old portal they

526
00:20:28,200 --> 00:20:29,760
didn't make sense and I'm sure it caused

527
00:20:29,760 --> 00:20:31,020
some confusion for people when they

528
00:20:31,020 --> 00:20:32,640
stopped in to look at it so hopefully if

529
00:20:32,640 --> 00:20:34,200
you look at the the portal in its

530
00:20:34,200 --> 00:20:35,640
current state it makes a lot more sense

531
00:20:35,640 --> 00:20:38,160
and is more informational a lot more

532
00:20:38,160 --> 00:20:39,720
readable too

533
00:20:39,720 --> 00:20:42,360
we renamed a lot of fields so that they

534
00:20:42,360 --> 00:20:44,360
are clear and what they actually are

535
00:20:44,360 --> 00:20:47,940
prior to this last iteration some things

536
00:20:47,940 --> 00:20:50,039
just didn't make sense so right now when

537
00:20:50,039 --> 00:20:51,480
you look at something it says exactly

538
00:20:51,480 --> 00:20:53,100
what it does this is your start date for

539
00:20:53,100 --> 00:20:54,780
your agreement this is your end date so

540
00:20:54,780 --> 00:20:57,840
you have those uh those Milestones you

541
00:20:57,840 --> 00:20:59,460
know when your your renewals are coming

542
00:20:59,460 --> 00:21:01,020
up and I always do

543
00:21:01,020 --> 00:21:03,179
uh reach out to remind folks when

544
00:21:03,179 --> 00:21:04,500
renewals are coming up but if you do

545
00:21:04,500 --> 00:21:05,640
have a question in the meantime please

546
00:21:05,640 --> 00:21:07,440
stop in at the portal

547
00:21:07,440 --> 00:21:10,919
we also added a Vendor Portal field that

548
00:21:10,919 --> 00:21:12,120
is a

549
00:21:12,120 --> 00:21:15,120
and the new procure to pay movement has

550
00:21:15,120 --> 00:21:17,400
uh is starting to take hold so we see a

551
00:21:17,400 --> 00:21:19,679
lot more folks using a third-party

552
00:21:19,679 --> 00:21:21,660
organization to manage that which is our

553
00:21:21,660 --> 00:21:22,980
interface for

554
00:21:22,980 --> 00:21:25,200
sending invoices and paying and if you

555
00:21:25,200 --> 00:21:26,520
could make sure that's up to date

556
00:21:26,520 --> 00:21:28,200
companies are sometimes changing them

557
00:21:28,200 --> 00:21:29,820
year to year and we just can't keep up

558
00:21:29,820 --> 00:21:31,200
and that causes a little bit of slowdown

559
00:21:31,200 --> 00:21:34,500
in the renewal process so please take a

560
00:21:34,500 --> 00:21:36,720
look at the portal and do enter your uh

561
00:21:36,720 --> 00:21:39,299
your Vendor Portal information if you

562
00:21:39,299 --> 00:21:41,720
indeed know who that is

563
00:21:41,720 --> 00:21:45,480
we've enhanced member info management by

564
00:21:45,480 --> 00:21:47,100
that I mean the membership term info is

565
00:21:47,100 --> 00:21:48,419
more clearly displayed as I just

566
00:21:48,419 --> 00:21:51,780
mentioned we've added contact POC tags

567
00:21:51,780 --> 00:21:53,400
so if you want to triage who your

568
00:21:53,400 --> 00:21:55,559
contact people are

569
00:21:55,559 --> 00:21:59,100
um your org manager can go in and make

570
00:21:59,100 --> 00:22:00,900
somebody a point of contact I believe

571
00:22:00,900 --> 00:22:02,220
you could make yourself a point of

572
00:22:02,220 --> 00:22:03,299
contact even if you're not an

573
00:22:03,299 --> 00:22:06,179
organization manager uh so it's just

574
00:22:06,179 --> 00:22:07,919
another way to improve the

575
00:22:07,919 --> 00:22:09,659
communications between members of the

576
00:22:09,659 --> 00:22:11,820
organization

577
00:22:11,820 --> 00:22:15,299
we also added the editable names field

578
00:22:15,299 --> 00:22:17,640
this is mainly for the org managers or

579
00:22:17,640 --> 00:22:19,260
the you know our first point of contact

580
00:22:19,260 --> 00:22:21,059
with the person that manages the data in

581
00:22:21,059 --> 00:22:23,640
the portal this is coming about because

582
00:22:23,640 --> 00:22:27,059
of the the era of mergers and

583
00:22:27,059 --> 00:22:28,559
Acquisitions we're seeing a lot more

584
00:22:28,559 --> 00:22:29,940
companies

585
00:22:29,940 --> 00:22:32,340
either come together and have two names

586
00:22:32,340 --> 00:22:33,960
or maybe it'll be a conglomerate with

587
00:22:33,960 --> 00:22:35,580
five or six names and that actually

588
00:22:35,580 --> 00:22:37,919
helps to improve the search you know for

589
00:22:37,919 --> 00:22:40,200
instance we gave

590
00:22:40,200 --> 00:22:42,480
recently had an issue where slack had

591
00:22:42,480 --> 00:22:44,460
some problems and we realized that oh

592
00:22:44,460 --> 00:22:46,260
sales force is here they acquired slack

593
00:22:46,260 --> 00:22:48,179
we didn't have the slack folks in we

594
00:22:48,179 --> 00:22:49,679
were able to get them on the portal

595
00:22:49,679 --> 00:22:51,299
within minutes

596
00:22:51,299 --> 00:22:53,700
answer the issues and watch this get

597
00:22:53,700 --> 00:22:55,860
fixed in real time on matter most it was

598
00:22:55,860 --> 00:22:57,659
very cool to see and it's nice to see

599
00:22:57,659 --> 00:22:59,700
that we actually are helping to make a

600
00:22:59,700 --> 00:23:02,659
better internet that way

601
00:23:02,700 --> 00:23:04,320
um we also updated help text throughout

602
00:23:04,320 --> 00:23:06,000
there were actually old artifacts from

603
00:23:06,000 --> 00:23:07,980
the other portal or the older portal

604
00:23:07,980 --> 00:23:09,840
that um were still in there they

605
00:23:09,840 --> 00:23:11,159
persisted and just didn't make sense

606
00:23:11,159 --> 00:23:12,720
we're trying to make it clear and

607
00:23:12,720 --> 00:23:13,799
shorter that's what I mean by

608
00:23:13,799 --> 00:23:16,380
readability if it's long it's people

609
00:23:16,380 --> 00:23:17,520
aren't going to spend the time to read

610
00:23:17,520 --> 00:23:19,679
it so we've tried to make it as useful

611
00:23:19,679 --> 00:23:21,419
as possible in that respect

612
00:23:21,419 --> 00:23:23,220
also I shortened the portal welcome

613
00:23:23,220 --> 00:23:24,600
letter um

614
00:23:24,600 --> 00:23:25,860
I have a tendency to be a little

615
00:23:25,860 --> 00:23:27,360
long-winded as you can probably will

616
00:23:27,360 --> 00:23:28,860
find out now

617
00:23:28,860 --> 00:23:30,659
yeah it was too long so we want to

618
00:23:30,659 --> 00:23:32,880
shorten it down to where that email when

619
00:23:32,880 --> 00:23:34,980
it goes out in the onboarding process is

620
00:23:34,980 --> 00:23:36,960
is just simple easy to read and you know

621
00:23:36,960 --> 00:23:38,340
exactly what you're looking at we don't

622
00:23:38,340 --> 00:23:40,500
want to information you to death it's

623
00:23:40,500 --> 00:23:41,940
just simple and again if you have any

624
00:23:41,940 --> 00:23:43,320
questions if that email didn't come

625
00:23:43,320 --> 00:23:45,000
through please give me a call if when

626
00:23:45,000 --> 00:23:46,640
you add an user and they don't see it

627
00:23:46,640 --> 00:23:49,440
just shoot an email shoot a text however

628
00:23:49,440 --> 00:23:50,460
you want to get in touch with me I'll be

629
00:23:50,460 --> 00:23:52,559
able to help out

630
00:23:52,559 --> 00:23:54,120
um and the last is automated email

631
00:23:54,120 --> 00:23:55,380
reminders

632
00:23:55,380 --> 00:23:58,260
um this is important in that we may not

633
00:23:58,260 --> 00:23:59,720
see

634
00:23:59,720 --> 00:24:03,120
a notification that a member contact is

635
00:24:03,120 --> 00:24:04,980
not in the portal and that could be a

636
00:24:04,980 --> 00:24:07,320
liability in the fact that

637
00:24:07,320 --> 00:24:10,020
we're still sending a member uh members

638
00:24:10,020 --> 00:24:12,299
at emails there could be some private

639
00:24:12,299 --> 00:24:14,159
membership only information that's going

640
00:24:14,159 --> 00:24:15,900
to that person now it may not go it may

641
00:24:15,900 --> 00:24:17,340
go to a dead email address but if

642
00:24:17,340 --> 00:24:19,260
they're using a personal email address

643
00:24:19,260 --> 00:24:21,600
in the portal they'll may still be

644
00:24:21,600 --> 00:24:22,559
getting that when they're not with your

645
00:24:22,559 --> 00:24:25,080
organization so keep on top of that it

646
00:24:25,080 --> 00:24:26,880
could take us a couple weeks to catch up

647
00:24:26,880 --> 00:24:28,799
to that and once we do start seeing the

648
00:24:28,799 --> 00:24:31,140
the bounces come in you know we do try

649
00:24:31,140 --> 00:24:32,460
to do that um

650
00:24:32,460 --> 00:24:34,500
send out an email to the organization

651
00:24:34,500 --> 00:24:36,600
manager or look in the LinkedIn it takes

652
00:24:36,600 --> 00:24:38,700
me a little bit to figure that out but I

653
00:24:38,700 --> 00:24:40,679
don't want to go in and disable anybody

654
00:24:40,679 --> 00:24:43,080
without member input or participant

655
00:24:43,080 --> 00:24:46,200
input so if I do reach out on that I'm

656
00:24:46,200 --> 00:24:47,760
not trying to bother I'm just trying to

657
00:24:47,760 --> 00:24:49,679
help you guys out and cleaning that up

658
00:24:49,679 --> 00:24:52,320
and the emails are also designed to do

659
00:24:52,320 --> 00:24:54,240
that and they go out quarterly you do

660
00:24:54,240 --> 00:24:55,440
have the freedom to do it on your own so

661
00:24:55,440 --> 00:24:57,000
you see the email you go and review

662
00:24:57,000 --> 00:24:59,280
those your contact list

663
00:24:59,280 --> 00:25:01,620
say your phone number changed just go

664
00:25:01,620 --> 00:25:02,760
ahead and change it in there if your

665
00:25:02,760 --> 00:25:04,860
email changes please feel free to stop

666
00:25:04,860 --> 00:25:06,960
in if you're not sure how to do it

667
00:25:06,960 --> 00:25:10,400
give me a shout please

668
00:25:10,559 --> 00:25:13,260
also for supporters we have instituted

669
00:25:13,260 --> 00:25:15,659
an in-kind submission reminder the

670
00:25:15,659 --> 00:25:18,120
supporters have a in-kind

671
00:25:18,120 --> 00:25:20,340
contribution that is required of their

672
00:25:20,340 --> 00:25:23,100
agreement in order to participate for at

673
00:25:23,100 --> 00:25:24,659
their at their level

674
00:25:24,659 --> 00:25:28,080
and we realize that it's everyone's very

675
00:25:28,080 --> 00:25:30,000
busy and that reminder is just designed

676
00:25:30,000 --> 00:25:31,620
us to be sent out to say Hey you know

677
00:25:31,620 --> 00:25:33,480
you've got this coming up please submit

678
00:25:33,480 --> 00:25:35,159
that information to us as soon as you

679
00:25:35,159 --> 00:25:38,460
can we need that we do need that before

680
00:25:38,460 --> 00:25:40,679
the end of the agreement preferably and

681
00:25:40,679 --> 00:25:42,779
we do need the in-kinds to be submitted

682
00:25:42,779 --> 00:25:44,279
in email so we have a chance to review

683
00:25:44,279 --> 00:25:46,620
them and it's not ideal to do it at the

684
00:25:46,620 --> 00:25:48,779
time of renewal that just slows the

685
00:25:48,779 --> 00:25:51,559
whole process down

686
00:25:52,080 --> 00:25:55,380
so some takeaways and portal benefits I

687
00:25:55,380 --> 00:25:57,240
want to stress the benefits of this now

688
00:25:57,240 --> 00:25:59,159
is the old portal was not a self-service

689
00:25:59,159 --> 00:26:01,740
portal this portal Portal 2 that Jerry

690
00:26:01,740 --> 00:26:03,779
has put together is a self-service

691
00:26:03,779 --> 00:26:05,400
portal you have access to it so you can

692
00:26:05,400 --> 00:26:07,140
drive that Destiny you can make those

693
00:26:07,140 --> 00:26:10,140
changes but I got your back again you

694
00:26:10,140 --> 00:26:11,400
feel free to come out and talk to me if

695
00:26:11,400 --> 00:26:13,380
you want me to make make those changes

696
00:26:13,380 --> 00:26:16,100
for you um

697
00:26:17,340 --> 00:26:19,740
uh we consider this the authoritative

698
00:26:19,740 --> 00:26:21,600
member information Source it's the

699
00:26:21,600 --> 00:26:23,400
Cornerstone of your membership and it's

700
00:26:23,400 --> 00:26:25,320
going to get even more important as we

701
00:26:25,320 --> 00:26:27,900
move forward because we need enablement

702
00:26:27,900 --> 00:26:29,760
tools like this in order to do things

703
00:26:29,760 --> 00:26:31,260
quickly and easily to support our

704
00:26:31,260 --> 00:26:33,539
membership we have things in the back

705
00:26:33,539 --> 00:26:35,340
burners such as maybe putting agreement

706
00:26:35,340 --> 00:26:38,640
copies in there maybe delivering the uh

707
00:26:38,640 --> 00:26:41,159
the discount codes for the for the

708
00:26:41,159 --> 00:26:42,900
workshops that way so it's a One-Stop

709
00:26:42,900 --> 00:26:44,539
shop to get everything and as we iterate

710
00:26:44,539 --> 00:26:47,940
we really want member input that's very

711
00:26:47,940 --> 00:26:49,740
helpful I'm running out of ideas and

712
00:26:49,740 --> 00:26:51,059
it'd be helpful to hear from you all

713
00:26:51,059 --> 00:26:52,620
what you would like to see in there and

714
00:26:52,620 --> 00:26:54,120
where you would like to go we've gotten

715
00:26:54,120 --> 00:26:55,640
some info or some input from Fall

716
00:26:55,640 --> 00:26:58,740
eversmen thank you Paul for that and we

717
00:26:58,740 --> 00:27:00,240
see that there's like a direction we can

718
00:27:00,240 --> 00:27:02,279
go in but again more more member input

719
00:27:02,279 --> 00:27:04,200
will be helpful

720
00:27:04,200 --> 00:27:04,860
um

721
00:27:04,860 --> 00:27:06,840
this is a member controlled contact

722
00:27:06,840 --> 00:27:08,640
database but again it does require the

723
00:27:08,640 --> 00:27:10,200
active care and feeding to keep the

724
00:27:10,200 --> 00:27:11,700
currents again so remember that

725
00:27:11,700 --> 00:27:13,799
liability it's self-service for me I got

726
00:27:13,799 --> 00:27:16,158
your back

727
00:27:16,200 --> 00:27:19,640
um let's configure

728
00:27:19,740 --> 00:27:21,779
oh if you do need help reach out again

729
00:27:21,779 --> 00:27:24,059
as I said uh Jerry and I are happy to do

730
00:27:24,059 --> 00:27:26,520
uh one-on-one demos of the portal if you

731
00:27:26,520 --> 00:27:28,200
want to just refresh her if you've never

732
00:27:28,200 --> 00:27:29,760
if you're not familiar with what it

733
00:27:29,760 --> 00:27:31,080
looks like now or if you just want to

734
00:27:31,080 --> 00:27:32,880
understand how better to use the the

735
00:27:32,880 --> 00:27:35,580
portal please grab me and stop and sit

736
00:27:35,580 --> 00:27:36,600
down with you for a few minutes during

737
00:27:36,600 --> 00:27:38,640
the breaks and just go over it very

738
00:27:38,640 --> 00:27:40,620
quickly it won't take very much time it

739
00:27:40,620 --> 00:27:42,840
is pretty simple the design of it it's

740
00:27:42,840 --> 00:27:45,360
elegant it's very basic it's not

741
00:27:45,360 --> 00:27:48,659
overdone so please reach out to me if

742
00:27:48,659 --> 00:27:50,640
you want to uh be able to take a look at

743
00:27:50,640 --> 00:27:52,799
the portal in Greater detail

744
00:27:52,799 --> 00:27:55,760
any questions

745
00:27:57,840 --> 00:27:59,039
okay

746
00:27:59,039 --> 00:28:01,200
thank you very much

747
00:28:01,200 --> 00:28:03,299
okay thank you Steve

748
00:28:03,299 --> 00:28:04,980
um we're still running about 15 minutes

749
00:28:04,980 --> 00:28:07,620
late so um just in case anyone joined

750
00:28:07,620 --> 00:28:09,480
and wondered what's what's going on with

751
00:28:09,480 --> 00:28:10,740
that

752
00:28:10,740 --> 00:28:12,659
um Nick speakers Jamie Lindstrom I'm

753
00:28:12,659 --> 00:28:14,880
sure most of you know Jerry um Jerry is

754
00:28:14,880 --> 00:28:17,159
going to be talking about what he's been

755
00:28:17,159 --> 00:28:19,080
working on and what his plans are on the

756
00:28:19,080 --> 00:28:20,880
software engineering side of the

757
00:28:20,880 --> 00:28:23,419
organization

758
00:28:26,059 --> 00:28:28,679
good morning everyone

759
00:28:28,679 --> 00:28:31,500
um so my name is Yuri lundstrom and I'm

760
00:28:31,500 --> 00:28:33,919
the software engineer at work

761
00:28:33,919 --> 00:28:38,159
I maintain and develop all of our open

762
00:28:38,159 --> 00:28:43,039
source tools some of those services

763
00:28:43,180 --> 00:28:43,860
[Music]

764
00:28:43,860 --> 00:28:44,760
um

765
00:28:44,760 --> 00:28:48,360
and I we usually give out the report on

766
00:28:48,360 --> 00:28:50,400
the last couple of months since the last

767
00:28:50,400 --> 00:28:52,860
meeting uh but this time I wanted to do

768
00:28:52,860 --> 00:28:54,360
something different and I wrote a blog

769
00:28:54,360 --> 00:28:57,059
post instead to try and make it a bit

770
00:28:57,059 --> 00:28:59,159
funnier to to read

771
00:28:59,159 --> 00:29:01,500
hopefully

772
00:29:01,500 --> 00:29:04,559
um so I linked to all my other blog

773
00:29:04,559 --> 00:29:06,840
posts about the things I've been doing

774
00:29:06,840 --> 00:29:09,360
since it's been nine months since the

775
00:29:09,360 --> 00:29:11,120
last meeting

776
00:29:11,120 --> 00:29:16,740
and I wrote a story about a survey I

777
00:29:16,740 --> 00:29:19,919
posted earlier this year in the process

778
00:29:19,919 --> 00:29:22,260
of getting to the result of that and the

779
00:29:22,260 --> 00:29:24,559
decision

780
00:29:24,600 --> 00:29:27,720
um so the till they are on that as Keith

781
00:29:27,720 --> 00:29:29,940
mentioned is that my focus going forward

782
00:29:29,940 --> 00:29:32,659
is going to be on check by DNS

783
00:29:32,659 --> 00:29:37,799
and to iterate what it is it's a tool to

784
00:29:37,799 --> 00:29:41,580
test the end resolver to the authority

785
00:29:41,580 --> 00:29:44,580
so I do some things in browser and

786
00:29:44,580 --> 00:29:47,580
generate queries and I control the

787
00:29:47,580 --> 00:29:51,000
authority and in that way I can test the

788
00:29:51,000 --> 00:29:53,460
authority in different ways

789
00:29:53,460 --> 00:29:59,520
and I got inspired during ripe 84 uh

790
00:29:59,520 --> 00:30:03,000
uh with the talk uh Sarah Dickinson had

791
00:30:03,000 --> 00:30:04,559
about

792
00:30:04,559 --> 00:30:05,640
uh

793
00:30:05,640 --> 00:30:08,640
dinner so quick a quick looked at

794
00:30:08,640 --> 00:30:10,559
support for that and in a couple of

795
00:30:10,559 --> 00:30:12,960
weeks I had that running

796
00:30:12,960 --> 00:30:14,760
um but I haven't found any result

797
00:30:14,760 --> 00:30:17,159
software Tech and talked that yet so

798
00:30:17,159 --> 00:30:20,460
we'll probably get to that in the future

799
00:30:20,460 --> 00:30:22,980
uh yeah and I have a lot of other stuff

800
00:30:22,980 --> 00:30:26,340
coming like new uis I want to do one for

801
00:30:26,340 --> 00:30:30,179
mobile one for desktop console with a

802
00:30:30,179 --> 00:30:33,840
lot of things but yeah UI often take a

803
00:30:33,840 --> 00:30:36,059
lot of time to make

804
00:30:36,059 --> 00:30:40,039
so in the last nine months there's been

805
00:30:40,039 --> 00:30:42,600
26 releases

806
00:30:42,600 --> 00:30:47,220
of our software over 200 pull requests

807
00:30:47,220 --> 00:30:50,039
and and you can see in the

808
00:30:50,039 --> 00:30:54,120
in the word art there the the which of

809
00:30:54,120 --> 00:30:55,799
those softwares has gotten the most

810
00:30:55,799 --> 00:30:57,419
updates

811
00:30:57,419 --> 00:31:00,600
and here is also like yeah you can see

812
00:31:00,600 --> 00:31:02,760
my workload over the year over the last

813
00:31:02,760 --> 00:31:05,100
nine months and you can also spot where

814
00:31:05,100 --> 00:31:06,779
I have holidays or go to other

815
00:31:06,779 --> 00:31:09,320
conferences

816
00:31:09,419 --> 00:31:12,840
um and that's basically it and uh I'm

817
00:31:12,840 --> 00:31:15,299
gonna skip questions so just come find

818
00:31:15,299 --> 00:31:18,240
me afterwards if you have anything and

819
00:31:18,240 --> 00:31:20,880
if you have any questions around our

820
00:31:20,880 --> 00:31:23,220
software or our services feel free to

821
00:31:23,220 --> 00:31:27,380
contact me in any way uh I also did the

822
00:31:27,380 --> 00:31:31,500
dec grafana crash course stuff if

823
00:31:31,500 --> 00:31:33,120
there's people still interested in that

824
00:31:33,120 --> 00:31:35,100
we can set that up or if you have any

825
00:31:35,100 --> 00:31:37,260
other issues you want to have a longer

826
00:31:37,260 --> 00:31:39,419
discussions you want to show me give me

827
00:31:39,419 --> 00:31:41,640
access system if anything I'm here for

828
00:31:41,640 --> 00:31:43,620
you so

829
00:31:43,620 --> 00:31:47,479
that's it thank you

830
00:31:53,100 --> 00:31:55,200
okay thank you Jerry

831
00:31:55,200 --> 00:31:57,480
um so next stop

832
00:31:57,480 --> 00:31:59,220
um honestly disentangles himself from

833
00:31:59,220 --> 00:32:00,720
the webcast stuff I think we need to

834
00:32:00,720 --> 00:32:03,480
give Matt a moment

835
00:32:03,480 --> 00:32:06,419
um is Matt pounce it um our systems

836
00:32:06,419 --> 00:32:08,820
engineer actually half of our systems

837
00:32:08,820 --> 00:32:11,100
engineering team now and uh Matt's going

838
00:32:11,100 --> 00:32:12,779
to be giving you an update on what he

839
00:32:12,779 --> 00:32:14,640
and Mike have been working on and have

840
00:32:14,640 --> 00:32:18,299
planned on our systems infrastructure

841
00:32:18,299 --> 00:32:20,779
foreign

842
00:32:20,779 --> 00:32:23,100
thanks Keith

843
00:32:23,100 --> 00:32:25,799
um yeah so I'm Matt poundsett

844
00:32:25,799 --> 00:32:27,419
um as Keith mentioned half of our

845
00:32:27,419 --> 00:32:30,240
systems engineering team right now

846
00:32:30,240 --> 00:32:31,260
um

847
00:32:31,260 --> 00:32:34,260
so uh as usual we've got a written

848
00:32:34,260 --> 00:32:37,140
report that we put together that covers

849
00:32:37,140 --> 00:32:38,940
um this stuff in more detail and a few

850
00:32:38,940 --> 00:32:40,380
other things that are sort of lower

851
00:32:40,380 --> 00:32:42,480
priority that we have haven't bothered

852
00:32:42,480 --> 00:32:46,320
to mention in our in our talk today

853
00:32:46,320 --> 00:32:48,539
um so I guess the the headline here

854
00:32:48,539 --> 00:32:49,559
which is

855
00:32:49,559 --> 00:32:51,299
um buried a little bit in the slides is

856
00:32:51,299 --> 00:32:55,380
we've uh we uh brought Mike Bear on a

857
00:32:55,380 --> 00:32:57,600
few months ago to help out with systems

858
00:32:57,600 --> 00:32:59,880
engineering stuff

859
00:32:59,880 --> 00:33:01,620
um one of the things that's been sort of

860
00:33:01,620 --> 00:33:03,600
a major problem with systems engineering

861
00:33:03,600 --> 00:33:05,220
for the last few years now is we've had

862
00:33:05,220 --> 00:33:07,260
a lot more to do than we have time for

863
00:33:07,260 --> 00:33:08,760
so

864
00:33:08,760 --> 00:33:11,880
um Mike's gonna Mike's getting up to

865
00:33:11,880 --> 00:33:14,100
speed and and and has already started

866
00:33:14,100 --> 00:33:16,620
taking on some of the

867
00:33:16,620 --> 00:33:18,299
um maintenance and update tasks and

868
00:33:18,299 --> 00:33:20,940
things like that and uh

869
00:33:20,940 --> 00:33:22,740
um as he gets more familiar with stuff

870
00:33:22,740 --> 00:33:24,600
we will continue to hand more work to

871
00:33:24,600 --> 00:33:26,519
him so

872
00:33:26,519 --> 00:33:27,899
um so yeah so we're still working on our

873
00:33:27,899 --> 00:33:30,899
backlog of issues but uh but there's an

874
00:33:30,899 --> 00:33:33,120
end to Insight now to to some of that

875
00:33:33,120 --> 00:33:34,799
stuff

876
00:33:34,799 --> 00:33:35,340
um

877
00:33:35,340 --> 00:33:37,679
as well with uh lifting a lot of the

878
00:33:37,679 --> 00:33:39,059
travel restrictions and stuff we've

879
00:33:39,059 --> 00:33:40,799
we've been able to start making physical

880
00:33:40,799 --> 00:33:42,840
visits to our sites again so we're no

881
00:33:42,840 --> 00:33:44,940
longer relying on remote hands quite so

882
00:33:44,940 --> 00:33:46,440
much

883
00:33:46,440 --> 00:33:48,480
um which is has made it easier to do

884
00:33:48,480 --> 00:33:50,279
sort of a lot of physical maintenance

885
00:33:50,279 --> 00:33:52,080
stuff that's been

886
00:33:52,080 --> 00:33:52,740
um

887
00:33:52,740 --> 00:33:56,640
uh either subpar or not done at all for

888
00:33:56,640 --> 00:33:59,240
the last couple of years

889
00:33:59,240 --> 00:34:01,860
so one of those things is we end up

890
00:34:01,860 --> 00:34:04,440
relocating our Ottawa site so we've had

891
00:34:04,440 --> 00:34:07,080
uh for a long time now we've had this

892
00:34:07,080 --> 00:34:09,619
sort of satellite site in Ottawa Canada

893
00:34:09,619 --> 00:34:12,179
which was initially just some basic

894
00:34:12,179 --> 00:34:14,339
admin Services a backup DNS server that

895
00:34:14,339 --> 00:34:16,379
kind of stuff

896
00:34:16,379 --> 00:34:21,780
um and uh a while back we moved a copy

897
00:34:21,780 --> 00:34:25,560
of uh all of our analysis data there so

898
00:34:25,560 --> 00:34:26,820
that there would be something outside

899
00:34:26,820 --> 00:34:29,460
the U.S jurisdiction for for anyone who

900
00:34:29,460 --> 00:34:32,699
who wanted that for doing analysis work

901
00:34:32,699 --> 00:34:34,800
um and all of that has been uh

902
00:34:34,800 --> 00:34:37,199
generously hosted by Sarah providing us

903
00:34:37,199 --> 00:34:39,659
with Rackspace and and power and and

904
00:34:39,659 --> 00:34:43,020
network for uh for a few years now

905
00:34:43,020 --> 00:34:44,820
um so they notified us earlier this

906
00:34:44,820 --> 00:34:45,839
spring that they were going to be

907
00:34:45,839 --> 00:34:48,060
relocating that site so we had to do a

908
00:34:48,060 --> 00:34:50,099
physical move

909
00:34:50,099 --> 00:34:52,199
um and that meant we had to deal with a

910
00:34:52,199 --> 00:34:53,639
bunch of uh

911
00:34:53,639 --> 00:34:56,040
issues there as well or rather it was

912
00:34:56,040 --> 00:34:57,839
there was an opportunity to deal with a

913
00:34:57,839 --> 00:35:00,359
bunch of issues there so in the process

914
00:35:00,359 --> 00:35:01,619
of the move

915
00:35:01,619 --> 00:35:03,599
um we got our own Transit so we're no

916
00:35:03,599 --> 00:35:05,460
longer just piggybacking off of Ciro

917
00:35:05,460 --> 00:35:07,859
we're

918
00:35:07,859 --> 00:35:09,420
um we're using now a separate address

919
00:35:09,420 --> 00:35:12,300
space we've done a lot of cleanup of the

920
00:35:12,300 --> 00:35:14,040
private address space we were using

921
00:35:14,040 --> 00:35:17,760
there we got a second storage server so

922
00:35:17,760 --> 00:35:21,599
we now have a local to Ottawa backup of

923
00:35:21,599 --> 00:35:23,640
the data that's there

924
00:35:23,640 --> 00:35:24,359
um

925
00:35:24,359 --> 00:35:27,240
and uh and we we've we've got some other

926
00:35:27,240 --> 00:35:30,740
improvements coming along the way so

927
00:35:31,020 --> 00:35:33,599
um part of that is new routers

928
00:35:33,599 --> 00:35:36,420
um so it was oh DNS Vis users have

929
00:35:36,420 --> 00:35:38,099
probably been aware of we've we've had

930
00:35:38,099 --> 00:35:40,980
issues with V6 in Fremont for a long

931
00:35:40,980 --> 00:35:44,520
time now um there's a bug in the

932
00:35:44,520 --> 00:35:46,680
um OS on our rotor there that results in

933
00:35:46,680 --> 00:35:50,400
random routes not getting installed

934
00:35:50,400 --> 00:35:53,400
um so we've got a new rotor that is now

935
00:35:53,400 --> 00:35:54,720
on site

936
00:35:54,720 --> 00:35:58,859
um we had a bit of a shipping

937
00:35:58,859 --> 00:36:01,079
um Logistics problem that resulted in

938
00:36:01,079 --> 00:36:03,960
Optics that we need arriving after our

939
00:36:03,960 --> 00:36:06,060
last on-site visit

940
00:36:06,060 --> 00:36:08,040
um so we're going back in the next

941
00:36:08,040 --> 00:36:10,320
couple of weeks to install Optics and

942
00:36:10,320 --> 00:36:11,640
and stuff so we can actually start

943
00:36:11,640 --> 00:36:14,220
configuring that properly and there's a

944
00:36:14,220 --> 00:36:15,359
second router there that's going to be

945
00:36:15,359 --> 00:36:16,800
shipped to Ottawa to replace the one

946
00:36:16,800 --> 00:36:18,300
that is there so we'll be able to

947
00:36:18,300 --> 00:36:20,640
upgrade it to be able to do bgp and

948
00:36:20,640 --> 00:36:22,140
stuff like that up until now it's just

949
00:36:22,140 --> 00:36:25,220
been doing static routing

950
00:36:26,099 --> 00:36:28,520
um there have been a few updates to

951
00:36:28,520 --> 00:36:31,200
applications that we run hopefully

952
00:36:31,200 --> 00:36:33,420
nobody noticed these but but there's

953
00:36:33,420 --> 00:36:35,220
been a few things here that have been

954
00:36:35,220 --> 00:36:36,420
sort of

955
00:36:36,420 --> 00:36:39,540
um hanging on because they were not not

956
00:36:39,540 --> 00:36:41,339
urgent not critical but kind of needed

957
00:36:41,339 --> 00:36:43,500
to be done and

958
00:36:43,500 --> 00:36:45,960
um and and now with with the extra help

959
00:36:45,960 --> 00:36:49,220
we managed to handle them so

960
00:36:49,560 --> 00:36:51,660
um data store stuff uh there hasn't

961
00:36:51,660 --> 00:36:53,460
really been a lot of change here since

962
00:36:53,460 --> 00:36:56,040
the the last time we did a report

963
00:36:56,040 --> 00:36:58,980
um the the sort of Legacy NFS systems

964
00:36:58,980 --> 00:37:01,320
that we're trying to replace I haven't

965
00:37:01,320 --> 00:37:02,940
really changed much

966
00:37:02,940 --> 00:37:04,140
um we there's still a couple of them

967
00:37:04,140 --> 00:37:05,640
that are down

968
00:37:05,640 --> 00:37:08,400
um one we expect that to remain

969
00:37:08,400 --> 00:37:10,079
basically until we're ready to migrate

970
00:37:10,079 --> 00:37:12,480
data uh there's one of them that we can

971
00:37:12,480 --> 00:37:13,980
recover

972
00:37:13,980 --> 00:37:15,359
um uh but we're not really going to put

973
00:37:15,359 --> 00:37:17,400
the effort into it until we have a place

974
00:37:17,400 --> 00:37:19,740
to copy the data to

975
00:37:19,740 --> 00:37:20,520
um

976
00:37:20,520 --> 00:37:23,220
and the new data cluster the new CEF

977
00:37:23,220 --> 00:37:25,500
storage cluster not a lot has happened

978
00:37:25,500 --> 00:37:27,240
on that in the last six months but uh

979
00:37:27,240 --> 00:37:30,300
Mike is now taking on that

980
00:37:30,300 --> 00:37:31,980
um so that I can continue to concentrate

981
00:37:31,980 --> 00:37:34,920
on some other things and

982
00:37:34,920 --> 00:37:36,780
um hopefully we'll see we'll have

983
00:37:36,780 --> 00:37:38,400
something to report uh within the next

984
00:37:38,400 --> 00:37:40,880
few months

985
00:37:41,339 --> 00:37:42,300
um

986
00:37:42,300 --> 00:37:44,880
yeah so the uh the hardware for that was

987
00:37:44,880 --> 00:37:46,800
has been racked and and cabled and

988
00:37:46,800 --> 00:37:48,359
running for a while

989
00:37:48,359 --> 00:37:52,440
um we we've recently updated our uh

990
00:37:52,440 --> 00:37:54,420
um automated OS installer to deal with

991
00:37:54,420 --> 00:37:56,640
newer uh

992
00:37:56,640 --> 00:37:57,960
the newer version of the operating

993
00:37:57,960 --> 00:38:00,300
system we're using uh and my and Mike's

994
00:38:00,300 --> 00:38:02,099
trying to get up to speed on the uh the

995
00:38:02,099 --> 00:38:04,200
ceph configuration stuff to get that to

996
00:38:04,200 --> 00:38:07,879
get the actual application deployed

997
00:38:07,980 --> 00:38:10,560
um so that is sort of the high profile

998
00:38:10,560 --> 00:38:11,820
stuff

999
00:38:11,820 --> 00:38:14,579
um there as I mentioned there is a PDF

1000
00:38:14,579 --> 00:38:16,740
report that goes into more detail that's

1001
00:38:16,740 --> 00:38:19,560
available in Indigo on the under the

1002
00:38:19,560 --> 00:38:21,300
agenda

1003
00:38:21,300 --> 00:38:23,220
um does anybody have questions about any

1004
00:38:23,220 --> 00:38:25,578
of this

1005
00:38:26,820 --> 00:38:29,579
all right

1006
00:38:29,579 --> 00:38:32,760
um if if anyone does want to ask us

1007
00:38:32,760 --> 00:38:34,200
anything

1008
00:38:34,200 --> 00:38:34,920
um

1009
00:38:34,920 --> 00:38:38,460
I am Matt Mike is Mike we can be reached

1010
00:38:38,460 --> 00:38:40,200
under these names on matter most or by

1011
00:38:40,200 --> 00:38:42,000
email

1012
00:38:42,000 --> 00:38:43,980
um you can also send general questions

1013
00:38:43,980 --> 00:38:46,640
to admin if you want to email that way

1014
00:38:46,640 --> 00:38:49,500
and yeah we'll be happy to help out with

1015
00:38:49,500 --> 00:38:51,480
anything that comes up

1016
00:38:51,480 --> 00:38:54,200
thanks very much

1017
00:39:01,200 --> 00:39:04,200
okay thank you Matt and um also a big

1018
00:39:04,200 --> 00:39:05,820
thanks to Matt for all the runners

1019
00:39:05,820 --> 00:39:07,859
around he's done over the past 24 hours

1020
00:39:07,859 --> 00:39:09,359
in the preceding weeks to get the

1021
00:39:09,359 --> 00:39:12,000
webcast production going

1022
00:39:12,000 --> 00:39:14,940
um just one um pleasure that remains to

1023
00:39:14,940 --> 00:39:17,640
me into Banner which is

1024
00:39:17,640 --> 00:39:18,839
um

1025
00:39:18,839 --> 00:39:21,540
we've always tried to recognize the

1026
00:39:21,540 --> 00:39:23,940
contribution of our board and program

1027
00:39:23,940 --> 00:39:26,160
committee chairs

1028
00:39:26,160 --> 00:39:28,260
um they do a lot of work

1029
00:39:28,260 --> 00:39:29,940
um and of course one of the things

1030
00:39:29,940 --> 00:39:31,920
that's been very difficult to do over

1031
00:39:31,920 --> 00:39:33,960
the pandemic is to recognize that

1032
00:39:33,960 --> 00:39:35,040
properly

1033
00:39:35,040 --> 00:39:36,960
so um

1034
00:39:36,960 --> 00:39:38,640
we have a number we have a bit of a

1035
00:39:38,640 --> 00:39:41,400
thank you backlog to catch up

1036
00:39:41,400 --> 00:39:42,780
um there's four people in particular

1037
00:39:42,780 --> 00:39:43,920
that would like to recognize

1038
00:39:43,920 --> 00:39:46,260
unfortunately one of them is here

1039
00:39:46,260 --> 00:39:48,599
um Joe ably served on the board for a

1040
00:39:48,599 --> 00:39:49,859
year

1041
00:39:49,859 --> 00:39:53,160
um and um Andrei Suri served for several

1042
00:39:53,160 --> 00:39:55,020
years on the board and in more than one

1043
00:39:55,020 --> 00:39:58,020
capacity and uh John vichak was on the

1044
00:39:58,020 --> 00:39:59,940
um the PC for a full three years and

1045
00:39:59,940 --> 00:40:01,680
also served as program committee chair

1046
00:40:01,680 --> 00:40:03,359
so

1047
00:40:03,359 --> 00:40:05,520
um I'd like to to thank them all um the

1048
00:40:05,520 --> 00:40:08,280
only person that we want to thank

1049
00:40:08,280 --> 00:40:10,800
um who um is in fact here is David

1050
00:40:10,800 --> 00:40:13,260
Lawrence who served on the board as well

1051
00:40:13,260 --> 00:40:15,380
yeah

1052
00:40:15,720 --> 00:40:18,300
and um so a big thank you to David and

1053
00:40:18,300 --> 00:40:20,220
um to all the other um

1054
00:40:20,220 --> 00:40:22,200
former board members and program

1055
00:40:22,200 --> 00:40:24,000
committee chairs have helped out work

1056
00:40:24,000 --> 00:40:25,390
over the years

1057
00:40:25,390 --> 00:40:30,020
[Applause]

1058
00:40:30,020 --> 00:40:33,599
thank you David yeah so we didn't see

1059
00:40:33,599 --> 00:40:35,520
well we didn't see each other for two

1060
00:40:35,520 --> 00:40:38,400
years so it's very good that we are here

1061
00:40:38,400 --> 00:40:40,500
in the same room in the same place and

1062
00:40:40,500 --> 00:40:42,540
also Dave is not away he's very active

1063
00:40:42,540 --> 00:40:45,300
also in the Privacy committee so his

1064
00:40:45,300 --> 00:40:47,099
contributes are continuing and

1065
00:40:47,099 --> 00:40:49,260
continuing in yeah and now you're

1066
00:40:49,260 --> 00:40:51,240
already for a long time and it's not

1067
00:40:51,240 --> 00:40:52,859
only DNS our work the whole DNS

1068
00:40:52,859 --> 00:40:55,140
Community is in depth with you so thank

1069
00:40:55,140 --> 00:40:57,000
you very much

1070
00:40:57,000 --> 00:41:01,040
uh what he said thank you

1071
00:41:01,780 --> 00:41:07,560
[Applause]

1072
00:41:07,560 --> 00:41:09,839
and we we've had we have nice awards for

1073
00:41:09,839 --> 00:41:11,700
the other three as well so we will we'll

1074
00:41:11,700 --> 00:41:14,160
send them to them in due course or um

1075
00:41:14,160 --> 00:41:15,599
actually if anyone wants to carry them

1076
00:41:15,599 --> 00:41:17,579
back that would be really helpful

1077
00:41:17,579 --> 00:41:19,380
okay um so we're gonna break for coffee

1078
00:41:19,380 --> 00:41:21,300
uh coffee is outside

1079
00:41:21,300 --> 00:41:23,040
um two things I'd like to do before we

1080
00:41:23,040 --> 00:41:26,160
do that first of all the cfp for orac39

1081
00:41:26,160 --> 00:41:28,560
is now open

1082
00:41:28,560 --> 00:41:30,180
um so the program committee has got that

1083
00:41:30,180 --> 00:41:33,119
ready so if you had an idea for a talk

1084
00:41:33,119 --> 00:41:35,099
this week or over the course of this

1085
00:41:35,099 --> 00:41:36,780
weekend or you maybe didn't get a chance

1086
00:41:36,780 --> 00:41:38,700
to submit this time we're now ready for

1087
00:41:38,700 --> 00:41:41,880
for content for work 39 in Belgrade

1088
00:41:41,880 --> 00:41:43,500
um the other thing is I would just like

1089
00:41:43,500 --> 00:41:45,300
to thank our sponsors

1090
00:41:45,300 --> 00:41:47,160
um in particular virusign who are

1091
00:41:47,160 --> 00:41:49,740
Workshop Patron for 2022 very science

1092
00:41:49,740 --> 00:41:52,260
boards in all kinds of ways but um their

1093
00:41:52,260 --> 00:41:54,020
workshop patronage is really appreciated

1094
00:41:54,020 --> 00:41:56,460
and also special thank you to Comcast

1095
00:41:56,460 --> 00:41:59,220
again Comcast support org in all kinds

1096
00:41:59,220 --> 00:42:01,920
of ways but they have directly sponsored

1097
00:42:01,920 --> 00:42:03,599
this Workshop they have extended the

1098
00:42:03,599 --> 00:42:06,780
ietf connectivity for two days to

1099
00:42:06,780 --> 00:42:08,700
support us they've been really helpful

1100
00:42:08,700 --> 00:42:12,000
in just um information about local um

1101
00:42:12,000 --> 00:42:14,700
facilities and helping us find the venue

1102
00:42:14,700 --> 00:42:17,099
for the social this evening so

1103
00:42:17,099 --> 00:42:18,780
um that's the first session

1104
00:42:18,780 --> 00:42:20,940
um we managed to not completely drawn on

1105
00:42:20,940 --> 00:42:22,560
about all the Oreck stuff I hope you

1106
00:42:22,560 --> 00:42:24,720
found it useful and interesting and the

1107
00:42:24,720 --> 00:42:26,099
whole team are here for the rest of the

1108
00:42:26,099 --> 00:42:27,900
workshop if you want to ask us about any

1109
00:42:27,900 --> 00:42:30,480
of that and we will resume

1110
00:42:30,480 --> 00:42:32,940
um on time in just under 25 minutes at

1111
00:42:32,940 --> 00:42:34,980
11 A.M Eastern from the uh the coffee

1112
00:42:34,980 --> 00:42:37,339
break

1113
00:42:45,079 --> 00:42:47,400
all right

1114
00:42:47,400 --> 00:42:49,200
hi welcome to the second session of

1115
00:42:49,200 --> 00:42:52,560
orac38 thank you all for coming

1116
00:42:52,560 --> 00:42:54,060
um this session we're going to have

1117
00:42:54,060 --> 00:42:56,520
three talks about experience with DNS

1118
00:42:56,520 --> 00:42:58,079
operations both internally and

1119
00:42:58,079 --> 00:43:00,180
externally hosted

1120
00:43:00,180 --> 00:43:02,640
and the first two presentations are

1121
00:43:02,640 --> 00:43:04,740
going to focus on experience with DNS

1122
00:43:04,740 --> 00:43:07,319
over quick and the last presentation in

1123
00:43:07,319 --> 00:43:09,060
this session we'll talk about experience

1124
00:43:09,060 --> 00:43:12,839
with very large zones on AWS

1125
00:43:12,839 --> 00:43:14,460
and this session is going to end around

1126
00:43:14,460 --> 00:43:16,940
noon

1127
00:43:16,980 --> 00:43:19,079
now please welcome our first Speaker

1128
00:43:19,079 --> 00:43:22,500
Andrew meshkov and let's talk about DNS

1129
00:43:22,500 --> 00:43:24,839
over quick

1130
00:43:24,839 --> 00:43:27,500
okay let's do it then uh hello everyone

1131
00:43:27,500 --> 00:43:31,140
uh my name is Andrei uh and I'm a

1132
00:43:31,140 --> 00:43:33,780
co-founder and the CTO at Edgars and

1133
00:43:33,780 --> 00:43:36,119
more than a year ago we launched uh the

1134
00:43:36,119 --> 00:43:38,940
first ever public DNS of a quick

1135
00:43:38,940 --> 00:43:42,000
resolver and today I'd like to tell you

1136
00:43:42,000 --> 00:43:45,260
about our experience with it so far

1137
00:43:45,260 --> 00:43:48,900
but first let me start with a very very

1138
00:43:48,900 --> 00:43:51,660
short introduction of what we do and we

1139
00:43:51,660 --> 00:43:55,980
are DNS of a quick uh was deployed so

1140
00:43:55,980 --> 00:43:58,020
Edgars is a popular content blocking

1141
00:43:58,020 --> 00:44:01,380
available for all platforms but uh also

1142
00:44:01,380 --> 00:44:05,700
we do some DNS based products uh first

1143
00:44:05,700 --> 00:44:08,160
of all this is Edgar DNS a public DNS

1144
00:44:08,160 --> 00:44:10,500
resolver at good home in Edgar's apps

1145
00:44:10,500 --> 00:44:13,319
and all of them are able to use all

1146
00:44:13,319 --> 00:44:16,619
kinds of DNS protocols and DNS over

1147
00:44:16,619 --> 00:44:21,119
quick uh they also can now use uh and as

1148
00:44:21,119 --> 00:44:24,480
I said earlier uh uh

1149
00:44:24,480 --> 00:44:28,020
as I said earlier uh Edgar dianasi is a

1150
00:44:28,020 --> 00:44:29,760
public resolver with the focus on

1151
00:44:29,760 --> 00:44:33,300
content blocking uh and most of the

1152
00:44:33,300 --> 00:44:35,579
clients are mobile devices which is

1153
00:44:35,579 --> 00:44:38,819
important to bear in mind because the uh

1154
00:44:38,819 --> 00:44:41,700
the patterns uh the usage patterns are a

1155
00:44:41,700 --> 00:44:43,760
little bit different for mobile devices

1156
00:44:43,760 --> 00:44:47,880
from desktop devices so uh where is

1157
00:44:47,880 --> 00:44:52,260
Edgar DNS now currently uh we processed

1158
00:44:52,260 --> 00:44:55,560
about well on average 1 million requests

1159
00:44:55,560 --> 00:44:59,460
per second and most of that comes from

1160
00:44:59,460 --> 00:45:03,720
Android devices and DNS over TLs but

1161
00:45:03,720 --> 00:45:06,900
also I have a considerable share of DNS

1162
00:45:06,900 --> 00:45:11,280
over https and now well we have a small

1163
00:45:11,280 --> 00:45:14,099
share of DNS so quick but we hope it

1164
00:45:14,099 --> 00:45:15,839
will grow with time

1165
00:45:15,839 --> 00:45:20,160
uh now let's talk about quick uh what is

1166
00:45:20,160 --> 00:45:24,440
quick uh basically it is Reinventing TCP

1167
00:45:24,440 --> 00:45:27,540
uh but now it works over

1168
00:45:27,540 --> 00:45:30,839
UDP and has some cool stuff built in uh

1169
00:45:30,839 --> 00:45:32,760
first of all the encryption is built in

1170
00:45:32,760 --> 00:45:35,220
you can have a plane uh you cannot have

1171
00:45:35,220 --> 00:45:37,920
a plain quick connection there will

1172
00:45:37,920 --> 00:45:40,800
always be a crypto handshake uh but this

1173
00:45:40,800 --> 00:45:43,560
handshake will be faster than in the

1174
00:45:43,560 --> 00:45:47,579
case of TCP plus TLS also quick uses

1175
00:45:47,579 --> 00:45:50,700
stream based multiplexing which also

1176
00:45:50,700 --> 00:45:52,800
helps solve the head of line block

1177
00:45:52,800 --> 00:45:55,980
initial DCP based protocol suffer from

1178
00:45:55,980 --> 00:45:59,099
and finally quick spec allows the

1179
00:45:59,099 --> 00:46:00,960
so-called connection migration which

1180
00:46:00,960 --> 00:46:04,800
means that the client's id address can

1181
00:46:04,800 --> 00:46:08,099
change uh with no need to reconnect

1182
00:46:08,099 --> 00:46:11,040
uh now let's take a closer look at each

1183
00:46:11,040 --> 00:46:15,540
quick Advantage first of all about the

1184
00:46:15,540 --> 00:46:18,140
faster handshake and how it's achieved

1185
00:46:18,140 --> 00:46:20,760
encryption and authentication are

1186
00:46:20,760 --> 00:46:22,260
typically handled by a high level

1187
00:46:22,260 --> 00:46:23,900
protocol

1188
00:46:23,900 --> 00:46:27,119
but not with quick as you can see on

1189
00:46:27,119 --> 00:46:29,460
this slide a quick handshake combines

1190
00:46:29,460 --> 00:46:34,079
the dcp-like handshake with the TLs

1191
00:46:34,079 --> 00:46:36,440
handshake and well the important

1192
00:46:36,440 --> 00:46:39,900
advantage of this is that it makes the

1193
00:46:39,900 --> 00:46:42,020
handshake process faster as a result

1194
00:46:42,020 --> 00:46:44,760
since it now requires just three packets

1195
00:46:44,760 --> 00:46:47,660
instead of six instead of six

1196
00:46:47,660 --> 00:46:50,700
uh well it generally makes the

1197
00:46:50,700 --> 00:46:54,060
connection uh faster uh now the second

1198
00:46:54,060 --> 00:46:56,460
point is the head of line blocking

1199
00:46:56,460 --> 00:46:57,480
problem

1200
00:46:57,480 --> 00:47:01,560
and uh well this issue affects every TCP

1201
00:47:01,560 --> 00:47:04,859
based protocol and it basically means

1202
00:47:04,859 --> 00:47:07,619
that uh

1203
00:47:07,619 --> 00:47:11,940
if uh there is any packet loss the

1204
00:47:11,940 --> 00:47:13,200
[Music]

1205
00:47:13,200 --> 00:47:16,140
processing actually stop sentence at

1206
00:47:16,140 --> 00:47:18,780
that point quick doesn't suffer from had

1207
00:47:18,780 --> 00:47:22,079
a head of line blocking because well one

1208
00:47:22,079 --> 00:47:24,900
of the streams maybe may suffer from

1209
00:47:24,900 --> 00:47:26,760
packet loss but the other streams will

1210
00:47:26,760 --> 00:47:28,280
continue to work

1211
00:47:28,280 --> 00:47:31,740
uh finally the connection migration uh

1212
00:47:31,740 --> 00:47:34,200
this feature uh as I've already told you

1213
00:47:34,200 --> 00:47:38,220
it allows to decline to change the IP

1214
00:47:38,220 --> 00:47:40,200
address for instance a mobile client

1215
00:47:40,200 --> 00:47:41,760
should be able to migrate quick

1216
00:47:41,760 --> 00:47:44,640
connections between seller and Wi-Fi

1217
00:47:44,640 --> 00:47:47,700
and this is achieved by introducing the

1218
00:47:47,700 --> 00:47:50,460
concept of a connection ID carried by

1219
00:47:50,460 --> 00:47:51,839
quick packets

1220
00:47:51,839 --> 00:47:54,300
endpoints can use this ID to track

1221
00:47:54,300 --> 00:47:57,000
connections uh that they're responsible

1222
00:47:57,000 --> 00:48:00,480
for without the need to check for the

1223
00:48:00,480 --> 00:48:03,240
source IP and port and destination APN

1224
00:48:03,240 --> 00:48:06,599
port and so on unfortunately at this

1225
00:48:06,599 --> 00:48:09,119
point I am not aware of any quick

1226
00:48:09,119 --> 00:48:11,280
implementation that fully supports

1227
00:48:11,280 --> 00:48:13,079
connection migration

1228
00:48:13,079 --> 00:48:15,839
uh but I really really hope that in the

1229
00:48:15,839 --> 00:48:18,780
future uh we will see some

1230
00:48:18,780 --> 00:48:21,900
uh now let's compare DNS of a quick to

1231
00:48:21,900 --> 00:48:24,420
plain DNS just to see why we need it

1232
00:48:24,420 --> 00:48:28,200
uh first and foremost it's encrypted uh

1233
00:48:28,200 --> 00:48:31,160
but that's not the only Advantage second

1234
00:48:31,160 --> 00:48:34,920
with quick DNS messages size is not

1235
00:48:34,920 --> 00:48:38,700
limited by MTU so no more need to

1236
00:48:38,700 --> 00:48:41,640
truncate and fall back fall back to DCP

1237
00:48:41,640 --> 00:48:42,500
anymore

1238
00:48:42,500 --> 00:48:45,000
and finally there's a built-in

1239
00:48:45,000 --> 00:48:47,900
protection against amplification attacks

1240
00:48:47,900 --> 00:48:50,700
uh well I mean the years there's a

1241
00:48:50,700 --> 00:48:53,839
mechanism to verify the source address

1242
00:48:53,839 --> 00:48:58,200
uh so we're kind of protected now it's

1243
00:48:58,200 --> 00:49:01,200
natural to compare DNS of a quick to do

1244
00:49:01,200 --> 00:49:02,099
three

1245
00:49:02,099 --> 00:49:06,119
uh uh because well uh the current two

1246
00:49:06,119 --> 00:49:09,300
two clients will eventually be upgraded

1247
00:49:09,300 --> 00:49:11,839
to http 3.

1248
00:49:11,839 --> 00:49:15,500
and uh

1249
00:49:15,960 --> 00:49:18,720
on the other uh on one hand uh it makes

1250
00:49:18,720 --> 00:49:22,260
some sense to use though three but

1251
00:49:22,260 --> 00:49:25,319
however I don't see HTTP providing any

1252
00:49:25,319 --> 00:49:27,300
advantage to DNS

1253
00:49:27,300 --> 00:49:30,180
and it just seems like a dead weight so

1254
00:49:30,180 --> 00:49:33,079
if we compare DNS of a quick to do three

1255
00:49:33,079 --> 00:49:36,000
uh both of them use quick as an

1256
00:49:36,000 --> 00:49:39,480
underlying transport protocol uh HTTP 3

1257
00:49:39,480 --> 00:49:43,079
adds HTTP on top of it which means it

1258
00:49:43,079 --> 00:49:46,020
sends and received receives HTTP headers

1259
00:49:46,020 --> 00:49:48,839
alongside every DNS query

1260
00:49:48,839 --> 00:49:52,859
uh well but protocol wise uh it has no

1261
00:49:52,859 --> 00:49:56,099
value once one could say you can benefit

1262
00:49:56,099 --> 00:49:59,640
from HTTP cation mechanism but why would

1263
00:49:59,640 --> 00:50:02,160
you need to complicate things and use it

1264
00:50:02,160 --> 00:50:05,520
instead of the standard DNS cache and

1265
00:50:05,520 --> 00:50:07,980
besides the overhead of carrying HTTP

1266
00:50:07,980 --> 00:50:10,800
headers it also adds more data points

1267
00:50:10,800 --> 00:50:14,099
that could be used for for example for

1268
00:50:14,099 --> 00:50:17,940
fingerprinting clients and uh on top of

1269
00:50:17,940 --> 00:50:21,079
that all DNS over quick is a more

1270
00:50:21,079 --> 00:50:23,520
complete protocol because it could be

1271
00:50:23,520 --> 00:50:26,300
used not just by

1272
00:50:26,300 --> 00:50:30,440
recursive resolvers but also by

1273
00:50:30,440 --> 00:50:32,880
authoritative servers

1274
00:50:32,880 --> 00:50:37,260
uh just like uh the good old uh plain

1275
00:50:37,260 --> 00:50:40,319
DNS now let's talk about our experience

1276
00:50:40,319 --> 00:50:43,140
uh with running DNS over quick on both

1277
00:50:43,140 --> 00:50:46,380
server side and client-side and some

1278
00:50:46,380 --> 00:50:50,040
simple insights uh Tiana's over quick

1279
00:50:50,040 --> 00:50:54,059
connections uh seem to be more stable

1280
00:50:54,059 --> 00:50:56,880
and long living compared to compared to

1281
00:50:56,880 --> 00:50:59,900
though and to DNS over TLS

1282
00:50:59,900 --> 00:51:04,740
DNS of a quick overall is heavier on CPU

1283
00:51:04,740 --> 00:51:07,500
on the server side than both DNS over

1284
00:51:07,500 --> 00:51:08,819
TLS

1285
00:51:08,819 --> 00:51:11,520
and it is pretty much the same as DNS

1286
00:51:11,520 --> 00:51:13,619
over https

1287
00:51:13,619 --> 00:51:18,420
and well uh uh clients seem to be

1288
00:51:18,420 --> 00:51:21,780
a little bit more Snappy with DNS so

1289
00:51:21,780 --> 00:51:24,660
we're quick uh probably because of a

1290
00:51:24,660 --> 00:51:26,960
faster handshake process

1291
00:51:26,960 --> 00:51:29,819
uh now let's talk about each of these

1292
00:51:29,819 --> 00:51:32,280
points the first one about quick

1293
00:51:32,280 --> 00:51:34,500
connections being more stable and lone

1294
00:51:34,500 --> 00:51:37,980
living here's how we measured that we

1295
00:51:37,980 --> 00:51:40,500
have a Prometheus metric with the number

1296
00:51:40,500 --> 00:51:44,400
of TLS handshakes per protocol uh plus

1297
00:51:44,400 --> 00:51:46,140
we have a problem metric with the number

1298
00:51:46,140 --> 00:51:49,559
of processed queries uh divide dividing

1299
00:51:49,559 --> 00:51:52,200
one on another we can see that a

1300
00:51:52,200 --> 00:51:54,059
different number of queries approaches

1301
00:51:54,059 --> 00:51:56,220
through connections depending on the

1302
00:51:56,220 --> 00:51:59,760
protocol uh and first we see that about

1303
00:51:59,760 --> 00:52:01,980
nine queries is processed through an

1304
00:52:01,980 --> 00:52:05,400
average DNS over TLS connection however

1305
00:52:05,400 --> 00:52:07,500
it's important to note that most of the

1306
00:52:07,500 --> 00:52:10,260
DNS or tis clients are Androids with

1307
00:52:10,260 --> 00:52:12,119
Google's native DNS over tis

1308
00:52:12,119 --> 00:52:15,599
implementations uh implementation and

1309
00:52:15,599 --> 00:52:17,339
this implementation has a very strict

1310
00:52:17,339 --> 00:52:19,079
titled amount the connection will be

1311
00:52:19,079 --> 00:52:21,480
closed if there were no queries

1312
00:52:21,480 --> 00:52:25,079
processed through it in seven seconds

1313
00:52:25,079 --> 00:52:28,260
so well it kind of explains why why

1314
00:52:28,260 --> 00:52:30,720
these connections like close all the

1315
00:52:30,720 --> 00:52:34,020
time with DNS over https most of the

1316
00:52:34,020 --> 00:52:36,300
clients are either Android apps or

1317
00:52:36,300 --> 00:52:37,520
browsers

1318
00:52:37,520 --> 00:52:40,140
so we can be sure that the idle timeout

1319
00:52:40,140 --> 00:52:42,780
is not that strict and we see that on

1320
00:52:42,780 --> 00:52:45,300
average about 14 queries are processed

1321
00:52:45,300 --> 00:52:47,640
through a single connection and finally

1322
00:52:47,640 --> 00:52:49,980
with DNS of a quick we see that there

1323
00:52:49,980 --> 00:52:52,559
are over 30 queries per average quick

1324
00:52:52,559 --> 00:52:54,780
connections so I suppose it seems that

1325
00:52:54,780 --> 00:52:56,940
for some reason quick connections are

1326
00:52:56,940 --> 00:53:00,140
more stable and long living

1327
00:53:00,140 --> 00:53:04,140
uh finally we tried to measure uh how

1328
00:53:04,140 --> 00:53:06,900
heavy is quick on CPU

1329
00:53:06,900 --> 00:53:09,059
and well

1330
00:53:09,059 --> 00:53:11,099
since the single server responds to all

1331
00:53:11,099 --> 00:53:13,500
kinds of protocols comparing quick to

1332
00:53:13,500 --> 00:53:17,040
others to others requires some tricks uh

1333
00:53:17,040 --> 00:53:19,140
here's what we did processing a single

1334
00:53:19,140 --> 00:53:22,260
query uh involves uh using different

1335
00:53:22,260 --> 00:53:24,540
code and network DNS some of the code is

1336
00:53:24,540 --> 00:53:27,720
related to the protocol some of the code

1337
00:53:27,720 --> 00:53:31,160
is related to a guard internal logic

1338
00:53:31,160 --> 00:53:34,859
uh to Edgar specific part uh is the same

1339
00:53:34,859 --> 00:53:37,200
for all protocols so we can use it as a

1340
00:53:37,200 --> 00:53:39,180
base value and see how much overhead

1341
00:53:39,180 --> 00:53:42,599
each crypto protocol creates so we did

1342
00:53:42,599 --> 00:53:45,240
some profiling on on production servers

1343
00:53:45,240 --> 00:53:47,819
and got some results so let's take a

1344
00:53:47,819 --> 00:53:48,720
look

1345
00:53:48,720 --> 00:53:51,839
and first let's take a look at DNS of a

1346
00:53:51,839 --> 00:53:55,200
TLS flame graph here's how to read it

1347
00:53:55,200 --> 00:54:00,380
uh you should read it from top to bottom

1348
00:54:00,380 --> 00:54:02,819
so uh

1349
00:54:02,819 --> 00:54:07,140
the surf TCP con uh function the First

1350
00:54:07,140 --> 00:54:10,220
Column uh

1351
00:54:10,220 --> 00:54:14,540
calls read TCP message then calls

1352
00:54:14,540 --> 00:54:18,720
binary and so on and so on uh

1353
00:54:18,720 --> 00:54:22,380
the purple columns is the functions that

1354
00:54:22,380 --> 00:54:25,500
are related to strictly to DNS of a tis

1355
00:54:25,500 --> 00:54:27,119
TLS

1356
00:54:27,119 --> 00:54:29,579
and everything else is Edgar specific

1357
00:54:29,579 --> 00:54:32,339
code and look at how wide the purple

1358
00:54:32,339 --> 00:54:35,040
columns are and compare their wheels to

1359
00:54:35,040 --> 00:54:37,140
Edgar specific quotes so according to

1360
00:54:37,140 --> 00:54:39,920
this graph about 40 percent of the time

1361
00:54:39,920 --> 00:54:44,819
was spent in TLS related function and

1362
00:54:44,819 --> 00:54:47,540
let's take a look at DNS over https

1363
00:54:47,540 --> 00:54:51,839
flame graph the logic is the same and

1364
00:54:51,839 --> 00:54:54,420
the white Central column is at guard DNS

1365
00:54:54,420 --> 00:54:56,400
specific course which we're using as a

1366
00:54:56,400 --> 00:54:58,920
base to compare with other protocols and

1367
00:54:58,920 --> 00:55:01,319
according to the graph about 60 percent

1368
00:55:01,319 --> 00:55:04,800
of the time was spent in HTTP related

1369
00:55:04,800 --> 00:55:06,240
functions

1370
00:55:06,240 --> 00:55:10,800
uh and now the same the same logic uh

1371
00:55:10,800 --> 00:55:14,700
for DNS over quick and again about 60

1372
00:55:14,700 --> 00:55:18,000
percent of the time was spent in quick

1373
00:55:18,000 --> 00:55:19,680
related functions

1374
00:55:19,680 --> 00:55:22,559
uh so overall here's uh the results

1375
00:55:22,559 --> 00:55:26,400
combined uh you can see that both uh DNS

1376
00:55:26,400 --> 00:55:29,400
over https and DNS over quick are

1377
00:55:29,400 --> 00:55:32,520
heavier on CPU overall which is natural

1378
00:55:32,520 --> 00:55:35,059
because on top of TLS they involve

1379
00:55:35,059 --> 00:55:38,400
additional rather complicated logic

1380
00:55:38,400 --> 00:55:41,220
uh but please note that it doesn't mean

1381
00:55:41,220 --> 00:55:43,440
that uh that with them a single query

1382
00:55:43,440 --> 00:55:46,440
would be slower most of the additional

1383
00:55:46,440 --> 00:55:48,900
additional operations are as seen

1384
00:55:48,900 --> 00:55:51,059
asynchronous and processing a single

1385
00:55:51,059 --> 00:55:53,640
query a query is still fast

1386
00:55:53,640 --> 00:55:56,339
uh and moreover from the client's

1387
00:55:56,339 --> 00:55:57,599
perspective

1388
00:55:57,599 --> 00:55:59,880
the protocol benefits may be more

1389
00:55:59,880 --> 00:56:02,040
important than the increased server load

1390
00:56:02,040 --> 00:56:05,280
but yeah uh both of them are a little

1391
00:56:05,280 --> 00:56:09,660
bit heavier than the DNS over TLS

1392
00:56:09,660 --> 00:56:12,960
uh it's important also to mention TLS

1393
00:56:12,960 --> 00:56:16,920
session resumption uh when a TLS session

1394
00:56:16,920 --> 00:56:20,460
is resumed uh the server certificate is

1395
00:56:20,460 --> 00:56:22,380
not sent to the client so the connection

1396
00:56:22,380 --> 00:56:25,859
is established faster and fewer bytes

1397
00:56:25,859 --> 00:56:28,440
are sent to the client and what we see

1398
00:56:28,440 --> 00:56:31,859
on our side is that DNS or TLS and DNS

1399
00:56:31,859 --> 00:56:34,980
over https clients are able to resume

1400
00:56:34,980 --> 00:56:38,520
TLS sessions in more than a half TLS

1401
00:56:38,520 --> 00:56:39,599
connections

1402
00:56:39,599 --> 00:56:43,559
uh notably DNS Soviet TLS clients show

1403
00:56:43,559 --> 00:56:46,140
better results here and it's hard to

1404
00:56:46,140 --> 00:56:46,880
explain

1405
00:56:46,880 --> 00:56:50,760
uh it's hard to explain why but well

1406
00:56:50,760 --> 00:56:54,059
with DNS over quick the share of resumed

1407
00:56:54,059 --> 00:56:57,480
con sessions is really really low

1408
00:56:57,480 --> 00:57:01,140
and probably this is an implementation

1409
00:57:01,140 --> 00:57:03,200
specific issue

1410
00:57:03,200 --> 00:57:06,000
uh well related to the library that

1411
00:57:06,000 --> 00:57:08,520
we're using for quick because well by by

1412
00:57:08,520 --> 00:57:10,640
the standard it shouldn't be like that

1413
00:57:10,640 --> 00:57:13,260
but yeah we have such an issue and we

1414
00:57:13,260 --> 00:57:14,940
are yet to figure out what's the problem

1415
00:57:14,940 --> 00:57:17,400
with this behavior and what exactly is

1416
00:57:17,400 --> 00:57:18,480
causing it

1417
00:57:18,480 --> 00:57:22,500
now to some mildly interesting insights

1418
00:57:22,500 --> 00:57:25,319
that we're seeing on Edgar DNS

1419
00:57:25,319 --> 00:57:28,800
and first let's talk about requests

1420
00:57:28,800 --> 00:57:31,980
sizes and response status uh request

1421
00:57:31,980 --> 00:57:34,260
sizes are pretty much the same for all

1422
00:57:34,260 --> 00:57:36,540
protocols so so well they're small

1423
00:57:36,540 --> 00:57:40,079
they're under 100 bytes and response

1424
00:57:40,079 --> 00:57:42,839
response sizes on the other hand differ

1425
00:57:42,839 --> 00:57:43,980
a bit

1426
00:57:43,980 --> 00:57:46,619
uh let's see how

1427
00:57:46,619 --> 00:57:50,460
first the little heat map for playing

1428
00:57:50,460 --> 00:57:54,480
DNS over UDP uh here's how to read this

1429
00:57:54,480 --> 00:57:58,260
heat map a very very small share of

1430
00:57:58,260 --> 00:58:02,460
responses are smaller than 100 bytes

1431
00:58:02,460 --> 00:58:04,980
most of the responses are in the range

1432
00:58:04,980 --> 00:58:09,359
of like from 100 to 200 bytes

1433
00:58:09,359 --> 00:58:12,900
then to DNS of a TCP well the situation

1434
00:58:12,900 --> 00:58:15,079
is obviously a bit different because

1435
00:58:15,079 --> 00:58:18,839
most of the truncated responses require

1436
00:58:18,839 --> 00:58:23,220
responses then re-requested over DCP so

1437
00:58:23,220 --> 00:58:26,339
it's natural to see uh to see that the

1438
00:58:26,339 --> 00:58:29,660
responses are heavier here

1439
00:58:29,660 --> 00:58:33,900
uh finally DNS over TLS uh again the

1440
00:58:33,900 --> 00:58:36,240
station is a bit different from the

1441
00:58:36,240 --> 00:58:39,059
plain DNS because about a half of the

1442
00:58:39,059 --> 00:58:42,599
responses are in the range of uh 100 to

1443
00:58:42,599 --> 00:58:45,359
200 bytes and the second half is mostly

1444
00:58:45,359 --> 00:58:49,220
in the range of 200 to 400 bytes

1445
00:58:49,220 --> 00:58:54,839
uh with DNS over https it is again a

1446
00:58:54,839 --> 00:58:58,319
little bit different uh and there is a

1447
00:58:58,319 --> 00:59:01,500
visible part of DNS responses that are

1448
00:59:01,500 --> 00:59:05,579
larger than 400 bytes it is hard to

1449
00:59:05,579 --> 00:59:09,900
explain again because in theory it

1450
00:59:09,900 --> 00:59:12,420
should be have uh protocol wise it is

1451
00:59:12,420 --> 00:59:16,380
not it is not different from dnso TLS we

1452
00:59:16,380 --> 00:59:19,200
should see the same the same stats the

1453
00:59:19,200 --> 00:59:22,319
only explanation here is that DNS over

1454
00:59:22,319 --> 00:59:25,619
TLS comes mostly from Android devices

1455
00:59:25,619 --> 00:59:30,059
and do comes from IOS and desktop

1456
00:59:30,059 --> 00:59:34,079
browsers so well probably the there's a

1457
00:59:34,079 --> 00:59:37,079
different uh usage pattern here

1458
00:59:37,079 --> 00:59:39,480
and Diana's over quick is the same as

1459
00:59:39,480 --> 00:59:42,119
though and again uh we can only explain

1460
00:59:42,119 --> 00:59:43,140
it

1461
00:59:43,140 --> 00:59:44,579
uh

1462
00:59:44,579 --> 00:59:48,000
because the this metric is like device

1463
00:59:48,000 --> 00:59:49,260
specific

1464
00:59:49,260 --> 00:59:52,559
uh finally not finally uh one more

1465
00:59:52,559 --> 00:59:56,099
mildly interesting uh Insight is ipv4

1466
00:59:56,099 --> 01:00:01,020
versus a pv6 it is interesting that we

1467
01:00:01,020 --> 01:00:04,380
see a much higher usage of IPv6 in the

1468
01:00:04,380 --> 01:00:08,099
case of DNS of a TLS Androids then in

1469
01:00:08,099 --> 01:00:12,480
the cases of both DNS over https and TNS

1470
01:00:12,480 --> 01:00:15,420
of a quick you can see on that slide

1471
01:00:15,420 --> 01:00:18,960
that the share of ipv IPv6 is about 30

1472
01:00:18,960 --> 01:00:23,520
for DNS over TLS and for DNS over https

1473
01:00:23,520 --> 01:00:27,299
this share is much much smaller and same

1474
01:00:27,299 --> 01:00:29,880
for the DNS of a quick

1475
01:00:29,880 --> 01:00:33,480
uh one more inside is the share of

1476
01:00:33,480 --> 01:00:36,000
garbage DNS Square queries the queries

1477
01:00:36,000 --> 01:00:39,839
that we are unable to parse uh DNS over

1478
01:00:39,839 --> 01:00:41,940
UDP receives a number of garbage packets

1479
01:00:41,940 --> 01:00:44,220
that we can parse and this is well

1480
01:00:44,220 --> 01:00:47,339
rather normal what's surprising here is

1481
01:00:47,339 --> 01:00:49,980
that the share of garbage dough requests

1482
01:00:49,980 --> 01:00:52,920
uh uh

1483
01:00:52,920 --> 01:00:56,339
garbage tow requests is also very high

1484
01:00:56,339 --> 01:00:59,280
probably due to bots that are sending

1485
01:00:59,280 --> 01:01:03,020
HTTP queries to dough resolvers

1486
01:01:03,020 --> 01:01:06,180
uh and you know server quick and DNS

1487
01:01:06,180 --> 01:01:09,119
server device are okay almost no garbage

1488
01:01:09,119 --> 01:01:12,480
and finally the last mildly interesting

1489
01:01:12,480 --> 01:01:16,380
Insight is the DLS versions distribution

1490
01:01:16,380 --> 01:01:20,640
in case of DNS or tis Android says a bit

1491
01:01:20,640 --> 01:01:22,920
more than a half of the TLs handshakes

1492
01:01:22,920 --> 01:01:27,660
occur uh with TLS version 1.3

1493
01:01:27,660 --> 01:01:30,720
uh this share is much much higher with

1494
01:01:30,720 --> 01:01:35,160
dough uh and for DNS of a quick this

1495
01:01:35,160 --> 01:01:38,040
share is obviously 100 since quick

1496
01:01:38,040 --> 01:01:41,339
doesn't support older TLS versions

1497
01:01:41,339 --> 01:01:43,680
uh well

1498
01:01:43,680 --> 01:01:46,260
I have finished with uh

1499
01:01:46,260 --> 01:01:48,839
uh with my mildly interesting insights

1500
01:01:48,839 --> 01:01:53,520
and let me introduce some uh DNS of a

1501
01:01:53,520 --> 01:01:56,280
quick implementations just in case if

1502
01:01:56,280 --> 01:01:59,339
you decide to use it so regarding server

1503
01:01:59,339 --> 01:02:01,920
side implementations one of them is a

1504
01:02:01,920 --> 01:02:04,740
core DNS Fork that we were using for

1505
01:02:04,740 --> 01:02:08,660
Edgar DNS but we do not use it anymore

1506
01:02:08,660 --> 01:02:12,540
we are yet to published the new code but

1507
01:02:12,540 --> 01:02:16,380
we will and the part that is responsible

1508
01:02:16,380 --> 01:02:19,799
for actually running the DNS server uh

1509
01:02:19,799 --> 01:02:22,079
should be published with a permissive

1510
01:02:22,079 --> 01:02:25,319
license so uh any of you would be able

1511
01:02:25,319 --> 01:02:28,740
to use it when we finally do that also

1512
01:02:28,740 --> 01:02:31,260
there's a DNS proxy

1513
01:02:31,260 --> 01:02:33,599
uh this is another tool that we'll

1514
01:02:33,599 --> 01:02:35,760
maintain and this is a very simple

1515
01:02:35,760 --> 01:02:38,099
command line tool that allows to run a

1516
01:02:38,099 --> 01:02:40,020
forwarding DNS server

1517
01:02:40,020 --> 01:02:43,319
just like DNS mask but it also supports

1518
01:02:43,319 --> 01:02:45,740
all kinds of encryption

1519
01:02:45,740 --> 01:02:49,260
uh and you can also use it as a library

1520
01:02:49,260 --> 01:02:52,760
by the way if you uh if you write in go

1521
01:02:52,760 --> 01:02:56,880
uh then it is rather simple uh also

1522
01:02:56,880 --> 01:03:02,220
Edgar home can also be a DNS uh proxy

1523
01:03:02,220 --> 01:03:06,059
which proxies uh queries to an encrypted

1524
01:03:06,059 --> 01:03:09,059
resolver or which runs as an encrypted

1525
01:03:09,059 --> 01:03:12,240
resolver and proxies for the queries

1526
01:03:12,240 --> 01:03:15,119
further and finally

1527
01:03:15,119 --> 01:03:17,520
ready to use DNS client side

1528
01:03:17,520 --> 01:03:18,980
implementations

1529
01:03:18,980 --> 01:03:21,960
uh all of which are

1530
01:03:21,960 --> 01:03:24,839
not all of which but DNS proxy DNS lives

1531
01:03:24,839 --> 01:03:28,020
and DNS lookup are published under a

1532
01:03:28,020 --> 01:03:31,200
permissive license so you can use it if

1533
01:03:31,200 --> 01:03:34,859
you want it uh and finally

1534
01:03:34,859 --> 01:03:37,220
thank you

1535
01:03:37,220 --> 01:03:41,940
uh and uh I'm notified that I should

1536
01:03:41,940 --> 01:03:43,760
finish

1537
01:03:43,760 --> 01:03:46,559
uh thank you so much thanks for your

1538
01:03:46,559 --> 01:03:48,720
attention and I'd be glad to answer your

1539
01:03:48,720 --> 01:03:50,959
questions

1540
01:03:51,380 --> 01:03:54,599
do you have plans for bringing DNS over

1541
01:03:54,599 --> 01:03:58,220
quick to authoritative name service

1542
01:03:58,500 --> 01:04:01,859
not really really we don't have uh

1543
01:04:01,859 --> 01:04:05,099
mostly because we're we specialize in

1544
01:04:05,099 --> 01:04:09,119
running uh recursive servers and we have

1545
01:04:09,119 --> 01:04:11,460
no experience running authoritative

1546
01:04:11,460 --> 01:04:15,680
Service uh servers so far

1547
01:04:17,480 --> 01:04:20,160
since it looks like the oq sessions last

1548
01:04:20,160 --> 01:04:22,619
longer did you look at doq memory

1549
01:04:22,619 --> 01:04:26,839
consumptions versus dot or Doh

1550
01:04:26,880 --> 01:04:29,760
uh uh actually actually

1551
01:04:29,760 --> 01:04:31,260
uh

1552
01:04:31,260 --> 01:04:35,040
actually this uh this is what we haven't

1553
01:04:35,040 --> 01:04:37,559
looked at uh because we were trying to

1554
01:04:37,559 --> 01:04:40,079
measure everything everything on on the

1555
01:04:40,079 --> 01:04:43,079
production server yeah it was

1556
01:04:43,079 --> 01:04:45,240
rather hard to

1557
01:04:45,240 --> 01:04:50,460
well uh to split DNS of a quick from uh

1558
01:04:50,460 --> 01:04:54,480
DNS over https and from other protocols

1559
01:04:54,480 --> 01:04:57,859
so now we haven't looked at it

1560
01:04:57,859 --> 01:05:01,680
and this probably can only be done with

1561
01:05:01,680 --> 01:05:06,540
the same synthetic tests uh

1562
01:05:06,540 --> 01:05:08,520
so well you could you can do it yourself

1563
01:05:08,520 --> 01:05:13,160
if you want using DNS proxy for instance

1564
01:05:15,500 --> 01:05:19,079
I will talk about our initial

1565
01:05:19,079 --> 01:05:21,180
implementation of this

1566
01:05:21,180 --> 01:05:23,700
anyway thank you Comcast for helping us

1567
01:05:23,700 --> 01:05:25,380
with this financially

1568
01:05:25,380 --> 01:05:28,619
and I will talk about the first lessons

1569
01:05:28,619 --> 01:05:31,140
learned about from this initial

1570
01:05:31,140 --> 01:05:32,460
implementation

1571
01:05:32,460 --> 01:05:36,059
and also for about the perspective for

1572
01:05:36,059 --> 01:05:38,220
the future

1573
01:05:38,220 --> 01:05:42,960
so let me start with a like special use

1574
01:05:42,960 --> 01:05:46,020
case for this DNS over quick and that is

1575
01:05:46,020 --> 01:05:47,940
Zone transfers

1576
01:05:47,940 --> 01:05:49,559
Zone transfers says special

1577
01:05:49,559 --> 01:05:51,359
communication that happens between

1578
01:05:51,359 --> 01:05:54,780
different alternative servers

1579
01:05:54,780 --> 01:05:57,059
so it's not about clients really

1580
01:05:57,059 --> 01:05:58,920
and they usually know each other in

1581
01:05:58,920 --> 01:06:00,920
advance

1582
01:06:00,920 --> 01:06:05,520
so they can relatively trust each other

1583
01:06:05,520 --> 01:06:07,680
and they can be also configured in

1584
01:06:07,680 --> 01:06:10,980
advance to have all the encryption keys

1585
01:06:10,980 --> 01:06:13,319
and certificates ready

1586
01:06:13,319 --> 01:06:16,680
so as far as I know there are no like

1587
01:06:16,680 --> 01:06:21,240
Harder real houses in implementing DNS

1588
01:06:21,240 --> 01:06:24,480
over quick for Zone transfers

1589
01:06:24,480 --> 01:06:26,760
and the benefits are of course

1590
01:06:26,760 --> 01:06:28,140
encryption

1591
01:06:28,140 --> 01:06:31,799
so the operative so the operators don't

1592
01:06:31,799 --> 01:06:34,799
no longer need to operate for example

1593
01:06:34,799 --> 01:06:36,839
ipsec tunnels to protect their Zone

1594
01:06:36,839 --> 01:06:39,259
transfers

1595
01:06:39,660 --> 01:06:43,200
and also the new features of the quick

1596
01:06:43,200 --> 01:06:44,900
protocol like

1597
01:06:44,900 --> 01:06:47,640
multiple sessions per connection and so

1598
01:06:47,640 --> 01:06:48,359
on

1599
01:06:48,359 --> 01:06:52,020
the alternative is DNS over TLS for Zone

1600
01:06:52,020 --> 01:06:55,859
transfers they are quite similar in the

1601
01:06:55,859 --> 01:06:59,160
use case but quick has more modern

1602
01:06:59,160 --> 01:07:02,880
features so I would prefer that one

1603
01:07:02,880 --> 01:07:05,579
so in this way I

1604
01:07:05,579 --> 01:07:07,920
I encourage all the vendors of

1605
01:07:07,920 --> 01:07:10,920
alternative DNS server implementations

1606
01:07:10,920 --> 01:07:14,280
to implement Zone transfers over quick

1607
01:07:14,280 --> 01:07:17,039
I encourage them including myself

1608
01:07:17,039 --> 01:07:20,579
I have to do it I hope Shia has helped

1609
01:07:20,579 --> 01:07:24,240
me too much to motivate for doing it as

1610
01:07:24,240 --> 01:07:26,819
soon as possible

1611
01:07:26,819 --> 01:07:29,940
so with this uh Zone transfers over

1612
01:07:29,940 --> 01:07:32,280
quick being

1613
01:07:32,280 --> 01:07:36,660
talked about let me switch on to

1614
01:07:36,660 --> 01:07:39,000
the the normal operation of DNS

1615
01:07:39,000 --> 01:07:41,039
overclock that this means to listening

1616
01:07:41,039 --> 01:07:43,500
for normal queries

1617
01:07:43,500 --> 01:07:45,539
from all over the Internet and this

1618
01:07:45,539 --> 01:07:47,220
means that the

1619
01:07:47,220 --> 01:07:49,859
alternative server is now open to the

1620
01:07:49,859 --> 01:07:52,440
hostile environment of the internet and

1621
01:07:52,440 --> 01:07:56,119
it's needs to be like rock solid and

1622
01:07:56,119 --> 01:07:58,500
prepared for any attacks that can happen

1623
01:07:58,500 --> 01:07:59,700
there

1624
01:07:59,700 --> 01:08:01,740
so let me first summarize how the

1625
01:08:01,740 --> 01:08:04,079
authoritative DNS server faces

1626
01:08:04,079 --> 01:08:06,660
attacks using

1627
01:08:06,660 --> 01:08:07,670
another

1628
01:08:07,670 --> 01:08:09,079
[Music]

1629
01:08:09,079 --> 01:08:10,799
protocols

1630
01:08:10,799 --> 01:08:13,619
so for DNS over UDP it's quite simple

1631
01:08:13,619 --> 01:08:15,359
because the protocol itself is really

1632
01:08:15,359 --> 01:08:17,100
simple

1633
01:08:17,100 --> 01:08:19,439
it's completely stateless so the only

1634
01:08:19,439 --> 01:08:22,259
thing the

1635
01:08:22,259 --> 01:08:24,120
attacker can do

1636
01:08:24,120 --> 01:08:27,120
is to attempt to flood the authoritative

1637
01:08:27,120 --> 01:08:30,238
server with so many UDP queries that

1638
01:08:30,238 --> 01:08:32,640
it's not able to respond them all and

1639
01:08:32,640 --> 01:08:35,219
the server can do almost anything

1640
01:08:35,219 --> 01:08:38,160
against it because it has no chance to

1641
01:08:38,160 --> 01:08:39,960
distinguish between the legitimate

1642
01:08:39,960 --> 01:08:42,960
traffic and the attack so the only thing

1643
01:08:42,960 --> 01:08:45,179
the server can do to mitigate this

1644
01:08:45,179 --> 01:08:48,540
attack is to be terrible performant

1645
01:08:48,540 --> 01:08:51,179
and be able to answer all the queries

1646
01:08:51,179 --> 01:08:52,979
that come in

1647
01:08:52,979 --> 01:08:55,679
so yeah this has been already like

1648
01:08:55,679 --> 01:08:59,160
solved in the last years by optimizing

1649
01:08:59,160 --> 01:09:02,160
the DNS routines themselves

1650
01:09:02,160 --> 01:09:04,859
so that the server does not take so much

1651
01:09:04,859 --> 01:09:08,939
CPU per query and also optimize the

1652
01:09:08,939 --> 01:09:11,939
packet processing because this was this

1653
01:09:11,939 --> 01:09:15,600
was one of the showstoppers there

1654
01:09:15,600 --> 01:09:18,238
but this was solved by uh implementing

1655
01:09:18,238 --> 01:09:21,420
the XDP technology which moves the

1656
01:09:21,420 --> 01:09:23,520
packet processing from kernel to user

1657
01:09:23,520 --> 01:09:27,000
space and it really saved CPU and with

1658
01:09:27,000 --> 01:09:29,160
this technology we were able to handle

1659
01:09:29,160 --> 01:09:31,979
like tens of millions of query spends

1660
01:09:31,979 --> 01:09:33,960
per second in the optimal

1661
01:09:33,960 --> 01:09:36,060
Laboratory

1662
01:09:36,060 --> 01:09:37,620
conditions

1663
01:09:37,620 --> 01:09:40,259
so we hope that this uh this is pretty

1664
01:09:40,259 --> 01:09:43,500
safe now and the DNS over UDP can be

1665
01:09:43,500 --> 01:09:46,279
operated safely

1666
01:09:48,299 --> 01:09:51,179
TCP is quite a complicated protocol it's

1667
01:09:51,179 --> 01:09:53,880
more complicated than you think

1668
01:09:53,880 --> 01:09:57,300
and it's not already really stateless so

1669
01:09:57,300 --> 01:09:59,100
there are there is wider range of

1670
01:09:59,100 --> 01:10:01,679
attacks the special attack is the cine

1671
01:10:01,679 --> 01:10:03,719
Tech that means that the attacker only

1672
01:10:03,719 --> 01:10:06,540
floods the server with so many scene

1673
01:10:06,540 --> 01:10:08,160
packets and the scene packets are the

1674
01:10:08,160 --> 01:10:10,199
first packages packets that are sent

1675
01:10:10,199 --> 01:10:13,020
during the handshake

1676
01:10:13,020 --> 01:10:15,900
this can be mitigated in general by for

1677
01:10:15,900 --> 01:10:18,660
example implementing Sim cookies this

1678
01:10:18,660 --> 01:10:21,020
can be done in firewall there are

1679
01:10:21,020 --> 01:10:23,820
many tutorials on the internet how to do

1680
01:10:23,820 --> 01:10:27,120
it do this and the most complex and the

1681
01:10:27,120 --> 01:10:28,860
more complicated attacks are different

1682
01:10:28,860 --> 01:10:31,920
kind of resource exhaustions attacks for

1683
01:10:31,920 --> 01:10:35,100
example slower is which try to make the

1684
01:10:35,100 --> 01:10:37,020
server allocate resources per the

1685
01:10:37,020 --> 01:10:38,580
connection for example for the

1686
01:10:38,580 --> 01:10:41,040
connection State and for incoming

1687
01:10:41,040 --> 01:10:42,900
buffers for partially

1688
01:10:42,900 --> 01:10:45,780
partially received data and so on and

1689
01:10:45,780 --> 01:10:47,580
they also use techniques

1690
01:10:47,580 --> 01:10:51,540
that delay the disposal of those

1691
01:10:51,540 --> 01:10:53,159
resources and

1692
01:10:53,159 --> 01:10:55,560
there are many of them I just put them

1693
01:10:55,560 --> 01:10:57,540
together into slowly slower is because

1694
01:10:57,540 --> 01:10:58,920
this is the most effective of the

1695
01:10:58,920 --> 01:11:01,440
effects but in general

1696
01:11:01,440 --> 01:11:04,400
the server can protect itself

1697
01:11:04,400 --> 01:11:09,540
by either by carefully configuring the

1698
01:11:09,540 --> 01:11:11,820
kernel parameters for TCP connections

1699
01:11:11,820 --> 01:11:13,560
but this is difficult and it's not

1700
01:11:13,560 --> 01:11:16,560
really designed for DNS operation

1701
01:11:16,560 --> 01:11:19,500
or by implementing a custom TCP stack

1702
01:11:19,500 --> 01:11:22,260
that for example does not use the file

1703
01:11:22,260 --> 01:11:23,760
descriptors for connections at all

1704
01:11:23,760 --> 01:11:25,920
because the file descriptor show to be

1705
01:11:25,920 --> 01:11:29,940
really slow in a multi-trained operation

1706
01:11:29,940 --> 01:11:32,760
so it has to implement custom TCP custom

1707
01:11:32,760 --> 01:11:35,640
connection tables and

1708
01:11:35,640 --> 01:11:39,420
there are built-in measures for

1709
01:11:39,420 --> 01:11:41,460
for avoiding slow worries or for

1710
01:11:41,460 --> 01:11:43,380
mitigating in somehow because it can be

1711
01:11:43,380 --> 01:11:44,820
avoided

1712
01:11:44,820 --> 01:11:46,980
it also can be used with connection with

1713
01:11:46,980 --> 01:11:49,940
the with the XDP technology which again

1714
01:11:49,940 --> 01:11:52,620
speeds up the packet processing

1715
01:11:52,620 --> 01:11:56,580
and with this all in all set up it can

1716
01:11:56,580 --> 01:12:00,239
handle up to millions of connections per

1717
01:12:00,239 --> 01:12:02,540
second

1718
01:12:02,699 --> 01:12:04,800
so this is the defense against various

1719
01:12:04,800 --> 01:12:09,360
TCP TCP attacks so when we were starting

1720
01:12:09,360 --> 01:12:11,760
with the DNS over quick implementation

1721
01:12:11,760 --> 01:12:15,420
we saw that the protocol is quite

1722
01:12:15,420 --> 01:12:17,580
similar to TCP

1723
01:12:17,580 --> 01:12:20,760
so we decided to take similar similar

1724
01:12:20,760 --> 01:12:23,940
design of the of the DNS server

1725
01:12:23,940 --> 01:12:27,560
alternative server

1726
01:12:27,560 --> 01:12:30,719
we choose so we are not DNS and we

1727
01:12:30,719 --> 01:12:33,060
choose slip and gtcp to

1728
01:12:33,060 --> 01:12:36,840
Library which I will talk about later

1729
01:12:36,840 --> 01:12:39,120
and also we use the custom connection

1730
01:12:39,120 --> 01:12:41,460
tables with the similar measures again

1731
01:12:41,460 --> 01:12:45,020
slow release attacks and similar

1732
01:12:45,020 --> 01:12:49,679
and since the lip and gtcp2 quick

1733
01:12:49,679 --> 01:12:52,560
library is also in user space so it was

1734
01:12:52,560 --> 01:12:55,679
straightforward to use XDP for also user

1735
01:12:55,679 --> 01:12:58,820
space packet processing

1736
01:13:00,060 --> 01:13:04,560
and the results about this all were

1737
01:13:04,560 --> 01:13:06,420
really

1738
01:13:06,420 --> 01:13:08,280
really bad

1739
01:13:08,280 --> 01:13:11,340
we observed in a laboratory that the

1740
01:13:11,340 --> 01:13:13,860
server is only able to handle like tens

1741
01:13:13,860 --> 01:13:15,960
of thousands connections per second in

1742
01:13:15,960 --> 01:13:17,120
this way

1743
01:13:17,120 --> 01:13:20,880
and the CPU was fully utilized and from

1744
01:13:20,880 --> 01:13:24,600
the profiler we clearly saw even

1745
01:13:24,600 --> 01:13:28,620
even worse things it then you see from

1746
01:13:28,620 --> 01:13:30,600
the previous presentation because in our

1747
01:13:30,600 --> 01:13:33,120
our case we are an authoritative DNS

1748
01:13:33,120 --> 01:13:35,580
server and our DNS routines are really

1749
01:13:35,580 --> 01:13:39,000
optimized so it was like negligible part

1750
01:13:39,000 --> 01:13:43,679
of the CPU usage by the actual DNS and

1751
01:13:43,679 --> 01:13:46,199
all the CPU in practice was only used by

1752
01:13:46,199 --> 01:13:49,020
cryptographic operations

1753
01:13:49,020 --> 01:13:51,780
and what was even worse it was the

1754
01:13:51,780 --> 01:13:55,040
memory consumption there because

1755
01:13:55,040 --> 01:14:00,000
in such a simulated attack the

1756
01:14:00,000 --> 01:14:02,699
the server took like tens of gigabytes

1757
01:14:02,699 --> 01:14:06,179
of memory for all the

1758
01:14:06,179 --> 01:14:08,640
States and temporary cryptographic

1759
01:14:08,640 --> 01:14:10,400
material

1760
01:14:10,400 --> 01:14:12,000
so

1761
01:14:12,000 --> 01:14:15,000
yeah we were

1762
01:14:15,000 --> 01:14:18,179
kind of scared for from this because

1763
01:14:18,179 --> 01:14:20,820
it opens the door for some attackers but

1764
01:14:20,820 --> 01:14:22,260
on the other hand we are on the

1765
01:14:22,260 --> 01:14:23,400
beginning right

1766
01:14:23,400 --> 01:14:25,560
we just started our initial

1767
01:14:25,560 --> 01:14:27,300
implementation of the NSO work week and

1768
01:14:27,300 --> 01:14:29,520
I hope there will be some development

1769
01:14:29,520 --> 01:14:33,239
and further research in this which shows

1770
01:14:33,239 --> 01:14:36,540
the way out of this so let us summarize

1771
01:14:36,540 --> 01:14:38,280
the attacks that are possible against

1772
01:14:38,280 --> 01:14:41,460
alternative DNS over quick

1773
01:14:41,460 --> 01:14:44,699
the first is again the

1774
01:14:44,699 --> 01:14:46,980
equivalence to cinetics that mean that

1775
01:14:46,980 --> 01:14:49,320
that the attacker floods the server with

1776
01:14:49,320 --> 01:14:51,239
the initial packets

1777
01:14:51,239 --> 01:14:53,880
and this can be somehow handled by

1778
01:14:53,880 --> 01:14:58,440
retrying by responding with the retry

1779
01:14:58,440 --> 01:15:00,239
Tech retry packet

1780
01:15:00,239 --> 01:15:04,020
which at least ensures that the source

1781
01:15:04,020 --> 01:15:06,120
IP address is not spoofed

1782
01:15:06,120 --> 01:15:10,100
but it also adds one more round trip

1783
01:15:10,100 --> 01:15:14,580
time to establish the connection itself

1784
01:15:14,580 --> 01:15:17,520
and if the attacker does not spoof the

1785
01:15:17,520 --> 01:15:19,739
service IP address it might not really

1786
01:15:19,739 --> 01:15:23,219
help against this attack completely

1787
01:15:23,219 --> 01:15:25,560
and the other families of Ethics like

1788
01:15:25,560 --> 01:15:27,900
Solaris and similar

1789
01:15:27,900 --> 01:15:30,719
the only thing the server can so far if

1790
01:15:30,719 --> 01:15:33,179
we don't have another defense do is to

1791
01:15:33,179 --> 01:15:34,920
be simply more powerful than the than

1792
01:15:34,920 --> 01:15:38,280
the attacker and this means that uh it

1793
01:15:38,280 --> 01:15:40,440
has to have more CPU for the

1794
01:15:40,440 --> 01:15:42,060
cryptographic operations because they

1795
01:15:42,060 --> 01:15:45,920
are they are like fighting face to face

1796
01:15:45,920 --> 01:15:49,860
who is able to manage more connections

1797
01:15:49,860 --> 01:15:53,599
if the attacker or the server

1798
01:15:53,699 --> 01:15:55,920
so again to say this we are in the

1799
01:15:55,920 --> 01:15:58,620
beginning so this might this might

1800
01:15:58,620 --> 01:16:00,179
improve in the future

1801
01:16:00,179 --> 01:16:03,900
so this is about attacks against DNS

1802
01:16:03,900 --> 01:16:06,659
overquake and let me tell you something

1803
01:16:06,659 --> 01:16:10,140
about another features of the DNS server

1804
01:16:10,140 --> 01:16:14,640
quick with on authorizer tips

1805
01:16:14,640 --> 01:16:15,900
it's already in the previous

1806
01:16:15,900 --> 01:16:19,320
presentations you saw that the

1807
01:16:19,320 --> 01:16:23,100
handshaking quick is somehow different

1808
01:16:23,100 --> 01:16:25,980
when the first time a resolver meets an

1809
01:16:25,980 --> 01:16:27,840
alternative server that it hasn't met

1810
01:16:27,840 --> 01:16:28,800
before

1811
01:16:28,800 --> 01:16:30,900
they have to perform a full handshake

1812
01:16:30,900 --> 01:16:34,339
which consists of

1813
01:16:34,679 --> 01:16:36,840
four packets

1814
01:16:36,840 --> 01:16:40,140
as you can see the DNS answer is

1815
01:16:40,140 --> 01:16:43,620
returned after 200 times

1816
01:16:43,620 --> 01:16:45,900
and there is a session ticket returned

1817
01:16:45,900 --> 01:16:48,659
also from the server the data server can

1818
01:16:48,659 --> 01:16:51,900
use later to initiate the next correct

1819
01:16:51,900 --> 01:16:55,500
handshake and to wait with this

1820
01:16:55,500 --> 01:16:58,500
subsequent and check the DNS answer is

1821
01:16:58,500 --> 01:17:00,719
already returned after one run tip time

1822
01:17:00,719 --> 01:17:03,060
but to complete the handshake we still

1823
01:17:03,060 --> 01:17:06,179
need another two packets to be sent

1824
01:17:06,179 --> 01:17:08,340
to complete the handshank and also

1825
01:17:08,340 --> 01:17:10,199
receive the ticket for the

1826
01:17:10,199 --> 01:17:12,900
for the very next time

1827
01:17:12,900 --> 01:17:17,219
so I think that in some cases there are

1828
01:17:17,219 --> 01:17:18,239
like

1829
01:17:18,239 --> 01:17:21,840
two DNS queries for example for

1830
01:17:21,840 --> 01:17:26,100
for NS type and then for the NSK type so

1831
01:17:26,100 --> 01:17:28,739
it might actually not hurt at all but in

1832
01:17:28,739 --> 01:17:30,300
case there is just one query per

1833
01:17:30,300 --> 01:17:33,659
connection this does not mean that lower

1834
01:17:33,659 --> 01:17:36,120
packets lower number of packets will be

1835
01:17:36,120 --> 01:17:36,900
sent

1836
01:17:36,900 --> 01:17:39,120
but in any case the quick handshake

1837
01:17:39,120 --> 01:17:41,520
lowers the latency because the DNS

1838
01:17:41,520 --> 01:17:43,980
answer is returned already after the

1839
01:17:43,980 --> 01:17:45,659
first round trip

1840
01:17:45,659 --> 01:17:48,780
and the resolver has to remember the the

1841
01:17:48,780 --> 01:17:52,020
session the session ticket

1842
01:17:52,020 --> 01:17:53,820
but the authoritative server can be

1843
01:17:53,820 --> 01:17:55,739
stateless in the way that not stateless

1844
01:17:55,739 --> 01:17:57,420
priority connection but stateless

1845
01:17:57,420 --> 01:17:59,040
between those connections because it

1846
01:17:59,040 --> 01:18:01,080
does not remember it doesn't have to

1847
01:18:01,080 --> 01:18:03,000
remember something the the session

1848
01:18:03,000 --> 01:18:04,679
tickets already contains all the

1849
01:18:04,679 --> 01:18:07,679
necessary information to encrypt even

1850
01:18:07,679 --> 01:18:10,320
the first packet that is set with the

1851
01:18:10,320 --> 01:18:12,719
subsequent query

1852
01:18:12,719 --> 01:18:15,360
another feature of the nsover creek is

1853
01:18:15,360 --> 01:18:17,400
the encryption as we know this helps

1854
01:18:17,400 --> 01:18:19,199
privacy of course

1855
01:18:19,199 --> 01:18:23,159
and the problem here is that the then to

1856
01:18:23,159 --> 01:18:27,000
establish the the encryption the clear

1857
01:18:27,000 --> 01:18:29,699
the client needs to validate the server

1858
01:18:29,699 --> 01:18:31,920
certificate in order to know that it is

1859
01:18:31,920 --> 01:18:34,140
talking to the correct server and not to

1860
01:18:34,140 --> 01:18:37,440
domain in the middle however this is not

1861
01:18:37,440 --> 01:18:40,560
like solved in the world yet

1862
01:18:40,560 --> 01:18:44,219
because there is no signaling in DNS the

1863
01:18:44,219 --> 01:18:47,280
truth give the resolver possibility to

1864
01:18:47,280 --> 01:18:48,719
gain the server certificate before

1865
01:18:48,719 --> 01:18:50,699
contacting the server

1866
01:18:50,699 --> 01:18:53,219
so this is being researched by the

1867
01:18:53,219 --> 01:18:56,340
deprived growth group in ITF and so far

1868
01:18:56,340 --> 01:18:58,560
with no clear results

1869
01:18:58,560 --> 01:19:00,600
so far the recommendation is to use

1870
01:19:00,600 --> 01:19:03,719
self-signing certificate the client

1871
01:19:03,719 --> 01:19:06,480
shall not like

1872
01:19:06,480 --> 01:19:09,060
shall not check this certificate but

1873
01:19:09,060 --> 01:19:10,980
anyway the connection is established and

1874
01:19:10,980 --> 01:19:13,260
when it's established then the

1875
01:19:13,260 --> 01:19:14,820
encryption

1876
01:19:14,820 --> 01:19:17,640
takes place and the connection is no

1877
01:19:17,640 --> 01:19:18,739
longer

1878
01:19:18,739 --> 01:19:23,239
no longer unencrypted at least

1879
01:19:25,380 --> 01:19:28,380
so now I will switch from the features

1880
01:19:28,380 --> 01:19:30,120
of the quick to the features of our

1881
01:19:30,120 --> 01:19:32,760
implementation as I said we are using

1882
01:19:32,760 --> 01:19:35,520
the lip and gtcp to library is the most

1883
01:19:35,520 --> 01:19:38,340
popular library for C language

1884
01:19:38,340 --> 01:19:40,380
it is good for

1885
01:19:40,380 --> 01:19:42,659
implementing the

1886
01:19:42,659 --> 01:19:46,440
like single quick connection handling it

1887
01:19:46,440 --> 01:19:48,960
takes care of all the states of the

1888
01:19:48,960 --> 01:19:50,460
connection which are really complicated

1889
01:19:50,460 --> 01:19:53,280
from complicated in a quick it also

1890
01:19:53,280 --> 01:19:55,260
takes care about congestion control so

1891
01:19:55,260 --> 01:19:57,540
it's really cool

1892
01:19:57,540 --> 01:20:00,900
but it does not help with managing

1893
01:20:00,900 --> 01:20:03,179
different quick connections so if the

1894
01:20:03,179 --> 01:20:05,699
packet is incoming the implementation

1895
01:20:05,699 --> 01:20:07,739
shall somehow

1896
01:20:07,739 --> 01:20:10,920
find the relevant quick Connection in

1897
01:20:10,920 --> 01:20:13,920
its own implemented connection tables

1898
01:20:13,920 --> 01:20:15,719
and it also does not help with

1899
01:20:15,719 --> 01:20:16,880
eventually

1900
01:20:16,880 --> 01:20:19,440
so that

1901
01:20:19,440 --> 01:20:21,719
the implementation has to take care of

1902
01:20:21,719 --> 01:20:23,120
which quick connection

1903
01:20:23,120 --> 01:20:27,600
needs to be focused on the first

1904
01:20:27,600 --> 01:20:31,940
and it also needed some unnecessary code

1905
01:20:31,940 --> 01:20:35,100
to really interpret operate with the

1906
01:20:35,100 --> 01:20:37,199
crypto libraries but this is improving

1907
01:20:37,199 --> 01:20:40,560
uh in the most recent version of the

1908
01:20:40,560 --> 01:20:43,440
ngtcp2

1909
01:20:43,440 --> 01:20:45,480
so our implementation architecture

1910
01:20:45,480 --> 01:20:48,900
consists of this library ellip and gtcp2

1911
01:20:48,900 --> 01:20:51,840
and dignity LSI very which is the crypto

1912
01:20:51,840 --> 01:20:54,120
library that we use also for the nsq and

1913
01:20:54,120 --> 01:20:56,100
other crypto stuff

1914
01:20:56,100 --> 01:20:58,920
and as I said we use our own connection

1915
01:20:58,920 --> 01:21:01,739
tables that are similar to our

1916
01:21:01,739 --> 01:21:05,400
implementation of TCP on XDP and we use

1917
01:21:05,400 --> 01:21:09,060
XDP for packet processing but as we saw

1918
01:21:09,060 --> 01:21:11,820
that the packet processing CPU

1919
01:21:11,820 --> 01:21:14,640
consumption is negligible in quick

1920
01:21:14,640 --> 01:21:19,260
operation then we are planning to also

1921
01:21:19,260 --> 01:21:21,960
implement the DNS server quick in like

1922
01:21:21,960 --> 01:21:23,940
the conventional mode where the UDP

1923
01:21:23,940 --> 01:21:26,520
packets are handled by the kernel

1924
01:21:26,520 --> 01:21:31,679
because XDP has its own quirks that

1925
01:21:31,679 --> 01:21:34,219
that may may be

1926
01:21:34,219 --> 01:21:37,140
showstoppers for some businesses

1927
01:21:37,140 --> 01:21:39,659
so in any case the

1928
01:21:39,659 --> 01:21:43,080
the implementation for quick on XDP is

1929
01:21:43,080 --> 01:21:45,659
complete in the DNS right now

1930
01:21:45,659 --> 01:21:48,300
we have it in our git master and we are

1931
01:21:48,300 --> 01:21:50,940
going to release it in the version 3.2

1932
01:21:50,940 --> 01:21:53,100
which is invited at the end of the

1933
01:21:53,100 --> 01:21:54,300
summer

1934
01:21:54,300 --> 01:21:57,239
and so so far you can already try this

1935
01:21:57,239 --> 01:22:01,320
if you build no DNS from from Master

1936
01:22:01,320 --> 01:22:03,239
you can configure for your configuration

1937
01:22:03,239 --> 01:22:06,960
option and you can try it if it works by

1938
01:22:06,960 --> 01:22:08,760
using KDK which is something like dick

1939
01:22:08,760 --> 01:22:13,320
but made by us and it also implements

1940
01:22:13,320 --> 01:22:16,080
quick so you can make a query over quick

1941
01:22:16,080 --> 01:22:18,540
to your authoritative server to see that

1942
01:22:18,540 --> 01:22:20,640
it works over quick

1943
01:22:20,640 --> 01:22:22,920
and you can also measure it because we

1944
01:22:22,920 --> 01:22:24,300
have another utility which is called

1945
01:22:24,300 --> 01:22:27,000
kxdp gun and this is for generating

1946
01:22:27,000 --> 01:22:29,460
traffic with the help of XDP

1947
01:22:29,460 --> 01:22:32,580
so with this uh with this you can

1948
01:22:32,580 --> 01:22:34,080
generate

1949
01:22:34,080 --> 01:22:36,719
traffic for DNS over quick against the

1950
01:22:36,719 --> 01:22:38,820
alternative server and it will tell you

1951
01:22:38,820 --> 01:22:42,420
how performant it is

1952
01:22:42,420 --> 01:22:44,520
I guess you can get back to those slides

1953
01:22:44,520 --> 01:22:46,260
later so I don't have to describe all

1954
01:22:46,260 --> 01:22:48,600
the options

1955
01:22:48,600 --> 01:22:52,380
so to wrap it up for auto detective DNS

1956
01:22:52,380 --> 01:22:53,460
over quick

1957
01:22:53,460 --> 01:22:56,940
it brings encryption and it brings very

1958
01:22:56,940 --> 01:22:59,280
low latency because in most cases the

1959
01:22:59,280 --> 01:23:01,620
the DNS

1960
01:23:01,620 --> 01:23:03,780
answer is good after the first rounded

1961
01:23:03,780 --> 01:23:04,679
time

1962
01:23:04,679 --> 01:23:06,840
and the performance seems to be good

1963
01:23:06,840 --> 01:23:08,580
enough for all Egypt to demand traffic

1964
01:23:08,580 --> 01:23:10,800
so it's good for the future the

1965
01:23:10,800 --> 01:23:13,679
thousands of queries per second seems to

1966
01:23:13,679 --> 01:23:17,000
be enough for most real life

1967
01:23:17,000 --> 01:23:19,860
authoritative server

1968
01:23:19,860 --> 01:23:22,739
the benefits of XDP package processing

1969
01:23:22,739 --> 01:23:25,280
are

1970
01:23:25,580 --> 01:23:28,320
negligible and there are issues that

1971
01:23:28,320 --> 01:23:30,960
needs to be fixed in the closed future

1972
01:23:30,960 --> 01:23:34,739
like the vulnerability to some denial of

1973
01:23:34,739 --> 01:23:38,280
service and resource exertions resource

1974
01:23:38,280 --> 01:23:41,460
exhaustion attacks and some other quirks

1975
01:23:41,460 --> 01:23:44,340
like the problems with the establishing

1976
01:23:44,340 --> 01:23:46,860
certificates which is not standardized

1977
01:23:46,860 --> 01:23:48,420
yet

1978
01:23:48,420 --> 01:23:50,820
so thank you for the attention

1979
01:23:50,820 --> 01:23:53,760
I hope I end the lunch and I'm waiting

1980
01:23:53,760 --> 01:23:55,380
your questions

1981
01:23:55,380 --> 01:23:57,000
thank you

1982
01:23:57,000 --> 01:23:58,500
I think we have time for one or two

1983
01:23:58,500 --> 01:23:59,699
questions

1984
01:23:59,699 --> 01:24:01,739
the first question is actually a comment

1985
01:24:01,739 --> 01:24:04,739
by Victoria saying it may be possible to

1986
01:24:04,739 --> 01:24:06,780
win reusable session tickets and avoid

1987
01:24:06,780 --> 01:24:08,640
sending a new ticket for each new

1988
01:24:08,640 --> 01:24:10,520
connection

1989
01:24:10,520 --> 01:24:13,620
according to Quick standards the session

1990
01:24:13,620 --> 01:24:16,199
ticket is good only for establishing one

1991
01:24:16,199 --> 01:24:18,540
subsequent connection and for another

1992
01:24:18,540 --> 01:24:21,060
one you need another session ticket

1993
01:24:21,060 --> 01:24:23,940
so it should let it shall work like a

1994
01:24:23,940 --> 01:24:26,280
chain of connections that each time you

1995
01:24:26,280 --> 01:24:30,259
use one ticket and gain another one

1996
01:24:31,080 --> 01:24:34,140
the second question by Andre

1997
01:24:34,140 --> 01:24:35,400
I don't get the point of using

1998
01:24:35,400 --> 01:24:37,320
self-signed certificates but I cannot

1999
01:24:37,320 --> 01:24:39,300
the regular certificates for a domain

2000
01:24:39,300 --> 01:24:42,980
name or for an IP address be used

2001
01:24:45,179 --> 01:24:46,860
it's the way that it queries first

2002
01:24:46,860 --> 01:24:49,020
authoritative server of the parent

2003
01:24:49,020 --> 01:24:51,060
domain and then it gives the information

2004
01:24:51,060 --> 01:24:53,460
and hey there is a new authoritative

2005
01:24:53,460 --> 01:24:56,400
server for the child domain and it only

2006
01:24:56,400 --> 01:24:59,699
gets the the name of that domain and one

2007
01:24:59,699 --> 01:25:02,280
IP address that is in the guru record so

2008
01:25:02,280 --> 01:25:04,980
it does not have any like possibility to

2009
01:25:04,980 --> 01:25:09,960
have certificate stamp of that server

2010
01:25:09,960 --> 01:25:12,360
so it's impossible to establish the

2011
01:25:12,360 --> 01:25:14,760
certificate and the point in using could

2012
01:25:14,760 --> 01:25:16,620
hence over quick in this situation at

2013
01:25:16,620 --> 01:25:20,340
all is that at least the connections one

2014
01:25:20,340 --> 01:25:23,760
is established then it's encrypted so if

2015
01:25:23,760 --> 01:25:25,620
the man in the middle is not actively

2016
01:25:25,620 --> 01:25:29,340
just uh really in the middle but it's

2017
01:25:29,340 --> 01:25:32,300
for example listening on the on the side

2018
01:25:32,300 --> 01:25:36,120
then at least against this kind of

2019
01:25:36,120 --> 01:25:41,820
manual man in the man on the side the

2020
01:25:41,820 --> 01:25:43,920
the encryption is good and it still

2021
01:25:43,920 --> 01:25:47,420
brings some degree of

2022
01:25:47,420 --> 01:25:49,320
encryption

2023
01:25:49,320 --> 01:25:51,659
all right thank you so much everyone

2024
01:25:51,659 --> 01:25:53,640
please participate in the poll rating

2025
01:25:53,640 --> 01:25:57,980
this talk thank you thank you

2026
01:25:58,190 --> 01:26:03,780
[Applause]

2027
01:26:03,780 --> 01:26:05,460
and please search there are some further

2028
01:26:05,460 --> 01:26:08,780
questions please take them offline

2029
01:26:09,719 --> 01:26:12,179
now for the third presentation in this

2030
01:26:12,179 --> 01:26:14,580
session we're going to hear external DNS

2031
01:26:14,580 --> 01:26:18,300
on AWS in large scale by C9 T and Sila

2032
01:26:18,300 --> 01:26:20,179
Young

2033
01:26:20,179 --> 01:26:24,179
so hi everyone I'm still young from

2034
01:26:24,179 --> 01:26:27,120
Salesforce and I'm Sudan Chi from

2035
01:26:27,120 --> 01:26:30,000
Salesforce So today we're talking about

2036
01:26:30,000 --> 01:26:33,060
external DNA's on the cloud environment

2037
01:26:33,060 --> 01:26:36,739
in a large scale so let's introduce

2038
01:26:36,739 --> 01:26:40,739
external DS firstly so what is external

2039
01:26:40,739 --> 01:26:44,639
DA's and external DNS is an open source

2040
01:26:44,639 --> 01:26:47,280
application to make kubernetes resource

2041
01:26:47,280 --> 01:26:50,960
discoverable while public DNS servers

2042
01:26:50,960 --> 01:26:54,120
kubernetes is an open source system for

2043
01:26:54,120 --> 01:26:56,760
automating deployment scaling and

2044
01:26:56,760 --> 01:26:59,280
management of continent countenized

2045
01:26:59,280 --> 01:27:02,040
applications we have hundreds of

2046
01:27:02,040 --> 01:27:05,520
resources running on kubernetes and need

2047
01:27:05,520 --> 01:27:09,239
to be resolved from outside X nodines is

2048
01:27:09,239 --> 01:27:11,580
a good view for us to manage drds

2049
01:27:11,580 --> 01:27:15,600
records automatically and dynamically to

2050
01:27:15,600 --> 01:27:18,540
manage their records external dance

2051
01:27:18,540 --> 01:27:21,840
would do the following steps step one it

2052
01:27:21,840 --> 01:27:24,900
collects all required DS records from

2053
01:27:24,900 --> 01:27:28,800
kubernetes resources Step 2 it downloads

2054
01:27:28,800 --> 01:27:32,219
audience records from matched zones from

2055
01:27:32,219 --> 01:27:36,120
DS vendor in Cloud environment to its

2056
01:27:36,120 --> 01:27:39,900
local containers step 3 it did some

2057
01:27:39,900 --> 01:27:41,520
calculations

2058
01:27:41,520 --> 01:27:44,520
featuring DNS records required by

2059
01:27:44,520 --> 01:27:48,120
kubernetes resources and DS records

2060
01:27:48,120 --> 01:27:53,159
already existing in zones then external

2061
01:27:53,159 --> 01:27:55,800
DS find the difference between SQ and

2062
01:27:55,800 --> 01:27:58,560
send change request to the ends vendor

2063
01:27:58,560 --> 01:28:00,080
in the cloud

2064
01:28:00,080 --> 01:28:03,900
we use external DNS in a close account

2065
01:28:03,900 --> 01:28:07,440
style X 10 audience is hosted on service

2066
01:28:07,440 --> 01:28:11,820
accounts and send API calls to accounts

2067
01:28:11,820 --> 01:28:15,659
that holds DNS zones generally they are

2068
01:28:15,659 --> 01:28:19,920
about 10 or 20 series accounts to talk

2069
01:28:19,920 --> 01:28:23,420
with the DNS account that has the zones

2070
01:28:23,420 --> 01:28:27,120
each service account has at least one

2071
01:28:27,120 --> 01:28:31,920
clause 2. so we need to consider

2072
01:28:31,920 --> 01:28:34,920
scalability when they earn more external

2073
01:28:34,920 --> 01:28:36,080
DNA's

2074
01:28:36,080 --> 01:28:40,440
instances and the DNS updates and this

2075
01:28:40,440 --> 01:28:43,320
is common issue for everyone a general

2076
01:28:43,320 --> 01:28:47,580
scalability issue in DA's because Cloud

2077
01:28:47,580 --> 01:28:49,860
environment is everywhere and it

2078
01:28:49,860 --> 01:28:53,639
provides limited resources there are the

2079
01:28:53,639 --> 01:28:57,120
maximum values for the resources actions

2080
01:28:57,120 --> 01:28:59,460
and items that we can use in Cloud

2081
01:28:59,460 --> 01:29:03,719
environment when your DS Services scales

2082
01:29:03,719 --> 01:29:06,179
up to a certain level you need to

2083
01:29:06,179 --> 01:29:09,540
consider the underlying hard limit in

2084
01:29:09,540 --> 01:29:12,540
your Cloud environments we will using

2085
01:29:12,540 --> 01:29:14,100
awas

2086
01:29:14,100 --> 01:29:16,739
Cloud environment as an example in our

2087
01:29:16,739 --> 01:29:20,639
talk AWS allows each account to make no

2088
01:29:20,639 --> 01:29:24,060
more than 5 Route 53 API calls per

2089
01:29:24,060 --> 01:29:27,780
second and that's an unadjustable heart

2090
01:29:27,780 --> 01:29:32,100
rate limit and for Route 53 API calls

2091
01:29:32,100 --> 01:29:34,639
it's all in return

2092
01:29:34,639 --> 01:29:39,420
300 risk courses at once when you send a

2093
01:29:39,420 --> 01:29:42,199
list request

2094
01:29:42,199 --> 01:29:45,179
AWS allows each Zone to have no more

2095
01:29:45,179 --> 01:29:47,460
than 10 000 records this one is

2096
01:29:47,460 --> 01:29:50,280
adjustable The Zone size will be doubled

2097
01:29:50,280 --> 01:29:53,580
if we request a limit increase

2098
01:29:53,580 --> 01:29:57,960
so we can do a simple calculation if a

2099
01:29:57,960 --> 01:30:01,020
Zone has 10 000 records and every record

2100
01:30:01,020 --> 01:30:06,239
is a separate record set it needs to at

2101
01:30:06,239 --> 01:30:10,500
least the 34 list API call to Route 53

2102
01:30:10,500 --> 01:30:13,739
to retrieve the whole Zone so we can

2103
01:30:13,739 --> 01:30:16,380
observe an issue here external.js

2104
01:30:16,380 --> 01:30:19,020
downloads all Ds records of matched

2105
01:30:19,020 --> 01:30:21,679
zones and if Zone size are big

2106
01:30:21,679 --> 01:30:24,719
externalities consumes a lot of API

2107
01:30:24,719 --> 01:30:27,719
calls in one round and in our real

2108
01:30:27,719 --> 01:30:31,440
operations we have multiple DNS external

2109
01:30:31,440 --> 01:30:34,980
DS instances and zones that have more

2110
01:30:34,980 --> 01:30:37,560
than 10 000 records throughout only

2111
01:30:37,560 --> 01:30:41,040
arrow happening there and our service is

2112
01:30:41,040 --> 01:30:43,679
blocked in DNS updating

2113
01:30:43,679 --> 01:30:47,580
so one thing in external DS design can

2114
01:30:47,580 --> 01:30:51,600
even make its situation worse is is the

2115
01:30:51,600 --> 01:30:54,980
external DNS generally creates Judas

2116
01:30:54,980 --> 01:30:58,020
records for one endpoint of kubernetes

2117
01:30:58,020 --> 01:31:02,280
resources it creates one record state

2118
01:31:02,280 --> 01:31:05,159
for this resolution like failures

2119
01:31:05,159 --> 01:31:09,480
synonym delegation and another ticks T

2120
01:31:09,480 --> 01:31:13,699
record for this ownership management

2121
01:31:14,239 --> 01:31:19,199
Zone size and increased API consumption

2122
01:31:19,199 --> 01:31:22,380
it brings challenges that we need to

2123
01:31:22,380 --> 01:31:26,340
overcome when GIS Services scale up in

2124
01:31:26,340 --> 01:31:30,540
real operations the first challenging is

2125
01:31:30,540 --> 01:31:33,780
the number of recording hosted Zone

2126
01:31:33,780 --> 01:31:36,719
reached the rate limit and the Second

2127
01:31:36,719 --> 01:31:40,500
Challenge is the aps routing issue and

2128
01:31:40,500 --> 01:31:43,260
the cdan will introduce more detail for

2129
01:31:43,260 --> 01:31:46,800
these two challenges and how we resolve

2130
01:31:46,800 --> 01:31:50,100
its two issues in real

2131
01:31:50,100 --> 01:31:53,100
thank you Sula um so um can you change

2132
01:31:53,100 --> 01:31:56,820
to the next slide please yeah so the

2133
01:31:56,820 --> 01:31:58,440
first challenge is the Zone record

2134
01:31:58,440 --> 01:32:01,739
limits AWS has a default limit on house

2135
01:32:01,739 --> 01:32:04,560
designs which is 10 000 records per Zone

2136
01:32:04,560 --> 01:32:07,139
and it's adjustable if the hosted Zone

2137
01:32:07,139 --> 01:32:09,000
reaches the limit it will block new

2138
01:32:09,000 --> 01:32:11,520
kubernetes resources from creating DNS

2139
01:32:11,520 --> 01:32:13,679
records in the zone the impact is

2140
01:32:13,679 --> 01:32:15,960
critical because Services cannot be

2141
01:32:15,960 --> 01:32:18,300
curried or deployed without correct DNS

2142
01:32:18,300 --> 01:32:21,780
records as this quota is adjustable our

2143
01:32:21,780 --> 01:32:24,000
solution is to create appropriate

2144
01:32:24,000 --> 01:32:26,280
monitoring and alerts regarding the

2145
01:32:26,280 --> 01:32:28,920
hosted Zone sites by python Lambda and

2146
01:32:28,920 --> 01:32:31,199
request a higher quota when receiving an

2147
01:32:31,199 --> 01:32:33,900
alert the loan does sends real-time Zone

2148
01:32:33,900 --> 01:32:36,600
size to AWS Cloud watch metrics every

2149
01:32:36,600 --> 01:32:39,360
minute and the alert is generated when

2150
01:32:39,360 --> 01:32:41,520
the number of Records reaches 80 percent

2151
01:32:41,520 --> 01:32:43,980
of the quota at the same time we reduce

2152
01:32:43,980 --> 01:32:46,380
the Zone size by applying sync mode in

2153
01:32:46,380 --> 01:32:49,020
external DNS which allows for full

2154
01:32:49,020 --> 01:32:52,020
synchronization of of DNS records and

2155
01:32:52,020 --> 01:32:56,760
removes stale DNS records next please

2156
01:32:56,760 --> 01:33:00,120
and here is an example of modifying the

2157
01:33:00,120 --> 01:33:02,699
policy of external DNS from observed

2158
01:33:02,699 --> 01:33:05,699
only to sync external DNS is highly

2159
01:33:05,699 --> 01:33:07,920
configurable and we can control how

2160
01:33:07,920 --> 01:33:10,260
records are synchronized by modifying

2161
01:33:10,260 --> 01:33:13,380
Flags in deployment manifest and next

2162
01:33:13,380 --> 01:33:15,179
please

2163
01:33:15,179 --> 01:33:17,820
on the Second Challenge here is Route 50

2164
01:33:17,820 --> 01:33:20,159
Series throttling issue with multiple

2165
01:33:20,159 --> 01:33:23,219
external DNS instances are running the

2166
01:33:23,219 --> 01:33:26,400
exhausts or the API rate limits which is

2167
01:33:26,400 --> 01:33:30,060
5 cores per second if raw 53 can process

2168
01:33:30,060 --> 01:33:32,580
the request before the next request for

2169
01:33:32,580 --> 01:33:35,100
the Sam hosted Zone it will re it will

2170
01:33:35,100 --> 01:33:38,219
reject subsequent requests with an HTTP

2171
01:33:38,219 --> 01:33:41,520
400 Arrow causing failures to external

2172
01:33:41,520 --> 01:33:44,820
DNS here our solution is about Zone size

2173
01:33:44,820 --> 01:33:46,860
reduction and enhancement of the cash

2174
01:33:46,860 --> 01:33:48,659
mechanism

2175
01:33:48,659 --> 01:33:51,960
firstly applying sync mode to external

2176
01:33:51,960 --> 01:33:54,960
DNS reduces The Zone size consequently

2177
01:33:54,960 --> 01:33:58,440
it decreases the number of API requests

2178
01:33:58,440 --> 01:34:01,800
as fewer records are to be downloaded in

2179
01:34:01,800 --> 01:34:03,840
One external DNS run

2180
01:34:03,840 --> 01:34:06,540
following that we adjust the external

2181
01:34:06,540 --> 01:34:09,300
DNS synchronization interval from one

2182
01:34:09,300 --> 01:34:11,460
minute to 10 minutes meaning that

2183
01:34:11,460 --> 01:34:14,580
external DNS will check for updates once

2184
01:34:14,580 --> 01:34:17,219
per 10 minutes instead of the default

2185
01:34:17,219 --> 01:34:20,159
one minutes so there are fewer external

2186
01:34:20,159 --> 01:34:24,500
DNS requests next please

2187
01:34:24,719 --> 01:34:27,000
um so here is example of modifying the

2188
01:34:27,000 --> 01:34:29,040
polling interval and increasing the

2189
01:34:29,040 --> 01:34:30,900
interval will not affect your service

2190
01:34:30,900 --> 01:34:33,480
however it will mean that a DNS won't be

2191
01:34:33,480 --> 01:34:35,340
created until the maximum of the

2192
01:34:35,340 --> 01:34:39,080
interval and next please

2193
01:34:40,260 --> 01:34:42,780
so here are the four takeaways from our

2194
01:34:42,780 --> 01:34:45,540
talk today and firstly somewhere in your

2195
01:34:45,540 --> 01:34:48,659
cloud like AWS or Arturo you may use

2196
01:34:48,659 --> 01:34:51,960
kubernetes with external DNS in order to

2197
01:34:51,960 --> 01:34:54,300
make your service discoverable via

2198
01:34:54,300 --> 01:34:57,480
public DNS servers at the same time be

2199
01:34:57,480 --> 01:35:00,000
aware that external DNS is not

2200
01:35:00,000 --> 01:35:02,520
distributed or scalable and therefore

2201
01:35:02,520 --> 01:35:04,320
you might be careful about the

2202
01:35:04,320 --> 01:35:06,199
underlying rate limit in the cloud

2203
01:35:06,199 --> 01:35:10,139
finally for AWS users if your Route 53

2204
01:35:10,139 --> 01:35:13,080
talks to multiple external DNS instances

2205
01:35:13,080 --> 01:35:15,780
it might be a good idea to scale your

2206
01:35:15,780 --> 01:35:18,300
system horizontally by creating sub

2207
01:35:18,300 --> 01:35:21,239
zones in multiple accounts all right

2208
01:35:21,239 --> 01:35:23,699
that's it it's our pleasure to take any

2209
01:35:23,699 --> 01:35:26,419
questions now

2210
01:35:26,580 --> 01:35:29,580
yeah I see there is a question is there

2211
01:35:29,580 --> 01:35:32,880
a way to optimize using Zone transfers

2212
01:35:32,880 --> 01:35:38,300
from awas uh just let me clarify during

2213
01:35:38,300 --> 01:35:41,940
using external js2 to do the Zone

2214
01:35:41,940 --> 01:35:45,719
transfer in AWS or

2215
01:35:45,719 --> 01:35:48,900
other options we can use for Zoom

2216
01:35:48,900 --> 01:35:51,980
transfer in AWS

2217
01:35:53,280 --> 01:35:56,699
yeah if that's the first one external

2218
01:35:56,699 --> 01:35:59,940
this doesn't do anything about the Zone

2219
01:35:59,940 --> 01:36:03,239
transferencing it's a true for like the

2220
01:36:03,239 --> 01:36:07,080
automatically manage the DS records that

2221
01:36:07,080 --> 01:36:11,100
you need for a kubernetes cluster and if

2222
01:36:11,100 --> 01:36:15,199
you want to do Samsung transversing

2223
01:36:15,199 --> 01:36:18,300
automatically and the programmat

2224
01:36:18,300 --> 01:36:20,760
typically you need to use the Route 53

2225
01:36:20,760 --> 01:36:23,460
API things so that's just two different

2226
01:36:23,460 --> 01:36:25,820
things

2227
01:36:26,239 --> 01:36:29,470
thank you everyone

2228
01:36:29,470 --> 01:36:37,890
[Applause]

2229
01:36:41,639 --> 01:36:43,560
hi everybody

2230
01:36:43,560 --> 01:36:46,679
welcome back for uh genessoark

2231
01:36:46,679 --> 01:36:48,900
we are going to start with session three

2232
01:36:48,900 --> 01:36:51,620
of day one

2233
01:36:52,139 --> 01:36:54,000
this is a mic

2234
01:36:54,000 --> 01:36:55,080
um so yeah we're going to start with

2235
01:36:55,080 --> 01:36:56,760
session three of day one

2236
01:36:56,760 --> 01:36:57,900
um we're going to have a mix of

2237
01:36:57,900 --> 01:37:00,480
operational and uh analytics talks this

2238
01:37:00,480 --> 01:37:02,520
afternoon and

2239
01:37:02,520 --> 01:37:04,800
um there was slight change in how we are

2240
01:37:04,800 --> 01:37:06,480
going to do q a

2241
01:37:06,480 --> 01:37:08,940
to do q a when the speaker is remote

2242
01:37:08,940 --> 01:37:10,860
everything will be done through the chat

2243
01:37:10,860 --> 01:37:14,699
by prepending questions with questions

2244
01:37:14,699 --> 01:37:16,760
#questions

2245
01:37:16,760 --> 01:37:20,159
when the speaker is in person people can

2246
01:37:20,159 --> 01:37:22,380
go to the mic and make their to their

2247
01:37:22,380 --> 01:37:25,440
question there and uh questions from the

2248
01:37:25,440 --> 01:37:28,500
chat will be related to them

2249
01:37:28,500 --> 01:37:29,520
um

2250
01:37:29,520 --> 01:37:31,739
news will be doing the timekeeping this

2251
01:37:31,739 --> 01:37:33,719
afternoon and I would like to thank

2252
01:37:33,719 --> 01:37:38,219
Comcast and Verizon for their sponsor

2253
01:37:38,219 --> 01:37:40,679
and with that being said we're ready to

2254
01:37:40,679 --> 01:37:43,980
oh just one more thing please uh when a

2255
01:37:43,980 --> 01:37:45,360
talk is going to be started there will

2256
01:37:45,360 --> 01:37:47,880
be a poll that comes up please and like

2257
01:37:47,880 --> 01:37:50,159
answer the Polly tells us get a better

2258
01:37:50,159 --> 01:37:51,659
understanding of what you like or what

2259
01:37:51,659 --> 01:37:52,980
can be improved

2260
01:37:52,980 --> 01:37:55,500
that being said I'm going to pass it on

2261
01:37:55,500 --> 01:37:57,960
to Brett uh first three month speaker of

2262
01:37:57,960 --> 01:38:00,199
the afternoon

2263
01:38:01,500 --> 01:38:04,800
thank you all for um letting me uh speak

2264
01:38:04,800 --> 01:38:06,540
again

2265
01:38:06,540 --> 01:38:09,000
um I uh I want to talk this afternoon

2266
01:38:09,000 --> 01:38:10,380
about

2267
01:38:10,380 --> 01:38:13,560
um transitioning DNS for gtlds in this

2268
01:38:13,560 --> 01:38:15,900
case what I mean by transitioning is uh

2269
01:38:15,900 --> 01:38:20,400
is moving um uh DNS and registry systems

2270
01:38:20,400 --> 01:38:21,840
from one

2271
01:38:21,840 --> 01:38:23,460
um registry service provider to another

2272
01:38:23,460 --> 01:38:26,040
registry service provider so this is a

2273
01:38:26,040 --> 01:38:28,500
um existing gtrd moving between

2274
01:38:28,500 --> 01:38:30,540
providers

2275
01:38:30,540 --> 01:38:31,679
um this is the agenda I'm going to go

2276
01:38:31,679 --> 01:38:32,880
through I'm going to talk a little bit

2277
01:38:32,880 --> 01:38:37,020
about nominex um DNS team and systems

2278
01:38:37,020 --> 01:38:40,199
um our relationship with dtlds talk

2279
01:38:40,199 --> 01:38:41,820
about the different stages of transition

2280
01:38:41,820 --> 01:38:43,560
and move on to a couple of other topics

2281
01:38:43,560 --> 01:38:45,719
at the end

2282
01:38:45,719 --> 01:38:48,600
so the uh the nominate team are a team

2283
01:38:48,600 --> 01:38:51,840
of uh six uh the DNS teamwork

2284
01:38:51,840 --> 01:38:53,100
achievement six and we support the

2285
01:38:53,100 --> 01:38:55,679
following Services we support both DNS

2286
01:38:55,679 --> 01:38:57,480
for UK

2287
01:38:57,480 --> 01:39:01,860
um of DNS for 67 gtlds

2288
01:39:01,860 --> 01:39:04,320
um we operate a recursive protective DNS

2289
01:39:04,320 --> 01:39:07,080
service for um the public sector in the

2290
01:39:07,080 --> 01:39:08,340
UK

2291
01:39:08,340 --> 01:39:12,120
um a private private network service for

2292
01:39:12,120 --> 01:39:14,820
DNS recursive service for

2293
01:39:14,820 --> 01:39:17,820
um for the Public's uh public networks

2294
01:39:17,820 --> 01:39:19,199
in the UK

2295
01:39:19,199 --> 01:39:21,179
um our own obviously internal corporate

2296
01:39:21,179 --> 01:39:24,060
DNS and lastly um something we're trying

2297
01:39:24,060 --> 01:39:25,500
to do a little bit more of these days is

2298
01:39:25,500 --> 01:39:28,380
some engagement with the um with the DNS

2299
01:39:28,380 --> 01:39:31,199
community on protocols policy and

2300
01:39:31,199 --> 01:39:32,940
operations Etc and it's obviously one of

2301
01:39:32,940 --> 01:39:35,280
the reasons I'm I'm here today is is it

2302
01:39:35,280 --> 01:39:37,199
is to try and up that engagement a

2303
01:39:37,199 --> 01:39:38,760
little bit nominator are very aware that

2304
01:39:38,760 --> 01:39:40,199
they stepped back from this in the last

2305
01:39:40,199 --> 01:39:42,480
few years and um it's it's a new

2306
01:39:42,480 --> 01:39:44,760
strategy for us to engage heavier in the

2307
01:39:44,760 --> 01:39:46,860
community so the hopefully you see more

2308
01:39:46,860 --> 01:39:48,360
of me and some of my colleagues in the

2309
01:39:48,360 --> 01:39:49,860
future

2310
01:39:49,860 --> 01:39:51,239
so

2311
01:39:51,239 --> 01:39:52,860
um normally currently the registry

2312
01:39:52,860 --> 01:39:56,820
provider for two gtlds dot Wales and Dot

2313
01:39:56,820 --> 01:39:57,900
comree

2314
01:39:57,900 --> 01:39:59,520
um and we are the back end registry

2315
01:39:59,520 --> 01:40:03,480
service provider for 67 gtlds for

2316
01:40:03,480 --> 01:40:05,400
various different customers

2317
01:40:05,400 --> 01:40:09,960
uh we're also one of the um free Global

2318
01:40:09,960 --> 01:40:13,440
Ebro providers ebro's emergency backend

2319
01:40:13,440 --> 01:40:16,020
registry operator so we contract with

2320
01:40:16,020 --> 01:40:19,080
icon to be able to take a gtld on within

2321
01:40:19,080 --> 01:40:23,040
uh within four hours uh notice basically

2322
01:40:23,040 --> 01:40:25,560
so what I want to talk about today is uh

2323
01:40:25,560 --> 01:40:27,840
transitioning gtlds

2324
01:40:27,840 --> 01:40:29,760
um uh the experiences we've had

2325
01:40:29,760 --> 01:40:33,060
transitioning to utilities but gtlds

2326
01:40:33,060 --> 01:40:34,679
um in from other providers and out from

2327
01:40:34,679 --> 01:40:37,260
ourselves into other providers

2328
01:40:37,260 --> 01:40:40,020
um and and this we uh we kind of

2329
01:40:40,020 --> 01:40:41,520
developed because we've done a lot of

2330
01:40:41,520 --> 01:40:43,139
these over the years we've developed a

2331
01:40:43,139 --> 01:40:45,060
kind of process for doing them and um

2332
01:40:45,060 --> 01:40:47,219
and what I thought it was worth uh

2333
01:40:47,219 --> 01:40:49,020
publicizing that process a little bit

2334
01:40:49,020 --> 01:40:51,600
and um trying to maybe develop into some

2335
01:40:51,600 --> 01:40:53,400
kind of um you know best current

2336
01:40:53,400 --> 01:40:55,800
practice or standard in the future for

2337
01:40:55,800 --> 01:40:58,260
uh for everybody's benefit

2338
01:40:58,260 --> 01:41:00,300
so in Phase One

2339
01:41:00,300 --> 01:41:02,699
um we're notified of a new

2340
01:41:02,699 --> 01:41:05,820
um gtld order from Oliver from our sales

2341
01:41:05,820 --> 01:41:07,800
our College in our registry

2342
01:41:07,800 --> 01:41:10,139
um sales department

2343
01:41:10,139 --> 01:41:11,639
um and we initially do some assessment

2344
01:41:11,639 --> 01:41:13,800
of this size and impact of that dtld

2345
01:41:13,800 --> 01:41:15,659
because obviously you know different

2346
01:41:15,659 --> 01:41:18,060
there are many sizes of gtlds out there

2347
01:41:18,060 --> 01:41:19,440
and if we

2348
01:41:19,440 --> 01:41:21,360
um suddenly had to take something on the

2349
01:41:21,360 --> 01:41:22,860
size of.com for instance that would be a

2350
01:41:22,860 --> 01:41:24,420
very different matter than taking on to

2351
01:41:24,420 --> 01:41:25,739
something that's got very few

2352
01:41:25,739 --> 01:41:27,480
delegations so we make we make some

2353
01:41:27,480 --> 01:41:29,100
assessments

2354
01:41:29,100 --> 01:41:30,780
um another assessments leaders in the

2355
01:41:30,780 --> 01:41:32,760
decision about where we deploy that

2356
01:41:32,760 --> 01:41:35,040
detailed you know infrastructure we've

2357
01:41:35,040 --> 01:41:37,139
got a standard process where we put most

2358
01:41:37,139 --> 01:41:40,139
dtlds because it must fit into a a size

2359
01:41:40,139 --> 01:41:41,940
most of the ones we've ever taken on put

2360
01:41:41,940 --> 01:41:43,320
into a size bucket that makes them

2361
01:41:43,320 --> 01:41:45,719
already deployed in the same way

2362
01:41:45,719 --> 01:41:48,360
we build some test infrastructure

2363
01:41:48,360 --> 01:41:51,119
um and and we do a lot of um uh testing

2364
01:41:51,119 --> 01:41:52,800
we have a policy that basically says

2365
01:41:52,800 --> 01:41:54,540
everything we do in production we're

2366
01:41:54,540 --> 01:41:57,300
doing a test staging environment

2367
01:41:57,300 --> 01:41:58,560
um so we build that test infrastructure

2368
01:41:58,560 --> 01:41:59,880
we build the production infrastructure

2369
01:41:59,880 --> 01:42:01,920
and this doesn't necessarily mean we

2370
01:42:01,920 --> 01:42:03,659
build new infrastructure for every TLD

2371
01:42:03,659 --> 01:42:06,239
it's some of it's maybe just modifying

2372
01:42:06,239 --> 01:42:08,159
existing infrastructure

2373
01:42:08,159 --> 01:42:10,199
and every one of these build studies as

2374
01:42:10,199 --> 01:42:12,179
you would expect documented and defied

2375
01:42:12,179 --> 01:42:14,340
defined as code

2376
01:42:14,340 --> 01:42:16,679
um in our configuration management tool

2377
01:42:16,679 --> 01:42:19,440
we use um ansible exclusiveness a lot

2378
01:42:19,440 --> 01:42:21,480
these days

2379
01:42:21,480 --> 01:42:25,139
the Builder this is made up of what be

2380
01:42:25,139 --> 01:42:27,300
surprising to you I guess of a registry

2381
01:42:27,300 --> 01:42:29,100
database some provisioning

2382
01:42:29,100 --> 01:42:31,619
infrastructure some DNS SEC signing

2383
01:42:31,619 --> 01:42:33,239
infrastructure

2384
01:42:33,239 --> 01:42:35,880
um some distributions servers uh and

2385
01:42:35,880 --> 01:42:37,860
then choose two different types of DNS

2386
01:42:37,860 --> 01:42:40,860
sites we operate um some in our own data

2387
01:42:40,860 --> 01:42:44,280
centers which are highly available with

2388
01:42:44,280 --> 01:42:46,679
lots of bandwidth Etc and then we've got

2389
01:42:46,679 --> 01:42:48,119
some sites that say in the cloud and

2390
01:42:48,119 --> 01:42:49,980
some of you may have seen presentations

2391
01:42:49,980 --> 01:42:51,739
I've done put on the past about our

2392
01:42:51,739 --> 01:42:53,820
cloud-based infrastructure

2393
01:42:53,820 --> 01:42:56,760
we create an initial dummy Zone file and

2394
01:42:56,760 --> 01:42:59,280
have relevant records and um add plenty

2395
01:42:59,280 --> 01:43:00,840
of monitoring to make sure that we've um

2396
01:43:00,840 --> 01:43:03,960
we we know if anything's going wrong uh

2397
01:43:03,960 --> 01:43:04,980
and then we hand it over to our

2398
01:43:04,980 --> 01:43:06,840
colleagues in QA

2399
01:43:06,840 --> 01:43:09,540
um and one's QA of uh I've looked at and

2400
01:43:09,540 --> 01:43:11,460
signed everything off as being as

2401
01:43:11,460 --> 01:43:13,679
working properly we then schedule

2402
01:43:13,679 --> 01:43:15,300
um rst

2403
01:43:15,300 --> 01:43:16,860
um for those of you who don't know

2404
01:43:16,860 --> 01:43:19,980
um RSC is is abbreviation for registry

2405
01:43:19,980 --> 01:43:22,619
systems testing this is a process that's

2406
01:43:22,619 --> 01:43:25,739
done by icon as part of a transition so

2407
01:43:25,739 --> 01:43:28,619
I can do various standard tests across

2408
01:43:28,619 --> 01:43:30,300
the whole infrastructure to make sure

2409
01:43:30,300 --> 01:43:33,540
that you're ready and and and fully

2410
01:43:33,540 --> 01:43:35,100
tested so make sure that you're able to

2411
01:43:35,100 --> 01:43:39,500
you know run that that TLD

2412
01:43:40,619 --> 01:43:42,420
um so the icon Engineers Chase various

2413
01:43:42,420 --> 01:43:43,980
things like DNS servers that are

2414
01:43:43,980 --> 01:43:46,080
responding properly zones are probably

2415
01:43:46,080 --> 01:43:49,260
DNS 6 signed Epp who is an adapter

2416
01:43:49,260 --> 01:43:51,840
working properly and where required um

2417
01:43:51,840 --> 01:43:54,360
idns have been set up with a correct in

2418
01:43:54,360 --> 01:43:56,639
the correct way if they find any issues

2419
01:43:56,639 --> 01:43:58,679
there is a ticket with us and we've got

2420
01:43:58,679 --> 01:44:01,020
to fix those fairly quickly

2421
01:44:01,020 --> 01:44:03,239
um there is a charge for a there is a

2422
01:44:03,239 --> 01:44:05,699
charge for rst and if you don't

2423
01:44:05,699 --> 01:44:06,900
completely the first time you get

2424
01:44:06,900 --> 01:44:08,940
recharged again so

2425
01:44:08,940 --> 01:44:10,920
um if we if you fix the issues fairly

2426
01:44:10,920 --> 01:44:12,060
quickly

2427
01:44:12,060 --> 01:44:14,699
um then you don't get a recharge for it

2428
01:44:14,699 --> 01:44:17,639
um rst depending on the complexity of

2429
01:44:17,639 --> 01:44:19,920
the of the utility in question usually

2430
01:44:19,920 --> 01:44:21,960
takes two to three weeks

2431
01:44:21,960 --> 01:44:24,239
um and I'm glad to say we passed the

2432
01:44:24,239 --> 01:44:26,940
first time every time we've done one but

2433
01:44:26,940 --> 01:44:28,440
the problem the problems are much less

2434
01:44:28,440 --> 01:44:29,580
now than they used to be because we're

2435
01:44:29,580 --> 01:44:31,320
used to doing them

2436
01:44:31,320 --> 01:44:33,659
we then move on to phase three and this

2437
01:44:33,659 --> 01:44:35,460
is uh where we start doing the actual

2438
01:44:35,460 --> 01:44:38,100
DNS and DNS transitions at this stage

2439
01:44:38,100 --> 01:44:40,980
we've uh rst has passed

2440
01:44:40,980 --> 01:44:42,600
um we're working in a current state

2441
01:44:42,600 --> 01:44:45,179
where the incumbrant provider to the old

2442
01:44:45,179 --> 01:44:47,520
registry service provider is producing

2443
01:44:47,520 --> 01:44:49,920
and distributing the zones

2444
01:44:49,920 --> 01:44:52,080
um nominators producing and distributing

2445
01:44:52,080 --> 01:44:54,900
dummy zones and at this stage we uh we

2446
01:44:54,900 --> 01:44:56,820
make a change that normally ingests the

2447
01:44:56,820 --> 01:44:59,699
current Zone from the incumbent we on

2448
01:44:59,699 --> 01:45:01,800
sign that as I'm resigning

2449
01:45:01,800 --> 01:45:03,840
um but adding our adding the existing

2450
01:45:03,840 --> 01:45:05,940
public keys so that when we do the

2451
01:45:05,940 --> 01:45:08,040
transition we're post publishing and we

2452
01:45:08,040 --> 01:45:10,739
distribute it to our new infrastructure

2453
01:45:10,739 --> 01:45:12,719
um so in other words we're taking the

2454
01:45:12,719 --> 01:45:15,659
Zone from the taking existing Zone on a

2455
01:45:15,659 --> 01:45:18,719
continuous basing basis using notifies

2456
01:45:18,719 --> 01:45:22,860
and xfrs on taking all the DNA stick

2457
01:45:22,860 --> 01:45:25,860
information off it but adding or adding

2458
01:45:25,860 --> 01:45:28,619
or keeping the existing public keys in

2459
01:45:28,619 --> 01:45:30,300
there and then we distribute it out to

2460
01:45:30,300 --> 01:45:31,920
our public interest structure of

2461
01:45:31,920 --> 01:45:34,080
obviously at this stage it's still um

2462
01:45:34,080 --> 01:45:36,540
it's not live at all

2463
01:45:36,540 --> 01:45:38,400
we then generate

2464
01:45:38,400 --> 01:45:41,880
um you know using a standard script that

2465
01:45:41,880 --> 01:45:43,980
we have with um various

2466
01:45:43,980 --> 01:45:46,260
um change files these have clear dates

2467
01:45:46,260 --> 01:45:47,699
and instructions to the income are

2468
01:45:47,699 --> 01:45:49,260
provided because there's lots of work

2469
01:45:49,260 --> 01:45:51,179
needs to happen by that old provider at

2470
01:45:51,179 --> 01:45:52,560
this stage

2471
01:45:52,560 --> 01:45:55,020
um and and so these change files uh uh

2472
01:45:55,020 --> 01:45:56,880
have the the instructions of exactly

2473
01:45:56,880 --> 01:45:58,679
what they should do and when they should

2474
01:45:58,679 --> 01:45:59,880
do it

2475
01:45:59,880 --> 01:46:01,980
um and there are six files in total the

2476
01:46:01,980 --> 01:46:04,260
first one instructs them to add the

2477
01:46:04,260 --> 01:46:06,179
nominate dnsic keys to their existing

2478
01:46:06,179 --> 01:46:08,520
zone so in other words to pre-publish

2479
01:46:08,520 --> 01:46:11,940
them to add the DS's for the Nick and

2480
01:46:11,940 --> 01:46:14,699
Nick totally and CLD

2481
01:46:14,699 --> 01:46:16,739
um to add the DS records to the root for

2482
01:46:16,739 --> 01:46:18,780
the new keys

2483
01:46:18,780 --> 01:46:21,420
um the third one is to add with it

2484
01:46:21,420 --> 01:46:23,639
within uh once the DNS set Keys have

2485
01:46:23,639 --> 01:46:25,739
been published for long enough

2486
01:46:25,739 --> 01:46:29,820
um we had the in stage three we add the

2487
01:46:29,820 --> 01:46:31,560
name server entries for half of the new

2488
01:46:31,560 --> 01:46:34,199
name servers and remove the NS entries

2489
01:46:34,199 --> 01:46:36,300
for half of the old name servers

2490
01:46:36,300 --> 01:46:39,540
um so we do this in a stage manner

2491
01:46:39,540 --> 01:46:41,460
um then there's a Time Gap and we then

2492
01:46:41,460 --> 01:46:43,860
add the NS entries for

2493
01:46:43,860 --> 01:46:45,840
um half of the new name service to the

2494
01:46:45,840 --> 01:46:48,659
root using the um rules or management

2495
01:46:48,659 --> 01:46:50,940
system and again remove any essentially

2496
01:46:50,940 --> 01:46:52,560
for half of the old name service from

2497
01:46:52,560 --> 01:46:54,179
the route

2498
01:46:54,179 --> 01:46:56,940
um in step five and six we we repeat

2499
01:46:56,940 --> 01:46:58,619
steps three and four for the second half

2500
01:46:58,619 --> 01:47:00,420
of the name seven and obviously at this

2501
01:47:00,420 --> 01:47:01,619
stage

2502
01:47:01,619 --> 01:47:04,020
um normally are now taking all the names

2503
01:47:04,020 --> 01:47:06,719
all the DNS traffic

2504
01:47:06,719 --> 01:47:09,480
um we often at least there's also um

2505
01:47:09,480 --> 01:47:12,900
updated admin admin Tech contacts

2506
01:47:12,900 --> 01:47:14,699
um this isn't the same for every TLD

2507
01:47:14,699 --> 01:47:16,800
because it depends what they register

2508
01:47:16,800 --> 01:47:18,840
themselves want to do

2509
01:47:18,840 --> 01:47:21,239
um but generally speaking we find that

2510
01:47:21,239 --> 01:47:23,159
the registry want to keep hold of the

2511
01:47:23,159 --> 01:47:25,380
admin contact and they give nominee the

2512
01:47:25,380 --> 01:47:28,800
check contact and that splits the um the

2513
01:47:28,800 --> 01:47:30,780
the any future changes between two

2514
01:47:30,780 --> 01:47:32,460
organizations which makes it secure

2515
01:47:32,460 --> 01:47:34,560
obviously

2516
01:47:34,560 --> 01:47:36,900
so at this stage in phase three

2517
01:47:36,900 --> 01:47:38,940
um the current state is the nominates

2518
01:47:38,940 --> 01:47:40,619
name servers are now in the zone and the

2519
01:47:40,619 --> 01:47:42,600
room we're getting all the traffic

2520
01:47:42,600 --> 01:47:45,480
um DNA SEC is signed by nominate but

2521
01:47:45,480 --> 01:47:48,000
we're publishing the incumbent provides

2522
01:47:48,000 --> 01:47:49,500
old Keys

2523
01:47:49,500 --> 01:47:50,940
um there's only still being provisioned

2524
01:47:50,940 --> 01:47:53,280
by the incumbent so the TLD at this

2525
01:47:53,280 --> 01:47:55,920
stage is depending on both providers

2526
01:47:55,920 --> 01:47:57,659
um because they're they're still taking

2527
01:47:57,659 --> 01:48:00,900
uh new registrations and changes pushing

2528
01:48:00,900 --> 01:48:02,040
them into their Zone file using

2529
01:48:02,040 --> 01:48:03,780
Provisions at their end but then feeding

2530
01:48:03,780 --> 01:48:05,699
the zone for us to serve it for me names

2531
01:48:05,699 --> 01:48:08,100
from our name servers

2532
01:48:08,100 --> 01:48:11,219
the phase four is the actual registry

2533
01:48:11,219 --> 01:48:13,199
transition itself

2534
01:48:13,199 --> 01:48:16,440
um so we we fix a gate um in conjunction

2535
01:48:16,440 --> 01:48:19,440
uh with the old provider uh for a date

2536
01:48:19,440 --> 01:48:21,119
of the transition

2537
01:48:21,119 --> 01:48:23,100
um and we published what they published

2538
01:48:23,100 --> 01:48:25,679
registration downtime so that um any

2539
01:48:25,679 --> 01:48:27,600
registrars know that for a certain

2540
01:48:27,600 --> 01:48:29,580
period on a certain day they can't do

2541
01:48:29,580 --> 01:48:33,300
any changes on that day the incumbent

2542
01:48:33,300 --> 01:48:35,880
um operator makes the registry read only

2543
01:48:35,880 --> 01:48:39,300
they produce a database Esco file this

2544
01:48:39,300 --> 01:48:42,420
um uh escosa provide are produced every

2545
01:48:42,420 --> 01:48:44,400
night anywhere because it's a part of

2546
01:48:44,400 --> 01:48:45,780
the icon

2547
01:48:45,780 --> 01:48:47,820
um registry contractors to is to produce

2548
01:48:47,820 --> 01:48:49,199
escrows and push them into an escrow

2549
01:48:49,199 --> 01:48:51,840
agency every day so this is a commonly

2550
01:48:51,840 --> 01:48:53,780
done known process it's just normally

2551
01:48:53,780 --> 01:48:56,219
automatically done each night and pushed

2552
01:48:56,219 --> 01:48:58,260
into an escrow but at this stage during

2553
01:48:58,260 --> 01:49:00,619
a transition the encumber provider

2554
01:49:00,619 --> 01:49:03,239
produces an escrow file while the

2555
01:49:03,239 --> 01:49:05,400
registry is frozen and supplies that to

2556
01:49:05,400 --> 01:49:06,840
nominal

2557
01:49:06,840 --> 01:49:09,119
normally then popular

2558
01:49:09,119 --> 01:49:12,480
um our new registry database using that

2559
01:49:12,480 --> 01:49:15,600
um using that escrow and we generate a

2560
01:49:15,600 --> 01:49:18,239
new Zone file from the uh from the new

2561
01:49:18,239 --> 01:49:20,460
database that zone file is checked and

2562
01:49:20,460 --> 01:49:23,100
loaded into our infrastructure

2563
01:49:23,100 --> 01:49:25,679
um and then once we're happy with it

2564
01:49:25,679 --> 01:49:27,600
um and it's gone through various checks

2565
01:49:27,600 --> 01:49:32,639
and balances and QA excuse me

2566
01:49:32,639 --> 01:49:35,280
um it's uh the DNS our DNS second

2567
01:49:35,280 --> 01:49:36,900
distribution infrastructure has changed

2568
01:49:36,900 --> 01:49:39,119
so it's switched over to new to use that

2569
01:49:39,119 --> 01:49:43,099
new nominate generated Zone form

2570
01:49:44,040 --> 01:49:45,719
um and then in Phase five we do various

2571
01:49:45,719 --> 01:49:47,820
cleanup activities so after a certain

2572
01:49:47,820 --> 01:49:49,860
period obviously we can

2573
01:49:49,860 --> 01:49:53,219
um uh remove the old DNS set keys from

2574
01:49:53,219 --> 01:49:55,139
our from the from the zoma publishing

2575
01:49:55,139 --> 01:49:57,119
because they're no longer required uh

2576
01:49:57,119 --> 01:50:00,060
remove the uh extra DS records that are

2577
01:50:00,060 --> 01:50:03,060
no longer needed from the parents

2578
01:50:03,060 --> 01:50:05,639
um and the incumbent can obviously we

2579
01:50:05,639 --> 01:50:08,699
then can remove the incumbent incoming

2580
01:50:08,699 --> 01:50:10,679
Zone from our infrastructure systems we

2581
01:50:10,679 --> 01:50:13,020
no longer need it and in that case at

2582
01:50:13,020 --> 01:50:15,119
that stage we're done

2583
01:50:15,119 --> 01:50:16,739
so

2584
01:50:16,739 --> 01:50:20,100
what else other things that happen

2585
01:50:20,100 --> 01:50:22,500
um we obviously do we we've done many

2586
01:50:22,500 --> 01:50:24,239
transitions in

2587
01:50:24,239 --> 01:50:25,139
um

2588
01:50:25,139 --> 01:50:27,840
um uh We've also done some transitions

2589
01:50:27,840 --> 01:50:28,920
out

2590
01:50:28,920 --> 01:50:30,900
um what we tend to do with transition

2591
01:50:30,900 --> 01:50:33,840
outs is let the new provider lead the

2592
01:50:33,840 --> 01:50:35,460
process

2593
01:50:35,460 --> 01:50:37,980
um we we often talk to them about the

2594
01:50:37,980 --> 01:50:39,719
process that we've got

2595
01:50:39,719 --> 01:50:41,400
um and encourage them but we don't

2596
01:50:41,400 --> 01:50:44,100
mandate the way we where we view it is

2597
01:50:44,100 --> 01:50:47,280
that the gaining provider leads the

2598
01:50:47,280 --> 01:50:49,980
process but if if the particular

2599
01:50:49,980 --> 01:50:51,900
provider in question isn't isn't

2600
01:50:51,900 --> 01:50:54,000
experienced we'll happily you know guide

2601
01:50:54,000 --> 01:50:58,380
them and to to use our our process

2602
01:50:58,380 --> 01:50:59,340
um

2603
01:50:59,340 --> 01:51:02,159
we have a slightly different uh process

2604
01:51:02,159 --> 01:51:03,619
for

2605
01:51:03,619 --> 01:51:06,239
DNS transitions that are out of out of

2606
01:51:06,239 --> 01:51:08,280
value it where they are transitioned

2607
01:51:08,280 --> 01:51:09,719
onto a different set of name servers

2608
01:51:09,719 --> 01:51:11,580
temporarily

2609
01:51:11,580 --> 01:51:13,860
um and

2610
01:51:13,860 --> 01:51:16,020
um but again that's in the urban process

2611
01:51:16,020 --> 01:51:17,100
that we've done several times because

2612
01:51:17,100 --> 01:51:18,060
obviously

2613
01:51:18,060 --> 01:51:21,119
some providers have the name servers in

2614
01:51:21,119 --> 01:51:24,840
um within the within the TLD like we do

2615
01:51:24,840 --> 01:51:26,520
all of our neighbor servers within

2616
01:51:26,520 --> 01:51:28,980
nick.tld but some providers don't which

2617
01:51:28,980 --> 01:51:30,900
which makes it um you know the process

2618
01:51:30,900 --> 01:51:33,119
slightly different

2619
01:51:33,119 --> 01:51:34,860
um for future plans

2620
01:51:34,860 --> 01:51:36,480
um we've got a lot of Automation in this

2621
01:51:36,480 --> 01:51:37,800
system because we've done it a lot a lot

2622
01:51:37,800 --> 01:51:40,139
of times over the years

2623
01:51:40,139 --> 01:51:42,480
um but there are obviously from time to

2624
01:51:42,480 --> 01:51:45,060
time variations in the way that things

2625
01:51:45,060 --> 01:51:48,659
work and the way that um

2626
01:51:48,659 --> 01:51:51,119
the way that um other operators want to

2627
01:51:51,119 --> 01:51:52,619
do things

2628
01:51:52,619 --> 01:51:54,659
um and and obviously this means that not

2629
01:51:54,659 --> 01:51:56,400
not necessarily everything can be

2630
01:51:56,400 --> 01:51:58,619
automated and sometimes changes to the

2631
01:51:58,619 --> 01:52:00,780
process have to be made

2632
01:52:00,780 --> 01:52:03,000
um so we want to try and standardize

2633
01:52:03,000 --> 01:52:06,119
this a bit a lot more and make the

2634
01:52:06,119 --> 01:52:08,820
um deployment and changes automated as

2635
01:52:08,820 --> 01:52:11,880
possible with automated testing Etc so

2636
01:52:11,880 --> 01:52:13,500
that's something we want to do more of

2637
01:52:13,500 --> 01:52:15,980
in the future

2638
01:52:16,020 --> 01:52:18,000
um before I move to questions and and

2639
01:52:18,000 --> 01:52:19,679
one other one

2640
01:52:19,679 --> 01:52:22,260
um a couple of points I want any points

2641
01:52:22,260 --> 01:52:24,659
I wanted to make here is um we've

2642
01:52:24,659 --> 01:52:26,699
obviously done these transitions with

2643
01:52:26,699 --> 01:52:28,920
many different providers over the years

2644
01:52:28,920 --> 01:52:31,139
uh and I won't call those people out but

2645
01:52:31,139 --> 01:52:32,699
what I will say is

2646
01:52:32,699 --> 01:52:35,040
um just about well almost everyone we

2647
01:52:35,040 --> 01:52:36,600
work with on transitions have been

2648
01:52:36,600 --> 01:52:39,000
extremely professional uh and worked

2649
01:52:39,000 --> 01:52:40,860
with us in a in a really good manner and

2650
01:52:40,860 --> 01:52:43,199
and that's not to be understated because

2651
01:52:43,199 --> 01:52:46,080
obviously it's uh it's a situation where

2652
01:52:46,080 --> 01:52:47,520
somebody's lost some business so you

2653
01:52:47,520 --> 01:52:49,679
could imagine there might be um a bit

2654
01:52:49,679 --> 01:52:52,199
sore about that but we've we've seen

2655
01:52:52,199 --> 01:52:54,420
nothing but professionalism uh when

2656
01:52:54,420 --> 01:52:55,800
we've been doing these transitions in

2657
01:52:55,800 --> 01:52:58,199
both directions to I think that's a

2658
01:52:58,199 --> 01:53:01,500
testament to uh to the industry

2659
01:53:01,500 --> 01:53:04,500
um one one late breaking thing uh on on

2660
01:53:04,500 --> 01:53:06,420
this presentation that we're actually in

2661
01:53:06,420 --> 01:53:08,280
the in the process of doing a transition

2662
01:53:08,280 --> 01:53:10,500
at the moment and um what we've found is

2663
01:53:10,500 --> 01:53:12,300
this one hasn't gone quite as smoothly

2664
01:53:12,300 --> 01:53:14,940
as normal and we've had some questions

2665
01:53:14,940 --> 01:53:16,199
marketing the way we're doing it which

2666
01:53:16,199 --> 01:53:18,420
is ledgers to change the process

2667
01:53:18,420 --> 01:53:20,040
slightly for this particular operator

2668
01:53:20,040 --> 01:53:22,440
for this particular transition

2669
01:53:22,440 --> 01:53:24,900
um and and that that's kind of gelled

2670
01:53:24,900 --> 01:53:26,219
something in my mind a little bit that

2671
01:53:26,219 --> 01:53:27,780
makes me think well

2672
01:53:27,780 --> 01:53:29,219
um is there some work that can be done

2673
01:53:29,219 --> 01:53:32,820
here maybe to to try and um standardize

2674
01:53:32,820 --> 01:53:36,119
this process to to create some kind of

2675
01:53:36,119 --> 01:53:38,219
um best current practice document or

2676
01:53:38,219 --> 01:53:40,080
something like that so we can we can

2677
01:53:40,080 --> 01:53:41,400
point

2678
01:53:41,400 --> 01:53:42,780
um different Registries out with

2679
01:53:42,780 --> 01:53:44,820
different levels of experience of doing

2680
01:53:44,820 --> 01:53:46,440
this to say you know this is what the

2681
01:53:46,440 --> 01:53:49,080
industry recommends as a way to operate

2682
01:53:49,080 --> 01:53:50,760
this process

2683
01:53:50,760 --> 01:53:52,260
um and it's certainly something I'd be

2684
01:53:52,260 --> 01:53:53,880
interested in working on

2685
01:53:53,880 --> 01:53:56,460
um I think I'd like to get help from

2686
01:53:56,460 --> 01:53:58,739
other providers who've had similar

2687
01:53:58,739 --> 01:54:01,080
experiences to to author that kind of

2688
01:54:01,080 --> 01:54:03,360
document and I'm not I'm not 100 sure

2689
01:54:03,360 --> 01:54:05,880
sure where that document should live my

2690
01:54:05,880 --> 01:54:07,679
initial thoughts are maybe it could be

2691
01:54:07,679 --> 01:54:10,080
some kind of um

2692
01:54:10,080 --> 01:54:12,239
um BCP RFC

2693
01:54:12,239 --> 01:54:13,980
um but I don't have experience in that

2694
01:54:13,980 --> 01:54:17,639
area of writing rfcs uh if if people you

2695
01:54:17,639 --> 01:54:18,840
know one of the things I wanted to say

2696
01:54:18,840 --> 01:54:20,820
is I mean I'm happy to hear questions

2697
01:54:20,820 --> 01:54:22,860
but I'd also really like to hear

2698
01:54:22,860 --> 01:54:24,420
feedback and comments on the idea of

2699
01:54:24,420 --> 01:54:25,619
making this

2700
01:54:25,619 --> 01:54:27,300
um a BCP or something like that and that

2701
01:54:27,300 --> 01:54:29,639
can either be now uh in the in the

2702
01:54:29,639 --> 01:54:32,639
matima's chat or equally if if anybody

2703
01:54:32,639 --> 01:54:36,420
wants to approach me afterwards directly

2704
01:54:36,420 --> 01:54:38,580
um then then be happy to to have a chat

2705
01:54:38,580 --> 01:54:40,800
about it uh I was I was actually

2706
01:54:40,800 --> 01:54:43,380
supposed to be in Philadelphia today

2707
01:54:43,380 --> 01:54:45,000
um and wanted to pick up with people

2708
01:54:45,000 --> 01:54:47,460
directly on this um unfortunately my

2709
01:54:47,460 --> 01:54:49,920
wife got covered um two days ago so I

2710
01:54:49,920 --> 01:54:51,659
was at the last minute not able to

2711
01:54:51,659 --> 01:54:54,000
travel anyway on that note I'll uh I'll

2712
01:54:54,000 --> 01:54:55,320
open up the questions and I'll have a

2713
01:54:55,320 --> 01:54:56,880
look on a matter of us as if anybody's

2714
01:54:56,880 --> 01:55:00,000
got anything thank you everybody

2715
01:55:00,000 --> 01:55:02,580
quite a lot of questions so

2716
01:55:02,580 --> 01:55:04,320
um Dwayne has asked what would you say

2717
01:55:04,320 --> 01:55:05,940
is the most stressful aspect of a

2718
01:55:05,940 --> 01:55:07,980
transition in

2719
01:55:07,980 --> 01:55:08,820
um

2720
01:55:08,820 --> 01:55:12,119
I think when we were first doing this it

2721
01:55:12,119 --> 01:55:14,340
was kind of because it was unknown and

2722
01:55:14,340 --> 01:55:17,219
we were you know obviously

2723
01:55:17,219 --> 01:55:20,280
um worried about breaking um gtlds and I

2724
01:55:20,280 --> 01:55:21,900
think probably in those days the most

2725
01:55:21,900 --> 01:55:23,760
stressful thing was making sure we did

2726
01:55:23,760 --> 01:55:25,800
DNS set properly

2727
01:55:25,800 --> 01:55:28,440
um because it feel it felt like that was

2728
01:55:28,440 --> 01:55:30,060
the most brittle pair and the most

2729
01:55:30,060 --> 01:55:32,219
unknown part

2730
01:55:32,219 --> 01:55:34,920
um but but I think that that um has

2731
01:55:34,920 --> 01:55:37,679
largely gone away due to

2732
01:55:37,679 --> 01:55:39,840
um due to the amount of times we've done

2733
01:55:39,840 --> 01:55:41,520
it these days I would say the most

2734
01:55:41,520 --> 01:55:43,500
stressful part is if we get something

2735
01:55:43,500 --> 01:55:45,960
from another provider that says

2736
01:55:45,960 --> 01:55:47,159
um well we don't want to follow your

2737
01:55:47,159 --> 01:55:50,159
process we've got we we we we we we've

2738
01:55:50,159 --> 01:55:52,679
got our own ideas uh and want to start

2739
01:55:52,679 --> 01:55:54,719
change the way we do things gets

2740
01:55:54,719 --> 01:55:57,300
introduced that introduces doubts and

2741
01:55:57,300 --> 01:55:59,280
risk and and therefore that that can

2742
01:55:59,280 --> 01:56:02,119
become stressful

2743
01:56:02,639 --> 01:56:06,360
um a question from Jeremy um can you

2744
01:56:06,360 --> 01:56:08,040
reveal how many such transitions did you

2745
01:56:08,040 --> 01:56:09,420
go through

2746
01:56:09,420 --> 01:56:12,179
um so of the

2747
01:56:12,179 --> 01:56:15,239
um of the 67 tlds we've got at the

2748
01:56:15,239 --> 01:56:16,800
moment

2749
01:56:16,800 --> 01:56:18,199
um I think

2750
01:56:18,199 --> 01:56:22,080
65 of those were transitioned in

2751
01:56:22,080 --> 01:56:23,400
um

2752
01:56:23,400 --> 01:56:24,119
um

2753
01:56:24,119 --> 01:56:28,320
uh I think about 35 of them were done in

2754
01:56:28,320 --> 01:56:30,060
one ghost who was 35 I'm a single

2755
01:56:30,060 --> 01:56:31,260
provider

2756
01:56:31,260 --> 01:56:33,380
um the rest of them were individual ones

2757
01:56:33,380 --> 01:56:36,239
we've also done

2758
01:56:36,239 --> 01:56:36,900
um

2759
01:56:36,900 --> 01:56:38,520
about

2760
01:56:38,520 --> 01:56:41,340
I think he's probably about five or six

2761
01:56:41,340 --> 01:56:43,920
individual outbound Transitions and also

2762
01:56:43,920 --> 01:56:47,520
a group of 30 and one girl as well

2763
01:56:47,520 --> 01:56:48,420
um

2764
01:56:48,420 --> 01:56:50,100
I hope that answers your question Jeremy

2765
01:56:50,100 --> 01:56:53,040
uh Hazel has asked you mentioned that

2766
01:56:53,040 --> 01:56:55,440
you're an Ebro operator is this

2767
01:56:55,440 --> 01:56:57,060
something that you normally have had to

2768
01:56:57,060 --> 01:56:59,100
do often anything in particular that

2769
01:56:59,100 --> 01:57:00,780
stood out to you from participating in

2770
01:57:00,780 --> 01:57:03,060
emergency transitions of gtld Zone

2771
01:57:03,060 --> 01:57:04,739
operations

2772
01:57:04,739 --> 01:57:08,840
um so uh we've been an Eber operator for

2773
01:57:08,840 --> 01:57:11,520
probably about seven or eight years I

2774
01:57:11,520 --> 01:57:13,139
think and in that time we've done one

2775
01:57:13,139 --> 01:57:15,060
live transition

2776
01:57:15,060 --> 01:57:16,800
um we do practices

2777
01:57:16,800 --> 01:57:19,139
um several times a year

2778
01:57:19,139 --> 01:57:21,840
um so so we're well practicing doing it

2779
01:57:21,840 --> 01:57:22,860
and actually we made a lot of changes

2780
01:57:22,860 --> 01:57:24,840
recently to add automation using uh

2781
01:57:24,840 --> 01:57:27,119
using ansible so we we've recently done

2782
01:57:27,119 --> 01:57:29,760
a practice in literally last in about

2783
01:57:29,760 --> 01:57:31,560
three weeks ago because we added a lot

2784
01:57:31,560 --> 01:57:33,599
of ansible automation

2785
01:57:33,599 --> 01:57:34,679
um

2786
01:57:34,679 --> 01:57:36,719
anything particular that's about you in

2787
01:57:36,719 --> 01:57:38,400
particularly emergency transitions I

2788
01:57:38,400 --> 01:57:39,900
think I think what stands out really is

2789
01:57:39,900 --> 01:57:41,940
the fact that we we have to transition

2790
01:57:41,940 --> 01:57:45,239
DNS in within four hours which uh which

2791
01:57:45,239 --> 01:57:46,860
um obviously means you've got to be

2792
01:57:46,860 --> 01:57:50,880
really have the operation uh operations

2793
01:57:50,880 --> 01:57:53,880
automated and well practiced

2794
01:57:53,880 --> 01:57:56,280
um you get four hours to do the the DNS

2795
01:57:56,280 --> 01:57:58,619
Transit DNS and dnsic transition in and

2796
01:57:58,619 --> 01:58:02,219
he gets 72 hours to bring the um the the

2797
01:58:02,219 --> 01:58:04,800
um uh database in

2798
01:58:04,800 --> 01:58:08,580
um so I think that is the uh thing

2799
01:58:08,580 --> 01:58:11,820
um Brian Dixon has asked to presumably

2800
01:58:11,820 --> 01:58:13,739
the entire procedure can be backed out

2801
01:58:13,739 --> 01:58:16,920
by reversing the steps at any stage have

2802
01:58:16,920 --> 01:58:18,780
the rollback procedures ever been tested

2803
01:58:18,780 --> 01:58:21,000
on the live TLD

2804
01:58:21,000 --> 01:58:21,659
um

2805
01:58:21,659 --> 01:58:23,340
good question

2806
01:58:23,340 --> 01:58:25,320
um yes I think we could back it all out

2807
01:58:25,320 --> 01:58:27,420
I think we designed it that way

2808
01:58:27,420 --> 01:58:29,219
um no I don't think we've ever trusted

2809
01:58:29,219 --> 01:58:31,320
it on a live TLD

2810
01:58:31,320 --> 01:58:34,080
um obviously that's difficult to do on a

2811
01:58:34,080 --> 01:58:36,480
live together maybe something we we

2812
01:58:36,480 --> 01:58:38,340
should told where I can about at some

2813
01:58:38,340 --> 01:58:41,099
point is having a test a test TLD in the

2814
01:58:41,099 --> 01:58:42,179
route to do this kind of thing I think

2815
01:58:42,179 --> 01:58:43,440
that'll be really really useful because

2816
01:58:43,440 --> 01:58:45,540
every time we do a test we do it on a on

2817
01:58:45,540 --> 01:58:47,400
a test TLD that's not in the room which

2818
01:58:47,400 --> 01:58:49,860
obviously is not completely

2819
01:58:49,860 --> 01:58:50,699
um

2820
01:58:50,699 --> 01:58:52,820
um

2821
01:58:53,159 --> 01:58:55,440
um respect completely the same as doing

2822
01:58:55,440 --> 01:58:57,840
it for real

2823
01:58:57,840 --> 01:59:00,900
um Chandra has asked uh assuming those

2824
01:59:00,900 --> 01:59:02,699
transitions do not happen very often do

2825
01:59:02,699 --> 01:59:04,320
you run mocked transition to each other

2826
01:59:04,320 --> 01:59:05,580
process will not break from one

2827
01:59:05,580 --> 01:59:07,380
transition to the other and that

2828
01:59:07,380 --> 01:59:09,360
operates will not cause instance yes we

2829
01:59:09,360 --> 01:59:10,199
do

2830
01:59:10,199 --> 01:59:13,080
um mock transitions using a

2831
01:59:13,080 --> 01:59:14,179
um

2832
01:59:14,179 --> 01:59:20,400
an example pld uh multiple times a year

2833
01:59:20,400 --> 01:59:22,800
um we we have a team of people and we

2834
01:59:22,800 --> 01:59:24,060
have a team of people that work to

2835
01:59:24,060 --> 01:59:26,219
manage these and a team of Engineers

2836
01:59:26,219 --> 01:59:28,199
that that work on them and every time

2837
01:59:28,199 --> 01:59:31,619
somebody leaves or or is added to that

2838
01:59:31,619 --> 01:59:33,719
group you want to test basically and

2839
01:59:33,719 --> 01:59:35,159
that happens you know multiple times a

2840
01:59:35,159 --> 01:59:36,760
year

2841
01:59:36,760 --> 01:59:37,440
[Music]

2842
01:59:37,440 --> 01:59:39,239
um

2843
01:59:39,239 --> 01:59:42,060
Paul says not a question please don't

2844
01:59:42,060 --> 01:59:45,599
write this in the ATF an icon process

2845
01:59:45,599 --> 01:59:46,800
um

2846
01:59:46,800 --> 01:59:49,199
Paul I'd really be I really appreciate a

2847
01:59:49,199 --> 01:59:51,540
chat with about this afterwards uh uh

2848
01:59:51,540 --> 01:59:53,639
I'll drop you an email

2849
01:59:53,639 --> 01:59:56,699
um PM evzek question I've got everything

2850
01:59:56,699 --> 01:59:58,080
I'm feeling I'm running out of time so

2851
01:59:58,080 --> 02:00:00,119
I'm going to go quickly here since the

2852
02:00:00,119 --> 02:00:01,560
transition has obvious possible

2853
02:00:01,560 --> 02:00:04,020
consequences on resolutions could it

2854
02:00:04,020 --> 02:00:06,659
shouldn't it be addressed in the term of

2855
02:00:06,659 --> 02:00:08,699
best practice document said to buy icon

2856
02:00:08,699 --> 02:00:11,580
security and stability group even if

2857
02:00:11,580 --> 02:00:13,619
it's strictly for gtlz's but can be used

2858
02:00:13,619 --> 02:00:17,040
for inspiration by others

2859
02:00:17,040 --> 02:00:19,980
um perfectly happy to um to to talk to

2860
02:00:19,980 --> 02:00:22,139
suck about this if uh if people think

2861
02:00:22,139 --> 02:00:24,900
that an S Sac guidance document on this

2862
02:00:24,900 --> 02:00:28,560
would be better than an iot a PCP I'm

2863
02:00:28,560 --> 02:00:30,780
perfectly happy to I know I know people

2864
02:00:30,780 --> 02:00:33,060
in life sucks so if

2865
02:00:33,060 --> 02:00:34,920
um I'm perfectly happy to approaches

2866
02:00:34,920 --> 02:00:37,580
talk about this

2867
02:00:37,679 --> 02:00:40,020
um question from Victor

2868
02:00:40,020 --> 02:00:41,760
um I didn't see you mentioned freezing

2869
02:00:41,760 --> 02:00:43,619
kilo key role lovers on both sides

2870
02:00:43,619 --> 02:00:44,880
during the transition of course the

2871
02:00:44,880 --> 02:00:46,080
algorithm on both those need to

2872
02:00:46,080 --> 02:00:47,580
understand yeah so that is in our

2873
02:00:47,580 --> 02:00:48,719
process I didn't mention that you're

2874
02:00:48,719 --> 02:00:50,040
right Victor but

2875
02:00:50,040 --> 02:00:51,780
um we we do check the algorithms to make

2876
02:00:51,780 --> 02:00:53,099
sure they're the same

2877
02:00:53,099 --> 02:00:56,400
um and we do mention to the um old

2878
02:00:56,400 --> 02:00:58,440
provider that they should not do any

2879
02:00:58,440 --> 02:01:00,599
keywords and we have systems in place to

2880
02:01:00,599 --> 02:01:04,639
check the kilos have happening

2881
02:01:04,739 --> 02:01:07,800
um question from uh Paula

2882
02:01:07,800 --> 02:01:10,260
um did you did you take time gap between

2883
02:01:10,260 --> 02:01:11,820
steps into conservatives when you

2884
02:01:11,820 --> 02:01:13,619
pre-publish and publish the DNS Keys

2885
02:01:13,619 --> 02:01:16,020
yeah one of the things that we um we do

2886
02:01:16,020 --> 02:01:18,239
in all of those files that we produce to

2887
02:01:18,239 --> 02:01:19,679
tell the incumbent operator What

2888
02:01:19,679 --> 02:01:22,199
operations to be to to do is there's

2889
02:01:22,199 --> 02:01:24,780
clear timeline Time Guidelines in all of

2890
02:01:24,780 --> 02:01:27,659
those bits to say stop this at this

2891
02:01:27,659 --> 02:01:29,219
stage stop and wait this amount of time

2892
02:01:29,219 --> 02:01:32,340
and don't carry on until this time has

2893
02:01:32,340 --> 02:01:35,179
um disappeared

2894
02:01:35,460 --> 02:01:38,099
um and then lastly Rick has commented I

2895
02:01:38,099 --> 02:01:40,860
don't think this is good for S sack so

2896
02:01:40,860 --> 02:01:42,599
so I've had somebody says nothing's got

2897
02:01:42,599 --> 02:01:44,280
breast attack I said Somebody's it's not

2898
02:01:44,280 --> 02:01:45,780
his scope for ITF

2899
02:01:45,780 --> 02:01:46,920
um I'd really like to get somebody

2900
02:01:46,920 --> 02:01:49,139
feedback on what people think it is in

2901
02:01:49,139 --> 02:01:51,300
scope for and feel free to drop me an

2902
02:01:51,300 --> 02:01:52,320
email

2903
02:01:52,320 --> 02:01:54,540
um or a maximize message or not thank

2904
02:01:54,540 --> 02:01:56,460
you very much everybody and I'll um I'll

2905
02:01:56,460 --> 02:01:59,659
let the next speaker get on

2906
02:02:04,980 --> 02:02:07,800
uh here's the agenda for the

2907
02:02:07,800 --> 02:02:09,960
presentation there'll be some background

2908
02:02:09,960 --> 02:02:12,239
around DNS cache poisoning what kind of

2909
02:02:12,239 --> 02:02:16,080
issues there are and what mitigations

2910
02:02:16,080 --> 02:02:17,420
are available

2911
02:02:17,420 --> 02:02:20,340
then some summary of how Google public

2912
02:02:20,340 --> 02:02:23,400
DNS operates at a very basic level and

2913
02:02:23,400 --> 02:02:25,139
then the countermeasures we have

2914
02:02:25,139 --> 02:02:27,960
implemented and how well they have

2915
02:02:27,960 --> 02:02:30,420
worked and what coverage we get and I'll

2916
02:02:30,420 --> 02:02:33,119
conclude with some remarks on

2917
02:02:33,119 --> 02:02:36,119
our effort and what we think could be

2918
02:02:36,119 --> 02:02:38,839
done in the future

2919
02:02:40,860 --> 02:02:45,480
so RFC 3833 was the first one way back

2920
02:02:45,480 --> 02:02:48,980
into 2000s which discussed this issue

2921
02:02:48,980 --> 02:02:52,920
there's a number of ways that DNS

2922
02:02:52,920 --> 02:02:54,719
queries between the resolver and

2923
02:02:54,719 --> 02:02:57,060
authoritative could be attacked and

2924
02:02:57,060 --> 02:03:01,860
bad answers populated into the cache and

2925
02:03:01,860 --> 02:03:04,500
of course the easiest one if an attacker

2926
02:03:04,500 --> 02:03:07,139
can do it is being on path if you're on

2927
02:03:07,139 --> 02:03:09,719
path it's essentially game over for UDP

2928
02:03:09,719 --> 02:03:12,500
queries and unless you are able to

2929
02:03:12,500 --> 02:03:14,760
encrypt the transport there's nothing to

2930
02:03:14,760 --> 02:03:17,820
be done uh the other one which the

2931
02:03:17,820 --> 02:03:20,699
Kaminsky attack pointed out was passive

2932
02:03:20,699 --> 02:03:23,580
spoofing and as long as you can guess

2933
02:03:23,580 --> 02:03:26,460
the query and get an answer to be

2934
02:03:26,460 --> 02:03:29,820
accepted by the resolver that that can

2935
02:03:29,820 --> 02:03:31,679
result in a successful attack

2936
02:03:31,679 --> 02:03:33,000
uh

2937
02:03:33,000 --> 02:03:35,219
uh there are others listed there but

2938
02:03:35,219 --> 02:03:38,340
those are not the focus of this

2939
02:03:38,340 --> 02:03:40,820
presentation

2940
02:03:43,080 --> 02:03:45,179
as I just mentioned the most of the

2941
02:03:45,179 --> 02:03:48,900
spoofing is relevant for UDP because it

2942
02:03:48,900 --> 02:03:51,000
can be done off path it really just

2943
02:03:51,000 --> 02:03:53,040
requires the attacker to generate a lot

2944
02:03:53,040 --> 02:03:54,060
of

2945
02:03:54,060 --> 02:03:57,060
fake responses which are likely to match

2946
02:03:57,060 --> 02:03:59,099
the queries which have been sent

2947
02:03:59,099 --> 02:04:01,920
and the conditions for a successful

2948
02:04:01,920 --> 02:04:03,599
spoofing

2949
02:04:03,599 --> 02:04:05,880
you have to either be able to force

2950
02:04:05,880 --> 02:04:07,619
queries which is relatively easy to do

2951
02:04:07,619 --> 02:04:10,560
or you have to guess when a resolver is

2952
02:04:10,560 --> 02:04:14,280
gonna send a query by some other means

2953
02:04:14,280 --> 02:04:17,580
and for a response to be success a fake

2954
02:04:17,580 --> 02:04:19,860
response to be accepted as the real

2955
02:04:19,860 --> 02:04:23,159
answer it has of course to match the

2956
02:04:23,159 --> 02:04:26,159
question section the query ID in the DNS

2957
02:04:26,159 --> 02:04:29,159
query and

2958
02:04:29,159 --> 02:04:31,800
the destination address and the port

2959
02:04:31,800 --> 02:04:33,840
basically the five Tuple

2960
02:04:33,840 --> 02:04:37,139
in terms of tcpip

2961
02:04:37,139 --> 02:04:39,300
and of course the response has to arrive

2962
02:04:39,300 --> 02:04:42,440
before the real answer arrives

2963
02:04:42,440 --> 02:04:45,540
in that case if the authoritative is

2964
02:04:45,540 --> 02:04:47,280
further away from the resolver that

2965
02:04:47,280 --> 02:04:48,960
makes it easier too

2966
02:04:48,960 --> 02:04:53,239
get the fake answers into the cache

2967
02:04:53,520 --> 02:04:54,840
uh

2968
02:04:54,840 --> 02:04:57,599
I basically taken what's mentioned in

2969
02:04:57,599 --> 02:05:00,780
RFC 5452 in terms of the math and the

2970
02:05:00,780 --> 02:05:02,040
probability of an attack being

2971
02:05:02,040 --> 02:05:04,739
successful I'm not going to get into the

2972
02:05:04,739 --> 02:05:07,940
math but the key point is that

2973
02:05:07,940 --> 02:05:10,139
based on what was

2974
02:05:10,139 --> 02:05:14,099
common in the mid to late mid 2000s I

2975
02:05:14,099 --> 02:05:14,760
believe

2976
02:05:14,760 --> 02:05:17,460
uh and if you were not randomizing the

2977
02:05:17,460 --> 02:05:18,719
source port

2978
02:05:18,719 --> 02:05:22,820
it was very easy to spoof a response

2979
02:05:22,820 --> 02:05:26,219
and if you were using

2980
02:05:26,219 --> 02:05:28,199
short details because you wanted to be

2981
02:05:28,199 --> 02:05:30,960
able to change answers faster the attack

2982
02:05:30,960 --> 02:05:34,440
window was even significantly wider and

2983
02:05:34,440 --> 02:05:37,500
yes as the slide says you could you had

2984
02:05:37,500 --> 02:05:39,719
a 50 probability of succeeding within

2985
02:05:39,719 --> 02:05:43,099
three hours which is pretty bad

2986
02:05:43,099 --> 02:05:47,880
and so RFC 5452 also described some

2987
02:05:47,880 --> 02:05:50,219
countermeasures to protect against the

2988
02:05:50,219 --> 02:05:54,360
attacks and at this point I believe most

2989
02:05:54,360 --> 02:05:58,500
tax implement this so

2990
02:05:59,219 --> 02:06:01,320
we are reasonably well protected against

2991
02:06:01,320 --> 02:06:04,020
attacks uh

2992
02:06:04,020 --> 02:06:06,360
the most important one here is

2993
02:06:06,360 --> 02:06:09,380
randomizing the query ID because the 16

2994
02:06:09,380 --> 02:06:13,020
I'm sorry the query IDs should be

2995
02:06:13,020 --> 02:06:16,860
randomized and that's 16 bits and in

2996
02:06:16,860 --> 02:06:19,380
addition using the

2997
02:06:19,380 --> 02:06:22,139
different Source ports for any pending

2998
02:06:22,139 --> 02:06:24,239
queries between the two of them that

2999
02:06:24,239 --> 02:06:26,520
gives you about 32 bits of protection

3000
02:06:26,520 --> 02:06:29,460
give or take and

3001
02:06:29,460 --> 02:06:32,639
as the math on this page shows the

3002
02:06:32,639 --> 02:06:34,320
probability of an attack succeeding

3003
02:06:34,320 --> 02:06:36,960
significantly goes down so generally

3004
02:06:36,960 --> 02:06:38,880
speaking

3005
02:06:38,880 --> 02:06:40,980
if you're not a large service and there

3006
02:06:40,980 --> 02:06:43,560
are not other considerations this gives

3007
02:06:43,560 --> 02:06:47,060
you most of the protection

3008
02:06:48,679 --> 02:06:52,320
and also to add since that RFC was

3009
02:06:52,320 --> 02:06:54,119
written there's a couple more things

3010
02:06:54,119 --> 02:06:56,820
which can help us with

3011
02:06:56,820 --> 02:07:00,139
Protection One is of course DNS cookies

3012
02:07:00,139 --> 02:07:04,139
which after the edition of making sure

3013
02:07:04,139 --> 02:07:06,780
that they are compatible across

3014
02:07:06,780 --> 02:07:08,099
different platforms or different

3015
02:07:08,099 --> 02:07:12,420
implementations that is gives you 64

3016
02:07:12,420 --> 02:07:14,820
bits of protection and that makes it

3017
02:07:14,820 --> 02:07:16,679
even harder for anyone to spoof

3018
02:07:16,679 --> 02:07:19,500
responses in addition while we talk

3019
02:07:19,500 --> 02:07:22,440
about authoritative DNS over TLS or DNS

3020
02:07:22,440 --> 02:07:25,679
over quick for privacy reasons it of

3021
02:07:25,679 --> 02:07:28,560
course helps prevent spoofing attacks

3022
02:07:28,560 --> 02:07:30,679
too

3023
02:07:31,080 --> 02:07:34,800
okay just a quick summary of Google

3024
02:07:34,800 --> 02:07:37,020
public DNS in terms of how our

3025
02:07:37,020 --> 02:07:40,080
resolution works

3026
02:07:40,080 --> 02:07:41,580
uh

3027
02:07:41,580 --> 02:07:44,280
the resolver as people here mostly know

3028
02:07:44,280 --> 02:07:46,619
it's replicated across a lot of metros

3029
02:07:46,619 --> 02:07:49,619
around the world in each Metro again we

3030
02:07:49,619 --> 02:07:50,460
have

3031
02:07:50,460 --> 02:07:52,619
a reasonably large number of servers

3032
02:07:52,619 --> 02:07:55,880
easily in the tens maybe more than that

3033
02:07:55,880 --> 02:07:59,940
and that means that while we dedo

3034
02:07:59,940 --> 02:08:02,159
queries outbound queries for the same

3035
02:08:02,159 --> 02:08:04,380
name and the same type

3036
02:08:04,380 --> 02:08:07,679
on a single server we since we like to

3037
02:08:07,679 --> 02:08:10,199
run this service without having shared

3038
02:08:10,199 --> 02:08:11,900
cash across servers we do not

3039
02:08:11,900 --> 02:08:14,880
deduplicate the requests across multiple

3040
02:08:14,880 --> 02:08:18,000
servers and the additional thing we have

3041
02:08:18,000 --> 02:08:22,980
is we use edns client subnet to Geo

3042
02:08:22,980 --> 02:08:25,920
Target answers for different uh client

3043
02:08:25,920 --> 02:08:29,219
IPS that again expands the range of

3044
02:08:29,219 --> 02:08:31,980
queries for the name and RR type which

3045
02:08:31,980 --> 02:08:34,260
could be pending at the same time so

3046
02:08:34,260 --> 02:08:35,880
these two things combined means

3047
02:08:35,880 --> 02:08:38,040
effectively we'll have we can have a lot

3048
02:08:38,040 --> 02:08:40,560
of queries pending at one time

3049
02:08:40,560 --> 02:08:42,239
and

3050
02:08:42,239 --> 02:08:46,260
uh in the sub bullet there

3051
02:08:46,260 --> 02:08:48,599
that is I think the weakness which is

3052
02:08:48,599 --> 02:08:52,080
there is that an answer to an edns

3053
02:08:52,080 --> 02:08:54,840
client subnet query without ECS and the

3054
02:08:54,840 --> 02:08:56,040
response

3055
02:08:56,040 --> 02:08:59,940
which again shrinks back the the

3056
02:08:59,940 --> 02:09:03,659
random bits in the query can be used to

3057
02:09:03,659 --> 02:09:05,699
match against any of the pending ECS

3058
02:09:05,699 --> 02:09:09,480
queries and for obvious reasons I have

3059
02:09:09,480 --> 02:09:11,820
not put any math here but this does

3060
02:09:11,820 --> 02:09:14,219
increase the exposure that's Google

3061
02:09:14,219 --> 02:09:19,159
public DNS has for spoofing

3062
02:09:20,639 --> 02:09:21,719
okay

3063
02:09:21,719 --> 02:09:23,940
so

3064
02:09:23,940 --> 02:09:27,060
at a if you just start looking at this

3065
02:09:27,060 --> 02:09:28,860
the obvious thing would be that let's

3066
02:09:28,860 --> 02:09:31,679
implement the RFC 5452 countermeasures

3067
02:09:31,679 --> 02:09:36,360
and do DNS cookies and we are done

3068
02:09:36,360 --> 02:09:38,760
unfortunately like a lot of things on

3069
02:09:38,760 --> 02:09:40,380
the internet that's it's not as simple

3070
02:09:40,380 --> 02:09:44,900
as that uh we went before

3071
02:09:44,900 --> 02:09:47,580
we did cookies we went and looked at

3072
02:09:47,580 --> 02:09:49,320
what is the coverage for cookies and

3073
02:09:49,320 --> 02:09:51,420
other features on the authoritative

3074
02:09:51,420 --> 02:09:54,020
servers

3075
02:09:54,420 --> 02:09:58,320
okay A little segue here to how we

3076
02:09:58,320 --> 02:10:01,860
determine that we look at our outbound

3077
02:10:01,860 --> 02:10:04,260
query logs to figure out what are the

3078
02:10:04,260 --> 02:10:06,000
top name servers in the world the live

3079
02:10:06,000 --> 02:10:08,360
ones if they're dead it doesn't matter

3080
02:10:08,360 --> 02:10:10,920
uh and they're getting a reasonable

3081
02:10:10,920 --> 02:10:13,560
amount of query volume and we take the

3082
02:10:13,560 --> 02:10:16,440
top 1 million servers and we run probes

3083
02:10:16,440 --> 02:10:20,360
for various DNS features to them from

3084
02:10:20,360 --> 02:10:25,159
our data centers in central us

3085
02:10:27,300 --> 02:10:29,219
and here are the numbers

3086
02:10:29,219 --> 02:10:30,300
uh

3087
02:10:30,300 --> 02:10:32,400
for

3088
02:10:32,400 --> 02:10:34,920
for comparison basically also showing

3089
02:10:34,920 --> 02:10:38,340
the numbers for edns0 support and ECS

3090
02:10:38,340 --> 02:10:40,440
support uh

3091
02:10:40,440 --> 02:10:42,420
and you can see as you can see DNS

3092
02:10:42,420 --> 02:10:45,360
cookies are supported for really only 12

3093
02:10:45,360 --> 02:10:47,820
of the outbound traffic we have

3094
02:10:47,820 --> 02:10:50,219
uh

3095
02:10:50,219 --> 02:10:52,560
even though that looks bad I think there

3096
02:10:52,560 --> 02:10:55,380
is hope in the sense that ECS is

3097
02:10:55,380 --> 02:10:58,560
supported by about 48 of the service and

3098
02:10:58,560 --> 02:11:00,619
about 95 percent of the traffic volume

3099
02:11:00,619 --> 02:11:03,119
which means that these servers are

3100
02:11:03,119 --> 02:11:05,940
relatively new these are not operators

3101
02:11:05,940 --> 02:11:08,540
running really really old code

3102
02:11:08,540 --> 02:11:11,099
so it should be relatively

3103
02:11:11,099 --> 02:11:13,260
straightforward if they want you to add

3104
02:11:13,260 --> 02:11:16,739
DNS cookie support there

3105
02:11:16,739 --> 02:11:18,960
okay

3106
02:11:18,960 --> 02:11:21,300
so now we'll talk a bit about the

3107
02:11:21,300 --> 02:11:23,880
countermeasures that Google public DNS

3108
02:11:23,880 --> 02:11:25,619
has implemented

3109
02:11:25,619 --> 02:11:29,239
uh we do most of what's mentioned in RFC

3110
02:11:29,239 --> 02:11:32,400
5452 in addition

3111
02:11:32,400 --> 02:11:33,780
uh

3112
02:11:33,780 --> 02:11:36,420
we have implemented support for DNS

3113
02:11:36,420 --> 02:11:37,500
cookies

3114
02:11:37,500 --> 02:11:40,320
at the moment due to some issues which

3115
02:11:40,320 --> 02:11:42,179
we encountered which I'll talk about in

3116
02:11:42,179 --> 02:11:43,920
the later slides we have not enabled it

3117
02:11:43,920 --> 02:11:46,560
like fully or in an auto detection mode

3118
02:11:46,560 --> 02:11:49,020
we've only enabled it for a handful of

3119
02:11:49,020 --> 02:11:52,739
large servers where we we are sure that

3120
02:11:52,739 --> 02:11:55,619
the implementation is working correctly

3121
02:11:55,619 --> 02:11:58,020
in addition uh

3122
02:11:58,020 --> 02:12:00,840
we also Implement case randomization

3123
02:12:00,840 --> 02:12:03,860
which is described in an expired draft

3124
02:12:03,860 --> 02:12:05,639
linked here

3125
02:12:05,639 --> 02:12:07,139
uh

3126
02:12:07,139 --> 02:12:10,440
and as the slide shows it's very

3127
02:12:10,440 --> 02:12:13,080
basically if there is a letter in the

3128
02:12:13,080 --> 02:12:15,480
name to be queried you just randomly

3129
02:12:15,480 --> 02:12:18,000
flip the bit on it that basically gives

3130
02:12:18,000 --> 02:12:20,280
us a few extra bits of protection

3131
02:12:20,280 --> 02:12:22,380
and uh

3132
02:12:22,380 --> 02:12:24,840
for names which are within a registered

3133
02:12:24,840 --> 02:12:26,460
domain this will

3134
02:12:26,460 --> 02:12:29,520
assume something like google.com it'll

3135
02:12:29,520 --> 02:12:32,520
give you 10 bits of randomization in the

3136
02:12:32,520 --> 02:12:34,739
query of course it's not very useful for

3137
02:12:34,739 --> 02:12:37,679
root or tlds because they really are not

3138
02:12:37,679 --> 02:12:41,300
that many letters in that

3139
02:12:41,340 --> 02:12:43,739
in attention as some of the root

3140
02:12:43,739 --> 02:12:46,440
operators have noticed we will for

3141
02:12:46,440 --> 02:12:50,000
queries to root and tlds we

3142
02:12:50,000 --> 02:12:55,500
prefix them with a nonce which is

3143
02:12:55,500 --> 02:13:00,300
yeah it is 64 bits and

3144
02:13:00,300 --> 02:13:03,179
we use that again gives us more

3145
02:13:03,179 --> 02:13:04,860
protection for

3146
02:13:04,860 --> 02:13:09,619
queries to the top of the DNS tree

3147
02:13:13,619 --> 02:13:16,699
and yes we at the moment we do perform

3148
02:13:16,699 --> 02:13:19,980
DNS over TLS either by manual

3149
02:13:19,980 --> 02:13:22,920
configuration and over the last few

3150
02:13:22,920 --> 02:13:26,119
months by unilateral probing

3151
02:13:26,119 --> 02:13:29,400
and for the two we use slightly

3152
02:13:29,400 --> 02:13:30,840
different ways to decide how much

3153
02:13:30,840 --> 02:13:32,880
traffic to send over them for manual

3154
02:13:32,880 --> 02:13:36,540
configuration we will send all the

3155
02:13:36,540 --> 02:13:39,420
traffic over TLS except if we hit issues

3156
02:13:39,420 --> 02:13:42,179
then we'll fall back to UDP and for the

3157
02:13:42,179 --> 02:13:44,300
ones where we are detecting

3158
02:13:44,300 --> 02:13:48,840
dot is available by probing we are much

3159
02:13:48,840 --> 02:13:51,540
more conservative we'll try to balance

3160
02:13:51,540 --> 02:13:55,440
equally across UDP and TLS there and

3161
02:13:55,440 --> 02:13:57,179
this is primarily because we we don't

3162
02:13:57,179 --> 02:13:59,820
have a good idea how much query volume

3163
02:13:59,820 --> 02:14:03,019
the service could support

3164
02:14:04,440 --> 02:14:07,860
and the results are encouraging both for

3165
02:14:07,860 --> 02:14:09,560
manually configured

3166
02:14:09,560 --> 02:14:13,679
dot as well as for unilateral probing we

3167
02:14:13,679 --> 02:14:18,239
can see that usually dot is

3168
02:14:18,239 --> 02:14:20,820
by a very small percentage better than

3169
02:14:20,820 --> 02:14:23,940
UDP in terms of success rate and latency

3170
02:14:23,940 --> 02:14:27,000
wise it will be within

3171
02:14:27,000 --> 02:14:30,119
its variable across operators but it's

3172
02:14:30,119 --> 02:14:33,360
within the statistical margins like for

3173
02:14:33,360 --> 02:14:36,000
example I can code for one of the root

3174
02:14:36,000 --> 02:14:38,880
servers it's typically like 1.9

3175
02:14:38,880 --> 02:14:43,079
milliseconds over UDP and for TLS it's

3176
02:14:43,079 --> 02:14:47,099
within 1.9 to 2 milliseconds so

3177
02:14:47,099 --> 02:14:49,560
we are not seeing any significantly

3178
02:14:49,560 --> 02:14:52,260
latency increase there

3179
02:14:52,260 --> 02:14:54,800
okay

3180
02:14:58,739 --> 02:15:01,679
okay and this is about okay we do these

3181
02:15:01,679 --> 02:15:04,079
mitigations what do we do if we detect a

3182
02:15:04,079 --> 02:15:07,139
problem and generally

3183
02:15:07,139 --> 02:15:10,260
the times when we see the uh

3184
02:15:10,260 --> 02:15:12,960
suspicious response is small enough

3185
02:15:12,960 --> 02:15:17,099
that we fall back to retrying over TCP

3186
02:15:17,099 --> 02:15:21,060
and that usually works as long as the

3187
02:15:21,060 --> 02:15:24,500
domains do support TCP

3188
02:15:25,020 --> 02:15:29,219
and for TLS their

3189
02:15:30,119 --> 02:15:33,119
we just load balanced queries or retry

3190
02:15:33,119 --> 02:15:34,980
across all the name servers and

3191
02:15:34,980 --> 02:15:37,679
endpoints we know for that zone and it's

3192
02:15:37,679 --> 02:15:40,920
the usual uh what do you do when I query

3193
02:15:40,920 --> 02:15:43,079
to a name server times out it's that

3194
02:15:43,079 --> 02:15:47,059
level of free drive for TLS

3195
02:15:47,340 --> 02:15:49,800
okay so this is kind of the fun and

3196
02:15:49,800 --> 02:15:51,960
frustrating part of doing anything on

3197
02:15:51,960 --> 02:15:54,960
the on a large scale uh

3198
02:15:54,960 --> 02:15:57,239
it's really to give a flavor of the kind

3199
02:15:57,239 --> 02:15:59,340
of issues we encountered when we

3200
02:15:59,340 --> 02:16:02,280
implemented these countermeasures

3201
02:16:02,280 --> 02:16:04,280
um

3202
02:16:09,000 --> 02:16:13,920
so for when we did DNS cookies the the

3203
02:16:13,920 --> 02:16:16,560
most common issue we see is that the

3204
02:16:16,560 --> 02:16:19,320
name server responds with a

3205
02:16:19,320 --> 02:16:22,739
R code which is not success and

3206
02:16:22,739 --> 02:16:26,099
if we are also doing ECS to the same

3207
02:16:26,099 --> 02:16:27,840
name server and we haven't confirmed

3208
02:16:27,840 --> 02:16:29,699
support for either of those two protocol

3209
02:16:29,699 --> 02:16:31,800
features then it's very hard to

3210
02:16:31,800 --> 02:16:34,558
determine did the server not like option

3211
02:16:34,558 --> 02:16:38,218
DNS cookie or ECS or both or something

3212
02:16:38,218 --> 02:16:41,638
else happened and so the signal it's a

3213
02:16:41,638 --> 02:16:43,558
much harder signal to get out of that

3214
02:16:43,558 --> 02:16:46,439
and the problem is the

3215
02:16:46,439 --> 02:16:49,138
uh query volumes may not be high enough

3216
02:16:49,138 --> 02:16:52,200
to that name server to build a signal

3217
02:16:52,200 --> 02:16:54,240
easily over time in a short period of

3218
02:16:54,240 --> 02:16:55,978
time

3219
02:16:55,978 --> 02:16:58,519
so

3220
02:16:58,859 --> 02:17:02,340
and the the bullet number three is the

3221
02:17:02,340 --> 02:17:04,439
one which is most problematic for us is

3222
02:17:04,439 --> 02:17:07,620
that sometimes some names will mostly be

3223
02:17:07,620 --> 02:17:10,500
responding with DNS cookies but

3224
02:17:10,500 --> 02:17:12,898
once in a while occasionally they will

3225
02:17:12,898 --> 02:17:15,478
not send us back a cookie and it doesn't

3226
02:17:15,478 --> 02:17:17,099
look like an attack meaning from our

3227
02:17:17,099 --> 02:17:20,099
analysis but it just they don't respond

3228
02:17:20,099 --> 02:17:22,620
with the cookie and that's very hard to

3229
02:17:22,620 --> 02:17:24,978
dissemble great in the real world from

3230
02:17:24,978 --> 02:17:26,939
an attack

3231
02:17:26,939 --> 02:17:29,519
ah we can only guess why it's happening

3232
02:17:29,519 --> 02:17:32,160
maybe their anycast is not stable or

3233
02:17:32,160 --> 02:17:33,359
they are running multiple

3234
02:17:33,359 --> 02:17:37,340
implementations in the same Data Center

3235
02:17:40,760 --> 02:17:46,200
again uh case randomization again we hit

3236
02:17:46,200 --> 02:17:48,898
some issues but the situation is better

3237
02:17:48,898 --> 02:17:50,879
here in the sense that

3238
02:17:50,879 --> 02:17:54,379
fewer number of servers are

3239
02:17:54,379 --> 02:17:57,840
affected by the problem

3240
02:17:57,840 --> 02:18:00,240
and the most common one is that the case

3241
02:18:00,240 --> 02:18:05,218
randomization is lost in the response uh

3242
02:18:05,218 --> 02:18:07,320
and but there's still a very small

3243
02:18:07,320 --> 02:18:09,540
number of cases where we do end up the

3244
02:18:09,540 --> 02:18:12,000
server things this is not a valid name

3245
02:18:12,000 --> 02:18:14,340
and therefore it responds with a failure

3246
02:18:14,340 --> 02:18:16,439
code

3247
02:18:16,439 --> 02:18:19,620
and the other thing uh I thought I would

3248
02:18:19,620 --> 02:18:21,478
just mention it and this was

3249
02:18:21,478 --> 02:18:24,240
also what triggered uh the thread

3250
02:18:24,240 --> 02:18:27,120
yesterday is once you know due to the

3251
02:18:27,120 --> 02:18:30,359
specifics are of our implementation uh

3252
02:18:30,359 --> 02:18:34,019
if a UDP response is truncated and it's

3253
02:18:34,019 --> 02:18:35,280
malformed

3254
02:18:35,280 --> 02:18:37,379
we are considering that we'll just throw

3255
02:18:37,379 --> 02:18:39,780
away that response because it can happen

3256
02:18:39,780 --> 02:18:42,359
that for example the DNS cookie in the

3257
02:18:42,359 --> 02:18:44,459
options May no longer be present if the

3258
02:18:44,459 --> 02:18:47,280
response is malformed and we lose some

3259
02:18:47,280 --> 02:18:49,859
of the protection that way so we made

3260
02:18:49,859 --> 02:18:52,620
the decision to drop those packets

3261
02:18:52,620 --> 02:18:57,000
and uh it interacts badly with r case

3262
02:18:57,000 --> 02:18:59,218
managing when we go back and double

3263
02:18:59,218 --> 02:19:02,839
check that the name is okay

3264
02:19:03,780 --> 02:19:05,939
okay

3265
02:19:05,939 --> 02:19:08,218
so this slide I think is the key slide

3266
02:19:08,218 --> 02:19:10,679
here it talks about what kind of

3267
02:19:10,679 --> 02:19:12,540
coverage we can get if we were to

3268
02:19:12,540 --> 02:19:15,359
maximally deploy all these protections

3269
02:19:15,359 --> 02:19:18,359
and again the ECS and edns numbers are

3270
02:19:18,359 --> 02:19:21,500
there just for comparison

3271
02:19:22,138 --> 02:19:24,840
DNS cookies unfortunately will only give

3272
02:19:24,840 --> 02:19:26,939
us about 12 percent of traffic

3273
02:19:26,939 --> 02:19:28,200
protection

3274
02:19:28,200 --> 02:19:31,439
uh there are a number of root and TLD

3275
02:19:31,439 --> 02:19:33,780
operators who have started supporting

3276
02:19:33,780 --> 02:19:36,540
cookies so thank you that's where I

3277
02:19:36,540 --> 02:19:38,218
think the value of cookie protection is

3278
02:19:38,218 --> 02:19:40,518
the most

3279
02:19:40,679 --> 02:19:43,260
and the good news though is that with

3280
02:19:43,260 --> 02:19:45,780
case randomization we can get to about

3281
02:19:45,780 --> 02:19:50,100
99 or so of the traffic volume over UDP

3282
02:19:50,100 --> 02:19:52,200
which is great

3283
02:19:52,200 --> 02:19:53,640
um

3284
02:19:53,640 --> 02:19:56,520
and DNS over TLS even though it's still

3285
02:19:56,520 --> 02:19:58,859
early days signaling has not been worked

3286
02:19:58,859 --> 02:20:01,200
out and only a few operators are doing

3287
02:20:01,200 --> 02:20:02,040
it

3288
02:20:02,040 --> 02:20:05,520
but we do have

3289
02:20:05,520 --> 02:20:08,220
about anywhere from four to seven

3290
02:20:08,220 --> 02:20:10,140
percent protection depending on which

3291
02:20:10,140 --> 02:20:12,180
servers are up and running on a certain

3292
02:20:12,180 --> 02:20:14,399
day

3293
02:20:14,399 --> 02:20:16,740
okay

3294
02:20:16,740 --> 02:20:19,820
all right some concluding remarks and

3295
02:20:19,820 --> 02:20:22,260
suggestions and then we are open for

3296
02:20:22,260 --> 02:20:24,420
questions

3297
02:20:24,420 --> 02:20:26,760
so the main point I'll not talk through

3298
02:20:26,760 --> 02:20:28,920
all the numbers here again but the main

3299
02:20:28,920 --> 02:20:31,620
point is if we look at the set of

3300
02:20:31,620 --> 02:20:33,359
counter measures that a resolver

3301
02:20:33,359 --> 02:20:36,780
operator could deploy and use you can

3302
02:20:36,780 --> 02:20:39,300
get even with UDP you can get fairly

3303
02:20:39,300 --> 02:20:40,859
close to

3304
02:20:40,859 --> 02:20:45,720
uh like 95 99 of query volume being

3305
02:20:45,720 --> 02:20:48,240
protected which is good meaning ideally

3306
02:20:48,240 --> 02:20:50,100
of course we all want to move to

3307
02:20:50,100 --> 02:20:53,399
encrypted transport dot or doq but until

3308
02:20:53,399 --> 02:20:55,800
that happens having these other

3309
02:20:55,800 --> 02:20:59,720
countermeasures in place is valuable

3310
02:21:02,160 --> 02:21:03,960
okay

3311
02:21:03,960 --> 02:21:06,919
so

3312
02:21:07,260 --> 02:21:09,060
these are the things we are planning to

3313
02:21:09,060 --> 02:21:10,800
do in the short and medium term in this

3314
02:21:10,800 --> 02:21:11,580
space

3315
02:21:11,580 --> 02:21:15,660
basically since we have found

3316
02:21:15,660 --> 02:21:18,420
the DNS over TLS will continue doing

3317
02:21:18,420 --> 02:21:19,859
more

3318
02:21:19,859 --> 02:21:22,260
as time goes by and as more operators

3319
02:21:22,260 --> 02:21:24,899
enable it we'll have that iconspicuously

3320
02:21:24,899 --> 02:21:27,359
left an empty bullet there this is I'm

3321
02:21:27,359 --> 02:21:30,120
sure someone will ask signaling I think

3322
02:21:30,120 --> 02:21:32,580
that's a much broader topic so

3323
02:21:32,580 --> 02:21:35,460
as and when work happens in that space

3324
02:21:35,460 --> 02:21:38,160
we'll be collaborating with others but I

3325
02:21:38,160 --> 02:21:40,260
think it's still too far out to

3326
02:21:40,260 --> 02:21:42,600
Bank on that in terms of

3327
02:21:42,600 --> 02:21:45,960
making having a real impact and

3328
02:21:45,960 --> 02:21:47,700
production

3329
02:21:47,700 --> 02:21:49,800
uh in addition

3330
02:21:49,800 --> 02:21:53,040
we will like to do DNS cookies and case

3331
02:21:53,040 --> 02:21:55,920
randomization more aggressively

3332
02:21:55,920 --> 02:21:59,600
and cover more traffic

3333
02:21:59,760 --> 02:22:02,880
and non-screw fixes are kind of a

3334
02:22:02,880 --> 02:22:04,979
somewhat I wouldn't call it hacky but

3335
02:22:04,979 --> 02:22:07,500
still a non-standard thing so as we get

3336
02:22:07,500 --> 02:22:09,420
more cookie protection we would probably

3337
02:22:09,420 --> 02:22:14,000
turn it off where we can safely

3338
02:22:14,460 --> 02:22:17,040
and some recommendations for

3339
02:22:17,040 --> 02:22:20,300
authoritative operators

3340
02:22:20,460 --> 02:22:23,340
of course if you can Implement cookies

3341
02:22:23,340 --> 02:22:26,160
which I believe most operators should be

3342
02:22:26,160 --> 02:22:29,340
able to because it's really a small

3343
02:22:29,340 --> 02:22:32,880
feature on top of the other DNS protocol

3344
02:22:32,880 --> 02:22:36,479
features if you can that's add 64 bits

3345
02:22:36,479 --> 02:22:37,859
of protections it's relatively

3346
02:22:37,859 --> 02:22:39,120
straightforward

3347
02:22:39,120 --> 02:22:41,520
if you do that it will increase

3348
02:22:41,520 --> 02:22:44,479
protection for everyone

3349
02:22:44,819 --> 02:22:48,359
and of course if you can't do it or even

3350
02:22:48,359 --> 02:22:51,899
otherwise please please follow RFC 8906

3351
02:22:51,899 --> 02:22:54,180
which has a lot of common sense advice

3352
02:22:54,180 --> 02:22:57,180
on how to respond to queries you may not

3353
02:22:57,180 --> 02:23:00,319
uh be able to answer

3354
02:23:00,319 --> 02:23:02,880
or otherwise

3355
02:23:02,880 --> 02:23:05,939
or features which are there in the query

3356
02:23:05,939 --> 02:23:08,819
which you don't support it really helps

3357
02:23:08,819 --> 02:23:11,220
resolve our operators know what an auth

3358
02:23:11,220 --> 02:23:13,260
server supports and

3359
02:23:13,260 --> 02:23:17,479
uh behave accordingly

3360
02:23:17,760 --> 02:23:22,319
and uh yes if you can do DNS over TLS if

3361
02:23:22,319 --> 02:23:26,100
you can justify the overhead that dot or

3362
02:23:26,100 --> 02:23:27,899
doq introduces

3363
02:23:27,899 --> 02:23:30,420
please do start experimenting because it

3364
02:23:30,420 --> 02:23:32,640
will solve not just the cash poisoning

3365
02:23:32,640 --> 02:23:35,880
problem but provide better security

3366
02:23:35,880 --> 02:23:38,700
for all communication between resolvers

3367
02:23:38,700 --> 02:23:40,979
and odds and we are happy to experiment

3368
02:23:40,979 --> 02:23:43,140
with anyone else who's

3369
02:23:43,140 --> 02:23:46,399
thinking of doing that

3370
02:23:47,460 --> 02:23:51,858
thank you and I'll take questions

3371
02:23:53,100 --> 02:23:54,600
there is a there were a few questions

3372
02:23:54,600 --> 02:23:56,880
maybe from uh the way that we asked a

3373
02:23:56,880 --> 02:23:58,500
while back online so I'm going to start

3374
02:23:58,500 --> 02:24:00,240
with Christian

3375
02:24:00,240 --> 02:24:02,819
um Emirates asked

3376
02:24:02,819 --> 02:24:04,800
are their plans to support doq against

3377
02:24:04,800 --> 02:24:07,800
Health name servers via uni unilateral

3378
02:24:07,800 --> 02:24:11,040
probing or some other mechanism

3379
02:24:11,040 --> 02:24:14,280
so we would like to support doq but a

3380
02:24:14,280 --> 02:24:15,960
number of things need to fall in place

3381
02:24:15,960 --> 02:24:18,780
before we can do that so I guess the

3382
02:24:18,780 --> 02:24:21,600
answer is yes but nothing to announce

3383
02:24:21,600 --> 02:24:23,819
yet

3384
02:24:23,819 --> 02:24:27,420
Brian Dixon is asking maybe the cookie

3385
02:24:27,420 --> 02:24:29,640
non-response is different back is

3386
02:24:29,640 --> 02:24:31,740
different back-end servers behind some

3387
02:24:31,740 --> 02:24:34,439
kind of load balances

3388
02:24:34,439 --> 02:24:36,840
potentially yeah

3389
02:24:36,840 --> 02:24:39,720
all right Niels from the esec uh I'm

3390
02:24:39,720 --> 02:24:41,939
wondering if Google public DNS accepts

3391
02:24:41,939 --> 02:24:44,220
fragmented packets and if yes if there

3392
02:24:44,220 --> 02:24:45,660
is some mitigation against fragmentation

3393
02:24:45,660 --> 02:24:47,720
attacks

3394
02:24:47,720 --> 02:24:51,000
uh yes and yes

3395
02:24:51,000 --> 02:24:53,340
in the sense that

3396
02:24:53,340 --> 02:24:56,580
uh at the basically at the network Edge

3397
02:24:56,580 --> 02:24:58,800
basically they have put in common sense

3398
02:24:58,800 --> 02:25:02,640
rules to protect against that one simple

3399
02:25:02,640 --> 02:25:05,040
thing is we do not

3400
02:25:05,040 --> 02:25:07,880
I believe

3401
02:25:10,560 --> 02:25:13,319
handle the the I'm forgetting the word

3402
02:25:13,319 --> 02:25:15,420
for it but the icmp

3403
02:25:15,420 --> 02:25:17,640
message which comes back and says packet

3404
02:25:17,640 --> 02:25:20,580
too big because we know we don't set big

3405
02:25:20,580 --> 02:25:22,200
packets and we don't expect something

3406
02:25:22,200 --> 02:25:25,260
which is bigger than ethernet so we

3407
02:25:25,260 --> 02:25:28,439
reject those icmp messages because most

3408
02:25:28,439 --> 02:25:31,979
likely they are gonna be trying to uh be

3409
02:25:31,979 --> 02:25:35,700
associated with poisoning attacks

3410
02:25:35,700 --> 02:25:38,100
hi John tar with quad9 uh really pleased

3411
02:25:38,100 --> 02:25:40,020
to see you supporting dot

3412
02:25:40,020 --> 02:25:42,060
um what are the plans on the opposite

3413
02:25:42,060 --> 02:25:44,040
side when is Google or is there a plan

3414
02:25:44,040 --> 02:25:46,380
for Google to support dot on the

3415
02:25:46,380 --> 02:25:47,760
authoritatives and is that going to

3416
02:25:47,760 --> 02:25:48,899
scale across all of your domain

3417
02:25:48,899 --> 02:25:51,540
Properties or just some

3418
02:25:51,540 --> 02:25:54,120
so I think I'll give the same answer as

3419
02:25:54,120 --> 02:25:57,359
doq because we want to do it there's a

3420
02:25:57,359 --> 02:25:58,979
number of things which need to fall into

3421
02:25:58,979 --> 02:26:01,800
place so to and to give a little more

3422
02:26:01,800 --> 02:26:04,319
detail there I don't think initially

3423
02:26:04,319 --> 02:26:07,020
we'll do it for like google.com or like

3424
02:26:07,020 --> 02:26:12,060
youtube.com but for cloud DNS customers

3425
02:26:12,060 --> 02:26:14,100
that will probably be the first place

3426
02:26:14,100 --> 02:26:18,200
where we start great thank you

3427
02:26:19,200 --> 02:26:21,540
all right and the last question from the

3428
02:26:21,540 --> 02:26:24,660
chat that doesn't need an answer in this

3429
02:26:24,660 --> 02:26:26,760
session uh because it's not related to

3430
02:26:26,760 --> 02:26:29,399
DNS cookies anyway will it be reasonable

3431
02:26:29,399 --> 02:26:31,020
for Google to provide some regular

3432
02:26:31,020 --> 02:26:34,439
reports of the top 1 million domains

3433
02:26:34,439 --> 02:26:37,439
queried now that Alexa 1 million has

3434
02:26:37,439 --> 02:26:39,840
been officially retired

3435
02:26:39,840 --> 02:26:40,560
um

3436
02:26:40,560 --> 02:26:41,819
by Amazon

3437
02:26:41,819 --> 02:26:44,460
many researchers used at least like that

3438
02:26:44,460 --> 02:26:46,160
as a metric

3439
02:26:46,160 --> 02:26:49,920
I think here we'll have to check with

3440
02:26:49,920 --> 02:26:52,439
other groups within Google meaning we

3441
02:26:52,439 --> 02:26:54,180
may be able to share some of that maybe

3442
02:26:54,180 --> 02:26:56,580
not million but I can't promise anything

3443
02:26:56,580 --> 02:26:59,160
here I would say please contact us

3444
02:26:59,160 --> 02:27:01,700
offline

3445
02:27:02,580 --> 02:27:05,830
thanks a lot thank you all right so

3446
02:27:05,830 --> 02:27:12,600
[Applause]

3447
02:27:12,600 --> 02:27:14,939
so let's move on to our next speaker who

3448
02:27:14,939 --> 02:27:17,460
will be remote this is going to be

3449
02:27:17,460 --> 02:27:19,740
Hands-On from Salesforce talking about

3450
02:27:19,740 --> 02:27:22,020
how an Enterprise manages very large

3451
02:27:22,020 --> 02:27:24,060
number of Records

3452
02:27:24,060 --> 02:27:26,520
hi everybody my name is Sanja I'm

3453
02:27:26,520 --> 02:27:29,100
working on the DS team at Salesforce and

3454
02:27:29,100 --> 02:27:30,899
today I'm going to talk about how

3455
02:27:30,899 --> 02:27:33,899
enlarged Enterprise manages very large

3456
02:27:33,899 --> 02:27:37,699
number of DS records

3457
02:27:38,040 --> 02:27:41,000
and we are from different companies

3458
02:27:41,000 --> 02:27:44,220
organizations universities and we use

3459
02:27:44,220 --> 02:27:46,740
ideas in different ways

3460
02:27:46,740 --> 02:27:49,260
so I think we can ask ourselves a few

3461
02:27:49,260 --> 02:27:51,660
questions for example who make the

3462
02:27:51,660 --> 02:27:55,020
exchanges in our organizations RV DS

3463
02:27:55,020 --> 02:27:57,600
teams the only people who make things

3464
02:27:57,600 --> 02:28:00,420
changes or we have different optional

3465
02:28:00,420 --> 02:28:03,120
teams that make manual dance changes or

3466
02:28:03,120 --> 02:28:06,899
we have some code or tools that make

3467
02:28:06,899 --> 02:28:09,720
automatic dance changes and how many

3468
02:28:09,720 --> 02:28:12,359
zones we have maybe we have tens of

3469
02:28:12,359 --> 02:28:14,939
zones hundreds of zones or thousands of

3470
02:28:14,939 --> 02:28:17,100
zones and how many records we have in

3471
02:28:17,100 --> 02:28:19,859
these different zones like thousands or

3472
02:28:19,859 --> 02:28:21,660
hundreds of thousands will be millions

3473
02:28:21,660 --> 02:28:22,520
of

3474
02:28:22,520 --> 02:28:24,540
Records there

3475
02:28:24,540 --> 02:28:26,819
and maybe these songs some of the songs

3476
02:28:26,819 --> 02:28:29,220
are Dynamic which means the records in

3477
02:28:29,220 --> 02:28:31,740
the zones are being changed every single

3478
02:28:31,740 --> 02:28:34,560
second were the records in the zones are

3479
02:28:34,560 --> 02:28:37,380
relatively uh static maybe they are

3480
02:28:37,380 --> 02:28:39,540
changed every few weeks or even every

3481
02:28:39,540 --> 02:28:40,920
few months

3482
02:28:40,920 --> 02:28:43,920
if we have money zones maybe we host all

3483
02:28:43,920 --> 02:28:46,500
of them on single DS provider or we host

3484
02:28:46,500 --> 02:28:49,260
them on multiple RDS providers

3485
02:28:49,260 --> 02:28:52,439
and if you do host them in multiple

3486
02:28:52,439 --> 02:28:54,780
dance providers how many accounts we

3487
02:28:54,780 --> 02:28:57,180
have each of them and how many accounts

3488
02:28:57,180 --> 02:28:59,880
we have all of this against providers

3489
02:28:59,880 --> 02:29:04,020
and it is it could be some operational

3490
02:29:04,020 --> 02:29:07,140
overhead to manage all of these accounts

3491
02:29:07,140 --> 02:29:10,380
on multiple dance providers

3492
02:29:10,380 --> 02:29:13,800
and since cut complex when we have tens

3493
02:29:13,800 --> 02:29:15,899
of millions of Records in thousands of

3494
02:29:15,899 --> 02:29:18,660
zones and if their zones are hosted on

3495
02:29:18,660 --> 02:29:21,120
multiple dance providers so if this is

3496
02:29:21,120 --> 02:29:23,939
the case it is almost not possible to

3497
02:29:23,939 --> 02:29:25,800
make money change because it does scale

3498
02:29:25,800 --> 02:29:28,200
it is not manageable

3499
02:29:28,200 --> 02:29:31,740
but a bigger problem is now all the end

3500
02:29:31,740 --> 02:29:35,100
users by end users I mean the DS teams

3501
02:29:35,100 --> 02:29:37,260
or optional operational teams or

3502
02:29:37,260 --> 02:29:40,200
automation tools needs to know the DNS

3503
02:29:40,200 --> 02:29:43,740
details of the zones and the DS

3504
02:29:43,740 --> 02:29:46,680
providers and this multiple dance

3505
02:29:46,680 --> 02:29:49,380
providers do use different rest API

3506
02:29:49,380 --> 02:29:53,399
specifications so for example if the

3507
02:29:53,399 --> 02:29:57,240
tool or a team wants to change the

3508
02:29:57,240 --> 02:29:59,460
record in salesforce.com maybe

3509
02:29:59,460 --> 02:30:02,160
salesforce.com is some provided a and

3510
02:30:02,160 --> 02:30:05,220
then these two or the team needs to sign

3511
02:30:05,220 --> 02:30:08,100
the red DPS specifications of Provider a

3512
02:30:08,100 --> 02:30:12,479
to this specific provider and maybe in

3513
02:30:12,479 --> 02:30:15,800
the next minute they want to change the

3514
02:30:15,800 --> 02:30:18,660
records in Sample account and then this

3515
02:30:18,660 --> 02:30:20,939
example.com is some provider B in this

3516
02:30:20,939 --> 02:30:23,340
case the end users need to talk to

3517
02:30:23,340 --> 02:30:26,160
provider B by using the corresponding

3518
02:30:26,160 --> 02:30:29,899
right API specifications

3519
02:30:30,060 --> 02:30:33,479
so the students get more complex if we

3520
02:30:33,479 --> 02:30:34,920
add new zones

3521
02:30:34,920 --> 02:30:39,300
or if we migrations between multiple DS

3522
02:30:39,300 --> 02:30:40,800
providers

3523
02:30:40,800 --> 02:30:42,060
uh

3524
02:30:42,060 --> 02:30:45,359
because we have to add or change the all

3525
02:30:45,359 --> 02:30:48,600
this Zone Wonder making Logics uh

3526
02:30:48,600 --> 02:30:51,720
between the uh in the uh in all the end

3527
02:30:51,720 --> 02:30:54,060
users like the teams will be automation

3528
02:30:54,060 --> 02:30:58,140
tools so in summary if we light the end

3529
02:30:58,140 --> 02:30:59,760
users handle

3530
02:30:59,760 --> 02:31:03,479
all these detailed knowledge of zones

3531
02:31:03,479 --> 02:31:04,920
and

3532
02:31:04,920 --> 02:31:06,840
es providers

3533
02:31:06,840 --> 02:31:09,180
it is not manageable

3534
02:31:09,180 --> 02:31:13,740
but it is easy to introduce some arrows

3535
02:31:13,740 --> 02:31:16,080
and there are some tools to manage dance

3536
02:31:16,080 --> 02:31:18,840
records across multiple dance providers

3537
02:31:18,840 --> 02:31:22,200
for example there is octo DS it is youth

3538
02:31:22,200 --> 02:31:24,240
structure as code and it provides a set

3539
02:31:24,240 --> 02:31:28,200
of tools to do a dis record measurements

3540
02:31:28,200 --> 02:31:32,160
across DS providers and Netflix has the

3541
02:31:32,160 --> 02:31:35,520
denominator which is a Java library that

3542
02:31:35,520 --> 02:31:38,160
does the same thing and it also has a

3543
02:31:38,160 --> 02:31:41,819
command line too to make things easier

3544
02:31:41,819 --> 02:31:45,840
but there's two things uh

3545
02:31:45,840 --> 02:31:48,720
require the end users to have the

3546
02:31:48,720 --> 02:31:52,020
knowledge of the mappings between the

3547
02:31:52,020 --> 02:31:55,140
Zone wonders and other zones and the PS

3548
02:31:55,140 --> 02:31:57,960
providers and even previous talk Steven

3549
02:31:57,960 --> 02:32:00,600
sealer has talked about action on DS

3550
02:32:00,600 --> 02:32:03,660
which is another tool to manage Das

3551
02:32:03,660 --> 02:32:06,899
records across DS providers but it is

3552
02:32:06,899 --> 02:32:09,960
mainly used for kubernetes

3553
02:32:09,960 --> 02:32:12,540
so what would what we need here is the

3554
02:32:12,540 --> 02:32:15,479
DNS provider agnostic related endpoint

3555
02:32:15,479 --> 02:32:17,520
or microservice

3556
02:32:17,520 --> 02:32:20,340
basically it has all the details of the

3557
02:32:20,340 --> 02:32:24,960
zones and providers and it behaves in as

3558
02:32:24,960 --> 02:32:28,380
a single rest API endpoint in front of

3559
02:32:28,380 --> 02:32:31,920
other DS providers and provide a single

3560
02:32:31,920 --> 02:32:35,760
standard interface to all the end users

3561
02:32:35,760 --> 02:32:39,180
and it also provides the standard

3562
02:32:39,180 --> 02:32:41,700
responses to the end users

3563
02:32:41,700 --> 02:32:44,700
and because it is a rest API

3564
02:32:44,700 --> 02:32:46,740
microservice that needs to be highly

3565
02:32:46,740 --> 02:32:49,260
available and scalable

3566
02:32:49,260 --> 02:32:51,899
another good sent to Hive is we want to

3567
02:32:51,899 --> 02:32:55,380
make account management Easier by using

3568
02:32:55,380 --> 02:32:56,880
this system

3569
02:32:56,880 --> 02:32:59,780
so to solve the above the problems and

3570
02:32:59,780 --> 02:33:02,460
satisfy the requirements our team has

3571
02:33:02,460 --> 02:33:06,359
built a microservice named the Messina

3572
02:33:06,359 --> 02:33:08,700
which is the DNS provided agnostic Drive

3573
02:33:08,700 --> 02:33:12,120
DPI endpoint and we host is the system

3574
02:33:12,120 --> 02:33:14,220
on cloud platform

3575
02:33:14,220 --> 02:33:17,760
and if you use this to a Cena to manage

3576
02:33:17,760 --> 02:33:20,460
tens of millions of Records in some

3577
02:33:20,460 --> 02:33:22,080
thousands of zones and they are

3578
02:33:22,080 --> 02:33:23,640
distributed in multiple against

3579
02:33:23,640 --> 02:33:25,460
providers

3580
02:33:25,460 --> 02:33:30,780
and we are our customers are our own

3581
02:33:30,780 --> 02:33:33,600
team the next teams many operational

3582
02:33:33,600 --> 02:33:36,780
teams as well as our application code

3583
02:33:36,780 --> 02:33:39,300
and the various automation tools so we

3584
02:33:39,300 --> 02:33:41,340
have a

3585
02:33:41,340 --> 02:33:44,220
lot of customers and the student handles

3586
02:33:44,220 --> 02:33:47,460
over 1 million create update and delete

3587
02:33:47,460 --> 02:33:50,340
requests per day

3588
02:33:50,340 --> 02:33:53,340
this system has been

3589
02:33:53,340 --> 02:33:55,800
running in production for almost four

3590
02:33:55,800 --> 02:33:58,200
years and it is highly available and

3591
02:33:58,200 --> 02:33:59,760
scalable

3592
02:33:59,760 --> 02:34:03,899
here is an very high level overview of

3593
02:34:03,899 --> 02:34:06,420
Casino so basically we did not only

3594
02:34:06,420 --> 02:34:09,359
build the scene itself but we also built

3595
02:34:09,359 --> 02:34:11,399
the entire ecosystem was you know for

3596
02:34:11,399 --> 02:34:14,280
example besides building the Athena

3597
02:34:14,280 --> 02:34:17,520
primary side we also built the disastery

3598
02:34:17,520 --> 02:34:20,340
uh recovery site policina so in that

3599
02:34:20,340 --> 02:34:24,899
case if something goes wrong we can fail

3600
02:34:24,899 --> 02:34:28,740
over to the secondary instance

3601
02:34:28,740 --> 02:34:31,620
to detect the uh

3602
02:34:31,620 --> 02:34:33,859
the

3603
02:34:33,859 --> 02:34:36,600
possible problem of fixed Persona we

3604
02:34:36,600 --> 02:34:38,340
also build a monitoring system another

3605
02:34:38,340 --> 02:34:41,700
macro service and integrate this

3606
02:34:41,700 --> 02:34:44,100
monitoring system these uh Patriot

3607
02:34:44,100 --> 02:34:46,800
duties so if something breaks uh our

3608
02:34:46,800 --> 02:34:50,580
team can be paged and go to the bridges

3609
02:34:50,580 --> 02:34:53,280
to fix the problems and we also saw the

3610
02:34:53,280 --> 02:34:56,580
uh the numbers on the dashboards

3611
02:34:56,580 --> 02:34:59,300
and interestingly built placino is

3612
02:34:59,300 --> 02:35:01,859
analytics system so basically it can

3613
02:35:01,859 --> 02:35:05,100
collect different usages of Cena for

3614
02:35:05,100 --> 02:35:08,280
example the number of crud

3615
02:35:08,280 --> 02:35:10,580
uh

3616
02:35:10,580 --> 02:35:13,620
requires every single every single day

3617
02:35:13,620 --> 02:35:16,740
or and also some performance metrics and

3618
02:35:16,740 --> 02:35:20,580
we show this in different dashboards

3619
02:35:20,580 --> 02:35:23,700
so a key problem

3620
02:35:23,700 --> 02:35:28,380
in the previous slides

3621
02:35:28,380 --> 02:35:31,020
and is how we combine if this song

3622
02:35:31,020 --> 02:35:34,200
Wonder or Zone provider making so we

3623
02:35:34,200 --> 02:35:37,020
built another separate microservice that

3624
02:35:37,020 --> 02:35:40,319
pulls the list of all the zones from

3625
02:35:40,319 --> 02:35:42,660
multiple against providers and put them

3626
02:35:42,660 --> 02:35:45,720
into database besides this automation

3627
02:35:45,720 --> 02:35:48,300
process we also have a

3628
02:35:48,300 --> 02:35:51,780
uh restate API and the point that can be

3629
02:35:51,780 --> 02:35:54,960
used by the admins to manually create

3630
02:35:54,960 --> 02:35:57,600
the mapping speed underneath Zone and

3631
02:35:57,600 --> 02:36:00,479
the providers and here is an example of

3632
02:36:00,479 --> 02:36:03,660
how this looks like in our database

3633
02:36:03,660 --> 02:36:06,120
and here we can see for example.com it

3634
02:36:06,120 --> 02:36:08,760
is on provided a so that means if a

3635
02:36:08,760 --> 02:36:11,160
sinner receives any request in

3636
02:36:11,160 --> 02:36:12,840
example.com

3637
02:36:12,840 --> 02:36:15,120
that will check database and say okay so

3638
02:36:15,120 --> 02:36:17,580
this is the correct provider and I'm

3639
02:36:17,580 --> 02:36:19,340
going to use the

3640
02:36:19,340 --> 02:36:22,580
rest API specifications for this

3641
02:36:22,580 --> 02:36:26,160
provider and then standardize your trans

3642
02:36:26,160 --> 02:36:29,460
translate the response responses from

3643
02:36:29,460 --> 02:36:32,000
provider a to the standard

3644
02:36:32,000 --> 02:36:35,100
response to the end users

3645
02:36:35,100 --> 02:36:37,500
and uh so another thing we want to

3646
02:36:37,500 --> 02:36:40,920
mention here is uh Cena makes account

3647
02:36:40,920 --> 02:36:43,500
management easier so let's say we have a

3648
02:36:43,500 --> 02:36:46,380
30 teams and 20 19 years on each team

3649
02:36:46,380 --> 02:36:49,859
and we have 10 providers so in this case

3650
02:36:49,859 --> 02:36:52,979
if you do not have a Cena they will have

3651
02:36:52,979 --> 02:36:55,979
four thousand accounts it has nightmare

3652
02:36:55,979 --> 02:36:58,260
to manage all of these four thousand

3653
02:36:58,260 --> 02:37:01,260
accounts but if we use a zero we only

3654
02:37:01,260 --> 02:37:03,720
create a single account for each team on

3655
02:37:03,720 --> 02:37:06,479
each provider so that is 200 accounts

3656
02:37:06,479 --> 02:37:09,359
uh after that we create

3657
02:37:09,359 --> 02:37:12,200
accountable engineer

3658
02:37:12,200 --> 02:37:15,780
that is 400 accounts so in total we only

3659
02:37:15,780 --> 02:37:18,899
create 600 accounts which is about 50

3660
02:37:18,899 --> 02:37:22,200
percent of the four thousand pounds and

3661
02:37:22,200 --> 02:37:24,540
similar thing applies to the scenario

3662
02:37:24,540 --> 02:37:28,140
when Engineers leave a company

3663
02:37:28,140 --> 02:37:30,899
so it also makes the deletion of the

3664
02:37:30,899 --> 02:37:34,160
accounts easier

3665
02:37:34,920 --> 02:37:38,359
so as a Cena is a rest API

3666
02:37:38,359 --> 02:37:40,680
unemployed there are multiple ways to

3667
02:37:40,680 --> 02:37:44,640
talk to Athena the teams can write Java

3668
02:37:44,640 --> 02:37:47,399
code python code whatever code to

3669
02:37:47,399 --> 02:37:49,859
directly talk to a Cena they can also

3670
02:37:49,859 --> 02:37:53,880
use color command Postman if they prefer

3671
02:37:53,880 --> 02:37:57,920
some of these for data to talk to Athena

3672
02:37:57,920 --> 02:38:01,620
our team also developed the moneyline to

3673
02:38:01,620 --> 02:38:03,359
uh

3674
02:38:03,359 --> 02:38:06,180
that can be used by different teams and

3675
02:38:06,180 --> 02:38:08,040
here is an example of this command line

3676
02:38:08,040 --> 02:38:11,700
2 to create a c name of full dot

3677
02:38:11,700 --> 02:38:14,040
example.com that points to a barrel of

3678
02:38:14,040 --> 02:38:15,899
example.com

3679
02:38:15,899 --> 02:38:18,660
in this these two are the teams can

3680
02:38:18,660 --> 02:38:21,180
easily write script to manage with

3681
02:38:21,180 --> 02:38:23,580
hundreds or even thousands of audience

3682
02:38:23,580 --> 02:38:26,180
records

3683
02:38:26,180 --> 02:38:29,760
we do have some future work for Athena

3684
02:38:29,760 --> 02:38:31,920
first thing is we're going to support

3685
02:38:31,920 --> 02:38:36,720
Atomic transaction and a few examples we

3686
02:38:36,720 --> 02:38:38,420
are thinking about is

3687
02:38:38,420 --> 02:38:41,100
maybe multiple domains need to be

3688
02:38:41,100 --> 02:38:43,560
created or deleted at the same time so

3689
02:38:43,560 --> 02:38:45,540
in this case the one

3690
02:38:45,540 --> 02:38:48,240
uh creation fails then the entire

3691
02:38:48,240 --> 02:38:50,280
transaction should fail and another

3692
02:38:50,280 --> 02:38:54,540
scenario is a Zone can be hosted on two

3693
02:38:54,540 --> 02:38:56,819
providers in active active mode so in

3694
02:38:56,819 --> 02:39:00,960
this case the DNS request needs to be

3695
02:39:00,960 --> 02:39:03,780
successful failed on both of them and

3696
02:39:03,780 --> 02:39:06,140
this is this is another example of

3697
02:39:06,140 --> 02:39:09,660
automatic Atomic transaction

3698
02:39:09,660 --> 02:39:12,960
another thing we we plan to improve is

3699
02:39:12,960 --> 02:39:15,540
to in to have some fun-grained exercise

3700
02:39:15,540 --> 02:39:18,479
control like type level access control

3701
02:39:18,479 --> 02:39:21,780
and also record live Access Control

3702
02:39:21,780 --> 02:39:26,340
besides there's two uh directions the

3703
02:39:26,340 --> 02:39:29,340
third one we are looking at is more

3704
02:39:29,340 --> 02:39:33,120
authentication measures and we would

3705
02:39:33,120 --> 02:39:36,359
like to try mkrs in that case we can do

3706
02:39:36,359 --> 02:39:38,880
some authentication and authorization

3707
02:39:38,880 --> 02:39:40,920
based on the naming convention in the

3708
02:39:40,920 --> 02:39:42,479
mkos

3709
02:39:42,479 --> 02:39:45,060
and I believe this is the end of the

3710
02:39:45,060 --> 02:39:49,699
talk and I'm open to questions

3711
02:39:54,780 --> 02:39:57,840
how is the process of verifying and

3712
02:39:57,840 --> 02:40:00,899
drawback by the DS Jones record Chinese

3713
02:40:00,899 --> 02:40:03,960
in basina

3714
02:40:03,960 --> 02:40:09,300
this okay so but Cena is more like an

3715
02:40:09,300 --> 02:40:13,020
agent uh that talks to multiple DNS

3716
02:40:13,020 --> 02:40:14,120
providers

3717
02:40:14,120 --> 02:40:18,240
uh it does some basic verification of

3718
02:40:18,240 --> 02:40:20,700
the instructor like maybe checking the

3719
02:40:20,700 --> 02:40:25,380
the lens of the DS record uh

3720
02:40:25,380 --> 02:40:28,920
but I'm not quite sure about uh

3721
02:40:28,920 --> 02:40:33,300
what this road bike being a song like

3722
02:40:33,300 --> 02:40:36,240
her Chinese name uh so basically the end

3723
02:40:36,240 --> 02:40:39,840
users maintain the logic or they need to

3724
02:40:39,840 --> 02:40:43,620
know what is the correct uh DNS changes

3725
02:40:43,620 --> 02:40:46,200
they want to do and then they just use

3726
02:40:46,200 --> 02:40:48,540
the scene ASAP agent to make the the

3727
02:40:48,540 --> 02:40:50,960
changes

3728
02:40:51,000 --> 02:40:55,080
uh the next question is from Patrick the

3729
02:40:55,080 --> 02:40:57,840
question is how do you how do you handle

3730
02:40:57,840 --> 02:41:01,680
provider changes for existing Zone

3731
02:41:01,680 --> 02:41:05,760
and if the Zone uses something

3732
02:41:05,760 --> 02:41:09,300
like record type not available supported

3733
02:41:09,300 --> 02:41:11,280
on all providers

3734
02:41:11,280 --> 02:41:14,760
one example is a preparatory

3735
02:41:14,760 --> 02:41:17,399
implementations of cname at Apex yes

3736
02:41:17,399 --> 02:41:21,060
that's a great uh question okay so so

3737
02:41:21,060 --> 02:41:23,399
for the first question how we handle the

3738
02:41:23,399 --> 02:41:27,300
data strangers uh if we

3739
02:41:27,300 --> 02:41:29,460
come back here

3740
02:41:29,460 --> 02:41:32,760
is sliced so we use two ways to do this

3741
02:41:32,760 --> 02:41:36,479
one is we uh we we have a micro service

3742
02:41:36,479 --> 02:41:38,399
that puts the zone list from audience

3743
02:41:38,399 --> 02:41:43,560
providers but we do have a a way uh to

3744
02:41:43,560 --> 02:41:46,020
manually overwrite that and then when we

3745
02:41:46,020 --> 02:41:48,180
do this Zone migration uh the system

3746
02:41:48,180 --> 02:41:52,319
admin will go to a scene and use the

3747
02:41:52,319 --> 02:41:55,979
admin draft APN point to override the

3748
02:41:55,979 --> 02:41:59,220
Zone water mapping for the migration and

3749
02:41:59,220 --> 02:42:02,280
second part of the question is how we

3750
02:42:02,280 --> 02:42:05,100
handle the features that are not

3751
02:42:05,100 --> 02:42:07,859
supported on providers So currently a

3752
02:42:07,859 --> 02:42:11,280
scene only supports the permanently or

3753
02:42:11,280 --> 02:42:14,120
special not commonly used I mean the the

3754
02:42:14,120 --> 02:42:18,840
types of records that are shared by most

3755
02:42:18,840 --> 02:42:21,780
DNS providers like cname or a record

3756
02:42:21,780 --> 02:42:23,580
Class A

3757
02:42:23,580 --> 02:42:26,939
uh so integrating the more advanced for

3758
02:42:26,939 --> 02:42:29,220
different behaviors of this from

3759
02:42:29,220 --> 02:42:32,220
different DNS providers is also on our

3760
02:42:32,220 --> 02:42:33,600
roadmap

3761
02:42:33,600 --> 02:42:36,000
but but for now the scene doesn't

3762
02:42:36,000 --> 02:42:38,819
support those Advanced features

3763
02:42:38,819 --> 02:42:43,020
I believe that's the odd questions

3764
02:42:43,020 --> 02:42:45,350
thank you so much

3765
02:42:45,350 --> 02:42:52,979
[Applause]

3766
02:42:52,979 --> 02:42:55,560
um right that's the end of our first

3767
02:42:55,560 --> 02:42:57,720
session of the afternoon we're going to

3768
02:42:57,720 --> 02:42:59,939
have a break for about 30 minutes and we

3769
02:42:59,939 --> 02:43:02,120
will start back at uh

3770
02:43:02,120 --> 02:43:09,479
7 15 UTC PM or 3 15 Eastern Time

3771
02:43:09,479 --> 02:43:11,880
I would like to thank Comcast and

3772
02:43:11,880 --> 02:43:14,220
Verizon for being sponsors of sponsors

3773
02:43:14,220 --> 02:43:15,420
of the workshop

3774
02:43:15,420 --> 02:43:19,520
and I see you in about 30 minutes

3775
02:43:28,340 --> 02:43:32,640
welcome back welcome back everybody

3776
02:43:32,640 --> 02:43:34,920
so we're going to get started with

3777
02:43:34,920 --> 02:43:36,479
session four which is actually two

3778
02:43:36,479 --> 02:43:38,880
sessions we're going to have two talks

3779
02:43:38,880 --> 02:43:40,920
I have a small break and then two other

3780
02:43:40,920 --> 02:43:42,479
talks

3781
02:43:42,479 --> 02:43:44,040
I would like to thanks our sponsors

3782
02:43:44,040 --> 02:43:48,120
Comcast and verisign and we're going to

3783
02:43:48,120 --> 02:43:50,040
get started with the next speaker which

3784
02:43:50,040 --> 02:43:52,979
is going to be actually a video

3785
02:43:52,979 --> 02:43:55,500
uh but uh the speaker will be available

3786
02:43:55,500 --> 02:43:57,840
to answer questions

3787
02:43:57,840 --> 02:44:00,479
um so the next speaker is uh Peter's

3788
02:44:00,479 --> 02:44:02,819
Patrick from IC he's going to talk about

3789
02:44:02,819 --> 02:44:04,560
performance effect of DNS site

3790
02:44:04,560 --> 02:44:07,399
validation on the busy resolver

3791
02:44:07,399 --> 02:44:10,140
welcome to talk which should have been

3792
02:44:10,140 --> 02:44:14,220
called demystifying DNS Equalization

3793
02:44:14,220 --> 02:44:15,920
my name is

3794
02:44:15,920 --> 02:44:21,680
and I work with IC on all things DNS

3795
02:44:21,960 --> 02:44:24,600
in this talk we will have a look at the

3796
02:44:24,600 --> 02:44:27,479
traditional wisdom the DNS the

3797
02:44:27,479 --> 02:44:30,660
validation requires more resources

3798
02:44:30,660 --> 02:44:33,420
as usual with wisdoms

3799
02:44:33,420 --> 02:44:36,780
it doesn't actually say what resources

3800
02:44:36,780 --> 02:44:39,720
and how much you need for validating

3801
02:44:39,720 --> 02:44:41,700
and we don't even know whether it holds

3802
02:44:41,700 --> 02:44:43,500
in 2022

3803
02:44:43,500 --> 02:44:46,140
so we will try to approach this with a

3804
02:44:46,140 --> 02:44:49,399
more scientific rigor

3805
02:44:49,800 --> 02:44:51,780
of course everything starts with the

3806
02:44:51,780 --> 02:44:54,960
data set for benchmarking resolvers it's

3807
02:44:54,960 --> 02:44:56,939
absolutely crucial to have realistic

3808
02:44:56,939 --> 02:44:58,200
data

3809
02:44:58,200 --> 02:45:01,620
luckily a friendly European Telco

3810
02:45:01,620 --> 02:45:04,020
provided us with the real traffic

3811
02:45:04,020 --> 02:45:06,540
flowing to their resolvers of course

3812
02:45:06,540 --> 02:45:09,600
anonymized and the traffic consists of

3813
02:45:09,600 --> 02:45:11,760
mix of landline and mobile clients

3814
02:45:11,760 --> 02:45:14,399
everything mixed together in a huge

3815
02:45:14,399 --> 02:45:16,859
pickup

3816
02:45:16,859 --> 02:45:20,399
for purposes of this talk we want to

3817
02:45:20,399 --> 02:45:24,060
test two ends of this vacuum on one end

3818
02:45:24,060 --> 02:45:26,899
the North River loaded resolver with

3819
02:45:26,899 --> 02:45:30,180
9000 degrees per second

3820
02:45:30,180 --> 02:45:32,760
frames per second and the other end of

3821
02:45:32,760 --> 02:45:34,680
spectrum under 35

3822
02:45:34,680 --> 02:45:36,960
000 queries per second which is heavily

3823
02:45:36,960 --> 02:45:40,920
loaded resolvers of course when we talk

3824
02:45:40,920 --> 02:45:43,319
about the QPS keep in mind

3825
02:45:43,319 --> 02:45:46,500
the queries are not equal in a sense

3826
02:45:46,500 --> 02:45:49,460
that different queries require different

3827
02:45:49,460 --> 02:45:53,280
amount of resources on the resolver side

3828
02:45:53,280 --> 02:45:57,180
most importantly depending on cash hit

3829
02:45:57,180 --> 02:46:00,359
or cashmas answer size and so on and so

3830
02:46:00,359 --> 02:46:02,180
on

3831
02:46:02,180 --> 02:46:05,819
for our purposes we took the huge data

3832
02:46:05,819 --> 02:46:09,660
set and done sampled the data to smaller

3833
02:46:09,660 --> 02:46:14,359
sets of smaller QPS to do that

3834
02:46:14,359 --> 02:46:18,060
we had to always keep the complete set

3835
02:46:18,060 --> 02:46:20,340
of queries from a single client so we

3836
02:46:20,340 --> 02:46:22,439
were basically done sampling based on

3837
02:46:22,439 --> 02:46:24,840
the source IP address

3838
02:46:24,840 --> 02:46:28,800
if the client I address was included in

3839
02:46:28,800 --> 02:46:30,420
the data set all the queries were

3840
02:46:30,420 --> 02:46:33,780
included and if it was not included none

3841
02:46:33,780 --> 02:46:35,880
of the queries were included that's

3842
02:46:35,880 --> 02:46:38,399
important again because we have to keep

3843
02:46:38,399 --> 02:46:41,520
the cache hit missed straight exactly as

3844
02:46:41,520 --> 02:46:43,080
it was

3845
02:46:43,080 --> 02:46:45,979
uh

3846
02:46:46,020 --> 02:46:48,240
that's for the data

3847
02:46:48,240 --> 02:46:51,780
the test setup is not really surprising

3848
02:46:51,780 --> 02:46:55,680
we use a latest stable version of bind

3849
02:46:55,680 --> 02:46:57,359
984

3850
02:46:57,359 --> 02:47:00,300
and always start with an empty cache no

3851
02:47:00,300 --> 02:47:01,920
surprises

3852
02:47:01,920 --> 02:47:05,580
we test two configurations of bind one

3853
02:47:05,580 --> 02:47:08,160
with validation enabled and second with

3854
02:47:08,160 --> 02:47:10,800
violation disabled is the only changing

3855
02:47:10,800 --> 02:47:13,140
configuration

3856
02:47:13,140 --> 02:47:16,939
then the queries are simulated

3857
02:47:16,939 --> 02:47:20,340
by software called DNS shotgun it's a

3858
02:47:20,340 --> 02:47:23,120
tool which creates a beaker and then

3859
02:47:23,120 --> 02:47:26,399
keeps the exact timing of queries

3860
02:47:26,399 --> 02:47:28,439
and replace all the queries to the

3861
02:47:28,439 --> 02:47:30,240
resolver

3862
02:47:30,240 --> 02:47:33,000
that was the simple part of that then

3863
02:47:33,000 --> 02:47:36,000
the hard part is obviously the internet

3864
02:47:36,000 --> 02:47:38,160
we need only authoritative servers

3865
02:47:38,160 --> 02:47:40,399
including timing

3866
02:47:40,399 --> 02:47:41,960
latency

3867
02:47:41,960 --> 02:47:45,240
reliability and so on and that's super

3868
02:47:45,240 --> 02:47:48,660
hard to measure and simulate so what we

3869
02:47:48,660 --> 02:47:51,000
do is that we actually measure against

3870
02:47:51,000 --> 02:47:52,979
the live internet

3871
02:47:52,979 --> 02:47:55,680
our test reserver is talking to the

3872
02:47:55,680 --> 02:47:58,740
internet and of course that causes lots

3873
02:47:58,740 --> 02:48:00,120
of noise

3874
02:48:00,120 --> 02:48:03,240
to counter that repeat every single

3875
02:48:03,240 --> 02:48:07,260
measure measurement 10 times then do the

3876
02:48:07,260 --> 02:48:09,479
usual post processing

3877
02:48:09,479 --> 02:48:12,960
and for this talk we are concerned with

3878
02:48:12,960 --> 02:48:16,200
resources spent on the resolver side

3879
02:48:16,200 --> 02:48:20,100
so we need tools to monitor the resource

3880
02:48:20,100 --> 02:48:24,120
consumption to do that we wrote a little

3881
02:48:24,120 --> 02:48:27,660
scripts which is basically scrape files

3882
02:48:27,660 --> 02:48:31,859
in slash proc and slash says and then

3883
02:48:31,859 --> 02:48:36,180
store these files on disk including

3884
02:48:36,180 --> 02:48:39,240
timestamps and then later after the test

3885
02:48:39,240 --> 02:48:43,439
ends WE Post process the raw files in a

3886
02:48:43,439 --> 02:48:45,720
form which allows us to draw charts out

3887
02:48:45,720 --> 02:48:48,019
of it

3888
02:48:48,720 --> 02:48:51,240
that's for the test setup and now we can

3889
02:48:51,240 --> 02:48:53,460
have a look at the first scenario with

3890
02:48:53,460 --> 02:48:55,680
9000 queries per second

3891
02:48:55,680 --> 02:48:59,460
before we dive in let me warn you

3892
02:48:59,460 --> 02:49:02,819
when I say 9 000 queries per second it's

3893
02:49:02,819 --> 02:49:07,140
not a flat 9000 number which you would

3894
02:49:07,140 --> 02:49:10,560
get from DNS perv or a similar tool you

3895
02:49:10,560 --> 02:49:13,800
can see here that this is

3896
02:49:13,800 --> 02:49:17,040
uh the packet rate from the pcap we are

3897
02:49:17,040 --> 02:49:20,280
using as an input for dnsford gun and

3898
02:49:20,280 --> 02:49:22,800
here the traffic jumps like crazy and

3899
02:49:22,800 --> 02:49:24,840
that's exactly what happens in the

3900
02:49:24,840 --> 02:49:27,600
normal live Network so it's definitely

3901
02:49:27,600 --> 02:49:29,460
not the lab setup

3902
02:49:29,460 --> 02:49:32,160
and here we can even see that around the

3903
02:49:32,160 --> 02:49:34,439
second 500

3904
02:49:34,439 --> 02:49:36,000
something

3905
02:49:36,000 --> 02:49:38,520
went wrong with a very small subset of

3906
02:49:38,520 --> 02:49:40,200
clients which started querying like

3907
02:49:40,200 --> 02:49:43,979
crazy and produced lots of queries which

3908
02:49:43,979 --> 02:49:46,560
ended up being refused

3909
02:49:46,560 --> 02:49:49,260
uh because it was complete garbage but

3910
02:49:49,260 --> 02:49:51,120
that's what happens in the real Network

3911
02:49:51,120 --> 02:49:53,340
so that's what we have to take into

3912
02:49:53,340 --> 02:49:55,640
account

3913
02:49:57,060 --> 02:50:00,300
of course this is talk about DNS so we

3914
02:50:00,300 --> 02:50:03,240
are obliged to be basically obsessed

3915
02:50:03,240 --> 02:50:04,560
with latency

3916
02:50:04,560 --> 02:50:07,859
first the traditional wisdom about DNS

3917
02:50:07,859 --> 02:50:10,740
Equalization would say of course it will

3918
02:50:10,740 --> 02:50:14,060
significantly increase latency because

3919
02:50:14,060 --> 02:50:17,939
validation is complex and blah blah blah

3920
02:50:17,939 --> 02:50:20,640
here we can see the logarithmic

3921
02:50:20,640 --> 02:50:22,920
percentile histogram

3922
02:50:22,920 --> 02:50:24,300
and

3923
02:50:24,300 --> 02:50:28,680
in fact there are no big differences

3924
02:50:28,680 --> 02:50:30,960
first let me describe the chart on the

3925
02:50:30,960 --> 02:50:33,180
y-axis we have the response time in

3926
02:50:33,180 --> 02:50:36,600
milliseconds on the x-axis we have the

3927
02:50:36,600 --> 02:50:39,380
percentiles for the slowest crease

3928
02:50:39,380 --> 02:50:42,240
let me give you an example if you look

3929
02:50:42,240 --> 02:50:45,859
at this point where the x value 10

3930
02:50:45,859 --> 02:50:50,160
intersects with Y value 1 millisecond it

3931
02:50:50,160 --> 02:50:52,620
practically means that 90 percent of

3932
02:50:52,620 --> 02:50:55,680
queries were answered within one one

3933
02:50:55,680 --> 02:50:57,300
millisecond

3934
02:50:57,300 --> 02:51:00,500
and 10 percent of queries were answered

3935
02:51:00,500 --> 02:51:04,080
in one millisecond or more

3936
02:51:04,080 --> 02:51:06,960
for our purposes we basically want to

3937
02:51:06,960 --> 02:51:09,240
have the line on the chart as close as

3938
02:51:09,240 --> 02:51:11,640
possible to bottom left corner because

3939
02:51:11,640 --> 02:51:16,140
that's where the smallest latency is

3940
02:51:16,140 --> 02:51:18,420
but in the end it's not so important

3941
02:51:18,420 --> 02:51:20,939
because if you look closely you can see

3942
02:51:20,939 --> 02:51:23,040
that the lines the blue line for

3943
02:51:23,040 --> 02:51:25,740
validating configuration and orange line

3944
02:51:25,740 --> 02:51:28,740
for non-validating configuration are

3945
02:51:28,740 --> 02:51:30,780
overlapping so much that it practically

3946
02:51:30,780 --> 02:51:33,720
doesn't make a difference

3947
02:51:33,720 --> 02:51:36,140
on the color background

3948
02:51:36,140 --> 02:51:40,020
denotes the range of values over 10

3949
02:51:40,020 --> 02:51:43,020
measurements so it's the latency

3950
02:51:43,020 --> 02:51:46,040
difference between fastest and slowest

3951
02:51:46,040 --> 02:51:50,000
of 10 measurements

3952
02:51:50,700 --> 02:51:53,060
as I mentioned it's practically the same

3953
02:51:53,060 --> 02:51:55,800
and uh

3954
02:51:55,800 --> 02:51:58,200
that's true even though we are focusing

3955
02:51:58,200 --> 02:51:59,580
on the first minute of the measurement

3956
02:51:59,580 --> 02:52:01,380
so in the first minute when the cache is

3957
02:52:01,380 --> 02:52:02,700
completely empty

3958
02:52:02,700 --> 02:52:04,680
there's practically no difference

3959
02:52:04,680 --> 02:52:06,899
between validating and non-validating

3960
02:52:06,899 --> 02:52:08,660
resolver

3961
02:52:08,660 --> 02:52:12,180
if we fast forward to the very end

3962
02:52:12,180 --> 02:52:15,600
we can see latency histogram for the

3963
02:52:15,600 --> 02:52:18,240
last minute so we are we were measuring

3964
02:52:18,240 --> 02:52:19,620
for 10 minutes

3965
02:52:19,620 --> 02:52:21,660
now the result was for nine minutes

3966
02:52:21,660 --> 02:52:24,779
working as usual and then we took the

3967
02:52:24,779 --> 02:52:27,180
latency for the last minute

3968
02:52:27,180 --> 02:52:30,899
here the lines are even closer the color

3969
02:52:30,899 --> 02:52:34,140
background is even smaller so the

3970
02:52:34,140 --> 02:52:37,140
variation is smaller and there is

3971
02:52:37,140 --> 02:52:39,660
basically nothing to see for 9 000

3972
02:52:39,660 --> 02:52:41,100
queries per second

3973
02:52:41,100 --> 02:52:42,840
the validation doesn't cause any

3974
02:52:42,840 --> 02:52:45,140
difference

3975
02:52:45,240 --> 02:52:48,120
okay then next thing the traditional

3976
02:52:48,120 --> 02:52:51,240
wisdom says that surely we will need

3977
02:52:51,240 --> 02:52:54,060
more TCP because of course packets are

3978
02:52:54,060 --> 02:52:56,160
bigger and so on

3979
02:52:56,160 --> 02:52:59,880
to measure that we were focusing on a

3980
02:52:59,880 --> 02:53:03,300
number of TCP sockets in use as reported

3981
02:53:03,300 --> 02:53:05,340
by the operating system

3982
02:53:05,340 --> 02:53:06,960
here

3983
02:53:06,960 --> 02:53:09,000
there is practically no difference even

3984
02:53:09,000 --> 02:53:11,279
at the in the beginning

3985
02:53:11,279 --> 02:53:13,800
if we focus on the last minute and

3986
02:53:13,800 --> 02:53:15,540
average the values for the last minute

3987
02:53:15,540 --> 02:53:17,880
the number of sockets is exactly the

3988
02:53:17,880 --> 02:53:18,779
same

3989
02:53:18,779 --> 02:53:20,040
thank you

3990
02:53:20,040 --> 02:53:21,540
of course

3991
02:53:21,540 --> 02:53:25,439
the sockets in use at any given moment

3992
02:53:25,439 --> 02:53:28,979
might not actually reflect the

3993
02:53:28,979 --> 02:53:31,979
number of sockets over the whole period

3994
02:53:31,979 --> 02:53:33,960
of time because the socket might be so

3995
02:53:33,960 --> 02:53:36,660
short-lived that our data sampling might

3996
02:53:36,660 --> 02:53:38,520
not notice

3997
02:53:38,520 --> 02:53:42,120
so to account forget we were measuring

3998
02:53:42,120 --> 02:53:44,520
also number of TCP sockets in a

3999
02:53:44,520 --> 02:53:46,200
so-called time weight state so

4000
02:53:46,200 --> 02:53:47,520
practically that's

4001
02:53:47,520 --> 02:53:49,800
more or less the sockets which were

4002
02:53:49,800 --> 02:53:52,200
closed by the resolver one that the

4003
02:53:52,200 --> 02:53:54,540
instant section was finished

4004
02:53:54,540 --> 02:53:56,100
and then

4005
02:53:56,100 --> 02:53:58,979
uh to socket for a short period of time

4006
02:53:58,979 --> 02:54:01,859
lingers in so-called time weight state

4007
02:54:01,859 --> 02:54:03,899
this is also measured on the operating

4008
02:54:03,899 --> 02:54:06,060
system level and we can see that there

4009
02:54:06,060 --> 02:54:09,060
is some difference but it's like 14

4010
02:54:09,060 --> 02:54:11,100
sockets on average

4011
02:54:11,100 --> 02:54:13,439
and that's on a resolver which handles

4012
02:54:13,439 --> 02:54:15,420
9000 queries per second so that's

4013
02:54:15,420 --> 02:54:19,160
actually irrelevant the difference

4014
02:54:19,560 --> 02:54:21,840
for UDP sockets

4015
02:54:21,840 --> 02:54:26,720
is the same story nothing to see here

4016
02:54:27,359 --> 02:54:29,880
the iteration of wisdom also says that

4017
02:54:29,880 --> 02:54:33,540
surely getting all the DNS keys and the

4018
02:54:33,540 --> 02:54:35,939
other DNA segmental data will cause more

4019
02:54:35,939 --> 02:54:37,859
packets being sent out

4020
02:54:37,859 --> 02:54:39,479
and here

4021
02:54:39,479 --> 02:54:42,540
if we look closely at the chart there is

4022
02:54:42,540 --> 02:54:44,939
not really a difference I mean in the

4023
02:54:44,939 --> 02:54:48,120
first second there might be a visible

4024
02:54:48,120 --> 02:54:50,640
Spike or might not

4025
02:54:50,640 --> 02:54:53,040
and if we look at the average for the

4026
02:54:53,040 --> 02:54:55,020
last minute there is no difference

4027
02:54:55,020 --> 02:54:57,540
whatsoever

4028
02:54:57,540 --> 02:55:00,479
okay so number of packets didn't

4029
02:55:00,479 --> 02:55:03,840
increase so surely the bell with must

4030
02:55:03,840 --> 02:55:06,740
increase because they are the rr6 right

4031
02:55:06,740 --> 02:55:10,740
again not really if you look at the

4032
02:55:10,740 --> 02:55:12,300
chart in the first second there is

4033
02:55:12,300 --> 02:55:14,640
little Spike

4034
02:55:14,640 --> 02:55:17,640
but again in the last minute there is no

4035
02:55:17,640 --> 02:55:21,979
practical difference nothing to see here

4036
02:55:23,640 --> 02:55:26,279
the traditional wisdom also says that

4037
02:55:26,279 --> 02:55:29,580
the unisexualization is CPU intensive

4038
02:55:29,580 --> 02:55:33,359
and surely it will burn your CPU

4039
02:55:33,359 --> 02:55:35,399
but that's not very true

4040
02:55:35,399 --> 02:55:38,220
here we can see actual increase in the

4041
02:55:38,220 --> 02:55:41,580
first minute or two or maybe three or

4042
02:55:41,580 --> 02:55:43,500
maybe not even that

4043
02:55:43,500 --> 02:55:46,500
uh but that very quickly converges to

4044
02:55:46,500 --> 02:55:49,020
the values for the non-validating

4045
02:55:49,020 --> 02:55:52,260
configuration and again

4046
02:55:52,260 --> 02:55:56,520
we can see that in the last minute there

4047
02:55:56,520 --> 02:55:58,979
is practically no difference I mean it's

4048
02:55:58,979 --> 02:56:02,040
on average two persons difference and

4049
02:56:02,040 --> 02:56:05,700
here 100 percent means one CPU core so

4050
02:56:05,700 --> 02:56:08,640
two persons on one CPU core will

4051
02:56:08,640 --> 02:56:10,920
practically nothing

4052
02:56:10,920 --> 02:56:14,580
and then last but not least finally we

4053
02:56:14,580 --> 02:56:17,580
found a chart where the validation makes

4054
02:56:17,580 --> 02:56:19,620
a meaningful difference

4055
02:56:19,620 --> 02:56:23,340
this is the memory usage for the bind

4056
02:56:23,340 --> 02:56:24,540
resolver

4057
02:56:24,540 --> 02:56:27,720
and here we can see that there is

4058
02:56:27,720 --> 02:56:31,439
difference which is reproducible and

4059
02:56:31,439 --> 02:56:32,700
actually not within the measurement

4060
02:56:32,700 --> 02:56:35,819
error that's a new thing here

4061
02:56:35,819 --> 02:56:37,319
and

4062
02:56:37,319 --> 02:56:39,779
if we focus on the last minute we can

4063
02:56:39,779 --> 02:56:41,160
conclude that the difference is

4064
02:56:41,160 --> 02:56:45,000
approximately 10 percent increase

4065
02:56:45,000 --> 02:56:46,979
for the validating configuration

4066
02:56:46,979 --> 02:56:50,700
compared to non-validating configuration

4067
02:56:50,700 --> 02:56:52,439
so that's

4068
02:56:52,439 --> 02:56:54,660
finally something where we can conclude

4069
02:56:54,660 --> 02:56:57,000
that yes the validation does make a

4070
02:56:57,000 --> 02:57:00,000
difference from the resource consumption

4071
02:57:00,000 --> 02:57:02,720
perspective

4072
02:57:02,939 --> 02:57:06,479
that was for the simple case with 9 000

4073
02:57:06,479 --> 02:57:10,200
queries per second so like not really

4074
02:57:10,200 --> 02:57:12,479
heavily loaded resolver

4075
02:57:12,479 --> 02:57:15,300
let's have a look at the other scenario

4076
02:57:15,300 --> 02:57:17,760
at the other end of the spectrum with

4077
02:57:17,760 --> 02:57:20,220
having a loaded resolver handling under

4078
02:57:20,220 --> 02:57:24,080
35 000 queries per second

4079
02:57:24,420 --> 02:57:27,600
again we start develop with latency

4080
02:57:27,600 --> 02:57:29,700
histogram here

4081
02:57:29,700 --> 02:57:32,220
we focused on the very first minute with

4082
02:57:32,220 --> 02:57:34,800
completely empty cache

4083
02:57:34,800 --> 02:57:37,560
and we can see that in this case the

4084
02:57:37,560 --> 02:57:40,260
validation does make a difference and it

4085
02:57:40,260 --> 02:57:44,100
increases the percentage of

4086
02:57:44,100 --> 02:57:46,819
responses which didn't arrive within

4087
02:57:46,819 --> 02:57:48,899
client timeout

4088
02:57:48,899 --> 02:57:52,020
here the client timeout is actually two

4089
02:57:52,020 --> 02:57:53,399
seconds because that's the value

4090
02:57:53,399 --> 02:57:57,060
typically used by Windows clients

4091
02:57:57,060 --> 02:57:59,580
uh on the other hand we can also see

4092
02:57:59,580 --> 02:58:02,279
that even the non-validating case

4093
02:58:02,279 --> 02:58:04,920
has a problem because the resolver is

4094
02:58:04,920 --> 02:58:07,620
not warmed up the cache is empty and

4095
02:58:07,620 --> 02:58:09,840
more than two percents of queries for

4096
02:58:09,840 --> 02:58:11,399
the non-validating case are not being

4097
02:58:11,399 --> 02:58:12,960
answered in time

4098
02:58:12,960 --> 02:58:14,279
so

4099
02:58:14,279 --> 02:58:16,319
the validation itself is not a problem

4100
02:58:16,319 --> 02:58:19,500
there is always just not keeping up

4101
02:58:19,500 --> 02:58:24,300
let's focus on the latency for a longer

4102
02:58:24,300 --> 02:58:26,580
in more detail

4103
02:58:26,580 --> 02:58:29,100
here we have the same histogram for a

4104
02:58:29,100 --> 02:58:31,500
second minute so now there is a variable

4105
02:58:31,500 --> 02:58:33,540
showing for one minute and was filling

4106
02:58:33,540 --> 02:58:36,060
its cash and answering as usual and now

4107
02:58:36,060 --> 02:58:38,640
we are plotting response time for the

4108
02:58:38,640 --> 02:58:39,600
second minute

4109
02:58:39,600 --> 02:58:42,420
here we can see that the resolver is

4110
02:58:42,420 --> 02:58:44,580
keeping up that's good

4111
02:58:44,580 --> 02:58:46,740
and there is some measurable difference

4112
02:58:46,740 --> 02:58:48,660
between the validating and

4113
02:58:48,660 --> 02:58:50,700
non-validating cases

4114
02:58:50,700 --> 02:58:53,279
slightly worse for the validating

4115
02:58:53,279 --> 02:58:56,880
so we can go on and go on minute by

4116
02:58:56,880 --> 02:58:59,460
minute in the third minute the lines are

4117
02:58:59,460 --> 02:59:02,760
even closer and now I will create a

4118
02:59:02,760 --> 02:59:05,279
animation for you and cycle through

4119
02:59:05,279 --> 02:59:08,160
through the other minutes and you can

4120
02:59:08,160 --> 02:59:11,220
see that it is converging and in the

4121
02:59:11,220 --> 02:59:13,319
last minute of our measurement in a 10th

4122
02:59:13,319 --> 02:59:14,279
minute

4123
02:59:14,279 --> 02:59:16,920
we can see that again the latency

4124
02:59:16,920 --> 02:59:20,640
histogram lines are so close that it's

4125
02:59:20,640 --> 02:59:22,680
hard to say whether there is Meaningful

4126
02:59:22,680 --> 02:59:24,240
difference or not

4127
02:59:24,240 --> 02:59:27,300
if we were really reading the tea leaves

4128
02:59:27,300 --> 02:59:28,380
here

4129
02:59:28,380 --> 02:59:31,080
we could conclude that if there is any

4130
02:59:31,080 --> 02:59:34,740
difference which it is approximately one

4131
02:59:34,740 --> 02:59:38,160
millisecond penalty for approximately

4132
02:59:38,160 --> 02:59:41,279
one or two persons of queries

4133
02:59:41,279 --> 02:59:43,560
and that's about it so that's the impact

4134
02:59:43,560 --> 02:59:47,100
of DNS equal validation on latency for

4135
02:59:47,100 --> 02:59:49,620
really busy resolver which is handling

4136
02:59:49,620 --> 02:59:52,680
135 000 queries per second

4137
02:59:52,680 --> 02:59:55,520
foreign

4138
02:59:57,420 --> 02:59:59,819
what about DCP does it make any

4139
02:59:59,819 --> 03:00:02,700
difference if we have lots of queries

4140
03:00:02,700 --> 03:00:05,640
going on and the validation enabled

4141
03:00:05,640 --> 03:00:08,580
and it turns out that there is little

4142
03:00:08,580 --> 03:00:11,220
difference there is like five sockets on

4143
03:00:11,220 --> 03:00:16,020
average in you more more five more TCP

4144
03:00:16,020 --> 03:00:18,979
sockets in use on average

4145
03:00:18,979 --> 03:00:22,740
algorithm again handlers 135 000 queries

4146
03:00:22,740 --> 03:00:26,100
so five sockets is nothing

4147
03:00:26,100 --> 03:00:29,160
if you look at DCP sockets in time

4148
03:00:29,160 --> 03:00:30,600
weight state

4149
03:00:30,600 --> 03:00:33,180
we can see that actually there is some

4150
03:00:33,180 --> 03:00:35,540
difference it's like 200 something

4151
03:00:35,540 --> 03:00:38,580
sockets but again that this difference

4152
03:00:38,580 --> 03:00:40,740
will not require you to change the

4153
03:00:40,740 --> 03:00:43,560
operating system configuration to you

4154
03:00:43,560 --> 03:00:44,220
know

4155
03:00:44,220 --> 03:00:47,760
enable more open file descriptors at the

4156
03:00:47,760 --> 03:00:49,800
same time or anything like that it just

4157
03:00:49,800 --> 03:00:51,960
works

4158
03:00:51,960 --> 03:00:55,680
for UDP sockets again no surprises the

4159
03:00:55,680 --> 03:00:59,340
difference is really really small

4160
03:00:59,340 --> 03:01:03,000
four packets sent out finally we can see

4161
03:01:03,000 --> 03:01:05,760
some difference but again the result is

4162
03:01:05,760 --> 03:01:08,160
on handling more than 100 000 queries

4163
03:01:08,160 --> 03:01:09,240
per second

4164
03:01:09,240 --> 03:01:12,840
and the difference is like 50 packets

4165
03:01:12,840 --> 03:01:16,080
per second more going out so nothing you

4166
03:01:16,080 --> 03:01:18,560
will notice

4167
03:01:18,720 --> 03:01:21,899
for the bytes coming back to there is

4168
03:01:21,899 --> 03:01:24,060
over the difference is actually not

4169
03:01:24,060 --> 03:01:26,160
measurable it's

4170
03:01:26,160 --> 03:01:30,180
not significant in in any sense

4171
03:01:30,180 --> 03:01:33,800
CPU time surely the iteration of wisdom

4172
03:01:33,800 --> 03:01:36,420
suggests that now the CPU must be

4173
03:01:36,420 --> 03:01:38,760
burning but that's not the case

4174
03:01:38,760 --> 03:01:42,840
if you look at the comparison here in

4175
03:01:42,840 --> 03:01:45,479
the first couple minutes there is some

4176
03:01:45,479 --> 03:01:47,640
difference which we can see with naked

4177
03:01:47,640 --> 03:01:50,160
eye on the chart but it very quickly

4178
03:01:50,160 --> 03:01:52,560
converges and again the validating and

4179
03:01:52,560 --> 03:01:55,140
non-validating configurations are pretty

4180
03:01:55,140 --> 03:01:56,220
close

4181
03:01:56,220 --> 03:02:00,240
and in the 10th minute the difference is

4182
03:02:00,240 --> 03:02:04,080
like 22 percent increase of CPU time

4183
03:02:04,080 --> 03:02:07,140
consumption and again let me remind you

4184
03:02:07,140 --> 03:02:09,720
hundred percent is one CPU core so

4185
03:02:09,720 --> 03:02:12,779
basically the NSX validation

4186
03:02:12,779 --> 03:02:16,500
for this many client queries requires

4187
03:02:16,500 --> 03:02:19,439
a quarter of one CPU core and that's

4188
03:02:19,439 --> 03:02:22,800
about it so really

4189
03:02:22,800 --> 03:02:25,140
not anything you would notice in

4190
03:02:25,140 --> 03:02:27,359
practice

4191
03:02:27,359 --> 03:02:29,399
and for memory

4192
03:02:29,399 --> 03:02:32,700
again that's the only significant chart

4193
03:02:32,700 --> 03:02:36,359
here we can see that the increase is

4194
03:02:36,359 --> 03:02:37,979
approximately

4195
03:02:37,979 --> 03:02:41,399
nine percent uh and that's computed over

4196
03:02:41,399 --> 03:02:43,760
the average values over the last minute

4197
03:02:43,760 --> 03:02:47,340
so that kind of confirms that of course

4198
03:02:47,340 --> 03:02:49,080
it requires more memory to store the

4199
03:02:49,080 --> 03:02:52,319
data that's but that's not like super

4200
03:02:52,319 --> 03:02:55,340
significant here

4201
03:02:57,120 --> 03:03:00,120
that's about it we can conclude from our

4202
03:03:00,120 --> 03:03:03,300
measurements that the dnsic validation

4203
03:03:03,300 --> 03:03:05,880
has negligible impact on latency

4204
03:03:05,880 --> 03:03:10,319
bandwave CPU time consumption number of

4205
03:03:10,319 --> 03:03:12,479
operating system sockets

4206
03:03:12,479 --> 03:03:14,040
or

4207
03:03:14,040 --> 03:03:17,460
or basically anything else except memory

4208
03:03:17,460 --> 03:03:20,640
the memory increase is roughly 10

4209
03:03:20,640 --> 03:03:22,859
percent increase for the validating

4210
03:03:22,859 --> 03:03:25,620
configuration but that's the only cost

4211
03:03:25,620 --> 03:03:29,399
which we actually found might be

4212
03:03:29,399 --> 03:03:32,899
significant in any deployment

4213
03:03:33,060 --> 03:03:35,220
if you have any questions about the

4214
03:03:35,220 --> 03:03:37,800
measurements tooling we use or anything

4215
03:03:37,800 --> 03:03:38,960
else

4216
03:03:38,960 --> 03:03:41,939
at any time you can contact the bind

4217
03:03:41,939 --> 03:03:44,399
user's mailing list of course you can

4218
03:03:44,399 --> 03:03:46,260
email me directly email us on the first

4219
03:03:46,260 --> 03:03:47,700
slide

4220
03:03:47,700 --> 03:03:49,979
and that's all from me thank you for

4221
03:03:49,979 --> 03:03:52,278
your time

4222
03:03:52,399 --> 03:03:55,920
uh okay perfect so quick quick three

4223
03:03:55,920 --> 03:03:57,960
questions what fraction of the sample

4224
03:03:57,960 --> 03:04:00,120
queries were in sign Zone

4225
03:04:00,120 --> 03:04:03,120
uh uh and also fraction of the NSX

4226
03:04:03,120 --> 03:04:04,740
signed names

4227
03:04:04,740 --> 03:04:07,080
uh I will answer this these questions

4228
03:04:07,080 --> 03:04:09,180
together because the answer is I don't

4229
03:04:09,180 --> 03:04:11,819
know it was 81 million queries in 10

4230
03:04:11,819 --> 03:04:14,160
minutes and I didn't go through all of

4231
03:04:14,160 --> 03:04:16,800
them and estimating that from the

4232
03:04:16,800 --> 03:04:19,439
statistics is not exactly easy because

4233
03:04:19,439 --> 03:04:22,200
number of validations is not the same as

4234
03:04:22,200 --> 03:04:24,779
number of queries because it depends on

4235
03:04:24,779 --> 03:04:29,760
our sets and so on and so on so I don't

4236
03:04:29,760 --> 03:04:30,859
know

4237
03:04:30,859 --> 03:04:34,800
uh did non-validating case set d o

4238
03:04:34,800 --> 03:04:37,560
equals one the answer is

4239
03:04:37,560 --> 03:04:40,080
it depends on what the client did

4240
03:04:40,080 --> 03:04:42,660
because we were playing the P caps so

4241
03:04:42,660 --> 03:04:45,240
whatever the original client sent we

4242
03:04:45,240 --> 03:04:47,640
were replaying that to the exactly the

4243
03:04:47,640 --> 03:04:49,740
same just the configuration in the

4244
03:04:49,740 --> 03:04:51,479
resolver was different

4245
03:04:51,479 --> 03:04:54,720
so whatever binded us

4246
03:04:54,720 --> 03:04:57,960
is what we measured and that means that

4247
03:04:57,960 --> 03:05:00,300
we were measuring actually the impact of

4248
03:05:00,300 --> 03:05:02,819
the configuration knob not you know the

4249
03:05:02,819 --> 03:05:05,939
theoretical case what we were measuring

4250
03:05:05,939 --> 03:05:08,460
what happens if you flip off this switch

4251
03:05:08,460 --> 03:05:11,220
from ensl validation off to on or vice

4252
03:05:11,220 --> 03:05:12,660
versa

4253
03:05:12,660 --> 03:05:15,899
uh so next question

4254
03:05:15,899 --> 03:05:17,880
it would be also great to have some

4255
03:05:17,880 --> 03:05:20,220
instrumentation on a typical clients the

4256
03:05:20,220 --> 03:05:22,740
political position latency Etc with the

4257
03:05:22,740 --> 03:05:24,899
validation and validation on the

4258
03:05:24,899 --> 03:05:26,580
responses from the same result as well

4259
03:05:26,580 --> 03:05:28,020
that's not actually a question it would

4260
03:05:28,020 --> 03:05:30,720
be great but that's

4261
03:05:30,720 --> 03:05:32,700
super hard to do I've spent a couple

4262
03:05:32,700 --> 03:05:34,439
years doing these kind of measurements

4263
03:05:34,439 --> 03:05:36,600
and it's super hard if you do that

4264
03:05:36,600 --> 03:05:39,500
please tell me how

4265
03:05:40,220 --> 03:05:42,840
asks what percent of queries are okay

4266
03:05:42,840 --> 03:05:44,819
that's the same question I can't answer

4267
03:05:44,819 --> 03:05:47,700
with straight face

4268
03:05:47,700 --> 03:05:50,700
uh

4269
03:05:51,240 --> 03:05:53,100
share the last question how much time

4270
03:05:53,100 --> 03:05:54,660
elapsed between the sampling of the

4271
03:05:54,660 --> 03:05:56,279
traffic data and running of the

4272
03:05:56,279 --> 03:05:59,399
experiments how would a large delay with

4273
03:05:59,399 --> 03:06:02,340
an expected volume of change to the

4274
03:06:02,340 --> 03:06:03,720
external internal delegations and

4275
03:06:03,720 --> 03:06:06,120
signing Etc impact the results

4276
03:06:06,120 --> 03:06:09,240
that's excellent question the data set

4277
03:06:09,240 --> 03:06:11,340
was taken February this year so it's

4278
03:06:11,340 --> 03:06:13,700
approximately half a year old

4279
03:06:13,700 --> 03:06:16,580
and it very much depends on the data set

4280
03:06:16,580 --> 03:06:19,740
it can be completely rubbish two weeks

4281
03:06:19,740 --> 03:06:23,160
afterwards when you know the like huge

4282
03:06:23,160 --> 03:06:25,620
bunch of zones is migrated to another

4283
03:06:25,620 --> 03:06:29,160
provider and DNS enabled or disabled or

4284
03:06:29,160 --> 03:06:30,840
it can be the same there is no way to

4285
03:06:30,840 --> 03:06:32,100
tell

4286
03:06:32,100 --> 03:06:34,319
it's just you know one data set one

4287
03:06:34,319 --> 03:06:36,600
snapshot in time you cannot really say

4288
03:06:36,600 --> 03:06:38,279
without simulating rest of the internet

4289
03:06:38,279 --> 03:06:41,279
and changing only one piece of it which

4290
03:06:41,279 --> 03:06:43,080
is something I already don't have to

4291
03:06:43,080 --> 03:06:45,680
link to them

4292
03:06:46,439 --> 03:06:50,160
um and that seems that it is it any

4293
03:06:50,160 --> 03:06:53,720
other questions quickly

4294
03:06:54,000 --> 03:06:56,340
thank you everyone it doesn't seem like

4295
03:06:56,340 --> 03:06:59,380
it so thank you for attention

4296
03:06:59,380 --> 03:07:07,878
[Applause]

4297
03:07:08,220 --> 03:07:10,680
and now let's move on with Paul Hoffman

4298
03:07:10,680 --> 03:07:12,899
from ican he's going to talk about round

4299
03:07:12,899 --> 03:07:15,300
trip times between resolvers and the

4300
03:07:15,300 --> 03:07:18,479
root server so thank you hi um I'm Paul

4301
03:07:18,479 --> 03:07:20,939
Hoffman and I'm going to talk this is a

4302
03:07:20,939 --> 03:07:23,220
lightning talk so I will talk even

4303
03:07:23,220 --> 03:07:26,040
faster than I normally do on

4304
03:07:26,040 --> 03:07:27,180
um

4305
03:07:27,180 --> 03:07:29,520
some measurements we did on round trip

4306
03:07:29,520 --> 03:07:32,160
times between specifically resolvers and

4307
03:07:32,160 --> 03:07:34,319
a root server and as you can imagine the

4308
03:07:34,319 --> 03:07:39,120
a root server is the one from icann

4309
03:07:39,120 --> 03:07:41,760
um so quick overview of of the short

4310
03:07:41,760 --> 03:07:43,560
presentation

4311
03:07:43,560 --> 03:07:47,399
um we know that resolver operators ask

4312
03:07:47,399 --> 03:07:50,100
root server operators you know they they

4313
03:07:50,100 --> 03:07:51,779
want better round trip time so we'll

4314
03:07:51,779 --> 03:07:53,939
cover that a little bit

4315
03:07:53,939 --> 03:07:57,060
um I think it's useful to come to to

4316
03:07:57,060 --> 03:07:59,160
answer them with comparisons to the real

4317
03:07:59,160 --> 03:08:01,140
world cover that

4318
03:08:01,140 --> 03:08:04,200
um then I'll talk the meat of the

4319
03:08:04,200 --> 03:08:07,080
presentation is how we did an estimation

4320
03:08:07,080 --> 03:08:10,140
um with the uh imrs which is the L root

4321
03:08:10,140 --> 03:08:12,899
data and that sort of I hope the

4322
03:08:12,899 --> 03:08:14,580
interesting part of the talk is we did

4323
03:08:14,580 --> 03:08:17,580
it in a bad fashion uh uh simply because

4324
03:08:17,580 --> 03:08:19,979
that was our restriction

4325
03:08:19,979 --> 03:08:22,680
um and then I have a request at the end

4326
03:08:22,680 --> 03:08:24,660
for the other root server operators uh

4327
03:08:24,660 --> 03:08:26,060
in the real

4328
03:08:26,060 --> 03:08:30,779
so um you know root server operators get

4329
03:08:30,779 --> 03:08:33,000
asked oh hey can can you put an instance

4330
03:08:33,000 --> 03:08:35,760
near me you know um I I want better I

4331
03:08:35,760 --> 03:08:37,800
want better round trip times and such

4332
03:08:37,800 --> 03:08:39,240
like that

4333
03:08:39,240 --> 03:08:42,359
um and those can fall into two sort of

4334
03:08:42,359 --> 03:08:46,500
General categories one is that

4335
03:08:46,500 --> 03:08:49,080
um an operator who says well I want to

4336
03:08:49,080 --> 03:08:50,939
get at least average you know I don't

4337
03:08:50,939 --> 03:08:52,560
expect you to do great for me but I want

4338
03:08:52,560 --> 03:08:54,720
to have at least average so we need to

4339
03:08:54,720 --> 03:08:58,800
know a median time uh for those and some

4340
03:08:58,800 --> 03:09:01,200
some resolver operators say oh I think

4341
03:09:01,200 --> 03:09:03,180
we have terrible I think we're like the

4342
03:09:03,180 --> 03:09:05,640
worst and so would be able it'd be nice

4343
03:09:05,640 --> 03:09:08,040
to be able to tell them well here's the

4344
03:09:08,040 --> 03:09:10,859
round trip time for like 90 percent

4345
03:09:10,859 --> 03:09:13,380
and I did some research and I didn't

4346
03:09:13,380 --> 03:09:15,540
find any root server operators who had

4347
03:09:15,540 --> 03:09:17,040
published this information so I said

4348
03:09:17,040 --> 03:09:18,840
okay great

4349
03:09:18,840 --> 03:09:20,399
um we have we have the data let's look

4350
03:09:20,399 --> 03:09:22,620
at it so

4351
03:09:22,620 --> 03:09:24,960
um estimating the round trip time became

4352
03:09:24,960 --> 03:09:27,540
a little bit funny because the thing you

4353
03:09:27,540 --> 03:09:29,760
would normally do is get a sample of all

4354
03:09:29,760 --> 03:09:31,740
the queries going to your root server

4355
03:09:31,740 --> 03:09:34,680
instance send them queries or pings or

4356
03:09:34,680 --> 03:09:36,359
whatever and just measure the round trip

4357
03:09:36,359 --> 03:09:39,000
times and in fact that's what I'm asking

4358
03:09:39,000 --> 03:09:40,859
the rest of the root server operators in

4359
03:09:40,859 --> 03:09:42,660
the room to do

4360
03:09:42,660 --> 03:09:44,760
um we can't do that at icann because our

4361
03:09:44,760 --> 03:09:46,560
agreement which is very public you know

4362
03:09:46,560 --> 03:09:48,779
we have we have the agreement with the

4363
03:09:48,779 --> 03:09:50,880
uh the instance holders

4364
03:09:50,880 --> 03:09:53,040
um says that

4365
03:09:53,040 --> 03:09:55,620
um no other data is available or is

4366
03:09:55,620 --> 03:09:58,580
collected by icann so we can't actually

4367
03:09:58,580 --> 03:10:03,120
like send queries for timing from our

4368
03:10:03,120 --> 03:10:04,620
instances

4369
03:10:04,620 --> 03:10:06,840
um but of course hey we're Engineers

4370
03:10:06,840 --> 03:10:08,939
here that doesn't that doesn't stop us

4371
03:10:08,939 --> 03:10:12,840
from estimating so what we did was

4372
03:10:12,840 --> 03:10:16,080
um since we have all of the traffic and

4373
03:10:16,080 --> 03:10:18,359
normally most people think of this as

4374
03:10:18,359 --> 03:10:21,120
query traffic but query traffic comes

4375
03:10:21,120 --> 03:10:23,700
with some IP headers in it the IP

4376
03:10:23,700 --> 03:10:26,819
headers has the ipttl value which is

4377
03:10:26,819 --> 03:10:29,460
hops want to be really clear here what

4378
03:10:29,460 --> 03:10:31,800
you get in the IP header is the number

4379
03:10:31,800 --> 03:10:36,479
of hops between the queryer and you

4380
03:10:36,479 --> 03:10:41,220
um and so what I wanted to see was could

4381
03:10:41,220 --> 03:10:44,700
we sort of convert that hop count into

4382
03:10:44,700 --> 03:10:47,640
round trip time

4383
03:10:47,640 --> 03:10:51,120
um you know so how would I do that so I

4384
03:10:51,120 --> 03:10:53,100
I started off with just a full day's

4385
03:10:53,100 --> 03:10:55,859
worth of data um from it looking at

4386
03:10:55,859 --> 03:10:59,640
again at the ipttls

4387
03:10:59,640 --> 03:11:01,200
and then you'll see in a couple slides

4388
03:11:01,200 --> 03:11:02,520
what I did with that

4389
03:11:02,520 --> 03:11:03,840
so

4390
03:11:03,840 --> 03:11:06,000
um there was about

4391
03:11:06,000 --> 03:11:06,600
um

4392
03:11:06,600 --> 03:11:08,899
for that that day which was recently

4393
03:11:08,899 --> 03:11:13,620
about 1.7 million obscured addresses and

4394
03:11:13,620 --> 03:11:17,580
that's obscured by at for ipv4 at slash

4395
03:11:17,580 --> 03:11:22,260
24 for IPv6 at the Slash 48.

4396
03:11:22,260 --> 03:11:23,700
um so that seemed like a pretty good

4397
03:11:23,700 --> 03:11:25,140
data set

4398
03:11:25,140 --> 03:11:28,080
um and when I took all of those together

4399
03:11:28,080 --> 03:11:30,359
across all of our instances and some of

4400
03:11:30,359 --> 03:11:33,240
our instances are in obscure places with

4401
03:11:33,240 --> 03:11:35,520
not very good connectivity to them some

4402
03:11:35,520 --> 03:11:37,439
of them are in data centers

4403
03:11:37,439 --> 03:11:40,500
um the median iptl and again this is hop

4404
03:11:40,500 --> 03:11:43,439
count is about ten and a half hops for a

4405
03:11:43,439 --> 03:11:44,760
query coming in

4406
03:11:44,760 --> 03:11:47,220
and then the 90th percentile is about 18

4407
03:11:47,220 --> 03:11:49,920
hops so that's sort of interesting that

4408
03:11:49,920 --> 03:11:53,040
the 90th percentile is about twice as

4409
03:11:53,040 --> 03:11:56,040
many hops as the median

4410
03:11:56,040 --> 03:11:59,340
um and just as a caveat here for anyone

4411
03:11:59,340 --> 03:12:01,260
not only who runs root server operators

4412
03:12:01,260 --> 03:12:03,240
anyone who runs

4413
03:12:03,240 --> 03:12:06,000
any old any old router at all you know

4414
03:12:06,000 --> 03:12:08,340
that reverse path and input path there's

4415
03:12:08,340 --> 03:12:10,859
not always the same so this is this is

4416
03:12:10,859 --> 03:12:12,899
really just rough estimation this is

4417
03:12:12,899 --> 03:12:15,359
just a guess that we were doing

4418
03:12:15,359 --> 03:12:18,060
um now to get the correlation between

4419
03:12:18,060 --> 03:12:20,580
the IP round trip time and an actual

4420
03:12:20,580 --> 03:12:23,760
milliseconds I use ripe Atlas we uh did

4421
03:12:23,760 --> 03:12:27,899
the 10 000 probes and we just we did

4422
03:12:27,899 --> 03:12:31,500
from the 10 000 probes to the IP address

4423
03:12:31,500 --> 03:12:34,319
of of L root

4424
03:12:34,319 --> 03:12:39,000
so this is this is not exactly

4425
03:12:39,000 --> 03:12:41,640
um what you would get going from all of

4426
03:12:41,640 --> 03:12:43,680
the resolvers but it's our what we're

4427
03:12:43,680 --> 03:12:45,300
doing here is not trying to get

4428
03:12:45,300 --> 03:12:48,240
round-trip times in general we're trying

4429
03:12:48,240 --> 03:12:51,020
to get a measurement of round-trip time

4430
03:12:51,020 --> 03:12:54,660
in hops to round-trip time in in

4431
03:12:54,660 --> 03:12:56,399
milliseconds

4432
03:12:56,399 --> 03:13:00,779
um and so from The Ripe Atlas data the

4433
03:13:00,779 --> 03:13:03,779
10.5 hops which was the median comes out

4434
03:13:03,779 --> 03:13:06,180
to be about 33 milliseconds or we can

4435
03:13:06,180 --> 03:13:08,640
call it 30. and then the 90th percentile

4436
03:13:08,640 --> 03:13:13,260
is of 18 hops is about 60 milliseconds

4437
03:13:13,260 --> 03:13:16,979
um so again this is much rougher than

4438
03:13:16,979 --> 03:13:18,660
somebody who was able to do a direct

4439
03:13:18,660 --> 03:13:20,939
measurement but we thought that that was

4440
03:13:20,939 --> 03:13:21,840
okay

4441
03:13:21,840 --> 03:13:22,500
um

4442
03:13:22,500 --> 03:13:25,740
and again the The Ripe Atlas probes

4443
03:13:25,740 --> 03:13:27,960
aren't in all the same places but

4444
03:13:27,960 --> 03:13:30,960
looking at the lines I would say it's

4445
03:13:30,960 --> 03:13:33,899
probably a reasonable estimate of round

4446
03:13:33,899 --> 03:13:36,300
trip you know round trip time to Hops

4447
03:13:36,300 --> 03:13:37,979
and

4448
03:13:37,979 --> 03:13:39,479
um the other thing I would note is

4449
03:13:39,479 --> 03:13:42,060
around the 90th percentile in the ripe

4450
03:13:42,060 --> 03:13:46,979
Atlas data the uh about at about 18 uh

4451
03:13:46,979 --> 03:13:50,640
milliseconds I'm sorry about 18 hops it

4452
03:13:50,640 --> 03:13:53,220
got a lot worse it got very very janky

4453
03:13:53,220 --> 03:13:56,100
but these were our good guesses so

4454
03:13:56,100 --> 03:13:59,279
before I go to the the request then

4455
03:13:59,279 --> 03:14:01,500
there's this question of well if if the

4456
03:14:01,500 --> 03:14:04,200
resolver operators are asking

4457
03:14:04,200 --> 03:14:08,040
um well I I want to get closer to to you

4458
03:14:08,040 --> 03:14:09,720
know root service system so that I get

4459
03:14:09,720 --> 03:14:11,760
you know better service

4460
03:14:11,760 --> 03:14:15,060
is this good is somebody who's only at

4461
03:14:15,060 --> 03:14:17,460
the 90th percentile you know in the last

4462
03:14:17,460 --> 03:14:19,200
10 percent

4463
03:14:19,200 --> 03:14:22,800
um is is that bad

4464
03:14:22,800 --> 03:14:25,140
you know we never hear people even at

4465
03:14:25,140 --> 03:14:28,979
the 95th or 99th percentile saying there

4466
03:14:28,979 --> 03:14:30,960
is an effect on my users I need

4467
03:14:30,960 --> 03:14:33,960
something better you know so I am not

4468
03:14:33,960 --> 03:14:36,300
trying to answer is this good we could

4469
03:14:36,300 --> 03:14:38,760
have long debates about it there are no

4470
03:14:38,760 --> 03:14:40,740
numbers showing that but I want to be

4471
03:14:40,740 --> 03:14:43,020
able to answer to people how are you

4472
03:14:43,020 --> 03:14:44,040
doing

4473
03:14:44,040 --> 03:14:47,640
um you know faster is always better but

4474
03:14:47,640 --> 03:14:49,979
if it's better by an imperceptible

4475
03:14:49,979 --> 03:14:53,399
amount who cares you know it's sort of

4476
03:14:53,399 --> 03:14:55,859
the same kind of thing if you go to a

4477
03:14:55,859 --> 03:14:57,660
salad bar with unlimited you know you

4478
03:14:57,660 --> 03:14:59,279
can fill up your plate

4479
03:14:59,279 --> 03:15:02,760
and if you take one piece of lettuce off

4480
03:15:02,760 --> 03:15:04,620
of your plate before you go back to your

4481
03:15:04,620 --> 03:15:06,540
table that's not as good you're not

4482
03:15:06,540 --> 03:15:08,460
getting as much lettuce but you're not

4483
03:15:08,460 --> 03:15:11,358
going to notice the difference

4484
03:15:11,520 --> 03:15:14,040
um so here's here's my last slide it's a

4485
03:15:14,040 --> 03:15:15,779
request to the other rsos in the room

4486
03:15:15,779 --> 03:15:18,660
you all can probably do this measurement

4487
03:15:18,660 --> 03:15:20,580
better than we did that is you can

4488
03:15:20,580 --> 03:15:24,600
probably do the sampling and then go out

4489
03:15:24,600 --> 03:15:26,399
you know and send a query it either can

4490
03:15:26,399 --> 03:15:29,580
be a DNS query where you get an NX

4491
03:15:29,580 --> 03:15:33,000
domain or refused and um or it could

4492
03:15:33,000 --> 03:15:35,460
even be a you know just a ping or

4493
03:15:35,460 --> 03:15:38,040
whatever if y'all could do that

4494
03:15:38,040 --> 03:15:40,140
I'm happy to put it all together we can

4495
03:15:40,140 --> 03:15:42,479
see if the these sort of boat you know

4496
03:15:42,479 --> 03:15:45,600
like like derived numbers that we did

4497
03:15:45,600 --> 03:15:49,080
um uh are the same as yours publish it

4498
03:15:49,080 --> 03:15:50,460
and such like that I think it would be

4499
03:15:50,460 --> 03:15:52,319
useful um we can certainly hand it off

4500
03:15:52,319 --> 03:15:54,479
to our Sac or whatever so

4501
03:15:54,479 --> 03:15:57,000
um that's it from me and I am happy to

4502
03:15:57,000 --> 03:15:58,260
take questions

4503
03:15:58,260 --> 03:16:00,000
all right thanks Paul

4504
03:16:00,000 --> 03:16:02,279
so yeah there is a few questions

4505
03:16:02,279 --> 03:16:04,859
um the first one from happy which is do

4506
03:16:04,859 --> 03:16:06,720
you uh do you get enough TCP traffic

4507
03:16:06,720 --> 03:16:09,600
that you could get nice latency data

4508
03:16:09,600 --> 03:16:12,000
from the delay between packets in the

4509
03:16:12,000 --> 03:16:14,220
TCP stream

4510
03:16:14,220 --> 03:16:16,439
um we didn't differentiate between TCP

4511
03:16:16,439 --> 03:16:18,000
and UDP

4512
03:16:18,000 --> 03:16:21,000
um just because we don't have in in the

4513
03:16:21,000 --> 03:16:23,040
data set I had we didn't have it but

4514
03:16:23,040 --> 03:16:26,160
again we're not getting timing anyway so

4515
03:16:26,160 --> 03:16:28,319
it wouldn't it wouldn't help us at all

4516
03:16:28,319 --> 03:16:30,240
it certainly would help the other rsos

4517
03:16:30,240 --> 03:16:32,939
who might be doing this measurement

4518
03:16:32,939 --> 03:16:34,140
thanks

4519
03:16:34,140 --> 03:16:36,840
and then Brian Dixon

4520
03:16:36,840 --> 03:16:40,080
what about rtt from TCP traffic fraction

4521
03:16:40,080 --> 03:16:43,859
and maybe setting TC equal 1 to force

4522
03:16:43,859 --> 03:16:47,160
some extra data sample

4523
03:16:47,160 --> 03:16:49,979
um that would that would very much hurt

4524
03:16:49,979 --> 03:16:52,439
the uh the traffic we're getting that

4525
03:16:52,439 --> 03:16:53,880
these are supposed to be silent

4526
03:16:53,880 --> 03:16:56,520
measurements we you know Meg

4527
03:16:56,520 --> 03:16:58,140
I think this is true for all the root

4528
03:16:58,140 --> 03:17:00,300
server operators measuring is much less

4529
03:17:00,300 --> 03:17:02,040
important than serving

4530
03:17:02,040 --> 03:17:04,439
so serve as best as you can and do

4531
03:17:04,439 --> 03:17:08,300
whatever measurements you can after that

4532
03:17:08,700 --> 03:17:12,260
and then that was a question from Brian

4533
03:17:12,600 --> 03:17:15,060
if this is a root service serving TLD

4534
03:17:15,060 --> 03:17:19,020
info how much is garbage and maybe track

4535
03:17:19,020 --> 03:17:21,120
resolvers to see if specific reservers

4536
03:17:21,120 --> 03:17:23,160
are apparently doing aggressive and sec

4537
03:17:23,160 --> 03:17:24,960
to block garbage

4538
03:17:24,960 --> 03:17:27,899
and wouldn't that help and clients uh

4539
03:17:27,899 --> 03:17:30,540
and sorry and wouldn't that helped the

4540
03:17:30,540 --> 03:17:33,359
end clients a lot more okay uh all of

4541
03:17:33,359 --> 03:17:35,700
it's possible completely irrelevant to

4542
03:17:35,700 --> 03:17:37,560
this presentation where we were really

4543
03:17:37,560 --> 03:17:40,020
just looking at how long does it take

4544
03:17:40,020 --> 03:17:42,300
and and when someone says I want better

4545
03:17:42,300 --> 03:17:44,580
service you know do they actually but

4546
03:17:44,580 --> 03:17:47,399
yeah we uh there's plenty of data on

4547
03:17:47,399 --> 03:17:50,340
that um in fact if you go to the El root

4548
03:17:50,340 --> 03:17:53,399
website we have up-to-date charts on

4549
03:17:53,399 --> 03:17:56,000
that all the time

4550
03:17:56,220 --> 03:17:59,040
all right thank you there is no other

4551
03:17:59,040 --> 03:18:02,950
questions thanks a lot great thank you

4552
03:18:02,950 --> 03:18:08,040
[Applause]

4553
03:18:08,040 --> 03:18:10,100
we're now going to have a small break

4554
03:18:10,100 --> 03:18:15,920
and we are going to be back at 2005 UTC

4555
03:18:15,920 --> 03:18:21,439
or 1605 Eastern Time

4556
03:18:30,080 --> 03:18:33,680
welcome back everybody

4557
03:18:34,620 --> 03:18:36,960
so we're going to get started with our

4558
03:18:36,960 --> 03:18:39,240
last sessions of the day

4559
03:18:39,240 --> 03:18:43,080
we have two presentations

4560
03:18:43,080 --> 03:18:45,240
the first one is going to be Dwayne

4561
03:18:45,240 --> 03:18:49,020
whistle from verisign talking about Zone

4562
03:18:49,020 --> 03:18:51,840
MD and the root Zone

4563
03:18:51,840 --> 03:18:54,359
uh so hello everyone my name is Dwayne

4564
03:18:54,359 --> 03:18:56,460
wessels and the title of my presentation

4565
03:18:56,460 --> 03:18:57,720
is

4566
03:18:57,720 --> 03:19:00,479
message digests for DNS zones

4567
03:19:00,479 --> 03:19:03,479
including a little bit of about plans

4568
03:19:03,479 --> 03:19:06,380
for the root Zone

4569
03:19:07,979 --> 03:19:10,979
so I should apologize in advance if uh

4570
03:19:10,979 --> 03:19:12,600
if some of you have heard this before

4571
03:19:12,600 --> 03:19:14,340
because this talk or a very similar talk

4572
03:19:14,340 --> 03:19:16,500
has been given in a number of forums

4573
03:19:16,500 --> 03:19:18,779
with the goal of uh sort of you know

4574
03:19:18,779 --> 03:19:21,300
making people aware of of what's going

4575
03:19:21,300 --> 03:19:22,140
on

4576
03:19:22,140 --> 03:19:23,760
um I might I might sort of skim over

4577
03:19:23,760 --> 03:19:26,399
some of the early stuff but

4578
03:19:26,399 --> 03:19:30,000
um basically uh if you don't know a

4579
03:19:30,000 --> 03:19:32,939
dns's own digest is a cryptographic

4580
03:19:32,939 --> 03:19:36,300
digest over the data in a DNS Zone it's

4581
03:19:36,300 --> 03:19:38,460
embedded into the Zone itself so it it

4582
03:19:38,460 --> 03:19:41,279
rides along with it there's a new record

4583
03:19:41,279 --> 03:19:45,479
type called Zone MD and and sort of uh I

4584
03:19:45,479 --> 03:19:48,120
use Zone MD interchangeably to refer

4585
03:19:48,120 --> 03:19:49,800
both to the record type and to the um

4586
03:19:49,800 --> 03:19:51,720
the protocol

4587
03:19:51,720 --> 03:19:54,300
um and so the the digest is computed by

4588
03:19:54,300 --> 03:19:56,460
folks who publish zones and then it can

4589
03:19:56,460 --> 03:19:59,460
be verified by folks who receive or

4590
03:19:59,460 --> 03:20:02,819
consume Zone data

4591
03:20:02,819 --> 03:20:05,640
so it's all very analogous to the kind

4592
03:20:05,640 --> 03:20:06,600
of thing that you're probably familiar

4593
03:20:06,600 --> 03:20:08,399
with if you've downloaded software on

4594
03:20:08,399 --> 03:20:10,439
the internet you've seen a directory

4595
03:20:10,439 --> 03:20:13,020
that has like a checksum file and then

4596
03:20:13,020 --> 03:20:15,540
maybe a pgp signature over that checksum

4597
03:20:15,540 --> 03:20:17,160
file or something like that so this is

4598
03:20:17,160 --> 03:20:19,740
the same idea but it's done a little bit

4599
03:20:19,740 --> 03:20:20,939
differently because we can embed the

4600
03:20:20,939 --> 03:20:25,020
record directly into the Zone itself

4601
03:20:25,020 --> 03:20:30,420
so this is all specified in RFC 8976

4602
03:20:30,420 --> 03:20:32,220
um I don't think

4603
03:20:32,220 --> 03:20:34,740
the co-authors with me are in the room

4604
03:20:34,740 --> 03:20:37,920
Wes and Warren were co-authors on this

4605
03:20:37,920 --> 03:20:38,520
um

4606
03:20:38,520 --> 03:20:40,560
uh so thanks thanks to them for helping

4607
03:20:40,560 --> 03:20:41,939
out with that

4608
03:20:41,939 --> 03:20:42,899
um

4609
03:20:42,899 --> 03:20:44,640
so the way this works is the all the

4610
03:20:44,640 --> 03:20:46,859
data in the zone is given as input to a

4611
03:20:46,859 --> 03:20:48,960
digest function that has to be in a

4612
03:20:48,960 --> 03:20:53,220
well-defined uh ordering and format and

4613
03:20:53,220 --> 03:20:55,020
uh that you have to exclude of course

4614
03:20:55,020 --> 03:20:57,720
the Zone MD record itself otherwise you

4615
03:20:57,720 --> 03:20:59,460
have sort of a looping problem

4616
03:20:59,460 --> 03:21:02,880
uh and then at the end you put the the

4617
03:21:02,880 --> 03:21:05,640
calculated digest into the zone and

4618
03:21:05,640 --> 03:21:08,460
ideally everything is signed with dnssec

4619
03:21:08,460 --> 03:21:10,620
for for that extra verification and

4620
03:21:10,620 --> 03:21:12,120
there's a little graphic at the bottom

4621
03:21:12,120 --> 03:21:14,100
that sort of shows the the flow and how

4622
03:21:14,100 --> 03:21:16,640
this works

4623
03:21:16,979 --> 03:21:20,520
so Zone MD is designed to protect data

4624
03:21:20,520 --> 03:21:21,620
at rest

4625
03:21:21,620 --> 03:21:25,399
versus data in transit

4626
03:21:25,399 --> 03:21:28,200
it's useful when you're Distributing

4627
03:21:28,200 --> 03:21:30,840
Zone data between uh primary and

4628
03:21:30,840 --> 03:21:32,880
secondary name servers especially in you

4629
03:21:32,880 --> 03:21:36,740
know very complex modern environments

4630
03:21:36,740 --> 03:21:39,540
including uh you know sort of the root

4631
03:21:39,540 --> 03:21:42,000
Zone there's been of course increased

4632
03:21:42,000 --> 03:21:43,979
interest recently in serving root Zone

4633
03:21:43,979 --> 03:21:47,279
data locally hyperlocal root or RFC 8806

4634
03:21:47,279 --> 03:21:49,620
and there are some other possible uses

4635
03:21:49,620 --> 03:21:53,640
for Zone MD such as CD ccds and rpz and

4636
03:21:53,640 --> 03:21:58,760
and you know your use here as well

4637
03:21:59,399 --> 03:22:01,920
so a few slides about how it looks this

4638
03:22:01,920 --> 03:22:04,560
is an example Zone MD record and the

4639
03:22:04,560 --> 03:22:06,660
highlighted field is the first field of

4640
03:22:06,660 --> 03:22:09,120
the record which is the serial so it has

4641
03:22:09,120 --> 03:22:10,620
a Serial field which has to match the

4642
03:22:10,620 --> 03:22:12,240
SOA serial

4643
03:22:12,240 --> 03:22:15,960
then there's a scheme field currently

4644
03:22:15,960 --> 03:22:18,840
there's only one scheme defined which is

4645
03:22:18,840 --> 03:22:21,620
called the the simple the simple scheme

4646
03:22:21,620 --> 03:22:25,439
and then there's also some private use

4647
03:22:25,439 --> 03:22:26,160
um

4648
03:22:26,160 --> 03:22:29,460
code points reserved

4649
03:22:29,460 --> 03:22:32,700
after the scheme field there's a hash

4650
03:22:32,700 --> 03:22:35,460
algorithm field or a digest type field

4651
03:22:35,460 --> 03:22:39,300
the RFC defines Shaw 384 and Shaw 512

4652
03:22:39,300 --> 03:22:41,640
and then of course also some more

4653
03:22:41,640 --> 03:22:44,660
private use codes

4654
03:22:45,000 --> 03:22:47,160
the Big Blob is the digest itself of

4655
03:22:47,160 --> 03:22:50,700
course for Shaw 384 this will be 48

4656
03:22:50,700 --> 03:22:53,540
octets for Shaw 512 it'll be 64 octets

4657
03:22:53,540 --> 03:22:57,240
for private use it could be something

4658
03:22:57,240 --> 03:23:01,439
else but the RFC says must not be less

4659
03:23:01,439 --> 03:23:05,600
than 12 octets in the digest field

4660
03:23:06,180 --> 03:23:08,760
so this table documents the

4661
03:23:08,760 --> 03:23:11,100
implementations that I'm aware of

4662
03:23:11,100 --> 03:23:13,560
the implementations of Zone MD

4663
03:23:13,560 --> 03:23:17,640
um the first one uh which is uh named

4664
03:23:17,640 --> 03:23:20,819
ldns Zone digests sorry I sort of um

4665
03:23:20,819 --> 03:23:22,500
took over the name ldns there but this

4666
03:23:22,500 --> 03:23:24,840
was the reference implementation for for

4667
03:23:24,840 --> 03:23:27,960
those those of us that worked on the RFC

4668
03:23:27,960 --> 03:23:30,960
um Unbound implements this

4669
03:23:30,960 --> 03:23:33,560
as a version

4670
03:23:33,560 --> 03:23:36,720
113.2 there's an off Zone stanza which

4671
03:23:36,720 --> 03:23:37,859
you can use

4672
03:23:37,859 --> 03:23:39,720
um to to turn this on

4673
03:23:39,720 --> 03:23:43,859
the ldns library includes ldns sign Zone

4674
03:23:43,859 --> 03:23:46,800
and LDS verify Zone that also implement

4675
03:23:46,800 --> 03:23:48,560
the protocol

4676
03:23:48,560 --> 03:23:51,300
folks from Nick Chile Labs have a

4677
03:23:51,300 --> 03:23:54,479
package called DNS tools implemented in

4678
03:23:54,479 --> 03:23:56,640
go that implements this and by the way

4679
03:23:56,640 --> 03:23:59,340
the the dot CL Zone I believe is is

4680
03:23:59,340 --> 03:24:00,840
maybe one of the first zones that

4681
03:24:00,840 --> 03:24:02,520
actually are using this they're they're

4682
03:24:02,520 --> 03:24:05,220
publishing a Zone MD record uh if you if

4683
03:24:05,220 --> 03:24:06,479
you try to query for it you have to be a

4684
03:24:06,479 --> 03:24:07,859
little bit careful because I think their

4685
03:24:07,859 --> 03:24:09,779
record is not signed so you might get a

4686
03:24:09,779 --> 03:24:11,460
server failure if you're if you're doing

4687
03:24:11,460 --> 03:24:14,760
validation but but the record is there

4688
03:24:14,760 --> 03:24:17,340
um NSD implements it

4689
03:24:17,340 --> 03:24:19,319
um

4690
03:24:19,319 --> 03:24:23,939
powerdns not DNS not resolver I believe

4691
03:24:23,939 --> 03:24:25,920
still work in progress I think last I

4692
03:24:25,920 --> 03:24:27,660
looked there were some some pull

4693
03:24:27,660 --> 03:24:29,760
requests or something bind nine

4694
03:24:29,760 --> 03:24:32,100
similarly there is some work in progress

4695
03:24:32,100 --> 03:24:34,140
there are there are branches I think

4696
03:24:34,140 --> 03:24:36,600
where you can go and and and see the

4697
03:24:36,600 --> 03:24:39,840
progress and then perl's net DNS Library

4698
03:24:39,840 --> 03:24:44,540
can parse the record uh only

4699
03:24:44,700 --> 03:24:47,760
a little bit more details about which

4700
03:24:47,760 --> 03:24:49,680
implementations which versions of which

4701
03:24:49,680 --> 03:24:51,560
implementations support this

4702
03:24:51,560 --> 03:24:54,120
I won't necessarily read these read all

4703
03:24:54,120 --> 03:24:56,580
these but um if you're interested you

4704
03:24:56,580 --> 03:24:58,080
can you can see which which particular

4705
03:24:58,080 --> 03:25:00,600
versions of these implementations

4706
03:25:00,600 --> 03:25:04,140
Unbound NSD not and powerdns are able to

4707
03:25:04,140 --> 03:25:06,899
load a Zone including the record in its

4708
03:25:06,899 --> 03:25:10,920
native format and are able to verify the

4709
03:25:10,920 --> 03:25:15,300
Zone based on the resource record

4710
03:25:15,300 --> 03:25:19,140
um I just learned recently that NSD

4711
03:25:19,140 --> 03:25:20,720
460

4712
03:25:20,720 --> 03:25:23,580
supports this but you have to use like

4713
03:25:23,580 --> 03:25:25,739
an external validation program

4714
03:25:25,739 --> 03:25:27,960
so it's it's not it's not implemented

4715
03:25:27,960 --> 03:25:29,939
sort of natively but you can use

4716
03:25:29,939 --> 03:25:33,920
LDS verify Zone to do that

4717
03:25:34,819 --> 03:25:37,439
this table shows which implementations

4718
03:25:37,439 --> 03:25:39,600
how they behave with respect to Zone

4719
03:25:39,600 --> 03:25:42,600
transfers of a zone that that has the

4720
03:25:42,600 --> 03:25:44,160
the record

4721
03:25:44,160 --> 03:25:46,080
um

4722
03:25:46,080 --> 03:25:48,960
so at this point uh the testing is sort

4723
03:25:48,960 --> 03:25:50,340
of incomplete I've been able to test

4724
03:25:50,340 --> 03:25:53,840
Unbound and not DNS

4725
03:25:53,840 --> 03:25:56,460
NSD and powerdns

4726
03:25:56,460 --> 03:25:58,200
um that's that's still work in progress

4727
03:25:58,200 --> 03:26:01,979
on my part to to fully test these

4728
03:26:01,979 --> 03:26:03,300
um

4729
03:26:03,300 --> 03:26:05,160
that one of the things I'm interested in

4730
03:26:05,160 --> 03:26:08,580
though is is what happens if a name

4731
03:26:08,580 --> 03:26:10,800
server is serving the zone and it's all

4732
03:26:10,800 --> 03:26:12,300
everything's fine and then it's

4733
03:26:12,300 --> 03:26:14,760
presented with a an updated Zone where

4734
03:26:14,760 --> 03:26:17,100
the verification fails

4735
03:26:17,100 --> 03:26:19,560
um so in the case of Unbound uh the

4736
03:26:19,560 --> 03:26:21,060
current version you'll get it you'll get

4737
03:26:21,060 --> 03:26:22,560
a Serv fail and I've I've talked to the

4738
03:26:22,560 --> 03:26:24,060
internet guys about this and they

4739
03:26:24,060 --> 03:26:25,620
they're aware and I think that's

4740
03:26:25,620 --> 03:26:28,020
probably something that they'll look at

4741
03:26:28,020 --> 03:26:31,380
um not DNS is is very good in it it

4742
03:26:31,380 --> 03:26:33,000
serves the previous zone so it ignores

4743
03:26:33,000 --> 03:26:34,739
the update and will continue to serve

4744
03:26:34,739 --> 03:26:37,399
the previous song

4745
03:26:37,979 --> 03:26:39,300
okay

4746
03:26:39,300 --> 03:26:40,800
this is an example of what it looks like

4747
03:26:40,800 --> 03:26:43,500
if you enable this with Unbound and

4748
03:26:43,500 --> 03:26:46,319
you'd use the off the Zone stanza and

4749
03:26:46,319 --> 03:26:49,979
you say Zone MD check yes and then you

4750
03:26:49,979 --> 03:26:51,300
turn on debugging and towards the end of

4751
03:26:51,300 --> 03:26:52,500
the debugging you'll see some lines that

4752
03:26:52,500 --> 03:26:55,439
say yeah I I checked the Zone MD record

4753
03:26:55,439 --> 03:26:58,760
and it was found to be valid

4754
03:26:59,760 --> 03:27:01,739
uh this slide you've probably seen

4755
03:27:01,739 --> 03:27:03,060
before if you've if you've heard this

4756
03:27:03,060 --> 03:27:06,180
talk this is just here to sort of maybe

4757
03:27:06,180 --> 03:27:07,979
convince people that the CPU

4758
03:27:07,979 --> 03:27:09,120
requirements aren't really all that

4759
03:27:09,120 --> 03:27:11,939
horrible this this is this test was done

4760
03:27:11,939 --> 03:27:14,939
a few years ago on almost all of the

4761
03:27:14,939 --> 03:27:18,359
tlds the com Zone was actually too large

4762
03:27:18,359 --> 03:27:20,520
to to you know to to load on the system

4763
03:27:20,520 --> 03:27:22,439
that I had access to but

4764
03:27:22,439 --> 03:27:24,479
um highlighted are the the net Zone

4765
03:27:24,479 --> 03:27:25,800
which was the largest one that could be

4766
03:27:25,800 --> 03:27:29,399
tested and then the root zone so to to

4767
03:27:29,399 --> 03:27:31,319
calculate the digest for the root zone

4768
03:27:31,319 --> 03:27:34,979
is about 100 milliseconds of CPU time

4769
03:27:34,979 --> 03:27:37,460
good

4770
03:27:37,920 --> 03:27:39,960
all right so a little bit more details

4771
03:27:39,960 --> 03:27:41,819
about uh what what the plans are for

4772
03:27:41,819 --> 03:27:45,359
adding Zone MD to the root Zone there's

4773
03:27:45,359 --> 03:27:48,300
an icann Group arzerk which is the root

4774
03:27:48,300 --> 03:27:50,640
Zone Evolution Review Committee and

4775
03:27:50,640 --> 03:27:53,160
they've made recommendations

4776
03:27:53,160 --> 03:27:54,920
um for for adding this to the root Zone

4777
03:27:54,920 --> 03:27:57,239
those there's there's these four

4778
03:27:57,239 --> 03:28:00,359
recommendations uh listed here uh that

4779
03:28:00,359 --> 03:28:02,279
say things like you know we need to make

4780
03:28:02,279 --> 03:28:03,359
sure that

4781
03:28:03,359 --> 03:28:04,859
um that everyone's prepared for this

4782
03:28:04,859 --> 03:28:06,300
that the roots over operators are ready

4783
03:28:06,300 --> 03:28:08,640
and nothing's going to break make the

4784
03:28:08,640 --> 03:28:10,859
community aware of the plans I believe I

4785
03:28:10,859 --> 03:28:13,500
can will be probably announcing

4786
03:28:13,500 --> 03:28:16,020
something shortly about some some

4787
03:28:16,020 --> 03:28:17,340
Communications that they plan to do

4788
03:28:17,340 --> 03:28:19,620
around this as well

4789
03:28:19,620 --> 03:28:21,000
um there's a there's a recommendation

4790
03:28:21,000 --> 03:28:23,100
around you know working with name server

4791
03:28:23,100 --> 03:28:25,859
operators uh implementers to encourage

4792
03:28:25,859 --> 03:28:29,819
them to implement this and that um I can

4793
03:28:29,819 --> 03:28:32,520
and and verisign should jointly develop

4794
03:28:32,520 --> 03:28:35,340
a plan uh for deploying this to the root

4795
03:28:35,340 --> 03:28:36,359
Zone

4796
03:28:36,359 --> 03:28:37,979
um and and that's that's still work in

4797
03:28:37,979 --> 03:28:40,699
progress as well

4798
03:28:42,060 --> 03:28:44,399
um but at this point uh what we're sort

4799
03:28:44,399 --> 03:28:46,080
of thinking is that

4800
03:28:46,080 --> 03:28:48,000
um the the record would be added in two

4801
03:28:48,000 --> 03:28:50,279
phases in the first phase there would be

4802
03:28:50,279 --> 03:28:52,500
a private use algorithm for the Zone MD

4803
03:28:52,500 --> 03:28:54,600
record and then in the second phase it

4804
03:28:54,600 --> 03:28:58,200
would be the shaw 384 algorithm

4805
03:28:58,200 --> 03:28:58,739
um

4806
03:28:58,739 --> 03:29:01,080
One open question still is the is the

4807
03:29:01,080 --> 03:29:02,700
the presentation format that would be

4808
03:29:02,700 --> 03:29:05,700
used uh in in in versions of the root

4809
03:29:05,700 --> 03:29:07,859
Zone that that are are published that

4810
03:29:07,859 --> 03:29:10,260
way such as on the internet servers and

4811
03:29:10,260 --> 03:29:11,580
the uh the next slide we'll talk about

4812
03:29:11,580 --> 03:29:13,859
that in more detail

4813
03:29:13,859 --> 03:29:17,040
and then uh lastly we're we're sort of

4814
03:29:17,040 --> 03:29:19,979
uh expecting or not expecting anymore

4815
03:29:19,979 --> 03:29:22,200
but but uh one one of the things that

4816
03:29:22,200 --> 03:29:23,460
needs to happen is the The Roots over

4817
03:29:23,460 --> 03:29:26,880
operators are uh coming out with a joint

4818
03:29:26,880 --> 03:29:28,020
statement

4819
03:29:28,020 --> 03:29:29,939
um confirming their Readiness to to

4820
03:29:29,939 --> 03:29:33,120
accept the Zone MD record and

4821
03:29:33,120 --> 03:29:35,399
um basically stating that there will be

4822
03:29:35,399 --> 03:29:38,700
a one-year period during which um they

4823
03:29:38,700 --> 03:29:40,319
will not enable the verification they

4824
03:29:40,319 --> 03:29:42,420
always serve whatever whatever they're

4825
03:29:42,420 --> 03:29:44,760
given even if for example The Zone MD

4826
03:29:44,760 --> 03:29:49,100
record didn't uh didn't verify correctly

4827
03:29:49,800 --> 03:29:52,920
so to the question of of what what the

4828
03:29:52,920 --> 03:29:54,600
record should look like in in its

4829
03:29:54,600 --> 03:29:56,279
presentation format

4830
03:29:56,279 --> 03:29:57,840
um the examples at the top of the slide

4831
03:29:57,840 --> 03:30:01,080
these are equivalent records uh One is

4832
03:30:01,080 --> 03:30:02,939
using the the native format and one is

4833
03:30:02,939 --> 03:30:06,300
using the generic or um

4834
03:30:06,300 --> 03:30:09,000
unknown RR type format

4835
03:30:09,000 --> 03:30:09,660
um

4836
03:30:09,660 --> 03:30:11,399
for Distributing the root Zone within

4837
03:30:11,399 --> 03:30:12,359
the roots of our system this doesn't

4838
03:30:12,359 --> 03:30:13,920
matter at all because it because that

4839
03:30:13,920 --> 03:30:14,939
doesn't happen in the presentation

4840
03:30:14,939 --> 03:30:17,460
format it happens in wire format but it

4841
03:30:17,460 --> 03:30:19,859
it could matter in in situations where

4842
03:30:19,859 --> 03:30:22,200
the the zone is published

4843
03:30:22,200 --> 03:30:24,979
um as a text file such as on interdict

4844
03:30:24,979 --> 03:30:28,020
internet.net servers

4845
03:30:28,020 --> 03:30:28,979
um

4846
03:30:28,979 --> 03:30:30,779
the thinking currently is that the

4847
03:30:30,779 --> 03:30:33,840
generic format is probably uh minimizes

4848
03:30:33,840 --> 03:30:35,700
potential disruption from folks that do

4849
03:30:35,700 --> 03:30:37,620
their own sort of parsing or using older

4850
03:30:37,620 --> 03:30:39,180
tools

4851
03:30:39,180 --> 03:30:40,680
um but

4852
03:30:40,680 --> 03:30:43,380
um this is probably we're probably in

4853
03:30:43,380 --> 03:30:44,939
precedent setting territory here and

4854
03:30:44,939 --> 03:30:46,140
this will be something that's very

4855
03:30:46,140 --> 03:30:49,140
difficult to change and there are also

4856
03:30:49,140 --> 03:30:52,319
concerns that um if if we if we didn't

4857
03:30:52,319 --> 03:30:55,319
go with the native format this time then

4858
03:30:55,319 --> 03:30:57,359
uh when when some other record type

4859
03:30:57,359 --> 03:31:00,479
needs to be added to the root zone or

4860
03:31:00,479 --> 03:31:01,819
some other critical Zone in the future

4861
03:31:01,819 --> 03:31:04,920
there might be some temptation to

4862
03:31:04,920 --> 03:31:06,660
continue using the generic format

4863
03:31:06,660 --> 03:31:09,120
approach and and not using the uh the

4864
03:31:09,120 --> 03:31:11,399
native approach so

4865
03:31:11,399 --> 03:31:12,779
um this is something that's still a

4866
03:31:12,779 --> 03:31:14,819
little bit up in the air uh if you have

4867
03:31:14,819 --> 03:31:16,380
thoughts about this would love to hear

4868
03:31:16,380 --> 03:31:18,000
them either you know today or or

4869
03:31:18,000 --> 03:31:19,560
privately

4870
03:31:19,560 --> 03:31:23,479
um and uh I believe that's it

4871
03:31:23,939 --> 03:31:27,420
thanks thanks Elaine

4872
03:31:27,479 --> 03:31:32,120
we have a question from Abby which is no

4873
03:31:32,120 --> 03:31:36,060
d-u-r-z period uh deliberatory and valid

4874
03:31:36,060 --> 03:31:37,700
day table

4875
03:31:37,700 --> 03:31:41,279
okay so talking about the the durs that

4876
03:31:41,279 --> 03:31:43,560
deliver deliberately unvalidatable root

4877
03:31:43,560 --> 03:31:45,000
Zone

4878
03:31:45,000 --> 03:31:46,200
um technique so that's that's

4879
03:31:46,200 --> 03:31:47,460
essentially

4880
03:31:47,460 --> 03:31:49,739
what we're trying to accomplish with the

4881
03:31:49,739 --> 03:31:53,220
the um the the first phase of this which

4882
03:31:53,220 --> 03:31:56,160
was using a uh private use algorithm

4883
03:31:56,160 --> 03:31:58,020
that that phase is expected to last for

4884
03:31:58,020 --> 03:31:59,939
only about two months however so there

4885
03:31:59,939 --> 03:32:01,680
will be a period in which uh there would

4886
03:32:01,680 --> 03:32:03,779
be a record published in the zone which

4887
03:32:03,779 --> 03:32:06,060
no one should be able to verify because

4888
03:32:06,060 --> 03:32:10,340
uh it's a private use algorithm

4889
03:32:10,560 --> 03:32:12,080
foreign

4890
03:32:12,080 --> 03:32:14,760
Lewis um I

4891
03:32:14,760 --> 03:32:16,979
uh okay so I had two responses your last

4892
03:32:16,979 --> 03:32:19,800
two slides um do you want to go back

4893
03:32:19,800 --> 03:32:22,739
um the first one before that about not

4894
03:32:22,739 --> 03:32:24,840
verifying it a good one before that you

4895
03:32:24,840 --> 03:32:27,720
saw it not validating the I would

4896
03:32:27,720 --> 03:32:29,700
suggest validating it but then not

4897
03:32:29,700 --> 03:32:31,800
reacting to the result

4898
03:32:31,800 --> 03:32:33,359
I think that would be I'd rather see

4899
03:32:33,359 --> 03:32:35,100
that saying yeah it's valid because if

4900
03:32:35,100 --> 03:32:36,960
you find it's not validating

4901
03:32:36,960 --> 03:32:39,420
you're not discarding it anyway it's not

4902
03:32:39,420 --> 03:32:41,220
affecting it but at least we know that

4903
03:32:41,220 --> 03:32:42,479
there's something not right with the

4904
03:32:42,479 --> 03:32:44,399
validation of that

4905
03:32:44,399 --> 03:32:45,779
um so in this on the last slide you

4906
03:32:45,779 --> 03:32:47,760
asked about the the format because I I

4907
03:32:47,760 --> 03:32:49,140
have something which

4908
03:32:49,140 --> 03:32:51,359
captures Zone MD records that are out

4909
03:32:51,359 --> 03:32:52,800
there today was a TLD that's been

4910
03:32:52,800 --> 03:32:54,960
publishing it for quite a while

4911
03:32:54,960 --> 03:32:56,520
um and myself dumps it out as the

4912
03:32:56,520 --> 03:32:58,140
generic format because I didn't even

4913
03:32:58,140 --> 03:32:59,700
know I didn't when I wrote I haven't

4914
03:32:59,700 --> 03:33:01,020
gone back to add that to the code to

4915
03:33:01,020 --> 03:33:04,200
parse it but I would encourage using the

4916
03:33:04,200 --> 03:33:06,600
first format as soon as you can

4917
03:33:06,600 --> 03:33:10,560
because I think in in this use case

4918
03:33:10,560 --> 03:33:12,420
probably the result is not going to be

4919
03:33:12,420 --> 03:33:13,800
operational it's going to be for

4920
03:33:13,800 --> 03:33:15,840
research or for other purposes

4921
03:33:15,840 --> 03:33:17,880
and I and there's more tolerance for

4922
03:33:17,880 --> 03:33:19,680
things not working in that Arena because

4923
03:33:19,680 --> 03:33:21,420
you didn't go back like for all this if

4924
03:33:21,420 --> 03:33:23,880
I have I've logged all of those messages

4925
03:33:23,880 --> 03:33:25,620
um I can go back now and throw them into

4926
03:33:25,620 --> 03:33:27,300
a hopper and then parse them and they're

4927
03:33:27,300 --> 03:33:28,920
you know for what I do it's good I think

4928
03:33:28,920 --> 03:33:31,020
so I think you'd want to see it in live

4929
03:33:31,020 --> 03:33:33,600
format as quickly as you can

4930
03:33:33,600 --> 03:33:34,800
um I think it would just be better that

4931
03:33:34,800 --> 03:33:36,359
way this could be in the generic format

4932
03:33:36,359 --> 03:33:37,620
doesn't really help here because it's

4933
03:33:37,620 --> 03:33:39,479
not operational all right I think thanks

4934
03:33:39,479 --> 03:33:41,720
Ed

4935
03:33:43,080 --> 03:33:44,939
then there's a question from Patrick

4936
03:33:44,939 --> 03:33:47,520
Messick

4937
03:33:47,520 --> 03:33:52,200
um what happened for ixfr is the Zone MD

4938
03:33:52,200 --> 03:33:55,319
transmitted 2 or computed by receiver

4939
03:33:55,319 --> 03:33:58,140
same question for dynamic updates on the

4940
03:33:58,140 --> 03:34:01,460
Zone having the records already

4941
03:34:03,120 --> 03:34:06,000
okay so the if you are

4942
03:34:06,000 --> 03:34:08,340
um if you are using a zone or if you're

4943
03:34:08,340 --> 03:34:10,859
using a system that uses ixfr

4944
03:34:10,859 --> 03:34:14,279
and you are publishing a Zone MD record

4945
03:34:14,279 --> 03:34:17,520
then essentially your your software your

4946
03:34:17,520 --> 03:34:20,100
system needs to recompute the Zone

4947
03:34:20,100 --> 03:34:23,460
digest for every update

4948
03:34:23,460 --> 03:34:26,580
so every ixfr would include the Zone MD

4949
03:34:26,580 --> 03:34:28,560
record

4950
03:34:28,560 --> 03:34:30,720
um I'm not a I haven't I haven't tested

4951
03:34:30,720 --> 03:34:33,779
that case I don't know uh if if that's a

4952
03:34:33,779 --> 03:34:36,420
supported uh feature or ability of the

4953
03:34:36,420 --> 03:34:38,279
software at this point but that's what

4954
03:34:38,279 --> 03:34:41,160
would need to happen with Zone MD as

4955
03:34:41,160 --> 03:34:43,620
currently specified

4956
03:34:43,620 --> 03:34:46,080
uh and similarly for for Dynamic DNS

4957
03:34:46,080 --> 03:34:49,500
updates it's it's the same thing if you

4958
03:34:49,500 --> 03:34:52,739
if you did read the RFC you would see

4959
03:34:52,739 --> 03:34:55,500
that zone MD is not recommended for use

4960
03:34:55,500 --> 03:34:58,319
in zones that are very large or that

4961
03:34:58,319 --> 03:35:00,779
have a high rate of updates

4962
03:35:00,779 --> 03:35:02,880
so there was some future work to be done

4963
03:35:02,880 --> 03:35:06,660
to accommodate those types of zones uh

4964
03:35:06,660 --> 03:35:10,160
with with the Zone MD feature

4965
03:35:11,880 --> 03:35:14,530
thanks Dwayne thank you

4966
03:35:14,530 --> 03:35:21,919
[Applause]

4967
03:35:23,880 --> 03:35:27,000
next we're going to have a talk from

4968
03:35:27,000 --> 03:35:31,739
yoshiro yonea from jpis is going to be

4969
03:35:31,739 --> 03:35:35,100
are we ready for Anzac 3 guidance

4970
03:35:35,100 --> 03:35:36,600
okay

4971
03:35:36,600 --> 03:35:37,439
okay

4972
03:35:37,439 --> 03:35:40,100
so this is

4973
03:35:40,620 --> 03:35:43,680
today I directed

4974
03:35:43,680 --> 03:35:46,800
sexy guidance which will be published as

4975
03:35:46,800 --> 03:35:51,858
a RLC BCP RFC very soon

4976
03:35:55,140 --> 03:35:58,140
so the background is as I said in

4977
03:35:58,140 --> 03:36:02,279
Factory guidance which is a new BCP RFC

4978
03:36:02,279 --> 03:36:05,720
published very soon

4979
03:36:06,859 --> 03:36:11,700
is uh already talked by Victor the Toby

4980
03:36:11,700 --> 03:36:14,340
that I can 70 DNA Tech Workshop so

4981
03:36:14,340 --> 03:36:18,319
please refer to the slides

4982
03:36:19,140 --> 03:36:22,319
so uh the insects will guide us affect

4983
03:36:22,319 --> 03:36:24,660
both their own publishers

4984
03:36:24,660 --> 03:36:28,319
and DNS from data but depending on when

4985
03:36:28,319 --> 03:36:30,359
they will follow in sexually guidance

4986
03:36:30,359 --> 03:36:32,700
May differ

4987
03:36:32,700 --> 03:36:35,300
so that due to this timing difference

4988
03:36:35,300 --> 03:36:40,500
possibly name resolution failure of tlds

4989
03:36:40,500 --> 03:36:43,859
that cause large outage

4990
03:36:43,859 --> 03:36:49,340
of Internet is highly concerned

4991
03:36:49,620 --> 03:36:53,040
so that I could explain about the

4992
03:36:53,040 --> 03:36:56,220
prosperity of the large artists of tlds

4993
03:36:56,220 --> 03:37:00,199
and propose some mitigations

4994
03:37:00,359 --> 03:37:03,420
and uh today's talk I mainly focused on

4995
03:37:03,420 --> 03:37:06,180
whole reservable operators and this is

4996
03:37:06,180 --> 03:37:09,060
not objecting to intensity guidance but

4997
03:37:09,060 --> 03:37:15,260
aiming to smooth deployment of new pcbs

4998
03:37:15,859 --> 03:37:20,520
okay the key point of NCP guidance is it

4999
03:37:20,520 --> 03:37:23,939
provides that they indicate the guidance

5000
03:37:23,939 --> 03:37:26,279
indicates that using iteration code

5001
03:37:26,279 --> 03:37:30,319
rather larger than zero is this

5002
03:37:30,319 --> 03:37:34,140
effective than expected and possible

5003
03:37:34,140 --> 03:37:38,819
security Securities uh threat

5004
03:37:38,819 --> 03:37:42,239
so that's the new best practice for Zone

5005
03:37:42,239 --> 03:37:45,600
provision is iteration count of

5006
03:37:45,600 --> 03:37:47,540
insectely

5007
03:37:47,540 --> 03:37:52,560
there must be used to see the uh this is

5008
03:37:52,560 --> 03:37:54,720
in sexy parameters

5009
03:37:54,720 --> 03:37:59,100
the shower is a only one selection and

5010
03:37:59,100 --> 03:38:01,800
the flux is zero it is also only one

5011
03:38:01,800 --> 03:38:05,340
section and zero for the no extra

5012
03:38:05,340 --> 03:38:09,680
iterations and empty salt

5013
03:38:10,340 --> 03:38:13,439
and the recommendations for validation

5014
03:38:13,439 --> 03:38:15,840
Developers

5015
03:38:15,840 --> 03:38:18,180
such as public with robot and ISP

5016
03:38:18,180 --> 03:38:21,540
reservers the paradigating reserves May

5017
03:38:21,540 --> 03:38:24,779
return an insecure response for

5018
03:38:24,779 --> 03:38:27,300
international budget at zero

5019
03:38:27,300 --> 03:38:31,020
and also auditing reservats may also

5020
03:38:31,020 --> 03:38:34,080
retire a software response for

5021
03:38:34,080 --> 03:38:36,720
international counter count budget of

5022
03:38:36,720 --> 03:38:38,160
zero

5023
03:38:38,160 --> 03:38:43,080
then me means it is optional and ex I

5024
03:38:43,080 --> 03:38:46,620
believe that experienced as we employ

5025
03:38:46,620 --> 03:38:48,840
the option prudently

5026
03:38:48,840 --> 03:38:52,160
it is not sure

5027
03:38:53,340 --> 03:38:56,040
so the impact to appear this using

5028
03:38:56,040 --> 03:38:58,399
ancestry is

5029
03:38:58,399 --> 03:39:02,220
DNS name generation of theories using

5030
03:39:02,220 --> 03:39:03,600
insect free with International

5031
03:39:03,600 --> 03:39:07,260
cartilages and there may be resulted in

5032
03:39:07,260 --> 03:39:09,899
insecure or software someday after the

5033
03:39:09,899 --> 03:39:13,800
fabrication of the BCB RFC

5034
03:39:13,800 --> 03:39:16,580
and major DNS for three-hour service

5035
03:39:16,580 --> 03:39:19,739
provided are developers are fabric to

5036
03:39:19,739 --> 03:39:22,800
insective guidance therefore the default

5037
03:39:22,800 --> 03:39:25,200
setting of dnsic part data will follow

5038
03:39:25,200 --> 03:39:28,739
the PCP in the future I'm not sure there

5039
03:39:28,739 --> 03:39:31,859
are a few the correct timeline but in

5040
03:39:31,859 --> 03:39:34,939
the future probably

5041
03:39:34,979 --> 03:39:38,119
and the impact

5042
03:39:38,660 --> 03:39:41,580
sorry so and especially when large

5043
03:39:41,580 --> 03:39:44,640
Publications with robust services or a

5044
03:39:44,640 --> 03:39:49,580
large isps use a few

5045
03:39:50,040 --> 03:39:53,279
had a lot of customers started to follow

5046
03:39:53,279 --> 03:39:57,239
VCB here it is not following BCP will be

5047
03:39:57,239 --> 03:40:00,779
possible to become undeservable globally

5048
03:40:00,779 --> 03:40:04,739
and this is the fear for large updates

5049
03:40:04,739 --> 03:40:07,319
if this happened customer support of

5050
03:40:07,319 --> 03:40:10,620
isps will be overflowed by Chrome claims

5051
03:40:10,620 --> 03:40:13,680
from the end users and therefore the

5052
03:40:13,680 --> 03:40:16,160
operators will put the

5053
03:40:16,160 --> 03:40:21,060
artist trdf in NTA primary native

5054
03:40:21,060 --> 03:40:24,180
transient ATM is for negative trans

5055
03:40:24,180 --> 03:40:27,540
tanker and this is a very narrative to a

5056
03:40:27,540 --> 03:40:30,060
negative practice for Genesect

5057
03:40:30,060 --> 03:40:31,439
deployment

5058
03:40:31,439 --> 03:40:33,960
and the recovery from this practice is

5059
03:40:33,960 --> 03:40:37,020
very hard because operators will not

5060
03:40:37,020 --> 03:40:41,520
change their practice so often

5061
03:40:41,520 --> 03:40:44,160
and this is a list of how many theories

5062
03:40:44,160 --> 03:40:46,200
will be affected

5063
03:40:46,200 --> 03:40:51,479
so I counted 1149 tlds in total so I'm

5064
03:40:51,479 --> 03:40:55,319
sorry there was a uh Ella around here

5065
03:40:55,319 --> 03:41:00,979
the owner is not the TLD it is a

5066
03:41:00,979 --> 03:41:05,279
column label so please uh

5067
03:41:05,279 --> 03:41:08,460
remove all that from here

5068
03:41:08,460 --> 03:41:12,479
but uh it is still more than one

5069
03:41:12,479 --> 03:41:14,840
thousand

5070
03:41:15,180 --> 03:41:18,660
so they this there is a proposal for

5071
03:41:18,660 --> 03:41:21,000
avoiding large audience

5072
03:41:21,000 --> 03:41:26,580
and at tnd side the the Year this

5073
03:41:26,580 --> 03:41:30,300
changed the n63 parameters to the

5074
03:41:30,300 --> 03:41:34,500
recommended values as soon as possible

5075
03:41:34,500 --> 03:41:38,040
at least iteration count to zero and

5076
03:41:38,040 --> 03:41:39,960
empty solved

5077
03:41:39,960 --> 03:41:42,180
and the completion of changes is

5078
03:41:42,180 --> 03:41:44,700
desirable within a half year after the

5079
03:41:44,700 --> 03:41:47,819
BCP rxc publication

5080
03:41:47,819 --> 03:41:52,040
and proposal for the body data side

5081
03:41:52,040 --> 03:41:54,960
producing carefully this employing the

5082
03:41:54,960 --> 03:41:57,720
option I mentioned before

5083
03:41:57,720 --> 03:42:00,600
and prepare a certain graceful period

5084
03:42:00,600 --> 03:42:02,640
before changing the treatment of name

5085
03:42:02,640 --> 03:42:05,220
resolution for iteration country result

5086
03:42:05,220 --> 03:42:09,120
to insecure our software

5087
03:42:09,120 --> 03:42:13,140
and that freeze prepare a at least

5088
03:42:13,140 --> 03:42:16,399
please prepare a half year and less

5089
03:42:16,399 --> 03:42:20,100
period after the PCP publication

5090
03:42:20,100 --> 03:42:22,380
and if we're willing to change the

5091
03:42:22,380 --> 03:42:26,399
subfield please take test approach just

5092
03:42:26,399 --> 03:42:29,580
change the insecure fast and after the

5093
03:42:29,580 --> 03:42:32,279
certain period change to sub Fair

5094
03:42:32,279 --> 03:42:35,420
if preferable

5095
03:42:35,580 --> 03:42:40,560
and this is why I made this talk in DNS

5096
03:42:40,560 --> 03:42:43,739
work at DNS cognitive side

5097
03:42:43,739 --> 03:42:46,380
let's have a global consensus regarding

5098
03:42:46,380 --> 03:42:49,080
to a certain rescue period prior to body

5099
03:42:49,080 --> 03:42:51,720
data science changes

5100
03:42:51,720 --> 03:42:55,920
and uh this is my proposal product that

5101
03:42:55,920 --> 03:42:59,700
how about deciding a global Target date

5102
03:42:59,700 --> 03:43:03,660
and I heard about thinking about the DNS

5103
03:43:03,660 --> 03:43:05,340
block they target

5104
03:43:05,340 --> 03:43:10,939
for the changes in the regional part

5105
03:43:13,620 --> 03:43:18,960
so uh I'd like to discuss and give get

5106
03:43:18,960 --> 03:43:23,720
feedback from you about this my thinking

5107
03:43:23,720 --> 03:43:26,700
thank you

5108
03:43:26,700 --> 03:43:30,000
questions from Idris

5109
03:43:30,000 --> 03:43:32,399
with the insects we guide us the

5110
03:43:32,399 --> 03:43:35,760
candidate for yet another decorate the

5111
03:43:35,760 --> 03:43:38,520
dnf login

5112
03:43:38,520 --> 03:43:40,279
I I think

5113
03:43:40,279 --> 03:43:44,700
it is a good candidate for the next DNS

5114
03:43:44,700 --> 03:43:47,100
Vlog day

5115
03:43:47,100 --> 03:43:50,580
but the next question from Victor

5116
03:43:50,580 --> 03:43:53,760
so nobody will enforce iterations equal

5117
03:43:53,760 --> 03:43:58,340
to zero before all tlds are compliant

5118
03:43:58,340 --> 03:44:02,880
I think so but I'm not sure when all

5119
03:44:02,880 --> 03:44:05,460
tlds are compliers

5120
03:44:05,460 --> 03:44:06,540
um

5121
03:44:06,540 --> 03:44:10,760
to reduce the body for Reservoir

5122
03:44:10,760 --> 03:44:13,680
determinal servers

5123
03:44:13,680 --> 03:44:18,319
some Target this for cutting off

5124
03:44:18,319 --> 03:44:21,560
changing to

5125
03:44:21,560 --> 03:44:25,680
desirable settings would be a better for

5126
03:44:25,680 --> 03:44:28,979
the community because the insect three

5127
03:44:28,979 --> 03:44:32,340
guidance is a BCP for the DNS operators

5128
03:44:32,340 --> 03:44:35,160
both or side authoritative site and the

5129
03:44:35,160 --> 03:44:37,819
digital side

5130
03:44:38,640 --> 03:44:41,220
all right so next question from Victor

5131
03:44:41,220 --> 03:44:46,140
also I think too early for a Target date

5132
03:44:46,140 --> 03:44:50,460
uh the uh some though I I'm not sure

5133
03:44:50,460 --> 03:44:54,120
what thing is the uh appropriate date

5134
03:44:54,120 --> 03:44:55,800
for the Target

5135
03:44:55,800 --> 03:44:56,880
but

5136
03:44:56,880 --> 03:45:00,479
it is not this year

5137
03:45:00,479 --> 03:45:03,479
I think but next year or next to the

5138
03:45:03,479 --> 03:45:05,819
next year will be a Target

5139
03:45:05,819 --> 03:45:10,380
so I'd like to discuss this thing in the

5140
03:45:10,380 --> 03:45:12,359
DNS work

5141
03:45:12,359 --> 03:45:15,500
so feedback please

5142
03:45:15,500 --> 03:45:21,479
[Applause]

5143
03:45:21,479 --> 03:45:23,880
so we are a bit ahead of time and we may

5144
03:45:23,880 --> 03:45:27,080
or may not have a quick lighting talk

5145
03:45:27,080 --> 03:45:30,500
voting drums

5146
03:45:31,560 --> 03:45:34,160
yes

5147
03:45:35,160 --> 03:45:38,279
so where's other guys from computers and

5148
03:45:38,279 --> 03:45:41,160
computer scientists from USC is going to

5149
03:45:41,160 --> 03:45:43,920
talk to us about

5150
03:45:43,920 --> 03:45:45,540
yes

5151
03:45:45,540 --> 03:45:48,479
at the Rock experiments all right

5152
03:45:48,479 --> 03:45:50,100
surprise the talk you didn't know was

5153
03:45:50,100 --> 03:45:51,300
coming

5154
03:45:51,300 --> 03:45:52,680
um I'll make this quick and I'm going to

5155
03:45:52,680 --> 03:45:54,120
run through some stuff really fast

5156
03:45:54,120 --> 03:45:55,560
because this is technically longer than

5157
03:45:55,560 --> 03:45:56,880
a 10 minute talk

5158
03:45:56,880 --> 03:45:59,479
but we recently embarked on doing some

5159
03:45:59,479 --> 03:46:02,460
experiments with TLC closet to the mic

5160
03:46:02,460 --> 03:46:05,460
maybe or or take the mask off yeah we

5161
03:46:05,460 --> 03:46:08,120
recently did some experiments uh between

5162
03:46:08,120 --> 03:46:11,760
Google and and Isis root server

5163
03:46:11,760 --> 03:46:14,040
um Google has sort of been experimenting

5164
03:46:14,040 --> 03:46:16,439
with with DNS over TLS and wanting to

5165
03:46:16,439 --> 03:46:18,779
see what deploying dot would take and we

5166
03:46:18,779 --> 03:46:20,040
had questions what would it take to

5167
03:46:20,040 --> 03:46:22,859
deploy at a root as well uh and you know

5168
03:46:22,859 --> 03:46:24,239
how could we enable it what would the

5169
03:46:24,239 --> 03:46:26,220
operational cost be and you know is

5170
03:46:26,220 --> 03:46:27,600
there a way to do it safely without

5171
03:46:27,600 --> 03:46:30,060
impacting the rest of our service uh so

5172
03:46:30,060 --> 03:46:32,100
we decided to to start a small

5173
03:46:32,100 --> 03:46:33,660
experiment about a month ago and these

5174
03:46:33,660 --> 03:46:34,920
are the preliminary early results

5175
03:46:34,920 --> 03:46:36,660
there's you know much more to analyze

5176
03:46:36,660 --> 03:46:37,920
and do

5177
03:46:37,920 --> 03:46:40,800
on Google side they were probing us at

5178
03:46:40,800 --> 03:46:44,399
Port 853 and they were limiting their

5179
03:46:44,399 --> 03:46:47,100
traffic load to 40 to 50 percent so um

5180
03:46:47,100 --> 03:46:48,540
they didn't they didn't send everything

5181
03:46:48,540 --> 03:46:51,180
over TLS if if TLS was available and

5182
03:46:51,180 --> 03:46:52,859
that's important because now you know in

5183
03:46:52,859 --> 03:46:54,420
some of the numbers you'll see not

5184
03:46:54,420 --> 03:46:56,160
everything came in over TLS some came

5185
03:46:56,160 --> 03:46:58,319
over over UDP and TCP

5186
03:46:58,319 --> 03:47:00,960
on our side we isolated one back end at

5187
03:47:00,960 --> 03:47:02,580
our Singapore instance and we installed

5188
03:47:02,580 --> 03:47:06,060
bind 19 9.18.2 which is the most recent

5189
03:47:06,060 --> 03:47:09,840
one that supports authoritative TLS we

5190
03:47:09,840 --> 03:47:12,960
configured our existing deployment uh

5191
03:47:12,960 --> 03:47:14,819
with our existing configuration that we

5192
03:47:14,819 --> 03:47:16,680
do run bind occasionally on some sites

5193
03:47:16,680 --> 03:47:18,899
we rotate around things but

5194
03:47:18,899 --> 03:47:22,200
um we tuned we didn't tune bind any more

5195
03:47:22,200 --> 03:47:24,000
than just basically taking the defaults

5196
03:47:24,000 --> 03:47:25,080
which is something that we'd want to

5197
03:47:25,080 --> 03:47:26,399
work on in the future

5198
03:47:26,399 --> 03:47:28,380
and we routed all of Google's traffic to

5199
03:47:28,380 --> 03:47:30,239
that single that one back end that we

5200
03:47:30,239 --> 03:47:32,040
had totally isolated and the only thing

5201
03:47:32,040 --> 03:47:33,660
it was handling was Google traffic and

5202
03:47:33,660 --> 03:47:34,859
nothing else

5203
03:47:34,859 --> 03:47:37,020
so for the first week in our experiment

5204
03:47:37,020 --> 03:47:39,300
we measured traffic without TLS enabled

5205
03:47:39,300 --> 03:47:40,979
like what how much traffic was Google

5206
03:47:40,979 --> 03:47:42,899
sending us how much CPU was it using how

5207
03:47:42,899 --> 03:47:44,220
much bandwidth is it using how many

5208
03:47:44,220 --> 03:47:46,260
packets things like that and then in

5209
03:47:46,260 --> 03:47:48,720
week two we enabled TLS and measured

5210
03:47:48,720 --> 03:47:50,160
again to see what would you know what

5211
03:47:50,160 --> 03:47:52,760
was the change

5212
03:47:52,859 --> 03:47:55,020
um I talked about the isolation

5213
03:47:55,020 --> 03:47:57,540
um I'm going to skip this due to time so

5214
03:47:57,540 --> 03:47:59,160
the results are interesting and we did

5215
03:47:59,160 --> 03:48:01,140
three measurements basically we measured

5216
03:48:01,140 --> 03:48:02,760
the number of packets per second we

5217
03:48:02,760 --> 03:48:04,200
measured the bandwidth used and we

5218
03:48:04,200 --> 03:48:06,660
measured the CPU used both for the week

5219
03:48:06,660 --> 03:48:10,680
without TLS and the week with TLS and

5220
03:48:10,680 --> 03:48:12,120
the other thing we did is we took that

5221
03:48:12,120 --> 03:48:14,279
week and then smoothed it and time

5222
03:48:14,279 --> 03:48:16,140
shifted it by week and divide it so you

5223
03:48:16,140 --> 03:48:18,000
end up with a graph that shows what's

5224
03:48:18,000 --> 03:48:19,979
the multiplication factor for without

5225
03:48:19,979 --> 03:48:22,319
TLS and with TLS so you'll see those in

5226
03:48:22,319 --> 03:48:23,819
a minute that makes more sense when you

5227
03:48:23,819 --> 03:48:25,920
actually see them

5228
03:48:25,920 --> 03:48:27,720
uh so this is the packets per second

5229
03:48:27,720 --> 03:48:30,540
comparison the bottom line if we start

5230
03:48:30,540 --> 03:48:32,760
there is the normal traffic the packets

5231
03:48:32,760 --> 03:48:34,439
per second was actually pretty much

5232
03:48:34,439 --> 03:48:35,700
equivalent and there are actually two

5233
03:48:35,700 --> 03:48:37,140
lines there but they're overlapping and

5234
03:48:37,140 --> 03:48:39,300
you can't see them whereas the top two

5235
03:48:39,300 --> 03:48:41,460
lines or what happens when you turn on

5236
03:48:41,460 --> 03:48:45,300
TLS where the um uh the top line I think

5237
03:48:45,300 --> 03:48:47,520
was the number of bytes received and yes

5238
03:48:47,520 --> 03:48:49,800
and the the middle line is the number of

5239
03:48:49,800 --> 03:48:51,899
bytes transmitted when TLS was enabled

5240
03:48:51,899 --> 03:48:54,540
and the bottom line was um is again

5241
03:48:54,540 --> 03:48:56,880
without TLS at all

5242
03:48:56,880 --> 03:48:59,220
so if you take those and you divide them

5243
03:48:59,220 --> 03:49:00,840
then we can actually come up with a

5244
03:49:00,840 --> 03:49:03,060
multiplication Factor how many more

5245
03:49:03,060 --> 03:49:04,560
packets per second were actually

5246
03:49:04,560 --> 03:49:08,580
received so the top line is the the

5247
03:49:08,580 --> 03:49:10,439
number of packets received in the

5248
03:49:10,439 --> 03:49:12,899
multiplier and the bottom line is the

5249
03:49:12,899 --> 03:49:15,239
number of packets we transmitted to back

5250
03:49:15,239 --> 03:49:17,700
to Google as a multiplier so you can see

5251
03:49:17,700 --> 03:49:19,439
that it's if you actually you know I

5252
03:49:19,439 --> 03:49:20,939
took the the week and actually averaged

5253
03:49:20,939 --> 03:49:24,120
it so it's about 2.12 packets received

5254
03:49:24,120 --> 03:49:26,520
and we did not I will note do any

5255
03:49:26,520 --> 03:49:27,899
analysis to figure out how much

5256
03:49:27,899 --> 03:49:29,640
retransmission was happening in a

5257
03:49:29,640 --> 03:49:31,200
session it may have been just one

5258
03:49:31,200 --> 03:49:33,120
transmission it may have been more I I

5259
03:49:33,120 --> 03:49:34,380
have not studied that neither has

5260
03:49:34,380 --> 03:49:36,779
Googled whereas on the transmission side

5261
03:49:36,779 --> 03:49:40,560
it was 1.54 packets over regular again

5262
03:49:40,560 --> 03:49:43,380
I'll remind you this is not all TLS this

5263
03:49:43,380 --> 03:49:46,859
is a mix of of some regular traffic and

5264
03:49:46,859 --> 03:49:50,580
50 ish TLS

5265
03:49:50,580 --> 03:49:52,260
um if we look at the bandwidth you know

5266
03:49:52,260 --> 03:49:54,479
we see similar results

5267
03:49:54,479 --> 03:49:56,460
um note that you know root servers

5268
03:49:56,460 --> 03:49:58,260
receive far less bandwidth than we

5269
03:49:58,260 --> 03:49:59,939
transmit so the top two lines are

5270
03:49:59,939 --> 03:50:02,040
actually both transmit uh where the very

5271
03:50:02,040 --> 03:50:04,920
top line is the transmit for TLS

5272
03:50:04,920 --> 03:50:06,720
if you look at the multiplier which is

5273
03:50:06,720 --> 03:50:09,120
sort of easier to consume

5274
03:50:09,120 --> 03:50:12,540
um we we received about 1.9 times the

5275
03:50:12,540 --> 03:50:15,479
bandwidth that we did if uh without TLS

5276
03:50:15,479 --> 03:50:18,239
and we transmitted about 1.6 I'll remind

5277
03:50:18,239 --> 03:50:20,100
you that you know we transmit more so

5278
03:50:20,100 --> 03:50:21,660
DNS Tech records and things like that

5279
03:50:21,660 --> 03:50:23,279
actually brings down the transmit

5280
03:50:23,279 --> 03:50:24,779
multiplier because we're we're

5281
03:50:24,779 --> 03:50:27,180
transmitting more data

5282
03:50:27,180 --> 03:50:29,700
uh for CPU usage we wanted to compare

5283
03:50:29,700 --> 03:50:31,439
that to how much more CPU was it going

5284
03:50:31,439 --> 03:50:34,620
to eat the multiplayer graph kind of

5285
03:50:34,620 --> 03:50:37,680
lines out pretty flat at 1.6

5286
03:50:37,680 --> 03:50:40,800
so again with about a 50 50 split we

5287
03:50:40,800 --> 03:50:43,979
used about 1.6 times our our CPU and

5288
03:50:43,979 --> 03:50:45,660
this was a this you know with just

5289
03:50:45,660 --> 03:50:47,040
handling Google traffic this back end

5290
03:50:47,040 --> 03:50:49,020
was doing very little you know the CPU

5291
03:50:49,020 --> 03:50:51,540
usage was very very small

5292
03:50:51,540 --> 03:50:54,120
so here's the the final table that shows

5293
03:50:54,120 --> 03:50:56,340
the complete results all the things that

5294
03:50:56,340 --> 03:50:57,660
you just saw on the graph and what are

5295
03:50:57,660 --> 03:51:00,000
the multiplication factors

5296
03:51:00,000 --> 03:51:03,180
um you know this again is a 50 ish TLS

5297
03:51:03,180 --> 03:51:04,819
simulation a little bit less potentially

5298
03:51:04,819 --> 03:51:07,260
so you know it comes out somewhere to

5299
03:51:07,260 --> 03:51:10,319
1.5 to 2x cost for all of these we

5300
03:51:10,319 --> 03:51:12,000
didn't compare memory we didn't compare

5301
03:51:12,000 --> 03:51:13,319
a bunch of other things we'd want to

5302
03:51:13,319 --> 03:51:15,660
compare TCP sessions and things like

5303
03:51:15,660 --> 03:51:18,420
that open files and things like that

5304
03:51:18,420 --> 03:51:20,340
um so our conclusion is it's

5305
03:51:20,340 --> 03:51:22,620
operationally feasible and because we

5306
03:51:22,620 --> 03:51:24,359
were able to do isolation we did it with

5307
03:51:24,359 --> 03:51:26,399
addresses but we can also isolate by

5308
03:51:26,399 --> 03:51:28,380
port and and some other ways of

5309
03:51:28,380 --> 03:51:29,880
isolating we believe that we could

5310
03:51:29,880 --> 03:51:32,520
actually do this even you know safely

5311
03:51:32,520 --> 03:51:34,020
without impacting the rest of the

5312
03:51:34,020 --> 03:51:35,520
service and we have the resources to

5313
03:51:35,520 --> 03:51:37,739
pull that off

5314
03:51:37,739 --> 03:51:39,540
the interesting thing is what happens

5315
03:51:39,540 --> 03:51:41,279
after we started thinking about this

5316
03:51:41,279 --> 03:51:43,620
further

5317
03:51:43,620 --> 03:51:44,880
um first off what are we going to do in

5318
03:51:44,880 --> 03:51:47,340
the future we're still you know trying

5319
03:51:47,340 --> 03:51:48,899
to decide ourselves we are making no

5320
03:51:48,899 --> 03:51:50,819
commitments if we do anything it'll be

5321
03:51:50,819 --> 03:51:52,739
more experimentation uh there's

5322
03:51:52,739 --> 03:51:54,359
optimization that needs to be done we

5323
03:51:54,359 --> 03:51:56,460
didn't do any as I mentioned

5324
03:51:56,460 --> 03:51:58,020
um we need to compare other you know

5325
03:51:58,020 --> 03:52:00,120
parameters as I mentioned and we need to

5326
03:52:00,120 --> 03:52:01,439
compare the results with other studies

5327
03:52:01,439 --> 03:52:03,180
my colleague John Heidemann actually did

5328
03:52:03,180 --> 03:52:05,880
you know a full analysis with with a

5329
03:52:05,880 --> 03:52:07,560
paper with a student that did replayed

5330
03:52:07,560 --> 03:52:09,359
traffic this was live traffic real

5331
03:52:09,359 --> 03:52:11,819
traffic and I haven't compared the two

5332
03:52:11,819 --> 03:52:13,319
results to see if those multiplication

5333
03:52:13,319 --> 03:52:15,000
factors are about the same

5334
03:52:15,000 --> 03:52:17,040
and then you know deploy safely to more

5335
03:52:17,040 --> 03:52:19,739
sites this was a single site and profit

5336
03:52:19,739 --> 03:52:21,660
right why why would we do this in the

5337
03:52:21,660 --> 03:52:22,979
first place you know there's always a

5338
03:52:22,979 --> 03:52:25,080
debate of does the root service actually

5339
03:52:25,080 --> 03:52:27,840
need TLS support I'm not taking on that

5340
03:52:27,840 --> 03:52:29,939
bet today

5341
03:52:29,939 --> 03:52:32,100
but the last two slides are even more

5342
03:52:32,100 --> 03:52:33,479
interesting and the last slide is

5343
03:52:33,479 --> 03:52:35,040
actually very or eccentric but the

5344
03:52:35,040 --> 03:52:36,359
middle side is what happens with our

5345
03:52:36,359 --> 03:52:39,180
sag-002 stats some things aren't

5346
03:52:39,180 --> 03:52:41,340
affected with TLS load time zone size

5347
03:52:41,340 --> 03:52:42,720
and things like that

5348
03:52:42,720 --> 03:52:45,120
others actually you know the traffic

5349
03:52:45,120 --> 03:52:47,460
volume and the unique sources well right

5350
03:52:47,460 --> 03:52:50,100
now those are split with a prefix TCP

5351
03:52:50,100 --> 03:52:53,220
Dash or UDP dash for example and should

5352
03:52:53,220 --> 03:52:55,260
we add TLS I mean it actually questions

5353
03:52:55,260 --> 03:52:57,720
as a TCP or or is this another you know

5354
03:52:57,720 --> 03:52:59,580
protocol do we need to modify our sex

5355
03:52:59,580 --> 03:53:00,600
002

5356
03:53:00,600 --> 03:53:02,520
and then it re you know to do some stuff

5357
03:53:02,520 --> 03:53:04,200
it would require internal name server

5358
03:53:04,200 --> 03:53:06,060
logging traffic size and our code volume

5359
03:53:06,060 --> 03:53:08,040
it's encrypted so you can't pull it out

5360
03:53:08,040 --> 03:53:09,960
of a pcap now you actually have to pull

5361
03:53:09,960 --> 03:53:12,239
it out of something else

5362
03:53:12,239 --> 03:53:14,399
which is really similar for ditto what

5363
03:53:14,399 --> 03:53:16,800
would this mean for diddle right if we

5364
03:53:16,800 --> 03:53:19,319
had if we had TLS turned on in route

5365
03:53:19,319 --> 03:53:21,899
servers for diddle right now all of

5366
03:53:21,899 --> 03:53:23,700
ditto collect stuff over pcapp and and

5367
03:53:23,700 --> 03:53:25,680
you get the IP the Q name and all the

5368
03:53:25,680 --> 03:53:29,160
DNS icky details uh with TLS on you

5369
03:53:29,160 --> 03:53:30,899
can't really get pcaps you have to do

5370
03:53:30,899 --> 03:53:33,060
sort of in-server capture and logging to

5371
03:53:33,060 --> 03:53:36,359
get the full DNS details both bind and

5372
03:53:36,359 --> 03:53:38,040
not support DNS tap today but it

5373
03:53:38,040 --> 03:53:40,020
wouldn't be come out in in pcap format

5374
03:53:40,020 --> 03:53:42,120
you'd have to you know it doesn't match

5375
03:53:42,120 --> 03:53:45,359
the existing or formats at all

5376
03:53:45,359 --> 03:53:47,100
um and a lot of this comes back too you

5377
03:53:47,100 --> 03:53:48,899
know this is my question to you all what

5378
03:53:48,899 --> 03:53:50,580
would the community want if we end up at

5379
03:53:50,580 --> 03:53:52,439
TLS at like every authoritative server

5380
03:53:52,439 --> 03:53:54,180
in the future

5381
03:53:54,180 --> 03:53:56,040
what does that mean for ditto what would

5382
03:53:56,040 --> 03:53:57,960
we want would we want a separate format

5383
03:53:57,960 --> 03:53:59,160
would we want to collect those other

5384
03:53:59,160 --> 03:54:01,439
data and so uh with that I'll leave the

5385
03:54:01,439 --> 03:54:03,840
final question to you instead of uh you

5386
03:54:03,840 --> 03:54:06,000
questioning me without anybody have

5387
03:54:06,000 --> 03:54:08,239
questions

5388
03:54:09,479 --> 03:54:11,160
so for the sake of time we're not going

5389
03:54:11,160 --> 03:54:13,260
to take questions but I'm sure they can

5390
03:54:13,260 --> 03:54:15,859
get back to you uh over

5391
03:54:15,859 --> 03:54:19,140
or here talk to me in the hallway

5392
03:54:19,140 --> 03:54:20,270
thanks a lot

5393
03:54:20,270 --> 03:54:26,870
[Applause]

5394
03:54:27,239 --> 03:54:30,660
all right that's a wrap for day one

5395
03:54:30,660 --> 03:54:32,640
um on behalf of the program committee

5396
03:54:32,640 --> 03:54:34,920
I'd like to thanks all the speakers uh

5397
03:54:34,920 --> 03:54:37,560
for the time they spent in coming with

5398
03:54:37,560 --> 03:54:40,160
presentations

5399
03:54:40,500 --> 03:54:44,880
for people on site we have a lot of Kobe

5400
03:54:44,880 --> 03:54:47,819
tests available and we highly recommend

5401
03:54:47,819 --> 03:54:49,680
that you take one with you if you don't

5402
03:54:49,680 --> 03:54:52,260
have any and please test yourself before

5403
03:54:52,260 --> 03:54:55,160
coming back tomorrow

5404
03:54:55,620 --> 03:54:58,739
and yet again I would like to thanks

5405
03:54:58,739 --> 03:55:00,720
Comcast and verisign for their

5406
03:55:00,720 --> 03:55:04,210
sponsorship and uh we see you tomorrow

5407
03:55:04,210 --> 03:55:07,080
[Music]

5408
03:55:07,080 --> 03:55:09,680
[Applause]

5409
03:55:09,680 --> 03:55:20,059
[Music]

5410
03:55:25,859 --> 03:55:29,699
salad man

