1
00:00:00,390 --> 00:00:13,200
[Music]

2
00:00:13,200 --> 00:00:14,920
da

3
00:00:14,920 --> 00:00:17,920
da

4
00:00:28,840 --> 00:00:31,840
foreign

5
00:00:36,890 --> 00:00:40,009
[Music]

6
00:00:42,840 --> 00:00:44,860
uh

7
00:00:44,860 --> 00:00:47,930
[Music]

8
00:00:58,470 --> 00:01:01,640
[Music]

9
00:01:08,010 --> 00:01:10,840
[Music]

10
00:01:10,840 --> 00:01:13,840
data

11
00:01:24,840 --> 00:01:27,840
data

12
00:01:31,730 --> 00:01:34,849
[Music]

13
00:01:38,840 --> 00:01:41,840
uh

14
00:01:56,320 --> 00:01:59,759
welcome everyone to work 35 um

15
00:01:59,759 --> 00:02:02,000
this is our second online workshop of

16
00:02:02,000 --> 00:02:03,200
this year

17
00:02:03,200 --> 00:02:05,520
my name is keith mitchell um i want

18
00:02:05,520 --> 00:02:07,520
before proceeding start i just want to

19
00:02:07,520 --> 00:02:08,318
run through

20
00:02:08,318 --> 00:02:11,680
a couple of quick presentations

21
00:02:11,680 --> 00:02:13,120
the first is just to give you a little

22
00:02:13,120 --> 00:02:15,520
bit of guidance on how we're running the

23
00:02:15,520 --> 00:02:17,440
meeting and the second is for those of

24
00:02:17,440 --> 00:02:18,560
you who are new to or

25
00:02:18,560 --> 00:02:20,160
to give you a bit of an introduction to

26
00:02:20,160 --> 00:02:21,599
that

27
00:02:21,599 --> 00:02:25,760
so um information about the meeting

28
00:02:25,760 --> 00:02:29,920
um this is an online event

29
00:02:29,920 --> 00:02:32,800
so we have a code of conduct policy for

30
00:02:32,800 --> 00:02:33,920
events that applies

31
00:02:33,920 --> 00:02:35,840
online as well as a physical events when

32
00:02:35,840 --> 00:02:37,360
you registered for this um

33
00:02:37,360 --> 00:02:39,440
event and if you signed up as a work

34
00:02:39,440 --> 00:02:41,040
member then you agreed to be bound by

35
00:02:41,040 --> 00:02:42,640
these these terms we just want to make

36
00:02:42,640 --> 00:02:44,239
sure that everybody has a good

37
00:02:44,239 --> 00:02:46,000
experience and um

38
00:02:46,000 --> 00:02:47,840
please let us know if you're having any

39
00:02:47,840 --> 00:02:49,599
if you're not having that

40
00:02:49,599 --> 00:02:51,760
the workshop is being recorded um as

41
00:02:51,760 --> 00:02:54,000
usual all the talks will be available on

42
00:02:54,000 --> 00:02:54,560
the

43
00:02:54,560 --> 00:02:56,720
org youtube channel two weeks after the

44
00:02:56,720 --> 00:02:57,760
event

45
00:02:57,760 --> 00:03:00,800
roughly um because it's a webinar format

46
00:03:00,800 --> 00:03:01,440
for zoom

47
00:03:01,440 --> 00:03:03,440
non-speakers are muted during the event

48
00:03:03,440 --> 00:03:04,640
by default

49
00:03:04,640 --> 00:03:06,480
um this is an interesting time zone

50
00:03:06,480 --> 00:03:08,319
challenge for some of us and some of you

51
00:03:08,319 --> 00:03:10,959
um all event times and in in case of dar

52
00:03:10,959 --> 00:03:12,560
are in utc

53
00:03:12,560 --> 00:03:13,920
uh there's a couple of social media

54
00:03:13,920 --> 00:03:16,080
hashtags that we're using um you will

55
00:03:16,080 --> 00:03:18,239
you will see activity and all the uh the

56
00:03:18,239 --> 00:03:21,280
usual social media platforms

57
00:03:21,280 --> 00:03:23,440
um we're once again using the mattermost

58
00:03:23,440 --> 00:03:24,480
chat as a

59
00:03:24,480 --> 00:03:27,360
back channel for discussion during the

60
00:03:27,360 --> 00:03:28,560
workshop

61
00:03:28,560 --> 00:03:31,519
um if you haven't already signed up for

62
00:03:31,519 --> 00:03:32,959
that you can sign up

63
00:03:32,959 --> 00:03:35,040
at the url there we're using the

64
00:03:35,040 --> 00:03:36,000
workshop

65
00:03:36,000 --> 00:03:38,959
channel in the community team as the

66
00:03:38,959 --> 00:03:41,120
default place so so please go to that

67
00:03:41,120 --> 00:03:41,440
for

68
00:03:41,440 --> 00:03:43,040
discussion during the workshop or if you

69
00:03:43,040 --> 00:03:44,480
want to give feedback about anything

70
00:03:44,480 --> 00:03:46,239
that's not working um

71
00:03:46,239 --> 00:03:47,599
we will not be monitoring that for

72
00:03:47,599 --> 00:03:50,080
comments for for for questions to the

73
00:03:50,080 --> 00:03:51,120
speakers

74
00:03:51,120 --> 00:03:52,959
um you can use a browser for mattermost

75
00:03:52,959 --> 00:03:54,640
or there are clients it's cross-platform

76
00:03:54,640 --> 00:03:56,400
for just about any client platform that

77
00:03:56,400 --> 00:03:58,879
you want to use

78
00:03:58,879 --> 00:04:01,360
um for questions we're sticking with um

79
00:04:01,360 --> 00:04:02,080
the zoom

80
00:04:02,080 --> 00:04:05,599
q a um mechanism so um at the end of

81
00:04:05,599 --> 00:04:07,200
each speaker depending on how slot there

82
00:04:07,200 --> 00:04:08,959
is how long the slot is there will be a

83
00:04:08,959 --> 00:04:11,920
5 or 10 minute slot for q a

84
00:04:11,920 --> 00:04:14,159
if you want to speak your question then

85
00:04:14,159 --> 00:04:16,238
use the zoom raise hand facility under

86
00:04:16,238 --> 00:04:18,560
reactions on your zoom panel

87
00:04:18,560 --> 00:04:20,320
and then wait for the session chair to

88
00:04:20,320 --> 00:04:21,839
unmute you and

89
00:04:21,839 --> 00:04:25,600
they will prompt you to speak

90
00:04:25,600 --> 00:04:27,440
if you prefer to type your question use

91
00:04:27,440 --> 00:04:28,800
the q a panel

92
00:04:28,800 --> 00:04:30,639
in the zoom interface and it will be

93
00:04:30,639 --> 00:04:33,040
read out in turn by the session chair

94
00:04:33,040 --> 00:04:35,840
obviously questions the first time first

95
00:04:35,840 --> 00:04:36,960
come first served

96
00:04:36,960 --> 00:04:39,440
time permitting if we run out of time

97
00:04:39,440 --> 00:04:40,880
for questions then

98
00:04:40,880 --> 00:04:42,720
our spatial chat room is a is a great

99
00:04:42,720 --> 00:04:44,080
place to actually meet

100
00:04:44,080 --> 00:04:46,160
speakers during the break or you may be

101
00:04:46,160 --> 00:04:47,520
able to catch them and matter most to

102
00:04:47,520 --> 00:04:49,360
ask the question

103
00:04:49,360 --> 00:04:51,120
um please identify yourself and your

104
00:04:51,120 --> 00:04:52,800
affiliation when asking the question for

105
00:04:52,800 --> 00:04:54,160
the benefit of the video and for the

106
00:04:54,160 --> 00:04:55,520
benefit of everybody else who's

107
00:04:55,520 --> 00:04:58,080
participating

108
00:04:58,080 --> 00:05:00,800
um it worked quite well last time so

109
00:05:00,800 --> 00:05:02,639
this time we're going to use zoom poles

110
00:05:02,639 --> 00:05:03,840
for rating talks

111
00:05:03,840 --> 00:05:05,680
they will be the this poll will come up

112
00:05:05,680 --> 00:05:07,440
but during the q a at the end of each

113
00:05:07,440 --> 00:05:07,919
talk

114
00:05:07,919 --> 00:05:09,199
this is your only chance to give

115
00:05:09,199 --> 00:05:11,120
feedback on a specific talk

116
00:05:11,120 --> 00:05:14,960
but um it should be quickly um

117
00:05:14,960 --> 00:05:16,240
and straightforward if you can just give

118
00:05:16,240 --> 00:05:17,680
us a thumbs up or thumbs down that

119
00:05:17,680 --> 00:05:21,039
really helps the program committing

120
00:05:21,280 --> 00:05:23,039
crunch all the data and compare it to

121
00:05:23,039 --> 00:05:24,720
the wrong ratings of the talks make sure

122
00:05:24,720 --> 00:05:26,320
that you're getting what the

123
00:05:26,320 --> 00:05:28,400
what the audience want there's also a

124
00:05:28,400 --> 00:05:30,880
survey for general feedback on the event

125
00:05:30,880 --> 00:05:32,639
um and not just this event but we're

126
00:05:32,639 --> 00:05:34,240
also looking for information on

127
00:05:34,240 --> 00:05:36,000
how you feel we might be able to run

128
00:05:36,000 --> 00:05:37,840
events during later in the year so

129
00:05:37,840 --> 00:05:38,240
please

130
00:05:38,240 --> 00:05:39,840
um go to that survey if you'd like the

131
00:05:39,840 --> 00:05:43,359
feedback it's extremely welcome

132
00:05:43,840 --> 00:05:45,919
um so we're trying something different

133
00:05:45,919 --> 00:05:47,919
for the social instead of the social um

134
00:05:47,919 --> 00:05:50,000
during the breaks being yet another zoom

135
00:05:50,000 --> 00:05:50,479
grid

136
00:05:50,479 --> 00:05:52,240
uh we've found a new platform called

137
00:05:52,240 --> 00:05:53,840
spatial chat um

138
00:05:53,840 --> 00:05:55,360
some of you may be familiar with it from

139
00:05:55,360 --> 00:05:57,680
right meetings um it's a little bit like

140
00:05:57,680 --> 00:05:59,120
gather time that some of you may have

141
00:05:59,120 --> 00:05:59,680
tried

142
00:05:59,680 --> 00:06:01,280
but it's a place to hang out during the

143
00:06:01,280 --> 00:06:03,280
breaks you get a little avatar that

144
00:06:03,280 --> 00:06:05,199
looks like that picture of me there

145
00:06:05,199 --> 00:06:06,960
and you can move it around the space and

146
00:06:06,960 --> 00:06:08,560
you can see and hear the people you're

147
00:06:08,560 --> 00:06:10,400
close to

148
00:06:10,400 --> 00:06:13,759
um you just need a web browser for that

149
00:06:13,759 --> 00:06:17,280
um there's the url um there's a password

150
00:06:17,280 --> 00:06:19,039
the password will have been emailed to

151
00:06:19,039 --> 00:06:20,639
you or you will see on the rolling

152
00:06:20,639 --> 00:06:22,800
slides between presentations

153
00:06:22,800 --> 00:06:25,680
um you'll also see that the um there's a

154
00:06:25,680 --> 00:06:27,360
little yellow badge there

155
00:06:27,360 --> 00:06:29,680
um that designates the york staff

156
00:06:29,680 --> 00:06:31,680
members who are admins and can help her

157
00:06:31,680 --> 00:06:33,520
or address any issues that you're having

158
00:06:33,520 --> 00:06:34,880
with spatial

159
00:06:34,880 --> 00:06:37,840
um finally um tomorrow's proceedings we

160
00:06:37,840 --> 00:06:40,240
start at 1am utc

161
00:06:40,240 --> 00:06:42,720
on friday you reuse the same workshop

162
00:06:42,720 --> 00:06:45,680
link is thursday for this

163
00:06:45,680 --> 00:06:48,800
so um that is um

164
00:06:48,800 --> 00:06:50,560
the meeting that just thinks i'm just

165
00:06:50,560 --> 00:06:51,919
going to switch over to

166
00:06:51,919 --> 00:06:53,840
a um a little bit about the background

167
00:06:53,840 --> 00:06:55,199
for work for those who haven't been to

168
00:06:55,199 --> 00:06:56,560
an art workshop before

169
00:06:56,560 --> 00:06:59,599
um for those of you who have um maybe

170
00:06:59,599 --> 00:07:00,960
not been to one for a while

171
00:07:00,960 --> 00:07:02,240
just to say a little bit about where

172
00:07:02,240 --> 00:07:05,120
work is and and and what we're doing

173
00:07:05,120 --> 00:07:06,880
what is our work's mission we're here to

174
00:07:06,880 --> 00:07:08,880
make the dns work better

175
00:07:08,880 --> 00:07:10,560
um we do this through a bunch of

176
00:07:10,560 --> 00:07:12,720
different ways and focus on

177
00:07:12,720 --> 00:07:15,440
operational coordination liaison between

178
00:07:15,440 --> 00:07:16,000
operation

179
00:07:16,000 --> 00:07:18,240
and research data gathering um doing

180
00:07:18,240 --> 00:07:20,639
useful open source software tools

181
00:07:20,639 --> 00:07:23,360
um and basically um facilitating an

182
00:07:23,360 --> 00:07:24,560
environment where we can share

183
00:07:24,560 --> 00:07:26,880
information responsibility responsibly

184
00:07:26,880 --> 00:07:29,199
and engage in knowledge transfer and

185
00:07:29,199 --> 00:07:30,720
hopefully increase the on the public

186
00:07:30,720 --> 00:07:33,520
awareness of the importance of the dns

187
00:07:33,520 --> 00:07:36,080
who are members we have around 100

188
00:07:36,080 --> 00:07:37,360
members you can see that there's some

189
00:07:37,360 --> 00:07:39,919
very big names there

190
00:07:39,919 --> 00:07:44,000
they include many of the tcp registries

191
00:07:44,000 --> 00:07:45,280
in the world many of the

192
00:07:45,280 --> 00:07:49,120
most important jt gtld registries um

193
00:07:49,120 --> 00:07:50,720
internet number registries internet

194
00:07:50,720 --> 00:07:52,720
service providers vendors of dns

195
00:07:52,720 --> 00:07:54,560
software hardware

196
00:07:54,560 --> 00:07:57,680
open source enclosed social media

197
00:07:57,680 --> 00:07:58,479
companies

198
00:07:58,479 --> 00:08:01,440
um and um it's a very diverse community

199
00:08:01,440 --> 00:08:03,120
it's a very supportive community

200
00:08:03,120 --> 00:08:06,000
and um you know we very much value them

201
00:08:06,000 --> 00:08:07,360
with the support that we have from our

202
00:08:07,360 --> 00:08:09,120
members

203
00:08:09,120 --> 00:08:11,440
um things that we've achieved recently

204
00:08:11,440 --> 00:08:13,840
the last workshop that we had we had 180

205
00:08:13,840 --> 00:08:15,360
attendees which is one of our

206
00:08:15,360 --> 00:08:18,240
biggest ever um we just completed our

207
00:08:18,240 --> 00:08:19,919
annual day in the life of the internet

208
00:08:19,919 --> 00:08:20,800
data collection

209
00:08:20,800 --> 00:08:23,840
exercise more about that tomorrow

210
00:08:23,840 --> 00:08:25,680
um two of the important tools that we

211
00:08:25,680 --> 00:08:27,680
have dns power from dns cap

212
00:08:27,680 --> 00:08:29,599
um we've done some major enhancements

213
00:08:29,599 --> 00:08:32,320
and and new releases to these

214
00:08:32,320 --> 00:08:34,719
um we recently did some important um

215
00:08:34,719 --> 00:08:36,320
software upgrades to our analysis

216
00:08:36,320 --> 00:08:37,519
servers and also

217
00:08:37,519 --> 00:08:40,000
um the maintenance automation that

218
00:08:40,000 --> 00:08:42,000
facilitated that will be um

219
00:08:42,000 --> 00:08:43,360
brought to us in other parts of our

220
00:08:43,360 --> 00:08:45,760
infrastructure our check my dns

221
00:08:45,760 --> 00:08:48,160
tester um has had our pki origin

222
00:08:48,160 --> 00:08:50,000
validation added to it

223
00:08:50,000 --> 00:08:51,920
and despite 2020 being a challenging

224
00:08:51,920 --> 00:08:54,640
year we managed to finish it in a strong

225
00:08:54,640 --> 00:08:58,160
year-end financial position um

226
00:08:58,160 --> 00:09:01,600
and um you know we've had a managed

227
00:09:01,600 --> 00:09:04,240
operational continuity and successful

228
00:09:04,240 --> 00:09:06,000
online events throughout the entire year

229
00:09:06,000 --> 00:09:09,040
of the pandemic so

230
00:09:09,040 --> 00:09:11,519
we're in good shape what are our

231
00:09:11,519 --> 00:09:12,640
technical resources

232
00:09:12,640 --> 00:09:14,240
i mentioned the annual data collection

233
00:09:14,240 --> 00:09:16,560
that we do that goes back over 15 years

234
00:09:16,560 --> 00:09:19,040
so we have a unique 250 terabyte data

235
00:09:19,040 --> 00:09:19,920
set

236
00:09:19,920 --> 00:09:22,160
most of our infrastructure is in fremont

237
00:09:22,160 --> 00:09:23,360
california

238
00:09:23,360 --> 00:09:25,040
we've been working on a major update to

239
00:09:25,040 --> 00:09:27,040
our data store for some time now which

240
00:09:27,040 --> 00:09:28,720
what we can finish the next couple of

241
00:09:28,720 --> 00:09:29,760
months

242
00:09:29,760 --> 00:09:31,519
um we have a range of open source dns

243
00:09:31,519 --> 00:09:32,880
tools software

244
00:09:32,880 --> 00:09:34,959
um i mentioned check my dns there are

245
00:09:34,959 --> 00:09:37,279
other testers that go with that as well

246
00:09:37,279 --> 00:09:38,800
and our infrastructure is supported by

247
00:09:38,800 --> 00:09:42,800
secondary sites in autowinds.com

248
00:09:45,200 --> 00:09:46,720
how do you become involved you can

249
00:09:46,720 --> 00:09:48,160
become a member we have a range of

250
00:09:48,160 --> 00:09:49,920
membership categories for different size

251
00:09:49,920 --> 00:09:51,040
organizations

252
00:09:51,040 --> 00:09:52,959
um the bigger the the higher the

253
00:09:52,959 --> 00:09:54,800
category the more contacts you get to

254
00:09:54,800 --> 00:09:56,000
participate and

255
00:09:56,000 --> 00:09:58,640
use various award resources uh we have a

256
00:09:58,640 --> 00:10:00,160
couple of entry-level categories

257
00:10:00,160 --> 00:10:01,920
supporters we expect to make some kind

258
00:10:01,920 --> 00:10:02,240
of

259
00:10:02,240 --> 00:10:04,800
kind of in-kind contribution and for

260
00:10:04,800 --> 00:10:05,279
small

261
00:10:05,279 --> 00:10:07,279
organizations only there's the the blue

262
00:10:07,279 --> 00:10:09,200
category

263
00:10:09,200 --> 00:10:11,839
what kind of an organization are we um

264
00:10:11,839 --> 00:10:13,600
our governance works on the basis of an

265
00:10:13,600 --> 00:10:16,079
independent legal entity a diverse base

266
00:10:16,079 --> 00:10:17,440
of members

267
00:10:17,440 --> 00:10:19,519
we're financially self-supporting and

268
00:10:19,519 --> 00:10:21,040
i've essentially managed um

269
00:10:21,040 --> 00:10:23,680
fiscal break even for some years now um

270
00:10:23,680 --> 00:10:25,680
our budget at the moment is just under a

271
00:10:25,680 --> 00:10:27,040
million dollars

272
00:10:27,040 --> 00:10:29,360
we're a neutral organization with

273
00:10:29,360 --> 00:10:31,360
self-governance through an elected board

274
00:10:31,360 --> 00:10:33,440
which reflects member interest

275
00:10:33,440 --> 00:10:35,120
we have a number of contracted executive

276
00:10:35,120 --> 00:10:36,640
staff like myself

277
00:10:36,640 --> 00:10:38,399
um but a lot of what we do is supported

278
00:10:38,399 --> 00:10:40,480
by volunteer efforts in particular

279
00:10:40,480 --> 00:10:42,800
our program and other committees and in

280
00:10:42,800 --> 00:10:45,040
the us we have formal nonprofit tax

281
00:10:45,040 --> 00:10:47,839
status via 50163

282
00:10:47,839 --> 00:10:50,079
uh this is your board um most of them

283
00:10:50,079 --> 00:10:51,279
will be attending some

284
00:10:51,279 --> 00:10:53,519
of today's workshop and tomorrow's

285
00:10:53,519 --> 00:10:55,440
workshop

286
00:10:55,440 --> 00:10:58,560
and these are the staff who are all

287
00:10:58,560 --> 00:10:59,760
around so

288
00:10:59,760 --> 00:11:02,399
please do contact us via the various

289
00:11:02,399 --> 00:11:03,760
channels if there's some

290
00:11:03,760 --> 00:11:07,220
anything that you do need help with

291
00:11:07,220 --> 00:11:10,349
[Music]

292
00:11:13,519 --> 00:11:15,360
and this is our program committee um you

293
00:11:15,360 --> 00:11:16,720
will be seeing and hearing

294
00:11:16,720 --> 00:11:18,640
through for most of them through the

295
00:11:18,640 --> 00:11:20,000
course of the workshop and they've

296
00:11:20,000 --> 00:11:21,920
worked hard to put the um content

297
00:11:21,920 --> 00:11:22,880
together

298
00:11:22,880 --> 00:11:28,720
um for this workshop

299
00:11:28,720 --> 00:11:30,640
we also at workshops usually take the

300
00:11:30,640 --> 00:11:32,480
chance to give special recognition

301
00:11:32,480 --> 00:11:34,640
recognition to some of our volunteers

302
00:11:34,640 --> 00:11:35,839
who have um

303
00:11:35,839 --> 00:11:38,880
done extra going the extra mile um

304
00:11:38,880 --> 00:11:40,959
and um this time around there's two

305
00:11:40,959 --> 00:11:42,320
people we're right to recognize i

306
00:11:42,320 --> 00:11:43,519
understand that schumann is

307
00:11:43,519 --> 00:11:45,760
in the audience today so high schumann

308
00:11:45,760 --> 00:11:46,880
if you're there

309
00:11:46,880 --> 00:11:48,959
schumann spent three years on the ogre

310
00:11:48,959 --> 00:11:50,560
program committee and finished up as a

311
00:11:50,560 --> 00:11:51,519
chair

312
00:11:51,519 --> 00:11:54,880
between 2017 and 2020 at this point we

313
00:11:54,880 --> 00:11:56,480
would normally bring schumann up to the

314
00:11:56,480 --> 00:11:58,639
um the podium and hand him a nice um

315
00:11:58,639 --> 00:11:59,279
award

316
00:11:59,279 --> 00:12:00,720
um and he would get a chance to say

317
00:12:00,720 --> 00:12:02,639
something since they don't have that

318
00:12:02,639 --> 00:12:03,360
chance he sent

319
00:12:03,360 --> 00:12:06,240
us a very a very kind and generous quote

320
00:12:06,240 --> 00:12:07,360
um

321
00:12:07,360 --> 00:12:10,880
and um here is shimon and um

322
00:12:10,880 --> 00:12:13,120
the uh the award that we sent him this

323
00:12:13,120 --> 00:12:14,800
time around unfortunately weren't able

324
00:12:14,800 --> 00:12:16,399
to present it but hopefully we will

325
00:12:16,399 --> 00:12:17,760
we'll get back to that so thank you

326
00:12:17,760 --> 00:12:20,240
schumann

327
00:12:20,880 --> 00:12:23,440
briefly nick's workshops um at the start

328
00:12:23,440 --> 00:12:24,880
of the year we decided that we weren't

329
00:12:24,880 --> 00:12:26,480
going to do any physical workshops for

330
00:12:26,480 --> 00:12:27,120
the first

331
00:12:27,120 --> 00:12:28,959
nine months of the year we're sticking

332
00:12:28,959 --> 00:12:30,800
with that plan um

333
00:12:30,800 --> 00:12:32,480
probably we will have a short online

334
00:12:32,480 --> 00:12:34,240
event in august

335
00:12:34,240 --> 00:12:37,680
and um in the um quarter four we're

336
00:12:37,680 --> 00:12:39,360
hoping that we will be able to do events

337
00:12:39,360 --> 00:12:41,360
with at least some physical basis hybrid

338
00:12:41,360 --> 00:12:43,279
events where there's physical on and

339
00:12:43,279 --> 00:12:44,959
online participation

340
00:12:44,959 --> 00:12:47,040
uh we may do the agm as a standalone

341
00:12:47,040 --> 00:12:49,040
event in october for the members

342
00:12:49,040 --> 00:12:52,399
um we hope to do support 36 co-located

343
00:12:52,399 --> 00:12:54,560
with some other event during november

344
00:12:54,560 --> 00:12:56,480
and we're reasonably confident at this

345
00:12:56,480 --> 00:12:58,000
point in time that we'll be able to go

346
00:12:58,000 --> 00:12:59,760
back to a physical meeting

347
00:12:59,760 --> 00:13:03,440
um in in austin texas and in february of

348
00:13:03,440 --> 00:13:06,160
next year

349
00:13:06,160 --> 00:13:09,760
so uh finally um if that's got you

350
00:13:09,760 --> 00:13:11,360
interested and you're not a work member

351
00:13:11,360 --> 00:13:12,639
already why should you become

352
00:13:12,639 --> 00:13:14,399
because we haven't become a member

353
00:13:14,399 --> 00:13:16,320
because we have a unique community

354
00:13:16,320 --> 00:13:18,639
um the various tools and services that

355
00:13:18,639 --> 00:13:20,399
we have there's a chance for you to

356
00:13:20,399 --> 00:13:21,920
influence these

357
00:13:21,920 --> 00:13:24,399
make them useful to your business um we

358
00:13:24,399 --> 00:13:26,480
have our unique data set you're able to

359
00:13:26,480 --> 00:13:29,680
share and analyze that um and you know

360
00:13:29,680 --> 00:13:31,120
when things come up

361
00:13:31,120 --> 00:13:33,440
operational incidents um security

362
00:13:33,440 --> 00:13:34,880
threats vulnerabilities there are

363
00:13:34,880 --> 00:13:36,639
various platforms that we have that you

364
00:13:36,639 --> 00:13:37,040
can

365
00:13:37,040 --> 00:13:39,760
coordinate with your peers um and we're

366
00:13:39,760 --> 00:13:41,600
a neutral organization we're not for

367
00:13:41,600 --> 00:13:43,600
profit and we're free of vested interest

368
00:13:43,600 --> 00:13:45,279
in the dns space

369
00:13:45,279 --> 00:13:48,399
so the final slide that i have is is not

370
00:13:48,399 --> 00:13:50,160
something that i'm going to speak to but

371
00:13:50,160 --> 00:13:51,760
it's good things that our members have

372
00:13:51,760 --> 00:13:53,600
said about us over the years

373
00:13:53,600 --> 00:13:56,800
so um

374
00:13:58,240 --> 00:14:01,279
that is um all i have to say for now

375
00:14:01,279 --> 00:14:05,199
um at this point um i will now hand over

376
00:14:05,199 --> 00:14:08,160
to um session chair and q a monitor for

377
00:14:08,160 --> 00:14:09,279
the next session for

378
00:14:09,279 --> 00:14:11,519
pallavi harass from the uh the program

379
00:14:11,519 --> 00:14:13,279
committee and also from the program

380
00:14:13,279 --> 00:14:15,040
committee minor brutal we'll be we'll be

381
00:14:15,040 --> 00:14:17,839
doing challenging things

382
00:14:17,839 --> 00:14:20,720
thank you keith uh for giving us

383
00:14:20,720 --> 00:14:22,720
information about oarc

384
00:14:22,720 --> 00:14:25,600
uh welcome everyone to the first session

385
00:14:25,600 --> 00:14:26,000
of

386
00:14:26,000 --> 00:14:29,760
uh work35 uh i am pallavires i am a

387
00:14:29,760 --> 00:14:31,120
member of

388
00:14:31,120 --> 00:14:33,680
oak program committee i'll be the

389
00:14:33,680 --> 00:14:34,480
session chair

390
00:14:34,480 --> 00:14:37,199
and manu brettel will be the time keeper

391
00:14:37,199 --> 00:14:39,519
for the session

392
00:14:39,519 --> 00:14:42,320
now i would like to welcome mark allman

393
00:14:42,320 --> 00:14:42,720
to

394
00:14:42,720 --> 00:14:45,120
talk about uh crucial need for detailed

395
00:14:45,120 --> 00:14:47,279
metadata

396
00:14:47,279 --> 00:14:50,320
onto your bank great thanks

397
00:14:50,320 --> 00:14:55,040
yup so um i am um mark allman from ixy

398
00:14:55,040 --> 00:14:57,839
um going to talk a little bit from the

399
00:14:57,839 --> 00:14:58,560
uh

400
00:14:58,560 --> 00:15:00,480
research perspective about the day in

401
00:15:00,480 --> 00:15:02,240
the life packet traces

402
00:15:02,240 --> 00:15:05,440
that uh lots of you make available to us

403
00:15:05,440 --> 00:15:08,320
and um ask you for just a little bit

404
00:15:08,320 --> 00:15:09,600
more

405
00:15:09,600 --> 00:15:13,040
um help in making those a little more

406
00:15:13,040 --> 00:15:13,920
useful

407
00:15:13,920 --> 00:15:17,519
so um before i start uh asking for more

408
00:15:17,519 --> 00:15:19,760
stuff from you i want to make sure

409
00:15:19,760 --> 00:15:22,399
uh i say that you know this is uh really

410
00:15:22,399 --> 00:15:24,000
a fantastic resource the

411
00:15:24,000 --> 00:15:27,040
the the packet traces um that

412
00:15:27,040 --> 00:15:30,079
that everybody makes available through

413
00:15:30,079 --> 00:15:33,120
through oarc um it's a great research

414
00:15:33,120 --> 00:15:36,079
uh resource and so this talk is not a

415
00:15:36,079 --> 00:15:37,600
complaint please don't

416
00:15:37,600 --> 00:15:39,440
think i'm coming and complaining i'm

417
00:15:39,440 --> 00:15:41,199
asking for a little bit more help

418
00:15:41,199 --> 00:15:43,199
to make this resource sort of a little

419
00:15:43,199 --> 00:15:44,480
bit better but

420
00:15:44,480 --> 00:15:47,839
um it's great and uh i i don't want this

421
00:15:47,839 --> 00:15:49,600
to come off as a complaint at all so i

422
00:15:49,600 --> 00:15:50,800
wanted to say that

423
00:15:50,800 --> 00:15:54,959
so first thing here um so

424
00:15:54,959 --> 00:15:58,160
when we record packet traces when we

425
00:15:58,160 --> 00:15:59,600
take packet traces what we're trying to

426
00:15:59,600 --> 00:16:01,120
do is we're trying to record

427
00:16:01,120 --> 00:16:04,079
some trying to record a highly accurate

428
00:16:04,079 --> 00:16:06,079
version of reality that happens

429
00:16:06,079 --> 00:16:07,920
on the network that we're watching for

430
00:16:07,920 --> 00:16:09,920
whatever period we're watching

431
00:16:09,920 --> 00:16:12,959
um and all packet traces are sort of

432
00:16:12,959 --> 00:16:13,839
imperfect in

433
00:16:13,839 --> 00:16:16,880
in some way or another um we we strive

434
00:16:16,880 --> 00:16:18,800
to be sort of highly representative of

435
00:16:18,800 --> 00:16:20,160
reality but we

436
00:16:20,160 --> 00:16:22,320
we do fall short from that and we fall

437
00:16:22,320 --> 00:16:24,000
short for a couple of reasons first of

438
00:16:24,000 --> 00:16:24,560
all

439
00:16:24,560 --> 00:16:26,639
just the technology of recording packets

440
00:16:26,639 --> 00:16:27,759
is sort of

441
00:16:27,759 --> 00:16:29,839
tough in some environments and so that

442
00:16:29,839 --> 00:16:30,800
kind of

443
00:16:30,800 --> 00:16:34,800
um gets us away from reality a little

444
00:16:34,800 --> 00:16:35,120
bit

445
00:16:35,120 --> 00:16:38,480
and then sometimes we also um sort of

446
00:16:38,480 --> 00:16:40,480
change things in the packet traces

447
00:16:40,480 --> 00:16:43,279
that also doesn't reflect exact reality

448
00:16:43,279 --> 00:16:45,440
and so

449
00:16:45,440 --> 00:16:47,920
um we can use metadata to sort of fill

450
00:16:47,920 --> 00:16:49,600
in the gaps between

451
00:16:49,600 --> 00:16:52,079
the the packet traces on one hand and

452
00:16:52,079 --> 00:16:53,680
reality on the other hand

453
00:16:53,680 --> 00:16:57,120
and that helps us when we're analyzing

454
00:16:57,120 --> 00:17:00,639
um we're analyzing a data set

455
00:17:00,639 --> 00:17:02,720
so i'm going to go through a few

456
00:17:02,720 --> 00:17:04,160
different aspects

457
00:17:04,160 --> 00:17:07,760
of metadata that i think would be great

458
00:17:07,760 --> 00:17:08,400
if

459
00:17:08,400 --> 00:17:10,880
the data contributors could help us out

460
00:17:10,880 --> 00:17:13,039
with a little bit

461
00:17:13,039 --> 00:17:15,280
there are lots of other aspects of

462
00:17:15,280 --> 00:17:16,799
metadata that one can think about

463
00:17:16,799 --> 00:17:18,160
i'm going to go through the ones that

464
00:17:18,160 --> 00:17:20,079
have sort of bit me

465
00:17:20,079 --> 00:17:22,880
the most as i look at the day in the

466
00:17:22,880 --> 00:17:23,599
life

467
00:17:23,599 --> 00:17:26,399
packet traces

468
00:17:27,039 --> 00:17:29,039
and ask for a little help with this in

469
00:17:29,039 --> 00:17:30,160
in particular

470
00:17:30,160 --> 00:17:32,799
okay so the first one is um it would be

471
00:17:32,799 --> 00:17:35,679
great if we could identify

472
00:17:35,679 --> 00:17:39,360
um missing data when you send us

473
00:17:39,360 --> 00:17:44,000
a packet trace so this is my sort of um

474
00:17:44,720 --> 00:17:47,039
a quick example of this i have a picture

475
00:17:47,039 --> 00:17:48,799
here and i'm using this picture as an

476
00:17:48,799 --> 00:17:50,400
analogy of

477
00:17:50,400 --> 00:17:53,200
the the diddle packet trace that you

478
00:17:53,200 --> 00:17:54,080
know i look at

479
00:17:54,080 --> 00:17:57,039
and so we can certainly extract value

480
00:17:57,039 --> 00:17:58,880
out of these traces like we can

481
00:17:58,880 --> 00:18:00,880
extract value out of this picture okay

482
00:18:00,880 --> 00:18:03,360
we can see this picture is of a

483
00:18:03,360 --> 00:18:06,320
a soccer game we know that the players

484
00:18:06,320 --> 00:18:07,520
are wearing cleats

485
00:18:07,520 --> 00:18:09,120
they're wearing shin guards there's a

486
00:18:09,120 --> 00:18:11,520
goal behind it so we can tell it's a

487
00:18:11,520 --> 00:18:13,039
soccer one

488
00:18:13,039 --> 00:18:14,880
football game for for most of you

489
00:18:14,880 --> 00:18:16,080
probably right

490
00:18:16,080 --> 00:18:18,400
um but there's also clearly missing

491
00:18:18,400 --> 00:18:20,720
information here right so the the player

492
00:18:20,720 --> 00:18:22,720
um in the white uniform is clearly you

493
00:18:22,720 --> 00:18:24,480
know shying away from something

494
00:18:24,480 --> 00:18:28,000
we have no idea what um we can make some

495
00:18:28,000 --> 00:18:30,000
educated guesses by knowing that this is

496
00:18:30,000 --> 00:18:31,520
a soccer game but

497
00:18:31,520 --> 00:18:34,160
um there's some missing information here

498
00:18:34,160 --> 00:18:35,440
right this is sort of

499
00:18:35,440 --> 00:18:38,799
reality the rest of the picture is that

500
00:18:38,799 --> 00:18:41,600
the the player on the white team is

501
00:18:41,600 --> 00:18:43,200
shying away from

502
00:18:43,200 --> 00:18:45,360
the goalkeeper who's going to you know

503
00:18:45,360 --> 00:18:46,720
elbow her in the head

504
00:18:46,720 --> 00:18:49,760
trying to get the ball right

505
00:18:49,760 --> 00:18:51,919
and so this is just sort of you know a

506
00:18:51,919 --> 00:18:53,039
quick analogy

507
00:18:53,039 --> 00:18:56,720
for missing data you know it would be

508
00:18:56,720 --> 00:18:58,080
nice to know about

509
00:18:58,080 --> 00:19:02,320
missing data in packet traces um

510
00:19:02,320 --> 00:19:04,240
that don't keep random pictures of high

511
00:19:04,240 --> 00:19:06,160
school soccer around by the way that my

512
00:19:06,160 --> 00:19:07,200
daughter's the

513
00:19:07,200 --> 00:19:10,160
goalkeeper in that picture um all right

514
00:19:10,160 --> 00:19:11,280
so

515
00:19:11,280 --> 00:19:13,280
there's lots of different reasons why

516
00:19:13,280 --> 00:19:14,720
there might be missing data

517
00:19:14,720 --> 00:19:17,360
in a packet trace some of them are sort

518
00:19:17,360 --> 00:19:19,039
of fundamental to how the packet trace

519
00:19:19,039 --> 00:19:20,799
was taken we captured incoming packets

520
00:19:20,799 --> 00:19:23,440
but not outgoing packets we

521
00:19:23,440 --> 00:19:25,679
did sampling so we only got one in ten

522
00:19:25,679 --> 00:19:27,679
packets those kinds of things are set up

523
00:19:27,679 --> 00:19:29,120
they're fundamental to how the packet

524
00:19:29,120 --> 00:19:30,320
trace was taken

525
00:19:30,320 --> 00:19:32,960
there are other things like hey our our

526
00:19:32,960 --> 00:19:34,559
network monitor just couldn't keep up

527
00:19:34,559 --> 00:19:36,240
with the load at some points

528
00:19:36,240 --> 00:19:40,480
okay and so maybe tcp dump reports aha

529
00:19:40,480 --> 00:19:41,440
you know uh

530
00:19:41,440 --> 00:19:44,320
20 000 packets were dropped during this

531
00:19:44,320 --> 00:19:45,520
this packet tracing

532
00:19:45,520 --> 00:19:48,080
and that's clearly wrong tcp dump really

533
00:19:48,080 --> 00:19:49,120
doesn't know

534
00:19:49,120 --> 00:19:52,400
how many packets it didn't see

535
00:19:52,400 --> 00:19:54,799
but that notion is better than nothing

536
00:19:54,799 --> 00:19:56,799
so if you were to say record that

537
00:19:56,799 --> 00:19:58,960
and give that to us we would have some

538
00:19:58,960 --> 00:20:00,080
idea of

539
00:20:00,080 --> 00:20:03,280
how close this

540
00:20:03,280 --> 00:20:06,799
packet chase is to reality okay

541
00:20:06,799 --> 00:20:09,600
second example is we do transformations

542
00:20:09,600 --> 00:20:11,440
to traces and since i was

543
00:20:11,440 --> 00:20:13,600
um showing pictures of lee i have one

544
00:20:13,600 --> 00:20:14,480
more here

545
00:20:14,480 --> 00:20:18,000
um last halloween leah and her friends

546
00:20:18,000 --> 00:20:19,679
leah

547
00:20:19,679 --> 00:20:22,000
her friends thought it would be just

548
00:20:22,000 --> 00:20:24,000
great fun if they all dressed up like

549
00:20:24,000 --> 00:20:25,440
their fathers

550
00:20:25,440 --> 00:20:29,919
so that's leah as me

551
00:20:30,400 --> 00:20:32,240
and there's some similarities there

552
00:20:32,240 --> 00:20:33,520
right

553
00:20:33,520 --> 00:20:35,280
it doesn't look exactly like me but

554
00:20:35,280 --> 00:20:37,360
there's some similarities i wear jeans

555
00:20:37,360 --> 00:20:37,600
and

556
00:20:37,600 --> 00:20:39,679
ball caps sometimes i have two arms you

557
00:20:39,679 --> 00:20:41,280
know no glasses whatever

558
00:20:41,280 --> 00:20:44,480
it's not quite the same as me all right

559
00:20:44,480 --> 00:20:47,039
um and so it is for packet traces

560
00:20:47,039 --> 00:20:49,039
sometimes right and the big thing about

561
00:20:49,039 --> 00:20:51,200
packet traces that we often change is ip

562
00:20:51,200 --> 00:20:51,919
addresses

563
00:20:51,919 --> 00:20:54,320
we often obscure ip addresses anonymize

564
00:20:54,320 --> 00:20:56,159
them for privacy reasons

565
00:20:56,159 --> 00:20:59,360
and it's really very difficult to look

566
00:20:59,360 --> 00:21:01,200
at the diddle collection and know that

567
00:21:01,200 --> 00:21:01,679
oh

568
00:21:01,679 --> 00:21:04,960
j root anonymized and f root didn't or

569
00:21:04,960 --> 00:21:05,919
something you just

570
00:21:05,919 --> 00:21:08,799
can't figure that out it would be great

571
00:21:08,799 --> 00:21:09,679
if

572
00:21:09,679 --> 00:21:12,000
um folks could sort of illuminate that

573
00:21:12,000 --> 00:21:12,799
for us

574
00:21:12,799 --> 00:21:15,360
and not just you know hey the the packet

575
00:21:15,360 --> 00:21:16,880
traces are anonymized but

576
00:21:16,880 --> 00:21:18,559
it would be great to tell us how they're

577
00:21:18,559 --> 00:21:20,400
anonymized right we used you know

578
00:21:20,400 --> 00:21:22,960
prefix preserving anonymization or we

579
00:21:22,960 --> 00:21:23,440
just

580
00:21:23,440 --> 00:21:25,440
you know completely randomized things

581
00:21:25,440 --> 00:21:27,679
and it would be great to know if

582
00:21:27,679 --> 00:21:30,080
the mapping you used in one trace file

583
00:21:30,080 --> 00:21:31,679
is the same as the mapping you used in

584
00:21:31,679 --> 00:21:33,280
some other trace file or if they're

585
00:21:33,280 --> 00:21:34,159
completely

586
00:21:34,159 --> 00:21:36,720
different trace file to trace file that

587
00:21:36,720 --> 00:21:37,200
just

588
00:21:37,200 --> 00:21:40,320
adds um some information that we can use

589
00:21:40,320 --> 00:21:42,080
when we're analyzing can we compare

590
00:21:42,080 --> 00:21:45,039
across trace files or not

591
00:21:45,039 --> 00:21:48,320
um some more things uh more

592
00:21:48,320 --> 00:21:50,000
bits of metadata that we'd like we'd

593
00:21:50,000 --> 00:21:51,679
like to know where

594
00:21:51,679 --> 00:21:54,159
the packet traces were taken sometimes

595
00:21:54,159 --> 00:21:56,480
we get hints by directory names with

596
00:21:56,480 --> 00:21:57,919
you know airport codes in them or

597
00:21:57,919 --> 00:22:00,240
something but um if you could make this

598
00:22:00,240 --> 00:22:02,159
explicit that would be great sometimes

599
00:22:02,159 --> 00:22:04,080
it's handy to know oh look this is

600
00:22:04,080 --> 00:22:07,039
just um europe that we're looking at or

601
00:22:07,039 --> 00:22:07,760
this is

602
00:22:07,760 --> 00:22:11,120
just asia um

603
00:22:11,120 --> 00:22:13,280
if there are any sort of obvious puzzles

604
00:22:13,280 --> 00:22:14,960
in the data we'd love to know about that

605
00:22:14,960 --> 00:22:15,520
too

606
00:22:15,520 --> 00:22:17,919
okay so if there was something excuse me

607
00:22:17,919 --> 00:22:19,919
interviewing days about two minutes

608
00:22:19,919 --> 00:22:23,440
before the q a yep uh so

609
00:22:23,440 --> 00:22:27,520
if um if there was a routing issue

610
00:22:27,520 --> 00:22:29,840
during the middle of the uh trace and

611
00:22:29,840 --> 00:22:31,600
that depressed packets but that was a

612
00:22:31,600 --> 00:22:32,000
real

613
00:22:32,000 --> 00:22:33,760
thing you know okay you could tell us

614
00:22:33,760 --> 00:22:35,679
that um

615
00:22:35,679 --> 00:22:38,080
anything that we can't get directly out

616
00:22:38,080 --> 00:22:38,880
of the

617
00:22:38,880 --> 00:22:41,760
uh the trace file itself would be great

618
00:22:41,760 --> 00:22:42,320
to know

619
00:22:42,320 --> 00:22:45,600
okay so if one ip address ends up

620
00:22:45,600 --> 00:22:47,679
representing you know sort of 10 servers

621
00:22:47,679 --> 00:22:49,280
behind a load balancer that would be

622
00:22:49,280 --> 00:22:50,960
great to know

623
00:22:50,960 --> 00:22:53,120
other things if you could see fit to add

624
00:22:53,120 --> 00:22:54,000
a little contact

625
00:22:54,000 --> 00:22:56,320
information we always have questions i

626
00:22:56,320 --> 00:22:58,240
know this is a bit of a double-edged

627
00:22:58,240 --> 00:23:01,360
sword i've provided data and i know

628
00:23:01,360 --> 00:23:02,799
you're going to get dumb questions if

629
00:23:02,799 --> 00:23:04,559
you put your email address in

630
00:23:04,559 --> 00:23:08,159
in in metadata you know like

631
00:23:08,159 --> 00:23:10,159
what do i do with a p cap you know

632
00:23:10,159 --> 00:23:11,679
something like that um

633
00:23:11,679 --> 00:23:15,440
but it's really quite handy if you can

634
00:23:15,440 --> 00:23:18,400
if you can add some contact information

635
00:23:18,400 --> 00:23:18,960
so

636
00:23:18,960 --> 00:23:22,080
um how am i looking for you to

637
00:23:22,080 --> 00:23:25,120
provide this information i don't care

638
00:23:25,120 --> 00:23:27,679
that's my answer first order is just

639
00:23:27,679 --> 00:23:29,039
provided whether you want to put it in a

640
00:23:29,039 --> 00:23:31,280
text file or a word doc

641
00:23:31,280 --> 00:23:33,200
it doesn't really matter to me i'm not

642
00:23:33,200 --> 00:23:34,640
here asking for

643
00:23:34,640 --> 00:23:37,200
you know some fancy pants xml schema or

644
00:23:37,200 --> 00:23:38,320
anything

645
00:23:38,320 --> 00:23:40,320
just get us the information sort of any

646
00:23:40,320 --> 00:23:41,919
way you can

647
00:23:41,919 --> 00:23:43,919
and if you wanted to go back and do it

648
00:23:43,919 --> 00:23:47,120
for the 250 terabytes of data that keith

649
00:23:47,120 --> 00:23:47,919
just mentioned

650
00:23:47,919 --> 00:23:51,520
that would be great too we do go back to

651
00:23:51,520 --> 00:23:52,720
that that stuff

652
00:23:52,720 --> 00:23:55,840
and we have these questions so

653
00:23:55,840 --> 00:23:58,799
um last slide here uh what could oarc do

654
00:23:58,799 --> 00:23:59,520
about this

655
00:23:59,520 --> 00:24:02,880
um it would be great if the process for

656
00:24:02,880 --> 00:24:07,120
submitting uh data sets also included

657
00:24:07,120 --> 00:24:09,039
some way to submit something that wasn't

658
00:24:09,039 --> 00:24:10,559
a pcap

659
00:24:10,559 --> 00:24:12,960
a doc file a text file something that

660
00:24:12,960 --> 00:24:14,720
had met information in it

661
00:24:14,720 --> 00:24:16,720
and maybe sort of as a community we

662
00:24:16,720 --> 00:24:18,799
could develop a sort of a template you

663
00:24:18,799 --> 00:24:20,240
know

664
00:24:20,240 --> 00:24:22,799
that data collectors could fill out

665
00:24:22,799 --> 00:24:24,720
what's missing what's transformed give

666
00:24:24,720 --> 00:24:26,720
me an email address those kinds of

667
00:24:26,720 --> 00:24:28,240
things

668
00:24:28,240 --> 00:24:33,840
and that is all i had

669
00:24:34,000 --> 00:24:37,120
thank you mark uh that was a very useful

670
00:24:37,120 --> 00:24:37,919
information

671
00:24:37,919 --> 00:24:40,720
for researchers uh at this time i would

672
00:24:40,720 --> 00:24:42,640
like to remind everybody to

673
00:24:42,640 --> 00:24:44,480
fill the poll that would pop onto your

674
00:24:44,480 --> 00:24:46,559
screen this would be your only chance

675
00:24:46,559 --> 00:24:50,000
to rate this talk and we have our

676
00:24:50,000 --> 00:24:53,440
first question from joe ably

677
00:24:53,440 --> 00:24:55,440
his question is without metadata in

678
00:24:55,440 --> 00:24:56,720
place already

679
00:24:56,720 --> 00:25:00,559
we don't really uh sorry we don't really

680
00:25:00,559 --> 00:25:02,960
know who is authorized to speak for data

681
00:25:02,960 --> 00:25:04,480
sets that have already been

682
00:25:04,480 --> 00:25:06,320
collected if we are going to start

683
00:25:06,320 --> 00:25:08,080
collecting metadata which i think would

684
00:25:08,080 --> 00:25:08,720
be great

685
00:25:08,720 --> 00:25:10,559
perhaps that kind of provenance

686
00:25:10,559 --> 00:25:13,520
information would be useful to include

687
00:25:13,520 --> 00:25:16,559
yeah okay i mean that's fair i i i mean

688
00:25:16,559 --> 00:25:18,960
who who can who can give us the metadata

689
00:25:18,960 --> 00:25:20,960
from 2008 right

690
00:25:20,960 --> 00:25:24,000
um i don't know maybe that's a problem

691
00:25:24,000 --> 00:25:26,880
um how about first order we collect

692
00:25:26,880 --> 00:25:28,400
metadata going forward

693
00:25:28,400 --> 00:25:30,960
um you know collecting metadata going

694
00:25:30,960 --> 00:25:32,480
backwards would be great too

695
00:25:32,480 --> 00:25:34,640
don't get me wrong and i i'm willing to

696
00:25:34,640 --> 00:25:37,760
bet that you know some of these uh

697
00:25:37,760 --> 00:25:39,600
you know some of the root operators they

698
00:25:39,600 --> 00:25:40,799
don't change too much

699
00:25:40,799 --> 00:25:44,400
so we could probably get

700
00:25:44,400 --> 00:25:46,559
some of that i i would think but maybe

701
00:25:46,559 --> 00:25:48,159
it's too difficult and

702
00:25:48,159 --> 00:25:50,240
i don't know maybe that's too big of an

703
00:25:50,240 --> 00:25:52,480
ask

704
00:25:54,880 --> 00:25:56,960
i don't see any hands raised or a

705
00:25:56,960 --> 00:25:57,919
question in the q

706
00:25:57,919 --> 00:25:59,250
a um

707
00:25:59,250 --> 00:26:01,679
[Music]

708
00:26:01,679 --> 00:26:03,679
if anybody has any questions loves

709
00:26:03,679 --> 00:26:06,320
metadata

710
00:26:07,039 --> 00:26:11,039
what's not to love okay i see a raised

711
00:26:11,039 --> 00:26:13,440
hand eric

712
00:26:13,440 --> 00:26:15,679
please go ahead and mute yourself and

713
00:26:15,679 --> 00:26:17,039
ask the question

714
00:26:17,039 --> 00:26:20,720
yeah um and preparing for the last

715
00:26:20,720 --> 00:26:22,480
conference i went through some of the

716
00:26:22,480 --> 00:26:24,640
digital data and i noticed that

717
00:26:24,640 --> 00:26:27,840
um i and others were kind of looking for

718
00:26:27,840 --> 00:26:28,880
the same things

719
00:26:28,880 --> 00:26:31,679
which is somewhat normalized which is

720
00:26:31,679 --> 00:26:32,559
just

721
00:26:32,559 --> 00:26:35,120
what query name query type and maybe the

722
00:26:35,120 --> 00:26:36,080
uh

723
00:26:36,080 --> 00:26:39,120
the source ip of the uh um

724
00:26:39,120 --> 00:26:42,159
of the courier i think were

725
00:26:42,159 --> 00:26:44,159
were the were the three set pieces of

726
00:26:44,159 --> 00:26:45,919
data that were being extracted from all

727
00:26:45,919 --> 00:26:47,360
these pcaps

728
00:26:47,360 --> 00:26:48,799
and maybe it would be nice to actually

729
00:26:48,799 --> 00:26:50,480
have a subset

730
00:26:50,480 --> 00:26:53,919
of all this data um

731
00:26:53,919 --> 00:26:56,559
if that is those are the parts that most

732
00:26:56,559 --> 00:26:57,840
most people are interested for the

733
00:26:57,840 --> 00:26:58,960
research

734
00:26:58,960 --> 00:27:02,400
just a thought so

735
00:27:02,400 --> 00:27:03,919
i don't think that's necessarily a

736
00:27:03,919 --> 00:27:06,400
metadata question that's a data question

737
00:27:06,400 --> 00:27:09,919
and i'm with you man i like

738
00:27:09,919 --> 00:27:13,120
uh those are the things that i care

739
00:27:13,120 --> 00:27:14,640
about that's the stuff that i extract

740
00:27:14,640 --> 00:27:15,279
from this

741
00:27:15,279 --> 00:27:17,440
most often too and and i i think you're

742
00:27:17,440 --> 00:27:19,360
right i think your observation is right

743
00:27:19,360 --> 00:27:20,080
on and if we

744
00:27:20,080 --> 00:27:23,520
could you know dig that a simple

745
00:27:23,520 --> 00:27:26,960
summary of every every query out like

746
00:27:26,960 --> 00:27:28,320
that

747
00:27:28,320 --> 00:27:29,679
that we could all crunch that would be

748
00:27:29,679 --> 00:27:32,080
great

749
00:27:32,559 --> 00:27:35,600
oh eric is your question answer

750
00:27:35,600 --> 00:27:39,440
yeah okay uh i think we have time for

751
00:27:39,440 --> 00:27:40,320
one more question

752
00:27:40,320 --> 00:27:42,720
i see joe has raised his hand joe you're

753
00:27:42,720 --> 00:27:44,960
allowed to talk

754
00:27:44,960 --> 00:27:47,039
thanks says yeah sorry for not realizing

755
00:27:47,039 --> 00:27:48,559
how zoom worked before

756
00:27:48,559 --> 00:27:50,720
um i think this is great i think we have

757
00:27:50,720 --> 00:27:52,480
a severe lack of metadata

758
00:27:52,480 --> 00:27:54,240
matt mentioned that some of the data

759
00:27:54,240 --> 00:27:56,240
sets some of the uploads do have

760
00:27:56,240 --> 00:27:59,200
readme files which are there maybe if

761
00:27:59,200 --> 00:28:00,399
we're going to start with any sort of

762
00:28:00,399 --> 00:28:01,600
structured method of

763
00:28:01,600 --> 00:28:03,440
storing metadata i mean i really i think

764
00:28:03,440 --> 00:28:04,799
jumping ahead to

765
00:28:04,799 --> 00:28:07,600
structured metadata itself is is a

766
00:28:07,600 --> 00:28:09,520
probably a fool's errand at this stage

767
00:28:09,520 --> 00:28:10,159
but

768
00:28:10,159 --> 00:28:11,840
being able to just identify which data

769
00:28:11,840 --> 00:28:13,600
sets have metadata at all

770
00:28:13,600 --> 00:28:15,200
would be an advantage particularly if

771
00:28:15,200 --> 00:28:16,720
you're crawling across a large number of

772
00:28:16,720 --> 00:28:18,159
pcaps across a

773
00:28:18,159 --> 00:28:20,240
series of nested directories being able

774
00:28:20,240 --> 00:28:21,600
to exclude stuff that doesn't have

775
00:28:21,600 --> 00:28:23,360
metadata and just considering certain

776
00:28:23,360 --> 00:28:25,120
sets would be useful so maybe that's the

777
00:28:25,120 --> 00:28:27,678
starting point

778
00:28:28,799 --> 00:28:31,279
yeah anything that makes it easier is

779
00:28:31,279 --> 00:28:33,840
would be great

780
00:28:33,840 --> 00:28:37,520
good idea thank you joe

781
00:28:37,520 --> 00:28:41,440
uh i think at this at this point

782
00:28:41,440 --> 00:28:43,919
we have only one more observation from

783
00:28:43,919 --> 00:28:45,200
sebastian

784
00:28:45,200 --> 00:28:47,679
he's saying not a question to note kaida

785
00:28:47,679 --> 00:28:49,440
tried to manage this issue by

786
00:28:49,440 --> 00:28:51,200
implementing that cat

787
00:28:51,200 --> 00:28:53,520
to carry the catalog metadata and data

788
00:28:53,520 --> 00:28:54,720
set together

789
00:28:54,720 --> 00:28:58,960
but this was not a question so

790
00:28:58,960 --> 00:29:00,640
at this point i think we are done with

791
00:29:00,640 --> 00:29:02,480
the q a session for this

792
00:29:02,480 --> 00:29:04,880
uh talk thank you mark for answering the

793
00:29:04,880 --> 00:29:06,880
question in the nice presentation

794
00:29:06,880 --> 00:29:10,080
uh at this point i would like to welcome

795
00:29:10,080 --> 00:29:13,279
matt poncett to talk about a better

796
00:29:13,279 --> 00:29:17,440
do not probe list until you met

797
00:29:17,760 --> 00:29:20,640
thanks pallavi um hey everyone uh so i'm

798
00:29:20,640 --> 00:29:21,200
going to be

799
00:29:21,200 --> 00:29:24,159
taking off my orc staff hat and putting

800
00:29:24,159 --> 00:29:24,559
on an

801
00:29:24,559 --> 00:29:27,919
orc community member hat to

802
00:29:27,919 --> 00:29:31,600
uh to talk about um oric's do not probe

803
00:29:31,600 --> 00:29:32,240
list

804
00:29:32,240 --> 00:29:36,000
um so i've discovered in since uh

805
00:29:36,000 --> 00:29:39,679
um planning this talk that the fact that

806
00:29:39,679 --> 00:29:41,440
a do not probe listing even exists is

807
00:29:41,440 --> 00:29:43,279
news to a bunch of people so

808
00:29:43,279 --> 00:29:46,960
um so so maybe this maybe this has been

809
00:29:46,960 --> 00:29:47,760
uh

810
00:29:47,760 --> 00:29:52,080
um good for a couple of extra reasons um

811
00:29:52,080 --> 00:29:54,720
so uh so what is this about so oreck

812
00:29:54,720 --> 00:29:55,440
maintains

813
00:29:55,440 --> 00:29:59,039
a uh do not probe list which is a

814
00:29:59,039 --> 00:30:02,320
um dates back to about 2008 it's

815
00:30:02,320 --> 00:30:05,120
uh was initially just a simple um sql

816
00:30:05,120 --> 00:30:07,039
database that was put together by

817
00:30:07,039 --> 00:30:09,039
dwayne wessels and a couple of other

818
00:30:09,039 --> 00:30:10,960
researchers who were doing

819
00:30:10,960 --> 00:30:14,240
active dns probes at the time uh for

820
00:30:14,240 --> 00:30:16,320
for research reasons so querying

821
00:30:16,320 --> 00:30:18,080
people's name servers

822
00:30:18,080 --> 00:30:20,399
you know searching for open recursives

823
00:30:20,399 --> 00:30:22,720
that kind of thing um

824
00:30:22,720 --> 00:30:25,600
and uh and they were all each of the

825
00:30:25,600 --> 00:30:26,720
researchers were

826
00:30:26,720 --> 00:30:28,240
sort of having to maintain their own

827
00:30:28,240 --> 00:30:30,240
lists of people who complained

828
00:30:30,240 --> 00:30:32,880
um to their you know in in most cases

829
00:30:32,880 --> 00:30:34,799
university abuse departments

830
00:30:34,799 --> 00:30:38,320
about um about these about these probes

831
00:30:38,320 --> 00:30:40,640
um so the the list was put together

832
00:30:40,640 --> 00:30:41,520
essentially to

833
00:30:41,520 --> 00:30:44,880
to help um each of these researchers

834
00:30:44,880 --> 00:30:46,799
collectively um so they could pool their

835
00:30:46,799 --> 00:30:48,640
resources on on keeping track of those

836
00:30:48,640 --> 00:30:49,520
complaints

837
00:30:49,520 --> 00:30:50,880
so it's basically just a list of

838
00:30:50,880 --> 00:30:52,720
networks that that researchers should

839
00:30:52,720 --> 00:30:55,039
not probe when when trying to do active

840
00:30:55,039 --> 00:30:58,159
uh measurements um it's uh it's

841
00:30:58,159 --> 00:30:59,279
populated with

842
00:30:59,279 --> 00:31:01,519
bogons known dark networks like us

843
00:31:01,519 --> 00:31:02,880
military networks that

844
00:31:02,880 --> 00:31:05,519
that were not previously routed um and

845
00:31:05,519 --> 00:31:06,960
then any sort of regular

846
00:31:06,960 --> 00:31:08,720
uh networks where an operator had

847
00:31:08,720 --> 00:31:10,480
complained about some point about

848
00:31:10,480 --> 00:31:14,080
uh about some sort of active probes um

849
00:31:14,080 --> 00:31:16,240
so it worked pretty simply i mean it

850
00:31:16,240 --> 00:31:17,200
started out

851
00:31:17,200 --> 00:31:19,120
just as sort of friends and family

852
00:31:19,120 --> 00:31:21,039
operations i think only three or four

853
00:31:21,039 --> 00:31:22,480
researchers

854
00:31:22,480 --> 00:31:25,760
who had access to it um

855
00:31:25,760 --> 00:31:29,200
it was all done by giving those

856
00:31:29,200 --> 00:31:31,200
researchers direct access to a simple

857
00:31:31,200 --> 00:31:32,640
sql database

858
00:31:32,640 --> 00:31:35,760
where they could list a listing network

859
00:31:35,760 --> 00:31:37,519
and some basic commenting information

860
00:31:37,519 --> 00:31:39,519
about why the network was being listed

861
00:31:39,519 --> 00:31:40,240
and

862
00:31:40,240 --> 00:31:42,080
you know keeping track of who added the

863
00:31:42,080 --> 00:31:43,679
listing and

864
00:31:43,679 --> 00:31:47,120
um later on uh the direct sql access was

865
00:31:47,120 --> 00:31:47,919
removed

866
00:31:47,919 --> 00:31:51,200
um uh just because it it sort of wasn't

867
00:31:51,200 --> 00:31:51,519
uh

868
00:31:51,519 --> 00:31:54,720
wasn't a great security um thing to have

869
00:31:54,720 --> 00:31:58,240
uh oreck's uh sql database open to the

870
00:31:58,240 --> 00:32:01,440
to the world like that um and uh

871
00:32:01,440 --> 00:32:03,519
reads of the database were replaced with

872
00:32:03,519 --> 00:32:05,200
a simple cgi that that

873
00:32:05,200 --> 00:32:08,080
dumps out uh the current list and and

874
00:32:08,080 --> 00:32:09,519
rights were moved to being

875
00:32:09,519 --> 00:32:12,960
uh sort of in a hands um

876
00:32:12,960 --> 00:32:16,080
handwritten admin function essentially

877
00:32:16,080 --> 00:32:20,080
um so why am i talking about a new one

878
00:32:20,080 --> 00:32:23,679
um orc uh for a few years now has been

879
00:32:23,679 --> 00:32:25,840
trying to look for a new home for the

880
00:32:25,840 --> 00:32:29,039
um the do not probe list um

881
00:32:29,039 --> 00:32:30,720
basically for the reason that it's it's

882
00:32:30,720 --> 00:32:32,640
sort of off mission um

883
00:32:32,640 --> 00:32:36,000
it is um not although it was originally

884
00:32:36,000 --> 00:32:38,159
designed for dns researchers

885
00:32:38,159 --> 00:32:40,240
um there's nothing really dns specific

886
00:32:40,240 --> 00:32:42,559
about it

887
00:32:42,559 --> 00:32:45,279
and uh and and it has become one of

888
00:32:45,279 --> 00:32:46,559
those things that is sort of

889
00:32:46,559 --> 00:32:49,840
um a significantly manual

890
00:32:49,840 --> 00:32:53,440
um tool um it really can't scale the way

891
00:32:53,440 --> 00:32:54,320
it's currently

892
00:32:54,320 --> 00:32:57,360
designed it it works great

893
00:32:57,360 --> 00:32:59,200
and it's a small amount of work to

894
00:32:59,200 --> 00:33:00,559
maintain presently

895
00:33:00,559 --> 00:33:02,720
but mostly only because it only sees you

896
00:33:02,720 --> 00:33:04,720
know an update every couple of years

897
00:33:04,720 --> 00:33:07,120
and there are only you know about a half

898
00:33:07,120 --> 00:33:09,120
a dozen people who access it

899
00:33:09,120 --> 00:33:12,000
um but all additions require a

900
00:33:12,000 --> 00:33:13,840
researcher to email orc

901
00:33:13,840 --> 00:33:16,720
then or admin has to hand write some sql

902
00:33:16,720 --> 00:33:17,120
to

903
00:33:17,120 --> 00:33:20,399
to add that to the list

904
00:33:21,360 --> 00:33:24,320
the submissions don't ever expire so if

905
00:33:24,320 --> 00:33:25,760
a network changes hands or

906
00:33:25,760 --> 00:33:28,000
networks policies about being probed

907
00:33:28,000 --> 00:33:29,360
changes there's no way

908
00:33:29,360 --> 00:33:33,360
to discover that or capture it

909
00:33:33,360 --> 00:33:37,039
um reading to the list is restricted

910
00:33:37,039 --> 00:33:40,080
so this requires an admin to set up http

911
00:33:40,080 --> 00:33:42,080
basic auth for for any new researchers

912
00:33:42,080 --> 00:33:44,960
who want to read the list

913
00:33:44,960 --> 00:33:46,880
and the public publish list is

914
00:33:46,880 --> 00:33:48,720
unstructured which in itself isn't a

915
00:33:48,720 --> 00:33:50,559
major problem

916
00:33:50,559 --> 00:33:52,240
but there is no information there about

917
00:33:52,240 --> 00:33:54,159
why a particular network is on the list

918
00:33:54,159 --> 00:33:58,640
so um it if uh if a researcher has any

919
00:33:58,640 --> 00:33:59,919
questions about

920
00:33:59,919 --> 00:34:03,840
um reasons why a network might be listed

921
00:34:03,840 --> 00:34:06,720
um they really need to come to to admit

922
00:34:06,720 --> 00:34:08,320
to ask for it and this this is

923
00:34:08,320 --> 00:34:09,599
essentially what's get what gets

924
00:34:09,599 --> 00:34:11,359
published right now by the

925
00:34:11,359 --> 00:34:14,879
by the don't probe cgi um just a just a

926
00:34:14,879 --> 00:34:16,239
bare list of

927
00:34:16,239 --> 00:34:19,599
of cider networks

928
00:34:19,599 --> 00:34:24,639
so um uh

929
00:34:25,040 --> 00:34:26,800
so oreck as i mentioned now mark has

930
00:34:26,800 --> 00:34:28,079
been looking for uh

931
00:34:28,079 --> 00:34:29,679
an organization to try and take over the

932
00:34:29,679 --> 00:34:31,199
do not probe list for a while

933
00:34:31,199 --> 00:34:32,719
um there have been a couple of informal

934
00:34:32,719 --> 00:34:34,480
discussions with with different

935
00:34:34,480 --> 00:34:36,960
uh community organizations who uh seem

936
00:34:36,960 --> 00:34:38,639
like they might be interested but

937
00:34:38,639 --> 00:34:40,960
nothing's ever really panned out so

938
00:34:40,960 --> 00:34:42,320
after the last one of these

939
00:34:42,320 --> 00:34:45,359
um sort of didn't go anywhere i spoke to

940
00:34:45,359 --> 00:34:47,679
keith about maybe taking this over

941
00:34:47,679 --> 00:34:50,879
myself as a sort of a community project

942
00:34:50,879 --> 00:34:52,159
to try and put together something that

943
00:34:52,159 --> 00:34:54,159
can scale a bit better

944
00:34:54,159 --> 00:34:57,520
that we can you know advertise among

945
00:34:57,520 --> 00:35:00,000
researchers both in the dns space and in

946
00:35:00,000 --> 00:35:00,640
other

947
00:35:00,640 --> 00:35:03,680
areas of networking um and

948
00:35:03,680 --> 00:35:07,040
uh and and try to you know um

949
00:35:07,040 --> 00:35:09,280
help people out by by pooling resources

950
00:35:09,280 --> 00:35:10,960
on this sort of thing

951
00:35:10,960 --> 00:35:14,079
um so uh the things i'd kind of like to

952
00:35:14,079 --> 00:35:15,040
see out of it are

953
00:35:15,040 --> 00:35:17,760
an open sign up um for logins to read

954
00:35:17,760 --> 00:35:18,400
the list

955
00:35:18,400 --> 00:35:20,960
um so doing you know doing some basic

956
00:35:20,960 --> 00:35:22,640
verification on email addresses and

957
00:35:22,640 --> 00:35:24,240
and approval and explicit terms of

958
00:35:24,240 --> 00:35:25,920
service when uh

959
00:35:25,920 --> 00:35:27,920
so that people can access the list but

960
00:35:27,920 --> 00:35:29,839
otherwise not really restricting

961
00:35:29,839 --> 00:35:34,720
who can see what's listed um

962
00:35:35,200 --> 00:35:36,800
i'd i think it would be helpful to

963
00:35:36,800 --> 00:35:38,160
publish the list in some sort of

964
00:35:38,160 --> 00:35:39,280
structured format

965
00:35:39,280 --> 00:35:43,040
json yaml xml something just so that so

966
00:35:43,040 --> 00:35:45,040
people can use sort of standard tools to

967
00:35:45,040 --> 00:35:46,000
read it in

968
00:35:46,000 --> 00:35:48,320
um that would allow us to also um

969
00:35:48,320 --> 00:35:49,680
include information

970
00:35:49,680 --> 00:35:52,240
about the listing um you know any

971
00:35:52,240 --> 00:35:53,599
comments associated with

972
00:35:53,599 --> 00:35:56,320
with the listing um if if the listing

973
00:35:56,320 --> 00:35:58,320
has a particular type whether it's

974
00:35:58,320 --> 00:36:01,280
you know from an abuse complaint or it's

975
00:36:01,280 --> 00:36:03,200
about whether it's in the bogons list or

976
00:36:03,200 --> 00:36:04,640
something like that

977
00:36:04,640 --> 00:36:06,400
so that researchers if they want to can

978
00:36:06,400 --> 00:36:08,640
sort of select which

979
00:36:08,640 --> 00:36:10,320
which addresses they want to they want

980
00:36:10,320 --> 00:36:12,079
to pay attention to

981
00:36:12,079 --> 00:36:15,520
um and i'd like to see a way for

982
00:36:15,520 --> 00:36:17,520
network operators to list their own

983
00:36:17,520 --> 00:36:18,720
networks

984
00:36:18,720 --> 00:36:20,480
um i'm thinking about doing something

985
00:36:20,480 --> 00:36:22,240
like having um

986
00:36:22,240 --> 00:36:23,760
somebody who's registered only somebody

987
00:36:23,760 --> 00:36:25,920
who's registered with the application

988
00:36:25,920 --> 00:36:26,800
able to

989
00:36:26,800 --> 00:36:30,640
do uh able to list networks um and using

990
00:36:30,640 --> 00:36:32,560
something like you know tokens emailed

991
00:36:32,560 --> 00:36:32,960
to

992
00:36:32,960 --> 00:36:35,760
whois contacts for uh for the network

993
00:36:35,760 --> 00:36:36,720
address

994
00:36:36,720 --> 00:36:39,119
um to in order to sort of validate the

995
00:36:39,119 --> 00:36:40,160
operator's

996
00:36:40,160 --> 00:36:44,560
um ability to speak for that network

997
00:36:44,560 --> 00:36:47,359
um and then and i'm also thinking about

998
00:36:47,359 --> 00:36:48,960
the possibility of expiring

999
00:36:48,960 --> 00:36:51,680
uh entries after a number of years

1000
00:36:51,680 --> 00:36:52,480
essentially

1001
00:36:52,480 --> 00:36:54,800
if they uh if they don't get refreshed

1002
00:36:54,800 --> 00:36:56,320
uh with some sort of active

1003
00:36:56,320 --> 00:36:58,800
uh notification to whoever registered it

1004
00:36:58,800 --> 00:36:59,920
in the first place to say

1005
00:36:59,920 --> 00:37:02,160
you know this this network you listed is

1006
00:37:02,160 --> 00:37:03,520
going coming up for

1007
00:37:03,520 --> 00:37:05,680
um expiry if you'd like to keep it in

1008
00:37:05,680 --> 00:37:07,040
the list you know please

1009
00:37:07,040 --> 00:37:10,079
follow this link that kind of thing

1010
00:37:10,079 --> 00:37:12,240
um there also may be some longer term

1011
00:37:12,240 --> 00:37:13,599
improvements um

1012
00:37:13,599 --> 00:37:15,440
open source api libraries and some

1013
00:37:15,440 --> 00:37:16,960
common research languages

1014
00:37:16,960 --> 00:37:18,800
um to make it a little bit easier for

1015
00:37:18,800 --> 00:37:20,400
researchers to access this so they don't

1016
00:37:20,400 --> 00:37:21,760
have to write their own

1017
00:37:21,760 --> 00:37:24,560
api client um maybe some

1018
00:37:24,560 --> 00:37:26,480
internationalization or localization in

1019
00:37:26,480 --> 00:37:26,880
the

1020
00:37:26,880 --> 00:37:29,200
in in the ability in the part of the

1021
00:37:29,200 --> 00:37:30,240
application where you

1022
00:37:30,240 --> 00:37:32,000
actually add listings or visit the

1023
00:37:32,000 --> 00:37:33,280
website

1024
00:37:33,280 --> 00:37:36,800
um and do some you know publicity

1025
00:37:36,800 --> 00:37:37,520
basically

1026
00:37:37,520 --> 00:37:40,079
among uh network researchers um so

1027
00:37:40,079 --> 00:37:41,839
they're aware this exists

1028
00:37:41,839 --> 00:37:44,400
um and uh and if they do get abuse

1029
00:37:44,400 --> 00:37:45,440
complaints they can

1030
00:37:45,440 --> 00:37:48,640
they can point people towards it um

1031
00:37:48,640 --> 00:37:50,320
and along with that some some best

1032
00:37:50,320 --> 00:37:52,720
practices documentation for researchers

1033
00:37:52,720 --> 00:37:55,760
um i recall um probably

1034
00:37:55,760 --> 00:37:59,280
about uh uh oh probably about the time

1035
00:37:59,280 --> 00:38:00,720
the the do not probe list was

1036
00:38:00,720 --> 00:38:03,599
was written was created actually um uh i

1037
00:38:03,599 --> 00:38:05,040
know our presentation from somebody

1038
00:38:05,040 --> 00:38:06,240
talking about

1039
00:38:06,240 --> 00:38:08,880
um best practices for doing active

1040
00:38:08,880 --> 00:38:10,000
program research

1041
00:38:10,000 --> 00:38:13,359
and you know how to get um

1042
00:38:13,359 --> 00:38:15,280
network operators to recognize that it

1043
00:38:15,280 --> 00:38:16,800
is research that's being done and who's

1044
00:38:16,800 --> 00:38:18,800
doing it and and how to report problems

1045
00:38:18,800 --> 00:38:19,760
and that sort of thing

1046
00:38:19,760 --> 00:38:22,079
so so um collecting that some of that

1047
00:38:22,079 --> 00:38:24,079
kind of information and including it

1048
00:38:24,079 --> 00:38:25,920
somewhere that uh the researchers can

1049
00:38:25,920 --> 00:38:27,839
make use of it would would also probably

1050
00:38:27,839 --> 00:38:28,480
be

1051
00:38:28,480 --> 00:38:31,440
helpful uh and and open to other

1052
00:38:31,440 --> 00:38:32,000
suggestions

1053
00:38:32,000 --> 00:38:35,359
from people about uh um

1054
00:38:35,359 --> 00:38:36,800
about things that could be included in

1055
00:38:36,800 --> 00:38:38,880
this um

1056
00:38:38,880 --> 00:38:42,160
so um do people have any questions about

1057
00:38:42,160 --> 00:38:42,560
this

1058
00:38:42,560 --> 00:38:45,920
uh suggestions um uh any of these

1059
00:38:45,920 --> 00:38:48,400
ideas terrible and and i shouldn't

1060
00:38:48,400 --> 00:38:49,680
shouldn't proceed with them

1061
00:38:49,680 --> 00:38:52,720
what do people think about it

1062
00:38:55,839 --> 00:38:57,680
thank you matt i think we got one

1063
00:38:57,680 --> 00:38:59,200
feedback from

1064
00:38:59,200 --> 00:39:01,839
paul hoffman

1065
00:39:02,800 --> 00:39:04,800
and i think it's a comment from paul

1066
00:39:04,800 --> 00:39:05,839
hoffman he's saying

1067
00:39:05,839 --> 00:39:09,119
uh comment on do not probe list maybe

1068
00:39:09,119 --> 00:39:10,960
this can be managed by research

1069
00:39:10,960 --> 00:39:11,680
institution

1070
00:39:11,680 --> 00:39:15,839
that is doing regular probing long term

1071
00:39:16,000 --> 00:39:20,079
um yeah i could be um

1072
00:39:20,079 --> 00:39:22,960
i i picked it up i uh basically because

1073
00:39:22,960 --> 00:39:24,720
orc had been unable to find somebody

1074
00:39:24,720 --> 00:39:28,079
else to do that um you know

1075
00:39:28,079 --> 00:39:32,000
if you know somebody sure

1076
00:39:34,079 --> 00:39:36,320
thanks thanks matt uh now we have a

1077
00:39:36,320 --> 00:39:37,760
question from joe abele

1078
00:39:37,760 --> 00:39:40,839
uh joe please go ahead and unmute

1079
00:39:40,839 --> 00:39:42,400
yourself

1080
00:39:42,400 --> 00:39:44,240
thanks yeah hey matt it's um i'm just

1081
00:39:44,240 --> 00:39:45,920
relaying something from matamos really

1082
00:39:45,920 --> 00:39:46,960
but

1083
00:39:46,960 --> 00:39:48,720
the public suffix list has a similar

1084
00:39:48,720 --> 00:39:50,160
sort of problem set

1085
00:39:50,160 --> 00:39:51,760
they need to authenticate people they

1086
00:39:51,760 --> 00:39:53,359
need to find out who's responsible for

1087
00:39:53,359 --> 00:39:54,160
things

1088
00:39:54,160 --> 00:39:55,440
they have they want to involve a

1089
00:39:55,440 --> 00:39:57,359
collection of volunteers they do it with

1090
00:39:57,359 --> 00:39:58,079
github

1091
00:39:58,079 --> 00:40:00,560
and um and pull requests and they have

1092
00:40:00,560 --> 00:40:02,800
some workflow wrapped around it so

1093
00:40:02,800 --> 00:40:04,480
you know unless you particularly want to

1094
00:40:04,480 --> 00:40:05,920
do this all on your own

1095
00:40:05,920 --> 00:40:07,599
i would recommend looking at that and

1096
00:40:07,599 --> 00:40:09,119
and seeing how they've structured it

1097
00:40:09,119 --> 00:40:10,800
because it might be quite applicable

1098
00:40:10,800 --> 00:40:14,720
yeah okay thanks joe

1099
00:40:14,720 --> 00:40:18,400
um we have uh

1100
00:40:18,400 --> 00:40:21,440
paul uh please and mute yourself hi this

1101
00:40:21,440 --> 00:40:23,200
is paul hoffman from icann um

1102
00:40:23,200 --> 00:40:25,200
this is not related to what i had put in

1103
00:40:25,200 --> 00:40:27,680
the in the chat just what joe just said

1104
00:40:27,680 --> 00:40:31,280
um joe i love you dearly and no

1105
00:40:31,280 --> 00:40:33,520
um you obviously haven't been following

1106
00:40:33,520 --> 00:40:34,640
what's been going on

1107
00:40:34,640 --> 00:40:36,480
with the public's office list over the

1108
00:40:36,480 --> 00:40:37,680
last few years

1109
00:40:37,680 --> 00:40:39,839
it's a complete mess and and i don't

1110
00:40:39,839 --> 00:40:41,599
blame the psl folks

1111
00:40:41,599 --> 00:40:44,720
it's a volunteer organization um

1112
00:40:44,720 --> 00:40:46,640
it has all the problems of the tragedy

1113
00:40:46,640 --> 00:40:48,880
of the commons and such like that

1114
00:40:48,880 --> 00:40:52,240
um in fact just today ryan sleevy from

1115
00:40:52,240 --> 00:40:55,119
google who's one of the major volunteers

1116
00:40:55,119 --> 00:40:56,720
and quasi leaders of it

1117
00:40:56,720 --> 00:40:58,319
posted something on twitter that

1118
00:40:58,319 --> 00:41:00,560
basically says man it's really too bad

1119
00:41:00,560 --> 00:41:02,319
we didn't keep this to ourselves

1120
00:41:02,319 --> 00:41:05,520
you know people keep misusing this so i

1121
00:41:05,520 --> 00:41:07,119
don't think that that is

1122
00:41:07,119 --> 00:41:10,319
even a vaguely sustainable model um uh

1123
00:41:10,319 --> 00:41:11,280
for those of you who are interested in

1124
00:41:11,280 --> 00:41:13,839
more about the public suffix list uh

1125
00:41:13,839 --> 00:41:16,319
icann published a paper on it last year

1126
00:41:16,319 --> 00:41:17,200
um

1127
00:41:17,200 --> 00:41:19,440
come and ask me about it i didn't write

1128
00:41:19,440 --> 00:41:20,560
it we actually had

1129
00:41:20,560 --> 00:41:23,599
a public selfish list volunteer um doing

1130
00:41:23,599 --> 00:41:25,200
the writing of it but

1131
00:41:25,200 --> 00:41:27,119
not a good model for something like this

1132
00:41:27,119 --> 00:41:28,800
thanks

1133
00:41:28,800 --> 00:41:32,079
thanks paul we have jeff

1134
00:41:32,079 --> 00:41:35,920
houston jeff please unmute yourself

1135
00:41:35,920 --> 00:41:38,560
um sure thanks for that matt it strikes

1136
00:41:38,560 --> 00:41:39,440
me as a little bit

1137
00:41:39,440 --> 00:41:42,800
weird that you're doing such a

1138
00:41:42,800 --> 00:41:46,480
i don't know hand driven validation

1139
00:41:46,480 --> 00:41:49,359
why wouldn't you just use rpki signed

1140
00:41:49,359 --> 00:41:51,839
requests to go onto the block list

1141
00:41:51,839 --> 00:41:53,920
you can automatically validate it they

1142
00:41:53,920 --> 00:41:56,000
have a time period of validity

1143
00:41:56,000 --> 00:41:57,839
anyone can remove themselves from the

1144
00:41:57,839 --> 00:42:00,400
list by simply invalidating

1145
00:42:00,400 --> 00:42:02,560
that particular you know attestation

1146
00:42:02,560 --> 00:42:04,400
that they lodged with you

1147
00:42:04,400 --> 00:42:06,240
and so it's almost like a variant of a

1148
00:42:06,240 --> 00:42:08,560
routing origination attestation

1149
00:42:08,560 --> 00:42:11,839
uh except devise your own format

1150
00:42:11,839 --> 00:42:15,280
even json and sign it works going on in

1151
00:42:15,280 --> 00:42:18,000
somewhere in the ietf to do arbitrary

1152
00:42:18,000 --> 00:42:19,760
signatures of any data structure and

1153
00:42:19,760 --> 00:42:22,079
this seems like a very appropriate form

1154
00:42:22,079 --> 00:42:22,480
of

1155
00:42:22,480 --> 00:42:25,359
using this you know only the owner can

1156
00:42:25,359 --> 00:42:25,920
sign it

1157
00:42:25,920 --> 00:42:29,599
why don't you go there um yeah okay i

1158
00:42:29,599 --> 00:42:33,599
so i i i thought about um rpki

1159
00:42:33,599 --> 00:42:37,040
at one point um

1160
00:42:37,200 --> 00:42:38,960
yeah i guess it hadn't occurred to me

1161
00:42:38,960 --> 00:42:40,400
that you could um

1162
00:42:40,400 --> 00:42:43,599
use the same certificates um to sign

1163
00:42:43,599 --> 00:42:46,640
things that sort of aren't part of the

1164
00:42:46,640 --> 00:42:49,760
um the original sort of origin uh

1165
00:42:49,760 --> 00:42:51,520
validation design

1166
00:42:51,520 --> 00:42:54,319
um but yeah i don't but you're right i

1167
00:42:54,319 --> 00:42:55,520
don't see any reason why you

1168
00:42:55,520 --> 00:42:58,960
couldn't do that um i guess

1169
00:42:58,960 --> 00:43:01,920
um i guess off the top of my head it it

1170
00:43:01,920 --> 00:43:03,119
seems to me that

1171
00:43:03,119 --> 00:43:06,079
the uptake of that is still a little low

1172
00:43:06,079 --> 00:43:07,200
although i might

1173
00:43:07,200 --> 00:43:10,640
um i might be behind in my awareness of

1174
00:43:10,640 --> 00:43:11,440
that

1175
00:43:11,440 --> 00:43:14,720
um uh and it might

1176
00:43:14,720 --> 00:43:16,160
i mean certainly on my end it would

1177
00:43:16,160 --> 00:43:17,599
require a bit more work in terms of

1178
00:43:17,599 --> 00:43:18,319
dealing with the

1179
00:43:18,319 --> 00:43:20,640
the crypto and stuff like that but but

1180
00:43:20,640 --> 00:43:21,680
it's not a bad idea

1181
00:43:21,680 --> 00:43:23,599
um that's definitely something i should

1182
00:43:23,599 --> 00:43:25,440
look at thank you

1183
00:43:25,440 --> 00:43:29,040
thanks thanks jeff uh i think we are

1184
00:43:29,040 --> 00:43:30,319
just about time

1185
00:43:30,319 --> 00:43:33,839
uh i don't see any more questions uh

1186
00:43:33,839 --> 00:43:36,960
so uh thank you matt uh for for that

1187
00:43:36,960 --> 00:43:38,000
presentation and

1188
00:43:38,000 --> 00:43:40,800
answering the questions um now we will

1189
00:43:40,800 --> 00:43:42,960
take a 15 minute coffee break

1190
00:43:42,960 --> 00:43:46,720
and we start at 2 o'clock utc shop

1191
00:43:46,720 --> 00:43:50,880
uh so just it's a 15 minute coffee break

1192
00:43:50,880 --> 00:43:52,400
i would like to remind the participants

1193
00:43:52,400 --> 00:43:54,319
that the breakout rooms for face to face

1194
00:43:54,319 --> 00:43:55,520
chat

1195
00:43:55,520 --> 00:43:58,720
will be able will be open will be

1196
00:43:58,720 --> 00:44:01,359
running during the break in special chat

1197
00:44:01,359 --> 00:44:03,680
and also a reminder to please do not

1198
00:44:03,680 --> 00:44:05,680
share the special chat link with anyone

1199
00:44:05,680 --> 00:44:07,440
else

1200
00:44:07,440 --> 00:44:09,599
at this time i would also like to thank

1201
00:44:09,599 --> 00:44:11,440
the workshop sponsors

1202
00:44:11,440 --> 00:44:14,480
farsight and verisign um

1203
00:44:14,480 --> 00:44:17,760
so we can start the break now

1204
00:44:18,319 --> 00:44:22,240
welcome back uh everybody from the break

1205
00:44:22,240 --> 00:44:25,280
i hope you had a good coffee break

1206
00:44:25,280 --> 00:44:28,000
now i would like to welcome audrey

1207
00:44:28,000 --> 00:44:29,040
randall

1208
00:44:29,040 --> 00:44:31,760
uh to talk about truffle hunter a tool

1209
00:44:31,760 --> 00:44:32,160
for

1210
00:44:32,160 --> 00:44:35,280
cash snooping rare domains

1211
00:44:35,280 --> 00:44:39,599
in large public resolvers onto your day

1212
00:44:39,599 --> 00:44:41,839
so my name is audrey i am a third year

1213
00:44:41,839 --> 00:44:43,520
phd student at uc

1214
00:44:43,520 --> 00:44:46,400
san diego and i'm talking to you today

1215
00:44:46,400 --> 00:44:47,839
about

1216
00:44:47,839 --> 00:44:49,359
our paper that was published at the most

1217
00:44:49,359 --> 00:44:50,720
recent internet measurement conference

1218
00:44:50,720 --> 00:44:52,079
which was called truffle hunter

1219
00:44:52,079 --> 00:44:53,920
cash snooping rare domains at large

1220
00:44:53,920 --> 00:44:57,200
public dns resolvers

1221
00:44:58,480 --> 00:45:01,200
so our group at ucsd mostly measures

1222
00:45:01,200 --> 00:45:02,960
harmful internet behavior of all sorts

1223
00:45:02,960 --> 00:45:04,480
of different types in the past we've

1224
00:45:04,480 --> 00:45:05,119
done

1225
00:45:05,119 --> 00:45:07,520
botnets and all sorts of malware and

1226
00:45:07,520 --> 00:45:09,040
spam emails

1227
00:45:09,040 --> 00:45:10,960
and the thing that most of those types

1228
00:45:10,960 --> 00:45:12,240
of harm have in common

1229
00:45:12,240 --> 00:45:15,440
is that they are common i think i recall

1230
00:45:15,440 --> 00:45:17,680
that back in 2011 spam was something

1231
00:45:17,680 --> 00:45:18,800
like 94

1232
00:45:18,800 --> 00:45:20,560
of all emails on the internet so it was

1233
00:45:20,560 --> 00:45:22,160
easy to find

1234
00:45:22,160 --> 00:45:23,920
and the thing about that is you know

1235
00:45:23,920 --> 00:45:25,440
things that are easy to find and easy to

1236
00:45:25,440 --> 00:45:27,359
measure they're going to be well studied

1237
00:45:27,359 --> 00:45:29,040
but there's all sorts of other types of

1238
00:45:29,040 --> 00:45:30,480
harm that are much more difficult to

1239
00:45:30,480 --> 00:45:32,079
study and are therefore

1240
00:45:32,079 --> 00:45:34,480
not studied as often including things

1241
00:45:34,480 --> 00:45:36,560
like hack for hire services and stalker

1242
00:45:36,560 --> 00:45:39,200
wear and some types of typo squatting

1243
00:45:39,200 --> 00:45:41,359
so that's what we're really interested

1244
00:45:41,359 --> 00:45:42,319
in doing

1245
00:45:42,319 --> 00:45:44,160
and in particular i wanted to have a

1246
00:45:44,160 --> 00:45:46,000
look at stalkerware which is kind of an

1247
00:45:46,000 --> 00:45:47,760
emerging threat that we're we're

1248
00:45:47,760 --> 00:45:49,760
starting to see a lot more of which was

1249
00:45:49,760 --> 00:45:53,200
particularly difficult to study

1250
00:45:53,200 --> 00:45:55,359
so we started off with the observation

1251
00:45:55,359 --> 00:45:57,040
that you know all of these types of harm

1252
00:45:57,040 --> 00:45:58,720
have something in common which is that

1253
00:45:58,720 --> 00:46:00,640
they have to make dns requests to the

1254
00:46:00,640 --> 00:46:03,119
servers they require to function

1255
00:46:03,119 --> 00:46:04,720
so there is this measurement technique

1256
00:46:04,720 --> 00:46:06,400
we could use to try and figure out how

1257
00:46:06,400 --> 00:46:08,240
prevalent they are it's called dns cache

1258
00:46:08,240 --> 00:46:09,680
snipping i'm sure everybody here is

1259
00:46:09,680 --> 00:46:11,040
familiar with it

1260
00:46:11,040 --> 00:46:12,839
cache snipping of course has a couple of

1261
00:46:12,839 --> 00:46:14,319
disadvantages

1262
00:46:14,319 --> 00:46:16,160
the first is privacy which i'll say more

1263
00:46:16,160 --> 00:46:18,079
about in a second but the second

1264
00:46:18,079 --> 00:46:20,160
is that as a measurement technique it's

1265
00:46:20,160 --> 00:46:21,280
always going to provide

1266
00:46:21,280 --> 00:46:23,119
lower bound estimates of something's

1267
00:46:23,119 --> 00:46:24,480
prevalence

1268
00:46:24,480 --> 00:46:26,400
but the thing is if you're looking at

1269
00:46:26,400 --> 00:46:27,599
rare phenomena

1270
00:46:27,599 --> 00:46:29,359
then you're not looking at the kind of

1271
00:46:29,359 --> 00:46:30,480
things where you're going to see

1272
00:46:30,480 --> 00:46:32,560
multiple users hitting a cache one after

1273
00:46:32,560 --> 00:46:33,359
the other

1274
00:46:33,359 --> 00:46:34,880
if you're only going to see one user

1275
00:46:34,880 --> 00:46:36,640
hitting a cache at a time then cash

1276
00:46:36,640 --> 00:46:38,319
snooping actually gives you a very good

1277
00:46:38,319 --> 00:46:42,480
estimate of how much of it is out there

1278
00:46:42,480 --> 00:46:44,480
and then in terms of privacy well we

1279
00:46:44,480 --> 00:46:45,920
thought we had a solution for that

1280
00:46:45,920 --> 00:46:48,240
too which is that most of the time in

1281
00:46:48,240 --> 00:46:49,920
the past people had been doing cash

1282
00:46:49,920 --> 00:46:50,960
snooping by just

1283
00:46:50,960 --> 00:46:53,520
scanning the entire internet and making

1284
00:46:53,520 --> 00:46:55,200
a dns request to every machine that

1285
00:46:55,200 --> 00:46:56,640
would answer one

1286
00:46:56,640 --> 00:46:58,560
the problem was most of the machines

1287
00:46:58,560 --> 00:46:59,839
that were answering were actually

1288
00:46:59,839 --> 00:47:02,079
people's misconfigured home routers

1289
00:47:02,079 --> 00:47:03,760
so of course that's a privacy threat

1290
00:47:03,760 --> 00:47:05,920
because they have so few users behind

1291
00:47:05,920 --> 00:47:06,480
them

1292
00:47:06,480 --> 00:47:08,319
if you can tell that a domain is in the

1293
00:47:08,319 --> 00:47:10,240
cache of one of those home routers

1294
00:47:10,240 --> 00:47:11,920
it's not too much of a stretch to figure

1295
00:47:11,920 --> 00:47:14,400
out which user put it there

1296
00:47:14,400 --> 00:47:16,319
public resolvers on the other hand like

1297
00:47:16,319 --> 00:47:17,920
the four that we studied which were

1298
00:47:17,920 --> 00:47:20,480
google dns quad 9 open dns and

1299
00:47:20,480 --> 00:47:21,520
cloudflare

1300
00:47:21,520 --> 00:47:23,280
they let us use cash snooping as a

1301
00:47:23,280 --> 00:47:26,079
privacy proverb well privacy preserving

1302
00:47:26,079 --> 00:47:27,280
measurement technique

1303
00:47:27,280 --> 00:47:29,040
rather than an attack because they've

1304
00:47:29,040 --> 00:47:32,880
just got too many users to de-anonymize

1305
00:47:32,880 --> 00:47:35,200
but unfortunately public resolvers are

1306
00:47:35,200 --> 00:47:36,800
also going to be a lot more challenging

1307
00:47:36,800 --> 00:47:39,280
to snoop because cash snooping relies on

1308
00:47:39,280 --> 00:47:41,520
knowing how many caches have been filled

1309
00:47:41,520 --> 00:47:42,960
and public resolvers have very

1310
00:47:42,960 --> 00:47:45,040
complicated caching strategies

1311
00:47:45,040 --> 00:47:47,040
they also have some unexpected behavior

1312
00:47:47,040 --> 00:47:48,640
and occasional bugs because when you're

1313
00:47:48,640 --> 00:47:50,800
running something that large it's almost

1314
00:47:50,800 --> 00:47:52,000
impossible to keep it working

1315
00:47:52,000 --> 00:47:55,040
perfectly all the time

1316
00:47:55,200 --> 00:47:57,680
so from an outsider's perspective the

1317
00:47:57,680 --> 00:47:59,680
challenge that we had was this

1318
00:47:59,680 --> 00:48:01,520
if a user is going to make a request to

1319
00:48:01,520 --> 00:48:02,800
a public resolver

1320
00:48:02,800 --> 00:48:04,559
first you have to figure out which pop

1321
00:48:04,559 --> 00:48:06,319
they're hitting because i p anycast is

1322
00:48:06,319 --> 00:48:07,440
going to take them to

1323
00:48:07,440 --> 00:48:09,280
possibly the closest one and possibly

1324
00:48:09,280 --> 00:48:11,040
not then

1325
00:48:11,040 --> 00:48:12,880
once you've gotten to that pop you're

1326
00:48:12,880 --> 00:48:14,400
going to have to deal with a whole bunch

1327
00:48:14,400 --> 00:48:16,480
of different front-end caches and if a

1328
00:48:16,480 --> 00:48:18,480
request misses in the front-end cache

1329
00:48:18,480 --> 00:48:20,000
it's going to be sent to one of a number

1330
00:48:20,000 --> 00:48:21,359
of backend resolvers

1331
00:48:21,359 --> 00:48:23,119
and each of those backend resolvers also

1332
00:48:23,119 --> 00:48:24,960
have their own caches

1333
00:48:24,960 --> 00:48:28,079
so each one of these caches represented

1334
00:48:28,079 --> 00:48:30,000
an opportunity for us to observe a new

1335
00:48:30,000 --> 00:48:30,800
user

1336
00:48:30,800 --> 00:48:32,800
but in order to count how many caches

1337
00:48:32,800 --> 00:48:34,880
were being filled we had to know which

1338
00:48:34,880 --> 00:48:38,160
ones our queries were hitting

1339
00:48:38,240 --> 00:48:40,079
so for the remainder of this talk i'm

1340
00:48:40,079 --> 00:48:41,440
first going to describe

1341
00:48:41,440 --> 00:48:43,440
how we reverse engineered the public

1342
00:48:43,440 --> 00:48:45,359
resolver's caching strategies because we

1343
00:48:45,359 --> 00:48:46,640
needed to know that before we could

1344
00:48:46,640 --> 00:48:48,240
measure anything on them

1345
00:48:48,240 --> 00:48:49,839
then i'm going to talk about the tool we

1346
00:48:49,839 --> 00:48:51,440
designed to do the cash snooping which

1347
00:48:51,440 --> 00:48:53,280
we've nicknamed truffle hunter

1348
00:48:53,280 --> 00:48:55,119
and finally i'll describe the case

1349
00:48:55,119 --> 00:48:56,960
studies so the measurements that we took

1350
00:48:56,960 --> 00:48:59,839
of stalkerware and typo squatting and a

1351
00:48:59,839 --> 00:49:01,359
couple of other different

1352
00:49:01,359 --> 00:49:03,760
interesting internet phenomena i'll

1353
00:49:03,760 --> 00:49:05,520
start out with how we reverse engineered

1354
00:49:05,520 --> 00:49:08,480
caching strategies

1355
00:49:08,640 --> 00:49:10,960
so we ran this experiment where from a

1356
00:49:10,960 --> 00:49:12,880
single location so presumably hitting a

1357
00:49:12,880 --> 00:49:13,839
single pop

1358
00:49:13,839 --> 00:49:15,520
we repeatedly queried each of the

1359
00:49:15,520 --> 00:49:17,440
resolvers in our list to try and fill as

1360
00:49:17,440 --> 00:49:19,839
many caches as possible

1361
00:49:19,839 --> 00:49:21,520
then we wanted to observe how the

1362
00:49:21,520 --> 00:49:23,839
queries were cached so we plotted their

1363
00:49:23,839 --> 00:49:26,720
ttls against their time stamps

1364
00:49:26,720 --> 00:49:29,280
the idea is we have this concept called

1365
00:49:29,280 --> 00:49:30,240
a ttl

1366
00:49:30,240 --> 00:49:32,319
line which is our model of how a ttl

1367
00:49:32,319 --> 00:49:33,839
decreases in a cache

1368
00:49:33,839 --> 00:49:35,599
you ought to be able to draw this line

1369
00:49:35,599 --> 00:49:37,359
with a slope of negative one because it

1370
00:49:37,359 --> 00:49:39,599
should decrease one second per second

1371
00:49:39,599 --> 00:49:41,920
through every measurement you take and

1372
00:49:41,920 --> 00:49:43,599
if you do that and you get a whole bunch

1373
00:49:43,599 --> 00:49:45,280
more measurements that show up on that

1374
00:49:45,280 --> 00:49:45,839
line

1375
00:49:45,839 --> 00:49:47,359
you can tell they came from the same

1376
00:49:47,359 --> 00:49:49,680
cache then all you have to do is count

1377
00:49:49,680 --> 00:49:51,280
the ttl lines and you'll know how many

1378
00:49:51,280 --> 00:49:54,160
caches were filled

1379
00:49:54,960 --> 00:49:56,640
when we did this for each of our four

1380
00:49:56,640 --> 00:49:58,000
public resolvers we

1381
00:49:58,000 --> 00:49:59,520
found out that they have differing

1382
00:49:59,520 --> 00:50:01,359
numbers of caches that are visible to

1383
00:50:01,359 --> 00:50:03,040
users like us

1384
00:50:03,040 --> 00:50:05,440
for opendns and quad9 we found out that

1385
00:50:05,440 --> 00:50:06,559
they're running a whole bunch of

1386
00:50:06,559 --> 00:50:07,040
different

1387
00:50:07,040 --> 00:50:09,119
independent front-end caches which back

1388
00:50:09,119 --> 00:50:10,800
onto a bunch of independent back-end

1389
00:50:10,800 --> 00:50:11,680
caches

1390
00:50:11,680 --> 00:50:13,599
and that was kind of the ideal situation

1391
00:50:13,599 --> 00:50:15,440
for us because it meant that at every

1392
00:50:15,440 --> 00:50:16,960
pop we could measure a whole bunch of

1393
00:50:16,960 --> 00:50:18,400
caches which meant we could measure a

1394
00:50:18,400 --> 00:50:20,480
whole bunch of users

1395
00:50:20,480 --> 00:50:22,400
cloudflare on the other hand we found

1396
00:50:22,400 --> 00:50:24,480
out has a shared front-end cache because

1397
00:50:24,480 --> 00:50:26,319
we only ever saw a single

1398
00:50:26,319 --> 00:50:29,359
ttl line coming from each of those pops

1399
00:50:29,359 --> 00:50:31,440
so that's probably very efficient from a

1400
00:50:31,440 --> 00:50:33,119
caching perspective but from the

1401
00:50:33,119 --> 00:50:34,000
perspective of us

1402
00:50:34,000 --> 00:50:35,680
trying to run a measurement study it

1403
00:50:35,680 --> 00:50:37,599
wasn't as useful because it meant that

1404
00:50:37,599 --> 00:50:38,079
at

1405
00:50:38,079 --> 00:50:40,000
each cloudflare pop we could only

1406
00:50:40,000 --> 00:50:42,800
measure one user at a time

1407
00:50:42,800 --> 00:50:44,559
and then there was google which was

1408
00:50:44,559 --> 00:50:46,240
doing something interesting

1409
00:50:46,240 --> 00:50:48,240
uh we would make a single request to a

1410
00:50:48,240 --> 00:50:50,160
google resolver and find out that it had

1411
00:50:50,160 --> 00:50:51,359
been cached in a whole bunch of

1412
00:50:51,359 --> 00:50:52,640
different places

1413
00:50:52,640 --> 00:50:54,559
but we didn't see multiple requests

1414
00:50:54,559 --> 00:50:56,480
coming into that domain's authoritative

1415
00:50:56,480 --> 00:50:57,760
name server

1416
00:50:57,760 --> 00:51:00,640
so we labeled this the dynamic front-end

1417
00:51:00,640 --> 00:51:02,480
strategy and we tried to dig into it a

1418
00:51:02,480 --> 00:51:03,599
little bit more because we didn't

1419
00:51:03,599 --> 00:51:05,200
understand what was going on there were

1420
00:51:05,200 --> 00:51:08,880
so many visible caches here

1421
00:51:08,880 --> 00:51:11,040
what we found is that first of all

1422
00:51:11,040 --> 00:51:12,960
previous work had noted this phenomenon

1423
00:51:12,960 --> 00:51:14,079
as well

1424
00:51:14,079 --> 00:51:15,440
as a matter of fact there was a

1425
00:51:15,440 --> 00:51:17,280
particularly poetic paper which called

1426
00:51:17,280 --> 00:51:18,559
these interesting caches

1427
00:51:18,559 --> 00:51:22,000
ghost caches and what we found when we

1428
00:51:22,000 --> 00:51:24,480
tried to investigate was that we think

1429
00:51:24,480 --> 00:51:26,640
that the ttls were getting reset

1430
00:51:26,640 --> 00:51:28,880
in these front-end caches when requests

1431
00:51:28,880 --> 00:51:30,400
were being copied from back end to

1432
00:51:30,400 --> 00:51:31,119
front-end

1433
00:51:31,119 --> 00:51:33,280
so if a request came in and missed in a

1434
00:51:33,280 --> 00:51:34,559
front-end cache

1435
00:51:34,559 --> 00:51:36,400
that front-end cash would then load the

1436
00:51:36,400 --> 00:51:38,800
maximum ttl rather than the ttl that the

1437
00:51:38,800 --> 00:51:40,640
back-end cash had

1438
00:51:40,640 --> 00:51:42,400
so that was great for us because it let

1439
00:51:42,400 --> 00:51:44,480
us measure about 10 times as many users

1440
00:51:44,480 --> 00:51:46,720
at every google pop as we could at

1441
00:51:46,720 --> 00:51:50,800
any any other pop but after we published

1442
00:51:50,800 --> 00:51:52,319
this paper we actually found out that

1443
00:51:52,319 --> 00:51:53,920
this behavior was a bug

1444
00:51:53,920 --> 00:51:55,839
google got into contact with us after

1445
00:51:55,839 --> 00:51:58,000
the last ietf meeting to say oh

1446
00:51:58,000 --> 00:52:00,160
yes we we noticed that was happening

1447
00:52:00,160 --> 00:52:01,839
that was not intentional and we rolled

1448
00:52:01,839 --> 00:52:03,440
out a fix in january

1449
00:52:03,440 --> 00:52:05,119
so unfortunately that behavior is not

1450
00:52:05,119 --> 00:52:06,559
there anymore

1451
00:52:06,559 --> 00:52:08,319
but it was great for the few months so

1452
00:52:08,319 --> 00:52:11,680
you're running this measurement study

1453
00:52:12,960 --> 00:52:16,079
so having figured out how to count

1454
00:52:16,079 --> 00:52:17,760
caches at public resolvers and how to

1455
00:52:17,760 --> 00:52:19,520
distinguish between those caches so that

1456
00:52:19,520 --> 00:52:20,640
we could measure them

1457
00:52:20,640 --> 00:52:22,400
we next set up our tool which is called

1458
00:52:22,400 --> 00:52:24,480
truffle hunter

1459
00:52:24,480 --> 00:52:27,200
so all that truffle hunter is is a

1460
00:52:27,200 --> 00:52:29,359
distributed program that runs on cada's

1461
00:52:29,359 --> 00:52:30,160
archipelago

1462
00:52:30,160 --> 00:52:33,359
project for anyone unfamiliar with

1463
00:52:33,359 --> 00:52:35,040
archipelago it's a bunch of measurement

1464
00:52:35,040 --> 00:52:37,200
nodes i think there's 46 spread across

1465
00:52:37,200 --> 00:52:39,119
the united states at the moment

1466
00:52:39,119 --> 00:52:41,040
and what we had them do was just send

1467
00:52:41,040 --> 00:52:43,280
dns queries constantly to every pop they

1468
00:52:43,280 --> 00:52:45,440
could find across the united states

1469
00:52:45,440 --> 00:52:47,280
once they got the responses back they

1470
00:52:47,280 --> 00:52:48,800
would interpret them according to our

1471
00:52:48,800 --> 00:52:50,640
models in order to estimate the counts

1472
00:52:50,640 --> 00:52:53,200
of users

1473
00:52:53,280 --> 00:52:55,359
and for the purposes of this paper we

1474
00:52:55,359 --> 00:52:57,119
used three months of data between march

1475
00:52:57,119 --> 00:52:57,680
and may

1476
00:52:57,680 --> 00:53:01,280
of 2020.

1477
00:53:01,280 --> 00:53:03,440
so the first challenge we ran into was

1478
00:53:03,440 --> 00:53:04,400
how to detect

1479
00:53:04,400 --> 00:53:06,800
which pop a query was using and to do

1480
00:53:06,800 --> 00:53:08,160
this there are these

1481
00:53:08,160 --> 00:53:10,400
great uh what we call location queries

1482
00:53:10,400 --> 00:53:12,240
which are provided as debugging tools by

1483
00:53:12,240 --> 00:53:14,640
the four public resolvers for quad9 and

1484
00:53:14,640 --> 00:53:15,920
cloudflare these are

1485
00:53:15,920 --> 00:53:18,800
chaos id.server queries and google and

1486
00:53:18,800 --> 00:53:20,240
opendns make

1487
00:53:20,240 --> 00:53:22,400
two different txt records available to

1488
00:53:22,400 --> 00:53:24,079
people who want to debug stuff

1489
00:53:24,079 --> 00:53:26,000
so we ran these once a minute and we

1490
00:53:26,000 --> 00:53:27,520
found out to our

1491
00:53:27,520 --> 00:53:29,440
to our surprise that the location churn

1492
00:53:29,440 --> 00:53:30,880
of our measurement nodes was actually

1493
00:53:30,880 --> 00:53:32,160
usually pretty low

1494
00:53:32,160 --> 00:53:34,240
we would see these long stable periods

1495
00:53:34,240 --> 00:53:36,079
where for hours or days or sometimes

1496
00:53:36,079 --> 00:53:37,440
even weeks

1497
00:53:37,440 --> 00:53:38,880
measurement nodes would keep going to

1498
00:53:38,880 --> 00:53:41,040
the same pop over and over again

1499
00:53:41,040 --> 00:53:42,640
but then they would occasionally go into

1500
00:53:42,640 --> 00:53:44,559
these short unstable periods where they

1501
00:53:44,559 --> 00:53:46,079
would fluctuate between up to three

1502
00:53:46,079 --> 00:53:48,160
different pops for up to half an hour at

1503
00:53:48,160 --> 00:53:50,480
a time

1504
00:53:50,960 --> 00:53:53,040
the next challenge that we had was well

1505
00:53:53,040 --> 00:53:54,000
we had these

1506
00:53:54,000 --> 00:53:55,680
models that we had reverse engineered of

1507
00:53:55,680 --> 00:53:57,680
how the caches worked but we didn't know

1508
00:53:57,680 --> 00:53:59,040
if they were accurate

1509
00:53:59,040 --> 00:54:02,079
so we had to run an experiment to to

1510
00:54:02,079 --> 00:54:03,359
figure out ground truth

1511
00:54:03,359 --> 00:54:05,599
so to speak so we placed a domain that

1512
00:54:05,599 --> 00:54:07,359
we control into the caches of all the

1513
00:54:07,359 --> 00:54:09,359
public resolvers we could find by having

1514
00:54:09,359 --> 00:54:10,000
ripe atlas

1515
00:54:10,000 --> 00:54:12,160
nodes make those requests those ripe

1516
00:54:12,160 --> 00:54:13,599
atlas nodes were supposed to take the

1517
00:54:13,599 --> 00:54:15,359
place of real users

1518
00:54:15,359 --> 00:54:16,880
then we had truffle hunter try and

1519
00:54:16,880 --> 00:54:19,520
observe that domain and we counted every

1520
00:54:19,520 --> 00:54:21,520
request that came into our authoritative

1521
00:54:21,520 --> 00:54:22,319
name server

1522
00:54:22,319 --> 00:54:26,079
as representing a true filled cache

1523
00:54:26,079 --> 00:54:28,400
so on resolvers with reasonably

1524
00:54:28,400 --> 00:54:29,680
straightforward architecture like

1525
00:54:29,680 --> 00:54:31,760
opendns our error was pretty good we are

1526
00:54:31,760 --> 00:54:33,760
pretty close to the ground truth

1527
00:54:33,760 --> 00:54:35,680
on cloudflare we are reasonably good

1528
00:54:35,680 --> 00:54:37,599
except for one particular pop where we

1529
00:54:37,599 --> 00:54:39,119
think there was some routing going on

1530
00:54:39,119 --> 00:54:41,440
that we hadn't accounted for

1531
00:54:41,440 --> 00:54:43,440
on google it turned out to be hard to

1532
00:54:43,440 --> 00:54:44,799
disentangle the

1533
00:54:44,799 --> 00:54:46,640
the effects of this bug that i mentioned

1534
00:54:46,640 --> 00:54:48,240
from the um

1535
00:54:48,240 --> 00:54:49,599
the true number of caches that were

1536
00:54:49,599 --> 00:54:51,920
getting filled but we were able to tweak

1537
00:54:51,920 --> 00:54:53,520
our algorithm so that we were always

1538
00:54:53,520 --> 00:54:54,799
underestimating rather than

1539
00:54:54,799 --> 00:54:56,480
overestimating which is good because

1540
00:54:56,480 --> 00:54:58,079
recall that our goal in this work is to

1541
00:54:58,079 --> 00:55:00,400
provide an underestimate if possible

1542
00:55:00,400 --> 00:55:03,520
of certain types of rare behavior

1543
00:55:03,520 --> 00:55:04,960
and then on quad 9 we found out

1544
00:55:04,960 --> 00:55:06,880
something interesting which is

1545
00:55:06,880 --> 00:55:09,200
half of the back end resolvers at quad 9

1546
00:55:09,200 --> 00:55:10,799
are using unbound

1547
00:55:10,799 --> 00:55:12,559
and unbound does not respond to the

1548
00:55:12,559 --> 00:55:14,000
types of queries we were sending which

1549
00:55:14,000 --> 00:55:16,319
had recursion desired equals zero

1550
00:55:16,319 --> 00:55:19,599
so that means if if a request comes into

1551
00:55:19,599 --> 00:55:21,760
quad 9 and gets cached by unbound

1552
00:55:21,760 --> 00:55:22,400
software

1553
00:55:22,400 --> 00:55:24,240
it becomes invisible to truffle hunter

1554
00:55:24,240 --> 00:55:26,319
so we can only see about 50 percent of

1555
00:55:26,319 --> 00:55:29,520
the caches at quad9

1556
00:55:30,799 --> 00:55:33,200
and then of course the the limitation of

1557
00:55:33,200 --> 00:55:34,640
any sort of cash snooping you're ever

1558
00:55:34,640 --> 00:55:35,839
going to use

1559
00:55:35,839 --> 00:55:38,319
is that you can only observe one user

1560
00:55:38,319 --> 00:55:39,200
per cash

1561
00:55:39,200 --> 00:55:41,920
per maximum ttl so of course we're

1562
00:55:41,920 --> 00:55:43,680
limited by the number of cashes we can

1563
00:55:43,680 --> 00:55:45,680
see at any one time

1564
00:55:45,680 --> 00:55:48,160
at google particularly for the more

1565
00:55:48,160 --> 00:55:49,359
popular pups

1566
00:55:49,359 --> 00:55:50,799
we could see quite a few of these

1567
00:55:50,799 --> 00:55:52,319
because of that bug that i mentioned up

1568
00:55:52,319 --> 00:55:52,799
to 8

1569
00:55:52,799 --> 00:55:55,920
000 at the time on open dns and quad 9

1570
00:55:55,920 --> 00:55:58,000
we saw about 80 different caches at a

1571
00:55:58,000 --> 00:55:58,400
time

1572
00:55:58,400 --> 00:56:01,520
at the more popular pops and fewer at

1573
00:56:01,520 --> 00:56:03,520
the less popular pops and then of course

1574
00:56:03,520 --> 00:56:05,280
cloudflare since it's got a shared cache

1575
00:56:05,280 --> 00:56:06,480
we could only see one

1576
00:56:06,480 --> 00:56:09,040
at a time

1577
00:56:10,559 --> 00:56:12,400
so once we figured out trufflehunter and

1578
00:56:12,400 --> 00:56:15,040
gotten it working to our satisfaction

1579
00:56:15,040 --> 00:56:16,799
we started running our case studies and

1580
00:56:16,799 --> 00:56:18,400
actually measuring the types of rare

1581
00:56:18,400 --> 00:56:21,359
phenomena that we wanted to see

1582
00:56:21,359 --> 00:56:23,440
we had three of these the first of them

1583
00:56:23,440 --> 00:56:24,960
being stalkerware and then

1584
00:56:24,960 --> 00:56:27,119
contract cheating which is a new type of

1585
00:56:27,119 --> 00:56:28,400
cheating that people are doing instead

1586
00:56:28,400 --> 00:56:29,680
of plagiarism

1587
00:56:29,680 --> 00:56:32,799
and typo squatting so previously all of

1588
00:56:32,799 --> 00:56:34,640
these were hard to measure for one

1589
00:56:34,640 --> 00:56:36,720
reason or another and in particular

1590
00:56:36,720 --> 00:56:39,119
stalkerware and contract sheeting didn't

1591
00:56:39,119 --> 00:56:41,040
have any data available about their

1592
00:56:41,040 --> 00:56:41,599
prevalence

1593
00:56:41,599 --> 00:56:45,440
i'll go more into that in a minute

1594
00:56:45,440 --> 00:56:47,119
for stalkerware in case you haven't

1595
00:56:47,119 --> 00:56:49,119
heard the term before it does what it

1596
00:56:49,119 --> 00:56:50,079
says on the box

1597
00:56:50,079 --> 00:56:52,000
it's this emerging spyware threat it's

1598
00:56:52,000 --> 00:56:53,359
usually installed by

1599
00:56:53,359 --> 00:56:56,000
an abuser on a target's phone while the

1600
00:56:56,000 --> 00:56:58,240
the target is unaware of it

1601
00:56:58,240 --> 00:57:00,559
and it's got capabilities from you know

1602
00:57:00,559 --> 00:57:02,720
recording a target's location

1603
00:57:02,720 --> 00:57:04,640
to key logging for all sorts of

1604
00:57:04,640 --> 00:57:06,640
different apps it can it can usually log

1605
00:57:06,640 --> 00:57:08,880
every app you care to name

1606
00:57:08,880 --> 00:57:11,200
some of it can even turn on the ambient

1607
00:57:11,200 --> 00:57:12,000
sound and video

1608
00:57:12,000 --> 00:57:13,440
for a device so it can record the

1609
00:57:13,440 --> 00:57:16,079
microphone and the camera

1610
00:57:16,079 --> 00:57:18,559
without the user knowing and the most

1611
00:57:18,559 --> 00:57:20,079
insidious of this stuff hides its

1612
00:57:20,079 --> 00:57:21,599
presence on the target device

1613
00:57:21,599 --> 00:57:23,359
so you can go to the list of apps and

1614
00:57:23,359 --> 00:57:24,880
maybe you see something that calls

1615
00:57:24,880 --> 00:57:27,359
itself you know data backup or wi-fi

1616
00:57:27,359 --> 00:57:28,960
but there's no icon that's going to tell

1617
00:57:28,960 --> 00:57:31,520
you this thing is on your phone

1618
00:57:31,520 --> 00:57:33,760
and stock aware is kind of a nuanced

1619
00:57:33,760 --> 00:57:35,359
problem because it comes in two

1620
00:57:35,359 --> 00:57:36,319
categories

1621
00:57:36,319 --> 00:57:39,839
dual use and overt dual use apps are

1622
00:57:39,839 --> 00:57:41,359
usually marketed for a

1623
00:57:41,359 --> 00:57:43,040
legitimate or at least legal purpose

1624
00:57:43,040 --> 00:57:45,040
like parental control or employee

1625
00:57:45,040 --> 00:57:46,400
surveillance

1626
00:57:46,400 --> 00:57:49,760
and overt apps are usually marketed

1627
00:57:49,760 --> 00:57:50,640
explicitly

1628
00:57:50,640 --> 00:57:53,280
for intimate partner violence or ipv and

1629
00:57:53,280 --> 00:57:54,880
they're the ones that usually advertise

1630
00:57:54,880 --> 00:57:56,640
themselves as being undetectable the

1631
00:57:56,640 --> 00:57:58,400
ones that hide their icon on the target

1632
00:57:58,400 --> 00:57:59,920
device

1633
00:57:59,920 --> 00:58:02,880
um so we downloaded six of the dual use

1634
00:58:02,880 --> 00:58:05,200
apps and 16 of the overt apps

1635
00:58:05,200 --> 00:58:07,200
and recorded their network traffic to

1636
00:58:07,200 --> 00:58:09,040
figure out what dns requests they were

1637
00:58:09,040 --> 00:58:11,359
making

1638
00:58:11,520 --> 00:58:13,839
now the thing about stock aware is that

1639
00:58:13,839 --> 00:58:15,520
i i just told you that there

1640
00:58:15,520 --> 00:58:18,079
are these overt apps in the dual use

1641
00:58:18,079 --> 00:58:19,200
apps

1642
00:58:19,200 --> 00:58:21,200
prior work in this space has mostly been

1643
00:58:21,200 --> 00:58:22,799
done in clinical settings

1644
00:58:22,799 --> 00:58:25,040
and it's mostly been done on the dual

1645
00:58:25,040 --> 00:58:26,079
use apps because

1646
00:58:26,079 --> 00:58:27,599
that's all the researchers have been

1647
00:58:27,599 --> 00:58:30,160
finding it's much easier to do something

1648
00:58:30,160 --> 00:58:30,799
like

1649
00:58:30,799 --> 00:58:32,799
install an app that's on the app store

1650
00:58:32,799 --> 00:58:35,119
or change sharing settings or something

1651
00:58:35,119 --> 00:58:36,160
like that

1652
00:58:36,160 --> 00:58:37,680
and so all of the work in the space had

1653
00:58:37,680 --> 00:58:39,520
been focused on that type of stuff and

1654
00:58:39,520 --> 00:58:42,079
nobody knew how many overt apps were

1655
00:58:42,079 --> 00:58:43,839
actually out there in the wild

1656
00:58:43,839 --> 00:58:45,359
it was easy to find them if you just

1657
00:58:45,359 --> 00:58:47,119
google how to track my girlfriend or

1658
00:58:47,119 --> 00:58:48,240
something like that

1659
00:58:48,240 --> 00:58:49,760
but you hadn't been seeing it in

1660
00:58:49,760 --> 00:58:51,680
clinical settings

1661
00:58:51,680 --> 00:58:54,160
the second challenge the the good reason

1662
00:58:54,160 --> 00:58:55,680
why you don't see much of it in clinical

1663
00:58:55,680 --> 00:58:56,240
settings

1664
00:58:56,240 --> 00:58:58,640
is by the time someone has gotten

1665
00:58:58,640 --> 00:59:00,480
worried enough to go to a domestic

1666
00:59:00,480 --> 00:59:01,440
violence shelter

1667
00:59:01,440 --> 00:59:04,079
they've often already reset their device

1668
00:59:04,079 --> 00:59:04,480
so

1669
00:59:04,480 --> 00:59:06,480
there's no way to tell if something has

1670
00:59:06,480 --> 00:59:08,319
been installed on it previously because

1671
00:59:08,319 --> 00:59:10,160
a reset has gotten rid of every type of

1672
00:59:10,160 --> 00:59:11,119
stock aware we've

1673
00:59:11,119 --> 00:59:14,400
seen so far and then finally the clinics

1674
00:59:14,400 --> 00:59:16,240
that are doing this often lack technical

1675
00:59:16,240 --> 00:59:18,480
expertise so unless they're working with

1676
00:59:18,480 --> 00:59:20,319
a technical expert like the folks at

1677
00:59:20,319 --> 00:59:21,839
cornell who are doing really great work

1678
00:59:21,839 --> 00:59:23,520
in this space

1679
00:59:23,520 --> 00:59:27,040
they might not know what to look for

1680
00:59:27,680 --> 00:59:29,359
so we decided to try and find

1681
00:59:29,359 --> 00:59:30,960
stalkerware and of course what we want

1682
00:59:30,960 --> 00:59:33,119
to do is not just count the number of

1683
00:59:33,119 --> 00:59:34,880
domains that are being requested

1684
00:59:34,880 --> 00:59:36,640
but count the number of devices that

1685
00:59:36,640 --> 00:59:38,880
have stalkerware installed

1686
00:59:38,880 --> 00:59:40,480
turns out stock aware is perfect for

1687
00:59:40,480 --> 00:59:42,000
this purpose because

1688
00:59:42,000 --> 00:59:43,680
you know it doesn't have any user

1689
00:59:43,680 --> 00:59:45,599
interaction it hides itself on the phone

1690
00:59:45,599 --> 00:59:47,599
so it has to make its dns requests

1691
00:59:47,599 --> 00:59:50,000
automatically at regular intervals

1692
00:59:50,000 --> 00:59:51,760
that means all you have to do is divide

1693
00:59:51,760 --> 00:59:53,839
the number of filled caches observed by

1694
00:59:53,839 --> 00:59:54,799
truffle hunter

1695
00:59:54,799 --> 00:59:57,040
by the app's request rate and you get an

1696
00:59:57,040 --> 00:59:58,640
estimate of the number of devices with

1697
00:59:58,640 --> 01:00:01,839
stalkerware installed

1698
01:00:02,160 --> 01:00:04,400
so when we did that the most stock aware

1699
01:00:04,400 --> 01:00:06,559
targets we ever saw at any one time are

1700
01:00:06,559 --> 01:00:08,640
shown in this chart here

1701
01:00:08,640 --> 01:00:11,280
we found out that there's at least 5700

1702
01:00:11,280 --> 01:00:12,880
people that are targeted just by the

1703
01:00:12,880 --> 01:00:15,760
overt stalkerware in the us today

1704
01:00:15,760 --> 01:00:17,520
and we think that these results make

1705
01:00:17,520 --> 01:00:19,520
sense because you know the the most

1706
01:00:19,520 --> 01:00:21,920
popular app we saw was the only free one

1707
01:00:21,920 --> 01:00:24,000
and the second most popular one we saw

1708
01:00:24,000 --> 01:00:25,599
was the only one that was available on

1709
01:00:25,599 --> 01:00:27,280
the google play store rather than from a

1710
01:00:27,280 --> 01:00:28,559
third party

1711
01:00:28,559 --> 01:00:30,000
so we think that validates this

1712
01:00:30,000 --> 01:00:31,440
technique it's probably reasonably

1713
01:00:31,440 --> 01:00:33,599
accurate

1714
01:00:33,599 --> 01:00:35,280
we also looked at the stock award

1715
01:00:35,280 --> 01:00:37,680
dashboard visits a stock award dashboard

1716
01:00:37,680 --> 01:00:39,920
is where the abuser will go to try and

1717
01:00:39,920 --> 01:00:41,599
look at the data that has been recorded

1718
01:00:41,599 --> 01:00:43,200
by the app

1719
01:00:43,200 --> 01:00:46,000
and this we found that the the

1720
01:00:46,000 --> 01:00:47,280
popularity of the app doesn't

1721
01:00:47,280 --> 01:00:48,160
necessarily

1722
01:00:48,160 --> 01:00:50,480
equal the popularity of the dashboard we

1723
01:00:50,480 --> 01:00:51,920
thought this might be because different

1724
01:00:51,920 --> 01:00:53,599
apps have different capabilities and

1725
01:00:53,599 --> 01:00:54,839
therefore update at different

1726
01:00:54,839 --> 01:00:57,839
frequencies

1727
01:00:58,319 --> 01:01:00,400
the second case study that we did was

1728
01:01:00,400 --> 01:01:02,319
contract cheating which is

1729
01:01:02,319 --> 01:01:04,319
uh the the new thing it's the new cool

1730
01:01:04,319 --> 01:01:06,319
thing the kids are doing these days

1731
01:01:06,319 --> 01:01:08,160
there are these services where you pay

1732
01:01:08,160 --> 01:01:10,079
them a fee and they will complete your

1733
01:01:10,079 --> 01:01:11,040
homework or

1734
01:01:11,040 --> 01:01:12,880
your class project or there are some

1735
01:01:12,880 --> 01:01:14,880
that will even take an entire class for

1736
01:01:14,880 --> 01:01:15,839
you

1737
01:01:15,839 --> 01:01:17,839
and it's very difficult to detect

1738
01:01:17,839 --> 01:01:19,200
because they're actually providing

1739
01:01:19,200 --> 01:01:20,480
original content

1740
01:01:20,480 --> 01:01:23,599
so plagiarism checkers don't work so we

1741
01:01:23,599 --> 01:01:25,359
had a look for a whole bunch of these

1742
01:01:25,359 --> 01:01:26,319
websites which

1743
01:01:26,319 --> 01:01:28,799
by the way are quite easy to find not

1744
01:01:28,799 --> 01:01:30,640
that i am endorsing this in any way but

1745
01:01:30,640 --> 01:01:32,480
a quick google search will find uh

1746
01:01:32,480 --> 01:01:35,359
dozens of them they're quite popular so

1747
01:01:35,359 --> 01:01:36,720
we put them into truffle hunter

1748
01:01:36,720 --> 01:01:39,760
and we found out that um

1749
01:01:39,760 --> 01:01:41,359
over the the two weeks we were running

1750
01:01:41,359 --> 01:01:42,799
this particular study

1751
01:01:42,799 --> 01:01:44,480
some of these services were were

1752
01:01:44,480 --> 01:01:46,480
decreasing in popularity and we thought

1753
01:01:46,480 --> 01:01:47,359
hmm

1754
01:01:47,359 --> 01:01:48,640
that might be because schools are

1755
01:01:48,640 --> 01:01:50,480
letting out for summer break around now

1756
01:01:50,480 --> 01:01:50,960
and the

1757
01:01:50,960 --> 01:01:52,880
the market for contract cheating is

1758
01:01:52,880 --> 01:01:54,160
decreasing

1759
01:01:54,160 --> 01:01:55,520
so it might be fun to look into that

1760
01:01:55,520 --> 01:01:58,240
further in the future

1761
01:01:58,240 --> 01:02:00,079
and then finally we wanted to look at

1762
01:02:00,079 --> 01:02:01,440
typo squatting but

1763
01:02:01,440 --> 01:02:02,960
the type of squatting domains that we

1764
01:02:02,960 --> 01:02:04,880
had were

1765
01:02:04,880 --> 01:02:07,440
were i think about three years old so we

1766
01:02:07,440 --> 01:02:08,079
threw this in

1767
01:02:08,079 --> 01:02:10,960
expecting to see uh that none of these

1768
01:02:10,960 --> 01:02:12,640
domains were actually getting requests

1769
01:02:12,640 --> 01:02:13,760
anymore

1770
01:02:13,760 --> 01:02:16,480
but we were wrong turns out some of them

1771
01:02:16,480 --> 01:02:18,640
are getting up to 80 requests per day

1772
01:02:18,640 --> 01:02:20,640
which was interesting because the

1773
01:02:20,640 --> 01:02:22,720
conventional wisdom about typo squatting

1774
01:02:22,720 --> 01:02:23,520
is that

1775
01:02:23,520 --> 01:02:25,359
these domains cycle through very quickly

1776
01:02:25,359 --> 01:02:27,039
they get blacklisted very quickly and

1777
01:02:27,039 --> 01:02:27,520
then

1778
01:02:27,520 --> 01:02:30,799
um spammers or fishers will will move on

1779
01:02:30,799 --> 01:02:31,839
to new domains

1780
01:02:31,839 --> 01:02:33,520
so it was interesting to see that so

1781
01:02:33,520 --> 01:02:37,038
many requests were still coming in

1782
01:02:38,960 --> 01:02:42,480
so our takeaway from this project is

1783
01:02:42,480 --> 01:02:44,799
we don't think that cash snooping on

1784
01:02:44,799 --> 01:02:46,720
public resolvers actually presents a

1785
01:02:46,720 --> 01:02:48,079
privacy concern

1786
01:02:48,079 --> 01:02:49,520
because there are millions of people

1787
01:02:49,520 --> 01:02:51,359
that are people that are using every

1788
01:02:51,359 --> 01:02:53,520
single pop and we don't think it's

1789
01:02:53,520 --> 01:02:56,960
um it's it's possible to de-anonymize

1790
01:02:56,960 --> 01:02:58,480
i shouldn't say that it's impossible but

1791
01:02:58,480 --> 01:03:00,000
we think it is prohibitively difficult

1792
01:03:00,000 --> 01:03:01,839
to de-anonymize anyone who has put a

1793
01:03:01,839 --> 01:03:02,319
domain

1794
01:03:02,319 --> 01:03:05,280
in cash but it does provide this really

1795
01:03:05,280 --> 01:03:06,960
useful measurement technique that lets

1796
01:03:06,960 --> 01:03:08,880
us measure these dangerous phenomena

1797
01:03:08,880 --> 01:03:10,799
like stalkerware that we can't measure

1798
01:03:10,799 --> 01:03:13,440
anywhere else

1799
01:03:13,760 --> 01:03:15,280
there's also some phenomena that we

1800
01:03:15,280 --> 01:03:16,880
haven't had a chance to look into in too

1801
01:03:16,880 --> 01:03:18,000
much detail like

1802
01:03:18,000 --> 01:03:20,000
hack for hire services that we would

1803
01:03:20,000 --> 01:03:23,440
really like to study in the future

1804
01:03:24,799 --> 01:03:27,920
so to conclude we we found that public

1805
01:03:27,920 --> 01:03:30,160
dns resolvers enable us to use cache

1806
01:03:30,160 --> 01:03:31,839
snooping as a privacy preserving

1807
01:03:31,839 --> 01:03:33,520
measurement technique rather than

1808
01:03:33,520 --> 01:03:35,760
as an attack we think this is a really

1809
01:03:35,760 --> 01:03:37,200
valuable measurement technique and it

1810
01:03:37,200 --> 01:03:39,119
shouldn't be disabled

1811
01:03:39,119 --> 01:03:41,760
and we used it to find non-trivial lower

1812
01:03:41,760 --> 01:03:43,520
bounds of the prevalence of certain hard

1813
01:03:43,520 --> 01:03:44,000
to study

1814
01:03:44,000 --> 01:03:46,400
internet phenomena such as stalkerware

1815
01:03:46,400 --> 01:03:47,680
contract cheating and

1816
01:03:47,680 --> 01:03:50,880
typo squatting uh so trufflehunter is

1817
01:03:50,880 --> 01:03:51,760
open source

1818
01:03:51,760 --> 01:03:53,359
although i have to admit we found one or

1819
01:03:53,359 --> 01:03:55,039
two bugs in the open source version over

1820
01:03:55,039 --> 01:03:56,559
the past couple of weeks if you want to

1821
01:03:56,559 --> 01:03:58,079
check it out you can go to this link at

1822
01:03:58,079 --> 01:03:59,920
the bottom of the slide

1823
01:03:59,920 --> 01:04:01,920
and i'd like to thank you for your

1824
01:04:01,920 --> 01:04:05,359
attention anyone got any questions

1825
01:04:06,079 --> 01:04:07,760
thank you audrey uh that was a very

1826
01:04:07,760 --> 01:04:09,920
interesting presentation

1827
01:04:09,920 --> 01:04:11,760
i would like to remind the audience to

1828
01:04:11,760 --> 01:04:13,280
please fill the poll

1829
01:04:13,280 --> 01:04:15,200
this would be only chance to write the

1830
01:04:15,200 --> 01:04:16,559
talk

1831
01:04:16,559 --> 01:04:18,799
and now we are ready for questions i

1832
01:04:18,799 --> 01:04:22,240
have a first question from joe ably

1833
01:04:22,240 --> 01:04:24,319
and his question is did you consider

1834
01:04:24,319 --> 01:04:25,359
whether cash

1835
01:04:25,359 --> 01:04:27,680
prefetching might be happening and

1836
01:04:27,680 --> 01:04:29,599
prolonging the existence of particular

1837
01:04:29,599 --> 01:04:31,200
names in caches

1838
01:04:31,200 --> 01:04:33,599
this might uh this seem like it might

1839
01:04:33,599 --> 01:04:35,680
inflate the apparent number of clients

1840
01:04:35,680 --> 01:04:39,520
requesting uh of a a particular name

1841
01:04:39,520 --> 01:04:42,160
did consider that and we ran about a

1842
01:04:42,160 --> 01:04:43,839
month's worth of experiments trying to

1843
01:04:43,839 --> 01:04:45,520
make sure that no prefetching was going

1844
01:04:45,520 --> 01:04:47,200
on for these domains

1845
01:04:47,200 --> 01:04:50,079
i think these domains were unpopular

1846
01:04:50,079 --> 01:04:50,480
enough

1847
01:04:50,480 --> 01:04:52,559
that no prefetching was happening for

1848
01:04:52,559 --> 01:04:53,520
them

1849
01:04:53,520 --> 01:04:56,720
thanks audrey um we have

1850
01:04:56,720 --> 01:04:58,960
one more i think observation from paul

1851
01:04:58,960 --> 01:05:00,000
hoffman uh

1852
01:05:00,000 --> 01:05:01,359
paul of money saying thank you for

1853
01:05:01,359 --> 01:05:03,200
focusing on stalker wear

1854
01:05:03,200 --> 01:05:06,640
it's incredibly pernicious so have

1855
01:05:06,640 --> 01:05:10,319
having real data on it is valuable

1856
01:05:10,319 --> 01:05:13,440
thanks paul um so uh

1857
01:05:13,440 --> 01:05:15,440
if since there are no questions i i had

1858
01:05:15,440 --> 01:05:17,039
a question audrey

1859
01:05:17,039 --> 01:05:19,760
um is do you have planned to like you

1860
01:05:19,760 --> 01:05:20,079
know

1861
01:05:20,079 --> 01:05:22,240
just the way there is a tool like dns

1862
01:05:22,240 --> 01:05:25,039
wiz that casey who is following you

1863
01:05:25,039 --> 01:05:27,680
has created so that other people can use

1864
01:05:27,680 --> 01:05:28,720
the tool

1865
01:05:28,720 --> 01:05:32,000
uh to like you know evaluate domains

1866
01:05:32,000 --> 01:05:34,480
do you have plans to like open so not

1867
01:05:34,480 --> 01:05:36,240
only open source it like place it

1868
01:05:36,240 --> 01:05:37,039
someplace

1869
01:05:37,039 --> 01:05:39,839
on server somewhere where people can

1870
01:05:39,839 --> 01:05:42,640
then like you know use it to actually

1871
01:05:42,640 --> 01:05:45,760
search for um names which are like you

1872
01:05:45,760 --> 01:05:46,640
know trademark

1873
01:05:46,640 --> 01:05:50,160
type of somebody is like in infringement

1874
01:05:50,160 --> 01:05:52,079
on trademark type of domains people can

1875
01:05:52,079 --> 01:05:52,720
look for those

1876
01:05:52,720 --> 01:05:54,960
in addition to all of the use cases that

1877
01:05:54,960 --> 01:05:56,799
you mentioned

1878
01:05:56,799 --> 01:05:59,440
uh so you're you're asking if if truffle

1879
01:05:59,440 --> 01:06:01,119
hunter is like available for people who

1880
01:06:01,119 --> 01:06:02,559
want to look for

1881
01:06:02,559 --> 01:06:04,799
like trademark printing names yes yeah

1882
01:06:04,799 --> 01:06:06,720
that's that should be the the tool that

1883
01:06:06,720 --> 01:06:08,480
is available at this link here if you

1884
01:06:08,480 --> 01:06:10,000
want to try it out for yourself it'll

1885
01:06:10,000 --> 01:06:11,440
it'll just tell you how many caches are

1886
01:06:11,440 --> 01:06:13,359
filled with that particular domain

1887
01:06:13,359 --> 01:06:18,160
okay sounds good thank you

1888
01:06:18,160 --> 01:06:20,799
oh okay we have uh one more question

1889
01:06:20,799 --> 01:06:21,920
from daryl

1890
01:06:21,920 --> 01:06:24,720
uh it's it's a it's a comment rather

1891
01:06:24,720 --> 01:06:26,400
he's saying agreed this seems

1892
01:06:26,400 --> 01:06:28,960
uh fruitful for stalker where etc

1893
01:06:28,960 --> 01:06:30,720
however do you believe there

1894
01:06:30,720 --> 01:06:32,559
really is anonymous standing for a

1895
01:06:32,559 --> 01:06:34,160
resolver in japan

1896
01:06:34,160 --> 01:06:36,960
for domains of small firms college in

1897
01:06:36,960 --> 01:06:39,599
new england

1898
01:06:40,000 --> 01:06:43,280
um you're you're asking if

1899
01:06:43,280 --> 01:06:45,440
if there is a risk of being able to

1900
01:06:45,440 --> 01:06:47,200
de-anonymize a user if

1901
01:06:47,200 --> 01:06:49,119
for example they've hit a japanese

1902
01:06:49,119 --> 01:06:51,440
resolver and asked for

1903
01:06:51,440 --> 01:06:53,280
you know some something that could only

1904
01:06:53,280 --> 01:06:54,799
be found in new england you think that

1905
01:06:54,799 --> 01:06:55,920
you could

1906
01:06:55,920 --> 01:06:57,599
you could de-anonymize whoever has done

1907
01:06:57,599 --> 01:06:59,440
that that way

1908
01:06:59,440 --> 01:07:01,359
yeah i think that that's what is daryl's

1909
01:07:01,359 --> 01:07:03,039
question okay

1910
01:07:03,039 --> 01:07:06,240
so you would need to know that

1911
01:07:06,240 --> 01:07:08,559
there is somebody in japan who is trying

1912
01:07:08,559 --> 01:07:09,440
to

1913
01:07:09,440 --> 01:07:12,000
to find some something related to new

1914
01:07:12,000 --> 01:07:12,480
england

1915
01:07:12,480 --> 01:07:14,559
and we thought that for the domains

1916
01:07:14,559 --> 01:07:16,240
specifically for the domains that we are

1917
01:07:16,240 --> 01:07:16,880
looking for

1918
01:07:16,880 --> 01:07:19,359
they're generic enough that we there's

1919
01:07:19,359 --> 01:07:21,200
there's no link that we could look for

1920
01:07:21,200 --> 01:07:24,799
to to find that out

1921
01:07:25,680 --> 01:07:29,200
okay thank you audrey uh we have one

1922
01:07:29,200 --> 01:07:30,079
more question

1923
01:07:30,079 --> 01:07:33,119
from andrew he's asking

1924
01:07:33,119 --> 01:07:35,280
are details of stalkerware urls

1925
01:07:35,280 --> 01:07:38,000
available for resolver operators to add

1926
01:07:38,000 --> 01:07:40,319
to their thread feeds

1927
01:07:40,319 --> 01:07:41,680
this is actually a question that's come

1928
01:07:41,680 --> 01:07:43,760
up a lot in the past few days

1929
01:07:43,760 --> 01:07:45,520
um it actually has a bit of a nuanced

1930
01:07:45,520 --> 01:07:47,359
answer which is

1931
01:07:47,359 --> 01:07:49,359
yes there are threat feeds that are

1932
01:07:49,359 --> 01:07:50,559
available but

1933
01:07:50,559 --> 01:07:52,000
we need to be a little bit cautious

1934
01:07:52,000 --> 01:07:54,559
about what we do to block these kinds of

1935
01:07:54,559 --> 01:07:55,039
apps

1936
01:07:55,039 --> 01:07:57,119
because there is a danger that if you

1937
01:07:57,119 --> 01:07:59,200
block this app and the abuser thinks

1938
01:07:59,200 --> 01:07:59,760
that the

1939
01:07:59,760 --> 01:08:01,520
the target has uninstalled the app if

1940
01:08:01,520 --> 01:08:03,680
they interpret this app not working as

1941
01:08:03,680 --> 01:08:06,000
the user having uninstalled it

1942
01:08:06,000 --> 01:08:07,839
it can be a problem it's actually one of

1943
01:08:07,839 --> 01:08:10,000
the things that often causes a situation

1944
01:08:10,000 --> 01:08:12,160
to escalate into violence and so the

1945
01:08:12,160 --> 01:08:13,440
people who are real experts in

1946
01:08:13,440 --> 01:08:15,039
stalkerware which are mostly the people

1947
01:08:15,039 --> 01:08:16,880
at cornell university who have

1948
01:08:16,880 --> 01:08:19,198
really dug into this problem they don't

1949
01:08:19,198 --> 01:08:21,040
necessarily recommend doing that in all

1950
01:08:21,040 --> 01:08:22,000
cases

1951
01:08:22,000 --> 01:08:25,198
so what i can tell you is uh there there

1952
01:08:25,198 --> 01:08:27,600
is a group i think it's called echap

1953
01:08:27,600 --> 01:08:30,158
um they're a french organization that

1954
01:08:30,158 --> 01:08:31,359
works on the problem of

1955
01:08:31,359 --> 01:08:33,120
technology and its use in intimate

1956
01:08:33,120 --> 01:08:34,479
partner violence and

1957
01:08:34,479 --> 01:08:35,759
they have a threat feed which i think

1958
01:08:35,759 --> 01:08:38,238
they have provided to quad nine which

1959
01:08:38,238 --> 01:08:39,679
which i think would be a better choice

1960
01:08:39,679 --> 01:08:42,080
than our own thread feed so i can get

1961
01:08:42,080 --> 01:08:45,839
anyone interested in contact with them

1962
01:08:46,399 --> 01:08:49,040
thank you uh andre and thank you for all

1963
01:08:49,040 --> 01:08:49,839
the questions

1964
01:08:49,839 --> 01:08:53,120
i think we are right on the dot

1965
01:08:53,120 --> 01:08:56,479
and at this time uh i would like to

1966
01:08:56,479 --> 01:08:57,040
welcome

1967
01:08:57,040 --> 01:09:00,640
casey uh dco to give us a peek into

1968
01:09:00,640 --> 01:09:04,080
the dns cookie jar uh and analysis of

1969
01:09:04,080 --> 01:09:08,318
dns cookies onto you casey

1970
01:09:08,479 --> 01:09:11,439
all right uh you can hear me okay yes i

1971
01:09:11,439 --> 01:09:13,600
can hear you and i can great

1972
01:09:13,600 --> 01:09:16,880
thank you perfect um so let's see so i

1973
01:09:16,880 --> 01:09:18,640
wanted to talk today about

1974
01:09:18,640 --> 01:09:21,359
our study of dns cookies this is work

1975
01:09:21,359 --> 01:09:22,238
that was done

1976
01:09:22,238 --> 01:09:24,238
um at brigham young university with one

1977
01:09:24,238 --> 01:09:25,520
of my students

1978
01:09:25,520 --> 01:09:28,158
jacob davis and so i'll go ahead and

1979
01:09:28,158 --> 01:09:29,359
talk about

1980
01:09:29,359 --> 01:09:30,960
the motivation behind our work and then

1981
01:09:30,960 --> 01:09:33,439
what we did in terms of our measurement

1982
01:09:33,439 --> 01:09:34,319
study

1983
01:09:34,319 --> 01:09:35,759
so first of all and i know many of you

1984
01:09:35,759 --> 01:09:37,759
are familiar with the dns already

1985
01:09:37,759 --> 01:09:40,158
um but this sets up a stage for how we

1986
01:09:40,158 --> 01:09:41,279
performed our measurement and the

1987
01:09:41,279 --> 01:09:42,799
different perspectives that we're

1988
01:09:42,799 --> 01:09:43,679
looking at

1989
01:09:43,679 --> 01:09:45,198
when we did our measurement with regard

1990
01:09:45,198 --> 01:09:47,439
to dns cookies so we're really talking

1991
01:09:47,439 --> 01:09:48,158
about two

1992
01:09:48,158 --> 01:09:50,158
client server pairs in the dns we have

1993
01:09:50,158 --> 01:09:52,319
the stub to recursive resolver

1994
01:09:52,319 --> 01:09:53,359
communication

1995
01:09:53,359 --> 01:09:55,360
and then we have the recursive to

1996
01:09:55,360 --> 01:09:56,400
authoritative

1997
01:09:56,400 --> 01:10:00,080
uh communication okay and um

1998
01:10:00,080 --> 01:10:02,719
both of those run over udp uh primarily

1999
01:10:02,719 --> 01:10:04,400
obviously we have many other transports

2000
01:10:04,400 --> 01:10:05,120
today

2001
01:10:05,120 --> 01:10:08,159
um you know including dns over tcp dns

2002
01:10:08,159 --> 01:10:09,120
over tls

2003
01:10:09,120 --> 01:10:11,920
um but at least according to the

2004
01:10:11,920 --> 01:10:13,199
original standard

2005
01:10:13,199 --> 01:10:17,199
and um and in a lot of cases the default

2006
01:10:17,199 --> 01:10:18,320
especially for recursive to

2007
01:10:18,320 --> 01:10:19,199
authoritative

2008
01:10:19,199 --> 01:10:22,480
uh we're still using udp um

2009
01:10:22,480 --> 01:10:25,120
now when we talk about identity in the

2010
01:10:25,120 --> 01:10:26,960
dns because we're using

2011
01:10:26,960 --> 01:10:29,600
udp primarily or at least using that as

2012
01:10:29,600 --> 01:10:30,880
our model

2013
01:10:30,880 --> 01:10:34,000
there isn't identity built in and so

2014
01:10:34,000 --> 01:10:36,000
the two things that we look at are first

2015
01:10:36,000 --> 01:10:37,840
of all server identity

2016
01:10:37,840 --> 01:10:40,880
so when we look at um a cache

2017
01:10:40,880 --> 01:10:44,560
uh perspective we're querying the victim

2018
01:10:44,560 --> 01:10:46,560
who's querying a server and this could

2019
01:10:46,560 --> 01:10:48,080
be from the studbury cursor

2020
01:10:48,080 --> 01:10:49,199
or from the recursive to the

2021
01:10:49,199 --> 01:10:51,280
authoritative you query a server and

2022
01:10:51,280 --> 01:10:52,960
then you get something back

2023
01:10:52,960 --> 01:10:54,800
and you sort of have to make some

2024
01:10:54,800 --> 01:10:56,960
assumptions that it came from the server

2025
01:10:56,960 --> 01:10:58,880
but in reality it might be an attacker

2026
01:10:58,880 --> 01:11:00,480
you know think back to source

2027
01:11:00,480 --> 01:11:02,560
randomization is one example of how

2028
01:11:02,560 --> 01:11:05,679
this can sort of uh defeat um

2029
01:11:05,679 --> 01:11:09,360
udp okay in a in traditional dns model

2030
01:11:09,360 --> 01:11:12,159
and then the other model here is looking

2031
01:11:12,159 --> 01:11:13,760
at client identity from the server

2032
01:11:13,760 --> 01:11:14,640
perspective

2033
01:11:14,640 --> 01:11:16,080
how do you know it's actually coming

2034
01:11:16,080 --> 01:11:18,239
from uh you know the client that's

2035
01:11:18,239 --> 01:11:20,159
actually requesting something legitimate

2036
01:11:20,159 --> 01:11:20,640
client

2037
01:11:20,640 --> 01:11:22,960
in the case where it's not it's actually

2038
01:11:22,960 --> 01:11:24,800
what we refer to as a reflection attack

2039
01:11:24,800 --> 01:11:26,560
where these packets are coming in

2040
01:11:26,560 --> 01:11:29,280
claiming to be some from some victim and

2041
01:11:29,280 --> 01:11:30,719
being

2042
01:11:30,719 --> 01:11:34,239
reflected onto that victim

2043
01:11:34,239 --> 01:11:37,440
okay so dns cookies came into play uh

2044
01:11:37,440 --> 01:11:38,960
they went they took their time through

2045
01:11:38,960 --> 01:11:40,640
the standards track um

2046
01:11:40,640 --> 01:11:43,920
and uh they were standardized in rfc um

2047
01:11:43,920 --> 01:11:48,480
in 2016. and um so the idea behind it is

2048
01:11:48,480 --> 01:11:51,280
that now when a client initiates a

2049
01:11:51,280 --> 01:11:53,760
communication with a given server

2050
01:11:53,760 --> 01:11:56,480
than a cookie and this is implemented as

2051
01:11:56,480 --> 01:11:57,600
a dns

2052
01:11:57,600 --> 01:12:01,120
an edns or extended dns option

2053
01:12:01,120 --> 01:12:02,880
they send a cookie in there which is

2054
01:12:02,880 --> 01:12:04,960
basically just a value that the cookie

2055
01:12:04,960 --> 01:12:05,679
sends to it

2056
01:12:05,679 --> 01:12:07,600
that expects the server to send back to

2057
01:12:07,600 --> 01:12:10,080
it but in addition when the server sends

2058
01:12:10,080 --> 01:12:10,960
something back

2059
01:12:10,960 --> 01:12:13,120
it sends it doesn't just return the

2060
01:12:13,120 --> 01:12:14,159
cookie that

2061
01:12:14,159 --> 01:12:16,960
the client sent to it it also returns

2062
01:12:16,960 --> 01:12:19,040
its own server cookie that expects

2063
01:12:19,040 --> 01:12:22,800
it expects the client to send back in

2064
01:12:22,800 --> 01:12:24,400
subsequent communications

2065
01:12:24,400 --> 01:12:26,400
and what that does is it basically

2066
01:12:26,400 --> 01:12:28,480
allows both parties to mutually

2067
01:12:28,480 --> 01:12:29,360
authenticate

2068
01:12:29,360 --> 01:12:33,520
each other's identity um and and uh

2069
01:12:33,520 --> 01:12:35,040
and so that helps with the identity

2070
01:12:35,040 --> 01:12:37,760
problem and off path attackers can't see

2071
01:12:37,760 --> 01:12:38,719
that

2072
01:12:38,719 --> 01:12:41,360
and so that's that's the way cookies

2073
01:12:41,360 --> 01:12:41,840
work

2074
01:12:41,840 --> 01:12:43,520
so what we wanted to do then is measure

2075
01:12:43,520 --> 01:12:45,280
where where are we at with dns cookies i

2076
01:12:45,280 --> 01:12:46,560
mean they've been standardized for five

2077
01:12:46,560 --> 01:12:47,920
years we wanted to see

2078
01:12:47,920 --> 01:12:50,159
sort of some of the popular dns servers

2079
01:12:50,159 --> 01:12:51,120
and how they're

2080
01:12:51,120 --> 01:12:53,360
implementing them if they are at all so

2081
01:12:53,360 --> 01:12:54,800
we have three

2082
01:12:54,800 --> 01:12:56,400
data sets that we're using first of all

2083
01:12:56,400 --> 01:12:57,760
we're looking at authoritative server

2084
01:12:57,760 --> 01:12:58,560
support

2085
01:12:58,560 --> 01:13:01,120
um and so we use two categories for that

2086
01:13:01,120 --> 01:13:03,199
the server's authoritative for top level

2087
01:13:03,199 --> 01:13:04,719
domains

2088
01:13:04,719 --> 01:13:06,880
and then the server's authoritative for

2089
01:13:06,880 --> 01:13:08,800
the alexa top one million

2090
01:13:08,800 --> 01:13:11,840
okay and so um the resulting ips there

2091
01:13:11,840 --> 01:13:12,960
were about 150

2092
01:13:12,960 --> 01:13:16,840
7 000 alexa ips and about

2093
01:13:16,840 --> 01:13:19,600
6600 top level domain ip addresses that

2094
01:13:19,600 --> 01:13:22,320
that were the servers that we tested and

2095
01:13:22,320 --> 01:13:22,719
so

2096
01:13:22,719 --> 01:13:25,920
um as because edns is a prerequisite we

2097
01:13:25,920 --> 01:13:27,040
found that

2098
01:13:27,040 --> 01:13:29,600
in the case of authoritative servers um

2099
01:13:29,600 --> 01:13:30,880
just over 98

2100
01:13:30,880 --> 01:13:33,679
supported edns which is good um but

2101
01:13:33,679 --> 01:13:35,040
about less than 30

2102
01:13:35,040 --> 01:13:36,560
fully supported cookies and what do we

2103
01:13:36,560 --> 01:13:38,640
mean uh fully supported we actually

2104
01:13:38,640 --> 01:13:39,440
checked

2105
01:13:39,440 --> 01:13:42,320
not only were they um you know did they

2106
01:13:42,320 --> 01:13:44,800
send back in the full

2107
01:13:44,800 --> 01:13:47,520
protocol to the full protocol extent of

2108
01:13:47,520 --> 01:13:48,320
hey

2109
01:13:48,320 --> 01:13:49,920
i see your client cookie and i'll add to

2110
01:13:49,920 --> 01:13:51,760
it a server cookie but also

2111
01:13:51,760 --> 01:13:52,960
were there any servers that were just

2112
01:13:52,960 --> 01:13:54,800
sending back a client cookie which

2113
01:13:54,800 --> 01:13:56,800
really isn't a thing but you could say

2114
01:13:56,800 --> 01:13:58,400
in theory it still has some sort of

2115
01:13:58,400 --> 01:13:59,760
protection

2116
01:13:59,760 --> 01:14:01,840
for the client in terms of server

2117
01:14:01,840 --> 01:14:03,440
identity so there was a small percentage

2118
01:14:03,440 --> 01:14:05,199
here shown in orange

2119
01:14:05,199 --> 01:14:06,880
of alexa ips that were actually just

2120
01:14:06,880 --> 01:14:08,320
echoing the client cookie which was sort

2121
01:14:08,320 --> 01:14:09,360
of interesting

2122
01:14:09,360 --> 01:14:11,600
um but in general in terms of full

2123
01:14:11,600 --> 01:14:12,480
support

2124
01:14:12,480 --> 01:14:14,640
less than 30 support 30 were fully

2125
01:14:14,640 --> 01:14:17,040
supporting cookies

2126
01:14:17,040 --> 01:14:18,480
we also wanted to look at supported

2127
01:14:18,480 --> 01:14:20,239
recursive resolvers

2128
01:14:20,239 --> 01:14:23,040
and so we actually did uh a search of

2129
01:14:23,040 --> 01:14:25,040
all open resolvers in the ipv4 address

2130
01:14:25,040 --> 01:14:25,679
space

2131
01:14:25,679 --> 01:14:29,840
to get a set of recursive resolvers

2132
01:14:29,840 --> 01:14:32,239
and we discovered about 1.9 million in

2133
01:14:32,239 --> 01:14:33,360
our scan

2134
01:14:33,360 --> 01:14:36,560
and we found that only about 70 of those

2135
01:14:36,560 --> 01:14:38,080
recursive resolvers

2136
01:14:38,080 --> 01:14:42,159
supported edns and in terms of uh full

2137
01:14:42,159 --> 01:14:45,040
cookie support we were about 17

2138
01:14:45,040 --> 01:14:46,480
and and again there was that sort of

2139
01:14:46,480 --> 01:14:48,560
orange area here where we saw this

2140
01:14:48,560 --> 01:14:51,120
sort of half support where um a server

2141
01:14:51,120 --> 01:14:52,960
would echo a client cookie but didn't

2142
01:14:52,960 --> 01:14:55,360
send its own server cookie

2143
01:14:55,360 --> 01:14:58,640
okay so um we also wanted to look and if

2144
01:14:58,640 --> 01:14:59,199
you look down

2145
01:14:59,199 --> 01:15:00,640
by the way at the bottom of the screen

2146
01:15:00,640 --> 01:15:02,080
we're sort of showing a legend in terms

2147
01:15:02,080 --> 01:15:02,719
of

2148
01:15:02,719 --> 01:15:04,239
the sorts of things that we're looking

2149
01:15:04,239 --> 01:15:06,159
at so in this case now we're looking at

2150
01:15:06,159 --> 01:15:09,520
uh recursive server support as a client

2151
01:15:09,520 --> 01:15:11,760
and so not as a server side but when

2152
01:15:11,760 --> 01:15:12,560
they clarify

2153
01:15:12,560 --> 01:15:14,320
query our authoritative so what we did

2154
01:15:14,320 --> 01:15:16,239
was we set up some authoritative servers

2155
01:15:16,239 --> 01:15:18,880
over which we had control and we issued

2156
01:15:18,880 --> 01:15:20,640
queries to the recursive resolvers such

2157
01:15:20,640 --> 01:15:22,400
that they would query our authoritatives

2158
01:15:22,400 --> 01:15:25,440
and we could analyze their queries okay

2159
01:15:25,440 --> 01:15:28,880
and we saw only about 10 percent support

2160
01:15:28,880 --> 01:15:31,120
in terms of again client-side support

2161
01:15:31,120 --> 01:15:32,880
from the recursive resolvers

2162
01:15:32,880 --> 01:15:34,800
so we're sort of decreasing in our

2163
01:15:34,800 --> 01:15:36,239
support level as we

2164
01:15:36,239 --> 01:15:39,600
continue our perspective search here in

2165
01:15:39,600 --> 01:15:42,880
support of dns cookies

2166
01:15:42,960 --> 01:15:44,800
now we wanted to look at enforcement

2167
01:15:44,800 --> 01:15:46,640
because that's sort of you know adding

2168
01:15:46,640 --> 01:15:47,360
teeth

2169
01:15:47,360 --> 01:15:50,960
to the whole the whole thing here and so

2170
01:15:50,960 --> 01:15:52,880
the first thing we did was we wanted to

2171
01:15:52,880 --> 01:15:54,800
set up an experiment in which

2172
01:15:54,800 --> 01:15:58,000
uh we um so again this is looking at

2173
01:15:58,000 --> 01:15:59,440
recursive resolvers

2174
01:15:59,440 --> 01:16:01,679
and they're getting back responses from

2175
01:16:01,679 --> 01:16:03,120
our authoritatives

2176
01:16:03,120 --> 01:16:06,800
in which we're um uh let's see

2177
01:16:06,800 --> 01:16:08,480
we're sending we we made sure that they

2178
01:16:08,480 --> 01:16:10,080
had full cookie support

2179
01:16:10,080 --> 01:16:12,640
and then um we're responding back with

2180
01:16:12,640 --> 01:16:14,800
no cookie or with an incorrect cookie

2181
01:16:14,800 --> 01:16:16,560
and we found that 85 percent of clients

2182
01:16:16,560 --> 01:16:18,239
they just behaved normally

2183
01:16:18,239 --> 01:16:19,920
when we saw that they were sending

2184
01:16:19,920 --> 01:16:21,440
cookies so they supported

2185
01:16:21,440 --> 01:16:24,320
uh dns cookies um but when we stripped

2186
01:16:24,320 --> 01:16:25,040
out the cookie

2187
01:16:25,040 --> 01:16:27,360
on our response after we previously sent

2188
01:16:27,360 --> 01:16:29,120
them a cookie so they knew we supported

2189
01:16:29,120 --> 01:16:29,679
it

2190
01:16:29,679 --> 01:16:31,199
um they just go ahead and behave

2191
01:16:31,199 --> 01:16:33,280
normally um

2192
01:16:33,280 --> 01:16:36,400
and uh and only 20 uh that was when we

2193
01:16:36,400 --> 01:16:37,600
stripped out the cookie

2194
01:16:37,600 --> 01:16:39,840
uh when we sent an incorrect cookie um

2195
01:16:39,840 --> 01:16:40,719
only 20

2196
01:16:40,719 --> 01:16:42,560
were behaving normally so so there was

2197
01:16:42,560 --> 01:16:44,719
some hope there in terms of that

2198
01:16:44,719 --> 01:16:46,960
but um barring other measures these

2199
01:16:46,960 --> 01:16:48,000
numbers uh

2200
01:16:48,000 --> 01:16:49,920
that these caches that behave this way

2201
01:16:49,920 --> 01:16:52,640
were more susceptible to cash poisoning

2202
01:16:52,640 --> 01:16:55,600
at least in terms of use of cookies okay

2203
01:16:55,600 --> 01:16:55,840
and

2204
01:16:55,840 --> 01:16:57,360
and actually this is in direct violation

2205
01:16:57,360 --> 01:16:59,360
of the specification if the client is

2206
01:16:59,360 --> 01:17:00,159
expecting

2207
01:17:00,159 --> 01:17:02,400
the response to contain a cookie and it

2208
01:17:02,400 --> 01:17:04,400
was because we previously sent them one

2209
01:17:04,400 --> 01:17:06,159
and it is missing then the response must

2210
01:17:06,159 --> 01:17:07,440
be discarded

2211
01:17:07,440 --> 01:17:09,120
now this now we wanted to look in terms

2212
01:17:09,120 --> 01:17:10,800
of enforcement um

2213
01:17:10,800 --> 01:17:14,159
from the servers and so um

2214
01:17:14,159 --> 01:17:15,600
so this is on the server side both in

2215
01:17:15,600 --> 01:17:16,960
the recursive model and the

2216
01:17:16,960 --> 01:17:18,960
authoritative model we were playing bad

2217
01:17:18,960 --> 01:17:22,560
um bad clients basically so um

2218
01:17:22,560 --> 01:17:25,760
instead of us returning um

2219
01:17:25,760 --> 01:17:29,440
the server cookie uh the to servers that

2220
01:17:29,440 --> 01:17:30,960
we had previously sent cookies so they

2221
01:17:30,960 --> 01:17:32,159
knew we played well

2222
01:17:32,159 --> 01:17:35,120
we supported dns cookie as clients um

2223
01:17:35,120 --> 01:17:36,080
then we sent them

2224
01:17:36,080 --> 01:17:37,920
a packet with no cookie and then with a

2225
01:17:37,920 --> 01:17:39,520
fake cookie now

2226
01:17:39,520 --> 01:17:41,520
according to the specification a server

2227
01:17:41,520 --> 01:17:43,840
can either discard the query silently

2228
01:17:43,840 --> 01:17:45,040
which is sort of the

2229
01:17:45,040 --> 01:17:47,040
um you know the most the most uh

2230
01:17:47,040 --> 01:17:48,400
forceful

2231
01:17:48,400 --> 01:17:50,960
um or it can respond with a bad quickie

2232
01:17:50,960 --> 01:17:52,239
error code which basically says try

2233
01:17:52,239 --> 01:17:53,199
again but give me

2234
01:17:53,199 --> 01:17:54,640
you know return back the cookie that i

2235
01:17:54,640 --> 01:17:57,760
just gave you or it can respond normally

2236
01:17:57,760 --> 01:18:00,080
and what we saw this more than 99

2237
01:18:00,080 --> 01:18:01,600
respond normally

2238
01:18:01,600 --> 01:18:04,640
uh with even when we we sent a

2239
01:18:04,640 --> 01:18:07,520
um a query with a missing or a fake

2240
01:18:07,520 --> 01:18:08,640
cookie

2241
01:18:08,640 --> 01:18:11,679
now again there's some sort of varying

2242
01:18:11,679 --> 01:18:12,560
degrees of

2243
01:18:12,560 --> 01:18:15,840
compliance with the rfc here um in terms

2244
01:18:15,840 --> 01:18:17,280
of how they might do it but

2245
01:18:17,280 --> 01:18:19,920
but 99 we're using the least restrictive

2246
01:18:19,920 --> 01:18:22,320
approach

2247
01:18:22,640 --> 01:18:24,800
okay um one last thing we looked at sort

2248
01:18:24,800 --> 01:18:26,400
of in closing here we wanted to see what

2249
01:18:26,400 --> 01:18:28,000
else we might be able to find and so

2250
01:18:28,000 --> 01:18:29,199
there's this notion of

2251
01:18:29,199 --> 01:18:32,640
what's called dynamic server cookies and

2252
01:18:32,640 --> 01:18:34,640
part of what's included in a dynamic

2253
01:18:34,640 --> 01:18:36,159
server cookie

2254
01:18:36,159 --> 01:18:38,480
is that the server the cookie itself

2255
01:18:38,480 --> 01:18:40,880
includes a clear text timestamp

2256
01:18:40,880 --> 01:18:43,120
along with the hash and the knots and so

2257
01:18:43,120 --> 01:18:45,120
what we did was we sent 60 queries to

2258
01:18:45,120 --> 01:18:47,840
each of these servers that we knew

2259
01:18:47,840 --> 01:18:49,360
supported dns cookies and then we

2260
01:18:49,360 --> 01:18:50,800
collected all these cookies so we could

2261
01:18:50,800 --> 01:18:52,080
further analyze them

2262
01:18:52,080 --> 01:18:54,000
so we could identify dynamic cookies

2263
01:18:54,000 --> 01:18:55,679
first of all and see who was using that

2264
01:18:55,679 --> 01:18:57,040
model versus some

2265
01:18:57,040 --> 01:18:59,360
some other model as well as other

2266
01:18:59,360 --> 01:19:01,120
interesting behaviors

2267
01:19:01,120 --> 01:19:03,600
and this is what we found so first of

2268
01:19:03,600 --> 01:19:04,480
all um

2269
01:19:04,480 --> 01:19:06,800
we took we identified a dynamic cookie

2270
01:19:06,800 --> 01:19:08,159
by saying okay if that i

2271
01:19:08,159 --> 01:19:10,000
that embedded timestamp in the cookie

2272
01:19:10,000 --> 01:19:11,600
that they sent us

2273
01:19:11,600 --> 01:19:14,159
was it within a window of one hour in

2274
01:19:14,159 --> 01:19:15,760
the past and 30 minutes in the future

2275
01:19:15,760 --> 01:19:16,800
then we said

2276
01:19:16,800 --> 01:19:20,159
yeah this is probably using dynamic um

2277
01:19:20,159 --> 01:19:23,040
dynamic cookies and so we saw that in

2278
01:19:23,040 --> 01:19:24,880
terms of authoritative servers both in

2279
01:19:24,880 --> 01:19:26,000
terms of the

2280
01:19:26,000 --> 01:19:30,080
tlds and the um

2281
01:19:30,080 --> 01:19:33,360
the alexa dns servers 99 were returning

2282
01:19:33,360 --> 01:19:35,280
at least one dynamic cookie in terms of

2283
01:19:35,280 --> 01:19:36,400
the recursive servers

2284
01:19:36,400 --> 01:19:39,199
83 returned at least one dynamic cookie

2285
01:19:39,199 --> 01:19:39,760
so

2286
01:19:39,760 --> 01:19:41,360
so fairly high a lot of people are using

2287
01:19:41,360 --> 01:19:43,120
dynamic cookies here's the interesting

2288
01:19:43,120 --> 01:19:43,679
part so

2289
01:19:43,679 --> 01:19:45,920
what we did was we actually uh for each

2290
01:19:45,920 --> 01:19:48,000
of these values that came back as a time

2291
01:19:48,000 --> 01:19:49,120
stamp

2292
01:19:49,120 --> 01:19:51,600
we we subtracted that uh from the

2293
01:19:51,600 --> 01:19:53,440
current time and took the absolute

2294
01:19:53,440 --> 01:19:55,520
uh value of that so we ended up with a

2295
01:19:55,520 --> 01:19:57,120
number for every single query so in this

2296
01:19:57,120 --> 01:19:58,080
first example

2297
01:19:58,080 --> 01:20:00,400
we'd say okay one one one one two they

2298
01:20:00,400 --> 01:20:02,400
were all fairly close we'd say

2299
01:20:02,400 --> 01:20:04,719
uh the time stamp of these cookies the

2300
01:20:04,719 --> 01:20:06,320
machine that sent the cookies was

2301
01:20:06,320 --> 01:20:08,639
fairly accurate consistently um over

2302
01:20:08,639 --> 01:20:09,679
across all these queries

2303
01:20:09,679 --> 01:20:11,360
and then we'd see something like this

2304
01:20:11,360 --> 01:20:13,920
you know 75 seconds off 75 seconds off

2305
01:20:13,920 --> 01:20:14,800
etc between

2306
01:20:14,800 --> 01:20:16,880
current time and again the time stamp

2307
01:20:16,880 --> 01:20:18,239
embedded in the cooking we say oh

2308
01:20:18,239 --> 01:20:21,199
those ones were out of sync okay um you

2309
01:20:21,199 --> 01:20:22,960
know they were greater than 60 seconds

2310
01:20:22,960 --> 01:20:24,320
and then we saw this sort of behavior

2311
01:20:24,320 --> 01:20:26,960
here we would see one one one one 75

2312
01:20:26,960 --> 01:20:29,600
one two one 75 and so is this mixed

2313
01:20:29,600 --> 01:20:30,719
accurate and out of sync and

2314
01:20:30,719 --> 01:20:32,639
what we found was this was sort of

2315
01:20:32,639 --> 01:20:34,239
representative

2316
01:20:34,239 --> 01:20:36,480
behavior of if you queried something

2317
01:20:36,480 --> 01:20:37,760
with the front end

2318
01:20:37,760 --> 01:20:39,440
and uh it was actually getting its

2319
01:20:39,440 --> 01:20:41,360
cookie from a back-end server

2320
01:20:41,360 --> 01:20:43,199
and four of those in the case where

2321
01:20:43,199 --> 01:20:44,639
there were five back-end servers four of

2322
01:20:44,639 --> 01:20:46,080
them had an accurate clock and one that

2323
01:20:46,080 --> 01:20:47,120
was out of sync

2324
01:20:47,120 --> 01:20:48,639
so here's a breakdown of some of the

2325
01:20:48,639 --> 01:20:50,400
numbers that we saw you know we only saw

2326
01:20:50,400 --> 01:20:52,080
this mixed accurate and out of sync

2327
01:20:52,080 --> 01:20:54,400
um you know very less than one percent

2328
01:20:54,400 --> 01:20:56,239
of the time at least in the alexa

2329
01:20:56,239 --> 01:20:58,000
alexa list but some of the interesting

2330
01:20:58,000 --> 01:21:00,159
behaviors i'm just going to wrap up here

2331
01:21:00,159 --> 01:21:01,920
so i have some time for questions

2332
01:21:01,920 --> 01:21:03,520
one other thing we saw was interoperable

2333
01:21:03,520 --> 01:21:05,679
cookies um

2334
01:21:05,679 --> 01:21:07,199
they they begin with a special bite

2335
01:21:07,199 --> 01:21:09,360
value and their dynamic as we explained

2336
01:21:09,360 --> 01:21:11,920
before with regard to their time stamp

2337
01:21:11,920 --> 01:21:14,480
we saw only about 4.2 percent of

2338
01:21:14,480 --> 01:21:16,239
auth servers were using interoperable

2339
01:21:16,239 --> 01:21:17,520
cookies um

2340
01:21:17,520 --> 01:21:19,199
slightly higher amount and recursive

2341
01:21:19,199 --> 01:21:21,600
servers but we saw about 6.5 percent of

2342
01:21:21,600 --> 01:21:23,280
servers using a mixture of interoperable

2343
01:21:23,280 --> 01:21:24,560
and non-interoperable

2344
01:21:24,560 --> 01:21:26,960
which was sort of defeats the spirit of

2345
01:21:26,960 --> 01:21:28,239
interoperable cookies

2346
01:21:28,239 --> 01:21:30,719
um so kind of interesting um all right

2347
01:21:30,719 --> 01:21:32,000
i'm not going to talk about these right

2348
01:21:32,000 --> 01:21:33,040
now i can talk about

2349
01:21:33,040 --> 01:21:35,600
more of those in in sort of um question

2350
01:21:35,600 --> 01:21:37,920
q a if there is any but

2351
01:21:37,920 --> 01:21:40,480
just in summary we saw only 15 of

2352
01:21:40,480 --> 01:21:42,000
clients were enforcing cookies

2353
01:21:42,000 --> 01:21:44,159
properly and less than one percent of

2354
01:21:44,159 --> 01:21:45,920
servers are enforcing cookies

2355
01:21:45,920 --> 01:21:47,840
and uh one idea to maybe help with this

2356
01:21:47,840 --> 01:21:49,840
is to sort of advertise intended use of

2357
01:21:49,840 --> 01:21:50,719
cookies

2358
01:21:50,719 --> 01:21:52,560
um so that's all i have and i'm happy to

2359
01:21:52,560 --> 01:21:55,040
take some questions

2360
01:21:55,040 --> 01:21:57,679
thank you uh casey for the presentation

2361
01:21:57,679 --> 01:21:58,080
uh

2362
01:21:58,080 --> 01:22:01,040
i sense a dns cookie flag day or

2363
01:22:01,040 --> 01:22:01,600
something

2364
01:22:01,600 --> 01:22:05,199
in future um uh we we have a

2365
01:22:05,199 --> 01:22:10,400
comment uh from tian ho chi uh here the

2366
01:22:10,400 --> 01:22:11,360
comment is

2367
01:22:11,360 --> 01:22:13,679
we google public dns are experimenting

2368
01:22:13,679 --> 01:22:15,040
dns cookie

2369
01:22:15,040 --> 01:22:17,360
uh cookies to enable and send them to

2370
01:22:17,360 --> 01:22:19,760
authoritative name servers recently

2371
01:22:19,760 --> 01:22:21,440
an interesting finding is that the

2372
01:22:21,440 --> 01:22:23,679
percentage of real traffic

2373
01:22:23,679 --> 01:22:25,600
dns cookie can protect will be

2374
01:22:25,600 --> 01:22:28,159
significantly lower than the percentage

2375
01:22:28,159 --> 01:22:29,520
of name servers

2376
01:22:29,520 --> 01:22:32,080
for those 30 name servers that fully

2377
01:22:32,080 --> 01:22:33,760
support dns cookies

2378
01:22:33,760 --> 01:22:36,080
they account for approximately five

2379
01:22:36,080 --> 01:22:39,840
percent of the outgoing traffic

2380
01:22:41,040 --> 01:22:42,560
yeah it's a great comment i you know i

2381
01:22:42,560 --> 01:22:44,880
haven't studied one thing we didn't do

2382
01:22:44,880 --> 01:22:46,239
was actually look at

2383
01:22:46,239 --> 01:22:47,840
and that's something you always you know

2384
01:22:47,840 --> 01:22:49,440
you always want to do is look at

2385
01:22:49,440 --> 01:22:52,159
okay well you know how significant are

2386
01:22:52,159 --> 01:22:53,760
these servers that support it or don't

2387
01:22:53,760 --> 01:22:55,360
support it what kind of an impact are

2388
01:22:55,360 --> 01:22:57,520
they having

2389
01:22:57,520 --> 01:22:59,360
and you could also say you know what's

2390
01:22:59,360 --> 01:23:00,960
the difference between noisy servers

2391
01:23:00,960 --> 01:23:04,880
and truly significant servers otherwise

2392
01:23:04,880 --> 01:23:06,400
because i don't think noisy necessarily

2393
01:23:06,400 --> 01:23:08,320
means

2394
01:23:08,320 --> 01:23:10,400
significant there are different ways of

2395
01:23:10,400 --> 01:23:11,520
measuring that but

2396
01:23:11,520 --> 01:23:13,600
but that's a great question and comment

2397
01:23:13,600 --> 01:23:15,120
i guess in terms of

2398
01:23:15,120 --> 01:23:16,960
you know one way to look at that which

2399
01:23:16,960 --> 01:23:20,480
which we didn't look at in our study

2400
01:23:20,480 --> 01:23:23,360
uh we have one question from ali raza

2401
01:23:23,360 --> 01:23:24,000
saleh

2402
01:23:24,000 --> 01:23:26,480
uh you're uh you can immute yourself and

2403
01:23:26,480 --> 01:23:29,040
ask you a question

2404
01:23:29,040 --> 01:23:30,880
excuse me i think that i just mistakenly

2405
01:23:30,880 --> 01:23:32,080
put in their eyes and i don't have any

2406
01:23:32,080 --> 01:23:33,440
questions thank you

2407
01:23:33,440 --> 01:23:36,800
for that thank you no problem uh

2408
01:23:36,800 --> 01:23:40,159
we have a question from joe ably

2409
01:23:40,159 --> 01:23:43,040
joe you can unmute yourself okay see

2410
01:23:43,040 --> 01:23:44,000
it's joe here from

2411
01:23:44,000 --> 01:23:47,440
pir so it occurred to me you use the

2412
01:23:47,440 --> 01:23:48,639
alexa

2413
01:23:48,639 --> 01:23:50,239
alexa source list popular popular

2414
01:23:50,239 --> 01:23:51,840
websites to try and find name servers

2415
01:23:51,840 --> 01:23:53,920
authoritative name servers to look at

2416
01:23:53,920 --> 01:23:56,000
and it seems to me those are more likely

2417
01:23:56,000 --> 01:23:57,440
than the general random set

2418
01:23:57,440 --> 01:23:59,199
to be hosted on the kind of enterprise

2419
01:23:59,199 --> 01:24:01,360
server that uses clusters

2420
01:24:01,360 --> 01:24:03,199
if you and if you use a user cluster

2421
01:24:03,199 --> 01:24:05,520
which is you know has autonomous

2422
01:24:05,520 --> 01:24:07,360
sort of origin servers behind whatever

2423
01:24:07,360 --> 01:24:08,800
load balancing technique they're using

2424
01:24:08,800 --> 01:24:10,400
then the chances are that they don't

2425
01:24:10,400 --> 01:24:12,880
have well they may not have a way of

2426
01:24:12,880 --> 01:24:15,199
sharing server cookies between

2427
01:24:15,199 --> 01:24:17,600
different origin servers so it's

2428
01:24:17,600 --> 01:24:18,880
possible is that the

2429
01:24:18,880 --> 01:24:20,480
seems possible that you've just chosen a

2430
01:24:20,480 --> 01:24:22,480
sample set of servers and the google

2431
01:24:22,480 --> 01:24:24,239
comment is similar that most popular

2432
01:24:24,239 --> 01:24:26,239
servers that are just implemented in

2433
01:24:26,239 --> 01:24:28,000
such a way that server cookies are kind

2434
01:24:28,000 --> 01:24:28,719
of

2435
01:24:28,719 --> 01:24:31,280
impractical to support and um or at

2436
01:24:31,280 --> 01:24:32,560
least not implemented

2437
01:24:32,560 --> 01:24:34,159
and shared between those origin servers

2438
01:24:34,159 --> 01:24:36,480
so maybe that's biasing your results

2439
01:24:36,480 --> 01:24:38,000
maybe there are more servers that

2440
01:24:38,000 --> 01:24:39,199
support

2441
01:24:39,199 --> 01:24:41,520
dns cookies correctly than you are

2442
01:24:41,520 --> 01:24:42,719
seeing and the ones you're seeing are

2443
01:24:42,719 --> 01:24:44,560
the ones where it's just architecturally

2444
01:24:44,560 --> 01:24:46,480
difficult to support them

2445
01:24:46,480 --> 01:24:48,560
yeah that's a that's a great point joe

2446
01:24:48,560 --> 01:24:50,560
and uh i don't have the answer to that

2447
01:24:50,560 --> 01:24:53,199
i mean we did see some and by the way

2448
01:24:53,199 --> 01:24:54,880
when we implemented dns cookies

2449
01:24:54,880 --> 01:24:58,239
um on dns fizz i don't know uh close to

2450
01:24:58,239 --> 01:24:59,360
two years ago

2451
01:24:59,360 --> 01:25:00,560
uh that was one of the first things that

2452
01:25:00,560 --> 01:25:02,639
started jumping out as we started seeing

2453
01:25:02,639 --> 01:25:03,040
these

2454
01:25:03,040 --> 01:25:05,120
these errors that i didn't even expect

2455
01:25:05,120 --> 01:25:07,120
sort of like oh by the way

2456
01:25:07,120 --> 01:25:08,880
uh we'd seen cookies from the server and

2457
01:25:08,880 --> 01:25:10,320
now we're not seeing them

2458
01:25:10,320 --> 01:25:12,560
um sort of those weird cases that you

2459
01:25:12,560 --> 01:25:14,400
know maybe a lot of people didn't expect

2460
01:25:14,400 --> 01:25:15,920
and in part we're not seeing those also

2461
01:25:15,920 --> 01:25:17,360
because cookies aren't being enforced as

2462
01:25:17,360 --> 01:25:18,639
we saw in some of our research and

2463
01:25:18,639 --> 01:25:19,280
that's

2464
01:25:19,280 --> 01:25:21,280
um you know that's just known is that

2465
01:25:21,280 --> 01:25:23,360
they're not being enforced yet so

2466
01:25:23,360 --> 01:25:26,159
um the short answer is probably yes and

2467
01:25:26,159 --> 01:25:27,040
no i mean

2468
01:25:27,040 --> 01:25:28,639
we we probably did miss some stuff

2469
01:25:28,639 --> 01:25:30,080
because people were like let's just turn

2470
01:25:30,080 --> 01:25:31,360
it off for now

2471
01:25:31,360 --> 01:25:35,440
um and uh but but there are others that

2472
01:25:35,440 --> 01:25:36,159
probably just

2473
01:25:36,159 --> 01:25:38,239
sort of unknowingly doing it because

2474
01:25:38,239 --> 01:25:40,159
they're not being enforced in sort of

2475
01:25:40,159 --> 01:25:41,920
the ideal way at this point

2476
01:25:41,920 --> 01:25:43,760
um but that's sort of my best answer for

2477
01:25:43,760 --> 01:25:45,040
now but it really needs more looking

2478
01:25:45,040 --> 01:25:45,840
into

2479
01:25:45,840 --> 01:25:47,360
yeah maybe you're at the pheromone you

2480
01:25:47,360 --> 01:25:48,880
saw of just echoing back the client

2481
01:25:48,880 --> 01:25:50,400
cookie but not sending a server cookie

2482
01:25:50,400 --> 01:25:51,679
maybe that's someone who really wants to

2483
01:25:51,679 --> 01:25:52,880
support cookies

2484
01:25:52,880 --> 01:25:54,800
but can't share the server cookie across

2485
01:25:54,800 --> 01:25:55,920
the different origin servers so they're

2486
01:25:55,920 --> 01:25:57,520
doing the best they can

2487
01:25:57,520 --> 01:26:00,000
it could be or uh and i know brian has

2488
01:26:00,000 --> 01:26:00,960
another question here

2489
01:26:00,960 --> 01:26:03,280
um sorry pallavi was going to reach out

2490
01:26:03,280 --> 01:26:04,239
probably

2491
01:26:04,239 --> 01:26:06,080
but he asked about that uh he asked

2492
01:26:06,080 --> 01:26:07,360
about that here it says

2493
01:26:07,360 --> 01:26:09,679
do you mind if i read it pallavi yes go

2494
01:26:09,679 --> 01:26:10,639
ahead okay sorry

2495
01:26:10,639 --> 01:26:12,400
it says did you attempt to distinguish

2496
01:26:12,400 --> 01:26:14,159
blind mirroring of eds options rather

2497
01:26:14,159 --> 01:26:14,719
than actual

2498
01:26:14,719 --> 01:26:16,239
cookie parsing and we actually didn't

2499
01:26:16,239 --> 01:26:18,000
look at that specifically but that that

2500
01:26:18,000 --> 01:26:19,840
might have been what we were seeing

2501
01:26:19,840 --> 01:26:23,600
uh when we saw the client cookie only so

2502
01:26:23,600 --> 01:26:24,960
that's something we have to go back and

2503
01:26:24,960 --> 01:26:26,159
and look at as well

2504
01:26:26,159 --> 01:26:28,560
um so that could be joe and i and sorry

2505
01:26:28,560 --> 01:26:30,080
for overstepping my uh

2506
01:26:30,080 --> 01:26:33,360
my bounds there but uh i think brian's

2507
01:26:33,360 --> 01:26:35,040
question had direct relevance to joe's

2508
01:26:35,040 --> 01:26:37,520
question so

2509
01:26:37,520 --> 01:26:39,520
we have one more question from mark

2510
01:26:39,520 --> 01:26:40,800
andrews mark

2511
01:26:40,800 --> 01:26:51,840
you can unmute yourself yeah um

2512
01:26:57,040 --> 01:27:02,320
i did click on mute okay i did

2513
01:27:02,560 --> 01:27:05,040
um vines cookies were done very

2514
01:27:05,040 --> 01:27:07,280
conservatively at the beginning because

2515
01:27:07,280 --> 01:27:10,400
they were doing it into a world without

2516
01:27:10,400 --> 01:27:13,679
any cookie support before um

2517
01:27:13,679 --> 01:27:16,800
the rfc was actually written um

2518
01:27:16,800 --> 01:27:19,600
the the echoing of cooking cookies

2519
01:27:19,600 --> 01:27:20,719
you'll find is

2520
01:27:20,719 --> 01:27:24,400
um microsoft servers

2521
01:27:24,400 --> 01:27:29,040
prior to the first that were

2522
01:27:29,120 --> 01:27:33,360
that were deployed prior to

2523
01:27:33,360 --> 01:27:36,639
the dns flag day fixes the microsoft

2524
01:27:36,639 --> 01:27:38,480
the first flight day fixes that

2525
01:27:38,480 --> 01:27:39,920
microsoft did

2526
01:27:39,920 --> 01:27:42,080
they do their server microsoft servers

2527
01:27:42,080 --> 01:27:45,360
were just echoing back the

2528
01:27:45,520 --> 01:27:49,040
echoing back the edns option

2529
01:27:49,040 --> 01:27:53,679
and um when you

2530
01:27:53,840 --> 01:27:55,760
don't send back a cert when you don't

2531
01:27:55,760 --> 01:27:58,719
send back a server cookie

2532
01:27:58,719 --> 01:28:00,400
the server is supposed to actually

2533
01:28:00,400 --> 01:28:03,280
respond to you as if you're a different

2534
01:28:03,280 --> 01:28:06,840
different client um this is how you

2535
01:28:06,840 --> 01:28:08,159
differentiate

2536
01:28:08,159 --> 01:28:10,400
self server differentiates clients

2537
01:28:10,400 --> 01:28:12,840
behind a

2538
01:28:12,840 --> 01:28:16,639
nat um

2539
01:28:16,639 --> 01:28:20,000
so yeah um you

2540
01:28:20,000 --> 01:28:21,920
you don't expect you don't expect the

2541
01:28:21,920 --> 01:28:23,120
server to mis

2542
01:28:23,120 --> 01:28:25,199
to not answer when you don't have a

2543
01:28:25,199 --> 01:28:26,560
server cookie

2544
01:28:26,560 --> 01:28:29,600
coming at it um

2545
01:28:29,600 --> 01:28:33,440
um binds by default doesn't force

2546
01:28:33,440 --> 01:28:35,520
doesn't force a cookie before it

2547
01:28:35,520 --> 01:28:37,440
responds but you can definitely turn it

2548
01:28:37,440 --> 01:28:39,040
onto named.com

2549
01:28:39,040 --> 01:28:41,440
i do that and it works well enough but

2550
01:28:41,440 --> 01:28:42,400
um

2551
01:28:42,400 --> 01:28:46,639
yeah yeah there's

2552
01:28:46,639 --> 01:28:48,800
i i don't know whether we want a poll

2553
01:28:48,800 --> 01:28:50,800
but would people be happy if we

2554
01:28:50,800 --> 01:28:53,760
if we made buying always require a

2555
01:28:53,760 --> 01:28:55,440
server cookie

2556
01:28:55,440 --> 01:28:59,440
a server cookie if it saw the client

2557
01:28:59,440 --> 01:29:01,520
supports cookies that'd be an

2558
01:29:01,520 --> 01:29:02,960
interesting question

2559
01:29:02,960 --> 01:29:04,560
we'd like to see i suppose we'd like to

2560
01:29:04,560 --> 01:29:05,920
see the answer to because we can change

2561
01:29:05,920 --> 01:29:08,239
the default easily enough it's

2562
01:29:08,239 --> 01:29:11,600
about 10 seconds work yeah mark

2563
01:29:11,600 --> 01:29:13,199
by the way these are great insights from

2564
01:29:13,199 --> 01:29:15,040
uh you know developer

2565
01:29:15,040 --> 01:29:17,840
and uh protocol um specialists here in

2566
01:29:17,840 --> 01:29:19,040
this area of course

2567
01:29:19,040 --> 01:29:21,120
uh i appreciate those insights i'll

2568
01:29:21,120 --> 01:29:22,639
maybe say two things to

2569
01:29:22,639 --> 01:29:26,080
um you know to uh respond to your

2570
01:29:26,080 --> 01:29:28,239
comment and question there

2571
01:29:28,239 --> 01:29:31,600
one thing is uh with regard to our

2572
01:29:31,600 --> 01:29:33,679
experiments we took a lot of liberties

2573
01:29:33,679 --> 01:29:36,080
and uh we weren't looking necessarily at

2574
01:29:36,080 --> 01:29:38,719
the way things were

2575
01:29:38,719 --> 01:29:41,360
you know necessarily implemented we just

2576
01:29:41,360 --> 01:29:42,320
wanted to see

2577
01:29:42,320 --> 01:29:44,080
from an attack model what would happen

2578
01:29:44,080 --> 01:29:45,760
if we did certain things

2579
01:29:45,760 --> 01:29:47,920
but we know there was different intent

2580
01:29:47,920 --> 01:29:50,080
sometimes both in the implementation

2581
01:29:50,080 --> 01:29:53,040
and in the protocol specification um but

2582
01:29:53,040 --> 01:29:54,080
again we sort of said

2583
01:29:54,080 --> 01:29:55,679
let's lay that aside and look at what

2584
01:29:55,679 --> 01:29:57,360
could happen um

2585
01:29:57,360 --> 01:29:59,840
and with regard to your second you know

2586
01:29:59,840 --> 01:30:01,360
your second item what should we do

2587
01:30:01,360 --> 01:30:04,239
and i'll wrap this up really quick uh i

2588
01:30:04,239 --> 01:30:04,800
just say

2589
01:30:04,800 --> 01:30:06,000
uh i think we can do more

2590
01:30:06,000 --> 01:30:08,000
experimentation and find out um but i

2591
01:30:08,000 --> 01:30:08,320
think

2592
01:30:08,320 --> 01:30:10,000
a lot of this can be measurement driven

2593
01:30:10,000 --> 01:30:11,600
and data driven and maybe we can talk

2594
01:30:11,600 --> 01:30:14,320
more offline about that mark

2595
01:30:14,320 --> 01:30:18,400
thank you casey sorry to put you off uh

2596
01:30:18,400 --> 01:30:20,639
now uh i have i would like to welcome

2597
01:30:20,639 --> 01:30:21,840
matt lucky

2598
01:30:21,840 --> 01:30:25,280
to talk about machine learning uh

2599
01:30:25,280 --> 01:30:30,000
router hostname patterns onto you matt

2600
01:30:30,239 --> 01:30:32,960
so yeah so this talk is about machine

2601
01:30:32,960 --> 01:30:34,639
learning internet around our host name

2602
01:30:34,639 --> 01:30:35,360
patterns

2603
01:30:35,360 --> 01:30:37,040
my name is beth you lucky i'm with the

2604
01:30:37,040 --> 01:30:38,880
university of waikato

2605
01:30:38,880 --> 01:30:41,920
and just briefly

2606
01:30:41,920 --> 01:30:45,600
the the talk is about trying to extract

2607
01:30:45,600 --> 01:30:47,360
meaning from dns host names

2608
01:30:47,360 --> 01:30:49,920
automatically and learning to do it

2609
01:30:49,920 --> 01:30:51,440
the specific application that i'm

2610
01:30:51,440 --> 01:30:53,120
discussing uh

2611
01:30:53,120 --> 01:30:55,280
extracting information from router host

2612
01:30:55,280 --> 01:30:56,960
names so in this slide

2613
01:30:56,960 --> 01:31:00,080
i have six different routers operated by

2614
01:31:00,080 --> 01:31:01,280
hurricane electric

2615
01:31:01,280 --> 01:31:03,120
and we can see that the operators of

2616
01:31:03,120 --> 01:31:05,199
hurricane electorate have annotated

2617
01:31:05,199 --> 01:31:07,280
these host names in different ways and

2618
01:31:07,280 --> 01:31:09,120
i've done this because it helps them and

2619
01:31:09,120 --> 01:31:10,719
third parties contextualize

2620
01:31:10,719 --> 01:31:14,159
internet writing behavior so we can see

2621
01:31:14,159 --> 01:31:17,199
for example that hurricane electric

2622
01:31:17,199 --> 01:31:20,800
embeds a router name or a string that is

2623
01:31:20,800 --> 01:31:24,320
unique to each router but it is in

2624
01:31:24,320 --> 01:31:26,239
common across each of the interfaces on

2625
01:31:26,239 --> 01:31:28,560
that router

2626
01:31:28,560 --> 01:31:30,719
we can see within that stream they have

2627
01:31:30,719 --> 01:31:33,520
embedded a geolocation code

2628
01:31:33,520 --> 01:31:36,639
um that ex that indicates roughly where

2629
01:31:36,639 --> 01:31:38,639
a router is physically located

2630
01:31:38,639 --> 01:31:42,480
be it fremont atlanta or ashburn

2631
01:31:42,480 --> 01:31:45,040
we can see that they've embedded a

2632
01:31:45,040 --> 01:31:46,960
string identifying the speed of the

2633
01:31:46,960 --> 01:31:48,480
interface involved if it's

2634
01:31:48,480 --> 01:31:50,480
if it's 100 gigabit ethernet or 10

2635
01:31:50,480 --> 01:31:52,719
gigabit ethernet

2636
01:31:52,719 --> 01:31:55,280
and with we can see also that for the

2637
01:31:55,280 --> 01:31:55,920
routers

2638
01:31:55,920 --> 01:31:58,560
that belong to other networks that

2639
01:31:58,560 --> 01:32:00,320
interconnect with

2640
01:32:00,320 --> 01:32:02,239
hurricane electric that hurricane

2641
01:32:02,239 --> 01:32:04,719
electric have embedded a string that

2642
01:32:04,719 --> 01:32:05,600
identifies

2643
01:32:05,600 --> 01:32:09,280
or names the network involved

2644
01:32:09,600 --> 01:32:12,080
finally sometimes hurricane electric

2645
01:32:12,080 --> 01:32:14,239
also embeds the autonomous system number

2646
01:32:14,239 --> 01:32:15,360
or asm

2647
01:32:15,360 --> 01:32:19,599
of the interconnecting party

2648
01:32:19,840 --> 01:32:22,320
so the goal of this particular piece of

2649
01:32:22,320 --> 01:32:23,280
work is

2650
01:32:23,280 --> 01:32:26,320
to automatically build

2651
01:32:26,320 --> 01:32:28,960
um or learn regular expressions that

2652
01:32:28,960 --> 01:32:29,840
extract

2653
01:32:29,840 --> 01:32:31,920
different features from these host names

2654
01:32:31,920 --> 01:32:33,360
when these features

2655
01:32:33,360 --> 01:32:36,239
are present so for example the tool that

2656
01:32:36,239 --> 01:32:37,679
we've created hoi ho

2657
01:32:37,679 --> 01:32:41,040
what that does is given a training set

2658
01:32:41,040 --> 01:32:44,000
attempts to learn a regular expression

2659
01:32:44,000 --> 01:32:44,320
that

2660
01:32:44,320 --> 01:32:46,719
reliably extracts a given feature from

2661
01:32:46,719 --> 01:32:49,440
the hostname

2662
01:32:50,560 --> 01:32:52,159
so there are a number of challenges to

2663
01:32:52,159 --> 01:32:54,880
this piece of work the the first one is

2664
01:32:54,880 --> 01:32:55,440
that

2665
01:32:55,440 --> 01:32:58,800
there is significant variation in the

2666
01:32:58,800 --> 01:33:02,080
ways in which operators label or

2667
01:33:02,080 --> 01:33:04,400
create their host names each operator

2668
01:33:04,400 --> 01:33:07,120
has essentially its own dialect

2669
01:33:07,120 --> 01:33:09,679
so for example for these three routers

2670
01:33:09,679 --> 01:33:11,600
and these are all border routers

2671
01:33:11,600 --> 01:33:13,440
with host names assigned by different

2672
01:33:13,440 --> 01:33:16,000
networks each of those networks has

2673
01:33:16,000 --> 01:33:17,760
their own convention

2674
01:33:17,760 --> 01:33:20,320
so for example gtt will embed an

2675
01:33:20,320 --> 01:33:21,679
autonomous system number

2676
01:33:21,679 --> 01:33:25,600
into the asm for those border routers

2677
01:33:25,600 --> 01:33:28,719
whereas telia and cbone will embed

2678
01:33:28,719 --> 01:33:31,280
the interconnecting party's name in this

2679
01:33:31,280 --> 01:33:31,760
case

2680
01:33:31,760 --> 01:33:34,960
edgecast or pccw

2681
01:33:34,960 --> 01:33:38,400
beyond that even for geolocation

2682
01:33:38,400 --> 01:33:41,679
each of these operators can choose

2683
01:33:41,679 --> 01:33:45,760
their own geolocation codes so gdt

2684
01:33:45,760 --> 01:33:48,000
happens to use the well-known ir the

2685
01:33:48,000 --> 01:33:50,239
airport code for new york city but

2686
01:33:50,239 --> 01:33:53,760
telia and sibone have made up their own

2687
01:33:53,760 --> 01:33:56,239
geolocation code and in fact for the

2688
01:33:56,239 --> 01:33:57,760
next router down that's physically

2689
01:33:57,760 --> 01:33:58,400
located

2690
01:33:58,400 --> 01:34:02,000
in london ldn is a airport that is not

2691
01:34:02,000 --> 01:34:02,960
located

2692
01:34:02,960 --> 01:34:05,840
in the uk

2693
01:34:06,960 --> 01:34:08,560
um a second key challenge is that

2694
01:34:08,560 --> 01:34:10,480
there's almost no ground truth

2695
01:34:10,480 --> 01:34:12,960
around to train a model so what we rely

2696
01:34:12,960 --> 01:34:13,760
on instead

2697
01:34:13,760 --> 01:34:16,080
uh heuristic labels that have been

2698
01:34:16,080 --> 01:34:17,840
heuristically assigned by different

2699
01:34:17,840 --> 01:34:19,840
algorithms

2700
01:34:19,840 --> 01:34:22,719
the data set that we use is the cada

2701
01:34:22,719 --> 01:34:26,000
internet topology data kit the idk

2702
01:34:26,000 --> 01:34:29,360
and this data set contains

2703
01:34:29,360 --> 01:34:32,639
sets of routers where these routers

2704
01:34:32,639 --> 01:34:34,000
the different interfaces have been

2705
01:34:34,000 --> 01:34:36,320
analytic analytically inferred to belong

2706
01:34:36,320 --> 01:34:37,280
to the same

2707
01:34:37,280 --> 01:34:40,080
router which hosts the host names and

2708
01:34:40,080 --> 01:34:42,400
that belong to the same router

2709
01:34:42,400 --> 01:34:45,920
as well as the which is owns each router

2710
01:34:45,920 --> 01:34:47,600
also inferred using heuristics and of

2711
01:34:47,600 --> 01:34:49,840
course the data set also contains

2712
01:34:49,840 --> 01:34:53,040
pointer records so

2713
01:34:53,040 --> 01:34:55,440
just as an example of how the algorithm

2714
01:34:55,440 --> 01:34:56,159
proceeds help

2715
01:34:56,159 --> 01:34:58,480
builds these rigor expressions

2716
01:34:58,480 --> 01:34:59,679
automatically

2717
01:34:59,679 --> 01:35:02,320
so for the asm cases where in this case

2718
01:35:02,320 --> 01:35:04,800
equinix is embedding the asn

2719
01:35:04,800 --> 01:35:08,159
of the router that with this particular

2720
01:35:08,159 --> 01:35:09,520
host name

2721
01:35:09,520 --> 01:35:12,400
um what it does is it has a set of

2722
01:35:12,400 --> 01:35:14,480
training a scenes that are

2723
01:35:14,480 --> 01:35:17,600
inferred heuristically and these usually

2724
01:35:17,600 --> 01:35:19,520
align with the host name

2725
01:35:19,520 --> 01:35:21,199
but sometimes either the host name is

2726
01:35:21,199 --> 01:35:23,360
stale or they're training asm as it

2727
01:35:23,360 --> 01:35:25,520
is because it's inferred it's wrong but

2728
01:35:25,520 --> 01:35:26,560
what it does is

2729
01:35:26,560 --> 01:35:30,639
it given where it sees a number

2730
01:35:30,639 --> 01:35:32,480
it will try to build a regular

2731
01:35:32,480 --> 01:35:34,639
expression that extracts that number

2732
01:35:34,639 --> 01:35:36,480
for each individual host name using that

2733
01:35:36,480 --> 01:35:38,960
x hostname as an example and then apply

2734
01:35:38,960 --> 01:35:41,440
it to the full set

2735
01:35:41,440 --> 01:35:43,520
so in this case it's built four

2736
01:35:43,520 --> 01:35:45,199
different rigger expressions

2737
01:35:45,199 --> 01:35:47,760
that each extract from a portion of the

2738
01:35:47,760 --> 01:35:49,920
routers

2739
01:35:49,920 --> 01:35:52,880
we can see that three of the regular

2740
01:35:52,880 --> 01:35:54,880
expressions are very similar

2741
01:35:54,880 --> 01:35:56,800
so what it will do is then merge these

2742
01:35:56,800 --> 01:35:58,080
trigger expressions together

2743
01:35:58,080 --> 01:35:58,960
automatically

2744
01:35:58,960 --> 01:36:00,480
to build a regular expression that

2745
01:36:00,480 --> 01:36:03,040
matches more of the host names

2746
01:36:03,040 --> 01:36:04,880
it will refine the regular expression to

2747
01:36:04,880 --> 01:36:07,360
build some specificity into it

2748
01:36:07,360 --> 01:36:09,040
and then when multiple regular

2749
01:36:09,040 --> 01:36:10,639
expressions are required to cover the

2750
01:36:10,639 --> 01:36:12,639
different cases within a given suffix

2751
01:36:12,639 --> 01:36:14,800
it will build a set and suggest that as

2752
01:36:14,800 --> 01:36:18,639
the rigor expressions to use

2753
01:36:18,639 --> 01:36:20,880
so the the tool that i've talked about

2754
01:36:20,880 --> 01:36:23,600
hoi ho that is publicly released as a

2755
01:36:23,600 --> 01:36:25,040
source code

2756
01:36:25,040 --> 01:36:28,000
as well as some web pages published at

2757
01:36:28,000 --> 01:36:29,040
cader that show

2758
01:36:29,040 --> 01:36:30,880
that contain a set of referred regular

2759
01:36:30,880 --> 01:36:33,199
expressions that are free to download

2760
01:36:33,199 --> 01:36:34,880
as well as web pages that demonstrate

2761
01:36:34,880 --> 01:36:36,960
how each regular expression

2762
01:36:36,960 --> 01:36:40,719
has applied to the training data um

2763
01:36:40,719 --> 01:36:42,000
particularly for this talk i'd be

2764
01:36:42,000 --> 01:36:44,719
interested to hear if there are other

2765
01:36:44,719 --> 01:36:46,639
if there is if you believe there is

2766
01:36:46,639 --> 01:36:48,639
scope to apply these techniques that are

2767
01:36:48,639 --> 01:36:49,600
focused on a

2768
01:36:49,600 --> 01:36:51,679
relatively narrow domain router host

2769
01:36:51,679 --> 01:36:52,800
names

2770
01:36:52,800 --> 01:36:55,840
to other types of host names that might

2771
01:36:55,840 --> 01:36:56,480
be present

2772
01:36:56,480 --> 01:36:59,520
in the in the dns

2773
01:36:59,520 --> 01:37:07,119
i'm welcome to take questions um

2774
01:37:07,119 --> 01:37:09,760
at this time i would like to remind the

2775
01:37:09,760 --> 01:37:12,320
audience to fill the poll that would pop

2776
01:37:12,320 --> 01:37:14,400
on your screen this is the only chance

2777
01:37:14,400 --> 01:37:16,159
to rate the talk

2778
01:37:16,159 --> 01:37:19,360
um and please go ahead and ask your

2779
01:37:19,360 --> 01:37:21,840
questions

2780
01:37:21,840 --> 01:37:25,679
we have a few minutes for questions

2781
01:37:25,920 --> 01:37:29,600
i don't see any questions coming in

2782
01:37:29,600 --> 01:37:33,119
matt so i

2783
01:37:33,119 --> 01:37:35,199
i had a quick question uh just to get it

2784
01:37:35,199 --> 01:37:36,239
started

2785
01:37:36,239 --> 01:37:38,960
uh is there any work on standardizing

2786
01:37:38,960 --> 01:37:40,400
some of these host names

2787
01:37:40,400 --> 01:37:42,960
uh or is it historically every

2788
01:37:42,960 --> 01:37:44,800
manufacturer would do it

2789
01:37:44,800 --> 01:37:48,080
based on themselves so

2790
01:37:48,080 --> 01:37:51,280
not that i am aware of um what i have

2791
01:37:51,280 --> 01:37:54,800
heard is that some there is some

2792
01:37:54,800 --> 01:37:57,920
operators might have inherited or

2793
01:37:57,920 --> 01:37:59,840
managed to obtain scripts from other

2794
01:37:59,840 --> 01:38:02,320
operators that they have used internally

2795
01:38:02,320 --> 01:38:05,600
to populate their host names um but as

2796
01:38:05,600 --> 01:38:07,119
far as i'm aware there are there is no

2797
01:38:07,119 --> 01:38:07,679
standard

2798
01:38:07,679 --> 01:38:10,639
standardized way to construct these host

2799
01:38:10,639 --> 01:38:12,800
names

2800
01:38:12,800 --> 01:38:14,719
so it's up to each individual operator

2801
01:38:14,719 --> 01:38:16,320
to decide what they're going to put in

2802
01:38:16,320 --> 01:38:17,760
these host names and how they're going

2803
01:38:17,760 --> 01:38:19,920
to structure it

2804
01:38:19,920 --> 01:38:22,880
okay thank you if you have a question

2805
01:38:22,880 --> 01:38:23,280
from

2806
01:38:23,280 --> 01:38:25,360
wes uh let's go ahead and ask you a

2807
01:38:25,360 --> 01:38:27,280
question you can invite yourself

2808
01:38:27,280 --> 01:38:29,040
hi thanks it looked like really good

2809
01:38:29,040 --> 01:38:31,199
work i i liked a lot we've done

2810
01:38:31,199 --> 01:38:33,280
similar templatizing stuff for other

2811
01:38:33,280 --> 01:38:34,719
sets of stuff that you know obviously

2812
01:38:34,719 --> 01:38:36,560
brings me to my question of

2813
01:38:36,560 --> 01:38:38,800
have you tried it with any other data

2814
01:38:38,800 --> 01:38:41,520
sets like uh host names for

2815
01:38:41,520 --> 01:38:44,400
uh you know other things besides routers

2816
01:38:44,400 --> 01:38:45,520
you know i'm trying to think there are

2817
01:38:45,520 --> 01:38:46,080
you know like

2818
01:38:46,080 --> 01:38:48,320
uh data centers and things like that

2819
01:38:48,320 --> 01:38:49,760
that have um

2820
01:38:49,760 --> 01:38:52,000
you know end hosts for computing

2821
01:38:52,000 --> 01:38:53,440
clusters and things like that have you

2822
01:38:53,440 --> 01:38:54,719
applied it to anything else or

2823
01:38:54,719 --> 01:38:57,520
just routers at this point so just

2824
01:38:57,520 --> 01:38:59,199
routers at this point and i but i'd be

2825
01:38:59,199 --> 01:39:00,320
curious to

2826
01:39:00,320 --> 01:39:03,840
understand if there are other um

2827
01:39:03,840 --> 01:39:05,040
you know other places where this

2828
01:39:05,040 --> 01:39:06,880
technique would be useful but roughly

2829
01:39:06,880 --> 01:39:07,920
sort of what it needs

2830
01:39:07,920 --> 01:39:11,360
is some well it needs the host names

2831
01:39:11,360 --> 01:39:12,000
obviously but

2832
01:39:12,000 --> 01:39:15,360
also some indication of or some feature

2833
01:39:15,360 --> 01:39:16,480
or some label

2834
01:39:16,480 --> 01:39:19,719
and it can also that label can be um

2835
01:39:19,719 --> 01:39:22,320
infertility to that we're trying to sort

2836
01:39:22,320 --> 01:39:23,040
of

2837
01:39:23,040 --> 01:39:26,639
match up the two of them

2838
01:39:26,639 --> 01:39:30,320
so that's sort of what it needs um

2839
01:39:30,320 --> 01:39:33,360
yes thanks matt

2840
01:39:33,360 --> 01:39:37,040
uh we have one question from eric klein

2841
01:39:37,040 --> 01:39:39,760
uh how much diversity alternatively

2842
01:39:39,760 --> 01:39:44,080
creativity in these patterns was found

2843
01:39:44,159 --> 01:39:47,360
uh there's well well a lot

2844
01:39:47,360 --> 01:39:51,600
um i mean the short answer is

2845
01:39:51,600 --> 01:39:53,600
i mean if you can think of this it's

2846
01:39:53,600 --> 01:39:55,040
there um

2847
01:39:55,040 --> 01:39:58,320
and even within you know a given suffix

2848
01:39:58,320 --> 01:40:02,239
um you know often these things are also

2849
01:40:02,239 --> 01:40:04,320
manually entered we even you know have

2850
01:40:04,320 --> 01:40:06,840
see things like typos and stuff so

2851
01:40:06,840 --> 01:40:09,920
um there's a lot of diversity

2852
01:40:09,920 --> 01:40:12,239
um so there's all these sort of edge

2853
01:40:12,239 --> 01:40:13,600
cases involved and

2854
01:40:13,600 --> 01:40:16,320
sort of i guess things to keep in mind

2855
01:40:16,320 --> 01:40:16,719
when

2856
01:40:16,719 --> 01:40:18,719
when sort of building the algorithm that

2857
01:40:18,719 --> 01:40:20,880
that tries to build and

2858
01:40:20,880 --> 01:40:22,639
these trigger expressions uh

2859
01:40:22,639 --> 01:40:24,080
automatically but yeah

2860
01:40:24,080 --> 01:40:27,440
there's lots of diversity there

2861
01:40:28,480 --> 01:40:32,000
uh thank you uh matt uh jacob i see you

2862
01:40:32,000 --> 01:40:33,600
have a question but please go ahead and

2863
01:40:33,600 --> 01:40:34,960
ask your question on the workshop

2864
01:40:34,960 --> 01:40:35,600
channel

2865
01:40:35,600 --> 01:40:37,920
because we are out of time for questions

2866
01:40:37,920 --> 01:40:38,719
uh

2867
01:40:38,719 --> 01:40:41,840
thank you matt and now

2868
01:40:41,840 --> 01:40:43,440
uh we are going to have the final

2869
01:40:43,440 --> 01:40:45,440
presentation for this session

2870
01:40:45,440 --> 01:40:47,679
i would like to welcome oshitaka

2871
01:40:47,679 --> 01:40:48,560
ahrinsan

2872
01:40:48,560 --> 01:40:51,280
to talk about evaluation of anti-ddos

2873
01:40:51,280 --> 01:40:51,920
features

2874
01:40:51,920 --> 01:40:55,920
in full service resolvers onto you

2875
01:40:56,080 --> 01:40:58,960
uh hello this is yushaka aharen i would

2876
01:40:58,960 --> 01:41:00,960
like to present an

2877
01:41:00,960 --> 01:41:03,520
an evaluation of antijesus features in

2878
01:41:03,520 --> 01:41:06,800
full service reserves

2879
01:41:06,960 --> 01:41:10,239
okay and first let me introduce

2880
01:41:10,239 --> 01:41:14,159
the our environment

2881
01:41:14,159 --> 01:41:18,159
we jprs operates at trd.jprs as an

2882
01:41:18,159 --> 01:41:21,199
around the platform please

2883
01:41:21,199 --> 01:41:24,239
find details in the our website

2884
01:41:24,239 --> 01:41:28,360
we have two presentations in 2017 and

2885
01:41:28,360 --> 01:41:31,520
2021 of the results

2886
01:41:31,520 --> 01:41:34,719
using their platform and

2887
01:41:34,719 --> 01:41:37,199
at this time we conducted an experiment

2888
01:41:37,199 --> 01:41:39,679
of anti-data switch functionalities

2889
01:41:39,679 --> 01:41:42,000
implemented in full service reservable

2890
01:41:42,000 --> 01:41:43,280
implementations

2891
01:41:43,280 --> 01:41:46,480
with japanese domestic isps and i am

2892
01:41:46,480 --> 01:41:48,320
going to show the results and some

2893
01:41:48,320 --> 01:41:50,880
findings

2894
01:41:52,080 --> 01:41:54,719
first let me talk about the purpose of

2895
01:41:54,719 --> 01:41:56,080
the evaluation

2896
01:41:56,080 --> 01:41:58,719
our purpose is to evaluate the ant

2897
01:41:58,719 --> 01:41:59,920
anti-data

2898
01:41:59,920 --> 01:42:02,320
functionalities with dns operators of

2899
01:42:02,320 --> 01:42:04,719
the isps

2900
01:42:04,719 --> 01:42:07,360
we try the functionalities in our

2901
01:42:07,360 --> 01:42:08,960
evaluation environment

2902
01:42:08,960 --> 01:42:11,199
and give some feedbacks to software

2903
01:42:11,199 --> 01:42:13,600
implementers if possible

2904
01:42:13,600 --> 01:42:17,040
we tried two implementations one is bind

2905
01:42:17,040 --> 01:42:17,520
nine

2906
01:42:17,520 --> 01:42:20,800
and one the other is unbound

2907
01:42:20,800 --> 01:42:23,840
we tried a fetch limit or

2908
01:42:23,840 --> 01:42:26,239
or written with features and the

2909
01:42:26,239 --> 01:42:27,119
substitute

2910
01:42:27,119 --> 01:42:30,480
and sub-expired features what we didn't

2911
01:42:30,480 --> 01:42:31,119
try

2912
01:42:31,119 --> 01:42:34,239
is to the two features and second

2913
01:42:34,239 --> 01:42:37,520
aggressive use was that jpls is assigned

2914
01:42:37,520 --> 01:42:39,360
with nsx3 of dot cell

2915
01:42:39,360 --> 01:42:43,040
so we could not try this also dns

2916
01:42:43,040 --> 01:42:46,239
dense cookies were not tried because

2917
01:42:46,239 --> 01:42:49,760
an update to rsc 7873 was ongoing

2918
01:42:49,760 --> 01:42:53,920
in dnsoft at that time of evaluation

2919
01:42:53,920 --> 01:42:57,520
next i'd like to introduce participants

2920
01:42:57,520 --> 01:43:00,080
this is a joint research effort with

2921
01:43:00,080 --> 01:43:02,800
nine domestic isps

2922
01:43:02,800 --> 01:43:06,400
we have we conducted an experiment with

2923
01:43:06,400 --> 01:43:09,199
regional and nationwide isps which is

2924
01:43:09,199 --> 01:43:10,159
cnci

2925
01:43:10,159 --> 01:43:14,480
and ncom 3-bit hotnet htnet optage

2926
01:43:14,480 --> 01:43:18,400
otnet qtnet and softbank

2927
01:43:18,400 --> 01:43:20,800
and they operate full-service reservoirs

2928
01:43:20,800 --> 01:43:22,320
for their customers

2929
01:43:22,320 --> 01:43:24,880
we cooperated with dns operators in the

2930
01:43:24,880 --> 01:43:27,520
isps

2931
01:43:27,600 --> 01:43:29,280
the purpose of each company's

2932
01:43:29,280 --> 01:43:30,639
participation is to

2933
01:43:30,639 --> 01:43:32,880
verify counter-measure technologies to

2934
01:43:32,880 --> 01:43:33,760
ensure

2935
01:43:33,760 --> 01:43:36,960
stable operation as a full fuel reserve

2936
01:43:36,960 --> 01:43:37,679
operator

2937
01:43:37,679 --> 01:43:41,600
in the event of a cyber attack

2938
01:43:42,480 --> 01:43:44,400
next i would like to introduce the

2939
01:43:44,400 --> 01:43:46,880
evaluation scenario

2940
01:43:46,880 --> 01:43:49,440
we set up a full service reserve with

2941
01:43:49,440 --> 01:43:50,000
both

2942
01:43:50,000 --> 01:43:53,199
fetch limit and some cell enabled and

2943
01:43:53,199 --> 01:43:55,360
suppose a situation that an

2944
01:43:55,360 --> 01:43:57,520
authoritative server is under diesel's

2945
01:43:57,520 --> 01:43:58,400
attack

2946
01:43:58,400 --> 01:44:02,080
which is early to 2020 thermostat of

2947
01:44:02,080 --> 01:44:04,840
gprs which is under the

2948
01:44:04,840 --> 01:44:07,600
our trd.jpls

2949
01:44:07,600 --> 01:44:11,520
it is uh in our real environment

2950
01:44:11,520 --> 01:44:13,760
we set up an authoritative server on the

2951
01:44:13,760 --> 01:44:14,639
internet and

2952
01:44:14,639 --> 01:44:16,880
generate random subdomain queries to the

2953
01:44:16,880 --> 01:44:19,119
full service reservoir

2954
01:44:19,119 --> 01:44:22,560
and fetch limit will suppress outbound

2955
01:44:22,560 --> 01:44:25,600
iterative queries

2956
01:44:26,320 --> 01:44:28,560
then the authoritative server becomes

2957
01:44:28,560 --> 01:44:30,400
not responding because of

2958
01:44:30,400 --> 01:44:33,119
a massive query from the others this

2959
01:44:33,119 --> 01:44:35,600
traffic from others increases and

2960
01:44:35,600 --> 01:44:39,199
so the victim server is not massive

2961
01:44:39,199 --> 01:44:41,520
so actually it is simulated by dropping

2962
01:44:41,520 --> 01:44:43,600
inbound queries

2963
01:44:43,600 --> 01:44:46,880
so and in this situation

2964
01:44:46,880 --> 01:44:49,520
some cell will use the stereo cache to

2965
01:44:49,520 --> 01:44:50,800
answer queries

2966
01:44:50,800 --> 01:44:53,600
and legitimate queries still can resolve

2967
01:44:53,600 --> 01:44:56,320
the domain name

2968
01:44:56,800 --> 01:44:59,679
then the victim switches to another dns

2969
01:44:59,679 --> 01:45:01,040
provider

2970
01:45:01,040 --> 01:45:03,760
the server are massive enough to absorb

2971
01:45:03,760 --> 01:45:05,040
this traffic so

2972
01:45:05,040 --> 01:45:08,560
they can query on all the traffic

2973
01:45:08,560 --> 01:45:10,880
actually it is simulated with changing

2974
01:45:10,880 --> 01:45:13,280
delegation in the parent zone to another

2975
01:45:13,280 --> 01:45:13,920
nsr

2976
01:45:13,920 --> 01:45:17,119
set however the staircase and

2977
01:45:17,119 --> 01:45:19,760
syracuse entry in full service reservoir

2978
01:45:19,760 --> 01:45:20,639
under test

2979
01:45:20,639 --> 01:45:22,960
is still used the first service

2980
01:45:22,960 --> 01:45:23,760
reservoir

2981
01:45:23,760 --> 01:45:26,000
under test answers with the sterile

2982
01:45:26,000 --> 01:45:27,040
cache

2983
01:45:27,040 --> 01:45:29,600
and after flushing the cache fresh data

2984
01:45:29,600 --> 01:45:32,400
will be returned

2985
01:45:32,719 --> 01:45:35,040
that's the evaluation scenario and we

2986
01:45:35,040 --> 01:45:36,560
tried

2987
01:45:36,560 --> 01:45:40,320
we could we tried this scenario entirely

2988
01:45:40,320 --> 01:45:43,520
and the results are in this slide

2989
01:45:43,520 --> 01:45:46,320
the combination worked as expected with

2990
01:45:46,320 --> 01:45:47,520
unbound

2991
01:45:47,520 --> 01:45:49,679
red limit restricted the number of

2992
01:45:49,679 --> 01:45:51,600
iterations to the authoritarian

2993
01:45:51,600 --> 01:45:53,920
server and the full service reserve

2994
01:45:53,920 --> 01:45:55,440
continues to respond with

2995
01:45:55,440 --> 01:45:57,199
cached answers even after the

2996
01:45:57,199 --> 01:45:58,719
authoritative server becomes not

2997
01:45:58,719 --> 01:45:59,760
responding

2998
01:45:59,760 --> 01:46:03,600
and the title of the rs set expired

2999
01:46:03,600 --> 01:46:06,719
that's the sub sale but

3000
01:46:06,719 --> 01:46:10,000
0.9 worked differently than expected

3001
01:46:10,000 --> 01:46:13,679
uh fetch restricted novel registrations

3002
01:46:13,679 --> 01:46:15,679
to the auditor server

3003
01:46:15,679 --> 01:46:18,719
this is expected result however it

3004
01:46:18,719 --> 01:46:20,400
responds with some fail

3005
01:46:20,400 --> 01:46:22,320
after the authoritative server becomes

3006
01:46:22,320 --> 01:46:24,080
not responding

3007
01:46:24,080 --> 01:46:27,280
i tried to we tried to check

3008
01:46:27,280 --> 01:46:30,320
the content of the cache with iron this

3009
01:46:30,320 --> 01:46:33,520
dump db command and it shows there is

3010
01:46:33,520 --> 01:46:37,119
a stereo cache entry but service

3011
01:46:37,119 --> 01:46:40,960
server server does not work expected

3012
01:46:40,960 --> 01:46:44,159
so and in addition to

3013
01:46:44,159 --> 01:46:46,520
the above stereo cache may be used

3014
01:46:46,520 --> 01:46:47,920
unexpectedly

3015
01:46:47,920 --> 01:46:50,639
for the evaluation uh maybe we should

3016
01:46:50,639 --> 01:46:52,159
wait some time after changing the

3017
01:46:52,159 --> 01:46:53,280
delegation to

3018
01:46:53,280 --> 01:46:56,560
see what happens in the scenario

3019
01:46:56,560 --> 01:47:01,119
three and there are some comments from

3020
01:47:01,119 --> 01:47:04,719
the dns operators which is substantial

3021
01:47:04,719 --> 01:47:05,040
in

3022
01:47:05,040 --> 01:47:07,679
binder9 does not work as expected which

3023
01:47:07,679 --> 01:47:10,159
is explained in the previous slide

3024
01:47:10,159 --> 01:47:12,560
and there is a concern on the cell cache

3025
01:47:12,560 --> 01:47:13,440
and it may

3026
01:47:13,440 --> 01:47:16,159
cause name resolution failure or getting

3027
01:47:16,159 --> 01:47:17,840
all the contents even after the

3028
01:47:17,840 --> 01:47:20,880
delegation or zone context change

3029
01:47:20,880 --> 01:47:23,760
and after the experiment we realized

3030
01:47:23,760 --> 01:47:24,080
that

3031
01:47:24,080 --> 01:47:26,080
it can be controlled with uh infrared

3032
01:47:26,080 --> 01:47:27,920
structure option

3033
01:47:27,920 --> 01:47:29,679
this is a timekeeper there is about one

3034
01:47:29,679 --> 01:47:31,360
minute all right

3035
01:47:31,360 --> 01:47:33,920
thank you and okay okay i will going to

3036
01:47:33,920 --> 01:47:35,199
the next slide

3037
01:47:35,199 --> 01:47:37,119
so we send some feedback to the

3038
01:47:37,119 --> 01:47:38,560
implementers

3039
01:47:38,560 --> 01:47:41,679
they generously gave us a response

3040
01:47:41,679 --> 01:47:44,960
for isc we told that fetches per

3041
01:47:44,960 --> 01:47:47,520
server or festival zone interface still

3042
01:47:47,520 --> 01:47:48,560
after in every

3043
01:47:48,560 --> 01:47:51,600
option it cannot be used in combination

3044
01:47:51,600 --> 01:47:54,880
and there already was an open issue

3045
01:47:54,880 --> 01:47:59,119
which is in issued number 1712

3046
01:47:59,119 --> 01:48:01,040
they confirmed that behavior seems to be

3047
01:48:01,040 --> 01:48:02,800
wrong and it has been fixed

3048
01:48:02,800 --> 01:48:05,360
in nine point six three point thirteen

3049
01:48:05,360 --> 01:48:07,840
radius which is changing entry

3050
01:48:07,840 --> 01:48:10,880
fifty five seventy three and another

3051
01:48:10,880 --> 01:48:13,119
two energetic levels we told that a

3052
01:48:13,119 --> 01:48:14,159
concern on

3053
01:48:14,159 --> 01:48:16,960
the default value of sub x five ttl is

3054
01:48:16,960 --> 01:48:18,080
set to 0

3055
01:48:18,080 --> 01:48:21,639
which is different from suggested in

3056
01:48:21,639 --> 01:48:23,600
rfc8767

3057
01:48:23,600 --> 01:48:26,880
they confirm it is a good idea to

3058
01:48:26,880 --> 01:48:29,920
change but changing it may be

3059
01:48:29,920 --> 01:48:34,480
complicated operators we agree with it

3060
01:48:35,280 --> 01:48:37,600
and the conclusion we already we

3061
01:48:37,600 --> 01:48:38,320
evaluated

3062
01:48:38,320 --> 01:48:40,560
until digital functionalities with dns

3063
01:48:40,560 --> 01:48:43,760
operators of some japanese domestic isps

3064
01:48:43,760 --> 01:48:46,480
and we found some implementations it did

3065
01:48:46,480 --> 01:48:48,880
not work as expected

3066
01:48:48,880 --> 01:48:50,719
and we gave some feedback to the

3067
01:48:50,719 --> 01:48:54,080
implementers and got positive response

3068
01:48:54,080 --> 01:48:56,000
finally i would like to express thanks

3069
01:48:56,000 --> 01:48:57,199
to isc and

3070
01:48:57,199 --> 01:48:59,280
internet troubles for handling feedback

3071
01:48:59,280 --> 01:49:00,320
from us

3072
01:49:00,320 --> 01:49:03,440
and participating isps listed in this

3073
01:49:03,440 --> 01:49:04,480
slide

3074
01:49:04,480 --> 01:49:06,879
thank you

3075
01:49:08,480 --> 01:49:11,760
thank you aaron san we don't have any

3076
01:49:11,760 --> 01:49:12,960
time for questions

3077
01:49:12,960 --> 01:49:16,159
at this time uh audience uh please go

3078
01:49:16,159 --> 01:49:18,080
ahead and fill the poll and if you have

3079
01:49:18,080 --> 01:49:19,920
any questions foreign

3080
01:49:19,920 --> 01:49:23,119
please ask them on the workshop channel

3081
01:49:23,119 --> 01:49:26,480
thank you and on to keith for wrapping

3082
01:49:26,480 --> 01:49:28,159
up this session

3083
01:49:28,159 --> 01:49:30,239
okay uh thank you pallavi and thank you

3084
01:49:30,239 --> 01:49:31,599
manor for um

3085
01:49:31,599 --> 01:49:33,840
being section chair and timekeeper for

3086
01:49:33,840 --> 01:49:34,880
that session

3087
01:49:34,880 --> 01:49:37,280
and thank you to all our speakers um

3088
01:49:37,280 --> 01:49:38,800
we're now going to break

3089
01:49:38,800 --> 01:49:40,880
um before we do that i would just like

3090
01:49:40,880 --> 01:49:42,159
to thank the

3091
01:49:42,159 --> 01:49:44,159
sponsors of our workshop this time

3092
01:49:44,159 --> 01:49:45,520
around it's farsight and

3093
01:49:45,520 --> 01:49:48,239
farsight and verisign um we're going to

3094
01:49:48,239 --> 01:49:50,320
be breaking for 85 minutes so we will

3095
01:49:50,320 --> 01:49:52,960
restart at 4 30 a.m utc

3096
01:49:52,960 --> 01:49:55,840
sharp um if you want to hang out with

3097
01:49:55,840 --> 01:49:56,480
people

3098
01:49:56,480 --> 01:49:58,880
um socially um during the break you can

3099
01:49:58,880 --> 01:50:01,199
use a spatial chat platform

3100
01:50:01,199 --> 01:50:04,000
um you'll see details of that on the

3101
01:50:04,000 --> 01:50:04,880
rolling slides

3102
01:50:04,880 --> 01:50:06,239
i see there's quite a few people in

3103
01:50:06,239 --> 01:50:07,760
there i've grabbed the best seats

3104
01:50:07,760 --> 01:50:08,400
already

3105
01:50:08,400 --> 01:50:12,560
so um we'll see how that goes um

3106
01:50:12,560 --> 01:50:15,920
and that's basically it

3107
01:50:15,920 --> 01:50:24,719
see you in 85 minutes time

3108
01:50:24,719 --> 01:50:28,239
welcome back everybody please have a

3109
01:50:28,239 --> 01:50:29,840
seat we are going to get started with

3110
01:50:29,840 --> 01:50:32,159
session three and four of i guess this

3111
01:50:32,159 --> 01:50:33,760
afternoon for some people

3112
01:50:33,760 --> 01:50:36,800
dns 35 day one

3113
01:50:36,800 --> 01:50:38,719
uh before getting started i would like

3114
01:50:38,719 --> 01:50:40,639
to thanks our sponsors farsight

3115
01:50:40,639 --> 01:50:43,920
and bersine i am manu rotel and i will

3116
01:50:43,920 --> 01:50:45,760
be sharing these afternoon sessions and

3117
01:50:45,760 --> 01:50:47,360
i'm joined by william

3118
01:50:47,360 --> 01:50:49,679
thorup um who is going to be the

3119
01:50:49,679 --> 01:50:51,440
timekeeper

3120
01:50:51,440 --> 01:50:53,040
without further ado let me introduce our

3121
01:50:53,040 --> 01:50:55,360
first speaker sudhir singala

3122
01:50:55,360 --> 01:50:57,520
he's going to talk about obvious dns or

3123
01:50:57,520 --> 01:50:59,040
https

3124
01:50:59,040 --> 01:51:02,800
or practical privacy announcement to dns

3125
01:51:02,800 --> 01:51:05,599
sudish whenever you're ready perfect

3126
01:51:05,599 --> 01:51:06,800
thank you

3127
01:51:06,800 --> 01:51:09,599
um hi everyone thank you for being here

3128
01:51:09,599 --> 01:51:10,239
today

3129
01:51:10,239 --> 01:51:12,880
um i'm siddish i'm a phd student a

3130
01:51:12,880 --> 01:51:14,560
second year phd student at the

3131
01:51:14,560 --> 01:51:16,159
university of washington

3132
01:51:16,159 --> 01:51:18,560
and i'll be presenting the feasibility

3133
01:51:18,560 --> 01:51:19,360
of a new

3134
01:51:19,360 --> 01:51:22,159
privacy enhancing dns protocol called

3135
01:51:22,159 --> 01:51:26,000
odo or oblivious dns over https

3136
01:51:26,000 --> 01:51:28,320
this was a part of my internship work at

3137
01:51:28,320 --> 01:51:29,920
cloudflare over the last summer

3138
01:51:29,920 --> 01:51:32,320
and it would not have been possible not

3139
01:51:32,320 --> 01:51:34,480
have been made possible without

3140
01:51:34,480 --> 01:51:36,400
all the incredible collaborators and i'm

3141
01:51:36,400 --> 01:51:38,400
very excited to actually be representing

3142
01:51:38,400 --> 01:51:40,320
all of them in today's talk

3143
01:51:40,320 --> 01:51:42,159
uh this this work has recently been

3144
01:51:42,159 --> 01:51:44,480
accepted to uh the privacy enhancing

3145
01:51:44,480 --> 01:51:47,360
technology symposium 2021.

3146
01:51:47,360 --> 01:51:49,520
so as a quick introduction and most of

3147
01:51:49,520 --> 01:51:50,960
you would already know

3148
01:51:50,960 --> 01:51:53,199
dns is the domain name system and is

3149
01:51:53,199 --> 01:51:54,320
really the foundation

3150
01:51:54,320 --> 01:51:56,960
of the human usable internet today and

3151
01:51:56,960 --> 01:51:58,719
it kind of responds to client queries

3152
01:51:58,719 --> 01:52:00,480
for host names with corresponding ip

3153
01:52:00,480 --> 01:52:02,800
addresses and any records that it

3154
01:52:02,800 --> 01:52:06,000
it has traditionally the dns protocol is

3155
01:52:06,000 --> 01:52:08,080
not encrypted and it uses udp

3156
01:52:08,080 --> 01:52:10,159
there are other variants which exist but

3157
01:52:10,159 --> 01:52:12,560
udp continues to be a majority of the

3158
01:52:12,560 --> 01:52:14,639
traffic that is received by the public

3159
01:52:14,639 --> 01:52:16,400
recursive resolver that cloudflare

3160
01:52:16,400 --> 01:52:17,360
operates

3161
01:52:17,360 --> 01:52:20,480
and the the usage of non-encrypted dns

3162
01:52:20,480 --> 01:52:22,480
kind of leaks user information to

3163
01:52:22,480 --> 01:52:23,760
network operators

3164
01:52:23,760 --> 01:52:26,159
to on path adversaries who are observing

3165
01:52:26,159 --> 01:52:28,080
the network and even active attackers

3166
01:52:28,080 --> 01:52:29,760
who are trying to modify the request

3167
01:52:29,760 --> 01:52:31,440
from the client or the response

3168
01:52:31,440 --> 01:52:35,119
from the resolver to to overcome some of

3169
01:52:35,119 --> 01:52:36,880
these problems there have been recent

3170
01:52:36,880 --> 01:52:40,320
efforts to secure dns using dns over tls

3171
01:52:40,320 --> 01:52:43,440
dot or dns over https or doh

3172
01:52:43,440 --> 01:52:45,360
and these have been gaining popularity

3173
01:52:45,360 --> 01:52:46,960
and have been integrated into various

3174
01:52:46,960 --> 01:52:47,840
web browsers

3175
01:52:47,840 --> 01:52:51,520
operating and operating systems so um

3176
01:52:51,520 --> 01:52:53,599
these protocols protect the client

3177
01:52:53,599 --> 01:52:55,920
traffic from being observed by onlookers

3178
01:52:55,920 --> 01:52:58,320
or being intercepted and changed by on

3179
01:52:58,320 --> 01:52:59,360
path attackers

3180
01:52:59,360 --> 01:53:01,920
but a problem kind of still remains uh

3181
01:53:01,920 --> 01:53:03,360
the resolver operator can

3182
01:53:03,360 --> 01:53:06,320
continue to associate which client and

3183
01:53:06,320 --> 01:53:08,239
their ip address and build a profile

3184
01:53:08,239 --> 01:53:10,560
around their browsing pattern

3185
01:53:10,560 --> 01:53:12,880
so over the last few years we've

3186
01:53:12,880 --> 01:53:13,840
actually seen

3187
01:53:13,840 --> 01:53:15,840
as a research community uh lots of

3188
01:53:15,840 --> 01:53:17,599
active measurement research trying to

3189
01:53:17,599 --> 01:53:19,679
understand and measure the impacts of

3190
01:53:19,679 --> 01:53:22,639
encrypted protocols like doh or dot

3191
01:53:22,639 --> 01:53:24,960
and many large scale measurements have

3192
01:53:24,960 --> 01:53:26,800
shown that the performance of encrypted

3193
01:53:26,800 --> 01:53:28,800
protocols vary by the choice of the

3194
01:53:28,800 --> 01:53:29,760
resolver

3195
01:53:29,760 --> 01:53:31,760
and it does not significantly impact

3196
01:53:31,760 --> 01:53:33,679
page load times and it improves user

3197
01:53:33,679 --> 01:53:34,800
security

3198
01:53:34,800 --> 01:53:37,440
so there have also been various attempts

3199
01:53:37,440 --> 01:53:38,080
to

3200
01:53:38,080 --> 01:53:40,000
improving page load times by doing dns

3201
01:53:40,000 --> 01:53:41,440
prefetching

3202
01:53:41,440 --> 01:53:45,040
but while while doh did kind of improve

3203
01:53:45,040 --> 01:53:46,400
the security of

3204
01:53:46,400 --> 01:53:49,440
dns queries for clients it also received

3205
01:53:49,440 --> 01:53:51,040
a lot of criticism

3206
01:53:51,040 --> 01:53:53,040
about the small number of publicly

3207
01:53:53,040 --> 01:53:54,880
available resolvers

3208
01:53:54,880 --> 01:53:56,960
essentially centralizing the internet

3209
01:53:56,960 --> 01:53:58,800
and giving these organizations a lot of

3210
01:53:58,800 --> 01:54:00,320
control

3211
01:54:00,320 --> 01:54:02,239
these resolver operators can also

3212
01:54:02,239 --> 01:54:04,239
associate the client queries with the

3213
01:54:04,239 --> 01:54:06,560
client ip addresses and use the ip to

3214
01:54:06,560 --> 01:54:08,719
geolocate the client

3215
01:54:08,719 --> 01:54:11,040
so to maintain privacy guarantees some

3216
01:54:11,040 --> 01:54:13,360
operators like cloudflare actively purge

3217
01:54:13,360 --> 01:54:15,840
this data that is exceeding 24 hours

3218
01:54:15,840 --> 01:54:18,080
and give their users a privacy policy

3219
01:54:18,080 --> 01:54:19,679
based guarantees

3220
01:54:19,679 --> 01:54:21,360
but bringing together so many

3221
01:54:21,360 --> 01:54:23,840
organizations to agree to a common set

3222
01:54:23,840 --> 01:54:25,920
of privacy practices to maintain user

3223
01:54:25,920 --> 01:54:27,920
privacy it requires a lot of explicit

3224
01:54:27,920 --> 01:54:29,679
negotiation and effort

3225
01:54:29,679 --> 01:54:31,760
and mozilla for example has been

3226
01:54:31,760 --> 01:54:32,960
actively

3227
01:54:32,960 --> 01:54:35,679
doing a lot of work with the trr program

3228
01:54:35,679 --> 01:54:37,840
and does frequent audits before a door

3229
01:54:37,840 --> 01:54:39,599
service can actually be

3230
01:54:39,599 --> 01:54:41,599
configured as the preset default of the

3231
01:54:41,599 --> 01:54:43,440
firefox browser

3232
01:54:43,440 --> 01:54:46,080
and some users might find might be

3233
01:54:46,080 --> 01:54:48,000
comfortable might might find this idea

3234
01:54:48,000 --> 01:54:50,320
of a policy driven approach to be okay

3235
01:54:50,320 --> 01:54:52,480
but these are difficult to enforce and

3236
01:54:52,480 --> 01:54:53,760
are really time consuming

3237
01:54:53,760 --> 01:54:56,000
and making users kind of want a system

3238
01:54:56,000 --> 01:54:57,760
that is that can technologically

3239
01:54:57,760 --> 01:54:59,360
guarantee their privacy

3240
01:54:59,360 --> 01:55:01,440
so in in this talk i'll kind of focus on

3241
01:55:01,440 --> 01:55:03,199
the privacy critiques and

3242
01:55:03,199 --> 01:55:05,119
the ability for resolvers to be able to

3243
01:55:05,119 --> 01:55:06,400
create a profile

3244
01:55:06,400 --> 01:55:09,520
and that's exactly where the oblivious

3245
01:55:09,520 --> 01:55:12,560
dns over https or odo kicks in

3246
01:55:12,560 --> 01:55:15,040
so at a high level there are three main

3247
01:55:15,040 --> 01:55:15,760
components

3248
01:55:15,760 --> 01:55:18,080
in odo the the first are the clients who

3249
01:55:18,080 --> 01:55:19,520
prepare a query for which they would

3250
01:55:19,520 --> 01:55:20,639
like a response

3251
01:55:20,639 --> 01:55:22,719
and the goal of the clients in odo is to

3252
01:55:22,719 --> 01:55:24,800
be able to successfully send encrypted

3253
01:55:24,800 --> 01:55:25,599
messages

3254
01:55:25,599 --> 01:55:28,080
and receive valid responses to decrypt

3255
01:55:28,080 --> 01:55:28,800
and in the

3256
01:55:28,800 --> 01:55:31,040
process be able to identify if there are

3257
01:55:31,040 --> 01:55:33,040
any malicious actors or take any

3258
01:55:33,040 --> 01:55:34,159
corrective actions as

3259
01:55:34,159 --> 01:55:37,760
necessary the second is a proxy instance

3260
01:55:37,760 --> 01:55:38,880
whose main role

3261
01:55:38,880 --> 01:55:41,040
is to relay the encrypted queries from

3262
01:55:41,040 --> 01:55:41,920
the clients

3263
01:55:41,920 --> 01:55:44,320
to and from a target which uh while

3264
01:55:44,320 --> 01:55:46,480
removing the ip addresses of the client

3265
01:55:46,480 --> 01:55:49,280
uh that the uh who's speaking to the

3266
01:55:49,280 --> 01:55:51,280
proxy

3267
01:55:51,280 --> 01:55:53,119
and and the third is is the target

3268
01:55:53,119 --> 01:55:54,320
instance which is

3269
01:55:54,320 --> 01:55:56,000
which receives the encrypted query from

3270
01:55:56,000 --> 01:55:57,599
the client and it decrypts it and

3271
01:55:57,599 --> 01:56:00,000
obtains the dns response for the query

3272
01:56:00,000 --> 01:56:02,080
and the target's role is to then prepare

3273
01:56:02,080 --> 01:56:04,159
the encrypted response and send it back

3274
01:56:04,159 --> 01:56:07,199
to the proxy with no ability to identify

3275
01:56:07,199 --> 01:56:10,960
the client by their ip addresses

3276
01:56:11,520 --> 01:56:13,199
at a high level the design of odo is

3277
01:56:13,199 --> 01:56:15,040
similar to that of doe it kind of builds

3278
01:56:15,040 --> 01:56:15,679
on it

3279
01:56:15,679 --> 01:56:17,679
but it injects this intermediate proxy

3280
01:56:17,679 --> 01:56:19,679
node which terminates the client query

3281
01:56:19,679 --> 01:56:20,080
queue

3282
01:56:20,080 --> 01:56:22,560
in this diagram and performs the query

3283
01:56:22,560 --> 01:56:24,239
on the client's behalf

3284
01:56:24,239 --> 01:56:26,320
and the guarantees for privacy however

3285
01:56:26,320 --> 01:56:28,239
make this slightly different from a

3286
01:56:28,239 --> 01:56:29,599
proxy door variant

3287
01:56:29,599 --> 01:56:31,280
where a client's door query can be

3288
01:56:31,280 --> 01:56:33,679
terminated and performed by the proxy

3289
01:56:33,679 --> 01:56:36,320
and the main goal of odo here is to is

3290
01:56:36,320 --> 01:56:38,480
to prevent the recursive resolvers

3291
01:56:38,480 --> 01:56:41,040
and the isps running such resolvers from

3292
01:56:41,040 --> 01:56:42,239
being able to link

3293
01:56:42,239 --> 01:56:44,719
clients to their requests and the

3294
01:56:44,719 --> 01:56:46,000
security model here

3295
01:56:46,000 --> 01:56:48,639
it builds on the premise that the proxy

3296
01:56:48,639 --> 01:56:50,960
and the targets actually do not collude

3297
01:56:50,960 --> 01:56:52,800
and that's a critical part of the design

3298
01:56:52,800 --> 01:56:54,800
so clients need to choose proxies and

3299
01:56:54,800 --> 01:56:56,800
targets such that they are not operated

3300
01:56:56,800 --> 01:56:58,239
by the same entity

3301
01:56:58,239 --> 01:56:59,920
or they are not known to be colluding

3302
01:56:59,920 --> 01:57:01,599
organizations

3303
01:57:01,599 --> 01:57:04,080
so we assumed the extended olivier of

3304
01:57:04,080 --> 01:57:06,239
adversaries who have this ability to

3305
01:57:06,239 --> 01:57:07,760
create drop and modify

3306
01:57:07,760 --> 01:57:09,760
network messages and also give them the

3307
01:57:09,760 --> 01:57:11,840
ability to compromise tls sessions in

3308
01:57:11,840 --> 01:57:13,520
our analysis of the security of this

3309
01:57:13,520 --> 01:57:14,639
protocol

3310
01:57:14,639 --> 01:57:16,960
and practically colluding adversaries on

3311
01:57:16,960 --> 01:57:19,119
various network links who can decrypt

3312
01:57:19,119 --> 01:57:19,840
the connection

3313
01:57:19,840 --> 01:57:22,320
uh to read any of the message contents

3314
01:57:22,320 --> 01:57:23,199
they can create

3315
01:57:23,199 --> 01:57:25,280
associations or correlations between the

3316
01:57:25,280 --> 01:57:26,800
encrypted query and the encrypted

3317
01:57:26,800 --> 01:57:27,920
response

3318
01:57:27,920 --> 01:57:31,119
and uh this is also true if the resolver

3319
01:57:31,119 --> 01:57:33,199
secret key is is compromised

3320
01:57:33,199 --> 01:57:35,679
so in in the order protocol the client

3321
01:57:35,679 --> 01:57:38,159
encrypts the dns query using a hybrid

3322
01:57:38,159 --> 01:57:39,760
public key encryption scheme

3323
01:57:39,760 --> 01:57:41,599
and a validated public key from the

3324
01:57:41,599 --> 01:57:43,119
target resolver

3325
01:57:43,119 --> 01:57:44,560
and it sends a query with an

3326
01:57:44,560 --> 01:57:46,400
encapsulated symmetric key

3327
01:57:46,400 --> 01:57:48,639
from an authenticated encryption scheme

3328
01:57:48,639 --> 01:57:50,159
to a proxy instance

3329
01:57:50,159 --> 01:57:51,679
there are various ways in which the

3330
01:57:51,679 --> 01:57:53,280
clients can actually learn about these

3331
01:57:53,280 --> 01:57:54,000
services

3332
01:57:54,000 --> 01:57:56,880
and they validate them using dns sec or

3333
01:57:56,880 --> 01:57:58,400
they can actually look for conflicting

3334
01:57:58,400 --> 01:57:58,880
keys

3335
01:57:58,880 --> 01:58:02,800
for the same resolvers so in in odo

3336
01:58:02,800 --> 01:58:05,280
the the proxy instance can see the ip

3337
01:58:05,280 --> 01:58:06,639
address of the client but not the

3338
01:58:06,639 --> 01:58:08,239
contents of the dns query

3339
01:58:08,239 --> 01:58:09,760
and it forwards this message to the

3340
01:58:09,760 --> 01:58:11,599
oblivious target which decrypts the

3341
01:58:11,599 --> 01:58:12,880
query and decapsulates

3342
01:58:12,880 --> 01:58:15,040
a symmetric key and it obtains the

3343
01:58:15,040 --> 01:58:16,800
response from the resolver

3344
01:58:16,800 --> 01:58:18,719
and the response is encrypted by the

3345
01:58:18,719 --> 01:58:20,560
oblivious target using the symmetric key

3346
01:58:20,560 --> 01:58:22,239
that it that it decapsulated

3347
01:58:22,239 --> 01:58:24,400
and it is sent back to the proxy who

3348
01:58:24,400 --> 01:58:25,679
sees the message

3349
01:58:25,679 --> 01:58:27,199
who sends this message to the to the

3350
01:58:27,199 --> 01:58:28,880
client and actually can't see

3351
01:58:28,880 --> 01:58:30,560
this message other than a bunch of

3352
01:58:30,560 --> 01:58:31,920
encrypted bytes

3353
01:58:31,920 --> 01:58:34,719
so in this process the target only sees

3354
01:58:34,719 --> 01:58:36,560
the dns contents and it's not

3355
01:58:36,560 --> 01:58:39,920
the actual client's ip address

3356
01:58:39,920 --> 01:58:42,480
so we we often say that the target and

3357
01:58:42,480 --> 01:58:44,400
resolver as independent entities

3358
01:58:44,400 --> 01:58:46,800
but this need not really be the case

3359
01:58:46,800 --> 01:58:48,000
ideally in practice

3360
01:58:48,000 --> 01:58:49,760
for performance reasons the oblivious

3361
01:58:49,760 --> 01:58:51,520
target and the recursive resolver could

3362
01:58:51,520 --> 01:58:52,719
be co-located

3363
01:58:52,719 --> 01:58:54,719
and this avoids the additional network

3364
01:58:54,719 --> 01:58:55,920
messages that is sent

3365
01:58:55,920 --> 01:58:58,880
between the target and the resolver but

3366
01:58:58,880 --> 01:59:00,960
it is still possible to maintain these

3367
01:59:00,960 --> 01:59:02,880
as individual services without any

3368
01:59:02,880 --> 01:59:04,960
service collocation

3369
01:59:04,960 --> 01:59:06,239
so with the understanding of the

3370
01:59:06,239 --> 01:59:08,400
protocol in place there were actually

3371
01:59:08,400 --> 01:59:09,840
three main research questions which

3372
01:59:09,840 --> 01:59:11,920
interested us what is the impact of odo

3373
01:59:11,920 --> 01:59:13,840
on the dns response times

3374
01:59:13,840 --> 01:59:15,760
and how does using odo actually affect

3375
01:59:15,760 --> 01:59:18,400
page load times on any user experiences

3376
01:59:18,400 --> 01:59:20,560
and also how does odo compare itself to

3377
01:59:20,560 --> 01:59:22,239
other privacy enhancing protocol

3378
01:59:22,239 --> 01:59:24,320
variants that are out there today

3379
01:59:24,320 --> 01:59:26,080
and this kind of helped us understand

3380
01:59:26,080 --> 01:59:28,400
what the cost of privacy is for the user

3381
01:59:28,400 --> 01:59:30,239
while maintaining the security

3382
01:59:30,239 --> 01:59:32,239
guarantees provided by encrypted dns

3383
01:59:32,239 --> 01:59:33,920
protocols

3384
01:59:33,920 --> 01:59:37,119
and uh this slide uh it summarizes all

3385
01:59:37,119 --> 01:59:38,719
our results from the measurement study

3386
01:59:38,719 --> 01:59:40,320
but i'll leave this here so that you can

3387
01:59:40,320 --> 01:59:42,400
get back to it and i'll go into detail

3388
01:59:42,400 --> 01:59:45,840
for each one of these results so

3389
01:59:45,840 --> 01:59:47,679
for the measurements that that we did in

3390
01:59:47,679 --> 01:59:50,560
this work we implemented and deployed

3391
01:59:50,560 --> 01:59:53,199
uh the oblivious targets and proxies

3392
01:59:53,199 --> 01:59:54,400
using google cloud and

3393
01:59:54,400 --> 01:59:56,159
a serverless platform on cloudflare

3394
01:59:56,159 --> 01:59:58,080
workers and we physically

3395
01:59:58,080 --> 02:00:00,159
separated the oblivious target instances

3396
02:00:00,159 --> 02:00:02,080
from the resolvers and we randomized the

3397
02:00:02,080 --> 02:00:02,800
query

3398
02:00:02,800 --> 02:00:05,199
uh that that we used in our measurements

3399
02:00:05,199 --> 02:00:06,080
so we used

3400
02:00:06,080 --> 02:00:08,000
nine google cloud data center locations

3401
02:00:08,000 --> 02:00:09,840
to do this measurement uh seven across

3402
02:00:09,840 --> 02:00:10,800
the us

3403
02:00:10,800 --> 02:00:12,880
one in montreal in canada and one in sao

3404
02:00:12,880 --> 02:00:14,159
paulo in brazil

3405
02:00:14,159 --> 02:00:16,239
and there are 10 client instances that

3406
02:00:16,239 --> 02:00:17,920
are running at each one of these vantage

3407
02:00:17,920 --> 02:00:19,280
points and they're performing an

3408
02:00:19,280 --> 02:00:19,840
experiment

3409
02:00:19,840 --> 02:00:22,239
sending dns requests at a rate of 15

3410
02:00:22,239 --> 02:00:23,440
requests per minute

3411
02:00:23,440 --> 02:00:25,760
and the average bandwidth for all the

3412
02:00:25,760 --> 02:00:26,880
clients that were

3413
02:00:26,880 --> 02:00:28,639
running on a single core processor were

3414
02:00:28,639 --> 02:00:30,400
480 megabits per second but this was

3415
02:00:30,400 --> 02:00:34,080
never really stressed out or maxed out

3416
02:00:34,080 --> 02:00:36,400
this is the time keeper you have five

3417
02:00:36,400 --> 02:00:37,920
minutes until queuing

3418
02:00:37,920 --> 02:00:41,360
yeah thank you um so yeah i'll try to go

3419
02:00:41,360 --> 02:00:42,400
a little quicker

3420
02:00:42,400 --> 02:00:45,119
and uh the clients actually perform

3421
02:00:45,119 --> 02:00:46,880
these dns response time measurements and

3422
02:00:46,880 --> 02:00:47,520
they choose

3423
02:00:47,520 --> 02:00:50,000
pairs of available proxies and targets

3424
02:00:50,000 --> 02:00:50,719
and

3425
02:00:50,719 --> 02:00:52,880
so by choosing a low latency proxy

3426
02:00:52,880 --> 02:00:54,800
target pair for the measurement which is

3427
02:00:54,800 --> 02:00:57,040
the orange line that you see here we

3428
02:00:57,040 --> 02:00:59,040
find that the average query response

3429
02:00:59,040 --> 02:00:59,360
time

3430
02:00:59,360 --> 02:01:01,920
improves by 22.8 percent compared to

3431
02:01:01,920 --> 02:01:04,239
choosing only a low latency proxy

3432
02:01:04,239 --> 02:01:06,159
and this kind of hints towards the fact

3433
02:01:06,159 --> 02:01:08,000
that having an intermediate proxy that

3434
02:01:08,000 --> 02:01:09,440
is on the same network path

3435
02:01:09,440 --> 02:01:11,199
to the target will actually improve the

3436
02:01:11,199 --> 02:01:12,560
response time performance

3437
02:01:12,560 --> 02:01:15,119
while maintaining privacy this then

3438
02:01:15,119 --> 02:01:16,480
brings up the question of connection

3439
02:01:16,480 --> 02:01:18,800
reuse right and connection reuse is this

3440
02:01:18,800 --> 02:01:19,840
optimization

3441
02:01:19,840 --> 02:01:22,080
that that can enable clients to improve

3442
02:01:22,080 --> 02:01:24,080
their performance by at least 48

3443
02:01:24,080 --> 02:01:26,560
at the median and it avoids unnecessary

3444
02:01:26,560 --> 02:01:28,320
tcp and dls handshakes

3445
02:01:28,320 --> 02:01:30,480
but the reuse of the connection could

3446
02:01:30,480 --> 02:01:32,480
leak some client identity information

3447
02:01:32,480 --> 02:01:34,159
but it still does not leak

3448
02:01:34,159 --> 02:01:35,920
any information about the query or the

3449
02:01:35,920 --> 02:01:38,000
responses by itself

3450
02:01:38,000 --> 02:01:40,239
so in in the experimental setup that we

3451
02:01:40,239 --> 02:01:42,080
had we kind of evaluate for the worst

3452
02:01:42,080 --> 02:01:43,520
case performance and incur this

3453
02:01:43,520 --> 02:01:45,360
additional network latency between the

3454
02:01:45,360 --> 02:01:47,119
target and the resolver

3455
02:01:47,119 --> 02:01:50,159
but the if you see here the target

3456
02:01:50,159 --> 02:01:52,000
instances which are located in google

3457
02:01:52,000 --> 02:01:54,080
cloud and performing queries to three

3458
02:01:54,080 --> 02:01:56,560
public resolvers randomly have faster

3459
02:01:56,560 --> 02:01:58,480
response time from google dns

3460
02:01:58,480 --> 02:02:00,239
because of the potential co-location

3461
02:02:00,239 --> 02:02:02,000
within the same data center compared to

3462
02:02:02,000 --> 02:02:03,280
other services

3463
02:02:03,280 --> 02:02:06,239
and integrating the oblivious target uh

3464
02:02:06,239 --> 02:02:08,320
into the recursive resolver can reduce

3465
02:02:08,320 --> 02:02:09,520
this network latency

3466
02:02:09,520 --> 02:02:12,719
to that of a cache hit so uh

3467
02:02:12,719 --> 02:02:14,239
this is this is what we've engineered

3468
02:02:14,239 --> 02:02:16,000
into a public resolver that's operated

3469
02:02:16,000 --> 02:02:17,520
by cloudflare as a public service for

3470
02:02:17,520 --> 02:02:19,520
anyone to use today

3471
02:02:19,520 --> 02:02:21,760
and to understand the performance of odo

3472
02:02:21,760 --> 02:02:23,599
we kind of compare this to other

3473
02:02:23,599 --> 02:02:25,599
protocols offering similar privacy or

3474
02:02:25,599 --> 02:02:27,679
security guarantees and use dough as the

3475
02:02:27,679 --> 02:02:30,000
baseline protocol which is here on

3476
02:02:30,000 --> 02:02:32,960
shown as the blue line and the do-over

3477
02:02:32,960 --> 02:02:33,440
tour

3478
02:02:33,440 --> 02:02:35,360
is this variant of dough which provides

3479
02:02:35,360 --> 02:02:37,520
both security and privacy guarantees in

3480
02:02:37,520 --> 02:02:39,280
addition to some stronger anonymity

3481
02:02:39,280 --> 02:02:40,000
guarantees

3482
02:02:40,000 --> 02:02:42,320
and this is the orange line that you see

3483
02:02:42,320 --> 02:02:43,440
to the extreme right

3484
02:02:43,440 --> 02:02:47,839
and when compared to odo that's in green

3485
02:02:48,239 --> 02:02:52,080
sorry we noticed that odo

3486
02:02:52,080 --> 02:02:54,239
with like no service co-location kind of

3487
02:02:54,239 --> 02:02:55,679
achieves this interesting position

3488
02:02:55,679 --> 02:02:56,880
roughly in between

3489
02:02:56,880 --> 02:02:59,360
dough and dovator and the results get

3490
02:02:59,360 --> 02:03:00,239
more interesting

3491
02:03:00,239 --> 02:03:03,119
as we uh start to kind of co-locate our

3492
02:03:03,119 --> 02:03:03,840
services

3493
02:03:03,840 --> 02:03:06,719
and uh we notice that on an average uh

3494
02:03:06,719 --> 02:03:07,840
it improves

3495
02:03:07,840 --> 02:03:11,280
by uh on an average it improves it

3496
02:03:11,280 --> 02:03:14,400
it slows down by 50 uh and when when

3497
02:03:14,400 --> 02:03:16,719
there is service co-location and 100

3498
02:03:16,719 --> 02:03:18,239
when the target and the resolvers are

3499
02:03:18,239 --> 02:03:20,080
actually not co-located

3500
02:03:20,080 --> 02:03:22,239
and dns protocols with message

3501
02:03:22,239 --> 02:03:24,159
encryption like dns script

3502
02:03:24,159 --> 02:03:25,840
they tend to have much larger compute

3503
02:03:25,840 --> 02:03:27,760
overheads and use non-encrypted channels

3504
02:03:27,760 --> 02:03:29,280
and these protocols have much higher

3505
02:03:29,280 --> 02:03:30,320
response time

3506
02:03:30,320 --> 02:03:32,480
uh and lies somewhere between odo and

3507
02:03:32,480 --> 02:03:33,360
avatar

3508
02:03:33,360 --> 02:03:35,520
which is in the started line so i'll

3509
02:03:35,520 --> 02:03:37,440
keep it short for this talk but here

3510
02:03:37,440 --> 02:03:39,199
uh is a slide for your reference which

3511
02:03:39,199 --> 02:03:40,800
you could revisit to see the different

3512
02:03:40,800 --> 02:03:42,400
comparisons of the various

3513
02:03:42,400 --> 02:03:44,639
network architectural variants and where

3514
02:03:44,639 --> 02:03:45,920
odo kind of fits in

3515
02:03:45,920 --> 02:03:47,840
along with the protocol security and

3516
02:03:47,840 --> 02:03:49,360
privacy guarantees

3517
02:03:49,360 --> 02:03:50,719
and there's a link to the production

3518
02:03:50,719 --> 02:03:52,719
service which is uh the case of

3519
02:03:52,719 --> 02:03:54,639
co-located odo that cloudflare operates

3520
02:03:54,639 --> 02:03:55,520
today

3521
02:03:55,520 --> 02:03:57,280
and this brings us to the crucial

3522
02:03:57,280 --> 02:03:58,719
measurement that we're really interested

3523
02:03:58,719 --> 02:03:59,040
in

3524
02:03:59,040 --> 02:04:01,280
the page load time impact and to do this

3525
02:04:01,280 --> 02:04:02,960
uh we established a new uh

3526
02:04:02,960 --> 02:04:04,800
measurement node in a lab network

3527
02:04:04,800 --> 02:04:06,880
connected to a commercial isp

3528
02:04:06,880 --> 02:04:09,199
and there is a local stab resolver which

3529
02:04:09,199 --> 02:04:10,239
is configured to use

3530
02:04:10,239 --> 02:04:12,960
do or odo for different runs and we

3531
02:04:12,960 --> 02:04:14,480
browse a bunch of web pages

3532
02:04:14,480 --> 02:04:16,480
retrieve the har files for each one of

3533
02:04:16,480 --> 02:04:17,599
these web pages

3534
02:04:17,599 --> 02:04:21,520
and then identify that using odo with an

3535
02:04:21,520 --> 02:04:23,599
off path proxy it kind it increases the

3536
02:04:23,599 --> 02:04:25,440
page load time by 13

3537
02:04:25,440 --> 02:04:28,880
compared to baseline udp and uh

3538
02:04:28,880 --> 02:04:32,239
using dough with the non-co-located uh

3539
02:04:32,239 --> 02:04:35,520
variant uh and also the non-cool like

3540
02:04:35,520 --> 02:04:38,719
the variant and the the the average

3541
02:04:38,719 --> 02:04:40,960
content uh page time actually changes

3542
02:04:40,960 --> 02:04:44,000
from 1.8 seconds with udp based

3543
02:04:44,000 --> 02:04:46,800
uh dns to two seconds with odo and the

3544
02:04:46,800 --> 02:04:47,360
results

3545
02:04:47,360 --> 02:04:49,679
so far look look optimistic and we're

3546
02:04:49,679 --> 02:04:51,119
we're currently looking at more

3547
02:04:51,119 --> 02:04:52,320
telemetry to see

3548
02:04:52,320 --> 02:04:55,679
uh how this looks like in clients and

3549
02:04:55,679 --> 02:04:58,960
in in in summary like odo is a practical

3550
02:04:58,960 --> 02:05:01,679
uh privacy enhancing protocol for dns

3551
02:05:01,679 --> 02:05:04,000
with a minimal page load time impact

3552
02:05:04,000 --> 02:05:05,520
and the performance impacts of the

3553
02:05:05,520 --> 02:05:07,040
protocol are purely like network

3554
02:05:07,040 --> 02:05:08,400
topology effects

3555
02:05:08,400 --> 02:05:10,639
so for better usage in production

3556
02:05:10,639 --> 02:05:12,880
systems having an ecosystem of on-path

3557
02:05:12,880 --> 02:05:14,719
proxies and service co-location could be

3558
02:05:14,719 --> 02:05:16,079
super helpful

3559
02:05:16,079 --> 02:05:18,079
uh all of our code and implementation is

3560
02:05:18,079 --> 02:05:19,599
actually open source i encourage you all

3561
02:05:19,599 --> 02:05:20,079
to go

3562
02:05:20,079 --> 02:05:22,000
play with it and give us feedback and

3563
02:05:22,000 --> 02:05:23,119
see how this works

3564
02:05:23,119 --> 02:05:24,880
and i'd like to give a huge shout out to

3565
02:05:24,880 --> 02:05:26,880
the authors of the original draft of

3566
02:05:26,880 --> 02:05:30,320
uh of the oblivious dns over https tommy

3567
02:05:30,320 --> 02:05:31,360
and eric

3568
02:05:31,360 --> 02:05:33,040
in in addition to the incredible team

3569
02:05:33,040 --> 02:05:34,880
members i've had at cloudflare

3570
02:05:34,880 --> 02:05:36,800
uh without whose effort this work would

3571
02:05:36,800 --> 02:05:38,320
not have been possible

3572
02:05:38,320 --> 02:05:41,360
thank you i'm open to questions

3573
02:05:41,360 --> 02:05:44,560
all right great sadish thank you so

3574
02:05:44,560 --> 02:05:46,800
if you have a question you can either

3575
02:05:46,800 --> 02:05:48,159
raise your hand uh

3576
02:05:48,159 --> 02:05:51,040
in the um through zoom and you will be

3577
02:05:51,040 --> 02:05:52,639
able to ask your question yourself or

3578
02:05:52,639 --> 02:05:53,360
you can

3579
02:05:53,360 --> 02:05:54,880
post the question in the q a and then i

3580
02:05:54,880 --> 02:05:56,639
will read out for you

3581
02:05:56,639 --> 02:05:59,679
you will get a poll popping up this is

3582
02:05:59,679 --> 02:06:01,040
your only time where you can read the

3583
02:06:01,040 --> 02:06:01,679
talk

3584
02:06:01,679 --> 02:06:03,920
please do so it helps the program

3585
02:06:03,920 --> 02:06:05,440
community to better understand what you

3586
02:06:05,440 --> 02:06:06,880
liked or not

3587
02:06:06,880 --> 02:06:08,480
with that being said i'm going to hand

3588
02:06:08,480 --> 02:06:10,159
it over to ralph

3589
02:06:10,159 --> 02:06:13,760
where you should be able to

3590
02:06:13,760 --> 02:06:15,440
unmute yourself ralph to ask you a

3591
02:06:15,440 --> 02:06:16,880
question

3592
02:06:16,880 --> 02:06:20,320
yes hello um so you've built

3593
02:06:20,320 --> 02:06:23,520
the dream protocol of every

3594
02:06:23,520 --> 02:06:26,480
kind of adversary that wants to extrude

3595
02:06:26,480 --> 02:06:28,239
the data out of enterprises

3596
02:06:28,239 --> 02:06:29,599
because if this get widespread

3597
02:06:29,599 --> 02:06:32,159
deployment i mean there is

3598
02:06:32,159 --> 02:06:35,440
nothing i can see that the enterprise

3599
02:06:35,440 --> 02:06:36,719
can do to

3600
02:06:36,719 --> 02:06:39,199
protect against exfiltration of data

3601
02:06:39,199 --> 02:06:41,440
using dns as an exploitation protocol

3602
02:06:41,440 --> 02:06:42,000
which

3603
02:06:42,000 --> 02:06:44,800
is in use with dns towns today so what

3604
02:06:44,800 --> 02:06:46,079
do you say to

3605
02:06:46,079 --> 02:06:49,199
a cio of an enterprise uh with regards

3606
02:06:49,199 --> 02:06:50,320
to odo

3607
02:06:50,320 --> 02:06:52,960
how to protect against that yeah i i i

3608
02:06:52,960 --> 02:06:54,320
think that's a great question so there

3609
02:06:54,320 --> 02:06:56,239
are there are two aspects to this that

3610
02:06:56,239 --> 02:06:58,159
uh we kind of thought of but and i would

3611
02:06:58,159 --> 02:07:00,400
be open to uh hearing more about it

3612
02:07:00,400 --> 02:07:02,560
one of it is you kind of want to protect

3613
02:07:02,560 --> 02:07:03,679
what queries

3614
02:07:03,679 --> 02:07:05,520
the enterprise is making on the public

3615
02:07:05,520 --> 02:07:06,719
internet and

3616
02:07:06,719 --> 02:07:08,960
the other one is you also want to kind

3617
02:07:08,960 --> 02:07:10,079
of have your own

3618
02:07:10,079 --> 02:07:12,159
set of firewalls or like malicious

3619
02:07:12,159 --> 02:07:13,280
website uh

3620
02:07:13,280 --> 02:07:15,760
like blocking or uh kind of systems

3621
02:07:15,760 --> 02:07:16,320
within

3622
02:07:16,320 --> 02:07:18,960
the corporate internet to kind of work

3623
02:07:18,960 --> 02:07:20,159
correctly

3624
02:07:20,159 --> 02:07:23,280
there are two two potential solutions

3625
02:07:23,280 --> 02:07:25,840
really the first one is where you have

3626
02:07:25,840 --> 02:07:27,440
like this gateway node

3627
02:07:27,440 --> 02:07:30,159
all the all the network traffic inside

3628
02:07:30,159 --> 02:07:30,800
the

3629
02:07:30,800 --> 02:07:33,119
inside the organization itself could run

3630
02:07:33,119 --> 02:07:33,840
using

3631
02:07:33,840 --> 02:07:37,360
uh udp based dns or uh like a doh

3632
02:07:37,360 --> 02:07:39,599
connection to do a resolver to

3633
02:07:39,599 --> 02:07:41,199
some some kind of a resolver or some

3634
02:07:41,199 --> 02:07:43,119
kind of a gateway that you host

3635
02:07:43,119 --> 02:07:45,280
inside the company which then makes an

3636
02:07:45,280 --> 02:07:46,159
auto query

3637
02:07:46,159 --> 02:07:48,239
so uh you you would still in that way

3638
02:07:48,239 --> 02:07:50,639
kind of have some control over what kind

3639
02:07:50,639 --> 02:07:52,320
of domains people are trying to visit or

3640
02:07:52,320 --> 02:07:53,599
what host names people are trying to

3641
02:07:53,599 --> 02:07:54,560
visit

3642
02:07:54,560 --> 02:07:56,960
uh but i i completely acknowledge and i

3643
02:07:56,960 --> 02:07:58,880
agree that uh if this was just

3644
02:07:58,880 --> 02:08:02,159
left to the user uh and in a corporate

3645
02:08:02,159 --> 02:08:03,520
environment things would be

3646
02:08:03,520 --> 02:08:06,400
slightly more difficult so in a

3647
02:08:06,400 --> 02:08:07,520
corporate environment

3648
02:08:07,520 --> 02:08:10,320
you need to you need to assume that you

3649
02:08:10,320 --> 02:08:11,199
address it

3650
02:08:11,199 --> 02:08:13,840
has kind of connection to your network

3651
02:08:13,840 --> 02:08:15,280
without your control

3652
02:08:15,280 --> 02:08:18,639
so that means it can use https

3653
02:08:18,639 --> 02:08:21,840
to go out and ask any public auto server

3654
02:08:21,840 --> 02:08:22,639
right

3655
02:08:22,639 --> 02:08:26,800
so this i mean will not work

3656
02:08:27,679 --> 02:08:31,920
um i mean it depends on how you want to

3657
02:08:31,920 --> 02:08:32,480
i just

3658
02:08:32,480 --> 02:08:36,000
look at it internally if if you're if

3659
02:08:36,000 --> 02:08:38,800
all the users within the company trust

3660
02:08:38,800 --> 02:08:39,280
the

3661
02:08:39,280 --> 02:08:41,840
the company uh and the resolver service

3662
02:08:41,840 --> 02:08:42,960
that's offered there

3663
02:08:42,960 --> 02:08:45,360
it should be it should be okay and then

3664
02:08:45,360 --> 02:08:46,960
you can protect your

3665
02:08:46,960 --> 02:08:48,639
anonymity like say for example you're

3666
02:08:48,639 --> 02:08:50,239
looking for a patent

3667
02:08:50,239 --> 02:08:52,000
diagram or something like that but you

3668
02:08:52,000 --> 02:08:53,599
don't want to kind of leak

3669
02:08:53,599 --> 02:08:56,000
the idea that hey this specific company

3670
02:08:56,000 --> 02:08:58,000
a is looking for patent diagrams which

3671
02:08:58,000 --> 02:08:59,040
belong to this

3672
02:08:59,040 --> 02:09:02,239
so uh yeah i i don't know if that kind

3673
02:09:02,239 --> 02:09:03,679
of answered your question but i would be

3674
02:09:03,679 --> 02:09:06,239
happy to also take this

3675
02:09:06,239 --> 02:09:09,280
offline okay i'll take it off

3676
02:09:09,280 --> 02:09:11,520
yeah there's a few other questions so uh

3677
02:09:11,520 --> 02:09:13,040
maybe if you can take it offline that

3678
02:09:13,040 --> 02:09:14,000
would be great

3679
02:09:14,000 --> 02:09:16,159
um thanks so the poll should have come

3680
02:09:16,159 --> 02:09:18,000
up now so you can answer the phone

3681
02:09:18,000 --> 02:09:20,000
uh next we have a question from roland

3682
02:09:20,000 --> 02:09:21,119
dobbins we

3683
02:09:21,119 --> 02:09:23,360
he's asking can you please detail the

3684
02:09:23,360 --> 02:09:26,480
proposed ddos defense model for odo

3685
02:09:26,480 --> 02:09:28,560
including dns query fluid against the

3686
02:09:28,560 --> 02:09:30,000
proxy

3687
02:09:30,000 --> 02:09:31,440
yeah i think there's a great question

3688
02:09:31,440 --> 02:09:33,440
this is also one of the questions that

3689
02:09:33,440 --> 02:09:36,639
uh we we uh we kind of like hand waved

3690
02:09:36,639 --> 02:09:39,119
in in the paper that we wrote we we

3691
02:09:39,119 --> 02:09:40,480
believe that the

3692
02:09:40,480 --> 02:09:43,760
current uh current denial of service

3693
02:09:43,760 --> 02:09:45,840
kind of mechanisms that are in place uh

3694
02:09:45,840 --> 02:09:47,280
could be used so there could be rate

3695
02:09:47,280 --> 02:09:48,719
limiting that is implemented at the

3696
02:09:48,719 --> 02:09:49,599
proxies

3697
02:09:49,599 --> 02:09:52,000
so that the proxies are only receiving

3698
02:09:52,000 --> 02:09:52,880
uh like

3699
02:09:52,880 --> 02:09:56,000
the the proxies are not uh not not

3700
02:09:56,000 --> 02:09:57,280
undergoing this attack

3701
02:09:57,280 --> 02:09:59,840
but there is the potential of uh ddos

3702
02:09:59,840 --> 02:10:01,760
amplification uh like uh request

3703
02:10:01,760 --> 02:10:03,520
amplification attacks that happen so

3704
02:10:03,520 --> 02:10:05,599
that you could think of a botnet of

3705
02:10:05,599 --> 02:10:10,000
uh of uh of uh dns probes or like

3706
02:10:10,000 --> 02:10:10,719
clients

3707
02:10:10,719 --> 02:10:12,800
who are forcing a specific proxy to

3708
02:10:12,800 --> 02:10:13,840
shoot

3709
02:10:13,840 --> 02:10:16,880
https requests outside so one way we

3710
02:10:16,880 --> 02:10:17,679
kind of say

3711
02:10:17,679 --> 02:10:20,320
uh this could be resolved is is for the

3712
02:10:20,320 --> 02:10:21,760
proxy to have

3713
02:10:21,760 --> 02:10:24,159
an allow list of which domain names it's

3714
02:10:24,159 --> 02:10:25,360
willing to speak to

3715
02:10:25,360 --> 02:10:28,239
like say for example a proxy a one can

3716
02:10:28,239 --> 02:10:28,719
can

3717
02:10:28,719 --> 02:10:30,960
is configured to speak to odo dot cloud

3718
02:10:30,960 --> 02:10:33,440
flag dns and maybe odo dot google dns if

3719
02:10:33,440 --> 02:10:35,199
google decides to operate one

3720
02:10:35,199 --> 02:10:38,480
or odo.next dns or something like that

3721
02:10:38,480 --> 02:10:40,719
so you could do that allow list kind of

3722
02:10:40,719 --> 02:10:42,159
an approach and then have

3723
02:10:42,159 --> 02:10:45,679
uh the the standard web uh defense like

3724
02:10:45,679 --> 02:10:48,079
ddos defense mechanisms in place

3725
02:10:48,079 --> 02:10:51,520
and uh but i i don't know in more detail

3726
02:10:51,520 --> 02:10:53,599
about like the operational complexity of

3727
02:10:53,599 --> 02:10:56,560
what what this might entail

3728
02:10:56,560 --> 02:10:58,560
all right thank you there is a couple of

3729
02:10:58,560 --> 02:10:59,599
other questions but

3730
02:10:59,599 --> 02:11:02,159
we are over time uh so maybe if vittorio

3731
02:11:02,159 --> 02:11:03,520
and andrew can catch up

3732
02:11:03,520 --> 02:11:05,760
with you uh on the channel on the

3733
02:11:05,760 --> 02:11:07,119
matterhorse channel you could you could

3734
02:11:07,119 --> 02:11:08,320
discuss that

3735
02:11:08,320 --> 02:11:10,880
um thanks a lot for this talk so we're

3736
02:11:10,880 --> 02:11:11,440
going to

3737
02:11:11,440 --> 02:11:14,800
move on with our next talk on dns

3738
02:11:14,800 --> 02:11:16,000
privacy

3739
02:11:16,000 --> 02:11:18,719
which is going to be uh kazunori

3740
02:11:18,719 --> 02:11:19,920
fujiwara

3741
02:11:19,920 --> 02:11:22,159
talking about how to keep your privacy

3742
02:11:22,159 --> 02:11:24,079
with dns over https over

3743
02:11:24,079 --> 02:11:28,159
cgn cdna or public net 64.

3744
02:11:28,159 --> 02:11:31,679
pj roy sun hello this is kazna hujar

3745
02:11:31,679 --> 02:11:33,119
from jprs

3746
02:11:33,119 --> 02:11:35,840
i'll talk about keep my privacy tinsel

3747
02:11:35,840 --> 02:11:38,159
by https and over cdn

3748
02:11:38,159 --> 02:11:40,880
public not 64 transgender technologies

3749
02:11:40,880 --> 02:11:42,560
to public not 64

3750
02:11:42,560 --> 02:11:44,880
and

3751
02:11:49,520 --> 02:11:52,400
and open and ideal transition

3752
02:11:52,400 --> 02:11:54,480
technologies and open https

3753
02:11:54,480 --> 02:11:57,119
blockchains

3754
02:12:03,599 --> 02:12:06,480
there are privacy to the dinosaur http

3755
02:12:06,480 --> 02:12:07,679
store

3756
02:12:07,679 --> 02:12:10,719
though hides this query name

3757
02:12:10,719 --> 02:12:14,159
class type by encryption however

3758
02:12:14,159 --> 02:12:17,520
crystal's ip address is not protected

3759
02:12:17,520 --> 02:12:20,000
though providers can collect the whole

3760
02:12:20,000 --> 02:12:20,800
data

3761
02:12:20,800 --> 02:12:23,360
query timing clearing source ip address

3762
02:12:23,360 --> 02:12:24,400
and query name

3763
02:12:24,400 --> 02:12:28,719
with a type class how can i hide my

3764
02:12:28,719 --> 02:12:34,239
ipad scroll model providers

3765
02:12:34,239 --> 02:12:37,280
previous proposals towards dns and

3766
02:12:37,280 --> 02:12:38,800
oblivious dns

3767
02:12:38,800 --> 02:12:41,599
to also try to hide query source ip

3768
02:12:41,599 --> 02:12:42,880
addresses

3769
02:12:42,880 --> 02:12:46,079
however they are complicated and

3770
02:12:46,079 --> 02:12:48,320
required store network or service

3771
02:12:48,320 --> 02:12:50,000
providers

3772
02:12:50,000 --> 02:12:53,760
i like simple solutions to hide

3773
02:12:53,760 --> 02:12:58,159
i'm happy if i can do it by myself

3774
02:12:58,159 --> 02:13:00,560
the best place to hide the leaf is in a

3775
02:13:00,560 --> 02:13:01,840
forest

3776
02:13:01,840 --> 02:13:05,920
we can hire craigslist ip address under

3777
02:13:05,920 --> 02:13:09,119
ib budget for not ggn

3778
02:13:09,119 --> 02:13:12,239
not 64 ib function technologies

3779
02:13:12,239 --> 02:13:15,360
or operate space proceeds and

3780
02:13:15,360 --> 02:13:17,920
more we can use different ip address

3781
02:13:17,920 --> 02:13:19,199
direct connection to

3782
02:13:19,199 --> 02:13:22,400
access web servers

3783
02:13:23,440 --> 02:13:27,440
first idea is do overseas game

3784
02:13:27,440 --> 02:13:29,280
we can hide clearly source like the

3785
02:13:29,280 --> 02:13:32,800
others under low priced mobile network

3786
02:13:32,800 --> 02:13:35,360
in japan it is easy to purchase a sim

3787
02:13:35,360 --> 02:13:36,079
card

3788
02:13:36,079 --> 02:13:39,679
a hundred megabytes per month for about

3789
02:13:39,679 --> 02:13:42,719
two u.s dollars

3790
02:13:42,719 --> 02:13:46,880
many m m.o man operators use carriageway

3791
02:13:46,880 --> 02:13:49,440
not for user network

3792
02:13:49,440 --> 02:13:51,760
some of the users under the same media

3793
02:13:51,760 --> 02:13:52,480
may use

3794
02:13:52,480 --> 02:13:56,000
daw usage scenario is

3795
02:13:56,000 --> 02:13:59,040
preparing though further in moving

3796
02:13:59,040 --> 02:14:02,560
network at least we can use different ip

3797
02:14:02,560 --> 02:14:04,719
address for daw

3798
02:14:04,719 --> 02:14:08,719
and to access web servers

3799
02:14:10,079 --> 02:14:14,239
next idea is do over 96.64

3800
02:14:14,239 --> 02:14:17,360
there are some public not 60 not 64

3801
02:14:17,360 --> 02:14:19,040
services

3802
02:14:19,040 --> 02:14:21,360
they translate the right source ib

3803
02:14:21,360 --> 02:14:23,840
badges address to shared

3804
02:14:23,840 --> 02:14:26,960
ip by address you stationary is the

3805
02:14:26,960 --> 02:14:28,159
following

3806
02:14:28,159 --> 02:14:31,360
send two queries to ip version for those

3807
02:14:31,360 --> 02:14:32,320
servers

3808
02:14:32,320 --> 02:14:37,599
via nato64 not 640 rights

3809
02:14:37,599 --> 02:14:41,199
ipv6 no query source ips ips

3810
02:14:41,199 --> 02:14:44,960
address 2 not 6 hosts shared ip button

3811
02:14:44,960 --> 02:14:46,000
address

3812
02:14:46,000 --> 02:14:51,199
it hides query source ipv

3813
02:14:51,199 --> 02:14:54,000
we need special daw folder that connect

3814
02:14:54,000 --> 02:14:54,960
to nuts

3815
02:14:54,960 --> 02:14:59,360
for ipv6 address nato603x plus

3816
02:14:59,360 --> 02:15:02,560
iphone servers ipads for address and we

3817
02:15:02,560 --> 02:15:04,079
can use

3818
02:15:04,079 --> 02:15:07,199
different ips to access web servers to

3819
02:15:07,199 --> 02:15:07,599
increase

3820
02:15:07,599 --> 02:15:10,800
anonymity we change multiple natural

3821
02:15:10,800 --> 02:15:14,000
services prefix and multiple

3822
02:15:14,000 --> 02:15:16,880
dollar providers

3823
02:15:17,679 --> 02:15:20,239
next slide guides which you are awesome

3824
02:15:20,239 --> 02:15:22,079
this is the timekeeper

3825
02:15:22,079 --> 02:15:25,520
and five minutes into your q a yes

3826
02:15:25,520 --> 02:15:27,840
next idea is two of ipr's extension

3827
02:15:27,840 --> 02:15:29,199
technology

3828
02:15:29,199 --> 02:15:31,520
in many cases multiple subscribers share

3829
02:15:31,520 --> 02:15:34,960
one ipvac address

3830
02:15:34,960 --> 02:15:37,679
and this scenario is disabled hyperbolic

3831
02:15:37,679 --> 02:15:39,520
at the client

3832
02:15:39,520 --> 02:15:42,560
but this idea have problems it is weak

3833
02:15:42,560 --> 02:15:44,000
because

3834
02:15:44,000 --> 02:15:47,440
those ideas do of though and waivers are

3835
02:15:47,440 --> 02:15:49,040
the same

3836
02:15:49,040 --> 02:15:52,000
and disabling ibr6 goes against ib

3837
02:15:52,000 --> 02:15:54,719
visual transition

3838
02:15:54,719 --> 02:15:58,239
next idea is though of openness space

3839
02:15:58,239 --> 02:15:59,920
proxies

3840
02:15:59,920 --> 02:16:03,360
it is https proxies cannot know the dns

3841
02:16:03,360 --> 02:16:05,599
query so query data because it is

3842
02:16:05,599 --> 02:16:06,560
protected by

3843
02:16:06,560 --> 02:16:10,800
though https those providers cannot know

3844
02:16:10,800 --> 02:16:13,280
original resource ip address usage

3845
02:16:13,280 --> 02:16:14,639
scenario is the following

3846
02:16:14,639 --> 02:16:18,000
send the door queries via https proxy

3847
02:16:18,000 --> 02:16:20,480
use direct hbs connection to access web

3848
02:16:20,480 --> 02:16:21,599
servers

3849
02:16:21,599 --> 02:16:25,199
the idea requires special browsers or

3850
02:16:25,199 --> 02:16:28,800
those who are does not connect via

3851
02:16:28,800 --> 02:16:32,638
proxy and this idea have a big problem

3852
02:16:32,638 --> 02:16:34,959
we can get we cannot get permissions to

3853
02:16:34,959 --> 02:16:38,240
use open proxies

3854
02:16:38,558 --> 02:16:41,679
and the possible solutions are do over

3855
02:16:41,679 --> 02:16:45,120
torah or providing providers may

3856
02:16:45,120 --> 02:16:48,718
offer special open hbs proxy that can

3857
02:16:48,718 --> 02:16:51,040
connect to public though servers only

3858
02:16:51,040 --> 02:16:54,959
under this ideas may be similar to

3859
02:16:54,959 --> 02:16:57,919
obvious daw

3860
02:16:58,959 --> 02:17:02,478
and i used who are my comments

3861
02:17:02,478 --> 02:17:05,439
a quadriquet to know my query society

3862
02:17:05,439 --> 02:17:06,478
address

3863
02:17:06,478 --> 02:17:10,359
this was accompanied servers who are my

3864
02:17:10,359 --> 02:17:13,280
accommodations my ip buzzer for ipv6

3865
02:17:13,280 --> 02:17:15,840
address

3866
02:17:20,638 --> 02:17:23,120
receives queries from grants via photo

3867
02:17:23,120 --> 02:17:24,959
53 udp tcp

3868
02:17:24,959 --> 02:17:28,160
and was queries to serve us

3869
02:17:28,160 --> 02:17:30,799
be at all

3870
02:17:31,200 --> 02:17:34,080
i found one from github and the other is

3871
02:17:34,080 --> 02:17:34,398
my

3872
02:17:34,398 --> 02:17:37,200
own my daughter supports natural sexual

3873
02:17:37,200 --> 02:17:38,318
translation

3874
02:17:38,318 --> 02:17:41,200
it receives ibrahimov address and

3875
02:17:41,200 --> 02:17:43,120
rewrites to not structural prefix

3876
02:17:43,120 --> 02:17:45,840
not for others however it has very

3877
02:17:45,840 --> 02:17:47,920
limited function

3878
02:17:47,920 --> 02:17:49,920
next slide shows evaluation with over

3879
02:17:49,920 --> 02:17:52,160
cgn

3880
02:17:52,160 --> 02:17:56,080
i prepared nbn team android phone

3881
02:17:56,080 --> 02:17:59,280
and go for the machine

3882
02:17:59,280 --> 02:18:02,398
does the season hide my ip address

3883
02:18:02,398 --> 02:18:05,040
digital accommodate server whoever my

3884
02:18:05,040 --> 02:18:06,558
comment is returned

3885
02:18:06,558 --> 02:18:09,120
in windows shared address then i can

3886
02:18:09,120 --> 02:18:12,398
hide my ipads from the provider

3887
02:18:12,398 --> 02:18:16,398
then i run guinness i know for the

3888
02:18:16,398 --> 02:18:19,040
ad for the machine that uses inventor

3889
02:18:19,040 --> 02:18:21,599
network

3890
02:18:21,920 --> 02:18:25,200
then i checked responses from

3891
02:18:25,200 --> 02:18:27,519
those who are done this was those water

3892
02:18:27,519 --> 02:18:28,318
machines

3893
02:18:28,318 --> 02:18:30,160
you are my argument to a returned

3894
02:18:30,160 --> 02:18:32,240
graduate's ip address

3895
02:18:32,240 --> 02:18:35,599
and query time was 80 milliseconds

3896
02:18:35,599 --> 02:18:38,398
it is acceptable latency finally i

3897
02:18:38,398 --> 02:18:39,519
changed

3898
02:18:39,519 --> 02:18:42,638
the pc reserver setting to dojuata

3899
02:18:42,638 --> 02:18:45,679
then all grades from the pc went to

3900
02:18:45,679 --> 02:18:48,879
the providers via cgn and we've executed

3901
02:18:48,879 --> 02:18:51,760
another connectivity

3902
02:18:51,760 --> 02:18:55,840
line shows evaluation model over nut64

3903
02:18:55,840 --> 02:18:59,200
i chose one not successful prefix

3904
02:18:59,200 --> 02:19:02,398
location was i'm still done

3905
02:19:02,398 --> 02:19:04,799
i agreed and followed the terms of

3906
02:19:04,799 --> 02:19:06,478
service because it is an

3907
02:19:06,478 --> 02:19:09,679
evaluation only does not 64

3908
02:19:09,679 --> 02:19:13,519
hide my ipv6 address they got nothing so

3909
02:19:13,519 --> 02:19:16,000
prefix plus accommodate servers

3910
02:19:16,000 --> 02:19:19,200
addresses returned

3911
02:19:19,200 --> 02:19:23,439
nato 6964 the shared id by address

3912
02:19:23,439 --> 02:19:27,439
which node answered from nato 64 digital

3913
02:19:27,439 --> 02:19:29,840
plus one one one one id server returned

3914
02:19:29,840 --> 02:19:30,799
amos

3915
02:19:30,799 --> 02:19:34,799
query retention is 238 milliseconds

3916
02:19:34,799 --> 02:19:38,160
from japan then

3917
02:19:38,160 --> 02:19:49,840
i checked responses from the quad

3918
02:19:50,319 --> 02:19:53,760
then i started special order it received

3919
02:19:53,760 --> 02:19:54,800
the local case via

3920
02:19:54,800 --> 02:19:57,920
dns over 453 and was queries to

3921
02:19:57,920 --> 02:19:59,760
those servers ipv virtual hardware's

3922
02:19:59,760 --> 02:20:03,840
viewer nato64

3923
02:20:18,160 --> 02:20:22,479
ip address and however it is about one

3924
02:20:22,479 --> 02:20:25,120
second from japan

3925
02:20:25,120 --> 02:20:27,840
these are limitations of dough over

3926
02:20:27,840 --> 02:20:28,840
chijin not

3927
02:20:28,840 --> 02:20:31,840
64.

3928
02:20:32,160 --> 02:20:34,000
open proxies nullify the trash

3929
02:20:34,000 --> 02:20:35,920
controller obsidians

3930
02:20:35,920 --> 02:20:38,160
those providers can't track by using

3931
02:20:38,160 --> 02:20:40,640
their session information

3932
02:20:40,640 --> 02:20:43,760
my dear squadrons growth tcp gear

3933
02:20:43,760 --> 02:20:45,359
station on every query

3934
02:20:45,359 --> 02:20:47,760
public national services are located in

3935
02:20:47,760 --> 02:20:49,200
europe only

3936
02:20:49,200 --> 02:20:51,600
high latency one second from japan

3937
02:20:51,600 --> 02:20:53,120
because utility

3938
02:20:53,120 --> 02:20:59,840
ltt is 238 milliseconds

3939
02:21:00,560 --> 02:21:04,000
conclusions though providers can know

3940
02:21:04,000 --> 02:21:06,319
both query society addresses and

3941
02:21:06,319 --> 02:21:09,439
then squares these are cells these are

3942
02:21:09,439 --> 02:21:11,840
the sensitive datasets for

3943
02:21:11,840 --> 02:21:14,960
to protect our privacy

3944
02:21:14,960 --> 02:21:17,840
we can hide our source ideas by existing

3945
02:21:17,840 --> 02:21:19,600
existing tools

3946
02:21:19,600 --> 02:21:22,800
though overseas with low cost

3947
02:21:22,800 --> 02:21:25,920
and we know sim is feasible though over

3948
02:21:25,920 --> 02:21:30,000
964 is feasible in european region

3949
02:21:30,000 --> 02:21:33,359
though over operate gps proxies or torah

3950
02:21:33,359 --> 02:21:37,280
may be visible but not listed

3951
02:21:37,280 --> 02:21:42,160
that's all any questions on solutions

3952
02:21:42,160 --> 02:21:45,359
thank you fuji rsn um we gotta

3953
02:21:45,359 --> 02:21:47,760
we got some time for questions so please

3954
02:21:47,760 --> 02:21:48,880
if you have any question

3955
02:21:48,880 --> 02:21:52,319
um either write them in the q a tab or

3956
02:21:52,319 --> 02:21:54,240
raise your hand to ask the question

3957
02:21:54,240 --> 02:21:55,520
yourself

3958
02:21:55,520 --> 02:21:58,399
uh you're also going to see the poll

3959
02:21:58,399 --> 02:21:59,680
popping up

3960
02:21:59,680 --> 02:22:02,240
and that's the only time to be able to

3961
02:22:02,240 --> 02:22:03,600
write the talks

3962
02:22:03,600 --> 02:22:06,399
and that being said if anybody has a

3963
02:22:06,399 --> 02:22:07,280
question

3964
02:22:07,280 --> 02:22:11,120
please raise your hand already done

3965
02:22:11,120 --> 02:22:16,399
in the meantime i may have a question

3966
02:22:16,720 --> 02:22:21,040
how do you think how feasible

3967
02:22:21,040 --> 02:22:24,960
this could be done so i i i think i like

3968
02:22:24,960 --> 02:22:25,760
the approach

3969
02:22:25,760 --> 02:22:28,800
but um aside from maybe the

3970
02:22:28,800 --> 02:22:32,960
door over https proxy or tor

3971
02:22:32,960 --> 02:22:36,000
the other one seems to be a bit harder

3972
02:22:36,000 --> 02:22:37,600
to do like you will need to carry a

3973
02:22:37,600 --> 02:22:40,000
phone essentially with you to be able to

3974
02:22:40,000 --> 02:22:40,960
to do that

3975
02:22:40,960 --> 02:22:44,000
what do you think about that

3976
02:22:47,680 --> 02:22:51,120
obvious though may be similar to

3977
02:22:51,120 --> 02:22:54,160
those over not open

3978
02:22:54,160 --> 02:22:58,640
hisps proxies and

3979
02:22:59,600 --> 02:23:02,800
some providers may offer

3980
02:23:02,800 --> 02:23:06,000
special open hbs proxy

3981
02:23:06,000 --> 02:23:08,479
i think

3982
02:23:09,680 --> 02:23:11,920
yeah so it's i think that the overnight

3983
02:23:11,920 --> 02:23:12,720
64

3984
02:23:12,720 --> 02:23:16,479
or over cg net may be uh a bit harder to

3985
02:23:16,479 --> 02:23:18,240
do i mean somebody will need to

3986
02:23:18,240 --> 02:23:20,240
have physical hardware with them to

3987
02:23:20,240 --> 02:23:21,439
carry around

3988
02:23:21,439 --> 02:23:25,040
i think that's uh that's my point um

3989
02:23:25,040 --> 02:23:28,080
do we have a question here in the q a so

3990
02:23:28,080 --> 02:23:28,800
let me um

3991
02:23:28,800 --> 02:23:32,479
andrew camping asked or rather said ali

3992
02:23:32,479 --> 02:23:33,680
alec moffett

3993
02:23:33,680 --> 02:23:36,640
muffet gave a presentation on doh over

3994
02:23:36,640 --> 02:23:37,600
tor

3995
02:23:37,600 --> 02:23:39,120
he's providing the links i'm not going

3996
02:23:39,120 --> 02:23:41,680
to read the link here

3997
02:23:41,680 --> 02:23:43,520
you may find it useful to compare your

3998
02:23:43,520 --> 02:23:46,160
results with is

3999
02:23:46,160 --> 02:23:48,000
yeah so if you look at the q a tag then

4000
02:23:48,000 --> 02:23:50,000
you will be able to get the link from

4001
02:23:50,000 --> 02:23:50,720
andrew

4002
02:23:50,720 --> 02:23:52,399
or maybe andrew you can post it in the

4003
02:23:52,399 --> 02:23:54,160
uh in the workshop

4004
02:23:54,160 --> 02:23:59,200
uh matamos thank you

4005
02:23:59,200 --> 02:24:01,920
all right so i guess if we don't have

4006
02:24:01,920 --> 02:24:03,120
any other questions

4007
02:24:03,120 --> 02:24:05,920
uh let's uh move on to uh with our next

4008
02:24:05,920 --> 02:24:08,319
talk uh thanks a lot fujiwara-san

4009
02:24:08,319 --> 02:24:11,520
um now we're going to

4010
02:24:11,520 --> 02:24:14,240
go to giovanni amura who is going to

4011
02:24:14,240 --> 02:24:16,640
tell us about the public disclosure of a

4012
02:24:16,640 --> 02:24:19,200
genus vulnerability

4013
02:24:19,200 --> 02:24:22,000
johnny thanks so yeah good morning

4014
02:24:22,000 --> 02:24:23,600
evening or afternoon depending on where

4015
02:24:23,600 --> 02:24:24,319
you are

4016
02:24:24,319 --> 02:24:27,920
um yeah thanks everybody so yeah today

4017
02:24:27,920 --> 02:24:29,120
we it's uh we're gonna

4018
02:24:29,120 --> 02:24:31,040
publicly disclose a vulnerability that

4019
02:24:31,040 --> 02:24:32,160
we came across

4020
02:24:32,160 --> 02:24:35,359
um um last year

4021
02:24:35,359 --> 02:24:38,399
and this is actually a follow-up

4022
02:24:38,399 --> 02:24:41,200
that we of some of the responsible

4023
02:24:41,200 --> 02:24:42,640
disclosure we've been doing

4024
02:24:42,640 --> 02:24:44,960
so this work i'm giovanni i work for

4025
02:24:44,960 --> 02:24:46,800
sidn labs

4026
02:24:46,800 --> 02:24:48,399
but this work has been done together

4027
02:24:48,399 --> 02:24:50,319
with sebastian that works for internet

4028
02:24:50,319 --> 02:24:55,040
nz and john and wes at usc isi

4029
02:24:55,040 --> 02:24:58,000
university southern california and we

4030
02:24:58,000 --> 02:24:59,760
before we get here to this day

4031
02:24:59,760 --> 02:25:02,800
today we actually when

4032
02:25:02,800 --> 02:25:05,920
we're very careful to be sure we follow

4033
02:25:05,920 --> 02:25:09,680
responsible disclosure practices so

4034
02:25:09,680 --> 02:25:11,520
what before i dive into the details i

4035
02:25:11,520 --> 02:25:13,040
think a lot of people already know about

4036
02:25:13,040 --> 02:25:14,080
this here because

4037
02:25:14,080 --> 02:25:15,520
we the first time we talked that

4038
02:25:15,520 --> 02:25:17,359
publicly but in a private session from

4039
02:25:17,359 --> 02:25:18,640
members only was doing

4040
02:25:18,640 --> 02:25:22,240
work 34 actually three months ago

4041
02:25:22,240 --> 02:25:23,680
and after that we presented the other

4042
02:25:23,680 --> 02:25:25,760
order venues as you can see here in this

4043
02:25:25,760 --> 02:25:26,640
table

4044
02:25:26,640 --> 02:25:28,560
and today we make it publicly 90 days

4045
02:25:28,560 --> 02:25:30,160
after uh but even before

4046
02:25:30,160 --> 02:25:32,080
the private disclosure we did it at all

4047
02:25:32,080 --> 02:25:34,399
work we had we had already been in touch

4048
02:25:34,399 --> 02:25:36,560
with some vendors some dns vendors and

4049
02:25:36,560 --> 02:25:38,000
operators so we have

4050
02:25:38,000 --> 02:25:40,080
we feel that we have given everybody

4051
02:25:40,080 --> 02:25:41,600
else that we could reach

4052
02:25:41,600 --> 02:25:44,000
enough time to address the issue this

4053
02:25:44,000 --> 02:25:45,200
availability

4054
02:25:45,200 --> 02:25:49,359
um and just a quick update since the

4055
02:25:49,359 --> 02:25:52,240
notification uh with we're actually we

4056
02:25:52,240 --> 02:25:53,359
are very happy that

4057
02:25:53,359 --> 02:25:57,040
google uh and cisco public dns that open

4058
02:25:57,040 --> 02:25:58,240
dns

4059
02:25:58,240 --> 02:26:01,439
fix their um their software

4060
02:26:01,439 --> 02:26:03,920
in regards to this variability

4061
02:26:03,920 --> 02:26:05,040
vulnerability

4062
02:26:05,040 --> 02:26:07,840
and the first time we analyzed this name

4063
02:26:07,840 --> 02:26:09,280
there was an event that happened in new

4064
02:26:09,280 --> 02:26:09,840
zealand

4065
02:26:09,840 --> 02:26:11,680
and most queries came from google and we

4066
02:26:11,680 --> 02:26:13,359
later measured

4067
02:26:13,359 --> 02:26:16,080
that and after the fix and google really

4068
02:26:16,080 --> 02:26:16,479
it

4069
02:26:16,479 --> 02:26:18,560
does not actually float servers anymore

4070
02:26:18,560 --> 02:26:20,399
when they focus conditions

4071
02:26:20,399 --> 02:26:22,560
we also released a tool called cycle

4072
02:26:22,560 --> 02:26:23,439
hunter

4073
02:26:23,439 --> 02:26:25,520
that allows authoritative server

4074
02:26:25,520 --> 02:26:27,680
operators to identify

4075
02:26:27,680 --> 02:26:29,439
records in their zones directionally

4076
02:26:29,439 --> 02:26:31,200
vulnerable vulnerable

4077
02:26:31,200 --> 02:26:32,880
that have a misconfiguration that

4078
02:26:32,880 --> 02:26:34,399
trigger the sort of attacks which is

4079
02:26:34,399 --> 02:26:35,200
called

4080
02:26:35,200 --> 02:26:37,600
cyclical dependencies and once we

4081
02:26:37,600 --> 02:26:39,040
released that there was a great response

4082
02:26:39,040 --> 02:26:39,920
from the community

4083
02:26:39,920 --> 02:26:41,680
and i i mentioned just a few of the

4084
02:26:41,680 --> 02:26:43,520
folks here because

4085
02:26:43,520 --> 02:26:45,520
they pretty much rewrote a lot of the

4086
02:26:45,520 --> 02:26:47,280
code shane made like

4087
02:26:47,280 --> 02:26:51,280
very high profile he made it synchronous

4088
02:26:51,280 --> 02:26:52,800
uh there are all the users there but i

4089
02:26:52,800 --> 02:26:54,160
don't know their names i know probably

4090
02:26:54,160 --> 02:26:55,920
who they are but have cryptic usernames

4091
02:26:55,920 --> 02:26:57,359
on github so you can click here and

4092
02:26:57,359 --> 02:26:58,399
check who they are

4093
02:26:58,399 --> 02:26:59,520
but i'm pretty happy with the community

4094
02:26:59,520 --> 02:27:00,880
response we're very thankful to

4095
02:27:00,880 --> 02:27:01,520
everybody

4096
02:27:01,520 --> 02:27:04,240
that you know in orc and dns in general

4097
02:27:04,240 --> 02:27:05,680
contributed to that

4098
02:27:05,680 --> 02:27:07,439
and now we know far more about the

4099
02:27:07,439 --> 02:27:08,800
problem

4100
02:27:08,800 --> 02:27:10,640
and we're releasing together with this

4101
02:27:10,640 --> 02:27:12,640
presentation uh this

4102
02:27:12,640 --> 02:27:15,680
a security advisor advisory which is a

4103
02:27:15,680 --> 02:27:16,479
document

4104
02:27:16,479 --> 02:27:20,000
intended for um dns developers

4105
02:27:20,000 --> 02:27:21,680
and operators in our authoritative

4106
02:27:21,680 --> 02:27:23,520
server operators and

4107
02:27:23,520 --> 02:27:25,280
devops in general there are some tests

4108
02:27:25,280 --> 02:27:27,280
there you can do in your software to see

4109
02:27:27,280 --> 02:27:28,880
if it's vulnerable or not

4110
02:27:28,880 --> 02:27:30,800
and if you're interested in more today's

4111
02:27:30,800 --> 02:27:32,319
we also we are also releasing a

4112
02:27:32,319 --> 02:27:33,920
technical report

4113
02:27:33,920 --> 02:27:35,600
uh you can go to name that i oh it's on

4114
02:27:35,600 --> 02:27:37,840
the homepage there too

4115
02:27:37,840 --> 02:27:41,280
so uh just a quick recap it's a surname

4116
02:27:41,280 --> 02:27:42,800
vulnerability it's a vulnerability that

4117
02:27:42,800 --> 02:27:44,560
can be used to deny

4118
02:27:44,560 --> 02:27:46,399
service authoritative servers it

4119
02:27:46,399 --> 02:27:49,680
requires cycle dependent ns records

4120
02:27:49,680 --> 02:27:52,160
requires vulnerable resolvers and

4121
02:27:52,160 --> 02:27:54,000
vulnerable vulnerable in this case means

4122
02:27:54,000 --> 02:27:55,600
that the resolver once defines a

4123
02:27:55,600 --> 02:27:57,120
cyclodependent

4124
02:27:57,120 --> 02:27:59,280
domain delegation would start looping

4125
02:27:59,280 --> 02:28:01,439
sending queries don't stop

4126
02:28:01,439 --> 02:28:02,880
and you need some user queries to

4127
02:28:02,880 --> 02:28:05,120
actually trigger that resolver

4128
02:28:05,120 --> 02:28:08,720
and we actually were able to go

4129
02:28:08,720 --> 02:28:12,399
from 10 queries per second to 5600

4130
02:28:12,399 --> 02:28:13,920
in our experiments so it's also a

4131
02:28:13,920 --> 02:28:15,920
technical report and if you want to

4132
02:28:15,920 --> 02:28:16,720
mitigate it

4133
02:28:16,720 --> 02:28:19,280
uh if you're running your own zones uh

4134
02:28:19,280 --> 02:28:20,640
please make sure you don't have cycle

4135
02:28:20,640 --> 02:28:21,840
dependent records

4136
02:28:21,840 --> 02:28:23,840
this is particularly important for if

4137
02:28:23,840 --> 02:28:26,880
your cctld which has open registrations

4138
02:28:26,880 --> 02:28:27,280
because

4139
02:28:27,280 --> 02:28:28,880
well you know restaurants can change

4140
02:28:28,880 --> 02:28:30,560
that at their will

4141
02:28:30,560 --> 02:28:32,800
so be sure you make sure that you don't

4142
02:28:32,800 --> 02:28:34,160
have those in your zone you have to

4143
02:28:34,160 --> 02:28:34,720
actually

4144
02:28:34,720 --> 02:28:37,120
it's not only cycle hunter is documented

4145
02:28:37,120 --> 02:28:38,720
there on github

4146
02:28:38,720 --> 02:28:40,160
does active measurements because you

4147
02:28:40,160 --> 02:28:42,640
know you need to get information outside

4148
02:28:42,640 --> 02:28:44,720
of your zone in the process too

4149
02:28:44,720 --> 02:28:47,920
and but anyway so run it and if your

4150
02:28:47,920 --> 02:28:49,600
resolver developer operator

4151
02:28:49,600 --> 02:28:51,680
uh you if you have if you if your

4152
02:28:51,680 --> 02:28:54,960
resolver is not capable to detect uh

4153
02:28:54,960 --> 02:28:57,520
the sort of cycles and get into loop you

4154
02:28:57,520 --> 02:28:58,640
should fix your code

4155
02:28:58,640 --> 02:29:01,040
but to what we found open source

4156
02:29:01,040 --> 02:29:02,319
projects that we analyzed

4157
02:29:02,319 --> 02:29:03,920
out of them are not they are able to

4158
02:29:03,920 --> 02:29:05,600
detect and they're not vulnerable to

4159
02:29:05,600 --> 02:29:06,960
just a name

4160
02:29:06,960 --> 02:29:08,640
and so we call it surname that's the

4161
02:29:08,640 --> 02:29:10,479
official website

4162
02:29:10,479 --> 02:29:12,960
it's a classic um yeah tsunami painting

4163
02:29:12,960 --> 02:29:14,399
from japan

4164
02:29:14,399 --> 02:29:17,680
um and so i just recap uh

4165
02:29:17,680 --> 02:29:19,200
psycho dependencies were first described

4166
02:29:19,200 --> 02:29:21,280
in 2009 the simple

4167
02:29:21,280 --> 02:29:22,880
simplest example is when you have two

4168
02:29:22,880 --> 02:29:24,479
domains that cat.nl

4169
02:29:24,479 --> 02:29:28,160
which has a as an ns record dog.nz

4170
02:29:28,160 --> 02:29:30,000
but if you look at dot and z later it

4171
02:29:30,000 --> 02:29:31,200
points to cat data now

4172
02:29:31,200 --> 02:29:33,200
so it means like you keep on going from

4173
02:29:33,200 --> 02:29:34,720
one zone to another you never were able

4174
02:29:34,720 --> 02:29:36,399
to retrieve our a record

4175
02:29:36,399 --> 02:29:38,160
and we found that in the wild in new

4176
02:29:38,160 --> 02:29:40,720
zealand it happened in 2020

4177
02:29:40,720 --> 02:29:43,359
two domains were misconfigured 50 more

4178
02:29:43,359 --> 02:29:44,479
traffic

4179
02:29:44,479 --> 02:29:47,040
uh mostly were a and quad aquarius for

4180
02:29:47,040 --> 02:29:49,280
their zapier so they cannot be retrieved

4181
02:29:49,280 --> 02:29:51,520
and mostly work for google public dns

4182
02:29:51,520 --> 02:29:53,439
luckily that has been fixed

4183
02:29:53,439 --> 02:29:55,840
you're fine yes the time keeper you have

4184
02:29:55,840 --> 02:29:56,560
five minutes

4185
02:29:56,560 --> 02:29:59,760
until q a thanks manuel um

4186
02:29:59,760 --> 02:30:03,200
so and so as i said traffic surge 50

4187
02:30:03,200 --> 02:30:04,319
percent

4188
02:30:04,319 --> 02:30:06,800
um the the blue line here is the total

4189
02:30:06,800 --> 02:30:08,319
aggregated traffic for new zealand and

4190
02:30:08,319 --> 02:30:09,280
you see that goes up

4191
02:30:09,280 --> 02:30:10,720
windows where there's a cyclic

4192
02:30:10,720 --> 02:30:12,399
dependency here

4193
02:30:12,399 --> 02:30:14,399
uh most referring google as i said but

4194
02:30:14,399 --> 02:30:15,439
you the

4195
02:30:15,439 --> 02:30:17,040
the bottom line here was just other

4196
02:30:17,040 --> 02:30:18,399
autonomous systems where i also send a

4197
02:30:18,399 --> 02:30:19,760
lot of queries

4198
02:30:19,760 --> 02:30:22,800
um and

4199
02:30:22,800 --> 02:30:25,200
just a thread profile it's an attacker

4200
02:30:25,200 --> 02:30:26,960
could hold multiple domains

4201
02:30:26,960 --> 02:30:28,880
and attention to create cycles and

4202
02:30:28,880 --> 02:30:30,800
inject queries using a bug net and you

4203
02:30:30,800 --> 02:30:32,800
can actually that can be easily

4204
02:30:32,800 --> 02:30:36,240
weaponized to the dos authority servers

4205
02:30:36,240 --> 02:30:38,880
uh this is not this was not an isolated

4206
02:30:38,880 --> 02:30:39,680
event

4207
02:30:39,680 --> 02:30:42,399
um we have been able to reproduce that

4208
02:30:42,399 --> 02:30:43,520
multiple times that's

4209
02:30:43,520 --> 02:30:46,479
also a technical report we configure for

4210
02:30:46,479 --> 02:30:48,479
example 10 000 right atlas probes you

4211
02:30:48,479 --> 02:30:50,479
set one query repair resolver

4212
02:30:50,479 --> 02:30:53,120
and what we found is that they uh after

4213
02:30:53,120 --> 02:30:54,080
they set this query

4214
02:30:54,080 --> 02:30:56,319
which is this point here this green area

4215
02:30:56,319 --> 02:30:58,399
here some resolvers would be in loop

4216
02:30:58,399 --> 02:30:59,920
as you can see here they keep on sending

4217
02:30:59,920 --> 02:31:01,690
creators like forever

4218
02:31:01,690 --> 02:31:03,359
[Music]

4219
02:31:03,359 --> 02:31:05,760
and if you send recurring queries it

4220
02:31:05,760 --> 02:31:07,439
gets even worse

4221
02:31:07,439 --> 02:31:10,160
uh but well to prevent this you have to

4222
02:31:10,160 --> 02:31:12,000
fix the resolvers google and open dns

4223
02:31:12,000 --> 02:31:12,640
already did

4224
02:31:12,640 --> 02:31:14,319
it run cycle hunter if you're not

4225
02:31:14,319 --> 02:31:17,439
authoritative server operator

4226
02:31:17,439 --> 02:31:19,760
and this is the tool cycle hunter if

4227
02:31:19,760 --> 02:31:20,479
you're interested

4228
02:31:20,479 --> 02:31:22,720
is a tool that reads zone files and

4229
02:31:22,720 --> 02:31:23,600
tries to resolve

4230
02:31:23,600 --> 02:31:26,080
every single ns record on the list and

4231
02:31:26,080 --> 02:31:27,760
if those that fail that time out or have

4232
02:31:27,760 --> 02:31:29,280
some sort of error

4233
02:31:29,280 --> 02:31:31,600
mostly timeouts it will try to identify

4234
02:31:31,600 --> 02:31:32,800
on the parent zones that they're

4235
02:31:32,800 --> 02:31:34,800
actually cyclic dependent

4236
02:31:34,800 --> 02:31:37,120
uh we found a look into the wild and

4237
02:31:37,120 --> 02:31:39,120
when we looked back in 2020 there are

4238
02:31:39,120 --> 02:31:40,000
not many

4239
02:31:40,000 --> 02:31:41,840
of those in the wild but that could

4240
02:31:41,840 --> 02:31:43,040
change and

4241
02:31:43,040 --> 02:31:45,520
for example dot com had 21 cycle ns

4242
02:31:45,520 --> 02:31:46,560
records only

4243
02:31:46,560 --> 02:31:48,399
affecting 1200 domain names they used

4244
02:31:48,399 --> 02:31:51,040
those in s records but that could change

4245
02:31:51,040 --> 02:31:52,960
um we have as i said we evaluate

4246
02:31:52,960 --> 02:31:55,280
resolvers most of them don't have any

4247
02:31:55,280 --> 02:31:57,359
issues the latest versions but some old

4248
02:31:57,359 --> 02:31:58,319
versions have

4249
02:31:58,319 --> 02:32:01,439
we confirmed windows 2008 r2 and an old

4250
02:32:01,439 --> 02:32:02,080
version of

4251
02:32:02,080 --> 02:32:05,760
parity and s2 so what you have learned

4252
02:32:05,760 --> 02:32:07,200
since the private disclosure

4253
02:32:07,200 --> 02:32:09,439
i think somebody asked me what you do

4254
02:32:09,439 --> 02:32:11,040
longer cycles and i

4255
02:32:11,040 --> 02:32:14,160
i i remember running that and i thought

4256
02:32:14,160 --> 02:32:16,000
i remember the results that well there's

4257
02:32:16,000 --> 02:32:17,200
little short stories that

4258
02:32:17,200 --> 02:32:19,680
make the problem even worse so the green

4259
02:32:19,680 --> 02:32:21,200
area here so when you send queries of

4260
02:32:21,200 --> 02:32:22,319
write atlas

4261
02:32:22,319 --> 02:32:24,479
from to client to resolvers but after

4262
02:32:24,479 --> 02:32:26,240
that the resolvers have no more user

4263
02:32:26,240 --> 02:32:27,920
queries but they still keep on looping

4264
02:32:27,920 --> 02:32:29,760
and bear in mind that this is after

4265
02:32:29,760 --> 02:32:31,760
google fixing public dns

4266
02:32:31,760 --> 02:32:34,240
so you can even have longer triple

4267
02:32:34,240 --> 02:32:36,000
probably quadruple cycles

4268
02:32:36,000 --> 02:32:38,160
uh with of cycling dependency and it

4269
02:32:38,160 --> 02:32:40,319
gets the problem even worse

4270
02:32:40,319 --> 02:32:42,880
i think it was roy aaron aarons who

4271
02:32:42,880 --> 02:32:44,560
asked me about cnn cycles

4272
02:32:44,560 --> 02:32:47,600
and i ran experiments with a cnn they're

4273
02:32:47,600 --> 02:32:48,800
not a problematic

4274
02:32:48,800 --> 02:32:50,479
sydney cycles are well known and they've

4275
02:32:50,479 --> 02:32:52,640
been documented saying since rfc

4276
02:32:52,640 --> 02:32:56,399
1034 um so luckily it's not a big

4277
02:32:56,399 --> 02:32:57,760
problem if you have a cycle of synonyms

4278
02:32:57,760 --> 02:32:59,280
that's all right you can see here that

4279
02:32:59,280 --> 02:33:01,920
doesn't cause a big issue i'm very

4280
02:33:01,920 --> 02:33:02,560
thankful

4281
02:33:02,560 --> 02:33:06,160
to this anonymous uae eu based cctv

4282
02:33:06,160 --> 02:33:07,920
operator who reached out later after the

4283
02:33:07,920 --> 02:33:09,920
presentation at work 34 and shared with

4284
02:33:09,920 --> 02:33:10,479
us this

4285
02:33:10,479 --> 02:33:12,000
beautiful graph but terrible to

4286
02:33:12,000 --> 02:33:13,760
experience that they

4287
02:33:13,760 --> 02:33:15,920
also had their own tsunami-related event

4288
02:33:15,920 --> 02:33:17,359
before republic this

4289
02:33:17,359 --> 02:33:19,680
privately disclosed and they had two

4290
02:33:19,680 --> 02:33:21,200
domains in their own zone that

4291
02:33:21,200 --> 02:33:23,760
also were configures misconfigured

4292
02:33:23,760 --> 02:33:24,960
psycho dependencies

4293
02:33:24,960 --> 02:33:27,359
and their overall traffic grew by 10

4294
02:33:27,359 --> 02:33:28,399
times

4295
02:33:28,399 --> 02:33:30,399
so we're not the only ones experienced

4296
02:33:30,399 --> 02:33:32,880
that and seen that in a while

4297
02:33:32,880 --> 02:33:34,479
so if we look back it's kind of a wave

4298
02:33:34,479 --> 02:33:36,640
but in reverse shape

4299
02:33:36,640 --> 02:33:39,280
uh we also identify the root causes of

4300
02:33:39,280 --> 02:33:39,920
looping

4301
02:33:39,920 --> 02:33:41,920
um some resolvers would just loop if

4302
02:33:41,920 --> 02:33:43,439
they find those cyclic dependent

4303
02:33:43,439 --> 02:33:45,920
ns records and some resolvers won't loop

4304
02:33:45,920 --> 02:33:46,960
but they want cash

4305
02:33:46,960 --> 02:33:48,960
so every query of a new client for the

4306
02:33:48,960 --> 02:33:49,920
same thing they're going to trigger a

4307
02:33:49,920 --> 02:33:51,359
new set of queries

4308
02:33:51,359 --> 02:33:53,120
and if you want to fix it detect the

4309
02:33:53,120 --> 02:33:54,479
loop and cache it that's the solution

4310
02:33:54,479 --> 02:33:56,479
for resolver developers

4311
02:33:56,479 --> 02:33:58,479
we re we confirmed that google fixed

4312
02:33:58,479 --> 02:33:59,920
public dns as i said

4313
02:33:59,920 --> 02:34:03,359
this was google before uh fixing it

4314
02:34:03,359 --> 02:34:04,640
we've got a lot of queries from google

4315
02:34:04,640 --> 02:34:06,640
in one particular experiment we repeat

4316
02:34:06,640 --> 02:34:07,840
the experiment and you see that google

4317
02:34:07,840 --> 02:34:09,439
announced and very few queries compared

4318
02:34:09,439 --> 02:34:10,160
to that

4319
02:34:10,160 --> 02:34:13,200
so kudos to them too um

4320
02:34:13,200 --> 02:34:14,560
i think i'm these questions were

4321
02:34:14,560 --> 02:34:16,479
presented in the last presentation so

4322
02:34:16,479 --> 02:34:17,040
i'm going to

4323
02:34:17,040 --> 02:34:18,800
i think stop here because of time you

4324
02:34:18,800 --> 02:34:20,319
can read them later it's just like if

4325
02:34:20,319 --> 02:34:21,280
you want to strike a wonder if you want

4326
02:34:21,280 --> 02:34:21,680
to be

4327
02:34:21,680 --> 02:34:24,319
know if you're safe or not uh and i

4328
02:34:24,319 --> 02:34:25,200
think that's it

4329
02:34:25,200 --> 02:34:28,000
right then i guess um and for just to

4330
02:34:28,000 --> 02:34:29,680
summarize if you're under active server

4331
02:34:29,680 --> 02:34:30,560
operator

4332
02:34:30,560 --> 02:34:33,280
check your zone use cycle hunter it's

4333
02:34:33,280 --> 02:34:34,479
been developed by

4334
02:34:34,479 --> 02:34:35,600
a lot of people in the community so

4335
02:34:35,600 --> 02:34:37,120
thanks to all of them and if your

4336
02:34:37,120 --> 02:34:38,240
resolver operator

4337
02:34:38,240 --> 02:34:40,880
depth up the texas dependencies returns

4338
02:34:40,880 --> 02:34:43,200
her failure and catches her fail

4339
02:34:43,200 --> 02:34:45,200
the resident reports are it's a name

4340
02:34:45,200 --> 02:34:46,960
that i owe i want to

4341
02:34:46,960 --> 02:34:48,800
explicitly thank all the folks at all

4342
02:34:48,800 --> 02:34:50,399
work um

4343
02:34:50,399 --> 02:34:52,800
keith danish for all your support and

4344
02:34:52,800 --> 02:34:54,479
helping us hear this publicly disclose

4345
02:34:54,479 --> 02:34:55,920
that and privately as well

4346
02:34:55,920 --> 02:34:58,000
and now the work in the entire oar

4347
02:34:58,000 --> 02:34:59,680
community got engaged into that and the

4348
02:34:59,680 --> 02:35:01,520
developers that contributed to github

4349
02:35:01,520 --> 02:35:03,359
so thanks everybody for that and i think

4350
02:35:03,359 --> 02:35:05,600
that's it

4351
02:35:05,600 --> 02:35:07,120
all right thank giovanni it was very

4352
02:35:07,120 --> 02:35:09,040
nice to see the uh

4353
02:35:09,040 --> 02:35:12,240
after the the second part of the talk

4354
02:35:12,240 --> 02:35:14,640
after some some months waiting for for

4355
02:35:14,640 --> 02:35:15,920
this to come up

4356
02:35:15,920 --> 02:35:18,080
um right so yeah we've got time for for

4357
02:35:18,080 --> 02:35:20,240
q a uh we got about five minutes so

4358
02:35:20,240 --> 02:35:22,000
again if you want to ask a question

4359
02:35:22,000 --> 02:35:23,920
please either raise your hand in the

4360
02:35:23,920 --> 02:35:27,920
q a um tab or well sorry raise your end

4361
02:35:27,920 --> 02:35:28,240
or

4362
02:35:28,240 --> 02:35:31,200
write your question in the q a tab again

4363
02:35:31,200 --> 02:35:32,479
you're going to have a

4364
02:35:32,479 --> 02:35:35,520
poll which is going to pop up this is

4365
02:35:35,520 --> 02:35:36,160
your

4366
02:35:36,160 --> 02:35:38,160
address popped up now this is your only

4367
02:35:38,160 --> 02:35:40,240
time to raid the talk

4368
02:35:40,240 --> 02:35:42,479
please do so this is very helpful for

4369
02:35:42,479 --> 02:35:45,200
the for the program committee

4370
02:35:45,200 --> 02:35:47,439
all right in the meantime so i mean i'm

4371
02:35:47,439 --> 02:35:49,439
hoping we don't have these kind of

4372
02:35:49,439 --> 02:35:53,200
issues popping up too often

4373
02:35:53,200 --> 02:35:55,920
but i guess from your learnings uh going

4374
02:35:55,920 --> 02:35:56,640
through this

4375
02:35:56,640 --> 02:36:00,399
um through this uh vulnerability

4376
02:36:00,399 --> 02:36:03,600
how what would you do

4377
02:36:03,600 --> 02:36:06,479
differently than the next time like what

4378
02:36:06,479 --> 02:36:08,080
would you suggest the community to do

4379
02:36:08,080 --> 02:36:10,720
when whenever liberty is found how could

4380
02:36:10,720 --> 02:36:11,120
we

4381
02:36:11,120 --> 02:36:14,000
uh engage faster maybe with operators or

4382
02:36:14,000 --> 02:36:15,120
what not

4383
02:36:15,120 --> 02:36:17,680
um yeah so this is for me was the first

4384
02:36:17,680 --> 02:36:19,040
time i'm doing actually public

4385
02:36:19,040 --> 02:36:20,880
disclosure in private

4386
02:36:20,880 --> 02:36:23,200
so i had no experience with that and uh

4387
02:36:23,200 --> 02:36:25,040
i gotta tell you i mean i'm very happy

4388
02:36:25,040 --> 02:36:26,960
with the community response i cannot

4389
02:36:26,960 --> 02:36:28,399
be more happier than that i think oh

4390
02:36:28,399 --> 02:36:30,240
work was a great venue because everybody

4391
02:36:30,240 --> 02:36:31,359
got together

4392
02:36:31,359 --> 02:36:32,880
and having a platform as matter most

4393
02:36:32,880 --> 02:36:34,800
that helped a lot too

4394
02:36:34,800 --> 02:36:36,479
so i think we did good as a community

4395
02:36:36,479 --> 02:36:37,920
and if you can look at github

4396
02:36:37,920 --> 02:36:40,000
as well a lot of people uh really catch

4397
02:36:40,000 --> 02:36:41,439
better lots of the code so i'm actually

4398
02:36:41,439 --> 02:36:42,399
very happy

4399
02:36:42,399 --> 02:36:43,600
and i had a lot of discussions in

4400
02:36:43,600 --> 02:36:45,520
parallel also in matter modes

4401
02:36:45,520 --> 02:36:47,200
for example i talked to benno and

4402
02:36:47,200 --> 02:36:48,800
internet labs and they do unbound the

4403
02:36:48,800 --> 02:36:49,600
resolver

4404
02:36:49,600 --> 02:36:51,520
and he was pointing at cyclos it's

4405
02:36:51,520 --> 02:36:53,040
something they're always looking

4406
02:36:53,040 --> 02:36:54,960
out for when they're doing the resolver

4407
02:36:54,960 --> 02:36:56,479
development and if you look at the

4408
02:36:56,479 --> 02:36:58,000
change log of unbound there's a if you

4409
02:36:58,000 --> 02:36:58,240
look

4410
02:36:58,240 --> 02:37:00,160
just for cyclically your cycle at the

4411
02:37:00,160 --> 02:37:01,280
changelog you're going to see

4412
02:37:01,280 --> 02:37:03,200
a lot of entries where they found some

4413
02:37:03,200 --> 02:37:04,720
instances that could happen and they fix

4414
02:37:04,720 --> 02:37:05,760
it so

4415
02:37:05,760 --> 02:37:07,680
this is an instance of those kind of

4416
02:37:07,680 --> 02:37:08,880
problems so it's um

4417
02:37:08,880 --> 02:37:10,640
for a resolver developer they're very

4418
02:37:10,640 --> 02:37:12,479
concerned about that

4419
02:37:12,479 --> 02:37:14,640
so i think the overall approach i think

4420
02:37:14,640 --> 02:37:16,160
went very well i'm very happy

4421
02:37:16,160 --> 02:37:17,760
especially if google fix anything in

4422
02:37:17,760 --> 02:37:20,000
public dns uh because

4423
02:37:20,000 --> 02:37:22,560
well i know for another cctlds we i know

4424
02:37:22,560 --> 02:37:24,399
it's liso4 where experience does

4425
02:37:24,399 --> 02:37:26,319
these events it was mostly from google

4426
02:37:26,319 --> 02:37:27,840
so they were terrified to

4427
02:37:27,840 --> 02:37:29,680
actually having the biggest resolver on

4428
02:37:29,680 --> 02:37:31,120
the internet pointing at them

4429
02:37:31,120 --> 02:37:32,880
and this is now fixed so i think it's

4430
02:37:32,880 --> 02:37:35,040
been great a great contribution

4431
02:37:35,040 --> 02:37:37,439
and engagement for the community and

4432
02:37:37,439 --> 02:37:39,200
this is i think a good

4433
02:37:39,200 --> 02:37:42,000
this is a good lead for dave feldman uh

4434
02:37:42,000 --> 02:37:42,640
question

4435
02:37:42,640 --> 02:37:44,960
uh your paper says that associative

4436
02:37:44,960 --> 02:37:47,040
servers are the target do i understand

4437
02:37:47,040 --> 02:37:47,680
correctly

4438
02:37:47,680 --> 02:37:50,960
that as vulnerable resolvers are fixed

4439
02:37:50,960 --> 02:37:53,280
the danger to authenticative servers

4440
02:37:53,280 --> 02:37:54,800
disminishes

4441
02:37:54,800 --> 02:37:56,479
now that google and open dns have been

4442
02:37:56,479 --> 02:37:58,560
fixed what's the assessment of

4443
02:37:58,560 --> 02:38:01,120
of a real danger in the wild so they

4444
02:38:01,120 --> 02:38:02,800
have been fixed but i can i can give an

4445
02:38:02,800 --> 02:38:03,760
example here

4446
02:38:03,760 --> 02:38:06,399
this graph here this was produced after

4447
02:38:06,399 --> 02:38:07,200
google

4448
02:38:07,200 --> 02:38:09,600
and uh opened it and has been fixed and

4449
02:38:09,600 --> 02:38:10,640
you see there's a lot of

4450
02:38:10,640 --> 02:38:12,960
these are these are resolvers in loop

4451
02:38:12,960 --> 02:38:14,399
sending in those queries

4452
02:38:14,399 --> 02:38:17,200
and there are still you know it doesn't

4453
02:38:17,200 --> 02:38:18,479
only come in from google that we found

4454
02:38:18,479 --> 02:38:19,920
on many other autonomous systems

4455
02:38:19,920 --> 02:38:22,800
that actually have the same problem um

4456
02:38:22,800 --> 02:38:23,520
and

4457
02:38:23,520 --> 02:38:24,800
i think it's a classic problem of

4458
02:38:24,800 --> 02:38:27,280
software update there's a very long tail

4459
02:38:27,280 --> 02:38:28,720
software that never gets update and

4460
02:38:28,720 --> 02:38:30,319
these are the problematic ones it's not

4461
02:38:30,319 --> 02:38:31,280
only

4462
02:38:31,280 --> 02:38:33,359
we here or google fixing uh but it's

4463
02:38:33,359 --> 02:38:34,479
like some

4464
02:38:34,479 --> 02:38:36,640
small resolver somewhere that's left on

4465
02:38:36,640 --> 02:38:38,080
the corner and it's been doing that

4466
02:38:38,080 --> 02:38:39,760
forever and nobody wants to touch it

4467
02:38:39,760 --> 02:38:40,800
these are the kind of problematic

4468
02:38:40,800 --> 02:38:42,800
resolvers that could be you know if you

4469
02:38:42,800 --> 02:38:44,399
have a large botnet probably can trigger

4470
02:38:44,399 --> 02:38:45,359
those to

4471
02:38:45,359 --> 02:38:48,399
you know send tons of queries so it's a

4472
02:38:48,399 --> 02:38:50,000
classic problem of software update when

4473
02:38:50,000 --> 02:38:51,359
there's a vulnerability it's

4474
02:38:51,359 --> 02:38:53,120
very hard to actually handle the long

4475
02:38:53,120 --> 02:38:55,439
tail but um yeah

4476
02:38:55,439 --> 02:38:57,760
um in general i'm very happy that uh

4477
02:38:57,760 --> 02:38:59,280
google and opendns are

4478
02:38:59,280 --> 02:39:01,840
very happy that they fix it but we never

4479
02:39:01,840 --> 02:39:03,840
fully evaluated interpretation of this

4480
02:39:03,840 --> 02:39:04,399
you know

4481
02:39:04,399 --> 02:39:06,560
if someone would use a botnet we don't

4482
02:39:06,560 --> 02:39:07,760
know what could happen but i

4483
02:39:07,760 --> 02:39:10,960
um yeah we have to public disclose that

4484
02:39:10,960 --> 02:39:11,920
and hope that people

4485
02:39:11,920 --> 02:39:14,479
update but at least the newest versions

4486
02:39:14,479 --> 02:39:15,760
of the resolver software is already

4487
02:39:15,760 --> 02:39:18,080
fixed

4488
02:39:18,080 --> 02:39:19,359
all right thank you that the next

4489
02:39:19,359 --> 02:39:21,359
question is from roland dobbins uh

4490
02:39:21,359 --> 02:39:23,600
can you please discuss on network ddos

4491
02:39:23,600 --> 02:39:25,200
mitigation tactics

4492
02:39:25,200 --> 02:39:27,200
for example detection and suppression of

4493
02:39:27,200 --> 02:39:28,960
repetitive queries

4494
02:39:28,960 --> 02:39:33,040
or sources so in regards to surname

4495
02:39:33,040 --> 02:39:33,680
let's see

4496
02:39:33,680 --> 02:39:37,359
i i think i have this slides here um

4497
02:39:37,359 --> 02:39:39,760
just we can get a record here so what

4498
02:39:39,760 --> 02:39:40,640
are you going to see

4499
02:39:40,640 --> 02:39:44,080
in that search name related event uh

4500
02:39:44,080 --> 02:39:46,000
is for example the authoritative servers

4501
02:39:46,000 --> 02:39:47,920
of dog. and z

4502
02:39:47,920 --> 02:39:49,840
in this case let's say this is the zone

4503
02:39:49,840 --> 02:39:51,280
you're analyzing

4504
02:39:51,280 --> 02:39:53,520
uh doc dot n z and cat. and they're

4505
02:39:53,520 --> 02:39:55,120
cyclic dependent

4506
02:39:55,120 --> 02:39:58,319
what if you run cat dot nl if if you run

4507
02:39:58,319 --> 02:40:00,080
action.l what are you gonna see

4508
02:40:00,080 --> 02:40:02,560
is a lot of queries that come to you

4509
02:40:02,560 --> 02:40:03,359
trying to get

4510
02:40:03,359 --> 02:40:06,560
this a record here um so you're going to

4511
02:40:06,560 --> 02:40:07,040
see like

4512
02:40:07,040 --> 02:40:08,640
it's not a technical report you can see

4513
02:40:08,640 --> 02:40:10,560
like we describe exactly kind of curves

4514
02:40:10,560 --> 02:40:11,680
and they're very repetitive they're

4515
02:40:11,680 --> 02:40:12,560
unique

4516
02:40:12,560 --> 02:40:14,560
they are all the same so if you're going

4517
02:40:14,560 --> 02:40:15,840
to filter based on a key name that's

4518
02:40:15,840 --> 02:40:16,640
very easy to

4519
02:40:16,640 --> 02:40:20,080
filter but the problem is you may get a

4520
02:40:20,080 --> 02:40:20,640
lot of people

4521
02:40:20,640 --> 02:40:23,120
asking the same thing uh but there if

4522
02:40:23,120 --> 02:40:24,319
you're feeling kidding me it's pretty

4523
02:40:24,319 --> 02:40:26,720
straightforward

4524
02:40:26,720 --> 02:40:29,359
okay cool um okay we slightly passed the

4525
02:40:29,359 --> 02:40:30,640
q a there is

4526
02:40:30,640 --> 02:40:33,840
no uh more question there is a comment

4527
02:40:33,840 --> 02:40:34,160
from

4528
02:40:34,160 --> 02:40:36,960
jake zack which i'm going to read we saw

4529
02:40:36,960 --> 02:40:39,520
this from time to time on cirrus tld's

4530
02:40:39,520 --> 02:40:40,640
infrastructure

4531
02:40:40,640 --> 02:40:43,840
the udp packets were many but it was

4532
02:40:43,840 --> 02:40:46,880
rate limited forcing these repeated

4533
02:40:46,880 --> 02:40:48,399
queries to tcp

4534
02:40:48,399 --> 02:40:51,279
that really cause resource issues the

4535
02:40:51,279 --> 02:40:52,640
situation was

4536
02:40:52,640 --> 02:40:55,279
an ideal but it was a good exercise in

4537
02:40:55,279 --> 02:40:57,359
problem solving and it's great that you

4538
02:40:57,359 --> 02:40:58,800
brought the community together to

4539
02:40:58,800 --> 02:41:01,040
address this

4540
02:41:01,040 --> 02:41:03,680
all right thanks is that being saved

4541
02:41:03,680 --> 02:41:04,720
you're supporting your help

4542
02:41:04,720 --> 02:41:08,960
as well too yeah as you're saying like

4543
02:41:08,960 --> 02:41:10,960
if you try to not respond the reserve is

4544
02:41:10,960 --> 02:41:12,080
gonna try tcp

4545
02:41:12,080 --> 02:41:13,920
and then you're gonna you know your fire

4546
02:41:13,920 --> 02:41:15,359
now has to deal with a lot of stateful

4547
02:41:15,359 --> 02:41:16,800
queries repetitive queries

4548
02:41:16,800 --> 02:41:19,279
well good luck with that you know kind

4549
02:41:19,279 --> 02:41:20,160
of i guess that

4550
02:41:20,160 --> 02:41:21,520
i i understand is basically what

4551
02:41:21,520 --> 02:41:23,040
happened all these queries were retried

4552
02:41:23,040 --> 02:41:24,160
over the tcp because they were

4553
02:41:24,160 --> 02:41:25,600
legitimate queries

4554
02:41:25,600 --> 02:41:27,120
all right we're bringing something out

4555
02:41:27,120 --> 02:41:30,160
of time um it's time for a quick break

4556
02:41:30,160 --> 02:41:33,600
um so we will restart at 5 40 utc shop

4557
02:41:33,600 --> 02:41:36,800
um you folks can go and

4558
02:41:36,800 --> 02:41:39,920
uh and chat face to face on the special

4559
02:41:39,920 --> 02:41:42,560
chat please um you will see the details

4560
02:41:42,560 --> 02:41:43,760
on the rolling slide

4561
02:41:43,760 --> 02:41:46,640
please do not do not share the link i

4562
02:41:46,640 --> 02:41:48,399
would like again to thank our

4563
02:41:48,399 --> 02:41:51,120
workshop sponsors farsight and various

4564
02:41:51,120 --> 02:41:52,000
sign

4565
02:41:52,000 --> 02:41:53,920
and with that being said enjoy your

4566
02:41:53,920 --> 02:41:58,479
break and i'll see you in a few minutes

4567
02:41:58,479 --> 02:42:01,439
hey welcome back everybody i am now

4568
02:42:01,439 --> 02:42:02,160
joined

4569
02:42:02,160 --> 02:42:05,040
by yuen from uh v and nick which is

4570
02:42:05,040 --> 02:42:06,240
going to be our

4571
02:42:06,240 --> 02:42:09,359
timekeeper and without further ado i

4572
02:42:09,359 --> 02:42:11,520
would like to introduce our next speaker

4573
02:42:11,520 --> 02:42:13,760
lehman who is going to talk about 30

4574
02:42:13,760 --> 02:42:16,000
years of operating a root name server

4575
02:42:16,000 --> 02:42:19,120
the challenge is now and then

4576
02:42:19,120 --> 02:42:23,439
demand unto you yep thank you

4577
02:42:23,439 --> 02:42:26,080
and thank you all for attending um and

4578
02:42:26,080 --> 02:42:29,200
good local time to you wherever you are

4579
02:42:29,200 --> 02:42:31,520
my name is larjiwan liman i work for net

4580
02:42:31,520 --> 02:42:33,439
node and we operate one of the root name

4581
02:42:33,439 --> 02:42:34,479
servers

4582
02:42:34,479 --> 02:42:37,520
and i thought it might be a good idea to

4583
02:42:37,520 --> 02:42:40,319
give a little presentation of the

4584
02:42:40,319 --> 02:42:42,160
historic view of this since we're

4585
02:42:42,160 --> 02:42:43,359
actually celebrating

4586
02:42:43,359 --> 02:42:46,720
um 30 years this this summer

4587
02:42:46,720 --> 02:42:50,800
so um a long journey began

4588
02:42:50,800 --> 02:42:53,840
on july 28 1991

4589
02:42:53,840 --> 02:42:57,040
where when the following two records

4590
02:42:57,040 --> 02:42:59,680
were entered into the root zone uh

4591
02:42:59,680 --> 02:43:01,840
officially

4592
02:43:01,840 --> 02:43:04,240
starting the operation of the root name

4593
02:43:04,240 --> 02:43:06,479
server operated from sweden

4594
02:43:06,479 --> 02:43:08,000
at the time it was under a different

4595
02:43:08,000 --> 02:43:10,399
name because the names of the

4596
02:43:10,399 --> 02:43:12,319
root name servers were changed later on

4597
02:43:12,319 --> 02:43:13,920
as we will see

4598
02:43:13,920 --> 02:43:18,560
so this summer that will be 30 years ago

4599
02:43:18,560 --> 02:43:21,920
actually for us both because the 30

4600
02:43:21,920 --> 02:43:22,479
years

4601
02:43:22,479 --> 02:43:24,960
is not the scary number the scary number

4602
02:43:24,960 --> 02:43:27,040
is that i've been along for 29 and a

4603
02:43:27,040 --> 02:43:28,800
half of those years

4604
02:43:28,800 --> 02:43:31,040
and uh that that's actually a

4605
02:43:31,040 --> 02:43:32,720
frightening frightening number when you

4606
02:43:32,720 --> 02:43:34,399
realize it

4607
02:43:34,399 --> 02:43:38,000
so what was it like back in 1991 uh well

4608
02:43:38,000 --> 02:43:40,720
uh v a note singular root name server in

4609
02:43:40,720 --> 02:43:42,319
europe at the time

4610
02:43:42,319 --> 02:43:44,560
uh it was just a simple workstation on a

4611
02:43:44,560 --> 02:43:46,479
desk in an empty office

4612
02:43:46,479 --> 02:43:48,800
at the time it was operated at the royal

4613
02:43:48,800 --> 02:43:50,479
institute of technology

4614
02:43:50,479 --> 02:43:52,399
uh that's the technical university in

4615
02:43:52,399 --> 02:43:54,720
stockholm and

4616
02:43:54,720 --> 02:43:57,120
that's where that's the nursery of

4617
02:43:57,120 --> 02:43:58,880
internet in sweden if you wish

4618
02:43:58,880 --> 02:44:00,399
it wasn't where the first experiments

4619
02:44:00,399 --> 02:44:02,640
were around but that's where

4620
02:44:02,640 --> 02:44:05,600
where it was uh it started to be

4621
02:44:05,600 --> 02:44:06,479
operated on

4622
02:44:06,479 --> 02:44:10,080
on a scale and the the the kth knock the

4623
02:44:10,080 --> 02:44:11,920
kth network operation center

4624
02:44:11,920 --> 02:44:15,359
uh was the uh the cradle for soon at the

4625
02:44:15,359 --> 02:44:17,120
swedish university network which was the

4626
02:44:17,120 --> 02:44:17,760
first

4627
02:44:17,760 --> 02:44:21,359
internet service provider in in sweden

4628
02:44:21,359 --> 02:44:24,560
so in july 1991 this was just a simple

4629
02:44:24,560 --> 02:44:26,479
sun 350 workstation

4630
02:44:26,479 --> 02:44:29,920
with a motorola 6820 processor

4631
02:44:29,920 --> 02:44:33,520
and just four megabytes of ram um

4632
02:44:33,520 --> 02:44:35,359
now you have to realize that 30 years

4633
02:44:35,359 --> 02:44:36,640
ago the internet was something

4634
02:44:36,640 --> 02:44:38,240
completely different than what we have

4635
02:44:38,240 --> 02:44:38,800
today

4636
02:44:38,800 --> 02:44:41,279
and the web wasn't even invented so it

4637
02:44:41,279 --> 02:44:42,960
was peaceful and quiet on the network

4638
02:44:42,960 --> 02:44:43,520
there was

4639
02:44:43,520 --> 02:44:45,120
you could count the emails and you could

4640
02:44:45,120 --> 02:44:46,560
see the files as they were being

4641
02:44:46,560 --> 02:44:48,319
transferred with ftp

4642
02:44:48,319 --> 02:44:50,399
and that was about it oh there was the

4643
02:44:50,399 --> 02:44:53,920
old login using telnet as well

4644
02:44:53,920 --> 02:44:56,080
now that sun 350 was actually just a

4645
02:44:56,080 --> 02:44:58,000
temporary machine because the the one

4646
02:44:58,000 --> 02:44:58,560
that was

4647
02:44:58,560 --> 02:45:01,600
on order that we waited for um hadn't

4648
02:45:01,600 --> 02:45:02,960
been delivered yet so

4649
02:45:02,960 --> 02:45:05,520
quite shortly after after july and i

4650
02:45:05,520 --> 02:45:07,359
don't know the exact date

4651
02:45:07,359 --> 02:45:09,200
it was replaced by the real server which

4652
02:45:09,200 --> 02:45:13,279
was the sun 465 or spark station oneplus

4653
02:45:13,279 --> 02:45:15,760
but again still a workstation and that's

4654
02:45:15,760 --> 02:45:17,840
the machine that was in operation when i

4655
02:45:17,840 --> 02:45:19,760
started to work for the knock back in

4656
02:45:19,760 --> 02:45:23,439
february of 1992. we were already up to

4657
02:45:23,439 --> 02:45:25,600
40 megabytes of ram

4658
02:45:25,600 --> 02:45:27,200
still just 10 megabit ethernet

4659
02:45:27,200 --> 02:45:29,359
connections and so on

4660
02:45:29,359 --> 02:45:31,920
and at net node we actually have a

4661
02:45:31,920 --> 02:45:32,640
museum

4662
02:45:32,640 --> 02:45:35,840
we have tried to preserve hardware from

4663
02:45:35,840 --> 02:45:38,880
from various stages of our operation

4664
02:45:38,880 --> 02:45:42,960
and true to that we actually have

4665
02:45:42,960 --> 02:45:47,200
the actual machine that operated in 1992

4666
02:45:47,200 --> 02:45:49,439
when i started to work for for the kth

4667
02:45:49,439 --> 02:45:51,040
knox the lower one here is

4668
02:45:51,040 --> 02:45:54,240
it's marked tftp.evo.net because when it

4669
02:45:54,240 --> 02:45:56,000
was retired as a root name server

4670
02:45:56,000 --> 02:45:58,800
it was repurposed to be used as a tftp

4671
02:45:58,800 --> 02:46:00,720
server for e-bone

4672
02:46:00,720 --> 02:46:04,240
a pan-european operator at the time but

4673
02:46:04,240 --> 02:46:06,240
the machine is the actual physical

4674
02:46:06,240 --> 02:46:07,520
machine that operated

4675
02:46:07,520 --> 02:46:08,960
and on top of that you see the next

4676
02:46:08,960 --> 02:46:10,479
generation that followed on that from

4677
02:46:10,479 --> 02:46:12,399
1994

4678
02:46:12,399 --> 02:46:14,319
which was the spark station 10 then much

4679
02:46:14,319 --> 02:46:17,680
much bigger and much more powerful

4680
02:46:18,080 --> 02:46:19,600
now what were the challenges back in

4681
02:46:19,600 --> 02:46:21,520
1992 uh well

4682
02:46:21,520 --> 02:46:22,960
you wouldn't believe this but getting

4683
02:46:22,960 --> 02:46:24,880
the zone files into the root name server

4684
02:46:24,880 --> 02:46:27,359
was actually a challenge

4685
02:46:27,359 --> 02:46:31,120
in the day sweden was behind

4686
02:46:31,120 --> 02:46:34,399
or actually actually i think the entire

4687
02:46:34,399 --> 02:46:35,760
nordic region

4688
02:46:35,760 --> 02:46:38,160
because most of the traffic from from

4689
02:46:38,160 --> 02:46:40,000
norton adventures.com

4690
02:46:40,000 --> 02:46:43,279
sat behind two uh four megabit

4691
02:46:43,279 --> 02:46:46,560
links to the united states

4692
02:46:46,560 --> 02:46:49,040
and as you can imagine uh packet loss

4693
02:46:49,040 --> 02:46:49,600
was

4694
02:46:49,600 --> 02:46:52,800
actually a severe problem

4695
02:46:52,800 --> 02:46:55,279
30 packet loss was not unusual and i

4696
02:46:55,279 --> 02:46:56,800
remember seeing more than 50

4697
02:46:56,800 --> 02:46:59,680
packet loss uh you don't have a very

4698
02:46:59,680 --> 02:47:01,120
good experience uh

4699
02:47:01,120 --> 02:47:03,120
when you have that those types of packet

4700
02:47:03,120 --> 02:47:05,120
losses

4701
02:47:05,120 --> 02:47:07,920
so dns zone transfers simply didn't work

4702
02:47:07,920 --> 02:47:08,319
uh

4703
02:47:08,319 --> 02:47:11,120
the the dns software would time out when

4704
02:47:11,120 --> 02:47:12,000
when the

4705
02:47:12,000 --> 02:47:14,160
when the zone wasn't propagated properly

4706
02:47:14,160 --> 02:47:15,600
so we had to use ftp

4707
02:47:15,600 --> 02:47:17,600
ftp was somewhat more resilient to to

4708
02:47:17,600 --> 02:47:18,840
packet loss

4709
02:47:18,840 --> 02:47:21,840
and this was actually a manual

4710
02:47:21,840 --> 02:47:24,479
endeavor two or three times per week i

4711
02:47:24,479 --> 02:47:25,920
would sit down and i would

4712
02:47:25,920 --> 02:47:28,479
log into the server in the us and i

4713
02:47:28,479 --> 02:47:29,279
would

4714
02:47:29,279 --> 02:47:31,600
copy the zone files using ftp and then i

4715
02:47:31,600 --> 02:47:33,040
would manually

4716
02:47:33,040 --> 02:47:36,319
diff the zone files to to uh the the old

4717
02:47:36,319 --> 02:47:37,040
ones to see

4718
02:47:37,040 --> 02:47:38,800
what changes have happened and if there

4719
02:47:38,800 --> 02:47:41,600
were any errors occasionally there were

4720
02:47:41,600 --> 02:47:44,640
um i remember one time when when an

4721
02:47:44,640 --> 02:47:48,800
entire nation a cctld was inadvertently

4722
02:47:48,800 --> 02:47:50,720
dropped from from the root zone file so

4723
02:47:50,720 --> 02:47:51,680
that

4724
02:47:51,680 --> 02:47:54,960
that that entire country risked dropping

4725
02:47:54,960 --> 02:47:55,920
off the internet

4726
02:47:55,920 --> 02:47:57,680
uh but fortunately we caught it before

4727
02:47:57,680 --> 02:48:00,160
we reloaded the server so so uh

4728
02:48:00,160 --> 02:48:03,520
that never happened uh

4729
02:48:03,520 --> 02:48:05,359
another challenge we had was zone

4730
02:48:05,359 --> 02:48:07,359
content mix um

4731
02:48:07,359 --> 02:48:09,760
because the server at the time operated

4732
02:48:09,760 --> 02:48:11,920
both as a caching resolver and as an

4733
02:48:11,920 --> 02:48:13,520
authoritative server

4734
02:48:13,520 --> 02:48:15,520
we know nowadays that that's not really

4735
02:48:15,520 --> 02:48:17,600
a good idea and it was even a worse idea

4736
02:48:17,600 --> 02:48:18,640
at the time

4737
02:48:18,640 --> 02:48:21,520
because uh zone boundaries were not

4738
02:48:21,520 --> 02:48:23,359
enforced in

4739
02:48:23,359 --> 02:48:27,040
in zone transfers so

4740
02:48:27,040 --> 02:48:29,520
you could put any data in any zone file

4741
02:48:29,520 --> 02:48:30,560
and if you were

4742
02:48:30,560 --> 02:48:32,640
uh unlucky they would just show up in

4743
02:48:32,640 --> 02:48:34,640
your server um

4744
02:48:34,640 --> 02:48:38,080
some transfers were honestly less of a

4745
02:48:38,080 --> 02:48:39,359
problem but when you loaded the zone

4746
02:48:39,359 --> 02:48:41,520
file if someone put in a totally

4747
02:48:41,520 --> 02:48:43,040
different record in there it would just

4748
02:48:43,040 --> 02:48:45,600
be loaded

4749
02:48:45,600 --> 02:48:48,399
it also served several levels of the

4750
02:48:48,399 --> 02:48:48,880
route

4751
02:48:48,880 --> 02:48:52,479
sorry of the dns tree com net and org

4752
02:48:52,479 --> 02:48:55,680
and sc were also in the same server

4753
02:48:55,680 --> 02:48:58,880
so the server would just hand out any

4754
02:48:58,880 --> 02:49:00,560
records that happen to be

4755
02:49:00,560 --> 02:49:04,640
match the query and that can be good and

4756
02:49:04,640 --> 02:49:05,840
bad

4757
02:49:05,840 --> 02:49:09,200
and there are some bad consequences that

4758
02:49:09,200 --> 02:49:11,279
we've learned a lot since then software

4759
02:49:11,279 --> 02:49:13,200
has improved tremendously since then so

4760
02:49:13,200 --> 02:49:14,720
these are are no longer the same

4761
02:49:14,720 --> 02:49:17,439
challenges as it once were

4762
02:49:17,439 --> 02:49:19,760
and the the human errors that we still

4763
02:49:19,760 --> 02:49:21,200
see um

4764
02:49:21,200 --> 02:49:23,359
don't have the same impact as they had

4765
02:49:23,359 --> 02:49:24,479
in the back in the day

4766
02:49:24,479 --> 02:49:27,600
i've been chasing broken a records from

4767
02:49:27,600 --> 02:49:30,319
switzerland to northern sweden uh took

4768
02:49:30,319 --> 02:49:32,640
six months to clear the dns of a broken

4769
02:49:32,640 --> 02:49:34,640
a record that

4770
02:49:34,640 --> 02:49:36,880
hampered the service of the dot se

4771
02:49:36,880 --> 02:49:41,839
domain back in what 1995

4772
02:49:42,399 --> 02:49:44,640
uh in the mid 1990s we started to see

4773
02:49:44,640 --> 02:49:45,840
politics popping up

4774
02:49:45,840 --> 02:49:47,920
the internet picked up speed and when it

4775
02:49:47,920 --> 02:49:49,279
picked up speed and

4776
02:49:49,279 --> 02:49:52,399
attracted more people business also

4777
02:49:52,399 --> 02:49:55,040
increased so uh money started to be an

4778
02:49:55,040 --> 02:49:57,600
issue and that attracts politicians

4779
02:49:57,600 --> 02:50:00,800
uh one issue was acceptable use policies

4780
02:50:00,800 --> 02:50:03,200
uh some specifically academic networks

4781
02:50:03,200 --> 02:50:03,920
uh

4782
02:50:03,920 --> 02:50:06,240
had limitations on who got to use the

4783
02:50:06,240 --> 02:50:08,160
network and that

4784
02:50:08,160 --> 02:50:12,960
that created the notion

4785
02:50:12,960 --> 02:50:15,600
that possibly traffic to the root name

4786
02:50:15,600 --> 02:50:16,479
servers

4787
02:50:16,479 --> 02:50:19,279
remember only nine at the time was being

4788
02:50:19,279 --> 02:50:20,479
filtered because of these

4789
02:50:20,479 --> 02:50:22,399
acceptable use policies that was never

4790
02:50:22,399 --> 02:50:23,920
the case with the one

4791
02:50:23,920 --> 02:50:26,560
in sweden but there were you know

4792
02:50:26,560 --> 02:50:29,359
allegations of that

4793
02:50:29,359 --> 02:50:31,279
so we needed more root name servers the

4794
02:50:31,279 --> 02:50:32,960
distribution of the existing nine

4795
02:50:32,960 --> 02:50:35,200
uh was an issue only one of them was

4796
02:50:35,200 --> 02:50:37,439
placed outside the united states

4797
02:50:37,439 --> 02:50:40,160
and we need more so in 1995 the root

4798
02:50:40,160 --> 02:50:42,000
servers were renamed

4799
02:50:42,000 --> 02:50:43,840
we didn't have any extended dns at the

4800
02:50:43,840 --> 02:50:45,040
time so

4801
02:50:45,040 --> 02:50:48,000
there was a 512 byte limit on on the udp

4802
02:50:48,000 --> 02:50:48,560
packets

4803
02:50:48,560 --> 02:50:51,920
and the query that that the server uh

4804
02:50:51,920 --> 02:50:54,080
asks in the beginning to figure out the

4805
02:50:54,080 --> 02:50:56,080
list of the root name servers

4806
02:50:56,080 --> 02:50:59,359
limited the the set of servers to nine

4807
02:50:59,359 --> 02:51:01,040
because we couldn't fit any more in that

4808
02:51:01,040 --> 02:51:04,319
512 byte packet

4809
02:51:04,319 --> 02:51:07,120
this clever new scheme uh took advantage

4810
02:51:07,120 --> 02:51:08,720
of the dina's message compression

4811
02:51:08,720 --> 02:51:10,800
and we suddenly by just changing the

4812
02:51:10,800 --> 02:51:12,399
names of the servers we had room for

4813
02:51:12,399 --> 02:51:13,040
four more

4814
02:51:13,040 --> 02:51:15,120
so that's when the letters were

4815
02:51:15,120 --> 02:51:16,479
introduced

4816
02:51:16,479 --> 02:51:19,840
so a through i were already operation

4817
02:51:19,840 --> 02:51:24,399
operating and we now added jkl and m

4818
02:51:26,479 --> 02:51:28,080
uh as we got near the turn of the

4819
02:51:28,080 --> 02:51:30,560
century um

4820
02:51:30,560 --> 02:51:32,560
the the internet had grown to a size

4821
02:51:32,560 --> 02:51:33,680
where it wasn't really

4822
02:51:33,680 --> 02:51:36,720
uh feasible to have one single person

4823
02:51:36,720 --> 02:51:40,000
the ayanna be in charge of the root name

4824
02:51:40,000 --> 02:51:42,720
service system and the entire root zone

4825
02:51:42,720 --> 02:51:44,720
and its administration

4826
02:51:44,720 --> 02:51:48,000
so uh uh as an international effort

4827
02:51:48,000 --> 02:51:51,040
icann was was created um and

4828
02:51:51,040 --> 02:51:53,120
john hostell who was the head at the

4829
02:51:53,120 --> 02:51:54,240
ayana uh

4830
02:51:54,240 --> 02:51:56,479
at the time and also who was in charge

4831
02:51:56,479 --> 02:51:58,160
of the the root zone

4832
02:51:58,160 --> 02:52:01,520
was very much uh in this process he was

4833
02:52:01,520 --> 02:52:03,040
one of the driving forces to

4834
02:52:03,040 --> 02:52:06,720
to create uh what's now i can and uh

4835
02:52:06,720 --> 02:52:09,439
an english international community

4836
02:52:09,439 --> 02:52:12,000
around that

4837
02:52:12,399 --> 02:52:15,600
but he died suddenly in 1998 uh

4838
02:52:15,600 --> 02:52:19,200
john pastel passed away uh and

4839
02:52:19,200 --> 02:52:20,640
this was actually the first time when

4840
02:52:20,640 --> 02:52:22,240
all the roots over operators sat

4841
02:52:22,240 --> 02:52:22,800
together

4842
02:52:22,800 --> 02:52:24,880
in a meeting with a fairly covert

4843
02:52:24,880 --> 02:52:26,399
meeting because we didn't know anything

4844
02:52:26,399 --> 02:52:27,040
about

4845
02:52:27,040 --> 02:52:28,800
what the actual you know attention would

4846
02:52:28,800 --> 02:52:31,279
be so we sat down

4847
02:52:31,279 --> 02:52:33,520
and talked to each other just and

4848
02:52:33,520 --> 02:52:35,120
realized that we need to coordinate

4849
02:52:35,120 --> 02:52:38,560
we need to keep this running and we also

4850
02:52:38,560 --> 02:52:41,120
all agreed that diana is the source of

4851
02:52:41,120 --> 02:52:42,080
data and

4852
02:52:42,080 --> 02:52:44,880
not no one else and and that's a

4853
02:52:44,880 --> 02:52:48,479
statement that holds true today's deal

4854
02:52:48,479 --> 02:52:50,560
icon was created the root service system

4855
02:52:50,560 --> 02:52:52,160
advisory committee of icann was

4856
02:52:52,160 --> 02:52:55,040
one of the initial advisory committees

4857
02:52:55,040 --> 02:52:56,479
so it's actually an

4858
02:52:56,479 --> 02:52:59,200
integral part of icann and it's still

4859
02:52:59,200 --> 02:53:01,520
operating today

4860
02:53:01,520 --> 02:53:02,880
another thing that happened around the

4861
02:53:02,880 --> 02:53:04,880
turn of the century was the the the year

4862
02:53:04,880 --> 02:53:06,319
2000 bag

4863
02:53:06,319 --> 02:53:08,840
that was a lot of brouhaha around that

4864
02:53:08,840 --> 02:53:11,279
and

4865
02:53:11,279 --> 02:53:13,359
we had our fair share of attention

4866
02:53:13,359 --> 02:53:14,319
around that so

4867
02:53:14,319 --> 02:53:16,479
we did test runs we changed the clocks

4868
02:53:16,479 --> 02:53:18,080
of the servers we did a lot of things

4869
02:53:18,080 --> 02:53:19,920
just to make sure that that everything

4870
02:53:19,920 --> 02:53:21,680
would run smoothly

4871
02:53:21,680 --> 02:53:23,520
but regardless of that we actually had

4872
02:53:23,520 --> 02:53:24,880
staff on site

4873
02:53:24,880 --> 02:53:26,880
at the university during the night there

4874
02:53:26,880 --> 02:53:29,040
were a couple of guys who

4875
02:53:29,040 --> 02:53:32,399
who volunteered for to take the offer of

4876
02:53:32,399 --> 02:53:33,600
a fast

4877
02:53:33,600 --> 02:53:35,600
bonus to their salary to to spend the

4878
02:53:35,600 --> 02:53:37,520
night in the computer center

4879
02:53:37,520 --> 02:53:39,600
but everything ran just smoothly for on

4880
02:53:39,600 --> 02:53:41,200
our on our side and all the routine

4881
02:53:41,200 --> 02:53:42,000
servers so

4882
02:53:42,000 --> 02:53:45,920
that wasn't an issue for us at all

4883
02:53:45,920 --> 02:53:47,760
so what do we see which challenges do we

4884
02:53:47,760 --> 02:53:49,600
have nowadays

4885
02:53:49,600 --> 02:53:50,960
well the internet and the root service

4886
02:53:50,960 --> 02:53:52,479
has gradually turned into an

4887
02:53:52,479 --> 02:53:53,520
infrastructure

4888
02:53:53,520 --> 02:53:56,640
and my own definition of infrastructure

4889
02:53:56,640 --> 02:53:57,840
is that's something

4890
02:53:57,840 --> 02:54:00,319
that you don't realize is there and you

4891
02:54:00,319 --> 02:54:01,120
use it

4892
02:54:01,120 --> 02:54:03,040
all the time every day and you don't

4893
02:54:03,040 --> 02:54:04,399
realize that it's there

4894
02:54:04,399 --> 02:54:07,760
until it's missing you drive on the road

4895
02:54:07,760 --> 02:54:08,560
and you don't really

4896
02:54:08,560 --> 02:54:10,160
think about that there's a road there

4897
02:54:10,160 --> 02:54:11,920
until it's missing

4898
02:54:11,920 --> 02:54:15,040
you you turn on the the tap to have some

4899
02:54:15,040 --> 02:54:16,720
water and you don't really think about

4900
02:54:16,720 --> 02:54:16,960
it

4901
02:54:16,960 --> 02:54:19,520
until it's missing and the same goes for

4902
02:54:19,520 --> 02:54:20,160
the internet

4903
02:54:20,160 --> 02:54:22,560
now if the internet stops working you

4904
02:54:22,560 --> 02:54:24,240
you realize it but you don't you use it

4905
02:54:24,240 --> 02:54:25,120
all the time and

4906
02:54:25,120 --> 02:54:28,319
now it's infrastructure so

4907
02:54:28,319 --> 02:54:30,640
we have much higher demands on service

4908
02:54:30,640 --> 02:54:31,840
stability

4909
02:54:31,840 --> 02:54:33,920
and actually things that you might not

4910
02:54:33,920 --> 02:54:35,680
think about but policy stability and

4911
02:54:35,680 --> 02:54:37,120
financial stability

4912
02:54:37,120 --> 02:54:40,399
as well for for the root service so

4913
02:54:40,399 --> 02:54:42,880
how does netnow try to meet these

4914
02:54:42,880 --> 02:54:43,600
challenges

4915
02:54:43,600 --> 02:54:46,800
well on the service side

4916
02:54:46,800 --> 02:54:50,160
we work a lot with provisioning

4917
02:54:50,160 --> 02:54:52,000
as you know we we operate on anycast

4918
02:54:52,000 --> 02:54:54,240
network for for our service

4919
02:54:54,240 --> 02:54:56,399
uh we have dual systems for all critical

4920
02:54:56,399 --> 02:54:58,560
parts in the provisioning chain

4921
02:54:58,560 --> 02:55:01,200
we use vpn based transport to make sure

4922
02:55:01,200 --> 02:55:02,720
that that

4923
02:55:02,720 --> 02:55:05,120
everything is the integra integrity of

4924
02:55:05,120 --> 02:55:06,000
all the

4925
02:55:06,000 --> 02:55:09,120
management is okay and we use machine

4926
02:55:09,120 --> 02:55:10,880
generated configurations because we want

4927
02:55:10,880 --> 02:55:11,840
to limit the

4928
02:55:11,840 --> 02:55:14,960
the amount of errors introduced by units

4929
02:55:14,960 --> 02:55:17,359
uh we collect statistics there is an rsi

4930
02:55:17,359 --> 02:55:18,960
document number two

4931
02:55:18,960 --> 02:55:21,120
that specifies the statistics that we're

4932
02:55:21,120 --> 02:55:22,720
supposed to collect on behalf of the

4933
02:55:22,720 --> 02:55:24,640
public but we collect a lot more

4934
02:55:24,640 --> 02:55:28,560
um and we use that to monitor

4935
02:55:28,560 --> 02:55:31,840
uh the health of the system

4936
02:55:32,000 --> 02:55:36,319
there was a root zone scalability study

4937
02:55:36,319 --> 02:55:38,399
back in 2009 which

4938
02:55:38,399 --> 02:55:40,960
which looked at the the scaling issues

4939
02:55:40,960 --> 02:55:42,000
of the root zone

4940
02:55:42,000 --> 02:55:45,040
that was in conjunction with the the

4941
02:55:45,040 --> 02:55:46,800
plans to open up for new

4942
02:55:46,800 --> 02:55:50,399
gtlds um and

4943
02:55:50,399 --> 02:55:52,960
we we required that that there be a

4944
02:55:52,960 --> 02:55:54,720
study done so that we would

4945
02:55:54,720 --> 02:55:57,600
have a some understanding of how quickly

4946
02:55:57,600 --> 02:55:58,000
could we

4947
02:55:58,000 --> 02:56:02,399
add new new gtlds to the root zone

4948
02:56:02,560 --> 02:56:04,880
that was uh so to speak in initial work

4949
02:56:04,880 --> 02:56:07,680
and after the transition of the ayana

4950
02:56:07,680 --> 02:56:11,359
function back in 2016-17

4951
02:56:11,359 --> 02:56:14,399
the root zone evolution review committee

4952
02:56:14,399 --> 02:56:15,760
was established which

4953
02:56:15,760 --> 02:56:20,000
now keeps an eye on things like that

4954
02:56:20,640 --> 02:56:23,680
more reachability to our service is

4955
02:56:23,680 --> 02:56:25,520
another very important issue

4956
02:56:25,520 --> 02:56:28,319
as i said we use anycast we have um

4957
02:56:28,319 --> 02:56:29,359
maintain

4958
02:56:29,359 --> 02:56:32,399
70 sites or more than 70 sites we have

4959
02:56:32,399 --> 02:56:34,160
thousands of thousands of peering

4960
02:56:34,160 --> 02:56:35,920
relationships

4961
02:56:35,920 --> 02:56:39,040
we use route servers extensively where

4962
02:56:39,040 --> 02:56:40,800
we can where we're connected

4963
02:56:40,800 --> 02:56:43,120
we use peeringdb to find new peers and

4964
02:56:43,120 --> 02:56:44,720
and make sure that we have the right

4965
02:56:44,720 --> 02:56:45,920
relationships

4966
02:56:45,920 --> 02:56:47,600
we maintain dialogues with our site

4967
02:56:47,600 --> 02:56:49,600
hosts that that

4968
02:56:49,600 --> 02:56:52,319
where we are located with our servers we

4969
02:56:52,319 --> 02:56:54,240
we sign our our

4970
02:56:54,240 --> 02:56:57,520
routes with them with the rpki

4971
02:56:57,520 --> 02:57:01,120
so that those who receive our routes can

4972
02:57:01,120 --> 02:57:04,960
can validate that they're correct and

4973
02:57:04,960 --> 02:57:07,279
in all this we actually are able to draw

4974
02:57:07,279 --> 02:57:08,000
from experience

4975
02:57:08,000 --> 02:57:09,840
of operating internet exchange points

4976
02:57:09,840 --> 02:57:11,520
net node has a couple of business legs

4977
02:57:11,520 --> 02:57:13,680
and then dns is only one of them

4978
02:57:13,680 --> 02:57:16,240
another one is operating internet

4979
02:57:16,240 --> 02:57:17,520
exchanges

4980
02:57:17,520 --> 02:57:19,439
that means that we have network and

4981
02:57:19,439 --> 02:57:21,680
routing expertise in-house that we can

4982
02:57:21,680 --> 02:57:22,000
draw

4983
02:57:22,000 --> 02:57:23,920
from when we when we work with these

4984
02:57:23,920 --> 02:57:26,000
things

4985
02:57:26,000 --> 02:57:29,040
right so interrupt but you have five

4986
02:57:29,040 --> 02:57:30,720
minutes remaining until q

4987
02:57:30,720 --> 02:57:34,479
a yeah thank you uh policy stability is

4988
02:57:34,479 --> 02:57:37,200
another thing

4989
02:57:37,200 --> 02:57:39,120
global dns policy effect affects the

4990
02:57:39,120 --> 02:57:41,520
root service more than other services

4991
02:57:41,520 --> 02:57:42,640
because the route is

4992
02:57:42,640 --> 02:57:46,080
at the pinnacle of it if you if you do

4993
02:57:46,080 --> 02:57:47,520
something that that

4994
02:57:47,520 --> 02:57:49,520
influences the route you will have an

4995
02:57:49,520 --> 02:57:53,200
effect on the entire dns tree

4996
02:57:53,520 --> 02:57:56,720
so there are lots of places where

4997
02:57:56,720 --> 02:58:00,319
policy that touches on dns

4998
02:58:00,319 --> 02:58:02,399
service and especially the route is

4999
02:58:02,399 --> 02:58:03,359
being discussed

5000
02:58:03,359 --> 02:58:06,960
and maintained uh we have of course

5001
02:58:06,960 --> 02:58:09,680
the ayana which is operated by the pti

5002
02:58:09,680 --> 02:58:10,080
and

5003
02:58:10,080 --> 02:58:13,359
and which is uh so to speak monitored by

5004
02:58:13,359 --> 02:58:15,520
the customer standing committee

5005
02:58:15,520 --> 02:58:19,120
that's one place where dns

5006
02:58:19,120 --> 02:58:21,920
administration for the root zone is

5007
02:58:21,920 --> 02:58:22,880
handled

5008
02:58:22,880 --> 02:58:25,680
we have the root server sorry the roots

5009
02:58:25,680 --> 02:58:26,640
system

5010
02:58:26,640 --> 02:58:28,160
roots have a system advisory committee

5011
02:58:28,160 --> 02:58:30,000
in icann

5012
02:58:30,000 --> 02:58:32,160
that deals with policy and relationship

5013
02:58:32,160 --> 02:58:34,399
with i can

5014
02:58:34,399 --> 02:58:36,640
the other eye consist uses our circle

5015
02:58:36,640 --> 02:58:37,920
i've already mentioned there's the

5016
02:58:37,920 --> 02:58:39,279
security and stability advisory

5017
02:58:39,279 --> 02:58:39,920
committee

5018
02:58:39,920 --> 02:58:42,240
and now the root service system

5019
02:58:42,240 --> 02:58:43,600
governance working group

5020
02:58:43,600 --> 02:58:46,080
that's all within icann the governance

5021
02:58:46,080 --> 02:58:47,680
working group is an ongoing

5022
02:58:47,680 --> 02:58:50,000
working group right now that is looking

5023
02:58:50,000 --> 02:58:50,960
to

5024
02:58:50,960 --> 02:58:54,640
modify and improve the accountability

5025
02:58:54,640 --> 02:58:58,240
framework around the root server system

5026
02:58:58,240 --> 02:59:00,800
it's been very unclear for the past 20

5027
02:59:00,800 --> 02:59:01,600
years how

5028
02:59:01,600 --> 02:59:04,240
how the accountability works and we want

5029
02:59:04,240 --> 02:59:06,640
to make that better and improve it

5030
02:59:06,640 --> 02:59:08,479
then there are a whole slew of other

5031
02:59:08,479 --> 02:59:10,000
places the

5032
02:59:10,000 --> 02:59:12,880
itu the european union the ietf for

5033
02:59:12,880 --> 02:59:13,680
standards

5034
02:59:13,680 --> 02:59:16,240
right on its dns working group center

5035
02:59:16,240 --> 02:59:19,600
which coordinates the top-level domains

5036
02:59:19,600 --> 02:59:23,439
all these places discuss and relate to

5037
02:59:23,439 --> 02:59:24,399
the root service

5038
02:59:24,399 --> 02:59:27,760
so in order to provide a good service

5039
02:59:27,760 --> 02:59:28,960
and

5040
02:59:28,960 --> 02:59:31,920
and be in touch with everyone who who

5041
02:59:31,920 --> 02:59:33,200
feels

5042
02:59:33,200 --> 02:59:35,040
that they're in contact with the root

5043
02:59:35,040 --> 02:59:36,960
service we have to be everywhere and we

5044
02:59:36,960 --> 02:59:38,720
really try to be there

5045
02:59:38,720 --> 02:59:40,640
so we attend all these places and

5046
02:59:40,640 --> 02:59:42,240
conferences and we are

5047
02:59:42,240 --> 02:59:45,600
also happy to talk to you uh in all

5048
02:59:45,600 --> 02:59:47,040
cases and if you can't

5049
02:59:47,040 --> 02:59:50,479
find us out there do do reach out to us

5050
02:59:50,479 --> 02:59:51,359
if you have any

5051
02:59:51,359 --> 02:59:52,800
any problems or any issues that you

5052
02:59:52,800 --> 02:59:54,560
would like to discuss

5053
02:59:54,560 --> 02:59:58,640
or just support us

5054
02:59:58,640 --> 03:00:00,399
uh financial stability is another

5055
03:00:00,399 --> 03:00:02,160
interesting issue for root servers um

5056
03:00:02,160 --> 03:00:04,240
operating a root server requires

5057
03:00:04,240 --> 03:00:05,840
neutrality and independence

5058
03:00:05,840 --> 03:00:08,000
we are there to serve the entire

5059
03:00:08,000 --> 03:00:10,080
internet not just a subsection

5060
03:00:10,080 --> 03:00:13,680
of it for pro from other from any aspect

5061
03:00:13,680 --> 03:00:16,000
this is actually even documented now in

5062
03:00:16,000 --> 03:00:20,160
an artifact document with the number 42

5063
03:00:20,319 --> 03:00:23,680
and that uh

5064
03:00:23,680 --> 03:00:25,279
is is an interesting statement you

5065
03:00:25,279 --> 03:00:26,560
should take it with the next bullet here

5066
03:00:26,560 --> 03:00:28,640
which is that there is no a priori

5067
03:00:28,640 --> 03:00:31,120
source of income uh the root server

5068
03:00:31,120 --> 03:00:32,080
operators

5069
03:00:32,080 --> 03:00:34,319
are not paid for the service by any

5070
03:00:34,319 --> 03:00:36,319
specific source that relates to the root

5071
03:00:36,319 --> 03:00:37,439
service

5072
03:00:37,439 --> 03:00:39,520
so every root server operator has to

5073
03:00:39,520 --> 03:00:40,560
fend for for

5074
03:00:40,560 --> 03:00:44,080
itself and and find some way

5075
03:00:44,080 --> 03:00:48,160
of supporting this service financially

5076
03:00:48,160 --> 03:00:50,880
now that varies a lot between the

5077
03:00:50,880 --> 03:00:52,080
various roots of operators

5078
03:00:52,080 --> 03:00:54,080
and that's a good thing the the motto

5079
03:00:54,080 --> 03:00:55,680
between the roots of our operators is

5080
03:00:55,680 --> 03:00:57,359
diversity is good and the net node way

5081
03:00:57,359 --> 03:00:59,120
is that we provide commercial dns

5082
03:00:59,120 --> 03:01:00,319
service

5083
03:01:00,319 --> 03:01:04,240
from the same platform to

5084
03:01:04,240 --> 03:01:06,000
other players primarily top level

5085
03:01:06,000 --> 03:01:08,399
domains and from that we earn some money

5086
03:01:08,399 --> 03:01:10,000
that we can use to pay for the root

5087
03:01:10,000 --> 03:01:11,439
service

5088
03:01:11,439 --> 03:01:13,680
and this multitude of customers actually

5089
03:01:13,680 --> 03:01:16,560
is a good thing because that helps us

5090
03:01:16,560 --> 03:01:20,399
to avoid the problem that you may have

5091
03:01:20,399 --> 03:01:21,680
if you have a single source of money

5092
03:01:21,680 --> 03:01:23,600
which is that that single source

5093
03:01:23,600 --> 03:01:26,800
actually can probably uh

5094
03:01:26,800 --> 03:01:31,359
influence you more and

5095
03:01:31,359 --> 03:01:34,399
in an inappropriate fashion uh but

5096
03:01:34,399 --> 03:01:36,240
when you have many customers a single

5097
03:01:36,240 --> 03:01:37,840
customer doesn't have that

5098
03:01:37,840 --> 03:01:41,120
power uh deployment changes

5099
03:01:41,120 --> 03:01:43,760
uh challenges well finding the right

5100
03:01:43,760 --> 03:01:44,880
place the right people

5101
03:01:44,880 --> 03:01:46,880
and stable host you can find perfect

5102
03:01:46,880 --> 03:01:48,000
people to work with and they

5103
03:01:48,000 --> 03:01:50,560
and then two years later they leave and

5104
03:01:50,560 --> 03:01:51,279
move on

5105
03:01:51,279 --> 03:01:54,399
and um suddenly you don't have a good

5106
03:01:54,399 --> 03:01:56,319
contacts anymore

5107
03:01:56,319 --> 03:01:58,160
logistics is a nightmare shipping

5108
03:01:58,160 --> 03:01:59,359
servers across the globe

5109
03:01:59,359 --> 03:02:01,600
to the dark corners that you've never

5110
03:02:01,600 --> 03:02:03,040
heard of

5111
03:02:03,040 --> 03:02:06,479
well don't go there

5112
03:02:06,479 --> 03:02:08,479
and always to make the service cheaper

5113
03:02:08,479 --> 03:02:09,920
because the cheaper we make it

5114
03:02:09,920 --> 03:02:12,080
the uh the more sites we can deploy and

5115
03:02:12,080 --> 03:02:12,960
that's always the

5116
03:02:12,960 --> 03:02:14,640
goal for us the more sites we can deploy

5117
03:02:14,640 --> 03:02:16,080
the better the service will be for the

5118
03:02:16,080 --> 03:02:18,640
end user

5119
03:02:19,040 --> 03:02:20,880
zone propagation in a timely

5120
03:02:20,880 --> 03:02:22,640
synchronized fashion is always a problem

5121
03:02:22,640 --> 03:02:26,720
uh it runs fairly smoothly these days

5122
03:02:26,720 --> 03:02:28,960
but we need to keep a close eye on it so

5123
03:02:28,960 --> 03:02:30,240
monitoring

5124
03:02:30,240 --> 03:02:33,279
statistics collecting all of that is is

5125
03:02:33,279 --> 03:02:34,560
done constantly

5126
03:02:34,560 --> 03:02:37,520
and is a challenge that we need to to

5127
03:02:37,520 --> 03:02:38,000
address

5128
03:02:38,000 --> 03:02:40,080
because the administration links we have

5129
03:02:40,080 --> 03:02:41,120
these sites are not

5130
03:02:41,120 --> 03:02:45,359
always you know 100 megabits links

5131
03:02:45,359 --> 03:02:46,720
and of course we have the political

5132
03:02:46,720 --> 03:02:48,720
changes um

5133
03:02:48,720 --> 03:02:50,560
the big challenge is to ensure that this

5134
03:02:50,560 --> 03:02:51,920
all decisions that

5135
03:02:51,920 --> 03:02:53,680
may impact the operations of the root

5136
03:02:53,680 --> 03:02:55,920
service everywhere in the globe are

5137
03:02:55,920 --> 03:02:56,800
based on facts

5138
03:02:56,800 --> 03:02:58,880
and not on misconceptions there are so

5139
03:02:58,880 --> 03:03:00,160
many misconceptions about the root

5140
03:03:00,160 --> 03:03:01,600
service system out there that you could

5141
03:03:01,600 --> 03:03:02,640
believe it

5142
03:03:02,640 --> 03:03:06,640
and we try to provide a clear picture of

5143
03:03:06,640 --> 03:03:07,680
how it works

5144
03:03:07,680 --> 03:03:09,840
and make it clear that its purpose is

5145
03:03:09,840 --> 03:03:11,600
technical infrastructure and nothing

5146
03:03:11,600 --> 03:03:12,720
else

5147
03:03:12,720 --> 03:03:14,240
thankfully we are not alone in that

5148
03:03:14,240 --> 03:03:15,760
endeavor many people

5149
03:03:15,760 --> 03:03:17,920
do the same and we are very thankful to

5150
03:03:17,920 --> 03:03:19,920
them

5151
03:03:19,920 --> 03:03:21,840
that's where i intend to stop and i will

5152
03:03:21,840 --> 03:03:25,439
be happy to take any questions

5153
03:03:25,439 --> 03:03:27,840
thanks a lot liman for uh getting us

5154
03:03:27,840 --> 03:03:29,200
through the history of uh

5155
03:03:29,200 --> 03:03:31,920
of the root name servers i'm very glad

5156
03:03:31,920 --> 03:03:33,680
that people are not uh

5157
03:03:33,680 --> 03:03:36,880
making diff manually uh to to manage the

5158
03:03:36,880 --> 03:03:37,760
rules

5159
03:03:37,760 --> 03:03:41,040
all right i

5160
03:03:41,200 --> 03:03:43,439
we gotta we got a few uh a few questions

5161
03:03:43,439 --> 03:03:45,120
um

5162
03:03:45,120 --> 03:03:48,160
as is uh and raised uh quickly before

5163
03:03:48,160 --> 03:03:48,960
before uh

5164
03:03:48,960 --> 03:03:51,439
ralph before you talk uh if you have any

5165
03:03:51,439 --> 03:03:52,000
questions

5166
03:03:52,000 --> 03:03:54,720
please um you know ask them in the q a

5167
03:03:54,720 --> 03:03:56,479
tab or raise your hand

5168
03:03:56,479 --> 03:03:59,200
and also the poll is going to be popping

5169
03:03:59,200 --> 03:04:00,240
up soon so you can

5170
03:04:00,240 --> 03:04:02,319
provide feedback thank you ralph go

5171
03:04:02,319 --> 03:04:04,560
ahead you can unmute yourself

5172
03:04:04,560 --> 03:04:06,479
yeah hello thanks a lot liam that was a

5173
03:04:06,479 --> 03:04:08,880
fantastic talk um

5174
03:04:08,880 --> 03:04:10,880
one question i have is i mean we've seen

5175
03:04:10,880 --> 03:04:12,640
over the last or 30 years

5176
03:04:12,640 --> 03:04:14,319
service becoming more and more important

5177
03:04:14,319 --> 03:04:16,080
traffic getting more and more

5178
03:04:16,080 --> 03:04:18,000
what do you see sort of i mean maybe not

5179
03:04:18,000 --> 03:04:20,560
30 but say 10 years down the road with

5180
03:04:20,560 --> 03:04:23,359
rfc 7706

5181
03:04:23,359 --> 03:04:26,720
and other technologies uh where will the

5182
03:04:26,720 --> 03:04:29,120
root service be in 10 years

5183
03:04:29,120 --> 03:04:31,680
uh can you please remind me of 7706

5184
03:04:31,680 --> 03:04:32,720
what's that

5185
03:04:32,720 --> 03:04:34,640
running a local route pretty much oh

5186
03:04:34,640 --> 03:04:36,960
okay thanks um

5187
03:04:36,960 --> 03:04:39,680
yes you are right i think this is going

5188
03:04:39,680 --> 03:04:40,240
to change

5189
03:04:40,240 --> 03:04:43,680
uh over time we running

5190
03:04:43,680 --> 03:04:45,920
local groups is one thing that is going

5191
03:04:45,920 --> 03:04:47,200
to to change

5192
03:04:47,200 --> 03:04:49,920
this uh and i i think that is to a

5193
03:04:49,920 --> 03:04:50,640
largest

5194
03:04:50,640 --> 03:04:53,680
extent a good thing uh um

5195
03:04:53,680 --> 03:04:56,560
except it does uh change debugging

5196
03:04:56,560 --> 03:04:57,439
somewhat

5197
03:04:57,439 --> 03:05:00,720
uh it's all the more players you have

5198
03:05:00,720 --> 03:05:02,840
involved the more difficult it may be to

5199
03:05:02,840 --> 03:05:07,120
to debug systems in addition i believe

5200
03:05:07,120 --> 03:05:10,800
that the doh and dot are going to

5201
03:05:10,800 --> 03:05:14,399
change the the the overall picture a lot

5202
03:05:14,399 --> 03:05:16,880
so to be honest i think that the

5203
03:05:16,880 --> 03:05:18,479
relevance of root servers

5204
03:05:18,479 --> 03:05:21,920
are is slowly declining

5205
03:05:21,920 --> 03:05:24,640
and i think it's healthy for the

5206
03:05:24,640 --> 03:05:25,520
internet to

5207
03:05:25,520 --> 03:05:29,840
not depend on no single points

5208
03:05:29,840 --> 03:05:32,240
the more we can we can spread things

5209
03:05:32,240 --> 03:05:34,479
over the network the better

5210
03:05:34,479 --> 03:05:36,560
but i think it's going to be a very

5211
03:05:36,560 --> 03:05:39,040
gradual and slow process and that's also

5212
03:05:39,040 --> 03:05:40,399
a good thing because we don't

5213
03:05:40,399 --> 03:05:42,399
want to make any sudden changes to to

5214
03:05:42,399 --> 03:05:43,520
these important

5215
03:05:43,520 --> 03:05:47,840
infrastructure systems slow is good

5216
03:05:47,920 --> 03:05:50,640
does that answer your question right

5217
03:05:50,640 --> 03:05:51,920
yeah

5218
03:05:51,920 --> 03:05:54,479
okay perfect thanks uh we got actually i

5219
03:05:54,479 --> 03:05:55,680
guess the follow up um

5220
03:05:55,680 --> 03:05:57,520
well a question at least that nicely

5221
03:05:57,520 --> 03:06:00,080
follow up from sebastian castro on

5222
03:06:00,080 --> 03:06:03,279
the q a tab he's asking

5223
03:06:03,279 --> 03:06:05,120
what do you think will be a future

5224
03:06:05,120 --> 03:06:07,840
challenge for root servers operator

5225
03:06:07,840 --> 03:06:10,399
scale financial pressure to open

5226
03:06:10,399 --> 03:06:12,960
operations to anyone

5227
03:06:12,960 --> 03:06:18,080
um interesting question uh thank you um

5228
03:06:19,920 --> 03:06:23,439
the the scale is is

5229
03:06:23,439 --> 03:06:26,640
one factor um but

5230
03:06:26,640 --> 03:06:29,600
again if you balance that to to ralph's

5231
03:06:29,600 --> 03:06:30,240
comment

5232
03:06:30,240 --> 03:06:33,200
uh with with local operation i think

5233
03:06:33,200 --> 03:06:33,600
that

5234
03:06:33,600 --> 03:06:36,319
that's going to you know balance itself

5235
03:06:36,319 --> 03:06:36,800
so

5236
03:06:36,800 --> 03:06:40,160
that's not a huge issue i think

5237
03:06:40,160 --> 03:06:43,040
and also we can probably come up with

5238
03:06:43,040 --> 03:06:44,720
ways to make the service cheaper which

5239
03:06:44,720 --> 03:06:46,479
means that we who actually operate room

5240
03:06:46,479 --> 03:06:48,240
service can deploy in more places for

5241
03:06:48,240 --> 03:06:50,800
the same amount of money

5242
03:06:50,800 --> 03:06:53,920
financial um

5243
03:06:53,920 --> 03:06:56,479
maybe maybe not it depends on the

5244
03:06:56,479 --> 03:06:58,160
relevance of domain names actually

5245
03:06:58,160 --> 03:06:58,960
because

5246
03:06:58,960 --> 03:07:02,640
as long as domain names remain relevant

5247
03:07:02,640 --> 03:07:05,600
and there is a financial turnover in the

5248
03:07:05,600 --> 03:07:07,439
domain name business

5249
03:07:07,439 --> 03:07:10,800
there we can probably find ways to to

5250
03:07:10,800 --> 03:07:12,560
finance the root service because the

5251
03:07:12,560 --> 03:07:14,720
top-level domains are utterly dependent

5252
03:07:14,720 --> 03:07:15,920
on the root service

5253
03:07:15,920 --> 03:07:19,760
so there are we can probably

5254
03:07:19,760 --> 03:07:22,319
find ways where where money can be

5255
03:07:22,319 --> 03:07:25,680
funneled to the right uh

5256
03:07:25,920 --> 03:07:29,200
the right places uh also uh in addition

5257
03:07:29,200 --> 03:07:30,960
to that this

5258
03:07:30,960 --> 03:07:32,640
sorry root server system governance

5259
03:07:32,640 --> 03:07:34,160
working group that i mentioned is

5260
03:07:34,160 --> 03:07:34,720
working

5261
03:07:34,720 --> 03:07:38,000
on the accountability framework but

5262
03:07:38,000 --> 03:07:40,720
also is looking into the financial

5263
03:07:40,720 --> 03:07:42,880
situation of the root server operators

5264
03:07:42,880 --> 03:07:46,080
so that is being looked at we are very

5265
03:07:46,080 --> 03:07:49,920
far from from landing uh at uh some new

5266
03:07:49,920 --> 03:07:50,800
point there but

5267
03:07:50,800 --> 03:07:54,960
the issue is on the table at least so um

5268
03:07:54,960 --> 03:07:57,040
i think what that whatever happens is

5269
03:07:57,040 --> 03:07:58,640
going to happen slowly so that we can

5270
03:07:58,640 --> 03:08:00,479
adapt systems and i don't

5271
03:08:00,479 --> 03:08:02,960
only mean the dns operations systems but

5272
03:08:02,960 --> 03:08:04,319
also the financial systems and the

5273
03:08:04,319 --> 03:08:06,880
policy systems around this uh gradually

5274
03:08:06,880 --> 03:08:08,960
as we move along and i think

5275
03:08:08,960 --> 03:08:11,920
we are in a good place we are doing the

5276
03:08:11,920 --> 03:08:12,880
right things

5277
03:08:12,880 --> 03:08:15,920
we are looking at the future so um

5278
03:08:15,920 --> 03:08:18,640
i am i'm not really worried i i there

5279
03:08:18,640 --> 03:08:19,680
will be changes

5280
03:08:19,680 --> 03:08:22,800
but but uh i don't see them as extremely

5281
03:08:22,800 --> 03:08:24,080
challenging at least as

5282
03:08:24,080 --> 03:08:27,200
not this at this time thanks thanks a

5283
03:08:27,200 --> 03:08:27,920
lot leemon

5284
03:08:27,920 --> 03:08:29,600
uh that was very interesting talk i

5285
03:08:29,600 --> 03:08:31,279
think i like to chat much more about

5286
03:08:31,279 --> 03:08:33,760
this kind of history

5287
03:08:33,760 --> 03:08:35,600
all right without further ado we're

5288
03:08:35,600 --> 03:08:37,680
going to move on to our next talk by

5289
03:08:37,680 --> 03:08:39,760
rich weiser

5290
03:08:39,760 --> 03:08:42,240
he's going to tell us about multi-signer

5291
03:08:42,240 --> 03:08:45,520
dns site automation

5292
03:08:45,520 --> 03:08:48,800
so multi-signer dns automation

5293
03:08:48,800 --> 03:08:50,800
yes so my name is olesvista i work for

5294
03:08:50,800 --> 03:08:52,880
the swedish internet foundation

5295
03:08:52,880 --> 03:08:55,920
and this work is done

5296
03:08:55,920 --> 03:08:59,439
together with steve crocker schuman hook

5297
03:08:59,439 --> 03:09:02,399
eric osterweil and a few other people

5298
03:09:02,399 --> 03:09:04,720
and

5299
03:09:05,040 --> 03:09:08,800
let's dive into it um

5300
03:09:12,880 --> 03:09:15,600
so yes so multisigner dns model there is

5301
03:09:15,600 --> 03:09:17,200
actually an rfc that schumann has

5302
03:09:17,200 --> 03:09:18,160
written

5303
03:09:18,160 --> 03:09:21,439
and it specifies that you

5304
03:09:21,439 --> 03:09:26,160
how you would run a dns exist zone

5305
03:09:26,160 --> 03:09:29,520
with two independent dns providers

5306
03:09:29,520 --> 03:09:32,640
and so if

5307
03:09:32,640 --> 03:09:35,040
and it comes from a problem that

5308
03:09:35,040 --> 03:09:36,319
schumann had in his

5309
03:09:36,319 --> 03:09:39,200
work at salesforce where they actually

5310
03:09:39,200 --> 03:09:40,160
wanted to use

5311
03:09:40,160 --> 03:09:43,680
two large-scale dns providers and

5312
03:09:43,680 --> 03:09:46,800
so there's a few procedures you have to

5313
03:09:46,800 --> 03:09:48,720
follow to do this and

5314
03:09:48,720 --> 03:09:52,000
the the actual providers need to

5315
03:09:52,000 --> 03:09:55,040
give you an api so that you can do the

5316
03:09:55,040 --> 03:09:58,239
required operations and

5317
03:09:58,239 --> 03:10:01,359
so when i first read this draft and i

5318
03:10:01,359 --> 03:10:03,600
have to sell this in other places i

5319
03:10:03,600 --> 03:10:04,560
thought okay

5320
03:10:04,560 --> 03:10:07,920
who in the world is going to run a dns

5321
03:10:07,920 --> 03:10:10,000
design domain with two independent

5322
03:10:10,000 --> 03:10:11,200
providers this

5323
03:10:11,200 --> 03:10:14,000
needs to be a like special super case

5324
03:10:14,000 --> 03:10:14,399
that

5325
03:10:14,399 --> 03:10:16,960
is you know five people in the world

5326
03:10:16,960 --> 03:10:18,080
will do this

5327
03:10:18,080 --> 03:10:19,920
and but you all know how this goes with

5328
03:10:19,920 --> 03:10:21,680
these predictions about five people in

5329
03:10:21,680 --> 03:10:23,760
the world in i.t

5330
03:10:23,760 --> 03:10:26,880
yeah so turns out if you

5331
03:10:26,880 --> 03:10:29,279
have a dns exam zone and you want to

5332
03:10:29,279 --> 03:10:30,319
change

5333
03:10:30,319 --> 03:10:33,840
your dns operator and without going

5334
03:10:33,840 --> 03:10:35,439
insecure

5335
03:10:35,439 --> 03:10:37,680
what you have to do is basically join

5336
03:10:37,680 --> 03:10:39,200
them in a multi-signer

5337
03:10:39,200 --> 03:10:41,840
set up and then the old provider leaving

5338
03:10:41,840 --> 03:10:43,359
the multi-signer setup and that's how

5339
03:10:43,359 --> 03:10:44,960
you transfer a domain between two

5340
03:10:44,960 --> 03:10:45,840
providers so

5341
03:10:45,840 --> 03:10:49,120
it's so this multisigner has suddenly a

5342
03:10:49,120 --> 03:10:52,319
a really huge use case because i mean

5343
03:10:52,319 --> 03:10:54,399
moving your domain from one dns provider

5344
03:10:54,399 --> 03:10:55,520
to another

5345
03:10:55,520 --> 03:11:00,479
is a day-to-day operation and

5346
03:11:00,479 --> 03:11:02,720
and so what is it what you actually have

5347
03:11:02,720 --> 03:11:03,600
to do

5348
03:11:03,600 --> 03:11:06,640
now in the let's say simple

5349
03:11:06,640 --> 03:11:08,399
idea would be you have these two

5350
03:11:08,399 --> 03:11:10,399
providers provider a provider b

5351
03:11:10,399 --> 03:11:13,920
they signed with their own ksk and zsks

5352
03:11:13,920 --> 03:11:16,640
and you would have a ds record in the in

5353
03:11:16,640 --> 03:11:17,680
the parent

5354
03:11:17,680 --> 03:11:21,279
that uh points to these two case case

5355
03:11:21,279 --> 03:11:24,720
and there's one problem here

5356
03:11:24,720 --> 03:11:28,000
on the see if this works here on the

5357
03:11:28,000 --> 03:11:29,600
provider a side

5358
03:11:29,600 --> 03:11:32,560
all the data is signed with the blue csk

5359
03:11:32,560 --> 03:11:32,800
and

5360
03:11:32,800 --> 03:11:35,359
on the provider b side all the data

5361
03:11:35,359 --> 03:11:37,200
assigned to the red csk

5362
03:11:37,200 --> 03:11:39,520
so if now you ask let's say you ask

5363
03:11:39,520 --> 03:11:40,560
provider a

5364
03:11:40,560 --> 03:11:43,680
for the key set you get these two keys

5365
03:11:43,680 --> 03:11:46,720
and then you ask provider b for data

5366
03:11:46,720 --> 03:11:49,760
you get data that is signed with the red

5367
03:11:49,760 --> 03:11:52,800
key but the key said that you have at

5368
03:11:52,800 --> 03:11:53,359
hand

5369
03:11:53,359 --> 03:11:55,600
has only blue keys and that's not going

5370
03:11:55,600 --> 03:11:57,600
to work so you cannot validate

5371
03:11:57,600 --> 03:12:00,239
and um of course it works vice versa

5372
03:12:00,239 --> 03:12:01,279
immediately so

5373
03:12:01,279 --> 03:12:04,479
so that so this setup is obviously not

5374
03:12:04,479 --> 03:12:05,120
working

5375
03:12:05,120 --> 03:12:07,520
and so what you have to do is you have

5376
03:12:07,520 --> 03:12:08,399
to you know

5377
03:12:08,399 --> 03:12:12,239
copy the public part the dns key record

5378
03:12:12,239 --> 03:12:14,640
from your zone from provider a to

5379
03:12:14,640 --> 03:12:16,080
provider b

5380
03:12:16,080 --> 03:12:18,960
this is the zsk from provider b to

5381
03:12:18,960 --> 03:12:20,560
provider a

5382
03:12:20,560 --> 03:12:23,200
and then you do the parent thing and

5383
03:12:23,200 --> 03:12:25,120
then point out these two ds records to

5384
03:12:25,120 --> 03:12:26,399
the two providers

5385
03:12:26,399 --> 03:12:29,680
and now if you do the same thing again

5386
03:12:29,680 --> 03:12:33,040
you get the key set from provider a yeah

5387
03:12:33,040 --> 03:12:35,680
and data from provider b that is signed

5388
03:12:35,680 --> 03:12:36,399
with the red

5389
03:12:36,399 --> 03:12:40,399
zsk well you have the red csk

5390
03:12:40,399 --> 03:12:43,120
and so you can validate the data well

5391
03:12:43,120 --> 03:12:43,520
that's

5392
03:12:43,520 --> 03:12:46,319
uh you know doesn't sound so complex you

5393
03:12:46,319 --> 03:12:48,080
know we have to you know

5394
03:12:48,080 --> 03:12:49,439
think a little bit about it but it's not

5395
03:12:49,439 --> 03:12:51,600
that complex but still there's

5396
03:12:51,600 --> 03:12:53,200
you know all these steps involved that

5397
03:12:53,200 --> 03:12:55,359
you have to do there's a lot of

5398
03:12:55,359 --> 03:12:58,080
ttls you have to watch and things and so

5399
03:12:58,080 --> 03:12:58,399
this

5400
03:12:58,399 --> 03:13:02,160
is i would say and a typical

5401
03:13:02,160 --> 03:13:05,680
uh example of something that should be

5402
03:13:05,680 --> 03:13:07,120
automated

5403
03:13:07,120 --> 03:13:09,200
and so and that is what we're aiming for

5404
03:13:09,200 --> 03:13:11,200
in this project

5405
03:13:11,200 --> 03:13:14,640
so um so in the

5406
03:13:14,640 --> 03:13:17,840
in the rfc 8901 it describes how

5407
03:13:17,840 --> 03:13:20,080
and a typical setup for multisigner

5408
03:13:20,080 --> 03:13:21,920
could

5409
03:13:21,920 --> 03:13:25,200
look but it doesn't describe all the

5410
03:13:25,200 --> 03:13:27,120
algorithms you would have to follow how

5411
03:13:27,120 --> 03:13:28,800
you started this how you

5412
03:13:28,800 --> 03:13:31,200
add providers or detach providers and

5413
03:13:31,200 --> 03:13:32,319
and all this stuff

5414
03:13:32,319 --> 03:13:34,399
and so we're now we're aiming to to do

5415
03:13:34,399 --> 03:13:37,120
this to make it more practical

5416
03:13:37,120 --> 03:13:39,520
practical application even aiming to

5417
03:13:39,520 --> 03:13:40,399
writing a

5418
03:13:40,399 --> 03:13:44,319
software that can do that and um

5419
03:13:44,319 --> 03:13:47,680
so uh we're trying to write in a new

5420
03:13:47,680 --> 03:13:48,880
draft

5421
03:13:48,880 --> 03:13:52,000
we're in the process of doing it and

5422
03:13:52,000 --> 03:13:57,600
it will you know specify all this uh the

5423
03:13:57,600 --> 03:14:00,000
the algorithms for doing this and the

5424
03:14:00,000 --> 03:14:01,920
draft makes heavy usage

5425
03:14:01,920 --> 03:14:06,880
of cds cdns key and c-sync

5426
03:14:06,880 --> 03:14:10,160
and that is a like the basic building

5427
03:14:10,160 --> 03:14:10,800
block of

5428
03:14:10,800 --> 03:14:14,000
you know automating all of this and

5429
03:14:14,000 --> 03:14:17,760
uh so um yeah so the the operator

5430
03:14:17,760 --> 03:14:18,880
handoff

5431
03:14:18,880 --> 03:14:22,840
uh is basically a special case of the

5432
03:14:22,840 --> 03:14:24,960
the multi-signer

5433
03:14:24,960 --> 03:14:28,319
where you say usually today

5434
03:14:28,319 --> 03:14:30,880
if you change operators you go insecure

5435
03:14:30,880 --> 03:14:31,520
because

5436
03:14:31,520 --> 03:14:33,680
you know the process is so complex that

5437
03:14:33,680 --> 03:14:35,040
nobody will do it and

5438
03:14:35,040 --> 03:14:37,439
you know for single customer dns

5439
03:14:37,439 --> 03:14:39,200
operator that would be really i mean

5440
03:14:39,200 --> 03:14:39,920
it's an

5441
03:14:39,920 --> 03:14:42,560
a manual procedure that costs a lot of

5442
03:14:42,560 --> 03:14:45,439
money so you don't do this

5443
03:14:45,439 --> 03:14:48,560
and but it's a really bad choice for

5444
03:14:48,560 --> 03:14:49,120
people

5445
03:14:49,120 --> 03:14:51,600
i mean there's a lot of organizations

5446
03:14:51,600 --> 03:14:52,640
out there that for

5447
03:14:52,640 --> 03:14:54,640
compliance reason maybe can't go

5448
03:14:54,640 --> 03:14:56,640
insecure

5449
03:14:56,640 --> 03:14:58,960
there's

5450
03:14:59,680 --> 03:15:01,279
a lot of organizations that have

5451
03:15:01,279 --> 03:15:03,200
security reasons don't want to go

5452
03:15:03,200 --> 03:15:04,960
insecure i mean we all remember the

5453
03:15:04,960 --> 03:15:06,319
myesta wallet

5454
03:15:06,319 --> 03:15:08,800
incident and i mean nobody of us wants

5455
03:15:08,800 --> 03:15:10,479
to go my easter wallet

5456
03:15:10,479 --> 03:15:13,600
to go insecure again right so uh

5457
03:15:13,600 --> 03:15:15,760
what are these organizations supposed to

5458
03:15:15,760 --> 03:15:16,640
do

5459
03:15:16,640 --> 03:15:20,800
and um so we

5460
03:15:20,800 --> 03:15:23,120
so there need to be a way to do this and

5461
03:15:23,120 --> 03:15:25,120
it need to be a way to do this

5462
03:15:25,120 --> 03:15:28,399
you know in very ordered and and safe

5463
03:15:28,399 --> 03:15:31,200
for everybody and so the operator

5464
03:15:31,200 --> 03:15:32,560
handoff

5465
03:15:32,560 --> 03:15:35,600
is this special case uh for of the multi

5466
03:15:35,600 --> 03:15:37,600
center

5467
03:15:37,600 --> 03:15:40,800
so people need to interrupt but it's

5468
03:15:40,800 --> 03:15:44,160
three minutes until the q a yes yes

5469
03:15:44,160 --> 03:15:47,439
i i speed up a little bit so we have the

5470
03:15:47,439 --> 03:15:50,160
we we use cdnscns key records and that

5471
03:15:50,160 --> 03:15:51,120
is of course to

5472
03:15:51,120 --> 03:15:54,080
update the ds records in the parent and

5473
03:15:54,080 --> 03:15:55,040
uh there is an

5474
03:15:55,040 --> 03:15:57,200
rfc for this actually there's two that

5475
03:15:57,200 --> 03:15:58,399
you need to follow

5476
03:15:58,399 --> 03:16:02,080
and uh yeah and then we use the c-sync

5477
03:16:02,080 --> 03:16:03,359
record which is

5478
03:16:03,359 --> 03:16:06,239
does the same thing basically there's

5479
03:16:06,239 --> 03:16:08,479
the cdfc and sd record but for other

5480
03:16:08,479 --> 03:16:09,520
record types

5481
03:16:09,520 --> 03:16:12,640
so and we are you going to use it for

5482
03:16:12,640 --> 03:16:13,439
the ns

5483
03:16:13,439 --> 03:16:16,160
set to update the nsat and the parent

5484
03:16:16,160 --> 03:16:19,120
and the glue records

5485
03:16:19,120 --> 03:16:22,479
and so we're going to do a

5486
03:16:22,479 --> 03:16:26,160
if you want to bootstrap and

5487
03:16:26,160 --> 03:16:27,920
go to sign up setup it's basically that

5488
03:16:27,920 --> 03:16:29,359
you have a dns

5489
03:16:29,359 --> 03:16:32,640
signed the domain on one provider

5490
03:16:32,640 --> 03:16:35,520
and you can do this even with cdfc then

5491
03:16:35,520 --> 03:16:36,640
s key

5492
03:16:36,640 --> 03:16:40,160
and it is specified in the rcm

5493
03:16:40,160 --> 03:16:44,479
and then be automating the rest of the

5494
03:16:44,479 --> 03:16:47,600
the steps i go through this quite fast

5495
03:16:47,600 --> 03:16:48,319
now

5496
03:16:48,319 --> 03:16:52,239
uh but we're not talking about how

5497
03:16:52,239 --> 03:16:55,760
how you uh would uh synchronize zone

5498
03:16:55,760 --> 03:16:56,560
data

5499
03:16:56,560 --> 03:16:58,800
that is out of scope for our work that

5500
03:16:58,800 --> 03:17:00,720
you have to do some other way

5501
03:17:00,720 --> 03:17:03,279
and so what you have to do is you

5502
03:17:03,279 --> 03:17:05,359
exchange the zs case

5503
03:17:05,359 --> 03:17:09,920
you wait ttl then you set up the cds cns

5504
03:17:09,920 --> 03:17:10,560
key r

5505
03:17:10,560 --> 03:17:13,680
set and um if you look at this

5506
03:17:13,680 --> 03:17:15,439
is the first step if you exchange only

5507
03:17:15,439 --> 03:17:17,760
zs case you will have and

5508
03:17:17,760 --> 03:17:20,960
uh different dns key rr sets

5509
03:17:20,960 --> 03:17:23,040
on different name servers so the the

5510
03:17:23,040 --> 03:17:25,520
names is

5511
03:17:25,520 --> 03:17:29,120
but for cds key to work

5512
03:17:29,120 --> 03:17:31,680
it needs to be the same rr set on all of

5513
03:17:31,680 --> 03:17:33,040
your servers so this has to be

5514
03:17:33,040 --> 03:17:35,120
synchronized over all servers

5515
03:17:35,120 --> 03:17:38,239
and when you publish it you have to

5516
03:17:38,239 --> 03:17:40,239
participate the parent updates and then

5517
03:17:40,239 --> 03:17:41,439
you can't remove

5518
03:17:41,439 --> 03:17:45,200
the cdnscns he said that is

5519
03:17:45,200 --> 03:17:48,239
optional but recommended i would say

5520
03:17:48,239 --> 03:17:52,160
and you wait again for the for the ds

5521
03:17:52,160 --> 03:17:55,760
dtl and then you can exchange

5522
03:17:55,760 --> 03:17:58,399
the n assets and here you actually want

5523
03:17:58,399 --> 03:17:59,120
to

5524
03:17:59,120 --> 03:18:03,200
synchronize the nss it's not

5525
03:18:04,560 --> 03:18:08,080
a 100 requirement but i would say it

5526
03:18:08,080 --> 03:18:09,840
makes life much easier for you

5527
03:18:09,840 --> 03:18:12,880
and and then you can make a or

5528
03:18:12,880 --> 03:18:15,040
you you need it yes you need a

5529
03:18:15,040 --> 03:18:16,560
synchronized and asset

5530
03:18:16,560 --> 03:18:18,319
for the c-sync record because otherwise

5531
03:18:18,319 --> 03:18:20,720
the c-sync record will not work

5532
03:18:20,720 --> 03:18:23,520
and then you you go to uh the parent

5533
03:18:23,520 --> 03:18:25,040
updates dns set

5534
03:18:25,040 --> 03:18:27,439
and you have a working multi-signer

5535
03:18:27,439 --> 03:18:28,880
setup

5536
03:18:28,880 --> 03:18:33,439
and um yes i think for

5537
03:18:33,439 --> 03:18:36,479
gravity we hop over with the detaching

5538
03:18:36,479 --> 03:18:40,000
so what we have left to do in our work

5539
03:18:40,000 --> 03:18:41,200
is we have

5540
03:18:41,200 --> 03:18:44,960
not yet specified how to roll keys

5541
03:18:44,960 --> 03:18:46,880
and i would say the key rollover is

5542
03:18:46,880 --> 03:18:48,840
something that we

5543
03:18:48,840 --> 03:18:52,160
can um it's

5544
03:18:52,160 --> 03:18:54,239
a straightforward work i would say it's

5545
03:18:54,239 --> 03:18:56,479
not that hard to specify

5546
03:18:56,479 --> 03:18:58,800
but then the the last two points here

5547
03:18:58,800 --> 03:19:00,720
algorithm roll over

5548
03:19:00,720 --> 03:19:04,399
that is an a a tough problem and

5549
03:19:04,399 --> 03:19:06,800
the last one sign of this different

5550
03:19:06,800 --> 03:19:08,399
algorithms

5551
03:19:08,399 --> 03:19:11,040
is actually something that would need to

5552
03:19:11,040 --> 03:19:14,800
be some amendment to the dns protocol

5553
03:19:14,800 --> 03:19:18,800
and with that i would like to say thank

5554
03:19:18,800 --> 03:19:20,160
you for listening

5555
03:19:20,160 --> 03:19:23,439
uh please find our project on github

5556
03:19:23,439 --> 03:19:26,640
and review the draft

5557
03:19:26,880 --> 03:19:29,840
all right thanks eric um we have a bit

5558
03:19:29,840 --> 03:19:32,640
of time for q a so please if you have

5559
03:19:32,640 --> 03:19:36,319
some questions ask in the q a or

5560
03:19:36,319 --> 03:19:39,920
raise your end and i'd been

5561
03:19:39,920 --> 03:19:42,399
saying you should also get the poll

5562
03:19:42,399 --> 03:19:44,399
coming up soon

5563
03:19:44,399 --> 03:19:47,680
that you can use to write the the talk

5564
03:19:47,680 --> 03:19:49,439
so i guess i'm going to throw one

5565
03:19:49,439 --> 03:19:51,359
question quickly you said

5566
03:19:51,359 --> 03:19:54,880
you have made a proposal do you have a

5567
03:19:54,880 --> 03:19:55,760
draft already

5568
03:19:55,760 --> 03:19:59,359
did i miss something or yes yes at the

5569
03:19:59,359 --> 03:20:03,040
and this uh this is a link to a github

5570
03:20:03,040 --> 03:20:05,520
organization and then we have a we have

5571
03:20:05,520 --> 03:20:07,040
a repository that

5572
03:20:07,040 --> 03:20:09,840
with a draft but so within the org then

5573
03:20:09,840 --> 03:20:10,720
these days

5574
03:20:10,720 --> 03:20:13,920
yes yes and of course it's you know we

5575
03:20:13,920 --> 03:20:16,080
started a draft so it's not ready yet

5576
03:20:16,080 --> 03:20:18,880
uh but we're working on it so when we

5577
03:20:18,880 --> 03:20:19,920
you know

5578
03:20:19,920 --> 03:20:22,399
participation is welcome there is no

5579
03:20:22,399 --> 03:20:23,760
version zero zero yet

5580
03:20:23,760 --> 03:20:26,479
yeah that stuff we submitted to version

5581
03:20:26,479 --> 03:20:28,399
zero zero but i would say yeah

5582
03:20:28,399 --> 03:20:31,680
it needs a lot of work before you before

5583
03:20:31,680 --> 03:20:32,479
the

5584
03:20:32,479 --> 03:20:34,399
dns of working group would be willing to

5585
03:20:34,399 --> 03:20:36,880
adopt it

5586
03:20:37,200 --> 03:20:40,160
cool all right uh then i don't see any

5587
03:20:40,160 --> 03:20:41,120
questions yet

5588
03:20:41,120 --> 03:20:44,640
so i guess uh we are going to move on

5589
03:20:44,640 --> 03:20:45,200
with

5590
03:20:45,200 --> 03:20:48,239
our next speaker uh you rich thank you

5591
03:20:48,239 --> 03:20:50,640
can you um can you please and share

5592
03:20:50,640 --> 03:20:54,000
your video and um so next we're going to

5593
03:20:54,000 --> 03:20:55,200
have uh

5594
03:20:55,200 --> 03:20:58,640
here who is going to tell us about dns

5595
03:20:58,640 --> 03:21:01,840
migration getting it done i can see your

5596
03:21:01,840 --> 03:21:02,880
screen

5597
03:21:02,880 --> 03:21:06,560
your slide full screen hey so i'm kier

5598
03:21:06,560 --> 03:21:08,840
and i'm going to talk today about dns

5599
03:21:08,840 --> 03:21:10,239
migrations

5600
03:21:10,239 --> 03:21:12,160
and just looking at a process which i

5601
03:21:12,160 --> 03:21:13,600
think gives you a reasonable

5602
03:21:13,600 --> 03:21:17,120
chance of success

5603
03:21:17,359 --> 03:21:19,279
may not be the most cutting edge or

5604
03:21:19,279 --> 03:21:20,880
exciting topic you'll hear throughout

5605
03:21:20,880 --> 03:21:22,319
this workshop but i think it is

5606
03:21:22,319 --> 03:21:23,439
practical

5607
03:21:23,439 --> 03:21:25,439
and certainly over the last 15 years or

5608
03:21:25,439 --> 03:21:28,239
so dns migrations have consumed a

5609
03:21:28,239 --> 03:21:30,239
reasonable amount of my time

5610
03:21:30,239 --> 03:21:32,560
and continue to do so so it's definitely

5611
03:21:32,560 --> 03:21:34,880
a thing

5612
03:21:37,200 --> 03:21:40,640
okay so briefly but uh no less important

5613
03:21:40,640 --> 03:21:41,600
we're just going to do a little bit of

5614
03:21:41,600 --> 03:21:43,359
upfront analysis before we get ready for

5615
03:21:43,359 --> 03:21:44,239
the migration

5616
03:21:44,239 --> 03:21:46,239
so look at the data if there is data

5617
03:21:46,239 --> 03:21:47,840
that we're migrating

5618
03:21:47,840 --> 03:21:50,880
uh understand the state of that look at

5619
03:21:50,880 --> 03:21:52,560
all the systems and platforms that

5620
03:21:52,560 --> 03:21:54,160
integrate and interact

5621
03:21:54,160 --> 03:21:56,800
with the target platform and check that

5622
03:21:56,800 --> 03:21:57,920
one they can get to it

5623
03:21:57,920 --> 03:22:00,160
and two once they're there they can do

5624
03:22:00,160 --> 03:22:02,000
what they need to do with it

5625
03:22:02,000 --> 03:22:04,000
and then look at how clients are

5626
03:22:04,000 --> 03:22:05,439
consuming that service

5627
03:22:05,439 --> 03:22:08,479
and give them the optimal responses and

5628
03:22:08,479 --> 03:22:10,720
resolution

5629
03:22:10,720 --> 03:22:13,200
also consider complexities now have put

5630
03:22:13,200 --> 03:22:15,120
dns sec here as a complexity

5631
03:22:15,120 --> 03:22:16,479
and i will admit that i've never

5632
03:22:16,479 --> 03:22:18,880
actually done a dns set migration in

5633
03:22:18,880 --> 03:22:20,000
production

5634
03:22:20,000 --> 03:22:23,359
so i would assume that would add

5635
03:22:23,359 --> 03:22:26,560
some level of additional

5636
03:22:26,560 --> 03:22:29,040
requirements to look at um but it would

5637
03:22:29,040 --> 03:22:30,720
be useful to hear from someone who has

5638
03:22:30,720 --> 03:22:32,080
done one

5639
03:22:32,080 --> 03:22:34,160
and i think the key part of this process

5640
03:22:34,160 --> 03:22:36,880
is really to create a migration strategy

5641
03:22:36,880 --> 03:22:39,760
and run it through in the lab and so

5642
03:22:39,760 --> 03:22:40,720
i've got

5643
03:22:40,720 --> 03:22:44,239
three key steps here which is test test

5644
03:22:44,239 --> 03:22:47,279
test and i actually quite like the

5645
03:22:47,279 --> 03:22:49,680
analogy of the eye test image we see

5646
03:22:49,680 --> 03:22:50,080
here

5647
03:22:50,080 --> 03:22:51,840
so you know you're there you're you're

5648
03:22:51,840 --> 03:22:53,279
staring at some

5649
03:22:53,279 --> 03:22:55,840
letters on the wall and you're basically

5650
03:22:55,840 --> 03:22:56,640
getting your

5651
03:22:56,640 --> 03:22:59,920
prescription fine-tuned until you have

5652
03:22:59,920 --> 03:23:02,720
uh the best eyesight ever and that's

5653
03:23:02,720 --> 03:23:04,239
really what we're trying to do

5654
03:23:04,239 --> 03:23:07,359
in this test phase for the migration is

5655
03:23:07,359 --> 03:23:08,560
to fine-tune

5656
03:23:08,560 --> 03:23:11,120
the migration process run it through a

5657
03:23:11,120 --> 03:23:12,239
few times

5658
03:23:12,239 --> 03:23:14,560
and then get a migration plan together

5659
03:23:14,560 --> 03:23:15,279
where we have

5660
03:23:15,279 --> 03:23:17,279
detailed actions so we know every

5661
03:23:17,279 --> 03:23:18,880
activity that's going on

5662
03:23:18,880 --> 03:23:21,279
uh what platform is being done on what

5663
03:23:21,279 --> 03:23:23,120
the execution task is

5664
03:23:23,120 --> 03:23:26,319
who's doing it what time is being done

5665
03:23:26,319 --> 03:23:30,080
and how long it's going to take and then

5666
03:23:30,080 --> 03:23:32,160
once we have fine-tuned our migration

5667
03:23:32,160 --> 03:23:33,279
plan

5668
03:23:33,279 --> 03:23:35,439
we are ready to crack on and start to

5669
03:23:35,439 --> 03:23:37,920
execute the actual migration

5670
03:23:37,920 --> 03:23:41,120
so if we're talking about data stages

5671
03:23:41,120 --> 03:23:44,160
for this process we will export data

5672
03:23:44,160 --> 03:23:44,560
from

5673
03:23:44,560 --> 03:23:47,359
the source platform and how do we get

5674
03:23:47,359 --> 03:23:48,080
that data

5675
03:23:48,080 --> 03:23:51,359
grab the zone files do zone transfers

5676
03:23:51,359 --> 03:23:55,040
bulk export from command line

5677
03:23:55,040 --> 03:23:57,279
and then look at the data and understand

5678
03:23:57,279 --> 03:23:58,960
if it needs to be transformed so can we

5679
03:23:58,960 --> 03:24:00,479
just run it straight in from the old

5680
03:24:00,479 --> 03:24:01,040
system

5681
03:24:01,040 --> 03:24:04,399
into the new one or is there a need to

5682
03:24:04,399 --> 03:24:06,560
change the format or the structure of

5683
03:24:06,560 --> 03:24:08,560
the data or does it make sense to is

5684
03:24:08,560 --> 03:24:08,880
there an

5685
03:24:08,880 --> 03:24:11,040
optimal way that we need to present the

5686
03:24:11,040 --> 03:24:13,040
data when we're importing it

5687
03:24:13,040 --> 03:24:16,080
um typically don't have to start from

5688
03:24:16,080 --> 03:24:17,520
scratch and normally there's some vendor

5689
03:24:17,520 --> 03:24:20,479
tools which will help to create the data

5690
03:24:20,479 --> 03:24:22,560
into the right structure or you know

5691
03:24:22,560 --> 03:24:24,080
i've seen a script online

5692
03:24:24,080 --> 03:24:26,319
where we'll do a zone transfer and we'll

5693
03:24:26,319 --> 03:24:28,080
create an xml file

5694
03:24:28,080 --> 03:24:31,359
which you can then import into route 53

5695
03:24:31,359 --> 03:24:33,040
so i don't necessarily need to start

5696
03:24:33,040 --> 03:24:34,560
from scratch here but once we've got

5697
03:24:34,560 --> 03:24:34,960
that

5698
03:24:34,960 --> 03:24:37,600
transformed data set we then need to

5699
03:24:37,600 --> 03:24:39,359
look at importing it

5700
03:24:39,359 --> 03:24:41,920
and we will use whatever function is

5701
03:24:41,920 --> 03:24:42,479
available

5702
03:24:42,479 --> 03:24:45,600
to bulk import that data into the new

5703
03:24:45,600 --> 03:24:47,520
platform

5704
03:24:47,520 --> 03:24:49,920
and then once it's in there a key step

5705
03:24:49,920 --> 03:24:51,520
of this bit is to validate that we've

5706
03:24:51,520 --> 03:24:52,239
got

5707
03:24:52,239 --> 03:24:54,960
the data in there successfully uh a few

5708
03:24:54,960 --> 03:24:55,840
ways of doing that

5709
03:24:55,840 --> 03:24:59,040
so um you know i use the the ldns

5710
03:24:59,040 --> 03:25:01,520
uh toolset that there's a few uh

5711
03:25:01,520 --> 03:25:02,160
features

5712
03:25:02,160 --> 03:25:05,040
in there a few options to basically do

5713
03:25:05,040 --> 03:25:07,200
diffs of zones so compare zones

5714
03:25:07,200 --> 03:25:10,000
and check that the source data and the

5715
03:25:10,000 --> 03:25:12,399
target data pretty much match

5716
03:25:12,399 --> 03:25:14,319
um or you know we could do a bunch of

5717
03:25:14,319 --> 03:25:15,520
queries

5718
03:25:15,520 --> 03:25:16,800
do its own transfer maybe from the

5719
03:25:16,800 --> 03:25:18,800
original platform and

5720
03:25:18,800 --> 03:25:20,319
just do a lookup for each of those

5721
03:25:20,319 --> 03:25:22,960
records and see that they resolve

5722
03:25:22,960 --> 03:25:24,239
which ones are best actually probably

5723
03:25:24,239 --> 03:25:26,479
not one individual method

5724
03:25:26,479 --> 03:25:28,800
it's probably worth doing several of

5725
03:25:28,800 --> 03:25:30,560
them just to cover all bases

5726
03:25:30,560 --> 03:25:32,960
and check that you've got no issues

5727
03:25:32,960 --> 03:25:34,319
there

5728
03:25:34,319 --> 03:25:36,239
the likelihood is is that stuff would

5729
03:25:36,239 --> 03:25:37,520
have changed right it's maybe

5730
03:25:37,520 --> 03:25:39,600
quite a dynamic environment so one of

5731
03:25:39,600 --> 03:25:41,200
the key steps

5732
03:25:41,200 --> 03:25:43,760
in this validation piece is to really

5733
03:25:43,760 --> 03:25:44,479
focus on

5734
03:25:44,479 --> 03:25:46,880
identifying the key records that might

5735
03:25:46,880 --> 03:25:48,560
be missing that might have been skipped

5736
03:25:48,560 --> 03:25:51,920
for whatever reason during the migration

5737
03:25:51,920 --> 03:25:55,279
and be able to focus on those and not

5738
03:25:55,279 --> 03:25:59,040
burn cycles on dynamic records from dhcp

5739
03:25:59,040 --> 03:26:00,800
clients that we're not too

5740
03:26:00,800 --> 03:26:02,239
concerned about we know they're going to

5741
03:26:02,239 --> 03:26:04,160
refresh over a period of time

5742
03:26:04,160 --> 03:26:06,239
um you know i don't want to be killing

5743
03:26:06,239 --> 03:26:07,760
wasting time here

5744
03:26:07,760 --> 03:26:09,680
trying to work out why derek's iphone

5745
03:26:09,680 --> 03:26:10,960
host name record

5746
03:26:10,960 --> 03:26:14,399
doesn't exist in the new platform

5747
03:26:15,600 --> 03:26:19,359
and then

5748
03:26:19,359 --> 03:26:21,520
once we are happy that our data is

5749
03:26:21,520 --> 03:26:22,640
validated

5750
03:26:22,640 --> 03:26:24,319
we can then look at actually cutting the

5751
03:26:24,319 --> 03:26:25,920
service over

5752
03:26:25,920 --> 03:26:28,000
so depending on what we're doing that

5753
03:26:28,000 --> 03:26:29,680
might be as much as moving

5754
03:26:29,680 --> 03:26:31,600
old ip addresses from the old platform

5755
03:26:31,600 --> 03:26:33,200
to the new one

5756
03:26:33,200 --> 03:26:35,600
publishing the new server ips ns

5757
03:26:35,600 --> 03:26:37,040
resource records

5758
03:26:37,040 --> 03:26:40,399
or advertising any cast ips

5759
03:26:40,399 --> 03:26:43,359
but it might be that we can't

5760
03:26:43,359 --> 03:26:45,279
automatically swing the clients over in

5761
03:26:45,279 --> 03:26:46,960
one in one go to point to the new

5762
03:26:46,960 --> 03:26:47,680
platform

5763
03:26:47,680 --> 03:26:49,600
and we still need them to utilize the

5764
03:26:49,600 --> 03:26:51,359
old dns service

5765
03:26:51,359 --> 03:26:54,000
for a while and so what we might do is

5766
03:26:54,000 --> 03:26:55,120
we might change our authoritative

5767
03:26:55,120 --> 03:26:56,960
service to a forwarding service

5768
03:26:56,960 --> 03:27:00,319
so clients can still resolve queries via

5769
03:27:00,319 --> 03:27:02,960
their existing dns servers but actually

5770
03:27:02,960 --> 03:27:04,479
they're just getting it the answer from

5771
03:27:04,479 --> 03:27:07,200
the new data source

5772
03:27:07,200 --> 03:27:10,479
um i guess one thing here here's the cut

5773
03:27:10,479 --> 03:27:12,319
over dns services it's not necessarily

5774
03:27:12,319 --> 03:27:14,160
a one-size-fits-all solution so i

5775
03:27:14,160 --> 03:27:16,080
remember doing we did a bunch of ad

5776
03:27:16,080 --> 03:27:18,319
migrations for a client and we had a

5777
03:27:18,319 --> 03:27:20,080
process where we were we were taking the

5778
03:27:20,080 --> 03:27:22,399
zones out of ad replication

5779
03:27:22,399 --> 03:27:23,920
and that worked really well for half a

5780
03:27:23,920 --> 03:27:25,920
dozen of the smaller zones but when we

5781
03:27:25,920 --> 03:27:27,760
came to do the large

5782
03:27:27,760 --> 03:27:30,239
production one we tried that um it was a

5783
03:27:30,239 --> 03:27:31,840
bit of carnage really for about an hour

5784
03:27:31,840 --> 03:27:32,239
just

5785
03:27:32,239 --> 03:27:35,680
a d replication uh we could see zones

5786
03:27:35,680 --> 03:27:37,279
they seem to be going in and out

5787
03:27:37,279 --> 03:27:39,520
from different servers half the zone was

5788
03:27:39,520 --> 03:27:41,040
missing on some of the servers and we

5789
03:27:41,040 --> 03:27:42,319
had about

5790
03:27:42,319 --> 03:27:44,080
60 minutes of sweating while we were

5791
03:27:44,080 --> 03:27:46,399
waiting waiting for foreign replication

5792
03:27:46,399 --> 03:27:48,720
to do its thing so

5793
03:27:48,720 --> 03:27:50,479
yeah you also when you're looking at the

5794
03:27:50,479 --> 03:27:51,920
cut over um

5795
03:27:51,920 --> 03:27:54,080
just also consider the size the

5796
03:27:54,080 --> 03:27:55,920
environment you're doing and what method

5797
03:27:55,920 --> 03:27:57,680
really suits the environment for cutting

5798
03:27:57,680 --> 03:28:00,080
it over

5799
03:28:00,160 --> 03:28:02,000
once we've got the service cut over we

5800
03:28:02,000 --> 03:28:04,399
then carry on with the testing phase

5801
03:28:04,399 --> 03:28:06,239
so depending on the type of flavor of

5802
03:28:06,239 --> 03:28:07,840
server is

5803
03:28:07,840 --> 03:28:09,040
you know check that it dances

5804
03:28:09,040 --> 03:28:11,120
authoritatively check i can do dns

5805
03:28:11,120 --> 03:28:12,160
updates

5806
03:28:12,160 --> 03:28:14,880
uh if it's recursive check i can resolve

5807
03:28:14,880 --> 03:28:16,239
everything i need to resolve can i

5808
03:28:16,239 --> 03:28:17,600
resolve internal stuff

5809
03:28:17,600 --> 03:28:19,840
local stuff can i resolve internet

5810
03:28:19,840 --> 03:28:20,960
lookups

5811
03:28:20,960 --> 03:28:23,279
a third party integrations working okay

5812
03:28:23,279 --> 03:28:24,800
with things like conditional folders or

5813
03:28:24,800 --> 03:28:26,399
stubs

5814
03:28:26,399 --> 03:28:28,800
and it's not just a you're just checking

5815
03:28:28,800 --> 03:28:30,239
dns is working

5816
03:28:30,239 --> 03:28:32,479
get users involved for uit check let

5817
03:28:32,479 --> 03:28:34,800
their applications work

5818
03:28:34,800 --> 03:28:37,120
and check platforms that are integrating

5819
03:28:37,120 --> 03:28:39,040
and consuming dns

5820
03:28:39,040 --> 03:28:41,040
can do what they need to do with the new

5821
03:28:41,040 --> 03:28:43,120
service

5822
03:28:43,120 --> 03:28:46,080
and then also continue to monitor as

5823
03:28:46,080 --> 03:28:47,120
people and users

5824
03:28:47,120 --> 03:28:49,120
start to consume the new service you

5825
03:28:49,120 --> 03:28:50,479
know keep an eye on the logs

5826
03:28:50,479 --> 03:28:52,880
check that there's nothing going on i

5827
03:28:52,880 --> 03:28:53,920
remember on

5828
03:28:53,920 --> 03:28:56,399
one migration we had we had changed an

5829
03:28:56,399 --> 03:28:57,840
old authoritative service

5830
03:28:57,840 --> 03:29:01,520
over to a forwarder and

5831
03:29:01,520 --> 03:29:02,960
what we found during the validation

5832
03:29:02,960 --> 03:29:04,880
process is that actually we started

5833
03:29:04,880 --> 03:29:08,239
seeing a dns query starting to time out

5834
03:29:08,239 --> 03:29:10,160
so looking at the logs we quickly found

5835
03:29:10,160 --> 03:29:11,680
that because it was authoritative

5836
03:29:11,680 --> 03:29:13,760
but it was now forwarding it was doing a

5837
03:29:13,760 --> 03:29:14,960
lot more recursive

5838
03:29:14,960 --> 03:29:17,359
lookups on behalf of clients and we

5839
03:29:17,359 --> 03:29:19,200
started to hit recursive client limits

5840
03:29:19,200 --> 03:29:20,560
on the service

5841
03:29:20,560 --> 03:29:23,760
um so bump that value up and that

5842
03:29:23,760 --> 03:29:27,040
issue went away it's a timekeeper sorry

5843
03:29:27,040 --> 03:29:28,640
to interrupt but you have only two

5844
03:29:28,640 --> 03:29:31,279
minutes remaining until the q a

5845
03:29:31,279 --> 03:29:34,880
cool i'm nearly done so hopefully

5846
03:29:34,880 --> 03:29:36,960
everything has gone swimmingly well and

5847
03:29:36,960 --> 03:29:38,800
we are good to go but sometimes they're

5848
03:29:38,800 --> 03:29:39,359
just

5849
03:29:39,359 --> 03:29:41,040
for for whatever some for some

5850
03:29:41,040 --> 03:29:42,960
unforeseen uh issue

5851
03:29:42,960 --> 03:29:45,840
issues can occur um so we need to work

5852
03:29:45,840 --> 03:29:47,200
out how we can handle those as part of

5853
03:29:47,200 --> 03:29:48,560
the migration

5854
03:29:48,560 --> 03:29:51,040
and if we know what those issues are we

5855
03:29:51,040 --> 03:29:52,720
know what the fix is

5856
03:29:52,720 --> 03:29:55,600
we can fix forward or sometimes we need

5857
03:29:55,600 --> 03:29:56,399
to understand

5858
03:29:56,399 --> 03:29:58,239
that okay we don't understand what the

5859
03:29:58,239 --> 03:30:00,160
issue is the impact is too

5860
03:30:00,160 --> 03:30:02,880
here it's going to take too long to fix

5861
03:30:02,880 --> 03:30:04,800
and we're going to need to roll back

5862
03:30:04,800 --> 03:30:06,399
and the key thing is again as part of

5863
03:30:06,399 --> 03:30:08,000
that migration plan

5864
03:30:08,000 --> 03:30:09,840
is that knowing at each step how we're

5865
03:30:09,840 --> 03:30:11,359
going to roll back from that

5866
03:30:11,359 --> 03:30:14,479
and how long it's going to take

5867
03:30:14,720 --> 03:30:15,840
and i think really the goal from the

5868
03:30:15,840 --> 03:30:18,800
migration is is essentially to

5869
03:30:18,800 --> 03:30:20,319
people to be unaware that we've made any

5870
03:30:20,319 --> 03:30:22,000
change you know dns

5871
03:30:22,000 --> 03:30:24,160
is like a utility service no one really

5872
03:30:24,160 --> 03:30:25,520
complains about it or cares about too

5873
03:30:25,520 --> 03:30:26,319
much until

5874
03:30:26,319 --> 03:30:29,200
it stops flowing and essentially as part

5875
03:30:29,200 --> 03:30:30,640
of the migration we want to keep that

5876
03:30:30,640 --> 03:30:31,600
tap flowing

5877
03:30:31,600 --> 03:30:33,760
and no one to get worried about not

5878
03:30:33,760 --> 03:30:34,960
being able to

5879
03:30:34,960 --> 03:30:38,479
surf youtube for cat videos

5880
03:30:38,880 --> 03:30:41,359
so wrap this up there are definitely

5881
03:30:41,359 --> 03:30:42,640
benefits to

5882
03:30:42,640 --> 03:30:44,479
migrating your dns service whether

5883
03:30:44,479 --> 03:30:46,479
you're trying to improve resiliency

5884
03:30:46,479 --> 03:30:48,800
consolidate a bunch of environments

5885
03:30:48,800 --> 03:30:52,080
bring in new functionality to dns

5886
03:30:52,080 --> 03:30:55,200
and it can be achieved if you put enough

5887
03:30:55,200 --> 03:30:57,359
planning into it

5888
03:30:57,359 --> 03:31:00,640
create that migration plan test it out

5889
03:31:00,640 --> 03:31:03,200
so you know pretty much exactly as much

5890
03:31:03,200 --> 03:31:04,479
as you can do

5891
03:31:04,479 --> 03:31:06,239
about how the process is going to work

5892
03:31:06,239 --> 03:31:07,920
and what you're going to do

5893
03:31:07,920 --> 03:31:10,319
and validate it as you go through it

5894
03:31:10,319 --> 03:31:11,840
don't just assume that changes have

5895
03:31:11,840 --> 03:31:12,720
happened

5896
03:31:12,720 --> 03:31:15,200
actually check it out and give yourself

5897
03:31:15,200 --> 03:31:15,840
the best

5898
03:31:15,840 --> 03:31:20,399
possible chance of getting it done

5899
03:31:20,399 --> 03:31:23,359
that is it thank you all right thank you

5900
03:31:23,359 --> 03:31:23,920
here

5901
03:31:23,920 --> 03:31:28,239
um again the uh you can ask questions uh

5902
03:31:28,239 --> 03:31:29,120
by either

5903
03:31:29,120 --> 03:31:31,520
uh posting a question in the q a tab or

5904
03:31:31,520 --> 03:31:33,120
by raising your hand

5905
03:31:33,120 --> 03:31:36,319
and you're also going to get a poll with

5906
03:31:36,319 --> 03:31:37,359
a pop-up

5907
03:31:37,359 --> 03:31:39,120
a pop-up with a phone that is going to

5908
03:31:39,120 --> 03:31:42,239
come shortly so you can rate the talk

5909
03:31:42,239 --> 03:31:45,520
we have a couple of questions in the q a

5910
03:31:45,520 --> 03:31:47,840
tab so i'm going to read through them um

5911
03:31:47,840 --> 03:31:50,080
the first one is not really a question

5912
03:31:50,080 --> 03:31:53,520
it's a andreas taute

5913
03:31:53,520 --> 03:31:56,319
that says thanks here just a side note

5914
03:31:56,319 --> 03:31:58,800
to get the best result from ldns compare

5915
03:31:58,800 --> 03:31:59,439
zones

5916
03:31:59,439 --> 03:32:01,920
it helps to canonicalize the zone file

5917
03:32:01,920 --> 03:32:03,040
with name

5918
03:32:03,040 --> 03:32:06,160
named checkzone dashjdasho

5919
03:32:06,160 --> 03:32:08,399
and microsoft dns that i need some

5920
03:32:08,399 --> 03:32:11,600
cleanup of dgns timestamp and then

5921
03:32:11,600 --> 03:32:13,520
i'm going to spare you spinning out the

5922
03:32:13,520 --> 03:32:15,200
square brackets and everything

5923
03:32:15,200 --> 03:32:17,120
uh you can you can find it out in the q

5924
03:32:17,120 --> 03:32:18,560
a page

5925
03:32:18,560 --> 03:32:21,279
um then there's another there's a

5926
03:32:21,279 --> 03:32:24,479
question um or maybe uh

5927
03:32:24,479 --> 03:32:27,840
more of a statement from roland dobbins

5928
03:32:27,840 --> 03:32:29,760
additional important aspect of dns

5929
03:32:29,760 --> 03:32:32,640
migration are zone sanitization

5930
03:32:32,640 --> 03:32:36,160
for instance tsunami and qps capacity

5931
03:32:36,160 --> 03:32:37,040
estimation

5932
03:32:37,040 --> 03:32:41,760
additional provisioning as necessary

5933
03:32:42,319 --> 03:32:45,680
and i i think yeah

5934
03:32:45,680 --> 03:32:49,680
oh i agree with those um and

5935
03:32:49,680 --> 03:32:51,040
so i did have that in the original talk

5936
03:32:51,040 --> 03:32:52,160
and then i realized that i had five

5937
03:32:52,160 --> 03:32:52,880
minutes less

5938
03:32:52,880 --> 03:32:54,720
than what i actually thought so i had to

5939
03:32:54,720 --> 03:32:56,560
slim it down somewhat

5940
03:32:56,560 --> 03:32:59,279
um but yeah i mean and andreas is right

5941
03:32:59,279 --> 03:33:00,160
certainly on that

5942
03:33:00,160 --> 03:33:01,279
you know you can when you're doing the

5943
03:33:01,279 --> 03:33:03,200
ldns compare zones you you would

5944
03:33:03,200 --> 03:33:05,200
typically batch up into a script so

5945
03:33:05,200 --> 03:33:07,439
do zone transfers locally canonicalize

5946
03:33:07,439 --> 03:33:10,000
them to get them in the right format

5947
03:33:10,000 --> 03:33:13,439
and then dip them cool and now

5948
03:33:13,439 --> 03:33:15,200
i guess maybe one thing that came to

5949
03:33:15,200 --> 03:33:17,200
mind to me is

5950
03:33:17,200 --> 03:33:19,840
to use tools like such as dns perf for

5951
03:33:19,840 --> 03:33:20,720
instance

5952
03:33:20,720 --> 03:33:22,479
where you can essentially estimate

5953
03:33:22,479 --> 03:33:24,800
capacity of the new setup

5954
03:33:24,800 --> 03:33:27,840
or dns tab to be able to actually

5955
03:33:27,840 --> 03:33:30,479
find out what your clients have been

5956
03:33:30,479 --> 03:33:32,080
asking so you can replace that

5957
03:33:32,080 --> 03:33:35,200
against the new uh the the new server

5958
03:33:35,200 --> 03:33:35,439
and

5959
03:33:35,439 --> 03:33:38,080
and compare results and i believe uh dns

5960
03:33:38,080 --> 03:33:39,920
work has a bunch of tools

5961
03:33:39,920 --> 03:33:42,160
uh that may help also validating new

5962
03:33:42,160 --> 03:33:43,120
servers

5963
03:33:43,120 --> 03:33:45,840
did you check into those yeah definitely

5964
03:33:45,840 --> 03:33:46,319
um so

5965
03:33:46,319 --> 03:33:47,840
i had a i did have a slide in here which

5966
03:33:47,840 --> 03:33:49,600
i dropped which basically said kind of

5967
03:33:49,600 --> 03:33:51,840
get to know your existing current

5968
03:33:51,840 --> 03:33:53,439
platform and get to know your target

5969
03:33:53,439 --> 03:33:54,080
platform

5970
03:33:54,080 --> 03:33:56,080
and you're right i think one thing that

5971
03:33:56,080 --> 03:33:57,200
a lot of um

5972
03:33:57,200 --> 03:33:58,880
organizations may struggle with is when

5973
03:33:58,880 --> 03:34:01,040
you ask them what is their current

5974
03:34:01,040 --> 03:34:02,880
utilization of dns what is their

5975
03:34:02,880 --> 03:34:05,920
you know what's their query load um most

5976
03:34:05,920 --> 03:34:07,520
people just would not have a clue

5977
03:34:07,520 --> 03:34:09,840
and you know putting a bit of effort

5978
03:34:09,840 --> 03:34:11,439
into using tools like that

5979
03:34:11,439 --> 03:34:13,600
so either you know if you can't get that

5980
03:34:13,600 --> 03:34:15,040
information you essentially kind of have

5981
03:34:15,040 --> 03:34:16,399
to over spec

5982
03:34:16,399 --> 03:34:18,080
the target platform for what you're

5983
03:34:18,080 --> 03:34:19,520
going to do but

5984
03:34:19,520 --> 03:34:21,760
uh i definitely think there is benefit

5985
03:34:21,760 --> 03:34:23,840
into putting that time in up front

5986
03:34:23,840 --> 03:34:25,600
into understanding the actual

5987
03:34:25,600 --> 03:34:27,359
requirements are in the

5988
03:34:27,359 --> 03:34:30,319
current 816 environment any new

5989
03:34:30,319 --> 03:34:31,840
requirements that may put additional

5990
03:34:31,840 --> 03:34:34,319
load on to take those into consideration

5991
03:34:34,319 --> 03:34:38,160
um and then spec up and implement

5992
03:34:38,160 --> 03:34:42,560
a new platform accordingly

5993
03:34:42,560 --> 03:34:45,520
all right um i don't see any other

5994
03:34:45,520 --> 03:34:46,479
questions

5995
03:34:46,479 --> 03:34:49,920
um we are almost out of time

5996
03:34:49,920 --> 03:34:51,680
so i guess i'm going to just hand it

5997
03:34:51,680 --> 03:34:54,000
over to well thanks everybody first

5998
03:34:54,000 --> 03:34:57,040
uh speakers and attendees and i'm going

5999
03:34:57,040 --> 03:34:58,319
to hand it over to

6000
03:34:58,319 --> 03:35:02,080
keith who's going to wrap up day one

6001
03:35:02,080 --> 03:35:04,640
great okay thank you and also thank you

6002
03:35:04,640 --> 03:35:05,920
to huyan for being our

6003
03:35:05,920 --> 03:35:09,120
timekeeper for the last session um at

6004
03:35:09,120 --> 03:35:10,319
this point in the day

6005
03:35:10,319 --> 03:35:12,319
um i think it you know i'd like to thank

6006
03:35:12,319 --> 03:35:13,520
all of our speakers

6007
03:35:13,520 --> 03:35:15,680
they've been absolutely completely on

6008
03:35:15,680 --> 03:35:18,239
time so really appreciate that

6009
03:35:18,239 --> 03:35:19,840
um and i would like to thank our

6010
03:35:19,840 --> 03:35:22,399
sponsors once more farsight and verisign

6011
03:35:22,399 --> 03:35:25,279
for um for sponsoring this event um as

6012
03:35:25,279 --> 03:35:27,520
per my slides just a quick reminder that

6013
03:35:27,520 --> 03:35:30,000
um in addition to the feedback via the

6014
03:35:30,000 --> 03:35:30,880
zoom polls

6015
03:35:30,880 --> 03:35:32,399
um there's also the chance to give

6016
03:35:32,399 --> 03:35:34,640
general feedback both on this event and

6017
03:35:34,640 --> 03:35:36,239
um indications of what you think you

6018
03:35:36,239 --> 03:35:38,560
might want in terms of future events

6019
03:35:38,560 --> 03:35:41,840
at the survey link there um

6020
03:35:41,840 --> 03:35:44,239
and then for those of you who still have

6021
03:35:44,239 --> 03:35:45,760
enough energy or

6022
03:35:45,760 --> 03:35:48,000
need to invite searches with others in

6023
03:35:48,000 --> 03:35:51,520
order to continue to have energy

6024
03:35:51,520 --> 03:35:54,560
we still have social space um we put a

6025
03:35:54,560 --> 03:35:55,840
decent number of people in that during

6026
03:35:55,840 --> 03:35:56,880
the long break so

6027
03:35:56,880 --> 03:35:58,640
you know if you didn't give spatial chat

6028
03:35:58,640 --> 03:36:01,359
a goal now is a good chance to do it

6029
03:36:01,359 --> 03:36:04,479
um and um

6030
03:36:04,479 --> 03:36:05,920
that's how you get into there you'll

6031
03:36:05,920 --> 03:36:07,600
find the password either an email that

6032
03:36:07,600 --> 03:36:08,479
we send you or

6033
03:36:08,479 --> 03:36:10,080
in the uh the rolling slides which will

6034
03:36:10,080 --> 03:36:12,160
come up when i'm done talking

6035
03:36:12,160 --> 03:36:15,439
um and then we restart tomorrow at 1am

6036
03:36:15,439 --> 03:36:19,040
utc um and use the same zoom link as you

6037
03:36:19,040 --> 03:36:20,640
did for today

6038
03:36:20,640 --> 03:36:22,319
um finally i would like to thank

6039
03:36:22,319 --> 03:36:24,479
maurizio vergara who has been doing our

6040
03:36:24,479 --> 03:36:25,359
social media

6041
03:36:25,359 --> 03:36:27,760
um today um for doing a great great

6042
03:36:27,760 --> 03:36:29,439
sequence of tweets about what's going on

6043
03:36:29,439 --> 03:36:30,160
in

6044
03:36:30,160 --> 03:36:33,439
in the event um

6045
03:36:33,439 --> 03:36:36,560
and um that's as done for today

6046
03:36:36,560 --> 03:36:39,040
see you briefly in the um charlie in the

6047
03:36:39,040 --> 03:36:40,239
the special chat room

6048
03:36:40,239 --> 03:36:43,040
and um we will resume tomorrow and see

6049
03:36:43,040 --> 03:36:44,399
you then

6050
03:36:44,399 --> 03:36:49,840
thank you

6051
03:36:51,470 --> 03:36:57,229
[Music]

6052
03:37:07,830 --> 03:37:10,940
[Music]

6053
03:37:12,760 --> 03:37:15,760
daddy

