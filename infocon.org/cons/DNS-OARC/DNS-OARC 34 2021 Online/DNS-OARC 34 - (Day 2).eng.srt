1
00:00:01,970 --> 00:00:14,920
[Music]

2
00:00:14,920 --> 00:00:17,920
uh

3
00:00:18,370 --> 00:01:34,579
[Music]

4
00:01:38,040 --> 00:01:46,290
[Music]

5
00:01:48,000 --> 00:01:50,640
hey welcome everybody to day two of dns

6
00:01:50,640 --> 00:01:52,159
arc

7
00:01:52,159 --> 00:01:54,479
my name is manu brotel and i work at

8
00:01:54,479 --> 00:01:55,360
facebook and i will be

9
00:01:55,360 --> 00:01:59,040
sharing the sessions today i will be

10
00:01:59,040 --> 00:02:01,600
with jake that is going to be our

11
00:02:01,600 --> 00:02:02,880
timekeeper

12
00:02:02,880 --> 00:02:05,119
you may hear his voice like five minutes

13
00:02:05,119 --> 00:02:06,079
before

14
00:02:06,079 --> 00:02:09,758
the q a session um like yesterday you

15
00:02:09,758 --> 00:02:11,360
will have chances to

16
00:02:11,360 --> 00:02:14,000
rates the talks uh this will happen

17
00:02:14,000 --> 00:02:15,280
during the q a

18
00:02:15,280 --> 00:02:17,680
please do so this helps the speakers and

19
00:02:17,680 --> 00:02:18,879
the forum committee

20
00:02:18,879 --> 00:02:22,480
to get feedback on the talks today we

21
00:02:22,480 --> 00:02:24,000
will start with a series of

22
00:02:24,000 --> 00:02:27,200
talks and then there is a member only

23
00:02:27,200 --> 00:02:28,239
session

24
00:02:28,239 --> 00:02:30,959
you members should have received a link

25
00:02:30,959 --> 00:02:32,400
if you didn't please

26
00:02:32,400 --> 00:02:36,800
send an email to admin dns forward.net

27
00:02:36,800 --> 00:02:38,959
without further ado i would like to

28
00:02:38,959 --> 00:02:40,080
introduce ben

29
00:02:40,080 --> 00:02:41,920
schwarz from google he's going to tell

30
00:02:41,920 --> 00:02:43,200
us about

31
00:02:43,200 --> 00:02:46,800
everything about service binding https

32
00:02:46,800 --> 00:02:49,840
and svcb records

33
00:02:49,840 --> 00:02:54,879
ben hi thank you manu

34
00:02:54,879 --> 00:02:58,800
i i think of uh of this talk as really

35
00:02:58,800 --> 00:03:00,080
just a warm up for

36
00:03:00,080 --> 00:03:02,560
ralph webber's great presentation that's

37
00:03:02,560 --> 00:03:04,400
going to immediately follow

38
00:03:04,400 --> 00:03:07,760
so uh you may have seen these slides

39
00:03:07,760 --> 00:03:08,400
before

40
00:03:08,400 --> 00:03:10,560
these are almost identical to the slides

41
00:03:10,560 --> 00:03:12,159
that i i used to

42
00:03:12,159 --> 00:03:15,519
discuss this topic at the ripe dns

43
00:03:15,519 --> 00:03:16,000
meeting

44
00:03:16,000 --> 00:03:18,640
in i believe october they're also pretty

45
00:03:18,640 --> 00:03:20,480
similar to a series of presentations

46
00:03:20,480 --> 00:03:22,800
that have happened at the ietf

47
00:03:22,800 --> 00:03:24,959
but even if this is old news for you

48
00:03:24,959 --> 00:03:25,920
please stick around

49
00:03:25,920 --> 00:03:28,959
for ralph webber's talk that's going to

50
00:03:28,959 --> 00:03:33,599
follow on on the similar related topic

51
00:03:33,599 --> 00:03:37,440
fyi we don't see your slides yet

52
00:03:37,920 --> 00:03:40,959
perfect we see them now thank you

53
00:03:40,959 --> 00:03:45,440
great so uh i'm one of three co-authors

54
00:03:45,440 --> 00:03:49,920
of a an ietf draft that's approaching

55
00:03:49,920 --> 00:03:51,280
finalization

56
00:03:51,280 --> 00:03:55,120
that defines two new http new dns record

57
00:03:55,120 --> 00:03:56,400
types

58
00:03:56,400 --> 00:04:00,400
the service binding type or service b

59
00:04:00,400 --> 00:04:05,280
and the https resource record

60
00:04:09,120 --> 00:04:11,040
to tell the story of how we got here we

61
00:04:11,040 --> 00:04:14,000
need to talk about cname

62
00:04:14,000 --> 00:04:16,160
i'm sure everybody here knows about

63
00:04:16,160 --> 00:04:17,279
cname

64
00:04:17,279 --> 00:04:20,320
but and cname is great

65
00:04:20,320 --> 00:04:23,520
it's really a brilliant

66
00:04:23,520 --> 00:04:27,120
component of the the dns system

67
00:04:27,120 --> 00:04:28,960
but it does have this one crucial

68
00:04:28,960 --> 00:04:30,240
limitation

69
00:04:30,240 --> 00:04:33,680
that no other data should be present

70
00:04:33,680 --> 00:04:36,639
it at the same node that is on the same

71
00:04:36,639 --> 00:04:37,520
name

72
00:04:37,520 --> 00:04:41,120
as a cname that's because a resolver

73
00:04:41,120 --> 00:04:44,080
with a cached c name will follow that

74
00:04:44,080 --> 00:04:45,440
alias without

75
00:04:45,440 --> 00:04:46,720
further communication with the

76
00:04:46,720 --> 00:04:48,320
authoritative to see if there's anything

77
00:04:48,320 --> 00:04:49,680
else there

78
00:04:49,680 --> 00:04:52,560
so in effect there cannot be anything

79
00:04:52,560 --> 00:04:54,320
other than a c name at a name

80
00:04:54,320 --> 00:04:56,880
which means there can't be an ns record

81
00:04:56,880 --> 00:04:57,360
uh

82
00:04:57,360 --> 00:05:02,720
at the same at the same name

83
00:05:02,800 --> 00:05:04,960
then sorry to interrupt just to let you

84
00:05:04,960 --> 00:05:06,479
know we don't see your video i'm not

85
00:05:06,479 --> 00:05:08,160
sure this is on purpose or not

86
00:05:08,160 --> 00:05:10,800
uh i believe this client only supports

87
00:05:10,800 --> 00:05:12,479
screen sharing or video

88
00:05:12,479 --> 00:05:15,758
uh not both at the same time

89
00:05:17,360 --> 00:05:19,440
so because of this you can't put a cname

90
00:05:19,440 --> 00:05:21,039
at a zone apex

91
00:05:21,039 --> 00:05:25,840
okay that's background

92
00:05:26,160 --> 00:05:28,160
another important piece of background is

93
00:05:28,160 --> 00:05:30,320
srv records which again i'm sure many of

94
00:05:30,320 --> 00:05:31,520
you are familiar with

95
00:05:31,520 --> 00:05:34,000
srv records in a sense solve this

96
00:05:34,000 --> 00:05:34,880
problem

97
00:05:34,880 --> 00:05:38,000
that cnames can't alias an apex domain

98
00:05:38,000 --> 00:05:40,800
srvs can sit alongside an ns record at

99
00:05:40,800 --> 00:05:41,919
the apex

100
00:05:41,919 --> 00:05:45,680
and can provide a kind of indirection

101
00:05:45,680 --> 00:05:48,560
where clients will will follow an alias

102
00:05:48,560 --> 00:05:50,960
to the specified target name

103
00:05:50,960 --> 00:05:53,120
and this is widely used and solves the

104
00:05:53,120 --> 00:05:54,880
apex aliasing problem for a lot of

105
00:05:54,880 --> 00:05:56,080
protocols

106
00:05:56,080 --> 00:05:59,199
but it is not widely implemented

107
00:05:59,199 --> 00:06:02,639
for http in particular much to the

108
00:06:02,639 --> 00:06:03,520
disappointment

109
00:06:03,520 --> 00:06:05,600
of some people who would like to solve

110
00:06:05,600 --> 00:06:06,880
this kind of problem for

111
00:06:06,880 --> 00:06:10,560
http and https

112
00:06:10,560 --> 00:06:13,840
and it also has suffered from some

113
00:06:13,840 --> 00:06:16,240
problems related to a latency penalty

114
00:06:16,240 --> 00:06:18,479
basically problems if intermediate

115
00:06:18,479 --> 00:06:19,759
layers of the stack

116
00:06:19,759 --> 00:06:22,800
are not aware and supporting of this new

117
00:06:22,800 --> 00:06:24,160
record type

118
00:06:24,160 --> 00:06:26,720
which sorry srv is no longer such a new

119
00:06:26,720 --> 00:06:28,560
record type

120
00:06:28,560 --> 00:06:31,919
but alas there still are many

121
00:06:31,919 --> 00:06:33,680
components of the dns system that are

122
00:06:33,680 --> 00:06:35,440
not really

123
00:06:35,440 --> 00:06:40,880
suited for it so that was the status quo

124
00:06:40,880 --> 00:06:43,840
in 2000 and then over the following

125
00:06:43,840 --> 00:06:45,600
decades we've seen

126
00:06:45,600 --> 00:06:49,440
in my view some transformations of

127
00:06:49,440 --> 00:06:52,639
how the internet is used at scale

128
00:06:52,639 --> 00:06:53,919
one of the important things that's

129
00:06:53,919 --> 00:06:57,039
changed is that cdns have emerged

130
00:06:57,039 --> 00:07:00,840
and cdns make heavy use of

131
00:07:00,840 --> 00:07:03,919
cname to make it really easy for people

132
00:07:03,919 --> 00:07:07,360
to point their domain at a very large

133
00:07:07,360 --> 00:07:08,800
scale hosting operator

134
00:07:08,800 --> 00:07:10,800
who can handle all the details of web

135
00:07:10,800 --> 00:07:13,199
hosting

136
00:07:13,280 --> 00:07:16,479
that's easy and convenient but it

137
00:07:16,479 --> 00:07:18,960
can't handle the apex domain and so

138
00:07:18,960 --> 00:07:21,840
there's a real puzzle about what to do

139
00:07:21,840 --> 00:07:24,160
if you really want a cdn to host your

140
00:07:24,160 --> 00:07:25,919
apex domain

141
00:07:25,919 --> 00:07:27,840
and i won't talk through all the details

142
00:07:27,840 --> 00:07:29,520
here except to say

143
00:07:29,520 --> 00:07:33,199
that it's inconvenient it can be done

144
00:07:33,199 --> 00:07:35,680
and it is certainly done at scale today

145
00:07:35,680 --> 00:07:38,000
but it's not as easy as just c naming

146
00:07:38,000 --> 00:07:45,360
your name to a cdn

147
00:07:45,360 --> 00:07:48,400
uh once cdns became well established we

148
00:07:48,400 --> 00:07:49,360
started to see

149
00:07:49,360 --> 00:07:51,680
a growth in interest in multi-cdn

150
00:07:51,680 --> 00:07:52,879
hosting

151
00:07:52,879 --> 00:07:54,720
multi-cn hosting is particularly

152
00:07:54,720 --> 00:07:56,639
important for

153
00:07:56,639 --> 00:07:59,599
clients to be able to move between cdns

154
00:07:59,599 --> 00:08:00,080
because

155
00:08:00,080 --> 00:08:02,000
there's always going to be a transition

156
00:08:02,000 --> 00:08:03,680
period where

157
00:08:03,680 --> 00:08:06,560
some users are are experiencing a

158
00:08:06,560 --> 00:08:08,400
website or reaching a website on the old

159
00:08:08,400 --> 00:08:09,360
cdn and some

160
00:08:09,360 --> 00:08:12,479
users are reaching it on a new cdn and

161
00:08:12,479 --> 00:08:14,960
in order for websites to be able to move

162
00:08:14,960 --> 00:08:16,800
cleanly between hosts

163
00:08:16,800 --> 00:08:18,479
it's really valuable if those

164
00:08:18,479 --> 00:08:19,840
transitions can happen

165
00:08:19,840 --> 00:08:23,440
invisibly without downtime

166
00:08:24,400 --> 00:08:26,720
so again with with cnames this is

167
00:08:26,720 --> 00:08:28,560
relatively easy

168
00:08:28,560 --> 00:08:30,479
the dns standards don't make this easy

169
00:08:30,479 --> 00:08:32,399
to express in a zone file

170
00:08:32,399 --> 00:08:35,679
but you can in effect just

171
00:08:35,679 --> 00:08:40,880
have two cnames um

172
00:08:40,880 --> 00:08:42,799
uh and everything will will basically

173
00:08:42,799 --> 00:08:44,480
work fine and as you roll

174
00:08:44,480 --> 00:08:47,920
out the the second cname users will flip

175
00:08:47,920 --> 00:08:49,440
over to the new cdn

176
00:08:49,440 --> 00:08:52,720
but what about for the apex domain

177
00:08:52,720 --> 00:08:56,399
well this is actually relatively

178
00:08:56,399 --> 00:08:57,279
straightforward

179
00:08:57,279 --> 00:08:58,959
you can just sort of mix the ips

180
00:08:58,959 --> 00:09:01,200
together if you want to host

181
00:09:01,200 --> 00:09:03,440
on two different cdns especially for

182
00:09:03,440 --> 00:09:04,399
example if

183
00:09:04,399 --> 00:09:06,560
you want clients to be able to fl to

184
00:09:06,560 --> 00:09:08,000
failover between them if

185
00:09:08,000 --> 00:09:10,399
if one of them experiences downtime for

186
00:09:10,399 --> 00:09:12,160
some reason

187
00:09:12,160 --> 00:09:14,080
and that works fine the cdns are

188
00:09:14,080 --> 00:09:17,200
completely interchangeable

189
00:09:18,320 --> 00:09:22,240
but in 2018 we saw the first version

190
00:09:22,240 --> 00:09:24,240
the formal version of a proposal for

191
00:09:24,240 --> 00:09:25,839
encrypted sni which is now called

192
00:09:25,839 --> 00:09:27,920
encrypted client hello

193
00:09:27,920 --> 00:09:30,959
which is an addition to the tls standard

194
00:09:30,959 --> 00:09:33,360
in this version of in this addition to

195
00:09:33,360 --> 00:09:34,160
tls

196
00:09:34,160 --> 00:09:37,680
the tls server publishes a public key

197
00:09:37,680 --> 00:09:40,320
in the dns and the client fetches it and

198
00:09:40,320 --> 00:09:42,160
uses it to encrypt the first message

199
00:09:42,160 --> 00:09:45,519
i suppose i should say that dain

200
00:09:45,519 --> 00:09:48,000
dain based authentication operates in a

201
00:09:48,000 --> 00:09:50,720
similar fashion and so if you're using

202
00:09:50,720 --> 00:09:52,560
encrypted client hello or

203
00:09:52,560 --> 00:09:55,200
probably also if you're using dane cdns

204
00:09:55,200 --> 00:09:57,200
are no longer interchangeable

205
00:09:57,200 --> 00:09:59,680
the client gets a public key for a

206
00:09:59,680 --> 00:10:01,040
particular cdn

207
00:10:01,040 --> 00:10:04,079
trying to use cdna's public key with cdn

208
00:10:04,079 --> 00:10:09,199
b's ip address is going to fail hard

209
00:10:09,839 --> 00:10:13,600
so we have a problem

210
00:10:13,839 --> 00:10:16,000
and the solution is that we we need a

211
00:10:16,000 --> 00:10:17,279
new record type

212
00:10:17,279 --> 00:10:19,680
that allows us to bind together these

213
00:10:19,680 --> 00:10:21,040
pieces of information

214
00:10:21,040 --> 00:10:24,240
so that the services ip address and

215
00:10:24,240 --> 00:10:26,160
the public keys and whatever else the

216
00:10:26,160 --> 00:10:27,680
client needs to know

217
00:10:27,680 --> 00:10:30,839
are all bound together into an atomic

218
00:10:30,839 --> 00:10:32,560
collection

219
00:10:32,560 --> 00:10:35,360
that is not going to get chopped up into

220
00:10:35,360 --> 00:10:37,200
into pieces and then mismatched by the

221
00:10:37,200 --> 00:10:39,279
time it gets to the client

222
00:10:39,279 --> 00:10:41,519
and we also need to allow aliasing the

223
00:10:41,519 --> 00:10:42,800
apex

224
00:10:42,800 --> 00:10:46,399
because uh the the cdn

225
00:10:46,399 --> 00:10:48,480
the hosting infrastructure needs to

226
00:10:48,480 --> 00:10:50,399
manage both its ip addresses

227
00:10:50,399 --> 00:10:53,760
and its set of public keys really

228
00:10:53,760 --> 00:10:56,800
we really don't want to put ourselves in

229
00:10:56,800 --> 00:10:57,600
the position

230
00:10:57,600 --> 00:11:02,079
of cdn clients copying the cdn's public

231
00:11:02,079 --> 00:11:02,720
keys

232
00:11:02,720 --> 00:11:06,079
into the client's zone which is

233
00:11:06,079 --> 00:11:08,560
ripe for all kinds of of terrible

234
00:11:08,560 --> 00:11:09,200
problems

235
00:11:09,200 --> 00:11:12,399
like making it impossible to

236
00:11:12,399 --> 00:11:16,480
to do key rotation and expiration

237
00:11:16,480 --> 00:11:19,360
so we need a way to bind together all of

238
00:11:19,360 --> 00:11:21,920
this information about a service

239
00:11:21,920 --> 00:11:25,279
and we need a way to alias names

240
00:11:25,279 --> 00:11:27,760
to that bound collection of information

241
00:11:27,760 --> 00:11:29,920
and so we call this a service binding

242
00:11:29,920 --> 00:11:34,640
record this is the zone file form of the

243
00:11:34,640 --> 00:11:36,079
new rr type it looks

244
00:11:36,079 --> 00:11:38,000
a lot like srv which is not a

245
00:11:38,000 --> 00:11:40,000
coincidence

246
00:11:40,000 --> 00:11:43,440
but it is also substantially different

247
00:11:43,440 --> 00:11:46,480
in a few different ways

248
00:11:46,800 --> 00:11:49,920
like srv it has a priority field that

249
00:11:49,920 --> 00:11:52,240
priority field has a special case for

250
00:11:52,240 --> 00:11:55,680
priority zero which means alias

251
00:11:55,680 --> 00:11:58,560
effectively it means go to the target

252
00:11:58,560 --> 00:11:59,279
name

253
00:11:59,279 --> 00:12:03,600
and do another service binding query

254
00:12:04,000 --> 00:12:08,560
otherwise the svcb or service binding

255
00:12:08,560 --> 00:12:09,680
record

256
00:12:09,680 --> 00:12:12,720
contains an arbitrary key value data

257
00:12:12,720 --> 00:12:13,600
store

258
00:12:13,600 --> 00:12:16,160
where the the keys are iana controlled

259
00:12:16,160 --> 00:12:18,079
and so this can contain in effect a

260
00:12:18,079 --> 00:12:19,760
complete description

261
00:12:19,760 --> 00:12:22,639
of anything the client might need to

262
00:12:22,639 --> 00:12:26,320
know in order to connect to the server

263
00:12:26,320 --> 00:12:29,680
and just like srv the

264
00:12:29,680 --> 00:12:32,880
client has to chase these aliases which

265
00:12:32,880 --> 00:12:34,399
creates a performance problem and just

266
00:12:34,399 --> 00:12:35,360
like srv

267
00:12:35,360 --> 00:12:38,399
the recursive resolver can help

268
00:12:38,399 --> 00:12:39,920
by doing some additional section

269
00:12:39,920 --> 00:12:42,160
processing to include

270
00:12:42,160 --> 00:12:46,240
those follow-up responses

271
00:12:47,680 --> 00:12:51,200
this draft also defines a new rr type

272
00:12:51,200 --> 00:12:53,600
called https

273
00:12:53,600 --> 00:12:56,720
and this is exactly the same as

274
00:12:56,720 --> 00:12:59,839
service b except

275
00:12:59,839 --> 00:13:02,480
that the naming scheme is defined not to

276
00:13:02,480 --> 00:13:04,320
use the underscore prefixes so if i go

277
00:13:04,320 --> 00:13:06,000
back one slide

278
00:13:06,000 --> 00:13:08,480
service b uses an underscore prefix

279
00:13:08,480 --> 00:13:11,920
scheme not quite the same as srvs

280
00:13:11,920 --> 00:13:15,839
effectively designed to encode the

281
00:13:15,839 --> 00:13:19,200
authority portion of a uri so if you

282
00:13:19,200 --> 00:13:20,160
have

283
00:13:20,160 --> 00:13:23,120
a uri that has some scheme and a name

284
00:13:23,120 --> 00:13:24,639
and maybe a port

285
00:13:24,639 --> 00:13:27,519
or possibly other information this is

286
00:13:27,519 --> 00:13:29,680
flexible depending on the exact protocol

287
00:13:29,680 --> 00:13:31,600
that you're trying to

288
00:13:31,600 --> 00:13:34,639
indicate that's all encoded into the

289
00:13:34,639 --> 00:13:36,480
name here

290
00:13:36,480 --> 00:13:40,079
with https those prefixes are skipped

291
00:13:40,079 --> 00:13:44,399
if the protocol is https which it always

292
00:13:44,399 --> 00:13:44,720
is

293
00:13:44,720 --> 00:13:48,639
and the port is 443.

294
00:13:48,639 --> 00:13:50,639
and this has two really important

295
00:13:50,639 --> 00:13:51,920
properties it

296
00:13:51,920 --> 00:13:54,959
makes wildcard domains work a lot better

297
00:13:54,959 --> 00:13:56,800
it means that you can put a wildcard

298
00:13:56,800 --> 00:13:59,680
https record next to a wildcard

299
00:13:59,680 --> 00:14:02,000
a or quad a record and everything

300
00:14:02,000 --> 00:14:02,880
basically

301
00:14:02,880 --> 00:14:05,519
should work it also means that existing

302
00:14:05,519 --> 00:14:06,959
cname delegations

303
00:14:06,959 --> 00:14:10,480
work so if a client issues

304
00:14:10,480 --> 00:14:13,199
an address query and a service b which

305
00:14:13,199 --> 00:14:14,639
is now an https

306
00:14:14,639 --> 00:14:17,839
query to the same name and that name is

307
00:14:17,839 --> 00:14:19,440
cnamed to some

308
00:14:19,440 --> 00:14:21,120
other name both of those queries will

309
00:14:21,120 --> 00:14:23,040
follow the cname and so

310
00:14:23,040 --> 00:14:25,279
they'll get you'll get the right

311
00:14:25,279 --> 00:14:27,519
information that you're looking for

312
00:14:27,519 --> 00:14:29,680
whereas if there were prefixes the

313
00:14:29,680 --> 00:14:31,519
client would have to add an additional c

314
00:14:31,519 --> 00:14:32,160
name or

315
00:14:32,160 --> 00:14:34,160
i guess hypothetically convert the c

316
00:14:34,160 --> 00:14:35,839
name to a d name or something

317
00:14:35,839 --> 00:14:37,440
and since there's an enormous install

318
00:14:37,440 --> 00:14:38,880
base of these existing c name

319
00:14:38,880 --> 00:14:39,680
delegations

320
00:14:39,680 --> 00:14:42,839
we felt it was important to maintain

321
00:14:42,839 --> 00:14:44,160
compatibility

322
00:14:44,160 --> 00:14:46,079
another interesting thing that the https

323
00:14:46,079 --> 00:14:47,600
record does is that it

324
00:14:47,600 --> 00:14:50,399
signals that the origin is available

325
00:14:50,399 --> 00:14:51,600
over https

326
00:14:51,600 --> 00:14:53,680
and so the client takes this as a signal

327
00:14:53,680 --> 00:14:56,160
to never speak unencrypted http

328
00:14:56,160 --> 00:14:59,279
to this endpoint the the client will not

329
00:14:59,279 --> 00:15:00,000
be

330
00:15:00,000 --> 00:15:02,320
susceptible to ssl stripping once it

331
00:15:02,320 --> 00:15:05,120
gets this record

332
00:15:06,399 --> 00:15:08,800
so here are some quick examples this is

333
00:15:08,800 --> 00:15:10,320
an example of alias mode i'm happy to

334
00:15:10,320 --> 00:15:12,160
come back to this if people want

335
00:15:12,160 --> 00:15:14,720
to talk about it more this is an example

336
00:15:14,720 --> 00:15:15,920
of service mode

337
00:15:15,920 --> 00:15:18,240
where there's some actual information

338
00:15:18,240 --> 00:15:19,760
about the service

339
00:15:19,760 --> 00:15:22,000
one important thing that this highlights

340
00:15:22,000 --> 00:15:24,240
is that the https or service b

341
00:15:24,240 --> 00:15:27,519
record has the ability to convey

342
00:15:27,519 --> 00:15:30,959
that a given endpoint supports http 3.

343
00:15:30,959 --> 00:15:34,079
and so this is interesting and new it

344
00:15:34,079 --> 00:15:35,600
means that a client

345
00:15:35,600 --> 00:15:38,720
before it connects to an http

346
00:15:38,720 --> 00:15:40,959
destination can find out that this

347
00:15:40,959 --> 00:15:41,759
destination

348
00:15:41,759 --> 00:15:45,120
supports http 3 which runs over udp

349
00:15:45,120 --> 00:15:48,720
over quick and make use of that

350
00:15:48,720 --> 00:15:51,120
in its initial connection so you can

351
00:15:51,120 --> 00:15:53,040
potentially with these records

352
00:15:53,040 --> 00:15:55,199
have clients that reach you without ever

353
00:15:55,199 --> 00:15:56,560
speaking tcp

354
00:15:56,560 --> 00:15:59,519
whereas without this record clients

355
00:15:59,519 --> 00:16:00,639
always need to

356
00:16:00,639 --> 00:16:04,320
speak tcp over standard tls

357
00:16:04,320 --> 00:16:07,120
at least once in order to find out that

358
00:16:07,120 --> 00:16:09,120
the service supports http 3

359
00:16:09,120 --> 00:16:11,360
and follow that upgrade path which costs

360
00:16:11,360 --> 00:16:14,399
many many round trips

361
00:16:16,560 --> 00:16:19,759
one key thing about the client behavior

362
00:16:19,759 --> 00:16:20,880
here is that

363
00:16:20,880 --> 00:16:24,000
if the client is is a dual stack client

364
00:16:24,000 --> 00:16:24,720
that's already

365
00:16:24,720 --> 00:16:27,839
issuing a and quad a queries every time

366
00:16:27,839 --> 00:16:30,000
the client issues an a in quad a query

367
00:16:30,000 --> 00:16:32,000
if we're talking about an http web

368
00:16:32,000 --> 00:16:34,240
browser like client

369
00:16:34,240 --> 00:16:37,519
it's also going to issue an https query

370
00:16:37,519 --> 00:16:40,160
so roughly we can expect something like

371
00:16:40,160 --> 00:16:40,959
a 50

372
00:16:40,959 --> 00:16:43,519
increase in query volume from endpoints

373
00:16:43,519 --> 00:16:46,160
of this kind

374
00:16:46,800 --> 00:16:49,759
and ralph weber will will share with us

375
00:16:49,759 --> 00:16:50,079
some

376
00:16:50,079 --> 00:16:53,279
some information about what kinds of

377
00:16:53,279 --> 00:16:54,959
query changes they're currently

378
00:16:54,959 --> 00:16:57,360
observing

379
00:16:57,360 --> 00:17:00,160
the client has to follow aliases if the

380
00:17:00,160 --> 00:17:01,920
recursive resolver doesn't

381
00:17:01,920 --> 00:17:03,279
do it for them through additional

382
00:17:03,279 --> 00:17:05,119
section processing

383
00:17:05,119 --> 00:17:07,439
and the client essentially has full

384
00:17:07,439 --> 00:17:09,039
responsibility for following

385
00:17:09,039 --> 00:17:13,679
all of the indirections here

386
00:17:14,000 --> 00:17:15,280
one of the tricky things here is

387
00:17:15,280 --> 00:17:18,319
encrypted client hello because

388
00:17:18,319 --> 00:17:20,480
encrypted client help contains security

389
00:17:20,480 --> 00:17:22,079
relevant

390
00:17:22,079 --> 00:17:25,280
information the client can't proceed

391
00:17:25,280 --> 00:17:26,160
with the connection

392
00:17:26,160 --> 00:17:29,679
until the https record completes

393
00:17:29,679 --> 00:17:32,640
so the client needs to wait and find out

394
00:17:32,640 --> 00:17:34,080
if there is

395
00:17:34,080 --> 00:17:37,200
our data here if there is an https

396
00:17:37,200 --> 00:17:38,880
record in the zone

397
00:17:38,880 --> 00:17:41,760
before it can even begin the connection

398
00:17:41,760 --> 00:17:43,039
process really

399
00:17:43,039 --> 00:17:46,080
there's some subtle optimizations there

400
00:17:46,080 --> 00:17:48,000
but but that's fundamentally the

401
00:17:48,000 --> 00:17:50,320
limitation

402
00:17:50,320 --> 00:17:52,960
and this is a potential operational

403
00:17:52,960 --> 00:17:54,640
challenge given that we're introducing a

404
00:17:54,640 --> 00:17:57,679
new rr type

405
00:17:58,720 --> 00:18:02,000
this is just an example of a use case

406
00:18:02,000 --> 00:18:06,080
for the multi-cdn case

407
00:18:06,240 --> 00:18:08,960
there's a tricky thing with https and

408
00:18:08,960 --> 00:18:11,440
service b records called ip hints this

409
00:18:11,440 --> 00:18:14,720
has been i think somewhat controversial

410
00:18:14,720 --> 00:18:16,880
i mentioned earlier that clients are

411
00:18:16,880 --> 00:18:19,840
responsible for chasing

412
00:18:19,840 --> 00:18:23,440
the chasing the

413
00:18:23,440 --> 00:18:26,799
aliases and target names if the

414
00:18:26,799 --> 00:18:28,559
recursive resolver doesn't do it for

415
00:18:28,559 --> 00:18:29,520
them

416
00:18:29,520 --> 00:18:32,880
the ip hints are a way to reduce the

417
00:18:32,880 --> 00:18:35,039
performance cost of that case

418
00:18:35,039 --> 00:18:36,799
so they're only applicable in the case

419
00:18:36,799 --> 00:18:39,120
where the recursive resolver is not

420
00:18:39,120 --> 00:18:41,679
doing the additional section processing

421
00:18:41,679 --> 00:18:43,520
and they're specified

422
00:18:43,520 --> 00:18:48,080
only as hints so the client is

423
00:18:48,080 --> 00:18:52,160
is recommended to still follow the alias

424
00:18:52,160 --> 00:18:52,400
and

425
00:18:52,400 --> 00:18:55,520
cache the address records

426
00:18:55,520 --> 00:18:59,200
for the target name so that in

427
00:18:59,200 --> 00:19:00,720
future connection attempts they won't

428
00:19:00,720 --> 00:19:02,559
use the hints they'll use the actual

429
00:19:02,559 --> 00:19:05,360
address records

430
00:19:08,880 --> 00:19:11,120
so that these resource record types are

431
00:19:11,120 --> 00:19:13,120
real they have assigned code points

432
00:19:13,120 --> 00:19:14,960
the draft is nearly final and there's

433
00:19:14,960 --> 00:19:17,440
serious deployment now

434
00:19:17,440 --> 00:19:20,880
in clients in servers and

435
00:19:20,880 --> 00:19:24,640
now in resolvers i happen to work at

436
00:19:24,640 --> 00:19:25,919
google and so

437
00:19:25,919 --> 00:19:28,640
i'm happy to announce that chrome now

438
00:19:28,640 --> 00:19:29,120
has

439
00:19:29,120 --> 00:19:31,840
real code that is being tested for

440
00:19:31,840 --> 00:19:34,320
performing these queries although not

441
00:19:34,320 --> 00:19:36,080
for taking any action with them yet

442
00:19:36,080 --> 00:19:38,160
right now we're just testing

443
00:19:38,160 --> 00:19:39,520
whether we can actually perform the

444
00:19:39,520 --> 00:19:41,520
query safely without it causing any

445
00:19:41,520 --> 00:19:43,520
problems

446
00:19:43,520 --> 00:19:46,799
and i'm happy that firefox is also

447
00:19:46,799 --> 00:19:48,880
doing some experimentation here and that

448
00:19:48,880 --> 00:19:50,480
there are many authoritative

449
00:19:50,480 --> 00:19:53,679
dns implementations that are making

450
00:19:53,679 --> 00:19:56,720
great progress here

451
00:20:00,880 --> 00:20:03,039
so that's all i have for slides and i'm

452
00:20:03,039 --> 00:20:04,000
happy to

453
00:20:04,000 --> 00:20:06,640
take any questions all right thank you

454
00:20:06,640 --> 00:20:07,360
ben

455
00:20:07,360 --> 00:20:10,240
uh yeah in terms of questions please um

456
00:20:10,240 --> 00:20:12,640
we have two ways to do it either you can

457
00:20:12,640 --> 00:20:15,120
type your question in the q a tab and i

458
00:20:15,120 --> 00:20:16,080
will uh

459
00:20:16,080 --> 00:20:18,400
and i will ask you a question or you can

460
00:20:18,400 --> 00:20:21,120
raise your hand and ask your question

461
00:20:21,120 --> 00:20:23,840
by yourself we have a question from

462
00:20:23,840 --> 00:20:25,760
hazel smith that is

463
00:20:25,760 --> 00:20:29,120
going to ask all right hazel you can

464
00:20:29,120 --> 00:20:32,559
you can unmute yourself hello

465
00:20:32,559 --> 00:20:36,159
um so you mentioned that with the

466
00:20:36,159 --> 00:20:39,280
https record that um

467
00:20:39,280 --> 00:20:42,559
clients will no longer need to perform a

468
00:20:42,559 --> 00:20:43,440
ttp

469
00:20:43,440 --> 00:20:45,520
connection in order to find out whether

470
00:20:45,520 --> 00:20:47,120
they can for example use quick or

471
00:20:47,120 --> 00:20:48,640
something to the

472
00:20:48,640 --> 00:20:51,840
specified endpoint information um

473
00:20:51,840 --> 00:20:55,520
uh what how much mind has been paid to

474
00:20:55,520 --> 00:20:56,960
considerations around

475
00:20:56,960 --> 00:20:58,720
security if a client for example

476
00:20:58,720 --> 00:21:00,000
receives an

477
00:21:00,000 --> 00:21:03,360
https rr perhaps an additional section

478
00:21:03,360 --> 00:21:06,720
um and it's not authenticated data

479
00:21:06,720 --> 00:21:10,000
it's not sort of protected by dns sec

480
00:21:10,000 --> 00:21:12,000
that's a great question the

481
00:21:12,000 --> 00:21:13,840
specification

482
00:21:13,840 --> 00:21:17,440
um does not rely on dns sec

483
00:21:17,440 --> 00:21:22,480
so clients always treat https records

484
00:21:22,480 --> 00:21:25,679
as untrusted potentially

485
00:21:25,679 --> 00:21:29,600
adversarial information

486
00:21:29,600 --> 00:21:32,480
any adversary who can inject these kinds

487
00:21:32,480 --> 00:21:33,760
of records

488
00:21:33,760 --> 00:21:36,880
also almost certainly as in our threat

489
00:21:36,880 --> 00:21:37,520
model i

490
00:21:37,520 --> 00:21:40,720
think certainly has the ability to deny

491
00:21:40,720 --> 00:21:42,080
the client access

492
00:21:42,080 --> 00:21:45,120
to the address records that they were

493
00:21:45,120 --> 00:21:46,320
looking for

494
00:21:46,320 --> 00:21:49,840
so uh essentially tonight we view denial

495
00:21:49,840 --> 00:21:51,840
of service attacks as out of scope

496
00:21:51,840 --> 00:21:54,880
our our adversary can always deny the

497
00:21:54,880 --> 00:21:57,520
user access

498
00:21:57,520 --> 00:21:59,200
but i guess i guess i was wondering

499
00:21:59,200 --> 00:22:01,360
whether this made any difference to

500
00:22:01,360 --> 00:22:02,799
cash poisoning and hack or something if

501
00:22:02,799 --> 00:22:05,440
you were to set q type to https or

502
00:22:05,440 --> 00:22:06,480
something or

503
00:22:06,480 --> 00:22:09,120
and then or svcub or something and try

504
00:22:09,120 --> 00:22:11,600
and basically get a

505
00:22:11,600 --> 00:22:13,600
try and get a spoofed record in in an

506
00:22:13,600 --> 00:22:14,799
intermediate in

507
00:22:14,799 --> 00:22:17,760
a resolver sort of thing yeah so one of

508
00:22:17,760 --> 00:22:18,640
the

509
00:22:18,640 --> 00:22:21,280
so there are essentially two concerns

510
00:22:21,280 --> 00:22:21,919
that i am

511
00:22:21,919 --> 00:22:24,960
i'm aware of here one of them is denial

512
00:22:24,960 --> 00:22:26,080
of service

513
00:22:26,080 --> 00:22:30,400
the other one is breaking the

514
00:22:30,400 --> 00:22:33,600
the sni privacy guarantees

515
00:22:33,600 --> 00:22:35,679
around encrypted client hello so the

516
00:22:35,679 --> 00:22:37,600
purpose of encrypted client hello

517
00:22:37,600 --> 00:22:40,640
is to enable sni

518
00:22:40,640 --> 00:22:43,919
privacy where the server name indication

519
00:22:43,919 --> 00:22:47,600
in the tls handshake is not visible in

520
00:22:47,600 --> 00:22:49,440
clear text

521
00:22:49,440 --> 00:22:54,000
an adversary on the dns path here could

522
00:22:54,000 --> 00:22:56,640
uh essentially deny the user access to

523
00:22:56,640 --> 00:22:58,480
the encrypted client hello

524
00:22:58,480 --> 00:23:01,919
public key or you can try to imagine

525
00:23:01,919 --> 00:23:04,320
you know maybe synthesize and a

526
00:23:04,320 --> 00:23:05,200
different

527
00:23:05,200 --> 00:23:07,760
in uh substitute their own encrypted

528
00:23:07,760 --> 00:23:10,159
client hello public key

529
00:23:10,159 --> 00:23:13,360
and thus learn the the tls

530
00:23:13,360 --> 00:23:16,480
sni value but that adversary already

531
00:23:16,480 --> 00:23:18,480
knows the tls sni value

532
00:23:18,480 --> 00:23:22,080
because it is the q name i mean assuming

533
00:23:22,080 --> 00:23:23,960
it wasn't like

534
00:23:23,960 --> 00:23:26,640
star.onmicrosoft.com or i mean i said

535
00:23:26,640 --> 00:23:29,919
i suppose i suppose that depends on the

536
00:23:29,919 --> 00:23:31,440
the threat model for the adversary if

537
00:23:31,440 --> 00:23:33,280
the adversary is um

538
00:23:33,280 --> 00:23:36,159
has received the the the question that

539
00:23:36,159 --> 00:23:37,360
the original client

540
00:23:37,360 --> 00:23:39,520
sent and they have the queue name but if

541
00:23:39,520 --> 00:23:40,960
if in the cash poisoning attack where

542
00:23:40,960 --> 00:23:42,559
they've just tried to convince

543
00:23:42,559 --> 00:23:45,200
you know google public dns to serve

544
00:23:45,200 --> 00:23:45,760
false

545
00:23:45,760 --> 00:23:48,799
https records for start on microsoft.com

546
00:23:48,799 --> 00:23:50,080
for example um

547
00:23:50,080 --> 00:23:53,440
they might not know the uh the the full

548
00:23:53,440 --> 00:23:54,799
queue name that i quit the client will

549
00:23:54,799 --> 00:23:56,400
be asking for

550
00:23:56,400 --> 00:23:58,720
if you see if you follow me i i think i

551
00:23:58,720 --> 00:24:00,559
do that is an interesting

552
00:24:00,559 --> 00:24:03,919
that is an interesting threat situation

553
00:24:03,919 --> 00:24:05,679
um i have no idea how practical it is

554
00:24:05,679 --> 00:24:06,640
but

555
00:24:06,640 --> 00:24:09,279
yeah my my instinctual reaction here i

556
00:24:09,279 --> 00:24:10,400
guess is that

557
00:24:10,400 --> 00:24:14,159
um we just kind of have to accept that

558
00:24:14,159 --> 00:24:16,000
that kind of vulnerability that we

559
00:24:16,000 --> 00:24:18,480
essentially don't have another option

560
00:24:18,480 --> 00:24:21,600
but um and of course we are describing a

561
00:24:21,600 --> 00:24:23,919
very powerful adversary there

562
00:24:23,919 --> 00:24:25,760
sorry to intervene i think there is a

563
00:24:25,760 --> 00:24:27,760
more discussion to this uh maybe it's

564
00:24:27,760 --> 00:24:29,200
worth taking offline

565
00:24:29,200 --> 00:24:30,799
a couple of more people would like to

566
00:24:30,799 --> 00:24:33,360
ask questions so for the sake of time

567
00:24:33,360 --> 00:24:35,039
i would like to give other people a

568
00:24:35,039 --> 00:24:36,640
chance to ask a question

569
00:24:36,640 --> 00:24:40,640
thank you all right thank you

570
00:24:40,640 --> 00:24:45,360
all right next up is paul

571
00:24:45,520 --> 00:24:49,918
paul machine you can admit yourself

572
00:24:52,880 --> 00:24:55,360
sorry i think it was an accident i

573
00:24:55,360 --> 00:24:57,039
raised my hand

574
00:24:57,039 --> 00:25:00,480
all right okay all right um i guess next

575
00:25:00,480 --> 00:25:00,960
up

576
00:25:00,960 --> 00:25:04,799
is wes

577
00:25:07,279 --> 00:25:10,720
what um thank you um

578
00:25:10,720 --> 00:25:11,919
excellent presentation by the way i

579
00:25:11,919 --> 00:25:14,000
think that the you know the logical flow

580
00:25:14,000 --> 00:25:15,360
and the needs were all really well

581
00:25:15,360 --> 00:25:17,600
spelled out you did a great job you know

582
00:25:17,600 --> 00:25:20,240
educating us on why this was needed um

583
00:25:20,240 --> 00:25:22,159
you know the underbar history is kind of

584
00:25:22,159 --> 00:25:23,919
interesting because we decided to stop

585
00:25:23,919 --> 00:25:24,799
publishing

586
00:25:24,799 --> 00:25:26,799
uh records at the apex of its own

587
00:25:26,799 --> 00:25:28,880
because you know too much especially for

588
00:25:28,880 --> 00:25:30,159
things like wild card and stuff like

589
00:25:30,159 --> 00:25:30,880
that

590
00:25:30,880 --> 00:25:32,960
but then you know now we have this https

591
00:25:32,960 --> 00:25:34,799
record which gets an exception because

592
00:25:34,799 --> 00:25:36,159
it needs wild cards

593
00:25:36,159 --> 00:25:37,919
uh isn't this kind of setting a

594
00:25:37,919 --> 00:25:39,279
precedence i mean should we

595
00:25:39,279 --> 00:25:41,840
now allow everybody in other protocols

596
00:25:41,840 --> 00:25:43,200
to to make use of

597
00:25:43,200 --> 00:25:44,799
records at the apex because it's easier

598
00:25:44,799 --> 00:25:46,880
for them as well or is https special for

599
00:25:46,880 --> 00:25:48,640
some reason and what makes it unique if

600
00:25:48,640 --> 00:25:51,200
that's the case

601
00:25:51,200 --> 00:25:54,080
uh i think i'm missing something in your

602
00:25:54,080 --> 00:25:56,240
in your discussion here uh where

603
00:25:56,240 --> 00:25:57,679
what is the the rule that you're

604
00:25:57,679 --> 00:25:59,200
thinking about i guess i'm not aware of

605
00:25:59,200 --> 00:26:00,720
a restriction

606
00:26:00,720 --> 00:26:02,880
we shouldn't put record types at the at

607
00:26:02,880 --> 00:26:04,880
the end it's not a rule

608
00:26:04,880 --> 00:26:06,559
it was a one of the reasons that the

609
00:26:06,559 --> 00:26:08,320
underbar uh

610
00:26:08,320 --> 00:26:11,520
you know protocol came around was

611
00:26:11,520 --> 00:26:12,159
because

612
00:26:12,159 --> 00:26:14,559
too many records were getting there with

613
00:26:14,559 --> 00:26:16,480
spf and text and you know everything

614
00:26:16,480 --> 00:26:18,400
else it got to be bulky

615
00:26:18,400 --> 00:26:21,440
and uh you know we the the

616
00:26:21,440 --> 00:26:23,520
ietf community sort of decided to push

617
00:26:23,520 --> 00:26:25,360
back against let's stop pushing stuff

618
00:26:25,360 --> 00:26:26,320
there let's put it

619
00:26:26,320 --> 00:26:28,640
at lower levels using you know this

620
00:26:28,640 --> 00:26:30,000
newer convention so that we stopped

621
00:26:30,000 --> 00:26:32,320
putting stuff at the apex

622
00:26:32,320 --> 00:26:34,240
what i worry about is you know a lot of

623
00:26:34,240 --> 00:26:35,760
people will suddenly go well this is no

624
00:26:35,760 --> 00:26:37,520
longer necessary we actually can do the

625
00:26:37,520 --> 00:26:40,240
apex records because https has now

626
00:26:40,240 --> 00:26:41,679
turned that around instead of precedence

627
00:26:41,679 --> 00:26:43,440
back the other direction

628
00:26:43,440 --> 00:26:46,480
that's interesting my sense of the

629
00:26:46,480 --> 00:26:48,480
history there was a little different

630
00:26:48,480 --> 00:26:52,000
and i guess my my feeling was that these

631
00:26:52,000 --> 00:26:54,400
underscore records um sorry the

632
00:26:54,400 --> 00:26:56,559
underscore prefixes

633
00:26:56,559 --> 00:26:58,559
are particularly valuable where their

634
00:26:58,559 --> 00:27:00,320
contents are

635
00:27:00,320 --> 00:27:03,440
are parametric in some sense and

636
00:27:03,440 --> 00:27:06,400
sort of unbounded so an example in the

637
00:27:06,400 --> 00:27:08,400
case of service binding records is that

638
00:27:08,400 --> 00:27:10,000
there's a port number actually also in

639
00:27:10,000 --> 00:27:11,919
the https record there's an underscore

640
00:27:11,919 --> 00:27:13,840
prefix port number

641
00:27:13,840 --> 00:27:16,880
which obviously we can't encode

642
00:27:16,880 --> 00:27:19,840
into a into an rr type we can't have an

643
00:27:19,840 --> 00:27:23,360
rr type for every port number

644
00:27:23,440 --> 00:27:25,919
so uh that's the case where underscore

645
00:27:25,919 --> 00:27:26,799
prefixes are

646
00:27:26,799 --> 00:27:29,120
are most easily motivated from my

647
00:27:29,120 --> 00:27:30,640
perspective

648
00:27:30,640 --> 00:27:34,480
i also have the impression that

649
00:27:34,480 --> 00:27:39,039
there have been changes to the

650
00:27:39,120 --> 00:27:42,320
to the rr type registration procedures

651
00:27:42,320 --> 00:27:44,799
over the last 10 or so years that have

652
00:27:44,799 --> 00:27:45,679
made it

653
00:27:45,679 --> 00:27:49,600
easier to create new rr types and so

654
00:27:49,600 --> 00:27:52,880
whereas underscore prefixes were a way

655
00:27:52,880 --> 00:27:53,279
to

656
00:27:53,279 --> 00:27:56,080
avoid the overhead of creating a new rr

657
00:27:56,080 --> 00:27:58,720
type for new use cases

658
00:27:58,720 --> 00:28:01,600
that overhead has has been substantially

659
00:28:01,600 --> 00:28:02,559
decreased

660
00:28:02,559 --> 00:28:06,320
in part to try to reduce the ever

661
00:28:06,320 --> 00:28:09,840
growing uh abuse or or creative

662
00:28:09,840 --> 00:28:13,120
use of txt records

663
00:28:13,120 --> 00:28:15,200
all right folks i think there is also a

664
00:28:15,200 --> 00:28:17,039
long um

665
00:28:17,039 --> 00:28:18,159
quite a fair amount of time that could

666
00:28:18,159 --> 00:28:20,080
be spent on that topic

667
00:28:20,080 --> 00:28:22,399
um we're going to run out we're running

668
00:28:22,399 --> 00:28:23,840
out of time for for the q a

669
00:28:23,840 --> 00:28:26,559
so uh so let's move that offline um we

670
00:28:26,559 --> 00:28:28,559
can use the um

671
00:28:28,559 --> 00:28:31,840
the chat room in in mata most uh for now

672
00:28:31,840 --> 00:28:32,240
it's

673
00:28:32,240 --> 00:28:35,679
uh time for wild flavors from akamai to

674
00:28:35,679 --> 00:28:38,240
tell us on the other side of the https

675
00:28:38,240 --> 00:28:40,720
record as it's seen in production

676
00:28:40,720 --> 00:28:45,840
all right live you can share your screen

677
00:28:46,799 --> 00:28:49,440
i can

678
00:28:49,840 --> 00:28:53,600
we can see a screen okay i'm going to

679
00:28:53,600 --> 00:28:56,640
presentation mode so um

680
00:28:56,640 --> 00:28:58,399
thanks ben for the very good

681
00:28:58,399 --> 00:29:00,480
introduction of what https is that's

682
00:29:00,480 --> 00:29:02,880
much better than what i could have given

683
00:29:02,880 --> 00:29:05,200
um i'm going to just leave it at that

684
00:29:05,200 --> 00:29:07,120
it's the best thing that's fly spread

685
00:29:07,120 --> 00:29:09,440
because that's really what it is when

686
00:29:09,440 --> 00:29:10,640
you come from

687
00:29:10,640 --> 00:29:13,679
a dns or web perspective

688
00:29:13,679 --> 00:29:16,880
and i'm not gonna i mean go over here

689
00:29:16,880 --> 00:29:21,120
it is kind of like it was done before

690
00:29:21,120 --> 00:29:24,330
with svc and

691
00:29:24,330 --> 00:29:25,760
[Music]

692
00:29:25,760 --> 00:29:28,480
we now have service binding so it is

693
00:29:28,480 --> 00:29:29,760
seeing lots of traffic and

694
00:29:29,760 --> 00:29:31,919
we have an implementation in our cache

695
00:29:31,919 --> 00:29:32,960
of resolver and

696
00:29:32,960 --> 00:29:35,600
we are getting data from isps around the

697
00:29:35,600 --> 00:29:36,240
world

698
00:29:36,240 --> 00:29:39,360
so we actually see what the implication

699
00:29:39,360 --> 00:29:41,279
of of this is and

700
00:29:41,279 --> 00:29:43,679
here this is a graph from one of our

701
00:29:43,679 --> 00:29:45,679
isps

702
00:29:45,679 --> 00:29:48,559
that shows the

703
00:29:48,720 --> 00:29:51,919
jury load differentiated by uh

704
00:29:51,919 --> 00:29:54,799
rr types and as you see most of the

705
00:29:54,799 --> 00:29:55,760
stuff is a

706
00:29:55,760 --> 00:29:59,760
then we have a bit more quad a and then

707
00:29:59,760 --> 00:30:05,200
at the bottom here you see it's going up

708
00:30:05,200 --> 00:30:08,000
from mid-september as you see here to a

709
00:30:08,000 --> 00:30:09,679
significant portion of the traffic that

710
00:30:09,679 --> 00:30:10,960
is now

711
00:30:10,960 --> 00:30:13,279
hdps and that's really curiou volume

712
00:30:13,279 --> 00:30:14,799
that doesn't tell you there was any

713
00:30:14,799 --> 00:30:16,240
answering it's just

714
00:30:16,240 --> 00:30:19,360
the client asked for https record and

715
00:30:19,360 --> 00:30:19,919
when you

716
00:30:19,919 --> 00:30:23,120
look around the world we see some

717
00:30:23,120 --> 00:30:26,799
i mean stuff that makes sense

718
00:30:26,799 --> 00:30:30,320
there's more apple in

719
00:30:30,320 --> 00:30:33,360
sort of apec north america

720
00:30:33,360 --> 00:30:36,559
less in europe and south america and as

721
00:30:36,559 --> 00:30:39,679
apple is the only implementation

722
00:30:39,679 --> 00:30:44,159
the curry loads are are different here

723
00:30:44,159 --> 00:30:47,360
and this

724
00:30:47,360 --> 00:30:50,240
is of course a graph that shows you when

725
00:30:50,240 --> 00:30:52,320
there is a huge impact but

726
00:30:52,320 --> 00:30:54,880
when did it actually start and to look

727
00:30:54,880 --> 00:30:55,600
into that

728
00:30:55,600 --> 00:30:58,880
we convert these to a log graph and then

729
00:30:58,880 --> 00:31:00,480
it looks like this

730
00:31:00,480 --> 00:31:03,039
as you see the first record we actually

731
00:31:03,039 --> 00:31:05,679
received was on july 17

732
00:31:05,679 --> 00:31:09,360
that we saw in asia back in europe

733
00:31:09,360 --> 00:31:13,519
and then you see a couple of dates here

734
00:31:13,519 --> 00:31:17,039
uh that's when apple

735
00:31:17,039 --> 00:31:20,320
probably did the public beta that's

736
00:31:20,320 --> 00:31:23,760
in august and then here is the release

737
00:31:23,760 --> 00:31:26,640
of ios 14 and then it goes on for there

738
00:31:26,640 --> 00:31:27,200
so

739
00:31:27,200 --> 00:31:30,240
all of this is uh pretty much

740
00:31:30,240 --> 00:31:33,279
expected so now we know that the volume

741
00:31:33,279 --> 00:31:33,840
and

742
00:31:33,840 --> 00:31:37,679
when it happened but did it go wrong

743
00:31:37,679 --> 00:31:41,360
and the first question to ask is well

744
00:31:41,360 --> 00:31:46,399
what signals wrong for dns because

745
00:31:46,399 --> 00:31:48,559
i mean there are some error codes annex

746
00:31:48,559 --> 00:31:49,919
domain not them

747
00:31:49,919 --> 00:31:54,240
serve fail but out of these really

748
00:31:54,240 --> 00:31:56,000
only surface has gone wrong and gone

749
00:31:56,000 --> 00:31:58,399
wrong here is from sort of a client side

750
00:31:58,399 --> 00:32:00,399
so this is the answer that the resolver

751
00:32:00,399 --> 00:32:01,919
gives back to the client

752
00:32:01,919 --> 00:32:03,519
and surf fail is a thing that you

753
00:32:03,519 --> 00:32:05,200
normally don't want to give back

754
00:32:05,200 --> 00:32:08,320
because uh surveil is something that

755
00:32:08,320 --> 00:32:09,760
cannot be cached so

756
00:32:09,760 --> 00:32:13,519
resolvers usually do go go a long way to

757
00:32:13,519 --> 00:32:14,000
to

758
00:32:14,000 --> 00:32:16,880
not answer surf fail but sometimes in

759
00:32:16,880 --> 00:32:18,399
some cases they have to

760
00:32:18,399 --> 00:32:20,799
and that means something has to go wrong

761
00:32:20,799 --> 00:32:22,960
and

762
00:32:22,960 --> 00:32:24,720
to show that something has go wrong with

763
00:32:24,720 --> 00:32:26,480
https i sort of

764
00:32:26,480 --> 00:32:28,720
compared the amount of stuff that has

765
00:32:28,720 --> 00:32:29,519
gone wrong

766
00:32:29,519 --> 00:32:32,000
to the overall amount of stuff for that

767
00:32:32,000 --> 00:32:33,200
record type because

768
00:32:33,200 --> 00:32:35,760
keep in mind the hd test volumes that at

769
00:32:35,760 --> 00:32:37,519
the beginning were very low

770
00:32:37,519 --> 00:32:39,279
so if we just had absolute values that

771
00:32:39,279 --> 00:32:40,559
wouldn't make sense

772
00:32:40,559 --> 00:32:43,360
but it uh to show you if something goes

773
00:32:43,360 --> 00:32:43,840
wrong

774
00:32:43,840 --> 00:32:46,880
we are comparing good to bad answers uh

775
00:32:46,880 --> 00:32:50,320
in in the dns and the results are here

776
00:32:50,320 --> 00:32:54,320
so as you see in the beginning stuff

777
00:32:54,320 --> 00:32:57,360
went wrong and then it turned down

778
00:32:57,360 --> 00:33:00,559
which meant probably uh people were

779
00:33:00,559 --> 00:33:02,399
noticing stuff and fixing it

780
00:33:02,399 --> 00:33:05,120
and then there's one spike here that is

781
00:33:05,120 --> 00:33:06,720
the release the public their public

782
00:33:06,720 --> 00:33:08,720
release when people said oh shoot

783
00:33:08,720 --> 00:33:10,559
something's still wrong but it was

784
00:33:10,559 --> 00:33:13,120
seemly fixed and after that

785
00:33:13,120 --> 00:33:17,200
you see the impact

786
00:33:17,200 --> 00:33:20,559
of that https record really is not high

787
00:33:20,559 --> 00:33:23,360
it's lower than actually quad a in some

788
00:33:23,360 --> 00:33:24,399
cases

789
00:33:24,399 --> 00:33:28,140
and again we look into this regional

790
00:33:28,140 --> 00:33:29,679
[Music]

791
00:33:29,679 --> 00:33:31,519
similar there there seems to be some

792
00:33:31,519 --> 00:33:33,360
more problems

793
00:33:33,360 --> 00:33:37,279
initially in asia pacific and some

794
00:33:37,279 --> 00:33:40,000
weird things in europe and the odd thing

795
00:33:40,000 --> 00:33:40,799
is so

796
00:33:40,799 --> 00:33:43,919
yesterday i thought well why not crunch

797
00:33:43,919 --> 00:33:45,039
the latest data

798
00:33:45,039 --> 00:33:47,360
uh from from january and add it to to

799
00:33:47,360 --> 00:33:48,880
this graph

800
00:33:48,880 --> 00:33:52,080
and i did this so cc uh

801
00:33:52,080 --> 00:33:54,240
the year here is the start of the year

802
00:33:54,240 --> 00:33:56,000
and then i saw this

803
00:33:56,000 --> 00:33:58,159
unfortunately i didn't have the time to

804
00:33:58,159 --> 00:34:00,240
look into it what went wrong there

805
00:34:00,240 --> 00:34:02,880
but again it was it seems to be one

806
00:34:02,880 --> 00:34:03,360
event

807
00:34:03,360 --> 00:34:06,320
when maybe something came out and it

808
00:34:06,320 --> 00:34:07,679
kind of dives down

809
00:34:07,679 --> 00:34:11,280
quickly after that so

810
00:34:11,280 --> 00:34:15,520
um now to how the how does this wrong

811
00:34:15,520 --> 00:34:18,159
answers happen and the question we have

812
00:34:18,159 --> 00:34:18,879
to ask us

813
00:34:18,879 --> 00:34:22,079
is well what is the correct answer for

814
00:34:22,079 --> 00:34:24,639
an authoritative server

815
00:34:24,639 --> 00:34:28,480
if you have a new query type well

816
00:34:28,480 --> 00:34:30,719
it's simple there are sort of three

817
00:34:30,719 --> 00:34:32,239
options

818
00:34:32,239 --> 00:34:34,960
and next domain if the label does not

819
00:34:34,960 --> 00:34:36,079
exist so

820
00:34:36,079 --> 00:34:39,280
and i i just made a a simple

821
00:34:39,280 --> 00:34:42,079
so blog.dnsorg doesn't exist so it

822
00:34:42,079 --> 00:34:43,520
doesn't exist in https

823
00:34:43,520 --> 00:34:45,679
it doesn't exist as an a record and it

824
00:34:45,679 --> 00:34:47,599
doesn't exist as a coordinate so

825
00:34:47,599 --> 00:34:50,000
the answer is any domain period you give

826
00:34:50,000 --> 00:34:51,440
an authority section so you have the

827
00:34:51,440 --> 00:34:54,079
negative caching

828
00:34:54,079 --> 00:34:56,399
no error and an empty or a c name in

829
00:34:56,399 --> 00:34:58,720
case you are jcc names

830
00:34:58,720 --> 00:35:01,359
only answer section and the case for dns

831
00:35:01,359 --> 00:35:02,320
org

832
00:35:02,320 --> 00:35:04,560
which doesn't have an https record well

833
00:35:04,560 --> 00:35:06,160
you give there's no error

834
00:35:06,160 --> 00:35:07,599
you have a question second you have an

835
00:35:07,599 --> 00:35:09,440
authority section so that you know this

836
00:35:09,440 --> 00:35:11,359
deep data is reported

837
00:35:11,359 --> 00:35:14,000
but there's no answer so that means okay

838
00:35:14,000 --> 00:35:15,520
of course the best is

839
00:35:15,520 --> 00:35:18,320
well to answer with an https resource

840
00:35:18,320 --> 00:35:19,359
record

841
00:35:19,359 --> 00:35:22,400
and now we're going to look into will

842
00:35:22,400 --> 00:35:24,960
how many people do this and what are the

843
00:35:24,960 --> 00:35:26,560
results

844
00:35:26,560 --> 00:35:30,240
so overall the whole world

845
00:35:30,240 --> 00:35:33,280
uh on i mean this is one day

846
00:35:33,280 --> 00:35:35,599
february one just day i choose but the

847
00:35:35,599 --> 00:35:37,280
other days the earlier days and i looked

848
00:35:37,280 --> 00:35:38,000
into

849
00:35:38,000 --> 00:35:41,599
some days after uh second world yeah

850
00:35:41,599 --> 00:35:44,800
also i mean it looks pretty similar so

851
00:35:44,800 --> 00:35:48,880
we see 403 million unique sqdns

852
00:35:48,880 --> 00:35:53,200
on that day so out of these 12 million

853
00:35:53,200 --> 00:35:56,400
asked https resource records

854
00:35:56,400 --> 00:36:00,640
and out of these two 12 million only 126

855
00:36:00,640 --> 00:36:04,160
000 had actual https record

856
00:36:04,160 --> 00:36:07,359
so out of the stuff that is asked about

857
00:36:07,359 --> 00:36:09,040
a person

858
00:36:09,040 --> 00:36:12,000
uh has hds records so really not that

859
00:36:12,000 --> 00:36:14,079
much now

860
00:36:14,079 --> 00:36:16,720
i want to do a quick shout out to uh

861
00:36:16,720 --> 00:36:18,880
jeff and joe here because

862
00:36:18,880 --> 00:36:21,040
one of the reasons we see so many uh

863
00:36:21,040 --> 00:36:23,440
unique ftdns is that people are

864
00:36:23,440 --> 00:36:26,160
trying to measure stuff with dns and

865
00:36:26,160 --> 00:36:27,280
they are using

866
00:36:27,280 --> 00:36:31,119
kind of uh unique

867
00:36:31,119 --> 00:36:34,320
f to the ends for that and when i did

868
00:36:34,320 --> 00:36:36,320
this research initially of course i

869
00:36:36,320 --> 00:36:40,000
just kind of replayed a whole bunch of

870
00:36:40,000 --> 00:36:43,520
of traffic to uh jeff and joao and

871
00:36:43,520 --> 00:36:46,240
i then noted hmm didn't he talk about

872
00:36:46,240 --> 00:36:47,680
that domain once ago and

873
00:36:47,680 --> 00:36:49,760
i asked him well is that your domain so

874
00:36:49,760 --> 00:36:51,599
i said yeah and then i kind of

875
00:36:51,599 --> 00:36:53,680
extracted it the interesting thing is my

876
00:36:53,680 --> 00:36:55,200
initial

877
00:36:55,200 --> 00:36:58,960
uh use case was well i'm going to ignore

878
00:36:58,960 --> 00:37:00,960
everything that only had a single query

879
00:37:00,960 --> 00:37:04,560
because i mean that's just noise

880
00:37:04,560 --> 00:37:07,440
oddly enough even in my traffic set a

881
00:37:07,440 --> 00:37:08,640
lot of the stuff that

882
00:37:08,640 --> 00:37:11,359
josh andrea did had multiple records so

883
00:37:11,359 --> 00:37:12,960
someone was replaying them

884
00:37:12,960 --> 00:37:16,320
to our servers somehow so but let's

885
00:37:16,320 --> 00:37:19,200
look deeper into it what are the 126 000

886
00:37:19,200 --> 00:37:20,400
records are

887
00:37:20,400 --> 00:37:23,599
well bummer

888
00:37:23,599 --> 00:37:27,280
there is zero resource record that uses

889
00:37:27,280 --> 00:37:28,400
the august feature

890
00:37:28,400 --> 00:37:31,200
and i was really shocked by that zero

891
00:37:31,200 --> 00:37:31,760
nothing

892
00:37:31,760 --> 00:37:35,040
nada and

893
00:37:35,040 --> 00:37:38,079
i have no idea why but at the moment all

894
00:37:38,079 --> 00:37:39,280
of them are using the

895
00:37:39,280 --> 00:37:42,480
the kind of target record and all of

896
00:37:42,480 --> 00:37:42,800
them

897
00:37:42,800 --> 00:37:46,079
use kind of uh priority one there's only

898
00:37:46,079 --> 00:37:48,000
one domain that uses more than one

899
00:37:48,000 --> 00:37:50,079
resource record and uses multiple domain

900
00:37:50,079 --> 00:37:52,720
and that's next dns.io what they are

901
00:37:52,720 --> 00:37:54,160
doing i don't know but that was really

902
00:37:54,160 --> 00:37:56,320
the only domain

903
00:37:56,320 --> 00:37:59,680
out of these uh

904
00:38:01,880 --> 00:38:05,680
126 912 have no aopn

905
00:38:05,680 --> 00:38:07,280
that means they don't tell you that you

906
00:38:07,280 --> 00:38:10,320
want to connect overh2 or h3

907
00:38:10,320 --> 00:38:14,560
um and 67 are hdp only

908
00:38:14,560 --> 00:38:17,760
now the problem i discovered and now i

909
00:38:17,760 --> 00:38:21,920
mean i'm sort of dns guy so

910
00:38:21,920 --> 00:38:23,839
https is not kind of my first thing so

911
00:38:23,839 --> 00:38:25,440
when i did some testing for my own

912
00:38:25,440 --> 00:38:26,960
benefit and set up some

913
00:38:26,960 --> 00:38:30,480
https records i set up http servers

914
00:38:30,480 --> 00:38:34,079
to see if they were kind of if the

915
00:38:34,079 --> 00:38:35,760
red direction were coming directly and

916
00:38:35,760 --> 00:38:39,119
oddly enough absentation meets them

917
00:38:39,119 --> 00:38:42,640
and uh i then kind of

918
00:38:42,640 --> 00:38:44,320
talked to the to some of those easy

919
00:38:44,320 --> 00:38:46,079
options that well that's wrong

920
00:38:46,079 --> 00:38:48,640
because they are supposed to have https

921
00:38:48,640 --> 00:38:49,920
only so this is something that

922
00:38:49,920 --> 00:38:53,119
is currently but i assume will go away

923
00:38:53,119 --> 00:38:56,240
so keep that in mind and

924
00:38:56,240 --> 00:38:57,599
the other thing that you see nearly all

925
00:38:57,599 --> 00:39:00,320
of them have hints and uh

926
00:39:00,320 --> 00:39:04,640
well uh 17 have ipv4 only hints which

927
00:39:04,640 --> 00:39:06,800
i mean means they are pretty prevalent

928
00:39:06,800 --> 00:39:08,640
in v6 because that's probably more than

929
00:39:08,640 --> 00:39:10,240
we have

930
00:39:10,240 --> 00:39:13,040
of e60 plan there was no use of other

931
00:39:13,040 --> 00:39:14,720
keys no ach

932
00:39:14,720 --> 00:39:16,720
no port no key whatever you can't

933
00:39:16,720 --> 00:39:18,960
generate you have generic form like you

934
00:39:18,960 --> 00:39:21,359
have for dns trackers use archetype

935
00:39:21,359 --> 00:39:23,839
in service binding pyramids also but

936
00:39:23,839 --> 00:39:25,040
none of that was used

937
00:39:25,040 --> 00:39:27,680
really most of them were pretty much

938
00:39:27,680 --> 00:39:29,359
alpn h2

939
00:39:29,359 --> 00:39:32,240
and then a target or the dot as the

940
00:39:32,240 --> 00:39:33,760
target of the domain name

941
00:39:33,760 --> 00:39:36,640
as you see the apln distribution i mean

942
00:39:36,640 --> 00:39:37,599
there are

943
00:39:37,599 --> 00:39:42,160
three i mean h3 was with some flavors

944
00:39:42,160 --> 00:39:45,040
and mostly also included h2 they were

945
00:39:45,040 --> 00:39:46,800
really i mean the other two are

946
00:39:46,800 --> 00:39:48,320
you don't see them here they were five

947
00:39:48,320 --> 00:39:50,000
or seven or something like that

948
00:39:50,000 --> 00:39:52,960
so really not that much

949
00:39:53,359 --> 00:39:57,119
um so

950
00:39:57,119 --> 00:40:00,880
now uh we go back to what can go wrong

951
00:40:00,880 --> 00:40:04,480
so this now tells me well i

952
00:40:04,480 --> 00:40:07,760
collected all these domains and uh

953
00:40:07,760 --> 00:40:10,880
i wanted to see

954
00:40:11,200 --> 00:40:14,079
where authoritative service are really

955
00:40:14,079 --> 00:40:16,720
failing now keep in mind this is a

956
00:40:16,720 --> 00:40:20,079
single kind of place where i

957
00:40:20,079 --> 00:40:21,920
tested this from so the answers might be

958
00:40:21,920 --> 00:40:23,520
different from other places

959
00:40:23,520 --> 00:40:27,359
but i initially kind of out of the

960
00:40:27,359 --> 00:40:30,000
12 million domains made a sample and i

961
00:40:30,000 --> 00:40:31,839
said well

962
00:40:31,839 --> 00:40:36,319
if you answer different for an a record

963
00:40:36,319 --> 00:40:38,720
then for an https record so you don't

964
00:40:38,720 --> 00:40:39,760
have a current answer

965
00:40:39,760 --> 00:40:42,640
then this is wrong i mean if you answer

966
00:40:42,640 --> 00:40:45,280
a server fail for a quad a and

967
00:40:45,280 --> 00:40:49,119
uh https your host i don't care

968
00:40:49,119 --> 00:40:50,880
and if you answer sort of any domain for

969
00:40:50,880 --> 00:40:53,839
all of these i also don't care

970
00:40:53,839 --> 00:40:55,520
i only care about domains where you

971
00:40:55,520 --> 00:40:57,760
answered give a different answer for

972
00:40:57,760 --> 00:41:01,520
a and quad a then for for https

973
00:41:01,520 --> 00:41:04,720
and out of these other 12 million

974
00:41:04,720 --> 00:41:05,720
domains

975
00:41:05,720 --> 00:41:09,520
168 000 answers sometimes wrong now

976
00:41:09,520 --> 00:41:10,000
sometimes

977
00:41:10,000 --> 00:41:13,440
wrong i mean in the dns the

978
00:41:13,440 --> 00:41:16,800
stuff fails so you always have a

979
00:41:16,800 --> 00:41:19,359
serve fail rate in your server that

980
00:41:19,359 --> 00:41:21,200
something goes wrong for some

981
00:41:21,200 --> 00:41:24,160
reason and some that goes good again and

982
00:41:24,160 --> 00:41:25,119
bad again

983
00:41:25,119 --> 00:41:27,440
so i want to see well what is kind of

984
00:41:27,440 --> 00:41:28,640
consistent

985
00:41:28,640 --> 00:41:32,880
and to to do that i sort of tried them

986
00:41:32,880 --> 00:41:38,400
to our resolver and actually

987
00:41:39,040 --> 00:41:42,800
made a log of the whole recursion

988
00:41:42,800 --> 00:41:46,960
process and out of these 160 hours

989
00:41:46,960 --> 00:41:48,880
only four thousand six hundred fifty you

990
00:41:48,880 --> 00:41:50,319
proved really wrong

991
00:41:50,319 --> 00:41:53,119
so there's not that much wrong remains

992
00:41:53,119 --> 00:41:54,720
and the answers that were

993
00:41:54,720 --> 00:41:56,960
coming back sometimes were funny

994
00:41:56,960 --> 00:41:58,640
although not funny well

995
00:41:58,640 --> 00:42:03,280
so there were lots of

996
00:42:03,280 --> 00:42:06,560
authoritative name servers that

997
00:42:06,560 --> 00:42:10,560
answered for nothing but hey and quarter

998
00:42:10,560 --> 00:42:12,480
and some have even some are even i mean

999
00:42:12,480 --> 00:42:14,560
some give advanced respects for ns but

1000
00:42:14,560 --> 00:42:17,200
not for soda and there was one server

1001
00:42:17,200 --> 00:42:19,280
that i just kind of

1002
00:42:19,280 --> 00:42:21,839
tried well type 65 doesn't work well

1003
00:42:21,839 --> 00:42:23,119
what about

1004
00:42:23,119 --> 00:42:26,800
type 60 oh oh that does work type 61 oh

1005
00:42:26,800 --> 00:42:29,040
no 559 yeah so

1006
00:42:29,040 --> 00:42:32,240
all this stuff happens and

1007
00:42:32,800 --> 00:42:35,200
there's also uh sometimes when you

1008
00:42:35,200 --> 00:42:37,520
answer annex domain

1009
00:42:37,520 --> 00:42:40,560
for http but not for a and quad a this

1010
00:42:40,560 --> 00:42:41,440
is very bad

1011
00:42:41,440 --> 00:42:44,480
because if you have if you follow rfc

1012
00:42:44,480 --> 00:42:45,440
8020

1013
00:42:45,440 --> 00:42:47,119
then this means well the a and quarter

1014
00:42:47,119 --> 00:42:49,280
records no longer exist

1015
00:42:49,280 --> 00:42:51,599
um there are and i guess others have it

1016
00:42:51,599 --> 00:42:54,160
also of course

1017
00:42:54,160 --> 00:42:55,920
stuff in the server that said well if

1018
00:42:55,920 --> 00:42:57,520
you answer ask for a i'll just gonna

1019
00:42:57,520 --> 00:42:58,000
make sure

1020
00:42:58,000 --> 00:42:59,839
maybe i'll ask again and see if my

1021
00:42:59,839 --> 00:43:01,280
record is there but

1022
00:43:01,280 --> 00:43:04,400
that is uh very common although not not

1023
00:43:04,400 --> 00:43:05,200
so common

1024
00:43:05,200 --> 00:43:07,920
as we sorry as the most common is

1025
00:43:07,920 --> 00:43:09,200
timeout

1026
00:43:09,200 --> 00:43:12,400
and then uh

1027
00:43:12,400 --> 00:43:13,839
the timeline doesn't matter if there's

1028
00:43:13,839 --> 00:43:16,160
an x domain at that at the real

1029
00:43:16,160 --> 00:43:19,839
a record like the a record or or at the

1030
00:43:19,839 --> 00:43:22,000
other is alex domain no arrow and the

1031
00:43:22,000 --> 00:43:23,839
oddest one is there's only one

1032
00:43:23,839 --> 00:43:26,560
i believe any domain and timeout so

1033
00:43:26,560 --> 00:43:29,760
these are the arrow conditions

1034
00:43:29,760 --> 00:43:32,880
so that brings me to the summary

1035
00:43:32,880 --> 00:43:35,119
so overall i believe the adoption of

1036
00:43:35,119 --> 00:43:37,520
https has been relatively smooth

1037
00:43:37,520 --> 00:43:38,960
they initially were problems which i

1038
00:43:38,960 --> 00:43:40,800
would expect anything

1039
00:43:40,800 --> 00:43:42,560
i mean they're currently uh is one

1040
00:43:42,560 --> 00:43:44,400
implementation and a limited feature set

1041
00:43:44,400 --> 00:43:45,200
usage

1042
00:43:45,200 --> 00:43:49,119
app on ios and macos but it is still

1043
00:43:49,119 --> 00:43:52,240
i think a success story i would say

1044
00:43:52,240 --> 00:43:55,520
and of course the devil is in the detail

1045
00:43:55,520 --> 00:43:58,240
and dns is hard

1046
00:43:58,240 --> 00:44:00,000
and to anybody out there who writes

1047
00:44:00,000 --> 00:44:01,440
authoritative servers

1048
00:44:01,440 --> 00:44:04,560
answering is always better than dropping

1049
00:44:04,560 --> 00:44:06,800
theory types other than a in qualities

1050
00:44:06,800 --> 00:44:08,000
are not attacks

1051
00:44:08,000 --> 00:44:11,119
they're regular query types and

1052
00:44:11,119 --> 00:44:12,960
answering annex domain when you just

1053
00:44:12,960 --> 00:44:14,400
don't have the data for the type is

1054
00:44:14,400 --> 00:44:15,359
wrong

1055
00:44:15,359 --> 00:44:18,000
and the last one i mean will sf cb ever

1056
00:44:18,000 --> 00:44:19,440
be used or are we gonna

1057
00:44:19,440 --> 00:44:22,000
will https take over the world and

1058
00:44:22,000 --> 00:44:22,720
that's it and

1059
00:44:22,720 --> 00:44:25,439
with that question

1060
00:44:26,880 --> 00:44:29,200
all right thank you ralph um a quick

1061
00:44:29,200 --> 00:44:30,400
reminder that

1062
00:44:30,400 --> 00:44:32,560
paul will show up to be able to rate the

1063
00:44:32,560 --> 00:44:33,920
talk

1064
00:44:33,920 --> 00:44:36,319
you can ask your question in the q a tab

1065
00:44:36,319 --> 00:44:37,920
and i will read them out or you can

1066
00:44:37,920 --> 00:44:39,440
raise your hand

1067
00:44:39,440 --> 00:44:41,680
we got a couple of questions in the q a

1068
00:44:41,680 --> 00:44:43,040
tab

1069
00:44:43,040 --> 00:44:46,480
so starting with peter alexis

1070
00:44:46,480 --> 00:44:48,000
the question is you said you have an

1071
00:44:48,000 --> 00:44:50,079
implementation does this mean

1072
00:44:50,079 --> 00:44:52,800
cash serve does the svcb https

1073
00:44:52,800 --> 00:44:54,800
additional lookup

1074
00:44:54,800 --> 00:44:58,000
absolutely so

1075
00:44:58,000 --> 00:45:00,000
the thing i mean again we're optimized

1076
00:45:00,000 --> 00:45:02,720
for speed so

1077
00:45:03,440 --> 00:45:06,079
we'll only give give we'll do the lookup

1078
00:45:06,079 --> 00:45:07,680
but if we don't have it

1079
00:45:07,680 --> 00:45:10,160
in the in the cache we'll just give back

1080
00:45:10,160 --> 00:45:11,599
the answer first and then the next

1081
00:45:11,599 --> 00:45:13,760
lookup comes we'll get back with the

1082
00:45:13,760 --> 00:45:16,880
answer in the cache yes

1083
00:45:17,520 --> 00:45:20,160
all right thank you next question hazel

1084
00:45:20,160 --> 00:45:21,200
smith

1085
00:45:21,200 --> 00:45:23,359
you mentioned that some were answering

1086
00:45:23,359 --> 00:45:25,920
nx domain for https and no error for a

1087
00:45:25,920 --> 00:45:27,200
quad a

1088
00:45:27,200 --> 00:45:29,440
were they knew where there were empty

1089
00:45:29,440 --> 00:45:30,960
non-terminal

1090
00:45:30,960 --> 00:45:32,800
meaning you name example.com returning

1091
00:45:32,800 --> 00:45:34,800
an x domain for q type https and

1092
00:45:34,800 --> 00:45:35,680
reasoning no error

1093
00:45:35,680 --> 00:45:38,800
with empty answer section for a or query

1094
00:45:38,800 --> 00:45:46,560
where record exists below that name

1095
00:45:46,560 --> 00:45:49,760
to be honest i haven't checked that

1096
00:45:49,760 --> 00:45:52,880
that might be well but yeah but

1097
00:45:52,880 --> 00:45:54,800
i haven't checked i'll i'll take a look

1098
00:45:54,800 --> 00:45:56,800
if i can get something out of the person

1099
00:45:56,800 --> 00:45:59,280
that i have

1100
00:45:59,440 --> 00:46:02,000
all right thank you and then we got a

1101
00:46:02,000 --> 00:46:03,520
couple of uh

1102
00:46:03,520 --> 00:46:07,760
ends up all right um

1103
00:46:07,760 --> 00:46:12,240
all of man you can uh mute yourself

1104
00:46:12,240 --> 00:46:14,319
hi this is paul hoffman from icann so

1105
00:46:14,319 --> 00:46:16,000
ralph thank you very much

1106
00:46:16,000 --> 00:46:19,599
um seeing real world stuff for

1107
00:46:19,599 --> 00:46:22,720
um rr types that actually haven't been

1108
00:46:22,720 --> 00:46:25,040
um you know that we don't have standards

1109
00:46:25,040 --> 00:46:26,000
for yet

1110
00:46:26,000 --> 00:46:27,920
um but but we feel like we know what

1111
00:46:27,920 --> 00:46:29,680
we're doing is really good

1112
00:46:29,680 --> 00:46:33,040
i am incredibly intrigued by

1113
00:46:33,040 --> 00:46:36,079
uh the thought that there are

1114
00:46:36,079 --> 00:46:38,560
authoritative servers out there giving

1115
00:46:38,560 --> 00:46:42,400
as you call them wrong answers um

1116
00:46:42,400 --> 00:46:45,440
and uh and i'm assuming like you did

1117
00:46:45,440 --> 00:46:47,200
that this is a wrong answer because it's

1118
00:46:47,200 --> 00:46:48,880
a new rr type

1119
00:46:48,880 --> 00:46:52,800
um separate from this

1120
00:46:52,800 --> 00:46:55,520
did did you start looking for patterns

1121
00:46:55,520 --> 00:46:56,079
like

1122
00:46:56,079 --> 00:46:59,200
was that all from one server farm

1123
00:46:59,200 --> 00:47:01,440
or did it seem things like that because

1124
00:47:01,440 --> 00:47:02,640
it seems

1125
00:47:02,640 --> 00:47:06,240
i'm hoping that it is one implementation

1126
00:47:06,240 --> 00:47:08,000
that we can then figure out which

1127
00:47:08,000 --> 00:47:09,280
implementation it is

1128
00:47:09,280 --> 00:47:12,480
and chase down the vendor as compared to

1129
00:47:12,480 --> 00:47:15,040
the uh authoritative server themselves

1130
00:47:15,040 --> 00:47:16,160
did you

1131
00:47:16,160 --> 00:47:17,920
did you run that down or were you mostly

1132
00:47:17,920 --> 00:47:19,760
focused on the good parts of this which

1133
00:47:19,760 --> 00:47:22,559
which was the https

1134
00:47:22,559 --> 00:47:26,640
well uh so

1135
00:47:26,640 --> 00:47:29,599
i have but i haven't i have the server

1136
00:47:29,599 --> 00:47:30,240
names

1137
00:47:30,240 --> 00:47:33,599
or that that are answering answering bad

1138
00:47:33,599 --> 00:47:36,559
but i didn't look at fpdns and then try

1139
00:47:36,559 --> 00:47:37,359
to figure out what

1140
00:47:37,359 --> 00:47:40,640
what kind of vendor that is

1141
00:47:41,119 --> 00:47:44,000
and i'm

1142
00:47:44,319 --> 00:47:46,640
i'm not sure maybe i can i'll have to

1143
00:47:46,640 --> 00:47:48,319
ask if i can share that data but

1144
00:47:48,319 --> 00:47:52,000
that might be something to

1145
00:47:52,000 --> 00:47:54,880
further investigate

1146
00:47:57,119 --> 00:48:00,079
all right thank you uh next up we got uh

1147
00:48:00,079 --> 00:48:00,800
ben

1148
00:48:00,800 --> 00:48:05,680
schwartz you can admit yourself then

1149
00:48:05,680 --> 00:48:09,839
hi uh so on slide 15

1150
00:48:09,839 --> 00:48:11,200
maybe that's the slide that everybody

1151
00:48:11,200 --> 00:48:12,880
was interested in

1152
00:48:12,880 --> 00:48:16,559
uh the

1153
00:48:16,559 --> 00:48:20,800
i wanted to clarify

1154
00:48:20,800 --> 00:48:23,520
are these only domains that do have a

1155
00:48:23,520 --> 00:48:25,200
and quad a records that is where you

1156
00:48:25,200 --> 00:48:27,119
didn't get a no data response

1157
00:48:27,119 --> 00:48:30,160
for a or quad a

1158
00:48:30,559 --> 00:48:33,440
so i guess but hey it'll ask i haven't

1159
00:48:33,440 --> 00:48:34,400
checked so

1160
00:48:34,400 --> 00:48:38,240
these were uh

1161
00:48:38,240 --> 00:48:41,359
um domains

1162
00:48:41,359 --> 00:48:44,800
that were asked but i didn't check if

1163
00:48:44,800 --> 00:48:46,800
they had a recording i only did the only

1164
00:48:46,800 --> 00:48:47,680
check i did

1165
00:48:47,680 --> 00:48:51,040
by to get into this pool is someone

1166
00:48:51,040 --> 00:48:52,720
asked for https

1167
00:48:52,720 --> 00:48:55,040
and the answer that i saw in our data

1168
00:48:55,040 --> 00:48:55,760
was

1169
00:48:55,760 --> 00:48:58,880
incoherent so it was either a survey or

1170
00:48:58,880 --> 00:49:01,280
or it didn't check and actually record

1171
00:49:01,280 --> 00:49:04,640
but that should be easy to check

1172
00:49:04,720 --> 00:49:08,319
okay um do you think that probably most

1173
00:49:08,319 --> 00:49:09,359
of them are not

1174
00:49:09,359 --> 00:49:13,280
no data i would think that most of them

1175
00:49:13,280 --> 00:49:15,760
are half a record or quarter record

1176
00:49:15,760 --> 00:49:18,800
but uh what was that just quickly

1177
00:49:18,800 --> 00:49:21,440
what what timeout or you know roughly

1178
00:49:21,440 --> 00:49:22,960
what timeout

1179
00:49:22,960 --> 00:49:27,040
were you using to declare timeout

1180
00:49:27,040 --> 00:49:28,880
we're using the standard cache of

1181
00:49:28,880 --> 00:49:31,200
timeout algorithm

1182
00:49:31,200 --> 00:49:35,119
and so the thing is that because

1183
00:49:35,119 --> 00:49:38,000
um keep in mind a server fail there

1184
00:49:38,000 --> 00:49:38,720
means

1185
00:49:38,720 --> 00:49:41,040
that cash surf has gone to all the

1186
00:49:41,040 --> 00:49:42,240
servers

1187
00:49:42,240 --> 00:49:45,280
because again i i did use a special

1188
00:49:45,280 --> 00:49:46,880
function in the server where you can

1189
00:49:46,880 --> 00:49:48,559
actually uh

1190
00:49:48,559 --> 00:49:50,319
trigger the recursion process and then

1191
00:49:50,319 --> 00:49:52,000
it will tell you what it does

1192
00:49:52,000 --> 00:49:54,640
exactly and it will try really to get an

1193
00:49:54,640 --> 00:49:55,440
answer

1194
00:49:55,440 --> 00:49:58,480
so having a circle there really means

1195
00:49:58,480 --> 00:50:00,400
there was no way to get knowledge so all

1196
00:50:00,400 --> 00:50:02,559
the servers were bad

1197
00:50:02,559 --> 00:50:04,880
thanks

1198
00:50:06,079 --> 00:50:08,880
all right thanks folks um i don't see

1199
00:50:08,880 --> 00:50:10,640
anybody else raising their hand or there

1200
00:50:10,640 --> 00:50:13,760
is no more question in the q a

1201
00:50:13,760 --> 00:50:16,960
so with that i would like to uh

1202
00:50:16,960 --> 00:50:19,119
thanks the farsight has been the

1203
00:50:19,119 --> 00:50:20,640
workshop sponsor

1204
00:50:20,640 --> 00:50:22,720
and we will now go for a 15 minutes

1205
00:50:22,720 --> 00:50:25,760
break we will resume the session at

1206
00:50:25,760 --> 00:50:29,200
utc sharp thanks have a refreshment and

1207
00:50:29,200 --> 00:50:41,839
see you in a bit

1208
00:50:50,950 --> 00:51:55,618
[Music]

1209
00:52:02,839 --> 00:52:05,839
do

1210
00:52:06,970 --> 00:53:00,720
[Music]

1211
00:53:00,720 --> 00:53:03,440
welcome back everybody we're now ready

1212
00:53:03,440 --> 00:53:04,960
to go for the second part of this

1213
00:53:04,960 --> 00:53:05,680
session

1214
00:53:05,680 --> 00:53:08,000
um please make yours make yourself

1215
00:53:08,000 --> 00:53:09,440
comfortable

1216
00:53:09,440 --> 00:53:11,200
and now we're going to have luke

1217
00:53:11,200 --> 00:53:13,839
hendricks and willem turuk from nl net

1218
00:53:13,839 --> 00:53:15,680
lab tell us about the xd

1219
00:53:15,680 --> 00:53:19,760
pyramint tinkering with dns and xdp

1220
00:53:19,760 --> 00:53:22,240
look all yours we can see your slides

1221
00:53:22,240 --> 00:53:23,119
thanks

1222
00:53:23,119 --> 00:53:26,400
perfect you can hear me as well yes i

1223
00:53:26,400 --> 00:53:26,800
can

1224
00:53:26,800 --> 00:53:29,359
i guess we all can perfect uh thank you

1225
00:53:29,359 --> 00:53:30,000
manoo

1226
00:53:30,000 --> 00:53:32,880
um yes so i'm luke hendricks i'm with

1227
00:53:32,880 --> 00:53:34,000
nlnet labs

1228
00:53:34,000 --> 00:53:37,559
and wilhelm and i have been

1229
00:53:37,559 --> 00:53:40,480
experimenting uh with dns and xtp

1230
00:53:40,480 --> 00:53:44,000
and in the next 20 minutes would like to

1231
00:53:44,000 --> 00:53:48,240
present some of our findings there so um

1232
00:53:48,240 --> 00:53:52,079
why xdp i'm sure many of you have heard

1233
00:53:52,079 --> 00:53:52,559
about

1234
00:53:52,559 --> 00:53:56,880
these these new fancy technologies that

1235
00:53:56,880 --> 00:54:00,480
allow you to do a lot of stuff in your

1236
00:54:00,480 --> 00:54:02,480
data plane right programmable networks

1237
00:54:02,480 --> 00:54:04,640
programmable data planes stuff like p4

1238
00:54:04,640 --> 00:54:07,520
and also xtp

1239
00:54:07,520 --> 00:54:10,000
they offer flexibility without

1240
00:54:10,000 --> 00:54:11,359
sacrificing

1241
00:54:11,359 --> 00:54:14,079
performance and that sounds very nice so

1242
00:54:14,079 --> 00:54:15,440
we thought well let's see

1243
00:54:15,440 --> 00:54:19,200
how we can use xdp in a dns context

1244
00:54:19,200 --> 00:54:21,760
and a good thing about xdp is that the

1245
00:54:21,760 --> 00:54:23,119
only thing you need

1246
00:54:23,119 --> 00:54:26,160
in order to start using it is a recent

1247
00:54:26,160 --> 00:54:27,599
linux kernel

1248
00:54:27,599 --> 00:54:30,240
so that's an easy way to start out and

1249
00:54:30,240 --> 00:54:31,359
because you

1250
00:54:31,359 --> 00:54:34,880
run xtp in your linux kernel because xtp

1251
00:54:34,880 --> 00:54:36,880
is code you write yourself and you

1252
00:54:36,880 --> 00:54:39,920
run it in kernel space

1253
00:54:39,920 --> 00:54:42,079
so you can process incoming packets in

1254
00:54:42,079 --> 00:54:44,319
kernel space

1255
00:54:44,319 --> 00:54:46,319
because you run it there you can still

1256
00:54:46,319 --> 00:54:47,680
benefit from having

1257
00:54:47,680 --> 00:54:50,720
your user space after that so

1258
00:54:50,720 --> 00:54:53,040
what that means is you don't have to

1259
00:54:53,040 --> 00:54:55,359
write xtp code that replaces

1260
00:54:55,359 --> 00:54:57,680
everything you currently do in user

1261
00:54:57,680 --> 00:54:59,440
space so you don't have to write a

1262
00:54:59,440 --> 00:55:00,799
full-fledged

1263
00:55:00,799 --> 00:55:03,280
recursive resolver or authoritative name

1264
00:55:03,280 --> 00:55:03,920
server

1265
00:55:03,920 --> 00:55:06,720
but you can do some parts in kernel

1266
00:55:06,720 --> 00:55:07,280
space

1267
00:55:07,280 --> 00:55:08,960
and still have your user space after

1268
00:55:08,960 --> 00:55:10,880
that so you can augment what you already

1269
00:55:10,880 --> 00:55:12,319
have running

1270
00:55:12,319 --> 00:55:15,599
again if you have a recent linux kernel

1271
00:55:15,599 --> 00:55:18,000
you could actually check out the codes

1272
00:55:18,000 --> 00:55:19,200
that we haven't getting

1273
00:55:19,200 --> 00:55:23,680
and start using it right away

1274
00:55:23,680 --> 00:55:25,359
we have a couple of examples in that in

1275
00:55:25,359 --> 00:55:27,119
a github repository and in this

1276
00:55:27,119 --> 00:55:28,319
presentation

1277
00:55:28,319 --> 00:55:31,760
we'll start out with how we can do rrl

1278
00:55:31,760 --> 00:55:35,200
in xdp so response rate limiting i'm

1279
00:55:35,200 --> 00:55:38,559
sure i don't have to explain this to

1280
00:55:38,559 --> 00:55:40,400
most of you but

1281
00:55:40,400 --> 00:55:43,680
just over on the same page with rrl

1282
00:55:43,680 --> 00:55:46,240
you can set a certain threshold x and

1283
00:55:46,240 --> 00:55:46,960
whenever

1284
00:55:46,960 --> 00:55:50,240
the incoming rate of queries exceeds

1285
00:55:50,240 --> 00:55:52,160
x so the number of queries from a

1286
00:55:52,160 --> 00:55:54,400
certain source ip

1287
00:55:54,400 --> 00:55:57,440
you make a decision you either

1288
00:55:57,440 --> 00:55:59,520
set a dc bit to send it back or you drop

1289
00:55:59,520 --> 00:56:01,440
the packet right

1290
00:56:01,440 --> 00:56:04,720
um it's a

1291
00:56:04,720 --> 00:56:07,359
it's a thing we all know and maybe take

1292
00:56:07,359 --> 00:56:08,400
for granted

1293
00:56:08,400 --> 00:56:10,720
uh but when we look at the slides we can

1294
00:56:10,720 --> 00:56:12,480
see some of the requirements

1295
00:56:12,480 --> 00:56:15,599
that we need for this for this

1296
00:56:15,599 --> 00:56:16,880
mitigation technique

1297
00:56:16,880 --> 00:56:18,240
uh because if you look at queries per

1298
00:56:18,240 --> 00:56:20,480
second it means we need to keep state

1299
00:56:20,480 --> 00:56:22,960
to do this calculation right if we say

1300
00:56:22,960 --> 00:56:25,040
return truncated it means we do have to

1301
00:56:25,040 --> 00:56:26,079
alter the packet

1302
00:56:26,079 --> 00:56:29,200
before we send it back uh i will see

1303
00:56:29,200 --> 00:56:30,160
that we can actually

1304
00:56:30,160 --> 00:56:33,359
do all those things with xdp

1305
00:56:33,359 --> 00:56:37,839
so to explain the other abbreviations

1306
00:56:37,839 --> 00:56:39,760
before we can explain xcp we have to

1307
00:56:39,760 --> 00:56:42,400
explain bpf or ebpf

1308
00:56:42,400 --> 00:56:44,880
most of you will know bpf from your tcp

1309
00:56:44,880 --> 00:56:46,400
done filters it was the

1310
00:56:46,400 --> 00:56:48,880
simple vm that allowed you to write

1311
00:56:48,880 --> 00:56:49,440
those

1312
00:56:49,440 --> 00:56:53,359
filters um ebpf isn't

1313
00:56:53,359 --> 00:56:56,559
well they say it's the extended vpf but

1314
00:56:56,559 --> 00:56:59,280
it's it's slightly deceiving if you ask

1315
00:56:59,280 --> 00:57:00,079
me

1316
00:57:00,079 --> 00:57:02,079
because it can do far more than just

1317
00:57:02,079 --> 00:57:03,599
filter packets

1318
00:57:03,599 --> 00:57:07,599
with ebpf you can run your own code in

1319
00:57:07,599 --> 00:57:09,280
kernel space without

1320
00:57:09,280 --> 00:57:14,000
rebooting um nxtp

1321
00:57:14,000 --> 00:57:16,559
is a hook in your network driver so we

1322
00:57:16,559 --> 00:57:17,200
can run

1323
00:57:17,200 --> 00:57:20,640
this bpf code on every incoming packet

1324
00:57:20,640 --> 00:57:22,640
and the nice thing is again it happens

1325
00:57:22,640 --> 00:57:24,160
before you hit

1326
00:57:24,160 --> 00:57:27,359
the network stack so before a socket

1327
00:57:27,359 --> 00:57:28,720
buffer is allocated

1328
00:57:28,720 --> 00:57:34,399
hence performance and dns just dns well

1329
00:57:34,480 --> 00:57:36,559
initially i put this in there as a joker

1330
00:57:36,559 --> 00:57:38,880
just dns how hard can it be

1331
00:57:38,880 --> 00:57:42,000
but in this case as we are aiming at

1332
00:57:42,000 --> 00:57:44,319
augmenting what we already have this is

1333
00:57:44,319 --> 00:57:45,040
uh

1334
00:57:45,040 --> 00:57:47,040
you can interpret this in another way

1335
00:57:47,040 --> 00:57:48,880
we're not altering the protocol here

1336
00:57:48,880 --> 00:57:51,040
right um whatever is running a user

1337
00:57:51,040 --> 00:57:52,000
space

1338
00:57:52,000 --> 00:57:55,200
expects normal dns

1339
00:57:55,200 --> 00:57:58,880
and that is what we will do will not

1340
00:57:58,880 --> 00:57:59,839
alter

1341
00:57:59,839 --> 00:58:03,839
anything on that layer so

1342
00:58:03,839 --> 00:58:06,319
writing xdp code and running it in your

1343
00:58:06,319 --> 00:58:08,799
network driver

1344
00:58:08,799 --> 00:58:10,559
how do we decide what should happen to

1345
00:58:10,559 --> 00:58:13,119
the packet well that's all based on

1346
00:58:13,119 --> 00:58:15,119
return code so what do we return from

1347
00:58:15,119 --> 00:58:17,440
our little xtp program so for reference

1348
00:58:17,440 --> 00:58:18,799
your classic step

1349
00:58:18,799 --> 00:58:21,920
packet comes in at the neck fire the

1350
00:58:21,920 --> 00:58:23,359
driver it ends up

1351
00:58:23,359 --> 00:58:25,440
in your network stack and eventually via

1352
00:58:25,440 --> 00:58:26,559
a classic

1353
00:58:26,559 --> 00:58:29,920
e-net or internet 6 socket it ends up in

1354
00:58:29,920 --> 00:58:31,440
your application

1355
00:58:31,440 --> 00:58:34,799
now with http running in your driver

1356
00:58:34,799 --> 00:58:38,880
we can have a couple options here

1357
00:58:38,880 --> 00:58:42,160
we can return xdb tx which means

1358
00:58:42,160 --> 00:58:44,240
send it out of the nic this packet came

1359
00:58:44,240 --> 00:58:45,599
in for

1360
00:58:45,599 --> 00:58:48,480
we can also say xp drop which means well

1361
00:58:48,480 --> 00:58:51,920
no surprise there just drop the spec

1362
00:58:51,920 --> 00:58:53,520
and these are two quite simple things

1363
00:58:53,520 --> 00:58:56,000
but i hope you can imagine that this

1364
00:58:56,000 --> 00:58:58,640
already allows you to do a lot of a lot

1365
00:58:58,640 --> 00:58:59,520
of

1366
00:58:59,520 --> 00:59:03,680
heavy lifting processing

1367
00:59:03,680 --> 00:59:06,559
without even touching your use of space

1368
00:59:06,559 --> 00:59:07,920
right if you have to set the trunk in

1369
00:59:07,920 --> 00:59:10,319
bits well you can do this with the

1370
00:59:10,319 --> 00:59:12,559
with the xcbtx command for example we

1371
00:59:12,559 --> 00:59:15,599
don't need anything in user space

1372
00:59:15,599 --> 00:59:18,240
another one is xdp pass which means well

1373
00:59:18,240 --> 00:59:20,079
we have processes thing in xp

1374
00:59:20,079 --> 00:59:23,760
and we decide we still need something

1375
00:59:24,000 --> 00:59:26,559
higher up in the stack and use a space

1376
00:59:26,559 --> 00:59:28,079
so maybe we alter some things in the

1377
00:59:28,079 --> 00:59:30,720
packet but then we still pass it on

1378
00:59:30,720 --> 00:59:34,480
so it can end up in in this case at nsd

1379
00:59:34,480 --> 00:59:36,960
um there is another option which we'll

1380
00:59:36,960 --> 00:59:37,760
be not

1381
00:59:37,760 --> 00:59:40,640
using which is xp redirected send it out

1382
00:59:40,640 --> 00:59:42,480
of another nic and there is a special

1383
00:59:42,480 --> 00:59:43,760
case

1384
00:59:43,760 --> 00:59:46,240
where you can use that return code to

1385
00:59:46,240 --> 00:59:48,240
send the packet to a special socket type

1386
00:59:48,240 --> 00:59:49,920
but to use that socket type you will

1387
00:59:49,920 --> 00:59:50,960
need to alter

1388
00:59:50,960 --> 00:59:54,079
what is running in user space and you

1389
00:59:54,079 --> 00:59:55,920
might have seen this in a previous

1390
00:59:55,920 --> 00:59:58,960
org presentation

1391
00:59:58,960 --> 01:00:02,640
and not so one more time what we're

1392
01:00:02,640 --> 01:00:03,680
after is we're

1393
01:00:03,680 --> 01:00:06,960
trying to augment dns software um we're

1394
01:00:06,960 --> 01:00:08,799
not altering the software itself

1395
01:00:08,799 --> 01:00:12,640
we're adding functionality

1396
01:00:12,640 --> 01:00:16,319
just before a packet would traverse

1397
01:00:16,319 --> 01:00:19,839
upwards into the network stack we're not

1398
01:00:19,839 --> 01:00:22,160
changing running software in user space

1399
01:00:22,160 --> 01:00:24,400
we're not re-implementing

1400
01:00:24,400 --> 01:00:29,040
an entire resolver or name server in xdp

1401
01:00:29,040 --> 01:00:33,440
so how do you go about this your your

1402
01:00:33,440 --> 01:00:36,400
workflow so to say to get to a running

1403
01:00:36,400 --> 01:00:38,240
xtp program is you start out

1404
01:00:38,240 --> 01:00:41,280
writing c code and you compile this

1405
01:00:41,280 --> 01:00:44,960
with clang target bpf and um

1406
01:00:44,960 --> 01:00:46,880
then the fun starts because once you try

1407
01:00:46,880 --> 01:00:48,400
to load it this thing called

1408
01:00:48,400 --> 01:00:50,880
the verifier kicks in you're trying to

1409
01:00:50,880 --> 01:00:53,359
run arbitrary code in your kernel

1410
01:00:53,359 --> 01:00:55,599
and we of course cannot have any kernel

1411
01:00:55,599 --> 01:00:57,359
panics there right on every incoming

1412
01:00:57,359 --> 01:00:58,480
package well i

1413
01:00:58,480 --> 01:01:01,599
will only have it once i guess but um so

1414
01:01:01,599 --> 01:01:03,680
this verifier checks does your code

1415
01:01:03,680 --> 01:01:06,400
terminate is it not too complex those

1416
01:01:06,400 --> 01:01:07,520
kind of things and if it

1417
01:01:07,520 --> 01:01:10,799
has no objections it will load the code

1418
01:01:10,799 --> 01:01:13,839
on your interface and you're done it's

1419
01:01:13,839 --> 01:01:14,880
running

1420
01:01:14,880 --> 01:01:16,799
every incoming packet is now processed

1421
01:01:16,799 --> 01:01:18,640
by your code

1422
01:01:18,640 --> 01:01:21,040
normal probe no reboot you don't have to

1423
01:01:21,040 --> 01:01:23,359
reconfigure anything in user space

1424
01:01:23,359 --> 01:01:26,000
that's it that's that's how easy this

1425
01:01:26,000 --> 01:01:27,200
could be

1426
01:01:27,200 --> 01:01:30,480
um if you want to interact with that

1427
01:01:30,480 --> 01:01:31,680
running code you will need something

1428
01:01:31,680 --> 01:01:34,400
called bpflaps and we'll look into that

1429
01:01:34,400 --> 01:01:37,359
in a couple of slides so specifically

1430
01:01:37,359 --> 01:01:38,640
for response rate limiting

1431
01:01:38,640 --> 01:01:41,040
we're not going through every line of

1432
01:01:41,040 --> 01:01:42,640
codes that's on github

1433
01:01:42,640 --> 01:01:45,440
but the concepts that we need we need to

1434
01:01:45,440 --> 01:01:46,559
parse

1435
01:01:46,559 --> 01:01:48,880
uh the ethernet frame right that's

1436
01:01:48,880 --> 01:01:50,000
something that the

1437
01:01:50,000 --> 01:01:52,000
network stack would do for you but now

1438
01:01:52,000 --> 01:01:53,359
we have to do it ourselves so we have to

1439
01:01:53,359 --> 01:01:53,839
make sure

1440
01:01:53,839 --> 01:01:57,359
are we dealing with uh udp insight ip

1441
01:01:57,359 --> 01:01:59,920
inside ethernet and is it actually meant

1442
01:01:59,920 --> 01:02:01,920
to go to port 53

1443
01:02:01,920 --> 01:02:04,880
well okay this might be dns then check

1444
01:02:04,880 --> 01:02:07,920
if it's correctly formatted dns in there

1445
01:02:07,920 --> 01:02:11,200
and once we know that we have to do two

1446
01:02:11,200 --> 01:02:11,599
things

1447
01:02:11,599 --> 01:02:13,680
we trick the query rate because we want

1448
01:02:13,680 --> 01:02:15,440
to do response rate limiting and based

1449
01:02:15,440 --> 01:02:16,880
on that we either decide to

1450
01:02:16,880 --> 01:02:20,079
pass it upwards or maybe drop it or send

1451
01:02:20,079 --> 01:02:22,880
it drunk it bit and send it back

1452
01:02:22,880 --> 01:02:27,039
so bpf maps are specific data structures

1453
01:02:27,039 --> 01:02:29,440
that require specific helper functions

1454
01:02:29,440 --> 01:02:31,359
to read and write to them and if you

1455
01:02:31,359 --> 01:02:33,520
look in the header files there's

1456
01:02:33,520 --> 01:02:35,680
a couple of types that you can use we

1457
01:02:35,680 --> 01:02:37,680
are using a hashmap here

1458
01:02:37,680 --> 01:02:40,160
so that basically means that we keep

1459
01:02:40,160 --> 01:02:41,520
track

1460
01:02:41,520 --> 01:02:43,440
of the source of the addresses that we

1461
01:02:43,440 --> 01:02:47,440
see for the for the incoming queries

1462
01:02:47,440 --> 01:02:49,280
and we map those to what we call a

1463
01:02:49,280 --> 01:02:51,520
bucket and there we keep track of

1464
01:02:51,520 --> 01:02:55,440
a start time a a window

1465
01:02:55,440 --> 01:02:56,960
and the number of packets so we can

1466
01:02:56,960 --> 01:02:59,599
calculate the rate so with maps we can

1467
01:02:59,599 --> 01:03:00,160
have this

1468
01:03:00,160 --> 01:03:01,839
inter packet state and for those of you

1469
01:03:01,839 --> 01:03:03,680
who have worked with p4 keeping state

1470
01:03:03,680 --> 01:03:04,240
might be

1471
01:03:04,240 --> 01:03:06,880
quite cumbersome but with xcp it's

1472
01:03:06,880 --> 01:03:07,599
actually quite

1473
01:03:07,599 --> 01:03:10,319
doable another thing you can do with

1474
01:03:10,319 --> 01:03:11,119
maps

1475
01:03:11,119 --> 01:03:14,960
is this configuration from user space

1476
01:03:14,960 --> 01:03:17,680
for that we're using a different map

1477
01:03:17,680 --> 01:03:19,599
type here because what we want to do

1478
01:03:19,599 --> 01:03:23,200
in this example is exclude some prefixes

1479
01:03:23,200 --> 01:03:26,319
so perhaps you have paying customers

1480
01:03:26,319 --> 01:03:27,839
that you don't want to

1481
01:03:27,839 --> 01:03:30,400
subject to rate limiting you can store

1482
01:03:30,400 --> 01:03:31,839
those in a map

1483
01:03:31,839 --> 01:03:34,880
um find a prefix that's the

1484
01:03:34,880 --> 01:03:37,359
the key here in the type lpm3 longest

1485
01:03:37,359 --> 01:03:39,440
prefix in h3

1486
01:03:39,440 --> 01:03:42,319
and um as a value we keep a counter of

1487
01:03:42,319 --> 01:03:43,760
how often we have hit

1488
01:03:43,760 --> 01:03:47,359
these things now you have loaded your

1489
01:03:47,359 --> 01:03:49,680
code onto the interface so response rate

1490
01:03:49,680 --> 01:03:51,440
limiting is active there

1491
01:03:51,440 --> 01:03:53,119
and now you decide you want to add

1492
01:03:53,119 --> 01:03:55,200
something another prefix

1493
01:03:55,200 --> 01:03:56,960
you can do this you don't have to reboot

1494
01:03:56,960 --> 01:03:58,079
you don't have to recompile or

1495
01:03:58,079 --> 01:03:58,799
reconfigure

1496
01:03:58,799 --> 01:04:01,520
you can do this either using bpf tool

1497
01:04:01,520 --> 01:04:03,680
it's a generic tool to populate these

1498
01:04:03,680 --> 01:04:04,400
maps

1499
01:04:04,400 --> 01:04:06,400
or you can use your own custom user

1500
01:04:06,400 --> 01:04:08,480
space tool

1501
01:04:08,480 --> 01:04:11,599
and now that we know all this

1502
01:04:11,599 --> 01:04:13,760
i will hand it over to villain which

1503
01:04:13,760 --> 01:04:15,280
will actually demo this

1504
01:04:15,280 --> 01:04:19,200
to you that's right

1505
01:04:19,200 --> 01:04:21,440
i will stop sharing with him and then i

1506
01:04:21,440 --> 01:04:22,319
hope

1507
01:04:22,319 --> 01:04:27,839
i can start sharing my terminal

1508
01:04:28,079 --> 01:04:32,000
perfect so yeah so i started

1509
01:04:32,000 --> 01:04:35,599
a virtual machine

1510
01:04:35,680 --> 01:04:39,359
which is running a name server

1511
01:04:39,359 --> 01:04:42,880
let's set this address oh

1512
01:04:42,880 --> 01:04:46,880
let's see that's working

1513
01:04:46,880 --> 01:04:50,720
and suppose this machine is your name

1514
01:04:50,720 --> 01:04:54,799
server and it is being misused by

1515
01:04:54,799 --> 01:04:57,520
a amplification of reflection

1516
01:04:57,520 --> 01:05:00,079
amplification attack

1517
01:05:00,079 --> 01:05:03,119
and it has quite a bit of load

1518
01:05:03,119 --> 01:05:04,880
and you think well i saw this

1519
01:05:04,880 --> 01:05:06,400
presentation

1520
01:05:06,400 --> 01:05:10,319
at the dns org of luke willem

1521
01:05:10,319 --> 01:05:14,000
i would like to try this xdb

1522
01:05:14,000 --> 01:05:16,480
program to see if i can reduce the load

1523
01:05:16,480 --> 01:05:18,000
on my main server

1524
01:05:18,000 --> 01:05:21,119
by dealing with those packets

1525
01:05:21,119 --> 01:05:24,480
right after they arrive

1526
01:05:24,480 --> 01:05:27,839
and so i'm doing this completely

1527
01:05:27,839 --> 01:05:32,640
from scratch to illustrate

1528
01:05:32,640 --> 01:05:36,480
that you did not have to

1529
01:05:36,480 --> 01:05:39,920
anticipate doing this you know you you

1530
01:05:39,920 --> 01:05:43,200
install uh regardless of what have what

1531
01:05:43,200 --> 01:05:46,160
software you are winning or without even

1532
01:05:46,160 --> 01:05:48,319
anticipating that you ever wanted to do

1533
01:05:48,319 --> 01:05:50,640
this you can

1534
01:05:50,640 --> 01:05:53,359
start using xcp to deal with the denial

1535
01:05:53,359 --> 01:05:54,880
of search attack

1536
01:05:54,880 --> 01:05:58,400
so this gets repository we reference to

1537
01:05:58,400 --> 01:05:58,880
this

1538
01:05:58,880 --> 01:06:02,559
in a blog post that i will refer to

1539
01:06:02,559 --> 01:06:05,760
at the end of this presentation there's

1540
01:06:05,760 --> 01:06:08,960
a first blog post which

1541
01:06:08,960 --> 01:06:11,280
deals with answering dns packets from

1542
01:06:11,280 --> 01:06:12,720
xtp which

1543
01:06:12,720 --> 01:06:15,839
it has as the example dns says no

1544
01:06:15,839 --> 01:06:18,720
the second blog posts deals with

1545
01:06:18,720 --> 01:06:19,839
augmenting

1546
01:06:19,839 --> 01:06:22,880
existing dns server and it's

1547
01:06:22,880 --> 01:06:28,480
the rrl example but because

1548
01:06:29,039 --> 01:06:33,839
i will use

1549
01:06:36,160 --> 01:06:39,280
a user space program to

1550
01:06:39,280 --> 01:06:42,240
add prefixes that should not be subject

1551
01:06:42,240 --> 01:06:45,520
to response rate limiting i also have to

1552
01:06:45,520 --> 01:06:49,039
check out this sub module and compile

1553
01:06:49,039 --> 01:06:49,520
this

1554
01:06:49,520 --> 01:06:52,640
library which is not available in a

1555
01:06:52,640 --> 01:06:55,920
package unfortunately but we are doing

1556
01:06:55,920 --> 01:06:56,799
it from

1557
01:06:56,799 --> 01:07:01,440
scratch so this is part of it

1558
01:07:01,440 --> 01:07:04,160
then let's go to the response great

1559
01:07:04,160 --> 01:07:06,319
limiting example we actually

1560
01:07:06,319 --> 01:07:08,720
have three versions of response rate

1561
01:07:08,720 --> 01:07:10,559
limiting that we refer to

1562
01:07:10,559 --> 01:07:13,680
in our blog post but round

1563
01:07:13,680 --> 01:07:17,039
three is the fully fledged one that has

1564
01:07:17,039 --> 01:07:18,880
other features that you would normally

1565
01:07:18,880 --> 01:07:22,160
see in your regular dns software

1566
01:07:22,160 --> 01:07:25,520
so i will open the c file

1567
01:07:25,520 --> 01:07:30,480
and you can see the the parameters

1568
01:07:30,480 --> 01:07:33,039
you have to configure them here i have

1569
01:07:33,039 --> 01:07:35,039
to adapt the number of cpus

1570
01:07:35,039 --> 01:07:37,760
and this virtual machine has only one

1571
01:07:37,760 --> 01:07:40,839
the prefix length you can configure that

1572
01:07:40,839 --> 01:07:44,640
the size of the hash table

1573
01:07:44,640 --> 01:07:47,760
and how you want to respond

1574
01:07:47,760 --> 01:07:50,160
to the response very limiting and for

1575
01:07:50,160 --> 01:07:52,559
the demo sake i'm going to

1576
01:07:52,559 --> 01:07:57,280
respond with the tc bit for

1577
01:07:57,280 --> 01:08:00,880
every response very limited

1578
01:08:00,880 --> 01:08:04,400
answer and i will also downsize the

1579
01:08:04,400 --> 01:08:05,920
response rate limiting

1580
01:08:05,920 --> 01:08:10,319
to three queries per second

1581
01:08:10,319 --> 01:08:13,760
so let's make this now

1582
01:08:13,760 --> 01:08:17,839
i have to create the vip maps

1583
01:08:17,839 --> 01:08:20,399
the very important prefixes maps this is

1584
01:08:20,399 --> 01:08:21,040
the

1585
01:08:21,040 --> 01:08:23,600
way how we configure the prefixes that

1586
01:08:23,600 --> 01:08:25,600
will not be subject to response rate

1587
01:08:25,600 --> 01:08:26,799
limiting

1588
01:08:26,799 --> 01:08:31,600
now i can load the xdp program

1589
01:08:31,600 --> 01:08:34,640
it's actually reloaded

1590
01:08:34,640 --> 01:08:38,719
you can see the xdp generic

1591
01:08:38,719 --> 01:08:42,799
is on the interface

1592
01:08:42,960 --> 01:08:46,238
now let's do this query again that i

1593
01:08:46,238 --> 01:08:48,799
just did

1594
01:08:49,839 --> 01:08:53,198
and also i have to specify the ignore

1595
01:08:53,198 --> 01:08:54,479
flag so that

1596
01:08:54,479 --> 01:08:57,040
dick will not return over tcp when it

1597
01:08:57,040 --> 01:08:59,120
receives a packet

1598
01:08:59,120 --> 01:09:02,559
with the tc bit set

1599
01:09:03,920 --> 01:09:06,960
okay gentlemen sorry to interrupt there

1600
01:09:06,960 --> 01:09:08,799
are five minutes remaining before q

1601
01:09:08,799 --> 01:09:12,000
a yeah

1602
01:09:15,759 --> 01:09:19,600
so i sent a query twice a second

1603
01:09:19,600 --> 01:09:24,080
which should not be a problem because

1604
01:09:24,080 --> 01:09:25,839
we have set the response rate limiting

1605
01:09:25,839 --> 01:09:28,880
to three queries per second

1606
01:09:28,880 --> 01:09:31,839
so if i now

1607
01:09:32,238 --> 01:09:35,839
sleep a bit less we see that

1608
01:09:35,839 --> 01:09:40,080
a lot of responses now have the tc bit

1609
01:09:40,080 --> 01:09:43,759
set those will not have the address

1610
01:09:43,759 --> 01:09:47,279
returned and only three responses per

1611
01:09:47,279 --> 01:09:48,080
second

1612
01:09:48,080 --> 01:09:52,799
get answered so the user space program

1613
01:09:52,799 --> 01:09:57,199
is this one okay let me first check

1614
01:09:57,199 --> 01:10:01,199
and uh what my ip address is

1615
01:10:01,199 --> 01:10:06,000
okay this one

1616
01:10:07,440 --> 01:10:11,199
so i start the previous again

1617
01:10:11,199 --> 01:10:16,239
and then i use this tool to add this

1618
01:10:16,239 --> 01:10:18,239
prefix

1619
01:10:18,239 --> 01:10:21,280
and you see that now all the

1620
01:10:21,280 --> 01:10:24,239
responses are returned without the

1621
01:10:24,239 --> 01:10:27,199
truncated bit

1622
01:10:27,679 --> 01:10:31,840
okay it's the demo

1623
01:10:33,679 --> 01:10:38,080
now i'm going to share another screen

1624
01:10:41,760 --> 01:10:45,120
so what have we learned we

1625
01:10:45,120 --> 01:10:46,900
can leverage xtp to

1626
01:10:46,900 --> 01:10:48,400
[Music]

1627
01:10:48,400 --> 01:10:52,080
augment dns services you know

1628
01:10:52,080 --> 01:10:53,920
regardless of the software that was

1629
01:10:53,920 --> 01:10:55,600
running the servers to deal with

1630
01:10:55,600 --> 01:10:59,120
incoming packets so stuff like

1631
01:10:59,120 --> 01:11:01,920
control access control or dealing with

1632
01:11:01,920 --> 01:11:02,480
the

1633
01:11:02,480 --> 01:11:05,440
search attacks you can decide to deploy

1634
01:11:05,440 --> 01:11:06,560
it at any time

1635
01:11:06,560 --> 01:11:08,320
you did not have to anticipate it

1636
01:11:08,320 --> 01:11:10,239
beforehand

1637
01:11:10,239 --> 01:11:12,560
bpf maps can be used to maintain some

1638
01:11:12,560 --> 01:11:14,159
internal state like for

1639
01:11:14,159 --> 01:11:16,400
weight calculations but can also be used

1640
01:11:16,400 --> 01:11:17,440
to communicate

1641
01:11:17,440 --> 01:11:19,199
and configure the module from a new

1642
01:11:19,199 --> 01:11:22,080
space at runtime

1643
01:11:22,080 --> 01:11:24,159
so we've been adding prefixes of

1644
01:11:24,159 --> 01:11:26,480
well-known customers that should not be

1645
01:11:26,480 --> 01:11:28,239
subject to response rate limiting

1646
01:11:28,239 --> 01:11:29,360
manually

1647
01:11:29,360 --> 01:11:31,440
but there's also a mechanism to do this

1648
01:11:31,440 --> 01:11:32,400
automatically

1649
01:11:32,400 --> 01:11:34,400
within the dns protocol and this is

1650
01:11:34,400 --> 01:11:37,360
called dns cookies

1651
01:11:37,360 --> 01:11:40,320
so dns cookies work together if you have

1652
01:11:40,320 --> 01:11:41,520
a valid cookie

1653
01:11:41,520 --> 01:11:43,280
you're not subject to response very

1654
01:11:43,280 --> 01:11:45,679
limiting so if you do response rate

1655
01:11:45,679 --> 01:11:47,360
limiting in xdp

1656
01:11:47,360 --> 01:11:51,280
you also have to do cookies in xtp

1657
01:11:51,280 --> 01:11:54,320
and this is perfectly possible there's

1658
01:11:54,320 --> 01:11:55,840
actually a mechanism

1659
01:11:55,840 --> 01:11:59,040
in xdp to chain existing

1660
01:11:59,040 --> 01:12:02,400
xtp programs so we can

1661
01:12:02,400 --> 01:12:06,719
we have we will be writing about this in

1662
01:12:06,719 --> 01:12:09,760
the next blog post how to verify cookies

1663
01:12:09,760 --> 01:12:12,159
and if they are filled past the packet

1664
01:12:12,159 --> 01:12:12,960
on

1665
01:12:12,960 --> 01:12:17,360
to the dns service

1666
01:12:17,360 --> 01:12:20,640
and if not send it to the response

1667
01:12:20,640 --> 01:12:23,120
weight limiting program but that's just

1668
01:12:23,120 --> 01:12:24,480
for verification

1669
01:12:24,480 --> 01:12:27,840
you can also with bpf

1670
01:12:27,840 --> 01:12:29,760
[Music]

1671
01:12:29,760 --> 01:12:34,239
do the creation of dns cookies so

1672
01:12:34,239 --> 01:12:37,360
change or respond on incoming packets

1673
01:12:37,360 --> 01:12:40,239
and change outgoing packets by running

1674
01:12:40,239 --> 01:12:40,800
two

1675
01:12:40,800 --> 01:12:44,239
vpf programs one on the tc layer and

1676
01:12:44,239 --> 01:12:47,280
one on the xp layer but we will also

1677
01:12:47,280 --> 01:12:49,199
talk about this in the

1678
01:12:49,199 --> 01:12:53,280
blog post so a lot is possible

1679
01:12:53,280 --> 01:12:56,640
xdp and ebpf are a very good fit for

1680
01:12:56,640 --> 01:12:57,520
plain old

1681
01:12:57,520 --> 01:13:01,920
up-based dns less suitable for tcp

1682
01:13:01,920 --> 01:13:04,880
based dns and probably impossible for

1683
01:13:04,880 --> 01:13:07,120
tottenham

1684
01:13:07,120 --> 01:13:10,239
and we think using xtp to augment

1685
01:13:10,239 --> 01:13:12,719
an existing dns service is an exciting

1686
01:13:12,719 --> 01:13:13,440
new ide

1687
01:13:13,440 --> 01:13:16,239
and a great new tool in the dns operates

1688
01:13:16,239 --> 01:13:17,600
toolbox

1689
01:13:17,600 --> 01:13:21,679
we have lots of new ids or ids for

1690
01:13:21,679 --> 01:13:25,520
to do with xtp and dns to

1691
01:13:25,520 --> 01:13:28,800
have more tools in this toolbox

1692
01:13:28,800 --> 01:13:32,239
example examples of some of those ids

1693
01:13:32,239 --> 01:13:36,480
and i think it's now five minutes

1694
01:13:36,480 --> 01:13:41,040
uh until for you to ask questions

1695
01:13:41,040 --> 01:13:42,800
yeah thank you thank you william and

1696
01:13:42,800 --> 01:13:44,239
thank you luke um

1697
01:13:44,239 --> 01:13:47,679
yeah this is the time now to for people

1698
01:13:47,679 --> 01:13:48,480
to be able to

1699
01:13:48,480 --> 01:13:51,840
uh um answer the poll and also

1700
01:13:51,840 --> 01:13:54,560
ask the question through the q a tab or

1701
01:13:54,560 --> 01:14:01,840
raise the end

1702
01:14:02,239 --> 01:14:04,159
for lack of question at the moment i had

1703
01:14:04,159 --> 01:14:05,920
one actually so i think

1704
01:14:05,920 --> 01:14:08,480
i'm pretty lucky where i work at where a

1705
01:14:08,480 --> 01:14:10,960
lot of the heavy lifting has been done

1706
01:14:10,960 --> 01:14:14,400
but if any resources or any pro tips

1707
01:14:14,400 --> 01:14:16,719
that you will recommend for people that

1708
01:14:16,719 --> 01:14:20,480
start playing around with xdp

1709
01:14:21,840 --> 01:14:24,400
that you you actually don't need that

1710
01:14:24,400 --> 01:14:25,440
many tools

1711
01:14:25,440 --> 01:14:28,440
if you it's just a clan compiler and

1712
01:14:28,440 --> 01:14:29,840
ipv2

1713
01:14:29,840 --> 01:14:33,199
and ppf2 which already

1714
01:14:33,199 --> 01:14:36,879
gets you quite far

1715
01:14:38,159 --> 01:14:39,679
all right yeah i think i was also maybe

1716
01:14:39,679 --> 01:14:41,760
referring about certain resources

1717
01:14:41,760 --> 01:14:43,600
documentation that helps you bootstrap

1718
01:14:43,600 --> 01:14:45,280
to you to distract you

1719
01:14:45,280 --> 01:14:46,650
okay yeah

1720
01:14:46,650 --> 01:14:48,800
[Music]

1721
01:14:48,800 --> 01:14:50,880
well you could have a look at our blog

1722
01:14:50,880 --> 01:14:53,440
posts of course

1723
01:14:53,440 --> 01:14:56,880
and also there's xdp tutorial

1724
01:14:56,880 --> 01:15:00,320
which we have been using quite a bit to

1725
01:15:00,320 --> 01:15:04,080
get started with this stuff

1726
01:15:04,080 --> 01:15:06,560
cool um all right we got a couple of

1727
01:15:06,560 --> 01:15:07,840
questions coming up so

1728
01:15:07,840 --> 01:15:10,719
let's let's wish you that uh jess uh

1729
01:15:10,719 --> 01:15:13,040
jeff westhead as a question which is

1730
01:15:13,040 --> 01:15:15,040
could you talk about performance a bit

1731
01:15:15,040 --> 01:15:18,159
how many pps can this drop and keep the

1732
01:15:18,159 --> 01:15:18,640
server

1733
01:15:18,640 --> 01:15:22,560
the server live for unfiltered sources

1734
01:15:23,600 --> 01:15:27,040
how many qps can it drop so

1735
01:15:27,040 --> 01:15:30,400
i don't know so we will uh start

1736
01:15:30,400 --> 01:15:33,440
experimenting with hardware of loading

1737
01:15:33,440 --> 01:15:36,640
of xcp programs and then

1738
01:15:36,640 --> 01:15:39,760
it is supposed to be line speed but it

1739
01:15:39,760 --> 01:15:40,159
will

1740
01:15:40,159 --> 01:15:42,560
at least i can tell you for sure that it

1741
01:15:42,560 --> 01:15:44,159
will be

1742
01:15:44,159 --> 01:15:46,800
faster than when running from a

1743
01:15:46,800 --> 01:15:48,560
userspace

1744
01:15:48,560 --> 01:15:51,360
dns service

1745
01:15:51,600 --> 01:15:54,400
yeah i will add to that um as you said

1746
01:15:54,400 --> 01:15:56,000
in the hardware mode essentially

1747
01:15:56,000 --> 01:15:57,679
all the processing will be done without

1748
01:15:57,679 --> 01:15:59,840
even touching the kernel

1749
01:15:59,840 --> 01:16:01,760
right so yeah you can you can get line

1750
01:16:01,760 --> 01:16:02,880
right

1751
01:16:02,880 --> 01:16:06,159
yeah uh next question which is more

1752
01:16:06,159 --> 01:16:10,480
of a comment from wiki vicky risk

1753
01:16:10,480 --> 01:16:12,080
i don't have a question but i love this

1754
01:16:12,080 --> 01:16:13,840
and i want to give willem an award for

1755
01:16:13,840 --> 01:16:16,560
his live demo

1756
01:16:16,880 --> 01:16:20,400
thank you yeah also i want

1757
01:16:20,400 --> 01:16:23,760
also to mention that we have this xdp

1758
01:16:23,760 --> 01:16:26,800
and bpf uh channel created in the

1759
01:16:26,800 --> 01:16:30,640
matter most so it might be uh

1760
01:16:30,640 --> 01:16:34,000
interesting for people

1761
01:16:34,000 --> 01:16:36,880
if they have suggestions or ideas to

1762
01:16:36,880 --> 01:16:37,440
post it

1763
01:16:37,440 --> 01:16:42,159
in the channel yeah good idea

1764
01:16:42,320 --> 01:16:46,159
all right we got a last question

1765
01:16:46,159 --> 01:16:49,600
um that's um peter alexis is going to

1766
01:16:49,600 --> 01:16:52,800
ask peter you can mute yourself

1767
01:16:52,800 --> 01:16:54,800
all right so it's actually not another

1768
01:16:54,800 --> 01:16:56,080
question but a comment so

1769
01:16:56,080 --> 01:16:59,120
we have ebpf and dns dist as well

1770
01:16:59,120 --> 01:17:01,199
and we have indeed seen that if you put

1771
01:17:01,199 --> 01:17:02,960
bpf in the kernel you can just drop

1772
01:17:02,960 --> 01:17:04,159
packets at line rate

1773
01:17:04,159 --> 01:17:07,280
which is amazing so this is definitely

1774
01:17:07,280 --> 01:17:08,880
faster than just doing it in the

1775
01:17:08,880 --> 01:17:11,520
user space

1776
01:17:12,640 --> 01:17:15,920
all right perfect thanks uh

1777
01:17:15,920 --> 01:17:18,400
luke and william and uh and uh people

1778
01:17:18,400 --> 01:17:20,080
for asking questions uh

1779
01:17:20,080 --> 01:17:23,600
we are right on time to go on for the um

1780
01:17:23,600 --> 01:17:26,880
for the next uh talk let me

1781
01:17:26,880 --> 01:17:29,440
[Music]

1782
01:17:29,440 --> 01:17:31,840
all right so next up is going to be

1783
01:17:31,840 --> 01:17:33,840
robert mortimer that is going to

1784
01:17:33,840 --> 01:17:36,400
talk about the state of uh dns security

1785
01:17:36,400 --> 01:17:37,600
record

1786
01:17:37,600 --> 01:17:40,080
roberts

1787
01:17:41,360 --> 01:17:43,520
and we've currently stopped my video so

1788
01:17:43,520 --> 01:17:45,760
that might be interesting

1789
01:17:45,760 --> 01:17:47,280
all right yeah we don't see it at the

1790
01:17:47,280 --> 01:17:49,120
moment um

1791
01:17:49,120 --> 01:17:52,480
matt maybe oh

1792
01:17:52,480 --> 01:17:55,199
we can see it now

1793
01:17:57,120 --> 01:18:00,159
cool perfect

1794
01:18:04,320 --> 01:18:06,560
so yeah i'm walking with nominee i'm

1795
01:18:06,560 --> 01:18:08,000
going to talk about the state of dns

1796
01:18:08,000 --> 01:18:09,199
security records

1797
01:18:09,199 --> 01:18:13,839
um thank you

1798
01:18:17,760 --> 01:18:20,719
and we can see you we can hear you

1799
01:18:20,719 --> 01:18:23,040
brilliant

1800
01:18:23,040 --> 01:18:28,159
um so this started as a personal project

1801
01:18:28,159 --> 01:18:31,280
a few years back when i was deploying

1802
01:18:31,280 --> 01:18:32,560
spf and dmarc

1803
01:18:32,560 --> 01:18:35,520
records and thought it'd be fun to start

1804
01:18:35,520 --> 01:18:36,560
checking

1805
01:18:36,560 --> 01:18:38,480
what the vendors i was dealing with were

1806
01:18:38,480 --> 01:18:40,480
doing so

1807
01:18:40,480 --> 01:18:43,600
being lazy i wrote a tool to

1808
01:18:43,600 --> 01:18:46,080
just look things up at random as i was

1809
01:18:46,080 --> 01:18:47,120
being curious

1810
01:18:47,120 --> 01:18:50,480
and having listened at all i started

1811
01:18:50,480 --> 01:18:52,719
checking more records

1812
01:18:52,719 --> 01:18:55,040
checking the things that i recommended

1813
01:18:55,040 --> 01:18:58,320
best practice by the likes of ncsc

1814
01:18:58,320 --> 01:19:00,480
to see what was out there and of course

1815
01:19:00,480 --> 01:19:02,320
once you've got a tool and a set of

1816
01:19:02,320 --> 01:19:04,640
record types to check the obvious thing

1817
01:19:04,640 --> 01:19:05,679
to do

1818
01:19:05,679 --> 01:19:08,239
is start recording the data and make a

1819
01:19:08,239 --> 01:19:09,679
graph

1820
01:19:09,679 --> 01:19:12,960
and see how things change over time um

1821
01:19:12,960 --> 01:19:15,280
so the first time i did that was back in

1822
01:19:15,280 --> 01:19:17,280
2017

1823
01:19:17,280 --> 01:19:19,840
but the problem was what was your data

1824
01:19:19,840 --> 01:19:21,520
source i started with

1825
01:19:21,520 --> 01:19:24,960
the alexa top 100 the list of icon

1826
01:19:24,960 --> 01:19:26,400
accredited registrars

1827
01:19:26,400 --> 01:19:29,040
the top 100 registrars there's a public

1828
01:19:29,040 --> 01:19:31,280
list of security 500 vendors

1829
01:19:31,280 --> 01:19:33,520
which were all good public sources and

1830
01:19:33,520 --> 01:19:35,120
they had a bunch of stuff

1831
01:19:35,120 --> 01:19:37,280
that i was using so my vendors dns

1832
01:19:37,280 --> 01:19:38,480
providers

1833
01:19:38,480 --> 01:19:41,040
anything else i thought was interesting

1834
01:19:41,040 --> 01:19:41,840
but

1835
01:19:41,840 --> 01:19:44,719
that's not ideal i didn't want to use

1836
01:19:44,719 --> 01:19:45,760
private data

1837
01:19:45,760 --> 01:19:47,440
and there's not that much good

1838
01:19:47,440 --> 01:19:48,960
publicness out there

1839
01:19:48,960 --> 01:19:51,600
so i dumped the vendors and dns

1840
01:19:51,600 --> 01:19:52,320
providers

1841
01:19:52,320 --> 01:19:54,880
and discovered tranco which is a great

1842
01:19:54,880 --> 01:19:55,520
list for

1843
01:19:55,520 --> 01:19:57,840
this sort of research started looking at

1844
01:19:57,840 --> 01:19:58,960
the oh providers

1845
01:19:58,960 --> 01:20:02,159
because they're interesting and as i'd

1846
01:20:02,159 --> 01:20:03,120
automated this

1847
01:20:03,120 --> 01:20:05,440
i then started checking all of the

1848
01:20:05,440 --> 01:20:07,520
infrastructure domains for those lists

1849
01:20:07,520 --> 01:20:08,239
so

1850
01:20:08,239 --> 01:20:10,880
anything providing mx services dns

1851
01:20:10,880 --> 01:20:12,560
services

1852
01:20:12,560 --> 01:20:15,840
anything like that so starting to be

1853
01:20:15,840 --> 01:20:18,880
a decent list and all stuff that

1854
01:20:18,880 --> 01:20:22,239
people can use i'm probably next year

1855
01:20:22,239 --> 01:20:22,639
going to

1856
01:20:22,639 --> 01:20:24,719
drop alexa because it's just too painful

1857
01:20:24,719 --> 01:20:25,840
to scrape

1858
01:20:25,840 --> 01:20:28,000
and tranco's a lot easier but i kept it

1859
01:20:28,000 --> 01:20:30,840
in for the moment for

1860
01:20:30,840 --> 01:20:32,719
consistency so

1861
01:20:32,719 --> 01:20:35,360
what was the method i did a lot of dns

1862
01:20:35,360 --> 01:20:36,320
records

1863
01:20:36,320 --> 01:20:39,520
lookups um really simple big list of

1864
01:20:39,520 --> 01:20:40,400
domains

1865
01:20:40,400 --> 01:20:42,880
look up all of the records and shove

1866
01:20:42,880 --> 01:20:44,320
them into a log file

1867
01:20:44,320 --> 01:20:47,920
that i can then pass and see how

1868
01:20:47,920 --> 01:20:50,800
those records compared to the best

1869
01:20:50,800 --> 01:20:52,080
practice document

1870
01:20:52,080 --> 01:20:56,159
was the caa and spf and so forth

1871
01:20:56,159 --> 01:20:58,400
deakin records were tricky because i

1872
01:20:58,400 --> 01:20:59,520
didn't know

1873
01:20:59,520 --> 01:21:02,960
what the identifier was

1874
01:21:02,960 --> 01:21:06,239
but a lot of the time if there wasn't a

1875
01:21:06,239 --> 01:21:08,239
wild card record

1876
01:21:08,239 --> 01:21:11,280
you can infer if the deacon records

1877
01:21:11,280 --> 01:21:11,920
there

1878
01:21:11,920 --> 01:21:14,080
based on whether you get a no error or

1879
01:21:14,080 --> 01:21:15,440
an nx domain

1880
01:21:15,440 --> 01:21:18,639
it's not perfect but it seems to

1881
01:21:18,639 --> 01:21:20,560
validate reasonably

1882
01:21:20,560 --> 01:21:24,320
and it's the best option i've got um

1883
01:21:24,320 --> 01:21:26,639
ideally i want to check registry

1884
01:21:26,639 --> 01:21:27,920
settings see if the

1885
01:21:27,920 --> 01:21:30,560
registrar lock to a registry not but who

1886
01:21:30,560 --> 01:21:32,800
is api access cost money

1887
01:21:32,800 --> 01:21:36,320
and this was a personal project

1888
01:21:36,320 --> 01:21:42,080
so that's the background

1889
01:21:42,080 --> 01:21:45,040
this is what the results look like and

1890
01:21:45,040 --> 01:21:46,480
apart from spf

1891
01:21:46,480 --> 01:21:50,080
really very few of these record types

1892
01:21:50,080 --> 01:21:53,040
are wildly are widely deployed in the

1893
01:21:53,040 --> 01:21:54,159
wild

1894
01:21:54,159 --> 01:21:57,760
and it's been getting somewhat worse

1895
01:21:57,760 --> 01:22:00,159
but that might be due to my sampling

1896
01:22:00,159 --> 01:22:01,679
which has obviously changed over the

1897
01:22:01,679 --> 01:22:02,719
years

1898
01:22:02,719 --> 01:22:05,440
and the number of icann registrars from

1899
01:22:05,440 --> 01:22:07,040
my list for instance

1900
01:22:07,040 --> 01:22:10,320
collapsed massively between 2017

1901
01:22:10,320 --> 01:22:14,800
and 2019 um not sure why

1902
01:22:14,800 --> 01:22:18,239
but it changes the sample size well

1903
01:22:18,239 --> 01:22:20,719
as you can see apart from dmarc

1904
01:22:20,719 --> 01:22:21,679
everything

1905
01:22:21,679 --> 01:22:26,000
in terms of deployment has gone downhill

1906
01:22:26,000 --> 01:22:29,040
um and

1907
01:22:29,040 --> 01:22:31,280
not most of these aren't new apart from

1908
01:22:31,280 --> 01:22:33,920
caa which we can let off

1909
01:22:33,920 --> 01:22:38,239
um these stats compare reasonably well

1910
01:22:38,239 --> 01:22:41,199
with a similar report that csc do on the

1911
01:22:41,199 --> 01:22:43,199
forbes 2000

1912
01:22:43,199 --> 01:22:46,639
and the dns sec is similar to what stats

1913
01:22:46,639 --> 01:22:49,920
dns.com are reporting um

1914
01:22:49,920 --> 01:22:53,520
across all the tlds so i've got some

1915
01:22:53,520 --> 01:22:54,719
confidence in this

1916
01:22:54,719 --> 01:22:57,520
um obviously a bigger data set would be

1917
01:22:57,520 --> 01:22:58,159
better

1918
01:22:58,159 --> 01:23:00,480
but

1919
01:23:01,600 --> 01:23:03,440
so to look at how it breaks down i'm

1920
01:23:03,440 --> 01:23:05,199
sorry this graph is

1921
01:23:05,199 --> 01:23:09,520
tiny but this is the various

1922
01:23:09,520 --> 01:23:12,560
lists i was looking at so alexa

1923
01:23:12,560 --> 01:23:16,320
doh i can top 100 registers

1924
01:23:16,320 --> 01:23:20,320
and so forth um

1925
01:23:20,320 --> 01:23:22,560
isn't security related but it's just

1926
01:23:22,560 --> 01:23:23,440
interesting

1927
01:23:23,440 --> 01:23:26,719
um most commonly

1928
01:23:26,719 --> 01:23:29,040
used amongst the oh providers which

1929
01:23:29,040 --> 01:23:30,800
isn't surprising that tends to be people

1930
01:23:30,800 --> 01:23:31,760
that are looking at

1931
01:23:31,760 --> 01:23:34,239
doing some quite cool stuff they're also

1932
01:23:34,239 --> 01:23:35,040
way ahead

1933
01:23:35,040 --> 01:23:38,159
in terms of dns sec which is good given

1934
01:23:38,159 --> 01:23:39,120
the service

1935
01:23:39,120 --> 01:23:42,000
they're providing and likewise the cia

1936
01:23:42,000 --> 01:23:44,000
uptake in doh

1937
01:23:44,000 --> 01:23:46,639
is really quite reassuring though very

1938
01:23:46,639 --> 01:23:47,360
low

1939
01:23:47,360 --> 01:23:50,560
given it's a https dependent service

1940
01:23:50,560 --> 01:23:52,480
and very new i'd hope that would be

1941
01:23:52,480 --> 01:23:53,920
better

1942
01:23:53,920 --> 01:23:57,440
um mail stuff is quite healthy

1943
01:23:57,440 --> 01:24:01,280
but for most of

1944
01:24:01,280 --> 01:24:04,719
the icann and the registrars it's oddly

1945
01:24:04,719 --> 01:24:05,120
low

1946
01:24:05,120 --> 01:24:08,880
given that so many dns services are

1947
01:24:08,880 --> 01:24:11,280
modified and managed via email

1948
01:24:11,280 --> 01:24:12,480
confirmations

1949
01:24:12,480 --> 01:24:14,239
you know you transfer domain it's an

1950
01:24:14,239 --> 01:24:16,080
email and

1951
01:24:16,080 --> 01:24:18,239
most of those haven't got spf haven't

1952
01:24:18,239 --> 01:24:20,880
got dkim haven't got dmarc

1953
01:24:20,880 --> 01:24:24,239
which is i think a big

1954
01:24:24,239 --> 01:24:30,159
a big gap in that security model um

1955
01:24:30,159 --> 01:24:32,799
it worries me

1956
01:24:33,840 --> 01:24:36,880
um but some new stuff and this i think

1957
01:24:36,880 --> 01:24:40,400
ben and ralph may find interesting um

1958
01:24:40,400 --> 01:24:43,679
https svcb this year

1959
01:24:43,679 --> 01:24:46,719
has got more uptake than dane

1960
01:24:46,719 --> 01:24:48,800
even though dane's been around for quite

1961
01:24:48,800 --> 01:24:50,159
a bit longer

1962
01:24:50,159 --> 01:24:53,120
um this from what i looked up seemed to

1963
01:24:53,120 --> 01:24:55,280
be mainly due to cloudflare

1964
01:24:55,280 --> 01:24:58,000
um most of the people with these record

1965
01:24:58,000 --> 01:24:58,719
published

1966
01:24:58,719 --> 01:25:02,960
were on cal flair um playing remains

1967
01:25:02,960 --> 01:25:05,679
reasonably painful to apply especially

1968
01:25:05,679 --> 01:25:07,040
if you're doing rapid

1969
01:25:07,040 --> 01:25:09,719
certificate cycling such as via let's

1970
01:25:09,719 --> 01:25:12,159
encrypt um

1971
01:25:12,159 --> 01:25:14,639
and in slightly pressing news a couple

1972
01:25:14,639 --> 01:25:15,920
of icann

1973
01:25:15,920 --> 01:25:19,760
registrars and one of the alexa top 50

1974
01:25:19,760 --> 01:25:21,920
has an apex c name record even though as

1975
01:25:21,920 --> 01:25:23,520
we heard earlier

1976
01:25:23,520 --> 01:25:27,840
that doesn't work

1977
01:25:27,920 --> 01:25:32,320
um this does indicate to me at least

1978
01:25:32,320 --> 01:25:35,280
that the uptake of this sort of security

1979
01:25:35,280 --> 01:25:36,080
record

1980
01:25:36,080 --> 01:25:38,320
is really very dependent upon vendor

1981
01:25:38,320 --> 01:25:39,600
support and that

1982
01:25:39,600 --> 01:25:43,120
domain registrars can have a huge impact

1983
01:25:43,120 --> 01:25:44,960
in the uptake by just changing default

1984
01:25:44,960 --> 01:25:46,639
behavior

1985
01:25:46,639 --> 01:25:51,600
so a few conclusions

1986
01:25:51,600 --> 01:25:52,880
you as you probably gathered i think

1987
01:25:52,880 --> 01:25:55,040
yeah uptake's poor

1988
01:25:55,040 --> 01:25:56,320
and i think this is partly because

1989
01:25:56,320 --> 01:25:57,760
there's not many best practices

1990
01:25:57,760 --> 01:25:58,719
documents

1991
01:25:58,719 --> 01:26:00,239
and there aren't many tools to make it

1992
01:26:00,239 --> 01:26:03,520
easy to be um to adopt these records

1993
01:26:03,520 --> 01:26:05,920
there aren't many cheap dqm reporting

1994
01:26:05,920 --> 01:26:07,360
services

1995
01:26:07,360 --> 01:26:10,480
um changing the default contents of his

1996
01:26:10,480 --> 01:26:12,239
own when you register a domain

1997
01:26:12,239 --> 01:26:14,000
if that was dns second enabled by

1998
01:26:14,000 --> 01:26:15,840
default negative spf

1999
01:26:15,840 --> 01:26:18,159
and that sort of thing will make a huge

2000
01:26:18,159 --> 01:26:19,280
difference

2001
01:26:19,280 --> 01:26:22,480
um so there's a lot as registrars

2002
01:26:22,480 --> 01:26:25,600
can be done and there needs to be more

2003
01:26:25,600 --> 01:26:26,239
research

2004
01:26:26,239 --> 01:26:28,639
my personal project's okay but it'd be

2005
01:26:28,639 --> 01:26:29,520
really nice

2006
01:26:29,520 --> 01:26:31,760
if um there are other people looking at

2007
01:26:31,760 --> 01:26:32,719
this

2008
01:26:32,719 --> 01:26:35,520
and people who've got data sets that are

2009
01:26:35,520 --> 01:26:37,360
large and apparently a lot of the cases

2010
01:26:37,360 --> 01:26:39,120
obviously they can't make them public

2011
01:26:39,120 --> 01:26:42,159
having something like this um to improve

2012
01:26:42,159 --> 01:26:43,760
the coverage

2013
01:26:43,760 --> 01:26:47,040
um people reassure me dns sec

2014
01:26:47,040 --> 01:26:48,560
about to take off and a lot of these

2015
01:26:48,560 --> 01:26:50,719
things will improve next year

2016
01:26:50,719 --> 01:26:53,679
but having heard that for many years

2017
01:26:53,679 --> 01:26:55,120
about ipv6

2018
01:26:55,120 --> 01:26:59,180
i'm not holding my breath

2019
01:26:59,180 --> 01:27:00,800
[Music]

2020
01:27:00,800 --> 01:27:04,480
so a very quick sort of overview

2021
01:27:04,480 --> 01:27:06,000
of where we are with a lot of these dns

2022
01:27:06,000 --> 01:27:08,239
set records i forgot to create any

2023
01:27:08,239 --> 01:27:09,760
question slide

2024
01:27:09,760 --> 01:27:13,520
so any questions

2025
01:27:16,880 --> 01:27:20,480
thank you robert um there is no question

2026
01:27:20,480 --> 01:27:23,520
from the room yet at this moment um i

2027
01:27:23,520 --> 01:27:24,080
have

2028
01:27:24,080 --> 01:27:27,600
one uh when you look at the

2029
01:27:27,600 --> 01:27:31,280
top 50 or so um

2030
01:27:31,280 --> 01:27:33,679
are over time are they the same like the

2031
01:27:33,679 --> 01:27:36,480
one in 2017 2019

2032
01:27:36,480 --> 01:27:38,960
so when we see regression in in terms of

2033
01:27:38,960 --> 01:27:41,199
uh of adoption is this

2034
01:27:41,199 --> 01:27:43,679
from the same set of domains or the the

2035
01:27:43,679 --> 01:27:45,440
top 50s are just different over

2036
01:27:45,440 --> 01:27:49,120
here so the very top part of the top 50

2037
01:27:49,120 --> 01:27:50,320
tends to be static

2038
01:27:50,320 --> 01:27:53,840
as you go further down there's more

2039
01:27:53,840 --> 01:27:57,840
change and i did think about that

2040
01:27:57,840 --> 01:28:00,320
i do have all of the data sets going

2041
01:28:00,320 --> 01:28:01,760
back year on year

2042
01:28:01,760 --> 01:28:05,360
so i can do a direct comparison but

2043
01:28:05,360 --> 01:28:08,560
some of those cease to exist and

2044
01:28:08,560 --> 01:28:11,760
in terms of impact for

2045
01:28:11,760 --> 01:28:14,480
the internet you know if something's

2046
01:28:14,480 --> 01:28:16,239
just become irrelevant

2047
01:28:16,239 --> 01:28:19,040
it's great to have adopted something but

2048
01:28:19,040 --> 01:28:20,080
it doesn't have

2049
01:28:20,080 --> 01:28:23,920
that much impact um so looking long-term

2050
01:28:23,920 --> 01:28:25,840
i thought it more useful to keep

2051
01:28:25,840 --> 01:28:28,400
what's the top 50 doing rather than a

2052
01:28:28,400 --> 01:28:29,600
specific set

2053
01:28:29,600 --> 01:28:32,560
of domains

2054
01:28:33,280 --> 01:28:35,360
cool thanks i i guess i forgot to say

2055
01:28:35,360 --> 01:28:36,800
something quickly before asking the

2056
01:28:36,800 --> 01:28:37,520
question

2057
01:28:37,520 --> 01:28:39,600
uh was that there were going to be the

2058
01:28:39,600 --> 01:28:41,440
poll and you can raise your hand or ask

2059
01:28:41,440 --> 01:28:42,000
the question

2060
01:28:42,000 --> 01:28:45,600
on the q a tab um i see through all the

2061
01:28:45,600 --> 01:28:46,480
mechanisms

2062
01:28:46,480 --> 01:28:51,919
that eric wants to raise his hand

2063
01:28:52,320 --> 01:28:55,760
let me reckon try

2064
01:28:55,760 --> 01:28:59,040
can you mute yourself yes

2065
01:28:59,040 --> 01:29:02,480
thank you i uh raising my hand

2066
01:29:02,480 --> 01:29:04,960
seems to be much harder than that yeah

2067
01:29:04,960 --> 01:29:06,159
thank you

2068
01:29:06,159 --> 01:29:09,199
a great presentation and we actually do

2069
01:29:09,199 --> 01:29:09,600
this

2070
01:29:09,600 --> 01:29:13,120
kind of measurement for dot s e zone

2071
01:29:13,120 --> 01:29:16,400
and uh there's a lot of there's

2072
01:29:16,400 --> 01:29:17,840
a few other zones that are actually

2073
01:29:17,840 --> 01:29:18,960
public that you could do this

2074
01:29:18,960 --> 01:29:21,040
measurement on for you know

2075
01:29:21,040 --> 01:29:24,080
larger data set and i know that there is

2076
01:29:24,080 --> 01:29:24,880
a

2077
01:29:24,880 --> 01:29:27,040
group there was a presentation at the

2078
01:29:27,040 --> 01:29:28,000
last imc

2079
01:29:28,000 --> 01:29:30,320
about this the group at the university

2080
01:29:30,320 --> 01:29:31,280
of grenoble said

2081
01:29:31,280 --> 01:29:33,199
that does this and i would really like

2082
01:29:33,199 --> 01:29:35,120
to work with you on this

2083
01:29:35,120 --> 01:29:37,120
on the data sets because i think that is

2084
01:29:37,120 --> 01:29:38,800
uh really interesting and

2085
01:29:38,800 --> 01:29:40,880
it could help us to improve security in

2086
01:29:40,880 --> 01:29:42,560
the dns a lot

2087
01:29:42,560 --> 01:29:44,159
that would be brilliant if anybody wants

2088
01:29:44,159 --> 01:29:45,679
to reach out to me

2089
01:29:45,679 --> 01:29:48,800
to share data sets and make this a wide

2090
01:29:48,800 --> 01:29:50,080
arranging survey

2091
01:29:50,080 --> 01:29:51,440
or see what i've been doing in more

2092
01:29:51,440 --> 01:29:53,920
detail be really interested to do that

2093
01:29:53,920 --> 01:29:55,280
because i think the bigger coverage we

2094
01:29:55,280 --> 01:29:56,800
get the better the data is the more

2095
01:29:56,800 --> 01:30:07,840
useful it will be

2096
01:30:13,920 --> 01:30:16,080
oh sorry i'm muting myself um so

2097
01:30:16,080 --> 01:30:17,920
sebastian you you can you cannot mute

2098
01:30:17,920 --> 01:30:21,840
yourself now

2099
01:30:23,920 --> 01:30:27,280
sebastian did you have a question

2100
01:30:27,600 --> 01:30:31,040
alright sebastian questro

2101
01:30:31,360 --> 01:30:34,560
all right i suppose this was not italian

2102
01:30:34,560 --> 01:30:36,159
then

2103
01:30:36,159 --> 01:30:39,280
okay um there is no more question in the

2104
01:30:39,280 --> 01:30:39,760
queue

2105
01:30:39,760 --> 01:30:43,199
so i guess we

2106
01:30:43,199 --> 01:30:46,719
are going to move on to a

2107
01:30:46,719 --> 01:30:50,159
question from pallavi

2108
01:30:50,159 --> 01:30:52,400
another angle to this research could be

2109
01:30:52,400 --> 01:30:54,560
to see data to determine

2110
01:30:54,560 --> 01:30:58,000
how many queries are made for dmarc dkm

2111
01:30:58,000 --> 01:31:00,840
spf by email provider and get the next

2112
01:31:00,840 --> 01:31:03,840
domain

2113
01:31:03,920 --> 01:31:07,040
so could you repeat that another angle

2114
01:31:07,040 --> 01:31:09,600
to this research could be to see data to

2115
01:31:09,600 --> 01:31:10,400
determine

2116
01:31:10,400 --> 01:31:13,440
how many queries are made for dmarc

2117
01:31:13,440 --> 01:31:17,760
dkm or spf by email providers and get a

2118
01:31:17,760 --> 01:31:19,199
next domain

2119
01:31:19,199 --> 01:31:22,639
yeah um certainly and again if anyone's

2120
01:31:22,639 --> 01:31:24,719
got such a data set that they can share

2121
01:31:24,719 --> 01:31:26,719
or want to see what i'm doing type their

2122
01:31:26,719 --> 01:31:28,800
own data set that would be great

2123
01:31:28,800 --> 01:31:32,480
i don't have access to such a data set

2124
01:31:36,719 --> 01:31:39,520
all right um sebastian is having um

2125
01:31:39,520 --> 01:31:40,800
issue with his mic

2126
01:31:40,800 --> 01:31:44,480
so i guess can you

2127
01:31:44,480 --> 01:31:47,760
i can hear you now okay perfect um

2128
01:31:47,760 --> 01:31:51,040
excellent uh hi robert and

2129
01:31:51,040 --> 01:31:54,560
wolverine and everyone um

2130
01:31:54,560 --> 01:31:56,320
so all right what's uh i think was

2131
01:31:56,320 --> 01:31:58,800
talking about the opening dell data set

2132
01:31:58,800 --> 01:32:02,639
from the dutch

2133
01:32:02,639 --> 01:32:05,199
uh i'll also like to point out we we're

2134
01:32:05,199 --> 01:32:07,520
doing this for the dot and said zone so

2135
01:32:07,520 --> 01:32:08,159
we have

2136
01:32:08,159 --> 01:32:11,920
statistics for the mark and caa and spf

2137
01:32:11,920 --> 01:32:14,159
and we have an open data set available

2138
01:32:14,159 --> 01:32:16,400
if you want to go and and check sort of

2139
01:32:16,400 --> 01:32:18,159
the adoption numbers in

2140
01:32:18,159 --> 01:32:19,920
dorian said if you want to compare for a

2141
01:32:19,920 --> 01:32:21,360
future

2142
01:32:21,360 --> 01:32:24,639
uh presentation robot just in case

2143
01:32:24,639 --> 01:32:29,120
you are interested exactly

2144
01:32:29,920 --> 01:32:32,159
all right cool well we are getting close

2145
01:32:32,159 --> 01:32:34,400
to um to the end of the q a

2146
01:32:34,400 --> 01:32:37,040
time period so i guess without further

2147
01:32:37,040 --> 01:32:38,159
ado we're going to

2148
01:32:38,159 --> 01:32:41,600
move on to our next talk and last talk

2149
01:32:41,600 --> 01:32:42,639
of the session

2150
01:32:42,639 --> 01:32:44,880
which is uh paul offman is going to talk

2151
01:32:44,880 --> 01:32:45,760
about

2152
01:32:45,760 --> 01:32:48,960
a not so popular way of sampling domain

2153
01:32:48,960 --> 01:32:50,320
names

2154
01:32:50,320 --> 01:32:53,760
paul hi it's all yours

2155
01:32:53,760 --> 01:32:57,600
let me do this screen sharing

2156
01:32:57,600 --> 01:32:58,110
and

2157
01:32:58,110 --> 01:33:01,688
[Music]

2158
01:33:02,080 --> 01:33:04,400
i hate this part of trying to find the

2159
01:33:04,400 --> 01:33:06,840
right one

2160
01:33:06,840 --> 01:33:08,560
um we go

2161
01:33:08,560 --> 01:33:11,920
and put it at the bottom of the list

2162
01:33:12,800 --> 01:33:15,840
all right we can see a screen now okay

2163
01:33:15,840 --> 01:33:19,199
um let me just get rid of that okay so

2164
01:33:19,199 --> 01:33:20,880
uh thank you robert because you were

2165
01:33:20,880 --> 01:33:22,880
talking about um

2166
01:33:22,880 --> 01:33:24,960
data sets and we are about to talk about

2167
01:33:24,960 --> 01:33:26,320
another data set

2168
01:33:26,320 --> 01:33:29,199
um robert mostly covered like as you

2169
01:33:29,199 --> 01:33:30,639
said you know alexa's a problem and

2170
01:33:30,639 --> 01:33:31,360
stuff

2171
01:33:31,360 --> 01:33:34,159
and he was uh covering popular ones this

2172
01:33:34,159 --> 01:33:34,800
is a talk

2173
01:33:34,800 --> 01:33:38,960
about a data set that are not so popular

2174
01:33:38,960 --> 01:33:44,159
so oops and why

2175
01:33:44,639 --> 01:33:50,080
excuse me

2176
01:33:50,080 --> 01:33:52,960
there we go so my motivation for

2177
01:33:52,960 --> 01:33:54,560
creating this data set

2178
01:33:54,560 --> 01:33:58,320
was that you know like in robert's case

2179
01:33:58,320 --> 01:33:58,719
and in

2180
01:33:58,719 --> 01:34:00,480
other cases like sebastian had brought

2181
01:34:00,480 --> 01:34:02,400
up you want to know something about the

2182
01:34:02,400 --> 01:34:04,239
authoritative servers are they doing

2183
01:34:04,239 --> 01:34:05,199
certain things

2184
01:34:05,199 --> 01:34:06,639
you know do they have certain records

2185
01:34:06,639 --> 01:34:08,239
and such like that

2186
01:34:08,239 --> 01:34:11,440
so you know the internet has become the

2187
01:34:11,440 --> 01:34:12,080
web

2188
01:34:12,080 --> 01:34:14,880
the web plus dns of course um but

2189
01:34:14,880 --> 01:34:17,199
because the internet has become the web

2190
01:34:17,199 --> 01:34:19,520
you want most people are looking for

2191
01:34:19,520 --> 01:34:20,960
names of web servers

2192
01:34:20,960 --> 01:34:24,400
um that's not always the case because in

2193
01:34:24,400 --> 01:34:26,320
fact there's not really a good reason

2194
01:34:26,320 --> 01:34:28,480
for example to have a dmarc record

2195
01:34:28,480 --> 01:34:31,440
for a name that is only a web server you

2196
01:34:31,440 --> 01:34:34,040
don't need a dmarc record for

2197
01:34:34,040 --> 01:34:35,760
www.example.com

2198
01:34:35,760 --> 01:34:38,400
um but if what you're trying to do is

2199
01:34:38,400 --> 01:34:40,400
collect domain names for web servers

2200
01:34:40,400 --> 01:34:41,520
that's pretty easy

2201
01:34:41,520 --> 01:34:42,960
that's the way we do a lot of research

2202
01:34:42,960 --> 01:34:44,560
that's how robert is

2203
01:34:44,560 --> 01:34:48,159
and a lot of people um

2204
01:34:48,960 --> 01:34:51,119
one of the problems that we always have

2205
01:34:51,119 --> 01:34:53,040
though is that when people

2206
01:34:53,040 --> 01:34:55,920
read our research is they expect this to

2207
01:34:55,920 --> 01:34:57,760
be true what we're saying is to be true

2208
01:34:57,760 --> 01:35:00,480
for typical domain names um

2209
01:35:00,480 --> 01:35:04,080
and the way that we often are doing it

2210
01:35:04,080 --> 01:35:05,679
like what robert did was the most

2211
01:35:05,679 --> 01:35:07,600
popular websites plus a couple of others

2212
01:35:07,600 --> 01:35:08,639
that he found

2213
01:35:08,639 --> 01:35:12,080
or extracts from zone files for gtlds or

2214
01:35:12,080 --> 01:35:15,040
as sebastian brought up or for even for

2215
01:35:15,040 --> 01:35:16,320
cctlds i'm sorry

2216
01:35:16,320 --> 01:35:20,239
and ulrich did as well so um

2217
01:35:20,239 --> 01:35:23,280
these are not typical though because for

2218
01:35:23,280 --> 01:35:25,600
example these zone files are full

2219
01:35:25,600 --> 01:35:29,040
of records that have are just used for

2220
01:35:29,040 --> 01:35:31,840
parking that they aren't actually active

2221
01:35:31,840 --> 01:35:34,159
um and the most popular websites well

2222
01:35:34,159 --> 01:35:35,600
there's a zillion

2223
01:35:35,600 --> 01:35:37,199
websites that we care about that aren't

2224
01:35:37,199 --> 01:35:39,679
popular that would be more typical

2225
01:35:39,679 --> 01:35:41,840
um and the other way that people have

2226
01:35:41,840 --> 01:35:43,360
done some of this is to get dumps from

2227
01:35:43,360 --> 01:35:44,320
passive dns

2228
01:35:44,320 --> 01:35:46,800
uh collection systems but those are sort

2229
01:35:46,800 --> 01:35:49,119
of difficult to use as well because

2230
01:35:49,119 --> 01:35:51,280
they're very geographically based even

2231
01:35:51,280 --> 01:35:53,840
if it's a wide spread

2232
01:35:53,840 --> 01:35:57,119
of uh passive dns collectors it still

2233
01:35:57,119 --> 01:36:00,719
has large pockets of geography in it

2234
01:36:00,719 --> 01:36:04,320
so my um

2235
01:36:04,320 --> 01:36:07,600
my motivation here was in fact let's

2236
01:36:07,600 --> 01:36:08,800
look for something

2237
01:36:08,800 --> 01:36:12,239
let's look for a base that would have um

2238
01:36:12,239 --> 01:36:15,920
a lot of urls in it that aren't so

2239
01:36:15,920 --> 01:36:16,639
popular

2240
01:36:16,639 --> 01:36:18,960
and it turns out that wikipedia pages uh

2241
01:36:18,960 --> 01:36:20,159
for those of you who

2242
01:36:20,159 --> 01:36:21,920
spend your evenings or even an

2243
01:36:21,920 --> 01:36:23,280
occasional evening trolling through

2244
01:36:23,280 --> 01:36:24,400
wikipedia

2245
01:36:24,400 --> 01:36:26,800
you can see that that as you go down the

2246
01:36:26,800 --> 01:36:28,719
wikipedia rabbit hole you can end up on

2247
01:36:28,719 --> 01:36:29,600
a page

2248
01:36:29,600 --> 01:36:31,840
that lists all of the governments of the

2249
01:36:31,840 --> 01:36:33,040
small cities

2250
01:36:33,040 --> 01:36:35,040
in a particular region so that's a

2251
01:36:35,040 --> 01:36:37,280
zillion websites that you probably

2252
01:36:37,280 --> 01:36:39,600
would not see in any of the previous

2253
01:36:39,600 --> 01:36:40,560
that we listed

2254
01:36:40,560 --> 01:36:42,719
colleges and universities all have a

2255
01:36:42,719 --> 01:36:44,639
website that generally has been

2256
01:36:44,639 --> 01:36:46,719
you know put on some wikipedia page

2257
01:36:46,719 --> 01:36:50,159
somewhere uh obscure sports teams um

2258
01:36:50,159 --> 01:36:52,800
for me every sports team is obscure but

2259
01:36:52,800 --> 01:36:53,679
um

2260
01:36:53,679 --> 01:36:56,239
things like this uh music and movie

2261
01:36:56,239 --> 01:36:57,040
studios

2262
01:36:57,040 --> 01:36:59,600
uh personal sites for academics you know

2263
01:36:59,600 --> 01:37:01,119
that have their own name in them such

2264
01:37:01,119 --> 01:37:01,840
like that

2265
01:37:01,840 --> 01:37:04,719
so wikipedia is a wonderful source of

2266
01:37:04,719 --> 01:37:05,199
this

2267
01:37:05,199 --> 01:37:07,280
the other nice thing is that wikipedia

2268
01:37:07,280 --> 01:37:09,119
has worldwide coverage

2269
01:37:09,119 --> 01:37:12,400
there are wikipedias in basically all of

2270
01:37:12,400 --> 01:37:14,080
the languages of the world

2271
01:37:14,080 --> 01:37:17,119
the languages often map onto geographies

2272
01:37:17,119 --> 01:37:19,760
but onto wide geography so for example

2273
01:37:19,760 --> 01:37:22,320
the english wikipedia which many people

2274
01:37:22,320 --> 01:37:22,880
use

2275
01:37:22,880 --> 01:37:24,800
covers much more than just the united

2276
01:37:24,800 --> 01:37:25,920
states and britain

2277
01:37:25,920 --> 01:37:28,480
um the spanish wikipedia covers much

2278
01:37:28,480 --> 01:37:30,000
more than just spain

2279
01:37:30,000 --> 01:37:31,840
and some of the other countries so

2280
01:37:31,840 --> 01:37:33,040
wikipedia is

2281
01:37:33,040 --> 01:37:35,360
wonderful for this that if you look at

2282
01:37:35,360 --> 01:37:36,080
across

2283
01:37:36,080 --> 01:37:38,960
all of the wikipedias you get pretty

2284
01:37:38,960 --> 01:37:41,760
much worldwide coverage

2285
01:37:41,760 --> 01:37:44,480
so here's how i did it i retrieved the

2286
01:37:44,480 --> 01:37:44,960
uh

2287
01:37:44,960 --> 01:37:47,199
i'm sorry i didn't mention one thing

2288
01:37:47,199 --> 01:37:48,000
wikipedia

2289
01:37:48,000 --> 01:37:50,880
actually makes it easy you don't have to

2290
01:37:50,880 --> 01:37:52,960
scrape wikipedia pages

2291
01:37:52,960 --> 01:37:55,199
they have a site for backing up

2292
01:37:55,199 --> 01:37:56,400
wikipedia

2293
01:37:56,400 --> 01:37:58,159
and that's not just all of the pages

2294
01:37:58,159 --> 01:37:59,760
they actually extract

2295
01:37:59,760 --> 01:38:02,080
some things and one of those is all of

2296
01:38:02,080 --> 01:38:03,440
these external links

2297
01:38:03,440 --> 01:38:05,360
so there's a database for external links

2298
01:38:05,360 --> 01:38:07,199
for each language

2299
01:38:07,199 --> 01:38:09,600
on the mirror of the main wikipedia site

2300
01:38:09,600 --> 01:38:11,520
so i grab all of those

2301
01:38:11,520 --> 01:38:14,080
i go through those it's a mysql dump

2302
01:38:14,080 --> 01:38:16,080
which is painful to work with but oh

2303
01:38:16,080 --> 01:38:16,800
well

2304
01:38:16,800 --> 01:38:20,000
um i extract all of the external links

2305
01:38:20,000 --> 01:38:21,920
i clean up the list of the links and

2306
01:38:21,920 --> 01:38:23,920
limit them to http and https

2307
01:38:23,920 --> 01:38:26,560
as it turns out that's like 98 of the

2308
01:38:26,560 --> 01:38:28,480
links on wikipedia pages

2309
01:38:28,480 --> 01:38:31,920
but you find gopher urls you

2310
01:38:31,920 --> 01:38:34,960
find um other things uh

2311
01:38:34,960 --> 01:38:38,080
so i i pulled out those and then so for

2312
01:38:38,080 --> 01:38:40,000
each of those remaining urls i stripped

2313
01:38:40,000 --> 01:38:40,960
off the scheme

2314
01:38:40,960 --> 01:38:42,560
because i don't really care for what i'm

2315
01:38:42,560 --> 01:38:44,639
doing whether it whether

2316
01:38:44,639 --> 01:38:47,760
that link started with http or https and

2317
01:38:47,760 --> 01:38:49,760
i strip off everything after the domain

2318
01:38:49,760 --> 01:38:50,480
name

2319
01:38:50,480 --> 01:38:53,280
um because i'm not looking at these as

2320
01:38:53,280 --> 01:38:55,920
urls i'm looking at them for domain name

2321
01:38:55,920 --> 01:38:59,199
this is dns or um

2322
01:38:59,199 --> 01:39:00,560
and of course there's a lot of

2323
01:39:00,560 --> 01:39:02,719
repetition there um that's fine

2324
01:39:02,719 --> 01:39:06,239
i i you know just ran it through unique

2325
01:39:06,239 --> 01:39:08,080
and then so here's the data set that i

2326
01:39:08,080 --> 01:39:10,639
ended up with so there were about 750

2327
01:39:10,639 --> 01:39:11,840
databases

2328
01:39:11,840 --> 01:39:13,520
that i use from january 1st this year

2329
01:39:13,520 --> 01:39:15,199
they update these twice a month

2330
01:39:15,199 --> 01:39:19,760
um but so about 750 wikipedia languages

2331
01:39:19,760 --> 01:39:21,520
so after doing the calling that i

2332
01:39:21,520 --> 01:39:23,119
described there

2333
01:39:23,119 --> 01:39:27,440
um about 7.35 million unique

2334
01:39:27,440 --> 01:39:30,239
domain names pretty good it's a large

2335
01:39:30,239 --> 01:39:30,880
set

2336
01:39:30,880 --> 01:39:33,520
um if you look through them they look

2337
01:39:33,520 --> 01:39:34,639
pretty legit

2338
01:39:34,639 --> 01:39:36,159
you know like i say there's a lot of

2339
01:39:36,159 --> 01:39:37,760
things that you sort of recognize as

2340
01:39:37,760 --> 01:39:39,600
that's an obscure university in a

2341
01:39:39,600 --> 01:39:41,440
country that i will probably never visit

2342
01:39:41,440 --> 01:39:42,719
and such like that

2343
01:39:42,719 --> 01:39:46,080
um i didn't do my analysis on all 7.35

2344
01:39:46,080 --> 01:39:47,520
million because doing some

2345
01:39:47,520 --> 01:39:50,239
you know doing queries for 7.35 million

2346
01:39:50,239 --> 01:39:51,920
things won't tell you much more than

2347
01:39:51,920 --> 01:39:53,600
doing a sample of a hundred thousand

2348
01:39:53,600 --> 01:39:55,440
so i just took a sample of a hundred

2349
01:39:55,440 --> 01:39:57,280
thousand um

2350
01:39:57,280 --> 01:39:58,800
i actually had to start with more than a

2351
01:39:58,800 --> 01:40:00,080
hundred thousand because it turns out

2352
01:40:00,080 --> 01:40:02,159
wikipedia doesn't clean up its

2353
01:40:02,159 --> 01:40:04,560
uh data that much which is fine i mean

2354
01:40:04,560 --> 01:40:05,600
it's a wonderful thing

2355
01:40:05,600 --> 01:40:08,480
not dumping on them at all so i started

2356
01:40:08,480 --> 01:40:09,840
with 150

2357
01:40:09,840 --> 01:40:11,920
000 and figured out which of those

2358
01:40:11,920 --> 01:40:14,800
actually had ipv4 addresses

2359
01:40:14,800 --> 01:40:19,520
so um this is my last slide um

2360
01:40:19,520 --> 01:40:21,920
of those just and going back to like

2361
01:40:21,920 --> 01:40:22,800
robert's thing

2362
01:40:22,800 --> 01:40:26,480
about 17 of those names also had ipv6

2363
01:40:26,480 --> 01:40:28,159
addresses which sort of matched

2364
01:40:28,159 --> 01:40:31,280
visually what robert did on his slide um

2365
01:40:31,280 --> 01:40:34,000
and also sort of that seems what we're

2366
01:40:34,000 --> 01:40:34,880
doing

2367
01:40:34,880 --> 01:40:38,159
of these only four percent had uh

2368
01:40:38,159 --> 01:40:41,600
we're not where dns sex signed um

2369
01:40:41,600 --> 01:40:43,280
so for the people who are saying oh yes

2370
01:40:43,280 --> 01:40:45,199
this is the year of dns sec

2371
01:40:45,199 --> 01:40:49,199
um dnsec is well behind ipv6

2372
01:40:49,199 --> 01:40:52,239
um interestingly robert also talked

2373
01:40:52,239 --> 01:40:53,119
about

2374
01:40:53,119 --> 01:40:57,760
uh also talked about the tranco data set

2375
01:40:57,760 --> 01:40:58,320
which is

2376
01:40:58,320 --> 01:41:01,440
is a collection of the most popular ones

2377
01:41:01,440 --> 01:41:03,280
i took tranco i did the same thing

2378
01:41:03,280 --> 01:41:04,639
mostly to compare

2379
01:41:04,639 --> 01:41:06,639
you know what are these the not so

2380
01:41:06,639 --> 01:41:09,040
popular websites with most popular

2381
01:41:09,040 --> 01:41:12,080
and the number was for v6 was almost

2382
01:41:12,080 --> 01:41:14,239
identical at 17

2383
01:41:14,239 --> 01:41:15,920
interestingly looking at the most

2384
01:41:15,920 --> 01:41:18,719
popular data sets at a sample of them

2385
01:41:18,719 --> 01:41:20,960
only two percent were signed with dns

2386
01:41:20,960 --> 01:41:21,920
sec

2387
01:41:21,920 --> 01:41:24,639
which makes a little bit of sense that

2388
01:41:24,639 --> 01:41:26,080
um

2389
01:41:26,080 --> 01:41:29,360
those most popular sites probably are

2390
01:41:29,360 --> 01:41:31,360
are more heavily managed and those

2391
01:41:31,360 --> 01:41:33,840
people have done the risk analysis

2392
01:41:33,840 --> 01:41:37,679
um but yeah so even even among that eve

2393
01:41:37,679 --> 01:41:41,040
you know looking at most popular versus

2394
01:41:41,040 --> 01:41:43,119
this set you see some interesting

2395
01:41:43,119 --> 01:41:44,239
differences

2396
01:41:44,239 --> 01:41:47,119
um the main reason i actually started

2397
01:41:47,119 --> 01:41:48,960
this research was some of you who are on

2398
01:41:48,960 --> 01:41:51,119
the deprived working group remember from

2399
01:41:51,119 --> 01:41:52,239
the interim

2400
01:41:52,239 --> 01:41:54,639
in november i think it was in november

2401
01:41:54,639 --> 01:41:55,760
maybe december

2402
01:41:55,760 --> 01:41:58,320
where we're talking about um doing

2403
01:41:58,320 --> 01:41:59,280
opportunistic

2404
01:41:59,280 --> 01:42:01,360
uh recursive to authoritative and people

2405
01:42:01,360 --> 01:42:03,600
said well if you're going to be probing

2406
01:42:03,600 --> 01:42:06,080
it would be good to know how long tls

2407
01:42:06,080 --> 01:42:06,960
startup happens

2408
01:42:06,960 --> 01:42:09,920
so that's really why i did this um

2409
01:42:09,920 --> 01:42:10,480
anyways

2410
01:42:10,480 --> 01:42:12,960
all of this will be in a document that's

2411
01:42:12,960 --> 01:42:15,119
coming out um in the future

2412
01:42:15,119 --> 01:42:16,560
here it says hopefully within a few

2413
01:42:16,560 --> 01:42:18,000
months it's actually moving ahead a

2414
01:42:18,000 --> 01:42:19,840
little bit better than i thought

2415
01:42:19,840 --> 01:42:21,280
maybe by the end of this month we'll

2416
01:42:21,280 --> 01:42:23,920
have it that has much more detail since

2417
01:42:23,920 --> 01:42:26,480
i only had 10 minutes to give this

2418
01:42:26,480 --> 01:42:28,800
ann talks more about the tranca and it

2419
01:42:28,800 --> 01:42:30,639
also talks about

2420
01:42:30,639 --> 01:42:33,840
um why even though this

2421
01:42:33,840 --> 01:42:36,480
is much more typical than the databases

2422
01:42:36,480 --> 01:42:37,280
we have

2423
01:42:37,280 --> 01:42:40,800
major faults in it and so for example

2424
01:42:40,800 --> 01:42:43,760
even though wikipedia has many of those

2425
01:42:43,760 --> 01:42:45,600
things that i listed before

2426
01:42:45,600 --> 01:42:48,719
it doesn't have local restaurants local

2427
01:42:48,719 --> 01:42:50,639
hardware stores things like that

2428
01:42:50,639 --> 01:42:53,360
which we know have websites we care

2429
01:42:53,360 --> 01:42:54,639
about that

2430
01:42:54,639 --> 01:42:56,719
but we don't have a way of necessarily

2431
01:42:56,719 --> 01:42:58,560
getting those into the big thing

2432
01:42:58,560 --> 01:43:02,000
so um that's it and um i think i hit the

2433
01:43:02,000 --> 01:43:02,800
right time

2434
01:43:02,800 --> 01:43:04,880
uh definitely up for questions if you

2435
01:43:04,880 --> 01:43:06,719
have them

2436
01:43:06,719 --> 01:43:10,159
yeah thanks paul um so again please use

2437
01:43:10,159 --> 01:43:10,480
the

2438
01:43:10,480 --> 01:43:12,320
qna tab or raise your end to ask

2439
01:43:12,320 --> 01:43:14,320
questions and now you're going to have

2440
01:43:14,320 --> 01:43:16,880
the poll popping up pretty soon um which

2441
01:43:16,880 --> 01:43:19,360
will be your chance to rate the talk

2442
01:43:19,360 --> 01:43:22,800
uh we have a couple of questions um

2443
01:43:22,800 --> 01:43:25,280
in the q a tab so i'm going to start

2444
01:43:25,280 --> 01:43:26,159
with the first one

2445
01:43:26,159 --> 01:43:29,360
question from giovanni mora paul during

2446
01:43:29,360 --> 01:43:31,360
your filtering you considered only

2447
01:43:31,360 --> 01:43:32,639
second level domain

2448
01:43:32,639 --> 01:43:37,520
or fqdns also no fully fqfqdns which was

2449
01:43:37,520 --> 01:43:38,480
interesting

2450
01:43:38,480 --> 01:43:40,560
when i had to compare it to tranco

2451
01:43:40,560 --> 01:43:43,119
because tranco actually strips off www

2452
01:43:43,119 --> 01:43:46,080
so i i did some changing on that when i

2453
01:43:46,080 --> 01:43:47,600
did that analysis

2454
01:43:47,600 --> 01:43:49,440
but no one of the things that we've

2455
01:43:49,440 --> 01:43:51,920
discovered when you look at less popular

2456
01:43:51,920 --> 01:43:54,320
data sets is there's often a third and a

2457
01:43:54,320 --> 01:43:55,280
fourth level

2458
01:43:55,280 --> 01:43:58,639
like at a college you know

2459
01:44:04,840 --> 01:44:06,159
department.college.edu.com

2460
01:44:06,159 --> 01:44:09,119
thank you next up um question from

2461
01:44:09,119 --> 01:44:09,760
thomas

2462
01:44:09,760 --> 01:44:12,639
kriesek is the domain list you extracted

2463
01:44:12,639 --> 01:44:13,280
available

2464
01:44:13,280 --> 01:44:15,679
anywhere or perhaps the script that were

2465
01:44:15,679 --> 01:44:17,679
used for processing the raw wikipedia

2466
01:44:17,679 --> 01:44:19,840
data

2467
01:44:19,840 --> 01:44:21,920
if you want to read my ugly uh python

2468
01:44:21,920 --> 01:44:23,920
code i'm happy to send that to you but

2469
01:44:23,920 --> 01:44:24,800
uh

2470
01:44:24,800 --> 01:44:26,800
pretty much it's not that interesting it

2471
01:44:26,800 --> 01:44:29,440
does prove the five steps that i gave on

2472
01:44:29,440 --> 01:44:31,119
the slide but yeah i could share that

2473
01:44:31,119 --> 01:44:33,360
um i'd rather not share the database for

2474
01:44:33,360 --> 01:44:34,480
two reasons one

2475
01:44:34,480 --> 01:44:38,239
is wikipedia has

2476
01:44:38,239 --> 01:44:41,440
a very easy to use license and so i

2477
01:44:41,440 --> 01:44:42,880
think people should be doing their own

2478
01:44:42,880 --> 01:44:45,520
and also it's for january it will change

2479
01:44:45,520 --> 01:44:47,360
over time and such like that

2480
01:44:47,360 --> 01:44:48,719
it was pretty easy to run i think it

2481
01:44:48,719 --> 01:44:50,960
took a few hours and i wasn't even using

2482
01:44:50,960 --> 01:44:53,520
very big vms for it and stuff like that

2483
01:44:53,520 --> 01:44:56,159
so i'm happy to share my code but i

2484
01:44:56,159 --> 01:44:57,199
haven't made it

2485
01:44:57,199 --> 01:44:59,360
that palatable yet i guess i should add

2486
01:44:59,360 --> 01:45:01,199
comments and stuff like that

2487
01:45:01,199 --> 01:45:02,880
let me know just let me know offline and

2488
01:45:02,880 --> 01:45:04,400
i'd be i can send it to you it's a

2489
01:45:04,400 --> 01:45:06,960
couple scripts

2490
01:45:06,960 --> 01:45:10,480
cool next up wes is going to ask

2491
01:45:10,480 --> 01:45:12,639
his question you cannot mute yourself

2492
01:45:12,639 --> 01:45:14,080
yes please yeah thanks

2493
01:45:14,080 --> 01:45:16,560
hey paul i i love the idea of of doing

2494
01:45:16,560 --> 01:45:17,679
that kind of search one of the things

2495
01:45:17,679 --> 01:45:18,400
that i've been

2496
01:45:18,400 --> 01:45:20,480
looking at is is splitting things across

2497
01:45:20,480 --> 01:45:22,239
the public suffix list break points to

2498
01:45:22,239 --> 01:45:23,360
see what the

2499
01:45:23,360 --> 01:45:25,920
you know number of prefixes are compared

2500
01:45:25,920 --> 01:45:26,560
to the

2501
01:45:26,560 --> 01:45:28,639
base registered domain did you try doing

2502
01:45:28,639 --> 01:45:30,080
that at all to see if there's much

2503
01:45:30,080 --> 01:45:30,719
variation

2504
01:45:30,719 --> 01:45:34,560
in you know prefix use i did not

2505
01:45:34,560 --> 01:45:37,440
um mostly because the measurements that

2506
01:45:37,440 --> 01:45:39,760
i was getting were mostly about

2507
01:45:39,760 --> 01:45:42,400
what are typical servers not where do

2508
01:45:42,400 --> 01:45:42,800
they

2509
01:45:42,800 --> 01:45:46,480
live in the hierarchy

2510
01:45:46,480 --> 01:45:48,639
so there are plenty of other research

2511
01:45:48,639 --> 01:45:51,320
questions such as

2512
01:45:51,320 --> 01:45:54,480
ignoring.com and net for example so

2513
01:45:54,480 --> 01:45:56,960
of the dot org names that i have how

2514
01:45:56,960 --> 01:46:00,000
does that map to the dot org zone file

2515
01:46:00,000 --> 01:46:02,000
like like which might tell us things

2516
01:46:02,000 --> 01:46:04,239
like how many things in the dot org

2517
01:46:04,239 --> 01:46:06,239
zone file really are just part so

2518
01:46:06,239 --> 01:46:08,000
there's plenty we can do i

2519
01:46:08,000 --> 01:46:10,239
haven't looked this was really again my

2520
01:46:10,239 --> 01:46:12,000
motivation was for deprived

2521
01:46:12,000 --> 01:46:13,440
and then but while i was doing it i

2522
01:46:13,440 --> 01:46:14,880
could figure out about the easy

2523
01:46:14,880 --> 01:46:16,080
questions of

2524
01:46:16,080 --> 01:46:19,840
v6 and dns second option

2525
01:46:22,000 --> 01:46:24,239
all right thank you there is a few

2526
01:46:24,239 --> 01:46:26,000
comments on the q a tab that i'm going

2527
01:46:26,000 --> 01:46:29,119
to uh to read through so azel smith says

2528
01:46:29,119 --> 01:46:31,199
i2 will be interested in the code read

2529
01:46:31,199 --> 01:46:33,600
domains uh regarding domains you'll even

2530
01:46:33,600 --> 01:46:38,560
have five level ones like w.cs.le.ac.uk

2531
01:46:38,560 --> 01:46:41,119
giovanni maria says it would be nice to

2532
01:46:41,119 --> 01:46:43,040
compare wikipedia versus cisco's

2533
01:46:43,040 --> 01:46:46,480
umbrella which is also fpgn based

2534
01:46:46,480 --> 01:46:49,440
and cisco i'm sorry cisco's uh giovanni

2535
01:46:49,440 --> 01:46:52,000
cisco's umbrella i thought was actually

2536
01:46:52,000 --> 01:46:55,920
uh taken from a re you know a set of

2537
01:46:55,920 --> 01:46:58,480
resolvers is that

2538
01:46:58,480 --> 01:47:00,320
which would be a very different sort of

2539
01:47:00,320 --> 01:47:02,320
thing

2540
01:47:02,320 --> 01:47:05,600
joanie do you want to uh maybe answer

2541
01:47:05,600 --> 01:47:07,760
verbally or i could be on

2542
01:47:07,760 --> 01:47:11,040
misunderstanding their database

2543
01:47:11,040 --> 01:47:14,239
oh we say it's true okay so yeah so

2544
01:47:14,239 --> 01:47:16,719
that might be an interesting thing to do

2545
01:47:16,719 --> 01:47:18,320
is to compare

2546
01:47:18,320 --> 01:47:21,119
um things that one fine you know a

2547
01:47:21,119 --> 01:47:23,040
database that one finds by

2548
01:47:23,040 --> 01:47:25,600
looking at the web versus a database

2549
01:47:25,600 --> 01:47:29,520
that one finds by looking at resolvers

2550
01:47:30,480 --> 01:47:33,440
all right and um final comment from azo

2551
01:47:33,440 --> 01:47:34,719
smith

2552
01:47:34,719 --> 01:47:36,159
oh let me know if you would be

2553
01:47:36,159 --> 01:47:37,520
interested in making this work with

2554
01:47:37,520 --> 01:47:39,760
postgresql you mentioned this other word

2555
01:47:39,760 --> 01:47:43,199
due to my sequel i sent you pm on madame

2556
01:47:43,199 --> 01:47:44,560
most about that

2557
01:47:44,560 --> 01:47:48,639
i guess we are right on time um

2558
01:47:48,639 --> 01:47:50,960
so let me wrap up here i would like to

2559
01:47:50,960 --> 01:47:51,920
uh thanks

2560
01:47:51,920 --> 01:47:55,119
all the speakers and all the uh

2561
01:47:55,119 --> 01:47:56,719
people attending and asking questions on

2562
01:47:56,719 --> 01:47:59,520
behalf of the program committee and work

2563
01:47:59,520 --> 01:48:02,840
and for now i'm going to end it over to

2564
01:48:02,840 --> 01:48:05,600
keith that is going to wrap up the

2565
01:48:05,600 --> 01:48:07,920
session

2566
01:48:09,679 --> 01:48:11,920
okay thank you mano appreciate um you

2567
01:48:11,920 --> 01:48:13,280
cheering things this morning i think

2568
01:48:13,280 --> 01:48:14,080
that that meant

2569
01:48:14,080 --> 01:48:17,520
really very well um so just a few wrap

2570
01:48:17,520 --> 01:48:19,360
up things we're very nearly at the end

2571
01:48:19,360 --> 01:48:22,560
of work 34 another one under the belt

2572
01:48:22,560 --> 01:48:25,199
um i want to remind all your work

2573
01:48:25,199 --> 01:48:27,280
members that we are doing a member-only

2574
01:48:27,280 --> 01:48:28,159
session

2575
01:48:28,159 --> 01:48:30,960
in half an hour um if you register for

2576
01:48:30,960 --> 01:48:32,320
work 34 or

2577
01:48:32,320 --> 01:48:35,520
you um explicitly requested it as a

2578
01:48:35,520 --> 01:48:37,199
member then you should have received an

2579
01:48:37,199 --> 01:48:38,560
additional private zoom

2580
01:48:38,560 --> 01:48:40,719
invite um we had a few people who went

2581
01:48:40,719 --> 01:48:42,480
of these went into the spam folder so

2582
01:48:42,480 --> 01:48:43,920
please check that you've got that

2583
01:48:43,920 --> 01:48:46,560
and you know so much for zoom's email

2584
01:48:46,560 --> 01:48:48,159
reputation please check

2585
01:48:48,159 --> 01:48:50,080
um that you uh you got it or or shout

2586
01:48:50,080 --> 01:48:52,239
out as much as soon as possible

2587
01:48:52,239 --> 01:48:55,920
um and that will start at um 1830 utc

2588
01:48:55,920 --> 01:48:56,960
for half an hour with

2589
01:48:56,960 --> 01:48:59,440
giovanni from sid and presenting some

2590
01:48:59,440 --> 01:49:00,159
vulnerability

2591
01:49:00,159 --> 01:49:02,159
information we will be switching the

2592
01:49:02,159 --> 01:49:04,880
remote participation on mattermost from

2593
01:49:04,880 --> 01:49:07,440
the you're currently in the in doing

2594
01:49:07,440 --> 01:49:10,400
that in the workshops channel in the

2595
01:49:10,400 --> 01:49:12,400
community group we will be switching to

2596
01:49:12,400 --> 01:49:14,800
the town square channel in the members

2597
01:49:14,800 --> 01:49:16,080
group so if you could please make that

2598
01:49:16,080 --> 01:49:18,080
switch when you um switch your zoom as

2599
01:49:18,080 --> 01:49:18,880
well

2600
01:49:18,880 --> 01:49:20,639
and a reminder to you all that you know

2601
01:49:20,639 --> 01:49:23,280
where or creates a trusted community

2602
01:49:23,280 --> 01:49:24,560
that's because all of your member

2603
01:49:24,560 --> 01:49:26,400
organizations signed the participation

2604
01:49:26,400 --> 01:49:27,280
agreement

2605
01:49:27,280 --> 01:49:28,800
this presentation is regarded as

2606
01:49:28,800 --> 01:49:30,800
confidential information so there are

2607
01:49:30,800 --> 01:49:32,000
restrictions attached to the

2608
01:49:32,000 --> 01:49:33,920
redistribution of that as part of

2609
01:49:33,920 --> 01:49:35,760
responsible security vulnerability

2610
01:49:35,760 --> 01:49:38,400
disclosure

2611
01:49:41,679 --> 01:49:43,920
um looks like the zoom post office

2612
01:49:43,920 --> 01:49:45,520
worked well so thank you all for for

2613
01:49:45,520 --> 01:49:46,719
giving us feedback on

2614
01:49:46,719 --> 01:49:49,599
on that um you know that we will crunch

2615
01:49:49,599 --> 01:49:51,040
that data and send it back to the

2616
01:49:51,040 --> 01:49:52,639
program committee to guide the selection

2617
01:49:52,639 --> 01:49:54,400
for future workshops

2618
01:49:54,400 --> 01:49:57,040
um generally event feedback is welcome

2619
01:49:57,040 --> 01:49:58,400
including feedback on the feedback

2620
01:49:58,400 --> 01:49:59,440
mechanism

2621
01:49:59,440 --> 01:50:02,400
um there's the uh the url bit ly slash

2622
01:50:02,400 --> 01:50:04,080
or 34-survey

2623
01:50:04,080 --> 01:50:05,840
so again we'd like to hear your your

2624
01:50:05,840 --> 01:50:07,280
thoughts on meeting logistics and

2625
01:50:07,280 --> 01:50:09,040
anything that worked or didn't work for

2626
01:50:09,040 --> 01:50:12,480
or suggestions um quick reminder of the

2627
01:50:12,480 --> 01:50:13,440
next workshops

2628
01:50:13,440 --> 01:50:15,679
work 35 will be the same format as this

2629
01:50:15,679 --> 01:50:17,360
one we're going for the 6th and 7th of

2630
01:50:17,360 --> 01:50:17,840
may

2631
01:50:17,840 --> 01:50:19,440
uh one and a half to two days long

2632
01:50:19,440 --> 01:50:21,280
depending on how much content we got

2633
01:50:21,280 --> 01:50:23,360
um we got a good pile of content this

2634
01:50:23,360 --> 01:50:24,400
time around

2635
01:50:24,400 --> 01:50:27,440
and the cfp for orc35 is now open so

2636
01:50:27,440 --> 01:50:28,800
please go ahead and

2637
01:50:28,800 --> 01:50:31,440
and submit

2638
01:50:36,239 --> 01:50:38,960
oh i'm sorry i failed to share my screen

2639
01:50:38,960 --> 01:50:42,080
friday afternoons

2640
01:50:44,080 --> 01:50:47,599
okay can people see my screen now

2641
01:50:47,599 --> 01:50:51,760
yes we can okay i apologize for that

2642
01:50:51,760 --> 01:50:53,599
there's always something i'll just

2643
01:50:53,599 --> 01:50:58,159
recap the um the relevant slides

2644
01:51:02,080 --> 01:51:07,679
okay so i was talking about work 35 um

2645
01:51:07,679 --> 01:51:10,560
that will be in may the cfp is now open

2646
01:51:10,560 --> 01:51:11,920
there's the url for the

2647
01:51:11,920 --> 01:51:15,520
event on indico program committee would

2648
01:51:15,520 --> 01:51:17,119
love to have your submissions

2649
01:51:17,119 --> 01:51:18,480
we will not be doing any physical

2650
01:51:18,480 --> 01:51:20,320
workshops during january

2651
01:51:20,320 --> 01:51:23,360
september this year um we will

2652
01:51:23,360 --> 01:51:26,800
um have some provisional plans for the

2653
01:51:26,800 --> 01:51:28,320
final quarter of the year

2654
01:51:28,320 --> 01:51:30,560
um which may include a short online

2655
01:51:30,560 --> 01:51:31,599
event

2656
01:51:31,599 --> 01:51:34,080
and hybrid and or physical events

2657
01:51:34,080 --> 01:51:34,880
depending on

2658
01:51:34,880 --> 01:51:38,800
on how the pandemic situation pans out

2659
01:51:38,800 --> 01:51:40,560
so um the final thing is just to thank

2660
01:51:40,560 --> 01:51:42,480
everybody um special thank you to

2661
01:51:42,480 --> 01:51:44,480
farsight security for sponsoring the

2662
01:51:44,480 --> 01:51:45,360
event

2663
01:51:45,360 --> 01:51:46,880
and to all the network members and

2664
01:51:46,880 --> 01:51:49,440
supporters who actively support and and

2665
01:51:49,440 --> 01:51:50,719
engage us

2666
01:51:50,719 --> 01:51:53,599
um to all the bodies that have awarded

2667
01:51:53,599 --> 01:51:55,679
us grant funding over the past year that

2668
01:51:55,679 --> 01:51:57,520
again that that's really helped as

2669
01:51:57,520 --> 01:51:58,960
operating the program committee

2670
01:51:58,960 --> 01:52:00,560
including all our new program committees

2671
01:52:00,560 --> 01:52:02,159
and new program committee chair

2672
01:52:02,159 --> 01:52:03,520
um i think you'll agree have done a

2673
01:52:03,520 --> 01:52:05,199
great job this time around

2674
01:52:05,199 --> 01:52:08,320
all of our speakers um and

2675
01:52:08,320 --> 01:52:12,320
um please consider supporting our online

2676
01:52:12,320 --> 01:52:14,080
events via sponsorship or

2677
01:52:14,080 --> 01:52:16,000
patronage for the year or you know we

2678
01:52:16,000 --> 01:52:17,679
will happily accept donations

2679
01:52:17,679 --> 01:52:20,480
so um that basically you know a big

2680
01:52:20,480 --> 01:52:21,920
thank you we can we can all do a round

2681
01:52:21,920 --> 01:52:23,599
of applause but nobody will hear because

2682
01:52:23,599 --> 01:52:23,840
it's

2683
01:52:23,840 --> 01:52:25,840
it's because it's so but then thank you

2684
01:52:25,840 --> 01:52:27,840
to everybody who makes this possible

2685
01:52:27,840 --> 01:52:29,520
and especially to the award team that

2686
01:52:29,520 --> 01:52:31,360
indonesia were too especially hard for

2687
01:52:31,360 --> 01:52:33,199
this event

2688
01:52:33,199 --> 01:52:36,639
um that is all i have to say for now um

2689
01:52:36,639 --> 01:52:38,400
see you either in hafener if you

2690
01:52:38,400 --> 01:52:39,760
remember or at

2691
01:52:39,760 --> 01:52:42,400
35 and me if you're not and if you're

2692
01:52:42,400 --> 01:52:43,679
not and you want to become a member

2693
01:52:43,679 --> 01:52:44,080
please

2694
01:52:44,080 --> 01:52:46,000
please speak to sue i'll be happy to

2695
01:52:46,000 --> 01:52:47,520
sign you up

2696
01:52:47,520 --> 01:52:59,840
okay thank you

2697
01:53:02,560 --> 01:53:04,639
you

