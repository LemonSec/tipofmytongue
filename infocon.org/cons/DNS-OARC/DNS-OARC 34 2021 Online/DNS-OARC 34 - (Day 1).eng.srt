1
00:00:01,990 --> 00:00:14,920
[Music]

2
00:00:14,920 --> 00:00:17,920
uh

3
00:00:18,370 --> 00:01:12,400
[Music]

4
00:01:12,400 --> 00:01:15,920
hello and um excuse me um welcome to

5
00:01:15,920 --> 00:01:18,960
work 34 um our first

6
00:01:18,960 --> 00:01:22,799
virtual org workshop of 2021

7
00:01:22,799 --> 00:01:24,960
um before we start proceedings i would

8
00:01:24,960 --> 00:01:27,439
just like to

9
00:01:27,439 --> 00:01:29,360
run you through um a few pieces of

10
00:01:29,360 --> 00:01:30,560
information um

11
00:01:30,560 --> 00:01:32,159
and then also for those of you who are

12
00:01:32,159 --> 00:01:35,439
at your first workshop i have a few

13
00:01:35,439 --> 00:01:37,680
things about a little introduction to or

14
00:01:37,680 --> 00:01:39,119
to share with you and then we go on with

15
00:01:39,119 --> 00:01:39,439
the

16
00:01:39,439 --> 00:01:42,399
the workshop proceedings proper my name

17
00:01:42,399 --> 00:01:43,280
is keith mitchell

18
00:01:43,280 --> 00:01:46,799
i'm dns award president um i'd just like

19
00:01:46,799 --> 00:01:48,159
to remind you all

20
00:01:48,159 --> 00:01:50,320
this is an online event for both online

21
00:01:50,320 --> 00:01:51,520
and offline events

22
00:01:51,520 --> 00:01:54,000
or it has a conduct policy or members

23
00:01:54,000 --> 00:01:56,000
are bound by this and you also agreed to

24
00:01:56,000 --> 00:01:58,799
adhere to this policy when you signed up

25
00:01:58,799 --> 00:02:00,399
so if you have any concerns

26
00:02:00,399 --> 00:02:02,560
about behavior or conduct during the

27
00:02:02,560 --> 00:02:04,479
workshop please let us know

28
00:02:04,479 --> 00:02:06,320
the workshop has been recorded and the

29
00:02:06,320 --> 00:02:07,759
talks will be available on your work

30
00:02:07,759 --> 00:02:10,239
youtube channel after the event

31
00:02:10,239 --> 00:02:12,160
um because it's a webinar all

32
00:02:12,160 --> 00:02:14,080
non-speakers are default muted during

33
00:02:14,080 --> 00:02:15,599
the event it will only be the speakers

34
00:02:15,599 --> 00:02:16,800
and the panelists and

35
00:02:16,800 --> 00:02:18,400
people who are asking questions who will

36
00:02:18,400 --> 00:02:20,239
have their audio turned on

37
00:02:20,239 --> 00:02:24,480
i see that we have um about 160 people

38
00:02:24,480 --> 00:02:27,280
attending so that's great um all event

39
00:02:27,280 --> 00:02:28,720
times are in universal

40
00:02:28,720 --> 00:02:31,599
coordinated time um and the social media

41
00:02:31,599 --> 00:02:33,599
hashtags that we're using are love dns

42
00:02:33,599 --> 00:02:34,840
and

43
00:02:34,840 --> 00:02:37,440
work34 um for

44
00:02:37,440 --> 00:02:38,959
meeting interaction which is not

45
00:02:38,959 --> 00:02:40,720
question and answers with the speakers

46
00:02:40,720 --> 00:02:42,640
we're using our matamos chat platform

47
00:02:42,640 --> 00:02:44,720
which we migrated to last year uh

48
00:02:44,720 --> 00:02:46,319
previously using jabber

49
00:02:46,319 --> 00:02:48,319
this is an open source crop platform

50
00:02:48,319 --> 00:02:49,519
provider neutral

51
00:02:49,519 --> 00:02:51,200
um so you should you can use it from

52
00:02:51,200 --> 00:02:54,400
browser you should be able to to get a

53
00:02:54,400 --> 00:02:56,800
client for your most platforms um if you

54
00:02:56,800 --> 00:02:58,480
didn't already sign up we recommend that

55
00:02:58,480 --> 00:03:00,360
you do you can do that at

56
00:03:00,360 --> 00:03:01,840
chat.dnsoar.net

57
00:03:01,840 --> 00:03:03,280
and we were using the workshops

58
00:03:03,280 --> 00:03:05,040
community channel um

59
00:03:05,040 --> 00:03:07,280
for general discussion but we'll not be

60
00:03:07,280 --> 00:03:08,800
monitoring that for questions to the

61
00:03:08,800 --> 00:03:10,959
speakers or or operational comments

62
00:03:10,959 --> 00:03:13,200
about the operation of the workshop

63
00:03:13,200 --> 00:03:14,920
um and you can get the clients at

64
00:03:14,920 --> 00:03:16,959
matamos.com

65
00:03:16,959 --> 00:03:19,280
questions and answers um each speaker

66
00:03:19,280 --> 00:03:21,120
slot includes five to ten minutes at the

67
00:03:21,120 --> 00:03:23,360
end for questions and answers

68
00:03:23,360 --> 00:03:25,120
um if you want to raise your query if

69
00:03:25,120 --> 00:03:26,159
you want to speak your question we're

70
00:03:26,159 --> 00:03:27,680
doing it two ways this time

71
00:03:27,680 --> 00:03:29,599
uh previously we've only done it with um

72
00:03:29,599 --> 00:03:30,799
typing questions

73
00:03:30,799 --> 00:03:32,720
um this time you can speak your question

74
00:03:32,720 --> 00:03:34,000
as well so

75
00:03:34,000 --> 00:03:35,680
if you wish to speak your question then

76
00:03:35,680 --> 00:03:37,840
use the zoom raise hand facility

77
00:03:37,840 --> 00:03:39,360
you then need to wait for the session

78
00:03:39,360 --> 00:03:41,840
chair to unmute you and then once you

79
00:03:41,840 --> 00:03:43,680
accept that you can proceed and ask your

80
00:03:43,680 --> 00:03:46,000
question if you prefer to type your

81
00:03:46,000 --> 00:03:48,239
question use the zoom question answer

82
00:03:48,239 --> 00:03:50,080
panel and it will be read out by the

83
00:03:50,080 --> 00:03:51,040
session chair

84
00:03:51,040 --> 00:03:53,519
um and obviously this is as close as we

85
00:03:53,519 --> 00:03:55,360
can get first time course for serve and

86
00:03:55,360 --> 00:03:56,720
time permitting

87
00:03:56,720 --> 00:03:58,720
most of the speakers will be available

88
00:03:58,720 --> 00:04:00,000
in the matamos channel

89
00:04:00,000 --> 00:04:02,879
and or at the um social event if you

90
00:04:02,879 --> 00:04:04,319
have questions to ask that there isn't

91
00:04:04,319 --> 00:04:05,439
time for

92
00:04:05,439 --> 00:04:07,360
and as every one of these workshops for

93
00:04:07,360 --> 00:04:09,040
the benefit of all remote people please

94
00:04:09,040 --> 00:04:10,879
identify yourself and your affiliation

95
00:04:10,879 --> 00:04:13,360
when asking

96
00:04:13,360 --> 00:04:15,760
we like to give presentation feedback um

97
00:04:15,760 --> 00:04:17,120
we're experimenting with doing this a

98
00:04:17,120 --> 00:04:18,560
different way this time we're going to

99
00:04:18,560 --> 00:04:19,680
use zoom poles

100
00:04:19,680 --> 00:04:21,279
in real time and that's the only way

101
00:04:21,279 --> 00:04:22,800
that you'll be able to rate speaker

102
00:04:22,800 --> 00:04:23,280
quite

103
00:04:23,280 --> 00:04:26,560
presentations um and content

104
00:04:26,560 --> 00:04:28,400
um these will be displayed during the

105
00:04:28,400 --> 00:04:30,080
question answer period so you've got

106
00:04:30,080 --> 00:04:31,360
maybe five minutes

107
00:04:31,360 --> 00:04:33,280
um to give your feedback please vote by

108
00:04:33,280 --> 00:04:35,120
clicking on the the relevant panel which

109
00:04:35,120 --> 00:04:36,320
will pop up

110
00:04:36,320 --> 00:04:39,120
um we gather that data we compare it to

111
00:04:39,120 --> 00:04:40,720
the scores that the foreground committee

112
00:04:40,720 --> 00:04:42,800
have for the presentations during their

113
00:04:42,800 --> 00:04:44,800
review process and that helps us keep on

114
00:04:44,800 --> 00:04:46,720
track and have the content that you like

115
00:04:46,720 --> 00:04:48,639
indict the program committee

116
00:04:48,639 --> 00:04:50,960
um there's also a general event feedback

117
00:04:50,960 --> 00:04:53,440
survey about event logistics and

118
00:04:53,440 --> 00:04:55,280
how things ran and what your experience

119
00:04:55,280 --> 00:04:57,040
was like we like feedback on that as

120
00:04:57,040 --> 00:04:57,520
well

121
00:04:57,520 --> 00:05:00,080
you can complete that um any point um

122
00:05:00,080 --> 00:05:00,560
after

123
00:05:00,560 --> 00:05:04,160
during or after the workshop um we'll be

124
00:05:04,160 --> 00:05:05,600
running a social event

125
00:05:05,600 --> 00:05:07,919
um this the social room will be open

126
00:05:07,919 --> 00:05:08,639
during the two

127
00:05:08,639 --> 00:05:10,800
long one-hour breaks on each day and

128
00:05:10,800 --> 00:05:12,400
also for an hour after

129
00:05:12,400 --> 00:05:14,800
today's proceedings um there's the zoom

130
00:05:14,800 --> 00:05:15,680
room we'll

131
00:05:15,680 --> 00:05:19,680
share the password shortly um and org 34

132
00:05:19,680 --> 00:05:22,960
restarts at 1600 utc friday

133
00:05:22,960 --> 00:05:25,280
and reuse the same workshop link not the

134
00:05:25,280 --> 00:05:26,800
social link the workshop link that you

135
00:05:26,800 --> 00:05:29,199
got and used for today

136
00:05:29,199 --> 00:05:30,960
so that basically covers the meeting

137
00:05:30,960 --> 00:05:32,720
logistics

138
00:05:32,720 --> 00:05:36,840
um i'd like now to just run through a

139
00:05:36,840 --> 00:05:39,520
few things about work

140
00:05:39,520 --> 00:05:41,280
for those of you who are not already

141
00:05:41,280 --> 00:05:43,280
members or for those of you for whom

142
00:05:43,280 --> 00:05:44,960
this is your first workshop

143
00:05:44,960 --> 00:05:46,479
of course at this point in a room full

144
00:05:46,479 --> 00:05:48,320
workshop i'd be able to look out and all

145
00:05:48,320 --> 00:05:49,680
the new people would be able to

146
00:05:49,680 --> 00:05:51,440
to have you know their their green badge

147
00:05:51,440 --> 00:05:53,039
tags or whatever and i've got to say

148
00:05:53,039 --> 00:05:55,360
welcome well welcome anyway

149
00:05:55,360 --> 00:05:57,199
um i hope that we'll be able to see you

150
00:05:57,199 --> 00:05:58,720
at the physical workshop at some point

151
00:05:58,720 --> 00:06:00,560
before too long but

152
00:06:00,560 --> 00:06:03,120
um in the meantime a little bit about

153
00:06:03,120 --> 00:06:03,759
work for

154
00:06:03,759 --> 00:06:07,120
um for those of you who are not familiar

155
00:06:07,120 --> 00:06:09,440
um what is our mission um it's about

156
00:06:09,440 --> 00:06:11,199
making the dns and the internet work

157
00:06:11,199 --> 00:06:13,520
better from an operational point of view

158
00:06:13,520 --> 00:06:15,360
um to do that by bridging with the

159
00:06:15,360 --> 00:06:17,360
research community and and focusing on

160
00:06:17,360 --> 00:06:19,199
data collection analysis scientific

161
00:06:19,199 --> 00:06:20,080
method for for

162
00:06:20,080 --> 00:06:22,080
running the internet um to provide

163
00:06:22,080 --> 00:06:23,840
useful services and tools for those of

164
00:06:23,840 --> 00:06:25,440
you who are running the dns

165
00:06:25,440 --> 00:06:27,919
it's about relationship building and

166
00:06:27,919 --> 00:06:29,120
it's about sharing information

167
00:06:29,120 --> 00:06:30,720
responsibly

168
00:06:30,720 --> 00:06:32,880
um it's about enabling knowledge

169
00:06:32,880 --> 00:06:34,080
transfer by organizing

170
00:06:34,080 --> 00:06:36,240
open workshops and increasing the the

171
00:06:36,240 --> 00:06:37,600
public's awareness of the dns

172
00:06:37,600 --> 00:06:40,240
significance

173
00:06:44,639 --> 00:06:47,520
we have a white member community which

174
00:06:47,520 --> 00:06:48,639
includes

175
00:06:48,639 --> 00:06:52,560
many providers dns operators

176
00:06:52,560 --> 00:06:55,599
cctld and gtld operators vendors of open

177
00:06:55,599 --> 00:06:56,560
software

178
00:06:56,560 --> 00:06:59,039
we have over 100 members and it is a

179
00:06:59,039 --> 00:07:01,360
very diverse community

180
00:07:01,360 --> 00:07:04,560
our technical resources we have um

181
00:07:04,560 --> 00:07:06,400
data catalog which we've been gathering

182
00:07:06,400 --> 00:07:08,319
for over 15 years now

183
00:07:08,319 --> 00:07:11,360
over 250 terabytes there that has needed

184
00:07:11,360 --> 00:07:12,000
some love

185
00:07:12,000 --> 00:07:14,080
over the past year so we're currently

186
00:07:14,080 --> 00:07:15,599
upgrading our main infrastructure in

187
00:07:15,599 --> 00:07:17,919
fremont california to support that

188
00:07:17,919 --> 00:07:19,520
we have a very wide catalog of open

189
00:07:19,520 --> 00:07:21,520
source dns tool software

190
00:07:21,520 --> 00:07:23,039
um jerry is available during the

191
00:07:23,039 --> 00:07:24,880
workshop if you want to ask him as

192
00:07:24,880 --> 00:07:27,840
our our chief developer um we have a

193
00:07:27,840 --> 00:07:29,759
suite of active dns test services again

194
00:07:29,759 --> 00:07:31,599
we've updated one of these recently and

195
00:07:31,599 --> 00:07:33,280
we have some secondary sites on ottawa

196
00:07:33,280 --> 00:07:34,400
and stockholm to

197
00:07:34,400 --> 00:07:37,759
complement our infrastructure

198
00:07:37,759 --> 00:07:40,080
um if you want to become a member there

199
00:07:40,080 --> 00:07:42,400
are a very a wide range of categories

200
00:07:42,400 --> 00:07:44,560
from supporter all the way up to diamond

201
00:07:44,560 --> 00:07:47,199
the the two lowest categories are

202
00:07:47,199 --> 00:07:48,879
um had some restrictions on them if

203
00:07:48,879 --> 00:07:50,639
you're a supporter then we expect you to

204
00:07:50,639 --> 00:07:52,639
contribute back to work in some kind

205
00:07:52,639 --> 00:07:54,639
maybe by providing data uploads or

206
00:07:54,639 --> 00:07:56,879
presenting a workshop or

207
00:07:56,879 --> 00:07:59,280
a peer-reviewed journal and a blue

208
00:07:59,280 --> 00:08:01,280
category is for small organizations and

209
00:08:01,280 --> 00:08:03,120
individuals only

210
00:08:03,120 --> 00:08:05,120
please contact sue graves who again is

211
00:08:05,120 --> 00:08:06,560
present throughout the workshop if

212
00:08:06,560 --> 00:08:08,160
you're interested in becoming an award

213
00:08:08,160 --> 00:08:10,400
member

214
00:08:10,400 --> 00:08:13,199
or governance we're an independent legal

215
00:08:13,199 --> 00:08:13,919
entity

216
00:08:13,919 --> 00:08:15,919
a membership organization with a diverse

217
00:08:15,919 --> 00:08:17,440
member base we're financially

218
00:08:17,440 --> 00:08:19,599
self-supporting um despite the pandemic

219
00:08:19,599 --> 00:08:20,960
we've been doing quite well

220
00:08:20,960 --> 00:08:23,280
on that recently um we have best

221
00:08:23,280 --> 00:08:24,879
practice self-governance

222
00:08:24,879 --> 00:08:27,599
we try to be as neutral as possible in

223
00:08:27,599 --> 00:08:28,879
in the field

224
00:08:28,879 --> 00:08:31,120
um our board is elected by the members

225
00:08:31,120 --> 00:08:33,440
um there are six executive staff who are

226
00:08:33,440 --> 00:08:35,440
all part-time contractors

227
00:08:35,440 --> 00:08:37,919
um we have an awesome volunteer workshop

228
00:08:37,919 --> 00:08:39,599
program committee if you think this is a

229
00:08:39,599 --> 00:08:41,440
good content then you have them to thank

230
00:08:41,440 --> 00:08:42,799
for that they've been working hard for

231
00:08:42,799 --> 00:08:43,760
this one

232
00:08:43,760 --> 00:08:46,160
and and we have non-official non-profit

233
00:08:46,160 --> 00:08:48,320
status in the us

234
00:08:48,320 --> 00:08:51,760
um at work 33 we had our first virtual

235
00:08:51,760 --> 00:08:53,920
agm and our first fully online board

236
00:08:53,920 --> 00:08:54,640
elections

237
00:08:54,640 --> 00:08:56,080
we only had one change to the board

238
00:08:56,080 --> 00:08:59,040
composition um like to welcome joe abele

239
00:08:59,040 --> 00:09:01,920
um from pir as our newest director and

240
00:09:01,920 --> 00:09:03,279
again i believe most of our

241
00:09:03,279 --> 00:09:04,959
board members are present throughout the

242
00:09:04,959 --> 00:09:06,640
workshop

243
00:09:06,640 --> 00:09:09,440
um here's the team um as you can see

244
00:09:09,440 --> 00:09:10,240
we're based

245
00:09:10,240 --> 00:09:12,880
uh somewhat geographically diversely so

246
00:09:12,880 --> 00:09:14,000
remote working is

247
00:09:14,000 --> 00:09:15,680
what we've been doing since long before

248
00:09:15,680 --> 00:09:18,320
the pandemic and uh we're

249
00:09:18,320 --> 00:09:21,760
we're keeping that up it's the program

250
00:09:21,760 --> 00:09:22,399
committee

251
00:09:22,399 --> 00:09:24,640
um i'd like to welcome um several new

252
00:09:24,640 --> 00:09:26,320
members we read quite a changing of the

253
00:09:26,320 --> 00:09:28,080
guard at the programme committee um

254
00:09:28,080 --> 00:09:29,680
pallavi arrives from salesforce

255
00:09:29,680 --> 00:09:31,760
manuel bertel from facebook brett carr

256
00:09:31,760 --> 00:09:32,720
from nominet

257
00:09:32,720 --> 00:09:35,440
and william turp from ll net labs and

258
00:09:35,440 --> 00:09:36,240
also um

259
00:09:36,240 --> 00:09:39,040
like to uh thank young black i'm from

260
00:09:39,040 --> 00:09:41,680
ns1 from taking over the chair role

261
00:09:41,680 --> 00:09:43,600
um and again all the young program

262
00:09:43,600 --> 00:09:45,120
committee members have worked hard for

263
00:09:45,120 --> 00:09:51,839
this workshop and our and our presence

264
00:09:56,240 --> 00:09:59,839
um our next workshops um

265
00:09:59,839 --> 00:10:03,360
here's the plan um or 35 will be doing

266
00:10:03,360 --> 00:10:04,959
basically the same format as this

267
00:10:04,959 --> 00:10:07,360
workshop uh may the sixth and seventh

268
00:10:07,360 --> 00:10:09,040
it will be one and a half to two days

269
00:10:09,040 --> 00:10:11,360
long um

270
00:10:11,360 --> 00:10:12,959
depending on the amount of content it

271
00:10:12,959 --> 00:10:14,399
will be fully online

272
00:10:14,399 --> 00:10:15,839
um and we've just opened a call for

273
00:10:15,839 --> 00:10:18,000
presentations so if you're interested in

274
00:10:18,000 --> 00:10:18,560
talking

275
00:10:18,560 --> 00:10:21,440
then we'd love to have your submission

276
00:10:21,440 --> 00:10:22,560
the board decided

277
00:10:22,560 --> 00:10:24,079
um that we will not do any physical

278
00:10:24,079 --> 00:10:26,079
workshops during quarter one and quarter

279
00:10:26,079 --> 00:10:27,040
three

280
00:10:27,040 --> 00:10:30,160
um this year so um the provisional plan

281
00:10:30,160 --> 00:10:31,440
for 2021

282
00:10:31,440 --> 00:10:33,040
is that we'll probably do some kind of

283
00:10:33,040 --> 00:10:37,279
short work 35a event during the um

284
00:10:37,279 --> 00:10:40,320
the summer um the agm we

285
00:10:40,320 --> 00:10:42,480
may do that in october there might be a

286
00:10:42,480 --> 00:10:44,079
possibility for having that as a hybrid

287
00:10:44,079 --> 00:10:44,880
physical

288
00:10:44,880 --> 00:10:48,320
event um and um we have a work 36

289
00:10:48,320 --> 00:10:49,200
collocated

290
00:10:49,200 --> 00:10:51,120
the the plan is if we have a physical

291
00:10:51,120 --> 00:10:53,200
org 36 then we would collocate that with

292
00:10:53,200 --> 00:10:55,040
rape 83 in november

293
00:10:55,040 --> 00:10:56,800
if rank 83 is a virtual meeting then

294
00:10:56,800 --> 00:10:59,519
it's likely that or 36 will be as well

295
00:10:59,519 --> 00:11:01,040
and then we have committed to the

296
00:11:01,040 --> 00:11:02,959
physical workshop in a year's time

297
00:11:02,959 --> 00:11:05,839
in um odd 37 um in austin texas

298
00:11:05,839 --> 00:11:07,680
collocated with nano

299
00:11:07,680 --> 00:11:09,839
which i hope that we will be able to see

300
00:11:09,839 --> 00:11:12,160
everyone there

301
00:11:12,160 --> 00:11:15,120
um so uh quick um here's what we've

302
00:11:15,120 --> 00:11:16,959
achieved recently

303
00:11:16,959 --> 00:11:19,279
um

304
00:11:21,519 --> 00:11:23,600
as i said we made a major investment in

305
00:11:23,600 --> 00:11:24,560
our data store

306
00:11:24,560 --> 00:11:25,920
uh that's been commissioned at the

307
00:11:25,920 --> 00:11:28,160
moment i'm please thank you for everyone

308
00:11:28,160 --> 00:11:29,519
that made the donation to make that

309
00:11:29,519 --> 00:11:30,480
possible

310
00:11:30,480 --> 00:11:32,880
uh we also received grants from comcast

311
00:11:32,880 --> 00:11:35,519
mozilla to add doh capability to our dns

312
00:11:35,519 --> 00:11:37,120
per testing tool

313
00:11:37,120 --> 00:11:40,079
um we had a grant from aaron um and we

314
00:11:40,079 --> 00:11:41,680
pretty much completed the work on that

315
00:11:41,680 --> 00:11:43,279
the to add rpki our

316
00:11:43,279 --> 00:11:45,200
origin validation to our checkmar dns

317
00:11:45,200 --> 00:11:47,839
tool we recently did some updates to dns

318
00:11:47,839 --> 00:11:48,240
fizz

319
00:11:48,240 --> 00:11:50,240
in terms of encryption support and the

320
00:11:50,240 --> 00:11:52,079
server platform

321
00:11:52,079 --> 00:11:53,279
um and i think the other thing that

322
00:11:53,279 --> 00:11:55,360
we've achieved over the past year and we

323
00:11:55,360 --> 00:11:56,399
wouldn't have done it without the

324
00:11:56,399 --> 00:11:57,920
support of our community and the hard

325
00:11:57,920 --> 00:11:58,800
work of our team

326
00:11:58,800 --> 00:12:01,279
is operational continuity and a

327
00:12:01,279 --> 00:12:02,560
successful transition

328
00:12:02,560 --> 00:12:04,800
um to online events despite all the

329
00:12:04,800 --> 00:12:06,399
pandemic and everything else that's been

330
00:12:06,399 --> 00:12:08,560
going on

331
00:12:08,560 --> 00:12:11,440
so um why become an art member i'm not

332
00:12:11,440 --> 00:12:12,959
going to oversell this but

333
00:12:12,959 --> 00:12:14,560
you know we believe that this is a

334
00:12:14,560 --> 00:12:17,120
unique community um

335
00:12:17,120 --> 00:12:18,720
you can become a member you can help

336
00:12:18,720 --> 00:12:20,399
influence the tools and services that we

337
00:12:20,399 --> 00:12:20,959
do

338
00:12:20,959 --> 00:12:22,560
you have access to our data set and the

339
00:12:22,560 --> 00:12:24,000
ability to share and analyze

340
00:12:24,000 --> 00:12:26,880
that um we have a whole bunch of

341
00:12:26,880 --> 00:12:28,639
community coordination resources to

342
00:12:28,639 --> 00:12:30,320
response incidents and threats for

343
00:12:30,320 --> 00:12:32,399
example where we have a presentation

344
00:12:32,399 --> 00:12:32,959
about the

345
00:12:32,959 --> 00:12:35,360
vulnerability for members only tomorrow

346
00:12:35,360 --> 00:12:36,639
and we're a neutral party

347
00:12:36,639 --> 00:12:38,240
we're a nonprofit we're a membership

348
00:12:38,240 --> 00:12:40,240
organization we're free of vested

349
00:12:40,240 --> 00:12:42,560
interest in the dns space

350
00:12:42,560 --> 00:12:45,839
um and there is um you know

351
00:12:45,839 --> 00:12:48,560
in the words of our own members anyway

352
00:12:48,560 --> 00:12:48,880
um

353
00:12:48,880 --> 00:12:50,800
i've said enough you you you came here

354
00:12:50,800 --> 00:12:53,120
for for for technical meet and not just

355
00:12:53,120 --> 00:12:56,320
um what's going on uh with the work um

356
00:12:56,320 --> 00:12:59,600
so with that i will hand you over to

357
00:12:59,600 --> 00:13:01,680
session chair for the first session uh

358
00:13:01,680 --> 00:13:03,760
which is brett carr from nominet

359
00:13:03,760 --> 00:13:05,920
and also um we'll interpret from l net

360
00:13:05,920 --> 00:13:08,000
labs will be um

361
00:13:08,000 --> 00:13:10,720
the uh the question and answer monitor

362
00:13:10,720 --> 00:13:11,200
so

363
00:13:11,200 --> 00:13:14,800
um over to you brad

364
00:13:14,800 --> 00:13:16,720
thanks keith uh and on behalf of the

365
00:13:16,720 --> 00:13:18,839
program committee welcome to our work

366
00:13:18,839 --> 00:13:22,000
34 as usual we have a

367
00:13:22,000 --> 00:13:24,240
packed agenda of interesting talk which

368
00:13:24,240 --> 00:13:25,680
should keep you entertained and informed

369
00:13:25,680 --> 00:13:27,440
over the next few hours

370
00:13:27,440 --> 00:13:29,440
um as already mentioned if you've got

371
00:13:29,440 --> 00:13:31,279
any questions at the end of each

372
00:13:31,279 --> 00:13:32,800
presentation you can either add them to

373
00:13:32,800 --> 00:13:35,040
the qa boxing zoom

374
00:13:35,040 --> 00:13:36,800
and i'll read them out on your behalf or

375
00:13:36,800 --> 00:13:38,720
read your hand and allow yourself to

376
00:13:38,720 --> 00:13:40,079
unmute yourself

377
00:13:40,079 --> 00:13:43,199
to ask the question directly um lastly

378
00:13:43,199 --> 00:13:44,639
for me before we move on

379
00:13:44,639 --> 00:13:46,880
you'll see a survey pop off after each

380
00:13:46,880 --> 00:13:48,320
talk if you can answer the questions

381
00:13:48,320 --> 00:13:50,000
when you see them this really

382
00:13:50,000 --> 00:13:51,600
helps the program coming to shape the

383
00:13:51,600 --> 00:13:53,199
future content

384
00:13:53,199 --> 00:13:56,240
to your needs right without

385
00:13:56,240 --> 00:13:59,040
um further ado i will uh hand over to an

386
00:13:59,040 --> 00:14:01,360
old friend of dnsoarc

387
00:14:01,360 --> 00:14:04,800
um jeff houston is going to give us

388
00:14:04,800 --> 00:14:08,560
tell us about his uh analysis of uh

389
00:14:08,560 --> 00:14:11,040
dns flag day from last year we'll

390
00:14:11,040 --> 00:14:12,399
achieve yeah

391
00:14:12,399 --> 00:14:15,680
thanks a lot brett share

392
00:14:15,680 --> 00:14:18,638
my screen

393
00:14:24,399 --> 00:14:26,399
and hopefully everyone can see that so

394
00:14:26,399 --> 00:14:27,440
uh

395
00:14:27,440 --> 00:14:30,720
we good brett

396
00:14:30,720 --> 00:14:33,040
yeah no problem the presentation's fine

397
00:14:33,040 --> 00:14:33,920
i'm gonna eat you well

398
00:14:33,920 --> 00:14:37,040
included fantastic well welcome to this

399
00:14:37,040 --> 00:14:40,160
weird dark void i am still inhabiting a

400
00:14:40,160 --> 00:14:41,360
year later

401
00:14:41,360 --> 00:14:44,480
um yes it's still three in the morning

402
00:14:44,480 --> 00:14:46,959
yes there's only me here but if any of

403
00:14:46,959 --> 00:14:47,920
you are out there

404
00:14:47,920 --> 00:14:50,959
uh good morning to you too um look it's

405
00:14:50,959 --> 00:14:52,320
it's a pleasure to be here

406
00:14:52,320 --> 00:14:54,399
and uh a pleasure to talk about some of

407
00:14:54,399 --> 00:14:56,880
the work we did at the end of last year

408
00:14:56,880 --> 00:15:00,320
um right inside that dnso arc mission

409
00:15:00,320 --> 00:15:03,360
of analysis and measurement and

410
00:15:03,360 --> 00:15:06,399
in this case what we're looking at is a

411
00:15:06,399 --> 00:15:07,680
recent event

412
00:15:07,680 --> 00:15:11,199
the dns flag day 2020 there's a screen

413
00:15:11,199 --> 00:15:12,160
snap

414
00:15:12,160 --> 00:15:14,160
and and it was recommending a couple of

415
00:15:14,160 --> 00:15:15,279
things

416
00:15:15,279 --> 00:15:17,920
uh if you ran an authoritative dns

417
00:15:17,920 --> 00:15:19,040
server

418
00:15:19,040 --> 00:15:22,079
um you should have configured your your

419
00:15:22,079 --> 00:15:23,440
server

420
00:15:23,440 --> 00:15:26,560
not to accept edns buffer sizes that

421
00:15:26,560 --> 00:15:29,279
were sent to you over queries

422
00:15:29,279 --> 00:15:31,160
not accept them if they're larger than

423
00:15:31,160 --> 00:15:34,079
1232 bytes

424
00:15:34,079 --> 00:15:35,519
and you're basically meant to down

425
00:15:35,519 --> 00:15:37,759
negotiate to that value

426
00:15:37,759 --> 00:15:40,639
and don't send larger answers if you're

427
00:15:40,639 --> 00:15:41,920
authoritative

428
00:15:41,920 --> 00:15:44,880
and for recursive resolvers and even

429
00:15:44,880 --> 00:15:47,040
stub resolvers

430
00:15:47,040 --> 00:15:48,959
the the guidance was you really should

431
00:15:48,959 --> 00:15:50,480
be configuring down low

432
00:15:50,480 --> 00:15:54,079
and again 1232 bytes

433
00:15:54,079 --> 00:15:55,600
there's an interesting footnote there

434
00:15:55,600 --> 00:15:56,959
and i'll just comment on this for a

435
00:15:56,959 --> 00:15:58,000
second

436
00:15:58,000 --> 00:16:01,120
you must resend your query over tcp

437
00:16:01,120 --> 00:16:04,000
if you receive a truncated udp response

438
00:16:04,000 --> 00:16:05,199
well

439
00:16:05,199 --> 00:16:07,279
not quite if you get the answer you're

440
00:16:07,279 --> 00:16:09,360
looking for inside the truncated

441
00:16:09,360 --> 00:16:10,399
response

442
00:16:10,399 --> 00:16:13,440
you are allowed to press on um whether

443
00:16:13,440 --> 00:16:15,120
you should or shouldn't

444
00:16:15,120 --> 00:16:16,959
who knows but you're certainly allowed

445
00:16:16,959 --> 00:16:18,560
to use what you get

446
00:16:18,560 --> 00:16:21,040
if what you get is okay so truncation

447
00:16:21,040 --> 00:16:22,000
doesn't necessarily

448
00:16:22,000 --> 00:16:25,040
force tcp anyway i digress the exact

449
00:16:25,040 --> 00:16:26,399
date 12th of october

450
00:16:26,399 --> 00:16:29,519
sorry first of october all gone anyway

451
00:16:29,519 --> 00:16:32,480
uh two questions in all of this what

452
00:16:32,480 --> 00:16:33,680
happened

453
00:16:33,680 --> 00:16:36,560
did it work was it a flag day and what

454
00:16:36,560 --> 00:16:40,079
about that recommended value of 1232

455
00:16:40,079 --> 00:16:43,199
it seems such an odd value

456
00:16:43,199 --> 00:16:46,639
it's related to a v6 value of

457
00:16:46,639 --> 00:16:49,279
the minimum unfragmented packet in the

458
00:16:49,279 --> 00:16:50,800
v6 network

459
00:16:50,800 --> 00:16:53,759
of 1280 octets and then if you take away

460
00:16:53,759 --> 00:16:56,079
the ipv6 header and the udp header

461
00:16:56,079 --> 00:16:59,680
you get a 1232 but that's only a v6

462
00:16:59,680 --> 00:17:00,800
heading

463
00:17:00,800 --> 00:17:04,240
it seems quite small too small

464
00:17:04,240 --> 00:17:06,640
too large so let's just have a look at

465
00:17:06,640 --> 00:17:07,599
what happened here

466
00:17:07,599 --> 00:17:11,359
here is the first eight months of 2020

467
00:17:11,359 --> 00:17:13,679
and what i've done inside this is

468
00:17:13,679 --> 00:17:14,640
actually taken

469
00:17:14,640 --> 00:17:16,480
the data coming from our measurement

470
00:17:16,480 --> 00:17:18,319
work at ap nick labs

471
00:17:18,319 --> 00:17:20,319
work done by the way with joe r damas

472
00:17:20,319 --> 00:17:22,160
thank you joao

473
00:17:22,160 --> 00:17:23,679
i've taken the first eight months of

474
00:17:23,679 --> 00:17:26,640
2020 and basically has plotted

475
00:17:26,640 --> 00:17:29,280
the relative incidence of buffer sizes

476
00:17:29,280 --> 00:17:31,760
that i see in incoming queries

477
00:17:31,760 --> 00:17:36,160
and there is no doubt that the idioms

478
00:17:36,160 --> 00:17:40,200
rfc someone remembers the number

479
00:17:40,200 --> 00:17:42,799
6891 comes to mind but it's early in the

480
00:17:42,799 --> 00:17:43,440
morning and

481
00:17:43,440 --> 00:17:46,240
god knows that's just a number um most

482
00:17:46,240 --> 00:17:47,919
folk took that to heart

483
00:17:47,919 --> 00:17:50,080
and up around 80 to 95 percent of

484
00:17:50,080 --> 00:17:51,039
queries

485
00:17:51,039 --> 00:17:53,799
came in with an ednf0 buffer size big

486
00:17:53,799 --> 00:17:55,600
4096

487
00:17:55,600 --> 00:17:59,120
um the next most popular was none at all

488
00:17:59,120 --> 00:18:02,480
512 and then various sizes below that

489
00:18:02,480 --> 00:18:04,960
interestingly there's a big difference

490
00:18:04,960 --> 00:18:06,960
between weekday and weekend

491
00:18:06,960 --> 00:18:08,240
in other words there's a big difference

492
00:18:08,240 --> 00:18:10,880
between enterprise

493
00:18:10,880 --> 00:18:15,440
and and retail isp where 4096 is more

494
00:18:15,440 --> 00:18:16,080
prevalent

495
00:18:16,080 --> 00:18:19,200
on weekdays so more prevalent on

496
00:18:19,200 --> 00:18:20,160
weekends

497
00:18:20,160 --> 00:18:22,880
isp and less prevalent on weekdays

498
00:18:22,880 --> 00:18:24,640
inside the enterprise

499
00:18:24,640 --> 00:18:27,200
and you know what we find with 512 is

500
00:18:27,200 --> 00:18:28,640
almost the opposite

501
00:18:28,640 --> 00:18:32,480
enterprise is i suppose more pro

502
00:18:32,480 --> 00:18:35,440
to using no idioms zero buffer size than

503
00:18:35,440 --> 00:18:37,120
the weekend

504
00:18:37,120 --> 00:18:41,360
um flag day was anyone paying attention

505
00:18:41,360 --> 00:18:44,480
sort of uh were we paying attention

506
00:18:44,480 --> 00:18:45,440
within a month or two

507
00:18:45,440 --> 00:18:48,400
oh yes oh yes now we got it um and what

508
00:18:48,400 --> 00:18:50,240
we found is that 4096

509
00:18:50,240 --> 00:18:53,120
dropped from 84 percent to 70 and some

510
00:18:53,120 --> 00:18:54,080
other sizes

511
00:18:54,080 --> 00:18:56,720
came up you'll see in the orange down

512
00:18:56,720 --> 00:18:58,480
the bottom of the screen here

513
00:18:58,480 --> 00:19:00,960
that we saw the rise oddly enough of a

514
00:19:00,960 --> 00:19:03,679
range some value between you know 1440

515
00:19:03,679 --> 00:19:06,000
or thereabouts or 1400

516
00:19:06,000 --> 00:19:10,320
so let's just divide this into two

517
00:19:10,320 --> 00:19:13,440
the buffer size greater than the mtu

518
00:19:13,440 --> 00:19:16,320
fragmentation is okay semi-big packets i

519
00:19:16,320 --> 00:19:17,120
can cope

520
00:19:17,120 --> 00:19:21,440
says the querier fragmentation is not

521
00:19:21,440 --> 00:19:23,120
allowed the buffer size is less than the

522
00:19:23,120 --> 00:19:24,160
mtu

523
00:19:24,160 --> 00:19:25,760
and what we actually found if you look

524
00:19:25,760 --> 00:19:27,600
at it that way was that

525
00:19:27,600 --> 00:19:29,919
fragmentation is okay dropped as a

526
00:19:29,919 --> 00:19:32,640
signal from around 85 percent

527
00:19:32,640 --> 00:19:35,919
down to around 75

528
00:19:35,919 --> 00:19:39,120
by december so in the terms of the size

529
00:19:39,120 --> 00:19:40,720
of the dns

530
00:19:40,720 --> 00:19:43,280
and the size of the internet having a

531
00:19:43,280 --> 00:19:45,360
response within a couple of months is

532
00:19:45,360 --> 00:19:47,600
actually not bad at all

533
00:19:47,600 --> 00:19:49,919
so yes it did have an effect and

534
00:19:49,919 --> 00:19:52,400
interestingly on the low size

535
00:19:52,400 --> 00:19:54,320
yes it went up the buffer size less than

536
00:19:54,320 --> 00:19:56,320
the mtu went up from around

537
00:19:56,320 --> 00:19:59,520
10 11 up to over 22 percent

538
00:19:59,520 --> 00:20:02,640
of users so you know yes it seemed to

539
00:20:02,640 --> 00:20:04,400
work

540
00:20:04,400 --> 00:20:07,360
let's look down at that low value that's

541
00:20:07,360 --> 00:20:09,679
22 percent

542
00:20:09,679 --> 00:20:13,360
did we do 1232 well that's the green

543
00:20:13,360 --> 00:20:14,320
line

544
00:20:14,320 --> 00:20:17,120
two percent two percent flag day whoa

545
00:20:17,120 --> 00:20:18,000
four percent

546
00:20:18,000 --> 00:20:21,679
four percent five percent yay

547
00:20:21,679 --> 00:20:25,120
but what about 1400 well

548
00:20:25,120 --> 00:20:28,240
even more nothing nothing nothing

549
00:20:28,240 --> 00:20:28,720
nothing

550
00:20:28,720 --> 00:20:32,159
whoa up around seven percent

551
00:20:32,159 --> 00:20:35,679
so 12 32 new year some

552
00:20:35,679 --> 00:20:38,640
others no let's do 1400. and oddly

553
00:20:38,640 --> 00:20:39,360
enough

554
00:20:39,360 --> 00:20:41,039
everyone's kind of pick your favorite

555
00:20:41,039 --> 00:20:44,320
number because we actually observed 284

556
00:20:44,320 --> 00:20:45,919
different buffer sizes

557
00:20:45,919 --> 00:20:48,000
sitting somewhere between a low point of

558
00:20:48,000 --> 00:20:49,520
5 12 of course

559
00:20:49,520 --> 00:20:52,559
and a high point of 1472 so

560
00:20:52,559 --> 00:20:54,559
you know instead of having a relatively

561
00:20:54,559 --> 00:20:56,799
uniform thing that everyone uses

562
00:20:56,799 --> 00:20:59,919
roll your own is the flavor of the month

563
00:20:59,919 --> 00:21:02,559
with eating cereal buffer sizes and kind

564
00:21:02,559 --> 00:21:04,240
of when we get into this role your own

565
00:21:04,240 --> 00:21:05,440
environment

566
00:21:05,440 --> 00:21:07,120
you kind of wonder what's going on are

567
00:21:07,120 --> 00:21:08,880
we all just rolling a dice

568
00:21:08,880 --> 00:21:11,280
you know oh pick a number any numbers

569
00:21:11,280 --> 00:21:13,840
good enough

570
00:21:13,919 --> 00:21:16,960
or is there something behind this

571
00:21:16,960 --> 00:21:21,679
and if there is what's the right number

572
00:21:21,679 --> 00:21:23,919
should we use a low value for this

573
00:21:23,919 --> 00:21:25,760
yiddin spira buffer size

574
00:21:25,760 --> 00:21:28,400
and switch early or should we use a high

575
00:21:28,400 --> 00:21:30,480
value and switch late so let's just

576
00:21:30,480 --> 00:21:32,320
understand the dns because we're trying

577
00:21:32,320 --> 00:21:32,640
to

578
00:21:32,640 --> 00:21:35,919
carve our way through and satisfy almost

579
00:21:35,919 --> 00:21:38,640
two parameters at once

580
00:21:38,640 --> 00:21:42,960
everyone is intolerant of delay

581
00:21:42,960 --> 00:21:46,320
and so the dns on a good day in fact the

582
00:21:46,320 --> 00:21:48,400
dns should

583
00:21:48,400 --> 00:21:52,000
ask a simple query and get an answer

584
00:21:52,000 --> 00:21:55,280
one udp round trip no handshake no

585
00:21:55,280 --> 00:21:55,919
nothing

586
00:21:55,919 --> 00:21:58,480
the dns needs to be fast that's what we

587
00:21:58,480 --> 00:22:00,159
expect of it

588
00:22:00,159 --> 00:22:04,159
because that's speed is that first goal

589
00:22:04,159 --> 00:22:05,520
but the problem is that when that

590
00:22:05,520 --> 00:22:07,200
doesn't work

591
00:22:07,200 --> 00:22:10,080
you have to then pick it up and fix it

592
00:22:10,080 --> 00:22:10,720
up

593
00:22:10,720 --> 00:22:12,240
how do you know when you haven't got an

594
00:22:12,240 --> 00:22:14,480
answer in the dns

595
00:22:14,480 --> 00:22:17,039
timeout so all of a sudden when it

596
00:22:17,039 --> 00:22:18,799
doesn't work

597
00:22:18,799 --> 00:22:22,320
time stretches out up into seconds

598
00:22:22,320 --> 00:22:24,320
and as we've already found out time and

599
00:22:24,320 --> 00:22:25,840
time again

600
00:22:25,840 --> 00:22:29,919
users clock their time in milliseconds

601
00:22:29,919 --> 00:22:33,200
the dns should be completely invisible

602
00:22:33,200 --> 00:22:35,520
we shouldn't see it work and so when it

603
00:22:35,520 --> 00:22:37,919
takes five seconds to get an answer

604
00:22:37,919 --> 00:22:39,760
we've already raised the flag saying the

605
00:22:39,760 --> 00:22:41,600
internet's broken

606
00:22:41,600 --> 00:22:44,960
so we can't tolerate

607
00:22:44,960 --> 00:22:48,640
unreliability so should we switch early

608
00:22:48,640 --> 00:22:50,559
well there's a time penalty because if

609
00:22:50,559 --> 00:22:52,240
we go to tcp too early

610
00:22:52,240 --> 00:22:55,440
tcp takes time should we switch late

611
00:22:55,440 --> 00:22:57,520
well if we get it wrong and switch too

612
00:22:57,520 --> 00:23:00,000
late we get udp packet loss

613
00:23:00,000 --> 00:23:02,000
so we're trying to compromise between

614
00:23:02,000 --> 00:23:03,760
the two

615
00:23:03,760 --> 00:23:06,799
what do we know about ip well the first

616
00:23:06,799 --> 00:23:08,320
thing we know about ip is we really

617
00:23:08,320 --> 00:23:11,280
don't understand packet sizes

618
00:23:11,280 --> 00:23:13,600
this little table is kind of interesting

619
00:23:13,600 --> 00:23:14,480
um

620
00:23:14,480 --> 00:23:17,600
in v4 if you look at the minimum assured

621
00:23:17,600 --> 00:23:20,640
unfragmented packet size what can i

622
00:23:20,640 --> 00:23:24,159
send through the network

623
00:23:24,159 --> 00:23:27,440
that won't fragment well in v4

624
00:23:27,440 --> 00:23:30,640
it was 68 octets oddly enough bigger

625
00:23:30,640 --> 00:23:31,919
than an atm cell

626
00:23:31,919 --> 00:23:35,200
but not by much but bigger but certainly

627
00:23:35,200 --> 00:23:36,080
a lot less

628
00:23:36,080 --> 00:23:39,280
than the ethernet 1500 octet value that

629
00:23:39,280 --> 00:23:41,679
became a de facto standard

630
00:23:41,679 --> 00:23:45,039
when we came back in v6 sort of 10 15

631
00:23:45,039 --> 00:23:46,960
years later and thought well maybe that

632
00:23:46,960 --> 00:23:48,240
was too small

633
00:23:48,240 --> 00:23:50,320
the minimum assured unfragmented size

634
00:23:50,320 --> 00:23:52,240
that all compliant networks have to

635
00:23:52,240 --> 00:23:53,120
handle

636
00:23:53,120 --> 00:23:56,000
is actually much much larger at 1280

637
00:23:56,000 --> 00:23:57,200
octets

638
00:23:57,200 --> 00:24:00,240
so in some ways a big improvement

639
00:24:00,240 --> 00:24:03,440
what should hosts accept fragmented or

640
00:24:03,440 --> 00:24:04,000
not

641
00:24:04,000 --> 00:24:05,840
if i send you a packet i don't care what

642
00:24:05,840 --> 00:24:08,640
gets mangled in inside the network

643
00:24:08,640 --> 00:24:11,919
what are you assured to actually pick up

644
00:24:11,919 --> 00:24:14,960
well in v4 576.

645
00:24:14,960 --> 00:24:17,679
if i send you 577 you might not

646
00:24:17,679 --> 00:24:19,520
necessarily pick it up in the host

647
00:24:19,520 --> 00:24:20,960
you're allowed to drop it

648
00:24:20,960 --> 00:24:25,520
bizarre at v6 that number isn't 1280

649
00:24:25,520 --> 00:24:28,320
that number's actually 1500 that's the

650
00:24:28,320 --> 00:24:29,679
packet that is meant

651
00:24:29,679 --> 00:24:32,080
to be able to make it in the host almost

652
00:24:32,080 --> 00:24:34,000
irrespective of the network

653
00:24:34,000 --> 00:24:38,400
what's the maximum packet size v4 65 000

654
00:24:38,400 --> 00:24:39,919
good i'm getting sleepy that's 2 to the

655
00:24:39,919 --> 00:24:42,480
16th whatever that is in v6

656
00:24:42,480 --> 00:24:45,120
it's 2 to the 16th unless and the unless

657
00:24:45,120 --> 00:24:45,600
is

658
00:24:45,600 --> 00:24:47,600
unless you go crazy because you know

659
00:24:47,600 --> 00:24:49,039
jumbo graham crazy

660
00:24:49,039 --> 00:24:50,559
and yes that's an awfully big number

661
00:24:50,559 --> 00:24:52,320
it's 2 to the 32.

662
00:24:52,320 --> 00:24:56,000
so okay why choose 1232

663
00:24:56,000 --> 00:24:59,679
why settle on a v6 value and and

664
00:24:59,679 --> 00:25:03,039
why trigger tcp so early

665
00:25:03,039 --> 00:25:05,279
how bad is udp fragmentation loss i'm

666
00:25:05,279 --> 00:25:06,080
like are we

667
00:25:06,080 --> 00:25:08,159
are we actually triggering too early and

668
00:25:08,159 --> 00:25:09,760
quite frankly is tcp

669
00:25:09,760 --> 00:25:12,240
really reliable i'm like yes the world

670
00:25:12,240 --> 00:25:14,159
runs on tcp

671
00:25:14,159 --> 00:25:18,000
but that's tcp over port 443

672
00:25:18,000 --> 00:25:21,039
what about tcp over port 53

673
00:25:21,039 --> 00:25:25,520
still reliable let's look

674
00:25:25,520 --> 00:25:27,440
before we look at some data there are

675
00:25:27,440 --> 00:25:29,120
some measurement challenges

676
00:25:29,120 --> 00:25:31,200
the way we do large scale measurement is

677
00:25:31,200 --> 00:25:32,960
not by a small collection of active

678
00:25:32,960 --> 00:25:35,120
probes that has its own strengths and

679
00:25:35,120 --> 00:25:37,039
and certainly they're very good

680
00:25:37,039 --> 00:25:39,039
but we actually use advertisements we do

681
00:25:39,039 --> 00:25:41,520
about 12 million a day across the entire

682
00:25:41,520 --> 00:25:42,320
internet

683
00:25:42,320 --> 00:25:44,400
and we embed the measurement code inside

684
00:25:44,400 --> 00:25:46,400
the ad so we get an enormous amount of

685
00:25:46,400 --> 00:25:47,120
data

686
00:25:47,120 --> 00:25:49,600
across the entire internet how do you

687
00:25:49,600 --> 00:25:50,960
tell if the dns gives you an

688
00:25:50,960 --> 00:25:52,720
answer well you're the host you're just

689
00:25:52,720 --> 00:25:54,240
running an ad script

690
00:25:54,240 --> 00:25:56,799
very hard to instrument so we use the

691
00:25:56,799 --> 00:25:59,360
dns to instrument itself

692
00:25:59,360 --> 00:26:02,080
we actually use glueless delegation so

693
00:26:02,080 --> 00:26:04,480
we force a resolver to explicitly

694
00:26:04,480 --> 00:26:06,880
resolve the name of a name server

695
00:26:06,880 --> 00:26:08,559
and then see if it resumes its primary

696
00:26:08,559 --> 00:26:10,080
resolution task

697
00:26:10,080 --> 00:26:12,880
this way the dns itself tells us the

698
00:26:12,880 --> 00:26:14,240
authoritative server

699
00:26:14,240 --> 00:26:16,799
whether or not the resolution happened

700
00:26:16,799 --> 00:26:18,640
and how do we experiment with dns

701
00:26:18,640 --> 00:26:19,360
behavior

702
00:26:19,360 --> 00:26:22,799
we pad we pad at the front so you can't

703
00:26:22,799 --> 00:26:24,799
use a truncated fragment to get the

704
00:26:24,799 --> 00:26:25,760
answer

705
00:26:25,760 --> 00:26:28,080
and the response size we use is actually

706
00:26:28,080 --> 00:26:29,360
selected random

707
00:26:29,360 --> 00:26:32,400
from 11 pad sizes and we also use a

708
00:26:32,400 --> 00:26:33,200
control

709
00:26:33,200 --> 00:26:35,200
unpadded just to make sure you got

710
00:26:35,200 --> 00:26:36,799
something

711
00:26:36,799 --> 00:26:38,960
the other limitation because there was a

712
00:26:38,960 --> 00:26:40,799
previous talk by william taurup a couple

713
00:26:40,799 --> 00:26:42,159
of oaks ago

714
00:26:42,159 --> 00:26:44,080
that looked at a bigger picture we're

715
00:26:44,080 --> 00:26:46,640
looking at explicitly a small picture in

716
00:26:46,640 --> 00:26:48,159
the middle of the network

717
00:26:48,159 --> 00:26:50,960
from recursive to authoritative it

718
00:26:50,960 --> 00:26:52,960
doesn't measure the edge

719
00:26:52,960 --> 00:26:54,960
so in some cases measuring the edge

720
00:26:54,960 --> 00:26:56,640
gives you a somewhat different picture

721
00:26:56,640 --> 00:26:58,240
of the dns

722
00:26:58,240 --> 00:26:59,600
so that's the first thing we're

723
00:26:59,600 --> 00:27:02,240
measuring the middle and secondly

724
00:27:02,240 --> 00:27:04,880
we're resolving name server names not

725
00:27:04,880 --> 00:27:06,480
target names

726
00:27:06,480 --> 00:27:10,080
and for some dns recursive resolvers

727
00:27:10,080 --> 00:27:12,240
the eds zero buffer size is actually

728
00:27:12,240 --> 00:27:13,840
dropped

729
00:27:13,840 --> 00:27:15,520
when you're actually resolving the name

730
00:27:15,520 --> 00:27:17,279
of a name server

731
00:27:17,279 --> 00:27:18,840
and that happens an awful lot of the

732
00:27:18,840 --> 00:27:21,679
time so either the e and s zero buffer

733
00:27:21,679 --> 00:27:22,880
size comes down

734
00:27:22,880 --> 00:27:24,799
or it actually disappears forever out of

735
00:27:24,799 --> 00:27:26,080
the query at all

736
00:27:26,080 --> 00:27:29,200
which gives you a default of 512.

737
00:27:29,200 --> 00:27:31,960
30 of the cases what we measured was

738
00:27:31,960 --> 00:27:33,279
4096

739
00:27:33,279 --> 00:27:36,640
became nothing becomes 512.

740
00:27:36,640 --> 00:27:38,799
so that's certainly a factor in our

741
00:27:38,799 --> 00:27:40,159
measurement

742
00:27:40,159 --> 00:27:43,200
so the base test we did this

743
00:27:43,200 --> 00:27:45,440
four million times for each of these

744
00:27:45,440 --> 00:27:46,240
numbers

745
00:27:46,240 --> 00:27:48,640
and what we find is on the whole yes

746
00:27:48,640 --> 00:27:50,080
sorry to interrupt you we haven't seen

747
00:27:50,080 --> 00:27:54,000
your slides move on since slide 11.

748
00:27:54,000 --> 00:27:57,120
um i'm having a final time

749
00:27:57,120 --> 00:28:00,480
um i have no idea can i

750
00:28:00,480 --> 00:28:05,840
stop sharing i have stopped

751
00:28:07,520 --> 00:28:10,640
i will move to

752
00:28:10,640 --> 00:28:14,000
powerpoint yay

753
00:28:14,000 --> 00:28:17,840
and share that

754
00:28:20,320 --> 00:28:21,919
i'm not sure what the best way to share

755
00:28:21,919 --> 00:28:24,559
this is let me try the desktop

756
00:28:24,559 --> 00:28:31,840
sorry about this um

757
00:28:34,799 --> 00:28:36,559
my screen's gone completely dark as

758
00:28:36,559 --> 00:28:38,000
powerpoint picks up

759
00:28:38,000 --> 00:28:41,039
aren't we on

760
00:28:41,360 --> 00:28:45,039
slide 12 brett yeah fantastic

761
00:28:45,039 --> 00:28:48,159
yay powerpoint um i said all this

762
00:28:48,159 --> 00:28:51,440
i said all that i was up to here

763
00:28:51,440 --> 00:28:55,279
a page of detailed numbers i always find

764
00:28:55,279 --> 00:28:57,600
it really hard to talk about numbers

765
00:28:57,600 --> 00:29:01,440
two things you should know by default

766
00:29:01,440 --> 00:29:03,919
we're getting a pretty low failure rate

767
00:29:03,919 --> 00:29:05,120
half of a percent

768
00:29:05,120 --> 00:29:07,840
noise in the system i can live with that

769
00:29:07,840 --> 00:29:08,240
for

770
00:29:08,240 --> 00:29:11,600
big answers 470 and higher the onset of

771
00:29:11,600 --> 00:29:12,960
fragmentation

772
00:29:12,960 --> 00:29:14,960
the failure rate inside our measurement

773
00:29:14,960 --> 00:29:17,919
jumps to 2.6

774
00:29:17,919 --> 00:29:19,760
which is actually reflective of the fact

775
00:29:19,760 --> 00:29:21,919
that in the current setup

776
00:29:21,919 --> 00:29:24,880
with most resolvers giving us 4096 as a

777
00:29:24,880 --> 00:29:27,279
udp buffer size

778
00:29:27,279 --> 00:29:28,960
there's still a lot of failure in this

779
00:29:28,960 --> 00:29:31,039
system 2.6

780
00:29:31,039 --> 00:29:34,159
is not acceptable so out of those tests

781
00:29:34,159 --> 00:29:36,960
fragmented answers don't work which is

782
00:29:36,960 --> 00:29:38,720
kind of the motivation behind the flag

783
00:29:38,720 --> 00:29:40,399
day so this is good

784
00:29:40,399 --> 00:29:42,640
now let's have a look at those

785
00:29:42,640 --> 00:29:44,080
experiments

786
00:29:44,080 --> 00:29:47,120
that actually got a truncated answer and

787
00:29:47,120 --> 00:29:49,200
shifted to tcp

788
00:29:49,200 --> 00:29:53,120
for low values of padding the tcp use

789
00:29:53,120 --> 00:29:54,559
was around 14

790
00:29:54,559 --> 00:29:56,880
or so these are all those resolvers that

791
00:29:56,880 --> 00:29:58,720
when they're resolving name servers

792
00:29:58,720 --> 00:30:00,720
don't give us a udp buffer size so we

793
00:30:00,720 --> 00:30:02,159
send a truncated answer

794
00:30:02,159 --> 00:30:05,840
you flip to tcp and tcp is relatively

795
00:30:05,840 --> 00:30:06,799
reliable

796
00:30:06,799 --> 00:30:08,880
the failure rate of tcp for those low

797
00:30:08,880 --> 00:30:11,520
answers is around one percent

798
00:30:11,520 --> 00:30:14,399
oddly enough for large answers where the

799
00:30:14,399 --> 00:30:16,480
answer is higher than 1500

800
00:30:16,480 --> 00:30:21,200
you flip to tcp tcp is always reliable

801
00:30:21,200 --> 00:30:25,200
no it's not and for big answers

802
00:30:25,200 --> 00:30:28,399
where there is more than one tcp segment

803
00:30:28,399 --> 00:30:30,000
to give you the answer

804
00:30:30,000 --> 00:30:33,200
the failure rate doubles so it's around

805
00:30:33,200 --> 00:30:35,120
1.9 percent

806
00:30:35,120 --> 00:30:38,879
so what does it fail

807
00:30:39,520 --> 00:30:42,559
sorry i want to tell you that you have

808
00:30:42,559 --> 00:30:44,080
five minutes remaining

809
00:30:44,080 --> 00:30:48,080
until q a no problem um so a truncated

810
00:30:48,080 --> 00:30:50,320
response with no follow-up tcp

811
00:30:50,320 --> 00:30:52,080
happens a lot of the time and

812
00:30:52,080 --> 00:30:54,000
interestingly and i really don't know

813
00:30:54,000 --> 00:30:55,039
why

814
00:30:55,039 --> 00:30:57,919
that is a higher failure rate for a

815
00:30:57,919 --> 00:31:00,880
larger answer

816
00:31:01,600 --> 00:31:04,799
no clear reason why also you notice

817
00:31:04,799 --> 00:31:06,240
there's an mtu problem

818
00:31:06,240 --> 00:31:08,559
where i don't get an ack when the answer

819
00:31:08,559 --> 00:31:10,159
is a big segment

820
00:31:10,159 --> 00:31:12,240
so a quarter of the cases of failure for

821
00:31:12,240 --> 00:31:13,679
little tcp

822
00:31:13,679 --> 00:31:16,720
half the cases of failure for large tcp

823
00:31:16,720 --> 00:31:19,440
segments and lastly there's a large

824
00:31:19,440 --> 00:31:21,279
failure rate where the tcp session

825
00:31:21,279 --> 00:31:24,080
works just fine the data gets act the

826
00:31:24,080 --> 00:31:26,080
resolver doesn't move on

827
00:31:26,080 --> 00:31:29,600
so large answers still fail in tcp

828
00:31:29,600 --> 00:31:33,200
interesting so that just says all that

829
00:31:33,200 --> 00:31:36,559
what if i force tcp what if i always

830
00:31:36,559 --> 00:31:38,480
send back truncated

831
00:31:38,480 --> 00:31:40,880
well now you get to see the failure rate

832
00:31:40,880 --> 00:31:42,000
coming from

833
00:31:42,000 --> 00:31:45,360
tcp itself around 1.8 percent for large

834
00:31:45,360 --> 00:31:46,159
answers

835
00:31:46,159 --> 00:31:49,279
1.6 for smaller answers

836
00:31:49,279 --> 00:31:53,440
interestingly v6 works better why is v4

837
00:31:53,440 --> 00:31:56,320
still at around 2 and i think the answer

838
00:31:56,320 --> 00:31:56,960
is

839
00:31:56,960 --> 00:31:59,600
there are a number of relatively ancient

840
00:31:59,600 --> 00:32:00,960
resolvers

841
00:32:00,960 --> 00:32:02,960
that still haven't quite figured out

842
00:32:02,960 --> 00:32:04,559
their security front ends their

843
00:32:04,559 --> 00:32:05,600
firewalls

844
00:32:05,600 --> 00:32:08,720
that yes the dns can use tcp and my

845
00:32:08,720 --> 00:32:11,039
suspicion is that the failures in v4

846
00:32:11,039 --> 00:32:12,480
are actually failures at the front end

847
00:32:12,480 --> 00:32:16,159
not the back end what about udp

848
00:32:16,159 --> 00:32:17,760
um well let's just have a look at the

849
00:32:17,760 --> 00:32:20,000
subset here of udp use

850
00:32:20,000 --> 00:32:22,240
and yes there is failure for fragmented

851
00:32:22,240 --> 00:32:25,600
udp and three percent or so of all cases

852
00:32:25,600 --> 00:32:28,640
so the smaller response um some

853
00:32:28,640 --> 00:32:31,360
firewalls are even worse than you think

854
00:32:31,360 --> 00:32:34,320
any dns response on udp port 53 greater

855
00:32:34,320 --> 00:32:36,640
than 512 bytes

856
00:32:36,640 --> 00:32:39,440
not going to take it larger than that

857
00:32:39,440 --> 00:32:40,399
well

858
00:32:40,399 --> 00:32:43,360
fragmentation filtering so let's see how

859
00:32:43,360 --> 00:32:45,279
bad this problem is if we force it so

860
00:32:45,279 --> 00:32:46,880
we're going to be naughty again

861
00:32:46,880 --> 00:32:48,640
rather than going low we're going to go

862
00:32:48,640 --> 00:32:51,600
high i don't care what you said

863
00:32:51,600 --> 00:32:54,159
i believe you said the dns the eds era

864
00:32:54,159 --> 00:32:56,080
size was 4096. i'm just going to

865
00:32:56,080 --> 00:32:58,640
substitute my own value because you know

866
00:32:58,640 --> 00:33:00,880
my reality is always better than yours

867
00:33:00,880 --> 00:33:01,760
this is

868
00:33:01,760 --> 00:33:03,919
a protocol failure i'm being naughty at

869
00:33:03,919 --> 00:33:04,799
this point

870
00:33:04,799 --> 00:33:07,519
we're saying you know we're telling lies

871
00:33:07,519 --> 00:33:08,799
the onset of udp

872
00:33:08,799 --> 00:33:10,720
fragmentation happens and the failure

873
00:33:10,720 --> 00:33:12,799
rate when we do that is extraordinarily

874
00:33:12,799 --> 00:33:13,440
high

875
00:33:13,440 --> 00:33:16,240
around 15 percent interestingly this

876
00:33:16,240 --> 00:33:16,799
time

877
00:33:16,799 --> 00:33:19,440
the udp failure rate in v6 is

878
00:33:19,440 --> 00:33:21,039
significantly higher

879
00:33:21,039 --> 00:33:23,679
than the udp failure rate in v4 when we

880
00:33:23,679 --> 00:33:26,240
fragment

881
00:33:26,559 --> 00:33:29,840
lower values the failure rate in udp

882
00:33:29,840 --> 00:33:32,880
is higher in v4 than v6

883
00:33:32,880 --> 00:33:36,159
odd so part of the problem two to three

884
00:33:36,159 --> 00:33:37,679
percent of the cases

885
00:33:37,679 --> 00:33:41,200
of users not resolvers of users

886
00:33:41,200 --> 00:33:43,840
um if i send a response larger than the

887
00:33:43,840 --> 00:33:45,679
eadiness area buffer size

888
00:33:45,679 --> 00:33:49,679
the resolver in in question goes near

889
00:33:49,679 --> 00:33:51,919
i don't accept that i said no higher

890
00:33:51,919 --> 00:33:53,440
than whatever it was i said

891
00:33:53,440 --> 00:33:55,519
you sent me a larger answer not

892
00:33:55,519 --> 00:33:56,640
listening

893
00:33:56,640 --> 00:33:58,080
it seems weird because you got the

894
00:33:58,080 --> 00:33:59,519
answer but you know you're just not

895
00:33:59,519 --> 00:34:01,039
going to accept it

896
00:34:01,039 --> 00:34:03,200
and of course the number of resolvers in

897
00:34:03,200 --> 00:34:04,799
the case of users 11

898
00:34:04,799 --> 00:34:07,200
in v4 and 15 and v6 just don't like

899
00:34:07,200 --> 00:34:09,199
fragmentation

900
00:34:09,199 --> 00:34:12,639
so we're now getting a picture

901
00:34:12,639 --> 00:34:15,359
of what's going on here and the picture

902
00:34:15,359 --> 00:34:16,320
is firstly

903
00:34:16,320 --> 00:34:18,560
that we've repurposed the eds zero

904
00:34:18,560 --> 00:34:20,000
buffer size

905
00:34:20,000 --> 00:34:23,119
it's no longer what it said it was help

906
00:34:23,119 --> 00:34:25,119
improve the scalability of dns by

907
00:34:25,119 --> 00:34:26,159
avoiding

908
00:34:26,159 --> 00:34:28,239
early truncation by avoiding the

909
00:34:28,239 --> 00:34:30,079
widespread use of tcp

910
00:34:30,079 --> 00:34:31,918
that's not what we're purposing this

911
00:34:31,918 --> 00:34:33,199
buffer size for

912
00:34:33,199 --> 00:34:34,879
oddly enough it's a fragmentation

913
00:34:34,879 --> 00:34:36,480
avoidance signal

914
00:34:36,480 --> 00:34:39,679
it's it's basically saying don't send

915
00:34:39,679 --> 00:34:40,560
large udp

916
00:34:40,560 --> 00:34:44,320
packets normally in fragmentation it's

917
00:34:44,320 --> 00:34:45,679
the sender

918
00:34:45,679 --> 00:34:48,159
that controls that signaling because

919
00:34:48,159 --> 00:34:50,560
it's the sender that receives the icmp

920
00:34:50,560 --> 00:34:52,399
it's the sender that gets the knowledge

921
00:34:52,399 --> 00:34:53,918
of the path mtu

922
00:34:53,918 --> 00:34:57,920
the dns is decided for reasons

923
00:34:57,920 --> 00:35:01,040
god knows what reasons but reasons that

924
00:35:01,040 --> 00:35:02,480
it's the receiver

925
00:35:02,480 --> 00:35:04,480
that controls that signaling even though

926
00:35:04,480 --> 00:35:05,599
the receiver

927
00:35:05,599 --> 00:35:08,800
has no upriori knowledge of the incoming

928
00:35:08,800 --> 00:35:09,680
path

929
00:35:09,680 --> 00:35:11,520
so in some ways some of these problems

930
00:35:11,520 --> 00:35:13,839
are that when we repurpose the udp

931
00:35:13,839 --> 00:35:16,400
eds zero buffer size parameter we're

932
00:35:16,400 --> 00:35:17,920
actually doing it on the wrong side of

933
00:35:17,920 --> 00:35:19,359
the connection

934
00:35:19,359 --> 00:35:20,880
which is a bit of an issue in the long

935
00:35:20,880 --> 00:35:23,520
term um

936
00:35:23,520 --> 00:35:26,560
why persist with udp because it's fast

937
00:35:26,560 --> 00:35:28,880
because when it works it's brilliant and

938
00:35:28,880 --> 00:35:30,800
even up to 1500 octets

939
00:35:30,800 --> 00:35:34,400
1280 doesn't matter 1500 is the number

940
00:35:34,400 --> 00:35:36,800
as long as your total ip payload is

941
00:35:36,800 --> 00:35:38,160
below 1500

942
00:35:38,160 --> 00:35:40,560
in the interior of the network not the

943
00:35:40,560 --> 00:35:42,000
stubs the interior

944
00:35:42,000 --> 00:35:44,640
udp works like a phantom it's just

945
00:35:44,640 --> 00:35:45,839
brilliant

946
00:35:45,839 --> 00:35:48,720
um once you fragment abandon all hope uh

947
00:35:48,720 --> 00:35:50,800
it is horrible the flag day was right in

948
00:35:50,800 --> 00:35:51,760
that

949
00:35:51,760 --> 00:35:55,760
switching to tcp is slow way slow

950
00:35:55,760 --> 00:35:57,599
and it's not perfect it still has a one

951
00:35:57,599 --> 00:35:59,200
to two percent failure rate

952
00:35:59,200 --> 00:36:02,960
so in some ways uh switch late

953
00:36:02,960 --> 00:36:06,240
so what does that mean well 1232 was

954
00:36:06,240 --> 00:36:08,160
actually too low

955
00:36:08,160 --> 00:36:11,839
go up because tcp can't do dynamic path

956
00:36:11,839 --> 00:36:13,200
mtu it's got no

957
00:36:13,200 --> 00:36:15,680
no time budget to do that and the

958
00:36:15,680 --> 00:36:17,599
signaling's on the wrong side

959
00:36:17,599 --> 00:36:21,200
so unfragmented udp then use tcp

960
00:36:21,200 --> 00:36:24,240
avoid fragmented udp

961
00:36:24,240 --> 00:36:26,880
so does one size fit all is the flag day

962
00:36:26,880 --> 00:36:27,599
right

963
00:36:27,599 --> 00:36:31,200
well i don't think so i think 1232 is

964
00:36:31,200 --> 00:36:33,760
too low the early onset of tcp

965
00:36:33,760 --> 00:36:38,320
does have a marginal cost um

966
00:36:38,320 --> 00:36:41,280
quite frankly fragmentation occurs in

967
00:36:41,280 --> 00:36:43,440
different ways and occurs differently

968
00:36:43,440 --> 00:36:45,599
maybe we should look at differentiating

969
00:36:45,599 --> 00:36:47,599
based on the protocol

970
00:36:47,599 --> 00:36:50,560
not on the path quite frankly you need

971
00:36:50,560 --> 00:36:52,400
es0 buffer size should be

972
00:36:52,400 --> 00:36:55,359
lower in v6 by that 20 octet different

973
00:36:55,359 --> 00:36:56,160
in the header

974
00:36:56,160 --> 00:36:58,640
higher in v4 squeeze it as high as you

975
00:36:58,640 --> 00:36:59,359
can

976
00:36:59,359 --> 00:37:01,920
but at the same time and most

977
00:37:01,920 --> 00:37:03,280
importantly

978
00:37:03,280 --> 00:37:06,560
drop the tcp mss in the authoritative

979
00:37:06,560 --> 00:37:07,280
dns

980
00:37:07,280 --> 00:37:10,400
servers because running it at 1500 which

981
00:37:10,400 --> 00:37:13,680
most people do causes a small but

982
00:37:13,680 --> 00:37:17,920
visible amount of path mtu issues in dns

983
00:37:17,920 --> 00:37:20,800
and resolving those takes even more time

984
00:37:20,800 --> 00:37:23,119
so you will do everyone a big favor

985
00:37:23,119 --> 00:37:25,200
in not only dropping your eds zero

986
00:37:25,200 --> 00:37:26,400
buffer size

987
00:37:26,400 --> 00:37:28,560
but at the same time using a much lower

988
00:37:28,560 --> 00:37:30,240
tcp mss setting

989
00:37:30,240 --> 00:37:32,960
and there you can afford to go very low

990
00:37:32,960 --> 00:37:34,839
because the cost is tcp

991
00:37:34,839 --> 00:37:37,920
segmentation not fragmentation

992
00:37:37,920 --> 00:37:40,640
and what it means is that even at 1200

993
00:37:40,640 --> 00:37:41,839
you're losing almost

994
00:37:41,839 --> 00:37:44,320
nothing in terms of protocol efficiency

995
00:37:44,320 --> 00:37:47,119
but gaining a lot in terms of resiliency

996
00:37:47,119 --> 00:37:50,880
and performance that's 20 minutes

997
00:37:50,880 --> 00:37:52,480
if you want to spend a couple of hours

998
00:37:52,480 --> 00:37:54,160
reading through a couple of reports on

999
00:37:54,160 --> 00:37:55,440
all of this and more

1000
00:37:55,440 --> 00:37:57,839
the urls at the bottom of the screen

1001
00:37:57,839 --> 00:37:59,839
thanks a lot

1002
00:37:59,839 --> 00:38:03,440
back to you brett thank you jeff

1003
00:38:03,440 --> 00:38:05,359
um if anyone who has any questions at

1004
00:38:05,359 --> 00:38:07,040
this time please raise your hand

1005
00:38:07,040 --> 00:38:09,200
um and we'll allow you to mute yourself

1006
00:38:09,200 --> 00:38:11,520
or type in the q a box and i'll

1007
00:38:11,520 --> 00:38:13,119
read it out for you i have a couple to

1008
00:38:13,119 --> 00:38:15,200
start off with anyway so

1009
00:38:15,200 --> 00:38:18,560
um first of all jeff giovanni

1010
00:38:18,560 --> 00:38:21,760
maura asks what zones are these servers

1011
00:38:21,760 --> 00:38:23,359
authoritative for

1012
00:38:23,359 --> 00:38:25,680
how many queries per day or month do

1013
00:38:25,680 --> 00:38:27,359
they receive

1014
00:38:27,359 --> 00:38:30,079
uh these servers are authoritative for

1015
00:38:30,079 --> 00:38:30,960
our own

1016
00:38:30,960 --> 00:38:34,079
measurement domain and every single user

1017
00:38:34,079 --> 00:38:35,040
that receives

1018
00:38:35,040 --> 00:38:37,839
one of these ads gets presented with a

1019
00:38:37,839 --> 00:38:40,800
set of unique dns labels to avoid any

1020
00:38:40,800 --> 00:38:41,440
form

1021
00:38:41,440 --> 00:38:44,480
of dns caching there are only a small

1022
00:38:44,480 --> 00:38:46,480
number of authoritative servers

1023
00:38:46,480 --> 00:38:48,720
and for each individual experiment

1024
00:38:48,720 --> 00:38:50,400
there's only one

1025
00:38:50,400 --> 00:38:53,440
so there's only one server for the the

1026
00:38:53,440 --> 00:38:54,560
ad that you get

1027
00:38:54,560 --> 00:38:56,960
so all those queries come to one of my

1028
00:38:56,960 --> 00:38:57,839
servers

1029
00:38:57,839 --> 00:38:59,839
because i can't instrument the user i

1030
00:38:59,839 --> 00:39:01,359
instrument the server

1031
00:39:01,359 --> 00:39:04,480
how many queries per day that's its own

1032
00:39:04,480 --> 00:39:05,839
question

1033
00:39:05,839 --> 00:39:07,760
we send out around 12 million

1034
00:39:07,760 --> 00:39:09,520
experiments per day

1035
00:39:09,520 --> 00:39:11,520
so in theory you'd go oh well i should

1036
00:39:11,520 --> 00:39:13,359
get 12 million queries well

1037
00:39:13,359 --> 00:39:16,480
no the dns is chatty 24

1038
00:39:16,480 --> 00:39:20,800
30 40 million and higher but

1039
00:39:20,800 --> 00:39:24,240
the dns is a gigantic piece of random

1040
00:39:24,240 --> 00:39:24,800
access

1041
00:39:24,800 --> 00:39:27,359
random memory and every query that you

1042
00:39:27,359 --> 00:39:30,160
ask the dns is carefully recorded

1043
00:39:30,160 --> 00:39:32,960
and replayed again and again and again

1044
00:39:32,960 --> 00:39:34,079
and again

1045
00:39:34,079 --> 00:39:37,200
on some days 90 of the queries received

1046
00:39:37,200 --> 00:39:39,440
are echoes from previous experiments

1047
00:39:39,440 --> 00:39:40,400
that happened

1048
00:39:40,400 --> 00:39:43,200
months years ago because the dns never

1049
00:39:43,200 --> 00:39:44,240
forgets

1050
00:39:44,240 --> 00:39:46,640
so how many queries do we get per day on

1051
00:39:46,640 --> 00:39:47,680
a bad day

1052
00:39:47,680 --> 00:39:50,079
hundreds of millions up to billions on a

1053
00:39:50,079 --> 00:39:51,040
good day

1054
00:39:51,040 --> 00:39:54,079
just a few hundred million why

1055
00:39:54,079 --> 00:39:57,200
well do you query log replayers you tell

1056
00:39:57,200 --> 00:39:57,920
me

1057
00:39:57,920 --> 00:40:01,680
thank you thanks chef so moving on we

1058
00:40:01,680 --> 00:40:02,160
have a

1059
00:40:02,160 --> 00:40:06,079
another question from uh yoshitaka haran

1060
00:40:06,079 --> 00:40:08,640
um please could you show me where did

1061
00:40:08,640 --> 00:40:10,640
you measure the buffer size

1062
00:40:10,640 --> 00:40:14,000
data from clients is it measured on ap

1063
00:40:14,000 --> 00:40:17,280
in other servers sorry if i missed it no

1064
00:40:17,280 --> 00:40:20,480
no no no this is the user in the stub

1065
00:40:20,480 --> 00:40:21,359
resolver

1066
00:40:21,359 --> 00:40:24,240
gets a dns question they send that to

1067
00:40:24,240 --> 00:40:26,000
their recursive resolver

1068
00:40:26,000 --> 00:40:28,480
i can't measure that their recursive

1069
00:40:28,480 --> 00:40:29,200
resolver

1070
00:40:29,200 --> 00:40:31,760
or resolvers depending on how they treat

1071
00:40:31,760 --> 00:40:32,800
how they work through

1072
00:40:32,800 --> 00:40:35,280
their etc result.conf then sends it to

1073
00:40:35,280 --> 00:40:36,400
the authoritative

1074
00:40:36,400 --> 00:40:39,200
so as i said on slide and i don't know

1075
00:40:39,200 --> 00:40:40,800
maybe you missed it it was slide

1076
00:40:40,800 --> 00:40:44,240
four five six or seven or something as i

1077
00:40:44,240 --> 00:40:44,960
said

1078
00:40:44,960 --> 00:40:47,920
um what we're measuring is between the

1079
00:40:47,920 --> 00:40:49,520
recursive

1080
00:40:49,520 --> 00:40:52,160
and the authoritative we're not

1081
00:40:52,160 --> 00:40:53,760
measuring

1082
00:40:53,760 --> 00:40:55,200
we're not measuring the edge of the

1083
00:40:55,200 --> 00:40:56,800
network so

1084
00:40:56,800 --> 00:41:01,280
in some ways yes this is

1085
00:41:01,280 --> 00:41:03,520
a measurement of the interior not the

1086
00:41:03,520 --> 00:41:05,520
edge we have no particular knowledge of

1087
00:41:05,520 --> 00:41:07,839
the edge

1088
00:41:08,319 --> 00:41:10,800
thank you jeff uh so now i have a

1089
00:41:10,800 --> 00:41:11,839
question from

1090
00:41:11,839 --> 00:41:16,319
andre surio i'm gonna allow him to

1091
00:41:16,319 --> 00:41:20,319
unmute himself off you go on

1092
00:41:20,319 --> 00:41:24,319
hi this is andre i see so i think that

1093
00:41:24,319 --> 00:41:27,359
there's um the problem in the in this

1094
00:41:27,359 --> 00:41:28,480
particular flag day

1095
00:41:28,480 --> 00:41:31,440
is the mix between the vendor and the

1096
00:41:31,440 --> 00:41:32,800
operator

1097
00:41:32,800 --> 00:41:36,480
so for for vendor we pick

1098
00:41:36,480 --> 00:41:39,119
really conservative value but as an

1099
00:41:39,119 --> 00:41:39,839
operator

1100
00:41:39,839 --> 00:41:41,760
you could go higher and that's actually

1101
00:41:41,760 --> 00:41:43,040
what we recommend in the

1102
00:41:43,040 --> 00:41:45,920
in the bind documentation so this is

1103
00:41:45,920 --> 00:41:47,920
this is the problem that as a vendor we

1104
00:41:47,920 --> 00:41:48,960
need to pick

1105
00:41:48,960 --> 00:41:51,200
a conservative value so it works for

1106
00:41:51,200 --> 00:41:52,079
everybody

1107
00:41:52,079 --> 00:41:54,319
but as an operator who operates your own

1108
00:41:54,319 --> 00:41:55,839
network you can go up

1109
00:41:55,839 --> 00:41:58,480
higher to to the values you are

1110
00:41:58,480 --> 00:42:00,960
proposing

1111
00:42:00,960 --> 00:42:04,240
um i think there was a vendor andre

1112
00:42:04,240 --> 00:42:08,319
my recommendation here is to actually

1113
00:42:08,319 --> 00:42:11,760
tune your query parameter based

1114
00:42:11,760 --> 00:42:14,880
hopefully on the foreknowledge of

1115
00:42:14,880 --> 00:42:17,680
the protocol you're working across

1116
00:42:17,680 --> 00:42:19,599
because you actually can squeeze

1117
00:42:19,599 --> 00:42:20,640
performance

1118
00:42:20,640 --> 00:42:23,440
even in a pre-setting by understanding

1119
00:42:23,440 --> 00:42:23,839
that

1120
00:42:23,839 --> 00:42:26,880
subtle difference between v4 and v6

1121
00:42:26,880 --> 00:42:30,319
and you can run it slightly larger in v4

1122
00:42:30,319 --> 00:42:32,240
the other thing that i think should come

1123
00:42:32,240 --> 00:42:34,000
by default

1124
00:42:34,000 --> 00:42:37,200
some versions of dns resolver code

1125
00:42:37,200 --> 00:42:40,000
allow the server not the query to set a

1126
00:42:40,000 --> 00:42:42,720
maximum median s0 size so sort of

1127
00:42:42,720 --> 00:42:45,920
client you've said 4096

1128
00:42:45,920 --> 00:42:48,000
i don't want to go that way i'm going to

1129
00:42:48,000 --> 00:42:49,280
cap it at

1130
00:42:49,280 --> 00:42:51,520
whatever value you save and that should

1131
00:42:51,520 --> 00:42:53,680
also be part of the default setting

1132
00:42:53,680 --> 00:42:55,760
that you should at the server level

1133
00:42:55,760 --> 00:42:57,359
inside the vendor code

1134
00:42:57,359 --> 00:42:59,680
also be going i'm going to bring this

1135
00:42:59,680 --> 00:43:01,839
down as part of the default setting

1136
00:43:01,839 --> 00:43:03,520
you can lift it up if you're feeling

1137
00:43:03,520 --> 00:43:06,240
like you know i love fragmentation

1138
00:43:06,240 --> 00:43:08,160
but you you know by default shouldn't be

1139
00:43:08,160 --> 00:43:09,359
doing that

1140
00:43:09,359 --> 00:43:11,359
so yes i understand the default setting

1141
00:43:11,359 --> 00:43:13,119
andre but what i'm saying is perhaps you

1142
00:43:13,119 --> 00:43:14,240
should think about

1143
00:43:14,240 --> 00:43:16,640
a default setting that actually works by

1144
00:43:16,640 --> 00:43:18,000
protocol difference

1145
00:43:18,000 --> 00:43:19,359
and the other thing i think would make a

1146
00:43:19,359 --> 00:43:21,040
huge amount of difference

1147
00:43:21,040 --> 00:43:23,520
is to play with the tcp mss size

1148
00:43:23,520 --> 00:43:24,160
settings

1149
00:43:24,160 --> 00:43:26,720
on the tcp socket parameter because if

1150
00:43:26,720 --> 00:43:28,319
you can bring that down

1151
00:43:28,319 --> 00:43:30,240
there's a two percent performance margin

1152
00:43:30,240 --> 00:43:32,480
you can actually extract out of tcp

1153
00:43:32,480 --> 00:43:34,640
because large segments are not that

1154
00:43:34,640 --> 00:43:40,240
reliable in today's internet

1155
00:43:40,240 --> 00:43:42,160
okay thanks very much jeff um so that's

1156
00:43:42,160 --> 00:43:43,440
the end of the um

1157
00:43:43,440 --> 00:43:46,960
questions um thanks everyone so we'll

1158
00:43:46,960 --> 00:43:47,440
now

1159
00:43:47,440 --> 00:43:50,800
move on to our next presentation

1160
00:43:50,800 --> 00:43:54,240
um uh this is around

1161
00:43:54,240 --> 00:43:57,040
uh uh does the dga work and will be

1162
00:43:57,040 --> 00:43:58,400
delivered by eric

1163
00:43:58,400 --> 00:44:03,200
sarcas from farsight over to your own

1164
00:44:05,520 --> 00:44:09,839
thank you

1165
00:44:17,760 --> 00:44:19,760
all right you see my first slide there

1166
00:44:19,760 --> 00:44:21,200
title slide

1167
00:44:21,200 --> 00:44:23,359
hear me good yeah all good we can hear

1168
00:44:23,359 --> 00:44:24,400
you and see you

1169
00:44:24,400 --> 00:44:27,440
fine thank you great hi i'm uh eric

1170
00:44:27,440 --> 00:44:28,160
ziegas

1171
00:44:28,160 --> 00:44:30,400
i'm with uh farsight security been one

1172
00:44:30,400 --> 00:44:31,760
of the first engineers

1173
00:44:31,760 --> 00:44:35,520
um mostly doing passive dns work and um

1174
00:44:35,520 --> 00:44:38,240
and managing uh currently managing

1175
00:44:38,240 --> 00:44:39,040
things that

1176
00:44:39,040 --> 00:44:42,160
um that are maybe

1177
00:44:42,160 --> 00:44:44,240
not you know the the other stuff like

1178
00:44:44,240 --> 00:44:45,200
the the thing

1179
00:44:45,200 --> 00:44:48,319
the things that might not get uh

1180
00:44:48,319 --> 00:44:50,960
um the things that might get dropped if

1181
00:44:50,960 --> 00:44:52,079
we didn't do it and

1182
00:44:52,079 --> 00:44:54,720
the conflict or sinkhole is one of those

1183
00:44:54,720 --> 00:44:55,440
um

1184
00:44:55,440 --> 00:44:59,200
there's a big worm uh back in

1185
00:44:59,200 --> 00:45:02,240
um that started back in 2009

1186
00:45:02,240 --> 00:45:05,680
there are many many bots that were

1187
00:45:05,680 --> 00:45:08,960
captured through a mechanism um

1188
00:45:08,960 --> 00:45:10,800
there are many mechanisms for it to

1189
00:45:10,800 --> 00:45:12,000
spread

1190
00:45:12,000 --> 00:45:15,920
um but one of the most interesting parts

1191
00:45:15,920 --> 00:45:17,119
is that it used a

1192
00:45:17,119 --> 00:45:19,839
generation algorithm that was keyed off

1193
00:45:19,839 --> 00:45:21,760
of what day it was

1194
00:45:21,760 --> 00:45:24,240
to reach back home now originally the

1195
00:45:24,240 --> 00:45:26,319
bot was going back to a single server

1196
00:45:26,319 --> 00:45:29,200
traffic converter.biz but then

1197
00:45:29,200 --> 00:45:30,400
researchers noticed

1198
00:45:30,400 --> 00:45:34,480
that that this bot was phoning home

1199
00:45:34,480 --> 00:45:38,000
to a randomly chosen domain from a

1200
00:45:38,000 --> 00:45:41,280
bunch of different registries um so all

1201
00:45:41,280 --> 00:45:42,800
you have to do is pick one of those

1202
00:45:42,800 --> 00:45:44,000
domains

1203
00:45:44,000 --> 00:45:47,359
and you would have had the ability to

1204
00:45:47,359 --> 00:45:50,480
take command and control of that

1205
00:45:50,480 --> 00:45:53,760
of that client um we gave a talk about

1206
00:45:53,760 --> 00:45:54,560
this uh

1207
00:45:54,560 --> 00:45:57,920
several years ago back in 2011

1208
00:45:57,920 --> 00:45:59,680
at that time we're looking at for help

1209
00:45:59,680 --> 00:46:01,119
for visibility

1210
00:46:01,119 --> 00:46:04,400
from tld registries

1211
00:46:04,400 --> 00:46:08,800
because we noticed that it

1212
00:46:08,800 --> 00:46:11,680
used to go about 500 domains per day but

1213
00:46:11,680 --> 00:46:14,160
then it expanded to 50 000 domains per

1214
00:46:14,160 --> 00:46:14,880
day

1215
00:46:14,880 --> 00:46:17,920
part of a cat and mouse game people

1216
00:46:17,920 --> 00:46:20,000
tried to contain the

1217
00:46:20,000 --> 00:46:21,440
people in the conflict or working group

1218
00:46:21,440 --> 00:46:23,280
tried to contain

1219
00:46:23,280 --> 00:46:25,680
the spread of the malware by front

1220
00:46:25,680 --> 00:46:26,480
running the

1221
00:46:26,480 --> 00:46:30,160
registration of those domains but um

1222
00:46:30,160 --> 00:46:32,640
but they changed the algorithm to

1223
00:46:32,640 --> 00:46:33,440
require

1224
00:46:33,440 --> 00:46:36,240
coordination among just generally all of

1225
00:46:36,240 --> 00:46:37,440
the tld

1226
00:46:37,440 --> 00:46:42,079
the cctld registries in order to

1227
00:46:42,079 --> 00:46:44,400
prevent it at that point there was not

1228
00:46:44,400 --> 00:46:46,640
much really we could do

1229
00:46:46,640 --> 00:46:50,000
there's a link to the old talk this eye

1230
00:46:50,000 --> 00:46:52,640
chart might have been familiar uh there

1231
00:46:52,640 --> 00:46:54,240
are a lot of lessons learned

1232
00:46:54,240 --> 00:46:56,960
both of what we could and could not do

1233
00:46:56,960 --> 00:46:57,839
um

1234
00:46:57,839 --> 00:47:01,040
it it seems that the bot um over time

1235
00:47:01,040 --> 00:47:02,800
has mostly been through the attrition of

1236
00:47:02,800 --> 00:47:03,440
the

1237
00:47:03,440 --> 00:47:06,480
software running under it um that

1238
00:47:06,480 --> 00:47:08,720
there were remediation efforts there's a

1239
00:47:08,720 --> 00:47:10,079
project called cyber green

1240
00:47:10,079 --> 00:47:13,280
which um evaluated that you know some

1241
00:47:13,280 --> 00:47:15,200
may have done better than others

1242
00:47:15,200 --> 00:47:17,680
at remediation within their um

1243
00:47:17,680 --> 00:47:20,079
constituency there was a

1244
00:47:20,079 --> 00:47:22,319
um there's a book that was written by

1245
00:47:22,319 --> 00:47:24,559
mark belden about the sort of the

1246
00:47:24,559 --> 00:47:27,200
the social and coordination aspects of

1247
00:47:27,200 --> 00:47:29,359
um of reacting to the

1248
00:47:29,359 --> 00:47:33,680
um to the virus

1249
00:47:33,680 --> 00:47:37,839
and the um the paper by

1250
00:47:37,839 --> 00:47:41,200
askari among others actually showed that

1251
00:47:41,200 --> 00:47:42,720
yes there was some

1252
00:47:42,720 --> 00:47:44,640
differences in remediation between

1253
00:47:44,640 --> 00:47:46,000
different countries

1254
00:47:46,000 --> 00:47:48,079
there are links to some of these if you

1255
00:47:48,079 --> 00:47:51,280
click on the images

1256
00:47:51,280 --> 00:47:54,720
um so um we couldn't contain

1257
00:47:54,720 --> 00:47:57,440
the virus um but we could at least have

1258
00:47:57,440 --> 00:47:59,440
visibility you could see that

1259
00:47:59,440 --> 00:48:02,480
yes there was a bot that was going to do

1260
00:48:02,480 --> 00:48:03,520
a dns lookup

1261
00:48:03,520 --> 00:48:05,520
and then phone home by talking to a web

1262
00:48:05,520 --> 00:48:07,760
server we've been operating that web

1263
00:48:07,760 --> 00:48:08,800
server between

1264
00:48:08,800 --> 00:48:12,319
uh between farsight and team comrie for

1265
00:48:12,319 --> 00:48:13,280
the past uh

1266
00:48:13,280 --> 00:48:17,119
i think it's about 11 11 years now

1267
00:48:17,119 --> 00:48:20,079
it started at georgia tech but we took

1268
00:48:20,079 --> 00:48:21,760
it over to keep it going we made data

1269
00:48:21,760 --> 00:48:23,119
available to

1270
00:48:23,119 --> 00:48:26,880
various organizations for remediation

1271
00:48:26,880 --> 00:48:30,160
and um and dr chris lee

1272
00:48:30,160 --> 00:48:31,839
who i've been working with in the

1273
00:48:31,839 --> 00:48:34,559
development of this presentation

1274
00:48:34,559 --> 00:48:38,319
um we uh he provided

1275
00:48:38,319 --> 00:48:41,760
domains using uh an algorithm

1276
00:48:41,760 --> 00:48:44,800
that was developed in the reverse

1277
00:48:44,800 --> 00:48:48,160
engineering of the bot back in 2000 um

1278
00:48:48,160 --> 00:48:51,839
back in 2009 and we we assumed it was

1279
00:48:51,839 --> 00:48:53,680
working because well we got hits

1280
00:48:53,680 --> 00:48:56,880
and uh sometimes though we

1281
00:48:56,880 --> 00:48:59,440
saw that we had some false positives and

1282
00:48:59,440 --> 00:49:00,319
as

1283
00:49:00,319 --> 00:49:03,200
um as time went on for the conflict or c

1284
00:49:03,200 --> 00:49:05,119
botnet which had a lot less traffic than

1285
00:49:05,119 --> 00:49:05,839
the a or b

1286
00:49:05,839 --> 00:49:08,480
variant for the 500 domains the c

1287
00:49:08,480 --> 00:49:10,800
variant we had a very

1288
00:49:10,800 --> 00:49:12,559
very small number of registries

1289
00:49:12,559 --> 00:49:14,079
participating

1290
00:49:14,079 --> 00:49:16,400
out of those 110 i think we still have

1291
00:49:16,400 --> 00:49:17,440
two

1292
00:49:17,440 --> 00:49:20,720
um and so we're not getting as many hits

1293
00:49:20,720 --> 00:49:22,079
for confick or c

1294
00:49:22,079 --> 00:49:24,400
and it's really hard to estimate um the

1295
00:49:24,400 --> 00:49:26,160
size if you don't have a significant

1296
00:49:26,160 --> 00:49:27,040
amount of the red

1297
00:49:27,040 --> 00:49:29,359
of the domains participating on a

1298
00:49:29,359 --> 00:49:31,839
regular basis

1299
00:49:33,920 --> 00:49:36,960
you have five minutes remaining until

1300
00:49:36,960 --> 00:49:40,160
right uh so at

1301
00:49:40,160 --> 00:49:43,520
um every year we just wanted another set

1302
00:49:43,520 --> 00:49:45,520
of domains kept going but this year

1303
00:49:45,520 --> 00:49:48,960
it's it's 2021 he only made domains for

1304
00:49:48,960 --> 00:49:51,119
2020. he said gosh do we really need to

1305
00:49:51,119 --> 00:49:52,160
be running this

1306
00:49:52,160 --> 00:49:55,280
and um i worked reached out to some of

1307
00:49:55,280 --> 00:49:57,520
the people who received the data

1308
00:49:57,520 --> 00:50:00,559
and um and sadly the answer was yes they

1309
00:50:00,559 --> 00:50:03,119
still use it it is still useful

1310
00:50:03,119 --> 00:50:06,800
um but if we have to question

1311
00:50:06,800 --> 00:50:08,319
you know what is you know what is the

1312
00:50:08,319 --> 00:50:10,240
value of the um

1313
00:50:10,240 --> 00:50:13,440
what is the value of of continuing

1314
00:50:13,440 --> 00:50:14,960
making the resources available and

1315
00:50:14,960 --> 00:50:16,880
having people re-register

1316
00:50:16,880 --> 00:50:19,920
domains on a daily basis um

1317
00:50:19,920 --> 00:50:24,079
every year um so we got a new list but

1318
00:50:24,079 --> 00:50:25,440
then we realized

1319
00:50:25,440 --> 00:50:30,000
um and we had another way to look up

1320
00:50:30,000 --> 00:50:33,680
um how to make the domains and

1321
00:50:33,680 --> 00:50:36,400
we found though that the lists that were

1322
00:50:36,400 --> 00:50:38,240
generated between the two versions

1323
00:50:38,240 --> 00:50:42,160
didn't work there was the domains that

1324
00:50:42,160 --> 00:50:43,359
chris was generating

1325
00:50:43,359 --> 00:50:44,960
on the left and over on the right here

1326
00:50:44,960 --> 00:50:47,119
you see the domains that were

1327
00:50:47,119 --> 00:50:50,160
paul found a tool from um from two

1328
00:50:50,160 --> 00:50:52,640
from one of the researchers at kaspersky

1329
00:50:52,640 --> 00:50:53,680
and he ran it on

1330
00:50:53,680 --> 00:50:56,240
and he suggested running on a freebsd

1331
00:50:56,240 --> 00:50:57,839
32-bit vm

1332
00:50:57,839 --> 00:50:59,920
and some of these domains were matched

1333
00:50:59,920 --> 00:51:02,160
but some of these domains did not

1334
00:51:02,160 --> 00:51:04,400
and so that started saying oh my gosh

1335
00:51:04,400 --> 00:51:06,160
we've been running the wrong domains the

1336
00:51:06,160 --> 00:51:07,599
whole time

1337
00:51:07,599 --> 00:51:10,800
and at the same time we noticed that um

1338
00:51:10,800 --> 00:51:12,640
we had a lot of false positives from

1339
00:51:12,640 --> 00:51:15,599
people saying hey why was my ip listed

1340
00:51:15,599 --> 00:51:16,079
in this

1341
00:51:16,079 --> 00:51:19,040
list of infected machines and perhaps

1342
00:51:19,040 --> 00:51:21,920
the recipient didn't fully understand

1343
00:51:21,920 --> 00:51:23,760
the potential for false positives for

1344
00:51:23,760 --> 00:51:25,359
example you can have

1345
00:51:25,359 --> 00:51:29,119
the background noise of web scanners

1346
00:51:29,119 --> 00:51:30,480
just going ahead and hitting your

1347
00:51:30,480 --> 00:51:31,359
sinkhole

1348
00:51:31,359 --> 00:51:32,960
just on the fact that it had an ip

1349
00:51:32,960 --> 00:51:34,640
address and it had something available

1350
00:51:34,640 --> 00:51:36,640
on port 80.

1351
00:51:36,640 --> 00:51:38,800
but we were we were concerned that we

1352
00:51:38,800 --> 00:51:40,400
were having more

1353
00:51:40,400 --> 00:51:42,240
at this point at this late in the game

1354
00:51:42,240 --> 00:51:43,520
we were having more

1355
00:51:43,520 --> 00:51:45,280
web crawling hits than we were actually

1356
00:51:45,280 --> 00:51:46,640
having uh hits

1357
00:51:46,640 --> 00:51:50,640
for conficker c domains

1358
00:51:50,640 --> 00:51:52,319
and so we figure well how are we going

1359
00:51:52,319 --> 00:51:54,079
to figure this out well

1360
00:51:54,079 --> 00:51:56,160
we can run an infected client but that's

1361
00:51:56,160 --> 00:51:58,079
a little bit complicated

1362
00:51:58,079 --> 00:52:00,559
especially if you're going to try to do

1363
00:52:00,559 --> 00:52:01,119
this over

1364
00:52:01,119 --> 00:52:02,800
multiple days or get a comprehensive

1365
00:52:02,800 --> 00:52:04,960
list of domains you can't really

1366
00:52:04,960 --> 00:52:08,000
do that very well but then i realized

1367
00:52:08,000 --> 00:52:08,640
well

1368
00:52:08,640 --> 00:52:11,440
gosh you know if all these if all these

1369
00:52:11,440 --> 00:52:13,119
domains are being looked up

1370
00:52:13,119 --> 00:52:15,520
by bots we might be seeing them all

1371
00:52:15,520 --> 00:52:16,480
because you only have a

1372
00:52:16,480 --> 00:52:19,599
slim fraction of that data

1373
00:52:19,599 --> 00:52:22,319
but uh but the root servers if you're

1374
00:52:22,319 --> 00:52:24,400
not using cuny and minimization you can

1375
00:52:24,400 --> 00:52:25,599
probably

1376
00:52:25,599 --> 00:52:29,359
get a view of a working dga

1377
00:52:29,359 --> 00:52:32,720
and so we we grouped the names into

1378
00:52:32,720 --> 00:52:35,440
three different groups and uh for the

1379
00:52:35,440 --> 00:52:37,200
diddle day which was uh

1380
00:52:37,200 --> 00:52:40,240
may 6 2020 for the full day

1381
00:52:40,240 --> 00:52:43,760
um uh chris's names were

1382
00:52:43,760 --> 00:52:47,440
he had had some names that were were 49

1383
00:52:47,440 --> 00:52:52,079
999 499 names

1384
00:52:52,079 --> 00:52:55,119
of those between the algorithms 30 000

1385
00:52:55,119 --> 00:52:56,720
of those names matched about 20

1386
00:52:56,720 --> 00:52:59,599
000 names diverged were different

1387
00:52:59,599 --> 00:53:01,440
between the two

1388
00:53:01,440 --> 00:53:04,240
um this is my first time actually doing

1389
00:53:04,240 --> 00:53:05,200
work on the

1390
00:53:05,200 --> 00:53:07,440
an server uh going through the digital

1391
00:53:07,440 --> 00:53:09,200
data i actually saw how some other

1392
00:53:09,200 --> 00:53:10,160
people

1393
00:53:10,160 --> 00:53:13,119
were extracting some data out of it i

1394
00:53:13,119 --> 00:53:14,000
modeled that

1395
00:53:14,000 --> 00:53:16,160
found a way to parallelize some of it

1396
00:53:16,160 --> 00:53:17,680
went through the data

1397
00:53:17,680 --> 00:53:20,800
and matched the domains from each set

1398
00:53:20,800 --> 00:53:21,599
and counted

1399
00:53:21,599 --> 00:53:24,640
um how many hits i was getting at

1400
00:53:24,640 --> 00:53:26,960
from one or the other and we actually

1401
00:53:26,960 --> 00:53:28,319
saw that uh

1402
00:53:28,319 --> 00:53:31,599
that chris's list actually got 1026

1403
00:53:31,599 --> 00:53:34,319
queries that were unique to his

1404
00:53:34,319 --> 00:53:35,839
algorithm and the domains that were

1405
00:53:35,839 --> 00:53:38,079
unique to the other algorithm were

1406
00:53:38,079 --> 00:53:39,280
you know maybe the domains are

1407
00:53:39,280 --> 00:53:42,400
registered or they um

1408
00:53:42,400 --> 00:53:43,839
you know they're actually registered and

1409
00:53:43,839 --> 00:53:45,680
not non-existent

1410
00:53:45,680 --> 00:53:48,400
but it was basically a random you know a

1411
00:53:48,400 --> 00:53:48,880
base

1412
00:53:48,880 --> 00:53:50,720
random list of domains and they did not

1413
00:53:50,720 --> 00:53:51,920
get queries

1414
00:53:51,920 --> 00:53:53,520
and between the ones that were common to

1415
00:53:53,520 --> 00:53:56,400
both well proportionally they got

1416
00:53:56,400 --> 00:53:58,319
the expected number of queries for a

1417
00:53:58,319 --> 00:54:01,279
working dga

1418
00:54:01,520 --> 00:54:03,200
then i realized that just the fact that

1419
00:54:03,200 --> 00:54:04,960
you register a domain might actually

1420
00:54:04,960 --> 00:54:05,920
trigger

1421
00:54:05,920 --> 00:54:08,319
web crawlers to go out and get you so i

1422
00:54:08,319 --> 00:54:09,839
i

1423
00:54:09,839 --> 00:54:12,559
the tlds from the uh from the ones that

1424
00:54:12,559 --> 00:54:12,960
weren't

1425
00:54:12,960 --> 00:54:16,240
uh uh from the ones that were registered

1426
00:54:16,240 --> 00:54:20,079
and i still had a relatively

1427
00:54:20,079 --> 00:54:22,800
you know good show between one versus

1428
00:54:22,800 --> 00:54:24,559
the other

1429
00:54:24,559 --> 00:54:28,720
um just recently i'm going back to 2019

1430
00:54:28,720 --> 00:54:31,440
see if it works the same way and you

1431
00:54:31,440 --> 00:54:33,440
know for for what i have so far

1432
00:54:33,440 --> 00:54:36,799
uh even today um it's actually showing

1433
00:54:36,799 --> 00:54:38,960
that yes the

1434
00:54:38,960 --> 00:54:40,480
algorithm and the method that chris is

1435
00:54:40,480 --> 00:54:42,799
using is actually proven to be working

1436
00:54:42,799 --> 00:54:47,599
so after initial the initial um

1437
00:54:47,599 --> 00:54:50,160
results that we that i found without

1438
00:54:50,160 --> 00:54:52,160
doing a full summary

1439
00:54:52,160 --> 00:54:54,319
um it gave me the confidence to go out

1440
00:54:54,319 --> 00:54:56,640
to the tld operators and ask them to

1441
00:54:56,640 --> 00:54:58,559
register some domains

1442
00:54:58,559 --> 00:55:01,920
and so this isn't really a

1443
00:55:01,920 --> 00:55:04,720
um this wasn't really you know

1444
00:55:04,720 --> 00:55:06,000
earth-shattering dns

1445
00:55:06,000 --> 00:55:08,480
research it's more of a thank you to to

1446
00:55:08,480 --> 00:55:10,640
people who for making the data available

1447
00:55:10,640 --> 00:55:12,720
because of it we actually could figure

1448
00:55:12,720 --> 00:55:13,760
out that

1449
00:55:13,760 --> 00:55:17,040
yes the the dj algorithm we're using to

1450
00:55:17,040 --> 00:55:19,119
to get domains to point the sinkhole

1451
00:55:19,119 --> 00:55:21,200
actually was working and confirm it

1452
00:55:21,200 --> 00:55:24,160
just through looking through data we

1453
00:55:24,160 --> 00:55:25,920
theorized what was wrong

1454
00:55:25,920 --> 00:55:28,559
was actually that the dga algorithm uses

1455
00:55:28,559 --> 00:55:30,240
a combination of floating point

1456
00:55:30,240 --> 00:55:32,559
integers and that there is a math

1457
00:55:32,559 --> 00:55:33,280
library

1458
00:55:33,280 --> 00:55:35,280
in windows that provides a different

1459
00:55:35,280 --> 00:55:36,640
result uh for

1460
00:55:36,640 --> 00:55:39,920
for a logarithmic function

1461
00:55:39,920 --> 00:55:42,559
in the ver in the very least significant

1462
00:55:42,559 --> 00:55:43,200
bits

1463
00:55:43,200 --> 00:55:45,920
um you know all you know out in the

1464
00:55:45,920 --> 00:55:47,599
point of noise where you it all gets

1465
00:55:47,599 --> 00:55:49,440
rounded out

1466
00:55:49,440 --> 00:55:51,119
there was actually a difference between

1467
00:55:51,119 --> 00:55:53,119
two algorithms and that was leading as

1468
00:55:53,119 --> 00:55:54,720
you call the function again and again

1469
00:55:54,720 --> 00:55:56,319
and again

1470
00:55:56,319 --> 00:55:57,920
that you would actually end up as the

1471
00:55:57,920 --> 00:55:59,760
bits are copied from floating point to

1472
00:55:59,760 --> 00:56:00,640
integer

1473
00:56:00,640 --> 00:56:01,920
it would actually make a difference in

1474
00:56:01,920 --> 00:56:03,599
the name that's created and so that's

1475
00:56:03,599 --> 00:56:04,160
why

1476
00:56:04,160 --> 00:56:06,480
you know 40 of those names seem to

1477
00:56:06,480 --> 00:56:07,760
diverge

1478
00:56:07,760 --> 00:56:11,280
um between the two and so there are a

1479
00:56:11,280 --> 00:56:12,799
couple papers here you can go ahead and

1480
00:56:12,799 --> 00:56:13,920
click on them

1481
00:56:13,920 --> 00:56:16,559
uh the specific note about this

1482
00:56:16,559 --> 00:56:17,520
divergence is

1483
00:56:17,520 --> 00:56:20,880
in the second paper on page 13.

1484
00:56:20,880 --> 00:56:25,760
no know your kye

1485
00:56:27,200 --> 00:56:31,040
any case we realized that there's a

1486
00:56:31,040 --> 00:56:32,480
little bit more we could do to help

1487
00:56:32,480 --> 00:56:35,280
avoid some of the false positives uh for

1488
00:56:35,280 --> 00:56:37,040
getting configure c data out

1489
00:56:37,040 --> 00:56:39,040
the amount of usage we're getting config

1490
00:56:39,040 --> 00:56:40,480
configuracy is so low

1491
00:56:40,480 --> 00:56:42,400
that it may not really be worth the

1492
00:56:42,400 --> 00:56:43,520
effort

1493
00:56:43,520 --> 00:56:45,440
there are so many other bots out there

1494
00:56:45,440 --> 00:56:47,520
that have so many more

1495
00:56:47,520 --> 00:56:49,920
clients in them and in fact you know a b

1496
00:56:49,920 --> 00:56:52,400
still have a significant amount of

1497
00:56:52,400 --> 00:56:55,200
um phone homes that we it's still worth

1498
00:56:55,200 --> 00:56:56,640
us to

1499
00:56:56,640 --> 00:56:59,280
to monitor that for infections but the

1500
00:56:59,280 --> 00:57:00,079
the sea effort

1501
00:57:00,079 --> 00:57:01,520
is probably about time for it to wind

1502
00:57:01,520 --> 00:57:03,680
down and maybe it's overdue

1503
00:57:03,680 --> 00:57:06,240
um but no one told us yeah you should do

1504
00:57:06,240 --> 00:57:07,839
this you should wind it down but

1505
00:57:07,839 --> 00:57:10,559
now we're looking and saying yeah um you

1506
00:57:10,559 --> 00:57:10,960
know

1507
00:57:10,960 --> 00:57:12,960
let's let's see what we can do to do one

1508
00:57:12,960 --> 00:57:14,160
little less push

1509
00:57:14,160 --> 00:57:17,200
and then be done so thanks to uh chris

1510
00:57:17,200 --> 00:57:17,839
lee

1511
00:57:17,839 --> 00:57:19,760
um the registry operators that

1512
00:57:19,760 --> 00:57:21,040
participate

1513
00:57:21,040 --> 00:57:23,680
um and if you want to shout out um you

1514
00:57:23,680 --> 00:57:25,040
know go ahead and say that yes we're

1515
00:57:25,040 --> 00:57:27,200
participating over in the chat

1516
00:57:27,200 --> 00:57:29,440
um i don't assume that you want

1517
00:57:29,440 --> 00:57:30,720
acknowledgement

1518
00:57:30,720 --> 00:57:32,480
the isps for the address and

1519
00:57:32,480 --> 00:57:35,040
connectivity cwg members and also for

1520
00:57:35,040 --> 00:57:36,640
team camry for continuing to run the

1521
00:57:36,640 --> 00:57:37,839
sinkhole

1522
00:57:37,839 --> 00:57:39,760
that helps provide data and you know

1523
00:57:39,760 --> 00:57:41,920
farsight my day job which actually

1524
00:57:41,920 --> 00:57:44,160
you know through paying my day salary in

1525
00:57:44,160 --> 00:57:45,119
part helps

1526
00:57:45,119 --> 00:57:48,160
make this effort um you know continue to

1527
00:57:48,160 --> 00:57:49,680
be operated

1528
00:57:49,680 --> 00:57:53,119
um and also the dnsr and root operators

1529
00:57:53,119 --> 00:57:55,040
this may have been one way you didn't

1530
00:57:55,040 --> 00:57:56,720
expect the data to be useful but it is

1531
00:57:56,720 --> 00:57:58,000
useful

1532
00:57:58,000 --> 00:58:00,000
so thanks for making that data available

1533
00:58:00,000 --> 00:58:02,000
and and for the

1534
00:58:02,000 --> 00:58:05,599
monks that make it in a usable format

1535
00:58:05,599 --> 00:58:09,839
for us to use

1536
00:58:11,040 --> 00:58:13,760
so thank you eric um if anybody where

1537
00:58:13,760 --> 00:58:15,599
we're running over time if anybody's got

1538
00:58:15,599 --> 00:58:16,000
a quick

1539
00:58:16,000 --> 00:58:17,760
question that they want to ask at this

1540
00:58:17,760 --> 00:58:19,040
time um

1541
00:58:19,040 --> 00:58:20,480
raise your hand or type something in the

1542
00:58:20,480 --> 00:58:22,640
qa quickly

1543
00:58:22,640 --> 00:58:25,440
and we'll we'll ask that um also please

1544
00:58:25,440 --> 00:58:27,040
fill out the poll that is

1545
00:58:27,040 --> 00:58:29,680
about to pop up and we'll be available a

1546
00:58:29,680 --> 00:58:32,799
couple of minutes into the break

1547
00:58:33,440 --> 00:58:37,119
i am not seeing any questions so in the

1548
00:58:37,119 --> 00:58:37,839
interests of

1549
00:58:37,839 --> 00:58:41,280
uh timing um uh

1550
00:58:41,280 --> 00:58:44,000
i i would say we go to the tea break now

1551
00:58:44,000 --> 00:58:45,359
um

1552
00:58:45,359 --> 00:58:48,559
we will be uh starting back uh

1553
00:58:48,559 --> 00:58:51,680
on the dot at 17 10 utc

1554
00:58:51,680 --> 00:58:53,599
so just time to get yourselves a quick

1555
00:58:53,599 --> 00:58:54,720
cup of coffee or tea

1556
00:58:54,720 --> 00:59:03,880
and we'll see you back at ten past five

1557
00:59:03,880 --> 01:00:27,059
[Music]

1558
01:00:30,050 --> 01:00:39,620
[Music]

1559
01:00:40,839 --> 01:00:42,330
do

1560
01:00:42,330 --> 01:02:05,500
[Music]

1561
01:02:08,500 --> 01:02:20,240
[Music]

1562
01:02:20,240 --> 01:02:22,559
welcome back everyone um i hope you are

1563
01:02:22,559 --> 01:02:24,160
trying to refresh your

1564
01:02:24,160 --> 01:02:27,039
tea and coffee cups and you are suitably

1565
01:02:27,039 --> 01:02:29,760
rested after a few minutes

1566
01:02:29,760 --> 01:02:31,599
uh next on the agenda we have a

1567
01:02:31,599 --> 01:02:34,559
presentation from

1568
01:02:35,039 --> 01:02:39,599
titled old but gold prospecting tcp to

1569
01:02:39,599 --> 01:02:41,359
engineer real-time monitoring of dna

1570
01:02:41,359 --> 01:02:43,680
sonic at any cost

1571
01:02:43,680 --> 01:02:46,879
over to you giovanni

1572
01:02:47,280 --> 01:02:51,760
all right you folks hear me yeah

1573
01:02:52,240 --> 01:02:55,680
um all right and probably can see my

1574
01:02:55,680 --> 01:02:56,720
slides as well

1575
01:02:56,720 --> 01:02:58,160
we can see your slides no problem go

1576
01:02:58,160 --> 01:02:59,839
ahead all right so

1577
01:02:59,839 --> 01:03:02,319
so good everybody my name is giovanni i

1578
01:03:02,319 --> 01:03:03,119
am with

1579
01:03:03,119 --> 01:03:05,839
ign labs and this is a work i've done

1580
01:03:05,839 --> 01:03:07,680
together with some colleagues

1581
01:03:07,680 --> 01:03:11,039
at usc asi john and wes yerung

1582
01:03:11,039 --> 01:03:13,680
at the operations department of science

1583
01:03:13,680 --> 01:03:15,280
and john cedrone and christian

1584
01:03:15,280 --> 01:03:18,079
said labs

1585
01:03:18,880 --> 01:03:20,960
as you know i mean if you run any

1586
01:03:20,960 --> 01:03:22,720
authoritative server

1587
01:03:22,720 --> 01:03:25,760
or service you know that latency is key

1588
01:03:25,760 --> 01:03:28,559
he didn't but it's sort of a hard

1589
01:03:28,559 --> 01:03:29,280
measure

1590
01:03:29,280 --> 01:03:31,760
because well most of traffic is udp on

1591
01:03:31,760 --> 01:03:32,319
dns

1592
01:03:32,319 --> 01:03:35,200
still so as an operator you would do

1593
01:03:35,200 --> 01:03:36,720
whatever you can

1594
01:03:36,720 --> 01:03:39,119
to reduce latency you would use multiple

1595
01:03:39,119 --> 01:03:41,359
ns records so you deploy any cast you're

1596
01:03:41,359 --> 01:03:42,799
going to appear

1597
01:03:42,799 --> 01:03:45,440
or using internet exchange points and do

1598
01:03:45,440 --> 01:03:47,039
whatever you can to reduce latest

1599
01:03:47,039 --> 01:03:48,880
obscure clients

1600
01:03:48,880 --> 01:03:50,480
we're getting a little bit of static i

1601
01:03:50,480 --> 01:03:52,079
don't know if you're

1602
01:03:52,079 --> 01:03:56,079
hitting your mic with something oh okay

1603
01:03:56,079 --> 01:03:59,119
let me just what do you think it sounds

1604
01:03:59,119 --> 01:04:00,319
like you're just brushing against the

1605
01:04:00,319 --> 01:04:02,079
mic or something like that

1606
01:04:02,079 --> 01:04:03,920
um oh yeah it's oh yeah i hear what you

1607
01:04:03,920 --> 01:04:05,359
say so i'll hold my mic like this

1608
01:04:05,359 --> 01:04:05,760
probably

1609
01:04:05,760 --> 01:04:09,359
better off let me know yeah so

1610
01:04:09,359 --> 01:04:12,400
it's kind of a it's hard to know clients

1611
01:04:12,400 --> 01:04:14,000
latency because most of the traffic is

1612
01:04:14,000 --> 01:04:15,359
udp

1613
01:04:15,359 --> 01:04:17,839
and what folks have actually have is are

1614
01:04:17,839 --> 01:04:19,359
is right atlas that's one of the things

1615
01:04:19,359 --> 01:04:20,000
you can do

1616
01:04:20,000 --> 01:04:21,920
or a commercial service like thousand

1617
01:04:21,920 --> 01:04:24,240
eyes they're very good but like they

1618
01:04:24,240 --> 01:04:26,319
have com not complete coverage and did

1619
01:04:26,319 --> 01:04:28,160
not necessarily overlap with your own

1620
01:04:28,160 --> 01:04:29,680
clients

1621
01:04:29,680 --> 01:04:31,200
on the other hand what you can do is

1622
01:04:31,200 --> 01:04:33,039
also use a technique called flirf pluter

1623
01:04:33,039 --> 01:04:33,920
which is an

1624
01:04:33,920 --> 01:04:35,359
active measuring technique that you

1625
01:04:35,359 --> 01:04:38,559
would ping the entire v4 space

1626
01:04:38,559 --> 01:04:40,960
it means portions are based on a hit

1627
01:04:40,960 --> 01:04:41,839
list and

1628
01:04:41,839 --> 01:04:43,119
you do the spins and you're going to

1629
01:04:43,119 --> 01:04:45,039
collect that on your anycast network and

1630
01:04:45,039 --> 01:04:46,000
you can actually

1631
01:04:46,000 --> 01:04:47,599
measure the latency from that to your

1632
01:04:47,599 --> 01:04:49,520
sites the thing is

1633
01:04:49,520 --> 01:04:51,280
you have to typically it's run once a

1634
01:04:51,280 --> 01:04:53,359
day and it's expensive to run in terms

1635
01:04:53,359 --> 01:04:55,680
of cpu resources and network traffic

1636
01:04:55,680 --> 01:04:58,640
and it's hard to apply to v6 because

1637
01:04:58,640 --> 01:04:59,119
this

1638
01:04:59,119 --> 01:05:02,400
is his list are problematic so we wonder

1639
01:05:02,400 --> 01:05:04,240
if there was a better way to do that

1640
01:05:04,240 --> 01:05:06,240
that would allow you to get measurements

1641
01:05:06,240 --> 01:05:07,760
from real clients

1642
01:05:07,760 --> 01:05:10,799
that works well with the six it also

1643
01:05:10,799 --> 01:05:12,799
requires no extra measurements being

1644
01:05:12,799 --> 01:05:15,280
namely passive measurement and you can

1645
01:05:15,280 --> 01:05:17,839
actually do that with tcp

1646
01:05:17,839 --> 01:05:21,039
you can measure the rtt uh from your the

1647
01:05:21,039 --> 01:05:22,640
resolvers are your clients to your

1648
01:05:22,640 --> 01:05:24,000
authoritative by

1649
01:05:24,000 --> 01:05:26,400
uh measuring that on the handshake

1650
01:05:26,400 --> 01:05:28,160
session or doing the take down the tcp

1651
01:05:28,160 --> 01:05:29,280
connection

1652
01:05:29,280 --> 01:05:31,440
and we've been using that for over one

1653
01:05:31,440 --> 01:05:32,480
and a half years

1654
01:05:32,480 --> 01:05:35,599
at sidn and that helped to solve several

1655
01:05:35,599 --> 01:05:36,400
issues

1656
01:05:36,400 --> 01:05:38,880
and that fulfills above audible

1657
01:05:38,880 --> 01:05:40,960
requirements

1658
01:05:40,960 --> 01:05:44,079
so tcp rtt if you it's an old technique

1659
01:05:44,079 --> 01:05:45,280
to measure latency

1660
01:05:45,280 --> 01:05:48,160
or rtt on tcp it's a very old technique

1661
01:05:48,160 --> 01:05:49,119
it's

1662
01:05:49,119 --> 01:05:51,440
been first deployed 1996 i think that's

1663
01:05:51,440 --> 01:05:52,240
the year i

1664
01:05:52,240 --> 01:05:53,680
actually got my first computer as a

1665
01:05:53,680 --> 01:05:55,359
teenage boy

1666
01:05:55,359 --> 01:05:58,480
um it has been widely used by f

1667
01:05:58,480 --> 01:06:01,680
by for example uh http the for

1668
01:06:01,680 --> 01:06:04,000
http there is a paper on imc two years

1669
01:06:04,000 --> 01:06:06,559
ago to just describe how they do that

1670
01:06:06,559 --> 01:06:08,319
and it's been applied to dns multiple

1671
01:06:08,319 --> 01:06:09,680
times um

1672
01:06:09,680 --> 01:06:12,240
ry irons came up with this idea 2012

1673
01:06:12,240 --> 01:06:14,400
kcd2 in 2018 that's

1674
01:06:14,400 --> 01:06:16,960
the one that triggered his work machi as

1675
01:06:16,960 --> 01:06:18,720
well and um

1676
01:06:18,720 --> 01:06:22,160
at the czech folks they did that still

1677
01:06:22,160 --> 01:06:24,559
did that in 2019 and we have this

1678
01:06:24,559 --> 01:06:26,880
technical report for 2020.

1679
01:06:26,880 --> 01:06:29,440
um so it's like it's uh an idea that

1680
01:06:29,440 --> 01:06:30,880
started in 96

1681
01:06:30,880 --> 01:06:33,119
but the novelty here of our work is to

1682
01:06:33,119 --> 01:06:34,880
apply that to

1683
01:06:34,880 --> 01:06:37,119
to actually investigate that extensively

1684
01:06:37,119 --> 01:06:39,680
for dns and apply that in this context

1685
01:06:39,680 --> 01:06:41,280
so what's new is that we have a

1686
01:06:41,280 --> 01:06:43,280
extensively comprehensive methodology

1687
01:06:43,280 --> 01:06:44,799
validation

1688
01:06:44,799 --> 01:06:46,720
so if you get sap data doesn't mean that

1689
01:06:46,720 --> 01:06:48,880
is that data representative from

1690
01:06:48,880 --> 01:06:51,599
of your overall traffic i mean you're

1691
01:06:51,599 --> 01:06:54,000
getting biased view only for tcp clients

1692
01:06:54,000 --> 01:06:55,280
i mean

1693
01:06:55,280 --> 01:06:57,200
and you also have to answer the question

1694
01:06:57,200 --> 01:06:58,640
if you like oh you get to speed

1695
01:06:58,640 --> 01:06:59,280
measurements

1696
01:06:59,280 --> 01:07:01,119
are they representative as well for your

1697
01:07:01,119 --> 01:07:02,799
edp clients

1698
01:07:02,799 --> 01:07:05,200
in other words can you really trust them

1699
01:07:05,200 --> 01:07:07,440
um

1700
01:07:07,440 --> 01:07:09,839
and the also what you did in this work

1701
01:07:09,839 --> 01:07:10,480
is not only

1702
01:07:10,480 --> 01:07:12,799
measure that that was the easy part the

1703
01:07:12,799 --> 01:07:14,880
hard part is to analyze this data in a

1704
01:07:14,880 --> 01:07:16,319
way that you can actually make in

1705
01:07:16,319 --> 01:07:17,920
engineering decisions in a

1706
01:07:17,920 --> 01:07:20,480
in operations zone in so what it did we

1707
01:07:20,480 --> 01:07:21,920
applied those measurements and

1708
01:07:21,920 --> 01:07:24,480
creating identify problems in several

1709
01:07:24,480 --> 01:07:26,000
use cases for this data

1710
01:07:26,000 --> 01:07:28,799
and solved issues in for uh and anycast

1711
01:07:28,799 --> 01:07:30,640
networks and we team up with google to

1712
01:07:30,640 --> 01:07:32,480
solve one of those as well

1713
01:07:32,480 --> 01:07:35,039
um so we manipulated bgp to fix all

1714
01:07:35,039 --> 01:07:36,240
those issues you need to document that

1715
01:07:36,240 --> 01:07:37,200
carefully

1716
01:07:37,200 --> 01:07:40,160
and it has been used uh in that enough

1717
01:07:40,160 --> 01:07:42,400
in real time to the tech anomalies

1718
01:07:42,400 --> 01:07:45,760
for example right route lakes so

1719
01:07:45,760 --> 01:07:48,319
to actually trust it this is the

1720
01:07:48,319 --> 01:07:50,880
measurement of dns tcp rtt

1721
01:07:50,880 --> 01:07:53,200
tcp traffic must provide enough coverage

1722
01:07:53,200 --> 01:07:55,520
both for space and temporal

1723
01:07:55,520 --> 01:07:56,960
because you know most traffic is to use

1724
01:07:56,960 --> 01:07:59,359
gdp and you have to have similar latency

1725
01:07:59,359 --> 01:08:00,960
for udp to udp

1726
01:08:00,960 --> 01:08:04,400
so you can generalize the results so

1727
01:08:04,400 --> 01:08:06,319
this is a table of traffic you analyze

1728
01:08:06,319 --> 01:08:09,440
it collect this week of traffic 2019

1729
01:08:09,440 --> 01:08:11,680
from two anycast networks uh servers

1730
01:08:11,680 --> 01:08:13,359
that are 4.0 they're run by different

1731
01:08:13,359 --> 01:08:15,280
providers

1732
01:08:15,280 --> 01:08:18,479
and what you find here in this green

1733
01:08:18,479 --> 01:08:19,439
color

1734
01:08:19,439 --> 01:08:21,439
line here is that the tcp traffic

1735
01:08:21,439 --> 01:08:22,799
informs

1736
01:08:22,799 --> 01:08:26,238
um only five two to up to five percent

1737
01:08:26,238 --> 01:08:27,439
of all the clients

1738
01:08:27,439 --> 01:08:30,399
uh all the queries they're actually um

1739
01:08:30,399 --> 01:08:31,120
tcp

1740
01:08:31,120 --> 01:08:34,640
but 20 of the resolvers uh

1741
01:08:34,640 --> 01:08:37,920
they eventually sent tcp traffic and 43

1742
01:08:37,920 --> 01:08:39,198
percent of the ais

1743
01:08:39,198 --> 01:08:42,238
send uh uh tcp queries and you have

1744
01:08:42,238 --> 01:08:44,000
similar figures for v6 here

1745
01:08:44,000 --> 01:08:46,319
this little line in the bottle here so

1746
01:08:46,319 --> 01:08:47,600
it means like you get five percent of

1747
01:08:47,600 --> 01:08:48,399
the queries

1748
01:08:48,399 --> 01:08:50,960
20 resolvers 44 day asses and you get

1749
01:08:50,960 --> 01:08:52,000
this for free

1750
01:08:52,000 --> 01:08:53,520
and it depends on the network because

1751
01:08:53,520 --> 01:08:55,279
the roots dns they have a different

1752
01:08:55,279 --> 01:08:56,319
proportion of tcp

1753
01:08:56,319 --> 01:09:00,319
queries uh 1.7 to 14.

1754
01:09:00,319 --> 01:09:03,679
uh but if you what do we know from dns

1755
01:09:03,679 --> 01:09:05,279
traffic for as a tld in this case

1756
01:09:05,279 --> 01:09:06,319
darnell the netherlands

1757
01:09:06,319 --> 01:09:09,520
ctod if you only get if you

1758
01:09:09,520 --> 01:09:11,120
get other traffic that you have but then

1759
01:09:11,120 --> 01:09:12,719
you're going to say well how much

1760
01:09:12,719 --> 01:09:14,238
traffic does

1761
01:09:14,238 --> 01:09:16,080
those people that actually those

1762
01:09:16,080 --> 01:09:17,679
resolvers that these autonomous systems

1763
01:09:17,679 --> 01:09:19,439
that send tcp traffic

1764
01:09:19,439 --> 01:09:23,040
well you get like 98 of all the traffic

1765
01:09:23,040 --> 01:09:24,640
so all the asses they matter they

1766
01:09:24,640 --> 01:09:26,640
eventually would send tcp

1767
01:09:26,640 --> 01:09:28,399
so these people are not sending to zb

1768
01:09:28,399 --> 01:09:30,399
probably they're not the ones that your

1769
01:09:30,399 --> 01:09:33,359
most query asses so they did give us

1770
01:09:33,359 --> 01:09:34,719
confidence that they can trust this

1771
01:09:34,719 --> 01:09:36,000
because they're focusing their asses to

1772
01:09:36,000 --> 01:09:37,679
send most traffic they eventually they

1773
01:09:37,679 --> 01:09:39,359
do ccp

1774
01:09:39,359 --> 01:09:42,520
you can see here 98 4v4

1775
01:09:42,520 --> 01:09:46,000
98 for v6

1776
01:09:46,000 --> 01:09:48,000
uh so that was the first thing you can

1777
01:09:48,000 --> 01:09:49,520
actually that proof they can actually

1778
01:09:49,520 --> 01:09:51,198
use that we also have temporal analysis

1779
01:09:51,198 --> 01:09:51,920
on the paper

1780
01:09:51,920 --> 01:09:53,040
uh but i'm going to skip that you can

1781
01:09:53,040 --> 01:09:55,040
relate with the report

1782
01:09:55,040 --> 01:09:57,040
and also did a measurement with rap

1783
01:09:57,040 --> 01:09:58,159
atlas for

1784
01:09:58,159 --> 01:10:00,880
to to another other anycast networks uh

1785
01:10:00,880 --> 01:10:02,480
k root and root

1786
01:10:02,480 --> 01:10:05,360
and a query uh using adp and tcp and we

1787
01:10:05,360 --> 01:10:06,080
had like

1788
01:10:06,080 --> 01:10:08,000
this number of probes querying directly

1789
01:10:08,000 --> 01:10:09,440
those those root letters

1790
01:10:09,440 --> 01:10:11,199
and we roughly had three million queries

1791
01:10:11,199 --> 01:10:12,480
for uh utp

1792
01:10:12,480 --> 01:10:14,560
one million for hcp for each of them and

1793
01:10:14,560 --> 01:10:16,000
then it the latency

1794
01:10:16,000 --> 01:10:18,159
from base measure on the udp on the

1795
01:10:18,159 --> 01:10:19,040
client side

1796
01:10:19,040 --> 01:10:21,440
and on tcp on the client side and you

1797
01:10:21,440 --> 01:10:23,120
see they're roughly the same it does the

1798
01:10:23,120 --> 01:10:25,520
cdf curves they're so close together

1799
01:10:25,520 --> 01:10:28,000
both the median and it is in the 90

1800
01:10:28,000 --> 01:10:29,360
percent diet that shows that you can

1801
01:10:29,360 --> 01:10:30,320
actually trust that

1802
01:10:30,320 --> 01:10:32,320
so if you that means that if you get a

1803
01:10:32,320 --> 01:10:33,679
tcp measurement

1804
01:10:33,679 --> 01:10:35,520
from a certain network you can expect

1805
01:10:35,520 --> 01:10:37,520
the from a certain ip you can expect the

1806
01:10:37,520 --> 01:10:38,560
same

1807
01:10:38,560 --> 01:10:41,600
latency for a udp client

1808
01:10:41,600 --> 01:10:43,760
so that was the fundamental work like

1809
01:10:43,760 --> 01:10:45,600
the foundation work and

1810
01:10:45,600 --> 01:10:46,640
the question is what you can do with

1811
01:10:46,640 --> 01:10:49,520
this data um

1812
01:10:49,520 --> 01:10:50,880
and that's the thing we got us

1813
01:10:50,880 --> 01:10:52,640
interested so

1814
01:10:52,640 --> 01:10:56,000
so let's show a couple of examples here

1815
01:10:56,000 --> 01:10:58,000
so one of the things we did we kind of

1816
01:10:58,000 --> 01:10:59,440
aggregate all the data

1817
01:10:59,440 --> 01:11:02,320
and for for example here from any cast b

1818
01:11:02,320 --> 01:11:03,600
that's one of the servers that we have

1819
01:11:03,600 --> 01:11:05,040
for that now

1820
01:11:05,040 --> 01:11:08,800
and we got aggregate metrics for each

1821
01:11:08,800 --> 01:11:09,600
site and

1822
01:11:09,600 --> 01:11:11,760
these green lines here show the spread

1823
01:11:11,760 --> 01:11:13,280
of the rtt

1824
01:11:13,280 --> 01:11:15,040
uh the medians the meat and the median

1825
01:11:15,040 --> 01:11:16,960
at this for example this side here let

1826
01:11:16,960 --> 01:11:17,920
me get um

1827
01:11:17,920 --> 01:11:21,040
this one here's the lax has like

1828
01:11:21,040 --> 01:11:23,040
roughly 100 and something r20

1829
01:11:23,040 --> 01:11:24,800
milliseconds here and the spread goes

1830
01:11:24,800 --> 01:11:26,320
from above 150

1831
01:11:26,320 --> 01:11:30,239
and 25 the first quartile below 50.

1832
01:11:30,239 --> 01:11:31,920
so you see which sides have a longer

1833
01:11:31,920 --> 01:11:34,400
spread um than the others and with that

1834
01:11:34,400 --> 01:11:36,320
you can identify problems and try to

1835
01:11:36,320 --> 01:11:38,480
solve issues

1836
01:11:38,480 --> 01:11:40,480
you can also do it by the same analysis

1837
01:11:40,480 --> 01:11:42,000
but instead of aggregating per

1838
01:11:42,000 --> 01:11:44,640
a site you can do per autonomous systems

1839
01:11:44,640 --> 01:11:46,719
that they want to send you more queries

1840
01:11:46,719 --> 01:11:50,080
so for any casb for example uh you see

1841
01:11:50,080 --> 01:11:50,560
that

1842
01:11:50,560 --> 01:11:53,440
15 169 that's google send most queries i

1843
01:11:53,440 --> 01:11:54,800
think that was one week

1844
01:11:54,800 --> 01:11:56,880
more than 400 million and they have sort

1845
01:11:56,880 --> 01:11:59,120
of a stable rtt over here

1846
01:11:59,120 --> 01:12:02,560
but you see that 13 to 335

1847
01:12:02,560 --> 01:12:05,520
they have a much more distributed uh

1848
01:12:05,520 --> 01:12:06,239
spread

1849
01:12:06,239 --> 01:12:07,840
rtt so those are the things you can

1850
01:12:07,840 --> 01:12:10,000
actually look upon and see what's the

1851
01:12:10,000 --> 01:12:12,960
problem and this one here 4134

1852
01:12:12,960 --> 01:12:15,679
sent okay not so many queries but like

1853
01:12:15,679 --> 01:12:17,520
maybe 50 30 million or so

1854
01:12:17,520 --> 01:12:19,840
but the arctic is pretty high so this is

1855
01:12:19,840 --> 01:12:21,199
how you get with tcp

1856
01:12:21,199 --> 01:12:24,080
the dcp measurements and one of the

1857
01:12:24,080 --> 01:12:25,840
problems we solve is we call

1858
01:12:25,840 --> 01:12:29,199
distant lens so bgp you have no control

1859
01:12:29,199 --> 01:12:31,760
the way to map clients

1860
01:12:31,760 --> 01:12:33,520
the map addresses to the different

1861
01:12:33,520 --> 01:12:34,880
anycast sites

1862
01:12:34,880 --> 01:12:36,960
so we found for example some sites were

1863
01:12:36,960 --> 01:12:38,800
having very large rtt

1864
01:12:38,800 --> 01:12:41,040
or value or spread like uh charlotte

1865
01:12:41,040 --> 01:12:42,320
gore in france singapore

1866
01:12:42,320 --> 01:12:44,960
or tokyo narita here tokyo for example

1867
01:12:44,960 --> 01:12:45,600
narita

1868
01:12:45,600 --> 01:12:47,360
you see that the spread is from a little

1869
01:12:47,360 --> 01:12:49,280
bit under 90 milliseconds through up

1870
01:12:49,280 --> 01:12:50,640
440.

1871
01:12:50,640 --> 01:12:52,400
this is our measure of your passive uh

1872
01:12:52,400 --> 01:12:53,840
tcp data

1873
01:12:53,840 --> 01:12:55,600
and we went to figure that out that uh

1874
01:12:55,600 --> 01:12:57,840
why it was that so we're singing out all

1875
01:12:57,840 --> 01:13:00,000
the queries that came to japan side

1876
01:13:00,000 --> 01:13:01,679
it turned out that most of them came

1877
01:13:01,679 --> 01:13:03,600
from china

1878
01:13:03,600 --> 01:13:06,159
in china this this particular provider

1879
01:13:06,159 --> 01:13:07,920
has no presence in china

1880
01:13:07,920 --> 01:13:09,440
and china is well known to have

1881
01:13:09,440 --> 01:13:11,280
international connections that have

1882
01:13:11,280 --> 01:13:12,560
congestion

1883
01:13:12,560 --> 01:13:14,080
so you see for example this particular

1884
01:13:14,080 --> 01:13:15,840
tunnel system here sent like

1885
01:13:15,840 --> 01:13:18,560
3 000 000 queries on this particular

1886
01:13:18,560 --> 01:13:19,360
week for us

1887
01:13:19,360 --> 01:13:21,120
to that for this particular server and

1888
01:13:21,120 --> 01:13:24,800
header rtt a median rtt of 130.

1889
01:13:24,800 --> 01:13:26,560
uh and you see that that goes for the

1890
01:13:26,560 --> 01:13:28,880
others as well so with that you can say

1891
01:13:28,880 --> 01:13:29,520
well okay

1892
01:13:29,520 --> 01:13:31,520
that's a problem how can you fix that

1893
01:13:31,520 --> 01:13:33,360
you cannot run a site in china

1894
01:13:33,360 --> 01:13:35,199
but i talked to the operator and he was

1895
01:13:35,199 --> 01:13:36,480
like oh many many

1896
01:13:36,480 --> 01:13:38,239
maybe many of my clients would not be

1897
01:13:38,239 --> 01:13:40,640
comfortable we have their zone files on

1898
01:13:40,640 --> 01:13:43,040
uh inside the well great firewall of

1899
01:13:43,040 --> 01:13:44,000
china

1900
01:13:44,000 --> 01:13:46,080
i understand that or you can also direct

1901
01:13:46,080 --> 01:13:48,080
people with chinese isps which i've been

1902
01:13:48,080 --> 01:13:50,239
reported is very expensive as well and

1903
01:13:50,239 --> 01:13:52,239
only very recently they have allowed to

1904
01:13:52,239 --> 01:13:53,440
do that

1905
01:13:53,440 --> 01:13:57,199
i mean direct pairing inside china

1906
01:13:57,280 --> 01:13:59,440
so that's one of the things you can do

1907
01:13:59,440 --> 01:14:00,320
another thing

1908
01:14:00,320 --> 01:14:02,880
you can another problem we found is it's

1909
01:14:02,880 --> 01:14:03,679
a

1910
01:14:03,679 --> 01:14:05,679
common big policy which means preferred

1911
01:14:05,679 --> 01:14:07,600
customer so there's a route

1912
01:14:07,600 --> 01:14:09,520
that goes by an autonomous system that

1913
01:14:09,520 --> 01:14:10,960
satisfy

1914
01:14:10,960 --> 01:14:13,679
um the particular requirement it's a via

1915
01:14:13,679 --> 01:14:15,520
customer so be it

1916
01:14:15,520 --> 01:14:17,520
which means that some being given that

1917
01:14:17,520 --> 01:14:18,560
bgp is not

1918
01:14:18,560 --> 01:14:20,800
uh our latest it's totally late to say

1919
01:14:20,800 --> 01:14:22,239
agnostic actually

1920
01:14:22,239 --> 01:14:25,840
we found that comcast or v6 was sending

1921
01:14:25,840 --> 01:14:27,280
all the traffic that would actually

1922
01:14:27,280 --> 01:14:29,840
being mapped by bgp from anycast b

1923
01:14:29,840 --> 01:14:31,600
they're going to the site in brazil and

1924
01:14:31,600 --> 01:14:32,960
you'll see here all those latest the

1925
01:14:32,960 --> 01:14:34,800
spread of the latest it goes from

1926
01:14:34,800 --> 01:14:37,760
less than 40 up to 150. so we talked to

1927
01:14:37,760 --> 01:14:38,560
the operator

1928
01:14:38,560 --> 01:14:39,920
and they figured out it was an issue of

1929
01:14:39,920 --> 01:14:42,239
the bgb community and then just by

1930
01:14:42,239 --> 01:14:43,920
changing that and this is the data we

1931
01:14:43,920 --> 01:14:45,199
get from tcp data

1932
01:14:45,199 --> 01:14:47,199
we saw that once they fix the community

1933
01:14:47,199 --> 01:14:48,960
all the traffic from comcast in the us

1934
01:14:48,960 --> 01:14:50,159
remaining u.s

1935
01:14:50,159 --> 01:14:53,120
was mapped from uh from brazil from the

1936
01:14:53,120 --> 01:14:54,000
brazilian side

1937
01:14:54,000 --> 01:14:55,760
to multiple sites across the west that's

1938
01:14:55,760 --> 01:14:57,199
the process that the anycast b

1939
01:14:57,199 --> 01:14:59,280
has and you can clearly see that on our

1940
01:14:59,280 --> 01:15:01,920
measurements right away so the rtt was

1941
01:15:01,920 --> 01:15:04,880
significantly reduced so again this is

1942
01:15:04,880 --> 01:15:06,960
only using passive data this is real

1943
01:15:06,960 --> 01:15:07,920
clients data

1944
01:15:07,920 --> 01:15:11,520
and that's the power of this technique

1945
01:15:11,520 --> 01:15:13,520
and another problem we found it's what

1946
01:15:13,520 --> 01:15:15,679
we define as any categorization

1947
01:15:15,679 --> 01:15:17,600
it's when a larger tunnel system just

1948
01:15:17,600 --> 01:15:18,880
sends traffic to

1949
01:15:18,880 --> 01:15:21,840
one one of your sites so if you have any

1950
01:15:21,840 --> 01:15:23,520
cast system with multiple sites

1951
01:15:23,520 --> 01:15:25,440
distributed across the globe

1952
01:15:25,440 --> 01:15:26,640
and you have like a large autonomous

1953
01:15:26,640 --> 01:15:28,719
systems like let's let's for example

1954
01:15:28,719 --> 01:15:29,600
here microsoft

1955
01:15:29,600 --> 01:15:31,360
sending you more than 400 million

1956
01:15:31,360 --> 01:15:33,120
queries on to this particular server a

1957
01:15:33,120 --> 01:15:33,920
day

1958
01:15:33,920 --> 01:15:36,960
and google model is the same here but

1959
01:15:36,960 --> 01:15:38,080
then you see the mic

1960
01:15:38,080 --> 01:15:40,400
the microsoft has a sort of a latency

1961
01:15:40,400 --> 01:15:42,000
which is not so good it's like 75

1962
01:15:42,000 --> 01:15:43,840
milliseconds and google has a massive

1963
01:15:43,840 --> 01:15:45,520
spread here

1964
01:15:45,520 --> 01:15:48,159
so you see there's just like there are

1965
01:15:48,159 --> 01:15:48,960
big clients but

1966
01:15:48,960 --> 01:15:50,960
they're not getting good latency for

1967
01:15:50,960 --> 01:15:52,960
example as those here as this one in

1968
01:15:52,960 --> 01:15:54,320
particular

1969
01:15:54,320 --> 01:15:57,199
so we found later on that let me get the

1970
01:15:57,199 --> 01:15:58,400
example of google

1971
01:15:58,400 --> 01:16:01,040
all traffic from google was going to one

1972
01:16:01,040 --> 01:16:02,960
site only in amsterdam

1973
01:16:02,960 --> 01:16:04,640
and then you see here this is this is

1974
01:16:04,640 --> 01:16:07,840
the line of days before january 2020

1975
01:16:07,840 --> 01:16:09,120
and each line here is a difference

1976
01:16:09,120 --> 01:16:11,360
anycast site that is this uh anycast

1977
01:16:11,360 --> 01:16:12,320
service has

1978
01:16:12,320 --> 01:16:14,719
and you see all the queries from before

1979
01:16:14,719 --> 01:16:16,400
for this particular day where

1980
01:16:16,400 --> 01:16:17,920
for these days were only hitting

1981
01:16:17,920 --> 01:16:20,239
amsterdam so we did a bunch of bgp

1982
01:16:20,239 --> 01:16:21,840
operations we withdraw the routes and

1983
01:16:21,840 --> 01:16:23,280
then we start tuning

1984
01:16:23,280 --> 01:16:26,640
that and that in the end i wanted folks

1985
01:16:26,640 --> 01:16:28,719
folks folks to focus on the red line

1986
01:16:28,719 --> 01:16:30,560
that's rtt that's latest

1987
01:16:30,560 --> 01:16:32,480
that's what really matters the median

1988
01:16:32,480 --> 01:16:34,800
rtt for all the clients from google was

1989
01:16:34,800 --> 01:16:36,560
dropped from 100 milliseconds

1990
01:16:36,560 --> 01:16:38,560
and after our withdrawing and route

1991
01:16:38,560 --> 01:16:39,600
manipulations to

1992
01:16:39,600 --> 01:16:41,600
10 milliseconds so because of the

1993
01:16:41,600 --> 01:16:43,040
insights we got from tcp you can

1994
01:16:43,040 --> 01:16:43,360
actually

1995
01:16:43,360 --> 01:16:45,040
act upon the data and improve our

1996
01:16:45,040 --> 01:16:47,520
networks and that's what it did

1997
01:16:47,520 --> 01:16:49,120
and see that's the currency status right

1998
01:16:49,120 --> 01:16:50,719
now uh

1999
01:16:50,719 --> 01:16:53,040
the average the median rtt is of 10

2000
01:16:53,040 --> 01:16:55,440
milliseconds for google which is great

2001
01:16:55,440 --> 01:16:56,960
we also found the same problem with

2002
01:16:56,960 --> 01:16:59,280
microsoft but the the thing is we're not

2003
01:16:59,280 --> 01:17:00,719
sending only to amsterdam they were

2004
01:17:00,719 --> 01:17:01,280
sending

2005
01:17:01,280 --> 01:17:03,040
we found this anycast provider it was a

2006
01:17:03,040 --> 01:17:05,199
different one uh was

2007
01:17:05,199 --> 01:17:06,800
now actually the same one was having

2008
01:17:06,800 --> 01:17:08,880
their appearing only the microsoft in

2009
01:17:08,880 --> 01:17:09,840
one location

2010
01:17:09,840 --> 01:17:11,360
and that caused polarization because

2011
01:17:11,360 --> 01:17:13,600
there was like the bgp distance was very

2012
01:17:13,600 --> 01:17:15,520
short it was only one hot distance

2013
01:17:15,520 --> 01:17:17,600
so we talked to them and they dipped at

2014
01:17:17,600 --> 01:17:19,120
site and immediately so

2015
01:17:19,120 --> 01:17:21,120
the latest before it was around 100

2016
01:17:21,120 --> 01:17:22,640
milliseconds and after that you see

2017
01:17:22,640 --> 01:17:24,800
reduction significantly as well

2018
01:17:24,800 --> 01:17:26,480
so we were able to fix the

2019
01:17:26,480 --> 01:17:28,960
disposalization of bgp

2020
01:17:28,960 --> 01:17:31,120
so if you interrupt giovanna you have

2021
01:17:31,120 --> 01:17:32,159
five minutes

2022
01:17:32,159 --> 01:17:35,920
remaining until q a perfect thanks

2023
01:17:35,920 --> 01:17:39,360
uh so these are the things we fixed uh

2024
01:17:39,360 --> 01:17:43,199
but we also wanted something more um

2025
01:17:43,199 --> 01:17:44,960
reactive something more dynamic it can

2026
01:17:44,960 --> 01:17:46,800
help us not only post modern

2027
01:17:46,800 --> 01:17:48,960
analysis so what do we do to create a

2028
01:17:48,960 --> 01:17:50,400
system called and eater

2029
01:17:50,400 --> 01:17:53,040
which pretty much uh we this is a

2030
01:17:53,040 --> 01:17:54,719
freaking this one and a cast network and

2031
01:17:54,719 --> 01:17:56,000
these are five sites

2032
01:17:56,000 --> 01:17:58,719
we have a tool called introduction that

2033
01:17:58,719 --> 01:18:00,640
actually gets out ingest all this data

2034
01:18:00,640 --> 01:18:02,400
and puts in a nice format for us

2035
01:18:02,400 --> 01:18:05,040
so ant heater is just a two a python a

2036
01:18:05,040 --> 01:18:06,880
set of python scripts that tweets

2037
01:18:06,880 --> 01:18:08,320
this data from entrada the rtt

2038
01:18:08,320 --> 01:18:10,159
measurements and you know put in a

2039
01:18:10,159 --> 01:18:11,840
database and then it connects to grafana

2040
01:18:11,840 --> 01:18:13,120
and you get a nice graph

2041
01:18:13,120 --> 01:18:14,480
and that's where we have right now with

2042
01:18:14,480 --> 01:18:16,560
real-time monitoring that i know of this

2043
01:18:16,560 --> 01:18:18,000
i mean i would say near real-time

2044
01:18:18,000 --> 01:18:19,440
monitoring because there's some delay

2045
01:18:19,440 --> 01:18:21,840
between exporting traffic transtrata

2046
01:18:21,840 --> 01:18:24,239
and then getting uh entitled to query

2047
01:18:24,239 --> 01:18:25,199
that

2048
01:18:25,199 --> 01:18:27,360
but still so this is an anteater it's a

2049
01:18:27,360 --> 01:18:29,040
nice animal this is my dad took this

2050
01:18:29,040 --> 01:18:30,080
picture this week

2051
01:18:30,080 --> 01:18:32,159
while he was mountain biking so that was

2052
01:18:32,159 --> 01:18:33,840
a yeah a rental name for

2053
01:18:33,840 --> 01:18:37,920
the system and we used that to detect

2054
01:18:37,920 --> 01:18:41,040
route leaks so this is one another

2055
01:18:41,040 --> 01:18:42,239
example what happened

2056
01:18:42,239 --> 01:18:45,520
uh to a particular site of this uh any

2057
01:18:45,520 --> 01:18:46,880
caspian network

2058
01:18:46,880 --> 01:18:49,760
you know the site had an rtt of roughly

2059
01:18:49,760 --> 01:18:51,920
20 to 30 milliseconds average

2060
01:18:51,920 --> 01:18:54,239
and in one day it went very high so we

2061
01:18:54,239 --> 01:18:55,840
get alerts by mail say hey

2062
01:18:55,840 --> 01:18:57,760
particular site sydney it's getting like

2063
01:18:57,760 --> 01:18:59,199
a large large

2064
01:18:59,199 --> 01:19:01,120
rtt there's massive increase you better

2065
01:19:01,120 --> 01:19:02,239
check it out

2066
01:19:02,239 --> 01:19:03,760
and when you went to investigate what

2067
01:19:03,760 --> 01:19:05,440
happened you see the number of queries

2068
01:19:05,440 --> 01:19:06,640
going really high

2069
01:19:06,640 --> 01:19:09,199
and also the resolvers so we talked to

2070
01:19:09,199 --> 01:19:09,920
the operator

2071
01:19:09,920 --> 01:19:13,120
interpreter said well we have a tier one

2072
01:19:13,120 --> 01:19:15,440
uh isp there in this particular site and

2073
01:19:15,440 --> 01:19:17,199
they propagated our route beyond

2074
01:19:17,199 --> 01:19:18,719
what they should have done and that

2075
01:19:18,719 --> 01:19:20,400
brought out the traffic from europe

2076
01:19:20,400 --> 01:19:22,480
so i saw all the eu traffic instead of

2077
01:19:22,480 --> 01:19:24,159
staying in europe you went to australia

2078
01:19:24,159 --> 01:19:26,400
and that caused this massive delay so

2079
01:19:26,400 --> 01:19:27,280
they already i mean

2080
01:19:27,280 --> 01:19:28,480
i didn't have to notify that they

2081
01:19:28,480 --> 01:19:30,400
already were i mean did notify them but

2082
01:19:30,400 --> 01:19:31,920
they were on it already

2083
01:19:31,920 --> 01:19:33,600
and they withdraw the site for a while

2084
01:19:33,600 --> 01:19:35,120
and then you put back again and you saw

2085
01:19:35,120 --> 01:19:37,280
the latest is being reduced again

2086
01:19:37,280 --> 01:19:40,400
so but i mean we are there now we are

2087
01:19:40,400 --> 01:19:42,239
hired to service from another provider

2088
01:19:42,239 --> 01:19:43,840
we wouldn't have no we would that would

2089
01:19:43,840 --> 01:19:45,360
that would be very hard to know

2090
01:19:45,360 --> 01:19:47,040
that that actually happened if we

2091
01:19:47,040 --> 01:19:49,199
wouldn't be by the system

2092
01:19:49,199 --> 01:19:51,679
so in summary it's a this rtt

2093
01:19:51,679 --> 01:19:53,120
measurements from dns are very useful

2094
01:19:53,120 --> 01:19:54,560
for any case engineering

2095
01:19:54,560 --> 01:19:56,239
you can we show how we prioritize

2096
01:19:56,239 --> 01:19:58,320
analysis per site per client or tunnel

2097
01:19:58,320 --> 01:19:59,360
systems

2098
01:19:59,360 --> 01:20:01,040
we use that in three different anycast

2099
01:20:01,040 --> 01:20:02,400
services

2100
01:20:02,400 --> 01:20:05,120
a b and b root we document polarization

2101
01:20:05,120 --> 01:20:06,960
we shadow latency in various cases

2102
01:20:06,960 --> 01:20:10,800
in up to 90 milliseconds uh

2103
01:20:10,800 --> 01:20:12,719
and and try to if you if you want to

2104
01:20:12,719 --> 01:20:14,080
entirely already get those measurements

2105
01:20:14,080 --> 01:20:15,679
for free meaning like it computes

2106
01:20:15,679 --> 01:20:18,080
already rtt for you for tcp

2107
01:20:18,080 --> 01:20:19,440
and we've been using that four and a

2108
01:20:19,440 --> 01:20:20,960
half years at the end if you're

2109
01:20:20,960 --> 01:20:22,320
interested to read more

2110
01:20:22,320 --> 01:20:23,920
this is the link to the technical report

2111
01:20:23,920 --> 01:20:25,520
which we should be updating

2112
01:20:25,520 --> 01:20:28,800
soon and with that i yeah a whole bunch

2113
01:20:28,800 --> 01:20:32,159
of questions i guess

2114
01:20:32,159 --> 01:20:34,560
thank you running it's uh two minutes

2115
01:20:34,560 --> 01:20:36,880
ahead of schedule so that's good

2116
01:20:36,880 --> 01:20:39,520
um if anyone has any questions at this

2117
01:20:39,520 --> 01:20:40,000
time

2118
01:20:40,000 --> 01:20:43,199
uh please raise your hand uh and

2119
01:20:43,199 --> 01:20:45,199
i will allow you to immute yourself or

2120
01:20:45,199 --> 01:20:47,280
type in the qa box and

2121
01:20:47,280 --> 01:20:48,800
i'll be happy to read out your question

2122
01:20:48,800 --> 01:20:50,320
for you um

2123
01:20:50,320 --> 01:20:52,400
as in previous talks a poll should be

2124
01:20:52,400 --> 01:20:53,760
appearing on your

2125
01:20:53,760 --> 01:20:56,080
screen at any second and we would

2126
01:20:56,080 --> 01:20:57,679
appreciate your

2127
01:20:57,679 --> 01:21:01,280
feedback on the on the top

2128
01:21:01,600 --> 01:21:04,560
so i see uh i see one raised hand to

2129
01:21:04,560 --> 01:21:05,920
racehand so far so

2130
01:21:05,920 --> 01:21:09,120
um i'm gonna i'm gonna

2131
01:21:09,120 --> 01:21:12,560
allow machia

2132
01:21:12,560 --> 01:21:14,639
sorry if i've mispronounced your name i

2133
01:21:14,639 --> 01:21:16,080
do i do

2134
01:21:16,080 --> 01:21:18,159
things you should be able to yourself

2135
01:21:18,159 --> 01:21:20,080
and ask your question

2136
01:21:20,080 --> 01:21:22,880
yeah yeah so thanks for an interesting

2137
01:21:22,880 --> 01:21:24,480
presentation

2138
01:21:24,480 --> 01:21:27,760
uh as you already know in cesar c

2139
01:21:27,760 --> 01:21:29,840
we did exactly the same analysis two

2140
01:21:29,840 --> 01:21:31,120
years ago

2141
01:21:31,120 --> 01:21:34,239
and i first presented it in my 2019

2142
01:21:34,239 --> 01:21:36,719
during the jamboree in amsterdam

2143
01:21:36,719 --> 01:21:39,040
uh so basically our conclusions were

2144
01:21:39,040 --> 01:21:40,719
quite similar

2145
01:21:40,719 --> 01:21:43,040
we found this method to be very powerful

2146
01:21:43,040 --> 01:21:43,840
and

2147
01:21:43,840 --> 01:21:46,159
it helped us to identify locations with

2148
01:21:46,159 --> 01:21:47,040
poor rtt

2149
01:21:47,040 --> 01:21:50,880
and we did some bgp tuning

2150
01:21:50,880 --> 01:21:52,800
and we deployed servers in new locations

2151
01:21:52,800 --> 01:21:55,120
like in singapore

2152
01:21:55,120 --> 01:21:57,440
so all these changes helped us to reduce

2153
01:21:57,440 --> 01:22:00,560
the rtt in some locations so

2154
01:22:00,560 --> 01:22:02,960
if you are interesting uh if you are

2155
01:22:02,960 --> 01:22:04,239
interested in our work

2156
01:22:04,239 --> 01:22:06,800
or in this topic you can find out more

2157
01:22:06,800 --> 01:22:07,520
on

2158
01:22:07,520 --> 01:22:10,639
see that nick block okay

2159
01:22:10,639 --> 01:22:12,719
so just just the comments so that's that

2160
01:22:12,719 --> 01:22:15,360
that's it thank you

2161
01:22:15,360 --> 01:22:18,480
thank you very much uh so uh next we

2162
01:22:18,480 --> 01:22:20,000
have a question from uh

2163
01:22:20,000 --> 01:22:22,480
benno overrider which i'll allow you to

2164
01:22:22,480 --> 01:22:25,679
mute yourself better

2165
01:22:25,679 --> 01:22:27,600
hi hi giovanna thank you for the

2166
01:22:27,600 --> 01:22:28,800
presentation

2167
01:22:28,800 --> 01:22:32,400
um you you mentioned that you use it at

2168
01:22:32,400 --> 01:22:35,600
sabn um but

2169
01:22:35,600 --> 01:22:38,480
probably so you have the monitoring but

2170
01:22:38,480 --> 01:22:39,199
you use

2171
01:22:39,199 --> 01:22:41,600
uh well human intelligence i think so

2172
01:22:41,600 --> 01:22:43,199
you you do the analysis

2173
01:22:43,199 --> 01:22:46,159
and act are you thinking to create a

2174
01:22:46,159 --> 01:22:47,600
dashboard or some

2175
01:22:47,600 --> 01:22:50,800
more automated so alerting

2176
01:22:50,800 --> 01:22:54,080
and analysis uh tooling yeah we have it

2177
01:22:54,080 --> 01:22:55,440
we call it an ether but

2178
01:22:55,440 --> 01:22:58,159
well uh introduced just pretty much

2179
01:22:58,159 --> 01:22:58,560
crunch

2180
01:22:58,560 --> 01:23:01,360
the caps and put it in a format that you

2181
01:23:01,360 --> 01:23:02,560
can actually read

2182
01:23:02,560 --> 01:23:04,560
and anteater gets this data from trot

2183
01:23:04,560 --> 01:23:06,560
and put it in another database

2184
01:23:06,560 --> 01:23:07,760
and then they connect to a graphona

2185
01:23:07,760 --> 01:23:09,760
dashboard and that's what we have

2186
01:23:09,760 --> 01:23:10,639
running

2187
01:23:10,639 --> 01:23:13,440
and for example um i could show here but

2188
01:23:13,440 --> 01:23:15,120
i don't want to mess up with

2189
01:23:15,120 --> 01:23:18,080
this in real time right now but um you

2190
01:23:18,080 --> 01:23:19,280
would get a dashboard

2191
01:23:19,280 --> 01:23:20,960
we have a dashboard running in real time

2192
01:23:20,960 --> 01:23:23,440
now that you would set an alert say hey

2193
01:23:23,440 --> 01:23:24,880
if google is getting more than 100

2194
01:23:24,880 --> 01:23:27,280
milliseconds for this particular server

2195
01:23:27,280 --> 01:23:28,400
and you get all this it's already

2196
01:23:28,400 --> 01:23:30,480
running it's been running yeah okay

2197
01:23:30,480 --> 01:23:34,080
alerting uh okay excellent yeah cause

2198
01:23:34,080 --> 01:23:35,520
that's the important part i mean

2199
01:23:35,520 --> 01:23:37,840
because authorized i mean you need this

2200
01:23:37,840 --> 01:23:39,600
in real time as well

2201
01:23:39,600 --> 01:23:41,760
yeah yeah no with the alerting i

2202
01:23:41,760 --> 01:23:42,800
understand and

2203
01:23:42,800 --> 01:23:45,760
then you get informed and act yeah

2204
01:23:45,760 --> 01:23:46,480
thanks

2205
01:23:46,480 --> 01:23:47,920
yeah and that's how i actually found

2206
01:23:47,920 --> 01:23:49,520
this with

2207
01:23:49,520 --> 01:23:52,960
uh sydney the case

2208
01:23:52,960 --> 01:23:56,320
was an alert that i got see

2209
01:23:56,320 --> 01:23:59,040
like when when uh this rtt from the site

2210
01:23:59,040 --> 01:24:01,199
went up above 200 it was like whoa

2211
01:24:01,199 --> 01:24:02,880
what's going on so get an email you go

2212
01:24:02,880 --> 01:24:04,239
there and

2213
01:24:04,239 --> 01:24:08,320
check thanks sure

2214
01:24:08,320 --> 01:24:11,760
thank you um just a reminder to any uh

2215
01:24:11,760 --> 01:24:13,760
uh people asking questions to mention

2216
01:24:13,760 --> 01:24:15,199
their affiliation

2217
01:24:15,199 --> 01:24:17,520
so next we've got a question from uh roy

2218
01:24:17,520 --> 01:24:18,480
aaron so i'm gonna

2219
01:24:18,480 --> 01:24:22,320
i'll write yeah you can only yourself

2220
01:24:25,040 --> 01:24:26,560
um thank you for the presentation

2221
01:24:26,560 --> 01:24:28,639
giovanni um i've got a question about

2222
01:24:28,639 --> 01:24:30,320
oh sorry my name is roy adams i work at

2223
01:24:30,320 --> 01:24:32,000
icann

2224
01:24:32,000 --> 01:24:34,960
have you considered correlating hob

2225
01:24:34,960 --> 01:24:35,600
count

2226
01:24:35,600 --> 01:24:39,120
with rtt as well i'd be interested in

2227
01:24:39,120 --> 01:24:40,480
seeing those results if you have

2228
01:24:40,480 --> 01:24:41,040
anything

2229
01:24:41,040 --> 01:24:44,639
thanks um i think you did some work on

2230
01:24:44,639 --> 01:24:46,320
that i saw some presentations before

2231
01:24:46,320 --> 01:24:49,120
uh i we never no i never really look

2232
01:24:49,120 --> 01:24:50,560
into that

2233
01:24:50,560 --> 01:24:52,320
uh that would be very interesting to see

2234
01:24:52,320 --> 01:24:54,080
that

2235
01:24:54,080 --> 01:24:56,159
especially case of polarization but i

2236
01:24:56,159 --> 01:24:58,000
know short answer no i cannot no

2237
01:24:58,000 --> 01:24:59,679
i haven't ever done that but it would be

2238
01:24:59,679 --> 01:25:01,600
interesting though

2239
01:25:01,600 --> 01:25:04,320
all right thank you

2240
01:25:04,719 --> 01:25:07,840
thanks ryan um uh

2241
01:25:07,840 --> 01:25:11,280
next i have a question uh in the q a

2242
01:25:11,280 --> 01:25:14,159
from uh martin the bostilles and

2243
01:25:14,159 --> 01:25:16,000
giovanni he's asking if

2244
01:25:16,000 --> 01:25:18,560
anteater is open sorter and martin's

2245
01:25:18,560 --> 01:25:20,320
from dns belgium

2246
01:25:20,320 --> 01:25:24,239
uh what is open source sorry i'm teacher

2247
01:25:24,239 --> 01:25:26,960
no i mean no it's not really open source

2248
01:25:26,960 --> 01:25:29,040
now probably can't do that but it's it

2249
01:25:29,040 --> 01:25:31,280
is really specific to entrata

2250
01:25:31,280 --> 01:25:34,480
so it's just a bunch of dns query

2251
01:25:34,480 --> 01:25:37,120
sql queries and they start in a database

2252
01:25:37,120 --> 01:25:37,679
i mean

2253
01:25:37,679 --> 01:25:40,239
the so the hard lift have lifting is

2254
01:25:40,239 --> 01:25:41,199
done here

2255
01:25:41,199 --> 01:25:43,920
and here just say well give me the rtt

2256
01:25:43,920 --> 01:25:45,360
for the last 10 minutes for this

2257
01:25:45,360 --> 01:25:47,520
autonomous system over v4 v6

2258
01:25:47,520 --> 01:25:50,480
and install another database um and

2259
01:25:50,480 --> 01:25:53,199
grafana reads that information

2260
01:25:53,199 --> 01:25:55,520
but i potentially could open source we

2261
01:25:55,520 --> 01:25:56,960
never did it but it could

2262
01:25:56,960 --> 01:25:58,000
but you know you would have to have

2263
01:25:58,000 --> 01:26:00,800
entrada for that

2264
01:26:01,040 --> 01:26:04,639
okay thank you so um thanks everyone for

2265
01:26:04,639 --> 01:26:05,840
the questions uh

2266
01:26:05,840 --> 01:26:07,280
and thank you steven for the

2267
01:26:07,280 --> 01:26:09,040
presentation uh

2268
01:26:09,040 --> 01:26:12,400
we will uh move on to our uh

2269
01:26:12,400 --> 01:26:15,679
last presentation before our one hour

2270
01:26:15,679 --> 01:26:17,920
lunch slash dinner break this is a

2271
01:26:17,920 --> 01:26:19,600
presentation from uh

2272
01:26:19,600 --> 01:26:22,880
patrick club on making dns just work at

2273
01:26:22,880 --> 01:26:24,320
scale

2274
01:26:24,320 --> 01:26:27,040
welcome to you passion hey thanks very

2275
01:26:27,040 --> 01:26:27,520
much

2276
01:26:27,520 --> 01:26:31,199
let me just share my screen guys

2277
01:26:33,440 --> 01:26:35,040
yeah we can hear you and see your

2278
01:26:35,040 --> 01:26:36,560
presentation

2279
01:26:36,560 --> 01:26:38,480
great great okay well again thanks for

2280
01:26:38,480 --> 01:26:39,840
the introduction uh this

2281
01:26:39,840 --> 01:26:42,800
is my first uh virtual conference so

2282
01:26:42,800 --> 01:26:44,560
hats off to the team by the way

2283
01:26:44,560 --> 01:26:47,840
uh great work making it all look easy um

2284
01:26:47,840 --> 01:26:50,960
that said i miss jumping on a plane so

2285
01:26:50,960 --> 01:26:52,560
hopefully we're not on this mode for too

2286
01:26:52,560 --> 01:26:54,480
much longer

2287
01:26:54,480 --> 01:26:58,159
okay so my name is patrick cullen i work

2288
01:26:58,159 --> 01:27:01,280
at facebook i'm part of a team that

2289
01:27:01,280 --> 01:27:03,040
endeavors to make sure dns works

2290
01:27:03,040 --> 01:27:04,320
reliably

2291
01:27:04,320 --> 01:27:07,120
at facebook and on the face of it that's

2292
01:27:07,120 --> 01:27:09,280
not such a tall order right because

2293
01:27:09,280 --> 01:27:11,760
dns has been around as we all know for

2294
01:27:11,760 --> 01:27:12,320
some time

2295
01:27:12,320 --> 01:27:15,600
it's well into its mid 30s now and so

2296
01:27:15,600 --> 01:27:18,960
making it just work shouldn't involve

2297
01:27:18,960 --> 01:27:22,880
too much poking and prodding

2298
01:27:26,159 --> 01:27:29,040
so as it turns out as we found out it's

2299
01:27:29,040 --> 01:27:31,120
never that simple

2300
01:27:31,120 --> 01:27:32,639
i think as we all have learned in the

2301
01:27:32,639 --> 01:27:34,400
last 12 months or so

2302
01:27:34,400 --> 01:27:36,800
we don't live in a static universe and

2303
01:27:36,800 --> 01:27:38,400
we've all been seeing a lot of growth

2304
01:27:38,400 --> 01:27:40,800
in demand and at facebook we've got

2305
01:27:40,800 --> 01:27:41,520
growth

2306
01:27:41,520 --> 01:27:43,920
and we've also got scale so let's keep

2307
01:27:43,920 --> 01:27:46,080
things pretty interesting

2308
01:27:46,080 --> 01:27:48,400
and you know before i go deeper into the

2309
01:27:48,400 --> 01:27:49,520
talk you know

2310
01:27:49,520 --> 01:27:52,159
just up front this isn't a talk with any

2311
01:27:52,159 --> 01:27:54,239
overarching theme or

2312
01:27:54,239 --> 01:27:56,719
or big picture idea there's no grand

2313
01:27:56,719 --> 01:27:58,480
vision or shiny future

2314
01:27:58,480 --> 01:28:01,600
instead what i'm going to talk about is

2315
01:28:01,600 --> 01:28:03,679
the problems we've tackled over the last

2316
01:28:03,679 --> 01:28:05,440
12 months or so some of the challenges

2317
01:28:05,440 --> 01:28:07,280
we've faced and how we tackled them

2318
01:28:07,280 --> 01:28:10,400
and what worked for us and every time we

2319
01:28:10,400 --> 01:28:11,760
leveled up

2320
01:28:11,760 --> 01:28:14,320
um what the next boss battle looked like

2321
01:28:14,320 --> 01:28:15,120
so

2322
01:28:15,120 --> 01:28:17,520
it was really a case of one step at a

2323
01:28:17,520 --> 01:28:19,760
time

2324
01:28:24,800 --> 01:28:26,560
so i'm going to talk a little at the

2325
01:28:26,560 --> 01:28:28,800
beginning uh give a quick backdrop on

2326
01:28:28,800 --> 01:28:30,000
our scale

2327
01:28:30,000 --> 01:28:32,639
and talk about uh how we do naming

2328
01:28:32,639 --> 01:28:33,840
services at facebook

2329
01:28:33,840 --> 01:28:36,000
before i dive in a little more into some

2330
01:28:36,000 --> 01:28:37,840
of the challenges we faced

2331
01:28:37,840 --> 01:28:41,920
um things like hitting the limits of cdb

2332
01:28:41,920 --> 01:28:44,000
the benefits of divvying up our dns

2333
01:28:44,000 --> 01:28:45,440
workload

2334
01:28:45,440 --> 01:28:48,880
reducing the burden of unnecessary dns

2335
01:28:48,880 --> 01:28:50,320
queries

2336
01:28:50,320 --> 01:28:51,840
so that we can be a better peer to

2337
01:28:51,840 --> 01:28:54,480
others and the challenges we faced

2338
01:28:54,480 --> 01:28:56,639
in speeding up how quickly we update our

2339
01:28:56,639 --> 01:28:58,719
dns records

2340
01:28:58,719 --> 01:29:02,159
so let me draw

2341
01:29:02,159 --> 01:29:05,519
a quick picture

2342
01:29:05,679 --> 01:29:08,080
so we group we group dns at facebook

2343
01:29:08,080 --> 01:29:09,440
into

2344
01:29:09,440 --> 01:29:12,239
three main groupings let's say we have

2345
01:29:12,239 --> 01:29:14,239
corp dns which caters to facebook

2346
01:29:14,239 --> 01:29:15,760
employees

2347
01:29:15,760 --> 01:29:18,400
and then we've edge dns which as the

2348
01:29:18,400 --> 01:29:18,800
name

2349
01:29:18,800 --> 01:29:22,000
may suggest focuses on

2350
01:29:22,000 --> 01:29:24,880
user traffic so it runs typically on

2351
01:29:24,880 --> 01:29:25,920
pops

2352
01:29:25,920 --> 01:29:27,360
we've got a relatively small set of

2353
01:29:27,360 --> 01:29:29,520
records and these are all user visible

2354
01:29:29,520 --> 01:29:31,360
and a good example of this would be

2355
01:29:31,360 --> 01:29:33,600
fb.com right

2356
01:29:33,600 --> 01:29:35,440
and the interesting part with edge dns

2357
01:29:35,440 --> 01:29:36,719
is how we do

2358
01:29:36,719 --> 01:29:39,760
load balancing of traffic based upon how

2359
01:29:39,760 --> 01:29:41,520
users are coming in which regions and so

2360
01:29:41,520 --> 01:29:43,120
on

2361
01:29:43,120 --> 01:29:44,960
but the area i'm going to focus on today

2362
01:29:44,960 --> 01:29:46,320
is our prod dns

2363
01:29:46,320 --> 01:29:49,600
this is the internal dns we use within

2364
01:29:49,600 --> 01:29:50,480
facebook so

2365
01:29:50,480 --> 01:29:52,960
all the machines in our data centers use

2366
01:29:52,960 --> 01:29:54,159
broad dns so

2367
01:29:54,159 --> 01:29:57,520
it's got a huge set of dns records and

2368
01:29:57,520 --> 01:29:59,199
this is where we spent a lot of time

2369
01:29:59,199 --> 01:30:01,280
over the last last uh

2370
01:30:01,280 --> 01:30:04,840
18 months or so reworking various

2371
01:30:04,840 --> 01:30:07,840
components

2372
01:30:10,239 --> 01:30:13,199
so just going to talk quickly about

2373
01:30:13,199 --> 01:30:16,239
about scale first

2374
01:30:16,480 --> 01:30:20,159
we've seen a big increase in load um

2375
01:30:20,159 --> 01:30:23,520
over the last uh 12 months and

2376
01:30:23,520 --> 01:30:26,400
equally we've seen a big growth in in

2377
01:30:26,400 --> 01:30:28,080
the number of records

2378
01:30:28,080 --> 01:30:31,600
um that were we're serving up so

2379
01:30:31,600 --> 01:30:34,960
um with many records and and this growth

2380
01:30:34,960 --> 01:30:38,639
is kind of continuing each year

2381
01:30:41,120 --> 01:30:44,960
i want to talk a little about um

2382
01:30:45,199 --> 01:30:47,040
about the resolver this is the most

2383
01:30:47,040 --> 01:30:49,600
critical part of our infrastructure

2384
01:30:49,600 --> 01:30:52,080
and any issue with with our resolver

2385
01:30:52,080 --> 01:30:56,159
layer causes a major headache

2386
01:31:00,080 --> 01:31:03,600
so this is a simplified dns resolver

2387
01:31:03,600 --> 01:31:06,239
we have an authoritative dns server it's

2388
01:31:06,239 --> 01:31:08,480
responsible for the zones we manage

2389
01:31:08,480 --> 01:31:12,400
and zones facebook.com fb.com etc

2390
01:31:12,400 --> 01:31:15,520
however this isn't enough we

2391
01:31:15,520 --> 01:31:18,480
we need to get uh internet records as

2392
01:31:18,480 --> 01:31:18,960
well

2393
01:31:18,960 --> 01:31:22,080
um such as google.com etc so for this

2394
01:31:22,080 --> 01:31:23,280
purpose

2395
01:31:23,280 --> 01:31:26,239
we have a recursive dns server upfront

2396
01:31:26,239 --> 01:31:27,440
which talks to both

2397
01:31:27,440 --> 01:31:30,320
our own authoritative dns servers and

2398
01:31:30,320 --> 01:31:31,199
also to

2399
01:31:31,199 --> 01:31:34,480
internet resolvers and the recursive

2400
01:31:34,480 --> 01:31:36,159
server plays the role of a kind of a

2401
01:31:36,159 --> 01:31:38,239
balancer of queries it either directs

2402
01:31:38,239 --> 01:31:39,199
queries to our own

2403
01:31:39,199 --> 01:31:41,600
set of servers or unauthoritative dns

2404
01:31:41,600 --> 01:31:43,440
servers are

2405
01:31:43,440 --> 01:31:45,520
in other cases it will direct queries

2406
01:31:45,520 --> 01:31:47,600
outside to the public net

2407
01:31:47,600 --> 01:31:49,920
and because of that we need a public ip

2408
01:31:49,920 --> 01:31:51,120
address

2409
01:31:51,120 --> 01:31:59,840
to to reach internet services

2410
01:32:01,360 --> 01:32:03,440
now we use unbound it's a it's an open

2411
01:32:03,440 --> 01:32:05,920
source uh recursive and caching dns

2412
01:32:05,920 --> 01:32:07,040
server

2413
01:32:07,040 --> 01:32:09,760
and you know it can handle a huge volume

2414
01:32:09,760 --> 01:32:11,280
of queries a second

2415
01:32:11,280 --> 01:32:13,280
and it's pretty feature-rich it's got

2416
01:32:13,280 --> 01:32:15,120
some key features which we like

2417
01:32:15,120 --> 01:32:17,199
such as dns maps so we can return

2418
01:32:17,199 --> 01:32:18,800
different answers based on

2419
01:32:18,800 --> 01:32:21,520
a client location within facebook and

2420
01:32:21,520 --> 01:32:24,080
for the authoritative dns server

2421
01:32:24,080 --> 01:32:27,600
we were using tiny dns uh very fast

2422
01:32:27,600 --> 01:32:30,960
very simple um one of the disadvantages

2423
01:32:30,960 --> 01:32:32,239
we had faced with it

2424
01:32:32,239 --> 01:32:34,960
was that it didn't support very new very

2425
01:32:34,960 --> 01:32:35,840
recent features

2426
01:32:35,840 --> 01:32:39,280
so it's very secure but perhaps not as

2427
01:32:39,280 --> 01:32:41,440
as flexible but this was

2428
01:32:41,440 --> 01:32:43,360
this was our effectively our status quo

2429
01:32:43,360 --> 01:32:46,239
for for some time

2430
01:32:48,719 --> 01:32:50,639
so let's take a look at the uh the

2431
01:32:50,639 --> 01:32:55,840
authoritative dns server itself

2432
01:32:56,639 --> 01:33:00,080
so for starters what we did

2433
01:33:00,080 --> 01:33:02,960
uh as you know one of the early things

2434
01:33:02,960 --> 01:33:04,800
we did is we separated our dns records

2435
01:33:04,800 --> 01:33:07,440
into into two groupings we have

2436
01:33:07,440 --> 01:33:10,880
a zone which contains public records

2437
01:33:10,880 --> 01:33:12,000
that's our external

2438
01:33:12,000 --> 01:33:15,280
um our external um

2439
01:33:15,280 --> 01:33:17,600
chart and then we had one focus on all

2440
01:33:17,600 --> 01:33:19,360
our internal records

2441
01:33:19,360 --> 01:33:22,480
so we we would run two instances of

2442
01:33:22,480 --> 01:33:24,960
two instances of tiny dns on the box and

2443
01:33:24,960 --> 01:33:26,560
then use unbound

2444
01:33:26,560 --> 01:33:29,199
to direct the queries and one of the

2445
01:33:29,199 --> 01:33:31,199
reasons we did this is so that the

2446
01:33:31,199 --> 01:33:34,080
external zone um the external scope data

2447
01:33:34,080 --> 01:33:35,360
set let's say

2448
01:33:35,360 --> 01:33:37,199
it could be used on edge resolvers as

2449
01:33:37,199 --> 01:33:39,679
well without any changes

2450
01:33:39,679 --> 01:33:43,840
so this worked as i said but some of the

2451
01:33:43,840 --> 01:33:45,199
not having some of the newer features

2452
01:33:45,199 --> 01:33:48,320
became became a challenge specifically

2453
01:33:48,320 --> 01:33:50,719
edns supporting newer generations of

2454
01:33:50,719 --> 01:33:51,760
maps uh

2455
01:33:51,760 --> 01:33:55,040
ecsi and so on so

2456
01:33:55,040 --> 01:33:58,000
um so at at one point we decided we were

2457
01:33:58,000 --> 01:33:59,440
going to do a drop-in replacement and we

2458
01:33:59,440 --> 01:34:01,520
swapped out tiny dns

2459
01:34:01,520 --> 01:34:05,120
for fb dns this was uh

2460
01:34:05,120 --> 01:34:08,880
uh developed inside facebook um

2461
01:34:08,880 --> 01:34:12,159
it's similar in terms of its function

2462
01:34:12,159 --> 01:34:14,960
uh and it's written in go but that's

2463
01:34:14,960 --> 01:34:16,080
probably one of the major

2464
01:34:16,080 --> 01:34:18,159
uh differences and we can obviously add

2465
01:34:18,159 --> 01:34:19,199
features

2466
01:34:19,199 --> 01:34:23,360
as um as as we see requirements

2467
01:34:23,360 --> 01:34:26,560
so so this was great we we now had more

2468
01:34:26,560 --> 01:34:28,000
control over which features we

2469
01:34:28,000 --> 01:34:30,960
we could we could add to uh to our

2470
01:34:30,960 --> 01:34:32,880
authoritative dns servers

2471
01:34:32,880 --> 01:34:34,560
but we were still hitting another

2472
01:34:34,560 --> 01:34:36,639
bottleneck and the bottleneck was

2473
01:34:36,639 --> 01:34:39,679
cdb because both tiny dns

2474
01:34:39,679 --> 01:34:44,840
and fb dns use cdb as a storage backend

2475
01:34:44,840 --> 01:34:47,199
so cdb

2476
01:34:47,199 --> 01:34:49,520
offers a lot of advantages it's super

2477
01:34:49,520 --> 01:34:50,480
fast um

2478
01:34:50,480 --> 01:34:52,239
but there is one major limitation and

2479
01:34:52,239 --> 01:34:56,159
that is it's got a maximum size of four

2480
01:34:58,840 --> 01:35:00,880
gigabytes

2481
01:35:00,880 --> 01:35:04,159
and so this became a squeeze

2482
01:35:04,159 --> 01:35:06,639
we were getting closer and closer uh to

2483
01:35:06,639 --> 01:35:07,920
that line

2484
01:35:07,920 --> 01:35:10,159
and you know if we hit four gigabytes

2485
01:35:10,159 --> 01:35:12,480
cdb wasn't going to compile so

2486
01:35:12,480 --> 01:35:13,760
so one of the things we started working

2487
01:35:13,760 --> 01:35:16,560
on early on was

2488
01:35:16,560 --> 01:35:20,159
breaking up cdb so effectively sharding

2489
01:35:20,159 --> 01:35:22,800
uh our records so we split our internal

2490
01:35:22,800 --> 01:35:23,760
chart

2491
01:35:23,760 --> 01:35:26,239
uh into multiple shards and with some

2492
01:35:26,239 --> 01:35:27,280
tinkering we

2493
01:35:27,280 --> 01:35:29,360
we got load balancing to work so that we

2494
01:35:29,360 --> 01:35:31,520
were load balancing kind of fairly

2495
01:35:31,520 --> 01:35:33,679
evenly among the shards

2496
01:35:33,679 --> 01:35:35,760
but even with that we started

2497
01:35:35,760 --> 01:35:37,520
approaching the four gigabyte

2498
01:35:37,520 --> 01:35:40,560
limit with the individual shards so we

2499
01:35:40,560 --> 01:35:43,840
had to take another approach

2500
01:35:46,560 --> 01:35:49,280
and the answer to that in our case was

2501
01:35:49,280 --> 01:35:50,320
rocks db

2502
01:35:50,320 --> 01:35:53,840
so cdb it's a key

2503
01:35:53,840 --> 01:35:55,600
it's a key value store and there's

2504
01:35:55,600 --> 01:35:56,719
plenty of products out there that

2505
01:35:56,719 --> 01:35:58,320
provide that type of functionality

2506
01:35:58,320 --> 01:36:00,320
so we had looked at a bunch of

2507
01:36:00,320 --> 01:36:01,600
alternatives

2508
01:36:01,600 --> 01:36:05,440
and lmdb badger and so on um

2509
01:36:05,440 --> 01:36:08,719
but roxdb for our use case

2510
01:36:08,719 --> 01:36:10,960
offered you know very good performance

2511
01:36:10,960 --> 01:36:12,880
very good look up times

2512
01:36:12,880 --> 01:36:15,199
and in certain use cases like with keys

2513
01:36:15,199 --> 01:36:16,480
that are lexically close

2514
01:36:16,480 --> 01:36:18,320
we saw we saw a very good performance so

2515
01:36:18,320 --> 01:36:20,719
this this was great especially for ecs

2516
01:36:20,719 --> 01:36:21,440
maps

2517
01:36:21,440 --> 01:36:24,480
um and the other big advantage is you

2518
01:36:24,480 --> 01:36:26,239
know cdb is a constant database

2519
01:36:26,239 --> 01:36:27,600
every time you change anything if you

2520
01:36:27,600 --> 01:36:29,119
change a single record you have to

2521
01:36:29,119 --> 01:36:30,159
recompile

2522
01:36:30,159 --> 01:36:31,840
the entire database and so that takes a

2523
01:36:31,840 --> 01:36:33,679
while it takes generally in our case

2524
01:36:33,679 --> 01:36:35,679
it could take over a minute and it was

2525
01:36:35,679 --> 01:36:37,280
burning cpu

2526
01:36:37,280 --> 01:36:40,159
with roxdb that wasn't a requirement and

2527
01:36:40,159 --> 01:36:41,600
it meant we could actually update the

2528
01:36:41,600 --> 01:36:43,280
database far faster in fact

2529
01:36:43,280 --> 01:36:44,960
we were able to cut the updating time

2530
01:36:44,960 --> 01:36:47,840
down dramatically

2531
01:36:49,119 --> 01:36:51,040
and as a result we saw faster record

2532
01:36:51,040 --> 01:36:52,719
propagation so we were able to reduce

2533
01:36:52,719 --> 01:36:54,080
dramatically

2534
01:36:54,080 --> 01:36:57,520
how quickly records propagated um to or

2535
01:36:57,520 --> 01:37:00,560
to our dns servers so this means clients

2536
01:37:00,560 --> 01:37:01,360
can

2537
01:37:01,360 --> 01:37:02,960
you know more quickly resolve new

2538
01:37:02,960 --> 01:37:05,440
records

2539
01:37:05,760 --> 01:37:07,600
and teams that we work with that are

2540
01:37:07,600 --> 01:37:09,840
provisioning new compute and so on for

2541
01:37:09,840 --> 01:37:10,400
them

2542
01:37:10,400 --> 01:37:12,000
one of the bottlenecks for provisioning

2543
01:37:12,000 --> 01:37:14,159
can be waiting for the associated

2544
01:37:14,159 --> 01:37:15,760
resource records for those new machines

2545
01:37:15,760 --> 01:37:17,679
to be available in dns so

2546
01:37:17,679 --> 01:37:19,280
this was a big win for that those things

2547
01:37:19,280 --> 01:37:21,840
in particular

2548
01:37:32,320 --> 01:37:34,239
and one other big benefit was the size

2549
01:37:34,239 --> 01:37:35,760
of the database so

2550
01:37:35,760 --> 01:37:37,840
you know previously we had to repeatedly

2551
01:37:37,840 --> 01:37:39,199
recompile cbb

2552
01:37:39,199 --> 01:37:42,719
so this generated gigabytes of data and

2553
01:37:42,719 --> 01:37:45,600
um at one point we we moved to temp fs

2554
01:37:45,600 --> 01:37:47,679
because we wanted to reduce the

2555
01:37:47,679 --> 01:37:50,480
number of rights number rights ssds and

2556
01:37:50,480 --> 01:37:51,840
the wear and tear we were placing on

2557
01:37:51,840 --> 01:37:52,960
them

2558
01:37:52,960 --> 01:37:54,800
but by going to temp fs obviously we

2559
01:37:54,800 --> 01:37:56,480
were we were consuming ram

2560
01:37:56,480 --> 01:38:00,400
so we were allocating a chunk of ram

2561
01:38:00,400 --> 01:38:02,400
um you know for temp fs and it left us

2562
01:38:02,400 --> 01:38:04,320
with less ram to actually process

2563
01:38:04,320 --> 01:38:05,119
queries

2564
01:38:05,119 --> 01:38:08,159
so so being able to drop temp ffs down

2565
01:38:08,159 --> 01:38:10,400
to a much smaller size

2566
01:38:10,400 --> 01:38:12,239
about a third of what it was previously

2567
01:38:12,239 --> 01:38:14,320
meant we got better cash hit ratios we

2568
01:38:14,320 --> 01:38:16,400
had more ram available to do

2569
01:38:16,400 --> 01:38:19,520
the thing that we wanted it to do so but

2570
01:38:19,520 --> 01:38:20,880
then we realized one of the other things

2571
01:38:20,880 --> 01:38:22,400
we could go back to doing was

2572
01:38:22,400 --> 01:38:24,800
stop using temp fest altogether and go

2573
01:38:24,800 --> 01:38:26,159
back to using ssd

2574
01:38:26,159 --> 01:38:31,839
so so that's ultimately what we did

2575
01:38:32,480 --> 01:38:34,960
so we've made good inroads on the

2576
01:38:34,960 --> 01:38:36,320
authoritative dns

2577
01:38:36,320 --> 01:38:37,760
side of things right with with the

2578
01:38:37,760 --> 01:38:39,520
changes and

2579
01:38:39,520 --> 01:38:42,480
so we were now in much better shape in

2580
01:38:42,480 --> 01:38:45,040
terms of that layer um

2581
01:38:45,040 --> 01:38:47,360
fbdns made a big difference roxdb made a

2582
01:38:47,360 --> 01:38:48,560
big difference

2583
01:38:48,560 --> 01:38:50,639
but recursion was that was the next

2584
01:38:50,639 --> 01:38:52,639
place we started to see

2585
01:38:52,639 --> 01:38:54,400
we needed a lot we needed to do a lot of

2586
01:38:54,400 --> 01:38:55,679
work so

2587
01:38:55,679 --> 01:38:58,239
let's put back this picture so we have

2588
01:38:58,239 --> 01:38:59,360
unbound at the front

2589
01:38:59,360 --> 01:39:01,119
and it's sending queries to different

2590
01:39:01,119 --> 01:39:04,320
shards uh depending on the zone so

2591
01:39:04,320 --> 01:39:06,000
you know green facebook.com and this

2592
01:39:06,000 --> 01:39:08,600
example is going to the internal shard

2593
01:39:08,600 --> 01:39:11,280
bluefacebook.com is going to chart for

2594
01:39:11,280 --> 01:39:12,320
you know our internet queries are

2595
01:39:12,320 --> 01:39:14,320
getting sent out to the internet

2596
01:39:14,320 --> 01:39:18,400
and that's you know that works

2597
01:39:18,400 --> 01:39:20,400
and it's all controlled by the unbound

2598
01:39:20,400 --> 01:39:21,520
config so

2599
01:39:21,520 --> 01:39:24,560
we explicitly call out you know where

2600
01:39:24,560 --> 01:39:25,600
queries need to go

2601
01:39:25,600 --> 01:39:28,159
and so you end up with an enormous uh

2602
01:39:28,159 --> 01:39:30,080
configuration file so

2603
01:39:30,080 --> 01:39:33,199
many thousands of lines and was working

2604
01:39:33,199 --> 01:39:33,520
but

2605
01:39:33,520 --> 01:39:36,719
you know it was it was a fairly large uh

2606
01:39:36,719 --> 01:39:41,840
configuration to generate

2607
01:39:48,320 --> 01:39:50,400
and some some of these records or some

2608
01:39:50,400 --> 01:39:51,840
of these queries that we were sending

2609
01:39:51,840 --> 01:39:52,239
out

2610
01:39:52,239 --> 01:39:55,280
um required public ips so

2611
01:39:55,280 --> 01:39:57,280
what it meant was every one of our dns

2612
01:39:57,280 --> 01:39:58,880
servers

2613
01:39:58,880 --> 01:40:00,719
needed a public ip address or multiple

2614
01:40:00,719 --> 01:40:03,280
public ip addresses for v4 and v6

2615
01:40:03,280 --> 01:40:04,960
and so this was extra work for us to

2616
01:40:04,960 --> 01:40:07,760
manage as a team looking after dns

2617
01:40:07,760 --> 01:40:08,800
we were dealing with a lack of

2618
01:40:08,800 --> 01:40:10,880
availability of e4 addresses

2619
01:40:10,880 --> 01:40:13,679
room to advertise these public addresses

2620
01:40:13,679 --> 01:40:14,560
and

2621
01:40:14,560 --> 01:40:16,159
when we were provisioning and turning up

2622
01:40:16,159 --> 01:40:17,840
new dns servers it was

2623
01:40:17,840 --> 01:40:20,080
extra work for us because we were having

2624
01:40:20,080 --> 01:40:22,560
to acquire and allocate those

2625
01:40:22,560 --> 01:40:24,800
to our hosts so moving computer around

2626
01:40:24,800 --> 01:40:27,199
was more was more of a headache for us

2627
01:40:27,199 --> 01:40:28,960
and as we typically run on bare metal

2628
01:40:28,960 --> 01:40:30,239
and we don't run

2629
01:40:30,239 --> 01:40:33,040
within containers as is very common at

2630
01:40:33,040 --> 01:40:34,159
facebook

2631
01:40:34,159 --> 01:40:35,600
we were in the hot seat when it came to

2632
01:40:35,600 --> 01:40:38,400
moving services or accommodating works

2633
01:40:38,400 --> 01:40:42,080
um so the the burden of ownership was

2634
01:40:42,080 --> 01:40:45,440
was greater than we wanted

2635
01:40:47,840 --> 01:40:51,199
so what we decided to do was move

2636
01:40:51,199 --> 01:40:53,600
internet recursion out from from our

2637
01:40:53,600 --> 01:40:54,880
from our servers uh

2638
01:40:54,880 --> 01:40:57,760
from from that tier of boxes we had and

2639
01:40:57,760 --> 01:40:58,080
put

2640
01:40:58,080 --> 01:41:00,480
put our cursors in in containers in a

2641
01:41:00,480 --> 01:41:02,320
separate grouping

2642
01:41:02,320 --> 01:41:05,600
so our regular dns servers that run on

2643
01:41:05,600 --> 01:41:06,320
bare metal

2644
01:41:06,320 --> 01:41:08,639
would simply send the query to these

2645
01:41:08,639 --> 01:41:10,320
containers

2646
01:41:10,320 --> 01:41:12,639
who who focused on simply recursing

2647
01:41:12,639 --> 01:41:19,840
internet queries

2648
01:41:20,880 --> 01:41:22,480
now because there's relatively few

2649
01:41:22,480 --> 01:41:24,000
external domain requests

2650
01:41:24,000 --> 01:41:26,000
we can have a smaller number of internet

2651
01:41:26,000 --> 01:41:27,199
only resolvers so

2652
01:41:27,199 --> 01:41:28,800
it's a small set of boxes relatively

2653
01:41:28,800 --> 01:41:30,880
speaking that means we've

2654
01:41:30,880 --> 01:41:32,719
much smaller demand for public ip

2655
01:41:32,719 --> 01:41:35,040
addresses and it means we could now

2656
01:41:35,040 --> 01:41:37,040
introduce internet only dns

2657
01:41:37,040 --> 01:41:38,639
infrastructure so

2658
01:41:38,639 --> 01:41:41,040
services that just needed internet only

2659
01:41:41,040 --> 01:41:42,400
resolution

2660
01:41:42,400 --> 01:41:44,000
instead of rolling their own they could

2661
01:41:44,000 --> 01:41:45,520
come to us and

2662
01:41:45,520 --> 01:41:47,600
one example is you know proxy servers

2663
01:41:47,600 --> 01:41:50,000
that that proxy http traffic out to the

2664
01:41:50,000 --> 01:41:50,800
internet

2665
01:41:50,800 --> 01:41:54,239
for our machines in our data centers

2666
01:41:56,880 --> 01:41:58,719
one other big win here and i don't have

2667
01:41:58,719 --> 01:42:00,080
a before picture but

2668
01:42:00,080 --> 01:42:01,840
our after picture looks great we were

2669
01:42:01,840 --> 01:42:04,159
getting cashier ratios between

2670
01:42:04,159 --> 01:42:07,280
you know 80 and 95 plus percent

2671
01:42:07,280 --> 01:42:10,400
so you know fewer boxes meant much

2672
01:42:10,400 --> 01:42:15,839
better catch hits

2673
01:42:16,560 --> 01:42:19,199
and it also improved our latency so we

2674
01:42:19,199 --> 01:42:19,760
we

2675
01:42:19,760 --> 01:42:22,000
our latency dropped significantly and it

2676
01:42:22,000 --> 01:42:23,440
also freed up ram so we were getting a

2677
01:42:23,440 --> 01:42:24,480
lot of wins

2678
01:42:24,480 --> 01:42:26,239
across the board simply by divving up

2679
01:42:26,239 --> 01:42:28,560
the work

2680
01:42:28,560 --> 01:42:30,639
sorry to interrupt patrick you have five

2681
01:42:30,639 --> 01:42:33,280
minutes remaining until q a

2682
01:42:33,280 --> 01:42:35,759
great thanks

2683
01:42:37,119 --> 01:42:39,280
so here's the thing though we still have

2684
01:42:39,280 --> 01:42:40,639
a lot of queries going out

2685
01:42:40,639 --> 01:42:42,400
so and most of these queries are

2686
01:42:42,400 --> 01:42:44,080
answered by caches

2687
01:42:44,080 --> 01:42:46,480
but even with the caching we still have

2688
01:42:46,480 --> 01:42:47,600
a lot of queries that go out

2689
01:42:47,600 --> 01:42:50,800
to tlds and this can cause outages from

2690
01:42:50,800 --> 01:42:52,800
time to time when tld's banish

2691
01:42:52,800 --> 01:42:57,840
and this is generally our fault

2692
01:42:58,400 --> 01:43:00,800
and the reason is here's the typical dns

2693
01:43:00,800 --> 01:43:02,000
request

2694
01:43:02,000 --> 01:43:03,360
because there's no dot at the end of

2695
01:43:03,360 --> 01:43:05,119
this query that the host command is

2696
01:43:05,119 --> 01:43:06,719
running

2697
01:43:06,719 --> 01:43:08,639
every single search domain is appended

2698
01:43:08,639 --> 01:43:10,400
so we end up with multiple requests

2699
01:43:10,400 --> 01:43:13,040
all of which are returning nx domains

2700
01:43:13,040 --> 01:43:15,280
and then when nothing is found

2701
01:43:15,280 --> 01:43:18,480
um a dot is appended and the fqdn

2702
01:43:18,480 --> 01:43:21,280
resolves however in this case as it's an

2703
01:43:21,280 --> 01:43:22,159
invalid

2704
01:43:22,159 --> 01:43:24,080
uh we're gonna we're gonna end up

2705
01:43:24,080 --> 01:43:25,199
getting uh

2706
01:43:25,199 --> 01:43:26,639
another failed request because there's

2707
01:43:26,639 --> 01:43:29,520
no top level domain foo

2708
01:43:29,520 --> 01:43:31,440
so these types of queries are a constant

2709
01:43:31,440 --> 01:43:34,080
headache for us

2710
01:43:34,560 --> 01:43:36,480
so the solution was pretty obvious stop

2711
01:43:36,480 --> 01:43:38,560
sending invalid queries to top level to

2712
01:43:38,560 --> 01:43:39,199
tlds

2713
01:43:39,199 --> 01:43:42,639
and so we implemented two things

2714
01:43:42,639 --> 01:43:45,119
um first what we decided to do is fetch

2715
01:43:45,119 --> 01:43:47,199
all the tlds from a centralized repo

2716
01:43:47,199 --> 01:43:48,639
that's about one and a half thousand at

2717
01:43:48,639 --> 01:43:50,960
the moment and when we generate the

2718
01:43:50,960 --> 01:43:52,880
unbound config now we simply say

2719
01:43:52,880 --> 01:43:55,280
that queries for for you know tlds

2720
01:43:55,280 --> 01:43:56,800
should be forwarded to the internet only

2721
01:43:56,800 --> 01:43:58,400
resolver

2722
01:43:58,400 --> 01:44:01,880
um so for example

2723
01:44:01,880 --> 01:44:04,719
blue.facebook.com will go to shard four

2724
01:44:04,719 --> 01:44:06,560
but everything ending in dot com will go

2725
01:44:06,560 --> 01:44:08,800
to the internet only recursor

2726
01:44:08,800 --> 01:44:10,480
and anything that's not specifically

2727
01:44:10,480 --> 01:44:12,480
called out any any

2728
01:44:12,480 --> 01:44:14,239
any anything not in the config is

2729
01:44:14,239 --> 01:44:15,840
immediately refused

2730
01:44:15,840 --> 01:44:19,440
so what we call this

2731
01:44:19,440 --> 01:44:22,480
is turnip and the advantage of this

2732
01:44:22,480 --> 01:44:24,960
is before we were seeing very few

2733
01:44:24,960 --> 01:44:25,760
refuses

2734
01:44:25,760 --> 01:44:28,000
now we're seeing a lot of them and the

2735
01:44:28,000 --> 01:44:28,800
reason we are

2736
01:44:28,800 --> 01:44:35,840
is we're responding directly to clients

2737
01:44:36,560 --> 01:44:37,600
and these these are queries that

2738
01:44:37,600 --> 01:44:38,880
otherwise would have gone to the root

2739
01:44:38,880 --> 01:44:41,280
servers

2740
01:44:42,320 --> 01:44:44,239
one other great win here too is we got a

2741
01:44:44,239 --> 01:44:46,080
big speed improvement so previously

2742
01:44:46,080 --> 01:44:47,679
we were going through internet recursion

2743
01:44:47,679 --> 01:44:49,679
and the answer was being returned

2744
01:44:49,679 --> 01:44:51,280
i mean it took many million milliseconds

2745
01:44:51,280 --> 01:44:53,119
to get an answer back

2746
01:44:53,119 --> 01:44:56,400
so now by refusing the queries

2747
01:44:56,400 --> 01:44:57,280
immediately

2748
01:44:57,280 --> 01:45:00,080
we're saving on compute resources and

2749
01:45:00,080 --> 01:45:01,119
one other thing we're going to do to

2750
01:45:01,119 --> 01:45:02,320
build on this now

2751
01:45:02,320 --> 01:45:05,119
is instead of simply returning refuses

2752
01:45:05,119 --> 01:45:07,920
we'll start returning nx domains

2753
01:45:07,920 --> 01:45:09,360
so the difference there is we're telling

2754
01:45:09,360 --> 01:45:11,040
the client the domain does not actually

2755
01:45:11,040 --> 01:45:12,560
exist

2756
01:45:12,560 --> 01:45:14,560
and that prevents the client from you

2757
01:45:14,560 --> 01:45:16,480
know re-requesting because

2758
01:45:16,480 --> 01:45:19,600
sending a refuse back may may

2759
01:45:19,600 --> 01:45:21,760
indicate to the client that the request

2760
01:45:21,760 --> 01:45:23,520
is coming back refused because of policy

2761
01:45:23,520 --> 01:45:24,639
on the dns server

2762
01:45:24,639 --> 01:45:27,040
as for the rfc so so i send the nx

2763
01:45:27,040 --> 01:45:28,880
domain we prevent those retries

2764
01:45:28,880 --> 01:45:30,400
and that reduces the number of queries

2765
01:45:30,400 --> 01:45:32,320
we're sending out to our own

2766
01:45:32,320 --> 01:45:34,960
infrastructure

2767
01:45:36,880 --> 01:45:38,400
and then taking another step down this

2768
01:45:38,400 --> 01:45:40,800
path and using the same turnip data that

2769
01:45:40,800 --> 01:45:42,320
we refer to

2770
01:45:42,320 --> 01:45:44,400
we now have the internet recursives act

2771
01:45:44,400 --> 01:45:46,000
as root servers themselves

2772
01:45:46,000 --> 01:45:48,400
so we're not even recursing to root

2773
01:45:48,400 --> 01:45:49,920
servers anymore

2774
01:45:49,920 --> 01:45:52,800
so we're operating as a route with a

2775
01:45:52,800 --> 01:45:58,800
flavor of turnip

2776
01:45:58,800 --> 01:46:01,600
and courtesy of verizon we see an impact

2777
01:46:01,600 --> 01:46:02,000
on

2778
01:46:02,000 --> 01:46:03,760
dns servers here whereas before we were

2779
01:46:03,760 --> 01:46:05,440
sending millions of invalid queries we

2780
01:46:05,440 --> 01:46:08,400
now send zero

2781
01:46:08,400 --> 01:46:10,480
and even for valid queries we're

2782
01:46:10,480 --> 01:46:12,239
answering or responding to valid queries

2783
01:46:12,239 --> 01:46:14,559
as well

2784
01:46:15,760 --> 01:46:17,520
and last but not least let's talk

2785
01:46:17,520 --> 01:46:20,880
quickly about propagation

2786
01:46:22,880 --> 01:46:24,800
so i want to stick up a lot of boxes and

2787
01:46:24,800 --> 01:46:26,159
rectangles in the slide but

2788
01:46:26,159 --> 01:46:27,199
what we're going to show here is a

2789
01:46:27,199 --> 01:46:29,920
typical pub sub architecture

2790
01:46:29,920 --> 01:46:31,840
we have the resolver we talked about

2791
01:46:31,840 --> 01:46:33,440
earlier

2792
01:46:33,440 --> 01:46:35,600
the wreckers themselves that go into dns

2793
01:46:35,600 --> 01:46:36,800
are gathered from a lot of different

2794
01:46:36,800 --> 01:46:38,560
resources

2795
01:46:38,560 --> 01:46:41,199
we use thrift which is what facebook

2796
01:46:41,199 --> 01:46:42,400
uses for

2797
01:46:42,400 --> 01:46:44,880
uh inter-service communication to get

2798
01:46:44,880 --> 01:46:46,880
this data into dns mutator and from

2799
01:46:46,880 --> 01:46:47,280
there

2800
01:46:47,280 --> 01:46:50,159
into a key value store then we have a

2801
01:46:50,159 --> 01:46:51,920
presenter component so we can suck in

2802
01:46:51,920 --> 01:46:52,719
data from

2803
01:46:52,719 --> 01:46:56,000
human generated configs

2804
01:46:56,800 --> 01:46:58,719
and then we send it to publisher and

2805
01:46:58,719 --> 01:47:00,400
publisher generates the actual

2806
01:47:00,400 --> 01:47:02,960
the full view which is what we send via

2807
01:47:02,960 --> 01:47:04,480
via bittorrent

2808
01:47:04,480 --> 01:47:06,960
um to a component called subscriber

2809
01:47:06,960 --> 01:47:10,400
running a top dollar dns hosts

2810
01:47:10,400 --> 01:47:13,199
so the design's pretty simple even with

2811
01:47:13,199 --> 01:47:14,159
all the boxes

2812
01:47:14,159 --> 01:47:16,639
it's it's standard pub sub but the main

2813
01:47:16,639 --> 01:47:18,400
challenge we faced here

2814
01:47:18,400 --> 01:47:20,719
is the time it takes to get from the

2815
01:47:20,719 --> 01:47:23,600
beginning of the pipeline to the end

2816
01:47:23,600 --> 01:47:26,000
and so

2817
01:47:27,119 --> 01:47:28,719
at the beginning we were looking at this

2818
01:47:28,719 --> 01:47:30,719
it took it could take 45 minutes

2819
01:47:30,719 --> 01:47:33,360
to get from the data sources to

2820
01:47:33,360 --> 01:47:36,480
production dns

2821
01:47:36,480 --> 01:47:41,360
so we focused on some of the components

2822
01:47:44,159 --> 01:47:46,480
and we ported them to go so these were

2823
01:47:46,480 --> 01:47:48,400
drop-in replacements for a dns mutator

2824
01:47:48,400 --> 01:47:49,760
the presenter and the publisher

2825
01:47:49,760 --> 01:47:52,000
this got us down to 15 minutes this was

2826
01:47:52,000 --> 01:47:53,360
a big win because these were these were

2827
01:47:53,360 --> 01:47:56,159
drop-in replacements

2828
01:47:56,159 --> 01:47:59,280
and then we brought roxdb into play

2829
01:47:59,280 --> 01:48:00,719
we were able to change our pipeline to

2830
01:48:00,719 --> 01:48:02,800
propagate only the changes and not the

2831
01:48:02,800 --> 01:48:03,600
entire

2832
01:48:03,600 --> 01:48:06,560
database so that along with rewriting

2833
01:48:06,560 --> 01:48:08,159
the components got us down to about two

2834
01:48:08,159 --> 01:48:10,480
minutes

2835
01:48:14,239 --> 01:48:17,199
and what we're working on now is term

2836
01:48:17,199 --> 01:48:18,080
propagation

2837
01:48:18,080 --> 01:48:20,560
so turns historically require and

2838
01:48:20,560 --> 01:48:22,639
generally do require trackers

2839
01:48:22,639 --> 01:48:25,920
and this was often a um a cause of

2840
01:48:25,920 --> 01:48:28,159
issues for us propagation would stall

2841
01:48:28,159 --> 01:48:29,360
because of

2842
01:48:29,360 --> 01:48:32,320
um the trackers being unavailable and

2843
01:48:32,320 --> 01:48:33,679
and so one of the things we we brought

2844
01:48:33,679 --> 01:48:34,960
in this year

2845
01:48:34,960 --> 01:48:38,400
was dracula's torrent so using pex

2846
01:48:38,400 --> 01:48:41,280
um nodes tower nodes can actually share

2847
01:48:41,280 --> 01:48:42,080
information

2848
01:48:42,080 --> 01:48:44,639
without having to having having trackers

2849
01:48:44,639 --> 01:48:45,679
be present

2850
01:48:45,679 --> 01:48:47,920
and so this is this is simplified it

2851
01:48:47,920 --> 01:48:49,600
hasn't necessarily made the pipeline

2852
01:48:49,600 --> 01:48:51,040
faster but what it has done is made it

2853
01:48:51,040 --> 01:48:53,760
more robust

2854
01:48:53,920 --> 01:48:56,960
and just some final takeaways um before

2855
01:48:56,960 --> 01:48:58,800
i go

2856
01:48:58,800 --> 01:49:01,360
so again as i talked about the beginning

2857
01:49:01,360 --> 01:49:03,040
despite the fact that dns is used

2858
01:49:03,040 --> 01:49:04,639
everywhere and problems are supposed to

2859
01:49:04,639 --> 01:49:06,159
be effectively solved already

2860
01:49:06,159 --> 01:49:08,719
it's still developing and there's a lot

2861
01:49:08,719 --> 01:49:09,920
of new things still coming

2862
01:49:09,920 --> 01:49:14,159
dns over http dns over tls and so on

2863
01:49:14,159 --> 01:49:15,840
and the other conundrum here is uptime

2864
01:49:15,840 --> 01:49:17,760
expectations of dns are high people

2865
01:49:17,760 --> 01:49:19,040
expect it to work

2866
01:49:19,040 --> 01:49:21,920
because it's utility service so we need

2867
01:49:21,920 --> 01:49:24,239
to be able to add these new features

2868
01:49:24,239 --> 01:49:26,400
without bringing dns down effectively

2869
01:49:26,400 --> 01:49:28,080
change the tires without pulling the car

2870
01:49:28,080 --> 01:49:29,679
over

2871
01:49:29,679 --> 01:49:32,560
and when we mix in growth and scale it

2872
01:49:32,560 --> 01:49:34,320
makes it harder again

2873
01:49:34,320 --> 01:49:36,320
so what we found what works for us is

2874
01:49:36,320 --> 01:49:38,639
taking an incremental approach

2875
01:49:38,639 --> 01:49:41,360
small winds building on those winds not

2876
01:49:41,360 --> 01:49:42,719
expecting there's a silver bullet

2877
01:49:42,719 --> 01:49:44,159
solution

2878
01:49:44,159 --> 01:49:46,960
and finally in a you know plug for gold

2879
01:49:46,960 --> 01:49:50,000
gold loves dns

2880
01:49:51,199 --> 01:49:54,639
thanks thank you patrick

2881
01:49:54,639 --> 01:49:57,840
very interesting talk um so

2882
01:49:57,840 --> 01:49:59,360
we're running a little bit over time and

2883
01:49:59,360 --> 01:50:02,000
i've got um three questions in the queue

2884
01:50:02,000 --> 01:50:03,199
so i'm going to close the queue for

2885
01:50:03,199 --> 01:50:04,639
questions already i'm afraid

2886
01:50:04,639 --> 01:50:06,880
um please take a a note of the poll

2887
01:50:06,880 --> 01:50:08,000
that's about to appear

2888
01:50:08,000 --> 01:50:09,920
and answer the questions if if anybody

2889
01:50:09,920 --> 01:50:11,280
has any other questions from patrick

2890
01:50:11,280 --> 01:50:11,760
they

2891
01:50:11,760 --> 01:50:14,159
they can ask them in mata most or social

2892
01:50:14,159 --> 01:50:15,040
afterwards

2893
01:50:15,040 --> 01:50:17,520
um but i'll i'll i'll i'll plow through

2894
01:50:17,520 --> 01:50:19,199
these questions see how we get out how

2895
01:50:19,199 --> 01:50:20,320
many we get through

2896
01:50:20,320 --> 01:50:23,679
so um paul abusman asks um

2897
01:50:23,679 --> 01:50:27,280
do facebook client apps on user devices

2898
01:50:27,280 --> 01:50:29,280
send their dns lookups to the device

2899
01:50:29,280 --> 01:50:30,560
stub resolver

2900
01:50:30,560 --> 01:50:34,960
or to your unbound recursive resolver

2901
01:50:35,360 --> 01:50:37,119
so all queries go to the unbound

2902
01:50:37,119 --> 01:50:39,280
recursive resolver

2903
01:50:39,280 --> 01:50:42,400
so we advertise our

2904
01:50:42,400 --> 01:50:45,440
unbound resolvers you know ipv6 anycast

2905
01:50:45,440 --> 01:50:46,880
typically

2906
01:50:46,880 --> 01:50:48,480
so all queries will go we'll go to that

2907
01:50:48,480 --> 01:50:50,320
tier

2908
01:50:50,320 --> 01:50:54,400
thank you paul mccherney uh asks

2909
01:50:54,400 --> 01:50:58,159
do facebook also employ nsec caching

2910
01:50:58,159 --> 01:51:00,320
to minimize responses to nx domain

2911
01:51:00,320 --> 01:51:02,719
queries

2912
01:51:03,760 --> 01:51:07,040
well it's something um we're looking at

2913
01:51:07,040 --> 01:51:10,080
um but it's you know currently um it's

2914
01:51:10,080 --> 01:51:10,880
it's

2915
01:51:10,880 --> 01:51:12,400
effectively a work in progress i would

2916
01:51:12,400 --> 01:51:14,559
say

2917
01:51:14,960 --> 01:51:18,080
okay thank you and the

2918
01:51:18,080 --> 01:51:20,719
last in the question queue is one from

2919
01:51:20,719 --> 01:51:22,639
uh sven van dijk

2920
01:51:22,639 --> 01:51:25,520
um are you also planning to enable dns

2921
01:51:25,520 --> 01:51:26,159
sec

2922
01:51:26,159 --> 01:51:27,920
for the facebook domains and how will

2923
01:51:27,920 --> 01:51:30,159
that fit in the pipeline

2924
01:51:30,159 --> 01:51:32,239
i mean that's definitely in the works um

2925
01:51:32,239 --> 01:51:33,840
but just before i continue want to go

2926
01:51:33,840 --> 01:51:35,280
back to the first question because i

2927
01:51:35,280 --> 01:51:36,000
guess

2928
01:51:36,000 --> 01:51:38,719
working at facebook you know we're

2929
01:51:38,719 --> 01:51:40,080
looking at different groups

2930
01:51:40,080 --> 01:51:43,360
so of users effectively

2931
01:51:43,360 --> 01:51:46,800
um facebook users um

2932
01:51:46,800 --> 01:51:49,599
of of the app who are coming in from the

2933
01:51:49,599 --> 01:51:50,960
public net

2934
01:51:50,960 --> 01:51:52,960
they're not going to hit an instance of

2935
01:51:52,960 --> 01:51:54,400
unbound so

2936
01:51:54,400 --> 01:51:56,080
what i was focusing on the talk here was

2937
01:51:56,080 --> 01:51:57,760
production dns which is

2938
01:51:57,760 --> 01:52:00,320
focused on machines within data centers

2939
01:52:00,320 --> 01:52:01,679
so if you're coming in as a user of

2940
01:52:01,679 --> 01:52:03,840
facebook on a mobile device

2941
01:52:03,840 --> 01:52:05,679
you're not hitting um you're not hitting

2942
01:52:05,679 --> 01:52:07,199
on bounds you're hitting our edge dns

2943
01:52:07,199 --> 01:52:08,400
infrastructure which is

2944
01:52:08,400 --> 01:52:11,119
it's it's a different um it's a it's a

2945
01:52:11,119 --> 01:52:13,040
different block of compute entirely

2946
01:52:13,040 --> 01:52:14,880
it's you know there's some similarities

2947
01:52:14,880 --> 01:52:16,560
with production dns

2948
01:52:16,560 --> 01:52:18,159
but it's a it's different so you're

2949
01:52:18,159 --> 01:52:20,480
hitting a load balancing service up

2950
01:52:20,480 --> 01:52:21,360
front

2951
01:52:21,360 --> 01:52:24,159
to direct um direct you to the you know

2952
01:52:24,159 --> 01:52:25,199
the appropriate

2953
01:52:25,199 --> 01:52:28,719
nearest pop for um for your device

2954
01:52:28,719 --> 01:52:30,960
um so sorry getting back into the the

2955
01:52:30,960 --> 01:52:32,000
last question

2956
01:52:32,000 --> 01:52:35,440
um so again it's in the works um nothing

2957
01:52:35,440 --> 01:52:37,520
to share publicly at this time but uh

2958
01:52:37,520 --> 01:52:39,280
obviously we're trying to stay close

2959
01:52:39,280 --> 01:52:42,480
to developments um and and and

2960
01:52:42,480 --> 01:52:45,839
it's definitely something we support

2961
01:52:45,920 --> 01:52:49,119
okay thank you very much patrick um

2962
01:52:49,119 --> 01:52:50,560
thanks to all our presenters from the

2963
01:52:50,560 --> 01:52:52,400
first session this morning i'll

2964
01:52:52,400 --> 01:52:55,599
be where you are some great talks there

2965
01:52:55,599 --> 01:52:58,159
and good thought-provoking questions

2966
01:52:58,159 --> 01:53:00,560
um it's now time to take our hour long

2967
01:53:00,560 --> 01:53:02,320
break but before that um

2968
01:53:02,320 --> 01:53:05,440
a few words from keith

2969
01:53:06,239 --> 01:53:09,760
okay sure thank you brett um

2970
01:53:09,760 --> 01:53:11,199
yeah patrick if you could just stop

2971
01:53:11,199 --> 01:53:14,480
sharing your screen please

2972
01:53:16,480 --> 01:53:19,280
so yes um thank you to all our speakers

2973
01:53:19,280 --> 01:53:20,480
for this first session

2974
01:53:20,480 --> 01:53:22,239
uh that all went very smoothly thank you

2975
01:53:22,239 --> 01:53:24,000
all for being on time

2976
01:53:24,000 --> 01:53:25,760
um and a special thanks to brett for

2977
01:53:25,760 --> 01:53:27,440
sharing it um that's the first time that

2978
01:53:27,440 --> 01:53:28,080
we've done

2979
01:53:28,080 --> 01:53:31,040
audio and chat questions at the same

2980
01:53:31,040 --> 01:53:32,719
time so there's a bit of multiplexing to

2981
01:53:32,719 --> 01:53:34,000
be done there but i think

2982
01:53:34,000 --> 01:53:36,080
that all went very smoothly so so thank

2983
01:53:36,080 --> 01:53:37,440
you all for the um

2984
01:53:37,440 --> 01:53:39,520
everyone asking questions for engaging

2985
01:53:39,520 --> 01:53:41,599
and

2986
01:53:41,599 --> 01:53:44,639
playing ball um so um i'd just like to

2987
01:53:44,639 --> 01:53:46,080
remind you of a few things

2988
01:53:46,080 --> 01:53:49,199
before we break for mule break

2989
01:53:49,199 --> 01:53:51,679
depending on what time zone you're in

2990
01:53:51,679 --> 01:53:53,520
first of all i would like to thank

2991
01:53:53,520 --> 01:53:55,520
farsight as our sponsor for this

2992
01:53:55,520 --> 01:53:56,560
workshop um

2993
01:53:56,560 --> 01:53:58,239
it's always great to have a sponsor uh

2994
01:53:58,239 --> 01:54:00,400
farsight or us org supporter in

2995
01:54:00,400 --> 01:54:03,199
in many various ways um so we appreciate

2996
01:54:03,199 --> 01:54:04,400
them being sponsors

2997
01:54:04,400 --> 01:54:06,320
um if you're interested we're looking

2998
01:54:06,320 --> 01:54:08,719
for sponsors for work 35 so we'd

2999
01:54:08,719 --> 01:54:10,159
please talk to dinesh if you'd like to

3000
01:54:10,159 --> 01:54:11,840
do that um

3001
01:54:11,840 --> 01:54:13,520
for the one hour break today and

3002
01:54:13,520 --> 01:54:15,199
tomorrow and for the social afterwards

3003
01:54:15,199 --> 01:54:16,719
we're running a zoom room

3004
01:54:16,719 --> 01:54:20,239
um you can see the um that bitly link

3005
01:54:20,239 --> 01:54:23,440
um that dinesh will make available um

3006
01:54:23,440 --> 01:54:24,400
meeting id

3007
01:54:24,400 --> 01:54:27,360
is on the slide um the password is eight

3008
01:54:27,360 --> 01:54:27,679
four

3009
01:54:27,679 --> 01:54:29,679
six nine zero seven so we'll be starting

3010
01:54:29,679 --> 01:54:31,920
that up um shortly

3011
01:54:31,920 --> 01:54:34,239
we will also be continuing the webinar

3012
01:54:34,239 --> 01:54:35,760
rooms through the break there just won't

3013
01:54:35,760 --> 01:54:36,000
be

3014
01:54:36,000 --> 01:54:38,159
anything on it if you want to hang

3015
01:54:38,159 --> 01:54:39,280
around while you

3016
01:54:39,280 --> 01:54:43,760
you go off and um and refresh yourselves

3017
01:54:43,760 --> 01:54:48,320
um all orc members and supporters should

3018
01:54:48,320 --> 01:54:50,080
by now have received their

3019
01:54:50,080 --> 01:54:52,159
invite for the closed session tomorrow

3020
01:54:52,159 --> 01:54:53,119
if you have not

3021
01:54:53,119 --> 01:54:56,880
please at um email admin at dnswork.net

3022
01:54:56,880 --> 01:54:58,639
before it well as soon as possible

3023
01:54:58,639 --> 01:55:00,320
preferably and certainly in no event

3024
01:55:00,320 --> 01:55:04,239
later than 8 am tomorrow morning

3025
01:55:04,239 --> 01:55:07,119
and basically we're now gonna break for

3026
01:55:07,119 --> 01:55:08,000
an hour

3027
01:55:08,000 --> 01:55:11,040
and restart at

3028
01:55:11,040 --> 01:55:19,840
1900 utc

3029
01:55:20,350 --> 01:56:40,550
[Music]

3030
01:56:43,540 --> 01:57:47,599
[Music]

3031
01:57:47,599 --> 01:57:50,159
hello everybody uh welcome to the third

3032
01:57:50,159 --> 01:57:53,119
session of oak 34

3033
01:57:53,119 --> 01:57:56,639
i am pallavi rs member of oak program

3034
01:57:56,639 --> 01:57:57,840
committee

3035
01:57:57,840 --> 01:58:00,639
i'll be the session chair and yan will

3036
01:58:00,639 --> 01:58:03,840
be the time keeper for this session

3037
01:58:03,840 --> 01:58:06,239
in this session we will hear two

3038
01:58:06,239 --> 01:58:07,840
presentations

3039
01:58:07,840 --> 01:58:10,800
followed by a 15 minute coffee break

3040
01:58:10,800 --> 01:58:12,800
leading to the final presentation

3041
01:58:12,800 --> 01:58:16,159
of the day now i would like to welcome

3042
01:58:16,159 --> 01:58:20,480
jason weil and todd mudbury to talk

3043
01:58:20,480 --> 01:58:22,639
about the lessons learned during charter

3044
01:58:22,639 --> 01:58:25,840
communications public dough trial

3045
01:58:25,840 --> 01:58:28,800
please go ahead talk

3046
01:58:33,119 --> 01:58:34,719
uh good afternoon everyone or good

3047
01:58:34,719 --> 01:58:36,000
evening or good morning depending on

3048
01:58:36,000 --> 01:58:38,159
where you are my name is todd medbury

3049
01:58:38,159 --> 01:58:40,560
i am a principal engineer with charter

3050
01:58:40,560 --> 01:58:42,000
communications

3051
01:58:42,000 --> 01:58:44,880
um and this is a readout on our

3052
01:58:44,880 --> 01:58:47,719
deployment and testing of our dns over

3053
01:58:47,719 --> 01:58:51,360
https platform

3054
01:58:57,040 --> 01:59:00,320
the initial testing of the doh platform

3055
01:59:00,320 --> 01:59:01,679
and load balancing setup

3056
01:59:01,679 --> 01:59:04,000
was performed in our data center

3057
01:59:04,000 --> 01:59:05,520
architecture lab

3058
01:59:05,520 --> 01:59:07,760
the initial setup allowed us to test end

3059
01:59:07,760 --> 01:59:10,080
to end

3060
01:59:10,080 --> 01:59:11,679
making sure i'm on the right slide the

3061
01:59:11,679 --> 01:59:13,360
entire doh stack

3062
01:59:13,360 --> 01:59:16,000
the testing consisted of one doh server

3063
01:59:16,000 --> 01:59:16,639
in the middle

3064
01:59:16,639 --> 01:59:18,400
and two separate load balancer setups

3065
01:59:18,400 --> 01:59:20,000
from two different vendors with two

3066
01:59:20,000 --> 01:59:21,360
separate back end

3067
01:59:21,360 --> 01:59:23,840
setups in parallel while this type of

3068
01:59:23,840 --> 01:59:25,040
testing is not

3069
01:59:25,040 --> 01:59:27,280
that incredibly interesting it did bring

3070
01:59:27,280 --> 01:59:30,000
to light a few interesting items the

3071
01:59:30,000 --> 01:59:31,520
first of which was that load balancing

3072
01:59:31,520 --> 01:59:32,159
setups

3073
01:59:32,159 --> 01:59:33,360
are not used to health checking

3074
01:59:33,360 --> 01:59:35,760
non-standard http requests or https

3075
01:59:35,760 --> 01:59:36,560
requests

3076
01:59:36,560 --> 01:59:38,159
and initial health checks for the nn

3077
01:59:38,159 --> 01:59:40,320
testing were performed as simple

3078
01:59:40,320 --> 01:59:43,920
l4 port checks during this testing

3079
01:59:43,920 --> 01:59:44,639
command line

3080
01:59:44,639 --> 01:59:47,360
clients were used to create requests not

3081
01:59:47,360 --> 01:59:48,159
for load

3082
01:59:48,159 --> 01:59:49,840
but to help understand what response

3083
01:59:49,840 --> 01:59:51,599
codes would be encountered

3084
01:59:51,599 --> 01:59:53,360
and what they meant when one protocol

3085
01:59:53,360 --> 01:59:56,239
was used to transport another

3086
01:59:56,239 --> 01:59:57,920
this ended up turning out to be less of

3087
01:59:57,920 --> 01:59:59,840
a concern than we initially thought

3088
01:59:59,840 --> 02:00:01,840
as the 200 ok sequence was generally

3089
02:00:01,840 --> 02:00:03,840
available for any server response

3090
02:00:03,840 --> 02:00:06,639
and 404s were seen predominantly by mis

3091
02:00:06,639 --> 02:00:09,280
misconfigured clients

3092
02:00:09,280 --> 02:00:10,800
in this section of the testing the most

3093
02:00:10,800 --> 02:00:12,480
interesting piece discovered

3094
02:00:12,480 --> 02:00:15,599
was that one it works as advertised

3095
02:00:15,599 --> 02:00:19,040
this is new technology for us this is um

3096
02:00:19,040 --> 02:00:22,719
fairly new to the world of dns um so for

3097
02:00:22,719 --> 02:00:23,840
you know to have a success out of the

3098
02:00:23,840 --> 02:00:25,840
gate was was very welcome

3099
02:00:25,840 --> 02:00:28,480
number two the fields are base64 encoded

3100
02:00:28,480 --> 02:00:30,960
making the crafting of

3101
02:00:30,960 --> 02:00:33,679
health checks that go beyond a simple l4

3102
02:00:33,679 --> 02:00:35,440
test more difficult

3103
02:00:35,440 --> 02:00:38,840
and we'll be talking about that a little

3104
02:00:38,840 --> 02:00:41,840
later

3105
02:00:44,080 --> 02:00:46,320
uh once the platform moved from uh to

3106
02:00:46,320 --> 02:00:47,360
the larger production

3107
02:00:47,360 --> 02:00:48,960
instances and before we were sending the

3108
02:00:48,960 --> 02:00:51,199
stack live traffic we wanted to ramp

3109
02:00:51,199 --> 02:00:53,440
some traffic towards the platform that

3110
02:00:53,440 --> 02:00:54,880
would mimic live traffic from our

3111
02:00:54,880 --> 02:00:55,760
customers

3112
02:00:55,760 --> 02:00:58,320
so there was a few ways this was done an

3113
02:00:58,320 --> 02:00:59,520
external company

3114
02:00:59,520 --> 02:01:02,880
was used for both testing and to supply

3115
02:01:02,880 --> 02:01:04,880
doh load and provide statistics and

3116
02:01:04,880 --> 02:01:06,239
graphs

3117
02:01:06,239 --> 02:01:07,520
this provided some really good

3118
02:01:07,520 --> 02:01:09,280
information but really wasn't stressing

3119
02:01:09,280 --> 02:01:10,639
the environment

3120
02:01:10,639 --> 02:01:12,719
as much or in the ways that we had

3121
02:01:12,719 --> 02:01:14,719
wanted

3122
02:01:14,719 --> 02:01:16,639
so what i did was i took the logs from

3123
02:01:16,639 --> 02:01:18,639
my family's dns server i have a little

3124
02:01:18,639 --> 02:01:20,239
dns over here in my house because why

3125
02:01:20,239 --> 02:01:21,760
not

3126
02:01:21,760 --> 02:01:24,400
and i dumped all the queries for a day i

3127
02:01:24,400 --> 02:01:26,159
have a few kids so i had a good mixture

3128
02:01:26,159 --> 02:01:27,599
of school based things

3129
02:01:27,599 --> 02:01:29,520
their class life calls all their

3130
02:01:29,520 --> 02:01:30,880
assignment research

3131
02:01:30,880 --> 02:01:33,520
my wife's work her video conferences and

3132
02:01:33,520 --> 02:01:34,480
of course

3133
02:01:34,480 --> 02:01:36,639
my lookups in the family's entertainment

3134
02:01:36,639 --> 02:01:37,920
email and assorted

3135
02:01:37,920 --> 02:01:40,159
you know general queries this worked out

3136
02:01:40,159 --> 02:01:42,560
to about 92 000 queries of what i think

3137
02:01:42,560 --> 02:01:46,000
a decently normal family would look like

3138
02:01:46,000 --> 02:01:47,360
i unique the list and stripped

3139
02:01:47,360 --> 02:01:48,480
everything except the domain from the

3140
02:01:48,480 --> 02:01:50,320
logs and wrote some bash scripts

3141
02:01:50,320 --> 02:01:53,440
to run on my virtualization cluster

3142
02:01:53,440 --> 02:01:55,199
these queries were sent to the

3143
02:01:55,199 --> 02:01:57,679
production servers in a few ways

3144
02:01:57,679 --> 02:01:59,360
the first was to run the list back to

3145
02:01:59,360 --> 02:02:00,960
back one query after the other as fast

3146
02:02:00,960 --> 02:02:02,719
as i could send them

3147
02:02:02,719 --> 02:02:05,360
but waiting for each of the previous to

3148
02:02:05,360 --> 02:02:05,760
finish

3149
02:02:05,760 --> 02:02:08,320
first the second way was to group them

3150
02:02:08,320 --> 02:02:09,599
in random groups of less than five

3151
02:02:09,599 --> 02:02:11,679
domains and bulk the transmissions and

3152
02:02:11,679 --> 02:02:12,719
send them together

3153
02:02:12,719 --> 02:02:14,960
and the third ran a copy in for each

3154
02:02:14,960 --> 02:02:16,560
available core thread

3155
02:02:16,560 --> 02:02:18,400
and issued its portion of the list

3156
02:02:18,400 --> 02:02:19,679
sequentially

3157
02:02:19,679 --> 02:02:21,360
waiting for each to finish in its own

3158
02:02:21,360 --> 02:02:23,440
list before proceeding

3159
02:02:23,440 --> 02:02:25,360
and the last way was to make one request

3160
02:02:25,360 --> 02:02:26,719
same request as

3161
02:02:26,719 --> 02:02:28,880
many threads as the box could take for a

3162
02:02:28,880 --> 02:02:30,320
single domain just to throw as many

3163
02:02:30,320 --> 02:02:32,000
queries per second as

3164
02:02:32,000 --> 02:02:35,520
i could um so why would i send the

3165
02:02:35,520 --> 02:02:36,960
queries one after another and wait for

3166
02:02:36,960 --> 02:02:37,679
the return

3167
02:02:37,679 --> 02:02:39,119
yeah that's a great question thanks for

3168
02:02:39,119 --> 02:02:41,280
asking the dns portion

3169
02:02:41,280 --> 02:02:44,239
of a doh request and return is a small

3170
02:02:44,239 --> 02:02:45,679
portion of the total volume

3171
02:02:45,679 --> 02:02:47,440
and the work to produce the response we

3172
02:02:47,440 --> 02:02:48,800
all know how dns works

3173
02:02:48,800 --> 02:02:50,560
is small compared to the https

3174
02:02:50,560 --> 02:02:53,280
encryption setup and teardown

3175
02:02:53,280 --> 02:02:55,119
so by making each query set up a new

3176
02:02:55,119 --> 02:02:57,520
session this would drive load up

3177
02:02:57,520 --> 02:02:59,040
and mimic what a non-bulk client

3178
02:02:59,040 --> 02:03:01,199
streaming queries at a d08 server would

3179
02:03:01,199 --> 02:03:02,800
look like for us

3180
02:03:02,800 --> 02:03:04,719
say if you wanted to load up a doh

3181
02:03:04,719 --> 02:03:06,320
server which is exactly what i was

3182
02:03:06,320 --> 02:03:07,920
trying to do

3183
02:03:07,920 --> 02:03:11,360
so i ran these sets for an entire day

3184
02:03:11,360 --> 02:03:13,360
over 24 hours actually initially

3185
02:03:13,360 --> 02:03:14,639
starting by pointing at the load

3186
02:03:14,639 --> 02:03:15,840
balancer

3187
02:03:15,840 --> 02:03:18,080
but moving to one back end member to put

3188
02:03:18,080 --> 02:03:19,440
as much stress on

3189
02:03:19,440 --> 02:03:22,000
an individual member as i could at its

3190
02:03:22,000 --> 02:03:23,040
peak i was generating

3191
02:03:23,040 --> 02:03:24,800
a high tens of thousands queries per

3192
02:03:24,800 --> 02:03:26,080
second pretty steadily

3193
02:03:26,080 --> 02:03:28,320
and a hundred thousand with some tuning

3194
02:03:28,320 --> 02:03:30,800
uh far more than a standard household

3195
02:03:30,800 --> 02:03:33,440
would make in an entire day uh and

3196
02:03:33,440 --> 02:03:35,520
that's per second

3197
02:03:35,520 --> 02:03:38,560
um this should be a decent amount of

3198
02:03:38,560 --> 02:03:39,760
load rate uh for

3199
02:03:39,760 --> 02:03:41,119
for to you know to get those kind of

3200
02:03:41,119 --> 02:03:42,719
tests to get my timing to be able to

3201
02:03:42,719 --> 02:03:44,960
look at those kind of pieces

3202
02:03:44,960 --> 02:03:46,159
it should be noted that when i started

3203
02:03:46,159 --> 02:03:48,159
to get into the high query rates

3204
02:03:48,159 --> 02:03:51,040
my poor firewall started to blow up and

3205
02:03:51,040 --> 02:03:52,159
it did have to be

3206
02:03:52,159 --> 02:03:57,839
reset a few times

3207
02:04:03,360 --> 02:04:06,239
uh the graphs here you see puts three

3208
02:04:06,239 --> 02:04:07,040
cert types

3209
02:04:07,040 --> 02:04:09,679
next to each other with the y-axis being

3210
02:04:09,679 --> 02:04:10,639
setup time

3211
02:04:10,639 --> 02:04:13,840
over 3.3 million queries per cert type

3212
02:04:13,840 --> 02:04:16,560
obviously lower is better it's less time

3213
02:04:16,560 --> 02:04:18,239
to complete a query

3214
02:04:18,239 --> 02:04:20,159
and the error bars of the interval give

3215
02:04:20,159 --> 02:04:22,960
you some idea of variation

3216
02:04:22,960 --> 02:04:24,480
because the setup and tear down of the

3217
02:04:24,480 --> 02:04:26,239
session this is what i was

3218
02:04:26,239 --> 02:04:29,040
referring to in the last section uh is

3219
02:04:29,040 --> 02:04:30,719
the majority of the time in the session

3220
02:04:30,719 --> 02:04:32,560
and load on the boxes

3221
02:04:32,560 --> 02:04:34,320
uh would the cert type change the load

3222
02:04:34,320 --> 02:04:36,400
profile timing and whatnot

3223
02:04:36,400 --> 02:04:39,599
for a given server or for a client well

3224
02:04:39,599 --> 02:04:41,199
this is this is kind of the testing we

3225
02:04:41,199 --> 02:04:42,639
did to find that out

3226
02:04:42,639 --> 02:04:44,000
the encryption setup will have a lot of

3227
02:04:44,000 --> 02:04:45,840
variation depending on what hardware

3228
02:04:45,840 --> 02:04:48,320
if you decide as an isp you want to go

3229
02:04:48,320 --> 02:04:50,840
out and deploy doh

3230
02:04:50,840 --> 02:04:53,280
um the

3231
02:04:53,280 --> 02:04:57,360
uh sorry

3232
02:04:57,360 --> 02:04:59,199
uh that setup will have a lot of

3233
02:04:59,199 --> 02:05:00,960
variation depending on what hardware

3234
02:05:00,960 --> 02:05:02,800
you have deployed what processor

3235
02:05:02,800 --> 02:05:04,560
extensions are available

3236
02:05:04,560 --> 02:05:06,159
what kind of software you're deployed

3237
02:05:06,159 --> 02:05:08,560
and whether they use those extensions

3238
02:05:08,560 --> 02:05:11,840
as well as the other hardware

3239
02:05:11,840 --> 02:05:14,400
in the client offload cards that are

3240
02:05:14,400 --> 02:05:16,000
performed either inside the server or

3241
02:05:16,000 --> 02:05:19,280
maybe at a load balancer level

3242
02:05:19,360 --> 02:05:21,199
so there's a lot of free variables here

3243
02:05:21,199 --> 02:05:23,840
so this was an idea to compare them in a

3244
02:05:23,840 --> 02:05:27,440
um similar manner uh when you take do 53

3245
02:05:27,440 --> 02:05:28,800
and wrap it up in doh

3246
02:05:28,800 --> 02:05:30,400
you have additional lefting that

3247
02:05:30,400 --> 02:05:32,079
horsepower has to be somewhere

3248
02:05:32,079 --> 02:05:34,000
and so obviously it's heavily dependent

3249
02:05:34,000 --> 02:05:35,520
on the certificate the server and the

3250
02:05:35,520 --> 02:05:36,800
client

3251
02:05:36,800 --> 02:05:39,119
so we chose certificate cipher types and

3252
02:05:39,119 --> 02:05:40,159
offer sequences

3253
02:05:40,159 --> 02:05:42,880
uh from the currently advised list and

3254
02:05:42,880 --> 02:05:45,040
tested three which you see here

3255
02:05:45,040 --> 02:05:46,560
i've taken the scales and numbers off as

3256
02:05:46,560 --> 02:05:48,079
they're related to the test

3257
02:05:48,079 --> 02:05:49,920
it overlays a few tests and we're

3258
02:05:49,920 --> 02:05:51,440
generally not helpful in this context

3259
02:05:51,440 --> 02:05:52,880
but the take home here is that there was

3260
02:05:52,880 --> 02:05:55,040
about a ten percent difference

3261
02:05:55,040 --> 02:05:56,800
in the session time depending on the

3262
02:05:56,800 --> 02:05:59,040
cert used twenty percent total

3263
02:05:59,040 --> 02:06:01,360
across the three we tested the tests

3264
02:06:01,360 --> 02:06:02,079
were run

3265
02:06:02,079 --> 02:06:04,880
uh to the tune of uh far more queries

3266
02:06:04,880 --> 02:06:06,480
than i did before tens of millions of

3267
02:06:06,480 --> 02:06:07,280
queries

3268
02:06:07,280 --> 02:06:09,280
um much in the same way the last bit of

3269
02:06:09,280 --> 02:06:11,599
load testing was done but these were all

3270
02:06:11,599 --> 02:06:14,400
captured for time and session setup etc

3271
02:06:14,400 --> 02:06:16,400
and will run sequentially to make sure

3272
02:06:16,400 --> 02:06:17,840
the setup and teardown were very

3273
02:06:17,840 --> 02:06:19,920
pronounced

3274
02:06:19,920 --> 02:06:21,679
um i didn't put the types of certificate

3275
02:06:21,679 --> 02:06:23,360
there as the timing as previously

3276
02:06:23,360 --> 02:06:24,560
mentioned is heavily dependent on the

3277
02:06:24,560 --> 02:06:26,000
machine hardware

3278
02:06:26,000 --> 02:06:29,360
software stack what extensions etc

3279
02:06:29,360 --> 02:06:31,119
but what i do want to point out here is

3280
02:06:31,119 --> 02:06:33,040
that testing is needed

3281
02:06:33,040 --> 02:06:34,880
you need to change those parameters and

3282
02:06:34,880 --> 02:06:36,719
make sure you're using the best setup

3283
02:06:36,719 --> 02:06:38,239
for your needs

3284
02:06:38,239 --> 02:06:39,840
there are lots of reasons to use a

3285
02:06:39,840 --> 02:06:41,679
heavier encryption

3286
02:06:41,679 --> 02:06:44,400
mechanism for some users lighter for

3287
02:06:44,400 --> 02:06:46,159
others and that's a decision that people

3288
02:06:46,159 --> 02:06:47,280
need to make

3289
02:06:47,280 --> 02:06:48,960
just be aware of how much variation

3290
02:06:48,960 --> 02:06:51,520
there is from type to type you'll note

3291
02:06:51,520 --> 02:06:53,760
that the best of each is worst

3292
02:06:53,760 --> 02:06:56,079
than the worst of the next best so

3293
02:06:56,079 --> 02:06:58,079
there's huge amounts of of

3294
02:06:58,079 --> 02:07:00,880
change here as we change cert type so

3295
02:07:00,880 --> 02:07:03,280
definitely something too

3296
02:07:03,280 --> 02:07:06,960
it was a take home from a lesson learned

3297
02:07:10,960 --> 02:07:14,239
um huge shout out to uh mr malachi here

3298
02:07:14,239 --> 02:07:14,880
as he

3299
02:07:14,880 --> 02:07:16,639
was the one that implemented most of

3300
02:07:16,639 --> 02:07:18,800
this in the environment

3301
02:07:18,800 --> 02:07:20,639
um as the underlying os for these

3302
02:07:20,639 --> 02:07:21,920
servers is linux

3303
02:07:21,920 --> 02:07:24,159
there was a bunch of stack tuning uh

3304
02:07:24,159 --> 02:07:26,079
that we performed um

3305
02:07:26,079 --> 02:07:27,679
although mr melichi did all of the

3306
02:07:27,679 --> 02:07:29,520
actual configuration

3307
02:07:29,520 --> 02:07:31,520
this is another area that is heavily

3308
02:07:31,520 --> 02:07:33,440
environment and hardware dependent

3309
02:07:33,440 --> 02:07:35,199
um however it absolutely needs to be

3310
02:07:35,199 --> 02:07:38,000
done the largest gains were seen when

3311
02:07:38,000 --> 02:07:39,760
file handle increases and of course

3312
02:07:39,760 --> 02:07:42,000
network stack tuning were applied

3313
02:07:42,000 --> 02:07:44,320
as seen in the graph the peak and

3314
02:07:44,320 --> 02:07:45,920
subsequent leveling off i believe were

3315
02:07:45,920 --> 02:07:47,360
the result of back pressure to the

3316
02:07:47,360 --> 02:07:48,480
clients

3317
02:07:48,480 --> 02:07:51,040
resolving as they retried and then as

3318
02:07:51,040 --> 02:07:53,920
the new steady state was achieved

3319
02:07:53,920 --> 02:07:56,239
without going into exact numbers it's

3320
02:07:56,239 --> 02:07:58,079
obvious that the rate was approximately

3321
02:07:58,079 --> 02:07:59,920
doubled

3322
02:07:59,920 --> 02:08:01,679
this means that twice the number of

3323
02:08:01,679 --> 02:08:03,679
clients could be served from the same

3324
02:08:03,679 --> 02:08:04,400
hardware

3325
02:08:04,400 --> 02:08:06,400
software combination for effectively

3326
02:08:06,400 --> 02:08:07,760
zero dollars

3327
02:08:07,760 --> 02:08:09,040
as engineers it's nice to be able to

3328
02:08:09,040 --> 02:08:10,079
point to these things it shows the

3329
02:08:10,079 --> 02:08:12,159
importance of good configuration

3330
02:08:12,159 --> 02:08:13,599
i mean obviously the amount of money

3331
02:08:13,599 --> 02:08:15,520
that it does save

3332
02:08:15,520 --> 02:08:17,760
so where where to look file descriptor

3333
02:08:17,760 --> 02:08:19,199
limits were the biggest change

3334
02:08:19,199 --> 02:08:22,320
that helped with load total clients

3335
02:08:22,320 --> 02:08:23,840
or big and that configuration will

3336
02:08:23,840 --> 02:08:26,159
depend on the doh server

3337
02:08:26,159 --> 02:08:29,119
that you're using and obviously the the

3338
02:08:29,119 --> 02:08:30,880
hardware that sits in front and behind

3339
02:08:30,880 --> 02:08:32,239
these

3340
02:08:32,239 --> 02:08:35,040
linux network stack tuning was was great

3341
02:08:35,040 --> 02:08:36,560
it did not have as much

3342
02:08:36,560 --> 02:08:39,920
change as we expected or hoped

3343
02:08:39,920 --> 02:08:41,280
i believe that's because these sessions

3344
02:08:41,280 --> 02:08:43,040
are very short-lived and there's no

3345
02:08:43,040 --> 02:08:44,239
large flows

3346
02:08:44,239 --> 02:08:46,639
created so as all of these are

3347
02:08:46,639 --> 02:08:47,920
environment dependent

3348
02:08:47,920 --> 02:08:50,960
obviously more testing monitoring

3349
02:08:50,960 --> 02:08:53,199
yours will be different from ours but

3350
02:08:53,199 --> 02:08:54,320
any you know

3351
02:08:54,320 --> 02:08:55,920
good tuning guides and any best

3352
02:08:55,920 --> 02:08:57,360
practices are obviously

3353
02:08:57,360 --> 02:09:00,639
going to make a huge difference

3354
02:09:00,639 --> 02:09:02,079
at this point i'm going to turn this

3355
02:09:02,079 --> 02:09:04,000
over to mr jason weil

3356
02:09:04,000 --> 02:09:07,119
who performed uh much of the field

3357
02:09:07,119 --> 02:09:11,119
testing awesome

3358
02:09:11,119 --> 02:09:13,199
so my name is jason moyle i'm a member

3359
02:09:13,199 --> 02:09:14,560
of the emerging tech

3360
02:09:14,560 --> 02:09:17,599
technology team here at charter uh i've

3361
02:09:17,599 --> 02:09:18,560
been in cable for

3362
02:09:18,560 --> 02:09:20,560
uh many years but i'm new to charter as

3363
02:09:20,560 --> 02:09:21,920
of may which is kind of bizarre

3364
02:09:21,920 --> 02:09:23,119
which means i've worked with a lot of

3365
02:09:23,119 --> 02:09:25,840
people i've actually never met in person

3366
02:09:25,840 --> 02:09:28,719
the joy of 2020. uh one of the first

3367
02:09:28,719 --> 02:09:30,560
projects i started on was uh the doe

3368
02:09:30,560 --> 02:09:31,599
trial

3369
02:09:31,599 --> 02:09:33,679
uh my thinking here was that it was

3370
02:09:33,679 --> 02:09:34,880
gonna be interesting to see

3371
02:09:34,880 --> 02:09:37,360
a new technology uh being trialled in

3372
02:09:37,360 --> 02:09:38,800
the charter network

3373
02:09:38,800 --> 02:09:40,719
uh then also figured out there's policy

3374
02:09:40,719 --> 02:09:42,880
work as well which is always fun

3375
02:09:42,880 --> 02:09:45,599
um so we actually updated our dns policy

3376
02:09:45,599 --> 02:09:46,639
and put that online

3377
02:09:46,639 --> 02:09:49,280
um after you know the hundreds of

3378
02:09:49,280 --> 02:09:50,800
signatures needed to get it

3379
02:09:50,800 --> 02:09:53,360
on there but it was it's good that we

3380
02:09:53,360 --> 02:09:54,159
are now uh

3381
02:09:54,159 --> 02:09:55,360
transparent about what we do with our

3382
02:09:55,360 --> 02:09:57,679
dns uh data

3383
02:09:57,679 --> 02:10:00,800
all right let's get into this

3384
02:10:00,800 --> 02:10:03,679
so um the first thing we did was put out

3385
02:10:03,679 --> 02:10:04,719
a platform

3386
02:10:04,719 --> 02:10:07,360
uh actually two uh independent platforms

3387
02:10:07,360 --> 02:10:08,800
or clusters

3388
02:10:08,800 --> 02:10:12,159
uh one in california 01

3389
02:10:12,159 --> 02:10:14,679
spectrum.com the other in

3390
02:10:14,679 --> 02:10:16,560
texas.o2.spectrum.com

3391
02:10:16,560 --> 02:10:19,119
uh the goal is to start testing uh each

3392
02:10:19,119 --> 02:10:19,760
cluster

3393
02:10:19,760 --> 02:10:23,040
independently and then uh and then move

3394
02:10:23,040 --> 02:10:24,639
into an indiecast model which we have

3395
02:10:24,639 --> 02:10:25,360
actually uh

3396
02:10:25,360 --> 02:10:28,480
uh done uh fairly recently so now do

3397
02:10:28,480 --> 02:10:30,960
one and oh to actually both resolve to

3398
02:10:30,960 --> 02:10:32,400
whatever is the closest uh

3399
02:10:32,400 --> 02:10:35,520
cluster by routing distance

3400
02:10:35,520 --> 02:10:37,199
uh each cluster was uh slightly

3401
02:10:37,199 --> 02:10:38,800
different from a hardware perspective

3402
02:10:38,800 --> 02:10:41,760
and that each had its own load balancer

3403
02:10:41,760 --> 02:10:42,880
vendor

3404
02:10:42,880 --> 02:10:44,480
so we could trial you know a couple

3405
02:10:44,480 --> 02:10:45,840
different load bouncers against each

3406
02:10:45,840 --> 02:10:47,280
other

3407
02:10:47,280 --> 02:10:49,040
the current trial set up for both

3408
02:10:49,040 --> 02:10:50,719
clusters has

3409
02:10:50,719 --> 02:10:53,119
the doe tls sessions uh terminating on

3410
02:10:53,119 --> 02:10:54,719
the servers

3411
02:10:54,719 --> 02:10:56,960
in the future we plan to do some testing

3412
02:10:56,960 --> 02:10:58,960
with other tls deployments which i'll

3413
02:10:58,960 --> 02:11:00,719
talk about at the end

3414
02:11:00,719 --> 02:11:04,000
um sorry to interrupt jason your slides

3415
02:11:04,000 --> 02:11:05,360
are not full screen

3416
02:11:05,360 --> 02:11:07,520
do you want to make them full screen let

3417
02:11:07,520 --> 02:11:11,520
me do that

3418
02:11:11,520 --> 02:11:15,280
better yeah okay great

3419
02:11:15,280 --> 02:11:17,759
thanks man

3420
02:11:20,880 --> 02:11:24,560
oh yeah so and then as todd mentioned uh

3421
02:11:24,560 --> 02:11:26,480
previously we did we did have to

3422
02:11:26,480 --> 02:11:27,599
implement a new uh

3423
02:11:27,599 --> 02:11:30,639
https uh based health check

3424
02:11:30,639 --> 02:11:33,760
uh that did look for http status 200

3425
02:11:33,760 --> 02:11:35,280
responses in order to get you know a

3426
02:11:35,280 --> 02:11:36,239
pass from the

3427
02:11:36,239 --> 02:11:39,839
load balancer to the servers

3428
02:11:40,880 --> 02:11:42,079
all right so now i'll talk a bit about

3429
02:11:42,079 --> 02:11:45,440
our inclusion in the in the chrome

3430
02:11:45,440 --> 02:11:49,199
uh same provider auto upgrade

3431
02:11:50,840 --> 02:11:53,840
trial

3432
02:11:54,079 --> 02:11:55,920
so charter began participating in the uh

3433
02:11:55,920 --> 02:11:57,360
chrome trial as part of uh

3434
02:11:57,360 --> 02:12:00,239
chrome 87 release uh one of the key

3435
02:12:00,239 --> 02:12:00,960
benefits

3436
02:12:00,960 --> 02:12:03,360
we were hoping from participation in the

3437
02:12:03,360 --> 02:12:05,040
trial was uh

3438
02:12:05,040 --> 02:12:07,199
a to generate significant doe traffic to

3439
02:12:07,199 --> 02:12:08,880
our trial platform

3440
02:12:08,880 --> 02:12:10,800
and then b also see how the chrome uh

3441
02:12:10,800 --> 02:12:12,880
client uh performed against the uh

3442
02:12:12,880 --> 02:12:15,599
the the charter trial platform and we

3443
02:12:15,599 --> 02:12:17,119
were quite happy with the results

3444
02:12:17,119 --> 02:12:18,880
we retained and they're still uh

3445
02:12:18,880 --> 02:12:20,800
obtaining uh

3446
02:12:20,800 --> 02:12:22,719
a quick shout out to eric worth and the

3447
02:12:22,719 --> 02:12:24,560
team at chrome for setting up this trial

3448
02:12:24,560 --> 02:12:24,800
and

3449
02:12:24,800 --> 02:12:27,599
letting us participate so the original

3450
02:12:27,599 --> 02:12:29,360
thinking uh

3451
02:12:29,360 --> 02:12:31,040
is that we would receive a limited

3452
02:12:31,040 --> 02:12:32,960
number of chrome users uh

3453
02:12:32,960 --> 02:12:34,719
hitting our doe platform because uh the

3454
02:12:34,719 --> 02:12:36,159
majority of users

3455
02:12:36,159 --> 02:12:37,760
with a router in their in their home

3456
02:12:37,760 --> 02:12:39,360
network are getting uh

3457
02:12:39,360 --> 02:12:41,920
a local resolver with a ip address of

3458
02:12:41,920 --> 02:12:42,400
the

3459
02:12:42,400 --> 02:12:45,119
result of the of the router itself which

3460
02:12:45,119 --> 02:12:47,760
is typically a ipv4 rc 1918

3461
02:12:47,760 --> 02:12:49,920
address in our case for a lot of our

3462
02:12:49,920 --> 02:12:51,599
routers it's 192

3463
02:12:51,599 --> 02:12:54,800
168 1.1 so this address will not be

3464
02:12:54,800 --> 02:12:55,360
updated

3465
02:12:55,360 --> 02:12:58,400
uh to the dose to our doze servers

3466
02:12:58,400 --> 02:13:00,840
for for chrome users you know receiving

3467
02:13:00,840 --> 02:13:04,159
that uh but thanks to uh rfc 7804

3468
02:13:04,159 --> 02:13:06,639
uh the ipv6 requirements for for home

3469
02:13:06,639 --> 02:13:07,679
routers

3470
02:13:07,679 --> 02:13:09,920
that wow we worked on a couple of many

3471
02:13:09,920 --> 02:13:11,520
actually many years ago

3472
02:13:11,520 --> 02:13:14,480
um it was also included in the e-router

3473
02:13:14,480 --> 02:13:15,360
spec for

3474
02:13:15,360 --> 02:13:17,040
that we deploy on cable internet

3475
02:13:17,040 --> 02:13:19,119
gateways there's actually two must

3476
02:13:19,119 --> 02:13:20,000
requirements

3477
02:13:20,000 --> 02:13:22,480
uh that impacted this deployment uh l10

3478
02:13:22,480 --> 02:13:23,840
and l11

3479
02:13:23,840 --> 02:13:25,679
for lan requirements called for the

3480
02:13:25,679 --> 02:13:28,400
inclusion of uh dns ip addresses

3481
02:13:28,400 --> 02:13:30,960
advertised on the lan for both dhv v6

3482
02:13:30,960 --> 02:13:32,239
and ipv6

3483
02:13:32,239 --> 02:13:35,360
re options well guess what the addresses

3484
02:13:35,360 --> 02:13:37,360
advertise the clients on the land were

3485
02:13:37,360 --> 02:13:40,000
not linked local not link local or ulas

3486
02:13:40,000 --> 02:13:41,520
at least not in our case in fact these

3487
02:13:41,520 --> 02:13:43,920
were the public ipv6 anycast

3488
02:13:43,920 --> 02:13:46,960
addresses of our classic dns platform

3489
02:13:46,960 --> 02:13:48,719
and these are on the auto upgrade list

3490
02:13:48,719 --> 02:13:50,320
uh in chrome code

3491
02:13:50,320 --> 02:13:52,639
so voila we have doe traffic thanks to

3492
02:13:52,639 --> 02:13:54,880
pro

3493
02:13:55,679 --> 02:13:57,599
so json this is the timekeeper you have

3494
02:13:57,599 --> 02:14:01,199
about five minutes before camera

3495
02:14:05,440 --> 02:14:07,280
okay uh on this chart you can see we

3496
02:14:07,280 --> 02:14:09,360
were plotting along uh quite

3497
02:14:09,360 --> 02:14:12,960
a fairly low uh queries per second rate

3498
02:14:12,960 --> 02:14:14,560
uh which was wonderful for initial

3499
02:14:14,560 --> 02:14:16,159
testing uh you want to get the kinks out

3500
02:14:16,159 --> 02:14:17,440
of the system

3501
02:14:17,440 --> 02:14:19,599
uh the platform was open to the public

3502
02:14:19,599 --> 02:14:21,119
at this point but there's

3503
02:14:21,119 --> 02:14:23,280
there weren't enough public people using

3504
02:14:23,280 --> 02:14:25,440
it but they were using it just not in

3505
02:14:25,440 --> 02:14:26,400
quantity

3506
02:14:26,400 --> 02:14:28,800
uh but then on november 17th uh when

3507
02:14:28,800 --> 02:14:31,119
chrome started pushing its 87 stub

3508
02:14:31,119 --> 02:14:34,000
stable release uh things got uh more

3509
02:14:34,000 --> 02:14:34,560
interesting

3510
02:14:34,560 --> 02:14:37,040
uh we quickly went from hundreds of

3511
02:14:37,040 --> 02:14:38,320
queries per second to

3512
02:14:38,320 --> 02:14:40,480
you know over 10 000 queries per second

3513
02:14:40,480 --> 02:14:41,840
which was fun uh

3514
02:14:41,840 --> 02:14:44,560
good to see uh one of the internal goals

3515
02:14:44,560 --> 02:14:44,880
was

3516
02:14:44,880 --> 02:14:46,960
uh to hit a hundred thousand queries per

3517
02:14:46,960 --> 02:14:48,639
second on the platform

3518
02:14:48,639 --> 02:14:50,320
uh which you know it took a while but

3519
02:14:50,320 --> 02:14:52,000
i'm glad to say we we crossed that

3520
02:14:52,000 --> 02:14:53,599
threshold

3521
02:14:53,599 --> 02:14:57,040
and we have good data now to work from

3522
02:14:57,040 --> 02:15:00,239
so i thought i would give a uh i thought

3523
02:15:00,239 --> 02:15:01,679
i'd include the slide because i found it

3524
02:15:01,679 --> 02:15:02,719
interesting to see

3525
02:15:02,719 --> 02:15:05,840
uh what happens when cpu load starts to

3526
02:15:05,840 --> 02:15:07,280
uh peak

3527
02:15:07,280 --> 02:15:10,560
uh this was made uh easier by

3528
02:15:10,560 --> 02:15:12,239
actually limiting the number of cores

3529
02:15:12,239 --> 02:15:14,239
into a just a few boxes

3530
02:15:14,239 --> 02:15:15,760
so we could actually get to that 100

3531
02:15:15,760 --> 02:15:18,000
load i'm sure others have actually

3532
02:15:18,000 --> 02:15:21,040
seen similar results in uh in the past

3533
02:15:21,040 --> 02:15:22,639
but um

3534
02:15:22,639 --> 02:15:24,320
in the queers per second graph in the

3535
02:15:24,320 --> 02:15:25,760
top right there

3536
02:15:25,760 --> 02:15:28,079
um you'll see that you know queries are

3537
02:15:28,079 --> 02:15:28,800
ramping up

3538
02:15:28,800 --> 02:15:30,800
you know nice and smooth and then they

3539
02:15:30,800 --> 02:15:32,400
just stop and then you get this nice

3540
02:15:32,400 --> 02:15:33,520
sawtooth pattern

3541
02:15:33,520 --> 02:15:35,280
with a clear top you know which makes

3542
02:15:35,280 --> 02:15:36,880
sense because you can only serve

3543
02:15:36,880 --> 02:15:39,679
what you can serve with your cpu um

3544
02:15:39,679 --> 02:15:40,320
what's more

3545
02:15:40,320 --> 02:15:43,199
interesting also for me from being a

3546
02:15:43,199 --> 02:15:44,480
long-term networking

3547
02:15:44,480 --> 02:15:46,880
guy is the networking graph at the

3548
02:15:46,880 --> 02:15:48,400
bottom right there

3549
02:15:48,400 --> 02:15:50,400
which shows a significant multiple times

3550
02:15:50,400 --> 02:15:52,239
peak in in traffic

3551
02:15:52,239 --> 02:15:53,679
um and it turns out this isn't like

3552
02:15:53,679 --> 02:15:55,440
malicious traffic this is just dns

3553
02:15:55,440 --> 02:15:56,719
clients being dns

3554
02:15:56,719 --> 02:15:59,360
clients and aggressively sending retries

3555
02:15:59,360 --> 02:15:59,840
which

3556
02:15:59,840 --> 02:16:02,639
generates quite a deal of excess traffic

3557
02:16:02,639 --> 02:16:03,199
so i guess

3558
02:16:03,199 --> 02:16:05,040
takeaway there is you know don't max out

3559
02:16:05,040 --> 02:16:06,480
your cpu and if you do

3560
02:16:06,480 --> 02:16:09,119
plan for a lot of uh new network traffic

3561
02:16:09,119 --> 02:16:11,599
that you didn't have before

3562
02:16:11,599 --> 02:16:15,679
let's see all right that's a lot

3563
02:16:15,679 --> 02:16:17,920
so finally uh our work is obviously not

3564
02:16:17,920 --> 02:16:20,079
done we have lots more testing

3565
02:16:20,079 --> 02:16:22,320
and engineering to do including work on

3566
02:16:22,320 --> 02:16:23,119
improving the

3567
02:16:23,119 --> 02:16:25,840
platform performance uh obviously with

3568
02:16:25,840 --> 02:16:26,480
dough you have

3569
02:16:26,480 --> 02:16:28,880
more overhead with https and tls over

3570
02:16:28,880 --> 02:16:30,320
tcp compared to

3571
02:16:30,320 --> 02:16:33,439
classic dns over udp so that now the

3572
02:16:33,439 --> 02:16:34,000
question

3573
02:16:34,000 --> 02:16:37,280
is um how do we improve the performance

3574
02:16:37,280 --> 02:16:38,080
to get

3575
02:16:38,080 --> 02:16:41,439
closer obviously not on par with our doe

3576
02:16:41,439 --> 02:16:44,718
53 production platform performance

3577
02:16:44,718 --> 02:16:46,000
so some of the things we're going to

3578
02:16:46,000 --> 02:16:47,920
look at are use of hardware to offload

3579
02:16:47,920 --> 02:16:50,398
tls on the servers themselves

3580
02:16:50,398 --> 02:16:53,599
and use of the load balancers to offload

3581
02:16:53,599 --> 02:16:55,200
tls sessions

3582
02:16:55,200 --> 02:16:58,240
uh among other options that we can look

3583
02:16:58,240 --> 02:16:59,040
at

3584
02:16:59,040 --> 02:17:01,359
and we also want to uh test the new

3585
02:17:01,359 --> 02:17:03,200
mechanisms being developed and we're

3586
02:17:03,200 --> 02:17:04,718
working on with

3587
02:17:04,718 --> 02:17:07,840
the etf and the uh the adns or the edd

3588
02:17:07,840 --> 02:17:09,200
group the adaptive dns

3589
02:17:09,200 --> 02:17:12,478
discovery group uh including new use of

3590
02:17:12,478 --> 02:17:17,040
new dhcp v6 nra options to advertise the

3591
02:17:17,040 --> 02:17:19,920
the dos servers uh and also understand

3592
02:17:19,920 --> 02:17:21,120
and understand the impact

3593
02:17:21,120 --> 02:17:23,359
of service binding records at https

3594
02:17:23,359 --> 02:17:24,240
records

3595
02:17:24,240 --> 02:17:26,318
which we will hear more about tomorrow

3596
02:17:26,318 --> 02:17:27,760
as well

3597
02:17:27,760 --> 02:17:31,760
and on that i think that's the end

3598
02:17:31,760 --> 02:17:34,558
thank you todd uh thank you jason for

3599
02:17:34,558 --> 02:17:36,000
the presentation

3600
02:17:36,000 --> 02:17:38,318
the questions should be answered by todd

3601
02:17:38,318 --> 02:17:40,718
jason and ricardo

3602
02:17:40,718 --> 02:17:42,638
the first question that we have got from

3603
02:17:42,638 --> 02:17:44,478
the q a is

3604
02:17:44,478 --> 02:17:47,120
what plans do you have to test defenses

3605
02:17:47,120 --> 02:17:49,599
against dns specific ddos attack

3606
02:17:49,599 --> 02:17:52,000
uh such as general query floods

3607
02:17:52,000 --> 02:17:54,240
non-existent recorder attacks

3608
02:17:54,240 --> 02:17:58,638
this is a question by roland dobbins

3609
02:18:00,080 --> 02:18:03,679
i can help take that one so to date um

3610
02:18:03,679 --> 02:18:05,920
our software has some mitigation ability

3611
02:18:05,920 --> 02:18:08,638
built into it from the vendor

3612
02:18:08,638 --> 02:18:10,799
but it was missing a few things so we

3613
02:18:10,799 --> 02:18:13,120
decided to implement rate limiting

3614
02:18:13,120 --> 02:18:16,478
for the um for example no

3615
02:18:16,478 --> 02:18:18,718
uh not implemented records in addition

3616
02:18:18,718 --> 02:18:20,638
to all records we implemented a very

3617
02:18:20,638 --> 02:18:22,080
strict rate limiting

3618
02:18:22,080 --> 02:18:23,679
one of the things we did notice when we

3619
02:18:23,679 --> 02:18:25,439
did stand the cluster up as it is a

3620
02:18:25,439 --> 02:18:27,599
publicly available cluster

3621
02:18:27,599 --> 02:18:31,359
is that um quote unquote bad actors did

3622
02:18:31,359 --> 02:18:32,160
find it

3623
02:18:32,160 --> 02:18:35,200
and did attempt to use it uh for any

3624
02:18:35,200 --> 02:18:36,318
lookups against

3625
02:18:36,318 --> 02:18:38,638
some large organizations and we knit

3626
02:18:38,638 --> 02:18:40,959
that in the bud as soon as we noticed it

3627
02:18:40,959 --> 02:18:44,240
um other than that

3628
02:18:44,240 --> 02:18:46,799
um rate limiting rate living is really

3629
02:18:46,799 --> 02:18:47,760
where we're looking at

3630
02:18:47,760 --> 02:18:49,359
uh mitigating most of these sort of

3631
02:18:49,359 --> 02:18:53,840
attacks and traffic

3632
02:18:55,519 --> 02:18:58,799
any any for any uh i don't see any more

3633
02:18:58,799 --> 02:19:00,160
questions in the q a

3634
02:19:00,160 --> 02:19:01,920
uh if anybody wants to ask the question

3635
02:19:01,920 --> 02:19:03,840
please raise your hand

3636
02:19:03,840 --> 02:19:07,840
we still have a few minutes for the q a

3637
02:19:13,359 --> 02:19:15,200
i think we have a raised hand from paul

3638
02:19:15,200 --> 02:19:17,280
and brett

3639
02:19:17,280 --> 02:19:21,840
i'm not seeing his hands

3640
02:19:26,290 --> 02:19:28,799
[Music]

3641
02:19:28,799 --> 02:19:30,398
olivia are you asking me this is paul

3642
02:19:30,398 --> 02:19:32,240
hoffman

3643
02:19:32,240 --> 02:19:34,558
please go ahead and unmute yourself and

3644
02:19:34,558 --> 02:19:36,240
you can answer the question

3645
02:19:36,240 --> 02:19:38,558
okay this is paul hoffman from icann so

3646
02:19:38,558 --> 02:19:40,478
todd i was interested

3647
02:19:40,478 --> 02:19:44,080
in um the certificate uh slide even

3648
02:19:44,080 --> 02:19:45,920
without good axes

3649
02:19:45,920 --> 02:19:49,359
um what were how did you change

3650
02:19:49,359 --> 02:19:52,399
what was the differences between the

3651
02:19:52,399 --> 02:19:54,960
the certificates were they different

3652
02:19:54,960 --> 02:19:57,600
signing algorithms or different ca back

3653
02:19:57,600 --> 02:19:58,240
ends

3654
02:19:58,240 --> 02:20:01,280
that wasn't clear to me thank you thanks

3655
02:20:01,280 --> 02:20:02,560
for the question they were different

3656
02:20:02,560 --> 02:20:04,319
signing algorithms

3657
02:20:04,319 --> 02:20:05,760
um they included different offer

3658
02:20:05,760 --> 02:20:07,520
packages etc um

3659
02:20:07,520 --> 02:20:10,560
so this was based on the um

3660
02:20:10,560 --> 02:20:12,960
recommended types today uh how strong

3661
02:20:12,960 --> 02:20:13,760
they are and

3662
02:20:13,760 --> 02:20:17,359
what they were signed with etc

3663
02:20:17,359 --> 02:20:20,240
the software that that was being tested

3664
02:20:20,240 --> 02:20:20,960
at the time

3665
02:20:20,960 --> 02:20:24,399
didn't include any uh cpu extension use

3666
02:20:24,399 --> 02:20:26,399
and so we were interested to see what

3667
02:20:26,399 --> 02:20:27,760
differences those would make

3668
02:20:27,760 --> 02:20:30,240
and so obviously they were quite large

3669
02:20:30,240 --> 02:20:31,520
yes

3670
02:20:31,520 --> 02:20:33,680
it would be wonderful if you could uh

3671
02:20:33,680 --> 02:20:34,960
publish just that

3672
02:20:34,960 --> 02:20:36,960
information that will obviously

3673
02:20:36,960 --> 02:20:38,399
short-circuit a lot of problems that

3674
02:20:38,399 --> 02:20:40,720
other people have in the future

3675
02:20:40,720 --> 02:20:44,080
certainly thank you for the suggestion

3676
02:20:44,080 --> 02:20:46,960
uh we have few more questions on the q a

3677
02:20:46,960 --> 02:20:47,280
uh

3678
02:20:47,280 --> 02:20:50,080
first question from peter lexus uh you

3679
02:20:50,080 --> 02:20:51,439
have different vendors

3680
02:20:51,439 --> 02:20:54,800
are these closed or open source

3681
02:20:54,800 --> 02:20:57,760
i can take that question we have not

3682
02:20:57,760 --> 02:20:59,520
disclosed uh which vendor

3683
02:20:59,520 --> 02:21:02,319
we are using for production use however

3684
02:21:02,319 --> 02:21:03,600
we have multiple

3685
02:21:03,600 --> 02:21:06,960
of all types in testing um so

3686
02:21:06,960 --> 02:21:10,840
i so yes i think is the answer to that

3687
02:21:10,840 --> 02:21:12,160
one

3688
02:21:12,160 --> 02:21:15,600
the next question is from eric klein

3689
02:21:15,600 --> 02:21:18,880
any data about use of tfo and tls early

3690
02:21:18,880 --> 02:21:21,199
data

3691
02:21:25,200 --> 02:21:27,600
i don't believe we have any data on

3692
02:21:27,600 --> 02:21:28,800
those items

3693
02:21:28,800 --> 02:21:31,438
jason or todd

3694
02:21:32,240 --> 02:21:35,520
we are starting to gather uh lots of tcp

3695
02:21:35,520 --> 02:21:36,240
data though

3696
02:21:36,240 --> 02:21:39,680
that would be an interest for

3697
02:21:39,680 --> 02:21:41,680
for survey tuning but yeah not those

3698
02:21:41,680 --> 02:21:43,920
yeah

3699
02:21:43,920 --> 02:21:47,280
thank you um i think brett carr has

3700
02:21:47,280 --> 02:21:48,960
racist and brett do you want to ask a

3701
02:21:48,960 --> 02:21:51,359
question you can avoid to yourself

3702
02:21:51,359 --> 02:21:52,640
yeah it was me it was just a quick

3703
02:21:52,640 --> 02:21:54,160
comment rather than a question actually

3704
02:21:54,160 --> 02:21:55,200
it was a really um

3705
02:21:55,200 --> 02:21:57,840
interesting presentation thanks guys um

3706
02:21:57,840 --> 02:21:58,399
it was

3707
02:21:58,399 --> 02:22:00,240
uh really the thing that you mentioned

3708
02:22:00,240 --> 02:22:02,000
at the end of this slide about

3709
02:22:02,000 --> 02:22:05,600
future plans to test the tls

3710
02:22:05,600 --> 02:22:09,200
termination on the load balancers um

3711
02:22:09,200 --> 02:22:10,479
i'd really like to hear about that when

3712
02:22:10,479 --> 02:22:12,399
you've done it because we we actually do

3713
02:22:12,399 --> 02:22:14,000
it that way already now when we did it

3714
02:22:14,000 --> 02:22:15,600
that way first

3715
02:22:15,600 --> 02:22:17,680
but our volume is much less than yours i

3716
02:22:17,680 --> 02:22:19,520
think so but you know in the future

3717
02:22:19,520 --> 02:22:22,160
you'd like to hear about that

3718
02:22:22,160 --> 02:22:23,760
absolutely i think the take home there

3719
02:22:23,760 --> 02:22:25,520
is that when you add hgps there's

3720
02:22:25,520 --> 02:22:26,800
obviously horsepower that has to be

3721
02:22:26,800 --> 02:22:28,640
added it has to be added somewhere

3722
02:22:28,640 --> 02:22:30,080
and kind of figuring out where the best

3723
02:22:30,080 --> 02:22:31,680
place for that is just requires more

3724
02:22:31,680 --> 02:22:32,800
testing

3725
02:22:32,800 --> 02:22:36,000
yeah thanks uh i think we have

3726
02:22:36,000 --> 02:22:39,040
time for just one more question um

3727
02:22:39,040 --> 02:22:41,840
one last question from anthony uh where

3728
02:22:41,840 --> 02:22:43,520
do you expect your door traffic to

3729
02:22:43,520 --> 02:22:44,479
originate

3730
02:22:44,479 --> 02:22:48,560
besides chrome uh mentioned in the talk

3731
02:22:48,560 --> 02:22:51,600
so moving forward once this is fully

3732
02:22:51,600 --> 02:22:53,040
deployed in the network which is going

3733
02:22:53,040 --> 02:22:54,240
to take a little while we've got a few

3734
02:22:54,240 --> 02:22:55,760
bugs to work out

3735
02:22:55,760 --> 02:22:57,520
but the expectation is that it's going

3736
02:22:57,520 --> 02:22:59,439
to be open to the world

3737
02:22:59,439 --> 02:23:02,800
but our subscribers uh charter

3738
02:23:02,800 --> 02:23:05,280
subscriber spectrum will essentially be

3739
02:23:05,280 --> 02:23:07,040
auto upgraded to doh

3740
02:23:07,040 --> 02:23:10,880
through in browser uh pushes

3741
02:23:10,880 --> 02:23:13,520
and slash or operating system pushes as

3742
02:23:13,520 --> 02:23:18,240
operating systems go into doh as well

3743
02:23:18,240 --> 02:23:19,520
i think we can expect to see something

3744
02:23:19,520 --> 02:23:21,280
from microsoft but i'm just guessing

3745
02:23:21,280 --> 02:23:21,600
there

3746
02:23:21,600 --> 02:23:25,359
soon you know iphones

3747
02:23:25,359 --> 02:23:26,800
android phones all of those things are

3748
02:23:26,800 --> 02:23:28,479
going to start auto upgrading once the

3749
02:23:28,479 --> 02:23:29,920
service is available

3750
02:23:29,920 --> 02:23:33,520
in our network

3751
02:23:33,520 --> 02:23:37,359
i think we are uh just about right time

3752
02:23:37,359 --> 02:23:40,640
to end this talk um anybody has

3753
02:23:40,640 --> 02:23:43,120
any questions uh please feel free to ask

3754
02:23:43,120 --> 02:23:46,560
them in mattermore's workshop channel

3755
02:23:46,560 --> 02:23:48,399
so thank you jason thank you todd and

3756
02:23:48,399 --> 02:23:49,840
thank you ricardo for answering the

3757
02:23:49,840 --> 02:23:50,880
questions

3758
02:23:50,880 --> 02:23:54,160
uh welcome next uh i would like to

3759
02:23:54,160 --> 02:23:57,920
invite andrew mashkoff from

3760
02:23:57,920 --> 02:24:00,960
ad guard to talk about their experience

3761
02:24:00,960 --> 02:24:02,240
deploying the

3762
02:24:02,240 --> 02:24:04,479
first ever implementation of dns over

3763
02:24:04,479 --> 02:24:05,680
quick

3764
02:24:05,680 --> 02:24:09,359
please go ahead and so my name is andre

3765
02:24:09,359 --> 02:24:12,399
and i'm a cto at edgard

3766
02:24:12,399 --> 02:24:15,920
and recently we launched uh the first

3767
02:24:15,920 --> 02:24:19,520
ever public dns of a quick resolver

3768
02:24:19,520 --> 02:24:22,000
and so today i'd like to tell you more

3769
02:24:22,000 --> 02:24:23,680
about it

3770
02:24:23,680 --> 02:24:26,560
uh but first let me please start with a

3771
02:24:26,560 --> 02:24:28,000
very short introduction

3772
02:24:28,000 --> 02:24:30,800
of what we do and where dns of a kwik

3773
02:24:30,800 --> 02:24:31,680
was

3774
02:24:31,680 --> 02:24:35,920
was deployed uh so edgard is

3775
02:24:35,920 --> 02:24:38,880
originally a content blocking tool but

3776
02:24:38,880 --> 02:24:40,240
we also develop

3777
02:24:40,240 --> 02:24:44,560
a number of dns based solutions

3778
02:24:44,560 --> 02:24:47,520
first is edgar tns this is a public dns

3779
02:24:47,520 --> 02:24:49,120
resolver

3780
02:24:49,120 --> 02:24:53,120
edward home this is a home dns server

3781
02:24:53,120 --> 02:24:54,399
for personal use

3782
02:24:54,399 --> 02:24:57,760
and edgard apps mobile apps mostly

3783
02:24:57,760 --> 02:25:00,560
they also provide tns filtering and

3784
02:25:00,560 --> 02:25:02,240
encryption capabilities

3785
02:25:02,240 --> 02:25:04,720
and so all of them got dns over quick

3786
02:25:04,720 --> 02:25:06,960
support

3787
02:25:06,960 --> 02:25:10,720
a month ago so uh a few words about

3788
02:25:10,720 --> 02:25:12,080
edgar dns

3789
02:25:12,080 --> 02:25:15,280
uh it was uh launched a couple of years

3790
02:25:15,280 --> 02:25:15,920
ago

3791
02:25:15,920 --> 02:25:19,680
and uh well it's kind of popular among

3792
02:25:19,680 --> 02:25:20,810
people who want to

3793
02:25:20,810 --> 02:25:22,080
[Music]

3794
02:25:22,080 --> 02:25:24,240
to get some content blocking on the dns

3795
02:25:24,240 --> 02:25:27,040
level currently edgar tns

3796
02:25:27,040 --> 02:25:30,240
uh it is uh here

3797
02:25:30,240 --> 02:25:33,760
here are the stats so it's about 100

3798
02:25:33,760 --> 02:25:36,960
a thousand uh rps uh

3799
02:25:36,960 --> 02:25:40,160
and as you can see uh

3800
02:25:40,160 --> 02:25:42,319
a considerable part of it uh is

3801
02:25:42,319 --> 02:25:43,280
encrypted

3802
02:25:43,280 --> 02:25:48,319
uh so the largest part is dns over tls

3803
02:25:48,319 --> 02:25:51,840
which comes mostly from android devices

3804
02:25:51,840 --> 02:25:52,800
uh

3805
02:25:52,800 --> 02:25:55,920
there's also dns over https

3806
02:25:55,920 --> 02:25:59,760
uh dns script and finally dns over quick

3807
02:25:59,760 --> 02:26:02,880
uh which this slide is a little bit uh

3808
02:26:02,880 --> 02:26:06,319
outdated uh actually dns over quick uh

3809
02:26:06,319 --> 02:26:09,680
seems uh to grow and currently it's

3810
02:26:09,680 --> 02:26:12,800
already one and a half percent uh

3811
02:26:12,800 --> 02:26:15,439
which we think is not bad because it is

3812
02:26:15,439 --> 02:26:16,160
clearly

3813
02:26:16,160 --> 02:26:18,399
indicated that this is an experimental

3814
02:26:18,399 --> 02:26:19,359
protocol

3815
02:26:19,359 --> 02:26:22,479
and still people opt to use it

3816
02:26:22,479 --> 02:26:25,600
uh so uh this is

3817
02:26:25,600 --> 02:26:28,160
uh just an introduction now let's talk

3818
02:26:28,160 --> 02:26:30,560
about dns encryption in general before

3819
02:26:30,560 --> 02:26:31,840
uh before i

3820
02:26:31,840 --> 02:26:33,520
i will start to talk about dns have a

3821
02:26:33,520 --> 02:26:35,280
quick uh

3822
02:26:35,280 --> 02:26:38,640
and so let's talk about different

3823
02:26:38,640 --> 02:26:40,399
protocols pros and cons

3824
02:26:40,399 --> 02:26:43,359
and we'll start with the ordinary normal

3825
02:26:43,359 --> 02:26:44,240
dns

3826
02:26:44,240 --> 02:26:48,319
protocol uh it is the fastest of all uh

3827
02:26:48,319 --> 02:26:51,760
it's light on resources and a resolver

3828
02:26:51,760 --> 02:26:52,240
like

3829
02:26:52,240 --> 02:26:55,760
ours uh can handle this load like on a

3830
02:26:55,760 --> 02:26:57,280
single

3831
02:26:57,280 --> 02:27:00,720
not very expensive server however

3832
02:27:00,720 --> 02:27:02,479
there's one fatal flow

3833
02:27:02,479 --> 02:27:06,560
uh there is no encryption at all

3834
02:27:06,560 --> 02:27:10,880
next uh tns crypt uh i think it was

3835
02:27:10,880 --> 02:27:13,520
the first commonly used dns encryption

3836
02:27:13,520 --> 02:27:15,600
protocol

3837
02:27:15,600 --> 02:27:18,880
and uh well it's not bad uh

3838
02:27:18,880 --> 02:27:22,080
and sometimes uh

3839
02:27:22,080 --> 02:27:24,640
i missed the time uh when it was the

3840
02:27:24,640 --> 02:27:25,680
only one

3841
02:27:25,680 --> 02:27:28,800
performance-wise it is almost as fast as

3842
02:27:28,800 --> 02:27:32,720
the normal dns but unfortunately

3843
02:27:32,720 --> 02:27:35,040
it has a couple of important flows and

3844
02:27:35,040 --> 02:27:36,399
the most important one

3845
02:27:36,399 --> 02:27:38,560
is that it uses a non-standard

3846
02:27:38,560 --> 02:27:40,160
encryption

3847
02:27:40,160 --> 02:27:43,520
and unlike tls it was never seriously

3848
02:27:43,520 --> 02:27:46,720
audited and well it is

3849
02:27:46,720 --> 02:27:48,399
right quite easy to detect and

3850
02:27:48,399 --> 02:27:50,720
distinguish from other traffic

3851
02:27:50,720 --> 02:27:54,080
then there are tns over tls and

3852
02:27:54,080 --> 02:27:57,120
though that are rather slow

3853
02:27:57,120 --> 02:28:00,560
compared to uh regular dns

3854
02:28:00,560 --> 02:28:03,840
uh they might uh

3855
02:28:03,840 --> 02:28:06,399
they might look fast enough in tasting

3856
02:28:06,399 --> 02:28:08,240
environment or when you have good

3857
02:28:08,240 --> 02:28:10,880
network connection but in the real life

3858
02:28:10,880 --> 02:28:14,560
especially on mobile devices uh

3859
02:28:14,560 --> 02:28:17,280
drawbacks of these protocols become

3860
02:28:17,280 --> 02:28:18,720
clear

3861
02:28:18,720 --> 02:28:22,880
for instance a pretty slow tls can shake

3862
02:28:22,880 --> 02:28:24,640
that happens every time when

3863
02:28:24,640 --> 02:28:28,479
network changes or

3864
02:28:28,479 --> 02:28:32,000
a single lost tcp packet that

3865
02:28:32,000 --> 02:28:36,319
delays all other dns queries

3866
02:28:36,319 --> 02:28:38,640
and besides that they're obviously

3867
02:28:38,640 --> 02:28:41,120
heavier in terms of bandwidth

3868
02:28:41,120 --> 02:28:44,160
mostly due to the heavy

3869
02:28:44,160 --> 02:28:47,439
handshake process the server

3870
02:28:47,439 --> 02:28:50,720
has to send the full certificates chain

3871
02:28:50,720 --> 02:28:52,640
to the client

3872
02:28:52,640 --> 02:28:55,359
and even though uh there's the last

3873
02:28:55,359 --> 02:28:57,040
session resumption

3874
02:28:57,040 --> 02:29:02,000
it doesn't fully uh negates this problem

3875
02:29:02,000 --> 02:29:05,359
uh and now let's talk uh about quick

3876
02:29:05,359 --> 02:29:08,000
and what is the difference between quick

3877
02:29:08,000 --> 02:29:09,040
and

3878
02:29:09,040 --> 02:29:12,640
tcp plus tls stack

3879
02:29:12,800 --> 02:29:15,280
quick originally was supposed to solve

3880
02:29:15,280 --> 02:29:16,720
most of the issues

3881
02:29:16,720 --> 02:29:19,840
that are specific to https and

3882
02:29:19,840 --> 02:29:24,240
to tls and here's what it helps with

3883
02:29:24,240 --> 02:29:26,720
first of all quick speeds up the initial

3884
02:29:26,720 --> 02:29:28,880
handshake

3885
02:29:28,880 --> 02:29:31,920
it is supposed to solve the head of line

3886
02:29:31,920 --> 02:29:33,840
blocking issue

3887
02:29:33,840 --> 02:29:35,920
and also it provides an interesting

3888
02:29:35,920 --> 02:29:37,200
mechanism for

3889
02:29:37,200 --> 02:29:40,240
uh so-called connection migration which

3890
02:29:40,240 --> 02:29:40,560
is

3891
02:29:40,560 --> 02:29:43,760
uh which allows to use the same

3892
02:29:43,760 --> 02:29:45,280
connection

3893
02:29:45,280 --> 02:29:49,439
even when your ip addresses has

3894
02:29:49,439 --> 02:29:52,880
has changed uh let's take a look

3895
02:29:52,880 --> 02:29:55,439
uh at each at each of these uh

3896
02:29:55,439 --> 02:29:56,479
advantages

3897
02:29:56,479 --> 02:29:58,960
so first let's talk about faster

3898
02:29:58,960 --> 02:30:00,720
handshake and how it's achieved and

3899
02:30:00,720 --> 02:30:02,240
quick

3900
02:30:02,240 --> 02:30:05,520
uh encryption and authentication

3901
02:30:05,520 --> 02:30:09,120
are normally handled by a higher level

3902
02:30:09,120 --> 02:30:09,840
protocol

3903
02:30:09,840 --> 02:30:13,359
uh well tls uh

3904
02:30:13,359 --> 02:30:15,600
and not by the transport product also

3905
02:30:15,600 --> 02:30:16,720
tcp

3906
02:30:16,720 --> 02:30:19,520
but quick change uh changes this uh as

3907
02:30:19,520 --> 02:30:21,200
you can see on the slide

3908
02:30:21,200 --> 02:30:24,399
uh quick handshake combines the

3909
02:30:24,399 --> 02:30:27,840
tcp like three-way handshake with the

3910
02:30:27,840 --> 02:30:31,120
tls like and shake

3911
02:30:31,200 --> 02:30:33,840
and again as you can see on this slide

3912
02:30:33,840 --> 02:30:35,040
uh

3913
02:30:35,040 --> 02:30:37,600
quick uh quick handshake can be

3914
02:30:37,600 --> 02:30:38,640
completed

3915
02:30:38,640 --> 02:30:42,319
uh fast it requires fewer number of

3916
02:30:42,319 --> 02:30:46,160
packets uh because well

3917
02:30:46,160 --> 02:30:48,960
let's take uh let's take these slides on

3918
02:30:48,960 --> 02:30:50,640
the left slide you can see a regular

3919
02:30:50,640 --> 02:30:52,479
https handshake

3920
02:30:52,479 --> 02:30:56,240
first there's a three-way tcp handshake

3921
02:30:56,240 --> 02:31:00,080
uh then there's also a tls handshake

3922
02:31:00,080 --> 02:31:01,040
also three-way

3923
02:31:01,040 --> 02:31:04,080
and now uh only after that

3924
02:31:04,080 --> 02:31:07,359
the first dns or http request

3925
02:31:07,359 --> 02:31:10,399
is being sent and on the right side you

3926
02:31:10,399 --> 02:31:11,439
can see that

3927
02:31:11,439 --> 02:31:14,880
uh in the case of quick

3928
02:31:14,880 --> 02:31:17,680
uh it is combined so there are only

3929
02:31:17,680 --> 02:31:19,120
three packets instead of

3930
02:31:19,120 --> 02:31:22,160
six and uh so all in all

3931
02:31:22,160 --> 02:31:25,520
uh it is faster well

3932
02:31:25,520 --> 02:31:29,280
should be twice faster second

3933
02:31:29,280 --> 02:31:31,600
issue i would like to talk about is head

3934
02:31:31,600 --> 02:31:33,280
of line blocking

3935
02:31:33,280 --> 02:31:37,280
so the current dose standard

3936
02:31:37,280 --> 02:31:41,840
tells us that dns over https

3937
02:31:41,840 --> 02:31:45,359
is supposed to use http 2.

3938
02:31:45,359 --> 02:31:49,359
one of the main advantages of http 2

3939
02:31:49,359 --> 02:31:53,439
over older http is multiplexing which

3940
02:31:53,439 --> 02:31:54,080
means

3941
02:31:54,080 --> 02:31:57,680
that you can multiplex

3942
02:31:57,680 --> 02:32:00,880
different http requests

3943
02:32:00,880 --> 02:32:04,560
uh inside the same tcp connection

3944
02:32:04,560 --> 02:32:08,840
unfortunately this has an important

3945
02:32:08,840 --> 02:32:11,840
downside since multiple requests

3946
02:32:11,840 --> 02:32:14,160
and responses are transmitted over the

3947
02:32:14,160 --> 02:32:16,000
same tcp connection

3948
02:32:16,000 --> 02:32:20,000
they are all equally affected by

3949
02:32:20,000 --> 02:32:22,640
the packet loss which happens rather

3950
02:32:22,640 --> 02:32:23,280
often

3951
02:32:23,280 --> 02:32:26,640
on mobile devices so even if just a

3952
02:32:26,640 --> 02:32:28,880
single dns query was lost

3953
02:32:28,880 --> 02:32:32,960
others will also be affected the client

3954
02:32:32,960 --> 02:32:36,720
or server will have to wait until

3955
02:32:36,720 --> 02:32:39,200
it is retransmitted and only then they

3956
02:32:39,200 --> 02:32:41,280
will be able to continue processing

3957
02:32:41,280 --> 02:32:43,840
other queries

3958
02:32:43,840 --> 02:32:45,920
this is essentially what is called head

3959
02:32:45,920 --> 02:32:48,880
of line blocking

3960
02:32:48,960 --> 02:32:51,920
so let's see how quick solves this quick

3961
02:32:51,920 --> 02:32:54,399
also supports multiplexing just like

3962
02:32:54,399 --> 02:32:57,439
http 2 and just that

3963
02:32:57,439 --> 02:32:59,920
just like http 2 there are streams there

3964
02:32:59,920 --> 02:33:00,800
are frames

3965
02:33:00,800 --> 02:33:04,080
that go through those streams

3966
02:33:04,080 --> 02:33:06,240
but there's a huge difference quick

3967
02:33:06,240 --> 02:33:07,840
streams are delivered

3968
02:33:07,840 --> 02:33:11,439
independently uh so even even if packet

3969
02:33:11,439 --> 02:33:11,920
loss

3970
02:33:11,920 --> 02:33:14,880
uh occurs and affects one of these

3971
02:33:14,880 --> 02:33:16,160
streams

3972
02:33:16,160 --> 02:33:19,439
other streams are unaffected

3973
02:33:19,439 --> 02:33:23,600
and in in the case of dns of a quick

3974
02:33:23,760 --> 02:33:26,240
client initiates a new quick stream for

3975
02:33:26,240 --> 02:33:28,560
every new dns query

3976
02:33:28,560 --> 02:33:31,920
therefore if one dns query was lost

3977
02:33:31,920 --> 02:33:35,359
it does not affect other queries

3978
02:33:35,359 --> 02:33:38,800
uh last but not least

3979
02:33:38,800 --> 02:33:42,640
connection migration this feature

3980
02:33:42,640 --> 02:33:45,120
allows quickened points to migrate

3981
02:33:45,120 --> 02:33:49,359
connections to different ip addresses

3982
02:33:49,359 --> 02:33:52,319
for example a mobile client should be

3983
02:33:52,319 --> 02:33:53,600
able to migrate

3984
02:33:53,600 --> 02:33:55,920
quick connections between cellular data

3985
02:33:55,920 --> 02:33:58,800
and wi-fi

3986
02:33:59,040 --> 02:34:00,960
the simple example is when you leave a

3987
02:34:00,960 --> 02:34:03,359
house and you disconnect from your

3988
02:34:03,359 --> 02:34:06,960
home wi-fi and start using your uh

3989
02:34:06,960 --> 02:34:10,240
well and start using solar data uh

3990
02:34:10,240 --> 02:34:13,520
the quick connection can stay uh

3991
02:34:13,520 --> 02:34:16,560
intact uh

3992
02:34:16,560 --> 02:34:19,840
not every time uh not for instance not

3993
02:34:19,840 --> 02:34:20,880
in our case

3994
02:34:20,880 --> 02:34:24,000
uh i will tell about this later uh

3995
02:34:24,000 --> 02:34:26,560
but in theory this is possible and this

3996
02:34:26,560 --> 02:34:28,319
is achieved by

3997
02:34:28,319 --> 02:34:32,479
introducing a concept of a connection id

3998
02:34:32,479 --> 02:34:35,280
uh carried by quick packets so end

3999
02:34:35,280 --> 02:34:36,960
points can use this id

4000
02:34:36,960 --> 02:34:39,040
to track connections that they are

4001
02:34:39,040 --> 02:34:40,640
responsible for

4002
02:34:40,640 --> 02:34:43,520
uh without the need to check uh to check

4003
02:34:43,520 --> 02:34:44,000
the source

4004
02:34:44,000 --> 02:34:48,800
ip ports and destination ap and port

4005
02:34:49,520 --> 02:34:52,960
and now i would like to talk about

4006
02:34:52,960 --> 02:34:56,640
toe dns of a quick versus dns server

4007
02:34:56,640 --> 02:34:58,880
http 3.

4008
02:34:58,880 --> 02:35:02,399
i've heard a couple of times that tns of

4009
02:35:02,399 --> 02:35:04,240
a quick makes little sense because

4010
02:35:04,240 --> 02:35:05,920
dole will receive quick support

4011
02:35:05,920 --> 02:35:09,760
naturally when it's upgraded to http 3.

4012
02:35:09,760 --> 02:35:12,479
and to be honest uh to me it sounds

4013
02:35:12,479 --> 02:35:13,680
rather strange

4014
02:35:13,680 --> 02:35:17,200
uh to put it simple let's take this

4015
02:35:17,200 --> 02:35:18,560
analogy

4016
02:35:18,560 --> 02:35:20,319
uh imagine you want to get to a

4017
02:35:20,319 --> 02:35:21,920
different city

4018
02:35:21,920 --> 02:35:24,640
you can travel by train you can travel

4019
02:35:24,640 --> 02:35:26,160
by car

4020
02:35:26,160 --> 02:35:28,720
or you could travel by train with your

4021
02:35:28,720 --> 02:35:29,600
car

4022
02:35:29,600 --> 02:35:32,720
granted you travel will take pretty much

4023
02:35:32,720 --> 02:35:34,640
the same time but i just can't

4024
02:35:34,640 --> 02:35:36,319
understand why would you need to bring

4025
02:35:36,319 --> 02:35:38,080
the car over there

4026
02:35:38,080 --> 02:35:41,520
and what's the point uh so

4027
02:35:41,520 --> 02:35:44,640
uh in this analogy obviously

4028
02:35:44,640 --> 02:35:47,680
uh train is quick and car

4029
02:35:47,680 --> 02:35:51,520
uh i guess uh i think you can guess

4030
02:35:51,520 --> 02:35:54,399
uh so if we can if we compare tns of a

4031
02:35:54,399 --> 02:35:54,800
quick

4032
02:35:54,800 --> 02:35:57,840
and tow three both of them use

4033
02:35:57,840 --> 02:36:00,319
quick as an underlying transport

4034
02:36:00,319 --> 02:36:01,600
protocol

4035
02:36:01,600 --> 02:36:05,520
http 3 adds http on top of it

4036
02:36:05,520 --> 02:36:08,640
which means it sends and receives http

4037
02:36:08,640 --> 02:36:12,240
headers alongside every dns query

4038
02:36:12,240 --> 02:36:14,640
and the problem is that protocol wise it

4039
02:36:14,640 --> 02:36:15,439
adds

4040
02:36:15,439 --> 02:36:18,640
no value one could say that you can

4041
02:36:18,640 --> 02:36:19,600
benefit from

4042
02:36:19,600 --> 02:36:23,200
http caching but well

4043
02:36:23,200 --> 02:36:25,120
why well why would you need to

4044
02:36:25,120 --> 02:36:27,040
complicate things and use it instead of

4045
02:36:27,040 --> 02:36:27,439
the

4046
02:36:27,439 --> 02:36:30,960
standard dns cache and besides the

4047
02:36:30,960 --> 02:36:32,960
overhead of carrying http

4048
02:36:32,960 --> 02:36:36,000
headers with every dns query

4049
02:36:36,000 --> 02:36:38,560
it also adds more data points which can

4050
02:36:38,560 --> 02:36:39,439
be used

4051
02:36:39,439 --> 02:36:42,880
to fingerprint clients uh let's take a

4052
02:36:42,880 --> 02:36:44,240
couple of examples

4053
02:36:44,240 --> 02:36:46,479
for instance different double clients

4054
02:36:46,479 --> 02:36:48,960
depending on the implementation

4055
02:36:48,960 --> 02:36:51,840
may use different headers order that's

4056
02:36:51,840 --> 02:36:53,439
plus one point

4057
02:36:53,439 --> 02:36:55,520
different dole clients may use different

4058
02:36:55,520 --> 02:36:57,439
tls properties

4059
02:36:57,439 --> 02:36:59,600
and also http caching provides some

4060
02:36:59,600 --> 02:37:01,600
tracking capabilities for instance

4061
02:37:01,600 --> 02:37:04,640
etag tracking could be used just as

4062
02:37:04,640 --> 02:37:07,680
cookies are used now

4063
02:37:07,680 --> 02:37:10,800
and that's why toe clients should be

4064
02:37:10,800 --> 02:37:13,920
careful with that and simply

4065
02:37:13,920 --> 02:37:17,120
not implement that uh and all in all the

4066
02:37:17,120 --> 02:37:18,000
only

4067
02:37:18,000 --> 02:37:20,960
real benefit of though three is that the

4068
02:37:20,960 --> 02:37:22,640
existing dole clients

4069
02:37:22,640 --> 02:37:25,040
will get its support naturally with

4070
02:37:25,040 --> 02:37:26,800
little effort

4071
02:37:26,800 --> 02:37:30,479
uh but that seems to be all uh

4072
02:37:30,479 --> 02:37:33,680
and well

4073
02:37:33,680 --> 02:37:36,720
it just doesn't seem as elegant as dns

4074
02:37:36,720 --> 02:37:38,800
over quick to me

4075
02:37:38,800 --> 02:37:41,520
uh and now i would like to talk about

4076
02:37:41,520 --> 02:37:42,800
dns over quick

4077
02:37:42,800 --> 02:37:45,359
implementations that we made the dead

4078
02:37:45,359 --> 02:37:47,600
guard

4079
02:37:47,600 --> 02:37:51,680
so the first one is we have a core dns

4080
02:37:51,680 --> 02:37:57,200
fork that we use it at garth internally

4081
02:37:57,200 --> 02:38:01,040
and it's open source everyone can

4082
02:38:01,040 --> 02:38:03,200
we'll just take it and use it and on

4083
02:38:03,200 --> 02:38:05,040
this slide you can see a sample

4084
02:38:05,040 --> 02:38:07,840
core dns configuration that is enough to

4085
02:38:07,840 --> 02:38:11,280
run a dns of a quick resolver

4086
02:38:11,280 --> 02:38:13,359
as you can see the only thing you need

4087
02:38:13,359 --> 02:38:14,560
is

4088
02:38:14,560 --> 02:38:17,120
a valid tls certificate and the private

4089
02:38:17,120 --> 02:38:19,200
key

4090
02:38:19,200 --> 02:38:22,160
then there's also another tool that we

4091
02:38:22,160 --> 02:38:23,600
developed the ted guard

4092
02:38:23,600 --> 02:38:27,040
which is called tns proxy and it also

4093
02:38:27,040 --> 02:38:29,040
got dns of a quick support

4094
02:38:29,040 --> 02:38:32,160
and it is also open source this is a

4095
02:38:32,160 --> 02:38:34,399
simple command line tool that allows to

4096
02:38:34,399 --> 02:38:36,640
run a forwarding dns server

4097
02:38:36,640 --> 02:38:39,439
just like dns mask with the only

4098
02:38:39,439 --> 02:38:40,640
difference that it

4099
02:38:40,640 --> 02:38:43,840
supports all kinds of tns encryption

4100
02:38:43,840 --> 02:38:46,560
on both ends it could be an encrypted

4101
02:38:46,560 --> 02:38:48,240
dns server

4102
02:38:48,240 --> 02:38:50,720
or it could forward dns traffic to an

4103
02:38:50,720 --> 02:38:51,359
encrypted

4104
02:38:51,359 --> 02:38:54,319
dns resolver and it supports all kinds

4105
02:38:54,319 --> 02:38:55,280
of protocols

4106
02:38:55,280 --> 02:38:58,399
you know told dns of tls tnsr

4107
02:38:58,399 --> 02:39:02,080
quick you name it uh and also it is

4108
02:39:02,080 --> 02:39:03,200
written in go

4109
02:39:03,200 --> 02:39:05,680
and you can also use it as a library if

4110
02:39:05,680 --> 02:39:06,479
you

4111
02:39:06,479 --> 02:39:10,319
if you would like to do some coding

4112
02:39:10,319 --> 02:39:13,359
and then there is uh dnso uh

4113
02:39:13,359 --> 02:39:14,960
and then there is edgar holm the

4114
02:39:14,960 --> 02:39:16,560
personal dns server

4115
02:39:16,560 --> 02:39:19,840
uh that also got uh the nest of a quick

4116
02:39:19,840 --> 02:39:20,640
support

4117
02:39:20,640 --> 02:39:23,760
uh it got it naturally since

4118
02:39:23,760 --> 02:39:25,920
it uses dns proxy that i mentioned

4119
02:39:25,920 --> 02:39:27,520
before

4120
02:39:27,520 --> 02:39:31,280
uh and we also developed some

4121
02:39:31,280 --> 02:39:34,080
dns of a quick clients so again dns

4122
02:39:34,080 --> 02:39:34,960
proxy again

4123
02:39:34,960 --> 02:39:37,600
edgar home i just talked about them and

4124
02:39:37,600 --> 02:39:39,280
also there's a dns leaps

4125
02:39:39,280 --> 02:39:42,240
library that we also use in ad guards we

4126
02:39:42,240 --> 02:39:44,479
use it in our mobile apps

4127
02:39:44,479 --> 02:39:47,520
which is written in c plus plus

4128
02:39:47,520 --> 02:39:50,880
and it also allows to use tns server

4129
02:39:50,880 --> 02:39:52,160
quick

4130
02:39:52,160 --> 02:39:56,560
and the last one uh is a dns lookup a

4131
02:39:56,560 --> 02:39:58,960
very simple and nest lookup like tool

4132
02:39:58,960 --> 02:40:00,399
that supports

4133
02:40:00,399 --> 02:40:03,520
all kinds of encryption protocols

4134
02:40:03,520 --> 02:40:06,720
uh and now i would like to

4135
02:40:06,720 --> 02:40:09,439
quickly talk about existing quick

4136
02:40:09,439 --> 02:40:11,359
implementations

4137
02:40:11,359 --> 02:40:14,800
uh first uh

4138
02:40:14,800 --> 02:40:17,680
the one that we use for our go for our

4139
02:40:17,680 --> 02:40:18,960
tools written and go

4140
02:40:18,960 --> 02:40:22,399
is is a library called quick

4141
02:40:22,399 --> 02:40:25,680
go which is not bad

4142
02:40:25,680 --> 02:40:29,200
the only downside is that it does not

4143
02:40:29,200 --> 02:40:32,319
support connection migration yet

4144
02:40:32,319 --> 02:40:36,399
and for c plus plus we use ng tcp 2

4145
02:40:36,399 --> 02:40:39,680
which is also uh very

4146
02:40:39,680 --> 02:40:42,000
what works very well and we're quite

4147
02:40:42,000 --> 02:40:44,160
happy with it

4148
02:40:44,160 --> 02:40:47,439
on this slide i missed uh to mention

4149
02:40:47,439 --> 02:40:51,600
uh quiche by cloudflare uh

4150
02:40:51,600 --> 02:40:54,800
but actually this is a very solid option

4151
02:40:54,800 --> 02:40:58,560
and we experiment with it uh tedguard

4152
02:40:58,560 --> 02:41:01,920
and so far it shows better results

4153
02:41:01,920 --> 02:41:05,760
than the tools that use quick go

4154
02:41:05,760 --> 02:41:08,479
in terms of performance so i can

4155
02:41:08,479 --> 02:41:09,279
recommend it

4156
02:41:09,279 --> 02:41:13,120
easily and about

4157
02:41:13,120 --> 02:41:16,560
current issues current issues of tns

4158
02:41:16,560 --> 02:41:19,600
over quick is that well uh connection

4159
02:41:19,600 --> 02:41:22,080
migration is not supported by edgar tns

4160
02:41:22,080 --> 02:41:24,240
this is kind of our issue and not the

4161
02:41:24,240 --> 02:41:26,000
next of a quick issue but i would like

4162
02:41:26,000 --> 02:41:27,760
to mention that anyway

4163
02:41:27,760 --> 02:41:29,920
uh there are two problems with

4164
02:41:29,920 --> 02:41:31,920
connection migration first of all it's

4165
02:41:31,920 --> 02:41:34,560
not yet implemented at quick go

4166
02:41:34,560 --> 02:41:38,640
uh well obviously uh this is a problem

4167
02:41:38,640 --> 02:41:40,880
but then there's another problem at this

4168
02:41:40,880 --> 02:41:42,840
guide we use

4169
02:41:42,840 --> 02:41:46,319
ecmp to balance load between servers

4170
02:41:46,319 --> 02:41:49,359
in the same location and ecmp is not

4171
02:41:49,359 --> 02:41:51,439
compatible with connection migration as

4172
02:41:51,439 --> 02:41:52,080
well

4173
02:41:52,080 --> 02:41:55,600
i hope in the future this will change

4174
02:41:55,600 --> 02:41:58,640
and there will be routers that that are

4175
02:41:58,640 --> 02:41:59,760
able to handle

4176
02:41:59,760 --> 02:42:03,520
quick traffic uh but at this point for

4177
02:42:03,520 --> 02:42:04,080
now

4178
02:42:04,080 --> 02:42:07,200
or most of them use uh

4179
02:42:07,200 --> 02:42:10,479
ips uh so client ap

4180
02:42:10,479 --> 02:42:14,000
and uh and port to

4181
02:42:14,000 --> 02:42:16,960
load traffic and there's a chance that

4182
02:42:16,960 --> 02:42:18,479
packets may be

4183
02:42:18,479 --> 02:42:20,720
when the cloud when the client changes

4184
02:42:20,720 --> 02:42:22,399
uh its ap

4185
02:42:22,399 --> 02:42:24,800
there's a chance that the packet will be

4186
02:42:24,800 --> 02:42:26,880
routed to a different node

4187
02:42:26,880 --> 02:42:29,279
that is not aware of this connection of

4188
02:42:29,279 --> 02:42:30,240
these clients

4189
02:42:30,240 --> 02:42:33,439
connection id and finally uh

4190
02:42:33,439 --> 02:42:37,360
quick in tennessee quicker still drafts

4191
02:42:37,360 --> 02:42:38,800
[Music]

4192
02:42:38,800 --> 02:42:42,399
i really hope that uh this will change

4193
02:42:42,399 --> 02:42:46,880
uh but well for now uh it is not final

4194
02:42:46,880 --> 02:42:50,399
it is not a final step standard and

4195
02:42:50,399 --> 02:42:53,439
uh a few words about

4196
02:42:53,439 --> 02:42:56,080
users feedback so what we get from our

4197
02:42:56,080 --> 02:42:57,279
users

4198
02:42:57,279 --> 02:43:01,439
uh they seem to be pretty happy and

4199
02:43:01,439 --> 02:43:04,160
looking at the numbers and on the server

4200
02:43:04,160 --> 02:43:05,120
load

4201
02:43:05,120 --> 02:43:08,319
i see that more and more people

4202
02:43:08,319 --> 02:43:11,520
try dns so quick and choose it over

4203
02:43:11,520 --> 02:43:14,720
over the alternatives and

4204
02:43:14,720 --> 02:43:17,760
also uh

4205
02:43:17,760 --> 02:43:20,960
uh it seems that dns over quick is not

4206
02:43:20,960 --> 02:43:23,439
really blocked and it works pretty well

4207
02:43:23,439 --> 02:43:25,760
and reliably

4208
02:43:25,760 --> 02:43:30,640
and uh the most

4209
02:43:30,640 --> 02:43:33,520
the most positive feedback we're getting

4210
02:43:33,520 --> 02:43:34,160
from

4211
02:43:34,160 --> 02:43:38,000
people with mobile devices uh

4212
02:43:38,000 --> 02:43:40,000
so it seems that it does provide

4213
02:43:40,000 --> 02:43:41,520
advantage over

4214
02:43:41,520 --> 02:43:44,640
though on solar data networks uh

4215
02:43:44,640 --> 02:43:48,240
due to faster handshake for instance uh

4216
02:43:48,240 --> 02:43:50,960
and one more thing that again is not

4217
02:43:50,960 --> 02:43:52,720
mentioned on this slide is

4218
02:43:52,720 --> 02:43:55,439
is that i've heard at least about one

4219
02:43:55,439 --> 02:43:57,359
public dns resolver

4220
02:43:57,359 --> 02:43:59,600
that is going to implement dns over

4221
02:43:59,600 --> 02:44:02,240
quick in the nearest future

4222
02:44:02,240 --> 02:44:05,279
uh so i hope that

4223
02:44:05,279 --> 02:44:07,359
the prospects are bright for dns so

4224
02:44:07,359 --> 02:44:08,960
we're quick

4225
02:44:08,960 --> 02:44:12,000
uh and i'm happy with it

4226
02:44:12,000 --> 02:44:14,800
so that's it thank you very much for

4227
02:44:14,800 --> 02:44:16,000
your attention

4228
02:44:16,000 --> 02:44:19,840
i'm ready for any questions

4229
02:44:19,840 --> 02:44:22,319
uh thank you andre uh that was a very

4230
02:44:22,319 --> 02:44:24,479
interesting uh presentation

4231
02:44:24,479 --> 02:44:27,439
um i would like to remind the audience

4232
02:44:27,439 --> 02:44:29,439
to fill the poll because this is your

4233
02:44:29,439 --> 02:44:30,640
chance to fill it

4234
02:44:30,640 --> 02:44:32,399
uh it will pop up like in a couple of

4235
02:44:32,399 --> 02:44:33,840
minutes right after

4236
02:44:33,840 --> 02:44:36,720
uh presentation andre we have a few

4237
02:44:36,720 --> 02:44:38,080
questions for you

4238
02:44:38,080 --> 02:44:40,319
uh the first question is from roland

4239
02:44:40,319 --> 02:44:42,319
davids

4240
02:44:42,319 --> 02:44:44,800
his question is what is your view of the

4241
02:44:44,800 --> 02:44:46,880
pursuit inevitability of

4242
02:44:46,880 --> 02:44:50,880
the uh do3 versus dns over quick

4243
02:44:50,880 --> 02:44:53,600
uh isn't the dns over quick already

4244
02:44:53,600 --> 02:44:54,399
doomed to

4245
02:44:54,399 --> 02:44:58,319
the momentum behind doh generally

4246
02:44:58,319 --> 02:45:01,600
uh well i think i've answered it when i

4247
02:45:01,600 --> 02:45:05,120
uh compared dns of a quick versus dns

4248
02:45:05,120 --> 02:45:06,640
over http 3

4249
02:45:06,640 --> 02:45:10,399
uh and uh you see

4250
02:45:10,399 --> 02:45:13,600
things are changing rapidly and a couple

4251
02:45:13,600 --> 02:45:16,800
two years ago uh no one heard about dns

4252
02:45:16,800 --> 02:45:18,319
encryption and now

4253
02:45:18,319 --> 02:45:22,000
uh it becomes more and more popular

4254
02:45:22,000 --> 02:45:26,399
and uh i can i at least i can hope

4255
02:45:26,399 --> 02:45:29,920
uh that people will choose a

4256
02:45:29,920 --> 02:45:32,800
more elegant solution which is dns of a

4257
02:45:32,800 --> 02:45:33,840
quick

4258
02:45:33,840 --> 02:45:38,560
uh over dns over http

4259
02:45:38,560 --> 02:45:42,720
um we we have one more question from

4260
02:45:42,720 --> 02:45:46,319
andre andre is saying that

4261
02:45:46,319 --> 02:45:50,399
i'm confused about doq versus doh3

4262
02:45:50,399 --> 02:45:53,040
wasn't one of the arguments for doh that

4263
02:45:53,040 --> 02:45:55,040
you would be able to mix your regular

4264
02:45:55,040 --> 02:45:56,640
http traffic

4265
02:45:56,640 --> 02:45:59,040
with dns traffic to prevent snooping and

4266
02:45:59,040 --> 02:46:01,040
blocking

4267
02:46:01,040 --> 02:46:05,200
uh on one hand this is uh this is true

4268
02:46:05,200 --> 02:46:07,840
on the other hand dns server quick can

4269
02:46:07,840 --> 02:46:09,970
can also be

4270
02:46:09,970 --> 02:46:11,680
[Music]

4271
02:46:11,680 --> 02:46:14,880
as hidden as dns software http because

4272
02:46:14,880 --> 02:46:18,240
uh both http 3

4273
02:46:18,240 --> 02:46:23,200
and kwik use the same the same transport

4274
02:46:23,200 --> 02:46:26,800
and second uh it's not that you

4275
02:46:26,800 --> 02:46:29,920
uh it's not that you

4276
02:46:29,920 --> 02:46:33,040
uh mix it uh so as we

4277
02:46:33,040 --> 02:46:36,000
as we see right now uh there are a

4278
02:46:36,000 --> 02:46:37,600
couple of popular tn

4279
02:46:37,600 --> 02:46:40,640
uh encrypted dns uh resolvers

4280
02:46:40,640 --> 02:46:43,359
any each of them can be easily blocked i

4281
02:46:43,359 --> 02:46:44,240
do not see

4282
02:46:44,240 --> 02:46:47,680
any actual problem with blocking dns

4283
02:46:47,680 --> 02:46:51,760
or doll or dns over quick or any other

4284
02:46:51,760 --> 02:46:54,960
encrypted dns protocol

4285
02:46:54,960 --> 02:46:57,920
this is this is not something that can

4286
02:46:57,920 --> 02:46:59,760
be easily

4287
02:46:59,760 --> 02:47:03,359
uh fixed just by encryption traffic or

4288
02:47:03,359 --> 02:47:03,920
using

4289
02:47:03,920 --> 02:47:08,960
port the same port as https

4290
02:47:10,000 --> 02:47:12,160
thanks andre we have one last question

4291
02:47:12,160 --> 02:47:13,439
from puneet sooth

4292
02:47:13,439 --> 02:47:16,319
we have very little time left puneet's

4293
02:47:16,319 --> 02:47:18,240
question is why did you write your own

4294
02:47:18,240 --> 02:47:19,439
dns proxy

4295
02:47:19,439 --> 02:47:21,600
compared to using guinness dist and

4296
02:47:21,600 --> 02:47:25,520
extend it to support dns earthquake

4297
02:47:25,840 --> 02:47:30,080
because well there are multiple reasons

4298
02:47:30,080 --> 02:47:33,200
because we prefer to have things under

4299
02:47:33,200 --> 02:47:35,680
control and be able to extend it as we

4300
02:47:35,680 --> 02:47:36,399
like

4301
02:47:36,399 --> 02:47:39,200
because we use go and i'm not sure if

4302
02:47:39,200 --> 02:47:40,880
tnsd use

4303
02:47:40,880 --> 02:47:43,920
also is written in go uh

4304
02:47:43,920 --> 02:47:47,439
you know well it is not a new product

4305
02:47:47,439 --> 02:47:48,160
it's not that

4306
02:47:48,160 --> 02:47:51,520
that we we wrote it uh a month ago

4307
02:47:51,520 --> 02:47:55,120
uh it's been a couple of years

4308
02:47:55,120 --> 02:47:57,520
uh and i'm not sure that when we wrote

4309
02:47:57,520 --> 02:47:58,720
dns proxy

4310
02:47:58,720 --> 02:48:02,479
uh there were a lot of dns encryption

4311
02:48:02,479 --> 02:48:07,039
tools like that available

4312
02:48:07,680 --> 02:48:09,760
all right that was our last question

4313
02:48:09,760 --> 02:48:11,680
thank you andre

4314
02:48:11,680 --> 02:48:15,040
and now we will take a 15-minute

4315
02:48:15,040 --> 02:48:17,520
coffee break and we'll all be back by

4316
02:48:17,520 --> 02:48:18,479
2005

4317
02:48:18,479 --> 02:48:22,279
utc followed by the final round of

4318
02:48:22,279 --> 02:48:23,439
presentations

4319
02:48:23,439 --> 02:48:31,840
thank you

4320
02:48:33,360 --> 02:49:50,030
[Music]

4321
02:49:53,020 --> 02:50:13,469
[Music]

4322
02:50:20,840 --> 02:50:23,800
so

4323
02:50:23,800 --> 02:51:01,359
[Music]

4324
02:51:01,359 --> 02:51:04,720
hello welcome back from the coffee break

4325
02:51:04,720 --> 02:51:08,080
uh now it's i think we are starting 1205

4326
02:51:08,080 --> 02:51:09,120
utc

4327
02:51:09,120 --> 02:51:11,359
uh we'll see the final some some of the

4328
02:51:11,359 --> 02:51:13,200
final rounds of presentations for the

4329
02:51:13,200 --> 02:51:14,240
day

4330
02:51:14,240 --> 02:51:17,920
um and i would like to now welcome

4331
02:51:17,920 --> 02:51:19,680
moritz mueller

4332
02:51:19,680 --> 02:51:22,640
and jins to talk about the impact of

4333
02:51:22,640 --> 02:51:24,479
post quantum cryptography

4334
02:51:24,479 --> 02:51:28,800
on dnsa go ahead jingle

4335
02:51:28,800 --> 02:51:33,840
right um thank you um

4336
02:51:33,920 --> 02:51:35,680
welcome to the presentation on the

4337
02:51:35,680 --> 02:51:37,600
impact of post-quantum cryptography on

4338
02:51:37,600 --> 02:51:38,560
dns sec

4339
02:51:38,560 --> 02:51:40,560
um this has been joint research together

4340
02:51:40,560 --> 02:51:42,640
with folks from university of twente

4341
02:51:42,640 --> 02:51:45,920
latino and ananda labs and the goal of

4342
02:51:45,920 --> 02:51:47,200
this presentation is

4343
02:51:47,200 --> 02:51:51,200
basically to show you about

4344
02:51:51,200 --> 02:51:52,960
which kind of challenges we might have

4345
02:51:52,960 --> 02:51:55,920
to face when we have to move to quantum

4346
02:51:55,920 --> 02:51:58,240
safe albums in the future

4347
02:51:58,240 --> 02:52:00,640
so when the time when when quantum

4348
02:52:00,640 --> 02:52:02,399
computers are there and that might break

4349
02:52:02,399 --> 02:52:05,920
dns uh next slide

4350
02:52:06,800 --> 02:52:09,840
so um you've probably heard about

4351
02:52:09,840 --> 02:52:12,479
this thread of quantum computers and the

4352
02:52:12,479 --> 02:52:13,279
threat that they

4353
02:52:13,279 --> 02:52:16,960
possibly are able to break

4354
02:52:16,960 --> 02:52:19,040
most of the public key cryptography that

4355
02:52:19,040 --> 02:52:20,240
we're using

4356
02:52:20,240 --> 02:52:22,240
today on the internet including the

4357
02:52:22,240 --> 02:52:23,680
algorithms that we are currently

4358
02:52:23,680 --> 02:52:27,120
have standardized for dnsec

4359
02:52:27,359 --> 02:52:30,000
luckily at this point in time um there

4360
02:52:30,000 --> 02:52:30,960
are currently

4361
02:52:30,960 --> 02:52:34,560
a bunch of algorithms that are being

4362
02:52:34,560 --> 02:52:37,120
assessed by among others by the nist

4363
02:52:37,120 --> 02:52:39,439
civilization body

4364
02:52:39,439 --> 02:52:42,319
and these quantum safe algorithms could

4365
02:52:42,319 --> 02:52:44,560
be applied to the nsac as well

4366
02:52:44,560 --> 02:52:46,000
however many of these quantum state

4367
02:52:46,000 --> 02:52:47,359
algorithms have quite different

4368
02:52:47,359 --> 02:52:49,120
attributes than the algorithms that we

4369
02:52:49,120 --> 02:52:51,200
use today and therefore there might be a

4370
02:52:51,200 --> 02:52:53,760
bit of a challenge to apply them to dns

4371
02:52:53,760 --> 02:52:55,680
and the goal was of this research was

4372
02:52:55,680 --> 02:52:56,880
okay can we

4373
02:52:56,880 --> 02:52:58,560
are there quantum safe algorithms that

4374
02:52:58,560 --> 02:53:00,560
can be applied to dna second

4375
02:53:00,560 --> 02:53:02,800
if not what we have what would we have

4376
02:53:02,800 --> 02:53:04,399
to change in order to make them

4377
02:53:04,399 --> 02:53:07,680
that happen but first to discuss that

4378
02:53:07,680 --> 02:53:10,800
uh yinz will briefly introduce you to

4379
02:53:10,800 --> 02:53:11,439
some of the

4380
02:53:11,439 --> 02:53:13,760
the principles uh behind these quantum

4381
02:53:13,760 --> 02:53:16,479
shape algorithms

4382
02:53:16,720 --> 02:53:20,640
yes thank you moritz um

4383
02:53:20,880 --> 02:53:23,600
we're used to to rsa electric elliptic

4384
02:53:23,600 --> 02:53:25,520
curves and discrete logarithms to

4385
02:53:25,520 --> 02:53:28,560
to build our public key cryptography

4386
02:53:28,560 --> 02:53:31,120
but as moore's already mentioned uh yeah

4387
02:53:31,120 --> 02:53:32,960
we'll have to replace them with

4388
02:53:32,960 --> 02:53:36,720
and to get a a bit of an id

4389
02:53:36,720 --> 02:53:38,560
what we're replacing them with gonna

4390
02:53:38,560 --> 02:53:40,399
give a small introduction

4391
02:53:40,399 --> 02:53:42,800
nothing technical uh over here it's too

4392
02:53:42,800 --> 02:53:45,040
late for any technical details

4393
02:53:45,040 --> 02:53:48,399
so let's go on let's see a quantum

4394
02:53:48,399 --> 02:53:50,319
computer

4395
02:53:50,319 --> 02:53:52,800
threatens current cryptography in two

4396
02:53:52,800 --> 02:53:53,520
ways

4397
02:53:53,520 --> 02:53:55,439
the first way is by an efficient search

4398
02:53:55,439 --> 02:53:57,439
algorithm which is for example

4399
02:53:57,439 --> 02:54:00,479
interesting for symmetric ciphers

4400
02:54:00,479 --> 02:54:04,080
yes a fairly straightforward way to

4401
02:54:04,080 --> 02:54:06,240
to deal with this just double the key

4402
02:54:06,240 --> 02:54:07,760
sizes

4403
02:54:07,760 --> 02:54:12,000
however a more severe uh step is needed

4404
02:54:12,000 --> 02:54:14,880
to counter shore's algorithm this gives

4405
02:54:14,880 --> 02:54:15,200
them

4406
02:54:15,200 --> 02:54:18,399
exponential speed up in the in

4407
02:54:18,399 --> 02:54:21,439
finding solutions to or breaking rsa and

4408
02:54:21,439 --> 02:54:23,279
discrete logarithms and also elliptic

4409
02:54:23,279 --> 02:54:24,319
curves

4410
02:54:24,319 --> 02:54:27,359
um so we need something new

4411
02:54:27,359 --> 02:54:31,200
we need another form of um cryptography

4412
02:54:31,200 --> 02:54:34,319
post-quantum cryptography when do we

4413
02:54:34,319 --> 02:54:34,960
need it

4414
02:54:34,960 --> 02:54:38,240
well perhaps in the 2030s a couple of

4415
02:54:38,240 --> 02:54:39,760
weeks ago i heard a talk someone

4416
02:54:39,760 --> 02:54:42,000
estimated 2035

4417
02:54:42,000 --> 02:54:45,120
give or take a year and could be earlier

4418
02:54:45,120 --> 02:54:46,319
it could be later

4419
02:54:46,319 --> 02:54:48,399
that's one of the big unknowns and also

4420
02:54:48,399 --> 02:54:50,479
one of the

4421
02:54:50,479 --> 02:54:54,160
threats to all kinds

4422
02:54:54,160 --> 02:54:58,880
of current cryptography okay

4423
02:54:59,040 --> 02:55:00,560
what are we looking for we're looking

4424
02:55:00,560 --> 02:55:03,120
for algorithms with the same structure

4425
02:55:03,120 --> 02:55:04,479
as

4426
02:55:04,479 --> 02:55:06,160
the current public key cryptography we

4427
02:55:06,160 --> 02:55:07,760
use we need a public key

4428
02:55:07,760 --> 02:55:10,479
a secret key we need signatures we need

4429
02:55:10,479 --> 02:55:11,760
key encapsulation

4430
02:55:11,760 --> 02:55:14,640
mechanisms with the additional

4431
02:55:14,640 --> 02:55:16,479
requirement that no classical

4432
02:55:16,479 --> 02:55:18,880
computer or quantum computer could break

4433
02:55:18,880 --> 02:55:20,560
it quickly

4434
02:55:20,560 --> 02:55:22,640
from a perspective of dns sac it's the

4435
02:55:22,640 --> 02:55:24,160
signature schemes that we're most

4436
02:55:24,160 --> 02:55:25,120
interested in

4437
02:55:25,120 --> 02:55:30,399
and those we will focus on in this talk

4438
02:55:30,399 --> 02:55:33,680
as i already mentioned um nist of as

4439
02:55:33,680 --> 02:55:34,479
morris

4440
02:55:34,479 --> 02:55:35,520
mentioned nist started the

4441
02:55:35,520 --> 02:55:38,479
standardization process to find uh

4442
02:55:38,479 --> 02:55:40,800
what the best post-quantum algorithms to

4443
02:55:40,800 --> 02:55:42,840
replace them

4444
02:55:42,840 --> 02:55:45,279
however there is not a perfect candidate

4445
02:55:45,279 --> 02:55:46,479
yet

4446
02:55:46,479 --> 02:55:48,880
compared to say elliptic curves uh

4447
02:55:48,880 --> 02:55:49,920
there'll always be

4448
02:55:49,920 --> 02:55:53,040
a a drawback

4449
02:55:53,040 --> 02:55:54,880
either it's much slower the keys are

4450
02:55:54,880 --> 02:55:57,279
much larger the signatures

4451
02:55:57,279 --> 02:56:00,880
get large so

4452
02:56:01,920 --> 02:56:03,439
ideally one would wait for better

4453
02:56:03,439 --> 02:56:05,359
algorithms to appear

4454
02:56:05,359 --> 02:56:07,680
however the time scale doesn't allow us

4455
02:56:07,680 --> 02:56:08,399
this

4456
02:56:08,399 --> 02:56:12,000
luxury we have to find solutions for our

4457
02:56:12,000 --> 02:56:15,279
cryptographic needs nist started this

4458
02:56:15,279 --> 02:56:17,840
process in 2016 last july they started

4459
02:56:17,840 --> 02:56:19,600
the third round

4460
02:56:19,600 --> 02:56:21,680
which could be called the final round

4461
02:56:21,680 --> 02:56:22,800
there's still

4462
02:56:22,800 --> 02:56:26,720
six signature schemes in competition

4463
02:56:26,720 --> 02:56:29,359
and three as finalists and three as

4464
02:56:29,359 --> 02:56:31,439
alternative candidates

4465
02:56:31,439 --> 02:56:33,920
and it's likely that one or more of them

4466
02:56:33,920 --> 02:56:34,560
will be

4467
02:56:34,560 --> 02:56:39,120
standardized um

4468
02:56:39,120 --> 02:56:41,760
there are a couple of mathematical

4469
02:56:41,760 --> 02:56:43,680
problems underlying these finalists and

4470
02:56:43,680 --> 02:56:44,479
i'll

4471
02:56:44,479 --> 02:56:47,520
discuss them really briefly just to

4472
02:56:47,520 --> 02:56:50,560
get a fake id the first is multivariate

4473
02:56:50,560 --> 02:56:51,760
cryptography

4474
02:56:51,760 --> 02:56:54,479
and here the mathematical problem one

4475
02:56:54,479 --> 02:56:55,840
has to solve is to

4476
02:56:55,840 --> 02:56:58,479
solve a system of m polynomial equations

4477
02:56:58,479 --> 02:57:00,160
in n variables

4478
02:57:00,160 --> 02:57:01,439
and there are two cases here that are

4479
02:57:01,439 --> 02:57:03,760
relevant the mathematics isn't really

4480
02:57:03,760 --> 02:57:04,880
but these two cases

4481
02:57:04,880 --> 02:57:07,040
are on first they are the key

4482
02:57:07,040 --> 02:57:09,040
encapsulation mechanisms

4483
02:57:09,040 --> 02:57:12,880
and these are hard to construct and

4484
02:57:12,880 --> 02:57:14,720
these are also to a certain extent what

4485
02:57:14,720 --> 02:57:17,120
gift gave multivariate cryptography

4486
02:57:17,120 --> 02:57:20,080
a bad name it's unreliable on the other

4487
02:57:20,080 --> 02:57:22,560
hand there are signature schemes

4488
02:57:22,560 --> 02:57:25,200
which vary in their their well instance

4489
02:57:25,200 --> 02:57:26,319
of the problem

4490
02:57:26,319 --> 02:57:28,640
and those are much easier to construct

4491
02:57:28,640 --> 02:57:30,640
so signatures based on multivariate

4492
02:57:30,640 --> 02:57:32,160
cryptography

4493
02:57:32,160 --> 02:57:34,560
are a good option and this also can be

4494
02:57:34,560 --> 02:57:37,040
seen in the submissions to the

4495
02:57:37,040 --> 02:57:39,840
standardization process there are hardly

4496
02:57:39,840 --> 02:57:40,640
any uh

4497
02:57:40,640 --> 02:57:43,040
key encapsulation mechanisms based on

4498
02:57:43,040 --> 02:57:44,960
multivariate cryptography

4499
02:57:44,960 --> 02:57:47,200
and in round two there were none anymore

4500
02:57:47,200 --> 02:57:49,760
there are signature schemes two of the

4501
02:57:49,760 --> 02:57:51,120
one of the finalists and one of the

4502
02:57:51,120 --> 02:57:52,560
alternative candidates are actually

4503
02:57:52,560 --> 02:57:54,080
multivariate

4504
02:57:54,080 --> 02:57:57,840
signature schemes the second is uh most

4505
02:57:57,840 --> 02:58:00,240
frames it's lessons-based cryptography

4506
02:58:00,240 --> 02:58:02,880
and it offers uh well everything and

4507
02:58:02,880 --> 02:58:04,399
much more

4508
02:58:04,399 --> 02:58:07,359
compared to oh yeah compared to what

4509
02:58:07,359 --> 02:58:08,000
we're known

4510
02:58:08,000 --> 02:58:10,640
however all the sizes get much bigger so

4511
02:58:10,640 --> 02:58:12,080
signatures will get bigger

4512
02:58:12,080 --> 02:58:16,080
keys will get bigger um

4513
02:58:16,080 --> 02:58:17,920
i will have to find a way to to

4514
02:58:17,920 --> 02:58:20,000
accommodate that

4515
02:58:20,000 --> 02:58:23,200
the underlying problem is that you get

4516
02:58:23,200 --> 02:58:24,240
an ugly lattice

4517
02:58:24,240 --> 02:58:26,319
say these two red factors and you have

4518
02:58:26,319 --> 02:58:28,560
to find an integer combination

4519
02:58:28,560 --> 02:58:31,040
that yields you either the blue factor

4520
02:58:31,040 --> 02:58:32,319
which would be that the

4521
02:58:32,319 --> 02:58:35,040
shortest factor problem or a factor

4522
02:58:35,040 --> 02:58:36,640
closest to the green dot

4523
02:58:36,640 --> 02:58:38,640
which would be the closest factor

4524
02:58:38,640 --> 02:58:41,039
problem

4525
02:58:41,120 --> 02:58:43,920
the last one is hash based cryptography

4526
02:58:43,920 --> 02:58:45,439
which is quite remarkable in that it

4527
02:58:45,439 --> 02:58:46,319
doesn't really

4528
02:58:46,319 --> 02:58:48,640
require a mathematical problem but only

4529
02:58:48,640 --> 02:58:50,000
a secure hash function

4530
02:58:50,000 --> 02:58:53,040
well those we can build um

4531
02:58:53,040 --> 02:58:54,640
its signatures you can only build

4532
02:58:54,640 --> 02:58:56,479
signatures from them and they're quite

4533
02:58:56,479 --> 02:58:58,880
typical they have very small keys

4534
02:58:58,880 --> 02:59:01,040
but very large signatures which make

4535
02:59:01,040 --> 02:59:02,960
them somewhat unattractive

4536
02:59:02,960 --> 02:59:06,640
for dns set um

4537
02:59:06,640 --> 02:59:09,279
yeah well to to prove my point i have

4538
02:59:09,279 --> 02:59:11,359
made a very small table with some

4539
02:59:11,359 --> 02:59:15,920
uh some of the algorithms submit to

4540
02:59:15,920 --> 02:59:18,319
this competition in round two and the

4541
02:59:18,319 --> 02:59:19,760
only thing i would like you to see is

4542
02:59:19,760 --> 02:59:21,760
how different these numbers are

4543
02:59:21,760 --> 02:59:24,479
there's right for a huge variety of

4544
02:59:24,479 --> 02:59:26,720
large private keys a very small private

4545
02:59:26,720 --> 02:59:27,680
keys

4546
02:59:27,680 --> 02:59:31,120
of well relatively compact to even

4547
02:59:31,120 --> 02:59:33,600
small signatures but also extremely

4548
02:59:33,600 --> 02:59:35,200
large signatures

4549
02:59:35,200 --> 02:59:36,960
for reference persons they're the

4550
02:59:36,960 --> 02:59:38,880
elliptic curve signatures that are

4551
02:59:38,880 --> 02:59:42,319
well a current standard

4552
02:59:42,319 --> 02:59:45,680
and these cycles on the right are cycle

4553
02:59:45,680 --> 02:59:47,040
counts i

4554
02:59:47,040 --> 02:59:50,160
picked from the technical documents

4555
02:59:50,160 --> 02:59:53,279
however these should be taken with a

4556
02:59:53,279 --> 02:59:56,319
grain of salt

4557
02:59:56,319 --> 02:59:58,800
back to my lips i'll stop sharing and

4558
02:59:58,800 --> 03:00:00,240
give you control of the

4559
03:00:00,240 --> 03:00:02,960
presentation

4560
03:00:03,600 --> 03:00:11,840
thank you let's hope this works as well

4561
03:00:15,840 --> 03:00:18,479
now you should be able to see my full

4562
03:00:18,479 --> 03:00:18,960
screen

4563
03:00:18,960 --> 03:00:21,519
is that correct

4564
03:00:23,120 --> 03:00:26,240
yeah great thank you um

4565
03:00:26,240 --> 03:00:28,640
yeah so now that we hopefully have a

4566
03:00:28,640 --> 03:00:29,439
rough idea

4567
03:00:29,439 --> 03:00:31,279
of how these quantum shape algorithms

4568
03:00:31,279 --> 03:00:32,560
look like and

4569
03:00:32,560 --> 03:00:34,399
what the attributes are we can start

4570
03:00:34,399 --> 03:00:36,399
thinking about can we apply them to

4571
03:00:36,399 --> 03:00:39,760
dns sec as well and therefore we

4572
03:00:39,760 --> 03:00:41,600
first have to understand a bit what kind

4573
03:00:41,600 --> 03:00:43,680
of limitations do we have in dns and

4574
03:00:43,680 --> 03:00:44,399
dnsec

4575
03:00:44,399 --> 03:00:47,439
and here we think we have

4576
03:00:47,439 --> 03:00:50,160
especially three limitations the first

4577
03:00:50,160 --> 03:00:50,880
one

4578
03:00:50,880 --> 03:00:54,000
are key and signature size

4579
03:00:54,000 --> 03:00:57,040
as we've heard today already

4580
03:00:57,040 --> 03:01:00,560
messages larger than 1230 bytes or maybe

4581
03:01:00,560 --> 03:01:01,920
a bit bigger

4582
03:01:01,920 --> 03:01:05,040
often cause fragmentation so we probably

4583
03:01:05,040 --> 03:01:06,640
do not want to have signatures

4584
03:01:06,640 --> 03:01:09,439
which are larger than that also we know

4585
03:01:09,439 --> 03:01:10,000
that

4586
03:01:10,000 --> 03:01:13,120
dns second use in general is often of

4587
03:01:13,120 --> 03:01:14,880
sometimes misused for

4588
03:01:14,880 --> 03:01:17,520
distributed nano service attacks because

4589
03:01:17,520 --> 03:01:19,680
of the application factor and

4590
03:01:19,680 --> 03:01:21,200
if we would have keys or signatures

4591
03:01:21,200 --> 03:01:23,120
which are very big then this

4592
03:01:23,120 --> 03:01:26,640
amplification factor makes the sec again

4593
03:01:26,640 --> 03:01:27,520
very interesting

4594
03:01:27,520 --> 03:01:30,960
for these kind of attacks then we have

4595
03:01:30,960 --> 03:01:34,160
validation performance um

4596
03:01:34,160 --> 03:01:36,080
we've also heard today that resolvers

4597
03:01:36,080 --> 03:01:37,520
can

4598
03:01:37,520 --> 03:01:40,080
resolve thousands of domain names per

4599
03:01:40,080 --> 03:01:40,800
second and

4600
03:01:40,800 --> 03:01:43,439
potentially if dnsec is becoming more

4601
03:01:43,439 --> 03:01:45,680
attractive at some point

4602
03:01:45,680 --> 03:01:48,479
then they might also have to validate

4603
03:01:48,479 --> 03:01:50,160
thousands of signatures per second and

4604
03:01:50,160 --> 03:01:51,920
i think some resolvers already have to

4605
03:01:51,920 --> 03:01:53,920
do that

4606
03:01:53,920 --> 03:01:57,200
and at last when we want to

4607
03:01:57,200 --> 03:02:00,399
sign records then in the worst case we

4608
03:02:00,399 --> 03:02:02,080
might even sign them on the fly

4609
03:02:02,080 --> 03:02:04,399
so then we also need a very good signing

4610
03:02:04,399 --> 03:02:06,000
performance

4611
03:02:06,000 --> 03:02:08,000
based on these three limitations we

4612
03:02:08,000 --> 03:02:09,600
derived three very

4613
03:02:09,600 --> 03:02:14,160
basic requirements which are

4614
03:02:14,160 --> 03:02:15,760
probably depend a bit on on your use

4615
03:02:15,760 --> 03:02:17,760
case a bit but if we think they

4616
03:02:17,760 --> 03:02:21,040
they are a good starting point to

4617
03:02:21,040 --> 03:02:22,800
pre-select potential interesting

4618
03:02:22,800 --> 03:02:23,760
algorithms

4619
03:02:23,760 --> 03:02:25,840
the first one is that signatures should

4620
03:02:25,840 --> 03:02:27,680
be not bigger than 1

4621
03:02:27,680 --> 03:02:30,640
230 bytes and i will explain a bit later

4622
03:02:30,640 --> 03:02:31,760
why we think that

4623
03:02:31,760 --> 03:02:35,120
keys might be able to might be

4624
03:02:35,120 --> 03:02:37,840
it might be possible to have bigger keys

4625
03:02:37,840 --> 03:02:39,200
validation performance should be at

4626
03:02:39,200 --> 03:02:40,880
least 1000 seconds per second

4627
03:02:40,880 --> 03:02:42,960
again just a rough number and signing

4628
03:02:42,960 --> 03:02:45,279
performance more than 100 signatures per

4629
03:02:45,279 --> 03:02:47,040
second

4630
03:02:47,040 --> 03:02:50,080
so based on these requirements or

4631
03:02:50,080 --> 03:02:52,000
especially the first requirement we did

4632
03:02:52,000 --> 03:02:54,479
a pre-selection we only had a look at

4633
03:02:54,479 --> 03:02:56,399
algorithms in the last round of the nest

4634
03:02:56,399 --> 03:02:58,479
competition that had signatures

4635
03:02:58,479 --> 03:03:01,840
smaller than this size

4636
03:03:02,000 --> 03:03:04,479
and the first algorithm that we had a

4637
03:03:04,479 --> 03:03:05,200
look at

4638
03:03:05,200 --> 03:03:08,399
was falcon 512 falcon 512 is a lesser

4639
03:03:08,399 --> 03:03:09,840
space algorithm

4640
03:03:09,840 --> 03:03:12,399
and on first side it has quite

4641
03:03:12,399 --> 03:03:13,920
attractive attributes

4642
03:03:13,920 --> 03:03:16,720
the performance is quite good this is

4643
03:03:16,720 --> 03:03:17,760
based on a

4644
03:03:17,760 --> 03:03:19,600
measurement on a test machine of ours

4645
03:03:19,600 --> 03:03:22,080
and just should give you a rough idea

4646
03:03:22,080 --> 03:03:24,319
as well about the performance and the

4647
03:03:24,319 --> 03:03:25,520
keys and signatures

4648
03:03:25,520 --> 03:03:28,800
are not very big but

4649
03:03:28,800 --> 03:03:32,560
already if we would have to put two keys

4650
03:03:32,560 --> 03:03:34,960
in one message or maybe multiple

4651
03:03:34,960 --> 03:03:36,640
signatures as we have for example with

4652
03:03:36,640 --> 03:03:38,399
nsec records

4653
03:03:38,399 --> 03:03:41,279
or respon responses to non-existing

4654
03:03:41,279 --> 03:03:42,319
domain names then

4655
03:03:42,319 --> 03:03:44,960
we already have multiple signatures and

4656
03:03:44,960 --> 03:03:46,800
this increases the response

4657
03:03:46,800 --> 03:03:50,399
quite a bit in contrast

4658
03:03:50,399 --> 03:03:53,439
we have two multivariate schemes

4659
03:03:53,439 --> 03:03:55,920
here as well which have very very small

4660
03:03:55,920 --> 03:03:56,960
signatures

4661
03:03:56,960 --> 03:03:59,520
they're on par with the algorithms that

4662
03:03:59,520 --> 03:04:00,800
we use today

4663
03:04:00,800 --> 03:04:03,600
their performance seems to be also quite

4664
03:04:03,600 --> 03:04:06,000
quite okay

4665
03:04:06,000 --> 03:04:09,200
but their public key is very very big um

4666
03:04:09,200 --> 03:04:13,040
it's even that big that we can't put in

4667
03:04:13,040 --> 03:04:17,040
it into regular dns messages anymore

4668
03:04:17,040 --> 03:04:20,080
so how can we still apply

4669
03:04:20,080 --> 03:04:22,319
could we still apply these algorithms in

4670
03:04:22,319 --> 03:04:24,880
dns and dns sec

4671
03:04:24,880 --> 03:04:28,960
so for the increase in signatures

4672
03:04:28,960 --> 03:04:31,840
we could hope for an increase in tcp

4673
03:04:31,840 --> 03:04:32,720
support

4674
03:04:32,720 --> 03:04:36,240
and then as soon as someone would create

4675
03:04:36,240 --> 03:04:39,279
more than two signatures

4676
03:04:39,279 --> 03:04:41,040
the result would probably fall back to

4677
03:04:41,040 --> 03:04:44,319
tcp yeah with all the disadvantages that

4678
03:04:44,319 --> 03:04:47,359
come along with that as well

4679
03:04:47,680 --> 03:04:50,399
for the keys especially the keys which

4680
03:04:50,399 --> 03:04:51,760
are too big to put into

4681
03:04:51,760 --> 03:04:54,560
the nest message we could have a look at

4682
03:04:54,560 --> 03:04:56,720
for example out of band key distribution

4683
03:04:56,720 --> 03:05:00,319
so that we refer the resolver

4684
03:05:00,319 --> 03:05:02,800
developing resolver to another source to

4685
03:05:02,800 --> 03:05:05,040
fetch the key or you could for example

4686
03:05:05,040 --> 03:05:06,720
also split the key into

4687
03:05:06,720 --> 03:05:09,680
multiple dns records dns key records

4688
03:05:09,680 --> 03:05:10,160
which

4689
03:05:10,160 --> 03:05:12,640
then has the problem that the resolver

4690
03:05:12,640 --> 03:05:13,600
would have to

4691
03:05:13,600 --> 03:05:16,080
send multiple dns messages which

4692
03:05:16,080 --> 03:05:17,120
increases

4693
03:05:17,120 --> 03:05:20,399
the chance of failure as well

4694
03:05:20,640 --> 03:05:23,439
if we would run into problems that

4695
03:05:23,439 --> 03:05:25,520
validation performance is too low

4696
03:05:25,520 --> 03:05:28,800
then we could reduce the

4697
03:05:28,800 --> 03:05:31,279
time that we have to validate for

4698
03:05:31,279 --> 03:05:32,560
example by increasing

4699
03:05:32,560 --> 03:05:35,439
the ttl for records but this also might

4700
03:05:35,439 --> 03:05:37,040
not be

4701
03:05:37,040 --> 03:05:40,640
feasible in some scenarios

4702
03:05:40,640 --> 03:05:44,240
and in general we might have to look

4703
03:05:44,240 --> 03:05:45,120
into

4704
03:05:45,120 --> 03:05:46,960
so independent algorithms so for example

4705
03:05:46,960 --> 03:05:48,880
some zones like the root might have

4706
03:05:48,880 --> 03:05:50,800
a higher security requirements at some

4707
03:05:50,800 --> 03:05:53,040
point and they might have

4708
03:05:53,040 --> 03:05:55,439
they would they might need to use items

4709
03:05:55,439 --> 03:05:56,960
with a higher security level

4710
03:05:56,960 --> 03:06:01,439
than the ones that we've discussed today

4711
03:06:01,439 --> 03:06:05,439
so based on these observations we

4712
03:06:05,439 --> 03:06:08,000
can probably see that applying

4713
03:06:08,000 --> 03:06:09,600
quantitative arguments to dnsec

4714
03:06:09,600 --> 03:06:14,479
will not be that easy

4715
03:06:14,479 --> 03:06:17,120
and we probably have to do more research

4716
03:06:17,120 --> 03:06:17,920
and to

4717
03:06:17,920 --> 03:06:19,520
do some more testing to actually

4718
03:06:19,520 --> 03:06:21,200
implement some of these uh

4719
03:06:21,200 --> 03:06:22,720
these proposals like out of key

4720
03:06:22,720 --> 03:06:24,560
distribution to actually understand

4721
03:06:24,560 --> 03:06:26,960
what this means in a realistic

4722
03:06:26,960 --> 03:06:28,880
environment

4723
03:06:28,880 --> 03:06:31,200
also what we've seen in the in the last

4724
03:06:31,200 --> 03:06:32,640
months already is that

4725
03:06:32,640 --> 03:06:35,200
um things still changed quite a bit in

4726
03:06:35,200 --> 03:06:36,720
the quantum safe algorithm world

4727
03:06:36,720 --> 03:06:39,200
so we've seen that there were some

4728
03:06:39,200 --> 03:06:40,960
articles published about

4729
03:06:40,960 --> 03:06:44,160
potential security issues with some of

4730
03:06:44,160 --> 03:06:45,680
the algorithms

4731
03:06:45,680 --> 03:06:47,760
so we can see that there's still a lot

4732
03:06:47,760 --> 03:06:49,760
of going on here as well

4733
03:06:49,760 --> 03:06:51,279
and this might also force us then to

4734
03:06:51,279 --> 03:06:53,359
look at other approaches as well

4735
03:06:53,359 --> 03:06:56,479
so for example hash based algorithms or

4736
03:06:56,479 --> 03:06:58,800
combined with with miracle trees might

4737
03:06:58,800 --> 03:07:00,000
be an option and

4738
03:07:00,000 --> 03:07:02,479
some of you might have read an article

4739
03:07:02,479 --> 03:07:04,160
called by folks from very sign

4740
03:07:04,160 --> 03:07:06,479
where they discussed that as well um i

4741
03:07:06,479 --> 03:07:07,279
can

4742
03:07:07,279 --> 03:07:09,840
later put the link of the article in the

4743
03:07:09,840 --> 03:07:12,640
mattermost chat

4744
03:07:12,800 --> 03:07:14,880
in general um we also have to keep in

4745
03:07:14,880 --> 03:07:16,479
mind that rolling to another

4746
03:07:16,479 --> 03:07:18,880
algorithm will take time and this is why

4747
03:07:18,880 --> 03:07:19,520
we believe

4748
03:07:19,520 --> 03:07:22,000
it makes sense to have a look into

4749
03:07:22,000 --> 03:07:24,240
transitioning to quantum safe algorithms

4750
03:07:24,240 --> 03:07:25,840
now already because we've seen in the

4751
03:07:25,840 --> 03:07:27,439
past from our measurements from

4752
03:07:27,439 --> 03:07:29,600
measurements from within the community

4753
03:07:29,600 --> 03:07:31,920
that even now there are still some

4754
03:07:31,920 --> 03:07:33,040
algorithms around

4755
03:07:33,040 --> 03:07:36,080
which are not secure anymore and

4756
03:07:36,080 --> 03:07:37,920
transitioning to more secure algorithms

4757
03:07:37,920 --> 03:07:38,240
just

4758
03:07:38,240 --> 03:07:41,199
takes a lot of time

4759
03:07:41,279 --> 03:07:45,279
we've summarized our our findings in a

4760
03:07:45,279 --> 03:07:45,760
paper

4761
03:07:45,760 --> 03:07:47,359
which is not shown on my site here

4762
03:07:47,359 --> 03:07:49,359
correctly but i hope you can see it

4763
03:07:49,359 --> 03:07:52,880
and with that i would um

4764
03:07:52,880 --> 03:07:54,240
like to ask you if you have some

4765
03:07:54,240 --> 03:07:56,560
questions

4766
03:07:56,800 --> 03:08:00,000
um thank you moritz thank you james for

4767
03:08:00,000 --> 03:08:03,120
that the presentation um

4768
03:08:03,120 --> 03:08:06,560
we have uh one question before that i

4769
03:08:06,560 --> 03:08:08,160
would like to remind the audience to

4770
03:08:08,160 --> 03:08:09,359
make sure that you fill

4771
03:08:09,359 --> 03:08:11,520
the poll uh that will pop up on your

4772
03:08:11,520 --> 03:08:12,399
screen

4773
03:08:12,399 --> 03:08:15,120
um going to the question we have a

4774
03:08:15,120 --> 03:08:16,160
question from

4775
03:08:16,160 --> 03:08:20,080
joey salazar to clarify this

4776
03:08:20,080 --> 03:08:22,240
encapsulation of keys

4777
03:08:22,240 --> 03:08:24,319
is it meant to be an end-to-end

4778
03:08:24,319 --> 03:08:25,920
encryption of the keys

4779
03:08:25,920 --> 03:08:29,680
if yes is it meant to also be used

4780
03:08:29,680 --> 03:08:33,040
point-to-point fiber connections at the

4781
03:08:33,040 --> 03:08:34,080
itf

4782
03:08:34,080 --> 03:08:37,359
qr working group they said currently

4783
03:08:37,359 --> 03:08:40,560
2p2 fiber connections are planned to be

4784
03:08:40,560 --> 03:08:41,439
used for

4785
03:08:41,439 --> 03:08:44,479
qkd quantum key distribution

4786
03:08:44,479 --> 03:08:47,200
but this is not encrypted by design even

4787
03:08:47,200 --> 03:08:49,120
though there is awareness of potential

4788
03:08:49,120 --> 03:08:49,600
attack

4789
03:08:49,600 --> 03:08:53,120
at that connection level uh

4790
03:08:53,120 --> 03:08:57,040
um albus good

4791
03:08:57,040 --> 03:09:00,240
i think i can take it um

4792
03:09:00,240 --> 03:09:02,880
the nest post quantum cryptography

4793
03:09:02,880 --> 03:09:04,399
computation

4794
03:09:04,399 --> 03:09:06,800
does not really deal with a quantum key

4795
03:09:06,800 --> 03:09:07,920
distribution

4796
03:09:07,920 --> 03:09:10,640
that uses quantum principles to

4797
03:09:10,640 --> 03:09:12,720
distribute keys we're not doing uh

4798
03:09:12,720 --> 03:09:16,000
well here none of this is done the key

4799
03:09:16,000 --> 03:09:18,960
encapsulation mechanisms are referred to

4800
03:09:18,960 --> 03:09:20,160
are the

4801
03:09:20,160 --> 03:09:23,120
well the replacement of key negotiation

4802
03:09:23,120 --> 03:09:23,920
protocols

4803
03:09:23,920 --> 03:09:26,640
uh that that exists for example uh with

4804
03:09:26,640 --> 03:09:28,160
discrete logarithms

4805
03:09:28,160 --> 03:09:31,920
is a well-known example um

4806
03:09:31,920 --> 03:09:34,880
for our talk they only well i've only

4807
03:09:34,880 --> 03:09:36,960
mentioned them for a completeness

4808
03:09:36,960 --> 03:09:38,960
but for dns sec we're only concerned

4809
03:09:38,960 --> 03:09:42,560
with uh signature schemes

4810
03:09:43,040 --> 03:09:46,080
uh thanks james uh we have one more

4811
03:09:46,080 --> 03:09:47,439
question on the q a

4812
03:09:47,439 --> 03:09:49,200
and then i will move to the questions by

4813
03:09:49,200 --> 03:09:50,800
the panelists uh

4814
03:09:50,800 --> 03:09:53,359
we have question by peter uh when

4815
03:09:53,359 --> 03:09:55,040
quantum computers exist

4816
03:09:55,040 --> 03:09:57,680
would dnsec be a primary target to break

4817
03:09:57,680 --> 03:09:58,479
the crypto

4818
03:09:58,479 --> 03:10:00,880
or would there be other more low hanging

4819
03:10:00,880 --> 03:10:03,120
fruit

4820
03:10:03,120 --> 03:10:06,479
i i can i guess since

4821
03:10:06,479 --> 03:10:09,840
indiana sec we we do signing i think

4822
03:10:09,840 --> 03:10:12,560
dinosaur will not be the first target

4823
03:10:12,560 --> 03:10:14,800
here

4824
03:10:14,800 --> 03:10:16,880
we have signatures which are not that

4825
03:10:16,880 --> 03:10:18,319
long lived

4826
03:10:18,319 --> 03:10:20,000
which makes it not very attractive at

4827
03:10:20,000 --> 03:10:22,080
the target and

4828
03:10:22,080 --> 03:10:25,040
also in term in terms of probably

4829
03:10:25,040 --> 03:10:26,239
interesting secrets

4830
03:10:26,239 --> 03:10:29,359
there are other messages that are being

4831
03:10:29,359 --> 03:10:30,239
transmitted

4832
03:10:30,239 --> 03:10:32,239
via tls for example which are more

4833
03:10:32,239 --> 03:10:33,920
interesting but folks are already also

4834
03:10:33,920 --> 03:10:34,720
looking into

4835
03:10:34,720 --> 03:10:37,439
how they can make tls quantum safe as

4836
03:10:37,439 --> 03:10:39,200
well

4837
03:10:39,200 --> 03:10:42,319
well and to add to that if i may um

4838
03:10:42,319 --> 03:10:45,840
there is dns interesting for another

4839
03:10:45,840 --> 03:10:47,680
reason not perhaps because it's the main

4840
03:10:47,680 --> 03:10:49,439
target for an attack

4841
03:10:49,439 --> 03:10:52,640
but because it's it's well

4842
03:10:52,640 --> 03:10:55,279
quite a performing system and as we've

4843
03:10:55,279 --> 03:10:56,399
seen there's

4844
03:10:56,399 --> 03:10:59,520
these new algorithms have serious

4845
03:10:59,520 --> 03:11:01,680
drawbacks and whether they can deliver

4846
03:11:01,680 --> 03:11:04,160
on the performance requirements that a

4847
03:11:04,160 --> 03:11:07,680
dns sec knows is is really an open

4848
03:11:07,680 --> 03:11:09,520
question

4849
03:11:09,520 --> 03:11:12,000
that's the reason to look at dnsec or

4850
03:11:12,000 --> 03:11:13,279
now already

4851
03:11:13,279 --> 03:11:16,160
now there's still room to uh well

4852
03:11:16,160 --> 03:11:17,439
respond to this and say

4853
03:11:17,439 --> 03:11:19,439
please consider dns sec and the

4854
03:11:19,439 --> 03:11:20,720
requirements it uh

4855
03:11:20,720 --> 03:11:25,040
poses on a new signature scheme and

4856
03:11:25,040 --> 03:11:26,720
once they've standardized that may not

4857
03:11:26,720 --> 03:11:28,720
be possible anymore and

4858
03:11:28,720 --> 03:11:34,080
other solutions for dns need to be found

4859
03:11:34,960 --> 03:11:38,000
um thanks jeans uh we have one question

4860
03:11:38,000 --> 03:11:40,720
uh paul hoffman please uh you can unmute

4861
03:11:40,720 --> 03:11:42,399
yourself to ask your questions

4862
03:11:42,399 --> 03:11:43,840
uh thank you this is paul hoffman

4863
03:11:43,840 --> 03:11:45,439
actually i also see benjamin schwartz

4864
03:11:45,439 --> 03:11:47,680
behind me in line with the hands raised

4865
03:11:47,680 --> 03:11:50,479
um so thank you for the presentation yes

4866
03:11:50,479 --> 03:11:51,359
it's good for

4867
03:11:51,359 --> 03:11:54,720
you know this group to uh you know have

4868
03:11:54,720 --> 03:11:57,760
fair warning um about

4869
03:11:57,760 --> 03:12:00,239
two weeks uh just you know moritz as you

4870
03:12:00,239 --> 03:12:01,840
said oh things are changing quickly

4871
03:12:01,840 --> 03:12:02,560
these days

4872
03:12:02,560 --> 03:12:04,399
um about two weeks ago on the nist

4873
03:12:04,399 --> 03:12:06,239
mailing list nist itself

4874
03:12:06,239 --> 03:12:09,680
proposed that it might slow down

4875
03:12:09,680 --> 03:12:12,800
the choice of signature algorithm

4876
03:12:12,800 --> 03:12:15,600
that is they said oh would you all like

4877
03:12:15,600 --> 03:12:16,000
if

4878
03:12:16,000 --> 03:12:19,200
we sort of extended out that one

4879
03:12:19,200 --> 03:12:21,600
by a f you know by an indeterminate

4880
03:12:21,600 --> 03:12:22,800
period of time

4881
03:12:22,800 --> 03:12:24,479
to work on this more and i think that

4882
03:12:24,479 --> 03:12:26,080
that is actually a response

4883
03:12:26,080 --> 03:12:29,120
to um dns sec and other folks who are

4884
03:12:29,120 --> 03:12:29,920
saying

4885
03:12:29,920 --> 03:12:33,600
uh the properties here are pretty bad um

4886
03:12:33,600 --> 03:12:37,439
there is also as as jin's just said um

4887
03:12:37,439 --> 03:12:40,319
we're not the the main target for this

4888
03:12:40,319 --> 03:12:41,120
it's really the

4889
03:12:41,120 --> 03:12:44,399
the key encryption uh folks uh

4890
03:12:44,399 --> 03:12:47,359
uh those folks are the ones who if you

4891
03:12:47,359 --> 03:12:49,040
have a secret now that you want to keep

4892
03:12:49,040 --> 03:12:50,960
secret for 30 years

4893
03:12:50,960 --> 03:12:52,720
um you don't want someone decrypting it

4894
03:12:52,720 --> 03:12:54,239
25 years from now

4895
03:12:54,239 --> 03:12:56,720
um our signatures don't last that long

4896
03:12:56,720 --> 03:12:57,279
um

4897
03:12:57,279 --> 03:13:00,479
and so in the case that quantum

4898
03:13:00,479 --> 03:13:01,200
computers

4899
03:13:01,200 --> 03:13:03,520
that can attack our out our current

4900
03:13:03,520 --> 03:13:05,439
algorithms the classical algorithms

4901
03:13:05,439 --> 03:13:08,479
uh ever come along um and they may not i

4902
03:13:08,479 --> 03:13:10,080
mean many of the people in the field are

4903
03:13:10,080 --> 03:13:12,080
now predicting that maybe they won't

4904
03:13:12,080 --> 03:13:14,800
um that we have the best chance of like

4905
03:13:14,800 --> 03:13:15,359
oh okay

4906
03:13:15,359 --> 03:13:16,880
we'll change our signatures with five

4907
03:13:16,880 --> 03:13:18,560
years warning you can't

4908
03:13:18,560 --> 03:13:22,160
un you know previously un encrypt

4909
03:13:22,160 --> 03:13:23,840
other stuff before so i i think we're

4910
03:13:23,840 --> 03:13:25,439
much better off than the folks in the

4911
03:13:25,439 --> 03:13:26,840
tls world

4912
03:13:26,840 --> 03:13:29,840
thanks

4913
03:13:30,800 --> 03:13:33,600
yes thank you and i completely agree in

4914
03:13:33,600 --> 03:13:35,279
the case of dnsec it's more

4915
03:13:35,279 --> 03:13:37,760
in a question well can all the

4916
03:13:37,760 --> 03:13:38,880
infrastructure be

4917
03:13:38,880 --> 03:13:42,000
put in place uh within time then

4918
03:13:42,000 --> 03:13:44,080
are there secrets that are that will get

4919
03:13:44,080 --> 03:13:45,200
that old

4920
03:13:45,200 --> 03:13:48,640
so yes thank you thanks

4921
03:13:48,640 --> 03:13:51,760
uh ben uh you can unmute yourself to ask

4922
03:13:51,760 --> 03:13:53,200
the question

4923
03:13:53,200 --> 03:13:56,239
hi i uh

4924
03:13:56,239 --> 03:13:59,359
i noticed in your presentation that you

4925
03:13:59,359 --> 03:14:03,120
you seem to in effect be

4926
03:14:03,120 --> 03:14:06,560
assuming or at least hoping that

4927
03:14:06,560 --> 03:14:10,160
the most efficient most suitable

4928
03:14:10,160 --> 03:14:12,880
algorithms in the competition turn out

4929
03:14:12,880 --> 03:14:14,160
to be

4930
03:14:14,160 --> 03:14:16,880
essentially solid and eventually

4931
03:14:16,880 --> 03:14:18,479
approved

4932
03:14:18,479 --> 03:14:21,279
and i wonder what your forecast looks

4933
03:14:21,279 --> 03:14:23,760
like under a little bit less optimistic

4934
03:14:23,760 --> 03:14:26,880
assumptions where we we don't assume

4935
03:14:26,880 --> 03:14:27,279
that

4936
03:14:27,279 --> 03:14:30,080
the most suitable algorithms are the

4937
03:14:30,080 --> 03:14:31,439
ones that turn out

4938
03:14:31,439 --> 03:14:35,600
to work is it time to

4939
03:14:35,600 --> 03:14:38,560
is it time to break the 64 kilobyte

4940
03:14:38,560 --> 03:14:39,600
limit

4941
03:14:39,600 --> 03:14:43,600
in dns and

4942
03:14:43,600 --> 03:14:46,960
do we need to rethink how we handle

4943
03:14:46,960 --> 03:14:50,000
multiple signatures in the case where or

4944
03:14:50,000 --> 03:14:51,439
multiple key types

4945
03:14:51,439 --> 03:14:53,120
in the case where we have algorithms

4946
03:14:53,120 --> 03:14:54,960
that we need to use but that we don't

4947
03:14:54,960 --> 03:14:58,239
have real confidence in

4948
03:14:58,960 --> 03:15:02,720
i think these are two very good points

4949
03:15:02,720 --> 03:15:06,560
we now have looked in the algorithms

4950
03:15:06,560 --> 03:15:08,000
that are most suitable for

4951
03:15:08,000 --> 03:15:10,560
what we think uh should be in the insect

4952
03:15:10,560 --> 03:15:11,279
but

4953
03:15:11,279 --> 03:15:15,200
um i think we as i pointed out now here

4954
03:15:15,200 --> 03:15:16,319
in the last slide we

4955
03:15:16,319 --> 03:15:18,479
definitely need to look around whether

4956
03:15:18,479 --> 03:15:19,359
we can

4957
03:15:19,359 --> 03:15:22,160
also handle algorithm types that are

4958
03:15:22,160 --> 03:15:24,560
maybe not that suitable for dnsec

4959
03:15:24,560 --> 03:15:28,160
um so um but i think this is why we

4960
03:15:28,160 --> 03:15:30,319
we try to start this discussion and now

4961
03:15:30,319 --> 03:15:31,680
already to be

4962
03:15:31,680 --> 03:15:34,479
prepared if maybe then not those

4963
03:15:34,479 --> 03:15:35,200
suitable

4964
03:15:35,200 --> 03:15:36,960
algorithm will be selected at the end of

4965
03:15:36,960 --> 03:15:39,279
the process

4966
03:15:39,279 --> 03:15:41,279
yeah when it comes to the dns message

4967
03:15:41,279 --> 03:15:43,600
size

4968
03:15:43,760 --> 03:15:47,040
i think this might be an option

4969
03:15:47,040 --> 03:15:50,239
i'm not sure how how easy this is to

4970
03:15:50,239 --> 03:15:52,720
to work around this this limit of 64

4971
03:15:52,720 --> 03:15:53,920
kilobytes

4972
03:15:53,920 --> 03:15:57,040
and so um i guess this requires

4973
03:15:57,040 --> 03:15:58,640
still a lot of research but i think this

4974
03:15:58,640 --> 03:16:00,319
might be also a good good

4975
03:16:00,319 --> 03:16:02,960
direction to have a look at the same

4976
03:16:02,960 --> 03:16:03,600
goes for

4977
03:16:03,600 --> 03:16:05,439
the algorithm selection in case we have

4978
03:16:05,439 --> 03:16:07,359
an algorithm that we don't trust

4979
03:16:07,359 --> 03:16:10,080
but i i don't yeah i can't say anything

4980
03:16:10,080 --> 03:16:10,960
about

4981
03:16:10,960 --> 03:16:14,720
um the chances of these these changes to

4982
03:16:14,720 --> 03:16:15,359
dns

4983
03:16:15,359 --> 03:16:18,160
to be successful

4984
03:16:21,120 --> 03:16:24,479
thanks moritz we have one question from

4985
03:16:24,479 --> 03:16:27,920
the attendees priya mohan

4986
03:16:27,920 --> 03:16:29,520
please unmute yourself to ask the

4987
03:16:29,520 --> 03:16:31,840
question

4988
03:16:36,000 --> 03:16:45,840
priya mohan

4989
03:16:48,479 --> 03:16:50,080
please unmute yourself to ask the

4990
03:16:50,080 --> 03:16:52,399
question oh sorry so i muted my

4991
03:16:52,399 --> 03:16:58,479
unmuted by mistake sorry

4992
03:16:58,479 --> 03:17:02,080
uh did you have a question uh no i don't

4993
03:17:02,080 --> 03:17:04,319
all right uh we have one more question

4994
03:17:04,319 --> 03:17:05,680
in the q a

4995
03:17:05,680 --> 03:17:08,960
uh the question is from alison mankin

4996
03:17:08,960 --> 03:17:12,239
uh the question is one point that a 2013

4997
03:17:12,239 --> 03:17:13,120
catacrypt

4998
03:17:13,120 --> 03:17:16,239
workshop on post quantum made was to do

4999
03:17:16,239 --> 03:17:18,880
code signing and then be able to replace

5000
03:17:18,880 --> 03:17:20,080
code bases

5001
03:17:20,080 --> 03:17:23,359
uh such as dns safely once there will be

5002
03:17:23,359 --> 03:17:24,399
a contra

5003
03:17:24,399 --> 03:17:26,960
once there's been a quantum break what

5004
03:17:26,960 --> 03:17:29,438
do you think

5005
03:17:31,200 --> 03:17:34,399
hence you want to take over um

5006
03:17:34,399 --> 03:17:37,040
yes i'm not entirely sure if i

5007
03:17:37,040 --> 03:17:37,920
understand

5008
03:17:37,920 --> 03:17:41,010
the question to be entirely honest

5009
03:17:41,010 --> 03:17:44,129
[Music]

5010
03:17:46,640 --> 03:17:48,960
yes uh alice man can please unmute

5011
03:17:48,960 --> 03:17:50,479
yourself to speak

5012
03:17:50,479 --> 03:17:53,920
yeah hi can you hear me um my point was

5013
03:17:53,920 --> 03:17:54,800
that

5014
03:17:54,800 --> 03:17:58,239
um it's that when presented with

5015
03:17:58,239 --> 03:18:00,720
several of these options the caterpillar

5016
03:18:00,720 --> 03:18:01,680
experts

5017
03:18:01,680 --> 03:18:05,040
who are people who are you know i

5018
03:18:05,040 --> 03:18:09,120
with uh diffy and hellman all those

5019
03:18:09,120 --> 03:18:10,319
people they said

5020
03:18:10,319 --> 03:18:13,200
that they were advising people to to

5021
03:18:13,200 --> 03:18:13,760
focus

5022
03:18:13,760 --> 03:18:16,880
on code signing with a quantum safe

5023
03:18:16,880 --> 03:18:18,239
protocol

5024
03:18:18,239 --> 03:18:21,359
and then be in position to

5025
03:18:21,359 --> 03:18:24,399
uh to make changes later because we've

5026
03:18:24,399 --> 03:18:24,800
at least

5027
03:18:24,800 --> 03:18:26,800
signed our code so we have more time to

5028
03:18:26,800 --> 03:18:28,399
work on these problems

5029
03:18:28,399 --> 03:18:29,920
and i thought i wondered if you thought

5030
03:18:29,920 --> 03:18:32,800
about that point

5031
03:18:33,120 --> 03:18:37,040
well give

5032
03:18:37,439 --> 03:18:41,040
right yes um i do not know if

5033
03:18:41,040 --> 03:18:42,880
you're referring to code based

5034
03:18:42,880 --> 03:18:44,239
cryptography

5035
03:18:44,239 --> 03:18:46,880
um which is indeed very secure and and

5036
03:18:46,880 --> 03:18:47,279
and

5037
03:18:47,279 --> 03:18:49,760
very competent but it's mainly suitable

5038
03:18:49,760 --> 03:18:50,319
for

5039
03:18:50,319 --> 03:18:52,720
the key encapsulation since signatures

5040
03:18:52,720 --> 03:18:53,520
on that size

5041
03:18:53,520 --> 03:18:56,880
uh become massive if i'm not mistaken

5042
03:18:56,880 --> 03:18:59,680
or the public keys are massive but i'm

5043
03:18:59,680 --> 03:19:00,880
really talking about

5044
03:19:00,880 --> 03:19:04,160
simply having uh

5045
03:19:04,160 --> 03:19:06,560
having signatures on all of our code

5046
03:19:06,560 --> 03:19:07,680
base

5047
03:19:07,680 --> 03:19:10,960
having quantum resistant signatures on

5048
03:19:10,960 --> 03:19:14,880
the code base of of um

5049
03:19:14,880 --> 03:19:18,800
of all our stacks for example so that

5050
03:19:18,800 --> 03:19:22,319
we do that first as a way of providing

5051
03:19:22,319 --> 03:19:25,840
uh a overlap an overall insurance

5052
03:19:25,840 --> 03:19:26,560
because

5053
03:19:26,560 --> 03:19:28,720
the code can't be tampered with the the

5054
03:19:28,720 --> 03:19:30,160
binaries and so on can't be

5055
03:19:30,160 --> 03:19:32,399
if we have that in place it gives us

5056
03:19:32,399 --> 03:19:33,439
more

5057
03:19:33,439 --> 03:19:35,200
um assurance that we can replace

5058
03:19:35,200 --> 03:19:38,160
algorithms later

5059
03:19:38,399 --> 03:19:41,840
may i propose that um you sent me a

5060
03:19:41,840 --> 03:19:42,399
question

5061
03:19:42,399 --> 03:19:44,960
yeah sure i'll use this conference so

5062
03:19:44,960 --> 03:19:46,319
that we do not uh

5063
03:19:46,319 --> 03:19:47,920
well pause the conference too long and

5064
03:19:47,920 --> 03:19:49,439
i'll be happy to think about it and

5065
03:19:49,439 --> 03:19:50,640
answer it

5066
03:19:50,640 --> 03:19:52,160
okay yeah i'm not representing the

5067
03:19:52,160 --> 03:19:53,840
people very well hellman was really big

5068
03:19:53,840 --> 03:19:54,720
on this but i don't

5069
03:19:54,720 --> 03:19:56,319
think i'm representing it properly thank

5070
03:19:56,319 --> 03:19:57,920
you okay

5071
03:19:57,920 --> 03:20:01,200
thank you um all right thanks uh

5072
03:20:01,200 --> 03:20:03,600
jinx and moritz for that nice

5073
03:20:03,600 --> 03:20:05,040
presentation and answering all the

5074
03:20:05,040 --> 03:20:06,000
questions

5075
03:20:06,000 --> 03:20:08,239
uh if anybody still has to fill the poll

5076
03:20:08,239 --> 03:20:10,160
please go ahead and do it now

5077
03:20:10,160 --> 03:20:13,279
um next i would like to

5078
03:20:13,279 --> 03:20:16,880
uh invite you on

5079
03:20:16,880 --> 03:20:19,840
massar for a lightning talk about hashed

5080
03:20:19,840 --> 03:20:20,800
rpc

5081
03:20:20,800 --> 03:20:23,358
please go ahead

5082
03:20:25,439 --> 03:20:28,880
good morning evening and afternoon for

5083
03:20:28,880 --> 03:20:32,080
depending on here do you hear me

5084
03:20:32,080 --> 03:20:34,000
yes i can and see your slides too

5085
03:20:34,000 --> 03:20:35,760
perfect thank you

5086
03:20:35,760 --> 03:20:38,399
uh i'm miriam assad i'm giving this

5087
03:20:38,399 --> 03:20:39,279
presentation

5088
03:20:39,279 --> 03:20:42,160
as an independent because i've worked on

5089
03:20:42,160 --> 03:20:45,359
this for a variety of customers of mine

5090
03:20:45,359 --> 03:20:48,000
which will come up in the slides what

5091
03:20:48,000 --> 03:20:49,040
this is about

5092
03:20:49,040 --> 03:20:52,720
so this is about harsh rpz

5093
03:20:52,720 --> 03:20:56,160
so since the beginning of this year

5094
03:20:56,160 --> 03:20:58,239
there's a new law in switzerland for

5095
03:20:58,239 --> 03:20:59,439
blocking

5096
03:20:59,439 --> 03:21:02,880
csem related domains so

5097
03:21:02,880 --> 03:21:06,080
child sexual explicit content sorry to

5098
03:21:06,080 --> 03:21:07,439
interrupt

5099
03:21:07,439 --> 03:21:10,000
we are seeing the presenter view not the

5100
03:21:10,000 --> 03:21:11,439
slides

5101
03:21:11,439 --> 03:21:15,279
and i need to give the other one

5102
03:21:15,279 --> 03:21:25,840
yeah sorry we're done no worries

5103
03:21:28,560 --> 03:21:31,199
there we go

5104
03:21:32,319 --> 03:21:34,479
so there's new law in switzerland uh

5105
03:21:34,479 --> 03:21:35,840
since the beginning of this year we were

5106
03:21:35,840 --> 03:21:37,439
notified about this a couple of years

5107
03:21:37,439 --> 03:21:38,560
back already

5108
03:21:38,560 --> 03:21:41,359
um that that would be coming for

5109
03:21:41,359 --> 03:21:44,479
blocking csi material

5110
03:21:44,479 --> 03:21:47,120
the blocking is the main based so they

5111
03:21:47,120 --> 03:21:48,960
just give a list of mains and we fetch

5112
03:21:48,960 --> 03:21:49,439
it from

5113
03:21:49,439 --> 03:21:53,279
sftp server which is

5114
03:21:53,279 --> 03:21:55,439
a couple of rar files which are password

5115
03:21:55,439 --> 03:21:57,680
protected

5116
03:21:57,680 --> 03:21:59,520
so the standard solution will be to use

5117
03:21:59,520 --> 03:22:01,439
rpg

5118
03:22:01,439 --> 03:22:04,399
which everybody i guess here in dns arc

5119
03:22:04,399 --> 03:22:05,040
will know

5120
03:22:05,040 --> 03:22:08,399
otherwise find the references to

5121
03:22:08,399 --> 03:22:10,920
at the bottom of this link to dds

5122
03:22:10,920 --> 03:22:13,920
rpg.info

5123
03:22:14,160 --> 03:22:16,399
and it's very simple you just can say

5124
03:22:16,399 --> 03:22:18,720
like www.example.net

5125
03:22:18,720 --> 03:22:20,880
you can see name to a dot and that will

5126
03:22:20,880 --> 03:22:22,239
amex domain it

5127
03:22:22,239 --> 03:22:25,760
and thus block the zone this is also

5128
03:22:25,760 --> 03:22:28,399
being used in switzerland by another law

5129
03:22:28,399 --> 03:22:30,880
but that is less sensitive and that is

5130
03:22:30,880 --> 03:22:32,960
for what we call the casino law

5131
03:22:32,960 --> 03:22:34,720
and that is basically for blocking

5132
03:22:34,720 --> 03:22:36,720
casinos so that people

5133
03:22:36,720 --> 03:22:40,000
cannot go to an unlicensed casino

5134
03:22:40,000 --> 03:22:41,920
basically

5135
03:22:41,920 --> 03:22:43,840
of course doing this kind of blocking

5136
03:22:43,840 --> 03:22:45,120
will give you

5137
03:22:45,120 --> 03:22:47,840
negative effects because for instance if

5138
03:22:47,840 --> 03:22:50,319
you go to casino example.com but it has

5139
03:22:50,319 --> 03:22:53,760
a the wall example where you get

5140
03:22:53,760 --> 03:22:55,120
redirected

5141
03:22:55,120 --> 03:22:58,399
to a wall on http which

5142
03:22:58,399 --> 03:23:01,760
indicates why that page is being blocked

5143
03:23:01,760 --> 03:23:03,920
it typically mentions the standard text

5144
03:23:03,920 --> 03:23:05,359
that the federal government has the

5145
03:23:05,359 --> 03:23:06,960
swiss federal government have

5146
03:23:06,960 --> 03:23:09,840
defined but yet with https of course

5147
03:23:09,840 --> 03:23:11,840
which most casinos will be using

5148
03:23:11,840 --> 03:23:14,479
you will just get an ssl error so it's

5149
03:23:14,479 --> 03:23:16,640
not so very useful to block it this way

5150
03:23:16,640 --> 03:23:19,680
in in my opinion but uh

5151
03:23:19,680 --> 03:23:23,359
the problem is if we get this list

5152
03:23:23,359 --> 03:23:27,120
from the federal police with all these

5153
03:23:27,120 --> 03:23:29,760
really illegal domains with rather

5154
03:23:29,760 --> 03:23:32,399
explicit content

5155
03:23:32,399 --> 03:23:35,359
it will not be very good because if you

5156
03:23:35,359 --> 03:23:36,800
are going to debug

5157
03:23:36,800 --> 03:23:40,399
it might just happen that you will

5158
03:23:40,399 --> 03:23:43,920
yeah get to this list of domains

5159
03:23:43,920 --> 03:23:46,000
and also it will appear in backups and

5160
03:23:46,000 --> 03:23:48,000
everything else

5161
03:23:48,000 --> 03:23:51,120
and thus what we want to avoid

5162
03:23:51,120 --> 03:23:54,479
is that if a engineer that is

5163
03:23:54,479 --> 03:23:56,640
maybe just trying to debug why a certain

5164
03:23:56,640 --> 03:23:58,399
dns server one of the backends with

5165
03:23:58,399 --> 03:24:00,000
recursives

5166
03:24:00,000 --> 03:24:03,600
that has this list is giving issues

5167
03:24:03,600 --> 03:24:05,279
they might just stumble accidentally

5168
03:24:05,279 --> 03:24:07,840
upon well explicit links

5169
03:24:07,840 --> 03:24:11,040
and under the law under the text of the

5170
03:24:11,040 --> 03:24:12,399
law

5171
03:24:12,399 --> 03:24:14,319
it is illegal to even have access to the

5172
03:24:14,319 --> 03:24:16,319
link and they could just say like well

5173
03:24:16,319 --> 03:24:17,840
look they have this link so they

5174
03:24:17,840 --> 03:24:20,000
probably access the material

5175
03:24:20,000 --> 03:24:22,720
and with this kind of content that might

5176
03:24:22,720 --> 03:24:23,040
just

5177
03:24:23,040 --> 03:24:26,080
destroy your career your environment

5178
03:24:26,080 --> 03:24:27,600
your neighbors they might not

5179
03:24:27,600 --> 03:24:29,439
think about it when in the news that

5180
03:24:29,439 --> 03:24:32,319
says well he had access to these links

5181
03:24:32,319 --> 03:24:34,479
and it will be very difficult to explain

5182
03:24:34,479 --> 03:24:36,080
away

5183
03:24:36,080 --> 03:24:38,720
so to avoid that um i came up with a

5184
03:24:38,720 --> 03:24:39,520
scheme

5185
03:24:39,520 --> 03:24:42,479
called hearthstone rpg although i heard

5186
03:24:42,479 --> 03:24:43,359
already from

5187
03:24:43,359 --> 03:24:45,439
people who saw the slides the princess

5188
03:24:45,439 --> 03:24:47,760
power dns was doing a similar trick as

5189
03:24:47,760 --> 03:24:51,200
stated at the last line using md5

5190
03:24:51,200 --> 03:24:53,520
so it's not completely a new idea

5191
03:24:53,520 --> 03:24:55,600
there's some new stuff in here but

5192
03:24:55,600 --> 03:24:58,479
not completely original so what we do is

5193
03:24:58,479 --> 03:25:00,000
we

5194
03:25:00,000 --> 03:25:02,800
split the label and the best thing to

5195
03:25:02,800 --> 03:25:03,120
see

5196
03:25:03,120 --> 03:25:05,600
that is the the example given at the

5197
03:25:05,600 --> 03:25:06,399
bottom

5198
03:25:06,399 --> 03:25:08,960
we split the label or the the whole

5199
03:25:08,960 --> 03:25:11,600
left-hand side we split it into labels

5200
03:25:11,600 --> 03:25:13,920
and we recursively basically starting at

5201
03:25:13,920 --> 03:25:15,680
the right side we first hash

5202
03:25:15,680 --> 03:25:18,560
the compart or the tld then we hash the

5203
03:25:18,560 --> 03:25:18,960
main

5204
03:25:18,960 --> 03:25:21,200
and then we do the sub-domain and we

5205
03:25:21,200 --> 03:25:22,000
keep on going

5206
03:25:22,000 --> 03:25:25,120
until the whole left-hand side has been

5207
03:25:25,120 --> 03:25:28,640
hashed in this method and

5208
03:25:28,640 --> 03:25:31,760
that way the zone file that is being

5209
03:25:31,760 --> 03:25:33,520
transferred to recursive to the rpg when

5210
03:25:33,520 --> 03:25:35,439
you do the af safar

5211
03:25:35,439 --> 03:25:37,760
will actually not be in clear text so if

5212
03:25:37,760 --> 03:25:39,279
you're debugging you will see

5213
03:25:39,279 --> 03:25:43,279
a list of well kobley book and

5214
03:25:43,279 --> 03:25:46,160
example will come later that will yeah

5215
03:25:46,160 --> 03:25:46,560
not

5216
03:25:46,560 --> 03:25:49,840
have anything actually explicit in there

5217
03:25:49,840 --> 03:25:52,000
so you cannot accident well you can link

5218
03:25:52,000 --> 03:25:53,920
click on the link but the link will

5219
03:25:53,920 --> 03:25:55,279
actually not go anywhere

5220
03:25:55,279 --> 03:25:58,239
while if it wasn't explicit content you

5221
03:25:58,239 --> 03:25:59,920
would go somewhere that well would be

5222
03:25:59,920 --> 03:26:02,000
illegal

5223
03:26:02,000 --> 03:26:05,120
so as we had a very nice crypto talk

5224
03:26:05,120 --> 03:26:05,840
just now

5225
03:26:05,840 --> 03:26:08,239
um i also believe in the mantra don't

5226
03:26:08,239 --> 03:26:09,600
roll your own crypto i'm not a

5227
03:26:09,600 --> 03:26:10,640
cryptographer

5228
03:26:10,640 --> 03:26:13,040
there are people who are and they have

5229
03:26:13,040 --> 03:26:14,080
done this research

5230
03:26:14,080 --> 03:26:16,160
into creating a new hashing standard

5231
03:26:16,160 --> 03:26:18,319
called blake three

5232
03:26:18,319 --> 03:26:21,200
so according to performance numbers that

5233
03:26:21,200 --> 03:26:22,479
i ran myself also

5234
03:26:22,479 --> 03:26:24,399
and the slide the performance number

5235
03:26:24,399 --> 03:26:25,520
here on the slide

5236
03:26:25,520 --> 03:26:28,560
blake 3 is very performant it was

5237
03:26:28,560 --> 03:26:30,319
definitely faster than md5

5238
03:26:30,319 --> 03:26:32,399
and it's supposed to be a lot more

5239
03:26:32,399 --> 03:26:33,680
secure

5240
03:26:33,680 --> 03:26:35,439
and the most important property that i

5241
03:26:35,439 --> 03:26:37,120
use for this is

5242
03:26:37,120 --> 03:26:39,600
that it can also be keyed so you can add

5243
03:26:39,600 --> 03:26:40,960
a key to it

5244
03:26:40,960 --> 03:26:44,319
and that will give you a better

5245
03:26:44,319 --> 03:26:46,640
yeah more protection against very both

5246
03:26:46,640 --> 03:26:49,358
style attacks

5247
03:26:49,600 --> 03:26:52,720
so what we do is we take one key that we

5248
03:26:52,720 --> 03:26:54,800
put inband that is encoded inside the

5249
03:26:54,800 --> 03:26:57,840
zone so you get an underscore rpchee

5250
03:26:57,840 --> 03:27:01,200
dot rpg.example.net

5251
03:27:01,200 --> 03:27:04,880
and the other one you configure in

5252
03:27:04,880 --> 03:27:06,800
the configuration for the zone in your

5253
03:27:06,800 --> 03:27:08,319
recurser that

5254
03:27:08,319 --> 03:27:10,399
has to then support of course this

5255
03:27:10,399 --> 03:27:11,359
special

5256
03:27:11,359 --> 03:27:15,840
rpg setup

5257
03:27:15,920 --> 03:27:18,960
and that will then distribute

5258
03:27:18,960 --> 03:27:22,720
um for instance these examples

5259
03:27:22,720 --> 03:27:25,520
we have so for instance wri example.net

5260
03:27:25,520 --> 03:27:26,960
you see that the output

5261
03:27:26,960 --> 03:27:30,479
is quite long because we encode

5262
03:27:30,479 --> 03:27:34,239
strings shorter than 4 bytes or 8 or 16

5263
03:27:34,239 --> 03:27:37,520
into hashes of 4 8 or 16.

5264
03:27:37,520 --> 03:27:39,600
so you can also recognize that dot com

5265
03:27:39,600 --> 03:27:41,439
in the two examples are actually encoded

5266
03:27:41,439 --> 03:27:42,399
the same

5267
03:27:42,399 --> 03:27:44,640
an example the commas encoded the same

5268
03:27:44,640 --> 03:27:46,800
are all hash the same

5269
03:27:46,800 --> 03:27:49,359
but you cannot see that example is the

5270
03:27:49,359 --> 03:27:50,720
same word in both

5271
03:27:50,720 --> 03:27:56,399
because of the recursive hash that we do

5272
03:27:56,399 --> 03:27:58,000
uh now while putting that together what

5273
03:27:58,000 --> 03:28:00,000
we did is we made a host of vm at the

5274
03:28:00,000 --> 03:28:00,880
moment

5275
03:28:00,880 --> 03:28:02,880
that actually fetches the list from

5276
03:28:02,880 --> 03:28:05,040
federal from federal police

5277
03:28:05,040 --> 03:28:06,960
and we have restricted that heavily so

5278
03:28:06,960 --> 03:28:09,040
that only three engineers actually can

5279
03:28:09,040 --> 03:28:10,479
unlock the disk

5280
03:28:10,479 --> 03:28:13,600
or boot it at all and when it's booted

5281
03:28:13,600 --> 03:28:15,680
and it has its credentials for doing

5282
03:28:15,680 --> 03:28:17,439
the job that it needs to do for fetching

5283
03:28:17,439 --> 03:28:19,359
the list and encoding the

5284
03:28:19,359 --> 03:28:22,160
encrypting the rar files you cannot

5285
03:28:22,160 --> 03:28:24,640
share into it anymore at least not

5286
03:28:24,640 --> 03:28:26,960
to that level so you cannot get access

5287
03:28:26,960 --> 03:28:27,680
to the

5288
03:28:27,680 --> 03:28:30,800
to the list that are fetched

5289
03:28:30,800 --> 03:28:32,520
um and

5290
03:28:32,520 --> 03:28:34,560
[Music]

5291
03:28:34,560 --> 03:28:37,279
yeah so one thing is to if we get this

5292
03:28:37,279 --> 03:28:39,040
mechanism standardized because that is

5293
03:28:39,040 --> 03:28:41,200
what this talks primarily about to get

5294
03:28:41,200 --> 03:28:43,520
input then we might be able to ask the

5295
03:28:43,520 --> 03:28:46,080
federal police to basically do this

5296
03:28:46,080 --> 03:28:48,160
trick for us and then we don't even ever

5297
03:28:48,160 --> 03:28:49,920
have to see the clear text file

5298
03:28:49,920 --> 03:28:53,200
which would be very good for

5299
03:28:53,200 --> 03:28:56,319
that i did like our friends just now we

5300
03:28:56,319 --> 03:28:58,479
have an implementation of a golang dns

5301
03:28:58,479 --> 03:28:59,840
server

5302
03:28:59,840 --> 03:29:01,920
because it was something that we already

5303
03:29:01,920 --> 03:29:04,080
ran for various purposes

5304
03:29:04,080 --> 03:29:05,680
and so it was of course the easiest to

5305
03:29:05,680 --> 03:29:07,120
implement uh

5306
03:29:07,120 --> 03:29:10,000
of course this will hopefully lead to

5307
03:29:10,000 --> 03:29:11,600
work where we will get standard

5308
03:29:11,600 --> 03:29:13,200
implementations in the

5309
03:29:13,200 --> 03:29:15,760
standard resolvers that exist and that

5310
03:29:15,760 --> 03:29:17,359
everybody uses and loves

5311
03:29:17,359 --> 03:29:20,560
like unbound and power dns and bind of

5312
03:29:20,560 --> 03:29:22,080
course

5313
03:29:22,080 --> 03:29:25,439
and not not to forget

5314
03:29:26,880 --> 03:29:29,760
so we see the cash miss of about 10 so

5315
03:29:29,760 --> 03:29:31,760
we have a cash hit rate of about 90

5316
03:29:31,760 --> 03:29:34,960
on those boxes and of course then the 10

5317
03:29:34,960 --> 03:29:36,239
percent has to be

5318
03:29:36,239 --> 03:29:38,319
also hashed so there is a little bit of

5319
03:29:38,319 --> 03:29:40,160
a performance impact

5320
03:29:40,160 --> 03:29:42,160
um i still have to run the dns award

5321
03:29:42,160 --> 03:29:43,439
flamethrower tool over it

5322
03:29:43,439 --> 03:29:45,279
to to do some more performance hits but

5323
03:29:45,279 --> 03:29:47,120
it has been running since

5324
03:29:47,120 --> 03:29:49,359
end of december in production and it has

5325
03:29:49,359 --> 03:29:50,640
been running fine

5326
03:29:50,640 --> 03:29:52,479
but we have heavily over provisioned our

5327
03:29:52,479 --> 03:29:54,560
boxes

5328
03:29:54,560 --> 03:29:56,239
so the future work will be integrate

5329
03:29:56,239 --> 03:29:57,680
feedback from operators and developers

5330
03:29:57,680 --> 03:29:59,040
that's why i'm giving this talk

5331
03:29:59,040 --> 03:30:01,359
to get your input and fortunately

5332
03:30:01,359 --> 03:30:02,960
because some people saw the slides they

5333
03:30:02,960 --> 03:30:04,560
already gave a lot of input

5334
03:30:04,560 --> 03:30:05,920
that's why we have a lot of backup

5335
03:30:05,920 --> 03:30:08,080
slides next um

5336
03:30:08,080 --> 03:30:10,399
and of course to work on an itf draft if

5337
03:30:10,399 --> 03:30:12,560
people find us an interesting thing

5338
03:30:12,560 --> 03:30:15,439
so that we can make it interoperable and

5339
03:30:15,439 --> 03:30:16,080
then of course

5340
03:30:16,080 --> 03:30:18,239
to make the patches for unbound penis

5341
03:30:18,239 --> 03:30:19,359
cannot and

5342
03:30:19,359 --> 03:30:21,600
for by nine more optimizations and

5343
03:30:21,600 --> 03:30:23,840
testing and then hopefully to convince

5344
03:30:23,840 --> 03:30:25,520
the federal police to

5345
03:30:25,520 --> 03:30:30,000
yeah to generate this rpg file for us

5346
03:30:30,000 --> 03:30:32,560
so yeah that is the primary goal to keep

5347
03:30:32,560 --> 03:30:33,840
every engineer safe

5348
03:30:33,840 --> 03:30:35,680
there are some side effects also if you

5349
03:30:35,680 --> 03:30:38,080
are an rpg provider you could provide

5350
03:30:38,080 --> 03:30:41,359
for instance a list or an rpc zone that

5351
03:30:41,359 --> 03:30:42,080
is

5352
03:30:42,080 --> 03:30:44,880
hashed and so somebody could not check

5353
03:30:44,880 --> 03:30:46,560
if certain links are on it

5354
03:30:46,560 --> 03:30:48,000
or steal the list because they don't

5355
03:30:48,000 --> 03:30:49,760
know what's in there so you can easily

5356
03:30:49,760 --> 03:30:51,680
hide a testing node in there

5357
03:30:51,680 --> 03:30:53,200
which is what we also do we always have

5358
03:30:53,200 --> 03:30:54,800
a test label

5359
03:30:54,800 --> 03:30:56,720
in a zone for ourselves so that we could

5360
03:30:56,720 --> 03:30:59,840
check if the process actually works

5361
03:30:59,840 --> 03:31:03,200
so i'm opening up two questions

5362
03:31:03,200 --> 03:31:05,279
uh thanks thanks iran for the

5363
03:31:05,279 --> 03:31:07,359
presentation

5364
03:31:07,359 --> 03:31:10,000
we have couple of questions in the q a

5365
03:31:10,000 --> 03:31:11,120
section

5366
03:31:11,120 --> 03:31:13,600
first question is from brian dickinson

5367
03:31:13,600 --> 03:31:14,560
for rpc

5368
03:31:14,560 --> 03:31:16,800
what about returning signed rpg

5369
03:31:16,800 --> 03:31:17,920
responses

5370
03:31:17,920 --> 03:31:19,920
and publishing the public key for that

5371
03:31:19,920 --> 03:31:21,439
rpg zone

5372
03:31:21,439 --> 03:31:23,920
this might kind of look like dlv all

5373
03:31:23,920 --> 03:31:24,800
over again

5374
03:31:24,800 --> 03:31:26,880
but at least it would allow the clients

5375
03:31:26,880 --> 03:31:29,120
to validate the blocking results

5376
03:31:29,120 --> 03:31:33,359
uh including possibly the walled garden

5377
03:31:33,359 --> 03:31:35,920
correct yes that is that is the

5378
03:31:35,920 --> 03:31:36,880
intention of that

5379
03:31:36,880 --> 03:31:39,920
part does that answer the question

5380
03:31:39,920 --> 03:31:42,319
actually

5381
03:31:43,279 --> 03:31:46,399
um and uh i think uh you're on if there

5382
03:31:46,399 --> 03:31:48,399
are any discussions they can be done in

5383
03:31:48,399 --> 03:31:50,399
like you know the matter most workshop

5384
03:31:50,399 --> 03:31:51,120
channel too

5385
03:31:51,120 --> 03:31:54,319
yes absolutely uh don't hesitate to ask

5386
03:31:54,319 --> 03:31:55,359
questions

5387
03:31:55,359 --> 03:31:58,640
either in the uh by email by mattermost

5388
03:31:58,640 --> 03:31:59,920
or

5389
03:31:59,920 --> 03:32:02,000
by the github you can also file tickets

5390
03:32:02,000 --> 03:32:03,920
in the source cards repository

5391
03:32:03,920 --> 03:32:07,200
because there is as i have here

5392
03:32:07,200 --> 03:32:11,120
we have running code of course for this

5393
03:32:11,120 --> 03:32:13,600
so there you can also file questions

5394
03:32:13,600 --> 03:32:14,560
okay uh

5395
03:32:14,560 --> 03:32:18,160
and we have a few more questions uh

5396
03:32:18,160 --> 03:32:20,880
next question is by paul vixxi how how

5397
03:32:20,880 --> 03:32:21,920
do you have

5398
03:32:21,920 --> 03:32:26,560
left hand sider uh triggers

5399
03:32:26,880 --> 03:32:29,200
ah that is a very important very good

5400
03:32:29,200 --> 03:32:30,640
question um

5401
03:32:30,640 --> 03:32:33,920
the trick is simply that you're hashing

5402
03:32:33,920 --> 03:32:37,520
the label and triggers will be

5403
03:32:37,520 --> 03:32:39,760
handled like normal rpg it's just that

5404
03:32:39,760 --> 03:32:40,560
the label

5405
03:32:40,560 --> 03:32:43,600
in the zone is different

5406
03:32:46,239 --> 03:32:49,040
thanks uh here on the next question is

5407
03:32:49,040 --> 03:32:51,279
by robert edmonds

5408
03:32:51,279 --> 03:32:53,600
wouldn't every commercial rpg feed

5409
03:32:53,600 --> 03:32:55,120
provider want to use

5410
03:32:55,120 --> 03:32:58,080
hashed rpz to keep their secret sauce

5411
03:32:58,080 --> 03:33:00,160
secret

5412
03:33:00,160 --> 03:33:02,399
they will probably want to do that yes

5413
03:33:02,399 --> 03:33:04,479
and that is of course partially

5414
03:33:04,479 --> 03:33:06,960
concerned because you cannot validate

5415
03:33:06,960 --> 03:33:08,640
this list

5416
03:33:08,640 --> 03:33:10,800
and of course if we're talking about

5417
03:33:10,800 --> 03:33:13,279
well lawful blocking where the law

5418
03:33:13,279 --> 03:33:16,479
dictates it it becomes a bit tricky if

5419
03:33:16,479 --> 03:33:18,640
you think that maybe they put a

5420
03:33:18,640 --> 03:33:20,399
political party in that list

5421
03:33:20,399 --> 03:33:23,920
and that yeah that is so you need to

5422
03:33:23,920 --> 03:33:26,080
have maybe like an oversight committee

5423
03:33:26,080 --> 03:33:27,120
especially if you are

5424
03:33:27,120 --> 03:33:30,080
talking about federal blocking or yeah

5425
03:33:30,080 --> 03:33:31,600
government blocking

5426
03:33:31,600 --> 03:33:34,640
to to overcome this

5427
03:33:35,840 --> 03:33:39,680
um all right um i think we can

5428
03:33:39,680 --> 03:33:41,439
take maybe we have a couple of more

5429
03:33:41,439 --> 03:33:43,200
minutes uh you know so

5430
03:33:43,200 --> 03:33:46,239
one more question hopefully uh joe

5431
03:33:46,239 --> 03:33:49,760
ably is asking uh i think the internet

5432
03:33:49,760 --> 03:33:51,680
watch foundation takes a similar

5433
03:33:51,680 --> 03:33:52,239
approach

5434
03:33:52,239 --> 03:33:55,439
of using hashes to help identify the

5435
03:33:55,439 --> 03:33:57,040
actual offensive content without

5436
03:33:57,040 --> 03:33:58,800
exposing people to it

5437
03:33:58,800 --> 03:34:00,880
is there an overlap between what they do

5438
03:34:00,880 --> 03:34:04,160
and what you are describing

5439
03:34:05,840 --> 03:34:08,960
um yes it might be there's also an

5440
03:34:08,960 --> 03:34:11,680
overlap with of course safe browsing

5441
03:34:11,680 --> 03:34:12,239
that

5442
03:34:12,239 --> 03:34:15,680
google provides as a service towards all

5443
03:34:15,680 --> 03:34:17,920
the browser vendors

5444
03:34:17,920 --> 03:34:20,479
and there the advantage is if you block

5445
03:34:20,479 --> 03:34:22,239
in dns as i said

5446
03:34:22,239 --> 03:34:24,880
you might want to do just an nx domain

5447
03:34:24,880 --> 03:34:25,840
which means like

5448
03:34:25,840 --> 03:34:27,760
you don't get an answer but the user

5449
03:34:27,760 --> 03:34:30,800
also doesn't know why it is well broken

5450
03:34:30,800 --> 03:34:33,040
if you do a walled garden approach you

5451
03:34:33,040 --> 03:34:34,880
will get an ssl error most likely

5452
03:34:34,880 --> 03:34:36,239
nowadays

5453
03:34:36,239 --> 03:34:39,200
and if you do the safe browsing version

5454
03:34:39,200 --> 03:34:41,600
if you do the blocking in that level

5455
03:34:41,600 --> 03:34:44,399
at least the advantage is that you yeah

5456
03:34:44,399 --> 03:34:46,800
you get a notification a big red screen

5457
03:34:46,800 --> 03:34:48,640
with an explanation like this is blocked

5458
03:34:48,640 --> 03:34:50,399
by service xyz

5459
03:34:50,399 --> 03:34:52,160
um which is a better approach in my

5460
03:34:52,160 --> 03:34:54,000
opinion um

5461
03:34:54,000 --> 03:34:55,520
but yeah in the end if we're talking

5462
03:34:55,520 --> 03:34:57,359
about blocking things

5463
03:34:57,359 --> 03:34:59,279
it could just be that the people who

5464
03:34:59,279 --> 03:35:01,680
want to access certain content

5465
03:35:01,680 --> 03:35:03,680
they can of course always circumvent uh

5466
03:35:03,680 --> 03:35:05,439
you can use the dns server from a

5467
03:35:05,439 --> 03:35:07,120
provider which is not included in the

5468
03:35:07,120 --> 03:35:07,680
law

5469
03:35:07,680 --> 03:35:09,200
for instance in switzerland internet

5470
03:35:09,200 --> 03:35:11,760
access providers only have to do it

5471
03:35:11,760 --> 03:35:14,399
but for instance google doesn't because

5472
03:35:14,399 --> 03:35:16,160
they're not a swiss internet access

5473
03:35:16,160 --> 03:35:18,640
provider

5474
03:35:19,200 --> 03:35:21,680
or you can just use a vpn or you can use

5475
03:35:21,680 --> 03:35:23,840
tor and you can circumvent these lists

5476
03:35:23,840 --> 03:35:24,960
anyway

5477
03:35:24,960 --> 03:35:28,880
so it is primarily useful for accidental

5478
03:35:28,880 --> 03:35:32,880
going to those locations i would say

5479
03:35:36,720 --> 03:35:39,840
i think we are just on time here on

5480
03:35:39,840 --> 03:35:41,840
this last questions we have couple of

5481
03:35:41,840 --> 03:35:43,040
questions more

5482
03:35:43,040 --> 03:35:45,200
uh but they can be taken up on the

5483
03:35:45,200 --> 03:35:46,560
workshop channel

5484
03:35:46,560 --> 03:35:49,520
um for now uh thank you very much for

5485
03:35:49,520 --> 03:35:50,880
that presentation

5486
03:35:50,880 --> 03:35:54,239
uh next up uh we have auresh

5487
03:35:54,239 --> 03:35:57,200
uh vicer and he's going to give a

5488
03:35:57,200 --> 03:35:59,760
lightning talk about dot nu's transition

5489
03:35:59,760 --> 03:36:06,960
from insecurity to insect onto your wish

5490
03:36:06,960 --> 03:36:09,279
okay great so my name is ulrich and i

5491
03:36:09,279 --> 03:36:10,960
work for the swedish internet foundation

5492
03:36:10,960 --> 03:36:12,720
for the dns labs

5493
03:36:12,720 --> 03:36:14,720
and i have been a developer for a

5494
03:36:14,720 --> 03:36:17,200
registry system and

5495
03:36:17,200 --> 03:36:20,080
i'm part of the centrist team for the

5496
03:36:20,080 --> 03:36:21,200
center tech workshop

5497
03:36:21,200 --> 03:36:24,399
and for the dns award program committee

5498
03:36:24,399 --> 03:36:27,760
and so the

5499
03:36:27,760 --> 03:36:29,439
swedish internet foundation took over

5500
03:36:29,439 --> 03:36:31,359
the running of dot nu

5501
03:36:31,359 --> 03:36:35,279
in 2013 and at the time we didn't want

5502
03:36:35,279 --> 03:36:37,120
to change a lot of the

5503
03:36:37,120 --> 03:36:41,040
technical stuff behind it so we just ran

5504
03:36:41,040 --> 03:36:42,080
with what we

5505
03:36:42,080 --> 03:36:44,319
how it always had been run and so we

5506
03:36:44,319 --> 03:36:46,479
continued with and thanks me

5507
03:36:46,479 --> 03:36:50,000
and um yes so then we always had the

5508
03:36:50,000 --> 03:36:50,960
idea of uh

5509
03:36:50,960 --> 03:36:54,479
going to nseg but uh you know how you do

5510
03:36:54,479 --> 03:36:55,120
that and

5511
03:36:55,120 --> 03:36:57,920
um well when you read the rfc it it

5512
03:36:57,920 --> 03:37:00,080
seems quite easy you remove all the mf3

5513
03:37:00,080 --> 03:37:01,840
records you put in anzac records and

5514
03:37:01,840 --> 03:37:03,200
you're done

5515
03:37:03,200 --> 03:37:06,239
and when i started to talk to people at

5516
03:37:06,239 --> 03:37:07,680
conferences and everybody said yeah

5517
03:37:07,680 --> 03:37:09,439
that's how you should do it

5518
03:37:09,439 --> 03:37:13,279
but nobody had actually done it so um

5519
03:37:13,279 --> 03:37:15,600
and yeah what could possibly go wrong

5520
03:37:15,600 --> 03:37:17,120
you know and everybody says it should

5521
03:37:17,120 --> 03:37:18,000
work

5522
03:37:18,000 --> 03:37:20,720
and yeah what could possibly go wrong is

5523
03:37:20,720 --> 03:37:21,279
a really

5524
03:37:21,279 --> 03:37:23,600
bad answer if you have to talk for bts

5525
03:37:23,600 --> 03:37:25,840
is our regulator in sweden and we have

5526
03:37:25,840 --> 03:37:27,760
the nis directive

5527
03:37:27,760 --> 03:37:31,439
i have my ceo and cso to answer too and

5528
03:37:31,439 --> 03:37:33,279
i need to give them a look a little bit

5529
03:37:33,279 --> 03:37:34,880
more so than you know

5530
03:37:34,880 --> 03:37:38,080
the rfc says it should work so we had to

5531
03:37:38,080 --> 03:37:39,120
do some testing

5532
03:37:39,120 --> 03:37:43,600
and the first problem with testing nsec

5533
03:37:43,600 --> 03:37:44,560
is

5534
03:37:44,560 --> 03:37:47,040
that nsaid really says there is no

5535
03:37:47,040 --> 03:37:49,200
answer so

5536
03:37:49,200 --> 03:37:51,359
but you want the answer that there is

5537
03:37:51,359 --> 03:37:53,120
the answer no just no answer

5538
03:37:53,120 --> 03:37:56,319
and and that of course you realize that

5539
03:37:56,319 --> 03:37:58,479
yeah there's some really thinking to go

5540
03:37:58,479 --> 03:37:59,760
on to do this

5541
03:37:59,760 --> 03:38:01,920
and so i wrote a little software that

5542
03:38:01,920 --> 03:38:03,439
basically

5543
03:38:03,439 --> 03:38:07,600
proxied uh dns answers from different

5544
03:38:07,600 --> 03:38:08,640
servers and

5545
03:38:08,640 --> 03:38:12,000
mixed nsec and nthic3 uh

5546
03:38:12,000 --> 03:38:16,160
answers and yeah i can

5547
03:38:16,160 --> 03:38:18,880
i did test it with the public resolvers

5548
03:38:18,880 --> 03:38:20,239
from this list

5549
03:38:20,239 --> 03:38:23,680
and i can tell you that yeah

5550
03:38:23,680 --> 03:38:25,680
really nothing interesting came out of

5551
03:38:25,680 --> 03:38:26,880
this the

5552
03:38:26,880 --> 03:38:30,479
the most interesting numbers that we got

5553
03:38:30,479 --> 03:38:32,479
from this is these

5554
03:38:32,479 --> 03:38:34,800
where i intentionally destroyed the

5555
03:38:34,800 --> 03:38:35,760
answers you're like

5556
03:38:35,760 --> 03:38:37,840
you know the nsa answer doesn't cover

5557
03:38:37,840 --> 03:38:38,880
the label

5558
03:38:38,880 --> 03:38:41,760
or we mix and second and thick three and

5559
03:38:41,760 --> 03:38:43,279
one of them covers the label but the

5560
03:38:43,279 --> 03:38:44,239
other doesn't

5561
03:38:44,239 --> 03:38:47,120
you know i mean that's really no no

5562
03:38:47,120 --> 03:38:48,080
serious

5563
03:38:48,080 --> 03:38:51,680
dns answers and yeah the resolvers

5564
03:38:51,680 --> 03:38:55,279
still handled it quite well so

5565
03:38:55,279 --> 03:38:59,040
so with that said it really looked good

5566
03:38:59,040 --> 03:39:02,080
and so we did a test run

5567
03:39:02,080 --> 03:39:05,600
we took the dot new zone and we named it

5568
03:39:05,600 --> 03:39:06,960
to

5569
03:39:06,960 --> 03:39:10,399
that nu you can do the usual

5570
03:39:10,399 --> 03:39:13,840
signing that we do with opendnssec and

5571
03:39:13,840 --> 03:39:16,399
using an anycast provider to you know

5572
03:39:16,399 --> 03:39:18,000
distribute the zone and

5573
03:39:18,000 --> 03:39:20,000
then we did a measurement with 500

5574
03:39:20,000 --> 03:39:22,080
whitewater approach

5575
03:39:22,080 --> 03:39:24,720
and it looks really you know like it's

5576
03:39:24,720 --> 03:39:25,600
supposed to look

5577
03:39:25,600 --> 03:39:29,600
you get mostly annex domain answers and

5578
03:39:29,600 --> 03:39:32,000
some resolvers answer no error which is

5579
03:39:32,000 --> 03:39:32,880
you know

5580
03:39:32,880 --> 03:39:35,680
quite uneventful and you see the lines

5581
03:39:35,680 --> 03:39:36,000
down

5582
03:39:36,000 --> 03:39:39,600
here a lot of them just look dns sec

5583
03:39:39,600 --> 03:39:41,680
enabled and the ones that are they just

5584
03:39:41,680 --> 03:39:42,560
change from

5585
03:39:42,560 --> 03:39:45,600
antique three transect

5586
03:39:45,600 --> 03:39:48,960
everything is really like it should be

5587
03:39:48,960 --> 03:39:52,080
and that's when we went live so we

5588
03:39:52,080 --> 03:39:53,600
thought you know we said okay we're good

5589
03:39:53,600 --> 03:39:55,279
to go let's do it

5590
03:39:55,279 --> 03:39:58,800
and um so we did the

5591
03:39:58,800 --> 03:40:00,560
same thing for that eu we have three

5592
03:40:00,560 --> 03:40:01,920
anycast providers for the

5593
03:40:01,920 --> 03:40:04,560
new zone and uh this time we did the

5594
03:40:04,560 --> 03:40:06,160
measurement with five thousand

5595
03:40:06,160 --> 03:40:09,199
whereaboutless probes and uh

5596
03:40:09,199 --> 03:40:12,479
yeah we we got this and it looks a

5597
03:40:12,479 --> 03:40:13,920
little bit different

5598
03:40:13,920 --> 03:40:17,760
and um so i just would like to take some

5599
03:40:17,760 --> 03:40:19,439
time to go over this

5600
03:40:19,439 --> 03:40:21,120
and so you see that i mean of course we

5601
03:40:21,120 --> 03:40:23,359
get nx domain mostly and that is because

5602
03:40:23,359 --> 03:40:24,720
i mean we obviously asking for

5603
03:40:24,720 --> 03:40:26,640
non-existence domain names

5604
03:40:26,640 --> 03:40:30,640
and and then we get this

5605
03:40:30,640 --> 03:40:35,439
no error answers which is a bit strange

5606
03:40:35,439 --> 03:40:39,279
but you know not you know

5607
03:40:39,760 --> 03:40:41,359
but we don't get any sort of fail and

5608
03:40:41,359 --> 03:40:43,040
that is good so

5609
03:40:43,040 --> 03:40:46,479
um but you see when we at the

5610
03:40:46,479 --> 03:40:48,319
at the time where we really whether the

5611
03:40:48,319 --> 03:40:51,120
zone went live with the nsac records

5612
03:40:51,120 --> 03:40:55,040
instead of nth 3 there's this

5613
03:40:55,040 --> 03:40:58,239
huge amount of

5614
03:40:58,880 --> 03:41:01,359
resolvers that suddenly start to support

5615
03:41:01,359 --> 03:41:05,359
insect but didn't support anthic free

5616
03:41:05,359 --> 03:41:08,080
and that was really a mystery to me

5617
03:41:08,080 --> 03:41:09,760
because i mean nothing of this happened

5618
03:41:09,760 --> 03:41:13,680
you know a trial about and it turns out

5619
03:41:13,680 --> 03:41:14,000
that

5620
03:41:14,000 --> 03:41:17,520
um yeah i made a kind of a rookie

5621
03:41:17,520 --> 03:41:18,800
mistake

5622
03:41:18,800 --> 03:41:22,399
i uh i instructed the ripe atlas probes

5623
03:41:22,399 --> 03:41:25,680
to reduce 512 bytes

5624
03:41:25,680 --> 03:41:29,120
and yeah that's what you get

5625
03:41:29,120 --> 03:41:32,080
i i still don't understand why the

5626
03:41:32,080 --> 03:41:33,680
resolvers would

5627
03:41:33,680 --> 03:41:36,160
answer no error instead of annex domain

5628
03:41:36,160 --> 03:41:37,760
but um

5629
03:41:37,760 --> 03:41:42,000
that's what happened and so we have a

5630
03:41:42,000 --> 03:41:44,479
huge number of resolvers that support

5631
03:41:44,479 --> 03:41:45,760
the nsx and the

5632
03:41:45,760 --> 03:41:48,210
validate and

5633
03:41:48,210 --> 03:41:49,920
[Music]

5634
03:41:49,920 --> 03:41:54,080
i think the um most of the answers that

5635
03:41:54,080 --> 03:41:57,520
did the no nsk in the beginning was just

5636
03:41:57,520 --> 03:41:59,920
they got to the tc bit set so there were

5637
03:41:59,920 --> 03:42:00,560
no

5638
03:42:00,560 --> 03:42:03,600
insect records in the answers but

5639
03:42:03,600 --> 03:42:06,880
the resolvers actually would have done

5640
03:42:06,880 --> 03:42:10,080
the nsa validation and

5641
03:42:10,080 --> 03:42:13,920
um with that i'm actually at the end of

5642
03:42:13,920 --> 03:42:16,800
my presentation

5643
03:42:18,000 --> 03:42:21,040
yeah well the success nobody we got no

5644
03:42:21,040 --> 03:42:24,640
angry customers calling and uh

5645
03:42:24,640 --> 03:42:27,760
everything validation went fine so yeah

5646
03:42:27,760 --> 03:42:30,319
we changed the new zone from anzac 3

5647
03:42:30,319 --> 03:42:32,399
transect

5648
03:42:32,399 --> 03:42:34,720
thank you

5649
03:42:36,080 --> 03:42:39,279
thanks rish for the presentation

5650
03:42:39,279 --> 03:42:42,000
um at this time i would like to remind

5651
03:42:42,000 --> 03:42:43,040
everybody to

5652
03:42:43,040 --> 03:42:45,359
uh fill the poll which should pop up on

5653
03:42:45,359 --> 03:42:47,199
your screen in a few minutes

5654
03:42:47,199 --> 03:42:51,120
um i don't have any questions in the q a

5655
03:42:51,120 --> 03:42:54,239
and oh one question

5656
03:42:54,239 --> 03:42:58,479
we have one question from dmitry

5657
03:42:58,479 --> 03:43:01,760
he's asking uh like i

5658
03:43:01,760 --> 03:43:05,120
oh no it's not a question for saying

5659
03:43:05,120 --> 03:43:08,239
couldn't login into mattermost

5660
03:43:08,239 --> 03:43:10,160
uh for some reason i think they couldn't

5661
03:43:10,160 --> 03:43:11,680
ask their question dimitri

5662
03:43:11,680 --> 03:43:15,040
do you have a question uh yeah i'm

5663
03:43:15,040 --> 03:43:16,479
allowing dimitri to speak

5664
03:43:16,479 --> 03:43:18,319
yeah dmitry please go ahead and unmute

5665
03:43:18,319 --> 03:43:19,760
yourself

5666
03:43:19,760 --> 03:43:24,399
i'm done uh thanks uh am i clear

5667
03:43:24,399 --> 03:43:26,720
yes i could hear you okay great thanks

5668
03:43:26,720 --> 03:43:27,520
for the work

5669
03:43:27,520 --> 03:43:29,359
just to record your right to be the

5670
03:43:29,359 --> 03:43:31,920
first on this transition but we did n63

5671
03:43:31,920 --> 03:43:33,279
opt out

5672
03:43:33,279 --> 03:43:36,880
to n63 plane and that was fun too we

5673
03:43:36,880 --> 03:43:39,040
should probably done the same test

5674
03:43:39,040 --> 03:43:41,840
um so congrats i guess we should both

5675
03:43:41,840 --> 03:43:43,520
you know pat ourselves on the back

5676
03:43:43,520 --> 03:43:46,720
thanks for your exhaustive testing in

5677
03:43:46,720 --> 03:43:49,439
the lab i applaud your diligence

5678
03:43:49,439 --> 03:43:52,399
uh i guess the question is um would you

5679
03:43:52,399 --> 03:43:53,760
mind telling us the reason of the

5680
03:43:53,760 --> 03:43:55,439
transition and do you ever plan to roll

5681
03:43:55,439 --> 03:43:57,600
it back 263 just to see again how the

5682
03:43:57,600 --> 03:43:58,800
world would change

5683
03:43:58,800 --> 03:44:01,760
maybe in a couple of years i mean you

5684
03:44:01,760 --> 03:44:03,520
know balance x3 is better right there is

5685
03:44:03,520 --> 03:44:05,199
always support 2.63 though

5686
03:44:05,199 --> 03:44:06,800
is definitely not there so i'm out

5687
03:44:06,800 --> 03:44:08,560
thanks yes

5688
03:44:08,560 --> 03:44:11,520
yeah so so the reason for what we wanted

5689
03:44:11,520 --> 03:44:13,840
to change is that

5690
03:44:13,840 --> 03:44:17,199
in the last few years there were several

5691
03:44:17,199 --> 03:44:19,439
cct ideas in europe that had problems

5692
03:44:19,439 --> 03:44:20,319
with the nsa

5693
03:44:20,319 --> 03:44:24,479
3 chain and so

5694
03:44:24,479 --> 03:44:27,760
and and then we actually publish our

5695
03:44:27,760 --> 03:44:28,640
zone files

5696
03:44:28,640 --> 03:44:33,279
if you go to zonedata.iis.se

5697
03:44:33,279 --> 03:44:36,640
you can download you get instructions

5698
03:44:36,640 --> 03:44:38,800
how you can get the dot s e zone and the

5699
03:44:38,800 --> 03:44:40,479
dot nu zone

5700
03:44:40,479 --> 03:44:45,840
and so we really have no need for m3

5701
03:44:46,880 --> 03:44:51,279
yeah very unusual yes and so that

5702
03:44:51,279 --> 03:44:53,359
given with the failures that other tlds

5703
03:44:53,359 --> 03:44:56,000
had and that we didn't have any use for

5704
03:44:56,000 --> 03:44:57,040
integrity

5705
03:44:57,040 --> 03:44:59,600
it seemed more like a liability than a

5706
03:44:59,600 --> 03:45:01,920
feature

5707
03:45:05,520 --> 03:45:09,040
great thank you thank you

5708
03:45:09,040 --> 03:45:12,640
um thanks so much uh we have one

5709
03:45:12,640 --> 03:45:13,279
question

5710
03:45:13,279 --> 03:45:16,560
from brett uh brett could you uh please

5711
03:45:16,560 --> 03:45:18,399
unmute yourself

5712
03:45:18,399 --> 03:45:21,920
yeah thank you um one of the reasons

5713
03:45:21,920 --> 03:45:23,040
that we continue

5714
03:45:23,040 --> 03:45:26,319
to use nsk3 is because of the because of

5715
03:45:26,319 --> 03:45:27,920
uptown and the fact that it doesn't

5716
03:45:27,920 --> 03:45:29,520
explode the size of the zones and if

5717
03:45:29,520 --> 03:45:30,160
you're

5718
03:45:30,160 --> 03:45:31,840
dealing with large zones that's actually

5719
03:45:31,840 --> 03:45:33,279
quite useful is that that was

5720
03:45:33,279 --> 03:45:35,359
i don't know what the size of the new

5721
03:45:35,359 --> 03:45:39,199
zone is was that a consideration at all

5722
03:45:39,680 --> 03:45:43,520
no we didn't use up out before

5723
03:45:43,520 --> 03:45:47,199
and um and we we we're running the dot s

5724
03:45:47,199 --> 03:45:48,239
e zone

5725
03:45:48,239 --> 03:45:51,600
with our with nzec already and so the uh

5726
03:45:51,600 --> 03:45:55,439
dot s e zone is 1.4 million domains and

5727
03:45:55,439 --> 03:45:55,840
dot

5728
03:45:55,840 --> 03:45:59,040
nu is 450 000

5729
03:45:59,040 --> 03:46:01,840
something so we were really concerned

5730
03:46:01,840 --> 03:46:02,479
about the

5731
03:46:02,479 --> 03:46:07,119
zones eyes okay thank you

5732
03:46:07,600 --> 03:46:10,640
thanks brett uh thanks auresh uh

5733
03:46:10,640 --> 03:46:12,160
we are just about done with all the

5734
03:46:12,160 --> 03:46:13,920
questions i don't see any new questions

5735
03:46:13,920 --> 03:46:16,160
from panelist attendees or in the q a

5736
03:46:16,160 --> 03:46:17,199
section

5737
03:46:17,199 --> 03:46:19,439
um so i think we are done with the

5738
03:46:19,439 --> 03:46:21,040
presentation

5739
03:46:21,040 --> 03:46:24,319
thank you very much and

5740
03:46:24,319 --> 03:46:28,000
i would like to thank all the presenters

5741
03:46:28,000 --> 03:46:29,840
once again for the wonderful

5742
03:46:29,840 --> 03:46:31,840
presentations and now i'll hand over to

5743
03:46:31,840 --> 03:46:34,080
keith

5744
03:46:34,840 --> 03:46:37,840
mitchell

5745
03:46:42,080 --> 03:46:43,920
okay thank you pallavi and um thank you

5746
03:46:43,920 --> 03:46:46,160
yan for um timekeeping i think that was

5747
03:46:46,160 --> 03:46:46,479
a

5748
03:46:46,479 --> 03:46:49,120
session went really well um just wanted

5749
03:46:49,120 --> 03:46:51,840
to do a few

5750
03:46:52,000 --> 03:46:55,040
admin things to to wrap up for the day

5751
03:46:55,040 --> 03:46:59,199
um we are pretty well

5752
03:46:59,199 --> 03:47:01,120
thank you for all the speakers um both

5753
03:47:01,120 --> 03:47:02,319
the program committee and the speakers

5754
03:47:02,319 --> 03:47:03,520
appreciate feedback

5755
03:47:03,520 --> 03:47:04,880
it looks as though we've had good

5756
03:47:04,880 --> 03:47:07,120
engagement with the zoom poles

5757
03:47:07,120 --> 03:47:08,960
so thank you all for clicking on the

5758
03:47:08,960 --> 03:47:10,239
button in the

5759
03:47:10,239 --> 03:47:14,000
q a window um

5760
03:47:14,000 --> 03:47:15,439
we'd quite like feedback on the feedback

5761
03:47:15,439 --> 03:47:17,520
mechanism as well there is a general

5762
03:47:17,520 --> 03:47:18,319
feedback

5763
03:47:18,319 --> 03:47:20,640
welcome survey um which would appreciate

5764
03:47:20,640 --> 03:47:22,239
um your feedback

5765
03:47:22,239 --> 03:47:24,479
your feedback on meeting logistics and

5766
03:47:24,479 --> 03:47:25,439
how it all went

5767
03:47:25,439 --> 03:47:29,840
um at the 34 survey link there

5768
03:47:29,840 --> 03:47:32,560
um we will very shortly for the next

5769
03:47:32,560 --> 03:47:34,479
hour be starting the social event that

5770
03:47:34,479 --> 03:47:35,120
is in the same

5771
03:47:35,120 --> 03:47:37,359
resume room as the lunchtime break there

5772
03:47:37,359 --> 03:47:38,479
was a few people there

5773
03:47:38,479 --> 03:47:40,800
um again there's a short link for that

5774
03:47:40,800 --> 03:47:41,760
um or

5775
03:47:41,760 --> 03:47:44,080
the meeting i the meeting id is there

5776
03:47:44,080 --> 03:47:44,800
and the

5777
03:47:44,800 --> 03:47:48,239
pin is 846 907

5778
03:47:48,239 --> 03:47:50,080
and we will be restarting tomorrow at

5779
03:47:50,080 --> 03:47:52,880
1600 utc but for that use the same

5780
03:47:52,880 --> 03:47:56,080
workshop link as you use today so

5781
03:47:56,080 --> 03:47:59,359
you probably received a reminder of that

5782
03:47:59,359 --> 03:48:02,880
i just wanted to um comment about the

5783
03:48:02,880 --> 03:48:04,080
members only session

5784
03:48:04,080 --> 03:48:07,040
at the end of tomorrow's proceedings um

5785
03:48:07,040 --> 03:48:09,120
work members who registered for what 34

5786
03:48:09,120 --> 03:48:09,520
and or

5787
03:48:09,520 --> 03:48:12,000
members who requested a link um should

5788
03:48:12,000 --> 03:48:13,040
have received that

5789
03:48:13,040 --> 03:48:16,319
invite by 1700 today

5790
03:48:16,319 --> 03:48:18,319
if you didn't receive that and please

5791
03:48:18,319 --> 03:48:19,760
before atm

5792
03:48:19,760 --> 03:48:22,560
utc tomorrow please let us know um and

5793
03:48:22,560 --> 03:48:24,960
that will be a confidential session

5794
03:48:24,960 --> 03:48:28,239
um so that's pretty much it

5795
03:48:28,239 --> 03:48:30,000
um you know the one thing that just

5796
03:48:30,000 --> 03:48:31,680
remains to say is thank you to all our

5797
03:48:31,680 --> 03:48:33,040
speakers today

5798
03:48:33,040 --> 03:48:35,520
um for their exxon efforts and um

5799
03:48:35,520 --> 03:48:36,640
keeping on time

5800
03:48:36,640 --> 03:48:38,800
and um you know all the other also

5801
03:48:38,800 --> 03:48:40,319
contribution towards the rehearsals

5802
03:48:40,319 --> 03:48:42,319
which i think has paid off really well

5803
03:48:42,319 --> 03:48:45,439
and um also thank you to farsight as our

5804
03:48:45,439 --> 03:48:49,439
workshop sponsor um and um that is all i

5805
03:48:49,439 --> 03:48:50,800
have to say today

5806
03:48:50,800 --> 03:48:53,040
uh i will see you in the social room

5807
03:48:53,040 --> 03:48:54,160
shortly and

5808
03:48:54,160 --> 03:48:56,320
if you don't make the social scene

5809
03:48:56,320 --> 03:49:11,279
[Music]

5810
03:49:11,279 --> 03:49:13,359
you

