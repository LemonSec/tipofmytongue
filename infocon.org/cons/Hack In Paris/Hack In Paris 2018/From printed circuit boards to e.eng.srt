1
00:00:10,219 --> 00:00:16,580
so I could have stolen<font color="#CCCCCC"> everyone I'm</font>

2
00:00:13,070 --> 00:00:20,390
going<font color="#E5E5E5"> to talk about hardware hacking and</font>

3
00:00:16,580 --> 00:00:24,078
especially about methodology<font color="#E5E5E5"> so for</font>

4
00:00:20,390 --> 00:00:26,119
those<font color="#E5E5E5"> who don't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> me I'm the</font><font color="#CCCCCC"> head of</font>

5
00:00:24,079 --> 00:00:29,869
research at<font color="#E5E5E5"> econo computer security in</font>

6
00:00:26,119 --> 00:00:32,149
Paris<font color="#E5E5E5"> and basically what we can call a</font>

7
00:00:29,869 --> 00:00:34,730
<font color="#E5E5E5">hardware hacker but at least I'm</font>

8
00:00:32,149 --> 00:00:37,550
<font color="#E5E5E5">pretending to be one I'm not an expert</font>

9
00:00:34,730 --> 00:00:39,828
in<font color="#E5E5E5"> this field anyway</font><font color="#CCCCCC"> I spoke at various</font>

10
00:00:37,550 --> 00:00:42,578
conferences and a special interest<font color="#E5E5E5"> in</font>

11
00:00:39,829 --> 00:00:48,289
the<font color="#E5E5E5"> Bluetooth</font><font color="#CCCCCC"> Low Energy</font><font color="#E5E5E5"> protocol since</font>

12
00:00:42,579 --> 00:00:50,569
<font color="#E5E5E5">two years now</font><font color="#CCCCCC"> so let's start</font><font color="#E5E5E5"> what this</font>

13
00:00:48,289 --> 00:00:52,940
talk is not<font color="#CCCCCC"> about so this</font><font color="#E5E5E5"> talk is not</font>

14
00:00:50,569 --> 00:00:54,289
<font color="#CCCCCC">about</font><font color="#E5E5E5"> it's not a detailed reference</font>

15
00:00:52,940 --> 00:00:57,920
guide<font color="#E5E5E5"> on how to punt</font>

16
00:00:54,289 --> 00:01:00,440
IOT devices<font color="#CCCCCC"> I won't give you</font><font color="#E5E5E5"> all the</font><font color="#CCCCCC"> all</font>

17
00:00:57,920 --> 00:01:02,620
<font color="#CCCCCC">the tools and all the methods to to hack</font>

18
00:01:00,440 --> 00:01:05,990
<font color="#E5E5E5">I you see devices but</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will go through</font>

19
00:01:02,620 --> 00:01:08,539
<font color="#E5E5E5">a specific process to analyze these</font>

20
00:01:05,990 --> 00:01:12,320
devices<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's more</font><font color="#E5E5E5"> than more guide</font>

21
00:01:08,540 --> 00:01:14,930
<font color="#E5E5E5">than</font><font color="#CCCCCC"> how-to tutorial</font><font color="#E5E5E5"> if you see what I</font>

22
00:01:12,320 --> 00:01:18,710
mean<font color="#E5E5E5"> so I won't give any a list of</font>

23
00:01:14,930 --> 00:01:22,180
<font color="#CCCCCC">tourism and</font><font color="#E5E5E5"> used to test devices so it's</font>

24
00:01:18,710 --> 00:01:25,699
all about<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to think and analyze and</font>

25
00:01:22,180 --> 00:01:28,610
exploit IOT devices<font color="#E5E5E5"> so it's based on</font>

26
00:01:25,700 --> 00:01:31,160
various<font color="#E5E5E5"> various</font><font color="#CCCCCC"> walks</font><font color="#E5E5E5"> we're going to see</font>

27
00:01:28,610 --> 00:01:34,160
this<font color="#E5E5E5"> so what I'm</font><font color="#CCCCCC"> proposing is to do it</font>

28
00:01:31,160 --> 00:01:36,800
the<font color="#E5E5E5"> highway you know by applying the</font>

29
00:01:34,160 --> 00:01:39,619
same<font color="#E5E5E5"> akka principle principles to do</font>

30
00:01:36,800 --> 00:01:43,100
this stuff<font color="#E5E5E5"> so I'm going</font><font color="#CCCCCC"> to talk about</font>

31
00:01:39,620 --> 00:01:46,850
<font color="#E5E5E5">methodology mainly of course they are</font>

32
00:01:43,100 --> 00:01:49,699
existing methodologies one<font color="#E5E5E5"> rapid7 design</font>

33
00:01:46,850 --> 00:01:53,210
and I guess<font color="#E5E5E5"> they were laid and thought</font>

34
00:01:49,700 --> 00:01:56,420
<font color="#CCCCCC">about</font><font color="#E5E5E5"> it last year attack in Paris so it</font>

35
00:01:53,210 --> 00:01:59,479
inspired me<font color="#E5E5E5"> to</font><font color="#CCCCCC"> create my own methodology</font>

36
00:01:56,420 --> 00:02:01,820
adapted to what I'm what I see<font color="#E5E5E5"> usually</font>

37
00:01:59,480 --> 00:02:04,550
see during my<font color="#CCCCCC"> pain test and my research</font>

38
00:02:01,820 --> 00:02:06,500
<font color="#E5E5E5">and of course there is also the</font><font color="#CCCCCC"> OS</font>

39
00:02:04,550 --> 00:02:08,720
peyote project which is a great project

40
00:02:06,500 --> 00:02:13,239
<font color="#E5E5E5">from the open web application security</font>

41
00:02:08,720 --> 00:02:16,489
project but<font color="#E5E5E5"> IOT but it's not that</font><font color="#CCCCCC"> much</font>

42
00:02:13,239 --> 00:02:20,870
<font color="#CCCCCC">they</font><font color="#E5E5E5"> still have to a lot</font><font color="#CCCCCC"> of work to do</font>

43
00:02:16,489 --> 00:02:21,250
to provide a very competent methodology

44
00:02:20,870 --> 00:02:24,730
to

45
00:02:21,250 --> 00:02:27,490
<font color="#CCCCCC">to</font><font color="#E5E5E5"> Aditi devices so I took all</font><font color="#CCCCCC"> of these</font>

46
00:02:24,730 --> 00:02:29,739
methodologies<font color="#E5E5E5"> the objective</font><font color="#CCCCCC"> more</font>

47
00:02:27,490 --> 00:02:32,980
methodologies<font color="#E5E5E5"> but I did not mention them</font>

48
00:02:29,740 --> 00:02:35,020
<font color="#E5E5E5">on this slide so I took all of these</font>

49
00:02:32,980 --> 00:02:38,890
methodologies and create my own my own

50
00:02:35,020 --> 00:02:42,310
<font color="#E5E5E5">mix that I have tested since two years</font>

51
00:02:38,890 --> 00:02:46,420
<font color="#E5E5E5">at econo</font><font color="#CCCCCC"> come digital security</font><font color="#E5E5E5"> so</font>

52
00:02:42,310 --> 00:02:48,730
basically what is the<font color="#E5E5E5"> process first we</font>

53
00:02:46,420 --> 00:02:50,829
start from the PCB<font color="#E5E5E5"> itself so we are</font>

54
00:02:48,730 --> 00:02:55,590
<font color="#E5E5E5">going to see how to analyze printed</font>

55
00:02:50,830 --> 00:02:59,040
<font color="#CCCCCC">circuit board so but the basics</font><font color="#E5E5E5"> of the</font>

56
00:02:55,590 --> 00:03:01,660
<font color="#E5E5E5">hacker</font><font color="#CCCCCC"> reverse engineering skills and</font>

57
00:02:59,040 --> 00:03:05,350
then we are<font color="#E5E5E5"> going to have a look at the</font>

58
00:03:01,660 --> 00:03:09,070
components<font color="#CCCCCC"> on this board</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> see how it</font>

59
00:03:05,350 --> 00:03:11,590
interacts<font color="#E5E5E5"> and everything works at the</font>

60
00:03:09,070 --> 00:03:14,230
electronics level then we're going<font color="#CCCCCC"> to</font>

61
00:03:11,590 --> 00:03:16,360
extract<font color="#E5E5E5"> some data from these components</font>

62
00:03:14,230 --> 00:03:19,060
say you're some kind of from<font color="#E5E5E5"> oil for</font>

63
00:03:16,360 --> 00:03:21,250
instance<font color="#E5E5E5"> or even data and then we are</font>

64
00:03:19,060 --> 00:03:23,920
<font color="#E5E5E5">going to analyze this data if it's some</font>

65
00:03:21,250 --> 00:03:27,280
<font color="#CCCCCC">kind of of code we</font><font color="#E5E5E5"> are going to</font>

66
00:03:23,920 --> 00:03:31,089
disassemble it<font color="#E5E5E5"> generally more generally</font>

67
00:03:27,280 --> 00:03:33,100
underlies this this data<font color="#E5E5E5"> obviously we</font>

68
00:03:31,090 --> 00:03:36,400
can do a lot more with this<font color="#CCCCCC"> specific</font>

69
00:03:33,100 --> 00:03:37,989
specific stuff we can analyze all<font color="#CCCCCC"> the</font>

70
00:03:36,400 --> 00:03:40,870
components and<font color="#CCCCCC"> especially all the</font>

71
00:03:37,989 --> 00:03:43,810
components interact with all the<font color="#E5E5E5"> with</font>

72
00:03:40,870 --> 00:03:46,989
with all<font color="#E5E5E5"> those plans so this can be done</font>

73
00:03:43,810 --> 00:03:49,180
<font color="#E5E5E5">with specific tools we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> going to have</font>

74
00:03:46,989 --> 00:03:52,360
a very quick<font color="#CCCCCC"> look at it in this in this</font>

75
00:03:49,180 --> 00:03:55,060
talk<font color="#E5E5E5"> and obviously or</font><font color="#CCCCCC"> to underlies</font>

76
00:03:52,360 --> 00:04:00,489
wireless communications because you know

77
00:03:55,060 --> 00:04:02,380
IOT IOT<font color="#CCCCCC"> devices designed to from most of</font>

78
00:04:00,489 --> 00:04:07,840
them to communicate<font color="#E5E5E5"> with wireless</font>

79
00:04:02,380 --> 00:04:12,070
protocols so we<font color="#E5E5E5"> also cover this this in</font>

80
00:04:07,840 --> 00:04:14,290
in ommited methodology<font color="#E5E5E5"> and of course we</font>

81
00:04:12,070 --> 00:04:16,870
are going<font color="#CCCCCC"> to find analogies and attack</font>

82
00:04:14,290 --> 00:04:19,930
<font color="#E5E5E5">these devices</font><font color="#CCCCCC"> you think this we</font><font color="#E5E5E5"> know</font>

83
00:04:16,870 --> 00:04:22,680
<font color="#CCCCCC">where it is we found so just to</font>

84
00:04:19,930 --> 00:04:25,750
illustrate this mythology I'm going to

85
00:04:22,680 --> 00:04:28,260
<font color="#CCCCCC">analyze</font><font color="#E5E5E5"> this small talk so it's a very</font>

86
00:04:25,750 --> 00:04:31,180
<font color="#CCCCCC">smart looks Bluetooth</font><font color="#E5E5E5"> Low Energy based</font>

87
00:04:28,260 --> 00:04:32,599
smart knock it was transferred<font color="#E5E5E5"> in in</font>

88
00:04:31,180 --> 00:04:35,210
<font color="#E5E5E5">France on a</font>

89
00:04:32,600 --> 00:04:37,040
I don't think<font color="#CCCCCC"> there are so many of these</font>

90
00:04:35,210 --> 00:04:39,799
smart dogs in the<font color="#CCCCCC"> wild so this is why I</font>

91
00:04:37,040 --> 00:04:41,690
chose this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> mouth looks so quite</font>

92
00:04:39,800 --> 00:04:44,240
<font color="#E5E5E5">interesting to see what we can do with</font>

93
00:04:41,690 --> 00:04:46,790
the is this<font color="#CCCCCC"> Marvel soft</font><font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> talk</font>

94
00:04:44,240 --> 00:04:49,460
first step<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tilt down</font>

95
00:04:46,790 --> 00:04:54,650
we are going to<font color="#E5E5E5"> open this this motovlog</font>

96
00:04:49,460 --> 00:04:57,349
and see what<font color="#CCCCCC"> its what is</font><font color="#E5E5E5"> inside this</font><font color="#CCCCCC"> one</font>

97
00:04:54,650 --> 00:04:59,179
<font color="#CCCCCC">block</font><font color="#E5E5E5"> so what do you need to open a snob</font>

98
00:04:57,350 --> 00:05:01,310
know you need some screwdrivers and<font color="#E5E5E5"> a</font>

99
00:04:59,180 --> 00:05:04,780
spade jaws<font color="#E5E5E5"> so this is these</font><font color="#CCCCCC"> are small</font>

100
00:05:01,310 --> 00:05:08,960
tools<font color="#CCCCCC"> plastic tools very useful to open</font>

101
00:05:04,780 --> 00:05:11,750
<font color="#E5E5E5">you know little boxes if</font><font color="#CCCCCC"> you I'm sure</font>

102
00:05:08,960 --> 00:05:15,560
I'm quite<font color="#E5E5E5"> sure most of you who made this</font>

103
00:05:11,750 --> 00:05:18,230
or try to to open<font color="#CCCCCC"> some boxes</font><font color="#E5E5E5"> use your</font>

104
00:05:15,560 --> 00:05:20,990
<font color="#E5E5E5">names and broke your nails with the with</font>

105
00:05:18,230 --> 00:05:25,130
this<font color="#E5E5E5"> book so</font><font color="#CCCCCC"> these tools avoid that</font>

106
00:05:20,990 --> 00:05:27,980
it's a pretty<font color="#CCCCCC"> awesome</font><font color="#E5E5E5"> and if it is a</font>

107
00:05:25,130 --> 00:05:32,840
brand new smart lock open<font color="#E5E5E5"> as you can see</font>

108
00:05:27,980 --> 00:05:35,780
there is not so much inside on your PCB

109
00:05:32,840 --> 00:05:38,359
<font color="#E5E5E5">and some wires obviously a motor tour to</font>

110
00:05:35,780 --> 00:05:41,059
drive the<font color="#E5E5E5"> the opening and</font><font color="#CCCCCC"> closing</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

111
00:05:38,360 --> 00:05:46,130
lock but that's all so let's have a look

112
00:05:41,060 --> 00:05:49,160
<font color="#E5E5E5">at it yeah just a single tip when you</font>

113
00:05:46,130 --> 00:05:51,850
try to<font color="#E5E5E5"> open boxes</font><font color="#CCCCCC"> Keep</font><font color="#E5E5E5"> Calm</font><font color="#CCCCCC"> you know</font>

114
00:05:49,160 --> 00:05:56,200
because sometimes<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> be a bit</font>

115
00:05:51,850 --> 00:05:59,380
<font color="#E5E5E5">you may be rude and try to open it very</font>

116
00:05:56,200 --> 00:06:02,479
very<font color="#E5E5E5"> quickly with bad tools so it can</font>

117
00:05:59,380 --> 00:06:06,020
come up<font color="#CCCCCC"> at some</font><font color="#E5E5E5"> time to break</font><font color="#CCCCCC"> the PCB</font>

118
00:06:02,480 --> 00:06:08,390
<font color="#E5E5E5">when you are opening second step the</font>

119
00:06:06,020 --> 00:06:12,109
global global approach for global

120
00:06:08,390 --> 00:06:15,770
analysis we<font color="#E5E5E5"> can do to</font><font color="#CCCCCC"> discover the PCB</font>

121
00:06:12,110 --> 00:06:19,400
<font color="#E5E5E5">so basically this is</font><font color="#CCCCCC"> a step I usually do</font>

122
00:06:15,770 --> 00:06:21,950
at<font color="#E5E5E5"> first time when I get the PCB my ends</font>

123
00:06:19,400 --> 00:06:25,880
on the PCB<font color="#E5E5E5"> so this are the idea</font><font color="#CCCCCC"> behind</font>

124
00:06:21,950 --> 00:06:29,060
<font color="#E5E5E5">this</font><font color="#CCCCCC"> this analysis</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to exploit</font><font color="#E5E5E5"> some</font>

125
00:06:25,880 --> 00:06:32,150
weaknesses<font color="#E5E5E5"> use electronics and genius</font>

126
00:06:29,060 --> 00:06:35,240
you usually do I mean<font color="#E5E5E5"> when you</font><font color="#CCCCCC"> are</font>

127
00:06:32,150 --> 00:06:37,308
<font color="#E5E5E5">designing a PCB you have habits and this</font>

128
00:06:35,240 --> 00:06:40,429
<font color="#E5E5E5">is normal this is the way the</font>

129
00:06:37,309 --> 00:06:43,999
the<font color="#E5E5E5"> ingenious design</font><font color="#CCCCCC"> pcbs</font><font color="#E5E5E5"> so basically</font>

130
00:06:40,429 --> 00:06:45,498
the<font color="#E5E5E5"> components are placed based on the</font>

131
00:06:43,999 --> 00:06:48,709
on their<font color="#CCCCCC"> role you know because if you</font>

132
00:06:45,499 --> 00:06:49,489
<font color="#E5E5E5">place two components two four four went</font>

133
00:06:48,709 --> 00:06:52,009
from the<font color="#E5E5E5"> user</font>

134
00:06:49,489 --> 00:06:54,349
you have to route all<font color="#E5E5E5"> the tracks on the</font>

135
00:06:52,009 --> 00:06:56,629
<font color="#E5E5E5">PCB and</font><font color="#CCCCCC"> it implies a lot of trouble a</font>

136
00:06:54,349 --> 00:06:59,239
lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> issues</font><font color="#E5E5E5"> when doing this so</font>

137
00:06:56,629 --> 00:07:01,939
basically<font color="#E5E5E5"> when you create a PCB you</font>

138
00:06:59,239 --> 00:07:04,849
place<font color="#CCCCCC"> a component that have some kind of</font>

139
00:07:01,939 --> 00:07:07,729
<font color="#E5E5E5">interaction</font><font color="#CCCCCC"> very close one to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> other</font>

140
00:07:04,849 --> 00:07:12,039
<font color="#E5E5E5">just to be sure that you're the</font><font color="#CCCCCC"> smallest</font>

141
00:07:07,729 --> 00:07:14,688
<font color="#E5E5E5">track to connect them so</font><font color="#CCCCCC"> that means</font>

142
00:07:12,039 --> 00:07:19,729
every component<font color="#E5E5E5"> related to a specific</font>

143
00:07:14,689 --> 00:07:22,129
function will be in the<font color="#E5E5E5"> same area also</font>

144
00:07:19,729 --> 00:07:27,079
connectors and coconuts producing<font color="#E5E5E5"> heat</font>

145
00:07:22,129 --> 00:07:29,119
<font color="#E5E5E5">so basically some specific components</font>

146
00:07:27,079 --> 00:07:32,689
are going<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> placed near</font><font color="#CCCCCC"> the edges</font>

147
00:07:29,119 --> 00:07:33,229
<font color="#E5E5E5">because it's easier to put a heat</font>

148
00:07:32,689 --> 00:07:36,679
dissipator

149
00:07:33,229 --> 00:07:39,079
and so and<font color="#CCCCCC"> also to put some kind</font><font color="#E5E5E5"> of</font>

150
00:07:36,679 --> 00:07:41,599
<font color="#CCCCCC">connector to connect to the system so if</font>

151
00:07:39,079 --> 00:07:45,079
we have a<font color="#E5E5E5"> look at a small block it's</font>

152
00:07:41,599 --> 00:07:46,938
very easy<font color="#E5E5E5"> to spot</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> dis</font>

153
00:07:45,079 --> 00:07:49,849
components so obviously there is a

154
00:07:46,939 --> 00:07:52,789
<font color="#CCCCCC">microUSB</font><font color="#E5E5E5"> connector</font><font color="#CCCCCC"> on the right of the</font>

155
00:07:49,849 --> 00:07:54,829
of the screen at<font color="#E5E5E5"> the bottom</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> connector</font>

156
00:07:52,789 --> 00:07:56,688
for<font color="#CCCCCC"> the battery and the motor itself at</font>

157
00:07:54,829 --> 00:07:59,269
the top<font color="#CCCCCC"> another connector for the second</font>

158
00:07:56,689 --> 00:08:01,489
battery and there<font color="#E5E5E5"> is something weird</font>

159
00:07:59,269 --> 00:08:04,639
<font color="#CCCCCC">between in between</font><font color="#E5E5E5"> the some kind of</font>

160
00:08:01,489 --> 00:08:07,989
components with only four pins available

161
00:08:04,639 --> 00:08:11,119
<font color="#CCCCCC">so we're going to see what what this</font>

162
00:08:07,989 --> 00:08:14,808
connector which is<font color="#E5E5E5"> not here obviously is</font>

163
00:08:11,119 --> 00:08:18,259
<font color="#E5E5E5">for if we have a look then at the</font>

164
00:08:14,809 --> 00:08:20,239
components themselves<font color="#E5E5E5"> we may find the</font>

165
00:08:18,259 --> 00:08:23,989
<font color="#E5E5E5">Nordic semiconductor</font>

166
00:08:20,239 --> 00:08:25,969
<font color="#CCCCCC">50 to</font><font color="#E5E5E5"> 832 which is basically a 2.4</font>

167
00:08:23,989 --> 00:08:28,688
gigahertz Bluetooth<font color="#E5E5E5"> low-energy cable</font>

168
00:08:25,969 --> 00:08:31,248
system and chip<font color="#E5E5E5"> so it's a full system</font>

169
00:08:28,689 --> 00:08:34,009
<font color="#E5E5E5">able to communicate with the ble</font>

170
00:08:31,249 --> 00:08:37,639
protocol so it's quite<font color="#CCCCCC"> interesting and</font>

171
00:08:34,009 --> 00:08:39,680
<font color="#E5E5E5">also</font><font color="#CCCCCC"> Dion v88 48</font>

172
00:08:37,639 --> 00:08:41,688
made<font color="#E5E5E5"> by Texas Instruments which is</font>

173
00:08:39,679 --> 00:08:43,968
basically a motor driver so this is a

174
00:08:41,688 --> 00:08:46,879
component in charge of<font color="#E5E5E5"> driving the DC</font>

175
00:08:43,969 --> 00:08:48,139
motor used to open or<font color="#CCCCCC"> close a lock</font><font color="#E5E5E5"> so</font>

176
00:08:46,879 --> 00:08:50,209
this is<font color="#E5E5E5"> quite interesting</font><font color="#CCCCCC"> because I</font>

177
00:08:48,139 --> 00:08:50,630
found this on the<font color="#E5E5E5"> Internet</font>

178
00:08:50,209 --> 00:08:52,459
so you

179
00:08:50,630 --> 00:08:54,020
using<font color="#CCCCCC"> Google</font><font color="#E5E5E5"> we can just put the</font>

180
00:08:52,460 --> 00:08:57,470
references<font color="#E5E5E5"> and get all the data sheets</font>

181
00:08:54,020 --> 00:08:59,090
<font color="#E5E5E5">online and you know it's easy to</font>

182
00:08:57,470 --> 00:09:04,750
<font color="#E5E5E5">determine the</font><font color="#CCCCCC"> the world of these</font>

183
00:08:59,090 --> 00:09:09,170
components so if we summarize<font color="#CCCCCC"> a bit</font><font color="#E5E5E5"> this</font>

184
00:09:04,750 --> 00:09:11,990
especially<font color="#E5E5E5"> so basically we we have a lot</font>

185
00:09:09,170 --> 00:09:15,170
of<font color="#E5E5E5"> components way to do battery this is</font>

186
00:09:11,990 --> 00:09:18,380
the area<font color="#CCCCCC"> in blue on the screen relative</font>

187
00:09:15,170 --> 00:09:24,680
to moto<font color="#CCCCCC"> well they are in orange and ble</font>

188
00:09:18,380 --> 00:09:28,040
in in purple<font color="#E5E5E5"> so it's it took me</font><font color="#CCCCCC"> on five</font>

189
00:09:24,680 --> 00:09:30,500
to<font color="#E5E5E5"> ten minutes to get</font><font color="#CCCCCC"> devs to know how</font>

190
00:09:28,040 --> 00:09:33,439
the PCB was was designed and where the

191
00:09:30,500 --> 00:09:36,340
components are<font color="#CCCCCC"> placed</font><font color="#E5E5E5"> so you're just</font>

192
00:09:33,440 --> 00:09:39,470
<font color="#E5E5E5">using Google</font><font color="#CCCCCC"> and I mind my brain just</font>

193
00:09:36,340 --> 00:09:41,240
<font color="#E5E5E5">obviously and then we can try</font><font color="#CCCCCC"> to recover</font>

194
00:09:39,470 --> 00:09:44,480
the schematics<font color="#E5E5E5"> schematics is basically</font>

195
00:09:41,240 --> 00:09:47,390
the the electronics design made to

196
00:09:44,480 --> 00:09:49,820
<font color="#E5E5E5">create this PCB and to get to get this</font>

197
00:09:47,390 --> 00:09:52,400
<font color="#CCCCCC">somatic back</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> going to use some</font>

198
00:09:49,820 --> 00:09:55,730
pictures<font color="#CCCCCC"> I with elation pictures and</font>

199
00:09:52,400 --> 00:09:58,819
some dedicated<font color="#E5E5E5"> software just to get it</font>

200
00:09:55,730 --> 00:10:01,370
back<font color="#E5E5E5"> so this is a very funny way to do</font>

201
00:09:58,820 --> 00:10:04,700
it to do this<font color="#E5E5E5"> because using just some</font>

202
00:10:01,370 --> 00:10:08,870
<font color="#E5E5E5">kind of of iOS deletion camera I can</font>

203
00:10:04,700 --> 00:10:11,690
just take the take a picture photo of

204
00:10:08,870 --> 00:10:13,970
your<font color="#CCCCCC"> PCBs</font><font color="#E5E5E5"> on the two layers front and</font>

205
00:10:11,690 --> 00:10:16,820
<font color="#CCCCCC">back and then follow the tracks and</font>

206
00:10:13,970 --> 00:10:19,130
<font color="#CCCCCC">various</font><font color="#E5E5E5"> only by using some kind of</font>

207
00:10:16,820 --> 00:10:22,250
software<font color="#E5E5E5"> dedicated software image</font>

208
00:10:19,130 --> 00:10:23,420
processing<font color="#CCCCCC"> software</font><font color="#E5E5E5"> and based on this we</font>

209
00:10:22,250 --> 00:10:25,220
are<font color="#E5E5E5"> going to be able to determine</font>

210
00:10:23,420 --> 00:10:27,829
protocols<font color="#E5E5E5"> what which protocols are used</font>

211
00:10:25,220 --> 00:10:31,070
<font color="#E5E5E5">for inter integrated circuit</font>

212
00:10:27,830 --> 00:10:34,610
communications<font color="#E5E5E5"> let's do this with some</font>

213
00:10:31,070 --> 00:10:37,000
<font color="#CCCCCC">kind of example</font><font color="#E5E5E5"> so the main</font><font color="#CCCCCC"> regard is</font><font color="#E5E5E5"> to</font>

214
00:10:34,610 --> 00:10:39,950
draw<font color="#E5E5E5"> a simple and simplified schematic</font>

215
00:10:37,000 --> 00:10:42,350
<font color="#E5E5E5">schematics for all this stuff so</font>

216
00:10:39,950 --> 00:10:44,060
basically what I did is I<font color="#CCCCCC"> took</font><font color="#E5E5E5"> two</font>

217
00:10:42,350 --> 00:10:47,480
pictures<font color="#E5E5E5"> and it will front and the back</font>

218
00:10:44,060 --> 00:10:49,729
of<font color="#E5E5E5"> the PCB and I used</font><font color="#CCCCCC"> Inkscape the</font>

219
00:10:47,480 --> 00:10:51,980
<font color="#CCCCCC">Inkscape vector graphic</font><font color="#E5E5E5"> software to</font>

220
00:10:49,730 --> 00:10:55,190
import this<font color="#CCCCCC"> different this these</font>

221
00:10:51,980 --> 00:10:59,570
pictures and using some opacity settings

222
00:10:55,190 --> 00:11:02,620
just put<font color="#E5E5E5"> one onto the</font><font color="#CCCCCC"> other and see if i</font>

223
00:10:59,570 --> 00:11:03,779
can get where the vias<font color="#E5E5E5"> are going through</font>

224
00:11:02,620 --> 00:11:06,389
<font color="#E5E5E5">so</font>

225
00:11:03,779 --> 00:11:11,399
you have a look<font color="#CCCCCC"> just here on the this</font><font color="#E5E5E5"> is</font>

226
00:11:06,389 --> 00:11:15,120
<font color="#CCCCCC">the NIF 52 and then we got four fires</font>

227
00:11:11,399 --> 00:11:18,540
that<font color="#E5E5E5"> go through this chip</font><font color="#CCCCCC"> and I can see</font>

228
00:11:15,120 --> 00:11:21,170
<font color="#E5E5E5">clearly on this</font><font color="#CCCCCC"> where it's</font><font color="#E5E5E5"> going to so</font>

229
00:11:18,540 --> 00:11:26,248
it's pretty<font color="#E5E5E5"> interesting to to know but</font>

230
00:11:21,170 --> 00:11:30,059
although this this this filthy strip is

231
00:11:26,249 --> 00:11:33,059
connected to the<font color="#CCCCCC"> govt</font><font color="#E5E5E5"> 88</font><font color="#CCCCCC"> the other</font>

232
00:11:30,059 --> 00:11:36,180
component and drives<font color="#E5E5E5"> a motor and based</font>

233
00:11:33,059 --> 00:11:40,230
on<font color="#E5E5E5"> this once you know</font><font color="#CCCCCC"> which pins which</font>

234
00:11:36,180 --> 00:11:43,829
which pins of each chip is used to

235
00:11:40,230 --> 00:11:47,069
<font color="#CCCCCC">communicate</font><font color="#E5E5E5"> with result others you can</font>

236
00:11:43,829 --> 00:11:49,290
determine what protocol is used<font color="#E5E5E5"> based on</font>

237
00:11:47,069 --> 00:11:54,149
<font color="#E5E5E5">the data sheets so the data she states</font>

238
00:11:49,290 --> 00:11:56,399
that for instance<font color="#E5E5E5"> pins 26 and 25 I use</font>

239
00:11:54,149 --> 00:11:59,459
for the<font color="#CCCCCC"> swd protocol which is</font><font color="#E5E5E5"> a</font>

240
00:11:56,399 --> 00:12:02,939
debugging protocol and if we have a look

241
00:11:59,459 --> 00:12:06,329
at this so then 25 and 26 pins are here

242
00:12:02,939 --> 00:12:09,089
and then we can clearly see that<font color="#CCCCCC"> the</font>

243
00:12:06,329 --> 00:12:11,939
<font color="#CCCCCC">soundtracks going to this connector so</font>

244
00:12:09,089 --> 00:12:15,389
there is a great chance<font color="#CCCCCC"> that this</font>

245
00:12:11,939 --> 00:12:20,059
connector<font color="#CCCCCC"> should be may</font><font color="#E5E5E5"> be used to debug</font>

246
00:12:15,389 --> 00:12:23,189
this<font color="#E5E5E5"> this chip and</font><font color="#CCCCCC"> then using some</font>

247
00:12:20,059 --> 00:12:26,219
software like<font color="#CCCCCC"> Inkscape or a doublet or</font>

248
00:12:23,189 --> 00:12:29,879
video or whatever<font color="#E5E5E5"> you can draw a</font>

249
00:12:26,220 --> 00:12:33,389
simplified schematics this idea the idea

250
00:12:29,879 --> 00:12:37,350
behind this schematic<font color="#E5E5E5"> so this this this</font>

251
00:12:33,389 --> 00:12:39,569
<font color="#CCCCCC">schema is to to get only</font><font color="#E5E5E5"> the interesting</font>

252
00:12:37,350 --> 00:12:42,800
stuff<font color="#CCCCCC"> we don't want to interfere this</font>

253
00:12:39,569 --> 00:12:45,839
this PCB<font color="#E5E5E5"> so we only need to know where</font>

254
00:12:42,800 --> 00:12:49,769
where we can connect and all these chips

255
00:12:45,839 --> 00:12:52,110
in term communicates with each<font color="#E5E5E5"> others in</font>

256
00:12:49,769 --> 00:12:54,779
order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> understand all the</font><font color="#CCCCCC"> PCBs</font><font color="#E5E5E5"> was</font>

257
00:12:52,110 --> 00:12:57,059
made so this is the<font color="#E5E5E5"> final result I</font><font color="#CCCCCC"> made</font>

258
00:12:54,779 --> 00:13:00,470
<font color="#E5E5E5">with the</font><font color="#CCCCCC"> escape so as you can see my</font>

259
00:12:57,059 --> 00:13:04,649
<font color="#E5E5E5">escape skills are also I'm very good at</font>

260
00:13:00,470 --> 00:13:06,870
drawing but anyway the<font color="#E5E5E5"> scientists the</font>

261
00:13:04,649 --> 00:13:09,959
main my point is<font color="#CCCCCC"> I</font><font color="#E5E5E5"> ought to be able to</font>

262
00:13:06,870 --> 00:13:14,189
draw<font color="#E5E5E5"> something like this</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> is the</font>

263
00:13:09,959 --> 00:13:17,729
debug<font color="#CCCCCC"> mode</font><font color="#E5E5E5"> the n52</font><font color="#CCCCCC"> 8:32</font><font color="#E5E5E5"> which is a notic</font>

264
00:13:14,189 --> 00:13:20,069
semiconductor 2.4 gigahertz chip and the

265
00:13:17,730 --> 00:13:22,020
cheap<font color="#E5E5E5"> that drives the</font><font color="#CCCCCC"> motor and so it's</font>

266
00:13:20,070 --> 00:13:26,040
basically<font color="#E5E5E5"> connected</font><font color="#CCCCCC"> to this connector</font>

267
00:13:22,020 --> 00:13:27,930
and that<font color="#CCCCCC"> goes to the</font><font color="#E5E5E5"> motor so</font><font color="#CCCCCC"> and I data</font>

268
00:13:26,040 --> 00:13:31,530
<font color="#CCCCCC">mind</font><font color="#E5E5E5"> the protocol</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> to communicate</font>

269
00:13:27,930 --> 00:13:35,430
<font color="#CCCCCC">with</font><font color="#E5E5E5"> these chips this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> basically a PWM</font>

270
00:13:31,530 --> 00:13:39,540
<font color="#E5E5E5">so</font><font color="#CCCCCC"> it pulls with modulation and I got</font>

271
00:13:35,430 --> 00:13:42,209
the<font color="#E5E5E5"> the main functions of this PCB so it</font>

272
00:13:39,540 --> 00:13:45,030
so<font color="#E5E5E5"> we are good to</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> yeah as I</font><font color="#CCCCCC"> said it</font>

273
00:13:42,210 --> 00:13:50,550
was quite amazing<font color="#CCCCCC"> and then we can go to</font>

274
00:13:45,030 --> 00:13:52,560
<font color="#E5E5E5">get the firmware so the NRF</font><font color="#CCCCCC"> 50 to</font><font color="#E5E5E5"> 832</font>

275
00:13:50,550 --> 00:13:54,750
contains some kind<font color="#CCCCCC"> of code there</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

276
00:13:52,560 --> 00:13:57,689
<font color="#E5E5E5">specific memory in it that's</font><font color="#CCCCCC"> saw the</font>

277
00:13:54,750 --> 00:14:01,200
<font color="#E5E5E5">program or some kind of code used to</font>

278
00:13:57,690 --> 00:14:05,070
create the ble device and manage the<font color="#CCCCCC"> log</font>

279
00:14:01,200 --> 00:14:07,440
<font color="#CCCCCC">- just to say it</font><font color="#E5E5E5"> very very simply so if</font>

280
00:14:05,070 --> 00:14:09,930
we get our<font color="#E5E5E5"> hands on this firmware we can</font>

281
00:14:07,440 --> 00:14:14,250
get a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> information</font><font color="#CCCCCC"> maybe some keys</font>

282
00:14:09,930 --> 00:14:15,569
maybe we can determine all these<font color="#E5E5E5"> smart</font>

283
00:14:14,250 --> 00:14:18,210
<font color="#E5E5E5">dock boards</font><font color="#CCCCCC"> maybe some kind of back</font>

284
00:14:15,570 --> 00:14:20,930
doors if you<font color="#E5E5E5"> can reverse engineer this</font>

285
00:14:18,210 --> 00:14:24,240
this firmware<font color="#E5E5E5"> so we are going to use a</font>

286
00:14:20,930 --> 00:14:27,150
<font color="#CCCCCC">web</font><font color="#E5E5E5"> very simple way to do this by using</font>

287
00:14:24,240 --> 00:14:30,180
the debugging interface previously<font color="#E5E5E5"> I</font>

288
00:14:27,150 --> 00:14:35,040
determined that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> 4-pin connector knew</font>

289
00:14:30,180 --> 00:14:37,140
this<font color="#CCCCCC"> nof</font><font color="#E5E5E5"> 52 chip is a debugging pot so</font>

290
00:14:35,040 --> 00:14:39,780
I'm going<font color="#E5E5E5"> to use it to extract with</font>

291
00:14:37,140 --> 00:14:41,370
firmware<font color="#CCCCCC"> I'm using it with</font><font color="#E5E5E5"> combined with</font>

292
00:14:39,780 --> 00:14:43,470
open the<font color="#E5E5E5"> CG which is a dedicated</font>

293
00:14:41,370 --> 00:14:46,380
<font color="#CCCCCC">software</font><font color="#E5E5E5"> you know open source software</font>

294
00:14:43,470 --> 00:14:49,500
<font color="#E5E5E5">only available on Linux and</font><font color="#CCCCCC"> Windows and</font>

295
00:14:46,380 --> 00:14:51,480
<font color="#E5E5E5">by using open</font><font color="#CCCCCC"> a CD I can just debug the</font>

296
00:14:49,500 --> 00:14:53,670
target and obviously<font color="#E5E5E5"> extract the</font>

297
00:14:51,480 --> 00:14:55,560
firmware back and get the from get my

298
00:14:53,670 --> 00:14:58,530
<font color="#E5E5E5">hands on the firmware because</font><font color="#CCCCCC"> there is</font>

299
00:14:55,560 --> 00:15:02,250
absolutely<font color="#CCCCCC"> no protection enabled on this</font>

300
00:14:58,530 --> 00:15:04,110
<font color="#E5E5E5">smart work so anyone can just get the</font>

301
00:15:02,250 --> 00:15:07,800
firmware back from the chip<font color="#CCCCCC"> so this is a</font>

302
00:15:04,110 --> 00:15:10,170
quite interesting<font color="#E5E5E5"> but sometimes you know</font>

303
00:15:07,800 --> 00:15:11,849
the<font color="#E5E5E5"> beginning is not enabled you don't</font>

304
00:15:10,170 --> 00:15:14,880
have access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> this kind of feature but</font>

305
00:15:11,850 --> 00:15:17,490
there is also another<font color="#CCCCCC"> feature</font><font color="#E5E5E5"> that may</font>

306
00:15:14,880 --> 00:15:18,960
be interesting which<font color="#E5E5E5"> is OTA</font><font color="#CCCCCC"> which stands</font>

307
00:15:17,490 --> 00:15:22,110
<font color="#CCCCCC">for over-the-air</font>

308
00:15:18,960 --> 00:15:24,840
and this is used usually used<font color="#E5E5E5"> to perform</font>

309
00:15:22,110 --> 00:15:28,980
updates of<font color="#E5E5E5"> the firmware for given device</font>

310
00:15:24,840 --> 00:15:29,950
<font color="#E5E5E5">so if we get if you find all the OTA</font>

311
00:15:28,980 --> 00:15:33,550
update works

312
00:15:29,950 --> 00:15:35,380
maybe we can<font color="#E5E5E5"> find on the server the the</font>

313
00:15:33,550 --> 00:15:39,639
content of the<font color="#CCCCCC"> firmware that</font><font color="#E5E5E5"> this big</font>

314
00:15:35,380 --> 00:15:42,760
you that's the OTA feature used to put

315
00:15:39,639 --> 00:15:45,670
it on the<font color="#E5E5E5"> device so this screenshot</font><font color="#CCCCCC"> I'm</font>

316
00:15:42,760 --> 00:15:48,660
showing you here is<font color="#CCCCCC"> the exact firmware</font>

317
00:15:45,670 --> 00:15:50,800
the ODF function feature of the

318
00:15:48,660 --> 00:15:54,490
smartphone application<font color="#CCCCCC"> that</font><font color="#E5E5E5"> came with</font>

319
00:15:50,800 --> 00:15:57,839
with<font color="#E5E5E5"> this Montag is using to put in to</font>

320
00:15:54,490 --> 00:15:59,320
put<font color="#CCCCCC"> inside the device so but like it's</font>

321
00:15:57,839 --> 00:16:02,769
<font color="#E5E5E5">base64-encoded</font>

322
00:15:59,320 --> 00:16:04,480
<font color="#CCCCCC">but you can get it very easily</font><font color="#E5E5E5"> so based</font>

323
00:16:02,769 --> 00:16:06,760
on this<font color="#E5E5E5"> I got</font><font color="#CCCCCC"> to version of the firmware</font>

324
00:16:04,480 --> 00:16:09,970
of<font color="#CCCCCC"> 1x14</font><font color="#E5E5E5"> from the device itself and then</font>

325
00:16:06,760 --> 00:16:14,649
another one<font color="#E5E5E5"> extracted from the remote</font>

326
00:16:09,970 --> 00:16:17,500
server<font color="#CCCCCC"> so if you are if you don't</font><font color="#E5E5E5"> have</font>

327
00:16:14,649 --> 00:16:19,480
the OTA feature available or the<font color="#CCCCCC"> Batpod</font>

328
00:16:17,500 --> 00:16:22,930
<font color="#CCCCCC">you can learn every available storage</font>

329
00:16:19,480 --> 00:16:26,920
device so sometimes we got a<font color="#CCCCCC"> tht sub 48</font>

330
00:16:22,930 --> 00:16:29,380
flash chip and<font color="#E5E5E5"> we can chip off</font><font color="#CCCCCC"> I mean we</font>

331
00:16:26,920 --> 00:16:31,959
move the chip from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> PCB by this</font><font color="#CCCCCC"> old</font>

332
00:16:29,380 --> 00:16:34,149
using<font color="#E5E5E5"> some disallowing technics and then</font>

333
00:16:31,959 --> 00:16:37,779
dump the contents of this<font color="#E5E5E5"> this flash</font>

334
00:16:34,149 --> 00:16:39,370
chip anyway<font color="#E5E5E5"> at least at this moment you</font>

335
00:16:37,779 --> 00:16:41,680
<font color="#CCCCCC">will</font><font color="#E5E5E5"> get your hands on the firmware and</font>

336
00:16:39,370 --> 00:16:44,260
<font color="#E5E5E5">we can just have a look at the</font><font color="#CCCCCC"> Xcode</font>

337
00:16:41,680 --> 00:16:46,569
with a<font color="#E5E5E5"> nickel</font><font color="#CCCCCC"> DC model it is not to see</font>

338
00:16:44,260 --> 00:16:49,750
if the firmware means something to us

339
00:16:46,570 --> 00:16:53,589
<font color="#E5E5E5">and obviously the one</font><font color="#CCCCCC"> one very easy way</font>

340
00:16:49,750 --> 00:16:56,829
<font color="#E5E5E5">to do</font><font color="#CCCCCC"> this is to search for strings for</font>

341
00:16:53,589 --> 00:16:58,660
text strings<font color="#CCCCCC"> and here I guess we</font><font color="#E5E5E5"> get</font>

342
00:16:56,829 --> 00:17:00,399
<font color="#CCCCCC">something interesting because</font><font color="#E5E5E5"> we are</font>

343
00:16:58,660 --> 00:17:04,209
debugging<font color="#CCCCCC"> for machine</font><font color="#E5E5E5"> with the big</font>

344
00:17:00,399 --> 00:17:07,689
messages<font color="#E5E5E5"> so they are</font><font color="#CCCCCC"> a good</font><font color="#E5E5E5"> chance to we</font>

345
00:17:04,209 --> 00:17:11,790
get the quite firmware<font color="#E5E5E5"> extracted from</font>

346
00:17:07,689 --> 00:17:15,069
the device so when you're extracting

347
00:17:11,790 --> 00:17:18,609
information from some flash chips<font color="#E5E5E5"> you've</font>

348
00:17:15,069 --> 00:17:21,280
got to be<font color="#E5E5E5"> very careful because you will</font>

349
00:17:18,609 --> 00:17:23,409
get not only the<font color="#E5E5E5"> the data</font><font color="#CCCCCC"> stolen the</font>

350
00:17:21,280 --> 00:17:26,799
flash chips but also what they call

351
00:17:23,410 --> 00:17:30,340
spare our<font color="#E5E5E5"> spaded spare data this is</font>

352
00:17:26,799 --> 00:17:34,090
<font color="#E5E5E5">additional space</font><font color="#CCCCCC"> add added to the flash</font>

353
00:17:30,340 --> 00:17:37,629
<font color="#E5E5E5">memory storage to keep to get rid of</font>

354
00:17:34,090 --> 00:17:41,990
arrows<font color="#E5E5E5"> because flash chips usually prone</font>

355
00:17:37,630 --> 00:17:44,480
to errors<font color="#E5E5E5"> and they are using mainly</font><font color="#CCCCCC"> ECC</font>

356
00:17:41,990 --> 00:17:48,820
to fix this<font color="#E5E5E5"> several diseases or</font><font color="#CCCCCC"> some</font>

357
00:17:44,480 --> 00:17:51,559
kind of correcting codes and you got<font color="#E5E5E5"> to</font>

358
00:17:48,820 --> 00:17:54,860
to remove this<font color="#CCCCCC"> out-of-band data</font>

359
00:17:51,559 --> 00:17:58,520
<font color="#E5E5E5">disparity to start working</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

360
00:17:54,860 --> 00:18:00,979
flash<font color="#CCCCCC"> downstream and so I'm not going to</font>

361
00:17:58,520 --> 00:18:05,629
cover this extensively because<font color="#E5E5E5"> there are</font>

362
00:18:00,980 --> 00:18:08,660
many many many<font color="#E5E5E5"> cases in which which we</font>

363
00:18:05,630 --> 00:18:12,710
can be in trouble<font color="#E5E5E5"> with but in fact this</font>

364
00:18:08,660 --> 00:18:16,850
<font color="#E5E5E5">is</font><font color="#CCCCCC"> a step</font><font color="#E5E5E5"> your should not</font><font color="#CCCCCC"> forget to to</font>

365
00:18:12,710 --> 00:18:18,260
<font color="#E5E5E5">perform just after dumping</font><font color="#CCCCCC"> a flash based</font>

366
00:18:16,850 --> 00:18:20,899
on this we<font color="#CCCCCC"> are going</font><font color="#E5E5E5"> to determine the</font>

367
00:18:18,260 --> 00:18:23,750
<font color="#E5E5E5">target architecture</font><font color="#CCCCCC"> so the idea behind</font>

368
00:18:20,900 --> 00:18:26,000
this is to be able to determine<font color="#E5E5E5"> how the</font>

369
00:18:23,750 --> 00:18:28,910
<font color="#E5E5E5">targets work and basically</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to</font>

370
00:18:26,000 --> 00:18:31,010
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> ask you three</font><font color="#CCCCCC"> questions</font><font color="#E5E5E5"> the</font>

371
00:18:28,910 --> 00:18:34,130
first<font color="#E5E5E5"> one is what architecture is this</font>

372
00:18:31,010 --> 00:18:37,760
is this<font color="#CCCCCC"> a full operating system the I</font>

373
00:18:34,130 --> 00:18:39,740
<font color="#E5E5E5">mean</font><font color="#CCCCCC"> Linux embedded system</font><font color="#E5E5E5"> or is it what</font>

374
00:18:37,760 --> 00:18:41,840
we call<font color="#E5E5E5"> usually</font><font color="#CCCCCC"> called a dumb device</font><font color="#E5E5E5"> is</font>

375
00:18:39,740 --> 00:18:44,630
it based on microcontroller or<font color="#CCCCCC"> system</font>

376
00:18:41,840 --> 00:18:46,699
and<font color="#CCCCCC"> ship of very</font><font color="#E5E5E5"> basic</font><font color="#CCCCCC"> statement</font><font color="#E5E5E5"> chip so</font>

377
00:18:44,630 --> 00:18:50,059
does<font color="#E5E5E5"> it run on OS and does it use a file</font>

378
00:18:46,700 --> 00:18:51,530
system if it<font color="#E5E5E5"> uses a file</font><font color="#CCCCCC"> system we can</font>

379
00:18:50,059 --> 00:18:54,590
get the file system from the flash chip

380
00:18:51,530 --> 00:18:57,170
for instance so in my case for<font color="#E5E5E5"> the spot</font>

381
00:18:54,590 --> 00:19:01,189
<font color="#E5E5E5">log this is this is based on the arm</font>

382
00:18:57,170 --> 00:19:06,040
cortex-m<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> so this is on v7 - M</font>

383
00:19:01,190 --> 00:19:09,820
this is<font color="#E5E5E5"> CPU this device relies on and</font>

384
00:19:06,040 --> 00:19:12,800
that's it one analyst absolutely<font color="#E5E5E5"> not</font><font color="#CCCCCC"> you</font>

385
00:19:09,820 --> 00:19:16,460
<font color="#E5E5E5">cannot expect a Linux system on it you</font>

386
00:19:12,800 --> 00:19:19,790
cannot expect on some kind of<font color="#E5E5E5"> elf elf</font>

387
00:19:16,460 --> 00:19:21,760
executable<font color="#E5E5E5"> so the only thing you</font><font color="#CCCCCC"> are</font>

388
00:19:19,790 --> 00:19:25,428
going<font color="#E5E5E5"> to get is just a blob of data</font>

389
00:19:21,760 --> 00:19:29,179
based on<font color="#E5E5E5"> this so obviously</font><font color="#CCCCCC"> low fat</font>

390
00:19:25,429 --> 00:19:31,520
system at all<font color="#E5E5E5"> this is another story a</font>

391
00:19:29,179 --> 00:19:34,700
lot<font color="#E5E5E5"> of people are used</font><font color="#CCCCCC"> to analyze is</font>

392
00:19:31,520 --> 00:19:37,550
<font color="#CCCCCC">bleeding somebody device devices</font><font color="#E5E5E5"> by just</font>

393
00:19:34,700 --> 00:19:40,130
dumping<font color="#E5E5E5"> the flash get</font><font color="#CCCCCC"> the file system</font>

394
00:19:37,550 --> 00:19:41,899
back and analyze<font color="#E5E5E5"> all these binaries but</font>

395
00:19:40,130 --> 00:19:44,660
in fact this<font color="#E5E5E5"> is not the case in my</font>

396
00:19:41,900 --> 00:19:47,330
business model<font color="#CCCCCC"> we</font><font color="#E5E5E5"> get to to go deeper</font>

397
00:19:44,660 --> 00:19:51,169
<font color="#E5E5E5">just to get</font><font color="#CCCCCC"> or to get what we</font><font color="#E5E5E5"> need</font>

398
00:19:47,330 --> 00:19:53,360
so now<font color="#E5E5E5"> no file system and most</font>

399
00:19:51,169 --> 00:19:54,890
specifically since it's a nodding<font color="#CCCCCC"> so</font><font color="#E5E5E5"> a</font>

400
00:19:53,360 --> 00:19:56,629
conical shape<font color="#E5E5E5"> it's</font>

401
00:19:54,890 --> 00:20:00,110
based on what they called the soft

402
00:19:56,630 --> 00:20:02,720
<font color="#E5E5E5">device what's the button sub device this</font>

403
00:20:00,110 --> 00:20:05,600
<font color="#E5E5E5">is some kind of proprietary code that</font>

404
00:20:02,720 --> 00:20:09,730
Nordic semiconductor ships to developers

405
00:20:05,600 --> 00:20:12,740
<font color="#E5E5E5">that embeds a</font><font color="#CCCCCC"> BD stack so this is this</font>

406
00:20:09,730 --> 00:20:14,840
<font color="#E5E5E5">this code this sub device code that</font><font color="#CCCCCC"> will</font>

407
00:20:12,740 --> 00:20:17,510
<font color="#CCCCCC">endure all the petty stuff and the</font>

408
00:20:14,840 --> 00:20:20,139
application is<font color="#CCCCCC"> just</font><font color="#E5E5E5"> a sort of plug in to</font>

409
00:20:17,510 --> 00:20:22,820
this code and<font color="#E5E5E5"> the application is called</font>

410
00:20:20,140 --> 00:20:26,030
by<font color="#E5E5E5"> the sub device that acts like</font>

411
00:20:22,820 --> 00:20:27,950
<font color="#CCCCCC">bootloader</font><font color="#E5E5E5"> so first of all we need</font><font color="#CCCCCC"> to</font>

412
00:20:26,030 --> 00:20:29,960
get back<font color="#E5E5E5"> the version of</font><font color="#CCCCCC"> this sub device</font>

413
00:20:27,950 --> 00:20:32,240
<font color="#E5E5E5">since we have some</font><font color="#CCCCCC"> Czech strengths in</font>

414
00:20:29,960 --> 00:20:35,060
this<font color="#E5E5E5"> and this device it's very easy to</font>

415
00:20:32,240 --> 00:20:37,880
<font color="#E5E5E5">get the version of the</font><font color="#CCCCCC"> SDK have a look</font>

416
00:20:35,060 --> 00:20:40,010
at<font color="#E5E5E5"> this the slash shown such</font><font color="#CCCCCC"> Benoit's -</font>

417
00:20:37,880 --> 00:20:42,770
workspace<font color="#E5E5E5"> and our 51 from where as the</font>

418
00:20:40,010 --> 00:20:45,830
case you can see something<font color="#E5E5E5"> that oh</font><font color="#CCCCCC"> okay</font>

419
00:20:42,770 --> 00:20:48,410
I got a diversion so<font color="#CCCCCC"> next</font><font color="#E5E5E5"> step is good</font>

420
00:20:45,830 --> 00:20:50,240
to go<font color="#E5E5E5"> to the nautical semiconductor SDK</font>

421
00:20:48,410 --> 00:20:54,470
download page<font color="#E5E5E5"> and get the</font><font color="#CCCCCC"> correct</font>

422
00:20:50,240 --> 00:20:58,310
version<font color="#E5E5E5"> of it so</font><font color="#CCCCCC"> we are going to see</font>

423
00:20:54,470 --> 00:21:00,440
this in the next next step<font color="#E5E5E5"> so</font><font color="#CCCCCC"> just a</font>

424
00:20:58,310 --> 00:21:03,350
quick reminder<font color="#CCCCCC"> its if it runs on</font><font color="#E5E5E5"> the</font>

425
00:21:00,440 --> 00:21:06,230
waves or use<font color="#CCCCCC"> an on</font><font color="#E5E5E5"> file system you'd</font>

426
00:21:03,350 --> 00:21:08,840
better drop binaries<font color="#CCCCCC"> you're found</font><font color="#E5E5E5"> in</font>

427
00:21:06,230 --> 00:21:11,510
<font color="#E5E5E5">idiot-proof so it's a idea it's very</font>

428
00:21:08,840 --> 00:21:14,090
very useful photos and<font color="#E5E5E5"> we under this</font>

429
00:21:11,510 --> 00:21:17,660
<font color="#E5E5E5">very easily because there is metadata in</font>

430
00:21:14,090 --> 00:21:20,840
the<font color="#E5E5E5"> first indictable itself so this is</font>

431
00:21:17,660 --> 00:21:22,490
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> not the case</font><font color="#CCCCCC"> here and if you use</font>

432
00:21:20,840 --> 00:21:25,040
is<font color="#E5E5E5"> absent in no file system and looks</font>

433
00:21:22,490 --> 00:21:26,660
<font color="#E5E5E5">like a crappy blob of data you'd better</font>

434
00:21:25,040 --> 00:21:29,030
figure<font color="#CCCCCC"> out the architecture and memory</font>

435
00:21:26,660 --> 00:21:33,800
layout<font color="#E5E5E5"> and you get this from the data</font>

436
00:21:29,030 --> 00:21:39,200
sheets<font color="#E5E5E5"> once you get all of</font><font color="#CCCCCC"> this you can</font>

437
00:21:33,800 --> 00:21:42,560
<font color="#E5E5E5">disassemble the program the code that is</font>

438
00:21:39,200 --> 00:21:44,810
<font color="#E5E5E5">located in the the flash</font><font color="#CCCCCC"> that we made so</font>

439
00:21:42,560 --> 00:21:48,169
this is going<font color="#CCCCCC"> to be a bit rough but</font>

440
00:21:44,810 --> 00:21:51,560
<font color="#E5E5E5">anyway so to get this work and you get</font>

441
00:21:48,170 --> 00:21:54,140
to configure the CPU your<font color="#CCCCCC"> deals on the</font>

442
00:21:51,560 --> 00:21:56,270
<font color="#E5E5E5">software correctly in accordingly with</font>

443
00:21:54,140 --> 00:21:59,120
the<font color="#CCCCCC"> datasheet</font><font color="#E5E5E5"> so we saw that this</font><font color="#CCCCCC"> is</font>

444
00:21:56,270 --> 00:22:02,210
based on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> v7 so we are going to</font>

445
00:21:59,120 --> 00:22:04,820
use this<font color="#CCCCCC"> information we</font><font color="#E5E5E5"> get to to do</font>

446
00:22:02,210 --> 00:22:06,660
some<font color="#CCCCCC"> equality so this code and you get</font>

447
00:22:04,820 --> 00:22:09,990
to configure your memory<font color="#E5E5E5"> layout</font>

448
00:22:06,660 --> 00:22:13,169
if if it's required<font color="#CCCCCC"> in my</font><font color="#E5E5E5"> case there is</font>

449
00:22:09,990 --> 00:22:16,380
a sub device so if I<font color="#E5E5E5"> don't want to</font>

450
00:22:13,169 --> 00:22:19,410
<font color="#E5E5E5">analyze this</font><font color="#CCCCCC"> of device this is</font><font color="#E5E5E5"> not my</font>

451
00:22:16,380 --> 00:22:21,419
focus<font color="#E5E5E5"> on this this analysis so I'm going</font>

452
00:22:19,410 --> 00:22:23,370
to start<font color="#CCCCCC"> at the application level so if</font>

453
00:22:21,419 --> 00:22:25,500
you<font color="#E5E5E5"> remember well there is some kind of</font>

454
00:22:23,370 --> 00:22:28,080
soft device and application<font color="#CCCCCC"> area so I</font>

455
00:22:25,500 --> 00:22:30,299
got to get the<font color="#CCCCCC"> EPI peak and underscore</font>

456
00:22:28,080 --> 00:22:34,020
code<font color="#CCCCCC"> Alaska base which is</font><font color="#E5E5E5"> the address at</font>

457
00:22:30,299 --> 00:22:36,539
which<font color="#E5E5E5"> my first instruction mainly mostly</font>

458
00:22:34,020 --> 00:22:41,000
is a bit upset but I will find<font color="#E5E5E5"> my first</font>

459
00:22:36,539 --> 00:22:46,620
instruction so let's go it<font color="#E5E5E5"> we use</font>

460
00:22:41,000 --> 00:22:49,740
obviously<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> set up</font><font color="#E5E5E5"> the arm</font><font color="#CCCCCC"> vv7 so</font>

461
00:22:46,620 --> 00:22:54,090
this tiny<font color="#E5E5E5"> button</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> and then we can</font>

462
00:22:49,740 --> 00:22:56,669
set the<font color="#E5E5E5"> processor options and get</font><font color="#CCCCCC"> it to</font>

463
00:22:54,090 --> 00:22:59,220
<font color="#CCCCCC">disassemble</font><font color="#E5E5E5"> the code so is</font><font color="#CCCCCC"> the next</font>

464
00:22:56,669 --> 00:23:01,370
<font color="#CCCCCC">tract of</font><font color="#E5E5E5"> the digital code as you can see</font>

465
00:22:59,220 --> 00:23:04,950
there there are some string<font color="#CCCCCC"> references</font>

466
00:23:01,370 --> 00:23:07,949
<font color="#E5E5E5">in the code</font><font color="#CCCCCC"> so that means it means</font>

467
00:23:04,950 --> 00:23:10,559
something<font color="#E5E5E5"> this is not</font><font color="#CCCCCC"> a crappy code or</font>

468
00:23:07,950 --> 00:23:13,140
just<font color="#E5E5E5"> some kind</font><font color="#CCCCCC"> of bytes that has been</font>

469
00:23:10,559 --> 00:23:16,260
that have been disassembled<font color="#CCCCCC"> so it's a</font>

470
00:23:13,140 --> 00:23:18,539
quite interesting<font color="#E5E5E5"> and to automate this</font>

471
00:23:16,260 --> 00:23:21,330
this process we<font color="#CCCCCC"> developed many tools</font>

472
00:23:18,539 --> 00:23:23,520
just<font color="#E5E5E5"> to ease</font><font color="#CCCCCC"> the task of reverse</font>

473
00:23:21,330 --> 00:23:25,559
<font color="#CCCCCC">engineering and especially</font><font color="#E5E5E5"> for not</font><font color="#CCCCCC"> xml</font>

474
00:23:23,520 --> 00:23:27,270
<font color="#CCCCCC">connected devices</font><font color="#E5E5E5"> so we developed a</font>

475
00:23:25,559 --> 00:23:31,260
software going to show you very<font color="#CCCCCC"> quickly</font>

476
00:23:27,270 --> 00:23:33,840
how<font color="#CCCCCC"> it works to first be able to</font>

477
00:23:31,260 --> 00:23:37,230
<font color="#E5E5E5">determine this off to</font><font color="#CCCCCC"> the sdk version</font>

478
00:23:33,840 --> 00:23:39,330
<font color="#CCCCCC">and</font><font color="#E5E5E5"> subdivides version they are using so</font>

479
00:23:37,230 --> 00:23:42,059
it's based<font color="#E5E5E5"> on some kind</font><font color="#CCCCCC"> of signatures we</font>

480
00:23:39,330 --> 00:23:45,270
have a knowledge base we recreated<font color="#E5E5E5"> from</font>

481
00:23:42,059 --> 00:23:48,539
all the<font color="#E5E5E5"> versions of the SDK and then we</font>

482
00:23:45,270 --> 00:23:52,289
are<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to identify this</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> version</font>

483
00:23:48,539 --> 00:23:57,750
<font color="#CCCCCC">so basically you can see we got</font><font color="#E5E5E5"> the</font>

484
00:23:52,289 --> 00:23:59,460
version<font color="#CCCCCC"> 6.1</font><font color="#E5E5E5"> point</font><font color="#CCCCCC"> also on a 51 so this</font>

485
00:23:57,750 --> 00:24:00,990
is not the same firmware I'm using so

486
00:23:59,460 --> 00:24:03,990
this is this is<font color="#CCCCCC"> different but it's</font>

487
00:24:00,990 --> 00:24:06,270
normal<font color="#CCCCCC"> we use this this tool against</font>

488
00:24:03,990 --> 00:24:09,090
against this firmware<font color="#CCCCCC"> to go to</font><font color="#E5E5E5"> analyze</font>

489
00:24:06,270 --> 00:24:11,158
it<font color="#E5E5E5"> so indirectly when once we you get</font>

490
00:24:09,090 --> 00:24:14,668
all the<font color="#E5E5E5"> correct information you can just</font>

491
00:24:11,159 --> 00:24:17,220
<font color="#CCCCCC">put it in idea</font><font color="#E5E5E5"> put all the</font><font color="#CCCCCC"> ordered</font>

492
00:24:14,669 --> 00:24:20,820
<font color="#CCCCCC">information the assemble the code and</font>

493
00:24:17,220 --> 00:24:22,770
ask our<font color="#CCCCCC"> plugin to recover the names of</font>

494
00:24:20,820 --> 00:24:25,740
the functions<font color="#E5E5E5"> so if you have a</font><font color="#CCCCCC"> look at</font>

495
00:24:22,770 --> 00:24:28,230
the left of<font color="#E5E5E5"> the screen it's written in</font>

496
00:24:25,740 --> 00:24:31,080
<font color="#E5E5E5">Chinese a tiny phone but it's a service</font>

497
00:24:28,230 --> 00:24:34,620
called something and by<font color="#CCCCCC"> executing</font><font color="#E5E5E5"> your</font>

498
00:24:31,080 --> 00:24:37,500
<font color="#E5E5E5">plugin we get all the function exported</font>

499
00:24:34,620 --> 00:24:40,799
by<font color="#E5E5E5"> this of device so it's very easy next</font>

500
00:24:37,500 --> 00:24:43,500
to search for<font color="#CCCCCC"> cross references</font><font color="#E5E5E5"> and then</font>

501
00:24:40,799 --> 00:24:47,280
reverse engineer the application so this

502
00:24:43,500 --> 00:24:48,690
<font color="#E5E5E5">is available</font><font color="#CCCCCC"> on github of course it's</font>

503
00:24:47,280 --> 00:24:51,090
also interesting<font color="#E5E5E5"> to have a</font><font color="#CCCCCC"> look at the</font>

504
00:24:48,690 --> 00:24:54,150
mobile<font color="#E5E5E5"> applications</font><font color="#CCCCCC"> too if you want to</font>

505
00:24:51,090 --> 00:24:55,918
<font color="#E5E5E5">get some</font><font color="#CCCCCC"> information about the signature</font>

506
00:24:54,150 --> 00:24:58,080
of the farmer used in the small talk so

507
00:24:55,919 --> 00:24:58,919
it's a quite<font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> to to</font><font color="#CCCCCC"> details</font>

508
00:24:58,080 --> 00:25:01,408
<font color="#CCCCCC">about everything</font>

509
00:24:58,919 --> 00:25:06,780
the more<font color="#CCCCCC"> information you get</font><font color="#E5E5E5"> you you you</font>

510
00:25:01,409 --> 00:25:12,120
will<font color="#E5E5E5"> have the know the</font><font color="#CCCCCC"> the analysis will</font>

511
00:25:06,780 --> 00:25:16,168
be and step<font color="#CCCCCC"> 7 sleeve all the things get</font>

512
00:25:12,120 --> 00:25:19,500
a lot of information<font color="#E5E5E5"> so basically</font><font color="#CCCCCC"> are we</font>

513
00:25:16,169 --> 00:25:21,900
how do we<font color="#CCCCCC"> perform this you may need a</font>

514
00:25:19,500 --> 00:25:25,200
virus out where especially<font color="#CCCCCC"> if you try</font><font color="#E5E5E5"> to</font>

515
00:25:21,900 --> 00:25:28,169
sniff<font color="#CCCCCC"> electronics protocol I mean SPI</font><font color="#E5E5E5"> I</font>

516
00:25:25,200 --> 00:25:32,340
to see which Intel chip communication

517
00:25:28,169 --> 00:25:34,890
protocols so it's sometimes<font color="#E5E5E5"> you get to</font>

518
00:25:32,340 --> 00:25:38,189
be able to sniff<font color="#CCCCCC"> ready devices really</font>

519
00:25:34,890 --> 00:25:40,320
protocols<font color="#E5E5E5"> so you also may need</font><font color="#CCCCCC"> some</font>

520
00:25:38,190 --> 00:25:44,640
dedicated<font color="#E5E5E5"> hardware such as the uber</font>

521
00:25:40,320 --> 00:25:48,210
tooth<font color="#E5E5E5"> btle</font><font color="#CCCCCC"> or maybe some</font><font color="#E5E5E5"> of the tools</font>

522
00:25:44,640 --> 00:25:50,400
such as the one we developed with a

523
00:25:48,210 --> 00:25:53,240
digital<font color="#CCCCCC"> security</font><font color="#E5E5E5"> which which</font><font color="#CCCCCC"> is called a</font>

524
00:25:50,400 --> 00:25:56,429
bitter juice<font color="#E5E5E5"> I know some</font><font color="#CCCCCC"> people here</font>

525
00:25:53,240 --> 00:26:00,419
went with the<font color="#E5E5E5"> to stop Emile's trainings</font>

526
00:25:56,429 --> 00:26:03,059
<font color="#E5E5E5">maybe the</font><font color="#CCCCCC"> Autobot</font><font color="#E5E5E5"> Gattaca</font><font color="#CCCCCC"> which is</font>

527
00:26:00,419 --> 00:26:06,990
<font color="#E5E5E5">another tool obviously mine didn't</font><font color="#CCCCCC"> work</font>

528
00:26:03,059 --> 00:26:09,389
<font color="#CCCCCC">during the training yeah ok but</font><font color="#E5E5E5"> anyway</font>

529
00:26:06,990 --> 00:26:12,480
this is<font color="#E5E5E5"> a way to perform</font><font color="#CCCCCC"> this really</font>

530
00:26:09,390 --> 00:26:14,990
really sniffing and<font color="#CCCCCC"> very analysis on</font>

531
00:26:12,480 --> 00:26:18,059
this on<font color="#E5E5E5"> this device so this is what I</font>

532
00:26:14,990 --> 00:26:20,539
what I what I did on this device<font color="#E5E5E5"> to to</font>

533
00:26:18,059 --> 00:26:23,010
get<font color="#E5E5E5"> all of this and it allowed me</font><font color="#CCCCCC"> to</font>

534
00:26:20,539 --> 00:26:24,330
understand<font color="#E5E5E5"> all the device works and all</font>

535
00:26:23,010 --> 00:26:27,000
the communication works between<font color="#E5E5E5"> the</font>

536
00:26:24,330 --> 00:26:29,299
application and the device<font color="#E5E5E5"> itself so</font>

537
00:26:27,000 --> 00:26:30,530
basically<font color="#E5E5E5"> well you can see here that</font>

538
00:26:29,299 --> 00:26:33,440
you can see that is<font color="#E5E5E5"> the application</font>

539
00:26:30,530 --> 00:26:37,549
<font color="#CCCCCC">which weaves in once</font><font color="#E5E5E5"> from the lock which</font>

540
00:26:33,440 --> 00:26:40,370
<font color="#CCCCCC">is basically used for other</font><font color="#E5E5E5"> crypto then</font>

541
00:26:37,549 --> 00:26:43,010
the app encrypts a token based on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> N</font>

542
00:26:40,370 --> 00:26:45,770
once and the data itself which is a

543
00:26:43,010 --> 00:26:47,809
token<font color="#E5E5E5"> sent to the lock to open it or</font>

544
00:26:45,770 --> 00:26:49,908
close it and then the lock<font color="#E5E5E5"> decrees a</font>

545
00:26:47,809 --> 00:26:51,950
token and<font color="#E5E5E5"> react accordingly so if we ask</font>

546
00:26:49,909 --> 00:26:56,570
the lock to open<font color="#E5E5E5"> it would happen if you</font>

547
00:26:51,950 --> 00:26:58,789
token is valid and if you ask the this

548
00:26:56,570 --> 00:27:02,389
<font color="#CCCCCC">monitor to close it will</font><font color="#E5E5E5"> close if that</font>

549
00:26:58,789 --> 00:27:04,250
icon is still valid<font color="#E5E5E5"> so it's not that</font>

550
00:27:02,390 --> 00:27:07,610
complex<font color="#CCCCCC"> but it's quite interesting</font>

551
00:27:04,250 --> 00:27:10,940
<font color="#E5E5E5">because if you</font><font color="#CCCCCC"> have a look</font><font color="#E5E5E5"> at the this</font>

552
00:27:07,610 --> 00:27:13,908
system<font color="#E5E5E5"> the cryptographic system is well</font>

553
00:27:10,940 --> 00:27:17,600
designed well<font color="#E5E5E5"> thought if you should see</font>

554
00:27:13,909 --> 00:27:21,110
what I mean it's it avoids normally

555
00:27:17,600 --> 00:27:23,658
<font color="#E5E5E5">replay attacks by the way if you have a</font>

556
00:27:21,110 --> 00:27:26,389
look<font color="#E5E5E5"> at the mobile application we</font><font color="#CCCCCC"> can</font>

557
00:27:23,659 --> 00:27:29,630
<font color="#E5E5E5">see that this application</font><font color="#CCCCCC"> detects</font><font color="#E5E5E5"> in the</font>

558
00:27:26,390 --> 00:27:32,330
small talk<font color="#E5E5E5"> only based on the service UID</font>

559
00:27:29,630 --> 00:27:37,150
<font color="#E5E5E5">so this is there is absolutely no</font>

560
00:27:32,330 --> 00:27:40,939
Bluetooth address or the first name that

561
00:27:37,150 --> 00:27:43,370
<font color="#E5E5E5">is it you know to to determine to find</font>

562
00:27:40,940 --> 00:27:45,500
the<font color="#E5E5E5"> device just service you</font><font color="#CCCCCC"> ready that</font>

563
00:27:43,370 --> 00:27:47,539
<font color="#E5E5E5">means if you stop the</font><font color="#CCCCCC"> application and</font>

564
00:27:45,500 --> 00:27:51,110
<font color="#E5E5E5">there is another</font><font color="#CCCCCC"> lock of the same</font><font color="#E5E5E5"> ground</font>

565
00:27:47,539 --> 00:27:52,940
<font color="#E5E5E5">or</font><font color="#CCCCCC"> selves and all around</font><font color="#E5E5E5"> you can your</font>

566
00:27:51,110 --> 00:27:56,000
application will connect to this to this

567
00:27:52,940 --> 00:27:59,510
<font color="#E5E5E5">lock</font><font color="#CCCCCC"> and then we can find</font><font color="#E5E5E5"> bugs and</font>

568
00:27:56,000 --> 00:28:01,700
varieties obviously for many embedded

569
00:27:59,510 --> 00:28:05,210
devices<font color="#E5E5E5"> we can look for</font><font color="#CCCCCC"> different</font>

570
00:28:01,700 --> 00:28:07,780
passwords and keys<font color="#CCCCCC"> so this is low</font>

571
00:28:05,210 --> 00:28:10,100
<font color="#CCCCCC">hanging</font><font color="#E5E5E5"> fruit you can get very</font><font color="#CCCCCC"> easily on</font>

572
00:28:07,780 --> 00:28:11,918
embedded Linux<font color="#CCCCCC"> system</font><font color="#E5E5E5"> for instance well</font>

573
00:28:10,100 --> 00:28:15,168
Scriptures the scriptures are good<font color="#E5E5E5"> too</font>

574
00:28:11,919 --> 00:28:17,720
sometimes<font color="#CCCCCC"> before the</font><font color="#E5E5E5"> flows but it's more</font>

575
00:28:15,169 --> 00:28:21,860
<font color="#CCCCCC">difficult to explore it so usually we</font>

576
00:28:17,720 --> 00:28:24,559
prefer to<font color="#E5E5E5"> rely on the</font><font color="#CCCCCC"> two first type of</font>

577
00:28:21,860 --> 00:28:26,570
<font color="#E5E5E5">venality</font><font color="#CCCCCC"> also this configuration</font><font color="#E5E5E5"> and so</font>

578
00:28:24,559 --> 00:28:29,799
on but yeah we don't have<font color="#E5E5E5"> any</font><font color="#CCCCCC"> third</font>

579
00:28:26,570 --> 00:28:33,710
<font color="#E5E5E5">system any operating system so we need</font>

580
00:28:29,799 --> 00:28:37,639
to go<font color="#E5E5E5"> deeper and the analysis to to get</font>

581
00:28:33,710 --> 00:28:39,649
something<font color="#CCCCCC"> variable</font><font color="#E5E5E5"> so to summarize this</font>

582
00:28:37,640 --> 00:28:41,549
<font color="#CCCCCC">dispel box it relies on anyone's the</font>

583
00:28:39,649 --> 00:28:44,729
<font color="#CCCCCC">generative as a smartlock</font><font color="#E5E5E5"> to avoid</font>

584
00:28:41,549 --> 00:28:47,279
<font color="#E5E5E5">tax so this is a one point second point</font>

585
00:28:44,730 --> 00:28:49,369
<font color="#E5E5E5">it's correctly implemented this is true</font>

586
00:28:47,279 --> 00:28:53,460
AES based encryption using<font color="#CCCCCC"> announce</font>

587
00:28:49,369 --> 00:28:54,899
<font color="#E5E5E5">anyone so it's quite interesting</font><font color="#CCCCCC"> I was</font>

588
00:28:53,460 --> 00:28:58,499
not able<font color="#E5E5E5"> to break the encryption process</font>

589
00:28:54,899 --> 00:29:01,619
<font color="#E5E5E5">so this this</font><font color="#CCCCCC"> is quite</font><font color="#E5E5E5"> implemented and it</font>

590
00:28:58,499 --> 00:29:04,230
resisted to facing<font color="#E5E5E5"> I</font><font color="#CCCCCC"> try</font><font color="#E5E5E5"> to further all</font>

591
00:29:01,619 --> 00:29:07,590
the the old protocol<font color="#CCCCCC"> just to see if I</font>

592
00:29:04,230 --> 00:29:10,440
can trigger a<font color="#E5E5E5"> false open to the lock I</font>

593
00:29:07,590 --> 00:29:13,889
mean if usually smart dogs have a fail

594
00:29:10,440 --> 00:29:15,749
<font color="#E5E5E5">open policy that means if something was</font>

595
00:29:13,889 --> 00:29:19,949
<font color="#CCCCCC">wrong with</font><font color="#E5E5E5"> the firmware the smart dog</font>

596
00:29:15,749 --> 00:29:22,440
opens<font color="#E5E5E5"> you know why not so by</font><font color="#CCCCCC"> testing the</font>

597
00:29:19,950 --> 00:29:26,340
protocol it's a way<font color="#E5E5E5"> to find this but</font>

598
00:29:22,440 --> 00:29:29,399
<font color="#E5E5E5">this didn't work at all but I stumbled</font>

599
00:29:26,340 --> 00:29:31,918
upon a<font color="#E5E5E5"> very interesting thing when I was</font>

600
00:29:29,399 --> 00:29:35,100
reverse engineering the software which

601
00:29:31,919 --> 00:29:38,340
is and the communication<font color="#CCCCCC"> itself which is</font>

602
00:29:35,100 --> 00:29:41,129
that the N<font color="#E5E5E5"> once doesn't seem very random</font>

603
00:29:38,340 --> 00:29:44,850
to me so if<font color="#E5E5E5"> you have a look</font><font color="#CCCCCC"> at the code</font>

604
00:29:41,129 --> 00:29:49,049
is<font color="#E5E5E5"> just one and you can see</font><font color="#CCCCCC"> the same</font>

605
00:29:44,850 --> 00:29:51,418
thing<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> VLE communication so it</font>

606
00:29:49,049 --> 00:29:54,029
normally<font color="#CCCCCC"> this is a random value</font>

607
00:29:51,419 --> 00:29:58,190
generated to avoid replay attacks but

608
00:29:54,029 --> 00:30:00,809
since it's<font color="#CCCCCC"> 1 and 1</font><font color="#E5E5E5"> again we can just</font>

609
00:29:58,190 --> 00:30:03,090
<font color="#E5E5E5">leave some kind of communication and get</font>

610
00:30:00,809 --> 00:30:04,259
encrypted token and we play it<font color="#E5E5E5"> so this</font>

611
00:30:03,090 --> 00:30:07,769
<font color="#CCCCCC">is</font><font color="#E5E5E5"> very interesting</font>

612
00:30:04,259 --> 00:30:11,909
well I guess the developer<font color="#CCCCCC"> rather maybe</font>

613
00:30:07,769 --> 00:30:15,029
<font color="#E5E5E5">xkcd too much but just of throw dice I</font>

614
00:30:11,909 --> 00:30:17,340
don't know<font color="#E5E5E5"> but</font><font color="#CCCCCC"> we got many security</font>

615
00:30:15,029 --> 00:30:19,200
issues with this<font color="#CCCCCC"> mailbox</font><font color="#E5E5E5"> first one is we</font>

616
00:30:17,340 --> 00:30:21,449
can spoof this<font color="#CCCCCC"> mouth work you can create</font>

617
00:30:19,200 --> 00:30:23,909
<font color="#E5E5E5">a fixed monologue that looks like the</font>

618
00:30:21,450 --> 00:30:26,100
<font color="#CCCCCC">original one</font><font color="#E5E5E5"> since the application</font><font color="#CCCCCC"> does</font>

619
00:30:23,909 --> 00:30:28,859
not authenticate the<font color="#CCCCCC"> Smalltalk it</font>

620
00:30:26,100 --> 00:30:32,219
connects to so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a first step and</font>

621
00:30:28,859 --> 00:30:34,590
<font color="#E5E5E5">next step random and once is not random</font>

622
00:30:32,220 --> 00:30:37,710
at<font color="#CCCCCC"> all so we can predict this value and</font>

623
00:30:34,590 --> 00:30:39,359
use it to perform<font color="#E5E5E5"> a replay</font><font color="#CCCCCC"> attack so</font>

624
00:30:37,710 --> 00:30:42,419
that<font color="#CCCCCC"> acum is</font><font color="#E5E5E5"> put a spammer very easily</font>

625
00:30:39,359 --> 00:30:45,119
<font color="#E5E5E5">and be able will be able to replay this</font>

626
00:30:42,419 --> 00:30:47,460
<font color="#CCCCCC">token so come on let's go</font><font color="#E5E5E5"> let's exploit</font>

627
00:30:45,119 --> 00:30:50,428
this<font color="#CCCCCC"> these new operators so how to</font>

628
00:30:47,460 --> 00:30:53,730
exploit it this<font color="#E5E5E5"> rabbit is step 9</font>

629
00:30:50,429 --> 00:30:55,030
we use<font color="#E5E5E5"> a dedicated software and very</font>

630
00:30:53,730 --> 00:30:56,650
specific

631
00:30:55,030 --> 00:31:00,040
tools to export this<font color="#CCCCCC"> job is it solve the</font>

632
00:30:56,650 --> 00:31:03,220
first<font color="#E5E5E5"> one is the</font><font color="#CCCCCC"> linear library written</font>

633
00:31:00,040 --> 00:31:07,870
<font color="#CCCCCC">for not GS</font><font color="#E5E5E5"> which is a very nifty way to</font>

634
00:31:03,220 --> 00:31:09,940
to<font color="#E5E5E5"> perform to emulate</font><font color="#CCCCCC"> 3d</font><font color="#E5E5E5"> devices and I</font>

635
00:31:07,870 --> 00:31:11,889
developed<font color="#CCCCCC"> an exploit based on local</font>

636
00:31:09,940 --> 00:31:15,280
<font color="#E5E5E5">library which is a library based on</font>

637
00:31:11,890 --> 00:31:18,010
<font color="#CCCCCC">Bellino</font><font color="#E5E5E5"> that is all the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> you</font>

638
00:31:15,280 --> 00:31:20,649
<font color="#CCCCCC">don't have to write too much GS to get</font>

639
00:31:18,010 --> 00:31:23,680
it working so again this is some kind of

640
00:31:20,650 --> 00:31:25,930
code you can find on our<font color="#E5E5E5"> github so</font>

641
00:31:23,680 --> 00:31:27,670
anyway<font color="#E5E5E5"> first first step we are also</font>

642
00:31:25,930 --> 00:31:29,350
going to suppose<font color="#CCCCCC"> this map log</font><font color="#E5E5E5"> and next</font>

643
00:31:27,670 --> 00:31:32,440
<font color="#E5E5E5">step we are</font><font color="#CCCCCC"> going to replace the token</font>

644
00:31:29,350 --> 00:31:35,649
so everything was<font color="#E5E5E5"> written in JavaScript</font>

645
00:31:32,440 --> 00:31:37,150
with node.js so basically we are mocking

646
00:31:35,650 --> 00:31:39,400
the device because creating your fake

647
00:31:37,150 --> 00:31:40,960
device the application<font color="#E5E5E5"> will connect to</font>

648
00:31:39,400 --> 00:31:45,010
the device we<font color="#E5E5E5"> are going to send the</font>

649
00:31:40,960 --> 00:31:47,350
<font color="#CCCCCC">anyone's we obviously know the value 1</font>

650
00:31:45,010 --> 00:31:49,210
<font color="#E5E5E5">and get the encrypted token back and</font>

651
00:31:47,350 --> 00:31:51,760
then we are<font color="#E5E5E5"> going to replay this token</font>

652
00:31:49,210 --> 00:31:54,310
to the smart<font color="#E5E5E5"> lock just to make</font><font color="#CCCCCC"> sure the</font>

653
00:31:51,760 --> 00:31:56,800
the process of<font color="#E5E5E5"> opening the</font><font color="#CCCCCC"> lock or</font>

654
00:31:54,310 --> 00:31:59,560
closing<font color="#E5E5E5"> the locker is a went well</font>

655
00:31:56,800 --> 00:32:02,560
<font color="#CCCCCC">for the user in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> to be true to stay</font>

656
00:31:59,560 --> 00:32:05,889
stealth<font color="#E5E5E5"> and then we are going to replay</font>

657
00:32:02,560 --> 00:32:09,330
it<font color="#CCCCCC"> again and again</font><font color="#E5E5E5"> and again so let's</font>

658
00:32:05,890 --> 00:32:12,520
have a look at at<font color="#E5E5E5"> this attack so I</font>

659
00:32:09,330 --> 00:32:14,889
developed a very<font color="#E5E5E5"> small exploit so it is</font>

660
00:32:12,520 --> 00:32:17,080
based on<font color="#E5E5E5"> the token store and on the</font>

661
00:32:14,890 --> 00:32:20,860
<font color="#E5E5E5">first establish which is called talk in</font>

662
00:32:17,080 --> 00:32:25,210
the JSON<font color="#E5E5E5"> and I'm using a small</font><font color="#CCCCCC"> shell</font>

663
00:32:20,860 --> 00:32:27,610
script<font color="#E5E5E5"> everything so I'm creating</font><font color="#CCCCCC"> a mock</font>

664
00:32:25,210 --> 00:32:28,270
device effect device for the application

665
00:32:27,610 --> 00:32:31,929
to<font color="#CCCCCC"> connect to</font>

666
00:32:28,270 --> 00:32:35,220
so obviously the smart block is active

667
00:32:31,930 --> 00:32:39,160
<font color="#CCCCCC">right any</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> phone</font><font color="#E5E5E5"> that the phone</font>

668
00:32:35,220 --> 00:32:41,200
connector to my fake device rather<font color="#E5E5E5"> than</font>

669
00:32:39,160 --> 00:32:45,460
the<font color="#CCCCCC"> original one then I get the token</font>

670
00:32:41,200 --> 00:32:48,340
<font color="#E5E5E5">replay it and the</font><font color="#CCCCCC"> smart</font><font color="#E5E5E5"> opens and the</font>

671
00:32:45,460 --> 00:32:50,620
fun<font color="#CCCCCC"> part in this can we play it again</font>

672
00:32:48,340 --> 00:32:52,240
and<font color="#E5E5E5"> again</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> and make the spot</font>

673
00:32:50,620 --> 00:32:54,280
occupant again and again and again<font color="#CCCCCC"> and</font>

674
00:32:52,240 --> 00:32:57,730
so<font color="#CCCCCC"> on</font><font color="#E5E5E5"> so once</font><font color="#CCCCCC"> an attacker</font>

675
00:32:54,280 --> 00:33:00,220
<font color="#E5E5E5">get this this token or capture this</font>

676
00:32:57,730 --> 00:33:04,170
token it will be able<font color="#E5E5E5"> to replay</font><font color="#CCCCCC"> it and</font>

677
00:33:00,220 --> 00:33:07,300
make the lock open whatever<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> so</font>

678
00:33:04,170 --> 00:33:08,110
basically<font color="#E5E5E5"> what we can call a crypto fail</font>

679
00:33:07,300 --> 00:33:10,200
because it's

680
00:33:08,110 --> 00:33:14,379
by the<font color="#E5E5E5"> implementation of the</font><font color="#CCCCCC"> N ones</font>

681
00:33:10,200 --> 00:33:15,490
<font color="#CCCCCC">random generation so this is quite</font>

682
00:33:14,380 --> 00:33:18,310
<font color="#CCCCCC">interesting</font>

683
00:33:15,490 --> 00:33:20,470
the more<font color="#E5E5E5"> interesting thing is that the</font>

684
00:33:18,310 --> 00:33:22,540
even though it<font color="#CCCCCC"> should an update to the</font>

685
00:33:20,470 --> 00:33:26,050
firmware<font color="#E5E5E5"> and I did the same with</font><font color="#CCCCCC"> this</font>

686
00:33:22,540 --> 00:33:27,879
update<font color="#CCCCCC"> I did a</font><font color="#E5E5E5"> complete reverse</font>

687
00:33:26,050 --> 00:33:31,210
engineering<font color="#E5E5E5"> of this this software and I</font>

688
00:33:27,880 --> 00:33:34,840
found that he corrected<font color="#CCCCCC"> it fixed this</font>

689
00:33:31,210 --> 00:33:39,430
<font color="#CCCCCC">velocity very very in a very</font><font color="#E5E5E5"> smart</font><font color="#CCCCCC"> way</font>

690
00:33:34,840 --> 00:33:42,120
so uses this<font color="#CCCCCC"> gate</font><font color="#E5E5E5"> grant value instead of</font>

691
00:33:39,430 --> 00:33:44,740
<font color="#E5E5E5">moving just</font><font color="#CCCCCC"> the value one in the</font>

692
00:33:42,120 --> 00:33:48,669
<font color="#CCCCCC">characteristic</font><font color="#E5E5E5"> but in fact it varies on</font>

693
00:33:44,740 --> 00:33:52,420
<font color="#CCCCCC">the</font><font color="#E5E5E5"> Ong peripheral that is</font><font color="#CCCCCC"> available in</font>

694
00:33:48,670 --> 00:33:56,730
the<font color="#CCCCCC"> logic some</font><font color="#E5E5E5"> iconic toe chip so I mean</font>

695
00:33:52,420 --> 00:34:00,060
<font color="#E5E5E5">it's it relies on the correct</font>

696
00:33:56,730 --> 00:34:03,160
pseudo-random number generator<font color="#CCCCCC"> which is</font>

697
00:34:00,060 --> 00:34:07,030
not<font color="#E5E5E5"> one that</font><font color="#CCCCCC"> a software</font><font color="#E5E5E5"> run that can be</font>

698
00:34:03,160 --> 00:34:09,820
<font color="#E5E5E5">flowed but obviously just the</font><font color="#CCCCCC"> way it</font>

699
00:34:07,030 --> 00:34:13,719
<font color="#CCCCCC">should be</font><font color="#E5E5E5"> done on this on this system so</font>

700
00:34:09,820 --> 00:34:17,860
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> quite</font><font color="#CCCCCC"> interesting to</font><font color="#E5E5E5"> me to see</font>

701
00:34:13,719 --> 00:34:20,139
<font color="#CCCCCC">that</font><font color="#E5E5E5"> vandals issued correct</font><font color="#CCCCCC"> fix valid</font>

702
00:34:17,860 --> 00:34:24,750
fix to this to this stuff so in

703
00:34:20,139 --> 00:34:28,929
conclusion<font color="#CCCCCC"> just to summarize all of this</font>

704
00:34:24,750 --> 00:34:32,440
<font color="#CCCCCC">this methodology</font><font color="#E5E5E5"> needs improvement</font><font color="#CCCCCC"> there</font>

705
00:34:28,929 --> 00:34:37,990
<font color="#CCCCCC">is enough space</font><font color="#E5E5E5"> for improvement I don't</font>

706
00:34:32,440 --> 00:34:41,550
pretend to to have created the<font color="#E5E5E5"> the best</font>

707
00:34:37,989 --> 00:34:45,699
methodology<font color="#E5E5E5"> we can get but in fact since</font>

708
00:34:41,550 --> 00:34:47,860
<font color="#CCCCCC">IOT is</font><font color="#E5E5E5"> a very a very wide field there</font>

709
00:34:45,699 --> 00:34:50,100
are<font color="#CCCCCC"> a lot a lot</font><font color="#E5E5E5"> of technologies there is</font>

710
00:34:47,860 --> 00:34:52,450
I don't<font color="#CCCCCC"> think there is only one solution</font>

711
00:34:50,100 --> 00:34:54,429
methodology that can<font color="#E5E5E5"> fit your needs</font>

712
00:34:52,449 --> 00:34:58,089
when you are trying<font color="#CCCCCC"> to analyze this</font>

713
00:34:54,429 --> 00:34:58,960
these devices but the one I<font color="#CCCCCC"> propose I</font>

714
00:34:58,090 --> 00:35:02,410
hope so

715
00:34:58,960 --> 00:35:05,020
<font color="#E5E5E5">will be a first</font><font color="#CCCCCC"> step</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the curated</font>

716
00:35:02,410 --> 00:35:10,180
methodology to another<font color="#CCCCCC"> 30 devices I know</font>

717
00:35:05,020 --> 00:35:12,430
rapid7 published the methodology well

718
00:35:10,180 --> 00:35:14,169
very<font color="#E5E5E5"> summarized of this mythology not</font>

719
00:35:12,430 --> 00:35:17,080
the complete methodology<font color="#E5E5E5"> but in fact</font>

720
00:35:14,170 --> 00:35:18,850
there<font color="#E5E5E5"> is space for improvements and the</font>

721
00:35:17,080 --> 00:35:20,869
cool stuff is that<font color="#E5E5E5"> the event of fixed</font>

722
00:35:18,850 --> 00:35:23,868
some<font color="#E5E5E5"> of the</font>

723
00:35:20,869 --> 00:35:25,519
I discovered not all of them you can

724
00:35:23,869 --> 00:35:29,210
still improve the device if you<font color="#E5E5E5"> want</font>

725
00:35:25,519 --> 00:35:31,848
since the anyone's generation is good

726
00:35:29,210 --> 00:35:34,069
<font color="#E5E5E5">you won't be able to perform some kind</font>

727
00:35:31,849 --> 00:35:37,549
of replay attacks<font color="#E5E5E5"> so in fact this is</font><font color="#CCCCCC"> a</font>

728
00:35:34,069 --> 00:35:40,940
this is<font color="#E5E5E5"> a phenomena</font><font color="#CCCCCC"> that still</font><font color="#E5E5E5"> exists</font>

729
00:35:37,549 --> 00:35:44,059
but this is not<font color="#E5E5E5"> very</font><font color="#CCCCCC"> critical so some</font>

730
00:35:40,940 --> 00:35:46,279
pro tips<font color="#CCCCCC"> to</font><font color="#E5E5E5"> you want to analyze IOT</font>

731
00:35:44,059 --> 00:35:47,989
stuff so first one take<font color="#E5E5E5"> your time and</font>

732
00:35:46,279 --> 00:35:50,900
account all the things a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people</font>

733
00:35:47,989 --> 00:35:52,969
<font color="#CCCCCC">just jumped on UART consoles or European</font>

734
00:35:50,900 --> 00:35:56,450
<font color="#CCCCCC">so just to see I got</font><font color="#E5E5E5"> the console in</font>

735
00:35:52,969 --> 00:35:59,109
school yeah but if you don't analyze

736
00:35:56,450 --> 00:36:02,299
correctly the PCB<font color="#E5E5E5"> you may miss something</font>

737
00:35:59,109 --> 00:36:04,989
<font color="#CCCCCC">maybe you may miss a critical phenomena</font>

738
00:36:02,299 --> 00:36:13,880
a very easy one<font color="#E5E5E5"> to to spot but if you</font>

739
00:36:04,989 --> 00:36:15,979
<font color="#CCCCCC">don't you may miss something</font><font color="#E5E5E5"> second read</font>

740
00:36:13,880 --> 00:36:17,809
data sheets carefully<font color="#E5E5E5"> there are a lot of</font>

741
00:36:15,979 --> 00:36:19,038
<font color="#E5E5E5">information</font><font color="#CCCCCC"> in data sheets and they are</font>

742
00:36:17,809 --> 00:36:22,009
all interesting

743
00:36:19,039 --> 00:36:25,190
<font color="#E5E5E5">most of them so if you take some time</font><font color="#CCCCCC"> to</font>

744
00:36:22,009 --> 00:36:27,680
<font color="#E5E5E5">read the data sheet</font><font color="#CCCCCC"> you will avoid a lot</font>

745
00:36:25,190 --> 00:36:29,479
of<font color="#CCCCCC"> trouble with the CPU architecture for</font>

746
00:36:27,680 --> 00:36:31,430
instance<font color="#CCCCCC"> or so on</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is very</font>

747
00:36:29,479 --> 00:36:33,348
important to to read data<font color="#E5E5E5"> sheets</font>

748
00:36:31,430 --> 00:36:38,109
<font color="#E5E5E5">carefully and to learn how to read</font><font color="#CCCCCC"> the -</font>

749
00:36:33,349 --> 00:36:41,690
<font color="#E5E5E5">it you know electronics</font><font color="#CCCCCC"> ingenious not</font>

750
00:36:38,109 --> 00:36:45,380
really<font color="#E5E5E5"> congenial mind doesn't doesn't</font>

751
00:36:41,690 --> 00:36:47,809
work like the<font color="#CCCCCC"> hacker mind this</font><font color="#E5E5E5"> is a bit</font>

752
00:36:45,380 --> 00:36:49,700
different<font color="#CCCCCC"> so if you want to</font><font color="#E5E5E5"> learn - OH -</font>

753
00:36:47,809 --> 00:36:52,960
muster<font color="#CCCCCC"> each scape if you want to make</font><font color="#E5E5E5"> a</font>

754
00:36:49,700 --> 00:36:55,879
better<font color="#E5E5E5"> drawing like me</font><font color="#CCCCCC"> attempt</font><font color="#E5E5E5"> so that</font>

755
00:36:52,960 --> 00:36:58,190
could be<font color="#E5E5E5"> your</font><font color="#CCCCCC"> sole</font><font color="#E5E5E5"> useful and the basic</font>

756
00:36:55,880 --> 00:37:01,160
idea from<font color="#E5E5E5"> this mythology so start</font><font color="#CCCCCC"> from</font>

757
00:36:58,190 --> 00:37:03,650
the PCB<font color="#CCCCCC"> from the bottom and go to the</font>

758
00:37:01,160 --> 00:37:04,729
<font color="#CCCCCC">software and the communications so again</font>

759
00:37:03,650 --> 00:37:06,710
as<font color="#CCCCCC"> usual</font>

760
00:37:04,729 --> 00:37:09,828
<font color="#CCCCCC">know your tools</font><font color="#E5E5E5"> and how to use them</font>

761
00:37:06,710 --> 00:37:13,130
<font color="#E5E5E5">create your own toolbox of your</font>

762
00:37:09,829 --> 00:37:15,680
preferred tools and use it and<font color="#E5E5E5"> obviously</font>

763
00:37:13,130 --> 00:37:21,819
share<font color="#E5E5E5"> and learn from others so you</font><font color="#CCCCCC"> can</font>

764
00:37:15,680 --> 00:37:24,769
get many cool treats<font color="#CCCCCC"> - to try and test</font>

765
00:37:21,819 --> 00:37:29,420
like this one<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know if you know</font>

766
00:37:24,769 --> 00:37:32,660
this<font color="#E5E5E5"> guide cyber</font><font color="#CCCCCC"> Gibbons so it was asked</font>

767
00:37:29,420 --> 00:37:34,860
a lot of<font color="#CCCCCC"> time on Twitter all - I was</font>

768
00:37:32,660 --> 00:37:38,759
<font color="#E5E5E5">doing this amazing photograph is</font>

769
00:37:34,860 --> 00:37:42,570
of<font color="#E5E5E5"> pcbs and the answer is just using an</font>

770
00:37:38,760 --> 00:37:45,450
<font color="#CCCCCC">Epson d600 scanner just an</font><font color="#E5E5E5"> optical</font>

771
00:37:42,570 --> 00:37:47,700
scanner<font color="#E5E5E5"> to to do this most</font><font color="#CCCCCC"> of some</font>

772
00:37:45,450 --> 00:37:51,149
people just take<font color="#CCCCCC"> pictures</font><font color="#E5E5E5"> from this with</font>

773
00:37:47,700 --> 00:37:53,850
a smartphone or camera<font color="#E5E5E5"> but in fact there</font>

774
00:37:51,150 --> 00:37:57,570
<font color="#E5E5E5">was an easy way</font><font color="#CCCCCC"> it cost only 300 euros</font>

775
00:37:53,850 --> 00:38:01,799
to<font color="#CCCCCC"> get this to buy the</font><font color="#E5E5E5"> scanner and it</font>

776
00:37:57,570 --> 00:38:04,520
works<font color="#CCCCCC"> very well</font><font color="#E5E5E5"> to do clean photography</font>

777
00:38:01,800 --> 00:38:07,710
so for instance and again<font color="#E5E5E5"> practice</font>

778
00:38:04,520 --> 00:38:10,530
practice a lot<font color="#CCCCCC"> this</font><font color="#E5E5E5"> ordering techniques</font>

779
00:38:07,710 --> 00:38:14,520
are not very<font color="#E5E5E5"> easy to master</font><font color="#CCCCCC"> you need to</font>

780
00:38:10,530 --> 00:38:17,910
<font color="#E5E5E5">a lot</font><font color="#CCCCCC"> of time to do a lot of lot of</font>

781
00:38:14,520 --> 00:38:19,710
practice<font color="#CCCCCC"> to get it done well</font><font color="#E5E5E5"> you know if</font>

782
00:38:17,910 --> 00:38:23,009
you try<font color="#CCCCCC"> to this order with the</font>

783
00:38:19,710 --> 00:38:27,480
especially<font color="#E5E5E5"> with the tarragon which is</font>

784
00:38:23,010 --> 00:38:29,610
used for<font color="#CCCCCC"> SMTP works</font><font color="#E5E5E5"> it's it's not easy</font>

785
00:38:27,480 --> 00:38:32,010
the first<font color="#CCCCCC"> time by doing this a lot</font><font color="#E5E5E5"> of</font>

786
00:38:29,610 --> 00:38:38,430
time it's<font color="#E5E5E5"> better and better and so on</font>

787
00:38:32,010 --> 00:38:40,820
<font color="#E5E5E5">again</font><font color="#CCCCCC"> use the</font><font color="#E5E5E5"> scope</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> scope is some</font>

788
00:38:38,430 --> 00:38:45,770
sometimes with some kind<font color="#E5E5E5"> of tools</font>

789
00:38:40,820 --> 00:38:49,500
usually<font color="#E5E5E5"> IT people don't don't know</font><font color="#CCCCCC"> about</font>

790
00:38:45,770 --> 00:38:52,050
it but it's a very useful tool<font color="#E5E5E5"> you can</font>

791
00:38:49,500 --> 00:38:53,730
see what<font color="#E5E5E5"> sings what the signals look</font>

792
00:38:52,050 --> 00:38:56,010
like<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> get a lot of information</font>

793
00:38:53,730 --> 00:38:56,880
<font color="#E5E5E5">from this from this</font><font color="#CCCCCC"> too so known until</font>

794
00:38:56,010 --> 00:38:59,880
<font color="#E5E5E5">you use an oscilloscope</font>

795
00:38:56,880 --> 00:39:05,640
<font color="#E5E5E5">if you get one it's a very very useful</font>

796
00:38:59,880 --> 00:39:08,430
tool<font color="#E5E5E5"> so not easy to get your hands on</font>

797
00:39:05,640 --> 00:39:11,040
and of course<font color="#E5E5E5"> and more importantly try</font>

798
00:39:08,430 --> 00:39:13,560
to code<font color="#E5E5E5"> or develop</font><font color="#CCCCCC"> automatic</font><font color="#E5E5E5"> devices</font><font color="#CCCCCC"> try</font>

799
00:39:11,040 --> 00:39:15,779
to learn the<font color="#CCCCCC"> engineers developing</font>

800
00:39:13,560 --> 00:39:19,560
software on the MIDI devices because you

801
00:39:15,780 --> 00:39:23,820
need to know<font color="#CCCCCC"> all they do all of this to</font>

802
00:39:19,560 --> 00:39:26,460
be<font color="#CCCCCC"> able to analyze it</font><font color="#E5E5E5"> it's such the same</font>

803
00:39:23,820 --> 00:39:27,840
energy a keyboard you can<font color="#E5E5E5"> do reverse</font>

804
00:39:26,460 --> 00:39:30,900
<font color="#E5E5E5">engineering</font><font color="#CCCCCC"> if you don't know</font><font color="#E5E5E5"> how to</font>

805
00:39:27,840 --> 00:39:34,380
code<font color="#E5E5E5"> basically well I will compiler</font>

806
00:39:30,900 --> 00:39:36,360
works for instance so<font color="#E5E5E5"> and if you follow</font>

807
00:39:34,380 --> 00:39:40,280
all<font color="#CCCCCC"> of this you will be</font><font color="#E5E5E5"> able to analyze</font>

808
00:39:36,360 --> 00:39:44,250
<font color="#CCCCCC">I guess a lot of IOT devices with</font>

809
00:39:40,280 --> 00:39:47,480
without<font color="#E5E5E5"> missing something so if you have</font>

810
00:39:44,250 --> 00:39:47,480
any questions

811
00:39:57,809 --> 00:40:02,640
anyone at the back

812
00:40:09,550 --> 00:40:15,610
<font color="#CCCCCC">Thanks thank you just a quickie</font><font color="#E5E5E5"> tuna but</font>

813
00:40:12,610 --> 00:40:17,380
<font color="#CCCCCC">architecture's a part for</font><font color="#E5E5E5"> our arm</font><font color="#CCCCCC"> do you</font>

814
00:40:15,610 --> 00:40:20,020
have<font color="#CCCCCC"> many</font><font color="#E5E5E5"> architecture you</font><font color="#CCCCCC"> want contour</font>

815
00:40:17,380 --> 00:40:22,420
in your reverse engineering project

816
00:40:20,020 --> 00:40:28,440
<font color="#E5E5E5">because I guess for IOT arm is really</font>

817
00:40:22,420 --> 00:40:33,640
predominant yeah<font color="#CCCCCC"> not only we got</font><font color="#E5E5E5"> maps</font>

818
00:40:28,440 --> 00:40:36,970
even<font color="#E5E5E5"> inter x86 for instance on some</font>

819
00:40:33,640 --> 00:40:38,859
devices<font color="#CCCCCC"> ok so you don't have to cut in</font>

820
00:40:36,970 --> 00:40:42,040
<font color="#E5E5E5">idea for example you don't have to</font>

821
00:40:38,860 --> 00:40:44,970
<font color="#E5E5E5">recode new processor you can just use</font>

822
00:40:42,040 --> 00:40:47,890
out of<font color="#E5E5E5"> the shelf</font><font color="#CCCCCC"> sometimes you</font><font color="#E5E5E5"> have to</font>

823
00:40:44,970 --> 00:40:50,290
<font color="#E5E5E5">create some dedicated fires for ID a</font>

824
00:40:47,890 --> 00:40:53,170
<font color="#E5E5E5">proof for instance but because the</font><font color="#CCCCCC"> cpu</font>

825
00:40:50,290 --> 00:40:55,120
is one thing but there was also a lot<font color="#CCCCCC"> of</font>

826
00:40:53,170 --> 00:40:58,000
stuff around it<font color="#E5E5E5"> such as a dedicated</font>

827
00:40:55,120 --> 00:41:00,700
peripherals specific registers mapped in

828
00:40:58,000 --> 00:41:02,560
memory so if<font color="#E5E5E5"> if it's not known from the</font>

829
00:41:00,700 --> 00:41:04,410
from you know<font color="#CCCCCC"> these assembler software</font>

830
00:41:02,560 --> 00:41:10,029
you<font color="#CCCCCC"> cannot</font><font color="#E5E5E5"> get this information</font><font color="#CCCCCC"> so</font>

831
00:41:04,410 --> 00:41:12,879
<font color="#CCCCCC">sometimes you need to to improve the</font><font color="#E5E5E5"> CPU</font>

832
00:41:10,030 --> 00:41:17,580
files used by<font color="#E5E5E5"> ID a</font><font color="#CCCCCC"> profile stands</font><font color="#E5E5E5"> to to</font>

833
00:41:12,880 --> 00:41:17,580
get it done<font color="#E5E5E5"> right</font><font color="#CCCCCC"> okay thank you</font>

834
00:41:30,880 --> 00:41:37,880
hi

835
00:41:33,830 --> 00:41:42,290
the question is related to<font color="#E5E5E5"> NRF 52</font><font color="#CCCCCC"> to 2</font>

836
00:41:37,880 --> 00:41:44,840
<font color="#E5E5E5">if the chipset which comes with CPR</font>

837
00:41:42,290 --> 00:41:47,720
protection<font color="#E5E5E5"> core protection read so how</font>

838
00:41:44,840 --> 00:41:49,940
we can<font color="#E5E5E5"> bypass</font><font color="#CCCCCC"> it's quite easy on the</font>

839
00:41:47,720 --> 00:41:54,020
Nordics<font color="#E5E5E5"> of microchip there is a bypass</font>

840
00:41:49,940 --> 00:41:57,260
<font color="#CCCCCC">non bypass to exploit it basically we</font>

841
00:41:54,020 --> 00:41:58,970
just the debugging interface<font color="#CCCCCC"> the cut</font><font color="#E5E5E5"> way</font>

842
00:41:57,260 --> 00:42:01,130
<font color="#E5E5E5">that protection is enabled on this this</font>

843
00:41:58,970 --> 00:42:03,379
chip<font color="#E5E5E5"> basically you cannot read the flash</font>

844
00:42:01,130 --> 00:42:05,030
from<font color="#CCCCCC"> the flash so if you're your if your</font>

845
00:42:03,380 --> 00:42:08,330
Isaac open<font color="#E5E5E5"> a CD for instant and use the</font>

846
00:42:05,030 --> 00:42:11,720
damp image command<font color="#E5E5E5"> it won't work</font><font color="#CCCCCC"> but if</font>

847
00:42:08,330 --> 00:42:13,940
you can use some kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> return oriented</font>

848
00:42:11,720 --> 00:42:17,390
<font color="#CCCCCC">programming technique by using your</font>

849
00:42:13,940 --> 00:42:19,670
registers<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think I have enough</font>

850
00:42:17,390 --> 00:42:22,100
<font color="#E5E5E5">time to explain</font><font color="#CCCCCC"> it in detail in details</font>

851
00:42:19,670 --> 00:42:23,450
but there is a bypass that can be used

852
00:42:22,100 --> 00:42:25,520
to extract the firmware<font color="#E5E5E5"> it takes more</font>

853
00:42:23,450 --> 00:42:28,640
time<font color="#CCCCCC"> to get it</font><font color="#E5E5E5"> but it's possible</font><font color="#CCCCCC"> but</font>

854
00:42:25,520 --> 00:42:32,380
it's possible on an RF 52 right 51<font color="#E5E5E5"> and</font>

855
00:42:28,640 --> 00:42:32,379
52<font color="#CCCCCC"> oh yes yeah thanks thanks</font>

856
00:42:38,910 --> 00:42:43,740
have you tested<font color="#E5E5E5"> any other devices where</font>

857
00:42:41,069 --> 00:42:45,960
you've come across<font color="#E5E5E5"> where</font><font color="#CCCCCC"> the Bluetooth</font>

858
00:42:43,740 --> 00:42:49,859
the nuance as part<font color="#CCCCCC"> of the Bluetooth</font>

859
00:42:45,960 --> 00:42:51,390
<font color="#E5E5E5">encryption was actually set badly like</font>

860
00:42:49,859 --> 00:42:53,250
that or is this<font color="#E5E5E5"> kind of one of the first</font>

861
00:42:51,390 --> 00:42:54,868
ones you've come across<font color="#CCCCCC"> I'm just trying</font>

862
00:42:53,250 --> 00:42:56,900
to<font color="#E5E5E5"> figure out how prevalent that is</font>

863
00:42:54,869 --> 00:43:02,609
<font color="#CCCCCC">we've got some devices that you're</font><font color="#E5E5E5"> the</font>

864
00:42:56,900 --> 00:43:04,619
pairing energy<font color="#CCCCCC"> protocol but it's more</font>

865
00:43:02,609 --> 00:43:06,769
<font color="#CCCCCC">difficult to sniff these</font><font color="#E5E5E5"> these</font>

866
00:43:04,619 --> 00:43:09,119
communications<font color="#E5E5E5"> because it's encrypted</font>

867
00:43:06,769 --> 00:43:12,058
<font color="#CCCCCC">sometimes you get</font><font color="#E5E5E5"> just works pairing</font>

868
00:43:09,119 --> 00:43:14,880
system pairing<font color="#CCCCCC"> used so it's easier to</font>

869
00:43:12,059 --> 00:43:16,710
sniff and crack the encryption and then

870
00:43:14,880 --> 00:43:19,859
decrypt<font color="#E5E5E5"> all the communication but in</font>

871
00:43:16,710 --> 00:43:23,069
<font color="#E5E5E5">fact we had to develop some dedicated</font>

872
00:43:19,859 --> 00:43:25,799
dedicated<font color="#E5E5E5"> hardware to get it so this</font><font color="#CCCCCC"> is</font>

873
00:43:23,069 --> 00:43:27,538
obviously<font color="#CCCCCC"> my</font><font color="#E5E5E5"> subject the subject of my</font>

874
00:43:25,799 --> 00:43:30,390
talk has submitted<font color="#E5E5E5"> at Def</font><font color="#CCCCCC"> Con this year</font>

875
00:43:27,539 --> 00:43:33,259
<font color="#E5E5E5">and got accepted so more</font><font color="#CCCCCC"> information to</font>

876
00:43:30,390 --> 00:43:33,259
come<font color="#E5E5E5"> at Def Con</font><font color="#CCCCCC"> yes</font>

877
00:43:40,720 --> 00:43:45,259
nice dog thank you

878
00:43:42,830 --> 00:43:47,930
<font color="#E5E5E5">my question was about</font><font color="#CCCCCC"> the methodology</font>

879
00:43:45,260 --> 00:43:50,359
and<font color="#CCCCCC"> the order of the steps step seven I</font>

880
00:43:47,930 --> 00:43:54,049
<font color="#CCCCCC">think was sniffing the traffic between</font>

881
00:43:50,359 --> 00:43:56,540
the<font color="#E5E5E5"> object and the application</font><font color="#CCCCCC"> my</font>

882
00:43:54,050 --> 00:43:59,270
question was more<font color="#E5E5E5"> why is this happening</font>

883
00:43:56,540 --> 00:44:02,420
<font color="#E5E5E5">at step seven and not earlier because in</font>

884
00:43:59,270 --> 00:44:04,670
this<font color="#E5E5E5"> case and it might be a modular case</font>

885
00:44:02,420 --> 00:44:07,280
but you could have retrieved the<font color="#E5E5E5"> knowns</font>

886
00:44:04,670 --> 00:44:11,119
probably from sniffing the network even

887
00:44:07,280 --> 00:44:20,119
<font color="#CCCCCC">without reversing</font><font color="#E5E5E5"> said why do you make</font>

888
00:44:11,119 --> 00:44:23,780
<font color="#E5E5E5">it this way</font><font color="#CCCCCC"> I wanted to have a</font><font color="#E5E5E5"> very good</font>

889
00:44:20,119 --> 00:44:25,670
idea<font color="#CCCCCC"> of the big</font><font color="#E5E5E5"> picture oh it works all</font>

890
00:44:23,780 --> 00:44:29,540
the other<font color="#E5E5E5"> components interact or</font>

891
00:44:25,670 --> 00:44:32,390
communicate<font color="#CCCCCC"> with you it shows</font><font color="#E5E5E5"> us so I</font>

892
00:44:29,540 --> 00:44:33,920
could have analyzed this this can be any

893
00:44:32,390 --> 00:44:35,390
<font color="#CCCCCC">communication and spotted this but I</font>

894
00:44:33,920 --> 00:44:40,310
<font color="#E5E5E5">won't I</font>

895
00:44:35,390 --> 00:44:43,970
I wouldn't be able to<font color="#E5E5E5"> tell that to say</font>

896
00:44:40,310 --> 00:44:47,810
<font color="#E5E5E5">that or to determine that the one value</font>

897
00:44:43,970 --> 00:44:52,220
used<font color="#E5E5E5"> very specific characters is</font>

898
00:44:47,810 --> 00:44:56,060
anyone's if didn't reverse<font color="#E5E5E5"> on the other</font>

899
00:44:52,220 --> 00:44:57,649
<font color="#E5E5E5">software so get get my getting my end on</font>

900
00:44:56,060 --> 00:45:00,910
the software<font color="#CCCCCC"> before analyzing</font>

901
00:44:57,650 --> 00:45:03,380
<font color="#E5E5E5">communications is for me</font><font color="#CCCCCC"> a good</font><font color="#E5E5E5"> way to</font>

902
00:45:00,910 --> 00:45:06,589
understand more precisely<font color="#E5E5E5"> all things</font>

903
00:45:03,380 --> 00:45:09,109
work<font color="#CCCCCC"> you know because if just analyzing</font>

904
00:45:06,589 --> 00:45:11,480
communication of course<font color="#CCCCCC"> you may find</font>

905
00:45:09,109 --> 00:45:14,029
something<font color="#E5E5E5"> final finality but you won't</font>

906
00:45:11,480 --> 00:45:16,849
be<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to tell why it's working so</font><font color="#E5E5E5"> the</font>

907
00:45:14,030 --> 00:45:22,580
the sniffing is the end zone and<font color="#CCCCCC"> the</font>

908
00:45:16,849 --> 00:45:25,190
<font color="#CCCCCC">framework is the</font><font color="#E5E5E5"> proof enough exactly I</font>

909
00:45:22,580 --> 00:45:27,259
was<font color="#E5E5E5"> about to say to the vendor</font><font color="#CCCCCC"> okay</font>

910
00:45:25,190 --> 00:45:29,480
there is a<font color="#CCCCCC"> vulnerability</font><font color="#E5E5E5"> this impacts</font>

911
00:45:27,260 --> 00:45:31,820
<font color="#CCCCCC">the N</font><font color="#E5E5E5"> once you are using and obviously</font>

912
00:45:29,480 --> 00:45:33,770
your code is wrong<font color="#E5E5E5"> because you are just</font>

913
00:45:31,820 --> 00:45:41,630
<font color="#CCCCCC">putting one</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> these characteristics</font>

914
00:45:33,770 --> 00:45:45,590
<font color="#CCCCCC">okay thanks it's ok no more question</font>

915
00:45:41,630 --> 00:45:45,590
thank your<font color="#E5E5E5"> old</font><font color="#CCCCCC"> foe</font><font color="#E5E5E5"> I kind of</font>

