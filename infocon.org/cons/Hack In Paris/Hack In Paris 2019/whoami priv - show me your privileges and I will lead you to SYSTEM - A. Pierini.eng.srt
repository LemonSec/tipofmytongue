1
00:00:05,569 --> 00:00:09,990
okay

2
00:00:06,839 --> 00:00:13,080
bonsoir twosome my name is Andrea peony

3
00:00:09,990 --> 00:00:14,760
and first of all I want to apologize for

4
00:00:13,080 --> 00:00:18,089
my bad english I'm much more comfortable

5
00:00:14,760 --> 00:00:20,820
for this French so I hope that you will

6
00:00:18,089 --> 00:00:23,429
understand what I'm talking I will talk

7
00:00:20,820 --> 00:00:25,710
very slow and I have only I know only

8
00:00:23,429 --> 00:00:27,990
few words of English but are these are

9
00:00:25,710 --> 00:00:32,520
technical that word so I I guess

10
00:00:27,990 --> 00:00:36,540
everyone is able to understand me first

11
00:00:32,520 --> 00:00:38,730
a little bit about me very short

12
00:00:36,540 --> 00:00:41,430
introduction yes that's me

13
00:00:38,730 --> 00:00:44,010
among the other things I am an IT

14
00:00:41,430 --> 00:00:47,280
architect and security manager I have a

15
00:00:44,010 --> 00:00:50,280
very long time experience I I think I'm

16
00:00:47,280 --> 00:00:53,340
one of the oldest here and IT security

17
00:00:50,280 --> 00:00:57,110
it has always been a very special

18
00:00:53,340 --> 00:01:00,270
interest for me to be honest

19
00:00:57,110 --> 00:01:02,760
offensive security it's much more an

20
00:01:00,270 --> 00:01:05,220
hobby for me and during my spare time I

21
00:01:02,760 --> 00:01:07,048
like to understand better the

22
00:01:05,220 --> 00:01:15,270
vulnerabilities of Windows and Linux

23
00:01:07,049 --> 00:01:17,490
systems these are my contacts and to

24
00:01:15,270 --> 00:01:19,740
demonstrate that I'm old I don't know

25
00:01:17,490 --> 00:01:23,060
how many of you attended this chat

26
00:01:19,740 --> 00:01:26,039
system this was a French chat system on

27
00:01:23,060 --> 00:01:28,740
x.25 networks so it was in the

28
00:01:26,039 --> 00:01:30,780
pre-internet area and this was a very

29
00:01:28,740 --> 00:01:33,270
very funny place where you could meet

30
00:01:30,780 --> 00:01:37,530
heckles worldwide and i learned very

31
00:01:33,270 --> 00:01:41,310
very many things in this period ok so

32
00:01:37,530 --> 00:01:43,200
back to us why this talk because I

33
00:01:41,310 --> 00:01:44,459
forgot to say you that I'm talking about

34
00:01:43,200 --> 00:01:47,009
Windows privileges

35
00:01:44,459 --> 00:01:51,780
I guess that everyone here knows what

36
00:01:47,009 --> 00:01:54,450
Windows privileges are ok and why did I

37
00:01:51,780 --> 00:01:57,600
choose this talk because I'm during the

38
00:01:54,450 --> 00:02:00,779
time I noticed that often these

39
00:01:57,600 --> 00:02:04,559
privileges are misunderstood or they are

40
00:02:00,779 --> 00:02:07,319
not taken in consideration when you have

41
00:02:04,560 --> 00:02:10,679
to do privilege escalation so I decided

42
00:02:07,319 --> 00:02:12,569
to learn them better and to make some

43
00:02:10,679 --> 00:02:14,580
practice with the privileges in order to

44
00:02:12,569 --> 00:02:15,390
understand how to make privilege

45
00:02:14,580 --> 00:02:20,100
escalation

46
00:02:15,390 --> 00:02:20,760
abusing from these privileges sorry I am

47
00:02:20,100 --> 00:02:23,220
Italian

48
00:02:20,760 --> 00:02:27,720
so I speak also is my hand don't pay too

49
00:02:23,220 --> 00:02:31,910
much attention to my hands okay one day

50
00:02:27,720 --> 00:02:35,670
I ran in this great article which was a

51
00:02:31,910 --> 00:02:38,490
perfect summary of what you can do with

52
00:02:35,670 --> 00:02:40,920
some privileges especially the god

53
00:02:38,490 --> 00:02:43,560
privileges the maximum privileges that

54
00:02:40,920 --> 00:02:45,988
the user can have and I got in contact

55
00:02:43,560 --> 00:02:52,590
with the outers and we exchanged also

56
00:02:45,989 --> 00:02:55,290
very useful informations so this is the

57
00:02:52,590 --> 00:02:58,860
agenda agenda short introduction about

58
00:02:55,290 --> 00:03:00,900
privileges and how to get them and then

59
00:02:58,860 --> 00:03:03,120
we will dig deeper in some very

60
00:03:00,900 --> 00:03:05,430
interesting privileges like the debug

61
00:03:03,120 --> 00:03:07,670
privilege the rest or back up take

62
00:03:05,430 --> 00:03:10,410
ownership and so on and finally a

63
00:03:07,670 --> 00:03:13,708
special attention due to the last two

64
00:03:10,410 --> 00:03:17,280
months because in conjunction with an

65
00:03:13,709 --> 00:03:20,730
exploit has been demonstrated to be very

66
00:03:17,280 --> 00:03:22,799
powerful privileges because Microsoft

67
00:03:20,730 --> 00:03:26,970
was not able to fix them

68
00:03:22,799 --> 00:03:33,380
ok and then finally prevention and some

69
00:03:26,970 --> 00:03:36,180
final thought is my English ok great I

70
00:03:33,380 --> 00:03:38,010
don't want to bore you with Windows

71
00:03:36,180 --> 00:03:40,260
privileges so it's it will be a very

72
00:03:38,010 --> 00:03:42,570
very short introduction what is a

73
00:03:40,260 --> 00:03:45,630
Windows privilege is a special right

74
00:03:42,570 --> 00:03:49,200
that you can grant to a user or a group

75
00:03:45,630 --> 00:03:51,420
in order to perform a special operation

76
00:03:49,200 --> 00:03:53,940
on the operating system like shutting

77
00:03:51,420 --> 00:03:56,390
down the system changing the system time

78
00:03:53,940 --> 00:03:59,280
doing a backup and so on

79
00:03:56,390 --> 00:04:03,720
some built-in users or groups have

80
00:03:59,280 --> 00:04:08,549
already built-in privileges and you can

81
00:04:03,720 --> 00:04:10,950
assign privileges via the the GUI

82
00:04:08,549 --> 00:04:14,820
interface but you can also play the

83
00:04:10,950 --> 00:04:18,978
wisdom by launching by invoking the the

84
00:04:14,820 --> 00:04:22,700
the right API stew so you don't need

85
00:04:18,978 --> 00:04:26,159
graphic and interface to assign them

86
00:04:22,700 --> 00:04:28,659
another interesting things is that some

87
00:04:26,160 --> 00:04:31,900
privileges bypass totally the sick

88
00:04:28,660 --> 00:04:34,390
purity settings so for example backup

89
00:04:31,900 --> 00:04:36,310
and restore privileges also debug

90
00:04:34,390 --> 00:04:41,110
privileges don't take in consideration

91
00:04:36,310 --> 00:04:45,070
the security which has been put on this

92
00:04:41,110 --> 00:04:46,900
object another interesting thing that

93
00:04:45,070 --> 00:04:49,690
you have to pay attention is that some

94
00:04:46,900 --> 00:04:52,810
privileges are only available in a high

95
00:04:49,690 --> 00:04:55,000
integrity level process typically an

96
00:04:52,810 --> 00:04:57,460
elevated shell because if you have a

97
00:04:55,000 --> 00:05:01,780
standard shell you won't see the

98
00:04:57,460 --> 00:05:05,739
privileges you have to elevate to a high

99
00:05:01,780 --> 00:05:10,570
integrity process and okay Who am i /

100
00:05:05,740 --> 00:05:12,580
breve will list your privileges another

101
00:05:10,570 --> 00:05:17,110
concept is that windows access token

102
00:05:12,580 --> 00:05:20,289
because it's bind with the privileges

103
00:05:17,110 --> 00:05:22,450
what is an windows access token again I

104
00:05:20,290 --> 00:05:24,820
don't want to bore you it's an object

105
00:05:22,450 --> 00:05:28,360
which is create which is created when

106
00:05:24,820 --> 00:05:31,840
you log on and this object is used when

107
00:05:28,360 --> 00:05:34,140
you need to access a securable object in

108
00:05:31,840 --> 00:05:37,539
order to verify if your rights are

109
00:05:34,140 --> 00:05:41,860
appropriate to access the object or when

110
00:05:37,540 --> 00:05:43,900
you want to perform to user privileges

111
00:05:41,860 --> 00:05:49,630
because in the access token D all these

112
00:05:43,900 --> 00:05:53,200
informations are stored so you can see

113
00:05:49,630 --> 00:05:55,390
among the other things a Windows access

114
00:05:53,200 --> 00:06:00,130
token contains the list of the

115
00:05:55,390 --> 00:06:02,710
privileges the type of the token and the

116
00:06:00,130 --> 00:06:06,159
type of impersonation level what does

117
00:06:02,710 --> 00:06:08,380
this mean very very quickly a token can

118
00:06:06,160 --> 00:06:11,440
be primary or impersonation if it is a

119
00:06:08,380 --> 00:06:14,169
primary token you can launch processes

120
00:06:11,440 --> 00:06:18,390
with it if it is an impersonation token

121
00:06:14,169 --> 00:06:21,159
you can impersonate it red very simple

122
00:06:18,390 --> 00:06:23,860
the impersonation levels there are four

123
00:06:21,160 --> 00:06:26,169
impersonation levels but only useful for

124
00:06:23,860 --> 00:06:26,830
us for privilege escalation are the last

125
00:06:26,169 --> 00:06:30,099
two ones

126
00:06:26,830 --> 00:06:33,120
another thing that one your token is

127
00:06:30,100 --> 00:06:36,789
created you cannot add new privileges

128
00:06:33,120 --> 00:06:39,850
obviously no but you can enable or

129
00:06:36,789 --> 00:06:41,880
disable privileges you can also

130
00:06:39,850 --> 00:06:43,590
duplicate tokens

131
00:06:41,880 --> 00:06:46,110
so from a primary token you can

132
00:06:43,590 --> 00:06:52,890
duplicate it and get an impersonation

133
00:06:46,110 --> 00:06:54,960
token and vice versa which are the

134
00:06:52,890 --> 00:06:56,039
counts that have special privileges I

135
00:06:54,960 --> 00:06:59,039
said it before

136
00:06:56,040 --> 00:07:02,160
obviously administrators local system

137
00:06:59,040 --> 00:07:05,190
has maybe not not all privileges but

138
00:07:02,160 --> 00:07:08,370
most of them then some built-in groups

139
00:07:05,190 --> 00:07:14,400
backup operator printer operators sever

140
00:07:08,370 --> 00:07:16,680
operators okay local service and virtual

141
00:07:14,400 --> 00:07:18,090
accounts managed service account usually

142
00:07:16,680 --> 00:07:20,280
they have very very interesting

143
00:07:18,090 --> 00:07:22,560
privileges they have impersonation and

144
00:07:20,280 --> 00:07:25,950
assign primary token privileges we will

145
00:07:22,560 --> 00:07:29,430
see this more later then third third

146
00:07:25,950 --> 00:07:31,289
party application users and sometimes it

147
00:07:29,430 --> 00:07:35,910
can happen misconfigured use it because

148
00:07:31,290 --> 00:07:39,570
a lazy admin playing with the GP GP edit

149
00:07:35,910 --> 00:07:41,340
console clicked on the wrong button and

150
00:07:39,570 --> 00:07:44,280
assigned a privilege to a user who

151
00:07:41,340 --> 00:07:50,549
didn't who doesn't need to have this

152
00:07:44,280 --> 00:07:53,580
privilege for example this is the backup

153
00:07:50,550 --> 00:07:56,640
exec utility and in the specification of

154
00:07:53,580 --> 00:07:59,400
this utility three privileges are

155
00:07:56,640 --> 00:08:02,219
required backup and restore obviously

156
00:07:59,400 --> 00:08:05,489
because it is a backup utility and also

157
00:08:02,220 --> 00:08:08,550
the TCB privilege actors parting also

158
00:08:05,490 --> 00:08:11,750
act as part of operating system this

159
00:08:08,550 --> 00:08:14,730
means that we have granted to this user

160
00:08:11,750 --> 00:08:23,400
the right to access everywhere to have

161
00:08:14,730 --> 00:08:29,010
full control on our machine okay how can

162
00:08:23,400 --> 00:08:32,250
we count these privileged accounts so

163
00:08:29,010 --> 00:08:34,500
the techniques I think you know better

164
00:08:32,250 --> 00:08:37,289
than me because I'm not a pen tester all

165
00:08:34,500 --> 00:08:39,450
these techniques but basically weak

166
00:08:37,289 --> 00:08:42,000
service configuration remote code

167
00:08:39,450 --> 00:08:44,520
execution everything that I everything

168
00:08:42,000 --> 00:08:47,130
that gives me the possibility to gain

169
00:08:44,520 --> 00:08:50,270
access like a user who has special

170
00:08:47,130 --> 00:08:53,460
privileges so stealing credentials

171
00:08:50,270 --> 00:08:55,050
man-in-the-middle via and LM and so on

172
00:08:53,460 --> 00:08:59,850
Kerberos ting etc

173
00:08:55,050 --> 00:09:04,050
etc there is also another possibility to

174
00:08:59,850 --> 00:09:07,399
get privileges and manipulate tokens by

175
00:09:04,050 --> 00:09:07,399
using exploits

176
00:09:08,640 --> 00:09:13,439
the most interesting one are the last

177
00:09:11,010 --> 00:09:16,200
two partial rights and arbitrary words

178
00:09:13,440 --> 00:09:19,260
this has successfully been demonstrated

179
00:09:16,200 --> 00:09:23,959
that with partial rights I can activate

180
00:09:19,260 --> 00:09:27,660
or betray rights I can activate

181
00:09:23,959 --> 00:09:31,369
additional privileges on my token so if

182
00:09:27,660 --> 00:09:35,910
I am a simple user but I can exploit a

183
00:09:31,370 --> 00:09:37,980
binary who has some weakness I came from

184
00:09:35,910 --> 00:09:40,730
the userland interact interact with the

185
00:09:37,980 --> 00:09:44,070
kernel in the a process structure and

186
00:09:40,730 --> 00:09:46,680
activate some privileges so this is

187
00:09:44,070 --> 00:09:48,959
another very very interesting so my talk

188
00:09:46,680 --> 00:09:51,060
is not about how to get them and so on

189
00:09:48,959 --> 00:09:54,239
my talk the goal of my talk and I hope

190
00:09:51,060 --> 00:09:55,619
we'll meet this goal is to show you with

191
00:09:54,240 --> 00:09:58,950
some practical examples

192
00:09:55,620 --> 00:10:01,440
once you have one god privilege how you

193
00:09:58,950 --> 00:10:04,589
can abuse from them from this privilege

194
00:10:01,440 --> 00:10:07,170
okay and so let's start with the first

195
00:10:04,589 --> 00:10:10,529
one I think that the back privilege all

196
00:10:07,170 --> 00:10:12,630
of you know the debug privilege this is

197
00:10:10,529 --> 00:10:16,620
the simplest and the most powerful

198
00:10:12,630 --> 00:10:20,130
privilege because what and it's not me

199
00:10:16,620 --> 00:10:23,279
that that I'm saying this but a guy from

200
00:10:20,130 --> 00:10:25,260
Microsoft more than ten years ago said

201
00:10:23,279 --> 00:10:26,939
if you grant somebody the debug

202
00:10:25,260 --> 00:10:29,970
privilege you gave it away the farm

203
00:10:26,940 --> 00:10:35,790
because why is this possible because the

204
00:10:29,970 --> 00:10:38,070
debug privilege was given to be able to

205
00:10:35,790 --> 00:10:41,790
debug a process but not only my process

206
00:10:38,070 --> 00:10:45,060
a process of every user or system

207
00:10:41,790 --> 00:10:47,760
administrator does not import so once I

208
00:10:45,060 --> 00:10:50,520
can debug a process obviously I can

209
00:10:47,760 --> 00:10:53,459
inject code in this process inject

210
00:10:50,520 --> 00:10:55,500
malicious code in this project execute

211
00:10:53,459 --> 00:10:57,750
the code in order to get a shell or

212
00:10:55,500 --> 00:11:00,510
whatever else so these are the

213
00:10:57,750 --> 00:11:03,360
well-known api's for interacting with

214
00:11:00,510 --> 00:11:06,140
remote threads writing to the memory and

215
00:11:03,360 --> 00:11:06,140
so on

216
00:11:06,519 --> 00:11:12,529
one other interesting way to abuse from

217
00:11:09,529 --> 00:11:14,750
this privilege is to set the parent

218
00:11:12,529 --> 00:11:17,389
process a privileged process because

219
00:11:14,750 --> 00:11:21,709
starting from Windows Vista it is

220
00:11:17,389 --> 00:11:24,440
possible to modify the parent process of

221
00:11:21,709 --> 00:11:28,219
a other other process and to set the

222
00:11:24,440 --> 00:11:30,680
process to another user

223
00:11:28,220 --> 00:11:34,130
so if with the debug privilege I can

224
00:11:30,680 --> 00:11:36,979
spawn my process and tell to my process

225
00:11:34,130 --> 00:11:40,300
that the parent process is a process for

226
00:11:36,980 --> 00:11:43,069
example belong to system and with this

227
00:11:40,300 --> 00:11:44,990
simple powershell script i'll published

228
00:11:43,069 --> 00:11:47,810
it on github but you can do it in many

229
00:11:44,990 --> 00:11:50,509
other ways as you can see it's getting

230
00:11:47,810 --> 00:11:53,869
system with debug privilege is as easy

231
00:11:50,509 --> 00:11:56,889
as drinking a bottle of water it's very

232
00:11:53,870 --> 00:12:00,230
very easy so it's a very powerful

233
00:11:56,889 --> 00:12:02,810
privilege with which needs special very

234
00:12:00,230 --> 00:12:11,300
special attention don't grant debug

235
00:12:02,810 --> 00:12:14,119
privilege ok the restor privilege ok

236
00:12:11,300 --> 00:12:16,189
what what what means this privilege this

237
00:12:14,120 --> 00:12:18,980
privilege grants you to perform restore

238
00:12:16,189 --> 00:12:21,139
of files but not only fights also

239
00:12:18,980 --> 00:12:23,300
registry keys what does this mean that

240
00:12:21,139 --> 00:12:26,630
with with this restored privilege i can

241
00:12:23,300 --> 00:12:29,719
access files which normally i could not

242
00:12:26,630 --> 00:12:35,029
access and this is you can imagine very

243
00:12:29,720 --> 00:12:38,540
very powerful to api's and millions of

244
00:12:35,029 --> 00:12:41,060
possibility create file and ragga create

245
00:12:38,540 --> 00:12:43,969
the important thing is to have the

246
00:12:41,060 --> 00:12:46,729
restored privilege enable the restore

247
00:12:43,970 --> 00:12:48,709
privilege and to use this simple flag in

248
00:12:46,730 --> 00:12:50,509
minor api so I'm telling to the

249
00:12:48,709 --> 00:12:53,268
operating system and I am performing a

250
00:12:50,509 --> 00:12:54,139
store and he permits me to do everything

251
00:12:53,269 --> 00:13:01,819
I want

252
00:12:54,139 --> 00:13:04,880
ok I can even overwrite in the system 32

253
00:13:01,819 --> 00:13:07,040
directory where you know all files are

254
00:13:04,880 --> 00:13:09,800
owned by trusted installer so it's very

255
00:13:07,040 --> 00:13:13,250
difficult to overwrite them all checks

256
00:13:09,800 --> 00:13:16,069
are bypassed so I can overwrite this

257
00:13:13,250 --> 00:13:19,089
file so how can I do privilege

258
00:13:16,069 --> 00:13:22,300
escalation with this privilege I

259
00:13:19,089 --> 00:13:29,559
there are millions of possibility I will

260
00:13:22,300 --> 00:13:31,899
show you one very simple example I will

261
00:13:29,559 --> 00:13:34,809
modify the configuration of a service

262
00:13:31,899 --> 00:13:38,139
which runs under the system account and

263
00:13:34,809 --> 00:13:41,199
is startled by all users and then get

264
00:13:38,139 --> 00:13:45,279
back a red shell the service in question

265
00:13:41,199 --> 00:13:47,229
is the yum-yum a WAP Push service I hope

266
00:13:45,279 --> 00:13:50,019
that my spelling is correct because I

267
00:13:47,230 --> 00:13:53,379
don't never know how to spell in English

268
00:13:50,019 --> 00:13:57,040
some words as you can see this service

269
00:13:53,379 --> 00:13:58,809
in red is startled by all users this is

270
00:13:57,040 --> 00:14:02,019
very good so we have a service that

271
00:13:58,809 --> 00:14:05,709
transfers like the system is startled by

272
00:14:02,019 --> 00:14:09,249
each user we have rest or privileges so

273
00:14:05,709 --> 00:14:12,579
obviously what are we going to do we

274
00:14:09,249 --> 00:14:15,819
create our service DLL which doesn't do

275
00:14:12,579 --> 00:14:20,170
what windows expect but will simply

276
00:14:15,819 --> 00:14:23,259
launch by a batch file which contains my

277
00:14:20,170 --> 00:14:29,829
reverse shell once my shell a once my

278
00:14:23,259 --> 00:14:32,980
DLL is compiled I simply put this DLL in

279
00:14:29,829 --> 00:14:36,870
the system32 directory and I will change

280
00:14:32,980 --> 00:14:39,839
the parameters of the Reg of the service

281
00:14:36,870 --> 00:14:44,470
configured in the registry I will

282
00:14:39,839 --> 00:14:47,439
overwrite the the service DLL parameter

283
00:14:44,470 --> 00:14:51,959
not more pointing to the original DLL

284
00:14:47,439 --> 00:14:55,089
Mott but to my DLL and once I'm done I

285
00:14:51,959 --> 00:14:56,559
will copy it in system32 but I could

286
00:14:55,089 --> 00:14:58,809
also launch it from another one

287
00:14:56,559 --> 00:15:02,079
allocation just to show you that it's

288
00:14:58,809 --> 00:15:04,870
possible or if I'm very bad guy I could

289
00:15:02,079 --> 00:15:07,120
overwrite the original DLL because I can

290
00:15:04,870 --> 00:15:10,540
do it even it is protected by Trustees

291
00:15:07,120 --> 00:15:14,559
dollar I have also a short video about

292
00:15:10,540 --> 00:15:18,969
this and this is it it's very simple I'm

293
00:15:14,559 --> 00:15:20,949
not a good video maker I have an

294
00:15:18,970 --> 00:15:23,740
elevated shell so I have the restore

295
00:15:20,949 --> 00:15:27,740
privilege all I do is putting this piece

296
00:15:23,740 --> 00:15:30,370
of code in my XA and do it

297
00:15:27,740 --> 00:15:33,380
I have overwritten the service DLL and

298
00:15:30,370 --> 00:15:42,860
now I start the service because I can do

299
00:15:33,380 --> 00:15:49,550
it ok and now let's verify I had back

300
00:15:42,860 --> 00:15:51,790
connection and I'm system very easy do

301
00:15:49,550 --> 00:15:51,790
you agree

302
00:16:06,769 --> 00:16:10,410
Becca privilege this is the opposite one

303
00:16:09,690 --> 00:16:12,779
okay

304
00:16:10,410 --> 00:16:15,000
again with this privilege I can backup

305
00:16:12,779 --> 00:16:16,769
file so I can access file which normally

306
00:16:15,000 --> 00:16:21,600
could not access because I'm performing

307
00:16:16,769 --> 00:16:24,329
a backup operation again I will use the

308
00:16:21,600 --> 00:16:27,389
same api's because backup software used

309
00:16:24,329 --> 00:16:30,329
is api's and i could can do many of

310
00:16:27,389 --> 00:16:32,370
nasty things with it for example I can

311
00:16:30,329 --> 00:16:34,620
backup the Sun database of the local

312
00:16:32,370 --> 00:16:38,130
registry because with the Reg you till

313
00:16:34,620 --> 00:16:41,579
'ti if I am bad if I have the backup

314
00:16:38,130 --> 00:16:43,949
operators it permits me to save the

315
00:16:41,579 --> 00:16:48,209
system hive and the Sam hive and then

316
00:16:43,949 --> 00:16:50,399
with one of the tools in this example

317
00:16:48,209 --> 00:16:53,130
example I'm using mimikatz but you can

318
00:16:50,399 --> 00:16:56,100
use other tools I can dump the hashes of

319
00:16:53,130 --> 00:16:58,110
the NA TLM database and so get the

320
00:16:56,100 --> 00:16:58,589
hashes of a local administrator and so

321
00:16:58,110 --> 00:17:04,290
on

322
00:16:58,589 --> 00:17:07,470
I can also access files which I not

323
00:17:04,290 --> 00:17:10,879
could not access again create with the

324
00:17:07,470 --> 00:17:13,949
create file API just specifying the flag

325
00:17:10,880 --> 00:17:16,890
backup semantics and I'm able in this

326
00:17:13,949 --> 00:17:22,020
case to read the file of local

327
00:17:16,890 --> 00:17:26,299
administrator members of backup

328
00:17:22,020 --> 00:17:31,500
operators on domain controller can

329
00:17:26,299 --> 00:17:34,320
backup also the NTDs dot did file so the

330
00:17:31,500 --> 00:17:37,799
entire active database directory and

331
00:17:34,320 --> 00:17:39,450
they can do it because this is this file

332
00:17:37,799 --> 00:17:42,410
as you know you cannot access this file

333
00:17:39,450 --> 00:17:45,240
bit is blocked because it is in use but

334
00:17:42,410 --> 00:17:48,809
using backup software you can backup the

335
00:17:45,240 --> 00:17:53,010
database in this case I'm using VB admin

336
00:17:48,809 --> 00:17:57,780
as a normal user only with Becca

337
00:17:53,010 --> 00:18:01,740
privilege I saved and I make a backup

338
00:17:57,780 --> 00:18:06,149
copy of the NTDs dot did file and then

339
00:18:01,740 --> 00:18:08,640
with one of the values tools I get the

340
00:18:06,150 --> 00:18:10,650
boot key and then I dumped all the

341
00:18:08,640 --> 00:18:12,600
hashes in this case the hashes of the

342
00:18:10,650 --> 00:18:14,580
domain admin of the data of this

343
00:18:12,600 --> 00:18:17,439
database so is the backup operators I

344
00:18:14,580 --> 00:18:22,449
can get domain admin without problem

345
00:18:17,440 --> 00:18:24,340
I can also use another utility I don't

346
00:18:22,450 --> 00:18:25,090
know how many of you know of this

347
00:18:24,340 --> 00:18:29,310
utility

348
00:18:25,090 --> 00:18:33,250
it's the disk shadow utility which is

349
00:18:29,310 --> 00:18:35,740
very useful because unlike versus admin

350
00:18:33,250 --> 00:18:37,870
you don't need to be admin to launch

351
00:18:35,740 --> 00:18:41,770
them but you can backup also with

352
00:18:37,870 --> 00:18:43,810
disability the NTDs dot deep database in

353
00:18:41,770 --> 00:18:45,850
this case i make a backup then i copy

354
00:18:43,810 --> 00:18:48,730
the database because i cannot access the

355
00:18:45,850 --> 00:18:51,399
database but i copy all a swiss create

356
00:18:48,730 --> 00:18:53,890
file and backup option on an other

357
00:18:51,400 --> 00:19:00,810
directory and then again I get the boot

358
00:18:53,890 --> 00:19:04,210
key and I can dump all the users ok

359
00:19:00,810 --> 00:19:07,060
there is also which I call special bonus

360
00:19:04,210 --> 00:19:08,980
because if you have backup if you have

361
00:19:07,060 --> 00:19:11,350
if you are a member of backup operators

362
00:19:08,980 --> 00:19:14,320
you automatically have two privileges

363
00:19:11,350 --> 00:19:16,840
back up and restore privileges and with

364
00:19:14,320 --> 00:19:20,679
these two privileges combined you can

365
00:19:16,840 --> 00:19:23,110
also change the access control list of

366
00:19:20,680 --> 00:19:26,040
each file and event registry or

367
00:19:23,110 --> 00:19:29,409
directory and this is also very very

368
00:19:26,040 --> 00:19:32,560
powerful in this example I changed via

369
00:19:29,410 --> 00:19:34,840
PowerShell script this file is only it's

370
00:19:32,560 --> 00:19:38,020
owned and only the administrator has

371
00:19:34,840 --> 00:19:40,899
full control on it I can change the

372
00:19:38,020 --> 00:19:45,210
access lead and try and grant to myself

373
00:19:40,900 --> 00:19:45,210
the right to access to the file

374
00:19:48,870 --> 00:19:53,830
the take ownership

375
00:19:50,860 --> 00:19:57,629
is not a god privilege huai because as

376
00:19:53,830 --> 00:20:01,649
microsoft says says this privilege

377
00:19:57,630 --> 00:20:04,330
allows you to take ownership of a

378
00:20:01,649 --> 00:20:08,500
security leak security real object in

379
00:20:04,330 --> 00:20:10,809
the system 280 eyes set security info or

380
00:20:08,500 --> 00:20:13,000
set name security info in the first one

381
00:20:10,809 --> 00:20:14,950
I have to pass the handle in the second

382
00:20:13,000 --> 00:20:17,039
one he acted the name of the resource of

383
00:20:14,950 --> 00:20:21,100
the object I want to take ownership

384
00:20:17,039 --> 00:20:23,440
there exist many types of many object

385
00:20:21,100 --> 00:20:26,860
types file printer shares registry keys

386
00:20:23,440 --> 00:20:31,720
and so on and once again the ownership

387
00:20:26,860 --> 00:20:34,209
of the file here what I can change the

388
00:20:31,720 --> 00:20:36,429
permission and then the same rules apply

389
00:20:34,210 --> 00:20:39,309
like for example the restored privilege

390
00:20:36,429 --> 00:20:45,130
so in this example I will show you I

391
00:20:39,309 --> 00:20:48,100
will change the parameters of the MSI

392
00:20:45,130 --> 00:20:52,870
server service which is a service which

393
00:20:48,100 --> 00:20:55,809
normal users can always start so first

394
00:20:52,870 --> 00:20:58,510
of all I will take the ownership of the

395
00:20:55,809 --> 00:21:00,070
registry key one I took the ownership of

396
00:20:58,510 --> 00:21:03,879
the registry key referring to this

397
00:21:00,070 --> 00:21:07,210
service I will create an access list

398
00:21:03,880 --> 00:21:09,549
which permits for keeping it simple to

399
00:21:07,210 --> 00:21:12,399
everyone to access completely this

400
00:21:09,549 --> 00:21:16,389
registry key in read and write and once

401
00:21:12,399 --> 00:21:19,719
I have said the permission I alter the

402
00:21:16,389 --> 00:21:22,120
service and I say and I will launch

403
00:21:19,720 --> 00:21:24,010
instead of the original access for

404
00:21:22,120 --> 00:21:27,279
example a command which will add myself

405
00:21:24,010 --> 00:21:36,620
to local domain local administrator

406
00:21:27,279 --> 00:21:39,169
groups these are the privilege

407
00:21:36,620 --> 00:21:42,379
is very very powerful too because it's a

408
00:21:39,169 --> 00:21:45,080
god privilege - what does this privilege

409
00:21:42,380 --> 00:21:47,960
says Microsoft says this privilege is

410
00:21:45,080 --> 00:21:51,309
act like as an operating system what

411
00:21:47,960 --> 00:21:55,669
does this mean that with privilege I can

412
00:21:51,309 --> 00:21:57,908
impersonate I can obtain a token for

413
00:21:55,669 --> 00:22:00,980
every user without specifying

414
00:21:57,909 --> 00:22:05,330
credentials and the other cool thing is

415
00:22:00,980 --> 00:22:08,000
that I can add supplementary accesses to

416
00:22:05,330 --> 00:22:10,908
my token for example I can add to my

417
00:22:08,000 --> 00:22:13,640
token other groups so if I have a normal

418
00:22:10,909 --> 00:22:17,240
user I can add to my token the

419
00:22:13,640 --> 00:22:22,520
membership to local administrator this

420
00:22:17,240 --> 00:22:25,190
is very very powerful but we have a

421
00:22:22,520 --> 00:22:28,760
problem because I can get this powerful

422
00:22:25,190 --> 00:22:30,710
token but I'm not able to impersonate it

423
00:22:28,760 --> 00:22:34,190
because in order to impersonate the

424
00:22:30,710 --> 00:22:37,850
token I need special privilege which is

425
00:22:34,190 --> 00:22:41,929
impersonation privilege I have only this

426
00:22:37,850 --> 00:22:44,990
one privilege so how can I do it we know

427
00:22:41,929 --> 00:22:50,770
that it is possible to impersonate a

428
00:22:44,990 --> 00:22:54,049
thread as long as the token is mine and

429
00:22:50,770 --> 00:22:56,210
integrity level of the token is less or

430
00:22:54,049 --> 00:22:58,850
equal to the process who launches the

431
00:22:56,210 --> 00:23:02,299
who's lounge to the originating process

432
00:22:58,850 --> 00:23:05,418
and Microsoft added other constraints

433
00:23:02,299 --> 00:23:09,168
starting from Windows 10 but there is a

434
00:23:05,419 --> 00:23:11,960
good news we can impersonate the trade

435
00:23:09,169 --> 00:23:16,539
in these conditions we can impersonate a

436
00:23:11,960 --> 00:23:19,640
thread without any privileges and

437
00:23:16,539 --> 00:23:21,730
bypassing inuring completely all this

438
00:23:19,640 --> 00:23:26,330
constraint and why is this possible

439
00:23:21,730 --> 00:23:30,830
because of this as long as the resulting

440
00:23:26,330 --> 00:23:33,980
token origin ID equals the arm the

441
00:23:30,830 --> 00:23:36,649
authentication ID of the original thing

442
00:23:33,980 --> 00:23:39,320
process and this is always the case all

443
00:23:36,649 --> 00:23:42,590
other checks are bypassed because the

444
00:23:39,320 --> 00:23:45,260
kernel the first thing checks is ok with

445
00:23:42,590 --> 00:23:46,639
what is the token origin ID and what is

446
00:23:45,260 --> 00:23:49,370
the authentication again are they the

447
00:23:46,640 --> 00:23:50,190
same ok go you can impersonate the

448
00:23:49,370 --> 00:23:52,770
thread

449
00:23:50,190 --> 00:24:00,000
so and you don't have any limitations

450
00:23:52,770 --> 00:24:02,820
that's cool now I have some examples

451
00:24:00,000 --> 00:24:05,190
prepared some example to show you how to

452
00:24:02,820 --> 00:24:08,399
abuse from these privileges in the first

453
00:24:05,190 --> 00:24:10,050
two I will the MS v1 as for you logon

454
00:24:08,400 --> 00:24:13,770
extension this is the extension that we

455
00:24:10,050 --> 00:24:16,440
need to call in order to impersonate the

456
00:24:13,770 --> 00:24:19,860
user calling the LSA logon user function

457
00:24:16,440 --> 00:24:21,690
and in the other case I will use the

458
00:24:19,860 --> 00:24:24,060
Kerberos extension so I will can

459
00:24:21,690 --> 00:24:26,430
impersonate the domain admin in the

460
00:24:24,060 --> 00:24:30,419
first example I will impersonate myself

461
00:24:26,430 --> 00:24:34,950
so I will get back a token from with my

462
00:24:30,420 --> 00:24:37,500
user by but I will add as an extra group

463
00:24:34,950 --> 00:24:39,540
the administrator group to my token and

464
00:24:37,500 --> 00:24:41,850
once I have this token I will

465
00:24:39,540 --> 00:24:44,040
impersonate a thread with this token and

466
00:24:41,850 --> 00:24:47,240
grant to myself the debug privilege

467
00:24:44,040 --> 00:24:49,950
because I love the debug privilege or I

468
00:24:47,240 --> 00:24:52,830
can in your completely what matters of

469
00:24:49,950 --> 00:24:54,840
says because the to originate and

470
00:24:52,830 --> 00:24:57,540
occasionally are the same I will

471
00:24:54,840 --> 00:25:01,050
impersonate administrator and I will add

472
00:24:57,540 --> 00:25:04,470
myself to the local domain at a local

473
00:25:01,050 --> 00:25:07,940
administrator group the last example

474
00:25:04,470 --> 00:25:10,950
using Kerberos domain authentication I

475
00:25:07,940 --> 00:25:14,130
will impersonate a domain admin as a

476
00:25:10,950 --> 00:25:16,080
domain user with TCP privilege

477
00:25:14,130 --> 00:25:18,870
I will person to domain admin and right

478
00:25:16,080 --> 00:25:21,000
in the system 32 directory as you can

479
00:25:18,870 --> 00:25:23,629
see the last one is very very easy if

480
00:25:21,000 --> 00:25:26,970
you do it in c-sharp two lines of code

481
00:25:23,630 --> 00:25:33,180
very very easy to abuse from so I don't

482
00:25:26,970 --> 00:25:37,380
think I need other explanation this is

483
00:25:33,180 --> 00:25:39,390
the other example where I used the MSP

484
00:25:37,380 --> 00:25:43,200
one extension and @ln authentication

485
00:25:39,390 --> 00:25:45,900
okay so I can impersonate TCP user

486
00:25:43,200 --> 00:25:48,210
administrator I will can add an extra

487
00:25:45,900 --> 00:25:50,700
seat typically this is the seed of the

488
00:25:48,210 --> 00:25:53,430
local administrator group call my

489
00:25:50,700 --> 00:25:58,650
function Alessi my API call

490
00:25:53,430 --> 00:26:01,380
Alessia logon user okay and passing the

491
00:25:58,650 --> 00:26:03,810
groups and well and I will get I will

492
00:26:01,380 --> 00:26:07,020
get back this wonderful token

493
00:26:03,810 --> 00:26:09,899
which I called H token as for you which

494
00:26:07,020 --> 00:26:14,970
I can then impersonate in a thread and

495
00:26:09,900 --> 00:26:17,550
do all - nasty things for example in the

496
00:26:14,970 --> 00:26:21,000
first one I will add a privilege at the

497
00:26:17,550 --> 00:26:24,000
debug privilege to my token and in the

498
00:26:21,000 --> 00:26:27,000
second one to my user and in the second

499
00:26:24,000 --> 00:26:32,000
one I will grant myself I will put

500
00:26:27,000 --> 00:26:32,000
myself in the local administrator group

501
00:26:32,390 --> 00:26:38,460
because I have a video about this I have

502
00:26:36,150 --> 00:26:43,100
two videos you trust in what I'm saying

503
00:26:38,460 --> 00:26:46,470
yes okay I will show you another video

504
00:26:43,100 --> 00:26:49,889
this is more a joke I made with my sis

505
00:26:46,470 --> 00:26:53,130
admin colleagues because I told them we

506
00:26:49,890 --> 00:26:57,510
make a bet as a local administrator I

507
00:26:53,130 --> 00:26:59,490
will impersonate a guest account and act

508
00:26:57,510 --> 00:27:02,430
like a domain admin they told me now you

509
00:26:59,490 --> 00:27:04,920
are crazy it's not possible okay if I'm

510
00:27:02,430 --> 00:27:10,920
able to do it you will pay me a bottle

511
00:27:04,920 --> 00:27:26,700
of Italian red wine okay and this is

512
00:27:10,920 --> 00:27:34,100
what I did local admin guest user

513
00:27:26,700 --> 00:27:40,309
account enabled I launched my

514
00:27:34,100 --> 00:27:47,168
silly program the a please okay so I am

515
00:27:40,309 --> 00:27:51,620
user guest let's show my groups and

516
00:27:47,169 --> 00:27:54,590
that's you can see I'm member of domain

517
00:27:51,620 --> 00:27:56,899
admins is it true okay so because they

518
00:27:54,590 --> 00:27:59,720
didn't trust me okay let me show you

519
00:27:56,900 --> 00:28:02,000
this one I go in the administrator

520
00:27:59,720 --> 00:28:04,250
directory of the domain admin as guest

521
00:28:02,000 --> 00:28:11,270
user it should be impossible to get to

522
00:28:04,250 --> 00:28:17,830
get in No and then only the main admin

523
00:28:11,270 --> 00:28:17,830
can access this file and this was it and

524
00:28:17,919 --> 00:28:22,880
evening after I drank a fantastic Red

525
00:28:21,350 --> 00:28:33,289
Vines a grantee know it comes from

526
00:28:22,880 --> 00:28:35,390
Umbria where I live this is clearly more

527
00:28:33,289 --> 00:28:38,600
a joke because as you can imagine with

528
00:28:35,390 --> 00:28:41,900
TCP privilege I can alter can put groups

529
00:28:38,600 --> 00:28:43,879
everything I want so I could do it in

530
00:28:41,900 --> 00:28:45,890
many other ways but just to get them

531
00:28:43,880 --> 00:29:01,070
they were really really scared after

532
00:28:45,890 --> 00:29:05,390
this demo create token privilege is an

533
00:29:01,070 --> 00:29:08,240
as the word says the privilege which is

534
00:29:05,390 --> 00:29:12,919
granted to create a token so I can

535
00:29:08,240 --> 00:29:15,950
create a token with the specific API and

536
00:29:12,919 --> 00:29:19,100
adhered that I will create a token and I

537
00:29:15,950 --> 00:29:20,480
can create a custom token putting

538
00:29:19,100 --> 00:29:23,299
everything inside

539
00:29:20,480 --> 00:29:25,760
I want privileges groups and so on so

540
00:29:23,299 --> 00:29:29,480
also this one is very very powerful it's

541
00:29:25,760 --> 00:29:32,120
the god privilege I can use this token

542
00:29:29,480 --> 00:29:36,380
without impersonation privileges if the

543
00:29:32,120 --> 00:29:39,199
token is mine and so on okay and this is

544
00:29:36,380 --> 00:29:41,900
great but we have a problem starting and

545
00:29:39,200 --> 00:29:46,370
this is something I discovered two weeks

546
00:29:41,900 --> 00:29:47,480
ago starting from the windows 1809 or

547
00:29:46,370 --> 00:29:50,389
Windows

548
00:29:47,480 --> 00:29:50,960
nineteen server this doesn't work

549
00:29:50,390 --> 00:29:52,820
anymore

550
00:29:50,960 --> 00:29:56,830
even if I have the create token

551
00:29:52,820 --> 00:30:01,550
privilege I'm not able to impersonate it

552
00:29:56,830 --> 00:30:03,439
and this is the error I get back as you

553
00:30:01,550 --> 00:30:06,169
can see I created a fantastic token

554
00:30:03,440 --> 00:30:08,210
because I put administrator and trusted

555
00:30:06,170 --> 00:30:10,550
installer in my token so I could go

556
00:30:08,210 --> 00:30:11,090
everywhere in the file system but it

557
00:30:10,550 --> 00:30:13,610
didn't work

558
00:30:11,090 --> 00:30:16,129
because if I tried to write a file in

559
00:30:13,610 --> 00:30:20,240
the system32 directory I got an access

560
00:30:16,130 --> 00:30:22,580
denied and the problem was that the

561
00:30:20,240 --> 00:30:25,010
impersonation level is invalid what does

562
00:30:22,580 --> 00:30:27,889
this mean that probably the kernel

563
00:30:25,010 --> 00:30:31,160
demoted my token to an identification

564
00:30:27,890 --> 00:30:35,360
token which is a real beautiful token

565
00:30:31,160 --> 00:30:37,660
but I cannot impersonate it so this is

566
00:30:35,360 --> 00:30:41,689
what this was very really sad for me

567
00:30:37,660 --> 00:30:43,340
because I thought but there should be a

568
00:30:41,690 --> 00:30:46,940
possibility it's not possible that it

569
00:30:43,340 --> 00:30:51,500
doesn't work after some tests

570
00:30:46,940 --> 00:30:54,110
I discovered this one that if I said the

571
00:30:51,500 --> 00:30:55,640
outset the authentication ID and we

572
00:30:54,110 --> 00:30:58,129
create token I can set the

573
00:30:55,640 --> 00:31:01,490
authentication ID to the anonymous login

574
00:30:58,130 --> 00:31:04,280
ID this one with 7 is the system ID so

575
00:31:01,490 --> 00:31:07,540
it's the system login ID if I set it to

576
00:31:04,280 --> 00:31:13,330
out anonymous authentication ID again

577
00:31:07,540 --> 00:31:16,070
like the other trick Windows doesn't

578
00:31:13,330 --> 00:31:19,970
make other check because it's an

579
00:31:16,070 --> 00:31:22,520
anonymous authentication so it's it's

580
00:31:19,970 --> 00:31:24,410
not the dangerous token because it's a

581
00:31:22,520 --> 00:31:27,590
noun anonymous you can do and you can

582
00:31:24,410 --> 00:31:29,330
normally you can do you can do anything

583
00:31:27,590 --> 00:31:33,080
with this token but no because in this

584
00:31:29,330 --> 00:31:36,949
token I put special groups you cannot

585
00:31:33,080 --> 00:31:39,889
use everything but some a subset of API

586
00:31:36,950 --> 00:31:42,770
calls works and especially these two one

587
00:31:39,890 --> 00:31:44,420
create file and drag create key so again

588
00:31:42,770 --> 00:31:46,850
you have the key of the kingdom spec but

589
00:31:44,420 --> 00:31:50,600
you can alter a service do everything

590
00:31:46,850 --> 00:31:54,590
with it so some sometimes Microsoft

591
00:31:50,600 --> 00:31:57,010
fixes but they don't care about what

592
00:31:54,590 --> 00:31:57,010
they

593
00:31:57,059 --> 00:32:05,999
and thought it would it could not be

594
00:32:00,330 --> 00:32:08,279
break broken okay 15 minutes okay this

595
00:32:05,999 --> 00:32:10,889
is the API call as you can see I can

596
00:32:08,279 --> 00:32:12,299
pass the authentication ID so if I pass

597
00:32:10,889 --> 00:32:14,189
down on you most authentication ID I

598
00:32:12,299 --> 00:32:18,029
have create Oken privilege it's okay I

599
00:32:14,190 --> 00:32:20,759
can go on the load drive a privilege

600
00:32:18,029 --> 00:32:22,919
what does this privilege mean that you

601
00:32:20,759 --> 00:32:26,070
can load kernel drivers okay

602
00:32:22,919 --> 00:32:29,129
how can you abuse from in first of all

603
00:32:26,070 --> 00:32:31,529
load driver privilege is granted to the

604
00:32:29,129 --> 00:32:34,259
div by default to the printer operators

605
00:32:31,529 --> 00:32:38,879
of the domain controller this is very

606
00:32:34,259 --> 00:32:41,970
cool to abuse from this driver obviously

607
00:32:38,879 --> 00:32:44,428
I need to load the driver which has some

608
00:32:41,970 --> 00:32:45,749
vulnerabilities that I that I have to

609
00:32:44,429 --> 00:32:49,499
exploit otherwise it wouldn't be

610
00:32:45,749 --> 00:32:52,289
possible and you have also to trick the

611
00:32:49,499 --> 00:32:55,350
antelope driver function to load the

612
00:32:52,289 --> 00:33:00,509
parameters of this driver not from the

613
00:32:55,350 --> 00:33:02,399
classical system32 system hive but from

614
00:33:00,509 --> 00:33:05,879
another hive because I cannot write in a

615
00:33:02,399 --> 00:33:09,258
system hive and this example I will show

616
00:33:05,879 --> 00:33:11,610
you how you can abuse using known

617
00:33:09,259 --> 00:33:14,279
vulnerability of a recent one ability of

618
00:33:11,610 --> 00:33:16,799
the driver of an anti-malware software

619
00:33:14,279 --> 00:33:19,559
stopzilla this driver is known to be

620
00:33:16,799 --> 00:33:21,779
vulnerable it's a sign driver it cut it

621
00:33:19,559 --> 00:33:26,668
gets not caught by antivirus so you can

622
00:33:21,779 --> 00:33:28,740
abuse from it I create a special

623
00:33:26,669 --> 00:33:31,619
registry under my local profile and then

624
00:33:28,740 --> 00:33:34,379
tell to until Oh driver to load the

625
00:33:31,619 --> 00:33:37,499
parameters of this driver from this hive

626
00:33:34,379 --> 00:33:39,539
which is under my control and we send it

627
00:33:37,499 --> 00:33:40,980
a load driver I load the driver and if

628
00:33:39,539 --> 00:33:45,149
everything works

629
00:33:40,980 --> 00:33:47,899
I get the driver load it okay and then I

630
00:33:45,149 --> 00:33:50,729
will use an exploit for this driver

631
00:33:47,899 --> 00:33:53,908
which I modified a little bit and this

632
00:33:50,730 --> 00:33:56,309
is interesting because in this exploit

633
00:33:53,909 --> 00:33:57,990
you have to change to privileges the

634
00:33:56,309 --> 00:34:00,330
load driver privilege and the create

635
00:33:57,990 --> 00:34:02,820
token because it's an arbitrary right

636
00:34:00,330 --> 00:34:06,240
right which activates you the create

637
00:34:02,820 --> 00:34:10,109
token privilege so I can obtain the

638
00:34:06,240 --> 00:34:10,829
token I obtained this privilege and then

639
00:34:10,109 --> 00:34:13,918
I add my

640
00:34:10,829 --> 00:34:16,079
self to the local administrator group so

641
00:34:13,918 --> 00:34:20,489
this is an example of how abusing from

642
00:34:16,079 --> 00:34:24,089
this driver okay finally the last two

643
00:34:20,489 --> 00:34:26,728
ones the in percent assigned primary

644
00:34:24,089 --> 00:34:31,078
token these are also very powerful

645
00:34:26,728 --> 00:34:33,328
privileges because they permits you to

646
00:34:31,079 --> 00:34:35,309
impersonate an access token so if we are

647
00:34:33,329 --> 00:34:37,349
able to get an access token from a

648
00:34:35,309 --> 00:34:40,649
period user you can impersonate them

649
00:34:37,349 --> 00:34:44,629
with these two privileges assign primary

650
00:34:40,649 --> 00:34:46,498
we can impersonate a process or

651
00:34:44,629 --> 00:34:49,379
privilege you can impersonate the

652
00:34:46,498 --> 00:34:52,738
process or a thread in personal

653
00:34:49,379 --> 00:34:57,509
privilege cause the create process with

654
00:34:52,739 --> 00:35:00,029
token API which permits you to launch a

655
00:34:57,509 --> 00:35:02,459
process but it relies on the secondary

656
00:35:00,029 --> 00:35:04,440
logon server service so if the secondary

657
00:35:02,459 --> 00:35:09,629
learn several is not running you cannot

658
00:35:04,440 --> 00:35:11,279
use this run the assignment token is

659
00:35:09,630 --> 00:35:16,019
also interesting because it's available

660
00:35:11,279 --> 00:35:18,180
in a medium integrity level process you

661
00:35:16,019 --> 00:35:21,749
can see what sort of nasty things you

662
00:35:18,180 --> 00:35:24,299
could do with these privileges how can

663
00:35:21,749 --> 00:35:26,430
we get this privilege token because we

664
00:35:24,299 --> 00:35:28,259
have impersonation or sign primary we

665
00:35:26,430 --> 00:35:31,049
need to get the token of a privileged

666
00:35:28,259 --> 00:35:33,359
user well there are so many ways to do

667
00:35:31,049 --> 00:35:35,549
it the classic ways is the unnamed pipe

668
00:35:33,359 --> 00:35:38,130
if you force a privileged process to

669
00:35:35,549 --> 00:35:39,119
write a name pipe which is each each is

670
00:35:38,130 --> 00:35:41,489
under your control

671
00:35:39,119 --> 00:35:43,799
once the privileged process rights in

672
00:35:41,489 --> 00:35:46,019
your pipe you intercept it impersonate

673
00:35:43,799 --> 00:35:48,779
the thread get the token and then you

674
00:35:46,019 --> 00:35:50,968
can do everything with this one or via

675
00:35:48,779 --> 00:35:53,369
and local and ELN authentication which

676
00:35:50,969 --> 00:35:57,029
is very very interesting or the adikam

677
00:35:53,369 --> 00:35:59,130
RPC callbacks the killer expla exploit

678
00:35:57,029 --> 00:36:00,930
for these two privileges is the rotten

679
00:35:59,130 --> 00:36:04,009
potatoes know how many of you knows

680
00:36:00,930 --> 00:36:07,618
about these previous robot is exploit

681
00:36:04,009 --> 00:36:08,339
you will already know it okay this is a

682
00:36:07,619 --> 00:36:13,109
fantastic

683
00:36:08,339 --> 00:36:16,288
exploit and basically it's this one if

684
00:36:13,109 --> 00:36:19,348
you request the initialization of the

685
00:36:16,289 --> 00:36:22,920
atacama object using a fake storage

686
00:36:19,349 --> 00:36:24,630
object you can reflect the RPC

687
00:36:22,920 --> 00:36:26,430
communication to a local and

688
00:36:24,630 --> 00:36:29,790
point which is under your control and

689
00:36:26,430 --> 00:36:32,850
TWEN and tln local authentication of

690
00:36:29,790 --> 00:36:34,680
cure you modified the until and message

691
00:36:32,850 --> 00:36:36,810
in order to establish the secret in

692
00:36:34,680 --> 00:36:38,730
context once you have established the

693
00:36:36,810 --> 00:36:40,980
security context you are able to get the

694
00:36:38,730 --> 00:36:44,430
token and with the privilege we

695
00:36:40,980 --> 00:36:46,320
impersonated if I impersonate a local

696
00:36:44,430 --> 00:36:49,379
system authentication I have the token

697
00:36:46,320 --> 00:36:52,380
of the system users and I am I have the

698
00:36:49,380 --> 00:36:55,800
maximum of privileges there has been

699
00:36:52,380 --> 00:37:02,160
also an exploit published three years

700
00:36:55,800 --> 00:37:04,890
ago and it's still working and this

701
00:37:02,160 --> 00:37:07,440
original exploit relied on a meteor

702
00:37:04,890 --> 00:37:09,990
patter incognito there were other

703
00:37:07,440 --> 00:37:12,420
standalone variants me too I wrote two

704
00:37:09,990 --> 00:37:15,899
variants which didn't rely on this one

705
00:37:12,420 --> 00:37:18,780
but or standalone but there was a

706
00:37:15,900 --> 00:37:20,760
problem first of all the decom server

707
00:37:18,780 --> 00:37:22,380
was fixed it was the bits at the

708
00:37:20,760 --> 00:37:24,630
background intelligent transfer service

709
00:37:22,380 --> 00:37:27,360
and the second one was that also the

710
00:37:24,630 --> 00:37:29,580
local listing port was fixed on 666 okay

711
00:37:27,360 --> 00:37:31,680
and during a Windows desktop padding

712
00:37:29,580 --> 00:37:33,810
review my friends at pay found a week

713
00:37:31,680 --> 00:37:35,910
service configuration gained access with

714
00:37:33,810 --> 00:37:38,220
these privileges but the rotten potato

715
00:37:35,910 --> 00:37:40,920
didn't not work because the mid server

716
00:37:38,220 --> 00:37:43,230
was unavailable and the local port was

717
00:37:40,920 --> 00:37:45,240
firewalled so we decided together to

718
00:37:43,230 --> 00:37:50,690
produce this one the juicy potato how

719
00:37:45,240 --> 00:37:50,689
many of you could knows about this great

720
00:37:51,230 --> 00:37:56,970
we discovered that other than bits there

721
00:37:54,330 --> 00:38:00,210
were other out of possums come servers

722
00:37:56,970 --> 00:38:03,540
which could been abused important thing

723
00:38:00,210 --> 00:38:05,460
is that they run as local system they

724
00:38:03,540 --> 00:38:08,759
can be instantiated by a service user

725
00:38:05,460 --> 00:38:10,770
and then they expose the I Marshall

726
00:38:08,760 --> 00:38:15,900
interface because all the magic occurs

727
00:38:10,770 --> 00:38:18,120
during the unmarshal of the object there

728
00:38:15,900 --> 00:38:19,980
we discover also that were interesting

729
00:38:18,120 --> 00:38:22,560
clsid which impersonates the user

730
00:38:19,980 --> 00:38:25,730
connected to first session so if i have

731
00:38:22,560 --> 00:38:29,100
a domain administrator connected i can

732
00:38:25,730 --> 00:38:32,690
using the clsid impersonate directly the

733
00:38:29,100 --> 00:38:32,690
domain administrator is cool

734
00:38:33,059 --> 00:38:41,559
you can see the typical setup of a

735
00:38:36,489 --> 00:38:44,259
perfect deacon server what does our tool

736
00:38:41,559 --> 00:38:46,779
do it's what published last year you can

737
00:38:44,259 --> 00:38:49,239
choose a clsid you can define a

738
00:38:46,779 --> 00:38:53,829
listening port because in order to do

739
00:38:49,239 --> 00:38:56,559
that we had to change the string binding

740
00:38:53,829 --> 00:38:59,140
of the marshal interface pointer

741
00:38:56,559 --> 00:39:01,720
structure you can define also an

742
00:38:59,140 --> 00:39:04,960
external air PC port and IP address and

743
00:39:01,720 --> 00:39:07,359
in this do if you have a machine under

744
00:39:04,960 --> 00:39:09,430
your control the authentication will be

745
00:39:07,359 --> 00:39:11,519
totally silent because in the lock and

746
00:39:09,430 --> 00:39:14,799
even viewer there will be no trace of

747
00:39:11,519 --> 00:39:18,008
your authentication system your abuse of

748
00:39:14,799 --> 00:39:20,680
this exploit the program to launch with

749
00:39:18,009 --> 00:39:23,170
optional argument then if you want to

750
00:39:20,680 --> 00:39:25,089
use the one or two process modes you

751
00:39:23,170 --> 00:39:30,779
want to use and also you produce the

752
00:39:25,089 --> 00:39:34,239
list of clsid for every Windows version

753
00:39:30,779 --> 00:39:37,420
you can find it here on them on the

754
00:39:34,239 --> 00:39:41,769
github and recently it was or it is also

755
00:39:37,420 --> 00:39:45,099
available at as Metasploit module ok ok

756
00:39:41,769 --> 00:39:46,779
this is an example of some of this and I

757
00:39:45,099 --> 00:39:59,950
will show you a short video also about

758
00:39:46,779 --> 00:40:05,140
this I have gained and chairman D speaks

759
00:39:59,950 --> 00:40:07,299
shell ok my user is the Iast typical

760
00:40:05,140 --> 00:40:10,960
default approval user who has these

761
00:40:07,299 --> 00:40:15,400
privileges so I will launch my juicy

762
00:40:10,960 --> 00:40:17,549
potato is in the clsid the interesting

763
00:40:15,400 --> 00:40:17,549
one

764
00:40:25,440 --> 00:40:54,160
I'm lab I'm domain administrator very

765
00:40:28,900 --> 00:40:56,079
easy so this is because it's very mmm

766
00:40:54,160 --> 00:40:58,779
how can you say disrupting is privileged

767
00:40:56,079 --> 00:41:00,999
and also I asked Microsoft Hema what can

768
00:40:58,779 --> 00:41:05,619
I do in order to prevent this one the

769
00:41:00,999 --> 00:41:07,479
first thing is that like reading The

770
00:41:05,619 --> 00:41:10,450
Lancet they were not aware of this kind

771
00:41:07,479 --> 00:41:12,640
of exploit it seemed strange to me but

772
00:41:10,450 --> 00:41:15,009
it was and after some exchange of email

773
00:41:12,640 --> 00:41:19,209
they told you why we are working hard on

774
00:41:15,009 --> 00:41:21,450
it but probably as Microsoft says the

775
00:41:19,209 --> 00:41:26,859
behavior is by design so we cannot

776
00:41:21,450 --> 00:41:31,419
change this ok and the last email in the

777
00:41:26,859 --> 00:41:33,880
current model we can know we can give no

778
00:41:31,420 --> 00:41:37,390
hardening if recommendation because you

779
00:41:33,880 --> 00:41:39,339
cannot fix this one maybe in a next

780
00:41:37,390 --> 00:41:47,680
version disease was the last male and

781
00:41:39,339 --> 00:41:50,469
then Microsoft closed the chasm so is it

782
00:41:47,680 --> 00:41:53,948
possible to prevent it yes and no

783
00:41:50,469 --> 00:41:56,440
obviously protect sensitive accounts

784
00:41:53,949 --> 00:41:59,949
this seems obvious now or end your

785
00:41:56,440 --> 00:42:04,690
application disable unnecessary service

786
00:41:59,949 --> 00:42:06,969
in Windows 2 2016 the Xbox game service

787
00:42:04,690 --> 00:42:10,269
which runs a system was enabled so you

788
00:42:06,969 --> 00:42:13,839
have to tell me what the hell does I

789
00:42:10,269 --> 00:42:17,160
that does do I need the Xbox service on

790
00:42:13,839 --> 00:42:19,449
a Windows Server it's crazy and then

791
00:42:17,160 --> 00:42:21,749
restrict the permissions it could be an

792
00:42:19,449 --> 00:42:24,369
option but it could be very dangerous or

793
00:42:21,749 --> 00:42:27,430
disabled they come at all but here again

794
00:42:24,369 --> 00:42:30,880
you could run into several several

795
00:42:27,430 --> 00:42:33,868
problems so the good news for the

796
00:42:30,880 --> 00:42:38,680
defenders is if you upgrade to Windows

797
00:42:33,869 --> 00:42:39,220
1809 or Windows 2019 the exploit does no

798
00:42:38,680 --> 00:42:41,020
more work

799
00:42:39,220 --> 00:42:44,500
because they fix it it's no more

800
00:42:41,020 --> 00:42:47,560
possible to do oxyde resolving using a

801
00:42:44,500 --> 00:42:51,690
port different than 135 and so they

802
00:42:47,560 --> 00:42:56,859
finally fix it so but there are several

803
00:42:51,690 --> 00:43:01,450
windows 26 2016 servers there are

804
00:42:56,859 --> 00:43:04,299
several windows 10 desktop with version

805
00:43:01,450 --> 00:43:12,160
smaller than this one so the problem

806
00:43:04,300 --> 00:43:13,119
remains final thoughts from the attacker

807
00:43:12,160 --> 00:43:14,980
perspective

808
00:43:13,119 --> 00:43:18,250
never underestimate obviously these

809
00:43:14,980 --> 00:43:24,130
privileges especially in elevated shell

810
00:43:18,250 --> 00:43:26,410
and in Windows pre versions if you have

811
00:43:24,130 --> 00:43:29,260
to these two systems these two

812
00:43:26,410 --> 00:43:30,910
privileges you are automatically system

813
00:43:29,260 --> 00:43:34,510
this is what we call the golden

814
00:43:30,910 --> 00:43:38,109
privilege and service user are more

815
00:43:34,510 --> 00:43:40,690
safeties and security features maybe

816
00:43:38,109 --> 00:43:42,250
there are other interesting privilege to

817
00:43:40,690 --> 00:43:44,829
abuse from probably yes

818
00:43:42,250 --> 00:43:48,040
there are some new privileges which no

819
00:43:44,829 --> 00:43:54,760
one knows exactly and what they do so

820
00:43:48,040 --> 00:44:00,400
it's another there are an atom you can

821
00:43:54,760 --> 00:44:02,410
explore other privileges so we have four

822
00:44:00,400 --> 00:44:06,270
minutes that's all I hope that you

823
00:44:02,410 --> 00:44:10,618
enjoyed my talk that it was heard and

824
00:44:06,270 --> 00:44:10,619
special thanks to this person yes

