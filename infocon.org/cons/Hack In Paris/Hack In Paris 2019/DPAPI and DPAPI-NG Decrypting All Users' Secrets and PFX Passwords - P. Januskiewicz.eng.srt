1
00:00:04,940 --> 00:00:11,550
so yeah we've got interns 45 minutes

2
00:00:09,000 --> 00:00:15,120
welcome on my presentation as you can

3
00:00:11,550 --> 00:00:21,119
see poor village a quite a complex last

4
00:00:15,120 --> 00:00:23,369
name and I'm from Poland just a couple

5
00:00:21,119 --> 00:00:26,939
of words to mentioned do you want

6
00:00:23,369 --> 00:00:29,150
something you might come over no it's

7
00:00:26,939 --> 00:00:32,340
good okay great great perfect thank you

8
00:00:29,150 --> 00:00:35,960
yeah so as you can see I'm the CEO of

9
00:00:32,340 --> 00:00:39,090
secure and the company that I started

10
00:00:35,960 --> 00:00:40,649
almost 11 years ago right now just to

11
00:00:39,090 --> 00:00:43,469
give you a couple of words we are

12
00:00:40,649 --> 00:00:47,250
editing between four locations Poland

13
00:00:43,469 --> 00:00:51,270
Dubai New York and Switzerland and we

14
00:00:47,250 --> 00:00:54,210
are a group of like 40 people out there

15
00:00:51,270 --> 00:00:57,390
and we do basically all the geeky stuff

16
00:00:54,210 --> 00:00:59,190
that I guess you guys do the same which

17
00:00:57,390 --> 00:01:01,530
is cyber security that's why we're

18
00:00:59,190 --> 00:01:04,530
meeting up over here

19
00:01:01,530 --> 00:01:06,090
I do have 15 years of experience in the

20
00:01:04,530 --> 00:01:08,340
field are playing with cyber security

21
00:01:06,090 --> 00:01:11,490
this is my hope being my life my passion

22
00:01:08,340 --> 00:01:13,110
and together with my team we are doing a

23
00:01:11,490 --> 00:01:15,539
cyber security research into various

24
00:01:13,110 --> 00:01:18,210
fields we've written over 200 hacking

25
00:01:15,540 --> 00:01:21,240
tools that we share for free that we use

26
00:01:18,210 --> 00:01:23,100
normally for the pen tests but why not

27
00:01:21,240 --> 00:01:26,179
sharing that's why you're also here so

28
00:01:23,100 --> 00:01:28,740
this is pretty much our background now

29
00:01:26,180 --> 00:01:31,979
just a couple of words yes so today's

30
00:01:28,740 --> 00:01:33,390
presentation it's gonna be fun one of

31
00:01:31,979 --> 00:01:36,119
the most difficult subjects in

32
00:01:33,390 --> 00:01:38,759
cybersecurity I would say which is a

33
00:01:36,119 --> 00:01:42,750
data protection API and data protection

34
00:01:38,759 --> 00:01:45,210
API ng so different ways how operating

35
00:01:42,750 --> 00:01:47,700
system protects our information and let

36
00:01:45,210 --> 00:01:50,460
me tell you something that I personally

37
00:01:47,700 --> 00:01:52,920
believe in and I think so is that this

38
00:01:50,460 --> 00:01:56,939
is a subject that I really think each of

39
00:01:52,920 --> 00:02:00,600
us working in cyber security should know

40
00:01:56,939 --> 00:02:02,100
at least well because this is how our

41
00:02:00,600 --> 00:02:03,419
data is protected in the operating

42
00:02:02,100 --> 00:02:04,350
system so that's what we're going to be

43
00:02:03,420 --> 00:02:06,600
talking about yeah

44
00:02:04,350 --> 00:02:09,690
so difficult subject but absolutely

45
00:02:06,600 --> 00:02:12,540
important now why do we have DP API and

46
00:02:09,690 --> 00:02:12,940
dpi apap ing we're going to learn the

47
00:02:12,540 --> 00:02:15,250
prison

48
00:02:12,940 --> 00:02:17,410
but ng stands for new generation and

49
00:02:15,250 --> 00:02:19,120
that's something that basically allows

50
00:02:17,410 --> 00:02:20,740
us to encrypt data in a little bit

51
00:02:19,120 --> 00:02:22,840
different way we could think new

52
00:02:20,740 --> 00:02:24,970
generation means kind of better but not

53
00:02:22,840 --> 00:02:27,010
necessarily really because DP API

54
00:02:24,970 --> 00:02:29,140
classic so the regular one it's

55
00:02:27,010 --> 00:02:31,630
something that operating system uses

56
00:02:29,140 --> 00:02:32,950
anyway so this is basically what we're

57
00:02:31,630 --> 00:02:36,340
going to be talking about today

58
00:02:32,950 --> 00:02:39,310
now few words basically about myself if

59
00:02:36,340 --> 00:02:41,140
we haven't met before I

60
00:02:39,310 --> 00:02:43,630
you probably notice that I really like

61
00:02:41,140 --> 00:02:46,410
to talk so I talk about different things

62
00:02:43,630 --> 00:02:49,600
all the time including cybersecurity and

63
00:02:46,410 --> 00:02:52,600
I also have a chance to speak at other

64
00:02:49,600 --> 00:02:55,060
conferences quite recently I was rated

65
00:02:52,600 --> 00:02:58,540
number one speaker at blackhat in Asia

66
00:02:55,060 --> 00:03:00,400
which I mean it's okay I'm happy but it

67
00:02:58,540 --> 00:03:02,170
doesn't really matter at the end as long

68
00:03:00,400 --> 00:03:05,820
as there is something useful for you

69
00:03:02,170 --> 00:03:10,089
guys yeah so as simple as this so also

70
00:03:05,820 --> 00:03:12,820
things like ignite things like Reber say

71
00:03:10,090 --> 00:03:15,010
in San Francisco so our team and myself

72
00:03:12,820 --> 00:03:16,959
we really like to share knowledge about

73
00:03:15,010 --> 00:03:20,769
what we do so let me tell you a little

74
00:03:16,959 --> 00:03:23,500
bit about the research regarding data

75
00:03:20,770 --> 00:03:25,959
protection API because as far as we know

76
00:03:23,500 --> 00:03:28,300
we are the first team out there that

77
00:03:25,959 --> 00:03:31,150
fully reverse engineered data protection

78
00:03:28,300 --> 00:03:33,790
API it took us over two years to do it

79
00:03:31,150 --> 00:03:37,420
but research in general around data

80
00:03:33,790 --> 00:03:39,790
protection API it's a hell so basically

81
00:03:37,420 --> 00:03:41,708
in Windows putting this in a very

82
00:03:39,790 --> 00:03:44,109
shortened version you don't have that

83
00:03:41,709 --> 00:03:46,870
many standards if it's about how do you

84
00:03:44,110 --> 00:03:48,550
actually approach data to encrypt it so

85
00:03:46,870 --> 00:03:50,980
if you go if you have to go through a

86
00:03:48,550 --> 00:03:53,410
bunch of levels and it's like 20 levels

87
00:03:50,980 --> 00:03:55,299
to go through you're wondering what kind

88
00:03:53,410 --> 00:03:57,250
of algorithm was used over there yes so

89
00:03:55,300 --> 00:03:59,350
this one is this this moment is that

90
00:03:57,250 --> 00:04:01,870
this is that this is this so you have to

91
00:03:59,350 --> 00:04:03,640
figure out things all the time

92
00:04:01,870 --> 00:04:05,350
by all means and that's why it's a

93
00:04:03,640 --> 00:04:08,410
little bit painful this is something by

94
00:04:05,350 --> 00:04:12,730
the way that reminds me my vacation when

95
00:04:08,410 --> 00:04:14,500
I was in Siberia and I was just

96
00:04:12,730 --> 00:04:15,459
traveling around you know this is one of

97
00:04:14,500 --> 00:04:17,440
these places that you want to go to

98
00:04:15,459 --> 00:04:19,720
because there's like sometimes no mobile

99
00:04:17,440 --> 00:04:20,950
arrange so for IT people that sometimes

100
00:04:19,720 --> 00:04:22,330
perfect because we are all the time

101
00:04:20,950 --> 00:04:24,130
connected so there's this moment when

102
00:04:22,330 --> 00:04:26,409
you're gonna get disconnected and that's

103
00:04:24,130 --> 00:04:26,700
the place and I was having breakfast in

104
00:04:26,410 --> 00:04:28,350
a

105
00:04:26,700 --> 00:04:30,060
in places yes so there's like let the

106
00:04:28,350 --> 00:04:32,220
restaurant here someone's house over

107
00:04:30,060 --> 00:04:33,630
there this place here and I speak a

108
00:04:32,220 --> 00:04:35,610
little Russian too but unfortunately

109
00:04:33,630 --> 00:04:37,770
every single time when I was like asking

110
00:04:35,610 --> 00:04:39,750
for something during the breakfast can i

111
00:04:37,770 --> 00:04:41,609
police have scrambled eggs I was just

112
00:04:39,750 --> 00:04:44,550
getting a sausage and I was asking for

113
00:04:41,610 --> 00:04:46,410
example for whatever our dumplings and I

114
00:04:44,550 --> 00:04:48,480
was getting scrambled eggs so I

115
00:04:46,410 --> 00:04:50,820
literally could not and that started to

116
00:04:48,480 --> 00:04:52,800
become funny I literally could not get

117
00:04:50,820 --> 00:04:54,570
for the breakfast what I wanted so there

118
00:04:52,800 --> 00:04:56,610
was his restaurant when I get in or like

119
00:04:54,570 --> 00:04:59,790
the place little place and in a menu

120
00:04:56,610 --> 00:05:02,040
there was a cheese sandwich now

121
00:04:59,790 --> 00:05:03,840
how wrong can you go about the cheese

122
00:05:02,040 --> 00:05:06,150
sandwich you can't right it's a slice of

123
00:05:03,840 --> 00:05:08,159
bread and the cheese I was like score

124
00:05:06,150 --> 00:05:10,530
I'm gonna order the simplest position in

125
00:05:08,160 --> 00:05:12,540
a menu to make sure that I'm gonna be

126
00:05:10,530 --> 00:05:14,219
successful finally in ordering my

127
00:05:12,540 --> 00:05:20,070
breakfast so when I asked for the cheese

128
00:05:14,220 --> 00:05:22,230
sandwich I got that and like they they

129
00:05:20,070 --> 00:05:24,240
kept the promise yeah this is the cheese

130
00:05:22,230 --> 00:05:26,400
sandwich but sometimes it's really

131
00:05:24,240 --> 00:05:29,340
disappointing and what I'm saying is

132
00:05:26,400 --> 00:05:31,500
that data protection API it's a dad kind

133
00:05:29,340 --> 00:05:33,690
of a subject so there's always a

134
00:05:31,500 --> 00:05:37,260
solution there's always a hope that

135
00:05:33,690 --> 00:05:39,450
you're gonna get a good thing but the RO

136
00:05:37,260 --> 00:05:42,180
through it it's very very painful yeah

137
00:05:39,450 --> 00:05:43,920
so forgive me for the presentation but

138
00:05:42,180 --> 00:05:47,490
we're gonna focus on the hard core stuff

139
00:05:43,920 --> 00:05:50,220
so no jokes anymore and we are just

140
00:05:47,490 --> 00:05:51,690
purely learning what DP API is about

141
00:05:50,220 --> 00:05:54,690
when you leave this room

142
00:05:51,690 --> 00:05:56,430
I really hope and I hope that this is

143
00:05:54,690 --> 00:05:59,580
your goal too that you will know more

144
00:05:56,430 --> 00:06:02,760
about the DP API that's my goal okay so

145
00:05:59,580 --> 00:06:04,650
just a few words Windows uses the

146
00:06:02,760 --> 00:06:06,870
following algorithms of course it uses

147
00:06:04,650 --> 00:06:09,150
more but when you do the research around

148
00:06:06,870 --> 00:06:11,340
cryptography that's more or less what

149
00:06:09,150 --> 00:06:13,200
you are seeing so when you kind of

150
00:06:11,340 --> 00:06:14,549
define that scope you can predict that

151
00:06:13,200 --> 00:06:17,280
people who are writing the code on the

152
00:06:14,550 --> 00:06:19,140
other side they can pretty much use one

153
00:06:17,280 --> 00:06:21,030
of these algorithms out there so that's

154
00:06:19,140 --> 00:06:22,710
kind of nice because that narrows in a

155
00:06:21,030 --> 00:06:24,690
certain sense what you were actually

156
00:06:22,710 --> 00:06:26,810
dealing with and whenever we are

157
00:06:24,690 --> 00:06:29,790
thinking about the data protection API

158
00:06:26,810 --> 00:06:32,880
what we will need to discuss is what is

159
00:06:29,790 --> 00:06:36,360
it in it for real in Windows yeah so the

160
00:06:32,880 --> 00:06:38,310
day the prediction API it's a API in

161
00:06:36,360 --> 00:06:40,690
Windows that allows you to protect your

162
00:06:38,310 --> 00:06:42,280
data in place when I

163
00:06:40,690 --> 00:06:44,440
you are saving it through various

164
00:06:42,280 --> 00:06:47,169
applications or by using the operating

165
00:06:44,440 --> 00:06:49,750
system yeah so basically whenever you

166
00:06:47,170 --> 00:06:51,790
are thinking about for example saving

167
00:06:49,750 --> 00:06:53,770
your password in Outlook or saving

168
00:06:51,790 --> 00:06:55,540
password through the browser generically

169
00:06:53,770 --> 00:06:57,549
saying or you are thinking about how

170
00:06:55,540 --> 00:06:59,170
your private keys are protected this is

171
00:06:57,550 --> 00:07:01,300
exactly where the data protection API

172
00:06:59,170 --> 00:07:04,210
comes to place and of course question is

173
00:07:01,300 --> 00:07:06,760
is this a safe mechanism and beta

174
00:07:04,210 --> 00:07:09,849
protection API in general is delivered

175
00:07:06,760 --> 00:07:14,140
in three places three things one system

176
00:07:09,850 --> 00:07:17,800
DP API second local user dpi PI and

177
00:07:14,140 --> 00:07:20,020
third domain user DP API because for the

178
00:07:17,800 --> 00:07:22,480
domain users they PAPR is done in a

179
00:07:20,020 --> 00:07:24,150
little bit different way so whenever we

180
00:07:22,480 --> 00:07:26,950
are thinking of course about that

181
00:07:24,150 --> 00:07:28,780
question is how do we protect these

182
00:07:26,950 --> 00:07:30,610
secrets so we already know what are the

183
00:07:28,780 --> 00:07:33,070
secrets it could be an Outlook password

184
00:07:30,610 --> 00:07:36,190
password stored in a browser do you guys

185
00:07:33,070 --> 00:07:39,790
by the way we cool software from new to

186
00:07:36,190 --> 00:07:42,040
soft yeah ok some of you who does please

187
00:07:39,790 --> 00:07:45,040
put your hands up I need to know okay

188
00:07:42,040 --> 00:07:46,900
like seriously ten percent or you didn't

189
00:07:45,040 --> 00:07:49,390
have a breakfast or something okay

190
00:07:46,900 --> 00:07:51,520
yourself please check it out yeah so

191
00:07:49,390 --> 00:07:55,479
near soft is a software that allows you

192
00:07:51,520 --> 00:07:58,719
to basically extract the password from

193
00:07:55,480 --> 00:07:59,890
the browser and if or Outlook etc Wi-Fi

194
00:07:58,720 --> 00:08:02,230
please check it out

195
00:07:59,890 --> 00:08:04,570
and when you run it as you then they

196
00:08:02,230 --> 00:08:07,030
give you your password let me start with

197
00:08:04,570 --> 00:08:09,909
this so that we are basically at the

198
00:08:07,030 --> 00:08:12,900
same page so we're learning let's do it

199
00:08:09,910 --> 00:08:15,910
so this is basically Windows 10 and

200
00:08:12,900 --> 00:08:17,080
eventually when we get into different

201
00:08:15,910 --> 00:08:19,060
tools that I have over here

202
00:08:17,080 --> 00:08:21,370
I got a software called Chrome pass and

203
00:08:19,060 --> 00:08:22,510
this is near soft so this is what I

204
00:08:21,370 --> 00:08:24,150
wanted to show you if you want to

205
00:08:22,510 --> 00:08:26,380
recover your password for example

206
00:08:24,150 --> 00:08:28,270
because you stored it somewhere in the

207
00:08:26,380 --> 00:08:31,480
operating system this is the software

208
00:08:28,270 --> 00:08:34,299
that will allow you to learn that

209
00:08:31,480 --> 00:08:36,760
particular password yeah so Krampus

210
00:08:34,299 --> 00:08:39,789
allows me to extract information from

211
00:08:36,760 --> 00:08:42,010
the Google Chrome yeah so we've got

212
00:08:39,789 --> 00:08:45,100
Freddy Krueger password for LinkedIn

213
00:08:42,010 --> 00:08:46,900
password password yam so basically what

214
00:08:45,100 --> 00:08:49,750
it says is that Freddy stored password

215
00:08:46,900 --> 00:08:51,790
in Chrome and every single time Freddy

216
00:08:49,750 --> 00:08:54,730
enters LinkedIn for the East logged on

217
00:08:51,790 --> 00:08:56,800
yet so this is the setup now whenever

218
00:08:54,730 --> 00:08:59,709
we are thinking about the protection for

219
00:08:56,800 --> 00:09:01,899
that what is absolutely important is the

220
00:08:59,709 --> 00:09:05,079
differentiation in between as we

221
00:09:01,899 --> 00:09:06,370
mentioned local user and the domain user

222
00:09:05,079 --> 00:09:08,888
and this is something that we're going

223
00:09:06,370 --> 00:09:11,320
to be talking about one principle here

224
00:09:08,889 --> 00:09:14,769
is very straightforward is that this is

225
00:09:11,320 --> 00:09:16,360
a secret no doubt and that's secret it's

226
00:09:14,769 --> 00:09:19,680
gonna be yours it's gonna be someone

227
00:09:16,360 --> 00:09:22,300
else this is something that allows you

228
00:09:19,680 --> 00:09:24,969
this secret allows you of course to log

229
00:09:22,300 --> 00:09:26,709
on to LinkedIn but at the same time what

230
00:09:24,970 --> 00:09:30,850
are the preconditions to reach this

231
00:09:26,709 --> 00:09:33,160
secret answer is you need to be you so

232
00:09:30,850 --> 00:09:35,470
when you log on and you are logged on in

233
00:09:33,160 --> 00:09:37,899
Windows and you open Chrome as you

234
00:09:35,470 --> 00:09:39,970
that's the precondition to reach your

235
00:09:37,899 --> 00:09:41,920
secret even though it sounds very

236
00:09:39,970 --> 00:09:43,420
obvious right now that's what we have to

237
00:09:41,920 --> 00:09:46,540
talk about let me give you an example

238
00:09:43,420 --> 00:09:47,709
from two weeks ago I was in us during

239
00:09:46,540 --> 00:09:51,880
the penetration test for one of our

240
00:09:47,709 --> 00:09:54,910
customers and I managed to become a guy

241
00:09:51,880 --> 00:09:58,660
not a domain admin yet but to add to be

242
00:09:54,910 --> 00:10:00,639
a guy who is in person a domain admin so

243
00:09:58,660 --> 00:10:02,439
I had access to his account regular

244
00:10:00,639 --> 00:10:05,440
account not being a domain admin yet and

245
00:10:02,440 --> 00:10:08,370
I was wondering maybe he's connecting

246
00:10:05,440 --> 00:10:11,260
the roles somehow so when I was him I

247
00:10:08,370 --> 00:10:13,899
started to run different types of for

248
00:10:11,260 --> 00:10:16,089
example news of tools on his account and

249
00:10:13,899 --> 00:10:17,829
one of the funny facts is that I was

250
00:10:16,089 --> 00:10:20,399
able to extract different passwords that

251
00:10:17,829 --> 00:10:22,359
he actually saved in Chrome including a

252
00:10:20,399 --> 00:10:25,569
password to the Victoria's Secret

253
00:10:22,360 --> 00:10:27,040
account of his girlfriend yeah so almost

254
00:10:25,569 --> 00:10:28,479
like I mean I mean no we could be

255
00:10:27,040 --> 00:10:31,180
thinking that it's maybe not very

256
00:10:28,480 --> 00:10:33,459
ethical but yeah ok we can leave this

257
00:10:31,180 --> 00:10:34,959
discussion for later yeah so anyway and

258
00:10:33,459 --> 00:10:37,989
there were also some different passwords

259
00:10:34,959 --> 00:10:39,699
of whatever services he was using in the

260
00:10:37,990 --> 00:10:41,170
infrastructures I'm like score I don't

261
00:10:39,699 --> 00:10:44,109
have to be a domain admin I'm just gonna

262
00:10:41,170 --> 00:10:46,689
use these passwords to jump fodder so

263
00:10:44,110 --> 00:10:49,060
let me explain you guys different things

264
00:10:46,690 --> 00:10:51,610
that are related with the data

265
00:10:49,060 --> 00:10:53,649
protection API and basically how does it

266
00:10:51,610 --> 00:10:57,550
work so what we're gonna do right now

267
00:10:53,649 --> 00:10:59,769
I'm gonna actually explain one simple

268
00:10:57,550 --> 00:11:01,839
thing which is related with the data

269
00:10:59,769 --> 00:11:05,110
protection API and how do we actually

270
00:11:01,839 --> 00:11:07,000
reach our secrets and that's gonna be

271
00:11:05,110 --> 00:11:08,570
quite interesting because I'm not very

272
00:11:07,000 --> 00:11:10,760
good at painting things but

273
00:11:08,570 --> 00:11:13,670
we're gonna actually leverage it this

274
00:11:10,760 --> 00:11:15,800
way so let me whiten it at and we're

275
00:11:13,670 --> 00:11:20,150
gonna do a little bit of a picture about

276
00:11:15,800 --> 00:11:22,550
how the domain user reaches its secrets

277
00:11:20,150 --> 00:11:23,329
so the domain user does it in a

278
00:11:22,550 --> 00:11:25,640
following way

279
00:11:23,330 --> 00:11:27,620
domain user logs on this one is going to

280
00:11:25,640 --> 00:11:30,350
be easy of course yes so user logs on of

281
00:11:27,620 --> 00:11:32,900
the username and the password what we've

282
00:11:30,350 --> 00:11:36,230
got in a simple words is that password

283
00:11:32,900 --> 00:11:38,319
is converted to the md4 because use

284
00:11:36,230 --> 00:11:41,030
windows uses md4 so the password hajj

285
00:11:38,320 --> 00:11:43,580
eventually we're verifying if we can log

286
00:11:41,030 --> 00:11:46,160
on to the domain yeah okay user logged

287
00:11:43,580 --> 00:11:48,020
on fine what's happening next is that if

288
00:11:46,160 --> 00:11:51,140
the user has a password stored in a

289
00:11:48,020 --> 00:11:53,660
browser let's call it a secret over here

290
00:11:51,140 --> 00:11:57,040
then what's happening is that that

291
00:11:53,660 --> 00:12:01,370
passwords hash it's and that's crucial

292
00:11:57,040 --> 00:12:04,880
protecting master key that is stored in

293
00:12:01,370 --> 00:12:08,780
the master key container and that master

294
00:12:04,880 --> 00:12:11,030
key is protecting a secret so simple

295
00:12:08,780 --> 00:12:13,339
conclusion is that our secrets are

296
00:12:11,030 --> 00:12:16,250
dependent on the strength of our

297
00:12:13,340 --> 00:12:19,010
password and the security of our account

298
00:12:16,250 --> 00:12:20,840
so whoever's gonna be you will have

299
00:12:19,010 --> 00:12:23,960
access to any of the secrets that you

300
00:12:20,840 --> 00:12:26,150
guys possess including by the way and

301
00:12:23,960 --> 00:12:28,670
that's so important to say all the

302
00:12:26,150 --> 00:12:31,520
applications that you run and the

303
00:12:28,670 --> 00:12:34,880
question is do you trust all your apps

304
00:12:31,520 --> 00:12:37,970
that you run on your account whatever

305
00:12:34,880 --> 00:12:39,980
that will be 7-zip WinRAR whatever that

306
00:12:37,970 --> 00:12:42,050
is yet do you trust the people that

307
00:12:39,980 --> 00:12:43,760
wrote these ups because you run them on

308
00:12:42,050 --> 00:12:45,709
the account that means that these apps

309
00:12:43,760 --> 00:12:47,270
are able to get access to all of you the

310
00:12:45,710 --> 00:12:50,120
other passwords that you have ever

311
00:12:47,270 --> 00:12:52,910
stored in your profile okay now another

312
00:12:50,120 --> 00:12:55,850
part is and this is interesting there's

313
00:12:52,910 --> 00:12:59,480
another master key in the same master

314
00:12:55,850 --> 00:13:01,910
key container so let's call it 1 and K

315
00:12:59,480 --> 00:13:05,590
let's call it two master key 1 is

316
00:13:01,910 --> 00:13:09,530
exactly the same as master key too but

317
00:13:05,590 --> 00:13:17,390
master key too it's encrypted with the

318
00:13:09,530 --> 00:13:19,459
public key of the domain now this is

319
00:13:17,390 --> 00:13:21,470
where the fun begins by the way

320
00:13:19,459 --> 00:13:24,109
we work in a hundred thousand people's

321
00:13:21,470 --> 00:13:26,629
organizations everybody of course is

322
00:13:24,110 --> 00:13:28,939
like a domain user we all have account

323
00:13:26,629 --> 00:13:30,949
in a domain we kind of sometimes store

324
00:13:28,939 --> 00:13:32,149
our secrets we have old look at each of

325
00:13:30,949 --> 00:13:33,979
us as old look we've got Facebook

326
00:13:32,149 --> 00:13:37,639
account accounts LinkedIn and so on and

327
00:13:33,980 --> 00:13:40,160
we save all these secrets in our local

328
00:13:37,639 --> 00:13:42,019
browser yeah we may be like oh I don't

329
00:13:40,160 --> 00:13:43,879
do it I use keep us okay then you will

330
00:13:42,019 --> 00:13:45,470
not be the one but then the rests are

331
00:13:43,879 --> 00:13:48,559
gonna be and this is really the point

332
00:13:45,470 --> 00:13:51,319
over here so here is the question every

333
00:13:48,559 --> 00:13:53,329
single secret that we have its encrypted

334
00:13:51,319 --> 00:13:56,748
with the public key of the domain which

335
00:13:53,329 --> 00:13:59,209
is by the way the same four hundred

336
00:13:56,749 --> 00:14:01,759
thousand people I'll prove it to you in

337
00:13:59,209 --> 00:14:06,079
a second what's the threat over here

338
00:14:01,759 --> 00:14:11,889
what's the question to be asked come on

339
00:14:06,079 --> 00:14:14,359
guys question is where's the private key

340
00:14:11,889 --> 00:14:15,889
right who has access to the private key

341
00:14:14,360 --> 00:14:18,589
if you're gonna have access to the

342
00:14:15,889 --> 00:14:21,769
private key then basically you have

343
00:14:18,589 --> 00:14:24,470
passwords of every single employee in

344
00:14:21,769 --> 00:14:27,980
this organization let's talk about it

345
00:14:24,470 --> 00:14:29,929
and let's demonstrate it so how does it

346
00:14:27,980 --> 00:14:32,449
work we're gonna leverage over here a

347
00:14:29,929 --> 00:14:34,819
certain scenario that I would like to

348
00:14:32,449 --> 00:14:38,240
show you and that scenario is gonna

349
00:14:34,819 --> 00:14:40,998
touch based on the various aspects of DP

350
00:14:38,240 --> 00:14:43,459
API so let's let me explain that it's

351
00:14:40,999 --> 00:14:45,829
gonna be super clear but let's make sure

352
00:14:43,459 --> 00:14:47,809
that we are on the same page so let me

353
00:14:45,829 --> 00:14:50,508
show you one thing first I'm gonna lock

354
00:14:47,809 --> 00:14:52,790
the desktop you can see that I am a

355
00:14:50,509 --> 00:14:55,699
domain user here yeah so I'm gonna log

356
00:14:52,790 --> 00:14:58,519
on Freddie and let me show you the

357
00:14:55,699 --> 00:15:01,040
password password is password yeah and

358
00:14:58,519 --> 00:15:02,600
I'm logging on and that's done yeah so

359
00:15:01,040 --> 00:15:03,410
I'm basically logging on to the domain

360
00:15:02,600 --> 00:15:06,110
not a big deal

361
00:15:03,410 --> 00:15:06,529
now I can see the password everything is

362
00:15:06,110 --> 00:15:09,559
fine

363
00:15:06,529 --> 00:15:11,959
question is where this password is

364
00:15:09,559 --> 00:15:14,209
actually stored where this password is

365
00:15:11,959 --> 00:15:16,248
stored but we're gonna talk about it in

366
00:15:14,209 --> 00:15:18,018
a moment but this password is stored

367
00:15:16,249 --> 00:15:21,379
somewhere in a browser data and so on

368
00:15:18,019 --> 00:15:23,959
and in the hackers mind we will need to

369
00:15:21,379 --> 00:15:27,079
get there and get this data this data

370
00:15:23,959 --> 00:15:29,029
will be encrypted with our master key

371
00:15:27,079 --> 00:15:31,040
eventually and then master key is

372
00:15:29,029 --> 00:15:33,379
encrypted with our password harsh or the

373
00:15:31,040 --> 00:15:33,680
public key of the domain so what I would

374
00:15:33,379 --> 00:15:35,870
like

375
00:15:33,680 --> 00:15:37,729
so today is how to get this private key

376
00:15:35,870 --> 00:15:40,430
of the domain and how you are able to

377
00:15:37,730 --> 00:15:43,190
decrypt every single secret of everybody

378
00:15:40,430 --> 00:15:45,500
that moves within your organization yeah

379
00:15:43,190 --> 00:15:48,320
so let's do it with this positive accent

380
00:15:45,500 --> 00:15:50,660
we're gonna reboot this machine with a

381
00:15:48,320 --> 00:15:53,480
one simple reason because I would like

382
00:15:50,660 --> 00:15:58,219
to show you indeed in this scenario that

383
00:15:53,480 --> 00:16:00,440
our secrets depend on our hash let me

384
00:15:58,220 --> 00:16:02,660
explain that so first of all what we're

385
00:16:00,440 --> 00:16:04,820
gonna do we're gonna reboot this machine

386
00:16:02,660 --> 00:16:06,380
we could be thinking well BitLocker

387
00:16:04,820 --> 00:16:09,020
could help it yes we can do this

388
00:16:06,380 --> 00:16:10,550
demonstration online and offline so for

389
00:16:09,020 --> 00:16:12,290
this BitLocker could help but for the

390
00:16:10,550 --> 00:16:14,839
other scenario with a dpi API it

391
00:16:12,290 --> 00:16:17,719
couldn't yeah so let's let's don't don't

392
00:16:14,839 --> 00:16:20,810
look at this from this perspective now

393
00:16:17,720 --> 00:16:22,430
whenever we've got our Windows box over

394
00:16:20,810 --> 00:16:25,520
here what I would like to do I would

395
00:16:22,430 --> 00:16:29,300
like to change here cache logon data and

396
00:16:25,520 --> 00:16:30,800
cache logon data we're gonna do command

397
00:16:29,300 --> 00:16:33,680
prompt let me just increase the font

398
00:16:30,800 --> 00:16:38,599
quickly here we go

399
00:16:33,680 --> 00:16:40,910
font Bank we got it cache logon data is

400
00:16:38,600 --> 00:16:42,620
something that we're gonna use to log on

401
00:16:40,910 --> 00:16:44,719
when the domain controller is not

402
00:16:42,620 --> 00:16:46,850
available what do I do I want to show

403
00:16:44,720 --> 00:16:49,279
you this because if we're gonna log on

404
00:16:46,850 --> 00:16:52,339
to the system by leveraging cache logon

405
00:16:49,279 --> 00:16:53,720
data we can play with the password so

406
00:16:52,339 --> 00:16:55,910
we're gonna eventually log on with a

407
00:16:53,720 --> 00:16:58,459
different password because I will

408
00:16:55,910 --> 00:17:01,610
overwrite cache logon data so that when

409
00:16:58,459 --> 00:17:03,890
originally user logs on user enters a

410
00:17:01,610 --> 00:17:07,280
password that I have pre generated here

411
00:17:03,890 --> 00:17:08,990
and the cache logon data it's a value in

412
00:17:07,280 --> 00:17:10,160
the registry sometimes we call it crash

413
00:17:08,990 --> 00:17:12,709
credentials but these are not

414
00:17:10,160 --> 00:17:14,510
credentials at all we cannot look gone

415
00:17:12,709 --> 00:17:17,569
with them we can only compare with them

416
00:17:14,510 --> 00:17:20,569
yeah so here we go let's dig in

417
00:17:17,569 --> 00:17:25,129
so in order to be able to override cache

418
00:17:20,569 --> 00:17:27,290
to logon data what I'm gonna use and the

419
00:17:25,130 --> 00:17:29,059
tool that how to present you know this

420
00:17:27,290 --> 00:17:30,830
is a mimic us but this is our secure

421
00:17:29,059 --> 00:17:33,050
edition here we go

422
00:17:30,830 --> 00:17:36,590
where are we going to be overriding the

423
00:17:33,050 --> 00:17:38,510
cache logon data by setting the default

424
00:17:36,590 --> 00:17:41,090
password that is hard-coded in a tool

425
00:17:38,510 --> 00:17:44,450
which is called mimikatz so let's do it

426
00:17:41,090 --> 00:17:46,550
and let's say dump cache and we're going

427
00:17:44,450 --> 00:17:47,360
to overwrite cache logon data based on

428
00:17:46,550 --> 00:17:51,950
windows

429
00:17:47,360 --> 00:17:54,620
system32 config and then system and let

430
00:17:51,950 --> 00:17:59,840
me explain why system in a second system

431
00:17:54,620 --> 00:18:02,209
32 config security and we're gonna do

432
00:17:59,840 --> 00:18:05,090
slash kiwi to override cache logon data

433
00:18:02,210 --> 00:18:07,670
now why am i recalling over here system

434
00:18:05,090 --> 00:18:09,590
and security because when we look at the

435
00:18:07,670 --> 00:18:12,110
cache logon data before we press enter

436
00:18:09,590 --> 00:18:15,949
small explanation is needed within the

437
00:18:12,110 --> 00:18:17,479
cache logon data it looks like this so

438
00:18:15,950 --> 00:18:20,540
cache Logan data is stored in the

439
00:18:17,480 --> 00:18:25,220
registry in the security hive by default

440
00:18:20,540 --> 00:18:26,720
it's 10 values and that hive in general

441
00:18:25,220 --> 00:18:29,419
or any type of something that we call

442
00:18:26,720 --> 00:18:32,540
system secrets they are encrypted

443
00:18:29,419 --> 00:18:35,750
indirectly with the boot key and boot

444
00:18:32,540 --> 00:18:38,110
key is stored with that system hive so

445
00:18:35,750 --> 00:18:41,750
this is why we are actually referring to

446
00:18:38,110 --> 00:18:43,969
the system and security in one command

447
00:18:41,750 --> 00:18:45,980
over here so we've got a LSA dump cache

448
00:18:43,970 --> 00:18:48,860
the windows system for the two convicts

449
00:18:45,980 --> 00:18:52,070
system and security slash key we enter

450
00:18:48,860 --> 00:18:54,559
yeah so we are done fantastic so we have

451
00:18:52,070 --> 00:18:56,780
just over eaten cache logon data for

452
00:18:54,559 --> 00:18:59,960
every single user that is in this box

453
00:18:56,780 --> 00:19:02,240
now just to log on with a different

454
00:18:59,960 --> 00:19:04,070
password which has been generated with

455
00:19:02,240 --> 00:19:06,620
the cache logon data I'm gonna

456
00:19:04,070 --> 00:19:08,840
disconnect this machine from the network

457
00:19:06,620 --> 00:19:10,760
because I will need to log on with the

458
00:19:08,840 --> 00:19:12,409
cache logon data yes so I'm gonna

459
00:19:10,760 --> 00:19:15,049
introduce the password that I already

460
00:19:12,410 --> 00:19:17,090
know in order to compare with the cache

461
00:19:15,049 --> 00:19:19,910
logon data of in the registry bring it

462
00:19:17,090 --> 00:19:22,790
on so we can just cancel this continue

463
00:19:19,910 --> 00:19:25,040
and reboot in the meantime while we are

464
00:19:22,790 --> 00:19:28,100
rebooting let me show you how cache

465
00:19:25,040 --> 00:19:30,110
logon data looks like first of all in

466
00:19:28,100 --> 00:19:33,080
the registry when we do analyze it it

467
00:19:30,110 --> 00:19:37,149
looks like this cache local data has a

468
00:19:33,080 --> 00:19:41,059
name that name is called ms DCC - and

469
00:19:37,150 --> 00:19:44,059
msec - is generated out of the function

470
00:19:41,059 --> 00:19:47,750
that you guys about know because if you

471
00:19:44,059 --> 00:19:49,730
use key pass last pass key volt etc you

472
00:19:47,750 --> 00:19:51,470
are actually using this function for

473
00:19:49,730 --> 00:19:55,640
your data protection this is called

474
00:19:51,470 --> 00:19:58,640
pbkdf2 while keep us for example uses

475
00:19:55,640 --> 00:20:00,760
schwa 512 though for example in Windows

476
00:19:58,640 --> 00:20:03,890
for the cache logon data the

477
00:20:00,760 --> 00:20:06,170
schwa one we could criticize on that but

478
00:20:03,890 --> 00:20:07,820
to be absolutely sincere with you I'm

479
00:20:06,170 --> 00:20:10,580
not working for Microsoft so hopefully

480
00:20:07,820 --> 00:20:13,730
you know that this is not that bad yes

481
00:20:10,580 --> 00:20:16,460
so eventually the complexity of this is

482
00:20:13,730 --> 00:20:18,110
good enough for us to be trusting the

483
00:20:16,460 --> 00:20:21,110
solution today yeah

484
00:20:18,110 --> 00:20:24,350
so cache logon data it's comfort comfort

485
00:20:21,110 --> 00:20:26,689
for us and don't be afraid to use it now

486
00:20:24,350 --> 00:20:29,629
whenever we are thinking about our box

487
00:20:26,690 --> 00:20:31,910
over here so let me just simply

488
00:20:29,630 --> 00:20:34,250
reconnect because we supposed to boot

489
00:20:31,910 --> 00:20:36,650
this machine already and this is this

490
00:20:34,250 --> 00:20:39,020
one now what I'm gonna do I'm gonna log

491
00:20:36,650 --> 00:20:41,510
on Freddy Krueger once again with the

492
00:20:39,020 --> 00:20:42,830
password password so if you remember

493
00:20:41,510 --> 00:20:45,500
this is what we've been using over here

494
00:20:42,830 --> 00:20:47,179
and this password is incorrect because

495
00:20:45,500 --> 00:20:49,370
right now we are comparing with the

496
00:20:47,180 --> 00:20:51,350
cache log on data pre-dinner ated value

497
00:20:49,370 --> 00:20:54,080
in the registry so we're gonna do Mima

498
00:20:51,350 --> 00:20:57,139
cards like this here we go

499
00:20:54,080 --> 00:20:59,090
and this is basically what we are

500
00:20:57,140 --> 00:21:01,070
comparing with so what's happening over

501
00:20:59,090 --> 00:21:03,709
here over here right now when we log on

502
00:21:01,070 --> 00:21:06,620
we're taking this value we are

503
00:21:03,710 --> 00:21:09,080
calculating md4 on the top of that we

504
00:21:06,620 --> 00:21:11,209
are joining it with the username on the

505
00:21:09,080 --> 00:21:14,330
top of that we are calculating md4 back

506
00:21:11,210 --> 00:21:17,180
again and we take this value which we

507
00:21:14,330 --> 00:21:19,850
called ECC one by the way we compare we

508
00:21:17,180 --> 00:21:23,780
take it together with the H Maxwell one

509
00:21:19,850 --> 00:21:26,149
we take a user name we do 10240

510
00:21:23,780 --> 00:21:30,560
iterations on 16 blocks and that's how

511
00:21:26,150 --> 00:21:34,820
you look on easy right anyway so we

512
00:21:30,560 --> 00:21:38,990
logged on and eventually what is next is

513
00:21:34,820 --> 00:21:42,320
do I have access to my secrets and if I

514
00:21:38,990 --> 00:21:44,210
do have then that will be really sad but

515
00:21:42,320 --> 00:21:47,389
data protection API as we already

516
00:21:44,210 --> 00:21:50,270
explained relies on our passwords harsh

517
00:21:47,390 --> 00:21:52,190
that's mk1 master key 1 and because our

518
00:21:50,270 --> 00:21:55,300
password hash is different right now I'm

519
00:21:52,190 --> 00:21:57,890
not able to get access to my secrets

520
00:21:55,300 --> 00:22:00,590
second part oh so password is empty

521
00:21:57,890 --> 00:22:03,290
right second part is don't forget we've

522
00:22:00,590 --> 00:22:05,330
got a master key to that is encrypted

523
00:22:03,290 --> 00:22:07,639
with the public key of the domain this

524
00:22:05,330 --> 00:22:09,409
one we're gonna focus on in a moment now

525
00:22:07,640 --> 00:22:11,690
please have a look because this is

526
00:22:09,410 --> 00:22:13,430
really cool this we don't have a

527
00:22:11,690 --> 00:22:15,710
password so we're like man

528
00:22:13,430 --> 00:22:19,070
as the hacker what am I supposed to do

529
00:22:15,710 --> 00:22:21,620
my job right now is to find all these

530
00:22:19,070 --> 00:22:25,850
different secrets that are stored in

531
00:22:21,620 --> 00:22:27,979
your windows and eventually figure out

532
00:22:25,850 --> 00:22:30,560
how to decrypt those so let's focus on

533
00:22:27,980 --> 00:22:32,900
this now question is where do we have

534
00:22:30,560 --> 00:22:35,860
secrets where do we have secrets so

535
00:22:32,900 --> 00:22:38,960
let's do it like this as a regular user

536
00:22:35,860 --> 00:22:40,520
I'm gonna start a common prompt you

537
00:22:38,960 --> 00:22:42,770
don't need to be privileged for that and

538
00:22:40,520 --> 00:22:45,530
what are we gonna do over here let's get

539
00:22:42,770 --> 00:22:47,840
into the secret tools let's go to the DP

540
00:22:45,530 --> 00:22:49,670
API and we've got a very simple tool

541
00:22:47,840 --> 00:22:54,169
that I really like and this one is

542
00:22:49,670 --> 00:22:56,000
called CQ DP API blob searcher and CQ DP

543
00:22:54,170 --> 00:22:58,400
API blob searcher it's a tool that

544
00:22:56,000 --> 00:23:00,590
allows you to search through workstation

545
00:22:58,400 --> 00:23:03,440
server and so on for every possible

546
00:23:00,590 --> 00:23:05,270
secret that you might ever store so

547
00:23:03,440 --> 00:23:07,310
question is do I have any secrets in my

548
00:23:05,270 --> 00:23:09,139
laptop sometimes we may be thinking oh

549
00:23:07,310 --> 00:23:11,600
I'm not serving passwords in a browser

550
00:23:09,140 --> 00:23:14,390
I'm every single time I open outlook i

551
00:23:11,600 --> 00:23:16,760
log on etc I don't save any passwords

552
00:23:14,390 --> 00:23:19,250
any secrets well figure it out you can

553
00:23:16,760 --> 00:23:22,190
do it with this tool so this tool allows

554
00:23:19,250 --> 00:23:25,940
us to specify a directory to be searched

555
00:23:22,190 --> 00:23:27,800
so slash D and we're gonna refer to I'm

556
00:23:25,940 --> 00:23:32,000
gonna shorten it a little bit users

557
00:23:27,800 --> 00:23:33,649
Freddy Krueger updater loco Google

558
00:23:32,000 --> 00:23:35,120
because we are searching for secrets in

559
00:23:33,650 --> 00:23:37,340
Chrome yes so let's just give it a

560
00:23:35,120 --> 00:23:39,229
direct path more or less Mullis it

561
00:23:37,340 --> 00:23:42,260
doesn't have to be direct but we're

562
00:23:39,230 --> 00:23:47,180
gonna do it - air slash error which is

563
00:23:42,260 --> 00:23:49,310
recursively and my and - or / o to give

564
00:23:47,180 --> 00:23:52,790
it a folder where we're going to be

565
00:23:49,310 --> 00:23:54,260
doing the output of the secrets now the

566
00:23:52,790 --> 00:23:57,260
next part I'm gonna do to make it a

567
00:23:54,260 --> 00:23:59,270
little bit more convenient DP API dot

568
00:23:57,260 --> 00:24:01,670
txt we're gonna stream the whole output

569
00:23:59,270 --> 00:24:04,129
to the file so that you guys can see

570
00:24:01,670 --> 00:24:05,900
what we are actually dealing with right

571
00:24:04,130 --> 00:24:08,360
that was quite quick because we don't

572
00:24:05,900 --> 00:24:09,950
have that many secrets ah yeah that's we

573
00:24:08,360 --> 00:24:12,350
can ignore this it's not important now

574
00:24:09,950 --> 00:24:14,570
anyway so we've got this one I haven't

575
00:24:12,350 --> 00:24:18,980
disconnected from the network so here

576
00:24:14,570 --> 00:24:21,379
you can see that we've got one simple

577
00:24:18,980 --> 00:24:25,070
thing we've got a secret stored in

578
00:24:21,380 --> 00:24:27,260
cookies of Google so Google Chrome user

579
00:24:25,070 --> 00:24:32,000
data devote cookies now this

580
00:24:27,260 --> 00:24:32,930
masterkey guiit is p55 let's mind that

581
00:24:32,000 --> 00:24:35,120
p55

582
00:24:32,930 --> 00:24:37,570
it starts with it and that is most

583
00:24:35,120 --> 00:24:40,520
probably the master key that is

584
00:24:37,570 --> 00:24:42,919
protecting our secrets it's a good

585
00:24:40,520 --> 00:24:44,930
knowledge to have now what I don't like

586
00:24:42,920 --> 00:24:49,790
and this is just my personal comment

587
00:24:44,930 --> 00:24:51,430
here is that chrome use chuan and Triple

588
00:24:49,790 --> 00:24:53,899
DES to encrypt my secret

589
00:24:51,430 --> 00:24:55,220
that's not very convenient I mean I

590
00:24:53,900 --> 00:24:55,940
don't know how you feel about it but I

591
00:24:55,220 --> 00:24:58,400
feel bad

592
00:24:55,940 --> 00:25:01,220
yeah but anyway yeah you will do what

593
00:24:58,400 --> 00:25:04,130
you want with this knowledge moving

594
00:25:01,220 --> 00:25:07,340
forward b55 it's something that we will

595
00:25:04,130 --> 00:25:10,250
need to focus on okay so let's see let's

596
00:25:07,340 --> 00:25:13,639
see what I'm gonna do I'm gonna do start

597
00:25:10,250 --> 00:25:17,320
dot let's just open up the windows when

598
00:25:13,640 --> 00:25:20,720
we're gonna dig in into that % up data

599
00:25:17,320 --> 00:25:22,340
percent in the following path guys we're

600
00:25:20,720 --> 00:25:24,980
gonna go to that percent update the

601
00:25:22,340 --> 00:25:29,060
percent which is Freddie up data roaming

602
00:25:24,980 --> 00:25:33,470
we're gonna go to Microsoft protect Sid

603
00:25:29,060 --> 00:25:36,050
and this it's a set of your master keys

604
00:25:33,470 --> 00:25:37,910
that you all use let me put it this way

605
00:25:36,050 --> 00:25:40,970
each of you sitting here

606
00:25:37,910 --> 00:25:44,300
if you're using Windows 100% you've got

607
00:25:40,970 --> 00:25:46,010
a key over there at least one yeah so

608
00:25:44,300 --> 00:25:47,720
check it out if you want to do someone a

609
00:25:46,010 --> 00:25:49,310
bad joke you go there and delete them

610
00:25:47,720 --> 00:25:52,460
all and then it means that's the other

611
00:25:49,310 --> 00:25:54,440
person will not be able to use the

612
00:25:52,460 --> 00:25:56,650
secret storage every single place this

613
00:25:54,440 --> 00:25:59,090
person will we need to reload on yeah I

614
00:25:56,650 --> 00:26:03,110
consider it as a good joke bad way but

615
00:25:59,090 --> 00:26:07,730
anyway let's move forward so if we move

616
00:26:03,110 --> 00:26:09,560
forward we've got this so be 55 be 55 I

617
00:26:07,730 --> 00:26:11,090
mark this key over here like this

618
00:26:09,560 --> 00:26:13,100
so that I don't have to search for it

619
00:26:11,090 --> 00:26:15,730
for a long time but this is this guy

620
00:26:13,100 --> 00:26:19,129
that we will have to get access to

621
00:26:15,730 --> 00:26:21,110
because this master key encrypts our

622
00:26:19,130 --> 00:26:23,150
Google Chrome stored in the Google

623
00:26:21,110 --> 00:26:24,830
Chrome password and I'm like come on I

624
00:26:23,150 --> 00:26:27,350
don't know the users passwords users

625
00:26:24,830 --> 00:26:29,270
hash I want to get access to this key so

626
00:26:27,350 --> 00:26:32,990
how do we do it and this is where the

627
00:26:29,270 --> 00:26:36,830
party begins because we will need to get

628
00:26:32,990 --> 00:26:39,860
into a domain controller and search for

629
00:26:36,830 --> 00:26:41,090
the key now we could be again thinking

630
00:26:39,860 --> 00:26:42,590
well no this isn't

631
00:26:41,090 --> 00:26:44,959
where we have to engage a domain

632
00:26:42,590 --> 00:26:47,059
controller really think about it

633
00:26:44,960 --> 00:26:49,340
differently if someone is a domain admin

634
00:26:47,059 --> 00:26:52,129
in your organization that's what this

635
00:26:49,340 --> 00:26:55,249
person can do so hackers it's like a

636
00:26:52,129 --> 00:26:57,259
second problem over here yeah that's a B

637
00:26:55,249 --> 00:26:59,389
what always makes me think is that if

638
00:26:57,259 --> 00:27:01,399
someone if you do the pen test or if

639
00:26:59,389 --> 00:27:04,129
someone does the pentas for you and this

640
00:27:01,399 --> 00:27:08,449
person becomes a domain admin this is a

641
00:27:04,129 --> 00:27:11,240
big trust relationship that means that

642
00:27:08,450 --> 00:27:13,340
this person can potentially extract the

643
00:27:11,240 --> 00:27:14,629
private key like this and get access to

644
00:27:13,340 --> 00:27:16,879
all of the secrets of your

645
00:27:14,629 --> 00:27:19,340
organization's let's have a look this

646
00:27:16,879 --> 00:27:22,070
this one's gonna be super easy because

647
00:27:19,340 --> 00:27:25,249
we've written it this tall it took a

648
00:27:22,070 --> 00:27:28,340
while again but this tool it's at the

649
00:27:25,249 --> 00:27:31,399
end so simple to be used so with that CQ

650
00:27:28,340 --> 00:27:38,330
else's secrets dumper we do file and we

651
00:27:31,399 --> 00:27:41,600
do export it pfx let me just put the dot

652
00:27:38,330 --> 00:27:44,480
here pfx enter and this exported pfx

653
00:27:41,600 --> 00:27:47,449
this is nothing but a private key of

654
00:27:44,480 --> 00:27:49,039
your whole domain it's really something

655
00:27:47,450 --> 00:27:51,950
that if you're on a bad site you would

656
00:27:49,039 --> 00:27:53,360
like to have so if we do import it we

657
00:27:51,950 --> 00:27:55,999
don't have to by the way but I just want

658
00:27:53,360 --> 00:27:59,029
to show you how it looks like next next

659
00:27:55,999 --> 00:28:04,399
next next next xx password is secure our

660
00:27:59,029 --> 00:28:08,059
company name next next next ok and then

661
00:28:04,399 --> 00:28:11,239
cert MGR dot MSC enter we go to the

662
00:28:08,059 --> 00:28:14,029
personal and then certificates and then

663
00:28:11,240 --> 00:28:17,360
we can see this not available cute name

664
00:28:14,029 --> 00:28:18,860
certificate which represents us the

665
00:28:17,360 --> 00:28:20,418
certificate that has been issued to

666
00:28:18,860 --> 00:28:23,258
nobody by nobody

667
00:28:20,419 --> 00:28:28,240
by the way it's valid only for one year

668
00:28:23,259 --> 00:28:33,230
can we renew it no can we fix this no

669
00:28:28,240 --> 00:28:35,869
can we no okay so this is not something

670
00:28:33,230 --> 00:28:37,850
that you can fix but you can monitor

671
00:28:35,869 --> 00:28:40,389
domain controller and make sure that

672
00:28:37,850 --> 00:28:42,350
none of the code that you don't know is

673
00:28:40,389 --> 00:28:43,850
executed only domain controller

674
00:28:42,350 --> 00:28:45,799
let's summarize it in a moment yes

675
00:28:43,850 --> 00:28:47,539
because it's not only that protection

676
00:28:45,799 --> 00:28:49,519
method which we can apply and it's not

677
00:28:47,539 --> 00:28:51,679
the only problem that we are having over

678
00:28:49,519 --> 00:28:53,840
here so this has been only issued for a

679
00:28:51,679 --> 00:28:54,890
year so if your domain is like whatever

680
00:28:53,840 --> 00:28:57,139
from 2000 and

681
00:28:54,890 --> 00:28:58,580
eight this is the how old is your

682
00:28:57,140 --> 00:29:00,650
certificate over here okay

683
00:28:58,580 --> 00:29:03,020
and having this allows you to get access

684
00:29:00,650 --> 00:29:05,960
to the secrets of everybody else let's

685
00:29:03,020 --> 00:29:08,420
have a look into this scenario we're

686
00:29:05,960 --> 00:29:11,150
going to start a common prompt as a user

687
00:29:08,420 --> 00:29:14,570
back again on Windows 10 I'm back on

688
00:29:11,150 --> 00:29:17,390
Windows 10 right now so we have we've

689
00:29:14,570 --> 00:29:18,919
got this exported pfx I already copied

690
00:29:17,390 --> 00:29:21,380
this to this machine so that we don't

691
00:29:18,920 --> 00:29:23,930
have to do it now let me show you we're

692
00:29:21,380 --> 00:29:27,380
gonna get into the C key tools we're

693
00:29:23,930 --> 00:29:29,360
gonna get to the DP API now just to keep

694
00:29:27,380 --> 00:29:32,210
it super clear in order to be able to

695
00:29:29,360 --> 00:29:35,800
get access to our secrets now we have to

696
00:29:32,210 --> 00:29:38,510
take this particular master key this b55

697
00:29:35,800 --> 00:29:40,669
decrypt it with the private key that we

698
00:29:38,510 --> 00:29:45,290
grabbed from the domain and encrypted

699
00:29:40,670 --> 00:29:47,330
back with our current password hash yeah

700
00:29:45,290 --> 00:29:48,950
so this is the procedure quite

701
00:29:47,330 --> 00:29:51,949
straightforward because when I'm logged

702
00:29:48,950 --> 00:29:54,260
on and I want to on-the-fly being able

703
00:29:51,950 --> 00:29:56,390
to get access to my secrets I have to

704
00:29:54,260 --> 00:29:59,480
have this master keys encrypted with my

705
00:29:56,390 --> 00:30:03,440
current users password hash let's have a

706
00:29:59,480 --> 00:30:05,210
look so let's do it we're gonna do it

707
00:30:03,440 --> 00:30:07,820
like this first of all seek your harsh

708
00:30:05,210 --> 00:30:12,260
calc and our current password is

709
00:30:07,820 --> 00:30:15,470
mimikatz and let's just do one and mimi

710
00:30:12,260 --> 00:30:20,030
cuts over here this is basically the md4

711
00:30:15,470 --> 00:30:22,820
of our images over here yeah I'm so of

712
00:30:20,030 --> 00:30:24,440
our string so I'm gonna copy this now

713
00:30:22,820 --> 00:30:27,320
what we're gonna do we're gonna use over

714
00:30:24,440 --> 00:30:30,470
here seek your master key ID this is our

715
00:30:27,320 --> 00:30:33,050
signature tool from our team and seek

716
00:30:30,470 --> 00:30:34,610
your master key ID allows us to do the

717
00:30:33,050 --> 00:30:36,470
following first of all we're gonna

718
00:30:34,610 --> 00:30:38,810
specify we're gonna and we're gonna

719
00:30:36,470 --> 00:30:40,940
decrypt the master keys with the P

720
00:30:38,810 --> 00:30:45,139
effects that we already have from the DC

721
00:30:40,940 --> 00:30:47,810
now new hash we're gonna encrypt it back

722
00:30:45,140 --> 00:30:51,050
again with our current password hush and

723
00:30:47,810 --> 00:30:52,460
file I don't know yet but let's have a

724
00:30:51,050 --> 00:30:55,180
look over here we're gonna be

725
00:30:52,460 --> 00:30:59,990
technically getting access to it by

726
00:30:55,180 --> 00:31:03,290
giving a puff so shift right click copy

727
00:30:59,990 --> 00:31:06,590
as puff in the command so here we just

728
00:31:03,290 --> 00:31:08,750
do it like this file Bank now what

729
00:31:06,590 --> 00:31:11,299
happens when I press enter

730
00:31:08,750 --> 00:31:13,640
please have a look yeah there is

731
00:31:11,299 --> 00:31:16,280
basically this new key created ad

732
00:31:13,640 --> 00:31:19,150
modified so what we will need to do is

733
00:31:16,280 --> 00:31:22,460
to replace this so we do rename and

734
00:31:19,150 --> 00:31:26,000
underscore good like this and we take

735
00:31:22,460 --> 00:31:28,580
this ad modified and we replace it and

736
00:31:26,000 --> 00:31:30,559
basically our goal is going to be to

737
00:31:28,580 --> 00:31:30,949
give one more thing over here so this is

738
00:31:30,559 --> 00:31:35,090
good

739
00:31:30,950 --> 00:31:37,429
you can change it yep okay fine and our

740
00:31:35,090 --> 00:31:40,129
goal is gonna be to one build one more

741
00:31:37,429 --> 00:31:42,980
thing which is giving an attribute of a

742
00:31:40,130 --> 00:31:45,559
system and hidden because otherwise data

743
00:31:42,980 --> 00:31:47,570
prediction API will not treat it

744
00:31:45,559 --> 00:31:50,720
properly this is a generic statement but

745
00:31:47,570 --> 00:31:52,879
it's better to do it okay now what we're

746
00:31:50,720 --> 00:31:55,370
gonna do now well basically what I'm

747
00:31:52,880 --> 00:31:58,970
looking for it's a Krampus because we

748
00:31:55,370 --> 00:32:00,889
have just replaced our master key we've

749
00:31:58,970 --> 00:32:01,669
decrypted it and re-encrypted it back

750
00:32:00,890 --> 00:32:06,890
again have a look

751
00:32:01,669 --> 00:32:10,190
f5 I get a password right what's the

752
00:32:06,890 --> 00:32:13,299
conclusion here there are many actually

753
00:32:10,190 --> 00:32:16,580
and not over all of them are positive

754
00:32:13,299 --> 00:32:17,900
this represents the situation when

755
00:32:16,580 --> 00:32:21,470
someone has access to the domain

756
00:32:17,900 --> 00:32:23,150
controller so if this person has access

757
00:32:21,470 --> 00:32:27,500
to domain controller and has been

758
00:32:23,150 --> 00:32:29,840
intentions this person can decrypt every

759
00:32:27,500 --> 00:32:33,169
single passwords every single person's

760
00:32:29,840 --> 00:32:34,879
password now I really like to give my

761
00:32:33,169 --> 00:32:36,860
favorite scenario we were also

762
00:32:34,880 --> 00:32:38,570
discussing this scenario of the guys on

763
00:32:36,860 --> 00:32:41,389
a training that we were running before

764
00:32:38,570 --> 00:32:45,649
the conference this is basically the

765
00:32:41,390 --> 00:32:48,020
scenario with imagine one thing if you

766
00:32:45,650 --> 00:32:50,059
would be a bad admin it might be not to

767
00:32:48,020 --> 00:32:51,408
you about someone else yeah if someone's

768
00:32:50,059 --> 00:32:53,750
gonna be a bad admin your infrastructure

769
00:32:51,409 --> 00:32:58,940
this person will pick this private key

770
00:32:53,750 --> 00:33:00,679
and grab it copy profiles from the file

771
00:32:58,940 --> 00:33:04,120
server or whatever of the users or

772
00:33:00,679 --> 00:33:08,000
basically copy profiles of several users

773
00:33:04,120 --> 00:33:11,030
loot log on to Facebook or LinkedIn or

774
00:33:08,000 --> 00:33:14,539
whatever you want with these people's

775
00:33:11,030 --> 00:33:19,790
password and accuse you of a sexual

776
00:33:14,539 --> 00:33:22,640
harassment that sounds bad right

777
00:33:19,790 --> 00:33:24,500
so there is employee this says that says

778
00:33:22,640 --> 00:33:27,950
the other one says that you are not

779
00:33:24,500 --> 00:33:29,690
honest the other one says that they are

780
00:33:27,950 --> 00:33:31,460
working in a hostile environment and

781
00:33:29,690 --> 00:33:34,460
it's your company and you didn't do

782
00:33:31,460 --> 00:33:38,960
anything that's bad so this is how you

783
00:33:34,460 --> 00:33:42,950
can put the company down by just having

784
00:33:38,960 --> 00:33:46,070
an access like this now okay let's put

785
00:33:42,950 --> 00:33:47,810
it aside how can we protect ourselves we

786
00:33:46,070 --> 00:33:50,570
can protect ourselves in a various ways

787
00:33:47,810 --> 00:33:52,790
way number one is privileged access

788
00:33:50,570 --> 00:33:54,830
management so making sure that domain

789
00:33:52,790 --> 00:33:57,170
admins they don't there they're not

790
00:33:54,830 --> 00:33:58,699
humans yeah so basically that these are

791
00:33:57,170 --> 00:34:00,470
the accounts that are logging on only

792
00:33:58,700 --> 00:34:01,880
don't the domain controllers we should

793
00:34:00,470 --> 00:34:04,520
we even call them domain controller

794
00:34:01,880 --> 00:34:07,640
admins yeah because that's where they

795
00:34:04,520 --> 00:34:10,009
should be that's a B you need to make

796
00:34:07,640 --> 00:34:13,220
sure that whoever has access to backup

797
00:34:10,010 --> 00:34:15,530
in general in your organisation doesn't

798
00:34:13,219 --> 00:34:18,319
have access maybe to the backup of the d

799
00:34:15,530 --> 00:34:20,350
c-- so any members of the backup

800
00:34:18,320 --> 00:34:22,760
operators group it could be a service

801
00:34:20,350 --> 00:34:24,350
that you are using in the organisation

802
00:34:22,760 --> 00:34:25,909
and someone let me show you something in

803
00:34:24,350 --> 00:34:28,549
a moment so let's keep it assigned it

804
00:34:25,909 --> 00:34:31,120
could be a backup service another one is

805
00:34:28,550 --> 00:34:34,040
whoever has access to the privilege of

806
00:34:31,120 --> 00:34:36,109
replicating directory changes all this

807
00:34:34,040 --> 00:34:39,050
is something guys that you hundred

808
00:34:36,110 --> 00:34:41,030
percent need to check and what we are

809
00:34:39,050 --> 00:34:43,520
talking about is the following yes so

810
00:34:41,030 --> 00:34:45,530
when we've got a domain let's have a

811
00:34:43,520 --> 00:34:47,659
look yeah we're gonna do it like this

812
00:34:45,530 --> 00:34:50,510
we've got Active Directory users and

813
00:34:47,659 --> 00:34:53,860
computers and this is basically what we

814
00:34:50,510 --> 00:34:56,810
are over here referring to yeah so

815
00:34:53,860 --> 00:34:59,840
replicating directory changes all yeah

816
00:34:56,810 --> 00:35:01,910
and another part number two number four

817
00:34:59,840 --> 00:35:04,190
is if you've got a read only domain

818
00:35:01,910 --> 00:35:05,569
controller you need to make sure who is

819
00:35:04,190 --> 00:35:07,820
looking on over there because if there

820
00:35:05,570 --> 00:35:11,330
is a domain admin logging on for example

821
00:35:07,820 --> 00:35:13,820
this person can also pull out on the

822
00:35:11,330 --> 00:35:16,790
read-only DC the private key that is

823
00:35:13,820 --> 00:35:18,560
stored within the domain so read only

824
00:35:16,790 --> 00:35:20,600
the domain original domain controller

825
00:35:18,560 --> 00:35:22,190
requires additional additional

826
00:35:20,600 --> 00:35:25,490
protection over here so these are the

827
00:35:22,190 --> 00:35:28,760
four things to have a look at now data

828
00:35:25,490 --> 00:35:31,640
protection API system also comes to

829
00:35:28,760 --> 00:35:33,170
place let me close the circle of the

830
00:35:31,640 --> 00:35:34,660
problem over here so

831
00:35:33,170 --> 00:35:37,819
when we do have a backup software

832
00:35:34,660 --> 00:35:39,920
question is what kind of privileges this

833
00:35:37,819 --> 00:35:42,890
software has because what I would like

834
00:35:39,920 --> 00:35:45,049
to show you is the following yeah we're

835
00:35:42,890 --> 00:35:47,839
gonna get over here to the services.msc

836
00:35:45,049 --> 00:35:50,299
and assuming that you've got some kind

837
00:35:47,839 --> 00:35:51,650
of a backup software it could be

838
00:35:50,299 --> 00:35:53,690
anything I'm just gonna take this

839
00:35:51,650 --> 00:35:56,030
service whatever so we could do it this

840
00:35:53,690 --> 00:36:01,880
way and I'm gonna just type here a

841
00:35:56,030 --> 00:36:04,430
username here we go let's do it let's do

842
00:36:01,880 --> 00:36:06,440
it this is a simple thing yeah so we've

843
00:36:04,430 --> 00:36:08,868
got a pj service running on some kind of

844
00:36:06,440 --> 00:36:11,480
a user so that could be a backup

845
00:36:08,869 --> 00:36:13,099
software your backup running on the

846
00:36:11,480 --> 00:36:15,380
service account which is a backup

847
00:36:13,099 --> 00:36:18,260
software so long story short what we're

848
00:36:15,380 --> 00:36:20,750
gonna do over here is what we can do is

849
00:36:18,260 --> 00:36:22,940
let's get into the tools folder I'm

850
00:36:20,750 --> 00:36:25,059
gonna use PS exec we have also our own

851
00:36:22,940 --> 00:36:26,450
tool for that it's called CQ impersonate

852
00:36:25,059 --> 00:36:29,720
whatever works

853
00:36:26,450 --> 00:36:31,250
not this one know that but exe so we are

854
00:36:29,720 --> 00:36:33,828
starting the console as a local system

855
00:36:31,250 --> 00:36:36,799
because system secrets that are also

856
00:36:33,829 --> 00:36:39,770
related with a DP API are managed by the

857
00:36:36,799 --> 00:36:43,430
local system therefore we have to get

858
00:36:39,770 --> 00:36:45,500
into tools and run CQ Secrets dumper

859
00:36:43,430 --> 00:36:47,779
this is a free tool available also in

860
00:36:45,500 --> 00:36:49,970
our blog you can guys download it this

861
00:36:47,780 --> 00:36:51,980
is one of our favorite tools we just

862
00:36:49,970 --> 00:36:54,140
specify the service here and then we

863
00:36:51,980 --> 00:36:57,859
specify pj service and then of course

864
00:36:54,140 --> 00:36:59,660
password comes out yeah now also to

865
00:36:57,859 --> 00:37:02,328
connect the problem we've got this

866
00:36:59,660 --> 00:37:04,399
service account do we make sure that the

867
00:37:02,329 --> 00:37:06,500
service account can only log on as a

868
00:37:04,400 --> 00:37:08,839
service in our systems

869
00:37:06,500 --> 00:37:11,270
if yes awesome but in most organizations

870
00:37:08,839 --> 00:37:14,180
that we do pen test that's not the case

871
00:37:11,270 --> 00:37:15,910
so if I do steal this password I can log

872
00:37:14,180 --> 00:37:19,730
on with this account somewhere else

873
00:37:15,910 --> 00:37:21,859
interactively and then jump jump to the

874
00:37:19,730 --> 00:37:24,470
lateral movement maybe at the vent at

875
00:37:21,859 --> 00:37:26,930
the end manage to do the backup of the

876
00:37:24,470 --> 00:37:29,390
private keys from the DC that we were

877
00:37:26,930 --> 00:37:32,328
mentioning yes so that's another another

878
00:37:29,390 --> 00:37:33,259
scenario that it's a little longer but

879
00:37:32,329 --> 00:37:36,230
not impossible

880
00:37:33,260 --> 00:37:38,780
yeah so this is something that basically

881
00:37:36,230 --> 00:37:41,960
we wanted to discuss now the next

882
00:37:38,780 --> 00:37:44,720
question of the universe is okay that's

883
00:37:41,960 --> 00:37:47,000
data protection API classic what about

884
00:37:44,720 --> 00:37:49,970
data protection API and

885
00:37:47,000 --> 00:37:52,490
isn't it better well let me put it this

886
00:37:49,970 --> 00:37:54,649
way it's different it's completely

887
00:37:52,490 --> 00:37:56,629
different because it relies on a

888
00:37:54,650 --> 00:37:58,730
different mechanisms and different ways

889
00:37:56,630 --> 00:38:02,120
of communication with the domain

890
00:37:58,730 --> 00:38:04,190
controller leveraging the KDS root key

891
00:38:02,120 --> 00:38:06,380
so completely different concept of that

892
00:38:04,190 --> 00:38:09,710
were in comparison to the classic DP API

893
00:38:06,380 --> 00:38:12,050
but at the end it's not that often lis

894
00:38:09,710 --> 00:38:14,750
used in the operating system so where do

895
00:38:12,050 --> 00:38:17,450
you use it use in use it in asp net core

896
00:38:14,750 --> 00:38:19,910
you use it in BitLocker for example sit

897
00:38:17,450 --> 00:38:23,089
protected the drives you use it for

898
00:38:19,910 --> 00:38:26,330
example within the GM SAS use it as well

899
00:38:23,090 --> 00:38:28,220
for example with the seat protected pfx

900
00:38:26,330 --> 00:38:29,690
files and this is something that I would

901
00:38:28,220 --> 00:38:32,629
like to show you at the end today

902
00:38:29,690 --> 00:38:36,830
because this is a very good method as

903
00:38:32,630 --> 00:38:39,530
well to protect a pfx files which how do

904
00:38:36,830 --> 00:38:41,960
we manage passwords to pfx it's such an

905
00:38:39,530 --> 00:38:43,400
old-school type of file yeah we just

906
00:38:41,960 --> 00:38:47,720
specify the password and that's it

907
00:38:43,400 --> 00:38:50,810
but since Windows Server 2012 r2 you are

908
00:38:47,720 --> 00:38:53,600
able to rely protection of the pfx file

909
00:38:50,810 --> 00:38:56,840
on your own account on your SID

910
00:38:53,600 --> 00:38:59,290
through DP API and G let me show you how

911
00:38:56,840 --> 00:39:02,900
we can do it this is actually quite easy

912
00:38:59,290 --> 00:39:06,500
so what we're gonna do right now is I'm

913
00:39:02,900 --> 00:39:08,750
gonna pull out a box like this and this

914
00:39:06,500 --> 00:39:10,940
is who is logged on over here yeah we so

915
00:39:08,750 --> 00:39:14,300
we can check we can see we are Freddie

916
00:39:10,940 --> 00:39:19,310
yeah so what can we do we can do cert

917
00:39:14,300 --> 00:39:22,070
MGR dot MSC and we can do export our pfx

918
00:39:19,310 --> 00:39:26,150
so I got some kind of a certificate I

919
00:39:22,070 --> 00:39:28,520
can do all tasks export and then we can

920
00:39:26,150 --> 00:39:30,680
go next and then we have a possibility

921
00:39:28,520 --> 00:39:32,150
to export the private key by the way

922
00:39:30,680 --> 00:39:33,259
even if you don't have a possibility to

923
00:39:32,150 --> 00:39:35,030
export a private key

924
00:39:33,260 --> 00:39:36,440
that's not true because you can always

925
00:39:35,030 --> 00:39:39,800
grab it from the operating systems

926
00:39:36,440 --> 00:39:42,740
memory so this is quite easy me me cut

927
00:39:39,800 --> 00:39:46,310
in PowerShell can do it so this is this

928
00:39:42,740 --> 00:39:49,310
is funny block over here but anyway yes

929
00:39:46,310 --> 00:39:51,680
export the private key next and then the

930
00:39:49,310 --> 00:39:54,560
next and here is the thing you've got

931
00:39:51,680 --> 00:39:56,600
over here group or users so we can

932
00:39:54,560 --> 00:39:58,940
specify if ready or we can specify the

933
00:39:56,600 --> 00:40:00,460
password in a classic way we always

934
00:39:58,940 --> 00:40:03,550
specify password but

935
00:40:00,460 --> 00:40:06,640
what we can do we can export that

936
00:40:03,550 --> 00:40:09,310
certificate that pfx to be imported by

937
00:40:06,640 --> 00:40:12,850
these people here so you specify these

938
00:40:09,310 --> 00:40:16,029
guys sit next next and you save it in a

939
00:40:12,850 --> 00:40:18,490
file yeah so I already have a file like

940
00:40:16,030 --> 00:40:23,170
this this is this one Blizzard so if I

941
00:40:18,490 --> 00:40:25,060
open it as I as myself I can go next and

942
00:40:23,170 --> 00:40:27,310
this is really funny by the way this

943
00:40:25,060 --> 00:40:29,620
file has been protected this way there

944
00:40:27,310 --> 00:40:32,049
is kind of a password because this is a

945
00:40:29,620 --> 00:40:33,460
very old-school way oh this is a very

946
00:40:32,050 --> 00:40:35,560
old-school file and old-school way of

947
00:40:33,460 --> 00:40:38,100
protecting it and we can always display

948
00:40:35,560 --> 00:40:40,810
this password and this one is called IX

949
00:40:38,100 --> 00:40:43,630
fgt and so on this is the automatically

950
00:40:40,810 --> 00:40:46,029
generated password which is protected by

951
00:40:43,630 --> 00:40:48,760
the state protection by the DP API and G

952
00:40:46,030 --> 00:40:50,830
so at the end file it's still the same

953
00:40:48,760 --> 00:40:52,900
type of an old-school file but it's a

954
00:40:50,830 --> 00:40:55,930
really better way of managing it now

955
00:40:52,900 --> 00:40:58,540
question of the universe is how can I

956
00:40:55,930 --> 00:41:01,210
steal this password so if I see these P

957
00:40:58,540 --> 00:41:03,880
effects because someone protected it in

958
00:41:01,210 --> 00:41:06,850
this way I want to get access to this P

959
00:41:03,880 --> 00:41:09,010
of X is there a way to do it an answer

960
00:41:06,850 --> 00:41:11,200
is of course because if there is

961
00:41:09,010 --> 00:41:14,050
something that relies on a domain from

962
00:41:11,200 --> 00:41:16,149
that security perspective then since we

963
00:41:14,050 --> 00:41:18,310
have access to the domain we will be

964
00:41:16,150 --> 00:41:22,080
able to get access to this pfx password

965
00:41:18,310 --> 00:41:25,060
now let me show you how can we do it so

966
00:41:22,080 --> 00:41:26,590
I'm gonna leave this for the moment open

967
00:41:25,060 --> 00:41:28,509
like this so that you can compare that

968
00:41:26,590 --> 00:41:31,690
this is actually at the ends the same

969
00:41:28,510 --> 00:41:33,940
file what do we need to have in order to

970
00:41:31,690 --> 00:41:37,660
get access to this pfx password and

971
00:41:33,940 --> 00:41:39,910
answer is KD is root key so the

972
00:41:37,660 --> 00:41:42,580
passwords that the KD has a Kerberos key

973
00:41:39,910 --> 00:41:45,940
the Kerberos data that is extracted from

974
00:41:42,580 --> 00:41:48,960
entity as Det and in order to be able to

975
00:41:45,940 --> 00:41:52,150
extract it we need as well a boot key

976
00:41:48,960 --> 00:41:55,660
because entities do this both like some

977
00:41:52,150 --> 00:41:58,540
for example realize it's security on the

978
00:41:55,660 --> 00:42:00,870
boot key so how do we extract the boot

979
00:41:58,540 --> 00:42:03,759
key and what's the concept behind it

980
00:42:00,870 --> 00:42:06,180
answer is very straightforward we do it

981
00:42:03,760 --> 00:42:08,860
like this I already have a copy of

982
00:42:06,180 --> 00:42:12,919
entities that did made within the domain

983
00:42:08,860 --> 00:42:15,620
yeah so let me get into my tools so

984
00:42:12,920 --> 00:42:18,080
I'm able to at the end extract that

985
00:42:15,620 --> 00:42:20,120
particular data what do I need to

986
00:42:18,080 --> 00:42:22,279
extract data from entities that did a

987
00:42:20,120 --> 00:42:24,380
boot key so let me show you how to grab

988
00:42:22,280 --> 00:42:26,870
the boot Kieffer's we grabbed the boot

989
00:42:24,380 --> 00:42:29,990
key in the following way this is easy

990
00:42:26,870 --> 00:42:33,890
yeah so we take this to main controller

991
00:42:29,990 --> 00:42:35,930
or entities that did or or system on

992
00:42:33,890 --> 00:42:36,319
that domain controller and we do it like

993
00:42:35,930 --> 00:42:38,750
this

994
00:42:36,320 --> 00:42:40,850
CQ secrets dumper so I guess you already

995
00:42:38,750 --> 00:42:42,530
know the tools from the service accounts

996
00:42:40,850 --> 00:42:44,569
password but this time we're gonna use

997
00:42:42,530 --> 00:42:47,570
it with a different functionality that's

998
00:42:44,570 --> 00:42:49,640
the boot key like this and this is

999
00:42:47,570 --> 00:42:52,040
basically the string that I'm gonna be

1000
00:42:49,640 --> 00:42:55,190
using over here that's simple by the way

1001
00:42:52,040 --> 00:42:58,190
this is the boot key yeah sure so we got

1002
00:42:55,190 --> 00:43:01,250
it now over here we're gonna be working

1003
00:42:58,190 --> 00:43:03,920
on ant ideas with it so let's do it

1004
00:43:01,250 --> 00:43:08,360
so we're gonna get so let me get into

1005
00:43:03,920 --> 00:43:12,050
the tools and we're gonna get into the C

1006
00:43:08,360 --> 00:43:14,390
key tools C Q underscore tools here we

1007
00:43:12,050 --> 00:43:16,670
go fantastic and then we're gonna get

1008
00:43:14,390 --> 00:43:19,160
into the extraction of the data from

1009
00:43:16,670 --> 00:43:22,940
entities to date so for that I'm gonna

1010
00:43:19,160 --> 00:43:24,770
use the tool CQ NTDs DT decrypter by the

1011
00:43:22,940 --> 00:43:26,720
way you need to admit that our names of

1012
00:43:24,770 --> 00:43:29,180
the tool are awful it's so hard to

1013
00:43:26,720 --> 00:43:30,589
remember them we'd we also have problems

1014
00:43:29,180 --> 00:43:32,180
with this but we have so many of them

1015
00:43:30,590 --> 00:43:34,070
that we decided to put them in a

1016
00:43:32,180 --> 00:43:35,450
descriptive way so that everybody knows

1017
00:43:34,070 --> 00:43:38,390
when you look at the name even though

1018
00:43:35,450 --> 00:43:40,069
it's long what does it do yeah so here

1019
00:43:38,390 --> 00:43:42,560
we go this one is to decrypt the content

1020
00:43:40,070 --> 00:43:47,090
of aunt Edie's door did so we're gonna

1021
00:43:42,560 --> 00:43:50,060
do it like this boot key bang and then

1022
00:43:47,090 --> 00:43:53,270
file and then I got aunt IDs dude it

1023
00:43:50,060 --> 00:43:56,900
over here and then we can export hashes

1024
00:43:53,270 --> 00:43:59,120
if you want out file hashes dot txt from

1025
00:43:56,900 --> 00:44:01,880
that aunt idea so did but what is

1026
00:43:59,120 --> 00:44:06,200
important for us is one more thing over

1027
00:44:01,880 --> 00:44:10,940
here which is related with the KDS

1028
00:44:06,200 --> 00:44:13,430
root key and KD s dot bin where we're

1029
00:44:10,940 --> 00:44:15,710
gonna be extracting the kerberos root

1030
00:44:13,430 --> 00:44:17,720
key so we have extracted this already

1031
00:44:15,710 --> 00:44:19,970
and in the big organization you can

1032
00:44:17,720 --> 00:44:22,189
expect like two three four keys like

1033
00:44:19,970 --> 00:44:24,169
this and from one of these keys for

1034
00:44:22,190 --> 00:44:25,850
example there is a password generated

1035
00:44:24,170 --> 00:44:26,830
for the group managed service account so

1036
00:44:25,850 --> 00:44:29,170
100%

1037
00:44:26,830 --> 00:44:31,090
you have it yeah so we're gonna take

1038
00:44:29,170 --> 00:44:33,190
this one even though I know I have three

1039
00:44:31,090 --> 00:44:34,750
of them because I know that this is the

1040
00:44:33,190 --> 00:44:37,270
one that I will need to use for the

1041
00:44:34,750 --> 00:44:39,430
decryption I just tested all of them

1042
00:44:37,270 --> 00:44:42,190
literally and then this one works yeah

1043
00:44:39,430 --> 00:44:45,819
here we go so enter and then we're gonna

1044
00:44:42,190 --> 00:44:48,310
get into the tools no not this this

1045
00:44:45,820 --> 00:44:53,320
let's just get there here we go

1046
00:44:48,310 --> 00:44:57,460
and we're gonna do CQ d PAP RI ng pfx

1047
00:44:53,320 --> 00:44:59,430
decrypter easy to remember name pfx and

1048
00:44:57,460 --> 00:45:01,420
we're gonna use this file that we were

1049
00:44:59,430 --> 00:45:04,180
producing over there so there is this

1050
00:45:01,420 --> 00:45:06,790
Blizzard pfx and one more thing we're

1051
00:45:04,180 --> 00:45:10,990
gonna specify is the master which is

1052
00:45:06,790 --> 00:45:13,300
actually our cadiz root key done now

1053
00:45:10,990 --> 00:45:19,479
enter simple thing you've got the

1054
00:45:13,300 --> 00:45:21,580
password IX f GT IX f GT and if we do

1055
00:45:19,480 --> 00:45:28,000
have a look at what we got underneath

1056
00:45:21,580 --> 00:45:30,130
over here it's basically IX f GT so this

1057
00:45:28,000 --> 00:45:33,760
is how you can access the P effects file

1058
00:45:30,130 --> 00:45:36,610
which were sit protected yeah now what's

1059
00:45:33,760 --> 00:45:39,310
the conclusion same conclusion as we

1060
00:45:36,610 --> 00:45:41,800
discussed sometimes comfort it's more

1061
00:45:39,310 --> 00:45:44,580
important yeah so this is very

1062
00:45:41,800 --> 00:45:46,930
convenient way of managing pfx files

1063
00:45:44,580 --> 00:45:48,640
yeah it's just like you don't even have

1064
00:45:46,930 --> 00:45:50,830
to remember these passwords because you

1065
00:45:48,640 --> 00:45:54,339
are who you are you double click you

1066
00:45:50,830 --> 00:45:57,490
could access to the P of X but if you

1067
00:45:54,340 --> 00:45:59,680
have a domain admin or domain that is in

1068
00:45:57,490 --> 00:46:03,609
protected that is not protected well

1069
00:45:59,680 --> 00:46:06,160
then this can violate so many different

1070
00:46:03,610 --> 00:46:08,950
things so that logically more things to

1071
00:46:06,160 --> 00:46:10,960
rely on it the more than can be affected

1072
00:46:08,950 --> 00:46:13,419
that's why yet another obvious

1073
00:46:10,960 --> 00:46:15,730
conclusion here we have to protect our

1074
00:46:13,420 --> 00:46:19,780
domain domain controller we all know

1075
00:46:15,730 --> 00:46:23,880
that but yet this is a very important

1076
00:46:19,780 --> 00:46:26,980
reason for doing it so this is basically

1077
00:46:23,880 --> 00:46:30,370
data protected data prediction API and

1078
00:46:26,980 --> 00:46:33,970
data protection API and G that we have

1079
00:46:30,370 --> 00:46:36,460
discussed now one more last thing if you

1080
00:46:33,970 --> 00:46:39,459
don't mind to show you a little bit of a

1081
00:46:36,460 --> 00:46:40,660
cherry on everything yes so I really

1082
00:46:39,460 --> 00:46:43,329
like to finish with

1083
00:46:40,660 --> 00:46:45,279
think cool at least I think so so let's

1084
00:46:43,329 --> 00:46:49,210
have a look so what do we have over here

1085
00:46:45,280 --> 00:46:53,349
so this is basically keep us now I am

1086
00:46:49,210 --> 00:46:55,780
not knowing the password for the key

1087
00:46:53,349 --> 00:46:59,799
pass of the user that is out there I

1088
00:46:55,780 --> 00:47:02,410
will try to type in secure so that we're

1089
00:46:59,799 --> 00:47:04,509
gonna be using it and if I do click OK

1090
00:47:02,410 --> 00:47:06,640
it says the password is wrong so I'm

1091
00:47:04,510 --> 00:47:09,250
like hmmm how am I supposed to get

1092
00:47:06,640 --> 00:47:11,078
access to the users keep us so either

1093
00:47:09,250 --> 00:47:12,940
you're gonna brute-force the password if

1094
00:47:11,079 --> 00:47:16,089
the user is protecting the keep us with

1095
00:47:12,940 --> 00:47:19,569
the password or if the user is relying

1096
00:47:16,089 --> 00:47:23,529
keep us on a data protection API this

1097
00:47:19,569 --> 00:47:26,349
time we can always learn that by getting

1098
00:47:23,530 --> 00:47:30,670
into the key pass architecture let me

1099
00:47:26,349 --> 00:47:33,460
just cancel it no and checking out

1100
00:47:30,670 --> 00:47:35,289
protected user key this is what is in

1101
00:47:33,460 --> 00:47:38,319
the users profile and that's for real

1102
00:47:35,289 --> 00:47:40,720
the key that protects the keep us and

1103
00:47:38,319 --> 00:47:44,349
what you protect it's not the key pass

1104
00:47:40,720 --> 00:47:46,779
database but it's this key right so you

1105
00:47:44,349 --> 00:47:50,380
encrypt this key with whatever method

1106
00:47:46,779 --> 00:47:53,230
you provide I can tell by the way how it

1107
00:47:50,380 --> 00:47:56,109
looks how it starts over here but this

1108
00:47:53,230 --> 00:47:59,770
is a data protection API blob so I'm

1109
00:47:56,109 --> 00:48:02,529
like perfect by having access to the

1110
00:47:59,770 --> 00:48:06,400
domain of the user what can we do we can

1111
00:48:02,529 --> 00:48:09,609
technically decrypt s keep us by getting

1112
00:48:06,400 --> 00:48:11,470
access to the users data let's do it you

1113
00:48:09,609 --> 00:48:12,700
have you can be anybody who wants to I'm

1114
00:48:11,470 --> 00:48:14,319
actually logged on over here as

1115
00:48:12,700 --> 00:48:17,140
admission but it doesn't matter because

1116
00:48:14,319 --> 00:48:18,759
we have access to the users data so let

1117
00:48:17,140 --> 00:48:22,598
me show you something what we're gonna

1118
00:48:18,760 --> 00:48:25,210
do over here let me copy this I got over

1119
00:48:22,599 --> 00:48:27,700
here access to the master key of the

1120
00:48:25,210 --> 00:48:30,069
user we already discussed this so master

1121
00:48:27,700 --> 00:48:32,470
key of the user has been decrypted with

1122
00:48:30,069 --> 00:48:34,750
the private key from the domain this is

1123
00:48:32,470 --> 00:48:36,279
this stage I will not do this demo once

1124
00:48:34,750 --> 00:48:38,559
again cuz I'm gonna be repeating myself

1125
00:48:36,279 --> 00:48:40,539
yes so we have decrypted the private key

1126
00:48:38,559 --> 00:48:42,849
the master key with the private key of

1127
00:48:40,539 --> 00:48:45,670
the domain done that's where we start

1128
00:48:42,849 --> 00:48:50,529
now what do we do next we go to the

1129
00:48:45,670 --> 00:48:53,609
tools tools those tools and over here

1130
00:48:50,529 --> 00:48:57,839
we've got two tools one

1131
00:48:53,609 --> 00:49:00,029
CQG pap I keep as DVD decrypter and with

1132
00:48:57,839 --> 00:49:02,819
this tool we are learning what's the

1133
00:49:00,029 --> 00:49:04,829
entropy of keep us keep us users entropy

1134
00:49:02,819 --> 00:49:06,960
it's all the same but it's there so it's

1135
00:49:04,829 --> 00:49:10,559
kind of easy but the second thing we're

1136
00:49:06,960 --> 00:49:12,930
gonna need is the c q DP api blob the

1137
00:49:10,559 --> 00:49:16,890
krypter and this guy takes two

1138
00:49:12,930 --> 00:49:18,450
parameters master entropy and blob three

1139
00:49:16,890 --> 00:49:20,999
parameters so we're gonna do it like

1140
00:49:18,450 --> 00:49:25,078
this master and i have the master of the

1141
00:49:20,999 --> 00:49:27,569
user here we're gonna do our blob blah

1142
00:49:25,079 --> 00:49:30,089
blah blah blah and I have the blob of

1143
00:49:27,569 --> 00:49:32,519
the user to which is him see analysis

1144
00:49:30,089 --> 00:49:32,940
and this one is the protected user key

1145
00:49:32,519 --> 00:49:36,479
Ben

1146
00:49:32,940 --> 00:49:40,349
yep and another one is in this case

1147
00:49:36,480 --> 00:49:42,150
entropy which we're gonna get to so I'm

1148
00:49:40,349 --> 00:49:44,220
gonna go a little bit up because the

1149
00:49:42,150 --> 00:49:48,930
previous tool displayed it so we're

1150
00:49:44,220 --> 00:49:49,558
gonna just copy that very in details we

1151
00:49:48,930 --> 00:49:55,980
got it

1152
00:49:49,559 --> 00:49:59,390
we go next and entropy bank enter good

1153
00:49:55,980 --> 00:50:02,700
so this gives us a decrypted data

1154
00:49:59,390 --> 00:50:05,999
decrypted protected user kibun which is

1155
00:50:02,700 --> 00:50:08,578
a directly a key protecting our key path

1156
00:50:05,999 --> 00:50:13,078
database we're almost there so we're

1157
00:50:08,579 --> 00:50:15,359
gonna do it like this see Q and then all

1158
00:50:13,079 --> 00:50:18,059
these names DPA PRI key pass DVD

1159
00:50:15,359 --> 00:50:22,619
decrypter and this takes two parameters

1160
00:50:18,059 --> 00:50:25,049
K and F so we're gonna do okay which is

1161
00:50:22,619 --> 00:50:29,880
the key that we have decrypted bang and

1162
00:50:25,049 --> 00:50:32,339
F which is simply simply the C Q base

1163
00:50:29,880 --> 00:50:34,859
that we are using over here for the key

1164
00:50:32,339 --> 00:50:37,650
pass so now what's happening we are

1165
00:50:34,859 --> 00:50:41,098
getting access to this particular key

1166
00:50:37,650 --> 00:50:45,150
pass database and decrypting it route to

1167
00:50:41,099 --> 00:50:50,279
the C Q base file and this file by the

1168
00:50:45,150 --> 00:50:55,049
way it's the one that we can enter and

1169
00:50:50,279 --> 00:50:57,390
if you put here a secure password so

1170
00:50:55,049 --> 00:51:02,460
again our team's name you're getting

1171
00:50:57,390 --> 00:51:05,129
access to someone's keep us right so I'm

1172
00:51:02,460 --> 00:51:07,440
always like confuse a little bit that in

1173
00:51:05,130 --> 00:51:09,720
a corporation's the big organizations

1174
00:51:07,440 --> 00:51:12,390
advanced there's some advice use keep us

1175
00:51:09,720 --> 00:51:14,490
use keep us great but people don't know

1176
00:51:12,390 --> 00:51:16,890
if they're not working IT how to use

1177
00:51:14,490 --> 00:51:19,770
keep us the most pleasant thing for them

1178
00:51:16,890 --> 00:51:21,569
and how to use keep us would be too to

1179
00:51:19,770 --> 00:51:24,540
rely keep us actually on the windows

1180
00:51:21,570 --> 00:51:26,040
logon so this even the worse because all

1181
00:51:24,540 --> 00:51:27,570
of the passwords will be in one place

1182
00:51:26,040 --> 00:51:29,640
you don't have to use all these tools

1183
00:51:27,570 --> 00:51:31,350
together passwords and secrets from all

1184
00:51:29,640 --> 00:51:33,089
the locations you can be like okay I'm

1185
00:51:31,350 --> 00:51:36,150
gonna just go keep us and go to keep us

1186
00:51:33,090 --> 00:51:38,970
because this is how IT advise them yeah

1187
00:51:36,150 --> 00:51:40,650
so if you want to do or implement the

1188
00:51:38,970 --> 00:51:43,020
password management in organizations

1189
00:51:40,650 --> 00:51:44,550
that is also something that has to be

1190
00:51:43,020 --> 00:51:46,410
taken into consideration

1191
00:51:44,550 --> 00:51:48,270
I'm not saying keep us it's bad keep us

1192
00:51:46,410 --> 00:51:51,149
it's very good it's just the way how

1193
00:51:48,270 --> 00:51:54,030
sometimes we see that it's used it's not

1194
00:51:51,150 --> 00:51:57,060
very secure because it relies on um

1195
00:51:54,030 --> 00:51:59,090
factors that are not dependent on us but

1196
00:51:57,060 --> 00:52:01,680
dependent on someone else out there and

1197
00:51:59,090 --> 00:52:06,090
insecurity there's a one in popular

1198
00:52:01,680 --> 00:52:07,950
world and that word is trust the less we

1199
00:52:06,090 --> 00:52:09,870
have opportunities to trust in cyber

1200
00:52:07,950 --> 00:52:15,980
security the better however said that

1201
00:52:09,870 --> 00:52:19,770
sounds so with this positive accent guys

1202
00:52:15,980 --> 00:52:25,430
just to give you the summary this is our

1203
00:52:19,770 --> 00:52:28,200
DP API toolkit if you want to basically

1204
00:52:25,430 --> 00:52:30,750
have access to the toolkit you just need

1205
00:52:28,200 --> 00:52:34,430
to get into our blog this is where we

1206
00:52:30,750 --> 00:52:38,310
share our tools summarizing your

1207
00:52:34,430 --> 00:52:41,210
computer your DP API system is a safe as

1208
00:52:38,310 --> 00:52:45,060
of an axis or the privileged account

1209
00:52:41,210 --> 00:52:49,010
your personal data is as safe as your

1210
00:52:45,060 --> 00:52:51,660
password is or domain security is

1211
00:52:49,010 --> 00:52:54,840
anything else requires additional

1212
00:52:51,660 --> 00:52:58,259
monitoring additional management and by

1213
00:52:54,840 --> 00:53:01,110
knowing how data protection works we are

1214
00:52:58,260 --> 00:53:03,840
able to pick a good way of protecting

1215
00:53:01,110 --> 00:53:06,180
our data and organization and this is

1216
00:53:03,840 --> 00:53:06,660
what I hope that you will tell you at

1217
00:53:06,180 --> 00:53:08,669
the end

1218
00:53:06,660 --> 00:53:11,129
maybe after listening to this

1219
00:53:08,670 --> 00:53:13,350
presentation maybe reading more about it

1220
00:53:11,130 --> 00:53:15,420
it's a very difficult subject by the way

1221
00:53:13,350 --> 00:53:17,759
you will not find that many information

1222
00:53:15,420 --> 00:53:21,090
in the internet so if you guys have any

1223
00:53:17,760 --> 00:53:23,780
questions absolutely let us know

1224
00:53:21,090 --> 00:53:25,890
you can also take a challenge

1225
00:53:23,780 --> 00:53:27,900
participate in a quiz you don't need to

1226
00:53:25,890 --> 00:53:28,770
register we like to have fun in

1227
00:53:27,900 --> 00:53:30,150
cybersecurity

1228
00:53:28,770 --> 00:53:32,850
we always think with our team that

1229
00:53:30,150 --> 00:53:35,670
sharing is caring so we share our tools

1230
00:53:32,850 --> 00:53:37,259
you can always like learn more we have

1231
00:53:35,670 --> 00:53:40,350
some videos over there so check it out

1232
00:53:37,260 --> 00:53:43,370
and at the end if you have any questions

1233
00:53:40,350 --> 00:53:45,330
then of course please ask them in the

1234
00:53:43,370 --> 00:53:48,630
applications that you guys have access

1235
00:53:45,330 --> 00:53:49,860
to so thanks a lot from my side thank

1236
00:53:48,630 --> 00:53:51,960
you for being here thank you for

1237
00:53:49,860 --> 00:53:53,730
listening and I'm waiting for the

1238
00:53:51,960 --> 00:53:54,660
questions to appear on the board thank

1239
00:53:53,730 --> 00:54:03,260
you so much

1240
00:53:54,660 --> 00:54:03,259
[Applause]

