1
00:00:01,439 --> 00:00:03,600
hi welcome to my presentation unlimited

2
00:00:03,600 --> 00:00:05,600
sherlock deep dive into forensics

3
00:00:05,600 --> 00:00:08,160
operations to track down hackers as you

4
00:00:08,160 --> 00:00:10,240
can see on the slide my name is paul

5
00:00:10,240 --> 00:00:12,160
leonskevich and what i'm doing for a

6
00:00:12,160 --> 00:00:14,160
living is pretty straightforward i'm

7
00:00:14,160 --> 00:00:16,800
engaged in cyber security for over 15

8
00:00:16,800 --> 00:00:19,119
years right now and i'm the ceo of

9
00:00:19,119 --> 00:00:20,960
secure this is the company that i have

10
00:00:20,960 --> 00:00:23,519
established 13 years ago

11
00:00:23,519 --> 00:00:26,720
and basically our company is right now

12
00:00:26,720 --> 00:00:28,720
spread it across four locations so new

13
00:00:28,720 --> 00:00:32,719
york dubai zurich and warsaw in poland

14
00:00:32,719 --> 00:00:35,360
and um we are a pretty big team right

15
00:00:35,360 --> 00:00:38,079
now because it's over 40 people dealing

16
00:00:38,079 --> 00:00:40,399
with cyber security issues and at the

17
00:00:40,399 --> 00:00:42,239
same time i'm also a microsoft regional

18
00:00:42,239 --> 00:00:43,520
director

19
00:00:43,520 --> 00:00:46,320
not working for microsoft but

20
00:00:46,320 --> 00:00:49,039
i am having this honorable title because

21
00:00:49,039 --> 00:00:51,600
microsoft uh well first of all gave me

22
00:00:51,600 --> 00:00:55,280
and second um is because i am happy to

23
00:00:55,280 --> 00:00:57,280
convert technology

24
00:00:57,280 --> 00:00:59,840
into something innovative and at the

25
00:00:59,840 --> 00:01:02,320
same time i do have access to them so

26
00:01:02,320 --> 00:01:04,080
let's go to windows and that's something

27
00:01:04,080 --> 00:01:06,720
that allows me to do a little bit um

28
00:01:06,720 --> 00:01:09,760
a deep dive into how we are able to

29
00:01:09,760 --> 00:01:12,479
understand mainly windows security and

30
00:01:12,479 --> 00:01:14,320
eventually what kind of things we are

31
00:01:14,320 --> 00:01:17,119
able to do in order to improve it

32
00:01:17,119 --> 00:01:19,840
it's not 100 of access it's like 99 of

33
00:01:19,840 --> 00:01:21,119
access but it's still something that

34
00:01:21,119 --> 00:01:23,439
gives the possibility to conclude what's

35
00:01:23,439 --> 00:01:24,560
going on

36
00:01:24,560 --> 00:01:26,640
well i'm also engaged in speaking at

37
00:01:26,640 --> 00:01:28,640
various conferences i've been delivering

38
00:01:28,640 --> 00:01:30,880
that keynote at the rsa conference in

39
00:01:30,880 --> 00:01:32,799
san francisco the biggest technological

40
00:01:32,799 --> 00:01:34,880
conference in the world and also i've

41
00:01:34,880 --> 00:01:36,479
been rated number one speaker at

42
00:01:36,479 --> 00:01:39,040
blackhead and also um at microsoft

43
00:01:39,040 --> 00:01:41,119
ignite so technically as long as of

44
00:01:41,119 --> 00:01:44,159
course there is someone to listen uh to

45
00:01:44,159 --> 00:01:45,600
what is happening within the

46
00:01:45,600 --> 00:01:47,920
cybersecurity world i'm always happy to

47
00:01:47,920 --> 00:01:50,960
share insights from the practical field

48
00:01:50,960 --> 00:01:53,360
because my background job is even though

49
00:01:53,360 --> 00:01:55,280
i get a business role at the company is

50
00:01:55,280 --> 00:01:57,200
to deliver penetration tests and also

51
00:01:57,200 --> 00:02:00,159
incident response and forensics projects

52
00:02:00,159 --> 00:02:02,079
so this is what i've been always doing

53
00:02:02,079 --> 00:02:05,119
and uh this is what i'm doing till today

54
00:02:05,119 --> 00:02:07,040
within our team of course we deliver

55
00:02:07,040 --> 00:02:08,959
this kind of project so it's it's

56
00:02:08,959 --> 00:02:11,120
something that our customers are coming

57
00:02:11,120 --> 00:02:12,319
um

58
00:02:12,319 --> 00:02:15,040
to us when they got an attack and our

59
00:02:15,040 --> 00:02:18,319
job is uh to react to that incident but

60
00:02:18,319 --> 00:02:19,920
not of course only this one we also

61
00:02:19,920 --> 00:02:21,520
designed cyber security for for

62
00:02:21,520 --> 00:02:23,520
customers so it really depends who we

63
00:02:23,520 --> 00:02:25,599
are talking about if it's about our

64
00:02:25,599 --> 00:02:27,040
whole team

65
00:02:27,040 --> 00:02:29,280
so why forensics it's so important

66
00:02:29,280 --> 00:02:31,519
because we are talking here about the

67
00:02:31,519 --> 00:02:33,440
different deep dive forensic techniques

68
00:02:33,440 --> 00:02:36,959
that are allowing us to find hackers so

69
00:02:36,959 --> 00:02:39,760
why this is such a hot subject well

70
00:02:39,760 --> 00:02:42,239
first of all we need to know that

71
00:02:42,239 --> 00:02:45,760
digital forensics it's a term that is

72
00:02:45,760 --> 00:02:48,239
increasingly popular

73
00:02:48,239 --> 00:02:50,959
within the cyber security sphere because

74
00:02:50,959 --> 00:02:53,040
we are dealing with incidents

75
00:02:53,040 --> 00:02:55,920
and uh we have to know basically how not

76
00:02:55,920 --> 00:02:58,480
only to react to incidents but also how

77
00:02:58,480 --> 00:03:00,560
we are able to learn what happened and

78
00:03:00,560 --> 00:03:03,120
forensics steps in at that moment where

79
00:03:03,120 --> 00:03:05,280
we've got for example malware that was

80
00:03:05,280 --> 00:03:07,280
causing a certain

81
00:03:07,280 --> 00:03:09,200
certain drama to happen in the

82
00:03:09,200 --> 00:03:10,560
infrastructure and our job is going to

83
00:03:10,560 --> 00:03:12,720
be to simply take that malware and

84
00:03:12,720 --> 00:03:14,879
investigate put it into the context of

85
00:03:14,879 --> 00:03:16,720
the infrastructure and learn where

86
00:03:16,720 --> 00:03:18,640
malware potentially

87
00:03:18,640 --> 00:03:21,280
could act and what was the scope of the

88
00:03:21,280 --> 00:03:23,440
attack and if it's about the inside of

89
00:03:23,440 --> 00:03:25,519
the malware what kind of activities it

90
00:03:25,519 --> 00:03:28,000
did in order to break into our

91
00:03:28,000 --> 00:03:30,640
infrastructure so that's basically in

92
00:03:30,640 --> 00:03:33,440
short words why forensics is such a hot

93
00:03:33,440 --> 00:03:34,480
topic

94
00:03:34,480 --> 00:03:36,239
another interesting perspective over

95
00:03:36,239 --> 00:03:38,959
here is that a forensics itself gives

96
00:03:38,959 --> 00:03:41,920
you the idea the picture of what

97
00:03:41,920 --> 00:03:44,000
happened during the whole attack

98
00:03:44,000 --> 00:03:46,239
sometimes you investigating windows

99
00:03:46,239 --> 00:03:48,879
boxes linux boxes and you're extracting

100
00:03:48,879 --> 00:03:51,360
as much information as you can in order

101
00:03:51,360 --> 00:03:52,799
to understand

102
00:03:52,799 --> 00:03:56,319
what kind of impact hackers had after

103
00:03:56,319 --> 00:03:57,439
the attack

104
00:03:57,439 --> 00:03:59,519
so when we take into consideration some

105
00:03:59,519 --> 00:04:01,840
interesting statistics and uh this is

106
00:04:01,840 --> 00:04:03,840
actually coming from the verizon's 2020

107
00:04:03,840 --> 00:04:05,840
data bridge investigations report i

108
00:04:05,840 --> 00:04:07,360
really like verizon's report because

109
00:04:07,360 --> 00:04:09,280
they're very informative

110
00:04:09,280 --> 00:04:12,000
this time they said summarizing 2020 of

111
00:04:12,000 --> 00:04:14,000
course that 2021 is going to come yes so

112
00:04:14,000 --> 00:04:15,599
that's why we got a statistics from the

113
00:04:15,599 --> 00:04:17,839
past year here we are able to see that

114
00:04:17,839 --> 00:04:20,560
70 of bridges were caused by outsiders

115
00:04:20,560 --> 00:04:22,479
and i would say not a surprise because

116
00:04:22,479 --> 00:04:24,240
when we take into consideration some

117
00:04:24,240 --> 00:04:27,440
other reports we are able to see that

118
00:04:27,440 --> 00:04:30,000
fishing is actually a number one mean of

119
00:04:30,000 --> 00:04:32,160
transportation for malware and it's also

120
00:04:32,160 --> 00:04:35,440
a number one thing that is

121
00:04:35,440 --> 00:04:36,479
happening

122
00:04:36,479 --> 00:04:38,080
that is actually causing the attack

123
00:04:38,080 --> 00:04:40,160
within the organizations also when we

124
00:04:40,160 --> 00:04:42,560
take into consideration that 86 over

125
00:04:42,560 --> 00:04:44,320
there we can see that that amount of

126
00:04:44,320 --> 00:04:46,960
breaches were financially motivated

127
00:04:46,960 --> 00:04:49,199
exactly when you've got a successful

128
00:04:49,199 --> 00:04:51,120
ransomware campaign when you've got a

129
00:04:51,120 --> 00:04:54,160
successful attack um we are here getting

130
00:04:54,160 --> 00:04:56,240
into the sphere of human operated run

131
00:04:56,240 --> 00:04:58,160
somewhere and so on so when the hackers

132
00:04:58,160 --> 00:04:59,919
are already there they manage to attack

133
00:04:59,919 --> 00:05:01,360
the organization then they are figuring

134
00:05:01,360 --> 00:05:02,960
out what to do and one of the things

135
00:05:02,960 --> 00:05:04,960
that they are deciding on is actually

136
00:05:04,960 --> 00:05:07,600
data encryption so it means that our

137
00:05:07,600 --> 00:05:11,039
data is at risk and we are trying to get

138
00:05:11,039 --> 00:05:13,919
it back by for example decrypting it or

139
00:05:13,919 --> 00:05:16,560
decrypting it either because we pay

140
00:05:16,560 --> 00:05:19,280
who knows or another part might be we

141
00:05:19,280 --> 00:05:22,240
are trying to recover it from the backup

142
00:05:22,240 --> 00:05:24,400
so unfortunately and this is what the

143
00:05:24,400 --> 00:05:27,120
experience shows quite often uh

144
00:05:27,120 --> 00:05:29,440
companies they do not have well-designed

145
00:05:29,440 --> 00:05:32,240
well-tested backup strategy that's why

146
00:05:32,240 --> 00:05:35,360
these breaches are more and more popular

147
00:05:35,360 --> 00:05:37,039
and there are more people stepping to

148
00:05:37,039 --> 00:05:39,360
the bedside in order to

149
00:05:39,360 --> 00:05:40,320
get

150
00:05:40,320 --> 00:05:42,880
a bit of an income from the

151
00:05:42,880 --> 00:05:45,280
well-established ransomware campaigns

152
00:05:45,280 --> 00:05:47,120
when we take into consideration campaign

153
00:05:47,120 --> 00:05:48,960
like that hacker can

154
00:05:48,960 --> 00:05:50,400
earn

155
00:05:50,400 --> 00:05:52,560
approximately ninety thousand dollars

156
00:05:52,560 --> 00:05:55,520
per month on uh running it in a good way

157
00:05:55,520 --> 00:05:57,600
so that it hits um there's certain

158
00:05:57,600 --> 00:06:00,160
certain targets they do indeed do not

159
00:06:00,160 --> 00:06:02,639
have a good backup strategy and that's

160
00:06:02,639 --> 00:06:04,319
why they decide to

161
00:06:04,319 --> 00:06:06,479
pay which of course we all know that it

162
00:06:06,479 --> 00:06:07,840
doesn't always mean that they're going

163
00:06:07,840 --> 00:06:09,680
to get their data back but that's the

164
00:06:09,680 --> 00:06:10,720
background

165
00:06:10,720 --> 00:06:13,120
so when the attacks happen what is

166
00:06:13,120 --> 00:06:16,240
important for us to know is that

167
00:06:16,240 --> 00:06:17,360
that that

168
00:06:17,360 --> 00:06:19,520
moment where we discover it is a quite a

169
00:06:19,520 --> 00:06:22,479
happy moment right so there is actually

170
00:06:22,479 --> 00:06:24,319
an interesting um

171
00:06:24,319 --> 00:06:26,160
set of statistics shared by the james

172
00:06:26,160 --> 00:06:28,639
comey the former fbi director while he

173
00:06:28,639 --> 00:06:30,720
says that when the hackers come in they

174
00:06:30,720 --> 00:06:32,560
do sit in our infrastructure for

175
00:06:32,560 --> 00:06:36,400
approximately 200 days so that is quite

176
00:06:36,400 --> 00:06:38,800
a serious number isn't it so imagine

177
00:06:38,800 --> 00:06:40,560
that hackers are in your infrastructure

178
00:06:40,560 --> 00:06:42,160
for that time

179
00:06:42,160 --> 00:06:44,880
uh and and then you discover it and then

180
00:06:44,880 --> 00:06:47,120
you realize that there's nothing really

181
00:06:47,120 --> 00:06:49,039
to recover because they've been like

182
00:06:49,039 --> 00:06:51,280
everywhere and they've seen like

183
00:06:51,280 --> 00:06:54,720
everything so 80 days it's also measured

184
00:06:54,720 --> 00:06:57,520
here after detection to full recovery

185
00:06:57,520 --> 00:06:58,960
that is also quite an interesting

186
00:06:58,960 --> 00:07:00,960
statistic because it shows that when the

187
00:07:00,960 --> 00:07:02,960
consultants come over because usually

188
00:07:02,960 --> 00:07:05,919
companies do not have an insa in-house

189
00:07:05,919 --> 00:07:08,400
skill set to recover quickly to bring

190
00:07:08,400 --> 00:07:10,639
them back to the operations then which

191
00:07:10,639 --> 00:07:13,199
is also making it quite an expensive um

192
00:07:13,199 --> 00:07:14,560
situation

193
00:07:14,560 --> 00:07:17,039
then it's 80 days needed until the

194
00:07:17,039 --> 00:07:19,440
company is like okay now we are all good

195
00:07:19,440 --> 00:07:21,039
now we're all set we have recovered

196
00:07:21,039 --> 00:07:23,360
everything we have all the services that

197
00:07:23,360 --> 00:07:25,919
are working properly and so on

198
00:07:25,919 --> 00:07:29,840
so that is what we what we see now just

199
00:07:29,840 --> 00:07:31,520
to share a little bit of a story before

200
00:07:31,520 --> 00:07:33,919
we get into into demos um during the

201
00:07:33,919 --> 00:07:36,000
pandemics we've been

202
00:07:36,000 --> 00:07:37,680
actually participating in a very

203
00:07:37,680 --> 00:07:40,000
interesting project where the customer

204
00:07:40,000 --> 00:07:42,000
which was international customer with a

205
00:07:42,000 --> 00:07:45,520
series of factories all around the world

206
00:07:45,520 --> 00:07:48,319
they got fully encrypted so they got run

207
00:07:48,319 --> 00:07:51,039
somewhere that ransomware got into their

208
00:07:51,039 --> 00:07:54,160
network by leveraging a vendor's

209
00:07:54,160 --> 00:07:55,520
relationship

210
00:07:55,520 --> 00:07:58,080
meaning that they were supported by

211
00:07:58,080 --> 00:08:01,120
certain id company and hackers knew that

212
00:08:01,120 --> 00:08:03,440
and that particular id company got

213
00:08:03,440 --> 00:08:04,479
hacked

214
00:08:04,479 --> 00:08:05,440
and then

215
00:08:05,440 --> 00:08:08,879
hackers managed to get credentials that

216
00:08:08,879 --> 00:08:10,560
apparently they were using over there

217
00:08:10,560 --> 00:08:13,840
and then access the particular

218
00:08:13,840 --> 00:08:15,280
organization so it's also quite

219
00:08:15,280 --> 00:08:16,720
interesting to see

220
00:08:16,720 --> 00:08:18,560
that vendors

221
00:08:18,560 --> 00:08:21,120
are put into the context of the whole

222
00:08:21,120 --> 00:08:22,800
attack paths and they're actually

223
00:08:22,800 --> 00:08:24,960
becoming one of the attack vectors

224
00:08:24,960 --> 00:08:26,560
so that's why when we are big

225
00:08:26,560 --> 00:08:28,160
organization one of the things that we

226
00:08:28,160 --> 00:08:30,879
should encounter in our process

227
00:08:30,879 --> 00:08:33,360
it's simply the verification of who is

228
00:08:33,360 --> 00:08:35,279
our vendor and how do they manage our

229
00:08:35,279 --> 00:08:37,440
credentials and also we should on our

230
00:08:37,440 --> 00:08:38,559
side

231
00:08:38,559 --> 00:08:40,958
assure that they're not just logging on

232
00:08:40,958 --> 00:08:42,958
with the username and password like it

233
00:08:42,958 --> 00:08:46,160
was in the case i'm explaining but also

234
00:08:46,160 --> 00:08:47,440
that they are using for example

235
00:08:47,440 --> 00:08:49,839
multi-factor authentication and so on

236
00:08:49,839 --> 00:08:52,160
and you got a full control over how not

237
00:08:52,160 --> 00:08:54,640
only that identity is used but mainly

238
00:08:54,640 --> 00:08:57,519
where it's used so these consultants

239
00:08:57,519 --> 00:08:59,360
they are usually not getting into these

240
00:08:59,360 --> 00:09:01,680
servers but now they do okay let's

241
00:09:01,680 --> 00:09:03,440
figure it out so that kind of

242
00:09:03,440 --> 00:09:04,959
intelligent threat detection is

243
00:09:04,959 --> 00:09:06,480
something that is definitely needed for

244
00:09:06,480 --> 00:09:09,200
the current times in order to not only

245
00:09:09,200 --> 00:09:11,120
investigate of course what happened but

246
00:09:11,120 --> 00:09:13,040
mainly to prevent

247
00:09:13,040 --> 00:09:14,320
but when we don't have a private

248
00:09:14,320 --> 00:09:17,120
prevention then attacks happen and as

249
00:09:17,120 --> 00:09:19,519
this case in this case of this customer

250
00:09:19,519 --> 00:09:21,360
we could observe that

251
00:09:21,360 --> 00:09:23,680
their infrastructure was attacked now

252
00:09:23,680 --> 00:09:26,399
they actually paid and they negotiated

253
00:09:26,399 --> 00:09:28,880
with the hackers uh the certain price

254
00:09:28,880 --> 00:09:30,800
there was a company that was especially

255
00:09:30,800 --> 00:09:33,200
hired for that for the negotiations and

256
00:09:33,200 --> 00:09:34,640
they have negotiated a half a million

257
00:09:34,640 --> 00:09:36,560
euros to pay in order to get their data

258
00:09:36,560 --> 00:09:39,200
back because of the poor backup strategy

259
00:09:39,200 --> 00:09:41,440
so what they got as a response was

260
00:09:41,440 --> 00:09:43,360
actually a decrypter and imagine guys

261
00:09:43,360 --> 00:09:45,200
that that decrypter

262
00:09:45,200 --> 00:09:46,959
was not working

263
00:09:46,959 --> 00:09:49,440
so you can totally put that into their

264
00:09:49,440 --> 00:09:51,600
real life that you actually pay a huge

265
00:09:51,600 --> 00:09:53,440
amount of money for something that just

266
00:09:53,440 --> 00:09:55,360
simply doesn't give you anything so

267
00:09:55,360 --> 00:09:58,080
that's a quite a big disappointment but

268
00:09:58,080 --> 00:09:59,519
they were claiming that it's supposed to

269
00:09:59,519 --> 00:10:02,320
work so where is the problem so what we

270
00:10:02,320 --> 00:10:04,399
did we have decompiled the decrypter so

271
00:10:04,399 --> 00:10:06,320
we kind of were playing the role of a

272
00:10:06,320 --> 00:10:08,720
helpdesk for hackers to be fair and we

273
00:10:08,720 --> 00:10:11,040
decompile it and um we learned what

274
00:10:11,040 --> 00:10:13,279
already algorithms use so how they are

275
00:10:13,279 --> 00:10:14,959
actually used algorithms is one thing

276
00:10:14,959 --> 00:10:17,519
but how they are used also where the

277
00:10:17,519 --> 00:10:20,000
keys and so on so we managed to

278
00:10:20,000 --> 00:10:22,560
totally put that into pieces we built up

279
00:10:22,560 --> 00:10:24,480
our way to decrypt the data and we

280
00:10:24,480 --> 00:10:26,880
manually decrypted the data that was

281
00:10:26,880 --> 00:10:29,600
there encrypted so luckily for them it

282
00:10:29,600 --> 00:10:31,760
all worked fine but it was a pretty

283
00:10:31,760 --> 00:10:34,720
expensive situation to deal with

284
00:10:34,720 --> 00:10:37,120
now how did we learn that it was

285
00:10:37,120 --> 00:10:40,079
actually from the vendors network so one

286
00:10:40,079 --> 00:10:41,519
thing we always have to take into

287
00:10:41,519 --> 00:10:43,040
consideration that whenever you are

288
00:10:43,040 --> 00:10:45,279
doing the investigation even though

289
00:10:45,279 --> 00:10:47,200
hackers might clean up their traces

290
00:10:47,200 --> 00:10:49,279
pretty nicely then there's always

291
00:10:49,279 --> 00:10:51,760
something that you guys are able to find

292
00:10:51,760 --> 00:10:53,600
always something and that is also

293
00:10:53,600 --> 00:10:54,800
something that

294
00:10:54,800 --> 00:10:56,480
i would have to share with you first

295
00:10:56,480 --> 00:10:58,399
let's start with the memory whenever we

296
00:10:58,399 --> 00:10:59,839
got

297
00:10:59,839 --> 00:11:01,680
the memory dump made

298
00:11:01,680 --> 00:11:03,440
after the attack you've noticed that

299
00:11:03,440 --> 00:11:05,120
there's something going on you start the

300
00:11:05,120 --> 00:11:07,200
incident response procedure and then one

301
00:11:07,200 --> 00:11:09,279
of the things that are actually part of

302
00:11:09,279 --> 00:11:11,279
that is collection of the evidence

303
00:11:11,279 --> 00:11:13,760
memory and both the disk so first you do

304
00:11:13,760 --> 00:11:15,600
the memory then you do the disk you do

305
00:11:15,600 --> 00:11:17,440
the memory dam for example with the ftk

306
00:11:17,440 --> 00:11:19,920
imager or with dump it or belkasov ram

307
00:11:19,920 --> 00:11:23,200
capture or memorize or whatever yeah so

308
00:11:23,200 --> 00:11:24,560
there are many tools that you could use

309
00:11:24,560 --> 00:11:26,000
for that purpose

310
00:11:26,000 --> 00:11:28,320
i'm a big fan of dump it and also a

311
00:11:28,320 --> 00:11:30,880
belkaso because they are tiny ftk of

312
00:11:30,880 --> 00:11:32,800
course it's a good tool too

313
00:11:32,800 --> 00:11:34,720
but these two are tiny and they are

314
00:11:34,720 --> 00:11:36,720
pretty quick and they just give me what

315
00:11:36,720 --> 00:11:39,440
i want uh very quickly while we are

316
00:11:39,440 --> 00:11:42,079
collecting the evidence so when we are

317
00:11:42,079 --> 00:11:43,680
thinking about memory so what is

318
00:11:43,680 --> 00:11:45,200
interesting within the memory and this

319
00:11:45,200 --> 00:11:46,560
is something that i would have to start

320
00:11:46,560 --> 00:11:48,399
with in order to show you a couple of

321
00:11:48,399 --> 00:11:49,519
things

322
00:11:49,519 --> 00:11:52,160
a couple of things uh for now within the

323
00:11:52,160 --> 00:11:54,079
within the demonstration first of all

324
00:11:54,079 --> 00:11:56,560
we're going to be using over here the

325
00:11:56,560 --> 00:11:58,880
volatility so that's the one that we are

326
00:11:58,880 --> 00:12:02,079
able to play with uh while um performing

327
00:12:02,079 --> 00:12:04,720
the analysis of the of the memory

328
00:12:04,720 --> 00:12:06,800
content so when you make a dump already

329
00:12:06,800 --> 00:12:09,200
volatility is playing a really good job

330
00:12:09,200 --> 00:12:12,000
over here for for that one

331
00:12:12,000 --> 00:12:12,720
and

332
00:12:12,720 --> 00:12:15,279
i got a volatility over here uh so

333
00:12:15,279 --> 00:12:17,839
that's the volatility master and one of

334
00:12:17,839 --> 00:12:19,440
the things that i would love to run over

335
00:12:19,440 --> 00:12:22,320
here it's gonna be the

336
00:12:22,320 --> 00:12:24,320
volatility itself so let's just uh

337
00:12:24,320 --> 00:12:26,880
figure it out i got here the vol py

338
00:12:26,880 --> 00:12:28,959
fantastic and that's the one that i'm

339
00:12:28,959 --> 00:12:32,320
gonna be leveraging so we got a volpy

340
00:12:32,320 --> 00:12:35,360
our volatility and volatility itself

341
00:12:35,360 --> 00:12:38,399
will allow us to jump into the memory

342
00:12:38,399 --> 00:12:40,720
content so volatility py and then we're

343
00:12:40,720 --> 00:12:42,560
going to use it for example with the

344
00:12:42,560 --> 00:12:46,240
parameter of f for file and then in this

345
00:12:46,240 --> 00:12:49,440
case we're going to be getting into the

346
00:12:49,440 --> 00:12:51,760
the discovery of the hidden process so

347
00:12:51,760 --> 00:12:55,279
here we're going to use the minus f for

348
00:12:55,279 --> 00:12:58,240
file and then we are getting into the d

349
00:12:58,240 --> 00:13:00,399
and in this case it's going to be tools

350
00:13:00,399 --> 00:13:02,399
and then we got dumps

351
00:13:02,399 --> 00:13:04,959
and then we got over here that analyze

352
00:13:04,959 --> 00:13:06,560
dot dmp

353
00:13:06,560 --> 00:13:08,800
and that analyze the dmp we're going to

354
00:13:08,800 --> 00:13:11,760
run with the profile

355
00:13:11,760 --> 00:13:14,959
off in this case it was windows 7

356
00:13:14,959 --> 00:13:18,240
sp1 x64

357
00:13:18,240 --> 00:13:19,519
and then we're going to run over here

358
00:13:19,519 --> 00:13:22,959
the ps list

359
00:13:23,200 --> 00:13:25,839
so ps list allows us to list and let's

360
00:13:25,839 --> 00:13:28,959
make it prettier to list us processes of

361
00:13:28,959 --> 00:13:32,720
course very quickly and this is the

362
00:13:32,720 --> 00:13:34,399
the query of something that we call

363
00:13:34,399 --> 00:13:36,880
active process links and active process

364
00:13:36,880 --> 00:13:38,720
links it is actually a structure that

365
00:13:38,720 --> 00:13:41,120
you can cheat on if you would like to

366
00:13:41,120 --> 00:13:43,920
simply hide a process hiding a process

367
00:13:43,920 --> 00:13:46,320
is part of the dcom technique so direct

368
00:13:46,320 --> 00:13:48,160
kernel object modification technique

369
00:13:48,160 --> 00:13:50,160
that is usually used by rootkins but

370
00:13:50,160 --> 00:13:51,839
what i would like to show you is how

371
00:13:51,839 --> 00:13:53,680
easy is actually to find it so if the

372
00:13:53,680 --> 00:13:55,199
process is going to be hidden because

373
00:13:55,199 --> 00:13:56,800
someone's going to modify the active

374
00:13:56,800 --> 00:13:59,040
process links then we are making the

375
00:13:59,040 --> 00:14:00,800
memory dump and then we're like let's

376
00:14:00,800 --> 00:14:03,120
see what we got and here we don't see

377
00:14:03,120 --> 00:14:05,120
pretty much so there's an svc hose

378
00:14:05,120 --> 00:14:07,199
there's an explorer there's an emmett

379
00:14:07,199 --> 00:14:09,600
agent and all that stuff so long story

380
00:14:09,600 --> 00:14:12,160
short what we can do we can also do the

381
00:14:12,160 --> 00:14:14,000
ps scan

382
00:14:14,000 --> 00:14:16,959
and pscan runs a little bit longer in my

383
00:14:16,959 --> 00:14:18,399
case it was actually pretty quick

384
00:14:18,399 --> 00:14:20,000
because my memory number is small and

385
00:14:20,000 --> 00:14:21,920
i've got a lot of memory and my memory

386
00:14:21,920 --> 00:14:23,519
lamp is all loaded into the memory

387
00:14:23,519 --> 00:14:25,120
that's why it's so fast

388
00:14:25,120 --> 00:14:27,199
so here you are able to see that we've

389
00:14:27,199 --> 00:14:29,279
got an additional process which is

390
00:14:29,279 --> 00:14:31,279
called malware.xz

391
00:14:31,279 --> 00:14:32,639
and that's the process that we couldn't

392
00:14:32,639 --> 00:14:36,320
see before now the ps scandal is

393
00:14:36,320 --> 00:14:38,320
actually relying on the e-process

394
00:14:38,320 --> 00:14:41,040
structure as well but here we are able

395
00:14:41,040 --> 00:14:44,959
to find also based on handles to various

396
00:14:44,959 --> 00:14:46,880
processes from client server random

397
00:14:46,880 --> 00:14:49,040
subsystem what kind of processes here

398
00:14:49,040 --> 00:14:51,199
are hidden so client server runtime some

399
00:14:51,199 --> 00:14:53,600
system summarizing is actually the guy

400
00:14:53,600 --> 00:14:55,360
that not only manages processes but it

401
00:14:55,360 --> 00:14:58,240
also assigns resources to them meaning

402
00:14:58,240 --> 00:15:00,480
if there is something that is there

403
00:15:00,480 --> 00:15:02,720
using resources and it has to because

404
00:15:02,720 --> 00:15:04,320
that's basically how the process

405
00:15:04,320 --> 00:15:06,959
structure looks like then we are able to

406
00:15:06,959 --> 00:15:09,279
find it through many different ways

407
00:15:09,279 --> 00:15:11,360
really um not only getting live to the

408
00:15:11,360 --> 00:15:13,279
system and checking the handles but also

409
00:15:13,279 --> 00:15:15,040
we're able to make a memory dump and

410
00:15:15,040 --> 00:15:16,720
check it like that

411
00:15:16,720 --> 00:15:18,320
so what i'm trying to say over here is

412
00:15:18,320 --> 00:15:20,959
that systems simply um

413
00:15:20,959 --> 00:15:22,240
do allow

414
00:15:22,240 --> 00:15:24,399
the modification of the process list so

415
00:15:24,399 --> 00:15:26,399
in this case windows in windows we are

416
00:15:26,399 --> 00:15:28,000
able to

417
00:15:28,000 --> 00:15:29,279
analyze

418
00:15:29,279 --> 00:15:31,680
and and mainly edit the active process

419
00:15:31,680 --> 00:15:34,480
links list but we are also able to

420
00:15:34,480 --> 00:15:36,880
discover it because processors they have

421
00:15:36,880 --> 00:15:39,680
to get resources and that is also a one

422
00:15:39,680 --> 00:15:42,240
of the ways to spot them

423
00:15:42,240 --> 00:15:44,639
so things cannot be hidden really i mean

424
00:15:44,639 --> 00:15:46,720
it's sometimes hard to find them but

425
00:15:46,720 --> 00:15:49,040
they cannot be hidden so here we go

426
00:15:49,040 --> 00:15:50,959
we've got one thing now second thing

427
00:15:50,959 --> 00:15:53,759
around memory that is not trivial that i

428
00:15:53,759 --> 00:15:55,920
would like to show you it's related with

429
00:15:55,920 --> 00:15:59,279
the memory dump analysis from the file

430
00:15:59,279 --> 00:16:02,160
extraction so imagine one of one thing

431
00:16:02,160 --> 00:16:04,880
over here um our job is gonna be to

432
00:16:04,880 --> 00:16:07,440
right now extract the even logs from the

433
00:16:07,440 --> 00:16:09,920
memory which even locks the ones that

434
00:16:09,920 --> 00:16:12,800
were processed at that time

435
00:16:12,800 --> 00:16:15,279
by leveraging the even block service

436
00:16:15,279 --> 00:16:17,199
so if there is an even lock service

437
00:16:17,199 --> 00:16:20,160
working it's working on logs then maybe

438
00:16:20,160 --> 00:16:21,360
the lock

439
00:16:21,360 --> 00:16:23,839
technically was was cleaned but there is

440
00:16:23,839 --> 00:16:25,360
still something within the memory that

441
00:16:25,360 --> 00:16:27,360
service was working on yeah and so on so

442
00:16:27,360 --> 00:16:29,040
you would like to technically make a

443
00:16:29,040 --> 00:16:31,360
memory dump and from the memory dump

444
00:16:31,360 --> 00:16:33,839
extract the logs or the only thing you

445
00:16:33,839 --> 00:16:35,759
got is just a memory done for the

446
00:16:35,759 --> 00:16:38,079
analysis and you are like let me just

447
00:16:38,079 --> 00:16:40,639
extract as much as you can and while you

448
00:16:40,639 --> 00:16:43,440
won't extract even blocks if they could

449
00:16:43,440 --> 00:16:47,279
contain information that um that is

450
00:16:47,279 --> 00:16:49,440
eventually useful for for the projects

451
00:16:49,440 --> 00:16:51,440
you you would not avoid that yeah so you

452
00:16:51,440 --> 00:16:54,000
you would rather step into any possible

453
00:16:54,000 --> 00:16:55,759
extraction of information that you would

454
00:16:55,759 --> 00:16:59,199
have in the memory now so anyway

455
00:16:59,199 --> 00:17:01,120
within the within the volatility we will

456
00:17:01,120 --> 00:17:03,120
be actually getting into this point but

457
00:17:03,120 --> 00:17:06,079
first if we would like to extract the

458
00:17:06,079 --> 00:17:09,919
memory um the content of the of the

459
00:17:09,919 --> 00:17:11,039
memory

460
00:17:11,039 --> 00:17:12,880
and especially the even logs we need to

461
00:17:12,880 --> 00:17:15,359
figure out where even looks are stored

462
00:17:15,359 --> 00:17:17,599
and they are stored and processed by the

463
00:17:17,599 --> 00:17:19,199
even log service

464
00:17:19,199 --> 00:17:21,119
so what is even look service well that

465
00:17:21,119 --> 00:17:23,199
is actually the

466
00:17:23,199 --> 00:17:26,959
svc host so if we do even ps list like

467
00:17:26,959 --> 00:17:28,240
this

468
00:17:28,240 --> 00:17:29,760
what you're going to see is that we've

469
00:17:29,760 --> 00:17:31,760
got a bunch of svc hosts over here so

470
00:17:31,760 --> 00:17:34,640
which of these is actually running the

471
00:17:34,640 --> 00:17:37,679
at the even look service we can say

472
00:17:37,679 --> 00:17:40,240
so that's why what you guys have to do

473
00:17:40,240 --> 00:17:42,720
you have to leverage again volatility

474
00:17:42,720 --> 00:17:44,240
but from a different perspective we're

475
00:17:44,240 --> 00:17:47,440
gonna list over here the dll list

476
00:17:47,440 --> 00:17:49,600
and we're gonna put it into the text

477
00:17:49,600 --> 00:17:52,960
file so dll list dot txt why we're doing

478
00:17:52,960 --> 00:17:55,840
this because we want to find svc host

479
00:17:55,840 --> 00:17:59,600
that is actually loading the e the the

480
00:17:59,600 --> 00:18:02,240
win um the windows indexing service uh

481
00:18:02,240 --> 00:18:03,760
well not windows indexing but windows

482
00:18:03,760 --> 00:18:07,200
even lock service um um dll and that's

483
00:18:07,200 --> 00:18:09,039
the one that we're gonna be uh getting

484
00:18:09,039 --> 00:18:12,840
to so that's actually the wevt

485
00:18:12,840 --> 00:18:15,440
svc.dll so yeah let's have a look so

486
00:18:15,440 --> 00:18:17,919
we're going to do a dll list

487
00:18:17,919 --> 00:18:20,320
and we can open it up like that

488
00:18:20,320 --> 00:18:22,160
and what are we looking for it's the

489
00:18:22,160 --> 00:18:24,480
wevt

490
00:18:24,480 --> 00:18:26,240
and not the api

491
00:18:26,240 --> 00:18:29,600
but svc yeah that's correct in the svc

492
00:18:29,600 --> 00:18:31,520
host so we found it that's actually the

493
00:18:31,520 --> 00:18:34,559
process id eight four eight eight four

494
00:18:34,559 --> 00:18:36,720
eight so what we're gonna do now now

495
00:18:36,720 --> 00:18:38,720
we're gonna do the similar command but

496
00:18:38,720 --> 00:18:40,960
we're gonna dump the files that are

497
00:18:40,960 --> 00:18:42,799
inside that

498
00:18:42,799 --> 00:18:45,679
inside that svc host so we're gonna also

499
00:18:45,679 --> 00:18:49,360
rely our search on handles so here we're

500
00:18:49,360 --> 00:18:51,280
gonna do profile like yeah like you

501
00:18:51,280 --> 00:18:53,360
already know but this time we're gonna

502
00:18:53,360 --> 00:18:55,039
do dump

503
00:18:55,039 --> 00:18:59,200
files minus n minus p so this is to

504
00:18:59,200 --> 00:19:02,320
preserve the name from the process id

505
00:19:02,320 --> 00:19:04,160
that we were we were playing with and

506
00:19:04,160 --> 00:19:07,200
that's our eight four eight eight four

507
00:19:07,200 --> 00:19:10,240
eight so here we're gonna use the 848

508
00:19:10,240 --> 00:19:12,480
yeah and then uh pretty much i would say

509
00:19:12,480 --> 00:19:14,960
that's it but one more thing we could do

510
00:19:14,960 --> 00:19:17,360
over here we could actually store it in

511
00:19:17,360 --> 00:19:19,520
that particular directory so that's

512
00:19:19,520 --> 00:19:22,400
going to be within the python

513
00:19:22,400 --> 00:19:24,160
over here so we could store it within

514
00:19:24,160 --> 00:19:27,600
the directory that we can uh technically

515
00:19:27,600 --> 00:19:30,240
set up over there and that could be uh

516
00:19:30,240 --> 00:19:32,960
i'm gonna create a directory over here

517
00:19:32,960 --> 00:19:36,840
um let's say uh dump here we

518
00:19:36,840 --> 00:19:40,799
go so we've got this one and we just

519
00:19:40,799 --> 00:19:43,120
named that particular directory uh dump

520
00:19:43,120 --> 00:19:45,440
yep so this is this is the one that we

521
00:19:45,440 --> 00:19:47,039
that we store over there

522
00:19:47,039 --> 00:19:49,120
uh or we could actually uh let's just do

523
00:19:49,120 --> 00:19:51,280
it this way ah here we go it's gonna be

524
00:19:51,280 --> 00:19:53,520
the folder yeah so here we go

525
00:19:53,520 --> 00:19:56,720
so eventually after some time uh we can

526
00:19:56,720 --> 00:19:59,840
see that there are evt axes coming out

527
00:19:59,840 --> 00:20:01,840
and that's awesome but the problem with

528
00:20:01,840 --> 00:20:03,679
the evtx files is that they're very

529
00:20:03,679 --> 00:20:04,799
sensitive

530
00:20:04,799 --> 00:20:07,280
and for the fact they are sensitive it

531
00:20:07,280 --> 00:20:08,559
means that they're gonna be most

532
00:20:08,559 --> 00:20:10,640
probably broken

533
00:20:10,640 --> 00:20:13,840
so if we are about to analyze what kind

534
00:20:13,840 --> 00:20:16,159
of things we got over there

535
00:20:16,159 --> 00:20:18,000
let's go to this dumb folder

536
00:20:18,000 --> 00:20:20,880
and i'm gonna do it in gui why not and

537
00:20:20,880 --> 00:20:22,720
within this dumb folder you guys are

538
00:20:22,720 --> 00:20:25,720
able to see that we've got lots of

539
00:20:25,720 --> 00:20:29,360
vacb files vacb and so on we're gonna

540
00:20:29,360 --> 00:20:32,000
search for application

541
00:20:32,000 --> 00:20:34,080
yeah so here we go and we're looking for

542
00:20:34,080 --> 00:20:35,919
the application log that's going to be

543
00:20:35,919 --> 00:20:38,320
this one so i'm going to copy that log

544
00:20:38,320 --> 00:20:39,840
and what i'm going to do i'm going to

545
00:20:39,840 --> 00:20:40,960
paste it

546
00:20:40,960 --> 00:20:43,600
in the analysis folder that we're going

547
00:20:43,600 --> 00:20:45,919
to be leveraging right now because that

548
00:20:45,919 --> 00:20:49,039
log i already know it is actually broken

549
00:20:49,039 --> 00:20:49,760
yeah

550
00:20:49,760 --> 00:20:52,080
so having this in mind um we're going to

551
00:20:52,080 --> 00:20:54,799
be playing with the evtx recovery and

552
00:20:54,799 --> 00:20:56,960
that's actually pretty awesome because

553
00:20:56,960 --> 00:20:59,360
um evtx as i mentioned is a pretty

554
00:20:59,360 --> 00:21:02,480
sensitive piece of file and that tool

555
00:21:02,480 --> 00:21:04,880
that i will i will show you you are not

556
00:21:04,880 --> 00:21:06,960
only able to use for the memory

557
00:21:06,960 --> 00:21:09,360
extraction but you are also able to use

558
00:21:09,360 --> 00:21:11,280
it while you've got an issue with your

559
00:21:11,280 --> 00:21:14,159
evtx file so we actually wrote a tool

560
00:21:14,159 --> 00:21:16,799
that is fixing the evx files evtx files

561
00:21:16,799 --> 00:21:19,120
plus we made a reverse engineering of

562
00:21:19,120 --> 00:21:21,760
the evtx format it took us over half a

563
00:21:21,760 --> 00:21:24,000
year actually to do it because evtx is

564
00:21:24,000 --> 00:21:26,240
very difficult but it's it's good to

565
00:21:26,240 --> 00:21:29,280
know finally um that we are able to fix

566
00:21:29,280 --> 00:21:31,679
these files so what we're going to do uh

567
00:21:31,679 --> 00:21:34,320
let me go to the nd drive

568
00:21:34,320 --> 00:21:36,400
i'm going to clear the screen and then i

569
00:21:36,400 --> 00:21:39,360
got over here the path to enter and over

570
00:21:39,360 --> 00:21:41,679
there i've got two folders one is called

571
00:21:41,679 --> 00:21:42,480
in

572
00:21:42,480 --> 00:21:44,320
and this is where i have copied our

573
00:21:44,320 --> 00:21:48,080
application um file and another one is

574
00:21:48,080 --> 00:21:49,200
out

575
00:21:49,200 --> 00:21:51,360
which we can of course check and you can

576
00:21:51,360 --> 00:21:54,400
see it's empty so it's easy okay so

577
00:21:54,400 --> 00:21:56,400
let's clear the screen and then what

578
00:21:56,400 --> 00:21:59,280
we're gonna do is a cq evtx recovery

579
00:21:59,280 --> 00:22:02,320
we're gonna do uh the recovery for in

580
00:22:02,320 --> 00:22:05,840
input folder for out output folder so we

581
00:22:05,840 --> 00:22:09,360
managed to recover 17 records good but

582
00:22:09,360 --> 00:22:11,200
why we're actually recovering it let's

583
00:22:11,200 --> 00:22:13,760
go to the in folder to compare

584
00:22:13,760 --> 00:22:16,400
basically these files first of all we've

585
00:22:16,400 --> 00:22:19,039
got over here it is let's check again

586
00:22:19,039 --> 00:22:21,600
file evtxvsdcb so we're going to do

587
00:22:21,600 --> 00:22:22,799
rename

588
00:22:22,799 --> 00:22:23,919
file

589
00:22:23,919 --> 00:22:24,840
into

590
00:22:24,840 --> 00:22:28,240
file.evdx so that it normally opens okay

591
00:22:28,240 --> 00:22:30,480
so let's see whether we are actually

592
00:22:30,480 --> 00:22:33,679
able to open this particular log and it

593
00:22:33,679 --> 00:22:35,679
actually opened on my screen over here

594
00:22:35,679 --> 00:22:37,760
so that's this one yeah as you can see

595
00:22:37,760 --> 00:22:40,799
and it says it's corrupted yeah it is

596
00:22:40,799 --> 00:22:43,280
totally corrupted so if we won't like to

597
00:22:43,280 --> 00:22:45,520
play with it we cannot because

598
00:22:45,520 --> 00:22:48,240
eventually uh this is this even log that

599
00:22:48,240 --> 00:22:50,720
is just simply a broken there's a lot of

600
00:22:50,720 --> 00:22:52,720
digital signing inside so that's why

601
00:22:52,720 --> 00:22:55,679
we're not really able to um to make it

602
00:22:55,679 --> 00:22:57,919
make it easily to be opened

603
00:22:57,919 --> 00:23:00,559
um because um

604
00:23:00,559 --> 00:23:03,280
because of the various chunks and single

605
00:23:03,280 --> 00:23:05,120
entries that are digitally signed and so

606
00:23:05,120 --> 00:23:06,960
on yeah so this is this is quite quite

607
00:23:06,960 --> 00:23:10,320
clear okay lovely so the next part over

608
00:23:10,320 --> 00:23:12,320
there is going to be to fix it yep so i

609
00:23:12,320 --> 00:23:15,200
can just close it and then um fixing it

610
00:23:15,200 --> 00:23:17,840
already happened i and eventually we can

611
00:23:17,840 --> 00:23:20,080
go to the out folder and then over there

612
00:23:20,080 --> 00:23:21,360
we've got our

613
00:23:21,360 --> 00:23:24,240
evgx file that we are able to open and

614
00:23:24,240 --> 00:23:25,840
then that's the second one that is

615
00:23:25,840 --> 00:23:28,000
opening over here on the top of the

616
00:23:28,000 --> 00:23:30,000
broken one and then

617
00:23:30,000 --> 00:23:31,840
in the moment because we are verifying

618
00:23:31,840 --> 00:23:33,919
the digital signatures over here

619
00:23:33,919 --> 00:23:35,919
it's going to show us a couple of events

620
00:23:35,919 --> 00:23:38,480
it is not 17 events as it was written in

621
00:23:38,480 --> 00:23:40,159
the console because it's more chunks

622
00:23:40,159 --> 00:23:43,039
that we are referring to these chunks

623
00:23:43,039 --> 00:23:45,440
make events and this is what we are able

624
00:23:45,440 --> 00:23:48,240
to observe as well so yet another

625
00:23:48,240 --> 00:23:51,039
interesting tool that allows us to learn

626
00:23:51,039 --> 00:23:51,919
that

627
00:23:51,919 --> 00:23:53,919
that that what was happening right now

628
00:23:53,919 --> 00:23:55,520
in the even logs

629
00:23:55,520 --> 00:23:58,000
it's in the memory and then maybe that

630
00:23:58,000 --> 00:24:00,480
could help us out to investigate more of

631
00:24:00,480 --> 00:24:02,480
an issues and actually i'll tell you one

632
00:24:02,480 --> 00:24:04,799
little detail here is that that tool was

633
00:24:04,799 --> 00:24:06,880
actually written in the project where we

634
00:24:06,880 --> 00:24:07,919
had to

635
00:24:07,919 --> 00:24:10,240
extract evt access from the memory

636
00:24:10,240 --> 00:24:11,840
because there was a case of a hacker

637
00:24:11,840 --> 00:24:15,279
that was sabotaging the network so there

638
00:24:15,279 --> 00:24:17,039
was like a factory again so different

639
00:24:17,039 --> 00:24:19,840
one and that particular admin

640
00:24:19,840 --> 00:24:21,120
was actually

641
00:24:21,120 --> 00:24:24,000
um putting the various services down and

642
00:24:24,000 --> 00:24:26,480
then our job was to figure out that

643
00:24:26,480 --> 00:24:28,559
that's this guy actually doing this and

644
00:24:28,559 --> 00:24:30,320
one of the things we had to extract from

645
00:24:30,320 --> 00:24:32,080
the memory down that we had from his

646
00:24:32,080 --> 00:24:35,520
laptop were actually even looks so that

647
00:24:35,520 --> 00:24:36,559
tool

648
00:24:36,559 --> 00:24:39,120
proven already that is very useful in

649
00:24:39,120 --> 00:24:41,760
the in the practical project yeah

650
00:24:41,760 --> 00:24:44,400
okay so we've got that one now within

651
00:24:44,400 --> 00:24:46,240
the memory of course we could be talking

652
00:24:46,240 --> 00:24:50,240
about that for hours and uh memory is a

653
00:24:50,240 --> 00:24:53,679
huge subject that is full of interesting

654
00:24:53,679 --> 00:24:56,080
ways to extract information because

655
00:24:56,080 --> 00:24:58,960
quite often information isn't really um

656
00:24:58,960 --> 00:25:00,960
integral so you have to do something to

657
00:25:00,960 --> 00:25:03,440
work on a file to work on information in

658
00:25:03,440 --> 00:25:05,600
order to make it work for you

659
00:25:05,600 --> 00:25:08,000
but i think that this perspective also

660
00:25:08,000 --> 00:25:11,039
shows us that there is this possibility

661
00:25:11,039 --> 00:25:12,880
and not only we're able to find things

662
00:25:12,880 --> 00:25:15,360
that are hidden in the operating system

663
00:25:15,360 --> 00:25:17,360
from the memory dumps but also we are

664
00:25:17,360 --> 00:25:18,559
able to

665
00:25:18,559 --> 00:25:20,880
extract sometimes things that are

666
00:25:20,880 --> 00:25:23,360
pretty much or where pretty much

667
00:25:23,360 --> 00:25:25,120
not that easily

668
00:25:25,120 --> 00:25:26,960
not that easily recoverable like for

669
00:25:26,960 --> 00:25:30,480
example corrupted evt x files evt it's

670
00:25:30,480 --> 00:25:34,159
simple evt x1 no so here we go

671
00:25:34,159 --> 00:25:36,480
okay guys so what about the next part

672
00:25:36,480 --> 00:25:38,320
the next part that i got for you is

673
00:25:38,320 --> 00:25:41,279
related with extracting information from

674
00:25:41,279 --> 00:25:43,520
the disk and there are so many things

675
00:25:43,520 --> 00:25:45,840
that we can have a look at and to be

676
00:25:45,840 --> 00:25:48,080
fair this is also quite rich it's a

677
00:25:48,080 --> 00:25:50,559
little bit simpler than memory um at

678
00:25:50,559 --> 00:25:53,279
least in my opinion because you got more

679
00:25:53,279 --> 00:25:55,520
tools to work with and you can pretty

680
00:25:55,520 --> 00:25:58,000
much almost immediately get some kind of

681
00:25:58,000 --> 00:26:00,480
an insight about what is going on if of

682
00:26:00,480 --> 00:26:02,799
course you're going to use good tools if

683
00:26:02,799 --> 00:26:04,320
you're going to use the good tools now

684
00:26:04,320 --> 00:26:05,840
these tools sometimes you might be

685
00:26:05,840 --> 00:26:07,600
writing in-house

686
00:26:07,600 --> 00:26:09,440
and sometimes you might be using the

687
00:26:09,440 --> 00:26:10,720
tools that are either written by

688
00:26:10,720 --> 00:26:12,880
community or commercial and so on but

689
00:26:12,880 --> 00:26:14,640
eventually there are certain places

690
00:26:14,640 --> 00:26:16,799
always to look at and this list that you

691
00:26:16,799 --> 00:26:18,960
can see over here it's this good list to

692
00:26:18,960 --> 00:26:21,200
start with while you're performing the

693
00:26:21,200 --> 00:26:23,279
disk analysis after you make the disk

694
00:26:23,279 --> 00:26:25,600
dump and one of the things that i really

695
00:26:25,600 --> 00:26:27,840
like is and that's not very obvious and

696
00:26:27,840 --> 00:26:29,919
we are talking today about or trying to

697
00:26:29,919 --> 00:26:32,240
talk about the not obvious things that's

698
00:26:32,240 --> 00:26:34,080
actually automatic destinations and the

699
00:26:34,080 --> 00:26:35,600
reason why i want to show you these ones

700
00:26:35,600 --> 00:26:38,080
is because they are rarely appearing in

701
00:26:38,080 --> 00:26:40,880
forensic books to be fair and automatic

702
00:26:40,880 --> 00:26:42,799
destinations are

703
00:26:42,799 --> 00:26:44,640
representing

704
00:26:44,640 --> 00:26:47,200
somewhat cache that is used by

705
00:26:47,200 --> 00:26:49,600
applications if of course applications

706
00:26:49,600 --> 00:26:51,120
are written in a certain way so there

707
00:26:51,120 --> 00:26:52,960
are many if if

708
00:26:52,960 --> 00:26:55,360
but on the other hand when you are using

709
00:26:55,360 --> 00:26:57,520
the software that is publicly known so

710
00:26:57,520 --> 00:27:00,720
things like uh office office package so

711
00:27:00,720 --> 00:27:03,200
excel word if you're using notepad if

712
00:27:03,200 --> 00:27:05,840
you're using any pdf readers and so on

713
00:27:05,840 --> 00:27:06,799
then

714
00:27:06,799 --> 00:27:08,960
outside of microsoft of course then you

715
00:27:08,960 --> 00:27:11,600
are able to most probably find quite a

716
00:27:11,600 --> 00:27:13,279
lot of information about the

717
00:27:13,279 --> 00:27:14,880
applications cache

718
00:27:14,880 --> 00:27:16,799
and what i've got over here is something

719
00:27:16,799 --> 00:27:19,360
that's called structured storage viewer

720
00:27:19,360 --> 00:27:21,840
this is a very simple app that allows me

721
00:27:21,840 --> 00:27:23,840
to get into the

722
00:27:23,840 --> 00:27:25,840
automatic destinations if you are

723
00:27:25,840 --> 00:27:27,760
thinking about where are they they are

724
00:27:27,760 --> 00:27:29,840
actually in the users folder so you are

725
00:27:29,840 --> 00:27:32,640
able to find them in a c user's username

726
00:27:32,640 --> 00:27:34,880
update a roaming microsoft windows

727
00:27:34,880 --> 00:27:37,679
recent automatic destinations this is

728
00:27:37,679 --> 00:27:40,000
also a hidden folder so you have to get

729
00:27:40,000 --> 00:27:42,159
there directly and over there we've got

730
00:27:42,159 --> 00:27:44,399
a two files that are

731
00:27:44,399 --> 00:27:47,760
suggested to be open this 9b9cdo

732
00:27:47,760 --> 00:27:50,240
it's actually something that if you go

733
00:27:50,240 --> 00:27:52,559
for example to forensic wiki and you

734
00:27:52,559 --> 00:27:55,200
search for automatic destinations or

735
00:27:55,200 --> 00:27:58,080
jump list as we sometimes call it and

736
00:27:58,080 --> 00:28:01,840
you search for jump list jmp list ids

737
00:28:01,840 --> 00:28:03,840
then you are able to find lots of

738
00:28:03,840 --> 00:28:06,480
commercial apps represented by

739
00:28:06,480 --> 00:28:07,919
identifiers

740
00:28:07,919 --> 00:28:10,799
this identifier is actually the one that

741
00:28:10,799 --> 00:28:14,640
represents notepad 64-bit notepad so if

742
00:28:14,640 --> 00:28:16,799
we do open it up and i open the second

743
00:28:16,799 --> 00:28:19,120
one but let's go for this one

744
00:28:19,120 --> 00:28:21,919
then anything anything you click by the

745
00:28:21,919 --> 00:28:25,200
way is actually showing us particularly

746
00:28:25,200 --> 00:28:28,960
a text file that has been ever ever in

747
00:28:28,960 --> 00:28:31,760
this windows installation opened

748
00:28:31,760 --> 00:28:33,440
so imagine that in your organization

749
00:28:33,440 --> 00:28:35,039
you're running like windows for like two

750
00:28:35,039 --> 00:28:37,120
years then you're gonna have over here

751
00:28:37,120 --> 00:28:39,679
the two years history of anything that

752
00:28:39,679 --> 00:28:41,520
has been opened so imagine that that

753
00:28:41,520 --> 00:28:43,039
could be really useful while you are

754
00:28:43,039 --> 00:28:45,360
investigating for example if user had

755
00:28:45,360 --> 00:28:47,279
access to this data and so on and you

756
00:28:47,279 --> 00:28:50,159
don't have a tracing maybe um except for

757
00:28:50,159 --> 00:28:53,600
for various data data repositories

758
00:28:53,600 --> 00:28:56,399
therefore from the windows box you are

759
00:28:56,399 --> 00:28:58,240
actually able to learn that that

760
00:28:58,240 --> 00:29:00,799
information so here for example let me

761
00:29:00,799 --> 00:29:03,120
analyze this we've got the structure

762
00:29:03,120 --> 00:29:04,880
number 10

763
00:29:04,880 --> 00:29:06,559
the tool is not the most user-friendly

764
00:29:06,559 --> 00:29:08,799
tool and eric simmerman is also writing

765
00:29:08,799 --> 00:29:10,480
a good tool so that there's like a jump

766
00:29:10,480 --> 00:29:11,360
jump

767
00:29:11,360 --> 00:29:13,200
list explorer

768
00:29:13,200 --> 00:29:14,080
and

769
00:29:14,080 --> 00:29:14,799
and

770
00:29:14,799 --> 00:29:16,320
both of the tools are really good yeah

771
00:29:16,320 --> 00:29:18,640
so here we go so here you are able to

772
00:29:18,640 --> 00:29:20,720
see that there is a

773
00:29:20,720 --> 00:29:24,640
python 27 volatility master dll list

774
00:29:24,640 --> 00:29:26,399
perfect so this is the file that we've

775
00:29:26,399 --> 00:29:29,760
been working on today right so and if

776
00:29:29,760 --> 00:29:31,840
you go like file by file structure by

777
00:29:31,840 --> 00:29:33,039
structure over there you're gonna see

778
00:29:33,039 --> 00:29:35,279
the whole list same happens for office

779
00:29:35,279 --> 00:29:37,039
applications for example now i've been

780
00:29:37,039 --> 00:29:39,039
participating in a project which has a

781
00:29:39,039 --> 00:29:40,880
very sad background because it was

782
00:29:40,880 --> 00:29:43,600
related with the childhood pornography

783
00:29:43,600 --> 00:29:46,240
where um the person who was involved in

784
00:29:46,240 --> 00:29:49,360
the crime um was deleting lots of things

785
00:29:49,360 --> 00:29:51,520
from the computer and the computer

786
00:29:51,520 --> 00:29:53,840
supposed to be clean so after the

787
00:29:53,840 --> 00:29:56,640
collection by the certain unit

788
00:29:56,640 --> 00:29:59,679
the disk was sent to me and i was

789
00:29:59,679 --> 00:30:02,480
supposed to analyze that part

790
00:30:02,480 --> 00:30:03,360
and

791
00:30:03,360 --> 00:30:04,640
there's lots of things that were not

792
00:30:04,640 --> 00:30:06,399
there basically but

793
00:30:06,399 --> 00:30:08,559
what was there is actually there was

794
00:30:08,559 --> 00:30:10,640
actually automatic destinations and i

795
00:30:10,640 --> 00:30:12,399
was digging into automatic decisions for

796
00:30:12,399 --> 00:30:14,640
windows media player where i was able to

797
00:30:14,640 --> 00:30:16,880
see that there were certain

798
00:30:16,880 --> 00:30:18,559
indicative titles

799
00:30:18,559 --> 00:30:21,279
that were suggesting suggesting the

800
00:30:21,279 --> 00:30:23,360
crime of course it's not an evidence

801
00:30:23,360 --> 00:30:25,440
because it's not digitally signed you're

802
00:30:25,440 --> 00:30:27,039
not able to

803
00:30:27,039 --> 00:30:29,919
really assure that that content is what

804
00:30:29,919 --> 00:30:32,880
it is but it is already some kind of an

805
00:30:32,880 --> 00:30:35,840
indication that there is more definitely

806
00:30:35,840 --> 00:30:37,919
to search for and that was also playing

807
00:30:37,919 --> 00:30:40,000
a crucial role in the case because you

808
00:30:40,000 --> 00:30:41,840
were able to see that

809
00:30:41,840 --> 00:30:43,440
uh this is how this mechanism works

810
00:30:43,440 --> 00:30:45,279
within the windows windows media player

811
00:30:45,279 --> 00:30:47,360
these were the titles that were open in

812
00:30:47,360 --> 00:30:48,799
connection with the data chunks that

813
00:30:48,799 --> 00:30:50,880
were able we were able to find on a disk

814
00:30:50,880 --> 00:30:52,320
and so on yeah so there's plenty of

815
00:30:52,320 --> 00:30:55,600
things um behind that that are allowing

816
00:30:55,600 --> 00:30:57,360
us to

817
00:30:57,360 --> 00:31:00,000
to trace and search for a little bit

818
00:31:00,000 --> 00:31:02,480
more information from the drive

819
00:31:02,480 --> 00:31:05,360
okay so what else is there well

820
00:31:05,360 --> 00:31:07,600
basically within the

821
00:31:07,600 --> 00:31:10,159
disk we can find of course more

822
00:31:10,159 --> 00:31:11,840
information like windows indexing

823
00:31:11,840 --> 00:31:14,480
servers you can also find deleted files

824
00:31:14,480 --> 00:31:16,399
that you are able to recover you can

825
00:31:16,399 --> 00:31:19,919
also uh play with the metadata and be

826
00:31:19,919 --> 00:31:22,240
able for example to a search within the

827
00:31:22,240 --> 00:31:24,320
usn journal whether the metadata has

828
00:31:24,320 --> 00:31:26,000
been changed or not

829
00:31:26,000 --> 00:31:28,159
yet so in general when you've got a file

830
00:31:28,159 --> 00:31:30,720
for example that is a claiming that it

831
00:31:30,720 --> 00:31:33,279
has been let's say created uh three

832
00:31:33,279 --> 00:31:35,840
weeks ago and then you can always verify

833
00:31:35,840 --> 00:31:38,720
that within the fsutil and usn read

834
00:31:38,720 --> 00:31:40,320
journal and then you can see that not

835
00:31:40,320 --> 00:31:41,760
really for this file there was a

836
00:31:41,760 --> 00:31:44,320
metadata being changed so this file

837
00:31:44,320 --> 00:31:46,559
it's really from like one day ago yeah

838
00:31:46,559 --> 00:31:48,159
and so on so we've got these kind of

839
00:31:48,159 --> 00:31:49,600
possibilities but i would say that

840
00:31:49,600 --> 00:31:51,679
that's quite um

841
00:31:51,679 --> 00:31:53,840
obvious in some sense because it's a

842
00:31:53,840 --> 00:31:54,799
typical

843
00:31:54,799 --> 00:31:56,480
list of steps to do while we're doing

844
00:31:56,480 --> 00:31:58,480
forensics what i would love to show you

845
00:31:58,480 --> 00:32:01,279
is actually quite interesting setup for

846
00:32:01,279 --> 00:32:03,440
something that we call data protection

847
00:32:03,440 --> 00:32:07,039
api and data protection api is actually

848
00:32:07,039 --> 00:32:09,200
a cryptographic platform that we are

849
00:32:09,200 --> 00:32:12,159
able to play with in windows that allows

850
00:32:12,159 --> 00:32:14,799
us to store data

851
00:32:14,799 --> 00:32:16,720
for various users

852
00:32:16,720 --> 00:32:20,159
once of course users decide um decide to

853
00:32:20,159 --> 00:32:22,159
store them so if you've got a situation

854
00:32:22,159 --> 00:32:25,120
that you've got users um that are

855
00:32:25,120 --> 00:32:26,880
for example storing

856
00:32:26,880 --> 00:32:29,519
passwords in the browser and so on that

857
00:32:29,519 --> 00:32:33,120
is exactly that we want to see over here

858
00:32:33,120 --> 00:32:35,760
uh that within such such an approach

859
00:32:35,760 --> 00:32:38,559
you you would be able uh for example as

860
00:32:38,559 --> 00:32:41,120
a hacker to extract particularly to

861
00:32:41,120 --> 00:32:44,080
extract the passwords from uh browsers

862
00:32:44,080 --> 00:32:46,000
of the users but of course everything

863
00:32:46,000 --> 00:32:48,000
has to happen like within the attack

864
00:32:48,000 --> 00:32:50,399
under certain conditions

865
00:32:50,399 --> 00:32:52,640
so if you store a password in a browser

866
00:32:52,640 --> 00:32:54,880
if you store a password in outlook and

867
00:32:54,880 --> 00:32:57,360
so on then these passwords are obviously

868
00:32:57,360 --> 00:33:00,080
when you open outlook or browser in use

869
00:33:00,080 --> 00:33:03,039
by yourself and that is something that

870
00:33:03,039 --> 00:33:05,360
it will be lovely to talk about so data

871
00:33:05,360 --> 00:33:08,320
protection api is cryptographic platform

872
00:33:08,320 --> 00:33:10,720
in windows and you are just using it by

873
00:33:10,720 --> 00:33:13,120
default and i'm not saying at any moment

874
00:33:13,120 --> 00:33:15,600
it's bad it is actually a good solution

875
00:33:15,600 --> 00:33:17,519
but it has certain situation that you

876
00:33:17,519 --> 00:33:19,760
guys need to know about first of all

877
00:33:19,760 --> 00:33:21,840
let's get into the demo so here we've

878
00:33:21,840 --> 00:33:24,080
got a freddy krueger and then freddie is

879
00:33:24,080 --> 00:33:25,519
trying to login with the password

880
00:33:25,519 --> 00:33:27,440
password okay so

881
00:33:27,440 --> 00:33:29,120
that's it that's freddie's password

882
00:33:29,120 --> 00:33:31,200
freddie has access to the domain so we

883
00:33:31,200 --> 00:33:32,960
are actually logging on to the domain

884
00:33:32,960 --> 00:33:34,720
freddy is not offline

885
00:33:34,720 --> 00:33:36,880
so this is not a cache logon data login

886
00:33:36,880 --> 00:33:39,120
and so on so we just we just log in

887
00:33:39,120 --> 00:33:41,279
okay uh freddie by the way has no access

888
00:33:41,279 --> 00:33:44,880
here to the internet so um that's okay

889
00:33:44,880 --> 00:33:47,440
only yeah exactly that's why so only to

890
00:33:47,440 --> 00:33:50,000
the internal infrastructure

891
00:33:50,000 --> 00:33:52,640
and uh over here we've got a situation

892
00:33:52,640 --> 00:33:56,320
where we are able to um eventually um

893
00:33:56,320 --> 00:33:58,559
search for the password that ready

894
00:33:58,559 --> 00:34:00,799
freddie has stored in the browser so

895
00:34:00,799 --> 00:34:03,039
that's chrome pass and here you are able

896
00:34:03,039 --> 00:34:04,399
to see that we've got a password

897
00:34:04,399 --> 00:34:07,200
password like this and why we can open

898
00:34:07,200 --> 00:34:09,599
the on extract the password from a

899
00:34:09,599 --> 00:34:12,719
google chrome um in the chrome pass

900
00:34:12,719 --> 00:34:14,639
because it's this app is running as

901
00:34:14,639 --> 00:34:16,000
ourselves

902
00:34:16,000 --> 00:34:17,440
this is the rule that we should

903
00:34:17,440 --> 00:34:19,119
definitely remember that if you run

904
00:34:19,119 --> 00:34:21,440
things as yourself you get access to all

905
00:34:21,440 --> 00:34:22,639
the things that obviously you have

906
00:34:22,639 --> 00:34:23,760
stored

907
00:34:23,760 --> 00:34:25,280
so if the hacker

908
00:34:25,280 --> 00:34:28,639
within the phishing attack is running

909
00:34:28,639 --> 00:34:30,239
its code

910
00:34:30,239 --> 00:34:32,719
as that user so then we got access to

911
00:34:32,719 --> 00:34:34,239
lots of credentials that potentially

912
00:34:34,239 --> 00:34:37,040
user might have stored in a desktop

913
00:34:37,040 --> 00:34:39,119
that's why within the organizations what

914
00:34:39,119 --> 00:34:40,719
we always recommend is the

915
00:34:40,719 --> 00:34:42,719
implementation of the password managers

916
00:34:42,719 --> 00:34:45,040
which sounds like a default choice right

917
00:34:45,040 --> 00:34:47,679
now of course but not every organization

918
00:34:47,679 --> 00:34:49,679
is actually there yet

919
00:34:49,679 --> 00:34:52,480
so here chrome pass okay so yeah we if

920
00:34:52,480 --> 00:34:54,159
i'm freddie i'm logging with the

921
00:34:54,159 --> 00:34:56,399
password password i'm able to see the

922
00:34:56,399 --> 00:34:58,960
stuff that i've stored in the browser

923
00:34:58,960 --> 00:35:01,520
now question would be a different thing

924
00:35:01,520 --> 00:35:04,000
under which condition i'm able to see

925
00:35:04,000 --> 00:35:05,839
freddie's credentials freddy's password

926
00:35:05,839 --> 00:35:08,880
stored in a browser if i'm not ready

927
00:35:08,880 --> 00:35:10,320
an answer to this question is very

928
00:35:10,320 --> 00:35:12,480
simple i have to know of course for this

929
00:35:12,480 --> 00:35:15,119
password so so then i'm ready but what

930
00:35:15,119 --> 00:35:16,960
is the other option here the other

931
00:35:16,960 --> 00:35:18,640
option is that if the freddie is a

932
00:35:18,640 --> 00:35:20,079
domain user

933
00:35:20,079 --> 00:35:22,880
then i have to have a certain

934
00:35:22,880 --> 00:35:25,040
certificate from the domain to be able

935
00:35:25,040 --> 00:35:27,280
to read freddy's passwords and this is

936
00:35:27,280 --> 00:35:28,480
something that i would love to show you

937
00:35:28,480 --> 00:35:32,320
because when the domain is under attack

938
00:35:32,320 --> 00:35:34,480
and we've got customers that

939
00:35:34,480 --> 00:35:36,400
they were completely smashed and hackers

940
00:35:36,400 --> 00:35:38,720
managed to be domain admins and so on

941
00:35:38,720 --> 00:35:42,000
then you cannot by all means regain

942
00:35:42,000 --> 00:35:44,480
trust to the infrastructure because of

943
00:35:44,480 --> 00:35:46,079
this simple thing that i would like to

944
00:35:46,079 --> 00:35:47,440
show you of course you can have a great

945
00:35:47,440 --> 00:35:50,960
monitoring and so on but there is always

946
00:35:50,960 --> 00:35:53,119
the possibility to get access to the

947
00:35:53,119 --> 00:35:54,880
credentials of all of the users in the

948
00:35:54,880 --> 00:35:56,480
infrastructure if you're going to get

949
00:35:56,480 --> 00:35:58,640
that certificate so first of all let me

950
00:35:58,640 --> 00:36:01,440
cause a situation

951
00:36:01,440 --> 00:36:04,079
where we are not acting as freddy we're

952
00:36:04,079 --> 00:36:06,640
going to be acting as someone else or

953
00:36:06,640 --> 00:36:10,000
or we're going to be acting here as

954
00:36:10,000 --> 00:36:12,320
maybe freddy but we're gonna present a

955
00:36:12,320 --> 00:36:14,160
different password okay so this is

956
00:36:14,160 --> 00:36:15,839
basically to show you that if we do not

957
00:36:15,839 --> 00:36:17,680
know the password of freddie the correct

958
00:36:17,680 --> 00:36:20,400
one so the password password then we

959
00:36:20,400 --> 00:36:22,079
will not be able to get access to

960
00:36:22,079 --> 00:36:23,200
freddy's

961
00:36:23,200 --> 00:36:24,640
secrets

962
00:36:24,640 --> 00:36:26,400
so what i'm going to do in order to

963
00:36:26,400 --> 00:36:28,160
achieve this situation i'm going to

964
00:36:28,160 --> 00:36:31,359
simply um in this place disconnect this

965
00:36:31,359 --> 00:36:32,960
machine from the

966
00:36:32,960 --> 00:36:35,119
network totally

967
00:36:35,119 --> 00:36:36,720
and i'm going to log in with the cache

968
00:36:36,720 --> 00:36:40,160
logon data okay but first let's update

969
00:36:40,160 --> 00:36:41,760
cash logon data

970
00:36:41,760 --> 00:36:43,839
in order to be able to do that some

971
00:36:43,839 --> 00:36:46,160
people call it cash credentials uh no

972
00:36:46,160 --> 00:36:48,400
that's a very bad thing to call it uh

973
00:36:48,400 --> 00:36:50,400
because these are not credentials we

974
00:36:50,400 --> 00:36:52,160
cannot log on with them so please don't

975
00:36:52,160 --> 00:36:54,079
call them credentials and i will explain

976
00:36:54,079 --> 00:36:55,599
in a moment why

977
00:36:55,599 --> 00:36:57,839
so here we're gonna get into the uh d

978
00:36:57,839 --> 00:37:00,079
drive and um

979
00:37:00,079 --> 00:37:02,079
let's go to the cq tools

980
00:37:02,079 --> 00:37:04,320
let's go to the kiwi secure edition and

981
00:37:04,320 --> 00:37:06,480
over there we've got mimi cuts and over

982
00:37:06,480 --> 00:37:08,320
here we all know mimikatz but this is

983
00:37:08,320 --> 00:37:10,480
actually our secures edition

984
00:37:10,480 --> 00:37:12,400
originally written by benjamin delp of

985
00:37:12,400 --> 00:37:15,040
course we have modified um that with the

986
00:37:15,040 --> 00:37:16,240
module that

987
00:37:16,240 --> 00:37:19,119
um allows us actually to do that plus

988
00:37:19,119 --> 00:37:20,880
this version is not recognized by

989
00:37:20,880 --> 00:37:23,599
antivirus so it's not too bad

990
00:37:23,599 --> 00:37:25,119
so we're going to do to we're going to

991
00:37:25,119 --> 00:37:28,079
get into the lsa dump

992
00:37:28,079 --> 00:37:29,520
and let's say dump

993
00:37:29,520 --> 00:37:32,079
and then cache

994
00:37:32,079 --> 00:37:33,280
and then we're going to overwrite the

995
00:37:33,280 --> 00:37:34,800
cache logon data so it's a windows

996
00:37:34,800 --> 00:37:37,359
system32 config i have to type the whole

997
00:37:37,359 --> 00:37:41,200
thing system and then windows system

998
00:37:41,200 --> 00:37:44,240
32 config security because this is where

999
00:37:44,240 --> 00:37:47,359
the cache logon data is slash kiwi

1000
00:37:47,359 --> 00:37:50,320
and eventually we are overriding at that

1001
00:37:50,320 --> 00:37:51,200
point

1002
00:37:51,200 --> 00:37:53,839
cash log on data so lsa dump cash and

1003
00:37:53,839 --> 00:37:56,000
then we've got a system and security

1004
00:37:56,000 --> 00:37:58,000
system for the boot key security because

1005
00:37:58,000 --> 00:37:59,839
this is where the cash login data is

1006
00:37:59,839 --> 00:38:02,160
kiwi to overwrite it done

1007
00:38:02,160 --> 00:38:05,040
so the next part we are just rebooting

1008
00:38:05,040 --> 00:38:07,359
now using this opportunity i'm gonna

1009
00:38:07,359 --> 00:38:10,400
explain what the cache logon data is so

1010
00:38:10,400 --> 00:38:12,680
cache logon data it's nothing but

1011
00:38:12,680 --> 00:38:15,359
msdcc2 that's how we call it and it's a

1012
00:38:15,359 --> 00:38:17,440
result of a function which we called

1013
00:38:17,440 --> 00:38:19,680
pbkdf2

1014
00:38:19,680 --> 00:38:22,079
and part of that function is actually

1015
00:38:22,079 --> 00:38:24,880
username um here we go

1016
00:38:24,880 --> 00:38:26,960
it is hmac

1017
00:38:26,960 --> 00:38:28,880
schwa1

1018
00:38:28,880 --> 00:38:30,560
and so let's say it's like a random

1019
00:38:30,560 --> 00:38:34,160
value it's working on 10 240 iterations

1020
00:38:34,160 --> 00:38:37,040
on 16 blocks and it's leveraging as well

1021
00:38:37,040 --> 00:38:40,000
the dcc one value which i have to

1022
00:38:40,000 --> 00:38:41,119
explain

1023
00:38:41,119 --> 00:38:43,119
so this is the one value it's nothing

1024
00:38:43,119 --> 00:38:46,640
but md4 on the top of the username

1025
00:38:46,640 --> 00:38:49,200
joined with the md4

1026
00:38:49,200 --> 00:38:51,280
on the top of the user password

1027
00:38:51,280 --> 00:38:54,000
so this is like two dimensions that we

1028
00:38:54,000 --> 00:38:55,920
are struggling with in order to get

1029
00:38:55,920 --> 00:38:57,839
access to the user's password can you

1030
00:38:57,839 --> 00:39:00,400
brute force it can you crack it by using

1031
00:39:00,400 --> 00:39:03,359
the rainbow tables for dcc one of course

1032
00:39:03,359 --> 00:39:06,000
of course but what about dcc2 it's a

1033
00:39:06,000 --> 00:39:08,560
quite a complex value and dcc2 by the

1034
00:39:08,560 --> 00:39:10,960
way is used by microsoft essence windows

1035
00:39:10,960 --> 00:39:13,920
vista including windows vista so uh it's

1036
00:39:13,920 --> 00:39:15,520
a pretty good value that's stored within

1037
00:39:15,520 --> 00:39:17,680
the registry that you cannot log on with

1038
00:39:17,680 --> 00:39:19,920
so that's why we're not calling it cash

1039
00:39:19,920 --> 00:39:21,839
credentials we actually call it cash

1040
00:39:21,839 --> 00:39:24,720
logon data so we only compare with it

1041
00:39:24,720 --> 00:39:27,200
why and how let me show you so here are

1042
00:39:27,200 --> 00:39:30,240
mimikatz is going to be our password but

1043
00:39:30,240 --> 00:39:32,160
first let's try password password that

1044
00:39:32,160 --> 00:39:33,520
we had

1045
00:39:33,520 --> 00:39:35,920
no doesn't work and we are comparing

1046
00:39:35,920 --> 00:39:37,520
right now with the value that we stored

1047
00:39:37,520 --> 00:39:39,520
within a registry within the mimikatz

1048
00:39:39,520 --> 00:39:41,680
when we were um offline you could also

1049
00:39:41,680 --> 00:39:43,760
do it online by the way so both of the

1050
00:39:43,760 --> 00:39:46,400
ways would work nimi cuts enter we're

1051
00:39:46,400 --> 00:39:47,520
logging in

1052
00:39:47,520 --> 00:39:50,079
so now our job is going to be to check

1053
00:39:50,079 --> 00:39:52,960
if we do have access to

1054
00:39:52,960 --> 00:39:55,599
the password while we log in with a

1055
00:39:55,599 --> 00:39:57,280
different password of a user for the

1056
00:39:57,280 --> 00:40:00,560
domain account and the chrome pass

1057
00:40:00,560 --> 00:40:03,920
is trying to decrypt the master key that

1058
00:40:03,920 --> 00:40:05,599
is responsible for protecting that

1059
00:40:05,599 --> 00:40:08,560
password in google chrome with the

1060
00:40:08,560 --> 00:40:11,280
current passwords hash and it cannot

1061
00:40:11,280 --> 00:40:12,960
because that master key is encrypted

1062
00:40:12,960 --> 00:40:14,960
with the previous password hash actually

1063
00:40:14,960 --> 00:40:17,839
with the md4 of the user's password

1064
00:40:17,839 --> 00:40:19,839
so how we are able to get access to this

1065
00:40:19,839 --> 00:40:23,040
password haha and here is the thing

1066
00:40:23,040 --> 00:40:24,640
each of you guys

1067
00:40:24,640 --> 00:40:27,119
you've got in your domain very

1068
00:40:27,119 --> 00:40:28,800
interesting thing

1069
00:40:28,800 --> 00:40:31,680
and that's this certificate

1070
00:40:31,680 --> 00:40:33,200
that i would love to i would love to

1071
00:40:33,200 --> 00:40:34,160
show you

1072
00:40:34,160 --> 00:40:36,240
and that certificate let's make it a

1073
00:40:36,240 --> 00:40:39,119
full screen here is actually something

1074
00:40:39,119 --> 00:40:42,000
that we are able to extract

1075
00:40:42,000 --> 00:40:44,079
from that from the domain

1076
00:40:44,079 --> 00:40:46,160
so over there i'm going to go to

1077
00:40:46,160 --> 00:40:47,119
tools

1078
00:40:47,119 --> 00:40:51,040
and then cqdp api export uh export pfx

1079
00:40:51,040 --> 00:40:53,599
chrome id and over there there is a cq

1080
00:40:53,599 --> 00:40:56,319
elsa secrets dumper where we specify

1081
00:40:56,319 --> 00:40:59,760
file exported pfx we have by the way

1082
00:40:59,760 --> 00:41:01,920
reverse engineered fully data protection

1083
00:41:01,920 --> 00:41:04,480
api uh absolutely not bragging about it

1084
00:41:04,480 --> 00:41:06,400
but as far as we know we are the first

1085
00:41:06,400 --> 00:41:08,640
and the only team who did that so to put

1086
00:41:08,640 --> 00:41:12,240
dp api into pieces um and we wrote over

1087
00:41:12,240 --> 00:41:14,800
40 tools to support that so we are

1088
00:41:14,800 --> 00:41:17,280
always sharing them with you also you

1089
00:41:17,280 --> 00:41:18,640
will find a link at the end of this

1090
00:41:18,640 --> 00:41:21,119
presentation including this tool

1091
00:41:21,119 --> 00:41:23,359
and here we have exported a pfx file

1092
00:41:23,359 --> 00:41:26,480
which is software well in ntds.did but

1093
00:41:26,480 --> 00:41:28,720
not really logically seen as pfx it's

1094
00:41:28,720 --> 00:41:30,240
just like a blob

1095
00:41:30,240 --> 00:41:32,079
so let's have a look into this one so

1096
00:41:32,079 --> 00:41:35,520
we're gonna export it pfx we can import

1097
00:41:35,520 --> 00:41:38,079
it next next password it's going to be

1098
00:41:38,079 --> 00:41:40,880
secure as you see here we go

1099
00:41:40,880 --> 00:41:41,760
next

1100
00:41:41,760 --> 00:41:43,200
next next

1101
00:41:43,200 --> 00:41:45,040
okay and the next part we are able to

1102
00:41:45,040 --> 00:41:46,839
see is the cert

1103
00:41:46,839 --> 00:41:50,400
mgr.msc and then personal certificates

1104
00:41:50,400 --> 00:41:52,079
that's the certificate that each of you

1105
00:41:52,079 --> 00:41:54,079
got in the domain so it's issued by

1106
00:41:54,079 --> 00:41:56,560
nobody it should buy nobody to nobody

1107
00:41:56,560 --> 00:41:57,839
buy nobody

1108
00:41:57,839 --> 00:42:00,160
it's already expired you cannot renew it

1109
00:42:00,160 --> 00:42:02,160
there's nothing you can do about it and

1110
00:42:02,160 --> 00:42:04,560
when it leaks you can renew that too so

1111
00:42:04,560 --> 00:42:06,480
when it leaks you get a big problem

1112
00:42:06,480 --> 00:42:08,720
because then it leaks forever

1113
00:42:08,720 --> 00:42:10,960
so then it when it leaks

1114
00:42:10,960 --> 00:42:12,640
what does it mean let's have a look in

1115
00:42:12,640 --> 00:42:15,680
here it means that at that point and

1116
00:42:15,680 --> 00:42:18,560
let's start the console you are able to

1117
00:42:18,560 --> 00:42:20,960
get access to the user secrets across

1118
00:42:20,960 --> 00:42:22,800
the whole domain because this pfx

1119
00:42:22,800 --> 00:42:25,520
decrypts secrets of every single user in

1120
00:42:25,520 --> 00:42:27,760
the domain so let's see how we can

1121
00:42:27,760 --> 00:42:30,000
achieve this first of all i'm going to

1122
00:42:30,000 --> 00:42:32,560
go to the dp api toolkit and i'm going

1123
00:42:32,560 --> 00:42:35,599
to search for the master key that is

1124
00:42:35,599 --> 00:42:37,359
responsible for google chrome for the

1125
00:42:37,359 --> 00:42:39,119
password protection so it's going to be

1126
00:42:39,119 --> 00:42:41,200
the directory see

1127
00:42:41,200 --> 00:42:42,560
windows

1128
00:42:42,560 --> 00:42:44,400
not in the windows it's gonna be users

1129
00:42:44,400 --> 00:42:48,240
of course users freddy krueger updater

1130
00:42:48,240 --> 00:42:51,040
local um local profile over there and

1131
00:42:51,040 --> 00:42:53,119
then we're gonna go to the google and

1132
00:42:53,119 --> 00:42:54,880
we're gonna go to from here we go we're

1133
00:42:54,880 --> 00:42:57,839
gonna do the recursive search output

1134
00:42:57,839 --> 00:43:00,000
to the folder c ah let's just use the

1135
00:43:00,000 --> 00:43:02,319
default cq tools and then we're gonna

1136
00:43:02,319 --> 00:43:05,359
stream it to dp api dot txt enter it's

1137
00:43:05,359 --> 00:43:07,920
gonna take us approximately 20 seconds

1138
00:43:07,920 --> 00:43:09,119
to do it

1139
00:43:09,119 --> 00:43:12,800
so if we go to the dpi api txt then

1140
00:43:12,800 --> 00:43:14,720
immediately we see

1141
00:43:14,720 --> 00:43:18,000
the master key identifier for the google

1142
00:43:18,000 --> 00:43:20,400
chrome and that's b55

1143
00:43:20,400 --> 00:43:22,079
by the way google chrome underneath uses

1144
00:43:22,079 --> 00:43:24,400
schwann and triple des

1145
00:43:24,400 --> 00:43:25,359
okay

1146
00:43:25,359 --> 00:43:28,079
so b55

1147
00:43:28,079 --> 00:43:29,839
is the one we are looking for

1148
00:43:29,839 --> 00:43:31,359
so um

1149
00:43:31,359 --> 00:43:33,520
we can get into the user's profile so

1150
00:43:33,520 --> 00:43:36,640
it's gonna be percent update a percent

1151
00:43:36,640 --> 00:43:37,920
and then

1152
00:43:37,920 --> 00:43:41,040
we go to microsoft protect

1153
00:43:41,040 --> 00:43:44,319
syd these files by the way are hidden

1154
00:43:44,319 --> 00:43:46,400
and also system files so you have to

1155
00:43:46,400 --> 00:43:47,680
show them

1156
00:43:47,680 --> 00:43:49,599
you have to you have to uncover them and

1157
00:43:49,599 --> 00:43:52,240
then in here that's b55 okay so shift

1158
00:43:52,240 --> 00:43:53,440
right click

1159
00:43:53,440 --> 00:43:55,119
copy as path

1160
00:43:55,119 --> 00:43:56,560
and then over there we're going to be

1161
00:43:56,560 --> 00:43:59,280
playing with that decryption so please

1162
00:43:59,280 --> 00:44:01,359
have a look first of all we're going to

1163
00:44:01,359 --> 00:44:03,839
use here the cq

1164
00:44:03,839 --> 00:44:07,440
hash calc mimikatz one that's my current

1165
00:44:07,440 --> 00:44:09,520
password hash so it's an md4 that

1166
00:44:09,520 --> 00:44:12,319
matters and now we're using the cq

1167
00:44:12,319 --> 00:44:14,000
master key 80

1168
00:44:14,000 --> 00:44:16,720
file that's this b55

1169
00:44:16,720 --> 00:44:20,000
we've got a over there that old pfx so

1170
00:44:20,000 --> 00:44:21,200
that's the one that we got from the

1171
00:44:21,200 --> 00:44:24,160
domain and then we've got over there the

1172
00:44:24,160 --> 00:44:25,359
new hash

1173
00:44:25,359 --> 00:44:27,680
which i can copy now

1174
00:44:27,680 --> 00:44:30,880
and paste so new hash and we got it

1175
00:44:30,880 --> 00:44:31,920
awesome

1176
00:44:31,920 --> 00:44:34,160
perfect so now what happened is that

1177
00:44:34,160 --> 00:44:36,079
we've got a new master key generated

1178
00:44:36,079 --> 00:44:38,160
that's this 80 modified so we're going

1179
00:44:38,160 --> 00:44:40,000
to take this old guy

1180
00:44:40,000 --> 00:44:42,800
and then rename it good

1181
00:44:42,800 --> 00:44:45,280
and then this 80 modified

1182
00:44:45,280 --> 00:44:47,200
and then we're going to name it like

1183
00:44:47,200 --> 00:44:48,400
this

1184
00:44:48,400 --> 00:44:50,319
yeah so here we go this has a blank

1185
00:44:50,319 --> 00:44:51,920
console so the only thing we will need

1186
00:44:51,920 --> 00:44:54,400
to do is to give it an attribute of

1187
00:44:54,400 --> 00:44:56,960
system and hidden enter

1188
00:44:56,960 --> 00:44:58,960
we got it enter

1189
00:44:58,960 --> 00:45:00,400
and then over there

1190
00:45:00,400 --> 00:45:03,440
within the moment of of a second here

1191
00:45:03,440 --> 00:45:04,800
you are able to see that we've got a

1192
00:45:04,800 --> 00:45:07,119
password to the user

1193
00:45:07,119 --> 00:45:08,800
that by the way certificate gives you

1194
00:45:08,800 --> 00:45:10,720
access to every user password in a

1195
00:45:10,720 --> 00:45:12,640
domain so that's actually pretty serious

1196
00:45:12,640 --> 00:45:15,839
plus what we need to do is to review the

1197
00:45:15,839 --> 00:45:17,040
permissions for the domain of

1198
00:45:17,040 --> 00:45:19,119
replicating directory changes and

1199
00:45:19,119 --> 00:45:21,200
replicating directory changes all

1200
00:45:21,200 --> 00:45:22,720
because these are also the ones that are

1201
00:45:22,720 --> 00:45:25,280
allowing us to extract that kind of data

1202
00:45:25,280 --> 00:45:27,200
so the question is

1203
00:45:27,200 --> 00:45:30,720
how we are able to find or to understand

1204
00:45:30,720 --> 00:45:32,960
hackers activities an answer is very

1205
00:45:32,960 --> 00:45:35,040
straightforward only by

1206
00:45:35,040 --> 00:45:37,839
knowing more so the more we know how

1207
00:45:37,839 --> 00:45:40,160
windows internals linux internals work

1208
00:45:40,160 --> 00:45:42,480
the more we understand the dependencies

1209
00:45:42,480 --> 00:45:45,040
in between various mechanisms in

1210
00:45:45,040 --> 00:45:46,720
operating system like for example

1211
00:45:46,720 --> 00:45:49,680
finding this even block service svc host

1212
00:45:49,680 --> 00:45:52,160
with univt so these are the things that

1213
00:45:52,160 --> 00:45:53,680
we are looking at or here data

1214
00:45:53,680 --> 00:45:55,280
protection api we are wondering could

1215
00:45:55,280 --> 00:45:57,520
hacker have access to credentials of

1216
00:45:57,520 --> 00:46:00,560
that user yes by for example stating the

1217
00:46:00,560 --> 00:46:02,800
profile information and then

1218
00:46:02,800 --> 00:46:04,800
decrypting that password by leveraging

1219
00:46:04,800 --> 00:46:06,880
that domain certificate so there are so

1220
00:46:06,880 --> 00:46:08,800
many things that can happen within the

1221
00:46:08,800 --> 00:46:09,760
domain

1222
00:46:09,760 --> 00:46:10,960
and within the infrastructure that

1223
00:46:10,960 --> 00:46:13,599
sometimes and that's our experience we

1224
00:46:13,599 --> 00:46:15,839
might not be aware of because they are

1225
00:46:15,839 --> 00:46:18,319
not an obvious things to know in

1226
00:46:18,319 --> 00:46:20,480
forensics forensics it's one of these

1227
00:46:20,480 --> 00:46:21,760
subjects that are definitely worth

1228
00:46:21,760 --> 00:46:24,160
stepping into especially in the current

1229
00:46:24,160 --> 00:46:27,040
times where attacks are on the rise and

1230
00:46:27,040 --> 00:46:28,560
within the covet

1231
00:46:28,560 --> 00:46:31,680
context they as far as we see don't plan

1232
00:46:31,680 --> 00:46:34,480
to stop here is the link to the tools so

1233
00:46:34,480 --> 00:46:36,440
please download them

1234
00:46:36,440 --> 00:46:38,800
resourcesecureacademy.com tools and of

1235
00:46:38,800 --> 00:46:42,079
course do not forget to check our blog

1236
00:46:42,079 --> 00:46:44,400
um where we share different case studies

1237
00:46:44,400 --> 00:46:47,440
stories tools from our experiences from

1238
00:46:47,440 --> 00:46:49,280
our projects make sure that obviously

1239
00:46:49,280 --> 00:46:52,000
you're gonna join our online trainings

1240
00:46:52,000 --> 00:46:54,960
uh so here we go uh we we do run the

1241
00:46:54,960 --> 00:46:57,040
live virtual classes where we teach

1242
00:46:57,040 --> 00:46:59,599
advanced forensics and also advanced

1243
00:46:59,599 --> 00:47:01,760
penetration testing

1244
00:47:01,760 --> 00:47:04,079
within our team's knowledge and teams

1245
00:47:04,079 --> 00:47:06,160
tools as well and so on so

1246
00:47:06,160 --> 00:47:08,319
absolutely uh please verify check on

1247
00:47:08,319 --> 00:47:10,240
that one and if you guys have any

1248
00:47:10,240 --> 00:47:12,400
questions please do not hesitate to

1249
00:47:12,400 --> 00:47:14,359
contact me at paula

1250
00:47:14,359 --> 00:47:16,560
secure.us thank you so much for

1251
00:47:16,560 --> 00:47:21,880
listening and as always have a great day

