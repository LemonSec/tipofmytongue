1
00:00:03,280 --> 00:00:04,640
hello

2
00:00:04,640 --> 00:00:06,880
cool

3
00:00:06,960 --> 00:00:08,320
it's really pleasure to be back in

4
00:00:08,320 --> 00:00:09,840
hacking paris after

5
00:00:09,840 --> 00:00:11,920
a few years

6
00:00:11,920 --> 00:00:13,599
today i'm going to talk about being

7
00:00:13,599 --> 00:00:15,679
automatic try attack basically it's

8
00:00:15,679 --> 00:00:18,400
about how we can brute force

9
00:00:18,400 --> 00:00:20,400
all the pins and a emv cards for the

10
00:00:20,400 --> 00:00:22,800
banking specifically

11
00:00:22,800 --> 00:00:24,400
it's about the ipad implementation on

12
00:00:24,400 --> 00:00:26,640
inadequate implementation that we found

13
00:00:26,640 --> 00:00:28,840
in the specific bank in the united

14
00:00:28,840 --> 00:00:31,359
states so

15
00:00:31,359 --> 00:00:33,280
who is alvaro mendoza i'm director of

16
00:00:33,280 --> 00:00:35,760
research and development in miami sq

17
00:00:35,760 --> 00:00:37,920
i have been talking about samsung pay

18
00:00:37,920 --> 00:00:39,520
will pay

19
00:00:39,520 --> 00:00:41,840
wells fargo bank some different issues

20
00:00:41,840 --> 00:00:44,399
regarding digital wallets also

21
00:00:44,399 --> 00:00:46,079
exploiting all my extra information with

22
00:00:46,079 --> 00:00:47,600
new technology implementing bluetooth

23
00:00:47,600 --> 00:00:49,840
technologies

24
00:00:49,840 --> 00:00:52,239
i have been talking about nsc payments

25
00:00:52,239 --> 00:00:54,640
about relay and replay attacks

26
00:00:54,640 --> 00:00:56,079
i'm part of the osceola offensive

27
00:00:56,079 --> 00:00:58,640
security team and i'm

28
00:00:58,640 --> 00:01:00,160
i contribute to the other fruit and

29
00:01:00,160 --> 00:01:02,399
prosmart repositories which is basically

30
00:01:02,399 --> 00:01:04,479
for the community regarding net of ideo

31
00:01:04,479 --> 00:01:06,159
and nfc technologies

32
00:01:06,159 --> 00:01:09,280
and also i love i love hardware

33
00:01:09,280 --> 00:01:12,400
when i was when i was a kid uh i don't

34
00:01:12,400 --> 00:01:15,840
know you you hear about the terminator

35
00:01:15,840 --> 00:01:17,439
movie when

36
00:01:17,439 --> 00:01:19,680
john connor was brute forcing some pins

37
00:01:19,680 --> 00:01:23,280
to get some cash from the atm

38
00:01:23,280 --> 00:01:24,799
if you don't remember i want to show you

39
00:01:24,799 --> 00:01:26,880
this small video when he basically

40
00:01:26,880 --> 00:01:29,360
implements a device

41
00:01:29,360 --> 00:01:32,079
and using a small pocket computer

42
00:01:32,079 --> 00:01:34,159
and start brute forcing that specific

43
00:01:34,159 --> 00:01:35,920
account

44
00:01:35,920 --> 00:01:38,159
i have that memory in one of the corners

45
00:01:38,159 --> 00:01:40,880
of my my all the time when i was

46
00:01:40,880 --> 00:01:43,040
researching about payment systems and i

47
00:01:43,040 --> 00:01:45,040
was thinking probably one day i'll be

48
00:01:45,040 --> 00:01:47,280
able to do something very similar

49
00:01:47,280 --> 00:01:49,280
and only to have the money

50
00:01:49,280 --> 00:01:51,920
of course it's going to be the main part

51
00:01:51,920 --> 00:01:54,560
but to have that kind of smile that john

52
00:01:54,560 --> 00:01:56,719
connor has in this video

53
00:01:56,719 --> 00:01:58,479
so uh with this

54
00:01:58,479 --> 00:02:00,719
this idea i'm going to introduce this

55
00:02:00,719 --> 00:02:02,560
this topic

56
00:02:02,560 --> 00:02:04,560
so basically what is the peanut attack

57
00:02:04,560 --> 00:02:07,040
or what is how it looks like

58
00:02:07,040 --> 00:02:10,000
when you're implementing this type of

59
00:02:10,000 --> 00:02:12,480
technologies

60
00:02:12,480 --> 00:02:14,239
so we're going to have an agenda to have

61
00:02:14,239 --> 00:02:15,680
an introduction to a terminology that

62
00:02:15,680 --> 00:02:17,280
we're going to talk about also about

63
00:02:17,280 --> 00:02:19,520
what is the emv transaction flow how it

64
00:02:19,520 --> 00:02:21,360
goes for example from the terminal to

65
00:02:21,360 --> 00:02:22,800
the back end of the the backing

66
00:02:22,800 --> 00:02:25,599
transaction of the user of the card

67
00:02:25,599 --> 00:02:26,959
we're going to talk about inadequate

68
00:02:26,959 --> 00:02:28,480
implementations which is basically what

69
00:02:28,480 --> 00:02:30,400
is the issue in this and this specific

70
00:02:30,400 --> 00:02:33,440
track is not a it's not a vulnerability

71
00:02:33,440 --> 00:02:35,599
because they have all these policies or

72
00:02:35,599 --> 00:02:36,560
resources

73
00:02:36,560 --> 00:02:38,319
they need to apply that specific

74
00:02:38,319 --> 00:02:39,680
implementation

75
00:02:39,680 --> 00:02:41,200
we're going to have a demo and we're

76
00:02:41,200 --> 00:02:42,879
going to have some conclusions regarding

77
00:02:42,879 --> 00:02:45,519
this this presentation

78
00:02:45,519 --> 00:02:48,319
about the terminology we have ce for

79
00:02:48,319 --> 00:02:50,239
secure element basically secure element

80
00:02:50,239 --> 00:02:53,040
inside of a bank card is a small chip

81
00:02:53,040 --> 00:02:55,120
that validates the transaction

82
00:02:55,120 --> 00:02:56,800
implementing cryptograms basically they

83
00:02:56,800 --> 00:02:57,760
are a

84
00:02:57,760 --> 00:02:59,920
certificate inside of the card

85
00:02:59,920 --> 00:03:01,440
when the terminal is making a

86
00:03:01,440 --> 00:03:03,040
transaction this secure element is going

87
00:03:03,040 --> 00:03:03,920
to

88
00:03:03,920 --> 00:03:06,560
use this certificate to make the

89
00:03:06,560 --> 00:03:08,640
verification of the transaction

90
00:03:08,640 --> 00:03:11,040
cvm is for calculation verification

91
00:03:11,040 --> 00:03:13,840
method basically what is that is like

92
00:03:13,840 --> 00:03:15,920
when you are using the terminal you can

93
00:03:15,920 --> 00:03:17,120
use your pin

94
00:03:17,120 --> 00:03:19,280
to to verify the transaction or you can

95
00:03:19,280 --> 00:03:21,040
use a signature for example in united

96
00:03:21,040 --> 00:03:23,519
states we use a lot of signature to do

97
00:03:23,519 --> 00:03:24,319
the

98
00:03:24,319 --> 00:03:25,840
verification

99
00:03:25,840 --> 00:03:28,480
the pdu basically is how the car

100
00:03:28,480 --> 00:03:30,080
communicates with the terminal when you

101
00:03:30,080 --> 00:03:32,159
insert it in the terminal basically is

102
00:03:32,159 --> 00:03:33,920
the protocol when they start sending

103
00:03:33,920 --> 00:03:36,400
commands and the car sending back the

104
00:03:36,400 --> 00:03:38,400
responses

105
00:03:38,400 --> 00:03:40,879
just to clarify the apdu it's not

106
00:03:40,879 --> 00:03:44,000
encrypted that's why we can see i always

107
00:03:44,000 --> 00:03:45,920
need the traffic between the car

108
00:03:45,920 --> 00:03:48,879
and the terminal

109
00:03:49,840 --> 00:03:52,640
also icc is basically integrated circuit

110
00:03:52,640 --> 00:03:56,159
car basically how how it's presented the

111
00:03:56,159 --> 00:03:59,200
prc spin retry counter basically every

112
00:03:59,200 --> 00:04:02,560
car for the banking uh they have this

113
00:04:02,560 --> 00:04:04,239
pin retry counter

114
00:04:04,239 --> 00:04:06,000
what it does is like for example you

115
00:04:06,000 --> 00:04:08,000
insert the car and the on the terminal

116
00:04:08,000 --> 00:04:10,879
is going to ask you uh for for the pin

117
00:04:10,879 --> 00:04:12,400
basically insert the pin

118
00:04:12,400 --> 00:04:14,400
and it's not correct

119
00:04:14,400 --> 00:04:15,840
it's going to be counter it's going to

120
00:04:15,840 --> 00:04:18,478
decrease mostly there are five or three

121
00:04:18,478 --> 00:04:19,358
different

122
00:04:19,358 --> 00:04:21,918
times that you have to put the correct

123
00:04:21,918 --> 00:04:23,280
pin

124
00:04:23,280 --> 00:04:26,800
if you uh after the three the two tries

125
00:04:26,800 --> 00:04:28,400
you don't have the correct pin that

126
00:04:28,400 --> 00:04:30,240
counter is going to be zero and the car

127
00:04:30,240 --> 00:04:32,080
is going to be blocked by p which

128
00:04:32,080 --> 00:04:33,440
basically you're not going to make

129
00:04:33,440 --> 00:04:35,360
transaction implementing pin

130
00:04:35,360 --> 00:04:37,120
but for example in united states we can

131
00:04:37,120 --> 00:04:40,240
use pin and also we can use signature

132
00:04:40,240 --> 00:04:43,040
so let's say for example that i block my

133
00:04:43,040 --> 00:04:45,360
car implementing the pin but i can

134
00:04:45,360 --> 00:04:47,280
continue using the car to make

135
00:04:47,280 --> 00:04:50,960
transactions using the signature

136
00:04:50,960 --> 00:04:54,080
i think was another arc basically the

137
00:04:54,080 --> 00:04:55,919
authorization response code basically

138
00:04:55,919 --> 00:04:58,000
when the term the terminal is going to

139
00:04:58,000 --> 00:04:59,600
authorize the transaction it sends this

140
00:04:59,600 --> 00:05:01,520
information to the bank and the bank is

141
00:05:01,520 --> 00:05:03,759
going to respond with their ipc which

142
00:05:03,759 --> 00:05:05,199
basically the authorization for that

143
00:05:05,199 --> 00:05:08,160
specific transaction

144
00:05:09,120 --> 00:05:12,000
what is the emv contact payment

145
00:05:12,000 --> 00:05:13,759
basically the contra payment is when you

146
00:05:13,759 --> 00:05:16,800
insert the car in the terminal basically

147
00:05:16,800 --> 00:05:19,120
the terminal is touching the the chip of

148
00:05:19,120 --> 00:05:20,479
the env chip

149
00:05:20,479 --> 00:05:21,759
and

150
00:05:21,759 --> 00:05:23,440
it start the communication sending the

151
00:05:23,440 --> 00:05:25,520
first comment to the card and basically

152
00:05:25,520 --> 00:05:27,120
the corresponding to the other specific

153
00:05:27,120 --> 00:05:30,000
comment normally

154
00:05:30,000 --> 00:05:31,440
the terminal is going to send the first

155
00:05:31,440 --> 00:05:33,120
comment and after that the card is going

156
00:05:33,120 --> 00:05:34,960
to the response

157
00:05:34,960 --> 00:05:37,120
in this in this specific process the

158
00:05:37,120 --> 00:05:39,840
terminal sends the or reset the car to

159
00:05:39,840 --> 00:05:42,880
start this communication

160
00:05:43,600 --> 00:05:45,280
what is the flow of this transaction

161
00:05:45,280 --> 00:05:46,639
basically when

162
00:05:46,639 --> 00:05:48,720
when you insert the card terminal

163
00:05:48,720 --> 00:05:50,800
the terminal is going to detect it it's

164
00:05:50,800 --> 00:05:52,240
going to list applications basically

165
00:05:52,240 --> 00:05:54,320
it's going to know if the car is a visa

166
00:05:54,320 --> 00:05:56,400
mastercard american express or another

167
00:05:56,400 --> 00:05:58,400
type of bank it's going to select the

168
00:05:58,400 --> 00:06:00,639
application it's going to get the data

169
00:06:00,639 --> 00:06:02,639
it's going to the identification process

170
00:06:02,639 --> 00:06:04,960
is going to verify the card holder

171
00:06:04,960 --> 00:06:07,280
implementing pin or signature is going

172
00:06:07,280 --> 00:06:09,039
to find the processing restrictions

173
00:06:09,039 --> 00:06:11,199
manage the risk and finally the

174
00:06:11,199 --> 00:06:13,280
transaction is going to complete that

175
00:06:13,280 --> 00:06:14,639
means that the transaction can go

176
00:06:14,639 --> 00:06:16,240
through or is going to be declined but

177
00:06:16,240 --> 00:06:17,759
the transaction has to finish in some

178
00:06:17,759 --> 00:06:19,600
way another

179
00:06:19,600 --> 00:06:22,000
so what is the main phases of this of

180
00:06:22,000 --> 00:06:23,680
these transactions basically we have

181
00:06:23,680 --> 00:06:25,520
three different phases we have the car

182
00:06:25,520 --> 00:06:27,440
authentication we have the cargo

183
00:06:27,440 --> 00:06:29,199
verification and we have the transaction

184
00:06:29,199 --> 00:06:32,000
authorization and the first part

185
00:06:32,000 --> 00:06:34,800
and the car of the vacation

186
00:06:34,800 --> 00:06:35,840
sorry

187
00:06:35,840 --> 00:06:37,280
and the first part in the card

188
00:06:37,280 --> 00:06:38,639
identification basically is when you

189
00:06:38,639 --> 00:06:40,400
insert it and the on the terminal start

190
00:06:40,400 --> 00:06:42,000
listing what kind of car you are using

191
00:06:42,000 --> 00:06:44,720
vista mastercard after that is when they

192
00:06:44,720 --> 00:06:46,960
ask you for the pin or the signature and

193
00:06:46,960 --> 00:06:48,960
finally is when he is going to authorize

194
00:06:48,960 --> 00:06:50,639
the transaction sending the data to the

195
00:06:50,639 --> 00:06:52,720
bank and is going to respond with the

196
00:06:52,720 --> 00:06:55,280
arpc

197
00:06:55,440 --> 00:06:57,440
basically for the protocol we implement

198
00:06:57,440 --> 00:07:00,479
the iso 7816 which is basically how they

199
00:07:00,479 --> 00:07:02,319
communicate to each other implementing

200
00:07:02,319 --> 00:07:03,120
the

201
00:07:03,120 --> 00:07:06,479
application layer 7 and this this

202
00:07:06,479 --> 00:07:08,639
protocol specifically we can see than

203
00:07:08,639 --> 00:07:10,639
the nfc technology as well basically

204
00:07:10,639 --> 00:07:13,280
they share the same application layer

205
00:07:13,280 --> 00:07:14,720
and as i mentioned

206
00:07:14,720 --> 00:07:16,880
this specific protocol it's not

207
00:07:16,880 --> 00:07:18,560
encrypted that's why we can intercept

208
00:07:18,560 --> 00:07:22,960
the transaction and modify in real time

209
00:07:23,360 --> 00:07:25,680
so how we how we design how we design

210
00:07:25,680 --> 00:07:28,080
these kind of epd comments or response

211
00:07:28,080 --> 00:07:29,120
from the car

212
00:07:29,120 --> 00:07:30,400
so basically we need to follow the

213
00:07:30,400 --> 00:07:32,800
structure which is going to help us to

214
00:07:32,800 --> 00:07:35,360
understand all this process

215
00:07:35,360 --> 00:07:37,199
normally how it looks a comma from the

216
00:07:37,199 --> 00:07:40,319
terminal when it's sent to the car

217
00:07:40,319 --> 00:07:42,240
we have this kind of

218
00:07:42,240 --> 00:07:44,160
recurrent structure right and we can

219
00:07:44,160 --> 00:07:47,039
kind of split it to see how how this is

220
00:07:47,039 --> 00:07:49,039
implemented

221
00:07:49,039 --> 00:07:50,639
for example we have the class we have

222
00:07:50,639 --> 00:07:52,720
the instruction parameter one parameter

223
00:07:52,720 --> 00:07:55,039
two command length and the command so we

224
00:07:55,039 --> 00:07:57,680
can see it specifically what's data that

225
00:07:57,680 --> 00:07:59,680
is sending from the terminal to the to

226
00:07:59,680 --> 00:08:01,039
the car

227
00:08:01,039 --> 00:08:02,639
and also the same thing from the car

228
00:08:02,639 --> 00:08:04,960
response we got the data and we have

229
00:08:04,960 --> 00:08:06,879
some status bytes

230
00:08:06,879 --> 00:08:08,479
and the specific key and specifically we

231
00:08:08,479 --> 00:08:11,440
have the data on sw1 sw2 which basically

232
00:08:11,440 --> 00:08:13,840
is the status of the previous comment

233
00:08:13,840 --> 00:08:15,919
which basically tells me if the comma

234
00:08:15,919 --> 00:08:18,000
was executed correctly or is something

235
00:08:18,000 --> 00:08:21,199
wrong in the communication

236
00:08:21,919 --> 00:08:25,039
we can start digging into the data

237
00:08:25,039 --> 00:08:27,440
to know what exactly is inside of this

238
00:08:27,440 --> 00:08:30,479
data for example in this response we can

239
00:08:30,479 --> 00:08:32,479
know what is the dedicated file name

240
00:08:32,479 --> 00:08:35,519
which basically is a structural protocol

241
00:08:35,519 --> 00:08:37,279
what kind of language preference is in

242
00:08:37,279 --> 00:08:39,120
the communication and different type of

243
00:08:39,120 --> 00:08:42,240
styles we can use a decoder like

244
00:08:42,240 --> 00:08:44,159
mvlab.org

245
00:08:44,159 --> 00:08:46,000
to get the response for the car put in

246
00:08:46,000 --> 00:08:48,000
the website and it's going to the code

247
00:08:48,000 --> 00:08:50,320
for us basically implementing tell your

248
00:08:50,320 --> 00:08:51,360
tlv

249
00:08:51,360 --> 00:08:52,959
decoding process

250
00:08:52,959 --> 00:08:55,040
which is basically tackling length of

251
00:08:55,040 --> 00:08:56,880
value

252
00:08:56,880 --> 00:08:58,800
all this process you need to do it

253
00:08:58,800 --> 00:09:02,080
manually but we were thinking how we can

254
00:09:02,080 --> 00:09:04,399
design something that help us to

255
00:09:04,399 --> 00:09:06,240
understand this communication and

256
00:09:06,240 --> 00:09:07,760
simultaneously

257
00:09:07,760 --> 00:09:10,000
to inject data in the communication

258
00:09:10,000 --> 00:09:11,040
process

259
00:09:11,040 --> 00:09:13,519
or how we can extract data

260
00:09:13,519 --> 00:09:15,600
doing something with it and put it back

261
00:09:15,600 --> 00:09:18,560
to that communication

262
00:09:18,560 --> 00:09:21,680
that's why we design the emv in this

263
00:09:21,680 --> 00:09:23,920
case alma elma

264
00:09:23,920 --> 00:09:25,440
hardware which is basically mv

265
00:09:25,440 --> 00:09:27,360
laboratory milwaukee assistant to

266
00:09:27,360 --> 00:09:29,120
intercept the communication and start

267
00:09:29,120 --> 00:09:31,120
doing that kind of process

268
00:09:31,120 --> 00:09:33,920
alma is based and sim trace2 sim trace2

269
00:09:33,920 --> 00:09:35,279
is a company

270
00:09:35,279 --> 00:09:37,839
designed this uh symphony series company

271
00:09:37,839 --> 00:09:40,320
from germany he called osmocom

272
00:09:40,320 --> 00:09:42,560
which basically the first intent to do

273
00:09:42,560 --> 00:09:43,680
this kind of

274
00:09:43,680 --> 00:09:46,080
board is to intercept the communication

275
00:09:46,080 --> 00:09:48,160
between the sim card from the cell phone

276
00:09:48,160 --> 00:09:49,920
to the cell phone which basically was

277
00:09:49,920 --> 00:09:51,680
made in the middle so you can intercept

278
00:09:51,680 --> 00:09:53,040
that kind of data

279
00:09:53,040 --> 00:09:54,640
so we try to design something very

280
00:09:54,640 --> 00:09:57,200
different on the same methodology but in

281
00:09:57,200 --> 00:09:59,279
this case to intercept data between the

282
00:09:59,279 --> 00:10:01,600
banking cards and the terminal to start

283
00:10:01,600 --> 00:10:04,880
seeing that kind of patterns

284
00:10:04,880 --> 00:10:06,720
delma

285
00:10:06,720 --> 00:10:10,560
is a board that implements us usbc

286
00:10:10,560 --> 00:10:13,360
esp32 which basically could be

287
00:10:13,360 --> 00:10:16,240
connected directly to a terminal or into

288
00:10:16,240 --> 00:10:18,560
a cord and you can connect it by a wi-fi

289
00:10:18,560 --> 00:10:20,399
connection or it could be connected by

290
00:10:20,399 --> 00:10:21,680
usb

291
00:10:21,680 --> 00:10:23,920
uh you have different adapters you have

292
00:10:23,920 --> 00:10:25,279
dual modes and a standalone

293
00:10:25,279 --> 00:10:28,000
configuration which means it could be a

294
00:10:28,000 --> 00:10:30,160
sniffer or it could be an emulator

295
00:10:30,160 --> 00:10:32,640
basically we can emulate a banking card

296
00:10:32,640 --> 00:10:35,600
implementing this tool

297
00:10:35,760 --> 00:10:37,360
this is how it looks for a sniffing

298
00:10:37,360 --> 00:10:38,640
traffic

299
00:10:38,640 --> 00:10:40,959
and what's up in one side we have the

300
00:10:40,959 --> 00:10:42,959
the adapter to the terminal and the

301
00:10:42,959 --> 00:10:44,880
other side we have the car in certain

302
00:10:44,880 --> 00:10:47,519
adapter and in the middle we have the

303
00:10:47,519 --> 00:10:49,279
the tool which basically can dump we

304
00:10:49,279 --> 00:10:52,640
conduct the the communication by usb or

305
00:10:52,640 --> 00:10:55,760
by esp32 basically connected by wireless

306
00:10:55,760 --> 00:10:58,240
connection

307
00:10:58,320 --> 00:11:01,279
so in this process delma tools

308
00:11:01,279 --> 00:11:03,360
has different different scenarios you

309
00:11:03,360 --> 00:11:05,680
can it can be a sniffer also it could be

310
00:11:05,680 --> 00:11:07,120
an emulator

311
00:11:07,120 --> 00:11:09,519
and you have the ability to have the men

312
00:11:09,519 --> 00:11:10,959
in the middle

313
00:11:10,959 --> 00:11:12,160
option

314
00:11:12,160 --> 00:11:15,680
which could you can alter the cvm order

315
00:11:15,680 --> 00:11:17,920
let's say for example that normally when

316
00:11:17,920 --> 00:11:20,240
you are making a transaction you have a

317
00:11:20,240 --> 00:11:22,959
list of what kind of verification has

318
00:11:22,959 --> 00:11:25,360
you in your own car let's say the first

319
00:11:25,360 --> 00:11:27,680
verification is going to be implementing

320
00:11:27,680 --> 00:11:28,880
a pin

321
00:11:28,880 --> 00:11:30,160
and after that is going to be

322
00:11:30,160 --> 00:11:32,160
implementing a pin online

323
00:11:32,160 --> 00:11:34,240
after that is going to be a signature

324
00:11:34,240 --> 00:11:36,480
this basically is a list that is inside

325
00:11:36,480 --> 00:11:37,680
of your core

326
00:11:37,680 --> 00:11:39,920
what about if we change the list

327
00:11:39,920 --> 00:11:41,600
that could be possible implementing this

328
00:11:41,600 --> 00:11:42,480
tool

329
00:11:42,480 --> 00:11:44,959
also we can control the communication so

330
00:11:44,959 --> 00:11:47,760
we can change the terminal commands

331
00:11:47,760 --> 00:11:49,279
but also we can change the current

332
00:11:49,279 --> 00:11:50,480
responses

333
00:11:50,480 --> 00:11:53,760
so what happened if we sent more data to

334
00:11:53,760 --> 00:11:56,399
the terminal that it was expected it

335
00:11:56,399 --> 00:11:58,000
could be a crash to the terminal so we

336
00:11:58,000 --> 00:12:00,399
can test different things that we it was

337
00:12:00,399 --> 00:12:02,560
not possible to test it before because

338
00:12:02,560 --> 00:12:04,560
we don't have this type of tool

339
00:12:04,560 --> 00:12:07,440
also we can implement the apdu faster

340
00:12:07,440 --> 00:12:09,519
and of course the pinata attack that

341
00:12:09,519 --> 00:12:11,360
that's what we're talking about at this

342
00:12:11,360 --> 00:12:12,480
point

343
00:12:12,480 --> 00:12:14,639
one of the coolest thing about this uh

344
00:12:14,639 --> 00:12:16,720
this tool is that we can make we can

345
00:12:16,720 --> 00:12:19,920
relay data basically the car can be in

346
00:12:19,920 --> 00:12:22,720
one location and the elma two could be

347
00:12:22,720 --> 00:12:24,880
in another another location how we can

348
00:12:24,880 --> 00:12:27,120
send the data over internet and we can

349
00:12:27,120 --> 00:12:28,560
emulate the data from that car

350
00:12:28,560 --> 00:12:29,760
specifically

351
00:12:29,760 --> 00:12:31,839
uh here let's say i have my car let's

352
00:12:31,839 --> 00:12:33,920
say in united states i have the internet

353
00:12:33,920 --> 00:12:35,680
connected to a server and i can start

354
00:12:35,680 --> 00:12:36,800
emulating

355
00:12:36,800 --> 00:12:38,560
the transaction like the car was here

356
00:12:38,560 --> 00:12:40,720
personally physically but basically

357
00:12:40,720 --> 00:12:44,079
we're emulating implementing this tool

358
00:12:44,079 --> 00:12:46,240
internally we're using virtual smart car

359
00:12:46,240 --> 00:12:48,160
virtual smart car basically

360
00:12:48,160 --> 00:12:51,279
is a software that that uses

361
00:12:51,279 --> 00:12:53,600
for emulation purposes basically it's

362
00:12:53,600 --> 00:12:56,240
like a tunnel to move the data between

363
00:12:56,240 --> 00:12:57,279
the car

364
00:12:57,279 --> 00:13:00,639
and on the alma using internet

365
00:13:00,639 --> 00:13:02,720
the idea implementing virtual smart car

366
00:13:02,720 --> 00:13:04,880
is because it's very easy to use it and

367
00:13:04,880 --> 00:13:07,279
you can implement it not only for emv

368
00:13:07,279 --> 00:13:09,839
contact transactions but also for nfc

369
00:13:09,839 --> 00:13:11,920
contactless transactions so you can

370
00:13:11,920 --> 00:13:13,279
implement it for different different

371
00:13:13,279 --> 00:13:15,440
ways and different perspectives

372
00:13:15,440 --> 00:13:16,959
the cool thing or the coolest thing

373
00:13:16,959 --> 00:13:18,880
about this tool is that it has

374
00:13:18,880 --> 00:13:22,000
everything for for relaying data over

375
00:13:22,000 --> 00:13:24,639
the internet

376
00:13:24,639 --> 00:13:25,680
let's talk a little bit about the

377
00:13:25,680 --> 00:13:27,519
inadequate implementations

378
00:13:27,519 --> 00:13:30,720
about exactly the pinata attack

379
00:13:30,720 --> 00:13:33,600
if you remember about this these phases

380
00:13:33,600 --> 00:13:35,839
if we start with a car identification i

381
00:13:35,839 --> 00:13:37,680
mentioned that we

382
00:13:37,680 --> 00:13:39,839
determined to start reading the car

383
00:13:39,839 --> 00:13:41,519
implementing uh selecting the

384
00:13:41,519 --> 00:13:43,199
application and knows

385
00:13:43,199 --> 00:13:44,800
exactly if it's going to be a visa

386
00:13:44,800 --> 00:13:46,959
mastercard american express or any other

387
00:13:46,959 --> 00:13:49,440
other card after that is going to be the

388
00:13:49,440 --> 00:13:51,920
cardholder verification to know exactly

389
00:13:51,920 --> 00:13:54,160
how it's going to validate or verify

390
00:13:54,160 --> 00:13:55,760
this transaction

391
00:13:55,760 --> 00:13:57,279
and finally

392
00:13:57,279 --> 00:13:58,320
it's going to be a transaction

393
00:13:58,320 --> 00:14:00,639
authorization where it sends the data to

394
00:14:00,639 --> 00:14:02,959
the end and the bank is going to respond

395
00:14:02,959 --> 00:14:04,880
with the authorization process which

396
00:14:04,880 --> 00:14:06,720
could be accepting the transaction or

397
00:14:06,720 --> 00:14:08,639
decline in the transaction

398
00:14:08,639 --> 00:14:10,240
we're going to be focused on this part

399
00:14:10,240 --> 00:14:12,480
the cardholder verification method which

400
00:14:12,480 --> 00:14:14,240
is one of the coolest things about the

401
00:14:14,240 --> 00:14:16,240
transactions well and specifically for

402
00:14:16,240 --> 00:14:18,959
this pinata attack

403
00:14:18,959 --> 00:14:21,600
as i mentioned the cf cvm is basically a

404
00:14:21,600 --> 00:14:24,399
list you have no cvm required which

405
00:14:24,399 --> 00:14:27,279
basically is a code and a transaction a

406
00:14:27,279 --> 00:14:29,920
failed cm processing signature paper

407
00:14:29,920 --> 00:14:31,360
encrypted pin

408
00:14:31,360 --> 00:14:33,680
a plain that spin verification

409
00:14:33,680 --> 00:14:36,399
basically performed by icc

410
00:14:36,399 --> 00:14:38,399
painted spin and signature paper

411
00:14:38,399 --> 00:14:40,639
encrypted pin by ic encrypted pin by ac

412
00:14:40,639 --> 00:14:43,279
and signature paper

413
00:14:43,279 --> 00:14:45,279
let's say that you have a bank card and

414
00:14:45,279 --> 00:14:46,959
you know you know you have a pin for the

415
00:14:46,959 --> 00:14:50,000
car that specific car has two pins

416
00:14:50,000 --> 00:14:51,760
you only remember one because it's

417
00:14:51,760 --> 00:14:53,360
always checking to the online

418
00:14:53,360 --> 00:14:56,320
transactions but another pin normally is

419
00:14:56,320 --> 00:14:59,120
uh save it in the in the car by itself

420
00:14:59,120 --> 00:15:00,720
so it could be a different pin but

421
00:15:00,720 --> 00:15:03,199
normally it's the same pin all the time

422
00:15:03,199 --> 00:15:05,360
so what we can do we're going to focus

423
00:15:05,360 --> 00:15:06,800
on the plaintext pin verification

424
00:15:06,800 --> 00:15:09,440
performed by icc just just to learn a

425
00:15:09,440 --> 00:15:11,760
little bit more about the cvm

426
00:15:11,760 --> 00:15:13,519
verification methods

427
00:15:13,519 --> 00:15:16,880
the cvm where we can find the cvm list

428
00:15:16,880 --> 00:15:18,639
to understand more how it's

429
00:15:18,639 --> 00:15:21,279
communicating this list to the terminal

430
00:15:21,279 --> 00:15:23,279
let's focus on this current discount

431
00:15:23,279 --> 00:15:25,040
response

432
00:15:25,040 --> 00:15:26,480
and the current response we're going to

433
00:15:26,480 --> 00:15:30,160
focus on the 8e tag emv which basically

434
00:15:30,160 --> 00:15:31,199
tell us

435
00:15:31,199 --> 00:15:32,880
that this is going to be the list of the

436
00:15:32,880 --> 00:15:34,639
cvm verification method for this

437
00:15:34,639 --> 00:15:37,759
specific transaction

438
00:15:37,759 --> 00:15:42,079
we decoded this dcmv track we can notice

439
00:15:42,079 --> 00:15:45,040
what is the cmv list verification method

440
00:15:45,040 --> 00:15:47,759
and we decode more how break apart this

441
00:15:47,759 --> 00:15:49,279
verification

442
00:15:49,279 --> 00:15:50,959
we can we can notice that this

443
00:15:50,959 --> 00:15:53,120
transaction specifically has the plain

444
00:15:53,120 --> 00:15:55,920
pin by ic if terminal supports vme a

445
00:15:55,920 --> 00:15:57,680
verification method

446
00:15:57,680 --> 00:16:01,519
so we're going to focus on this 4103

447
00:16:01,519 --> 00:16:03,519
as i mentioned we have this list in the

448
00:16:03,519 --> 00:16:05,440
transaction

449
00:16:05,440 --> 00:16:06,880
and it goes

450
00:16:06,880 --> 00:16:08,480
you can see in that way

451
00:16:08,480 --> 00:16:09,759
for example the terminal is going to

452
00:16:09,759 --> 00:16:13,279
take the 4203 as first row to verify the

453
00:16:13,279 --> 00:16:14,720
transaction

454
00:16:14,720 --> 00:16:16,399
but what happened is the terminal

455
00:16:16,399 --> 00:16:19,680
doesn't respond to that specific rule so

456
00:16:19,680 --> 00:16:21,680
it's going to jump to the next the next

457
00:16:21,680 --> 00:16:22,560
rule

458
00:16:22,560 --> 00:16:25,920
this in this case 4403 and after that 41

459
00:16:25,920 --> 00:16:29,279
03 and finally the 1f03 which basically

460
00:16:29,279 --> 00:16:31,600
we don't need any verification method so

461
00:16:31,600 --> 00:16:33,120
you can basically authorize the

462
00:16:33,120 --> 00:16:34,399
transaction

463
00:16:34,399 --> 00:16:37,440
so what happen if we move this list back

464
00:16:37,440 --> 00:16:38,399
and forth

465
00:16:38,399 --> 00:16:40,320
so we are going to reduce it the the

466
00:16:40,320 --> 00:16:42,480
security of the transaction basically

467
00:16:42,480 --> 00:16:44,399
but we're not going to do that basically

468
00:16:44,399 --> 00:16:45,839
because it's going to be another attack

469
00:16:45,839 --> 00:16:46,959
but we're going to be focused on the

470
00:16:46,959 --> 00:16:49,279
4103

471
00:16:49,279 --> 00:16:51,680
how we know that we can send a comment

472
00:16:51,680 --> 00:16:52,720
to the car

473
00:16:52,720 --> 00:16:54,959
to verify a pin

474
00:16:54,959 --> 00:16:57,120
that it could be basically verified by

475
00:16:57,120 --> 00:16:59,040
physically with a car

476
00:16:59,040 --> 00:17:01,360
so we can design a command

477
00:17:01,360 --> 00:17:03,519
which is a is stipulated in the mv

478
00:17:03,519 --> 00:17:04,640
standards

479
00:17:04,640 --> 00:17:06,559
that we can we're going to validate or

480
00:17:06,559 --> 00:17:09,039
verify the pin one two three and four

481
00:17:09,039 --> 00:17:11,839
so we design this command and we send it

482
00:17:11,839 --> 00:17:12,959
to the card

483
00:17:12,959 --> 00:17:15,439
the card has different responses

484
00:17:15,439 --> 00:17:17,679
some of them or the most important one

485
00:17:17,679 --> 00:17:18,559
is

486
00:17:18,559 --> 00:17:20,799
knight zero zero which means the pin is

487
00:17:20,799 --> 00:17:21,839
correct

488
00:17:21,839 --> 00:17:23,119
basically

489
00:17:23,119 --> 00:17:25,919
the next one is ct3 c2 which means it's

490
00:17:25,919 --> 00:17:27,839
a one pin but you have two more attempts

491
00:17:27,839 --> 00:17:30,320
left so you can try different pins

492
00:17:30,320 --> 00:17:33,760
uh 63c1 is a romping one more attempt

493
00:17:33,760 --> 00:17:36,480
left and 630

494
00:17:36,480 --> 00:17:38,240
which is basically romping no more

495
00:17:38,240 --> 00:17:41,120
attempts left uh if we arrive to this

496
00:17:41,120 --> 00:17:43,039
last

497
00:17:43,039 --> 00:17:45,039
answer for the car means that the car is

498
00:17:45,039 --> 00:17:47,360
going to be blocked and we cannot send

499
00:17:47,360 --> 00:17:49,520
any more attempts to know the pin

500
00:17:49,520 --> 00:17:51,679
so basically it's a mechanism to protect

501
00:17:51,679 --> 00:17:53,520
about brute force attacks

502
00:17:53,520 --> 00:17:55,280
that's how

503
00:17:55,280 --> 00:17:57,360
theoretically has to work right

504
00:17:57,360 --> 00:17:59,200
but

505
00:17:59,200 --> 00:18:00,400
the cool thing

506
00:18:00,400 --> 00:18:01,840
is if we focus on the cardholder

507
00:18:01,840 --> 00:18:04,720
verification part

508
00:18:04,720 --> 00:18:06,720
we can start sending data

509
00:18:06,720 --> 00:18:08,080
to the card

510
00:18:08,080 --> 00:18:11,280
and we start asking how many tries the

511
00:18:11,280 --> 00:18:13,919
ping retry counter has inside of the

512
00:18:13,919 --> 00:18:14,960
chip

513
00:18:14,960 --> 00:18:17,280
so we start sending uh these these

514
00:18:17,280 --> 00:18:18,320
comments

515
00:18:18,320 --> 00:18:21,280
and we're starting that you have three

516
00:18:21,280 --> 00:18:24,000
attempts left in the car to brute force

517
00:18:24,000 --> 00:18:26,320
a pin

518
00:18:26,320 --> 00:18:30,480
we start with the pin 0 7 18

519
00:18:30,480 --> 00:18:33,039
and the current response with 63 c2

520
00:18:33,039 --> 00:18:35,679
which means is a rom pin but we we have

521
00:18:35,679 --> 00:18:37,840
two more attempts left

522
00:18:37,840 --> 00:18:40,799
and we can continue sending uh trying to

523
00:18:40,799 --> 00:18:43,440
figure out which is the the correct pin

524
00:18:43,440 --> 00:18:45,360
implementing the brute force attack

525
00:18:45,360 --> 00:18:46,640
and finally

526
00:18:46,640 --> 00:18:49,440
we got the 63 c0 which means

527
00:18:49,440 --> 00:18:51,600
none of the pins i try they are the

528
00:18:51,600 --> 00:18:54,720
correct and now the car is blocked so i

529
00:18:54,720 --> 00:18:58,799
cannot send more attempts to get the pin

530
00:18:58,799 --> 00:19:00,880
so at this point

531
00:19:00,880 --> 00:19:02,720
when we have the pin retry counter equal

532
00:19:02,720 --> 00:19:05,039
to zero which means the card is blocked

533
00:19:05,039 --> 00:19:07,760
so how we can reset it to his previous

534
00:19:07,760 --> 00:19:10,400
value which was three in this case to

535
00:19:10,400 --> 00:19:13,520
continue sending uh pins to the card

536
00:19:13,520 --> 00:19:15,520
until we get the correct pin that's

537
00:19:15,520 --> 00:19:17,760
that's the main question

538
00:19:17,760 --> 00:19:20,080
so there are different ways

539
00:19:20,080 --> 00:19:21,919
but the most important

540
00:19:21,919 --> 00:19:23,520
is when you are going to let's say that

541
00:19:23,520 --> 00:19:25,280
you forgot your pin

542
00:19:25,280 --> 00:19:27,120
and you try different pins in the

543
00:19:27,120 --> 00:19:29,520
terminal and no no none of them is the

544
00:19:29,520 --> 00:19:30,559
correct

545
00:19:30,559 --> 00:19:31,760
by

546
00:19:31,760 --> 00:19:33,840
suddenly you you you remember the pin

547
00:19:33,840 --> 00:19:35,200
that you're going to the atm of the

548
00:19:35,200 --> 00:19:36,720
other specific bank

549
00:19:36,720 --> 00:19:38,559
and you insert in the atm and you put

550
00:19:38,559 --> 00:19:40,880
the correct pin the team the atm is

551
00:19:40,880 --> 00:19:43,200
going to reset the pin retry counter

552
00:19:43,200 --> 00:19:45,679
because this contains the scripts to do

553
00:19:45,679 --> 00:19:47,280
that automatically

554
00:19:47,280 --> 00:19:49,520
another way is when you call the bank

555
00:19:49,520 --> 00:19:51,360
and say you know what i forgot my pin

556
00:19:51,360 --> 00:19:52,960
can you send a new one

557
00:19:52,960 --> 00:19:54,640
they send you a new pin

558
00:19:54,640 --> 00:19:56,640
and when you go to the atm and use that

559
00:19:56,640 --> 00:19:58,320
pin it's going to reset that pin retry

560
00:19:58,320 --> 00:19:59,440
counter

561
00:19:59,440 --> 00:20:01,360
another way is when the car has these

562
00:20:01,360 --> 00:20:04,320
scripts inside of it the chip and when

563
00:20:04,320 --> 00:20:06,960
you make a transaction the terminal

564
00:20:06,960 --> 00:20:09,360
is going to communicate to the bank end

565
00:20:09,360 --> 00:20:11,760
to the back end with the with the bank

566
00:20:11,760 --> 00:20:13,679
and the bank is going to send the order

567
00:20:13,679 --> 00:20:16,320
to reset this pin retry counter

568
00:20:16,320 --> 00:20:17,039
so

569
00:20:17,039 --> 00:20:18,799
we're going to take advantage of that

570
00:20:18,799 --> 00:20:22,320
specific specific resource

571
00:20:22,320 --> 00:20:23,919
so basically

572
00:20:23,919 --> 00:20:26,480
this happens when the when the

573
00:20:26,480 --> 00:20:28,400
banking sends the response for the

574
00:20:28,400 --> 00:20:30,080
authorization process

575
00:20:30,080 --> 00:20:31,760
and in the authorization process send a

576
00:20:31,760 --> 00:20:32,799
specific

577
00:20:32,799 --> 00:20:35,600
comment to do that that result in the

578
00:20:35,600 --> 00:20:38,559
pin retry counter

579
00:20:39,440 --> 00:20:41,039
so we're going to focus on the

580
00:20:41,039 --> 00:20:44,480
transaction authorization process

581
00:20:44,480 --> 00:20:47,039
in the last part of the transaction

582
00:20:47,039 --> 00:20:49,360
the terminal send this command

583
00:20:49,360 --> 00:20:51,360
basically after a few locks let's say

584
00:20:51,360 --> 00:20:53,039
100 locks

585
00:20:53,039 --> 00:20:55,440
different transactions we notice that

586
00:20:55,440 --> 00:20:57,679
that specific bank

587
00:20:57,679 --> 00:20:59,600
when it generates the cryptogram the

588
00:20:59,600 --> 00:21:01,919
terminal to to make the last part of the

589
00:21:01,919 --> 00:21:03,440
transactions

590
00:21:03,440 --> 00:21:06,799
the back response with this specific

591
00:21:06,799 --> 00:21:09,840
zero three one eight which basically was

592
00:21:09,840 --> 00:21:12,400
that by that was changing after the pin

593
00:21:12,400 --> 00:21:14,559
retry counter was equal to zero and

594
00:21:14,559 --> 00:21:17,120
we're making another transaction

595
00:21:17,120 --> 00:21:20,000
which means that after that

596
00:21:20,000 --> 00:21:22,320
we can start sending transactions by

597
00:21:22,320 --> 00:21:24,159
changing instead of using the pin to

598
00:21:24,159 --> 00:21:25,919
make transactions we're using the

599
00:21:25,919 --> 00:21:28,480
signature cvm which basically telling

600
00:21:28,480 --> 00:21:30,159
telling the terminal that we don't have

601
00:21:30,159 --> 00:21:31,760
the pin but we can't make the

602
00:21:31,760 --> 00:21:33,840
transaction by signature

603
00:21:33,840 --> 00:21:34,799
so

604
00:21:34,799 --> 00:21:36,720
you can you can go through to the bank

605
00:21:36,720 --> 00:21:39,200
and the bank responds that okay i know

606
00:21:39,200 --> 00:21:40,400
that your car

607
00:21:40,400 --> 00:21:42,080
doesn't have any more peer retry

608
00:21:42,080 --> 00:21:44,159
accounts left on your counter we are

609
00:21:44,159 --> 00:21:46,000
going to reset automatically

610
00:21:46,000 --> 00:21:48,480
without questioning why you don't have

611
00:21:48,480 --> 00:21:49,919
these more attempts left in the pin

612
00:21:49,919 --> 00:21:52,640
retry counter

613
00:21:53,120 --> 00:21:55,039
so basically in the last part

614
00:21:55,039 --> 00:21:57,280
sending this command to the car

615
00:21:57,280 --> 00:22:00,799
there are specific bytes that tells

616
00:22:00,799 --> 00:22:03,600
what is going to do to

617
00:22:03,600 --> 00:22:07,120
to reset the spin retry counter

618
00:22:08,000 --> 00:22:08,799
so

619
00:22:08,799 --> 00:22:11,200
to to be able to do the pinata attack

620
00:22:11,200 --> 00:22:12,880
the car has to be able

621
00:22:12,880 --> 00:22:15,520
to use plain pin by icc

622
00:22:15,520 --> 00:22:17,360
and the financial institution will reset

623
00:22:17,360 --> 00:22:19,679
the prc when it's equal to zero and you

624
00:22:19,679 --> 00:22:22,000
don't have more attempts to do it

625
00:22:22,000 --> 00:22:24,000
in the next transaction and we can do

626
00:22:24,000 --> 00:22:25,919
that implementing another type of

627
00:22:25,919 --> 00:22:28,240
verification which could be a signature

628
00:22:28,240 --> 00:22:30,320
transaction

629
00:22:30,320 --> 00:22:33,039
so for this specific scenario

630
00:22:33,039 --> 00:22:34,480
we have the elma setup we have the

631
00:22:34,480 --> 00:22:36,960
pinata attack we are going to use a gpd

632
00:22:36,960 --> 00:22:39,200
pocket

633
00:22:39,200 --> 00:22:41,320
we're going to use a car reader

634
00:22:41,320 --> 00:22:43,440
scr3310 which is basically the cheapest

635
00:22:43,440 --> 00:22:45,679
one that you can find in internet

636
00:22:45,679 --> 00:22:47,120
uh we're going to have the helm of

637
00:22:47,120 --> 00:22:48,640
course and we are going to use the sum

638
00:22:48,640 --> 00:22:50,640
up which is basically a mobile terminal

639
00:22:50,640 --> 00:22:53,200
that you can have to do that

640
00:22:53,200 --> 00:22:55,440
and for automatization i'm we're going

641
00:22:55,440 --> 00:22:57,360
to use auto clicker which basically what

642
00:22:57,360 --> 00:23:00,559
it's going to do is after we have a zero

643
00:23:00,559 --> 00:23:02,559
and a pin retry counter is going to try

644
00:23:02,559 --> 00:23:04,799
to make another transaction to reset

645
00:23:04,799 --> 00:23:07,440
this specific counter so we can continue

646
00:23:07,440 --> 00:23:10,400
brute forcing the pins that uh

647
00:23:10,400 --> 00:23:12,000
to basically continue brute forcing the

648
00:23:12,000 --> 00:23:14,080
pins

649
00:23:14,080 --> 00:23:16,799
so this is all the setup

650
00:23:16,799 --> 00:23:19,200
basically we have the car on one side

651
00:23:19,200 --> 00:23:21,120
we have the computer which is going to

652
00:23:21,120 --> 00:23:22,559
be the main in the middle

653
00:23:22,559 --> 00:23:24,720
we have uh the elma

654
00:23:24,720 --> 00:23:26,799
which is going to send the the comments

655
00:23:26,799 --> 00:23:29,200
and responses between between the

656
00:23:29,200 --> 00:23:30,400
the

657
00:23:30,400 --> 00:23:32,559
in this case the laptop and the laptop

658
00:23:32,559 --> 00:23:34,080
on the client is going to intercept the

659
00:23:34,080 --> 00:23:36,640
communication and changing this this

660
00:23:36,640 --> 00:23:38,559
data automatically

661
00:23:38,559 --> 00:23:40,480
and of course we have the sum up which

662
00:23:40,480 --> 00:23:43,200
is basically connected to the

663
00:23:43,200 --> 00:23:44,720
bank station to make the transactions

664
00:23:44,720 --> 00:23:46,960
right

665
00:23:47,760 --> 00:23:50,880
so how it looks inside basically we have

666
00:23:50,880 --> 00:23:53,279
the card reader connect to a computer

667
00:23:53,279 --> 00:23:55,120
the computer is connected to a virtual

668
00:23:55,120 --> 00:23:57,760
virtual card reader which basically is

669
00:23:57,760 --> 00:23:59,360
the process to intercept the

670
00:23:59,360 --> 00:24:01,840
communication and change in real time

671
00:24:01,840 --> 00:24:03,520
and this is going to send to alma and

672
00:24:03,520 --> 00:24:06,000
elma is going to emulate that data to

673
00:24:06,000 --> 00:24:08,240
the terminal when the terminal sends a

674
00:24:08,240 --> 00:24:10,720
command back it's going to process that

675
00:24:10,720 --> 00:24:11,840
command

676
00:24:11,840 --> 00:24:14,080
we have some kind of rule and the client

677
00:24:14,080 --> 00:24:15,919
is going to process that rule

678
00:24:15,919 --> 00:24:18,080
and it's going to change the data

679
00:24:18,080 --> 00:24:20,000
if it's necessary and it's going to send

680
00:24:20,000 --> 00:24:22,400
that to virtual car reader and that

681
00:24:22,400 --> 00:24:23,919
virtual card is going to send back to

682
00:24:23,919 --> 00:24:26,400
the physical physical card

683
00:24:26,400 --> 00:24:28,880
so all this process in real time of

684
00:24:28,880 --> 00:24:30,799
course when you run this a specific

685
00:24:30,799 --> 00:24:33,600
script you specify which kind of thing

686
00:24:33,600 --> 00:24:36,799
you you want to modify

687
00:24:37,440 --> 00:24:38,159
so

688
00:24:38,159 --> 00:24:39,600
what is going to happen in demo

689
00:24:39,600 --> 00:24:40,799
basically we have a transaction

690
00:24:40,799 --> 00:24:43,360
certificate we are going to ask we have

691
00:24:43,360 --> 00:24:44,799
plain pin

692
00:24:44,799 --> 00:24:47,600
verification method in the in the car

693
00:24:47,600 --> 00:24:50,000
and if the pin tri counter is greater

694
00:24:50,000 --> 00:24:52,240
than zero we are going to try to brute

695
00:24:52,240 --> 00:24:54,720
force three different pins

696
00:24:54,720 --> 00:24:56,799
if there is no correct pin we are going

697
00:24:56,799 --> 00:24:57,679
to

698
00:24:57,679 --> 00:24:59,840
have another transaction to reset a pin

699
00:24:59,840 --> 00:25:02,799
retry counter until we find the correct

700
00:25:02,799 --> 00:25:06,240
pin for that specific card

701
00:25:07,120 --> 00:25:09,120
so we're going to be focused on the part

702
00:25:09,120 --> 00:25:12,480
of the reset the prc and avoid charge

703
00:25:12,480 --> 00:25:13,520
let's say that we are making

704
00:25:13,520 --> 00:25:15,039
transactions to reset the pin retry

705
00:25:15,039 --> 00:25:17,440
counter but we don't want to charge of

706
00:25:17,440 --> 00:25:19,840
the or the terminal charges for for send

707
00:25:19,840 --> 00:25:21,919
the pin retry counter because we control

708
00:25:21,919 --> 00:25:23,520
the communication the last part of the

709
00:25:23,520 --> 00:25:26,000
transaction is going to be avoid

710
00:25:26,000 --> 00:25:28,240
so they don't uh the the bank is not

711
00:25:28,240 --> 00:25:29,760
going to charge us to make these

712
00:25:29,760 --> 00:25:31,919
transactions that just we need to reset

713
00:25:31,919 --> 00:25:33,919
we want to reset the pin we try counter

714
00:25:33,919 --> 00:25:36,720
with the uh avoiding any kind of charge

715
00:25:36,720 --> 00:25:39,039
to that specific card

716
00:25:39,039 --> 00:25:40,960
so um

717
00:25:40,960 --> 00:25:43,200
let's let's play this video basically

718
00:25:43,200 --> 00:25:45,039
what we have here basically us we have

719
00:25:45,039 --> 00:25:46,960
the sum up connected to the

720
00:25:46,960 --> 00:25:49,120
uh adapter connect to the terminal and

721
00:25:49,120 --> 00:25:51,440
it's in this case the delma and we have

722
00:25:51,440 --> 00:25:52,480
uh

723
00:25:52,480 --> 00:25:55,120
the middle client which is we're going

724
00:25:55,120 --> 00:25:56,880
to run

725
00:25:56,880 --> 00:25:59,279
to basically start the process of this

726
00:25:59,279 --> 00:26:01,600
attack

727
00:26:03,600 --> 00:26:05,600
so at this point

728
00:26:05,600 --> 00:26:07,679
we're going to start with our clicker to

729
00:26:07,679 --> 00:26:08,840
start a new

730
00:26:08,840 --> 00:26:11,440
transaction after this transaction we

731
00:26:11,440 --> 00:26:12,880
are going to try to brew force the first

732
00:26:12,880 --> 00:26:14,080
three pins

733
00:26:14,080 --> 00:26:17,760
to see if we can find the correct pin

734
00:26:18,559 --> 00:26:20,960
if we if we couldn't find the correct

735
00:26:20,960 --> 00:26:22,720
pin we are going to create a new

736
00:26:22,720 --> 00:26:24,640
transaction to reset the pin retry

737
00:26:24,640 --> 00:26:27,039
counter to try three different more pins

738
00:26:27,039 --> 00:26:29,440
so in this case in this particular trial

739
00:26:29,440 --> 00:26:31,039
we didn't we're going to find the the

740
00:26:31,039 --> 00:26:32,640
correct pin so

741
00:26:32,640 --> 00:26:34,559
uh the system will continue making

742
00:26:34,559 --> 00:26:35,919
transaction to reset the pin retry

743
00:26:35,919 --> 00:26:38,240
counter and it does basically that's

744
00:26:38,240 --> 00:26:40,240
about implementation and then inadequate

745
00:26:40,240 --> 00:26:42,080
implementation in this case we we are

746
00:26:42,080 --> 00:26:45,120
trying seven seven eighteen um

747
00:26:45,120 --> 00:26:47,440
zero seven nineteen zero seven twenty uh

748
00:26:47,440 --> 00:26:49,200
we didn't get the correct pin

749
00:26:49,200 --> 00:26:51,440
and we continue making transactions

750
00:26:51,440 --> 00:26:53,360
without charging of course

751
00:26:53,360 --> 00:26:56,320
to try to find the correct pin

752
00:26:56,320 --> 00:26:58,080
so let's let's see in the last try and

753
00:26:58,080 --> 00:26:59,440
the last try we're going to get the

754
00:26:59,440 --> 00:27:03,679
correct pin in this case is 0 7

755
00:27:03,679 --> 00:27:06,000
22 which ways which basically is the

756
00:27:06,000 --> 00:27:07,520
correct thing for the car

757
00:27:07,520 --> 00:27:10,080
so how can i test it

758
00:27:10,080 --> 00:27:11,919
so basically i can make a transaction

759
00:27:11,919 --> 00:27:14,320
implementing that pin

760
00:27:14,320 --> 00:27:16,960
the other specific part

761
00:27:16,960 --> 00:27:18,240
is uh

762
00:27:18,240 --> 00:27:20,880
using the pin that we just brute force

763
00:27:20,880 --> 00:27:24,000
implementing this type of pin retry

764
00:27:24,000 --> 00:27:27,360
counter reset methodology

765
00:27:27,360 --> 00:27:30,080
of course we report this this issue to

766
00:27:30,080 --> 00:27:31,360
the mastercard

767
00:27:31,360 --> 00:27:32,480
environment

768
00:27:32,480 --> 00:27:35,039
technology company and they send it to

769
00:27:35,039 --> 00:27:37,440
all the banks

770
00:27:37,440 --> 00:27:39,760
so they can fix or apply the

771
00:27:39,760 --> 00:27:43,840
the policies they need to they need to

772
00:27:46,000 --> 00:27:48,000
i think we're going to have 15 minutes

773
00:27:48,000 --> 00:27:50,240
for for the for the questions

774
00:27:50,240 --> 00:27:52,000
i need to say special thanks to these

775
00:27:52,000 --> 00:27:54,320
people that helped help me a lot for

776
00:27:54,320 --> 00:27:55,840
this research

777
00:27:55,840 --> 00:27:57,840
please if you have any

778
00:27:57,840 --> 00:27:59,600
questions regarding

779
00:27:59,600 --> 00:28:01,120
the presentation

780
00:28:01,120 --> 00:28:03,039
you need the slides please let me know

781
00:28:03,039 --> 00:28:06,158
and i can share with you

782
00:28:06,880 --> 00:28:08,720
i don't know you have any questions

783
00:28:08,720 --> 00:28:10,080
regarding this

784
00:28:10,080 --> 00:28:13,639
brute force attack

785
00:28:21,520 --> 00:28:24,559
hi um could we forge the

786
00:28:24,559 --> 00:28:26,559
rest of the code from the bank ourselves

787
00:28:26,559 --> 00:28:30,640
to reserve the code for without um

788
00:28:30,640 --> 00:28:32,559
transaction to the bank

789
00:28:32,559 --> 00:28:34,480
sorry i can read the first part you said

790
00:28:34,480 --> 00:28:36,799
that we tried three times and then we

791
00:28:36,799 --> 00:28:38,399
make another trading section to reset

792
00:28:38,399 --> 00:28:40,159
the counter like what's

793
00:28:40,159 --> 00:28:41,679
preventing us from

794
00:28:41,679 --> 00:28:45,200
visiting the counter ourselves so

795
00:28:45,200 --> 00:28:46,720
what it does this the system what it

796
00:28:46,720 --> 00:28:48,640
does basically is when you uh you don't

797
00:28:48,640 --> 00:28:51,279
have any more attempts left

798
00:28:51,279 --> 00:28:53,440
we send a new transaction to the to the

799
00:28:53,440 --> 00:28:56,159
bank but no implemented the pin

800
00:28:56,159 --> 00:28:58,080
verification method implementing the

801
00:28:58,080 --> 00:29:00,559
signature method and determines uh the

802
00:29:00,559 --> 00:29:03,440
bank the bank in this case the back end

803
00:29:03,440 --> 00:29:05,440
it doesn't have or this end doesn't have

804
00:29:05,440 --> 00:29:07,600
the the policy

805
00:29:07,600 --> 00:29:09,039
correct let's say

806
00:29:09,039 --> 00:29:10,559
and he accept the transaction by

807
00:29:10,559 --> 00:29:12,799
signature and when they accept it they

808
00:29:12,799 --> 00:29:14,480
send a command to reset the pin retry

809
00:29:14,480 --> 00:29:17,039
counter automatically so that's that's a

810
00:29:17,039 --> 00:29:18,559
bad implementation they don't have to do

811
00:29:18,559 --> 00:29:19,279
that

812
00:29:19,279 --> 00:29:21,679
basically you need to call or

813
00:29:21,679 --> 00:29:23,200
they need to you know make an error to

814
00:29:23,200 --> 00:29:24,320
say you know what

815
00:29:24,320 --> 00:29:27,200
you can make this transaction

816
00:29:27,200 --> 00:29:29,440
and after after i test it after they

817
00:29:29,440 --> 00:29:31,440
feature or they apply the

818
00:29:31,440 --> 00:29:34,159
these policies uh my my account was

819
00:29:34,159 --> 00:29:34,960
blocked

820
00:29:34,960 --> 00:29:37,760
after the first time so that's

821
00:29:37,760 --> 00:29:40,640
that sounded pretty cool

822
00:29:41,120 --> 00:29:42,799
i don't know you have any i think in the

823
00:29:42,799 --> 00:29:45,918
middle they have another question

824
00:29:52,080 --> 00:29:54,240
hello is it working in any country

825
00:29:54,240 --> 00:29:57,760
because in france i think that once your

826
00:29:57,760 --> 00:30:00,159
card is blocked you can call by

827
00:30:00,159 --> 00:30:01,679
signature

828
00:30:01,679 --> 00:30:05,200
you cannot no only u.s

829
00:30:05,200 --> 00:30:08,159
yes but we see some issues not only in

830
00:30:08,159 --> 00:30:09,600
united states with something issues in

831
00:30:09,600 --> 00:30:12,399
europe too because it's not about that

832
00:30:12,399 --> 00:30:14,080
the terminal is not going to accept the

833
00:30:14,080 --> 00:30:16,000
transaction you see the car has that

834
00:30:16,000 --> 00:30:17,919
kind of technology inside of it

835
00:30:17,919 --> 00:30:19,039
activated

836
00:30:19,039 --> 00:30:21,200
and that's that's the main concern even

837
00:30:21,200 --> 00:30:23,679
even when you uh for example in europe

838
00:30:23,679 --> 00:30:24,720
don't have

839
00:30:24,720 --> 00:30:25,919
the

840
00:30:25,919 --> 00:30:29,039
that kind of technology activity of is

841
00:30:29,039 --> 00:30:30,880
cheap and signature let's say in united

842
00:30:30,880 --> 00:30:33,840
states you have human being here

843
00:30:33,840 --> 00:30:35,760
if the car has that kind of technology i

844
00:30:35,760 --> 00:30:36,960
if the policies are not applied

845
00:30:36,960 --> 00:30:38,559
correctly in the back end it could be

846
00:30:38,559 --> 00:30:41,200
possible to do this

847
00:30:41,200 --> 00:30:42,720
we noticed some issues with some

848
00:30:42,720 --> 00:30:46,399
companies here in europe as well so

849
00:30:47,760 --> 00:30:49,760
i don't know you have any questions or

850
00:30:49,760 --> 00:30:52,720
you're ready for the break

851
00:30:52,799 --> 00:30:54,430
yeah thank you

852
00:30:54,430 --> 00:31:00,779
[Applause]

