1
00:00:00,340 --> 00:00:04,509
good afternoon everyone I'm just a bitch

2
00:00:04,509 --> 00:00:07,589
and Sui gonna talk about JavaScript
tiptoe

3
00:00:07,589 --> 00:00:12,059
for the next for you or so minutes are

4
00:00:12,059 --> 00:00:15,099
like I said I'm just got to reach I'm

5
00:00:15,099 --> 00:00:18,590
what security researcher I did some
html5

6
00:00:18,590 --> 00:00:21,949
research on some raw sex sessions
research as well

7
00:00:21,949 --> 00:00:25,100
I'll I wasn't meant to stir

8
00:00:25,100 --> 00:00:30,220
at skewl 53 company and this tradition
mostly covers to research for the

9
00:00:30,220 --> 00:00:30,990
updates

10
00:00:30,990 --> 00:00:35,630
during that time now I am an information
security engineer at Google

11
00:00:35,630 --> 00:00:39,140
Google lease search company it's sort of
like

12
00:00:39,140 --> 00:00:45,170
non-chinese I do so when a suicide
disclaimer

13
00:00:45,170 --> 00:00:48,390
up all that you hear is

14
00:00:48,390 --> 00:00:52,329
based on my opinion not one of my
company's a

15
00:00:52,329 --> 00:00:55,559
ants for arnold's your day is this cold

16
00:00:55,559 --> 00:00:59,640
disclosed so let's talk maybe by

17
00:00:59,640 --> 00:01:03,239
asking you a question are

18
00:01:03,239 --> 00:01:06,490
raise your hands who things thats doing

19
00:01:06,490 --> 00:01:12,020
crypto in javascript is a good idea I
see

20
00:01:12,020 --> 00:01:17,130
like 1 per offense radio who think it is
a bad idea

21
00:01:17,130 --> 00:01:20,700
yes significantly

22
00:01:20,700 --> 00:01:24,210
more people so it's actually a

23
00:01:24,210 --> 00:01:27,549
terrible idea and you can even google it

24
00:01:27,549 --> 00:01:30,799
a so when you start

25
00:01:30,799 --> 00:01:34,030
asking questions up or just good crypto

26
00:01:34,030 --> 00:01:38,729
you really quickly arm car

27
00:01:38,729 --> 00:01:43,060
you really quickly come across the these
two blog post the first one by Thomas

28
00:01:43,060 --> 00:01:44,759
the check from matters on security

29
00:01:44,759 --> 00:01:48,720
and i'd JavaScript recover cryptography
considered harmful

30
00:01:48,720 --> 00:01:51,869
and that is pretty much the essence of
the blog post

31
00:01:51,869 --> 00:01:55,320
and the second one is from our nato some

32
00:01:55,320 --> 00:01:58,680
and i cant find all posts on JavaScript
oh and those two

33
00:01:58,680 --> 00:02:01,960
up researchers the people on

34
00:02:01,960 --> 00:02:07,030
mention several arguments why doing
Krypton JavaScript is pointless or

35
00:02:07,030 --> 00:02:10,110
even dangerous are and

36
00:02:10,110 --> 00:02:15,040
eat we tried to and divide all those
arguments

37
00:02:15,040 --> 00:02:18,629
the all come up to my certain three
buckets

38
00:02:18,629 --> 00:02:22,819
the first one is the telescope to talk
if it is not needed because

39
00:02:22,819 --> 00:02:26,819
if you have web application which is

40
00:02:26,819 --> 00:02:30,849
delivered by the server to the client
and the competition is done on the

41
00:02:30,849 --> 00:02:31,560
client

42
00:02:31,560 --> 00:02:36,800
specifically critical mutation first you
need to have an implicit trust in the

43
00:02:36,800 --> 00:02:37,470
server

44
00:02:37,470 --> 00:02:40,560
that's the JavaScript code but it
delivers is not backed out

45
00:02:40,560 --> 00:02:43,930
right and also units an SSL or TLS

46
00:02:43,930 --> 00:02:49,140
channel to protect against tampering
with today to buy you some minimal

47
00:02:49,140 --> 00:02:49,760
attacker

48
00:02:49,760 --> 00:02:52,940
so if you already have a secure channel
of communication

49
00:02:52,940 --> 00:02:56,260
wide doing to computational but this
well

50
00:02:56,260 --> 00:03:00,269
my like on the client side if you can
though do all the crypto

51
00:03:00,269 --> 00:03:04,950
server-side so this is one of the
arguments on the second one

52
00:03:04,950 --> 00:03:08,750
is that is dangerous doing Krypton
JavaScript is dangerous

53
00:03:08,750 --> 00:03:12,450
up mostly because I XSS so hearts to

54
00:03:12,450 --> 00:03:15,920
soul as a problem in Social Security

55
00:03:15,920 --> 00:03:19,489
and the firts arguments peace

56
00:03:19,489 --> 00:03:23,340
that it this actually heart soul it is
not only dangerous and

57
00:03:23,340 --> 00:03:27,060
not needed it's also hard because
JavaScript in itself doesn't give you a

58
00:03:27,060 --> 00:03:28,680
lot of so

59
00:03:28,680 --> 00:03:32,489
supports for to type operations what you
need to do

60
00:03:32,489 --> 00:03:35,870
in order to the crypto so obviously

61
00:03:35,870 --> 00:03:40,510
I'll JavaScript crypto is doomed to fail
so everyone

62
00:03:40,510 --> 00:03:45,230
read those blog posts read other are
books on the subject and so on and so on

63
00:03:45,230 --> 00:03:49,280
and the developer stop developing just
prefer to and we all lived happily ever

64
00:03:49,280 --> 00:03:50,140
after right

65
00:03:50,140 --> 00:03:54,129
well not necessarily as you can imagine

66
00:03:54,129 --> 00:03:58,060
its 2014 and we have multiple
javascripts

67
00:03:58,060 --> 00:04:01,610
crypto library so difference Tynes

68
00:04:01,610 --> 00:04:04,810
now for multiple complement its
libraries that no

69
00:04:04,810 --> 00:04:08,420
a just like a real expression libraries
and so on obverse

70
00:04:08,420 --> 00:04:12,360
asymmetry consumer to encryption
libraries first US implementation even

71
00:04:12,360 --> 00:04:15,810
a few OpenPGP and implementations in
javascript

72
00:04:15,810 --> 00:04:18,970
and a lot of use applications built

73
00:04:18,970 --> 00:04:23,720
upon those libraries and also as it is
usually in the crib the world pose a lot

74
00:04:23,720 --> 00:04:24,660
of crypto

75
00:04:24,660 --> 00:04:28,000
custom crib to propose delivered by some
people who

76
00:04:28,000 --> 00:04:31,830
think that's actually doing crib to
propose a fun thing to do

77
00:04:31,830 --> 00:04:35,449
so I'll those

78
00:04:35,449 --> 00:04:38,460
lots of re-up to research because

79
00:04:38,460 --> 00:04:42,820
nowadays in 2014 we have a lot of
applications to actually look at

80
00:04:42,820 --> 00:04:48,150
and by looking at those obligations we
may discover problems

81
00:04:48,150 --> 00:04:52,930
that's are not theoretical like they
used to be

82
00:04:52,930 --> 00:04:56,199
five years ago or seven years ago but
the problems

83
00:04:56,199 --> 00:05:00,650
that the JavaScript libraries actually
have like that actual libraries

84
00:05:00,650 --> 00:05:04,210
do have will now be tease and what kind
of wannabes

85
00:05:04,210 --> 00:05:07,570
other ants it is an interesting area

86
00:05:07,570 --> 00:05:10,720
research so has to stop

87
00:05:10,720 --> 00:05:15,729
arm so my plan on trying to understand
the current state of JavaScript to talk

88
00:05:15,729 --> 00:05:16,449
the fee

89
00:05:16,449 --> 00:05:19,820
was to first looked at a called of those
difference

90
00:05:19,820 --> 00:05:24,050
software projects to find it will not be
teasing them

91
00:05:24,050 --> 00:05:27,750
tried to try to understand the root
cause of this vulnerability Spears

92
00:05:27,750 --> 00:05:31,300
ultimately the root cause of the
vulnerabilities not to

93
00:05:31,300 --> 00:05:34,690
say stupid developer or whatever and
also some

94
00:05:34,690 --> 00:05:38,039
or so I'll its is usually

95
00:05:38,039 --> 00:05:41,289
lice much deeper like the the real truth
cause like

96
00:05:41,289 --> 00:05:45,320
maybe the language doesn't give you
certain protections for the platform

97
00:05:45,320 --> 00:05:48,789
so what I

98
00:05:48,789 --> 00:05:54,080
came to understand these that JavaScript
cryptography

99
00:05:54,080 --> 00:05:57,770
usually double nobody's seen in the
software

100
00:05:57,770 --> 00:06:02,250
can be classified into two buckets or
the root causes a personal knowledge is

101
00:06:02,250 --> 00:06:03,569
the first one

102
00:06:03,569 --> 00:06:06,729
our vulnerabilities arising from the
lock

103
00:06:06,729 --> 00:06:10,100
of support in the JavaScript language
for certain features

104
00:06:10,100 --> 00:06:15,190
or the quick solve the language and the
second thing

105
00:06:15,190 --> 00:06:18,949
are issues caused by what platforms laws

106
00:06:18,949 --> 00:06:23,690
or whether platform in security order
flow so

107
00:06:23,690 --> 00:06:26,910
what platform because we all know that
the web is broken

108
00:06:26,910 --> 00:06:31,150
probably will be broken for the next ten
years or so

109
00:06:31,150 --> 00:06:34,440
are but im most important parts is

110
00:06:34,440 --> 00:06:37,490
thats I tried

111
00:06:37,490 --> 00:06:40,770
not only to understand the state have
JavaScript to talk to

112
00:06:40,770 --> 00:06:45,030
the in isolation I tried to also
compared the issues

113
00:06:45,030 --> 00:06:48,720
perhaps I've encountered to

114
00:06:48,720 --> 00:06:51,830
make it quick to load critical done
other languages like

115
00:06:51,830 --> 00:06:56,930
other projects in PG meticulous you name
it open SSL

116
00:06:56,930 --> 00:07:01,000
whatever because op they there might be
some similar

117
00:07:01,000 --> 00:07:04,120
similarities in the causes of the global
Regents

118
00:07:04,120 --> 00:07:07,289
well I will try to demonstrate that I'm
to talk

119
00:07:07,289 --> 00:07:10,509
so the language issues

120
00:07:10,509 --> 00:07:14,000
are if you think

121
00:07:14,000 --> 00:07:17,009
that's the language issues

122
00:07:17,009 --> 00:07:20,710
to or language weird don't really matter
to cryptographic told

123
00:07:20,710 --> 00:07:24,919
because basically just mouth I mean how
hard can it be

124
00:07:24,919 --> 00:07:28,889
up you probably are going to failing

125
00:07:28,889 --> 00:07:33,060
such making such an argument cents I
can't even repeat that you are going to

126
00:07:33,060 --> 00:07:35,400
fail

127
00:07:35,400 --> 00:07:39,389
so let's take a look at the language
itself

128
00:07:39,389 --> 00:07:43,500
well javascripts is a dynamic language
obviously

129
00:07:43,500 --> 00:07:46,599
it's a language which is weakly typed it
has two

130
00:07:46,599 --> 00:07:50,930
pretty weird model of inheritance called
prototyping typical inheritance

131
00:07:50,930 --> 00:07:55,099
it has it is a language with them
implicit global objects

132
00:07:55,099 --> 00:07:58,870
which is interesting mean its own a and
the process pretty

133
00:07:58,870 --> 00:08:04,169
forgiving so up language itself can be
pretty treaty

134
00:08:04,169 --> 00:08:07,990
like I know some love you probably know
this already but you can call

135
00:08:07,990 --> 00:08:13,229
arbitrary JavaScript told by using just
six characters

136
00:08:13,229 --> 00:08:18,629
so this one is a bit the other 1

137
00:08:18,629 --> 00:08:21,960
and you can imagine that this kind of

138
00:08:21,960 --> 00:08:25,280
I'll this comes from

139
00:08:25,280 --> 00:08:28,289
three issues like it is a global object
are

140
00:08:28,289 --> 00:08:31,919
the which type in candy for giving
process while

141
00:08:31,919 --> 00:08:35,620
and and the type question

142
00:08:35,620 --> 00:08:38,909
so up if you encounter I'll try to do
any

143
00:08:38,909 --> 00:08:42,740
serious computation invest kind of
language you will probably face many

144
00:08:42,740 --> 00:08:43,760
problems

145
00:08:43,760 --> 00:08:47,760
so what problems can you face in
javascript when doing crypto well

146
00:08:47,760 --> 00:08:52,240
a obviously bus week typing so purse a
lot of tight compression site from

147
00:08:52,240 --> 00:08:55,320
type commission going on so you for
example

148
00:08:55,320 --> 00:08:58,529
I compared true Boolean true to

149
00:08:58,529 --> 00:09:01,860
like a true stringed up its true

150
00:09:01,860 --> 00:09:05,769
their equal Bob Holt is not equal to
polls

151
00:09:05,769 --> 00:09:08,910
also a must the minimum

152
00:09:08,910 --> 00:09:12,490
number in javascript is actually greater
than the maximum number in Johns Creek

153
00:09:12,490 --> 00:09:14,760
but this one is actually

154
00:09:14,760 --> 00:09:17,830
infinity and this one is minus infinity

155
00:09:17,830 --> 00:09:21,279
for some reason and while

156
00:09:21,279 --> 00:09:25,110
are no is an object each not actually an
object

157
00:09:25,110 --> 00:09:28,360
so yeah as a result

158
00:09:28,360 --> 00:09:32,769
developers rarely use are likes a strong
typing or

159
00:09:32,769 --> 00:09:36,000
rarely check types of the variables in
javascript

160
00:09:36,000 --> 00:09:39,190
and thus multiple problems with arising
from that

161
00:09:39,190 --> 00:09:42,850
them as well up for the crypto
especially

162
00:09:42,850 --> 00:09:46,260
so thank you at script to cart this is
an interrupted

163
00:09:46,260 --> 00:09:49,410
chat application with them only in

164
00:09:49,410 --> 00:09:52,620
JavaScript home so there was a famous

165
00:09:52,620 --> 00:09:56,300
vulnerability in cryptic out no and
there was an exploit

166
00:09:56,300 --> 00:10:00,870
I don't think it was published but are
the methodology of

167
00:10:00,870 --> 00:10:04,700
constructing such an expert was and
published them

168
00:10:04,700 --> 00:10:07,829
and this was named quick to cut does not
know logo for the

169
00:10:07,829 --> 00:10:10,970
gonna be wasn't times

170
00:10:10,970 --> 00:10:15,260
so a cryptic up try to generate the
private key

171
00:10:15,260 --> 00:10:19,600
which is obviously because you can you
can do I for everything from the Commons

172
00:10:19,600 --> 00:10:22,720
its the longest 64 random bytes

173
00:10:22,720 --> 00:10:26,750
and it uses the critic at Sundance in
function body if you take it

174
00:10:26,750 --> 00:10:30,209
heard sort of well the communication of
dysfunction

175
00:10:30,209 --> 00:10:34,950
it's actually 64 yet it is sixty-four
bytes long

176
00:10:34,950 --> 00:10:38,820
a but the character set up each bite is
actually

177
00:10:38,820 --> 00:10:42,459
when you take a look at those numbers
for you it's actually on the

178
00:10:42,459 --> 00:10:47,690
are decimal digits so as you can imagine
verse much less and should be

179
00:10:47,690 --> 00:10:51,380
from like if you if you try to generate
a sixty

180
00:10:51,380 --> 00:10:54,430
run 1664 run bites

181
00:10:54,430 --> 00:10:58,320
on bus you have 500 over

182
00:10:58,320 --> 00:11:03,019
500 bikes bits of entropy party if you
reduce that

183
00:11:03,019 --> 00:11:07,300
to using only digits well the matters
are much worse

184
00:11:07,300 --> 00:11:10,640
the so because of that and a few other
clothes

185
00:11:10,640 --> 00:11:14,709
the private keys are generated by some
versions of cryptic outs where

186
00:11:14,709 --> 00:11:19,079
but forcible for certain types of
doctors

187
00:11:19,079 --> 00:11:22,240
when this result this was the case
because

188
00:11:22,240 --> 00:11:25,670
are cryptic out didn't use types

189
00:11:25,670 --> 00:11:29,800
well enough you'd assume somethings
learn the language didn't really

190
00:11:29,800 --> 00:11:32,890
warned him against it the other thing

191
00:11:32,890 --> 00:11:36,370
is much properties again trip to cart

192
00:11:36,370 --> 00:11:39,810
so it's a multi-part each other P cation
so

193
00:11:39,810 --> 00:11:43,110
in order to start in a good to chat with
someone you first need to accept his

194
00:11:43,110 --> 00:11:44,440
public key and then

195
00:11:44,440 --> 00:11:47,769
generate a state secret now and then
encrypts

196
00:11:47,769 --> 00:11:51,470
are encrypts your communication with
using that showed

197
00:11:51,470 --> 00:11:55,139
so this is the Colts I'll when could
pick up checks

198
00:11:55,139 --> 00:11:59,190
whenever sort of new users appear on the
channel

199
00:11:59,190 --> 00:12:04,190
two checks whether you already have the
power the public you for the sender

200
00:12:04,190 --> 00:12:07,269
and if you do if you don't

201
00:12:07,269 --> 00:12:12,490
you except the public you that was just
sent and you generate just said secret

202
00:12:12,490 --> 00:12:15,920
and later on during the communication if
you want to the crib to message from

203
00:12:15,920 --> 00:12:16,600
someone

204
00:12:16,600 --> 00:12:19,550
well you simply check whether you
already have to shoot secret for this

205
00:12:19,550 --> 00:12:20,370
person

206
00:12:20,370 --> 00:12:24,019
and then checked this article is
actually two key seats

207
00:12:24,019 --> 00:12:27,279
H it's a key for all the

208
00:12:27,279 --> 00:12:30,579
authentication for H Mike and the key
for

209
00:12:30,579 --> 00:12:34,540
decryption so are you first order to get
the message

210
00:12:34,540 --> 00:12:37,610
I'll and then you the cryptid

211
00:12:37,610 --> 00:12:40,680
it all looks saying Arbab

212
00:12:40,680 --> 00:12:44,670
JavaScript is magic so let's meet

213
00:12:44,670 --> 00:12:48,370
use a Prato so underscore underscore
proto

214
00:12:48,370 --> 00:12:52,550
a is special magic property of every mom
just doctor

215
00:12:52,550 --> 00:12:57,440
the and in this particular case

216
00:12:57,440 --> 00:13:01,860
eats arm the problem value of proto is

217
00:13:01,860 --> 00:13:04,870
is a empty object Barack in Chi

218
00:13:04,870 --> 00:13:08,380
object is a through T value in
javascript soul

219
00:13:08,380 --> 00:13:12,180
if you treated as a beautiful body on
it's true

220
00:13:12,180 --> 00:13:16,430
as a result the first check public key
spot I'll

221
00:13:16,430 --> 00:13:19,529
actually let me go back the slide that
one's

222
00:13:19,529 --> 00:13:23,300
much you're so I'll

223
00:13:23,300 --> 00:13:27,399
I register as a user Prato I so

224
00:13:27,399 --> 00:13:31,279
crypto cats are me client of the victim
checks whether

225
00:13:31,279 --> 00:13:35,250
he already has a key with me but
actually up

226
00:13:35,250 --> 00:13:39,269
he thinks that he already has register
key with me this

227
00:13:39,269 --> 00:13:42,269
public key Prato Usotsuki value

228
00:13:42,269 --> 00:13:46,209
so this all this block never gets
executed so

229
00:13:46,209 --> 00:13:49,670
as a result the shirt secret is never
generated at all

230
00:13:49,670 --> 00:13:54,100
and that I'm I sent a message to him

231
00:13:54,100 --> 00:13:57,690
and he checked whether he hasn't said
secured with me again

232
00:13:57,690 --> 00:14:00,790
I'm Prato so yes

233
00:14:00,790 --> 00:14:04,279
this look we'll get executed Bob
actually did

234
00:14:04,279 --> 00:14:07,740
try to access the properties of the
proper object

235
00:14:07,740 --> 00:14:10,980
it's just an empty object so this
Coldwell

236
00:14:10,980 --> 00:14:14,649
for dinner so as a result whenever
someone named

237
00:14:14,649 --> 00:14:18,360
Prato joined a multi-party chart he
brought it up for everyone else

238
00:14:18,360 --> 00:14:21,600
they couldn't competed with each other
so

239
00:14:21,600 --> 00:14:25,839
again don't speak much I'm butts

240
00:14:25,839 --> 00:14:29,550
this is not unique to JavaScript at all
that's not the case

241
00:14:29,550 --> 00:14:32,820
I mean magic properties are present in
lot of

242
00:14:32,820 --> 00:14:36,000
save scripting or mm dynamic languages
the

243
00:14:36,000 --> 00:14:39,500
in iPhone as well so I was for example
were

244
00:14:39,500 --> 00:14:43,769
the large mean much attribute too much
property which

245
00:14:43,769 --> 00:14:49,160
can be sometimes used to out at the
logic of the application as well

246
00:14:49,160 --> 00:14:53,199
no silent arose I'll

247
00:14:53,199 --> 00:14:56,500
so if you create an array in javascript
and try to access

248
00:14:56,500 --> 00:15:00,230
are any index which is not present it
will return

249
00:15:00,230 --> 00:15:03,339
undefined its way but haven't seen that
respect

250
00:15:03,339 --> 00:15:07,959
in something meet and see bob's still
personal error being shown that you

251
00:15:07,959 --> 00:15:10,250
change jobs or something but you haven't

252
00:15:10,250 --> 00:15:14,360
say allocated memory for on

253
00:15:14,360 --> 00:15:18,120
and this is a silencer and that's pretty
common JavaScript

254
00:15:18,120 --> 00:15:21,320
are let's combine that with the others
think

255
00:15:21,320 --> 00:15:24,370
which is completely different well you
have

256
00:15:24,370 --> 00:15:27,519
this thing called unique old and
JavaScript

257
00:15:27,519 --> 00:15:31,149
strings are actually you need to know so
every character

258
00:15:31,149 --> 00:15:34,790
is snobs an ASCII value or

259
00:15:34,790 --> 00:15:38,860
arm something which character code is

260
00:15:38,860 --> 00:15:42,500
less than 256

261
00:15:42,500 --> 00:15:45,920
it's actually like every character
communicat called

262
00:15:45,920 --> 00:15:52,170
point so up those very often just for
developers use this

263
00:15:52,170 --> 00:15:55,420
use this function to checked for arm

264
00:15:55,420 --> 00:15:59,290
value over certain character within this
trend

265
00:15:59,290 --> 00:16:03,769
and the problem is that if you supply a
Unicode string there

266
00:16:03,769 --> 00:16:06,790
the resultant result of that is arm

267
00:16:06,790 --> 00:16:11,560
more than a bite value so it's more than
256

268
00:16:11,560 --> 00:16:15,620
and there's a lot about tax with unique
children's Oscar this is Dale

269
00:16:15,620 --> 00:16:19,279
I what I consider the best presentation
on the subject

270
00:16:19,279 --> 00:16:23,279
I'll so actually but doesn't matter to
crypto

271
00:16:23,279 --> 00:16:28,320
yeah he does you can combine the two
facts and do something called the sixth

272
00:16:28,320 --> 00:16:29,730
installment pack

273
00:16:29,730 --> 00:16:33,160
this in some obviously some Unicode code
point as well so

274
00:16:33,160 --> 00:16:37,730
this is an attack discovered by Daniel
passion by her

275
00:16:37,730 --> 00:16:41,070
up and it's an attack against and

276
00:16:41,070 --> 00:16:44,399
a yes liberi written in JavaScript
obviously

277
00:16:44,399 --> 00:16:48,800
and this attack allows the a taco to

278
00:16:48,800 --> 00:16:52,279
get the knowledge of the secret key on
the key used to

279
00:16:52,279 --> 00:16:56,250
encrypt into the encrypts and decrypts
the messages

280
00:16:56,250 --> 00:17:00,269
by simply encrypting something with an
unknown key

281
00:17:00,269 --> 00:17:03,740
and the crypt in the result back let's

282
00:17:03,740 --> 00:17:08,480
let's look I'll why is that happening

283
00:17:08,480 --> 00:17:13,939
but first when to learn a little bit
doubled yes

284
00:17:13,939 --> 00:17:18,270
so a yes in this case it's a yes 100% in

285
00:17:18,270 --> 00:17:21,959
28 it's a block cipher

286
00:17:21,959 --> 00:17:26,020
car and it's a block cipher constructed
of multiple rounds

287
00:17:26,020 --> 00:17:29,150
so the encryption looks like that

288
00:17:29,150 --> 00:17:33,590
first you have a plain text let's say
it's a single blocks away 16 byte

289
00:17:33,590 --> 00:17:37,460
a than you you have a key scheduling
mechanism so you

290
00:17:37,460 --> 00:17:41,890
basically you X or the plain text with
that with the around key

291
00:17:41,890 --> 00:17:45,850
and then those a few rounds all

292
00:17:45,850 --> 00:17:50,330
like sequential operations and this
operation some bites operation being

293
00:17:50,330 --> 00:17:50,850
done

294
00:17:50,850 --> 00:17:54,210
and times are is actually

295
00:17:54,210 --> 00:17:57,400
I'll combining

296
00:17:57,400 --> 00:18:00,760
the input the input with Dakota State

297
00:18:00,760 --> 00:18:03,910
muscle wouldn't a it looks i for you
have a state

298
00:18:03,910 --> 00:18:08,289
16 bytes state which changes so long
that arm

299
00:18:08,289 --> 00:18:12,429
Island algorithm and the resulting
stages a cipher text

300
00:18:12,429 --> 00:18:15,530
so this particular function up

301
00:18:15,530 --> 00:18:19,160
gets as an input the state the current
state of a cipher

302
00:18:19,160 --> 00:18:22,650
a and the as built this is a constant
value

303
00:18:22,650 --> 00:18:26,320
256 bytes by to pick on somebody

304
00:18:26,320 --> 00:18:30,080
but defined in the algorithm and this
one is the universe box but we'll talk

305
00:18:30,080 --> 00:18:31,059
about it

306
00:18:31,059 --> 00:18:35,150
um later so what will happen

307
00:18:35,150 --> 00:18:39,470
if you try to encrypt 16

308
00:18:39,470 --> 00:18:42,620
a character string which is what this
library used

309
00:18:42,620 --> 00:18:46,020
up box instead of putting like the

310
00:18:46,020 --> 00:18:49,620
byte values that are you putting when
unical values well

311
00:18:49,620 --> 00:18:55,240
to the summer bites function I you get a
state which is 16 characters

312
00:18:55,240 --> 00:19:00,799
but those are obviously more than each
of them use more than 256

313
00:19:00,799 --> 00:19:05,160
sold then this some bites function is
actually a mapping function so

314
00:19:05,160 --> 00:19:08,870
it modifies the state's by arm looking
at the

315
00:19:08,870 --> 00:19:12,140
entry for this constant textbook RA and

316
00:19:12,140 --> 00:19:15,809
up like producing the value which bar

317
00:19:15,809 --> 00:19:20,500
which is calm it's hard to describe in a
few words but basically

318
00:19:20,500 --> 00:19:23,840
having an input this is a constant input
and this is the state

319
00:19:23,840 --> 00:19:26,850
it others to state by looking

320
00:19:26,850 --> 00:19:30,720
to looking up by using as books are
right but in this particular case

321
00:19:30,720 --> 00:19:34,140
the end as books array has only 256

322
00:19:34,140 --> 00:19:40,039
bites are so the state here is more than
256

323
00:19:40,039 --> 00:19:43,950
so as a result you modified the state to
be in 16

324
00:19:43,950 --> 00:19:47,000
on different values ants yeah

325
00:19:47,000 --> 00:19:50,309
you basically kinda faulted the first
round of the

326
00:19:50,309 --> 00:19:53,870
a yes are safer which is

327
00:19:53,870 --> 00:19:58,120
kind of bad enough bob has more

328
00:19:58,120 --> 00:20:01,740
so another function being cold in each
of the rounds a bit

329
00:20:01,740 --> 00:20:05,980
yes key Islamic scholar step and that
makes column step

330
00:20:05,980 --> 00:20:09,440
actually silently like which covers the
state for you

331
00:20:09,440 --> 00:20:13,039
so you have this poisonous undefined
values

332
00:20:13,039 --> 00:20:16,780
and then the mix columns that without
going into many days

333
00:20:16,780 --> 00:20:20,000
it performs a lot of X or operations

334
00:20:20,000 --> 00:20:23,539
and while the operations

335
00:20:23,539 --> 00:20:26,700
a you in this case is basically

336
00:20:26,700 --> 00:20:30,990
undefined XR undefined XO 0 XO 0

337
00:20:30,990 --> 00:20:35,289
which obviously for JavaScript is zero
because why wouldn't be

338
00:20:35,289 --> 00:20:38,549
I so by Colin dysfunction

339
00:20:38,549 --> 00:20:42,280
you serve recovered the states to being
safe

340
00:20:42,280 --> 00:20:47,350
integers a instead of those we're done
defines which might trip to

341
00:20:47,350 --> 00:20:51,280
cipher for their own so

342
00:20:51,280 --> 00:20:54,539
a after the first round or

343
00:20:54,539 --> 00:20:57,870
just before the last step in the first
round

344
00:20:57,870 --> 00:21:01,090
no matter what the plane tix was even if
it was

345
00:21:01,090 --> 00:21:05,580
are you know this modified unico thing
you change the state of the a site for

346
00:21:05,580 --> 00:21:07,230
to 100 000

347
00:21:07,230 --> 00:21:11,470
16 but and then there's the Christian

348
00:21:11,470 --> 00:21:14,770
sold the decryption is obviously being
done with us

349
00:21:14,770 --> 00:21:19,270
so first you have are a few rounds so
harm the crypt in thing

350
00:21:19,270 --> 00:21:23,880
and then in the last round you get those
years back

351
00:21:23,880 --> 00:21:26,890
and let's see what happens down so

352
00:21:26,890 --> 00:21:30,039
there's an inverse a bite function which
is very similar to the

353
00:21:30,039 --> 00:21:33,830
some bites function it's just the
constant i right

354
00:21:33,830 --> 00:21:39,710
is actually an inverse I love a certain
kind of obvious but so far I used during

355
00:21:39,710 --> 00:21:42,850
encryption but this time we have

356
00:21:42,850 --> 00:21:46,280
16:00 bite so every

357
00:21:46,280 --> 00:21:50,130
item in the state will become the first
entry in Denver says book

358
00:21:50,130 --> 00:21:53,450
a right which happens to be 52
hexadecimal

359
00:21:53,450 --> 00:21:56,549
so as a result if you

360
00:21:56,549 --> 00:22:00,289
encrypt something unico dish with

361
00:22:00,289 --> 00:22:03,570
the key that you don't know and

362
00:22:03,570 --> 00:22:07,510
then the crypt the result with the same
unknown key

363
00:22:07,510 --> 00:22:10,679
I you reach back Tudor

364
00:22:10,679 --> 00:22:14,230
at the last step you have 16 no

365
00:22:14,230 --> 00:22:17,460
16 a.m. constant value or known values
to you

366
00:22:17,460 --> 00:22:20,789
and then those their last step exhorting
with their own key

367
00:22:20,789 --> 00:22:24,480
are for them mom for this particular
around

368
00:22:24,480 --> 00:22:28,080
so as a result the plaintiffs literacy
is actually

369
00:22:28,080 --> 00:22:32,809
up XR of the key with this 1652 bites so

370
00:22:32,809 --> 00:22:37,909
disabuse people back showing how week
typing and type question

371
00:22:37,909 --> 00:22:41,570
done in JavaScript can I actually a
result in

372
00:22:41,570 --> 00:22:45,919
having a really serious vulnerability
part again this is not something you

373
00:22:45,919 --> 00:22:47,110
need to JavaScript

374
00:22:47,110 --> 00:22:50,909
this is all that will not be different
this year

375
00:22:50,909 --> 00:22:54,140
TT RS and it allows to

376
00:22:54,140 --> 00:22:57,580
bypass the certificate validation what
happens so

377
00:22:57,580 --> 00:23:02,100
versa check you see a function which is
basically being called

378
00:23:02,100 --> 00:23:06,890
whenever I'll you need to validate
whether that such beget was

379
00:23:06,890 --> 00:23:10,740
issued by SCE like a trust issue we're
are

380
00:23:10,740 --> 00:23:13,900
and it obviously returns true or false
though

381
00:23:13,900 --> 00:23:17,200
actually returns an integer irons

382
00:23:17,200 --> 00:23:21,620
you know in C you don't have exceptions
so usually when you have an error

383
00:23:21,620 --> 00:23:26,080
signal you return to get that volume so

384
00:23:26,080 --> 00:23:30,280
because I've that whenever you the
attacker was able to trigger a an error

385
00:23:30,280 --> 00:23:32,110
condition dysfunction and is

386
00:23:32,110 --> 00:23:35,360
pretty easy to send an invalid
certificate

387
00:23:35,360 --> 00:23:40,279
in a certain way I'll the colour of
dysfunction which performed the whole

388
00:23:40,279 --> 00:23:42,429
chain of such a good validation

389
00:23:42,429 --> 00:23:46,299
a it compared the reason but the
resulting from this function

390
00:23:46,299 --> 00:23:49,929
from zero because obviously I if it's

391
00:23:49,929 --> 00:23:53,730
0 it's not a CA it's the certificate is
not trusted so

392
00:23:53,730 --> 00:23:56,960
aboard the whole chain and if it's not
zero

393
00:23:56,960 --> 00:24:00,289
well obviously it its the certificate is
fine

394
00:24:00,289 --> 00:24:03,679
so just accept the connection and yeah

395
00:24:03,679 --> 00:24:07,230
so -1 or whatever a message I'm

396
00:24:07,230 --> 00:24:11,429
value was there are get passed through
this love this book was never executed

397
00:24:11,429 --> 00:24:11,960
and

398
00:24:11,960 --> 00:24:15,140
you were allowed to to now set up but

399
00:24:15,140 --> 00:24:18,210
many developed on

400
00:24:18,210 --> 00:24:21,480
I would argue that language issues that
I

401
00:24:21,480 --> 00:24:24,870
have just described they're not you need
to just get that all

402
00:24:24,870 --> 00:24:29,460
even in crypto and you can overcome them
you can overcome them by you

403
00:24:29,460 --> 00:24:32,640
for example using the at my scripts i've
us

404
00:24:32,640 --> 00:24:36,059
on trick malt you can

405
00:24:36,059 --> 00:24:40,409
use type enforcing by using certain just
to compile a switch

406
00:24:40,409 --> 00:24:44,120
do checking during the compilation step
of

407
00:24:44,120 --> 00:24:47,659
of from building the software

408
00:24:47,659 --> 00:24:51,320
and obviously development practices are
pretty important

409
00:24:51,320 --> 00:24:54,690
in avoiding this time sold vulnerability
so you have

410
00:24:54,690 --> 00:24:58,490
are code reviews continuous integration

411
00:24:58,490 --> 00:25:01,700
unit testing and whatsoever like that

412
00:25:01,700 --> 00:25:05,070
the real sane development practices that
are

413
00:25:05,070 --> 00:25:08,500
through for whatever kinda sorta you do
about

414
00:25:08,500 --> 00:25:12,510
the farm or worse issues

415
00:25:12,510 --> 00:25:15,549
with just a crypto our web platform
shoes so

416
00:25:15,549 --> 00:25:18,990
the thing is is the just cold doesn't

417
00:25:18,990 --> 00:25:23,260
execute in sort of and entity which is
unknown

418
00:25:23,260 --> 00:25:27,320
it's actually very concrete entity in
France in the JavaScript engine

419
00:25:27,320 --> 00:25:31,730
are a few of those a trance in an
execution environment for example you

420
00:25:31,730 --> 00:25:32,460
can from

421
00:25:32,460 --> 00:25:35,840
in a browser process sorry can run on
the server

422
00:25:35,840 --> 00:25:40,690
like node.js for example I'll the cold
cuz sox's different API

423
00:25:40,690 --> 00:25:44,059
like say the dome when you run the
brosser or

424
00:25:44,059 --> 00:25:47,789
with crypto for some process are brought
an extension API 0

425
00:25:47,789 --> 00:25:51,110
whatever like node.js cuz for example
bindings for

426
00:25:51,110 --> 00:25:54,650
doing socket connections I'll

427
00:25:54,650 --> 00:25:57,940
and even when even

428
00:25:57,940 --> 00:26:01,100
running in this environment can be
different because you have

429
00:26:01,100 --> 00:26:04,120
different restrictions placed upon the
cult

430
00:26:04,120 --> 00:26:07,640
the most famous one in West the same
origin policy

431
00:26:07,640 --> 00:26:10,650
but there are multiple other policies
that might affect whatcha

432
00:26:10,650 --> 00:26:14,590
coat can or cannot to like content
security policy

433
00:26:14,590 --> 00:26:17,870
I from sandbox expression security
policies and so on and so on

434
00:26:17,870 --> 00:26:21,039
and vulnerabilities arising from

435
00:26:21,039 --> 00:26:25,210
up those by issues

436
00:26:25,210 --> 00:26:28,289
are much more important crypto obviously

437
00:26:28,289 --> 00:26:32,169
excesses just lame example because

438
00:26:32,169 --> 00:26:35,860
we all know XSS is not going to be

439
00:26:35,860 --> 00:26:39,020
are solved as a problem

440
00:26:39,020 --> 00:26:42,100
arm all over the board you need to

441
00:26:42,100 --> 00:26:46,890
all solve the problem for yourself
usually for europe station

442
00:26:46,890 --> 00:26:50,590
but what I would argue is that you need
to look at

443
00:26:50,590 --> 00:26:54,500
cross-site scripting as an equivalent of
remote code execution

444
00:26:54,500 --> 00:26:58,250
especially in trip to Labor's because
excess basically

445
00:26:58,250 --> 00:27:02,240
bypass any sort of security guarantees
that show

446
00:27:02,240 --> 00:27:06,360
days compress within the same origin so
for example you can replace a

447
00:27:06,360 --> 00:27:10,039
random number generator are XP trying to
keep your

448
00:27:10,039 --> 00:27:13,799
like your almost limitless seen in that
area

449
00:27:13,799 --> 00:27:17,700
ans are XSS vulnerabilities in crypto

450
00:27:17,700 --> 00:27:20,760
libraries open to applications obviously
yes there are

451
00:27:20,760 --> 00:27:25,149
like the most famous one hello my you
you

452
00:27:25,149 --> 00:27:30,049
so a made a low this was an open pit
heap implementations on a script

453
00:27:30,049 --> 00:27:34,539
I'll and its was really combined with
Gmail interface

454
00:27:34,539 --> 00:27:38,049
gmail is with me from global

455
00:27:38,049 --> 00:27:41,510
a so a when every

456
00:27:41,510 --> 00:27:44,990
whenever you test something like this
the most

457
00:27:44,990 --> 00:27:48,820
obvious thing to do is check for the
Nexus S

458
00:27:48,820 --> 00:27:52,270
so what you do is you fax your victims
public key which is

459
00:27:52,270 --> 00:27:57,370
public by definition and you encrypt a
message to this little to this

460
00:27:57,370 --> 00:28:01,080
victim and the message says

461
00:28:01,080 --> 00:28:04,570
I am geo Merewether like standards

462
00:28:04,570 --> 00:28:09,450
DOMA to suspect ans obviously dissects
tension

463
00:28:09,450 --> 00:28:13,220
perform to hold the crips and asking for
past race I'm

464
00:28:13,220 --> 00:28:17,289
and India Dance after the Christian
inserted

465
00:28:17,289 --> 00:28:20,730
to text back into Gmail user interface
obviously

466
00:28:20,730 --> 00:28:24,460
liking and sort of featuring escaping
just used you know HTML

467
00:28:24,460 --> 00:28:27,990
and be done with it because we need to
actually makes everyone wants to

468
00:28:27,990 --> 00:28:32,220
right so obviously a we are using this

469
00:28:32,220 --> 00:28:36,200
crypto application written in JavaScript
you cruise

470
00:28:36,200 --> 00:28:40,520
execute arbitrary code in your Gmail
interface which is

471
00:28:40,520 --> 00:28:44,130
already pretty bad but nobody know
because he

472
00:28:44,130 --> 00:28:47,649
don't still kept access to the private
keys right

473
00:28:47,649 --> 00:28:52,570
so let's take a look trip to come back
it had a similar vulnerabilities

474
00:28:52,570 --> 00:28:56,120
it didn't feature the username of
conversation name so you could create a

475
00:28:56,120 --> 00:28:57,990
second trip to the client just

476
00:28:57,990 --> 00:29:02,440
the remove the validation being done
done totally in javascript

477
00:29:02,440 --> 00:29:05,830
when entering by using input you so

478
00:29:05,830 --> 00:29:09,159
you put a nexus bailouts within your
username and

479
00:29:09,159 --> 00:29:12,929
try to chat with someone arm using
Cricut as well

480
00:29:12,929 --> 00:29:16,020
and obviously in your HTML excess
pop-top

481
00:29:16,020 --> 00:29:19,470
done a so critical had

482
00:29:19,470 --> 00:29:23,140
two versions at the time it was used as
a Chrome extension

483
00:29:23,140 --> 00:29:27,080
and in that case we were already
protected by content security policy

484
00:29:27,080 --> 00:29:27,789
enforcement

485
00:29:27,789 --> 00:29:31,799
so we couldn't execute and you just call
to be put on the spot

486
00:29:31,799 --> 00:29:35,480
user interface which is bats by art

487
00:29:35,480 --> 00:29:39,370
than again pretty limited by the in
Firefox

488
00:29:39,370 --> 00:29:42,539
the mothers are pretty worse because in

489
00:29:42,539 --> 00:29:46,169
Firefox you not only get the Nexus S
within the

490
00:29:46,169 --> 00:29:50,260
Adam cold you also

491
00:29:50,260 --> 00:29:54,140
can execute arbitrary code on the
machine as well because Firefox keeps

492
00:29:54,140 --> 00:29:57,679
such a API available to JavaScript

493
00:29:57,679 --> 00:30:01,830
I'll in the in Firefox add-on so this

494
00:30:01,830 --> 00:30:05,630
means that basically through trip to cut
i can assume I were on a computer

495
00:30:05,630 --> 00:30:09,039
done again RC is no

496
00:30:09,039 --> 00:30:12,210
unique to JavaScript or you

497
00:30:12,210 --> 00:30:16,309
web crypto I see vulnerabilities are

498
00:30:16,309 --> 00:30:20,700
still present they're pretty rare I
agree but they are still present

499
00:30:20,700 --> 00:30:25,220
incurrence native widely trusted
application site for example

500
00:30:25,220 --> 00:30:28,860
Nokia less you could poem to client of

501
00:30:28,860 --> 00:30:34,750
mature lesbo likes Eric upon the client
by triggering a buffer overflow

502
00:30:34,750 --> 00:30:38,370
and this is also implemented from this
year

503
00:30:38,370 --> 00:30:41,390
hmm another title issues our timing
sucks

504
00:30:41,390 --> 00:30:46,429
channels so though certain functions in
crypto

505
00:30:46,429 --> 00:30:50,230
protocols thats you need to execute will
follow

506
00:30:50,230 --> 00:30:55,490
so the need to execute without producing
any sort of time to decide

507
00:30:55,490 --> 00:30:58,580
channel especially time being so
channels like

508
00:30:58,580 --> 00:31:01,679
for any combinations of in both

509
00:31:01,679 --> 00:31:05,559
a the coach should run in a constant
them all the time

510
00:31:05,559 --> 00:31:08,899
and this is usually tricky to do

511
00:31:08,899 --> 00:31:13,640
usual you it is politically to do in
javascript singer in general

512
00:31:13,640 --> 00:31:17,409
Bart for example this is an example from
OpenPGP JS

513
00:31:17,409 --> 00:31:20,710
when it's arm decoded and I'm

514
00:31:20,710 --> 00:31:25,820
RC putting up this kind of putting in
our same needs to be executed got some

515
00:31:25,820 --> 00:31:26,750
time in order to

516
00:31:26,750 --> 00:31:30,620
avoid the its compassion by how talk

517
00:31:30,620 --> 00:31:33,669
and so but this function obviously has

518
00:31:33,669 --> 00:31:37,179
multiple branches so this cold will only
execute

519
00:31:37,179 --> 00:31:40,950
which takes some time when this
condition is Matt

520
00:31:40,950 --> 00:31:45,269
there's also some ya think going on here
like to return a person re-edited

521
00:31:45,269 --> 00:31:49,480
mom so this particular French is the
constant I'm

522
00:31:49,480 --> 00:31:52,500
bob's and this is a problem for crypto

523
00:31:52,500 --> 00:31:56,149
by the game this is not something you
need to jump off to or with crypto at

524
00:31:56,149 --> 00:31:56,909
all

525
00:31:56,909 --> 00:32:01,070
are we have spent time so channels and
we have exploded payments a chance

526
00:32:01,070 --> 00:32:02,190
already in

527
00:32:02,190 --> 00:32:05,539
love the in this example this year in
Java

528
00:32:05,539 --> 00:32:08,580
secure socket extensions so

529
00:32:08,580 --> 00:32:12,730
these kinds officials are also present
in other types of

530
00:32:12,730 --> 00:32:15,909
I'll crypto environments let's say I'm

531
00:32:15,909 --> 00:32:19,830
the best something more like real will
probably remember

532
00:32:19,830 --> 00:32:24,789
companies it was snobs even a cripple
nobility

533
00:32:24,789 --> 00:32:30,059
it was justice I need to use the word he
was stupid

534
00:32:30,059 --> 00:32:34,360
it was stupid like a bunch checking

535
00:32:34,360 --> 00:32:39,440
just it just so happens that it was so

536
00:32:39,440 --> 00:32:43,330
like a bomb sucking equip the software
and through that

537
00:32:43,330 --> 00:32:46,450
arm the client could extract

538
00:32:46,450 --> 00:32:50,409
arbitrary no not three arbitrary but a
memory

539
00:32:50,409 --> 00:32:54,110
no contents over server bypassing

540
00:32:54,110 --> 00:32:57,370
to say confidentiality promises of the

541
00:32:57,370 --> 00:33:01,340
yes stock on fortunately

542
00:33:01,340 --> 00:33:04,390
this is JavaScript we don't have buffer
overflows here like

543
00:33:04,390 --> 00:33:08,460
we are save its we don't have those kind
of problems

544
00:33:08,460 --> 00:33:12,860
any there's no way right

545
00:33:12,860 --> 00:33:16,169
wrong well you know

546
00:33:16,169 --> 00:33:19,529
does but is not it's not an obstruct

547
00:33:19,529 --> 00:33:23,710
cloudy thing it's something that's runs
in an engine and engine has

548
00:33:23,710 --> 00:33:28,789
when the event is in it in this
particular case

549
00:33:28,789 --> 00:33:32,380
even this year but was there were two
wheeler abilities in indifference

550
00:33:32,380 --> 00:33:36,340
JavaScript engines one used by Firefox
and the other

551
00:33:36,340 --> 00:33:39,950
used by WebKit blink or whatever

552
00:33:39,950 --> 00:33:43,340
and these women are bitchy solo the
attacker by

553
00:33:43,340 --> 00:33:47,409
as you can see by using JavaScript
payload

554
00:33:47,409 --> 00:33:51,340
a in this particular case you just
overwrote the

555
00:33:51,340 --> 00:33:55,190
getter for the bike length property
often are a buffer

556
00:33:55,190 --> 00:33:58,640
object and make it so some two terms a

557
00:33:58,640 --> 00:34:04,000
pretty big value are I'm through that
the attacker was able to read and write

558
00:34:04,000 --> 00:34:07,039
arbitrary memory addresses

559
00:34:07,039 --> 00:34:10,530
a so no we do have problems with

560
00:34:10,530 --> 00:34:16,320
for memory safety when doing Krypton
JavaScript

561
00:34:16,320 --> 00:34:19,389
home we needed take a look at the

562
00:34:19,389 --> 00:34:22,780
grocers as an attack surface as well

563
00:34:22,780 --> 00:34:26,669
because the attackers can target not
your applications they can target your

564
00:34:26,669 --> 00:34:27,710
browser

565
00:34:27,710 --> 00:34:33,310
and the grocer is lot pretty large
Celtics overseas presidential parser

566
00:34:33,310 --> 00:34:37,740
constantly changing it has network stock
eat finally has adjusted

567
00:34:37,740 --> 00:34:40,800
engine also very day none

568
00:34:40,800 --> 00:34:44,389
and the problem is that yup Occoquan

569
00:34:44,389 --> 00:34:48,190
trigger the JavaScript based or
achievement based

570
00:34:48,190 --> 00:34:51,520
pales against the brosser by simply

571
00:34:51,520 --> 00:34:55,000
home enticing you too

572
00:34:55,000 --> 00:34:59,040
visit the URL so what happens when

573
00:34:59,040 --> 00:35:03,770
the other car actually executes or
exploits a vulnerability

574
00:35:03,770 --> 00:35:06,970
in the browser well

575
00:35:06,970 --> 00:35:10,520
it depends on a brosser so in Firefox
for example

576
00:35:10,520 --> 00:35:14,910
it's pretty much came over because the
whole boss is a simple process

577
00:35:14,910 --> 00:35:19,910
in IE for a multi-purpose assist and
they are kind of some books and

578
00:35:19,910 --> 00:35:23,980
also some expert indications the
employed there

579
00:35:23,980 --> 00:35:27,710
I need to sale in Chrome chrome
currencies to

580
00:35:27,710 --> 00:35:31,880
best one in my opinion when it comes to
some boxing things

581
00:35:31,880 --> 00:35:36,160
being run within the browser because in
in Chrome

582
00:35:36,160 --> 00:35:39,880
you have a sandbox a it was a clear
separation

583
00:35:39,880 --> 00:35:43,130
every JavaScript islam actually in the
render a process

584
00:35:43,130 --> 00:35:46,920
and a separate render a process more or
less for every tab

585
00:35:46,920 --> 00:35:50,960
that you visit are and in order to

586
00:35:50,960 --> 00:35:55,980
XP trade for example secrets from that
stab units not only D to exploit the

587
00:35:55,980 --> 00:35:57,380
brosser here

588
00:35:57,380 --> 00:36:00,720
you need to escape the Sun books and

589
00:36:00,720 --> 00:36:05,540
these are just you know is subjects as
kato still present but

590
00:36:05,540 --> 00:36:09,310
its you need to have to have it is

591
00:36:09,310 --> 00:36:13,670
on I would argue that this is a malware
problem

592
00:36:13,670 --> 00:36:17,140
I mean if you want to be so paranoid are

593
00:36:17,140 --> 00:36:21,260
to try to protect against

594
00:36:21,260 --> 00:36:25,050
your javascript application from

595
00:36:25,050 --> 00:36:29,280
the exploits targeted to the brosser
similar if its rights to protect the

596
00:36:29,280 --> 00:36:30,960
native tripped up the cations

597
00:36:30,960 --> 00:36:34,869
from someone securing new kernel exploit

598
00:36:34,869 --> 00:36:39,130
and action yet this has been done like
nobody even

599
00:36:39,130 --> 00:36:43,109
you even you Inder I think you'll be
mentioned that

600
00:36:43,109 --> 00:36:46,420
nobody has been bypassed byee truck

601
00:36:46,420 --> 00:36:49,740
enforcement's administration authorities
by simply stunning

602
00:36:49,740 --> 00:36:53,450
keylogger on the victim's machine so
yeah there was snow

603
00:36:53,450 --> 00:36:56,589
critical thing you may just on the
machine

604
00:36:56,589 --> 00:37:01,700
I and food chains crypto your browser
becomes your operating system so

605
00:37:01,700 --> 00:37:05,150
whatever countermeasures you have been
host security

606
00:37:05,150 --> 00:37:08,240
you should have them in Bossa security
as well in order to be

607
00:37:08,240 --> 00:37:12,300
to have are comparable levels of

608
00:37:12,300 --> 00:37:15,820
safety up unfortunately

609
00:37:15,820 --> 00:37:18,900
these two environments like the all

610
00:37:18,900 --> 00:37:22,440
operating system programs or processes

611
00:37:22,440 --> 00:37:25,700
and web applications

612
00:37:25,700 --> 00:37:30,140
up have one really big difference

613
00:37:30,140 --> 00:37:34,740
and the differences in the application
delivery face

614
00:37:34,740 --> 00:37:38,300
we just basically you don't install web
sites

615
00:37:38,300 --> 00:37:41,540
in order to execute so the arbitrary
cult

616
00:37:41,540 --> 00:37:45,880
women your say operating system or as a
separate application

617
00:37:45,880 --> 00:37:50,460
you need to basically download it
somehow to verify it

618
00:37:50,460 --> 00:37:55,589
and run it bursts the process doing that
and nobody does

619
00:37:55,589 --> 00:38:00,280
are like constantly update her
obligations and downloading

620
00:38:00,280 --> 00:38:03,619
hundreds of software packages daily

621
00:38:03,619 --> 00:38:08,190
I'm butts you do exactly that when does
it go up

622
00:38:08,190 --> 00:38:12,570
you executes like hundreds of megabytes
of cold

623
00:38:12,570 --> 00:38:16,599
arbitrary cold coming off through HTTP
HTTPS whatever

624
00:38:16,599 --> 00:38:22,770
from value some regions and yes is there
can be a an explosion in there somewhere

625
00:38:22,770 --> 00:38:26,609
and you have you're very weak in

626
00:38:26,609 --> 00:38:31,290
trying to verify all that's right sold
the scolded believer in executions

627
00:38:31,290 --> 00:38:32,290
pretty transparent

628
00:38:32,290 --> 00:38:36,770
for the end-user arms the only thing
with protects you

629
00:38:36,770 --> 00:38:41,200
the same origin policy like that ever
hope to anyone

630
00:38:41,200 --> 00:38:44,780
at least in in the crib toward that's a
very weak

631
00:38:44,780 --> 00:38:48,530
protection mechanism but you have

632
00:38:48,530 --> 00:38:51,859
so is Jay script or actually

633
00:38:51,859 --> 00:38:56,060
doomed next so we never look at it

634
00:38:56,060 --> 00:38:59,490
biggest you create a perfect actress
Asprey

635
00:38:59,490 --> 00:39:02,800
a JS application its constant I'm

636
00:39:02,800 --> 00:39:07,030
personal site China's at all you ensure
that your several never gets compromised

637
00:39:07,030 --> 00:39:10,820
and you also and to trust a few users
but you don't back to your coat

638
00:39:10,820 --> 00:39:14,920
you put this in a web sites have perfect
forward secrecy

639
00:39:14,920 --> 00:39:18,040
the Yenisei never gets you peace
whatever

640
00:39:18,040 --> 00:39:21,670
you seven over HTTPS with absurdly large

641
00:39:21,670 --> 00:39:25,310
summitry the size and you're safe until

642
00:39:25,310 --> 00:39:29,619
anyone just to get a bill so as
exploding supply in a separate operate

643
00:39:29,619 --> 00:39:33,030
or find something original police by bus

644
00:39:33,030 --> 00:39:37,960
are so are we doomed I would say

645
00:39:37,960 --> 00:39:41,060
maybe bob's those

646
00:39:41,060 --> 00:39:44,420
hope extensions can help you a lot

647
00:39:44,420 --> 00:39:47,990
also extensions these are not plugins

648
00:39:47,990 --> 00:39:51,839
these are just saw school applications
as well so for you to have one for

649
00:39:51,839 --> 00:39:54,200
PayPal to have one for suffering you can
have one for

650
00:39:54,200 --> 00:39:57,470
chrome on chromium and

651
00:39:57,470 --> 00:40:02,050
actually it said just get the pic Asian
so you can use the same just gregory's

652
00:40:02,050 --> 00:40:06,520
a within the context of the extension
bob that differences

653
00:40:06,520 --> 00:40:09,900
that the extensions Ron in

654
00:40:09,900 --> 00:40:13,730
sold off isolated world ans

655
00:40:13,730 --> 00:40:17,440
you also need to install them so this is
a

656
00:40:17,440 --> 00:40:20,900
hopefully conscious decision by the user
to install or

657
00:40:20,900 --> 00:40:24,140
great extension a

658
00:40:24,140 --> 00:40:28,609
with Bro successes you get secure and
signed call delivery from

659
00:40:28,609 --> 00:40:31,790
lot of webster's let's say I'll

660
00:40:31,790 --> 00:40:34,960
well unless you 12 well

661
00:40:34,960 --> 00:40:39,470
install the expansions manually by you
well

662
00:40:39,470 --> 00:40:43,890
ignoring the warning so that the process
me give you

663
00:40:43,890 --> 00:40:47,500
you have way better separation from
other web sites so

664
00:40:47,500 --> 00:40:50,790
basically from other arbitrary Colts
that can trigger

665
00:40:50,790 --> 00:40:56,569
exploiting a brosser then just a thin
layer of same origin policy

666
00:40:56,569 --> 00:40:59,609
you get much smaller attack surface
because

667
00:40:59,609 --> 00:41:03,010
basically you only care about your
impossible to your application

668
00:41:03,010 --> 00:41:06,859
and yup that's York surface here

669
00:41:06,859 --> 00:41:09,880
and also control you get

670
00:41:09,880 --> 00:41:14,170
are it's not perfect bart's you got a
process isolation

671
00:41:14,170 --> 00:41:17,800
so you have a guarantee that show but
also will run

672
00:41:17,800 --> 00:41:22,540
at least in a separate process like
operating system-level process

673
00:41:22,540 --> 00:41:25,890
there are still open problems for
example arm

674
00:41:25,890 --> 00:41:28,910
the timing such channels in Dallas but
even if you

675
00:41:28,910 --> 00:41:32,410
your javascript cold looking at it but
has no said Charles

676
00:41:32,410 --> 00:41:35,599
your actual jostled engine

677
00:41:35,599 --> 00:41:38,890
up they're pretty aggressive in
optimizing things because you know bro

678
00:41:38,890 --> 00:41:40,560
so awesome

679
00:41:40,560 --> 00:41:44,750
and what not so they can optimizer cold

680
00:41:44,750 --> 00:41:48,079
you know and and make it non constant
I'm

681
00:41:48,079 --> 00:41:51,290
a so what the man about a

682
00:41:51,290 --> 00:41:54,440
gave a really beautiful example of how
you can actually I'll

683
00:41:54,440 --> 00:41:58,069
practically exploit a those
possibilities

684
00:41:58,069 --> 00:42:01,329
we also don't have and and look at
Cleveland and look

685
00:42:01,329 --> 00:42:04,990
protects secrets from being swept out to
disk we don't have

686
00:42:04,990 --> 00:42:08,089
that in Johns Creek so your secrets can
always end up

687
00:42:08,089 --> 00:42:12,430
a disc under more stress we don't yet
have the Secure Store

688
00:42:12,430 --> 00:42:15,430
a we have to wait for with tiptoe to
deliver it those

689
00:42:15,430 --> 00:42:19,140
specification about the implementation
his

690
00:42:19,140 --> 00:42:22,650
I would say pretty slowly progressing

691
00:42:22,650 --> 00:42:26,440
also bus yeah extension currently
silently out out

692
00:42:26,440 --> 00:42:30,810
updates so you can download an extension
how did the Colts

693
00:42:30,810 --> 00:42:35,270
about a month later he might be a
different extension and issued don't

694
00:42:35,270 --> 00:42:39,369
gets to agreed to an upgrade to its
silently being done

695
00:42:39,369 --> 00:42:42,710
and those from quips with process
isolation some

696
00:42:42,710 --> 00:42:45,869
certain situations under under which you
might end up

697
00:42:45,869 --> 00:42:49,720
show showing the process someone so the
summary

698
00:42:49,720 --> 00:42:53,369
just picked so has similar problems for
me crypto

699
00:42:53,369 --> 00:42:57,270
a the library quality is way better than
they used to be

700
00:42:57,270 --> 00:43:00,960
and actually it's not the ex assess
which is the problem

701
00:43:00,960 --> 00:43:05,210
being mention its actually sold off
pretty large

702
00:43:05,210 --> 00:43:08,480
a box office coming from the process I'm

703
00:43:08,480 --> 00:43:13,280
and you can solve the problems that the
other researchers pointed out by

704
00:43:13,280 --> 00:43:16,300
multiple ways most the just being

705
00:43:16,300 --> 00:43:19,510
are developing your software in the same
way

706
00:43:19,510 --> 00:43:23,589
or having code reviews all this boring

707
00:43:23,589 --> 00:43:28,050
are things Witcher actually essential
but nobody mentions it

708
00:43:28,050 --> 00:43:31,810
are so the platform shoes

709
00:43:31,810 --> 00:43:36,280
are way more difficult to to handle
parts

710
00:43:36,280 --> 00:43:39,520
you can have relatively safe

711
00:43:39,520 --> 00:43:42,579
just have to program fee when being run

712
00:43:42,579 --> 00:43:45,810
in a browser extension and this is

713
00:43:45,810 --> 00:43:50,440
the parent if you have any questions I
would be

714
00:43:50,440 --> 00:43:51,670
very happy tot think

