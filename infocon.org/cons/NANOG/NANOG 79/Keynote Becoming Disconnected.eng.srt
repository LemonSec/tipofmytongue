1
00:00:00,000 --> 00:00:03,030
Hey

2
00:00:00,990 --> 00:00:03,030
[Music]

3
00:00:03,440 --> 00:00:07,659
you

4
00:00:04,360 --> 00:00:07,659
[Music]

5
00:00:10,360 --> 00:00:19,250
good morning and welcome to the second

6
00:00:15,470 --> 00:00:22,730
day of virtual Nanog 79 coming to you

7
00:00:19,250 --> 00:00:25,400
live from the entire world I'd like to

8
00:00:22,730 --> 00:00:28,279
welcome you my name is Alex I'll be your

9
00:00:25,400 --> 00:00:32,780
host this morning a couple of quick

10
00:00:28,279 --> 00:00:35,900
things before we start there's a women

11
00:00:32,780 --> 00:00:39,470
in technology lunch virtual it's on the

12
00:00:35,900 --> 00:00:43,339
agenda please don't forget the virtual

13
00:00:39,470 --> 00:00:44,720
Expo fill out the daily surveys we're

14
00:00:43,340 --> 00:00:48,320
going to be doing a special survey

15
00:00:44,720 --> 00:00:51,560
during the presentation today to see

16
00:00:48,320 --> 00:00:55,010
what you want to have as off breakouts

17
00:00:51,560 --> 00:00:59,870
later in the conference stay tuned for

18
00:00:55,010 --> 00:01:03,290
that then without further ado mr. Tom

19
00:00:59,870 --> 00:01:07,970
Daley advisor at fastly with Tuesday's

20
00:01:03,290 --> 00:01:10,460
keynote thanks Alex good morning

21
00:01:07,970 --> 00:01:12,140
everyone if you're I guess west of

22
00:01:10,460 --> 00:01:13,759
Boston and good afternoon everyone if

23
00:01:12,140 --> 00:01:17,060
you're east of Boston it's a pleasure

24
00:01:13,759 --> 00:01:20,240
and an honor to be here during this

25
00:01:17,060 --> 00:01:23,450
keynote I am hopefully going to convince

26
00:01:20,240 --> 00:01:25,850
you that certain aspects of our network

27
00:01:23,450 --> 00:01:28,340
are becoming disconnected and we may or

28
00:01:25,850 --> 00:01:30,318
may not realize it if you want to shoot

29
00:01:28,340 --> 00:01:34,460
me comments afterwards my email address

30
00:01:30,319 --> 00:01:36,859
is below it's TJ d @ Q 7 dot IO a tiny

31
00:01:34,460 --> 00:01:38,329
bit of housekeeping to start which is

32
00:01:36,859 --> 00:01:39,859
some acknowledgments for engineers

33
00:01:38,329 --> 00:01:41,359
around the world that helped contribute

34
00:01:39,859 --> 00:01:42,979
to this presentation

35
00:01:41,359 --> 00:01:45,729
throughout the presentation the

36
00:01:42,979 --> 00:01:47,960
perspective will be through that of a

37
00:01:45,729 --> 00:01:50,899
operator that is building content

38
00:01:47,960 --> 00:01:53,059
delivery and edge compute and while the

39
00:01:50,899 --> 00:01:56,030
perspective comes from my work at fastly

40
00:01:53,060 --> 00:02:00,049
the views in this talk don't necessarily

41
00:01:56,030 --> 00:02:01,369
reflect the viewpoints of fastly so

42
00:02:00,049 --> 00:02:05,030
there are some major technological

43
00:02:01,369 --> 00:02:07,700
themes that are going on as networks are

44
00:02:05,030 --> 00:02:10,568
being built around the world today we're

45
00:02:07,700 --> 00:02:13,580
all trying to deal with scale as traffic

46
00:02:10,568 --> 00:02:16,280
and volume through the network grows as

47
00:02:13,580 --> 00:02:18,650
we saw from Craig lava vistas talk

48
00:02:16,280 --> 00:02:20,750
yesterday and the co mid-nineteen

49
00:02:18,650 --> 00:02:22,620
pandemic we are all trying to build

50
00:02:20,750 --> 00:02:24,930
resilient and available networks

51
00:02:22,620 --> 00:02:27,209
that are agile and reconfigurable to our

52
00:02:24,930 --> 00:02:30,690
customers needs everything needs to be

53
00:02:27,209 --> 00:02:32,400
private and secure there's just too much

54
00:02:30,690 --> 00:02:34,459
work to do in the networks are too big

55
00:02:32,400 --> 00:02:38,730
today so we have to rely on automation

56
00:02:34,459 --> 00:02:40,500
as a means to get our jobs done and we

57
00:02:38,730 --> 00:02:42,359
want to think of our networks today as

58
00:02:40,500 --> 00:02:44,760
infrastructure is code so that way that

59
00:02:42,360 --> 00:02:46,590
automation work can be done all of this

60
00:02:44,760 --> 00:02:49,260
is being done with a mind towards

61
00:02:46,590 --> 00:02:51,420
simplicity because the networks of today

62
00:02:49,260 --> 00:02:54,120
whether they be in the data center

63
00:02:51,420 --> 00:02:57,298
across the inter domain routing fabric

64
00:02:54,120 --> 00:02:59,760
or down into the user bases have just

65
00:02:57,299 --> 00:03:01,769
gotten too complex for one any one

66
00:02:59,760 --> 00:03:03,450
single human being to reason about and

67
00:03:01,769 --> 00:03:05,640
therefore the simpler and more

68
00:03:03,450 --> 00:03:08,940
repeatable that they can be the better

69
00:03:05,640 --> 00:03:11,369
off we are in operating them and all of

70
00:03:08,940 --> 00:03:13,769
this comes from many many cycles of

71
00:03:11,370 --> 00:03:15,530
innovation in those networks and how we

72
00:03:13,769 --> 00:03:17,849
tend to operate networks today

73
00:03:15,530 --> 00:03:20,849
innovation is really important because

74
00:03:17,849 --> 00:03:23,488
it allows us to react to changes

75
00:03:20,849 --> 00:03:25,738
discover new opportunities it allows

76
00:03:23,489 --> 00:03:28,530
network operators to come to create

77
00:03:25,739 --> 00:03:31,049
competitive advantage it allows us to

78
00:03:28,530 --> 00:03:32,549
scale delivery drive efficiency and in

79
00:03:31,049 --> 00:03:35,040
some cases that cycle of innovation

80
00:03:32,549 --> 00:03:37,380
allows us to attract top talent to our

81
00:03:35,040 --> 00:03:40,230
to our companies so that way people want

82
00:03:37,380 --> 00:03:43,109
to come and work for us innovation isn't

83
00:03:40,230 --> 00:03:45,450
always plan though serendipity in many

84
00:03:43,109 --> 00:03:47,010
cases leads the way in terms of

85
00:03:45,450 --> 00:03:48,690
inventing some of the greatest things

86
00:03:47,010 --> 00:03:50,608
that have come to be on the Internet

87
00:03:48,690 --> 00:03:53,340
such as being able to host an on

88
00:03:50,609 --> 00:03:55,560
virtually so I want to talk about

89
00:03:53,340 --> 00:03:57,359
innovation cycles as part of this talk

90
00:03:55,560 --> 00:03:59,220
today and then try to convince you that

91
00:03:57,359 --> 00:04:01,079
we're missing a piece of the innovation

92
00:03:59,220 --> 00:04:03,720
cycle and I'm going to do that I'm going

93
00:04:01,079 --> 00:04:08,190
to shift back to the 1900s of an article

94
00:04:03,720 --> 00:04:10,919
from telephone magazine in August 1904

95
00:04:08,190 --> 00:04:12,599
sale cheap a 110 dropped standard

96
00:04:10,919 --> 00:04:15,150
telephone and Electric Company's

97
00:04:12,599 --> 00:04:17,130
switchboard in good order can be

98
00:04:15,150 --> 00:04:20,269
delivered by September 15th from the

99
00:04:17,130 --> 00:04:24,210
Tigray telephone company in Washington

100
00:04:20,269 --> 00:04:27,000
this 110 line telephone operated switch

101
00:04:24,210 --> 00:04:30,120
ordered gave us 110 lines of 9.6

102
00:04:27,000 --> 00:04:32,940
kilobits per second or just under one

103
00:04:30,120 --> 00:04:35,520
megabit per second of voice switching

104
00:04:32,940 --> 00:04:36,060
capacity and this was the manual plug

105
00:04:35,520 --> 00:04:37,979
board

106
00:04:36,060 --> 00:04:40,410
switches and really was the advent of

107
00:04:37,980 --> 00:04:43,860
switching switching technology that we

108
00:04:40,410 --> 00:04:46,200
know and appreciate today but how did we

109
00:04:43,860 --> 00:04:47,490
jump into automated switching well along

110
00:04:46,200 --> 00:04:50,280
comes the gentleman by the name of

111
00:04:47,490 --> 00:04:52,200
almonds stroker and it turns out that

112
00:04:50,280 --> 00:04:54,330
stroker was an undertaker

113
00:04:52,200 --> 00:04:57,900
stroker also had a competitor across

114
00:04:54,330 --> 00:05:00,900
town and the rumor mill or the

115
00:04:57,900 --> 00:05:04,950
conspiracy theory says that strokers

116
00:05:00,900 --> 00:05:08,010
competitor his spouse was a telephone

117
00:05:04,950 --> 00:05:11,159
operator and she was actively diverting

118
00:05:08,010 --> 00:05:13,590
calls away from strokers business to her

119
00:05:11,160 --> 00:05:15,540
husband and so struggler became very

120
00:05:13,590 --> 00:05:18,659
frustrated by this and decided to

121
00:05:15,540 --> 00:05:22,680
implement effort and decided to invent

122
00:05:18,660 --> 00:05:25,530
the first automated telephone switch

123
00:05:22,680 --> 00:05:28,229
called the Stroger step-by-step switch

124
00:05:25,530 --> 00:05:31,080
this technology the the intellectual

125
00:05:28,229 --> 00:05:33,510
property was purchased by General

126
00:05:31,080 --> 00:05:35,039
Electric and was used to build some of

127
00:05:33,510 --> 00:05:38,099
the very first automated telephone

128
00:05:35,040 --> 00:05:39,960
switching cos that we know today and so

129
00:05:38,100 --> 00:05:41,789
you know roughly over a hundred and

130
00:05:39,960 --> 00:05:44,190
twenty years even 140 years of

131
00:05:41,789 --> 00:05:46,849
innovation we go from the manual

132
00:05:44,190 --> 00:05:49,979
switchboard to the step by step switch

133
00:05:46,850 --> 00:05:52,919
eventually to the crossbar analog switch

134
00:05:49,979 --> 00:05:54,990
which became the basis for the common

135
00:05:52,919 --> 00:05:58,320
control platforms that we see in chassis

136
00:05:54,990 --> 00:06:00,570
based routers and switches today all the

137
00:05:58,320 --> 00:06:02,640
way up to the automatic digital switches

138
00:06:00,570 --> 00:06:07,039
that we knew of the early seven or eight

139
00:06:02,640 --> 00:06:10,050
70s and into the late 90s these are the

140
00:06:07,039 --> 00:06:12,659
equivalent of our BFRs our big chassis

141
00:06:10,050 --> 00:06:16,050
type devices that we've seen in the IP

142
00:06:12,660 --> 00:06:18,120
world and then in the late 90s with the

143
00:06:16,050 --> 00:06:20,690
advent of soft switches and voice over

144
00:06:18,120 --> 00:06:23,610
IP technology this incremental

145
00:06:20,690 --> 00:06:25,889
innovation in terms of you know adding

146
00:06:23,610 --> 00:06:28,560
more capacity adding more lines adding

147
00:06:25,889 --> 00:06:32,760
more automation to the voice Network

148
00:06:28,560 --> 00:06:35,190
gets totally revamped as technology

149
00:06:32,760 --> 00:06:38,460
changes and experiences a fundamental

150
00:06:35,190 --> 00:06:40,020
change as voice over IP rules out and so

151
00:06:38,460 --> 00:06:42,239
the case I'm trying to make here is that

152
00:06:40,020 --> 00:06:44,940
these incremental innovation cycles

153
00:06:42,240 --> 00:06:47,130
occur time and time again until you have

154
00:06:44,940 --> 00:06:49,620
a period of fundamental technological

155
00:06:47,130 --> 00:06:52,289
change and I think we're about to have

156
00:06:49,620 --> 00:06:55,200
that happen in the network inter domain

157
00:06:52,289 --> 00:06:57,479
space excuse me in the network inter

158
00:06:55,200 --> 00:07:00,360
domain space so for the rest of this

159
00:06:57,479 --> 00:07:02,520
talk I'm going to give some thoughts

160
00:07:00,360 --> 00:07:07,050
about what's happening in the inter

161
00:07:02,520 --> 00:07:10,010
domain at sort of the layer 1 through 3

162
00:07:07,050 --> 00:07:12,599
layer 1 through 2 area of the network

163
00:07:10,010 --> 00:07:16,140
what's going on in the application

164
00:07:12,599 --> 00:07:17,430
domain layer 5 through 7 and I'm gonna

165
00:07:16,140 --> 00:07:20,159
make the case that we're missing

166
00:07:17,430 --> 00:07:22,140
something in the layer 3 domain or the

167
00:07:20,159 --> 00:07:25,020
network inter domain between networks

168
00:07:22,140 --> 00:07:26,820
that are interconnecting so let's just

169
00:07:25,020 --> 00:07:29,010
look at history of where IP routing is

170
00:07:26,820 --> 00:07:29,760
gone we started off with basic

171
00:07:29,010 --> 00:07:32,820
hop-by-hop

172
00:07:29,760 --> 00:07:35,070
routing box-to-box forwarding we moved

173
00:07:32,820 --> 00:07:37,110
on to a time in period where one box

174
00:07:35,070 --> 00:07:40,349
started to rule them all we have the PFR

175
00:07:37,110 --> 00:07:42,330
similar to the crossbar switches where

176
00:07:40,349 --> 00:07:45,300
we had common control and a line card

177
00:07:42,330 --> 00:07:49,050
architecture up to today's you know

178
00:07:45,300 --> 00:07:51,450
distributed architectures similar to the

179
00:07:49,050 --> 00:07:53,520
to the talk we saw yesterday about

180
00:07:51,450 --> 00:07:55,860
distributed super nodes where you know

181
00:07:53,520 --> 00:07:58,409
we can think of individual chassis x' as

182
00:07:55,860 --> 00:08:00,539
a line card and a matrix router up to

183
00:07:58,409 --> 00:08:02,419
this notion of the last ten years

184
00:08:00,539 --> 00:08:04,349
fundamental technological change

185
00:08:02,419 --> 00:08:06,539
occurring in the advent of

186
00:08:04,349 --> 00:08:09,870
software-defined networking that many of

187
00:08:06,539 --> 00:08:12,120
us use to drive our networks today so

188
00:08:09,870 --> 00:08:13,289
you know we have an evolution in routing

189
00:08:12,120 --> 00:08:16,289
and at the same time we have an

190
00:08:13,289 --> 00:08:18,539
evolution in the underlying technology

191
00:08:16,289 --> 00:08:20,070
where you know just a few weeks ago we

192
00:08:18,539 --> 00:08:23,729
saw an announcement for broad coms

193
00:08:20,070 --> 00:08:26,039
tomahawk for processor we now take you

194
00:08:23,729 --> 00:08:28,590
know twenty five point six tera bit of

195
00:08:26,039 --> 00:08:31,620
switching capacity drop it into a two ru

196
00:08:28,590 --> 00:08:34,530
chassis for under 1500 watts of power

197
00:08:31,620 --> 00:08:38,130
consumption whereas you know just the

198
00:08:34,530 --> 00:08:40,078
previous generation 12.4 terabit first

199
00:08:38,130 --> 00:08:42,208
switch chip our 12.8 terabit per switch

200
00:08:40,078 --> 00:08:44,640
chip we need six of them probably

201
00:08:42,208 --> 00:08:46,469
drawing around 3,000 watts for the same

202
00:08:44,640 --> 00:08:48,569
switching capacity probably for our you

203
00:08:46,470 --> 00:08:51,329
abroad space all of this is iterating

204
00:08:48,570 --> 00:08:54,350
and compressing down now

205
00:08:51,329 --> 00:08:58,530
the advent of Sdn has allowed us to

206
00:08:54,350 --> 00:09:00,420
massively instrument our local networks

207
00:08:58,530 --> 00:09:00,899
far more than we've ever seen before and

208
00:09:00,420 --> 00:09:02,969
what I

209
00:09:00,899 --> 00:09:05,670
leave here is that this is giving us the

210
00:09:02,970 --> 00:09:08,209
prevalence of single sided intelligence

211
00:09:05,670 --> 00:09:11,790
in the network meaning that either as a

212
00:09:08,209 --> 00:09:14,910
Content operator or as an edge cloud

213
00:09:11,790 --> 00:09:17,610
operator or as a hosting provider we can

214
00:09:14,910 --> 00:09:19,589
see a lot more of what's going on in the

215
00:09:17,610 --> 00:09:23,040
network but there is still a blind spot

216
00:09:19,589 --> 00:09:26,819
in the inter domain space we get some

217
00:09:23,040 --> 00:09:30,509
viewpoints due to absorbing telemetry

218
00:09:26,819 --> 00:09:32,248
data from clients directly by a you know

219
00:09:30,509 --> 00:09:34,290
an out-of-band channel connection across

220
00:09:32,249 --> 00:09:36,360
the internet but we still don't

221
00:09:34,290 --> 00:09:38,550
necessarily know what's going on in that

222
00:09:36,360 --> 00:09:40,350
third-party network so let me give you

223
00:09:38,550 --> 00:09:43,258
that to you visually you know

224
00:09:40,350 --> 00:09:45,629
traditionally a Content host would run

225
00:09:43,259 --> 00:09:47,670
their own data center or they would run

226
00:09:45,629 --> 00:09:49,139
their at their content hosting somewhere

227
00:09:47,670 --> 00:09:50,878
in the world maybe their internet

228
00:09:49,139 --> 00:09:54,629
connection would come from the data

229
00:09:50,879 --> 00:09:57,660
center itself or from an ISP we've seen

230
00:09:54,629 --> 00:09:59,699
that construct evolve as content

231
00:09:57,660 --> 00:10:02,610
providers got into the business of being

232
00:09:59,699 --> 00:10:05,758
their very own ISPs and connecting much

233
00:10:02,610 --> 00:10:08,429
closer to the core of the internet we

234
00:10:05,759 --> 00:10:11,730
can see that we get telemetry coming in

235
00:10:08,429 --> 00:10:13,259
from users directly or from clients

236
00:10:11,730 --> 00:10:15,779
directly so that way we can see what

237
00:10:13,259 --> 00:10:18,389
that user experience looks like but at

238
00:10:15,779 --> 00:10:20,579
the end of the day the third-party

239
00:10:18,389 --> 00:10:22,860
network the last mile or the middle mile

240
00:10:20,579 --> 00:10:25,349
that we're transiting through is not

241
00:10:22,860 --> 00:10:28,769
necessarily participating in that

242
00:10:25,350 --> 00:10:30,540
transaction we don't necessarily have

243
00:10:28,769 --> 00:10:32,040
visibility there we can't find out

244
00:10:30,540 --> 00:10:33,569
what's going on in the network we don't

245
00:10:32,040 --> 00:10:35,969
have any points of introspection or

246
00:10:33,569 --> 00:10:37,920
telemetry coming our way and so what

247
00:10:35,970 --> 00:10:41,399
that means for content providers is that

248
00:10:37,920 --> 00:10:43,319
we're constantly pursuing the edge of

249
00:10:41,399 --> 00:10:45,959
the network we're trying to go deeper

250
00:10:43,319 --> 00:10:47,670
and closer to the users to understand

251
00:10:45,959 --> 00:10:49,498
what's happening in the network so that

252
00:10:47,670 --> 00:10:51,240
way we can make the big for the best

253
00:10:49,499 --> 00:10:53,129
possible experience that we can give

254
00:10:51,240 --> 00:10:56,279
them and sometimes that might might mean

255
00:10:53,129 --> 00:10:58,470
that the content of the host is going to

256
00:10:56,279 --> 00:11:03,569
build far more deeply into the network

257
00:10:58,470 --> 00:11:05,220
then we've historically seen and what

258
00:11:03,569 --> 00:11:07,790
we're trying to deal with here is we're

259
00:11:05,220 --> 00:11:11,879
trying to cut down on the amount of

260
00:11:07,790 --> 00:11:14,670
inter domain information asymmetry that

261
00:11:11,879 --> 00:11:16,410
exists right and this

262
00:11:14,670 --> 00:11:19,229
concept of information asymmetry goes

263
00:11:16,410 --> 00:11:21,750
back to managerial economics and

264
00:11:19,230 --> 00:11:24,960
business strategy right for a market to

265
00:11:21,750 --> 00:11:26,820
function efficiently participants must

266
00:11:24,960 --> 00:11:29,280
have reasonably good information from

267
00:11:26,820 --> 00:11:30,810
all sides right and that in our world in

268
00:11:29,280 --> 00:11:33,050
the world of networking that can be

269
00:11:30,810 --> 00:11:36,479
about interconnection network conditions

270
00:11:33,050 --> 00:11:39,329
patterns of congestion day-to-day usage

271
00:11:36,480 --> 00:11:40,920
patterns and without having that

272
00:11:39,330 --> 00:11:44,010
information from both sides there's a

273
00:11:40,920 --> 00:11:46,650
number of inefficiencies that occur in

274
00:11:44,010 --> 00:11:48,960
the system so you know I would agree

275
00:11:46,650 --> 00:11:50,730
that anyone knows their network their

276
00:11:48,960 --> 00:11:53,430
own network better than anyone else and

277
00:11:50,730 --> 00:11:57,030
that comes from their policy economics

278
00:11:53,430 --> 00:11:59,160
constraints and preferences but my

279
00:11:57,030 --> 00:12:01,470
question is is with that network piece

280
00:11:59,160 --> 00:12:02,790
not being part of the transaction is

281
00:12:01,470 --> 00:12:05,550
there an opportunity to open that

282
00:12:02,790 --> 00:12:07,890
information up and I have a few more

283
00:12:05,550 --> 00:12:10,229
words on that later so let me flip from

284
00:12:07,890 --> 00:12:12,360
sort of the physical network piece and

285
00:12:10,230 --> 00:12:14,820
go up the protocol stack to what's going

286
00:12:12,360 --> 00:12:16,050
on in the HTTP world because I think

287
00:12:14,820 --> 00:12:19,140
that this is an important consideration

288
00:12:16,050 --> 00:12:21,599
as we move ahead if we look at the

289
00:12:19,140 --> 00:12:23,250
history of HTTP similar to what we see

290
00:12:21,600 --> 00:12:24,900
with inter domain routing similar what

291
00:12:23,250 --> 00:12:27,090
we see with datacenter fabrics the

292
00:12:24,900 --> 00:12:32,220
switch chips we see an evolution right

293
00:12:27,090 --> 00:12:37,140
in 1991 we have HTTP 0.9 ratified by RFC

294
00:12:32,220 --> 00:12:39,690
as the one-line HTTP protocol RFC 1945

295
00:12:37,140 --> 00:12:42,689
comes along in 1996 what gives us which

296
00:12:39,690 --> 00:12:44,430
gives us HTTP 1.0 so we get things like

297
00:12:42,690 --> 00:12:47,370
versioning and status codes and headers

298
00:12:44,430 --> 00:12:50,370
and content types in the protocol and

299
00:12:47,370 --> 00:12:55,860
then really nothing happens for a while

300
00:12:50,370 --> 00:12:58,530
until 2014 2015 where we see updated

301
00:12:55,860 --> 00:13:04,740
specifications for HTTP 1 1 come out as

302
00:12:58,530 --> 00:13:07,589
well as RFC 7540 defining HTTP 2 and

303
00:13:04,740 --> 00:13:10,710
HTTP 2 takes an incremental approach at

304
00:13:07,590 --> 00:13:12,780
improving the protocol primarily so we

305
00:13:10,710 --> 00:13:15,170
can eliminate head-of-line blocking in

306
00:13:12,780 --> 00:13:18,329
HTTP so we now get a protocol that

307
00:13:15,170 --> 00:13:20,339
provides multiplex binary encoding on

308
00:13:18,330 --> 00:13:22,170
the wire provides for header

309
00:13:20,340 --> 00:13:25,140
compressions something called server

310
00:13:22,170 --> 00:13:27,209
push more on that later as well as HTTP

311
00:13:25,140 --> 00:13:29,999
alternative services

312
00:13:27,209 --> 00:13:32,878
get ready because in 2020 were expecting

313
00:13:29,999 --> 00:13:35,999
the newest version of HTTP HTTP free to

314
00:13:32,879 --> 00:13:36,569
come out and start being used live on

315
00:13:35,999 --> 00:13:40,949
the web

316
00:13:36,569 --> 00:13:46,019
and that's available to you today so if

317
00:13:40,949 --> 00:13:49,740
you go to HTTP 3 is you can see a demo

318
00:13:46,019 --> 00:13:52,199
site of HTTP 3 now on the left hand side

319
00:13:49,740 --> 00:13:55,709
on my laptop I just have regular old

320
00:13:52,199 --> 00:13:57,719
chrome running and HTTP 3 does not get

321
00:13:55,709 --> 00:13:59,670
used but if you go grab the Chrome

322
00:13:57,720 --> 00:14:03,689
nightly build at Chrome Canary build and

323
00:13:59,670 --> 00:14:08,248
throw these flags - - enable quick and -

324
00:14:03,689 --> 00:14:11,759
- quick - version each 327 and use the

325
00:14:08,249 --> 00:14:15,360
Chrome Canary and hit HTTP 3 is you will

326
00:14:11,759 --> 00:14:16,379
see a demonstration of HTTP 3 and I want

327
00:14:15,360 --> 00:14:18,240
to tell you a little bit more about

328
00:14:16,379 --> 00:14:20,639
what's going on with HTTP 3 because I

329
00:14:18,240 --> 00:14:23,459
think it's important in thinking about

330
00:14:20,639 --> 00:14:25,879
how we manage networks in the future so

331
00:14:23,459 --> 00:14:28,439
as I said it's the upcoming version of

332
00:14:25,879 --> 00:14:33,480
the hypertext Transfer Protocol

333
00:14:28,439 --> 00:14:36,860
it has feature parity from HTTP 2 but

334
00:14:33,480 --> 00:14:40,499
unlike HTTP 2 which is carried over TCP

335
00:14:36,860 --> 00:14:43,379
HTTP 3 is carried over quick which is a

336
00:14:40,499 --> 00:14:48,149
brand-new transport protocol so just

337
00:14:43,379 --> 00:14:51,629
some reminders HTTP 2 functions over TCP

338
00:14:48,149 --> 00:14:56,160
so while HTTP 2 fixes the head-of-line

339
00:14:51,629 --> 00:14:59,519
blocking problems associated with HTTP

340
00:14:56,160 --> 00:15:01,860
1.1 we still have issues with

341
00:14:59,519 --> 00:15:05,369
head-of-line blocking in the tcp

342
00:15:01,860 --> 00:15:08,040
protocol itself and that's what we're

343
00:15:05,369 --> 00:15:10,019
trying to address with HTTP 3 the other

344
00:15:08,040 --> 00:15:12,240
thing that's very interesting about HTTP

345
00:15:10,019 --> 00:15:15,779
2 is that it implements something called

346
00:15:12,240 --> 00:15:17,790
HTTP alternative services HTTP 2

347
00:15:15,779 --> 00:15:19,889
connections are meant to be very very

348
00:15:17,790 --> 00:15:21,509
long-lived and so therefore as you're

349
00:15:19,889 --> 00:15:23,879
trying to do traffic engineering in the

350
00:15:21,509 --> 00:15:26,279
network you have a couple different

351
00:15:23,879 --> 00:15:29,730
problems traditional load balancing and

352
00:15:26,279 --> 00:15:31,920
global global server load balancing

353
00:15:29,730 --> 00:15:33,629
traffic engineering techniques today

354
00:15:31,920 --> 00:15:34,529
really sort of boil down to one of two

355
00:15:33,629 --> 00:15:37,529
things

356
00:15:34,529 --> 00:15:39,389
BGP anycast which for a long live

357
00:15:37,529 --> 00:15:40,050
connection if you move those endpoints

358
00:15:39,389 --> 00:15:41,610
around you're going to

359
00:15:40,050 --> 00:15:44,370
great the connection on behalf of the

360
00:15:41,610 --> 00:15:45,450
user at degrade the user experience or

361
00:15:44,370 --> 00:15:48,089
you're going to use some sort of

362
00:15:45,450 --> 00:15:49,950
dns-based GSLV system which requires new

363
00:15:48,089 --> 00:15:53,399
lookups which requires those connections

364
00:15:49,950 --> 00:15:54,959
to get restarted and therefore you're

365
00:15:53,399 --> 00:15:57,000
not going to have the same traffic

366
00:15:54,959 --> 00:15:59,399
engineering control of the network as

367
00:15:57,000 --> 00:16:03,660
you may have had a HTTP layer in the

368
00:15:59,399 --> 00:16:07,920
past so HTTP alternative Services exists

369
00:16:03,660 --> 00:16:12,089
as a way for a server to notify a client

370
00:16:07,920 --> 00:16:15,569
of on alternative URI to fetch the same

371
00:16:12,089 --> 00:16:17,370
content from and there was some some

372
00:16:15,570 --> 00:16:21,079
investigation into the security of that

373
00:16:17,370 --> 00:16:23,790
it looks like there was some missed

374
00:16:21,079 --> 00:16:26,040
misguided implementations of how this is

375
00:16:23,790 --> 00:16:28,560
supposed to work that's being fixed but

376
00:16:26,040 --> 00:16:34,019
fundamentally this technology works so

377
00:16:28,560 --> 00:16:35,670
we now have a means to control how

378
00:16:34,019 --> 00:16:38,370
clients are connecting to server

379
00:16:35,670 --> 00:16:40,829
endpoints in band to the HTTP protocol

380
00:16:38,370 --> 00:16:42,810
itself we don't have to use the DNS we

381
00:16:40,829 --> 00:16:45,750
don't have to use BGP any caps for this

382
00:16:42,810 --> 00:16:49,829
anymore and that's all available in HTTP

383
00:16:45,750 --> 00:16:53,310
3 adding to the complexity of this htv3

384
00:16:49,829 --> 00:16:56,459
is no longer it is not carried over TCP

385
00:16:53,310 --> 00:16:59,010
it uses a new transport protocol known

386
00:16:56,459 --> 00:17:01,949
as quick which is actually carried over

387
00:16:59,010 --> 00:17:05,429
UDP and the designers of the quic

388
00:17:01,950 --> 00:17:07,530
protocol and the HTTP 3 protocol use

389
00:17:05,429 --> 00:17:12,300
quick because it resolves the

390
00:17:07,530 --> 00:17:13,649
head-of-line blocking issue in TCP the

391
00:17:12,300 --> 00:17:17,188
other thing to take away from this is

392
00:17:13,650 --> 00:17:19,290
that connections in quick are not

393
00:17:17,189 --> 00:17:21,120
defined by the traditional 5 couple that

394
00:17:19,290 --> 00:17:24,000
were used to there are connection

395
00:17:21,119 --> 00:17:25,889
identifiers in the quic header that are

396
00:17:24,000 --> 00:17:28,590
actually used to identify client and

397
00:17:25,890 --> 00:17:31,590
server connections the other thing to

398
00:17:28,590 --> 00:17:35,689
note is that much more of the payload in

399
00:17:31,590 --> 00:17:38,610
quic is natively encrypted using TLS 1.3

400
00:17:35,690 --> 00:17:40,860
so as network operators there's a lot

401
00:17:38,610 --> 00:17:42,178
less inspection that we're going to be

402
00:17:40,860 --> 00:17:45,300
able to do in the network more on that

403
00:17:42,179 --> 00:17:47,850
in a few seconds now the parameters for

404
00:17:45,300 --> 00:17:50,700
mobility in quick changed dramatically

405
00:17:47,850 --> 00:17:53,639
as I said we now have HTTP alternative

406
00:17:50,700 --> 00:17:56,760
services to move clients to different

407
00:17:53,640 --> 00:17:59,600
server end points but what's interesting

408
00:17:56,760 --> 00:18:03,379
about that is not only can we move

409
00:17:59,600 --> 00:18:05,939
server endpoints around similar to a

410
00:18:03,380 --> 00:18:09,840
direct server return like connection

411
00:18:05,940 --> 00:18:12,120
management on the on the serving side we

412
00:18:09,840 --> 00:18:14,010
can also move the client connection

413
00:18:12,120 --> 00:18:17,760
around in a stateful manner on the

414
00:18:14,010 --> 00:18:19,290
client side so we serve quicks one of

415
00:18:17,760 --> 00:18:21,480
quicks goal is to serve what they call

416
00:18:19,290 --> 00:18:22,950
the parking-lot problem where you know

417
00:18:21,480 --> 00:18:25,980
you're leaving your office at the end of

418
00:18:22,950 --> 00:18:28,320
the day your mobile device has it

419
00:18:25,980 --> 00:18:30,720
transitioned off of your Wi-Fi to get

420
00:18:28,320 --> 00:18:32,639
onto the LTE network the connection gets

421
00:18:30,720 --> 00:18:36,870
interrupted and quick that connection

422
00:18:32,640 --> 00:18:40,350
can be seamlessly migrated from a UDP

423
00:18:36,870 --> 00:18:44,520
endpoint on the wireless LAN to a UDP

424
00:18:40,350 --> 00:18:48,419
endpoint on the LTE network and we can

425
00:18:44,520 --> 00:18:49,889
again use HTTP alternative services to

426
00:18:48,420 --> 00:18:52,700
move the server location around

427
00:18:49,890 --> 00:18:56,790
depending upon local network conditions

428
00:18:52,700 --> 00:18:59,400
so you know with all of this mobility

429
00:18:56,790 --> 00:19:01,320
both client-side server-side we can

430
00:18:59,400 --> 00:19:04,410
imagine what the future of things like

431
00:19:01,320 --> 00:19:06,240
kubernetes containers deployed along the

432
00:19:04,410 --> 00:19:09,240
network or serverless functions that the

433
00:19:06,240 --> 00:19:12,150
edge can do for us where now when I want

434
00:19:09,240 --> 00:19:14,250
to get to my user and maybe my core data

435
00:19:12,150 --> 00:19:16,680
center isn't the most optimal serving

436
00:19:14,250 --> 00:19:19,430
site I might move that workload to a new

437
00:19:16,680 --> 00:19:22,200
UDP endpoint far deeper into the network

438
00:19:19,430 --> 00:19:23,970
than I had before and this happens

439
00:19:22,200 --> 00:19:26,340
seamlessly to the user it can happen

440
00:19:23,970 --> 00:19:28,230
seamlessly to the user and that means

441
00:19:26,340 --> 00:19:30,629
fundamental changes for network

442
00:19:28,230 --> 00:19:32,100
operators are going to occur on the

443
00:19:30,630 --> 00:19:33,720
middleboxes that we're all used to

444
00:19:32,100 --> 00:19:35,850
having in our networks whether it be for

445
00:19:33,720 --> 00:19:38,880
nap or for firewall or for content

446
00:19:35,850 --> 00:19:41,639
inspection really can't touch the quic

447
00:19:38,880 --> 00:19:44,270
protocol the way that we've seen the TCP

448
00:19:41,640 --> 00:19:47,790
HTTP protocol get touched

449
00:19:44,270 --> 00:19:50,370
interference with the payload of any

450
00:19:47,790 --> 00:19:51,870
sort results in a connection reset the

451
00:19:50,370 --> 00:19:53,939
user will know that something happened

452
00:19:51,870 --> 00:19:55,770
to their connection we're now seeing

453
00:19:53,940 --> 00:19:59,580
that routing protocol decisions in some

454
00:19:55,770 --> 00:20:01,710
ways are moving up into the application

455
00:19:59,580 --> 00:20:04,649
protocol stack through HTTP alternative

456
00:20:01,710 --> 00:20:07,160
services and if you watch Paul vixy's

457
00:20:04,650 --> 00:20:10,010
talk from a couple minutes ago

458
00:20:07,160 --> 00:20:14,090
we're looking at Moo we're investigating

459
00:20:10,010 --> 00:20:17,360
the DNS lookups moving alongside the

460
00:20:14,090 --> 00:20:19,220
HTTP traffic and so you we can plan on

461
00:20:17,360 --> 00:20:21,080
having much more localized effects of

462
00:20:19,220 --> 00:20:22,550
well my internet doesn't look like your

463
00:20:21,080 --> 00:20:24,649
internet anymore and what's going on

464
00:20:22,550 --> 00:20:27,310
here and what that means for operators

465
00:20:24,650 --> 00:20:29,540
is reduced observability less traffic

466
00:20:27,310 --> 00:20:31,669
classification and perhaps less

467
00:20:29,540 --> 00:20:34,159
opportunity to create value in the

468
00:20:31,670 --> 00:20:35,660
network if you're a network operator and

469
00:20:34,160 --> 00:20:36,860
you want to study up deeper on what's

470
00:20:35,660 --> 00:20:40,250
going on with quick

471
00:20:36,860 --> 00:20:42,409
I would suggest reading this IETF draft

472
00:20:40,250 --> 00:20:45,500
for quick manageability it's currently

473
00:20:42,410 --> 00:20:47,180
at version six as to what these

474
00:20:45,500 --> 00:20:50,210
fundamental changes look like for

475
00:20:47,180 --> 00:20:52,580
network operators in detail so we have

476
00:20:50,210 --> 00:20:55,310
these massive innovations occurring at

477
00:20:52,580 --> 00:20:58,129
the intradomain level and at the

478
00:20:55,310 --> 00:20:59,780
application domain level and you know I

479
00:20:58,130 --> 00:21:02,060
want to acknowledge what's going on with

480
00:20:59,780 --> 00:21:03,530
rpki in the inter domain space but I

481
00:21:02,060 --> 00:21:06,320
still think that there's an opportunity

482
00:21:03,530 --> 00:21:08,720
here and as network operators we're

483
00:21:06,320 --> 00:21:11,870
missing something what I'm trying to say

484
00:21:08,720 --> 00:21:14,180
is that the remote infrastructure that

485
00:21:11,870 --> 00:21:16,969
serves the client from the perspective

486
00:21:14,180 --> 00:21:19,580
of the serving stack is just not a piece

487
00:21:16,970 --> 00:21:22,670
of the equation yet as content operators

488
00:21:19,580 --> 00:21:24,560
we've been able to bring together the

489
00:21:22,670 --> 00:21:25,910
application layer the serving stack

490
00:21:24,560 --> 00:21:28,850
infrastructure and the physical and

491
00:21:25,910 --> 00:21:31,100
logical layer but what's going on in

492
00:21:28,850 --> 00:21:35,240
that remote network is really still

493
00:21:31,100 --> 00:21:38,480
quite opaque to us and so that remote

494
00:21:35,240 --> 00:21:41,630
network is very much disconnected from

495
00:21:38,480 --> 00:21:45,200
what developers can do today

496
00:21:41,630 --> 00:21:46,730
developers can do way more in with the

497
00:21:45,200 --> 00:21:49,760
network than they did 10 years ago

498
00:21:46,730 --> 00:21:51,320
they can write more client code than

499
00:21:49,760 --> 00:21:52,700
ever before companies that are

500
00:21:51,320 --> 00:21:54,409
responsible for running their own

501
00:21:52,700 --> 00:21:57,620
serving stack as well as their own

502
00:21:54,410 --> 00:22:00,710
client stack under a common mission can

503
00:21:57,620 --> 00:22:03,949
control all these aspects and really

504
00:22:00,710 --> 00:22:05,690
relay on very very rich telemetry as to

505
00:22:03,950 --> 00:22:07,760
what the user experiences I mean I'm

506
00:22:05,690 --> 00:22:10,190
always thinking about what the Netflix

507
00:22:07,760 --> 00:22:12,800
folks can do because they control the

508
00:22:10,190 --> 00:22:14,600
serving stack deeply the control plane

509
00:22:12,800 --> 00:22:18,020
for their application stack as well as

510
00:22:14,600 --> 00:22:19,510
the client stack in in a very native and

511
00:22:18,020 --> 00:22:21,730
common way so they can

512
00:22:19,510 --> 00:22:23,770
those missions we never used to be able

513
00:22:21,730 --> 00:22:25,330
to see that with browser technology

514
00:22:23,770 --> 00:22:26,830
because we always have a third-party

515
00:22:25,330 --> 00:22:28,840
client but with the advent of the

516
00:22:26,830 --> 00:22:32,919
optical system that changes dramatically

517
00:22:28,840 --> 00:22:34,570
with HTTP 3 and alternative services

518
00:22:32,920 --> 00:22:36,220
we're starting to get some of that

519
00:22:34,570 --> 00:22:40,060
functionality right into the native

520
00:22:36,220 --> 00:22:43,060
browser and so you know what I believe

521
00:22:40,060 --> 00:22:45,879
is that developers are doing a lot more

522
00:22:43,060 --> 00:22:48,700
guests cheering in quotes about what's

523
00:22:45,880 --> 00:22:50,650
going on in the network to try it and

524
00:22:48,700 --> 00:22:52,180
find out conditions of the network in

525
00:22:50,650 --> 00:22:55,360
real time and that leads to a lot of

526
00:22:52,180 --> 00:22:57,160
inefficiencies in how we operate

527
00:22:55,360 --> 00:22:59,860
networks one thing that's very

528
00:22:57,160 --> 00:23:02,860
interesting about quick and the quick

529
00:22:59,860 --> 00:23:05,409
altars wanted to have the capability for

530
00:23:02,860 --> 00:23:07,360
is to iterate faster in this network

531
00:23:05,410 --> 00:23:10,000
stack they wanted developers to be able

532
00:23:07,360 --> 00:23:12,550
to think about future improvements to

533
00:23:10,000 --> 00:23:13,750
this network stock in a rapid manner and

534
00:23:12,550 --> 00:23:17,590
so what's interesting is that the

535
00:23:13,750 --> 00:23:21,190
initial implementations of quick are

536
00:23:17,590 --> 00:23:22,810
actually user space implementations so

537
00:23:21,190 --> 00:23:25,090
the way that you get a quick process up

538
00:23:22,810 --> 00:23:27,399
and running as you take your serving

539
00:23:25,090 --> 00:23:31,090
software and you bolt on a module so

540
00:23:27,400 --> 00:23:32,800
that way you can understand the quick

541
00:23:31,090 --> 00:23:35,980
transport protocol and then go bind that

542
00:23:32,800 --> 00:23:37,899
to a UDP socket so by deploying that

543
00:23:35,980 --> 00:23:39,880
software in user space you can iterate

544
00:23:37,900 --> 00:23:42,940
on what that software is doing far more

545
00:23:39,880 --> 00:23:45,340
rapidly but I want to get across here is

546
00:23:42,940 --> 00:23:47,470
that information sharing information

547
00:23:45,340 --> 00:23:49,810
does not mean that you're giving away

548
00:23:47,470 --> 00:23:51,370
control of your network and so I think

549
00:23:49,810 --> 00:23:53,260
that there are opportunities using

550
00:23:51,370 --> 00:23:55,959
technology that we have access to today

551
00:23:53,260 --> 00:23:58,180
to share information in between networks

552
00:23:55,960 --> 00:24:01,210
that ultimately benefit all of our

553
00:23:58,180 --> 00:24:03,130
collective users so one example of that

554
00:24:01,210 --> 00:24:04,330
is you know can we do some more

555
00:24:03,130 --> 00:24:06,970
suggestive

556
00:24:04,330 --> 00:24:10,389
signaling in the network using something

557
00:24:06,970 --> 00:24:12,520
like BGP large communities if I'm

558
00:24:10,390 --> 00:24:15,700
peering with another network can that

559
00:24:12,520 --> 00:24:18,190
network signal to me some alternative

560
00:24:15,700 --> 00:24:21,550
paths in the network where if that

561
00:24:18,190 --> 00:24:24,640
peering links should saturate or congest

562
00:24:21,550 --> 00:24:27,850
how does that eyeball network want to

563
00:24:24,640 --> 00:24:29,830
receive overflow traffic and you know I

564
00:24:27,850 --> 00:24:32,889
have some example communities that I

565
00:24:29,830 --> 00:24:35,830
wrote up that you know someone

566
00:24:32,890 --> 00:24:38,170
like an AT&T could use to signal that to

567
00:24:35,830 --> 00:24:40,990
content operators or perhaps there's

568
00:24:38,170 --> 00:24:43,330
congestion in a particular metro market

569
00:24:40,990 --> 00:24:46,960
and we need to shift traffic completely

570
00:24:43,330 --> 00:24:49,149
elsewhere or as a content provider where

571
00:24:46,960 --> 00:24:51,520
we are exposing different dips to the

572
00:24:49,150 --> 00:24:53,620
Internet in different IP blocks perhaps

573
00:24:51,520 --> 00:24:55,270
we can provide some signaling to network

574
00:24:53,620 --> 00:24:58,060
operators about the type of traffic

575
00:24:55,270 --> 00:25:00,280
that's being carried on those blocks so

576
00:24:58,060 --> 00:25:03,280
that way we can be smart about managing

577
00:25:00,280 --> 00:25:06,460
congestion or can we use BGP large

578
00:25:03,280 --> 00:25:09,340
communities to signal readiness for

579
00:25:06,460 --> 00:25:11,830
bilateral session establishment across

580
00:25:09,340 --> 00:25:14,439
ix route servers so that we then

581
00:25:11,830 --> 00:25:16,659
software and automation can come and set

582
00:25:14,440 --> 00:25:19,840
up bilateral sessions rather than

583
00:25:16,660 --> 00:25:22,180
trading emails between human beings or

584
00:25:19,840 --> 00:25:24,550
scraping down various internet peering

585
00:25:22,180 --> 00:25:26,740
databases and you know using a spray and

586
00:25:24,550 --> 00:25:28,899
pray type method I believe that

587
00:25:26,740 --> 00:25:31,300
information drives simplicity in that

588
00:25:28,900 --> 00:25:33,780
word and if we can make the network's

589
00:25:31,300 --> 00:25:35,889
more simple that we can actually

590
00:25:33,780 --> 00:25:38,440
significantly reduce waste

591
00:25:35,890 --> 00:25:40,180
we can stop over provisioning that works

592
00:25:38,440 --> 00:25:42,370
because we don't know the best path we

593
00:25:40,180 --> 00:25:43,840
don't have to guess about what the best

594
00:25:42,370 --> 00:25:47,469
path is through the network anymore

595
00:25:43,840 --> 00:25:49,270
maybe we can move workloads based upon

596
00:25:47,470 --> 00:25:52,900
prevailing Network conditions or

597
00:25:49,270 --> 00:25:54,730
historical network conditions with quick

598
00:25:52,900 --> 00:25:57,280
if we can sort of move the fly around

599
00:25:54,730 --> 00:25:58,870
and move the server around seamlessly

600
00:25:57,280 --> 00:26:01,360
without resetting connections for the

601
00:25:58,870 --> 00:26:03,429
user that gives us much more moment

602
00:26:01,360 --> 00:26:05,770
mobility of where we serve those

603
00:26:03,430 --> 00:26:07,930
workloads from and maybe we can reduce

604
00:26:05,770 --> 00:26:11,440
significant amounts of human energy

605
00:26:07,930 --> 00:26:13,510
that's spent debugging reconfiguring and

606
00:26:11,440 --> 00:26:17,500
engineering to find ILO pass through the

607
00:26:13,510 --> 00:26:20,170
network when computers can do it anyways

608
00:26:17,500 --> 00:26:22,450
you know we figured out how to do this

609
00:26:20,170 --> 00:26:24,700
in the network intradomain with

610
00:26:22,450 --> 00:26:26,650
software-defined networking so how can

611
00:26:24,700 --> 00:26:28,300
we extend that across network boundaries

612
00:26:26,650 --> 00:26:31,090
across a ton of autonomous system

613
00:26:28,300 --> 00:26:33,100
boundaries in the future now I think I'm

614
00:26:31,090 --> 00:26:35,020
going to get a lot of objections to this

615
00:26:33,100 --> 00:26:37,480
because you know we've heard some of

616
00:26:35,020 --> 00:26:40,510
these before like things like well my

617
00:26:37,480 --> 00:26:42,600
network topology and the conditions on

618
00:26:40,510 --> 00:26:44,730
my network are my competitive

619
00:26:42,600 --> 00:26:46,678
but I think that telemetry data coming

620
00:26:44,730 --> 00:26:49,440
from clients is already telling contact

621
00:26:46,679 --> 00:26:52,380
operators about that or maybe my router

622
00:26:49,440 --> 00:26:54,779
can't run more processes in its control

623
00:26:52,380 --> 00:26:57,059
plane but I think we've learned that

624
00:26:54,779 --> 00:26:59,730
from software-defined networking and the

625
00:26:57,059 --> 00:27:01,649
deployment of our PKI we know how to

626
00:26:59,730 --> 00:27:04,470
side load data into the network you know

627
00:27:01,649 --> 00:27:07,080
we can process large Maps we can process

628
00:27:04,470 --> 00:27:08,789
vast amounts of information and then

629
00:27:07,080 --> 00:27:12,299
really load only into the forwarding

630
00:27:08,789 --> 00:27:14,279
plane what we need to implement the the

631
00:27:12,299 --> 00:27:16,139
desired state that we're looking for in

632
00:27:14,279 --> 00:27:18,059
the network or you might say that I'm

633
00:27:16,139 --> 00:27:20,428
you know reducing the network to being

634
00:27:18,059 --> 00:27:22,200
the last common denominator but I'm

635
00:27:20,429 --> 00:27:25,200
actually looking for is the most

636
00:27:22,200 --> 00:27:27,059
efficient allocation of resources or you

637
00:27:25,200 --> 00:27:29,429
might say sharing this information

638
00:27:27,059 --> 00:27:32,309
allows for Network arbitrage I would

639
00:27:29,429 --> 00:27:34,740
argue that it's already happening so I

640
00:27:32,309 --> 00:27:37,289
think that there's a whole nother round

641
00:27:34,740 --> 00:27:39,419
of innovation that can occur in how we

642
00:27:37,289 --> 00:27:42,299
operate networks we're seeing a lot of

643
00:27:39,419 --> 00:27:45,559
innovation down in the physical layer in

644
00:27:42,299 --> 00:27:48,360
stn we have an evasion going on in the

645
00:27:45,559 --> 00:27:50,009
in the application domain and I think

646
00:27:48,360 --> 00:27:51,719
that there is something missing in the

647
00:27:50,009 --> 00:27:53,669
inter domain you know the inter domain

648
00:27:51,720 --> 00:27:55,950
has had a rich history the Nanog group

649
00:27:53,669 --> 00:27:58,139
has been evolving this for a long time

650
00:27:55,950 --> 00:28:00,330
it goes all the way back to the late 90s

651
00:27:58,139 --> 00:28:03,240
with the advent of naps and peering VB

652
00:28:00,330 --> 00:28:05,129
the global peering forum but I think

653
00:28:03,240 --> 00:28:06,600
that there's more that we can do there's

654
00:28:05,129 --> 00:28:08,549
an his signaling that we can deploy

655
00:28:06,600 --> 00:28:09,928
between networks there's such an

656
00:28:08,549 --> 00:28:12,330
creation automation that we can look

657
00:28:09,929 --> 00:28:14,429
into there's flow information sharing

658
00:28:12,330 --> 00:28:15,689
that can go on between networks there's

659
00:28:14,429 --> 00:28:19,139
some great work around something called

660
00:28:15,690 --> 00:28:22,100
dots which is a DDoS you know

661
00:28:19,139 --> 00:28:25,139
situational awareness protocol between

662
00:28:22,100 --> 00:28:27,779
DDoS mitigation appliances on Prem and

663
00:28:25,139 --> 00:28:30,449
the cloud and that we can look at the

664
00:28:27,779 --> 00:28:32,190
advent of edge compute severus functions

665
00:28:30,450 --> 00:28:34,590
containerized workloads to think about

666
00:28:32,190 --> 00:28:37,139
how we move workloads around the

667
00:28:34,590 --> 00:28:39,809
internet dynamically to coordinate for

668
00:28:37,139 --> 00:28:41,820
better and user experiences and I think

669
00:28:39,809 --> 00:28:43,649
once we can get to that state then we

670
00:28:41,820 --> 00:28:45,509
can realize a place where the

671
00:28:43,649 --> 00:28:47,459
application layer the local

672
00:28:45,509 --> 00:28:50,070
infrastructure serving stack the remote

673
00:28:47,460 --> 00:28:51,690
client infrastructure stack as well as

674
00:28:50,070 --> 00:28:53,908
the physical layers brought together in

675
00:28:51,690 --> 00:28:54,470
a harmonious fashion and the network

676
00:28:53,909 --> 00:28:58,730
will be

677
00:28:54,470 --> 00:29:00,650
are more efficient that's my take on

678
00:28:58,730 --> 00:29:02,419
some ideas for the future and I would

679
00:29:00,650 --> 00:29:04,640
love to take any questions that may have

680
00:29:02,419 --> 00:29:07,070
popped up along the way feel free to

681
00:29:04,640 --> 00:29:10,490
shoot me email with complaints or

682
00:29:07,070 --> 00:29:13,060
suggestions as well TJ d @ q 700 is the

683
00:29:10,490 --> 00:29:20,789
email address thank you for this time

684
00:29:13,060 --> 00:29:20,789
[Music]

