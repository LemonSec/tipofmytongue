1
00:00:00,000 --> 00:00:05,279
[Music]

2
00:00:05,279 --> 00:00:07,279
thanks for having me and i hope you'll

3
00:00:07,279 --> 00:00:08,240
like this session

4
00:00:08,240 --> 00:00:10,240
where we'll focus on networking in

5
00:00:10,240 --> 00:00:12,080
public clouds but from the

6
00:00:12,080 --> 00:00:14,160
end user perspective so i will not tell

7
00:00:14,160 --> 00:00:15,679
you how to build one

8
00:00:15,679 --> 00:00:19,199
i will tell you how to use one

9
00:00:20,640 --> 00:00:22,800
some of you may know me i am a really

10
00:00:22,800 --> 00:00:25,039
old networking engineer i've seen

11
00:00:25,039 --> 00:00:26,080
everything from

12
00:00:26,080 --> 00:00:28,640
apple talk and decnet onwards which

13
00:00:28,640 --> 00:00:30,960
makes me a little bit sad

14
00:00:30,960 --> 00:00:33,360
and sarcastic at times as you will

15
00:00:33,360 --> 00:00:34,000
notice

16
00:00:34,000 --> 00:00:36,320
throughout the presentation so for

17
00:00:36,320 --> 00:00:37,280
example

18
00:00:37,280 --> 00:00:39,200
and this is i promise the only marketing

19
00:00:39,200 --> 00:00:40,800
slide in the whole talk

20
00:00:40,800 --> 00:00:44,640
clouds need no networking and

21
00:00:44,640 --> 00:00:47,280
you know they might even be right they

22
00:00:47,280 --> 00:00:49,440
might even be right about this unicorn

23
00:00:49,440 --> 00:00:50,320
stuff

24
00:00:50,320 --> 00:00:53,039
depending on how you define cloud

25
00:00:53,039 --> 00:00:54,399
because you know when you talk to

26
00:00:54,399 --> 00:00:56,160
industry analysts and they tell you that

27
00:00:56,160 --> 00:00:57,199
90 percent of

28
00:00:57,199 --> 00:01:00,079
everyone is using cloud services they

29
00:01:00,079 --> 00:01:01,199
forget to tell you

30
00:01:01,199 --> 00:01:04,559
that they're using office 365 or so

31
00:01:04,559 --> 00:01:04,959
called

32
00:01:04,959 --> 00:01:06,880
software as a service which honestly is

33
00:01:06,880 --> 00:01:08,400
just a website so

34
00:01:08,400 --> 00:01:10,799
why bother you just need some internet

35
00:01:10,799 --> 00:01:12,080
connection or whatever

36
00:01:12,080 --> 00:01:13,840
and you're there and we know how to do

37
00:01:13,840 --> 00:01:15,920
that and let's move on

38
00:01:15,920 --> 00:01:17,920
then you have platform as a service

39
00:01:17,920 --> 00:01:19,360
which was known as

40
00:01:19,360 --> 00:01:22,080
web hosting before it was called

41
00:01:22,080 --> 00:01:23,680
serverless because serverless

42
00:01:23,680 --> 00:01:26,560
sounds so much better than you know web

43
00:01:26,560 --> 00:01:28,560
hosting because everyone understood what

44
00:01:28,560 --> 00:01:31,040
web hosting is and now with serverless

45
00:01:31,040 --> 00:01:32,079
you can you know

46
00:01:32,079 --> 00:01:35,680
do wonders uh there the plumbing is

47
00:01:35,680 --> 00:01:37,680
implemented by the cloud provider and

48
00:01:37,680 --> 00:01:39,520
you honestly don't care about that

49
00:01:39,520 --> 00:01:42,079
unless you want to connect platform as a

50
00:01:42,079 --> 00:01:42,720
service

51
00:01:42,720 --> 00:01:45,600
with your existing workload when the fun

52
00:01:45,600 --> 00:01:46,960
starts

53
00:01:46,960 --> 00:01:49,280
but what if you want to do the classical

54
00:01:49,280 --> 00:01:51,119
infrastructure as a service

55
00:01:51,119 --> 00:01:52,479
where do you think you will connect your

56
00:01:52,479 --> 00:01:55,040
vms to and how will they connect to the

57
00:01:55,040 --> 00:01:56,079
outside world

58
00:01:56,079 --> 00:01:58,960
and we'll go through those details and

59
00:01:58,960 --> 00:01:59,920
finally

60
00:01:59,920 --> 00:02:02,479
lately all the public cloud providers

61
00:02:02,479 --> 00:02:04,960
started offering container as a service

62
00:02:04,960 --> 00:02:07,840
mostly running on kubernetes and that

63
00:02:07,840 --> 00:02:08,318
thing

64
00:02:08,318 --> 00:02:11,360
is really just abstracted ned madness

65
00:02:11,360 --> 00:02:13,440
and we'll forget about that for today

66
00:02:13,440 --> 00:02:14,640
otherwise we'll never

67
00:02:14,640 --> 00:02:18,080
end so today we'll talk about public

68
00:02:18,080 --> 00:02:19,840
cloud networking from the end user

69
00:02:19,840 --> 00:02:20,720
perspective

70
00:02:20,720 --> 00:02:22,720
we'll figure out how different it is

71
00:02:22,720 --> 00:02:24,800
we'll also figure out that it's on one

72
00:02:24,800 --> 00:02:25,360
hand

73
00:02:25,360 --> 00:02:27,599
nothing special but on the other hand

74
00:02:27,599 --> 00:02:30,720
it's crazily complex

75
00:02:30,720 --> 00:02:33,760
so starting with the bare minimum for

76
00:02:33,760 --> 00:02:36,640
in every public cloud these days you can

77
00:02:36,640 --> 00:02:38,879
create your own tenant network and then

78
00:02:38,879 --> 00:02:40,959
you have to create one or more subnets

79
00:02:40,959 --> 00:02:42,959
and then you create the virtual machines

80
00:02:42,959 --> 00:02:44,239
and the virtual machine

81
00:02:44,239 --> 00:02:46,879
has an ethernet interface everything is

82
00:02:46,879 --> 00:02:48,959
running on ethernet these days so

83
00:02:48,959 --> 00:02:50,720
of course the virtual machine has an

84
00:02:50,720 --> 00:02:52,560
internet interface even though

85
00:02:52,560 --> 00:02:54,000
everything is running on virtual

86
00:02:54,000 --> 00:02:55,840
networks and then you

87
00:02:55,840 --> 00:02:58,720
connect that ethernet interface to the

88
00:02:58,720 --> 00:02:59,840
virtual subnet

89
00:02:59,840 --> 00:03:02,959
and someone magically gives an ip

90
00:03:02,959 --> 00:03:04,080
address to that

91
00:03:04,080 --> 00:03:06,400
interface it's all done through dhcp

92
00:03:06,400 --> 00:03:08,959
there's no other way

93
00:03:08,959 --> 00:03:12,640
and then you start a vm and everything

94
00:03:12,640 --> 00:03:16,560
works until it doesn't

95
00:03:16,560 --> 00:03:18,319
as you know there are still people who

96
00:03:18,319 --> 00:03:19,760
don't understand that

97
00:03:19,760 --> 00:03:22,640
one cannot simply connect servers to the

98
00:03:22,640 --> 00:03:23,440
internet and

99
00:03:23,440 --> 00:03:26,000
hope that nothing bad will happen and

100
00:03:26,000 --> 00:03:27,440
some of those people are running

101
00:03:27,440 --> 00:03:30,319
men cache d on their servers and running

102
00:03:30,319 --> 00:03:31,440
memcache d

103
00:03:31,440 --> 00:03:34,239
on udp and so some other people are

104
00:03:34,239 --> 00:03:35,680
using those people

105
00:03:35,680 --> 00:03:38,959
as a great amplification tool for ddos

106
00:03:38,959 --> 00:03:39,680
attacks

107
00:03:39,680 --> 00:03:41,440
and you know what's the best thing about

108
00:03:41,440 --> 00:03:43,440
that the person

109
00:03:43,440 --> 00:03:46,080
who left his memcache d server wide open

110
00:03:46,080 --> 00:03:47,040
to the world

111
00:03:47,040 --> 00:03:51,920
is paying egress fees for his omissions

112
00:03:51,920 --> 00:03:54,959
anyway we have to add security so you

113
00:03:54,959 --> 00:03:57,519
have to protect the vms and there

114
00:03:57,519 --> 00:03:59,280
the first question is will you use

115
00:03:59,280 --> 00:04:00,560
security groups

116
00:04:00,560 --> 00:04:02,799
which is really a fancy name for access

117
00:04:02,799 --> 00:04:03,920
control lists

118
00:04:03,920 --> 00:04:06,640
usually stateful or will you use

119
00:04:06,640 --> 00:04:07,599
firewalls

120
00:04:07,599 --> 00:04:10,560
and is the cloud provided firewall good

121
00:04:10,560 --> 00:04:11,040
enough

122
00:04:11,040 --> 00:04:13,599
or do you want to bring your own

123
00:04:13,599 --> 00:04:14,239
firewall

124
00:04:14,239 --> 00:04:17,839
and honestly don't don't even think

125
00:04:17,839 --> 00:04:19,759
about bringing your own firewall

126
00:04:19,759 --> 00:04:22,880
it's a total disaster

127
00:04:22,880 --> 00:04:25,680
firewall vendors are doing great job

128
00:04:25,680 --> 00:04:26,720
trying to

129
00:04:26,720 --> 00:04:29,600
document how to do it properly and as

130
00:04:29,600 --> 00:04:31,840
simply as possible but

131
00:04:31,840 --> 00:04:34,639
once you start digging into that stuff

132
00:04:34,639 --> 00:04:36,080
you go insane so

133
00:04:36,080 --> 00:04:39,759
don't but that's not all

134
00:04:39,759 --> 00:04:42,240
the next minute someone figures out that

135
00:04:42,240 --> 00:04:44,479
oh we might need more than one server so

136
00:04:44,479 --> 00:04:46,639
let's add load balancing and it can be

137
00:04:46,639 --> 00:04:48,160
either on the network level

138
00:04:48,160 --> 00:04:51,360
on tcp or udp ports or it can be an http

139
00:04:51,360 --> 00:04:52,639
load balancer

140
00:04:52,639 --> 00:04:55,680
then someone figures out that oh my what

141
00:04:55,680 --> 00:04:58,240
if this cloud thingy goes down

142
00:04:58,240 --> 00:04:59,600
and then you start thinking about

143
00:04:59,600 --> 00:05:01,440
availability zones which

144
00:05:01,440 --> 00:05:04,320
are really failure domains in one

145
00:05:04,320 --> 00:05:05,759
geographical location

146
00:05:05,759 --> 00:05:08,479
or regions because i've heard that there

147
00:05:08,479 --> 00:05:11,280
are some parts of us for example

148
00:05:11,280 --> 00:05:13,199
where there might be floods coming in

149
00:05:13,199 --> 00:05:15,039
and you don't want to have your workload

150
00:05:15,039 --> 00:05:17,680
just in that region

151
00:05:17,680 --> 00:05:19,759
and then of course you need to connect

152
00:05:19,759 --> 00:05:21,280
the workloads that are running in the

153
00:05:21,280 --> 00:05:23,039
cloud back to the workloads that are

154
00:05:23,039 --> 00:05:24,880
running on premises unless of course

155
00:05:24,880 --> 00:05:26,880
you're a unicorn startup and everything

156
00:05:26,880 --> 00:05:28,400
is in the cloud

157
00:05:28,400 --> 00:05:31,039
at which point you will be dealing with

158
00:05:31,039 --> 00:05:31,919
ipsec

159
00:05:31,919 --> 00:05:33,840
and you will be dealing with virtual

160
00:05:33,840 --> 00:05:35,919
tunnel interfaces and you will be

161
00:05:35,919 --> 00:05:36,840
dealing with

162
00:05:36,840 --> 00:05:39,840
bgp and if you want to have direct

163
00:05:39,840 --> 00:05:40,960
connection to the cloud

164
00:05:40,960 --> 00:05:43,600
every single cloud provider is working

165
00:05:43,600 --> 00:05:44,560
with vlans

166
00:05:44,560 --> 00:05:48,000
and subnets and ebgp running on top of

167
00:05:48,000 --> 00:05:48,720
that

168
00:05:48,720 --> 00:05:51,360
and then you have people who are telling

169
00:05:51,360 --> 00:05:52,000
you how

170
00:05:52,000 --> 00:05:54,080
much better it is if you deploy your

171
00:05:54,080 --> 00:05:56,479
workloads in multiple clouds

172
00:05:56,479 --> 00:06:00,160
please don't as you'll see in a few

173
00:06:00,160 --> 00:06:00,960
minutes

174
00:06:00,960 --> 00:06:03,520
every single public cloud provider does

175
00:06:03,520 --> 00:06:06,080
things a little bit different

176
00:06:06,080 --> 00:06:09,360
and why exactly would you want to learn

177
00:06:09,360 --> 00:06:12,000
three different ways of doing the same

178
00:06:12,000 --> 00:06:12,479
thing

179
00:06:12,479 --> 00:06:15,840
just don't obviously it makes perfect

180
00:06:15,840 --> 00:06:16,800
sense to run

181
00:06:16,800 --> 00:06:20,160
office 365 and have your

182
00:06:20,160 --> 00:06:23,039
compute workload on amazon and use

183
00:06:23,039 --> 00:06:24,080
google dots

184
00:06:24,080 --> 00:06:27,680
but remember those are just two websites

185
00:06:27,680 --> 00:06:29,440
and your infrastructure as a service in

186
00:06:29,440 --> 00:06:31,199
the third cloud that's perfectly fine

187
00:06:31,199 --> 00:06:33,520
but having compute spread across

188
00:06:33,520 --> 00:06:35,360
multiple public clouds

189
00:06:35,360 --> 00:06:39,360
maybe not and now that i

190
00:06:39,360 --> 00:06:42,479
briefly mentioned all those complexities

191
00:06:42,479 --> 00:06:46,719
who do you think will make that work

192
00:06:46,840 --> 00:06:49,199
developers

193
00:06:49,199 --> 00:06:52,880
cloud experts or someone who understands

194
00:06:52,880 --> 00:06:55,120
networking who knows how to make things

195
00:06:55,120 --> 00:06:56,240
work and so

196
00:06:56,240 --> 00:06:58,800
yes it is different and yes everyone

197
00:06:58,800 --> 00:07:00,000
believes that

198
00:07:00,000 --> 00:07:01,360
there is no need for networking

199
00:07:01,360 --> 00:07:03,599
engineers but in the end

200
00:07:03,599 --> 00:07:05,840
even though you are using api and

201
00:07:05,840 --> 00:07:07,120
terraform and

202
00:07:07,120 --> 00:07:09,520
ansible and who knows what else it's

203
00:07:09,520 --> 00:07:11,440
still networking and someone must still

204
00:07:11,440 --> 00:07:12,319
understand

205
00:07:12,319 --> 00:07:17,120
how for example a load balancer works

206
00:07:17,120 --> 00:07:19,599
on top of that networking in public

207
00:07:19,599 --> 00:07:20,479
clouds is

208
00:07:20,479 --> 00:07:24,400
different from what you're used to

209
00:07:24,400 --> 00:07:27,520
there is no layer 2 in any sane

210
00:07:27,520 --> 00:07:31,120
public cloud there is at least one

211
00:07:31,120 --> 00:07:33,759
not so small cloud provider that is now

212
00:07:33,759 --> 00:07:35,280
offering layer two

213
00:07:35,280 --> 00:07:38,560
that's why i'm saying sane public cloud

214
00:07:38,560 --> 00:07:41,199
and i'm not counting people who are

215
00:07:41,199 --> 00:07:43,360
running vmware and calling that a public

216
00:07:43,360 --> 00:07:44,080
cloud

217
00:07:44,080 --> 00:07:46,319
because we are talking about stuff that

218
00:07:46,319 --> 00:07:47,440
scales beyond

219
00:07:47,440 --> 00:07:49,759
approximately thousand hosts which is

220
00:07:49,759 --> 00:07:51,599
the scalability limit of

221
00:07:51,599 --> 00:07:55,039
any vmware solution i've seen so far

222
00:07:55,039 --> 00:07:57,440
so if there is no layer 2 in a public

223
00:07:57,440 --> 00:07:59,599
cloud how am i supposed to move virtual

224
00:07:59,599 --> 00:08:00,479
machines

225
00:08:00,479 --> 00:08:03,680
well guess what you won't

226
00:08:03,680 --> 00:08:05,599
how will i implement high availability

227
00:08:05,599 --> 00:08:07,199
clusters well

228
00:08:07,199 --> 00:08:10,080
it's great fun and will touch on that

229
00:08:10,080 --> 00:08:11,199
how will i deploy

230
00:08:11,199 --> 00:08:15,120
firewall clusters maybe you shouldn't

231
00:08:15,120 --> 00:08:18,319
because after all we're not dealing with

232
00:08:18,319 --> 00:08:21,280
uh physical boxes where the power supply

233
00:08:21,280 --> 00:08:22,720
can burn

234
00:08:22,720 --> 00:08:25,039
if your firewall crashes just restart

235
00:08:25,039 --> 00:08:26,479
the vm

236
00:08:26,479 --> 00:08:28,879
maybe it's better to have a little bit

237
00:08:28,879 --> 00:08:30,000
of downtime

238
00:08:30,000 --> 00:08:31,440
unless of course you have mission

239
00:08:31,440 --> 00:08:33,279
critical applications and you're losing

240
00:08:33,279 --> 00:08:35,039
millions per second

241
00:08:35,039 --> 00:08:37,360
and wait for the firewall to restart and

242
00:08:37,360 --> 00:08:39,919
trying to rebuild your firewall cluster

243
00:08:39,919 --> 00:08:41,919
in a public cloud

244
00:08:41,919 --> 00:08:44,959
and finally there's the

245
00:08:44,959 --> 00:08:47,440
eternal question of how will i migrate

246
00:08:47,440 --> 00:08:49,760
my workflows from on-premises data

247
00:08:49,760 --> 00:08:50,560
center

248
00:08:50,560 --> 00:08:53,920
into the public cloud one by one while

249
00:08:53,920 --> 00:08:54,959
retaining the

250
00:08:54,959 --> 00:08:57,120
ip addresses and of course the

251
00:08:57,120 --> 00:08:59,360
networking vendors have their answers

252
00:08:59,360 --> 00:09:00,720
for example

253
00:09:00,720 --> 00:09:03,600
lisp is the answer regardless of what

254
00:09:03,600 --> 00:09:04,720
the question is

255
00:09:04,720 --> 00:09:06,959
and of course there are people doing

256
00:09:06,959 --> 00:09:08,240
this with lisp

257
00:09:08,240 --> 00:09:12,240
please don't if someone wants to move to

258
00:09:12,240 --> 00:09:13,279
the cloud

259
00:09:13,279 --> 00:09:16,320
they should re-architect stuff they

260
00:09:16,320 --> 00:09:16,800
shouldn't

261
00:09:16,800 --> 00:09:20,000
try to stretch existing subnets into the

262
00:09:20,000 --> 00:09:20,880
public cloud

263
00:09:20,880 --> 00:09:23,760
because remember public cloud is the

264
00:09:23,760 --> 00:09:25,279
same environment

265
00:09:25,279 --> 00:09:28,720
based on ip routing not crazy

266
00:09:28,720 --> 00:09:32,000
layer 2 tricks now

267
00:09:32,000 --> 00:09:34,399
comparing aws versus azure they have

268
00:09:34,399 --> 00:09:36,480
some common concepts like

269
00:09:36,480 --> 00:09:40,080
they both have isolated routing domains

270
00:09:40,080 --> 00:09:43,279
uh aws calls them bpc

271
00:09:43,279 --> 00:09:46,080
azure calls them vnet and they are like

272
00:09:46,080 --> 00:09:47,360
device context

273
00:09:47,360 --> 00:09:50,880
on a nexus switch both of them

274
00:09:50,880 --> 00:09:53,440
have multiple subnets within that

275
00:09:53,440 --> 00:09:54,880
routing domain

276
00:09:54,880 --> 00:09:58,000
in both of them and any other

277
00:09:58,000 --> 00:10:00,560
public cloud large public cloud that

278
00:10:00,560 --> 00:10:01,600
i've seen

279
00:10:01,600 --> 00:10:04,000
the ip and the mac addresses are

280
00:10:04,000 --> 00:10:06,800
assigned by the orchestration system

281
00:10:06,800 --> 00:10:09,279
yes you can change the ip address

282
00:10:09,279 --> 00:10:11,519
usually you can change the mac address

283
00:10:11,519 --> 00:10:14,800
or you can specify what ip address you

284
00:10:14,800 --> 00:10:18,079
want to use but it is done

285
00:10:18,079 --> 00:10:20,640
through the orchestration system api

286
00:10:20,640 --> 00:10:21,440
there is no

287
00:10:21,440 --> 00:10:23,920
ip address snooping there is no dhcp

288
00:10:23,920 --> 00:10:26,160
snooping there is no arp snooping

289
00:10:26,160 --> 00:10:28,480
there is no crazy layer two tricks that

290
00:10:28,480 --> 00:10:30,399
we are so used to

291
00:10:30,399 --> 00:10:33,760
from the crazy enterprise world

292
00:10:33,760 --> 00:10:36,160
everything has to be done through the

293
00:10:36,160 --> 00:10:38,959
orchestration system including routing

294
00:10:38,959 --> 00:10:40,959
routing is controlled by the

295
00:10:40,959 --> 00:10:42,959
orchestration system

296
00:10:42,959 --> 00:10:46,240
and yes you can disable strict ip source

297
00:10:46,240 --> 00:10:48,240
ip and source mac checks

298
00:10:48,240 --> 00:10:51,519
but they are enabled by default

299
00:10:51,519 --> 00:10:54,560
so what does that mean you cannot use

300
00:10:54,560 --> 00:10:57,760
any first hop redundancy protocols

301
00:10:57,760 --> 00:11:00,959
hsrp vrrp glbp

302
00:11:00,959 --> 00:11:03,920
they don't work because you cannot just

303
00:11:03,920 --> 00:11:06,399
grab a mac address and pull it over to a

304
00:11:06,399 --> 00:11:07,360
different vm

305
00:11:07,360 --> 00:11:09,200
you cannot just grab an ip address and

306
00:11:09,200 --> 00:11:10,480
say it's mine

307
00:11:10,480 --> 00:11:14,880
with a gratuitous arp that doesn't work

308
00:11:14,880 --> 00:11:17,600
the only way to change or move an ip

309
00:11:17,600 --> 00:11:18,160
address

310
00:11:18,160 --> 00:11:21,360
is through an orchestration system api

311
00:11:21,360 --> 00:11:24,560
call now with aws that's a viable

312
00:11:24,560 --> 00:11:25,600
solution

313
00:11:25,600 --> 00:11:28,640
with azure sometimes their restoration

314
00:11:28,640 --> 00:11:29,760
system becomes

315
00:11:29,760 --> 00:11:33,760
glacially slow and so the worst i've

316
00:11:33,760 --> 00:11:34,240
heard

317
00:11:34,240 --> 00:11:38,160
was it took 17 minutes to install a

318
00:11:38,160 --> 00:11:39,760
static route

319
00:11:39,760 --> 00:11:42,640
now if you have two routers two sd-wan

320
00:11:42,640 --> 00:11:43,920
devices let's say

321
00:11:43,920 --> 00:11:46,640
and you use static crowd static default

322
00:11:46,640 --> 00:11:47,839
route pointing to one

323
00:11:47,839 --> 00:11:49,360
or the other of them because you can't

324
00:11:49,360 --> 00:11:51,040
have two default routes

325
00:11:51,040 --> 00:11:53,120
that's cloud for you and then that

326
00:11:53,120 --> 00:11:54,800
device crashes and you want to

327
00:11:54,800 --> 00:11:56,240
move the static route to the other

328
00:11:56,240 --> 00:11:58,880
device perfectly easy

329
00:11:58,880 --> 00:12:01,920
a bit of python and you're done

330
00:12:01,920 --> 00:12:05,440
17 minutes later you can reach your

331
00:12:05,440 --> 00:12:06,320
network

332
00:12:06,320 --> 00:12:09,760
maybe not a good idea uh

333
00:12:09,760 --> 00:12:12,079
also you just you cannot just run a

334
00:12:12,079 --> 00:12:13,200
routing protocol

335
00:12:13,200 --> 00:12:15,200
within the cloud for example from your

336
00:12:15,200 --> 00:12:17,360
vms running bgp

337
00:12:17,360 --> 00:12:19,680
with the cloud that doesn't work there

338
00:12:19,680 --> 00:12:21,279
are a few exceptions like

339
00:12:21,279 --> 00:12:24,560
azure route server or aws

340
00:12:24,560 --> 00:12:27,839
transit gateway connect peers these are

341
00:12:27,839 --> 00:12:30,240
brand new things azure route server is

342
00:12:30,240 --> 00:12:32,160
still in preview

343
00:12:32,160 --> 00:12:34,320
aws doesn't believe in previews when

344
00:12:34,320 --> 00:12:35,440
they launch something

345
00:12:35,440 --> 00:12:39,279
it works but you know be careful these

346
00:12:39,279 --> 00:12:39,680
are

347
00:12:39,680 --> 00:12:42,880
new thingies in

348
00:12:42,880 --> 00:12:46,079
aws they focused on availability so

349
00:12:46,079 --> 00:12:48,399
each subnet is limited to one single

350
00:12:48,399 --> 00:12:50,240
availability zone remember availability

351
00:12:50,240 --> 00:12:52,959
zone is a failure domain

352
00:12:52,959 --> 00:12:56,399
which means that it's extremely easy

353
00:12:56,399 --> 00:12:58,720
to build resilient applications you

354
00:12:58,720 --> 00:13:01,040
deploy a few servers in one subnet

355
00:13:01,040 --> 00:13:02,800
you deploy a few servers in the other

356
00:13:02,800 --> 00:13:04,720
subnet and you know

357
00:13:04,720 --> 00:13:07,920
that if one failure domain goes down the

358
00:13:07,920 --> 00:13:11,200
other subnet will stay alive

359
00:13:11,200 --> 00:13:14,320
they do unicast ipv4 and ipv6 forwarding

360
00:13:14,320 --> 00:13:15,120
they have

361
00:13:15,120 --> 00:13:19,920
some approximation of ipv4 multicast

362
00:13:19,920 --> 00:13:22,000
statically configured through the api

363
00:13:22,000 --> 00:13:23,040
calls

364
00:13:23,040 --> 00:13:24,880
interestingly they don't do layer 2

365
00:13:24,880 --> 00:13:26,880
flooding and all that stuff

366
00:13:26,880 --> 00:13:29,279
but within the subnet they are not

367
00:13:29,279 --> 00:13:30,000
looking at

368
00:13:30,000 --> 00:13:31,760
ip addresses they're looking at mac

369
00:13:31,760 --> 00:13:33,839
addresses and that allows you to do

370
00:13:33,839 --> 00:13:36,240
crazy tricks like static routes between

371
00:13:36,240 --> 00:13:39,519
a and b for example but only

372
00:13:39,519 --> 00:13:42,800
within the subnet interestingly the same

373
00:13:42,800 --> 00:13:44,560
thing for aws and azure

374
00:13:44,560 --> 00:13:46,560
each subnet can have a different route

375
00:13:46,560 --> 00:13:48,079
table so except that could be

376
00:13:48,079 --> 00:13:51,360
almost like a vrf but

377
00:13:51,360 --> 00:13:54,399
in aws there is absolutely no way

378
00:13:54,399 --> 00:13:58,240
to influence intra vpc packet forwarding

379
00:13:58,240 --> 00:13:59,839
so if you want to insert a firewall

380
00:13:59,839 --> 00:14:01,839
between a and c

381
00:14:01,839 --> 00:14:05,040
it's totally impossible

382
00:14:05,040 --> 00:14:08,399
if a sends a packet to c there is

383
00:14:08,399 --> 00:14:11,440
absolutely no way that you can intercept

384
00:14:11,440 --> 00:14:12,399
that packet

385
00:14:12,399 --> 00:14:14,320
and send it somewhere else for

386
00:14:14,320 --> 00:14:16,240
inspection if you want to do that then

387
00:14:16,240 --> 00:14:19,680
a and c in this case must be in two

388
00:14:19,680 --> 00:14:22,160
different vpcs because between dpcs you

389
00:14:22,160 --> 00:14:25,199
can do all sorts of crazy stuff

390
00:14:25,199 --> 00:14:27,920
speaking about crazy stuff in aws all

391
00:14:27,920 --> 00:14:28,800
the crazy stuff

392
00:14:28,800 --> 00:14:31,600
is done with static routes so if you

393
00:14:31,600 --> 00:14:32,240
want to

394
00:14:32,240 --> 00:14:35,279
build a complex scenario with many vpcs

395
00:14:35,279 --> 00:14:36,959
it's perfectly possible

396
00:14:36,959 --> 00:14:40,399
you'll also enjoy a gazillion static

397
00:14:40,399 --> 00:14:41,760
routes configured through the

398
00:14:41,760 --> 00:14:43,760
orchestration system

399
00:14:43,760 --> 00:14:47,279
so we are back to 1960s

400
00:14:47,279 --> 00:14:49,519
so intravpc service insertion is really

401
00:14:49,519 --> 00:14:50,480
really hard

402
00:14:50,480 --> 00:14:53,519
and yes you can get some things done

403
00:14:53,519 --> 00:14:58,800
usually with a lot of net involved

404
00:14:58,800 --> 00:15:00,560
as i said you can do routing tricks

405
00:15:00,560 --> 00:15:01,920
within a subnet because

406
00:15:01,920 --> 00:15:04,880
between a and b they look at mac

407
00:15:04,880 --> 00:15:06,480
addresses so you can use static routes

408
00:15:06,480 --> 00:15:06,959
but not

409
00:15:06,959 --> 00:15:10,320
across subnets azure is totally

410
00:15:10,320 --> 00:15:11,839
different

411
00:15:11,839 --> 00:15:14,639
subnets span availability zones which

412
00:15:14,639 --> 00:15:16,079
means that it's really

413
00:15:16,079 --> 00:15:18,399
harder to build highly available

414
00:15:18,399 --> 00:15:20,000
applications because

415
00:15:20,000 --> 00:15:22,240
you can't just put two servers in one

416
00:15:22,240 --> 00:15:24,720
subnet and two servers in another subnet

417
00:15:24,720 --> 00:15:27,199
you have to work with availability sets

418
00:15:27,199 --> 00:15:29,120
and you have to work with zonal

419
00:15:29,120 --> 00:15:30,639
resources

420
00:15:30,639 --> 00:15:34,240
so you have to be careful they also do

421
00:15:34,240 --> 00:15:36,639
unicast ipv4 and ipv6

422
00:15:36,639 --> 00:15:39,759
they don't look at mac addresses at all

423
00:15:39,759 --> 00:15:40,160
it

424
00:15:40,160 --> 00:15:43,040
looks like every instance would be

425
00:15:43,040 --> 00:15:43,839
connected

426
00:15:43,839 --> 00:15:47,279
directly to a router you look at the arp

427
00:15:47,279 --> 00:15:48,079
table

428
00:15:48,079 --> 00:15:50,560
all the mac addresses on your vm are the

429
00:15:50,560 --> 00:15:51,360
same

430
00:15:51,360 --> 00:15:53,839
so whenever you arb for anything what

431
00:15:53,839 --> 00:15:55,680
you get back is the mac address

432
00:15:55,680 --> 00:15:59,199
of azure router like with aws

433
00:15:59,199 --> 00:16:00,639
every subnet could have a different

434
00:16:00,639 --> 00:16:02,880
route table and

435
00:16:02,880 --> 00:16:05,759
the route table can contain prefixes

436
00:16:05,759 --> 00:16:07,360
that belong to the v-net

437
00:16:07,360 --> 00:16:11,279
so it's perfectly fine to say well

438
00:16:11,279 --> 00:16:14,079
if a wants to send the packets to b i'll

439
00:16:14,079 --> 00:16:15,360
intercept that

440
00:16:15,360 --> 00:16:17,680
send it to the firewall and then send it

441
00:16:17,680 --> 00:16:18,880
to bn the same thing

442
00:16:18,880 --> 00:16:22,079
on the way back so service insertion

443
00:16:22,079 --> 00:16:25,040
in azure is easy to do but it's messy

444
00:16:25,040 --> 00:16:26,480
because you're dealing with multiple

445
00:16:26,480 --> 00:16:28,480
routes tables and static routes

446
00:16:28,480 --> 00:16:31,920
and all that building proper

447
00:16:31,920 --> 00:16:34,160
high availability architectures with

448
00:16:34,160 --> 00:16:36,320
swim lanes where you have two

449
00:16:36,320 --> 00:16:39,040
totally different application stacks is

450
00:16:39,040 --> 00:16:41,440
harder because these subnets are not

451
00:16:41,440 --> 00:16:45,680
tied to availability zones

452
00:16:45,680 --> 00:16:48,160
so looking at that and these are just

453
00:16:48,160 --> 00:16:50,079
two you look at google

454
00:16:50,079 --> 00:16:53,360
you look at oracle you look at rackspace

455
00:16:53,360 --> 00:16:55,600
they're all different

456
00:16:55,600 --> 00:16:58,079
so you say well why couldn't just they

457
00:16:58,079 --> 00:17:01,519
be why couldn't they just be the same

458
00:17:01,519 --> 00:17:04,160
and the problem is that you know they

459
00:17:04,160 --> 00:17:06,720
all started from different places

460
00:17:06,720 --> 00:17:10,000
they all had different audiences so

461
00:17:10,000 --> 00:17:12,799
microsoft is obviously more enterprise

462
00:17:12,799 --> 00:17:13,439
focused

463
00:17:13,439 --> 00:17:16,480
aws is more developer focused

464
00:17:16,480 --> 00:17:18,400
they probably have different scalability

465
00:17:18,400 --> 00:17:19,760
goals

466
00:17:19,760 --> 00:17:23,039
azure has like 130 different regions

467
00:17:23,039 --> 00:17:26,959
uh aws has a few dozen regions and they

468
00:17:26,959 --> 00:17:28,160
must be

469
00:17:28,160 --> 00:17:31,200
an order of magnitude bigger than some

470
00:17:31,200 --> 00:17:32,960
of the azure regions

471
00:17:32,960 --> 00:17:34,960
they were fixing different problems

472
00:17:34,960 --> 00:17:36,240
probably

473
00:17:36,240 --> 00:17:39,600
uh azure is running

474
00:17:39,600 --> 00:17:43,280
at some variant of hyper-v we know that

475
00:17:43,280 --> 00:17:44,240
aws

476
00:17:44,240 --> 00:17:46,559
was running on zen if i remember

477
00:17:46,559 --> 00:17:48,240
correctly so they were dealing with

478
00:17:48,240 --> 00:17:49,600
different things

479
00:17:49,600 --> 00:17:51,600
and so they were solving the same

480
00:17:51,600 --> 00:17:53,919
problem in different ways because

481
00:17:53,919 --> 00:17:56,880
you know how the id industry works when

482
00:17:56,880 --> 00:17:57,840
you have a hammer

483
00:17:57,840 --> 00:17:59,760
everything starts looking like a nail

484
00:17:59,760 --> 00:18:01,919
and you use the hammer until someone

485
00:18:01,919 --> 00:18:04,160
points out that now you're doing damage

486
00:18:04,160 --> 00:18:05,200
to yourself

487
00:18:05,200 --> 00:18:06,640
and then you start looking for the

488
00:18:06,640 --> 00:18:09,120
screwdriver

489
00:18:09,120 --> 00:18:12,799
now why does that matter the problem is

490
00:18:12,799 --> 00:18:16,760
that the moment you start thinking about

491
00:18:16,760 --> 00:18:19,840
multi-cloud you have to decide

492
00:18:19,840 --> 00:18:22,480
will i be limited to the least common

493
00:18:22,480 --> 00:18:24,480
denominator of all the clouds

494
00:18:24,480 --> 00:18:28,080
i want to work with or will i use

495
00:18:28,080 --> 00:18:31,280
cloud specific features and of course if

496
00:18:31,280 --> 00:18:33,120
you start using cloud specific features

497
00:18:33,120 --> 00:18:34,720
the portability is

498
00:18:34,720 --> 00:18:37,520
gone the next microsecond it's like you

499
00:18:37,520 --> 00:18:38,000
know

500
00:18:38,000 --> 00:18:40,559
i'm buying cisco boxes and should i use

501
00:18:40,559 --> 00:18:41,440
eigrp

502
00:18:41,440 --> 00:18:45,200
or not or i'm buying juniper boxes

503
00:18:45,200 --> 00:18:48,080
and should i rely on the automatic gre

504
00:18:48,080 --> 00:18:49,440
tunnels between pe

505
00:18:49,440 --> 00:18:52,640
routers or not

506
00:18:53,440 --> 00:18:56,720
even real life tools that some

507
00:18:56,720 --> 00:18:59,840
so-called thought leaders try to sell

508
00:18:59,840 --> 00:19:00,240
you

509
00:19:00,240 --> 00:19:04,640
as preventing the cloud lock-in

510
00:19:04,640 --> 00:19:07,360
really have cloud-specific plugins or

511
00:19:07,360 --> 00:19:09,360
modules so terraform has

512
00:19:09,360 --> 00:19:12,559
cloud specific plugins for aws azure

513
00:19:12,559 --> 00:19:14,960
gcp you name it the same thing with

514
00:19:14,960 --> 00:19:17,200
ansible only they're called modules

515
00:19:17,200 --> 00:19:19,919
so you can't just take an infrastructure

516
00:19:19,919 --> 00:19:21,360
definition that you deployed

517
00:19:21,360 --> 00:19:25,200
on azure and deploy it on aws

518
00:19:25,200 --> 00:19:28,400
so multi-cloud really works best

519
00:19:28,400 --> 00:19:31,039
in powerpoint and yeah i am using

520
00:19:31,039 --> 00:19:32,480
powerpoint at this point so let's move

521
00:19:32,480 --> 00:19:34,320
on

522
00:19:34,320 --> 00:19:37,200
uh on the other hand networking in

523
00:19:37,200 --> 00:19:38,080
public cloud

524
00:19:38,080 --> 00:19:40,880
apart from a few differences that i

525
00:19:40,880 --> 00:19:41,840
explained

526
00:19:41,840 --> 00:19:46,000
is nothing special for example

527
00:19:46,000 --> 00:19:49,039
you want to build a vpn connectivity and

528
00:19:49,039 --> 00:19:51,120
it's almost the same for aws

529
00:19:51,120 --> 00:19:54,320
and azure you will have to use an

530
00:19:54,320 --> 00:19:56,480
ipsec tunnel so you will have to

531
00:19:56,480 --> 00:19:59,039
configure ipsec in a tunnel mode

532
00:19:59,039 --> 00:20:01,200
and you will have to configure ipsec

533
00:20:01,200 --> 00:20:03,440
with a virtual tunnel interface

534
00:20:03,440 --> 00:20:07,520
and these are unnumbered interfaces and

535
00:20:07,520 --> 00:20:10,240
you have to run ebgp over it so what do

536
00:20:10,240 --> 00:20:11,039
you do

537
00:20:11,039 --> 00:20:14,240
well you create a static crowd to the

538
00:20:14,240 --> 00:20:15,840
next hop pointing to the tunnel

539
00:20:15,840 --> 00:20:16,960
interface

540
00:20:16,960 --> 00:20:18,960
and they do the same thing on their end

541
00:20:18,960 --> 00:20:20,000
automatically is through your

542
00:20:20,000 --> 00:20:21,200
orchestration system

543
00:20:21,200 --> 00:20:25,039
and then you run ebgp multi-hop session

544
00:20:25,039 --> 00:20:28,240
and similarly for direct connection uh

545
00:20:28,240 --> 00:20:29,280
you create a

546
00:20:29,280 --> 00:20:32,240
vlan trunk then for every connection

547
00:20:32,240 --> 00:20:35,120
into the public cloud you take a vlan

548
00:20:35,120 --> 00:20:36,880
you provision the vlan in the

549
00:20:36,880 --> 00:20:38,559
orchestration system so that

550
00:20:38,559 --> 00:20:40,720
they provision their router and then

551
00:20:40,720 --> 00:20:42,080
you're running ebgp

552
00:20:42,080 --> 00:20:46,000
over it so wherever you look it's bgp

553
00:20:46,000 --> 00:20:49,919
everywhere and it's always ip routing

554
00:20:49,919 --> 00:20:53,039
no public cloud provider worth

555
00:20:53,039 --> 00:20:56,000
their name will allow you to extend your

556
00:20:56,000 --> 00:20:56,559
vlan

557
00:20:56,559 --> 00:20:58,720
into a public cloud because why should

558
00:20:58,720 --> 00:21:01,120
they they would just be exposed to

559
00:21:01,120 --> 00:21:03,280
all the spanning tree loops you would

560
00:21:03,280 --> 00:21:05,120
have in your network

561
00:21:05,120 --> 00:21:08,240
now their bgp implementation

562
00:21:08,240 --> 00:21:11,520
let's try to be diplomatic sucks

563
00:21:11,520 --> 00:21:14,400
so they don't have the gazillion bgp

564
00:21:14,400 --> 00:21:16,480
nerd knobs you're familiar with

565
00:21:16,480 --> 00:21:19,760
aws is much better than azure by the way

566
00:21:19,760 --> 00:21:22,480
so usually the only thing you can do to

567
00:21:22,480 --> 00:21:23,919
influence as path

568
00:21:23,919 --> 00:21:26,240
selection because you know you might

569
00:21:26,240 --> 00:21:28,159
want the direct connection to be

570
00:21:28,159 --> 00:21:30,400
preferred over the vpn connection

571
00:21:30,400 --> 00:21:33,840
is asp prepending aws

572
00:21:33,840 --> 00:21:36,159
does understand communities and they do

573
00:21:36,159 --> 00:21:38,400
use communities to mark their

574
00:21:38,400 --> 00:21:40,400
routes so you can use the communities to

575
00:21:40,400 --> 00:21:42,559
select routes coming from a certain

576
00:21:42,559 --> 00:21:44,559
region or global routes or

577
00:21:44,559 --> 00:21:47,360
what have you

578
00:21:48,000 --> 00:21:50,799
and finally even though you know it's a

579
00:21:50,799 --> 00:21:51,840
bit different

580
00:21:51,840 --> 00:21:55,039
and yeah it's all the same

581
00:21:55,039 --> 00:21:58,159
it can get crazily complex

582
00:21:58,159 --> 00:22:01,440
so aws for example launched

583
00:22:01,440 --> 00:22:06,320
something called gateway load balancer

584
00:22:06,320 --> 00:22:09,600
gateway load balancer is a thingy where

585
00:22:09,600 --> 00:22:10,559
you create

586
00:22:10,559 --> 00:22:14,880
a separate subnet sorry a separate vpc

587
00:22:14,880 --> 00:22:17,280
and then in that vpc you deploy your

588
00:22:17,280 --> 00:22:19,840
appliances like firewalls in my case

589
00:22:19,840 --> 00:22:23,360
and then they do load balancing across

590
00:22:23,360 --> 00:22:25,200
all those firewalls so that you have a

591
00:22:25,200 --> 00:22:26,720
scale out solution

592
00:22:26,720 --> 00:22:29,200
by the way they're using geneve because

593
00:22:29,200 --> 00:22:30,000
they need

594
00:22:30,000 --> 00:22:33,440
metadata in the tunnel so

595
00:22:33,440 --> 00:22:36,320
you need a firewall that supports geneve

596
00:22:36,320 --> 00:22:38,159
not many of them out there even though

597
00:22:38,159 --> 00:22:40,480
everyone is claiming to have one

598
00:22:40,480 --> 00:22:42,640
but let's forget about that that's the

599
00:22:42,640 --> 00:22:44,559
easy part

600
00:22:44,559 --> 00:22:47,919
somehow you have to intercept internet

601
00:22:47,919 --> 00:22:49,039
traffic

602
00:22:49,039 --> 00:22:51,600
send it to that gateway load balancer

603
00:22:51,600 --> 00:22:53,440
which will send it to the firewalls

604
00:22:53,440 --> 00:22:56,640
and then it has to come back and

605
00:22:56,640 --> 00:22:58,960
get to the application server and the

606
00:22:58,960 --> 00:23:01,280
same on the way back

607
00:23:01,280 --> 00:23:04,559
so to intercept the traffic coming from

608
00:23:04,559 --> 00:23:05,440
the internet

609
00:23:05,440 --> 00:23:08,240
you have to use a trick called ingress

610
00:23:08,240 --> 00:23:09,440
routing

611
00:23:09,440 --> 00:23:11,440
and that is attached to the internet

612
00:23:11,440 --> 00:23:14,559
gateway and you use a static route

613
00:23:14,559 --> 00:23:18,559
for your vpc cider prefix

614
00:23:18,559 --> 00:23:21,039
and you point that to the orange

615
00:23:21,039 --> 00:23:23,440
interface here on the picture

616
00:23:23,440 --> 00:23:26,320
so that you push the traffic into that

617
00:23:26,320 --> 00:23:27,520
interface

618
00:23:27,520 --> 00:23:31,039
whatever lens at that interface is

619
00:23:31,039 --> 00:23:33,120
load balanced across the firewall

620
00:23:33,120 --> 00:23:34,080
instances

621
00:23:34,080 --> 00:23:37,039
and then the packet comes back through

622
00:23:37,039 --> 00:23:38,960
the same interface

623
00:23:38,960 --> 00:23:42,400
so it's like a firewall on a stick

624
00:23:42,400 --> 00:23:44,960
and now the traffic needs to go to the

625
00:23:44,960 --> 00:23:46,559
application servers

626
00:23:46,559 --> 00:23:48,080
which means that you need a different

627
00:23:48,080 --> 00:23:49,679
route table right

628
00:23:49,679 --> 00:23:52,000
that's why we have the two routes tables

629
00:23:52,000 --> 00:23:53,679
on the top the red boxes are the routes

630
00:23:53,679 --> 00:23:56,080
tables

631
00:23:56,080 --> 00:23:58,400
but you also have to filter the outgoing

632
00:23:58,400 --> 00:24:00,720
traffic so the default route

633
00:24:00,720 --> 00:24:03,279
in the application subnet must point to

634
00:24:03,279 --> 00:24:04,799
the orange interface so that the

635
00:24:04,799 --> 00:24:06,240
outgoing traffic will go

636
00:24:06,240 --> 00:24:09,919
through the uh firewall

637
00:24:09,919 --> 00:24:12,559
and then as the traffic is returned the

638
00:24:12,559 --> 00:24:13,679
default route

639
00:24:13,679 --> 00:24:16,480
on the gateway load balancer subnet must

640
00:24:16,480 --> 00:24:18,240
point to the internet gateway so the

641
00:24:18,240 --> 00:24:19,039
traffic

642
00:24:19,039 --> 00:24:22,240
really goes out so you see you need

643
00:24:22,240 --> 00:24:25,760
three different route tables two subnets

644
00:24:25,760 --> 00:24:28,799
and a ton of static routes to make

645
00:24:28,799 --> 00:24:29,679
something

646
00:24:29,679 --> 00:24:33,039
as simple as a firewall cluster

647
00:24:33,039 --> 00:24:37,360
work well want to have more complexity

648
00:24:37,360 --> 00:24:41,120
let's add net gateway together with

649
00:24:41,120 --> 00:24:43,919
the network firewall which is really the

650
00:24:43,919 --> 00:24:46,000
same thing as gateway load balancer

651
00:24:46,000 --> 00:24:49,600
only it's a managed service of sturikata

652
00:24:49,600 --> 00:24:54,159
ids boxes so you need the default route

653
00:24:54,159 --> 00:24:56,080
in the application gateway pointing to

654
00:24:56,080 --> 00:24:56,880
the

655
00:24:56,880 --> 00:24:59,919
net gateway the net gateway has its own

656
00:24:59,919 --> 00:25:01,679
route table where the default route is

657
00:25:01,679 --> 00:25:03,919
pointing to the firewall interface

658
00:25:03,919 --> 00:25:05,919
the firewall interface is connected to a

659
00:25:05,919 --> 00:25:07,679
subnet where the default route is

660
00:25:07,679 --> 00:25:10,080
pointing to the internet gateway

661
00:25:10,080 --> 00:25:12,080
so we have this sequence of three

662
00:25:12,080 --> 00:25:13,840
default routes pointing in different

663
00:25:13,840 --> 00:25:15,520
directions so that we control the

664
00:25:15,520 --> 00:25:16,960
traffic flow

665
00:25:16,960 --> 00:25:19,919
and then on the ingress side you need

666
00:25:19,919 --> 00:25:21,919
the ingress route table pointing to the

667
00:25:21,919 --> 00:25:23,600
firewall interface

668
00:25:23,600 --> 00:25:26,960
and then we are in the vpc and remember

669
00:25:26,960 --> 00:25:29,679
you cannot control the traffic inside

670
00:25:29,679 --> 00:25:32,240
the vpc but what you do is

671
00:25:32,240 --> 00:25:34,240
because there is not involved remember

672
00:25:34,240 --> 00:25:36,159
we were talking about that gateway

673
00:25:36,159 --> 00:25:39,120
all the traffic is really arriving with

674
00:25:39,120 --> 00:25:40,960
the destination ip address of the

675
00:25:40,960 --> 00:25:42,480
netgate where it's all the traffic lanes

676
00:25:42,480 --> 00:25:43,520
at the net gateway

677
00:25:43,520 --> 00:25:45,360
and so now net gateway is in the

678
00:25:45,360 --> 00:25:47,520
forwarding path and it does the reverse

679
00:25:47,520 --> 00:25:49,120
that translation and sends the traffic

680
00:25:49,120 --> 00:25:50,000
to the

681
00:25:50,000 --> 00:25:53,360
vm instances

682
00:25:54,159 --> 00:25:57,279
um interesting spaghetti mess

683
00:25:57,279 --> 00:26:01,279
and this is just one vpc

684
00:26:01,279 --> 00:26:05,600
now imagine that you have multiple vpcs

685
00:26:05,600 --> 00:26:06,400
in the region

686
00:26:06,400 --> 00:26:08,400
and they have to communicate and you

687
00:26:08,400 --> 00:26:09,440
want the

688
00:26:09,440 --> 00:26:11,600
traffic between different departments

689
00:26:11,600 --> 00:26:14,320
sent through the firewall

690
00:26:14,320 --> 00:26:16,159
and then you have to add multiple

691
00:26:16,159 --> 00:26:19,200
regions and so you need transit gateways

692
00:26:19,200 --> 00:26:21,039
with static crowds between the regions

693
00:26:21,039 --> 00:26:22,559
and then you have the

694
00:26:22,559 --> 00:26:25,440
ingress vpc with load balancers for the

695
00:26:25,440 --> 00:26:27,120
incoming internet traffic and you have

696
00:26:27,120 --> 00:26:29,279
the egress vpcs

697
00:26:29,279 --> 00:26:32,400
with uh net gateways for all the

698
00:26:32,400 --> 00:26:34,159
outbound traffic to the internet and

699
00:26:34,159 --> 00:26:36,640
then you have the local egress

700
00:26:36,640 --> 00:26:39,039
for vpcs in other regions because you

701
00:26:39,039 --> 00:26:40,159
don't want to push

702
00:26:40,159 --> 00:26:41,919
everything through the central region

703
00:26:41,919 --> 00:26:43,760
and pay for the

704
00:26:43,760 --> 00:26:46,960
interregion fees and so on and so on and

705
00:26:46,960 --> 00:26:51,120
it's all driven by static routes

706
00:26:51,120 --> 00:26:53,520
so it's great fun managing and

707
00:26:53,520 --> 00:26:54,799
troubleshooting all this

708
00:26:54,799 --> 00:26:57,360
and by the way you don't have the same

709
00:26:57,360 --> 00:26:59,120
troubleshooting tools you have

710
00:26:59,120 --> 00:27:01,440
in your enterprise network and

711
00:27:01,440 --> 00:27:02,400
traceroute

712
00:27:02,400 --> 00:27:06,400
doesn't work just saying

713
00:27:06,400 --> 00:27:09,360
so what can you do how can you survive

714
00:27:09,360 --> 00:27:10,799
this madness

715
00:27:10,799 --> 00:27:13,840
well first forget powerpoint

716
00:27:13,840 --> 00:27:17,200
including mine uh it's time to

717
00:27:17,200 --> 00:27:20,640
take the cloud seriously it's time

718
00:27:20,640 --> 00:27:23,919
to start playing with it because in the

719
00:27:23,919 --> 00:27:25,279
end we will all

720
00:27:25,279 --> 00:27:27,600
have to work with it one way or the

721
00:27:27,600 --> 00:27:28,320
other

722
00:27:28,320 --> 00:27:31,679
so if you don't want to be like a kobold

723
00:27:31,679 --> 00:27:32,720
programmer

724
00:27:32,720 --> 00:27:35,360
you have to understand what the cloud

725
00:27:35,360 --> 00:27:35,919
does

726
00:27:35,919 --> 00:27:39,279
and the only way to understand that is

727
00:27:39,279 --> 00:27:42,080
dream up the scenarios like i want to

728
00:27:42,080 --> 00:27:44,320
deploy a simple web server i

729
00:27:44,320 --> 00:27:47,200
want to have a bunch of servers with ssh

730
00:27:47,200 --> 00:27:48,399
bastion host

731
00:27:48,399 --> 00:27:49,919
i want to have servers in two

732
00:27:49,919 --> 00:27:51,520
availability zones

733
00:27:51,520 --> 00:27:54,559
i want to have i don't know

734
00:27:54,559 --> 00:27:56,559
load balancer in front of three web

735
00:27:56,559 --> 00:27:57,919
servers so build

736
00:27:57,919 --> 00:28:00,880
those simple scenarios and it's really

737
00:28:00,880 --> 00:28:03,200
easy because all cloud providers give

738
00:28:03,200 --> 00:28:04,320
you some

739
00:28:04,320 --> 00:28:07,600
free level of service so

740
00:28:07,600 --> 00:28:10,080
not a problem you just create a cloud

741
00:28:10,080 --> 00:28:10,720
account

742
00:28:10,720 --> 00:28:14,399
and off you go and you start exploring

743
00:28:14,399 --> 00:28:16,159
don't believe in powerpoints don't

744
00:28:16,159 --> 00:28:18,799
believe in blog posts including mine

745
00:28:18,799 --> 00:28:22,000
read the documentation and start with

746
00:28:22,000 --> 00:28:23,279
the fundamentals

747
00:28:23,279 --> 00:28:26,720
do something extremely simple

748
00:28:26,720 --> 00:28:30,559
deploy one vm see how that works

749
00:28:30,559 --> 00:28:33,600
deploy two vms in the same subnet

750
00:28:33,600 --> 00:28:36,640
ping between them explore the arp tables

751
00:28:36,640 --> 00:28:38,720
explore the ip routing tables

752
00:28:38,720 --> 00:28:41,360
try to change the ip addresses create

753
00:28:41,360 --> 00:28:42,320
two subnets

754
00:28:42,320 --> 00:28:44,960
deploy two vms in two subnets ping

755
00:28:44,960 --> 00:28:46,240
between them

756
00:28:46,240 --> 00:28:49,600
and so slowly build the understanding of

757
00:28:49,600 --> 00:28:52,880
how is this different

758
00:28:52,880 --> 00:28:55,919
and it's really you know if you had

759
00:28:55,919 --> 00:28:58,080
geometry in high school math you might

760
00:28:58,080 --> 00:29:00,159
remember that we have the

761
00:29:00,159 --> 00:29:02,159
traditional geometry and then we have

762
00:29:02,159 --> 00:29:04,159
geometry on a sphere

763
00:29:04,159 --> 00:29:06,240
and then we have the geometry in

764
00:29:06,240 --> 00:29:07,919
hyperbolic space

765
00:29:07,919 --> 00:29:10,799
and they're all the same only in one

766
00:29:10,799 --> 00:29:13,279
case you can't draw a parallel in the

767
00:29:13,279 --> 00:29:14,640
other case you can draw

768
00:29:14,640 --> 00:29:16,640
three different parts well infinitely

769
00:29:16,640 --> 00:29:19,520
many parallels to any single line

770
00:29:19,520 --> 00:29:21,840
and it's the same thing here it's the

771
00:29:21,840 --> 00:29:24,399
same it's just slightly different but ip

772
00:29:24,399 --> 00:29:27,279
routing is ip routing arp is arp

773
00:29:27,279 --> 00:29:30,399
there is no layer 2 and

774
00:29:30,399 --> 00:29:33,360
you'll master it you just have to focus

775
00:29:33,360 --> 00:29:35,600
on the fundamentals

776
00:29:35,600 --> 00:29:38,559
so i'm pretty positive that you will

777
00:29:38,559 --> 00:29:40,000
master the cloud

778
00:29:40,000 --> 00:29:43,760
and if you get stuck you can send me an

779
00:29:43,760 --> 00:29:46,399
email you can reach me on twitter

780
00:29:46,399 --> 00:29:50,000
yes i do blog and i told you

781
00:29:50,000 --> 00:29:53,520
not to rely on blog post but you might

782
00:29:53,520 --> 00:30:03,120
find something useful

