1
00:00:01,250 --> 00:00:09,570
okay this talk is<font color="#CCCCCC"> about measuring delay</font>

2
00:00:05,640 --> 00:00:11,730
and reporting delay in routers obviously

3
00:00:09,570 --> 00:00:14,059
packet delay is an important<font color="#E5E5E5"> metric it's</font>

4
00:00:11,730 --> 00:00:16,139
important for<font color="#E5E5E5"> real time applications and</font>

5
00:00:14,059 --> 00:00:17,640
if you're in charge of a network and

6
00:00:16,139 --> 00:00:19,109
there may be a solid relating to delay

7
00:00:17,640 --> 00:00:21,449
from one end to the other and that's

8
00:00:19,109 --> 00:00:23,010
important for you as well obviously

9
00:00:21,449 --> 00:00:24,689
building block of end-to-end delay is

10
00:00:23,010 --> 00:00:27,510
delay an individual router and that's

11
00:00:24,689 --> 00:00:28,769
what I'm talking about here<font color="#E5E5E5"> now what do</font>

12
00:00:27,510 --> 00:00:30,420
we if we wanted to try measure this

13
00:00:28,769 --> 00:00:31,919
using active probing would be in trouble

14
00:00:30,420 --> 00:00:33,390
because it's<font color="#CCCCCC"> very difficult to</font><font color="#E5E5E5"> get a</font>

15
00:00:31,920 --> 00:00:35,270
clear accurate idea what's happening

16
00:00:33,390 --> 00:00:37,770
inside<font color="#E5E5E5"> the network with active probing</font>

17
00:00:35,270 --> 00:00:38,940
passive would be extremely<font color="#E5E5E5"> expensive you</font>

18
00:00:37,770 --> 00:00:41,670
would<font color="#CCCCCC"> have to have infrastructure on</font>

19
00:00:38,940 --> 00:00:42,899
input and output interfaces so really

20
00:00:41,670 --> 00:00:44,190
<font color="#CCCCCC">this is a case where we'd like to have</font>

21
00:00:42,899 --> 00:00:46,379
the router itself report delay

22
00:00:44,190 --> 00:00:48,570
statistics the problem is at the moment

23
00:00:46,379 --> 00:00:50,610
<font color="#E5E5E5">is essentially nothing reported nothing</font>

24
00:00:48,570 --> 00:00:52,559
measured and nothing reported about this

25
00:00:50,610 --> 00:00:53,820
so the aim of this work is to<font color="#E5E5E5"> take that</font>

26
00:00:52,559 --> 00:00:56,160
situation where we<font color="#CCCCCC"> have essentially</font>

27
00:00:53,820 --> 00:00:57,989
nothing and to be able to report not

28
00:00:56,160 --> 00:01:01,679
just some average delay but in<font color="#E5E5E5"> fact</font>

29
00:00:57,989 --> 00:01:03,538
quite rich information about delay we

30
00:01:01,680 --> 00:01:04,709
have the problems are basically how can

31
00:01:03,539 --> 00:01:06,510
we first of all measure delays inside

32
00:01:04,709 --> 00:01:08,070
the router what statistics should we

33
00:01:06,510 --> 00:01:11,310
take from them and then how can we

34
00:01:08,070 --> 00:01:12,419
report them back is the backgrounds of

35
00:01:11,310 --> 00:01:14,369
this work is we have a fully

36
00:01:12,420 --> 00:01:16,080
instrumented router with the<font color="#E5E5E5"> GPS</font>

37
00:01:14,369 --> 00:01:18,119
synchronized hardware measurement on all

38
00:01:16,080 --> 00:01:19,830
input and output interfaces so it's a

39
00:01:18,119 --> 00:01:22,020
very complete set of data buildings of

40
00:01:19,830 --> 00:01:23,610
packets terabytes of data and we get to

41
00:01:22,020 --> 00:01:25,830
monitor almost one hundred percent of

42
00:01:23,610 --> 00:01:28,439
<font color="#E5E5E5">that I'm going to focus on an access</font>

43
00:01:25,830 --> 00:01:30,479
link they access link<font color="#E5E5E5"> being controlled</font>

44
00:01:28,439 --> 00:01:32,369
our customer they have the right to

45
00:01:30,479 --> 00:01:34,079
drive things up to<font color="#E5E5E5"> high utilization</font>

46
00:01:32,369 --> 00:01:35,670
levels they might otherwise<font color="#CCCCCC"> be the case</font>

47
00:01:34,079 --> 00:01:39,210
so we<font color="#E5E5E5"> can see more interesting delays</font>

48
00:01:35,670 --> 00:01:40,829
there here we have<font color="#E5E5E5"> this OC 3 link on the</font>

49
00:01:39,210 --> 00:01:44,339
right hand side that's the output link

50
00:01:40,829 --> 00:01:46,320
and we has four inputs to the main ones

51
00:01:44,340 --> 00:01:49,200
<font color="#CCCCCC">are two OC 48 links which carry about</font>

52
00:01:46,320 --> 00:01:50,880
fifty<font color="#CCCCCC"> percent of the traffic each and we</font>

53
00:01:49,200 --> 00:01:52,079
see we<font color="#E5E5E5"> can match the packets again</font>

54
00:01:50,880 --> 00:01:53,970
almost one hundred percent packet

55
00:01:52,079 --> 00:01:54,839
matching so we<font color="#E5E5E5"> really have a accurate</font>

56
00:01:53,970 --> 00:01:58,140
handle on<font color="#E5E5E5"> what app</font>

57
00:01:54,840 --> 00:02:00,929
here we<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to be out understand how</font>

58
00:01:58,140 --> 00:02:02,729
the what<font color="#E5E5E5"> have the delay is um builds up</font>

59
00:02:00,929 --> 00:02:04,140
as a packet traverses the router first

60
00:02:02,729 --> 00:02:06,630
of all there's the store portion of the

61
00:02:04,140 --> 00:02:07,770
store and forward router actually let's

62
00:02:06,630 --> 00:02:09,389
not worry about<font color="#E5E5E5"> that we already</font>

63
00:02:07,770 --> 00:02:12,120
understand it so we don't<font color="#E5E5E5"> need to model</font>

64
00:02:09,389 --> 00:02:13,470
it next step is the packet goes through

65
00:02:12,120 --> 00:02:15,269
the front end of<font color="#E5E5E5"> the switch and across</font>

66
00:02:13,470 --> 00:02:17,430
the<font color="#E5E5E5"> fabric we're going to model that in</font>

67
00:02:15,269 --> 00:02:20,069
a simple way as simply a packet size

68
00:02:17,430 --> 00:02:21,540
dependent constant and then the output

69
00:02:20,069 --> 00:02:23,099
queuing that's the queuing in the

70
00:02:21,540 --> 00:02:27,000
serialization in<font color="#E5E5E5"> the output buffer</font>

71
00:02:23,099 --> 00:02:28,859
buffer we model that as a FIFO queue so

72
00:02:27,000 --> 00:02:30,840
we have this<font color="#E5E5E5"> very simple model front end</font>

73
00:02:28,860 --> 00:02:33,120
is just<font color="#CCCCCC"> a simple delay and the rear end</font>

74
00:02:30,840 --> 00:02:35,010
is just<font color="#CCCCCC"> a FIFO queue very simple but</font>

75
00:02:33,120 --> 00:02:37,260
let's see how<font color="#CCCCCC"> it performs the black dots</font>

76
00:02:35,010 --> 00:02:39,480
are measured delay values and this is

77
00:02:37,260 --> 00:02:41,429
what the model says so that's not bad

78
00:02:39,480 --> 00:02:43,379
looking over a much longer time scale

79
00:02:41,430 --> 00:02:44,579
here we<font color="#E5E5E5"> have a busy period what we're</font>

80
00:02:43,379 --> 00:02:46,290
looking<font color="#CCCCCC"> at here</font><font color="#E5E5E5"> is essentially the</font>

81
00:02:44,579 --> 00:02:48,329
router delay build up as a function of

82
00:02:46,290 --> 00:02:50,790
time<font color="#E5E5E5"> it goes up</font><font color="#CCCCCC"> and up as the router</font>

83
00:02:48,329 --> 00:02:53,190
builds up as the output queue builds up

84
00:02:50,790 --> 00:02:55,828
and then drains off afterwards we're

85
00:02:53,190 --> 00:02:57,599
seeing about<font color="#CCCCCC"> 5 milliseconds there the</font>

86
00:02:55,829 --> 00:02:58,799
measured and the model are overlaid

87
00:02:57,599 --> 00:03:00,480
there we see that they virtually

88
00:02:58,799 --> 00:03:02,220
directly on top of<font color="#E5E5E5"> each other so the</font>

89
00:03:00,480 --> 00:03:04,679
models working very well the differences

90
00:03:02,220 --> 00:03:09,389
in red is in the microsecond range apart

91
00:03:04,680 --> 00:03:11,459
from a few spikes so we can get a handle

92
00:03:09,389 --> 00:03:12,810
on to lace through the model how can

93
00:03:11,459 --> 00:03:15,090
what should we measure about<font color="#E5E5E5"> them while</font>

94
00:03:12,810 --> 00:03:16,680
the key is busy periods a busy period is

95
00:03:15,090 --> 00:03:18,359
simply if there's a packet going through

96
00:03:16,680 --> 00:03:20,549
the system the system's busy and if

97
00:03:18,359 --> 00:03:22,139
there isn't the system's<font color="#CCCCCC"> Idol by</font>

98
00:03:20,549 --> 00:03:24,209
focusing on busy periods we get a key

99
00:03:22,139 --> 00:03:26,160
advantage because in this study<font color="#E5E5E5"> we had</font>

100
00:03:24,209 --> 00:03:27,780
we were able to timestamp packets and

101
00:03:26,160 --> 00:03:29,940
the beginning and the end<font color="#E5E5E5"> of the router</font>

102
00:03:27,780 --> 00:03:32,040
of course normally we can't do<font color="#E5E5E5"> that but</font>

103
00:03:29,940 --> 00:03:33,239
it turns out that in busy periods if

104
00:03:32,040 --> 00:03:35,220
you're inside a busy period you don't

105
00:03:33,239 --> 00:03:36,569
<font color="#CCCCCC">have to worry about that initial Delta</font>

106
00:03:35,220 --> 00:03:38,250
thing at the front of the router you can

107
00:03:36,569 --> 00:03:40,108
just focus on the output queue and

108
00:03:38,250 --> 00:03:42,060
measurements of output views are

109
00:03:40,109 --> 00:03:44,639
possible in routers<font color="#CCCCCC"> for routers which</font>

110
00:03:42,060 --> 00:03:46,620
implement active queuing management you

111
00:03:44,639 --> 00:03:48,780
can<font color="#CCCCCC"> access that so we can measure this</font>

112
00:03:46,620 --> 00:03:50,609
the other reason is the course busy

113
00:03:48,780 --> 00:03:52,410
periods basically all the action<font color="#E5E5E5"> is</font>

114
00:03:50,609 --> 00:03:54,810
happening inside<font color="#E5E5E5"> the busy periods here's</font>

115
00:03:52,410 --> 00:03:56,250
an example of one again the<font color="#CCCCCC"> gray curve</font>

116
00:03:54,810 --> 00:03:58,230
is the<font color="#E5E5E5"> busy period it builds up from</font>

117
00:03:56,250 --> 00:03:59,910
<font color="#E5E5E5">zero is that as the buffer builds up in</font>

118
00:03:58,230 --> 00:04:03,750
<font color="#E5E5E5">the output buffer reaches a peak</font>

119
00:03:59,910 --> 00:04:05,370
amplitude a then goes down and we could

120
00:04:03,750 --> 00:04:05,880
measure the obviously<font color="#CCCCCC"> at durations and</font>

121
00:04:05,370 --> 00:04:07,710
amperage

122
00:04:05,880 --> 00:04:09,060
<font color="#E5E5E5">use of busy periods are one important</font>

123
00:04:07,710 --> 00:04:10,650
thing to<font color="#E5E5E5"> look at and we could do</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

124
00:04:09,060 --> 00:04:12,240
could for each busy period collect a

125
00:04:10,650 --> 00:04:14,910
single<font color="#CCCCCC"> value and we can come up with</font>

126
00:04:12,240 --> 00:04:16,620
histograms of the amplitude<font color="#CCCCCC"> that</font>

127
00:04:14,910 --> 00:04:18,839
corresponds to the worst delay in a

128
00:04:16,620 --> 00:04:20,940
congestion episode or histograms of

129
00:04:18,839 --> 00:04:23,429
durations of these congestion episodes

130
00:04:20,940 --> 00:04:25,290
and we could discretize these and export

131
00:04:23,430 --> 00:04:26,910
them<font color="#E5E5E5"> but we'd like to do more than that</font>

132
00:04:25,290 --> 00:04:29,670
would like to care about busy period

133
00:04:26,910 --> 00:04:31,170
shape so what<font color="#E5E5E5"> is the shape we see here</font>

134
00:04:29,670 --> 00:04:33,720
literally the shape of<font color="#E5E5E5"> that great curve</font>

135
00:04:31,170 --> 00:04:35,460
that red curve is an alternative shape a

136
00:04:33,720 --> 00:04:37,290
kind of<font color="#E5E5E5"> an extreme case which will</font>

137
00:04:35,460 --> 00:04:38,909
correspond to all the packets arriving

138
00:04:37,290 --> 00:04:40,890
right at the beginning and then just

139
00:04:38,910 --> 00:04:42,780
draining off after that basically<font color="#E5E5E5"> almost</font>

140
00:04:40,890 --> 00:04:44,340
any curve you can draw there in<font color="#CCCCCC"> between</font>

141
00:04:42,780 --> 00:04:46,469
the<font color="#E5E5E5"> gray in the red or in</font><font color="#CCCCCC"> between the</font>

142
00:04:44,340 --> 00:04:48,690
gray and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> bottom is the possible busy</font>

143
00:04:46,470 --> 00:04:51,510
period for exactly the same duration and

144
00:04:48,690 --> 00:04:53,070
exactly<font color="#E5E5E5"> the same number</font><font color="#CCCCCC"> of packets but</font>

145
00:04:51,510 --> 00:04:56,219
it hugely different<font color="#E5E5E5"> but</font><font color="#CCCCCC"> the delay</font>

146
00:04:53,070 --> 00:04:59,190
performance for example if we want<font color="#CCCCCC"> to</font>

147
00:04:56,220 --> 00:05:00,660
imagine if the delay reached a certain

148
00:04:59,190 --> 00:05:02,790
level l and we were interested<font color="#CCCCCC"> in</font>

149
00:05:00,660 --> 00:05:04,530
knowing how<font color="#E5E5E5"> over what period of time did</font>

150
00:05:02,790 --> 00:05:06,630
the congestion you know exceed that

151
00:05:04,530 --> 00:05:08,940
level l saturation electric of that

152
00:05:06,630 --> 00:05:10,110
congestion period clearly the shape of

153
00:05:08,940 --> 00:05:11,520
<font color="#E5E5E5">the busy period is going to determine</font>

154
00:05:10,110 --> 00:05:13,680
that different shapes will give you

155
00:05:11,520 --> 00:05:15,330
different<font color="#E5E5E5"> answers if we model the shape</font>

156
00:05:13,680 --> 00:05:17,730
<font color="#E5E5E5">of the busy period a simple triangle we</font>

157
00:05:15,330 --> 00:05:19,620
can actually<font color="#E5E5E5"> predict that and now we can</font>

158
00:05:17,730 --> 00:05:21,480
<font color="#CCCCCC">compare that that simple prediction</font>

159
00:05:19,620 --> 00:05:23,670
against the reality as a function of

160
00:05:21,480 --> 00:05:25,830
that congestion level l and we see we

161
00:05:23,670 --> 00:05:27,570
<font color="#E5E5E5">can do fairly well so we're getting</font><font color="#CCCCCC"> two</font>

162
00:05:25,830 --> 00:05:28,890
lessons<font color="#CCCCCC"> from this one the shape of the</font>

163
00:05:27,570 --> 00:05:30,810
<font color="#E5E5E5">busy period is really telling us</font>

164
00:05:28,890 --> 00:05:32,909
important information about<font color="#E5E5E5"> what's</font>

165
00:05:30,810 --> 00:05:34,920
actually happening with delay and<font color="#CCCCCC"> B we</font>

166
00:05:32,910 --> 00:05:37,530
can<font color="#CCCCCC"> really extract the information via a</font>

167
00:05:34,920 --> 00:05:39,210
simple model so how can we actually

168
00:05:37,530 --> 00:05:41,250
capture the shape or a simple way we've

169
00:05:39,210 --> 00:05:43,049
just seen we look at the amplitude and

170
00:05:41,250 --> 00:05:45,240
the<font color="#CCCCCC"> duration of these busy periods</font>

171
00:05:43,050 --> 00:05:47,430
jointly here we have a discretized 2d

172
00:05:45,240 --> 00:05:49,260
histogram basically in the top right of

173
00:05:47,430 --> 00:05:50,790
this picture<font color="#E5E5E5"> we're looking at busy</font>

174
00:05:49,260 --> 00:05:53,099
periods which are long<font color="#E5E5E5"> in duration and</font>

175
00:05:50,790 --> 00:05:55,080
also large and amplitude like the pitch

176
00:05:53,100 --> 00:05:56,610
you saw<font color="#E5E5E5"> before whereas on</font><font color="#CCCCCC"> the top on</font><font color="#E5E5E5"> the</font>

177
00:05:55,080 --> 00:05:58,320
bottom right we're looking<font color="#E5E5E5"> at busy</font>

178
00:05:56,610 --> 00:06:01,410
periods which are less<font color="#E5E5E5"> likely that's why</font>

179
00:05:58,320 --> 00:06:03,480
it's in white less likely long ones

180
00:06:01,410 --> 00:06:05,460
which which stay very low low amplitude

181
00:06:03,480 --> 00:06:07,140
ones basically this picture tells us

182
00:06:05,460 --> 00:06:09,989
what kinds<font color="#E5E5E5"> of busy periods are likely</font>

183
00:06:07,140 --> 00:06:12,300
and which ones are not<font color="#E5E5E5"> likely so how can</font>

184
00:06:09,990 --> 00:06:14,130
<font color="#E5E5E5">we report this the idea is everything is</font>

185
00:06:12,300 --> 00:06:15,840
busy period based at the beginning<font color="#E5E5E5"> of</font>

186
00:06:14,130 --> 00:06:17,130
the busy period and we can measure that

187
00:06:15,840 --> 00:06:18,169
because we can<font color="#E5E5E5"> just see you in the queue</font>

188
00:06:17,130 --> 00:06:20,509
starts to build up

189
00:06:18,169 --> 00:06:22,430
at the output interface we<font color="#E5E5E5"> timestamp the</font>

190
00:06:20,509 --> 00:06:24,229
busy at the beginning of that we're

191
00:06:22,430 --> 00:06:26,419
<font color="#E5E5E5">inside the busy period it's trivial to</font>

192
00:06:24,229 --> 00:06:28,039
maintain<font color="#E5E5E5"> and the current maximum value</font>

193
00:06:26,419 --> 00:06:30,109
that we've<font color="#E5E5E5"> ever seen at the end of the</font>

194
00:06:28,039 --> 00:06:31,550
busy period we timestamp that we can

195
00:06:30,110 --> 00:06:33,349
<font color="#E5E5E5">then calculate the duration the busy</font>

196
00:06:31,550 --> 00:06:35,509
period we've got the amplitude recorded

197
00:06:33,349 --> 00:06:37,279
and we export those two values in

198
00:06:35,509 --> 00:06:39,050
practice for memory reasons would have

199
00:06:37,279 --> 00:06:41,300
to export<font color="#E5E5E5"> that into a histogram we</font>

200
00:06:39,050 --> 00:06:42,949
couldn't retain every single value now

201
00:06:41,300 --> 00:06:44,270
at the<font color="#E5E5E5"> end of some</font><font color="#CCCCCC"> five-minute window we</font>

202
00:06:42,949 --> 00:06:46,520
want to<font color="#E5E5E5"> actually summarize all the</font>

203
00:06:44,270 --> 00:06:48,198
information we've got and export it how

204
00:06:46,520 --> 00:06:49,460
can<font color="#CCCCCC"> we do that first</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> all let's look</font>

205
00:06:48,199 --> 00:06:52,039
at the<font color="#E5E5E5"> duration and amplitude</font>

206
00:06:49,460 --> 00:06:54,409
individually<font color="#E5E5E5"> we create histograms based</font>

207
00:06:52,039 --> 00:06:56,509
on equal population bins by

208
00:06:54,409 --> 00:06:58,400
concentrating<font color="#CCCCCC"> on equal population we</font>

209
00:06:56,509 --> 00:07:00,110
automatically focus on where the data is

210
00:06:58,400 --> 00:07:02,599
we don't<font color="#E5E5E5"> have to have some different</font>

211
00:07:00,110 --> 00:07:04,669
complicated algorithm to decide the bins

212
00:07:02,599 --> 00:07:06,319
or to preset them arbitrarily we can

213
00:07:04,669 --> 00:07:10,068
<font color="#E5E5E5">actually define them in that where they</font>

214
00:07:06,319 --> 00:07:13,279
should be those 2n bins in 2d becomes n

215
00:07:10,069 --> 00:07:15,919
squared 2d bins we can then calculate

216
00:07:13,279 --> 00:07:18,319
the the densities in those bins and

217
00:07:15,919 --> 00:07:20,060
export them here's that picture back

218
00:07:18,319 --> 00:07:21,949
again<font color="#CCCCCC"> this was in fact I cheated gave</font>

219
00:07:20,060 --> 00:07:24,560
you the UM the<font color="#E5E5E5"> discretized version in</font>

220
00:07:21,949 --> 00:07:26,120
advance these bins at the different

221
00:07:24,560 --> 00:07:27,889
colored rectangles they're not squares

222
00:07:26,120 --> 00:07:30,080
because<font color="#E5E5E5"> the bins have been selected</font><font color="#CCCCCC"> in</font>

223
00:07:27,889 --> 00:07:32,389
both axes according to be equal

224
00:07:30,080 --> 00:07:34,339
population bins as I said so what we've

225
00:07:32,389 --> 00:07:37,460
got<font color="#CCCCCC"> here is basically a discretized</font>

226
00:07:34,339 --> 00:07:40,689
version where we don't the complexity to

227
00:07:37,460 --> 00:07:42,649
choose the bin<font color="#CCCCCC"> size is low and natural</font>

228
00:07:40,689 --> 00:07:44,990
automatically focus on weather delays

229
00:07:42,649 --> 00:07:46,699
actually are because they could be very

230
00:07:44,990 --> 00:07:48,129
widely varying in practice<font color="#E5E5E5"> and we won't</font>

231
00:07:46,699 --> 00:07:50,990
know in advance whether we're talking

232
00:07:48,129 --> 00:07:52,999
microseconds or half a second so<font color="#CCCCCC"> we</font>

233
00:07:50,990 --> 00:07:54,860
can't fix them in<font color="#CCCCCC"> advance and it's</font><font color="#E5E5E5"> this</font>

234
00:07:52,999 --> 00:07:56,960
extremely rich picture<font color="#E5E5E5"> we're not just</font>

235
00:07:54,860 --> 00:07:58,729
going from<font color="#E5E5E5"> nothing to giving say average</font>

236
00:07:56,960 --> 00:08:01,489
delay we're going<font color="#E5E5E5"> from a picture which</font>

237
00:07:58,729 --> 00:08:04,370
as I showed you is rich enough so that

238
00:08:01,490 --> 00:08:06,379
we can get basically<font color="#E5E5E5"> everything would</font>

239
00:08:04,370 --> 00:08:09,169
ever wanted to know about delay

240
00:08:06,379 --> 00:08:10,639
performance so the conclusion is we have

241
00:08:09,169 --> 00:08:12,830
a model<font color="#CCCCCC"> here for through router delay</font>

242
00:08:10,639 --> 00:08:15,560
these delays can be measured by<font color="#CCCCCC"> the</font>

243
00:08:12,830 --> 00:08:18,139
router by focusing<font color="#CCCCCC"> on busy periods we</font>

244
00:08:15,560 --> 00:08:20,180
can get this extremely rich vision of

245
00:08:18,139 --> 00:08:22,009
what's happening the delay is it's

246
00:08:20,180 --> 00:08:24,560
computationally light and the memory is

247
00:08:22,009 --> 00:08:27,289
feasible and then we can basically with

248
00:08:24,560 --> 00:08:29,149
this 2d histogram we can get answers on

249
00:08:27,289 --> 00:08:30,380
durations of busy period durations of

250
00:08:29,149 --> 00:08:32,270
congestion episodes

251
00:08:30,380 --> 00:08:34,429
due to congestion episodes and we can

252
00:08:32,270 --> 00:08:35,960
even in post-processing if we think of

253
00:08:34,429 --> 00:08:37,549
new metrics that are important that<font color="#E5E5E5"> we</font>

254
00:08:35,960 --> 00:08:39,410
didn't<font color="#E5E5E5"> think of originally we actually</font>

255
00:08:37,549 --> 00:08:42,620
<font color="#CCCCCC">have a hope with the data were collected</font>

256
00:08:39,409 --> 00:08:45,079
as i showed you to calculate or estimate

257
00:08:42,620 --> 00:08:48,740
what those metrics would be because it's

258
00:08:45,080 --> 00:08:50,390
such a rich and description we have a

259
00:08:48,740 --> 00:08:53,360
publication accepted sigmetrics this

260
00:08:50,390 --> 00:08:57,470
year<font color="#E5E5E5"> available that website and related</font>

261
00:08:53,360 --> 00:08:59,150
technical reports now<font color="#E5E5E5"> I've</font><font color="#CCCCCC"> been told</font>

262
00:08:57,470 --> 00:09:06,260
that we haven't got time for<font color="#E5E5E5"> questions</font>

263
00:08:59,150 --> 00:09:08,209
right now maybe so perhaps<font color="#E5E5E5"> I could take</font>

264
00:09:06,260 --> 00:09:14,540
this one question may be on that talk

265
00:09:08,210 --> 00:09:16,930
now before i go to<font color="#E5E5E5"> my second talk come</font>

266
00:09:14,540 --> 00:09:16,930
on don't<font color="#E5E5E5"> be shy</font>

