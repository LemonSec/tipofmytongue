1
00:00:09,059 --> 00:00:14,579
right<font color="#E5E5E5"> so since we are ahead of schedule</font>

2
00:00:11,680 --> 00:00:14,580
<font color="#E5E5E5">Charlie if you want</font><font color="#CCCCCC"> to</font>

3
00:00:15,580 --> 00:00:19,990
<font color="#CCCCCC">to do so alright</font><font color="#E5E5E5"> I'll keep it 45 but you</font>

4
00:00:18,070 --> 00:00:20,470
might be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> ego 250</font><font color="#CCCCCC"> alright okay</font><font color="#E5E5E5"> very</font>

5
00:00:19,990 --> 00:00:23,110
<font color="#E5E5E5">good</font>

6
00:00:20,470 --> 00:00:26,290
great so hopefully<font color="#CCCCCC"> that'll</font><font color="#E5E5E5"> be a good</font>

7
00:00:23,110 --> 00:00:28,300
<font color="#CCCCCC">thing for all of you as well so thanks</font>

8
00:00:26,290 --> 00:00:29,740
<font color="#E5E5E5">for being here it's my first</font><font color="#CCCCCC"> Nanog so</font>

9
00:00:28,300 --> 00:00:34,000
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> excited</font><font color="#E5E5E5"> to have the</font><font color="#CCCCCC"> opportunity to</font>

10
00:00:29,740 --> 00:00:36,640
<font color="#E5E5E5">get to talk to all of you and I get to</font>

11
00:00:34,000 --> 00:00:40,840
work a lot with open source and with

12
00:00:36,640 --> 00:00:42,519
standards as<font color="#CCCCCC"> part of my day job and so</font>

13
00:00:40,840 --> 00:00:43,840
I'm here<font color="#E5E5E5"> to talk to you today</font><font color="#CCCCCC"> about open</font>

14
00:00:42,519 --> 00:00:47,170
daylight<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is one of my</font><font color="#E5E5E5"> favorite</font>

15
00:00:43,840 --> 00:00:51,600
open source projects and how<font color="#E5E5E5"> thanks</font><font color="#CCCCCC"> to</font>

16
00:00:47,170 --> 00:00:54,129
support for standards that<font color="#E5E5E5"> exist</font><font color="#CCCCCC"> in the</font>

17
00:00:51,600 --> 00:00:55,780
network programmability space around

18
00:00:54,129 --> 00:00:58,089
data models and network management

19
00:00:55,780 --> 00:01:00,220
<font color="#E5E5E5">protocols you're able to use open</font>

20
00:00:58,089 --> 00:01:04,470
<font color="#E5E5E5">daylight as a great platform for network</font>

21
00:01:00,220 --> 00:01:07,240
<font color="#CCCCCC">program ability so here's the agenda</font>

22
00:01:04,470 --> 00:01:10,600
<font color="#CCCCCC">start by just</font><font color="#E5E5E5"> doing a level set very</font>

23
00:01:07,240 --> 00:01:13,539
briefly about<font color="#E5E5E5"> what Sdn is and then what</font>

24
00:01:10,600 --> 00:01:15,369
open daylight is<font color="#E5E5E5"> I'll spend a bit more</font>

25
00:01:13,540 --> 00:01:18,729
time<font color="#E5E5E5"> than talking about network</font><font color="#CCCCCC"> program</font>

26
00:01:15,369 --> 00:01:21,820
<font color="#CCCCCC">ability standards that exist in that</font>

27
00:01:18,729 --> 00:01:25,510
space how you would use them<font color="#CCCCCC"> why you</font>

28
00:01:21,820 --> 00:01:27,399
should care then we'll get<font color="#E5E5E5"> a little bit</font>

29
00:01:25,510 --> 00:01:30,610
more practical I guess on the<font color="#E5E5E5"> approach</font>

30
00:01:27,400 --> 00:01:35,500
<font color="#E5E5E5">and look at how you would install open</font>

31
00:01:30,610 --> 00:01:37,510
daylight<font color="#E5E5E5"> and configure it</font><font color="#CCCCCC"> to support the</font>

32
00:01:35,500 --> 00:01:40,360
<font color="#CCCCCC">network around</font><font color="#E5E5E5"> bility features on it</font>

33
00:01:37,510 --> 00:01:44,350
that I think<font color="#E5E5E5"> of would be of interest to</font>

34
00:01:40,360 --> 00:01:46,150
<font color="#E5E5E5">you and then an SDN controller isn't</font>

35
00:01:44,350 --> 00:01:48,070
very<font color="#CCCCCC"> useful if it's not attached to any</font>

36
00:01:46,150 --> 00:01:50,440
kind of<font color="#E5E5E5"> network</font><font color="#CCCCCC"> elements so we'll look</font>

37
00:01:48,070 --> 00:01:53,500
at<font color="#CCCCCC"> various</font><font color="#E5E5E5"> network elements show how you</font>

38
00:01:50,440 --> 00:01:56,920
can have open<font color="#E5E5E5"> daylight connect to them</font>

39
00:01:53,500 --> 00:01:59,110
and then use open daylight<font color="#E5E5E5"> to interact</font>

40
00:01:56,920 --> 00:02:00,820
with those<font color="#CCCCCC"> network elements and then</font>

41
00:01:59,110 --> 00:02:03,060
we'll wrap<font color="#E5E5E5"> up with with some conclusions</font>

42
00:02:00,820 --> 00:02:03,059
<font color="#CCCCCC">okay</font>

43
00:02:04,720 --> 00:02:11,230
so what is Sdn I think some other<font color="#E5E5E5"> folks</font>

44
00:02:08,258 --> 00:02:12,879
have<font color="#CCCCCC"> already given better definitions</font>

45
00:02:11,230 --> 00:02:15,909
probably than what I have here on this

46
00:02:12,879 --> 00:02:16,690
<font color="#CCCCCC">slide but you know the concepts been</font>

47
00:02:15,909 --> 00:02:18,940
around for a while

48
00:02:16,690 --> 00:02:20,319
<font color="#CCCCCC">I think the key things</font><font color="#E5E5E5"> that jumped out</font>

49
00:02:18,940 --> 00:02:22,959
<font color="#CCCCCC">at me when</font><font color="#E5E5E5"> people first started talking</font>

50
00:02:20,319 --> 00:02:25,208
about Sdn<font color="#E5E5E5"> software-defined networking</font>

51
00:02:22,959 --> 00:02:26,680
was well we really want<font color="#E5E5E5"> to be able to</font>

52
00:02:25,209 --> 00:02:29,109
separate<font color="#CCCCCC"> a</font><font color="#E5E5E5"> control plane</font><font color="#CCCCCC"> for</font>

53
00:02:26,680 --> 00:02:31,000
the data plane<font color="#E5E5E5"> not</font><font color="#CCCCCC"> only separate them</font>

54
00:02:29,109 --> 00:02:33,640
but then take<font color="#E5E5E5"> advantage of the</font><font color="#CCCCCC"> fact that</font>

55
00:02:31,000 --> 00:02:35,769
we could actually<font color="#E5E5E5"> logically centralized</font>

56
00:02:33,640 --> 00:02:38,469
the control plane<font color="#E5E5E5"> while leaving the the</font>

57
00:02:35,769 --> 00:02:41,189
<font color="#CCCCCC">data plane disaggregated</font><font color="#E5E5E5"> across the</font>

58
00:02:38,469 --> 00:02:44,138
space that we're trying<font color="#E5E5E5"> to serve</font>

59
00:02:41,189 --> 00:02:46,239
<font color="#CCCCCC">OpenFlow came into existence then as a</font>

60
00:02:44,139 --> 00:02:49,109
protocol<font color="#CCCCCC"> that could be used from</font><font color="#E5E5E5"> the</font>

61
00:02:46,239 --> 00:02:52,750
control plane<font color="#E5E5E5"> to program the data plane</font>

62
00:02:49,109 --> 00:02:54,849
and<font color="#E5E5E5"> white liberal switches also as a way</font>

63
00:02:52,750 --> 00:02:57,909
to make<font color="#E5E5E5"> that data plane hopefully less</font>

64
00:02:54,849 --> 00:03:02,200
expensive and<font color="#CCCCCC"> just easier to</font><font color="#E5E5E5"> manage and</font>

65
00:02:57,909 --> 00:03:05,590
<font color="#CCCCCC">deal with</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> so those are all</font>

66
00:03:02,200 --> 00:03:07,899
valid and useful aspects<font color="#E5E5E5"> of Sdn however</font>

67
00:03:05,590 --> 00:03:09,790
<font color="#E5E5E5">what to me is</font><font color="#CCCCCC"> the most important</font><font color="#E5E5E5"> aspect</font>

68
00:03:07,900 --> 00:03:12,219
that<font color="#E5E5E5"> came out of Sdn is</font><font color="#CCCCCC"> the</font>

69
00:03:09,790 --> 00:03:14,019
programmability aspect<font color="#E5E5E5"> if you think</font>

70
00:03:12,219 --> 00:03:16,269
about<font color="#E5E5E5"> the network and many of you here</font>

71
00:03:14,019 --> 00:03:19,150
operate networks you know there's a vast

72
00:03:16,269 --> 00:03:20,500
<font color="#E5E5E5">amount of information in the network the</font>

73
00:03:19,150 --> 00:03:23,680
<font color="#CCCCCC">traffic that's</font><font color="#E5E5E5"> flowing</font><font color="#CCCCCC"> through it all</font>

74
00:03:20,500 --> 00:03:26,909
the flows that<font color="#CCCCCC"> are there</font><font color="#E5E5E5"> if you are able</font>

75
00:03:23,680 --> 00:03:28,959
<font color="#E5E5E5">to provide access to that information</font>

76
00:03:26,909 --> 00:03:31,168
<font color="#CCCCCC">harness that information make it</font>

77
00:03:28,959 --> 00:03:33,430
accessible<font color="#CCCCCC"> to network aware applications</font>

78
00:03:31,169 --> 00:03:35,440
<font color="#CCCCCC">there's a lot they could do on</font><font color="#E5E5E5"> that</font>

79
00:03:33,430 --> 00:03:37,569
whether it's a big data type of<font color="#E5E5E5"> analysis</font>

80
00:03:35,440 --> 00:03:39,940
<font color="#E5E5E5">whether it's monitoring very</font>

81
00:03:37,569 --> 00:03:41,530
<font color="#E5E5E5">specifically for something that is</font>

82
00:03:39,940 --> 00:03:43,629
important<font color="#E5E5E5"> to</font><font color="#CCCCCC"> an a certain application</font>

83
00:03:41,530 --> 00:03:46,840
<font color="#CCCCCC">that's running</font><font color="#E5E5E5"> on the network you're</font>

84
00:03:43,629 --> 00:03:49,388
able<font color="#CCCCCC"> to infer some things</font><font color="#E5E5E5"> from what the</font>

85
00:03:46,840 --> 00:03:51,220
network tells you is<font color="#E5E5E5"> going on and not</font>

86
00:03:49,389 --> 00:03:52,840
<font color="#E5E5E5">just to configure it but to look at the</font>

87
00:03:51,220 --> 00:03:55,209
actual operational information<font color="#E5E5E5"> that's</font>

88
00:03:52,840 --> 00:03:57,280
<font color="#CCCCCC">there and then</font><font color="#E5E5E5"> perhaps reconfigure it or</font>

89
00:03:55,209 --> 00:03:59,530
change it<font color="#CCCCCC"> or modify the configuration of</font>

90
00:03:57,280 --> 00:04:02,099
the network<font color="#CCCCCC"> to better suit</font><font color="#E5E5E5"> your needs</font>

91
00:03:59,530 --> 00:04:05,169
<font color="#CCCCCC">and</font><font color="#E5E5E5"> to me that network</font><font color="#CCCCCC"> program ability</font>

92
00:04:02,099 --> 00:04:08,578
that comes along with Sdn is<font color="#E5E5E5"> the really</font>

93
00:04:05,169 --> 00:04:11,290
valuable<font color="#E5E5E5"> part the most valuable part</font>

94
00:04:08,579 --> 00:04:13,299
just putting this to a picture you can

95
00:04:11,290 --> 00:04:14,590
<font color="#CCCCCC">see</font><font color="#E5E5E5"> still have this separation of the</font>

96
00:04:13,299 --> 00:04:17,349
control plane in the forwarding plane

97
00:04:14,590 --> 00:04:19,449
that we said is a key component<font color="#E5E5E5"> but then</font>

98
00:04:17,349 --> 00:04:21,399
down there at<font color="#CCCCCC"> the transport level</font><font color="#E5E5E5"> that's</font>

99
00:04:19,449 --> 00:04:23,409
where<font color="#E5E5E5"> all this information resides that</font>

100
00:04:21,399 --> 00:04:25,419
<font color="#CCCCCC">I was referring to</font><font color="#E5E5E5"> all that the network</font>

101
00:04:23,409 --> 00:04:30,310
knows about<font color="#E5E5E5"> and so being able to expose</font>

102
00:04:25,419 --> 00:04:34,539
<font color="#E5E5E5">that to applications that</font><font color="#CCCCCC"> sit above the</font>

103
00:04:30,310 --> 00:04:36,520
network<font color="#E5E5E5"> above controller and allow those</font>

104
00:04:34,539 --> 00:04:38,500
applications to<font color="#E5E5E5"> have access to the</font>

105
00:04:36,520 --> 00:04:40,180
<font color="#E5E5E5">information and then</font><font color="#CCCCCC"> make some</font>

106
00:04:38,500 --> 00:04:41,860
<font color="#CCCCCC">intelligent decisions and perhaps</font>

107
00:04:40,180 --> 00:04:43,630
<font color="#E5E5E5">reprogram the network based on what</font>

108
00:04:41,860 --> 00:04:46,300
they've learned<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> kind of the the</font>

109
00:04:43,630 --> 00:04:48,639
<font color="#CCCCCC">closed</font><font color="#E5E5E5"> loop that never programmability</font>

110
00:04:46,300 --> 00:04:54,039
and Sdn allows that we want to<font color="#E5E5E5"> take</font>

111
00:04:48,639 --> 00:04:55,690
advantage<font color="#CCCCCC"> of so with that in mind</font><font color="#E5E5E5"> what</font>

112
00:04:54,039 --> 00:04:58,360
is<font color="#E5E5E5"> it that we really need then from an</font>

113
00:04:55,690 --> 00:04:59,979
SDN controller<font color="#CCCCCC"> I mean obviously</font><font color="#E5E5E5"> it needs</font>

114
00:04:58,360 --> 00:05:02,289
<font color="#E5E5E5">to be able to provide the network</font>

115
00:04:59,979 --> 00:05:05,229
<font color="#E5E5E5">functionality to control our network but</font>

116
00:05:02,289 --> 00:05:06,880
<font color="#E5E5E5">you know what else do we need and we</font>

117
00:05:05,229 --> 00:05:08,409
really want it to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> platform on which</font>

118
00:05:06,880 --> 00:05:09,789
<font color="#E5E5E5">we can deploy these types of</font>

119
00:05:08,410 --> 00:05:12,160
<font color="#E5E5E5">applications these network or</font>

120
00:05:09,789 --> 00:05:15,039
applications that<font color="#E5E5E5"> I was talking about in</font>

121
00:05:12,160 --> 00:05:18,430
<font color="#E5E5E5">the previous picture and in order</font><font color="#CCCCCC"> to</font>

122
00:05:15,039 --> 00:05:20,650
facilitate<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we need these developer</font>

123
00:05:18,430 --> 00:05:23,740
friendly api's we want to make it easy

124
00:05:20,650 --> 00:05:25,599
for<font color="#CCCCCC"> people to</font><font color="#E5E5E5"> come and not not</font><font color="#CCCCCC"> just how</font>

125
00:05:23,740 --> 00:05:28,389
the information<font color="#CCCCCC"> there in some obscure</font>

126
00:05:25,599 --> 00:05:30,550
format<font color="#CCCCCC"> but</font><font color="#E5E5E5"> actually make it have clear</font>

127
00:05:28,389 --> 00:05:33,699
well-defined<font color="#CCCCCC"> api's</font><font color="#E5E5E5"> and make it easy to</font>

128
00:05:30,550 --> 00:05:36,009
access<font color="#E5E5E5"> this information at the same time</font>

129
00:05:33,699 --> 00:05:37,660
we don't<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to worry about a lot of</font>

130
00:05:36,009 --> 00:05:39,340
application developers won't<font color="#E5E5E5"> have the</font>

131
00:05:37,660 --> 00:05:41,320
<font color="#CCCCCC">breadth of knowledge</font><font color="#E5E5E5"> that you all have</font>

132
00:05:39,340 --> 00:05:42,789
about<font color="#CCCCCC"> the nitty gritty</font><font color="#E5E5E5"> details</font><font color="#CCCCCC"> of</font>

133
00:05:41,320 --> 00:05:46,300
networking<font color="#E5E5E5"> so you want to be able to</font>

134
00:05:42,789 --> 00:05:47,889
<font color="#E5E5E5">abstract away as much as you can</font><font color="#CCCCCC"> about</font>

135
00:05:46,300 --> 00:05:51,280
<font color="#E5E5E5">various aspects of the network</font><font color="#CCCCCC"> the</font>

136
00:05:47,889 --> 00:05:54,340
topology<font color="#E5E5E5"> the various protocols that</font>

137
00:05:51,280 --> 00:05:56,169
you're using<font color="#CCCCCC"> so that's really</font><font color="#E5E5E5"> that the</font>

138
00:05:54,340 --> 00:05:58,510
key features that<font color="#E5E5E5"> we want from an SDN</font>

139
00:05:56,169 --> 00:06:03,039
controller<font color="#CCCCCC"> now with that in mind let's</font>

140
00:05:58,510 --> 00:06:04,870
take<font color="#CCCCCC"> a look at open daylight so as I</font>

141
00:06:03,039 --> 00:06:08,440
mentioned open daylight it's an open

142
00:06:04,870 --> 00:06:11,740
<font color="#E5E5E5">source project</font><font color="#CCCCCC"> basically acts as</font><font color="#E5E5E5"> an SDN</font>

143
00:06:08,440 --> 00:06:14,469
controller<font color="#E5E5E5"> this charts a bit hard to</font>

144
00:06:11,740 --> 00:06:17,349
read probably<font color="#E5E5E5"> but don't get too</font><font color="#CCCCCC"> hung up</font>

145
00:06:14,470 --> 00:06:19,300
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> details</font><font color="#E5E5E5"> in the middle part in the</font>

146
00:06:17,349 --> 00:06:21,699
blue and red what I'm showing there it's

147
00:06:19,300 --> 00:06:24,490
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> base network functionality</font>

148
00:06:21,699 --> 00:06:26,199
enhanced networking capabilities<font color="#CCCCCC"> Network</font>

149
00:06:24,490 --> 00:06:28,539
abstractions these are just<font color="#CCCCCC"> table</font><font color="#E5E5E5"> stakes</font>

150
00:06:26,199 --> 00:06:30,750
for<font color="#E5E5E5"> any Sdn controller you're gonna find</font>

151
00:06:28,539 --> 00:06:33,219
these in<font color="#E5E5E5"> any Sdn controller</font>

152
00:06:30,750 --> 00:06:34,780
<font color="#E5E5E5">opendaylight provides them provides them</font>

153
00:06:33,220 --> 00:06:37,240
in a modular<font color="#E5E5E5"> way the way it's broken</font>

154
00:06:34,780 --> 00:06:39,309
<font color="#E5E5E5">into these various boxes here the idea</font>

155
00:06:37,240 --> 00:06:42,970
is you can<font color="#CCCCCC"> just enable selectively those</font>

156
00:06:39,310 --> 00:06:44,860
<font color="#E5E5E5">pieces which are important</font><font color="#CCCCCC"> to you now</font>

157
00:06:42,970 --> 00:06:46,440
what I<font color="#CCCCCC"> think is is really important</font><font color="#E5E5E5"> here</font>

158
00:06:44,860 --> 00:06:49,270
though is<font color="#CCCCCC"> that on top of that</font>

159
00:06:46,440 --> 00:06:51,430
opendaylight provides these<font color="#E5E5E5"> developer</font>

160
00:06:49,270 --> 00:06:53,620
<font color="#E5E5E5">friendly api's and here's where</font><font color="#CCCCCC"> i'm</font>

161
00:06:51,430 --> 00:06:57,660
<font color="#E5E5E5">listening to</font><font color="#CCCCCC"> these are restful api</font>

162
00:06:53,620 --> 00:06:57,660
also things<font color="#E5E5E5"> like rest</font><font color="#CCCCCC"> cough Netcom</font>

163
00:06:57,720 --> 00:07:01,780
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> opendaylight makes those</font>

164
00:06:59,800 --> 00:07:06,040
<font color="#CCCCCC">available to applications</font><font color="#E5E5E5"> that reside</font>

165
00:07:01,780 --> 00:07:07,780
above it and allow them to in a provide

166
00:07:06,040 --> 00:07:09,639
a<font color="#E5E5E5"> nice abstraction for them to access</font>

167
00:07:07,780 --> 00:07:12,549
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the network functionality</font><font color="#E5E5E5"> within the</font>

168
00:07:09,639 --> 00:07:13,900
controller and of the underlying network

169
00:07:12,550 --> 00:07:18,040
elements<font color="#E5E5E5"> that are down there</font><font color="#CCCCCC"> at the</font>

170
00:07:13,900 --> 00:07:19,539
<font color="#CCCCCC">bottom now a key to</font><font color="#E5E5E5"> allowing this to</font>

171
00:07:18,040 --> 00:07:21,280
happen<font color="#E5E5E5"> is this</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> service</font>

172
00:07:19,540 --> 00:07:24,630
abstraction layer and what that really

173
00:07:21,280 --> 00:07:27,219
is<font color="#CCCCCC"> is just</font><font color="#E5E5E5"> a messaging fabric so that</font>

174
00:07:24,630 --> 00:07:29,760
again<font color="#E5E5E5"> the applications that reside up</font>

175
00:07:27,220 --> 00:07:32,710
above<font color="#E5E5E5"> don't need to worry about exactly</font>

176
00:07:29,760 --> 00:07:34,990
<font color="#E5E5E5">what network elements are down below</font>

177
00:07:32,710 --> 00:07:37,989
<font color="#E5E5E5">exactly what protocols are being</font><font color="#CCCCCC"> used to</font>

178
00:07:34,990 --> 00:07:40,630
<font color="#CCCCCC">control them</font><font color="#E5E5E5"> they have clear</font><font color="#CCCCCC"> access to</font>

179
00:07:37,990 --> 00:07:43,210
<font color="#CCCCCC">them and this messaging fabric</font><font color="#E5E5E5"> just</font>

180
00:07:40,630 --> 00:07:47,229
enables<font color="#E5E5E5"> that communication to</font><font color="#CCCCCC"> flow up</font>

181
00:07:43,210 --> 00:07:49,239
<font color="#E5E5E5">and down as</font><font color="#CCCCCC"> necessary and then the last</font>

182
00:07:47,229 --> 00:07:50,950
thing<font color="#E5E5E5"> I want to point out here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> all</font>

183
00:07:49,240 --> 00:07:54,250
these<font color="#CCCCCC"> different Network protocols that</font>

184
00:07:50,950 --> 00:07:55,780
<font color="#E5E5E5">open daylight provides just like you can</font>

185
00:07:54,250 --> 00:07:57,370
selectively enable the different

186
00:07:55,780 --> 00:07:59,320
features<font color="#E5E5E5"> within open daylight that</font>

187
00:07:57,370 --> 00:08:01,840
you're going<font color="#CCCCCC"> to use you can selectively</font>

188
00:07:59,320 --> 00:08:04,150
enable and use<font color="#CCCCCC"> the plugins</font><font color="#E5E5E5"> that you want</font>

189
00:08:01,840 --> 00:08:06,580
<font color="#E5E5E5">here for various</font><font color="#CCCCCC"> network protocol so</font>

190
00:08:04,150 --> 00:08:09,010
<font color="#CCCCCC">that they're supported on the far left</font>

191
00:08:06,580 --> 00:08:11,229
you<font color="#CCCCCC"> see open</font><font color="#E5E5E5"> flow which is the</font><font color="#CCCCCC"> first</font>

192
00:08:09,010 --> 00:08:12,460
<font color="#E5E5E5">protocol that was supported but</font>

193
00:08:11,229 --> 00:08:14,830
fortunately<font color="#E5E5E5"> you see a whole bunch of</font>

194
00:08:12,460 --> 00:08:16,330
other<font color="#E5E5E5"> ones there as well</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> net comp</font>

195
00:08:14,830 --> 00:08:18,849
which we'll all be talking about<font color="#E5E5E5"> later</font>

196
00:08:16,330 --> 00:08:22,510
<font color="#E5E5E5">but</font><font color="#CCCCCC"> also things like bgp and peace up</font>

197
00:08:18,850 --> 00:08:25,060
and and<font color="#E5E5E5"> you know you name it so whatever</font>

198
00:08:22,510 --> 00:08:26,380
<font color="#E5E5E5">network elements you currently have good</font>

199
00:08:25,060 --> 00:08:28,030
chance that there's a<font color="#CCCCCC"> plug-in that</font>

200
00:08:26,380 --> 00:08:33,760
exists for<font color="#E5E5E5"> open daylight to interact</font>

201
00:08:28,030 --> 00:08:36,490
<font color="#E5E5E5">with them so whenever you</font><font color="#CCCCCC"> consider</font>

202
00:08:33,760 --> 00:08:38,080
working<font color="#CCCCCC"> with any open</font><font color="#E5E5E5"> source project</font><font color="#CCCCCC"> I</font>

203
00:08:36,490 --> 00:08:39,370
think it's really important<font color="#E5E5E5"> to look at</font>

204
00:08:38,080 --> 00:08:42,669
the<font color="#E5E5E5"> community behind</font><font color="#CCCCCC"> it</font>

205
00:08:39,370 --> 00:08:43,810
and fortunately<font color="#E5E5E5"> open daylight has a</font>

206
00:08:42,669 --> 00:08:45,780
<font color="#E5E5E5">well-established</font>

207
00:08:43,809 --> 00:08:48,939
and<font color="#E5E5E5"> and healthy community behind it</font>

208
00:08:45,780 --> 00:08:51,550
founded in<font color="#E5E5E5"> 2013 when a number</font><font color="#CCCCCC"> of</font>

209
00:08:48,940 --> 00:08:53,170
companies came together and contributed

210
00:08:51,550 --> 00:08:55,660
not only a significant<font color="#E5E5E5"> amount of code</font>

211
00:08:53,170 --> 00:08:57,699
but more importantly developers as well

212
00:08:55,660 --> 00:09:00,240
<font color="#E5E5E5">to work</font><font color="#CCCCCC"> together with</font><font color="#E5E5E5"> each other</font><font color="#CCCCCC"> to get</font>

213
00:08:57,700 --> 00:09:04,180
that into a kind of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> cohesive project</font>

214
00:09:00,240 --> 00:09:05,080
<font color="#E5E5E5">that you could actually use they brought</font>

215
00:09:04,180 --> 00:09:07,189
it within the<font color="#E5E5E5"> Linux Foundation</font>

216
00:09:05,080 --> 00:09:09,500
established<font color="#CCCCCC"> it as a project</font><font color="#E5E5E5"> there</font>

217
00:09:07,190 --> 00:09:12,170
<font color="#CCCCCC">where its license using</font><font color="#E5E5E5"> the eclipse</font>

218
00:09:09,500 --> 00:09:15,530
public license and the very first

219
00:09:12,170 --> 00:09:17,300
<font color="#E5E5E5">release</font><font color="#CCCCCC"> came out in 2014</font><font color="#E5E5E5"> about a year</font>

220
00:09:15,530 --> 00:09:21,230
<font color="#E5E5E5">after this all started it's called</font>

221
00:09:17,300 --> 00:09:23,599
hydrogen next release came out six to

222
00:09:21,230 --> 00:09:25,460
eight months<font color="#CCCCCC"> after and kind of continued</font>

223
00:09:23,600 --> 00:09:27,470
we<font color="#E5E5E5"> haven't Hayden sort of like that so</font>

224
00:09:25,460 --> 00:09:30,410
you had hydrogen helium the current

225
00:09:27,470 --> 00:09:33,680
release stable<font color="#E5E5E5"> releases nitrogen</font><font color="#CCCCCC"> the</font>

226
00:09:30,410 --> 00:09:37,699
next<font color="#CCCCCC"> releases oxygen any if</font><font color="#E5E5E5"> you see a</font>

227
00:09:33,680 --> 00:09:40,479
pattern<font color="#CCCCCC"> here that the</font><font color="#E5E5E5"> releases are named</font>

228
00:09:37,700 --> 00:09:42,920
after elements in the periodic table<font color="#CCCCCC"> so</font>

229
00:09:40,480 --> 00:09:47,480
anyone<font color="#E5E5E5"> know what the next release would</font>

230
00:09:42,920 --> 00:09:50,930
be no let<font color="#CCCCCC"> thean we already had so it'd</font>

231
00:09:47,480 --> 00:09:52,670
<font color="#E5E5E5">be fluorine which I wouldn't have</font><font color="#CCCCCC"> known</font>

232
00:09:50,930 --> 00:09:58,699
if<font color="#E5E5E5"> I hadn't attended the calls for</font><font color="#CCCCCC"> the</font>

233
00:09:52,670 --> 00:10:00,589
<font color="#CCCCCC">release planning so</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> to talk</font>

234
00:09:58,700 --> 00:10:02,300
just very<font color="#E5E5E5"> briefly again and it's a very</font>

235
00:10:00,590 --> 00:10:04,940
<font color="#CCCCCC">high-level but but what is</font><font color="#E5E5E5"> software</font>

236
00:10:02,300 --> 00:10:08,089
<font color="#E5E5E5">architecture the code is it's almost all</font>

237
00:10:04,940 --> 00:10:09,980
Java<font color="#E5E5E5"> that's a good</font><font color="#CCCCCC"> enterprise</font><font color="#E5E5E5"> grade you</font>

238
00:10:08,090 --> 00:10:13,400
know<font color="#CCCCCC"> cross-platform compatible</font>

239
00:10:09,980 --> 00:10:15,350
programming language we use maven<font color="#CCCCCC"> as the</font>

240
00:10:13,400 --> 00:10:18,110
build tool to assemble all these

241
00:10:15,350 --> 00:10:19,670
<font color="#CCCCCC">components together carafe is something</font>

242
00:10:18,110 --> 00:10:24,410
<font color="#E5E5E5">very important here it</font><font color="#CCCCCC"> basically</font>

243
00:10:19,670 --> 00:10:26,510
provides<font color="#E5E5E5"> an</font><font color="#CCCCCC"> OS GI based it's based on</font>

244
00:10:24,410 --> 00:10:29,270
the<font color="#CCCCCC"> OSGi provides a framework for us to</font>

245
00:10:26,510 --> 00:10:31,310
dynamically enable and add components to

246
00:10:29,270 --> 00:10:33,980
<font color="#E5E5E5">open daylight</font><font color="#CCCCCC"> and that's what allows you</font>

247
00:10:31,310 --> 00:10:35,510
<font color="#CCCCCC">to add to adjust</font><font color="#E5E5E5"> enable those features</font>

248
00:10:33,980 --> 00:10:37,430
<font color="#CCCCCC">that you want</font><font color="#E5E5E5"> at runtime</font><font color="#CCCCCC"> add new</font>

249
00:10:35,510 --> 00:10:41,960
features<font color="#E5E5E5"> at runtime add support for</font><font color="#CCCCCC"> a</font>

250
00:10:37,430 --> 00:10:44,239
new network protocol or for a new yang

251
00:10:41,960 --> 00:10:45,890
model as we'll talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> later on</font><font color="#E5E5E5"> so</font>

252
00:10:44,240 --> 00:10:47,450
when you first install open daylight<font color="#E5E5E5"> it</font>

253
00:10:45,890 --> 00:10:50,180
starts up with<font color="#E5E5E5"> just kind of the shell</font>

254
00:10:47,450 --> 00:10:51,860
<font color="#E5E5E5">with just that abstraction layer that I</font>

255
00:10:50,180 --> 00:10:53,750
showed<font color="#CCCCCC"> you earlier</font><font color="#E5E5E5"> and then you can</font>

256
00:10:51,860 --> 00:10:56,480
selectively add those<font color="#E5E5E5"> features</font><font color="#CCCCCC"> that you</font>

257
00:10:53,750 --> 00:10:58,550
<font color="#E5E5E5">want to on top of it this allows</font><font color="#CCCCCC"> open</font>

258
00:10:56,480 --> 00:11:00,650
<font color="#CCCCCC">daylight to scale and get as complex as</font>

259
00:10:58,550 --> 00:11:02,780
<font color="#CCCCCC">you need to have it be without having</font>

260
00:11:00,650 --> 00:11:07,579
<font color="#CCCCCC">all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> extra complexity</font><font color="#E5E5E5"> that you you</font>

261
00:11:02,780 --> 00:11:09,079
may not<font color="#CCCCCC"> need at all</font><font color="#E5E5E5"> okay now we're going</font>

262
00:11:07,580 --> 00:11:13,430
to<font color="#E5E5E5"> shift gears and talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> network</font>

263
00:11:09,080 --> 00:11:15,110
<font color="#CCCCCC">programmability</font><font color="#E5E5E5"> so you know why do we</font>

264
00:11:13,430 --> 00:11:17,899
care first of all

265
00:11:15,110 --> 00:11:21,200
how many of you<font color="#CCCCCC"> actually operate</font><font color="#E5E5E5"> your</font>

266
00:11:17,899 --> 00:11:22,820
network operators in here<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so a good</font>

267
00:11:21,200 --> 00:11:25,839
<font color="#E5E5E5">number</font><font color="#CCCCCC"> here so you can keep</font><font color="#E5E5E5"> me honest</font>

268
00:11:22,820 --> 00:11:29,240
here but<font color="#E5E5E5"> network</font><font color="#CCCCCC"> equipment is expensive</font>

269
00:11:25,839 --> 00:11:32,690
<font color="#E5E5E5">but yet the cost of actually operating</font>

270
00:11:29,240 --> 00:11:34,670
<font color="#CCCCCC">that</font><font color="#E5E5E5"> network over</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> is a far larger</font>

271
00:11:32,690 --> 00:11:38,000
cost here shown as<font color="#CCCCCC"> being about two to</font>

272
00:11:34,670 --> 00:11:39,380
<font color="#CCCCCC">one also if you think</font><font color="#E5E5E5"> about deploying a</font>

273
00:11:38,000 --> 00:11:41,810
new application<font color="#E5E5E5"> on your network</font>

274
00:11:39,380 --> 00:11:44,000
especially<font color="#CCCCCC"> with cloud computing and</font><font color="#E5E5E5"> the</font>

275
00:11:41,810 --> 00:11:46,040
<font color="#E5E5E5">way that works</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> it's very very</font>

276
00:11:44,000 --> 00:11:47,260
quick<font color="#E5E5E5"> to spend up the compute</font><font color="#CCCCCC"> resources</font>

277
00:11:46,040 --> 00:11:49,849
that you need<font color="#CCCCCC"> for a new application</font>

278
00:11:47,260 --> 00:11:52,850
<font color="#E5E5E5">however</font><font color="#CCCCCC"> the networking components of</font>

279
00:11:49,850 --> 00:11:55,339
<font color="#CCCCCC">that application and</font><font color="#E5E5E5"> meeting its</font>

280
00:11:52,850 --> 00:11:58,370
<font color="#E5E5E5">requirements is a bit more challenging</font>

281
00:11:55,339 --> 00:11:59,660
<font color="#E5E5E5">and can</font><font color="#CCCCCC"> take a lot longer so with</font>

282
00:11:58,370 --> 00:12:01,790
<font color="#CCCCCC">network programmability</font><font color="#E5E5E5"> we're really</font>

283
00:11:59,660 --> 00:12:04,819
trying<font color="#E5E5E5"> to hit on these two things to</font>

284
00:12:01,790 --> 00:12:07,790
<font color="#E5E5E5">help</font><font color="#CCCCCC"> with the operational cost and to</font>

285
00:12:04,820 --> 00:12:12,850
help with speed up the<font color="#E5E5E5"> networking for</font>

286
00:12:07,790 --> 00:12:15,050
deploying new applications so

287
00:12:12,850 --> 00:12:16,850
fortunately<font color="#E5E5E5"> the IETF had given us</font>

288
00:12:15,050 --> 00:12:20,300
something<font color="#E5E5E5"> the simple</font><font color="#CCCCCC"> network management</font>

289
00:12:16,850 --> 00:12:24,019
protocol<font color="#E5E5E5"> and sounds</font><font color="#CCCCCC"> great it's it's</font>

290
00:12:20,300 --> 00:12:27,819
simple it manages our network<font color="#CCCCCC"> we're good</font>

291
00:12:24,019 --> 00:12:30,470
so I could just<font color="#E5E5E5"> end my talk right there</font>

292
00:12:27,820 --> 00:12:32,449
<font color="#CCCCCC">the problem is as I'm sure most of you</font>

293
00:12:30,470 --> 00:12:34,250
<font color="#E5E5E5">know and</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> experienced you're not</font>

294
00:12:32,449 --> 00:12:37,219
probably<font color="#E5E5E5"> not using</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> for configuration</font>

295
00:12:34,250 --> 00:12:39,709
<font color="#CCCCCC">at all</font><font color="#E5E5E5"> you may be using it for</font><font color="#CCCCCC"> some</font>

296
00:12:37,220 --> 00:12:42,860
fault handling<font color="#E5E5E5"> some monitoring but it's</font>

297
00:12:39,709 --> 00:12:44,359
really<font color="#E5E5E5"> not a network</font><font color="#CCCCCC"> management protocol</font>

298
00:12:42,860 --> 00:12:45,649
at all<font color="#E5E5E5"> and you can't use it</font><font color="#CCCCCC"> for</font>

299
00:12:44,360 --> 00:12:48,199
<font color="#E5E5E5">configuration when it comes to</font>

300
00:12:45,649 --> 00:12:51,620
configuration<font color="#E5E5E5"> what almost everyone is</font>

301
00:12:48,199 --> 00:12:53,149
doing<font color="#E5E5E5"> is using</font><font color="#CCCCCC"> the CLI</font><font color="#E5E5E5"> and actually</font>

302
00:12:51,620 --> 00:12:55,850
maybe doing some<font color="#CCCCCC"> really clever things</font>

303
00:12:53,149 --> 00:12:59,660
around how<font color="#CCCCCC"> you try</font><font color="#E5E5E5"> to automate around</font>

304
00:12:55,850 --> 00:13:01,730
<font color="#E5E5E5">the CLI</font><font color="#CCCCCC"> and program to it however that's</font>

305
00:12:59,660 --> 00:13:03,500
very brittle<font color="#CCCCCC"> right you end up doing a</font>

306
00:13:01,730 --> 00:13:06,350
lot<font color="#CCCCCC"> of string manipulation regex</font>

307
00:13:03,500 --> 00:13:08,060
expressions<font color="#E5E5E5"> and you may get something</font>

308
00:13:06,350 --> 00:13:09,949
<font color="#E5E5E5">working but then as soon</font><font color="#CCCCCC"> as the new</font>

309
00:13:08,060 --> 00:13:13,640
release comes out<font color="#E5E5E5"> or a different vendor</font>

310
00:13:09,949 --> 00:13:15,769
CLI<font color="#E5E5E5"> you have a lot</font><font color="#CCCCCC"> of tedious</font><font color="#E5E5E5"> work to</font>

311
00:13:13,640 --> 00:13:18,860
maintain<font color="#E5E5E5"> that so we</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> needed</font>

312
00:13:15,769 --> 00:13:21,620
something<font color="#E5E5E5"> better and fortunately you as</font>

313
00:13:18,860 --> 00:13:23,720
the network operator community<font color="#E5E5E5"> went back</font>

314
00:13:21,620 --> 00:13:24,970
<font color="#E5E5E5">to the IETF and let the IETF know loud</font>

315
00:13:23,720 --> 00:13:27,579
and clear hey we need<font color="#E5E5E5"> some</font>

316
00:13:24,970 --> 00:13:30,610
better<font color="#CCCCCC"> and convinced the Ieft if</font>

317
00:13:27,579 --> 00:13:33,269
something better had to happen<font color="#CCCCCC"> and so as</font>

318
00:13:30,610 --> 00:13:36,250
a result<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is what happened</font>

319
00:13:33,269 --> 00:13:38,500
we had some<font color="#E5E5E5"> lessons</font><font color="#CCCCCC"> learned from SNMP</font>

320
00:13:36,250 --> 00:13:41,379
places where it actually<font color="#E5E5E5"> worked well but</font>

321
00:13:38,500 --> 00:13:43,810
certainly<font color="#CCCCCC"> somewhere</font><font color="#E5E5E5"> it didn't we saw</font>

322
00:13:41,379 --> 00:13:45,459
what<font color="#CCCCCC"> was being done</font><font color="#E5E5E5"> with the CLI some</font>

323
00:13:43,810 --> 00:13:47,439
best practices<font color="#E5E5E5"> around how</font><font color="#CCCCCC"> that was being</font>

324
00:13:45,459 --> 00:13:50,469
<font color="#CCCCCC">used and really</font><font color="#E5E5E5"> some some clever usage</font>

325
00:13:47,439 --> 00:13:52,329
there<font color="#E5E5E5"> then</font><font color="#CCCCCC"> also just</font><font color="#E5E5E5"> the operational</font>

326
00:13:50,470 --> 00:13:53,680
<font color="#CCCCCC">requirements</font><font color="#E5E5E5"> take that into</font>

327
00:13:52,329 --> 00:13:56,649
consideration the things that aren't

328
00:13:53,680 --> 00:13:59,739
handled well<font color="#CCCCCC"> and need to be and out of</font>

329
00:13:56,649 --> 00:14:04,060
that came yang<font color="#E5E5E5"> data</font><font color="#CCCCCC"> modeling and then</font>

330
00:13:59,740 --> 00:14:09,879
<font color="#CCCCCC">cough andres cthis protocols based on</font>

331
00:14:04,060 --> 00:14:12,699
using<font color="#CCCCCC"> those yang models okay so first</font><font color="#E5E5E5"> of</font>

332
00:14:09,879 --> 00:14:14,889
<font color="#E5E5E5">all what</font><font color="#CCCCCC"> is yang it's a data modeling</font>

333
00:14:12,699 --> 00:14:17,139
language<font color="#CCCCCC"> built specifically your defined</font>

334
00:14:14,889 --> 00:14:20,050
specifically<font color="#E5E5E5"> for networking and for</font>

335
00:14:17,139 --> 00:14:22,269
network data<font color="#E5E5E5"> what it's going to do is</font>

336
00:14:20,050 --> 00:14:25,029
take you away from<font color="#E5E5E5"> that</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of string</font>

337
00:14:22,269 --> 00:14:28,720
manipulation<font color="#CCCCCC"> Wild</font><font color="#E5E5E5"> West</font>

338
00:14:25,029 --> 00:14:31,360
CLI type of<font color="#E5E5E5"> definition of network data</font>

339
00:14:28,720 --> 00:14:34,059
<font color="#E5E5E5">and give you a well-defined formal</font>

340
00:14:31,360 --> 00:14:36,970
contract<font color="#E5E5E5"> of what your your network data</font>

341
00:14:34,059 --> 00:14:39,459
looks like it has<font color="#E5E5E5"> things built into</font><font color="#CCCCCC"> it</font>

342
00:14:36,970 --> 00:14:42,250
like constraints reusable types

343
00:14:39,459 --> 00:14:44,979
it's very modular<font color="#CCCCCC"> you can have one yang</font>

344
00:14:42,250 --> 00:14:46,449
model encapsulate another<font color="#E5E5E5"> yang model</font>

345
00:14:44,980 --> 00:14:48,699
kind<font color="#E5E5E5"> of a lot of concepts that I think</font>

346
00:14:46,449 --> 00:14:54,399
<font color="#CCCCCC">came</font><font color="#E5E5E5"> out of object-oriented programming</font>

347
00:14:48,699 --> 00:14:56,139
or<font color="#E5E5E5"> taken advantage by by</font><font color="#CCCCCC"> Yang</font><font color="#E5E5E5"> and so</font>

348
00:14:54,399 --> 00:14:58,809
with that we now have<font color="#E5E5E5"> this formal</font>

349
00:14:56,139 --> 00:15:02,379
contract<font color="#CCCCCC"> language that we can use to</font>

350
00:14:58,809 --> 00:15:04,649
<font color="#CCCCCC">capture</font><font color="#E5E5E5"> the definition of our network</font>

351
00:15:02,379 --> 00:15:04,649
data

352
00:15:07,320 --> 00:15:11,010
just to give<font color="#E5E5E5"> you an</font><font color="#CCCCCC"> idea of what a yang</font>

353
00:15:09,060 --> 00:15:13,770
model looks<font color="#E5E5E5"> like I'm looking at the yang</font>

354
00:15:11,010 --> 00:15:16,710
model network topology here<font color="#E5E5E5"> this is just</font>

355
00:15:13,770 --> 00:15:19,439
<font color="#CCCCCC">a</font><font color="#E5E5E5"> text editor and you can</font><font color="#CCCCCC"> see in at the</font>

356
00:15:16,710 --> 00:15:21,540
top there's a container<font color="#E5E5E5"> named network</font>

357
00:15:19,440 --> 00:15:23,580
topology the container<font color="#E5E5E5"> is just really a</font>

358
00:15:21,540 --> 00:15:25,260
grouping element within<font color="#E5E5E5"> it it can hold a</font>

359
00:15:23,580 --> 00:15:28,530
list multiple<font color="#E5E5E5"> lists</font><font color="#CCCCCC"> even other</font>

360
00:15:25,260 --> 00:15:34,620
containers<font color="#CCCCCC"> here</font><font color="#E5E5E5"> there's a list of</font>

361
00:15:28,530 --> 00:15:38,130
topologies and within<font color="#E5E5E5"> there</font><font color="#CCCCCC"> each kind of</font>

362
00:15:34,620 --> 00:15:41,280
leaf node is an individual<font color="#E5E5E5"> topology and</font>

363
00:15:38,130 --> 00:15:43,400
it's denoted<font color="#E5E5E5"> by a topology ID</font><font color="#CCCCCC"> each</font>

364
00:15:41,280 --> 00:15:46,500
unique element within<font color="#E5E5E5"> that list</font>

365
00:15:43,400 --> 00:15:48,150
<font color="#E5E5E5">now this yang model Scrolls off this</font>

366
00:15:46,500 --> 00:15:50,790
page very quickly<font color="#E5E5E5"> and is a little</font><font color="#CCCCCC"> bit</font>

367
00:15:48,150 --> 00:15:52,949
<font color="#E5E5E5">hard to perhaps work with it's just a</font>

368
00:15:50,790 --> 00:15:55,890
basic<font color="#E5E5E5"> text file so fortunately we have</font>

369
00:15:52,950 --> 00:15:58,740
<font color="#E5E5E5">some really good tools around yang</font><font color="#CCCCCC"> P</font>

370
00:15:55,890 --> 00:16:01,949
yang is one such tool it's a CLI<font color="#E5E5E5"> based</font>

371
00:15:58,740 --> 00:16:04,620
tool allows you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take a yang model and</font>

372
00:16:01,950 --> 00:16:06,510
validate that<font color="#CCCCCC"> yang model and then also</font>

373
00:16:04,620 --> 00:16:08,970
you can<font color="#CCCCCC"> through giving it different</font>

374
00:16:06,510 --> 00:16:11,130
parameters you can<font color="#E5E5E5"> tell it to</font><font color="#CCCCCC"> output the</font>

375
00:16:08,970 --> 00:16:12,860
yang model in<font color="#E5E5E5"> different forms what I'm</font>

376
00:16:11,130 --> 00:16:15,480
<font color="#E5E5E5">showing here on the right</font><font color="#CCCCCC"> hand side is</font>

377
00:16:12,860 --> 00:16:17,790
outputting it<font color="#E5E5E5"> that same</font><font color="#CCCCCC"> network topology</font>

378
00:16:15,480 --> 00:16:19,410
model outputting it as a tree and<font color="#E5E5E5"> that</font>

379
00:16:17,790 --> 00:16:21,030
just makes<font color="#CCCCCC"> it a lot easier to see the</font>

380
00:16:19,410 --> 00:16:24,569
individual<font color="#CCCCCC"> elements and structure of the</font>

381
00:16:21,030 --> 00:16:27,720
yang model<font color="#E5E5E5"> another tool yang Explorer</font>

382
00:16:24,570 --> 00:16:30,900
that's more of a<font color="#E5E5E5"> kind of a browser based</font>

383
00:16:27,720 --> 00:16:33,150
<font color="#E5E5E5">a graphical tool that allows you to</font><font color="#CCCCCC"> look</font>

384
00:16:30,900 --> 00:16:35,610
at<font color="#CCCCCC"> a young model similarly see it's</font>

385
00:16:33,150 --> 00:16:37,650
<font color="#E5E5E5">structure collapse and expand certain</font>

386
00:16:35,610 --> 00:16:41,460
elements and drill<font color="#CCCCCC"> down into</font><font color="#E5E5E5"> it again</font>

387
00:16:37,650 --> 00:16:44,370
<font color="#CCCCCC">just</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> make it easier for for humans to</font>

388
00:16:41,460 --> 00:16:45,120
process a yang model and then

389
00:16:44,370 --> 00:16:47,220
<font color="#CCCCCC">opendaylight</font>

390
00:16:45,120 --> 00:16:49,560
fortunately has a great set of<font color="#CCCCCC"> tools</font>

391
00:16:47,220 --> 00:16:51,330
called<font color="#E5E5E5"> yang tools and what that allows</font>

392
00:16:49,560 --> 00:16:53,630
opendaylight to do is to<font color="#E5E5E5"> interact with</font>

393
00:16:51,330 --> 00:16:56,070
yang models to<font color="#E5E5E5"> actually generate code</font>

394
00:16:53,630 --> 00:16:58,110
based off those yang models to support

395
00:16:56,070 --> 00:17:00,870
<font color="#CCCCCC">all the api's that are associated with</font>

396
00:16:58,110 --> 00:17:04,260
those yang models and we'll<font color="#E5E5E5"> take a look</font>

397
00:17:00,870 --> 00:17:06,240
at that<font color="#E5E5E5"> a bit more detail here so just</font>

398
00:17:04,260 --> 00:17:08,430
<font color="#CCCCCC">imagine</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> what I'm showing here these</font>

399
00:17:06,240 --> 00:17:10,980
gang models in green imagine those<font color="#CCCCCC"> are</font>

400
00:17:08,430 --> 00:17:12,930
the yang models<font color="#CCCCCC"> associated with some new</font>

401
00:17:10,980 --> 00:17:14,310
service or maybe<font color="#E5E5E5"> with a network</font><font color="#CCCCCC"> element</font>

402
00:17:12,930 --> 00:17:16,079
that you<font color="#CCCCCC"> want to bring</font><font color="#E5E5E5"> into your</font><font color="#CCCCCC"> network</font>

403
00:17:14,310 --> 00:17:18,990
an open<font color="#E5E5E5"> daylight didn't know anything</font>

404
00:17:16,079 --> 00:17:20,270
<font color="#E5E5E5">about that before so you can run this</font>

405
00:17:18,990 --> 00:17:22,250
through yang tools

406
00:17:20,270 --> 00:17:25,189
and this can happen dynamically while

407
00:17:22,250 --> 00:17:28,339
open<font color="#E5E5E5"> day lights up and running</font><font color="#CCCCCC"> all the</font>

408
00:17:25,189 --> 00:17:30,230
<font color="#E5E5E5">API is associated with those yang models</font>

409
00:17:28,339 --> 00:17:33,470
<font color="#E5E5E5">you can generate code to support</font><font color="#CCCCCC"> all</font>

410
00:17:30,230 --> 00:17:35,720
those api's<font color="#E5E5E5"> through maven those can</font><font color="#CCCCCC"> be</font>

411
00:17:33,470 --> 00:17:38,480
incorporated into the<font color="#CCCCCC"> open daylight</font>

412
00:17:35,720 --> 00:17:41,420
build and then using the<font color="#E5E5E5"> craft framework</font>

413
00:17:38,480 --> 00:17:43,340
<font color="#E5E5E5">you can go on you can enable the</font>

414
00:17:41,420 --> 00:17:45,950
features or<font color="#E5E5E5"> the capabilities associated</font>

415
00:17:43,340 --> 00:17:49,309
with those yang models so now open

416
00:17:45,950 --> 00:17:51,470
<font color="#CCCCCC">daylight is able to</font><font color="#E5E5E5"> support the network</font>

417
00:17:49,309 --> 00:17:54,940
<font color="#E5E5E5">element that's defined by those yang</font>

418
00:17:51,470 --> 00:17:54,940
models and interact with<font color="#E5E5E5"> it</font>

419
00:17:55,040 --> 00:18:02,330
similarly in addition to just the<font color="#CCCCCC"> you</font>

420
00:17:58,820 --> 00:18:04,610
know<font color="#E5E5E5"> the actual API associated code of</font>

421
00:18:02,330 --> 00:18:06,409
handling the<font color="#CCCCCC"> requests you may want open</font>

422
00:18:04,610 --> 00:18:09,740
daylight to do something specific<font color="#CCCCCC"> when</font>

423
00:18:06,410 --> 00:18:11,330
an<font color="#E5E5E5"> API gets invoked and so here's at the</font>

424
00:18:09,740 --> 00:18:12,920
bottom then that's showing how you could

425
00:18:11,330 --> 00:18:16,220
write some of<font color="#E5E5E5"> your</font><font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> source code</font>

426
00:18:12,920 --> 00:18:18,290
and again incorporate that through maven

427
00:18:16,220 --> 00:18:21,980
loaded<font color="#CCCCCC"> into</font><font color="#E5E5E5"> open daylight using carafe</font>

428
00:18:18,290 --> 00:18:23,540
<font color="#CCCCCC">and add support for so that it can</font>

429
00:18:21,980 --> 00:18:26,590
actually<font color="#CCCCCC"> do</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> useful when</font><font color="#E5E5E5"> these</font>

430
00:18:23,540 --> 00:18:26,590
<font color="#CCCCCC">API is get</font><font color="#E5E5E5"> involved</font>

431
00:18:28,059 --> 00:18:33,379
okay so that was yang that showed and

432
00:18:30,770 --> 00:18:35,590
how<font color="#E5E5E5"> open daylight supports it now I'm</font>

433
00:18:33,380 --> 00:18:38,929
going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> very briefly</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> Netcom</font>

434
00:18:35,590 --> 00:18:41,000
what net<font color="#E5E5E5"> coffee is is it's a defined in</font>

435
00:18:38,929 --> 00:18:43,160
the<font color="#CCCCCC"> ITF s</font><font color="#E5E5E5"> network management protocol</font>

436
00:18:41,000 --> 00:18:45,620
<font color="#E5E5E5">they came</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> wanting</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> something</font>

437
00:18:43,160 --> 00:18:48,920
better than<font color="#E5E5E5"> SNMP it was originally</font>

438
00:18:45,620 --> 00:18:52,520
defined<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> before yang was so you</font>

439
00:18:48,920 --> 00:18:57,740
can see that was RFC<font color="#CCCCCC"> 4241 whereas yang</font>

440
00:18:52,520 --> 00:19:00,710
was<font color="#E5E5E5"> 60 20 so very fortunately net conf</font>

441
00:18:57,740 --> 00:19:03,020
was updated to<font color="#E5E5E5"> take advantage of of</font><font color="#CCCCCC"> yang</font>

442
00:19:00,710 --> 00:19:04,130
<font color="#CCCCCC">so when I</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about net</font><font color="#E5E5E5"> comp here and</font>

443
00:19:03,020 --> 00:19:06,139
the rest of<font color="#E5E5E5"> this talk I'm primarily</font>

444
00:19:04,130 --> 00:19:08,230
<font color="#E5E5E5">talking about this newer version RFC</font>

445
00:19:06,140 --> 00:19:10,970
6241

446
00:19:08,230 --> 00:19:14,300
it's a connection-oriented protocol<font color="#E5E5E5"> runs</font>

447
00:19:10,970 --> 00:19:17,330
<font color="#E5E5E5">over SSH or TLS key thing is that</font><font color="#CCCCCC"> the</font>

448
00:19:14,300 --> 00:19:20,030
<font color="#CCCCCC">actual</font><font color="#E5E5E5"> while</font><font color="#CCCCCC"> Netcom provides a set</font><font color="#E5E5E5"> of</font>

449
00:19:17,330 --> 00:19:23,059
operations<font color="#CCCCCC"> the the</font><font color="#E5E5E5"> data the format of</font>

450
00:19:20,030 --> 00:19:26,570
the<font color="#E5E5E5"> data within your net cough request</font>

451
00:19:23,059 --> 00:19:30,168
<font color="#E5E5E5">is exactly defined by the hanging models</font>

452
00:19:26,570 --> 00:19:31,760
<font color="#E5E5E5">so that's the</font><font color="#CCCCCC"> well-defined</font><font color="#E5E5E5"> syntax then</font>

453
00:19:30,169 --> 00:19:32,920
that is used within your net cough

454
00:19:31,760 --> 00:19:35,560
<font color="#E5E5E5">request</font>

455
00:19:32,920 --> 00:19:37,840
you have the ability<font color="#CCCCCC"> to</font><font color="#E5E5E5"> differentiate</font>

456
00:19:35,560 --> 00:19:40,750
between configuration data and state

457
00:19:37,840 --> 00:19:42,070
data<font color="#CCCCCC"> very important there your</font>

458
00:19:40,750 --> 00:19:44,230
configuration data is going to<font color="#E5E5E5"> be</font>

459
00:19:42,070 --> 00:19:46,720
<font color="#CCCCCC">read/write information</font><font color="#E5E5E5"> whereas your</font>

460
00:19:44,230 --> 00:19:48,490
state information<font color="#E5E5E5"> is is</font><font color="#CCCCCC"> read-only are</font>

461
00:19:46,720 --> 00:19:50,140
<font color="#E5E5E5">you able to deal</font><font color="#CCCCCC"> with that</font><font color="#E5E5E5"> you're also</font>

462
00:19:48,490 --> 00:19:51,970
able to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> different data stores so</font>

463
00:19:50,140 --> 00:19:54,040
even among<font color="#E5E5E5"> even when you think of just</font>

464
00:19:51,970 --> 00:19:55,800
your configuration data you might<font color="#E5E5E5"> have a</font>

465
00:19:54,040 --> 00:19:57,879
startup configuration<font color="#E5E5E5"> a running</font>

466
00:19:55,800 --> 00:20:00,580
configuration or a candidate

467
00:19:57,880 --> 00:20:02,080
configuration and then the<font color="#E5E5E5"> last</font><font color="#CCCCCC"> thing I</font>

468
00:20:00,580 --> 00:20:06,340
want<font color="#E5E5E5"> to point out here which is very</font>

469
00:20:02,080 --> 00:20:07,659
<font color="#CCCCCC">important is</font><font color="#E5E5E5"> being able</font><font color="#CCCCCC"> to group changes</font>

470
00:20:06,340 --> 00:20:10,000
<font color="#E5E5E5">and validate</font><font color="#CCCCCC"> that they're actually</font>

471
00:20:07,660 --> 00:20:12,190
<font color="#E5E5E5">correct and then the concept of</font>

472
00:20:10,000 --> 00:20:15,910
<font color="#CCCCCC">transactions so you can apply multiple</font>

473
00:20:12,190 --> 00:20:17,740
things at once<font color="#CCCCCC"> and you know if they</font>

474
00:20:15,910 --> 00:20:19,510
either all succeed or all fail together

475
00:20:17,740 --> 00:20:22,090
<font color="#E5E5E5">and then roll back if they didn't</font>

476
00:20:19,510 --> 00:20:23,980
<font color="#CCCCCC">succeed and</font><font color="#E5E5E5"> that's really key</font><font color="#CCCCCC"> because</font>

477
00:20:22,090 --> 00:20:25,659
now through net coffee<font color="#E5E5E5"> you actually have</font>

478
00:20:23,980 --> 00:20:28,650
the fundamental programming features

479
00:20:25,660 --> 00:20:31,000
that you<font color="#CCCCCC"> need in order to</font>

480
00:20:28,650 --> 00:20:36,010
programmatically interact with with your

481
00:20:31,000 --> 00:20:38,650
<font color="#E5E5E5">network just</font><font color="#CCCCCC"> showing how this works</font>

482
00:20:36,010 --> 00:20:41,710
<font color="#CCCCCC">Netcom</font><font color="#E5E5E5"> fear it as I mentioned</font><font color="#CCCCCC"> it's</font>

483
00:20:38,650 --> 00:20:44,440
<font color="#E5E5E5">connection oriented primarily over SSH</font>

484
00:20:41,710 --> 00:20:46,360
<font color="#CCCCCC">you would</font><font color="#E5E5E5"> just establish an SSH</font>

485
00:20:44,440 --> 00:20:49,300
connection from<font color="#E5E5E5"> a net conf client to a</font>

486
00:20:46,360 --> 00:20:52,000
<font color="#E5E5E5">net comp server there's a</font><font color="#CCCCCC"> hello exchange</font>

487
00:20:49,300 --> 00:20:53,889
<font color="#E5E5E5">and what happens there is the server</font><font color="#CCCCCC"> tun</font>

488
00:20:52,000 --> 00:20:58,180
the client here all the yang models that

489
00:20:53,890 --> 00:21:00,160
I support and now the client knows all

490
00:20:58,180 --> 00:21:02,830
of<font color="#CCCCCC"> the api's which are defined by that</font>

491
00:21:00,160 --> 00:21:05,740
yang model<font color="#E5E5E5"> that it's</font><font color="#CCCCCC"> able to use when</font>

492
00:21:02,830 --> 00:21:09,070
<font color="#E5E5E5">talking to this</font><font color="#CCCCCC"> Netcom</font><font color="#E5E5E5"> server you can</font>

493
00:21:05,740 --> 00:21:11,050
<font color="#E5E5E5">use</font><font color="#CCCCCC"> net comp commands</font><font color="#E5E5E5"> to get and edit</font>

494
00:21:09,070 --> 00:21:12,340
and do things with configuration or with

495
00:21:11,050 --> 00:21:16,020
the operational<font color="#CCCCCC"> State and then when</font>

496
00:21:12,340 --> 00:21:16,020
you're done you<font color="#E5E5E5"> close the connection</font>

497
00:21:17,400 --> 00:21:23,920
okay so now rest conf<font color="#E5E5E5"> that</font><font color="#CCCCCC"> net comp</font>

498
00:21:21,910 --> 00:21:26,410
<font color="#E5E5E5">thing sounded pretty good</font><font color="#CCCCCC"> it was</font>

499
00:21:23,920 --> 00:21:29,580
certainly a<font color="#CCCCCC"> big improvement why do we</font>

500
00:21:26,410 --> 00:21:31,600
need this rest<font color="#CCCCCC"> costing and what is it</font>

501
00:21:29,580 --> 00:21:35,490
<font color="#E5E5E5">one of</font><font color="#CCCCCC"> the things we mentioned that</font><font color="#E5E5E5"> was</font>

502
00:21:31,600 --> 00:21:38,709
very important for a controller is

503
00:21:35,490 --> 00:21:41,710
providing<font color="#E5E5E5"> developer friendly api's in</font>

504
00:21:38,710 --> 00:21:44,200
what all<font color="#CCCCCC"> net cough was certainly</font><font color="#E5E5E5"> or is</font>

505
00:21:41,710 --> 00:21:45,970
<font color="#E5E5E5">certainly a lot more usable</font><font color="#CCCCCC"> than</font>

506
00:21:44,200 --> 00:21:49,750
<font color="#CCCCCC">doing a bunch of just string</font>

507
00:21:45,970 --> 00:21:53,409
manipulation with the CLI<font color="#E5E5E5"> it is kind</font><font color="#CCCCCC"> of</font>

508
00:21:49,750 --> 00:21:55,600
<font color="#CCCCCC">heavyweight</font><font color="#E5E5E5"> it's really good from like</font>

509
00:21:53,409 --> 00:21:58,630
machine to machine like a controller

510
00:21:55,600 --> 00:22:01,059
talking to a network element<font color="#E5E5E5"> it's not</font>

511
00:21:58,630 --> 00:22:04,260
quite as<font color="#E5E5E5"> friendly as what you see with a</font>

512
00:22:01,059 --> 00:22:06,940
lot<font color="#CCCCCC"> of web application developer api's</font>

513
00:22:04,260 --> 00:22:08,710
<font color="#CCCCCC">for example rest-based API is or</font>

514
00:22:06,940 --> 00:22:10,350
<font color="#E5E5E5">something that's very</font><font color="#CCCCCC"> popular and varied</font>

515
00:22:08,710 --> 00:22:13,120
<font color="#E5E5E5">to you easy to use in the application</font>

516
00:22:10,350 --> 00:22:17,260
developer community

517
00:22:13,120 --> 00:22:20,469
so what<font color="#CCCCCC"> resk off does is it takes</font><font color="#E5E5E5"> yang</font>

518
00:22:17,260 --> 00:22:23,169
models and<font color="#E5E5E5"> maps the access of them onto</font>

519
00:22:20,470 --> 00:22:25,870
restful api

520
00:22:23,169 --> 00:22:28,779
<font color="#CCCCCC">I think so now you can</font><font color="#E5E5E5"> use like get and</font>

521
00:22:25,870 --> 00:22:31,268
put and post<font color="#E5E5E5"> use HTTP</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> to</font>

522
00:22:28,779 --> 00:22:33,909
<font color="#E5E5E5">interact with a yang model and in</font>

523
00:22:31,269 --> 00:22:37,480
addition to<font color="#CCCCCC"> using</font><font color="#E5E5E5"> XML which is how net</font>

524
00:22:33,909 --> 00:22:40,480
conf encoded the yang data it adds

525
00:22:37,480 --> 00:22:45,039
support for<font color="#E5E5E5"> JSON and this combination</font><font color="#CCCCCC"> of</font>

526
00:22:40,480 --> 00:22:46,630
HTTP requests restful api is JSON those

527
00:22:45,039 --> 00:22:49,000
are things that<font color="#E5E5E5"> are very comfortable and</font>

528
00:22:46,630 --> 00:22:51,730
very<font color="#CCCCCC"> familiar</font><font color="#E5E5E5"> to application</font><font color="#CCCCCC"> developers</font>

529
00:22:49,000 --> 00:22:53,200
and there's a lot<font color="#E5E5E5"> of tools out</font><font color="#CCCCCC"> there in</font>

530
00:22:51,730 --> 00:22:55,179
the market that helping<font color="#E5E5E5"> you interact</font>

531
00:22:53,200 --> 00:22:58,889
<font color="#CCCCCC">with them</font><font color="#E5E5E5"> and we'll look at</font><font color="#CCCCCC"> some of</font>

532
00:22:55,179 --> 00:22:58,889
<font color="#E5E5E5">those a little bit later</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> this talk</font>

533
00:22:59,850 --> 00:23:06,428
give you an<font color="#CCCCCC"> idea of</font><font color="#E5E5E5"> how rest</font><font color="#CCCCCC"> comp works</font>

534
00:23:03,039 --> 00:23:08,500
<font color="#CCCCCC">I mentioned</font><font color="#E5E5E5"> that you</font><font color="#CCCCCC"> end up it provides</font>

535
00:23:06,429 --> 00:23:11,529
a restful api right and then you<font color="#E5E5E5"> can use</font>

536
00:23:08,500 --> 00:23:13,809
like get put<font color="#E5E5E5"> in post so the structure of</font>

537
00:23:11,529 --> 00:23:18,370
the yang model<font color="#E5E5E5"> actually defines exactly</font>

538
00:23:13,809 --> 00:23:20,980
<font color="#CCCCCC">what the rest</font><font color="#E5E5E5"> what the HTTP URI should</font>

539
00:23:18,370 --> 00:23:25,330
look like<font color="#E5E5E5"> that you use for</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> rest</font>

540
00:23:20,980 --> 00:23:28,600
based<font color="#E5E5E5"> request</font><font color="#CCCCCC"> in this example</font><font color="#E5E5E5"> localhost</font>

541
00:23:25,330 --> 00:23:31,960
<font color="#E5E5E5">81 81 that's where my instance of</font>

542
00:23:28,600 --> 00:23:34,600
<font color="#CCCCCC">opendaylight is running I'm using</font><font color="#E5E5E5"> rest</font>

543
00:23:31,960 --> 00:23:37,600
cough<font color="#CCCCCC"> so you can</font><font color="#E5E5E5"> just see how the URL</font>

544
00:23:34,600 --> 00:23:39,480
<font color="#E5E5E5">gets built up here I've gone back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> my</font>

545
00:23:37,600 --> 00:23:44,740
<font color="#E5E5E5">favorite example of the network topology</font>

546
00:23:39,480 --> 00:23:46,630
<font color="#CCCCCC">yang model</font><font color="#E5E5E5"> so that goes into the URI</font><font color="#CCCCCC"> I'm</font>

547
00:23:44,740 --> 00:23:49,899
going to look at the network topology

548
00:23:46,630 --> 00:23:52,539
<font color="#E5E5E5">list within that now I mentioned before</font>

549
00:23:49,899 --> 00:23:54,580
<font color="#E5E5E5">that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have this readwrite data which</font>

550
00:23:52,539 --> 00:23:56,799
is<font color="#E5E5E5"> configuration and operational data</font>

551
00:23:54,580 --> 00:23:57,679
which is read-only<font color="#CCCCCC"> if you can see I have</font>

552
00:23:56,799 --> 00:24:00,379
an<font color="#E5E5E5"> RW</font>

553
00:23:57,680 --> 00:24:02,540
in the yang model for<font color="#E5E5E5"> this list element</font>

554
00:24:00,380 --> 00:24:05,809
here so that's where the config<font color="#E5E5E5"> art</font>

555
00:24:02,540 --> 00:24:09,290
comes from<font color="#E5E5E5"> and I'm going to interact</font>

556
00:24:05,809 --> 00:24:12,910
with a specific topology<font color="#CCCCCC"> within my list</font>

557
00:24:09,290 --> 00:24:16,879
here<font color="#E5E5E5"> and the ID of</font><font color="#CCCCCC"> that topology is</font>

558
00:24:12,910 --> 00:24:19,910
<font color="#E5E5E5">topology -</font><font color="#CCCCCC"> Netcom within</font><font color="#E5E5E5"> that I want to</font>

559
00:24:16,880 --> 00:24:23,270
<font color="#CCCCCC">interact with a specific</font><font color="#E5E5E5"> node and the ID</font>

560
00:24:19,910 --> 00:24:25,520
<font color="#CCCCCC">of that</font><font color="#E5E5E5"> node is</font><font color="#CCCCCC"> V P p1 so here you can</font>

561
00:24:23,270 --> 00:24:27,889
see the construction<font color="#E5E5E5"> of the URI exactly</font>

562
00:24:25,520 --> 00:24:30,020
flows from the yang model<font color="#E5E5E5"> and then the</font>

563
00:24:27,890 --> 00:24:34,580
<font color="#E5E5E5">data which I mentioned could be encoded</font>

564
00:24:30,020 --> 00:24:36,350
as XML or as JSON<font color="#E5E5E5"> that's determined by</font>

565
00:24:34,580 --> 00:24:39,139
another yang model that's referenced

566
00:24:36,350 --> 00:24:41,360
from this one and so this net cough node

567
00:24:39,140 --> 00:24:43,850
topology<font color="#E5E5E5"> the information in there and</font>

568
00:24:41,360 --> 00:24:47,209
that yang model gives exactly the<font color="#E5E5E5"> syntax</font>

569
00:24:43,850 --> 00:24:49,428
<font color="#E5E5E5">and structure of the the</font><font color="#CCCCCC"> data that I</font>

570
00:24:47,210 --> 00:24:55,490
would need to<font color="#E5E5E5"> encapsulate in my yang</font>

571
00:24:49,429 --> 00:24:56,960
sorry in my<font color="#E5E5E5"> rest cough request so the</font>

572
00:24:55,490 --> 00:25:01,130
important<font color="#CCCCCC"> thing that</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> want to make sure</font>

573
00:24:56,960 --> 00:25:03,740
I point out here is that it's<font color="#E5E5E5"> not a</font>

574
00:25:01,130 --> 00:25:06,140
<font color="#E5E5E5">choice of</font><font color="#CCCCCC"> Netcom for s cough it's really</font>

575
00:25:03,740 --> 00:25:07,610
a matter of it's<font color="#E5E5E5"> not an</font><font color="#CCCCCC"> either/or</font>

576
00:25:06,140 --> 00:25:09,500
you use<font color="#E5E5E5"> whatever's better for the job</font>

577
00:25:07,610 --> 00:25:12,139
<font color="#CCCCCC">you could even use both at the same time</font>

578
00:25:09,500 --> 00:25:14,900
<font color="#E5E5E5">the key thing is whether you're using</font>

579
00:25:12,140 --> 00:25:17,270
<font color="#E5E5E5">rest confer or net conf you're operating</font>

580
00:25:14,900 --> 00:25:19,070
with the<font color="#E5E5E5"> exact same data store on the</font>

581
00:25:17,270 --> 00:25:21,770
network device or<font color="#E5E5E5"> whatever it is you're</font>

582
00:25:19,070 --> 00:25:25,760
talking<font color="#CCCCCC"> to so in this example you can</font>

583
00:25:21,770 --> 00:25:27,710
<font color="#CCCCCC">see</font><font color="#E5E5E5"> you know using</font><font color="#CCCCCC"> SSH and</font><font color="#E5E5E5"> XML encoded</font>

584
00:25:25,760 --> 00:25:29,450
net cough<font color="#E5E5E5"> request could be interacting</font>

585
00:25:27,710 --> 00:25:31,790
<font color="#CCCCCC">with the data store at the</font><font color="#E5E5E5"> same time</font>

586
00:25:29,450 --> 00:25:35,360
that I could be interacting<font color="#CCCCCC"> with</font><font color="#E5E5E5"> it</font>

587
00:25:31,790 --> 00:25:40,850
using<font color="#E5E5E5"> rest cough so you just choose</font><font color="#CCCCCC"> the</font>

588
00:25:35,360 --> 00:25:42,649
<font color="#CCCCCC">right one for</font><font color="#E5E5E5"> the job</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> now since</font>

589
00:25:40,850 --> 00:25:44,510
<font color="#E5E5E5">we're talking about</font><font color="#CCCCCC"> open daylight I want</font>

590
00:25:42,650 --> 00:25:47,960
to show how this all maps<font color="#CCCCCC"> onto</font><font color="#E5E5E5"> open</font>

591
00:25:44,510 --> 00:25:50,990
daylight so in this example<font color="#E5E5E5"> what I have</font>

592
00:25:47,960 --> 00:25:53,300
is an instance of open daylight<font color="#CCCCCC"> you can</font>

593
00:25:50,990 --> 00:25:56,929
<font color="#CCCCCC">see at the bottom there net cough is a</font>

594
00:25:53,300 --> 00:25:58,820
protocol that<font color="#CCCCCC"> I enabled on on open</font>

595
00:25:56,929 --> 00:26:01,010
daylight and I'm going to<font color="#E5E5E5"> use that to</font>

596
00:25:58,820 --> 00:26:04,840
talk to these various<font color="#E5E5E5"> network elements</font>

597
00:26:01,010 --> 00:26:07,940
<font color="#E5E5E5">VP p1 VPP</font><font color="#CCCCCC"> - those are two different</font>

598
00:26:04,840 --> 00:26:09,980
switches and then open wrt is a third

599
00:26:07,940 --> 00:26:11,370
one and for the sake of argument we're

600
00:26:09,980 --> 00:26:13,560
saying these<font color="#E5E5E5"> all support</font>

601
00:26:11,370 --> 00:26:15,570
and there's a set of<font color="#E5E5E5"> yang models that</font>

602
00:26:13,560 --> 00:26:18,540
each of them supports which defines how

603
00:26:15,570 --> 00:26:21,030
to interact<font color="#E5E5E5"> with them so the first thing</font>

604
00:26:18,540 --> 00:26:24,930
that<font color="#E5E5E5"> happens is opendaylight establishes</font>

605
00:26:21,030 --> 00:26:26,850
that<font color="#E5E5E5"> ssh connection to VPP one</font><font color="#CCCCCC"> sets up</font>

606
00:26:24,930 --> 00:26:30,960
the net<font color="#CCCCCC"> Kampf</font><font color="#E5E5E5"> session</font>

607
00:26:26,850 --> 00:26:34,169
there's the<font color="#E5E5E5"> hello exchange and so then</font>

608
00:26:30,960 --> 00:26:36,600
VPP one gets added into<font color="#CCCCCC"> the node</font>

609
00:26:34,170 --> 00:26:39,420
inventory of<font color="#E5E5E5"> opendaylight and the yang</font>

610
00:26:36,600 --> 00:26:41,399
models which<font color="#CCCCCC"> is the complete set of you</font>

611
00:26:39,420 --> 00:26:44,370
know defines the network data that<font color="#CCCCCC"> VPP</font>

612
00:26:41,400 --> 00:26:47,640
one supports those get added<font color="#CCCCCC"> in</font><font color="#E5E5E5"> to open</font>

613
00:26:44,370 --> 00:26:49,560
<font color="#CCCCCC">daylight's model cache and all the code</font>

614
00:26:47,640 --> 00:26:52,380
that's<font color="#CCCCCC"> needed</font><font color="#E5E5E5"> to interact with those</font>

615
00:26:49,560 --> 00:26:55,080
api's gets generated and incorporated

616
00:26:52,380 --> 00:26:58,920
into<font color="#E5E5E5"> open daylight as well so now open</font>

617
00:26:55,080 --> 00:27:03,990
<font color="#E5E5E5">daylight's able to use net cough to</font>

618
00:26:58,920 --> 00:27:06,840
control VPP one<font color="#E5E5E5"> ok next it establishes a</font>

619
00:27:03,990 --> 00:27:11,250
connection<font color="#E5E5E5"> to VPP</font><font color="#CCCCCC"> two and adds VPP two</font>

620
00:27:06,840 --> 00:27:12,560
into its inventory<font color="#E5E5E5"> v PT PP</font><font color="#CCCCCC"> two let's</font>

621
00:27:11,250 --> 00:27:14,910
just say for the<font color="#E5E5E5"> sake of argument</font>

622
00:27:12,560 --> 00:27:16,679
supports<font color="#E5E5E5"> the exact same set of yang</font>

623
00:27:14,910 --> 00:27:20,550
models<font color="#E5E5E5"> it's pretty likely if it's the</font>

624
00:27:16,680 --> 00:27:21,660
same<font color="#E5E5E5"> product and same release of code</font><font color="#CCCCCC"> so</font>

625
00:27:20,550 --> 00:27:26,639
there's<font color="#CCCCCC"> nothing new to</font><font color="#E5E5E5"> add into the</font>

626
00:27:21,660 --> 00:27:28,440
cache now we<font color="#CCCCCC"> talk to the open wrt same</font>

627
00:27:26,640 --> 00:27:31,200
thing established that connection<font color="#E5E5E5"> to it</font>

628
00:27:28,440 --> 00:27:32,940
<font color="#E5E5E5">add</font><font color="#CCCCCC"> it into</font><font color="#E5E5E5"> our inventory</font><font color="#CCCCCC"> it supports</font>

629
00:27:31,200 --> 00:27:35,490
some of<font color="#CCCCCC"> the same models</font><font color="#E5E5E5"> but actually</font>

630
00:27:32,940 --> 00:27:38,780
some different<font color="#E5E5E5"> models as well so those</font>

631
00:27:35,490 --> 00:27:41,340
new<font color="#E5E5E5"> models get added into our cache and</font>

632
00:27:38,780 --> 00:27:43,590
more code gets generated so now I can

633
00:27:41,340 --> 00:27:46,679
interact<font color="#E5E5E5"> with those models as well so</font>

634
00:27:43,590 --> 00:27:48,419
now dynamically<font color="#E5E5E5"> opendaylight has added</font>

635
00:27:46,680 --> 00:27:50,490
on all the functionality it needs in

636
00:27:48,420 --> 00:27:52,170
order to<font color="#E5E5E5"> be able to work with the API is</font>

637
00:27:50,490 --> 00:27:58,410
associated<font color="#E5E5E5"> with the yang models</font>

638
00:27:52,170 --> 00:27:59,460
supported on these network elements<font color="#CCCCCC"> ok</font>

639
00:27:58,410 --> 00:28:02,220
great

640
00:27:59,460 --> 00:28:05,490
so I'm doing<font color="#E5E5E5"> all</font><font color="#CCCCCC"> right on time</font><font color="#E5E5E5"> so what</font>

641
00:28:02,220 --> 00:28:06,660
I'm gonna do now<font color="#CCCCCC"> is show you</font><font color="#E5E5E5"> if you</font>

642
00:28:05,490 --> 00:28:08,820
wanted<font color="#E5E5E5"> to go and do some of</font><font color="#CCCCCC"> this</font>

643
00:28:06,660 --> 00:28:10,470
yourself how<font color="#E5E5E5"> easy it is to get</font><font color="#CCCCCC"> up and</font>

644
00:28:08,820 --> 00:28:14,790
running with open<font color="#CCCCCC"> daylight is this type</font>

645
00:28:10,470 --> 00:28:16,650
of platform so I need to do is go<font color="#CCCCCC"> to</font>

646
00:28:14,790 --> 00:28:18,180
this URL and the slides are all

647
00:28:16,650 --> 00:28:20,880
available online so<font color="#CCCCCC"> don't worry about</font>

648
00:28:18,180 --> 00:28:22,530
<font color="#E5E5E5">copying anything down</font><font color="#CCCCCC"> and this</font>

649
00:28:20,880 --> 00:28:24,100
demonstration or example I'll be<font color="#E5E5E5"> using</font>

650
00:28:22,530 --> 00:28:26,020
<font color="#E5E5E5">the nitrogen SR</font>

651
00:28:24,100 --> 00:28:29,770
release<font color="#E5E5E5"> that's the latest stable release</font>

652
00:28:26,020 --> 00:28:34,120
of open daylight you can<font color="#CCCCCC"> see it it comes</font>

653
00:28:29,770 --> 00:28:36,700
as either a tar file or zip<font color="#E5E5E5"> you just</font>

654
00:28:34,120 --> 00:28:37,750
download<font color="#CCCCCC"> one of those in this case I</font>

655
00:28:36,700 --> 00:28:40,420
took<font color="#E5E5E5"> the zip file</font>

656
00:28:37,750 --> 00:28:42,670
<font color="#E5E5E5">I just unzip it</font><font color="#CCCCCC"> i CD into the directory</font>

657
00:28:40,420 --> 00:28:44,740
<font color="#E5E5E5">that's created there and I type in</font>

658
00:28:42,670 --> 00:28:47,980
carafe and that brings up open daylight

659
00:28:44,740 --> 00:28:49,420
<font color="#E5E5E5">and it says here it started in</font><font color="#CCCCCC"> 0 seconds</font>

660
00:28:47,980 --> 00:28:51,880
that<font color="#E5E5E5"> was a little bit of an exaggeration</font>

661
00:28:49,420 --> 00:28:54,010
it probably took<font color="#CCCCCC"> two seconds</font><font color="#E5E5E5"> but still</font>

662
00:28:51,880 --> 00:28:55,120
very<font color="#E5E5E5"> quick and the reason it's so quick</font>

663
00:28:54,010 --> 00:28:57,970
is because it's<font color="#E5E5E5"> doing almost nothing</font>

664
00:28:55,120 --> 00:29:00,639
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> just booting up sort of that</font><font color="#CCCCCC"> osg</font>

665
00:28:57,970 --> 00:29:02,170
<font color="#CCCCCC">I've based framework</font><font color="#E5E5E5"> so through which I</font>

666
00:29:00,640 --> 00:29:04,060
can<font color="#CCCCCC"> then go and enable those things that</font>

667
00:29:02,170 --> 00:29:07,720
<font color="#E5E5E5">I want to enable and this is what the</font>

668
00:29:04,060 --> 00:29:09,280
open daylight CLI looks like so<font color="#E5E5E5"> now I</font>

669
00:29:07,720 --> 00:29:13,090
<font color="#CCCCCC">need</font><font color="#E5E5E5"> to go and enable the features I</font>

670
00:29:09,280 --> 00:29:15,490
want and the<font color="#E5E5E5"> way I can do that through</font>

671
00:29:13,090 --> 00:29:17,260
the CLI type feature list to see<font color="#E5E5E5"> the</font>

672
00:29:15,490 --> 00:29:20,200
long<font color="#E5E5E5"> list of all the features</font><font color="#CCCCCC"> that open</font>

673
00:29:17,260 --> 00:29:21,700
daylight supports feature less - I to

674
00:29:20,200 --> 00:29:24,970
see those which have already been

675
00:29:21,700 --> 00:29:26,890
<font color="#CCCCCC">installed</font><font color="#E5E5E5"> I can install new features by</font>

676
00:29:24,970 --> 00:29:28,720
doing feature install and give it the

677
00:29:26,890 --> 00:29:31,000
<font color="#E5E5E5">name</font><font color="#CCCCCC"> of one or more features and I can</font>

678
00:29:28,720 --> 00:29:32,920
uninstall features and so by doing<font color="#E5E5E5"> that</font>

679
00:29:31,000 --> 00:29:36,790
<font color="#CCCCCC">I can selectively add those features</font>

680
00:29:32,920 --> 00:29:38,800
<font color="#CCCCCC">which are important to me in my case</font>

681
00:29:36,790 --> 00:29:41,980
there's here's the feature set that<font color="#CCCCCC"> I</font>

682
00:29:38,800 --> 00:29:43,450
want and deluxe<font color="#E5E5E5"> which I haven't talked</font>

683
00:29:41,980 --> 00:29:45,160
about<font color="#E5E5E5"> yet</font><font color="#CCCCCC"> but that's</font><font color="#E5E5E5"> the graphical user</font>

684
00:29:43,450 --> 00:29:47,220
interface<font color="#CCCCCC"> that ships - with open</font>

685
00:29:45,160 --> 00:29:49,810
daylight<font color="#CCCCCC"> I want to be able to use</font><font color="#E5E5E5"> that</font>

686
00:29:47,220 --> 00:29:52,660
<font color="#CCCCCC">so</font><font color="#E5E5E5"> I install that feature the deluxe</font>

687
00:29:49,810 --> 00:29:55,240
core there's some capabilities to

688
00:29:52,660 --> 00:29:58,120
interact with<font color="#CCCCCC"> the yang based</font><font color="#E5E5E5"> URI</font>

689
00:29:55,240 --> 00:30:01,060
UI and I want that<font color="#E5E5E5"> as well so I enable</font>

690
00:29:58,120 --> 00:30:02,770
that<font color="#CCCCCC"> rust coffin</font><font color="#E5E5E5"> net cough I've been</font>

691
00:30:01,060 --> 00:30:04,360
talking about those I<font color="#E5E5E5"> want to be able</font><font color="#CCCCCC"> to</font>

692
00:30:02,770 --> 00:30:07,750
make sure<font color="#CCCCCC"> that open daylight supports</font>

693
00:30:04,360 --> 00:30:09,550
those<font color="#E5E5E5"> so I enable those</font><font color="#CCCCCC"> Netcom topology</font>

694
00:30:07,750 --> 00:30:12,280
<font color="#CCCCCC">I want to be able</font><font color="#E5E5E5"> to use</font><font color="#CCCCCC"> that</font>

695
00:30:09,550 --> 00:30:14,520
functionality<font color="#E5E5E5"> and when I connect via net</font>

696
00:30:12,280 --> 00:30:18,639
cough I'm going to be connecting via SSH

697
00:30:14,520 --> 00:30:19,240
<font color="#CCCCCC">there's also a TLS connection I don't</font>

698
00:30:18,640 --> 00:30:20,860
need that

699
00:30:19,240 --> 00:30:23,680
so again<font color="#CCCCCC"> just I can tailor my</font>

700
00:30:20,860 --> 00:30:26,199
<font color="#CCCCCC">opendaylight instance to support just</font>

701
00:30:23,680 --> 00:30:28,870
that feature set<font color="#CCCCCC"> that I want and then</font>

702
00:30:26,200 --> 00:30:31,600
featureless -<font color="#CCCCCC"> R that shows you</font><font color="#E5E5E5"> the list</font>

703
00:30:28,870 --> 00:30:33,729
<font color="#E5E5E5">of required features and what this does</font>

704
00:30:31,600 --> 00:30:37,719
is the outputs there at the bottom<font color="#CCCCCC"> of</font>

705
00:30:33,730 --> 00:30:40,120
the screen<font color="#E5E5E5"> it just shows me those lists</font>

706
00:30:37,720 --> 00:30:42,040
features<font color="#E5E5E5"> that I've actually enabled if I</font>

707
00:30:40,120 --> 00:30:44,199
did feature<font color="#E5E5E5"> list - I and actually see a</font>

708
00:30:42,040 --> 00:30:46,420
much larger list<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> reason for that</font>

709
00:30:44,200 --> 00:30:52,030
is feature list -<font color="#E5E5E5"> I pulls in all the</font>

710
00:30:46,420 --> 00:30:53,200
dependencies<font color="#E5E5E5"> as well okay and you're</font>

711
00:30:52,030 --> 00:30:55,629
gonna have<font color="#E5E5E5"> to bear with me</font><font color="#CCCCCC"> because the</font>

712
00:30:53,200 --> 00:30:56,950
idea<font color="#CCCCCC"> was to do a live demo up here and</font>

713
00:30:55,630 --> 00:30:59,710
walk through some<font color="#E5E5E5"> of this but</font><font color="#CCCCCC"> instead</font>

714
00:30:56,950 --> 00:31:03,900
I'm<font color="#E5E5E5"> gonna use screenshots and try to</font>

715
00:30:59,710 --> 00:31:06,490
explain to<font color="#CCCCCC"> you</font><font color="#E5E5E5"> what would be going on so</font>

716
00:31:03,900 --> 00:31:09,970
what you're seeing here<font color="#E5E5E5"> is deluxe this</font>

717
00:31:06,490 --> 00:31:12,220
is the<font color="#E5E5E5"> open daylight UI and what you see</font>

718
00:31:09,970 --> 00:31:14,620
on the majority<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> screen there in</font>

719
00:31:12,220 --> 00:31:16,930
the middle those are all the yang models

720
00:31:14,620 --> 00:31:18,580
that ship with open daylight<font color="#CCCCCC"> and that</font>

721
00:31:16,930 --> 00:31:21,970
are installed<font color="#E5E5E5"> just out</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> box when</font>

722
00:31:18,580 --> 00:31:24,520
<font color="#E5E5E5">you download it and I'm using the yang</font>

723
00:31:21,970 --> 00:31:26,860
UI<font color="#E5E5E5"> capability within deluxe here and</font>

724
00:31:24,520 --> 00:31:29,110
what I'm showing and highlighting here

725
00:31:26,860 --> 00:31:30,639
is drilling<font color="#E5E5E5"> down into once again my</font>

726
00:31:29,110 --> 00:31:35,020
<font color="#E5E5E5">favorite example that the network</font>

727
00:31:30,640 --> 00:31:37,210
topology<font color="#CCCCCC"> yang model</font><font color="#E5E5E5"> and I've gone down</font><font color="#CCCCCC"> a</font>

728
00:31:35,020 --> 00:31:39,670
couple<font color="#E5E5E5"> steps to where I'm querying for</font>

729
00:31:37,210 --> 00:31:42,010
<font color="#E5E5E5">that topology and what you can see at</font>

730
00:31:39,670 --> 00:31:44,050
the bottom<font color="#E5E5E5"> is the rest comp request</font>

731
00:31:42,010 --> 00:31:46,360
getting built out by the yang UI right

732
00:31:44,050 --> 00:31:48,399
there at the bottom<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see it's set</font>

733
00:31:46,360 --> 00:31:50,439
<font color="#E5E5E5">to get and then there's a URI there</font>

734
00:31:48,400 --> 00:31:52,090
<font color="#E5E5E5">which is similar</font><font color="#CCCCCC"> to the one I showed you</font>

735
00:31:50,440 --> 00:31:54,460
<font color="#CCCCCC">before</font><font color="#E5E5E5"> on the slide and built out</font>

736
00:31:52,090 --> 00:31:56,740
<font color="#E5E5E5">piece-by-piece the yang UI is building</font>

737
00:31:54,460 --> 00:31:59,320
<font color="#E5E5E5">this for me and then I could do send and</font>

738
00:31:56,740 --> 00:32:00,820
I could get<font color="#E5E5E5"> that configuration which if</font>

739
00:31:59,320 --> 00:32:02,889
I was to do that<font color="#E5E5E5"> right now wouldn't be</font>

740
00:32:00,820 --> 00:32:07,090
too interesting because<font color="#E5E5E5"> open daylights</font>

741
00:32:02,890 --> 00:32:08,770
not talking to anything<font color="#E5E5E5"> yet so in order</font>

742
00:32:07,090 --> 00:32:10,780
<font color="#E5E5E5">to make it a bit more</font><font color="#CCCCCC"> interesting what</font>

743
00:32:08,770 --> 00:32:13,900
you need to do is<font color="#E5E5E5"> attach opendaylight to</font>

744
00:32:10,780 --> 00:32:17,110
some type<font color="#E5E5E5"> of network elements</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm</font>

745
00:32:13,900 --> 00:32:19,390
going to<font color="#E5E5E5"> show a few</font><font color="#CCCCCC"> examples here</font><font color="#E5E5E5"> this</font>

746
00:32:17,110 --> 00:32:22,510
<font color="#E5E5E5">first one</font><font color="#CCCCCC"> you can do this how many of</font>

747
00:32:19,390 --> 00:32:24,880
you use mini net before<font color="#E5E5E5"> could use mini</font>

748
00:32:22,510 --> 00:32:27,430
net<font color="#CCCCCC"> to</font><font color="#E5E5E5"> create a sample network in my</font>

749
00:32:24,880 --> 00:32:30,760
case spin<font color="#E5E5E5"> up a few open flow switches</font>

750
00:32:27,430 --> 00:32:33,250
<font color="#CCCCCC">and then connect opendaylight to that</font>

751
00:32:30,760 --> 00:32:36,340
and this<font color="#E5E5E5"> is just a screenshot of what</font>

752
00:32:33,250 --> 00:32:37,870
that<font color="#E5E5E5"> would look like</font><font color="#CCCCCC"> I'm not going to</font>

753
00:32:36,340 --> 00:32:39,909
walk<font color="#CCCCCC"> through all</font><font color="#E5E5E5"> the details of</font><font color="#CCCCCC"> that</font>

754
00:32:37,870 --> 00:32:42,399
during<font color="#CCCCCC"> the presentation</font><font color="#E5E5E5"> cuz I want to</font>

755
00:32:39,910 --> 00:32:44,200
focus<font color="#E5E5E5"> on a different</font><font color="#CCCCCC"> use case but if you</font>

756
00:32:42,400 --> 00:32:46,300
look at the slides<font color="#E5E5E5"> there will be</font>

757
00:32:44,200 --> 00:32:48,910
<font color="#CCCCCC">step-by-step instructions how to do all</font>

758
00:32:46,300 --> 00:32:51,049
this in there<font color="#E5E5E5"> so you can go do that on</font>

759
00:32:48,910 --> 00:32:59,640
your<font color="#CCCCCC"> own</font><font color="#E5E5E5"> time</font>

760
00:32:51,049 --> 00:33:02,910
another example is using<font color="#E5E5E5"> BGP and Pisa to</font>

761
00:32:59,640 --> 00:33:04,650
connect to a Cisco IOS<font color="#E5E5E5"> XR router the</font>

762
00:33:02,910 --> 00:33:06,059
reason I want to<font color="#E5E5E5"> show this is</font><font color="#CCCCCC"> I talked</font>

763
00:33:04,650 --> 00:33:07,620
<font color="#CCCCCC">about open flow a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> at the</font>

764
00:33:06,059 --> 00:33:09,510
beginning<font color="#CCCCCC"> that's what was being used in</font>

765
00:33:07,620 --> 00:33:10,949
<font color="#E5E5E5">the mini in that example</font><font color="#CCCCCC"> I've been</font>

766
00:33:09,510 --> 00:33:12,240
talking about<font color="#E5E5E5"> net</font><font color="#CCCCCC"> cough</font><font color="#E5E5E5"> and rest cough</font>

767
00:33:10,950 --> 00:33:14,130
but there's a whole<font color="#E5E5E5"> bunch of other</font>

768
00:33:12,240 --> 00:33:16,590
protocols I mentioned that opendaylight

769
00:33:14,130 --> 00:33:19,770
supports as<font color="#CCCCCC"> well</font><font color="#E5E5E5"> so in this case I'm</font>

770
00:33:16,590 --> 00:33:22,439
<font color="#CCCCCC">actually using</font><font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> LS and P sub to talk</font>

771
00:33:19,770 --> 00:33:24,120
with a Cisco IOS<font color="#E5E5E5"> router and the links</font>

772
00:33:22,440 --> 00:33:28,679
<font color="#E5E5E5">are there if you want to go and run</font>

773
00:33:24,120 --> 00:33:30,389
through doing<font color="#CCCCCC"> that on</font><font color="#E5E5E5"> your own but what</font>

774
00:33:28,679 --> 00:33:33,030
I'm<font color="#E5E5E5"> going to spend the rest of my time</font>

775
00:33:30,390 --> 00:33:37,350
<font color="#E5E5E5">on is talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> another open source</font>

776
00:33:33,030 --> 00:33:39,780
<font color="#E5E5E5">project</font><font color="#CCCCCC"> VP</font><font color="#E5E5E5"> P stands for vector packet</font>

777
00:33:37,350 --> 00:33:43,770
processing<font color="#CCCCCC"> it's a very high</font><font color="#E5E5E5"> performance</font>

778
00:33:39,780 --> 00:33:48,960
software forwarder<font color="#E5E5E5"> and connecting that</font>

779
00:33:43,770 --> 00:33:52,530
<font color="#E5E5E5">into opendaylight so out of the box VPP</font>

780
00:33:48,960 --> 00:33:55,080
doesn't support<font color="#CCCCCC"> Netcom</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> s</font><font color="#E5E5E5"> cough but</font>

781
00:33:52,530 --> 00:33:57,230
fortunately as part of the FDA<font color="#CCCCCC"> o project</font>

782
00:33:55,080 --> 00:34:00,299
which the link is there<font color="#E5E5E5"> on the slides</font>

783
00:33:57,230 --> 00:34:02,940
<font color="#CCCCCC">there's a honeycomb</font><font color="#E5E5E5"> agent that you can</font>

784
00:34:00,299 --> 00:34:04,830
use in<font color="#CCCCCC"> combination with VPP</font><font color="#E5E5E5"> and as shown</font>

785
00:34:02,940 --> 00:34:06,630
in the picture<font color="#CCCCCC"> here what that</font><font color="#E5E5E5"> does is</font>

786
00:34:04,830 --> 00:34:10,918
<font color="#CCCCCC">that adds a rest coffin and</font><font color="#E5E5E5"> that cough</font>

787
00:34:06,630 --> 00:34:13,440
interface<font color="#CCCCCC"> onto VPP</font><font color="#E5E5E5"> and then there's a</font>

788
00:34:10,918 --> 00:34:18,299
very<font color="#CCCCCC"> low-level API that honeycomb uses</font>

789
00:34:13,440 --> 00:34:20,220
to to talk<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> EPP</font><font color="#E5E5E5"> so through this we</font>

790
00:34:18,300 --> 00:34:22,320
can<font color="#CCCCCC"> actually start</font><font color="#E5E5E5"> to use net comp as I</font>

791
00:34:20,219 --> 00:34:25,830
showed earlier when I<font color="#E5E5E5"> was looking at the</font>

792
00:34:22,320 --> 00:34:29,879
EPP<font color="#E5E5E5"> one and VPP</font><font color="#CCCCCC"> two to interact with the</font>

793
00:34:25,830 --> 00:34:32,609
VPP node so the<font color="#CCCCCC"> step-by-step</font>

794
00:34:29,879 --> 00:34:34,710
<font color="#E5E5E5">instructions are here</font><font color="#CCCCCC"> and again in the</font>

795
00:34:32,609 --> 00:34:38,279
slides for<font color="#E5E5E5"> each of these seven steps I</font>

796
00:34:34,710 --> 00:34:39,780
have a whole slide that shows that the

797
00:34:38,280 --> 00:34:42,899
details of this<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'll walk through</font>

798
00:34:39,780 --> 00:34:44,310
<font color="#E5E5E5">some of it the idea with my demo was I</font>

799
00:34:42,899 --> 00:34:46,259
was<font color="#E5E5E5"> going to show you</font><font color="#CCCCCC"> just on a laptop</font>

800
00:34:44,310 --> 00:34:47,940
how you can do all this<font color="#E5E5E5"> and so you could</font>

801
00:34:46,260 --> 00:34:50,190
be<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> this as well you can install</font>

802
00:34:47,940 --> 00:34:51,929
<font color="#CCCCCC">opendaylight</font><font color="#E5E5E5"> on your laptop</font><font color="#CCCCCC"> now if you</font>

803
00:34:50,190 --> 00:34:53,820
want to install VPP with<font color="#E5E5E5"> honeycomb on</font>

804
00:34:51,929 --> 00:34:57,149
<font color="#E5E5E5">your laptop you have to do a few things</font>

805
00:34:53,820 --> 00:34:59,460
<font color="#E5E5E5">first you need to create</font><font color="#CCCCCC"> a VM</font><font color="#E5E5E5"> and I show</font>

806
00:34:57,149 --> 00:35:02,400
here<font color="#CCCCCC"> how you can create</font><font color="#E5E5E5"> a Santos VM and</font>

807
00:34:59,460 --> 00:35:05,400
in my<font color="#CCCCCC"> case I'm using</font><font color="#E5E5E5"> many net</font>

808
00:35:02,400 --> 00:35:09,839
not sorry<font color="#E5E5E5"> VirtualBox</font><font color="#CCCCCC"> to load that</font><font color="#E5E5E5"> up and</font>

809
00:35:05,400 --> 00:35:12,539
on my<font color="#CCCCCC"> laptop now within</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> VM</font><font color="#E5E5E5"> I need</font>

810
00:35:09,839 --> 00:35:14,849
to install VPP<font color="#E5E5E5"> and I need to install</font>

811
00:35:12,539 --> 00:35:19,500
honeycomb so I have some<font color="#E5E5E5"> links there</font>

812
00:35:14,849 --> 00:35:23,250
<font color="#CCCCCC">that will show you</font><font color="#E5E5E5"> how to do that then</font>

813
00:35:19,500 --> 00:35:24,869
you<font color="#CCCCCC"> add to clear</font><font color="#E5E5E5"> IP tables otherwise all</font>

814
00:35:23,250 --> 00:35:27,420
net<font color="#CCCCCC"> conf</font><font color="#E5E5E5"> and rest cough traffic was</font>

815
00:35:24,869 --> 00:35:30,089
<font color="#E5E5E5">being blocked by default</font><font color="#CCCCCC"> so I did that</font>

816
00:35:27,420 --> 00:35:33,270
and<font color="#E5E5E5"> then I'm able to start VPP and start</font>

817
00:35:30,089 --> 00:35:36,119
honeycomb and once I do that<font color="#CCCCCC"> now this</font><font color="#E5E5E5"> RS</font>

818
00:35:33,270 --> 00:35:42,329
<font color="#E5E5E5">cough</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> net</font><font color="#CCCCCC"> conf</font><font color="#E5E5E5"> interface that you</font>

819
00:35:36,119 --> 00:35:43,380
see on the top<font color="#CCCCCC"> right is being exposed so</font>

820
00:35:42,329 --> 00:35:45,210
so far<font color="#CCCCCC"> so good</font>

821
00:35:43,380 --> 00:35:48,180
then what I<font color="#E5E5E5"> can do is I can connect</font>

822
00:35:45,210 --> 00:35:49,140
directly into VPP<font color="#E5E5E5"> and I just wanted to</font>

823
00:35:48,180 --> 00:35:51,029
show<font color="#E5E5E5"> you this</font>

824
00:35:49,140 --> 00:35:53,129
this isn't using net cough or s cough

825
00:35:51,029 --> 00:35:55,650
actually but just show you what the CLI

826
00:35:53,130 --> 00:35:58,309
of the<font color="#E5E5E5"> PP looks like and I can query it</font>

827
00:35:55,650 --> 00:36:00,539
<font color="#E5E5E5">and see what interfaces it has and you</font>

828
00:35:58,309 --> 00:36:02,910
<font color="#CCCCCC">can see it has the Gigabit Ethernet</font>

829
00:36:00,539 --> 00:36:04,950
interface and then local<font color="#CCCCCC"> zero Gigabit</font>

830
00:36:02,910 --> 00:36:07,799
Ethernet is an<font color="#E5E5E5"> interface that I created</font>

831
00:36:04,950 --> 00:36:10,828
and assigned to DB DK so it could be

832
00:36:07,799 --> 00:36:11,970
<font color="#E5E5E5">used in conjunction with VPP</font><font color="#CCCCCC"> so if</font>

833
00:36:10,829 --> 00:36:14,039
you're interested<font color="#CCCCCC"> in if you've heard</font>

834
00:36:11,970 --> 00:36:15,868
things about DB DK it's being used in

835
00:36:14,039 --> 00:36:17,730
combination here I'm not going to go

836
00:36:15,869 --> 00:36:22,829
into<font color="#E5E5E5"> the details of</font><font color="#CCCCCC"> that in the interest</font>

837
00:36:17,730 --> 00:36:24,839
of time<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and actually I have links</font>

838
00:36:22,829 --> 00:36:26,970
here<font color="#CCCCCC"> so you can go and add these</font><font color="#E5E5E5"> either</font>

839
00:36:24,839 --> 00:36:30,058
physical<font color="#E5E5E5"> or virtual interfaces to your</font>

840
00:36:26,970 --> 00:36:31,680
VPP node as well<font color="#CCCCCC"> and sorry you're gonna</font>

841
00:36:30,059 --> 00:36:33,059
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to despair with me since</font><font color="#E5E5E5"> I'm not</font>

842
00:36:31,680 --> 00:36:35,098
doing<font color="#CCCCCC"> the</font><font color="#E5E5E5"> demo you're gonna have to</font>

843
00:36:33,059 --> 00:36:36,750
imagine<font color="#E5E5E5"> what</font><font color="#CCCCCC"> this could look</font><font color="#E5E5E5"> like and I</font>

844
00:36:35,099 --> 00:36:40,589
have<font color="#E5E5E5"> some slides that kind of show how</font>

845
00:36:36,750 --> 00:36:42,690
it works<font color="#E5E5E5"> so the next thing you</font><font color="#CCCCCC"> can do is</font>

846
00:36:40,589 --> 00:36:48,299
you can<font color="#E5E5E5"> connect directly through</font>

847
00:36:42,690 --> 00:36:52,170
honeycomb<font color="#E5E5E5"> into VPP using using net</font><font color="#CCCCCC"> conf</font>

848
00:36:48,299 --> 00:36:55,079
and the SSH command is shown here<font color="#E5E5E5"> how</font>

849
00:36:52,170 --> 00:36:58,440
you would do<font color="#E5E5E5"> that and communicate</font><font color="#CCCCCC"> with</font>

850
00:36:55,079 --> 00:37:01,079
with VPP that way however<font color="#E5E5E5"> what I think</font>

851
00:36:58,440 --> 00:37:03,329
is more interesting<font color="#CCCCCC"> is using the higher</font>

852
00:37:01,079 --> 00:37:06,240
level<font color="#CCCCCC"> some of the tools that</font><font color="#E5E5E5"> are</font>

853
00:37:03,329 --> 00:37:08,279
<font color="#E5E5E5">provided around rest cough and actually</font>

854
00:37:06,240 --> 00:37:12,029
using<font color="#E5E5E5"> the either through</font><font color="#CCCCCC"> opendaylight</font>

855
00:37:08,279 --> 00:37:14,050
<font color="#E5E5E5">interacting with VPP or using a postman</font>

856
00:37:12,029 --> 00:37:18,520
how many of you have heard<font color="#E5E5E5"> of postman</font>

857
00:37:14,050 --> 00:37:20,530
<font color="#E5E5E5">okay great so good thing here you'll see</font>

858
00:37:18,520 --> 00:37:23,080
listed<font color="#E5E5E5"> here I have a couple I</font><font color="#CCCCCC"> have a</font>

859
00:37:20,530 --> 00:37:25,990
<font color="#E5E5E5">postman collection that you can</font><font color="#CCCCCC"> download</font>

860
00:37:23,080 --> 00:37:29,440
and what<font color="#E5E5E5"> that'll do</font><font color="#CCCCCC"> is a lot it's built</font>

861
00:37:25,990 --> 00:37:31,629
to allow you<font color="#E5E5E5"> to interact with VPP from</font>

862
00:37:29,440 --> 00:37:35,350
both<font color="#CCCCCC"> opendaylight as</font><font color="#E5E5E5"> well as from</font>

863
00:37:31,630 --> 00:37:36,730
honeycomb directly and again I was<font color="#CCCCCC"> going</font>

864
00:37:35,350 --> 00:37:38,319
<font color="#E5E5E5">to demonstrate that but</font><font color="#CCCCCC"> instead we'll</font>

865
00:37:36,730 --> 00:37:41,770
walk through<font color="#E5E5E5"> the slides and kind of see</font>

866
00:37:38,320 --> 00:37:44,110
<font color="#E5E5E5">how</font><font color="#CCCCCC"> that would</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> the idea being that so</font>

867
00:37:41,770 --> 00:37:46,780
far my<font color="#E5E5E5"> opendaylight instance has all the</font>

868
00:37:44,110 --> 00:37:47,950
capabilities<font color="#E5E5E5"> installed on it to do net</font>

869
00:37:46,780 --> 00:37:49,960
<font color="#CCCCCC">comp Andres</font><font color="#E5E5E5"> comp but there's no</font>

870
00:37:47,950 --> 00:37:51,970
<font color="#CCCCCC">underlying network so the first thing I</font>

871
00:37:49,960 --> 00:37:54,700
want to<font color="#CCCCCC"> do is I want to go and add VPP</font>

872
00:37:51,970 --> 00:37:57,069
<font color="#E5E5E5">into the network topology</font><font color="#CCCCCC"> and I would</font>

873
00:37:54,700 --> 00:38:00,370
use<font color="#E5E5E5"> this is illustrating how to use</font>

874
00:37:57,070 --> 00:38:02,440
postman to do that<font color="#E5E5E5"> so you can see the</font>

875
00:38:00,370 --> 00:38:04,270
URI being built out<font color="#E5E5E5"> here</font><font color="#CCCCCC"> I have a put</font>

876
00:38:02,440 --> 00:38:06,940
request<font color="#E5E5E5"> I</font><font color="#CCCCCC"> have the IP address of</font>

877
00:38:04,270 --> 00:38:09,580
<font color="#E5E5E5">opendaylight this is exactly that same</font>

878
00:38:06,940 --> 00:38:10,960
URI<font color="#E5E5E5"> that I showed built out on the</font>

879
00:38:09,580 --> 00:38:13,930
<font color="#E5E5E5">previous slide earlier in my</font>

880
00:38:10,960 --> 00:38:16,690
presentation and then I can't click on

881
00:38:13,930 --> 00:38:19,089
<font color="#E5E5E5">the body here but just</font><font color="#CCCCCC"> imagine if I did</font>

882
00:38:16,690 --> 00:38:22,030
you would see the<font color="#E5E5E5"> XML or the JSON</font>

883
00:38:19,090 --> 00:38:26,230
representation of the data<font color="#CCCCCC"> associated</font>

884
00:38:22,030 --> 00:38:29,470
with VPP<font color="#E5E5E5"> as defined by the yang model so</font>

885
00:38:26,230 --> 00:38:32,140
I click send<font color="#E5E5E5"> and without I get any 201</font>

886
00:38:29,470 --> 00:38:35,560
response which tells me<font color="#E5E5E5"> you know yeah it</font>

887
00:38:32,140 --> 00:38:39,549
<font color="#E5E5E5">got connected</font><font color="#CCCCCC"> so now VPP is connected</font>

888
00:38:35,560 --> 00:38:43,240
into<font color="#E5E5E5"> my opendaylight instance I could</font>

889
00:38:39,550 --> 00:38:47,980
<font color="#CCCCCC">then go and do a get request to</font><font color="#E5E5E5"> get the</font>

890
00:38:43,240 --> 00:38:49,990
<font color="#E5E5E5">Netcom topology and I can't scroll down</font>

891
00:38:47,980 --> 00:38:51,520
in the slide here<font color="#CCCCCC"> but</font><font color="#E5E5E5"> if I did what you</font>

892
00:38:49,990 --> 00:38:53,890
<font color="#CCCCCC">would see in the</font><font color="#E5E5E5"> response that comes</font>

893
00:38:51,520 --> 00:38:57,610
back<font color="#E5E5E5"> is a list of all the yang models</font>

894
00:38:53,890 --> 00:39:00,040
that are supported by VPP<font color="#E5E5E5"> and then the</font>

895
00:38:57,610 --> 00:39:02,020
connection<font color="#CCCCCC"> details of EPP</font><font color="#E5E5E5"> like what its</font>

896
00:39:00,040 --> 00:39:09,820
IP<font color="#E5E5E5"> address and</font><font color="#CCCCCC"> port are that it's</font>

897
00:39:02,020 --> 00:39:11,860
listening<font color="#E5E5E5"> on</font><font color="#CCCCCC"> 4 4 4 s</font><font color="#E5E5E5"> cough now this is</font>

898
00:39:09,820 --> 00:39:13,600
taking you back<font color="#E5E5E5"> to the deluxe interface</font>

899
00:39:11,860 --> 00:39:15,190
of<font color="#CCCCCC"> opendaylight</font><font color="#E5E5E5"> because I can basically</font>

900
00:39:13,600 --> 00:39:17,819
do the exact<font color="#CCCCCC"> same thing through</font>

901
00:39:15,190 --> 00:39:20,140
<font color="#CCCCCC">opendaylight</font><font color="#E5E5E5"> which is pretty cool</font>

902
00:39:17,820 --> 00:39:21,700
whereas<font color="#E5E5E5"> before I drill</font><font color="#CCCCCC"> down into</font>

903
00:39:20,140 --> 00:39:24,490
<font color="#CCCCCC">opendaylight</font><font color="#E5E5E5"> and I said there was no</font>

904
00:39:21,700 --> 00:39:28,359
topology<font color="#E5E5E5"> there yet now I've added VPP</font>

905
00:39:24,490 --> 00:39:31,359
and so what you<font color="#E5E5E5"> can see is again just by</font>

906
00:39:28,360 --> 00:39:33,490
<font color="#CCCCCC">clicking on the elements in the yang</font>

907
00:39:31,360 --> 00:39:36,640
model and drilling<font color="#E5E5E5"> down</font><font color="#CCCCCC"> I can get</font>

908
00:39:33,490 --> 00:39:38,890
<font color="#E5E5E5">information about VPP you can see the</font>

909
00:39:36,640 --> 00:39:40,660
get hopefully<font color="#CCCCCC"> it's the</font><font color="#E5E5E5"> slides are big</font>

910
00:39:38,890 --> 00:39:43,420
enough<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can read it if not grab</font>

911
00:39:40,660 --> 00:39:46,779
a copy I'm doing a get the URI that<font color="#CCCCCC"> I</font>

912
00:39:43,420 --> 00:39:49,330
built out is there and I<font color="#E5E5E5"> can get the</font>

913
00:39:46,780 --> 00:39:52,960
<font color="#E5E5E5">information of</font><font color="#CCCCCC"> EBP this way too directly</font>

914
00:39:49,330 --> 00:39:54,580
<font color="#E5E5E5">through the yang UI of deluxe</font><font color="#CCCCCC"> and at the</font>

915
00:39:52,960 --> 00:40:02,950
<font color="#E5E5E5">very bottom you can see that information</font>

916
00:39:54,580 --> 00:40:04,569
<font color="#E5E5E5">being returned</font><font color="#CCCCCC"> ok so I hope you're able</font>

917
00:40:02,950 --> 00:40:06,160
to follow<font color="#E5E5E5"> along</font><font color="#CCCCCC"> with that and</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> your</font>

918
00:40:04,570 --> 00:40:08,440
imagination<font color="#CCCCCC"> a little bit to what they're</font>

919
00:40:06,160 --> 00:40:11,618
the demo would have looked<font color="#E5E5E5"> like and I'm</font>

920
00:40:08,440 --> 00:40:12,910
happy<font color="#E5E5E5"> to show you after the talk or or</font>

921
00:40:11,619 --> 00:40:16,030
walk<font color="#CCCCCC"> through it</font><font color="#E5E5E5"> I'll be here the</font><font color="#CCCCCC"> rest of</font>

922
00:40:12,910 --> 00:40:19,960
the day<font color="#E5E5E5"> but for now let me</font><font color="#CCCCCC"> just leave</font>

923
00:40:16,030 --> 00:40:22,240
<font color="#E5E5E5">you with some</font><font color="#CCCCCC"> conclusions so</font><font color="#E5E5E5"> hopefully</font>

924
00:40:19,960 --> 00:40:25,300
with this talk I've convinced you that

925
00:40:22,240 --> 00:40:29,740
there's<font color="#E5E5E5"> more to Sdn than just open flow</font>

926
00:40:25,300 --> 00:40:32,230
<font color="#E5E5E5">and the real value of Sdn is in network</font>

927
00:40:29,740 --> 00:40:34,089
<font color="#CCCCCC">program ability</font><font color="#E5E5E5"> and just really</font>

928
00:40:32,230 --> 00:40:36,490
encourage you to to<font color="#CCCCCC"> look</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> that</font>

929
00:40:34,090 --> 00:40:38,470
<font color="#E5E5E5">direction and see how you can</font><font color="#CCCCCC"> do that to</font>

930
00:40:36,490 --> 00:40:41,560
reduce your your<font color="#E5E5E5"> management cost your</font>

931
00:40:38,470 --> 00:40:44,279
<font color="#E5E5E5">management headaches and and hopefully</font>

932
00:40:41,560 --> 00:40:47,680
bring<font color="#CCCCCC"> you some increased speed</font><font color="#E5E5E5"> in</font>

933
00:40:44,280 --> 00:40:51,369
imagine your network and then

934
00:40:47,680 --> 00:40:52,680
<font color="#CCCCCC">opendaylight is it's open source it's a</font>

935
00:40:51,369 --> 00:40:55,240
great platform

936
00:40:52,680 --> 00:40:59,109
<font color="#CCCCCC">there's the functionality you need on it</font>

937
00:40:55,240 --> 00:41:00,850
you can<font color="#CCCCCC"> enable to</font><font color="#E5E5E5"> to act as a great</font>

938
00:40:59,109 --> 00:41:02,920
platform for<font color="#CCCCCC"> building network aware</font>

939
00:41:00,850 --> 00:41:08,319
applications and for just managing

940
00:41:02,920 --> 00:41:10,960
<font color="#CCCCCC">network infrastructure in general</font><font color="#E5E5E5"> ok</font>

941
00:41:08,320 --> 00:41:14,070
well<font color="#E5E5E5"> that's all I have</font><font color="#CCCCCC"> have a couple</font>

942
00:41:10,960 --> 00:41:14,070
minutes<font color="#CCCCCC"> for questions I think</font>

943
00:41:20,850 --> 00:41:27,549
hi<font color="#CCCCCC"> I'm bill Norton I'm curious is</font><font color="#E5E5E5"> there</font>

944
00:41:25,060 --> 00:41:29,529
an undo<font color="#CCCCCC"> button</font><font color="#E5E5E5"> kind of mechanism so if</font>

945
00:41:27,550 --> 00:41:32,110
you want to<font color="#CCCCCC"> do a</font><font color="#E5E5E5"> system-wide change and</font>

946
00:41:29,530 --> 00:41:35,230
<font color="#E5E5E5">only half of them are</font><font color="#CCCCCC"> successful you can</font>

947
00:41:32,110 --> 00:41:37,180
back off<font color="#E5E5E5"> yeah within that</font><font color="#CCCCCC"> comp you have</font>

948
00:41:35,230 --> 00:41:39,250
that concept of transactions<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can</font>

949
00:41:37,180 --> 00:41:42,100
also have the<font color="#E5E5E5"> concept of validation so</font>

950
00:41:39,250 --> 00:41:43,990
you could have like<font color="#CCCCCC"> a candidate config</font>

951
00:41:42,100 --> 00:41:47,589
you can<font color="#E5E5E5"> validate it</font><font color="#CCCCCC"> and if it you know</font>

952
00:41:43,990 --> 00:41:49,629
<font color="#E5E5E5">make sure</font><font color="#CCCCCC"> it works and apply it and if</font>

953
00:41:47,590 --> 00:41:50,950
it doesn't roll it back<font color="#E5E5E5"> that's kind of</font>

954
00:41:49,630 --> 00:41:54,220
<font color="#E5E5E5">the idea</font><font color="#CCCCCC"> that's something that was</font>

955
00:41:50,950 --> 00:41:56,859
<font color="#E5E5E5">missing before but through net comp you</font>

956
00:41:54,220 --> 00:41:59,680
get<font color="#E5E5E5"> that with something like rest comp</font>

957
00:41:56,860 --> 00:42:02,050
you don't it's lighter weight which is

958
00:41:59,680 --> 00:42:07,240
<font color="#E5E5E5">great but it's just individual</font><font color="#CCCCCC"> requests</font>

959
00:42:02,050 --> 00:42:08,770
at that point so yeah<font color="#E5E5E5"> it's kind of one</font>

960
00:42:07,240 --> 00:42:11,250
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> trade-offs of net comp versus</font>

961
00:42:08,770 --> 00:42:11,250
response

962
00:42:16,040 --> 00:42:21,529
yes<font color="#CCCCCC"> hey chef Justin's</font><font color="#E5E5E5"> here on</font><font color="#CCCCCC"> North</font>

963
00:42:19,640 --> 00:42:25,100
<font color="#E5E5E5">networks</font><font color="#CCCCCC"> there's been two years since I</font>

964
00:42:21,530 --> 00:42:29,150
touched<font color="#E5E5E5"> upon the light and</font><font color="#CCCCCC"> he plans to</font>

965
00:42:25,100 --> 00:42:32,080
implement<font color="#E5E5E5"> your</font><font color="#CCCCCC"> PC southbound you know I</font>

966
00:42:29,150 --> 00:42:36,440
don't know the question any plans to

967
00:42:32,080 --> 00:42:38,509
integrate<font color="#CCCCCC"> GRF PC southbound</font><font color="#E5E5E5"> yeah I mean</font>

968
00:42:36,440 --> 00:42:40,450
I'm not<font color="#CCCCCC"> sure it seems like a good</font><font color="#E5E5E5"> idea</font>

969
00:42:38,510 --> 00:42:43,220
<font color="#CCCCCC">to me I don't know</font><font color="#E5E5E5"> why it wouldn't be</font>

970
00:42:40,450 --> 00:42:44,750
<font color="#E5E5E5">that's one of the nice</font><font color="#CCCCCC"> things about gang</font>

971
00:42:43,220 --> 00:42:46,189
is<font color="#CCCCCC"> that it can serve as</font><font color="#E5E5E5"> the data</font>

972
00:42:44,750 --> 00:42:48,020
modeling<font color="#E5E5E5"> language for a variety</font><font color="#CCCCCC"> of</font>

973
00:42:46,190 --> 00:42:51,020
<font color="#CCCCCC">protocols I've talked about that coffin</font>

974
00:42:48,020 --> 00:42:53,840
ruskov but you're right<font color="#CCCCCC"> G RPC is another</font>

975
00:42:51,020 --> 00:42:56,060
protocol that makes use of<font color="#E5E5E5"> Yang and I</font>

976
00:42:53,840 --> 00:42:58,130
don't<font color="#E5E5E5"> see any reason why</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> add it to</font>

977
00:42:56,060 --> 00:43:02,240
open daylight<font color="#E5E5E5"> I'm not aware of a project</font>

978
00:42:58,130 --> 00:43:03,500
that's underway to do that<font color="#E5E5E5"> but that may</font>

979
00:43:02,240 --> 00:43:05,419
<font color="#CCCCCC">just be that</font><font color="#E5E5E5"> I'm not aware</font><font color="#CCCCCC"> of it I</font>

980
00:43:03,500 --> 00:43:07,790
wouldn't say that it doesn't<font color="#CCCCCC"> exist</font><font color="#E5E5E5"> or</font>

981
00:43:05,420 --> 00:43:09,070
<font color="#CCCCCC">that's not my words and</font><font color="#E5E5E5"> it seems like it</font>

982
00:43:07,790 --> 00:43:11,060
<font color="#E5E5E5">would make sense</font>

983
00:43:09,070 --> 00:43:13,040
second question comparison between

984
00:43:11,060 --> 00:43:16,009
<font color="#CCCCCC">different</font><font color="#E5E5E5"> data stores comparison of</font>

985
00:43:13,040 --> 00:43:18,230
intended<font color="#E5E5E5"> state operational to apply is</font>

986
00:43:16,010 --> 00:43:21,170
there any work going<font color="#E5E5E5"> on to provide kind</font>

987
00:43:18,230 --> 00:43:25,460
<font color="#E5E5E5">of easy to implement comparison between</font>

988
00:43:21,170 --> 00:43:29,410
this comparison<font color="#E5E5E5"> like a diff between two</font>

989
00:43:25,460 --> 00:43:29,410
<font color="#CCCCCC">different data stores</font><font color="#E5E5E5"> yeah</font>

990
00:43:30,250 --> 00:43:35,290
not specifically within open daylight

991
00:43:35,320 --> 00:43:42,230
<font color="#E5E5E5">I'm not I'm not sure</font><font color="#CCCCCC"> not a tool that</font><font color="#E5E5E5"> I'm</font>

992
00:43:39,410 --> 00:43:44,120
aware<font color="#CCCCCC"> of again I mean sounds</font><font color="#E5E5E5"> handy but</font>

993
00:43:42,230 --> 00:43:45,500
yeah I think<font color="#E5E5E5"> one of the great things</font>

994
00:43:44,120 --> 00:43:47,060
about open daylight is because it is

995
00:43:45,500 --> 00:43:49,610
<font color="#E5E5E5">open source</font><font color="#CCCCCC"> you know if there's</font>

996
00:43:47,060 --> 00:43:56,450
<font color="#E5E5E5">something that's missing</font><font color="#CCCCCC"> the community's</font>

997
00:43:49,610 --> 00:43:58,310
there to take more contributions<font color="#E5E5E5"> so and</font>

998
00:43:56,450 --> 00:43:59,960
if someone here is more<font color="#CCCCCC"> familiar with</font>

999
00:43:58,310 --> 00:44:01,610
with<font color="#CCCCCC"> Yang and</font><font color="#E5E5E5"> doing yang model</font>

1000
00:43:59,960 --> 00:44:05,740
comparisons and those are the<font color="#E5E5E5"> difficult</font>

1001
00:44:01,610 --> 00:44:05,740
<font color="#E5E5E5">Ritu run up and tell</font><font color="#CCCCCC"> us about</font><font color="#E5E5E5"> it</font>

1002
00:44:07,810 --> 00:44:15,790
any other questions<font color="#CCCCCC"> okay well thanks as</font>

1003
00:44:14,200 --> 00:44:18,910
I mentioned<font color="#E5E5E5"> I'll be around the</font><font color="#CCCCCC"> rest of</font>

1004
00:44:15,790 --> 00:44:20,230
<font color="#E5E5E5">the</font><font color="#CCCCCC"> day happy to talk</font><font color="#E5E5E5"> with anyone if</font><font color="#CCCCCC"> you</font>

1005
00:44:18,910 --> 00:44:22,960
<font color="#E5E5E5">have more</font><font color="#CCCCCC"> questions or want</font><font color="#E5E5E5"> to go</font>

1006
00:44:20,230 --> 00:44:24,000
through the<font color="#CCCCCC"> the demo or anything</font><font color="#E5E5E5"> thanks</font>

1007
00:44:22,960 --> 00:44:27,690
a<font color="#E5E5E5"> lot</font>

1008
00:44:24,000 --> 00:44:27,690
<font color="#CCCCCC">Charlie</font><font color="#E5E5E5"> great job</font>

