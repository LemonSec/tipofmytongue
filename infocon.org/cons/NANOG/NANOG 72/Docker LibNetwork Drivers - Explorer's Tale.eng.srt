1
00:00:09,099 --> 00:00:18,670
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> soon right hi</font><font color="#E5E5E5"> everyone</font><font color="#CCCCCC"> today's</font>

2
00:00:14,780 --> 00:00:18,669
talk<font color="#CCCCCC"> I need to learn how to use this</font>

3
00:00:19,500 --> 00:00:26,939
oh this is<font color="#CCCCCC"> oh we're I'm here</font><font color="#E5E5E5"> so a couple</font>

4
00:00:24,840 --> 00:00:29,399
<font color="#CCCCCC">years ago I started learning a new</font>

5
00:00:26,939 --> 00:00:32,790
programming language<font color="#E5E5E5"> that was go</font><font color="#CCCCCC"> I</font>

6
00:00:29,399 --> 00:00:34,769
didn't<font color="#E5E5E5"> know what to do</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I went and I</font>

7
00:00:32,790 --> 00:00:37,739
downloaded<font color="#E5E5E5"> some PDF from a line and</font>

8
00:00:34,769 --> 00:00:40,290
started<font color="#E5E5E5"> reading it and realized that a</font>

9
00:00:37,739 --> 00:00:44,159
lot<font color="#CCCCCC"> of people use go to code some</font>

10
00:00:40,290 --> 00:00:47,809
interesting stuff<font color="#E5E5E5"> back then I was using</font>

11
00:00:44,159 --> 00:00:51,329
<font color="#E5E5E5">a double yes and I came about to know</font>

12
00:00:47,809 --> 00:00:54,510
containers docker<font color="#E5E5E5"> docker was my first</font>

13
00:00:51,329 --> 00:00:57,239
container<font color="#E5E5E5"> run time and</font><font color="#CCCCCC"> through my</font>

14
00:00:54,510 --> 00:00:59,729
exploration<font color="#CCCCCC"> I figured out that most of</font>

15
00:00:57,239 --> 00:01:02,119
the code is written go<font color="#CCCCCC"> so I need to</font>

16
00:00:59,729 --> 00:01:05,250
understand it really<font color="#E5E5E5"> well so I read</font><font color="#CCCCCC"> it</font>

17
00:01:02,119 --> 00:01:07,860
didn't understand it<font color="#CCCCCC"> rented</font><font color="#E5E5E5"> twice</font><font color="#CCCCCC"> ready</font>

18
00:01:05,250 --> 00:01:10,680
three times four times<font color="#E5E5E5"> by the time I</font>

19
00:01:07,860 --> 00:01:12,390
<font color="#E5E5E5">read it many times I was able to put</font>

20
00:01:10,680 --> 00:01:16,170
something together<font color="#E5E5E5"> and then I finally</font>

21
00:01:12,390 --> 00:01:19,500
<font color="#E5E5E5">started</font><font color="#CCCCCC"> to write code</font><font color="#E5E5E5"> and today's talk</font>

22
00:01:16,170 --> 00:01:21,869
is about container networking docker

23
00:01:19,500 --> 00:01:26,730
<font color="#E5E5E5">being one</font><font color="#CCCCCC"> of container runtimes but</font>

24
00:01:21,869 --> 00:01:30,150
there are other runtimes<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> lxc</font>

25
00:01:26,730 --> 00:01:33,380
that's the container<font color="#CCCCCC"> that runs the guest</font>

26
00:01:30,150 --> 00:01:36,840
shell<font color="#E5E5E5"> within let's say Cisco nx-os</font>

27
00:01:33,380 --> 00:01:42,060
there are other<font color="#CCCCCC"> continued runtimes</font><font color="#E5E5E5"> and</font>

28
00:01:36,840 --> 00:01:45,420
for<font color="#E5E5E5"> that</font><font color="#CCCCCC"> for so each</font><font color="#E5E5E5"> run time has to</font>

29
00:01:42,060 --> 00:01:51,120
plug in to a networking stack<font color="#E5E5E5"> and I will</font>

30
00:01:45,420 --> 00:01:52,920
put I'm sorry<font color="#E5E5E5"> and what we'll do today</font>

31
00:01:51,120 --> 00:01:54,810
you will<font color="#E5E5E5"> brainstorm about those</font>

32
00:01:52,920 --> 00:01:56,460
different concepts<font color="#E5E5E5"> of container</font>

33
00:01:54,810 --> 00:01:59,970
networking and specifically notes

34
00:01:56,460 --> 00:02:02,089
because container<font color="#E5E5E5"> darker all of those</font>

35
00:01:59,970 --> 00:02:06,380
things are associated<font color="#E5E5E5"> with specific</font>

36
00:02:02,090 --> 00:02:09,420
technology which is Linux Linux is cool

37
00:02:06,380 --> 00:02:12,359
it has some new features<font color="#CCCCCC"> that</font><font color="#E5E5E5"> were added</font>

38
00:02:09,419 --> 00:02:15,559
<font color="#E5E5E5">not not so new but newly added features</font>

39
00:02:12,360 --> 00:02:20,280
that are called

40
00:02:15,560 --> 00:02:22,709
namespaces<font color="#E5E5E5"> and there are seven or seven</font>

41
00:02:20,280 --> 00:02:25,260
or six namespaces and<font color="#E5E5E5"> one of them is a</font>

42
00:02:22,709 --> 00:02:28,260
namespace<font color="#E5E5E5"> called networking names</font>

43
00:02:25,260 --> 00:02:30,989
namespace so if you<font color="#E5E5E5"> think</font><font color="#CCCCCC"> about that</font>

44
00:02:28,260 --> 00:02:33,120
<font color="#CCCCCC">each application is</font><font color="#E5E5E5"> a process a process</font>

45
00:02:30,990 --> 00:02:35,910
has

46
00:02:33,120 --> 00:02:38,690
a reference<font color="#E5E5E5"> in something called proc</font>

47
00:02:35,910 --> 00:02:41,640
file system on the operating systems

48
00:02:38,690 --> 00:02:46,100
<font color="#E5E5E5">when you create a container you create a</font>

49
00:02:41,640 --> 00:02:48,750
process<font color="#CCCCCC"> and that process by</font><font color="#E5E5E5"> virtue of</font>

50
00:02:46,100 --> 00:02:50,760
namespaces will get its own process<font color="#E5E5E5"> ID</font>

51
00:02:48,750 --> 00:02:52,770
that uniquely identify it<font color="#E5E5E5"> and when</font>

52
00:02:50,760 --> 00:02:56,190
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> inside a container you</font><font color="#CCCCCC"> would be</font>

53
00:02:52,770 --> 00:02:58,410
able<font color="#E5E5E5"> to you will be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to see your</font>

54
00:02:56,190 --> 00:03:02,190
process as being number one<font color="#E5E5E5"> although</font>

55
00:02:58,410 --> 00:03:04,560
operating systems<font color="#E5E5E5"> runs the process ID</font>

56
00:03:02,190 --> 00:03:09,359
number one<font color="#E5E5E5"> so how is it</font><font color="#CCCCCC"> happening it's</font>

57
00:03:04,560 --> 00:03:12,120
<font color="#CCCCCC">happening</font><font color="#E5E5E5"> by by a mechanism or inside</font>

58
00:03:09,360 --> 00:03:14,700
the<font color="#E5E5E5"> kernel that when your process</font><font color="#CCCCCC"> when</font>

59
00:03:12,120 --> 00:03:16,890
<font color="#E5E5E5">you create a new process it basically</font>

60
00:03:14,700 --> 00:03:19,920
allocates those namespaces<font color="#CCCCCC"> and one of</font>

61
00:03:16,890 --> 00:03:28,230
those namespaces<font color="#E5E5E5"> is called network</font>

62
00:03:19,920 --> 00:03:31,109
namespace NS so what is driver in<font color="#E5E5E5"> theory</font>

63
00:03:28,230 --> 00:03:36,060
a<font color="#E5E5E5"> driver is something that defined in</font>

64
00:03:31,110 --> 00:03:38,130
this<font color="#E5E5E5"> VIP dia</font><font color="#CCCCCC"> Vicki PE article but as at</font>

65
00:03:36,060 --> 00:03:40,620
<font color="#CCCCCC">applica</font><font color="#E5E5E5"> as it's applicable to container</font>

66
00:03:38,130 --> 00:03:42,329
networking and docker<font color="#E5E5E5"> a driver is</font>

67
00:03:40,620 --> 00:03:45,420
something that enables<font color="#E5E5E5"> you to interact</font>

68
00:03:42,330 --> 00:03:49,769
<font color="#CCCCCC">with with a</font><font color="#E5E5E5"> virtual device because if</font>

69
00:03:45,420 --> 00:03:52,048
you if a runtime<font color="#E5E5E5"> is a process and you</font>

70
00:03:49,769 --> 00:03:53,760
want to interact with<font color="#E5E5E5"> other processes on</font>

71
00:03:52,049 --> 00:03:56,160
the system<font color="#CCCCCC"> you have to have</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> kind of</font>

72
00:03:53,760 --> 00:04:00,510
a<font color="#E5E5E5"> device</font><font color="#CCCCCC"> that helps you do that</font><font color="#E5E5E5"> so for</font>

73
00:03:56,160 --> 00:04:02,340
<font color="#E5E5E5">example one process streams packets to</font>

74
00:04:00,510 --> 00:04:05,730
another process how do they do that

75
00:04:02,340 --> 00:04:08,820
well<font color="#E5E5E5"> a very basic way</font><font color="#CCCCCC"> to do that is to</font>

76
00:04:05,730 --> 00:04:10,950
create a pipe and pipe usually has two

77
00:04:08,820 --> 00:04:13,590
<font color="#E5E5E5">ends</font><font color="#CCCCCC"> so one process will stream</font><font color="#E5E5E5"> into the</font>

78
00:04:10,950 --> 00:04:15,298
<font color="#E5E5E5">pipe and another process will capture or</font>

79
00:04:13,590 --> 00:04:18,500
receive packets<font color="#E5E5E5"> on the other end of the</font>

80
00:04:15,299 --> 00:04:23,130
pipe<font color="#E5E5E5"> so doctor has pretty cool</font>

81
00:04:18,500 --> 00:04:25,410
<font color="#E5E5E5">implementation</font><font color="#CCCCCC"> a mechanism to create two</font>

82
00:04:23,130 --> 00:04:31,050
to make processes to interact on<font color="#E5E5E5"> a</font>

83
00:04:25,410 --> 00:04:34,580
network<font color="#E5E5E5"> layer so what we'll speak about</font>

84
00:04:31,050 --> 00:04:37,410
<font color="#E5E5E5">is something called</font><font color="#CCCCCC"> CMM and CNI so</font>

85
00:04:34,580 --> 00:04:39,750
container networking model and container

86
00:04:37,410 --> 00:04:42,000
networking interface<font color="#E5E5E5"> in container</font>

87
00:04:39,750 --> 00:04:44,099
networking in general<font color="#CCCCCC"> there are two</font>

88
00:04:42,000 --> 00:04:45,460
models<font color="#E5E5E5"> those are the names of the models</font>

89
00:04:44,099 --> 00:04:47,349
contain<font color="#E5E5E5"> your networking model</font>

90
00:04:45,460 --> 00:04:51,430
<font color="#E5E5E5">contain your networking</font><font color="#CCCCCC"> interface so</font>

91
00:04:47,350 --> 00:04:53,500
<font color="#CCCCCC">how's it</font><font color="#E5E5E5"> happening because</font><font color="#CCCCCC"> dr. was first</font>

92
00:04:51,430 --> 00:04:55,330
<font color="#E5E5E5">so they picked up</font><font color="#CCCCCC"> continued networking</font>

93
00:04:53,500 --> 00:04:58,210
model<font color="#E5E5E5"> but the reality is there are two</font>

94
00:04:55,330 --> 00:05:01,448
models<font color="#E5E5E5"> one that spearheaded but</font>

95
00:04:58,210 --> 00:05:03,520
something called cloud native<font color="#E5E5E5"> cloud</font>

96
00:05:01,449 --> 00:05:06,599
native<font color="#E5E5E5"> compute foundation and another</font>

97
00:05:03,520 --> 00:05:10,680
one is spearheaded by doctor themselves

98
00:05:06,599 --> 00:05:14,259
so they have<font color="#CCCCCC"> this repository on github</font>

99
00:05:10,680 --> 00:05:17,979
<font color="#E5E5E5">it's a Lib network so Lib</font><font color="#CCCCCC"> network is the</font>

100
00:05:14,259 --> 00:05:20,289
driver<font color="#E5E5E5"> and what you see there</font>

101
00:05:17,979 --> 00:05:23,440
those are directories<font color="#E5E5E5"> for each</font>

102
00:05:20,289 --> 00:05:27,820
individual drivers within<font color="#E5E5E5"> this Lib</font>

103
00:05:23,440 --> 00:05:30,190
network ecosystem<font color="#CCCCCC"> one of the drivers</font>

104
00:05:27,820 --> 00:05:33,909
<font color="#E5E5E5">that's mostly important to this audience</font>

105
00:05:30,190 --> 00:05:36,580
<font color="#E5E5E5">is the one called remote because remote</font>

106
00:05:33,910 --> 00:05:41,409
allows<font color="#CCCCCC"> you to extend</font><font color="#E5E5E5"> the functionality</font>

107
00:05:36,580 --> 00:05:44,500
of<font color="#E5E5E5"> docker and allows you to</font><font color="#CCCCCC"> configure</font><font color="#E5E5E5"> to</font>

108
00:05:41,409 --> 00:05:47,380
extend Dockers<font color="#E5E5E5"> Lib network functionality</font>

109
00:05:44,500 --> 00:05:49,990
to other things<font color="#CCCCCC"> that may not be</font><font color="#E5E5E5"> in the</font>

110
00:05:47,380 --> 00:05:52,870
<font color="#CCCCCC">correct system</font><font color="#E5E5E5"> a simple example would be</font>

111
00:05:49,990 --> 00:05:55,030
open V switch open<font color="#CCCCCC"> this which is a</font>

112
00:05:52,870 --> 00:05:58,090
virtual switch the transana on on

113
00:05:55,030 --> 00:06:01,479
systems<font color="#E5E5E5"> and allows you to communicate to</font>

114
00:05:58,090 --> 00:06:05,530
upstream controller<font color="#E5E5E5"> over open flow so</font>

115
00:06:01,479 --> 00:06:08,889
remote driver allows you to allows

116
00:06:05,530 --> 00:06:11,679
<font color="#E5E5E5">docker rather to call an external API</font>

117
00:06:08,889 --> 00:06:15,460
and if that API understands a protocol<font color="#CCCCCC"> a</font>

118
00:06:11,680 --> 00:06:17,259
model of a model of interaction<font color="#CCCCCC"> it would</font>

119
00:06:15,460 --> 00:06:20,198
be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> configure that</font><font color="#E5E5E5"> open V switch</font>

120
00:06:17,259 --> 00:06:22,659
with<font color="#E5E5E5"> the excellent ID the previous talks</font>

121
00:06:20,199 --> 00:06:24,250
<font color="#E5E5E5">right the excellent ID it would be</font><font color="#CCCCCC"> able</font>

122
00:06:22,659 --> 00:06:27,789
<font color="#E5E5E5">to configure routes</font>

123
00:06:24,250 --> 00:06:30,789
perhaps<font color="#CCCCCC"> it</font><font color="#E5E5E5"> me like Mac add something</font>

124
00:06:27,789 --> 00:06:33,009
update MAC address table<font color="#CCCCCC"> those kind of</font>

125
00:06:30,789 --> 00:06:33,729
<font color="#E5E5E5">things so</font><font color="#CCCCCC"> that's really</font><font color="#E5E5E5"> extends the</font>

126
00:06:33,009 --> 00:06:36,969
functionality

127
00:06:33,729 --> 00:06:39,669
<font color="#E5E5E5">so remember driver and</font><font color="#CCCCCC"> plug in</font><font color="#E5E5E5"> a</font>

128
00:06:36,969 --> 00:06:45,250
synonymous<font color="#CCCCCC"> if you read about</font><font color="#E5E5E5"> container</font>

129
00:06:39,669 --> 00:06:48,549
networking so plugins are the ways<font color="#E5E5E5"> to</font>

130
00:06:45,250 --> 00:06:49,479
extend things<font color="#CCCCCC"> so once again Lib</font><font color="#E5E5E5"> network</font>

131
00:06:48,550 --> 00:06:52,090
is a driver

132
00:06:49,479 --> 00:06:54,789
it has building drivers one oh well one

133
00:06:52,090 --> 00:06:57,159
of them is remote and then that remote

134
00:06:54,789 --> 00:06:59,669
driver has an interface to call external

135
00:06:57,159 --> 00:06:59,669
<font color="#E5E5E5">system</font>

136
00:06:59,930 --> 00:07:08,250
in<font color="#E5E5E5"> CNI in container networking interface</font>

137
00:07:04,319 --> 00:07:11,389
<font color="#CCCCCC">a different model</font><font color="#E5E5E5"> they have</font><font color="#CCCCCC"> a different</font>

138
00:07:08,250 --> 00:07:13,349
interface<font color="#CCCCCC"> it's actually a</font><font color="#E5E5E5"> different</font>

139
00:07:11,389 --> 00:07:18,720
<font color="#CCCCCC">implementation what they do there is</font>

140
00:07:13,349 --> 00:07:21,509
<font color="#E5E5E5">that they decided that they would do it</font>

141
00:07:18,720 --> 00:07:23,909
different than<font color="#E5E5E5"> docker and they came up</font>

142
00:07:21,509 --> 00:07:26,129
with concept of binaries so<font color="#E5E5E5"> every time</font>

143
00:07:23,909 --> 00:07:28,110
you interact<font color="#E5E5E5"> you want to create</font>

144
00:07:26,129 --> 00:07:29,460
something<font color="#CCCCCC"> on the network</font><font color="#E5E5E5"> you would run</font>

145
00:07:28,110 --> 00:07:31,500
it through a binary call

146
00:07:29,460 --> 00:07:33,750
so you're<font color="#CCCCCC"> basically running executable</font>

147
00:07:31,500 --> 00:07:35,069
<font color="#E5E5E5">and it will do the work</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> you on a</font>

148
00:07:33,750 --> 00:07:37,500
<font color="#E5E5E5">dagger side that works a little bit</font>

149
00:07:35,069 --> 00:07:39,509
little different because on<font color="#E5E5E5"> the darker</font>

150
00:07:37,500 --> 00:07:43,650
side it will<font color="#E5E5E5"> actually be running all the</font>

151
00:07:39,509 --> 00:07:45,569
time while<font color="#CCCCCC"> while in CNI</font><font color="#E5E5E5"> it runs only</font>

152
00:07:43,650 --> 00:07:47,789
<font color="#E5E5E5">when you invoke it and will I will</font>

153
00:07:45,569 --> 00:07:49,620
explain later<font color="#E5E5E5"> the differences so if you</font>

154
00:07:47,789 --> 00:07:53,190
<font color="#E5E5E5">think about it container network PC and</font>

155
00:07:49,620 --> 00:07:56,849
<font color="#E5E5E5">I that's that's the main repository that</font>

156
00:07:53,190 --> 00:08:00,419
explains the specifications of container

157
00:07:56,849 --> 00:08:02,849
networking interface<font color="#E5E5E5"> within that there</font>

158
00:08:00,419 --> 00:08:06,990
is a directory called Lib<font color="#CCCCCC"> CNI which</font>

159
00:08:02,849 --> 00:08:09,779
really provides you the driver<font color="#CCCCCC"> one of</font>

160
00:08:06,990 --> 00:08:12,599
<font color="#E5E5E5">the implementations of how to implement</font>

161
00:08:09,779 --> 00:08:14,610
<font color="#E5E5E5">Lib C and I but that's not the only</font>

162
00:08:12,599 --> 00:08:17,639
implementation that exists<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the market</font>

163
00:08:14,610 --> 00:08:25,710
for<font color="#CCCCCC"> example mesosphere</font><font color="#E5E5E5"> has something</font>

164
00:08:17,639 --> 00:08:28,139
called<font color="#CCCCCC"> continue forgot the name some</font>

165
00:08:25,710 --> 00:08:30,000
kind of<font color="#CCCCCC"> a different</font><font color="#E5E5E5"> different method of</font>

166
00:08:28,139 --> 00:08:32,820
utilizing that model

167
00:08:30,000 --> 00:08:35,000
so our and and different our other

168
00:08:32,820 --> 00:08:39,750
orchestration platforms like kubernetes

169
00:08:35,000 --> 00:08:41,969
<font color="#E5E5E5">they may create their owns their own so</font>

170
00:08:39,750 --> 00:08:44,010
then you have a<font color="#E5E5E5"> different repository on</font>

171
00:08:41,969 --> 00:08:46,470
the github<font color="#E5E5E5"> that</font><font color="#CCCCCC"> will be container</font>

172
00:08:44,010 --> 00:08:49,589
networking<font color="#E5E5E5"> plugins and you have to kind</font>

173
00:08:46,470 --> 00:08:52,890
<font color="#E5E5E5">of</font><font color="#CCCCCC"> plugins</font><font color="#E5E5E5"> network plugins and</font><font color="#CCCCCC"> ipam</font>

174
00:08:49,589 --> 00:08:55,230
plugins on<font color="#E5E5E5"> the network side you have the</font>

175
00:08:52,890 --> 00:08:57,839
<font color="#CCCCCC">regular bridge plug-in IP villain</font>

176
00:08:55,230 --> 00:09:01,459
<font color="#CCCCCC">Nashville and</font><font color="#E5E5E5"> those those things and</font><font color="#CCCCCC"> RI</font>

177
00:08:57,839 --> 00:09:05,160
Pam you have either<font color="#E5E5E5"> host local or DHCP</font>

178
00:09:01,459 --> 00:09:07,800
<font color="#E5E5E5">now the important thing if when you when</font>

179
00:09:05,160 --> 00:09:09,959
you will be building<font color="#E5E5E5"> those binaries</font>

180
00:09:07,800 --> 00:09:11,349
those executables<font color="#E5E5E5"> you were likely to</font>

181
00:09:09,959 --> 00:09:14,709
download both<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

182
00:09:11,350 --> 00:09:17,560
both of those repositories from github

183
00:09:14,709 --> 00:09:19,750
<font color="#CCCCCC">and when you will be compiling them</font><font color="#E5E5E5"> you</font>

184
00:09:17,560 --> 00:09:24,699
will basically for each of those<font color="#E5E5E5"> drivers</font>

185
00:09:19,750 --> 00:09:29,589
you'll have a single<font color="#E5E5E5"> executable</font><font color="#CCCCCC"> all</font>

186
00:09:24,699 --> 00:09:31,180
<font color="#CCCCCC">right so at the moment when I first</font>

187
00:09:29,589 --> 00:09:32,529
<font color="#E5E5E5">looked at</font><font color="#CCCCCC"> it and</font><font color="#E5E5E5"> I tried to understand</font>

188
00:09:31,180 --> 00:09:34,449
what's the difference between<font color="#E5E5E5"> C and</font><font color="#CCCCCC"> M</font>

189
00:09:32,529 --> 00:09:36,910
and C and I I really<font color="#E5E5E5"> thought it's some</font>

190
00:09:34,449 --> 00:09:41,229
kind of like a war between two<font color="#E5E5E5"> cultures</font>

191
00:09:36,910 --> 00:09:43,709
<font color="#E5E5E5">of some sorts but there is there is</font>

192
00:09:41,230 --> 00:09:47,949
<font color="#E5E5E5">there is a story behind it and the story</font>

193
00:09:43,709 --> 00:09:51,040
in my<font color="#CCCCCC"> interpretation is</font><font color="#E5E5E5"> that container</font>

194
00:09:47,949 --> 00:09:54,819
networking model would be<font color="#E5E5E5"> used by</font>

195
00:09:51,040 --> 00:09:56,709
companies<font color="#CCCCCC"> that</font><font color="#E5E5E5"> really run strictly</font>

196
00:09:54,819 --> 00:09:59,560
darker they are not interested<font color="#CCCCCC"> to run</font>

197
00:09:56,709 --> 00:10:02,589
any other runtime<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> think about</font>

198
00:09:59,560 --> 00:10:05,500
enterprise computing<font color="#E5E5E5"> if you want to</font>

199
00:10:02,589 --> 00:10:07,420
<font color="#E5E5E5">support let's say five different types</font>

200
00:10:05,500 --> 00:10:09,339
of<font color="#E5E5E5"> switches it's very hard in a data</font>

201
00:10:07,420 --> 00:10:12,579
<font color="#E5E5E5">center so you usually stick with couple</font>

202
00:10:09,339 --> 00:10:14,440
vendors right same same idea here you

203
00:10:12,579 --> 00:10:16,810
stick<font color="#CCCCCC"> with a single with darker as being</font>

204
00:10:14,440 --> 00:10:19,600
your<font color="#CCCCCC"> continuing runtime so you inherit</font>

205
00:10:16,810 --> 00:10:21,310
that model with you<font color="#E5E5E5"> and likely you would</font>

206
00:10:19,600 --> 00:10:23,649
not<font color="#E5E5E5"> use container network interface</font>

207
00:10:21,310 --> 00:10:26,109
<font color="#CCCCCC">container network</font><font color="#E5E5E5"> interface is used by</font>

208
00:10:23,649 --> 00:10:28,089
<font color="#CCCCCC">someone who</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> running an environment</font>

209
00:10:26,110 --> 00:10:30,490
where they<font color="#CCCCCC"> have to manage</font><font color="#E5E5E5"> different</font>

210
00:10:28,089 --> 00:10:32,800
runtimes for different people<font color="#CCCCCC"> so imagine</font>

211
00:10:30,490 --> 00:10:35,529
that<font color="#E5E5E5"> you're a big service provider</font><font color="#CCCCCC"> I</font>

212
00:10:32,800 --> 00:10:37,810
don't know any kind<font color="#E5E5E5"> of and you</font><font color="#CCCCCC"> need to</font>

213
00:10:35,529 --> 00:10:39,760
support<font color="#CCCCCC"> Windows and Linux and</font><font color="#E5E5E5"> you need</font>

214
00:10:37,810 --> 00:10:42,910
to support<font color="#CCCCCC"> different</font><font color="#E5E5E5"> runtimes a Windows</font>

215
00:10:39,760 --> 00:10:44,430
runtime<font color="#E5E5E5"> and then Linux runtime so for</font>

216
00:10:42,910 --> 00:10:47,260
that<font color="#E5E5E5"> you would go</font><font color="#CCCCCC"> with something like</font>

217
00:10:44,430 --> 00:10:51,000
kubernetes<font color="#CCCCCC"> mesosphere those what I call</font>

218
00:10:47,260 --> 00:10:54,310
orchestrators<font color="#E5E5E5"> and what orchestrators do</font>

219
00:10:51,000 --> 00:10:56,110
they run agents on every system<font color="#CCCCCC"> that</font>

220
00:10:54,310 --> 00:10:58,768
they want<font color="#E5E5E5"> to run docker and when they</font>

221
00:10:56,110 --> 00:11:01,569
run that agent they pass certain options

222
00:10:58,769 --> 00:11:05,040
<font color="#E5E5E5">in their command line so one of the</font>

223
00:11:01,569 --> 00:11:07,719
options<font color="#CCCCCC"> could</font><font color="#E5E5E5"> be used CNI or use CNM and</font>

224
00:11:05,040 --> 00:11:09,730
<font color="#E5E5E5">that's really like that's really the</font>

225
00:11:07,720 --> 00:11:14,470
difference<font color="#E5E5E5"> so someone thought</font><font color="#CCCCCC"> that it's</font>

226
00:11:09,730 --> 00:11:18,269
easier for the industry<font color="#E5E5E5"> of container</font>

227
00:11:14,470 --> 00:11:22,240
<font color="#E5E5E5">service providers</font><font color="#CCCCCC"> to use CNI they also</font>

228
00:11:18,269 --> 00:11:24,460
they also<font color="#E5E5E5"> avoid vendor lock-in in the</font>

229
00:11:22,240 --> 00:11:27,880
sense that<font color="#E5E5E5"> if you only you</font>

230
00:11:24,460 --> 00:11:33,460
<font color="#CCCCCC">lib Network</font><font color="#E5E5E5"> you might be</font><font color="#CCCCCC"> a tryst that</font>

231
00:11:27,880 --> 00:11:38,350
docker would set the rules for<font color="#E5E5E5"> you so</font>

232
00:11:33,460 --> 00:11:40,480
<font color="#E5E5E5">CNI is a specification so in in material</font>

233
00:11:38,350 --> 00:11:43,210
terms you<font color="#E5E5E5"> have a file</font>

234
00:11:40,480 --> 00:11:45,550
it's a JSON file<font color="#E5E5E5"> and it has it has to be</font>

235
00:11:43,210 --> 00:11:48,160
in a certain structure<font color="#E5E5E5"> what it does it's</font>

236
00:11:45,550 --> 00:11:50,380
<font color="#E5E5E5">it you provide to it the</font><font color="#CCCCCC"> network</font>

237
00:11:48,160 --> 00:11:52,480
definition that's<font color="#E5E5E5"> all it carries and</font>

238
00:11:50,380 --> 00:11:54,400
network definition and it has a

239
00:11:52,480 --> 00:11:57,790
<font color="#E5E5E5">references to the drivers that that</font>

240
00:11:54,400 --> 00:12:04,209
<font color="#E5E5E5">network definition would use so whenever</font>

241
00:11:57,790 --> 00:12:05,920
you whenever you deploy deploy like

242
00:12:04,210 --> 00:12:07,600
orchestrate<font color="#E5E5E5"> your networking with</font>

243
00:12:05,920 --> 00:12:12,189
container network interface what will

244
00:12:07,600 --> 00:12:13,590
you will do is on each<font color="#E5E5E5"> host you would</font>

245
00:12:12,190 --> 00:12:15,610
have you will put an orchestra

246
00:12:13,590 --> 00:12:17,710
orchestration agent so there will be

247
00:12:15,610 --> 00:12:19,810
like some<font color="#E5E5E5"> kind of master or slave must</font>

248
00:12:17,710 --> 00:12:21,180
<font color="#E5E5E5">master slave topology where you have a</font>

249
00:12:19,810 --> 00:12:25,359
bunch of slaves

250
00:12:21,180 --> 00:12:28,140
now those orchestration agents will talk

251
00:12:25,360 --> 00:12:31,030
to<font color="#CCCCCC"> Orchestrator</font><font color="#E5E5E5"> which is kubernetes</font>

252
00:12:28,140 --> 00:12:35,800
<font color="#E5E5E5">maybe miso server there is a new thing</font>

253
00:12:31,030 --> 00:12:38,650
in town<font color="#CCCCCC"> nomads</font><font color="#E5E5E5"> and when when they talk</font>

254
00:12:35,800 --> 00:12:40,719
<font color="#E5E5E5">they basically can say it can can call</font>

255
00:12:38,650 --> 00:12:42,670
the master<font color="#E5E5E5"> or other master would call to</font>

256
00:12:40,720 --> 00:12:45,850
the slave and say run<font color="#CCCCCC"> this command for</font>

257
00:12:42,670 --> 00:12:47,620
<font color="#CCCCCC">me and</font><font color="#E5E5E5"> I want you to use the bridge</font>

258
00:12:45,850 --> 00:12:49,870
driver and<font color="#CCCCCC"> here's a</font><font color="#E5E5E5"> network definition</font>

259
00:12:47,620 --> 00:12:51,450
that<font color="#E5E5E5"> I want you to use the drawback</font><font color="#CCCCCC"> to</font>

260
00:12:49,870 --> 00:12:55,000
that is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to populate</font>

261
00:12:51,450 --> 00:12:57,610
<font color="#CCCCCC">Network definition on every host that</font>

262
00:12:55,000 --> 00:12:58,990
you<font color="#E5E5E5"> deploy that thing so each agent has</font>

263
00:12:57,610 --> 00:13:04,750
to<font color="#E5E5E5"> carry that pair of network</font>

264
00:12:58,990 --> 00:13:09,060
definitions so when Master says deploy a

265
00:13:04,750 --> 00:13:13,030
container with IP 10.10 detent

266
00:13:09,060 --> 00:13:17,800
what it<font color="#E5E5E5"> has to do it has to say docker</font>

267
00:13:13,030 --> 00:13:20,520
run and set the<font color="#E5E5E5"> networking to none so</font>

268
00:13:17,800 --> 00:13:23,890
<font color="#CCCCCC">what will happen</font><font color="#E5E5E5"> is that docker</font>

269
00:13:20,520 --> 00:13:28,780
<font color="#CCCCCC">lib network</font><font color="#E5E5E5"> one of the drivers would</font>

270
00:13:23,890 --> 00:13:30,819
create network<font color="#E5E5E5"> namespace specifically</font>

271
00:13:28,780 --> 00:13:32,709
for that<font color="#E5E5E5"> process but will not configure</font>

272
00:13:30,820 --> 00:13:34,830
it with<font color="#CCCCCC"> anything there will</font><font color="#E5E5E5"> be literally</font>

273
00:13:32,710 --> 00:13:37,860
<font color="#CCCCCC">Lubeck there</font><font color="#E5E5E5"> that's that's all</font>

274
00:13:34,830 --> 00:13:39,900
but then<font color="#CCCCCC"> Orchestrator know</font>

275
00:13:37,860 --> 00:13:44,550
the idea of that container<font color="#E5E5E5"> of a newly</font>

276
00:13:39,900 --> 00:13:47,640
created container would execute<font color="#E5E5E5"> would</font>

277
00:13:44,550 --> 00:13:49,740
execute<font color="#E5E5E5"> follow-up commands now how does</font>

278
00:13:47,640 --> 00:13:51,480
<font color="#CCCCCC">doctor know about that</font><font color="#E5E5E5"> Network</font><font color="#CCCCCC"> once</font>

279
00:13:49,740 --> 00:13:55,440
<font color="#CCCCCC">again it's a</font><font color="#E5E5E5"> definition</font><font color="#CCCCCC"> that has to sit</font>

280
00:13:51,480 --> 00:13:57,810
<font color="#CCCCCC">on the</font><font color="#E5E5E5"> host</font><font color="#CCCCCC"> how how</font><font color="#E5E5E5"> does it know about</font>

281
00:13:55,440 --> 00:14:00,390
<font color="#E5E5E5">the subnet mask</font><font color="#CCCCCC"> etc</font><font color="#E5E5E5"> et-cetera it's also</font>

282
00:13:57,810 --> 00:14:04,560
all<font color="#E5E5E5"> of those definitions have to be have</font>

283
00:14:00,390 --> 00:14:06,660
to be populated<font color="#E5E5E5"> than the</font><font color="#CCCCCC"> host so when</font>

284
00:14:04,560 --> 00:14:09,479
you run<font color="#E5E5E5"> da you when you run your</font>

285
00:14:06,660 --> 00:14:15,420
container<font color="#CCCCCC"> you specified I don't want to</font>

286
00:14:09,480 --> 00:14:16,980
use<font color="#E5E5E5"> docker networking what what the</font>

287
00:14:15,420 --> 00:14:19,860
orchestration agent would get is a

288
00:14:16,980 --> 00:14:23,340
sandbox<font color="#E5E5E5"> key sandbox key would be the</font>

289
00:14:19,860 --> 00:14:25,410
path to<font color="#E5E5E5"> where that</font><font color="#CCCCCC"> namespace</font><font color="#E5E5E5"> network</font>

290
00:14:23,340 --> 00:14:28,250
namespace located in the file system

291
00:14:25,410 --> 00:14:30,630
<font color="#CCCCCC">it's actually a set</font><font color="#E5E5E5"> of file descriptors</font>

292
00:14:28,250 --> 00:14:32,850
<font color="#E5E5E5">the last command there on the screen</font>

293
00:14:30,630 --> 00:14:38,700
<font color="#E5E5E5">it's it's basically this is how</font><font color="#CCCCCC"> you</font>

294
00:14:32,850 --> 00:14:43,970
invoke the<font color="#E5E5E5"> CNI a CNI plugin</font><font color="#CCCCCC"> in this case</font>

295
00:14:38,700 --> 00:14:47,250
a files are<font color="#CCCCCC"> located at Etsy in the Etsy</font>

296
00:14:43,970 --> 00:14:49,560
<font color="#CCCCCC">CNI NAT D and the reason I didn't post</font>

297
00:14:47,250 --> 00:14:51,270
that file is because you can find it on

298
00:14:49,560 --> 00:14:53,520
github<font color="#E5E5E5"> you can go on github and that's</font>

299
00:14:51,270 --> 00:14:56,400
like it basically would<font color="#CCCCCC"> be the file on</font>

300
00:14:53,520 --> 00:15:00,120
<font color="#CCCCCC">the first landing page what you have to</font>

301
00:14:56,400 --> 00:15:02,730
say to<font color="#E5E5E5"> it or to that binary is that when</font>

302
00:15:00,120 --> 00:15:05,310
you call a<font color="#CCCCCC"> binary you can</font><font color="#E5E5E5"> pass</font>

303
00:15:02,730 --> 00:15:09,630
environment variables into into<font color="#CCCCCC"> your</font>

304
00:15:05,310 --> 00:15:12,150
executable<font color="#CCCCCC"> and</font><font color="#E5E5E5"> here we pass five</font>

305
00:15:09,630 --> 00:15:15,630
environment variables<font color="#CCCCCC"> CNI</font><font color="#E5E5E5"> command CNI</font>

306
00:15:12,150 --> 00:15:17,730
container ID CNI<font color="#CCCCCC"> name space and the</font>

307
00:15:15,630 --> 00:15:20,820
interface<font color="#E5E5E5"> that you want to use for the</font>

308
00:15:17,730 --> 00:15:23,910
container as well<font color="#CCCCCC"> as the path for other</font>

309
00:15:20,820 --> 00:15:27,450
binaries although in this<font color="#E5E5E5"> case we only</font>

310
00:15:23,910 --> 00:15:30,480
<font color="#E5E5E5">call bridge</font><font color="#CCCCCC"> bridge driver</font><font color="#E5E5E5"> why do we need</font>

311
00:15:27,450 --> 00:15:32,610
<font color="#CCCCCC">that it was kind of</font><font color="#E5E5E5"> tricky</font><font color="#CCCCCC"> for me</font><font color="#E5E5E5"> to</font>

312
00:15:30,480 --> 00:15:34,800
understand<font color="#E5E5E5"> but the idea is if your</font>

313
00:15:32,610 --> 00:15:37,350
network definition says I want to use

314
00:15:34,800 --> 00:15:42,120
bridge driver<font color="#E5E5E5"> but I also want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use for</font>

315
00:15:37,350 --> 00:15:44,220
<font color="#CCCCCC">I</font><font color="#E5E5E5"> Pam some would say DHCP somehow this</font>

316
00:15:42,120 --> 00:15:47,030
<font color="#CCCCCC">binary has to find where that</font><font color="#E5E5E5"> another</font>

317
00:15:44,220 --> 00:15:50,580
binary<font color="#E5E5E5"> located so that's a bit clumsy</font>

318
00:15:47,030 --> 00:15:51,449
for<font color="#E5E5E5"> my taste</font><font color="#CCCCCC"> but at the same time this</font>

319
00:15:50,580 --> 00:15:56,040
works

320
00:15:51,450 --> 00:15:59,300
so what will happen<font color="#CCCCCC"> is that is that</font><font color="#E5E5E5"> that</font>

321
00:15:56,040 --> 00:16:04,339
executable will connect container<font color="#E5E5E5"> ad and</font>

322
00:15:59,300 --> 00:16:08,130
contain<font color="#CCCCCC"> your Center container path to</font>

323
00:16:04,340 --> 00:16:13,230
containers<font color="#E5E5E5"> network namespace and</font><font color="#CCCCCC"> will</font>

324
00:16:08,130 --> 00:16:16,350
configure<font color="#E5E5E5"> it and then you would get and</font>

325
00:16:13,230 --> 00:16:18,570
then you<font color="#CCCCCC"> will get your</font><font color="#E5E5E5"> then you would</font>

326
00:16:16,350 --> 00:16:20,490
get your plumbing for<font color="#E5E5E5"> the container so</font>

327
00:16:18,570 --> 00:16:24,000
when you enter<font color="#CCCCCC"> the container</font><font color="#E5E5E5"> it will be</font>

328
00:16:20,490 --> 00:16:26,040
<font color="#E5E5E5">configured with an IP address and it</font>

329
00:16:24,000 --> 00:16:28,800
<font color="#CCCCCC">will</font><font color="#E5E5E5"> configure IP tables masquerading</font>

330
00:16:26,040 --> 00:16:31,469
right<font color="#CCCCCC"> and you will have connectivity out</font>

331
00:16:28,800 --> 00:16:34,979
and out<font color="#E5E5E5"> of the container and to the</font>

332
00:16:31,470 --> 00:16:36,840
container so remember once again<font color="#E5E5E5"> that</font>

333
00:16:34,980 --> 00:16:39,630
<font color="#E5E5E5">orchestrators in charge this</font><font color="#CCCCCC"> is very</font>

334
00:16:36,840 --> 00:16:41,580
important<font color="#E5E5E5"> because in this case</font><font color="#CCCCCC"> you</font>

335
00:16:39,630 --> 00:16:44,040
totally although you're running darker

336
00:16:41,580 --> 00:16:46,830
and darker<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this docker</font>

337
00:16:44,040 --> 00:16:50,939
engine is in itself a process<font color="#E5E5E5"> that's</font>

338
00:16:46,830 --> 00:16:53,010
basically an agent<font color="#E5E5E5"> you now have to run a</font>

339
00:16:50,940 --> 00:16:54,900
separate process would be that<font color="#E5E5E5"> that</font>

340
00:16:53,010 --> 00:16:57,810
would<font color="#E5E5E5"> be part of like a slave process on</font>

341
00:16:54,900 --> 00:17:00,329
each<font color="#E5E5E5"> host that would be taking commands</font>

342
00:16:57,810 --> 00:17:02,520
from<font color="#CCCCCC"> Orchestrator sometimes it's great</font>

343
00:17:00,330 --> 00:17:04,620
sometimes it's not<font color="#E5E5E5"> it's all the</font>

344
00:17:02,520 --> 00:17:06,450
<font color="#E5E5E5">trade-off that someone has to make when</font>

345
00:17:04,619 --> 00:17:08,879
they design<font color="#E5E5E5"> a network a service provider</font>

346
00:17:06,450 --> 00:17:13,380
network for container for container

347
00:17:08,880 --> 00:17:18,920
networking CNM that's my favorite so I'm

348
00:17:13,380 --> 00:17:23,400
a<font color="#E5E5E5"> little bit biased so in CNM it works</font>

349
00:17:18,920 --> 00:17:25,530
<font color="#E5E5E5">with a very important caveat with</font>

350
00:17:23,400 --> 00:17:27,480
<font color="#CCCCCC">Orchestrator Orchestrator knows the</font>

351
00:17:25,530 --> 00:17:29,700
entire topology of<font color="#E5E5E5"> where the containers</font>

352
00:17:27,480 --> 00:17:31,950
are what kind of IP addresses they use

353
00:17:29,700 --> 00:17:36,590
what's configured on them<font color="#E5E5E5"> etcetera</font>

354
00:17:31,950 --> 00:17:36,590
<font color="#E5E5E5">etcetera in container networking model</font>

355
00:17:37,040 --> 00:17:41,310
docker

356
00:17:38,310 --> 00:17:44,060
<font color="#CCCCCC">acts as an</font><font color="#E5E5E5"> agent and there is a mode</font>

357
00:17:41,310 --> 00:17:48,060
that<font color="#E5E5E5"> they recently called</font><font color="#CCCCCC"> it's warm mode</font>

358
00:17:44,060 --> 00:17:51,960
that allows<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to achieve</font><font color="#E5E5E5"> the</font>

359
00:17:48,060 --> 00:17:54,409
distributed networking with with CNM so

360
00:17:51,960 --> 00:17:56,820
imagine that<font color="#E5E5E5"> we're running</font><font color="#CCCCCC"> open V switch</font>

361
00:17:54,410 --> 00:17:58,800
<font color="#E5E5E5">that open V switch connects</font><font color="#CCCCCC"> the</font>

362
00:17:56,820 --> 00:18:02,129
controller somewhere somewhere on your

363
00:17:58,800 --> 00:18:04,180
<font color="#E5E5E5">network and</font><font color="#CCCCCC"> communicates open flow</font><font color="#E5E5E5"> you</font>

364
00:18:02,130 --> 00:18:06,400
have<font color="#CCCCCC"> to be able to configure</font>

365
00:18:04,180 --> 00:18:08,740
the first thing you want to<font color="#CCCCCC"> configure</font><font color="#E5E5E5"> is</font>

366
00:18:06,400 --> 00:18:09,730
that you need<font color="#E5E5E5"> to know in order to in</font>

367
00:18:08,740 --> 00:18:11,860
order<font color="#E5E5E5"> to communicate between two</font>

368
00:18:09,730 --> 00:18:14,890
<font color="#E5E5E5">endpoints</font><font color="#CCCCCC"> you have to know the excellent</font>

369
00:18:11,860 --> 00:18:19,000
ID that's basics right<font color="#E5E5E5"> and then so you</font>

370
00:18:14,890 --> 00:18:21,100
<font color="#E5E5E5">would be</font><font color="#CCCCCC"> able to encapsulate app-v type</font>

371
00:18:19,000 --> 00:18:24,820
IP address so this way you will<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font>

372
00:18:21,100 --> 00:18:28,570
<font color="#E5E5E5">to send the traffic to</font><font color="#CCCCCC"> via type IP</font>

373
00:18:24,820 --> 00:18:30,280
address with the proper VX LAN ID<font color="#E5E5E5"> so a</font>

374
00:18:28,570 --> 00:18:34,000
packet could<font color="#E5E5E5"> be</font><font color="#CCCCCC"> D capsulated</font>

375
00:18:30,280 --> 00:18:36,970
and brought<font color="#E5E5E5"> into a specific container if</font>

376
00:18:34,000 --> 00:18:39,100
<font color="#E5E5E5">necessary so in container networking</font>

377
00:18:36,970 --> 00:18:42,000
model<font color="#CCCCCC"> darker decided to use something</font>

378
00:18:39,100 --> 00:18:44,320
<font color="#E5E5E5">called key value store key value store</font>

379
00:18:42,000 --> 00:18:48,900
allows you to store<font color="#CCCCCC"> network information</font>

380
00:18:44,320 --> 00:18:52,450
<font color="#E5E5E5">both for networks</font><font color="#CCCCCC"> and for containers now</font>

381
00:18:48,900 --> 00:18:55,270
imagine that you have imagined<font color="#CCCCCC"> that you</font>

382
00:18:52,450 --> 00:18:57,550
have a definition<font color="#E5E5E5"> for a network and you</font>

383
00:18:55,270 --> 00:19:00,250
want to be you want<font color="#E5E5E5"> that definition to</font>

384
00:18:57,550 --> 00:19:02,290
<font color="#CCCCCC">be</font><font color="#E5E5E5"> consistent across multiple halls what</font>

385
00:19:00,250 --> 00:19:05,320
you would need<font color="#E5E5E5"> to do is you need</font><font color="#CCCCCC"> to</font>

386
00:19:02,290 --> 00:19:07,750
ensure<font color="#E5E5E5"> that that definition is copied to</font>

387
00:19:05,320 --> 00:19:09,970
<font color="#E5E5E5">every single to every single</font><font color="#CCCCCC"> device on</font>

388
00:19:07,750 --> 00:19:12,520
<font color="#CCCCCC">that</font><font color="#E5E5E5"> network and also you have</font><font color="#CCCCCC"> to watch</font>

389
00:19:09,970 --> 00:19:17,200
<font color="#CCCCCC">for overlaps because if I want to</font>

390
00:19:12,520 --> 00:19:19,120
provide<font color="#E5E5E5"> an IP address</font><font color="#CCCCCC"> of 10.1.1.1</font><font color="#E5E5E5"> I need</font>

391
00:19:17,200 --> 00:19:22,540
to make sure<font color="#CCCCCC"> that no one else has taken</font>

392
00:19:19,120 --> 00:19:24,909
that that IP<font color="#CCCCCC"> address so key value store</font>

393
00:19:22,540 --> 00:19:27,639
has<font color="#CCCCCC"> the information</font><font color="#E5E5E5"> number one about the</font>

394
00:19:24,910 --> 00:19:31,660
containers on the network number<font color="#CCCCCC"> two it</font>

395
00:19:27,640 --> 00:19:33,760
<font color="#E5E5E5">has information about</font><font color="#CCCCCC"> the networks so if</font>

396
00:19:31,660 --> 00:19:36,520
at any point<font color="#E5E5E5"> of</font><font color="#CCCCCC"> time you see</font><font color="#E5E5E5"> it on a</font>

397
00:19:33,760 --> 00:19:39,420
darker node<font color="#E5E5E5"> that's part of that cluster</font>

398
00:19:36,520 --> 00:19:42,820
<font color="#E5E5E5">that communicates to key value store</font>

399
00:19:39,420 --> 00:19:45,580
when you do<font color="#E5E5E5"> darker network inspect it</font>

400
00:19:42,820 --> 00:19:48,159
will show you that all the definitions

401
00:19:45,580 --> 00:19:50,980
<font color="#E5E5E5">network definitions that are</font><font color="#CCCCCC"> in a key</font>

402
00:19:48,160 --> 00:19:54,070
<font color="#CCCCCC">value store</font><font color="#E5E5E5"> whether it's at CD whether</font>

403
00:19:50,980 --> 00:19:56,470
<font color="#CCCCCC">it's console zookeeper</font><font color="#E5E5E5"> at the same time</font>

404
00:19:54,070 --> 00:19:58,330
when you do<font color="#E5E5E5"> darker network inspect when</font>

405
00:19:56,470 --> 00:20:00,820
you inspect network from a host<font color="#E5E5E5"> in a</font>

406
00:19:58,330 --> 00:20:02,770
cluster what the other benefit you get

407
00:20:00,820 --> 00:20:04,480
is you see all<font color="#CCCCCC"> the</font><font color="#E5E5E5"> containers</font><font color="#CCCCCC"> you know</font>

408
00:20:02,770 --> 00:20:07,360
all the IP<font color="#CCCCCC"> addresses that were as a sign</font>

409
00:20:04,480 --> 00:20:10,180
were assigned<font color="#CCCCCC"> to all the hosts that are</font>

410
00:20:07,360 --> 00:20:11,740
connected to that<font color="#E5E5E5"> key value</font><font color="#CCCCCC"> store that</font>

411
00:20:10,180 --> 00:20:15,550
key value<font color="#CCCCCC"> store is</font><font color="#E5E5E5"> very important</font>

412
00:20:11,740 --> 00:20:16,690
<font color="#E5E5E5">because you mentioned that you run not</font>

413
00:20:15,550 --> 00:20:19,000
one but

414
00:20:16,690 --> 00:20:22,270
hundred different<font color="#E5E5E5"> clusters and in each</font>

415
00:20:19,000 --> 00:20:24,730
cluster you use same exact<font color="#CCCCCC"> network</font><font color="#E5E5E5"> so</font>

416
00:20:22,270 --> 00:20:28,750
when you store that<font color="#E5E5E5"> network in key value</font>

417
00:20:24,730 --> 00:20:31,780
store you have<font color="#CCCCCC"> to to make sure that the</font>

418
00:20:28,750 --> 00:20:34,420
<font color="#CCCCCC">network somehow</font><font color="#E5E5E5"> is somehow uniquely</font>

419
00:20:31,780 --> 00:20:36,850
identified<font color="#E5E5E5"> so you would add some kind of</font>

420
00:20:34,420 --> 00:20:39,460
salt<font color="#E5E5E5"> that would say to you that</font><font color="#CCCCCC"> it would</font>

421
00:20:36,850 --> 00:20:42,610
be<font color="#E5E5E5"> an IP address</font><font color="#CCCCCC"> plus some other string</font>

422
00:20:39,460 --> 00:20:44,620
that would uniquely identify that

423
00:20:42,610 --> 00:20:46,840
network within<font color="#E5E5E5"> the</font><font color="#CCCCCC"> key value store and</font>

424
00:20:44,620 --> 00:20:49,629
now when<font color="#CCCCCC"> network definitions are put</font>

425
00:20:46,840 --> 00:20:53,949
into the key value store all of<font color="#CCCCCC"> them are</font>

426
00:20:49,630 --> 00:20:57,670
stored<font color="#E5E5E5"> the keys themselves are encoded</font>

427
00:20:53,950 --> 00:21:02,170
with base64<font color="#E5E5E5"> so when you</font><font color="#CCCCCC"> yourself look</font>

428
00:20:57,670 --> 00:21:03,730
into the key value store<font color="#CCCCCC"> sometimes you</font>

429
00:21:02,170 --> 00:21:05,920
<font color="#E5E5E5">would look for networks but what you</font>

430
00:21:03,730 --> 00:21:07,780
would see is a long strings<font color="#E5E5E5"> so the</font>

431
00:21:05,920 --> 00:21:11,670
reason<font color="#CCCCCC"> you see that is because it's base</font>

432
00:21:07,780 --> 00:21:11,670
64 encoded so you have to decode it

433
00:21:14,400 --> 00:21:19,800
what's a what's a disadvantage<font color="#E5E5E5"> of</font><font color="#CCCCCC"> a</font>

434
00:21:17,590 --> 00:21:22,480
tomorrow<font color="#E5E5E5"> so once</font><font color="#CCCCCC"> you're connectivity</font>

435
00:21:19,800 --> 00:21:25,540
once<font color="#CCCCCC"> you've connectivity to key value</font>

436
00:21:22,480 --> 00:21:28,510
store is broken you basically you are

437
00:21:25,540 --> 00:21:30,399
basically in<font color="#E5E5E5"> split</font><font color="#CCCCCC"> bearing scenario so</font>

438
00:21:28,510 --> 00:21:34,030
you<font color="#E5E5E5"> have to watch out</font><font color="#CCCCCC"> and your design</font>

439
00:21:30,400 --> 00:21:37,120
has to<font color="#E5E5E5"> preclude you from being in</font><font color="#CCCCCC"> that</font>

440
00:21:34,030 --> 00:21:41,770
position<font color="#E5E5E5"> so you have to do</font><font color="#CCCCCC"> everything in</font>

441
00:21:37,120 --> 00:21:44,679
order for you to<font color="#CCCCCC"> keep your</font><font color="#E5E5E5"> hosts in sync</font>

442
00:21:41,770 --> 00:21:47,889
<font color="#E5E5E5">without split brain so</font><font color="#CCCCCC"> container</font>

443
00:21:44,680 --> 00:21:49,360
<font color="#E5E5E5">networking model the darker runtime so</font>

444
00:21:47,890 --> 00:21:51,370
when you're when you actually<font color="#E5E5E5"> type</font>

445
00:21:49,360 --> 00:21:55,810
commands<font color="#E5E5E5"> in darker let's say you type</font>

446
00:21:51,370 --> 00:21:59,050
docker run<font color="#E5E5E5"> what will happen is that this</font>

447
00:21:55,810 --> 00:22:01,720
<font color="#E5E5E5">is a CLI and your command goes to</font>

448
00:21:59,050 --> 00:22:04,600
something<font color="#CCCCCC"> called docker proxy through</font>

449
00:22:01,720 --> 00:22:07,960
<font color="#CCCCCC">the process it ends up in the library</font>

450
00:22:04,600 --> 00:22:11,199
<font color="#E5E5E5">called Lib network within Lib</font><font color="#CCCCCC"> Network</font>

451
00:22:07,960 --> 00:22:14,350
<font color="#E5E5E5">there's a driver called remote and that</font>

452
00:22:11,200 --> 00:22:16,720
remote driver has an ability<font color="#E5E5E5"> to add</font>

453
00:22:14,350 --> 00:22:18,850
remote<font color="#CCCCCC"> plugins</font><font color="#E5E5E5"> and there are two types</font>

454
00:22:16,720 --> 00:22:21,850
<font color="#CCCCCC">of plugins</font><font color="#E5E5E5"> that applicable to our</font>

455
00:22:18,850 --> 00:22:25,899
<font color="#E5E5E5">community which is</font><font color="#CCCCCC"> network driver and</font>

456
00:22:21,850 --> 00:22:28,389
<font color="#CCCCCC">ipam driver now IPAM driver is nowhere</font>

457
00:22:25,900 --> 00:22:30,160
<font color="#CCCCCC">in</font><font color="#E5E5E5"> documentation so one</font><font color="#CCCCCC"> of the things</font>

458
00:22:28,390 --> 00:22:30,450
that<font color="#E5E5E5"> that it's really important for you</font>

459
00:22:30,160 --> 00:22:32,970
to<font color="#E5E5E5"> be</font>

460
00:22:30,450 --> 00:22:34,380
<font color="#E5E5E5">connected to github and sort</font><font color="#CCCCCC"> of read the</font>

461
00:22:32,970 --> 00:22:36,030
<font color="#CCCCCC">information</font><font color="#E5E5E5"> there because that's your</font>

462
00:22:34,380 --> 00:22:40,230
<font color="#CCCCCC">only source of documentation</font><font color="#E5E5E5"> there is no</font>

463
00:22:36,030 --> 00:22:42,270
RFC's or things of<font color="#CCCCCC"> that nature</font><font color="#E5E5E5"> it's</font>

464
00:22:40,230 --> 00:22:44,010
basically what you read<font color="#E5E5E5"> your ability to</font>

465
00:22:42,270 --> 00:22:45,570
read code defines whether you will<font color="#E5E5E5"> be</font>

466
00:22:44,010 --> 00:22:53,220
knowledgeable about that<font color="#E5E5E5"> thing or</font>

467
00:22:45,570 --> 00:22:55,679
another UNIX domain sort sockets at the

468
00:22:53,220 --> 00:22:58,070
very beginning<font color="#E5E5E5"> of the darker the way you</font>

469
00:22:55,680 --> 00:23:00,900
would interact<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> host would be</font>

470
00:22:58,070 --> 00:23:04,290
through<font color="#E5E5E5"> a socket that was published on a</font>

471
00:23:00,900 --> 00:23:06,720
specific<font color="#E5E5E5"> port and it</font><font color="#CCCCCC"> was exposed</font><font color="#E5E5E5"> to to</font>

472
00:23:04,290 --> 00:23:08,850
the networking<font color="#E5E5E5"> stack so in theory you</font>

473
00:23:06,720 --> 00:23:13,230
could have<font color="#E5E5E5"> from your machine connected</font>

474
00:23:08,850 --> 00:23:16,040
to<font color="#E5E5E5"> doctor proxy process by utilizing the</font>

475
00:23:13,230 --> 00:23:18,750
port that was<font color="#E5E5E5"> exposed on a network stack</font>

476
00:23:16,040 --> 00:23:22,710
they changed a lot<font color="#CCCCCC"> darker</font><font color="#E5E5E5"> changed a lot</font>

477
00:23:18,750 --> 00:23:25,320
<font color="#E5E5E5">and in lieu of security risks they no</font>

478
00:23:22,710 --> 00:23:28,710
longer do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> unless</font><font color="#CCCCCC"> that's not the</font>

479
00:23:25,320 --> 00:23:32,520
default<font color="#E5E5E5"> and what happens the darker</font>

480
00:23:28,710 --> 00:23:36,510
darker<font color="#E5E5E5"> socket</font><font color="#CCCCCC"> doctor interface itself</font><font color="#E5E5E5"> is</font>

481
00:23:32,520 --> 00:23:39,090
<font color="#E5E5E5">a UNIX domain socket sits on a local</font>

482
00:23:36,510 --> 00:23:41,220
system<font color="#E5E5E5"> and someone from from a remote</font>

483
00:23:39,090 --> 00:23:43,830
system cannot cannot get to<font color="#E5E5E5"> it</font>

484
00:23:41,220 --> 00:23:48,420
so here a simple here<font color="#E5E5E5"> is a simple</font>

485
00:23:43,830 --> 00:23:51,899
commands<font color="#E5E5E5"> to curl commands to connect to</font>

486
00:23:48,420 --> 00:24:01,380
<font color="#E5E5E5">to a darker socket and run and run</font>

487
00:23:51,900 --> 00:24:03,630
commands the previous slide was you

488
00:24:01,380 --> 00:24:06,150
would use curl<font color="#CCCCCC"> if you have a recent</font>

489
00:24:03,630 --> 00:24:08,360
<font color="#CCCCCC">version and it's</font><font color="#E5E5E5"> able to connect to to a</font>

490
00:24:06,150 --> 00:24:11,850
socket<font color="#E5E5E5"> and it's basically a web server</font>

491
00:24:08,360 --> 00:24:17,610
<font color="#E5E5E5">darker proxy is a web server darker</font>

492
00:24:11,850 --> 00:24:20,610
driver<font color="#E5E5E5"> that uses C</font><font color="#CCCCCC"> CNM is</font><font color="#E5E5E5"> actually a web</font>

493
00:24:17,610 --> 00:24:24,240
server so it's a web server<font color="#CCCCCC"> that is</font>

494
00:24:20,610 --> 00:24:27,050
served on<font color="#E5E5E5"> a socket</font><font color="#CCCCCC"> X instead</font><font color="#E5E5E5"> of a sort</font>

495
00:24:24,240 --> 00:24:27,050
of<font color="#E5E5E5"> IP address</font>

496
00:24:29,580 --> 00:24:36,330
now driver and driver<font color="#E5E5E5"> versus plugin</font>

497
00:24:33,350 --> 00:24:37,889
people get<font color="#CCCCCC"> confused</font><font color="#E5E5E5"> they think if it's</font>

498
00:24:36,330 --> 00:24:40,139
two different<font color="#CCCCCC"> things it's actually all</font>

499
00:24:37,889 --> 00:24:43,769
one<font color="#E5E5E5"> so driver</font><font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> I use</font>

500
00:24:40,139 --> 00:24:45,090
interchangeably in<font color="#CCCCCC"> the documentation</font><font color="#E5E5E5"> one</font>

501
00:24:43,769 --> 00:24:48,119
of the things to understand is that

502
00:24:45,090 --> 00:24:51,029
<font color="#E5E5E5">darker engine itself communicates to key</font>

503
00:24:48,119 --> 00:24:54,059
value store<font color="#E5E5E5"> at the same</font><font color="#CCCCCC"> time it has</font><font color="#E5E5E5"> to</font>

504
00:24:51,029 --> 00:24:57,509
<font color="#E5E5E5">communicate to two plugins the network</font>

505
00:24:54,059 --> 00:25:00,600
driver<font color="#E5E5E5"> plug-in and</font><font color="#CCCCCC"> IPAM</font><font color="#E5E5E5"> plugin and when</font>

506
00:24:57,509 --> 00:25:05,309
it could and each of those plugins<font color="#E5E5E5"> can</font>

507
00:25:00,600 --> 00:25:07,379
reside can reside on the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> socket or</font>

508
00:25:05,309 --> 00:25:09,779
in two different sockets<font color="#E5E5E5"> there are</font>

509
00:25:07,379 --> 00:25:12,719
advantages<font color="#CCCCCC"> to that</font><font color="#E5E5E5"> the advantage of</font>

510
00:25:09,779 --> 00:25:15,720
<font color="#E5E5E5">being on the same socket is you can</font>

511
00:25:12,720 --> 00:25:18,659
<font color="#CCCCCC">control so let's say you distribute an</font>

512
00:25:15,720 --> 00:25:20,730
IP address<font color="#E5E5E5"> but then once you allocated</font>

513
00:25:18,659 --> 00:25:23,159
an IP address within<font color="#E5E5E5"> your processes</font>

514
00:25:20,730 --> 00:25:27,720
within<font color="#E5E5E5"> your application you basically</font>

515
00:25:23,159 --> 00:25:31,019
can note what<font color="#E5E5E5"> endpoint</font><font color="#CCCCCC"> ID was assigned</font>

516
00:25:27,720 --> 00:25:33,809
to<font color="#E5E5E5"> a port or maybe you can get</font>

517
00:25:31,019 --> 00:25:35,669
application level information<font color="#E5E5E5"> which is</font>

518
00:25:33,809 --> 00:25:37,980
which is<font color="#CCCCCC"> great but at the same time you</font>

519
00:25:35,669 --> 00:25:39,960
create a monolithic driver<font color="#E5E5E5"> that sort of</font>

520
00:25:37,980 --> 00:25:45,899
combines the<font color="#E5E5E5"> networking stack and</font><font color="#CCCCCC"> IPAM</font>

521
00:25:39,960 --> 00:25:48,749
stack so for<font color="#CCCCCC"> everyone so it's better to</font>

522
00:25:45,899 --> 00:25:52,379
split<font color="#E5E5E5"> in my opinion but you see</font><font color="#CCCCCC"> a lot of</font>

523
00:25:48,749 --> 00:25:55,320
<font color="#E5E5E5">a lot of drivers there that are sort of</font>

524
00:25:52,379 --> 00:25:58,049
like<font color="#E5E5E5"> plugged in together</font><font color="#CCCCCC"> so the reason</font>

525
00:25:55,320 --> 00:26:00,330
people do that is because<font color="#E5E5E5"> you might need</font>

526
00:25:58,049 --> 00:26:05,399
<font color="#E5E5E5">IBM information to contact to configure</font>

527
00:26:00,330 --> 00:26:09,029
<font color="#E5E5E5">network port</font><font color="#CCCCCC"> and vice versa</font><font color="#E5E5E5"> so for that</font>

528
00:26:05,399 --> 00:26:11,820
reason<font color="#E5E5E5"> people</font><font color="#CCCCCC"> combined</font><font color="#E5E5E5"> I advise against</font>

529
00:26:09,029 --> 00:26:15,989
so there is an important<font color="#CCCCCC"> thing about</font>

530
00:26:11,820 --> 00:26:20,519
<font color="#E5E5E5">network driver is a scope so</font><font color="#CCCCCC"> when you</font>

531
00:26:15,989 --> 00:26:23,549
deal with<font color="#E5E5E5"> darker plugins when you run</font>

532
00:26:20,519 --> 00:26:25,289
darker darker darker<font color="#E5E5E5"> network</font><font color="#CCCCCC"> or less you</font>

533
00:26:23,549 --> 00:26:27,509
would notice that<font color="#E5E5E5"> there was a there</font><font color="#CCCCCC"> was</font>

534
00:26:25,289 --> 00:26:29,129
a scope thing<font color="#E5E5E5"> local and global and</font><font color="#CCCCCC"> I</font>

535
00:26:27,509 --> 00:26:31,980
never<font color="#E5E5E5"> understood</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> myself until</font>

536
00:26:29,129 --> 00:26:36,059
<font color="#E5E5E5">actually read the code</font><font color="#CCCCCC"> and try</font><font color="#E5E5E5"> to figure</font>

537
00:26:31,980 --> 00:26:40,109
<font color="#E5E5E5">out like why do we do that so it's</font>

538
00:26:36,059 --> 00:26:43,490
actually a vrf<font color="#E5E5E5"> so to connect to connect</font>

539
00:26:40,109 --> 00:26:47,840
the terms<font color="#CCCCCC"> it allows you</font><font color="#E5E5E5"> to</font>

540
00:26:43,490 --> 00:26:50,150
first to say whether if it's local<font color="#CCCCCC"> you</font>

541
00:26:47,840 --> 00:26:53,270
use<font color="#E5E5E5"> it you</font><font color="#CCCCCC"> are using local key value</font>

542
00:26:50,150 --> 00:26:56,780
store which is<font color="#E5E5E5"> in Dockers ball DB and if</font>

543
00:26:53,270 --> 00:26:58,970
<font color="#CCCCCC">it's global you use</font><font color="#E5E5E5"> global key value</font>

544
00:26:56,780 --> 00:27:01,580
store<font color="#E5E5E5"> and remember that when you</font><font color="#CCCCCC"> use</font>

545
00:26:58,970 --> 00:27:04,070
global key value store<font color="#E5E5E5"> means you get</font>

546
00:27:01,580 --> 00:27:07,580
<font color="#CCCCCC">Network definitions for</font><font color="#E5E5E5"> the entire</font>

547
00:27:04,070 --> 00:27:10,700
network<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> how you synchronize so if</font>

548
00:27:07,580 --> 00:27:14,240
your network<font color="#E5E5E5"> scope is local you</font>

549
00:27:10,700 --> 00:27:15,770
<font color="#E5E5E5">basically like your network stack is</font>

550
00:27:14,240 --> 00:27:20,590
entirely local<font color="#E5E5E5"> you don't share</font>

551
00:27:15,770 --> 00:27:24,230
<font color="#CCCCCC">information if you deal with bgp evpn or</font>

552
00:27:20,590 --> 00:27:26,750
open flow controllers if those<font color="#CCCCCC"> keywords</font>

553
00:27:24,230 --> 00:27:30,530
pop up on your<font color="#CCCCCC"> radar</font><font color="#E5E5E5"> likely the driver</font>

554
00:27:26,750 --> 00:27:33,470
is global meaning<font color="#E5E5E5"> it will store data</font><font color="#CCCCCC"> in</font>

555
00:27:30,530 --> 00:27:40,399
a global<font color="#E5E5E5"> p value store on the right</font>

556
00:27:33,470 --> 00:27:42,170
there<font color="#E5E5E5"> now the</font><font color="#CCCCCC"> lib kv is not is not a key</font>

557
00:27:40,400 --> 00:27:44,960
value<font color="#E5E5E5"> store</font><font color="#CCCCCC"> leaptv</font>

558
00:27:42,170 --> 00:27:47,900
is a library that docker developed to

559
00:27:44,960 --> 00:27:49,760
interact with key value store so it's

560
00:27:47,900 --> 00:27:54,740
<font color="#E5E5E5">better</font><font color="#CCCCCC"> to say that the valley on the</font>

561
00:27:49,760 --> 00:27:57,980
left is<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> both DB but lib kv is</font>

562
00:27:54,740 --> 00:28:00,710
the<font color="#CCCCCC"> mechanism</font><font color="#E5E5E5"> that allows for the darker</font>

563
00:27:57,980 --> 00:28:06,260
engine to interact with with key value

564
00:28:00,710 --> 00:28:09,140
stores<font color="#E5E5E5"> whether</font><font color="#CCCCCC"> local or remote so when</font>

565
00:28:06,260 --> 00:28:12,470
you try to<font color="#E5E5E5"> create when you cry to create</font>

566
00:28:09,140 --> 00:28:18,320
an overlay<font color="#E5E5E5"> network</font><font color="#CCCCCC"> a network using</font>

567
00:28:12,470 --> 00:28:20,270
<font color="#E5E5E5">overlay driver and you are not connected</font>

568
00:28:18,320 --> 00:28:25,070
<font color="#E5E5E5">you're darker engine is not connected</font><font color="#CCCCCC"> to</font>

569
00:28:20,270 --> 00:28:26,720
distributed key-value store<font color="#E5E5E5"> global you</font>

570
00:28:25,070 --> 00:28:30,770
will end up<font color="#E5E5E5"> with this message</font><font color="#CCCCCC"> it means</font>

571
00:28:26,720 --> 00:28:34,160
that the network definition is global

572
00:28:30,770 --> 00:28:35,750
<font color="#E5E5E5">but</font><font color="#CCCCCC"> you don't have definitions</font><font color="#E5E5E5"> of of</font>

573
00:28:34,160 --> 00:28:37,940
that key<font color="#CCCCCC"> value store for me i will not</font>

574
00:28:35,750 --> 00:28:43,010
<font color="#E5E5E5">be able to create that network from the</font>

575
00:28:37,940 --> 00:28:44,960
<font color="#E5E5E5">get-go so</font><font color="#CCCCCC"> remote one of the things that</font>

576
00:28:43,010 --> 00:28:48,410
<font color="#CCCCCC">i wanted to</font><font color="#E5E5E5"> emphasize during this</font>

577
00:28:44,960 --> 00:28:52,430
session is<font color="#CCCCCC"> i wanted</font><font color="#E5E5E5"> to create a driver</font>

578
00:28:48,410 --> 00:28:55,130
<font color="#E5E5E5">an eye pam driver</font><font color="#CCCCCC"> and how</font><font color="#E5E5E5"> did they do</font>

579
00:28:52,430 --> 00:28:56,540
that<font color="#CCCCCC"> so one of the things that when you</font>

580
00:28:55,130 --> 00:28:59,540
start<font color="#E5E5E5"> coding driver</font>

581
00:28:56,540 --> 00:29:02,720
you have to run a web server and<font color="#CCCCCC"> you</font>

582
00:28:59,540 --> 00:29:04,730
have to make<font color="#E5E5E5"> sure it runs on a socket so</font>

583
00:29:02,720 --> 00:29:07,070
you create you you<font color="#E5E5E5"> basically create a</font>

584
00:29:04,730 --> 00:29:11,810
socket and you<font color="#E5E5E5"> bind that</font><font color="#CCCCCC"> web</font><font color="#E5E5E5"> server to</font>

585
00:29:07,070 --> 00:29:14,689
<font color="#E5E5E5">that socket by default darker looks</font><font color="#CCCCCC"> on</font>

586
00:29:11,810 --> 00:29:16,970
<font color="#CCCCCC">startup when you start</font><font color="#E5E5E5"> darker it looks</font>

587
00:29:14,690 --> 00:29:21,380
into the directory run docker plugins

588
00:29:16,970 --> 00:29:25,010
<font color="#E5E5E5">and tries</font><font color="#CCCCCC"> to find</font><font color="#E5E5E5"> and tries to find that</font>

589
00:29:21,380 --> 00:29:31,310
<font color="#CCCCCC">sock files</font><font color="#E5E5E5"> however there are two other</font>

590
00:29:25,010 --> 00:29:35,990
<font color="#CCCCCC">ways how docker</font><font color="#E5E5E5"> can utilize can can find</font>

591
00:29:31,310 --> 00:29:38,300
a<font color="#E5E5E5"> socket number a second way if you drop</font>

592
00:29:35,990 --> 00:29:41,000
in that plugins directory<font color="#CCCCCC"> a JSON file</font>

593
00:29:38,300 --> 00:29:43,250
<font color="#E5E5E5">that</font><font color="#CCCCCC"> provides a definition</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> a</font>

594
00:29:41,000 --> 00:29:46,310
description for<font color="#E5E5E5"> your driver</font><font color="#CCCCCC"> I didn't see</font>

595
00:29:43,250 --> 00:29:49,220
<font color="#E5E5E5">I didn't see anyone using that but that</font>

596
00:29:46,310 --> 00:29:51,909
exists<font color="#E5E5E5"> and the third</font><font color="#CCCCCC"> the most coolest</font>

597
00:29:49,220 --> 00:29:54,550
<font color="#E5E5E5">thing is that you can create a</font>

598
00:29:51,910 --> 00:29:57,890
<font color="#E5E5E5">definition for a driver that's remote</font>

599
00:29:54,550 --> 00:30:01,340
like that that's located totally on a

600
00:29:57,890 --> 00:30:04,700
different<font color="#E5E5E5"> host so you would end up with</font>

601
00:30:01,340 --> 00:30:08,000
a with a single file and there you would

602
00:30:04,700 --> 00:30:11,770
have<font color="#E5E5E5"> the URL to a remote web server that</font>

603
00:30:08,000 --> 00:30:14,600
would be able<font color="#E5E5E5"> to serve those requests</font>

604
00:30:11,770 --> 00:30:17,300
<font color="#E5E5E5">plug-in type so as I described before</font>

605
00:30:14,600 --> 00:30:19,879
<font color="#CCCCCC">there</font><font color="#E5E5E5"> are two types of plugins</font><font color="#CCCCCC"> network</font>

606
00:30:17,300 --> 00:30:23,629
driver and<font color="#CCCCCC"> IPAM driver so in this case</font>

607
00:30:19,880 --> 00:30:25,370
it's an<font color="#E5E5E5"> eye pen driver when you create a</font>

608
00:30:23,630 --> 00:30:27,410
network let's say I create<font color="#CCCCCC"> a network</font>

609
00:30:25,370 --> 00:30:30,139
that's<font color="#E5E5E5"> uses bridge but I want to use</font><font color="#CCCCCC"> I</font>

610
00:30:27,410 --> 00:30:34,190
Pam<font color="#CCCCCC"> my own i Pam</font><font color="#E5E5E5"> let's say I wanted to</font>

611
00:30:30,140 --> 00:30:36,620
<font color="#E5E5E5">add static static IPS for</font><font color="#CCCCCC"> a specific</font>

612
00:30:34,190 --> 00:30:43,820
<font color="#CCCCCC">workload and I don't want to rely on</font><font color="#E5E5E5"> the</font>

613
00:30:36,620 --> 00:30:45,409
<font color="#CCCCCC">IPS</font><font color="#E5E5E5"> that that docker gives me so I coded</font>

614
00:30:43,820 --> 00:30:48,409
a driver and the first thing<font color="#CCCCCC"> that you</font>

615
00:30:45,410 --> 00:30:51,440
<font color="#E5E5E5">would see in a</font><font color="#CCCCCC"> session when docker</font>

616
00:30:48,410 --> 00:30:53,120
starts up it will look in<font color="#CCCCCC"> the directory</font>

617
00:30:51,440 --> 00:30:56,180
<font color="#E5E5E5">and it will make this call plug-in</font>

618
00:30:53,120 --> 00:30:59,060
activate after<font color="#E5E5E5"> it the reason for that</font>

619
00:30:56,180 --> 00:31:02,900
<font color="#E5E5E5">call is to notify the driver that</font><font color="#CCCCCC"> a</font>

620
00:30:59,060 --> 00:31:05,090
darker darker starts up there is no need

621
00:31:02,900 --> 00:31:08,060
<font color="#CCCCCC">to respond to</font><font color="#E5E5E5"> it but now driver knows</font>

622
00:31:05,090 --> 00:31:09,260
that oops<font color="#CCCCCC"> my doctor my doctor</font><font color="#E5E5E5"> just</font>

623
00:31:08,060 --> 00:31:11,720
<font color="#E5E5E5">restarted</font>

624
00:31:09,260 --> 00:31:14,800
<font color="#E5E5E5">it could be you</font><font color="#CCCCCC"> could be like it could</font>

625
00:31:11,720 --> 00:31:19,060
<font color="#E5E5E5">be used for</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> like rediscover ports</font>

626
00:31:14,800 --> 00:31:23,360
performing orders things<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that nature</font>

627
00:31:19,060 --> 00:31:28,149
<font color="#E5E5E5">then there will be a call to get</font><font color="#CCCCCC"> IPAM</font>

628
00:31:23,360 --> 00:31:34,250
driver<font color="#CCCCCC"> gate capabilities so that call</font>

629
00:31:28,150 --> 00:31:37,640
makes that call instructs the plugin<font color="#E5E5E5"> to</font>

630
00:31:34,250 --> 00:31:41,540
provide<font color="#E5E5E5"> two instructions to it one is</font>

631
00:31:37,640 --> 00:31:44,030
whether<font color="#E5E5E5"> the plug-in requires for the</font>

632
00:31:41,540 --> 00:31:47,389
darker to generate a MAC address for the

633
00:31:44,030 --> 00:31:50,090
container otherwise<font color="#E5E5E5"> what</font><font color="#CCCCCC"> main</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> what</font>

634
00:31:47,390 --> 00:31:53,090
<font color="#E5E5E5">you want to do is I don't want docker to</font>

635
00:31:50,090 --> 00:31:58,330
provide me a MAC address<font color="#CCCCCC"> I want to</font>

636
00:31:53,090 --> 00:31:58,330
create my MAC address<font color="#E5E5E5"> MAC address myself</font>

637
00:31:58,510 --> 00:32:05,120
where that comes into play is<font color="#E5E5E5"> that I</font>

638
00:32:02,180 --> 00:32:08,590
mentioned<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> provided</font><font color="#E5E5E5"> you provided</font>

639
00:32:05,120 --> 00:32:13,189
you<font color="#E5E5E5"> docker generates MAC address itself</font>

640
00:32:08,590 --> 00:32:14,810
but then without without<font color="#E5E5E5"> realizing that</font>

641
00:32:13,190 --> 00:32:17,360
somewhere<font color="#E5E5E5"> else</font><font color="#CCCCCC"> that MAC address is</font><font color="#E5E5E5"> in</font>

642
00:32:14,810 --> 00:32:21,889
use<font color="#CCCCCC"> you now have layer</font><font color="#E5E5E5"> two conflict</font>

643
00:32:17,360 --> 00:32:24,379
somewhere so for the most part<font color="#CCCCCC"> I see</font>

644
00:32:21,890 --> 00:32:27,410
that requires MAC address<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be set</font>

645
00:32:24,380 --> 00:32:31,940
<font color="#E5E5E5">to false and require requires request</font>

646
00:32:27,410 --> 00:32:35,380
<font color="#E5E5E5">replay is is a feature</font><font color="#CCCCCC"> that if you set</font>

647
00:32:31,940 --> 00:32:37,700
it<font color="#E5E5E5"> to true darker on startup would</font>

648
00:32:35,380 --> 00:32:42,050
request and release all the networks

649
00:32:37,700 --> 00:32:44,060
that<font color="#E5E5E5"> it knows about now get default</font>

650
00:32:42,050 --> 00:32:46,550
<font color="#E5E5E5">address space</font><font color="#CCCCCC"> so imagine that you have</font>

651
00:32:44,060 --> 00:32:49,190
<font color="#E5E5E5">remember that</font><font color="#CCCCCC"> that slide</font><font color="#E5E5E5"> where you had</font>

652
00:32:46,550 --> 00:32:51,500
the<font color="#CCCCCC"> network's has two scopes</font><font color="#E5E5E5"> local and</font>

653
00:32:49,190 --> 00:32:53,840
global<font color="#E5E5E5"> however they also have</font>

654
00:32:51,500 --> 00:32:56,390
<font color="#CCCCCC">identifiers so there is a thing called</font>

655
00:32:53,840 --> 00:32:59,470
default address<font color="#E5E5E5"> space that's what I</font>

656
00:32:56,390 --> 00:33:04,060
called<font color="#CCCCCC"> vrf address space so it would be</font>

657
00:32:59,470 --> 00:33:08,990
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> plug-in can</font><font color="#E5E5E5"> say this</font>

658
00:33:04,060 --> 00:33:11,419
identifies<font color="#E5E5E5"> this identifies this the</font>

659
00:33:08,990 --> 00:33:15,350
global space of this instance of a

660
00:33:11,420 --> 00:33:19,910
plugin<font color="#CCCCCC"> an example would</font><font color="#E5E5E5"> be lets say you</font>

661
00:33:15,350 --> 00:33:22,429
around<font color="#E5E5E5"> to two drivers one from one</font>

662
00:33:19,910 --> 00:33:23,030
vendor<font color="#E5E5E5"> and another one and another one</font>

663
00:33:22,430 --> 00:33:25,640
provide

664
00:33:23,030 --> 00:33:30,620
by a different vendor<font color="#E5E5E5"> and both of them</font>

665
00:33:25,640 --> 00:33:33,140
<font color="#E5E5E5">use global equal global so now</font><font color="#CCCCCC"> darker</font>

666
00:33:30,620 --> 00:33:35,330
would think about<font color="#E5E5E5"> those two drivers as</font>

667
00:33:33,140 --> 00:33:37,490
being the same<font color="#E5E5E5"> why because the</font>

668
00:33:35,330 --> 00:33:40,699
<font color="#CCCCCC">identifiers the</font><font color="#E5E5E5"> global identifier is the</font>

669
00:33:37,490 --> 00:33:42,800
same so when you when if you will be

670
00:33:40,700 --> 00:33:45,560
<font color="#CCCCCC">running multiple plugins on the same box</font>

671
00:33:42,800 --> 00:33:47,870
make sure<font color="#E5E5E5"> that the address</font><font color="#CCCCCC"> spaces are</font>

672
00:33:45,560 --> 00:33:50,899
different<font color="#E5E5E5"> between between each instance</font>

673
00:33:47,870 --> 00:33:55,280
of<font color="#E5E5E5"> a plugin</font><font color="#CCCCCC"> that also</font><font color="#E5E5E5"> allows you to</font><font color="#CCCCCC"> run</font>

674
00:33:50,900 --> 00:33:57,740
code<font color="#E5E5E5"> same</font><font color="#CCCCCC"> plugin runs multiple replicas</font>

675
00:33:55,280 --> 00:34:01,670
of that same plugin let's say you want

676
00:33:57,740 --> 00:34:06,920
to provide<font color="#E5E5E5"> network segmentation and</font>

677
00:34:01,670 --> 00:34:10,970
isolation<font color="#E5E5E5"> you would run a</font><font color="#CCCCCC"> plugin for</font>

678
00:34:06,920 --> 00:34:12,830
<font color="#CCCCCC">let's say</font><font color="#E5E5E5"> network</font><font color="#CCCCCC"> red</font><font color="#E5E5E5"> network for the</font>

679
00:34:10,969 --> 00:34:15,439
blue network and for<font color="#E5E5E5"> the green network</font>

680
00:34:12,830 --> 00:34:17,418
and when you do<font color="#E5E5E5"> that for each</font><font color="#CCCCCC"> of them</font>

681
00:34:15,440 --> 00:34:20,780
<font color="#CCCCCC">you assign different different global</font>

682
00:34:17,418 --> 00:34:23,509
values<font color="#E5E5E5"> because those are the values</font><font color="#CCCCCC"> that</font>

683
00:34:20,780 --> 00:34:25,429
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> later on</font><font color="#E5E5E5"> populate to the key</font>

684
00:34:23,510 --> 00:34:30,380
value store the<font color="#E5E5E5"> global key value store</font>

685
00:34:25,429 --> 00:34:32,540
they they that they all share here is

686
00:34:30,380 --> 00:34:34,850
how the network<font color="#E5E5E5"> gets requested so when</font>

687
00:34:32,540 --> 00:34:38,210
you remember<font color="#E5E5E5"> we run that command network</font>

688
00:34:34,850 --> 00:34:41,060
create<font color="#CCCCCC"> darker create</font><font color="#E5E5E5"> network so first</font>

689
00:34:38,210 --> 00:34:44,389
thing that happens<font color="#E5E5E5"> on the actual physics</font>

690
00:34:41,060 --> 00:34:48,830
of it<font color="#E5E5E5"> is request pool so here the pool</font>

691
00:34:44,389 --> 00:34:51,770
ID is 10.4 and there is a subtle<font color="#CCCCCC"> thing</font>

692
00:34:48,830 --> 00:34:55,449
<font color="#E5E5E5">there called options so someone</font>

693
00:34:51,770 --> 00:34:58,670
yesterday<font color="#E5E5E5"> told me reminded me about</font>

694
00:34:55,449 --> 00:35:01,640
radius<font color="#E5E5E5"> so think</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> like key value key</font>

695
00:34:58,670 --> 00:35:03,740
value pairs<font color="#E5E5E5"> so in the options you can</font>

696
00:35:01,640 --> 00:35:06,350
you can pass on key value pairs and

697
00:35:03,740 --> 00:35:10,370
<font color="#CCCCCC">those</font><font color="#E5E5E5"> key value pairs would end up being</font>

698
00:35:06,350 --> 00:35:15,380
stored<font color="#E5E5E5"> in key value store now imagine</font>

699
00:35:10,370 --> 00:35:19,210
that you run<font color="#E5E5E5"> BGP process and you want to</font>

700
00:35:15,380 --> 00:35:22,580
<font color="#CCCCCC">advertise your container</font><font color="#E5E5E5"> IP addresses to</font>

701
00:35:19,210 --> 00:35:25,310
to the network<font color="#E5E5E5"> one way of</font><font color="#CCCCCC"> doing that is</font>

702
00:35:22,580 --> 00:35:27,770
<font color="#CCCCCC">to run an agent on</font><font color="#E5E5E5"> each and every host a</font>

703
00:35:25,310 --> 00:35:31,390
<font color="#CCCCCC">beach</font><font color="#E5E5E5"> let something like go</font><font color="#CCCCCC"> BGP you</font>

704
00:35:27,770 --> 00:35:31,390
would be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> establish a</font><font color="#E5E5E5"> session and</font>

705
00:35:31,630 --> 00:35:35,990
advertise the addresses<font color="#E5E5E5"> but another way</font>

706
00:35:34,160 --> 00:35:38,569
<font color="#E5E5E5">to do that same</font><font color="#CCCCCC"> thing</font>

707
00:35:35,990 --> 00:35:40,399
<font color="#E5E5E5">is to monitor key value store for the</font>

708
00:35:38,570 --> 00:35:43,340
changes and have maybe one or<font color="#CCCCCC"> two</font>

709
00:35:40,400 --> 00:35:45,430
<font color="#E5E5E5">sessions for the entire cluster but</font>

710
00:35:43,340 --> 00:35:51,050
achieving the same achieving the same

711
00:35:45,430 --> 00:35:52,879
propagation<font color="#E5E5E5"> with less sessions next</font>

712
00:35:51,050 --> 00:35:56,360
<font color="#CCCCCC">thing that</font><font color="#E5E5E5"> happens is the request</font>

713
00:35:52,880 --> 00:35:57,140
<font color="#CCCCCC">address</font><font color="#E5E5E5"> when you request the address oh</font>

714
00:35:56,360 --> 00:35:59,740
sorry

715
00:35:57,140 --> 00:36:02,560
so we are still<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the network</font><font color="#E5E5E5"> but now</font>

716
00:35:59,740 --> 00:36:05,118
there<font color="#CCCCCC"> was this request address qual</font>

717
00:36:02,560 --> 00:36:08,060
first it threw<font color="#CCCCCC"> me off when I saw that</font>

718
00:36:05,119 --> 00:36:11,270
but then I realized<font color="#CCCCCC"> that actually for</font>

719
00:36:08,060 --> 00:36:13,970
default gateway<font color="#E5E5E5"> docker requests an IP</font>

720
00:36:11,270 --> 00:36:16,790
address<font color="#E5E5E5"> so when you create</font><font color="#CCCCCC"> Network</font><font color="#E5E5E5"> you</font>

721
00:36:13,970 --> 00:36:20,359
<font color="#E5E5E5">actually make</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> calls one call to</font>

722
00:36:16,790 --> 00:36:23,590
create to<font color="#E5E5E5"> create the pool to create the</font>

723
00:36:20,360 --> 00:36:27,350
network<font color="#E5E5E5"> another call is to allocate</font>

724
00:36:23,590 --> 00:36:29,570
<font color="#E5E5E5">request address for the</font><font color="#CCCCCC"> Gateway how do I</font>

725
00:36:27,350 --> 00:36:32,750
know that<font color="#E5E5E5"> you see request address type</font>

726
00:36:29,570 --> 00:36:36,440
and then you have<font color="#CCCCCC"> contactor</font><font color="#E5E5E5"> network</font>

727
00:36:32,750 --> 00:36:40,880
gateway that same mechanism is to use<font color="#E5E5E5"> to</font>

728
00:36:36,440 --> 00:36:42,320
let's say<font color="#E5E5E5"> to pass</font><font color="#CCCCCC"> information about a</font>

729
00:36:40,880 --> 00:36:44,300
<font color="#E5E5E5">MAC address let's say I want my</font>

730
00:36:42,320 --> 00:36:47,270
container to have a<font color="#E5E5E5"> specific nakid MAC</font>

731
00:36:44,300 --> 00:36:53,630
address it will be passed in through<font color="#E5E5E5"> the</font>

732
00:36:47,270 --> 00:36:56,030
options<font color="#E5E5E5"> well so next thing we do we</font>

733
00:36:53,630 --> 00:36:59,660
actually will<font color="#CCCCCC"> start our first</font><font color="#E5E5E5"> container</font>

734
00:36:56,030 --> 00:37:02,650
<font color="#E5E5E5">on that my net and we we want to start</font>

735
00:36:59,660 --> 00:37:02,649
it<font color="#CCCCCC"> with</font><font color="#E5E5E5"> specific IP</font>

736
00:37:09,780 --> 00:37:15,100
when I<font color="#E5E5E5"> stopped that container so I</font>

737
00:37:12,670 --> 00:37:17,380
started the container<font color="#E5E5E5"> but when I click</font>

738
00:37:15,100 --> 00:37:20,830
stop what will happen

739
00:37:17,380 --> 00:37:23,110
<font color="#CCCCCC">darker would release that IP so</font>

740
00:37:20,830 --> 00:37:24,640
important distinction<font color="#E5E5E5"> IPS are not</font>

741
00:37:23,110 --> 00:37:26,320
released when you remove the container

742
00:37:24,640 --> 00:37:28,540
<font color="#E5E5E5">IPS are released when you start the</font>

743
00:37:26,320 --> 00:37:31,600
container<font color="#CCCCCC"> it means that in any kind</font><font color="#E5E5E5"> of</font>

744
00:37:28,540 --> 00:37:33,910
distributed distributed work when you

745
00:37:31,600 --> 00:37:35,529
stop a process and<font color="#CCCCCC"> you reinitiate the</font>

746
00:37:33,910 --> 00:37:39,160
<font color="#CCCCCC">process</font><font color="#E5E5E5"> unless</font><font color="#CCCCCC"> you have sophisticated</font>

747
00:37:35,530 --> 00:37:41,020
<font color="#CCCCCC">eye eye pan mechanisms</font><font color="#E5E5E5"> you might not get</font>

748
00:37:39,160 --> 00:37:43,890
the same<font color="#CCCCCC"> IP address</font><font color="#E5E5E5"> although at the</font>

749
00:37:41,020 --> 00:37:43,890
start you got that

750
00:37:53,209 --> 00:37:56,959
when we remove<font color="#E5E5E5"> our network what happens</font>

751
00:37:55,949 --> 00:38:01,109
there

752
00:37:56,959 --> 00:38:03,959
we get first thing<font color="#E5E5E5"> so remember when we</font>

753
00:38:01,109 --> 00:38:05,939
requested our network we also requested

754
00:38:03,959 --> 00:38:07,979
the<font color="#E5E5E5"> IP address for the</font><font color="#CCCCCC"> Gateway</font><font color="#E5E5E5"> so the</font>

755
00:38:05,939 --> 00:38:13,140
first thing you do<font color="#E5E5E5"> when you remove the</font>

756
00:38:07,979 --> 00:38:15,479
network you actually you actually<font color="#E5E5E5"> do the</font>

757
00:38:13,140 --> 00:38:17,489
release of the default gateway<font color="#CCCCCC"> why it's</font>

758
00:38:15,479 --> 00:38:20,189
important because<font color="#E5E5E5"> maybe that should</font><font color="#CCCCCC"> be</font>

759
00:38:17,489 --> 00:38:22,289
the trigger<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> say for some other</font>

760
00:38:20,189 --> 00:38:27,779
external<font color="#CCCCCC"> mechanism to synchronize other</font>

761
00:38:22,289 --> 00:38:30,390
<font color="#E5E5E5">network</font><font color="#CCCCCC"> information and then</font><font color="#E5E5E5"> after that</font>

762
00:38:27,779 --> 00:38:33,059
you<font color="#E5E5E5"> have the release</font><font color="#CCCCCC"> bull</font><font color="#E5E5E5"> call which is</font>

763
00:38:30,390 --> 00:38:38,038
basically releases the network for from

764
00:38:33,059 --> 00:38:40,579
the from the<font color="#E5E5E5"> darker instance but also if</font>

765
00:38:38,039 --> 00:38:43,859
<font color="#E5E5E5">you</font><font color="#CCCCCC"> use a</font><font color="#E5E5E5"> global Global global global</font>

766
00:38:40,579 --> 00:38:45,449
scope<font color="#E5E5E5"> for them for the created it will</font>

767
00:38:43,859 --> 00:38:48,839
also<font color="#E5E5E5"> remove that from the key value</font>

768
00:38:45,449 --> 00:38:52,079
store common<font color="#E5E5E5"> issues with</font><font color="#CCCCCC"> IPAM in both</font>

769
00:38:48,839 --> 00:38:54,779
<font color="#E5E5E5">models if</font><font color="#CCCCCC"> there are static IP addressing</font>

770
00:38:52,079 --> 00:38:56,249
is an issue<font color="#E5E5E5"> scaling so imagine you're</font>

771
00:38:54,779 --> 00:38:59,279
starting a container with a fixed IP

772
00:38:56,249 --> 00:39:01,319
address<font color="#CCCCCC"> bypassing - - IP when you want</font>

773
00:38:59,279 --> 00:39:03,059
<font color="#E5E5E5">to scale that application it will</font>

774
00:39:01,319 --> 00:39:04,949
<font color="#CCCCCC">actually pass the same address</font><font color="#E5E5E5"> it will</font>

775
00:39:03,059 --> 00:39:07,619
be the exactly<font color="#E5E5E5"> same</font><font color="#CCCCCC"> assembly that gets</font>

776
00:39:04,949 --> 00:39:11,759
populated and gets run so when that

777
00:39:07,619 --> 00:39:15,150
happens<font color="#E5E5E5"> chances are you would not be</font>

778
00:39:11,759 --> 00:39:17,789
able to<font color="#E5E5E5"> get that same IP</font><font color="#CCCCCC"> because it was</font>

779
00:39:15,150 --> 00:39:21,449
already<font color="#CCCCCC"> taken by the initial instance of</font>

780
00:39:17,789 --> 00:39:23,099
it when you would try<font color="#CCCCCC"> to when you will</font>

781
00:39:21,449 --> 00:39:24,900
try<font color="#CCCCCC"> to do the traditional technique</font>

782
00:39:23,099 --> 00:39:26,880
which is basically<font color="#E5E5E5"> MAC address IP</font>

783
00:39:24,900 --> 00:39:29,759
address<font color="#CCCCCC"> mapping it will</font><font color="#E5E5E5"> also not work</font>

784
00:39:26,880 --> 00:39:32,429
<font color="#CCCCCC">for you</font><font color="#E5E5E5"> because your assembly will try</font>

785
00:39:29,759 --> 00:39:35,249
to use<font color="#CCCCCC"> the same MAC address</font><font color="#E5E5E5"> and darker</font>

786
00:39:32,429 --> 00:39:37,079
would fail - to provide service because

787
00:39:35,249 --> 00:39:40,069
it will say<font color="#E5E5E5"> to you well that MAC address</font>

788
00:39:37,079 --> 00:39:42,449
<font color="#CCCCCC">is already</font><font color="#E5E5E5"> taken lack of</font><font color="#CCCCCC"> endpoints so</font>

789
00:39:40,069 --> 00:39:44,459
what you want to<font color="#E5E5E5"> see is you want to be</font>

790
00:39:42,449 --> 00:39:46,309
able<font color="#CCCCCC"> to query for metrics for versions</font>

791
00:39:44,459 --> 00:39:50,098
you want to be able to<font color="#E5E5E5"> know the</font><font color="#CCCCCC"> leases</font>

792
00:39:46,309 --> 00:39:52,259
on the MAC<font color="#CCCCCC"> address the</font><font color="#E5E5E5"> configuration</font><font color="#CCCCCC"> you</font>

793
00:39:50,099 --> 00:39:54,509
want<font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to shut down shut</font><font color="#E5E5E5"> down</font>

794
00:39:52,259 --> 00:39:58,890
the driver and all of these<font color="#E5E5E5"> things those</font>

795
00:39:54,509 --> 00:40:01,559
<font color="#E5E5E5">are common how do you write here are the</font>

796
00:39:58,890 --> 00:40:04,450
<font color="#E5E5E5">things that you need to to worry about</font>

797
00:40:01,559 --> 00:40:06,760
<font color="#E5E5E5">when you write a driver</font>

798
00:40:04,450 --> 00:40:08,589
so you need to worry<font color="#E5E5E5"> about key value</font>

799
00:40:06,760 --> 00:40:11,320
store<font color="#E5E5E5"> you need to worry about virtual</font>

800
00:40:08,589 --> 00:40:13,630
switch<font color="#E5E5E5"> and you have to be able to</font>

801
00:40:11,320 --> 00:40:17,250
synchronize to synchronize<font color="#E5E5E5"> that yellow</font>

802
00:40:13,630 --> 00:40:20,050
layer you have<font color="#CCCCCC"> to be able to synchronize</font>

803
00:40:17,250 --> 00:40:22,660
the information about<font color="#E5E5E5"> network ports</font>

804
00:40:20,050 --> 00:40:25,060
<font color="#E5E5E5">because if someone removed the container</font>

805
00:40:22,660 --> 00:40:27,670
<font color="#E5E5E5">but that information did not propagate</font>

806
00:40:25,060 --> 00:40:30,160
to<font color="#E5E5E5"> the virtual switch for example then</font>

807
00:40:27,670 --> 00:40:33,869
in case of<font color="#E5E5E5"> open V switch</font><font color="#CCCCCC"> you will still</font>

808
00:40:30,160 --> 00:40:33,868
have that port as being alive

809
00:40:35,430 --> 00:40:44,200
so most of you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> senior people in</font><font color="#CCCCCC"> the</font>

810
00:40:42,460 --> 00:40:47,079
networking in<font color="#E5E5E5"> the networking industry</font>

811
00:40:44,200 --> 00:40:49,598
<font color="#CCCCCC">and what will lack</font><font color="#E5E5E5"> from my</font><font color="#CCCCCC"> perspective</font>

812
00:40:47,079 --> 00:40:50,950
<font color="#CCCCCC">is mentorship so I want to mentor</font><font color="#E5E5E5"> and</font>

813
00:40:49,599 --> 00:40:53,650
there are hundreds of other<font color="#E5E5E5"> people that</font>

814
00:40:50,950 --> 00:40:56,529
<font color="#E5E5E5">want mentors so please participate on</font>

815
00:40:53,650 --> 00:40:59,500
github<font color="#E5E5E5"> on slack engage without or with</font>

816
00:40:56,530 --> 00:41:01,690
<font color="#E5E5E5">younger</font><font color="#CCCCCC"> people and try to</font><font color="#E5E5E5"> bring your</font>

817
00:40:59,500 --> 00:41:04,450
values the<font color="#E5E5E5"> things that you collected</font>

818
00:41:01,690 --> 00:41:06,849
over the years<font color="#CCCCCC"> to their table and</font><font color="#E5E5E5"> share</font>

819
00:41:04,450 --> 00:41:09,430
<font color="#E5E5E5">that</font><font color="#CCCCCC"> share that</font><font color="#E5E5E5"> with them</font>

820
00:41:06,849 --> 00:41:11,920
we have meetups in New York<font color="#E5E5E5"> so like we</font>

821
00:41:09,430 --> 00:41:14,799
have<font color="#CCCCCC"> Nanak</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> in New York we have and</font>

822
00:41:11,920 --> 00:41:19,160
why not<font color="#E5E5E5"> and if you have any questions</font>

823
00:41:14,800 --> 00:41:25,100
ping me<font color="#E5E5E5"> on</font><font color="#CCCCCC"> on github thank you</font>

824
00:41:19,160 --> 00:41:28,279
[Applause]

825
00:41:25,100 --> 00:41:28,279
<font color="#E5E5E5">all right</font>

