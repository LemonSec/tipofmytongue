1
00:00:00,000 --> 00:00:05,730
stop this is<font color="#E5E5E5"> about tools that we have</font>

2
00:00:03,449 --> 00:00:08,068
<font color="#E5E5E5">developed at the AT&T center for</font>

3
00:00:05,730 --> 00:00:11,070
internet research and it's called tea

4
00:00:08,069 --> 00:00:12,990
but it's the TCP behavior<font color="#E5E5E5"> identification</font>

5
00:00:11,070 --> 00:00:15,059
tube at<font color="#CCCCCC"> the joint work between myself</font>

6
00:00:12,990 --> 00:00:19,560
and Sally<font color="#E5E5E5"> Florence or other colleagues</font>

7
00:00:15,059 --> 00:00:21,480
at AT&T have also contributed to it the

8
00:00:19,560 --> 00:00:23,189
outline of the talkers I'll begin by

9
00:00:21,480 --> 00:00:25,800
describing the motivations why do we

10
00:00:23,189 --> 00:00:28,948
need a tool to identify<font color="#CCCCCC"> TTP behavior or</font>

11
00:00:25,800 --> 00:00:30,660
why do we need<font color="#CCCCCC"> to do this out followed</font>

12
00:00:28,949 --> 00:00:33,750
<font color="#CCCCCC">by that</font><font color="#E5E5E5"> I will briefly describe the tool</font>

13
00:00:30,660 --> 00:00:35,520
I will discuss<font color="#E5E5E5"> some of the anomalies we</font>

14
00:00:33,750 --> 00:00:37,860
have found in current 200 TCP

15
00:00:35,520 --> 00:00:43,079
implementations conclude by describing

16
00:00:37,860 --> 00:00:45,149
your future work so TCP handles majority

17
00:00:43,079 --> 00:00:46,829
of today's Internet traffic people

18
00:00:45,149 --> 00:00:48,899
report all kinds of numbers ninety

19
00:00:46,829 --> 00:00:50,820
percent ninety-five percent so

20
00:00:48,899 --> 00:00:53,010
understanding TCP behavior is clearly

21
00:00:50,820 --> 00:00:55,730
important it's obviously important for

22
00:00:53,010 --> 00:00:58,858
voice vendors they need to<font color="#CCCCCC"> improve their</font>

23
00:00:55,730 --> 00:01:01,769
performance of their TCB stacks it's

24
00:00:58,859 --> 00:01:03,120
also important for isps because a lot of

25
00:01:01,770 --> 00:01:04,949
their traffic is being controlled by

26
00:01:03,120 --> 00:01:07,110
this protocol so understanding its

27
00:01:04,949 --> 00:01:08,580
behavior is clearly important there are

28
00:01:07,110 --> 00:01:10,110
many<font color="#E5E5E5"> documents various RFC's</font>

29
00:01:08,580 --> 00:01:14,039
<font color="#CCCCCC">internet-drafts and so on</font><font color="#E5E5E5"> and so forth</font>

30
00:01:10,110 --> 00:01:16,680
that specify how TCP should behave but

31
00:01:14,040 --> 00:01:19,439
<font color="#E5E5E5">of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> the implementations don't</font>

32
00:01:16,680 --> 00:01:21,830
always match specifications partly by

33
00:01:19,439 --> 00:01:24,720
design partly because<font color="#E5E5E5"> of implementation</font>

34
00:01:21,830 --> 00:01:27,990
coding bugs and all kinds of things so

35
00:01:24,720 --> 00:01:29,610
it is essential that we understand<font color="#E5E5E5"> what</font>

36
00:01:27,990 --> 00:01:31,380
is the difference between what the RSS

37
00:01:29,610 --> 00:01:33,840
say that the<font color="#CCCCCC"> TCP should do and what</font>

38
00:01:31,380 --> 00:01:36,329
various teeth will actually do here is a

39
00:01:33,840 --> 00:01:38,610
quick example the initial<font color="#E5E5E5"> window that is</font>

40
00:01:36,329 --> 00:01:41,699
<font color="#E5E5E5">used by a TCP connection is the amount</font>

41
00:01:38,610 --> 00:01:43,829
of data just giving a simple description

42
00:01:41,700 --> 00:01:45,810
here amount of<font color="#E5E5E5"> data it sends out in a</font>

43
00:01:43,829 --> 00:01:47,220
burst before it receives any

44
00:01:45,810 --> 00:01:48,990
<font color="#E5E5E5">acknowledgement so for example when a</font>

45
00:01:47,220 --> 00:01:50,220
web server gets a request it is allowed

46
00:01:48,990 --> 00:01:52,829
to<font color="#E5E5E5"> send out a certain amount of data</font>

47
00:01:50,220 --> 00:01:56,429
before the receiver<font color="#E5E5E5"> sends any acts</font><font color="#CCCCCC"> ok</font>

48
00:01:52,829 --> 00:01:59,399
there is an RFC about this 24-foot 14

49
00:01:56,430 --> 00:02:00,990
which gives you this formula that shows

50
00:01:59,399 --> 00:02:03,869
how the initial windows should be

51
00:02:00,990 --> 00:02:05,789
calculated for a given<font color="#E5E5E5"> MSS so if you</font>

52
00:02:03,869 --> 00:02:08,940
assume a nemesis of<font color="#E5E5E5"> 512 which is a</font>

53
00:02:05,790 --> 00:02:10,319
normal MSS a TCP implementation is

54
00:02:08,940 --> 00:02:11,038
allowed<font color="#CCCCCC"> to send a burst of about two</font>

55
00:02:10,318 --> 00:02:12,988
thousand<font color="#E5E5E5"> five</font>

56
00:02:11,038 --> 00:02:16,200
but we<font color="#CCCCCC"> have found using Tippett that</font>

57
00:02:12,989 --> 00:02:21,349
there are<font color="#CCCCCC"> TCPS out there one for example</font>

58
00:02:16,200 --> 00:02:24,689
this stack that's running on<font color="#CCCCCC"> www.qik.com</font>

59
00:02:21,349 --> 00:02:26,670
flus bites with emesis of birth and just

60
00:02:24,689 --> 00:02:28,230
for fun we tried a nemesis of 100 and we

61
00:02:26,670 --> 00:02:30,629
<font color="#E5E5E5">found that this web server will send a</font>

62
00:02:28,230 --> 00:02:35,899
burst of a tea packets without receiving

63
00:02:30,629 --> 00:02:39,328
the single act<font color="#E5E5E5"> okay and and this large</font>

64
00:02:35,900 --> 00:02:42,269
such last verse of clearly mean

65
00:02:39,329 --> 00:02:44,040
buffering problems lost delays so it's

66
00:02:42,269 --> 00:02:47,459
important to<font color="#E5E5E5"> see what PCP is that are</font>

67
00:02:44,040 --> 00:02:49,709
out there they actually they do now how

68
00:02:47,459 --> 00:02:51,299
do you detect misbehaving<font color="#CCCCCC"> TCPS so there</font>

69
00:02:49,709 --> 00:02:56,189
<font color="#E5E5E5">are two ways of</font><font color="#CCCCCC"> doing it one is passive</font>

70
00:02:51,299 --> 00:02:58,409
detection 196 197 basically carried out

71
00:02:56,189 --> 00:03:00,450
thousands and thousands of<font color="#CCCCCC"> TPP transfers</font>

72
00:02:58,409 --> 00:03:03,450
across notes there were spread all over

73
00:03:00,450 --> 00:03:06,629
<font color="#E5E5E5">the internet and he looked at the</font><font color="#CCCCCC"> TCP</font>

74
00:03:03,450 --> 00:03:08,040
<font color="#CCCCCC">dump races that resulted and found</font>

75
00:03:06,629 --> 00:03:09,810
several anomalies he wrote a couple

76
00:03:08,040 --> 00:03:12,959
papers about that<font color="#E5E5E5"> I think he also gave a</font>

77
00:03:09,810 --> 00:03:14,760
talk here at nanog but such passive

78
00:03:12,959 --> 00:03:16,199
detection has its limitations for

79
00:03:14,760 --> 00:03:18,090
example you<font color="#E5E5E5"> want to figure out how a</font>

80
00:03:16,199 --> 00:03:20,609
particular<font color="#E5E5E5"> TCP implementation behaves</font>

81
00:03:18,090 --> 00:03:22,409
when say for example syn ACK is lost<font color="#CCCCCC"> ok</font>

82
00:03:20,609 --> 00:03:24,750
now you're going to have to do keep on

83
00:03:22,409 --> 00:03:26,429
doing this until you<font color="#E5E5E5"> actually get a TCP</font>

84
00:03:24,750 --> 00:03:29,250
dump<font color="#E5E5E5"> race in which</font><font color="#CCCCCC"> cynic is lost and</font>

85
00:03:26,430 --> 00:03:31,680
then you see what happens<font color="#E5E5E5"> ok so that's</font>

86
00:03:29,250 --> 00:03:34,019
kind of time consuming so<font color="#CCCCCC"> we</font><font color="#E5E5E5"> keep it is</font>

87
00:03:31,680 --> 00:03:36,510
a tool that actively proves<font color="#CCCCCC"> TCP stacks</font>

88
00:03:34,019 --> 00:03:39,750
at various web servers<font color="#E5E5E5"> ok to test</font><font color="#CCCCCC"> it</font>

89
00:03:36,510 --> 00:03:41,519
<font color="#CCCCCC">behave it here is an example now the</font>

90
00:03:39,750 --> 00:03:43,919
basic<font color="#CCCCCC"> idea is like this you basically</font>

91
00:03:41,519 --> 00:03:45,840
<font color="#CCCCCC">send fabricated TCP packets over raw IP</font>

92
00:03:43,919 --> 00:03:48,959
<font color="#E5E5E5">sockets so you need root permission ok</font>

93
00:03:45,840 --> 00:03:50,790
so for<font color="#E5E5E5"> example you</font><font color="#CCCCCC"> send us in and then</font>

94
00:03:48,959 --> 00:03:52,319
you direct the first firewall that will

95
00:03:50,790 --> 00:03:54,750
prevent the colonel from<font color="#E5E5E5"> seeing the</font>

96
00:03:52,319 --> 00:03:57,328
cynic that comes<font color="#E5E5E5"> back ok otherwise the</font>

97
00:03:54,750 --> 00:03:58,799
corner will say<font color="#E5E5E5"> act for a packet it</font>

98
00:03:57,329 --> 00:04:01,829
never sent it will send<font color="#CCCCCC"> a reset in your</font>

99
00:03:58,799 --> 00:04:04,409
<font color="#E5E5E5">test will be doomed right there at</font><font color="#CCCCCC"> the</font>

100
00:04:01,829 --> 00:04:06,209
same time the BPF device will deliver

101
00:04:04,409 --> 00:04:09,358
this blog started up<font color="#E5E5E5"> to the user process</font>

102
00:04:06,209 --> 00:04:11,159
that sent the syn packet and now you can

103
00:04:09,359 --> 00:04:13,229
respond<font color="#CCCCCC"> to it in any way you want so</font>

104
00:04:11,159 --> 00:04:15,689
what the net effect what we have is<font color="#CCCCCC"> a</font>

105
00:04:13,229 --> 00:04:18,120
user level user control level<font color="#CCCCCC"> tcp</font>

106
00:04:15,689 --> 00:04:20,130
without any colonel changes<font color="#E5E5E5"> ok so this</font>

107
00:04:18,120 --> 00:04:21,599
work is based on the sting project that

108
00:04:20,130 --> 00:04:23,590
was done it in your city of<font color="#CCCCCC"> washington</font>

109
00:04:21,599 --> 00:04:26,120
by stefan cel

110
00:04:23,590 --> 00:04:27,530
so as an example for example I've

111
00:04:26,120 --> 00:04:29,180
mentioned the initial winner on I'll

112
00:04:27,530 --> 00:04:32,210
keep using this as a running example

113
00:04:29,180 --> 00:04:34,400
<font color="#E5E5E5">okay how do you do the mind what initial</font>

114
00:04:32,210 --> 00:04:36,680
window of web server is using<font color="#E5E5E5"> okay so</font>

115
00:04:34,400 --> 00:04:38,150
you send us in you receive the syn<font color="#CCCCCC"> ACK</font>

116
00:04:36,680 --> 00:04:39,940
back<font color="#CCCCCC"> okay now you have established</font><font color="#E5E5E5"> a</font>

117
00:04:38,150 --> 00:04:42,770
connection you send an HTTP GET request

118
00:04:39,940 --> 00:04:45,800
<font color="#E5E5E5">okay for the basic document and you</font>

119
00:04:42,770 --> 00:04:48,169
don't add any incoming packet<font color="#E5E5E5"> okay you</font>

120
00:04:45,800 --> 00:04:49,699
wait since you're not<font color="#E5E5E5"> acting in any of</font>

121
00:04:48,169 --> 00:04:51,680
the packets that are coming in after

122
00:04:49,699 --> 00:04:53,750
some time the<font color="#CCCCCC"> TCP stack at the web</font>

123
00:04:51,680 --> 00:04:55,729
server will pre transmit the first act

124
00:04:53,750 --> 00:04:57,770
at this<font color="#E5E5E5"> point you terminate the test and</font>

125
00:04:55,729 --> 00:05:00,020
<font color="#CCCCCC">then the initial window is the</font><font color="#E5E5E5"> maximum</font>

126
00:04:57,770 --> 00:05:01,880
<font color="#CCCCCC">signals number eocene</font><font color="#E5E5E5"> okay and you can</font>

127
00:05:00,020 --> 00:05:03,799
check this with several MSS value since

128
00:05:01,880 --> 00:05:05,810
you have it's a completely user control

129
00:05:03,800 --> 00:05:07,400
about TCP you can say whatever i misses

130
00:05:05,810 --> 00:05:08,750
you want and<font color="#CCCCCC"> you know this will let you</font>

131
00:05:07,400 --> 00:05:09,948
figure<font color="#E5E5E5"> out whether it behaves</font>

132
00:05:08,750 --> 00:05:12,169
differently with different domestic

133
00:05:09,949 --> 00:05:15,320
sides okay so this is an example of how

134
00:05:12,169 --> 00:05:18,198
<font color="#E5E5E5">things are done we have implemented many</font>

135
00:05:15,320 --> 00:05:20,240
such tests so for example<font color="#E5E5E5"> and of</font><font color="#CCCCCC"> course</font>

136
00:05:18,199 --> 00:05:21,560
<font color="#E5E5E5">this is not all as simple as it sounds</font>

137
00:05:20,240 --> 00:05:22,819
and there are several difficulties and

138
00:05:21,560 --> 00:05:26,360
<font color="#E5E5E5">I'll come back</font><font color="#CCCCCC"> to them</font><font color="#E5E5E5"> at the end of the</font>

139
00:05:22,819 --> 00:05:29,810
presentation we have implemented several

140
00:05:26,360 --> 00:05:32,780
tests<font color="#E5E5E5"> so far some of them are handshake</font>

141
00:05:29,810 --> 00:05:34,370
test whether the how many<font color="#CCCCCC"> pcps that are</font>

142
00:05:32,780 --> 00:05:36,859
out there that<font color="#E5E5E5"> for example use time</font>

143
00:05:34,370 --> 00:05:40,130
stand how many CPC peas are<font color="#E5E5E5"> stacked</font>

144
00:05:36,860 --> 00:05:42,289
capable how do TCB respond to congestion

145
00:05:40,130 --> 00:05:45,080
or packet drops with the reducer

146
00:05:42,289 --> 00:05:46,669
congestion window which exact flavor of

147
00:05:45,080 --> 00:05:49,159
congestion can you know<font color="#CCCCCC"> algorithm</font><font color="#E5E5E5"> they</font>

148
00:05:46,669 --> 00:05:52,698
use<font color="#E5E5E5"> you RINO RINO doubt there have been</font>

149
00:05:49,159 --> 00:05:56,090
several proposed thanks selective

150
00:05:52,699 --> 00:05:58,310
acknowledgments to the clients<font color="#E5E5E5"> of the</font>

151
00:05:56,090 --> 00:06:01,638
web servers correct<font color="#E5E5E5"> construction acts</font>

152
00:05:58,310 --> 00:06:03,409
directly when a client send sacks do

153
00:06:01,639 --> 00:06:05,780
they respond<font color="#CCCCCC"> to stacks directly I mean</font>

154
00:06:03,409 --> 00:06:08,509
most of the<font color="#E5E5E5"> major oasis that are out</font>

155
00:06:05,780 --> 00:06:10,580
there linux for example and windows 2000

156
00:06:08,509 --> 00:06:12,169
they provide selective<font color="#CCCCCC"> acknowledgement</font>

157
00:06:10,580 --> 00:06:14,270
and we want to see whether this is being

158
00:06:12,169 --> 00:06:15,740
used effectively there are other tests

159
00:06:14,270 --> 00:06:19,490
for example what is<font color="#CCCCCC"> the initial window</font>

160
00:06:15,740 --> 00:06:21,020
there we saw whether there are any TCP

161
00:06:19,490 --> 00:06:25,300
implementing implementations that are

162
00:06:21,020 --> 00:06:28,430
out there that handle ecn surrogate<font color="#CCCCCC"> okay</font>

163
00:06:25,300 --> 00:06:31,470
so<font color="#CCCCCC"> i'm going to present some results now</font>

164
00:06:28,430 --> 00:06:35,340
<font color="#E5E5E5">and the</font><font color="#CCCCCC"> background for this results</font>

165
00:06:31,470 --> 00:06:37,740
is we had to list of web servers one we

166
00:06:35,340 --> 00:06:41,609
just<font color="#CCCCCC"> got from hundred hot calm and I</font>

167
00:06:37,740 --> 00:06:43,610
will<font color="#E5E5E5"> call this list the hotlist it's we</font>

168
00:06:41,610 --> 00:06:46,110
are<font color="#CCCCCC"> not claiming that these lists are</font>

169
00:06:43,610 --> 00:06:48,630
represented even anyways just something

170
00:06:46,110 --> 00:06:52,230
we got<font color="#E5E5E5"> off the web it has 200 unique IP</font>

171
00:06:48,630 --> 00:06:54,180
addresses we done got a trace from an

172
00:06:52,230 --> 00:06:57,270
ISP proxy it was given to<font color="#E5E5E5"> us by tax</font>

173
00:06:54,180 --> 00:07:00,090
<font color="#CCCCCC">calcine and it has about 27,000 unique</font>

174
00:06:57,270 --> 00:07:02,340
IP addresses of web servers we repeated

175
00:07:00,090 --> 00:07:04,080
the test at least twice each test that

176
00:07:02,340 --> 00:07:05,849
<font color="#CCCCCC">I'm going to report on and we</font><font color="#E5E5E5"> are going</font>

177
00:07:04,080 --> 00:07:07,530
to report<font color="#E5E5E5"> the results only if the</font>

178
00:07:05,850 --> 00:07:08,850
results are consistent across the runs

179
00:07:07,530 --> 00:07:11,280
and I will describe later why this is

180
00:07:08,850 --> 00:07:13,740
important our isp which is essentially

181
00:07:11,280 --> 00:07:16,200
UC Berkeley it does not allow us to run

182
00:07:13,740 --> 00:07:19,800
n map so we<font color="#E5E5E5"> do not have any correlation</font>

183
00:07:16,200 --> 00:07:22,500
of what anomalies we saw in the<font color="#CCCCCC"> TCP with</font>

184
00:07:19,800 --> 00:07:24,630
what OSS they run have whatever

185
00:07:22,500 --> 00:07:26,210
information we have it has come simply

186
00:07:24,630 --> 00:07:28,530
because people gave it to us voluntarily

187
00:07:26,210 --> 00:07:30,299
if any one<font color="#CCCCCC"> of you is willing</font><font color="#E5E5E5"> to give</font><font color="#CCCCCC"> me</font>

188
00:07:28,530 --> 00:07:34,950
an account and i can run<font color="#E5E5E5"> n map then</font>

189
00:07:30,300 --> 00:07:39,000
please let me know the<font color="#CCCCCC"> initial window</font>

190
00:07:34,950 --> 00:07:42,300
that<font color="#E5E5E5"> i described we ran about 638 test</font>

191
00:07:39,000 --> 00:07:44,850
from the ISDN proxy list that we had and

192
00:07:42,300 --> 00:07:46,590
as<font color="#E5E5E5"> i said we found four hosts that will</font>

193
00:07:44,850 --> 00:07:48,660
pump<font color="#E5E5E5"> out eight thousand bytes without</font>

194
00:07:46,590 --> 00:07:51,210
ever waiting for<font color="#CCCCCC"> an</font><font color="#E5E5E5"> acknowledgement so</font>

195
00:07:48,660 --> 00:07:54,060
that comes out to about 17 packets the

196
00:07:51,210 --> 00:07:57,719
genesis of<font color="#CCCCCC"> 512 about 85 catches emesis</font>

197
00:07:54,060 --> 00:07:59,820
100 and there were several and these are

198
00:07:57,720 --> 00:08:02,370
the people who do it we found<font color="#CCCCCC"> that</font><font color="#E5E5E5"> there</font>

199
00:07:59,820 --> 00:08:05,460
are about of about twelve percent of the

200
00:08:02,370 --> 00:08:07,680
horse use initial windows more than four

201
00:08:05,460 --> 00:08:12,830
packets which is a violation<font color="#E5E5E5"> of what's</font>

202
00:08:07,680 --> 00:08:16,020
required by the RSC<font color="#E5E5E5"> okay time stands</font>

203
00:08:12,830 --> 00:08:18,930
timestamps enable TCP is to better

204
00:08:16,020 --> 00:08:23,370
estimate the retransmission timeout

205
00:08:18,930 --> 00:08:27,200
value and this is essential to improve

206
00:08:23,370 --> 00:08:29,910
TCP performance we used about 136 test

207
00:08:27,200 --> 00:08:31,590
from the<font color="#E5E5E5"> hot list and we found that</font>

208
00:08:29,910 --> 00:08:33,750
<font color="#CCCCCC">twenty-five</font><font color="#E5E5E5"> percent of the service do</font>

209
00:08:31,590 --> 00:08:35,760
not use<font color="#E5E5E5"> timestamps and there are some</font>

210
00:08:33,750 --> 00:08:40,708
notables in this list for example

211
00:08:35,760 --> 00:08:42,640
ebay.com HP com we also found that IBM

212
00:08:40,708 --> 00:08:44,680
host under certain circumstances

213
00:08:42,640 --> 00:08:46,569
I<font color="#CCCCCC"> exos send garbage in the timestamp</font>

214
00:08:44,680 --> 00:08:50,380
options we reported this problem to IBM

215
00:08:46,570 --> 00:08:51,550
and the fix is in the works they said

216
00:08:50,380 --> 00:08:53,140
<font color="#CCCCCC">that they couldn't</font><font color="#E5E5E5"> do it before the</font>

217
00:08:51,550 --> 00:08:56,770
Olympics was over so<font color="#E5E5E5"> hopefully they are</font>

218
00:08:53,140 --> 00:08:58,240
going<font color="#E5E5E5"> to do it now we are not safe said</font>

219
00:08:56,770 --> 00:09:01,120
of<font color="#CCCCCC"> time stamps are used correctly that's</font>

220
00:08:58,240 --> 00:09:03,280
the whole different area and whether the

221
00:09:01,120 --> 00:09:05,560
rap sequence numbers are done correctly

222
00:09:03,280 --> 00:09:10,000
and<font color="#E5E5E5"> things like that we haven't checked</font>

223
00:09:05,560 --> 00:09:12,579
out yet<font color="#CCCCCC"> ok congestion window reduction</font>

224
00:09:10,000 --> 00:09:15,850
so TC peas are expected to cut their

225
00:09:12,580 --> 00:09:18,790
sending rate in half<font color="#E5E5E5"> ok when on each</font>

226
00:09:15,850 --> 00:09:21,160
packet drop and this is essential to the

227
00:09:18,790 --> 00:09:22,480
stability<font color="#CCCCCC"> of the internet that TCP is</font>

228
00:09:21,160 --> 00:09:24,699
reduced their sending rate when they

229
00:09:22,480 --> 00:09:28,450
encounter congestion which they find<font color="#CCCCCC"> out</font>

230
00:09:24,700 --> 00:09:30,910
by experiencing a packet drop<font color="#E5E5E5"> ok we are</font>

231
00:09:28,450 --> 00:09:33,970
<font color="#E5E5E5">about 6,000 or test from the prop</font>

232
00:09:30,910 --> 00:09:36,219
stylist and<font color="#CCCCCC"> the way we did this was we</font>

233
00:09:33,970 --> 00:09:38,280
let the sender window reach about eight

234
00:09:36,220 --> 00:09:40,660
packets and then we dropped one packet

235
00:09:38,280 --> 00:09:43,839
from that point onwards we counted all

236
00:09:40,660 --> 00:09:46,480
the outstanding packets and that told us

237
00:09:43,840 --> 00:09:49,870
whether the coast reduced its<font color="#CCCCCC"> condition</font>

238
00:09:46,480 --> 00:09:51,850
window correctly<font color="#E5E5E5"> ok i'm happy</font><font color="#CCCCCC"> to say</font>

239
00:09:49,870 --> 00:09:53,530
that about<font color="#E5E5E5"> 99% of the hosts are</font>

240
00:09:51,850 --> 00:09:55,990
nevertheless did reduce the congestion

241
00:09:53,530 --> 00:09:59,530
window properly ok but there were some

242
00:09:55,990 --> 00:10:02,980
about 72 hosts ok for example the one

243
00:09:59,530 --> 00:10:04,540
said adobe.com and zdnet com they did

244
00:10:02,980 --> 00:10:06,520
not<font color="#CCCCCC"> reduce their congestion window they</font>

245
00:10:04,540 --> 00:10:08,740
went from eight to seven which is seems

246
00:10:06,520 --> 00:10:11,410
to be kind of strange on the other hand

247
00:10:08,740 --> 00:10:14,170
there is a caveat here I ran this test

248
00:10:11,410 --> 00:10:15,579
with ms<font color="#CCCCCC"> s100 because I wanted</font><font color="#E5E5E5"> to make</font>

249
00:10:14,170 --> 00:10:17,860
sure<font color="#E5E5E5"> that I have enough packets to do</font>

250
00:10:15,580 --> 00:10:20,020
<font color="#E5E5E5">this test ok and I'm not</font><font color="#CCCCCC"> sure whether</font>

251
00:10:17,860 --> 00:10:22,630
that influences the behavior so we are

252
00:10:20,020 --> 00:10:25,150
going to work<font color="#E5E5E5"> with</font><font color="#CCCCCC"> this more and see</font>

253
00:10:22,630 --> 00:10:27,850
what exactly happens here is a quick

254
00:10:25,150 --> 00:10:32,230
plot to see how we did this test so on

255
00:10:27,850 --> 00:10:34,450
the<font color="#CCCCCC"> right hand side you have the USB</font>

256
00:10:32,230 --> 00:10:36,370
port<font color="#CCCCCC"> or comp lot ok well the window was</font>

257
00:10:34,450 --> 00:10:39,130
correctly read it now look at the first

258
00:10:36,370 --> 00:10:41,320
dark back at which we drop around point

259
00:10:39,130 --> 00:10:43,330
six seconds<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> from a window of about</font>

260
00:10:41,320 --> 00:10:45,960
eight packets they were coming back ok

261
00:10:43,330 --> 00:10:48,970
so the x-axis time the y-axis is the

262
00:10:45,960 --> 00:10:51,370
highest white carrot in the packet so we

263
00:10:48,970 --> 00:10:55,270
drop the<font color="#CCCCCC"> eight-pack ok and as you can</font>

264
00:10:51,370 --> 00:10:56,030
see it sent four packets without getting

265
00:10:55,270 --> 00:10:59,720
any further

266
00:10:56,030 --> 00:11:01,610
that were that were so this so basically

267
00:10:59,720 --> 00:11:02,990
what that means is that it reduced his

268
00:11:01,610 --> 00:11:06,050
congestion window at that point from

269
00:11:02,990 --> 00:11:07,820
eight to four<font color="#E5E5E5"> okay the other graph on</font>

270
00:11:06,050 --> 00:11:09,650
the other side you can see<font color="#E5E5E5"> that after</font>

271
00:11:07,820 --> 00:11:11,720
<font color="#E5E5E5">the first packet was dropped it sent</font>

272
00:11:09,650 --> 00:11:14,660
about seven packets so that's incorrect

273
00:11:11,720 --> 00:11:16,550
behavior<font color="#E5E5E5"> okay so this is what we have</font>

274
00:11:14,660 --> 00:11:18,550
found and it would be<font color="#E5E5E5"> interesting to see</font>

275
00:11:16,550 --> 00:11:20,900
what<font color="#E5E5E5"> OS this is why</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> are doing this</font>

276
00:11:18,550 --> 00:11:23,630
whether this has<font color="#E5E5E5"> got anything to do with</font>

277
00:11:20,900 --> 00:11:28,130
the MSS that we are using and things

278
00:11:23,630 --> 00:11:30,260
like that selective<font color="#E5E5E5"> acknowledgement</font>

279
00:11:28,130 --> 00:11:33,020
selective acknowledgments are now

280
00:11:30,260 --> 00:11:35,780
available through most major operating

281
00:11:33,020 --> 00:11:37,550
systems to linux I think all versions<font color="#CCCCCC"> of</font>

282
00:11:35,780 --> 00:11:40,910
<font color="#E5E5E5">Lin moves of the versions of Linux that</font>

283
00:11:37,550 --> 00:11:44,990
are out there windows 2000 windows 98 I

284
00:11:40,910 --> 00:11:48,110
<font color="#E5E5E5">don't know about</font><font color="#CCCCCC"> Windows 95 so we ran</font>

285
00:11:44,990 --> 00:11:50,740
about 136 test from the<font color="#CCCCCC"> Hot List</font><font color="#E5E5E5"> and we</font>

286
00:11:48,110 --> 00:11:52,610
found that<font color="#E5E5E5"> forty-two percent of major</font>

287
00:11:50,740 --> 00:11:56,690
posts that are out there they are not

288
00:11:52,610 --> 00:12:00,410
stack hay river so for example<font color="#CCCCCC"> Netscape</font>

289
00:11:56,690 --> 00:12:02,390
<font color="#E5E5E5">com cnn.com none of them ransacked and</font>

290
00:12:00,410 --> 00:12:03,980
of course sac is a bidirectional think

291
00:12:02,390 --> 00:12:05,630
in the sense that both client and the

292
00:12:03,980 --> 00:12:09,320
server have to be able<font color="#E5E5E5"> to do it before</font>

293
00:12:05,630 --> 00:12:11,300
it takes effect<font color="#E5E5E5"> okay what's worse is</font>

294
00:12:09,320 --> 00:12:13,730
that many of<font color="#E5E5E5"> these fat capable host the</font>

295
00:12:11,300 --> 00:12:15,920
fifty-eight percent was that actually do

296
00:12:13,730 --> 00:12:18,970
claim that they do<font color="#CCCCCC"> SAT they don't seem</font>

297
00:12:15,920 --> 00:12:21,979
to do it correctly so we'll see how<font color="#E5E5E5"> okay</font>

298
00:12:18,970 --> 00:12:23,660
so we're at about 2,000 test from the

299
00:12:21,980 --> 00:12:26,210
proxy list to see whether the stack is

300
00:12:23,660 --> 00:12:27,469
<font color="#E5E5E5">used correctly and the test goes like</font>

301
00:12:26,210 --> 00:12:29,510
this we let the window reach eight

302
00:12:27,470 --> 00:12:32,060
packets and we dropped<font color="#CCCCCC"> 6 and the 8</font>

303
00:12:29,510 --> 00:12:35,090
packet now if<font color="#E5E5E5"> sac is implemented</font>

304
00:12:32,060 --> 00:12:36,949
correctly as it<font color="#CCCCCC"> should as the RFC says</font>

305
00:12:35,090 --> 00:12:39,200
okay then they should be<font color="#E5E5E5"> retransmitted</font>

306
00:12:36,950 --> 00:12:41,300
together but if it's doing the default

307
00:12:39,200 --> 00:12:43,340
New Reno Reno behavior then you will see

308
00:12:41,300 --> 00:12:45,229
only retransmission of sex which<font color="#CCCCCC"> is sort</font>

309
00:12:43,340 --> 00:12:48,050
of a degrading in<font color="#E5E5E5"> the performance okay</font>

310
00:12:45,230 --> 00:12:49,460
and this is this was a very surprising

311
00:12:48,050 --> 00:12:52,250
is that we<font color="#E5E5E5"> found that only about six</font>

312
00:12:49,460 --> 00:12:56,390
percent of the<font color="#E5E5E5"> hosts on our test did the</font>

313
00:12:52,250 --> 00:12:58,880
sack correctly here is an example so

314
00:12:56,390 --> 00:13:00,560
this is<font color="#CCCCCC"> only</font><font color="#E5E5E5"> X again on the x-axis here</font>

315
00:12:58,880 --> 00:13:03,830
at the time y axis here the sequence

316
00:13:00,560 --> 00:13:06,020
number one of the graph shows that the

317
00:13:03,830 --> 00:13:07,490
stack is<font color="#E5E5E5"> correctly used so as you</font><font color="#CCCCCC"> can</font>

318
00:13:06,020 --> 00:13:09,829
see the packet

319
00:13:07,490 --> 00:13:12,500
sequence number 600 and 800<font color="#CCCCCC"> there</font><font color="#E5E5E5"> drop</font>

320
00:13:09,830 --> 00:13:13,850
and they are<font color="#CCCCCC"> immediately retransmitted</font>

321
00:13:12,500 --> 00:13:15,950
right there and they're both

322
00:13:13,850 --> 00:13:18,490
retransmitted together so that's<font color="#E5E5E5"> the</font>

323
00:13:15,950 --> 00:13:21,200
correct way the sack is used because the

324
00:13:18,490 --> 00:13:22,910
sender is able to infer that those two

325
00:13:21,200 --> 00:13:24,740
packets are lost on the other<font color="#E5E5E5"> hand if</font>

326
00:13:22,910 --> 00:13:27,649
you go to the default New Reno behavior

327
00:13:24,740 --> 00:13:29,000
then<font color="#E5E5E5"> sack info is ignored package</font><font color="#CCCCCC"> 6 is</font>

328
00:13:27,649 --> 00:13:30,350
of course retransmitted because of the

329
00:13:29,000 --> 00:13:32,240
accumulators because of the cumulative

330
00:13:30,350 --> 00:13:38,450
acknowledgement number but nothing after

331
00:13:32,240 --> 00:13:39,709
that it's resent again ok so one of the

332
00:13:38,450 --> 00:13:45,130
other tests were implemented was

333
00:13:39,709 --> 00:13:48,709
explicit congestion notification ok ok

334
00:13:45,130 --> 00:13:51,200
one of the other tests was explicit

335
00:13:48,709 --> 00:13:53,689
congestion notification this is a new

336
00:13:51,200 --> 00:13:57,380
standard it's as far<font color="#E5E5E5"> as i know it's</font>

337
00:13:53,690 --> 00:13:59,450
available only in linux 2.4<font color="#CCCCCC"> ok and you</font>

338
00:13:57,380 --> 00:14:02,209
can<font color="#E5E5E5"> it's i think the default is that is</font>

339
00:13:59,450 --> 00:14:04,700
disabled you can set it unable so easy n

340
00:14:02,209 --> 00:14:07,849
is negotiated in some sense during this

341
00:14:04,700 --> 00:14:10,700
<font color="#CCCCCC">cynic exchange ok so the tcp that is</font>

342
00:14:07,850 --> 00:14:14,690
running on an easy incapable horse sense

343
00:14:10,700 --> 00:14:16,339
to<font color="#E5E5E5"> flexi WR and ec in its end and it</font>

344
00:14:14,690 --> 00:14:19,279
holds the other end if it's willing to

345
00:14:16,339 --> 00:14:23,240
do easy and it responds by setting ECE

346
00:14:19,279 --> 00:14:25,820
flag ok<font color="#E5E5E5"> we need which checked about</font>

347
00:14:23,240 --> 00:14:27,529
26,000 votes from the proxy list whether

348
00:14:25,820 --> 00:14:29,990
they behave correctly and<font color="#CCCCCC"> we vote for</font>

349
00:14:27,529 --> 00:14:32,060
what we found was surprising most of the

350
00:14:29,990 --> 00:14:33,560
time if this is<font color="#E5E5E5"> the flag that are set by</font>

351
00:14:32,060 --> 00:14:35,359
the client<font color="#E5E5E5"> the server just ignore them</font>

352
00:14:33,560 --> 00:14:37,849
and everything<font color="#E5E5E5"> is fine but eight percent</font>

353
00:14:35,360 --> 00:14:41,810
of<font color="#E5E5E5"> the web servers that are out there</font><font color="#CCCCCC"> ok</font>

354
00:14:37,850 --> 00:14:44,240
this simply dropped any syn packet that

355
00:14:41,810 --> 00:14:46,279
contains<font color="#CCCCCC"> gwr or ec flag which means if</font>

356
00:14:44,240 --> 00:14:47,720
you are a<font color="#CCCCCC"> linux 2.4 user you</font><font color="#E5E5E5"> are unable</font>

357
00:14:46,279 --> 00:14:51,140
dcn because you want to be<font color="#E5E5E5"> a good</font>

358
00:14:47,720 --> 00:14:52,760
<font color="#E5E5E5">citizen and</font><font color="#CCCCCC"> suddenly eight percent</font><font color="#E5E5E5"> of</font>

359
00:14:51,140 --> 00:14:55,189
the you<font color="#CCCCCC"> know web servers out there it</font>

360
00:14:52,760 --> 00:14:57,079
would be unreachable the problem it

361
00:14:55,190 --> 00:14:59,600
turns out at least in some cases was

362
00:14:57,079 --> 00:15:01,489
with some local cisco local director dag

363
00:14:59,600 --> 00:15:06,589
scales and actually work more on this

364
00:15:01,490 --> 00:15:08,200
and its effects has been posted on some

365
00:15:06,589 --> 00:15:12,050
of the news groups of the cisco<font color="#CCCCCC"> web site</font>

366
00:15:08,200 --> 00:15:13,730
we don't know if some of the hosts tags

367
00:15:12,050 --> 00:15:18,449
themselves have problem dealing with the

368
00:15:13,730 --> 00:15:23,410
facts but that's the<font color="#CCCCCC"> story so far</font>

369
00:15:18,449 --> 00:15:25,089
okay TCB flavor what are the what exact

370
00:15:23,410 --> 00:15:27,189
what exact congestion control algorithm

371
00:15:25,089 --> 00:15:31,660
that<font color="#CCCCCC"> is used by various</font><font color="#E5E5E5"> deputies that</font>

372
00:15:27,189 --> 00:15:33,279
<font color="#E5E5E5">are out there whether they use Reno or</font>

373
00:15:31,660 --> 00:15:35,738
New Reno or tahoe<font color="#E5E5E5"> this is when they do</font>

374
00:15:33,279 --> 00:15:38,410
<font color="#E5E5E5">not use that</font><font color="#CCCCCC"> and we found</font><font color="#E5E5E5"> that about 61</font>

375
00:15:35,739 --> 00:15:40,540
percent of them use New Reno 21 /<font color="#CCCCCC"> 2</font>

376
00:15:38,410 --> 00:15:42,549
percent used Reno and the rest of the

377
00:15:40,540 --> 00:15:45,160
test for this<font color="#CCCCCC"> it's somewhat complicated</font>

378
00:15:42,549 --> 00:15:46,899
if<font color="#CCCCCC"> you are interested i will</font><font color="#E5E5E5"> show you RL</font>

379
00:15:45,160 --> 00:15:50,079
where we have a detailed set of results

380
00:15:46,899 --> 00:15:52,269
and explanation and how everything<font color="#E5E5E5"> works</font>

381
00:15:50,079 --> 00:15:54,368
<font color="#CCCCCC">okay interesting</font><font color="#E5E5E5"> thing is we</font><font color="#CCCCCC"> found that</font>

382
00:15:52,269 --> 00:15:56,790
some Microsoft servers and I literally

383
00:15:54,369 --> 00:15:59,170
mean Microsoft service www.microsoft.com

384
00:15:56,790 --> 00:16:01,389
we found<font color="#E5E5E5"> that they took time out on</font>

385
00:15:59,170 --> 00:16:04,959
every packet loss for smaller transfers

386
00:16:01,389 --> 00:16:06,879
so we talked to people at<font color="#E5E5E5"> Microsoft and</font>

387
00:16:04,959 --> 00:16:08,949
they<font color="#E5E5E5"> found a bug and apparently a fix is</font>

388
00:16:06,879 --> 00:16:11,619
in the works in<font color="#CCCCCC"> the next version of</font>

389
00:16:08,949 --> 00:16:15,519
Windows 2000 or service pack something

390
00:16:11,619 --> 00:16:18,399
like that so we're just going to skip

391
00:16:15,519 --> 00:16:20,920
this graph here<font color="#CCCCCC"> okay there</font><font color="#E5E5E5"> are several</font>

392
00:16:18,399 --> 00:16:24,220
difficulties when doing this test okay

393
00:16:20,920 --> 00:16:26,259
<font color="#E5E5E5">for example as we saw to test whether</font>

394
00:16:24,220 --> 00:16:28,540
the server and stack correctly you need

395
00:16:26,259 --> 00:16:30,160
at least 14 pack okay now if<font color="#CCCCCC"> you want to</font>

396
00:16:28,540 --> 00:16:32,649
<font color="#E5E5E5">run it against any arbitrary web server</font>

397
00:16:30,160 --> 00:16:34,449
the only page you can be sure of<font color="#CCCCCC"> that</font>

398
00:16:32,649 --> 00:16:36,549
the web server will deliver is the root

399
00:16:34,449 --> 00:16:38,410
page<font color="#E5E5E5"> okay and this might not be large</font>

400
00:16:36,549 --> 00:16:41,230
enough<font color="#E5E5E5"> to give enough packets to do the</font>

401
00:16:38,410 --> 00:16:42,999
test so maybe we<font color="#E5E5E5"> can use smaller MSF but</font>

402
00:16:41,230 --> 00:16:45,339
does<font color="#E5E5E5"> this create other problems do web</font>

403
00:16:42,999 --> 00:16:47,410
servers respond to different<font color="#E5E5E5"> sized</font>

404
00:16:45,339 --> 00:16:49,240
segments different they shouldn't but

405
00:16:47,410 --> 00:16:51,249
maybe some of the results we<font color="#CCCCCC"> have seen</font>

406
00:16:49,240 --> 00:16:54,759
our could be artifacts of that so we<font color="#E5E5E5"> are</font>

407
00:16:51,249 --> 00:16:58,059
<font color="#CCCCCC">working more on that if packets are lost</font>

408
00:16:54,759 --> 00:17:00,249
at random places while we<font color="#E5E5E5"> are conducting</font>

409
00:16:58,059 --> 00:17:01,929
the test then our results might be

410
00:17:00,249 --> 00:17:03,339
incorrect and the only<font color="#E5E5E5"> protection we</font>

411
00:17:01,929 --> 00:17:05,260
have against it is we run the<font color="#E5E5E5"> test</font>

412
00:17:03,339 --> 00:17:09,789
multiple times and hope for the best

413
00:17:05,260 --> 00:17:11,379
look at the graphs also of course so<font color="#E5E5E5"> you</font>

414
00:17:09,789 --> 00:17:13,179
can have multiple hosts answering the

415
00:17:11,380 --> 00:17:15,639
same idea is sitting behind some kind of

416
00:17:13,179 --> 00:17:17,439
a PCP sprayer or something this might

417
00:17:15,638 --> 00:17:20,349
you non reputable results and I'm not

418
00:17:17,439 --> 00:17:21,699
<font color="#CCCCCC">sure how to handle this actually and</font><font color="#E5E5E5"> we</font>

419
00:17:20,349 --> 00:17:23,408
do<font color="#E5E5E5"> not of course know any easy way to</font>

420
00:17:21,699 --> 00:17:26,199
test without a web server it would be

421
00:17:23,409 --> 00:17:28,779
nice<font color="#CCCCCC"> if everybody ran some kind of a tcp</font>

422
00:17:26,199 --> 00:17:29,590
data center<font color="#CCCCCC"> and some kind of a TC beta</font>

423
00:17:28,779 --> 00:17:33,940
testing but of course

424
00:17:29,590 --> 00:17:36,580
<font color="#CCCCCC">nobody will do that so future work we</font>

425
00:17:33,940 --> 00:17:40,000
intend to extend this tool as sort of a

426
00:17:36,580 --> 00:17:41,710
full conformance checker for<font color="#E5E5E5"> PCP it</font>

427
00:17:40,000 --> 00:17:43,929
would be nice to use this to<font color="#E5E5E5"> generate</font>

428
00:17:41,710 --> 00:17:46,539
automatic<font color="#CCCCCC"> simulator</font><font color="#E5E5E5"> more models so</font>

429
00:17:43,929 --> 00:17:49,510
<font color="#E5E5E5">people can test their TTP's in the</font>

430
00:17:46,539 --> 00:17:51,039
simulation environment we plan to<font color="#CCCCCC"> extend</font>

431
00:17:49,510 --> 00:17:54,000
this approach to<font color="#E5E5E5"> investigate other</font>

432
00:17:51,039 --> 00:17:56,529
behaviors of Internet infrastructure I

433
00:17:54,000 --> 00:17:58,539
would I would love<font color="#CCCCCC"> to get more</font>

434
00:17:56,529 --> 00:18:00,789
suggestions from the audience what what

435
00:17:58,539 --> 00:18:03,640
we can do for<font color="#E5E5E5"> example some kind of DNS</font>

436
00:18:00,789 --> 00:18:05,980
testing and we would at some point of

437
00:18:03,640 --> 00:18:08,080
time if<font color="#CCCCCC"> we find a run and map so that we</font>

438
00:18:05,980 --> 00:18:11,770
can present this results in correlation

439
00:18:08,080 --> 00:18:14,610
with what OS is there and finally all

440
00:18:11,770 --> 00:18:17,889
the source code detailed results and

441
00:18:14,610 --> 00:18:19,600
draft report are available people are

442
00:18:17,890 --> 00:18:22,360
welcome to download the<font color="#E5E5E5"> source code play</font>

443
00:18:19,600 --> 00:18:24,250
with<font color="#E5E5E5"> it modified and please let us know</font>

444
00:18:22,360 --> 00:18:34,539
what you think thank you very much give

445
00:18:24,250 --> 00:18:37,960
any questions well have you looked at

446
00:18:34,539 --> 00:18:40,690
offered window sizes from chicopee

447
00:18:37,960 --> 00:18:43,809
service from web service offered window

448
00:18:40,690 --> 00:18:45,789
sizes um yes I mean the the maximum

449
00:18:43,809 --> 00:18:47,289
window size the thought I know know that

450
00:18:45,789 --> 00:18:48,669
we are not looked at<font color="#CCCCCC"> that but that would</font>

451
00:18:47,289 --> 00:18:50,649
be definitely an interesting thing to

452
00:18:48,669 --> 00:18:54,669
look at yes because<font color="#E5E5E5"> I have noticed that</font>

453
00:18:50,649 --> 00:18:58,090
even like large high bandwidth streaming

454
00:18:54,669 --> 00:19:00,669
content like<font color="#E5E5E5"> Christie a galera video</font>

455
00:18:58,090 --> 00:19:03,520
<font color="#E5E5E5">clip at one megabit per second also get</font>

456
00:19:00,669 --> 00:19:06,880
offered on service with very low window

457
00:19:03,520 --> 00:19:12,370
sizes so<font color="#CCCCCC"> that the the theoretical reach</font>

458
00:19:06,880 --> 00:19:14,710
of those is pretty limited<font color="#CCCCCC"> all right it</font>

459
00:19:12,370 --> 00:19:17,020
cannot<font color="#CCCCCC"> be received correctly unless</font>

460
00:19:14,710 --> 00:19:20,529
you're 50 milliseconds from the server

461
00:19:17,020 --> 00:19:23,309
also now that's definitely<font color="#CCCCCC"> something we</font>

462
00:19:20,529 --> 00:19:23,309
would like to look at thanks

463
00:19:25,140 --> 00:19:31,750
<font color="#E5E5E5">okay so we had work looks too close we</font>

464
00:19:30,280 --> 00:19:34,539
had one more question of<font color="#E5E5E5"> this audience</font>

465
00:19:31,750 --> 00:19:36,100
which is that<font color="#E5E5E5"> we we want to run and map</font>

466
00:19:34,539 --> 00:19:39,400
because we want<font color="#E5E5E5"> to be able to identify</font>

467
00:19:36,100 --> 00:19:41,080
easily what OS has what gtp behavior and

468
00:19:39,400 --> 00:19:43,390
when we<font color="#CCCCCC"> identify it we talk to the</font>

469
00:19:41,080 --> 00:19:46,570
person who we know who what's the<font color="#E5E5E5"> TCP</font>

470
00:19:43,390 --> 00:19:47,980
for that OS and they fix it how many

471
00:19:46,570 --> 00:19:49,899
<font color="#CCCCCC">people</font><font color="#E5E5E5"> here think that's socially</font>

472
00:19:47,980 --> 00:19:51,429
<font color="#CCCCCC">irresponsible and we shouldn't and map</font>

473
00:19:49,900 --> 00:19:53,919
for<font color="#CCCCCC"> that purpose in time many people</font>

474
00:19:51,429 --> 00:19:55,539
here think it is<font color="#CCCCCC"> okay and first the</font>

475
00:19:53,919 --> 00:20:01,780
hands of people who<font color="#E5E5E5"> think it is okay to</font>

476
00:19:55,539 --> 00:20:06,520
run in mac n map is a scanning is a tool

477
00:20:01,780 --> 00:20:08,649
used<font color="#CCCCCC"> by hackers that that if that's</font><font color="#E5E5E5"> what</font>

478
00:20:06,520 --> 00:20:10,780
it says<font color="#CCCCCC"> it's mostly use force most eyes</font>

479
00:20:08,650 --> 00:20:16,450
peas won't let you run it in most web

480
00:20:10,780 --> 00:20:19,178
servers treat it<font color="#E5E5E5"> as a hostile act and</font>

481
00:20:16,450 --> 00:20:21,100
it's<font color="#E5E5E5"> just on the web someone wrote it</font>

482
00:20:19,179 --> 00:20:23,320
<font color="#E5E5E5">and one thing</font><font color="#CCCCCC"> it does it it looks at</font>

483
00:20:21,100 --> 00:20:26,080
peculiarities of TCP behavior what kind

484
00:20:23,320 --> 00:20:28,240
of options are are exchanged to make a

485
00:20:26,080 --> 00:20:29,860
guess<font color="#CCCCCC"> about what the OS is it also does</font>

486
00:20:28,240 --> 00:20:31,720
some stuff which is port scanning which

487
00:20:29,860 --> 00:20:33,370
we<font color="#E5E5E5"> don't do when we run it which is the</font>

488
00:20:31,720 --> 00:20:35,289
most hostile part of what in that does

489
00:20:33,370 --> 00:20:37,209
so that's why<font color="#E5E5E5"> people wouldn't like it</font>

490
00:20:35,289 --> 00:20:39,100
that's why web servers wouldn't like and

491
00:20:37,210 --> 00:20:40,390
that people running web servers wouldn't

492
00:20:39,100 --> 00:20:42,580
like in that to be run they sometimes

493
00:20:40,390 --> 00:20:43,960
send you mail saying you're running in

494
00:20:42,580 --> 00:20:45,730
math against our<font color="#E5E5E5"> site why are you doing</font>

495
00:20:43,960 --> 00:20:48,070
that and we send mail back saying well

496
00:20:45,730 --> 00:20:51,850
you<font color="#CCCCCC"> know because it's</font><font color="#E5E5E5"> a research and</font>

497
00:20:48,070 --> 00:20:53,439
they<font color="#CCCCCC"> usually say okay but one quick</font>

498
00:20:51,850 --> 00:20:54,908
suggestion about that there's<font color="#CCCCCC"> a</font>

499
00:20:53,440 --> 00:20:57,909
<font color="#CCCCCC">gentleman and</font><font color="#E5E5E5"> I'm sorry</font><font color="#CCCCCC"> I forget his</font>

500
00:20:54,909 --> 00:21:00,280
name but he walks<font color="#E5E5E5"> the DNS tree checking</font>

501
00:20:57,909 --> 00:21:02,409
<font color="#CCCCCC">for you know</font><font color="#E5E5E5"> the same kind of you know</font>

502
00:21:00,280 --> 00:21:06,010
is<font color="#E5E5E5"> DNS configured properly different</font>

503
00:21:02,409 --> 00:21:08,350
zones are there is in a ddr<font color="#E5E5E5"> DARPA</font><font color="#CCCCCC"> setup</font>

504
00:21:06,010 --> 00:21:10,299
and so forth and<font color="#CCCCCC"> he post something to</font>

505
00:21:08,350 --> 00:21:14,500
major less like you know the nanog list

506
00:21:10,299 --> 00:21:18,250
and I net access maybe you know some of

507
00:21:14,500 --> 00:21:20,380
the<font color="#E5E5E5"> ISP less that Sparky runs and just</font>

508
00:21:18,250 --> 00:21:21,549
lets people know ahead of time and he's

509
00:21:20,380 --> 00:21:23,650
<font color="#E5E5E5">going to be doing that of course with</font>

510
00:21:21,549 --> 00:21:25,809
DNS the issue is you know he wants to<font color="#E5E5E5"> do</font>

511
00:21:23,650 --> 00:21:27,970
<font color="#CCCCCC">zone transfers to check the data</font><font color="#E5E5E5"> and if</font>

512
00:21:25,809 --> 00:21:29,850
you don't open up your zone for him to

513
00:21:27,970 --> 00:21:32,130
transfer it he can't check your data

514
00:21:29,850 --> 00:21:33,389
if you were to post something just to

515
00:21:32,130 --> 00:21:34,799
let folks know you're doing it ahead of

516
00:21:33,390 --> 00:21:37,860
time so they can<font color="#E5E5E5"> be on the lookout for</font>

517
00:21:34,799 --> 00:21:39,120
it and<font color="#E5E5E5"> know you know when they see if</font>

518
00:21:37,860 --> 00:21:40,830
they know who it<font color="#E5E5E5"> is and was responsible</font>

519
00:21:39,120 --> 00:21:42,750
that would<font color="#E5E5E5"> probably go a long way toward</font>

520
00:21:40,830 --> 00:21:45,840
you know eliminating some of those

521
00:21:42,750 --> 00:21:48,179
<font color="#CCCCCC">problems I'm actually actually there's a</font>

522
00:21:45,840 --> 00:21:50,189
simpler solution<font color="#CCCCCC"> nmap will generally</font>

523
00:21:48,179 --> 00:21:51,480
Jake lot you'll end up with<font color="#CCCCCC"> a lot of</font>

524
00:21:50,190 --> 00:21:53,549
complaints if you're using every night

525
00:21:51,480 --> 00:21:55,289
here you can you please<font color="#CCCCCC"> we'll end up</font>

526
00:21:53,549 --> 00:21:58,260
<font color="#CCCCCC">with</font><font color="#E5E5E5"> a lot of complaints if you use nmap</font>

527
00:21:55,289 --> 00:21:59,640
just it's probably a bad idea you

528
00:21:58,260 --> 00:22:01,710
probably should<font color="#E5E5E5"> use a search engine</font>

529
00:21:59,640 --> 00:22:03,270
situational testing primarily web

530
00:22:01,710 --> 00:22:04,500
servers just get a little search engine

531
00:22:03,270 --> 00:22:06,870
there's lots of<font color="#CCCCCC"> different publicly</font>

532
00:22:04,500 --> 00:22:08,159
available ones use that to crawl to get

533
00:22:06,870 --> 00:22:09,539
all kinds of links you'll end up with

534
00:22:08,159 --> 00:22:10,890
all kinds of different<font color="#CCCCCC"> web servers and</font>

535
00:22:09,539 --> 00:22:13,049
you can use<font color="#E5E5E5"> those for testing and since</font>

536
00:22:10,890 --> 00:22:14,130
all you're making is HTTP requests to

537
00:22:13,049 --> 00:22:15,690
things that are already publicly

538
00:22:14,130 --> 00:22:18,750
available you avoid getting<font color="#E5E5E5"> complaints</font>

539
00:22:15,690 --> 00:22:21,330
but if you use<font color="#CCCCCC"> nmap</font><font color="#E5E5E5"> that's it's a really</font>

540
00:22:18,750 --> 00:22:27,059
bad<font color="#CCCCCC"> idea okay so we have both sides of</font>

541
00:22:21,330 --> 00:22:29,070
the opinion okay if you<font color="#E5E5E5"> use and that</font>

542
00:22:27,059 --> 00:22:31,530
will end up<font color="#CCCCCC"> with queries from people</font>

543
00:22:29,070 --> 00:22:33,270
like NASA and<font color="#E5E5E5"> whatnot it's a little part</font>

544
00:22:31,530 --> 00:22:34,649
<font color="#E5E5E5">of a federal information system in there</font>

545
00:22:33,270 --> 00:22:37,260
you're saying<font color="#E5E5E5"> that they have to look</font>

546
00:22:34,650 --> 00:22:41,010
into every potential security you know

547
00:22:37,260 --> 00:22:44,400
incident yeah so into your right yeah so

548
00:22:41,010 --> 00:22:46,500
yeah I mean<font color="#E5E5E5"> we have recovered</font><font color="#CCCCCC"> I'm Quran</font>

549
00:22:44,400 --> 00:22:48,600
and I've just<font color="#E5E5E5"> do testing we did get</font>

550
00:22:46,500 --> 00:22:51,450
queries from the<font color="#E5E5E5"> target of the nmap scan</font>

551
00:22:48,600 --> 00:22:52,980
and most<font color="#E5E5E5"> I mean most of the times they</font>

552
00:22:51,450 --> 00:22:54,780
were nice after we told them<font color="#CCCCCC"> that</font><font color="#E5E5E5"> hey we</font>

553
00:22:52,980 --> 00:22:56,760
were just you know this is<font color="#E5E5E5"> what we are</font>

554
00:22:54,780 --> 00:22:58,500
<font color="#CCCCCC">doing except that</font><font color="#E5E5E5"> at some point of time</font>

555
00:22:56,760 --> 00:23:00,870
the<font color="#E5E5E5"> people who run the</font><font color="#CCCCCC"> Berkeley network</font>

556
00:22:58,500 --> 00:23:02,850
started saying well sorry you're<font color="#E5E5E5"> not</font>

557
00:23:00,870 --> 00:23:06,928
going to run that anymore so that's the

558
00:23:02,850 --> 00:23:09,059
idea<font color="#E5E5E5"> I refer</font><font color="#CCCCCC"> to these as goobers with</font>

559
00:23:06,929 --> 00:23:11,340
firewalls and there's a lot<font color="#CCCCCC"> of personal</font>

560
00:23:09,059 --> 00:23:13,100
firewall technology out there and people

561
00:23:11,340 --> 00:23:16,199
don't know how to<font color="#E5E5E5"> interpret the results</font>

562
00:23:13,100 --> 00:23:18,570
so since I run a root name server i

563
00:23:16,200 --> 00:23:22,910
often am told that i am attacking them

564
00:23:18,570 --> 00:23:27,720
by sending them UDP port 53 packets

565
00:23:22,910 --> 00:23:30,210
and since I host a box for<font color="#E5E5E5"> Casey as part</font>

566
00:23:27,720 --> 00:23:31,980
of the<font color="#CCCCCC"> skitter projects I also receive</font>

567
00:23:30,210 --> 00:23:35,430
all sorts of hate mail from people who

568
00:23:31,980 --> 00:23:38,730
don't understand why I'm pinging them so

569
00:23:35,430 --> 00:23:42,090
I'm already immune to reports from nasa

570
00:23:38,730 --> 00:23:45,570
as to how bad on being and if you'd<font color="#E5E5E5"> like</font>

571
00:23:42,090 --> 00:23:47,280
a guest account on<font color="#E5E5E5"> ISC's shell server to</font>

572
00:23:45,570 --> 00:23:50,360
run and after<font color="#E5E5E5"> you're quite welcome to oh</font>

573
00:23:47,280 --> 00:23:50,360
thank you<font color="#CCCCCC"> very much</font>

