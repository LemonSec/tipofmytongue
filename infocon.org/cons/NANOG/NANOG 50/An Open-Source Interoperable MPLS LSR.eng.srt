1
00:00:00,000 --> 00:00:13,259
TF pjs and things like that's why

2
00:00:01,949 --> 00:00:14,879
interesting cool so yeah my name is

3
00:00:13,259 --> 00:00:19,980
Scott white I'm a network engineer at

4
00:00:14,880 --> 00:00:21,720
Google I am nervous so I'm<font color="#E5E5E5"> going to do</font>

5
00:00:19,980 --> 00:00:24,090
my best here I don't talk as fast as Tom

6
00:00:21,720 --> 00:00:29,490
I don't use that many words we'll see

7
00:00:24,090 --> 00:00:30,960
how<font color="#CCCCCC"> I do so what is an</font><font color="#E5E5E5"> open-source lsr</font>

8
00:00:29,490 --> 00:00:33,839
what do I mean when I say<font color="#E5E5E5"> open-source</font>

9
00:00:30,960 --> 00:00:36,540
<font color="#E5E5E5">lsr of course the lsr part is fairly</font>

10
00:00:33,840 --> 00:00:38,399
obvious<font color="#E5E5E5"> I mean an MPLS label switching</font>

11
00:00:36,540 --> 00:00:39,930
router but I don't<font color="#E5E5E5"> mean</font><font color="#CCCCCC"> any more or any</font>

12
00:00:38,399 --> 00:00:42,059
less I mean the part where you do the

13
00:00:39,930 --> 00:00:45,539
label swapping no popping no pushing

14
00:00:42,059 --> 00:00:48,930
just labeling only handles labeled

15
00:00:45,539 --> 00:00:52,350
packets in this particular case we

16
00:00:48,930 --> 00:00:57,030
implemented it using<font color="#CCCCCC"> ldp and osb ospf in</font>

17
00:00:52,350 --> 00:01:01,170
the control plane it's a it has<font color="#CCCCCC"> Harbor</font>

18
00:00:57,030 --> 00:01:02,550
forwarding via for one<font color="#E5E5E5"> gig e ports and I</font>

19
00:01:01,170 --> 00:01:03,660
think the<font color="#E5E5E5"> most important piece here</font><font color="#CCCCCC"> is</font>

20
00:01:02,550 --> 00:01:05,670
when I say open source I'm actually

21
00:01:03,660 --> 00:01:07,580
meaning everything is open source the

22
00:01:05,670 --> 00:01:10,260
hardware the software it's all available

23
00:01:07,580 --> 00:01:13,289
the source code you can download you can

24
00:01:10,260 --> 00:01:19,259
<font color="#E5E5E5">modify it I think that's an interesting</font>

25
00:01:13,290 --> 00:01:22,140
aspect of it so why build one so you

26
00:01:19,259 --> 00:01:23,610
know I a couple<font color="#E5E5E5"> months ago there was</font>

27
00:01:22,140 --> 00:01:25,320
discussion on the list why don't we have

28
00:01:23,610 --> 00:01:27,030
an open source sry hasn't had anybody

29
00:01:25,320 --> 00:01:28,860
done this<font color="#E5E5E5"> and it got me thinking</font>

30
00:01:27,030 --> 00:01:32,630
and<font color="#E5E5E5"> I started</font><font color="#CCCCCC"> looking around and I found</font>

31
00:01:28,860 --> 00:01:36,229
that most of the parts already existed

32
00:01:32,630 --> 00:01:38,280
individually we already had

33
00:01:36,229 --> 00:01:40,650
implementations that change the Linux

34
00:01:38,280 --> 00:01:42,570
kernel support mpls i already had quagga

35
00:01:40,650 --> 00:01:45,030
stuff that supported<font color="#CCCCCC"> ldp we already had</font>

36
00:01:42,570 --> 00:01:47,158
research projects for hardware that

37
00:01:45,030 --> 00:01:49,229
could support some of this so<font color="#CCCCCC"> I thought</font>

38
00:01:47,159 --> 00:01:53,220
well why don't we stick all together and

39
00:01:49,229 --> 00:01:55,280
try<font color="#E5E5E5"> and create a foundation that we can</font>

40
00:01:53,220 --> 00:01:57,270
use with the open source community to

41
00:01:55,280 --> 00:01:59,219
<font color="#CCCCCC">make it into something</font><font color="#E5E5E5"> more interesting</font>

42
00:01:57,270 --> 00:02:02,070
<font color="#E5E5E5">something more broadly interesting to a</font>

43
00:01:59,219 --> 00:02:03,719
large set of people and then to my own

44
00:02:02,070 --> 00:02:06,119
end because i am in network research now

45
00:02:03,719 --> 00:02:07,439
I thought if we actually<font color="#E5E5E5"> had an open</font>

46
00:02:06,119 --> 00:02:10,568
<font color="#E5E5E5">source lsr that we could do things with</font>

47
00:02:07,439 --> 00:02:12,549
<font color="#E5E5E5">that would enable potentially so</font>

48
00:02:10,568 --> 00:02:13,988
very interesting research which<font color="#E5E5E5"> I'll</font>

49
00:02:12,549 --> 00:02:17,849
<font color="#E5E5E5">talk about a little bit later on in the</font>

50
00:02:13,989 --> 00:02:19,719
presentation I did want to note that

51
00:02:17,849 --> 00:02:24,339
through the years<font color="#E5E5E5"> you know there have</font>

52
00:02:19,719 --> 00:02:26,200
been quite a few software-based routers

53
00:02:24,340 --> 00:02:29,439
open source and otherwise and they do

54
00:02:26,200 --> 00:02:30,969
quite well but they all have<font color="#E5E5E5"> the same</font>

55
00:02:29,439 --> 00:02:32,650
fundamental problem which is they don't

56
00:02:30,969 --> 00:02:34,329
<font color="#E5E5E5">have the hardware support they can't do</font>

57
00:02:32,650 --> 00:02:37,209
things at line rate for very small

58
00:02:34,329 --> 00:02:39,189
packets etc and so I worked really<font color="#E5E5E5"> hard</font>

59
00:02:37,209 --> 00:02:40,780
to<font color="#CCCCCC"> try and find a piece of hardware that</font>

60
00:02:39,189 --> 00:02:45,010
could do this<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think we have a</font>

61
00:02:40,780 --> 00:02:47,500
starting point so like I said so this

62
00:02:45,010 --> 00:02:50,138
<font color="#E5E5E5">was essentially a systems integration</font>

63
00:02:47,500 --> 00:02:51,579
project we had a whole bunch of stuff

64
00:02:50,139 --> 00:02:54,250
and<font color="#E5E5E5"> then we had</font><font color="#CCCCCC"> to add a little bit to</font>

65
00:02:51,579 --> 00:02:56,139
the end we have the net of<font color="#CCCCCC"> pga and open</font>

66
00:02:54,250 --> 00:02:58,889
flow projects<font color="#E5E5E5"> which are both research</font>

67
00:02:56,139 --> 00:03:02,199
projects hosted by stanford university

68
00:02:58,889 --> 00:03:04,209
we have mpls<font color="#E5E5E5"> linux and quagga</font><font color="#CCCCCC"> ldp which</font>

69
00:03:02,199 --> 00:03:07,269
are<font color="#E5E5E5"> both open source projects that have</font>

70
00:03:04,209 --> 00:03:09,790
been around<font color="#E5E5E5"> quite a while actually the</font>

71
00:03:07,269 --> 00:03:12,790
modify the mpls<font color="#E5E5E5"> modify the linux kernel</font>

72
00:03:09,790 --> 00:03:14,909
to support mpls and then the piece we

73
00:03:12,790 --> 00:03:17,439
had to synthesize was a way to

74
00:03:14,909 --> 00:03:18,909
synthesize all these together<font color="#E5E5E5"> and we</font>

75
00:03:17,439 --> 00:03:23,500
call that<font color="#E5E5E5"> the LSP synchronizer which</font>

76
00:03:18,909 --> 00:03:24,849
<font color="#E5E5E5">i'll explain in detail so let's talk</font>

77
00:03:23,500 --> 00:03:26,769
about each of the individual components

78
00:03:24,849 --> 00:03:28,629
<font color="#CCCCCC">because</font><font color="#E5E5E5"> probably not a</font><font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> you have</font>

79
00:03:26,769 --> 00:03:33,430
heard of<font color="#CCCCCC"> some of them or</font><font color="#E5E5E5"> maybe all of</font>

80
00:03:28,629 --> 00:03:35,168
them the net of pga is like i mentioned

81
00:03:33,430 --> 00:03:39,069
it's a research project hosted by

82
00:03:35,169 --> 00:03:43,709
<font color="#E5E5E5">stanford it its intent is to allow line</font>

83
00:03:39,069 --> 00:03:46,298
rate open network research in<font color="#E5E5E5"> hardware</font>

84
00:03:43,709 --> 00:03:49,569
it comes on as you can see it comes on<font color="#E5E5E5"> a</font>

85
00:03:46,299 --> 00:03:51,669
pci card it has a vertex to fpga which

86
00:03:49,569 --> 00:03:54,069
gives you the bulk of the

87
00:03:51,669 --> 00:03:59,009
configurability it has associated memory

88
00:03:54,069 --> 00:04:02,469
to allow you to<font color="#E5E5E5"> store packets for</font>

89
00:03:59,009 --> 00:04:04,238
queuing or and also to<font color="#E5E5E5"> create the data</font>

90
00:04:02,469 --> 00:04:06,459
structures necessary to for packet

91
00:04:04,239 --> 00:04:08,500
forwarding that's for Giggy faiz and all

92
00:04:06,459 --> 00:04:10,719
the associated components for that and

93
00:04:08,500 --> 00:04:13,120
has a even has a serial link on the back

94
00:04:10,719 --> 00:04:15,009
so you<font color="#E5E5E5"> can actually connect to these</font>

95
00:04:13,120 --> 00:04:16,810
together<font color="#CCCCCC"> and get the 8 gigabytes of</font>

96
00:04:15,009 --> 00:04:21,310
throughput

97
00:04:16,810 --> 00:04:24,220
the next component is open flow open

98
00:04:21,310 --> 00:04:26,770
flow is another protocol it's another

99
00:04:24,220 --> 00:04:31,050
project hosted research project hosted

100
00:04:26,770 --> 00:04:34,780
by Stanford its goal its main goal is a

101
00:04:31,050 --> 00:04:38,680
stated is to enable research and

102
00:04:34,780 --> 00:04:41,530
existing protocols to coexist on the

103
00:04:38,680 --> 00:04:44,260
same network at the same time so its

104
00:04:41,530 --> 00:04:46,299
intent is to allow hardware to not only

105
00:04:44,260 --> 00:04:49,659
support legacy or current protocols but

106
00:04:46,300 --> 00:04:51,340
to support our protocols research

107
00:04:49,660 --> 00:04:54,970
network network research protocols at

108
00:04:51,340 --> 00:04:56,979
the same time it<font color="#E5E5E5"> has two basic elements</font>

109
00:04:54,970 --> 00:04:58,660
at the highest level I won't<font color="#E5E5E5"> get into a</font>

110
00:04:56,979 --> 00:05:00,729
lot<font color="#E5E5E5"> of details of open flow but it has</font>

111
00:04:58,660 --> 00:05:03,250
basically a controller and it has a an

112
00:05:00,729 --> 00:05:05,229
open flow switch the open flow

113
00:05:03,250 --> 00:05:07,270
controller in their model is where most

114
00:05:05,229 --> 00:05:09,250
of the smarts live it makes most of the

115
00:05:07,270 --> 00:05:11,169
forwarding decisions it figures<font color="#E5E5E5"> out what</font>

116
00:05:09,250 --> 00:05:13,090
the flow entry<font color="#CCCCCC"> should be and then it has</font>

117
00:05:11,169 --> 00:05:16,120
an open flow wire protocol that uses to

118
00:05:13,090 --> 00:05:18,929
<font color="#E5E5E5">push down to the open flow switch the</font>

119
00:05:16,120 --> 00:05:20,860
<font color="#E5E5E5">OpenFlow switched in our case is a Linux</font>

120
00:05:18,930 --> 00:05:24,070
consists of several<font color="#E5E5E5"> things that consists</font>

121
00:05:20,860 --> 00:05:26,080
of a Linux module which is essentially

122
00:05:24,070 --> 00:05:28,090
how it takes the<font color="#CCCCCC"> OpenFlow wire protocol</font>

123
00:05:26,080 --> 00:05:29,770
translates it into instructions the hard

124
00:05:28,090 --> 00:05:32,109
work<font color="#E5E5E5"> and understand gives that to the</font>

125
00:05:29,770 --> 00:05:33,820
driver and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> colonel and</font><font color="#E5E5E5"> then the pga</font>

126
00:05:32,110 --> 00:05:40,090
driver which then programs the hardware

127
00:05:33,820 --> 00:05:41,409
<font color="#CCCCCC">i should mention</font><font color="#E5E5E5"> their do there's a so</font>

128
00:05:40,090 --> 00:05:43,810
<font color="#E5E5E5">that was open flow we ought we what we</font>

129
00:05:41,410 --> 00:05:46,960
use was the mpls open flow<font color="#E5E5E5"> and press</font>

130
00:05:43,810 --> 00:05:48,610
open<font color="#E5E5E5"> flow is nick is actually was</font>

131
00:05:46,960 --> 00:05:51,700
implemented by ericsson research last

132
00:05:48,610 --> 00:05:54,520
<font color="#E5E5E5">summer as a research project where they</font>

133
00:05:51,700 --> 00:05:56,830
took the standard reference net of PGA

134
00:05:54,520 --> 00:06:00,940
open flow implementation they modified

135
00:05:56,830 --> 00:06:06,849
it to support mpls primitives push pop

136
00:06:00,940 --> 00:06:08,710
swap in the hardware for this project<font color="#CCCCCC"> we</font>

137
00:06:06,850 --> 00:06:10,330
didn't need the<font color="#CCCCCC"> full-blown capabilities</font>

138
00:06:08,710 --> 00:06:13,719
of an open flow controller so what we

139
00:06:10,330 --> 00:06:16,719
did is that<font color="#E5E5E5"> we implemented via the MPLS</font>

140
00:06:13,720 --> 00:06:18,370
the<font color="#CCCCCC"> Linux changes we implemented a</font>

141
00:06:16,720 --> 00:06:21,639
kernel<font color="#CCCCCC"> L fib and then we implemented a</font>

142
00:06:18,370 --> 00:06:23,650
mechanism to take the l fib information

143
00:06:21,639 --> 00:06:24,500
convert it into<font color="#E5E5E5"> the open flow wire</font>

144
00:06:23,650 --> 00:06:27,229
protocol

145
00:06:24,500 --> 00:06:35,930
push it to<font color="#E5E5E5"> the standard open flow switch</font>

146
00:06:27,230 --> 00:06:38,000
implementation so what we have<font color="#CCCCCC"> here is</font><font color="#E5E5E5"> a</font>

147
00:06:35,930 --> 00:06:41,660
kind of a graphic representation of

148
00:06:38,000 --> 00:06:43,760
what's going on<font color="#E5E5E5"> on the vertex that</font><font color="#CCCCCC"> PGA</font>

149
00:06:41,660 --> 00:06:46,880
basically open flow or ranges everything

150
00:06:43,760 --> 00:06:49,940
into a flow table the flows are a series

151
00:06:46,880 --> 00:06:55,090
of matches and actions the matches in

152
00:06:49,940 --> 00:06:55,090
open flow are basically a to pool of

153
00:06:55,420 --> 00:07:00,530
headers in the packet that<font color="#CCCCCC"> you can match</font>

154
00:06:58,400 --> 00:07:02,750
on to specify the flow you<font color="#E5E5E5"> on in that</font>

155
00:07:00,530 --> 00:07:04,609
action can be some number of things to

156
00:07:02,750 --> 00:07:07,370
manipulate the packet or change its

157
00:07:04,610 --> 00:07:09,110
forwarding behavior in our case<font color="#CCCCCC"> the way</font>

158
00:07:07,370 --> 00:07:12,050
we program the hardware in the flow

159
00:07:09,110 --> 00:07:15,050
table it always matches on and I'm sorry

160
00:07:12,050 --> 00:07:17,030
<font color="#E5E5E5">at an MPLS label and an action is simply</font>

161
00:07:15,050 --> 00:07:20,660
to rewrite to swap the label and forward

162
00:07:17,030 --> 00:07:22,700
it up at propria<font color="#E5E5E5"> part on the other hand</font>

163
00:07:20,660 --> 00:07:25,610
<font color="#E5E5E5">if we receive a packet like a protocol</font>

164
00:07:22,700 --> 00:07:26,870
packet<font color="#CCCCCC"> ospf ldp somebody wants to ssh to</font>

165
00:07:25,610 --> 00:07:28,820
the box we need to be able<font color="#E5E5E5"> to handle</font>

166
00:07:26,870 --> 00:07:30,919
<font color="#CCCCCC">that</font><font color="#E5E5E5"> too basically what happens is it</font>

167
00:07:28,820 --> 00:07:35,810
doesn't match in the hardware we have

168
00:07:30,919 --> 00:07:37,849
another path through the kernel to make

169
00:07:35,810 --> 00:07:39,979
it look elected to make the net of<font color="#CCCCCC"> pga</font>

170
00:07:37,850 --> 00:07:41,870
look just like a nick so basically non

171
00:07:39,979 --> 00:07:44,120
labeled or IP packets come into the box

172
00:07:41,870 --> 00:07:48,590
looking just like a they go through the

173
00:07:44,120 --> 00:07:51,229
kernel just like a regular packet the

174
00:07:48,590 --> 00:07:53,479
next component<font color="#E5E5E5"> we integrated into all</font>

175
00:07:51,229 --> 00:07:55,490
this was this MPLS linux project<font color="#CCCCCC"> I spoke</font>

176
00:07:53,479 --> 00:07:58,430
about<font color="#CCCCCC"> it it basically gave us three</font>

177
00:07:55,490 --> 00:08:02,270
separate things it provides patches to

178
00:07:58,430 --> 00:08:05,390
the<font color="#E5E5E5"> Linux kernel that basically modify</font>

179
00:08:02,270 --> 00:08:08,030
the Colonel's Ethernet structure data

180
00:08:05,390 --> 00:08:11,479
structure so that it can understand mpls

181
00:08:08,030 --> 00:08:13,940
ethertype packets it provided<font color="#E5E5E5"> source for</font>

182
00:08:11,479 --> 00:08:17,330
building a set of modules and the kernel

183
00:08:13,940 --> 00:08:19,700
modules create all the necessary data

184
00:08:17,330 --> 00:08:25,039
structures to support MPLS things like

185
00:08:19,700 --> 00:08:27,020
ILM and hf le the actual<font color="#CCCCCC"> alphab and then</font>

186
00:08:25,040 --> 00:08:29,120
the<font color="#E5E5E5"> third thing it provided were patches</font>

187
00:08:27,020 --> 00:08:31,940
<font color="#CCCCCC">ty existing IP route to project a</font>

188
00:08:29,120 --> 00:08:33,799
package<font color="#CCCCCC"> I updated the IP command it</font>

189
00:08:31,940 --> 00:08:35,448
added an MPLS command and this gives you

190
00:08:33,799 --> 00:08:38,159
the ability to

191
00:08:35,448 --> 00:08:41,128
either look at the elf ever actually

192
00:08:38,159 --> 00:08:48,120
statically manually configure things in

193
00:08:41,129 --> 00:08:50,220
the hell fib the last<font color="#E5E5E5"> component that we</font>

194
00:08:48,120 --> 00:08:53,220
integrated into this that existed was

195
00:08:50,220 --> 00:08:56,069
this quagga LBP<font color="#E5E5E5"> prog LDP's pretty</font>

196
00:08:53,220 --> 00:08:58,829
tightly coupled with the mpls<font color="#E5E5E5"> linux</font>

197
00:08:56,069 --> 00:09:02,490
project but what it does is it<font color="#E5E5E5"> takes the</font>

198
00:08:58,829 --> 00:09:05,939
standard quagga sweet and it adds an ldp

199
00:09:02,490 --> 00:09:08,749
demon to it and it modifies the zebra

200
00:09:05,939 --> 00:09:11,279
demon to understand mpls and the elf fib

201
00:09:08,749 --> 00:09:15,089
that's provided by the mpls<font color="#CCCCCC"> linux</font>

202
00:09:11,279 --> 00:09:16,829
project so we<font color="#E5E5E5"> get the ospf from the</font>

203
00:09:15,089 --> 00:09:20,249
standard quagga we get the<font color="#CCCCCC"> LDP demon</font>

204
00:09:16,829 --> 00:09:22,589
from this project specifically what we

205
00:09:20,249 --> 00:09:24,629
used what we test it<font color="#E5E5E5"> were the downstream</font>

206
00:09:22,589 --> 00:09:30,089
unsolicited liberal attention and order

207
00:09:24,629 --> 00:09:31,709
control<font color="#E5E5E5"> nothin too fancy so what we end</font>

208
00:09:30,089 --> 00:09:34,319
up with is in the control plane we have

209
00:09:31,709 --> 00:09:37,739
quagga quagga providing the labels via

210
00:09:34,319 --> 00:09:40,589
<font color="#E5E5E5">ldpe providing</font><font color="#CCCCCC"> colonel l5 updates via</font>

211
00:09:37,740 --> 00:09:42,959
zebra<font color="#CCCCCC"> d and then down at the bottom we</font>

212
00:09:40,589 --> 00:09:45,449
<font color="#CCCCCC">have the hardware we have the</font><font color="#E5E5E5"> open flow</font>

213
00:09:42,959 --> 00:09:47,459
with<font color="#CCCCCC"> the wire protocol able to program</font>

214
00:09:45,449 --> 00:09:49,258
the<font color="#E5E5E5"> fib into the hardware what we needed</font>

215
00:09:47,459 --> 00:09:51,689
was a way to glue these two together and

216
00:09:49,259 --> 00:09:54,720
<font color="#E5E5E5">that's what this LSP synchronizer does</font>

217
00:09:51,689 --> 00:09:56,399
it basically every<font color="#CCCCCC"> 300 milliseconds I'll</font>

218
00:09:54,720 --> 00:09:58,199
that's that's configurable every 300

219
00:09:56,399 --> 00:10:01,649
seconds it scans the kernel well fib it

220
00:09:58,199 --> 00:10:03,540
scans the fib that's on that out of pj

221
00:10:01,649 --> 00:10:06,389
and it compares the two and if it

222
00:10:03,540 --> 00:10:08,730
notices that the el fip is different it

223
00:10:06,389 --> 00:10:12,209
<font color="#E5E5E5">basically creates it generates all the</font>

224
00:10:08,730 --> 00:10:14,100
necessary<font color="#CCCCCC"> openflow wire protocol</font>

225
00:10:12,209 --> 00:10:17,219
commands necessary to update it and

226
00:10:14,100 --> 00:10:18,750
gives those to the open flow switch

227
00:10:17,220 --> 00:10:24,269
which then updates the fib<font color="#CCCCCC"> and we're</font>

228
00:10:18,750 --> 00:10:26,579
back to a synchronized fib so here's a

229
00:10:24,269 --> 00:10:29,209
block diagram of the system you have a

230
00:10:26,579 --> 00:10:32,489
the net<font color="#E5E5E5"> PJ at the bottom with</font><font color="#CCCCCC"> the</font>

231
00:10:29,209 --> 00:10:34,550
picture of<font color="#CCCCCC"> the flow table you have in</font>

232
00:10:32,490 --> 00:10:37,379
the middle<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> the net of PJ driver</font>

233
00:10:34,550 --> 00:10:38,939
the<font color="#CCCCCC"> neff</font><font color="#E5E5E5"> PJ driver I think this</font>

234
00:10:37,379 --> 00:10:40,920
illustrates that it actually the two

235
00:10:38,939 --> 00:10:43,139
modes it has it has the mode where it

236
00:10:40,920 --> 00:10:45,809
talks<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> OpenFlow module or how</font>

237
00:10:43,139 --> 00:10:46,430
basically to get commands<font color="#E5E5E5"> to actually</font>

238
00:10:45,809 --> 00:10:50,230
program

239
00:10:46,430 --> 00:10:50,229
hardware directly and it also has

240
00:10:50,260 --> 00:10:54,439
connectivity through the<font color="#E5E5E5"> Nick the</font>

241
00:10:53,000 --> 00:10:57,350
<font color="#E5E5E5">colonel Nick interface so that it can</font>

242
00:10:54,440 --> 00:11:01,160
talk to the standard processes the user

243
00:10:57,350 --> 00:11:05,420
space processes so what happens is we

244
00:11:01,160 --> 00:11:07,219
you know<font color="#CCCCCC"> ldp gets a packet a packet</font>

245
00:11:05,420 --> 00:11:08,479
comes in its an ldp packet it's not

246
00:11:07,220 --> 00:11:09,770
labeled and won't match anything in the

247
00:11:08,480 --> 00:11:12,320
hardware it goes up to the driver the

248
00:11:09,770 --> 00:11:13,640
driver<font color="#E5E5E5"> Ford's it through the standard</font>

249
00:11:12,320 --> 00:11:16,850
Nick interface with<font color="#E5E5E5"> the colonel up to</font>

250
00:11:13,640 --> 00:11:18,230
the<font color="#CCCCCC"> LDP demon which grinds on it gives</font>

251
00:11:16,850 --> 00:11:19,580
<font color="#CCCCCC">that over to the zebra deer and zebra</font>

252
00:11:18,230 --> 00:11:21,529
team and figures<font color="#E5E5E5"> out what it is it</font>

253
00:11:19,580 --> 00:11:24,110
pushes it into hell fib<font color="#E5E5E5"> and that happens</font>

254
00:11:21,529 --> 00:11:26,390
<font color="#CCCCCC">a series of times and and then</font>

255
00:11:24,110 --> 00:11:28,279
periodically the LSP synchronizer wakes

256
00:11:26,390 --> 00:11:30,860
up notices that there's differences in

257
00:11:28,279 --> 00:11:32,660
the hell fib so it scrapes the<font color="#CCCCCC"> alpha and</font>

258
00:11:30,860 --> 00:11:35,120
<font color="#CCCCCC">the fib and then it basically pushes</font>

259
00:11:32,660 --> 00:11:37,699
those down into the hardware<font color="#E5E5E5"> and so now</font>

260
00:11:35,120 --> 00:11:39,560
for any labeled packet that comes and it

261
00:11:37,700 --> 00:11:44,120
matches what's program in the hardware

262
00:11:39,560 --> 00:11:45,709
we will hardware switch so<font color="#E5E5E5"> you know we</font>

263
00:11:44,120 --> 00:11:47,990
<font color="#E5E5E5">needed to do some basic testing on this</font>

264
00:11:45,709 --> 00:11:50,449
we started by just<font color="#E5E5E5"> testing the hardware</font>

265
00:11:47,990 --> 00:11:54,110
in isolation we just hooked up the<font color="#CCCCCC"> neta</font>

266
00:11:50,450 --> 00:11:56,029
<font color="#CCCCCC">pga in a pc</font><font color="#E5E5E5"> to in Ixia we really wanted</font>

267
00:11:54,110 --> 00:11:57,830
<font color="#E5E5E5">to test just to make</font><font color="#CCCCCC"> sure that we could</font>

268
00:11:56,029 --> 00:12:01,370
do line rate in both directions at<font color="#E5E5E5"> the</font>

269
00:11:57,830 --> 00:12:05,209
same time on a single port it both

270
00:12:01,370 --> 00:12:07,700
extreme pakka sizes in our case with a

271
00:12:05,209 --> 00:12:10,189
particular pc hardware we had we were

272
00:12:07,700 --> 00:12:12,680
able to software switch through the

273
00:12:10,190 --> 00:12:15,730
colonel about 120 Meg's per second at

274
00:12:12,680 --> 00:12:18,349
<font color="#CCCCCC">1500 by packets that plus the</font><font color="#E5E5E5"> MPLS label</font>

275
00:12:15,730 --> 00:12:22,250
whereas in hardware we were able to<font color="#E5E5E5"> get</font>

276
00:12:18,350 --> 00:12:24,080
line rate and then as expected when we

277
00:12:22,250 --> 00:12:26,089
go to the minimum<font color="#E5E5E5"> size packets the</font>

278
00:12:24,080 --> 00:12:28,279
colonel suffered even more and<font color="#E5E5E5"> we were</font>

279
00:12:26,089 --> 00:12:30,290
only able to get<font color="#E5E5E5"> about 30 Meg's a second</font>

280
00:12:28,279 --> 00:12:32,839
of throughput through the colonel versus

281
00:12:30,290 --> 00:12:37,189
<font color="#E5E5E5">a full one gig in and out and the</font>

282
00:12:32,839 --> 00:12:38,270
hardware once we had the hardware once

283
00:12:37,190 --> 00:12:40,820
we knew that<font color="#CCCCCC"> hardware could do the line</font>

284
00:12:38,270 --> 00:12:43,640
rate we were asking of what we had to

285
00:12:40,820 --> 00:12:45,170
verify<font color="#E5E5E5"> the control plane and the way we</font>

286
00:12:43,640 --> 00:12:47,480
did<font color="#E5E5E5"> this was basically built a small lab</font>

287
00:12:45,170 --> 00:12:51,380
three of these open source salazars as a

288
00:12:47,480 --> 00:12:55,490
core a Juniper m10 in a Redback smart

289
00:12:51,380 --> 00:12:57,560
age 100 as LDRs<font color="#E5E5E5"> when we then enable</font>

290
00:12:55,490 --> 00:13:00,560
those PF on every router to make sure

291
00:12:57,560 --> 00:13:03,260
that the<font color="#CCCCCC"> clogged ospf implementation</font>

292
00:13:00,560 --> 00:13:05,630
inter operated and it did and<font color="#E5E5E5"> then we</font>

293
00:13:03,260 --> 00:13:10,189
added<font color="#CCCCCC"> ldp on top of</font><font color="#E5E5E5"> that and we were</font>

294
00:13:05,630 --> 00:13:12,680
able<font color="#E5E5E5"> to we were able to distribute the</font>

295
00:13:10,190 --> 00:13:14,630
labels between all three implementations

296
00:13:12,680 --> 00:13:18,739
just fine and were able to ping to our

297
00:13:14,630 --> 00:13:20,900
hearts content one other tests i thought

298
00:13:18,740 --> 00:13:25,880
i would would be interesting would<font color="#E5E5E5"> be to</font>

299
00:13:20,900 --> 00:13:28,069
<font color="#CCCCCC">just use again the same</font><font color="#E5E5E5"> open source</font>

300
00:13:25,880 --> 00:13:31,900
<font color="#E5E5E5">alice our core with no bgp and it just</font>

301
00:13:28,070 --> 00:13:35,390
simple labels have to juniper intends

302
00:13:31,900 --> 00:13:39,410
acting as the LA RS for my bgp session

303
00:13:35,390 --> 00:13:41,360
across them simulate a full internet

304
00:13:39,410 --> 00:13:44,300
table across them and then ping the host

305
00:13:41,360 --> 00:13:46,370
and so this kind of is demonstrated to

306
00:13:44,300 --> 00:13:50,240
me that there is some potential here to

307
00:13:46,370 --> 00:13:53,110
<font color="#E5E5E5">use this in a bgp freak or although i</font>

308
00:13:50,240 --> 00:13:56,360
focused on for the purposes of<font color="#E5E5E5"> this</font>

309
00:13:53,110 --> 00:13:57,829
summer project basically you know how

310
00:13:56,360 --> 00:13:59,750
can we get an lsr going there's no

311
00:13:57,829 --> 00:14:02,839
reason why we couldn't make this an<font color="#CCCCCC"> le</font>

312
00:13:59,750 --> 00:14:04,850
are the hardware already supports the

313
00:14:02,839 --> 00:14:06,709
pop and the push primitives it's already

314
00:14:04,850 --> 00:14:10,640
in there it's just a matter of<font color="#E5E5E5"> getting a</font>

315
00:14:06,709 --> 00:14:12,680
<font color="#CCCCCC">bit more</font><font color="#E5E5E5"> software support</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> i'm going</font>

316
00:14:10,640 --> 00:14:16,329
at like warp speed here but that's good

317
00:14:12,680 --> 00:14:18,829
<font color="#CCCCCC">because we're all hungry so basically</font>

318
00:14:16,329 --> 00:14:20,689
there's a near-term<font color="#CCCCCC"> and medium-term</font>

319
00:14:18,829 --> 00:14:23,319
things<font color="#CCCCCC"> i think</font><font color="#E5E5E5"> this could</font><font color="#CCCCCC"> be really</font>

320
00:14:20,690 --> 00:14:25,400
interesting<font color="#CCCCCC"> for the near term stuff</font>

321
00:14:23,320 --> 00:14:28,100
because<font color="#CCCCCC"> it's a systems integration</font>

322
00:14:25,400 --> 00:14:29,720
because there's<font color="#CCCCCC"> four underlying open</font>

323
00:14:28,100 --> 00:14:32,120
source projects that are all relatively

324
00:14:29,720 --> 00:14:34,670
active there's quite a few bug fixes

325
00:14:32,120 --> 00:14:35,930
that need to get pulled<font color="#E5E5E5"> up we had to one</font>

326
00:14:34,670 --> 00:14:38,569
of the hardest things this summer was<font color="#E5E5E5"> to</font>

327
00:14:35,930 --> 00:14:40,520
like pick a kernel version in<font color="#CCCCCC"> Linux that</font>

328
00:14:38,570 --> 00:14:41,750
because none of these worked on the same

329
00:14:40,520 --> 00:14:43,189
distribution or the same version

330
00:14:41,750 --> 00:14:45,140
anything so we picked the version and we

331
00:14:43,190 --> 00:14:48,140
got them<font color="#E5E5E5"> all working on that we need to</font>

332
00:14:45,140 --> 00:14:50,050
<font color="#E5E5E5">keep moving that forward I feel after</font>

333
00:14:48,140 --> 00:14:53,180
<font color="#CCCCCC">that</font><font color="#E5E5E5"> experience that that'll be really</font>

334
00:14:50,050 --> 00:14:55,609
that'll be easier if we can get we did

335
00:14:53,180 --> 00:14:57,680
it with 32-bit for expediency we'd like

336
00:14:55,610 --> 00:14:59,570
to<font color="#E5E5E5"> get it to 64-bit because a lot of the</font>

337
00:14:57,680 --> 00:15:02,150
current development work in the kernels

338
00:14:59,570 --> 00:15:04,270
in 64-bit so we'll get<font color="#E5E5E5"> more support we'd</font>

339
00:15:02,150 --> 00:15:06,319
also like to get this ported to bsd

340
00:15:04,270 --> 00:15:08,130
which shouldn't be too difficult and

341
00:15:06,319 --> 00:15:10,949
that should<font color="#E5E5E5"> open up</font>

342
00:15:08,130 --> 00:15:15,450
that large community of developers to

343
00:15:10,950 --> 00:15:17,730
this<font color="#CCCCCC"> project we'd also like to get some</font>

344
00:15:15,450 --> 00:15:20,460
more protocol support in the quagga

345
00:15:17,730 --> 00:15:23,490
stack things like rsvp-te a better is

346
00:15:20,460 --> 00:15:26,180
high support that would really make this

347
00:15:23,490 --> 00:15:28,560
more useful<font color="#CCCCCC"> to a larger number of people</font>

348
00:15:26,180 --> 00:15:30,239
and then probably<font color="#E5E5E5"> one of the more</font>

349
00:15:28,560 --> 00:15:32,760
important things is we're waiting<font color="#CCCCCC"> on it</font>

350
00:15:30,240 --> 00:15:35,310
<font color="#CCCCCC">they're in progress is a</font><font color="#E5E5E5"> four by 10 gig</font>

351
00:15:32,760 --> 00:15:37,560
net of pga the next generation at a PGA

352
00:15:35,310 --> 00:15:41,219
card so we're<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> go from a four</font>

353
00:15:37,560 --> 00:15:42,989
gig<font color="#CCCCCC"> LSR to a 40 gig lsr so</font><font color="#E5E5E5"> that that'll</font>

354
00:15:41,220 --> 00:15:45,480
make things much more interesting from

355
00:15:42,990 --> 00:15:49,080
that perspective looking forward a

356
00:15:45,480 --> 00:15:50,790
little bit i<font color="#E5E5E5"> think you know from the</font>

357
00:15:49,080 --> 00:15:51,840
research perspective one of the<font color="#E5E5E5"> things</font>

358
00:15:50,790 --> 00:15:54,449
<font color="#CCCCCC">i'm</font><font color="#E5E5E5"> going to do with it is i'm going to</font>

359
00:15:51,840 --> 00:15:57,930
i'm going<font color="#E5E5E5"> to take some number of these</font>

360
00:15:54,450 --> 00:16:00,540
open source<font color="#CCCCCC"> LS ours in</font><font color="#E5E5E5"> centralize them</font>

361
00:15:57,930 --> 00:16:02,550
with a single open flow controller and

362
00:16:00,540 --> 00:16:05,010
we're going to research how we can build

363
00:16:02,550 --> 00:16:07,800
a small network whether<font color="#E5E5E5"> it's data center</font>

364
00:16:05,010 --> 00:16:09,510
or appearing edge or whatever using

365
00:16:07,800 --> 00:16:11,130
these devices in that kind of

366
00:16:09,510 --> 00:16:13,110
environment and then<font color="#CCCCCC"> i'm also going</font><font color="#E5E5E5"> to</font>

367
00:16:11,130 --> 00:16:16,140
continue<font color="#CCCCCC"> i have a lot of interest</font><font color="#E5E5E5"> in</font>

368
00:16:13,110 --> 00:16:19,470
trying to in the lab develop a<font color="#CCCCCC"> bgp free</font>

369
00:16:16,140 --> 00:16:20,760
<font color="#CCCCCC">Corps that's inexpensive and scales than</font>

370
00:16:19,470 --> 00:16:23,550
the<font color="#E5E5E5"> data plan so that we can actually</font>

371
00:16:20,760 --> 00:16:30,210
figure out<font color="#E5E5E5"> how to build one of these at</font>

372
00:16:23,550 --> 00:16:32,280
scale and that's it really the the

373
00:16:30,210 --> 00:16:35,460
tarball is hosted at code.google.com an

374
00:16:32,280 --> 00:16:37,620
<font color="#CCCCCC">open-source tell us are you don't need a</font>

375
00:16:35,460 --> 00:16:39,270
net of pga if you don't have it<font color="#E5E5E5"> probably</font>

376
00:16:37,620 --> 00:16:41,340
nobody does you don't need<font color="#E5E5E5"> an affiliated</font>

377
00:16:39,270 --> 00:16:43,470
to actually test the software piece of

378
00:16:41,340 --> 00:16:45,090
it you can you can easily<font color="#E5E5E5"> get everything</font>

379
00:16:43,470 --> 00:16:46,380
working right<font color="#CCCCCC"> up to the part where you</font>

380
00:16:45,090 --> 00:16:51,140
need to program the hardware so you can

381
00:16:46,380 --> 00:16:54,870
at<font color="#E5E5E5"> least have an a software-based</font><font color="#CCCCCC"> lsr</font>

382
00:16:51,140 --> 00:16:56,520
and then if you're interested in in the

383
00:16:54,870 --> 00:17:00,240
underlying projects<font color="#CCCCCC"> i have their repost</font>

384
00:16:56,520 --> 00:17:02,370
listed here it would be<font color="#E5E5E5"> very nice if we</font>

385
00:17:00,240 --> 00:17:05,099
could get more support in these as well

386
00:17:02,370 --> 00:17:06,300
<font color="#E5E5E5">because if we it would just simplify</font>

387
00:17:05,099 --> 00:17:08,520
things greatly if we could actually get

388
00:17:06,300 --> 00:17:09,839
mpls support directly in the linux

389
00:17:08,520 --> 00:17:12,510
kernel rather than on a branch if we

390
00:17:09,839 --> 00:17:14,639
could get<font color="#CCCCCC"> the LDP support pulled up into</font>

391
00:17:12,510 --> 00:17:16,439
the main quagga branch it just it would

392
00:17:14,640 --> 00:17:18,179
help it<font color="#E5E5E5"> out not only helped this project</font>

393
00:17:16,439 --> 00:17:20,220
greatly simplify but it would help

394
00:17:18,179 --> 00:17:24,149
I think the whole routing community in

395
00:17:20,220 --> 00:17:30,690
the open source since that's all I have

396
00:17:24,148 --> 00:17:32,729
really any questions Danny<font color="#CCCCCC"> McPherson</font>

397
00:17:30,690 --> 00:17:33,809
things stop sharing this is kind of a

398
00:17:32,730 --> 00:17:35,700
two-part question actually I was

399
00:17:33,809 --> 00:17:37,470
wondering if um you know I've heard

400
00:17:35,700 --> 00:17:39,090
<font color="#CCCCCC">openflow come up in a context I know</font>

401
00:17:37,470 --> 00:17:40,049
this kind of on the periphery of what

402
00:17:39,090 --> 00:17:42,779
you were talking about but in the

403
00:17:40,049 --> 00:17:44,908
context of scaling virtual machines I'm

404
00:17:42,779 --> 00:17:47,039
like a common hypervisor to alleviate

405
00:17:44,909 --> 00:17:49,559
some of the link layer traffic for

406
00:17:47,039 --> 00:17:51,450
example our broadcast traffic that might

407
00:17:49,559 --> 00:17:53,759
go across a common link layer Network

408
00:17:51,450 --> 00:17:55,559
attachment and doing it on the in-system

409
00:17:53,759 --> 00:17:57,059
that that might<font color="#E5E5E5"> be at the hypervisor</font>

410
00:17:55,559 --> 00:17:59,249
layer for example I<font color="#E5E5E5"> was just wondering</font>

411
00:17:57,059 --> 00:18:01,320
if you<font color="#CCCCCC"> had any thoughts on on that or</font>

412
00:17:59,249 --> 00:18:03,539
that as an<font color="#E5E5E5"> application for this or if</font>

413
00:18:01,320 --> 00:18:05,039
that link layer traffic might be

414
00:18:03,539 --> 00:18:06,179
problematic at all or<font color="#CCCCCC"> if that's not a</font>

415
00:18:05,039 --> 00:18:08,580
problem<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the environments you're</font>

416
00:18:06,179 --> 00:18:11,190
familiar with well as a lot of questions

417
00:18:08,580 --> 00:18:14,279
I hadn't thought about it in the context

418
00:18:11,190 --> 00:18:18,029
of this this was<font color="#E5E5E5"> really just more how</font>

419
00:18:14,279 --> 00:18:20,009
can we do a straight simple basic what's

420
00:18:18,029 --> 00:18:21,779
<font color="#CCCCCC">that</font><font color="#E5E5E5"> what's the most basic mpls</font>

421
00:18:20,009 --> 00:18:24,570
functionality we can start<font color="#CCCCCC"> with and how</font>

422
00:18:21,779 --> 00:18:26,309
can<font color="#E5E5E5"> we build on it so I guess I'm</font><font color="#CCCCCC"> not</font>

423
00:18:24,570 --> 00:18:27,600
really too familiar with open flow and

424
00:18:26,309 --> 00:18:29,549
hypervisor all<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about I'd</font>

425
00:18:27,600 --> 00:18:32,480
like to talk to<font color="#CCCCCC"> about it offline maybe</font>

426
00:18:29,549 --> 00:18:32,480
so i can understand it better

427
00:18:34,620 --> 00:18:37,280
nice

428
00:18:37,299 --> 00:18:42,850
ok so the no more questions thanks very

429
00:18:40,429 --> 00:18:42,850
much Scott

