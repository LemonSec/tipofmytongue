1
00:00:00,000 --> 00:00:05,840
I

2
00:00:00,990 --> 00:00:05,840
and<font color="#E5E5E5"> Martin if you're in the room good</font>

3
00:00:13,910 --> 00:00:19,019
good afternoon<font color="#CCCCCC"> my name is Tom Daley I'm</font>

4
00:00:16,260 --> 00:00:20,670
with dynamic network services today I

5
00:00:19,019 --> 00:00:22,348
wanted<font color="#CCCCCC"> to introduce</font><font color="#E5E5E5"> to the nanog</font>

6
00:00:20,670 --> 00:00:26,670
community something<font color="#CCCCCC"> we created called</font>

7
00:00:22,349 --> 00:00:31,080
open BF d D so<font color="#E5E5E5"> bi-directional fording</font>

8
00:00:26,670 --> 00:00:33,090
detection is defined by RFC 5880 it is a

9
00:00:31,080 --> 00:00:36,060
protocol<font color="#CCCCCC"> that can be used</font><font color="#E5E5E5"> to trigger</font>

10
00:00:33,090 --> 00:00:38,550
more time Leary convergence of routing

11
00:00:36,060 --> 00:00:41,820
protocols that are running across shared

12
00:00:38,550 --> 00:00:44,849
media paths so you can pin BFD

13
00:00:41,820 --> 00:00:46,650
underneath ospf<font color="#CCCCCC"> bgp other routing</font>

14
00:00:44,850 --> 00:00:51,000
protocols that usually use hello timers

15
00:00:46,650 --> 00:00:53,550
to trigger convergence events and allow

16
00:00:51,000 --> 00:00:55,290
BFD to establish the fact that the

17
00:00:53,550 --> 00:00:57,900
forwarding plane over that shared media

18
00:00:55,290 --> 00:00:59,310
path is actually operational and that

19
00:00:57,900 --> 00:01:01,949
packets can be forwarded<font color="#E5E5E5"> over the path</font>

20
00:00:59,310 --> 00:01:03,660
and if for<font color="#E5E5E5"> some reason packets can't be</font>

21
00:01:01,950 --> 00:01:06,539
forwarded over the path rip the routing

22
00:01:03,660 --> 00:01:08,640
protocol down much much more quickly so

23
00:01:06,539 --> 00:01:10,740
we almost get sonnet like rican vergence

24
00:01:08,640 --> 00:01:13,140
for routing protocols when<font color="#E5E5E5"> link alarms</font>

25
00:01:10,740 --> 00:01:15,780
are forwarded out to the edge devices in

26
00:01:13,140 --> 00:01:17,130
the network with this so here's just

27
00:01:15,780 --> 00:01:19,560
kind of a simple<font color="#E5E5E5"> picture of that right</font>

28
00:01:17,130 --> 00:01:21,298
you have your<font color="#E5E5E5"> Ethernet layer down at the</font>

29
00:01:19,560 --> 00:01:22,799
bottom<font color="#E5E5E5"> let's say it's you know two</font>

30
00:01:21,299 --> 00:01:25,200
routers on either end and two switches

31
00:01:22,799 --> 00:01:27,810
in the middle you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> BF d running on</font>

32
00:01:25,200 --> 00:01:30,869
top of that circuit with you know

33
00:01:27,810 --> 00:01:32,880
something like<font color="#CCCCCC"> a one second packet check</font>

34
00:01:30,869 --> 00:01:35,310
running through those forwarding planes

35
00:01:32,880 --> 00:01:37,530
on those devices and then on top of that

36
00:01:35,310 --> 00:01:40,890
you know typical ibgp adjacency with a

37
00:01:37,530 --> 00:01:42,420
180 second keep a live session so

38
00:01:40,890 --> 00:01:45,509
without<font color="#E5E5E5"> BFD you know if something</font>

39
00:01:42,420 --> 00:01:47,280
<font color="#E5E5E5">happens to the underlying link it's</font>

40
00:01:45,509 --> 00:01:48,689
<font color="#E5E5E5">going to</font><font color="#CCCCCC"> take 180</font><font color="#E5E5E5"> seconds for that</font><font color="#CCCCCC"> BGP</font>

41
00:01:47,280 --> 00:01:52,759
session to reconvert it's got a timeout

42
00:01:48,689 --> 00:01:54,389
hellos have to expire with<font color="#E5E5E5"> BFD in place</font>

43
00:01:52,759 --> 00:01:55,799
depending upon your routing

44
00:01:54,389 --> 00:01:59,399
implementation<font color="#CCCCCC"> it will actually signal</font>

45
00:01:55,799 --> 00:02:00,899
to the overlying routing protocol and

46
00:01:59,399 --> 00:02:03,020
say hey we don't<font color="#E5E5E5"> have forwarding</font>

47
00:02:00,899 --> 00:02:05,759
capability anymore rip down the

48
00:02:03,020 --> 00:02:09,720
substance unwrite now and your network

49
00:02:05,759 --> 00:02:12,420
rican verges faster so at dine we don't

50
00:02:09,720 --> 00:02:14,099
<font color="#E5E5E5">actually use BFD for that at</font>

51
00:02:12,420 --> 00:02:16,140
all we use it<font color="#CCCCCC"> for something totally</font>

52
00:02:14,099 --> 00:02:17,579
different which is<font color="#CCCCCC"> any</font><font color="#E5E5E5"> cast within the</font>

53
00:02:16,140 --> 00:02:20,970
data center so that way we can do low

54
00:02:17,580 --> 00:02:22,349
latency low-cost load balancing so

55
00:02:20,970 --> 00:02:25,020
everybody's seen this before you do it

56
00:02:22,349 --> 00:02:26,700
<font color="#E5E5E5">with ecmp some sort of igp to signal</font>

57
00:02:25,020 --> 00:02:28,709
next top availability up to your router

58
00:02:26,700 --> 00:02:30,359
and<font color="#E5E5E5"> then the router says oh I have</font>

59
00:02:28,709 --> 00:02:31,620
<font color="#E5E5E5">multiple paths to the same destination</font>

60
00:02:30,360 --> 00:02:33,930
and if i configure my router

61
00:02:31,620 --> 00:02:36,270
appropriately I get a<font color="#CCCCCC"> CMP load balance</font>

62
00:02:33,930 --> 00:02:37,410
per packet through that router now you

63
00:02:36,270 --> 00:02:38,970
get<font color="#E5E5E5"> something that kind of looks like</font>

64
00:02:37,410 --> 00:02:41,220
load balancing but is<font color="#E5E5E5"> really just layer</font>

65
00:02:38,970 --> 00:02:42,810
for hashing and if your distribution of

66
00:02:41,220 --> 00:02:44,670
clients coming into<font color="#CCCCCC"> your application is</font>

67
00:02:42,810 --> 00:02:47,760
diverse enough you get<font color="#CCCCCC"> something that</font>

68
00:02:44,670 --> 00:02:49,500
looks like load sharing so we did this

69
00:02:47,760 --> 00:02:51,569
in our network with ospf and<font color="#CCCCCC"> a cmp to</font>

70
00:02:49,500 --> 00:02:54,120
start we were running quagga on every

71
00:02:51,569 --> 00:02:55,890
service box the service VIP itself was

72
00:02:54,120 --> 00:02:57,720
you know on the loop back of the box

73
00:02:55,890 --> 00:02:59,850
ospf would take<font color="#E5E5E5"> that</font><font color="#CCCCCC"> loopback</font>

74
00:02:57,720 --> 00:03:01,980
announcement inject it into<font color="#CCCCCC"> IGP into</font>

75
00:02:59,850 --> 00:03:03,299
ospf the router would<font color="#E5E5E5"> say hey</font><font color="#CCCCCC"> i have</font>

76
00:03:01,980 --> 00:03:06,720
equal cost paths to a lot of different

77
00:03:03,299 --> 00:03:07,709
places<font color="#E5E5E5"> and</font><font color="#CCCCCC"> i get some load sharing as we</font>

78
00:03:06,720 --> 00:03:09,780
all<font color="#E5E5E5"> know you can do</font><font color="#CCCCCC"> that on</font><font color="#E5E5E5"> the to</font>

79
00:03:07,709 --> 00:03:11,130
topple of the four topple the nice thing

80
00:03:09,780 --> 00:03:13,769
about this is if<font color="#E5E5E5"> something goes</font><font color="#CCCCCC"> wrong</font>

81
00:03:11,130 --> 00:03:15,569
with your service Damon just<font color="#E5E5E5"> rip down</font>

82
00:03:13,769 --> 00:03:17,250
your ospf session right just make that

83
00:03:15,569 --> 00:03:18,570
such and go<font color="#CCCCCC"> away and now you're not</font>

84
00:03:17,250 --> 00:03:19,980
sending traffic there anymore but<font color="#CCCCCC"> you</font>

85
00:03:18,570 --> 00:03:23,459
have a rican vergence that has to happen

86
00:03:19,980 --> 00:03:24,750
up on your edge device so that can take

87
00:03:23,459 --> 00:03:26,549
you<font color="#CCCCCC"> know depending upon your hello</font>

88
00:03:24,750 --> 00:03:28,950
timers in your routing protocol up to

89
00:03:26,549 --> 00:03:30,720
180<font color="#CCCCCC"> s I can survie converge and we said</font>

90
00:03:28,950 --> 00:03:32,970
that's<font color="#E5E5E5"> not good so that's what the this</font>

91
00:03:30,720 --> 00:03:35,700
network diagram that's what that looks

92
00:03:32,970 --> 00:03:38,220
like you<font color="#E5E5E5"> know you just have unicast</font>

93
00:03:35,700 --> 00:03:39,810
interfaces on the<font color="#E5E5E5"> 0 you have your</font>

94
00:03:38,220 --> 00:03:42,810
service address is bound to<font color="#CCCCCC"> vips you</font>

95
00:03:39,810 --> 00:03:44,340
have a local<font color="#E5E5E5"> land the eath 0 interfaces</font>

96
00:03:42,810 --> 00:03:47,730
are passive and the loop backs

97
00:03:44,340 --> 00:03:49,320
participate in ospf so that's what the

98
00:03:47,730 --> 00:03:54,750
load balancer out looks like in a

99
00:03:49,320 --> 00:03:56,670
<font color="#CCCCCC">Juniper just for reference so we said</font>

100
00:03:54,750 --> 00:03:59,459
well this is great but you know<font color="#E5E5E5"> once you</font>

101
00:03:56,670 --> 00:04:02,280
scale ospf to maybe like 16 way or 64

102
00:03:59,459 --> 00:04:03,709
way<font color="#CCCCCC"> cmp you know if a machine should</font>

103
00:04:02,280 --> 00:04:05,910
come<font color="#CCCCCC"> out of that routing protocol</font>

104
00:04:03,709 --> 00:04:07,859
because you either took<font color="#E5E5E5"> it</font><font color="#CCCCCC"> down or there</font>

105
00:04:05,910 --> 00:04:09,600
was an outage you're putting a lot of

106
00:04:07,859 --> 00:04:12,150
strain on the router<font color="#CCCCCC"> CPU to recompute</font>

107
00:04:09,600 --> 00:04:13,980
topology during that<font color="#CCCCCC"> rican vergence and</font>

108
00:04:12,150 --> 00:04:16,228
we said there's got to be a better<font color="#E5E5E5"> way</font>

109
00:04:13,980 --> 00:04:19,349
and we started thinking<font color="#CCCCCC"> about what BFD</font>

110
00:04:16,228 --> 00:04:21,418
can do for<font color="#CCCCCC"> us so seeing that there was</font>

111
00:04:19,350 --> 00:04:23,720
no viable<font color="#E5E5E5"> open source implementation of</font>

112
00:04:21,418 --> 00:04:26,599
the BFD protocol we started writing open

113
00:04:23,720 --> 00:04:28,640
fdd it runs on top of freebsd at the

114
00:04:26,600 --> 00:04:30,050
moment it enumerates next top

115
00:04:28,640 --> 00:04:31,940
availability between data center edge

116
00:04:30,050 --> 00:04:34,220
routers and internal service machines so

117
00:04:31,940 --> 00:04:35,480
rather<font color="#E5E5E5"> than</font><font color="#CCCCCC"> having that ospf area</font>

118
00:04:34,220 --> 00:04:37,250
between those two machines in the router

119
00:04:35,480 --> 00:04:38,900
now now you<font color="#E5E5E5"> just have point to point b</font>

120
00:04:37,250 --> 00:04:40,970
FD sessions between the edge router and

121
00:04:38,900 --> 00:04:44,270
the machines that are providing services

122
00:04:40,970 --> 00:04:45,980
and if you configure your router to look

123
00:04:44,270 --> 00:04:47,870
at the BFD session you<font color="#CCCCCC"> can see that</font>

124
00:04:45,980 --> 00:04:50,240
<font color="#CCCCCC">these BFD sessions are up over to some</font>

125
00:04:47,870 --> 00:04:51,740
freebsd boxes and<font color="#E5E5E5"> then you have multiple</font>

126
00:04:50,240 --> 00:04:54,770
static routes that are being load

127
00:04:51,740 --> 00:04:56,360
balanced or load shared if you will it's

128
00:04:54,770 --> 00:04:58,640
<font color="#CCCCCC">not traditional it's not true load</font>

129
00:04:56,360 --> 00:05:01,910
balancing with having multiple next<font color="#E5E5E5"> hops</font>

130
00:04:58,640 --> 00:05:05,120
enumerated and that's kind of where

131
00:05:01,910 --> 00:05:07,580
<font color="#E5E5E5">we're at we have an implementation the</font>

132
00:05:05,120 --> 00:05:09,530
actual process that you can run<font color="#E5E5E5"> is</font>

133
00:05:07,580 --> 00:05:11,320
called BFD beacon it'll bring up and

134
00:05:09,530 --> 00:05:13,669
negotiate an asynchronous<font color="#CCCCCC"> BFD session</font>

135
00:05:11,320 --> 00:05:16,190
we're working<font color="#CCCCCC"> on swapping out the event</font>

136
00:05:13,670 --> 00:05:17,780
libraries so that way<font color="#CCCCCC"> I'll be supported</font>

137
00:05:16,190 --> 00:05:19,280
on multiple operating systems right now

138
00:05:17,780 --> 00:05:21,890
it's limited to<font color="#CCCCCC"> K event which only runs</font>

139
00:05:19,280 --> 00:05:24,049
<font color="#E5E5E5">in freebsd and at</font><font color="#CCCCCC"> some point we don't</font>

140
00:05:21,890 --> 00:05:26,270
<font color="#E5E5E5">need it but somebody else might and we</font>

141
00:05:24,050 --> 00:05:28,700
might implement it anyways which is full

142
00:05:26,270 --> 00:05:30,979
support for demand mode and echo mode in

143
00:05:28,700 --> 00:05:34,039
BFD so check it out it's<font color="#E5E5E5"> up on github</font>

144
00:05:30,980 --> 00:05:36,919
dining get hub calm / dining<font color="#E5E5E5"> / open V</font>

145
00:05:34,040 --> 00:05:40,270
<font color="#CCCCCC">FTD that's it hope</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> liked it and hope</font>

146
00:05:36,919 --> 00:05:40,270
somebody<font color="#CCCCCC"> finds it useful</font><font color="#E5E5E5"> thanks</font>

147
00:05:44,680 --> 00:05:54,250
any questions for tom<font color="#CCCCCC"> okay next we have</font>

