1
00:00:06,040 --> 00:00:09,790
<font color="#CCCCCC">all right hello everyone I'm sorry blood</font>

2
00:00:08,380 --> 00:00:11,860
Vince I'm with a<font color="#E5E5E5"> network automation team</font>

3
00:00:09,790 --> 00:00:13,959
here at Yahoo and I'm here with you I

4
00:00:11,860 --> 00:00:15,428
had<font color="#E5E5E5"> from the architecture team we're</font>

5
00:00:13,959 --> 00:00:16,750
<font color="#E5E5E5">here to talk to you about the the</font>

6
00:00:15,429 --> 00:00:19,450
automation that<font color="#E5E5E5"> we've developed to</font>

7
00:00:16,750 --> 00:00:21,730
automate our class networks and so

8
00:00:19,450 --> 00:00:23,980
unfortunately I'm here presenting with a

9
00:00:21,730 --> 00:00:28,899
broken<font color="#CCCCCC"> wrist fortunately we designed our</font>

10
00:00:23,980 --> 00:00:30,610
system to be hands-off so so what we're

11
00:00:28,899 --> 00:00:31,899
going to do is talk<font color="#CCCCCC"> about our motivation</font>

12
00:00:30,610 --> 00:00:33,910
for developing this system the

13
00:00:31,899 --> 00:00:36,280
<font color="#E5E5E5">components we developed to make it</font>

14
00:00:33,910 --> 00:00:38,010
<font color="#E5E5E5">happen I walk through</font><font color="#CCCCCC"> a specific use</font>

15
00:00:36,280 --> 00:00:40,810
case that's handled by the system and

16
00:00:38,010 --> 00:00:46,120
discuss our results and future

17
00:00:40,810 --> 00:00:48,400
applications um though I guess our hug

18
00:00:46,120 --> 00:00:51,489
is sooo boring<font color="#E5E5E5"> so I have to rush you</font><font color="#CCCCCC"> a</font>

19
00:00:48,400 --> 00:00:54,579
picture so um this picture is<font color="#E5E5E5"> probably</font>

20
00:00:51,490 --> 00:00:57,790
the<font color="#CCCCCC"> first</font><font color="#E5E5E5"> appearance of public</font>

21
00:00:54,579 --> 00:00:59,950
appearance of power<font color="#CCCCCC"> network so a we have</font>

22
00:00:57,790 --> 00:01:03,449
been<font color="#E5E5E5"> running</font><font color="#CCCCCC"> the for a number</font><font color="#E5E5E5"> of a</font>

23
00:00:59,950 --> 00:01:06,640
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> years and so it was</font>

24
00:01:03,449 --> 00:01:09,130
<font color="#E5E5E5">implemented design and prototyped up by</font>

25
00:01:06,640 --> 00:01:11,620
our<font color="#E5E5E5"> network team and the data center</font>

26
00:01:09,130 --> 00:01:15,339
team so good as to everybody who has

27
00:01:11,620 --> 00:01:17,380
involved<font color="#CCCCCC"> all right so let's</font><font color="#E5E5E5"> talk about</font>

28
00:01:15,340 --> 00:01:19,810
<font color="#E5E5E5">why we need this level of automation and</font>

29
00:01:17,380 --> 00:01:21,399
obviously class networks have pretty

30
00:01:19,810 --> 00:01:22,870
elaborate topologies they are pretty

31
00:01:21,400 --> 00:01:25,210
complex and they're just<font color="#E5E5E5"> not manageable</font>

32
00:01:22,870 --> 00:01:27,250
without some sort of automation and so a

33
00:01:25,210 --> 00:01:28,860
lot<font color="#E5E5E5"> of people</font><font color="#CCCCCC"> will start with automating</font>

34
00:01:27,250 --> 00:01:30,820
the initial state you know and

35
00:01:28,860 --> 00:01:32,170
generating those configurations and

36
00:01:30,820 --> 00:01:33,220
having the engineers push them out to

37
00:01:32,170 --> 00:01:35,500
get the state where they needed to be

38
00:01:33,220 --> 00:01:36,908
the start problem with<font color="#CCCCCC"> that is networks</font>

39
00:01:35,500 --> 00:01:38,409
aren't static we're constantly making

40
00:01:36,909 --> 00:01:40,150
changes and asking engineers to

41
00:01:38,409 --> 00:01:41,350
constantly be regenerating configs and

42
00:01:40,150 --> 00:01:43,869
pushing<font color="#E5E5E5"> them out to the network can be a</font>

43
00:01:41,350 --> 00:01:45,039
hassle additionally configuring the

44
00:01:43,869 --> 00:01:46,780
devices isn't just a matter of

45
00:01:45,040 --> 00:01:47,979
reflecting the desired state we do need

46
00:01:46,780 --> 00:01:49,930
<font color="#CCCCCC">to</font><font color="#E5E5E5"> get in some of those current state</font>

47
00:01:47,979 --> 00:01:52,750
pieces in order<font color="#E5E5E5"> to develop a cohesive</font>

48
00:01:49,930 --> 00:01:54,130
configuration for the<font color="#E5E5E5"> network so the</font>

49
00:01:52,750 --> 00:01:56,200
solution that<font color="#E5E5E5"> we came up with was to</font>

50
00:01:54,130 --> 00:01:57,699
design this system around state machine

51
00:01:56,200 --> 00:01:59,350
so that we could track the progression

52
00:01:57,700 --> 00:02:03,400
from our current state to our desired

53
00:01:59,350 --> 00:02:06,369
state yeah so before we go any<font color="#CCCCCC"> further</font>

54
00:02:03,400 --> 00:02:08,560
so I just would<font color="#CCCCCC"> like to mention two</font>

55
00:02:06,369 --> 00:02:11,170
observations that I think that is

56
00:02:08,560 --> 00:02:12,300
important in leading<font color="#CCCCCC"> to the solutions</font>

57
00:02:11,170 --> 00:02:15,359
that<font color="#E5E5E5"> we are trying to</font>

58
00:02:12,300 --> 00:02:19,170
in the<font color="#E5E5E5"> next few slides so the first</font>

59
00:02:15,360 --> 00:02:22,230
opposition is there's always<font color="#CCCCCC"> two states</font>

60
00:02:19,170 --> 00:02:24,540
in any of the systems is the first one

61
00:02:22,230 --> 00:02:26,640
is your<font color="#E5E5E5"> desired state the system's</font>

62
00:02:24,540 --> 00:02:29,910
<font color="#CCCCCC">desired state and the second one is</font>

63
00:02:26,640 --> 00:02:32,179
<font color="#CCCCCC">actually the your current state so these</font>

64
00:02:29,910 --> 00:02:35,340
tuesdays are not exactly the<font color="#CCCCCC"> same and</font>

65
00:02:32,180 --> 00:02:38,100
often they are different<font color="#E5E5E5"> and the process</font>

66
00:02:35,340 --> 00:02:40,500
of actually the action of pushing the

67
00:02:38,100 --> 00:02:44,760
configurations into the devices are

68
00:02:40,500 --> 00:02:47,640
actually a process that try<font color="#E5E5E5"> to reconcile</font>

69
00:02:44,760 --> 00:02:49,709
these two states that's the first

70
00:02:47,640 --> 00:02:55,769
observation and the second opposition is

71
00:02:49,710 --> 00:02:57,360
that we<font color="#CCCCCC"> actually have to have the system</font>

72
00:02:55,770 --> 00:03:00,870
actually has to take into consideration

73
00:02:57,360 --> 00:03:03,720
of the live data so what I mean life is

74
00:03:00,870 --> 00:03:05,430
that the<font color="#CCCCCC"> currently system that for</font>

75
00:03:03,720 --> 00:03:07,590
<font color="#CCCCCC">example if you have a packet losses</font>

76
00:03:05,430 --> 00:03:10,260
incurred certain think that the system

77
00:03:07,590 --> 00:03:12,480
may have to make<font color="#E5E5E5"> decisions upon that to</font>

78
00:03:10,260 --> 00:03:15,120
put whether<font color="#CCCCCC"> drugging protocols on that</font>

79
00:03:12,480 --> 00:03:18,450
link or not so those two observations

80
00:03:15,120 --> 00:03:21,870
<font color="#CCCCCC">lida to the decision of using estimation</font>

81
00:03:18,450 --> 00:03:24,089
and as well<font color="#E5E5E5"> as a tight control loop in</font>

82
00:03:21,870 --> 00:03:27,980
order<font color="#CCCCCC"> to generate the next are</font><font color="#E5E5E5"> the</font>

83
00:03:24,090 --> 00:03:30,420
<font color="#E5E5E5">desired completion</font><font color="#CCCCCC"> states so we go next</font>

84
00:03:27,980 --> 00:03:32,340
so obviously the first thing we<font color="#E5E5E5"> need is</font>

85
00:03:30,420 --> 00:03:34,530
to establish<font color="#E5E5E5"> the desired state and the</font>

86
00:03:32,340 --> 00:03:36,270
way we did this is that one nice thing

87
00:03:34,530 --> 00:03:38,190
about the the network we architected is

88
00:03:36,270 --> 00:03:40,530
that we designed it with automation from

89
00:03:38,190 --> 00:03:42,420
in mind from<font color="#CCCCCC"> the beginning so we</font>

90
00:03:40,530 --> 00:03:44,100
<font color="#CCCCCC">actually developed it alongside a model</font>

91
00:03:42,420 --> 00:03:46,320
of it and that models hope used to

92
00:03:44,100 --> 00:03:47,910
dictate that desired state that model

93
00:03:46,320 --> 00:03:50,220
deterministically defines things like I

94
00:03:47,910 --> 00:03:52,859
our IP addressing our topology what we

95
00:03:50,220 --> 00:03:54,750
advertise out and all of<font color="#CCCCCC"> that is</font>

96
00:03:52,860 --> 00:03:56,640
actually defined as soon as the clusters

97
00:03:54,750 --> 00:03:58,230
created so in time anything's plugged in

98
00:03:56,640 --> 00:03:59,609
we know exactly<font color="#CCCCCC"> the IPS</font><font color="#E5E5E5"> that's going to</font>

99
00:03:58,230 --> 00:04:01,340
get<font color="#E5E5E5"> when know exactly where it should be</font>

100
00:03:59,610 --> 00:04:03,930
plugged in and all that good stuff and

101
00:04:01,340 --> 00:04:05,550
but it's not enough<font color="#CCCCCC"> just to say the</font>

102
00:04:03,930 --> 00:04:07,410
state<font color="#E5E5E5"> that we need on creation we also</font>

103
00:04:05,550 --> 00:04:08,790
do<font color="#CCCCCC"> have</font><font color="#E5E5E5"> those changes i mentioned so we</font>

104
00:04:07,410 --> 00:04:11,370
do taken inputs from our network

105
00:04:08,790 --> 00:04:14,070
engineers into the model those same puts

106
00:04:11,370 --> 00:04:15,440
can be some things like new<font color="#CCCCCC"> host subnets</font>

107
00:04:14,070 --> 00:04:17,430
that we want to advertise and

108
00:04:15,440 --> 00:04:19,469
configurations for the tour host subnets

109
00:04:17,430 --> 00:04:21,150
and then the generic cluster level

110
00:04:19,470 --> 00:04:24,540
settings things like auth hosts log

111
00:04:21,149 --> 00:04:26,830
servers<font color="#CCCCCC"> NTP servers all that good stuff</font>

112
00:04:24,540 --> 00:04:28,630
so as we mentioned we do need<font color="#CCCCCC"> that</font>

113
00:04:26,830 --> 00:04:31,030
current state as well<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> developed a</font>

114
00:04:28,630 --> 00:04:34,630
live state telemetry gathering system

115
00:04:31,030 --> 00:04:36,429
and what this does<font color="#E5E5E5"> is a we have live</font>

116
00:04:34,630 --> 00:04:38,169
metrics and metadata that are sent to

117
00:04:36,430 --> 00:04:40,720
our collection system every 30 seconds

118
00:04:38,169 --> 00:04:42,340
by agents on the switches and these are

119
00:04:40,720 --> 00:04:44,169
used to calculate<font color="#E5E5E5"> our port States and we</font>

120
00:04:42,340 --> 00:04:45,940
know what type of configuration changes

121
00:04:44,169 --> 00:04:48,280
need to happen and it also allows us to

122
00:04:45,940 --> 00:04:49,810
monitor the system health the metadata

123
00:04:48,280 --> 00:04:51,400
is actually used for<font color="#E5E5E5"> tracking the</font>

124
00:04:49,810 --> 00:04:53,470
advance rid<font color="#E5E5E5"> the config delivery system</font>

125
00:04:51,400 --> 00:04:55,750
and<font color="#CCCCCC"> also in a few pieces</font><font color="#E5E5E5"> of our config</font>

126
00:04:53,470 --> 00:04:57,970
generation system so by having this

127
00:04:55,750 --> 00:04:59,380
system we can allow I have the live

128
00:04:57,970 --> 00:05:01,720
straight telemetry cannot allow our

129
00:04:59,380 --> 00:05:05,710
system to react<font color="#CCCCCC"> to</font><font color="#E5E5E5"> real-time changes on</font>

130
00:05:01,720 --> 00:05:07,720
the network so we also as I mentioned we

131
00:05:05,710 --> 00:05:11,950
use these<font color="#E5E5E5"> devices to push these metrics</font>

132
00:05:07,720 --> 00:05:13,600
to the live state system so the<font color="#E5E5E5"> way the</font>

133
00:05:11,950 --> 00:05:15,340
agent works is it actually<font color="#E5E5E5"> has two</font>

134
00:05:13,600 --> 00:05:18,040
functions it has the metric gathering<font color="#E5E5E5"> it</font>

135
00:05:15,340 --> 00:05:20,440
also has a config application system so

136
00:05:18,040 --> 00:05:21,850
<font color="#E5E5E5">as I mentioned</font><font color="#CCCCCC"> the metric system posts</font>

137
00:05:20,440 --> 00:05:23,740
to our live<font color="#E5E5E5"> state collection system</font>

138
00:05:21,850 --> 00:05:25,690
every 10<font color="#CCCCCC"> to 30 seconds</font><font color="#E5E5E5"> and it posts</font>

139
00:05:23,740 --> 00:05:29,320
<font color="#E5E5E5">things like link and admin</font><font color="#CCCCCC"> state</font><font color="#E5E5E5"> lldp</font>

140
00:05:25,690 --> 00:05:30,850
neighbors<font color="#E5E5E5"> and input output rate and some</font>

141
00:05:29,320 --> 00:05:32,740
other data we have in there as<font color="#CCCCCC"> well and</font>

142
00:05:30,850 --> 00:05:34,750
then we also<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the config application</font>

143
00:05:32,740 --> 00:05:36,460
portion so what this does<font color="#E5E5E5"> is when our</font>

144
00:05:34,750 --> 00:05:38,650
system has released a config to be

145
00:05:36,460 --> 00:05:40,870
loaded<font color="#CCCCCC"> up</font><font color="#E5E5E5"> and the switch can reach out</font>

146
00:05:38,650 --> 00:05:43,900
<font color="#CCCCCC">to a location and load that</font>

147
00:05:40,870 --> 00:05:45,610
configuration file over HTTP and the

148
00:05:43,900 --> 00:05:47,289
agent then performs the config replace

149
00:05:45,610 --> 00:05:50,550
and runs health checks to validate that

150
00:05:47,289 --> 00:05:52,870
the config was applied as expected and

151
00:05:50,550 --> 00:05:54,700
those health checks include things like

152
00:05:52,870 --> 00:05:56,410
the actual success<font color="#E5E5E5"> of the config</font>

153
00:05:54,700 --> 00:05:58,020
replaced and throw any errors when

154
00:05:56,410 --> 00:05:59,770
trying to apply the config and

155
00:05:58,020 --> 00:06:02,080
validating that we have our default

156
00:05:59,770 --> 00:06:04,210
route and that we haven't<font color="#E5E5E5"> seen</font><font color="#CCCCCC"> a too</font>

157
00:06:02,080 --> 00:06:06,340
drastic of a change and prefixes

158
00:06:04,210 --> 00:06:08,109
received and advertised as well as some

159
00:06:06,340 --> 00:06:09,580
<font color="#E5E5E5">pink checks that we do and there's</font>

160
00:06:08,110 --> 00:06:12,130
additional health checks<font color="#E5E5E5"> this is just</font>

161
00:06:09,580 --> 00:06:14,109
kind<font color="#CCCCCC"> of a sampling and what this then</font>

162
00:06:12,130 --> 00:06:16,000
allows the system to do is automatically

163
00:06:14,110 --> 00:06:18,220
perform a roll back and<font color="#E5E5E5"> report back if</font>

164
00:06:16,000 --> 00:06:19,660
<font color="#CCCCCC">something did go wrong and then a</font>

165
00:06:18,220 --> 00:06:22,720
network engineer<font color="#E5E5E5"> can get involved</font><font color="#CCCCCC"> and</font>

166
00:06:19,660 --> 00:06:24,430
resolve it and I do<font color="#E5E5E5"> want you on a kind</font>

167
00:06:22,720 --> 00:06:25,990
of comment for a moment on<font color="#E5E5E5"> why we went</font>

168
00:06:24,430 --> 00:06:28,690
<font color="#E5E5E5">this route instead of some of the open</font>

169
00:06:25,990 --> 00:06:30,740
source solutions for getting<font color="#E5E5E5"> config</font>

170
00:06:28,690 --> 00:06:34,669
<font color="#CCCCCC">sauna devices</font>

171
00:06:30,740 --> 00:06:37,310
yes so we<font color="#CCCCCC"> actually look at the way that</font>

172
00:06:34,669 --> 00:06:39,889
how we<font color="#E5E5E5"> actually want to do the conflict</font>

173
00:06:37,310 --> 00:06:41,780
pushes and the way that the system how

174
00:06:39,889 --> 00:06:44,060
they actually<font color="#E5E5E5"> are interconnected and</font>

175
00:06:41,780 --> 00:06:46,580
then the conversions are actually

176
00:06:44,060 --> 00:06:48,289
interdependent with each other and then

177
00:06:46,580 --> 00:06:51,229
the fact<font color="#E5E5E5"> that it actually has to take</font>

178
00:06:48,289 --> 00:06:54,349
the light David data in so the up the

179
00:06:51,229 --> 00:06:56,270
<font color="#E5E5E5">shelf solutions that we feel that is not</font>

180
00:06:54,349 --> 00:06:58,130
easy to actually cooperate it into these

181
00:06:56,270 --> 00:07:01,159
scenarios that's why that we were

182
00:06:58,130 --> 00:07:06,740
actually<font color="#E5E5E5"> two here in the solutions that</font>

183
00:07:01,160 --> 00:07:09,020
<font color="#E5E5E5">we present</font><font color="#CCCCCC"> here great so we've got our</font>

184
00:07:06,740 --> 00:07:11,150
live data we've got<font color="#E5E5E5"> our desired state we</font>

185
00:07:09,020 --> 00:07:13,490
now need to morph those into something

186
00:07:11,150 --> 00:07:15,080
we can push the devices so obviously the

187
00:07:13,490 --> 00:07:17,419
goal of any config<font color="#E5E5E5"> gin system is to</font>

188
00:07:15,080 --> 00:07:18,800
produce config but as I mentioned<font color="#CCCCCC"> we do</font>

189
00:07:17,419 --> 00:07:21,080
need to<font color="#E5E5E5"> get that live state in there so</font>

190
00:07:18,800 --> 00:07:22,759
our config gin system takes in several

191
00:07:21,080 --> 00:07:24,080
inputs it takes in our network model so

192
00:07:22,759 --> 00:07:27,199
that's our desired state it takes in our

193
00:07:24,080 --> 00:07:28,698
live state it also<font color="#E5E5E5"> represents references</font>

194
00:07:27,199 --> 00:07:30,110
some of our external data sources things

195
00:07:28,699 --> 00:07:33,830
like our asset management system or<font color="#E5E5E5"> I</font>

196
00:07:30,110 --> 00:07:35,449
<font color="#E5E5E5">pan system etc and it then populates our</font>

197
00:07:33,830 --> 00:07:38,960
device templates so we happen to use

198
00:07:35,449 --> 00:07:40,759
apache velocity in our case but<font color="#CCCCCC"> jinja</font><font color="#E5E5E5"> to</font>

199
00:07:38,960 --> 00:07:44,120
would also be a great solution for this

200
00:07:40,759 --> 00:07:46,099
um but<font color="#E5E5E5"> it's not enough</font><font color="#CCCCCC"> to just have</font>

201
00:07:44,120 --> 00:07:48,680
those<font color="#E5E5E5"> inputs we don't want our engineers</font>

202
00:07:46,099 --> 00:07:49,849
to have to say hey system go generate a

203
00:07:48,680 --> 00:07:51,949
config we want<font color="#CCCCCC"> that to happen</font>

204
00:07:49,849 --> 00:07:54,590
automatically<font color="#E5E5E5"> anytime a relevant change</font>

205
00:07:51,949 --> 00:07:56,389
occurs so we created a set of triggers

206
00:07:54,590 --> 00:07:58,549
that that cause a new config to get

207
00:07:56,389 --> 00:08:00,590
created so those triggers include things

208
00:07:58,550 --> 00:08:02,990
like the initial cluster creation when

209
00:08:00,590 --> 00:08:05,479
we allocate new top-of-rack switches any

210
00:08:02,990 --> 00:08:08,060
port state changes that we detected from

211
00:08:05,479 --> 00:08:11,330
our live state system as well<font color="#E5E5E5"> as subnet</font>

212
00:08:08,060 --> 00:08:12,889
changes and template changes so that's

213
00:08:11,330 --> 00:08:15,500
all<font color="#E5E5E5"> well and good but we do need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get</font>

214
00:08:12,889 --> 00:08:17,479
that config out to the devices so and

215
00:08:15,500 --> 00:08:19,639
the goal of this system really is to

216
00:08:17,479 --> 00:08:21,949
release those config changes rapidly but

217
00:08:19,639 --> 00:08:24,349
also in a really controlled manner we

218
00:08:21,949 --> 00:08:26,419
don't want to blast out a bat config and

219
00:08:24,349 --> 00:08:28,250
<font color="#CCCCCC">take out an entire cluster so we do have</font>

220
00:08:26,419 --> 00:08:30,530
a<font color="#E5E5E5"> lot of control built in place and I'll</font>

221
00:08:28,250 --> 00:08:31,789
touch on that a little<font color="#E5E5E5"> bit later so our</font>

222
00:08:30,530 --> 00:08:33,529
solution here this is kind of what<font color="#E5E5E5"> that</font>

223
00:08:31,789 --> 00:08:35,958
state machine comes in we have three

224
00:08:33,529 --> 00:08:37,250
distinct states that a configuration can

225
00:08:35,958 --> 00:08:39,848
be in it could<font color="#E5E5E5"> be in the generated state</font>

226
00:08:37,250 --> 00:08:41,500
the release date or the validated state

227
00:08:39,849 --> 00:08:43,990
and these states are actually determined

228
00:08:41,500 --> 00:08:47,050
by comparing<font color="#CCCCCC"> the config versions that we</font>

229
00:08:43,990 --> 00:08:48,250
have persisted in<font color="#CCCCCC"> the database and by</font>

230
00:08:47,050 --> 00:08:49,990
persisting that in the database this

231
00:08:48,250 --> 00:08:52,120
means we can actually restart our system

232
00:08:49,990 --> 00:08:55,149
at any<font color="#E5E5E5"> time with literally no impact at</font>

233
00:08:52,120 --> 00:08:57,100
all and each<font color="#E5E5E5"> of these states are</font>

234
00:08:55,149 --> 00:08:58,930
processed individually and in<font color="#E5E5E5"> parallel</font>

235
00:08:57,100 --> 00:09:01,630
so and they are asynchronous there's

236
00:08:58,930 --> 00:09:03,310
nothing that's holding up and all the

237
00:09:01,630 --> 00:09:07,720
switches in each state<font color="#E5E5E5"> and there's no</font>

238
00:09:03,310 --> 00:09:10,000
reliance on the previous states so

239
00:09:07,720 --> 00:09:11,019
here's our state machine diagram and I'm

240
00:09:10,000 --> 00:09:14,500
going to<font color="#E5E5E5"> talk a little bit about how we</font>

241
00:09:11,019 --> 00:09:16,569
process things at each state so in order

242
00:09:14,500 --> 00:09:18,009
to get into the generated state we<font color="#E5E5E5"> had a</font>

243
00:09:16,569 --> 00:09:19,870
config trigger what those config

244
00:09:18,009 --> 00:09:22,540
triggers do is they set a flag in the

245
00:09:19,870 --> 00:09:25,449
database that<font color="#CCCCCC"> flag set device for</font>

246
00:09:22,540 --> 00:09:27,040
requiring a new configuration<font color="#E5E5E5"> once that</font>

247
00:09:25,449 --> 00:09:29,290
config has been successfully generated

248
00:09:27,040 --> 00:09:30,969
the generated version is now incremented

249
00:09:29,290 --> 00:09:33,099
so at that point it's higher than<font color="#CCCCCC"> the</font>

250
00:09:30,970 --> 00:09:35,410
released version which<font color="#CCCCCC"> is then equal to</font>

251
00:09:33,100 --> 00:09:36,910
the validated version to get from

252
00:09:35,410 --> 00:09:38,529
generated to release<font color="#E5E5E5"> that's where that</font>

253
00:09:36,910 --> 00:09:39,790
control mechanism comes in I'm going<font color="#E5E5E5"> to</font>

254
00:09:38,529 --> 00:09:42,430
cover<font color="#E5E5E5"> that in depth in the coming slides</font>

255
00:09:39,790 --> 00:09:44,019
and but once we<font color="#CCCCCC"> are in the release state</font>

256
00:09:42,430 --> 00:09:45,729
and the control release process

257
00:09:44,019 --> 00:09:48,639
increments that<font color="#E5E5E5"> release version so it</font>

258
00:09:45,730 --> 00:09:50,740
now matches the generated version and we

259
00:09:48,639 --> 00:09:53,889
are safe to write that config to disk to

260
00:09:50,740 --> 00:09:55,540
be served up by HTTP so in the release

261
00:09:53,889 --> 00:09:57,880
date we pull in<font color="#E5E5E5"> all those that are in</font>

262
00:09:55,540 --> 00:09:59,259
<font color="#E5E5E5">that have the matching generating</font>

263
00:09:57,880 --> 00:10:01,360
release versions and we<font color="#E5E5E5"> simply write</font>

264
00:09:59,259 --> 00:10:03,009
them to disk from there that's where the

265
00:10:01,360 --> 00:10:05,110
device agents come in those device

266
00:10:03,009 --> 00:10:07,120
agents will check that path for a new

267
00:10:05,110 --> 00:10:08,980
config it'll load them up it'll

268
00:10:07,120 --> 00:10:11,589
determine what version it's on and it

269
00:10:08,980 --> 00:10:13,689
will report that<font color="#E5E5E5"> back to our</font><font color="#CCCCCC"> system once</font>

270
00:10:11,589 --> 00:10:15,459
our system has seen that the version

271
00:10:13,689 --> 00:10:17,469
running on the device matches are

272
00:10:15,459 --> 00:10:18,939
generated in released versions then we

273
00:10:17,470 --> 00:10:20,430
say we're in the validated state and

274
00:10:18,939 --> 00:10:22,990
we're prepared to generate more configs

275
00:10:20,430 --> 00:10:25,839
so one thing<font color="#E5E5E5"> I want to note is we do not</font>

276
00:10:22,990 --> 00:10:28,209
<font color="#E5E5E5">allow any backwards motion through this</font>

277
00:10:25,839 --> 00:10:30,240
system<font color="#E5E5E5"> you cannot</font><font color="#CCCCCC"> go from released back</font>

278
00:10:28,209 --> 00:10:32,229
to generated we halt generation until

279
00:10:30,240 --> 00:10:34,329
whatever's been written to disk has<font color="#CCCCCC"> been</font>

280
00:10:32,230 --> 00:10:36,430
successfully loaded by the switch this

281
00:10:34,329 --> 00:10:37,899
is so that<font color="#E5E5E5"> we know exactly</font><font color="#CCCCCC"> which config</font>

282
00:10:36,430 --> 00:10:39,310
the switch will be trying<font color="#E5E5E5"> to load up we</font>

283
00:10:37,899 --> 00:10:41,310
don't<font color="#E5E5E5"> want to have things move backwards</font>

284
00:10:39,310 --> 00:10:44,800
and cause confusion when troubleshooting

285
00:10:41,310 --> 00:10:47,138
yeah so I would like to<font color="#E5E5E5"> add that on this</font>

286
00:10:44,800 --> 00:10:47,719
diagram<font color="#CCCCCC"> is actually pretty important</font><font color="#E5E5E5"> to</font>

287
00:10:47,139 --> 00:10:50,959
us

288
00:10:47,720 --> 00:10:54,410
then both<font color="#E5E5E5"> Zoe and I actually are often</font>

289
00:10:50,959 --> 00:10:56,449
refer back to this state diagram so

290
00:10:54,410 --> 00:10:58,219
basically if you look at<font color="#E5E5E5"> the state</font>

291
00:10:56,449 --> 00:11:01,069
diagram<font color="#CCCCCC"> of the validated basically it</font>

292
00:10:58,220 --> 00:11:03,259
represent the case that<font color="#CCCCCC"> the desired</font>

293
00:11:01,069 --> 00:11:07,310
state is the same of your current<font color="#E5E5E5"> state</font>

294
00:11:03,259 --> 00:11:09,410
and generated and released say that it's

295
00:11:07,310 --> 00:11:11,449
actually represented a case where your

296
00:11:09,410 --> 00:11:14,060
desired state is deviate from your

297
00:11:11,449 --> 00:11:16,579
current state and the state transition

298
00:11:14,060 --> 00:11:19,910
is basically just reconciling those two

299
00:11:16,579 --> 00:11:22,339
states and the reason<font color="#CCCCCC"> for</font><font color="#E5E5E5"> us to actually</font>

300
00:11:19,910 --> 00:11:24,110
separate generate and release these

301
00:11:22,339 --> 00:11:26,649
<font color="#E5E5E5">because that we don't want to blast the</font>

302
00:11:24,110 --> 00:11:29,480
entire configurations to<font color="#E5E5E5"> all the devices</font>

303
00:11:26,649 --> 00:11:31,850
we need to actually have a controlled

304
00:11:29,480 --> 00:11:37,129
release that will be seen<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> next</font>

305
00:11:31,850 --> 00:11:38,480
few slides so<font color="#E5E5E5"> all right so let's talk</font>

306
00:11:37,129 --> 00:11:40,009
<font color="#CCCCCC">about this controlled release system</font><font color="#E5E5E5"> I</font>

307
00:11:38,480 --> 00:11:41,509
think many<font color="#E5E5E5"> of us would agree this is</font>

308
00:11:40,009 --> 00:11:43,550
arguably<font color="#CCCCCC"> the most important part</font><font color="#E5E5E5"> of the</font>

309
00:11:41,509 --> 00:11:47,360
system we really don't want to propagate

310
00:11:43,550 --> 00:11:48,560
bad things so what we do is when devices

311
00:11:47,360 --> 00:11:50,360
are in the generated state they're

312
00:11:48,560 --> 00:11:52,040
sorted into two queues and those two

313
00:11:50,360 --> 00:11:54,319
queues are based on the actual physical

314
00:11:52,040 --> 00:11:57,199
planes of redundancy and our and our

315
00:11:54,319 --> 00:11:59,269
cluster networks so QA contains all the

316
00:11:57,199 --> 00:12:01,279
switches and<font color="#E5E5E5"> in-plane a and Q B contains</font>

317
00:11:59,269 --> 00:12:03,019
all the switches in plan B these cues

318
00:12:01,279 --> 00:12:06,319
don't advance unless the health checks

319
00:12:03,019 --> 00:12:08,300
pass so so we get our generated devices

320
00:12:06,319 --> 00:12:09,860
into our cubes ready to be pretty to be

321
00:12:08,300 --> 00:12:11,599
released but<font color="#E5E5E5"> we also need to track our</font>

322
00:12:09,860 --> 00:12:14,269
devices that are currently in the

323
00:12:11,600 --> 00:12:16,850
release date so what we do is we sort

324
00:12:14,269 --> 00:12:19,009
those release configs into sub<font color="#CCCCCC"> qs by</font>

325
00:12:16,850 --> 00:12:21,649
device type and we limit the number of

326
00:12:19,009 --> 00:12:23,480
active<font color="#E5E5E5"> new configurations that can be</font>

327
00:12:21,649 --> 00:12:26,059
out at a given time in<font color="#E5E5E5"> that release date</font>

328
00:12:23,480 --> 00:12:27,709
so when a slot in the<font color="#E5E5E5"> sub Q opens I</font>

329
00:12:26,059 --> 00:12:29,629
switching the generated state will then

330
00:12:27,709 --> 00:12:32,420
advance to the release date but<font color="#E5E5E5"> not</font>

331
00:12:29,629 --> 00:12:35,120
before that happens additionally QA and

332
00:12:32,420 --> 00:12:37,250
QB are mutually exclusive so we cannot

333
00:12:35,120 --> 00:12:39,470
have any we cannot have devices that are

334
00:12:37,250 --> 00:12:40,879
in both<font color="#CCCCCC"> q's in the same</font><font color="#E5E5E5"> sub Q at the</font>

335
00:12:39,470 --> 00:12:43,100
same time we want to make sure<font color="#CCCCCC"> that</font>

336
00:12:40,879 --> 00:12:48,470
plane a succeeded before plane B

337
00:12:43,100 --> 00:12:50,809
switches get processed so I have a

338
00:12:48,470 --> 00:12:52,910
diagram here to kind of demonstrate that

339
00:12:50,809 --> 00:12:54,469
a little more clearly let's say we<font color="#CCCCCC"> have</font>

340
00:12:52,910 --> 00:12:58,149
a leaf switch that was in the generated

341
00:12:54,470 --> 00:13:00,679
state is in QA if the leaf queue is full

342
00:12:58,149 --> 00:13:01,580
it'll wait until that spot opens the

343
00:13:00,679 --> 00:13:03,890
spot opens

344
00:13:01,580 --> 00:13:05,360
when a lease which moves from<font color="#CCCCCC"> the</font>

345
00:13:03,890 --> 00:13:07,520
release date to the<font color="#E5E5E5"> validate its let's</font>

346
00:13:05,360 --> 00:13:10,010
say<font color="#E5E5E5"> we have a leaf in QA and there's two</font>

347
00:13:07,520 --> 00:13:12,860
leaf switches in QB and we allow us a 10

348
00:13:10,010 --> 00:13:14,540
Leafs this is actually a tunable value

349
00:13:12,860 --> 00:13:18,260
per cluster so<font color="#E5E5E5"> I'm just using arbitrary</font>

350
00:13:14,540 --> 00:13:20,449
numbers right now but and if they were

351
00:13:18,260 --> 00:13:22,640
only if<font color="#CCCCCC"> they're open slots but it was a</font>

352
00:13:20,450 --> 00:13:25,160
QB switch that was in<font color="#CCCCCC"> that leaf sub Q</font>

353
00:13:22,640 --> 00:13:27,260
the Q a switch cannot enter until all of

354
00:13:25,160 --> 00:13:29,740
those have cleared out and then it can

355
00:13:27,260 --> 00:13:33,140
resume and move on<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the release date</font>

356
00:13:29,740 --> 00:13:35,680
yeah um so I would likely to just add

357
00:13:33,140 --> 00:13:38,270
that basically this is<font color="#CCCCCC"> so more like a</font>

358
00:13:35,680 --> 00:13:40,810
<font color="#E5E5E5">TCP slight window where that you only</font>

359
00:13:38,270 --> 00:13:46,120
allow certain number of devices that

360
00:13:40,810 --> 00:13:46,119
enter this I'll<font color="#E5E5E5"> reduce the</font><font color="#CCCCCC"> state so yeah</font>

361
00:13:47,140 --> 00:13:51,650
so<font color="#E5E5E5"> and obviously that's one of our major</font>

362
00:13:50,030 --> 00:13:53,329
safeguards we do<font color="#CCCCCC"> actually have a lot of</font>

363
00:13:51,650 --> 00:13:55,310
other safeguards in place for<font color="#CCCCCC"> the system</font>

364
00:13:53,330 --> 00:13:56,920
so we do input validation on any model

365
00:13:55,310 --> 00:13:59,449
changes we<font color="#CCCCCC"> want to make sure that and</font>

366
00:13:56,920 --> 00:14:00,589
you know engineers<font color="#E5E5E5"> don't typo something</font>

367
00:13:59,450 --> 00:14:02,540
don't flub something and have it

368
00:14:00,590 --> 00:14:04,160
propagate out to the<font color="#CCCCCC"> network we also</font>

369
00:14:02,540 --> 00:14:05,719
<font color="#E5E5E5">have a peer review mechanism for any</font>

370
00:14:04,160 --> 00:14:08,240
cluster setting changes we really don't

371
00:14:05,720 --> 00:14:09,860
want an engineer to<font color="#E5E5E5"> typos and off host</font>

372
00:14:08,240 --> 00:14:11,270
IP and then<font color="#E5E5E5"> suddenly we're all locked</font>

373
00:14:09,860 --> 00:14:13,460
out of the network that would be pretty

374
00:14:11,270 --> 00:14:15,650
terrible so we do<font color="#CCCCCC"> have a peer review and</font>

375
00:14:13,460 --> 00:14:17,810
validation in place we also have<font color="#CCCCCC"> what we</font>

376
00:14:15,650 --> 00:14:19,579
call the big red button<font color="#E5E5E5"> and what this</font>

377
00:14:17,810 --> 00:14:21,979
allows us<font color="#CCCCCC"> to do is enable and disable</font>

378
00:14:19,580 --> 00:14:23,510
the system at both the switch level and

379
00:14:21,980 --> 00:14:25,430
the cluster<font color="#CCCCCC"> level</font><font color="#E5E5E5"> this can be used in</font>

380
00:14:23,510 --> 00:14:28,160
emergency scenario where we need to just

381
00:14:25,430 --> 00:14:29,390
stop the system get things to a grit get

382
00:14:28,160 --> 00:14:31,520
things to a healthy state again before

383
00:14:29,390 --> 00:14:33,380
resuming but it can also be used for a

384
00:14:31,520 --> 00:14:35,720
couple other use cases so if<font color="#CCCCCC"> we are</font>

385
00:14:33,380 --> 00:14:37,490
making some<font color="#E5E5E5"> massive template change we</font>

386
00:14:35,720 --> 00:14:39,320
can<font color="#CCCCCC"> actually use this to canary test</font>

387
00:14:37,490 --> 00:14:40,670
those changes and roll them out a couple

388
00:14:39,320 --> 00:14:43,250
switches at a time and then maybe a

389
00:14:40,670 --> 00:14:45,469
cluster to time and so on and we<font color="#CCCCCC"> can</font>

390
00:14:43,250 --> 00:14:47,840
also use this to prevent and you know

391
00:14:45,470 --> 00:14:49,370
bad gear from blocking and those sub Q

392
00:14:47,840 --> 00:14:51,470
so if we have a device that failed

393
00:14:49,370 --> 00:14:53,120
because<font color="#E5E5E5"> of some hardware failure we</font>

394
00:14:51,470 --> 00:14:55,190
don't want it taking up a slot in that

395
00:14:53,120 --> 00:14:56,960
sub Q in the system<font color="#CCCCCC"> until it's been</font>

396
00:14:55,190 --> 00:14:58,280
replaced<font color="#E5E5E5"> in healthy so we would we would</font>

397
00:14:56,960 --> 00:14:59,630
remove it from the system<font color="#CCCCCC"> and then we</font>

398
00:14:58,280 --> 00:15:02,030
would insert and threw it<font color="#E5E5E5"> back in once</font>

399
00:14:59,630 --> 00:15:03,860
that army went through and we can also

400
00:15:02,030 --> 00:15:05,300
use this for postponing changes<font color="#E5E5E5"> midnight</font>

401
00:15:03,860 --> 00:15:06,470
until<font color="#E5E5E5"> a maintenance window so if we had</font>

402
00:15:05,300 --> 00:15:07,640
an engineer that wanted to go<font color="#E5E5E5"> ahead and</font>

403
00:15:06,470 --> 00:15:09,860
make the change in the model ahead of

404
00:15:07,640 --> 00:15:11,480
time and then<font color="#CCCCCC"> just simply flip flip the</font>

405
00:15:09,860 --> 00:15:12,649
switch when<font color="#CCCCCC"> they're cmr starts that's an</font>

406
00:15:11,480 --> 00:15:15,019
option we<font color="#E5E5E5"> can do</font>

407
00:15:12,649 --> 00:15:16,790
and another layer we have is we do have

408
00:15:15,019 --> 00:15:18,559
a CLI on the switches that allows<font color="#CCCCCC"> us to</font>

409
00:15:16,790 --> 00:15:22,160
perform both rollback and shutdown of

410
00:15:18,559 --> 00:15:24,079
the system in case RN model becomes

411
00:15:22,160 --> 00:15:25,550
unavailable for our engineers to access

412
00:15:24,079 --> 00:15:27,290
or something goes wrong there they<font color="#CCCCCC"> can</font>

413
00:15:25,550 --> 00:15:29,628
still disabled it at the switch level

414
00:15:27,290 --> 00:15:31,219
and then of<font color="#CCCCCC"> course we ever monitoring I</font>

415
00:15:29,629 --> 00:15:32,689
think that's pretty crucial here we<font color="#E5E5E5"> need</font>

416
00:15:31,220 --> 00:15:35,059
<font color="#E5E5E5">to watch how this Howard changes</font>

417
00:15:32,689 --> 00:15:39,679
propagate through the network and alert

418
00:15:35,059 --> 00:15:42,499
if things don't behave as expected yeah

419
00:15:39,679 --> 00:15:45,230
so I would like<font color="#CCCCCC"> to add that so if we</font>

420
00:15:42,499 --> 00:15:48,199
have to<font color="#E5E5E5"> develop a totally safe system</font>

421
00:15:45,230 --> 00:15:50,449
that it would have to be<font color="#E5E5E5"> two systems</font>

422
00:15:48,199 --> 00:15:52,969
that are developed for the same prefer

423
00:15:50,449 --> 00:15:55,790
purpose independently so that's probably

424
00:15:52,970 --> 00:15:57,889
not quite<font color="#E5E5E5"> feasible for us so the next</font>

425
00:15:55,790 --> 00:15:59,868
best thing<font color="#CCCCCC"> that we came</font><font color="#E5E5E5"> up with is to</font>

426
00:15:57,889 --> 00:16:02,540
try to<font color="#E5E5E5"> defense this is the system in</font>

427
00:15:59,869 --> 00:16:04,369
multi layers so basically<font color="#E5E5E5"> we put</font>

428
00:16:02,540 --> 00:16:08,449
safeguard in different layers of the

429
00:16:04,369 --> 00:16:11,689
<font color="#E5E5E5">systems at the controller at</font><font color="#CCCCCC"> the control</font>

430
00:16:08,449 --> 00:16:14,719
push layer and at the device layer so as

431
00:16:11,689 --> 00:16:16,459
well so hopefully those one of those

432
00:16:14,720 --> 00:16:21,379
<font color="#CCCCCC">layers will</font><font color="#E5E5E5"> catch any of the errors</font><font color="#CCCCCC"> that</font>

433
00:16:16,459 --> 00:16:22,699
we will be see<font color="#E5E5E5"> all right so here's</font><font color="#CCCCCC"> some</font>

434
00:16:21,379 --> 00:16:24,170
of the<font color="#E5E5E5"> tasks that we've automated with</font>

435
00:16:22,699 --> 00:16:25,790
the system you'll notice that<font color="#CCCCCC"> it closely</font>

436
00:16:24,170 --> 00:16:27,439
aligns with those config triggers I

437
00:16:25,790 --> 00:16:30,469
mentioned because any kind<font color="#E5E5E5"> of network</font>

438
00:16:27,439 --> 00:16:32,629
change will produce a trigger and that's

439
00:16:30,470 --> 00:16:33,949
what<font color="#E5E5E5"> causes these tasks to occur so</font>

440
00:16:32,629 --> 00:16:35,899
these are things like cluster creation

441
00:16:33,949 --> 00:16:38,979
template changes subnet changes and

442
00:16:35,899 --> 00:16:41,600
allocations retires and cluster settings

443
00:16:38,980 --> 00:16:43,519
so let's go through<font color="#CCCCCC"> a specific use case</font>

444
00:16:41,600 --> 00:16:45,679
<font color="#CCCCCC">and this is a pretty common one we have</font>

445
00:16:43,519 --> 00:16:47,870
and so what we've done<font color="#E5E5E5"> is we've created</font>

446
00:16:45,679 --> 00:16:49,610
a form that our system engineers can use

447
00:16:47,870 --> 00:16:52,009
to request a number of new tours with a

448
00:16:49,610 --> 00:16:54,170
certain configuration once they complete

449
00:16:52,009 --> 00:16:56,269
that form those new tour switches are

450
00:16:54,170 --> 00:16:59,990
allocated both in<font color="#E5E5E5"> our model as</font><font color="#CCCCCC"> well as</font>

451
00:16:56,269 --> 00:17:01,699
our external data sources and from there

452
00:16:59,990 --> 00:17:04,279
those<font color="#E5E5E5"> top-of-rack switch configs get</font>

453
00:17:01,699 --> 00:17:05,990
generated and released and the<font color="#E5E5E5"> leafs</font>

454
00:17:04,279 --> 00:17:07,549
that connect<font color="#E5E5E5"> to them also get generated</font>

455
00:17:05,990 --> 00:17:08,750
released one plane at a time so that's

456
00:17:07,549 --> 00:17:11,209
the stage where we're going through that

457
00:17:08,750 --> 00:17:13,010
state machine that we described and from

458
00:17:11,209 --> 00:17:15,350
<font color="#CCCCCC">that point the leaf would load its new</font>

459
00:17:13,010 --> 00:17:16,609
configuration and the first step in<font color="#CCCCCC"> that</font>

460
00:17:15,349 --> 00:17:18,948
new configuration is actually

461
00:17:16,609 --> 00:17:21,619
unsheathing the port so we've got a tour

462
00:17:18,949 --> 00:17:23,389
provisioned we need<font color="#E5E5E5"> our system engineers</font>

463
00:17:21,619 --> 00:17:23,750
feel to plug it in so our did it we

464
00:17:23,388 --> 00:17:25,938
would have

465
00:17:23,750 --> 00:17:28,580
usually a pause between steps<font color="#CCCCCC"> five and</font>

466
00:17:25,939 --> 00:17:30,590
<font color="#CCCCCC">six so the port get sun shut it's ready</font>

467
00:17:28,580 --> 00:17:32,330
to accept a device and then at some

468
00:17:30,590 --> 00:17:36,139
<font color="#CCCCCC">point later our datacenter engineers</font>

469
00:17:32,330 --> 00:17:38,120
come in and they rack up that switch so

470
00:17:36,140 --> 00:17:40,280
from there the tour would load its new

471
00:17:38,120 --> 00:17:42,919
configuration successfully it would come

472
00:17:40,280 --> 00:17:44,450
<font color="#E5E5E5">up as a neighbor for the leaf and they</font>

473
00:17:42,920 --> 00:17:45,920
would see that they're both connected to

474
00:17:44,450 --> 00:17:48,140
the correct place and the leaf would

475
00:17:45,920 --> 00:17:49,310
detect that at support state change from

476
00:17:48,140 --> 00:17:51,200
there would iterate through the

477
00:17:49,310 --> 00:17:53,600
processes the steps needed<font color="#E5E5E5"> in order to</font>

478
00:17:51,200 --> 00:17:54,560
establish all the bgp sessions so<font color="#CCCCCC"> i'm</font>

479
00:17:53,600 --> 00:17:55,879
<font color="#E5E5E5">actually going to break this down a</font>

480
00:17:54,560 --> 00:17:59,330
<font color="#E5E5E5">little bit further</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> next on the</font>

481
00:17:55,880 --> 00:18:00,800
next<font color="#E5E5E5"> slide so we have kind of a</font>

482
00:17:59,330 --> 00:18:03,530
secondary state machine this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> our port</font>

483
00:18:00,800 --> 00:18:06,169
state change machine and this specific

484
00:18:03,530 --> 00:18:08,629
diagram only applies<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a leaf to tour</font>

485
00:18:06,170 --> 00:18:12,350
ports we will have different states for

486
00:18:08,630 --> 00:18:13,850
different and relationship types so we

487
00:18:12,350 --> 00:18:16,129
do have<font color="#E5E5E5"> five distinct states these</font>

488
00:18:13,850 --> 00:18:18,770
states are unused provisioned connected

489
00:18:16,130 --> 00:18:20,120
addressed and routed in the<font color="#CCCCCC"> ID a</font><font color="#E5E5E5"> state</font>

490
00:18:18,770 --> 00:18:22,670
that<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> have no top-of-rack</font>

491
00:18:20,120 --> 00:18:24,560
provision in that slot and it shut<font color="#E5E5E5"> it's</font>

492
00:18:22,670 --> 00:18:25,880
not doing anything as soon as<font color="#E5E5E5"> an</font>

493
00:18:24,560 --> 00:18:27,889
engineer comes in and provision

494
00:18:25,880 --> 00:18:30,500
something from the UI that<font color="#E5E5E5"> port gets</font>

495
00:18:27,890 --> 00:18:32,870
unshot and you<font color="#CCCCCC"> i actually</font><font color="#E5E5E5"> included a</font><font color="#CCCCCC"> and</font>

496
00:18:30,500 --> 00:18:34,970
config snippet here so you guys<font color="#CCCCCC"> can kind</font>

497
00:18:32,870 --> 00:18:36,139
of see how<font color="#E5E5E5"> this works and</font><font color="#CCCCCC"> they configure</font>

498
00:18:34,970 --> 00:18:37,130
<font color="#E5E5E5">I won't go into</font><font color="#CCCCCC"> that in detail but</font>

499
00:18:36,140 --> 00:18:40,300
you're welcome to take a peek at it

500
00:18:37,130 --> 00:18:42,950
later so once the port get<font color="#CCCCCC"> sun shut and</font>

501
00:18:40,300 --> 00:18:45,050
<font color="#E5E5E5">datacenter do this on our engineers plug</font>

502
00:18:42,950 --> 00:18:46,610
in the top<font color="#E5E5E5"> of rack will see that the</font>

503
00:18:45,050 --> 00:18:47,990
link state comes up and we'll make sure

504
00:18:46,610 --> 00:18:50,600
<font color="#CCCCCC">that the neighbors match if there was</font>

505
00:18:47,990 --> 00:18:52,910
some mismatch cabling we will not

506
00:18:50,600 --> 00:18:54,260
<font color="#E5E5E5">advance from provision</font><font color="#CCCCCC"> to connected we</font>

507
00:18:52,910 --> 00:18:55,820
don't we want<font color="#E5E5E5"> to make sure that those</font>

508
00:18:54,260 --> 00:18:59,570
neighbors are exactly what our model

509
00:18:55,820 --> 00:19:02,600
dictates and from there we apply our

510
00:18:59,570 --> 00:19:04,220
ipv4 and ipv6 configs and we<font color="#CCCCCC"> verified</font>

511
00:19:02,600 --> 00:19:05,540
that<font color="#E5E5E5"> those came up successfully and</font>

512
00:19:04,220 --> 00:19:08,330
there are packet loss rate is zero so

513
00:19:05,540 --> 00:19:09,889
<font color="#CCCCCC">that link is healthy and at that point</font>

514
00:19:08,330 --> 00:19:11,120
once we get<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the point where</font>

515
00:19:09,890 --> 00:19:14,060
everything's healthy there's no packet

516
00:19:11,120 --> 00:19:15,679
loss we then apply our routing config so

517
00:19:14,060 --> 00:19:18,169
once the routing config is applied we

518
00:19:15,680 --> 00:19:20,030
verify that our v4 and v6 bgp sessions

519
00:19:18,170 --> 00:19:21,620
establish as we expected and<font color="#E5E5E5"> it moves</font>

520
00:19:20,030 --> 00:19:23,440
into its final state the routed state

521
00:19:21,620 --> 00:19:25,489
and that means it's fully configured and

522
00:19:23,440 --> 00:19:27,590
you'll note that these are all

523
00:19:25,490 --> 00:19:28,910
unidirectional this is another state

524
00:19:27,590 --> 00:19:30,709
machine we do not allow backward

525
00:19:28,910 --> 00:19:32,060
movement we do not<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to link to flap</font>

526
00:19:30,710 --> 00:19:34,460
and then we rip out all the routing

527
00:19:32,060 --> 00:19:36,500
config that would be pretty terrible so

528
00:19:34,460 --> 00:19:37,430
at least in an unexpected manner if we

529
00:19:36,500 --> 00:19:40,070
do

530
00:19:37,430 --> 00:19:41,470
more live reactive stuff we may plan for

531
00:19:40,070 --> 00:19:44,780
that but we don't want it to happen

532
00:19:41,470 --> 00:19:46,250
outside of our control so the only thing

533
00:19:44,780 --> 00:19:48,379
that allows<font color="#E5E5E5"> you to go backwards in the</font>

534
00:19:46,250 --> 00:19:50,690
state is a top of rack retire and that

535
00:19:48,380 --> 00:19:52,280
process entails d allocating from our

536
00:19:50,690 --> 00:19:54,890
model d allocating from all the external

537
00:19:52,280 --> 00:19:56,149
data sources and then shutting that port

538
00:19:54,890 --> 00:20:00,800
and verifying that everything goes

539
00:19:56,150 --> 00:20:02,000
through is expected so let's talk a

540
00:20:00,800 --> 00:20:03,830
<font color="#CCCCCC">little bit about the results of running</font>

541
00:20:02,000 --> 00:20:05,930
the system on our<font color="#E5E5E5"> network so at this</font>

542
00:20:03,830 --> 00:20:07,820
point and engineers aren't involved at

543
00:20:05,930 --> 00:20:09,230
any point in config<font color="#E5E5E5"> gin or config</font>

544
00:20:07,820 --> 00:20:12,139
deployment they don't have to touch that

545
00:20:09,230 --> 00:20:14,060
at all and a<font color="#E5E5E5"> lot of the common tasks can</font>

546
00:20:12,140 --> 00:20:15,230
be handed by<font color="#CCCCCC"> are handled by our systems</font>

547
00:20:14,060 --> 00:20:17,330
engineers they don't<font color="#E5E5E5"> need that ops</font>

548
00:20:15,230 --> 00:20:21,080
intervention so we can save our netops

549
00:20:17,330 --> 00:20:22,820
engineers for more important tasks these

550
00:20:21,080 --> 00:20:24,710
switch config changes typically converge

551
00:20:22,820 --> 00:20:26,689
in about 30 seconds<font color="#E5E5E5"> to 2 minutes usually</font>

552
00:20:24,710 --> 00:20:30,800
closer to 30 seconds<font color="#E5E5E5"> this is pretty</font>

553
00:20:26,690 --> 00:20:32,510
rapid and and then cluster wide changes

554
00:20:30,800 --> 00:20:34,070
can propagate<font color="#CCCCCC"> around 10 to 15 minutes</font>

555
00:20:32,510 --> 00:20:35,990
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that's something as I mentioned we</font>

556
00:20:34,070 --> 00:20:37,669
can tune how many devices we allow out

557
00:20:35,990 --> 00:20:40,700
at a given time so<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> increase or</font>

558
00:20:37,670 --> 00:20:42,350
decrease that<font color="#CCCCCC"> as we see fit</font><font color="#E5E5E5"> and so kind</font>

559
00:20:40,700 --> 00:20:44,120
of the big point here is that we<font color="#CCCCCC"> are not</font>

560
00:20:42,350 --> 00:20:45,590
<font color="#E5E5E5">capable of provisioning a 20,000 gold</font>

561
00:20:44,120 --> 00:20:49,419
cluster<font color="#E5E5E5"> in under 10 minutes with no</font>

562
00:20:45,590 --> 00:20:52,100
errors<font color="#E5E5E5"> just</font><font color="#CCCCCC"> comes up it works it's great</font>

563
00:20:49,420 --> 00:20:53,450
so we do have<font color="#CCCCCC"> some ideas of what we'd</font>

564
00:20:52,100 --> 00:20:56,030
like<font color="#E5E5E5"> to use the system for in the future</font>

565
00:20:53,450 --> 00:20:57,910
<font color="#E5E5E5">and we can definitely expand this model</font>

566
00:20:56,030 --> 00:21:00,500
beyond just our data center networks and

567
00:20:57,910 --> 00:21:01,790
we also are toying with the idea of

568
00:21:00,500 --> 00:21:03,410
doing<font color="#E5E5E5"> that self-healing that I mentioned</font>

569
00:21:01,790 --> 00:21:05,060
based on these live state changes we

570
00:21:03,410 --> 00:21:06,950
have<font color="#E5E5E5"> the data we might as well react to</font>

571
00:21:05,060 --> 00:21:09,320
it and we could also do dynamic

572
00:21:06,950 --> 00:21:11,300
provisioning of<font color="#E5E5E5"> host IPS so the top of</font>

573
00:21:09,320 --> 00:21:12,590
rats do report all of their neighbor

574
00:21:11,300 --> 00:21:13,940
data including the hosts that<font color="#E5E5E5"> are</font>

575
00:21:12,590 --> 00:21:16,580
connected up so we can get some of<font color="#E5E5E5"> the</font>

576
00:21:13,940 --> 00:21:18,290
data there and dynamically change our

577
00:21:16,580 --> 00:21:20,000
network that way as well as doing<font color="#E5E5E5"> some</font>

578
00:21:18,290 --> 00:21:21,290
dynamic allocation for capacity if we

579
00:21:20,000 --> 00:21:23,390
see that<font color="#CCCCCC"> we're running out of capacity</font>

580
00:21:21,290 --> 00:21:24,920
we can actually preemptively<font color="#CCCCCC"> you can</font>

581
00:21:23,390 --> 00:21:26,540
skip the whole system engineer form we

582
00:21:24,920 --> 00:21:28,280
can preemptively allocate those and just

583
00:21:26,540 --> 00:21:32,750
let tell them hey here's your<font color="#E5E5E5"> ticket go</font>

584
00:21:28,280 --> 00:21:34,310
plug<font color="#CCCCCC"> it in so that's all we've got</font><font color="#E5E5E5"> if</font>

585
00:21:32,750 --> 00:21:35,810
<font color="#E5E5E5">you guys have any</font><font color="#CCCCCC"> questions or concerns</font>

586
00:21:34,310 --> 00:21:38,120
feel free to<font color="#E5E5E5"> come up to the mic or talk</font>

587
00:21:35,810 --> 00:21:41,510
<font color="#CCCCCC">to us after</font><font color="#E5E5E5"> thank you yes though I would</font>

588
00:21:38,120 --> 00:21:43,550
like to<font color="#E5E5E5"> add that oh so I would like to</font>

589
00:21:41,510 --> 00:21:46,280
<font color="#E5E5E5">add that yeah we have pretty interesting</font>

590
00:21:43,550 --> 00:21:47,899
provinces that<font color="#E5E5E5"> you have seen so yes if</font>

591
00:21:46,280 --> 00:21:49,680
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> interested in</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> talked with</font><font color="#CCCCCC"> us</font>

592
00:21:47,900 --> 00:21:53,090
as well

593
00:21:49,680 --> 00:21:53,090
yeah this is soon

594
00:21:57,059 --> 00:22:02,918
hi<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> Roger from lingdon as a</font>

595
00:22:00,220 --> 00:22:05,529
question<font color="#CCCCCC"> over here ja is operational</font>

596
00:22:02,919 --> 00:22:06,909
audit part of this particular tool like

597
00:22:05,529 --> 00:22:09,370
offer your deep line how do<font color="#E5E5E5"> you ensure</font>

598
00:22:06,909 --> 00:22:11,380
like the syslog entry is happening

599
00:22:09,370 --> 00:22:13,059
properly or<font color="#CCCCCC"> not is the tech axe working</font>

600
00:22:11,380 --> 00:22:15,220
properly<font color="#E5E5E5"> or not do you take care</font><font color="#CCCCCC"> of this</font>

601
00:22:13,059 --> 00:22:17,350
so this system<font color="#E5E5E5"> is not we do have other</font>

602
00:22:15,220 --> 00:22:19,210
systems that<font color="#E5E5E5"> monitor that and just</font>

603
00:22:17,350 --> 00:22:22,480
external this this was very specifically

604
00:22:19,210 --> 00:22:24,340
the generation deployment cycle but yeah

605
00:22:22,480 --> 00:22:29,039
we do have separate auditing tools thank

606
00:22:24,340 --> 00:22:29,039
you yep any other questions oh

607
00:22:30,000 --> 00:22:36,789
absolutely this is this was easier than

608
00:22:34,390 --> 00:22:39,130
waiting<font color="#E5E5E5"> for the roaming my crime I'm</font>

609
00:22:36,789 --> 00:22:40,658
Vince surf in case anybody wondered fish

610
00:22:39,130 --> 00:22:42,820
<font color="#CCCCCC">should sit down now will get any better</font>

611
00:22:40,659 --> 00:22:44,950
than that I have two questions the first

612
00:22:42,820 --> 00:22:47,620
one has to<font color="#E5E5E5"> do with configuration in</font>

613
00:22:44,950 --> 00:22:50,049
general I found this to be the biggest

614
00:22:47,620 --> 00:22:51,850
Bugaboo of any kind<font color="#E5E5E5"> of network operation</font>

615
00:22:50,049 --> 00:22:54,639
because you can configure stuff wrong

616
00:22:51,850 --> 00:22:56,559
and it isn't obvious so I'm just

617
00:22:54,640 --> 00:22:58,600
<font color="#CCCCCC">wondering if you had any secret pixie</font>

618
00:22:56,559 --> 00:23:01,120
dust<font color="#CCCCCC"> we're just</font><font color="#E5E5E5"> for detecting that a</font>

619
00:22:58,600 --> 00:23:03,699
configuration is in fact wrong or

620
00:23:01,120 --> 00:23:05,350
non-functional or harmful so that's

621
00:23:03,700 --> 00:23:07,179
where those health checks come in

622
00:23:05,350 --> 00:23:08,918
obviously that's not foolproof you can't

623
00:23:07,179 --> 00:23:11,140
plan<font color="#E5E5E5"> for every single failure and that's</font>

624
00:23:08,919 --> 00:23:12,640
<font color="#E5E5E5">why</font><font color="#CCCCCC"> we have the big red button</font><font color="#E5E5E5"> if we do</font>

625
00:23:11,140 --> 00:23:14,409
see that something's<font color="#CCCCCC"> going wrong and our</font>

626
00:23:12,640 --> 00:23:16,480
system didn't detect it as a failure we

627
00:23:14,409 --> 00:23:19,390
can quickly shut down so the second

628
00:23:16,480 --> 00:23:21,100
question<font color="#E5E5E5"> has to do with the ability to</font>

629
00:23:19,390 --> 00:23:23,830
back out you mentioned that you have a

630
00:23:21,100 --> 00:23:26,370
manual capability at each site i guess

631
00:23:23,830 --> 00:23:28,960
the command line interface let's see

632
00:23:26,370 --> 00:23:30,850
another thought though that comes to

633
00:23:28,960 --> 00:23:33,610
mind is having three copies of the

634
00:23:30,850 --> 00:23:36,189
operating environment if you like the

635
00:23:33,610 --> 00:23:38,949
<font color="#E5E5E5">current one the one that you're trained</font>

636
00:23:36,190 --> 00:23:41,950
planning to propagate and the one before

637
00:23:38,950 --> 00:23:44,590
the<font color="#E5E5E5"> current one that will give you the</font>

638
00:23:41,950 --> 00:23:46,840
ability to<font color="#E5E5E5"> go back to perhaps a known</font>

639
00:23:44,590 --> 00:23:49,149
state so<font color="#CCCCCC"> we actually</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> have that on the</font>

640
00:23:46,840 --> 00:23:51,070
devices the devices store<font color="#E5E5E5"> I believe what</font>

641
00:23:49,149 --> 00:23:52,779
a month's worth of or it's<font color="#CCCCCC"> that we have</font>

642
00:23:51,070 --> 00:23:54,879
a limit of how many configurations in

643
00:23:52,779 --> 00:23:57,070
storage but you can restore any config

644
00:23:54,880 --> 00:23:59,260
version at any time and then we are kind

645
00:23:57,070 --> 00:24:00,730
of a paradigm here's we actually really

646
00:23:59,260 --> 00:24:03,010
want to roll forward so<font color="#CCCCCC"> we do that roll</font>

647
00:24:00,730 --> 00:24:05,260
back in emergencies and then we fix the

648
00:24:03,010 --> 00:24:07,600
model so that<font color="#E5E5E5"> the model can then again</font>

649
00:24:05,260 --> 00:24:08,550
dictate the configuration we can figure

650
00:24:07,600 --> 00:24:09,990
out what went wrong and

651
00:24:08,550 --> 00:24:12,899
we can update the model again to get to

652
00:24:09,990 --> 00:24:16,320
that state that we<font color="#CCCCCC"> actually wanted let</font>

653
00:24:12,900 --> 00:24:19,620
me come in<font color="#E5E5E5"> on more on that answer so so</font>

654
00:24:16,320 --> 00:24:21,929
basically the system itself the comfort

655
00:24:19,620 --> 00:24:24,600
generation system is configured as the

656
00:24:21,930 --> 00:24:26,960
<font color="#E5E5E5">rollover system only so basically if you</font>

657
00:24:24,600 --> 00:24:29,820
see any errors that<font color="#CCCCCC"> you are supposed to</font>

658
00:24:26,960 --> 00:24:32,730
change it from<font color="#CCCCCC"> the source to make it</font>

659
00:24:29,820 --> 00:24:35,129
work now what if the<font color="#E5E5E5"> system is doesn't</font>

660
00:24:32,730 --> 00:24:37,740
work right so we actually have we

661
00:24:35,130 --> 00:24:39,510
actually have another<font color="#E5E5E5"> one all the copies</font>

662
00:24:37,740 --> 00:24:41,820
of the previous configuration stored

663
00:24:39,510 --> 00:24:43,830
locally in the devices and in case

664
00:24:41,820 --> 00:24:45,600
there's anything that wasn't able to

665
00:24:43,830 --> 00:24:47,250
work<font color="#E5E5E5"> that you will</font><font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> roll back</font>

666
00:24:45,600 --> 00:24:50,010
to a certain point of time in the past

667
00:24:47,250 --> 00:24:52,470
<font color="#E5E5E5">and then that has</font><font color="#CCCCCC"> a actually another</font>

668
00:24:50,010 --> 00:24:54,660
automated system to actually to push

669
00:24:52,470 --> 00:24:58,890
those configuration or instruct the

670
00:24:54,660 --> 00:25:01,890
devices to<font color="#E5E5E5"> rollback globally yeah I just</font>

671
00:24:58,890 --> 00:25:04,350
want a little observation generally

672
00:25:01,890 --> 00:25:07,410
speaking if it was broke if it was

673
00:25:04,350 --> 00:25:10,169
working<font color="#CCCCCC"> okay and then you roll down the</font>

674
00:25:07,410 --> 00:25:13,170
new configuration and it isn't<font color="#E5E5E5"> working</font>

675
00:25:10,170 --> 00:25:16,320
<font color="#E5E5E5">okay it's nice to</font><font color="#CCCCCC"> get back into a state</font>

676
00:25:13,170 --> 00:25:18,120
where you<font color="#E5E5E5"> think it was</font><font color="#CCCCCC"> okay and then try</font>

677
00:25:16,320 --> 00:25:20,520
to figure<font color="#E5E5E5"> out what went wrong so I</font>

678
00:25:18,120 --> 00:25:22,830
usually tell my guys show me that you

679
00:25:20,520 --> 00:25:25,530
can<font color="#E5E5E5"> get back out of</font><font color="#CCCCCC"> what you just messed</font>

680
00:25:22,830 --> 00:25:26,460
up yeah yeah and that's I mean like said

681
00:25:25,530 --> 00:25:28,050
we<font color="#E5E5E5"> have that in there for</font><font color="#CCCCCC"> those</font>

682
00:25:26,460 --> 00:25:31,530
emergency situations we try to avoid<font color="#E5E5E5"> it</font>

683
00:25:28,050 --> 00:25:35,280
<font color="#E5E5E5">that you absolutely do need it ok Igor I</font>

684
00:25:31,530 --> 00:25:38,970
you go to yahoo one<font color="#E5E5E5"> of the architects of</font>

685
00:25:35,280 --> 00:25:41,220
this thing with Vince said obviously

686
00:25:38,970 --> 00:25:43,740
makes a lot of sense something that you

687
00:25:41,220 --> 00:25:45,770
have to<font color="#E5E5E5"> be very careful of is if you for</font>

688
00:25:43,740 --> 00:25:47,910
some reason or unable to roll forward

689
00:25:45,770 --> 00:25:51,090
there's a high probability that you're

690
00:25:47,910 --> 00:25:52,800
also unable to roll back so if<font color="#E5E5E5"> I try to</font>

691
00:25:51,090 --> 00:25:55,050
deploy configuring a thousand switches

692
00:25:52,800 --> 00:25:57,270
three failed you take it I decide I need

693
00:25:55,050 --> 00:25:58,830
to roll it back then three more failed

694
00:25:57,270 --> 00:26:01,260
to take the roll back and<font color="#E5E5E5"> now I'm gonna</font>

695
00:25:58,830 --> 00:26:02,639
<font color="#CCCCCC">completely unstable state and that</font><font color="#E5E5E5"> is</font>

696
00:26:01,260 --> 00:26:04,920
what we actually control the number<font color="#CCCCCC"> of</font>

697
00:26:02,640 --> 00:26:06,160
devices and released because what

698
00:26:04,920 --> 00:26:08,530
happens is if

699
00:26:06,160 --> 00:26:11,350
x amount of devices let's call x equals

700
00:26:08,530 --> 00:26:13,810
<font color="#E5E5E5">3 failed to take the new config</font><font color="#CCCCCC"> i am</font>

701
00:26:11,350 --> 00:26:16,840
better off pausing the entire deployment

702
00:26:13,810 --> 00:26:19,960
process rather than having a cluster in

703
00:26:16,840 --> 00:26:22,689
a complete set of unknown configs with

704
00:26:19,960 --> 00:26:25,780
an unknown redundancy model and no clue

705
00:26:22,690 --> 00:26:28,510
like this is rough 17 this is rough 19

706
00:26:25,780 --> 00:26:29,800
this is 15 what's going on you are

707
00:26:28,510 --> 00:26:33,010
better<font color="#E5E5E5"> off pausing at least wrong</font>

708
00:26:29,800 --> 00:26:34,870
perspective<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I think then human will</font>

709
00:26:33,010 --> 00:26:37,030
take<font color="#CCCCCC"> menu</font><font color="#E5E5E5"> intervention if need be to we</font>

710
00:26:34,870 --> 00:26:42,459
stabilize the system exactly<font color="#E5E5E5"> thanks ich</font>

711
00:26:37,030 --> 00:26:45,270
werde all right any other questions yeah

712
00:26:42,460 --> 00:26:45,270
well thank you guys so much

713
00:26:49,600 --> 00:26:51,659
you

