1
00:00:06,240 --> 00:00:13,480
<font color="#CCCCCC">alright guys I'm gonna hear</font><font color="#E5E5E5"> me I'll try</font>

2
00:00:10,180 --> 00:00:18,130
to just<font color="#E5E5E5"> this thing it troubles</font><font color="#CCCCCC"> okay</font>

3
00:00:13,480 --> 00:00:20,170
let's get<font color="#E5E5E5"> started as I just been said my</font>

4
00:00:18,130 --> 00:00:23,400
name is Peter networking here at

5
00:00:20,170 --> 00:00:26,099
Facebook<font color="#E5E5E5"> bit autograph I'd talk is</font>

6
00:00:23,400 --> 00:00:28,839
identified by the address in ila and

7
00:00:26,099 --> 00:00:32,980
specifically<font color="#E5E5E5"> the application to visual</font>

8
00:00:28,839 --> 00:00:36,250
networking<font color="#CCCCCC"> alright so I begin by saying</font>

9
00:00:32,980 --> 00:00:38,949
that the whole concept<font color="#E5E5E5"> of virtual work</font>

10
00:00:36,250 --> 00:00:41,769
<font color="#E5E5E5">is confusing but is so many technologies</font>

11
00:00:38,950 --> 00:00:46,360
people use on the host right now mostly

12
00:00:41,770 --> 00:00:48,640
overlays Jerry<font color="#CCCCCC"> Envy Jerry VXL an epic</font>

13
00:00:46,360 --> 00:00:50,949
<font color="#CCCCCC">geneve with so many encapsulations and</font>

14
00:00:48,640 --> 00:00:53,230
control planes it's sort<font color="#E5E5E5"> of hard to</font>

15
00:00:50,949 --> 00:00:55,599
track what's going on and why people do

16
00:00:53,230 --> 00:00:57,250
this so we started by looking at the

17
00:00:55,600 --> 00:01:02,620
problems we're trying to solve at

18
00:00:57,250 --> 00:01:05,590
<font color="#CCCCCC">Facebook with the our approach so first</font>

19
00:01:02,620 --> 00:01:09,340
of all containers containers are really

20
00:01:05,590 --> 00:01:11,259
hot right now like it's as big as VMs

21
00:01:09,340 --> 00:01:13,930
were like few years ago everyone<font color="#E5E5E5"> likes</font>

22
00:01:11,259 --> 00:01:16,720
them I guess everyone knows what dr. is

23
00:01:13,930 --> 00:01:19,630
what screw brothers is people<font color="#CCCCCC"> like this</font>

24
00:01:16,720 --> 00:01:22,929
because it's lightweight it's easy and

25
00:01:19,630 --> 00:01:25,390
seems like to be really efficient we do

26
00:01:22,930 --> 00:01:26,970
have with a facebook as well not dr.

27
00:01:25,390 --> 00:01:29,530
necessarily it's our own implementation

28
00:01:26,970 --> 00:01:33,460
but<font color="#E5E5E5"> this is our approach to</font>

29
00:01:29,530 --> 00:01:35,380
virtualization on the host<font color="#E5E5E5"> and there are</font>

30
00:01:33,460 --> 00:01:37,630
two<font color="#E5E5E5"> main problems you encounter in</font>

31
00:01:35,380 --> 00:01:40,869
networking space<font color="#CCCCCC"> with containers the</font>

32
00:01:37,630 --> 00:01:42,960
first one is the fact that you may run<font color="#E5E5E5"> a</font>

33
00:01:40,869 --> 00:01:45,880
lots of containers on one machine

34
00:01:42,960 --> 00:01:47,770
sometimes two sometimes<font color="#CCCCCC"> ten in some</font>

35
00:01:45,880 --> 00:01:50,530
cases up to a hundred for example and

36
00:01:47,770 --> 00:01:53,048
these guys have to share the IP address

37
00:01:50,530 --> 00:01:55,810
<font color="#CCCCCC">for machine in some way or another in</font>

38
00:01:53,049 --> 00:01:58,420
most cases<font color="#E5E5E5"> people ever have to allocate</font>

39
00:01:55,810 --> 00:02:01,479
multiple<font color="#E5E5E5"> I transfer machine or reuse</font>

40
00:01:58,420 --> 00:02:03,820
port numbers across processes both cases

41
00:02:01,479 --> 00:02:06,640
a little bit problematic especially port

42
00:02:03,820 --> 00:02:10,389
allocation second one which<font color="#CCCCCC"> is specific</font>

43
00:02:06,640 --> 00:02:12,340
to facebook was mobility when you move a

44
00:02:10,389 --> 00:02:14,739
task to<font color="#E5E5E5"> a different machine which often</font>

45
00:02:12,340 --> 00:02:17,260
happens on rescheduling you will have<font color="#E5E5E5"> to</font>

46
00:02:14,740 --> 00:02:19,780
change<font color="#E5E5E5"> the</font><font color="#CCCCCC"> IP address of the task</font><font color="#E5E5E5"> or a</font>

47
00:02:17,260 --> 00:02:22,120
process in our case or container<font color="#E5E5E5"> I keep</font>

48
00:02:19,780 --> 00:02:23,650
<font color="#E5E5E5">saying task because we call containers</font>

49
00:02:22,120 --> 00:02:28,030
as tasks at<font color="#E5E5E5"> Facebook</font>

50
00:02:23,650 --> 00:02:32,549
<font color="#E5E5E5">okay so these two challenges require us</font>

51
00:02:28,030 --> 00:02:35,230
to address two different goals first one

52
00:02:32,549 --> 00:02:38,230
being able to allocate IP address /

53
00:02:35,230 --> 00:02:41,319
process on this slide it says 80 v6 and

54
00:02:38,230 --> 00:02:44,470
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> silhouetted 06 because we don't use</font>

55
00:02:41,319 --> 00:02:47,018
a<font color="#CCCCCC"> pu for internally almost in case of</font>

56
00:02:44,470 --> 00:02:51,489
our containers probably every single

57
00:02:47,019 --> 00:02:53,439
process use IP addressing only our goal

58
00:02:51,489 --> 00:02:57,069
was to be able to allocate unique

59
00:02:53,439 --> 00:02:59,980
address poor linux process secondly

60
00:02:57,069 --> 00:03:03,429
address mobility we wanted to that

61
00:02:59,980 --> 00:03:06,760
address follow the task or process when

62
00:03:03,430 --> 00:03:08,950
it changes<font color="#CCCCCC"> a machine it's not the creole</font>

63
00:03:06,760 --> 00:03:10,629
necessary but it simplifies a lot of

64
00:03:08,950 --> 00:03:14,018
functions in our internal banking

65
00:03:10,629 --> 00:03:18,849
systems<font color="#CCCCCC"> okay so the two</font><font color="#E5E5E5"> goals address</font>

66
00:03:14,019 --> 00:03:21,189
<font color="#E5E5E5">for process and mobility so I Lay was we</font>

67
00:03:18,849 --> 00:03:24,819
are<font color="#E5E5E5"> one way to address this and this is</font>

68
00:03:21,189 --> 00:03:27,608
<font color="#E5E5E5">the solution was deployed so far aisle a</font>

69
00:03:24,819 --> 00:03:30,698
is built on the old well-known concept

70
00:03:27,609 --> 00:03:32,560
of identifiers and locator split I guess

71
00:03:30,699 --> 00:03:34,840
everyone well played<font color="#E5E5E5"> with my the same</font>

72
00:03:32,560 --> 00:03:39,069
one<font color="#CCCCCC"> talked about this abbreviations</font>

73
00:03:34,840 --> 00:03:41,049
before<font color="#E5E5E5"> LNP GSC</font><font color="#CCCCCC"> eight</font><font color="#E5E5E5"> plus</font><font color="#CCCCCC"> eight this</font>

74
00:03:39,069 --> 00:03:44,108
used to be a very hot topic in

75
00:03:41,049 --> 00:03:46,109
networking probably<font color="#CCCCCC"> ten years ago when</font>

76
00:03:44,109 --> 00:03:49,180
they had<font color="#E5E5E5"> these discussions about</font>

77
00:03:46,109 --> 00:03:52,870
internet table scaling was<font color="#CCCCCC"> multi</font>

78
00:03:49,180 --> 00:03:55,180
proposals allen key was one of them so

79
00:03:52,870 --> 00:03:58,930
you may think of ila as a technology

80
00:03:55,180 --> 00:04:02,290
which builds on<font color="#E5E5E5"> allen p so wait works is</font>

81
00:03:58,930 --> 00:04:06,310
pretty straightforward underneath you

82
00:04:02,290 --> 00:04:09,638
have this 8 for 16 byte address ipv6 and

83
00:04:06,310 --> 00:04:12,639
you split this into halves first half is

84
00:04:09,639 --> 00:04:15,489
called the locator locator is 64 bit

85
00:04:12,639 --> 00:04:18,668
long it's used for Roger hookups in the

86
00:04:15,489 --> 00:04:21,010
network it may change over time of a

87
00:04:18,668 --> 00:04:24,190
course of<font color="#E5E5E5"> a life or address the second</font>

88
00:04:21,010 --> 00:04:26,560
part is identifier identifier is a kind

89
00:04:24,190 --> 00:04:29,139
of a<font color="#E5E5E5"> name of a process but he'll set the</font>

90
00:04:26,560 --> 00:04:32,469
address it's immutable is given to a

91
00:04:29,139 --> 00:04:34,870
price on a start it doesn't<font color="#CCCCCC"> change so</font>

92
00:04:32,469 --> 00:04:37,719
the<font color="#CCCCCC"> way I only worked is that</font>

93
00:04:34,870 --> 00:04:41,230
it required that every node or host in

94
00:04:37,720 --> 00:04:44,920
the network had a / 64 predicts not an

95
00:04:41,230 --> 00:04:46,420
address by the peripheral secondly as a

96
00:04:44,920 --> 00:04:49,570
process with my great building machines

97
00:04:46,420 --> 00:04:52,990
it's<font color="#CCCCCC"> a la address this 16 byte entity</font>

98
00:04:49,570 --> 00:04:57,190
would change locator field submersible

99
00:04:52,990 --> 00:04:59,740
concept it says okay this for 64 bits

100
00:04:57,190 --> 00:05:03,190
identify the encode the location and<font color="#CCCCCC"> the</font>

101
00:04:59,740 --> 00:05:06,550
rest is the name however in case of

102
00:05:03,190 --> 00:05:08,500
previous solutions like<font color="#CCCCCC"> L&T the</font>

103
00:05:06,550 --> 00:05:10,570
requirement was that the changes<font color="#E5E5E5"> in</font>

104
00:05:08,500 --> 00:05:13,330
<font color="#CCCCCC">valle cater were visible to the</font>

105
00:05:10,570 --> 00:05:15,909
transport or applications which meant

106
00:05:13,330 --> 00:05:19,120
you<font color="#E5E5E5"> had to change the CP code or</font><font color="#CCCCCC"> linux</font>

107
00:05:15,910 --> 00:05:21,340
<font color="#E5E5E5">tack or any other networking stack to</font>

108
00:05:19,120 --> 00:05:22,780
accommodate for this changes and think

109
00:05:21,340 --> 00:05:26,950
this was probably the<font color="#E5E5E5"> biggest problem</font>

110
00:05:22,780 --> 00:05:29,710
<font color="#E5E5E5">LNP this need to change the transport</font>

111
00:05:26,950 --> 00:05:32,950
stack was we kind of impossible to

112
00:05:29,710 --> 00:05:36,789
implement so<font color="#CCCCCC"> Alli</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of works around</font>

113
00:05:32,950 --> 00:05:39,909
this limitation it hides like<font color="#CCCCCC"> other</font>

114
00:05:36,790 --> 00:05:41,890
changes so basically it makes transport

115
00:05:39,910 --> 00:05:44,290
layer believe but the locator field

116
00:05:41,890 --> 00:05:48,400
never changes it looks<font color="#E5E5E5"> like it's one</font>

117
00:05:44,290 --> 00:05:51,580
fixed value 16 64-bit entity but never

118
00:05:48,400 --> 00:05:53,830
changes the way it does it is by doing a

119
00:05:51,580 --> 00:05:56,979
stateless<font color="#E5E5E5"> snap underneath the transport</font>

120
00:05:53,830 --> 00:05:58,960
layer so every time<font color="#E5E5E5"> you use a packet it</font>

121
00:05:56,980 --> 00:06:02,980
will have<font color="#E5E5E5"> to be written back to her</font>

122
00:05:58,960 --> 00:06:05,859
fixed locator so<font color="#E5E5E5"> I</font><font color="#CCCCCC"> only comes naturally</font>

123
00:06:02,980 --> 00:06:08,200
have to have this /<font color="#E5E5E5"> 64-bit prefix I'll</font>

124
00:06:05,860 --> 00:06:11,890
get<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it naturally like any</font><font color="#E5E5E5"> of these</font>

125
00:06:08,200 --> 00:06:14,440
idea box<font color="#E5E5E5"> lid solutions</font><font color="#CCCCCC"> of course every</font>

126
00:06:11,890 --> 00:06:17,200
host has to<font color="#E5E5E5"> maintain a mapping from the</font>

127
00:06:14,440 --> 00:06:19,930
<font color="#E5E5E5">identifier to locator to tell where</font>

128
00:06:17,200 --> 00:06:24,430
particular name or ID is<font color="#CCCCCC"> being now</font>

129
00:06:19,930 --> 00:06:27,550
located and lastly I only<font color="#E5E5E5"> adds one new</font>

130
00:06:24,430 --> 00:06:31,210
concept called<font color="#E5E5E5"> le router it's a special</font>

131
00:06:27,550 --> 00:06:34,510
proxy a gateway but allows the non le

132
00:06:31,210 --> 00:06:36,719
machines to talk to<font color="#E5E5E5"> ali machines if you</font>

133
00:06:34,510 --> 00:06:39,610
remember<font color="#E5E5E5"> island p was requiring that</font>

134
00:06:36,720 --> 00:06:44,650
every machine was modified to support

135
00:06:39,610 --> 00:06:47,260
LNP ila<font color="#E5E5E5"> works on this process by</font>

136
00:06:44,650 --> 00:06:48,248
mediating or adding this additional le

137
00:06:47,260 --> 00:06:51,099
router but

138
00:06:48,249 --> 00:06:54,489
allows the ideal world to talk to<font color="#CCCCCC"> non le</font>

139
00:06:51,099 --> 00:06:57,429
machines<font color="#E5E5E5"> okay so this is an example of</font>

140
00:06:54,489 --> 00:06:59,529
how this whole mad thing works imagine

141
00:06:57,429 --> 00:07:01,839
you have this prefix it called sir

142
00:06:59,529 --> 00:07:04,179
prefix I'll<font color="#E5E5E5"> explain is a bit later in</font>

143
00:07:01,839 --> 00:07:06,339
next slide but this<font color="#E5E5E5"> is the 64-bit</font>

144
00:07:04,179 --> 00:07:10,479
locator what<font color="#E5E5E5"> remains unchanged in the</font>

145
00:07:06,339 --> 00:07:15,039
<font color="#E5E5E5">alley address so</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> one LD host on</font>

146
00:07:10,479 --> 00:07:17,378
the left on the<font color="#CCCCCC"> slide left right so it</font>

147
00:07:15,039 --> 00:07:20,679
has<font color="#CCCCCC"> a process which has</font><font color="#E5E5E5"> the aldi address</font>

148
00:07:17,379 --> 00:07:23,589
the entity in orange is<font color="#E5E5E5"> all day address</font>

149
00:07:20,679 --> 00:07:25,799
the<font color="#E5E5E5"> facebook one two three four facing</font>

150
00:07:23,589 --> 00:07:28,899
book is the special fixed locator and

151
00:07:25,799 --> 00:07:31,359
one two three four is the name or idea

152
00:07:28,899 --> 00:07:34,360
of a process at the same time this

153
00:07:31,360 --> 00:07:36,519
process sorry this host has a green

154
00:07:34,360 --> 00:07:38,619
address validator this locator

155
00:07:36,519 --> 00:07:41,529
identifies the position of<font color="#CCCCCC"> the customer</font>

156
00:07:38,619 --> 00:07:44,199
Network symmetrically you have the upper

157
00:07:41,529 --> 00:07:47,469
counterpart the<font color="#CCCCCC"> host with different</font>

158
00:07:44,199 --> 00:07:49,059
locator and different<font color="#E5E5E5"> alley address so</font>

159
00:07:47,469 --> 00:07:51,459
pay attention<font color="#CCCCCC"> they are the address</font>

160
00:07:49,059 --> 00:07:54,939
belongs to a process<font color="#E5E5E5"> and the locator</font>

161
00:07:51,459 --> 00:07:58,719
belongs to a host now we have process

162
00:07:54,939 --> 00:08:01,689
one<font color="#E5E5E5"> setting packets to process to as you</font>

163
00:07:58,719 --> 00:08:04,689
can see both fields I think of<font color="#E5E5E5"> area</font>

164
00:08:01,689 --> 00:08:08,110
budget allocated in the slides so but

165
00:08:04,689 --> 00:08:13,360
the source<font color="#E5E5E5"> and best addresses they both</font>

166
00:08:08,110 --> 00:08:17,499
have<font color="#E5E5E5"> I la fields so</font><font color="#CCCCCC"> the orange</font><font color="#E5E5E5"> undecided</font>

167
00:08:13,360 --> 00:08:20,529
names as the<font color="#CCCCCC"> heat'll wire we rewrite the</font>

168
00:08:17,499 --> 00:08:23,559
locator portion with the<font color="#E5E5E5"> actual physical</font>

169
00:08:20,529 --> 00:08:26,110
locator what happens now is that<font color="#E5E5E5"> network</font>

170
00:08:23,559 --> 00:08:28,269
knows to transport this packet to the

171
00:08:26,110 --> 00:08:30,759
other side will have the<font color="#E5E5E5"> other locator</font>

172
00:08:28,269 --> 00:08:34,000
on the other side<font color="#E5E5E5"> we do reverse</font>

173
00:08:30,759 --> 00:08:35,889
translation and you write these physical

174
00:08:34,000 --> 00:08:38,769
locators the green fields into the

175
00:08:35,889 --> 00:08:40,659
orange ones into the sir predicts and so

176
00:08:38,769 --> 00:08:42,879
in this<font color="#CCCCCC"> way the net prevents the</font>

177
00:08:40,659 --> 00:08:45,850
applications from seeing these changing

178
00:08:42,879 --> 00:08:49,779
locators we always<font color="#CCCCCC"> see this one fixed</font>

179
00:08:45,850 --> 00:08:52,209
prefix facebook<font color="#E5E5E5"> ok so now back to this</font>

180
00:08:49,779 --> 00:08:54,490
magical sir predicts as a<font color="#CCCCCC"> management</font><font color="#E5E5E5"> has</font>

181
00:08:52,209 --> 00:08:56,949
special meaning in<font color="#CCCCCC"> la network it's a</font>

182
00:08:54,490 --> 00:08:59,250
<font color="#E5E5E5">stands for a standard at the fair</font>

183
00:08:56,949 --> 00:09:01,819
representation this is the fixed

184
00:08:59,250 --> 00:09:05,090
pre-configured parameter for

185
00:09:01,820 --> 00:09:08,480
le hosts this is the locators team of

186
00:09:05,090 --> 00:09:11,510
transport and most importantly<font color="#CCCCCC"> these sir</font>

187
00:09:08,480 --> 00:09:14,930
prefix is being injected into a<font color="#CCCCCC"> TV 6</font>

188
00:09:11,510 --> 00:09:16,790
network by the LD routers this is

189
00:09:14,930 --> 00:09:19,430
necessary<font color="#E5E5E5"> to be able to attract via</font>

190
00:09:16,790 --> 00:09:23,949
traffic from non le hosts into the alley

191
00:09:19,430 --> 00:09:27,500
costs so you may think<font color="#E5E5E5"> about this as</font>

192
00:09:23,950 --> 00:09:32,150
this<font color="#CCCCCC"> sir prefix is magical prefix being</font>

193
00:09:27,500 --> 00:09:34,760
a name of a subnet one virtual / 64

194
00:09:32,150 --> 00:09:38,689
subnet which is being shared by all

195
00:09:34,760 --> 00:09:40,490
processes<font color="#E5E5E5"> Rhino machines so look in the</font>

196
00:09:38,690 --> 00:09:42,830
left you can see let's say all our

197
00:09:40,490 --> 00:09:45,220
containers sharing this one address

198
00:09:42,830 --> 00:09:48,680
space on different machines physically

199
00:09:45,220 --> 00:09:51,590
and the<font color="#CCCCCC"> alia router acts as the gateway</font>

200
00:09:48,680 --> 00:09:53,839
or the ipv6 router on the spiritual

201
00:09:51,590 --> 00:09:57,910
subnet but provides communication

202
00:09:53,840 --> 00:10:00,770
between the processes and non la world

203
00:09:57,910 --> 00:10:04,490
most importantly this cloud on the<font color="#E5E5E5"> left</font>

204
00:10:00,770 --> 00:10:06,530
is virtual it does physically exist it's

205
00:10:04,490 --> 00:10:10,640
been formed<font color="#CCCCCC"> by the processes running on</font>

206
00:10:06,530 --> 00:10:12,050
tons<font color="#E5E5E5"> of different machines</font><font color="#CCCCCC"> ok so next</font>

207
00:10:10,640 --> 00:10:15,680
import concept as I mentioned earlier

208
00:10:12,050 --> 00:10:18,560
router this guy is responsible for

209
00:10:15,680 --> 00:10:20,449
knowing of all ID to lock a traumatic

210
00:10:18,560 --> 00:10:23,719
syndrome in the network it maintains

211
00:10:20,450 --> 00:10:25,880
full cash it does inject this magical

212
00:10:23,720 --> 00:10:30,470
surprise of a network to attract traffic

213
00:10:25,880 --> 00:10:32,840
from non le hosts in this way it

214
00:10:30,470 --> 00:10:35,380
provides the mediation or proxy function

215
00:10:32,840 --> 00:10:37,550
between non la and ideal world and

216
00:10:35,380 --> 00:10:40,640
lastly as<font color="#CCCCCC"> we'll see in some other slides</font>

217
00:10:37,550 --> 00:10:42,800
<font color="#CCCCCC">other router also provides the Gateway</font>

218
00:10:40,640 --> 00:10:46,310
function between la processes in some

219
00:10:42,800 --> 00:10:48,920
cases it's very important I bring this

220
00:10:46,310 --> 00:10:51,890
analogy before to think about le router

221
00:10:48,920 --> 00:10:54,800
as an ipv6 normal ipv6 router on this

222
00:10:51,890 --> 00:10:58,819
one virtual segment its various

223
00:10:54,800 --> 00:11:03,589
phonology to understand how it works<font color="#E5E5E5"> ok</font>

224
00:10:58,820 --> 00:11:07,160
now so this diagram we have what<font color="#CCCCCC"> we have</font>

225
00:11:03,590 --> 00:11:09,560
three hosts and one non la coste the

226
00:11:07,160 --> 00:11:13,469
only guy is on the cloud which supposed

227
00:11:09,560 --> 00:11:16,540
to have a dv6 network<font color="#E5E5E5"> but it's truncated</font>

228
00:11:13,470 --> 00:11:18,790
the other router injects the story fix

229
00:11:16,540 --> 00:11:22,510
facebook in this case<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not shown</font>

230
00:11:18,790 --> 00:11:25,270
diagram somehow got away an<font color="#E5E5E5"> ally costs</font>

231
00:11:22,510 --> 00:11:28,569
sorry I mean<font color="#CCCCCC"> normally host send packet</font>

232
00:11:25,270 --> 00:11:30,189
to allay machine so here's the key I be

233
00:11:28,570 --> 00:11:32,650
not only host have no idea<font color="#CCCCCC"> about</font><font color="#E5E5E5"> those</font>

234
00:11:30,190 --> 00:11:34,690
mappings or identify secateurs it only

235
00:11:32,650 --> 00:11:37,480
knows but<font color="#E5E5E5"> it has</font><font color="#CCCCCC"> to send</font><font color="#E5E5E5"> pocket to</font><font color="#CCCCCC"> the</font>

236
00:11:34,690 --> 00:11:39,430
<font color="#CCCCCC">circuits and since this prefix is in the</font>

237
00:11:37,480 --> 00:11:41,950
network it got sucked into<font color="#CCCCCC"> the cellar</font>

238
00:11:39,430 --> 00:11:44,560
router and now our router has a

239
00:11:41,950 --> 00:11:46,630
translation what it does it does<font color="#CCCCCC"> better</font>

240
00:11:44,560 --> 00:11:49,810
right and sends a packet to the<font color="#E5E5E5"> correct</font>

241
00:11:46,630 --> 00:11:51,910
machine the alley hosting tour now<font color="#CCCCCC"> ok</font>

242
00:11:49,810 --> 00:11:54,699
packets for me it does a translation and

243
00:11:51,910 --> 00:11:57,850
<font color="#E5E5E5">response back directly to the non la</font>

244
00:11:54,700 --> 00:12:00,250
host for most of you who deal without

245
00:11:57,850 --> 00:12:02,740
balancing which looks<font color="#CCCCCC"> very much the GSR</font>

246
00:12:00,250 --> 00:12:06,430
the actual return scenario and by no

247
00:12:02,740 --> 00:12:08,710
mistake it's very simple concept we this

248
00:12:06,430 --> 00:12:11,949
also<font color="#E5E5E5"> of loads the other router from the</font>

249
00:12:08,710 --> 00:12:15,460
need to send traffic backwards to the

250
00:12:11,950 --> 00:12:18,970
<font color="#E5E5E5">model a hosts now let's see how the</font>

251
00:12:15,460 --> 00:12:23,310
other router may be used<font color="#E5E5E5"> to help provide</font>

252
00:12:18,970 --> 00:12:28,210
transit between<font color="#CCCCCC"> ila hosts same scenario</font>

253
00:12:23,310 --> 00:12:30,099
we have our router and to<font color="#CCCCCC"> LA hosts so I</font>

254
00:12:28,210 --> 00:12:33,520
outros usually injured<font color="#CCCCCC"> Switzer predicts</font>

255
00:12:30,100 --> 00:12:36,370
always usual business now let's imagine

256
00:12:33,520 --> 00:12:38,949
that the aldi hosts on the bottom does

257
00:12:36,370 --> 00:12:41,350
not have a mapping for example cash is

258
00:12:38,950 --> 00:12:43,510
empty what happens next it sends a

259
00:12:41,350 --> 00:12:46,000
packet as usual no translation in the

260
00:12:43,510 --> 00:12:48,490
network the packet gets sucked into

261
00:12:46,000 --> 00:12:51,700
<font color="#E5E5E5">Valley router because of this circlips</font>

262
00:12:48,490 --> 00:12:54,400
injection what happens next<font color="#E5E5E5"> well</font><font color="#CCCCCC"> guess</font>

263
00:12:51,700 --> 00:12:57,610
translation and sends back a direct

264
00:12:54,400 --> 00:13:00,370
packet very similar to the IPO 6 router

265
00:12:57,610 --> 00:13:02,710
like ICP redirect you tell the

266
00:13:00,370 --> 00:13:06,250
originator hey now use this mapping

267
00:13:02,710 --> 00:13:08,920
because available and this allows the

268
00:13:06,250 --> 00:13:11,530
ideal host to shortcut and bypass<font color="#E5E5E5"> our</font>

269
00:13:08,920 --> 00:13:16,209
router for further interactions so

270
00:13:11,530 --> 00:13:18,790
unlike<font color="#E5E5E5"> the non le hosts le costs may</font>

271
00:13:16,210 --> 00:13:23,890
respond to<font color="#E5E5E5"> your messages and install the</font>

272
00:13:18,790 --> 00:13:26,780
mappings on demand<font color="#E5E5E5"> ok control plane</font>

273
00:13:23,890 --> 00:13:29,750
control plane is necessary in<font color="#CCCCCC"> Iowa</font>

274
00:13:26,780 --> 00:13:32,569
to mainly inform the early routers of

275
00:13:29,750 --> 00:13:34,130
all existing<font color="#E5E5E5"> mattox so good news there</font>

276
00:13:32,570 --> 00:13:36,920
is no standard so you can mess around

277
00:13:34,130 --> 00:13:38,210
actually invent some crazy things it's

278
00:13:36,920 --> 00:13:43,579
really<font color="#E5E5E5"> good time to play with this</font>

279
00:13:38,210 --> 00:13:45,590
technology in our case as a mansion with

280
00:13:43,580 --> 00:13:48,020
only a<font color="#CCCCCC"> few things you have to do</font><font color="#E5E5E5"> first</font>

281
00:13:45,590 --> 00:13:51,170
of all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> other routers have to learn</font>

282
00:13:48,020 --> 00:13:53,810
of all active<font color="#CCCCCC"> mattox basically to know</font>

283
00:13:51,170 --> 00:13:57,500
where each identified belongs to which

284
00:13:53,810 --> 00:13:59,569
the caterer secondly an early hosts<font color="#E5E5E5"> by</font>

285
00:13:57,500 --> 00:14:02,360
<font color="#E5E5E5">by this virtue of this requirement have</font>

286
00:13:59,570 --> 00:14:04,490
to always inform the other routers of

287
00:14:02,360 --> 00:14:06,770
the active mappings as they change on

288
00:14:04,490 --> 00:14:09,200
the fly because<font color="#E5E5E5"> remember tasks can move</font>

289
00:14:06,770 --> 00:14:13,910
things may change and you have to always

290
00:14:09,200 --> 00:14:16,700
update the aisle a router one very

291
00:14:13,910 --> 00:14:18,890
<font color="#E5E5E5">important thing about the ILA is with</font>

292
00:14:16,700 --> 00:14:20,870
data plan<font color="#CCCCCC"> insistence we didn't exist in</font>

293
00:14:18,890 --> 00:14:23,750
<font color="#E5E5E5">island p or</font><font color="#CCCCCC"> in our proposals which is</font>

294
00:14:20,870 --> 00:14:26,030
very specific to I early as we seen

295
00:14:23,750 --> 00:14:28,670
before the other routers may send with

296
00:14:26,030 --> 00:14:32,089
direct messages and these messages<font color="#CCCCCC"> are</font>

297
00:14:28,670 --> 00:14:34,880
being sent on demand I mean not<font color="#CCCCCC"> on</font>

298
00:14:32,090 --> 00:14:37,130
demand driven by<font color="#E5E5E5"> data plane traffic when</font>

299
00:14:34,880 --> 00:14:39,560
you<font color="#E5E5E5"> receive an entry a packet you will</font>

300
00:14:37,130 --> 00:14:41,810
<font color="#E5E5E5">send a quick message it doesn't involve</font>

301
00:14:39,560 --> 00:14:44,989
any contraband transactions it's purely

302
00:14:41,810 --> 00:14:47,630
driven by the traffic<font color="#E5E5E5"> and in turn the</font>

303
00:14:44,990 --> 00:14:50,000
hosts themself may also send<font color="#E5E5E5"> results</font>

304
00:14:47,630 --> 00:14:53,210
back to<font color="#CCCCCC"> our</font><font color="#E5E5E5"> hosts tell them of still</font>

305
00:14:50,000 --> 00:14:56,270
entries for instance if a given host

306
00:14:53,210 --> 00:14:58,190
loses a mapping for ID and still

307
00:14:56,270 --> 00:15:00,530
receives packets for a psyd it may tell

308
00:14:58,190 --> 00:15:03,170
back to originate the hey stop because<font color="#CCCCCC"> I</font>

309
00:15:00,530 --> 00:15:05,240
don't have<font color="#E5E5E5"> this mapping anymore and this</font>

310
00:15:03,170 --> 00:15:09,110
will force the sender to invalidate the

311
00:15:05,240 --> 00:15:12,500
cache entries once once again the

312
00:15:09,110 --> 00:15:15,170
analogy to ICD 6 is very<font color="#E5E5E5"> very clear we</font>

313
00:15:12,500 --> 00:15:18,580
<font color="#E5E5E5">currently don't use ICMP use UDP packets</font>

314
00:15:15,170 --> 00:15:22,160
but<font color="#E5E5E5"> the concepts are very much</font><font color="#CCCCCC"> the same</font>

315
00:15:18,580 --> 00:15:24,350
<font color="#E5E5E5">ok now</font><font color="#CCCCCC"> let's look</font><font color="#E5E5E5"> at the most fun part</font>

316
00:15:22,160 --> 00:15:28,030
funniest part is the mobility how we

317
00:15:24,350 --> 00:15:31,070
implement mobility using all this magic

318
00:15:28,030 --> 00:15:34,610
all right now<font color="#CCCCCC"> this scenario will have</font>

319
00:15:31,070 --> 00:15:37,190
three<font color="#CCCCCC"> la costs so they have a list a qui</font>

320
00:15:34,610 --> 00:15:39,440
Hamels mapping caches we have two other

321
00:15:37,190 --> 00:15:40,610
routers so it's very important you are

322
00:15:39,440 --> 00:15:44,209
not limited to just one

323
00:15:40,610 --> 00:15:46,250
router he may have<font color="#CCCCCC"> 24 16 we can all</font>

324
00:15:44,209 --> 00:15:50,750
inject the syrup refix in any case

325
00:15:46,250 --> 00:15:53,690
fashion now we have host see talking<font color="#CCCCCC"> to</font>

326
00:15:50,750 --> 00:15:56,510
host be using the early addresses like

327
00:15:53,690 --> 00:15:58,010
in this case there's two processes IDs<font color="#E5E5E5"> I</font>

328
00:15:56,510 --> 00:16:01,279
give<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> diagram we talk to each</font>

329
00:15:58,010 --> 00:16:03,439
other now imagine<font color="#CCCCCC"> that the process on</font>

330
00:16:01,279 --> 00:16:06,980
caused be changes its attachment changes

331
00:16:03,440 --> 00:16:09,470
location what happens next is the job

332
00:16:06,980 --> 00:16:12,910
scheduler or a container schedule it's

333
00:16:09,470 --> 00:16:15,790
speaking<font color="#E5E5E5"> out using the open terminology</font>

334
00:16:12,910 --> 00:16:18,709
remove this entry because task is gone

335
00:16:15,790 --> 00:16:20,930
immediately our flow is now invalid we

336
00:16:18,709 --> 00:16:25,040
hit the black hole and<font color="#CCCCCC"> caused the be</font>

337
00:16:20,930 --> 00:16:27,469
sends back the invalid entry mapping in

338
00:16:25,040 --> 00:16:30,560
this<font color="#E5E5E5"> case the invalid mapping is</font>

339
00:16:27,470 --> 00:16:33,230
truncated but<font color="#E5E5E5"> this is essentially an a</font>

340
00:16:30,560 --> 00:16:35,989
message saying hey this mapping<font color="#CCCCCC"> sound</font>

341
00:16:33,230 --> 00:16:39,140
valid at the same time the host which

342
00:16:35,990 --> 00:16:41,500
now has<font color="#CCCCCC"> the task tells Valley routers I</font>

343
00:16:39,140 --> 00:16:45,860
now have<font color="#E5E5E5"> this mapping update your caches</font>

344
00:16:41,500 --> 00:16:48,019
what happens next is a host SI falls

345
00:16:45,860 --> 00:16:49,640
back to<font color="#E5E5E5"> the routers because it</font><font color="#CCCCCC"> doesn't</font>

346
00:16:48,019 --> 00:16:52,940
have<font color="#CCCCCC"> an option</font><font color="#E5E5E5"> with no cash</font><font color="#CCCCCC"> and to</font>

347
00:16:49,640 --> 00:16:56,209
<font color="#CCCCCC">anymore but luckily the other routers do</font>

348
00:16:52,940 --> 00:16:59,209
have this entry before the packet down

349
00:16:56,209 --> 00:17:01,250
to<font color="#E5E5E5"> la costs at the same time they send</font>

350
00:16:59,209 --> 00:17:03,939
back with that message to be host saying

351
00:17:01,250 --> 00:17:06,650
hey this is<font color="#CCCCCC"> the new mapping and</font>

352
00:17:03,939 --> 00:17:10,520
magically flow now recovers and flow is

353
00:17:06,650 --> 00:17:12,410
directly so basically driven by the data

354
00:17:10,520 --> 00:17:15,199
<font color="#E5E5E5">plain packets only we've been able to</font>

355
00:17:12,410 --> 00:17:17,540
switch over between the two flows first

356
00:17:15,199 --> 00:17:19,939
one the other routers and second one now

357
00:17:17,540 --> 00:17:24,409
goes directly that's<font color="#E5E5E5"> pretty much all the</font>

358
00:17:19,939 --> 00:17:28,760
magic to implement task mobility will I

359
00:17:24,410 --> 00:17:31,220
la once<font color="#E5E5E5"> again it's really important to</font>

360
00:17:28,760 --> 00:17:33,770
remember that this whole real-time

361
00:17:31,220 --> 00:17:36,200
mobility is only possible because with

362
00:17:33,770 --> 00:17:37,700
<font color="#CCCCCC">the data plane messaging use the control</font>

363
00:17:36,200 --> 00:17:41,960
plane signaling handshakes might be

364
00:17:37,700 --> 00:17:43,730
slower in this case relying on the data

365
00:17:41,960 --> 00:17:47,809
plane messaging makes<font color="#E5E5E5"> is much more</font>

366
00:17:43,730 --> 00:17:50,160
efficient and faster<font color="#CCCCCC"> okay now beyond</font>

367
00:17:47,809 --> 00:17:52,540
<font color="#CCCCCC">most</font><font color="#E5E5E5"> part deployment</font>

368
00:17:50,160 --> 00:17:56,830
diploma to Facebook specifics we've done

369
00:17:52,540 --> 00:17:58,899
how we progress so far so first of all

370
00:17:56,830 --> 00:18:01,780
as<font color="#E5E5E5"> I mentioned the most critical piece</font>

371
00:17:58,900 --> 00:18:06,160
in a architecture<font color="#CCCCCC"> Island p or any other</font>

372
00:18:01,780 --> 00:18:09,760
is to allocate a / 64 ipv6 prefix / host

373
00:18:06,160 --> 00:18:11,710
that's the most developer a shin so the

374
00:18:09,760 --> 00:18:14,260
diagram<font color="#E5E5E5"> on the right shows you very</font>

375
00:18:11,710 --> 00:18:17,680
simplified design here are key three

376
00:18:14,260 --> 00:18:20,350
levels Rex which pod and neck data

377
00:18:17,680 --> 00:18:23,200
center so spine is those covers data

378
00:18:20,350 --> 00:18:25,810
center part covers like say one cluster

379
00:18:23,200 --> 00:18:28,630
and rach covers like from like

380
00:18:25,810 --> 00:18:31,840
40-something machines now what we have

381
00:18:28,630 --> 00:18:35,320
is that on every Rex which we have a /

382
00:18:31,840 --> 00:18:38,500
50 for static route / 64 static route

383
00:18:35,320 --> 00:18:40,990
for every server then we summarize this

384
00:18:38,500 --> 00:18:43,870
to size 54 because<font color="#CCCCCC"> we can reinstall this</font>

385
00:18:40,990 --> 00:18:47,380
lots of routes upstream we have to

386
00:18:43,870 --> 00:18:51,489
summarize them to 54 this allows you to

387
00:18:47,380 --> 00:18:54,070
<font color="#E5E5E5">have up to</font><font color="#CCCCCC"> 1000 routes / x which if you</font>

388
00:18:51,490 --> 00:18:56,380
want to we<font color="#CCCCCC"> don't need</font><font color="#E5E5E5"> right now but it's</font>

389
00:18:54,070 --> 00:18:59,470
possible to use them all and so on this

390
00:18:56,380 --> 00:19:01,870
<font color="#E5E5E5">Dean summarized upstream and you get</font>

391
00:18:59,470 --> 00:19:03,910
like<font color="#E5E5E5"> one principal data center this was</font>

392
00:19:01,870 --> 00:19:06,699
very<font color="#CCCCCC"> critical because we had to allocate</font>

393
00:19:03,910 --> 00:19:09,460
new address blocks just to number every

394
00:19:06,700 --> 00:19:13,840
server additionally we've / 64 prefixes

395
00:19:09,460 --> 00:19:17,650
I think basically we got a<font color="#E5E5E5"> couple a</font>

396
00:19:13,840 --> 00:19:19,360
couple<font color="#E5E5E5"> or a few more of / 29 but we</font>

397
00:19:17,650 --> 00:19:23,290
allocate them inside<font color="#E5E5E5"> for the two blocks</font>

398
00:19:19,360 --> 00:19:26,229
and each / 42 is sufficient to give you

399
00:19:23,290 --> 00:19:29,050
30<font color="#CCCCCC"> data centers together so it's pretty</font>

400
00:19:26,230 --> 00:19:31,600
<font color="#E5E5E5">much enough space thanks to a few</font><font color="#CCCCCC"> cigs</font>

401
00:19:29,050 --> 00:19:35,649
<font color="#E5E5E5">with a lot of</font><font color="#CCCCCC"> numbers and addressing to</font>

402
00:19:31,600 --> 00:19:37,990
camera so this setup problems most

403
00:19:35,650 --> 00:19:40,570
problematic to<font color="#E5E5E5"> deploy because we had</font><font color="#CCCCCC"> to</font>

404
00:19:37,990 --> 00:19:42,280
reconfigure every single<font color="#E5E5E5"> Rex which every</font>

405
00:19:40,570 --> 00:19:44,830
next pulse which and so on<font color="#CCCCCC"> so forth</font>

406
00:19:42,280 --> 00:19:46,600
pretty much every device in the

407
00:19:44,830 --> 00:19:49,300
dissenter had to be updated to

408
00:19:46,600 --> 00:19:52,990
accommodate this the good part is that

409
00:19:49,300 --> 00:19:55,240
this was very static you pretty much

410
00:19:52,990 --> 00:19:59,050
have to allocate this once and then

411
00:19:55,240 --> 00:20:00,220
never touch it<font color="#E5E5E5"> okay now first</font>

412
00:19:59,050 --> 00:20:04,299
integration

413
00:20:00,220 --> 00:20:07,179
star 64 /<font color="#E5E5E5"> cost sounds very easy I think</font>

414
00:20:04,299 --> 00:20:10,929
this<font color="#CCCCCC"> too</font><font color="#E5E5E5"> almost as long as it took us to</font>

415
00:20:07,179 --> 00:20:15,130
configure every switch probably I'd say

416
00:20:10,929 --> 00:20:16,929
we<font color="#E5E5E5"> began deploying this in</font><font color="#CCCCCC"> may we finish</font>

417
00:20:15,130 --> 00:20:20,500
this like in August something obvious

418
00:20:16,929 --> 00:20:22,950
intersection numbering it sounds easy

419
00:20:20,500 --> 00:20:25,510
<font color="#CCCCCC">have chef recipe which applies this</font>

420
00:20:22,950 --> 00:20:27,880
unfortunately configuring this new

421
00:20:25,510 --> 00:20:29,590
addresses broke some applications

422
00:20:27,880 --> 00:20:32,679
because people like to be fine thanks

423
00:20:29,590 --> 00:20:35,439
<font color="#CCCCCC">ebel way we do things and you also have</font>

424
00:20:32,679 --> 00:20:39,730
<font color="#CCCCCC">to reapply</font><font color="#E5E5E5"> this prefix on every new</font>

425
00:20:35,440 --> 00:20:42,460
server deployment this output shows the

426
00:20:39,730 --> 00:20:45,490
actual IP addressing from my dev server

427
00:20:42,460 --> 00:20:47,860
development server as you can see we

428
00:20:45,490 --> 00:20:49,870
have<font color="#E5E5E5"> a business address which is</font>

429
00:20:47,860 --> 00:20:52,240
deprecated well it doesn't mean with

430
00:20:49,870 --> 00:20:55,299
deprecated the basis of course it<font color="#E5E5E5"> only</font>

431
00:20:52,240 --> 00:20:58,750
means that we you set the lifetime for

432
00:20:55,299 --> 00:21:00,520
<font color="#CCCCCC">this prefix</font><font color="#E5E5E5"> to be a</font><font color="#CCCCCC"> zero this is</font><font color="#E5E5E5"> the not</font>

433
00:20:58,750 --> 00:21:02,620
<font color="#E5E5E5">very well known trick it's kind of</font>

434
00:21:00,520 --> 00:21:05,440
hidden in somewhere FCS what this means

435
00:21:02,620 --> 00:21:07,629
if a lifetime of a previous is<font color="#CCCCCC"> zero the</font>

436
00:21:05,440 --> 00:21:10,720
applications will not automatically

437
00:21:07,630 --> 00:21:12,549
choose it for up for adverse binding so

438
00:21:10,720 --> 00:21:14,169
for<font color="#E5E5E5"> example if you do connect outbound</font>

439
00:21:12,549 --> 00:21:16,629
you will<font color="#E5E5E5"> not pick us address</font>

440
00:21:14,169 --> 00:21:18,640
automatically so this was very important

441
00:21:16,630 --> 00:21:20,799
because initially the connectivity to

442
00:21:18,640 --> 00:21:22,059
the split was broken and if you make

443
00:21:20,799 --> 00:21:25,720
applications use this you'll actually

444
00:21:22,059 --> 00:21:27,668
get broken applications this<font color="#E5E5E5"> still</font><font color="#CCCCCC"> cause</font>

445
00:21:25,720 --> 00:21:30,370
some issues because<font color="#E5E5E5"> we're people who</font>

446
00:21:27,669 --> 00:21:33,700
like to discover address on their own

447
00:21:30,370 --> 00:21:36,699
and it shows this address by mistake but

448
00:21:33,700 --> 00:21:39,210
overall this one pretty smoothly we did

449
00:21:36,700 --> 00:21:42,039
try our approaches we did try<font color="#E5E5E5"> to apply</font>

450
00:21:39,210 --> 00:21:45,280
<font color="#CCCCCC">the prefix to add</font><font color="#E5E5E5"> virtual interface that</font>

451
00:21:42,039 --> 00:21:48,280
<font color="#CCCCCC">Danny or thunder face that caused some</font>

452
00:21:45,280 --> 00:21:51,700
other griefs so in the end<font color="#E5E5E5"> we stopped on</font>

453
00:21:48,280 --> 00:21:56,110
assigning this new search 64 to physical

454
00:21:51,700 --> 00:21:58,240
<font color="#E5E5E5">Nick ETA</font><font color="#CCCCCC"> 0 as you can see the interface</font>

455
00:21:56,110 --> 00:22:01,750
has two more addresses linked local and

456
00:21:58,240 --> 00:22:03,880
<font color="#CCCCCC">the older pivot 6r is nope you for if</font>

457
00:22:01,750 --> 00:22:07,000
you have a if you even look at this the

458
00:22:03,880 --> 00:22:09,640
server IP relative is<font color="#CCCCCC"> 6 we now have lots</font>

459
00:22:07,000 --> 00:22:12,100
of clusters and lots of data centers

460
00:22:09,640 --> 00:22:13,340
which will be<font color="#CCCCCC"> 6 only becoming the condor</font>

461
00:22:12,100 --> 00:22:15,800
Matt facebook

462
00:22:13,340 --> 00:22:20,360
and this was just pretty much<font color="#E5E5E5"> next step</font>

463
00:22:15,800 --> 00:22:24,080
in addressing these machines<font color="#CCCCCC"> okay so how</font>

464
00:22:20,360 --> 00:22:26,000
do we<font color="#E5E5E5"> get from this address / cost to</font>

465
00:22:24,080 --> 00:22:28,760
address / process it's very

466
00:22:26,000 --> 00:22:31,460
<font color="#E5E5E5">straightforward now that you have ila</font>

467
00:22:28,760 --> 00:22:33,890
you can randomly generate a third 64

468
00:22:31,460 --> 00:22:37,550
number and give it to the<font color="#E5E5E5"> process say</font>

469
00:22:33,890 --> 00:22:42,050
hey use them sir prefix and this random

470
00:22:37,550 --> 00:22:43,610
number as your address and it sounds

471
00:22:42,050 --> 00:22:46,129
very simple<font color="#E5E5E5"> and let's change the</font>

472
00:22:43,610 --> 00:22:48,500
collision but likely right now with the

473
00:22:46,130 --> 00:22:50,180
<font color="#E5E5E5">search 64-bit address space the</font>

474
00:22:48,500 --> 00:22:53,240
uniqueness is pretty much guaranteed

475
00:22:50,180 --> 00:22:54,980
sent by the fact that you<font color="#CCCCCC"> three take</font>

476
00:22:53,240 --> 00:23:00,410
sort of time to get<font color="#E5E5E5"> a collision in</font>

477
00:22:54,980 --> 00:23:02,930
aesthetics in a 64-bit address space so

478
00:23:00,410 --> 00:23:05,090
the<font color="#E5E5E5"> next more tricky part is how would</font>

479
00:23:02,930 --> 00:23:07,130
you make a process use this new address

480
00:23:05,090 --> 00:23:09,409
because<font color="#CCCCCC"> people normally don't really</font>

481
00:23:07,130 --> 00:23:12,830
bind two things right we just like<font color="#E5E5E5"> okay</font>

482
00:23:09,410 --> 00:23:14,840
bind to any do connect and expecting to

483
00:23:12,830 --> 00:23:17,600
work magically and that's pretty much

484
00:23:14,840 --> 00:23:20,300
coming good approach of course in our

485
00:23:17,600 --> 00:23:23,360
case<font color="#CCCCCC"> we had to somehow force</font><font color="#E5E5E5"> this so for</font>

486
00:23:20,300 --> 00:23:25,760
<font color="#CCCCCC">people or processes which can cooperate</font>

487
00:23:23,360 --> 00:23:28,479
we give them a variable environment

488
00:23:25,760 --> 00:23:31,190
saying this is your address use it right

489
00:23:28,480 --> 00:23:34,070
for<font color="#CCCCCC"> people who don't want</font><font color="#E5E5E5"> to cooperate</font>

490
00:23:31,190 --> 00:23:38,300
or cannot cooperate we have this pretty

491
00:23:34,070 --> 00:23:41,899
ugly hug right now you promote a shared

492
00:23:38,300 --> 00:23:45,169
library before process and you make

493
00:23:41,900 --> 00:23:49,090
process use this guy it intercepts bind

494
00:23:45,170 --> 00:23:51,440
connect and our calls and forces the

495
00:23:49,090 --> 00:23:53,720
assignment or allocation of your address

496
00:23:51,440 --> 00:23:55,490
to<font color="#E5E5E5"> be done automatically so that the</font>

497
00:23:53,720 --> 00:23:58,670
case should even know about this we

498
00:23:55,490 --> 00:24:01,070
start business as<font color="#CCCCCC"> usual and they are</font>

499
00:23:58,670 --> 00:24:04,550
<font color="#CCCCCC">forced</font><font color="#E5E5E5"> to use the new address this is</font>

500
00:24:01,070 --> 00:24:06,710
kind of nice because it helps us avoid

501
00:24:04,550 --> 00:24:08,659
any need<font color="#CCCCCC"> to change application on the</font>

502
00:24:06,710 --> 00:24:10,850
downside<font color="#CCCCCC"> if you break something it's</font>

503
00:24:08,660 --> 00:24:13,040
hard to debug because people often not

504
00:24:10,850 --> 00:24:17,719
very cognizant but you have the LD

505
00:24:13,040 --> 00:24:19,550
preload<font color="#E5E5E5"> stepped before application very</font>

506
00:24:17,720 --> 00:24:22,390
popular right<font color="#CCCCCC"> now in community in the in</font>

507
00:24:19,550 --> 00:24:26,210
public in<font color="#CCCCCC"> open source namespaces</font>

508
00:24:22,390 --> 00:24:29,270
namespaces and most evil<font color="#E5E5E5"> and l2</font><font color="#CCCCCC"> galan</font>

509
00:24:26,210 --> 00:24:32,180
very great conceptually they break other

510
00:24:29,270 --> 00:24:35,240
things right<font color="#E5E5E5"> now for us so which rive is</font>

511
00:24:32,180 --> 00:24:37,190
in some small experiments we don't<font color="#CCCCCC"> do</font>

512
00:24:35,240 --> 00:24:39,320
<font color="#E5E5E5">this actively so right now if you look</font>

513
00:24:37,190 --> 00:24:41,720
all process you run they share the same

514
00:24:39,320 --> 00:24:44,419
namespace default namespace on the<font color="#E5E5E5"> Linux</font>

515
00:24:41,720 --> 00:24:49,450
cost they just<font color="#E5E5E5"> have different addresses</font>

516
00:24:44,420 --> 00:24:52,520
they can use<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> next is DNS support</font>

517
00:24:49,450 --> 00:24:55,520
people surprising don't like using

518
00:24:52,520 --> 00:24:58,129
addresses for like log output other

519
00:24:55,520 --> 00:25:01,310
things so we want these new unique

520
00:24:58,130 --> 00:25:02,840
addresses to have DNS names effectively

521
00:25:01,310 --> 00:25:06,379
one genus name<font color="#CCCCCC"> poor contain your upper</font>

522
00:25:02,840 --> 00:25:09,080
process right now we generate name on

523
00:25:06,380 --> 00:25:11,410
the fly when you start a new job or a

524
00:25:09,080 --> 00:25:15,020
new process it looks awful like this

525
00:25:11,410 --> 00:25:17,300
it's pretty lengthy name it uses like we

526
00:25:15,020 --> 00:25:21,650
local domain which is typically used for

527
00:25:17,300 --> 00:25:23,659
like you know mdns multicast<font color="#CCCCCC"> DNS we kind</font>

528
00:25:21,650 --> 00:25:26,810
of use this because<font color="#E5E5E5"> it seems like a nice</font>

529
00:25:23,660 --> 00:25:28,550
analogy of this virtual subnet will you

530
00:25:26,810 --> 00:25:31,790
have this addresses share in one star

531
00:25:28,550 --> 00:25:34,550
six to four the variable name here says

532
00:25:31,790 --> 00:25:37,010
you<font color="#CCCCCC"> okay this task grinds in prattville</font>

533
00:25:34,550 --> 00:25:39,950
it belongs to team called net systems

534
00:25:37,010 --> 00:25:44,750
and so and so<font color="#E5E5E5"> forth and number 0 is a</font>

535
00:25:39,950 --> 00:25:47,240
number of a task in a in a global job we

536
00:25:44,750 --> 00:25:50,000
only create quad-a and PTR records

537
00:25:47,240 --> 00:25:51,980
<font color="#CCCCCC">straightforward nothing fancy and right</font>

538
00:25:50,000 --> 00:25:55,040
now this is a very custom hack so we

539
00:25:51,980 --> 00:25:57,440
have I<font color="#CCCCCC"> think who is unbound for DNS</font>

540
00:25:55,040 --> 00:25:59,570
names and then with a special process

541
00:25:57,440 --> 00:26:02,720
which accesses this back-end database

542
00:25:59,570 --> 00:26:05,030
called DB DB DB DB I don't think is open

543
00:26:02,720 --> 00:26:08,000
source but I think we spoke about this

544
00:26:05,030 --> 00:26:10,760
before it's kind of fun if you know this

545
00:26:08,000 --> 00:26:13,280
similar to<font color="#E5E5E5"> Amazon dynamo it's a global</font>

546
00:26:10,760 --> 00:26:15,710
key value store but allows you to create

547
00:26:13,280 --> 00:26:19,100
a key<font color="#E5E5E5"> value pair somewhere and then read</font>

548
00:26:15,710 --> 00:26:20,810
<font color="#CCCCCC">it elsewhere it's</font><font color="#E5E5E5"> really simple not to</font>

549
00:26:19,100 --> 00:26:22,820
be performed on rights because<font color="#CCCCCC"> he's</font>

550
00:26:20,810 --> 00:26:25,310
transactional semantics but it works

551
00:26:22,820 --> 00:26:27,379
<font color="#CCCCCC">really well for us right now because the</font>

552
00:26:25,310 --> 00:26:32,540
rate of<font color="#CCCCCC"> change what we have isn't very</font>

553
00:26:27,380 --> 00:26:33,710
high<font color="#E5E5E5"> okay hot support um this is an</font>

554
00:26:32,540 --> 00:26:36,050
excellent magic what we did up for

555
00:26:33,710 --> 00:26:38,450
ourselves I la is now supported in

556
00:26:36,050 --> 00:26:39,379
mainstream<font color="#CCCCCC"> Colonel I think since version</font>

557
00:26:38,450 --> 00:26:41,840
<font color="#E5E5E5">4 point</font>

558
00:26:39,380 --> 00:26:45,710
I forgot what exactly to be honest we

559
00:26:41,840 --> 00:26:47,959
have a module<font color="#CCCCCC"> called la so this module</font>

560
00:26:45,710 --> 00:26:50,330
implements aisle a using the current

561
00:26:47,960 --> 00:26:52,180
table converting table if you're

562
00:26:50,330 --> 00:26:54,949
familiar is uses the lightweight tunnels

563
00:26:52,180 --> 00:26:57,380
extension which also allows you to

564
00:26:54,950 --> 00:27:00,620
attach avatar encapsulations like VX

565
00:26:57,380 --> 00:27:02,840
<font color="#E5E5E5">lens on mpls lightly tunnels is kind of</font>

566
00:27:00,620 --> 00:27:06,530
this new framework in the external to do

567
00:27:02,840 --> 00:27:09,139
always<font color="#E5E5E5"> in cap the cap magic all the</font>

568
00:27:06,530 --> 00:27:11,480
<font color="#CCCCCC">times netlink men think is ok if you</font>

569
00:27:09,140 --> 00:27:15,170
like it it's<font color="#E5E5E5"> not as great if you kind of</font>

570
00:27:11,480 --> 00:27:17,450
wonder liability but allows you to right

571
00:27:15,170 --> 00:27:21,890
now create and populate mapping tables

572
00:27:17,450 --> 00:27:24,020
on the linux kernel machines<font color="#E5E5E5"> ok so this</font>

573
00:27:21,890 --> 00:27:27,620
will show you<font color="#E5E5E5"> how you can configure a</font>

574
00:27:24,020 --> 00:27:31,280
single host for a la forwarding so first

575
00:27:27,620 --> 00:27:32,810
of all you load the module<font color="#E5E5E5"> la this</font><font color="#CCCCCC"> is</font>

576
00:27:31,280 --> 00:27:34,660
<font color="#E5E5E5">basically if you want to play with you</font>

577
00:27:32,810 --> 00:27:38,060
at<font color="#CCCCCC"> your home of the aisle configuration</font>

578
00:27:34,660 --> 00:27:43,060
you have to download the IP command let

579
00:27:38,060 --> 00:27:45,710
us build it has this option to right now

580
00:27:43,060 --> 00:27:47,260
define<font color="#CCCCCC"> a ling capsulation so first</font>

581
00:27:45,710 --> 00:27:50,210
comment of course you can figure the

582
00:27:47,260 --> 00:27:51,320
survey fix your address are they on your

583
00:27:50,210 --> 00:27:54,050
machine<font color="#CCCCCC"> and you'll look</font><font color="#E5E5E5"> back in this</font>

584
00:27:51,320 --> 00:27:57,110
case pay attention<font color="#CCCCCC"> this orange stuff is</font>

585
00:27:54,050 --> 00:28:00,820
a surprise x second one you a static

586
00:27:57,110 --> 00:28:04,699
route which tells okay for this upper ID

587
00:28:00,820 --> 00:28:08,270
<font color="#CCCCCC">Alligator Alley address use this</font>

588
00:28:04,700 --> 00:28:11,890
capsulation so on the left here is the

589
00:28:08,270 --> 00:28:14,900
alley address on the right is 664

590
00:28:11,890 --> 00:28:16,790
translation we rewrite have to apply so

591
00:28:14,900 --> 00:28:19,280
when the packet hits this entry gets<font color="#E5E5E5"> you</font>

592
00:28:16,790 --> 00:28:21,920
<font color="#E5E5E5">written and flies away and lastly you</font>

593
00:28:19,280 --> 00:28:24,200
have a mapping for incoming packets so

594
00:28:21,920 --> 00:28:26,570
if a packet comes to your<font color="#CCCCCC"> machine and it</font>

595
00:28:24,200 --> 00:28:29,540
has this locator and visa densifier so

596
00:28:26,570 --> 00:28:32,570
<font color="#CCCCCC">locator is red identified as green you</font>

597
00:28:29,540 --> 00:28:35,210
translate it<font color="#CCCCCC"> back to the surface so</font>

598
00:28:32,570 --> 00:28:37,820
three commands bind route and local

599
00:28:35,210 --> 00:28:39,350
translation this is actually how do is

600
00:28:37,820 --> 00:28:41,840
initially enough implementation<font color="#E5E5E5"> was</font>

601
00:28:39,350 --> 00:28:45,649
simply using the IP command to create

602
00:28:41,840 --> 00:28:48,100
and remove entries<font color="#CCCCCC"> ok alia routers as</font><font color="#E5E5E5"> I</font>

603
00:28:45,650 --> 00:28:51,110
mentioned<font color="#E5E5E5"> is a big deal for LA right now</font>

604
00:28:48,100 --> 00:28:52,699
we make every horse<font color="#CCCCCC"> early router so</font>

605
00:28:51,110 --> 00:28:52,939
every cost which is part of a leader

606
00:28:52,700 --> 00:28:55,190
<font color="#CCCCCC">main</font>

607
00:28:52,940 --> 00:28:57,440
injects the server if<font color="#E5E5E5"> X she may have</font>

608
00:28:55,190 --> 00:28:59,990
<font color="#E5E5E5">like piles of machines which inject this</font>

609
00:28:57,440 --> 00:29:02,630
left 64 prefix and attract any gas

610
00:28:59,990 --> 00:29:04,460
traffic to themselves on one<font color="#CCCCCC"> hand it's</font>

611
00:29:02,630 --> 00:29:06,200
kind of confusing on the other hand

612
00:29:04,460 --> 00:29:08,390
gives you really nice<font color="#CCCCCC"> little bouncing</font>

613
00:29:06,200 --> 00:29:09,590
but traffic come into a network<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

614
00:29:08,390 --> 00:29:13,130
watch shared across thousands<font color="#CCCCCC"> of</font>

615
00:29:09,590 --> 00:29:14,720
machines we probably move to a model

616
00:29:13,130 --> 00:29:17,420
<font color="#E5E5E5">will have dedicated machines for other</font>

617
00:29:14,720 --> 00:29:20,300
routers right now it is to be easy to

618
00:29:17,420 --> 00:29:22,640
make everything very symmetric control

619
00:29:20,300 --> 00:29:26,480
plane as I<font color="#CCCCCC"> mentioned the hosts have to</font>

620
00:29:22,640 --> 00:29:28,900
inform the routers automatics once<font color="#CCCCCC"> again</font>

621
00:29:26,480 --> 00:29:32,270
this has been translated<font color="#E5E5E5"> so it on cated</font>

622
00:29:28,900 --> 00:29:35,030
only on the bottom<font color="#CCCCCC"> you have early hosts</font>

623
00:29:32,270 --> 00:29:37,280
which are also other routers just happen

624
00:29:35,030 --> 00:29:40,310
to be when<font color="#CCCCCC"> you start a new process it</font>

625
00:29:37,280 --> 00:29:42,230
gets new address and it populates and

626
00:29:40,310 --> 00:29:45,230
<font color="#E5E5E5">rise</font><font color="#CCCCCC"> to back-end database saying hey</font>

627
00:29:42,230 --> 00:29:48,920
this is my ID to<font color="#CCCCCC"> locate the mapping and</font>

628
00:29:45,230 --> 00:29:51,410
this is my dns name and then every

629
00:29:48,920 --> 00:29:53,960
machine<font color="#E5E5E5"> simply download the 35 second</font>

630
00:29:51,410 --> 00:29:57,020
it's really<font color="#E5E5E5"> a fan fancy right it simply</font>

631
00:29:53,960 --> 00:30:00,400
runs a busy loop with 75 seconds

632
00:29:57,020 --> 00:30:03,020
downloads mappings<font color="#CCCCCC"> update local table</font>

633
00:30:00,400 --> 00:30:04,580
this simple approaches are often more

634
00:30:03,020 --> 00:30:07,850
reliable than more offensive and driven

635
00:30:04,580 --> 00:30:09,710
ones it's all<font color="#CCCCCC"> very reactive obviously</font>

636
00:30:07,850 --> 00:30:12,290
because it<font color="#E5E5E5"> may take like five to six</font>

637
00:30:09,710 --> 00:30:14,420
seconds before you respond to<font color="#CCCCCC"> a new</font>

638
00:30:12,290 --> 00:30:18,860
mapping but right<font color="#CCCCCC"> now it's sufficient</font>

639
00:30:14,420 --> 00:30:21,140
for our needs it's clear to standard by

640
00:30:18,860 --> 00:30:23,000
works for ourselves and also notice this

641
00:30:21,140 --> 00:30:25,580
gets replicated everywhere global it has

642
00:30:23,000 --> 00:30:27,590
a network because ebdb is database which

643
00:30:25,580 --> 00:30:31,129
run globally across all data centers

644
00:30:27,590 --> 00:30:32,389
very<font color="#E5E5E5"> very simple nothing standard would</font>

645
00:30:31,130 --> 00:30:37,100
different need something better<font color="#E5E5E5"> in the</font>

646
00:30:32,390 --> 00:30:39,140
future<font color="#CCCCCC"> ok this</font><font color="#E5E5E5"> brittle tells you about</font>

647
00:30:37,100 --> 00:30:42,320
<font color="#E5E5E5">the scale deployment right now it's</font>

648
00:30:39,140 --> 00:30:44,960
experimental we try this on a bunch<font color="#E5E5E5"> of</font>

649
00:30:42,320 --> 00:30:47,120
tasks it's used in production a very

650
00:30:44,960 --> 00:30:49,640
limited fashion we definitely<font color="#CCCCCC"> want to</font>

651
00:30:47,120 --> 00:30:51,439
move forward<font color="#CCCCCC"> with this globally we'll</font>

652
00:30:49,640 --> 00:30:53,090
<font color="#E5E5E5">probably have to hit much more obstacles</font>

653
00:30:51,440 --> 00:30:55,760
in the future right<font color="#CCCCCC"> now things look</font>

654
00:30:53,090 --> 00:30:58,580
promising but<font color="#E5E5E5"> you know you also get in</font>

655
00:30:55,760 --> 00:31:00,310
trouble as you move forward I mean

656
00:30:58,580 --> 00:31:03,530
<font color="#E5E5E5">already we have discovered a few issues</font>

657
00:31:00,310 --> 00:31:05,570
like I only<font color="#E5E5E5"> does this view rights and of</font>

658
00:31:03,530 --> 00:31:06,710
course<font color="#CCCCCC"> this breaks the wonderful ICT</font>

659
00:31:05,570 --> 00:31:09,620
messages on the transit

660
00:31:06,710 --> 00:31:11,960
if you do trace route because on the

661
00:31:09,620 --> 00:31:14,809
<font color="#E5E5E5">middle</font><font color="#CCCCCC"> will send packets back which have</font>

662
00:31:11,960 --> 00:31:16,730
a payload<font color="#CCCCCC"> that has the addresses which</font>

663
00:31:14,809 --> 00:31:19,190
have been translated the same for PMT

664
00:31:16,730 --> 00:31:21,200
you so right now this break some tools

665
00:31:19,190 --> 00:31:23,809
we definitely<font color="#CCCCCC"> have some work in progress</font>

666
00:31:21,200 --> 00:31:26,510
to fix that because operationally people

667
00:31:23,809 --> 00:31:29,090
cannot tolerate<font color="#E5E5E5"> tres had been</font><font color="#CCCCCC"> broken or</font>

668
00:31:26,510 --> 00:31:30,919
PM to not working even<font color="#E5E5E5"> though in data</font>

669
00:31:29,090 --> 00:31:32,510
center beam choosing such a big deal

670
00:31:30,919 --> 00:31:37,010
it's really nice to have<font color="#E5E5E5"> it working</font>

671
00:31:32,510 --> 00:31:40,549
properly ok so the future future of ila

672
00:31:37,010 --> 00:31:43,129
is how plan to develop and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> next</font>

673
00:31:40,549 --> 00:31:47,690
steps to plan to do so first of all more

674
00:31:43,130 --> 00:31:52,190
acronyms you're Zeno of<font color="#CCCCCC"> ila LNP GLC next</font>

675
00:31:47,690 --> 00:31:54,710
one is EB PF I guess everyone here<font color="#E5E5E5"> use</font>

676
00:31:52,190 --> 00:31:57,440
BPF in the life in one way or another

677
00:31:54,710 --> 00:32:00,830
because this EP dump is initially in

678
00:31:57,440 --> 00:32:03,350
healthy built on BBF so BPF is<font color="#CCCCCC"> blurred</font>

679
00:32:00,830 --> 00:32:07,520
<font color="#CCCCCC">key packet filter spoke</font><font color="#E5E5E5"> berkeley right</font>

680
00:32:03,350 --> 00:32:10,760
this time great it basically a language

681
00:32:07,520 --> 00:32:14,418
for packet filtering used to be a<font color="#CCCCCC"> BPF is</font>

682
00:32:10,760 --> 00:32:16,970
extension<font color="#E5E5E5"> of the old BPF language called</font>

683
00:32:14,419 --> 00:32:19,340
classical etf now it's now<font color="#E5E5E5"> a jit</font>

684
00:32:16,970 --> 00:32:22,190
compiled so it's<font color="#E5E5E5"> byte code which</font>

685
00:32:19,340 --> 00:32:25,399
<font color="#E5E5E5">compiles to next instruction set in</font>

686
00:32:22,190 --> 00:32:28,700
kernel and it allows you to inject

687
00:32:25,399 --> 00:32:30,949
arbitrary code which was an unsecured

688
00:32:28,700 --> 00:32:32,570
node not just filtering purposes for

689
00:32:30,950 --> 00:32:35,090
much more up for much more different

690
00:32:32,570 --> 00:32:38,389
users and once you big deal for us is

691
00:32:35,090 --> 00:32:41,149
because<font color="#E5E5E5"> it allows</font><font color="#CCCCCC"> us to extend clonal</font>

692
00:32:38,390 --> 00:32:43,130
functionality on the fly from user space

693
00:32:41,149 --> 00:32:46,340
you can write something in<font color="#E5E5E5"> this bytecode</font>

694
00:32:43,130 --> 00:32:49,539
you can inject it in the kernel and it's

695
00:32:46,340 --> 00:32:52,370
been involved<font color="#E5E5E5"> by kernel functions</font>

696
00:32:49,539 --> 00:32:55,399
outside visual space so for example

697
00:32:52,370 --> 00:32:58,969
example use case is<font color="#E5E5E5"> early router right</font>

698
00:32:55,399 --> 00:33:02,270
now application which implements other

699
00:32:58,970 --> 00:33:05,059
router purely a CDF program so always

700
00:33:02,270 --> 00:33:07,520
<font color="#CCCCCC">lookups always translations are done by</font>

701
00:33:05,059 --> 00:33:09,350
a DPF program which is simply<font color="#E5E5E5"> upload</font>

702
00:33:07,520 --> 00:33:13,490
into kernel and attached<font color="#CCCCCC"> to inbound</font>

703
00:33:09,350 --> 00:33:16,820
processing another abbreviation as

704
00:33:13,490 --> 00:33:19,429
<font color="#CCCCCC">philosophy I promise xdp expressed data</font>

705
00:33:16,820 --> 00:33:20,210
path is originally new development in a

706
00:33:19,429 --> 00:33:22,370
non-secure

707
00:33:20,210 --> 00:33:25,310
no is the kind of response from coma

708
00:33:22,370 --> 00:33:29,120
community to always<font color="#CCCCCC"> dpd k and our color</font>

709
00:33:25,310 --> 00:33:33,440
bypass magic it allows you to implement

710
00:33:29,120 --> 00:33:36,020
very simple<font color="#E5E5E5"> and fast internet working in</font>

711
00:33:33,440 --> 00:33:39,080
a few<font color="#E5E5E5"> words you can attach</font><font color="#CCCCCC"> a BPF</font>

712
00:33:36,020 --> 00:33:40,850
programs very early<font color="#E5E5E5"> in the driver code</font>

713
00:33:39,080 --> 00:33:43,340
you don't have to wait for full stack

714
00:33:40,850 --> 00:33:45,199
processing you can inject code early in

715
00:33:43,340 --> 00:33:47,149
the<font color="#CCCCCC"> cardinal and this allows you to</font>

716
00:33:45,200 --> 00:33:50,210
implement functions with very low

717
00:33:47,150 --> 00:33:52,490
overhead for example<font color="#E5E5E5"> our router attaches</font>

718
00:33:50,210 --> 00:33:54,920
directly to a driver and you don't<font color="#E5E5E5"> have</font>

719
00:33:52,490 --> 00:33:57,500
to walk the full particle passing chain

720
00:33:54,920 --> 00:33:59,150
you don't have to go<font color="#E5E5E5"> for us in table you</font>

721
00:33:57,500 --> 00:34:02,390
can process things very<font color="#CCCCCC"> very quickly of</font>

722
00:33:59,150 --> 00:34:05,750
<font color="#E5E5E5">course some limitations but in a few</font>

723
00:34:02,390 --> 00:34:10,430
words xep is a method to implement very

724
00:34:05,750 --> 00:34:12,980
fast working in kernel well just use

725
00:34:10,429 --> 00:34:15,230
cases right here and<font color="#E5E5E5"> obviously if you</font>

726
00:34:12,980 --> 00:34:18,679
have to you can always<font color="#E5E5E5"> punt from SD</font>

727
00:34:15,230 --> 00:34:21,590
program or BBF program to a kernel for<font color="#E5E5E5"> a</font>

728
00:34:18,679 --> 00:34:23,419
normal processing and once again this

729
00:34:21,590 --> 00:34:26,480
vision menu I think it's been only

730
00:34:23,420 --> 00:34:29,060
around for like eight months since this

731
00:34:26,480 --> 00:34:32,900
announcement was only support in Colonel

732
00:34:29,060 --> 00:34:35,750
4.6 and 4.8 I think for a few drivers

733
00:34:32,900 --> 00:34:38,660
with much more work going on and lots of

734
00:34:35,750 --> 00:34:43,310
interest in the current community in the

735
00:34:38,659 --> 00:34:45,560
HDD functionality<font color="#CCCCCC"> okay if you folks have</font>

736
00:34:43,310 --> 00:34:47,690
to keep in mind a few<font color="#E5E5E5"> things from this</font>

737
00:34:45,560 --> 00:34:51,739
presentation here we are first of all

738
00:34:47,690 --> 00:34:54,920
what's ila ila is a thing that gives us

739
00:34:51,739 --> 00:34:57,379
unique address for process allows us to

740
00:34:54,920 --> 00:35:00,560
provide location<font color="#CCCCCC"> independence and it all</font>

741
00:34:57,380 --> 00:35:04,400
works on these two fundamental pillars a

742
00:35:00,560 --> 00:35:06,350
DPF and xdp and that's it I'm done<font color="#CCCCCC"> with</font>

743
00:35:04,400 --> 00:35:09,160
acronyms<font color="#E5E5E5"> and I'm going to</font><font color="#CCCCCC"> take your</font>

744
00:35:06,350 --> 00:35:09,160
<font color="#E5E5E5">questions thank</font>

