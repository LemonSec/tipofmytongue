1
00:00:00,740 --> 00:00:05,670
hi<font color="#E5E5E5"> I'm going to present a very brief</font>

2
00:00:03,840 --> 00:00:07,680
overview some of the initial results

3
00:00:05,670 --> 00:00:09,330
we've got inclined to use<font color="#E5E5E5"> traffic</font>

4
00:00:07,680 --> 00:00:12,629
engineering information to improve the

5
00:00:09,330 --> 00:00:14,129
performance of ospf<font color="#E5E5E5"> niños networks so</font>

6
00:00:12,630 --> 00:00:16,590
the stock is very<font color="#E5E5E5"> similar in flavor to</font>

7
00:00:14,130 --> 00:00:18,869
the previous<font color="#CCCCCC"> top but instead of</font><font color="#E5E5E5"> doing</font>

8
00:00:16,590 --> 00:00:21,210
<font color="#E5E5E5">comparisons between Leonard rsps and</font>

9
00:00:18,869 --> 00:00:23,189
theoretical optimal our goal of specific

10
00:00:21,210 --> 00:00:25,590
and tweak the<font color="#CCCCCC"> current ospf ania sighs</font>

11
00:00:23,189 --> 00:00:28,470
network protocols to improve the

12
00:00:25,590 --> 00:00:30,448
performance this work is done in joint

13
00:00:28,470 --> 00:00:36,540
collaboration drop grain from<font color="#E5E5E5"> upenn and</font>

14
00:00:30,449 --> 00:00:38,190
<font color="#CCCCCC">constructive transplant labs so okay the</font>

15
00:00:36,540 --> 00:00:40,260
initial<font color="#E5E5E5"> motivation is obvious and is all</font>

16
00:00:38,190 --> 00:00:42,660
doing previously mentioned in just a

17
00:00:40,260 --> 00:00:43,829
previous stop traffic engineering has

18
00:00:42,660 --> 00:00:45,959
the potential to improve the performance

19
00:00:43,829 --> 00:00:48,539
of the network so what we are

20
00:00:45,960 --> 00:00:50,160
specifically interested in is in traffic

21
00:00:48,539 --> 00:00:53,280
<font color="#E5E5E5">engineering we use in the current</font>

22
00:00:50,160 --> 00:00:54,569
existing ospf analysis protocols so

23
00:00:53,280 --> 00:00:57,960
specifically want to look at three

24
00:00:54,570 --> 00:00:59,460
equations first question<font color="#CCCCCC"> being how much</font>

25
00:00:57,960 --> 00:01:01,620
<font color="#E5E5E5">performance can be actually</font><font color="#CCCCCC"> get out of</font>

26
00:00:59,460 --> 00:01:03,989
them by using traffic engineering the

27
00:01:01,620 --> 00:01:05,429
second being how<font color="#E5E5E5"> much configuration</font>

28
00:01:03,989 --> 00:01:07,350
overhead is required to<font color="#E5E5E5"> get this</font>

29
00:01:05,430 --> 00:01:09,090
performance out of them and hopefully

30
00:01:07,350 --> 00:01:11,130
these two should be<font color="#CCCCCC"> able to put at least</font>

31
00:01:09,090 --> 00:01:12,299
an initial for<font color="#E5E5E5"> them into answering the</font>

32
00:01:11,130 --> 00:01:14,520
question do we really need to<font color="#E5E5E5"> migrate</font>

33
00:01:12,299 --> 00:01:19,530
when new technology just to get

34
00:01:14,520 --> 00:01:21,509
performance so the<font color="#E5E5E5"> question becomes why</font>

35
00:01:19,530 --> 00:01:23,159
focus on ospf<font color="#CCCCCC"> ania sighs why not just</font>

36
00:01:21,509 --> 00:01:25,320
get a new protocol and the<font color="#E5E5E5"> answer is</font>

37
00:01:23,159 --> 00:01:28,020
simple<font color="#CCCCCC"> and obvious there</font><font color="#E5E5E5"> is a large</font>

38
00:01:25,320 --> 00:01:29,939
established days of worst BF a nice i

39
00:01:28,020 --> 00:01:32,100
was running in today's<font color="#E5E5E5"> internet so the</font>

40
00:01:29,939 --> 00:01:34,500
technologies are time-tested people have

41
00:01:32,100 --> 00:01:36,149
a lot<font color="#CCCCCC"> of experience in using them so if</font>

42
00:01:34,500 --> 00:01:38,280
you<font color="#CCCCCC"> were to tweak and make some changes</font>

43
00:01:36,150 --> 00:01:40,170
<font color="#CCCCCC">in velocity of a nice eyes I believe</font>

44
00:01:38,280 --> 00:01:42,450
<font color="#CCCCCC">that the fast multitude will dine</font><font color="#E5E5E5"> this</font>

45
00:01:40,170 --> 00:01:44,670
shift when you protocol this also<font color="#CCCCCC"> means</font>

46
00:01:42,450 --> 00:01:46,710
that we get to<font color="#E5E5E5"> save a lot in terms of</font>

47
00:01:44,670 --> 00:01:49,680
upgrades of equipment in terms of

48
00:01:46,710 --> 00:01:52,189
training etc having said that there are

49
00:01:49,680 --> 00:01:54,390
some disadvantages of using ospf nice is

50
00:01:52,189 --> 00:01:55,860
one of them is the fact that they

51
00:01:54,390 --> 00:01:57,750
constrain to<font color="#CCCCCC"> the shortest path routing</font>

52
00:01:55,860 --> 00:01:59,759
and the other has mentioned previously

53
00:01:57,750 --> 00:02:02,610
is that they have very limited load

54
00:01:59,759 --> 00:02:04,259
balancing abilities the only way they

55
00:02:02,610 --> 00:02:06,420
can do load balancing is to spread

56
00:02:04,259 --> 00:02:09,479
traffic equally or all the equal cross

57
00:02:06,420 --> 00:02:11,950
paths and these two constraints might

58
00:02:09,479 --> 00:02:14,260
interfere with using classic agent into

59
00:02:11,950 --> 00:02:16,359
performance so question were to ask is

60
00:02:14,260 --> 00:02:18,670
arbys to really constraints and the

61
00:02:16,360 --> 00:02:20,290
sense that this is it<font color="#E5E5E5"> actually the case</font>

62
00:02:18,670 --> 00:02:24,309
that we cannot get good performance out

63
00:02:20,290 --> 00:02:26,200
of<font color="#E5E5E5"> ospf and I sighs okay so the first</font>

64
00:02:24,310 --> 00:02:27,550
such work which try to answer this

65
00:02:26,200 --> 00:02:30,130
question appeared in excellent a

66
00:02:27,550 --> 00:02:31,870
thousand my fourth<font color="#CCCCCC"> Center up but the</font>

67
00:02:30,130 --> 00:02:33,519
basically<font color="#E5E5E5"> showed was that if you have</font>

68
00:02:31,870 --> 00:02:36,580
knowledge of the traffic entering the

69
00:02:33,519 --> 00:02:38,709
network then it is<font color="#CCCCCC"> possible to pick I GP</font>

70
00:02:36,580 --> 00:02:40,989
link which such that you get<font color="#E5E5E5"> very good</font>

71
00:02:38,709 --> 00:02:42,730
<font color="#CCCCCC">performance in</font><font color="#E5E5E5"> fact they have a very</font>

72
00:02:40,989 --> 00:02:45,220
simple local search heuristic and show

73
00:02:42,730 --> 00:02:46,569
that<font color="#E5E5E5"> for a large range of topologies it</font>

74
00:02:45,220 --> 00:02:48,489
is possible<font color="#CCCCCC"> to get pretty close to the</font>

75
00:02:46,569 --> 00:02:49,810
optimal that's not the optimal at least

76
00:02:48,489 --> 00:02:52,299
shooting a dramatic performance

77
00:02:49,810 --> 00:02:54,579
improvement but I also showed<font color="#CCCCCC"> that they</font>

78
00:02:52,299 --> 00:02:57,610
do exist again a large set of topologies

79
00:02:54,579 --> 00:02:59,230
and classic matrices where ospf an ISS

80
00:02:57,610 --> 00:03:01,630
can be really bad and really far from

81
00:02:59,230 --> 00:03:03,429
<font color="#E5E5E5">the optimist and the main culprit they</font>

82
00:03:01,630 --> 00:03:04,959
identified behind the spore performance

83
00:03:03,430 --> 00:03:06,670
world the limited load balancing

84
00:03:04,959 --> 00:03:09,970
abilities that are present in ospf a

85
00:03:06,670 --> 00:03:12,309
nice is the next piece of work appeared

86
00:03:09,970 --> 00:03:15,250
in<font color="#CCCCCC"> ilfracombe 2001 by bang bang and</font>

87
00:03:12,310 --> 00:03:16,840
shine and<font color="#E5E5E5"> basically showed that given</font>

88
00:03:15,250 --> 00:03:19,299
any optimal routing you can match it

89
00:03:16,840 --> 00:03:21,190
with short spot routing and they did it

90
00:03:19,299 --> 00:03:23,500
<font color="#E5E5E5">by using a linear multi commodity</font>

91
00:03:21,190 --> 00:03:26,139
problem formulation I won't go into<font color="#E5E5E5"> it</font>

92
00:03:23,500 --> 00:03:28,630
<font color="#E5E5E5">but the upshot was that shortest path</font>

93
00:03:26,139 --> 00:03:29,980
routing is not a limitation if all

94
00:03:28,630 --> 00:03:33,459
you're doing a shortest path routing can

95
00:03:29,980 --> 00:03:36,040
still match optimal routing but there<font color="#E5E5E5"> is</font>

96
00:03:33,459 --> 00:03:37,480
something still missing so the critical

97
00:03:36,040 --> 00:03:39,220
piece that was missing in the linear

98
00:03:37,480 --> 00:03:41,290
program formulation dredges mentioned

99
00:03:39,220 --> 00:03:43,269
previously was the constraint of equal

100
00:03:41,290 --> 00:03:45,519
splitting and this is precisely the same

101
00:03:43,269 --> 00:03:47,500
constraint which trip the force sensor

102
00:03:45,519 --> 00:03:50,440
of heuristic and results in poor

103
00:03:47,500 --> 00:03:52,209
performance sometimes what the wang wang

104
00:03:50,440 --> 00:03:54,910
and zhang linear program formulation

105
00:03:52,209 --> 00:03:57,340
assumes is that you may be forwarding

106
00:03:54,910 --> 00:03:59,019
traffic on shortest paths but<font color="#CCCCCC"> you are</font>

107
00:03:57,340 --> 00:04:01,209
not constrained to<font color="#CCCCCC"> splitting traffic</font>

108
00:03:59,019 --> 00:04:02,709
equally overall the shortest paths you

109
00:04:01,209 --> 00:04:05,109
can split traffic in any arbitrary

110
00:04:02,709 --> 00:04:06,819
fashion so this clearly a violation of

111
00:04:05,109 --> 00:04:09,099
the forwarding paradigm that is right

112
00:04:06,819 --> 00:04:11,440
now there in verse 3 of a nice is a need

113
00:04:09,099 --> 00:04:13,599
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be resolved so one of the solutions</font>

114
00:04:11,440 --> 00:04:15,099
<font color="#E5E5E5">could be lets do group force let's go</font>

115
00:04:13,599 --> 00:04:16,750
<font color="#E5E5E5">into all these</font><font color="#CCCCCC"> outers and change the</font>

116
00:04:15,099 --> 00:04:18,700
hash functions and change the<font color="#CCCCCC"> greatest</font>

117
00:04:16,750 --> 00:04:20,560
<font color="#E5E5E5">split traffic and allow for arbitrary</font>

118
00:04:18,700 --> 00:04:22,330
<font color="#CCCCCC">allocations this is obviously not</font>

119
00:04:20,560 --> 00:04:23,560
feasible because one of the reasons<font color="#E5E5E5"> is</font>

120
00:04:22,330 --> 00:04:25,210
you will have to go and play with<font color="#E5E5E5"> the</font>

121
00:04:23,560 --> 00:04:27,920
<font color="#E5E5E5">data path</font>

122
00:04:25,210 --> 00:04:30,320
so what we have<font color="#CCCCCC"> done is we</font><font color="#E5E5E5"> propose an</font>

123
00:04:27,920 --> 00:04:32,360
alternate method which is far simpler to

124
00:04:30,320 --> 00:04:34,370
implement and with hinges on the fact

125
00:04:32,360 --> 00:04:36,020
that current they allowed us have

126
00:04:34,370 --> 00:04:39,590
hundreds and thousands of routing table

127
00:04:36,020 --> 00:04:43,130
prefixes idea is very simple the key

128
00:04:39,590 --> 00:04:45,140
idea is that what standard walls<font color="#CCCCCC"> PF does</font>

129
00:04:43,130 --> 00:04:48,050
is that for a given destination if there

130
00:04:45,140 --> 00:04:50,030
are a number of equal cost next hops it

131
00:04:48,050 --> 00:04:52,550
assigns all these equal cost<font color="#CCCCCC"> mixed</font>

132
00:04:50,030 --> 00:04:55,099
<font color="#CCCCCC">halves to every</font><font color="#E5E5E5"> routing prefix going to</font>

133
00:04:52,550 --> 00:04:57,080
that destination so what we do is that

134
00:04:55,100 --> 00:05:00,020
<font color="#E5E5E5">instead of assigning all the equal cost</font>

135
00:04:57,080 --> 00:05:01,909
<font color="#E5E5E5">next house design only a small subset of</font>

136
00:05:00,020 --> 00:05:04,669
the quickest next<font color="#E5E5E5"> stops Lisa routing</font>

137
00:05:01,910 --> 00:05:07,310
prefix so traffic<font color="#E5E5E5"> still get split</font>

138
00:05:04,670 --> 00:05:09,170
equally or the sequel<font color="#CCCCCC"> cos</font><font color="#E5E5E5"> next hops but</font>

139
00:05:07,310 --> 00:05:11,270
by suitably changing the sub set for

140
00:05:09,170 --> 00:05:13,310
each routing prefix we now<font color="#E5E5E5"> have better</font>

141
00:05:11,270 --> 00:05:15,560
handle and trying to control how the

142
00:05:13,310 --> 00:05:18,110
load is balanced across these multiple

143
00:05:15,560 --> 00:05:19,760
links so the obvious advantages that we

144
00:05:18,110 --> 00:05:21,770
don't<font color="#CCCCCC"> have to think</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the data path and</font>

145
00:05:19,760 --> 00:05:23,930
algorithm antigens that if you have a

146
00:05:21,770 --> 00:05:24,919
lot of routing prefixes it is<font color="#E5E5E5"> possible</font>

147
00:05:23,930 --> 00:05:29,150
that you might be<font color="#CCCCCC"> getting better</font>

148
00:05:24,919 --> 00:05:30,200
flexibility in load balancing so I'll

149
00:05:29,150 --> 00:05:32,210
just illustrate what I've said

150
00:05:30,200 --> 00:05:34,280
<font color="#E5E5E5">previously it turns out that this</font>

151
00:05:32,210 --> 00:05:36,620
problem is np-hard in that trying to

152
00:05:34,280 --> 00:05:38,960
<font color="#E5E5E5">decide which subset of next hops</font><font color="#CCCCCC"> on the</font>

153
00:05:36,620 --> 00:05:41,690
<font color="#E5E5E5">split classic equally it's not an easy</font>

154
00:05:38,960 --> 00:05:43,310
problem however<font color="#CCCCCC"> we have been able</font><font color="#E5E5E5"> to</font>

155
00:05:41,690 --> 00:05:44,990
<font color="#E5E5E5">come up with three heuristics which are</font>

156
00:05:43,310 --> 00:05:46,400
pretty efficient and actually for one of

157
00:05:44,990 --> 00:05:48,290
them we have a logarithmic performance

158
00:05:46,400 --> 00:05:50,599
bound as<font color="#E5E5E5"> I'll show you shortly they</font>

159
00:05:48,290 --> 00:05:52,160
<font color="#E5E5E5">perform really well the reason the</font>

160
00:05:50,600 --> 00:05:54,350
really<font color="#E5E5E5"> perform well is because we</font>

161
00:05:52,160 --> 00:05:56,450
mentioned nowadays out as a huge number

162
00:05:54,350 --> 00:05:58,550
of prefixes the larger the<font color="#CCCCCC"> number of</font>

163
00:05:56,450 --> 00:06:00,080
prefixes by playing around with the next

164
00:05:58,550 --> 00:06:01,970
tops of these prefixes you have a better

165
00:06:00,080 --> 00:06:04,940
handle the flexibility in load balancing

166
00:06:01,970 --> 00:06:06,590
and finally the most important change

167
00:06:04,940 --> 00:06:08,270
according to us at least is that<font color="#E5E5E5"> this</font>

168
00:06:06,590 --> 00:06:10,669
doesn't require any major changes in<font color="#E5E5E5"> the</font>

169
00:06:08,270 --> 00:06:12,560
protocol itself all you go as we go into

170
00:06:10,669 --> 00:06:14,359
the router look at the forwarding base

171
00:06:12,560 --> 00:06:17,540
of each prefix and remove<font color="#CCCCCC"> some of the</font>

172
00:06:14,360 --> 00:06:19,010
next house in a sense<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> you're</font>

173
00:06:17,540 --> 00:06:20,870
decreasing<font color="#E5E5E5"> the size of the forwarding</font>

174
00:06:19,010 --> 00:06:24,110
table and I'll just show you an example

175
00:06:20,870 --> 00:06:26,479
see how well it<font color="#E5E5E5"> works so this is</font><font color="#CCCCCC"> just a</font>

176
00:06:24,110 --> 00:06:27,919
small sample topology of this part<font color="#E5E5E5"> of</font>

177
00:06:26,479 --> 00:06:31,340
the spread lies with backbone or which

178
00:06:27,919 --> 00:06:33,530
<font color="#CCCCCC">runs some of our experiments and this is</font>

179
00:06:31,340 --> 00:06:35,119
just one<font color="#CCCCCC"> of the results</font><font color="#E5E5E5"> on the x-axis</font>

180
00:06:33,530 --> 00:06:37,260
you<font color="#E5E5E5"> have the traffic entering the</font>

181
00:06:35,120 --> 00:06:38,820
network and the y-axis we have

182
00:06:37,260 --> 00:06:41,280
just an arbitrary cost function that we

183
00:06:38,820 --> 00:06:43,740
picked up so essentially just see two

184
00:06:41,280 --> 00:06:46,770
lines one is<font color="#E5E5E5"> this dotted line which is</font><font color="#CCCCCC"> a</font>

185
00:06:43,740 --> 00:06:49,110
force in therapy<font color="#CCCCCC"> aroostook and the other</font>

186
00:06:46,770 --> 00:06:51,289
line actually<font color="#E5E5E5"> consists of four lines are</font>

187
00:06:49,110 --> 00:06:53,340
three heuristics and the optimal routing

188
00:06:51,290 --> 00:06:54,810
<font color="#E5E5E5">essentially are three heuristics are</font>

189
00:06:53,340 --> 00:06:57,239
indistinguishable from the optimal

190
00:06:54,810 --> 00:07:00,330
routing the next slide actually better

191
00:06:57,240 --> 00:07:03,000
clarify this again on the x-axis you

192
00:07:00,330 --> 00:07:04,830
have the total traffic on the y-axis you

193
00:07:03,000 --> 00:07:06,990
have the percentage deviation of our

194
00:07:04,830 --> 00:07:10,050
heuristics from the optimum you can see

195
00:07:06,990 --> 00:07:11,670
<font color="#CCCCCC">all over than 0.5% we have done a number</font>

196
00:07:10,050 --> 00:07:15,770
of<font color="#E5E5E5"> other experiments and all these</font>

197
00:07:11,670 --> 00:07:18,240
experiments we<font color="#CCCCCC"> obtained similar results</font>

198
00:07:15,770 --> 00:07:20,190
<font color="#E5E5E5">okay so we have come up with heuristics</font>

199
00:07:18,240 --> 00:07:21,960
which seemed to<font color="#E5E5E5"> work reasonably well so</font>

200
00:07:20,190 --> 00:07:25,260
the<font color="#E5E5E5"> next task was to see how easy is it</font>

201
00:07:21,960 --> 00:07:27,150
to implemented to configure the set of

202
00:07:25,260 --> 00:07:29,190
next hops for<font color="#CCCCCC"> east routing prefix is</font>

203
00:07:27,150 --> 00:07:31,289
clearly not feasible so what we thought

204
00:07:29,190 --> 00:07:33,240
to do was to use an idea that has been

205
00:07:31,290 --> 00:07:36,840
often mentioned as in fact<font color="#E5E5E5"> mentioning</font>

206
00:07:33,240 --> 00:07:39,210
<font color="#E5E5E5">the previous doctor that a large amount</font>

207
00:07:36,840 --> 00:07:42,030
of the traffic entering the network is

208
00:07:39,210 --> 00:07:45,289
focused on a small set of prefixes so

209
00:07:42,030 --> 00:07:47,640
our goal is that<font color="#CCCCCC"> we take care of</font>

210
00:07:45,290 --> 00:07:49,710
configuring the set of neck starts<font color="#E5E5E5"> only</font>

211
00:07:47,640 --> 00:07:52,800
for these set of dominant prefixes and

212
00:07:49,710 --> 00:07:54,030
let ospf a nice eyes just fall back<font color="#CCCCCC"> to</font>

213
00:07:52,800 --> 00:07:56,220
default behavior for the remaining

214
00:07:54,030 --> 00:07:59,340
prefixes and then the question arises

215
00:07:56,220 --> 00:08:01,530
how much overhead is in ready home by

216
00:07:59,340 --> 00:08:03,659
how much is the word reduced and is

217
00:08:01,530 --> 00:08:05,909
there<font color="#CCCCCC"> a fair</font><font color="#E5E5E5"> trade-off with the</font>

218
00:08:03,660 --> 00:08:08,010
performance begin again answer we got

219
00:08:05,910 --> 00:08:11,850
was in the affirmative and<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> show you</font>

220
00:08:08,010 --> 00:08:13,860
<font color="#E5E5E5">this</font><font color="#CCCCCC"> mon-sun so first column</font><font color="#E5E5E5"> of the</font>

221
00:08:11,850 --> 00:08:15,900
table represents the number of routes

222
00:08:13,860 --> 00:08:19,260
for which we carefully configure the set

223
00:08:15,900 --> 00:08:21,479
of next hops for all the other outs ospf

224
00:08:19,260 --> 00:08:24,420
just by default computer the set of next

225
00:08:21,480 --> 00:08:26,310
<font color="#CCCCCC">hops and weaving touch those the second</font>

226
00:08:24,420 --> 00:08:28,740
column shows the percentage of routes

227
00:08:26,310 --> 00:08:31,410
that these dominant set of routes

228
00:08:28,740 --> 00:08:33,599
actually constitute and the third column

229
00:08:31,410 --> 00:08:35,910
<font color="#E5E5E5">shows how much traffic was accounted for</font>

230
00:08:33,599 --> 00:08:38,430
by these dominant set of routes you can

231
00:08:35,909 --> 00:08:40,919
see at<font color="#E5E5E5"> the second last row that which is</font>

232
00:08:38,429 --> 00:08:42,150
seven<font color="#E5E5E5"> percent of the routes be able to</font>

233
00:08:40,919 --> 00:08:44,189
count for seventy-five percent of

234
00:08:42,150 --> 00:08:46,500
traffic and in the<font color="#E5E5E5"> last row with around</font>

235
00:08:44,190 --> 00:08:47,820
14 to 15 persons are out be able to

236
00:08:46,500 --> 00:08:48,970
count<font color="#E5E5E5"> up to ninety percent of the</font>

237
00:08:47,820 --> 00:08:51,950
traffic

238
00:08:48,970 --> 00:08:53,930
so that is<font color="#CCCCCC"> also reflected in</font><font color="#E5E5E5"> this second</font>

239
00:08:51,950 --> 00:08:55,730
graph again it's a similar graph on the

240
00:08:53,930 --> 00:08:58,219
x<font color="#CCCCCC"> axis ii of the traffic on the</font><font color="#E5E5E5"> y axis</font>

241
00:08:55,730 --> 00:08:59,780
you have an arbitrable engine so what<font color="#E5E5E5"> is</font>

242
00:08:58,220 --> 00:09:02,390
of interest are these<font color="#E5E5E5"> last three lines</font>

243
00:08:59,780 --> 00:09:05,000
so this is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> optimal respect line and</font>

244
00:09:02,390 --> 00:09:06,620
the<font color="#E5E5E5"> two-butted lines are with</font><font color="#CCCCCC"> sara five</font>

245
00:09:05,000 --> 00:09:09,020
percent of the<font color="#CCCCCC"> traffic and ninety</font>

246
00:09:06,620 --> 00:09:10,970
percent of the traffic so with just<font color="#CCCCCC"> a</font>

247
00:09:09,020 --> 00:09:12,860
few tens of the sense of configuration

248
00:09:10,970 --> 00:09:15,200
overhead we are able<font color="#E5E5E5"> to come reasonably</font>

249
00:09:12,860 --> 00:09:17,300
close to<font color="#E5E5E5"> the optimal and again this is</font>

250
00:09:15,200 --> 00:09:20,960
this is<font color="#E5E5E5"> a trend which you have seen a</font>

251
00:09:17,300 --> 00:09:23,599
lot<font color="#CCCCCC"> of experiments</font><font color="#E5E5E5"> okay so i'll</font><font color="#CCCCCC"> just</font>

252
00:09:20,960 --> 00:09:25,130
quickly conclude we are being able to

253
00:09:23,600 --> 00:09:27,170
come up with a set of reasonably simple

254
00:09:25,130 --> 00:09:29,180
heuristics which in our protection

255
00:09:27,170 --> 00:09:31,790
dramatically improves the<font color="#E5E5E5"> load balancing</font>

256
00:09:29,180 --> 00:09:33,109
ability of both ways be of a nice<font color="#E5E5E5"> is the</font>

257
00:09:31,790 --> 00:09:34,730
main advantages is that it doesn't

258
00:09:33,110 --> 00:09:36,710
<font color="#E5E5E5">require any major tweaking you don't</font>

259
00:09:34,730 --> 00:09:38,210
need<font color="#E5E5E5"> to change the data path anyway you</font>

260
00:09:36,710 --> 00:09:40,820
just acquire a small change the control

261
00:09:38,210 --> 00:09:43,460
path our results<font color="#CCCCCC"> show that these</font>

262
00:09:40,820 --> 00:09:45,920
heuristics perform really well but there

263
00:09:43,460 --> 00:09:48,590
are<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> caveats one of them has to do</font>

264
00:09:45,920 --> 00:09:50,719
with the heuristics in that implementing

265
00:09:48,590 --> 00:09:52,430
them requires<font color="#CCCCCC"> traffic sign radically</font>

266
00:09:50,720 --> 00:09:55,550
information cracking information to

267
00:09:52,430 --> 00:09:57,680
carnality the prefixes and<font color="#CCCCCC"> finally there</font>

268
00:09:55,550 --> 00:09:59,719
are<font color="#E5E5E5"> two more serious caveats and I think</font>

269
00:09:57,680 --> 00:10:03,250
both who mentioned the previous talk one

270
00:09:59,720 --> 00:10:05,780
of them is how will the ospf a nice is

271
00:10:03,250 --> 00:10:07,370
responding failures but<font color="#E5E5E5"> in other words</font>

272
00:10:05,780 --> 00:10:09,079
is<font color="#CCCCCC"> it possible to come up with</font><font color="#E5E5E5"> a robust</font>

273
00:10:07,370 --> 00:10:11,990
set of link weights it should perform

274
00:10:09,080 --> 00:10:13,760
equally well under all scenarios or if

275
00:10:11,990 --> 00:10:15,920
that's not possible then to just change

276
00:10:13,760 --> 00:10:18,230
a few fuelling weights and still get

277
00:10:15,920 --> 00:10:19,729
really good performance so initial work

278
00:10:18,230 --> 00:10:21,890
has again been on the force and set up

279
00:10:19,730 --> 00:10:24,010
towards this end but the results are

280
00:10:21,890 --> 00:10:26,030
basically being that you need a

281
00:10:24,010 --> 00:10:27,730
computationally expensive algorithm to

282
00:10:26,030 --> 00:10:29,630
achieve this so we are trying<font color="#E5E5E5"> to look</font><font color="#CCCCCC"> at</font>

283
00:10:27,730 --> 00:10:31,940
algorithms which are faster<font color="#CCCCCC"> and more</font>

284
00:10:29,630 --> 00:10:34,070
general the second has to<font color="#CCCCCC"> do with</font>

285
00:10:31,940 --> 00:10:35,840
traffic fluctuations as traffic

286
00:10:34,070 --> 00:10:37,760
fluctuates the set of dominating

287
00:10:35,840 --> 00:10:40,010
prefixes may change this might require

288
00:10:37,760 --> 00:10:41,720
to require rerouting on our part<font color="#E5E5E5"> so</font>

289
00:10:40,010 --> 00:10:43,280
again the question arises how much

290
00:10:41,720 --> 00:10:45,380
consideration overhead is involved and

291
00:10:43,280 --> 00:10:47,120
rerouting and is the performance<font color="#CCCCCC"> that</font>

292
00:10:45,380 --> 00:10:48,410
<font color="#E5E5E5">you get worth it so these are basically</font>

293
00:10:47,120 --> 00:10:51,370
<font color="#E5E5E5">the two questions that we are trying</font><font color="#CCCCCC"> to</font>

294
00:10:48,410 --> 00:10:51,370
<font color="#CCCCCC">look at thank you</font>

295
00:10:51,660 --> 00:10:58,540
any questions I had one for you how many

296
00:10:56,110 --> 00:11:01,209
various policies did you actually run

297
00:10:58,540 --> 00:11:03,610
you<font color="#E5E5E5"> are in your scenario right now</font><font color="#CCCCCC"> we</font>

298
00:11:01,209 --> 00:11:05,260
have around eight to ten topologies one

299
00:11:03,610 --> 00:11:06,880
of them<font color="#E5E5E5"> is based on the actual sprint</font>

300
00:11:05,260 --> 00:11:12,189
quality and the others have been

301
00:11:06,880 --> 00:11:15,820
artificially generated are these

302
00:11:12,190 --> 00:11:19,959
typologies complex or are they pretty

303
00:11:15,820 --> 00:11:22,930
much adapted to normal commercial policy

304
00:11:19,959 --> 00:11:24,640
arm we actually<font color="#CCCCCC"> use the Georgia Tech</font>

305
00:11:22,930 --> 00:11:27,130
topology generator and the<font color="#E5E5E5"> bright</font>

306
00:11:24,640 --> 00:11:28,990
apology generator so these seem to be

307
00:11:27,130 --> 00:11:31,630
reasonably will accept it for generating

308
00:11:28,990 --> 00:11:33,550
topologies i would say that<font color="#E5E5E5"> you're not</font>

309
00:11:31,630 --> 00:11:38,829
too worried about extreme topologies in

310
00:11:33,550 --> 00:11:41,890
obvious why did you rule out the option

311
00:11:38,829 --> 00:11:45,219
of just simply taking the best<font color="#E5E5E5"> chance</font>

312
00:11:41,890 --> 00:11:49,630
that the<font color="#E5E5E5"> idps calculated and defining</font>

313
00:11:45,220 --> 00:11:51,940
difference<font color="#E5E5E5"> folding</font><font color="#CCCCCC"> waste to them it</font>

314
00:11:49,630 --> 00:11:54,189
seems<font color="#E5E5E5"> to me that implementation wise and</font>

315
00:11:51,940 --> 00:11:56,760
configuration wise it would have been

316
00:11:54,190 --> 00:12:00,430
the simple the<font color="#E5E5E5"> simplest approach and</font>

317
00:11:56,760 --> 00:12:03,490
unless I'm mistaken that<font color="#E5E5E5"> is probably</font>

318
00:12:00,430 --> 00:12:06,640
some it is<font color="#E5E5E5"> functionality already present</font>

319
00:12:03,490 --> 00:12:09,250
in most<font color="#E5E5E5"> rager major vendor</font>

320
00:12:06,640 --> 00:12:11,500
implementation I'm sorry I didn't quite

321
00:12:09,250 --> 00:12:14,399
get a<font color="#E5E5E5"> question so you have multiple</font>

322
00:12:11,500 --> 00:12:17,680
paths mm-hmm instead of trying<font color="#CCCCCC"> to</font>

323
00:12:14,399 --> 00:12:20,170
calculate for which prefixes to remove

324
00:12:17,680 --> 00:12:23,290
part of the<font color="#CCCCCC"> plant</font><font color="#E5E5E5"> why don't you just say</font>

325
00:12:20,170 --> 00:12:25,510
well these multi pants then can eighty

326
00:12:23,290 --> 00:12:29,319
<font color="#E5E5E5">percent always for all prefixes that</font>

327
00:12:25,510 --> 00:12:32,980
resolve over design GP round why did you

328
00:12:29,320 --> 00:12:35,860
rule out that<font color="#E5E5E5"> that essentially you're</font>

329
00:12:32,980 --> 00:12:38,529
saying that you should I mean

330
00:12:35,860 --> 00:12:41,290
essentially saying that we should try to

331
00:12:38,529 --> 00:12:43,120
<font color="#E5E5E5">spread the club prefixes sassette ten to</font>

332
00:12:41,290 --> 00:12:44,560
ten to twenty percent of them<font color="#E5E5E5"> are and</font>

333
00:12:43,120 --> 00:12:47,019
one link and eighty percent of the other

334
00:12:44,560 --> 00:12:48,729
link is<font color="#E5E5E5"> that what you saying exactly</font>

335
00:12:47,019 --> 00:12:50,920
that's that's what you're<font color="#E5E5E5"> trying to</font>

336
00:12:48,730 --> 00:12:53,199
achieve that's essentially what we do in

337
00:12:50,920 --> 00:12:55,120
that we look at the prefixes and the

338
00:12:53,199 --> 00:12:57,069
traffic arriving in them and then we

339
00:12:55,120 --> 00:13:00,459
decide over which next hops to place

340
00:12:57,070 --> 00:13:02,220
each prefix so what I was<font color="#E5E5E5"> saying was</font>

341
00:13:00,459 --> 00:13:04,750
just a more general case

342
00:13:02,220 --> 00:13:06,190
and that yeah for I could<font color="#CCCCCC"> allocate and</font>

343
00:13:04,750 --> 00:13:08,320
say that some of these prefixes<font color="#CCCCCC"> go only</font>

344
00:13:06,190 --> 00:13:10,030
on business talk some of them were want

345
00:13:08,320 --> 00:13:13,540
you on this next top and some of them

346
00:13:10,030 --> 00:13:15,699
made one or both<font color="#E5E5E5"> next hops I instantly</font>

347
00:13:13,540 --> 00:13:18,010
use that to get the percentage of

348
00:13:15,700 --> 00:13:20,680
traffic division but it seems<font color="#CCCCCC"> to</font><font color="#E5E5E5"> me that</font>

349
00:13:18,010 --> 00:13:23,110
you're<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be creating a very</font>

350
00:13:20,680 --> 00:13:25,000
complex method while if you just have

351
00:13:23,110 --> 00:13:26,920
dis configured the next month to have

352
00:13:25,000 --> 00:13:30,100
ways I mean I<font color="#CCCCCC"> don't know if</font><font color="#E5E5E5"> you're</font>

353
00:13:26,920 --> 00:13:33,370
familiar with<font color="#E5E5E5"> Cisco's eigrp for instance</font>

354
00:13:30,100 --> 00:13:36,730
it allows<font color="#CCCCCC"> us to set weight on your</font>

355
00:13:33,370 --> 00:13:38,290
folding next<font color="#E5E5E5"> comp</font><font color="#CCCCCC"> I'm not familiar with</font>

356
00:13:36,730 --> 00:13:44,130
that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think what that were definitely</font>

357
00:13:38,290 --> 00:13:48,880
no<font color="#E5E5E5"> knives was uh was there any</font>

358
00:13:44,130 --> 00:13:50,770
degradation results for like a large gap

359
00:13:48,880 --> 00:13:53,140
<font color="#CCCCCC">in the dimension to the network others</font>

360
00:13:50,770 --> 00:13:55,360
apologies and that you had like OC

361
00:13:53,140 --> 00:13:57,550
threes and maybe OC 180 tues in the same

362
00:13:55,360 --> 00:14:00,190
region or there was something from that

363
00:13:57,550 --> 00:14:03,699
effect no we didn't specifically<font color="#E5E5E5"> look at</font>

364
00:14:00,190 --> 00:14:05,890
43 so suppose we randomly simulated link

365
00:14:03,700 --> 00:14:08,320
capacities over a wide range and they

366
00:14:05,890 --> 00:14:09,850
also randomly simulated intensities<font color="#CCCCCC"> or</font>

367
00:14:08,320 --> 00:14:11,530
<font color="#CCCCCC">three fixtures</font><font color="#E5E5E5"> over a wide range but we</font>

368
00:14:09,850 --> 00:14:13,420
didn't find<font color="#CCCCCC"> any decoration ok so the</font>

369
00:14:11,530 --> 00:14:16,030
dimensions of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> network or we're not</font>

370
00:14:13,420 --> 00:14:17,620
considered I mean the dimensions work

371
00:14:16,030 --> 00:14:20,170
that we did look at up to 100 node

372
00:14:17,620 --> 00:14:21,400
networks<font color="#CCCCCC"> okay and we haven't looked</font>

373
00:14:20,170 --> 00:14:25,150
rather than that yet but we haven't

374
00:14:21,400 --> 00:14:28,240
found any degradation yeah just a

375
00:14:25,150 --> 00:14:30,910
comment actually<font color="#E5E5E5"> just 11 former going</font>

376
00:14:28,240 --> 00:14:32,440
<font color="#E5E5E5">digital last question on this topic just</font>

377
00:14:30,910 --> 00:14:34,689
a quick comment on the response to

378
00:14:32,440 --> 00:14:37,360
traffic fluctuations actually work done

379
00:14:34,690 --> 00:14:38,860
at sprint labs itself which<font color="#CCCCCC"> is which is</font>

380
00:14:37,360 --> 00:14:41,260
<font color="#E5E5E5">somewhat encouraging in this direction</font>

381
00:14:38,860 --> 00:14:42,790
because that work demonstrates that the

382
00:14:41,260 --> 00:14:44,770
elephant and mice phenomenon actually

383
00:14:42,790 --> 00:14:46,240
follows a diurnal pattern so the

384
00:14:44,770 --> 00:14:48,220
elephant's<font color="#E5E5E5"> tend to remain elephants and</font>

385
00:14:46,240 --> 00:14:50,470
the my stint<font color="#CCCCCC"> remained mice which would</font>

386
00:14:48,220 --> 00:14:51,670
actually help you no answer at least

387
00:14:50,470 --> 00:14:53,560
<font color="#CCCCCC">partially answer the traffic</font>

388
00:14:51,670 --> 00:14:55,060
fluctuations issue for you yeah that's

389
00:14:53,560 --> 00:14:57,310
why true i think the previous stock did

390
00:14:55,060 --> 00:14:59,050
mention this one and indeed<font color="#CCCCCC"> there's work</font>

391
00:14:57,310 --> 00:15:00,219
done at sprint labs which<font color="#E5E5E5"> i'm sure i</font>

392
00:14:59,050 --> 00:15:02,439
<font color="#E5E5E5">don't know if you're aware of vice</font>

393
00:15:00,220 --> 00:15:03,760
apotheek and company that addresses at

394
00:15:02,440 --> 00:15:06,740
least partially<font color="#CCCCCC"> this question so am i</font>

395
00:15:03,760 --> 00:15:09,850
going to look at that<font color="#CCCCCC"> okay</font>

396
00:15:06,740 --> 00:15:09,850
thank you very<font color="#CCCCCC"> much</font>

