1
00:00:09,750 --> 00:00:14,950
our next<font color="#CCCCCC"> presentation is Tivat</font><font color="#E5E5E5"> Tim Evans</font>

2
00:00:13,389 --> 00:00:19,289
with Cisco

3
00:00:14,950 --> 00:00:23,640
on monitoring<font color="#CCCCCC"> bgp using open source open</font>

4
00:00:19,289 --> 00:00:23,640
<font color="#E5E5E5">BMP</font><font color="#CCCCCC"> and Apache Kafka</font>

5
00:00:40,860 --> 00:00:45,510
hi great thanks<font color="#CCCCCC"> so yeah I'm gonna talk</font>

6
00:00:43,740 --> 00:00:47,070
<font color="#CCCCCC">about</font><font color="#E5E5E5"> one or</font><font color="#CCCCCC"> trained</font><font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> route</font>

7
00:00:45,510 --> 00:00:51,750
<font color="#E5E5E5">League season open V and P and</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> patch</font>

8
00:00:47,070 --> 00:00:54,150
the<font color="#CCCCCC"> kafka so the first challenge is</font><font color="#E5E5E5"> to</font>

9
00:00:51,750 --> 00:00:56,310
<font color="#E5E5E5">collect the BGP data and traditionally</font>

10
00:00:54,150 --> 00:01:00,150
to collect the BGP data we could use v2

11
00:00:56,310 --> 00:01:02,910
<font color="#E5E5E5">I access</font><font color="#CCCCCC"> the problem with</font><font color="#E5E5E5"> vty is that it</font>

12
00:01:00,150 --> 00:01:04,769
is not<font color="#E5E5E5"> real-time it's called base you</font>

13
00:01:02,910 --> 00:01:10,100
have<font color="#E5E5E5"> to make requests</font><font color="#CCCCCC"> to the router</font><font color="#E5E5E5"> and</font>

14
00:01:04,769 --> 00:01:12,390
issue commands<font color="#E5E5E5"> in order to get the data</font>

15
00:01:10,100 --> 00:01:13,740
<font color="#E5E5E5">typically the requests that you do to</font>

16
00:01:12,390 --> 00:01:16,740
the router with the show commands<font color="#E5E5E5"> are</font>

17
00:01:13,740 --> 00:01:18,179
large output responses<font color="#E5E5E5"> so the results</font>

18
00:01:16,740 --> 00:01:20,940
can be<font color="#E5E5E5"> in a hundred plus Meg's of data</font>

19
00:01:18,180 --> 00:01:23,100
which can impact the routers management

20
00:01:20,940 --> 00:01:25,229
plane so it's not typically desirable

21
00:01:23,100 --> 00:01:26,970
it can also be slow<font color="#CCCCCC"> because you have to</font>

22
00:01:25,229 --> 00:01:29,369
make requests to<font color="#E5E5E5"> the router but in</font>

23
00:01:26,970 --> 00:01:30,929
addition<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that the router processes</font><font color="#E5E5E5"> a</font>

24
00:01:29,369 --> 00:01:33,180
<font color="#E5E5E5">request in a synchronous fashion so it</font>

25
00:01:30,930 --> 00:01:36,570
doesn't do it in<font color="#E5E5E5"> a synchronous so you</font>

26
00:01:33,180 --> 00:01:37,770
have to do a request<font color="#E5E5E5"> make the way for</font>

27
00:01:36,570 --> 00:01:39,750
the response and<font color="#E5E5E5"> then issue another</font>

28
00:01:37,770 --> 00:01:42,750
<font color="#E5E5E5">request wait for the response</font><font color="#CCCCCC"> to which</font>

29
00:01:39,750 --> 00:01:46,950
can cause a backlog<font color="#E5E5E5"> if you're planning</font>

30
00:01:42,750 --> 00:01:50,100
to<font color="#E5E5E5"> access all your routers it's becoming</font>

31
00:01:46,950 --> 00:01:51,810
slow<font color="#E5E5E5"> because of the access requirements</font>

32
00:01:50,100 --> 00:01:54,899
for making<font color="#CCCCCC"> the connection it typically</font>

33
00:01:51,810 --> 00:01:57,990
also adds<font color="#E5E5E5"> to the slow connection time as</font>

34
00:01:54,900 --> 00:02:00,270
well as requires the management system

35
00:01:57,990 --> 00:02:02,490
that<font color="#CCCCCC"> wants to collect</font><font color="#E5E5E5"> the data</font><font color="#CCCCCC"> to</font>

36
00:02:00,270 --> 00:02:04,140
maintain credentials as well<font color="#CCCCCC"> as the</font>

37
00:02:02,490 --> 00:02:06,798
<font color="#CCCCCC">inventory information</font><font color="#E5E5E5"> for the devices</font>

38
00:02:04,140 --> 00:02:09,509
<font color="#E5E5E5">that's going to connect to so it becomes</font>

39
00:02:06,799 --> 00:02:11,940
harder to<font color="#CCCCCC"> maintain the inventory</font>

40
00:02:09,509 --> 00:02:13,620
database<font color="#CCCCCC"> in order to even</font><font color="#E5E5E5"> collect the</font>

41
00:02:11,940 --> 00:02:14,910
data<font color="#E5E5E5"> to begin with and the</font>

42
00:02:13,620 --> 00:02:18,630
<font color="#E5E5E5">maintainability is pretty complex</font>

43
00:02:14,910 --> 00:02:20,880
because even with the<font color="#CCCCCC"> BGP</font><font color="#E5E5E5"> or even with</font>

44
00:02:18,630 --> 00:02:23,430
the output from the data<font color="#E5E5E5"> it can vary by</font>

45
00:02:20,880 --> 00:02:25,290
platform<font color="#CCCCCC"> inversion</font><font color="#E5E5E5"> and when it varies</font>

46
00:02:23,430 --> 00:02:28,049
<font color="#E5E5E5">even</font><font color="#CCCCCC"> if you had yang or you had other</font>

47
00:02:25,290 --> 00:02:29,970
data representations of the of the

48
00:02:28,049 --> 00:02:33,750
information it still is going<font color="#E5E5E5"> to be</font>

49
00:02:29,970 --> 00:02:35,880
revision based so you still find

50
00:02:33,750 --> 00:02:38,400
<font color="#E5E5E5">yourself having to maintain</font><font color="#CCCCCC"> some type of</font>

51
00:02:35,880 --> 00:02:41,690
cash for<font color="#E5E5E5"> this router this platform has</font>

52
00:02:38,400 --> 00:02:43,980
this capability<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you have to end up</font>

53
00:02:41,690 --> 00:02:46,769
maintaining<font color="#CCCCCC"> that and</font><font color="#E5E5E5"> upped it into every</font>

54
00:02:43,980 --> 00:02:48,899
once in a<font color="#CCCCCC"> while so another method</font><font color="#E5E5E5"> to</font>

55
00:02:46,769 --> 00:02:51,569
collect<font color="#E5E5E5"> a BGP data is to use packet</font>

56
00:02:48,900 --> 00:02:53,069
capture and if you<font color="#CCCCCC"> packet capture you</font>

57
00:02:51,569 --> 00:02:53,480
will get the pre<font color="#E5E5E5"> rib information you'll</font>

58
00:02:53,069 --> 00:02:55,010
get all

59
00:02:53,480 --> 00:02:57,319
the information<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> BGP peers</font><font color="#CCCCCC"> and</font>

60
00:02:55,010 --> 00:03:00,079
you'll get the BGP updates as they are

61
00:02:57,319 --> 00:03:03,679
but it doesn't<font color="#CCCCCC"> really work</font><font color="#E5E5E5"> over</font>

62
00:03:00,080 --> 00:03:05,269
<font color="#E5E5E5">encrypted transports and it doesn't work</font>

63
00:03:03,680 --> 00:03:09,500
unless<font color="#E5E5E5"> you have a specific architecture</font>

64
00:03:05,269 --> 00:03:12,500
to support<font color="#CCCCCC"> the packet capturing</font><font color="#E5E5E5"> so if</font>

65
00:03:09,500 --> 00:03:14,720
it's<font color="#CCCCCC"> multi hop or</font><font color="#E5E5E5"> ibgp and the session</font>

66
00:03:12,500 --> 00:03:18,379
traverses multiple interfaces<font color="#E5E5E5"> the</font>

67
00:03:14,720 --> 00:03:20,150
collector<font color="#E5E5E5"> has to reassemble those those</font>

68
00:03:18,379 --> 00:03:25,069
potentially multiple packet capturing

69
00:03:20,150 --> 00:03:26,209
<font color="#E5E5E5">feeds in order to determine if</font><font color="#CCCCCC"> it</font>

70
00:03:25,069 --> 00:03:27,920
determine where the<font color="#CCCCCC"> packets that you</font>

71
00:03:26,209 --> 00:03:29,150
know the<font color="#E5E5E5"> sequence of the data</font><font color="#CCCCCC"> and</font>

72
00:03:27,920 --> 00:03:31,309
potentially it could have to do

73
00:03:29,150 --> 00:03:33,260
reassembly as well which makes the

74
00:03:31,310 --> 00:03:36,290
collector more complex and harder to

75
00:03:33,260 --> 00:03:37,489
implement<font color="#E5E5E5"> even with the packet capture</font>

76
00:03:36,290 --> 00:03:39,290
the collector doesn't know what the

77
00:03:37,489 --> 00:03:41,060
router is doing with the peering so it

78
00:03:39,290 --> 00:03:43,220
doesn't have any visibility<font color="#E5E5E5"> to the</font>

79
00:03:41,060 --> 00:03:45,560
<font color="#E5E5E5">states of the peer it doesn't know what</font>

80
00:03:43,220 --> 00:03:48,019
the peer is doing as far as post policy

81
00:03:45,560 --> 00:03:50,269
<font color="#E5E5E5">and pre policy so it can only make</font>

82
00:03:48,019 --> 00:03:52,670
assumptions<font color="#CCCCCC"> and because of that the</font>

83
00:03:50,269 --> 00:03:54,799
packet capture typically requires that

84
00:03:52,670 --> 00:03:56,839
the collector has to parse the open

85
00:03:54,799 --> 00:03:59,900
messages and has to maintain<font color="#E5E5E5"> the</font>

86
00:03:56,840 --> 00:04:01,790
<font color="#E5E5E5">monitoring of the BGP keeper lives</font><font color="#CCCCCC"> which</font>

87
00:03:59,900 --> 00:04:05,120
is<font color="#CCCCCC"> just more work for the collector and</font>

88
00:04:01,790 --> 00:04:07,668
makes it kind of a burden<font color="#CCCCCC"> and it can</font>

89
00:04:05,120 --> 00:04:09,530
also<font color="#CCCCCC"> be a security</font><font color="#E5E5E5"> concern because the</font>

90
00:04:07,669 --> 00:04:11,540
fact that<font color="#E5E5E5"> your packet capturing it can</font>

91
00:04:09,530 --> 00:04:14,540
be a problem<font color="#CCCCCC"> if you're doing this in</font><font color="#E5E5E5"> a</font>

92
00:04:11,540 --> 00:04:17,478
<font color="#E5E5E5">live always on always monitoring fashion</font>

93
00:04:14,540 --> 00:04:18,500
and you might have<font color="#E5E5E5"> to audit</font><font color="#CCCCCC"> that in</font>

94
00:04:17,478 --> 00:04:19,909
order<font color="#E5E5E5"> to make sure that you're not</font>

95
00:04:18,500 --> 00:04:23,750
<font color="#CCCCCC">capturing data that you're not</font><font color="#E5E5E5"> supposed</font>

96
00:04:19,910 --> 00:04:26,030
to<font color="#E5E5E5"> be capturing to begin with so it just</font>

97
00:04:23,750 --> 00:04:28,490
<font color="#E5E5E5">makes it more difficult</font><font color="#CCCCCC"> bgp pairing is</font>

98
00:04:26,030 --> 00:04:31,219
probably the<font color="#E5E5E5"> most popular way to monitor</font>

99
00:04:28,490 --> 00:04:33,110
<font color="#E5E5E5">bgp but when you monitor via bgp peers</font>

100
00:04:31,220 --> 00:04:35,960
<font color="#E5E5E5">you are only going</font><font color="#CCCCCC"> to get the</font>

101
00:04:33,110 --> 00:04:37,039
interpreted view of the<font color="#E5E5E5"> information</font>

102
00:04:35,960 --> 00:04:39,469
which means<font color="#E5E5E5"> you're only going to get</font>

103
00:04:37,039 --> 00:04:41,060
<font color="#E5E5E5">what the router tells you and that means</font>

104
00:04:39,470 --> 00:04:42,410
the router<font color="#E5E5E5"> has to process the updates</font>

105
00:04:41,060 --> 00:04:44,840
the router<font color="#CCCCCC"> has to understand the</font>

106
00:04:42,410 --> 00:04:47,710
attributes and and it has to accept<font color="#E5E5E5"> the</font>

107
00:04:44,840 --> 00:04:50,330
updates in order to send those to<font color="#CCCCCC"> you so</font>

108
00:04:47,710 --> 00:04:53,690
<font color="#CCCCCC">even if you try</font><font color="#E5E5E5"> to do pre policy with AD</font>

109
00:04:50,330 --> 00:04:55,880
path you would still be limited<font color="#CCCCCC"> to</font><font color="#E5E5E5"> what</font>

110
00:04:53,690 --> 00:04:59,210
the router has<font color="#E5E5E5"> decided</font><font color="#CCCCCC"> that is valid so</font>

111
00:04:55,880 --> 00:05:01,010
if anything<font color="#E5E5E5"> was actually boots unknown</font>

112
00:04:59,210 --> 00:05:03,979
that may or<font color="#CCCCCC"> may not be sent to you as</font>

113
00:05:01,010 --> 00:05:06,190
well as<font color="#CCCCCC"> next-hop</font><font color="#E5E5E5"> as path loop or any</font>

114
00:05:03,979 --> 00:05:08,380
other invalid

115
00:05:06,190 --> 00:05:10,570
criteria that would cause that<font color="#E5E5E5"> update to</font>

116
00:05:08,380 --> 00:05:11,949
not even<font color="#CCCCCC"> be considered you won't see it</font>

117
00:05:10,570 --> 00:05:15,340
<font color="#E5E5E5">so you don't really get a true</font>

118
00:05:11,949 --> 00:05:16,960
<font color="#E5E5E5">representation of what the router is</font>

119
00:05:15,340 --> 00:05:19,929
actually seen<font color="#E5E5E5"> especially if you're going</font>

120
00:05:16,960 --> 00:05:21,159
to try<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> move the control plane out</font>

121
00:05:19,930 --> 00:05:23,800
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the router</font><font color="#CCCCCC"> at least from the BGP</font>

122
00:05:21,160 --> 00:05:26,500
perspective<font color="#CCCCCC"> you really need</font><font color="#E5E5E5"> to see what</font>

123
00:05:23,800 --> 00:05:29,800
the router sees<font color="#E5E5E5"> 100% in order to do that</font>

124
00:05:26,500 --> 00:05:32,080
<font color="#E5E5E5">so with</font><font color="#CCCCCC"> BG preparing you also do not</font>

125
00:05:29,800 --> 00:05:33,820
<font color="#CCCCCC">have the visibility of the peers you</font>

126
00:05:32,080 --> 00:05:35,109
have<font color="#E5E5E5"> absolutely no idea what address</font>

127
00:05:33,820 --> 00:05:38,320
family<font color="#E5E5E5"> is or capabilities have</font><font color="#CCCCCC"> been</font>

128
00:05:35,110 --> 00:05:41,800
exchanged on those peers<font color="#CCCCCC"> you don't have</font>

129
00:05:38,320 --> 00:05:42,849
the<font color="#CCCCCC"> details as far as the if there is</font>

130
00:05:41,800 --> 00:05:44,620
address families that<font color="#E5E5E5"> have</font><font color="#CCCCCC"> been ever</font>

131
00:05:42,849 --> 00:05:47,380
talkin<font color="#CCCCCC"> vade to which your parents</font>

132
00:05:44,620 --> 00:05:50,289
<font color="#CCCCCC">session does not have configured so you</font>

133
00:05:47,380 --> 00:05:53,440
only see<font color="#E5E5E5"> once</font><font color="#CCCCCC"> again what the router</font>

134
00:05:50,289 --> 00:05:55,810
tells you you could try to do pre policy

135
00:05:53,440 --> 00:05:57,880
which some people do with peering with

136
00:05:55,810 --> 00:06:00,789
<font color="#CCCCCC">all the other peers but then that</font>

137
00:05:57,880 --> 00:06:03,610
becomes a<font color="#CCCCCC"> situation of just how</font><font color="#E5E5E5"> often do</font>

138
00:06:00,789 --> 00:06:05,440
you or how far can<font color="#CCCCCC"> you go with peering</font>

139
00:06:03,610 --> 00:06:07,599
<font color="#CCCCCC">with everybody else</font><font color="#E5E5E5"> just for monitoring</font>

140
00:06:05,440 --> 00:06:11,530
<font color="#CCCCCC">perspective so it becomes a</font><font color="#E5E5E5"> scalability</font>

141
00:06:07,599 --> 00:06:13,659
issue standard peering can be<font color="#E5E5E5"> a security</font>

142
00:06:11,530 --> 00:06:16,299
<font color="#CCCCCC">concern because it is inline its</font>

143
00:06:13,659 --> 00:06:17,979
implementing the BGP stock so when you

144
00:06:16,300 --> 00:06:20,620
peer with the router<font color="#CCCCCC"> your peering with</font>

145
00:06:17,979 --> 00:06:22,510
<font color="#E5E5E5">the same stack the same code that's used</font>

146
00:06:20,620 --> 00:06:25,750
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the production forwarding of traffic</font>

147
00:06:22,510 --> 00:06:27,880
and<font color="#E5E5E5"> working with</font><font color="#CCCCCC"> BGP which if your</font>

148
00:06:25,750 --> 00:06:30,099
collector<font color="#E5E5E5"> is super robust and and really</font>

149
00:06:27,880 --> 00:06:32,289
<font color="#E5E5E5">great and trusted then that might be</font>

150
00:06:30,099 --> 00:06:34,389
fine<font color="#E5E5E5"> but if you're using and trying out</font>

151
00:06:32,289 --> 00:06:37,289
<font color="#CCCCCC">different collectors</font><font color="#E5E5E5"> and different tools</font>

152
00:06:34,389 --> 00:06:40,300
<font color="#E5E5E5">it may be of a concern</font><font color="#CCCCCC"> to turn</font><font color="#E5E5E5"> on</font>

153
00:06:37,289 --> 00:06:42,190
monitoring on your core<font color="#E5E5E5"> route reflectors</font>

154
00:06:40,300 --> 00:06:46,240
or your edge<font color="#E5E5E5"> peering routers your</font><font color="#CCCCCC"> PT</font>

155
00:06:42,190 --> 00:06:48,130
routers so it's problematic in a sense

156
00:06:46,240 --> 00:06:50,020
that<font color="#CCCCCC"> you do jeopardize potentially the</font>

157
00:06:48,130 --> 00:06:51,880
BGP<font color="#E5E5E5"> stock and the same thing</font><font color="#CCCCCC"> for an</font>

158
00:06:50,020 --> 00:06:53,440
inbound policy even<font color="#CCCCCC"> though you</font><font color="#E5E5E5"> don't</font>

159
00:06:51,880 --> 00:06:56,979
expect<font color="#E5E5E5"> to receive anything from</font><font color="#CCCCCC"> the</font>

160
00:06:53,440 --> 00:06:58,630
peering you may actually still receive

161
00:06:56,979 --> 00:07:01,060
something<font color="#CCCCCC"> in the BGP stock still may</font>

162
00:06:58,630 --> 00:07:04,539
implement<font color="#E5E5E5"> parsing of that update to</font>

163
00:07:01,060 --> 00:07:06,699
which still could cause a problem so an

164
00:07:04,539 --> 00:07:09,550
answer<font color="#CCCCCC"> to this is to use</font><font color="#E5E5E5"> bgp monitoring</font>

165
00:07:06,699 --> 00:07:11,860
protocol which<font color="#CCCCCC"> is implemented in cisco</font>

166
00:07:09,550 --> 00:07:16,779
<font color="#E5E5E5">as well as juniper today as well as I</font>

167
00:07:11,860 --> 00:07:18,460
heard<font color="#E5E5E5"> go</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> GPS also implements it and</font>

168
00:07:16,779 --> 00:07:21,159
what it is

169
00:07:18,460 --> 00:07:23,710
a way<font color="#E5E5E5"> to establish a monitoring</font><font color="#CCCCCC"> session</font>

170
00:07:21,160 --> 00:07:26,350
from<font color="#E5E5E5"> the from the router to a collector</font>

171
00:07:23,710 --> 00:07:28,210
<font color="#E5E5E5">and you can have several collectors out</font>

172
00:07:26,350 --> 00:07:30,849
<font color="#E5E5E5">there</font><font color="#CCCCCC"> but in general you have typically</font>

173
00:07:28,210 --> 00:07:33,099
<font color="#E5E5E5">one TCP connection that is established</font>

174
00:07:30,849 --> 00:07:35,530
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the router</font><font color="#E5E5E5"> and the collector and</font>

175
00:07:33,099 --> 00:07:37,870
through that persistent TCP connection

176
00:07:35,530 --> 00:07:40,989
you get all of the peer information

177
00:07:37,870 --> 00:07:44,530
which is an<font color="#E5E5E5"> encapsulated BGP update or</font>

178
00:07:40,990 --> 00:07:47,590
notification or open<font color="#CCCCCC"> message</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> BMP so</font>

179
00:07:44,530 --> 00:07:48,969
<font color="#E5E5E5">you get that information as the router</font>

180
00:07:47,590 --> 00:07:51,130
receives the<font color="#CCCCCC"> information you get</font><font color="#E5E5E5"> that</font>

181
00:07:48,970 --> 00:07:55,139
information<font color="#E5E5E5"> to the collector so one</font>

182
00:07:51,130 --> 00:07:57,940
stream can handle hundreds of peers<font color="#CCCCCC"> and</font>

183
00:07:55,139 --> 00:07:59,530
the configuration<font color="#E5E5E5"> is very very easy to</font>

184
00:07:57,940 --> 00:08:01,509
configure<font color="#E5E5E5"> that so unlike</font><font color="#CCCCCC"> having to</font>

185
00:07:59,530 --> 00:08:03,729
<font color="#E5E5E5">configure all these varying peering</font>

186
00:08:01,509 --> 00:08:05,229
sessions from<font color="#E5E5E5"> monitoring perspective you</font>

187
00:08:03,729 --> 00:08:08,110
configure just that monitoring server

188
00:08:05,229 --> 00:08:11,289
and you<font color="#E5E5E5"> just toggle on or</font><font color="#CCCCCC"> off monitoring</font>

189
00:08:08,110 --> 00:08:13,599
on a per pair basis<font color="#E5E5E5"> or globally and it's</font>

190
00:08:11,289 --> 00:08:15,490
implemented<font color="#CCCCCC"> very efficiently</font><font color="#E5E5E5"> within the</font>

191
00:08:13,599 --> 00:08:17,680
router because<font color="#E5E5E5"> once the peering session</font>

192
00:08:15,490 --> 00:08:19,990
has<font color="#CCCCCC"> been established</font><font color="#E5E5E5"> you have enough</font>

193
00:08:17,680 --> 00:08:23,500
information for<font color="#E5E5E5"> the BMP headers to reuse</font>

194
00:08:19,990 --> 00:08:26,759
that<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the life</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> peer so what</font>

195
00:08:23,500 --> 00:08:29,289
that means is that the router<font color="#CCCCCC"> can just</font>

196
00:08:26,759 --> 00:08:31,090
attach basically or a<font color="#CCCCCC"> pin the</font><font color="#E5E5E5"> BGP</font>

197
00:08:29,289 --> 00:08:33,189
<font color="#E5E5E5">updates send the message through BMP</font>

198
00:08:31,090 --> 00:08:34,598
<font color="#E5E5E5">without having to parse the BGP update</font>

199
00:08:33,190 --> 00:08:37,180
or do anything<font color="#E5E5E5"> with</font><font color="#CCCCCC"> it</font>

200
00:08:34,599 --> 00:08:38,800
it is<font color="#E5E5E5"> implementation specific but in</font>

201
00:08:37,179 --> 00:08:42,270
general it doesn't<font color="#E5E5E5"> have to do that so</font>

202
00:08:38,799 --> 00:08:44,680
it's<font color="#CCCCCC"> very fast to forward the BGP data</font>

203
00:08:42,270 --> 00:08:49,839
because this BGP data it supports every

204
00:08:44,680 --> 00:08:52,000
address family<font color="#E5E5E5"> so link</font><font color="#CCCCCC"> States VPN v4 v6</font>

205
00:08:49,839 --> 00:08:54,160
<font color="#E5E5E5">unicast everything is supported every</font>

206
00:08:52,000 --> 00:08:56,020
attribute<font color="#E5E5E5"> is supported and even if it's</font>

207
00:08:54,160 --> 00:08:57,370
brand-new<font color="#CCCCCC"> and it's it's something that</font>

208
00:08:56,020 --> 00:08:59,230
the router<font color="#E5E5E5"> doesn't even know what to do</font>

209
00:08:57,370 --> 00:09:00,310
<font color="#E5E5E5">with it it's technically still supported</font>

210
00:08:59,230 --> 00:09:02,829
<font color="#CCCCCC">because as long</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> we get</font><font color="#E5E5E5"> to information</font>

211
00:09:00,310 --> 00:09:04,300
<font color="#CCCCCC">and forward it we can parse it or</font>

212
00:09:02,829 --> 00:09:06,099
interpret it and use<font color="#CCCCCC"> it</font><font color="#E5E5E5"> from the</font>

213
00:09:04,300 --> 00:09:08,229
collector side so everything is

214
00:09:06,100 --> 00:09:10,690
supported<font color="#E5E5E5"> when the connection is</font>

215
00:09:08,230 --> 00:09:14,770
<font color="#CCCCCC">established to the BMP router the router</font>

216
00:09:10,690 --> 00:09:16,870
will do a<font color="#E5E5E5"> RHIB dump and it will dump the</font>

217
00:09:14,770 --> 00:09:19,630
information<font color="#E5E5E5"> from the peers which allows</font>

218
00:09:16,870 --> 00:09:21,880
the collector to synchronize itself with

219
00:09:19,630 --> 00:09:23,380
the current<font color="#E5E5E5"> state and once that's done</font>

220
00:09:21,880 --> 00:09:25,000
<font color="#E5E5E5">it doesn't need to do a RHIB dump</font>

221
00:09:23,380 --> 00:09:26,620
anymore<font color="#CCCCCC"> because it's a</font><font color="#E5E5E5"> persistent</font>

222
00:09:25,000 --> 00:09:28,300
<font color="#CCCCCC">connection it's always maintained so</font>

223
00:09:26,620 --> 00:09:30,710
it's just incremental updates from then

224
00:09:28,300 --> 00:09:32,780
on so if your peers are you know

225
00:09:30,710 --> 00:09:34,190
several weeks<font color="#E5E5E5"> connected in the BMP</font>

226
00:09:32,780 --> 00:09:36,100
session and several weeks connected then

227
00:09:34,190 --> 00:09:38,690
it was<font color="#CCCCCC"> only one rib dump that took place</font>

228
00:09:36,100 --> 00:09:40,280
<font color="#CCCCCC">if you wanted to do a rib dump you could</font>

229
00:09:38,690 --> 00:09:42,680
do<font color="#E5E5E5"> rib dump just by doing a</font><font color="#CCCCCC"> rout refresh</font>

230
00:09:40,280 --> 00:09:45,620
and<font color="#E5E5E5"> that would cause those updates to be</font>

231
00:09:42,680 --> 00:09:46,729
flooded in again and therefore directed

232
00:09:45,620 --> 00:09:47,680
<font color="#E5E5E5">to the collector and the collector would</font>

233
00:09:46,730 --> 00:09:50,990
get a copy<font color="#E5E5E5"> of it</font>

234
00:09:47,680 --> 00:09:53,839
the<font color="#CCCCCC"> draught is in currently revision 15</font>

235
00:09:50,990 --> 00:09:58,550
and it's in its<font color="#E5E5E5"> final stage so it should</font>

236
00:09:53,840 --> 00:10:01,100
<font color="#E5E5E5">be hopefully approved soon so open</font><font color="#CCCCCC"> BMP</font>

237
00:09:58,550 --> 00:10:03,020
is a collector of<font color="#E5E5E5"> BMP messages from the</font>

238
00:10:01,100 --> 00:10:05,030
router it maintains and establishes<font color="#CCCCCC"> the</font>

239
00:10:03,020 --> 00:10:08,020
<font color="#E5E5E5">connection to the router to maintain</font>

240
00:10:05,030 --> 00:10:10,310
that<font color="#E5E5E5"> connection and it's open</font><font color="#CCCCCC"> source</font><font color="#E5E5E5"> and</font>

241
00:10:08,020 --> 00:10:11,960
when it maintains that connection<font color="#E5E5E5"> with</font>

242
00:10:10,310 --> 00:10:14,569
the router it will take that data feed

243
00:10:11,960 --> 00:10:17,320
<font color="#CCCCCC">and send that data feed to</font><font color="#E5E5E5"> Apache Kafka</font>

244
00:10:14,570 --> 00:10:21,020
<font color="#E5E5E5">which is a message bus that performs</font>

245
00:10:17,320 --> 00:10:22,490
extremely<font color="#E5E5E5"> well in terms of speed</font><font color="#CCCCCC"> it</font>

246
00:10:21,020 --> 00:10:24,410
handles hundreds of thousands<font color="#CCCCCC"> of</font>

247
00:10:22,490 --> 00:10:27,110
<font color="#CCCCCC">messages per second with very little</font>

248
00:10:24,410 --> 00:10:29,360
memories so it's very<font color="#E5E5E5"> fast</font><font color="#CCCCCC"> and from</font>

249
00:10:27,110 --> 00:10:31,370
there<font color="#E5E5E5"> you can then have any number of</font>

250
00:10:29,360 --> 00:10:33,020
consumers so kind of<font color="#E5E5E5"> like with multicast</font>

251
00:10:31,370 --> 00:10:35,600
where you have senders and receivers<font color="#CCCCCC"> and</font>

252
00:10:33,020 --> 00:10:36,920
you join a<font color="#E5E5E5"> group</font><font color="#CCCCCC"> the sender does not</font>

253
00:10:35,600 --> 00:10:39,200
<font color="#E5E5E5">need to know</font><font color="#CCCCCC"> about the consumers</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> the</font>

254
00:10:36,920 --> 00:10:40,910
receivers it basically<font color="#CCCCCC"> just sends</font>

255
00:10:39,200 --> 00:10:42,710
messages even if nobody's there<font color="#CCCCCC"> it</font>

256
00:10:40,910 --> 00:10:44,480
<font color="#E5E5E5">doesn't care it just just sends the</font>

257
00:10:42,710 --> 00:10:46,190
messages<font color="#E5E5E5"> out</font><font color="#CCCCCC"> there which is going</font><font color="#E5E5E5"> to</font>

258
00:10:44,480 --> 00:10:47,540
Calcutta<font color="#E5E5E5"> and then if there is</font><font color="#CCCCCC"> a consumer</font>

259
00:10:46,190 --> 00:10:49,850
great they can<font color="#CCCCCC"> see the messages if</font>

260
00:10:47,540 --> 00:10:53,000
there's no consumers no harm it doesn't

261
00:10:49,850 --> 00:10:56,330
care<font color="#E5E5E5"> what</font><font color="#CCCCCC"> this allows us to do with this</font>

262
00:10:53,000 --> 00:10:57,830
is to create<font color="#E5E5E5"> a large number of consuming</font>

263
00:10:56,330 --> 00:11:00,140
applications and they can be used<font color="#E5E5E5"> case</font>

264
00:10:57,830 --> 00:11:02,090
specifics<font color="#E5E5E5"> so you can create what you</font>

265
00:11:00,140 --> 00:11:05,660
<font color="#E5E5E5">need in order to get</font><font color="#CCCCCC"> from this BGP data</font>

266
00:11:02,090 --> 00:11:06,860
which may not<font color="#E5E5E5"> be a huge amount of data</font>

267
00:11:05,660 --> 00:11:08,630
collection it may just<font color="#E5E5E5"> be</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you're</font>

268
00:11:06,860 --> 00:11:12,170
looking for specific prefixes that<font color="#E5E5E5"> have</font>

269
00:11:08,630 --> 00:11:14,750
a community string<font color="#E5E5E5"> we provide a</font><font color="#CCCCCC"> mic</font>

270
00:11:12,170 --> 00:11:18,020
<font color="#CCCCCC">we'll see my sequel consumer that's open</font>

271
00:11:14,750 --> 00:11:20,000
<font color="#CCCCCC">source and the my sequel consumer will</font>

272
00:11:18,020 --> 00:11:21,319
take all the parse messages<font color="#E5E5E5"> and it will</font>

273
00:11:20,000 --> 00:11:23,360
put<font color="#E5E5E5"> it into the database it'll maintain</font>

274
00:11:21,320 --> 00:11:25,370
<font color="#E5E5E5">state so you can look at the rib</font>

275
00:11:23,360 --> 00:11:28,160
information on any one<font color="#E5E5E5"> of the peers on</font>

276
00:11:25,370 --> 00:11:29,990
any router<font color="#E5E5E5"> and you can see what the</font>

277
00:11:28,160 --> 00:11:32,270
<font color="#CCCCCC">active</font><font color="#E5E5E5"> pre bit of information is for</font>

278
00:11:29,990 --> 00:11:36,230
that<font color="#E5E5E5"> and post rib if it's a post rivet</font>

279
00:11:32,270 --> 00:11:38,660
is being sent<font color="#E5E5E5"> and it also</font><font color="#CCCCCC"> maintains</font><font color="#E5E5E5"> a</font>

280
00:11:36,230 --> 00:11:41,570
history so every time the prefix changes

281
00:11:38,660 --> 00:11:43,689
as<font color="#CCCCCC"> far</font><font color="#E5E5E5"> as attributes change there</font><font color="#CCCCCC"> is a</font>

282
00:11:41,570 --> 00:11:45,820
log entry that<font color="#E5E5E5"> you can go back and then</font>

283
00:11:43,690 --> 00:11:47,550
<font color="#E5E5E5">correlate that back together to draw the</font>

284
00:11:45,820 --> 00:11:51,130
<font color="#E5E5E5">topology for</font><font color="#CCCCCC"> a point-in-time</font>

285
00:11:47,550 --> 00:11:52,540
<font color="#CCCCCC">representation the final consumer</font><font color="#E5E5E5"> is</font>

286
00:11:51,130 --> 00:11:55,000
another consumer<font color="#E5E5E5"> that we have out there</font>

287
00:11:52,540 --> 00:11:57,310
that implements the<font color="#CCCCCC"> parse messages</font><font color="#E5E5E5"> but</font>

288
00:11:55,000 --> 00:12:00,760
it mainly<font color="#E5E5E5"> is for you just to look at it</font>

289
00:11:57,310 --> 00:12:04,300
from the parts message view<font color="#CCCCCC"> but it does</font>

290
00:12:00,760 --> 00:12:05,530
do the binary raw messages as well so in

291
00:12:04,300 --> 00:12:07,329
<font color="#E5E5E5">addition to the</font><font color="#CCCCCC"> parser messages we do</font>

292
00:12:05,530 --> 00:12:10,720
send the binary data<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> binary</font>

293
00:12:07,330 --> 00:12:14,230
data<font color="#E5E5E5"> is exactly what was sent by the</font>

294
00:12:10,720 --> 00:12:16,450
router<font color="#E5E5E5"> so with that there are three</font>

295
00:12:14,230 --> 00:12:18,280
primary use cases for for collecting the

296
00:12:16,450 --> 00:12:20,980
binary<font color="#CCCCCC"> data</font><font color="#E5E5E5"> one of them is to do</font><font color="#CCCCCC"> long</font>

297
00:12:18,280 --> 00:12:22,839
<font color="#CCCCCC">term archival</font><font color="#E5E5E5"> storing this data is</font>

298
00:12:20,980 --> 00:12:24,940
extremely<font color="#E5E5E5"> efficient to store it in the</font>

299
00:12:22,840 --> 00:12:26,860
binary<font color="#CCCCCC"> raw</font><font color="#E5E5E5"> format because a full</font>

300
00:12:24,940 --> 00:12:29,770
<font color="#E5E5E5">internet RHIB dump is only 12 Meg's</font><font color="#CCCCCC"> so</font>

301
00:12:26,860 --> 00:12:34,930
it's not that<font color="#CCCCCC"> much</font><font color="#E5E5E5"> the same exact data</font>

302
00:12:29,770 --> 00:12:37,000
in a concise parsed format is a<font color="#E5E5E5"> hundred</font>

303
00:12:34,930 --> 00:12:39,719
Meg's and if you put<font color="#E5E5E5"> that into other</font>

304
00:12:37,000 --> 00:12:43,140
formats<font color="#E5E5E5"> like JSON or XML</font><font color="#CCCCCC"> it becomes</font>

305
00:12:39,720 --> 00:12:46,990
almost<font color="#E5E5E5"> you know 500 to even greater size</font>

306
00:12:43,140 --> 00:12:49,560
so very good storage to use the raw

307
00:12:46,990 --> 00:12:52,680
format<font color="#CCCCCC"> one of the other use cases is to</font>

308
00:12:49,560 --> 00:12:55,359
<font color="#E5E5E5">support other applications that want to</font>

309
00:12:52,680 --> 00:12:57,790
interact natively with<font color="#E5E5E5"> B and P so</font>

310
00:12:55,360 --> 00:12:59,410
instead of<font color="#E5E5E5"> establishing</font><font color="#CCCCCC"> another BMP feed</font>

311
00:12:57,790 --> 00:13:02,079
from<font color="#E5E5E5"> the router to another</font><font color="#CCCCCC"> application</font>

312
00:12:59,410 --> 00:13:04,839
<font color="#CCCCCC">that application can use the same Kafka</font>

313
00:13:02,080 --> 00:13:06,790
feed<font color="#CCCCCC"> and use the binary</font><font color="#E5E5E5"> stream and it</font>

314
00:13:04,840 --> 00:13:09,790
can take that data<font color="#E5E5E5"> and consume it</font>

315
00:13:06,790 --> 00:13:11,319
natively<font color="#E5E5E5"> so other</font><font color="#CCCCCC"> third-party</font>

316
00:13:09,790 --> 00:13:14,199
<font color="#E5E5E5">applications anything that natively</font>

317
00:13:11,320 --> 00:13:15,790
speaks BMP can can use that stream one

318
00:13:14,200 --> 00:13:18,850
of the other use cases is that<font color="#CCCCCC"> if you</font>

319
00:13:15,790 --> 00:13:20,339
need<font color="#E5E5E5"> to do BGP structure analysis where</font>

320
00:13:18,850 --> 00:13:23,470
you<font color="#E5E5E5"> want to look at the order of</font><font color="#CCCCCC"> the</font>

321
00:13:20,340 --> 00:13:26,320
attributes<font color="#E5E5E5"> or how efficient the packing</font>

322
00:13:23,470 --> 00:13:27,760
is being done in<font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> or if you want to</font>

323
00:13:26,320 --> 00:13:29,080
look at all the malformed updates or

324
00:13:27,760 --> 00:13:32,380
anything that<font color="#E5E5E5"> the router ends up</font>

325
00:13:29,080 --> 00:13:35,050
<font color="#CCCCCC">rejecting you can do analysis</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> BGP</font>

326
00:13:32,380 --> 00:13:36,640
<font color="#E5E5E5">level with the binary stream as well so</font>

327
00:13:35,050 --> 00:13:39,219
we<font color="#E5E5E5"> have multiple consumers we also have</font>

328
00:13:36,640 --> 00:13:42,280
<font color="#CCCCCC">elasticsearch we</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> ODL</font><font color="#E5E5E5"> we're working</font>

329
00:13:39,220 --> 00:13:44,640
on<font color="#E5E5E5"> MRT consumer as</font><font color="#CCCCCC"> well that</font><font color="#E5E5E5"> would</font>

330
00:13:42,280 --> 00:13:47,230
produce the MRT dumps on an<font color="#E5E5E5"> interval</font><font color="#CCCCCC"> and</font>

331
00:13:44,640 --> 00:13:49,410
we're<font color="#E5E5E5"> working on a BMP connector</font><font color="#CCCCCC"> that</font>

332
00:13:47,230 --> 00:13:52,750
will also<font color="#E5E5E5"> connect other BMP servers</font>

333
00:13:49,410 --> 00:13:56,110
transparently to this framework<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do</font>

334
00:13:52,750 --> 00:13:57,340
<font color="#E5E5E5">this so it open BMP org is where you can</font>

335
00:13:56,110 --> 00:13:59,920
go<font color="#E5E5E5"> to get more detail as well</font>

336
00:13:57,340 --> 00:14:04,800
github<font color="#CCCCCC"> everything is</font><font color="#E5E5E5"> under github / open</font>

337
00:13:59,920 --> 00:14:07,329
<font color="#E5E5E5">BMP so more detail</font><font color="#CCCCCC"> on Apache Kafka</font><font color="#E5E5E5"> is</font>

338
00:14:04,800 --> 00:14:09,520
unlike other message buses this is kind

339
00:14:07,330 --> 00:14:11,980
of like a cache<font color="#E5E5E5"> and it's a log and it's</font>

340
00:14:09,520 --> 00:14:14,860
in a window<font color="#E5E5E5"> of</font><font color="#CCCCCC"> time so you can establish</font>

341
00:14:11,980 --> 00:14:19,030
based off of configuration how much cash

342
00:14:14,860 --> 00:14:20,650
or log you want to maintain<font color="#E5E5E5"> typically we</font>

343
00:14:19,030 --> 00:14:23,650
recommend<font color="#E5E5E5"> 36 hours you don't really</font>

344
00:14:20,650 --> 00:14:26,560
wanna<font color="#CCCCCC"> go</font><font color="#E5E5E5"> usually longer than that but 36</font>

345
00:14:23,650 --> 00:14:29,020
hours<font color="#E5E5E5"> means that a consuming application</font>

346
00:14:26,560 --> 00:14:31,510
that wants<font color="#CCCCCC"> to</font><font color="#E5E5E5"> consume data can go</font><font color="#CCCCCC"> as far</font>

347
00:14:29,020 --> 00:14:34,199
<font color="#E5E5E5">back as 36 hours into the stream and</font>

348
00:14:31,510 --> 00:14:37,180
then<font color="#CCCCCC"> it can</font><font color="#E5E5E5"> catch up so it can read the</font>

349
00:14:34,200 --> 00:14:40,420
messages as fast as a rate as it can

350
00:14:37,180 --> 00:14:42,099
read and catch up to<font color="#CCCCCC"> where the messages</font>

351
00:14:40,420 --> 00:14:44,620
<font color="#E5E5E5">are</font><font color="#CCCCCC"> being produced</font><font color="#E5E5E5"> so and there's a</font>

352
00:14:42,100 --> 00:14:46,390
smallest in and there's a largest<font color="#E5E5E5"> in the</font>

353
00:14:44,620 --> 00:14:49,360
largest<font color="#E5E5E5"> is where the messages are</font><font color="#CCCCCC"> being</font>

354
00:14:46,390 --> 00:14:51,220
produced and the smallest is the the

355
00:14:49,360 --> 00:14:55,090
oldest message<font color="#E5E5E5"> that's available which</font>

356
00:14:51,220 --> 00:14:57,100
would be like<font color="#E5E5E5"> 36 hours ago</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> example of</font>

357
00:14:55,090 --> 00:14:58,660
this<font color="#E5E5E5"> would be if you have three</font>

358
00:14:57,100 --> 00:15:00,820
different<font color="#E5E5E5"> consumers that</font><font color="#CCCCCC"> are running</font><font color="#E5E5E5"> and</font>

359
00:14:58,660 --> 00:15:02,770
one of them let's say it's<font color="#E5E5E5"> my sequel and</font>

360
00:15:00,820 --> 00:15:04,780
let's say you want<font color="#CCCCCC"> to do a schema change</font>

361
00:15:02,770 --> 00:15:07,990
and you want to stop the my sequel

362
00:15:04,780 --> 00:15:10,600
consumer and you want to apply<font color="#E5E5E5"> the</font>

363
00:15:07,990 --> 00:15:11,800
change to the<font color="#E5E5E5"> schema well with this</font>

364
00:15:10,600 --> 00:15:13,810
<font color="#E5E5E5">environment you don't</font><font color="#CCCCCC"> have to actually</font>

365
00:15:11,800 --> 00:15:15,040
<font color="#CCCCCC">disable any other consumers they can</font>

366
00:15:13,810 --> 00:15:17,380
continue<font color="#E5E5E5"> where they are and they</font><font color="#CCCCCC"> can</font>

367
00:15:15,040 --> 00:15:19,630
continue to<font color="#E5E5E5"> run with the real-time data</font>

368
00:15:17,380 --> 00:15:22,630
<font color="#CCCCCC">you can stop my sequel and let's say you</font>

369
00:15:19,630 --> 00:15:26,530
stop it at sequence or<font color="#E5E5E5"> offset</font><font color="#CCCCCC"> 6 you</font><font color="#E5E5E5"> can</font>

370
00:15:22,630 --> 00:15:28,480
then you<font color="#CCCCCC"> can then basically do your work</font>

371
00:15:26,530 --> 00:15:30,550
restart<font color="#CCCCCC"> the my sequel consumer and it</font>

372
00:15:28,480 --> 00:15:32,080
will resume at offset 7 so it doesn't

373
00:15:30,550 --> 00:15:33,910
miss any of the<font color="#E5E5E5"> updates and it doesn't</font>

374
00:15:32,080 --> 00:15:37,270
require<font color="#CCCCCC"> RHIB</font><font color="#E5E5E5"> dumps to be recent just</font>

375
00:15:33,910 --> 00:15:38,920
<font color="#E5E5E5">because the consumer restarts so slow</font>

376
00:15:37,270 --> 00:15:43,030
consumers also<font color="#E5E5E5"> work like</font><font color="#CCCCCC"> this</font>

377
00:15:38,920 --> 00:15:44,260
<font color="#E5E5E5">and slow consumers would be consuming</font>

378
00:15:43,030 --> 00:15:47,110
applications<font color="#E5E5E5"> that you write really fast</font>

379
00:15:44,260 --> 00:15:48,550
<font color="#CCCCCC">like if you want to analyze something</font>

380
00:15:47,110 --> 00:15:49,810
<font color="#E5E5E5">because you had an incident and</font><font color="#CCCCCC"> you</font>

381
00:15:48,550 --> 00:15:51,400
wanted to<font color="#E5E5E5"> write a Python</font><font color="#CCCCCC"> script really</font>

382
00:15:49,810 --> 00:15:54,599
<font color="#E5E5E5">fast to consume the data and just check</font>

383
00:15:51,400 --> 00:15:56,620
things out<font color="#CCCCCC"> your application may not be</font>

384
00:15:54,600 --> 00:15:58,510
efficient<font color="#CCCCCC"> and if it's</font><font color="#E5E5E5"> not efficient it</font>

385
00:15:56,620 --> 00:16:00,400
may run slow<font color="#E5E5E5"> but that will have no</font>

386
00:15:58,510 --> 00:16:02,050
effect<font color="#E5E5E5"> at all on any of the other</font>

387
00:16:00,400 --> 00:16:04,300
<font color="#CCCCCC">consumers so they do have that</font><font color="#E5E5E5"> autonomy</font>

388
00:16:02,050 --> 00:16:07,180
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you can load balanced consumers so</font>

389
00:16:04,300 --> 00:16:09,609
this framework is more than just a JSON

390
00:16:07,180 --> 00:16:11,170
output of data<font color="#E5E5E5"> or</font>

391
00:16:09,610 --> 00:16:13,960
output<font color="#E5E5E5"> of data that you get with a</font>

392
00:16:11,170 --> 00:16:17,199
stream this is a framework<font color="#E5E5E5"> that</font><font color="#CCCCCC"> supports</font>

393
00:16:13,960 --> 00:16:19,540
consuming applications to scale so you

394
00:16:17,200 --> 00:16:21,160
<font color="#CCCCCC">can scale your applications how you need</font>

395
00:16:19,540 --> 00:16:24,339
<font color="#E5E5E5">to scale them to consume the messages</font>

396
00:16:21,160 --> 00:16:25,839
and open<font color="#CCCCCC"> BMP ensures that the messages</font>

397
00:16:24,340 --> 00:16:27,730
are put in order so when you get an

398
00:16:25,840 --> 00:16:30,130
update<font color="#CCCCCC"> and with end of withdrawal you</font>

399
00:16:27,730 --> 00:16:31,810
don't have to match the timestamps<font color="#E5E5E5"> your</font>

400
00:16:30,130 --> 00:16:33,880
order<font color="#E5E5E5"> will be maintained on a per</font>

401
00:16:31,810 --> 00:16:35,770
partition basis so when you load<font color="#E5E5E5"> balance</font>

402
00:16:33,880 --> 00:16:37,450
your consumers should build a load

403
00:16:35,770 --> 00:16:39,329
<font color="#CCCCCC">balance correctly and process the</font>

404
00:16:37,450 --> 00:16:43,540
messages in sequence as they were

405
00:16:39,330 --> 00:16:47,170
generated so the architecture<font color="#E5E5E5"> of open</font>

406
00:16:43,540 --> 00:16:51,370
BMP is to establish a reliable

407
00:16:47,170 --> 00:16:53,650
collection feed of<font color="#CCCCCC"> bgp data so you</font><font color="#E5E5E5"> can</font>

408
00:16:51,370 --> 00:16:56,830
have one<font color="#CCCCCC"> or more beat open</font><font color="#E5E5E5"> BMP</font>

409
00:16:53,650 --> 00:16:59,490
collectors<font color="#E5E5E5"> but you can also have BMP</font>

410
00:16:56,830 --> 00:17:01,630
collectors or open BMP collectors for

411
00:16:59,490 --> 00:17:03,340
different groups so<font color="#E5E5E5"> if you have a</font>

412
00:17:01,630 --> 00:17:05,920
<font color="#E5E5E5">backbone group and you have</font><font color="#CCCCCC"> a cloud</font>

413
00:17:03,340 --> 00:17:07,360
services group<font color="#E5E5E5"> and different people</font>

414
00:17:05,920 --> 00:17:08,620
<font color="#E5E5E5">manage different routers and you don't</font>

415
00:17:07,359 --> 00:17:10,300
want somebody<font color="#E5E5E5"> to touch your router and</font>

416
00:17:08,619 --> 00:17:11,919
you don't want them to be rebooting<font color="#E5E5E5"> this</font>

417
00:17:10,300 --> 00:17:13,000
box<font color="#E5E5E5"> whenever they want to reboot it or</font>

418
00:17:11,920 --> 00:17:15,820
do something<font color="#CCCCCC"> that they're doing</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> it</font>

419
00:17:13,000 --> 00:17:17,400
so you can<font color="#CCCCCC"> control that with your own</font>

420
00:17:15,819 --> 00:17:20,948
<font color="#E5E5E5">collector feed it into</font><font color="#CCCCCC"> the same</font><font color="#E5E5E5"> account</font>

421
00:17:17,400 --> 00:17:23,500
<font color="#CCCCCC">Kafka bus and you can maintain the</font>

422
00:17:20,949 --> 00:17:26,400
stability<font color="#E5E5E5"> within that</font><font color="#CCCCCC"> environment with</font>

423
00:17:23,500 --> 00:17:30,430
the collector going to Apache Kafka and

424
00:17:26,400 --> 00:17:33,610
the collector has evolved<font color="#CCCCCC"> over time</font><font color="#E5E5E5"> we</font>

425
00:17:30,430 --> 00:17:35,230
have made it<font color="#E5E5E5"> so that it's lessens the</font>

426
00:17:33,610 --> 00:17:37,510
burden on<font color="#E5E5E5"> the router as much as possible</font>

427
00:17:35,230 --> 00:17:39,700
<font color="#E5E5E5">so</font><font color="#CCCCCC"> the idea is to not require</font><font color="#E5E5E5"> the router</font>

428
00:17:37,510 --> 00:17:43,390
to buffer not the<font color="#E5E5E5"> requirement rather to</font>

429
00:17:39,700 --> 00:17:47,020
do any extra work<font color="#E5E5E5"> than it has</font><font color="#CCCCCC"> to do so</font>

430
00:17:43,390 --> 00:17:49,030
it will<font color="#E5E5E5"> forward messages regardless and</font>

431
00:17:47,020 --> 00:17:50,350
send messages<font color="#CCCCCC"> to Kafka even if the</font>

432
00:17:49,030 --> 00:17:53,410
consumers are<font color="#E5E5E5"> not there</font><font color="#CCCCCC"> or not</font>

433
00:17:50,350 --> 00:17:55,020
functioning the consumer<font color="#E5E5E5"> is because</font>

434
00:17:53,410 --> 00:17:58,720
there's like<font color="#E5E5E5"> a demarcation between</font>

435
00:17:55,020 --> 00:18:00,820
<font color="#E5E5E5">Apache Kafka and</font><font color="#CCCCCC"> the consumer layer you</font>

436
00:17:58,720 --> 00:18:03,100
don't have to worry<font color="#E5E5E5"> about badly</font><font color="#CCCCCC"> written</font>

437
00:18:00,820 --> 00:18:04,840
applications<font color="#E5E5E5"> causing a problem to your</font>

438
00:18:03,100 --> 00:18:07,179
data feed and it won't affect<font color="#CCCCCC"> any</font><font color="#E5E5E5"> other</font>

439
00:18:04,840 --> 00:18:09,850
<font color="#CCCCCC">consumer so applications</font><font color="#E5E5E5"> that the</font>

440
00:18:07,180 --> 00:18:11,560
integration<font color="#E5E5E5"> layer was in Kafka can crash</font>

441
00:18:09,850 --> 00:18:12,909
<font color="#CCCCCC">all day</font><font color="#E5E5E5"> long and it doesn't have a</font>

442
00:18:11,560 --> 00:18:15,909
problem<font color="#CCCCCC"> at all</font>

443
00:18:12,910 --> 00:18:17,290
so you get a stable<font color="#CCCCCC"> environment if you</font>

444
00:18:15,910 --> 00:18:19,030
don't want to<font color="#CCCCCC"> develop anything</font><font color="#E5E5E5"> you can</font>

445
00:18:17,290 --> 00:18:21,010
<font color="#E5E5E5">use one of the existing consumers and</font>

446
00:18:19,030 --> 00:18:21,910
you can integrate natively<font color="#E5E5E5"> like you can</font>

447
00:18:21,010 --> 00:18:22,520
use<font color="#CCCCCC"> Kabana</font>

448
00:18:21,910 --> 00:18:25,340
and you

449
00:18:22,520 --> 00:18:29,480
visualize<font color="#E5E5E5"> the live data as it's coming</font>

450
00:18:25,340 --> 00:18:31,490
in and you can design dashboards and use

451
00:18:29,480 --> 00:18:36,170
that<font color="#E5E5E5"> tool using elastic search and the</font>

452
00:18:31,490 --> 00:18:38,390
elastic search consumer so the message

453
00:18:36,170 --> 00:18:41,600
<font color="#CCCCCC">field looks</font><font color="#E5E5E5"> like this and this is using</font>

454
00:18:38,390 --> 00:18:44,810
<font color="#E5E5E5">just a standard</font><font color="#CCCCCC"> Caprica console consumer</font>

455
00:18:41,600 --> 00:18:46,550
which is provided<font color="#E5E5E5"> when you download</font>

456
00:18:44,810 --> 00:18:47,960
Kafka you can run<font color="#E5E5E5"> this consumer and in</font>

457
00:18:46,550 --> 00:18:51,590
<font color="#E5E5E5">fact you can</font><font color="#CCCCCC"> use this exact same syntax</font>

458
00:18:47,960 --> 00:18:54,290
of course<font color="#CCCCCC"> you change the hostname with</font>

459
00:18:51,590 --> 00:18:56,480
this data it sends<font color="#CCCCCC"> basically this stream</font>

460
00:18:54,290 --> 00:18:59,360
and<font color="#E5E5E5"> we went back</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> forth between using</font>

461
00:18:56,480 --> 00:19:02,030
<font color="#E5E5E5">JSON or other structured format for this</font>

462
00:18:59,360 --> 00:19:05,030
and we decided<font color="#CCCCCC"> not to because the data</font>

463
00:19:02,030 --> 00:19:06,879
stream<font color="#E5E5E5"> is more efficient when it's just</font>

464
00:19:05,030 --> 00:19:12,680
<font color="#E5E5E5">the raw data that we're trying</font><font color="#CCCCCC"> to send</font>

465
00:19:06,880 --> 00:19:14,660
<font color="#E5E5E5">as compact as we can with</font><font color="#CCCCCC"> it so having</font>

466
00:19:12,680 --> 00:19:15,980
to put descriptions to the fields<font color="#E5E5E5"> and</font>

467
00:19:14,660 --> 00:19:17,120
<font color="#E5E5E5">sending it in JSON or something like</font>

468
00:19:15,980 --> 00:19:22,040
<font color="#CCCCCC">that or if we try to use yang or</font>

469
00:19:17,120 --> 00:19:24,320
whatever it would end up producing<font color="#E5E5E5"> 500</font>

470
00:19:22,040 --> 00:19:26,990
plus Meg's worth of<font color="#E5E5E5"> data when this is</font>

471
00:19:24,320 --> 00:19:29,570
far<font color="#E5E5E5"> more efficient and it's not it's not</font>

472
00:19:26,990 --> 00:19:32,090
<font color="#CCCCCC">that much</font><font color="#E5E5E5"> you can take any software</font>

473
00:19:29,570 --> 00:19:34,460
package that<font color="#E5E5E5"> can take in</font><font color="#CCCCCC"> comma delimited</font>

474
00:19:32,090 --> 00:19:37,010
<font color="#E5E5E5">or tab delimited fields and import this</font>

475
00:19:34,460 --> 00:19:38,780
data<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually cut and paste</font><font color="#E5E5E5"> this</font>

476
00:19:37,010 --> 00:19:40,970
data right into Excel<font color="#E5E5E5"> and it</font>

477
00:19:38,780 --> 00:19:44,360
automatically loads in<font color="#E5E5E5"> Excel you</font><font color="#CCCCCC"> can use</font>

478
00:19:40,970 --> 00:19:46,130
excels<font color="#E5E5E5"> data drivers to to load this</font>

479
00:19:44,360 --> 00:19:49,280
dynamically<font color="#E5E5E5"> and it pulls it in you can</font>

480
00:19:46,130 --> 00:19:52,310
pipe this<font color="#E5E5E5"> to awk and aqua parts this on</font>

481
00:19:49,280 --> 00:19:56,899
command line<font color="#CCCCCC"> real</font><font color="#E5E5E5"> time and and it's</font>

482
00:19:52,310 --> 00:20:00,200
super easy to<font color="#E5E5E5"> develop against so to do</font>

483
00:19:56,900 --> 00:20:02,570
some analysis one of the things that we

484
00:20:00,200 --> 00:20:05,660
<font color="#CCCCCC">analyze a lot</font><font color="#E5E5E5"> with this data is we</font>

485
00:20:02,570 --> 00:20:07,250
analyze<font color="#E5E5E5"> the</font><font color="#CCCCCC"> AF path and we need to</font>

486
00:20:05,660 --> 00:20:11,030
maintain<font color="#E5E5E5"> the order</font><font color="#CCCCCC"> within the a</font><font color="#E5E5E5"> s path</font>

487
00:20:07,250 --> 00:20:12,620
so traditional indexing so if you like

488
00:20:11,030 --> 00:20:15,440
an elastic search with a string based

489
00:20:12,620 --> 00:20:17,389
text-based<font color="#E5E5E5"> indexer or analyzer or</font>

490
00:20:15,440 --> 00:20:20,900
in my sequel you have the text search

491
00:20:17,390 --> 00:20:22,130
engine<font color="#E5E5E5"> they</font><font color="#CCCCCC"> analyze</font><font color="#E5E5E5"> based</font><font color="#CCCCCC"> off of words</font>

492
00:20:20,900 --> 00:20:23,870
<font color="#E5E5E5">and they don't really maintain the order</font>

493
00:20:22,130 --> 00:20:26,030
<font color="#CCCCCC">so it doesn't</font><font color="#E5E5E5"> really help us when we</font>

494
00:20:23,870 --> 00:20:26,570
<font color="#E5E5E5">want to extract immediately to the left</font>

495
00:20:26,030 --> 00:20:28,370
or<font color="#CCCCCC"> to the right</font>

496
00:20:26,570 --> 00:20:30,649
<font color="#E5E5E5">ASN so when we want to look at what's</font>

497
00:20:28,370 --> 00:20:32,750
<font color="#E5E5E5">upstream or what's downstream on a</font>

498
00:20:30,650 --> 00:20:34,760
prefix at any point within the<font color="#CCCCCC"> AAS path</font>

499
00:20:32,750 --> 00:20:35,740
so<font color="#E5E5E5"> this is the method</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we have been</font>

500
00:20:34,760 --> 00:20:38,230
<font color="#E5E5E5">using</font>

501
00:20:35,740 --> 00:20:40,210
or we<font color="#CCCCCC"> use</font><font color="#E5E5E5"> an encode in memory as well as</font>

502
00:20:38,230 --> 00:20:42,429
<font color="#CCCCCC">in the database</font><font color="#E5E5E5"> and it works universally</font>

503
00:20:40,210 --> 00:20:44,350
<font color="#E5E5E5">between the boughs and</font><font color="#CCCCCC"> the way we do it</font>

504
00:20:42,429 --> 00:20:47,860
is we basically<font color="#E5E5E5"> iterate through this</font><font color="#CCCCCC"> AAS</font>

505
00:20:44,350 --> 00:20:49,350
<font color="#E5E5E5">path and we look at it distinctly so we</font>

506
00:20:47,860 --> 00:20:53,169
don't care<font color="#CCCCCC"> if there's any pre</font><font color="#E5E5E5"> pens and</font>

507
00:20:49,350 --> 00:20:55,780
with that we then<font color="#E5E5E5"> record in a table or a</font>

508
00:20:53,170 --> 00:20:58,360
hash table<font color="#E5E5E5"> we record the ASN that we're</font>

509
00:20:55,780 --> 00:21:00,070
iterating on and then the<font color="#CCCCCC"> AAS to the</font>

510
00:20:58,360 --> 00:21:02,830
left and<font color="#E5E5E5"> to the right so in this example</font>

511
00:21:00,070 --> 00:21:04,990
if I wanted<font color="#E5E5E5"> to look at 13 3 3 5 and I</font>

512
00:21:02,830 --> 00:21:08,110
wanted<font color="#E5E5E5"> to say what is</font><font color="#CCCCCC"> it what</font><font color="#E5E5E5"> upstream</font>

513
00:21:04,990 --> 00:21:10,600
<font color="#CCCCCC">AAS ends</font><font color="#E5E5E5"> or providers does 13 3 4 5</font><font color="#CCCCCC"> use</font>

514
00:21:08,110 --> 00:21:12,909
we can see<font color="#E5E5E5"> immediately as 1299 in this</font>

515
00:21:10,600 --> 00:21:14,889
particular case but if you expand<font color="#CCCCCC"> this</font>

516
00:21:12,910 --> 00:21:16,750
across<font color="#E5E5E5"> you know millions of prefixes</font>

517
00:21:14,890 --> 00:21:20,170
that<font color="#E5E5E5"> we end up getting in we get a</font>

518
00:21:16,750 --> 00:21:22,120
distinct list of upstream providers as

519
00:21:20,170 --> 00:21:24,820
well<font color="#CCCCCC"> as</font><font color="#E5E5E5"> downstream so we can tell if</font>

520
00:21:22,120 --> 00:21:28,178
<font color="#CCCCCC">they're transit not transit we can tell</font>

521
00:21:24,820 --> 00:21:29,620
if if they are transit for anybody else

522
00:21:28,179 --> 00:21:32,920
or they<font color="#CCCCCC"> just transit for themselves</font>

523
00:21:29,620 --> 00:21:38,590
meaning<font color="#E5E5E5"> that these a</font><font color="#CCCCCC"> 1/3 10 3 10 + 3</font><font color="#E5E5E5"> 3 6</font>

524
00:21:32,920 --> 00:21:41,200
<font color="#E5E5E5">12 are just behind them and not</font><font color="#CCCCCC"> past so</font>

525
00:21:38,590 --> 00:21:43,840
with that we we use that<font color="#E5E5E5"> heavily for the</font>

526
00:21:41,200 --> 00:21:46,960
<font color="#E5E5E5">route lake monitoring and in the context</font>

527
00:21:43,840 --> 00:21:48,850
of this discussion<font color="#CCCCCC"> the route lake is</font>

528
00:21:46,960 --> 00:21:52,540
defined basically as anything wrongfully

529
00:21:48,850 --> 00:21:54,370
advertised so that can impact<font color="#E5E5E5"> any number</font>

530
00:21:52,540 --> 00:21:56,170
of prefixes it's not just<font color="#E5E5E5"> one prefix or</font>

531
00:21:54,370 --> 00:21:58,540
a thousand prefixes<font color="#CCCCCC"> or</font><font color="#E5E5E5"> whatever it could</font>

532
00:21:56,170 --> 00:22:00,190
<font color="#E5E5E5">be any number it could be any address</font>

533
00:21:58,540 --> 00:22:02,530
family<font color="#E5E5E5"> we're not limiting ourselves or</font>

534
00:22:00,190 --> 00:22:04,929
restricting ourselves just to unicast<font color="#E5E5E5"> v4</font>

535
00:22:02,530 --> 00:22:06,010
v6 we we want to expand and support

536
00:22:04,929 --> 00:22:10,330
theoretically<font color="#E5E5E5"> any reachability</font>

537
00:22:06,010 --> 00:22:12,280
information<font color="#E5E5E5"> we also it's not</font><font color="#CCCCCC"> just on</font>

538
00:22:10,330 --> 00:22:14,139
what is<font color="#E5E5E5"> being originated as far as</font>

539
00:22:12,280 --> 00:22:16,000
<font color="#E5E5E5">originating</font><font color="#CCCCCC"> ASN it could also</font><font color="#E5E5E5"> be that</font>

540
00:22:14,140 --> 00:22:18,010
there was no path change at all<font color="#E5E5E5"> so in</font>

541
00:22:16,000 --> 00:22:20,080
the case of<font color="#E5E5E5"> policies being incorrectly</font>

542
00:22:18,010 --> 00:22:21,730
applied if you had no export<font color="#E5E5E5"> that was</font>

543
00:22:20,080 --> 00:22:23,740
there before<font color="#E5E5E5"> but</font><font color="#CCCCCC"> now it's gone</font>

544
00:22:21,730 --> 00:22:26,650
technically you leaked that<font color="#E5E5E5"> prefix that</font>

545
00:22:23,740 --> 00:22:28,900
<font color="#E5E5E5">may have not been meant to be late</font><font color="#CCCCCC"> even</font>

546
00:22:26,650 --> 00:22:33,970
<font color="#E5E5E5">though the</font><font color="#CCCCCC"> ant pad didn't change where</font>

547
00:22:28,900 --> 00:22:36,130
you're monitoring so normally there's

548
00:22:33,970 --> 00:22:37,390
tactics for trying<font color="#E5E5E5"> to prevent this so</font>

549
00:22:36,130 --> 00:22:39,480
that you don't<font color="#CCCCCC"> need to do this</font><font color="#E5E5E5"> level of</font>

550
00:22:37,390 --> 00:22:42,210
<font color="#E5E5E5">monitoring but those tactics typically</font>

551
00:22:39,480 --> 00:22:44,500
start to fall<font color="#CCCCCC"> short specifically</font><font color="#E5E5E5"> around</font>

552
00:22:42,210 --> 00:22:46,000
policy chaining<font color="#E5E5E5"> when they get too</font>

553
00:22:44,500 --> 00:22:47,559
<font color="#E5E5E5">complex and they start to overlap or</font>

554
00:22:46,000 --> 00:22:49,630
conflict<font color="#CCCCCC"> with each other</font>

555
00:22:47,559 --> 00:22:53,350
mistakes are<font color="#E5E5E5"> made both with automation</font>

556
00:22:49,630 --> 00:22:55,900
as well<font color="#E5E5E5"> as with human mistakes</font><font color="#CCCCCC"> and one</font>

557
00:22:53,350 --> 00:22:58,719
<font color="#E5E5E5">of the issues with the are ours or our</font>

558
00:22:55,900 --> 00:23:01,390
rpki is that it traditionally focuses on

559
00:22:58,720 --> 00:23:03,429
public addressing and it also is

560
00:23:01,390 --> 00:23:06,510
administrative<font color="#E5E5E5"> so it makes it a little</font>

561
00:23:03,429 --> 00:23:10,929
bit harder<font color="#CCCCCC"> to adopt</font><font color="#E5E5E5"> immediately and</font>

562
00:23:06,510 --> 00:23:13,120
theoretically<font color="#E5E5E5"> maintain so kind of using</font>

563
00:23:10,929 --> 00:23:17,049
the<font color="#E5E5E5"> 80/20 rule of monitoring for</font>

564
00:23:13,120 --> 00:23:19,149
<font color="#E5E5E5">prefixes</font><font color="#CCCCCC"> we could you know look at</font>

565
00:23:17,049 --> 00:23:22,600
hundreds of possible ways<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do leak</font>

566
00:23:19,150 --> 00:23:24,429
monitoring but we also if we try<font color="#E5E5E5"> to</font>

567
00:23:22,600 --> 00:23:26,408
narrow<font color="#E5E5E5"> this down to</font><font color="#CCCCCC"> say what is a</font>

568
00:23:24,429 --> 00:23:28,780
<font color="#E5E5E5">general way to look at the route leaks</font>

569
00:23:26,409 --> 00:23:31,090
<font color="#E5E5E5">there's a few techniques that we can do</font>

570
00:23:28,780 --> 00:23:32,620
to quickly identify potential route

571
00:23:31,090 --> 00:23:36,699
<font color="#CCCCCC">lakes</font><font color="#E5E5E5"> without having this administrative</font>

572
00:23:32,620 --> 00:23:39,189
database so<font color="#CCCCCC"> we can still</font><font color="#E5E5E5"> include the</font><font color="#CCCCCC"> IRR</font>

573
00:23:36,700 --> 00:23:41,200
as well as the rpki information but we

574
00:23:39,190 --> 00:23:42,820
don't have<font color="#E5E5E5"> to rely on it so one of them</font>

575
00:23:41,200 --> 00:23:45,730
is to<font color="#E5E5E5"> look at more specifics being</font>

576
00:23:42,820 --> 00:23:47,080
observed<font color="#E5E5E5"> so in this particular case</font><font color="#CCCCCC"> we</font>

577
00:23:45,730 --> 00:23:49,000
already<font color="#CCCCCC"> normalize our database we</font>

578
00:23:47,080 --> 00:23:50,289
already know with those<font color="#CCCCCC"> rip dumps what</font>

579
00:23:49,000 --> 00:23:51,940
we've received so we know if we<font color="#E5E5E5"> have a</font>

580
00:23:50,289 --> 00:23:53,890
new prefix<font color="#E5E5E5"> or not so we</font><font color="#CCCCCC"> can immediately</font>

581
00:23:51,940 --> 00:23:56,200
check and we can<font color="#E5E5E5"> check to see</font><font color="#CCCCCC"> if this</font><font color="#E5E5E5"> is</font>

582
00:23:53,890 --> 00:23:58,780
<font color="#CCCCCC">a prefix that's already</font><font color="#E5E5E5"> known</font><font color="#CCCCCC"> or is it</font>

583
00:23:56,200 --> 00:24:01,150
really<font color="#CCCCCC"> truly</font><font color="#E5E5E5"> a new specific prefix if</font>

584
00:23:58,780 --> 00:24:04,450
it's a new prefix<font color="#E5E5E5"> then we check to see</font>

585
00:24:01,150 --> 00:24:05,500
<font color="#CCCCCC">if the</font><font color="#E5E5E5"> originating</font><font color="#CCCCCC"> ASN is the same or</font>

586
00:24:04,450 --> 00:24:07,900
not

587
00:24:05,500 --> 00:24:10,090
for the aggregate so we look up the

588
00:24:07,900 --> 00:24:11,559
aggregate and we determine do those do

589
00:24:10,090 --> 00:24:13,178
<font color="#CCCCCC">those match or not and if</font><font color="#E5E5E5"> they match</font>

590
00:24:11,559 --> 00:24:15,190
then chances are this one's probably

591
00:24:13,179 --> 00:24:17,500
<font color="#E5E5E5">okay because at least the</font><font color="#CCCCCC"> originating</font>

592
00:24:15,190 --> 00:24:19,419
<font color="#CCCCCC">ASN is</font><font color="#E5E5E5"> the same as this new specific</font>

593
00:24:17,500 --> 00:24:21,580
that's coming in<font color="#CCCCCC"> we still have other</font>

594
00:24:19,419 --> 00:24:22,809
checks that<font color="#E5E5E5"> we'll do on it but if</font>

595
00:24:21,580 --> 00:24:26,620
they're the same<font color="#CCCCCC"> or</font><font color="#E5E5E5"> let</font><font color="#CCCCCC"> it slide through</font>

596
00:24:22,809 --> 00:24:28,539
<font color="#CCCCCC">at this point if the</font><font color="#E5E5E5"> ASN is not so the</font>

597
00:24:26,620 --> 00:24:30,370
aggregate<font color="#CCCCCC"> is a different a</font><font color="#E5E5E5"> s than the</font>

598
00:24:28,539 --> 00:24:32,110
more specific then we'd want to look<font color="#E5E5E5"> at</font>

599
00:24:30,370 --> 00:24:33,699
the upstream list so we look<font color="#E5E5E5"> at the</font>

600
00:24:32,110 --> 00:24:36,549
upstream<font color="#E5E5E5"> of the ASN or they aggregate</font>

601
00:24:33,700 --> 00:24:38,289
<font color="#CCCCCC">ASN</font><font color="#E5E5E5"> and we would say what upstream</font>

602
00:24:36,549 --> 00:24:39,908
providers do they have and we would

603
00:24:38,289 --> 00:24:44,200
check to<font color="#E5E5E5"> see if this more specific is</font>

604
00:24:39,909 --> 00:24:45,490
within that list<font color="#E5E5E5"> and if that</font><font color="#CCCCCC"> specific is</font>

605
00:24:44,200 --> 00:24:47,020
<font color="#E5E5E5">within the same list of upstream</font>

606
00:24:45,490 --> 00:24:50,590
providers we would consider<font color="#CCCCCC"> that as a</font>

607
00:24:47,020 --> 00:24:52,600
most<font color="#E5E5E5"> likely okay as well or if it's not</font>

608
00:24:50,590 --> 00:24:55,870
<font color="#E5E5E5">in the list we would send an alert and</font>

609
00:24:52,600 --> 00:24:57,520
say that<font color="#E5E5E5"> this is a potential</font><font color="#CCCCCC"> problem</font><font color="#E5E5E5"> to</font>

610
00:24:55,870 --> 00:24:59,289
give an example<font color="#E5E5E5"> if you run this query</font>

611
00:24:57,520 --> 00:25:00,740
across<font color="#E5E5E5"> to all of the internet</font>

612
00:24:59,289 --> 00:25:03,170
information<font color="#CCCCCC"> at least</font><font color="#E5E5E5"> with the</font>

613
00:25:00,740 --> 00:25:06,890
<font color="#CCCCCC">feeds that we have there are 8,000</font>

614
00:25:03,170 --> 00:25:09,260
prefixes right now<font color="#E5E5E5"> that</font><font color="#CCCCCC"> our give</font><font color="#E5E5E5"> or take</font>

615
00:25:06,890 --> 00:25:11,540
<font color="#E5E5E5">right now</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> basically would alarm</font>

616
00:25:09,260 --> 00:25:13,820
<font color="#E5E5E5">under this condition they they are</font>

617
00:25:11,540 --> 00:25:15,500
<font color="#E5E5E5">advertised and aggregates with specifics</font>

618
00:25:13,820 --> 00:25:17,780
that<font color="#E5E5E5"> do not match the same</font><font color="#CCCCCC"> ASN and the</font>

619
00:25:15,500 --> 00:25:21,170
<font color="#E5E5E5">upstreams don't match they're completely</font>

620
00:25:17,780 --> 00:25:23,389
<font color="#E5E5E5">different upstream lists so another</font>

621
00:25:21,170 --> 00:25:25,460
check is<font color="#CCCCCC"> to you to do</font><font color="#E5E5E5"> ASN inconsistent</font>

622
00:25:23,390 --> 00:25:27,860
checks so that's specifically checking

623
00:25:25,460 --> 00:25:29,330
to see if there's<font color="#CCCCCC"> more than one pre fit</font>

624
00:25:27,860 --> 00:25:32,330
the same prefix that's<font color="#CCCCCC"> being advertised</font>

625
00:25:29,330 --> 00:25:33,740
by more than<font color="#E5E5E5"> one</font><font color="#CCCCCC"> AAS actively and this</font>

626
00:25:32,330 --> 00:25:36,230
is kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> period-based</font>

627
00:25:33,740 --> 00:25:37,460
so<font color="#E5E5E5"> we do have</font><font color="#CCCCCC"> a period of</font><font color="#E5E5E5"> time because</font>

628
00:25:36,230 --> 00:25:38,920
<font color="#CCCCCC">we do</font><font color="#E5E5E5"> expect that there could be</font>

629
00:25:37,460 --> 00:25:42,830
convergence and there also<font color="#E5E5E5"> could</font><font color="#CCCCCC"> be</font>

630
00:25:38,920 --> 00:25:44,540
cases<font color="#E5E5E5"> where you are like within Cisco we</font>

631
00:25:42,830 --> 00:25:48,080
have a lot of<font color="#E5E5E5"> a SS and we can</font><font color="#CCCCCC"> move</font>

632
00:25:44,540 --> 00:25:49,280
things<font color="#E5E5E5"> around and it could be that I get</font>

633
00:25:48,080 --> 00:25:51,020
an<font color="#CCCCCC"> a s from somebody and</font><font color="#E5E5E5"> they're like</font>

634
00:25:49,280 --> 00:25:52,220
<font color="#E5E5E5">cool or</font><font color="#CCCCCC"> a prefix</font><font color="#E5E5E5"> and then I want to move</font>

635
00:25:51,020 --> 00:25:53,960
it<font color="#CCCCCC"> to a different</font><font color="#E5E5E5"> ass and I'm gonna</font>

636
00:25:52,220 --> 00:25:55,220
advertise<font color="#E5E5E5"> it but chances</font><font color="#CCCCCC"> are I'm not</font>

637
00:25:53,960 --> 00:25:57,170
going to do<font color="#E5E5E5"> it within a split second of</font>

638
00:25:55,220 --> 00:25:58,580
time<font color="#E5E5E5"> it's usually going to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> that it's</font>

639
00:25:57,170 --> 00:26:00,800
a<font color="#E5E5E5"> longer period of time that that takes</font>

640
00:25:58,580 --> 00:26:03,139
place so we typically<font color="#E5E5E5"> want to look at a</font>

641
00:26:00,800 --> 00:26:06,139
period based to see if<font color="#E5E5E5"> this prefix is</font>

642
00:26:03,140 --> 00:26:08,030
being advertised<font color="#E5E5E5"> actively and since we</font>

643
00:26:06,140 --> 00:26:12,110
have the pre<font color="#E5E5E5"> rib information we can see</font>

644
00:26:08,030 --> 00:26:13,520
if the prefix is being filtered<font color="#E5E5E5"> and you</font>

645
00:26:12,110 --> 00:26:14,750
may not be in<font color="#E5E5E5"> your routing tables but we</font>

646
00:26:13,520 --> 00:26:15,980
can see<font color="#E5E5E5"> that it's still being received</font>

647
00:26:14,750 --> 00:26:18,050
so we can still<font color="#E5E5E5"> see that there's a</font>

648
00:26:15,980 --> 00:26:19,760
<font color="#E5E5E5">conflict and if there is a conflict we</font>

649
00:26:18,050 --> 00:26:21,200
do check the<font color="#CCCCCC"> upstreams again so we</font>

650
00:26:19,760 --> 00:26:23,720
determined<font color="#CCCCCC"> that do they share</font><font color="#E5E5E5"> the same</font>

651
00:26:21,200 --> 00:26:26,870
<font color="#E5E5E5">up streams</font><font color="#CCCCCC"> and if they don't</font><font color="#E5E5E5"> share the</font>

652
00:26:23,720 --> 00:26:28,880
same upstream providers<font color="#E5E5E5"> then we would</font>

653
00:26:26,870 --> 00:26:30,889
immediately<font color="#E5E5E5"> alert</font><font color="#CCCCCC"> if they do share</font><font color="#E5E5E5"> the</font>

654
00:26:28,880 --> 00:26:33,800
<font color="#CCCCCC">same upstream provider</font><font color="#E5E5E5"> we'd want to</font>

655
00:26:30,890 --> 00:26:35,750
check<font color="#CCCCCC"> to see</font><font color="#E5E5E5"> if it's if it's</font><font color="#CCCCCC"> equal or</font>

656
00:26:33,800 --> 00:26:37,700
better in the sense of the advertisement

657
00:26:35,750 --> 00:26:40,640
so based off of what we know as far as

658
00:26:37,700 --> 00:26:42,020
<font color="#CCCCCC">the standard selection process</font><font color="#E5E5E5"> but as</font>

659
00:26:40,640 --> 00:26:44,059
well<font color="#E5E5E5"> as the communities that we know</font>

660
00:26:42,020 --> 00:26:47,300
that are being implemented<font color="#E5E5E5"> we can</font>

661
00:26:44,059 --> 00:26:50,120
determine if if that<font color="#E5E5E5"> prefix is a threat</font>

662
00:26:47,300 --> 00:26:51,740
if that prefix is a threat<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take over</font>

663
00:26:50,120 --> 00:26:54,229
potentially traffic we would want<font color="#CCCCCC"> to</font>

664
00:26:51,740 --> 00:26:57,140
alert if it's not<font color="#E5E5E5"> we may not want to</font>

665
00:26:54,230 --> 00:26:58,070
alert on<font color="#CCCCCC"> that at</font><font color="#E5E5E5"> this phase if we were</font>

666
00:26:57,140 --> 00:26:59,540
to<font color="#E5E5E5"> look at this right</font><font color="#CCCCCC"> now there's</font>

667
00:26:58,070 --> 00:27:03,428
roughly around<font color="#CCCCCC"> a thousand prefixes that</font>

668
00:26:59,540 --> 00:27:05,899
<font color="#E5E5E5">that actually</font><font color="#CCCCCC"> match this condition today</font>

669
00:27:03,429 --> 00:27:08,720
so<font color="#E5E5E5"> another check is</font><font color="#CCCCCC"> to look for up</font>

670
00:27:05,900 --> 00:27:10,010
streams that change so this the best use

671
00:27:08,720 --> 00:27:11,750
case<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this would be</font><font color="#CCCCCC"> like if you have</font>

672
00:27:10,010 --> 00:27:12,629
a public peering and your public<font color="#CCCCCC"> peer</font>

673
00:27:11,750 --> 00:27:15,300
that<font color="#CCCCCC"> you're your</font>

674
00:27:12,630 --> 00:27:17,190
with decides to originate your prefix so

675
00:27:15,300 --> 00:27:19,320
you<font color="#E5E5E5"> advertise them your prefix</font><font color="#CCCCCC"> day</font>

676
00:27:17,190 --> 00:27:21,720
<font color="#E5E5E5">intern advertise it</font><font color="#CCCCCC"> they've become an</font>

677
00:27:19,320 --> 00:27:23,490
upstream for you and in<font color="#E5E5E5"> this check here</font>

678
00:27:21,720 --> 00:27:26,250
we specifically look to see if there's a

679
00:27:23,490 --> 00:27:28,920
new upstream<font color="#E5E5E5"> and if we suddenly see</font><font color="#CCCCCC"> that</font>

680
00:27:26,250 --> 00:27:31,740
this<font color="#E5E5E5"> new upstream appears we would alert</font>

681
00:27:28,920 --> 00:27:32,910
and say<font color="#CCCCCC"> that's that something's</font>

682
00:27:31,740 --> 00:27:36,810
suspicious<font color="#E5E5E5"> about</font><font color="#CCCCCC"> that because that</font>

683
00:27:32,910 --> 00:27:38,700
upstream wasn't there before<font color="#CCCCCC"> we also can</font>

684
00:27:36,810 --> 00:27:40,620
do a level of monitoring<font color="#E5E5E5"> at the same</font>

685
00:27:38,700 --> 00:27:42,420
type<font color="#CCCCCC"> of check is that if somebody</font><font color="#E5E5E5"> was</font>

686
00:27:40,620 --> 00:27:43,949
never a transit to begin with and they

687
00:27:42,420 --> 00:27:45,630
suddenly become<font color="#E5E5E5"> transit we can</font>

688
00:27:43,950 --> 00:27:47,730
immediately<font color="#E5E5E5"> alert on that</font><font color="#CCCCCC"> as well</font><font color="#E5E5E5"> so</font>

689
00:27:45,630 --> 00:27:50,850
<font color="#CCCCCC">it's kind of the same type of upstream</font>

690
00:27:47,730 --> 00:27:54,060
check another check that we want<font color="#CCCCCC"> to do</font>

691
00:27:50,850 --> 00:27:55,830
is anything<font color="#CCCCCC"> this selection based</font>

692
00:27:54,060 --> 00:27:58,169
<font color="#E5E5E5">actually be changing</font><font color="#CCCCCC"> so any well-known</font>

693
00:27:55,830 --> 00:28:01,199
<font color="#E5E5E5">communities that change any communities</font>

694
00:27:58,170 --> 00:28:02,730
within<font color="#E5E5E5"> the topology so with with this</font>

695
00:28:01,200 --> 00:28:06,080
collection<font color="#E5E5E5"> process we can monitor</font>

696
00:28:02,730 --> 00:28:08,640
internal ibgp stuff<font color="#CCCCCC"> as well as outside</font>

697
00:28:06,080 --> 00:28:11,250
<font color="#E5E5E5">ebgp peering connections from the</font>

698
00:28:08,640 --> 00:28:13,140
outside<font color="#CCCCCC"> in</font><font color="#E5E5E5"> versus inside out and with</font>

699
00:28:11,250 --> 00:28:14,340
the internal<font color="#CCCCCC"> information we can look at</font>

700
00:28:13,140 --> 00:28:16,410
the communities and<font color="#E5E5E5"> knowing the</font>

701
00:28:14,340 --> 00:28:17,699
community<font color="#E5E5E5"> mapping we can determine if</font>

702
00:28:16,410 --> 00:28:20,040
<font color="#E5E5E5">there</font><font color="#CCCCCC"> is anything that</font><font color="#E5E5E5"> would be a</font>

703
00:28:17,700 --> 00:28:22,260
selection based change type of event<font color="#E5E5E5"> and</font>

704
00:28:20,040 --> 00:28:24,000
if we see that that<font color="#E5E5E5"> could</font><font color="#CCCCCC"> be something</font>

705
00:28:22,260 --> 00:28:26,580
that<font color="#E5E5E5"> we want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> analyze on the spread of</font>

706
00:28:24,000 --> 00:28:29,580
<font color="#CCCCCC">that</font><font color="#E5E5E5"> change</font><font color="#CCCCCC"> one of them would be to look</font>

707
00:28:26,580 --> 00:28:30,629
at geocoding as far as is there a big

708
00:28:29,580 --> 00:28:32,310
regional change

709
00:28:30,630 --> 00:28:35,520
did it affect an entire<font color="#CCCCCC"> region</font><font color="#E5E5E5"> and did</font>

710
00:28:32,310 --> 00:28:37,320
something<font color="#E5E5E5"> move between regions and in is</font>

711
00:28:35,520 --> 00:28:41,430
there a<font color="#E5E5E5"> conflict with region based</font>

712
00:28:37,320 --> 00:28:43,740
community<font color="#CCCCCC"> identification</font><font color="#E5E5E5"> or is there a</font>

713
00:28:41,430 --> 00:28:45,780
change from<font color="#E5E5E5"> customer prefixes that</font>

714
00:28:43,740 --> 00:28:47,310
<font color="#CCCCCC">suddenly shifted over to a partner or</font>

715
00:28:45,780 --> 00:28:50,070
suddenly suddenly<font color="#E5E5E5"> shifted over to a</font>

716
00:28:47,310 --> 00:28:52,020
<font color="#E5E5E5">public pure classification</font><font color="#CCCCCC"> based off of</font>

717
00:28:50,070 --> 00:28:53,610
community and if that happened we would

718
00:28:52,020 --> 00:28:56,610
want to<font color="#CCCCCC"> be alerted on something like</font>

719
00:28:53,610 --> 00:28:59,070
<font color="#E5E5E5">that if it impacted several prefixes or</font>

720
00:28:56,610 --> 00:29:02,370
impacted<font color="#E5E5E5"> a significant amount of</font>

721
00:28:59,070 --> 00:29:05,790
distinct<font color="#CCCCCC"> a essence originating essence</font>

722
00:29:02,370 --> 00:29:07,260
<font color="#CCCCCC">we can do</font><font color="#E5E5E5"> standard snapshotting so you</font>

723
00:29:05,790 --> 00:29:08,730
can snapshot at any time<font color="#E5E5E5"> the writing</font>

724
00:29:07,260 --> 00:29:11,040
<font color="#CCCCCC">tables</font><font color="#E5E5E5"> with all the attributes and then</font>

725
00:29:08,730 --> 00:29:12,450
you can do a very simple diff<font color="#E5E5E5"> and it can</font>

726
00:29:11,040 --> 00:29:14,040
tell you<font color="#E5E5E5"> if there's any significant</font>

727
00:29:12,450 --> 00:29:15,570
changes with<font color="#CCCCCC"> that</font><font color="#E5E5E5"> same thing for</font>

728
00:29:14,040 --> 00:29:18,480
<font color="#E5E5E5">scheduled reporting you</font><font color="#CCCCCC"> can do this</font>

729
00:29:15,570 --> 00:29:20,610
interval based you<font color="#CCCCCC"> can take</font><font color="#E5E5E5"> snapshots</font>

730
00:29:18,480 --> 00:29:22,470
every once in a while<font color="#E5E5E5"> and alert if</font>

731
00:29:20,610 --> 00:29:24,570
there's a problem<font color="#E5E5E5"> with that and any</font>

732
00:29:22,470 --> 00:29:26,200
attribute can be<font color="#E5E5E5"> monitored so whatever</font>

733
00:29:24,570 --> 00:29:29,110
you<font color="#E5E5E5"> want to monitor within the attribute</font>

734
00:29:26,200 --> 00:29:31,090
they're available<font color="#E5E5E5"> to to look at them and</font>

735
00:29:29,110 --> 00:29:33,639
to alert if there is a<font color="#E5E5E5"> presence of an</font>

736
00:29:31,090 --> 00:29:35,409
<font color="#CCCCCC">attribute or a lack of presence of an</font>

737
00:29:33,640 --> 00:29:37,510
attribute<font color="#CCCCCC"> or if there's a combination</font>

738
00:29:35,410 --> 00:29:38,920
that<font color="#E5E5E5"> doesn't make sense</font><font color="#CCCCCC"> like if you</font>

739
00:29:37,510 --> 00:29:41,680
<font color="#E5E5E5">expect a certain community string to</font>

740
00:29:38,920 --> 00:29:45,370
always have<font color="#E5E5E5"> prepending and let's say the</font>

741
00:29:41,680 --> 00:29:46,720
prepending is not there<font color="#CCCCCC"> or if you see</font>

742
00:29:45,370 --> 00:29:49,510
that<font color="#CCCCCC"> two community strings should never</font>

743
00:29:46,720 --> 00:29:51,700
be on<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> advertisement you can</font>

744
00:29:49,510 --> 00:29:55,690
<font color="#E5E5E5">alert on those types of conditions very</font>

745
00:29:51,700 --> 00:29:58,920
easily so<font color="#E5E5E5"> another check is</font><font color="#CCCCCC"> to look</font>

746
00:29:55,690 --> 00:30:02,650
holistically across<font color="#E5E5E5"> the entire data set</font>

747
00:29:58,920 --> 00:30:07,000
<font color="#E5E5E5">using the same</font><font color="#CCCCCC"> ASN analysis we can</font><font color="#E5E5E5"> look</font>

748
00:30:02,650 --> 00:30:09,490
at the advertisements on a per<font color="#CCCCCC"> AAS basis</font>

749
00:30:07,000 --> 00:30:12,280
with distinct<font color="#E5E5E5"> Priya prefixes so we can</font>

750
00:30:09,490 --> 00:30:14,470
count for each<font color="#CCCCCC"> ASN within the AAS path</font>

751
00:30:12,280 --> 00:30:18,040
we<font color="#CCCCCC"> can count the prefixes distinctly</font>

752
00:30:14,470 --> 00:30:21,580
that<font color="#E5E5E5"> we see that contain that</font><font color="#CCCCCC"> ASN so in</font>

753
00:30:18,040 --> 00:30:25,300
this case here the 3491<font color="#E5E5E5"> or BTN we can</font>

754
00:30:21,580 --> 00:30:27,310
see that<font color="#CCCCCC"> we were at we had 27,000 active</font>

755
00:30:25,300 --> 00:30:30,280
prefixes that<font color="#CCCCCC"> were being</font><font color="#E5E5E5"> used distinctly</font>

756
00:30:27,310 --> 00:30:33,000
and it drops<font color="#E5E5E5"> and if it drops</font><font color="#CCCCCC"> we would</font>

757
00:30:30,280 --> 00:30:35,530
<font color="#E5E5E5">then do a spread analysis on that and</font>

758
00:30:33,000 --> 00:30:39,370
investigate<font color="#E5E5E5"> how big of an impact that</font>

759
00:30:35,530 --> 00:30:43,330
<font color="#E5E5E5">was and if it was small or are focused</font>

760
00:30:39,370 --> 00:30:45,790
on<font color="#E5E5E5"> a specific</font><font color="#CCCCCC"> ASN or our community</font><font color="#E5E5E5"> we</font>

761
00:30:43,330 --> 00:30:48,639
might attribute that<font color="#CCCCCC"> to traffic shifting</font>

762
00:30:45,790 --> 00:30:51,580
and not considered a problem<font color="#E5E5E5"> but if the</font>

763
00:30:48,640 --> 00:30:53,020
spread was hundreds of a<font color="#CCCCCC"> s's that might</font>

764
00:30:51,580 --> 00:30:55,480
be something a little<font color="#CCCCCC"> odd or suspicious</font>

765
00:30:53,020 --> 00:30:58,300
and we might<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to alert on that and</font>

766
00:30:55,480 --> 00:31:00,820
<font color="#E5E5E5">this is done in both a drop as well as</font>

767
00:30:58,300 --> 00:31:04,389
an increase<font color="#E5E5E5"> we can also do the same</font>

768
00:31:00,820 --> 00:31:06,220
<font color="#CCCCCC">thing if when we look at the transit or</font>

769
00:31:04,390 --> 00:31:09,250
the origination as well so we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> look</font>

770
00:31:06,220 --> 00:31:11,350
<font color="#E5E5E5">at if a customer or a public</font><font color="#CCCCCC"> peer or</font>

771
00:31:09,250 --> 00:31:13,990
anybody from the origination perspective

772
00:31:11,350 --> 00:31:16,659
we can<font color="#E5E5E5"> see if they suddenly increase or</font>

773
00:31:13,990 --> 00:31:19,090
decrease within origination<font color="#CCCCCC"> and we can</font>

774
00:31:16,660 --> 00:31:21,640
alert on that<font color="#CCCCCC"> no this</font><font color="#E5E5E5"> is different</font><font color="#CCCCCC"> than</font>

775
00:31:19,090 --> 00:31:23,770
<font color="#E5E5E5">Pierce 'it is</font><font color="#CCCCCC"> six we also do have Pierce</font>

776
00:31:21,640 --> 00:31:26,190
statistics with<font color="#E5E5E5"> B and P so you can see</font>

777
00:31:23,770 --> 00:31:30,070
<font color="#E5E5E5">exactly how many prefixes have been</font>

778
00:31:26,190 --> 00:31:31,720
accepted with<font color="#E5E5E5"> pre policy and post policy</font>

779
00:31:30,070 --> 00:31:34,290
<font color="#E5E5E5">you can also see how many prefixes</font><font color="#CCCCCC"> have</font>

780
00:31:31,720 --> 00:31:37,750
been rejected<font color="#E5E5E5"> or duplicate and so forth</font>

781
00:31:34,290 --> 00:31:38,500
<font color="#CCCCCC">with</font><font color="#E5E5E5"> that data that's not on a</font><font color="#CCCCCC"> Prius n</font>

782
00:31:37,750 --> 00:31:40,720
basis that's

783
00:31:38,500 --> 00:31:42,100
that's the whole entire pier but we

784
00:31:40,720 --> 00:31:42,820
would also<font color="#E5E5E5"> alert on something like that</font>

785
00:31:42,100 --> 00:31:46,240
<font color="#CCCCCC">as well</font>

786
00:31:42,820 --> 00:31:48,220
if the pier were to change in a

787
00:31:46,240 --> 00:31:53,130
significant direction of<font color="#E5E5E5"> positive or</font>

788
00:31:48,220 --> 00:31:57,490
<font color="#E5E5E5">negative so no matter what type</font><font color="#CCCCCC"> of</font>

789
00:31:53,130 --> 00:31:59,140
analytics that<font color="#E5E5E5"> you want to do open B and</font>

790
00:31:57,490 --> 00:32:02,230
<font color="#E5E5E5">P does collect the data and</font><font color="#CCCCCC"> make it</font>

791
00:31:59,140 --> 00:32:05,289
<font color="#CCCCCC">available in</font><font color="#E5E5E5"> a way that you can provide</font>

792
00:32:02,230 --> 00:32:07,450
a<font color="#CCCCCC"> stable</font><font color="#E5E5E5"> environment</font><font color="#CCCCCC"> for the BMP</font>

793
00:32:05,289 --> 00:32:10,210
collection of the<font color="#E5E5E5"> data and then have</font>

794
00:32:07,450 --> 00:32:12,909
<font color="#CCCCCC">that</font><font color="#E5E5E5"> somewhat volatile environment for</font>

795
00:32:10,210 --> 00:32:15,309
consuming applications which is<font color="#E5E5E5"> totally</font>

796
00:32:12,909 --> 00:32:16,900
<font color="#E5E5E5">fine</font><font color="#CCCCCC"> you can satisfy different types of</font>

797
00:32:15,309 --> 00:32:20,139
analytics so<font color="#E5E5E5"> real-time</font><font color="#CCCCCC"> on-demand</font>

798
00:32:16,900 --> 00:32:23,820
<font color="#E5E5E5">discovery investigation topologies</font>

799
00:32:20,140 --> 00:32:27,220
<font color="#E5E5E5">pretty much anything</font><font color="#CCCCCC"> bgp related</font><font color="#E5E5E5"> you can</font>

800
00:32:23,820 --> 00:32:31,240
<font color="#E5E5E5">feed through</font><font color="#CCCCCC"> and analyze within</font><font color="#E5E5E5"> use an</font>

801
00:32:27,220 --> 00:32:34,090
open BMP<font color="#E5E5E5"> and you can use this today so</font>

802
00:32:31,240 --> 00:32:36,220
we do<font color="#E5E5E5"> have a docker hub</font><font color="#CCCCCC"> install you can</font>

803
00:32:34,090 --> 00:32:38,500
actually do docker pull open BMP /a<font color="#E5E5E5"> i/o</font>

804
00:32:36,220 --> 00:32:40,210
which stands for all-in-one includes

805
00:32:38,500 --> 00:32:43,330
<font color="#E5E5E5">everything configured and you can start</font>

806
00:32:40,210 --> 00:32:46,240
<font color="#E5E5E5">playing around with it</font><font color="#CCCCCC"> juniper and</font><font color="#E5E5E5"> Cisco</font>

807
00:32:43,330 --> 00:32:49,030
does support this so you can turn this

808
00:32:46,240 --> 00:32:52,809
on<font color="#E5E5E5"> lab routers or anything else</font><font color="#CCCCCC"> we also</font>

809
00:32:49,030 --> 00:32:54,158
can<font color="#CCCCCC"> make available live feeds</font><font color="#E5E5E5"> to where</font>

810
00:32:52,809 --> 00:32:57,250
you can<font color="#E5E5E5"> start playing around with this</font>

811
00:32:54,159 --> 00:32:59,860
as well<font color="#CCCCCC"> from</font><font color="#E5E5E5"> any internet</font><font color="#CCCCCC"> connection</font><font color="#E5E5E5"> and</font>

812
00:32:57,250 --> 00:33:04,870
<font color="#E5E5E5">all the documentation is an open</font><font color="#CCCCCC"> BNP org</font>

813
00:32:59,860 --> 00:33:13,020
<font color="#E5E5E5">to do this so with that does anybody</font>

814
00:33:04,870 --> 00:33:13,020
have any questions great

815
00:33:13,360 --> 00:33:23,600
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> got some time back job Snyder's ntt</font>

816
00:33:17,600 --> 00:33:26,330
<font color="#CCCCCC">Oh Tim thank</font><font color="#E5E5E5"> you so much for pushing</font>

817
00:33:23,600 --> 00:33:29,659
open BMP into the open source<font color="#CCCCCC"> roles i</font>

818
00:33:26,330 --> 00:33:33,080
will dare to<font color="#E5E5E5"> go as far as say that this</font>

819
00:33:29,660 --> 00:33:36,280
is a really sexy<font color="#E5E5E5"> piece</font><font color="#CCCCCC"> of software</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> i</font>

820
00:33:33,080 --> 00:33:39,260
see many many opportunities<font color="#E5E5E5"> to</font><font color="#CCCCCC"> leverage</font>

821
00:33:36,280 --> 00:33:40,910
that the architecture<font color="#E5E5E5"> you</font><font color="#CCCCCC"> built to for</font>

822
00:33:39,260 --> 00:33:44,440
<font color="#E5E5E5">instance increase the quality</font><font color="#CCCCCC"> of our</font>

823
00:33:40,910 --> 00:33:47,030
prefix filters reduce<font color="#E5E5E5"> the size of those</font>

824
00:33:44,440 --> 00:33:50,950
<font color="#E5E5E5">quicker find route leaks</font><font color="#CCCCCC"> as you</font>

825
00:33:47,030 --> 00:33:55,129
<font color="#E5E5E5">demonstrated so thank you very much</font>

826
00:33:50,950 --> 00:34:00,130
<font color="#CCCCCC">however maybe your</font><font color="#E5E5E5"> employer might need</font>

827
00:33:55,130 --> 00:34:03,710
to do<font color="#CCCCCC"> some extra work feeding stuff yes</font>

828
00:34:00,130 --> 00:34:06,770
because<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the you know if it were</font>

829
00:34:03,710 --> 00:34:09,350
to<font color="#CCCCCC"> work stably</font><font color="#E5E5E5"> on iOS XR</font><font color="#CCCCCC"> i would deploy</font>

830
00:34:06,770 --> 00:34:13,780
tomorrow<font color="#E5E5E5"> but there are route leaks and</font>

831
00:34:09,350 --> 00:34:16,909
route refreshes in some scenarios<font color="#CCCCCC"> and</font>

832
00:34:13,780 --> 00:34:18,919
<font color="#E5E5E5">i'm lacking the post policy bits</font><font color="#CCCCCC"> it only</font>

833
00:34:16,909 --> 00:34:21,710
sends pre policy for<font color="#CCCCCC"> instance so i</font>

834
00:34:18,918 --> 00:34:24,980
cannot analyze<font color="#CCCCCC"> real time</font><font color="#E5E5E5"> whether the</font>

835
00:34:21,710 --> 00:34:27,619
router is honoring<font color="#CCCCCC"> the routing policy so</font>

836
00:34:24,980 --> 00:34:30,679
how can we help<font color="#CCCCCC"> you</font><font color="#E5E5E5"> make this happen</font>

837
00:34:27,619 --> 00:34:36,619
<font color="#CCCCCC">because</font><font color="#E5E5E5"> you finish this yeah you've got</font>

838
00:34:30,679 --> 00:34:38,359
spare time oh yeah<font color="#CCCCCC"> so you know obviously</font>

839
00:34:36,619 --> 00:34:40,520
<font color="#CCCCCC">i think one of the challenges with BMP</font>

840
00:34:38,359 --> 00:34:43,699
is it's been around for for a few years

841
00:34:40,520 --> 00:34:46,070
and<font color="#E5E5E5"> i think the collection hasn't been</font>

842
00:34:43,699 --> 00:34:47,629
mature enough and it hasn't<font color="#E5E5E5"> really been</font>

843
00:34:46,070 --> 00:34:50,090
adopted too well so it's<font color="#CCCCCC"> been</font>

844
00:34:47,629 --> 00:34:53,149
implemented<font color="#CCCCCC"> but</font><font color="#E5E5E5"> as you mentioned the</font>

845
00:34:50,090 --> 00:34:55,790
implementation is pre policy only<font color="#E5E5E5"> right</font>

846
00:34:53,149 --> 00:34:57,650
<font color="#CCCCCC">now on</font><font color="#E5E5E5"> cisco and</font><font color="#CCCCCC"> it does use route</font>

847
00:34:55,790 --> 00:34:59,570
refreshes as a way to collect<font color="#E5E5E5"> the data</font>

848
00:34:57,650 --> 00:35:03,380
which has its advantages and also

849
00:34:59,570 --> 00:35:04,970
<font color="#E5E5E5">negatives but within that</font><font color="#CCCCCC"> i think it how</font>

850
00:35:03,380 --> 00:35:07,820
<font color="#E5E5E5">any how everybody can help is obviously</font>

851
00:35:04,970 --> 00:35:10,490
vendors<font color="#CCCCCC"> typically respond quite well</font><font color="#E5E5E5"> to</font>

852
00:35:07,820 --> 00:35:12,680
customer demand and customer requests<font color="#CCCCCC"> i</font>

853
00:35:10,490 --> 00:35:14,720
really<font color="#E5E5E5"> believe that everybody will find</font>

854
00:35:12,680 --> 00:35:16,399
<font color="#E5E5E5">that this this is really useful and it's</font>

855
00:35:14,720 --> 00:35:18,350
a very efficient<font color="#E5E5E5"> way to get this data in</font>

856
00:35:16,400 --> 00:35:19,640
a live fashion<font color="#E5E5E5"> this isn't you know</font>

857
00:35:18,350 --> 00:35:23,210
<font color="#CCCCCC">interval-based</font><font color="#E5E5E5"> or anything</font><font color="#CCCCCC"> it's it's</font>

858
00:35:19,640 --> 00:35:25,850
live going into into the data stream<font color="#CCCCCC"> so</font>

859
00:35:23,210 --> 00:35:28,550
<font color="#CCCCCC">i think it's always</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> but</font>

860
00:35:25,850 --> 00:35:31,339
<font color="#E5E5E5">I hope that I do have some influence so</font>

861
00:35:28,550 --> 00:35:34,040
we are going to also be we're right in

862
00:35:31,340 --> 00:35:35,690
the middle of discussing changes to

863
00:35:34,040 --> 00:35:39,710
<font color="#E5E5E5">support like the post policy</font><font color="#CCCCCC"> information</font>

864
00:35:35,690 --> 00:35:42,560
as well as not having<font color="#E5E5E5"> the route</font><font color="#CCCCCC"> refresh</font>

865
00:35:39,710 --> 00:35:46,670
<font color="#E5E5E5">as being a requirement</font><font color="#CCCCCC"> to do the convey</font>

866
00:35:42,560 --> 00:35:48,110
really yeah the memory thing is that

867
00:35:46,670 --> 00:35:50,510
will go away<font color="#E5E5E5"> as</font><font color="#CCCCCC"> well because we will</font>

868
00:35:48,110 --> 00:35:51,560
start<font color="#E5E5E5"> using it won't be it because</font>

869
00:35:50,510 --> 00:35:53,240
<font color="#CCCCCC">that's done because</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the route</font>

870
00:35:51,560 --> 00:35:55,370
refreshes<font color="#E5E5E5"> right the route refresh was</font>

871
00:35:53,240 --> 00:35:58,129
come in<font color="#CCCCCC"> its got</font><font color="#E5E5E5"> taken all this data and</font>

872
00:35:55,370 --> 00:36:00,770
<font color="#CCCCCC">then it doesn't</font><font color="#E5E5E5"> store it so it needs to</font>

873
00:35:58,130 --> 00:36:03,110
either has<font color="#CCCCCC"> to drop</font><font color="#E5E5E5"> it or or cache it</font>

874
00:36:00,770 --> 00:36:04,520
which is why it does<font color="#CCCCCC"> that right now that</font>

875
00:36:03,110 --> 00:36:08,090
will change<font color="#E5E5E5"> to where it'll be more</font>

876
00:36:04,520 --> 00:36:09,560
maintained<font color="#E5E5E5"> which is pretty much what</font><font color="#CCCCCC"> you</font>

877
00:36:08,090 --> 00:36:13,460
see<font color="#E5E5E5"> on the Juniper side which is what</font>

878
00:36:09,560 --> 00:36:15,920
<font color="#E5E5E5">junipers doing today sounds good thank</font>

879
00:36:13,460 --> 00:36:18,410
you for<font color="#E5E5E5"> thanks and I would also ask</font>

880
00:36:15,920 --> 00:36:20,030
everybody to<font color="#E5E5E5"> also ask other vendors to</font>

881
00:36:18,410 --> 00:36:23,509
start implementing<font color="#CCCCCC"> BMP so even like</font>

882
00:36:20,030 --> 00:36:29,960
<font color="#CCCCCC">Alcatel</font><font color="#E5E5E5"> and everybody else to to get BMP</font>

883
00:36:23,510 --> 00:36:33,350
implemented<font color="#E5E5E5"> in other products so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> J in</font>

884
00:36:29,960 --> 00:36:36,320
<font color="#E5E5E5">other strange places um you said you're</font>

885
00:36:33,350 --> 00:36:38,029
offering feeds we're not offering<font color="#E5E5E5"> our</font>

886
00:36:36,320 --> 00:36:41,690
data<font color="#E5E5E5"> feed so we got a data feed</font><font color="#CCCCCC"> from you</font>

887
00:36:38,030 --> 00:36:44,990
<font color="#CCCCCC">we don't make</font><font color="#E5E5E5"> that available</font><font color="#CCCCCC"> we're just</font>

888
00:36:41,690 --> 00:36:49,100
<font color="#E5E5E5">wondering how you decide privacy and</font>

889
00:36:44,990 --> 00:36:51,080
policy<font color="#E5E5E5"> issues feeds we don't give out</font>

890
00:36:49,100 --> 00:36:53,420
<font color="#E5E5E5">anything other than our own feed that we</font>

891
00:36:51,080 --> 00:36:55,819
have which<font color="#CCCCCC"> is only to ourselves</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> the</font>

892
00:36:53,420 --> 00:37:03,620
Cisco<font color="#E5E5E5"> Sciences</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> so that's the</font>

893
00:36:55,820 --> 00:37:10,340
only<font color="#CCCCCC"> one</font><font color="#E5E5E5"> we thank you yeah</font><font color="#CCCCCC"> Tony Tobruk</font>

894
00:37:03,620 --> 00:37:11,420
Comcast so is the the example thing that

895
00:37:10,340 --> 00:37:13,400
you have the docker

896
00:37:11,420 --> 00:37:16,490
does that include<font color="#E5E5E5"> what pieces does that</font>

897
00:37:13,400 --> 00:37:19,370
include<font color="#E5E5E5"> the</font><font color="#CCCCCC"> docker image the document</font>

898
00:37:16,490 --> 00:37:22,390
image includes<font color="#E5E5E5"> Apache Kafka it includes</font>

899
00:37:19,370 --> 00:37:26,150
over me<font color="#E5E5E5"> and P collector it includes the</font>

900
00:37:22,390 --> 00:37:28,490
rest interface<font color="#E5E5E5"> to the my sequel database</font>

901
00:37:26,150 --> 00:37:30,800
and it also includes<font color="#E5E5E5"> my sequel or Maria</font>

902
00:37:28,490 --> 00:37:32,240
<font color="#E5E5E5">DB</font><font color="#CCCCCC"> and it's kind of</font><font color="#E5E5E5"> like an all-in-one</font>

903
00:37:30,800 --> 00:37:35,330
package so<font color="#E5E5E5"> that you can play around with</font>

904
00:37:32,240 --> 00:37:37,910
all<font color="#E5E5E5"> of</font><font color="#CCCCCC"> those will be bundling also the</font>

905
00:37:35,330 --> 00:37:39,109
other stuff as<font color="#E5E5E5"> well like a elasticsearch</font>

906
00:37:37,910 --> 00:37:41,390
things like that so<font color="#E5E5E5"> that</font>

907
00:37:39,109 --> 00:37:42,769
you can also play with elasticsearch<font color="#E5E5E5"> if</font>

908
00:37:41,390 --> 00:37:46,549
that's how you want to visualize<font color="#CCCCCC"> the</font>

909
00:37:42,769 --> 00:37:49,189
<font color="#E5E5E5">data</font><font color="#CCCCCC"> it's meant primarily for you to</font>

910
00:37:46,549 --> 00:37:50,749
test<font color="#E5E5E5"> it and evaluate it and play around</font>

911
00:37:49,190 --> 00:37:53,359
<font color="#CCCCCC">with</font><font color="#E5E5E5"> it without having</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> much work</font>

912
00:37:50,749 --> 00:37:54,980
at all in<font color="#CCCCCC"> fact you should in theory be</font>

913
00:37:53,359 --> 00:37:57,348
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to just do docker pool install it</font>

914
00:37:54,980 --> 00:38:01,999
and do docker run<font color="#E5E5E5"> and you should be</font>

915
00:37:57,349 --> 00:38:04,309
immediately<font color="#CCCCCC"> working with it</font><font color="#E5E5E5"> that fast</font><font color="#CCCCCC"> so</font>

916
00:38:01,999 --> 00:38:07,459
includes everything<font color="#E5E5E5"> to get started with</font>

917
00:38:04,309 --> 00:38:12,049
<font color="#CCCCCC">it ok but it's</font><font color="#E5E5E5"> not necessarily intended</font>

918
00:38:07,460 --> 00:38:14,440
<font color="#CCCCCC">to be performance</font><font color="#E5E5E5"> tuned when you run</font>

919
00:38:12,049 --> 00:38:17,029
docker you specify the memory

920
00:38:14,440 --> 00:38:20,089
constraints for the docker container

921
00:38:17,029 --> 00:38:24,589
<font color="#CCCCCC">that would be the only constraints</font><font color="#E5E5E5"> it is</font>

922
00:38:20,089 --> 00:38:26,210
discontent<font color="#CCCCCC"> to some extent</font><font color="#E5E5E5"> so depending</font>

923
00:38:24,589 --> 00:38:27,950
on the retention of how long you want

924
00:38:26,210 --> 00:38:30,700
<font color="#CCCCCC">the data for that could</font><font color="#E5E5E5"> require some</font>

925
00:38:27,950 --> 00:38:34,069
disk space but<font color="#E5E5E5"> that would</font><font color="#CCCCCC"> be the only</font>

926
00:38:30,700 --> 00:38:37,519
constraints it can run on a four gig

927
00:38:34,069 --> 00:38:38,900
machine<font color="#E5E5E5"> fine or or more depending on how</font>

928
00:38:37,519 --> 00:38:41,238
much<font color="#CCCCCC"> peering or how much information you</font>

929
00:38:38,900 --> 00:38:43,220
<font color="#E5E5E5">want to put in there and</font><font color="#CCCCCC"> it's there like</font>

930
00:38:41,239 --> 00:38:45,529
<font color="#E5E5E5">a community</font><font color="#CCCCCC"> discussion list I look</font>

931
00:38:43,220 --> 00:38:47,509
<font color="#CCCCCC">quickly at the webpage</font><font color="#E5E5E5"> but again I'm</font>

932
00:38:45,529 --> 00:38:51,769
<font color="#E5E5E5">sorry is there like a discussion list or</font>

933
00:38:47,509 --> 00:38:54,829
you know mailing<font color="#CCCCCC"> lists for we don't have</font>

934
00:38:51,769 --> 00:38:56,689
a mailing list right<font color="#CCCCCC"> now but you can</font>

935
00:38:54,829 --> 00:38:58,279
always go into github<font color="#CCCCCC"> register any</font>

936
00:38:56,690 --> 00:39:02,569
questions or anything there but then

937
00:38:58,279 --> 00:39:04,720
also we could create a mailing list<font color="#CCCCCC"> for</font>

938
00:39:02,569 --> 00:39:04,720
that

