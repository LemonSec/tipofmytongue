1
00:00:08,469 --> 00:00:13,040
<font color="#CCCCCC">alright good morning everyone I want to</font>

2
00:00:10,670 --> 00:00:16,309
<font color="#E5E5E5">welcome you to the tutorial we here have</font>

3
00:00:13,040 --> 00:00:17,960
Rohit bothra from brocade<font color="#E5E5E5"> communications</font>

4
00:00:16,309 --> 00:00:21,140
who is going to talk about the<font color="#E5E5E5"> pros and</font>

5
00:00:17,960 --> 00:00:24,760
<font color="#E5E5E5">cons of large-scale route reflector</font>

6
00:00:21,140 --> 00:00:24,760
deployments so thank you very<font color="#E5E5E5"> much</font>

7
00:00:26,140 --> 00:00:32,200
a very good<font color="#E5E5E5"> morning</font><font color="#CCCCCC"> everyone thanks</font><font color="#E5E5E5"> for</font>

8
00:00:28,630 --> 00:00:35,470
<font color="#E5E5E5">joining me this morning my name is Rohit</font>

9
00:00:32,200 --> 00:00:38,320
I work as a staff QA engineer for

10
00:00:35,470 --> 00:00:40,149
brocade so today's topic we are<font color="#CCCCCC"> going to</font>

11
00:00:38,320 --> 00:00:42,339
<font color="#CCCCCC">discuss is demystifying the pros and</font>

12
00:00:40,149 --> 00:00:44,910
<font color="#E5E5E5">cons of large-scale route reflector</font>

13
00:00:42,339 --> 00:00:44,910
deployments

14
00:00:48,020 --> 00:00:54,440
so<font color="#E5E5E5"> Oh first</font><font color="#CCCCCC"> part of the object we would</font>

15
00:00:52,220 --> 00:00:58,190
like to<font color="#E5E5E5"> go through what</font><font color="#CCCCCC"> are the options</font>

16
00:00:54,440 --> 00:01:01,430
available<font color="#CCCCCC"> for the ISPs for large-scale</font>

17
00:00:58,190 --> 00:01:03,709
deployments of internal bgp then we'll

18
00:01:01,430 --> 00:01:06,500
walk through what<font color="#CCCCCC"> are the deployment</font>

19
00:01:03,710 --> 00:01:09,170
models for route reflectors and what are

20
00:01:06,500 --> 00:01:13,700
the advantages disadvantages for each of

21
00:01:09,170 --> 00:01:15,890
those deployment model and we also would

22
00:01:13,700 --> 00:01:21,070
like<font color="#CCCCCC"> to discuss some of the pros and</font>

23
00:01:15,890 --> 00:01:21,070
<font color="#E5E5E5">cons of large-scale our deployments</font>

24
00:01:25,270 --> 00:01:31,298
so as we all know that when it comes<font color="#E5E5E5"> to</font>

25
00:01:28,179 --> 00:01:33,100
the interdomain routing<font color="#CCCCCC"> visibility</font>

26
00:01:31,299 --> 00:01:37,390
vector protocol which is widely used

27
00:01:33,100 --> 00:01:40,509
across the internet and for<font color="#E5E5E5"> specifically</font>

28
00:01:37,390 --> 00:01:43,780
for the large ISPs when they deploy bgp

29
00:01:40,509 --> 00:01:47,500
to the internal core routers so the

30
00:01:43,780 --> 00:01:52,689
challenges they face is a scaling so

31
00:01:47,500 --> 00:01:55,270
once you<font color="#CCCCCC"> have a very</font><font color="#E5E5E5"> large</font><font color="#CCCCCC"> setup of bgp</font>

32
00:01:52,689 --> 00:01:57,788
deployment so obviously the challenges

33
00:01:55,270 --> 00:01:59,709
are how you can scale well your protocol

34
00:01:57,789 --> 00:02:01,929
because at the end of the day<font color="#E5E5E5"> all of</font>

35
00:01:59,709 --> 00:02:04,479
<font color="#E5E5E5">your services depends on how you</font>

36
00:02:01,929 --> 00:02:06,959
actually deploy your pcp so the

37
00:02:04,479 --> 00:02:09,399
complexity again increases when you have

38
00:02:06,959 --> 00:02:13,870
different kind of services so if you

39
00:02:09,399 --> 00:02:15,819
look at a large piece of the challenges

40
00:02:13,870 --> 00:02:18,040
they face is a once they<font color="#E5E5E5"> deploy new</font>

41
00:02:15,819 --> 00:02:20,970
services they have to think<font color="#CCCCCC"> about their</font>

42
00:02:18,040 --> 00:02:23,739
internal routing scale abilities and

43
00:02:20,970 --> 00:02:27,730
reliabilities so what you are going to

44
00:02:23,739 --> 00:02:30,370
do<font color="#CCCCCC"> is that there are three options for</font>

45
00:02:27,730 --> 00:02:32,738
bgp large-scale deployments we want to

46
00:02:30,370 --> 00:02:34,799
discuss all three and specifically

47
00:02:32,739 --> 00:02:37,329
focusing on the route reflectors and

48
00:02:34,799 --> 00:02:39,519
some of the challenges or some of<font color="#E5E5E5"> the</font>

49
00:02:37,329 --> 00:02:43,739
disadvantages we are often<font color="#CCCCCC"> not discussed</font>

50
00:02:39,519 --> 00:02:43,739
which are related to route reflectors

51
00:02:47,540 --> 00:02:55,129
so first we<font color="#CCCCCC"> just go through</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the</font>

52
00:02:51,079 --> 00:02:59,090
basics of BJP so what is it and what<font color="#E5E5E5"> are</font>

53
00:02:55,129 --> 00:03:01,819
the main type of sessions which is

54
00:02:59,090 --> 00:03:05,840
related to<font color="#E5E5E5"> beta</font><font color="#CCCCCC"> P so as</font><font color="#E5E5E5"> you see in the</font>

55
00:03:01,819 --> 00:03:08,510
picture we<font color="#E5E5E5"> basically have a BGP ibgp an</font>

56
00:03:05,840 --> 00:03:12,319
igp which which actually made the core

57
00:03:08,510 --> 00:03:14,720
<font color="#CCCCCC">of any large-scale ISP so the role of</font>

58
00:03:12,319 --> 00:03:17,629
ibgp pairing is basically to exchange

59
00:03:14,720 --> 00:03:21,139
the external routes from different

60
00:03:17,629 --> 00:03:24,500
autonomous systems into your your<font color="#CCCCCC"> own</font>

61
00:03:21,139 --> 00:03:26,900
autonomous system the role of ibgp as<font color="#E5E5E5"> I</font>

62
00:03:24,500 --> 00:03:29,629
<font color="#E5E5E5">see is marked as</font><font color="#CCCCCC"> Green is basically runs</font>

63
00:03:26,900 --> 00:03:32,000
internal to<font color="#CCCCCC"> your network which is</font>

64
00:03:29,629 --> 00:03:36,048
responsible<font color="#CCCCCC"> to carry your customer</font>

65
00:03:32,000 --> 00:03:40,669
prefixes and partner prefixes throughout

66
00:03:36,049 --> 00:03:43,159
your network and underlying of your core

67
00:03:40,669 --> 00:03:45,409
network is basically your<font color="#CCCCCC"> IGP which is</font>

68
00:03:43,159 --> 00:03:52,489
<font color="#CCCCCC">responsible to transport the next top of</font>

69
00:03:45,409 --> 00:03:55,489
your bippy routers which it appears so

70
00:03:52,489 --> 00:03:59,120
you see basically of the r1 r2 and r3

71
00:03:55,489 --> 00:04:02,299
here<font color="#CCCCCC"> r denotes the next stops once you</font>

72
00:03:59,120 --> 00:04:07,669
<font color="#CCCCCC">have ebgp sessions your prefixes will be</font>

73
00:04:02,299 --> 00:04:09,409
delegated by your is to your internal s

74
00:04:07,669 --> 00:04:13,190
and then those<font color="#CCCCCC"> are actually passed</font>

75
00:04:09,409 --> 00:04:15,399
through<font color="#CCCCCC"> your ibgp to internal devices so</font>

76
00:04:13,190 --> 00:04:19,339
that's how you basically reach out to

77
00:04:15,400 --> 00:04:21,940
all<font color="#CCCCCC"> the prefixes inside</font><font color="#E5E5E5"> or outside the</font>

78
00:04:19,339 --> 00:04:21,940
<font color="#E5E5E5">domain</font>

79
00:04:24,280 --> 00:04:29,679
so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the forwarding paths once you</font>

80
00:04:26,560 --> 00:04:31,570
<font color="#E5E5E5">have the control path ready then you</font>

81
00:04:29,680 --> 00:04:34,270
basically reach out to those prefixes

82
00:04:31,570 --> 00:04:38,460
which are advertised across the

83
00:04:34,270 --> 00:04:38,460
<font color="#E5E5E5">interdomain</font><font color="#CCCCCC"> uses</font>

84
00:04:42,000 --> 00:04:47,370
so this is<font color="#E5E5E5"> in summary basically why you</font>

85
00:04:44,790 --> 00:04:51,810
need ebgp images basically you learn

86
00:04:47,370 --> 00:04:53,940
your prefixes from your neighbors ibgp

87
00:04:51,810 --> 00:04:56,250
is for your internal communication you

88
00:04:53,940 --> 00:04:59,490
delegate those routes to<font color="#CCCCCC"> your internal</font>

89
00:04:56,250 --> 00:05:02,610
core network and I gp's basically is the

90
00:04:59,490 --> 00:05:04,260
glue which ties the 0 which provides<font color="#E5E5E5"> you</font>

91
00:05:02,610 --> 00:05:09,870
the path for the beach by next<font color="#E5E5E5"> job</font>

92
00:05:04,260 --> 00:05:11,730
prefixes next top so now the comes the

93
00:05:09,870 --> 00:05:14,370
challenges right when you have a

94
00:05:11,730 --> 00:05:19,530
<font color="#E5E5E5">large-scale deployments you end up</font>

95
00:05:14,370 --> 00:05:22,340
having thousands of BGP speakers now the

96
00:05:19,530 --> 00:05:25,859
rule of ibgp says that your internal IP

97
00:05:22,340 --> 00:05:29,159
<font color="#CCCCCC">hp1</font><font color="#E5E5E5"> I visible prefix PS cannot advertise</font>

98
00:05:25,860 --> 00:05:32,120
the prefixes to another ibgp that's

99
00:05:29,160 --> 00:05:36,030
basically<font color="#CCCCCC"> the loop prevention of in BGP</font>

100
00:05:32,120 --> 00:05:39,210
so that's the reason we need to have

101
00:05:36,030 --> 00:05:42,030
full mess of all bitch bitch speakers

102
00:05:39,210 --> 00:05:45,419
inside your network so that brings the

103
00:05:42,030 --> 00:05:48,719
challenges of scalability so what

104
00:05:45,419 --> 00:05:51,120
happens when you have let's say tens of

105
00:05:48,720 --> 00:05:54,180
thousands<font color="#E5E5E5"> of devices you if you want to</font>

106
00:05:51,120 --> 00:05:56,280
scale those number of sessions it will

107
00:05:54,180 --> 00:06:01,770
be nightmare for you to know scale up

108
00:05:56,280 --> 00:06:04,020
and maintain those devices so this<font color="#E5E5E5"> is</font>

109
00:06:01,770 --> 00:06:08,690
one example where<font color="#E5E5E5"> you see there are only</font>

110
00:06:04,020 --> 00:06:08,690
four nodes which are connected full mesh

111
00:06:11,940 --> 00:06:17,910
so why we need the point-to-point

112
00:06:14,850 --> 00:06:20,640
connection in inside the<font color="#E5E5E5"> IBT because as</font>

113
00:06:17,910 --> 00:06:23,820
I said the<font color="#CCCCCC"> loop prevention mechanism in</font>

114
00:06:20,640 --> 00:06:26,370
BGP is such that the internal IP GPS

115
00:06:23,820 --> 00:06:28,920
doesn't carry the air spark so that's

116
00:06:26,370 --> 00:06:31,500
why you<font color="#E5E5E5"> need to have the</font><font color="#CCCCCC"> full mesh</font>

117
00:06:28,920 --> 00:06:38,310
connectivity between all your internal

118
00:06:31,500 --> 00:06:40,740
peers so let's see oh this<font color="#E5E5E5"> is typical</font>

119
00:06:38,310 --> 00:06:44,640
example of three cities let us consider

120
00:06:40,740 --> 00:06:47,820
where I have a pop if I am a large I

121
00:06:44,640 --> 00:06:51,240
speak and if I want to<font color="#E5E5E5"> deploy full mesh</font>

122
00:06:47,820 --> 00:06:53,310
of BJP just<font color="#E5E5E5"> imagine I need to run my</font>

123
00:06:51,240 --> 00:06:56,910
logical sessions across different

124
00:06:53,310 --> 00:07:01,500
routers inside my pop and this will not

125
00:06:56,910 --> 00:07:04,350
scale up very<font color="#CCCCCC"> much</font><font color="#E5E5E5"> so this is just</font>

126
00:07:01,500 --> 00:07:06,870
example how i can calculate<font color="#E5E5E5"> the number</font>

127
00:07:04,350 --> 00:07:09,840
of ibgp required if<font color="#E5E5E5"> I need to do</font>

128
00:07:06,870 --> 00:07:13,260
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> in full mesh just imagine if</font>

129
00:07:09,840 --> 00:07:15,210
I have a number of thousand routers set

130
00:07:13,260 --> 00:07:17,760
the formula is n into n minus 1 by 2

131
00:07:15,210 --> 00:07:21,510
that much of peering sessions I need to

132
00:07:17,760 --> 00:07:25,760
bring<font color="#E5E5E5"> up to make sure all my pgp inside</font>

133
00:07:21,510 --> 00:07:28,650
my core are connected so that's huge you

134
00:07:25,760 --> 00:07:32,120
so what<font color="#CCCCCC"> are the solutions which we often</font>

135
00:07:28,650 --> 00:07:34,679
talk about is your route reflector and

136
00:07:32,120 --> 00:07:38,520
configuration there's another one which

137
00:07:34,680 --> 00:07:41,130
is basically a bgp free Corps which is

138
00:07:38,520 --> 00:07:43,530
mostly use when you are<font color="#CCCCCC"> using mpls as</font>

139
00:07:41,130 --> 00:07:45,750
your core so basically what you do you

140
00:07:43,530 --> 00:07:48,570
don't need to run I beach recession

141
00:07:45,750 --> 00:07:51,450
inside your network<font color="#E5E5E5"> you just run mpls</font>

142
00:07:48,570 --> 00:07:55,669
that will act as a transport and then<font color="#E5E5E5"> on</font>

143
00:07:51,450 --> 00:07:58,669
<font color="#E5E5E5">the edge you basically run your MP bgp</font>

144
00:07:55,669 --> 00:07:58,669
so

145
00:08:01,910 --> 00:08:08,150
what are the scaling limits why we were

146
00:08:03,980 --> 00:08:12,620
worrying about so many scale numbers why

147
00:08:08,150 --> 00:08:15,560
you are worrying about scale the reason

148
00:08:12,620 --> 00:08:17,270
is<font color="#CCCCCC"> because if you see that</font><font color="#E5E5E5"> then in</font>

149
00:08:15,560 --> 00:08:19,190
router in density is getting increased

150
00:08:17,270 --> 00:08:23,270
day by day more and more routers are now

151
00:08:19,190 --> 00:08:25,430
added up to the large-scale BGP core

152
00:08:23,270 --> 00:08:28,099
once you<font color="#E5E5E5"> have number of routers</font>

153
00:08:25,430 --> 00:08:30,350
increased you<font color="#E5E5E5"> basically for each</font>

154
00:08:28,100 --> 00:08:32,659
additional router you need to run let's

155
00:08:30,350 --> 00:08:34,940
say those many number of sessions with

156
00:08:32,659 --> 00:08:37,839
existing routers so this definitely

157
00:08:34,940 --> 00:08:40,849
brings<font color="#CCCCCC"> the challenge of rtcp</font><font color="#E5E5E5"> scaling and</font>

158
00:08:37,840 --> 00:08:43,150
also how in full mesh case what happens

159
00:08:40,849 --> 00:08:46,310
<font color="#E5E5E5">each update is actually processed and</font>

160
00:08:43,150 --> 00:08:48,560
delegated by each and every router so in

161
00:08:46,310 --> 00:08:51,699
that case you<font color="#CCCCCC"> just imagine the bandwidth</font>

162
00:08:48,560 --> 00:08:55,400
required for processing<font color="#CCCCCC"> the updates and</font>

163
00:08:51,700 --> 00:08:56,750
also<font color="#E5E5E5"> we know</font><font color="#CCCCCC"> that in most of the BGM HP</font>

164
00:08:55,400 --> 00:08:59,540
implementation you basically maintain

165
00:08:56,750 --> 00:09:02,900
three routing tables which is rip in rip

166
00:08:59,540 --> 00:09:07,040
and rip out so rip in<font color="#CCCCCC"> basically you have</font>

167
00:09:02,900 --> 00:09:08,959
the unprocessed<font color="#E5E5E5"> BGP of updates rib is</font>

168
00:09:07,040 --> 00:09:11,150
basically your process updates and then

169
00:09:08,960 --> 00:09:14,830
what are<font color="#CCCCCC"> brits you want to send to your</font>

170
00:09:11,150 --> 00:09:17,569
<font color="#E5E5E5">peers so these are</font><font color="#CCCCCC"> the limiting</font>

171
00:09:14,830 --> 00:09:23,120
challenges which we need to address when

172
00:09:17,570 --> 00:09:24,920
we talk about ibgp and additionally you

173
00:09:23,120 --> 00:09:27,020
also have configuration challenges

174
00:09:24,920 --> 00:09:28,550
provisional challenges because once you

175
00:09:27,020 --> 00:09:30,860
add a new router you need to make sure

176
00:09:28,550 --> 00:09:34,510
that<font color="#CCCCCC"> this router</font><font color="#E5E5E5"> is has bearing with</font>

177
00:09:30,860 --> 00:09:34,510
every other router in your call

178
00:09:36,130 --> 00:09:41,650
so<font color="#CCCCCC"> I'll just</font><font color="#E5E5E5"> quickly go over what is</font>

179
00:09:39,370 --> 00:09:43,990
Pacific Confederation what is the idea

180
00:09:41,650 --> 00:09:48,850
behind<font color="#E5E5E5"> vgp Confederation and then later</font>

181
00:09:43,990 --> 00:09:52,090
we'll focus more on route reflectors so

182
00:09:48,850 --> 00:09:55,800
the<font color="#E5E5E5"> idea behind configuration is divide</font>

183
00:09:52,090 --> 00:09:58,960
and conquer basically you take your

184
00:09:55,800 --> 00:10:01,900
autonomous system as one and then you

185
00:09:58,960 --> 00:10:05,080
divide this autonomous turn into logical

186
00:10:01,900 --> 00:10:07,390
sub autonomous systems so basically what

187
00:10:05,080 --> 00:10:11,910
you are eventually<font color="#E5E5E5"> achieving is you</font>

188
00:10:07,390 --> 00:10:16,650
cluster your routers in small autonomous

189
00:10:11,910 --> 00:10:20,140
systems inside your own is so basically

190
00:10:16,650 --> 00:10:21,939
what you are achieving<font color="#CCCCCC"> is inside that</font>

191
00:10:20,140 --> 00:10:25,060
small autonomous system you can have

192
00:10:21,940 --> 00:10:27,280
full measure of ibgp you need not to

193
00:10:25,060 --> 00:10:29,760
worry about the other routers in other

194
00:10:27,280 --> 00:10:33,250
auto no system so logically if you think

195
00:10:29,760 --> 00:10:37,470
your internal autonomous systems the sub

196
00:10:33,250 --> 00:10:39,910
s becomes your ibgp and then the other

197
00:10:37,470 --> 00:10:43,120
autonomous system becomes your

198
00:10:39,910 --> 00:10:47,069
neighboring of ottimo system neighboring

199
00:10:43,120 --> 00:10:49,630
ears which becomes your EBT recession so

200
00:10:47,070 --> 00:10:53,740
eventually what is happening we call<font color="#E5E5E5"> it</font>

201
00:10:49,630 --> 00:10:55,210
as I ebgp because<font color="#E5E5E5"> even though it is your</font>

202
00:10:53,740 --> 00:10:57,760
own autonomous system you are logically

203
00:10:55,210 --> 00:11:01,450
breaking up these systems into small

204
00:10:57,760 --> 00:11:05,830
small autonomous systems so this is well

205
00:11:01,450 --> 00:11:09,100
described in RFC 50 65 in detail<font color="#E5E5E5"> so</font>

206
00:11:05,830 --> 00:11:12,070
usually<font color="#CCCCCC"> what happens you need</font><font color="#E5E5E5"> to run a</font>

207
00:11:09,100 --> 00:11:14,710
single<font color="#CCCCCC"> IGP across the autonomous system</font>

208
00:11:12,070 --> 00:11:17,760
so these<font color="#E5E5E5"> are actually again for reach</font>

209
00:11:14,710 --> 00:11:17,760
ability of your next<font color="#E5E5E5"> hops</font>

210
00:11:25,450 --> 00:11:31,600
so in case<font color="#CCCCCC"> of</font><font color="#E5E5E5"> configuration what happens</font>

211
00:11:27,850 --> 00:11:34,650
for the outside actual autonomous system

212
00:11:31,600 --> 00:11:37,780
it is<font color="#E5E5E5"> again visible as a single or a s</font>

213
00:11:34,650 --> 00:11:40,120
your logical sebaceous will not be

214
00:11:37,780 --> 00:11:43,150
<font color="#CCCCCC">visible to the outside world</font><font color="#E5E5E5"> and what</font>

215
00:11:40,120 --> 00:11:46,800
you basically do is when you have your

216
00:11:43,150 --> 00:11:52,810
small sub a SS you run the private SS on

217
00:11:46,800 --> 00:11:55,599
those sub-races now in case<font color="#CCCCCC"> of</font>

218
00:11:52,810 --> 00:11:58,810
confession as well when you have sub

219
00:11:55,600 --> 00:12:02,290
aces you need to run full mesh of ibgp

220
00:11:58,810 --> 00:12:04,180
so if you you need to take care<font color="#CCCCCC"> of the</font>

221
00:12:02,290 --> 00:12:06,400
size of your surveillance because if it

222
00:12:04,180 --> 00:12:09,089
<font color="#CCCCCC">is too too big you need to again think</font>

223
00:12:06,400 --> 00:12:12,840
of running route reflectors inside your

224
00:12:09,090 --> 00:12:12,840
configuration services as well

225
00:12:15,320 --> 00:12:21,140
so this<font color="#CCCCCC"> is one example where you</font><font color="#E5E5E5"> see you</font>

226
00:12:18,230 --> 00:12:25,880
have a s200 which is logically divided

227
00:12:21,140 --> 00:12:27,650
into three services<font color="#CCCCCC"> 6 5 5 30 31 32 and</font>

228
00:12:25,880 --> 00:12:31,250
<font color="#E5E5E5">there's just a sample configuration</font>

229
00:12:27,650 --> 00:12:33,260
where you need to assign the identifier

230
00:12:31,250 --> 00:12:35,750
which is your actual ears which will be

231
00:12:33,260 --> 00:12:37,850
visible to outside<font color="#CCCCCC"> wall</font><font color="#E5E5E5"> and you have</font>

232
00:12:35,750 --> 00:12:40,430
your services which<font color="#CCCCCC"> you</font><font color="#E5E5E5"> assigned which</font>

233
00:12:37,850 --> 00:12:46,520
are private terraces to your sub is

234
00:12:40,430 --> 00:12:48,560
inside your own ears so one of the

235
00:12:46,520 --> 00:12:51,590
important thing to note in configuration

236
00:12:48,560 --> 00:12:55,219
is that basically it preserves your next

237
00:12:51,590 --> 00:12:58,190
of local preference and my properties so

238
00:12:55,220 --> 00:13:00,730
that's why it<font color="#E5E5E5"> is called as I ebgp so</font>

239
00:12:58,190 --> 00:13:03,830
even between<font color="#E5E5E5"> the sub aces it runs</font>

240
00:13:00,730 --> 00:13:07,540
logically bgp but it will preserve your

241
00:13:03,830 --> 00:13:07,540
at BJP attributes and properties

242
00:13:11,529 --> 00:13:18,240
so<font color="#E5E5E5"> basically these are the fundamental</font>

243
00:13:13,600 --> 00:13:18,240
principles which drive the Confederation

244
00:13:24,980 --> 00:13:28,970
so what benefits we drive out of

245
00:13:27,079 --> 00:13:32,689
contraction is basically it solves your

246
00:13:28,970 --> 00:13:35,930
I<font color="#E5E5E5"> BGP full mesh problem your packet</font>

247
00:13:32,690 --> 00:13:38,660
forwarding is not affected because it

248
00:13:35,930 --> 00:13:42,069
takes care of it and it can<font color="#CCCCCC"> be actually</font>

249
00:13:38,660 --> 00:13:42,069
used with router<font color="#E5E5E5"> flexures as well</font>

250
00:13:45,939 --> 00:13:50,738
but there are certain challenges when

251
00:13:48,609 --> 00:13:52,899
you deploy with considerations the most

252
00:13:50,739 --> 00:13:57,249
important challenges basically the S sub

253
00:13:52,899 --> 00:13:59,379
hierarchy so as we discussed right<font color="#E5E5E5"> that</font>

254
00:13:57,249 --> 00:14:01,899
once you have your own<font color="#E5E5E5"> s you</font><font color="#CCCCCC"> can</font>

255
00:13:59,379 --> 00:14:03,970
<font color="#CCCCCC">actually break into</font><font color="#E5E5E5"> services now you</font>

256
00:14:01,899 --> 00:14:06,249
cannot further sub breaks those

257
00:14:03,970 --> 00:14:07,899
sub-races into further sub bases this is

258
00:14:06,249 --> 00:14:10,839
not possible in control asian so

259
00:14:07,899 --> 00:14:14,349
basically you cannot have a hierarchical

260
00:14:10,839 --> 00:14:15,849
a SS in consideration and the problem

261
00:14:14,349 --> 00:14:18,249
which introduces the power diversity

262
00:14:15,849 --> 00:14:23,709
which we<font color="#E5E5E5"> discuss more in detail what is</font>

263
00:14:18,249 --> 00:14:26,919
it and<font color="#CCCCCC"> how it avoids and most important</font>

264
00:14:23,709 --> 00:14:29,829
<font color="#CCCCCC">challenge with the configuration is</font>

265
00:14:26,919 --> 00:14:32,669
migration<font color="#E5E5E5"> so basically</font><font color="#CCCCCC"> in case of router</font>

266
00:14:29,829 --> 00:14:35,919
flickers you can have incremental

267
00:14:32,669 --> 00:14:37,959
deployments but in case<font color="#CCCCCC"> of configuration</font>

268
00:14:35,919 --> 00:14:41,999
you have to think<font color="#E5E5E5"> about your entire s</font>

269
00:14:37,959 --> 00:14:44,228
and deploy it at once you can't have

270
00:14:41,999 --> 00:14:49,389
incremental deployments in case of

271
00:14:44,229 --> 00:14:51,959
confrontations now let's move to route

272
00:14:49,389 --> 00:14:51,959
reflectors

273
00:14:52,880 --> 00:14:58,310
so again your router clickers solved

274
00:14:55,880 --> 00:15:00,650
your problem of full mesh but in a

275
00:14:58,310 --> 00:15:04,130
different way what we discussed in case

276
00:15:00,650 --> 00:15:07,240
of configuration so the<font color="#E5E5E5"> idea behind</font>

277
00:15:04,130 --> 00:15:09,290
router filter is that all your updates

278
00:15:07,240 --> 00:15:10,850
will be<font color="#CCCCCC"> processed by</font><font color="#E5E5E5"> your route</font>

279
00:15:09,290 --> 00:15:13,520
reflector and then those processed

280
00:15:10,850 --> 00:15:16,310
updates will be sent over to the router

281
00:15:13,520 --> 00:15:19,040
protect lines so in this picture if you

282
00:15:16,310 --> 00:15:21,680
<font color="#E5E5E5">see right we have four clients client</font>

283
00:15:19,040 --> 00:15:24,079
one flying to clients recline for and in

284
00:15:21,680 --> 00:15:25,849
between we have a router collector so

285
00:15:24,080 --> 00:15:30,290
what it does basically you receive a

286
00:15:25,850 --> 00:15:31,820
prefix from your bearing yes this pier

287
00:15:30,290 --> 00:15:34,040
this will be received by the route

288
00:15:31,820 --> 00:15:37,910
reflector it will be<font color="#CCCCCC"> processed and</font>

289
00:15:34,040 --> 00:15:40,670
delegated to each and every client so

290
00:15:37,910 --> 00:15:44,319
now think what how if the problem is

291
00:15:40,670 --> 00:15:46,849
getting solved so earlier if we have one

292
00:15:44,320 --> 00:15:50,120
<font color="#CCCCCC">prefix which is received by the internal</font>

293
00:15:46,850 --> 00:15:52,520
ibgp members who are in full mesh we

294
00:15:50,120 --> 00:15:55,490
need to run n into n minus 1 by 2

295
00:15:52,520 --> 00:15:57,980
sessions but now what we<font color="#E5E5E5"> are doing is</font><font color="#CCCCCC"> we</font>

296
00:15:55,490 --> 00:16:01,310
have a single error which<font color="#CCCCCC"> is running</font>

297
00:15:57,980 --> 00:16:05,840
ibgp with<font color="#E5E5E5"> it clients so climb to client</font>

298
00:16:01,310 --> 00:16:08,209
I btv session is not required and if you

299
00:16:05,840 --> 00:16:10,850
<font color="#E5E5E5">need to add any other client or any</font>

300
00:16:08,210 --> 00:16:12,590
other router inside your core you just

301
00:16:10,850 --> 00:16:15,730
need to bring up<font color="#E5E5E5"> the pairing with your</font>

302
00:16:12,590 --> 00:16:18,730
route reflectors so it's<font color="#CCCCCC"> just a single</font>

303
00:16:15,730 --> 00:16:18,730
increment

304
00:16:25,400 --> 00:16:30,740
so<font color="#E5E5E5"> basically this</font><font color="#CCCCCC"> is how your router</font>

305
00:16:28,730 --> 00:16:32,500
afflicted does<font color="#E5E5E5"> processing what it does</font>

306
00:16:30,740 --> 00:16:35,590
basically it receives two updates from

307
00:16:32,500 --> 00:16:38,870
peers and then it will delegate those

308
00:16:35,590 --> 00:16:41,810
updates to your other peers so

309
00:16:38,870 --> 00:16:44,900
essentially<font color="#E5E5E5"> in case of full mesh the</font>

310
00:16:41,810 --> 00:16:47,030
received IPTV updates were not able<font color="#E5E5E5"> to</font>

311
00:16:44,900 --> 00:16:50,569
send<font color="#E5E5E5"> to other I which prepares because</font>

312
00:16:47,030 --> 00:16:52,939
that's how the BJP works in case of

313
00:16:50,570 --> 00:16:55,070
router collectors it relax that<font color="#E5E5E5"> rule and</font>

314
00:16:52,940 --> 00:16:57,890
is basically sent those updates to other

315
00:16:55,070 --> 00:16:59,480
peers as well basically client and it

316
00:16:57,890 --> 00:17:01,819
basically you can imagine this as

317
00:16:59,480 --> 00:17:04,310
provider<font color="#E5E5E5"> PLN customer kind of concept</font>

318
00:17:01,820 --> 00:17:05,900
where your updates are processed by

319
00:17:04,310 --> 00:17:08,599
<font color="#E5E5E5">route reflector and then those are</font>

320
00:17:05,900 --> 00:17:12,890
<font color="#E5E5E5">actually delegated by delegated to other</font>

321
00:17:08,599 --> 00:17:15,980
planes and non lines so the golden<font color="#E5E5E5"> rule</font>

322
00:17:12,890 --> 00:17:19,130
of router letter is if I have a pairing

323
00:17:15,980 --> 00:17:22,339
with a<font color="#E5E5E5"> BGP or if I learn ebgp routes I</font>

324
00:17:19,130 --> 00:17:24,770
will forward<font color="#E5E5E5"> to all my clients and non</font>

325
00:17:22,339 --> 00:17:27,020
clients if I have routes which I learned

326
00:17:24,770 --> 00:17:29,360
from my clients I will reflect to my

327
00:17:27,020 --> 00:17:31,340
clients and<font color="#E5E5E5"> on lines and if I have</font>

328
00:17:29,360 --> 00:17:33,139
routes which are received from non

329
00:17:31,340 --> 00:17:36,260
clients I will reflect only to my

330
00:17:33,140 --> 00:17:39,110
clients so this basically comes into

331
00:17:36,260 --> 00:17:43,180
your<font color="#E5E5E5"> control path now to let us need not</font>

332
00:17:39,110 --> 00:17:43,179
to be<font color="#E5E5E5"> in your data paths necessarily</font>

333
00:17:45,290 --> 00:17:50,450
this is my example with a single route

334
00:17:48,170 --> 00:17:56,120
reflector deployment where you basically

335
00:17:50,450 --> 00:17:58,610
have a route reflector r1 r2 r3 r4 your

336
00:17:56,120 --> 00:18:02,780
next stops and let's say you learn some

337
00:17:58,610 --> 00:18:05,090
prefix over those next hops so over the

338
00:18:02,780 --> 00:18:09,440
<font color="#E5E5E5">ibgp with client router electors will</font>

339
00:18:05,090 --> 00:18:11,810
learn about those prefix it will run its

340
00:18:09,440 --> 00:18:15,770
own best path selection algorithm and

341
00:18:11,810 --> 00:18:19,159
then<font color="#CCCCCC"> finally delegate the best route to</font>

342
00:18:15,770 --> 00:18:22,070
<font color="#CCCCCC">your internal peers so one</font><font color="#E5E5E5"> thing to note</font>

343
00:18:19,160 --> 00:18:26,620
is that even<font color="#E5E5E5"> in case</font><font color="#CCCCCC"> of router abductors</font>

344
00:18:22,070 --> 00:18:26,620
we delegate only the best man

345
00:18:29,650 --> 00:18:37,150
and this is your forwarding paths once

346
00:18:31,630 --> 00:18:40,420
you learn to prefix now<font color="#E5E5E5"> I look at the</font>

347
00:18:37,150 --> 00:18:42,490
typical scenario for a large I speak so

348
00:18:40,420 --> 00:18:45,820
in case<font color="#CCCCCC"> of large ISP you basically have</font>

349
00:18:42,490 --> 00:18:49,750
your pops you have your regional core

350
00:18:45,820 --> 00:18:52,030
and you have your super core so while

351
00:18:49,750 --> 00:18:53,860
deploying route reflectors what<font color="#E5E5E5"> normally</font>

352
00:18:52,030 --> 00:18:55,899
the providers does is basically you have

353
00:18:53,860 --> 00:18:58,600
at the pop level you will have certain

354
00:18:55,900 --> 00:19:00,460
route reflectors let's say<font color="#CCCCCC"> per pop you I</font>

355
00:18:58,600 --> 00:19:03,459
can have one<font color="#CCCCCC"> or two route reflectors and</font>

356
00:19:00,460 --> 00:19:05,740
those route reflectors will be client to

357
00:19:03,460 --> 00:19:11,020
my original core and those finally will

358
00:19:05,740 --> 00:19:12,910
be flying to my core super core so and

359
00:19:11,020 --> 00:19:15,910
one important thing to observe is that

360
00:19:12,910 --> 00:19:18,630
when you have a our deployment you need

361
00:19:15,910 --> 00:19:21,180
to run full measure between the<font color="#E5E5E5"> errors</font>

362
00:19:18,630 --> 00:19:24,700
so basically<font color="#CCCCCC"> if let's say the green</font>

363
00:19:21,180 --> 00:19:28,450
routers you can imagine as if a router

364
00:19:24,700 --> 00:19:30,820
flickers for the pop and the blue one

365
00:19:28,450 --> 00:19:33,400
you can imagine as a router<font color="#CCCCCC"> to the core</font>

366
00:19:30,820 --> 00:19:36,149
so basically those has to be paired in

367
00:19:33,400 --> 00:19:36,150
full mesh

368
00:19:39,840 --> 00:19:46,168
so what<font color="#CCCCCC"> are the advantages related to</font>

369
00:19:42,870 --> 00:19:49,260
route reflectors so the most important

370
00:19:46,169 --> 00:19:51,570
<font color="#E5E5E5">is related to a scalability so now as we</font>

371
00:19:49,260 --> 00:19:54,360
see when you have full mesh of<font color="#CCCCCC"> BGP you</font>

372
00:19:51,570 --> 00:19:57,870
need to run ibgp everywhere and if you

373
00:19:54,360 --> 00:20:00,360
add a certain router when<font color="#E5E5E5"> one router you</font>

374
00:19:57,870 --> 00:20:01,949
need to again bring up the pairing with

375
00:20:00,360 --> 00:20:04,590
all the other routers inside your core

376
00:20:01,950 --> 00:20:06,360
so what happens with router flatness<font color="#CCCCCC"> you</font>

377
00:20:04,590 --> 00:20:07,799
need not to worry about pairing with

378
00:20:06,360 --> 00:20:09,389
other clients you just need to bring the

379
00:20:07,799 --> 00:20:13,010
pairing with your client with the route

380
00:20:09,390 --> 00:20:15,029
reflector itself that's enough and

381
00:20:13,010 --> 00:20:18,870
second important for your control

382
00:20:15,029 --> 00:20:20,370
perspective is your the way the updates

383
00:20:18,870 --> 00:20:23,309
are getting processed what happens

384
00:20:20,370 --> 00:20:25,830
basically<font color="#E5E5E5"> your updates are not sent</font>

385
00:20:23,309 --> 00:20:28,129
across all the routers which router

386
00:20:25,830 --> 00:20:31,620
collectors will be processing all the

387
00:20:28,130 --> 00:20:33,600
updates and then those updates whatever

388
00:20:31,620 --> 00:20:38,459
is the best prefix will be delegated to

389
00:20:33,600 --> 00:20:40,289
the other clients so other advantages

390
00:20:38,460 --> 00:20:43,590
from the control perspective is you now

391
00:20:40,289 --> 00:20:45,570
have smaller<font color="#CCCCCC"> BGP routing tables for your</font>

392
00:20:43,590 --> 00:20:47,668
clients because it is not running

393
00:20:45,570 --> 00:20:51,779
<font color="#CCCCCC">informations nanus it doesn't need</font><font color="#E5E5E5"> to</font>

394
00:20:47,669 --> 00:20:54,000
process all the updates from the

395
00:20:51,779 --> 00:20:56,309
deployment perspective again from

396
00:20:54,000 --> 00:20:59,250
provisioning side as well you have less

397
00:20:56,309 --> 00:21:01,080
overhead of configuring router<font color="#CCCCCC"> flexures</font>

398
00:20:59,250 --> 00:21:03,179
<font color="#CCCCCC">because clients are not even aware of</font>

399
00:21:01,080 --> 00:21:05,039
having a route reflector into your

400
00:21:03,179 --> 00:21:06,600
system you just need to put the

401
00:21:05,039 --> 00:21:11,760
configuration part only<font color="#CCCCCC"> on route</font>

402
00:21:06,600 --> 00:21:14,330
reflector itself and this saves lots of

403
00:21:11,760 --> 00:21:14,330
dollars for you

404
00:21:17,950 --> 00:21:23,860
so so<font color="#CCCCCC"> far what we discussed is the</font>

405
00:21:20,350 --> 00:21:26,110
challenges of ibgp full mesh there are

406
00:21:23,860 --> 00:21:29,979
solutions<font color="#E5E5E5"> Confederation and router</font>

407
00:21:26,110 --> 00:21:31,928
<font color="#E5E5E5">flickers now let's look at some of the</font>

408
00:21:29,980 --> 00:21:34,690
challenges which comes with our

409
00:21:31,929 --> 00:21:37,450
deployment so what are those challenges

410
00:21:34,690 --> 00:21:42,990
the most important I<font color="#CCCCCC"> have just mentioned</font>

411
00:21:37,450 --> 00:21:45,639
<font color="#E5E5E5">too is part diversity and convergence so</font>

412
00:21:42,990 --> 00:21:50,440
what<font color="#CCCCCC"> is part diversity so you think</font>

413
00:21:45,639 --> 00:21:53,039
<font color="#E5E5E5">about a large</font><font color="#CCCCCC"> ISP it will have customers</font>

414
00:21:50,440 --> 00:21:57,909
it will have peers it will<font color="#E5E5E5"> have the</font>

415
00:21:53,039 --> 00:22:00,250
exchange points so with large-scale ISPs

416
00:21:57,909 --> 00:22:02,860
you have<font color="#E5E5E5"> different kind of</font><font color="#CCCCCC"> replicas</font>

417
00:22:00,250 --> 00:22:05,019
<font color="#E5E5E5">coming to your insight network it may be</font>

418
00:22:02,860 --> 00:22:08,580
a customer's it might be of your peers

419
00:22:05,019 --> 00:22:12,450
or it may be of at the<font color="#CCCCCC"> exchange point so</font>

420
00:22:08,580 --> 00:22:16,178
once you have<font color="#E5E5E5"> very large number</font><font color="#CCCCCC"> of</font>

421
00:22:12,450 --> 00:22:19,149
prefixes ride and just<font color="#E5E5E5"> think about the</font>

422
00:22:16,179 --> 00:22:22,090
<font color="#CCCCCC">internet the unique prefixes sizes is</font>

423
00:22:19,149 --> 00:22:24,250
has crossed over 400k and total number

424
00:22:22,090 --> 00:22:26,678
of routes s-curves crossed more<font color="#E5E5E5"> than 4</font>

425
00:22:24,250 --> 00:22:29,559
million 25 million so with those many

426
00:22:26,679 --> 00:22:31,769
routes if you have to have inside your

427
00:22:29,559 --> 00:22:34,269
core you need to think<font color="#CCCCCC"> about different</font>

428
00:22:31,769 --> 00:22:38,950
<font color="#E5E5E5">prospects while deploying the route</font>

429
00:22:34,269 --> 00:22:42,309
reflector so par de bistec can be of

430
00:22:38,950 --> 00:22:45,519
three types it can be a<font color="#E5E5E5"> part diversity</font>

431
00:22:42,309 --> 00:22:47,408
of your prefixes at the pop level par

432
00:22:45,519 --> 00:22:49,690
diversity of your prefixes at the are a

433
00:22:47,409 --> 00:22:53,039
level which concerns about the next

434
00:22:49,690 --> 00:22:58,480
stops or it can also be at the es level

435
00:22:53,039 --> 00:23:00,970
so the major advantages of<font color="#E5E5E5"> having a very</font>

436
00:22:58,480 --> 00:23:03,370
<font color="#CCCCCC">hype part diversity is that basically</font>

437
00:23:00,970 --> 00:23:06,159
<font color="#E5E5E5">you have alternate routes to reach those</font>

438
00:23:03,370 --> 00:23:07,989
prefixes inside your network so once you

439
00:23:06,159 --> 00:23:10,419
have<font color="#E5E5E5"> alternate routes you can actually</font>

440
00:23:07,990 --> 00:23:12,070
better program you're inside traffic

441
00:23:10,419 --> 00:23:15,789
engineering you can better load balance

442
00:23:12,070 --> 00:23:18,460
you can<font color="#E5E5E5"> also have ecmp so those are</font><font color="#CCCCCC"> the</font>

443
00:23:15,789 --> 00:23:20,980
advantages of having large part

444
00:23:18,460 --> 00:23:23,980
diversity now think about our when<font color="#E5E5E5"> I</font>

445
00:23:20,980 --> 00:23:26,769
deploy L or R what it basically does is

446
00:23:23,980 --> 00:23:29,919
it takes all the parts from it learns

447
00:23:26,769 --> 00:23:31,900
all the updates from clients or non

448
00:23:29,919 --> 00:23:34,810
clients it processed those up to

449
00:23:31,900 --> 00:23:37,420
<font color="#E5E5E5">and then finally send a single best part</font>

450
00:23:34,810 --> 00:23:42,159
so what about<font color="#E5E5E5"> the other parts it</font>

451
00:23:37,420 --> 00:23:44,380
basically<font color="#CCCCCC"> gets hide behind the RR so in</font>

452
00:23:42,160 --> 00:23:48,390
case<font color="#CCCCCC"> of convergence what happens when</font>

453
00:23:44,380 --> 00:23:51,600
you lost the primary path you need to

454
00:23:48,390 --> 00:23:54,880
you need<font color="#CCCCCC"> to find</font><font color="#E5E5E5"> out the alternate paths</font>

455
00:23:51,600 --> 00:23:57,510
so those paths gets visible once you

456
00:23:54,880 --> 00:24:01,930
have lost your primary path inside

457
00:23:57,510 --> 00:24:04,420
behind<font color="#E5E5E5"> the error so the intention is</font>

458
00:24:01,930 --> 00:24:10,420
once you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> large-scale are our</font>

459
00:24:04,420 --> 00:24:12,460
deployments so existing<font color="#CCCCCC"> a part diversity</font>

460
00:24:10,420 --> 00:24:14,800
has to be<font color="#E5E5E5"> checked basically you need to</font>

461
00:24:12,460 --> 00:24:16,840
worry<font color="#E5E5E5"> about what is my partnership by</font>

462
00:24:14,800 --> 00:24:19,530
part I've diversity at the next top

463
00:24:16,840 --> 00:24:21,939
level at<font color="#CCCCCC"> the pop level</font><font color="#E5E5E5"> and a das level</font>

464
00:24:19,530 --> 00:24:24,100
because this<font color="#E5E5E5"> will give you an advantage</font>

465
00:24:21,940 --> 00:24:26,140
of characterizing the properties of your

466
00:24:24,100 --> 00:24:28,870
prefixes it will give an advantage of

467
00:24:26,140 --> 00:24:30,630
quantifying those prefixes it can it

468
00:24:28,870 --> 00:24:34,500
also<font color="#E5E5E5"> gives you an advantage of you know</font>

469
00:24:30,630 --> 00:24:39,190
better nesting your internal routes and

470
00:24:34,500 --> 00:24:41,230
your own network so the other

471
00:24:39,190 --> 00:24:43,840
disadvantages which comes is the

472
00:24:41,230 --> 00:24:47,140
convergence which<font color="#CCCCCC"> is very important when</font>

473
00:24:43,840 --> 00:24:50,379
we talk about any<font color="#E5E5E5"> BGP deployment so</font>

474
00:24:47,140 --> 00:24:53,230
converges in a very simple<font color="#E5E5E5"> term is the</font>

475
00:24:50,380 --> 00:24:56,110
state at which all my routers are in

476
00:24:53,230 --> 00:24:58,810
sync it can be of two types it can be a

477
00:24:56,110 --> 00:25:01,629
convergence up event or converges down

478
00:24:58,810 --> 00:25:04,330
event so normally<font color="#E5E5E5"> the convergence up</font>

479
00:25:01,630 --> 00:25:06,460
events are related when I have certain

480
00:25:04,330 --> 00:25:10,120
changes inside my network let's<font color="#CCCCCC"> say if i</font>

481
00:25:06,460 --> 00:25:13,360
add another appear or if I have another

482
00:25:10,120 --> 00:25:15,580
link added to<font color="#E5E5E5"> my network convergys down</font>

483
00:25:13,360 --> 00:25:17,649
<font color="#E5E5E5">events can be triggered</font><font color="#CCCCCC"> in whether your</font>

484
00:25:15,580 --> 00:25:21,159
links inside your network going down or

485
00:25:17,650 --> 00:25:24,100
some routes are getting flapped those

486
00:25:21,160 --> 00:25:26,860
kind of<font color="#CCCCCC"> events so the</font><font color="#E5E5E5"> idea is basically</font>

487
00:25:24,100 --> 00:25:30,580
you characterize the convergence as well

488
00:25:26,860 --> 00:25:32,820
so the major important characters of

489
00:25:30,580 --> 00:25:36,490
convergence is your number of updates

490
00:25:32,820 --> 00:25:39,280
because<font color="#E5E5E5"> this essentially relates to your</font>

491
00:25:36,490 --> 00:25:42,380
processing time the internal<font color="#E5E5E5"> events</font>

492
00:25:39,280 --> 00:25:45,200
which can be your link flaps route flabs

493
00:25:42,380 --> 00:25:49,130
<font color="#CCCCCC">igp</font><font color="#E5E5E5"> flabs next of change those kind of</font>

494
00:25:45,200 --> 00:25:52,370
events and of<font color="#E5E5E5"> course the overall time</font>

495
00:25:49,130 --> 00:25:56,510
which you want<font color="#E5E5E5"> to measure inside your</font>

496
00:25:52,370 --> 00:25:58,610
network related to convergence so other

497
00:25:56,510 --> 00:26:02,930
challenges which are which also comes

498
00:25:58,610 --> 00:26:06,379
with<font color="#CCCCCC"> large-scale</font><font color="#E5E5E5"> route reflector is data</font>

499
00:26:02,930 --> 00:26:10,840
forwarding loop or control loop so we'll

500
00:26:06,380 --> 00:26:10,840
go through<font color="#E5E5E5"> how exactly it happens</font>

501
00:26:12,480 --> 00:26:17,100
so this<font color="#CCCCCC"> is one example where we can see</font>

502
00:26:15,240 --> 00:26:20,370
how the<font color="#E5E5E5"> power diversity gets reduced</font>

503
00:26:17,100 --> 00:26:23,280
because<font color="#CCCCCC"> of our so initially we have all</font>

504
00:26:20,370 --> 00:26:26,760
the routers in full mesh so all these

505
00:26:23,280 --> 00:26:29,129
routers are connected using ibgp when I

506
00:26:26,760 --> 00:26:31,950
learn some prefix all prefixes are

507
00:26:29,130 --> 00:26:33,929
actually send over all the<font color="#E5E5E5"> peers so all</font>

508
00:26:31,950 --> 00:26:37,010
my peers are actually seeing those

509
00:26:33,929 --> 00:26:39,360
routes so the path is actually visible

510
00:26:37,010 --> 00:26:44,549
so you see I have both the path

511
00:26:39,360 --> 00:26:47,189
information now let's replace the full

512
00:26:44,549 --> 00:26:49,260
mesh I which be with our are so now

513
00:26:47,190 --> 00:26:53,010
these are my clients and I have an error

514
00:26:49,260 --> 00:26:57,090
in between so what happens I learn the

515
00:26:53,010 --> 00:26:59,370
routes the routes will come to my RR RR

516
00:26:57,090 --> 00:27:02,639
will process those routes and send only

517
00:26:59,370 --> 00:27:05,250
the best one<font color="#CCCCCC"> so now what</font><font color="#E5E5E5"> happens for</font><font color="#CCCCCC"> the</font>

518
00:27:02,640 --> 00:27:10,370
other routers let's say for in case of

519
00:27:05,250 --> 00:27:10,370
router<font color="#CCCCCC"> 3 it will</font><font color="#E5E5E5"> have only single path</font>

520
00:27:13,860 --> 00:27:19,678
the other reason for part diversity

521
00:27:16,320 --> 00:27:22,169
reduction can be related to the<font color="#E5E5E5"> BGP</font>

522
00:27:19,679 --> 00:27:23,790
attribute itself so we know that bridge

523
00:27:22,170 --> 00:27:25,320
appearance the best path algorithm

524
00:27:23,790 --> 00:27:27,570
depending on certain attributes it

525
00:27:25,320 --> 00:27:29,939
process those attributes and then

526
00:27:27,570 --> 00:27:32,428
finally come<font color="#CCCCCC"> up with a best path so the</font>

527
00:27:29,940 --> 00:27:34,710
<font color="#CCCCCC">first for local preference its path</font>

528
00:27:32,429 --> 00:27:37,140
origin and made are actually considered

529
00:27:34,710 --> 00:27:40,380
as the topological independent

530
00:27:37,140 --> 00:27:44,190
parameters which not necessarily depends

531
00:27:40,380 --> 00:27:48,690
on any topology of which EP the other

532
00:27:44,190 --> 00:27:50,790
<font color="#E5E5E5">three which</font><font color="#CCCCCC"> is a BGP over ibgp IGP cost</font>

533
00:27:48,690 --> 00:27:53,990
or router ID they are actually<font color="#E5E5E5"> related</font>

534
00:27:50,790 --> 00:28:00,120
to how you place your router inside your

535
00:27:53,990 --> 00:28:04,850
BGP topology so they are also contribute

536
00:28:00,120 --> 00:28:07,229
to the part diversity of your prefixes

537
00:28:04,850 --> 00:28:09,659
so what essentially we need to do is

538
00:28:07,230 --> 00:28:10,890
basically we<font color="#CCCCCC"> have to think about the</font>

539
00:28:09,660 --> 00:28:12,840
deployment from<font color="#E5E5E5"> the deployment</font>

540
00:28:10,890 --> 00:28:15,179
perspective how i can actually

541
00:28:12,840 --> 00:28:17,389
characterize my part diversity whether

542
00:28:15,179 --> 00:28:21,540
the existing prefixes are actually

543
00:28:17,390 --> 00:28:24,540
<font color="#CCCCCC">hidden by my policy which is visibly</font>

544
00:28:21,540 --> 00:28:27,450
<font color="#E5E5E5">park best path selection algorithm</font>

545
00:28:24,540 --> 00:28:30,440
attributes or it is because of<font color="#E5E5E5"> my router</font>

546
00:28:27,450 --> 00:28:30,440
collector deployments

547
00:28:31,720 --> 00:28:39,159
this is one example of delay of

548
00:28:34,720 --> 00:28:42,159
convergence due to route reflector so

549
00:28:39,159 --> 00:28:46,900
what happens when you have when you<font color="#CCCCCC"> have</font>

550
00:28:42,159 --> 00:28:49,570
the full<font color="#CCCCCC"> measure of ibgp once</font><font color="#E5E5E5"> your yes</font>

551
00:28:46,900 --> 00:28:51,490
prefix is gone the withdraw message

552
00:28:49,570 --> 00:28:54,939
which be received by all the routers at

553
00:28:51,490 --> 00:28:57,250
once so there is no additional hop which

554
00:28:54,940 --> 00:29:00,549
needs to be traversed here but when<font color="#CCCCCC"> I</font>

555
00:28:57,250 --> 00:29:02,850
put our are right and normally in case

556
00:29:00,549 --> 00:29:05,650
of our deployments we deploy<font color="#CCCCCC"> our are in</font>

557
00:29:02,850 --> 00:29:08,620
number<font color="#CCCCCC"> of two so the second error will</font>

558
00:29:05,650 --> 00:29:11,080
be<font color="#E5E5E5"> for redundancy purpose now what</font>

559
00:29:08,620 --> 00:29:15,459
<font color="#CCCCCC">happens you have this update paths</font>

560
00:29:11,080 --> 00:29:17,408
available so the additional delay is

561
00:29:15,460 --> 00:29:20,320
because of the<font color="#CCCCCC"> arra deployment now</font>

562
00:29:17,409 --> 00:29:22,360
because once you have ibgp full mesh you

563
00:29:20,320 --> 00:29:25,030
will need not you are not having<font color="#E5E5E5"> any</font>

564
00:29:22,360 --> 00:29:27,760
additional hop in once you receive the

565
00:29:25,030 --> 00:29:30,158
<font color="#E5E5E5">prefix but with in case of our are you</font>

566
00:29:27,760 --> 00:29:36,280
have additional prefix additional hop

567
00:29:30,159 --> 00:29:39,940
which is introduced by the RR so once

568
00:29:36,280 --> 00:29:41,590
your prefix goes down the withdraw

569
00:29:39,940 --> 00:29:44,230
message which be received by the RR

570
00:29:41,590 --> 00:29:47,020
those are processed and if it is not

571
00:29:44,230 --> 00:29:49,919
send to the clients let's say there are

572
00:29:47,020 --> 00:29:52,059
some processing delays then the end

573
00:29:49,919 --> 00:29:54,159
client will actually explore the other

574
00:29:52,059 --> 00:29:56,770
paths before declaring the prefix<font color="#CCCCCC"> to be</font>

575
00:29:54,159 --> 00:29:58,409
down so this<font color="#CCCCCC"> is one example where your</font>

576
00:29:56,770 --> 00:30:02,590
other paths are still available even

577
00:29:58,409 --> 00:30:04,000
<font color="#CCCCCC">though the path is actually not</font><font color="#E5E5E5"> there so</font>

578
00:30:02,590 --> 00:30:07,270
there is<font color="#CCCCCC"> the second alternate path and</font>

579
00:30:04,000 --> 00:30:10,809
is the third alternate path so<font color="#E5E5E5"> finally</font>

580
00:30:07,270 --> 00:30:13,440
the client will sense that the prefix is

581
00:30:10,809 --> 00:30:13,440
not reachable

582
00:30:14,280 --> 00:30:20,590
so fundamentally there are two types of

583
00:30:18,250 --> 00:30:23,200
delay introduced<font color="#E5E5E5"> because of our</font>

584
00:30:20,590 --> 00:30:25,179
deployments one is due to the hierarchy

585
00:30:23,200 --> 00:30:28,270
which introduces the additional hop and

586
00:30:25,180 --> 00:30:30,640
other<font color="#E5E5E5"> because of the redundancy because</font>

587
00:30:28,270 --> 00:30:33,220
once you have redundant are our

588
00:30:30,640 --> 00:30:35,380
deployment those redundant are<font color="#CCCCCC"> our will</font>

589
00:30:33,220 --> 00:30:37,450
also generate the updates and those has

590
00:30:35,380 --> 00:30:42,280
to be processed<font color="#CCCCCC"> by the clients before</font>

591
00:30:37,450 --> 00:30:45,310
coming to a convergence point so this is

592
00:30:42,280 --> 00:30:49,830
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> how your convergence can be</font>

593
00:30:45,310 --> 00:30:49,830
delayed because of your<font color="#E5E5E5"> error deployment</font>

594
00:30:55,180 --> 00:30:59,470
so these two points you just we

595
00:30:56,830 --> 00:31:01,210
discussed<font color="#E5E5E5"> right if you have the</font>

596
00:30:59,470 --> 00:31:03,250
redundant RR and if you have

597
00:31:01,210 --> 00:31:05,920
hierarchical<font color="#E5E5E5"> error both introduces</font>

598
00:31:03,250 --> 00:31:08,230
additional hops inside your network so

599
00:31:05,920 --> 00:31:10,630
the prefixes which has to<font color="#CCCCCC"> be processed</font>

600
00:31:08,230 --> 00:31:15,820
<font color="#CCCCCC">by the RR and then finally to buy the</font>

601
00:31:10,630 --> 00:31:19,570
client so there's additional delay the

602
00:31:15,820 --> 00:31:25,020
other<font color="#CCCCCC"> problem which is</font><font color="#E5E5E5"> a well-known is</font>

603
00:31:19,570 --> 00:31:29,020
actually very well defined in RFC 3345

604
00:31:25,020 --> 00:31:30,850
so what happens when your router flector

605
00:31:29,020 --> 00:31:32,950
topology<font color="#CCCCCC"> does not follow your physical</font>

606
00:31:30,850 --> 00:31:35,469
topology you may end up in creating

607
00:31:32,950 --> 00:31:38,740
forwarding loops so this is<font color="#CCCCCC"> from the</font>

608
00:31:35,470 --> 00:31:42,460
data plane perspective so in this simple

609
00:31:38,740 --> 00:31:44,980
example you<font color="#CCCCCC"> have to RR which are shown</font>

610
00:31:42,460 --> 00:31:47,280
in green and you have two kinds<font color="#E5E5E5"> now</font>

611
00:31:44,980 --> 00:31:49,750
think the clients are actually not

612
00:31:47,280 --> 00:31:51,639
following the physical topology so my

613
00:31:49,750 --> 00:31:54,430
left hand side client is actually a

614
00:31:51,640 --> 00:31:59,040
client let him router is actually a

615
00:31:54,430 --> 00:32:03,400
client of RR 2 whereas my right hand

616
00:31:59,040 --> 00:32:05,470
router is actually a client of RR 1 so

617
00:32:03,400 --> 00:32:08,710
what happens for the best path of the

618
00:32:05,470 --> 00:32:10,600
same prefix for me so now<font color="#CCCCCC"> the in this</font>

619
00:32:08,710 --> 00:32:13,540
case the r is actually in the forwarding

620
00:32:10,600 --> 00:32:15,969
paths as well so for the left router

621
00:32:13,540 --> 00:32:20,409
<font color="#E5E5E5">when I want to reach that outside prefix</font>

622
00:32:15,970 --> 00:32:23,200
I will prefer the path from our<font color="#E5E5E5"> heart</font>

623
00:32:20,410 --> 00:32:26,260
one but I will go to the next<font color="#E5E5E5"> stop as</font>

624
00:32:23,200 --> 00:32:28,210
the right side so now what happens for

625
00:32:26,260 --> 00:32:29,920
the right hand side router to reach the

626
00:32:28,210 --> 00:32:31,900
same prefix it has to go to<font color="#E5E5E5"> the left</font>

627
00:32:29,920 --> 00:32:33,790
hand side router because<font color="#CCCCCC"> there are</font>

628
00:32:31,900 --> 00:32:37,060
physical<font color="#CCCCCC"> and logical topology in control</font>

629
00:32:33,790 --> 00:32:39,840
topology are not same so what happens

630
00:32:37,060 --> 00:32:43,929
essentially they end up sending the

631
00:32:39,840 --> 00:32:46,449
update sending the data to each other so

632
00:32:43,930 --> 00:32:49,830
in that case it can create<font color="#E5E5E5"> your routing</font>

633
00:32:46,450 --> 00:32:49,830
loop in the forwarding plane

634
00:32:53,580 --> 00:32:58,290
another example is at the control plane

635
00:32:56,340 --> 00:33:03,270
a problem at the control plane your

636
00:32:58,290 --> 00:33:05,610
route oscillation problem so what

637
00:33:03,270 --> 00:33:08,790
happens when you have our deployments as

638
00:33:05,610 --> 00:33:10,620
I said earlier that when you have our

639
00:33:08,790 --> 00:33:16,379
deployments you need to have full mesh

640
00:33:10,620 --> 00:33:19,229
of ibgp among the error itself so in

641
00:33:16,380 --> 00:33:22,200
such scenario when you have the path

642
00:33:19,230 --> 00:33:24,270
preference<font color="#CCCCCC"> of BGP right which is the</font>

643
00:33:22,200 --> 00:33:25,650
<font color="#E5E5E5">first</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> topological independent</font>

644
00:33:24,270 --> 00:33:27,480
and the other three are topological

645
00:33:25,650 --> 00:33:31,610
dependent and you just keep it

646
00:33:27,480 --> 00:33:35,010
everything same what happens because of

647
00:33:31,610 --> 00:33:37,949
two main BGP attributes which is made

648
00:33:35,010 --> 00:33:40,920
and the<font color="#CCCCCC"> igp cost your route will be</font>

649
00:33:37,950 --> 00:33:44,100
withdrawn<font color="#E5E5E5"> and updated by the route</font>

650
00:33:40,920 --> 00:33:47,100
reflector deployment so in this case

651
00:33:44,100 --> 00:33:51,840
what happens let us say r r1 prefers r2

652
00:33:47,100 --> 00:33:53,909
over r1 and then for the are for the RR

653
00:33:51,840 --> 00:33:56,820
to what happens it prefers the r3 over

654
00:33:53,910 --> 00:34:00,420
r2 and for our three it will prefer r 3

655
00:33:56,820 --> 00:34:03,000
and r 3 and r over r 3 so this this is

656
00:34:00,420 --> 00:34:05,460
basically cyclic what happens those

657
00:34:03,000 --> 00:34:07,890
updates will<font color="#CCCCCC"> be first processed by each</font>

658
00:34:05,460 --> 00:34:11,280
individual route reflectors then send

659
00:34:07,890 --> 00:34:12,600
across to other so those updates which

660
00:34:11,280 --> 00:34:14,430
are received by the other route

661
00:34:12,600 --> 00:34:17,790
reflectors if the video<font color="#CCCCCC"> message is not</font>

662
00:34:14,429 --> 00:34:19,770
received at the<font color="#E5E5E5"> same point then the best</font>

663
00:34:17,790 --> 00:34:23,070
path algorithm will clicking and then

664
00:34:19,770 --> 00:34:27,270
each individual RL will decide or choose

665
00:34:23,070 --> 00:34:31,850
the path which will oscillate at<font color="#CCCCCC"> the end</font>

666
00:34:27,270 --> 00:34:31,850
so this will keep happening<font color="#E5E5E5"> in a cycle</font>

667
00:34:35,570 --> 00:34:43,100
so so<font color="#CCCCCC"> far we discussed about different</font>

668
00:34:38,260 --> 00:34:45,860
aspects of route reflectors and what are

669
00:34:43,100 --> 00:34:48,250
the problems which are very important

670
00:34:45,860 --> 00:34:52,220
<font color="#E5E5E5">for us to understand primarily the path</font>

671
00:34:48,250 --> 00:34:56,469
<font color="#E5E5E5">diversity and convergence so here are</font>

672
00:34:52,219 --> 00:35:01,939
certain solutions which can be deployed

673
00:34:56,469 --> 00:35:03,919
with our deployments so this solutions

674
00:35:01,940 --> 00:35:06,050
are not necessarily available<font color="#E5E5E5"> with each</font>

675
00:35:03,920 --> 00:35:08,180
vendors this are certain solutions which

676
00:35:06,050 --> 00:35:10,550
are already<font color="#E5E5E5"> available in the market with</font>

677
00:35:08,180 --> 00:35:15,890
many vendors and certain solutions are

678
00:35:10,550 --> 00:35:17,960
still under research so one of<font color="#E5E5E5"> the</font>

679
00:35:15,890 --> 00:35:19,700
important thing is to understand<font color="#E5E5E5"> that</font>

680
00:35:17,960 --> 00:35:21,920
when you deploy<font color="#CCCCCC"> a route reflectors your</font>

681
00:35:19,700 --> 00:35:24,350
control topology is dependent on your

682
00:35:21,920 --> 00:35:26,390
physical topology so you should<font color="#E5E5E5"> always</font>

683
00:35:24,350 --> 00:35:27,799
have your route reflectors or the

684
00:35:26,390 --> 00:35:31,100
clients should follow the physical

685
00:35:27,800 --> 00:35:32,900
topology so essentially you should have

686
00:35:31,100 --> 00:35:36,080
your clients as close as possible to

687
00:35:32,900 --> 00:35:39,260
your route reflectors and you need to

688
00:35:36,080 --> 00:35:44,569
make<font color="#CCCCCC"> sure a consistency so basically</font>

689
00:35:39,260 --> 00:35:46,730
what you have<font color="#E5E5E5"> to do is your forwarding</font>

690
00:35:44,570 --> 00:35:51,220
paths and your control<font color="#CCCCCC"> paths should</font>

691
00:35:46,730 --> 00:35:51,220
follow the same power same error

692
00:35:51,880 --> 00:35:58,150
and third is basically high degree of

693
00:35:54,940 --> 00:36:00,700
replication which brings basically when

694
00:35:58,150 --> 00:36:04,630
how you deploy route reflectors inside

695
00:36:00,700 --> 00:36:07,740
your pop it can be a spare of two it can

696
00:36:04,630 --> 00:36:07,740
<font color="#E5E5E5">be in here are quick as well</font>

697
00:36:12,010 --> 00:36:20,830
so this<font color="#E5E5E5"> is again possible solution this</font>

698
00:36:14,470 --> 00:36:22,810
is not as of now is available for with

699
00:36:20,830 --> 00:36:27,190
vendors so what happens let's say you

700
00:36:22,810 --> 00:36:31,960
learn different prefixes having

701
00:36:27,190 --> 00:36:34,720
different next<font color="#E5E5E5"> talks same prefix so the</font>

702
00:36:31,960 --> 00:36:37,450
green router is basically the route

703
00:36:34,720 --> 00:36:39,669
reflector so as of<font color="#CCCCCC"> now if</font><font color="#E5E5E5"> I receive</font>

704
00:36:37,450 --> 00:36:41,680
multiple routes what I will do I will

705
00:36:39,670 --> 00:36:44,170
<font color="#E5E5E5">run the best path algorithm and then</font>

706
00:36:41,680 --> 00:36:48,700
finally send only the single best part

707
00:36:44,170 --> 00:36:50,350
to my client so in this case what can be

708
00:36:48,700 --> 00:36:52,480
done is<font color="#E5E5E5"> basically you receive all the</font>

709
00:36:50,350 --> 00:36:57,220
routes and then you basically send all

710
00:36:52,480 --> 00:36:59,380
those routes to<font color="#CCCCCC"> your clients now the</font>

711
00:36:57,220 --> 00:37:01,089
client will decide which one is nearest

712
00:36:59,380 --> 00:37:07,450
to me and then I will choose<font color="#E5E5E5"> that at</font>

713
00:37:01,090 --> 00:37:09,340
<font color="#E5E5E5">that as my exit point so what happens</font>

714
00:37:07,450 --> 00:37:12,850
basically you make your route reflector

715
00:37:09,340 --> 00:37:15,310
more Boris in that case<font color="#E5E5E5"> you expect the</font>

716
00:37:12,850 --> 00:37:18,580
route reflector to send<font color="#E5E5E5"> all the prefixes</font>

717
00:37:15,310 --> 00:37:24,299
and then let the client decide which one

718
00:37:18,580 --> 00:37:24,299
it wants to choose as the exit point

719
00:37:27,180 --> 00:37:31,440
essentially<font color="#E5E5E5"> the disadvantages associated</font>

720
00:37:29,520 --> 00:37:33,720
with this kind of deployment is just

721
00:37:31,440 --> 00:37:36,480
basically you need to have more updates

722
00:37:33,720 --> 00:37:38,689
<font color="#CCCCCC">to be processed</font><font color="#E5E5E5"> now from the client</font>

723
00:37:36,480 --> 00:37:38,690
perspective

724
00:37:41,390 --> 00:37:45,080
another way<font color="#CCCCCC"> of solving this problem can</font>

725
00:37:43,460 --> 00:37:47,690
be customization of dissemination

726
00:37:45,080 --> 00:37:50,450
because what you do is you get the

727
00:37:47,690 --> 00:37:55,070
routes from route reflector and then you

728
00:37:50,450 --> 00:37:57,339
send customized routes to<font color="#CCCCCC"> your clients</font>

729
00:37:55,070 --> 00:38:00,580
so that<font color="#E5E5E5"> again not</font><font color="#CCCCCC"> necessarily the best</font>

730
00:37:57,340 --> 00:38:00,580
best route

731
00:38:04,160 --> 00:38:08,950
so basically the advantages it looks

732
00:38:06,530 --> 00:38:12,079
like you are actually deploying the

733
00:38:08,950 --> 00:38:15,189
routers in a full mesh because all the

734
00:38:12,079 --> 00:38:18,829
<font color="#CCCCCC">paths</font><font color="#E5E5E5"> are now visible to you as a client</font>

735
00:38:15,190 --> 00:38:20,539
but the disadvantage is associated with

736
00:38:18,829 --> 00:38:22,880
<font color="#E5E5E5">this kind of deployment is that your are</font>

737
00:38:20,539 --> 00:38:24,559
has to be very intelligent because<font color="#E5E5E5"> you</font>

738
00:38:22,880 --> 00:38:27,789
<font color="#E5E5E5">are customizing on the fly it's</font>

739
00:38:24,559 --> 00:38:27,789
basically real-time

740
00:38:31,550 --> 00:38:36,890
the other possible solution can be

741
00:38:33,350 --> 00:38:39,920
tunneling across the routers so this is

742
00:38:36,890 --> 00:38:41,270
<font color="#CCCCCC">actually used today in impedance</font>

743
00:38:39,920 --> 00:38:43,970
deployments what you have to do is

744
00:38:41,270 --> 00:38:46,009
basically you form logical tunnels and

745
00:38:43,970 --> 00:38:48,640
then you send your updates over the

746
00:38:46,010 --> 00:38:51,650
<font color="#E5E5E5">tunnel in that case</font><font color="#CCCCCC"> you basically avoid</font>

747
00:38:48,640 --> 00:38:53,839
you know processing time and you will

748
00:38:51,650 --> 00:38:56,230
basically receive all<font color="#CCCCCC"> the updates over</font>

749
00:38:53,840 --> 00:38:56,230
the<font color="#E5E5E5"> tunnel</font>

750
00:39:01,070 --> 00:39:07,100
but the disadvantage associated with

751
00:39:04,700 --> 00:39:09,410
such kind<font color="#E5E5E5"> of deployment is basically</font>

752
00:39:07,100 --> 00:39:11,390
again you run up with the tunnel<font color="#E5E5E5"> full</font>

753
00:39:09,410 --> 00:39:17,120
mesh so which again will bring up or

754
00:39:11,390 --> 00:39:19,279
scale empty problem so in summary

755
00:39:17,120 --> 00:39:21,350
<font color="#E5E5E5">basically when your full mesh doesn't</font>

756
00:39:19,280 --> 00:39:24,550
scale what you have<font color="#E5E5E5"> to do is basically</font>

757
00:39:21,350 --> 00:39:27,650
you need to deploy the route reflectors

758
00:39:24,550 --> 00:39:30,800
again it depends on how you<font color="#CCCCCC"> want to plan</font>

759
00:39:27,650 --> 00:39:34,820
you can have a<font color="#E5E5E5"> peers of router clutters</font>

760
00:39:30,800 --> 00:39:37,120
per pop you can have your regional

761
00:39:34,820 --> 00:39:41,570
router flickers and then you can have

762
00:39:37,120 --> 00:39:43,759
reflectors at the core so these<font color="#E5E5E5"> are the</font>

763
00:39:41,570 --> 00:39:46,970
recent ideas what we discussed are

764
00:39:43,760 --> 00:39:50,540
available and certain ideas are actually

765
00:39:46,970 --> 00:39:54,770
getting<font color="#CCCCCC"> pearlized as well so other</font>

766
00:39:50,540 --> 00:39:56,750
things<font color="#CCCCCC"> which I</font><font color="#E5E5E5"> would like to share is</font>

767
00:39:54,770 --> 00:40:01,690
basically when<font color="#CCCCCC"> you have the</font><font color="#E5E5E5"> ra</font>

768
00:39:56,750 --> 00:40:06,110
deployments you also need to<font color="#E5E5E5"> worry about</font>

769
00:40:01,690 --> 00:40:07,820
certain certain design which is

770
00:40:06,110 --> 00:40:13,160
basically how you want<font color="#E5E5E5"> to design your</font>

771
00:40:07,820 --> 00:40:15,250
router flitters it can be in hierarchy

772
00:40:13,160 --> 00:40:17,569
or in a pair of<font color="#E5E5E5"> two other thing is lat</font>

773
00:40:15,250 --> 00:40:19,550
when you have our deployments you

774
00:40:17,570 --> 00:40:23,240
introduce<font color="#CCCCCC"> two non transitive attributes</font>

775
00:40:19,550 --> 00:40:26,000
which is basically your cluster ID and

776
00:40:23,240 --> 00:40:29,419
noise neutrality so basically cluster ID

777
00:40:26,000 --> 00:40:32,600
is how<font color="#E5E5E5"> I can prevent loops when I have</font>

778
00:40:29,420 --> 00:40:34,040
our deployments in certain deployments

779
00:40:32,600 --> 00:40:37,130
it is observed that it is better to have

780
00:40:34,040 --> 00:40:39,560
router practice a single route reflector

781
00:40:37,130 --> 00:40:42,680
inside a single cluster in certain cases

782
00:40:39,560 --> 00:40:45,049
it is also<font color="#E5E5E5"> advisable to have pair of</font>

783
00:40:42,680 --> 00:40:47,359
routers in single cluster so the

784
00:40:45,050 --> 00:40:50,180
advantage with different cluster is

785
00:40:47,360 --> 00:40:53,870
basically you need not to you have more

786
00:40:50,180 --> 00:40:55,669
<font color="#E5E5E5">path diversity and when you</font><font color="#CCCCCC"> have route</font>

787
00:40:53,870 --> 00:40:58,870
of<font color="#E5E5E5"> texture inside single cluster you</font>

788
00:40:55,670 --> 00:40:58,870
will have less power diversity

789
00:41:07,180 --> 00:41:13,129
so so<font color="#CCCCCC"> far we discussed that what are the</font>

790
00:41:11,509 --> 00:41:15,499
<font color="#E5E5E5">things we need</font><font color="#CCCCCC"> to keep</font><font color="#E5E5E5"> in mind when we</font>

791
00:41:13,130 --> 00:41:17,749
deploy router protectors from the

792
00:41:15,499 --> 00:41:21,799
<font color="#E5E5E5">industry perspective there</font><font color="#CCCCCC"> are different</font>

793
00:41:17,749 --> 00:41:25,339
solutions which can be deployed with our

794
00:41:21,799 --> 00:41:27,950
are so these are not less specific to

795
00:41:25,339 --> 00:41:30,319
any particular vendor as such so what I

796
00:41:27,950 --> 00:41:32,269
did it just I noted down all the

797
00:41:30,319 --> 00:41:35,690
solutions which are<font color="#CCCCCC"> currently</font><font color="#E5E5E5"> available</font>

798
00:41:32,269 --> 00:41:39,399
in the market across different vendors

799
00:41:35,690 --> 00:41:43,249
so which we pick or add paths are

800
00:41:39,400 --> 00:41:45,890
helpful<font color="#CCCCCC"> in your forwarding plane what</font>

801
00:41:43,249 --> 00:41:48,230
happens as we discussed when you have

802
00:41:45,890 --> 00:41:50,450
any bgp deployments which you pay

803
00:41:48,230 --> 00:41:54,200
actually sends the only best path to

804
00:41:50,450 --> 00:41:57,859
other clients or peers so with<font color="#CCCCCC"> bishop</font><font color="#E5E5E5"> a</font>

805
00:41:54,200 --> 00:42:01,430
pic basically you have two solutions in

806
00:41:57,859 --> 00:42:03,348
<font color="#CCCCCC">the core and the</font><font color="#E5E5E5"> h so when you're</font>

807
00:42:01,430 --> 00:42:05,450
calling the ghost towns or your edge

808
00:42:03,349 --> 00:42:08,630
goes down you have redundant paths

809
00:42:05,450 --> 00:42:12,109
available at<font color="#CCCCCC"> you are forwarding so your</font>

810
00:42:08,630 --> 00:42:14,960
forwarding is not impacted same as add

811
00:42:12,109 --> 00:42:17,269
path when you would apply essentially

812
00:42:14,960 --> 00:42:19,400
with route reflectors what you can have

813
00:42:17,269 --> 00:42:23,779
you<font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> ask route reflectors to</font>

814
00:42:19,400 --> 00:42:25,940
<font color="#E5E5E5">send more than one best part virtual</font>

815
00:42:23,779 --> 00:42:27,619
router is again deployed as a shadow

816
00:42:25,940 --> 00:42:29,690
router so basically you have a primary

817
00:42:27,619 --> 00:42:31,249
router and then secondary router so

818
00:42:29,690 --> 00:42:33,109
primary router will always send you the

819
00:42:31,249 --> 00:42:36,279
<font color="#E5E5E5">best part and the secondary will</font>

820
00:42:33,109 --> 00:42:39,828
actually send you the second best part

821
00:42:36,279 --> 00:42:42,380
bgp multipath again is<font color="#CCCCCC"> very useful in</font>

822
00:42:39,829 --> 00:42:44,150
case of load balancing so what

823
00:42:42,380 --> 00:42:47,320
essentially you have you have<font color="#E5E5E5"> different</font>

824
00:42:44,150 --> 00:42:50,590
<font color="#E5E5E5">paths</font><font color="#CCCCCC"> to reach the same destination</font>

825
00:42:47,320 --> 00:42:55,160
which we best external again is used

826
00:42:50,590 --> 00:42:56,990
mainly for backup purpose what happens

827
00:42:55,160 --> 00:42:59,870
at the edge when you receive<font color="#E5E5E5"> the</font>

828
00:42:56,990 --> 00:43:03,259
external prefixes and your external

829
00:42:59,870 --> 00:43:05,390
prefixes are actually sent by your edge

830
00:43:03,260 --> 00:43:07,610
whatever is the best because what

831
00:43:05,390 --> 00:43:10,250
happens when you have at the edge you

832
00:43:07,610 --> 00:43:12,170
will apply the<font color="#E5E5E5"> BGP policies and because</font>

833
00:43:10,250 --> 00:43:14,570
of that as we<font color="#E5E5E5"> discussed earlier your</font>

834
00:43:12,170 --> 00:43:17,660
power diversity will be reduced but with

835
00:43:14,570 --> 00:43:20,210
bgp best external what your second edge

836
00:43:17,660 --> 00:43:22,339
or the backup<font color="#E5E5E5"> h what it can does is</font>

837
00:43:20,210 --> 00:43:24,700
basically it can also send the second

838
00:43:22,340 --> 00:43:31,010
best or alternate external path to your

839
00:43:24,700 --> 00:43:34,129
internal ip's<font color="#E5E5E5"> we pin unique rd this is</font>

840
00:43:31,010 --> 00:43:37,340
actually deployed for router collectors

841
00:43:34,130 --> 00:43:41,330
in mpls core so what essentially does

842
00:43:37,340 --> 00:43:44,510
normally we assign the router ID or rd

843
00:43:41,330 --> 00:43:47,840
value to each customer to distinguish

844
00:43:44,510 --> 00:43:49,340
the customers but in this case what you

845
00:43:47,840 --> 00:43:50,960
can do is basically for different

846
00:43:49,340 --> 00:43:54,680
customer sites you can assign different

847
00:43:50,960 --> 00:43:57,410
route router IDs or are these values so

848
00:43:54,680 --> 00:44:00,680
when it comes to your route reflector it

849
00:43:57,410 --> 00:44:02,330
will consider those routes as unique

850
00:44:00,680 --> 00:44:06,500
because each of these routes are

851
00:44:02,330 --> 00:44:08,270
assigned with different rd value so by

852
00:44:06,500 --> 00:44:11,510
this what essentially you<font color="#CCCCCC"> can do you can</font>

853
00:44:08,270 --> 00:44:14,770
actually reflect both the routes to your

854
00:44:11,510 --> 00:44:14,770
insight<font color="#CCCCCC"> peers</font>

855
00:44:15,730 --> 00:44:21,640
and last one<font color="#E5E5E5"> is multiple cluster IDs so</font>

856
00:44:19,300 --> 00:44:25,810
basically<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you deploy our are you</font>

857
00:44:21,640 --> 00:44:28,660
essentially not to have the pairing

858
00:44:25,810 --> 00:44:30,880
among the clients itself so as we

859
00:44:28,660 --> 00:44:32,290
discussed once you have<font color="#CCCCCC"> our deployments</font>

860
00:44:30,880 --> 00:44:35,380
you should have the pairings between

861
00:44:32,290 --> 00:44:37,000
your router<font color="#E5E5E5"> flickr and the clients but</font>

862
00:44:35,380 --> 00:44:38,740
in certain cases in certain deployments

863
00:44:37,000 --> 00:44:42,310
it is observed that you also<font color="#E5E5E5"> need to</font>

864
00:44:38,740 --> 00:44:44,859
have the client to client appearing as

865
00:44:42,310 --> 00:44:46,690
well required so those kind of scenarios

866
00:44:44,859 --> 00:44:50,710
what you can do this feature is very

867
00:44:46,690 --> 00:44:53,650
useful you<font color="#E5E5E5"> basically assign each</font>

868
00:44:50,710 --> 00:44:56,740
neighbor each client into certain into a

869
00:44:53,650 --> 00:44:58,869
different cluster ID and then in your

870
00:44:56,740 --> 00:45:00,430
are in your router collector you

871
00:44:58,869 --> 00:45:03,970
basically basically can have

872
00:45:00,430 --> 00:45:06,100
configuration to avoid the client to

873
00:45:03,970 --> 00:45:08,950
client<font color="#CCCCCC"> reflections so let's say if</font><font color="#E5E5E5"> I</font>

874
00:45:06,100 --> 00:45:12,368
have a client a and client be and I put

875
00:45:08,950 --> 00:45:14,859
those clients into single cluster now i

876
00:45:12,369 --> 00:45:17,470
can have policy which says that ok<font color="#E5E5E5"> you'd</font>

877
00:45:14,859 --> 00:45:19,720
reflect all<font color="#CCCCCC"> the routes from client a to</font>

878
00:45:17,470 --> 00:45:21,399
climb be or you don't want to reflect

879
00:45:19,720 --> 00:45:23,439
those routes from client a to climb be

880
00:45:21,400 --> 00:45:25,690
so those kinds<font color="#CCCCCC"> of policies can be very</font>

881
00:45:23,440 --> 00:45:28,140
well deployed with this kind of

882
00:45:25,690 --> 00:45:28,140
solutions

883
00:45:33,430 --> 00:45:39,730
so in<font color="#CCCCCC"> summary basically of what we</font>

884
00:45:36,790 --> 00:45:42,250
discussed is as your network grow and

885
00:45:39,730 --> 00:45:44,829
you have route reflector deployments you

886
00:45:42,250 --> 00:45:49,030
need to think about how<font color="#CCCCCC"> can you actually</font>

887
00:45:44,829 --> 00:45:51,300
characterize quantify the important

888
00:45:49,030 --> 00:45:54,040
parameters which affects your forwarding

889
00:45:51,300 --> 00:45:56,170
so if it affects your forwarding it will

890
00:45:54,040 --> 00:45:59,079
essentially affects your services as

891
00:45:56,170 --> 00:46:01,119
well so there's different techniques

892
00:45:59,079 --> 00:46:03,010
which are<font color="#CCCCCC"> available in the market you</font>

893
00:46:01,119 --> 00:46:05,619
just need to think about which technique

894
00:46:03,010 --> 00:46:10,319
or which solutions fits your requirement

895
00:46:05,619 --> 00:46:12,910
and then actually you can basically have

896
00:46:10,319 --> 00:46:15,720
certain parameters which you need<font color="#E5E5E5"> to</font>

897
00:46:12,910 --> 00:46:19,598
tick and then deploy those kind<font color="#E5E5E5"> of</font>

898
00:46:15,720 --> 00:46:21,879
solutions so what happens in the case<font color="#E5E5E5"> of</font>

899
00:46:19,599 --> 00:46:24,490
route reflectors for all the<font color="#CCCCCC"> malting</font>

900
00:46:21,880 --> 00:46:27,430
purpose normally the I space runs the

901
00:46:24,490 --> 00:46:30,368
passive session with your route

902
00:46:27,430 --> 00:46:32,410
reflector so from those you will get all

903
00:46:30,369 --> 00:46:33,579
the prefix information and once you have

904
00:46:32,410 --> 00:46:36,730
prefix information you can actually

905
00:46:33,579 --> 00:46:39,780
<font color="#E5E5E5">quantify and characterize just to give</font>

906
00:46:36,730 --> 00:46:43,780
an example basically let's say if I have

907
00:46:39,780 --> 00:46:46,960
if I am a large ISP and I am worrying

908
00:46:43,780 --> 00:46:50,650
about how<font color="#CCCCCC"> many percentage of my prefixes</font>

909
00:46:46,960 --> 00:46:52,630
are actually having part diversity from

910
00:46:50,650 --> 00:46:55,420
let's say range<font color="#E5E5E5"> 5 to 9 which is</font>

911
00:46:52,630 --> 00:46:58,150
considered as a good part diversity so

912
00:46:55,420 --> 00:47:00,280
what I<font color="#CCCCCC"> need to do I need to</font><font color="#E5E5E5"> first find</font>

913
00:46:58,150 --> 00:47:03,760
out our first<font color="#E5E5E5"> I need to run passive</font>

914
00:47:00,280 --> 00:47:05,920
<font color="#E5E5E5">monitoring with my route reflectors get</font>

915
00:47:03,760 --> 00:47:09,880
all the data and then quantify those

916
00:47:05,920 --> 00:47:12,790
data so one of the observation is seen

917
00:47:09,880 --> 00:47:15,869
that for<font color="#E5E5E5"> I speeds which doesn't have a</font>

918
00:47:12,790 --> 00:47:18,849
geographical presence in one location

919
00:47:15,869 --> 00:47:23,500
those turns out to be having large part

920
00:47:18,849 --> 00:47:25,180
diversity the reason being those those

921
00:47:23,500 --> 00:47:27,190
clients or those peers doesn't have

922
00:47:25,180 --> 00:47:28,930
direct connectivity with the I<font color="#CCCCCC"> space</font>

923
00:47:27,190 --> 00:47:31,240
self so it<font color="#E5E5E5"> has to grow through some</font>

924
00:47:28,930 --> 00:47:34,480
other ISPs or some other regional ice

925
00:47:31,240 --> 00:47:37,390
piece so the prefixes becomes will have

926
00:47:34,480 --> 00:47:39,970
very high part<font color="#E5E5E5"> diversity so in this case</font>

927
00:47:37,390 --> 00:47:41,430
basically your autonomous system power

928
00:47:39,970 --> 00:47:45,069
diversity will be very high

929
00:47:41,430 --> 00:47:47,919
so in certain in this cases the part of

930
00:47:45,070 --> 00:47:51,940
<font color="#E5E5E5">Z can run from 40 to 50 so which</font><font color="#CCCCCC"> is too</font>

931
00:47:47,920 --> 00:47:55,420
high again not desirable so those kind

932
00:47:51,940 --> 00:47:57,910
of things has<font color="#CCCCCC"> to be quantified has to be</font>

933
00:47:55,420 --> 00:48:00,520
unjust understand well before we<font color="#E5E5E5"> get</font>

934
00:47:57,910 --> 00:48:03,640
into deployment same thing from the

935
00:48:00,520 --> 00:48:06,880
convergence perspective what happens if

936
00:48:03,640 --> 00:48:09,730
you have a are a topology which is not

937
00:48:06,880 --> 00:48:13,240
essentially designed well which is<font color="#E5E5E5"> not</font>

938
00:48:09,730 --> 00:48:16,450
following your physical topology so the

939
00:48:13,240 --> 00:48:18,729
major disadvantage between which will be

940
00:48:16,450 --> 00:48:20,169
faced is your data forwarding loop or

941
00:48:18,730 --> 00:48:22,660
your<font color="#CCCCCC"> route oscillation which we</font>

942
00:48:20,170 --> 00:48:25,510
discussed<font color="#E5E5E5"> earlier so those kind of</font>

943
00:48:22,660 --> 00:48:27,490
things has<font color="#CCCCCC"> to be keep in mind and last</font>

944
00:48:25,510 --> 00:48:30,520
but<font color="#E5E5E5"> not least from the policy</font>

945
00:48:27,490 --> 00:48:32,020
perspective again as we see we can

946
00:48:30,520 --> 00:48:34,750
actually characterize the attributes

947
00:48:32,020 --> 00:48:36,970
also so the first four attributes are

948
00:48:34,750 --> 00:48:41,740
not dependent on topology<font color="#E5E5E5"> the other</font>

949
00:48:36,970 --> 00:48:47,020
three are so with all this in mind once

950
00:48:41,740 --> 00:48:49,060
<font color="#E5E5E5">you have your internal code running BGP</font>

951
00:48:47,020 --> 00:48:51,750
with the router<font color="#CCCCCC"> flickers you will</font>

952
00:48:49,060 --> 00:48:55,029
basically get better result you will get

953
00:48:51,750 --> 00:48:58,480
benefit and end of the day you<font color="#E5E5E5"> will have</font>

954
00:48:55,030 --> 00:49:03,330
better customer satisfaction so this<font color="#CCCCCC"> is</font>

955
00:48:58,480 --> 00:49:03,330
all I have now if<font color="#E5E5E5"> I have any question</font>

956
00:49:24,500 --> 00:49:28,970
it is car tech from a phone networks

957
00:49:26,860 --> 00:49:30,130
question for you is given the<font color="#E5E5E5"> star</font>

958
00:49:28,970 --> 00:49:32,890
<font color="#E5E5E5">straight at the standards right now is</font>

959
00:49:30,130 --> 00:49:35,750
router friction with multipath

960
00:49:32,890 --> 00:49:37,790
completely viable to implement so that

961
00:49:35,750 --> 00:49:39,710
you can avoid all<font color="#E5E5E5"> the you know the</font>

962
00:49:37,790 --> 00:49:42,560
looping and all the stuff that you

963
00:49:39,710 --> 00:49:44,690
pointed out yeah it is yeah it's a good

964
00:49:42,560 --> 00:49:47,509
<font color="#E5E5E5">question basically definitely it is</font>

965
00:49:44,690 --> 00:49:48,650
viable<font color="#CCCCCC"> with drought reflectors the only</font>

966
00:49:47,510 --> 00:49:52,040
thing<font color="#CCCCCC"> is again you have</font><font color="#E5E5E5"> to worry about</font>

967
00:49:48,650 --> 00:49:56,540
your policy design as<font color="#E5E5E5"> I discussed so for</font>

968
00:49:52,040 --> 00:49:58,250
<font color="#E5E5E5">multi-part to to be very uh you know</font><font color="#CCCCCC"> de</font>

969
00:49:56,540 --> 00:50:01,570
<font color="#CCCCCC">pliable solution with ours you need to</font>

970
00:49:58,250 --> 00:50:03,920
worry<font color="#E5E5E5"> about the</font><font color="#CCCCCC"> other path vectors so</font>

971
00:50:01,570 --> 00:50:06,580
basically let's say you need<font color="#CCCCCC"> to come at</font>

972
00:50:03,920 --> 00:50:08,600
a point where you can receive the

973
00:50:06,580 --> 00:50:11,390
different updates for the same prefix

974
00:50:08,600 --> 00:50:13,430
and then make<font color="#CCCCCC"> sure that your topological</font>

975
00:50:11,390 --> 00:50:15,950
independent parameters<font color="#E5E5E5"> are same so</font><font color="#CCCCCC"> in</font>

976
00:50:13,430 --> 00:50:19,690
that way you can actually<font color="#E5E5E5"> deploy those</font>

977
00:50:15,950 --> 00:50:19,689
solutions with<font color="#E5E5E5"> now to practice as well</font>

978
00:50:27,809 --> 00:50:38,049
comment question on<font color="#CCCCCC"> your slide 41 vendor</font>

979
00:50:31,089 --> 00:50:39,970
solutions great great slide I was slices

980
00:50:38,049 --> 00:50:44,470
vendor solutions although many<font color="#E5E5E5"> of those</font>

981
00:50:39,970 --> 00:50:49,089
solutions are in<font color="#E5E5E5"> rfcs I just my question</font>

982
00:50:44,470 --> 00:50:51,430
was<font color="#E5E5E5"> are all of them in rfcs and I'm not</font>

983
00:50:49,089 --> 00:50:54,819
sure<font color="#CCCCCC"> about bgp pick a new cisco bgp pic</font>

984
00:50:51,430 --> 00:50:58,690
but uh yeah so if you see BJP pic is

985
00:50:54,819 --> 00:51:01,390
actually available listeners there's no

986
00:50:58,690 --> 00:51:02,950
RFC ok so<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> nice so my mic is by my</font>

987
00:51:01,390 --> 00:51:05,430
basic question<font color="#E5E5E5"> well which one of those</font>

988
00:51:02,950 --> 00:51:09,098
are not RFC's because many of them are

989
00:51:05,430 --> 00:51:11,529
ya so not<font color="#CCCCCC"> sure exactly because what i</font>

990
00:51:09,099 --> 00:51:14,410
did i just try to find out all the

991
00:51:11,530 --> 00:51:17,740
available<font color="#CCCCCC"> solutions</font><font color="#E5E5E5"> as such so i didn't</font>

992
00:51:14,410 --> 00:51:20,500
<font color="#CCCCCC">have a path for sure multi path for sure</font>

993
00:51:17,740 --> 00:51:24,669
yeah so<font color="#E5E5E5"> i think multiple is definitely</font>

994
00:51:20,500 --> 00:51:26,829
RFC is there for over external also<font color="#E5E5E5"> i I</font>

995
00:51:24,670 --> 00:51:29,859
think<font color="#CCCCCC"> there's I think everything except</font>

996
00:51:26,829 --> 00:51:33,390
bgp peak is a standard or bgp peak and

997
00:51:29,859 --> 00:51:36,730
virtual<font color="#CCCCCC"> RR Victor R</font><font color="#E5E5E5"> is just a way of</font>

998
00:51:33,390 --> 00:51:38,890
implementation right so on the visual

999
00:51:36,730 --> 00:51:42,579
<font color="#E5E5E5">note not on the real ruler which is</font>

1000
00:51:38,890 --> 00:51:46,270
different story and a bgp peek a peek is

1001
00:51:42,579 --> 00:51:51,339
how they internally in software running

1002
00:51:46,270 --> 00:51:55,270
on the pro on the on the router the bgp

1003
00:51:51,339 --> 00:51:58,029
<font color="#E5E5E5">next hop are resolved in by internal</font>

1004
00:51:55,270 --> 00:52:03,880
path for two nails yeah so its internal

1005
00:51:58,029 --> 00:52:06,190
behavior of the so it's not a point to

1006
00:52:03,880 --> 00:52:10,150
standardize it yeah so let me<font color="#CCCCCC"> explain</font>

1007
00:52:06,190 --> 00:52:12,400
how<font color="#CCCCCC"> it works so think BJP</font><font color="#E5E5E5"> pic let's say</font>

1008
00:52:10,150 --> 00:52:15,819
you receive thousands<font color="#CCCCCC"> of prefixes right</font>

1009
00:52:12,400 --> 00:52:18,220
so when<font color="#E5E5E5"> you receive those prefixes you</font>

1010
00:52:15,819 --> 00:52:19,779
basically translate those remain trees

1011
00:52:18,220 --> 00:52:21,848
into your fav entries forwarding enter

1012
00:52:19,779 --> 00:52:23,890
Israel so in forwarding it is basically

1013
00:52:21,849 --> 00:52:25,750
<font color="#E5E5E5">what you need is your next stop resort</font>

1014
00:52:23,890 --> 00:52:27,848
next top because your next stop can be

1015
00:52:25,750 --> 00:52:30,400
recursive and then you finally find out

1016
00:52:27,849 --> 00:52:33,400
the exit point so the exit interface in

1017
00:52:30,400 --> 00:52:36,339
normal flat flip architecture what

1018
00:52:33,400 --> 00:52:39,200
happens your next stop interface and

1019
00:52:36,339 --> 00:52:42,619
next of exit interface are tied up

1020
00:52:39,200 --> 00:52:44,810
so let's say there is any change in next

1021
00:52:42,619 --> 00:52:47,510
stop all your thousand prefixes has to

1022
00:52:44,810 --> 00:52:49,490
be updated in your favor but in case<font color="#CCCCCC"> of</font>

1023
00:52:47,510 --> 00:52:52,310
pic which is<font color="#CCCCCC"> a different design is a</font>

1024
00:52:49,490 --> 00:52:54,348
hierarchical design so what essentially

1025
00:52:52,310 --> 00:52:58,670
does when your<font color="#E5E5E5"> next stop gets change</font>

1026
00:52:54,349 --> 00:53:01,070
only the<font color="#CCCCCC"> igp is getting impacted so from</font>

1027
00:52:58,670 --> 00:53:03,619
the BGP perspective<font color="#CCCCCC"> there is not that</font>

1028
00:53:01,070 --> 00:53:06,140
much<font color="#E5E5E5"> update has to be done so in that</font>

1029
00:53:03,619 --> 00:53:07,910
way it's basically very useful I agree

1030
00:53:06,140 --> 00:53:10,609
there's no sick there's no signaling for

1031
00:53:07,910 --> 00:53:12,020
pickets no different than f RR LS yeah

1032
00:53:10,609 --> 00:53:14,060
so it's really a forwarding solution

1033
00:53:12,020 --> 00:53:17,060
<font color="#CCCCCC">it's enter an alternate note yeah okay</font>

1034
00:53:14,060 --> 00:53:18,710
most of them okay I was just<font color="#E5E5E5"> not</font>

1035
00:53:17,060 --> 00:53:22,450
familiar with two or three<font color="#CCCCCC"> of them or so</font>

1036
00:53:18,710 --> 00:53:22,450
so they are in our season sure

1037
00:53:27,950 --> 00:53:33,500
I Clinton would tell us I just had a

1038
00:53:30,950 --> 00:53:34,939
question didn't really cover it here are

1039
00:53:33,500 --> 00:53:37,099
their pros and cons people should

1040
00:53:34,940 --> 00:53:38,990
consider in their design whether they

1041
00:53:37,099 --> 00:53:41,030
use external route reflectors or

1042
00:53:38,990 --> 00:53:46,729
actually implement the route reflection

1043
00:53:41,030 --> 00:53:49,579
on their existing routers thank you I'll

1044
00:53:46,730 --> 00:53:50,900
get<font color="#E5E5E5"> it a video question I'm just</font>

1045
00:53:49,579 --> 00:53:54,560
wondering if there are design

1046
00:53:50,900 --> 00:53:56,750
considerations about using implementing

1047
00:53:54,560 --> 00:53:59,859
route reflection on actual your existing

1048
00:53:56,750 --> 00:54:03,200
you know core routers or going with

1049
00:53:59,859 --> 00:54:05,660
dedicated rock reflectors<font color="#CCCCCC"> okay so</font>

1050
00:54:03,200 --> 00:54:08,029
<font color="#E5E5E5">essentially there are two parts as I</font>

1051
00:54:05,660 --> 00:54:09,470
discussed right if you let's say already

1052
00:54:08,030 --> 00:54:11,960
have an existing route reflector

1053
00:54:09,470 --> 00:54:14,868
deployed right so you need to

1054
00:54:11,960 --> 00:54:17,390
characterize from the perspective of

1055
00:54:14,869 --> 00:54:21,260
your power diversity and convergence if

1056
00:54:17,390 --> 00:54:23,569
it is already existing because what

1057
00:54:21,260 --> 00:54:25,760
happens if you let's<font color="#CCCCCC"> say your design is</font>

1058
00:54:23,570 --> 00:54:28,490
varying at the pop level let's say you

1059
00:54:25,760 --> 00:54:31,130
deployed error in a pair of<font color="#E5E5E5"> two but at</font>

1060
00:54:28,490 --> 00:54:33,200
the original<font color="#E5E5E5"> core use let's say you have</font>

1061
00:54:31,130 --> 00:54:35,329
only a single redundant so what this

1062
00:54:33,200 --> 00:54:39,348
essentially are doing is you are having

1063
00:54:35,329 --> 00:54:42,560
a problem of our<font color="#E5E5E5"> no scalability and as</font>

1064
00:54:39,349 --> 00:54:44,329
well as<font color="#E5E5E5"> reliability so those aspects if</font>

1065
00:54:42,560 --> 00:54:46,700
you are already deployed has to be

1066
00:54:44,329 --> 00:54:48,680
characterized and then you need to take

1067
00:54:46,700 --> 00:54:52,790
<font color="#E5E5E5">a decision whether you want</font><font color="#CCCCCC"> to change</font>

1068
00:54:48,680 --> 00:54:54,290
those existing designs and other things

1069
00:54:52,790 --> 00:54:56,630
what you said if you<font color="#CCCCCC"> are having a new</font>

1070
00:54:54,290 --> 00:55:01,940
deployment then I<font color="#E5E5E5"> would</font><font color="#CCCCCC"> suggest</font><font color="#E5E5E5"> you need</font>

1071
00:54:56,630 --> 00:55:04,940
to design your physical topology in such

1072
00:55:01,940 --> 00:55:07,670
way that it actually when<font color="#E5E5E5"> you deploy our</font>

1073
00:55:04,940 --> 00:55:09,290
it follows the physical topology so for

1074
00:55:07,670 --> 00:55:12,859
example<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are coming up with a new pop</font>

1075
00:55:09,290 --> 00:55:15,980
design and you let's say you know what

1076
00:55:12,859 --> 00:55:18,020
is the size of my pop<font color="#E5E5E5"> right if the two</font>

1077
00:55:15,980 --> 00:55:21,109
route reflectors are sufficient you go

1078
00:55:18,020 --> 00:55:23,839
ahead<font color="#E5E5E5"> and deploy that if you think right</font>

1079
00:55:21,109 --> 00:55:25,880
you need to<font color="#CCCCCC"> put those reflectors into</font>

1080
00:55:23,839 --> 00:55:28,369
certain again depending on your pop

1081
00:55:25,880 --> 00:55:31,910
requirements so what you can do<font color="#CCCCCC"> you can</font>

1082
00:55:28,369 --> 00:55:33,710
actually<font color="#E5E5E5"> put single or to both the</font>

1083
00:55:31,910 --> 00:55:35,700
router flickers into a single cluster or

1084
00:55:33,710 --> 00:55:37,510
you can have

1085
00:55:35,700 --> 00:55:40,240
both the routers in two different

1086
00:55:37,510 --> 00:55:43,590
clusters the reason<font color="#CCCCCC"> being said is all</font>

1087
00:55:40,240 --> 00:55:47,529
this boils down to your convergence and

1088
00:55:43,590 --> 00:55:50,620
part diversity so once you<font color="#CCCCCC"> have let's</font>

1089
00:55:47,530 --> 00:55:54,070
say a single router ID or dual routers

1090
00:55:50,620 --> 00:55:55,839
which are deployed as a pair so the

1091
00:55:54,070 --> 00:55:57,880
other pair which is redundant will also

1092
00:55:55,840 --> 00:56:00,190
generate lot of updates and that has to

1093
00:55:57,880 --> 00:56:03,280
<font color="#CCCCCC">be processed by the clients and which</font>

1094
00:56:00,190 --> 00:56:07,720
has to be which has I impact on the

1095
00:56:03,280 --> 00:56:10,120
convergence as well<font color="#CCCCCC"> ok thank you good</font>

1096
00:56:07,720 --> 00:56:12,549
morning<font color="#CCCCCC"> John washer f 52 notes real</font>

1097
00:56:10,120 --> 00:56:13,900
quick on the tuning section two things

1098
00:56:12,550 --> 00:56:17,290
that<font color="#E5E5E5"> can really help from a convergence</font>

1099
00:56:13,900 --> 00:56:18,790
stand time standpoint is advertisement

1100
00:56:17,290 --> 00:56:21,610
interval and adjustment interval or

1101
00:56:18,790 --> 00:56:23,710
upright update interval right depending

1102
00:56:21,610 --> 00:56:26,410
on<font color="#CCCCCC"> the version of the iOS depending on</font>

1103
00:56:23,710 --> 00:56:28,450
the hardware platform update interval in

1104
00:56:26,410 --> 00:56:30,100
some cases can be by default a lot

1105
00:56:28,450 --> 00:56:33,279
higher and can be reduced to something

1106
00:56:30,100 --> 00:56:34,900
like<font color="#CCCCCC"> 0 yeah so just to elaborate</font><font color="#E5E5E5"> it's a</font>

1107
00:56:33,280 --> 00:56:37,510
very good<font color="#E5E5E5"> point when you have</font>

1108
00:56:34,900 --> 00:56:40,960
convergence related parameters of that

1109
00:56:37,510 --> 00:56:44,110
two important factors are rather many

1110
00:56:40,960 --> 00:56:47,050
important timers out of those one is the

1111
00:56:44,110 --> 00:56:49,420
advertising interval so as we see right

1112
00:56:47,050 --> 00:56:51,580
we have to essentially two kinds<font color="#E5E5E5"> of</font>

1113
00:56:49,420 --> 00:56:54,580
pairings one is your a BGP and other is

1114
00:56:51,580 --> 00:56:56,740
ibgp normally different vendors have

1115
00:56:54,580 --> 00:56:59,410
different default timers to send the

1116
00:56:56,740 --> 00:57:02,020
update so to just give an example let's

1117
00:56:59,410 --> 00:57:04,120
say if<font color="#E5E5E5"> I have our route if I have a</font>

1118
00:57:02,020 --> 00:57:05,800
topology which is converged and let's

1119
00:57:04,120 --> 00:57:08,440
say there is some internal event happens

1120
00:57:05,800 --> 00:57:11,650
maybe your route goes or your next stop

1121
00:57:08,440 --> 00:57:14,260
gets change so in this case<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to</font>

1122
00:57:11,650 --> 00:57:17,500
withdraw that out first which<font color="#E5E5E5"> is the</font>

1123
00:57:14,260 --> 00:57:19,300
best<font color="#E5E5E5"> which is I originated and then you</font>

1124
00:57:17,500 --> 00:57:21,640
have<font color="#E5E5E5"> to look out for other possible</font>

1125
00:57:19,300 --> 00:57:26,470
routes which are present for the same

1126
00:57:21,640 --> 00:57:28,750
prefix<font color="#CCCCCC"> ride so for I bgp the</font><font color="#E5E5E5"> advertising</font>

1127
00:57:26,470 --> 00:57:32,439
interval is sometimes set to 0 or<font color="#E5E5E5"> 5</font>

1128
00:57:28,750 --> 00:57:36,700
second default so that means as soon as

1129
00:57:32,440 --> 00:57:39,070
<font color="#E5E5E5">I detect any kind of convergence event I</font>

1130
00:57:36,700 --> 00:57:42,310
will start sending the updates

1131
00:57:39,070 --> 00:57:45,119
immediately for ibgp and in case<font color="#CCCCCC"> of a</font>

1132
00:57:42,310 --> 00:57:48,480
bitch if it is from five to 25 seconds

1133
00:57:45,119 --> 00:57:51,089
depending<font color="#CCCCCC"> on different vendors so normal</font>

1134
00:57:48,480 --> 00:57:54,240
best practice I've seen that most of the

1135
00:57:51,089 --> 00:57:57,720
<font color="#CCCCCC">SPS keep the BGP timers the internal</font>

1136
00:57:54,240 --> 00:57:59,910
ibgp advertiser interval as 0 and four

1137
00:57:57,720 --> 00:58:02,269
external it is up to<font color="#E5E5E5"> five five to ten</font>

1138
00:57:59,910 --> 00:58:02,269
seconds

1139
00:58:05,450 --> 00:58:10,609
hi this<font color="#E5E5E5"> soggy with charter just a quick</font>

1140
00:58:07,790 --> 00:58:13,670
question<font color="#CCCCCC"> on confederations you mentioned</font>

1141
00:58:10,609 --> 00:58:16,549
that<font color="#E5E5E5"> the sub a esas have to be private a</font>

1142
00:58:13,670 --> 00:58:18,950
SS can you use<font color="#CCCCCC"> public areas that brings</font>

1143
00:58:16,550 --> 00:58:20,480
problem it can see from the

1144
00:58:18,950 --> 00:58:22,520
configuration side you can actually<font color="#CCCCCC"> do</font>

1145
00:58:20,480 --> 00:58:25,310
but from the actual deployment site you

1146
00:58:22,520 --> 00:58:29,690
should<font color="#CCCCCC"> not because the reason</font><font color="#E5E5E5"> is let's</font>

1147
00:58:25,310 --> 00:58:32,390
say if you<font color="#E5E5E5"> use publicly available ace</font>

1148
00:58:29,690 --> 00:58:34,339
numbers right so that's do those number

1149
00:58:32,390 --> 00:58:37,490
can be used<font color="#E5E5E5"> by other is which are</font>

1150
00:58:34,339 --> 00:58:40,160
<font color="#CCCCCC">actually the external ears is right so</font>

1151
00:58:37,490 --> 00:58:43,069
it is<font color="#E5E5E5"> not recommended definitely to use</font>

1152
00:58:40,160 --> 00:58:48,618
public<font color="#E5E5E5"> aces for your configuration</font>

1153
00:58:43,070 --> 00:58:51,050
services yeah<font color="#CCCCCC"> I making assumptions</font><font color="#E5E5E5"> as</font>

1154
00:58:48,619 --> 00:58:53,200
you all them so this is just<font color="#E5E5E5"> kind of a</font>

1155
00:58:51,050 --> 00:58:57,369
preparation if you have<font color="#E5E5E5"> mota</font><font color="#CCCCCC"> s design</font>

1156
00:58:53,200 --> 00:58:59,810
then you can manage between

1157
00:58:57,369 --> 00:59:01,520
<font color="#CCCCCC">confederations and moat I guess so but</font>

1158
00:58:59,810 --> 00:59:03,078
technically you can do it as long as you

1159
00:59:01,520 --> 00:59:06,650
own them oh yes<font color="#E5E5E5"> you're right technically</font>

1160
00:59:03,079 --> 00:59:08,660
you can do but as far as i know i<font color="#CCCCCC"> think</font>

1161
00:59:06,650 --> 00:59:12,640
it is<font color="#E5E5E5"> not recommended to have public</font>

1162
00:59:08,660 --> 00:59:12,640
cases for your<font color="#CCCCCC"> confrontation</font>

1163
00:59:21,520 --> 00:59:29,140
just to that point okay in my experience

1164
00:59:25,900 --> 00:59:33,490
it's like a 19 years already the<font color="#CCCCCC"> icy</font>

1165
00:59:29,140 --> 00:59:35,500
Confederations almost always in a condo

1166
00:59:33,490 --> 00:59:37,870
in the case<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> acquisition of</font>

1167
00:59:35,500 --> 00:59:40,840
marriage in college and in this case the

1168
00:59:37,870 --> 00:59:43,450
public is<font color="#E5E5E5"> is preserve yeah so one of</font>

1169
00:59:40,840 --> 00:59:47,530
them or the new one is the external

1170
00:59:43,450 --> 00:59:50,230
external external one but if so if I own

1171
00:59:47,530 --> 00:59:53,590
my ass number and I'm a lead I'm a

1172
00:59:50,230 --> 00:59:56,710
legitimate<font color="#CCCCCC"> owner of it I can use it</font><font color="#E5E5E5"> it's</font>

1173
00:59:53,590 --> 00:59:59,820
a just unique identifier if I'm planning

1174
00:59:56,710 --> 01:00:02,500
the new network using Confederations

1175
00:59:59,820 --> 01:00:06,220
yeah better use private because then you

1176
01:00:02,500 --> 01:00:07,810
can have<font color="#E5E5E5"> it more right how many public</font>

1177
01:00:06,220 --> 01:00:12,700
is as you may have you may ask for<font color="#E5E5E5"> two</font>

1178
01:00:07,810 --> 01:00:14,590
maybe I'm really private you<font color="#CCCCCC"> can just be</font>

1179
01:00:12,700 --> 01:00:16,450
more<font color="#E5E5E5"> flexible so you are right I just</font>

1180
01:00:14,590 --> 01:00:19,060
want to elaborate<font color="#CCCCCC"> more here is basically</font>

1181
01:00:16,450 --> 01:00:21,129
<font color="#E5E5E5">they're two scenarios as rightly</font>

1182
01:00:19,060 --> 01:00:24,640
mentioned let's see if I have a

1183
01:00:21,130 --> 01:00:25,990
equitation right in those<font color="#CCCCCC"> cases of there</font>

1184
01:00:24,640 --> 01:00:28,799
are certain visibly tools which are

1185
01:00:25,990 --> 01:00:31,629
available let's say if<font color="#E5E5E5"> I am</font><font color="#CCCCCC"> using a</font>

1186
01:00:28,800 --> 01:00:33,370
private-public a SS right so there's

1187
01:00:31,630 --> 01:00:35,410
<font color="#E5E5E5">something called local is which is</font>

1188
01:00:33,370 --> 01:00:37,029
<font color="#E5E5E5">useful and scenarios where you have a</font>

1189
01:00:35,410 --> 01:00:40,210
migration and there is<font color="#CCCCCC"> something called</font>

1190
01:00:37,030 --> 01:00:42,190
remove private oasis so if you have

1191
01:00:40,210 --> 01:00:44,800
those tools i think it is<font color="#CCCCCC"> safe to use</font>

1192
01:00:42,190 --> 01:00:49,620
those and essentially it is very useful

1193
01:00:44,800 --> 01:00:49,620
<font color="#CCCCCC">for acquisition kind of scenario</font>

1194
01:00:56,250 --> 01:01:02,720
so I<font color="#E5E5E5"> thank you all for joining me today</font>

1195
01:00:58,800 --> 01:01:02,720
and I hope it is informative

1196
01:01:16,290 --> 01:01:18,350
you

