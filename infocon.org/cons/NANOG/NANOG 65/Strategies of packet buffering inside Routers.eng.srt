1
00:00:08,389 --> 00:00:12,829
yeah hi<font color="#E5E5E5"> it's</font>

2
00:00:13,720 --> 00:00:20,510
my name is<font color="#CCCCCC"> ralph zuranski I</font><font color="#E5E5E5"> will have a</font>

3
00:00:17,570 --> 00:00:25,580
second my my second talk today is about

4
00:00:20,510 --> 00:00:29,840
a strategies used by<font color="#E5E5E5"> band by hardware</font>

5
00:00:25,580 --> 00:00:34,269
vendors to make<font color="#CCCCCC"> it</font><font color="#E5E5E5"> buffer the packets</font>

6
00:00:29,840 --> 00:00:39,019
inside<font color="#CCCCCC"> the route are not switches rotors</font>

7
00:00:34,270 --> 00:00:43,190
<font color="#E5E5E5">so the first question will</font><font color="#CCCCCC"> be why shall</font>

8
00:00:39,020 --> 00:00:46,280
I care how the buffering<font color="#CCCCCC"> or queuing</font>

9
00:00:43,190 --> 00:00:49,250
inside the stuff is is happening<font color="#CCCCCC"> and the</font>

10
00:00:46,280 --> 00:00:52,250
reason is<font color="#E5E5E5"> because it has implications on</font>

11
00:00:49,250 --> 00:00:54,289
<font color="#E5E5E5">the route</font><font color="#CCCCCC"> of behavior</font><font color="#E5E5E5"> all on what you</font>

12
00:00:52,250 --> 00:00:59,390
observe outside<font color="#E5E5E5"> of the box what traffic</font>

13
00:00:54,289 --> 00:01:05,210
is threaded hole<font color="#E5E5E5"> what is there and to be</font>

14
00:00:59,390 --> 00:01:06,350
<font color="#E5E5E5">frank this behavior is not it's quite</font><font color="#CCCCCC"> an</font>

15
00:01:05,209 --> 00:01:10,220
<font color="#E5E5E5">unintuitive</font>

16
00:01:06,350 --> 00:01:14,449
<font color="#E5E5E5">it's not what you can top of the first</font>

17
00:01:10,220 --> 00:01:16,970
look and it's<font color="#E5E5E5"> better to know how</font><font color="#CCCCCC"> your</font>

18
00:01:14,450 --> 00:01:20,509
<font color="#E5E5E5">the particular</font><font color="#CCCCCC"> route or perhaps</font><font color="#E5E5E5"> because</font>

19
00:01:16,970 --> 00:01:22,520
then you know<font color="#E5E5E5"> if it's a is the behavior</font>

20
00:01:20,509 --> 00:01:24,920
is expected from nor and how to live

21
00:01:22,520 --> 00:01:28,969
with these<font color="#E5E5E5"> artificial intelligence of</font>

22
00:01:24,920 --> 00:01:31,759
the<font color="#CCCCCC"> Rooter bottom line from operation</font>

23
00:01:28,969 --> 00:01:35,979
perspective<font color="#E5E5E5"> it allows you to avoid the</font>

24
00:01:31,759 --> 00:01:35,979
troubleshooting<font color="#E5E5E5"> for</font><font color="#CCCCCC"> non-existing</font><font color="#E5E5E5"> problem</font>

25
00:01:36,700 --> 00:01:46,579
so everything starts from<font color="#E5E5E5"> the some</font>

26
00:01:43,780 --> 00:01:49,430
phenomenons of observed<font color="#CCCCCC"> phenomenon the</font>

27
00:01:46,579 --> 00:01:50,869
network<font color="#E5E5E5"> that</font><font color="#CCCCCC"> as I'm monitoring alarms</font>

28
00:01:49,430 --> 00:01:54,079
<font color="#E5E5E5">that something is going wrong or</font><font color="#CCCCCC"> either</font>

29
00:01:50,869 --> 00:01:58,579
packet loss of traffic loss or too late

30
00:01:54,079 --> 00:02:00,859
to<font color="#CCCCCC"> - hi GT latency</font><font color="#E5E5E5"> and well not that</font>

31
00:01:58,579 --> 00:02:03,649
rarely<font color="#E5E5E5"> it's a customer call and</font>

32
00:02:00,859 --> 00:02:05,329
<font color="#E5E5E5">complaints</font><font color="#CCCCCC"> and then normal</font><font color="#E5E5E5"> network</font>

33
00:02:03,649 --> 00:02:08,210
troubleshooting happens<font color="#E5E5E5"> so we are</font>

34
00:02:05,329 --> 00:02:11,269
looking<font color="#E5E5E5"> for the know where the problem</font>

35
00:02:08,210 --> 00:02:14,660
<font color="#E5E5E5">is</font><font color="#CCCCCC"> which note introduced the challenge</font>

36
00:02:11,270 --> 00:02:17,530
<font color="#E5E5E5">and we if we are lucky we</font><font color="#CCCCCC"> find it it may</font>

37
00:02:14,660 --> 00:02:21,490
<font color="#CCCCCC">need go node by node</font><font color="#E5E5E5"> it may require some</font>

38
00:02:17,530 --> 00:02:24,340
<font color="#CCCCCC">help from expert system or whatever</font>

39
00:02:21,490 --> 00:02:27,130
generally that's out<font color="#CCCCCC"> of scope of my talk</font>

40
00:02:24,340 --> 00:02:29,260
because that's a network level<font color="#E5E5E5"> and we</font>

41
00:02:27,130 --> 00:02:33,310
<font color="#E5E5E5">are going inside under the hood</font><font color="#CCCCCC"> of the</font>

42
00:02:29,260 --> 00:02:37,260
<font color="#E5E5E5">router when we nail down the guilty note</font>

43
00:02:33,310 --> 00:02:40,180
<font color="#E5E5E5">the guilty</font><font color="#CCCCCC"> Rooter</font><font color="#E5E5E5"> what's going there</font>

44
00:02:37,260 --> 00:02:43,780
<font color="#E5E5E5">Andy</font><font color="#CCCCCC"> behavior detect could</font><font color="#E5E5E5"> be quite</font>

45
00:02:40,180 --> 00:02:45,970
<font color="#CCCCCC">undone intuitive right</font><font color="#E5E5E5"> we may observe</font>

46
00:02:43,780 --> 00:02:48,610
the<font color="#CCCCCC"> situation when</font><font color="#E5E5E5"> we receive the</font>

47
00:02:45,970 --> 00:02:51,970
traffic on non congested port we send

48
00:02:48,610 --> 00:02:54,280
them out from<font color="#E5E5E5"> the same traffic the same</font>

49
00:02:51,970 --> 00:02:57,820
flow from even less congested port and

50
00:02:54,280 --> 00:03:02,860
we still see the packet<font color="#E5E5E5"> loss what</font><font color="#CCCCCC"> the</font>

51
00:02:57,820 --> 00:03:05,140
<font color="#CCCCCC">teat right I have wire speed Reuter and</font>

52
00:03:02,860 --> 00:03:08,739
I losing my traffic even<font color="#E5E5E5"> my pores are</font>

53
00:03:05,140 --> 00:03:10,630
not<font color="#E5E5E5"> congested the other exercises yes we</font>

54
00:03:08,739 --> 00:03:12,340
have<font color="#CCCCCC"> two flows going</font><font color="#E5E5E5"> out from the common</font>

55
00:03:10,630 --> 00:03:14,890
port the port is<font color="#E5E5E5"> congested so there</font>

56
00:03:12,340 --> 00:03:18,819
should be<font color="#CCCCCC"> a delay but some flows are</font>

57
00:03:14,890 --> 00:03:24,059
bigger<font color="#E5E5E5"> than</font><font color="#CCCCCC"> light and other why it's</font>

58
00:03:18,819 --> 00:03:27,100
it's<font color="#CCCCCC"> a bug or it's</font><font color="#E5E5E5"> expected behavior</font>

59
00:03:24,060 --> 00:03:30,519
some<font color="#E5E5E5"> disclaimer I'm not</font><font color="#CCCCCC"> going to talk</font>

60
00:03:27,100 --> 00:03:35,500
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> QoS queuing is not the same</font>

61
00:03:30,519 --> 00:03:37,390
<font color="#CCCCCC">ask</font><font color="#E5E5E5"> us right the queuing is just to</font>

62
00:03:35,500 --> 00:03:39,370
manage the bars of traffic which cannot

63
00:03:37,390 --> 00:03:42,940
be handled<font color="#CCCCCC"> just right on time so I</font>

64
00:03:39,370 --> 00:03:46,959
buffer it do it and save and serve<font color="#E5E5E5"> a bit</font>

65
00:03:42,940 --> 00:03:48,760
later QoS<font color="#CCCCCC"> is more about saying okay</font><font color="#E5E5E5"> this</font>

66
00:03:46,959 --> 00:03:50,950
<font color="#CCCCCC">is better</font><font color="#E5E5E5"> traffic worst traffic so we'll</font>

67
00:03:48,760 --> 00:03:53,260
send one traffic<font color="#E5E5E5"> on throttle</font><font color="#CCCCCC"> another we</font>

68
00:03:50,950 --> 00:03:55,390
<font color="#E5E5E5">change the order of the packets queuing</font>

69
00:03:53,260 --> 00:03:57,940
is important part of the QoS but it's

70
00:03:55,390 --> 00:04:03,220
not where the QoS is not enough to say

71
00:03:57,940 --> 00:04:07,060
this the queuing is not a QoS and<font color="#CCCCCC"> as I</font>

72
00:04:03,220 --> 00:04:09,820
promised<font color="#CCCCCC"> we are going under the hood of</font>

73
00:04:07,060 --> 00:04:11,170
the router<font color="#E5E5E5"> so we have to see anatomy</font><font color="#CCCCCC"> of</font>

74
00:04:09,820 --> 00:04:13,540
it at least

75
00:04:11,170 --> 00:04:17,798
to model it to some<font color="#CCCCCC"> extent</font><font color="#E5E5E5"> not going to</font>

76
00:04:13,540 --> 00:04:21,700
very detail but so we generally<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the</font>

77
00:04:17,798 --> 00:04:24,489
<font color="#CCCCCC">router</font><font color="#E5E5E5"> we will see it's a three stages</font>

78
00:04:21,700 --> 00:04:27,340
thing right we have the something<font color="#E5E5E5"> some</font>

79
00:04:24,490 --> 00:04:29,470
some PFE<font color="#E5E5E5"> I use the</font><font color="#CCCCCC"> PFA</font><font color="#E5E5E5"> we as a packet</font>

80
00:04:27,340 --> 00:04:35,770
forwarding<font color="#E5E5E5"> changing this general term it</font>

81
00:04:29,470 --> 00:04:38,050
could<font color="#E5E5E5"> be CPU and PU</font><font color="#CCCCCC"> I seek</font><font color="#E5E5E5"> which takes</font>

82
00:04:35,770 --> 00:04:41,340
the traffic<font color="#E5E5E5"> from the ingress ports</font>

83
00:04:38,050 --> 00:04:46,509
look<font color="#E5E5E5"> where to</font><font color="#CCCCCC"> this should go and</font>

84
00:04:41,340 --> 00:04:49,929
multiplex them to the fabric<font color="#E5E5E5"> port in</font>

85
00:04:46,509 --> 00:04:51,520
fabric ingress port next stage is<font color="#E5E5E5"> a</font>

86
00:04:49,930 --> 00:04:54,009
fabric<font color="#E5E5E5"> switch fabric is something which</font>

87
00:04:51,520 --> 00:04:58,150
moves the pile<font color="#CCCCCC"> moves the data from one</font>

88
00:04:54,009 --> 00:05:01,210
port to another and then we have egress

89
00:04:58,150 --> 00:05:06,068
stage<font color="#E5E5E5"> egress PFE which takes the packets</font>

90
00:05:01,210 --> 00:05:08,669
from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> fabric</font><font color="#E5E5E5"> port and distribute or</font>

91
00:05:06,069 --> 00:05:12,099
actually<font color="#CCCCCC"> no distributed decide to which</font>

92
00:05:08,669 --> 00:05:19,650
<font color="#E5E5E5">particular egress interface this traffic</font>

93
00:05:12,099 --> 00:05:24,009
<font color="#E5E5E5">should go from the queuing and</font>

94
00:05:19,650 --> 00:05:27,330
congestion perspective we have three

95
00:05:24,009 --> 00:05:31,180
<font color="#E5E5E5">types of the</font><font color="#CCCCCC"> we have three types of the</font>

96
00:05:27,330 --> 00:05:33,820
function our ingress PFE is actually

97
00:05:31,180 --> 00:05:36,819
from<font color="#CCCCCC"> the traffic perspective is a mod</font>

98
00:05:33,820 --> 00:05:39,930
max<font color="#CCCCCC"> we take the traffic</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> multiple</font>

99
00:05:36,819 --> 00:05:44,849
ingresses and<font color="#CCCCCC"> Max it to the single</font>

100
00:05:39,930 --> 00:05:49,630
egress toward the fabric and<font color="#E5E5E5"> of course</font>

101
00:05:44,849 --> 00:05:52,360
some products or some<font color="#E5E5E5"> particular line</font>

102
00:05:49,630 --> 00:05:54,370
cards<font color="#E5E5E5"> may be oversubscribed but that's</font>

103
00:05:52,360 --> 00:05:56,289
out of the scope of<font color="#CCCCCC"> this talk it's</font>

104
00:05:54,370 --> 00:05:59,080
another level of complexity<font color="#CCCCCC"> I want to</font>

105
00:05:56,289 --> 00:06:02,110
avoid<font color="#CCCCCC"> it so let's assume this is a line</font>

106
00:05:59,080 --> 00:06:04,800
rate<font color="#E5E5E5"> router which means that the sum of</font>

107
00:06:02,110 --> 00:06:08,229
<font color="#E5E5E5">the boundary</font><font color="#CCCCCC"> odd on the ingress</font>

108
00:06:04,800 --> 00:06:10,870
interfaces<font color="#E5E5E5"> is less or equal</font><font color="#CCCCCC"> to the</font>

109
00:06:08,229 --> 00:06:14,620
<font color="#E5E5E5">fabric in practical implementation is</font>

110
00:06:10,870 --> 00:06:16,930
always less but for that for that<font color="#E5E5E5"> at</font>

111
00:06:14,620 --> 00:06:20,740
that<font color="#E5E5E5"> stage we can say it's less or equal</font>

112
00:06:16,930 --> 00:06:23,740
and because<font color="#CCCCCC"> of that there is no way to</font>

113
00:06:20,740 --> 00:06:25,719
<font color="#E5E5E5">create the congestion there is no need</font>

114
00:06:23,740 --> 00:06:28,509
to buffer<font color="#E5E5E5"> because there is always</font>

115
00:06:25,719 --> 00:06:30,490
<font color="#CCCCCC">bounded to whatever</font><font color="#E5E5E5"> we get with this we</font>

116
00:06:28,509 --> 00:06:32,620
do the header processing<font color="#CCCCCC"> to whatever is</font>

117
00:06:30,490 --> 00:06:38,530
necessary and we can push it<font color="#CCCCCC"> to the</font>

118
00:06:32,620 --> 00:06:39,969
<font color="#E5E5E5">fabric so that's good</font><font color="#CCCCCC"> no brainer but</font><font color="#E5E5E5"> the</font>

119
00:06:38,530 --> 00:06:43,780
<font color="#E5E5E5">opposite side</font><font color="#CCCCCC"> of the router when we</font>

120
00:06:39,969 --> 00:06:45,190
going<font color="#E5E5E5"> out is different is</font><font color="#CCCCCC"> demux we take</font>

121
00:06:43,780 --> 00:06:49,839
the traffic<font color="#CCCCCC"> from high speed interface</font>

122
00:06:45,190 --> 00:06:50,790
<font color="#E5E5E5">from</font><font color="#CCCCCC"> the fabric</font><font color="#E5E5E5"> and the particle traffic</font>

123
00:06:49,839 --> 00:06:53,130
may

124
00:06:50,790 --> 00:06:54,870
need to go out for<font color="#CCCCCC"> the single egress</font>

125
00:06:53,130 --> 00:06:58,770
interface or only subset of egress

126
00:06:54,870 --> 00:07:03,060
interfaces which are has lower bandwidth

127
00:06:58,770 --> 00:07:06,109
than the fabric<font color="#E5E5E5"> and in this case we may</font>

128
00:07:03,060 --> 00:07:09,030
go<font color="#E5E5E5"> to the congestion situation the best</font>

129
00:07:06,110 --> 00:07:12,840
on<font color="#E5E5E5"> the fabric interface cannot be safe</font>

130
00:07:09,030 --> 00:07:16,080
immediately so<font color="#E5E5E5"> we need to either drop</font>

131
00:07:12,840 --> 00:07:18,900
<font color="#E5E5E5">that all buffer it and smooth the</font>

132
00:07:16,080 --> 00:07:20,460
traffic and losing the<font color="#CCCCCC"> packets is not</font>

133
00:07:18,900 --> 00:07:22,890
good thing<font color="#E5E5E5"> especially for the</font><font color="#CCCCCC"> short</font>

134
00:07:20,460 --> 00:07:29,450
<font color="#CCCCCC">burst</font><font color="#E5E5E5"> so that's why we need the</font><font color="#CCCCCC"> queues</font>

135
00:07:22,890 --> 00:07:29,450
here or<font color="#CCCCCC"> buffer sphere the last</font>

136
00:07:35,450 --> 00:07:44,430
we need buffers<font color="#E5E5E5"> so the buffers would be</font>

137
00:07:40,220 --> 00:07:46,830
implemented<font color="#CCCCCC"> per egress interface</font><font color="#E5E5E5"> so it's</font>

138
00:07:44,430 --> 00:07:50,790
quite<font color="#CCCCCC"> simple mechanics right</font><font color="#E5E5E5"> we get</font><font color="#CCCCCC"> the</font>

139
00:07:46,830 --> 00:07:52,800
<font color="#CCCCCC">traffic in there is an indicator</font><font color="#E5E5E5"> which</font>

140
00:07:50,790 --> 00:07:55,260
says<font color="#E5E5E5"> okay this packet is should leave</font>

141
00:07:52,800 --> 00:07:58,139
the interface 1 2 3 or whatever<font color="#CCCCCC"> and</font>

142
00:07:55,260 --> 00:08:00,330
there is a<font color="#E5E5E5"> buffer which holds the packet</font>

143
00:07:58,139 --> 00:08:04,110
if they<font color="#CCCCCC"> comes too</font><font color="#E5E5E5"> fast</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> served</font>

144
00:08:00,330 --> 00:08:07,919
<font color="#E5E5E5">immediately this scheme we call output</font>

145
00:08:04,110 --> 00:08:11,370
buffer output output queuing system

146
00:08:07,919 --> 00:08:13,830
because the switching part is first and

147
00:08:11,370 --> 00:08:19,740
<font color="#E5E5E5">then we put the packets today to the</font>

148
00:08:13,830 --> 00:08:22,020
queue the important<font color="#CCCCCC"> purple important</font>

149
00:08:19,740 --> 00:08:25,410
thing is<font color="#CCCCCC"> that this part of</font><font color="#E5E5E5"> the system</font><font color="#CCCCCC"> is</font>

150
00:08:22,020 --> 00:08:27,960
as fast<font color="#E5E5E5"> as the input interface</font><font color="#CCCCCC"> because</font>

151
00:08:25,410 --> 00:08:31,669
we don't we don't<font color="#E5E5E5"> want to we</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> be</font>

152
00:08:27,960 --> 00:08:34,409
able<font color="#E5E5E5"> to put traffic into</font><font color="#CCCCCC"> the queue</font><font color="#E5E5E5"> as</font>

153
00:08:31,669 --> 00:08:39,809
fast as we receive it<font color="#E5E5E5"> otherwise we lose</font>

154
00:08:34,409 --> 00:08:41,460
it right so the middle part of<font color="#E5E5E5"> the route</font>

155
00:08:39,809 --> 00:08:43,919
of the<font color="#CCCCCC"> Rueter is from the queuing</font>

156
00:08:41,460 --> 00:08:46,880
perspective more challenging one<font color="#E5E5E5"> it's a</font>

157
00:08:43,919 --> 00:08:53,730
switch fabric<font color="#E5E5E5"> and this switch fabric is</font>

158
00:08:46,880 --> 00:08:58,470
usually and by n device and it speeds of

159
00:08:53,730 --> 00:09:00,930
the<font color="#E5E5E5"> input and X outputs are equal all</font>

160
00:08:58,470 --> 00:09:03,690
<font color="#E5E5E5">right so the picture here shows the</font>

161
00:09:00,930 --> 00:09:05,729
switch fabric<font color="#E5E5E5"> as a crossbar switch of</font>

162
00:09:03,690 --> 00:09:08,940
course it could be<font color="#E5E5E5"> a cross switch or</font>

163
00:09:05,730 --> 00:09:11,790
whatever<font color="#CCCCCC"> Taurus or Banyan Network which</font>

164
00:09:08,940 --> 00:09:14,880
is a little bit<font color="#E5E5E5"> more complex but are</font>

165
00:09:11,790 --> 00:09:17,459
they<font color="#CCCCCC"> at the proper abstraction level is</font>

166
00:09:14,880 --> 00:09:19,589
it's a just a black<font color="#CCCCCC"> box with</font><font color="#E5E5E5"> the equal</font>

167
00:09:17,460 --> 00:09:21,510
<font color="#CCCCCC">number of inputs and outputs</font><font color="#E5E5E5"> and it has</font>

168
00:09:19,589 --> 00:09:25,200
a<font color="#E5E5E5"> property that at the given moment of</font>

169
00:09:21,510 --> 00:09:28,400
time<font color="#E5E5E5"> they</font><font color="#CCCCCC"> can switch the traffic from</font>

170
00:09:25,200 --> 00:09:35,580
all inputs to all outputs simultaneously

171
00:09:28,400 --> 00:09:38,250
<font color="#E5E5E5">but yeah if multiple inputs talks to one</font>

172
00:09:35,580 --> 00:09:41,720
output<font color="#E5E5E5"> there would be a congestion and</font>

173
00:09:38,250 --> 00:09:45,900
the<font color="#CCCCCC"> crossbar switches are bufferless</font>

174
00:09:41,720 --> 00:09:48,920
there is no way<font color="#E5E5E5"> - no</font><font color="#CCCCCC"> way to</font><font color="#E5E5E5"> delay the</font>

175
00:09:45,900 --> 00:09:59,000
traffic right so we have<font color="#CCCCCC"> to</font>

176
00:09:48,920 --> 00:10:01,760
deal with<font color="#E5E5E5"> that somehow the important the</font>

177
00:09:59,000 --> 00:10:04,910
<font color="#E5E5E5">basics which how the input of the basics</font>

178
00:10:01,760 --> 00:10:07,610
which<font color="#CCCCCC"> items out has no knowledge about</font>

179
00:10:04,910 --> 00:10:09,620
state<font color="#E5E5E5"> of egress right that each ingress</font>

180
00:10:07,610 --> 00:10:13,720
ear each ingress and egress<font color="#E5E5E5"> are</font>

181
00:10:09,620 --> 00:10:16,880
independent<font color="#E5E5E5"> okay</font>

182
00:10:13,720 --> 00:10:19,699
that's the congestion anyway we have to

183
00:10:16,880 --> 00:10:23,000
manage<font color="#E5E5E5"> it and there are in general</font><font color="#CCCCCC"> in</font>

184
00:10:19,699 --> 00:10:26,990
theory there<font color="#CCCCCC"> are three strategies three</font>

185
00:10:23,000 --> 00:10:30,290
<font color="#CCCCCC">ways to buffer or cue implement the</font>

186
00:10:26,990 --> 00:10:34,040
queue<font color="#CCCCCC"> for the fabric we can do output</font>

187
00:10:30,290 --> 00:10:37,610
queuing similar to previous one to<font color="#CCCCCC"> do</font>

188
00:10:34,040 --> 00:10:40,250
the order<font color="#CCCCCC"> to the de max the challenge</font>

189
00:10:37,610 --> 00:10:43,850
with that is for<font color="#CCCCCC"> every queue we have to</font>

190
00:10:40,250 --> 00:10:46,370
deliver<font color="#E5E5E5"> all we need the the switching</font>

191
00:10:43,850 --> 00:10:52,720
element has to be<font color="#E5E5E5"> over speeded right so</font>

192
00:10:46,370 --> 00:10:52,720
our switch fabric crossbar<font color="#E5E5E5"> need to have</font>

193
00:10:53,680 --> 00:11:00,680
the bandwidth toward the queue per each

194
00:10:57,829 --> 00:11:03,410
egress has to need to be n times<font color="#CCCCCC"> higher</font>

195
00:11:00,680 --> 00:11:06,199
than the egress<font color="#E5E5E5"> just to not lose the</font>

196
00:11:03,410 --> 00:11:10,010
package before<font color="#E5E5E5"> fab before queue and we</font>

197
00:11:06,199 --> 00:11:13,250
cannot do that<font color="#E5E5E5"> it's technically too</font>

198
00:11:10,010 --> 00:11:16,910
expensive<font color="#E5E5E5"> so</font><font color="#CCCCCC"> your one let's say the</font>

199
00:11:13,250 --> 00:11:18,560
switch is one<font color="#E5E5E5"> to rabbit if this if this</font>

200
00:11:16,910 --> 00:11:20,660
<font color="#CCCCCC">element is one terabyte or let's say</font>

201
00:11:18,560 --> 00:11:23,119
better<font color="#CCCCCC"> ten to rabbit</font>

202
00:11:20,660 --> 00:11:29,449
this means that<font color="#CCCCCC"> the internally it has to</font>

203
00:11:23,120 --> 00:11:32,560
be like 100 rabbits<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it has 100</font>

204
00:11:29,449 --> 00:11:36,760
input and hundred outputs one chip

205
00:11:32,560 --> 00:11:41,930
that's we cannot do<font color="#E5E5E5"> that</font>

206
00:11:36,760 --> 00:11:44,600
the<font color="#E5E5E5"> other so not going deeper for that</font>

207
00:11:41,930 --> 00:11:48,050
one because it's impractical<font color="#E5E5E5"> nobody is</font>

208
00:11:44,600 --> 00:11:50,510
doing that<font color="#CCCCCC"> the other two are input</font>

209
00:11:48,050 --> 00:11:53,149
queuing and visual output queuing<font color="#E5E5E5"> and I</font>

210
00:11:50,510 --> 00:11:56,750
will dip<font color="#CCCCCC"> drive</font><font color="#E5E5E5"> a little bit more to</font>

211
00:11:53,149 --> 00:12:00,110
<font color="#E5E5E5">these to the input you require some</font>

212
00:11:56,750 --> 00:12:02,810
fabric scheduler<font color="#E5E5E5"> and accuse before</font>

213
00:12:00,110 --> 00:12:10,340
fabric element before<font color="#E5E5E5"> switching element</font>

214
00:12:02,810 --> 00:12:12,250
so in this in this model there<font color="#CCCCCC"> is a as I</font>

215
00:12:10,340 --> 00:12:15,980
<font color="#E5E5E5">said fabric scheduler so there is a</font>

216
00:12:12,250 --> 00:12:18,260
control plane or control flow with from

217
00:12:15,980 --> 00:12:22,280
the egress port to English port which

218
00:12:18,260 --> 00:12:26,060
allows<font color="#CCCCCC"> the ingress port to to talk to</font>

219
00:12:22,280 --> 00:12:30,110
<font color="#CCCCCC">the egress the because we have only one</font>

220
00:12:26,060 --> 00:12:32,839
<font color="#E5E5E5">cue we will need some</font><font color="#CCCCCC"> overspeed as well</font>

221
00:12:30,110 --> 00:12:35,030
and it is<font color="#E5E5E5"> over speed in theories double</font>

222
00:12:32,840 --> 00:12:38,000
is double so we need the switching

223
00:12:35,030 --> 00:12:40,250
fabric<font color="#CCCCCC"> has to be twice faster than</font>

224
00:12:38,000 --> 00:12:46,370
actual the input input and output

225
00:12:40,250 --> 00:12:49,160
interfaces so how it works<font color="#E5E5E5"> the color</font>

226
00:12:46,370 --> 00:12:51,530
coding<font color="#CCCCCC"> here</font><font color="#E5E5E5"> is that it's like we have a</font>

227
00:12:49,160 --> 00:12:54,050
blue<font color="#CCCCCC"> interface ready interface and green</font>

228
00:12:51,530 --> 00:12:56,900
interface and the packets which supposed

229
00:12:54,050 --> 00:13:00,979
to leave these interfaces are also<font color="#E5E5E5"> color</font>

230
00:12:56,900 --> 00:13:04,400
coded<font color="#CCCCCC"> the same way</font><font color="#E5E5E5"> and we have some</font>

231
00:13:00,980 --> 00:13:07,370
packets in<font color="#CCCCCC"> the in the ingress</font><font color="#E5E5E5"> queues so</font>

232
00:13:04,400 --> 00:13:09,860
what happens we have<font color="#E5E5E5"> a request</font>

233
00:13:07,370 --> 00:13:12,380
so each queue on from the head of<font color="#CCCCCC"> the</font>

234
00:13:09,860 --> 00:13:15,230
<font color="#E5E5E5">queue there is a request for the</font>

235
00:13:12,380 --> 00:13:17,660
transmission<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the egress</font><font color="#E5E5E5"> port for</font>

236
00:13:15,230 --> 00:13:21,860
given<font color="#CCCCCC"> packet so as you see we have the</font>

237
00:13:17,660 --> 00:13:25,130
request for blue request<font color="#E5E5E5"> for green even</font>

238
00:13:21,860 --> 00:13:27,260
<font color="#E5E5E5">to request for blue because two cues to</font>

239
00:13:25,130 --> 00:13:29,150
ingress is has the packet on on front

240
00:13:27,260 --> 00:13:30,890
<font color="#E5E5E5">which is supposed to go to some same</font>

241
00:13:29,150 --> 00:13:34,400
destination that's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> of</font>

242
00:13:30,890 --> 00:13:40,970
congestion but<font color="#E5E5E5"> only one ingress gets the</font>

243
00:13:34,400 --> 00:13:44,900
grant simple not but not very efficient

244
00:13:40,970 --> 00:13:48,770
this<font color="#E5E5E5"> packet the red packet in the port</font>

245
00:13:44,900 --> 00:13:51,380
number one start from<font color="#CCCCCC"> zero so this</font>

246
00:13:48,770 --> 00:13:53,900
packet this packet theoretical it could

247
00:13:51,380 --> 00:13:55,850
be sent over<font color="#E5E5E5"> the fabric</font><font color="#CCCCCC"> right the output</font>

248
00:13:53,900 --> 00:13:58,069
port<font color="#E5E5E5"> is empty</font><font color="#CCCCCC"> it's ready</font><font color="#E5E5E5"> to get the</font>

249
00:13:55,850 --> 00:14:00,980
<font color="#E5E5E5">traffic but because the packet is not</font>

250
00:13:58,070 --> 00:14:04,310
<font color="#E5E5E5">the first in the queue there was no you</font>

251
00:14:00,980 --> 00:14:08,780
<font color="#E5E5E5">know even a request for it so traffic</font>

252
00:14:04,310 --> 00:14:11,630
girls<font color="#E5E5E5"> then we have another grant message</font>

253
00:14:08,780 --> 00:14:13,160
another traffic<font color="#E5E5E5"> and finally sooner or</font>

254
00:14:11,630 --> 00:14:16,580
later<font color="#E5E5E5"> but this red packet will be</font><font color="#CCCCCC"> surf</font>

255
00:14:13,160 --> 00:14:21,079
as well but it's clear

256
00:14:16,580 --> 00:14:24,800
now it should be clear now<font color="#CCCCCC"> that fabric</font>

257
00:14:21,080 --> 00:14:28,220
<font color="#E5E5E5">is not utilized</font><font color="#CCCCCC"> hundred percent there</font>

258
00:14:24,800 --> 00:14:30,800
are<font color="#E5E5E5"> periods of times when the some</font>

259
00:14:28,220 --> 00:14:32,990
connection in fabric could be made but

260
00:14:30,800 --> 00:14:34,670
<font color="#CCCCCC">pocket cannot be pushed to the fabric</font>

261
00:14:32,990 --> 00:14:41,630
<font color="#E5E5E5">because it's not on the head of the</font>

262
00:14:34,670 --> 00:14:43,670
queue so now we have<font color="#CCCCCC"> voq</font><font color="#E5E5E5"> and this is</font>

263
00:14:41,630 --> 00:14:48,380
like extension<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> prep of</font><font color="#E5E5E5"> include</font>

264
00:14:43,670 --> 00:14:52,490
<font color="#CCCCCC">queuing so voq</font><font color="#E5E5E5"> reach</font><font color="#CCCCCC"> over queuing it's</font>

265
00:14:48,380 --> 00:14:58,790
actually input<font color="#E5E5E5"> queuing where we have the</font>

266
00:14:52,490 --> 00:15:01,279
<font color="#CCCCCC">cue pair egress interface color coded</font><font color="#E5E5E5"> so</font>

267
00:14:58,790 --> 00:15:05,120
it's<font color="#CCCCCC"> virtuality</font><font color="#E5E5E5"> output because in in</font>

268
00:15:01,279 --> 00:15:09,350
fact is on input and we have a very

269
00:15:05,120 --> 00:15:12,230
similar flow control so we have a

270
00:15:09,350 --> 00:15:14,329
request<font color="#E5E5E5"> and then of course for the</font>

271
00:15:12,230 --> 00:15:16,029
<font color="#E5E5E5">pockets which are a head on the head of</font>

272
00:15:14,329 --> 00:15:19,609
the queue we have a request going

273
00:15:16,029 --> 00:15:23,270
forward in the in the fabric<font color="#E5E5E5"> and you can</font>

274
00:15:19,610 --> 00:15:26,120
see that we have a blue request<font color="#E5E5E5"> from all</font>

275
00:15:23,270 --> 00:15:28,250
interfaces<font color="#CCCCCC"> and greening request from the</font>

276
00:15:26,120 --> 00:15:30,890
interfaces which has the green packet on

277
00:15:28,250 --> 00:15:38,390
head<font color="#E5E5E5"> on on the head of the green cube</font>

278
00:15:30,890 --> 00:15:42,290
and the same for the red one of course

279
00:15:38,390 --> 00:15:44,180
<font color="#E5E5E5">the ports the egress part or arbiter of</font>

280
00:15:42,290 --> 00:15:47,569
the<font color="#E5E5E5"> fabric which</font><font color="#CCCCCC"> is effectively the same</font>

281
00:15:44,180 --> 00:15:50,660
thing<font color="#E5E5E5"> gives the grants and they give the</font>

282
00:15:47,570 --> 00:15:53,779
grants only<font color="#CCCCCC"> to one</font><font color="#E5E5E5"> queue at a time in</font>

283
00:15:50,660 --> 00:15:56,990
this<font color="#E5E5E5"> mode in this case our red traffic</font>

284
00:15:53,779 --> 00:15:59,290
which is blocked previously now goes

285
00:15:56,990 --> 00:15:59,290
<font color="#E5E5E5">through</font>

286
00:16:02,160 --> 00:16:08,069
so going<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> Rooter we say it's</font>

287
00:16:04,199 --> 00:16:10,910
a three stages we have ingress<font color="#CCCCCC"> and there</font>

288
00:16:08,069 --> 00:16:16,229
is no need for<font color="#E5E5E5"> queuing for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> for that</font>

289
00:16:10,910 --> 00:16:20,880
<font color="#CCCCCC">max</font><font color="#E5E5E5"> function we have the fabric</font><font color="#CCCCCC"> and we</font>

290
00:16:16,230 --> 00:16:24,149
<font color="#CCCCCC">discussed two strategies for</font><font color="#E5E5E5"> queuing for</font>

291
00:16:20,880 --> 00:16:29,430
<font color="#E5E5E5">the fabric part is input</font><font color="#CCCCCC"> cueing her vo Q</font>

292
00:16:24,149 --> 00:16:31,680
and we have the egress<font color="#CCCCCC"> demyx and we also</font>

293
00:16:29,430 --> 00:16:35,939
<font color="#E5E5E5">discuss that output queuing is the</font>

294
00:16:31,680 --> 00:16:40,769
strategy<font color="#E5E5E5"> used here but when we put</font>

295
00:16:35,940 --> 00:16:44,550
everything together<font color="#CCCCCC"> guess what we have</font>

296
00:16:40,769 --> 00:16:48,389
two options<font color="#E5E5E5"> so option number one is</font><font color="#CCCCCC"> at</font>

297
00:16:44,550 --> 00:16:50,849
buffer twice and this kind of this class

298
00:16:48,389 --> 00:16:53,639
of the system are called<font color="#E5E5E5"> combined input</font>

299
00:16:50,850 --> 00:16:58,019
<font color="#E5E5E5">output queuing which means that we have</font>

300
00:16:53,639 --> 00:17:00,540
a<font color="#CCCCCC"> QB for fabric</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> on the output</font>

301
00:16:58,019 --> 00:17:02,670
interface<font color="#CCCCCC"> it's a two buffers</font><font color="#E5E5E5"> two</font>

302
00:17:00,540 --> 00:17:07,049
memories<font color="#E5E5E5"> to scale flow controls two</font>

303
00:17:02,670 --> 00:17:11,158
schedulers<font color="#E5E5E5"> and this kind of system</font>

304
00:17:07,049 --> 00:17:15,179
nowadays<font color="#E5E5E5"> are built as as a vo fabric vo</font>

305
00:17:11,159 --> 00:17:21,740
q followed by output interface<font color="#E5E5E5"> output</font>

306
00:17:15,179 --> 00:17:21,740
queuing system these are easier to<font color="#E5E5E5"> build</font>

307
00:17:22,159 --> 00:17:25,829
<font color="#E5E5E5">divide-and-conquer</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> I have two</font>

308
00:17:24,059 --> 00:17:28,678
different<font color="#E5E5E5"> problems</font><font color="#CCCCCC"> and I solve</font><font color="#E5E5E5"> them</font>

309
00:17:25,829 --> 00:17:32,340
independently<font color="#E5E5E5"> it allows me to</font><font color="#CCCCCC"> higher</font>

310
00:17:28,679 --> 00:17:34,650
scale<font color="#E5E5E5"> because the number of the</font><font color="#CCCCCC"> Q are in</font>

311
00:17:32,340 --> 00:17:38,549
the first<font color="#E5E5E5"> stage is our</font><font color="#CCCCCC"> function of</font>

312
00:17:34,650 --> 00:17:40,380
<font color="#CCCCCC">number of</font><font color="#E5E5E5"> the fabric ports and other</font>

313
00:17:38,549 --> 00:17:43,168
stage is number<font color="#CCCCCC"> of the output interface</font>

314
00:17:40,380 --> 00:17:49,289
<font color="#E5E5E5">on a single chip which is</font><font color="#CCCCCC"> the egress</font>

315
00:17:43,169 --> 00:17:50,370
chip<font color="#E5E5E5"> right so it's however I need memory</font>

316
00:17:49,289 --> 00:17:54,960
<font color="#E5E5E5">on both paths</font>

317
00:17:50,370 --> 00:17:56,668
I need DRAM<font color="#E5E5E5"> or yeah I need you ramp to</font>

318
00:17:54,960 --> 00:17:58,860
push the traffic to<font color="#E5E5E5"> the urine before</font>

319
00:17:56,669 --> 00:18:01,020
fabric<font color="#E5E5E5"> take it from fabric from the</font><font color="#CCCCCC"> de</font>

320
00:17:58,860 --> 00:18:04,559
<font color="#E5E5E5">Gama sent over the fabric push them back</font>

321
00:18:01,020 --> 00:18:06,780
to the<font color="#CCCCCC"> doramin egress taking them</font><font color="#E5E5E5"> take</font>

322
00:18:04,559 --> 00:18:07,590
<font color="#CCCCCC">them back to the ship</font><font color="#E5E5E5"> and send out of</font>

323
00:18:06,780 --> 00:18:10,590
<font color="#E5E5E5">the interface</font>

324
00:18:07,590 --> 00:18:13,470
this means more memory<font color="#E5E5E5"> in space which is</font>

325
00:18:10,590 --> 00:18:15,178
not a<font color="#E5E5E5"> big deal memory space memory is</font>

326
00:18:13,470 --> 00:18:16,500
not the<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> but I</font><font color="#E5E5E5"> need a memory</font>

327
00:18:15,179 --> 00:18:21,790
boundary

328
00:18:16,500 --> 00:18:23,500
right<font color="#E5E5E5"> the speed of the memory how how</font>

329
00:18:21,790 --> 00:18:25,720
many<font color="#E5E5E5"> megabits per second or gigabits per</font>

330
00:18:23,500 --> 00:18:29,250
second I can push<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> memory for</font><font color="#CCCCCC"> the</font>

331
00:18:25,720 --> 00:18:34,390
<font color="#E5E5E5">really fast Rooter today is a challenge</font>

332
00:18:29,250 --> 00:18:38,350
the other option is is buffer buffer

333
00:18:34,390 --> 00:18:42,760
once and this<font color="#E5E5E5"> is a this is a moment when</font>

334
00:18:38,350 --> 00:18:47,080
<font color="#CCCCCC">we come to the overload</font><font color="#E5E5E5"> over overload</font>

335
00:18:42,760 --> 00:18:50,830
this voq name it's a video<font color="#E5E5E5"> cue system</font>

336
00:18:47,080 --> 00:18:52,929
<font color="#CCCCCC">and to end</font><font color="#E5E5E5"> and we</font><font color="#CCCCCC"> have buffer only</font>

337
00:18:50,830 --> 00:18:56,080
before fabric and we take the packet

338
00:18:52,930 --> 00:18:58,990
from<font color="#CCCCCC"> the from the from the memory</font><font color="#E5E5E5"> from</font>

339
00:18:56,080 --> 00:19:01,629
<font color="#CCCCCC">the buffer</font><font color="#E5E5E5"> only if there is whole path</font>

340
00:18:58,990 --> 00:19:06,510
down to<font color="#E5E5E5"> the egress interface clean and</font>

341
00:19:01,630 --> 00:19:10,480
we can immediately send this mean that

342
00:19:06,510 --> 00:19:14,310
<font color="#E5E5E5">every PFE on ingress has has to have as</font>

343
00:19:10,480 --> 00:19:18,100
many<font color="#CCCCCC"> q as many interfaces</font><font color="#E5E5E5"> in the system</font>

344
00:19:14,310 --> 00:19:20,110
<font color="#E5E5E5">regardless of</font><font color="#CCCCCC"> number of slots so if we</font>

345
00:19:18,100 --> 00:19:22,870
have the and we<font color="#CCCCCC"> are talking</font><font color="#E5E5E5"> potentially</font>

346
00:19:20,110 --> 00:19:25,629
about logical interfaces<font color="#E5E5E5"> right so if the</font>

347
00:19:22,870 --> 00:19:30,840
system<font color="#CCCCCC"> has 10,000 interfaces I need</font>

348
00:19:25,630 --> 00:19:34,210
10,000 buffers on every single chip

349
00:19:30,840 --> 00:19:43,030
class and remember<font color="#CCCCCC"> I'm not talking about</font>

350
00:19:34,210 --> 00:19:45,100
<font color="#E5E5E5">Q s x number of</font><font color="#CCCCCC"> Q's our classes that's a</font>

351
00:19:43,030 --> 00:19:46,990
scaling<font color="#CCCCCC"> challenge right to design</font>

352
00:19:45,100 --> 00:19:49,480
something like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and schedule across</font>

353
00:19:46,990 --> 00:19:53,830
<font color="#E5E5E5">this number of Q's 10,000 is no big</font>

354
00:19:49,480 --> 00:19:55,450
number but<font color="#E5E5E5"> easily</font><font color="#CCCCCC"> go to the</font><font color="#E5E5E5"> numbers</font>

355
00:19:53,830 --> 00:19:58,480
which is a<font color="#E5E5E5"> hundred thousand three</font>

356
00:19:55,450 --> 00:20:04,090
hundred thousand<font color="#E5E5E5"> to build some one rack</font>

357
00:19:58,480 --> 00:20:06,130
system<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> two rack system so beaker</font>

358
00:20:04,090 --> 00:20:10,540
<font color="#E5E5E5">that that's a</font><font color="#CCCCCC"> challenge with that</font><font color="#E5E5E5"> but</font>

359
00:20:06,130 --> 00:20:15,430
the benefits<font color="#E5E5E5"> I need less memory space</font>

360
00:20:10,540 --> 00:20:18,310
wise and also<font color="#CCCCCC"> I</font><font color="#E5E5E5"> need to write</font><font color="#CCCCCC"> to memory</font>

361
00:20:15,430 --> 00:20:21,570
<font color="#E5E5E5">and read from the memory only once which</font>

362
00:20:18,310 --> 00:20:25,780
means<font color="#CCCCCC"> that lower boundary is needed</font>

363
00:20:21,570 --> 00:20:27,720
<font color="#E5E5E5">overall because I'm accessing memory on</font>

364
00:20:25,780 --> 00:20:30,658
<font color="#CCCCCC">once</font><font color="#E5E5E5"> dear our memory on one</font>

365
00:20:27,720 --> 00:20:32,490
<font color="#CCCCCC">I have also</font><font color="#E5E5E5"> lower latency across the box</font>

366
00:20:30,659 --> 00:20:35,429
<font color="#CCCCCC">and the latency</font><font color="#E5E5E5"> is nothing about the</font>

367
00:20:32,490 --> 00:20:37,740
buffering<font color="#E5E5E5"> is just because even the norm</font>

368
00:20:35,429 --> 00:20:39,840
loaded box with a very<font color="#CCCCCC"> little traffic</font>

369
00:20:37,740 --> 00:20:42,240
<font color="#E5E5E5">because of the architecture packet has</font>

370
00:20:39,840 --> 00:20:45,059
<font color="#CCCCCC">to go to the memory</font><font color="#E5E5E5"> and back even it's</font>

371
00:20:42,240 --> 00:20:48,450
<font color="#E5E5E5">just write and read that's how it is and</font>

372
00:20:45,059 --> 00:20:53,928
it introduced<font color="#E5E5E5"> the way so vo</font><font color="#CCCCCC"> cue system</font>

373
00:20:48,450 --> 00:20:57,659
<font color="#E5E5E5">are usually has lower residency time and</font>

374
00:20:53,929 --> 00:21:04,429
lower power requirements<font color="#E5E5E5"> why because we</font>

375
00:20:57,659 --> 00:21:07,110
bless parts so<font color="#CCCCCC"> Holdings works with</font>

376
00:21:04,429 --> 00:21:09,299
buffer twice approach from the latency

377
00:21:07,110 --> 00:21:12,658
perspective<font color="#E5E5E5"> and now I'm talking about</font>

378
00:21:09,299 --> 00:21:15,418
<font color="#E5E5E5">the buffering latency so how how much</font>

379
00:21:12,659 --> 00:21:19,409
the packet the traffic could<font color="#E5E5E5"> be delayed</font>

380
00:21:15,419 --> 00:21:22,049
during the congestion we have<font color="#CCCCCC"> two</font>

381
00:21:19,409 --> 00:21:26,520
<font color="#E5E5E5">potential congestion points each of them</font>

382
00:21:22,049 --> 00:21:28,530
managed separately so the<font color="#CCCCCC"> worse case</font>

383
00:21:26,520 --> 00:21:30,750
scenario is when we have the congestion

384
00:21:28,530 --> 00:21:32,940
<font color="#E5E5E5">at both points at the same time and it's</font>

385
00:21:30,750 --> 00:21:35,940
possible<font color="#E5E5E5"> we'll see this in example in</font>

386
00:21:32,940 --> 00:21:38,429
very<font color="#CCCCCC"> soona then</font><font color="#E5E5E5"> we have the delay</font>

387
00:21:35,940 --> 00:21:43,380
introduced by the<font color="#CCCCCC"> vo to buffer before</font>

388
00:21:38,429 --> 00:21:44,880
fabric and another delay introduced by

389
00:21:43,380 --> 00:21:49,110
the output buffer<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> egress</font>

390
00:21:44,880 --> 00:21:56,159
interface so it's like a sudden<font color="#E5E5E5"> Maxima</font>

391
00:21:49,110 --> 00:21:59,250
latencies some of these<font color="#CCCCCC"> - this</font><font color="#E5E5E5"> also mean</font>

392
00:21:56,159 --> 00:22:02,070
<font color="#E5E5E5">or impacts the</font><font color="#CCCCCC"> potent skaldak jitter</font>

393
00:21:59,250 --> 00:22:04,830
<font color="#E5E5E5">right because</font><font color="#CCCCCC"> sample</font><font color="#E5E5E5"> if I have a</font>

394
00:22:02,070 --> 00:22:07,408
congestion period and then I have known

395
00:22:04,830 --> 00:22:14,158
congested period the latency difference

396
00:22:07,409 --> 00:22:16,140
is a sum<font color="#CCCCCC"> of these two also</font><font color="#E5E5E5"> interesting</font>

397
00:22:14,159 --> 00:22:19,320
things happens when we<font color="#E5E5E5"> talk when we when</font>

398
00:22:16,140 --> 00:22:22,350
we<font color="#CCCCCC"> look</font><font color="#E5E5E5"> at the bound with fairness or</font>

399
00:22:19,320 --> 00:22:26,240
bandwidth allocation for the<font color="#E5E5E5"> multiple</font>

400
00:22:22,350 --> 00:22:30,719
<font color="#E5E5E5">Falls it's a distributed system so yeah</font>

401
00:22:26,240 --> 00:22:32,299
they we have before<font color="#E5E5E5"> we met</font><font color="#CCCCCC"> very often we</font>

402
00:22:30,720 --> 00:22:34,350
<font color="#CCCCCC">have the traffic which comes to the</font>

403
00:22:32,299 --> 00:22:36,960
ingress traffic which comes to<font color="#CCCCCC"> the</font>

404
00:22:34,350 --> 00:22:39,870
router<font color="#CCCCCC"> on different or multiple ingress</font>

405
00:22:36,960 --> 00:22:41,549
<font color="#CCCCCC">PA fees</font><font color="#E5E5E5"> on the different line</font><font color="#CCCCCC"> cuts</font><font color="#E5E5E5"> event</font>

406
00:22:39,870 --> 00:22:44,820
<font color="#E5E5E5">right so the</font>

407
00:22:41,549 --> 00:22:48,289
is how the<font color="#CCCCCC"> fabrics headwear</font><font color="#E5E5E5"> decide which</font>

408
00:22:44,820 --> 00:22:53,100
<font color="#E5E5E5">card will be served when and what is the</font>

409
00:22:48,289 --> 00:22:57,480
scheduling<font color="#E5E5E5"> what is</font><font color="#CCCCCC"> this scheduling</font>

410
00:22:53,100 --> 00:23:00,149
schema<font color="#E5E5E5"> most in most cases it's</font><font color="#CCCCCC"> the</font>

411
00:22:57,480 --> 00:23:02,639
arbiter is not aware about amount of

412
00:23:00,149 --> 00:23:06,238
incoming traffic<font color="#CCCCCC"> it's only aware that</font>

413
00:23:02,639 --> 00:23:08,699
the traffic is<font color="#E5E5E5"> there or not</font><font color="#CCCCCC"> so it's a</font>

414
00:23:06,239 --> 00:23:11,399
fair share algorithm sometimes weighted

415
00:23:08,700 --> 00:23:14,100
if we have<font color="#E5E5E5"> different speeds of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> of</font>

416
00:23:11,399 --> 00:23:15,830
the<font color="#CCCCCC"> i6 but for the</font><font color="#E5E5E5"> simplicity of the</font>

417
00:23:14,100 --> 00:23:17,939
further examples

418
00:23:15,830 --> 00:23:20,359
everything is<font color="#CCCCCC"> very symmetrical speeds</font>

419
00:23:17,940 --> 00:23:20,359
are the same

420
00:23:20,899 --> 00:23:29,758
that's a buffer twice<font color="#E5E5E5"> okay so what is</font>

421
00:23:24,539 --> 00:23:32,519
<font color="#CCCCCC">end-to-end voq system but for once well</font>

422
00:23:29,759 --> 00:23:35,009
with<font color="#E5E5E5"> three to the second and third stage</font>

423
00:23:32,519 --> 00:23:38,330
of<font color="#E5E5E5"> the router so the fabric</font><font color="#CCCCCC"> and egress</font>

424
00:23:35,009 --> 00:23:44,179
dam acts as a single switching element

425
00:23:38,330 --> 00:23:49,019
virtually<font color="#CCCCCC"> we'd have which has n inputs M</font>

426
00:23:44,179 --> 00:23:53,100
outputs<font color="#E5E5E5"> and the integral input the total</font>

427
00:23:49,019 --> 00:23:53,489
inputs<font color="#CCCCCC"> bandwidth</font><font color="#E5E5E5"> is equal or equal to</font>

428
00:23:53,100 --> 00:23:56,519
total

429
00:23:53,489 --> 00:23:58,739
<font color="#E5E5E5">output bandwidth however because of the</font>

430
00:23:56,519 --> 00:24:02,700
different name in numbers<font color="#E5E5E5"> of the ports</font>

431
00:23:58,739 --> 00:24:06,929
the port speeds are different the input

432
00:24:02,700 --> 00:24:09,359
ports are faster than output and still

433
00:24:06,929 --> 00:24:12,840
we have<font color="#E5E5E5"> two potential congestion points</font>

434
00:24:09,359 --> 00:24:15,658
we can congest the fabric interface we

435
00:24:12,840 --> 00:24:18,209
can congest the output interface<font color="#E5E5E5"> but the</font>

436
00:24:15,659 --> 00:24:22,379
scheduler<font color="#E5E5E5"> is looking at both places and</font>

437
00:24:18,210 --> 00:24:25,919
gives<font color="#E5E5E5"> the grant</font><font color="#CCCCCC"> only if</font><font color="#E5E5E5"> if there is no</font>

438
00:24:22,379 --> 00:24:27,840
congestion<font color="#CCCCCC"> on any of them</font><font color="#E5E5E5"> and because</font>

439
00:24:25,919 --> 00:24:31,700
the<font color="#CCCCCC"> output interface</font><font color="#E5E5E5"> has lower speed</font>

440
00:24:27,840 --> 00:24:31,699
this condition usually<font color="#E5E5E5"> kept us first</font>

441
00:24:32,629 --> 00:24:40,408
right what is the impact on latency

442
00:24:37,609 --> 00:24:42,559
because we have only one buffer the

443
00:24:40,409 --> 00:24:45,809
number of bytes we<font color="#E5E5E5"> can buffer is limited</font>

444
00:24:42,559 --> 00:24:47,759
so that's an upper boundary of<font color="#E5E5E5"> the</font>

445
00:24:45,809 --> 00:24:50,668
<font color="#E5E5E5">latency regardless where the congestion</font>

446
00:24:47,759 --> 00:24:52,879
happens both places one place<font color="#E5E5E5"> doesn't</font>

447
00:24:50,669 --> 00:24:52,879
<font color="#CCCCCC">matter</font>

448
00:24:52,910 --> 00:25:00,170
with the<font color="#CCCCCC"> boundaries it's even more</font>

449
00:24:57,480 --> 00:25:03,470
<font color="#E5E5E5">complex because yes the fair share</font>

450
00:25:00,170 --> 00:25:07,650
<font color="#E5E5E5">approach is used here as well</font>

451
00:25:03,470 --> 00:25:12,630
however it's a fair share pair egress

452
00:25:07,650 --> 00:25:14,970
port<font color="#E5E5E5"> not per fabric port which may lead</font>

453
00:25:12,630 --> 00:25:18,390
to the<font color="#E5E5E5"> situation when the fabric port is</font>

454
00:25:14,970 --> 00:25:24,929
<font color="#CCCCCC">underutilized</font><font color="#E5E5E5"> because we give the shares</font>

455
00:25:18,390 --> 00:25:26,549
<font color="#E5E5E5">only for the output interface we have</font>

456
00:25:24,929 --> 00:25:30,059
these two approaches these two

457
00:25:26,549 --> 00:25:33,660
architectures<font color="#E5E5E5"> so now the question</font><font color="#CCCCCC"> is</font>

458
00:25:30,059 --> 00:25:37,678
okay<font color="#E5E5E5"> for what these article textures are</font>

459
00:25:33,660 --> 00:25:42,620
good bad<font color="#E5E5E5"> how to position one against</font>

460
00:25:37,679 --> 00:25:45,870
other<font color="#E5E5E5"> and actually I show</font><font color="#CCCCCC"> three options</font>

461
00:25:42,620 --> 00:25:49,139
<font color="#E5E5E5">see a CIO</font><font color="#CCCCCC"> Q system</font><font color="#E5E5E5"> with input</font><font color="#CCCCCC"> queueing</font>

462
00:25:45,870 --> 00:25:51,840
not really modern design but<font color="#E5E5E5"> there in</font>

463
00:25:49,140 --> 00:25:56,370
<font color="#CCCCCC">the past there</font><font color="#E5E5E5"> was the systems like</font><font color="#CCCCCC"> that</font>

464
00:25:51,840 --> 00:25:58,590
I know<font color="#E5E5E5"> Cisco probably their water I was</font>

465
00:25:56,370 --> 00:26:02,010
like that as well<font color="#CCCCCC"> but I just don't know</font>

466
00:25:58,590 --> 00:26:04,860
so but don't<font color="#E5E5E5"> want to mislead you CIO</font><font color="#CCCCCC"> Q</font>

467
00:26:02,010 --> 00:26:07,020
system with a<font color="#E5E5E5"> voq fabric and output</font>

468
00:26:04,860 --> 00:26:11,100
queuing and this is my<font color="#E5E5E5"> charity of system</font>

469
00:26:07,020 --> 00:26:12,418
on the<font color="#CCCCCC"> on the on the on the on</font><font color="#E5E5E5"> the on</font>

470
00:26:11,100 --> 00:26:15,510
the market

471
00:26:12,419 --> 00:26:19,140
this is<font color="#CCCCCC"> Junipero max this is cisco sr</font>

472
00:26:15,510 --> 00:26:22,590
this is<font color="#E5E5E5"> CRS</font><font color="#CCCCCC"> this is aldo all</font><font color="#E5E5E5"> of them are</font>

473
00:26:19,140 --> 00:26:26,280
<font color="#E5E5E5">that kind of architecture and finally</font>

474
00:26:22,590 --> 00:26:31,020
the<font color="#E5E5E5"> end-to-end voq systems which is</font>

475
00:26:26,280 --> 00:26:36,260
<font color="#CCCCCC">juniper PGX I as far as</font><font color="#E5E5E5"> I know</font><font color="#CCCCCC"> SES 600</font>

476
00:26:31,020 --> 00:26:39,450
<font color="#E5E5E5">known and she</font><font color="#CCCCCC"> has 6000 it's like that</font>

477
00:26:36,260 --> 00:26:42,169
and as I<font color="#CCCCCC"> said and -</font><font color="#E5E5E5"> and voq system tends</font>

478
00:26:39,450 --> 00:26:44,940
to have lower latency residency time

479
00:26:42,169 --> 00:26:47,460
<font color="#E5E5E5">perhaps very well with the high load but</font>

480
00:26:44,940 --> 00:26:53,640
CIO<font color="#CCCCCC"> queue system</font><font color="#E5E5E5"> as well if there is</font>

481
00:26:47,460 --> 00:26:56,130
there is<font color="#E5E5E5"> a voq fabric however the CIO</font>

482
00:26:53,640 --> 00:26:59,640
queue system scales much better when it

483
00:26:56,130 --> 00:27:02,130
comes<font color="#CCCCCC"> to number of interfaces</font><font color="#E5E5E5"> because of</font>

484
00:26:59,640 --> 00:27:04,350
<font color="#CCCCCC">these two stages approach</font><font color="#E5E5E5"> right so we</font>

485
00:27:02,130 --> 00:27:07,710
not<font color="#E5E5E5"> need to have a queues</font>

486
00:27:04,350 --> 00:27:13,530
and every all<font color="#E5E5E5"> interface cues available</font>

487
00:27:07,710 --> 00:27:16,100
on every single<font color="#E5E5E5"> PFE that's why this is a</font>

488
00:27:13,530 --> 00:27:24,740
good platform<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the application like</font>

489
00:27:16,100 --> 00:27:28,199
<font color="#CCCCCC">PNG or</font><font color="#E5E5E5"> maybe very dense</font><font color="#CCCCCC"> VPN</font><font color="#E5E5E5"> PE so I</font>

490
00:27:24,740 --> 00:27:34,080
start this session with<font color="#CCCCCC"> the statement</font>

491
00:27:28,200 --> 00:27:37,590
that it could be unintuitive behavior

492
00:27:34,080 --> 00:27:39,658
and depending on<font color="#E5E5E5"> the queuing queuing</font>

493
00:27:37,590 --> 00:27:42,689
strategy this behavior will be different

494
00:27:39,659 --> 00:27:47,220
<font color="#E5E5E5">so</font><font color="#CCCCCC"> I give you two examples and we will</font>

495
00:27:42,690 --> 00:27:49,710
<font color="#CCCCCC">walk through</font><font color="#E5E5E5"> it to</font><font color="#CCCCCC"> see why this so what</font>

496
00:27:47,220 --> 00:27:52,230
it first<font color="#E5E5E5"> if I'd say unintuitive</font><font color="#CCCCCC"> so what</font>

497
00:27:49,710 --> 00:27:55,950
is intuitive<font color="#E5E5E5"> let's look at the</font>

498
00:27:52,230 --> 00:28:01,289
boundaries<font color="#E5E5E5"> that's a like educational</font>

499
00:27:55,950 --> 00:28:04,140
example so the numbers are like corner

500
00:28:01,289 --> 00:28:06,919
cases let's say we offer 700 gig load

501
00:28:04,140 --> 00:28:09,600
which supposed to go to the single

502
00:28:06,919 --> 00:28:13,919
<font color="#E5E5E5">hundred gig interfaces and this is flows</font>

503
00:28:09,600 --> 00:28:16,949
from f1 to f5 of different<font color="#CCCCCC"> value each of</font>

504
00:28:13,919 --> 00:28:19,650
the N but and we have<font color="#E5E5E5"> flow f6 value</font>

505
00:28:16,950 --> 00:28:21,690
which goes out<font color="#E5E5E5"> out of the hundred</font>

506
00:28:19,650 --> 00:28:26,039
interface which<font color="#CCCCCC"> is different at that</font><font color="#E5E5E5"> one</font>

507
00:28:21,690 --> 00:28:29,909
<font color="#E5E5E5">so what do you expect intuitively</font><font color="#CCCCCC"> okay</font>

508
00:28:26,039 --> 00:28:33,090
flow number six<font color="#E5E5E5"> should go through right</font>

509
00:28:29,909 --> 00:28:34,710
<font color="#CCCCCC">why to lose it it's wire speed Reuter at</font>

510
00:28:33,090 --> 00:28:38,189
the end of the day interface is not

511
00:28:34,710 --> 00:28:42,390
<font color="#E5E5E5">congested no problem and flows one to</font>

512
00:28:38,190 --> 00:28:45,120
five<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I load</font><font color="#E5E5E5"> 600</font><font color="#CCCCCC"> cake I can get only</font>

513
00:28:42,390 --> 00:28:49,559
100<font color="#CCCCCC"> gigs so I lose six six out of seven</font>

514
00:28:45,120 --> 00:28:54,360
is<font color="#E5E5E5"> 87 six percent loss expected is</font><font color="#CCCCCC"> it an</font>

515
00:28:49,559 --> 00:28:58,590
intuitive<font color="#CCCCCC"> I think it is</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> reality is</font>

516
00:28:54,360 --> 00:29:00,918
that<font color="#CCCCCC"> root or</font><font color="#E5E5E5"> X that's a do not be a</font>

517
00:28:58,590 --> 00:29:04,320
vendor<font color="#CCCCCC"> specifical</font><font color="#E5E5E5"> platform-specific</font>

518
00:29:00,919 --> 00:29:08,549
<font color="#E5E5E5">actually the result are different the</font>

519
00:29:04,320 --> 00:29:14,970
losses for<font color="#CCCCCC"> the F</font><font color="#E5E5E5"> flow of F 1</font><font color="#CCCCCC"> to F 5 vary</font>

520
00:29:08,549 --> 00:29:17,840
from 80 from 82 to 88<font color="#E5E5E5"> percent</font><font color="#CCCCCC"> % and even</font>

521
00:29:14,970 --> 00:29:24,559
more<font color="#E5E5E5"> interestingly more</font>

522
00:29:17,840 --> 00:29:30,738
surprisingly the flow f6 has<font color="#CCCCCC"> 50% loss</font>

523
00:29:24,559 --> 00:29:34,950
why what the heck

524
00:29:30,739 --> 00:29:37,289
and then let's applies the<font color="#E5E5E5"> Rooter</font><font color="#CCCCCC"> ex by</font>

525
00:29:34,950 --> 00:29:42,440
Twitter<font color="#E5E5E5"> why different</font><font color="#CCCCCC"> tutor different</font>

526
00:29:37,289 --> 00:29:47,309
architecture<font color="#E5E5E5"> same load and what we see</font><font color="#CCCCCC"> o</font>

527
00:29:42,440 --> 00:29:50,539
<font color="#E5E5E5">f6</font><font color="#CCCCCC"> there is no</font><font color="#E5E5E5"> losses and and the losses</font>

528
00:29:47,309 --> 00:29:53,970
<font color="#CCCCCC">on the f12 at 5 we</font><font color="#E5E5E5"> are still different</font>

529
00:29:50,539 --> 00:29:57,389
<font color="#CCCCCC">if there is some consistency between</font>

530
00:29:53,970 --> 00:30:06,119
these two but they are<font color="#E5E5E5"> different so why</font>

531
00:29:57,389 --> 00:30:10,379
that<font color="#E5E5E5"> no your hardware</font><font color="#CCCCCC"> rotaries</font><font color="#E5E5E5"> router X</font>

532
00:30:06,119 --> 00:30:14,309
is<font color="#CCCCCC"> cio Q system</font><font color="#E5E5E5"> rotor</font><font color="#CCCCCC"> Y is vo q system</font>

533
00:30:10,379 --> 00:30:16,830
and looking under<font color="#E5E5E5"> the hood</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a PF</font>

534
00:30:14,309 --> 00:30:19,408
<font color="#E5E5E5">es and fabric and this is the fabric</font>

535
00:30:16,830 --> 00:30:21,840
port is 300 gig in this<font color="#CCCCCC"> t</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> tika</font>

536
00:30:19,409 --> 00:30:24,599
platform<font color="#E5E5E5"> I never</font><font color="#CCCCCC"> hear</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> its kind of</font>

537
00:30:21,840 --> 00:30:27,809
ruler so that's a good<font color="#E5E5E5"> example</font><font color="#CCCCCC"> do not</font>

538
00:30:24,599 --> 00:30:30,869
<font color="#CCCCCC">say that</font><font color="#E5E5E5"> I am</font><font color="#CCCCCC"> vendor</font><font color="#E5E5E5"> specific and we</font>

539
00:30:27,809 --> 00:30:35,220
know that on both and both filters<font color="#E5E5E5"> use</font>

540
00:30:30,869 --> 00:30:37,529
the first shell fabric<font color="#CCCCCC"> scheduler</font><font color="#E5E5E5"> so</font>

541
00:30:35,220 --> 00:30:37,830
let's see what happens<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> rotor</font>

542
00:30:37,529 --> 00:30:42,570
eggs

543
00:30:37,830 --> 00:30:44,908
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> CIO Q flow F 1 FF to share the same</font>

544
00:30:42,570 --> 00:30:47,999
buffer<font color="#CCCCCC"> same Q on the</font><font color="#E5E5E5"> PFD one before</font>

545
00:30:44,909 --> 00:30:52,019
fabric and<font color="#E5E5E5"> three and four</font><font color="#CCCCCC"> flow three and</font>

546
00:30:47,999 --> 00:30:57,529
<font color="#CCCCCC">four</font><font color="#E5E5E5"> shared the common q on the PF e to</font>

547
00:30:52,019 --> 00:31:02,609
toward shared fabric<font color="#E5E5E5"> and five and six</font>

548
00:30:57,529 --> 00:31:06,539
<font color="#E5E5E5">are ugly if he PF e free and they share</font>

549
00:31:02,609 --> 00:31:08,639
the same<font color="#CCCCCC"> queue so there is a free</font>

550
00:31:06,539 --> 00:31:12,320
ingress PF e that want to talk to the PF

551
00:31:08,639 --> 00:31:14,668
e<font color="#CCCCCC"> 4 fabric scheduler gives a hundred gig</font>

552
00:31:12,320 --> 00:31:16,769
gigabit per second<font color="#E5E5E5"> to each of the</font>

553
00:31:14,669 --> 00:31:20,489
ingress PFE that's a<font color="#E5E5E5"> fair share</font>

554
00:31:16,769 --> 00:31:23,340
scheduler fabric<font color="#CCCCCC"> scheduler which way but</font>

555
00:31:20,489 --> 00:31:27,149
before because my<font color="#E5E5E5"> load is different</font><font color="#CCCCCC"> I</font>

556
00:31:23,340 --> 00:31:30,090
ends up with different losses and even

557
00:31:27,149 --> 00:31:31,000
here this is a reason why I have<font color="#CCCCCC"> 50%</font>

558
00:31:30,090 --> 00:31:33,850
loss

559
00:31:31,000 --> 00:31:37,960
for my<font color="#E5E5E5"> f5s stream even they are</font><font color="#CCCCCC"> leaving</font>

560
00:31:33,850 --> 00:31:39,909
<font color="#E5E5E5">non congested interface this warranted</font>

561
00:31:37,960 --> 00:31:43,030
<font color="#E5E5E5">boundary free the this hundred</font><font color="#CCCCCC"> geek</font>

562
00:31:39,910 --> 00:31:45,880
makes<font color="#CCCCCC"> fifty</font><font color="#E5E5E5"> percent more or less loss</font>

563
00:31:43,030 --> 00:31:52,899
for that<font color="#CCCCCC"> flow because it</font><font color="#E5E5E5"> shares the same</font>

564
00:31:45,880 --> 00:31:55,630
<font color="#CCCCCC">queue</font><font color="#E5E5E5"> as at five okay good so what is</font>

565
00:31:52,900 --> 00:31:59,290
the<font color="#CCCCCC"> next stage</font><font color="#E5E5E5"> traffic is already</font>

566
00:31:55,630 --> 00:32:02,290
<font color="#E5E5E5">arrived on on the egress PFE and this is</font>

567
00:31:59,290 --> 00:32:06,460
<font color="#CCCCCC">output queuing system so flow F 1</font><font color="#E5E5E5"> 2 F 5</font>

568
00:32:02,290 --> 00:32:09,700
which<font color="#CCCCCC"> is at 295 gigs</font><font color="#E5E5E5"> after losses on the</font>

569
00:32:06,460 --> 00:32:12,370
front of the fabric<font color="#E5E5E5"> enters the queue and</font>

570
00:32:09,700 --> 00:32:14,590
<font color="#E5E5E5">it will be scheduled</font><font color="#CCCCCC"> at out at the 100</font>

571
00:32:12,370 --> 00:32:17,620
Gig<font color="#E5E5E5"> speed so it's another 65 percent</font>

572
00:32:14,590 --> 00:32:20,320
loss on top of whatever<font color="#E5E5E5"> whatever we</font>

573
00:32:17,620 --> 00:32:23,649
already lost before fabric and this ends

574
00:32:20,320 --> 00:32:28,179
<font color="#E5E5E5">up with</font><font color="#CCCCCC"> 82 percent same</font><font color="#E5E5E5"> logic applies</font>

575
00:32:23,650 --> 00:32:31,630
for the<font color="#E5E5E5"> for the flows 3</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 4 which are</font>

576
00:32:28,180 --> 00:32:34,150
in the same<font color="#E5E5E5"> queue on that stage f6 there</font>

577
00:32:31,630 --> 00:32:38,020
is no there is no congestion<font color="#E5E5E5"> so whatever</font>

578
00:32:34,150 --> 00:32:42,100
we get whatever<font color="#CCCCCC"> P if</font><font color="#E5E5E5"> you forget for the</font>

579
00:32:38,020 --> 00:32:44,710
<font color="#E5E5E5">flow of 6</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> send it out</font><font color="#CCCCCC"> so there is no</font>

580
00:32:42,100 --> 00:32:48,100
losses<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the second</font><font color="#E5E5E5"> stage but what we</font>

581
00:32:44,710 --> 00:32:51,910
those before<font color="#E5E5E5"> we</font><font color="#CCCCCC"> lose and the funny thing</font>

582
00:32:48,100 --> 00:32:55,179
<font color="#CCCCCC">is</font><font color="#E5E5E5"> I'm not so funny thing is that the</font>

583
00:32:51,910 --> 00:32:59,940
<font color="#E5E5E5">fabric queuing system is not exposed in</font>

584
00:32:55,180 --> 00:33:04,660
<font color="#E5E5E5">the CLI so you need to know how to hack</font>

585
00:32:59,940 --> 00:33:09,640
but or<font color="#CCCCCC"> call jtech or whatever tag they</font>

586
00:33:04,660 --> 00:33:13,240
tells you but yeah on the on the<font color="#CCCCCC"> PFE</font>

587
00:33:09,640 --> 00:33:16,000
free we<font color="#E5E5E5"> can look for the</font><font color="#CCCCCC"> Q static city</font>

588
00:33:13,240 --> 00:33:19,270
for<font color="#CCCCCC"> PF e 4 which is</font><font color="#E5E5E5"> the destination PF e</font>

589
00:33:16,000 --> 00:33:22,840
and we see<font color="#CCCCCC"> ok what</font><font color="#E5E5E5"> is NQ it put it into</font>

590
00:33:19,270 --> 00:33:25,330
the queue<font color="#E5E5E5"> and what is transmitted out of</font>

591
00:33:22,840 --> 00:33:29,500
the queue<font color="#E5E5E5"> and what is the drop that's a</font>

592
00:33:25,330 --> 00:33:34,960
50% that's<font color="#E5E5E5"> example from from the</font>

593
00:33:29,500 --> 00:33:36,940
previous slide good Rooter why we know

594
00:33:34,960 --> 00:33:38,650
that this is video queue<font color="#E5E5E5"> system so what</font>

595
00:33:36,940 --> 00:33:44,710
will be<font color="#CCCCCC"> the behavior we start the same</font>

596
00:33:38,650 --> 00:33:48,159
<font color="#E5E5E5">logic right so false</font><font color="#CCCCCC"> f1 F and F</font><font color="#E5E5E5"> to share</font>

597
00:33:44,710 --> 00:33:52,210
the same<font color="#CCCCCC"> queue on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> PF you wan</font><font color="#E5E5E5"> flows</font>

598
00:33:48,159 --> 00:33:56,950
at<font color="#CCCCCC"> 304 shares the same view on the</font><font color="#E5E5E5"> PF e</font>

599
00:33:52,210 --> 00:34:01,630
<font color="#CCCCCC">to however</font><font color="#E5E5E5"> flow</font><font color="#CCCCCC"> 5 and flow 6 has</font>

600
00:33:56,950 --> 00:34:04,120
dedicated<font color="#CCCCCC"> qs y because flow</font><font color="#E5E5E5"> 6 is going</font>

601
00:34:01,630 --> 00:34:07,539
<font color="#CCCCCC">to different output interface</font><font color="#E5E5E5"> so they</font>

602
00:34:04,120 --> 00:34:12,339
have<font color="#E5E5E5"> different vo q here before fabric</font>

603
00:34:07,539 --> 00:34:15,429
<font color="#E5E5E5">and that's where</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> starts then</font>

604
00:34:12,339 --> 00:34:17,619
the public<font color="#E5E5E5"> schedule is considering the</font>

605
00:34:15,429 --> 00:34:21,220
egress port bound with availability<font color="#E5E5E5"> so</font>

606
00:34:17,619 --> 00:34:24,639
it gives a fair share<font color="#E5E5E5"> per output</font>

607
00:34:21,219 --> 00:34:29,199
interface<font color="#E5E5E5"> because in the output</font>

608
00:34:24,639 --> 00:34:33,099
<font color="#E5E5E5">interface the interface 100</font><font color="#CCCCCC"> Gig so 32</font>

609
00:34:29,199 --> 00:34:38,918
<font color="#E5E5E5">gig is given to vo q @ PF</font><font color="#CCCCCC"> e 1 2 & 3 the</font>

610
00:34:33,099 --> 00:34:41,500
<font color="#CCCCCC">vo</font><font color="#E5E5E5"> q for that port</font><font color="#CCCCCC"> and now</font><font color="#E5E5E5"> everything</font>

611
00:34:38,918 --> 00:34:46,270
starts<font color="#CCCCCC"> to be obvious right because it's</font>

612
00:34:41,500 --> 00:34:48,010
32 gig<font color="#CCCCCC"> give given so we have different</font>

613
00:34:46,270 --> 00:34:50,859
<font color="#CCCCCC">closes</font><font color="#E5E5E5"> because the offer at load is</font>

614
00:34:48,010 --> 00:34:52,659
different on each PF e we<font color="#E5E5E5"> have 300 gig</font>

615
00:34:50,859 --> 00:34:57,790
here 200 gig here so that's why<font color="#CCCCCC"> i</font>

616
00:34:52,659 --> 00:35:00,400
different loss rate for the flow<font color="#E5E5E5"> 6 the</font>

617
00:34:57,790 --> 00:35:03,460
output interface is only this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> only</font>

618
00:35:00,400 --> 00:35:06,480
flow on<font color="#E5E5E5"> only PF III is talking to to</font>

619
00:35:03,460 --> 00:35:12,070
<font color="#CCCCCC">aggress interface to so hundred gig is</font>

620
00:35:06,480 --> 00:35:19,300
warranted for this<font color="#CCCCCC"> q</font><font color="#E5E5E5"> and by the way it's</font>

621
00:35:12,070 --> 00:35:20,859
only<font color="#E5E5E5"> 10 gig traffic so no</font><font color="#CCCCCC"> losses then</font>

622
00:35:19,300 --> 00:35:25,060
when we go to the net when the packet

623
00:35:20,859 --> 00:35:27,790
arrived on the<font color="#CCCCCC"> PF e 4 it's already at</font>

624
00:35:25,060 --> 00:35:31,720
the speed of interfaces right because

625
00:35:27,790 --> 00:35:34,390
interface<font color="#E5E5E5"> 1 allocate</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> times 32 gig</font><font color="#CCCCCC"> so</font>

626
00:35:31,720 --> 00:35:35,709
the flow for the interface<font color="#E5E5E5"> one is</font>

627
00:35:34,390 --> 00:35:37,569
hundred gig there is no need to

628
00:35:35,710 --> 00:35:40,810
buffering and<font color="#E5E5E5"> there is no buffer at all</font>

629
00:35:37,570 --> 00:35:43,240
<font color="#E5E5E5">in the hardware so packet go out the</font>

630
00:35:40,810 --> 00:35:46,089
same for<font color="#E5E5E5"> this interface</font><font color="#CCCCCC"> too</font><font color="#E5E5E5"> so there is</font>

631
00:35:43,240 --> 00:35:51,149
no any additional losses or additional

632
00:35:46,089 --> 00:35:55,869
congestion at the egress interface<font color="#E5E5E5"> and</font>

633
00:35:51,150 --> 00:35:58,240
yeah same story here<font color="#CCCCCC"> it's even</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> this</font>

634
00:35:55,869 --> 00:36:01,390
<font color="#E5E5E5">an example of particular product</font><font color="#CCCCCC"> but</font>

635
00:35:58,240 --> 00:36:04,359
the voq number<font color="#CCCCCC"> actually means</font><font color="#E5E5E5"> what is</font>

636
00:36:01,390 --> 00:36:08,020
the egress interface<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> that's a</font>

637
00:36:04,360 --> 00:36:10,000
internal index number which is<font color="#E5E5E5"> not you</font>

638
00:36:08,020 --> 00:36:12,460
which is not intuitive but anyway

639
00:36:10,000 --> 00:36:19,870
you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see that you drain rate for that</font>

640
00:36:12,460 --> 00:36:24,100
<font color="#CCCCCC">interface</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> 32</font><font color="#E5E5E5"> gig because the</font>

641
00:36:19,870 --> 00:36:28,390
situation was<font color="#CCCCCC"> like</font><font color="#E5E5E5"> a like before</font><font color="#CCCCCC"> so what</font>

642
00:36:24,100 --> 00:36:32,640
we can<font color="#E5E5E5"> do about that not much we can</font>

643
00:36:28,390 --> 00:36:36,220
accept<font color="#E5E5E5"> the fact of life it is</font><font color="#CCCCCC"> what it is</font>

644
00:36:32,640 --> 00:36:38,680
<font color="#CCCCCC">to by knowledge</font><font color="#E5E5E5"> nobody no vendor allows</font>

645
00:36:36,220 --> 00:36:41,799
you to manipulate<font color="#E5E5E5"> the fabric scheduler</font>

646
00:36:38,680 --> 00:36:44,230
and yeah it seems<font color="#E5E5E5"> to be simple from they</font>

647
00:36:41,800 --> 00:36:46,960
might from my talk<font color="#E5E5E5"> but believe me there</font>

648
00:36:44,230 --> 00:36:49,870
is<font color="#CCCCCC"> a timing there is distances there is</font>

649
00:36:46,960 --> 00:36:51,850
a thousand of details<font color="#CCCCCC"> there</font><font color="#E5E5E5"> is a paging</font>

650
00:36:49,870 --> 00:36:55,120
<font color="#E5E5E5">there is an efficiency of the memory</font>

651
00:36:51,850 --> 00:36:57,819
access<font color="#E5E5E5"> there is a</font><font color="#CCCCCC"> solidification</font><font color="#E5E5E5"> tax</font>

652
00:36:55,120 --> 00:37:01,770
<font color="#E5E5E5">there is a lot of things you have</font><font color="#CCCCCC"> you</font>

653
00:36:57,820 --> 00:37:04,720
you have to take<font color="#E5E5E5"> into</font><font color="#CCCCCC"> the account so</font>

654
00:37:01,770 --> 00:37:07,720
it's a rope and it's it's better<font color="#E5E5E5"> don't</font>

655
00:37:04,720 --> 00:37:11,980
hang<font color="#CCCCCC"> yourself so you have to live</font><font color="#E5E5E5"> with</font>

656
00:37:07,720 --> 00:37:15,609
it however<font color="#E5E5E5"> knowing the behavior you can</font>

657
00:37:11,980 --> 00:37:19,090
find the way to<font color="#CCCCCC"> mitigate the problem</font>

658
00:37:15,610 --> 00:37:25,810
<font color="#E5E5E5">right if you're probably if you think</font>

659
00:37:19,090 --> 00:37:27,940
that your flows are served<font color="#E5E5E5"> unfairly you</font>

660
00:37:25,810 --> 00:37:30,460
<font color="#CCCCCC">may reach up</font><font color="#E5E5E5"> with the traffic so you</font>

661
00:37:27,940 --> 00:37:33,490
move some flows from one<font color="#CCCCCC"> PFE to another</font>

662
00:37:30,460 --> 00:37:36,910
PFE because if you<font color="#E5E5E5"> fairly low the</font>

663
00:37:33,490 --> 00:37:39,910
ingress<font color="#CCCCCC"> PFE you get a fair fair share</font>

664
00:37:36,910 --> 00:37:42,850
for each flow<font color="#E5E5E5"> it's not always possible I</font>

665
00:37:39,910 --> 00:37:44,859
know that but it's<font color="#CCCCCC"> better</font><font color="#E5E5E5"> to know at</font>

666
00:37:42,850 --> 00:37:47,490
least<font color="#CCCCCC"> you not you are not doing the</font>

667
00:37:44,860 --> 00:37:50,170
troubleshooting<font color="#CCCCCC"> no</font><font color="#E5E5E5"> tries the tickets not</font>

668
00:37:47,490 --> 00:37:54,850
<font color="#E5E5E5">for</font><font color="#CCCCCC"> non-existing</font><font color="#E5E5E5"> problem you know it is</font>

669
00:37:50,170 --> 00:37:56,740
<font color="#E5E5E5">like like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and potentially next time</font>

670
00:37:54,850 --> 00:37:59,890
you choose the other platform or other

671
00:37:56,740 --> 00:38:02,410
architecture<font color="#CCCCCC"> okay</font>

672
00:37:59,890 --> 00:38:06,839
we discussed in the<font color="#CCCCCC"> losses and boundary</font>

673
00:38:02,410 --> 00:38:06,839
things<font color="#E5E5E5"> the next is latency</font>

674
00:38:07,740 --> 00:38:14,200
example is a<font color="#E5E5E5"> little bit simpler right we</font>

675
00:38:11,440 --> 00:38:17,740
have free<font color="#E5E5E5"> flows it's 400 giggle together</font>

676
00:38:14,200 --> 00:38:22,720
<font color="#CCCCCC">we load it we direct to do one output</font>

677
00:38:17,740 --> 00:38:25,990
<font color="#E5E5E5">interface which</font><font color="#CCCCCC"> is a hundred</font><font color="#E5E5E5"> gig and the</font>

678
00:38:22,720 --> 00:38:28,089
platform<font color="#E5E5E5"> is designed or that says take</font><font color="#CCCCCC"> a</font>

679
00:38:25,990 --> 00:38:32,020
<font color="#E5E5E5">vendor statement that yeah we have</font>

680
00:38:28,090 --> 00:38:34,120
<font color="#CCCCCC">hundred milliseconds</font><font color="#E5E5E5"> buffer or we can we</font>

681
00:38:32,020 --> 00:38:36,280
can<font color="#E5E5E5"> accommodate the Bears which is equal</font>

682
00:38:34,120 --> 00:38:43,000
to<font color="#CCCCCC"> the interface speed times hundred</font>

683
00:38:36,280 --> 00:38:44,860
milliseconds<font color="#E5E5E5"> good so we expect hundred</font>

684
00:38:43,000 --> 00:38:46,450
milliseconds<font color="#E5E5E5"> because if the permanent</font>

685
00:38:44,860 --> 00:38:49,630
congestion we expect<font color="#CCCCCC"> right hundred</font>

686
00:38:46,450 --> 00:38:53,710
milliseconds<font color="#E5E5E5"> latency but funny</font><font color="#CCCCCC"> enough in</font>

687
00:38:49,630 --> 00:38:58,840
a<font color="#E5E5E5"> Rooter</font><font color="#CCCCCC"> x.x case some</font><font color="#E5E5E5"> flaws are delayed</font>

688
00:38:53,710 --> 00:39:02,650
by<font color="#E5E5E5"> 200 milliseconds why perfect mobula</font>

689
00:38:58,840 --> 00:39:04,480
we delay more<font color="#CCCCCC"> ten we have memory not</font>

690
00:39:02,650 --> 00:39:10,830
<font color="#E5E5E5">really we have more memory</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> we</font>

691
00:39:04,480 --> 00:39:13,990
thought we have the the architecture why

692
00:39:10,830 --> 00:39:15,870
has the 100<font color="#E5E5E5"> milliseconds it shows</font>

693
00:39:13,990 --> 00:39:19,240
hundred milliseconds

694
00:39:15,870 --> 00:39:21,580
why because with the<font color="#E5E5E5"> CIO queue system</font>

695
00:39:19,240 --> 00:39:26,319
you have buffer before fabric and after

696
00:39:21,580 --> 00:39:30,250
fabric and if my statement as a vendor

697
00:39:26,320 --> 00:39:30,820
is that I can survive<font color="#E5E5E5"> 100 milliseconds</font>

698
00:39:30,250 --> 00:39:33,400
<font color="#E5E5E5">best</font>

699
00:39:30,820 --> 00:39:35,230
<font color="#E5E5E5">I need the proper memory before fabric</font>

700
00:39:33,400 --> 00:39:38,230
because this burst could be against the

701
00:39:35,230 --> 00:39:40,240
fabric port and I need this on the

702
00:39:38,230 --> 00:39:43,150
output interface because it could<font color="#E5E5E5"> be a</font>

703
00:39:40,240 --> 00:39:45,790
situation<font color="#E5E5E5"> when fabric is not congested</font>

704
00:39:43,150 --> 00:39:51,790
only port is<font color="#E5E5E5"> congested right so it's</font>

705
00:39:45,790 --> 00:39:56,800
more buffer and that's<font color="#E5E5E5"> the reason why</font>

706
00:39:51,790 --> 00:40:00,490
why we saw<font color="#CCCCCC"> sage</font><font color="#E5E5E5"> again step by step flows</font>

707
00:39:56,800 --> 00:40:03,040
<font color="#CCCCCC">1 & 2 shares the vo</font><font color="#E5E5E5"> the shares the q vo</font>

708
00:40:00,490 --> 00:40:10,299
good fabric vo<font color="#CCCCCC"> q</font><font color="#E5E5E5"> buffer on a</font><font color="#CCCCCC"> peer he won</font>

709
00:40:03,040 --> 00:40:12,370
<font color="#CCCCCC">and if flow a free is alone and there</font><font color="#E5E5E5"> is</font>

710
00:40:10,300 --> 00:40:14,170
a<font color="#CCCCCC"> - PF e which tries to talk to the</font>

711
00:40:12,370 --> 00:40:16,770
<font color="#E5E5E5">egress interface so each of them gets</font>

712
00:40:14,170 --> 00:40:20,430
<font color="#E5E5E5">the first share of</font>

713
00:40:16,770 --> 00:40:22,980
hundred hundred fifty gigabytes<font color="#E5E5E5"> of the</font>

714
00:40:20,430 --> 00:40:28,710
fabric fabric poor<font color="#E5E5E5"> bandwidth in 300 gig</font>

715
00:40:22,980 --> 00:40:30,840
<font color="#E5E5E5">poor flows one and two</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> deck you were</font>

716
00:40:28,710 --> 00:40:34,950
taken from the queue at the speed of 200

717
00:40:30,840 --> 00:40:36,750
gigabytes<font color="#CCCCCC"> why</font><font color="#E5E5E5"> 200 is a 150 warranted and</font>

718
00:40:34,950 --> 00:40:38,819
there is some left over from the<font color="#E5E5E5"> other</font>

719
00:40:36,750 --> 00:40:42,540
<font color="#CCCCCC">ports so</font><font color="#E5E5E5"> that from the other PFE that's</font>

720
00:40:38,820 --> 00:40:45,360
why it's 200 so<font color="#E5E5E5"> because we take the</font>

721
00:40:42,540 --> 00:40:48,480
<font color="#E5E5E5">packet from the queue slower</font><font color="#CCCCCC"> then put it</font>

722
00:40:45,360 --> 00:40:49,890
into<font color="#CCCCCC"> the</font><font color="#E5E5E5"> queue we will have a delay you</font>

723
00:40:48,480 --> 00:40:51,780
<font color="#CCCCCC">will build up and we will</font><font color="#E5E5E5"> see the</font>

724
00:40:49,890 --> 00:40:56,279
hundred<font color="#E5E5E5"> milliseconds delay and some</font>

725
00:40:51,780 --> 00:41:03,869
losses<font color="#E5E5E5"> of course for free is a loan</font>

726
00:40:56,280 --> 00:41:07,470
flown on<font color="#E5E5E5"> the PFE</font><font color="#CCCCCC"> - and if and it's it</font>

727
00:41:03,869 --> 00:41:10,350
<font color="#E5E5E5">has these 50 millisecond</font><font color="#CCCCCC"> 1550 gigabit</font>

728
00:41:07,470 --> 00:41:13,919
warranted it not needs that much it's a

729
00:41:10,350 --> 00:41:17,970
hundred 100<font color="#E5E5E5"> gigabit only so actually the</font>

730
00:41:13,920 --> 00:41:20,790
queue is empty right<font color="#E5E5E5"> it because we can</font>

731
00:41:17,970 --> 00:41:23,009
take move faster<font color="#E5E5E5"> we possibly can take</font>

732
00:41:20,790 --> 00:41:26,850
faster<font color="#CCCCCC"> traffic than they are</font><font color="#E5E5E5"> arrived on</font>

733
00:41:23,010 --> 00:41:31,470
the cube however when the traffic<font color="#E5E5E5"> comes</font>

734
00:41:26,850 --> 00:41:35,609
<font color="#E5E5E5">to the to the egress PFE that's a</font>

735
00:41:31,470 --> 00:41:38,100
<font color="#CCCCCC">altogether</font><font color="#E5E5E5"> 300 gigabit traffic and we</font>

736
00:41:35,609 --> 00:41:41,160
try<font color="#E5E5E5"> to push it down to the single 100</font>

737
00:41:38,100 --> 00:41:43,529
Gig interface so again there is a Q so<font color="#CCCCCC"> Q</font>

738
00:41:41,160 --> 00:41:45,000
builds up<font color="#E5E5E5"> hundred milliseconds delay and</font>

739
00:41:43,530 --> 00:41:49,920
that's<font color="#CCCCCC"> how we ended up</font><font color="#E5E5E5"> with 200</font>

740
00:41:45,000 --> 00:41:52,530
milliseconds<font color="#E5E5E5"> of course in practical</font>

741
00:41:49,920 --> 00:41:54,600
implementation somebody before fabric

742
00:41:52,530 --> 00:41:57,690
buffer could be<font color="#CCCCCC"> much a little bit more</font>

743
00:41:54,600 --> 00:41:59,339
shallow<font color="#E5E5E5"> right your vendor don't tell you</font>

744
00:41:57,690 --> 00:42:01,890
but it's not hundred<font color="#CCCCCC"> milliseconds is</font>

745
00:41:59,340 --> 00:42:04,740
only 50 milliseconds<font color="#E5E5E5"> but still logic is</font>

746
00:42:01,890 --> 00:42:11,850
the<font color="#CCCCCC"> same you will ends</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> 150</font><font color="#CCCCCC"> not</font>

747
00:42:04,740 --> 00:42:13,500
hundred<font color="#CCCCCC"> Luther why you can you know this</font>

748
00:42:11,850 --> 00:42:16,589
is a<font color="#E5E5E5"> video queue system right so</font><font color="#CCCCCC"> we</font>

749
00:42:13,500 --> 00:42:20,940
buffer only on the<font color="#E5E5E5"> front on front flow</font>

750
00:42:16,590 --> 00:42:27,990
<font color="#CCCCCC">f1 and f2</font><font color="#E5E5E5"> shares the same queue of on PF</font>

751
00:42:20,940 --> 00:42:30,109
e 1f<font color="#E5E5E5"> freeze alone on PF e - there is a -</font>

752
00:42:27,990 --> 00:42:32,808
Eden grass<font color="#CCCCCC"> PF e that</font><font color="#E5E5E5"> won't attack</font>

753
00:42:30,109 --> 00:42:38,710
the egress port so<font color="#E5E5E5"> fabric scheduler</font>

754
00:42:32,809 --> 00:42:42,170
<font color="#E5E5E5">gives it 150 gig to HP ingress PFE and</font>

755
00:42:38,710 --> 00:42:45,650
of course the ingress P in both cases

756
00:42:42,170 --> 00:42:48,249
<font color="#E5E5E5">it's overloaded so we get the 100</font>

757
00:42:45,650 --> 00:42:52,640
<font color="#E5E5E5">milliseconds delay for a flow</font><font color="#CCCCCC"> f1 and</font><font color="#E5E5E5"> f2</font>

758
00:42:48,249 --> 00:42:55,069
with a high drop<font color="#CCCCCC"> rate and flow F free</font>

759
00:42:52,640 --> 00:43:00,049
will be delayed as well before fabric at

760
00:42:55,069 --> 00:43:01,940
the<font color="#CCCCCC"> PFC too but with a bit lower loss</font>

761
00:43:00,049 --> 00:43:03,890
rate but<font color="#CCCCCC"> that doesn't</font><font color="#E5E5E5"> matter</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> not</font>

762
00:43:01,940 --> 00:43:05,869
our focus<font color="#E5E5E5"> and on the egress when the</font>

763
00:43:03,890 --> 00:43:07,999
<font color="#CCCCCC">packet when the traffic</font><font color="#E5E5E5"> arrived from all</font>

764
00:43:05,869 --> 00:43:10,400
three flows to the<font color="#E5E5E5"> PA fee for it's</font>

765
00:43:07,999 --> 00:43:13,238
already hundred gig<font color="#E5E5E5"> so there is no need</font>

766
00:43:10,400 --> 00:43:13,239
to buffering at all

767
00:43:14,680 --> 00:43:27,589
<font color="#CCCCCC">okay that's a home</font><font color="#E5E5E5"> that's a exercise and</font>

768
00:43:21,109 --> 00:43:32,598
I stay like that for a while what we

769
00:43:27,589 --> 00:43:36,920
observe this is a boundary and this is a

770
00:43:32,599 --> 00:43:39,190
loss rate so what is the<font color="#E5E5E5"> root</font>

771
00:43:36,920 --> 00:43:39,190
<font color="#E5E5E5">architecture</font>

772
00:43:46,809 --> 00:43:57,429
that's your homework<font color="#CCCCCC"> if you'd like</font><font color="#E5E5E5"> to</font>

773
00:43:51,819 --> 00:43:58,900
take exercise the presentation<font color="#E5E5E5"> should</font><font color="#CCCCCC"> be</font>

774
00:43:57,429 --> 00:44:04,329
online so you can<font color="#E5E5E5"> come</font><font color="#CCCCCC"> back to this</font>

775
00:43:58,900 --> 00:44:06,309
slide I'm working for answer<font color="#E5E5E5"> I will try</font>

776
00:44:04,329 --> 00:44:08,949
to find<font color="#E5E5E5"> some kind of interest</font>

777
00:44:06,309 --> 00:44:12,939
interesting<font color="#E5E5E5"> the price or at least I'll</font>

778
00:44:08,949 --> 00:44:18,939
send a<font color="#E5E5E5"> send back the legal table who get</font>

779
00:44:12,939 --> 00:44:21,339
the answer first<font color="#E5E5E5"> summary better know</font>

780
00:44:18,939 --> 00:44:23,769
your route or<font color="#CCCCCC"> Anatomy because then you</font>

781
00:44:21,339 --> 00:44:27,880
know<font color="#E5E5E5"> if they</font><font color="#CCCCCC"> behalf X expected or it's a</font>

782
00:44:23,769 --> 00:44:29,859
problem the<font color="#E5E5E5"> queuing architecture impacts</font>

783
00:44:27,880 --> 00:44:31,479
power consumption and<font color="#E5E5E5"> system scanning</font>

784
00:44:29,859 --> 00:44:33,519
capabilities and that's maybe<font color="#E5E5E5"> not</font><font color="#CCCCCC"> that</font>

785
00:44:31,479 --> 00:44:35,259
important in operational because you

786
00:44:33,519 --> 00:44:41,140
already<font color="#E5E5E5"> bought the</font><font color="#CCCCCC"> Reuters ooh</font><font color="#E5E5E5"> it's</font>

787
00:44:35,259 --> 00:44:42,909
there but<font color="#E5E5E5"> just for your information but</font>

788
00:44:41,140 --> 00:44:46,509
the<font color="#CCCCCC"> queuing architecture impacts</font><font color="#E5E5E5"> the</font>

789
00:44:42,909 --> 00:44:48,189
residency time how<font color="#E5E5E5"> long</font><font color="#CCCCCC"> best-case</font><font color="#E5E5E5"> packet</font>

790
00:44:46,509 --> 00:44:53,650
has to<font color="#E5E5E5"> stay at the</font><font color="#CCCCCC"> Rooter what is your</font>

791
00:44:48,189 --> 00:44:56,348
latency and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> last point</font><font color="#E5E5E5"> is yeah</font>

792
00:44:53,650 --> 00:44:58,630
<font color="#CCCCCC">cueing her</font><font color="#E5E5E5"> station may be a reason</font><font color="#CCCCCC"> for</font>

793
00:44:56,349 --> 00:45:03,969
<font color="#CCCCCC">the non intuitive traffic loss or</font>

794
00:44:58,630 --> 00:45:05,499
latency pattern better if you know that

795
00:45:03,969 --> 00:45:08,849
<font color="#E5E5E5">this is expected for the given</font>

796
00:45:05,499 --> 00:45:11,379
architecture you avoid filling<font color="#E5E5E5"> the case</font>

797
00:45:08,849 --> 00:45:13,630
<font color="#E5E5E5">explaining to the management that</font>

798
00:45:11,380 --> 00:45:17,890
something<font color="#E5E5E5"> goes wrong but it's good but</font>

799
00:45:13,630 --> 00:45:19,659
it's<font color="#E5E5E5"> expected not right it's if you know</font>

800
00:45:17,890 --> 00:45:21,429
that this is expected if you know the

801
00:45:19,659 --> 00:45:24,489
architecture<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know this is expected</font>

802
00:45:21,429 --> 00:45:28,989
behavior<font color="#E5E5E5"> then at least you can try to</font>

803
00:45:24,489 --> 00:45:29,739
<font color="#CCCCCC">mitigate the problem if</font><font color="#E5E5E5"> you need or just</font>

804
00:45:28,989 --> 00:45:32,529
leave it<font color="#CCCCCC"> that</font>

805
00:45:29,739 --> 00:45:34,449
but you avoid the hassle with<font color="#CCCCCC"> the</font>

806
00:45:32,529 --> 00:45:36,429
dealing<font color="#CCCCCC"> with it</font><font color="#E5E5E5"> tech</font><font color="#CCCCCC"> support</font>

807
00:45:34,449 --> 00:45:39,579
explaining<font color="#E5E5E5"> since the thousands of logs</font>

808
00:45:36,429 --> 00:45:41,829
<font color="#E5E5E5">waits a week escalate have the query</font>

809
00:45:39,579 --> 00:45:44,140
<font color="#E5E5E5">Coulson question from management why and</font>

810
00:45:41,829 --> 00:45:50,309
what's<font color="#E5E5E5"> going on just</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find out the end</font>

811
00:45:44,140 --> 00:45:50,308
of<font color="#E5E5E5"> everything is</font><font color="#CCCCCC"> okay thank you</font>

812
00:46:10,190 --> 00:46:16,410
<font color="#CCCCCC">jyllian</font><font color="#E5E5E5"> Google do have you seen anything</font>

813
00:46:14,039 --> 00:46:18,749
we're very low speed interfaces<font color="#E5E5E5"> one gig</font>

814
00:46:16,410 --> 00:46:21,720
ports on otherwise hundred kickboxers

815
00:46:18,749 --> 00:46:24,019
change anything<font color="#E5E5E5"> particularly the IQ</font>

816
00:46:21,720 --> 00:46:28,169
seems like<font color="#E5E5E5"> that would</font><font color="#CCCCCC"> be a</font><font color="#E5E5E5"> nasty case</font>

817
00:46:24,019 --> 00:46:29,758
this<font color="#E5E5E5"> the speed of interfaces doesn't</font>

818
00:46:28,170 --> 00:46:34,339
change anything<font color="#E5E5E5"> it's just</font><font color="#CCCCCC"> the numbers</font>

819
00:46:29,759 --> 00:46:39,420
right<font color="#E5E5E5"> of course if you have</font><font color="#CCCCCC"> high-speed</font>

820
00:46:34,339 --> 00:46:42,450
<font color="#E5E5E5">ports right and for some reason you use</font>

821
00:46:39,420 --> 00:46:46,589
it in<font color="#E5E5E5"> the under and on the lower rate</font>

822
00:46:42,450 --> 00:46:48,749
the buffers<font color="#E5E5E5"> may be bigger right but but</font>

823
00:46:46,589 --> 00:46:50,430
that's that's<font color="#CCCCCC"> really relate if I use the</font>

824
00:46:48,749 --> 00:46:54,720
numbers<font color="#E5E5E5"> like hundred milliseconds like</font>

825
00:46:50,430 --> 00:46:56,519
just example right everything which is

826
00:46:54,720 --> 00:46:59,249
counted<font color="#E5E5E5"> in milliseconds is external</font>

827
00:46:56,519 --> 00:46:59,640
buffer it's in the distributed<font color="#E5E5E5"> system is</font>

828
00:46:59,249 --> 00:47:05,788
like that

829
00:46:59,640 --> 00:47:09,210
<font color="#E5E5E5">so</font><font color="#CCCCCC"> muslins transmission delay would be</font>

830
00:47:05,789 --> 00:47:10,910
longer residency time you mean residency

831
00:47:09,210 --> 00:47:14,640
time would end up being longer<font color="#E5E5E5"> in</font>

832
00:47:10,910 --> 00:47:16,379
packets for these lower<font color="#E5E5E5"> interfaces you</font>

833
00:47:14,640 --> 00:47:20,009
have the residency time has couple of

834
00:47:16,380 --> 00:47:23,789
components<font color="#E5E5E5"> right</font><font color="#CCCCCC"> the queuing delay it's</font>

835
00:47:20,009 --> 00:47:28,049
a one<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> and it's variable one but</font>

836
00:47:23,789 --> 00:47:30,960
the residency time so but if we skip the

837
00:47:28,049 --> 00:47:33,839
buffering<font color="#E5E5E5"> and queuing the rest is the</font>

838
00:47:30,960 --> 00:47:36,869
<font color="#CCCCCC">the serialization</font><font color="#E5E5E5"> time then you have the</font>

839
00:47:33,839 --> 00:47:39,839
lookup time then you<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> let's a</font>

840
00:47:36,869 --> 00:47:42,630
propagation<font color="#E5E5E5"> inside the node which takes</font>

841
00:47:39,839 --> 00:47:46,200
nine nanoseconds<font color="#CCCCCC"> but it's there and then</font>

842
00:47:42,630 --> 00:47:47,670
<font color="#E5E5E5">you have the serialization delay when</font>

843
00:47:46,200 --> 00:47:49,769
<font color="#E5E5E5">they're parallel data has to</font><font color="#CCCCCC"> be</font>

844
00:47:47,670 --> 00:47:52,499
<font color="#E5E5E5">sterilized to the output port</font><font color="#CCCCCC"> but this</font>

845
00:47:49,769 --> 00:47:55,979
is all of them are<font color="#E5E5E5"> fixed for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> given</font>

846
00:47:52,499 --> 00:47:58,230
platform<font color="#CCCCCC"> and for the interfaces is its</font>

847
00:47:55,980 --> 00:48:03,239
nature<font color="#E5E5E5"> it's a physical limitation right</font>

848
00:47:58,230 --> 00:48:06,349
<font color="#E5E5E5">the serialization time is it is just</font><font color="#CCCCCC"> a</font>

849
00:48:03,239 --> 00:48:09,869
function<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the packet size end and</font>

850
00:48:06,349 --> 00:48:11,609
interface speed so there is no impact<font color="#E5E5E5"> on</font>

851
00:48:09,869 --> 00:48:14,960
the queuing and a<font color="#E5E5E5"> queuing behavior we</font>

852
00:48:11,609 --> 00:48:17,420
are<font color="#E5E5E5"> talking on top of it the only thing</font>

853
00:48:14,960 --> 00:48:21,720
from<font color="#E5E5E5"> ready the</font><font color="#CCCCCC"> current architecture</font>

854
00:48:17,420 --> 00:48:22,950
<font color="#E5E5E5">versus residency time the only thing</font><font color="#CCCCCC"> is</font>

855
00:48:21,720 --> 00:48:26,220
that<font color="#E5E5E5"> if you have to</font>

856
00:48:22,950 --> 00:48:28,799
send<font color="#CCCCCC"> a packet from the switching</font><font color="#E5E5E5"> chip to</font>

857
00:48:26,220 --> 00:48:32,339
the<font color="#E5E5E5"> external</font><font color="#CCCCCC"> memory</font><font color="#E5E5E5"> which you have to do</font>

858
00:48:28,800 --> 00:48:35,490
if<font color="#CCCCCC"> we talk about milliseconds</font><font color="#E5E5E5"> right it</font>

859
00:48:32,339 --> 00:48:38,599
takes time<font color="#E5E5E5"> because</font><font color="#CCCCCC"> the memory works on</font>

860
00:48:35,490 --> 00:48:41,540
<font color="#CCCCCC">some speak</font><font color="#E5E5E5"> and then you have to read it</font>

861
00:48:38,599 --> 00:48:44,369
<font color="#CCCCCC">back it may stay in</font><font color="#E5E5E5"> memory or may not</font>

862
00:48:41,540 --> 00:48:45,300
it's it could<font color="#E5E5E5"> be just</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> and read if</font>

863
00:48:44,369 --> 00:48:47,700
the queue is empty

864
00:48:45,300 --> 00:48:50,640
<font color="#E5E5E5">but only that operation takes time and</font>

865
00:48:47,700 --> 00:48:53,129
if you have to do this<font color="#E5E5E5"> twice before</font>

866
00:48:50,640 --> 00:48:55,859
fabric and after fabric is a constant

867
00:48:53,130 --> 00:48:59,130
component to<font color="#E5E5E5"> residence it</font><font color="#CCCCCC"> to do to the</font>

868
00:48:55,859 --> 00:49:01,078
overall latency<font color="#E5E5E5"> how long the packet</font>

869
00:48:59,130 --> 00:49:11,880
stays in the queue<font color="#E5E5E5"> that's a variable</font>

870
00:49:01,079 --> 00:49:14,190
<font color="#E5E5E5">part</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> Karl</font><font color="#CCCCCC"> Clinard he</font><font color="#E5E5E5"> can't come</font><font color="#CCCCCC"> yet so</font>

871
00:49:11,880 --> 00:49:17,490
we talked about<font color="#E5E5E5"> the latency as you</font>

872
00:49:14,190 --> 00:49:21,240
described it you gave it in the abstract

873
00:49:17,490 --> 00:49:24,990
<font color="#E5E5E5">without any impact against the type of</font>

874
00:49:21,240 --> 00:49:27,089
<font color="#E5E5E5">traffic that it is really it gets more</font>

875
00:49:24,990 --> 00:49:29,000
<font color="#E5E5E5">complicated</font><font color="#CCCCCC"> that when you add in QoS and</font>

876
00:49:27,089 --> 00:49:31,259
<font color="#CCCCCC">you say you want to prioritize and</font>

877
00:49:29,000 --> 00:49:34,020
minimize latency for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> particular</font>

878
00:49:31,260 --> 00:49:34,650
traffic<font color="#E5E5E5"> type like gaming when you start</font>

879
00:49:34,020 --> 00:49:38,849
doing<font color="#E5E5E5"> that</font>

880
00:49:34,650 --> 00:49:40,200
is there does the the<font color="#E5E5E5"> in this example</font>

881
00:49:38,849 --> 00:49:44,250
you<font color="#CCCCCC"> should the feel queue is basically</font>

882
00:49:40,200 --> 00:49:46,348
better on that skipping the trade-offs

883
00:49:44,250 --> 00:49:48,329
about power and<font color="#E5E5E5"> cost but in terms of</font>

884
00:49:46,349 --> 00:49:52,319
<font color="#E5E5E5">just speed through the box for the</font>

885
00:49:48,329 --> 00:49:55,680
residency does that still hold up when

886
00:49:52,319 --> 00:50:00,869
you<font color="#E5E5E5"> start bringing in QoS aspects of it</font>

887
00:49:55,680 --> 00:50:03,118
<font color="#CCCCCC">okay I will try us and it that way first</font>

888
00:50:00,869 --> 00:50:05,910
you<font color="#CCCCCC"> have the</font><font color="#E5E5E5"> fixed residency time and</font>

889
00:50:03,119 --> 00:50:07,589
<font color="#CCCCCC">the it</font><font color="#E5E5E5"> doesn't matter what</font><font color="#CCCCCC"> is your Q s</font>

890
00:50:05,910 --> 00:50:09,149
right<font color="#CCCCCC"> if you don't need</font><font color="#E5E5E5"> to write a</font>

891
00:50:07,589 --> 00:50:11,880
<font color="#E5E5E5">packet to</font><font color="#CCCCCC"> the memory it takes some</font>

892
00:50:09,150 --> 00:50:13,650
medicine some microseconds and

893
00:50:11,880 --> 00:50:15,839
regardless<font color="#E5E5E5"> if it's a high priority queue</font>

894
00:50:13,650 --> 00:50:18,329
or<font color="#CCCCCC"> less priority queue saying with the</font>

895
00:50:15,839 --> 00:50:21,509
serialization<font color="#E5E5E5"> doesn't change the only</font>

896
00:50:18,329 --> 00:50:24,210
thing is changing with the<font color="#CCCCCC"> queue s that</font>

897
00:50:21,510 --> 00:50:26,220
<font color="#CCCCCC">your high priority traffic is take it</font>

898
00:50:24,210 --> 00:50:29,520
from memory<font color="#CCCCCC"> earlier so they spent less</font>

899
00:50:26,220 --> 00:50:31,348
time in<font color="#CCCCCC"> a memory</font><font color="#E5E5E5"> right and I by purpose</font>

900
00:50:29,520 --> 00:50:34,170
do not talk about<font color="#E5E5E5"> the queue as I try to</font>

901
00:50:31,349 --> 00:50:35,849
be very<font color="#CCCCCC"> specific to</font><font color="#E5E5E5"> the FF 1 queue or</font>

902
00:50:34,170 --> 00:50:36,840
<font color="#E5E5E5">what's that for traffic only because</font>

903
00:50:35,849 --> 00:50:41,460
it's complex<font color="#E5E5E5"> enough</font>

904
00:50:36,840 --> 00:50:43,650
right so yes in general<font color="#CCCCCC"> terms the qsr</font>

905
00:50:41,460 --> 00:50:48,030
has sense<font color="#E5E5E5"> I not say I didn't say note</font>

906
00:50:43,650 --> 00:50:50,790
<font color="#E5E5E5">but it gives you</font><font color="#CCCCCC"> the latency</font><font color="#E5E5E5"> Delta is on</font>

907
00:50:48,030 --> 00:50:55,830
top of the residency time which is given

908
00:50:50,790 --> 00:50:58,590
<font color="#CCCCCC">anyway and this residency time has these</font>

909
00:50:55,830 --> 00:51:00,290
component<font color="#CCCCCC"> related to the memory read and</font>

910
00:50:58,590 --> 00:51:03,030
<font color="#CCCCCC">writes number of memory reads and writes</font>

911
00:51:00,290 --> 00:51:06,290
<font color="#E5E5E5">and this is one</font><font color="#CCCCCC"> of the difference</font>

912
00:51:03,030 --> 00:51:06,290
between<font color="#CCCCCC"> vo QSC io q</font>

913
00:51:14,120 --> 00:51:23,650
I think no more<font color="#E5E5E5"> questions thank</font><font color="#CCCCCC"> you</font>

914
00:51:24,760 --> 00:51:31,810
please<font color="#E5E5E5"> feel feel the survey</font><font color="#CCCCCC"> I'd like to</font>

915
00:51:28,880 --> 00:51:31,810
see my performance

