1
00:00:00,350 --> 00:00:05,369
<font color="#CCCCCC">alright good afternoon Brian Trammell</font>

2
00:00:03,659 --> 00:00:07,170
I'm with the<font color="#CCCCCC"> network situational</font>

3
00:00:05,370 --> 00:00:08,879
awareness group at cert at the software

4
00:00:07,170 --> 00:00:11,670
engineering Institute at carnegie<font color="#CCCCCC"> mellon</font>

5
00:00:08,880 --> 00:00:13,080
university in pittsburgh very long

6
00:00:11,670 --> 00:00:16,289
prepositional phrase to parse through

7
00:00:13,080 --> 00:00:18,180
their talk today<font color="#E5E5E5"> is going to be on</font>

8
00:00:16,289 --> 00:00:20,010
preparing allocation and assignment data

9
00:00:18,180 --> 00:00:22,529
from the rars for network security

10
00:00:20,010 --> 00:00:27,029
analysis tasks a little bit of

11
00:00:22,529 --> 00:00:29,698
background<font color="#CCCCCC"> we do analysis</font><font color="#E5E5E5"> on various</font>

12
00:00:27,029 --> 00:00:32,399
security<font color="#CCCCCC"> instant</font><font color="#E5E5E5"> data from various</font>

13
00:00:29,699 --> 00:00:35,910
intrusion detection systems and traffic

14
00:00:32,399 --> 00:00:39,300
analysis<font color="#E5E5E5"> data</font><font color="#CCCCCC"> or flows all the actors in</font>

15
00:00:35,910 --> 00:00:41,790
this<font color="#E5E5E5"> data</font><font color="#CCCCCC"> expressed by IP address which</font>

16
00:00:39,300 --> 00:00:43,468
<font color="#E5E5E5">you know that's how this is expressed</font>

17
00:00:41,790 --> 00:00:45,480
but we'd<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to do analysis</font>

18
00:00:43,469 --> 00:00:47,820
operations at higher levels of

19
00:00:45,480 --> 00:00:52,699
abstraction for<font color="#E5E5E5"> example by location by</font>

20
00:00:47,820 --> 00:00:54,989
organization and by network so<font color="#CCCCCC"> we use</font>

21
00:00:52,699 --> 00:00:58,739
allocation and assignment data from the

22
00:00:54,989 --> 00:00:59,849
rirs to bridge the<font color="#CCCCCC"> gap between</font><font color="#E5E5E5"> the IP</font>

23
00:00:58,739 --> 00:01:01,709
addresses in the<font color="#E5E5E5"> instant traffic</font>

24
00:00:59,850 --> 00:01:05,640
analysis data and the levels<font color="#CCCCCC"> at which</font>

25
00:01:01,710 --> 00:01:07,350
we'd like to do analysis so we set out

26
00:01:05,640 --> 00:01:11,340
to<font color="#E5E5E5"> build the tool we figure be pretty</font>

27
00:01:07,350 --> 00:01:13,589
quick nice nice<font color="#CCCCCC"> little perl script the</font>

28
00:01:11,340 --> 00:01:15,689
<font color="#E5E5E5">requirements were to first group</font>

29
00:01:13,590 --> 00:01:17,970
addresses into cider blocks that being

30
00:01:15,689 --> 00:01:20,820
<font color="#E5E5E5">the contiguous range of addresses that</font>

31
00:01:17,970 --> 00:01:23,729
can be expressed with a single site or

32
00:01:20,820 --> 00:01:25,080
prefix for each of these blocks we

33
00:01:23,729 --> 00:01:27,990
wanted to provide<font color="#CCCCCC"> a network name a</font>

34
00:01:25,080 --> 00:01:30,929
country code<font color="#E5E5E5"> tech and administrative</font>

35
00:01:27,990 --> 00:01:33,000
point of contact handles and we wanted

36
00:01:30,930 --> 00:01:35,570
to group these into a tree an allocation

37
00:01:33,000 --> 00:01:40,710
and assignment tree of the entire

38
00:01:35,570 --> 00:01:42,648
worldwide ipv4 address space the reason

39
00:01:40,710 --> 00:01:46,079
to do<font color="#CCCCCC"> this is this allows us to</font>

40
00:01:42,649 --> 00:01:48,090
associate an address in our input data

41
00:01:46,079 --> 00:01:49,439
with a network<font color="#E5E5E5"> at any level of</font>

42
00:01:48,090 --> 00:01:51,360
allocation for assignment from the

43
00:01:49,439 --> 00:01:54,869
<font color="#E5E5E5">top-level allocation all the way down</font><font color="#CCCCCC"> to</font>

44
00:01:51,360 --> 00:01:56,909
<font color="#CCCCCC">the lowest sub assignment yes you'll</font>

45
00:01:54,869 --> 00:01:59,159
notice we're talking about ipv4 here we

46
00:01:56,909 --> 00:02:01,500
don't<font color="#E5E5E5"> get any data about ipv6 networks</font>

47
00:01:59,159 --> 00:02:05,579
yet so there was no requirement<font color="#CCCCCC"> to</font>

48
00:02:01,500 --> 00:02:07,829
handle<font color="#E5E5E5"> that also we want our collection</font>

49
00:02:05,579 --> 00:02:09,780
system to run periodically<font color="#E5E5E5"> because it's</font>

50
00:02:07,829 --> 00:02:11,370
used for batch analysis we require very

51
00:02:09,780 --> 00:02:13,530
little operational support essentially a

52
00:02:11,370 --> 00:02:16,800
cron job that one person can be

53
00:02:13,530 --> 00:02:18,480
in their spare time so for example using

54
00:02:16,800 --> 00:02:21,330
a ripe<font color="#E5E5E5"> real-time near real-time database</font>

55
00:02:18,480 --> 00:02:25,799
mirror to get ripe objects in would be

56
00:02:21,330 --> 00:02:29,220
overkill so we go out and we get bulk

57
00:02:25,800 --> 00:02:32,760
who is data from three of the four hours

58
00:02:29,220 --> 00:02:37,290
at<font color="#E5E5E5"> this point from Erin we have an</font>

59
00:02:32,760 --> 00:02:40,019
agreement with them and the ripe and

60
00:02:37,290 --> 00:02:43,410
APNIC inet<font color="#CCCCCC"> nom databases are publicly</font>

61
00:02:40,020 --> 00:02:45,300
available you'll notice<font color="#E5E5E5"> lack Nick is</font>

62
00:02:43,410 --> 00:02:48,420
missing from this list as of the time

63
00:02:45,300 --> 00:02:50,640
that I put this presentation together we

64
00:02:48,420 --> 00:02:53,100
were still working<font color="#E5E5E5"> on</font><font color="#CCCCCC"> getting a bulk</font>

65
00:02:50,640 --> 00:02:54,630
data request set up with them I've<font color="#E5E5E5"> been</font>

66
00:02:53,100 --> 00:02:55,829
informed<font color="#CCCCCC"> that that's gone through so in</font>

67
00:02:54,630 --> 00:02:58,470
the next couple of weeks we<font color="#E5E5E5"> will have</font>

68
00:02:55,830 --> 00:03:00,750
data<font color="#E5E5E5"> from all four hours when you</font><font color="#CCCCCC"> do see</font>

69
00:02:58,470 --> 00:03:02,819
numbers in<font color="#E5E5E5"> this presentation they refer</font>

70
00:03:00,750 --> 00:03:06,330
only to the three<font color="#E5E5E5"> rars for which we have</font>

71
00:03:02,819 --> 00:03:07,738
data right now so as of May<font color="#CCCCCC"> 5th when</font>

72
00:03:06,330 --> 00:03:10,530
this was put together there were a

73
00:03:07,739 --> 00:03:12,420
little over<font color="#CCCCCC"> two million ranges which</font><font color="#E5E5E5"> map</font>

74
00:03:10,530 --> 00:03:16,709
<font color="#E5E5E5">to a little over 2.1 million cider</font>

75
00:03:12,420 --> 00:03:20,040
blocks we assumed in all of these ranges

76
00:03:16,709 --> 00:03:22,769
that one the allocation tree is strictly

77
00:03:20,040 --> 00:03:24,870
a tree there are no overlaps and<font color="#CCCCCC"> ranges</font>

78
00:03:22,769 --> 00:03:27,120
such that you can't determine which

79
00:03:24,870 --> 00:03:31,110
range is higher in the hierarchy than

80
00:03:27,120 --> 00:03:32,850
another that is not true in all cases we

81
00:03:31,110 --> 00:03:35,370
made the assumption that the registries

82
00:03:32,850 --> 00:03:39,540
agree on every allocation that's mostly

83
00:03:35,370 --> 00:03:41,489
true but it's not true in all cases we

84
00:03:39,540 --> 00:03:44,040
assumed<font color="#E5E5E5"> that all allocations and</font>

85
00:03:41,489 --> 00:03:45,810
assignments were done in terms of single

86
00:03:44,040 --> 00:03:48,420
cider blocks which is true in most cases

87
00:03:45,810 --> 00:03:50,609
<font color="#E5E5E5">but not all and we assume</font><font color="#CCCCCC"> that all</font>

88
00:03:48,420 --> 00:03:51,899
supplementary information particularly

89
00:03:50,609 --> 00:03:54,170
we're interested in modification dates

90
00:03:51,900 --> 00:03:57,030
because we're looking at using that to

91
00:03:54,170 --> 00:03:58,380
to disambiguate some of these things we

92
00:03:57,030 --> 00:03:59,940
assume<font color="#CCCCCC"> that those modification dates are</font>

93
00:03:58,380 --> 00:04:02,760
stored<font color="#E5E5E5"> in a universally uniform format</font>

94
00:03:59,940 --> 00:04:06,780
which they mostly are but sometimes<font color="#CCCCCC"> are</font>

95
00:04:02,760 --> 00:04:09,929
not so the<font color="#CCCCCC"> toolchain</font><font color="#E5E5E5"> that we put</font>

96
00:04:06,780 --> 00:04:12,630
together which processes this allocation

97
00:04:09,930 --> 00:04:14,579
data performs a set of transformation

98
00:04:12,630 --> 00:04:17,250
first takes modification dates puts them

99
00:04:14,579 --> 00:04:19,049
<font color="#E5E5E5">all into a common format eliminates</font>

100
00:04:17,250 --> 00:04:21,779
redirect records for example<font color="#E5E5E5"> aaron has</font>

101
00:04:19,048 --> 00:04:23,700
records that point to space that is

102
00:04:21,779 --> 00:04:25,320
allocated<font color="#E5E5E5"> by the other rirs so that when</font>

103
00:04:23,700 --> 00:04:27,479
you go<font color="#E5E5E5"> and make an errand who is</font>

104
00:04:25,320 --> 00:04:29,190
requested either reader

105
00:04:27,480 --> 00:04:31,410
<font color="#E5E5E5">there are who is or gives you</font><font color="#CCCCCC"> a nice</font>

106
00:04:29,190 --> 00:04:35,520
helpful little pointer that tells you go

107
00:04:31,410 --> 00:04:37,470
ask right for example we resolved

108
00:04:35,520 --> 00:04:40,340
outstanding conflicts between regional

109
00:04:37,470 --> 00:04:43,380
registries<font color="#CCCCCC"> we'll see those in a second</font>

110
00:04:40,340 --> 00:04:46,169
we take the allocations and put them

111
00:04:43,380 --> 00:04:47,850
into a single tree structure there are

112
00:04:46,170 --> 00:04:49,260
some anomalies that we detected that

113
00:04:47,850 --> 00:04:52,170
<font color="#E5E5E5">I'll be talking about a moment in in</font>

114
00:04:49,260 --> 00:04:54,330
doing this the two interesting classes

115
00:04:52,170 --> 00:04:58,020
of these are erosions which are off by

116
00:04:54,330 --> 00:05:01,469
one errors at the ends of each range and

117
00:04:58,020 --> 00:05:03,150
inversions which is our points in the

118
00:05:01,470 --> 00:05:04,980
tree where the tree or hierarchy is

119
00:05:03,150 --> 00:05:08,669
violated and there's an ambiguity as to

120
00:05:04,980 --> 00:05:09,720
which range is higher or lower it turns

121
00:05:08,670 --> 00:05:13,350
out that a<font color="#CCCCCC"> lot of these are actually</font>

122
00:05:09,720 --> 00:05:14,940
erosions and then after we've done<font color="#E5E5E5"> all</font>

123
00:05:13,350 --> 00:05:19,170
this we've stacked things into a tree we

124
00:05:14,940 --> 00:05:23,310
split the allocation ranges into insider

125
00:05:19,170 --> 00:05:25,200
blocks so the first step is<font color="#CCCCCC"> to get the</font>

126
00:05:23,310 --> 00:05:27,180
<font color="#CCCCCC">information from the Aaron and write</font>

127
00:05:25,200 --> 00:05:29,700
formats which are different object

128
00:05:27,180 --> 00:05:31,290
formats into a common format at this

129
00:05:29,700 --> 00:05:36,270
<font color="#E5E5E5">point we normalize the modification</font>

130
00:05:31,290 --> 00:05:38,100
dates most of the oddities here were

131
00:05:36,270 --> 00:05:40,109
some dates in assignments where years

132
00:05:38,100 --> 00:05:43,280
were given as 2 digit years<font color="#E5E5E5"> to 48 years</font>

133
00:05:40,110 --> 00:05:46,680
those are pretty easy to disambiguate

134
00:05:43,280 --> 00:05:48,869
there a couple<font color="#E5E5E5"> of places we noticed the</font>

135
00:05:46,680 --> 00:05:51,720
date format was year day month as

136
00:05:48,870 --> 00:05:53,910
opposed to year month day we were only

137
00:05:51,720 --> 00:05:58,140
able to fix these where that was

138
00:05:53,910 --> 00:06:00,510
unambiguous so for example may<font color="#E5E5E5"> 9th if</font>

139
00:05:58,140 --> 00:06:03,690
that happened<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be stored</font><font color="#E5E5E5"> in this</font>

140
00:06:00,510 --> 00:06:06,060
format we couldn't fix it and there were

141
00:06:03,690 --> 00:06:07,530
<font color="#E5E5E5">also for instances where there was a</font>

142
00:06:06,060 --> 00:06:11,940
date beyond the end<font color="#E5E5E5"> of the month for</font>

143
00:06:07,530 --> 00:06:15,659
<font color="#E5E5E5">example April 31st I have no</font><font color="#CCCCCC"> idea what's</font>

144
00:06:11,940 --> 00:06:17,820
going on<font color="#E5E5E5"> there then we go through strip</font>

145
00:06:15,660 --> 00:06:21,390
out the redirect records because they do

146
00:06:17,820 --> 00:06:23,219
not represent actual networks that were

147
00:06:21,390 --> 00:06:26,659
interested in and they will<font color="#E5E5E5"> be covered</font>

148
00:06:23,220 --> 00:06:30,750
when we merge data in from the other

149
00:06:26,660 --> 00:06:33,270
rirs so each stage of merging merges

150
00:06:30,750 --> 00:06:35,370
from two registries into a single tree

151
00:06:33,270 --> 00:06:38,640
we do this<font color="#E5E5E5"> in multiple stages in order</font>

152
00:06:35,370 --> 00:06:40,289
to build a unified allocation tree of

153
00:06:38,640 --> 00:06:43,438
the world I

154
00:06:40,289 --> 00:06:46,529
p for space at this point we use an

155
00:06:43,439 --> 00:06:49,259
algorithm<font color="#E5E5E5"> to resolve conflicts between</font>

156
00:06:46,529 --> 00:06:52,020
the registries and most of these are

157
00:06:49,259 --> 00:06:58,499
<font color="#E5E5E5">cases where both Aaron and either ripe</font>

158
00:06:52,020 --> 00:07:01,139
or APNIC have records for<font color="#CCCCCC"> the same range</font>

159
00:06:58,499 --> 00:07:02,309
in that case we<font color="#E5E5E5"> go with the registry</font>

160
00:07:01,139 --> 00:07:06,479
that's affiliated with the country

161
00:07:02,309 --> 00:07:08,550
associated with<font color="#CCCCCC"> that range in three</font>

162
00:07:06,479 --> 00:07:10,258
cases that doesn't work so for example I

163
00:07:08,550 --> 00:07:13,139
think<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> one where Aaron says that</font>

164
00:07:10,259 --> 00:07:14,969
a<font color="#E5E5E5"> a net range is allocated in France and</font>

165
00:07:13,139 --> 00:07:18,839
ripe says its allocated<font color="#E5E5E5"> the United</font>

166
00:07:14,969 --> 00:07:23,219
States so we very arbitrarily chose to

167
00:07:18,839 --> 00:07:25,889
go with the the oldest registry so Aaron

168
00:07:23,219 --> 00:07:27,330
wins in that case there is no real

169
00:07:25,889 --> 00:07:29,699
reason behind choosing this other<font color="#CCCCCC"> than</font>

170
00:07:27,330 --> 00:07:35,818
to keep from having a<font color="#E5E5E5"> human intervention</font>

171
00:07:29,699 --> 00:07:41,219
in this process so<font color="#E5E5E5"> after we've got a</font>

172
00:07:35,819 --> 00:07:42,629
<font color="#E5E5E5">single unified list of of ranges we</font>

173
00:07:41,219 --> 00:07:46,498
correct the erosions i'll be showing an

174
00:07:42,629 --> 00:07:50,219
example<font color="#E5E5E5"> that in a second then we stack</font>

175
00:07:46,499 --> 00:07:53,879
the ranges into a tree so we build the

176
00:07:50,219 --> 00:07:55,498
tree out in memory we take a look<font color="#E5E5E5"> at the</font>

177
00:07:53,879 --> 00:07:58,559
depth of each range in the tree the

178
00:07:55,499 --> 00:07:59,939
reason this is important is later on

179
00:07:58,559 --> 00:08:01,499
we're<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> split them into cider</font>

180
00:07:59,939 --> 00:08:03,990
blocks now if you happen to<font color="#E5E5E5"> have an</font>

181
00:08:01,499 --> 00:08:05,550
allocation that<font color="#CCCCCC"> is four blocks</font><font color="#E5E5E5"> wide and</font>

182
00:08:03,990 --> 00:08:10,949
it underneath it has an allocation that

183
00:08:05,550 --> 00:08:13,110
<font color="#E5E5E5">is two blocks wide let's say what a / 24</font>

184
00:08:10,949 --> 00:08:14,849
/ 23 and / 24 and then underneath that

185
00:08:13,110 --> 00:08:20,209
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> something that has</font><font color="#CCCCCC"> 2 / 24 s on</font>

186
00:08:14,849 --> 00:08:22,830
it that first last 24 is once<font color="#E5E5E5"> we do the</font>

187
00:08:20,209 --> 00:08:24,240
block splitting into cider blocks we

188
00:08:22,830 --> 00:08:26,669
won't be able<font color="#E5E5E5"> to tell which of those /</font>

189
00:08:24,240 --> 00:08:29,580
24 s was originally higher in the

190
00:08:26,669 --> 00:08:31,948
allocation hierarchy we also detect

191
00:08:29,580 --> 00:08:36,240
inversions at this point we'll be seeing

192
00:08:31,949 --> 00:08:37,800
examples of those in a second and once

193
00:08:36,240 --> 00:08:41,459
we've resolved all of these anomalies

194
00:08:37,799 --> 00:08:42,899
each range record is replaced with one

195
00:08:41,458 --> 00:08:45,449
range for cider block<font color="#E5E5E5"> that's covered by</font>

196
00:08:42,899 --> 00:08:46,860
the record turns out<font color="#E5E5E5"> that ninety-nine</font>

197
00:08:45,449 --> 00:08:48,990
point nine eight percent of allocation

198
00:08:46,860 --> 00:08:50,279
ranges are actually in terms of cider

199
00:08:48,990 --> 00:08:51,750
blocks so the<font color="#E5E5E5"> growth and number of</font>

200
00:08:50,279 --> 00:08:53,880
<font color="#CCCCCC">records is relatively</font><font color="#E5E5E5"> small as we saw</font>

201
00:08:51,750 --> 00:08:57,690
its 2.06 to 2.1

202
00:08:53,880 --> 00:08:59,760
two<font color="#E5E5E5"> million so the first of the two</font>

203
00:08:57,690 --> 00:09:03,510
types<font color="#E5E5E5"> of anomalies that we found in the</font>

204
00:08:59,760 --> 00:09:05,160
ranges are erosion these can be<font color="#E5E5E5"> further</font>

205
00:09:03,510 --> 00:09:10,380
classified as inner or outer erosions

206
00:09:05,160 --> 00:09:12,480
and inner erosion is where a net block

207
00:09:10,380 --> 00:09:15,510
is missing either its network<font color="#E5E5E5"> or</font>

208
00:09:12,480 --> 00:09:21,000
broadcast address either<font color="#CCCCCC"> or both so for</font>

209
00:09:15,510 --> 00:09:24,420
<font color="#E5E5E5">example 10 to 30 / 24 shows up as 10 to</font>

210
00:09:21,000 --> 00:09:25,740
<font color="#CCCCCC">3 1 through 10 23</font><font color="#E5E5E5"> to 54 this is a</font>

211
00:09:24,420 --> 00:09:28,860
problem<font color="#CCCCCC"> because we like splitting things</font>

212
00:09:25,740 --> 00:09:31,860
into cider box 10 to 30 through 10<font color="#CCCCCC"> 2 3</font>

213
00:09:28,860 --> 00:09:40,410
255 splits into one block and 10<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> 3 1</font>

214
00:09:31,860 --> 00:09:41,970
through 10 23 254 splits into 14 so we'd

215
00:09:40,410 --> 00:09:43,980
like to correct that to make our our

216
00:09:41,970 --> 00:09:46,020
block oriented view of the world a

217
00:09:43,980 --> 00:09:47,220
<font color="#E5E5E5">little cleaner also we make the</font>

218
00:09:46,020 --> 00:09:48,390
assumption that since<font color="#E5E5E5"> ninety-nine point</font>

219
00:09:47,220 --> 00:09:49,740
<font color="#E5E5E5">nine eight percent of ranges are</font>

220
00:09:48,390 --> 00:09:51,870
allocated in terms of cider blocks

221
00:09:49,740 --> 00:09:55,500
something looks very much like a cider

222
00:09:51,870 --> 00:09:58,770
block then it probably is at the same

223
00:09:55,500 --> 00:10:00,750
<font color="#E5E5E5">time we see outer erosions which is</font>

224
00:09:58,770 --> 00:10:02,939
where the last address in a range is

225
00:10:00,750 --> 00:10:05,400
actually expressed as the<font color="#E5E5E5"> first address</font>

226
00:10:02,940 --> 00:10:07,260
of the next range so it's treating the

227
00:10:05,400 --> 00:10:09,079
end of range which is supposed to be

228
00:10:07,260 --> 00:10:11,460
treated<font color="#E5E5E5"> as inclusive is not inclusive</font>

229
00:10:09,080 --> 00:10:18,180
this causes<font color="#CCCCCC"> an inversion when we try to</font>

230
00:10:11,460 --> 00:10:19,610
stack the tree together because the tree

231
00:10:18,180 --> 00:10:21,959
stocking algorithm cannot determine

232
00:10:19,610 --> 00:10:23,640
whether the first range of the second

233
00:10:21,960 --> 00:10:25,770
range which share an address at<font color="#E5E5E5"> this</font>

234
00:10:23,640 --> 00:10:30,780
point which of those two<font color="#E5E5E5"> is supposed to</font>

235
00:10:25,770 --> 00:10:35,300
be on top here's a picture to illustrate

236
00:10:30,780 --> 00:10:39,600
and enter erosion you'll see a single

237
00:10:35,300 --> 00:10:42,359
<font color="#E5E5E5">Network we will call a 2 / 24 if its</font>

238
00:10:39,600 --> 00:10:46,350
eroded it could split into as many as 14

239
00:10:42,360 --> 00:10:49,350
blocks when we attempt<font color="#E5E5E5"> to split it so we</font>

240
00:10:46,350 --> 00:10:54,000
fix it by nudging the edges out to match

241
00:10:49,350 --> 00:10:56,040
the block boundaries<font color="#CCCCCC"> in outer erosion</font>

242
00:10:54,000 --> 00:10:57,900
here's how this can cause trouble with

243
00:10:56,040 --> 00:11:01,530
tree stacking when you have to for

244
00:10:57,900 --> 00:11:02,819
example / 25 s<font color="#E5E5E5"> next to each other they</font>

245
00:11:01,530 --> 00:11:04,620
obviously<font color="#E5E5E5"> are next to each other in the</font>

246
00:11:02,820 --> 00:11:06,290
hierarchy and there is a a parent

247
00:11:04,620 --> 00:11:09,620
allocation above that

248
00:11:06,290 --> 00:11:13,130
however if one<font color="#E5E5E5"> of them has like so here</font>

249
00:11:09,620 --> 00:11:15,050
<font color="#E5E5E5">B is expressed as zero through dot 128</font>

250
00:11:13,130 --> 00:11:19,220
and sees expresses that 128 through a

251
00:11:15,050 --> 00:11:21,680
255 the inverter each other they share

252
00:11:19,220 --> 00:11:27,019
an address the end of the ranges overlap

253
00:11:21,680 --> 00:11:31,790
and that breaks the tree hierarchy so

254
00:11:27,019 --> 00:11:33,319
out of those 2.1 million blocks that we

255
00:11:31,790 --> 00:11:38,000
found<font color="#CCCCCC"> neat from the data for these three</font>

256
00:11:33,319 --> 00:11:39,469
<font color="#CCCCCC">are ours we found 6400 erosions most of</font>

257
00:11:38,000 --> 00:11:41,329
those are in<font color="#CCCCCC"> our oceans the ones that</font>

258
00:11:39,470 --> 00:11:42,680
are<font color="#E5E5E5"> outer erosions the vast majority of</font>

259
00:11:41,329 --> 00:11:44,839
those<font color="#CCCCCC"> are at the end of the range for</font>

260
00:11:42,680 --> 00:11:52,810
example as I<font color="#E5E5E5"> said the end of range is</font>

261
00:11:44,839 --> 00:11:57,259
not inclusive we see a<font color="#CCCCCC"> 4 and 57</font>

262
00:11:52,810 --> 00:11:59,479
instances of ranges that are shifted by

263
00:11:57,259 --> 00:12:05,060
one in either direction so for example

264
00:11:59,480 --> 00:12:08,810
as / 24 as X dot<font color="#E5E5E5"> white at Z 1 through X</font>

265
00:12:05,060 --> 00:12:10,069
Y Z plus 1 dot<font color="#CCCCCC"> 0 I'm not exactly sure</font>

266
00:12:08,810 --> 00:12:13,779
what's going on there I have to take a

267
00:12:10,069 --> 00:12:19,209
deeper look<font color="#E5E5E5"> at what's causing that</font>

268
00:12:13,779 --> 00:12:21,410
almost all of these on / 24 s or smaller

269
00:12:19,209 --> 00:12:22,819
the erosion detection and correction

270
00:12:21,410 --> 00:12:24,649
algorithm does not work on anything

271
00:12:22,819 --> 00:12:33,050
smaller in / 28 the reasoning behind

272
00:12:24,649 --> 00:12:35,870
this is so for example a / 29 is<font color="#CCCCCC"> 8</font>

273
00:12:33,050 --> 00:12:37,729
addresses wide so when you're correcting

274
00:12:35,870 --> 00:12:39,529
erosions you're correcting them either

275
00:12:37,730 --> 00:12:42,500
correcting that range to either a size

276
00:12:39,529 --> 00:12:43,910
of six seven eight nine or ten because

277
00:12:42,500 --> 00:12:47,750
<font color="#E5E5E5">you could</font><font color="#CCCCCC"> be adding or subtracting one</font>

278
00:12:43,910 --> 00:12:50,300
on either end the thinking here is that

279
00:12:47,750 --> 00:12:53,470
you're far more likely to false positive

280
00:12:50,300 --> 00:12:56,149
on correcting and erosion and actually

281
00:12:53,470 --> 00:12:57,230
adjusting<font color="#E5E5E5"> an end point when the end</font>

282
00:12:56,149 --> 00:12:59,779
<font color="#E5E5E5">point doesn't really need to be adjusted</font>

283
00:12:57,230 --> 00:13:01,130
on something smaller in a / 28 although

284
00:12:59,779 --> 00:13:04,430
we'll see that that assumption is not

285
00:13:01,130 --> 00:13:08,300
quite<font color="#CCCCCC"> right later on when we look at</font>

286
00:13:04,430 --> 00:13:09,888
range inversions so an inverted range is

287
00:13:08,300 --> 00:13:12,649
one that doesn't fit cleanly into the

288
00:13:09,889 --> 00:13:14,660
tree as we saw here this is an example

289
00:13:12,649 --> 00:13:17,139
<font color="#CCCCCC">of an inversion caused by an outer</font>

290
00:13:14,660 --> 00:13:17,139
erosion

291
00:13:17,290 --> 00:13:20,680
these may indicate errors and allocation

292
00:13:19,240 --> 00:13:22,420
ranges they may indicate that there are

293
00:13:20,680 --> 00:13:23,888
stale allocation or assignment records

294
00:13:22,420 --> 00:13:28,870
that have not been pulled<font color="#E5E5E5"> out so for</font>

295
00:13:23,889 --> 00:13:31,690
example if you have two ranges that have

296
00:13:28,870 --> 00:13:33,519
been assigned those go away another

297
00:13:31,690 --> 00:13:36,790
range comes in and takes all of the

298
00:13:33,519 --> 00:13:39,880
first range and half<font color="#E5E5E5"> of the second range</font>

299
00:13:36,790 --> 00:13:41,860
if those two haven't been removed from

300
00:13:39,880 --> 00:13:45,730
<font color="#E5E5E5">the database then it's ambiguous as to</font>

301
00:13:41,860 --> 00:13:47,319
which of those is correct so yes it<font color="#CCCCCC"> is</font>

302
00:13:45,730 --> 00:13:49,660
difficult if it's even possible to know

303
00:13:47,319 --> 00:13:50,889
which range an inversion is correct need

304
00:13:49,660 --> 00:13:54,339
<font color="#CCCCCC">to do a little bit more</font><font color="#E5E5E5"> work here to</font>

305
00:13:50,889 --> 00:13:56,019
<font color="#E5E5E5">figure out how to fix that up the</font>

306
00:13:54,339 --> 00:13:58,360
current procedure in order to continue

307
00:13:56,019 --> 00:14:00,970
on without human intervention just drops

308
00:13:58,360 --> 00:14:08,019
the<font color="#E5E5E5"> second range as</font><font color="#CCCCCC"> it's sorted here's a</font>

309
00:14:00,970 --> 00:14:09,220
picture of an inversion this is this

310
00:14:08,019 --> 00:14:11,940
rain fence a little contrived you

311
00:14:09,220 --> 00:14:16,300
wouldn't see this much sub assignment

312
00:14:11,940 --> 00:14:18,759
typically but let's play along there's a

313
00:14:16,300 --> 00:14:21,279
/ 24 that's been assigned down<font color="#CCCCCC"> in 22 /</font>

314
00:14:18,759 --> 00:14:23,139
25 one of which is assigned<font color="#E5E5E5"> in 22 / 26</font>

315
00:14:21,279 --> 00:14:30,760
is one of which has part<font color="#E5E5E5"> of it reassign</font>

316
00:14:23,139 --> 00:14:33,790
is this last 27 if for example e there

317
00:14:30,760 --> 00:14:37,149
is allocate a legate is a range of two

318
00:14:33,790 --> 00:14:40,469
blocks / 26<font color="#E5E5E5"> and / 27 and</font><font color="#CCCCCC"> F is the same</font><font color="#E5E5E5"> /</font>

319
00:14:37,149 --> 00:14:42,760
26 they share a range of addresses and

320
00:14:40,470 --> 00:14:45,519
it's ambiguous as to which one of those

321
00:14:42,760 --> 00:14:48,120
is correct so there<font color="#CCCCCC"> are seven hundred</font>

322
00:14:45,519 --> 00:14:52,449
<font color="#CCCCCC">forty five of these detected in the data</font>

323
00:14:48,120 --> 00:14:54,339
one case at least<font color="#E5E5E5"> one case I found was a</font>

324
00:14:52,449 --> 00:14:58,180
type of what looks like a typographical

325
00:14:54,339 --> 00:15:01,689
error in the range so<font color="#CCCCCC"> we have a</font><font color="#E5E5E5"> couple</font>

326
00:14:58,180 --> 00:15:04,810
<font color="#E5E5E5">of / 29 s next to each other but the</font>

327
00:15:01,689 --> 00:15:07,029
third octet is off by one in either the

328
00:15:04,810 --> 00:15:09,310
<font color="#CCCCCC">beginning of range or end of range so</font>

329
00:15:07,029 --> 00:15:12,550
when these are put on top of each<font color="#E5E5E5"> other</font>

330
00:15:09,310 --> 00:15:14,439
there's a significant overlap now you

331
00:15:12,550 --> 00:15:16,180
could look<font color="#E5E5E5"> at this and say yeah these</font>

332
00:15:14,439 --> 00:15:17,469
are both probably / 29 s but you can't

333
00:15:16,180 --> 00:15:18,550
tell whether it's the beginning of the

334
00:15:17,470 --> 00:15:20,500
range at the<font color="#E5E5E5"> end of the range</font><font color="#CCCCCC"> that has</font>

335
00:15:18,550 --> 00:15:23,649
the<font color="#E5E5E5"> typo in it without a little bit more</font>

336
00:15:20,500 --> 00:15:27,830
context there are a lot that are also

337
00:15:23,649 --> 00:15:29,840
just<font color="#E5E5E5"> a simple overlap again</font>

338
00:15:27,830 --> 00:15:31,280
a couple of ranges may share six or

339
00:15:29,840 --> 00:15:35,390
seven addresses and it's unclear as to

340
00:15:31,280 --> 00:15:37,850
which of those is correct there also are

341
00:15:35,390 --> 00:15:39,830
out erosions<font color="#E5E5E5"> I've looked at in the data</font>

342
00:15:37,850 --> 00:15:41,330
that<font color="#E5E5E5"> are utter</font><font color="#CCCCCC"> Rodin's on tiny blocks</font>

343
00:15:39,830 --> 00:15:44,840
either / 29 s I think there are<font color="#CCCCCC"> a couple</font>

344
00:15:41,330 --> 00:15:45,680
of / 30 s that have outer erosions on

345
00:15:44,840 --> 00:15:47,450
them<font color="#E5E5E5"> and they're not fixed by the</font>

346
00:15:45,680 --> 00:15:51,349
erosion process because when you go in

347
00:15:47,450 --> 00:15:52,760
and you adjust the the parameters on the

348
00:15:51,350 --> 00:15:54,890
erosion detection and correction

349
00:15:52,760 --> 00:15:57,860
algorithm you end<font color="#E5E5E5"> up</font><font color="#CCCCCC"> with a whole lot of</font>

350
00:15:54,890 --> 00:16:04,970
false<font color="#CCCCCC"> positives particularly</font><font color="#E5E5E5"> I think in</font>

351
00:15:57,860 --> 00:16:06,260
spaces that are pre cider allocation so

352
00:16:04,970 --> 00:16:08,210
you'll notice<font color="#E5E5E5"> here that there are no</font>

353
00:16:06,260 --> 00:16:09,890
counts by type right now range

354
00:16:08,210 --> 00:16:11,300
inversions are categorized by printing

355
00:16:09,890 --> 00:16:13,240
them all out<font color="#CCCCCC"> and taking a look</font><font color="#E5E5E5"> at them i</font>

356
00:16:11,300 --> 00:16:16,579
don't<font color="#CCCCCC"> have algorithms quite yet for</font>

357
00:16:13,240 --> 00:16:20,470
distinguishing these types of inversions

358
00:16:16,580 --> 00:16:27,230
from each other so the<font color="#E5E5E5"> toolchain does</font>

359
00:16:20,470 --> 00:16:29,210
drop an anomaly log at each stage this

360
00:16:27,230 --> 00:16:30,740
was used first for tuning of<font color="#E5E5E5"> the anomaly</font>

361
00:16:29,210 --> 00:16:32,710
detection and correction techniques for

362
00:16:30,740 --> 00:16:35,270
generating the data in<font color="#E5E5E5"> this presentation</font>

363
00:16:32,710 --> 00:16:36,680
and also could<font color="#CCCCCC"> be used could be</font>

364
00:16:35,270 --> 00:16:41,030
transformed<font color="#CCCCCC"> into a useful format for</font>

365
00:16:36,680 --> 00:16:42,620
reporting these anomalies to<font color="#CCCCCC"> the</font>

366
00:16:41,030 --> 00:16:45,260
registries<font color="#CCCCCC"> for possibly correcting that</font>

367
00:16:42,620 --> 00:16:47,470
data although there's more work<font color="#E5E5E5"> that</font>

368
00:16:45,260 --> 00:16:51,410
needs to be<font color="#E5E5E5"> done before that's possible</font>

369
00:16:47,470 --> 00:16:52,910
so future work inversions need a way to

370
00:16:51,410 --> 00:16:59,959
<font color="#CCCCCC">categorize them need a way to correct</font>

371
00:16:52,910 --> 00:17:02,089
<font color="#E5E5E5">them in an unambiguous way it seems that</font>

372
00:16:59,960 --> 00:17:03,860
<font color="#E5E5E5">it would be possible</font><font color="#CCCCCC"> to use context to</font>

373
00:17:02,090 --> 00:17:08,620
look at the ranges that are allocated

374
00:17:03,860 --> 00:17:12,500
around a range<font color="#E5E5E5"> that we suspect as eroded</font>

375
00:17:08,619 --> 00:17:15,530
in order to minimize the detection false

376
00:17:12,500 --> 00:17:16,880
detection of erosions and use other

377
00:17:15,530 --> 00:17:19,760
types of contact so that<font color="#E5E5E5"> we can actually</font>

378
00:17:16,880 --> 00:17:22,970
<font color="#E5E5E5">look at very small erosions fix them and</font>

379
00:17:19,760 --> 00:17:27,290
thereby resolve some some of the

380
00:17:22,970 --> 00:17:30,290
inversions<font color="#E5E5E5"> in the data erosion detection</font>

381
00:17:27,290 --> 00:17:32,629
on multiple block ranges of right now we

382
00:17:30,290 --> 00:17:35,379
<font color="#E5E5E5">only look at ranges that are a single</font>

383
00:17:32,630 --> 00:17:35,380
<font color="#CCCCCC">site or block wide</font>

384
00:17:35,400 --> 00:17:41,710
looking at the data for inversions there

385
00:17:37,660 --> 00:17:44,560
are several at least ranges that are say

386
00:17:41,710 --> 00:17:47,770
maybe a slash well I don't<font color="#CCCCCC"> even I'm</font><font color="#E5E5E5"> not</font>

387
00:17:44,560 --> 00:17:49,409
<font color="#E5E5E5">even</font><font color="#CCCCCC"> going to guess here but there are</font>

388
00:17:47,770 --> 00:17:51,610
some<font color="#E5E5E5"> that are multiple block ranges that</font>

389
00:17:49,410 --> 00:17:55,920
we'd like to be able<font color="#E5E5E5"> to detect a Trojans</font>

390
00:17:51,610 --> 00:18:00,159
on and also working on submitting

391
00:17:55,920 --> 00:18:01,390
anomaly data to the RRS so if you'd like

392
00:18:00,160 --> 00:18:03,190
<font color="#E5E5E5">more information if</font><font color="#CCCCCC"> you like to take a</font>

393
00:18:01,390 --> 00:18:04,510
look at<font color="#CCCCCC"> the software which is</font>

394
00:18:03,190 --> 00:18:05,890
<font color="#E5E5E5">essentially a collection of</font><font color="#CCCCCC"> Perl scripts</font>

395
00:18:04,510 --> 00:18:10,680
driven by a<font color="#CCCCCC"> make file you can take a</font>

396
00:18:05,890 --> 00:18:17,890
look at<font color="#E5E5E5"> air sourceforge.net / a decree</font>

397
00:18:10,680 --> 00:18:20,050
that's so any questions<font color="#E5E5E5"> I Brian Thomas</font>

398
00:18:17,890 --> 00:18:21,310
no fixed address three questions

399
00:18:20,050 --> 00:18:23,440
actually I thought<font color="#E5E5E5"> this isn't great I</font>

400
00:18:21,310 --> 00:18:27,250
struggle<font color="#CCCCCC"> with some of the stuff myself</font>

401
00:18:23,440 --> 00:18:28,690
the first question what is your sense of

402
00:18:27,250 --> 00:18:30,370
<font color="#E5E5E5">the semantics of the use of the country</font>

403
00:18:28,690 --> 00:18:31,660
coatings by the<font color="#CCCCCC"> registries if you have</font>

404
00:18:30,370 --> 00:18:34,540
any sense of the meaning behind them

405
00:18:31,660 --> 00:18:37,560
second question how confident are<font color="#CCCCCC"> you of</font>

406
00:18:34,540 --> 00:18:39,580
the current status<font color="#E5E5E5"> of the actually the</font>

407
00:18:37,560 --> 00:18:41,590
<font color="#CCCCCC">contact data and other data that's in</font>

408
00:18:39,580 --> 00:18:43,300
the registries and third question have

409
00:18:41,590 --> 00:18:45,129
you had a chance to map your

410
00:18:43,300 --> 00:18:46,570
registration data<font color="#E5E5E5"> against which actually</font>

411
00:18:45,130 --> 00:18:50,650
currently<font color="#CCCCCC"> in the routing table now and</font>

412
00:18:46,570 --> 00:18:53,830
how many<font color="#CCCCCC"> ASNs are not covered because</font>

413
00:18:50,650 --> 00:18:55,510
<font color="#E5E5E5">I've had some observations yes okay what</font>

414
00:18:53,830 --> 00:18:57,610
was<font color="#CCCCCC"> the first question again countries</font>

415
00:18:55,510 --> 00:18:58,960
<font color="#CCCCCC">met accept-encoding</font><font color="#E5E5E5"> by the registry the</font>

416
00:18:57,610 --> 00:19:00,610
semantics of the country coding are

417
00:18:58,960 --> 00:19:04,960
essentially<font color="#CCCCCC"> the mailing address of the</font>

418
00:19:00,610 --> 00:19:08,250
organization<font color="#CCCCCC"> that manages the network or</font>

419
00:19:04,960 --> 00:19:10,990
the mailing address of the admin handle

420
00:19:08,250 --> 00:19:13,570
the admin handle is I believe

421
00:19:10,990 --> 00:19:19,030
universally assumed to be<font color="#CCCCCC"> on-site</font><font color="#E5E5E5"> at the</font>

422
00:19:13,570 --> 00:19:21,060
network but yeah we are we're aware that

423
00:19:19,030 --> 00:19:24,520
that's not you know a<font color="#E5E5E5"> hundred percent a</font>

424
00:19:21,060 --> 00:19:26,050
<font color="#E5E5E5">okay for geolocation but it is in some</font>

425
00:19:24,520 --> 00:19:28,150
cases better than looking just at the

426
00:19:26,050 --> 00:19:31,300
allocation<font color="#CCCCCC"> maps because in a lot of</font>

427
00:19:28,150 --> 00:19:32,740
cases assignments<font color="#E5E5E5"> are gone across</font>

428
00:19:31,300 --> 00:19:36,340
international boundaries like for

429
00:19:32,740 --> 00:19:38,320
example a lot of European ISPs have

430
00:19:36,340 --> 00:19:40,030
African customers and there are a lot of

431
00:19:38,320 --> 00:19:41,350
African countries that don't show up the

432
00:19:40,030 --> 00:19:43,389
allocation maps that do have addresses

433
00:19:41,350 --> 00:19:46,719
assigned to them so this is better than

434
00:19:43,390 --> 00:19:47,970
the<font color="#CCCCCC"> allocation maps but not as good as</font>

435
00:19:46,720 --> 00:19:49,560
it could be

436
00:19:47,970 --> 00:19:52,140
okay second question so you can question

437
00:19:49,560 --> 00:19:54,360
the timeliness and accuracy of the

438
00:19:52,140 --> 00:19:56,850
contact information anything<font color="#E5E5E5"> right REO</font>

439
00:19:54,360 --> 00:20:01,560
Davis we're sort of cheating here we

440
00:19:56,850 --> 00:20:03,060
<font color="#E5E5E5">don't really care</font><font color="#CCCCCC"> at this point we are</font>

441
00:20:01,560 --> 00:20:06,960
using the contact we're using this

442
00:20:03,060 --> 00:20:09,120
primarily to aggregate a instant traffic

443
00:20:06,960 --> 00:20:11,970
reporting data not for<font color="#E5E5E5"> example to</font>

444
00:20:09,120 --> 00:20:17,129
actually get down to an abuse handle

445
00:20:11,970 --> 00:20:19,860
that we could contact so as long as<font color="#E5E5E5"> for</font>

446
00:20:17,130 --> 00:20:22,550
a given network or a given set of

447
00:20:19,860 --> 00:20:25,500
networks the the admin handles are

448
00:20:22,550 --> 00:20:27,060
reasonably<font color="#E5E5E5"> up-to-date and we can</font>

449
00:20:25,500 --> 00:20:28,500
aggregate by those that's<font color="#E5E5E5"> good enough</font>

450
00:20:27,060 --> 00:20:32,340
for our purposes we<font color="#CCCCCC"> are aware that</font>

451
00:20:28,500 --> 00:20:35,460
<font color="#CCCCCC">that's a an area for concern third</font>

452
00:20:32,340 --> 00:20:37,230
question yes<font color="#CCCCCC"> I comparing what you what</font>

453
00:20:35,460 --> 00:20:39,840
your results<font color="#E5E5E5"> are against actually what's</font>

454
00:20:37,230 --> 00:20:41,160
in the<font color="#E5E5E5"> routing table yeah we'd like to</font>

455
00:20:39,840 --> 00:20:44,580
do this we just<font color="#E5E5E5"> haven't gotten around to</font>

456
00:20:41,160 --> 00:20:46,800
to taking<font color="#CCCCCC"> bgp feeds and taking a</font><font color="#E5E5E5"> look at</font>

457
00:20:44,580 --> 00:20:48,929
you will find<font color="#E5E5E5"> that there may be as many</font>

458
00:20:46,800 --> 00:20:51,030
as 2,000 autonomous systems that are

459
00:20:48,930 --> 00:20:54,360
routed which are not covered by the

460
00:20:51,030 --> 00:20:58,920
registry data excellent good<font color="#E5E5E5"> to</font><font color="#CCCCCC"> know</font>

461
00:20:54,360 --> 00:21:05,870
thank you<font color="#E5E5E5"> thank you very</font><font color="#CCCCCC"> much many</font>

462
00:20:58,920 --> 00:21:05,870
others all right all right<font color="#E5E5E5"> thank you</font>

