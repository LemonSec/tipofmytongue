1
00:00:13,340 --> 00:00:17,660
see my hackers filling in the room and

2
00:00:15,960 --> 00:00:20,820
yes there's quite<font color="#E5E5E5"> a little few of them</font>

3
00:00:17,660 --> 00:00:24,448
hi I'm<font color="#E5E5E5"> Chris</font><font color="#CCCCCC"> Wood field with an</font><font color="#E5E5E5"> ANA</font>

4
00:00:20,820 --> 00:00:28,859
program<font color="#E5E5E5"> committee so Sunday we had our</font>

5
00:00:24,449 --> 00:00:34,140
now regular<font color="#CCCCCC"> Nanog hackathon</font><font color="#E5E5E5"> and this is</font>

6
00:00:28,859 --> 00:00:37,590
the<font color="#E5E5E5"> sixth</font><font color="#CCCCCC"> one that we've run over about</font>

7
00:00:34,140 --> 00:00:40,590
three years and and they keep getting

8
00:00:37,590 --> 00:00:44,340
<font color="#CCCCCC">better each time one thing that I've</font>

9
00:00:40,590 --> 00:00:48,200
noticed is that<font color="#E5E5E5"> you know the the</font><font color="#CCCCCC"> people</font>

10
00:00:44,340 --> 00:00:50,820
<font color="#CCCCCC">that we bring in we get good crowds and</font>

11
00:00:48,200 --> 00:00:54,739
I think we had about<font color="#E5E5E5"> 50 plus people this</font>

12
00:00:50,820 --> 00:00:57,090
time<font color="#E5E5E5"> which is which</font><font color="#CCCCCC"> is really excellent</font>

13
00:00:54,739 --> 00:01:02,730
<font color="#CCCCCC">the fact that we're able to introduce</font>

14
00:00:57,090 --> 00:01:04,799
new<font color="#E5E5E5"> technologies to people who in</font><font color="#CCCCCC"> many</font>

15
00:01:02,730 --> 00:01:07,530
cases have<font color="#CCCCCC"> never encountered</font><font color="#E5E5E5"> any</font>

16
00:01:04,799 --> 00:01:11,880
specific technology before<font color="#CCCCCC"> just</font><font color="#E5E5E5"> so just</font>

17
00:01:07,530 --> 00:01:13,650
to back<font color="#CCCCCC"> up a bit we tend to we do</font>

18
00:01:11,880 --> 00:01:15,420
different themes<font color="#E5E5E5"> for each hackathon we</font>

19
00:01:13,650 --> 00:01:17,700
pick a technology or<font color="#CCCCCC"> a</font><font color="#E5E5E5"> solution or a</font>

20
00:01:15,420 --> 00:01:19,500
<font color="#CCCCCC">specific challenge</font><font color="#E5E5E5"> and then present that</font>

21
00:01:17,700 --> 00:01:23,250
to the teams which then<font color="#CCCCCC"> organize on</font>

22
00:01:19,500 --> 00:01:25,740
solutions<font color="#CCCCCC"> many times these are things</font>

23
00:01:23,250 --> 00:01:27,110
that as I said<font color="#E5E5E5"> very</font><font color="#CCCCCC"> few people have seen</font>

24
00:01:25,740 --> 00:01:31,619
<font color="#CCCCCC">before</font>

25
00:01:27,110 --> 00:01:34,140
<font color="#CCCCCC">we've gone from</font><font color="#E5E5E5"> host based BGP demons to</font>

26
00:01:31,619 --> 00:01:37,740
source of truth config template

27
00:01:34,140 --> 00:01:40,920
generators<font color="#E5E5E5"> security</font><font color="#CCCCCC"> Akal policy</font>

28
00:01:37,740 --> 00:01:42,600
automation<font color="#CCCCCC"> this time we did segment</font>

29
00:01:40,920 --> 00:01:45,659
routing which is a new<font color="#CCCCCC"> and exciting</font>

30
00:01:42,600 --> 00:01:48,030
<font color="#CCCCCC">technology that yes a</font><font color="#E5E5E5"> number of people</font>

31
00:01:45,659 --> 00:01:51,270
<font color="#CCCCCC">have</font><font color="#E5E5E5"> worked with but many many more have</font>

32
00:01:48,030 --> 00:01:54,840
not<font color="#E5E5E5"> so the fact that that</font><font color="#CCCCCC"> we were able</font>

33
00:01:51,270 --> 00:01:59,880
to<font color="#CCCCCC"> introduce that to</font><font color="#E5E5E5"> a large group</font><font color="#CCCCCC"> and</font>

34
00:01:54,840 --> 00:02:02,790
then within a day<font color="#E5E5E5"> have not have not</font><font color="#CCCCCC"> one</font>

35
00:01:59,880 --> 00:02:05,640
<font color="#E5E5E5">but a large</font><font color="#CCCCCC"> number of different</font>

36
00:02:02,790 --> 00:02:08,610
implementations<font color="#E5E5E5"> of automated segment</font>

37
00:02:05,640 --> 00:02:09,460
routing<font color="#E5E5E5"> update steering just amazing to</font>

38
00:02:08,610 --> 00:02:12,640
me

39
00:02:09,460 --> 00:02:15,610
<font color="#E5E5E5">you know you know the the people</font><font color="#CCCCCC"> that</font>

40
00:02:12,640 --> 00:02:16,750
<font color="#E5E5E5">come in and</font><font color="#CCCCCC"> participate they're</font>

41
00:02:15,610 --> 00:02:19,660
interested<font color="#CCCCCC"> there</font>

42
00:02:16,750 --> 00:02:22,660
they're smart<font color="#E5E5E5"> they collaborate well and</font>

43
00:02:19,660 --> 00:02:25,299
they have a lot<font color="#CCCCCC"> of fun doing</font><font color="#E5E5E5"> it and</font><font color="#CCCCCC"> I'm</font>

44
00:02:22,660 --> 00:02:28,120
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> thank all the participants</font><font color="#CCCCCC"> and</font>

45
00:02:25,300 --> 00:02:31,390
<font color="#E5E5E5">I hope we hope that we see you</font><font color="#CCCCCC"> at the</font>

46
00:02:28,120 --> 00:02:33,730
next<font color="#E5E5E5"> one</font><font color="#CCCCCC"> at this point</font><font color="#E5E5E5"> let</font><font color="#CCCCCC"> me introduce</font>

47
00:02:31,390 --> 00:02:36,369
<font color="#E5E5E5">tip who with Oracle</font><font color="#CCCCCC"> one of our sponsors</font>

48
00:02:33,730 --> 00:02:39,820
<font color="#CCCCCC">and I also want to</font><font color="#E5E5E5"> thank our lab sponsor</font>

49
00:02:36,370 --> 00:02:41,950
<font color="#CCCCCC">to sudo</font><font color="#E5E5E5"> who who helped us out with the</font>

50
00:02:39,820 --> 00:02:44,380
lab<font color="#CCCCCC"> open the virtual</font><font color="#E5E5E5"> labs that the teens</font>

51
00:02:41,950 --> 00:02:47,299
were working on<font color="#CCCCCC"> so</font><font color="#E5E5E5"> without further ado</font>

52
00:02:44,380 --> 00:02:54,839
here is dip<font color="#E5E5E5"> and thank you</font>

53
00:02:47,300 --> 00:02:54,839
[Applause]

54
00:03:03,750 --> 00:03:08,140
can you guys hear<font color="#CCCCCC"> me</font>

55
00:03:05,319 --> 00:03:10,510
I guess fine<font color="#E5E5E5"> okay all right as Chris</font>

56
00:03:08,140 --> 00:03:14,349
<font color="#E5E5E5">mentioned my name</font><font color="#CCCCCC"> is Deb saying and I'm</font>

57
00:03:10,510 --> 00:03:16,720
a<font color="#CCCCCC"> network engineer Oracle cloud I would</font>

58
00:03:14,349 --> 00:03:19,988
start<font color="#E5E5E5"> by saying</font><font color="#CCCCCC"> that I'm</font><font color="#E5E5E5"> really proud of</font>

59
00:03:16,720 --> 00:03:22,390
<font color="#E5E5E5">Oracle sponsoring this hackathon as well</font>

60
00:03:19,989 --> 00:03:24,849
as organizing<font color="#E5E5E5"> it</font><font color="#CCCCCC"> I would also like to</font>

61
00:03:22,390 --> 00:03:29,200
say thanks<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Nano program committee</font>

62
00:03:24,849 --> 00:03:31,599
for letting us to do so and the second

63
00:03:29,200 --> 00:03:33,730
thing<font color="#CCCCCC"> I wanna say is thank you to all</font><font color="#E5E5E5"> my</font>

64
00:03:31,599 --> 00:03:35,980
colleagues<font color="#E5E5E5"> who helped me</font><font color="#CCCCCC"> in organizing</font>

65
00:03:33,730 --> 00:03:37,899
this<font color="#CCCCCC"> hackathon</font><font color="#E5E5E5"> and last but not least</font>

66
00:03:35,980 --> 00:03:40,179
all the hackathon<font color="#CCCCCC"> whores who decided to</font>

67
00:03:37,900 --> 00:03:42,030
<font color="#CCCCCC">show up on Sunday</font><font color="#E5E5E5"> in a weird</font><font color="#CCCCCC"> way to</font>

68
00:03:40,180 --> 00:03:44,290
spend<font color="#E5E5E5"> time</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> us rather than you know</font>

69
00:03:42,030 --> 00:03:48,609
<font color="#E5E5E5">enjoying this beautiful</font><font color="#CCCCCC"> Vancouver so</font>

70
00:03:44,290 --> 00:03:51,370
thank you<font color="#E5E5E5"> for that so a little bit about</font>

71
00:03:48,609 --> 00:03:53,819
<font color="#E5E5E5">the hack itself if you</font><font color="#CCCCCC"> look at the hack</font>

72
00:03:51,370 --> 00:03:56,980
hack itself has three particular domains

73
00:03:53,819 --> 00:03:58,958
<font color="#E5E5E5">one aspect was programming itself</font><font color="#CCCCCC"> right</font>

74
00:03:56,980 --> 00:04:01,899
you need to<font color="#E5E5E5"> code something the other</font>

75
00:03:58,959 --> 00:04:03,220
aspect was around algorithms to start

76
00:04:01,900 --> 00:04:05,319
thinking about<font color="#E5E5E5"> algorithmic way of</font>

77
00:04:03,220 --> 00:04:07,389
thinking<font color="#CCCCCC"> or the network and the third</font>

78
00:04:05,319 --> 00:04:08,798
aspect<font color="#E5E5E5"> was the protocols</font><font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> think</font>

79
00:04:07,389 --> 00:04:10,720
about<font color="#E5E5E5"> the Venn diagram we have three</font>

80
00:04:08,799 --> 00:04:13,959
domains<font color="#E5E5E5"> it was basically an intersection</font>

81
00:04:10,720 --> 00:04:17,108
of all<font color="#E5E5E5"> the three domains we had around</font>

82
00:04:13,959 --> 00:04:20,349
the<font color="#CCCCCC"> 50-plus</font><font color="#E5E5E5"> hackathon</font><font color="#CCCCCC"> routes</font><font color="#E5E5E5"> which was a</font>

83
00:04:17,108 --> 00:04:22,659
good<font color="#E5E5E5"> attendance for hackathon this was</font>

84
00:04:20,349 --> 00:04:25,719
the first time we had a remote

85
00:04:22,660 --> 00:04:28,330
<font color="#E5E5E5">participation which is also a big first</font>

86
00:04:25,720 --> 00:04:32,110
<font color="#CCCCCC">half for</font><font color="#E5E5E5"> the hackathon program itself</font>

87
00:04:28,330 --> 00:04:34,870
and<font color="#E5E5E5"> the hack we started around like</font>

88
00:04:32,110 --> 00:04:36,340
<font color="#CCCCCC">10:30</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> teep once the teen was given</font>

89
00:04:34,870 --> 00:04:39,310
the hacks<font color="#CCCCCC"> they started working</font><font color="#E5E5E5"> from</font>

90
00:04:36,340 --> 00:04:44,590
10:30 to<font color="#E5E5E5"> 6:00 a.m.</font><font color="#CCCCCC"> 6 p.m. sorry</font><font color="#E5E5E5"> and as</font>

91
00:04:39,310 --> 00:04:48,099
you can see<font color="#E5E5E5"> it's a it's a long day a</font>

92
00:04:44,590 --> 00:04:50,679
little bit about the hack itself<font color="#E5E5E5"> more</font>

93
00:04:48,099 --> 00:04:53,889
<font color="#E5E5E5">into this so the hacker was divided</font><font color="#CCCCCC"> into</font>

94
00:04:50,680 --> 00:04:55,570
<font color="#CCCCCC">three sub problems problem number one</font>

95
00:04:53,889 --> 00:04:57,370
was that<font color="#CCCCCC"> you have been given a network</font>

96
00:04:55,570 --> 00:04:59,919
and what you have to<font color="#CCCCCC"> do is you need to</font>

97
00:04:57,370 --> 00:05:02,229
<font color="#CCCCCC">extract topology information create a</font>

98
00:04:59,919 --> 00:05:05,710
network model represent all the things

99
00:05:02,229 --> 00:05:07,690
which<font color="#CCCCCC"> you need to to solve your</font><font color="#E5E5E5"> second</font>

100
00:05:05,710 --> 00:05:08,979
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> basically we need</font><font color="#E5E5E5"> to extract all</font>

101
00:05:07,690 --> 00:05:10,510
the information<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that your model</font>

102
00:05:08,979 --> 00:05:12,669
represents the right attributes<font color="#CCCCCC"> that you</font>

103
00:05:10,510 --> 00:05:15,159
need to solve<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> sec</font>

104
00:05:12,670 --> 00:05:17,110
<font color="#E5E5E5">the third problem itself and the second</font>

105
00:05:15,160 --> 00:05:18,910
part of the<font color="#E5E5E5"> problem was once you have</font>

106
00:05:17,110 --> 00:05:22,030
<font color="#E5E5E5">created this</font><font color="#CCCCCC"> network model what you</font><font color="#E5E5E5"> have</font>

107
00:05:18,910 --> 00:05:24,460
to do is that you<font color="#CCCCCC"> know you have been</font>

108
00:05:22,030 --> 00:05:27,520
given<font color="#E5E5E5"> certain T constrains and the ask</font>

109
00:05:24,460 --> 00:05:29,020
was basically<font color="#E5E5E5"> okay go and you know you</font>

110
00:05:27,520 --> 00:05:31,090
know solve these<font color="#CCCCCC"> T constraints for</font>

111
00:05:29,020 --> 00:05:32,770
example<font color="#CCCCCC"> could be between</font><font color="#E5E5E5"> point A and</font>

112
00:05:31,090 --> 00:05:35,500
point<font color="#CCCCCC"> B could you figure out</font><font color="#E5E5E5"> two</font>

113
00:05:32,770 --> 00:05:37,060
disjoint<font color="#E5E5E5"> paths right</font><font color="#CCCCCC"> or could</font><font color="#E5E5E5"> between</font>

114
00:05:35,500 --> 00:05:39,310
point<font color="#E5E5E5"> A and point we have</font><font color="#CCCCCC"> been given</font>

115
00:05:37,060 --> 00:05:41,260
certain constraint like you need you

116
00:05:39,310 --> 00:05:43,870
have this<font color="#E5E5E5"> amount of bandwidth available</font>

117
00:05:41,260 --> 00:05:46,030
<font color="#E5E5E5">otherwise the path itself is not valid</font>

118
00:05:43,870 --> 00:05:48,280
<font color="#CCCCCC">so</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> were some examples</font><font color="#E5E5E5"> on the T</font>

119
00:05:46,030 --> 00:05:49,960
constraints and the last but<font color="#CCCCCC"> not least</font>

120
00:05:48,280 --> 00:05:51,280
once you have computed the path what you

121
00:05:49,960 --> 00:05:56,500
have to do is go ahead<font color="#E5E5E5"> and</font><font color="#CCCCCC"> program</font><font color="#E5E5E5"> in</font>

122
00:05:51,280 --> 00:06:00,010
network itself so that<font color="#CCCCCC"> that path before</font>

123
00:05:56,500 --> 00:06:01,510
<font color="#E5E5E5">we really delve into the hack itself</font>

124
00:06:00,010 --> 00:06:04,300
like if the team started walking<font color="#CCCCCC"> around</font>

125
00:06:01,510 --> 00:06:06,400
like<font color="#E5E5E5"> 10:30 but before that an</font><font color="#CCCCCC"> hour we</font>

126
00:06:04,300 --> 00:06:08,620
try to spend some time<font color="#CCCCCC"> into covering the</font>

127
00:06:06,400 --> 00:06:11,440
background which we needed to cover the

128
00:06:08,620 --> 00:06:13,180
<font color="#E5E5E5">hack itself so like for instance we</font>

129
00:06:11,440 --> 00:06:14,830
started with a problem<font color="#E5E5E5"> then we</font><font color="#CCCCCC"> spend</font>

130
00:06:13,180 --> 00:06:16,960
<font color="#E5E5E5">some time with some</font><font color="#CCCCCC"> of the graph theory</font>

131
00:06:14,830 --> 00:06:18,520
which you<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> have so that you</font><font color="#E5E5E5"> can</font>

132
00:06:16,960 --> 00:06:20,200
solve<font color="#E5E5E5"> these problems then we covered</font>

133
00:06:18,520 --> 00:06:23,229
some aspects<font color="#E5E5E5"> of the network</font><font color="#CCCCCC"> flow theory</font>

134
00:06:20,200 --> 00:06:25,000
we handle it I tried<font color="#E5E5E5"> to show some of the</font>

135
00:06:23,230 --> 00:06:27,310
linear<font color="#E5E5E5"> programming aspects as</font><font color="#CCCCCC"> well and</font>

136
00:06:25,000 --> 00:06:32,320
then covered some of<font color="#CCCCCC"> the protocol</font>

137
00:06:27,310 --> 00:06:34,120
tidbits for like BGP and<font color="#E5E5E5"> segment routing</font>

138
00:06:32,320 --> 00:06:36,520
which you need<font color="#E5E5E5"> to cover the hack so that</font>

139
00:06:34,120 --> 00:06:41,890
was the first<font color="#E5E5E5"> hour of tutorial which we</font>

140
00:06:36,520 --> 00:06:44,890
covered<font color="#CCCCCC"> okay we had around nine teams</font>

141
00:06:41,890 --> 00:06:46,900
<font color="#E5E5E5">after</font><font color="#CCCCCC"> the we had around total nine teams</font>

142
00:06:44,890 --> 00:06:50,940
<font color="#CCCCCC">and each of the team itself has around</font>

143
00:06:46,900 --> 00:06:53,289
<font color="#E5E5E5">like five or six participants</font><font color="#CCCCCC"> in that so</font>

144
00:06:50,940 --> 00:06:57,430
<font color="#E5E5E5">it was around</font><font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> sis</font><font color="#E5E5E5"> comes</font>

145
00:06:53,290 --> 00:06:59,590
around like<font color="#E5E5E5"> 50</font><font color="#CCCCCC"> these are you know</font><font color="#E5E5E5"> the</font>

146
00:06:57,430 --> 00:07:03,010
pictures from some of the<font color="#CCCCCC"> team's</font><font color="#E5E5E5"> various</font>

147
00:06:59,590 --> 00:07:05,770
teams which I just<font color="#E5E5E5"> showed it to you once</font>

148
00:07:03,010 --> 00:07:09,099
the tutorial itself was done<font color="#E5E5E5"> and the</font>

149
00:07:05,770 --> 00:07:10,599
team started really working<font color="#CCCCCC"> on it I if</font>

150
00:07:09,100 --> 00:07:13,420
what I<font color="#CCCCCC"> noticed was you know there is</font>

151
00:07:10,600 --> 00:07:16,420
some really good<font color="#CCCCCC"> questions</font><font color="#E5E5E5"> and which</font>

152
00:07:13,420 --> 00:07:19,150
people were asking and one thing<font color="#E5E5E5"> I would</font>

153
00:07:16,420 --> 00:07:20,980
say<font color="#CCCCCC"> that you know in the amount of the</font>

154
00:07:19,150 --> 00:07:22,539
<font color="#E5E5E5">problems which I presented one of the</font>

155
00:07:20,980 --> 00:07:25,030
problem itself was a multi commodity

156
00:07:22,540 --> 00:07:26,230
<font color="#E5E5E5">network flow problem and I was thinking</font>

157
00:07:25,030 --> 00:07:28,960
<font color="#CCCCCC">it may be too</font><font color="#E5E5E5"> much</font>

158
00:07:26,230 --> 00:07:30,490
maybe you know<font color="#E5E5E5"> for the hack itself maybe</font>

159
00:07:28,960 --> 00:07:32,830
I should take<font color="#CCCCCC"> it out</font><font color="#E5E5E5"> but eventually I</font>

160
00:07:30,490 --> 00:07:34,360
<font color="#E5E5E5">decided to have it there and the people</font>

161
00:07:32,830 --> 00:07:35,650
at around<font color="#E5E5E5"> like three or four</font><font color="#CCCCCC"> o'clock</font>

162
00:07:34,360 --> 00:07:37,420
they were saying<font color="#E5E5E5"> oh we are done with the</font>

163
00:07:35,650 --> 00:07:38,919
rest of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> task</font><font color="#CCCCCC"> tell me how can</font><font color="#E5E5E5"> I solve</font>

164
00:07:37,420 --> 00:07:40,960
<font color="#E5E5E5">this multi</font><font color="#CCCCCC"> quality networking</font><font color="#E5E5E5"> problem</font>

165
00:07:38,920 --> 00:07:46,360
slow I<font color="#E5E5E5"> was like oh that's</font><font color="#CCCCCC"> really good</font>

166
00:07:40,960 --> 00:07:48,010
<font color="#CCCCCC">I was amazed with that</font><font color="#E5E5E5"> it was overall</font>

167
00:07:46,360 --> 00:07:50,800
generally a<font color="#E5E5E5"> good experience for</font><font color="#CCCCCC"> all of</font>

168
00:07:48,010 --> 00:07:52,480
<font color="#E5E5E5">us we had different background of people</font>

169
00:07:50,800 --> 00:07:55,510
in the hack some people had<font color="#CCCCCC"> actually</font>

170
00:07:52,480 --> 00:07:57,460
very strong<font color="#E5E5E5"> development</font><font color="#CCCCCC"> background</font><font color="#E5E5E5"> some</font>

171
00:07:55,510 --> 00:08:00,039
people have no development<font color="#CCCCCC"> background at</font>

172
00:07:57,460 --> 00:08:02,020
all but they all actually<font color="#E5E5E5"> learned a lot</font>

173
00:08:00,040 --> 00:08:04,630
from<font color="#E5E5E5"> the higher or the</font><font color="#CCCCCC"> Hackett's</font><font color="#E5E5E5"> also</font>

174
00:08:02,020 --> 00:08:06,729
and one of my goal itself here was<font color="#E5E5E5"> not</font>

175
00:08:04,630 --> 00:08:09,760
necessarily to go and you know like when

176
00:08:06,730 --> 00:08:11,800
<font color="#E5E5E5">the hack itself but was to create enough</font>

177
00:08:09,760 --> 00:08:13,630
interest that once the hackathon itself

178
00:08:11,800 --> 00:08:14,980
is<font color="#E5E5E5"> over you go back and start</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> to</font>

179
00:08:13,630 --> 00:08:17,110
this<font color="#E5E5E5"> problem how do I really solve that</font>

180
00:08:14,980 --> 00:08:19,690
<font color="#E5E5E5">right and that's that's to me</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> real win</font>

181
00:08:17,110 --> 00:08:21,220
for<font color="#E5E5E5"> the hackathon itself that the people</font>

182
00:08:19,690 --> 00:08:23,560
go back<font color="#CCCCCC"> and have really interests and</font>

183
00:08:21,220 --> 00:08:29,020
<font color="#CCCCCC">they do spend</font><font color="#E5E5E5"> some more time to you know</font>

184
00:08:23,560 --> 00:08:31,900
<font color="#CCCCCC">to understand</font><font color="#E5E5E5"> the subject itself</font><font color="#CCCCCC"> once</font>

185
00:08:29,020 --> 00:08:34,000
the all the teams finish their<font color="#CCCCCC"> hack</font>

186
00:08:31,900 --> 00:08:35,978
every team was<font color="#CCCCCC"> given an</font><font color="#E5E5E5"> opportunity to</font>

187
00:08:34,000 --> 00:08:38,710
<font color="#E5E5E5">represent</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> hacked</font><font color="#CCCCCC"> so it was like two</font>

188
00:08:35,979 --> 00:08:40,270
<font color="#CCCCCC">or three</font><font color="#E5E5E5"> minutes everyone</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> spend</font>

189
00:08:38,710 --> 00:08:43,360
the time so how they<font color="#CCCCCC"> approached this</font>

190
00:08:40,270 --> 00:08:46,210
problem<font color="#E5E5E5"> and what we did was afterwards</font>

191
00:08:43,360 --> 00:08:48,730
there was<font color="#E5E5E5"> a voting done for each of the</font>

192
00:08:46,210 --> 00:08:51,820
hacks<font color="#E5E5E5"> and these are the top three teams</font>

193
00:08:48,730 --> 00:08:53,620
who won the who were these<font color="#CCCCCC"> are</font><font color="#E5E5E5"> the top</font>

194
00:08:51,820 --> 00:08:56,470
<font color="#E5E5E5">three teams who were put in the</font><font color="#CCCCCC"> highest</font>

195
00:08:53,620 --> 00:09:00,720
<font color="#E5E5E5">and with that said I would</font><font color="#CCCCCC"> like to</font>

196
00:08:56,470 --> 00:09:00,720
invite<font color="#E5E5E5"> cat5e hurricane on the stage</font>

197
00:09:19,290 --> 00:09:24,300
hi we are kept by the hurricane<font color="#E5E5E5"> my name</font>

198
00:09:22,440 --> 00:09:27,870
is Ben<font color="#CCCCCC"> Anderson this is</font><font color="#E5E5E5"> Tom sotloff and</font>

199
00:09:24,300 --> 00:09:29,399
<font color="#E5E5E5">Siham</font><font color="#CCCCCC"> shop so our product overview took</font>

200
00:09:27,870 --> 00:09:31,079
into account a couple technologies that

201
00:09:29,399 --> 00:09:33,120
actually<font color="#CCCCCC"> weren't</font><font color="#E5E5E5"> in the description of</font>

202
00:09:31,079 --> 00:09:36,300
the the hackathon<font color="#E5E5E5"> so we used napalm</font>

203
00:09:33,120 --> 00:09:38,310
as the driver to interact with<font color="#CCCCCC"> these</font>

204
00:09:36,300 --> 00:09:41,310
devices<font color="#E5E5E5"> what that does is it abstracts</font>

205
00:09:38,310 --> 00:09:42,959
away<font color="#CCCCCC"> the actual</font><font color="#E5E5E5"> transport layer and</font>

206
00:09:41,310 --> 00:09:44,369
<font color="#E5E5E5">interacted with devices returning</font>

207
00:09:42,959 --> 00:09:47,130
<font color="#E5E5E5">accommodate a set between various</font>

208
00:09:44,370 --> 00:09:49,649
platforms<font color="#CCCCCC"> we also use network</font><font color="#E5E5E5"> acts just</font>

209
00:09:47,130 --> 00:09:51,300
<font color="#CCCCCC">like many other</font><font color="#E5E5E5"> teams to do the path</font>

210
00:09:49,649 --> 00:09:52,589
calculations<font color="#E5E5E5"> the only difference there</font>

211
00:09:51,300 --> 00:09:54,750
was that<font color="#E5E5E5"> we actually dynamically</font>

212
00:09:52,589 --> 00:09:59,040
supplied<font color="#E5E5E5"> weight based information to</font>

213
00:09:54,750 --> 00:10:01,740
<font color="#E5E5E5">network X we also used BGP l lu for</font>

214
00:09:59,040 --> 00:10:04,170
southbound<font color="#E5E5E5"> sr via</font><font color="#CCCCCC"> EXA bgp and then our</font>

215
00:10:01,740 --> 00:10:05,730
controller which was kind of a<font color="#E5E5E5"> took an</font>

216
00:10:04,170 --> 00:10:08,819
<font color="#E5E5E5">account a couple of these technologies</font>

217
00:10:05,730 --> 00:10:10,500
<font color="#CCCCCC">and that's</font><font color="#E5E5E5"> what we produced so this is</font>

218
00:10:08,819 --> 00:10:12,329
the sample topology for anybody<font color="#E5E5E5"> that was</font>

219
00:10:10,500 --> 00:10:15,389
curious so we were primarily<font color="#E5E5E5"> interacting</font>

220
00:10:12,329 --> 00:10:19,290
with<font color="#CCCCCC"> vmx three and</font><font color="#E5E5E5"> that's what we would</font>

221
00:10:15,389 --> 00:10:20,519
<font color="#E5E5E5">would program with our controller and so</font>

222
00:10:19,290 --> 00:10:21,860
we took we did<font color="#E5E5E5"> take a little bit of a</font>

223
00:10:20,519 --> 00:10:24,990
different<font color="#E5E5E5"> approach rather than just</font>

224
00:10:21,860 --> 00:10:26,970
<font color="#E5E5E5">solving the the three or four problem</font>

225
00:10:24,990 --> 00:10:28,889
sets<font color="#E5E5E5"> that were presented in</font><font color="#CCCCCC"> the tutorial</font>

226
00:10:26,970 --> 00:10:31,019
we actually decided<font color="#E5E5E5"> that we wanted to</font>

227
00:10:28,889 --> 00:10:32,550
<font color="#E5E5E5">take an external approach observing this</font>

228
00:10:31,019 --> 00:10:34,380
network and<font color="#CCCCCC"> taking to account</font><font color="#E5E5E5"> things</font>

229
00:10:32,550 --> 00:10:36,959
that traditional routing protocols

230
00:10:34,380 --> 00:10:39,240
<font color="#E5E5E5">wouldn't necessarily observe we did this</font>

231
00:10:36,959 --> 00:10:41,699
in<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of a generic manner</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> for the</font>

232
00:10:39,240 --> 00:10:43,380
sake of the hackathon<font color="#CCCCCC"> based on like</font><font color="#E5E5E5"> just</font>

233
00:10:41,699 --> 00:10:46,199
traffic<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was going</font><font color="#CCCCCC"> over the network</font>

234
00:10:43,380 --> 00:10:47,910
<font color="#E5E5E5">so this this ensured that as traffic</font><font color="#CCCCCC"> or</font>

235
00:10:46,199 --> 00:10:49,680
you know situations change within<font color="#E5E5E5"> the</font>

236
00:10:47,910 --> 00:10:52,740
network that<font color="#E5E5E5"> we could dynamically update</font>

237
00:10:49,680 --> 00:10:56,489
provide a custom<font color="#CCCCCC"> wait value to</font><font color="#E5E5E5"> network X</font>

238
00:10:52,740 --> 00:10:57,600
and then get the new path from<font color="#E5E5E5"> that so</font>

239
00:10:56,490 --> 00:10:59,790
this<font color="#CCCCCC"> is kind of how we laid out our</font>

240
00:10:57,600 --> 00:11:03,360
software<font color="#E5E5E5"> the test script just</font>

241
00:10:59,790 --> 00:11:05,699
continually ran and<font color="#E5E5E5"> got input</font><font color="#CCCCCC"> from the</font>

242
00:11:03,360 --> 00:11:07,620
path computation algorithm which then

243
00:11:05,699 --> 00:11:10,319
output to our<font color="#CCCCCC"> L</font><font color="#E5E5E5"> order file which exit</font>

244
00:11:07,620 --> 00:11:12,630
<font color="#CCCCCC">BGP</font><font color="#E5E5E5"> used to send an update</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> VM</font><font color="#CCCCCC"> x3 I</font>

245
00:11:10,319 --> 00:11:14,849
mean just you can kind of see it<font color="#E5E5E5"> there</font>

246
00:11:12,630 --> 00:11:16,259
<font color="#CCCCCC">at the bottom that's kind of like what</font>

247
00:11:14,850 --> 00:11:19,949
the the final statement<font color="#CCCCCC"> looked like</font>

248
00:11:16,259 --> 00:11:21,149
<font color="#E5E5E5">after we ran the computation so</font><font color="#CCCCCC"> tom is</font>

249
00:11:19,949 --> 00:11:23,620
going<font color="#E5E5E5"> to talk a little bit</font><font color="#CCCCCC"> more about</font>

250
00:11:21,149 --> 00:11:26,560
the network<font color="#CCCCCC"> X aspect of the project</font>

251
00:11:23,620 --> 00:11:28,630
yeah great thanks back<font color="#E5E5E5"> so it's been a</font>

252
00:11:26,560 --> 00:11:30,880
mentioned we use<font color="#E5E5E5"> we use</font><font color="#CCCCCC"> Network</font><font color="#E5E5E5"> X to</font>

253
00:11:28,630 --> 00:11:33,280
basically create our network graphs to

254
00:11:30,880 --> 00:11:35,710
take a look at what the initial view<font color="#E5E5E5"> of</font>

255
00:11:33,280 --> 00:11:37,990
the<font color="#E5E5E5"> network look like and then also to</font>

256
00:11:35,710 --> 00:11:39,940
recalculate<font color="#CCCCCC"> our best path anytime</font><font color="#E5E5E5"> that</font>

257
00:11:37,990 --> 00:11:41,950
<font color="#E5E5E5">we observed a change in the network</font><font color="#CCCCCC"> so</font>

258
00:11:39,940 --> 00:11:43,720
<font color="#CCCCCC">on the left here</font><font color="#E5E5E5"> you see the initial</font>

259
00:11:41,950 --> 00:11:45,970
<font color="#E5E5E5">code that's all it takes just a few</font>

260
00:11:43,720 --> 00:11:47,530
<font color="#E5E5E5">lines of code to actually</font><font color="#CCCCCC"> input</font><font color="#E5E5E5"> the</font>

261
00:11:45,970 --> 00:11:49,420
weights<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the links the edges the</font>

262
00:11:47,530 --> 00:11:52,150
nodes all<font color="#CCCCCC"> of that this required to</font><font color="#E5E5E5"> build</font>

263
00:11:49,420 --> 00:11:54,130
and draw the<font color="#E5E5E5"> network and then also just</font>

264
00:11:52,150 --> 00:11:56,680
<font color="#CCCCCC">to</font><font color="#E5E5E5"> actually draw the graph on the</font><font color="#CCCCCC"> right</font>

265
00:11:54,130 --> 00:11:58,120
so using matplotlib<font color="#CCCCCC"> you can just with</font>

266
00:11:56,680 --> 00:12:02,560
just<font color="#CCCCCC"> those lines you can create it it's</font>

267
00:11:58,120 --> 00:12:04,990
pretty easy<font color="#CCCCCC"> here</font><font color="#E5E5E5"> we go so this this</font>

268
00:12:02,560 --> 00:12:06,880
controller basically<font color="#CCCCCC"> shows that you know</font>

269
00:12:04,990 --> 00:12:09,220
<font color="#E5E5E5">for the</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> controller is pulling</font>

270
00:12:06,880 --> 00:12:11,080
the network on a regular basis so<font color="#CCCCCC"> on the</font>

271
00:12:09,220 --> 00:12:13,360
right we<font color="#CCCCCC"> see the controller pulling the</font>

272
00:12:11,080 --> 00:12:16,120
network<font color="#CCCCCC"> taking a look at interface stats</font>

273
00:12:13,360 --> 00:12:18,160
and different things that<font color="#E5E5E5"> they can be</font>

274
00:12:16,120 --> 00:12:19,780
used as a decision point<font color="#E5E5E5"> to determine</font><font color="#CCCCCC"> if</font>

275
00:12:18,160 --> 00:12:21,939
there needs<font color="#E5E5E5"> to be a change made in</font><font color="#CCCCCC"> the</font>

276
00:12:19,780 --> 00:12:23,709
network<font color="#E5E5E5"> so</font><font color="#CCCCCC"> anytime that's</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> the</font>

277
00:12:21,940 --> 00:12:25,990
controller will make that<font color="#E5E5E5"> decision and</font>

278
00:12:23,710 --> 00:12:28,270
decide<font color="#CCCCCC"> that yes there</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a new best path</font>

279
00:12:25,990 --> 00:12:30,220
and will actually<font color="#E5E5E5"> generate the the</font>

280
00:12:28,270 --> 00:12:33,550
configure the commands<font color="#E5E5E5"> to actually push</font>

281
00:12:30,220 --> 00:12:35,820
to XM v GP<font color="#E5E5E5"> which will then actually push</font>

282
00:12:33,550 --> 00:12:38,829
to<font color="#E5E5E5"> the network</font>

283
00:12:35,820 --> 00:12:41,890
here we see some output from the<font color="#E5E5E5"> XIV GP</font>

284
00:12:38,830 --> 00:12:44,740
controller it's the script<font color="#E5E5E5"> is run it's</font>

285
00:12:41,890 --> 00:12:48,000
initialized we see that<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> the</font>

286
00:12:44,740 --> 00:12:51,130
<font color="#E5E5E5">purpose here is to connect to the to the</font>

287
00:12:48,000 --> 00:12:53,410
controller<font color="#E5E5E5"> so then we have commands</font>

288
00:12:51,130 --> 00:12:55,120
there<font color="#CCCCCC"> the in the box</font><font color="#E5E5E5"> the selected box we</font>

289
00:12:53,410 --> 00:12:56,829
have the<font color="#E5E5E5"> commands that X uh BGP will</font>

290
00:12:55,120 --> 00:12:59,770
push to<font color="#CCCCCC"> the network as a result of the</font>

291
00:12:56,830 --> 00:13:02,140
change in the network<font color="#CCCCCC"> so at the bottom</font>

292
00:12:59,770 --> 00:13:04,870
<font color="#E5E5E5">there we see the the BGP adjacency this</font>

293
00:13:02,140 --> 00:13:09,520
forms<font color="#E5E5E5"> between</font><font color="#CCCCCC"> the controller</font><font color="#E5E5E5"> m and X uh</font>

294
00:13:04,870 --> 00:13:11,530
<font color="#E5E5E5">BGP</font><font color="#CCCCCC"> initially this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the network as we</font>

295
00:13:09,520 --> 00:13:13,110
started<font color="#E5E5E5"> been mentioned here</font><font color="#CCCCCC"> we have I</font>

296
00:13:11,530 --> 00:13:16,270
<font color="#E5E5E5">mean</font><font color="#CCCCCC"> the topology that everybody used</font>

297
00:13:13,110 --> 00:13:18,580
the initial best path is from<font color="#CCCCCC"> V M X 3 to</font>

298
00:13:16,270 --> 00:13:20,590
1 to<font color="#CCCCCC"> 4</font><font color="#E5E5E5"> with the destination</font><font color="#CCCCCC"> being</font><font color="#E5E5E5"> the</font>

299
00:13:18,580 --> 00:13:24,550
1000<font color="#CCCCCC"> for at the bottom there on the</font>

300
00:13:20,590 --> 00:13:26,680
bottom<font color="#E5E5E5"> left and</font><font color="#CCCCCC"> here we go</font><font color="#E5E5E5"> so we're then</font>

301
00:13:24,550 --> 00:13:29,349
we wrote we run the the Python<font color="#E5E5E5"> script to</font>

302
00:13:26,680 --> 00:13:30,819
to<font color="#E5E5E5"> generate to take a look at the pet at</font>

303
00:13:29,350 --> 00:13:33,520
the network based<font color="#E5E5E5"> on the network graph</font>

304
00:13:30,820 --> 00:13:35,680
and then we<font color="#E5E5E5"> see here the best path at</font>

305
00:13:33,520 --> 00:13:36,740
the end is saying 3 1 4 as I mentioned

306
00:13:35,680 --> 00:13:39,260
before this<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> initial</font>

307
00:13:36,740 --> 00:13:41,180
look at it before any and before the

308
00:13:39,260 --> 00:13:44,870
controller has noticed any change in the

309
00:13:41,180 --> 00:13:47,000
network here we have the<font color="#E5E5E5"> emptiest label</font>

310
00:13:44,870 --> 00:13:50,720
that we're imposing which is the<font color="#CCCCCC"> 800,000</font>

311
00:13:47,000 --> 00:13:53,930
<font color="#CCCCCC">for label there ok so then now we see</font>

312
00:13:50,720 --> 00:13:56,600
that the path between<font color="#E5E5E5"> MX 3 and M</font><font color="#CCCCCC"> x1</font><font color="#E5E5E5"> has</font>

313
00:13:53,930 --> 00:13:58,310
has taken<font color="#E5E5E5"> additional traffic</font><font color="#CCCCCC"> and this</font>

314
00:13:56,600 --> 00:13:59,810
really<font color="#E5E5E5"> could be any any observable</font>

315
00:13:58,310 --> 00:14:02,180
change in the network but at this point

316
00:13:59,810 --> 00:14:06,079
<font color="#E5E5E5">we just decided</font><font color="#CCCCCC"> to use some</font><font color="#E5E5E5"> traffic flow</font>

317
00:14:02,180 --> 00:14:07,880
but so once<font color="#E5E5E5"> that's happened</font><font color="#CCCCCC"> now we need</font>

318
00:14:06,080 --> 00:14:09,410
to<font color="#E5E5E5"> take a look and see once the</font>

319
00:14:07,880 --> 00:14:11,779
controller determines that there's a

320
00:14:09,410 --> 00:14:13,910
<font color="#E5E5E5">change what what change needs to be made</font>

321
00:14:11,779 --> 00:14:19,490
<font color="#E5E5E5">and</font><font color="#CCCCCC"> so hum is going to talk</font><font color="#E5E5E5"> about that</font>

322
00:14:13,910 --> 00:14:21,290
<font color="#E5E5E5">now thanks song so now that we have</font><font color="#CCCCCC"> a</font>

323
00:14:19,490 --> 00:14:23,360
particular<font color="#E5E5E5"> change in the network and the</font>

324
00:14:21,290 --> 00:14:25,939
state of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> topology has changed what</font>

325
00:14:23,360 --> 00:14:30,620
we ideally want is a<font color="#E5E5E5"> better optimized</font>

326
00:14:25,940 --> 00:14:33,529
path to go through<font color="#CCCCCC"> vm x 3</font><font color="#E5E5E5"> vm x 2 1</font><font color="#CCCCCC"> & 4</font>

327
00:14:30,620 --> 00:14:36,410
or vm x 3 to 5<font color="#CCCCCC"> 4 whichever is better in</font>

328
00:14:33,529 --> 00:14:39,380
<font color="#E5E5E5">terms of link bandwidth so we go back to</font>

329
00:14:36,410 --> 00:14:40,969
network<font color="#CCCCCC"> x and the computation engine to</font>

330
00:14:39,380 --> 00:14:42,560
determine this path<font color="#E5E5E5"> taking into</font><font color="#CCCCCC"> account</font>

331
00:14:40,970 --> 00:14:44,839
all<font color="#E5E5E5"> the parameters which we have</font>

332
00:14:42,560 --> 00:14:48,800
<font color="#E5E5E5">extracted from the particular model</font>

333
00:14:44,839 --> 00:14:50,690
<font color="#E5E5E5">given so this is the second one what we</font>

334
00:14:48,800 --> 00:14:52,849
<font color="#E5E5E5">call when the controller detects that</font>

335
00:14:50,690 --> 00:14:54,890
<font color="#E5E5E5">there is a change in state what we</font>

336
00:14:52,850 --> 00:14:58,370
essentially do<font color="#CCCCCC"> is we go back to Network</font>

337
00:14:54,890 --> 00:15:00,290
X<font color="#E5E5E5"> we saw that</font><font color="#CCCCCC"> ok MX 3 2 1 4 could be a</font>

338
00:14:58,370 --> 00:15:02,270
better path than<font color="#CCCCCC"> what it is going</font>

339
00:15:00,290 --> 00:15:05,300
through currently so in order<font color="#E5E5E5"> to do that</font>

340
00:15:02,270 --> 00:15:08,120
what we rely on<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the delayed IGP cost</font>

341
00:15:05,300 --> 00:15:11,510
to calculate metrics<font color="#E5E5E5"> until node 1 and</font>

342
00:15:08,120 --> 00:15:14,990
then push MPLS labels through segment

343
00:15:11,510 --> 00:15:17,899
routing and<font color="#CCCCCC"> bgp</font><font color="#E5E5E5"> Lu so we have</font><font color="#CCCCCC"> 800,000 1</font>

344
00:15:14,990 --> 00:15:19,880
and<font color="#CCCCCC"> 800,000 4 which are nothing but MPLS</font>

345
00:15:17,899 --> 00:15:22,670
pops<font color="#CCCCCC"> popping operation done at one</font>

346
00:15:19,880 --> 00:15:26,300
before one and before fourth which is<font color="#E5E5E5"> a</font>

347
00:15:22,670 --> 00:15:28,550
destination<font color="#E5E5E5"> so this is just a</font><font color="#CCCCCC"> detailed</font>

348
00:15:26,300 --> 00:15:30,979
<font color="#E5E5E5">deep dive at the head end</font><font color="#CCCCCC"> which is MX 3</font>

349
00:15:28,550 --> 00:15:33,349
which is a source<font color="#E5E5E5"> so when we do</font><font color="#CCCCCC"> our out</font>

350
00:15:30,980 --> 00:15:34,790
1000 4 which<font color="#CCCCCC"> is the destination we see</font>

351
00:15:33,350 --> 00:15:37,520
that couple<font color="#E5E5E5"> of labels have been pushed</font>

352
00:15:34,790 --> 00:15:39,949
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> relying on</font><font color="#CCCCCC"> ihe PD to go till</font>

353
00:15:37,520 --> 00:15:43,130
the<font color="#CCCCCC"> first label</font><font color="#E5E5E5"> the first pop operation</font>

354
00:15:39,950 --> 00:15:45,050
takes<font color="#CCCCCC"> place this</font><font color="#E5E5E5"> is our trace route from</font>

355
00:15:43,130 --> 00:15:49,580
<font color="#E5E5E5">the source</font><font color="#CCCCCC"> till the destination</font>

356
00:15:45,050 --> 00:15:52,250
and the labels which<font color="#E5E5E5"> are being pushed so</font>

357
00:15:49,580 --> 00:15:54,170
again this is if there<font color="#CCCCCC"> are if we want a</font>

358
00:15:52,250 --> 00:15:55,550
disjoint path<font color="#E5E5E5"> kind of a scenario</font><font color="#CCCCCC"> where</font>

359
00:15:54,170 --> 00:15:57,410
and we don't want a particular<font color="#E5E5E5"> parts</font>

360
00:15:55,550 --> 00:15:59,810
being used<font color="#CCCCCC"> already due</font><font color="#E5E5E5"> to a flow</font>

361
00:15:57,410 --> 00:16:01,969
<font color="#CCCCCC">transition this</font><font color="#E5E5E5"> is what we could</font><font color="#CCCCCC"> have</font>

362
00:15:59,810 --> 00:16:04,849
<font color="#E5E5E5">done as well so this was</font><font color="#CCCCCC"> the third</font><font color="#E5E5E5"> run</font>

363
00:16:01,970 --> 00:16:07,370
<font color="#E5E5E5">and we see that final advertisement from</font>

364
00:16:04,850 --> 00:16:09,589
the route log of file which is you know

365
00:16:07,370 --> 00:16:12,260
choose a choose<font color="#CCCCCC"> your</font><font color="#E5E5E5"> next best hop and</font>

366
00:16:09,589 --> 00:16:13,579
then change the<font color="#E5E5E5"> labels so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the swap</font>

367
00:16:12,260 --> 00:16:17,300
operation<font color="#E5E5E5"> takes</font><font color="#CCCCCC"> place at a different</font>

368
00:16:13,579 --> 00:16:19,750
node than what it was used previously<font color="#E5E5E5"> so</font>

369
00:16:17,300 --> 00:16:23,000
coming to the<font color="#E5E5E5"> most interesting part</font>

370
00:16:19,750 --> 00:16:25,430
<font color="#E5E5E5">gathering data was a big task because</font>

371
00:16:23,000 --> 00:16:28,399
the data formats were a bit difficult<font color="#E5E5E5"> to</font>

372
00:16:25,430 --> 00:16:30,620
deal with<font color="#CCCCCC"> secondly graph theory was</font>

373
00:16:28,399 --> 00:16:33,500
really interesting and integrating graph

374
00:16:30,620 --> 00:16:36,529
theory with<font color="#E5E5E5"> the data set which we had</font>

375
00:16:33,500 --> 00:16:38,209
was a fun<font color="#E5E5E5"> task and along with</font><font color="#CCCCCC"> the</font>

376
00:16:36,529 --> 00:16:40,519
computation algorithm<font color="#E5E5E5"> so that is</font>

377
00:16:38,209 --> 00:16:43,369
something<font color="#E5E5E5"> which</font><font color="#CCCCCC"> we learnt a lot and we</font>

378
00:16:40,519 --> 00:16:45,800
had a great time<font color="#E5E5E5"> with it</font><font color="#CCCCCC"> and finally we</font>

379
00:16:43,370 --> 00:16:49,459
learned how to programmatically push a

380
00:16:45,800 --> 00:16:52,160
certain else through bgp<font color="#CCCCCC"> lu to</font><font color="#E5E5E5"> conclude</font>

381
00:16:49,459 --> 00:16:53,869
<font color="#E5E5E5">we would like to believe that this could</font>

382
00:16:52,160 --> 00:16:57,439
<font color="#E5E5E5">be a good approach</font><font color="#CCCCCC"> to try out in your</font>

383
00:16:53,870 --> 00:16:59,209
MPLS cloud<font color="#E5E5E5"> it may benefit you and yeah</font>

384
00:16:57,440 --> 00:17:01,310
harnessing all of these technologies

385
00:16:59,209 --> 00:17:03,589
<font color="#E5E5E5">technologies which we</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> have in</font>

386
00:17:01,310 --> 00:17:06,260
our network<font color="#E5E5E5"> whether it's</font><font color="#CCCCCC"> BGP</font><font color="#E5E5E5"> segment</font>

387
00:17:03,589 --> 00:17:07,819
routing or just<font color="#CCCCCC"> uh some some</font><font color="#E5E5E5"> overhead in</font>

388
00:17:06,260 --> 00:17:11,750
terms<font color="#CCCCCC"> of a controller to pull</font><font color="#E5E5E5"> your</font>

389
00:17:07,819 --> 00:17:14,270
various<font color="#CCCCCC"> network devices</font><font color="#E5E5E5"> and yeah</font><font color="#CCCCCC"> we take</font>

390
00:17:11,750 --> 00:17:15,980
<font color="#E5E5E5">care</font><font color="#CCCCCC"> of link failure or any reservation</font>

391
00:17:14,270 --> 00:17:18,260
bandwidth or any such scenarios in the

392
00:17:15,980 --> 00:17:20,510
end<font color="#E5E5E5"> so with that we would like to thank</font>

393
00:17:18,260 --> 00:17:25,129
<font color="#E5E5E5">every one of you and all my teammates</font>

394
00:17:20,510 --> 00:17:29,480
<font color="#CCCCCC">Thanks thank</font><font color="#E5E5E5"> you</font>

395
00:17:25,130 --> 00:17:32,230
<font color="#E5E5E5">cat 5e</font><font color="#CCCCCC"> hurricane</font><font color="#E5E5E5"> gratulations I'd like</font>

396
00:17:29,480 --> 00:17:34,760
to invite our our first runner-up team

397
00:17:32,230 --> 00:17:37,390
the<font color="#E5E5E5"> buffs up to the stage</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> present</font>

398
00:17:34,760 --> 00:17:37,390
their hack

399
00:17:48,170 --> 00:17:53,870
thank you hi<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> for having</font><font color="#E5E5E5"> us</font>

400
00:17:51,620 --> 00:17:55,310
here<font color="#E5E5E5"> today</font><font color="#CCCCCC"> we're team buffs</font><font color="#E5E5E5"> and we</font>

401
00:17:53,870 --> 00:17:58,489
graduate students<font color="#E5E5E5"> at University of</font>

402
00:17:55,310 --> 00:18:01,100
Colorado<font color="#CCCCCC"> Boulder</font><font color="#E5E5E5"> so this was our journey</font>

403
00:17:58,490 --> 00:18:02,810
as we try<font color="#E5E5E5"> to implement as you try to</font>

404
00:18:01,100 --> 00:18:04,370
implement<font color="#CCCCCC"> segment routing in one day</font>

405
00:18:02,810 --> 00:18:07,070
<font color="#E5E5E5">within success where we had to learn a</font>

406
00:18:04,370 --> 00:18:09,649
lot<font color="#CCCCCC"> of things the idea was to automate</font>

407
00:18:07,070 --> 00:18:14,090
traffic engineering<font color="#E5E5E5"> in a dynamic way</font>

408
00:18:09,650 --> 00:18:16,640
<font color="#E5E5E5">during</font><font color="#CCCCCC"> real-time so once we had the</font>

409
00:18:14,090 --> 00:18:18,830
hackathon problem set we broke it down

410
00:18:16,640 --> 00:18:21,410
<font color="#E5E5E5">into achievable elements that we each</font>

411
00:18:18,830 --> 00:18:23,060
took up and then together we would

412
00:18:21,410 --> 00:18:25,730
<font color="#E5E5E5">finally integrate it into one working</font>

413
00:18:23,060 --> 00:18:27,230
<font color="#E5E5E5">solution that we could run the first</font>

414
00:18:25,730 --> 00:18:29,510
step was<font color="#CCCCCC"> to gather the topology</font>

415
00:18:27,230 --> 00:18:31,340
<font color="#CCCCCC">information in the network in a dynamic</font>

416
00:18:29,510 --> 00:18:34,280
<font color="#CCCCCC">fashion</font><font color="#E5E5E5"> and then it was to use the</font>

417
00:18:31,340 --> 00:18:37,760
topology<font color="#E5E5E5"> information</font><font color="#CCCCCC"> to model a graph we</font>

418
00:18:34,280 --> 00:18:39,139
had to work on<font color="#E5E5E5"> C C SPF because SPF alone</font>

419
00:18:37,760 --> 00:18:41,090
would not achieve<font color="#E5E5E5"> the requirements</font><font color="#CCCCCC"> that</font>

420
00:18:39,140 --> 00:18:43,100
were given<font color="#CCCCCC"> to</font><font color="#E5E5E5"> us so</font><font color="#CCCCCC"> we had to modify</font><font color="#E5E5E5"> it</font>

421
00:18:41,090 --> 00:18:44,870
for each of<font color="#CCCCCC"> the problem statement</font><font color="#E5E5E5"> each</font>

422
00:18:43,100 --> 00:18:46,280
of the different<font color="#E5E5E5"> scenario take into</font>

423
00:18:44,870 --> 00:18:48,620
consideration the different constraints

424
00:18:46,280 --> 00:18:51,170
whether it was disjoint<font color="#CCCCCC"> paths</font><font color="#E5E5E5"> whether it</font>

425
00:18:48,620 --> 00:18:54,050
<font color="#E5E5E5">was the bandwidth subscription so modify</font>

426
00:18:51,170 --> 00:18:56,300
the algorithm<font color="#E5E5E5"> to consider that and then</font>

427
00:18:54,050 --> 00:18:59,389
find the<font color="#E5E5E5"> best path and then the final</font>

428
00:18:56,300 --> 00:19:01,970
two steps<font color="#E5E5E5"> were to use the once we had</font>

429
00:18:59,390 --> 00:19:04,400
the best path we had to dynamically

430
00:19:01,970 --> 00:19:06,470
configure the routes with the<font color="#E5E5E5"> MPLS</font>

431
00:19:04,400 --> 00:19:08,330
labels and it was finally<font color="#CCCCCC"> to push push</font>

432
00:19:06,470 --> 00:19:10,340
it to the<font color="#E5E5E5"> network and validate and see</font>

433
00:19:08,330 --> 00:19:13,030
if traffic is taking the path we meant

434
00:19:10,340 --> 00:19:15,320
it to take so these were the<font color="#E5E5E5"> steps</font>

435
00:19:13,030 --> 00:19:16,820
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> a visual</font><font color="#CCCCCC"> representation of</font><font color="#E5E5E5"> what</font>

436
00:19:15,320 --> 00:19:19,189
we<font color="#CCCCCC"> were</font><font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to achieve</font><font color="#E5E5E5"> on the top</font>

437
00:19:16,820 --> 00:19:21,649
left<font color="#E5E5E5"> we were gathering information</font><font color="#CCCCCC"> the</font>

438
00:19:19,190 --> 00:19:23,570
topology<font color="#CCCCCC"> information we were we</font><font color="#E5E5E5"> were</font>

439
00:19:21,650 --> 00:19:26,570
<font color="#E5E5E5">working with</font><font color="#CCCCCC"> juniper devices so we use</font>

440
00:19:23,570 --> 00:19:28,730
<font color="#E5E5E5">junipers</font><font color="#CCCCCC"> in built library by easy</font><font color="#E5E5E5"> it</font>

441
00:19:26,570 --> 00:19:30,470
makes remote procedure calls on<font color="#E5E5E5"> all the</font>

442
00:19:28,730 --> 00:19:32,480
boxes in<font color="#CCCCCC"> the network gets</font><font color="#E5E5E5"> the</font>

443
00:19:30,470 --> 00:19:34,700
<font color="#CCCCCC">information</font><font color="#E5E5E5"> and topology</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> in</font>

444
00:19:32,480 --> 00:19:37,220
JSON format<font color="#E5E5E5"> then we passed through the</font>

445
00:19:34,700 --> 00:19:40,580
JSON format<font color="#E5E5E5"> to obtain a data structure</font>

446
00:19:37,220 --> 00:19:42,230
<font color="#E5E5E5">which is basically the LSA along with</font>

447
00:19:40,580 --> 00:19:44,120
some of the<font color="#CCCCCC"> traffic engineering elements</font>

448
00:19:42,230 --> 00:19:46,700
the CSP of algorithm can use to<font color="#E5E5E5"> make</font>

449
00:19:44,120 --> 00:19:48,229
decisions<font color="#CCCCCC"> and the second step is in the</font>

450
00:19:46,700 --> 00:19:50,000
<font color="#E5E5E5">top right where we use the CSP F</font>

451
00:19:48,230 --> 00:19:52,610
algorithm we had three<font color="#CCCCCC"> different</font>

452
00:19:50,000 --> 00:19:54,320
scenarios<font color="#E5E5E5"> and we had</font><font color="#CCCCCC"> 3.3</font><font color="#E5E5E5"> different</font>

453
00:19:52,610 --> 00:19:57,560
<font color="#E5E5E5">functions</font><font color="#CCCCCC"> wherein based on the</font>

454
00:19:54,320 --> 00:19:59,320
requirements we run SPF taking into

455
00:19:57,560 --> 00:20:01,580
consideration the constraints<font color="#E5E5E5"> define and</font>

456
00:19:59,320 --> 00:20:03,830
come up with<font color="#CCCCCC"> paths</font><font color="#E5E5E5"> that will</font>

457
00:20:01,580 --> 00:20:05,960
work for each<font color="#CCCCCC"> different scenario</font><font color="#E5E5E5"> then we</font>

458
00:20:03,830 --> 00:20:07,340
use<font color="#E5E5E5"> X ah beat with</font><font color="#CCCCCC"> n we</font><font color="#E5E5E5"> use segment</font>

459
00:20:05,960 --> 00:20:09,680
routing parts we construct the routes

460
00:20:07,340 --> 00:20:11,750
<font color="#E5E5E5">based on the labels we dynamically</font>

461
00:20:09,680 --> 00:20:13,340
assign the labels to and once we have

462
00:20:11,750 --> 00:20:16,070
the routes ready<font color="#E5E5E5"> we push it into the</font>

463
00:20:13,340 --> 00:20:19,220
<font color="#CCCCCC">network using X our</font><font color="#E5E5E5"> BGP as an interface</font>

464
00:20:16,070 --> 00:20:21,260
<font color="#E5E5E5">it establishes a BGP session with the MX</font>

465
00:20:19,220 --> 00:20:23,360
routers in our network and then<font color="#E5E5E5"> we push</font>

466
00:20:21,260 --> 00:20:25,460
the BGP<font color="#CCCCCC"> lu routes into our network so</font>

467
00:20:23,360 --> 00:20:27,919
<font color="#CCCCCC">regardless of what</font><font color="#E5E5E5"> the forwarding</font><font color="#CCCCCC"> table</font>

468
00:20:25,460 --> 00:20:30,500
was before we did this<font color="#E5E5E5"> once we push</font>

469
00:20:27,920 --> 00:20:33,200
these<font color="#E5E5E5"> BGP Lu routes the route</font>

470
00:20:30,500 --> 00:20:35,090
manipulation will take effect<font color="#E5E5E5"> and the</font>

471
00:20:33,200 --> 00:20:36,890
paths<font color="#E5E5E5"> taken will be the ones we wanted</font>

472
00:20:35,090 --> 00:20:40,220
to take<font color="#E5E5E5"> so we're trying</font><font color="#CCCCCC"> to do that</font>

473
00:20:36,890 --> 00:20:42,530
in real time so with topology discovery

474
00:20:40,220 --> 00:20:43,790
as I mentioned we used the<font color="#E5E5E5"> PI</font><font color="#CCCCCC"> Z library</font>

475
00:20:42,530 --> 00:20:46,370
and this<font color="#E5E5E5"> is what the data structure</font>

476
00:20:43,790 --> 00:20:47,960
looks<font color="#CCCCCC"> like</font><font color="#E5E5E5"> so for a given link we have</font>

477
00:20:46,370 --> 00:20:50,060
<font color="#E5E5E5">this</font><font color="#CCCCCC"> information where</font><font color="#E5E5E5"> it talks about</font>

478
00:20:47,960 --> 00:20:52,130
<font color="#E5E5E5">this source in that link and the</font>

479
00:20:50,060 --> 00:20:54,020
destination<font color="#E5E5E5"> within</font><font color="#CCCCCC"> that link itself</font><font color="#E5E5E5"> and</font>

480
00:20:52,130 --> 00:20:56,420
it has traffic<font color="#CCCCCC"> engineering metrics like</font>

481
00:20:54,020 --> 00:20:58,580
cost<font color="#E5E5E5"> in this which in this case is 10</font>

482
00:20:56,420 --> 00:21:00,680
and 100<font color="#E5E5E5"> Mbps</font><font color="#CCCCCC"> which is the reservable</font>

483
00:20:58,580 --> 00:21:03,889
bandwidth for that link<font color="#CCCCCC"> so we get this</font>

484
00:21:00,680 --> 00:21:05,690
information<font color="#E5E5E5"> we parse it</font><font color="#CCCCCC"> and then that</font>

485
00:21:03,890 --> 00:21:07,730
would<font color="#CCCCCC"> be</font><font color="#E5E5E5"> given</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the CSP a functional</font>

486
00:21:05,690 --> 00:21:10,100
block so this<font color="#E5E5E5"> was the topology</font>

487
00:21:07,730 --> 00:21:12,110
<font color="#E5E5E5">information</font><font color="#CCCCCC"> we discovered while passing</font>

488
00:21:10,100 --> 00:21:14,959
it we<font color="#E5E5E5"> found three additional links than</font>

489
00:21:12,110 --> 00:21:17,719
the topology<font color="#E5E5E5"> that was given</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> us but</font>

490
00:21:14,960 --> 00:21:20,060
<font color="#E5E5E5">not</font><font color="#CCCCCC"> to worry</font><font color="#E5E5E5"> the shortest path algorithm</font>

491
00:21:17,720 --> 00:21:21,710
<font color="#E5E5E5">that we wrote works for any topology so</font>

492
00:21:20,060 --> 00:21:24,620
it was<font color="#CCCCCC"> able to accommodate that</font><font color="#E5E5E5"> as well</font>

493
00:21:21,710 --> 00:21:26,360
so<font color="#E5E5E5"> we had three different scenarios</font>

494
00:21:24,620 --> 00:21:28,399
we'll go through all different<font color="#E5E5E5"> scenarios</font>

495
00:21:26,360 --> 00:21:30,350
on<font color="#CCCCCC"> how</font><font color="#E5E5E5"> we had to</font><font color="#CCCCCC"> modify the SPF</font>

496
00:21:28,400 --> 00:21:31,760
accommodate for<font color="#CCCCCC"> that scenario the first</font>

497
00:21:30,350 --> 00:21:34,340
scenario<font color="#E5E5E5"> was straightforward where we</font>

498
00:21:31,760 --> 00:21:38,270
had to find<font color="#E5E5E5"> the shortest path between</font>

499
00:21:34,340 --> 00:21:39,379
<font color="#E5E5E5">mx3 to</font><font color="#CCCCCC"> mx5 we just ran the</font><font color="#E5E5E5"> SPF</font><font color="#CCCCCC"> and we</font>

500
00:21:38,270 --> 00:21:41,360
were able<font color="#CCCCCC"> to find the shortest path</font>

501
00:21:39,380 --> 00:21:44,750
which<font color="#CCCCCC"> is as indicated as highlighted in</font>

502
00:21:41,360 --> 00:21:47,000
<font color="#CCCCCC">the diagram and</font><font color="#E5E5E5"> the second case it was</font>

503
00:21:44,750 --> 00:21:48,980
more<font color="#CCCCCC"> challenging</font><font color="#E5E5E5"> where to find as many</font>

504
00:21:47,000 --> 00:21:51,260
disjoint paths as we can in the network

505
00:21:48,980 --> 00:21:54,380
<font color="#E5E5E5">in this case it was between MX 1 and MX</font>

506
00:21:51,260 --> 00:21:56,150
5 so the first step is<font color="#E5E5E5"> still the same</font>

507
00:21:54,380 --> 00:21:58,580
you<font color="#E5E5E5"> run SPF to find</font><font color="#CCCCCC"> the shortest path</font>

508
00:21:56,150 --> 00:22:01,160
between MX 1 and MX 5 and then<font color="#E5E5E5"> you</font>

509
00:21:58,580 --> 00:22:04,189
remove<font color="#E5E5E5"> the links that were used and you</font>

510
00:22:01,160 --> 00:22:06,560
update<font color="#CCCCCC"> the topology table and then you</font>

511
00:22:04,190 --> 00:22:08,930
run shortest<font color="#CCCCCC"> paths again and you iterate</font>

512
00:22:06,560 --> 00:22:10,550
over<font color="#E5E5E5"> it</font><font color="#CCCCCC"> to find disjoint paths so once</font>

513
00:22:08,930 --> 00:22:12,680
you remove<font color="#E5E5E5"> the black path which was the</font>

514
00:22:10,550 --> 00:22:15,409
best path you get sub optimal routes

515
00:22:12,680 --> 00:22:17,120
next which are all disjoint which are

516
00:22:15,410 --> 00:22:18,890
the blue parts and the red parts

517
00:22:17,120 --> 00:22:20,659
indicated in the diagram<font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is how</font>

518
00:22:18,890 --> 00:22:22,250
<font color="#E5E5E5">you have to modify the SPF to</font>

519
00:22:20,660 --> 00:22:25,820
<font color="#E5E5E5">accommodate</font><font color="#CCCCCC"> for the second scenario that</font>

520
00:22:22,250 --> 00:22:27,920
we were<font color="#E5E5E5"> required</font><font color="#CCCCCC"> to accomplish now the</font>

521
00:22:25,820 --> 00:22:30,200
third and<font color="#E5E5E5"> final scenario here it was the</font>

522
00:22:27,920 --> 00:22:31,730
goal was to<font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that all of</font><font color="#CCCCCC"> the</font>

523
00:22:30,200 --> 00:22:33,890
link bandwidth is utilized

524
00:22:31,730 --> 00:22:35,600
so here again<font color="#CCCCCC"> we don't worry about the</font>

525
00:22:33,890 --> 00:22:38,570
disjoint<font color="#CCCCCC"> buts the goal is that if user</font>

526
00:22:35,600 --> 00:22:41,449
<font color="#E5E5E5">one is using</font><font color="#CCCCCC"> an amount of bandwidth</font><font color="#E5E5E5"> so</font>

527
00:22:38,570 --> 00:22:43,189
now the so even though the topology

528
00:22:41,450 --> 00:22:45,380
<font color="#CCCCCC">information said the available bandwidth</font>

529
00:22:43,190 --> 00:22:46,910
is 100 Mbps if user<font color="#CCCCCC"> one is already using</font>

530
00:22:45,380 --> 00:22:49,610
50 Mbps you have to take<font color="#E5E5E5"> into account</font>

531
00:22:46,910 --> 00:22:51,140
<font color="#E5E5E5">what is currently available</font><font color="#CCCCCC"> so again you</font>

532
00:22:49,610 --> 00:22:54,020
need to<font color="#CCCCCC"> have you need</font><font color="#E5E5E5"> to subtract that</font>

533
00:22:51,140 --> 00:22:56,360
from<font color="#E5E5E5"> the pool of available bandwidth and</font>

534
00:22:54,020 --> 00:22:59,660
then run the SPF so that was the idea

535
00:22:56,360 --> 00:23:01,909
so as multiple users use that you keep

536
00:22:59,660 --> 00:23:06,530
giving<font color="#E5E5E5"> them</font><font color="#CCCCCC"> parts</font><font color="#E5E5E5"> until all parts</font><font color="#CCCCCC"> are</font>

537
00:23:01,910 --> 00:23:10,340
possible so that was the third scenario

538
00:23:06,530 --> 00:23:12,110
<font color="#E5E5E5">an</font><font color="#CCCCCC"> Exhibition easy interface</font><font color="#E5E5E5"> so the</font>

539
00:23:10,340 --> 00:23:14,330
output from the<font color="#CCCCCC"> C</font><font color="#E5E5E5"> SPF algorithm it gives</font>

540
00:23:12,110 --> 00:23:16,159
us the path as you can see it says MX 3

541
00:23:14,330 --> 00:23:17,629
MX 2 MX 5 that's still not<font color="#E5E5E5"> the</font>

542
00:23:16,160 --> 00:23:19,910
configuration that's still not<font color="#E5E5E5"> the</font><font color="#CCCCCC"> route</font>

543
00:23:17,630 --> 00:23:21,560
we just have the path<font color="#E5E5E5"> so we have to use</font>

544
00:23:19,910 --> 00:23:24,020
the code again<font color="#CCCCCC"> to find the information</font>

545
00:23:21,560 --> 00:23:26,350
<font color="#E5E5E5">as</font><font color="#CCCCCC"> to go</font><font color="#E5E5E5"> into MX 2 and what is</font><font color="#CCCCCC"> the IP</font>

546
00:23:24,020 --> 00:23:28,550
between MX 3 MX 2 and that's<font color="#E5E5E5"> how the</font>

547
00:23:26,350 --> 00:23:30,860
neighbor command looks<font color="#E5E5E5"> like you have an</font>

548
00:23:28,550 --> 00:23:32,480
IP reference you<font color="#E5E5E5"> announce the route so</font>

549
00:23:30,860 --> 00:23:34,189
again the code builds this during

550
00:23:32,480 --> 00:23:34,940
<font color="#E5E5E5">runtime dynamically without</font><font color="#CCCCCC"> any</font>

551
00:23:34,190 --> 00:23:38,300
intervention

552
00:23:34,940 --> 00:23:41,690
so once the doubt is built<font color="#E5E5E5"> XIV GP is the</font>

553
00:23:38,300 --> 00:23:44,480
interface<font color="#E5E5E5"> for us it establishes a bgp</font>

554
00:23:41,690 --> 00:23:46,730
session with the<font color="#CCCCCC"> vmx router</font><font color="#E5E5E5"> and it</font>

555
00:23:44,480 --> 00:23:49,190
announces this route and it goes sit in

556
00:23:46,730 --> 00:23:50,690
sits in the forwarding<font color="#E5E5E5"> table and once</font>

557
00:23:49,190 --> 00:23:52,580
that's<font color="#E5E5E5"> done this is</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> the routes will</font>

558
00:23:50,690 --> 00:23:54,470
look like you can<font color="#CCCCCC"> go into</font><font color="#E5E5E5"> all the</font>

559
00:23:52,580 --> 00:23:56,840
network so these are the<font color="#E5E5E5"> routes we saw</font>

560
00:23:54,470 --> 00:23:58,760
on the<font color="#E5E5E5"> vmx routers once the routes were</font>

561
00:23:56,840 --> 00:24:00,919
push as you can see you can see a label

562
00:23:58,760 --> 00:24:03,530
reference<font color="#E5E5E5"> and for</font><font color="#CCCCCC"> a given label you see</font>

563
00:24:00,920 --> 00:24:05,930
the exit interface and the destination

564
00:24:03,530 --> 00:24:07,700
<font color="#E5E5E5">for a particular destination IP so if</font>

565
00:24:05,930 --> 00:24:10,220
you're trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> reach from mx3 to MX</font><font color="#CCCCCC"> 5</font>

566
00:24:07,700 --> 00:24:11,030
it will<font color="#E5E5E5"> take the labeled paths and it</font>

567
00:24:10,220 --> 00:24:12,350
will take the path<font color="#CCCCCC"> that we've</font>

568
00:24:11,030 --> 00:24:15,590
<font color="#E5E5E5">manipulated it to take so we are</font>

569
00:24:12,350 --> 00:24:17,149
controlling<font color="#E5E5E5"> the network using code so</font>

570
00:24:15,590 --> 00:24:18,709
these are the<font color="#E5E5E5"> expected results these</font>

571
00:24:17,150 --> 00:24:20,990
were the labeled<font color="#E5E5E5"> paths that we wanted it</font>

572
00:24:18,710 --> 00:24:25,970
to<font color="#CCCCCC"> take here the screenshots proving</font>

573
00:24:20,990 --> 00:24:28,540
that so in summary we<font color="#E5E5E5"> learned a lot of</font>

574
00:24:25,970 --> 00:24:31,060
<font color="#E5E5E5">things we've been doing Sdn since</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> 1</font>

575
00:24:28,540 --> 00:24:32,740
<font color="#CCCCCC">at college so this</font><font color="#E5E5E5"> is a new</font><font color="#CCCCCC"> thing for us</font>

576
00:24:31,060 --> 00:24:34,659
there's a lot of things to learn<font color="#CCCCCC"> about</font>

577
00:24:32,740 --> 00:24:36,460
there were many ways to<font color="#E5E5E5"> parse the</font>

578
00:24:34,660 --> 00:24:38,230
topology information<font color="#CCCCCC"> as well they were</font>

579
00:24:36,460 --> 00:24:40,150
CLI there was different tools that<font color="#CCCCCC"> you</font>

580
00:24:38,230 --> 00:24:42,430
could use<font color="#E5E5E5"> we went with the</font><font color="#CCCCCC"> juniper API</font>

581
00:24:40,150 --> 00:24:43,960
because<font color="#E5E5E5"> it's dynamic</font><font color="#CCCCCC"> its reliable so</font>

582
00:24:42,430 --> 00:24:45,520
even if when you're<font color="#CCCCCC"> parsing the data you</font>

583
00:24:43,960 --> 00:24:47,650
<font color="#E5E5E5">don't find any data your code is not</font>

584
00:24:45,520 --> 00:24:49,750
going to break your code is still<font color="#E5E5E5"> going</font>

585
00:24:47,650 --> 00:24:51,490
<font color="#CCCCCC">to</font><font color="#E5E5E5"> work with whatever is available and</font>

586
00:24:49,750 --> 00:24:53,110
it parts us that data so that's<font color="#E5E5E5"> why even</font>

587
00:24:51,490 --> 00:24:55,240
<font color="#E5E5E5">though we didn't know the API that was</font>

588
00:24:53,110 --> 00:24:57,879
<font color="#CCCCCC">the right</font><font color="#E5E5E5"> way to do it</font><font color="#CCCCCC"> so that</font><font color="#E5E5E5"> we try to</font>

589
00:24:55,240 --> 00:24:59,980
learn that<font color="#E5E5E5"> figure it out and then go</font>

590
00:24:57,880 --> 00:25:01,330
about with<font color="#E5E5E5"> that and with the</font><font color="#CCCCCC"> CSP F as</font>

591
00:24:59,980 --> 00:25:03,880
well<font color="#CCCCCC"> four</font><font color="#E5E5E5"> different scenarios we had to</font>

592
00:25:01,330 --> 00:25:05,830
write different functions to<font color="#E5E5E5"> modify SPF</font>

593
00:25:03,880 --> 00:25:07,990
so that that would fit<font color="#E5E5E5"> the requirement</font>

594
00:25:05,830 --> 00:25:10,750
<font color="#CCCCCC">that they expected</font><font color="#E5E5E5"> us to achieve so was</font>

595
00:25:07,990 --> 00:25:13,780
fun<font color="#E5E5E5"> playing around with the SPF which we</font>

596
00:25:10,750 --> 00:25:16,090
knew<font color="#E5E5E5"> and tweak</font><font color="#CCCCCC"> it a little bit and with</font>

597
00:25:13,780 --> 00:25:18,600
<font color="#CCCCCC">exabyte where a lot</font><font color="#E5E5E5"> of issues installing</font>

598
00:25:16,090 --> 00:25:21,939
it<font color="#E5E5E5"> the installation was not clean on</font>

599
00:25:18,600 --> 00:25:23,800
using<font color="#E5E5E5"> Python 3 so and then with some</font>

600
00:25:21,940 --> 00:25:25,150
help<font color="#E5E5E5"> we figured out that you didn't have</font>

601
00:25:23,800 --> 00:25:26,770
to install the full features<font color="#E5E5E5"> you only</font>

602
00:25:25,150 --> 00:25:28,600
needed a bunch<font color="#E5E5E5"> of</font><font color="#CCCCCC"> features to</font><font color="#E5E5E5"> make these</font>

603
00:25:26,770 --> 00:25:30,010
things work<font color="#E5E5E5"> so once we were</font><font color="#CCCCCC"> able to</font><font color="#E5E5E5"> work</font>

604
00:25:28,600 --> 00:25:32,860
around that<font color="#E5E5E5"> we were able to solve the</font>

605
00:25:30,010 --> 00:25:35,440
issue<font color="#CCCCCC"> use this as a tool and kind</font><font color="#E5E5E5"> of</font>

606
00:25:32,860 --> 00:25:37,570
bring everything together<font color="#CCCCCC"> so</font><font color="#E5E5E5"> it was fun</font>

607
00:25:35,440 --> 00:25:39,250
it was<font color="#E5E5E5"> amazing to work</font><font color="#CCCCCC"> with some of the</font>

608
00:25:37,570 --> 00:25:41,350
best minds in<font color="#CCCCCC"> the industry</font><font color="#E5E5E5"> be in the</font>

609
00:25:39,250 --> 00:25:43,450
same room with them interact<font color="#E5E5E5"> with them</font>

610
00:25:41,350 --> 00:25:45,189
learn and to build build an end-to-end

611
00:25:43,450 --> 00:25:47,710
<font color="#CCCCCC">solution within</font><font color="#E5E5E5"> a matter of six and a</font>

612
00:25:45,190 --> 00:25:49,090
half<font color="#E5E5E5"> hours to</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of visualize what</font>

613
00:25:47,710 --> 00:25:52,060
would happen<font color="#E5E5E5"> and bring them all together</font>

614
00:25:49,090 --> 00:25:53,409
was exciting and it<font color="#CCCCCC"> was an</font><font color="#E5E5E5"> amazing</font>

615
00:25:52,060 --> 00:25:55,240
experience<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the first time we</font><font color="#CCCCCC"> are</font>

616
00:25:53,410 --> 00:25:57,220
<font color="#E5E5E5">working as a team as well so to work</font>

617
00:25:55,240 --> 00:25:58,690
together to be in sync and build that

618
00:25:57,220 --> 00:26:02,230
rapport was was a really good<font color="#E5E5E5"> experience</font>

619
00:25:58,690 --> 00:26:04,450
<font color="#CCCCCC">to</font><font color="#E5E5E5"> have and a lot</font><font color="#CCCCCC"> of credit to all our</font>

620
00:26:02,230 --> 00:26:06,190
team members we worked at this<font color="#E5E5E5"> together</font>

621
00:26:04,450 --> 00:26:08,350
and<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> credit</font><font color="#CCCCCC"> to professor Jose</font>

622
00:26:06,190 --> 00:26:10,810
Santos as well was here with<font color="#E5E5E5"> us</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> he</font>

623
00:26:08,350 --> 00:26:12,969
was<font color="#E5E5E5"> our guide through this as we worked</font>

624
00:26:10,810 --> 00:26:14,679
on it and<font color="#E5E5E5"> special thanks to all the</font>

625
00:26:12,970 --> 00:26:17,500
organizers<font color="#CCCCCC"> I think they did an amazing</font>

626
00:26:14,680 --> 00:26:19,360
job<font color="#E5E5E5"> putting together this event and have</font>

627
00:26:17,500 --> 00:26:21,730
remote past participants as<font color="#CCCCCC"> well that</font>

628
00:26:19,360 --> 00:26:24,810
was<font color="#E5E5E5"> great and thanks to all of you for</font>

629
00:26:21,730 --> 00:26:27,640
<font color="#CCCCCC">your attention this is a contact</font><font color="#E5E5E5"> details</font>

630
00:26:24,810 --> 00:26:29,200
<font color="#CCCCCC">if you've any questions we're</font><font color="#E5E5E5"> happy to</font>

631
00:26:27,640 --> 00:26:32,160
answer you can get in touch with<font color="#CCCCCC"> us</font><font color="#E5E5E5"> this</font>

632
00:26:29,200 --> 00:26:32,160
way thank<font color="#E5E5E5"> you</font>

633
00:26:33,680 --> 00:26:38,340
thank you

634
00:26:35,220 --> 00:26:44,210
bus work before<font color="#CCCCCC"> we Goff stage</font><font color="#E5E5E5"> tonight</font>

635
00:26:38,340 --> 00:26:48,990
<font color="#CCCCCC">two quick second</font><font color="#E5E5E5"> I want to go back and</font>

636
00:26:44,210 --> 00:26:54,320
<font color="#CCCCCC">their</font><font color="#E5E5E5"> their title logo which I got a lot</font>

637
00:26:48,990 --> 00:26:58,950
of the<font color="#CCCCCC"> cap I did I hit the</font><font color="#E5E5E5"> wrong button</font>

638
00:26:54,320 --> 00:27:01,320
<font color="#E5E5E5">there we go I'm gonna go</font><font color="#CCCCCC"> back for a</font>

639
00:26:58,950 --> 00:27:03,890
second because I thought that logo<font color="#CCCCCC"> was</font>

640
00:27:01,320 --> 00:27:03,889
just awesome

641
00:27:06,320 --> 00:27:13,129
that one the hurricane with<font color="#E5E5E5"> the bundle I</font>

642
00:27:10,850 --> 00:27:14,449
thought that was really<font color="#E5E5E5"> great</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> they</font>

643
00:27:13,130 --> 00:27:16,429
went that really<font color="#E5E5E5"> quickly so I just</font>

644
00:27:14,450 --> 00:27:18,049
<font color="#E5E5E5">wanted to pull that</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> okay</font>

645
00:27:16,429 --> 00:27:19,070
<font color="#E5E5E5">now</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> have lost</font><font color="#CCCCCC"> pot come</font><font color="#E5E5E5"> on stage</font>

646
00:27:18,049 --> 00:27:21,639
I'll get you back to<font color="#E5E5E5"> where you were</font>

647
00:27:19,070 --> 00:27:21,639
thank you

648
00:27:41,420 --> 00:27:46,620
<font color="#E5E5E5">okay</font>

649
00:27:42,990 --> 00:27:52,790
hi<font color="#CCCCCC"> I'm cutting with the lost pod team</font>

650
00:27:46,620 --> 00:27:58,560
<font color="#E5E5E5">also on our team we had say czar</font><font color="#CCCCCC"> Adrian</font>

651
00:27:52,790 --> 00:28:01,500
<font color="#E5E5E5">TJ and Joshua on our team</font><font color="#CCCCCC"> so our</font>

652
00:27:58,560 --> 00:28:03,690
<font color="#E5E5E5">approach for this hackathon</font><font color="#CCCCCC"> to break</font>

653
00:28:01,500 --> 00:28:06,990
<font color="#E5E5E5">down the problem and attack it we use</font>

654
00:28:03,690 --> 00:28:10,140
the NCC client with net cough to grab

655
00:28:06,990 --> 00:28:12,300
the topology<font color="#E5E5E5"> information from the</font><font color="#CCCCCC"> mx1</font>

656
00:28:10,140 --> 00:28:15,660
<font color="#E5E5E5">router from the</font><font color="#CCCCCC"> ted database and then</font>

657
00:28:12,300 --> 00:28:17,430
parse the<font color="#E5E5E5"> return XML into a Python data</font>

658
00:28:15,660 --> 00:28:21,030
structure where we<font color="#E5E5E5"> grab the attributes</font>

659
00:28:17,430 --> 00:28:25,400
and items<font color="#E5E5E5"> that we needed then we pass</font>

660
00:28:21,030 --> 00:28:30,060
<font color="#CCCCCC">the captured data through the network X</font>

661
00:28:25,400 --> 00:28:33,350
graphing<font color="#E5E5E5"> library to create</font><font color="#CCCCCC"> a undirected</font>

662
00:28:30,060 --> 00:28:36,960
graph and a digraph<font color="#E5E5E5"> for a directed</font><font color="#CCCCCC"> graph</font>

663
00:28:33,350 --> 00:28:39,270
<font color="#E5E5E5">to store the topology</font><font color="#CCCCCC"> information and</font>

664
00:28:36,960 --> 00:28:41,960
then use the algorithms that<font color="#E5E5E5"> come with</font>

665
00:28:39,270 --> 00:28:45,629
<font color="#CCCCCC">Network</font><font color="#E5E5E5"> X to compute the shortest</font><font color="#CCCCCC"> path</font>

666
00:28:41,960 --> 00:28:49,080
through the network<font color="#E5E5E5"> topology</font><font color="#CCCCCC"> then we</font>

667
00:28:45,630 --> 00:28:50,940
created separate functions to solve each

668
00:28:49,080 --> 00:28:54,060
of the four problems that we were given

669
00:28:50,940 --> 00:28:56,010
<font color="#E5E5E5">and we passed the graph data that we</font>

670
00:28:54,060 --> 00:28:58,260
collected from<font color="#E5E5E5"> the network to each of</font>

671
00:28:56,010 --> 00:29:01,080
those solver functions to solve the four

672
00:28:58,260 --> 00:29:04,970
problems<font color="#CCCCCC"> finally we take</font><font color="#E5E5E5"> the output</font>

673
00:29:01,080 --> 00:29:07,110
solved<font color="#E5E5E5"> list of the computed path and we</font>

674
00:29:04,970 --> 00:29:09,480
reiterate through the the graph

675
00:29:07,110 --> 00:29:13,229
structure<font color="#E5E5E5"> to pull out the loopback</font>

676
00:29:09,480 --> 00:29:16,200
addresses and the segment<font color="#E5E5E5"> labels to</font>

677
00:29:13,230 --> 00:29:21,930
generate<font color="#CCCCCC"> the</font><font color="#E5E5E5"> BGP Lu routes and then we</font>

678
00:29:16,200 --> 00:29:25,050
use the exa<font color="#CCCCCC"> btp BGP</font><font color="#E5E5E5"> demon to the mx3</font>

679
00:29:21,930 --> 00:29:29,310
router to advertise our BGP label stacks

680
00:29:25,050 --> 00:29:31,440
to install them in the network<font color="#E5E5E5"> so this</font>

681
00:29:29,310 --> 00:29:33,240
<font color="#E5E5E5">is just a view of the default state</font><font color="#CCCCCC"> of</font>

682
00:29:31,440 --> 00:29:35,160
the network<font color="#CCCCCC"> so it shows</font>

683
00:29:33,240 --> 00:29:37,740
we're on<font color="#CCCCCC"> MX</font><font color="#E5E5E5"> 3 and we're looking at the</font>

684
00:29:35,160 --> 00:29:39,870
loopback address for MX<font color="#E5E5E5"> 4 there's no</font>

685
00:29:37,740 --> 00:29:44,520
labels installed and the<font color="#E5E5E5"> trace route is</font>

686
00:29:39,870 --> 00:29:48,300
just kind of IP routed from MX 3 2 MX 1

687
00:29:44,520 --> 00:29:50,940
to<font color="#CCCCCC"> MX</font><font color="#E5E5E5"> for problem</font><font color="#CCCCCC"> 1 is we</font><font color="#E5E5E5"> just needed a</font>

688
00:29:48,300 --> 00:29:54,899
simple<font color="#E5E5E5"> compute the shortest path</font><font color="#CCCCCC"> from</font>

689
00:29:50,940 --> 00:29:58,020
x12 mx4<font color="#CCCCCC"> so you can see in the</font><font color="#E5E5E5"> the left</font>

690
00:29:54,900 --> 00:29:59,730
<font color="#E5E5E5">hand side here sorry right hand side we</font>

691
00:29:58,020 --> 00:30:01,440
have<font color="#CCCCCC"> the parsed out information</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font>

692
00:29:59,730 --> 00:30:04,770
got<font color="#CCCCCC"> from the NCC client with the router</font>

693
00:30:01,440 --> 00:30:07,050
loopback address and the rudder<font color="#E5E5E5"> segment</font>

694
00:30:04,770 --> 00:30:09,900
label and<font color="#E5E5E5"> then we have the list of links</font>

695
00:30:07,050 --> 00:30:11,970
<font color="#E5E5E5">on each of the MX routers with their</font><font color="#CCCCCC"> IGP</font>

696
00:30:09,900 --> 00:30:14,370
costs their bandwidth capacity on the

697
00:30:11,970 --> 00:30:17,430
link<font color="#E5E5E5"> and then the link segment label</font>

698
00:30:14,370 --> 00:30:18,840
that if we<font color="#CCCCCC"> needed</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use it so the</font>

699
00:30:17,430 --> 00:30:20,970
solution to<font color="#E5E5E5"> this problem was pretty</font>

700
00:30:18,840 --> 00:30:22,949
<font color="#CCCCCC">straightforward</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> just run the SPF</font>

701
00:30:20,970 --> 00:30:25,860
algorithm and it get returns at the

702
00:30:22,950 --> 00:30:29,550
<font color="#E5E5E5">bottom there the shortest path is from</font>

703
00:30:25,860 --> 00:30:33,300
<font color="#CCCCCC">mx3 MX 1 MX 4</font><font color="#E5E5E5"> and then we write that out</font>

704
00:30:29,550 --> 00:30:35,940
to a log file that<font color="#E5E5E5"> the X of B 2 P reads</font>

705
00:30:33,300 --> 00:30:39,110
and<font color="#CCCCCC"> it</font><font color="#E5E5E5"> solves the route so this just</font>

706
00:30:35,940 --> 00:30:43,920
shows<font color="#E5E5E5"> here on M X 3 that we now have a</font>

707
00:30:39,110 --> 00:30:46,969
<font color="#E5E5E5">labeled route to get to MX 4 and you can</font>

708
00:30:43,920 --> 00:30:50,900
<font color="#CCCCCC">see the label as well</font><font color="#E5E5E5"> in the trace road</font>

709
00:30:46,970 --> 00:30:54,870
problem<font color="#CCCCCC"> to was we need</font><font color="#E5E5E5"> to compute a</font>

710
00:30:50,900 --> 00:30:56,400
shortest<font color="#CCCCCC"> path from</font><font color="#E5E5E5"> m x3 to MX 4 but you</font>

711
00:30:54,870 --> 00:30:59,429
<font color="#CCCCCC">had</font><font color="#E5E5E5"> to have two hundred Meg's of</font>

712
00:30:56,400 --> 00:31:01,860
bandwidth<font color="#E5E5E5"> and so our solution</font><font color="#CCCCCC"> to this is</font>

713
00:30:59,430 --> 00:31:03,930
we loaded up<font color="#E5E5E5"> the graph we removed all</font>

714
00:31:01,860 --> 00:31:06,479
<font color="#CCCCCC">the edges that</font><font color="#E5E5E5"> had less</font><font color="#CCCCCC"> than 200 Meg's</font>

715
00:31:03,930 --> 00:31:08,550
of bandwidth and then we just computed a

716
00:31:06,480 --> 00:31:11,250
shortest path on the<font color="#E5E5E5"> remaining links and</font>

717
00:31:08,550 --> 00:31:14,010
at the bottom<font color="#CCCCCC"> there</font><font color="#E5E5E5"> the only path that</font>

718
00:31:11,250 --> 00:31:17,940
<font color="#E5E5E5">you could choose or get as a result</font><font color="#CCCCCC"> was</font>

719
00:31:14,010 --> 00:31:21,570
<font color="#E5E5E5">MX 3 to 2 over</font><font color="#CCCCCC"> to one and then down to 4</font>

720
00:31:17,940 --> 00:31:23,520
<font color="#CCCCCC">and again we installed</font><font color="#E5E5E5"> that and you can</font>

721
00:31:21,570 --> 00:31:26,909
now see that<font color="#E5E5E5"> we have to you know segment</font>

722
00:31:23,520 --> 00:31:30,480
<font color="#E5E5E5">labels in the show route command and the</font>

723
00:31:26,910 --> 00:31:35,040
trace route also shows the labels from

724
00:31:30,480 --> 00:31:37,650
<font color="#CCCCCC">mx3 to MX</font><font color="#E5E5E5"> 4</font><font color="#CCCCCC"> the third problem was a</font>

725
00:31:35,040 --> 00:31:40,889
little more<font color="#E5E5E5"> challenging</font><font color="#CCCCCC"> you had to do</font>

726
00:31:37,650 --> 00:31:42,840
<font color="#E5E5E5">compute two paths this time a path one</font>

727
00:31:40,890 --> 00:31:46,140
needed 200 Meg's of bandwidth and<font color="#E5E5E5"> past</font>

728
00:31:42,840 --> 00:31:49,770
<font color="#CCCCCC">six are sorry path to needed 60 Meg's of</font>

729
00:31:46,140 --> 00:31:54,230
bandwidth<font color="#E5E5E5"> so the first path</font><font color="#CCCCCC"> is from MX 3</font>

730
00:31:49,770 --> 00:31:57,000
to 4 the second path was from MX 5 to 4

731
00:31:54,230 --> 00:31:59,730
<font color="#E5E5E5">so our solution</font><font color="#CCCCCC"> to this is we created a</font>

732
00:31:57,000 --> 00:32:02,400
directional graph this<font color="#E5E5E5"> time and we</font>

733
00:31:59,730 --> 00:32:03,840
computed the path<font color="#CCCCCC"> 1 using that</font>

734
00:32:02,400 --> 00:32:07,559
directional graph and then

735
00:32:03,840 --> 00:32:10,049
we removed<font color="#E5E5E5"> the path one bandwidth</font><font color="#CCCCCC"> to two</font>

736
00:32:07,559 --> 00:32:12,750
hundred<font color="#CCCCCC"> Meg's from all the directional</font>

737
00:32:10,049 --> 00:32:17,039
links<font color="#E5E5E5"> that are used and then we went and</font>

738
00:32:12,750 --> 00:32:19,080
computed<font color="#E5E5E5"> up the shortest path for path</font>

739
00:32:17,039 --> 00:32:21,629
<font color="#CCCCCC">two but we removed</font><font color="#E5E5E5"> all the edges that</font>

740
00:32:19,080 --> 00:32:23,129
<font color="#E5E5E5">didn't have</font><font color="#CCCCCC"> sixty Meg's of bandwidth</font>

741
00:32:21,630 --> 00:32:27,720
available and we<font color="#E5E5E5"> ended up with this</font>

742
00:32:23,130 --> 00:32:30,299
<font color="#CCCCCC">result where path</font><font color="#E5E5E5"> one went the previous</font>

743
00:32:27,720 --> 00:32:31,980
route path<font color="#CCCCCC"> two kind of has to go on a</font>

744
00:32:30,299 --> 00:32:35,490
milk run the only<font color="#E5E5E5"> bandwidth left</font>

745
00:32:31,980 --> 00:32:37,770
available<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to go from</font><font color="#E5E5E5"> five to</font>

746
00:32:35,490 --> 00:32:42,720
two to three<font color="#CCCCCC"> to one</font><font color="#E5E5E5"> and then back down</font>

747
00:32:37,770 --> 00:32:44,490
to<font color="#E5E5E5"> four</font><font color="#CCCCCC"> we also did a second solution</font>

748
00:32:42,720 --> 00:32:48,120
<font color="#E5E5E5">one of our team members did where</font><font color="#CCCCCC"> we</font>

749
00:32:44,490 --> 00:32:50,820
actually<font color="#E5E5E5"> split the path bandwidth so the</font>

750
00:32:48,120 --> 00:32:52,739
first path you wanted<font color="#CCCCCC"> two hundred Meg's</font>

751
00:32:50,820 --> 00:32:54,840
on the shortest<font color="#CCCCCC"> path you could only</font><font color="#E5E5E5"> get</font>

752
00:32:52,740 --> 00:32:57,360
a hundred<font color="#E5E5E5"> so we provision that and</font>

753
00:32:54,840 --> 00:32:59,158
subtracted the bandwidth<font color="#E5E5E5"> and then went</font>

754
00:32:57,360 --> 00:33:00,600
and computed the next available<font color="#E5E5E5"> path</font>

755
00:32:59,159 --> 00:33:03,809
that could support the remaining

756
00:33:00,600 --> 00:33:06,418
bandwidth and so for<font color="#CCCCCC"> path we got like</font>

757
00:33:03,809 --> 00:33:08,668
two paths<font color="#CCCCCC"> to support 200 Meg's of</font>

758
00:33:06,419 --> 00:33:12,210
bandwidth<font color="#E5E5E5"> and then we repeated the same</font>

759
00:33:08,669 --> 00:33:15,059
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> for the second path and we end up</font>

760
00:33:12,210 --> 00:33:20,100
splitting it 50 Meg's on one way and 10

761
00:33:15,059 --> 00:33:22,260
Meg's on another problem<font color="#E5E5E5"> for was you had</font>

762
00:33:20,100 --> 00:33:24,990
<font color="#E5E5E5">to compute two disjoint paths to the</font>

763
00:33:22,260 --> 00:33:26,850
network<font color="#E5E5E5"> and so we used a very simple</font>

764
00:33:24,990 --> 00:33:29,909
algorithm for<font color="#E5E5E5"> this we computed the</font>

765
00:33:26,850 --> 00:33:31,889
shortest<font color="#E5E5E5"> path from</font><font color="#CCCCCC"> three to four</font><font color="#E5E5E5"> and we</font>

766
00:33:29,909 --> 00:33:34,620
removed all<font color="#E5E5E5"> those edges and then we</font>

767
00:33:31,890 --> 00:33:38,130
computed another shortest path and the

768
00:33:34,620 --> 00:33:40,139
<font color="#CCCCCC">we</font><font color="#E5E5E5"> got two disjoint paths from one</font><font color="#CCCCCC"> way</font>

769
00:33:38,130 --> 00:33:44,309
<font color="#E5E5E5">down one side and</font><font color="#CCCCCC"> the other path went</font>

770
00:33:40,140 --> 00:33:47,370
down the other<font color="#CCCCCC"> side our learnings</font><font color="#E5E5E5"> from</font>

771
00:33:44,309 --> 00:33:48,750
the hack<font color="#E5E5E5"> the initial problem I think</font><font color="#CCCCCC"> was</font>

772
00:33:47,370 --> 00:33:50,279
pretty daunting when<font color="#E5E5E5"> we started in the</font>

773
00:33:48,750 --> 00:33:52,529
<font color="#CCCCCC">morning but we</font><font color="#E5E5E5"> kind of broke</font><font color="#CCCCCC"> it into</font>

774
00:33:50,279 --> 00:33:53,820
three<font color="#E5E5E5"> sections</font><font color="#CCCCCC"> and that</font><font color="#E5E5E5"> really helped we</font>

775
00:33:52,529 --> 00:33:56,429
had one person<font color="#CCCCCC"> working</font><font color="#E5E5E5"> on data</font>

776
00:33:53,820 --> 00:33:58,559
collection<font color="#E5E5E5"> a couple people work on</font>

777
00:33:56,429 --> 00:34:01,380
solving<font color="#E5E5E5"> the problems and then a third</font>

778
00:33:58,559 --> 00:34:03,059
<font color="#E5E5E5">person was</font><font color="#CCCCCC"> working on the XO BGP and by</font>

779
00:34:01,380 --> 00:34:05,870
breaking<font color="#E5E5E5"> the problem apart that really</font>

780
00:34:03,059 --> 00:34:08,279
helped<font color="#CCCCCC"> I found it was a great way to</font>

781
00:34:05,870 --> 00:34:11,129
network<font color="#E5E5E5"> with other professionals and</font>

782
00:34:08,280 --> 00:34:14,070
<font color="#E5E5E5">learn something new</font><font color="#CCCCCC"> it also got</font>

783
00:34:11,129 --> 00:34:16,139
practical experience with the Python NCC

784
00:34:14,070 --> 00:34:17,340
client which we hadn't played with

785
00:34:16,139 --> 00:34:19,820
<font color="#CCCCCC">before now</font>

786
00:34:17,340 --> 00:34:24,240
a<font color="#E5E5E5"> X module which</font><font color="#CCCCCC"> is really great and</font>

787
00:34:19,820 --> 00:34:26,550
<font color="#CCCCCC">exit BGP for announcing the BGP</font><font color="#E5E5E5"> Lu label</font>

788
00:34:24,239 --> 00:34:29,429
stack information<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> the problems I</font>

789
00:34:26,550 --> 00:34:31,410
had<font color="#CCCCCC"> initially was trying to</font><font color="#E5E5E5"> get the</font><font color="#CCCCCC"> NCC</font>

790
00:34:29,429 --> 00:34:34,710
client RPC call to show the detail

791
00:34:31,409 --> 00:34:36,989
output and<font color="#CCCCCC"> is on juniper if the display</font>

792
00:34:34,710 --> 00:34:39,270
<font color="#CCCCCC">XML RPC</font><font color="#E5E5E5"> command is your friend because</font>

793
00:34:36,989 --> 00:34:41,850
<font color="#E5E5E5">it'll show</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> the exact call that you</font>

794
00:34:39,270 --> 00:34:44,580
need to make<font color="#E5E5E5"> and the options</font><font color="#CCCCCC"> that once I</font>

795
00:34:41,850 --> 00:34:46,770
found<font color="#E5E5E5"> that</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> helped me out just</font>

796
00:34:44,580 --> 00:34:48,449
a<font color="#E5E5E5"> comment about the network X module it</font>

797
00:34:46,770 --> 00:34:50,280
has a lot of<font color="#E5E5E5"> pre-built algorithms and</font>

798
00:34:48,449 --> 00:34:54,299
data structures<font color="#CCCCCC"> that are really useful</font>

799
00:34:50,280 --> 00:34:56,670
<font color="#E5E5E5">for</font><font color="#CCCCCC"> this kind of network</font><font color="#E5E5E5"> modeling and TJ</font>

800
00:34:54,300 --> 00:34:58,950
had a problem where with problem<font color="#CCCCCC"> that</font>

801
00:34:56,670 --> 00:35:01,080
disjoint<font color="#E5E5E5"> path where we can only get one</font>

802
00:34:58,950 --> 00:35:02,910
of<font color="#CCCCCC"> the paths installed originally and</font>

803
00:35:01,080 --> 00:35:05,250
it's because we forgot<font color="#E5E5E5"> to or we didn't</font>

804
00:35:02,910 --> 00:35:06,930
set a path identifier<font color="#E5E5E5"> on the two routes</font>

805
00:35:05,250 --> 00:35:09,860
so it kept switching<font color="#E5E5E5"> him back and forth</font>

806
00:35:06,930 --> 00:35:13,049
rather than installing<font color="#CCCCCC"> both and once we</font>

807
00:35:09,860 --> 00:35:15,900
<font color="#E5E5E5">put a path identifier both routes got</font>

808
00:35:13,050 --> 00:35:17,130
installed<font color="#CCCCCC"> and finally I just say I</font><font color="#E5E5E5"> think</font>

809
00:35:15,900 --> 00:35:19,500
<font color="#E5E5E5">it was a great event and I</font><font color="#CCCCCC"> would</font>

810
00:35:17,130 --> 00:35:21,570
encourage other people<font color="#CCCCCC"> to join one of</font>

811
00:35:19,500 --> 00:35:25,310
the hackathons<font color="#CCCCCC"> in the future so I we are</font>

812
00:35:21,570 --> 00:35:25,310
<font color="#E5E5E5">really enjoyed it thank you</font>

813
00:35:26,080 --> 00:35:30,630
[Music]

814
00:35:27,840 --> 00:35:33,750
<font color="#CCCCCC">thank you</font><font color="#E5E5E5"> lost pod team</font><font color="#CCCCCC"> thanks again</font><font color="#E5E5E5"> to</font>

815
00:35:30,630 --> 00:35:36,030
all<font color="#CCCCCC"> of our hackathon participants the</font>

816
00:35:33,750 --> 00:35:40,130
next one will be<font color="#E5E5E5"> at the next</font><font color="#CCCCCC"> nanog and</font>

817
00:35:36,030 --> 00:35:40,130
we hope to<font color="#CCCCCC"> see you there thank you</font>

818
00:35:40,160 --> 00:35:46,549
[Applause]

819
00:35:51,390 --> 00:35:53,450
you

