1
00:00:00,469 --> 00:00:04,170
<font color="#CCCCCC">okay folks let's go ahead and get</font>

2
00:00:02,610 --> 00:00:05,759
started hopefully everyone had a had a

3
00:00:04,170 --> 00:00:07,560
<font color="#E5E5E5">good night last night and let's give a</font>

4
00:00:05,759 --> 00:00:09,000
round of applause<font color="#CCCCCC"> to our sponsors</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> my</font>

5
00:00:07,560 --> 00:00:15,660
last<font color="#E5E5E5"> night social that was pretty great</font>

6
00:00:09,000 --> 00:00:18,710
huh<font color="#CCCCCC"> all right first up we have a pitcher</font>

7
00:00:15,660 --> 00:00:18,710
<font color="#CCCCCC">Luca from</font><font color="#E5E5E5"> Microsoft</font>

8
00:00:19,279 --> 00:00:26,400
good morning<font color="#CCCCCC"> a</font><font color="#E5E5E5"> family early last night</font>

9
00:00:23,490 --> 00:00:28,409
<font color="#E5E5E5">was great I agree so I guess it's hard</font>

10
00:00:26,400 --> 00:00:31,198
<font color="#E5E5E5">to come in this</font><font color="#CCCCCC"> morning</font>

11
00:00:28,410 --> 00:00:33,180
I'll<font color="#E5E5E5"> take a bit short and next 40</font>

12
00:00:31,199 --> 00:00:36,450
minutes<font color="#E5E5E5"> we're going to talk about the</font>

13
00:00:33,180 --> 00:00:40,019
project we<font color="#E5E5E5"> had at Microsoft on data</font>

14
00:00:36,450 --> 00:00:43,950
collection<font color="#E5E5E5"> on specifically a net flow as</font>

15
00:00:40,020 --> 00:00:46,590
<font color="#E5E5E5">flow and our</font><font color="#CCCCCC"> simple</font><font color="#E5E5E5"> data collection for</font>

16
00:00:43,950 --> 00:00:49,590
<font color="#CCCCCC">our network it's called building</font>

17
00:00:46,590 --> 00:00:52,469
<font color="#E5E5E5">scalable</font><font color="#CCCCCC"> CMD pipeline but it essentially</font>

18
00:00:49,590 --> 00:00:56,850
talks about mostly using big data for

19
00:00:52,469 --> 00:00:59,520
<font color="#CCCCCC">data</font><font color="#E5E5E5"> analysis</font><font color="#CCCCCC"> so presentations fit in</font>

20
00:00:56,850 --> 00:01:02,070
<font color="#CCCCCC">two sections</font><font color="#E5E5E5"> first one describes a</font>

21
00:00:59,520 --> 00:01:05,430
problem statement<font color="#CCCCCC"> the problem we try</font><font color="#E5E5E5"> to</font>

22
00:01:02,070 --> 00:01:10,110
solve<font color="#E5E5E5"> and second one bigger one talks</font>

23
00:01:05,430 --> 00:01:12,659
<font color="#CCCCCC">about</font><font color="#E5E5E5"> that resolution so let's talk</font>

24
00:01:10,110 --> 00:01:14,570
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the problem first so a problem</font><font color="#CCCCCC"> we</font>

25
00:01:12,659 --> 00:01:17,909
deal with is the collect a lot of data

26
00:01:14,570 --> 00:01:20,479
<font color="#E5E5E5">mostly NetFlow</font><font color="#CCCCCC"> J</font><font color="#E5E5E5"> flow idée fixe always</font>

27
00:01:17,909 --> 00:01:23,670
kind of information from our devices

28
00:01:20,479 --> 00:01:26,400
<font color="#E5E5E5">both from a core network and</font><font color="#CCCCCC"> Dettol</font>

29
00:01:23,670 --> 00:01:28,439
<font color="#CCCCCC">devices as you know basaltic use cases</font>

30
00:01:26,400 --> 00:01:30,329
for<font color="#CCCCCC"> natural data it's very well known</font>

31
00:01:28,439 --> 00:01:33,839
capacity planning building<font color="#E5E5E5"> all this</font>

32
00:01:30,329 --> 00:01:38,490
stuff<font color="#E5E5E5"> because difference and challenge</font>

33
00:01:33,840 --> 00:01:39,960
<font color="#CCCCCC">for us</font><font color="#E5E5E5"> was the scale</font><font color="#CCCCCC"> I deal with</font><font color="#E5E5E5"> well if</font>

34
00:01:38,490 --> 00:01:44,360
it start<font color="#E5E5E5"> with</font><font color="#CCCCCC"> corner work is a bit bad</font>

35
00:01:39,960 --> 00:01:47,070
<font color="#CCCCCC">maybe</font><font color="#E5E5E5"> house of devices NetFlow</font><font color="#CCCCCC"> idée fixe</font>

36
00:01:44,360 --> 00:01:50,039
<font color="#CCCCCC">but once you move data center</font><font color="#E5E5E5"> once you</font>

37
00:01:47,070 --> 00:01:53,220
start<font color="#CCCCCC"> letting data use an</font><font color="#E5E5E5"> S flow it gets</font>

38
00:01:50,040 --> 00:01:54,899
much more challenging<font color="#E5E5E5"> so basic problem</font>

39
00:01:53,220 --> 00:01:57,570
is<font color="#CCCCCC"> that the volume</font><font color="#E5E5E5"> of data is</font>

40
00:01:54,899 --> 00:02:00,899
proportional to<font color="#E5E5E5"> the traffic rate for s</font>

41
00:01:57,570 --> 00:02:03,839
flow security hit the traffic rates of

42
00:02:00,899 --> 00:02:07,860
<font color="#CCCCCC">Honus megabits of data get going to</font><font color="#E5E5E5"> your</font>

43
00:02:03,840 --> 00:02:11,340
collectors and our specific<font color="#E5E5E5"> of our</font>

44
00:02:07,860 --> 00:02:12,540
system was bad<font color="#E5E5E5"> at Microsoft we have that</font>

45
00:02:11,340 --> 00:02:14,640
same multiple group

46
00:02:12,540 --> 00:02:17,340
that have slightly<font color="#CCCCCC"> different approaches</font>

47
00:02:14,640 --> 00:02:19,798
<font color="#CCCCCC">to data analysis</font><font color="#E5E5E5"> they say some</font><font color="#CCCCCC"> people</font>

48
00:02:17,340 --> 00:02:22,260
want to<font color="#E5E5E5"> do real-time processing and some</font>

49
00:02:19,799 --> 00:02:25,319
teams<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to actually archive and</font>

50
00:02:22,260 --> 00:02:27,298
analyze data<font color="#E5E5E5"> historically and so for</font>

51
00:02:25,319 --> 00:02:29,940
this<font color="#E5E5E5"> to happen</font><font color="#CCCCCC"> people want</font><font color="#E5E5E5"> to get the</font>

52
00:02:27,299 --> 00:02:33,420
same<font color="#E5E5E5"> feed of data in real time basically</font>

53
00:02:29,940 --> 00:02:35,879
<font color="#E5E5E5">for multiple and other systems so this</font>

54
00:02:33,420 --> 00:02:40,738
is specific<font color="#E5E5E5"> want to get the data</font><font color="#CCCCCC"> to</font>

55
00:02:35,879 --> 00:02:42,120
multiple<font color="#E5E5E5"> recipients at the same time in</font>

56
00:02:40,739 --> 00:02:43,950
addition<font color="#CCCCCC"> to not flow data</font>

57
00:02:42,120 --> 00:02:47,129
the other big thing we need to<font color="#CCCCCC"> monitor</font>

58
00:02:43,950 --> 00:02:49,200
is<font color="#E5E5E5"> the Rosen</font><font color="#CCCCCC"> state in a</font><font color="#E5E5E5"> presentation</font>

59
00:02:47,129 --> 00:02:51,840
again before<font color="#CCCCCC"> it Nana</font><font color="#E5E5E5"> who described that</font>

60
00:02:49,200 --> 00:02:54,629
our<font color="#CCCCCC"> data centers use BGP exclusively for</font>

61
00:02:51,840 --> 00:02:56,760
routing<font color="#E5E5E5"> everywhere and of course BGP</font><font color="#CCCCCC"> is</font>

62
00:02:54,629 --> 00:03:00,450
a protocol in the core<font color="#E5E5E5"> as an</font><font color="#CCCCCC"> overlay</font>

63
00:02:56,760 --> 00:03:03,870
<font color="#CCCCCC">browsing system so this way collecting</font>

64
00:03:00,450 --> 00:03:06,839
this data is<font color="#CCCCCC"> crucial to</font><font color="#E5E5E5"> Mitel network</font>

65
00:03:03,870 --> 00:03:09,329
health and we need to<font color="#CCCCCC"> capture the life</font>

66
00:03:06,840 --> 00:03:11,280
state of all devices<font color="#E5E5E5"> all</font><font color="#CCCCCC"> buffet tables</font>

67
00:03:09,329 --> 00:03:14,819
and every device<font color="#E5E5E5"> in data center in the</font>

68
00:03:11,280 --> 00:03:18,269
core<font color="#E5E5E5"> and obviously</font><font color="#CCCCCC"> four core boxes</font><font color="#E5E5E5"> this</font>

69
00:03:14,819 --> 00:03:20,339
great sort of state<font color="#E5E5E5"> basically full</font><font color="#CCCCCC"> full</font>

70
00:03:18,269 --> 00:03:22,769
<font color="#CCCCCC">ocean</font><font color="#E5E5E5"> table for data center is much</font>

71
00:03:20,340 --> 00:03:25,949
smaller but<font color="#E5E5E5"> with much more devices to</font>

72
00:03:22,769 --> 00:03:28,079
<font color="#CCCCCC">monitor and there's nothing special</font>

73
00:03:25,949 --> 00:03:28,799
about monitoring<font color="#E5E5E5"> you just</font><font color="#CCCCCC"> spill to all</font>

74
00:03:28,079 --> 00:03:30,419
devices

75
00:03:28,799 --> 00:03:32,730
the only challenge that the amount of

76
00:03:30,419 --> 00:03:37,440
peering sessions<font color="#E5E5E5"> you have to create to</font>

77
00:03:32,730 --> 00:03:39,179
all these boxes in data centers<font color="#CCCCCC"> Everlast</font>

78
00:03:37,440 --> 00:03:42,269
<font color="#E5E5E5">the last thing is</font><font color="#CCCCCC"> that once you get</font>

79
00:03:39,180 --> 00:03:44,370
always<font color="#E5E5E5"> data net flow in</font><font color="#CCCCCC"> BGP in your</font>

80
00:03:42,269 --> 00:03:46,319
storage system<font color="#CCCCCC"> you need to analyze this</font>

81
00:03:44,370 --> 00:03:49,530
<font color="#E5E5E5">so first challenge is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> storage</font>

82
00:03:46,319 --> 00:03:51,388
because a net flow and as flow is<font color="#CCCCCC"> they</font>

83
00:03:49,530 --> 00:03:54,540
<font color="#E5E5E5">gets you two kinds of terabytes and</font>

84
00:03:51,389 --> 00:03:56,069
petabytes of data<font color="#E5E5E5"> very quickly</font><font color="#CCCCCC"> few</font>

85
00:03:54,540 --> 00:03:58,918
<font color="#E5E5E5">months and this such a beautiful a</font>

86
00:03:56,069 --> 00:04:01,488
second one the<font color="#CCCCCC"> actual analysis let's say</font>

87
00:03:58,919 --> 00:04:03,959
just trying to build<font color="#CCCCCC"> tronic matrix or</font>

88
00:04:01,489 --> 00:04:05,940
trying<font color="#CCCCCC"> to correlate</font><font color="#E5E5E5"> BGP and</font><font color="#CCCCCC"> Earthfall</font>

89
00:04:03,959 --> 00:04:08,340
data creates a huge amount<font color="#E5E5E5"> of</font>

90
00:04:05,940 --> 00:04:11,099
<font color="#E5E5E5">computation work something which is not</font>

91
00:04:08,340 --> 00:04:17,250
<font color="#E5E5E5">easy to do so using sequel database or</font>

92
00:04:11,099 --> 00:04:19,680
using<font color="#E5E5E5"> any</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> traditional approach so</font>

93
00:04:17,250 --> 00:04:22,108
we<font color="#E5E5E5"> start with them solution now and talk</font>

94
00:04:19,680 --> 00:04:24,180
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the collection infrastructure or</font>

95
00:04:22,108 --> 00:04:25,700
in other ways in other words how<font color="#E5E5E5"> we</font>

96
00:04:24,180 --> 00:04:29,210
<font color="#CCCCCC">actually capture and</font>

97
00:04:25,700 --> 00:04:32,120
<font color="#CCCCCC">of data so first one it's up just brief</font>

98
00:04:29,210 --> 00:04:34,099
structure of the whole<font color="#CCCCCC"> system so say you</font>

99
00:04:32,120 --> 00:04:36,920
<font color="#E5E5E5">have the guys who export the data the</font>

100
00:04:34,100 --> 00:04:38,450
routers<font color="#E5E5E5"> then you get this data to a</font>

101
00:04:36,920 --> 00:04:41,090
system which that's<font color="#E5E5E5"> application and</font>

102
00:04:38,450 --> 00:04:43,070
copies<font color="#E5E5E5"> the stream to multiple recipients</font>

103
00:04:41,090 --> 00:04:45,169
and when<font color="#CCCCCC"> those recipients do whatever</font>

104
00:04:43,070 --> 00:04:47,140
you want<font color="#CCCCCC"> let's say</font><font color="#E5E5E5"> here was a branch</font>

105
00:04:45,170 --> 00:04:49,400
which says collect<font color="#E5E5E5"> store</font><font color="#CCCCCC"> and process</font>

106
00:04:47,140 --> 00:04:51,800
<font color="#E5E5E5">which is more like</font><font color="#CCCCCC"> a flight processing</font>

107
00:04:49,400 --> 00:04:53,719
and the other branch<font color="#CCCCCC"> says just process</font>

108
00:04:51,800 --> 00:04:58,400
<font color="#E5E5E5">just more of a</font><font color="#CCCCCC"> real-time</font><font color="#E5E5E5"> processing for</font>

109
00:04:53,720 --> 00:05:01,970
<font color="#E5E5E5">natural data as you can see we only</font><font color="#CCCCCC"> try</font>

110
00:04:58,400 --> 00:05:03,500
<font color="#E5E5E5">to build one branch of this system let's</font>

111
00:05:01,970 --> 00:05:06,800
see if we call this offline processing

112
00:05:03,500 --> 00:05:07,730
<font color="#E5E5E5">so we didn't want</font><font color="#CCCCCC"> to actually process</font>

113
00:05:06,800 --> 00:05:10,250
data<font color="#E5E5E5"> in</font><font color="#CCCCCC"> real time</font>

114
00:05:07,730 --> 00:05:12,920
<font color="#E5E5E5">let's see in order of seconds respond</font>

115
00:05:10,250 --> 00:05:15,320
order of seconds so we don't want to

116
00:05:12,920 --> 00:05:17,210
have a solution<font color="#E5E5E5"> for</font><font color="#CCCCCC"> everyone which is</font>

117
00:05:15,320 --> 00:05:20,840
<font color="#E5E5E5">with the system</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> collect this data and</font>

118
00:05:17,210 --> 00:05:22,310
run some analysis reports in this so

119
00:05:20,840 --> 00:05:24,979
exporting data is what<font color="#E5E5E5"> so</font>

120
00:05:22,310 --> 00:05:27,560
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> me every box enable</font>

121
00:05:24,980 --> 00:05:30,830
<font color="#CCCCCC">net flow IP fix</font><font color="#E5E5E5"> as flow and send this</font>

122
00:05:27,560 --> 00:05:33,320
data to a special IP address which we

123
00:05:30,830 --> 00:05:36,469
<font color="#E5E5E5">talk about</font><font color="#CCCCCC"> next</font><font color="#E5E5E5"> the biggest trick here</font>

124
00:05:33,320 --> 00:05:39,020
is that number of devices is on what<font color="#CCCCCC"> of</font>

125
00:05:36,470 --> 00:05:42,410
thousands let's see if you enable<font color="#CCCCCC"> s flow</font>

126
00:05:39,020 --> 00:05:44,599
<font color="#CCCCCC">and L top</font><font color="#E5E5E5"> of rack so one day the center</font>

127
00:05:42,410 --> 00:05:46,780
is a few thousands of<font color="#E5E5E5"> tours and the</font>

128
00:05:44,600 --> 00:05:49,400
other one same<font color="#E5E5E5"> few thousand of Tours</font>

129
00:05:46,780 --> 00:05:52,669
<font color="#E5E5E5">this gives you like pretty large volume</font>

130
00:05:49,400 --> 00:05:54,799
of data<font color="#E5E5E5"> quickly for s flow of course we</font>

131
00:05:52,670 --> 00:05:57,320
collect not just the flow data<font color="#E5E5E5"> but also</font>

132
00:05:54,800 --> 00:06:00,290
we counters<font color="#CCCCCC"> interface counters which is</font>

133
00:05:57,320 --> 00:06:02,540
now a nice part of s flow<font color="#E5E5E5"> you can push</font>

134
00:06:00,290 --> 00:06:04,820
the counters from<font color="#E5E5E5"> every</font><font color="#CCCCCC"> interface on the</font>

135
00:06:02,540 --> 00:06:06,800
device to<font color="#CCCCCC"> your collective system just</font>

136
00:06:04,820 --> 00:06:08,870
more like SNMP

137
00:06:06,800 --> 00:06:11,990
I have<font color="#CCCCCC"> nib</font><font color="#E5E5E5"> being pushed to you're a</font>

138
00:06:08,870 --> 00:06:14,450
collector<font color="#CCCCCC"> and of course this</font><font color="#E5E5E5"> data is</font>

139
00:06:11,990 --> 00:06:16,880
always sampled<font color="#CCCCCC"> not</font><font color="#E5E5E5"> because of the</font>

140
00:06:14,450 --> 00:06:19,280
<font color="#CCCCCC">collapses</font><font color="#E5E5E5"> limitation but mostly because</font>

141
00:06:16,880 --> 00:06:21,740
<font color="#CCCCCC">of the Box</font><font color="#E5E5E5"> might explore this data can't</font>

142
00:06:19,280 --> 00:06:24,849
really handle traffic in<font color="#E5E5E5"> s a</font><font color="#CCCCCC"> one to one</font>

143
00:06:21,740 --> 00:06:27,350
ratio<font color="#E5E5E5"> so the core boxes had a sample</font>

144
00:06:24,850 --> 00:06:30,260
<font color="#CCCCCC">which have a</font><font color="#E5E5E5"> sample ever had a sample</font>

145
00:06:27,350 --> 00:06:33,970
<font color="#CCCCCC">and our problem is of course</font><font color="#E5E5E5"> different</font>

146
00:06:30,260 --> 00:06:33,969
boxes have different simple ratios

147
00:06:34,970 --> 00:06:39,620
so now we have this large one who<font color="#E5E5E5"> paid</font>

148
00:06:37,640 --> 00:06:42,289
in flight<font color="#E5E5E5"> you need to send it somewhere</font>

149
00:06:39,620 --> 00:06:45,230
<font color="#E5E5E5">which can</font><font color="#CCCCCC"> board</font><font color="#E5E5E5"> balance stripe and</font>

150
00:06:42,290 --> 00:06:49,310
somehow there is<font color="#CCCCCC"> data</font><font color="#E5E5E5"> to collectors and</font>

151
00:06:45,230 --> 00:06:51,650
<font color="#E5E5E5">we use this system we call sob it's</font>

152
00:06:49,310 --> 00:06:53,600
<font color="#E5E5E5">called</font><font color="#CCCCCC"> skull</font><font color="#E5E5E5"> balancing could be several</font>

153
00:06:51,650 --> 00:06:57,469
<font color="#E5E5E5">balance in which we show it</font><font color="#CCCCCC"> before but</font>

154
00:06:53,600 --> 00:06:59,810
the system is a<font color="#CCCCCC"> a</font><font color="#E5E5E5"> very simple load</font>

155
00:06:57,470 --> 00:07:02,510
<font color="#E5E5E5">balancing solution which is built in</font>

156
00:06:59,810 --> 00:07:04,940
<font color="#E5E5E5">data center and uses</font><font color="#CCCCCC"> two-stage world</font>

157
00:07:02,510 --> 00:07:08,060
<font color="#CCCCCC">balancing the first stage actually used</font>

158
00:07:04,940 --> 00:07:10,130
<font color="#E5E5E5">any</font><font color="#CCCCCC"> cast in</font><font color="#E5E5E5"> BGP to spray traffic</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> most</font>

159
00:07:08,060 --> 00:07:11,870
<font color="#E5E5E5">load balancers and</font><font color="#CCCCCC"> the second stage</font><font color="#E5E5E5"> is</font>

160
00:07:10,130 --> 00:07:14,600
actually<font color="#CCCCCC"> sends traffic</font><font color="#E5E5E5"> to destination</font>

161
00:07:11,870 --> 00:07:18,370
addresses<font color="#E5E5E5"> so as you can see</font><font color="#CCCCCC"> it's a very</font>

162
00:07:14,600 --> 00:07:21,140
<font color="#E5E5E5">simple</font><font color="#CCCCCC"> dsl solution</font><font color="#E5E5E5"> the actual return</font>

163
00:07:18,370 --> 00:07:23,360
<font color="#CCCCCC">but since it's so simple it's actually</font>

164
00:07:21,140 --> 00:07:25,340
<font color="#CCCCCC">very</font><font color="#E5E5E5"> scalable we can</font><font color="#CCCCCC"> easily add more</font>

165
00:07:23,360 --> 00:07:30,620
elements<font color="#E5E5E5"> and grow the</font><font color="#CCCCCC"> capacity of his</font>

166
00:07:25,340 --> 00:07:31,849
pipeline<font color="#E5E5E5"> almost to unlimited numbers so</font>

167
00:07:30,620 --> 00:07:33,890
the<font color="#E5E5E5"> diagram kind of gives you</font>

168
00:07:31,850 --> 00:07:37,220
<font color="#E5E5E5">illustration of</font><font color="#CCCCCC"> his concept was a very</font>

169
00:07:33,890 --> 00:07:39,530
simple<font color="#CCCCCC"> topology we data center network</font>

170
00:07:37,220 --> 00:07:41,570
<font color="#CCCCCC">for us would be</font><font color="#E5E5E5"> elements actual load</font>

171
00:07:39,530 --> 00:07:43,640
balancers<font color="#E5E5E5"> they'd get the traumatic and</font>

172
00:07:41,570 --> 00:07:47,810
the<font color="#E5E5E5"> events</font><font color="#CCCCCC"> brand which</font><font color="#E5E5E5"> is very traffic</font>

173
00:07:43,640 --> 00:07:49,370
to the actual destinations<font color="#CCCCCC"> or servers so</font>

174
00:07:47,810 --> 00:07:51,260
I mentioned replication of data and

175
00:07:49,370 --> 00:07:53,900
<font color="#E5E5E5">replication is simply done in mode</font>

176
00:07:51,260 --> 00:07:55,610
balancers<font color="#E5E5E5"> so as opposed to trying to</font>

177
00:07:53,900 --> 00:07:58,219
balance traffic<font color="#E5E5E5"> over small destinations</font>

178
00:07:55,610 --> 00:08:00,790
<font color="#E5E5E5">what you do you take</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> packets and send</font>

179
00:07:58,220 --> 00:08:03,010
them to<font color="#E5E5E5"> all this initiative at once</font>

180
00:08:00,790 --> 00:08:05,770
so what limitation here is that

181
00:08:03,010 --> 00:08:09,080
essentially<font color="#CCCCCC"> this implements some sort of</font>

182
00:08:05,770 --> 00:08:12,109
<font color="#E5E5E5">H multicast so your load balancers have</font>

183
00:08:09,080 --> 00:08:13,520
decode packets and times proportional

184
00:08:12,110 --> 00:08:15,919
number<font color="#CCCCCC"> of collectors and sell them to</font>

185
00:08:13,520 --> 00:08:19,010
destinations so beyond the bottleneck

186
00:08:15,919 --> 00:08:22,580
might be the<font color="#E5E5E5"> actual</font><font color="#CCCCCC"> Allegan</font><font color="#E5E5E5"> traffic rate</font>

187
00:08:19,010 --> 00:08:24,800
at the box<font color="#CCCCCC"> at this</font><font color="#E5E5E5"> application but what</font>

188
00:08:22,580 --> 00:08:27,010
was it like I said<font color="#E5E5E5"> it's really easy</font><font color="#CCCCCC"> to</font>

189
00:08:24,800 --> 00:08:30,470
<font color="#E5E5E5">add more boxes</font><font color="#CCCCCC"> to the system and</font>

190
00:08:27,010 --> 00:08:32,750
increase the<font color="#CCCCCC"> capacity and also</font><font color="#E5E5E5"> important</font>

191
00:08:30,470 --> 00:08:35,930
to note is that were multiple

192
00:08:32,750 --> 00:08:37,789
sob systems in<font color="#CCCCCC"> difficult centers</font><font color="#E5E5E5"> and you</font>

193
00:08:35,929 --> 00:08:40,579
export data to<font color="#E5E5E5"> any</font><font color="#CCCCCC"> cached IP address</font>

194
00:08:37,789 --> 00:08:43,338
<font color="#E5E5E5">such that it always hits the closest one</font>

195
00:08:40,580 --> 00:08:45,200
<font color="#CCCCCC">and so this way</font><font color="#E5E5E5"> implements some sort the</font>

196
00:08:43,339 --> 00:08:47,540
<font color="#E5E5E5">first simple global load balancing</font>

197
00:08:45,200 --> 00:08:48,740
system<font color="#CCCCCC"> so you always pick up</font><font color="#E5E5E5"> the cost of</font>

198
00:08:47,540 --> 00:08:50,300
<font color="#E5E5E5">all balancer</font>

199
00:08:48,740 --> 00:08:57,709
and then just<font color="#E5E5E5"> advocates data to the</font>

200
00:08:50,300 --> 00:08:59,959
actual collectors<font color="#CCCCCC"> just normal servers</font>

201
00:08:57,709 --> 00:09:01,760
what's<font color="#CCCCCC"> it normal it's not</font><font color="#E5E5E5"> like very</font>

202
00:08:59,959 --> 00:09:05,779
normal<font color="#CCCCCC"> because we take them</font><font color="#E5E5E5"> from this</font>

203
00:09:01,760 --> 00:09:09,050
server pools<font color="#E5E5E5"> we are fungible clusters</font>

204
00:09:05,779 --> 00:09:10,760
<font color="#E5E5E5">that we have for our online services so</font>

205
00:09:09,050 --> 00:09:12,410
basically there is a system which

206
00:09:10,760 --> 00:09:14,600
manages<font color="#E5E5E5"> to server pools and every data</font>

207
00:09:12,410 --> 00:09:17,719
center<font color="#E5E5E5"> and you can</font><font color="#CCCCCC"> easily provision new</font>

208
00:09:14,600 --> 00:09:20,120
servers<font color="#E5E5E5"> deploy</font><font color="#CCCCCC"> them image fan and deploy</font>

209
00:09:17,720 --> 00:09:21,880
your<font color="#CCCCCC"> a software very quickly</font><font color="#E5E5E5"> so you can</font>

210
00:09:20,120 --> 00:09:26,000
basically<font color="#E5E5E5"> add new collectives</font><font color="#CCCCCC"> on-demand</font>

211
00:09:21,880 --> 00:09:27,709
<font color="#E5E5E5">from</font><font color="#CCCCCC"> a common hodgman per structure with</font>

212
00:09:26,000 --> 00:09:29,690
my<font color="#CCCCCC"> BBM's we smile the actual physical</font>

213
00:09:27,709 --> 00:09:32,209
servers but it's really<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> add more</font>

214
00:09:29,690 --> 00:09:35,450
collectors if you need so once again

215
00:09:32,209 --> 00:09:38,930
it's a blast step of a<font color="#E5E5E5"> collection it's</font>

216
00:09:35,450 --> 00:09:40,640
the scalable result a scalable system<font color="#E5E5E5"> to</font>

217
00:09:38,930 --> 00:09:43,819
adding more<font color="#E5E5E5"> collectors to the pipeline</font>

218
00:09:40,640 --> 00:09:46,270
<font color="#E5E5E5">and the nice</font><font color="#CCCCCC"> thing is</font><font color="#E5E5E5"> that I saw this</font>

219
00:09:43,820 --> 00:09:48,620
system what balancer essentially

220
00:09:46,270 --> 00:09:51,290
partitions the<font color="#E5E5E5"> data when said to</font>

221
00:09:48,620 --> 00:09:53,029
sensitive servers<font color="#E5E5E5"> so basically every</font>

222
00:09:51,290 --> 00:09:55,670
server will receive<font color="#CCCCCC"> as</font><font color="#E5E5E5"> a portion or a</font>

223
00:09:53,029 --> 00:09:58,490
party partial view of<font color="#CCCCCC"> say NetFlow data</font>

224
00:09:55,670 --> 00:10:01,250
<font color="#E5E5E5">or</font><font color="#CCCCCC"> as flow data and all</font><font color="#E5E5E5"> of these devices</font>

225
00:09:58,490 --> 00:10:03,350
<font color="#CCCCCC">actually communicate to each other which</font>

226
00:10:01,250 --> 00:10:06,320
<font color="#CCCCCC">is</font><font color="#E5E5E5"> store the</font><font color="#CCCCCC"> data and then upload it</font><font color="#E5E5E5"> to</font>

227
00:10:03,350 --> 00:10:08,060
actual<font color="#CCCCCC"> another engine so it's really</font>

228
00:10:06,320 --> 00:10:14,120
<font color="#CCCCCC">easy to scale the system by adding</font><font color="#E5E5E5"> more</font>

229
00:10:08,060 --> 00:10:16,250
components and services<font color="#E5E5E5"> one piece that</font>

230
00:10:14,120 --> 00:10:18,320
<font color="#E5E5E5">doesn't fit in</font><font color="#CCCCCC"> the previous picture</font><font color="#E5E5E5"> it's</font>

231
00:10:16,250 --> 00:10:21,140
a bit<font color="#E5E5E5"> you won't win so it's easy</font><font color="#CCCCCC"> to</font>

232
00:10:18,320 --> 00:10:24,399
collect<font color="#E5E5E5"> the</font><font color="#CCCCCC"> replicate UDP data as flow a</font>

233
00:10:21,140 --> 00:10:27,290
<font color="#CCCCCC">net flow for BGP it's slightly different</font>

234
00:10:24,399 --> 00:10:31,670
<font color="#CCCCCC">you have to peel all the boxes two</font>

235
00:10:27,290 --> 00:10:33,920
monitors<font color="#E5E5E5"> right</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this case you have to</font>

236
00:10:31,670 --> 00:10:36,979
send<font color="#E5E5E5"> open sessions to one virtual IP</font>

237
00:10:33,920 --> 00:10:38,660
address<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> also behind sob and the</font>

238
00:10:36,980 --> 00:10:41,390
load balancer van will pick up some

239
00:10:38,660 --> 00:10:44,240
random machines behind<font color="#CCCCCC"> the VIP to peel</font>

240
00:10:41,390 --> 00:10:44,899
<font color="#CCCCCC">with sorted yet</font><font color="#E5E5E5"> you get these</font><font color="#CCCCCC"> fast</font>

241
00:10:44,240 --> 00:10:47,680
<font color="#CCCCCC">devices</font>

242
00:10:44,899 --> 00:10:50,750
<font color="#E5E5E5">peering taxi five six box for example</font>

243
00:10:47,680 --> 00:10:53,779
<font color="#E5E5E5">and this box is simply collect which the</font>

244
00:10:50,750 --> 00:10:57,920
updates and then<font color="#E5E5E5"> also upload them to the</font>

245
00:10:53,779 --> 00:10:59,600
<font color="#E5E5E5">storage</font><font color="#CCCCCC"> analysis system</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> now well at</font>

246
00:10:57,920 --> 00:11:01,969
once again it's<font color="#E5E5E5"> really easy to</font><font color="#CCCCCC"> add with</font>

247
00:10:59,600 --> 00:11:02,570
more boxes if<font color="#CCCCCC"> you need to let's say I do</font>

248
00:11:01,970 --> 00:11:07,100
get more

249
00:11:02,570 --> 00:11:09,860
<font color="#CCCCCC">- no senders</font><font color="#E5E5E5"> but normally</font><font color="#CCCCCC"> BGP amount of</font>

250
00:11:07,100 --> 00:11:13,520
BGP<font color="#CCCCCC"> data set is huge that it's hard to</font>

251
00:11:09,860 --> 00:11:16,280
collect using it<font color="#CCCCCC"> just a</font><font color="#E5E5E5"> few boxes so say</font>

252
00:11:13,520 --> 00:11:18,290
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> we get this data in flight on the</font>

253
00:11:16,280 --> 00:11:20,780
collectors<font color="#E5E5E5"> now we need to actually</font>

254
00:11:18,290 --> 00:11:23,449
upload<font color="#E5E5E5"> it somewhere and do the actual</font>

255
00:11:20,780 --> 00:11:26,689
analysis that's the most I say

256
00:11:23,450 --> 00:11:29,090
challenging part<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> Microsoft for a</font>

257
00:11:26,690 --> 00:11:31,790
while had the<font color="#E5E5E5"> system</font><font color="#CCCCCC"> honest</font><font color="#E5E5E5"> cosmos and</font>

258
00:11:29,090 --> 00:11:33,740
the cosmos is a somewhat equivalent to

259
00:11:31,790 --> 00:11:37,430
Hadoop<font color="#E5E5E5"> but it's I say Microsoft</font>

260
00:11:33,740 --> 00:11:39,380
<font color="#E5E5E5">proprietary - or branded is built on a</font>

261
00:11:37,430 --> 00:11:43,069
slightly different premises<font color="#E5E5E5"> uses more</font>

262
00:11:39,380 --> 00:11:47,600
and I'd say generic framework<font color="#E5E5E5"> not just</font>

263
00:11:43,070 --> 00:11:50,870
MapReduce<font color="#CCCCCC"> it uses more complex</font><font color="#E5E5E5"> it for</font>

264
00:11:47,600 --> 00:11:52,700
structure more tricky abstractions<font color="#CCCCCC"> to</font>

265
00:11:50,870 --> 00:11:55,730
implement it and arguably

266
00:11:52,700 --> 00:11:58,690
<font color="#E5E5E5">Massaro</font><font color="#CCCCCC"> says it may</font><font color="#E5E5E5"> be more advanced in</font>

267
00:11:55,730 --> 00:12:03,950
Hadoop<font color="#CCCCCC"> but you still like more arguments</font>

268
00:11:58,690 --> 00:12:06,170
than actual actual attacks and so the

269
00:12:03,950 --> 00:12:08,720
key things about cosmos justiça<font color="#CCCCCC"> doop it</font>

270
00:12:06,170 --> 00:12:12,260
provides you<font color="#E5E5E5"> scalable storage very</font>

271
00:12:08,720 --> 00:12:15,070
simple storage for text files<font color="#E5E5E5"> and mostly</font>

272
00:12:12,260 --> 00:12:17,360
<font color="#E5E5E5">for just log files</font><font color="#CCCCCC"> append on the streams</font>

273
00:12:15,070 --> 00:12:19,610
<font color="#CCCCCC">it scales to petabytes of data easily</font>

274
00:12:17,360 --> 00:12:23,150
because it's just servers and the hard

275
00:12:19,610 --> 00:12:25,100
drives in one pool and the only

276
00:12:23,150 --> 00:12:27,650
<font color="#E5E5E5">structure</font><font color="#CCCCCC"> probably have in the data</font>

277
00:12:25,100 --> 00:12:30,650
streams there is that you partition<font color="#CCCCCC"> it</font>

278
00:12:27,650 --> 00:12:32,959
by time but the key thing<font color="#E5E5E5"> unlikely</font>

279
00:12:30,650 --> 00:12:35,480
sequel<font color="#E5E5E5"> it's not indexing which is</font>

280
00:12:32,960 --> 00:12:38,090
partition the files into chunks<font color="#CCCCCC"> so you</font>

281
00:12:35,480 --> 00:12:40,580
can more easily extract data and the

282
00:12:38,090 --> 00:12:43,310
<font color="#E5E5E5">partition by time is very natural</font>

283
00:12:40,580 --> 00:12:46,250
<font color="#E5E5E5">because all the data</font><font color="#CCCCCC"> you normally upload</font>

284
00:12:43,310 --> 00:12:47,869
there is<font color="#CCCCCC"> time</font><font color="#E5E5E5"> based that work files the</font>

285
00:12:46,250 --> 00:12:53,090
<font color="#CCCCCC">bgp updates on</font><font color="#E5E5E5"> earth flow</font><font color="#CCCCCC"> our</font>

286
00:12:47,870 --> 00:12:55,490
information this slide kind<font color="#E5E5E5"> of outlines</font>

287
00:12:53,090 --> 00:12:59,360
the whole process<font color="#E5E5E5"> of getting data in</font>

288
00:12:55,490 --> 00:13:03,020
cosmos so<font color="#E5E5E5"> from collectors to sob</font>

289
00:12:59,360 --> 00:13:05,330
<font color="#CCCCCC">Advanta cosmos so like four stages first</font>

290
00:13:03,020 --> 00:13:07,970
to send data<font color="#CCCCCC"> to any caste IP address</font>

291
00:13:05,330 --> 00:13:10,400
then it gets forked to multiple

292
00:13:07,970 --> 00:13:12,830
collectors<font color="#CCCCCC"> and then all</font><font color="#E5E5E5"> these guys or</font>

293
00:13:10,400 --> 00:13:15,230
some of these guys get<font color="#E5E5E5"> this data and</font>

294
00:13:12,830 --> 00:13:16,130
upload to<font color="#CCCCCC"> the cosmos cluster for</font>

295
00:13:15,230 --> 00:13:18,440
analysis

296
00:13:16,130 --> 00:13:20,509
as you can see it's a very<font color="#E5E5E5"> simple</font>

297
00:13:18,440 --> 00:13:23,690
<font color="#E5E5E5">concept</font><font color="#CCCCCC"> you get text files on the</font>

298
00:13:20,509 --> 00:13:27,050
collectors normal<font color="#CCCCCC"> CSV files just</font><font color="#E5E5E5"> NetFlow</font>

299
00:13:23,690 --> 00:13:29,329
syslog whatever data and when we<font color="#E5E5E5"> just</font>

300
00:13:27,050 --> 00:13:31,430
<font color="#E5E5E5">simply upload this in a special process</font>

301
00:13:29,329 --> 00:13:34,339
<font color="#CCCCCC">I say every</font><font color="#E5E5E5"> five minutes</font><font color="#CCCCCC"> send</font><font color="#E5E5E5"> all this</font>

302
00:13:31,430 --> 00:13:37,250
data to cosmos<font color="#E5E5E5"> if a nice thing about it</font>

303
00:13:34,339 --> 00:13:41,089
the diagram shows<font color="#CCCCCC"> us a single</font><font color="#E5E5E5"> front end</font>

304
00:13:37,250 --> 00:13:43,190
before cosmos<font color="#E5E5E5"> but in reality what</font><font color="#CCCCCC"> you do</font>

305
00:13:41,089 --> 00:13:46,579
this front end<font color="#E5E5E5"> which directs you to the</font>

306
00:13:43,190 --> 00:13:49,610
<font color="#CCCCCC">actual server</font><font color="#E5E5E5"> on the back end so</font><font color="#CCCCCC"> all the</font>

307
00:13:46,579 --> 00:13:52,219
collectors may import<font color="#E5E5E5"> data to cosmos</font>

308
00:13:49,610 --> 00:13:54,290
<font color="#E5E5E5">almost like in real time and avoiding</font>

309
00:13:52,220 --> 00:13:55,819
any bottlenecks in between<font color="#E5E5E5"> so there's no</font>

310
00:13:54,290 --> 00:13:57,860
<font color="#CCCCCC">lot they're also bottlenecks in between</font>

311
00:13:55,819 --> 00:14:00,500
you simply upload data to<font color="#E5E5E5"> one per</font>

312
00:13:57,860 --> 00:14:05,089
servers and then cosmos<font color="#E5E5E5"> back-end takes</font>

313
00:14:00,500 --> 00:14:07,160
care of that replication<font color="#CCCCCC"> ok it's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> I</font>

314
00:14:05,089 --> 00:14:10,790
<font color="#E5E5E5">did in cosmos and you need to</font><font color="#CCCCCC"> process</font>

315
00:14:07,160 --> 00:14:14,089
this data and cosmos use language<font color="#CCCCCC"> on the</font>

316
00:14:10,790 --> 00:14:16,459
scope which<font color="#E5E5E5"> is very similar to sequel in</font>

317
00:14:14,089 --> 00:14:18,860
a structure deliberately<font color="#CCCCCC"> so that</font><font color="#E5E5E5"> people</font>

318
00:14:16,459 --> 00:14:22,399
can<font color="#CCCCCC"> easy transition</font><font color="#E5E5E5"> from sequel to a</font>

319
00:14:18,860 --> 00:14:24,709
scope<font color="#E5E5E5"> there are differences right you</font>

320
00:14:22,399 --> 00:14:27,230
can<font color="#E5E5E5"> write extensions for scope in</font>

321
00:14:24,709 --> 00:14:30,619
c-sharp<font color="#E5E5E5"> of course since Microsoft</font>

322
00:14:27,230 --> 00:14:33,110
language<font color="#CCCCCC"> it</font><font color="#E5E5E5"> was some operations that</font>

323
00:14:30,620 --> 00:14:35,930
<font color="#E5E5E5">don't exist in sequel such as reduced</font>

324
00:14:33,110 --> 00:14:38,779
for example which<font color="#CCCCCC"> directed maps to</font>

325
00:14:35,930 --> 00:14:41,359
MapReduce paradigm<font color="#E5E5E5"> but most of the times</font>

326
00:14:38,779 --> 00:14:44,750
scope queries look very much like sequel

327
00:14:41,360 --> 00:14:47,839
<font color="#E5E5E5">so select count join group and so on</font><font color="#CCCCCC"> so</font>

328
00:14:44,750 --> 00:14:49,939
<font color="#CCCCCC">forth</font><font color="#E5E5E5"> but in in behind scope</font>

329
00:14:47,839 --> 00:14:53,689
optimization compiler<font color="#E5E5E5"> transfers this</font>

330
00:14:49,939 --> 00:14:55,370
into<font color="#E5E5E5"> your computation of the cluster and</font>

331
00:14:53,689 --> 00:15:01,130
<font color="#E5E5E5">this uploads the jobs and starts a</font>

332
00:14:55,370 --> 00:15:05,209
processing for you<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so before we talk</font>

333
00:15:01,130 --> 00:15:07,459
<font color="#CCCCCC">about</font><font color="#E5E5E5"> some of</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> now you can do this is</font>

334
00:15:05,209 --> 00:15:09,469
the<font color="#CCCCCC"> data you can</font><font color="#E5E5E5"> get in cosmos</font><font color="#CCCCCC"> let's say</font>

335
00:15:07,459 --> 00:15:10,939
some examples<font color="#CCCCCC"> believe having cosmos</font><font color="#E5E5E5"> just</font>

336
00:15:09,470 --> 00:15:13,399
the tables

337
00:15:10,939 --> 00:15:16,189
so before table which includes the data

338
00:15:13,399 --> 00:15:19,130
from<font color="#CCCCCC"> NetFlow sflow idée fixe</font><font color="#E5E5E5"> just</font>

339
00:15:16,189 --> 00:15:22,160
basically one huge file will append this

340
00:15:19,130 --> 00:15:24,500
data from<font color="#E5E5E5"> multiple sources</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> other</font>

341
00:15:22,160 --> 00:15:27,139
information<font color="#CCCCCC"> which you</font><font color="#E5E5E5"> need for analysis</font>

342
00:15:24,500 --> 00:15:30,080
<font color="#CCCCCC">they say topology data information on</font>

343
00:15:27,139 --> 00:15:32,480
your interfaces<font color="#E5E5E5"> the descriptions indexes</font>

344
00:15:30,080 --> 00:15:36,200
something you can<font color="#E5E5E5"> use to</font><font color="#CCCCCC"> actually add</font>

345
00:15:32,480 --> 00:15:39,980
some meaning<font color="#E5E5E5"> to NetFlow data with salsa</font>

346
00:15:36,200 --> 00:15:42,709
BGP table which essentially includes all

347
00:15:39,980 --> 00:15:45,260
the BGP prefixes from<font color="#E5E5E5"> all devices</font>

348
00:15:42,709 --> 00:15:45,949
you collect say for a<font color="#CCCCCC"> pass say one two</font>

349
00:15:45,260 --> 00:15:49,550
<font color="#CCCCCC">hours</font>

350
00:15:45,950 --> 00:15:52,459
so this basically builds the full BGP

351
00:15:49,550 --> 00:15:54,800
view for every<font color="#CCCCCC"> device</font><font color="#E5E5E5"> in topology every</font>

352
00:15:52,459 --> 00:15:57,920
<font color="#E5E5E5">sample you can also use pronounces as we</font>

353
00:15:54,800 --> 00:16:00,859
<font color="#E5E5E5">show further and the last one is various</font>

354
00:15:57,920 --> 00:16:03,349
grouping factors let's<font color="#E5E5E5"> say</font><font color="#CCCCCC"> geoip</font>

355
00:16:00,860 --> 00:16:05,660
mappings<font color="#E5E5E5"> were mapping of IP</font><font color="#CCCCCC"> addresses</font><font color="#E5E5E5"> to</font>

356
00:16:03,350 --> 00:16:07,850
application clusters or environments on

357
00:16:05,660 --> 00:16:13,579
things like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> which allows</font>

358
00:16:07,850 --> 00:16:14,839
you to<font color="#E5E5E5"> extract more data same or same</font>

359
00:16:13,579 --> 00:16:20,810
compress the data into<font color="#E5E5E5"> more meaningful</font>

360
00:16:14,839 --> 00:16:24,140
reports<font color="#CCCCCC"> we need</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> okay so as usual</font>

361
00:16:20,810 --> 00:16:26,119
<font color="#E5E5E5">were some issues</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> analysis this is</font>

362
00:16:24,140 --> 00:16:29,540
take three most common things with

363
00:16:26,120 --> 00:16:31,550
<font color="#E5E5E5">between counter so first one is of</font>

364
00:16:29,540 --> 00:16:33,709
course<font color="#E5E5E5"> data application let's say you</font>

365
00:16:31,550 --> 00:16:36,620
have a flow but<font color="#CCCCCC"> causes multiple</font><font color="#E5E5E5"> devices</font>

366
00:16:33,709 --> 00:16:38,599
<font color="#E5E5E5">in the network so this</font><font color="#CCCCCC"> one's going to</font><font color="#E5E5E5"> be</font>

367
00:16:36,620 --> 00:16:40,430
reported to multiple multiple times<font color="#E5E5E5"> in</font>

368
00:16:38,600 --> 00:16:42,950
your system<font color="#E5E5E5"> and normally</font><font color="#CCCCCC"> there's some</font>

369
00:16:40,430 --> 00:16:45,680
tricks but some well<font color="#E5E5E5"> things need to do</font>

370
00:16:42,950 --> 00:16:48,440
to move<font color="#E5E5E5"> the application but that's think</font>

371
00:16:45,680 --> 00:16:50,719
about<font color="#CCCCCC"> cosmas is that it's really easy to</font>

372
00:16:48,440 --> 00:16:52,810
avoid<font color="#E5E5E5"> application by simple in a query</font>

373
00:16:50,720 --> 00:16:54,829
which takes all<font color="#E5E5E5"> these copies and</font>

374
00:16:52,810 --> 00:16:56,479
essentially runs the average<font color="#CCCCCC"> function</font>

375
00:16:54,829 --> 00:16:59,839
across<font color="#E5E5E5"> them so the very simple</font>

376
00:16:56,480 --> 00:17:01,730
correlation<font color="#E5E5E5"> if two flows are very close</font>

377
00:16:59,839 --> 00:17:04,550
to each other in<font color="#CCCCCC"> timestamps</font><font color="#E5E5E5"> and if you</font>

378
00:17:01,730 --> 00:17:07,130
block different devices<font color="#E5E5E5"> you simply on</font>

379
00:17:04,550 --> 00:17:08,809
average and get the you<font color="#CCCCCC"> fix this</font>

380
00:17:07,130 --> 00:17:11,870
application problem very<font color="#CCCCCC"> very quickly</font>

381
00:17:08,809 --> 00:17:15,859
just just one query in scope<font color="#CCCCCC"> fix is</font>

382
00:17:11,869 --> 00:17:18,918
always<font color="#E5E5E5"> set on the</font><font color="#CCCCCC"> s flow is essentially</font>

383
00:17:15,859 --> 00:17:21,438
flawless<font color="#CCCCCC"> so when you get s flow sample</font>

384
00:17:18,919 --> 00:17:23,480
<font color="#E5E5E5">with honest with one one time stamp</font><font color="#CCCCCC"> and</font>

385
00:17:21,439 --> 00:17:24,740
one packet<font color="#E5E5E5"> so how would you build the</font>

386
00:17:23,480 --> 00:17:27,380
actual<font color="#E5E5E5"> flow out of</font><font color="#CCCCCC"> this</font>

387
00:17:24,740 --> 00:17:29,990
well once again<font color="#E5E5E5"> it's really</font><font color="#CCCCCC"> within scope</font>

388
00:17:27,380 --> 00:17:31,760
or in<font color="#E5E5E5"> anything big data analysis you get</font>

389
00:17:29,990 --> 00:17:33,350
<font color="#E5E5E5">all the samples</font><font color="#CCCCCC"> together you've been</font>

390
00:17:31,760 --> 00:17:35,030
this<font color="#CCCCCC"> saved in time intervals</font>

391
00:17:33,350 --> 00:17:37,610
count the packets and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> get the flow</font>

392
00:17:35,030 --> 00:17:40,309
<font color="#E5E5E5">so essentially just create a flow out of</font>

393
00:17:37,610 --> 00:17:43,969
<font color="#E5E5E5">the data by</font><font color="#CCCCCC"> simply running a query</font><font color="#E5E5E5"> out</font>

394
00:17:40,309 --> 00:17:46,490
and query on this data<font color="#E5E5E5"> once again so run</font>

395
00:17:43,970 --> 00:17:48,620
time<font color="#E5E5E5"> it's basically part of a process in</font>

396
00:17:46,490 --> 00:17:49,250
logic<font color="#E5E5E5"> so you don't have to think about</font>

397
00:17:48,620 --> 00:17:51,168
<font color="#E5E5E5">that</font>

398
00:17:49,250 --> 00:17:54,260
just one query to extract<font color="#E5E5E5"> a flow data</font>

399
00:17:51,169 --> 00:17:57,230
from<font color="#CCCCCC"> as flow and velocity was sampling</font>

400
00:17:54,260 --> 00:17:58,390
<font color="#E5E5E5">since we do random sampling we lose some</font>

401
00:17:57,230 --> 00:18:01,370
of<font color="#E5E5E5"> the deals in data</font>

402
00:17:58,390 --> 00:18:03,140
so obviously<font color="#CCCCCC"> cancelled micro flows</font><font color="#E5E5E5"> we</font>

403
00:18:01,370 --> 00:18:06,439
can see quick requests that<font color="#CCCCCC"> save the</font>

404
00:18:03,140 --> 00:18:10,760
sample one out of four thousand on a box

405
00:18:06,440 --> 00:18:13,100
you won't see<font color="#CCCCCC"> six quick queries</font><font color="#E5E5E5"> the good</font>

406
00:18:10,760 --> 00:18:16,010
news is<font color="#CCCCCC"> that this is</font><font color="#E5E5E5"> still pretty much</font>

407
00:18:13,100 --> 00:18:18,049
<font color="#E5E5E5">enough for capacity analysis because</font>

408
00:18:16,010 --> 00:18:21,640
<font color="#CCCCCC">majority of all traffic</font><font color="#E5E5E5"> flow is</font>

409
00:18:18,049 --> 00:18:24,620
<font color="#E5E5E5">basically large heavy often flows and</font>

410
00:18:21,640 --> 00:18:26,539
comparing the data to interface counters

411
00:18:24,620 --> 00:18:29,570
<font color="#E5E5E5">we found that the error</font><font color="#CCCCCC"> rate is about</font>

412
00:18:26,539 --> 00:18:31,340
five six percent on the pesticide<font color="#E5E5E5"> so</font>

413
00:18:29,570 --> 00:18:36,559
it's pretty accurate<font color="#E5E5E5"> just a capacity</font>

414
00:18:31,340 --> 00:18:38,449
<font color="#E5E5E5">forecasting prediction and also this</font>

415
00:18:36,559 --> 00:18:40,760
<font color="#E5E5E5">data is still very very accurate and</font>

416
00:18:38,450 --> 00:18:42,679
enough for<font color="#E5E5E5"> acid dose detection device</font>

417
00:18:40,760 --> 00:18:44,210
detection<font color="#CCCCCC"> because</font><font color="#E5E5E5"> those attacks are</font>

418
00:18:42,679 --> 00:18:46,100
mostly<font color="#E5E5E5"> long-living</font>

419
00:18:44,210 --> 00:18:49,309
<font color="#E5E5E5">so now we don't see very shortly attacks</font>

420
00:18:46,100 --> 00:18:51,080
<font color="#E5E5E5">it's a it's not to have this high sample</font>

421
00:18:49,309 --> 00:18:58,399
rate and still get useful information

422
00:18:51,080 --> 00:18:59,600
<font color="#CCCCCC">out</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> novel data so three basic</font>

423
00:18:58,400 --> 00:19:01,970
reports people<font color="#E5E5E5"> always want from that</font>

424
00:18:59,600 --> 00:19:05,570
<font color="#E5E5E5">flow I</font><font color="#CCCCCC"> slowed</font><font color="#E5E5E5"> it something like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> top</font>

425
00:19:01,970 --> 00:19:07,970
lockers<font color="#CCCCCC"> hey who</font><font color="#E5E5E5"> is a talking guy on this</font>

426
00:19:05,570 --> 00:19:10,520
link or this device or say in between

427
00:19:07,970 --> 00:19:12,679
<font color="#CCCCCC">two that we treat the data centers</font><font color="#E5E5E5"> so</font>

428
00:19:10,520 --> 00:19:14,990
<font color="#CCCCCC">there's the one job report for top</font>

429
00:19:12,679 --> 00:19:17,179
<font color="#E5E5E5">talkers which takes very generic inputs</font>

430
00:19:14,990 --> 00:19:21,530
<font color="#E5E5E5">let's say</font><font color="#CCCCCC"> hey how would you grouped</font><font color="#E5E5E5"> guys</font>

431
00:19:17,179 --> 00:19:23,390
how do you cannot be traffic and which

432
00:19:21,530 --> 00:19:26,480
<font color="#E5E5E5">traffic like you want say percentile so</font>

433
00:19:23,390 --> 00:19:29,240
average<font color="#E5E5E5"> traffic so it's really</font><font color="#CCCCCC"> easy to</font>

434
00:19:26,480 --> 00:19:31,130
<font color="#E5E5E5">get one generic query they can give you</font>

435
00:19:29,240 --> 00:19:34,340
almost<font color="#E5E5E5"> any variation of</font><font color="#CCCCCC"> that workers in</font>

436
00:19:31,130 --> 00:19:38,510
<font color="#E5E5E5">your work</font><font color="#CCCCCC"> Network peering router core</font>

437
00:19:34,340 --> 00:19:41,299
router<font color="#E5E5E5"> discharge say top of rack or</font>

438
00:19:38,510 --> 00:19:45,350
spine<font color="#E5E5E5"> device anything same query</font>

439
00:19:41,299 --> 00:19:47,690
everywhere second<font color="#CCCCCC"> one is top matrix</font><font color="#E5E5E5"> c1l</font>

440
00:19:45,350 --> 00:19:50,360
<font color="#E5E5E5">who talks to whom and what traffic rates</font>

441
00:19:47,690 --> 00:19:53,210
are let's<font color="#E5E5E5"> say but this traffic matrix</font>

442
00:19:50,360 --> 00:19:54,949
for data centers or traffic metrics for

443
00:19:53,210 --> 00:19:57,980
my peers how exchange traffic<font color="#E5E5E5"> across</font>

444
00:19:54,950 --> 00:20:02,450
myself very easy to do<font color="#CCCCCC"> it's go</font>

445
00:19:57,980 --> 00:20:05,810
once again<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> like one page of scope</font>

446
00:20:02,450 --> 00:20:08,540
script to do all this analysis and<font color="#E5E5E5"> runs</font>

447
00:20:05,810 --> 00:20:11,480
pretty quickly if you don't ingest too

448
00:20:08,540 --> 00:20:15,770
much data to<font color="#E5E5E5"> process but sometimes they</font>

449
00:20:11,480 --> 00:20:17,630
even<font color="#CCCCCC"> allies month</font><font color="#E5E5E5"> what what data the</font>

450
00:20:15,770 --> 00:20:21,860
actual<font color="#E5E5E5"> announcement</font><font color="#CCCCCC"> Alexey</font><font color="#E5E5E5"> five six</font>

451
00:20:17,630 --> 00:20:23,630
<font color="#CCCCCC">hours sometimes a massive forensic</font>

452
00:20:21,860 --> 00:20:25,790
<font color="#E5E5E5">people want to know who does the</font><font color="#CCCCCC"> who</font>

453
00:20:23,630 --> 00:20:27,680
<font color="#CCCCCC">write</font><font color="#E5E5E5"> is there anyone who talks to</font>

454
00:20:25,790 --> 00:20:30,409
someone you<font color="#CCCCCC"> don't supposed to talk</font><font color="#E5E5E5"> to</font>

455
00:20:27,680 --> 00:20:32,630
let's say if if the<font color="#E5E5E5"> server's actually</font>

456
00:20:30,410 --> 00:20:35,810
try to<font color="#CCCCCC"> strike on edge</font><font color="#E5E5E5"> outside for some</font>

457
00:20:32,630 --> 00:20:37,970
reason so<font color="#E5E5E5"> are some limitations of course</font>

458
00:20:35,810 --> 00:20:40,159
because of sampling<font color="#E5E5E5"> but still farmers to</font>

459
00:20:37,970 --> 00:20:41,660
be pretty useful<font color="#E5E5E5"> to discover traffic</font>

460
00:20:40,160 --> 00:20:43,900
patterns what we<font color="#E5E5E5"> don't expect me about</font>

461
00:20:41,660 --> 00:20:43,900
at work

462
00:20:44,390 --> 00:20:53,000
second one is a more<font color="#CCCCCC"> say</font><font color="#E5E5E5"> advanced report</font>

463
00:20:48,800 --> 00:20:55,580
say<font color="#E5E5E5"> do those detection and it's a bit</font>

464
00:20:53,000 --> 00:20:57,880
<font color="#E5E5E5">hard actually to do that in most cases</font>

465
00:20:55,580 --> 00:21:00,860
<font color="#E5E5E5">although we get all the false positives</font>

466
00:20:57,880 --> 00:21:03,470
<font color="#E5E5E5">it's a very simple logic DDoS</font><font color="#CCCCCC"> is when</font>

467
00:21:00,860 --> 00:21:07,070
someone get hit by multiple senders<font color="#E5E5E5"> of</font>

468
00:21:03,470 --> 00:21:09,980
traffic and this flow<font color="#E5E5E5"> somehow deviates</font>

469
00:21:07,070 --> 00:21:11,659
from normal<font color="#E5E5E5"> profile so you have to build</font>

470
00:21:09,980 --> 00:21:13,460
<font color="#E5E5E5">a profile</font><font color="#CCCCCC"> let's say percent of the</font>

471
00:21:11,660 --> 00:21:16,970
<font color="#CCCCCC">traffic for all destinations</font><font color="#E5E5E5"> on the</font>

472
00:21:13,460 --> 00:21:19,220
other which<font color="#CCCCCC"> is actually easy because we</font>

473
00:21:16,970 --> 00:21:21,890
<font color="#CCCCCC">have all the data</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> one storage so you</font>

474
00:21:19,220 --> 00:21:24,830
<font color="#E5E5E5">can use one query to build the profiles</font>

475
00:21:21,890 --> 00:21:25,400
for every possible IP address of<font color="#CCCCCC"> your</font>

476
00:21:24,830 --> 00:21:27,020
network

477
00:21:25,400 --> 00:21:30,530
let's see<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> servers</font><font color="#E5E5E5"> all the beeps</font>

478
00:21:27,020 --> 00:21:34,220
<font color="#CCCCCC">who care about when</font><font color="#E5E5E5"> you compare</font><font color="#CCCCCC"> for</font>

479
00:21:30,530 --> 00:21:36,440
every time in trouble if was try<font color="#E5E5E5"> to</font>

480
00:21:34,220 --> 00:21:38,240
<font color="#E5E5E5">critic sitting for this IP</font><font color="#CCCCCC"> address</font><font color="#E5E5E5"> in if</font>

481
00:21:36,440 --> 00:21:40,580
we say P I just was hit by multiple

482
00:21:38,240 --> 00:21:43,160
senders and were just<font color="#E5E5E5"> normal process in</font>

483
00:21:40,580 --> 00:21:45,439
<font color="#E5E5E5">post-processing it's about say</font><font color="#CCCCCC"> maybe</font>

484
00:21:43,160 --> 00:21:47,930
<font color="#CCCCCC">five page scope job which gives you the</font>

485
00:21:45,440 --> 00:21:50,600
actual<font color="#E5E5E5"> victims attackers for every time</font>

486
00:21:47,930 --> 00:21:52,760
<font color="#E5E5E5">interval you do care about you see</font>

487
00:21:50,600 --> 00:21:55,490
<font color="#E5E5E5">Ronnie's job once</font><font color="#CCCCCC"> say every five minutes</font>

488
00:21:52,760 --> 00:21:56,600
<font color="#E5E5E5">and you get this possible victims and</font>

489
00:21:55,490 --> 00:21:59,780
possible attackers for every time

490
00:21:56,600 --> 00:22:01,610
<font color="#CCCCCC">interval</font><font color="#E5E5E5"> very simple apparently and</font>

491
00:21:59,780 --> 00:22:05,590
<font color="#CCCCCC">really easy</font><font color="#E5E5E5"> to extend</font><font color="#CCCCCC"> so you can add</font>

492
00:22:01,610 --> 00:22:09,290
<font color="#E5E5E5">more logic and more person if you want</font>

493
00:22:05,590 --> 00:22:11,178
things like<font color="#E5E5E5"> what</font><font color="#CCCCCC"> loss in performance</font><font color="#E5E5E5"> as</font>

494
00:22:09,290 --> 00:22:14,389
I said with a BGP data you

495
00:22:11,179 --> 00:22:15,799
with large storage as well<font color="#CCCCCC"> in cosmos</font><font color="#E5E5E5"> so</font>

496
00:22:14,389 --> 00:22:18,918
it's really<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to take</font><font color="#E5E5E5"> the net flow</font>

497
00:22:15,799 --> 00:22:22,309
<font color="#E5E5E5">data and map it some BGP stuff and on</font>

498
00:22:18,919 --> 00:22:25,249
topology information<font color="#E5E5E5"> to find out how far</font>

499
00:22:22,309 --> 00:22:27,649
is<font color="#E5E5E5"> particular entry point or egress</font>

500
00:22:25,249 --> 00:22:29,809
<font color="#E5E5E5">point of network from actual</font><font color="#CCCCCC"> destination</font>

501
00:22:27,649 --> 00:22:31,998
IP<font color="#CCCCCC"> address in the</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> Center of course</font>

502
00:22:29,809 --> 00:22:34,789
<font color="#CCCCCC">are limitations because the BGP</font><font color="#E5E5E5"> table</font>

503
00:22:31,999 --> 00:22:37,519
<font color="#CCCCCC">only has asked of</font><font color="#E5E5E5"> lands right so you can</font>

504
00:22:34,789 --> 00:22:38,960
get very<font color="#CCCCCC"> accurate estimation but this</font>

505
00:22:37,519 --> 00:22:42,169
report<font color="#CCCCCC"> can</font><font color="#E5E5E5"> give you of like some basic</font>

506
00:22:38,960 --> 00:22:45,019
<font color="#CCCCCC">picture</font><font color="#E5E5E5"> of how efficient is the</font>

507
00:22:42,169 --> 00:22:47,960
<font color="#CCCCCC">selection of</font><font color="#E5E5E5"> Inglis and egress points of</font>

508
00:22:45,019 --> 00:22:51,859
<font color="#CCCCCC">a network and this support requires you</font>

509
00:22:47,960 --> 00:22:53,899
<font color="#CCCCCC">tgp data and gel on the flow data</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> -</font>

510
00:22:51,859 --> 00:22:56,379
like the<font color="#E5E5E5"> data sets</font><font color="#CCCCCC"> something but it's</font>

511
00:22:53,899 --> 00:22:59,928
hardly<font color="#E5E5E5"> possible to do so using sequel</font>

512
00:22:56,379 --> 00:23:04,369
databases<font color="#E5E5E5"> because of complexity of</font>

513
00:22:59,929 --> 00:23:08,479
<font color="#E5E5E5">underlying our implementation and say</font>

514
00:23:04,369 --> 00:23:11,629
the last<font color="#E5E5E5"> one is a</font><font color="#CCCCCC"> hoc optimization so</font>

515
00:23:08,479 --> 00:23:14,659
using<font color="#E5E5E5"> that flow you can quickly</font><font color="#CCCCCC"> build a</font>

516
00:23:11,629 --> 00:23:17,779
picture<font color="#E5E5E5"> of all links all edge links find</font>

517
00:23:14,659 --> 00:23:19,339
the hot ones<font color="#E5E5E5"> and the cold ones</font><font color="#CCCCCC"> and see</font>

518
00:23:17,779 --> 00:23:21,409
if you can<font color="#E5E5E5"> move some pieces around and</font>

519
00:23:19,339 --> 00:23:24,109
of course you<font color="#CCCCCC"> can't move this is just</font>

520
00:23:21,409 --> 00:23:26,330
like<font color="#CCCCCC"> vats it from one into another</font><font color="#E5E5E5"> as if</font>

521
00:23:24,109 --> 00:23:28,369
<font color="#E5E5E5">some constraints right the new link has</font>

522
00:23:26,330 --> 00:23:30,889
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be close to</font><font color="#CCCCCC"> the other</font><font color="#E5E5E5"> one in the</font>

523
00:23:28,369 --> 00:23:33,649
<font color="#E5E5E5">internal metric and it has to be close</font>

524
00:23:30,889 --> 00:23:36,258
to<font color="#CCCCCC"> the arcanist</font><font color="#E5E5E5"> ination in the SAS path</font>

525
00:23:33,649 --> 00:23:39,799
metric as well but all this logic will

526
00:23:36,259 --> 00:23:42,379
be<font color="#E5E5E5"> easily put in scope and</font><font color="#CCCCCC"> you can gives</font>

527
00:23:39,799 --> 00:23:45,259
you the list of prefixes<font color="#CCCCCC"> that you may</font>

528
00:23:42,379 --> 00:23:47,869
move to<font color="#CCCCCC"> say to shuffle</font><font color="#E5E5E5"> the load from</font>

529
00:23:45,259 --> 00:23:49,309
<font color="#CCCCCC">hard things to</font><font color="#E5E5E5"> call the links well not</font>

530
00:23:47,869 --> 00:23:51,738
stop<font color="#CCCCCC"> nikasha</font><font color="#E5E5E5"> use in production right</font><font color="#CCCCCC"> now</font>

531
00:23:49,309 --> 00:23:54,200
it's more<font color="#CCCCCC"> of</font><font color="#E5E5E5"> analysis job but it's</font>

532
00:23:51,739 --> 00:23:56,690
perfectly possible to<font color="#E5E5E5"> use this to</font>

533
00:23:54,200 --> 00:24:00,109
optimize<font color="#CCCCCC"> futures</font><font color="#E5E5E5"> in policies</font><font color="#CCCCCC"> so in other</font>

534
00:23:56,690 --> 00:24:03,820
<font color="#E5E5E5">words they come</font><font color="#CCCCCC"> a simplified version of</font>

535
00:24:00,109 --> 00:24:07,668
Cisco<font color="#E5E5E5"> we are or optimizes routing</font>

536
00:24:03,820 --> 00:24:10,879
implementation so this<font color="#CCCCCC"> were</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the</font>

537
00:24:07,669 --> 00:24:12,950
examples<font color="#CCCCCC"> the nice</font><font color="#E5E5E5"> thing about the big</font>

538
00:24:10,879 --> 00:24:16,998
data analysis is that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> number of</font>

539
00:24:12,950 --> 00:24:19,359
<font color="#E5E5E5">queries or processing logic is only</font>

540
00:24:16,999 --> 00:24:21,590
<font color="#CCCCCC">Bombo imagination so we open to anything</font>

541
00:24:19,359 --> 00:24:24,470
<font color="#E5E5E5">interpret queries</font>

542
00:24:21,590 --> 00:24:27,490
intimidation power is sufficient<font color="#E5E5E5"> to give</font>

543
00:24:24,470 --> 00:24:30,470
you<font color="#E5E5E5"> almost any answer</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> like within</font>

544
00:24:27,490 --> 00:24:34,940
one or two hours<font color="#E5E5E5"> for almost any data set</font>

545
00:24:30,470 --> 00:24:36,470
<font color="#E5E5E5">even if it's few months</font><font color="#CCCCCC"> large as I said</font>

546
00:24:34,940 --> 00:24:40,880
we didn't actually look<font color="#CCCCCC"> to build a</font>

547
00:24:36,470 --> 00:24:44,180
system<font color="#CCCCCC"> that does grow time processing so</font>

548
00:24:40,880 --> 00:24:47,390
it was<font color="#E5E5E5"> mostly</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> offline data analysis</font>

549
00:24:44,180 --> 00:24:50,480
<font color="#E5E5E5">but it was good enough</font><font color="#CCCCCC"> to actually give</font>

550
00:24:47,390 --> 00:24:53,390
us<font color="#CCCCCC"> reports as fast as every 5</font><font color="#E5E5E5"> minutes of</font>

551
00:24:50,480 --> 00:24:55,850
<font color="#E5E5E5">real time so let's say the data we get</font>

552
00:24:53,390 --> 00:24:58,480
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the system might be as fresh as</font>

553
00:24:55,850 --> 00:25:02,959
<font color="#E5E5E5">five minute delay</font><font color="#CCCCCC"> it wasn't too</font><font color="#E5E5E5"> bad but</font>

554
00:24:58,480 --> 00:25:05,810
<font color="#E5E5E5">getting the actual save</font><font color="#CCCCCC"> stifles analysis</font>

555
00:25:02,960 --> 00:25:07,850
and<font color="#CCCCCC"> stenches response is different</font>

556
00:25:05,810 --> 00:25:09,710
<font color="#CCCCCC">problem normally</font><font color="#E5E5E5"> involves</font><font color="#CCCCCC"> different</font>

557
00:25:07,850 --> 00:25:14,060
systems and not<font color="#E5E5E5"> see just Hadoop and</font>

558
00:25:09,710 --> 00:25:17,090
cosmos and of course<font color="#E5E5E5"> um the our</font>

559
00:25:14,060 --> 00:25:19,280
motivation was<font color="#E5E5E5"> our cost it's much easier</font>

560
00:25:17,090 --> 00:25:21,439
<font color="#CCCCCC">to do it with Suzanne</font><font color="#E5E5E5"> Kosmas</font><font color="#CCCCCC"> and server</font>

561
00:25:19,280 --> 00:25:23,389
<font color="#E5E5E5">pools and always infrastructure what</font>

562
00:25:21,440 --> 00:25:27,110
they have because it's low cost it's

563
00:25:23,390 --> 00:25:29,030
already built and spongeable so as

564
00:25:27,110 --> 00:25:32,600
opposed to trying to<font color="#E5E5E5"> create new server</font>

565
00:25:29,030 --> 00:25:35,000
pool<font color="#E5E5E5"> say run ms sequel or my Segel</font><font color="#CCCCCC"> most</font>

566
00:25:32,600 --> 00:25:38,300
<font color="#CCCCCC">domestic of</font><font color="#E5E5E5"> Microsoft it was much easier</font>

567
00:25:35,000 --> 00:25:41,480
to<font color="#CCCCCC"> go and focus</font><font color="#E5E5E5"> on the reusing the</font>

568
00:25:38,300 --> 00:25:43,790
<font color="#E5E5E5">existing big data clusters well now what</font>

569
00:25:41,480 --> 00:25:47,210
the last question is<font color="#CCCCCC"> uh what does this</font>

570
00:25:43,790 --> 00:25:49,310
mean for a full<font color="#E5E5E5"> audience right it's not</font>

571
00:25:47,210 --> 00:25:53,030
<font color="#E5E5E5">like many</font><font color="#CCCCCC"> people have is syrup pools and</font>

572
00:25:49,310 --> 00:25:55,040
DC clusters<font color="#CCCCCC"> in cosmos at the hand</font><font color="#E5E5E5"> but</font>

573
00:25:53,030 --> 00:25:57,170
<font color="#E5E5E5">it's worth it possible to build your own</font>

574
00:25:55,040 --> 00:26:00,590
code up cluster<font color="#E5E5E5"> not to be maybe</font><font color="#CCCCCC"> like</font>

575
00:25:57,170 --> 00:26:02,960
five<font color="#E5E5E5"> ten servers in one rack so</font><font color="#CCCCCC"> same</font>

576
00:26:00,590 --> 00:26:05,409
single<font color="#CCCCCC"> switch small cluster but it's</font>

577
00:26:02,960 --> 00:26:10,040
<font color="#E5E5E5">always enough to</font><font color="#CCCCCC"> process NetFlow data</font>

578
00:26:05,410 --> 00:26:11,630
for almost any<font color="#E5E5E5"> ISP right if you have</font>

579
00:26:10,040 --> 00:26:13,700
like say a terabyte hard drives or

580
00:26:11,630 --> 00:26:17,090
something<font color="#CCCCCC"> like that it's</font><font color="#E5E5E5"> really easy to</font>

581
00:26:13,700 --> 00:26:20,540
have<font color="#CCCCCC"> a storage</font><font color="#E5E5E5"> to fit this data for like</font>

582
00:26:17,090 --> 00:26:23,139
maybe a<font color="#CCCCCC"> few</font><font color="#E5E5E5"> months</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> information and</font>

583
00:26:20,540 --> 00:26:26,870
<font color="#E5E5E5">all</font><font color="#CCCCCC"> balancing piece is the trick as well</font>

584
00:26:23,140 --> 00:26:29,840
<font color="#CCCCCC">it's mostly</font><font color="#E5E5E5"> ezp data but you get so we</font>

585
00:26:26,870 --> 00:26:34,340
can take say<font color="#CCCCCC"> f5s on the scalars</font><font color="#E5E5E5"> and talk</font>

586
00:26:29,840 --> 00:26:36,770
them into<font color="#CCCCCC"> be do l3 GSR modules which</font>

587
00:26:34,340 --> 00:26:40,720
perfectly<font color="#CCCCCC"> for you</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> I can</font><font color="#E5E5E5"> simply use</font>

588
00:26:36,770 --> 00:26:42,710
ecmp<font color="#E5E5E5"> routing do the same function</font>

589
00:26:40,720 --> 00:26:45,850
because<font color="#E5E5E5"> you'd be</font><font color="#CCCCCC"> dated that's got to be</font>

590
00:26:42,710 --> 00:26:50,120
hashed consistently<font color="#CCCCCC"> onto the servers</font><font color="#E5E5E5"> and</font>

591
00:26:45,850 --> 00:26:52,549
<font color="#E5E5E5">also this exercise let's say put in</font><font color="#CCCCCC"> that</font>

592
00:26:50,120 --> 00:26:54,678
<font color="#E5E5E5">flow on Hadoop could be used as a first</font>

593
00:26:52,549 --> 00:26:56,658
<font color="#E5E5E5">up the big data because many</font><font color="#CCCCCC"> companies</font>

594
00:26:54,679 --> 00:26:59,390
kind of<font color="#E5E5E5"> resist moving to Big Data</font>

595
00:26:56,659 --> 00:27:02,210
because have large investment and say

596
00:26:59,390 --> 00:27:06,980
<font color="#E5E5E5">sequel storage and sequel data analysis</font>

597
00:27:02,210 --> 00:27:08,870
<font color="#CCCCCC">and supported for some</font><font color="#E5E5E5"> problems but no</font>

598
00:27:06,980 --> 00:27:11,299
sequel this<font color="#CCCCCC"> Big Data stuff is</font><font color="#E5E5E5"> really</font>

599
00:27:08,870 --> 00:27:15,139
good for<font color="#E5E5E5"> things that are let's say</font>

600
00:27:11,299 --> 00:27:18,710
structure less<font color="#E5E5E5"> append-only</font><font color="#CCCCCC"> and don't</font>

601
00:27:15,140 --> 00:27:21,110
<font color="#E5E5E5">require any let's say advanced logic to</font>

602
00:27:18,710 --> 00:27:23,179
change and update data let's<font color="#E5E5E5"> say</font><font color="#CCCCCC"> welcome</font>

603
00:27:21,110 --> 00:27:25,399
now is<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> perfect</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> and you</font>

604
00:27:23,179 --> 00:27:28,399
<font color="#E5E5E5">can always look at net flow as a</font><font color="#CCCCCC"> large</font>

605
00:27:25,399 --> 00:27:31,789
<font color="#CCCCCC">scale a lot</font><font color="#E5E5E5"> analysis problem so hope</font>

606
00:27:28,399 --> 00:27:35,149
<font color="#E5E5E5">this</font><font color="#CCCCCC"> will be</font><font color="#E5E5E5"> helpful for</font><font color="#CCCCCC"> someone who is</font>

607
00:27:31,789 --> 00:27:38,210
<font color="#CCCCCC">looking</font><font color="#E5E5E5"> to build the same another system</font>

608
00:27:35,149 --> 00:27:42,789
<font color="#CCCCCC">in-house but</font><font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> very much if you</font>

609
00:27:38,210 --> 00:27:42,789
have any questions some<font color="#CCCCCC"> of them</font>

610
00:27:48,179 --> 00:27:52,889
<font color="#E5E5E5">all right thank you</font><font color="#CCCCCC"> very much thanks</font>

611
00:27:50,769 --> 00:27:52,889
<font color="#CCCCCC">guys</font>

