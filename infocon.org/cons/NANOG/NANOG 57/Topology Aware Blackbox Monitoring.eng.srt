1
00:00:03,540 --> 00:00:06,689
we're good

2
00:00:15,210 --> 00:00:20,650
<font color="#CCCCCC">alright good afternoon everyone hope you</font>

3
00:00:18,100 --> 00:00:22,779
had a nice lunch we're ready<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get the</font>

4
00:00:20,650 --> 00:00:24,400
afternoon session started we have two

5
00:00:22,779 --> 00:00:27,460
plenary talks which would be very

6
00:00:24,400 --> 00:00:29,348
exciting<font color="#E5E5E5"> the first talk will be Nicholas</font>

7
00:00:27,460 --> 00:00:30,939
and Ross from Google's network

8
00:00:29,349 --> 00:00:33,190
engineering team they're based out of

9
00:00:30,939 --> 00:00:34,930
<font color="#E5E5E5">the asia-pacific region they'll be</font>

10
00:00:33,190 --> 00:00:37,629
talking about some topology aware

11
00:00:34,930 --> 00:00:43,510
monitoring system that they've<font color="#E5E5E5"> been</font>

12
00:00:37,630 --> 00:00:46,900
building at Google thank you good

13
00:00:43,510 --> 00:00:49,000
<font color="#E5E5E5">afternoon so I'm Nicholas</font><font color="#CCCCCC"> gilbo and with</font>

14
00:00:46,900 --> 00:00:52,089
me is<font color="#CCCCCC"> what's car which we are both from</font>

15
00:00:49,000 --> 00:00:54,430
the senior fees of<font color="#E5E5E5"> Google in Australia</font>

16
00:00:52,090 --> 00:00:58,660
although only one of us is Australian

17
00:00:54,430 --> 00:01:00,850
let you guess which one so we are here

18
00:00:58,660 --> 00:01:03,129
to<font color="#E5E5E5"> talk about actually a project we</font>

19
00:01:00,850 --> 00:01:04,659
studied a couple of<font color="#E5E5E5"> years ago and we</font>

20
00:01:03,130 --> 00:01:09,210
studied this project out<font color="#CCCCCC"> of frustration</font>

21
00:01:04,659 --> 00:01:11,710
of doing like manual<font color="#E5E5E5"> troubleshooting so</font>

22
00:01:09,210 --> 00:01:14,559
instead<font color="#CCCCCC"> of spending like minutes and</font>

23
00:01:11,710 --> 00:01:15,729
hours of troubleshooting to find

24
00:01:14,560 --> 00:01:18,310
actually the<font color="#CCCCCC"> wood cause of packet loss</font>

25
00:01:15,729 --> 00:01:21,579
in the network we would actually there

26
00:01:18,310 --> 00:01:23,170
must be<font color="#CCCCCC"> a better way so we thought we</font>

27
00:01:21,579 --> 00:01:24,759
want the machine<font color="#E5E5E5"> cycle to do the heavy</font>

28
00:01:23,170 --> 00:01:27,969
lifting we want actually machine to be

29
00:01:24,759 --> 00:01:30,549
able<font color="#E5E5E5"> to I / sat and find the network</font>

30
00:01:27,969 --> 00:01:36,189
elements which are 14 a network and not

31
00:01:30,549 --> 00:01:38,710
humans so typically network operators

32
00:01:36,189 --> 00:01:41,740
use white box monitoring too many tell

33
00:01:38,710 --> 00:01:43,899
the network and white box monitoring is

34
00:01:41,740 --> 00:01:47,408
primarily basically asking network

35
00:01:43,899 --> 00:01:49,659
devices about the health so what's your

36
00:01:47,409 --> 00:01:53,159
cpu's it was your memory usage was your

37
00:01:49,659 --> 00:01:55,990
<font color="#E5E5E5">you know interface load and so forth</font>

38
00:01:53,159 --> 00:01:58,389
unfortunately too many times the

39
00:01:55,990 --> 00:02:00,280
monitoring is clear and yet network

40
00:01:58,389 --> 00:02:04,298
<font color="#E5E5E5">elements are discarding packets or</font>

41
00:02:00,280 --> 00:02:06,639
complete packets so some time<font color="#E5E5E5"> actually</font>

42
00:02:04,299 --> 00:02:09,220
the the military doesn't provide us the

43
00:02:06,639 --> 00:02:11,290
right answer the tell us that the egress

44
00:02:09,220 --> 00:02:12,819
<font color="#CCCCCC">line</font><font color="#E5E5E5"> card is actually coding packet what</font>

45
00:02:11,290 --> 00:02:14,859
<font color="#E5E5E5">actually the corruption happens on the</font>

46
00:02:12,819 --> 00:02:18,130
ingress confusing the network operators

47
00:02:14,860 --> 00:02:20,349
or even actually the packet is lost so

48
00:02:18,130 --> 00:02:22,659
imagine a syslog message with a<font color="#CCCCCC"> critical</font>

49
00:02:20,349 --> 00:02:25,238
message such as repeat synchronization

50
00:02:22,659 --> 00:02:25,989
synchronization issue and that message

51
00:02:25,239 --> 00:02:28,090
can be dropped

52
00:02:25,990 --> 00:02:31,870
suddenly the network is compromised and

53
00:02:28,090 --> 00:02:34,780
the operators are not aware of it so to

54
00:02:31,870 --> 00:02:37,780
augment the white box monitoring

55
00:02:34,780 --> 00:02:40,170
operators like<font color="#E5E5E5"> Google basically deploy</font>

56
00:02:37,780 --> 00:02:42,460
black box monitoring on top of it and

57
00:02:40,170 --> 00:02:46,269
black box monitoring is basically a

58
00:02:42,460 --> 00:02:49,150
bunch of scenarios and we see Wow all

59
00:02:46,270 --> 00:02:50,770
the time sender and a receiver that are

60
00:02:49,150 --> 00:02:53,680
basically are scattered around the

61
00:02:50,770 --> 00:02:55,390
network and send<font color="#CCCCCC"> keep-alive packets</font>

62
00:02:53,680 --> 00:02:56,860
between each other and we monitor

63
00:02:55,390 --> 00:02:59,859
biblically the wizard of those<font color="#CCCCCC"> keep</font>

64
00:02:56,860 --> 00:03:04,150
<font color="#E5E5E5">allies and we report matrix such as</font>

65
00:02:59,860 --> 00:03:06,810
packet loss latency and jitter this is

66
00:03:04,150 --> 00:03:10,300
great but it's got actually two<font color="#CCCCCC"> major</font>

67
00:03:06,810 --> 00:03:11,800
issues only the best<font color="#E5E5E5"> paths between those</font>

68
00:03:10,300 --> 00:03:14,500
<font color="#CCCCCC">senders and receivers is monitored</font>

69
00:03:11,800 --> 00:03:16,090
waiting so if something happens in the

70
00:03:14,500 --> 00:03:20,380
middle of the great glove instead of the

71
00:03:16,090 --> 00:03:21,910
blue dots nobody knows and also you

72
00:03:20,380 --> 00:03:24,640
actually kind of hard to isolate the

73
00:03:21,910 --> 00:03:25,960
issue we know there's a problem<font color="#E5E5E5"> but</font>

74
00:03:24,640 --> 00:03:28,059
actually<font color="#CCCCCC"> we know that this point between</font>

75
00:03:25,960 --> 00:03:33,760
the end-to-end packets but we don't know

76
00:03:28,060 --> 00:03:35,970
<font color="#CCCCCC">where the problem is all right so that's</font>

77
00:03:33,760 --> 00:03:38,440
not good<font color="#CCCCCC"> enough actually we wanted more</font>

78
00:03:35,970 --> 00:03:39,940
we network operator doesn't involve we

79
00:03:38,440 --> 00:03:41,740
wanted<font color="#E5E5E5"> actually complete coverage we</font>

80
00:03:39,940 --> 00:03:43,900
didn't want it<font color="#CCCCCC"> test</font><font color="#E5E5E5"> only the best path</font>

81
00:03:41,740 --> 00:03:46,360
we wanted to test every single path we

82
00:03:43,900 --> 00:03:48,760
wanted<font color="#E5E5E5"> to test every single device and</font>

83
00:03:46,360 --> 00:03:51,490
link in a network not only the best bath

84
00:03:48,760 --> 00:03:53,500
and we wanted actuate the system to tell

85
00:03:51,490 --> 00:03:55,420
us where is the problem whereas the

86
00:03:53,500 --> 00:03:56,950
problem coming form not<font color="#E5E5E5"> that we have a</font>

87
00:03:55,420 --> 00:03:58,660
problem I mean knowing that you have<font color="#E5E5E5"> a</font>

88
00:03:56,950 --> 00:04:00,040
problem is a good thing but telling us

89
00:03:58,660 --> 00:04:03,870
exactly what the problem<font color="#CCCCCC"> is is much</font>

90
00:04:00,040 --> 00:04:08,049
better and we want to be able to monitor

91
00:04:03,870 --> 00:04:10,300
or test traffic on devices which are not

92
00:04:08,050 --> 00:04:12,760
<font color="#CCCCCC">yet in production typically we don't</font>

93
00:04:10,300 --> 00:04:15,040
want you to use your search queries and

94
00:04:12,760 --> 00:04:16,510
<font color="#CCCCCC">youtube videos to discover that we have</font>

95
00:04:15,040 --> 00:04:18,399
<font color="#CCCCCC">a problem in our network we want to be</font>

96
00:04:16,510 --> 00:04:21,010
able to actually bring a<font color="#CCCCCC"> brand new</font><font color="#E5E5E5"> box</font>

97
00:04:18,399 --> 00:04:26,890
and test it before putting in<font color="#E5E5E5"> live in</font>

98
00:04:21,010 --> 00:04:30,610
the network so how do you<font color="#E5E5E5"> actually cover</font>

99
00:04:26,890 --> 00:04:33,460
every single<font color="#E5E5E5"> element we could be running</font>

100
00:04:30,610 --> 00:04:35,710
something<font color="#E5E5E5"> like IP SLA we could be</font>

101
00:04:33,460 --> 00:04:37,349
<font color="#E5E5E5">learning something on the your CPU of</font>

102
00:04:35,710 --> 00:04:41,729
the of the network elements

103
00:04:37,350 --> 00:04:44,220
and pinging all the adjacencies of view

104
00:04:41,730 --> 00:04:47,220
of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> neighbors but as we discovered</font>

105
00:04:44,220 --> 00:04:49,740
the traffic from the<font color="#E5E5E5"> cpu is not switched</font>

106
00:04:47,220 --> 00:04:52,050
like the pollution traffic it doesn't go

107
00:04:49,740 --> 00:04:55,110
for the switching fabric actually I've

108
00:04:52,050 --> 00:04:57,120
got a good example in a network not

109
00:04:55,110 --> 00:05:00,330
<font color="#E5E5E5">Google will never happen on google and</font>

110
00:04:57,120 --> 00:05:02,160
not<font color="#E5E5E5"> me once no I so it was his team</font>

111
00:05:00,330 --> 00:05:04,169
actually bought up a a new box in<font color="#CCCCCC"> the</font>

112
00:05:02,160 --> 00:05:06,930
network so the insula bog they actually

113
00:05:04,170 --> 00:05:09,210
write the box into<font color="#CCCCCC"> the into the rags put</font>

114
00:05:06,930 --> 00:05:12,120
up with the power supplies with the line

115
00:05:09,210 --> 00:05:14,810
cutting you know put working engine and

116
00:05:12,120 --> 00:05:17,670
so forth power<font color="#E5E5E5"> the box put up the box</font>

117
00:05:14,810 --> 00:05:19,020
box was basically put it so they went

118
00:05:17,670 --> 00:05:22,440
online and actually started to configure

119
00:05:19,020 --> 00:05:25,380
the box<font color="#E5E5E5"> tech acts look back into</font><font color="#CCCCCC"> a</font>

120
00:05:22,440 --> 00:05:26,940
vessel IP address<font color="#E5E5E5"> on the interfaces then</font>

121
00:05:25,380 --> 00:05:28,740
I started<font color="#E5E5E5"> to ping the interfaces around</font>

122
00:05:26,940 --> 00:05:31,170
to see<font color="#E5E5E5"> active</font><font color="#CCCCCC"> the links we're live and</font>

123
00:05:28,740 --> 00:05:33,840
<font color="#E5E5E5">so on and everything was clean therefore</font>

124
00:05:31,170 --> 00:05:37,110
you know let's put this<font color="#E5E5E5"> book in I GP so</font>

125
00:05:33,840 --> 00:05:39,060
let's compute<font color="#CCCCCC"> IGP put</font><font color="#E5E5E5"> hi metric on it</font>

126
00:05:37,110 --> 00:05:42,510
make sure that his box is not yet in the

127
00:05:39,060 --> 00:05:46,680
best path and adjacencies came up that

128
00:05:42,510 --> 00:05:49,890
means good so let's configure bgp bgp

129
00:05:46,680 --> 00:05:51,450
came up everything is good so the team

130
00:05:49,890 --> 00:05:54,030
did the dash checks everything is fine

131
00:05:51,450 --> 00:05:55,530
clean yet can ping everything clear the

132
00:05:54,030 --> 00:05:58,229
counter look at the counter so get the

133
00:05:55,530 --> 00:06:01,229
logs no no let's actually drop the

134
00:05:58,230 --> 00:06:04,140
metric into production matrix to become

135
00:06:01,230 --> 00:06:06,930
part<font color="#E5E5E5"> of the network and as soon as I do</font>

136
00:06:04,140 --> 00:06:10,710
that the nog starter receives black box

137
00:06:06,930 --> 00:06:12,720
monitoring errors and it checks so we

138
00:06:10,710 --> 00:06:14,310
don't know I mean it looks clean<font color="#CCCCCC"> and the</font>

139
00:06:12,720 --> 00:06:15,750
nog says you know<font color="#CCCCCC"> what it happened</font>

140
00:06:14,310 --> 00:06:18,300
exactly<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> time that you guys did</font>

141
00:06:15,750 --> 00:06:20,760
<font color="#CCCCCC">that so it's</font><font color="#E5E5E5"> got to</font><font color="#CCCCCC"> be you so we can't</font>

142
00:06:18,300 --> 00:06:22,950
see any program so they rise the metric

143
00:06:20,760 --> 00:06:26,219
<font color="#CCCCCC">ire and took the box out</font><font color="#E5E5E5"> of the topology</font>

144
00:06:22,950 --> 00:06:27,960
and started to troubleshoot and it

145
00:06:26,220 --> 00:06:30,900
realize actually when they assemble the

146
00:06:27,960 --> 00:06:32,880
<font color="#E5E5E5">box they forgot one kind of key element</font>

147
00:06:30,900 --> 00:06:36,599
of the box<font color="#E5E5E5"> they forgot to put the</font>

148
00:06:32,880 --> 00:06:37,860
switching fabric so the packet<font color="#E5E5E5"> the</font>

149
00:06:36,600 --> 00:06:39,960
<font color="#E5E5E5">writing engine could actually talk to</font>

150
00:06:37,860 --> 00:06:41,550
each other the writing engine could talk

151
00:06:39,960 --> 00:06:43,530
to<font color="#CCCCCC"> each of</font><font color="#E5E5E5"> his neighbor because the path</font>

152
00:06:41,550 --> 00:06:45,419
is not<font color="#E5E5E5"> going for this region fabric the</font>

153
00:06:43,530 --> 00:06:47,280
ISS will come out BG we would come up

154
00:06:45,419 --> 00:06:49,320
everything was fine except the<font color="#E5E5E5"> box could</font>

155
00:06:47,280 --> 00:06:51,219
<font color="#E5E5E5">not forward in a packet that was pretty</font>

156
00:06:49,320 --> 00:06:55,330
bad I was not a good

157
00:06:51,220 --> 00:06:57,460
of course so just actually that just

158
00:06:55,330 --> 00:07:00,159
showed us yeah it's the locally

159
00:06:57,460 --> 00:07:01,359
generated package don't actually go for

160
00:07:00,160 --> 00:07:05,080
the right path so therefore it's not

161
00:07:01,360 --> 00:07:08,080
actually useful so in order to actually

162
00:07:05,080 --> 00:07:10,060
to do exhausted coverage so first of all

163
00:07:08,080 --> 00:07:12,669
with black box monitoring when you send

164
00:07:10,060 --> 00:07:15,820
<font color="#E5E5E5">packets for the network and they they</font>

165
00:07:12,670 --> 00:07:17,920
they drop out you lose them you quickly

166
00:07:15,820 --> 00:07:19,210
wonder where they were the loss<font color="#CCCCCC"> and you</font>

167
00:07:17,920 --> 00:07:20,800
have to the problem with black box

168
00:07:19,210 --> 00:07:23,169
monitoring you have to go back in time

169
00:07:20,800 --> 00:07:25,270
and find the state of the network when

170
00:07:23,170 --> 00:07:28,210
the packet was lost what was the best

171
00:07:25,270 --> 00:07:30,250
<font color="#E5E5E5">path between the endpoints for fem back</font>

172
00:07:28,210 --> 00:07:32,440
when the bucket was lost it's a really

173
00:07:30,250 --> 00:07:33,880
really hard problem to fit to solve and

174
00:07:32,440 --> 00:07:36,810
therefore you know that's why we do

175
00:07:33,880 --> 00:07:39,969
troubleshooting so instead of doing that

176
00:07:36,810 --> 00:07:42,790
we actually our solution was to use

177
00:07:39,970 --> 00:07:45,430
suits beds running because if you use

178
00:07:42,790 --> 00:07:47,950
swords running for all of<font color="#E5E5E5"> those packets</font>

179
00:07:45,430 --> 00:07:50,980
we can<font color="#CCCCCC"> actually tell the packets were to</font>

180
00:07:47,950 --> 00:07:52,630
go and for what path therefore we can

181
00:07:50,980 --> 00:07:53,980
say I'm<font color="#E5E5E5"> going to target everything</font>

182
00:07:52,630 --> 00:07:55,960
<font color="#CCCCCC">you're not--and link in the network</font>

183
00:07:53,980 --> 00:07:58,990
because i know i can tell the packet

184
00:07:55,960 --> 00:08:01,180
where to go and also i will know where

185
00:07:58,990 --> 00:08:03,700
where it was supposed to<font color="#CCCCCC"> go</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> i lose</font><font color="#E5E5E5"> it</font>

186
00:08:01,180 --> 00:08:06,130
so if<font color="#CCCCCC"> i got enough flows of soups ready</font>

187
00:08:03,700 --> 00:08:08,440
packet like this and i drop some of them

188
00:08:06,130 --> 00:08:11,260
I've got the list<font color="#E5E5E5"> of suspects that</font>

189
00:08:08,440 --> 00:08:14,320
suspect interfaces or suspect nodes that

190
00:08:11,260 --> 00:08:15,760
were on the path for sure and if I if I

191
00:08:14,320 --> 00:08:17,229
actually take all those suspect together

192
00:08:15,760 --> 00:08:19,750
of all those flows and I intersect them

193
00:08:17,229 --> 00:08:23,680
I may<font color="#E5E5E5"> actually find the culprit so it's</font>

194
00:08:19,750 --> 00:08:30,250
a mesh it's a much better<font color="#E5E5E5"> wait to to</font>

195
00:08:23,680 --> 00:08:32,130
<font color="#CCCCCC">actually do our our coverage so yeah and</font>

196
00:08:30,250 --> 00:08:34,210
<font color="#E5E5E5">also it makes it makes it possible to</font>

197
00:08:32,130 --> 00:08:36,338
<font color="#CCCCCC">call right we can actually suddenly we</font>

198
00:08:34,210 --> 00:08:39,460
can correct things so what we use we use

199
00:08:36,339 --> 00:08:43,120
actually mpls t we use is<font color="#CCCCCC"> vp known see</font>

200
00:08:39,460 --> 00:08:44,710
SPF signaled LSPs with<font color="#CCCCCC"> 32 hours and</font>

201
00:08:43,120 --> 00:08:49,330
that's basically all we've done<font color="#E5E5E5"> also</font>

202
00:08:44,710 --> 00:08:50,860
starring so but more importantly we

203
00:08:49,330 --> 00:08:52,810
don't want to test links only we don't

204
00:08:50,860 --> 00:08:55,000
text we don't want to text<font color="#E5E5E5"> to test</font>

205
00:08:52,810 --> 00:08:57,280
simply links and nodes we won't tell the

206
00:08:55,000 --> 00:08:59,200
ability for a<font color="#CCCCCC"> writer to actually take a</font>

207
00:08:57,280 --> 00:09:00,970
packet from it<font color="#CCCCCC"> any kind of ingress and</font>

208
00:08:59,200 --> 00:09:03,220
be able to switch it to any kind of

209
00:09:00,970 --> 00:09:04,959
egress so we want<font color="#E5E5E5"> to test or combination</font>

210
00:09:03,220 --> 00:09:05,410
that's a lot of flows but it's much more

211
00:09:04,959 --> 00:09:10,628
important

212
00:09:05,410 --> 00:09:12,969
then just links and this is actually<font color="#CCCCCC"> a</font>

213
00:09:10,629 --> 00:09:15,490
<font color="#CCCCCC">call distribution access type of</font><font color="#E5E5E5"> network</font>

214
00:09:12,970 --> 00:09:17,500
and just to<font color="#CCCCCC"> give you a mental picture of</font>

215
00:09:15,490 --> 00:09:18,879
what it would look like with all those

216
00:09:17,500 --> 00:09:24,100
<font color="#CCCCCC">deaths</font><font color="#E5E5E5"> that did occur but what it was</font>

217
00:09:18,879 --> 00:09:26,649
like so it's a lot<font color="#CCCCCC"> of lot of tests also</font>

218
00:09:24,100 --> 00:09:28,540
actually<font color="#E5E5E5"> yes these packets are processed</font>

219
00:09:26,649 --> 00:09:30,009
in strict I and highest quality of

220
00:09:28,540 --> 00:09:31,930
service so if you drop something you

221
00:09:30,009 --> 00:09:34,060
know you have<font color="#E5E5E5"> to investigate because</font>

222
00:09:31,930 --> 00:09:36,489
that means<font color="#E5E5E5"> your search traffic was lost</font>

223
00:09:34,060 --> 00:09:42,699
as well<font color="#E5E5E5"> so we don't want to you know</font>

224
00:09:36,490 --> 00:09:43,959
like that so and now<font color="#E5E5E5"> I'm going to end</font>

225
00:09:42,699 --> 00:09:46,180
over to Ross who is<font color="#E5E5E5"> going to actually</font>

226
00:09:43,959 --> 00:09:50,529
talk about<font color="#E5E5E5"> the coalition engine and the</font>

227
00:09:46,180 --> 00:09:52,628
mapping<font color="#E5E5E5"> Android thank you thanks a lot</font>

228
00:09:50,529 --> 00:09:54,189
yeah Nicholas was his firm network

229
00:09:52,629 --> 00:09:56,350
engineering and he came<font color="#E5E5E5"> up with the</font>

230
00:09:54,189 --> 00:09:58,719
whole<font color="#E5E5E5"> concept and I'm from the software</font>

231
00:09:56,350 --> 00:09:59,889
part of network engineering and we

232
00:09:58,720 --> 00:10:02,110
decided<font color="#E5E5E5"> to work out how to implement</font>

233
00:09:59,889 --> 00:10:04,779
this and so the first thing to do is

234
00:10:02,110 --> 00:10:07,889
okay we've got<font color="#E5E5E5"> these paths how do we</font>

235
00:10:04,779 --> 00:10:10,120
<font color="#E5E5E5">actually find the find the culprits and</font>

236
00:10:07,889 --> 00:10:13,089
that was a very<font color="#E5E5E5"> interesting problem and</font>

237
00:10:10,120 --> 00:10:14,949
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> fun to solve actually so</font>

238
00:10:13,089 --> 00:10:16,120
clearly<font color="#E5E5E5"> what's a coral adds got to do</font>

239
00:10:14,949 --> 00:10:18,040
it's got to find the<font color="#E5E5E5"> faulty links</font>

240
00:10:16,120 --> 00:10:19,149
firstly it's got heaven and it's<font color="#CCCCCC"> gotta</font>

241
00:10:18,040 --> 00:10:21,160
have as little as possible<font color="#E5E5E5"> false</font>

242
00:10:19,149 --> 00:10:24,040
positives or false negatives because our

243
00:10:21,160 --> 00:10:25,089
operations guys don't like bein don't

244
00:10:24,040 --> 00:10:26,769
like to be annoyed with things they

245
00:10:25,089 --> 00:10:28,089
can't do anything<font color="#E5E5E5"> with they if they're</font>

246
00:10:26,769 --> 00:10:29,350
given them alert they want to know where

247
00:10:28,089 --> 00:10:32,110
it is so<font color="#CCCCCC"> they can</font><font color="#E5E5E5"> fix it as soon as</font>

248
00:10:29,350 --> 00:10:34,569
possible also they want to know<font color="#E5E5E5"> how bad</font>

249
00:10:32,110 --> 00:10:37,660
the fault is is it is it one packet in a

250
00:10:34,569 --> 00:10:39,729
thousand one packet in two or whatever

251
00:10:37,660 --> 00:10:42,310
and also we want to store it<font color="#E5E5E5"> the long</font>

252
00:10:39,730 --> 00:10:44,560
term so we<font color="#E5E5E5"> can firstly see the trends</font>

253
00:10:42,310 --> 00:10:46,209
and also go back to previous events and

254
00:10:44,560 --> 00:10:48,758
see what<font color="#CCCCCC"> actually happened at that time</font>

255
00:10:46,209 --> 00:10:51,518
so we want<font color="#E5E5E5"> to create a time series for</font>

256
00:10:48,759 --> 00:10:53,290
every single<font color="#E5E5E5"> element now network so we</font>

257
00:10:51,519 --> 00:10:55,809
knew where the correlated need to do the

258
00:10:53,290 --> 00:10:59,439
tricky thing was how hard or easy

259
00:10:55,809 --> 00:11:00,579
actually<font color="#E5E5E5"> is it so just</font><font color="#CCCCCC"> to give you a</font>

260
00:10:59,439 --> 00:11:02,769
knife this<font color="#E5E5E5"> is really just to give you an</font>

261
00:11:00,579 --> 00:11:04,719
idea of what<font color="#CCCCCC"> the problem what</font><font color="#E5E5E5"> the</font>

262
00:11:02,769 --> 00:11:06,279
problem looks like he's a very simple

263
00:11:04,720 --> 00:11:07,839
<font color="#CCCCCC">network so obviously a lot simpler</font><font color="#E5E5E5"> than</font>

264
00:11:06,279 --> 00:11:11,459
that work we actually analyzing but it

265
00:11:07,839 --> 00:11:14,529
gives<font color="#CCCCCC"> you</font><font color="#E5E5E5"> an idea of what's</font><font color="#CCCCCC"> going on so</font>

266
00:11:11,459 --> 00:11:16,859
here is<font color="#CCCCCC"> a simple simple situation where</font>

267
00:11:14,529 --> 00:11:19,270
the colored paths are all the<font color="#E5E5E5"> different</font>

268
00:11:16,860 --> 00:11:21,250
these are LSP soil

269
00:11:19,270 --> 00:11:23,170
engineered pars that we've created

270
00:11:21,250 --> 00:11:26,860
<font color="#E5E5E5">through the network and we're setting</font>

271
00:11:23,170 --> 00:11:29,410
packets through those and basically

272
00:11:26,860 --> 00:11:31,900
imagine if a fault occurs there and it

273
00:11:29,410 --> 00:11:34,150
this is a nice simple fault it<font color="#CCCCCC"> you know</font>

274
00:11:31,900 --> 00:11:35,260
there's a cable break or something<font color="#E5E5E5"> like</font>

275
00:11:34,150 --> 00:11:37,660
something<font color="#E5E5E5"> which causes a hundred percent</font>

276
00:11:35,260 --> 00:11:39,580
packet loss and that actually<font color="#E5E5E5"> looking at</font>

277
00:11:37,660 --> 00:11:42,579
that it<font color="#CCCCCC"> looks quite simple as you can</font>

278
00:11:39,580 --> 00:11:45,520
see every single LSP going through every

279
00:11:42,580 --> 00:11:47,770
single path<font color="#E5E5E5"> or LSP which</font><font color="#CCCCCC"> I'll call call</font>

280
00:11:45,520 --> 00:11:50,110
them most of the time has gone down if

281
00:11:47,770 --> 00:11:53,199
you look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the if you look at the if</font>

282
00:11:50,110 --> 00:11:54,640
you<font color="#E5E5E5"> look at all the down paths and look</font>

283
00:11:53,200 --> 00:11:56,350
at what<font color="#CCCCCC"> sink what they've got in common</font>

284
00:11:54,640 --> 00:12:00,670
if you do a simple set set intersection

285
00:11:56,350 --> 00:12:03,820
you can see<font color="#CCCCCC"> that it's r3 r4 and clearly</font>

286
00:12:00,670 --> 00:12:05,170
that's where the problem is if the world

287
00:12:03,820 --> 00:12:06,550
was like that this<font color="#E5E5E5"> would actually a very</font>

288
00:12:05,170 --> 00:12:07,990
simple problem<font color="#E5E5E5"> to solve and they</font>

289
00:12:06,550 --> 00:12:09,670
<font color="#E5E5E5">certainly wouldn't i wouldn't need to</font>

290
00:12:07,990 --> 00:12:11,140
spend quite a lot<font color="#E5E5E5"> of time working out</font>

291
00:12:09,670 --> 00:12:19,030
the algorithms and writing the code for

292
00:12:11,140 --> 00:12:20,920
it<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> but it isn't simple because</font>

293
00:12:19,030 --> 00:12:23,680
firstly our network<font color="#E5E5E5"> is made of and</font>

294
00:12:20,920 --> 00:12:25,420
network is made of lots of we've got

295
00:12:23,680 --> 00:12:27,189
bundles which might have which might

296
00:12:25,420 --> 00:12:29,469
have certainly have multiple paths

297
00:12:27,190 --> 00:12:31,720
<font color="#CCCCCC">cinema</font><font color="#E5E5E5"> have four different components</font>

298
00:12:29,470 --> 00:12:33,490
eight different components in a single

299
00:12:31,720 --> 00:12:35,380
logical link and as I'm sure you know

300
00:12:33,490 --> 00:12:37,210
people who are familiar with with an

301
00:12:35,380 --> 00:12:40,870
<font color="#E5E5E5">traffic engineering the paths engineer</font>

302
00:12:37,210 --> 00:12:43,420
that layer<font color="#E5E5E5"> three not at layer 2 so one</font>

303
00:12:40,870 --> 00:12:44,950
illus p could go through through a

304
00:12:43,420 --> 00:12:49,750
component which is working<font color="#E5E5E5"> while another</font>

305
00:12:44,950 --> 00:12:51,370
component could<font color="#E5E5E5"> be broken and also</font>

306
00:12:49,750 --> 00:12:53,050
you've got you and you've got situations

307
00:12:51,370 --> 00:12:56,650
like you don't know the hash and you

308
00:12:53,050 --> 00:12:57,819
really never know the hash and you then

309
00:12:56,650 --> 00:13:00,250
then you've got then you've got

310
00:12:57,820 --> 00:13:01,810
situations where um where<font color="#CCCCCC"> you might have</font>

311
00:13:00,250 --> 00:13:03,580
very low packet loss so you might have

312
00:13:01,810 --> 00:13:08,109
lots of LSPs through a single link that

313
00:13:03,580 --> 00:13:09,580
work and 1 l-sb that doesn't so how<font color="#CCCCCC"> i</font>

314
00:13:08,110 --> 00:13:11,350
look at this it was there<font color="#E5E5E5"> was there was</font>

315
00:13:09,580 --> 00:13:13,540
it wasn't<font color="#CCCCCC"> a one-to-one and onto type</font>

316
00:13:11,350 --> 00:13:15,460
relationship well<font color="#CCCCCC"> i mean by that</font><font color="#E5E5E5"> is if</font>

317
00:13:13,540 --> 00:13:17,170
you knew<font color="#CCCCCC"> and if you knew a path was bad</font>

318
00:13:15,460 --> 00:13:20,560
he knew that<font color="#E5E5E5"> there had to be a bad</font>

319
00:13:17,170 --> 00:13:21,969
component but if a path was good if you

320
00:13:20,560 --> 00:13:23,890
<font color="#E5E5E5">could have you could still have bad</font>

321
00:13:21,970 --> 00:13:26,320
components and that's the real important

322
00:13:23,890 --> 00:13:28,240
thing to think about because<font color="#E5E5E5"> otherwise</font>

323
00:13:26,320 --> 00:13:30,460
the solution would be simple you could

324
00:13:28,240 --> 00:13:32,260
take<font color="#E5E5E5"> all the bad parts look at the</font>

325
00:13:30,460 --> 00:13:33,310
components of the bad paths and say<font color="#CCCCCC"> okay</font>

326
00:13:32,260 --> 00:13:35,380
<font color="#E5E5E5">let's mark them</font>

327
00:13:33,310 --> 00:13:37,689
possibly bad they look with<font color="#CCCCCC"> all the good</font>

328
00:13:35,380 --> 00:13:40,060
parts say that they're definitely good

329
00:13:37,690 --> 00:13:42,070
then subtract definitely good from

330
00:13:40,060 --> 00:13:44,560
possibly bad and you have probably bad

331
00:13:42,070 --> 00:13:46,050
almost<font color="#E5E5E5"> definitely bad nice and we</font>

332
00:13:44,560 --> 00:13:48,699
actually<font color="#E5E5E5"> wrote a</font><font color="#CCCCCC"> correlator</font><font color="#E5E5E5"> do that and</font>

333
00:13:46,050 --> 00:13:50,170
for lots of<font color="#E5E5E5"> for simple situations like</font>

334
00:13:48,700 --> 00:13:53,350
the one I showed you earlier it worked

335
00:13:50,170 --> 00:13:54,910
beautifully but in reality you'll get

336
00:13:53,350 --> 00:13:57,630
<font color="#E5E5E5">you get situations where you have multi</font>

337
00:13:54,910 --> 00:13:59,740
where you can have multiple thoughts

338
00:13:57,630 --> 00:14:01,839
<font color="#CCCCCC">well firstly get a situation like this</font>

339
00:13:59,740 --> 00:14:05,890
<font color="#E5E5E5">where you</font><font color="#CCCCCC"> can have just packet loss on</font>

340
00:14:01,839 --> 00:14:08,170
some of the links and then you can<font color="#E5E5E5"> have</font>

341
00:14:05,890 --> 00:14:09,699
multiple faults so you could<font color="#E5E5E5"> have you</font>

342
00:14:08,170 --> 00:14:12,729
<font color="#E5E5E5">have a situation that you've got to work</font>

343
00:14:09,700 --> 00:14:14,800
out which LSPs is causing which which

344
00:14:12,730 --> 00:14:16,210
bitter loss<font color="#CCCCCC"> enough again the situation</font>

345
00:14:14,800 --> 00:14:18,310
of two is<font color="#E5E5E5"> actually quite simple to do</font>

346
00:14:16,210 --> 00:14:20,380
when there's seven or eight or nine<font color="#CCCCCC"> or</font>

347
00:14:18,310 --> 00:14:22,329
ten or<font color="#E5E5E5"> fifteen different faults and some</font>

348
00:14:20,380 --> 00:14:24,689
<font color="#CCCCCC">long-term it becomes actually a</font>

349
00:14:22,330 --> 00:14:27,610
computationally difficult problem to do

350
00:14:24,690 --> 00:14:29,110
so what we tried<font color="#E5E5E5"> first get recently</font>

351
00:14:27,610 --> 00:14:30,730
simple-minded we said let's make<font color="#E5E5E5"> an</font>

352
00:14:29,110 --> 00:14:32,440
average we've got we've got<font color="#CCCCCC"> lots of if</font>

353
00:14:30,730 --> 00:14:34,690
we have lots of paths through a sink

354
00:14:32,440 --> 00:14:37,120
through am through an individual link

355
00:14:34,690 --> 00:14:38,920
then we can just average the loss<font color="#E5E5E5"> and</font>

356
00:14:37,120 --> 00:14:40,900
typically where the loss is bad you'll

357
00:14:38,920 --> 00:14:42,430
have a high value where the loss is

358
00:14:40,900 --> 00:14:45,579
where there's no loss you'll have a low

359
00:14:42,430 --> 00:14:46,510
value unfortunately when you if you've

360
00:14:45,580 --> 00:14:48,610
got something going through<font color="#E5E5E5"> ten</font>

361
00:14:46,510 --> 00:14:50,439
different links and one of them has one

362
00:14:48,610 --> 00:14:52,750
of them<font color="#E5E5E5"> has a has a problem that that</font>

363
00:14:50,440 --> 00:14:56,140
loss gets shared amongst<font color="#E5E5E5"> them all so you</font>

364
00:14:52,750 --> 00:14:59,320
tend to<font color="#E5E5E5"> get Hills rather than the error</font>

365
00:14:56,140 --> 00:15:01,720
is<font color="#CCCCCC"> an yo in position one position two in</font>

366
00:14:59,320 --> 00:15:03,880
position 12 it said thats roundabout

367
00:15:01,720 --> 00:15:05,620
position one around about position two I

368
00:15:03,880 --> 00:15:07,390
showed this to the network operations

369
00:15:05,620 --> 00:15:09,280
guys and they said well that's beautiful

370
00:15:07,390 --> 00:15:10,480
beautiful graphs there but can't do a

371
00:15:09,280 --> 00:15:11,980
thing with that I don't care<font color="#E5E5E5"> about how</font>

372
00:15:10,480 --> 00:15:16,209
good the technology is that's not good

373
00:15:11,980 --> 00:15:19,630
<font color="#CCCCCC">enough for me but we did see that that</font>

374
00:15:16,209 --> 00:15:21,579
that if you did it one pass<font color="#E5E5E5"> and then</font>

375
00:15:19,630 --> 00:15:22,720
took the high points and said what's

376
00:15:21,580 --> 00:15:24,310
probably there in rather than

377
00:15:22,720 --> 00:15:26,170
defectively ran the algorithm again

378
00:15:24,310 --> 00:15:28,569
we've got better and better results but

379
00:15:26,170 --> 00:15:30,250
again we thought we're mucking around

380
00:15:28,570 --> 00:15:32,050
the agency is this feels like an

381
00:15:30,250 --> 00:15:35,920
optimization problem and this is our

382
00:15:32,050 --> 00:15:38,380
Eureka moment we said<font color="#CCCCCC"> okay let's let's</font>

383
00:15:35,920 --> 00:15:41,800
think about things being broken or

384
00:15:38,380 --> 00:15:43,630
working and so<font color="#E5E5E5"> simply we take all the</font>

385
00:15:41,800 --> 00:15:46,120
<font color="#CCCCCC">paths we classify them as good or bad</font>

386
00:15:43,630 --> 00:15:50,200
and how you define that<font color="#E5E5E5"> is up to</font>

387
00:15:46,120 --> 00:15:52,270
a second a second problem won't you do

388
00:15:50,200 --> 00:15:55,540
that if you<font color="#CCCCCC"> if you can market problem is</font>

389
00:15:52,270 --> 00:15:57,189
if you can mark a path as bad then you

390
00:15:55,540 --> 00:16:03,219
know that has a bad path that's the one

391
00:15:57,190 --> 00:16:04,960
thing you do know and yes so what you

392
00:16:03,220 --> 00:16:06,700
need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do is unit what you're</font><font color="#E5E5E5"> what you</font>

393
00:16:04,960 --> 00:16:09,400
really need to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> is find the myth find</font>

394
00:16:06,700 --> 00:16:12,850
the list of bad components that covers

395
00:16:09,400 --> 00:16:14,890
every bad path and clearly if you that

396
00:16:12,850 --> 00:16:16,660
way<font color="#CCCCCC"> you've that way you've got to answer</font>

397
00:16:14,890 --> 00:16:18,580
for every reason what so you've come<font color="#E5E5E5"> up</font>

398
00:16:16,660 --> 00:16:21,010
with a set of<font color="#E5E5E5"> paths so a set of links</font>

399
00:16:18,580 --> 00:16:23,710
that where one of<font color="#E5E5E5"> those elements is in</font>

400
00:16:21,010 --> 00:16:25,029
every bad path and therefore you know

401
00:16:23,710 --> 00:16:28,900
that you know<font color="#CCCCCC"> that</font><font color="#E5E5E5"> that's most likely</font>

402
00:16:25,029 --> 00:16:30,490
the problem and really just<font color="#E5E5E5"> comes so</font>

403
00:16:28,900 --> 00:16:32,589
this now this can be framed in a

404
00:16:30,490 --> 00:16:35,230
standard we were so we framed this is a

405
00:16:32,589 --> 00:16:36,910
boolean linear programming problem using

406
00:16:35,230 --> 00:16:39,910
a good old primal simplex and<font color="#E5E5E5"> stuff like</font>

407
00:16:36,910 --> 00:16:42,279
that<font color="#CCCCCC"> so traditional setcolor problem and</font>

408
00:16:39,910 --> 00:16:44,170
this was<font color="#E5E5E5"> literally a Eureka moment we</font>

409
00:16:42,279 --> 00:16:47,170
did this and we started to get very good

410
00:16:44,170 --> 00:16:49,060
results so<font color="#CCCCCC"> the tricky thing was getting</font>

411
00:16:47,170 --> 00:16:50,680
getting getting<font color="#E5E5E5"> the optimization problem</font>

412
00:16:49,060 --> 00:16:52,810
if you if people are familiar with

413
00:16:50,680 --> 00:16:54,729
linear programming you need to set your

414
00:16:52,810 --> 00:16:55,989
constraints and you then then used<font color="#CCCCCC"> to</font>

415
00:16:54,730 --> 00:16:57,839
have<font color="#E5E5E5"> Europe your function which you need</font>

416
00:16:55,990 --> 00:17:00,250
to optimize either maximize and minimize

417
00:16:57,839 --> 00:17:02,290
that's what we<font color="#E5E5E5"> did there was lots and</font>

418
00:17:00,250 --> 00:17:04,359
lots of<font color="#E5E5E5"> research in this about how to</font>

419
00:17:02,290 --> 00:17:06,309
get<font color="#E5E5E5"> this just right but basically we</font>

420
00:17:04,359 --> 00:17:07,869
worked out that if you<font color="#E5E5E5"> try</font><font color="#CCCCCC"> and minimize</font>

421
00:17:06,309 --> 00:17:13,089
the number of links and<font color="#E5E5E5"> I have a glass</font>

422
00:17:07,869 --> 00:17:16,300
of water and and make it as unambiguous

423
00:17:13,089 --> 00:17:18,428
as possible and biases away from

424
00:17:16,300 --> 00:17:21,609
solutions that are too simple<font color="#E5E5E5"> by that I</font>

425
00:17:18,429 --> 00:17:23,199
mean<font color="#E5E5E5"> we have sources of packets clearly</font>

426
00:17:21,609 --> 00:17:25,240
if you've got 12 if you've<font color="#E5E5E5"> got three</font>

427
00:17:23,199 --> 00:17:27,490
sources of packets and you've got four

428
00:17:25,240 --> 00:17:28,809
errors the easiest solution is to say

429
00:17:27,490 --> 00:17:31,420
well<font color="#E5E5E5"> two three sources of packets were</font>

430
00:17:28,809 --> 00:17:34,570
to the problem clearly and usually

431
00:17:31,420 --> 00:17:37,150
that's not the case so basically taking

432
00:17:34,570 --> 00:17:38,428
but by balancing a B and C there we were

433
00:17:37,150 --> 00:17:41,140
able<font color="#E5E5E5"> to come up with something that</font>

434
00:17:38,429 --> 00:17:43,030
<font color="#E5E5E5">almost magically once we actually put it</font>

435
00:17:41,140 --> 00:17:46,630
<font color="#E5E5E5">into production produce very good</font>

436
00:17:43,030 --> 00:17:48,220
results and and certainly and produced

437
00:17:46,630 --> 00:17:51,160
the bullying results that in it that the

438
00:17:48,220 --> 00:17:52,990
operations guys need this is<font color="#E5E5E5"> broken this</font>

439
00:17:51,160 --> 00:17:57,000
is good and then that they could proceed

440
00:17:52,990 --> 00:18:00,060
very nicely from there and of course we

441
00:17:57,000 --> 00:18:01,590
sorry about<font color="#CCCCCC"> them</font><font color="#E5E5E5"> made some horrible type</font>

442
00:18:00,060 --> 00:18:03,510
down there with with<font color="#CCCCCC"> the packets there</font>

443
00:18:01,590 --> 00:18:05,760
basically it's knowing the eight packets

444
00:18:03,510 --> 00:18:08,160
over 100 which is<font color="#E5E5E5"> two percent packet</font>

445
00:18:05,760 --> 00:18:11,160
loss I think I my fingers just go crazy

446
00:18:08,160 --> 00:18:13,050
sometimes but we did use the<font color="#E5E5E5"> good parts</font>

447
00:18:11,160 --> 00:18:15,450
we use the good pars once you've worked

448
00:18:13,050 --> 00:18:17,700
out which ones are bad then<font color="#E5E5E5"> suddenly</font>

449
00:18:15,450 --> 00:18:19,380
every good path when every path you<font color="#CCCCCC"> can</font>

450
00:18:17,700 --> 00:18:21,570
say well<font color="#E5E5E5"> if it's bad it's all in the</font>

451
00:18:19,380 --> 00:18:24,450
place where it's bad and therefore<font color="#CCCCCC"> if</font>

452
00:18:21,570 --> 00:18:26,790
you've got say<font color="#E5E5E5"> 10 10 10 good pass and</font>

453
00:18:24,450 --> 00:18:28,560
one say nine group pass and one bad path

454
00:18:26,790 --> 00:18:30,030
you can average the packet loss because

455
00:18:28,560 --> 00:18:31,770
you know it's all related to that and

456
00:18:30,030 --> 00:18:34,470
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> get very precise results and</font>

457
00:18:31,770 --> 00:18:36,480
that's it so that's especially what we

458
00:18:34,470 --> 00:18:39,180
<font color="#E5E5E5">get we get situations where it says we</font>

459
00:18:36,480 --> 00:18:41,610
say one you've<font color="#CCCCCC"> got a fault and</font><font color="#E5E5E5"> two it</font>

460
00:18:39,180 --> 00:18:43,410
<font color="#CCCCCC">looks</font><font color="#E5E5E5"> like it's point 0 1 percent and</font>

461
00:18:41,610 --> 00:18:47,370
we've actually<font color="#E5E5E5"> got we've actually gone</font>

462
00:18:43,410 --> 00:18:49,140
correctly down to as low as 10 the mind

463
00:18:47,370 --> 00:18:51,270
spot so one intend that<font color="#CCCCCC"> one</font><font color="#E5E5E5"> 10 to the</font>

464
00:18:49,140 --> 00:18:52,890
minus 5 and in our packet loss so<font color="#E5E5E5"> it's</font>

465
00:18:51,270 --> 00:18:55,139
point 0 0 1 percent and we can reliably

466
00:18:52,890 --> 00:18:56,610
do that which is been absolutely a

467
00:18:55,140 --> 00:18:58,140
revelation and we never<font color="#E5E5E5"> thought</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> get</font>

468
00:18:56,610 --> 00:19:01,290
<font color="#E5E5E5">that fat well and it's but that's how</font>

469
00:18:58,140 --> 00:19:04,020
well it worked and this is how we did it

470
00:19:01,290 --> 00:19:06,120
we<font color="#CCCCCC"> did it</font><font color="#E5E5E5"> I imagine using the</font>

471
00:19:04,020 --> 00:19:08,040
photographic paper of the<font color="#E5E5E5"> old days where</font>

472
00:19:06,120 --> 00:19:10,320
you we're<font color="#E5E5E5"> basically if you look at the</font>

473
00:19:08,040 --> 00:19:13,440
star long enough um you get the few

474
00:19:10,320 --> 00:19:16,620
<font color="#CCCCCC">collect the photons in SCCM so I if you</font>

475
00:19:13,440 --> 00:19:19,770
<font color="#E5E5E5">take a path and only fails say once</font>

476
00:19:16,620 --> 00:19:22,169
every 15 minutes if you've got<font color="#E5E5E5"> if you if</font>

477
00:19:19,770 --> 00:19:23,639
you take a 15 minute exposure then if

478
00:19:22,170 --> 00:19:25,590
there's a pathway which goes like<font color="#E5E5E5"> that</font>

479
00:19:23,640 --> 00:19:27,420
and a past which crosses it but only

480
00:19:25,590 --> 00:19:29,909
fires also over in 15 minutes but at

481
00:19:27,420 --> 00:19:31,320
random times over<font color="#E5E5E5"> 15 minutes you'll</font>

482
00:19:29,910 --> 00:19:34,080
actually get an intersection<font color="#E5E5E5"> and you can</font>

483
00:19:31,320 --> 00:19:36,750
see and so what you do is you in your

484
00:19:34,080 --> 00:19:38,520
trading temporal accuracy for spatial

485
00:19:36,750 --> 00:19:40,980
actual accuracy and just a typical trail

486
00:19:38,520 --> 00:19:42,480
off and that works very very well so we

487
00:19:40,980 --> 00:19:44,520
when we run our correlation we run at

488
00:19:42,480 --> 00:19:46,860
15-second we we run at so 15 seconds

489
00:19:44,520 --> 00:19:48,120
five minutes 1 hour and we get and

490
00:19:46,860 --> 00:19:50,340
they're different trade-offs between the

491
00:19:48,120 --> 00:19:51,899
two<font color="#CCCCCC"> things that worked exceptionally</font>

492
00:19:50,340 --> 00:19:55,199
well and that's all in production than

493
00:19:51,900 --> 00:19:57,750
working very very well so basically

494
00:19:55,200 --> 00:19:59,960
<font color="#E5E5E5">Wells</font><font color="#CCCCCC"> placek so what we did is with this</font>

495
00:19:57,750 --> 00:20:02,040
is the black box<font color="#E5E5E5"> versus white box and</font>

496
00:19:59,960 --> 00:20:03,690
this is I like the characterized by

497
00:20:02,040 --> 00:20:06,270
saying that you know with white box

498
00:20:03,690 --> 00:20:07,920
monitoring you are you basically you

499
00:20:06,270 --> 00:20:09,480
know exactly what you know that there's

500
00:20:07,920 --> 00:20:10,590
something<font color="#E5E5E5"> coming from you know where</font>

501
00:20:09,480 --> 00:20:12,630
<font color="#E5E5E5">it's coming from but</font><font color="#CCCCCC"> you don't know</font>

502
00:20:10,590 --> 00:20:13,199
whether<font color="#E5E5E5"> it's bad you have a log message</font>

503
00:20:12,630 --> 00:20:15,840
which says

504
00:20:13,200 --> 00:20:18,090
you know FCS error 23 and you go that's

505
00:20:15,840 --> 00:20:19,439
nice sure it's<font color="#E5E5E5"> coming from</font><font color="#CCCCCC"> that box</font><font color="#E5E5E5"> but</font>

506
00:20:18,090 --> 00:20:22,139
does it really mean them losing packets

507
00:20:19,440 --> 00:20:24,179
and with with black box<font color="#CCCCCC"> mines</font><font color="#E5E5E5"> ring you</font>

508
00:20:22,139 --> 00:20:26,428
know<font color="#CCCCCC"> this opponent you lost a packet but</font>

509
00:20:24,179 --> 00:20:28,260
you don't know where and so they're both

510
00:20:26,429 --> 00:20:29,519
got and so what we did what we get we

511
00:20:28,260 --> 00:20:31,320
actually know there's a<font color="#E5E5E5"> problem we</font>

512
00:20:29,519 --> 00:20:32,820
firstly we know there is a problem<font color="#E5E5E5"> and</font>

513
00:20:31,320 --> 00:20:34,139
two we know where it is so<font color="#CCCCCC"> we've</font>

514
00:20:32,820 --> 00:20:37,139
actually been get the best of both

515
00:20:34,139 --> 00:20:39,570
worlds by adding topology into the mix

516
00:20:37,139 --> 00:20:43,620
<font color="#E5E5E5">and some nice correlation software based</font>

517
00:20:39,570 --> 00:20:46,320
on linear programming and that's and

518
00:20:43,620 --> 00:20:47,789
that's and it also means<font color="#E5E5E5"> that some when</font>

519
00:20:46,320 --> 00:20:49,080
you've got simple devices they might<font color="#E5E5E5"> not</font>

520
00:20:47,789 --> 00:20:50,669
have SNMP they might not have

521
00:20:49,080 --> 00:20:52,529
sophisticated<font color="#E5E5E5"> ways of doing white box</font>

522
00:20:50,669 --> 00:20:54,450
monitoring but as long as<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> that</font>

523
00:20:52,529 --> 00:20:56,610
your packets go through the element they

524
00:20:54,450 --> 00:20:58,200
in the topology<font color="#E5E5E5"> and then you can find</font>

525
00:20:56,610 --> 00:21:00,959
out<font color="#E5E5E5"> what they are</font><font color="#CCCCCC"> so it scales very very</font>

526
00:20:58,200 --> 00:21:03,600
well to large very large numbers of very

527
00:21:00,960 --> 00:21:05,250
dumb routing components and without

528
00:21:03,600 --> 00:21:07,799
having to do SNMP monitoring which gets

529
00:21:05,250 --> 00:21:09,149
out of control<font color="#E5E5E5"> plus every arm every</font>

530
00:21:07,799 --> 00:21:11,730
manufacturer has slightly different ways

531
00:21:09,149 --> 00:21:14,668
of interpreting this then p errors some

532
00:21:11,730 --> 00:21:16,409
<font color="#E5E5E5">don't even have SMP if this this this</font>

533
00:21:14,669 --> 00:21:18,480
<font color="#CCCCCC">this basically judges the network by</font>

534
00:21:16,409 --> 00:21:21,809
what it does<font color="#CCCCCC"> not whether it says it does</font>

535
00:21:18,480 --> 00:21:24,419
and that's incredibly important so

536
00:21:21,809 --> 00:21:28,200
quickly the the correlator couldn't work

537
00:21:24,419 --> 00:21:29,399
well without a good map and a good map

538
00:21:28,200 --> 00:21:34,139
is something that covers all<font color="#CCCCCC"> the</font>

539
00:21:29,399 --> 00:21:37,559
components in in a in a as in a way such

540
00:21:34,139 --> 00:21:39,539
that there is as little correlation with

541
00:21:37,559 --> 00:21:41,580
my correlations a bad world so that

542
00:21:39,539 --> 00:21:42,990
<font color="#E5E5E5">every path is as different as possible</font>

543
00:21:41,580 --> 00:21:45,418
because when you take the<font color="#CCCCCC"> intersection</font>

544
00:21:42,990 --> 00:21:47,279
of two parts if they share five weeks

545
00:21:45,419 --> 00:21:49,110
thinking haven't got much information if

546
00:21:47,279 --> 00:21:50,760
they share a single link then you've got

547
00:21:49,110 --> 00:21:52,260
<font color="#E5E5E5">tons of information but still you need</font>

548
00:21:50,760 --> 00:21:53,879
so again it's another sort<font color="#E5E5E5"> of</font>

549
00:21:52,260 --> 00:21:56,940
optimization problem where you need to

550
00:21:53,880 --> 00:22:00,090
cover things<font color="#E5E5E5"> well and and you need to</font>

551
00:21:56,940 --> 00:22:03,120
cover extensively or completely and you

552
00:22:00,090 --> 00:22:04,559
also need to<font color="#E5E5E5"> do it as a random</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> well</font>

553
00:22:03,120 --> 00:22:07,908
what we actually do is we're trying<font color="#CCCCCC"> to</font>

554
00:22:04,559 --> 00:22:10,830
<font color="#CCCCCC">maximize the entropy of the</font><font color="#E5E5E5"> past and and</font>

555
00:22:07,909 --> 00:22:12,450
once if we can if we can and minimize

556
00:22:10,830 --> 00:22:14,789
the<font color="#CCCCCC"> mail control plane we put into</font><font color="#E5E5E5"> the</font>

557
00:22:12,450 --> 00:22:16,830
system add to the system I should say so

558
00:22:14,789 --> 00:22:18,240
basically algorithm we end up<font color="#CCCCCC"> with a</font>

559
00:22:16,830 --> 00:22:21,090
quite a simple algorithm which basically

560
00:22:18,240 --> 00:22:23,460
enumerates the paths beat two paths to

561
00:22:21,090 --> 00:22:26,730
them<font color="#E5E5E5"> basically using SPF but every time</font>

562
00:22:23,460 --> 00:22:29,580
it uses a path it increments the metro

563
00:22:26,730 --> 00:22:32,100
and reruns s and so if SPF gradually

564
00:22:29,580 --> 00:22:34,350
merges away from the shortest<font color="#E5E5E5"> path and</font>

565
00:22:32,100 --> 00:22:38,129
you wind up we've effectively an

566
00:22:34,350 --> 00:22:40,610
isentropic<font color="#E5E5E5"> census um system of</font><font color="#CCCCCC"> pars with</font>

567
00:22:38,130 --> 00:22:43,080
which which don't intersect too much and

568
00:22:40,610 --> 00:22:45,479
again make the correlator work the

569
00:22:43,080 --> 00:22:46,740
correlator couldn't work without a good

570
00:22:45,480 --> 00:22:48,720
set of paths so it's very<font color="#E5E5E5"> much a</font>

571
00:22:46,740 --> 00:22:51,780
symbiotic relationship<font color="#CCCCCC"> between the two</font>

572
00:22:48,720 --> 00:22:53,190
and and it worked well we could keep

573
00:22:51,780 --> 00:22:55,440
things within limits it didn't affect

574
00:22:53,190 --> 00:22:57,929
our production network except in a good

575
00:22:55,440 --> 00:23:02,040
way that we<font color="#E5E5E5"> found the fault and it</font>

576
00:22:57,929 --> 00:23:03,720
worked excellently pretty much from from

577
00:23:02,040 --> 00:23:05,250
<font color="#E5E5E5">this point on with uses the mapper in</font>

578
00:23:03,720 --> 00:23:06,600
the<font color="#CCCCCC"> caller correlator we want to</font>

579
00:23:05,250 --> 00:23:11,280
automatically track the network as it

580
00:23:06,600 --> 00:23:12,899
changes and and also<font color="#E5E5E5"> possibly as the</font>

581
00:23:11,280 --> 00:23:14,370
correlator can say okay it looks like

582
00:23:12,900 --> 00:23:16,350
<font color="#E5E5E5">we're losing packet</font><font color="#CCCCCC"> Eberle haven't got</font>

583
00:23:14,370 --> 00:23:17,668
much resolution could you brick create

584
00:23:16,350 --> 00:23:19,889
<font color="#E5E5E5">some new parts quickly to make things</font>

585
00:23:17,669 --> 00:23:24,390
<font color="#E5E5E5">better and that's we're heading for now</font>

586
00:23:19,890 --> 00:23:25,980
but now on to Nikolas the finish up<font color="#CCCCCC"> good</font>

587
00:23:24,390 --> 00:23:28,530
from the network engineer<font color="#E5E5E5"> he took back</font>

588
00:23:25,980 --> 00:23:30,510
what we<font color="#CCCCCC"> actually work so what</font><font color="#E5E5E5"> did you</font>

589
00:23:28,530 --> 00:23:32,190
learn<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> so as well said it works</font>

590
00:23:30,510 --> 00:23:33,809
pretty well we found problem that nobody

591
00:23:32,190 --> 00:23:35,669
knew about things that basically were

592
00:23:33,809 --> 00:23:39,418
not monitored by black box mentoring and

593
00:23:35,669 --> 00:23:41,100
we just assume was working sudden<font color="#E5E5E5"> drops</font>

594
00:23:39,419 --> 00:23:44,370
are not frequent but they do actually

595
00:23:41,100 --> 00:23:45,990
occur so<font color="#CCCCCC"> and happens figure early we</font>

596
00:23:44,370 --> 00:23:49,110
find actually very look like<font color="#E5E5E5"> low-level</font>

597
00:23:45,990 --> 00:23:50,340
<font color="#E5E5E5">packet loss and yes so low that people</font>

598
00:23:49,110 --> 00:23:53,280
didn't trust us<font color="#E5E5E5"> and say you know what</font>

599
00:23:50,340 --> 00:23:56,189
it's pretty<font color="#E5E5E5"> much it's a very basic at</font>

600
00:23:53,280 --> 00:24:00,510
the end if it finds it it like it don't

601
00:23:56,190 --> 00:24:02,010
<font color="#E5E5E5">disappear the packet loss so the most</font>

602
00:24:00,510 --> 00:24:04,590
important thing here we are besides

603
00:24:02,010 --> 00:24:06,660
finding errors that actually occurs in

604
00:24:04,590 --> 00:24:08,070
<font color="#CCCCCC">the network we also actually can test</font>

605
00:24:06,660 --> 00:24:10,559
and mention that before bits really

606
00:24:08,070 --> 00:24:13,230
important we can actually<font color="#E5E5E5"> test links and</font>

607
00:24:10,559 --> 00:24:16,020
<font color="#E5E5E5">devices before the end part because</font>

608
00:24:13,230 --> 00:24:17,549
because we saw shroud leader to test and

609
00:24:16,020 --> 00:24:20,490
you bring<font color="#CCCCCC"> your new node or bring your</font>

610
00:24:17,549 --> 00:24:22,470
new link you can say i want<font color="#E5E5E5"> to send know</font>

611
00:24:20,490 --> 00:24:24,299
hundreds and<font color="#E5E5E5"> out of the</font><font color="#CCCCCC"> thousands of</font>

612
00:24:22,470 --> 00:24:27,600
packets for every<font color="#E5E5E5"> single link every</font>

613
00:24:24,299 --> 00:24:29,820
single new path of this node before

614
00:24:27,600 --> 00:24:32,159
putting some more traffic on it and

615
00:24:29,820 --> 00:24:33,450
suddenly it you realize<font color="#CCCCCC"> that maybe you</font>

616
00:24:32,160 --> 00:24:36,809
have hardware problem<font color="#E5E5E5"> maybe actually</font>

617
00:24:33,450 --> 00:24:38,820
have a do it happens we very clear with

618
00:24:36,809 --> 00:24:39,980
the amount<font color="#E5E5E5"> of cheap set that we have in</font>

619
00:24:38,820 --> 00:24:41,809
<font color="#E5E5E5">these boxes dies</font>

620
00:24:39,980 --> 00:24:44,030
this probably<font color="#E5E5E5"> one ship always one should</font>

621
00:24:41,809 --> 00:24:45,678
be<font color="#E5E5E5"> clean being</font><font color="#CCCCCC"> data and funny it is not</font>

622
00:24:44,030 --> 00:24:47,809
fun especially if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> actually put</font>

623
00:24:45,679 --> 00:24:50,090
search traffic or<font color="#E5E5E5"> YouTube video for it</font>

624
00:24:47,809 --> 00:24:51,799
so it's<font color="#E5E5E5"> really important</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> actually we</font>

625
00:24:50,090 --> 00:24:53,990
we managed<font color="#CCCCCC"> to find so we can</font><font color="#E5E5E5"> actually</font>

626
00:24:51,799 --> 00:24:56,450
find<font color="#E5E5E5"> those mistakes before putting</font><font color="#CCCCCC"> live</font>

627
00:24:53,990 --> 00:25:00,020
traffic then the other thing we found it

628
00:24:56,450 --> 00:25:03,559
was we took RSVP for granted we

629
00:25:00,020 --> 00:25:05,750
basically discover that our vendors take

630
00:25:03,559 --> 00:25:08,540
a liberal interpretation of what I ozp

631
00:25:05,750 --> 00:25:10,429
sure do we actually respected that if we

632
00:25:08,540 --> 00:25:13,790
tell our EP to signal a certain path

633
00:25:10,429 --> 00:25:15,710
with a set<font color="#E5E5E5"> of euros if we just do so but</font>

634
00:25:13,790 --> 00:25:17,840
<font color="#CCCCCC">because actually we tell</font><font color="#E5E5E5"> which path to</font>

635
00:25:15,710 --> 00:25:19,370
signal and then we tell that path we

636
00:25:17,840 --> 00:25:22,730
<font color="#E5E5E5">actually know if they do and sometimes</font>

637
00:25:19,370 --> 00:25:25,100
they don't and I guess<font color="#E5E5E5"> it's a bug or</font>

638
00:25:22,730 --> 00:25:26,929
feature I create in some cases before it

639
00:25:25,100 --> 00:25:29,600
was probably a shortcut to provide

640
00:25:26,929 --> 00:25:31,700
better convergence but waking the

641
00:25:29,600 --> 00:25:32,928
protocol as a<font color="#CCCCCC"> result so that was</font>

642
00:25:31,700 --> 00:25:34,370
interesting so now we're actually not

643
00:25:32,929 --> 00:25:37,270
only monitor the network which we move

644
00:25:34,370 --> 00:25:39,260
into also the<font color="#E5E5E5"> ICP signaling protocols</font>

645
00:25:37,270 --> 00:25:41,030
there's some limitations it's not

646
00:25:39,260 --> 00:25:42,860
perfect it's pretty good we happy with

647
00:25:41,030 --> 00:25:44,570
the system it's not verified that has

648
00:25:42,860 --> 00:25:46,879
what said the packing is<font color="#CCCCCC"> on that</font><font color="#E5E5E5"> layer</font>

649
00:25:44,570 --> 00:25:49,220
free therefore we have to<font color="#E5E5E5"> when we have</font>

650
00:25:46,880 --> 00:25:51,380
bundles<font color="#E5E5E5"> or lags and with large number of</font>

651
00:25:49,220 --> 00:25:54,049
members we need to have a large number

652
00:25:51,380 --> 00:25:56,570
of flows to make sure that we hash a

653
00:25:54,049 --> 00:25:57,980
cause or members and we don't know the

654
00:25:56,570 --> 00:25:59,450
ashing are going to the vendors they

655
00:25:57,980 --> 00:26:02,990
don't want tell us therefore we have<font color="#E5E5E5"> to</font>

656
00:25:59,450 --> 00:26:05,179
do a lot<font color="#CCCCCC"> of guessing it creates a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

657
00:26:02,990 --> 00:26:06,559
state as<font color="#E5E5E5"> I mentioned before we want you</font>

658
00:26:05,179 --> 00:26:08,690
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> test links we want to test</font>

659
00:26:06,559 --> 00:26:10,910
in grace three<font color="#CCCCCC"> guys if you have a lot of</font>

660
00:26:08,690 --> 00:26:13,600
ports that makes a<font color="#E5E5E5"> lot of state of paths</font>

661
00:26:10,910 --> 00:26:15,559
that makes a lot of state at RSVP labor

662
00:26:13,600 --> 00:26:17,030
and it takes actually a fair amount of

663
00:26:15,559 --> 00:26:19,700
processing depending on the size of<font color="#CCCCCC"> the</font>

664
00:26:17,030 --> 00:26:21,889
network but creating optimizing the map

665
00:26:19,700 --> 00:26:24,710
and they sending the probes for the

666
00:26:21,890 --> 00:26:26,179
fully for the edge and<font color="#E5E5E5"> collecting the</font>

667
00:26:24,710 --> 00:26:28,580
result and correlating and reporting

668
00:26:26,179 --> 00:26:32,870
every 15 seconds it's actually yeah it's

669
00:26:28,580 --> 00:26:35,090
like the thermal processing so that's

670
00:26:32,870 --> 00:26:36,379
basically what we've done d there's<font color="#E5E5E5"> one</font>

671
00:26:35,090 --> 00:26:38,570
more thing that<font color="#E5E5E5"> we're working</font><font color="#CCCCCC"> on and</font>

672
00:26:36,380 --> 00:26:40,100
let's to Jesus take we're thinking how

673
00:26:38,570 --> 00:26:41,990
can actually<font color="#E5E5E5"> drop that state how can I</font>

674
00:26:40,100 --> 00:26:45,049
can do all this path tell the packets

675
00:26:41,990 --> 00:26:46,760
where to go with that using RSVP so we

676
00:26:45,049 --> 00:26:48,080
tried everything which<font color="#E5E5E5"> yipp forces</font>

677
00:26:46,760 --> 00:26:50,150
writing didn't work very well when

678
00:26:48,080 --> 00:26:52,340
people the vendors with these days on

679
00:26:50,150 --> 00:26:53,240
support its ipv6 subscribing it's been

680
00:26:52,340 --> 00:26:57,199
actually admitted

681
00:26:53,240 --> 00:26:58,460
<font color="#CCCCCC">aft and there's no viable solution so we</font>

682
00:26:57,200 --> 00:27:00,710
actually found a way so we<font color="#E5E5E5"> thought</font>

683
00:26:58,460 --> 00:27:03,830
likely let's say if<font color="#E5E5E5"> you want to send a</font>

684
00:27:00,710 --> 00:27:06,050
packet through you know ABCD and back to

685
00:27:03,830 --> 00:27:07,580
be a nice loop parting portal cross

686
00:27:06,050 --> 00:27:11,389
don't like loops<font color="#CCCCCC"> it's not always easy to</font>

687
00:27:07,580 --> 00:27:14,300
achieve what we actually came up<font color="#E5E5E5"> as a as</font>

688
00:27:11,390 --> 00:27:17,000
a as an option is to do a once one half

689
00:27:14,300 --> 00:27:21,020
static a DSP and we map actually each

690
00:27:17,000 --> 00:27:23,420
interface with a<font color="#E5E5E5"> label and obviously i</font>

691
00:27:21,020 --> 00:27:25,370
will use like interface one as<font color="#CCCCCC"> labor one</font>

692
00:27:23,420 --> 00:27:27,920
this is not labor one but just<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the</font>

693
00:27:25,370 --> 00:27:29,989
destruction will use level<font color="#E5E5E5"> one so</font>

694
00:27:27,920 --> 00:27:32,090
basically we for each interface would

695
00:27:29,990 --> 00:27:34,070
actually associate a label with a<font color="#E5E5E5"> one</font>

696
00:27:32,090 --> 00:27:38,530
<font color="#E5E5E5">hop statically speed at Piggly size</font>

697
00:27:34,070 --> 00:27:38,530
labeled one<font color="#E5E5E5"> sent when first one and pop</font>

698
00:27:38,590 --> 00:27:46,639
so then we have this loop we want to

699
00:27:41,690 --> 00:27:49,820
send<font color="#CCCCCC"> a packet for that ABC</font><font color="#E5E5E5"> GBI</font><font color="#CCCCCC"> photo</font>

700
00:27:46,640 --> 00:27:52,490
spot specifically so what we do is

701
00:27:49,820 --> 00:27:54,800
simply stack a set of<font color="#CCCCCC"> labels in the</font>

702
00:27:52,490 --> 00:27:56,390
packet so we put the signaling not in

703
00:27:54,800 --> 00:28:00,560
the RSVP signal but actually in each

704
00:27:56,390 --> 00:28:03,350
packet and so when the router a likely

705
00:28:00,560 --> 00:28:05,690
<font color="#E5E5E5">find the packet with labeled one it</font><font color="#CCCCCC"> just</font>

706
00:28:03,350 --> 00:28:09,469
look<font color="#E5E5E5"> it looks</font><font color="#CCCCCC"> up the other labor send</font>

707
00:28:05,690 --> 00:28:11,870
the packet for interface one and pop and

708
00:28:09,470 --> 00:28:14,090
then actually<font color="#CCCCCC"> if you if you do that at</font>

709
00:28:11,870 --> 00:28:16,159
each hub they clear out your<font color="#CCCCCC"> B we see</font>

710
00:28:14,090 --> 00:28:19,100
the packet at this time the top of the

711
00:28:16,160 --> 00:28:20,960
labor stack is too and<font color="#CCCCCC"> it big Luke Luke</font>

712
00:28:19,100 --> 00:28:24,139
observer to send the packet for

713
00:28:20,960 --> 00:28:26,540
intervals<font color="#E5E5E5"> to and pop what I'll see we</font>

714
00:28:24,140 --> 00:28:29,390
see if they receive the packet again

715
00:28:26,540 --> 00:28:31,310
<font color="#CCCCCC">label to Lucas Lucas looks at looks up</font>

716
00:28:29,390 --> 00:28:34,340
the labor<font color="#CCCCCC"> sent to interest to and pop</font>

717
00:28:31,310 --> 00:28:37,700
and all the way<font color="#CCCCCC"> back to very clear water</font>

718
00:28:34,340 --> 00:28:40,790
a bottom a stack sent the ID by gets so

719
00:28:37,700 --> 00:28:42,650
this with<font color="#E5E5E5"> this we could actually do we</font>

720
00:28:40,790 --> 00:28:45,320
could send packet in for an arbitrary

721
00:28:42,650 --> 00:28:48,530
path in a network doing source routing

722
00:28:45,320 --> 00:28:50,149
technically and having no i zp state so

723
00:28:48,530 --> 00:28:52,129
we<font color="#CCCCCC"> could actually</font><font color="#E5E5E5"> do a million path</font>

724
00:28:50,150 --> 00:28:53,330
without actually having next up so the

725
00:28:52,130 --> 00:28:56,240
only next up we have exactly the number

726
00:28:53,330 --> 00:28:59,240
of interfaces we have in a router so

727
00:28:56,240 --> 00:29:02,620
that's<font color="#E5E5E5"> the nfo talk and that's basically</font>

728
00:28:59,240 --> 00:29:05,120
what we do again the message is actually

729
00:29:02,620 --> 00:29:06,739
sore at you packets if you want to test

730
00:29:05,120 --> 00:29:07,070
<font color="#E5E5E5">your network if you use this engine base</font>

731
00:29:06,740 --> 00:29:09,350
you

732
00:29:07,070 --> 00:29:10,908
to use your writing protocol and your

733
00:29:09,350 --> 00:29:13,158
packet are going to<font color="#E5E5E5"> avoid the fighters</font>

734
00:29:10,909 --> 00:29:14,720
or they going to actually the state of

735
00:29:13,159 --> 00:29:15,950
the neutral change very rapidly it's

736
00:29:14,720 --> 00:29:22,700
really hard to find where the packet

737
00:29:15,950 --> 00:29:24,759
went I think we have time for a few

738
00:29:22,700 --> 00:29:28,100
questions if there are any go ahead this

739
00:29:24,759 --> 00:29:33,169
week we do have<font color="#E5E5E5"> a remote question from</font>

740
00:29:28,100 --> 00:29:35,209
<font color="#CCCCCC">Matt gtech and he asks how many paths</font>

741
00:29:33,169 --> 00:29:36,529
did they have to build for this mapping

742
00:29:35,210 --> 00:29:38,480
so I think<font color="#E5E5E5"> he wants to</font><font color="#CCCCCC"> know how many</font>

743
00:29:36,529 --> 00:29:41,779
<font color="#E5E5E5">total paths you had to build so how many</font>

744
00:29:38,480 --> 00:29:44,960
total path it depends actually it's

745
00:29:41,779 --> 00:29:47,450
basically rolling so we have some wisdom

746
00:29:44,960 --> 00:29:49,610
constraints are on medically writers we

747
00:29:47,450 --> 00:29:51,950
don't want to exceed we actually monitor

748
00:29:49,610 --> 00:29:53,330
the<font color="#CCCCCC"> transit pass on in on each writer so</font>

749
00:29:51,950 --> 00:29:55,759
we try<font color="#CCCCCC"> to keep that to southern labor</font>

750
00:29:53,330 --> 00:29:57,189
actually we took a line in the sand

751
00:29:55,759 --> 00:30:00,529
<font color="#E5E5E5">inside of pass on should not actually</font>

752
00:29:57,190 --> 00:30:02,840
exceeded fathom pass the only trailer

753
00:30:00,529 --> 00:30:04,669
and then you actually<font color="#CCCCCC"> we the amount of</font>

754
00:30:02,840 --> 00:30:06,559
path is probably taking with the<font color="#E5E5E5"> amount</font>

755
00:30:04,669 --> 00:30:08,629
of member that we have<font color="#CCCCCC"> two per bundle so</font>

756
00:30:06,559 --> 00:30:10,879
we tried actually to cover each member

757
00:30:08,629 --> 00:30:12,289
make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that we hash and we we had</font>

758
00:30:10,879 --> 00:30:14,899
some hosting there we say<font color="#E5E5E5"> okay we need</font>

759
00:30:12,289 --> 00:30:18,649
four times the amount of a list of flows

760
00:30:14,899 --> 00:30:20,689
that we have of members so then you

761
00:30:18,649 --> 00:30:22,789
multiply that<font color="#E5E5E5"> and depending on size of</font>

762
00:30:20,690 --> 00:30:25,700
network he get different number of<font color="#E5E5E5"> paths</font>

763
00:30:22,789 --> 00:30:27,019
but yeah it gets large obviously in

764
00:30:25,700 --> 00:30:30,139
large network I mean you can<font color="#E5E5E5"> say</font><font color="#CCCCCC"> about</font>

765
00:30:27,019 --> 00:30:32,210
Satan as a rough rule thumb we had about

766
00:30:30,139 --> 00:30:34,549
<font color="#CCCCCC">ten times</font><font color="#E5E5E5"> the number of links in the</font>

767
00:30:32,210 --> 00:30:37,100
network and that's assuming the links

768
00:30:34,549 --> 00:30:41,139
are actually bundles as well<font color="#CCCCCC"> okay so</font>

769
00:30:37,100 --> 00:30:41,139
that's a rough rule of north on there

770
00:30:41,379 --> 00:30:45,219
and any other questions

771
00:30:46,940 --> 00:30:51,720
one last comment and the code for this

772
00:30:49,170 --> 00:30:56,550
will be available open source<font color="#CCCCCC"> it's not</font>

773
00:30:51,720 --> 00:30:58,290
open source yet but I'm 10 yes a penis

774
00:30:56,550 --> 00:30:59,700
if you have any<font color="#E5E5E5"> question with those</font><font color="#CCCCCC"> are</font>

775
00:30:58,290 --> 00:31:00,960
email address and we happy to talk about

776
00:30:59,700 --> 00:31:02,280
<font color="#E5E5E5">it if you have actually another solution</font>

777
00:31:00,960 --> 00:31:03,660
for the same problem<font color="#E5E5E5"> would love to you</font>

778
00:31:02,280 --> 00:31:06,740
about it yeah if you can soar through

779
00:31:03,660 --> 00:31:09,060
our packets collect the results<font color="#E5E5E5"> and then</font>

780
00:31:06,740 --> 00:31:10,770
get get get your friendly neighborhood

781
00:31:09,060 --> 00:31:14,580
linear programming system to solve the

782
00:31:10,770 --> 00:31:16,020
problem and i'm using<font color="#CCCCCC"> GOP k so which is</font>

783
00:31:14,580 --> 00:31:18,810
<font color="#E5E5E5">yet the good news linear programming</font>

784
00:31:16,020 --> 00:31:20,670
package so and so I didn't do that I

785
00:31:18,810 --> 00:31:22,020
<font color="#E5E5E5">just</font><font color="#CCCCCC"> reduced</font><font color="#E5E5E5"> the solution send it to it</font>

786
00:31:20,670 --> 00:31:25,350
and it<font color="#E5E5E5"> comes back with the answer which</font>

787
00:31:22,020 --> 00:31:27,720
is<font color="#E5E5E5"> very nice so there's a monitoring</font>

788
00:31:25,350 --> 00:31:30,449
creo the topic in the research community

789
00:31:27,720 --> 00:31:33,120
I don't know if you hear about<font color="#E5E5E5"> it it's</font>

790
00:31:30,450 --> 00:31:36,390
have similar idea using multiple passes

791
00:31:33,120 --> 00:31:39,120
to cover the link failure and then infer

792
00:31:36,390 --> 00:31:40,860
what link was failing<font color="#CCCCCC"> okay it was using</font>

793
00:31:39,120 --> 00:31:45,469
similar approach like you<font color="#E5E5E5"> guys for doing</font>

794
00:31:40,860 --> 00:31:49,909
well it's a good<font color="#E5E5E5"> idea monument good</font>

795
00:31:45,470 --> 00:31:49,910
thank you<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> very much</font>

