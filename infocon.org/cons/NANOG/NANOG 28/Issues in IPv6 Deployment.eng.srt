1
00:00:00,949 --> 00:00:06,350
my name is Jeff<font color="#E5E5E5"> Doyle and as the slide</font>

2
00:00:03,990 --> 00:00:08,970
says here in my apologies<font color="#CCCCCC"> for having</font>

3
00:00:06,350 --> 00:00:12,660
company logo kind of plastered up here

4
00:00:08,970 --> 00:00:15,210
prominently on the ipv6 solutions

5
00:00:12,660 --> 00:00:17,910
manager for juniper networks but I'm

6
00:00:15,210 --> 00:00:20,580
also a<font color="#CCCCCC"> member of</font><font color="#E5E5E5"> the and active in the</font>

7
00:00:17,910 --> 00:00:26,369
ipv6 forum and<font color="#CCCCCC"> the North America ipv6</font>

8
00:00:20,580 --> 00:00:28,830
task force and some other<font color="#CCCCCC"> things and I</font>

9
00:00:26,369 --> 00:00:33,140
the this presentation I'm really wearing

10
00:00:28,830 --> 00:00:38,718
that hat more than a<font color="#CCCCCC"> Juniper hat so</font>

11
00:00:33,140 --> 00:00:42,390
we'll look at<font color="#E5E5E5"> it in that direction this</font>

12
00:00:38,719 --> 00:00:45,450
presentation as it says<font color="#CCCCCC"> here is a wide</font>

13
00:00:42,390 --> 00:00:48,410
but shallow overview of the protocols

14
00:00:45,450 --> 00:00:51,660
and mechanisms and issues surrounding

15
00:00:48,410 --> 00:00:53,819
ipv6 deployment this is a presentation

16
00:00:51,660 --> 00:00:56,578
that<font color="#CCCCCC"> i put together for apricot a few</font>

17
00:00:53,820 --> 00:00:59,489
months ago in<font color="#E5E5E5"> taipei and</font><font color="#CCCCCC"> at that time</font><font color="#E5E5E5"> it</font>

18
00:00:56,579 --> 00:01:01,379
was about a four hour presentation i was

19
00:00:59,489 --> 00:01:02,820
given 90 minutes for this one so<font color="#E5E5E5"> i had</font>

20
00:01:01,379 --> 00:01:05,250
to do some radical surgery on the

21
00:01:02,820 --> 00:01:07,890
presentation<font color="#E5E5E5"> i'll tell you a little bit</font>

22
00:01:05,250 --> 00:01:09,530
about what I took out just so<font color="#CCCCCC"> that you</font>

23
00:01:07,890 --> 00:01:12,710
know<font color="#E5E5E5"> that those things are</font><font color="#CCCCCC"> out there</font>

24
00:01:09,530 --> 00:01:15,810
part of it is just may be the biggest

25
00:01:12,710 --> 00:01:17,490
biggest issue of all which is<font color="#CCCCCC"> something</font>

26
00:01:15,810 --> 00:01:20,100
<font color="#CCCCCC">that I actually took out of here is well</font>

27
00:01:17,490 --> 00:01:21,899
why ipv6 what are the drivers<font color="#E5E5E5"> that are</font>

28
00:01:20,100 --> 00:01:23,689
out there and who<font color="#E5E5E5"> really cares you know</font>

29
00:01:21,900 --> 00:01:26,490
is is this ever really going to<font color="#CCCCCC"> happen</font>

30
00:01:23,689 --> 00:01:29,210
you get different answers in North

31
00:01:26,490 --> 00:01:32,100
America than you do for example in Asia

32
00:01:29,210 --> 00:01:36,149
probably a big reason for<font color="#E5E5E5"> that is that</font>

33
00:01:32,100 --> 00:01:38,880
if you look<font color="#CCCCCC"> at the total allocated ipv4</font>

34
00:01:36,150 --> 00:01:41,549
addresses seventy-four percent of them

35
00:01:38,880 --> 00:01:43,740
are in<font color="#E5E5E5"> North America nine percent are in</font>

36
00:01:41,549 --> 00:01:45,509
Asia and that very much reflects why

37
00:01:43,740 --> 00:01:48,210
there's<font color="#CCCCCC"> more of a sense of urgency that</font>

38
00:01:45,509 --> 00:01:49,979
something needs to be done in Asia<font color="#E5E5E5"> then</font>

39
00:01:48,210 --> 00:01:52,789
in<font color="#E5E5E5"> the u.s. we sort of had the luxury of</font>

40
00:01:49,979 --> 00:01:56,549
sitting back and seeing how successful

41
00:01:52,790 --> 00:02:01,020
ipv6 deployment is there before<font color="#E5E5E5"> it gets</font>

42
00:01:56,549 --> 00:02:03,210
adopted here so a lot of information

43
00:02:01,020 --> 00:02:07,469
about drivers and what's going<font color="#E5E5E5"> to happen</font>

44
00:02:03,210 --> 00:02:10,440
I took all that out things like my own

45
00:02:07,469 --> 00:02:12,489
opinion which is that ipv6 is really

46
00:02:10,440 --> 00:02:15,240
going to be driven by the

47
00:02:12,490 --> 00:02:18,010
by the consumer electronics<font color="#CCCCCC"> industry</font>

48
00:02:15,240 --> 00:02:21,580
that's<font color="#E5E5E5"> the people that want to have more</font>

49
00:02:18,010 --> 00:02:22,929
and more<font color="#E5E5E5"> network enabled devices and if</font>

50
00:02:21,580 --> 00:02:24,520
they know that if they want to keep

51
00:02:22,930 --> 00:02:26,470
selling those devices and selling

52
00:02:24,520 --> 00:02:28,240
services they've got to<font color="#E5E5E5"> have a better</font>

53
00:02:26,470 --> 00:02:30,310
addressing scheme than what's out there

54
00:02:28,240 --> 00:02:33,250
now and eat more easily available

55
00:02:30,310 --> 00:02:37,210
addresses that's why you see so much

56
00:02:33,250 --> 00:02:39,970
interest in ipv6 in places like Japan in

57
00:02:37,210 --> 00:02:41,890
Taiwan and South Korea increasingly in

58
00:02:39,970 --> 00:02:43,780
China because those are all countries

59
00:02:41,890 --> 00:02:46,209
where they have large consumer

60
00:02:43,780 --> 00:02:48,550
electronics industries that's a lot<font color="#CCCCCC"> of</font>

61
00:02:46,210 --> 00:02:51,220
where that driving that driver is going

62
00:02:48,550 --> 00:02:54,040
<font color="#E5E5E5">to come</font><font color="#CCCCCC"> from a couple</font><font color="#E5E5E5"> of other things</font>

63
00:02:51,220 --> 00:02:57,820
<font color="#CCCCCC">that i took</font><font color="#E5E5E5"> out probably major topics</font>

64
00:02:54,040 --> 00:03:00,070
are routing ipv6 which makes me kind of

65
00:02:57,820 --> 00:03:01,900
sad because<font color="#CCCCCC"> i'm a router guy and and and</font>

66
00:03:00,070 --> 00:03:04,720
that's<font color="#E5E5E5"> what i like talking about but i</font>

67
00:03:01,900 --> 00:03:07,030
can tell you very quickly there without

68
00:03:04,720 --> 00:03:08,470
<font color="#E5E5E5">going into any of the details that all</font>

69
00:03:07,030 --> 00:03:10,990
of the routing protocols that are

70
00:03:08,470 --> 00:03:14,500
available for ipv4 are available for

71
00:03:10,990 --> 00:03:20,560
ipv6 also with some modification you

72
00:03:14,500 --> 00:03:22,870
have rip ng you have ospfv3 for ipv6 you

73
00:03:20,560 --> 00:03:25,090
have is is which has some very you throw

74
00:03:22,870 --> 00:03:28,180
in a couple of extra tlv than is is is

75
00:03:25,090 --> 00:03:31,360
ready to go for ipv6 most protocol bgp

76
00:03:28,180 --> 00:03:33,370
supports ipv6 and so forth so all of

77
00:03:31,360 --> 00:03:38,560
those things<font color="#E5E5E5"> are there is anybody here</font>

78
00:03:33,370 --> 00:03:40,810
from<font color="#CCCCCC"> cisco does eigrp support ipv6 I</font>

79
00:03:38,560 --> 00:03:43,420
don't know i don't think<font color="#CCCCCC"> it does but</font>

80
00:03:40,810 --> 00:03:48,720
it's the other kind<font color="#E5E5E5"> of major routing</font>

81
00:03:43,420 --> 00:03:52,660
protocol out there yes sir never will

82
00:03:48,720 --> 00:03:54,490
yeah I<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> for sure so I didn't</font>

83
00:03:52,660 --> 00:03:58,990
want to<font color="#E5E5E5"> speak for something I'm not sure</font>

84
00:03:54,490 --> 00:04:01,270
<font color="#CCCCCC">about but anyway with with the probable</font>

85
00:03:58,990 --> 00:04:04,210
exception of eigrp all the major routing

86
00:04:01,270 --> 00:04:06,550
protocols are available for ipv6 the

87
00:04:04,210 --> 00:04:10,630
other big issue that I chopped out of

88
00:04:06,550 --> 00:04:13,900
here is<font color="#CCCCCC"> multi-homing there is a lot of</font>

89
00:04:10,630 --> 00:04:15,250
meat there and in these slides that I

90
00:04:13,900 --> 00:04:17,590
guess are going to be<font color="#CCCCCC"> available</font><font color="#E5E5E5"> in the</font>

91
00:04:15,250 --> 00:04:19,298
web is that correct<font color="#E5E5E5"> there there now I</font>

92
00:04:17,589 --> 00:04:20,619
actually stuck all my<font color="#CCCCCC"> multi-homing</font>

93
00:04:19,298 --> 00:04:23,440
slides in at the very

94
00:04:20,620 --> 00:04:25,150
end just because I it's an important

95
00:04:23,440 --> 00:04:26,440
enough topic that even though I<font color="#CCCCCC"> don't</font>

96
00:04:25,150 --> 00:04:30,580
have enough time to talk<font color="#E5E5E5"> about it today</font>

97
00:04:26,440 --> 00:04:32,500
I wanted<font color="#E5E5E5"> you to have that and if you</font>

98
00:04:30,580 --> 00:04:34,419
find this presentation useful what I

99
00:04:32,500 --> 00:04:37,990
might do is propose the Susan that I do

100
00:04:34,419 --> 00:04:39,940
a multihoming ipv6 talk in Chicago later

101
00:04:37,990 --> 00:04:43,990
in<font color="#E5E5E5"> the year it will get</font><font color="#CCCCCC"> to those</font>

102
00:04:39,940 --> 00:04:45,750
subjects so a wide but not quite<font color="#CCCCCC"> as wide</font>

103
00:04:43,990 --> 00:04:47,979
as it was originally intended

104
00:04:45,750 --> 00:04:50,740
presentation of these some of these

105
00:04:47,979 --> 00:04:53,770
issues what's really left is mostly

106
00:04:50,740 --> 00:04:58,930
talking about transition mechanisms and

107
00:04:53,770 --> 00:05:02,049
transition tools and shallow because I

108
00:04:58,930 --> 00:05:04,690
could probably spend 90 minutes talking

109
00:05:02,050 --> 00:05:06,190
about any<font color="#E5E5E5"> one of the many tools that I'm</font>

110
00:05:04,690 --> 00:05:08,530
<font color="#E5E5E5">going to talk about in here so it's sort</font>

111
00:05:06,190 --> 00:05:10,389
<font color="#E5E5E5">of a little taste of each the other</font>

112
00:05:08,530 --> 00:05:13,299
thing I'd like to say before I really

113
00:05:10,389 --> 00:05:14,979
get going on all of this is that I know

114
00:05:13,300 --> 00:05:17,740
there's a few people<font color="#E5E5E5"> here that know a</font>

115
00:05:14,979 --> 00:05:20,469
lot I see a few faces here that know a

116
00:05:17,740 --> 00:05:22,120
lot about<font color="#E5E5E5"> ipv6 please feel</font><font color="#CCCCCC"> free</font><font color="#E5E5E5"> to jump</font>

117
00:05:20,470 --> 00:05:23,440
in at any point in<font color="#E5E5E5"> this if you have</font>

118
00:05:22,120 --> 00:05:25,630
something to add<font color="#E5E5E5"> about anything that's</font>

119
00:05:23,440 --> 00:05:27,039
being talked about<font color="#E5E5E5"> or if you find that</font>

120
00:05:25,630 --> 00:05:29,590
I'm saying<font color="#CCCCCC"> something incorrect please</font>

121
00:05:27,039 --> 00:05:31,900
you know I have a<font color="#E5E5E5"> pretty thick skin so</font>

122
00:05:29,590 --> 00:05:35,739
so please feel free<font color="#E5E5E5"> to correct me about</font>

123
00:05:31,900 --> 00:05:38,138
<font color="#E5E5E5">those things so an assumption here is</font>

124
00:05:35,740 --> 00:05:40,690
that you already understand the basics

125
00:05:38,139 --> 00:05:43,720
of ipv6 you understand address

126
00:05:40,690 --> 00:05:47,070
structures you understand the dynamics

127
00:05:43,720 --> 00:05:49,870
of address auto-configuration and icmpv6

128
00:05:47,070 --> 00:05:51,820
extension headers and so forth<font color="#E5E5E5"> I'm not</font>

129
00:05:49,870 --> 00:05:54,160
<font color="#E5E5E5">going into any of that stuff if you</font>

130
00:05:51,820 --> 00:05:55,570
don't know these things it doesn't

131
00:05:54,160 --> 00:05:58,690
matter<font color="#E5E5E5"> that much I think</font><font color="#CCCCCC"> you'll you'll</font>

132
00:05:55,570 --> 00:06:01,570
still get<font color="#CCCCCC"> something out of what's here</font>

133
00:05:58,690 --> 00:06:05,139
and then<font color="#E5E5E5"> just a quick slide talking</font>

134
00:06:01,570 --> 00:06:07,659
about ipv6 features what's different

135
00:06:05,139 --> 00:06:10,930
about ipv6<font color="#E5E5E5"> and of course the big</font>

136
00:06:07,660 --> 00:06:12,849
difference is that rather than a 32-bit

137
00:06:10,930 --> 00:06:15,280
address space you've got a 128-bit

138
00:06:12,849 --> 00:06:18,699
address space which means you have an

139
00:06:15,280 --> 00:06:21,190
exponentially larger number of available

140
00:06:18,699 --> 00:06:25,300
addresses and I've sort<font color="#E5E5E5"> of written that</font>

141
00:06:21,190 --> 00:06:27,490
up there 128 bits means 340 trillion

142
00:06:25,300 --> 00:06:29,580
trillion trillion addresses which I've

143
00:06:27,490 --> 00:06:32,520
also got written out if you<font color="#CCCCCC"> really care</font>

144
00:06:29,580 --> 00:06:37,068
right there and some little

145
00:06:32,520 --> 00:06:39,359
one of those<font color="#CCCCCC"> little uh gosh kinds of</font>

146
00:06:37,069 --> 00:06:41,789
trivia things that<font color="#E5E5E5"> I found somewhere</font><font color="#CCCCCC"> I</font>

147
00:06:39,360 --> 00:06:44,940
don't<font color="#CCCCCC"> remember i found it shows that</font>

148
00:06:41,789 --> 00:06:48,690
<font color="#E5E5E5">this works out to about sixty seven</font>

149
00:06:44,940 --> 00:06:51,990
billion billion addresses per square

150
00:06:48,690 --> 00:06:53,729
centimeter of the planet so there's a

151
00:06:51,990 --> 00:06:55,590
lot<font color="#E5E5E5"> of addresses there and one of the</font>

152
00:06:53,729 --> 00:06:57,240
slides by the way that I've taken<font color="#E5E5E5"> out is</font>

153
00:06:55,590 --> 00:06:58,799
something that injects a little more

154
00:06:57,240 --> 00:07:03,599
reality<font color="#CCCCCC"> into that there's not</font><font color="#E5E5E5"> really</font>

155
00:06:58,800 --> 00:07:06,030
that many addresses and but there<font color="#E5E5E5"> are</font>

156
00:07:03,599 --> 00:07:09,240
nonetheless a lot of addresses and

157
00:07:06,030 --> 00:07:12,239
that's<font color="#E5E5E5"> really the</font><font color="#CCCCCC"> the primary driver for</font>

158
00:07:09,240 --> 00:07:14,520
ipv6 aside from everything else it's

159
00:07:12,240 --> 00:07:17,360
<font color="#E5E5E5">just a bigger address space and that's</font>

160
00:07:14,520 --> 00:07:19,198
<font color="#E5E5E5">the only real</font><font color="#CCCCCC"> reason for</font><font color="#E5E5E5"> adopting ipv6</font>

161
00:07:17,360 --> 00:07:21,509
some other<font color="#E5E5E5"> features it has a</font>

162
00:07:19,199 --> 00:07:25,110
hierarchical address structure well so

163
00:07:21,509 --> 00:07:27,990
does ipv4 but the hierarchy is a little

164
00:07:25,110 --> 00:07:31,590
more rigid with ipv6 which means that

165
00:07:27,990 --> 00:07:35,009
address<font color="#E5E5E5"> aggregation should be better</font>

166
00:07:31,590 --> 00:07:37,289
with ipv6 then with ipv4 has a more

167
00:07:35,009 --> 00:07:41,099
efficient header architecture the header

168
00:07:37,289 --> 00:07:43,620
the the basic ipv6 header is simpler

169
00:07:41,099 --> 00:07:47,159
even though it's a bit bigger than ipv4

170
00:07:43,620 --> 00:07:49,740
it's simpler<font color="#E5E5E5"> than ipv4 which could make</font>

171
00:07:47,159 --> 00:07:52,620
a<font color="#CCCCCC"> difference in</font><font color="#E5E5E5"> particularly some</font>

172
00:07:49,740 --> 00:07:56,099
smaller software-based routers it should

173
00:07:52,620 --> 00:07:58,590
should improve forwarding performance a

174
00:07:56,099 --> 00:08:01,919
bit neighbor discovery and auto

175
00:07:58,590 --> 00:08:05,840
configuration next to the larger address

176
00:08:01,919 --> 00:08:09,599
space that's probably<font color="#E5E5E5"> the biggest</font>

177
00:08:05,840 --> 00:08:13,318
attractive feature of ipv6 it has some

178
00:08:09,599 --> 00:08:17,550
very definite implications for IP for

179
00:08:13,319 --> 00:08:20,969
mobile IP because mobile devices can

180
00:08:17,550 --> 00:08:24,120
much more easily acquire a terra of

181
00:08:20,969 --> 00:08:28,259
addresses with ipv6 than they<font color="#CCCCCC"> can with</font>

182
00:08:24,120 --> 00:08:30,449
ipv4 it<font color="#E5E5E5"> also could mean some improved</font>

183
00:08:28,259 --> 00:08:32,640
operational efficiency particularly

184
00:08:30,449 --> 00:08:35,010
things like<font color="#E5E5E5"> network renumber and such</font>

185
00:08:32,640 --> 00:08:37,260
could be easier because of address

186
00:08:35,010 --> 00:08:39,708
auto-configuration and finally there are

187
00:08:37,260 --> 00:08:42,750
<font color="#E5E5E5">some integrated security features</font>

188
00:08:39,708 --> 00:08:47,069
particularly authentication

189
00:08:42,750 --> 00:08:49,890
encryption<font color="#CCCCCC"> IPSec are built in to ipv6</font>

190
00:08:47,070 --> 00:08:53,310
whereas they're just add ons with ipv4

191
00:08:49,890 --> 00:08:56,990
that means that<font color="#E5E5E5"> security should be</font>

192
00:08:53,310 --> 00:08:59,910
somewhat easier with ipv6 I've seen

193
00:08:56,990 --> 00:09:01,650
several different presentations and read

194
00:08:59,910 --> 00:09:05,819
several different articles that say that

195
00:09:01,650 --> 00:09:07,620
<font color="#E5E5E5">ipv6 is more secure</font><font color="#CCCCCC"> than ipv4 and that's</font>

196
00:09:05,820 --> 00:09:10,640
not<font color="#E5E5E5"> true</font><font color="#CCCCCC"> at all it's no more secure than</font>

197
00:09:07,620 --> 00:09:12,990
ipv4 is what is different is that

198
00:09:10,640 --> 00:09:15,210
security is a bit easier<font color="#E5E5E5"> because the</font>

199
00:09:12,990 --> 00:09:17,280
functions that<font color="#CCCCCC"> you want for security are</font>

200
00:09:15,210 --> 00:09:20,580
built in this becomes particularly

201
00:09:17,280 --> 00:09:24,480
important when win in the section<font color="#CCCCCC"> that I</font>

202
00:09:20,580 --> 00:09:26,730
took out about motivating factors for

203
00:09:24,480 --> 00:09:28,080
ipv6 you talk<font color="#CCCCCC"> about things like</font>

204
00:09:26,730 --> 00:09:29,640
peer-to-peer networking and the

205
00:09:28,080 --> 00:09:32,990
increased importance of<font color="#E5E5E5"> that and how</font>

206
00:09:29,640 --> 00:09:35,610
ipv6 could make peer-to-peer easier and

207
00:09:32,990 --> 00:09:39,180
when they start<font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> as I will</font>

208
00:09:35,610 --> 00:09:41,010
talk about eliminating net into

209
00:09:39,180 --> 00:09:42,839
insecurity becomes much more important

210
00:09:41,010 --> 00:09:46,319
because you can become<font color="#E5E5E5"> much more visible</font>

211
00:09:42,840 --> 00:09:48,750
if you start restoring the globally

212
00:09:46,320 --> 00:09:52,650
unique address model that the internet

213
00:09:48,750 --> 00:09:55,770
was originally supposed to have so that

214
00:09:52,650 --> 00:09:58,819
is<font color="#E5E5E5"> the one driver that I've left in here</font>

215
00:09:55,770 --> 00:10:03,110
that I do want<font color="#E5E5E5"> to talk just a bit about</font>

216
00:09:58,820 --> 00:10:08,880
is the fact that that as I said<font color="#CCCCCC"> early on</font>

217
00:10:03,110 --> 00:10:14,460
the<font color="#E5E5E5"> primary and only real motivation for</font>

218
00:10:08,880 --> 00:10:16,710
ipv6 is more IP addresses ipv4 addresses

219
00:10:14,460 --> 00:10:20,160
are as I also said<font color="#E5E5E5"> earlier are becoming</font>

220
00:10:16,710 --> 00:10:24,420
particularly scarce in<font color="#E5E5E5"> Asia you've</font>

221
00:10:20,160 --> 00:10:28,020
probably all heard the story that that

222
00:10:24,420 --> 00:10:30,240
Stanford University has more ipv4

223
00:10:28,020 --> 00:10:32,490
address space than the<font color="#E5E5E5"> entire country</font><font color="#CCCCCC"> of</font>

224
00:10:30,240 --> 00:10:35,370
China that's actually<font color="#CCCCCC"> not true anymore</font>

225
00:10:32,490 --> 00:10:39,750
but but it was true until what a year or

226
00:10:35,370 --> 00:10:42,300
two years ago and you know that's that's

227
00:10:39,750 --> 00:10:44,130
a pretty significant statistic that

228
00:10:42,300 --> 00:10:46,319
didn't happen out of any maliciousness

229
00:10:44,130 --> 00:10:48,860
or anything it just happened back in<font color="#CCCCCC"> the</font>

230
00:10:46,320 --> 00:10:51,690
days when everybody thought that that

231
00:10:48,860 --> 00:10:53,470
the ARPANET and such was never going to

232
00:10:51,690 --> 00:10:55,720
grow to anything big and

233
00:10:53,470 --> 00:10:57,670
and people involved in that took very

234
00:10:55,720 --> 00:11:01,150
big blocks of addresses thinking your

235
00:10:57,670 --> 00:11:04,930
sis more or less an exhaustible supply

236
00:11:01,150 --> 00:11:07,110
of ipv4 addresses the imminent demise of

237
00:11:04,930 --> 00:11:09,550
ipv4 has been<font color="#E5E5E5"> predicted since about the</font>

238
00:11:07,110 --> 00:11:10,990
<font color="#E5E5E5">mid-1990s you've probably also seen all</font>

239
00:11:09,550 --> 00:11:16,240
of those articles around you know in

240
00:11:10,990 --> 00:11:18,820
1994-95 that showed graphs of the

241
00:11:16,240 --> 00:11:21,160
increased allocation of ipv4 addresses

242
00:11:18,820 --> 00:11:23,110
and pretty<font color="#CCCCCC"> much all of them would say at</font>

243
00:11:21,160 --> 00:11:25,510
<font color="#E5E5E5">this rate if it continues for another</font>

244
00:11:23,110 --> 00:11:28,780
two<font color="#CCCCCC"> years or whatever we're</font><font color="#E5E5E5"> going to be</font>

245
00:11:25,510 --> 00:11:32,950
<font color="#E5E5E5">out of ipv4 addresses well there were</font>

246
00:11:28,780 --> 00:11:35,410
two initiatives that were taken to stop

247
00:11:32,950 --> 00:11:38,320
that address depletion the long-term

248
00:11:35,410 --> 00:11:40,510
initiative originally called IP<font color="#E5E5E5"> next</font>

249
00:11:38,320 --> 00:11:43,750
<font color="#E5E5E5">generation I</font><font color="#CCCCCC"> P&G and eventually became</font>

250
00:11:40,510 --> 00:11:46,720
ipv6 was sort of the<font color="#E5E5E5"> the permanent</font>

251
00:11:43,750 --> 00:11:49,390
solution at least<font color="#CCCCCC"> until ipv6 itself</font>

252
00:11:46,720 --> 00:11:53,710
starts having problems with address

253
00:11:49,390 --> 00:11:56,830
depletion but that takes time to develop

254
00:11:53,710 --> 00:11:59,500
so the<font color="#CCCCCC"> short-term solution was network</font>

255
00:11:56,830 --> 00:12:03,940
address translation and dynamic IP

256
00:11:59,500 --> 00:12:05,320
addresses RFC 1918 addresses that was

257
00:12:03,940 --> 00:12:06,820
always<font color="#E5E5E5"> intended as just a short-term</font>

258
00:12:05,320 --> 00:12:09,400
solution something that will slow

259
00:12:06,820 --> 00:12:13,540
address depletion until the next

260
00:12:09,400 --> 00:12:16,350
generation of IP is ready to go but that

261
00:12:13,540 --> 00:12:19,780
solution has become so<font color="#CCCCCC"> popular that</font>

262
00:12:16,350 --> 00:12:22,000
there are now a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people that</font>

263
00:12:19,780 --> 00:12:23,829
question whether we ever will need ipv6

264
00:12:22,000 --> 00:12:27,130
you know they're they're warm and<font color="#E5E5E5"> happy</font>

265
00:12:23,830 --> 00:12:29,440
behind their nap boxes and the statistic

266
00:12:27,130 --> 00:12:31,450
that i have here shows that some seventy

267
00:12:29,440 --> 00:12:36,910
percent<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Fortune 1000 companies</font>

268
00:12:31,450 --> 00:12:38,620
currently are using that so the<font color="#CCCCCC"> question</font>

269
00:12:36,910 --> 00:12:41,829
is why not<font color="#E5E5E5"> just continue with what we're</font>

270
00:12:38,620 --> 00:12:45,160
<font color="#CCCCCC">doing and I put</font><font color="#E5E5E5"> down here kind of a big</font>

271
00:12:41,830 --> 00:12:46,720
red but NAT causes problems on the

272
00:12:45,160 --> 00:12:48,130
internet and I'm sure there's probably

273
00:12:46,720 --> 00:12:50,370
not a person in this room that<font color="#CCCCCC"> doesn't</font>

274
00:12:48,130 --> 00:12:54,010
understand<font color="#CCCCCC"> that and know that</font>

275
00:12:50,370 --> 00:12:55,840
specifically it addresses it can break

276
00:12:54,010 --> 00:12:57,970
or does break the globally unique

277
00:12:55,840 --> 00:13:00,640
address model that the internet<font color="#CCCCCC"> was</font>

278
00:12:57,970 --> 00:13:02,800
always kind of intended to have it

279
00:13:00,640 --> 00:13:04,510
breaks address stability and this next

280
00:13:02,800 --> 00:13:07,420
bullet point really kind<font color="#E5E5E5"> of says the</font>

281
00:13:04,510 --> 00:13:10,480
same thing it breaks the always-on model

282
00:13:07,420 --> 00:13:13,030
because if you have dynamic IP addresses

283
00:13:10,480 --> 00:13:14,620
an address that<font color="#CCCCCC"> a device has one day may</font>

284
00:13:13,030 --> 00:13:17,470
not be the same<font color="#CCCCCC"> address that a device</font>

285
00:13:14,620 --> 00:13:20,860
has the<font color="#E5E5E5"> next day it breaks the</font>

286
00:13:17,470 --> 00:13:22,900
peer-to-peer model and again some<font color="#E5E5E5"> of the</font>

287
00:13:20,860 --> 00:13:24,280
stuff i cut out of this<font color="#CCCCCC"> i talked a lot</font>

288
00:13:22,900 --> 00:13:25,600
about peer to peer and some of the

289
00:13:24,280 --> 00:13:28,209
things that it's<font color="#E5E5E5"> happening with peer to</font>

290
00:13:25,600 --> 00:13:30,520
<font color="#E5E5E5">peer and grid networking and or grid</font>

291
00:13:28,210 --> 00:13:34,690
computing and all of that sort of thing

292
00:13:30,520 --> 00:13:39,010
in<font color="#E5E5E5"> the internet now</font><font color="#CCCCCC"> nat is is a big</font>

293
00:13:34,690 --> 00:13:42,820
<font color="#E5E5E5">barrier to to developing those kind of</font>

294
00:13:39,010 --> 00:13:45,700
new applications it breaks some

295
00:13:42,820 --> 00:13:48,580
applications particularly security and

296
00:13:45,700 --> 00:13:51,520
quality<font color="#CCCCCC"> of service types of applications</font>

297
00:13:48,580 --> 00:13:53,830
anything where you<font color="#E5E5E5"> have to take your IP</font>

298
00:13:51,520 --> 00:13:56,230
<font color="#CCCCCC">address and include it somewhere at the</font>

299
00:13:53,830 --> 00:13:58,810
application layer if I go if your packet

300
00:13:56,230 --> 00:14:00,490
goes through an at box and the<font color="#E5E5E5"> address</font>

301
00:13:58,810 --> 00:14:02,770
and the header changes and no<font color="#E5E5E5"> longer</font>

302
00:14:00,490 --> 00:14:06,100
matches the address that's in the

303
00:14:02,770 --> 00:14:10,390
application then that applications can

304
00:14:06,100 --> 00:14:12,610
break it introduces a false sense of

305
00:14:10,390 --> 00:14:15,130
security there's a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> people that</font>

306
00:14:12,610 --> 00:14:18,040
consider that<font color="#CCCCCC"> to be a part of their</font>

307
00:14:15,130 --> 00:14:19,900
security scheme and that<font color="#E5E5E5"> NAT does a</font>

308
00:14:18,040 --> 00:14:24,490
great job of kind of<font color="#E5E5E5"> hiding their</font>

309
00:14:19,900 --> 00:14:26,800
network well it can have some security

310
00:14:24,490 --> 00:14:31,360
implications but not nearly as much as

311
00:14:26,800 --> 00:14:36,670
people think NAT itself it does not make

312
00:14:31,360 --> 00:14:38,800
<font color="#E5E5E5">you tremendously secure</font><font color="#CCCCCC"> against a false</font>

313
00:14:36,670 --> 00:14:42,099
sense of security and then finally<font color="#CCCCCC"> that</font>

314
00:14:38,800 --> 00:14:44,859
introduces some hidden costs it

315
00:14:42,100 --> 00:14:47,830
introduces administrative costs in your

316
00:14:44,860 --> 00:14:51,960
network simply<font color="#E5E5E5"> having to deal with NAT</font>

317
00:14:47,830 --> 00:14:54,250
it introduces very hidden costs in

318
00:14:51,960 --> 00:14:57,820
application development when application

319
00:14:54,250 --> 00:14:59,800
developers are having to consider<font color="#E5E5E5"> how do</font>

320
00:14:57,820 --> 00:15:01,390
i make my application work through an ad

321
00:14:59,800 --> 00:15:04,150
box because there's so much NAT out

322
00:15:01,390 --> 00:15:05,890
there particularly you know in homes and

323
00:15:04,150 --> 00:15:09,459
<font color="#E5E5E5">small businesses and such there's NAT</font>

324
00:15:05,890 --> 00:15:13,210
boxes you know how do I get around that

325
00:15:09,460 --> 00:15:15,550
so NAT becomes a big barrier there to

326
00:15:13,210 --> 00:15:19,000
application development that also

327
00:15:15,550 --> 00:15:19,540
becomes a big barrier to development of

328
00:15:19,000 --> 00:15:22,810
new

329
00:15:19,540 --> 00:15:24,399
lines of applications many application

330
00:15:22,810 --> 00:15:27,459
developers will say that that's sort of

331
00:15:24,399 --> 00:15:29,079
the<font color="#E5E5E5"> the big hindrance right now in in</font>

332
00:15:27,459 --> 00:15:31,899
looking at new ways to use the internet

333
00:15:29,079 --> 00:15:33,969
and new services and<font color="#CCCCCC"> applications and</font>

334
00:15:31,899 --> 00:15:37,829
that can go over<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Internet</font><font color="#E5E5E5"> and that's</font>

335
00:15:33,970 --> 00:15:41,199
a<font color="#E5E5E5"> problem so ipv6 because it has</font>

336
00:15:37,829 --> 00:15:46,089
plentiful global addresses means no more

337
00:15:41,199 --> 00:15:48,339
<font color="#CCCCCC">NAT and again as I said earlier doing</font>

338
00:15:46,089 --> 00:15:50,250
away<font color="#CCCCCC"> with NAT also means that into n</font>

339
00:15:48,339 --> 00:15:52,899
security becomes much more important

340
00:15:50,250 --> 00:15:54,850
because you don't<font color="#CCCCCC"> have that hidden</font>

341
00:15:52,899 --> 00:15:59,170
element and security should be<font color="#E5E5E5"> better</font>

342
00:15:54,850 --> 00:16:01,480
with ipv6 then with ipv4 because you've

343
00:15:59,170 --> 00:16:05,199
gotten rid of<font color="#E5E5E5"> NAT and done security the</font>

344
00:16:01,480 --> 00:16:08,350
way it really<font color="#E5E5E5"> should be done some</font>

345
00:16:05,199 --> 00:16:10,569
transition assumptions one of the big

346
00:16:08,350 --> 00:16:12,339
assumptions and there's some mythology

347
00:16:10,569 --> 00:16:17,949
around this is that there will be no

348
00:16:12,339 --> 00:16:21,310
flag day with ipv6 I still see articles

349
00:16:17,949 --> 00:16:23,889
in the media on a regular basis that say

350
00:16:21,310 --> 00:16:25,989
well you know<font color="#E5E5E5"> the big reason ipv6 isn't</font>

351
00:16:23,889 --> 00:16:28,690
being adapted is that it really scares

352
00:16:25,990 --> 00:16:31,180
people with the idea<font color="#CCCCCC"> of just</font><font color="#E5E5E5"> shutting</font>

353
00:16:28,690 --> 00:16:33,310
off ipv4 and turning on ipv6 well that's

354
00:16:31,180 --> 00:16:34,689
not going to happen it's never going to

355
00:16:33,310 --> 00:16:38,018
happen that<font color="#E5E5E5"> way the last time we had a</font>

356
00:16:34,690 --> 00:16:41,199
in the internet a<font color="#E5E5E5"> flagged a type of</font>

357
00:16:38,019 --> 00:16:44,050
transition was was in 1983 specifically

358
00:16:41,199 --> 00:16:47,620
<font color="#E5E5E5">January first of 1983 when we</font>

359
00:16:44,050 --> 00:16:50,500
transitioned from NCP to to<font color="#E5E5E5"> TCP and it's</font>

360
00:16:47,620 --> 00:16:51,940
<font color="#E5E5E5">something of a famous disaster didn't</font>

361
00:16:50,500 --> 00:16:54,250
<font color="#E5E5E5">happen anywhere near as smoothly as</font>

362
00:16:51,940 --> 00:16:56,019
people had planned and and it was a

363
00:16:54,250 --> 00:16:59,139
lesson<font color="#E5E5E5"> learned it's something that will</font>

364
00:16:56,019 --> 00:17:00,639
it<font color="#E5E5E5"> just won't</font><font color="#CCCCCC"> happen again transition</font>

365
00:16:59,139 --> 00:17:03,550
will be incremental if you're talking

366
00:17:00,639 --> 00:17:05,620
<font color="#CCCCCC">about an enterprise a large enterprise</font>

367
00:17:03,550 --> 00:17:07,780
you should<font color="#E5E5E5"> probably be looking at</font>

368
00:17:05,619 --> 00:17:09,938
transition happening over some number of

369
00:17:07,780 --> 00:17:11,918
years if<font color="#E5E5E5"> you're talking about the</font>

370
00:17:09,939 --> 00:17:14,230
<font color="#E5E5E5">Internet itself more than likely</font>

371
00:17:11,919 --> 00:17:16,630
transition is going to happen over a

372
00:17:14,230 --> 00:17:19,449
decade or<font color="#E5E5E5"> so it's not something that's</font>

373
00:17:16,630 --> 00:17:22,299
<font color="#CCCCCC">going to happen overnight there</font>

374
00:17:19,449 --> 00:17:24,459
shouldn't be any<font color="#E5E5E5"> ipv4 and ipv6 barriers</font>

375
00:17:22,299 --> 00:17:26,439
at any time in other words there should

376
00:17:24,459 --> 00:17:29,650
be smooth communication there should

377
00:17:26,439 --> 00:17:32,890
never be a point<font color="#E5E5E5"> where an ipv6 device</font>

378
00:17:29,650 --> 00:17:34,900
can't talk to an ipv4 device and for

379
00:17:32,890 --> 00:17:36,190
vice versa and that's a big<font color="#CCCCCC"> part of</font><font color="#E5E5E5"> what</font>

380
00:17:34,900 --> 00:17:38,980
we're going to<font color="#E5E5E5"> be talking about with</font>

381
00:17:36,190 --> 00:17:43,090
transition mechanisms it should be<font color="#E5E5E5"> easy</font>

382
00:17:38,980 --> 00:17:46,810
for<font color="#E5E5E5"> the end user if you switch from an</font>

383
00:17:43,090 --> 00:17:49,389
IP VIP v4 only device to a duel stacked

384
00:17:46,810 --> 00:17:52,300
device it shouldn't break any kind of

385
00:17:49,390 --> 00:17:54,790
applications for the<font color="#E5E5E5"> end user they shew</font>

386
00:17:52,300 --> 00:17:59,409
you know<font color="#CCCCCC"> end-users</font><font color="#E5E5E5"> don't really care</font>

387
00:17:54,790 --> 00:18:00,460
<font color="#E5E5E5">don't even</font><font color="#CCCCCC"> know what IP is usually they</font>

388
00:17:59,410 --> 00:18:02,380
<font color="#CCCCCC">just want</font><font color="#E5E5E5"> to see their their</font>

389
00:18:00,460 --> 00:18:05,290
applications working and it should all

390
00:18:02,380 --> 00:18:08,590
of that decision making<font color="#E5E5E5"> it whether to</font>

391
00:18:05,290 --> 00:18:11,050
use ipv4 or ipv6 and a<font color="#E5E5E5"> dual</font><font color="#CCCCCC"> stack device</font>

392
00:18:08,590 --> 00:18:14,949
should happen behind the scenes with

393
00:18:11,050 --> 00:18:18,870
with no visibility to the<font color="#E5E5E5"> user and ipv6</font>

394
00:18:14,950 --> 00:18:22,720
is designed with transition in mind a

395
00:18:18,870 --> 00:18:26,020
good way to<font color="#E5E5E5"> think of the transition is</font>

396
00:18:22,720 --> 00:18:28,690
not transition itself but coexistence at

397
00:18:26,020 --> 00:18:32,680
least for the short term my own opinion

398
00:18:28,690 --> 00:18:35,260
you well<font color="#E5E5E5"> I guess I should say that ipv6</font>

399
00:18:32,680 --> 00:18:38,140
<font color="#E5E5E5">is really designed with the idea that it</font>

400
00:18:35,260 --> 00:18:41,080
will<font color="#E5E5E5"> always need to coexist with ipv4 my</font>

401
00:18:38,140 --> 00:18:43,510
own opinion<font color="#E5E5E5"> is that once ipv6 really</font>

402
00:18:41,080 --> 00:18:46,629
takes off I think you'll see<font color="#E5E5E5"> ipv4 die</font>

403
00:18:43,510 --> 00:18:50,740
off pretty quickly within<font color="#E5E5E5"> a matter of</font>

404
00:18:46,630 --> 00:18:52,270
<font color="#CCCCCC">just a few</font><font color="#E5E5E5"> years but nonetheless it's a</font>

405
00:18:50,740 --> 00:18:53,770
good<font color="#CCCCCC"> decision and</font><font color="#E5E5E5"> it's a good way</font><font color="#CCCCCC"> to</font>

406
00:18:52,270 --> 00:18:57,010
look at it that<font color="#E5E5E5"> these two things need to</font>

407
00:18:53,770 --> 00:18:58,990
<font color="#E5E5E5">always coexist there are a lot of</font>

408
00:18:57,010 --> 00:19:01,810
<font color="#CCCCCC">different transition technologies which</font>

409
00:18:58,990 --> 00:19:03,100
you'll see in this presentation and

410
00:19:01,810 --> 00:19:04,149
that's a<font color="#E5E5E5"> good</font><font color="#CCCCCC"> thing because there's a</font>

411
00:19:03,100 --> 00:19:05,770
<font color="#CCCCCC">lot of different kinds</font><font color="#E5E5E5"> of networks</font>

412
00:19:04,150 --> 00:19:08,440
there's a lot of different<font color="#E5E5E5"> kinds of</font>

413
00:19:05,770 --> 00:19:11,290
networking philosophies and so the more

414
00:19:08,440 --> 00:19:15,490
tools you have in<font color="#E5E5E5"> your toolbox for doing</font>

415
00:19:11,290 --> 00:19:17,290
these transitions the better for some

416
00:19:15,490 --> 00:19:19,570
transition strategies a couple of

417
00:19:17,290 --> 00:19:21,610
different approaches one is edge<font color="#E5E5E5"> decor</font>

418
00:19:19,570 --> 00:19:25,120
and that's really what<font color="#E5E5E5"> it seems</font><font color="#CCCCCC"> like</font>

419
00:19:21,610 --> 00:19:27,969
most people focus on is edge decor<font color="#E5E5E5"> that</font>

420
00:19:25,120 --> 00:19:31,050
can be important when when ipv6 types of

421
00:19:27,970 --> 00:19:34,690
services are<font color="#CCCCCC"> being offered to customers</font>

422
00:19:31,050 --> 00:19:37,690
speaking from an<font color="#E5E5E5"> ISP standpoint when</font>

423
00:19:34,690 --> 00:19:39,400
addresses are scarce at the edge and you

424
00:19:37,690 --> 00:19:41,680
want to start servicing more customers

425
00:19:39,400 --> 00:19:44,380
it can be good<font color="#E5E5E5"> to transition at the edge</font>

426
00:19:41,680 --> 00:19:47,130
and that's<font color="#CCCCCC"> usually going to be user or</font>

427
00:19:44,380 --> 00:19:47,130
customer driven

428
00:19:47,670 --> 00:19:54,460
probably another another example of

429
00:19:51,610 --> 00:19:58,000
something you might see driving ipv6

430
00:19:54,460 --> 00:20:01,630
adoption from the<font color="#E5E5E5"> edge from the users is</font>

431
00:19:58,000 --> 00:20:04,120
online gaming already most of the gaming

432
00:20:01,630 --> 00:20:06,070
manufacturers sony and microsoft and

433
00:20:04,120 --> 00:20:08,469
nintendo the big<font color="#E5E5E5"> three kind of in there</font>

434
00:20:06,070 --> 00:20:10,750
<font color="#E5E5E5">are looking at peer-to-peer online</font>

435
00:20:08,470 --> 00:20:13,960
gaming and how that improves the

436
00:20:10,750 --> 00:20:15,490
performance of gaming ipv6 can be a big

437
00:20:13,960 --> 00:20:17,880
element in<font color="#CCCCCC"> that and that could be the</font>

438
00:20:15,490 --> 00:20:20,200
kind of thing that starts driving

439
00:20:17,880 --> 00:20:23,820
transition from<font color="#E5E5E5"> the edge when users</font>

440
00:20:20,200 --> 00:20:26,500
start saying<font color="#E5E5E5"> I hear that ipv6 based</font>

441
00:20:23,820 --> 00:20:28,570
peer-to-peer online gaming has much

442
00:20:26,500 --> 00:20:31,480
better performance<font color="#CCCCCC"> than server-based</font>

443
00:20:28,570 --> 00:20:34,840
gaming why can't I<font color="#CCCCCC"> get that you know</font>

444
00:20:31,480 --> 00:20:36,850
speaking<font color="#E5E5E5"> to their ISPs and that gives</font>

445
00:20:34,840 --> 00:20:46,330
the ISPs now a business case for

446
00:20:36,850 --> 00:20:47,590
starting to transition pardon yeah yeah

447
00:20:46,330 --> 00:20:50,080
for sure yeah<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> there's all kinds</font>

448
00:20:47,590 --> 00:20:52,470
of models there you know it's a<font color="#E5E5E5"> online</font>

449
00:20:50,080 --> 00:20:54,520
peer-to-peer online gaming model is

450
00:20:52,470 --> 00:20:56,590
probably still going to<font color="#E5E5E5"> have a server</font>

451
00:20:54,520 --> 00:20:59,710
element in there you know<font color="#E5E5E5"> where you go</font>

452
00:20:56,590 --> 00:21:01,480
<font color="#E5E5E5">to a server to find an opponent and to</font>

453
00:20:59,710 --> 00:21:03,790
do whatever financial transactions that

454
00:21:01,480 --> 00:21:05,140
you need you know and and then to

455
00:21:03,790 --> 00:21:07,510
actually play<font color="#CCCCCC"> the game you switch to</font>

456
00:21:05,140 --> 00:21:08,830
peer-to-peer that's one model that could

457
00:21:07,510 --> 00:21:10,660
happen you know other things could be

458
00:21:08,830 --> 00:21:12,070
<font color="#E5E5E5">just that you know the cost of that</font>

459
00:21:10,660 --> 00:21:15,460
<font color="#E5E5E5">could be built into the games that are</font>

460
00:21:12,070 --> 00:21:20,110
sold yep I don't know that for the edge

461
00:21:15,460 --> 00:21:22,630
to core transition though to do that

462
00:21:20,110 --> 00:21:24,610
really<font color="#E5E5E5"> means probably tunneling</font>

463
00:21:22,630 --> 00:21:28,210
technologies so that if you<font color="#E5E5E5"> still have</font>

464
00:21:24,610 --> 00:21:30,850
an ipv4 only core you've got a tunnel

465
00:21:28,210 --> 00:21:33,010
<font color="#E5E5E5">your ipv6 through there which means</font>

466
00:21:30,850 --> 00:21:36,070
<font color="#E5E5E5">increased administrative costs and so</font>

467
00:21:33,010 --> 00:21:37,600
forth so for some ISPs that are<font color="#E5E5E5"> simply</font>

468
00:21:36,070 --> 00:21:40,270
preparing themselves and getting<font color="#E5E5E5"> ready</font>

469
00:21:37,600 --> 00:21:42,939
to to start offering ipv6 services

470
00:21:40,270 --> 00:21:45,160
cortege transition may<font color="#CCCCCC"> be a better</font>

471
00:21:42,940 --> 00:21:46,990
strategy if you don't have immediate

472
00:21:45,160 --> 00:21:48,370
customer demand you're simply wanting to

473
00:21:46,990 --> 00:21:51,010
<font color="#E5E5E5">get ready</font><font color="#CCCCCC"> for that customer demand</font>

474
00:21:48,370 --> 00:21:53,770
starting to dual stack your router's

475
00:21:51,010 --> 00:21:56,290
from the core out could<font color="#E5E5E5"> be a good</font>

476
00:21:53,770 --> 00:21:59,230
<font color="#E5E5E5">strategy and by dual stacking you've</font>

477
00:21:56,290 --> 00:22:01,469
avoided a lot of administrative overhead

478
00:21:59,230 --> 00:22:04,529
associated with

479
00:22:01,469 --> 00:22:06,459
if you start talking<font color="#CCCCCC"> about enterprises</font>

480
00:22:04,529 --> 00:22:08,859
you know it's something<font color="#E5E5E5"> i just threw in</font>

481
00:22:06,459 --> 00:22:12,659
there<font color="#CCCCCC"> I've actually never actually</font>

482
00:22:08,859 --> 00:22:14,949
looked closely at what the the

483
00:22:12,659 --> 00:22:17,080
vulnerabilities are and such but you

484
00:22:14,950 --> 00:22:20,049
perhaps transitioning by routing

485
00:22:17,080 --> 00:22:22,059
protocol area could be<font color="#CCCCCC"> a</font><font color="#E5E5E5"> good strategy</font>

486
00:22:20,049 --> 00:22:25,629
enterprises tend to look at their

487
00:22:22,059 --> 00:22:28,259
networks more in terms of areas<font color="#E5E5E5"> than you</font>

488
00:22:25,629 --> 00:22:31,119
know cores and edges like an<font color="#CCCCCC"> ISP would</font>

489
00:22:28,259 --> 00:22:32,919
you could probably transition by subnet

490
00:22:31,119 --> 00:22:37,589
but I think that's<font color="#E5E5E5"> probably quite a bit</font>

491
00:22:32,919 --> 00:22:39,729
to incremental there's<font color="#E5E5E5"> three types of</font>

492
00:22:37,589 --> 00:22:41,769
transition mechanisms there's dual

493
00:22:39,729 --> 00:22:44,049
stacks there's tunnels and there's

494
00:22:41,769 --> 00:22:48,999
translators and I've listed those

495
00:22:44,049 --> 00:22:51,729
probably<font color="#E5E5E5"> in the order how do I want to</font>

496
00:22:48,999 --> 00:22:55,329
say that in decreasing order of

497
00:22:51,729 --> 00:22:57,099
desirability in other words the the best

498
00:22:55,329 --> 00:22:59,889
way to transition if you can would

499
00:22:57,099 --> 00:23:01,918
simply be to dual stack everything let

500
00:22:59,889 --> 00:23:05,559
your router's let your host devices

501
00:23:01,919 --> 00:23:09,609
simply talk ipv6 when that when DNS

502
00:23:05,559 --> 00:23:13,749
gives them an ipv6 address talk ipv4

503
00:23:09,609 --> 00:23:17,099
when DNS gives them an ipv4 address and

504
00:23:13,749 --> 00:23:19,929
you<font color="#CCCCCC"> notice there's relatively little</font>

505
00:23:17,099 --> 00:23:22,869
administrative overhead with that and

506
00:23:19,929 --> 00:23:27,070
works well all the major router vendors

507
00:23:22,869 --> 00:23:32,978
support ipv6 right now all of the the

508
00:23:27,070 --> 00:23:35,739
major operating systems in in in devices

509
00:23:32,979 --> 00:23:39,639
<font color="#E5E5E5">support ipv6</font><font color="#CCCCCC"> microsoft has that Apple</font>

510
00:23:35,739 --> 00:23:41,379
has it all the various flavors of<font color="#CCCCCC"> UNIX</font>

511
00:23:39,639 --> 00:23:43,899
most of the various flavors of unix have

512
00:23:41,379 --> 00:23:47,349
it so it's all there<font color="#E5E5E5"> and it's all</font>

513
00:23:43,899 --> 00:23:52,119
available for doing dual stacking when

514
00:23:47,349 --> 00:23:54,189
you do have two separate networks into

515
00:23:52,119 --> 00:23:55,809
different parts where you've got just v4

516
00:23:54,190 --> 00:23:57,759
only portions of<font color="#CCCCCC"> your network been</font>

517
00:23:55,809 --> 00:24:01,139
tunneling becomes an important

518
00:23:57,759 --> 00:24:04,659
transition technology as<font color="#CCCCCC"> it says here</font>

519
00:24:01,139 --> 00:24:07,449
<font color="#E5E5E5">for tunneling right now ipv6 over ipv4</font>

520
00:24:04,659 --> 00:24:10,269
<font color="#E5E5E5">clouds and as you sort of move further</font>

521
00:24:07,450 --> 00:24:12,039
along into a world where<font color="#E5E5E5"> it's mostly</font>

522
00:24:10,269 --> 00:24:16,710
ipv6 then you want

523
00:24:12,039 --> 00:24:19,749
be<font color="#E5E5E5"> able to tunnel ipv4 over ipv6 clouds</font>

524
00:24:16,710 --> 00:24:22,979
so tunneling is really so that<font color="#E5E5E5"> v6 can</font>

525
00:24:19,749 --> 00:24:26,889
talk to v6<font color="#E5E5E5"> and v4 can talk to vie for</font>

526
00:24:22,979 --> 00:24:30,269
when you need for v6 only device to talk

527
00:24:26,889 --> 00:24:33,570
to a v4 only device you need translators

528
00:24:30,269 --> 00:24:38,549
and that's probably<font color="#E5E5E5"> the least desirable</font>

529
00:24:33,570 --> 00:24:41,320
and most administrative liebhard 'insahn

530
00:24:38,549 --> 00:24:43,029
transition technology to use it's

531
00:24:41,320 --> 00:24:46,689
something<font color="#CCCCCC"> that you probably want to try</font>

532
00:24:43,029 --> 00:24:48,809
to avoid<font color="#CCCCCC"> unless you</font><font color="#E5E5E5"> just have have areas</font>

533
00:24:46,690 --> 00:24:51,820
where there's no other solution and

534
00:24:48,809 --> 00:24:54,039
we'll look at each<font color="#CCCCCC"> one</font><font color="#E5E5E5"> of those in quite</font>

535
00:24:51,820 --> 00:24:57,989
some depth the first thing<font color="#E5E5E5"> is dual</font>

536
00:24:54,039 --> 00:25:01,840
stacks dual staxus<font color="#E5E5E5"> may be kind of an</font>

537
00:24:57,989 --> 00:25:03,840
<font color="#E5E5E5">unfortunate name and it implies</font>

538
00:25:01,840 --> 00:25:05,889
something like this where<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> ipv6</font>

539
00:25:03,840 --> 00:25:08,859
applications they work all the<font color="#CCCCCC"> way down</font>

540
00:25:05,889 --> 00:25:10,658
a stack and you have ipv4 applications

541
00:25:08,859 --> 00:25:12,189
that work all the<font color="#CCCCCC"> way down a stack this</font>

542
00:25:10,659 --> 00:25:15,609
<font color="#E5E5E5">is not something that's really desirable</font>

543
00:25:12,190 --> 00:25:16,989
what you really want is dual layers so

544
00:25:15,609 --> 00:25:19,449
even though they<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> still call</font>

545
00:25:16,989 --> 00:25:22,019
this dual stack what you want is at

546
00:25:19,450 --> 00:25:26,529
least in the application layer

547
00:25:22,019 --> 00:25:31,419
applications that are agnostic<font color="#E5E5E5"> to ipv4</font>

548
00:25:26,529 --> 00:25:34,960
or ipv6 again if dns returns an ipv6

549
00:25:31,419 --> 00:25:37,619
address then we'll talk ipv6 if dns

550
00:25:34,960 --> 00:25:40,599
returns an ipv4 address we<font color="#E5E5E5"> talk ipv4</font>

551
00:25:37,619 --> 00:25:43,119
that's more what you really want in a

552
00:25:40,599 --> 00:25:47,200
dual stack is applications that don't

553
00:25:43,119 --> 00:25:52,889
care what's below or either<font color="#E5E5E5"> don't care</font>

554
00:25:47,200 --> 00:25:52,889
or are capable of using either v4 or v6

555
00:25:53,879 --> 00:25:58,959
then we get into<font color="#E5E5E5"> tunnels there's three</font>

556
00:25:57,129 --> 00:26:02,248
<font color="#CCCCCC">different ways of looking</font><font color="#E5E5E5"> at tunnels or</font>

557
00:25:58,960 --> 00:26:05,619
three different tunnel applications

558
00:26:02,249 --> 00:26:07,320
there's router to router tunnels which

559
00:26:05,619 --> 00:26:11,228
is shown<font color="#E5E5E5"> in this top illustration here</font>

560
00:26:07,320 --> 00:26:14,499
host to host tunnels and router to host

561
00:26:11,229 --> 00:26:17,889
and host or outer tunnels and we'll look

562
00:26:14,499 --> 00:26:19,840
at applications of each of those the

563
00:26:17,889 --> 00:26:21,998
particular<font color="#CCCCCC"> tunnel types and I'm sure</font>

564
00:26:19,840 --> 00:26:24,369
there's<font color="#E5E5E5"> more out there listed here are</font>

565
00:26:21,999 --> 00:26:25,270
the ones that I know about there's first

566
00:26:24,369 --> 00:26:26,860
of all configured

567
00:26:25,270 --> 00:26:29,379
this is<font color="#E5E5E5"> something that's going to be</font>

568
00:26:26,860 --> 00:26:30,969
used in a network or where you simply

569
00:26:29,380 --> 00:26:34,000
set up a tunnel and it's expected<font color="#CCCCCC"> to</font>

570
00:26:30,970 --> 00:26:36,070
stay there<font color="#E5E5E5"> all the time those are always</font>

571
00:26:34,000 --> 00:26:37,930
going to be router to router there's

572
00:26:36,070 --> 00:26:40,080
also automatic tunnels and there's a

573
00:26:37,930 --> 00:26:42,850
whole list<font color="#E5E5E5"> here and there's references</font>

574
00:26:40,080 --> 00:26:47,740
for each one where there where

575
00:26:42,850 --> 00:26:50,169
references<font color="#CCCCCC"> exist Tunnel brokers</font><font color="#E5E5E5"> 624 is a</font>

576
00:26:47,740 --> 00:26:55,270
tap<font color="#E5E5E5"> is't app it's a tap however you want</font>

577
00:26:50,170 --> 00:26:58,180
to say that six over for tirado ipv6 for

578
00:26:55,270 --> 00:27:01,210
and DST<font color="#CCCCCC"> m and</font><font color="#E5E5E5"> I'm going to talk about</font>

579
00:26:58,180 --> 00:27:04,120
each<font color="#CCCCCC"> one of those so the first thing</font>

580
00:27:01,210 --> 00:27:07,470
first couple of<font color="#E5E5E5"> examples are configured</font>

581
00:27:04,120 --> 00:27:11,379
tunnels this example here just<font color="#CCCCCC"> shows a</font>

582
00:27:07,470 --> 00:27:14,410
GRE tunnel that is<font color="#E5E5E5"> configured to carry</font>

583
00:27:11,380 --> 00:27:16,600
ipv6 in this particular<font color="#E5E5E5"> case I've got a</font>

584
00:27:14,410 --> 00:27:18,490
jew<font color="#CCCCCC"> nose configuration up here you could</font>

585
00:27:16,600 --> 00:27:20,590
do the exact same thing with cisco iOS

586
00:27:18,490 --> 00:27:22,840
you can do it with the tachi you can do

587
00:27:20,590 --> 00:27:25,770
it with other router vendors it's it's a

588
00:27:22,840 --> 00:27:28,780
common configuration and it's a pretty

589
00:27:25,770 --> 00:27:29,800
easy<font color="#E5E5E5"> to understand configuration if</font>

590
00:27:28,780 --> 00:27:31,840
you've ever done<font color="#E5E5E5"> any kind</font><font color="#CCCCCC"> of tunnel</font>

591
00:27:29,800 --> 00:27:34,080
before then you<font color="#E5E5E5"> can see there's simply</font>

592
00:27:31,840 --> 00:27:37,300
tunnel sources and destinations that is

593
00:27:34,080 --> 00:27:39,340
relative<font color="#CCCCCC"> to the ipv4 side that sets up</font>

594
00:27:37,300 --> 00:27:42,940
the tunnel endpoints<font color="#E5E5E5"> and then from the</font>

595
00:27:39,340 --> 00:27:44,740
ipv6 side the tunnel is viewed as<font color="#E5E5E5"> an</font>

596
00:27:42,940 --> 00:27:48,130
interface and you can see down here

597
00:27:44,740 --> 00:27:52,060
we've<font color="#CCCCCC"> got an ipv6 address applied to</font>

598
00:27:48,130 --> 00:27:56,170
this tunnel for that becomes the tunnel

599
00:27:52,060 --> 00:27:59,320
interface you can also<font color="#E5E5E5"> use mpls and</font>

600
00:27:56,170 --> 00:28:01,150
again I've got a kind<font color="#E5E5E5"> of a brain-dead</font>

601
00:27:59,320 --> 00:28:03,700
<font color="#CCCCCC">junos configuration it's a very</font>

602
00:28:01,150 --> 00:28:05,130
abbreviated configuration up here but

603
00:28:03,700 --> 00:28:07,030
you can<font color="#CCCCCC"> do the</font><font color="#E5E5E5"> same thing with</font><font color="#CCCCCC"> cisco</font>

604
00:28:05,130 --> 00:28:11,140
pretty sure you can do the same<font color="#CCCCCC"> thing</font>

605
00:28:07,030 --> 00:28:14,620
with<font color="#E5E5E5"> itachi use if you have an MPLS</font>

606
00:28:11,140 --> 00:28:18,670
enabled core then you've already got a

607
00:28:14,620 --> 00:28:21,729
nice transition technology in place you

608
00:28:18,670 --> 00:28:27,370
can simply tunnel your ipv6 traffic over

609
00:28:21,730 --> 00:28:30,730
mpls LSPs so two examples of configured

610
00:28:27,370 --> 00:28:34,870
tunnels again to be used in the core of

611
00:28:30,730 --> 00:28:39,460
networks usually for tunneling edge ipv6

612
00:28:34,870 --> 00:28:41,169
edges through an ipv4 cloud very quickly

613
00:28:39,460 --> 00:28:46,830
<font color="#E5E5E5">I wanted to talk</font><font color="#CCCCCC"> about the tunnel setup</font>

614
00:28:41,170 --> 00:28:49,600
protocol which is not a specific ipv6

615
00:28:46,830 --> 00:28:54,699
transition technology but it's used by a

616
00:28:49,600 --> 00:28:57,550
<font color="#E5E5E5">couple of transition technologies as it</font>

617
00:28:54,700 --> 00:29:01,500
says<font color="#CCCCCC"> here it's it's a proposed protocol</font>

618
00:28:57,550 --> 00:29:04,030
that's<font color="#E5E5E5"> a control protocol for setting up</font>

619
00:29:01,500 --> 00:29:08,350
tunnels or particularly<font color="#E5E5E5"> for negotiating</font>

620
00:29:04,030 --> 00:29:11,740
tunnel parameters as I already said it

621
00:29:08,350 --> 00:29:16,179
is used by a<font color="#E5E5E5"> couple of different ipv6</font>

622
00:29:11,740 --> 00:29:19,210
transition schemes it can negotiate

623
00:29:16,180 --> 00:29:22,360
actually either ipv6 or ipv4 tunnels and

624
00:29:19,210 --> 00:29:24,640
it actually uses xml messages over a TCP

625
00:29:22,360 --> 00:29:28,449
session the kinds of tunnel parameters

626
00:29:24,640 --> 00:29:30,670
it can negotiate some of the parameters

627
00:29:28,450 --> 00:29:33,280
are shown here IP addresses prefix

628
00:29:30,670 --> 00:29:36,160
information to<font color="#E5E5E5"> a tunnel endpoints of</font>

629
00:29:33,280 --> 00:29:39,970
course a<font color="#CCCCCC"> DNS delegation and other things</font>

630
00:29:36,160 --> 00:29:42,760
and there's three phases 2 TSP there's

631
00:29:39,970 --> 00:29:45,340
an authentication<font color="#E5E5E5"> phase then there's a</font>

632
00:29:42,760 --> 00:29:46,840
command phase which<font color="#CCCCCC"> is from the</font><font color="#E5E5E5"> client</font>

633
00:29:45,340 --> 00:29:48,490
to the server in other words send a

634
00:29:46,840 --> 00:29:51,310
command saying I need<font color="#E5E5E5"> to set</font><font color="#CCCCCC"> up a tunnel</font>

635
00:29:48,490 --> 00:29:52,930
there's the response phase which is is

636
00:29:51,310 --> 00:29:54,879
traffic going from the server back to

637
00:29:52,930 --> 00:29:58,030
the<font color="#CCCCCC"> client providing tunnel setup</font>

638
00:29:54,880 --> 00:30:00,070
information so just want<font color="#E5E5E5"> to cover that</font>

639
00:29:58,030 --> 00:30:01,420
because i'll make some references as we

640
00:30:00,070 --> 00:30:05,290
go through a couple of different

641
00:30:01,420 --> 00:30:08,170
<font color="#CCCCCC">technologies 2 tsp tsp or tunnel setup</font>

642
00:30:05,290 --> 00:30:09,760
protocol the first tunneling technology

643
00:30:08,170 --> 00:30:13,030
that<font color="#CCCCCC"> i want</font><font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> for automatic</font>

644
00:30:09,760 --> 00:30:16,750
tunnels is a tunnel<font color="#E5E5E5"> broker which is</font>

645
00:30:13,030 --> 00:30:19,260
described in RFC 3053 that RFC gives a

646
00:30:16,750 --> 00:30:23,230
general architecture not a specific

647
00:30:19,260 --> 00:30:26,710
protocol framework it's just an

648
00:30:23,230 --> 00:30:29,680
architecture tunnel brokers are designed

649
00:30:26,710 --> 00:30:34,150
so that that individual devices or small

650
00:30:29,680 --> 00:30:36,070
sites can connect to an existing ipv6

651
00:30:34,150 --> 00:30:38,050
<font color="#CCCCCC">network and there's</font><font color="#E5E5E5"> three basic</font>

652
00:30:36,070 --> 00:30:40,659
components there's the client which is

653
00:30:38,050 --> 00:30:43,450
just the device<font color="#CCCCCC"> that wants to wants to</font>

654
00:30:40,660 --> 00:30:45,700
<font color="#E5E5E5">connect and it's going to be a dual</font>

655
00:30:43,450 --> 00:30:48,430
stack device either a host or<font color="#E5E5E5"> a router</font>

656
00:30:45,700 --> 00:30:48,790
there's the tunnel broker itself which

657
00:30:48,430 --> 00:30:51,970
is

658
00:30:48,790 --> 00:30:56,520
server that does the actual negotiation

659
00:30:51,970 --> 00:30:59,650
of of the tunnel parameters and then

660
00:30:56,520 --> 00:31:01,960
there's the tunnel server which is

661
00:30:59,650 --> 00:31:04,980
actually a router it's a<font color="#E5E5E5"> it's a dual</font>

662
00:31:01,960 --> 00:31:08,940
stack router that that is connected

663
00:31:04,980 --> 00:31:11,410
somewhere to an ipv6<font color="#CCCCCC"> network and</font>

664
00:31:08,940 --> 00:31:13,750
provides the other<font color="#CCCCCC"> end point towards the</font>

665
00:31:11,410 --> 00:31:14,920
client is one endpoint of<font color="#CCCCCC"> the tunnel</font><font color="#E5E5E5"> and</font>

666
00:31:13,750 --> 00:31:18,030
the router becomes the other<font color="#E5E5E5"> endpoint</font>

667
00:31:14,920 --> 00:31:20,830
<font color="#E5E5E5">I've also listed here a few a few</font>

668
00:31:18,030 --> 00:31:22,750
existing tunnel brokers if you do have

669
00:31:20,830 --> 00:31:24,550
<font color="#E5E5E5">just a google search on tunnel brokers</font>

670
00:31:22,750 --> 00:31:26,860
you'll find some some sites that<font color="#E5E5E5"> give</font>

671
00:31:24,550 --> 00:31:31,389
you long lists of tunnel brokers that

672
00:31:26,860 --> 00:31:32,979
<font color="#E5E5E5">exist out there here's a few of them and</font>

673
00:31:31,390 --> 00:31:34,780
here's a bit about how<font color="#E5E5E5"> the tunnel broker</font>

674
00:31:32,980 --> 00:31:38,230
works you can see here we've had a

675
00:31:34,780 --> 00:31:39,700
client over here is the tunnel server

676
00:31:38,230 --> 00:31:41,680
which again is<font color="#E5E5E5"> this some dual stack</font>

677
00:31:39,700 --> 00:31:44,680
router that has connectivity to an ipv6

678
00:31:41,680 --> 00:31:46,480
<font color="#E5E5E5">network and then kind</font><font color="#CCCCCC"> of a conflict in</font>

679
00:31:44,680 --> 00:31:48,700
terms here but the<font color="#CCCCCC"> tunnel broker which</font>

680
00:31:46,480 --> 00:31:53,970
is actually a server and then<font color="#E5E5E5"> you can</font>

681
00:31:48,700 --> 00:31:53,970
also see there's DNS out here yes

682
00:32:03,460 --> 00:32:11,210
I think it are you<font color="#E5E5E5"> talking specifically</font>

683
00:32:07,790 --> 00:32:25,070
for tunnel brokers or or just whatever

684
00:32:11,210 --> 00:32:27,320
kind of<font color="#E5E5E5"> tunnel yeah I think it would</font>

685
00:32:25,070 --> 00:32:29,809
just<font color="#E5E5E5"> really depend on on you know where</font>

686
00:32:27,320 --> 00:32:33,139
your point of connectivity is going to

687
00:32:29,809 --> 00:32:36,428
be<font color="#E5E5E5"> 22 v6 you know whether you're talking</font>

688
00:32:33,140 --> 00:32:38,720
about connecting<font color="#E5E5E5"> to</font><font color="#CCCCCC"> abilene or whatever</font>

689
00:32:36,429 --> 00:32:40,880
and<font color="#E5E5E5"> from there it's</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> a matter of</font>

690
00:32:38,720 --> 00:32:44,510
looking at<font color="#E5E5E5"> you know what's what's your</font>

691
00:32:40,880 --> 00:32:46,490
shortest path or for doing the tunnel I

692
00:32:44,510 --> 00:32:48,890
don't have a real specific answer to

693
00:32:46,490 --> 00:32:51,020
that but you<font color="#E5E5E5"> know I'm probably just</font>

694
00:32:48,890 --> 00:32:58,490
looking at shortest path for getting to

695
00:32:51,020 --> 00:33:01,309
your ipv6 connectivity ok just a little

696
00:32:58,490 --> 00:33:03,169
<font color="#E5E5E5">a</font><font color="#CCCCCC"> few steps here on</font><font color="#E5E5E5"> Tunnel brokers</font>

697
00:33:01,309 --> 00:33:06,799
setting up first<font color="#CCCCCC"> thing that happens is</font>

698
00:33:03,169 --> 00:33:09,200
is the client<font color="#E5E5E5"> is going to ie8 to the</font>

699
00:33:06,799 --> 00:33:11,299
tunnel broker it then sends a

700
00:33:09,200 --> 00:33:15,460
configuration request you know I need a

701
00:33:11,299 --> 00:33:20,299
tunnel for this particular destination

702
00:33:15,460 --> 00:33:21,559
the tunnel broker chooses decides and I

703
00:33:20,299 --> 00:33:23,660
don't<font color="#CCCCCC"> think this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> really answering</font>

704
00:33:21,559 --> 00:33:25,428
your question but you know but it here's

705
00:33:23,660 --> 00:33:27,620
an example of the tunnel burger itself

706
00:33:25,429 --> 00:33:32,330
deciding what's the best tunnel server

707
00:33:27,620 --> 00:33:34,280
to use it chooses the ipv6 addresses<font color="#E5E5E5"> it</font>

708
00:33:32,330 --> 00:33:35,870
also chooses a tunnel lifetime how long

709
00:33:34,280 --> 00:33:40,570
is this tunnel going to remain up it

710
00:33:35,870 --> 00:33:43,668
then registers<font color="#E5E5E5"> the ipv6 addresses in DNS</font>

711
00:33:40,570 --> 00:33:46,250
it then sends the configuration info to

712
00:33:43,669 --> 00:33:49,220
the tunnel server and to the client so

713
00:33:46,250 --> 00:33:51,980
now the the router or tunnel server and

714
00:33:49,220 --> 00:33:54,049
the client have the information<font color="#E5E5E5"> they</font>

715
00:33:51,980 --> 00:33:55,190
need for they know they they will be

716
00:33:54,049 --> 00:33:56,330
tunnel endpoints and they have the

717
00:33:55,190 --> 00:33:58,010
information they<font color="#CCCCCC"> need to set up the</font>

718
00:33:56,330 --> 00:34:04,879
tunnel<font color="#E5E5E5"> and at that point the ton will</font>

719
00:33:58,010 --> 00:34:07,280
get set up 624 is is another automatic

720
00:34:04,880 --> 00:34:09,560
tunneling technology and this tunneling

721
00:34:07,280 --> 00:34:13,129
technology is used for mostly

722
00:34:09,560 --> 00:34:16,570
site-to-site tunnels if you have ipv6

723
00:34:13,129 --> 00:34:19,250
sites that need to connect over ipv4

724
00:34:16,570 --> 00:34:23,740
624 is designed for that it can<font color="#E5E5E5"> also be</font>

725
00:34:19,250 --> 00:34:26,870
<font color="#CCCCCC">used for connecting a site to the larger</font>

726
00:34:23,739 --> 00:34:30,439
ipv6 internet if<font color="#CCCCCC"> you want to call it</font>

727
00:34:26,870 --> 00:34:33,310
that through things called 624 relays

728
00:34:30,440 --> 00:34:36,710
and I'll talk<font color="#CCCCCC"> about those in a moment a</font>

729
00:34:33,310 --> 00:34:39,469
site border router with 624 or if you

730
00:34:36,710 --> 00:34:41,090
want to<font color="#E5E5E5"> say it that way a 624 router has</font>

731
00:34:39,469 --> 00:34:47,089
to have at least one globally unique

732
00:34:41,090 --> 00:34:49,640
ipv4 address that it will use for for

733
00:34:47,090 --> 00:34:52,820
identifying tunnels and it uses it

734
00:34:49,639 --> 00:34:55,699
embeds that ipv4 address in an ipv6

735
00:34:52,820 --> 00:35:00,500
address and an<font color="#E5E5E5"> example is shown here</font>

736
00:34:55,699 --> 00:35:04,850
there is a reserved TLA which is the

737
00:35:00,500 --> 00:35:08,170
first 16 bits of the ipv6 address which

738
00:35:04,850 --> 00:35:12,680
is 2002 and that's a reserve 624 prefix

739
00:35:08,170 --> 00:35:16,040
into that it adds right after that it

740
00:35:12,680 --> 00:35:20,720
adds its ipv4 address and an example is

741
00:35:16,040 --> 00:35:23,500
shown here we've got 138 1485 to 10 if

742
00:35:20,720 --> 00:35:27,439
you change that<font color="#E5E5E5"> into hex you get this</font>

743
00:35:23,500 --> 00:35:30,020
and as a result the 64 prefix using this

744
00:35:27,440 --> 00:35:35,660
ipv4 address is shown<font color="#E5E5E5"> here and you have</font>

745
00:35:30,020 --> 00:35:38,590
this 48-bit prefix the 64 router then

746
00:35:35,660 --> 00:35:42,649
advertises the 624 prefix to<font color="#E5E5E5"> host using</font>

747
00:35:38,590 --> 00:35:46,010
router advertisements and as it says

748
00:35:42,650 --> 00:35:49,250
here<font color="#CCCCCC"> that embedded ipv4 address allows</font>

749
00:35:46,010 --> 00:35:51,250
discovery of tunnel endpoints<font color="#E5E5E5"> and here's</font>

750
00:35:49,250 --> 00:35:57,440
the sort<font color="#E5E5E5"> of a simple example shown here</font>

751
00:35:51,250 --> 00:35:59,750
of a<font color="#E5E5E5"> 624</font><font color="#CCCCCC"> setup you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> that it could</font>

752
00:35:57,440 --> 00:36:01,850
be<font color="#E5E5E5"> site to site as shown here say within</font>

753
00:35:59,750 --> 00:36:04,340
a particular enterprise or something

754
00:36:01,850 --> 00:36:07,160
like that or using a six to four real a

755
00:36:04,340 --> 00:36:09,530
router it can provide connectivity out

756
00:36:07,160 --> 00:36:12,649
to the public internet and you<font color="#CCCCCC"> can see</font>

757
00:36:09,530 --> 00:36:15,140
here these 2624 routers<font color="#E5E5E5"> I've shown the</font>

758
00:36:12,650 --> 00:36:16,730
IP ipv4 addresses that I just kind<font color="#CCCCCC"> of</font>

759
00:36:15,140 --> 00:36:20,900
made up there's no significance to those

760
00:36:16,730 --> 00:36:24,760
and the resulting 624 prefixes that are

761
00:36:20,900 --> 00:36:29,350
advertised via router advertisements to

762
00:36:24,760 --> 00:36:32,200
and<font color="#E5E5E5"> use in users or in devices which</font>

763
00:36:29,350 --> 00:36:33,940
then of course add their own interface

764
00:36:32,200 --> 00:36:39,250
ID to that to come up<font color="#CCCCCC"> with a complete</font>

765
00:36:33,940 --> 00:36:40,840
address I don't really<font color="#E5E5E5"> have any</font>

766
00:36:39,250 --> 00:36:42,850
discussion in that again it's a sort of

767
00:36:40,840 --> 00:36:46,600
a shallow coverage of<font color="#E5E5E5"> all of these</font>

768
00:36:42,850 --> 00:36:50,860
<font color="#E5E5E5">things but there's a big issue in</font><font color="#CCCCCC"> 624 as</font>

769
00:36:46,600 --> 00:36:53,860
far as<font color="#CCCCCC"> multi-homing with 624 relay</font>

770
00:36:50,860 --> 00:36:57,820
routers that tends to<font color="#E5E5E5"> get very complex</font>

771
00:36:53,860 --> 00:37:00,100
and in the RFC<font color="#CCCCCC"> 4646 to 4 it talks a bit</font>

772
00:36:57,820 --> 00:37:03,130
about that there are some issues around

773
00:37:00,100 --> 00:37:05,560
around the<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of increasing complexity</font>

774
00:37:03,130 --> 00:37:10,000
of trying to multi home 624 relay

775
00:37:05,560 --> 00:37:12,520
routers and here's an example that

776
00:37:10,000 --> 00:37:14,410
<font color="#E5E5E5">actually took off of this</font><font color="#CCCCCC"> PC here when</font>

777
00:37:12,520 --> 00:37:18,790
it was<font color="#E5E5E5"> connected to is actually</font>

778
00:37:14,410 --> 00:37:23,620
<font color="#E5E5E5">connected to an</font><font color="#CCCCCC"> abilene network or an</font>

779
00:37:18,790 --> 00:37:25,540
offshoot of adaline and you can see<font color="#CCCCCC"> the</font>

780
00:37:23,620 --> 00:37:28,270
624 tunneling pseudo interface again

781
00:37:25,540 --> 00:37:34,000
this is Windows XP here you can see<font color="#CCCCCC"> the</font>

782
00:37:28,270 --> 00:37:39,520
624 prefix and here in hex is this 65

783
00:37:34,000 --> 00:37:46,720
114 168 91 address that's added so so

784
00:37:39,520 --> 00:37:50,110
when you enable ipv6 in Windows XP it

785
00:37:46,720 --> 00:37:56,339
will automatically create a<font color="#E5E5E5"> 62</font><font color="#CCCCCC"> for sudo</font>

786
00:37:50,110 --> 00:37:58,780
interface in your in your vineyard pc

787
00:37:56,340 --> 00:38:01,330
another transition automatic tunneling

788
00:37:58,780 --> 00:38:02,920
protocol is is the tap or is't app I

789
00:38:01,330 --> 00:38:04,120
never know how to which way is the best

790
00:38:02,920 --> 00:38:07,870
to pronounce out of her to pronounce

791
00:38:04,120 --> 00:38:11,620
both ways this is used more for

792
00:38:07,870 --> 00:38:15,850
connecting individual devices across an

793
00:38:11,620 --> 00:38:17,980
ipv4 network in the<font color="#E5E5E5"> specifications in</font>

794
00:38:15,850 --> 00:38:22,990
the internet draft for its<font color="#CCCCCC"> atap it</font>

795
00:38:17,980 --> 00:38:26,500
really focuses on connecting pcs two

796
00:38:22,990 --> 00:38:28,930
routers it doesn't discuss it directly

797
00:38:26,500 --> 00:38:32,610
but<font color="#CCCCCC"> I see no reason why it couldn't also</font>

798
00:38:28,930 --> 00:38:35,710
be used<font color="#E5E5E5"> to directly connect pc to pc</font>

799
00:38:32,610 --> 00:38:39,010
there's really<font color="#E5E5E5"> nothing in is a tap that</font>

800
00:38:35,710 --> 00:38:43,810
would prevent that I suppose it also use

801
00:38:39,010 --> 00:38:47,800
as a specialized address it it creates

802
00:38:43,810 --> 00:38:52,590
<font color="#E5E5E5">the 64-bit interface ID by using a</font>

803
00:38:47,800 --> 00:38:58,630
reserved<font color="#CCCCCC"> identifier shown here which is</font>

804
00:38:52,590 --> 00:39:01,180
all zeros in then<font color="#E5E5E5"> five efe so it's 16</font>

805
00:38:58,630 --> 00:39:04,180
bits of zeros and<font color="#CCCCCC"> five efe to get this</font>

806
00:39:01,180 --> 00:39:07,680
32 bit reserved identifier and then the

807
00:39:04,180 --> 00:39:10,299
<font color="#E5E5E5">last 32 bits is an embedded ipv4 address</font>

808
00:39:07,680 --> 00:39:13,210
so for<font color="#E5E5E5"> example down here if you had this</font>

809
00:39:10,300 --> 00:39:16,330
ipv4 address assigned on your on<font color="#CCCCCC"> your</font>

810
00:39:13,210 --> 00:39:20,380
device<font color="#E5E5E5"> and somewhere out</font><font color="#CCCCCC"> there you have</font>

811
00:39:16,330 --> 00:39:23,410
a global ipv6 prefix which I've shown

812
00:39:20,380 --> 00:39:26,440
here link local address can of course be

813
00:39:23,410 --> 00:39:29,500
<font color="#CCCCCC">made from</font><font color="#E5E5E5"> that because you have reserved</font>

814
00:39:26,440 --> 00:39:31,480
link-local headers<font color="#E5E5E5"> so you just add in</font>

815
00:39:29,500 --> 00:39:35,170
the<font color="#E5E5E5"> fe 80 to that and you now</font><font color="#CCCCCC"> have a</font>

816
00:39:31,480 --> 00:39:38,500
link local address once you acquire your

817
00:39:35,170 --> 00:39:41,170
global ipv6 address then you can add

818
00:39:38,500 --> 00:39:43,810
your 64-bit interface ID is<font color="#E5E5E5"> a tap</font>

819
00:39:41,170 --> 00:39:47,160
interface ID to your global prefix to

820
00:39:43,810 --> 00:39:49,630
<font color="#CCCCCC">come up</font><font color="#E5E5E5"> with a global ipv6 address</font>

821
00:39:47,160 --> 00:39:52,000
there's a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of a chicken</font><font color="#E5E5E5"> egg</font>

822
00:39:49,630 --> 00:39:54,580
thing here<font color="#E5E5E5"> that you may</font><font color="#CCCCCC"> have noticed</font>

823
00:39:52,000 --> 00:39:57,760
which is that is the tap as I said<font color="#CCCCCC"> is</font>

824
00:39:54,580 --> 00:40:01,000
used for connecting a host across an

825
00:39:57,760 --> 00:40:04,090
ipv4 network to to a dual stack router

826
00:40:01,000 --> 00:40:06,370
somewhere but I've sort<font color="#E5E5E5"> of said here</font>

827
00:40:04,090 --> 00:40:09,220
you've got<font color="#CCCCCC"> this global ipv6 address and</font>

828
00:40:06,370 --> 00:40:11,890
in the ipv6 mechanisms if you have an

829
00:40:09,220 --> 00:40:13,299
ipv6<font color="#E5E5E5"> network the router is sending</font>

830
00:40:11,890 --> 00:40:15,640
router advertisements and that's how

831
00:40:13,300 --> 00:40:17,950
this global address or this global

832
00:40:15,640 --> 00:40:21,549
prefix is discovered well if you don't

833
00:40:17,950 --> 00:40:24,879
have yet a<font color="#E5E5E5"> tunnel to your router how do</font>

834
00:40:21,550 --> 00:40:26,410
you acquire that ipv6 address and the

835
00:40:24,880 --> 00:40:28,780
answer is that<font color="#E5E5E5"> it's a tap sort of has</font>

836
00:40:26,410 --> 00:40:31,569
<font color="#CCCCCC">its own mechanisms behind that for doing</font>

837
00:40:28,780 --> 00:40:35,700
router advertisements specialized kind

838
00:40:31,570 --> 00:40:38,230
of router advertisement over IP VIP v4

839
00:40:35,700 --> 00:40:41,049
<font color="#CCCCCC">and just a little</font><font color="#E5E5E5"> illustration here</font>

840
00:40:38,230 --> 00:40:44,050
going where is the tap to be used like I

841
00:40:41,050 --> 00:40:46,150
said I see no<font color="#CCCCCC"> reason with is a tap that</font>

842
00:40:44,050 --> 00:40:50,710
you couldn't use<font color="#CCCCCC"> it to connect to ipv6</font>

843
00:40:46,150 --> 00:40:52,630
devices directly over an ipv4 cloud or

844
00:40:50,710 --> 00:40:54,070
can be used to tunnel<font color="#E5E5E5"> and the</font>

845
00:40:52,630 --> 00:40:57,100
the kind of<font color="#E5E5E5"> standard way to be used to</font>

846
00:40:54,070 --> 00:40:59,860
tunnel is to a dual stack router which

847
00:40:57,100 --> 00:41:01,779
could be either shown here or it could

848
00:40:59,860 --> 00:41:03,820
go<font color="#CCCCCC"> to a six to four router which then</font>

849
00:41:01,780 --> 00:41:05,710
sets up a six to four tunnel getting

850
00:41:03,820 --> 00:41:13,210
across some<font color="#E5E5E5"> other segments of an ipv4</font>

851
00:41:05,710 --> 00:41:15,970
cloud and here is again an example taken

852
00:41:13,210 --> 00:41:20,230
from my pc when it was connected<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a to</font>

853
00:41:15,970 --> 00:41:25,180
a network again with windows XP if you

854
00:41:20,230 --> 00:41:27,010
enable ipv6 you get automatically what

855
00:41:25,180 --> 00:41:29,319
they call an automatic tunneling<font color="#CCCCCC"> pseudo</font>

856
00:41:27,010 --> 00:41:32,410
interface it's an insert a Pinter face

857
00:41:29,320 --> 00:41:35,020
and here you can<font color="#E5E5E5"> see I've got</font><font color="#CCCCCC"> a link</font>

858
00:41:32,410 --> 00:41:38,230
local address here's the isset app

859
00:41:35,020 --> 00:41:41,020
identifier and here's the<font color="#E5E5E5"> IPP ipv4</font>

860
00:41:38,230 --> 00:41:46,830
address embedded in<font color="#CCCCCC"> that link local</font>

861
00:41:41,020 --> 00:41:50,080
address there's also there<font color="#E5E5E5"> was an early</font>

862
00:41:46,830 --> 00:41:52,650
automatic tunneling solution<font color="#E5E5E5"> called</font><font color="#CCCCCC"> 6</font>

863
00:41:50,080 --> 00:41:56,590
over for sometimes called virtual

864
00:41:52,650 --> 00:41:58,810
<font color="#E5E5E5">Ethernet this was proposed early on and</font>

865
00:41:56,590 --> 00:42:01,030
I've got it here just more for mention

866
00:41:58,810 --> 00:42:03,850
than anything else it hasn't gained much

867
00:42:01,030 --> 00:42:07,270
acceptance and is<font color="#E5E5E5"> as likely to die out</font>

868
00:42:03,850 --> 00:42:09,520
completely mainly because for this

869
00:42:07,270 --> 00:42:12,280
solution<font color="#E5E5E5"> to work it assumes that the</font>

870
00:42:09,520 --> 00:42:14,950
underlying ipv4 network is multicast

871
00:42:12,280 --> 00:42:18,430
enabled and that's not usually a good

872
00:42:14,950 --> 00:42:20,799
assumption might be a<font color="#E5E5E5"> good assumption in</font>

873
00:42:18,430 --> 00:42:25,509
some enterprises but I want<font color="#CCCCCC"> a broader</font>

874
00:42:20,800 --> 00:42:30,750
scale not so much so other<font color="#E5E5E5"> than reading</font>

875
00:42:25,510 --> 00:42:33,520
through the the internet draft for this

876
00:42:30,750 --> 00:42:37,120
you know there's there's not much<font color="#E5E5E5"> I</font>

877
00:42:33,520 --> 00:42:39,070
really<font color="#E5E5E5"> have to say</font><font color="#CCCCCC"> about it but Toretto</font>

878
00:42:37,120 --> 00:42:40,000
is is something that's<font color="#E5E5E5"> really</font>

879
00:42:39,070 --> 00:42:44,410
interesting this is coming out of

880
00:42:40,000 --> 00:42:48,220
<font color="#E5E5E5">Microsoft and and this is this is a</font>

881
00:42:44,410 --> 00:42:50,319
pretty nice new transition technology

882
00:42:48,220 --> 00:42:52,480
that's very specialized everything that

883
00:42:50,320 --> 00:42:57,100
you saw up to now you notice it that<font color="#CCCCCC"> it</font>

884
00:42:52,480 --> 00:42:58,750
<font color="#E5E5E5">somehow involved ipv4 addresses and as a</font>

885
00:42:57,100 --> 00:43:00,730
result a lot of those kinds of

886
00:42:58,750 --> 00:43:03,760
transition technologies will not work

887
00:43:00,730 --> 00:43:06,040
through<font color="#E5E5E5"> an app device to raid 0 is</font>

888
00:43:03,760 --> 00:43:09,970
designed purchase

889
00:43:06,040 --> 00:43:12,520
specifically to operate an ipv6 tunnel

890
00:43:09,970 --> 00:43:15,879
through an app device it does that by

891
00:43:12,520 --> 00:43:18,250
simply avoiding creating a tunnel at the

892
00:43:15,880 --> 00:43:26,170
network layer it actually tunnels ipv6

893
00:43:18,250 --> 00:43:27,280
using UDP in its early early embodiments

894
00:43:26,170 --> 00:43:30,280
however you<font color="#E5E5E5"> want to say that it was</font>

895
00:43:27,280 --> 00:43:31,810
called ship worm a Toretto is a ship

896
00:43:30,280 --> 00:43:34,480
worm which is<font color="#E5E5E5"> actually not a worm it's a</font>

897
00:43:31,810 --> 00:43:38,170
mollusk and there's a picture<font color="#CCCCCC"> of</font><font color="#E5E5E5"> it over</font>

898
00:43:34,480 --> 00:43:40,510
here<font color="#CCCCCC"> tirado Novalis and when i put</font>

899
00:43:38,170 --> 00:43:41,770
together<font color="#E5E5E5"> this slide I wanted to be</font>

900
00:43:40,510 --> 00:43:43,240
clever<font color="#E5E5E5"> and put a</font><font color="#CCCCCC"> little picture of a</font>

901
00:43:41,770 --> 00:43:45,160
ship worm up here so<font color="#E5E5E5"> I went searching</font>

902
00:43:43,240 --> 00:43:47,560
out on the internet trying to find a

903
00:43:45,160 --> 00:43:49,390
<font color="#CCCCCC">picture and learned a little bit about</font>

904
00:43:47,560 --> 00:43:51,130
Toretto's or ship worms in the meantime

905
00:43:49,390 --> 00:43:53,920
these are incredibly destructive

906
00:43:51,130 --> 00:43:56,890
creatures there was all kinds of

907
00:43:53,920 --> 00:43:58,660
pictures of peers<font color="#E5E5E5"> that had collapsed</font>

908
00:43:56,890 --> 00:44:01,839
into bays and things like that as if

909
00:43:58,660 --> 00:44:04,810
that it actually sunk as a<font color="#E5E5E5"> result of the</font>

910
00:44:01,840 --> 00:44:07,270
work of ship worms which makes me wonder

911
00:44:04,810 --> 00:44:09,130
just how wise it was for<font color="#E5E5E5"> Microsoft to</font>

912
00:44:07,270 --> 00:44:11,890
want to call their their proposed

913
00:44:09,130 --> 00:44:14,110
solution ship worm after<font color="#E5E5E5"> something</font>

914
00:44:11,890 --> 00:44:17,140
that's a just apparently these things

915
00:44:14,110 --> 00:44:19,900
can can tunnel through wood up<font color="#E5E5E5"> to about</font>

916
00:44:17,140 --> 00:44:23,589
three feet<font color="#CCCCCC"> and they're</font><font color="#E5E5E5"> just amazingly</font>

917
00:44:19,900 --> 00:44:26,830
destructive so nonetheless as I said

918
00:44:23,590 --> 00:44:30,070
<font color="#E5E5E5">it's for tunneling v6 through one or</font>

919
00:44:26,830 --> 00:44:34,650
even<font color="#E5E5E5"> several Nats and it can</font><font color="#CCCCCC"> be either</font>

920
00:44:30,070 --> 00:44:37,900
stateless or using a TSP can be stateful

921
00:44:34,650 --> 00:44:42,190
it tunnel is over UDP using a reserve

922
00:44:37,900 --> 00:44:44,320
port of<font color="#E5E5E5"> 35 44 rather than then IP as i</font>

923
00:44:42,190 --> 00:44:46,390
already said the basic components<font color="#CCCCCC"> are</font>

924
00:44:44,320 --> 00:44:48,580
these there's a Teredo client which is

925
00:44:46,390 --> 00:44:54,640
this your dual stack snowed there's a

926
00:44:48,580 --> 00:44:57,190
Teredo server which provides<font color="#E5E5E5"> the</font>

927
00:44:54,640 --> 00:44:59,950
connectivity information for the tunnels

928
00:44:57,190 --> 00:45:02,080
<font color="#CCCCCC">and there's a Teredo relay which is a</font>

929
00:44:59,950 --> 00:45:04,390
dual stack router that understands

930
00:45:02,080 --> 00:45:06,819
<font color="#E5E5E5">torito there's a thing called a Teredo</font>

931
00:45:04,390 --> 00:45:10,720
bubble which is<font color="#E5E5E5"> actually just a just an</font>

932
00:45:06,820 --> 00:45:14,740
empty ipv6 packet that's<font color="#E5E5E5"> used</font><font color="#CCCCCC"> for</font>

933
00:45:10,720 --> 00:45:16,450
creating<font color="#E5E5E5"> state inside the NAT device and</font>

934
00:45:14,740 --> 00:45:18,430
there's a thing called the Teredo

935
00:45:16,450 --> 00:45:21,129
service prefix

936
00:45:18,430 --> 00:45:24,009
as a prefix originated by the Teredo

937
00:45:21,130 --> 00:45:25,780
server for creating the client ipv6

938
00:45:24,010 --> 00:45:28,780
address and we'll see how all that works

939
00:45:25,780 --> 00:45:33,190
together and I've been<font color="#E5E5E5"> trying this out</font>

940
00:45:28,780 --> 00:45:35,280
actually<font color="#CCCCCC"> Torito through a little</font>

941
00:45:33,190 --> 00:45:38,859
<font color="#E5E5E5">application that Microsoft put together</font>

942
00:45:35,280 --> 00:45:41,460
call three degrees which somebody at

943
00:45:38,859 --> 00:45:46,380
Microsoft just described that as

944
00:45:41,460 --> 00:45:50,589
internet messenger on on steroids it

945
00:45:46,380 --> 00:45:53,770
it's a cute little little application

946
00:45:50,589 --> 00:45:55,299
it's a v6 only<font color="#E5E5E5"> application but it uses</font>

947
00:45:53,770 --> 00:45:58,180
to raid 0 and that<font color="#E5E5E5"> was the main thing I</font>

948
00:45:55,300 --> 00:46:00,250
was interested in I've actually done

949
00:45:58,180 --> 00:46:02,649
some instant messaging using three

950
00:46:00,250 --> 00:46:05,559
degrees with somebody someone from<font color="#E5E5E5"> CA</font>

951
00:46:02,650 --> 00:46:07,660
net from my home office which<font color="#CCCCCC"> is behind</font>

952
00:46:05,559 --> 00:46:10,240
<font color="#E5E5E5">a NAT device and it works great goes</font>

953
00:46:07,660 --> 00:46:12,250
right through the net no problems<font color="#E5E5E5"> so</font>

954
00:46:10,240 --> 00:46:15,129
something to play around with if you

955
00:46:12,250 --> 00:46:18,190
want if<font color="#E5E5E5"> you have Windows XP here's how</font><font color="#CCCCCC"> I</font>

956
00:46:15,130 --> 00:46:19,930
rato works you can see here we've got a

957
00:46:18,190 --> 00:46:21,130
<font color="#CCCCCC">client and my apologies to</font><font color="#E5E5E5"> those of you</font>

958
00:46:19,930 --> 00:46:24,759
in<font color="#E5E5E5"> the back of the room this is a really</font>

959
00:46:21,130 --> 00:46:27,250
small type here we've got<font color="#E5E5E5"> a</font><font color="#CCCCCC"> client and</font>

960
00:46:24,760 --> 00:46:30,099
<font color="#E5E5E5">of course ipv4 Network here's ipv6</font>

961
00:46:27,250 --> 00:46:32,530
<font color="#CCCCCC">network out here</font><font color="#E5E5E5"> Teredo relay which is</font>

962
00:46:30,099 --> 00:46:34,960
just<font color="#E5E5E5"> a dual stack router connecting the</font>

963
00:46:32,530 --> 00:46:37,119
v4 and v6 network here's our Teredo

964
00:46:34,960 --> 00:46:39,790
server here's an that device with inside

965
00:46:37,119 --> 00:46:46,240
and outside addresses the client has an

966
00:46:39,790 --> 00:46:51,329
inside address of 1000 to the client has

967
00:46:46,240 --> 00:46:54,098
discovered the Teredo server and since a

968
00:46:51,329 --> 00:46:56,260
router solicitation to the server and

969
00:46:54,099 --> 00:46:58,690
you can see here's the source address<font color="#E5E5E5"> of</font>

970
00:46:56,260 --> 00:47:02,619
this client here's<font color="#E5E5E5"> the destination of</font>

971
00:46:58,690 --> 00:47:04,809
this terrain<font color="#CCCCCC"> o server its addresses 1 2</font>

972
00:47:02,619 --> 00:47:08,470
<font color="#CCCCCC">3 4 in this example and you'll notice</font>

973
00:47:04,809 --> 00:47:12,160
it's got a UDP port of 35 44 which is

974
00:47:08,470 --> 00:47:14,919
the<font color="#CCCCCC"> for Torito then that device does its</font>

975
00:47:12,160 --> 00:47:18,549
translation the source<font color="#E5E5E5"> is translated to</font>

976
00:47:14,920 --> 00:47:21,609
this outside address and a big part of

977
00:47:18,549 --> 00:47:24,759
this whole process here is so that<font color="#E5E5E5"> this</font>

978
00:47:21,609 --> 00:47:30,759
client can discover what it's outside

979
00:47:24,760 --> 00:47:31,869
<font color="#CCCCCC">address is when it</font><font color="#E5E5E5"> gets translated so so</font>

980
00:47:30,760 --> 00:47:33,839
then that the

981
00:47:31,869 --> 00:47:36,789
does its mapping the Teredo server

982
00:47:33,839 --> 00:47:39,670
receiving this router solicitation notes

983
00:47:36,789 --> 00:47:42,249
the source<font color="#E5E5E5"> address and port and the net</font>

984
00:47:39,670 --> 00:47:43,839
type it's important<font color="#E5E5E5"> to know with Torito</font>

985
00:47:42,249 --> 00:47:47,169
that it doesn't work with some early

986
00:47:43,839 --> 00:47:49,990
types of net<font color="#CCCCCC"> three degrees that</font><font color="#E5E5E5"> I was</font>

987
00:47:47,170 --> 00:47:51,819
<font color="#E5E5E5">just talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> I have talked to some</font>

988
00:47:49,990 --> 00:47:53,379
people who<font color="#E5E5E5"> said they've used it and it</font>

989
00:47:51,819 --> 00:47:55,630
wouldn't<font color="#CCCCCC"> work through the particular nap</font>

990
00:47:53,380 --> 00:47:58,029
that<font color="#E5E5E5"> they had so there's various nap</font>

991
00:47:55,630 --> 00:48:02,799
types the Teredo server make some note

992
00:47:58,029 --> 00:48:04,900
of what that<font color="#E5E5E5"> NAT type is the server then</font>

993
00:48:02,799 --> 00:48:07,480
sends a router advertisement back to the

994
00:48:04,900 --> 00:48:09,730
client that contains the service prefix

995
00:48:07,480 --> 00:48:10,809
and the origin indication you can see

996
00:48:09,730 --> 00:48:14,079
here's the source and destination

997
00:48:10,809 --> 00:48:16,299
address going back to<font color="#CCCCCC"> the client that's</font>

998
00:48:14,079 --> 00:48:21,160
<font color="#E5E5E5">in the packet but then it also includes</font>

999
00:48:16,299 --> 00:48:23,470
its<font color="#CCCCCC"> ipv v6 prefix and you'll</font><font color="#E5E5E5"> notice it</font>

1000
00:48:21,160 --> 00:48:26,399
has its ipv4 address if you<font color="#E5E5E5"> look closely</font>

1001
00:48:23,470 --> 00:48:29,439
here kind<font color="#E5E5E5"> of embedded into this prefix</font>

1002
00:48:26,400 --> 00:48:32,650
there's also an<font color="#E5E5E5"> Origin indication which</font>

1003
00:48:29,440 --> 00:48:35,049
is what is<font color="#E5E5E5"> telling the client what it's</font>

1004
00:48:32,650 --> 00:48:40,779
outside address is going to be which in

1005
00:48:35,049 --> 00:48:42,609
this case is 9001 the client makes note

1006
00:48:40,779 --> 00:48:44,950
of that and it's been a while since I've

1007
00:48:42,609 --> 00:48:47,739
read the<font color="#CCCCCC"> the Teredo specs so</font><font color="#E5E5E5"> I can't</font>

1008
00:48:44,950 --> 00:48:51,339
talk much about how it up us to<font color="#CCCCCC"> kates</font>

1009
00:48:47,739 --> 00:48:54,549
the origin indication but but it does

1010
00:48:51,339 --> 00:48:58,328
and this is shown here i took this right

1011
00:48:54,549 --> 00:49:00,130
<font color="#CCCCCC">out of the internet draft for Toronto so</font>

1012
00:48:58,329 --> 00:49:02,319
the origin indication is actually

1013
00:49:00,130 --> 00:49:05,140
included now in the client address where

1014
00:49:02,319 --> 00:49:08,079
it's using the server server prefix that

1015
00:49:05,140 --> 00:49:10,930
<font color="#E5E5E5">it's been given Plus this fuss dicated</font>

1016
00:49:08,079 --> 00:49:12,849
origin indication and then at that point

1017
00:49:10,930 --> 00:49:15,069
and by<font color="#E5E5E5"> the way something that's kind of</font>

1018
00:49:12,849 --> 00:49:16,779
left out<font color="#CCCCCC"> of here obviously is the the</font>

1019
00:49:15,069 --> 00:49:20,619
tunnel endpoints is also returned and

1020
00:49:16,779 --> 00:49:24,009
then it sets up the UDP tunnel to the

1021
00:49:20,619 --> 00:49:25,809
Teredo relay and as<font color="#CCCCCC"> I've said I've used</font>

1022
00:49:24,009 --> 00:49:31,059
this some and it actually works quite

1023
00:49:25,809 --> 00:49:33,700
nicely<font color="#CCCCCC"> TSP can also be used here in</font>

1024
00:49:31,059 --> 00:49:36,549
place of router solicitations and router

1025
00:49:33,700 --> 00:49:39,549
advertisements if you want a stateful

1026
00:49:36,549 --> 00:49:41,019
tunnel and it was particularly if you

1027
00:49:39,549 --> 00:49:45,339
want authentication and you should

1028
00:49:41,019 --> 00:49:45,759
always want authentication moving on<font color="#E5E5E5"> to</font>

1029
00:49:45,339 --> 00:49:47,950
a couple

1030
00:49:45,760 --> 00:49:52,710
things that I pretty much<font color="#E5E5E5"> just gleaned</font>

1031
00:49:47,950 --> 00:49:55,509
from various RFC's or internet-drafts

1032
00:49:52,710 --> 00:49:59,130
haven't seen these<font color="#CCCCCC"> in use much but I</font>

1033
00:49:55,510 --> 00:49:59,130
wanted<font color="#E5E5E5"> to at least talk about</font><font color="#CCCCCC"> them a bit</font>

1034
00:49:59,820 --> 00:50:06,190
the first is a thing called<font color="#E5E5E5"> ipv6 for</font>

1035
00:50:03,120 --> 00:50:10,120
this is something that's really intended

1036
00:50:06,190 --> 00:50:13,240
to<font color="#E5E5E5"> be used as kind of at a mid</font>

1037
00:50:10,120 --> 00:50:18,009
transition point where there's a lot of

1038
00:50:13,240 --> 00:50:25,169
ipv6 and still a lot of ipv4 and allows

1039
00:50:18,010 --> 00:50:29,830
packets to somewhat<font color="#E5E5E5"> commingle or coexist</font>

1040
00:50:25,170 --> 00:50:32,890
it identifies itself as an ipv6 for

1041
00:50:29,830 --> 00:50:36,730
packet by using the last bit in the

1042
00:50:32,890 --> 00:50:38,879
Datagram ID of an ipv4 header and you

1043
00:50:36,730 --> 00:50:42,340
can see here you've got<font color="#CCCCCC"> an ipv6 header</font>

1044
00:50:38,880 --> 00:50:46,090
encapsulated behind an ipv4 header so

1045
00:50:42,340 --> 00:50:50,950
it's a tunnel and this thing together is

1046
00:50:46,090 --> 00:50:53,770
<font color="#CCCCCC">called an ipv6 for packet when that last</font>

1047
00:50:50,950 --> 00:50:56,859
bit which<font color="#CCCCCC"> is otherwise unused is set to</font>

1048
00:50:53,770 --> 00:51:02,380
<font color="#CCCCCC">one its ipv6 for if</font><font color="#E5E5E5"> it's zero then it's</font>

1049
00:50:56,860 --> 00:51:04,990
just ipv4 there are in this ipv6 for

1050
00:51:02,380 --> 00:51:07,960
scheme three kinds of routers there's an

1051
00:51:04,990 --> 00:51:10,990
ipv6 only router there's an ipv4 only

1052
00:51:07,960 --> 00:51:13,360
router and then there are ipv6 for

1053
00:51:10,990 --> 00:51:16,270
routers<font color="#CCCCCC"> that actually understand this</font>

1054
00:51:13,360 --> 00:51:18,310
scheme and they're listed here how they

1055
00:51:16,270 --> 00:51:23,040
work you can see the ipv6 for routers

1056
00:51:18,310 --> 00:51:26,560
will process 64 packets as ipv6 it

1057
00:51:23,040 --> 00:51:29,050
<font color="#E5E5E5">processes ipv4 packets as ipv4 and then</font>

1058
00:51:26,560 --> 00:51:33,250
ipv6 only packets of course are handled

1059
00:51:29,050 --> 00:51:35,620
as ipv6 also again because the 64

1060
00:51:33,250 --> 00:51:40,870
routers know to look at this bit here

1061
00:51:35,620 --> 00:51:42,819
and and process accordingly ipv4 routers

1062
00:51:40,870 --> 00:51:44,710
are going to simply ignore this<font color="#CCCCCC"> bet all</font>

1063
00:51:42,820 --> 00:51:47,050
they see is the v4 header and as a

1064
00:51:44,710 --> 00:51:51,300
result they just treat an ipv6 for

1065
00:51:47,050 --> 00:51:54,670
packet as an ipv4 packet ipv6 routers

1066
00:51:51,300 --> 00:51:56,950
cannot process ipv6 for packets because

1067
00:51:54,670 --> 00:51:59,650
again they're going to see just this

1068
00:51:56,950 --> 00:52:01,990
ipv4 header so

1069
00:51:59,650 --> 00:52:03,910
as a result<font color="#CCCCCC"> there there needs to be some</font>

1070
00:52:01,990 --> 00:52:06,669
<font color="#E5E5E5">kind of translation that takes place and</font>

1071
00:52:03,910 --> 00:52:09,460
does it take<font color="#E5E5E5"> place in the ipv6 for</font>

1072
00:52:06,670 --> 00:52:13,840
routers before they get to v6 only

1073
00:52:09,460 --> 00:52:17,980
routers and with that there is a

1074
00:52:13,840 --> 00:52:21,820
proposed ipv6 extension header when this

1075
00:52:17,980 --> 00:52:25,000
translation takes place that an ipv6 for

1076
00:52:21,820 --> 00:52:27,370
router can take the ipv4 information and

1077
00:52:25,000 --> 00:52:29,680
put<font color="#E5E5E5"> it into this extension header to</font>

1078
00:52:27,370 --> 00:52:31,660
carry across the v6 network in case at

1079
00:52:29,680 --> 00:52:34,450
some other point a v6 router needs to

1080
00:52:31,660 --> 00:52:39,759
translate this<font color="#CCCCCC"> thing back into an ipv6</font>

1081
00:52:34,450 --> 00:52:43,180
for packet and then the<font color="#E5E5E5"> last of the</font>

1082
00:52:39,760 --> 00:52:45,790
tunneling mechanisms here is<font color="#CCCCCC"> dual stack</font>

1083
00:52:43,180 --> 00:52:47,859
transition mechanism or<font color="#E5E5E5"> D STM which is</font>

1084
00:52:45,790 --> 00:52:48,850
kind of unfortunately<font color="#E5E5E5"> named because it</font>

1085
00:52:47,860 --> 00:52:51,060
doesn't really have a<font color="#E5E5E5"> lot to do with</font>

1086
00:52:48,850 --> 00:52:54,640
dual stacking it's a tunnel mechanism

1087
00:52:51,060 --> 00:52:57,360
sometimes<font color="#CCCCCC"> called for over 6 and as that</font>

1088
00:52:54,640 --> 00:53:00,609
name might imply this is actually

1089
00:52:57,360 --> 00:53:03,010
something that may be<font color="#E5E5E5"> useful or you know</font>

1090
00:53:00,610 --> 00:53:05,230
some later generation of this concept

1091
00:53:03,010 --> 00:53:08,200
will be useful when we get to<font color="#E5E5E5"> the point</font>

1092
00:53:05,230 --> 00:53:11,860
where we<font color="#CCCCCC"> have mostly ipv6 but we still</font>

1093
00:53:08,200 --> 00:53:15,250
need or yeah mostly ipv6 but we<font color="#E5E5E5"> still</font>

1094
00:53:11,860 --> 00:53:17,680
need<font color="#CCCCCC"> to tunnel ipv4 occasionally across</font>

1095
00:53:15,250 --> 00:53:22,090
ipv6 so this is<font color="#CCCCCC"> actually for tunneling</font>

1096
00:53:17,680 --> 00:53:24,660
ipv4 over ipv6 there are three basic

1097
00:53:22,090 --> 00:53:28,360
components there's a tunnel endpoint

1098
00:53:24,660 --> 00:53:31,359
which is just a border router you know a

1099
00:53:28,360 --> 00:53:34,300
dual stack border router there's the DST

1100
00:53:31,360 --> 00:53:38,530
<font color="#CCCCCC">em clients which is the other end of the</font>

1101
00:53:34,300 --> 00:53:40,180
of the tunnel<font color="#E5E5E5"> and then there's a DST m</font>

1102
00:53:38,530 --> 00:53:44,560
address server<font color="#CCCCCC"> you know kind</font><font color="#E5E5E5"> of notice</font>

1103
00:53:40,180 --> 00:53:48,399
sort of a consistent feature of a lot<font color="#CCCCCC"> of</font>

1104
00:53:44,560 --> 00:53:49,900
these automatic tunneling processes or

1105
00:53:48,400 --> 00:53:51,820
mechanisms is that there's a server

1106
00:53:49,900 --> 00:53:53,950
involved somewhere along there and

1107
00:53:51,820 --> 00:53:55,990
that's true<font color="#CCCCCC"> for DST em also which</font>

1108
00:53:53,950 --> 00:54:03,100
allocates the<font color="#E5E5E5"> ipv4 addresses to</font><font color="#CCCCCC"> the</font>

1109
00:53:55,990 --> 00:54:06,009
clients it uses existing protocols to to

1110
00:54:03,100 --> 00:54:08,920
communicate using dhcpv6 or tunnel setup

1111
00:54:06,010 --> 00:54:13,090
protocol and the<font color="#E5E5E5"> server can optionally</font>

1112
00:54:08,920 --> 00:54:15,640
assign a port range for the ipv6 or

1113
00:54:13,090 --> 00:54:21,250
ipv4 addresses which is very much<font color="#E5E5E5"> an at</font>

1114
00:54:15,640 --> 00:54:24,609
<font color="#E5E5E5">like functionality and just a real quick</font>

1115
00:54:21,250 --> 00:54:27,700
simple view here of what's going<font color="#E5E5E5"> on</font>

1116
00:54:24,610 --> 00:54:30,280
we've got<font color="#E5E5E5"> this client on an ipv6 network</font>

1117
00:54:27,700 --> 00:54:33,370
with the DST<font color="#CCCCCC"> M server and a dual stack</font>

1118
00:54:30,280 --> 00:54:37,560
router which is the tunnel endpoint the

1119
00:54:33,370 --> 00:54:42,370
client needs to reach<font color="#E5E5E5"> an ipv4 address</font>

1120
00:54:37,560 --> 00:54:45,310
<font color="#E5E5E5">it's it's got gotten a DNS query back</font>

1121
00:54:42,370 --> 00:54:47,680
that shows a<font color="#E5E5E5"> V for a dress</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> needs to</font>

1122
00:54:45,310 --> 00:54:49,630
be reached so it goes to the DST<font color="#E5E5E5"> M</font>

1123
00:54:47,680 --> 00:54:54,149
server request tunnel information the

1124
00:54:49,630 --> 00:54:58,510
DST DST<font color="#E5E5E5"> M server then distributes the</font>

1125
00:54:54,150 --> 00:55:01,720
necessary v4 tunnel endpoint information

1126
00:54:58,510 --> 00:55:04,420
to both the router and to the client and

1127
00:55:01,720 --> 00:55:10,209
then the tunnel is set up and again this

1128
00:55:04,420 --> 00:55:12,610
is v4 and v6 so those<font color="#E5E5E5"> are the tunneling</font>

1129
00:55:10,210 --> 00:55:13,780
protocols or tunneling mechanisms kind

1130
00:55:12,610 --> 00:55:15,220
of the major ones<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think there's</font>

1131
00:55:13,780 --> 00:55:17,410
probably others out there that have been

1132
00:55:15,220 --> 00:55:19,230
proposed over the years but those are

1133
00:55:17,410 --> 00:55:22,230
the ones that you're likely to encounter

1134
00:55:19,230 --> 00:55:24,340
I'd like to<font color="#E5E5E5"> talk just really briefly</font>

1135
00:55:22,230 --> 00:55:26,800
about translators and I may go through

1136
00:55:24,340 --> 00:55:30,160
<font color="#E5E5E5">this part kind of quickly both because</font>

1137
00:55:26,800 --> 00:55:31,900
because for a lot of these translators I

1138
00:55:30,160 --> 00:55:33,399
know a little<font color="#E5E5E5"> bit less than</font><font color="#CCCCCC"> I do about</font>

1139
00:55:31,900 --> 00:55:35,350
tunneling protocol<font color="#E5E5E5"> its kind of the</font>

1140
00:55:33,400 --> 00:55:38,050
further you<font color="#E5E5E5"> move away from from routing</font>

1141
00:55:35,350 --> 00:55:40,089
the less I know but I want to<font color="#E5E5E5"> at least</font>

1142
00:55:38,050 --> 00:55:43,300
cover them because but then I want<font color="#CCCCCC"> to</font>

1143
00:55:40,090 --> 00:55:46,320
<font color="#E5E5E5">get to the final issues on dns and and</font>

1144
00:55:43,300 --> 00:55:49,300
some other things<font color="#E5E5E5"> there but</font><font color="#CCCCCC"> there's</font>

1145
00:55:46,320 --> 00:55:51,850
three different types of translators

1146
00:55:49,300 --> 00:55:53,440
that are out there<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are proposed</font>

1147
00:55:51,850 --> 00:55:55,089
right now there's network level

1148
00:55:53,440 --> 00:55:58,420
translators these are the ones that are

1149
00:55:55,090 --> 00:56:01,660
mostly in use right now which includes

1150
00:55:58,420 --> 00:56:03,820
sit includes NAT PT and includes a thing

1151
00:56:01,660 --> 00:56:07,120
called bump in the<font color="#E5E5E5"> stack there's</font>

1152
00:56:03,820 --> 00:56:08,860
transport level translators<font color="#E5E5E5"> GRT is the</font>

1153
00:56:07,120 --> 00:56:11,470
example<font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to show and then</font>

1154
00:56:08,860 --> 00:56:15,370
application level translators<font color="#CCCCCC"> a bump in</font>

1155
00:56:11,470 --> 00:56:20,709
<font color="#E5E5E5">the API</font><font color="#CCCCCC"> Sox 64 and just more generically</font>

1156
00:56:15,370 --> 00:56:24,549
application layer gateways sit is an

1157
00:56:20,710 --> 00:56:26,210
algorithm as much as it is a natural

1158
00:56:24,550 --> 00:56:29,089
device

1159
00:56:26,210 --> 00:56:32,990
that basically just translates between

1160
00:56:29,089 --> 00:56:38,029
ipv4 and ipv6 headers it also<font color="#E5E5E5"> translates</font>

1161
00:56:32,990 --> 00:56:40,759
ICMP messages and does things like you

1162
00:56:38,030 --> 00:56:43,070
<font color="#CCCCCC">know ads the ICMP pseudo header checksum</font>

1163
00:56:40,760 --> 00:56:45,470
and<font color="#E5E5E5"> all does all</font><font color="#CCCCCC"> of those kinds of</font>

1164
00:56:43,070 --> 00:56:47,300
things internally with ICMP that's

1165
00:56:45,470 --> 00:56:51,439
necessary to do when translating between

1166
00:56:47,300 --> 00:56:55,750
the two it also fragments ipv4 messages

1167
00:56:51,440 --> 00:57:00,380
to fit the ipv6 into you when necessary

1168
00:56:55,750 --> 00:57:04,040
<font color="#E5E5E5">most of you know that with ipv6 one of</font>

1169
00:57:00,380 --> 00:57:06,230
the major differences from ipv4 is that

1170
00:57:04,040 --> 00:57:11,240
router is no longer do fragmentation in

1171
00:57:06,230 --> 00:57:15,680
ipv6 it's up to the the client<font color="#E5E5E5"> or the</font>

1172
00:57:11,240 --> 00:57:19,330
end user's device to either test em to

1173
00:57:15,680 --> 00:57:22,098
use do path MTU discovery and then

1174
00:57:19,330 --> 00:57:24,859
fragment packets accordingly or always

1175
00:57:22,099 --> 00:57:29,530
<font color="#E5E5E5">send packets less than the maximum</font>

1176
00:57:24,859 --> 00:57:31,848
transmission unit that's allowed on ipv6

1177
00:57:29,530 --> 00:57:35,780
there's two kinds of addresses there's

1178
00:57:31,849 --> 00:57:39,680
an ipv4 translated address which is<font color="#E5E5E5"> used</font>

1179
00:57:35,780 --> 00:57:42,430
to<font color="#CCCCCC"> refer to ipv6 enables nodes and then</font>

1180
00:57:39,680 --> 00:57:46,129
there's an ipv4 mapped address that that

1181
00:57:42,430 --> 00:57:48,589
refers to ipv4 only nodes they look real

1182
00:57:46,130 --> 00:57:52,730
similar<font color="#E5E5E5"> but you can see the the syntax</font>

1183
00:57:48,589 --> 00:57:55,549
here there's a 96 bit prefix shown here

1184
00:57:52,730 --> 00:57:59,390
for ipv4 translated addresses then you

1185
00:57:55,550 --> 00:58:02,150
add a 32-bit ipv4 address to that for

1186
00:57:59,390 --> 00:58:06,560
ipv4 mapped addresses there's also a 96

1187
00:58:02,150 --> 00:58:09,080
bit prefix that's<font color="#E5E5E5"> different from the</font>

1188
00:58:06,560 --> 00:58:15,470
translated address that<font color="#CCCCCC"> you also add a</font>

1189
00:58:09,080 --> 00:58:20,089
32-bit v4 address too and as it says

1190
00:58:15,470 --> 00:58:23,959
<font color="#CCCCCC">here sit requires ipv6 hosts to actually</font>

1191
00:58:20,089 --> 00:58:26,810
acquire an ipv4 address here's how this

1192
00:58:23,960 --> 00:58:29,359
<font color="#CCCCCC">works here we've got a CID device we've</font>

1193
00:58:26,810 --> 00:58:32,330
got an ipv4<font color="#CCCCCC"> network an ipv6 network and</font>

1194
00:58:29,359 --> 00:58:35,779
then we've got an ipv6 hosts that you'll

1195
00:58:32,330 --> 00:58:39,119
<font color="#E5E5E5">notice has both an ipv4 address in it</font>

1196
00:58:35,780 --> 00:58:45,359
and also<font color="#E5E5E5"> a v6 address and we've got a V</font>

1197
00:58:39,119 --> 00:58:48,059
or only<font color="#E5E5E5"> host up here the host sends a</font>

1198
00:58:45,359 --> 00:58:52,019
packet here's<font color="#E5E5E5"> the source address you'll</font>

1199
00:58:48,059 --> 00:58:56,849
notice<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> the this source address</font>

1200
00:58:52,019 --> 00:59:00,240
refers to this<font color="#E5E5E5"> v4 sorry v6 only host the</font>

1201
00:58:56,849 --> 00:59:03,420
destination address uses the embedded

1202
00:59:00,240 --> 00:59:05,459
prefix<font color="#CCCCCC"> that refers to the v4 only host</font>

1203
00:59:03,420 --> 00:59:07,529
and you can see we've got source and

1204
00:59:05,460 --> 00:59:11,809
destination V for addresses embedded in

1205
00:59:07,529 --> 00:59:15,089
that the sit device here simply removes

1206
00:59:11,809 --> 00:59:18,839
these prefixes these v6 specific

1207
00:59:15,089 --> 00:59:22,259
prefixes and keeps the embedded v4

1208
00:59:18,839 --> 00:59:24,420
prefixes to communicate out to the v4

1209
00:59:22,259 --> 00:59:26,279
only host and then the same process

1210
00:59:24,420 --> 00:59:29,130
happens the other way going going<font color="#E5E5E5"> back</font>

1211
00:59:26,279 --> 00:59:31,950
and<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is stateless some other things</font>

1212
00:59:29,130 --> 00:59:34,319
here that are shown sit also does

1213
00:59:31,950 --> 00:59:36,859
translation for<font color="#E5E5E5"> the class of the traffic</font>

1214
00:59:34,319 --> 00:59:41,579
class<font color="#CCCCCC"> field to the</font><font color="#E5E5E5"> type of service field</font>

1215
00:59:36,859 --> 00:59:45,328
traffic class in in v6 to type of

1216
00:59:41,579 --> 00:59:50,809
service in v4 translates the or adjusts

1217
00:59:45,329 --> 00:59:53,190
the payload length fields accordingly

1218
00:59:50,809 --> 00:59:55,230
translates<font color="#E5E5E5"> a protocol number</font><font color="#CCCCCC"> to next</font>

1219
00:59:53,190 --> 00:59:58,380
header numbers protocol number used in

1220
00:59:55,230 --> 01:00:02,309
v4 next header number is used in v6<font color="#E5E5E5"> and</font>

1221
00:59:58,380 --> 01:00:03,960
translates the TTL to hop limit tt-there

1222
01:00:02,309 --> 01:00:06,960
<font color="#CCCCCC">Bay that which</font><font color="#E5E5E5"> actually is the same</font>

1223
01:00:03,960 --> 01:00:11,099
field it's just renamed in v6 v6 used as

1224
01:00:06,960 --> 01:00:14,009
a hop limit field v4 uses a TTL but it's

1225
01:00:11,099 --> 01:00:17,130
functionally the same thing but all

1226
01:00:14,009 --> 01:00:18,960
<font color="#CCCCCC">those things are translated then the</font>

1227
01:00:17,130 --> 01:00:24,019
translator that's that's probably in

1228
01:00:18,960 --> 01:00:24,019
most wide use right now is is<font color="#E5E5E5"> NAT PT</font>

1229
01:00:24,799 --> 01:00:31,349
which unlike sit which is stateless that

1230
01:00:28,559 --> 01:00:34,710
PT is stateful although it still uses

1231
01:00:31,349 --> 01:00:38,400
<font color="#E5E5E5">the sit algorithm for doing the actual</font>

1232
01:00:34,710 --> 01:00:42,349
header translations and such stateful<font color="#E5E5E5"> in</font>

1233
01:00:38,400 --> 01:00:44,999
terms of tracking supported sessions and

1234
01:00:42,349 --> 01:00:46,980
because it is stateful inbound and

1235
01:00:44,999 --> 01:00:49,410
outbound session packets need to pass

1236
01:00:46,980 --> 01:00:50,640
through<font color="#E5E5E5"> the same that device because</font>

1237
01:00:49,410 --> 01:00:51,990
that device is the<font color="#E5E5E5"> one that has</font><font color="#CCCCCC"> to</font>

1238
01:00:50,640 --> 01:00:55,650
stateful mapping

1239
01:00:51,990 --> 01:00:59,520
this is probably the the biggest

1240
01:00:55,650 --> 01:01:04,320
drawback to NAT because all of your

1241
01:00:59,520 --> 01:01:06,119
traffic has to be has<font color="#CCCCCC"> to has to pass</font>

1242
01:01:04,320 --> 01:01:08,880
through the same device in both

1243
01:01:06,119 --> 01:01:11,340
directions a couple of variations

1244
01:01:08,880 --> 01:01:13,110
there's basic<font color="#E5E5E5"> NAT PT which this provides</font>

1245
01:01:11,340 --> 01:01:17,100
the translation of<font color="#E5E5E5"> the v6 and v4</font>

1246
01:01:13,110 --> 01:01:19,530
addresses using a pool of v4 addresses

1247
01:01:17,100 --> 01:01:24,509
and there's I can never pronounce it

1248
01:01:19,530 --> 01:01:27,990
well but<font color="#E5E5E5"> napt napped PT which also does</font>

1249
01:01:24,510 --> 01:01:30,030
does<font color="#E5E5E5"> port translation so you can</font>

1250
01:01:27,990 --> 01:01:32,910
manipulate the ipv6 port number so that

1251
01:01:30,030 --> 01:01:37,580
multiple as it says v6 sources can share

1252
01:01:32,910 --> 01:01:41,750
a single ipv6 address that PT also

1253
01:01:37,580 --> 01:01:44,270
specifies<font color="#CCCCCC"> dns application level gateways</font>

1254
01:01:41,750 --> 01:01:47,070
but there<font color="#E5E5E5"> are some problems there and</font>

1255
01:01:44,270 --> 01:01:50,880
given<font color="#E5E5E5"> our short time</font><font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to go</font>

1256
01:01:47,070 --> 01:01:53,220
into a lot<font color="#CCCCCC"> of that but it most of</font><font color="#E5E5E5"> the</font>

1257
01:01:50,880 --> 01:01:55,080
<font color="#E5E5E5">problems concerned when DNS does not</font>

1258
01:01:53,220 --> 01:01:57,419
actually pass through the NAT device if

1259
01:01:55,080 --> 01:02:01,109
you have a<font color="#E5E5E5"> DNS device on the same side</font>

1260
01:01:57,420 --> 01:02:03,720
as your v6 device there can be some

1261
01:02:01,109 --> 01:02:05,430
possible confusion and as I've got down

1262
01:02:03,720 --> 01:02:08,569
<font color="#E5E5E5">here down at the very bottom there's a</font>

1263
01:02:05,430 --> 01:02:13,169
couple<font color="#CCCCCC"> of internet-drafts the first one</font>

1264
01:02:08,570 --> 01:02:15,780
talks<font color="#CCCCCC"> about the problems dns related</font>

1265
01:02:13,170 --> 01:02:19,260
problems with<font color="#CCCCCC"> nat PT and the second</font>

1266
01:02:15,780 --> 01:02:21,180
draft down here discusses some proposed

1267
01:02:19,260 --> 01:02:23,820
solutions to the problems there so if

1268
01:02:21,180 --> 01:02:26,850
you want<font color="#E5E5E5"> to know a bit more</font><font color="#CCCCCC"> about dns</font>

1269
01:02:23,820 --> 01:02:29,609
problems with nat BTW i would i would

1270
01:02:26,850 --> 01:02:32,100
point you to those two drafts here's

1271
01:02:29,609 --> 01:02:34,020
just the basics how this of how NAT PT

1272
01:02:32,100 --> 01:02:37,049
works<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> most of is pretty</font>

1273
01:02:34,020 --> 01:02:40,230
predictable you can see we've got<font color="#E5E5E5"> a v6</font>

1274
01:02:37,050 --> 01:02:43,380
network and a v4<font color="#E5E5E5"> network this NAT PT</font>

1275
01:02:40,230 --> 01:02:46,940
device has an ipv6 prefix shown here and

1276
01:02:43,380 --> 01:02:50,010
it also has an ipv4 pool that it assigns

1277
01:02:46,940 --> 01:02:53,100
ipv4 addresses out of down here we've

1278
01:02:50,010 --> 01:02:55,050
got a v6 host that wants to talk<font color="#CCCCCC"> to a v4</font>

1279
01:02:53,100 --> 01:02:57,259
host the<font color="#E5E5E5"> first thing that's going to</font>

1280
01:02:55,050 --> 01:02:59,970
<font color="#E5E5E5">happen is it's going to send a DNS query</font>

1281
01:02:57,260 --> 01:03:05,490
wanting to know what's the address of v4

1282
01:02:59,970 --> 01:03:09,600
host for net org dns

1283
01:03:05,490 --> 01:03:13,049
responds with an a record and this ipv4

1284
01:03:09,600 --> 01:03:15,690
address<font color="#CCCCCC"> NAT PT takes</font><font color="#E5E5E5"> that a record and</font>

1285
01:03:13,050 --> 01:03:19,020
translates it into a quad a record<font color="#CCCCCC"> a v6</font>

1286
01:03:15,690 --> 01:03:22,760
quad a record with a v6 address

1287
01:03:19,020 --> 01:03:26,940
associated with<font color="#E5E5E5"> it and notice that this</font>

1288
01:03:22,760 --> 01:03:32,490
ipv4 address is now embedded in this v6

1289
01:03:26,940 --> 01:03:34,640
address then to actually<font color="#CCCCCC"> communicate now</font>

1290
01:03:32,490 --> 01:03:38,729
that we've got the the DNS resolution

1291
01:03:34,640 --> 01:03:41,970
this host sins a packet<font color="#E5E5E5"> out a v6 packet</font>

1292
01:03:38,730 --> 01:03:47,010
has its v6 address as the<font color="#E5E5E5"> source and</font>

1293
01:03:41,970 --> 01:03:53,368
that<font color="#E5E5E5"> translated destination address with</font>

1294
01:03:47,010 --> 01:03:55,920
the embedded v4 in it in<font color="#E5E5E5"> the net device</font>

1295
01:03:53,369 --> 01:03:59,700
we do a mapping on the inside we've got

1296
01:03:55,920 --> 01:04:02,760
<font color="#E5E5E5">this source address and on the</font><font color="#CCCCCC"> outside</font>

1297
01:03:59,700 --> 01:04:06,540
we've assigned it out of this pool up

1298
01:04:02,760 --> 01:04:10,050
here an ipv4 address and of course<font color="#CCCCCC"> then</font>

1299
01:04:06,540 --> 01:04:12,840
it just<font color="#E5E5E5"> goes ipv4 normally the v4 host</font>

1300
01:04:10,050 --> 01:04:15,840
responds using ipv4 and then the NAT

1301
01:04:12,840 --> 01:04:20,600
device consultants table and replaces

1302
01:04:15,840 --> 01:04:24,900
the numbers accordingly to get back to

1303
01:04:20,600 --> 01:04:26,790
v6 so very much<font color="#E5E5E5"> a net kind of</font>

1304
01:04:24,900 --> 01:04:31,530
functionality there except you're also

1305
01:04:26,790 --> 01:04:34,529
translating v42 v6 using set processes<font color="#E5E5E5"> a</font>

1306
01:04:31,530 --> 01:04:36,930
few other translators here there's a

1307
01:04:34,530 --> 01:04:38,609
thing called bump in<font color="#CCCCCC"> the stack where the</font>

1308
01:04:36,930 --> 01:04:40,950
translator actually resides in the host

1309
01:04:38,609 --> 01:04:42,540
I haven't<font color="#E5E5E5"> seen this work so so there's</font>

1310
01:04:40,950 --> 01:04:45,810
nothing<font color="#E5E5E5"> much here except just an example</font>

1311
01:04:42,540 --> 01:04:48,390
taken from the internet draft on this

1312
01:04:45,810 --> 01:04:51,990
and it allows ipv6 applications to run

1313
01:04:48,390 --> 01:04:54,660
on an ipv6 ipv4 applications to run on

1314
01:04:51,990 --> 01:04:57,750
ipv6 hosts there's<font color="#E5E5E5"> three components</font>

1315
01:04:54,660 --> 01:05:00,868
shown in this stack here of course

1316
01:04:57,750 --> 01:05:03,150
<font color="#CCCCCC">there's the ipv6 component then there's</font>

1317
01:05:00,869 --> 01:05:06,000
a translator above that that uses again

1318
01:05:03,150 --> 01:05:08,630
<font color="#E5E5E5">sit algorithms to translate between v4</font>

1319
01:05:06,000 --> 01:05:12,600
and v6 there's also an address mapper

1320
01:05:08,630 --> 01:05:15,150
that maintains the ipv4 address pool and

1321
01:05:12,600 --> 01:05:17,220
and maps v6 addresses to v4 addresses

1322
01:05:15,150 --> 01:05:19,200
and then there's the extension<font color="#E5E5E5"> name</font>

1323
01:05:17,220 --> 01:05:23,339
resolver that takes care<font color="#E5E5E5"> of the DNS</font>

1324
01:05:19,200 --> 01:05:28,740
queries<font color="#E5E5E5"> and converts</font><font color="#CCCCCC"> quad a records to a</font>

1325
01:05:23,340 --> 01:05:31,380
records<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> such moving up to a</font>

1326
01:05:28,740 --> 01:05:33,229
trance transport layer there's a thing

1327
01:05:31,380 --> 01:05:36,570
called a transport real a translator

1328
01:05:33,230 --> 01:05:38,370
this is based you can<font color="#E5E5E5"> think of this the</font>

1329
01:05:36,570 --> 01:05:42,840
operation<font color="#E5E5E5"> is really similar to</font><font color="#CCCCCC"> a proxy</font>

1330
01:05:38,370 --> 01:05:46,710
firewall by going to the TCP or UDP

1331
01:05:42,840 --> 01:05:50,760
layers it avoids any kind<font color="#E5E5E5"> of translation</font>

1332
01:05:46,710 --> 01:05:52,650
of the network level packets themselves

1333
01:05:50,760 --> 01:05:58,200
because it actually terminates the

1334
01:05:52,650 --> 01:05:59,700
sessions on the trt box as it shows here

1335
01:05:58,200 --> 01:06:02,279
there's two connections there's a

1336
01:05:59,700 --> 01:06:04,560
there's the initiation to the trt itself

1337
01:06:02,280 --> 01:06:08,310
and then the trt sets up another session

1338
01:06:04,560 --> 01:06:11,100
to the end node it also<font color="#E5E5E5"> requires some</font>

1339
01:06:08,310 --> 01:06:12,870
special<font color="#CCCCCC"> DNS functionality it has no dns</font>

1340
01:06:11,100 --> 01:06:15,839
translation itself so there's an

1341
01:06:12,870 --> 01:06:17,640
assumption with trt that<font color="#E5E5E5"> dns has been</font>

1342
01:06:15,840 --> 01:06:20,580
has been<font color="#E5E5E5"> translated through some other</font>

1343
01:06:17,640 --> 01:06:23,790
means here's an example of how this

1344
01:06:20,580 --> 01:06:27,060
works down here again we've got this v6

1345
01:06:23,790 --> 01:06:29,850
host with some v6 address on a v6

1346
01:06:27,060 --> 01:06:32,160
network of course we've got trt that has

1347
01:06:29,850 --> 01:06:35,880
this dummy prefix and it also has an

1348
01:06:32,160 --> 01:06:42,240
ipv4 address out here is a v4 host on a

1349
01:06:35,880 --> 01:06:45,660
v4<font color="#E5E5E5"> network the v6 host has has done a</font>

1350
01:06:42,240 --> 01:06:50,279
query to this so-called special<font color="#E5E5E5"> DNS for</font>

1351
01:06:45,660 --> 01:06:52,200
for v4 but the special<font color="#E5E5E5"> DNS rather than</font>

1352
01:06:50,280 --> 01:06:55,620
returning an a record returns a quad a

1353
01:06:52,200 --> 01:07:00,830
record that has the address the v4

1354
01:06:55,620 --> 01:07:04,170
address of that host embedded in the v6

1355
01:07:00,830 --> 01:07:07,440
so now we just<font color="#E5E5E5"> send we start in this</font>

1356
01:07:04,170 --> 01:07:09,450
case a TCP session to the trt with the

1357
01:07:07,440 --> 01:07:11,220
destination<font color="#E5E5E5"> of this address that was</font>

1358
01:07:09,450 --> 01:07:14,220
returned wanting<font color="#E5E5E5"> to go out to this host</font>

1359
01:07:11,220 --> 01:07:19,470
the trt though actually terminates that

1360
01:07:14,220 --> 01:07:22,470
TCP session itself as shown<font color="#E5E5E5"> here so the</font>

1361
01:07:19,470 --> 01:07:25,230
TCP session goes no further than the trt

1362
01:07:22,470 --> 01:07:26,230
which then establishes a separate TCP

1363
01:07:25,230 --> 01:07:30,250
session out to the

1364
01:07:26,230 --> 01:07:32,320
host using v4 so you can kind of<font color="#E5E5E5"> see</font>

1365
01:07:30,250 --> 01:07:35,200
where that's that proxy firewall kind of

1366
01:07:32,320 --> 01:07:40,500
functionality there's no actual packets

1367
01:07:35,200 --> 01:07:45,609
that<font color="#CCCCCC"> go directly from the v6 host to v4</font>

1368
01:07:40,500 --> 01:07:48,369
it's all terminated at the trt then

1369
01:07:45,609 --> 01:07:51,130
there's bump in the API which as it says

1370
01:07:48,369 --> 01:07:54,540
here allows dual stack hosts dual stack

1371
01:07:51,130 --> 01:07:58,300
ipv6 hosts<font color="#E5E5E5"> to use ipv4 applications</font>

1372
01:07:54,540 --> 01:08:00,670
something similar to bump in the bump in

1373
01:07:58,300 --> 01:08:04,109
<font color="#CCCCCC">the stack that</font><font color="#E5E5E5"> we saw earlier but the</font>

1374
01:08:00,670 --> 01:08:07,180
<font color="#E5E5E5">translation is between v4 and v6</font><font color="#CCCCCC"> ap is</font>

1375
01:08:04,109 --> 01:08:11,290
the<font color="#E5E5E5"> API translator resides between the</font>

1376
01:08:07,180 --> 01:08:14,470
socket API module and the v4 v6 tcp/ip

1377
01:08:11,290 --> 01:08:17,259
modules modules and there's no header

1378
01:08:14,470 --> 01:08:18,849
translation required and actually I have

1379
01:08:17,259 --> 01:08:20,920
no<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> why i put this last thing in</font>

1380
01:08:18,850 --> 01:08:23,020
here because sit it does header

1381
01:08:20,920 --> 01:08:24,700
translation and<font color="#E5E5E5"> then I've just said no</font>

1382
01:08:23,020 --> 01:08:26,140
header translation required it's been<font color="#E5E5E5"> a</font>

1383
01:08:24,700 --> 01:08:28,410
<font color="#E5E5E5">while since I've read</font><font color="#CCCCCC"> that document and</font>

1384
01:08:26,140 --> 01:08:32,380
I've forgotten why I put<font color="#CCCCCC"> that in there</font>

1385
01:08:28,410 --> 01:08:34,899
but here's here's an example of bump in

1386
01:08:32,380 --> 01:08:37,870
the<font color="#E5E5E5"> API and you can see up here you've</font>

1387
01:08:34,899 --> 01:08:40,988
got v4 applications here's<font color="#E5E5E5"> the socket</font>

1388
01:08:37,870 --> 01:08:44,410
API and<font color="#E5E5E5"> down here all together is the</font>

1389
01:08:40,988 --> 01:08:47,019
API translator that<font color="#E5E5E5"> has three Porsche</font>

1390
01:08:44,410 --> 01:08:51,519
parts to it one part is the name

1391
01:08:47,020 --> 01:08:54,700
resolver that that switches between<font color="#E5E5E5"> a</font>

1392
01:08:51,520 --> 01:08:58,120
and quad a records<font color="#CCCCCC"> for the DNS calls</font>

1393
01:08:54,700 --> 01:09:00,849
there's an address mapper that uses an

1394
01:08:58,120 --> 01:09:02,759
internal pool of unassigned IP addresses

1395
01:09:00,850 --> 01:09:06,400
specifically in<font color="#E5E5E5"> this range shown here</font>

1396
01:09:02,759 --> 01:09:09,279
<font color="#E5E5E5">that maps to ipv6 and then a function</font>

1397
01:09:06,399 --> 01:09:12,068
mapper that actually does the the socket

1398
01:09:09,279 --> 01:09:17,500
API function translation between v4 and

1399
01:09:12,069 --> 01:09:22,739
v6 then there's Sox 64 which is based on

1400
01:09:17,500 --> 01:09:22,738
as you know Sox is a pretty well used

1401
01:09:22,890 --> 01:09:29,069
security protocol it uses<font color="#CCCCCC"> the existing</font>

1402
01:09:26,259 --> 01:09:34,270
Sox version<font color="#CCCCCC"> 5 protocol described as</font>

1403
01:09:29,069 --> 01:09:36,640
shown here in RFC 1928 originally

1404
01:09:34,270 --> 01:09:38,380
designed for firewalls there's two basic

1405
01:09:36,640 --> 01:09:38,990
components and again this is<font color="#E5E5E5"> something</font>

1406
01:09:38,380 --> 01:09:41,390
I'm kind<font color="#CCCCCC"> of</font>

1407
01:09:38,990 --> 01:09:42,889
pulling out of the<font color="#CCCCCC"> internet drafts I</font>

1408
01:09:41,390 --> 01:09:45,680
haven't<font color="#E5E5E5"> played around with</font><font color="#CCCCCC"> socks</font><font color="#E5E5E5"> 64</font>

1409
01:09:42,890 --> 01:09:47,780
myself so can't speak real authoritative

1410
01:09:45,680 --> 01:09:49,760
<font color="#CCCCCC">ly about it but there's two basic</font>

1411
01:09:47,779 --> 01:09:53,300
components there's a gate<font color="#E5E5E5"> a gateway</font>

1412
01:09:49,760 --> 01:09:58,070
which is a sock server and it terminates

1413
01:09:53,300 --> 01:09:59,870
the v4 and v6 connections and actually

1414
01:09:58,070 --> 01:10:01,519
does a real a kind<font color="#E5E5E5"> of like the the trt</font>

1415
01:09:59,870 --> 01:10:03,740
does except now we're moving<font color="#CCCCCC"> up to the</font>

1416
01:10:01,520 --> 01:10:05,840
application layer and then there's the

1417
01:10:03,740 --> 01:10:08,330
the socks lib itself the socks library

1418
01:10:05,840 --> 01:10:10,570
that installs on a client between the

1419
01:10:08,330 --> 01:10:13,850
application layer and the socket layer

1420
01:10:10,570 --> 01:10:19,460
and again it also maintains a mapping

1421
01:10:13,850 --> 01:10:22,780
table using these these unassigned IP

1422
01:10:19,460 --> 01:10:25,250
addresses<font color="#E5E5E5"> and the logical host names and</font>

1423
01:10:22,780 --> 01:10:27,740
here's the sort<font color="#E5E5E5"> of an example</font><font color="#CCCCCC"> of how</font>

1424
01:10:25,250 --> 01:10:29,630
this<font color="#E5E5E5"> works on the client with the socks</font>

1425
01:10:27,740 --> 01:10:32,599
lib installed you can see<font color="#E5E5E5"> that is we've</font>

1426
01:10:29,630 --> 01:10:35,930
got a API in here between the

1427
01:10:32,600 --> 01:10:38,540
application layer and the socket<font color="#CCCCCC"> DNS and</font>

1428
01:10:35,930 --> 01:10:40,760
so forth we're talking<font color="#E5E5E5"> v6 here and we</font>

1429
01:10:38,540 --> 01:10:43,280
have<font color="#E5E5E5"> this</font><font color="#CCCCCC"> socks ified connection to the</font>

1430
01:10:40,760 --> 01:10:45,350
Gateway both data and control

1431
01:10:43,280 --> 01:10:47,599
information is<font color="#CCCCCC"> going through here you</font>

1432
01:10:45,350 --> 01:10:51,290
can see this this gateway goes up

1433
01:10:47,600 --> 01:10:52,910
through ipv6 does the necessary

1434
01:10:51,290 --> 01:10:56,000
application translation goes back

1435
01:10:52,910 --> 01:11:00,519
through ipv4 and then out to some ipv4

1436
01:10:56,000 --> 01:11:02,720
destination out here and that's<font color="#CCCCCC"> Sox 64</font>

1437
01:11:00,520 --> 01:11:05,810
then<font color="#CCCCCC"> just soon</font><font color="#E5E5E5"> Eric Lee there are</font>

1438
01:11:02,720 --> 01:11:06,800
application layer gateways I had some

1439
01:11:05,810 --> 01:11:09,620
mentioned earlier when I was talking

1440
01:11:06,800 --> 01:11:12,380
about<font color="#E5E5E5"> NAT PT talking about DNS</font>

1441
01:11:09,620 --> 01:11:15,309
application layer gateways these are as

1442
01:11:12,380 --> 01:11:19,580
the name implies application-specific

1443
01:11:15,310 --> 01:11:22,420
translators needed usually when an

1444
01:11:19,580 --> 01:11:25,280
application layer contains an IP address

1445
01:11:22,420 --> 01:11:30,530
<font color="#E5E5E5">that needs to be translated in some way</font>

1446
01:11:25,280 --> 01:11:32,450
and<font color="#CCCCCC"> then moving from translators were</font>

1447
01:11:30,530 --> 01:11:37,160
actually I'm actually better on time

1448
01:11:32,450 --> 01:11:39,440
than I thought I would<font color="#E5E5E5"> be any questions</font>

1449
01:11:37,160 --> 01:11:40,760
<font color="#E5E5E5">so far I sort of been just going on and</font>

1450
01:11:39,440 --> 01:11:45,150
on here and everybody's been really

1451
01:11:40,760 --> 01:11:47,130
quiet<font color="#CCCCCC"> ok</font>

1452
01:11:45,150 --> 01:11:48,540
the big transition issue that I want to

1453
01:11:47,130 --> 01:11:53,090
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about here kind of getting away</font>

1454
01:11:48,540 --> 01:11:56,159
from trend transition tools is DNS

1455
01:11:53,090 --> 01:11:58,650
particular issues with DNS the big issue

1456
01:11:56,159 --> 01:12:02,580
<font color="#CCCCCC">is namespace fragmentation you know if</font>

1457
01:11:58,650 --> 01:12:06,239
you have if you have<font color="#CCCCCC"> an ipv4 dns and you</font>

1458
01:12:02,580 --> 01:12:07,620
have an ipv6<font color="#CCCCCC"> dns you don't want to have</font>

1459
01:12:06,239 --> 01:12:10,409
any kind of fragmentation of the

1460
01:12:07,620 --> 01:12:14,000
namespace where you can't resolve to

1461
01:12:10,409 --> 01:12:16,920
either or but how does an ipv4 host

1462
01:12:14,000 --> 01:12:20,070
resolve a name that<font color="#E5E5E5"> belongs</font><font color="#CCCCCC"> to it</font>

1463
01:12:16,920 --> 01:12:23,100
belongs in the ipv6 namespace and vice

1464
01:12:20,070 --> 01:12:26,219
versa and how does a dual stack host

1465
01:12:23,100 --> 01:12:31,020
know which of these servers to query if

1466
01:12:26,219 --> 01:12:33,510
I have you know<font color="#E5E5E5"> dual stacked my dual</font>

1467
01:12:31,020 --> 01:12:37,980
stack device here if there<font color="#E5E5E5"> are separate</font>

1468
01:12:33,510 --> 01:12:45,420
v4 and<font color="#CCCCCC"> v6</font><font color="#E5E5E5"> DNS servers out there and I</font>

1469
01:12:37,980 --> 01:12:47,669
want<font color="#E5E5E5"> to go to resolve Joe cisco.com how</font>

1470
01:12:45,420 --> 01:12:51,150
do I know which one<font color="#E5E5E5"> of those servers to</font>

1471
01:12:47,670 --> 01:12:57,449
go to these are issues that need to be

1472
01:12:51,150 --> 01:12:59,849
resolved or contemplated with DNS how to

1473
01:12:57,449 --> 01:13:03,150
root servers share records with MX

1474
01:12:59,850 --> 01:13:06,420
records how does an ipv4 user send email

1475
01:13:03,150 --> 01:13:08,969
to ipv6 users and vice versa well

1476
01:13:06,420 --> 01:13:11,909
solutions the primary solution is to use

1477
01:13:08,969 --> 01:13:15,530
a dual stack resolver you don't not use

1478
01:13:11,909 --> 01:13:21,480
separate v4 and v6 resolvers so you have

1479
01:13:15,530 --> 01:13:23,699
a resolver that understands both every

1480
01:13:21,480 --> 01:13:26,370
zone as<font color="#E5E5E5"> it shows here as it says here</font>

1481
01:13:23,699 --> 01:13:30,150
<font color="#E5E5E5">should</font><font color="#CCCCCC"> be served by at least one v4 dns</font>

1482
01:13:26,370 --> 01:13:32,370
server you<font color="#CCCCCC"> can use translators</font><font color="#E5E5E5"> NAT PT</font>

1483
01:13:30,150 --> 01:13:35,730
does not work very well for this for

1484
01:13:32,370 --> 01:13:38,820
reasons<font color="#E5E5E5"> that I pointed kind of briefly</font>

1485
01:13:35,730 --> 01:13:43,620
to earlier there<font color="#E5E5E5"> is a proxy DNS</font>

1486
01:13:38,820 --> 01:13:45,659
translator called<font color="#E5E5E5"> T 0 T demon totd that</font>

1487
01:13:43,620 --> 01:13:47,730
I haven't<font color="#E5E5E5"> played around with much but</font>

1488
01:13:45,659 --> 01:13:53,159
but it's out there that supposedly works

1489
01:13:47,730 --> 01:13:54,928
better than the<font color="#E5E5E5"> DNS alg in that PT and</font>

1490
01:13:53,159 --> 01:13:58,670
some of these issues are discussed in

1491
01:13:54,929 --> 01:14:01,160
section 3.2 of RFC 1933

1492
01:13:58,670 --> 01:14:02,690
if you want to see<font color="#E5E5E5"> those a bit more but</font>

1493
01:14:01,160 --> 01:14:06,110
what I'd really<font color="#E5E5E5"> like to talked about</font>

1494
01:14:02,690 --> 01:14:11,589
kind<font color="#E5E5E5"> of moving forward here is the two</font>

1495
01:14:06,110 --> 01:14:13,910
types<font color="#E5E5E5"> of records that are used for ipv6</font>

1496
01:14:11,590 --> 01:14:19,460
the first is a thing called a quad a

1497
01:14:13,910 --> 01:14:25,309
record which is described in RFC 1886 is

1498
01:14:19,460 --> 01:14:28,370
supported in bind 4.9 and up the RFC

1499
01:14:25,310 --> 01:14:30,410
actually recommends actually<font color="#E5E5E5"> I don't</font>

1500
01:14:28,370 --> 01:14:31,760
<font color="#E5E5E5">know</font><font color="#CCCCCC"> if the RFC recommends it I've seen</font>

1501
01:14:30,410 --> 01:14:35,599
<font color="#E5E5E5">this similar but bind eight is</font>

1502
01:14:31,760 --> 01:14:38,840
recommended for quad a records and these

1503
01:14:35,600 --> 01:14:40,580
are<font color="#CCCCCC"> just a simple extension of a records</font>

1504
01:14:38,840 --> 01:14:43,310
which means<font color="#CCCCCC"> that there's a lot of</font>

1505
01:14:40,580 --> 01:14:46,489
experience out there they should be<font color="#E5E5E5"> easy</font>

1506
01:14:43,310 --> 01:14:49,280
to understand because there's<font color="#E5E5E5"> not that</font>

1507
01:14:46,489 --> 01:14:51,830
much of a change and here a quad a

1508
01:14:49,280 --> 01:14:53,480
record has shown and you know if you're

1509
01:14:51,830 --> 01:14:56,480
familiar with a records then you

1510
01:14:53,480 --> 01:14:59,178
certainly know this in this case I've

1511
01:14:56,480 --> 01:15:01,099
got some device named Homer has shown

1512
01:14:59,179 --> 01:15:04,760
that it's a quad a record and here's the

1513
01:15:01,100 --> 01:15:07,010
ipv6 address and of course the<font color="#CCCCCC"> the name</font>

1514
01:15:04,760 --> 01:15:09,440
of quad a record kind of implies the

1515
01:15:07,010 --> 01:15:12,310
fact that the ipv6 addresses four times

1516
01:15:09,440 --> 01:15:18,559
as long as a v4 address in an a record

1517
01:15:12,310 --> 01:15:22,190
and then you also have<font color="#CCCCCC"> ip6 arpa which is</font>

1518
01:15:18,560 --> 01:15:25,010
analogous to it to the<font color="#CCCCCC"> i can never</font><font color="#E5E5E5"> say</font>

1519
01:15:22,190 --> 01:15:28,428
that in a dress<font color="#CCCCCC"> arpa for reverse mapping</font>

1520
01:15:25,010 --> 01:15:30,890
but that's kind of an<font color="#E5E5E5"> ugly beast which</font>

1521
01:15:28,429 --> 01:15:35,600
is shown<font color="#CCCCCC"> here so your PTR record using</font>

1522
01:15:30,890 --> 01:15:38,000
this ip6<font color="#CCCCCC"> ARPA which i've shown this this</font>

1523
01:15:35,600 --> 01:15:41,179
actually would return a name of Homer

1524
01:15:38,000 --> 01:15:45,890
Simpson dotnet down here but it's this

1525
01:15:41,179 --> 01:15:49,250
address written in reverse dotted hex

1526
01:15:45,890 --> 01:15:51,199
nibbles and this is a big long ugly

1527
01:15:49,250 --> 01:15:54,500
thing and it's it's kind of cumbersome

1528
01:15:51,199 --> 01:15:58,849
to work with there is an earlier version

1529
01:15:54,500 --> 01:16:01,940
of this call ip6 int but in RFC 3152

1530
01:15:58,850 --> 01:16:05,120
that's deprecated in in favor of ip6

1531
01:16:01,940 --> 01:16:10,370
ARPA but this is a quad a record and the

1532
01:16:05,120 --> 01:16:10,990
the the PTR associated PTR records for

1533
01:16:10,370 --> 01:16:14,740
doing

1534
01:16:10,990 --> 01:16:18,580
reverse mapping there's also a thing

1535
01:16:14,740 --> 01:16:22,139
called an a6 record which is proposed<font color="#CCCCCC"> as</font>

1536
01:16:18,580 --> 01:16:25,000
an alternative and<font color="#CCCCCC"> two quad a records</font>

1537
01:16:22,140 --> 01:16:26,650
it's stated on a slide a little bit

1538
01:16:25,000 --> 01:16:29,200
later but I'll state it now because I

1539
01:16:26,650 --> 01:16:32,200
think<font color="#E5E5E5"> it's important to hear that right</font>

1540
01:16:29,200 --> 01:16:33,700
<font color="#CCCCCC">away is that just very recently a six</font>

1541
01:16:32,200 --> 01:16:37,410
<font color="#CCCCCC">records have been changed from the</font>

1542
01:16:33,700 --> 01:16:39,610
proposed standard to experimental status

1543
01:16:37,410 --> 01:16:41,290
pretty much what was happening out in

1544
01:16:39,610 --> 01:16:44,920
the real<font color="#CCCCCC"> world is</font><font color="#E5E5E5"> that everybody was</font>

1545
01:16:41,290 --> 01:16:48,519
using quad a records so there's you know

1546
01:16:44,920 --> 01:16:50,170
there's certainly some advantages to<font color="#CCCCCC"> a</font>

1547
01:16:48,520 --> 01:16:53,200
<font color="#E5E5E5">six so it's why I'm going to talk about</font>

1548
01:16:50,170 --> 01:16:58,630
it at all but for<font color="#E5E5E5"> now everybody sort of</font>

1549
01:16:53,200 --> 01:17:03,750
just just stuck with quad a records if a

1550
01:16:58,630 --> 01:17:09,160
six is described in RFC 2874 has a

1551
01:17:03,750 --> 01:17:13,240
record type of 38 and the reason<font color="#CCCCCC"> a 6</font>

1552
01:17:09,160 --> 01:17:16,599
records are interesting is because a

1553
01:17:13,240 --> 01:17:19,780
single<font color="#CCCCCC"> record can contain the entire</font>

1554
01:17:16,600 --> 01:17:23,230
ipv6 address or it can contain<font color="#CCCCCC"> a portion</font>

1555
01:17:19,780 --> 01:17:26,410
of an ipv6 address ipv6 address with a

1556
01:17:23,230 --> 01:17:28,030
reference to another record that

1557
01:17:26,410 --> 01:17:29,790
contains another portion and you can

1558
01:17:28,030 --> 01:17:35,340
actually<font color="#E5E5E5"> change these records together</font>

1559
01:17:29,790 --> 01:17:38,080
to do a lookup of<font color="#E5E5E5"> an ipv6 address and</font>

1560
01:17:35,340 --> 01:17:40,210
that supported in bind9 as its shown

1561
01:17:38,080 --> 01:17:43,269
here the records are more complicated

1562
01:17:40,210 --> 01:17:47,350
<font color="#E5E5E5">but the advantage is that</font><font color="#CCCCCC"> network</font>

1563
01:17:43,270 --> 01:17:49,300
renumber encre and rather<font color="#CCCCCC"> than kind of</font>

1564
01:17:47,350 --> 01:17:53,410
read through all of this<font color="#E5E5E5"> i'll show</font><font color="#CCCCCC"> you</font>

1565
01:17:49,300 --> 01:17:55,330
an example on this<font color="#E5E5E5"> page here of a record</font>

1566
01:17:53,410 --> 01:17:58,750
<font color="#E5E5E5">chain in this case we've got a query</font>

1567
01:17:55,330 --> 01:18:00,970
name of Homer Simpson net well the first

1568
01:17:58,750 --> 01:18:03,070
<font color="#CCCCCC">thing you do is go to a</font><font color="#E5E5E5"> DNS server and</font>

1569
01:18:00,970 --> 01:18:05,770
you look up Simpson net and you look up

1570
01:18:03,070 --> 01:18:08,259
Homer the record for homer here it shows

1571
01:18:05,770 --> 01:18:10,780
that this is an a6 record this number

1572
01:18:08,260 --> 01:18:12,820
right here says<font color="#CCCCCC"> that I'm going</font><font color="#E5E5E5"> to return</font>

1573
01:18:10,780 --> 01:18:18,190
a portion of<font color="#E5E5E5"> that address and there are</font>

1574
01:18:12,820 --> 01:18:21,730
64 bits<font color="#E5E5E5"> ahead of this address chunk that</font>

1575
01:18:18,190 --> 01:18:24,400
still need to be found so<font color="#CCCCCC"> basically what</font>

1576
01:18:21,730 --> 01:18:28,000
gets returned here is the interface

1577
01:18:24,400 --> 01:18:31,750
ID for this device homer and you have a

1578
01:18:28,000 --> 01:18:34,090
reference to another record SLA<font color="#CCCCCC"> 5 which</font>

1579
01:18:31,750 --> 01:18:36,940
<font color="#CCCCCC">is at subnet Simpson net so we go to</font>

1580
01:18:34,090 --> 01:18:39,790
subnet Simpson net we find the record

1581
01:18:36,940 --> 01:18:42,159
for SLA<font color="#E5E5E5"> 5 we get another chunk of the</font>

1582
01:18:39,790 --> 01:18:44,679
address and this says that<font color="#CCCCCC"> there are</font>

1583
01:18:42,159 --> 01:18:47,799
another 48 bits to be found and they can

1584
01:18:44,679 --> 01:18:49,900
<font color="#E5E5E5">be found at site three sites net we go</font>

1585
01:18:47,800 --> 01:18:52,750
to sites net look for site<font color="#CCCCCC"> three record</font>

1586
01:18:49,900 --> 01:18:57,129
we get the<font color="#E5E5E5"> next chunk we still need 32</font>

1587
01:18:52,750 --> 01:19:00,969
bits we go to area 10 here's arias net

1588
01:18:57,130 --> 01:19:03,310
in area 10 we get the<font color="#E5E5E5"> next chunk 24 bits</font>

1589
01:19:00,969 --> 01:19:07,270
remain which we can find in a record

1590
01:19:03,310 --> 01:19:11,980
called TLA one at<font color="#CCCCCC"> TLAs net here at TLAs</font>

1591
01:19:07,270 --> 01:19:14,469
net we have TLA one no bits remaining

1592
01:19:11,980 --> 01:19:16,570
because this is our last 24 bits and now

1593
01:19:14,469 --> 01:19:20,199
if<font color="#E5E5E5"> we put all that stuff together we've</font>

1594
01:19:16,570 --> 01:19:23,440
got the<font color="#E5E5E5"> return to dress why that's</font>

1595
01:19:20,199 --> 01:19:26,019
useful is this if you're doing a network

1596
01:19:23,440 --> 01:19:27,580
renumber<font color="#CCCCCC"> maybe the only thing that</font>

1597
01:19:26,020 --> 01:19:30,760
really needs<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be remembered in your</font>

1598
01:19:27,580 --> 01:19:34,929
network is the TLA portion or maybe the

1599
01:19:30,760 --> 01:19:37,570
TLA and the you know some portion after

1600
01:19:34,929 --> 01:19:40,449
that you can actually read your network

1601
01:19:37,570 --> 01:19:42,460
in the dns records by just changing just

1602
01:19:40,449 --> 01:19:44,230
this portion of the record rather than

1603
01:19:42,460 --> 01:19:48,040
having to change every record<font color="#E5E5E5"> for every</font>

1604
01:19:44,230 --> 01:19:50,830
device in the dns that's what the

1605
01:19:48,040 --> 01:19:53,620
advantage<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> six is the disadvantage</font>

1606
01:19:50,830 --> 01:19:56,230
is probably kind<font color="#E5E5E5"> of obvious to you</font><font color="#CCCCCC"> too</font>

1607
01:19:53,620 --> 01:19:57,489
that rather than looking at<font color="#E5E5E5"> a single</font>

1608
01:19:56,230 --> 01:19:59,769
<font color="#CCCCCC">record we're having to look through a</font>

1609
01:19:57,489 --> 01:20:01,360
chain of<font color="#CCCCCC"> records which means and these</font>

1610
01:19:59,770 --> 01:20:03,670
records could be on different dns

1611
01:20:01,360 --> 01:20:05,589
servers which means it takes a lot

1612
01:20:03,670 --> 01:20:08,199
longer to do the the name resolution

1613
01:20:05,590 --> 01:20:13,270
using a<font color="#E5E5E5"> six that's really the big</font>

1614
01:20:08,199 --> 01:20:14,589
drawback to a 6 records is that<font color="#E5E5E5"> they're</font>

1615
01:20:13,270 --> 01:20:18,370
<font color="#E5E5E5">going to take a long</font><font color="#CCCCCC"> time to do a name</font>

1616
01:20:14,590 --> 01:20:21,790
resolution another piece<font color="#E5E5E5"> that goes along</font>

1617
01:20:18,370 --> 01:20:26,800
with this is d name which<font color="#CCCCCC"> is described</font>

1618
01:20:21,790 --> 01:20:29,890
in RFC 2672 and kind of running out of

1619
01:20:26,800 --> 01:20:34,560
time here<font color="#CCCCCC"> so so just going</font><font color="#E5E5E5"> through this</font>

1620
01:20:29,890 --> 01:20:37,090
really quickly d name provides this

1621
01:20:34,560 --> 01:20:37,900
chaining of<font color="#E5E5E5"> records just like a 6</font>

1622
01:20:37,090 --> 01:20:40,270
records does so

1623
01:20:37,900 --> 01:20:44,469
sort of<font color="#CCCCCC"> the counterpart to a 64 doing</font>

1624
01:20:40,270 --> 01:20:47,710
reverse lookups and like a six it was in

1625
01:20:44,469 --> 01:20:50,560
RFC 3363 was changed from a proposed

1626
01:20:47,710 --> 01:20:53,199
standard to experimental status so we

1627
01:20:50,560 --> 01:20:55,239
<font color="#E5E5E5">won't look at it very long there's also</font>

1628
01:20:53,199 --> 01:20:57,790
a thing called<font color="#CCCCCC"> bitstream bit string</font>

1629
01:20:55,239 --> 01:21:00,280
labels that's important with<font color="#CCCCCC"> DNS and for</font>

1630
01:20:57,790 --> 01:21:03,570
breaking<font color="#E5E5E5"> up these records bit string</font>

1631
01:21:00,280 --> 01:21:07,449
labels for ipv6 are described in RFC

1632
01:21:03,570 --> 01:21:10,269
2673 example is shown here we've<font color="#E5E5E5"> got an</font>

1633
01:21:07,449 --> 01:21:13,299
ipv6 address which could be represented

1634
01:21:10,270 --> 01:21:15,880
this way using a bit string label or you

1635
01:21:13,300 --> 01:21:20,530
can actually<font color="#E5E5E5"> break the thing up as shown</font>

1636
01:21:15,880 --> 01:21:25,030
<font color="#E5E5E5">here which allows you to to again do</font>

1637
01:21:20,530 --> 01:21:28,300
chains and<font color="#E5E5E5"> the advantage kind of already</font>

1638
01:21:25,030 --> 01:21:32,230
said that it's more compact than the IP

1639
01:21:28,300 --> 01:21:35,199
<font color="#E5E5E5">6n tour ip6 the the the textual</font>

1640
01:21:32,230 --> 01:21:38,139
representation that we saw earlier but

1641
01:21:35,199 --> 01:21:40,030
all resolvers and our<font color="#CCCCCC"> far tative servers</font>

1642
01:21:38,140 --> 01:21:43,360
need to be upgraded before that label

1643
01:21:40,030 --> 01:21:46,540
type can be used and here's the<font color="#E5E5E5"> D name</font>

1644
01:21:43,360 --> 01:21:48,790
reverse lookup in this case we query

1645
01:21:46,540 --> 01:21:51,400
this address here<font color="#CCCCCC"> and you can see using</font>

1646
01:21:48,790 --> 01:21:52,780
these bitstring labels that we<font color="#E5E5E5"> have kind</font>

1647
01:21:51,400 --> 01:21:54,460
of the same<font color="#CCCCCC"> thing that happened with a 6</font>

1648
01:21:52,780 --> 01:21:56,710
records<font color="#E5E5E5"> you get a piece of the address</font>

1649
01:21:54,460 --> 01:21:59,590
and a reference to the next record and

1650
01:21:56,710 --> 01:22:01,510
as you go through this chain at the end

1651
01:21:59,590 --> 01:22:04,330
you<font color="#E5E5E5"> get enough information that now</font>

1652
01:22:01,510 --> 01:22:11,020
you've hit this Homer Simpson net and

1653
01:22:04,330 --> 01:22:14,019
you get the return name there so<font color="#CCCCCC"> Kwan</font>

1654
01:22:11,020 --> 01:22:15,670
<font color="#E5E5E5">eight or a</font><font color="#CCCCCC"> six well as I said</font><font color="#E5E5E5"> it's</font>

1655
01:22:14,020 --> 01:22:18,810
something of a moot point right now

1656
01:22:15,670 --> 01:22:22,270
<font color="#E5E5E5">because a</font><font color="#CCCCCC"> six has been has been</font>

1657
01:22:18,810 --> 01:22:23,800
relegated to experimental status there

1658
01:22:22,270 --> 01:22:28,210
is a good discussion of the trade-offs

1659
01:22:23,800 --> 01:22:30,370
<font color="#E5E5E5">in RFC 3364 the advantages of quad a</font>

1660
01:22:28,210 --> 01:22:32,830
records is that they<font color="#CCCCCC"> are essentially</font>

1661
01:22:30,370 --> 01:22:38,140
<font color="#E5E5E5">identical to a records which means there</font>

1662
01:22:32,830 --> 01:22:40,059
is<font color="#E5E5E5"> a lot of practical experience with</font>

1663
01:22:38,140 --> 01:22:42,370
them people understand quad a records

1664
01:22:40,060 --> 01:22:44,080
and know how<font color="#E5E5E5"> to work with them their</font>

1665
01:22:42,370 --> 01:22:45,969
<font color="#E5E5E5">optima as it says here kind of in quotes</font>

1666
01:22:44,080 --> 01:22:48,870
<font color="#CCCCCC">i</font><font color="#E5E5E5"> took this from the RFC it's optimized</font>

1667
01:22:45,969 --> 01:22:50,849
for read which means you get very fast

1668
01:22:48,870 --> 01:22:54,629
or relative

1669
01:22:50,849 --> 01:22:56,340
fast returns of a<font color="#E5E5E5"> DNS name lookup with</font>

1670
01:22:54,629 --> 01:22:58,739
quad a because you only look at<font color="#E5E5E5"> a single</font>

1671
01:22:56,340 --> 01:23:02,609
record the disadvantage is that it's

1672
01:22:58,739 --> 01:23:04,678
<font color="#CCCCCC">difficult to inject new data if you want</font>

1673
01:23:02,609 --> 01:23:08,249
to do a network remembering you've got

1674
01:23:04,679 --> 01:23:09,449
to change all of your records a<font color="#CCCCCC"> 6 the</font>

1675
01:23:08,249 --> 01:23:10,978
pros here and<font color="#E5E5E5"> again I've got this in</font>

1676
01:23:09,449 --> 01:23:13,799
quotes because I took it<font color="#E5E5E5"> out of the RFC</font>

1677
01:23:10,979 --> 01:23:17,179
it's optimized<font color="#E5E5E5"> for right in other words</font>

1678
01:23:13,800 --> 01:23:20,010
it's very easy to change records and

1679
01:23:17,179 --> 01:23:21,359
could be superior for rapid renumber and

1680
01:23:20,010 --> 01:23:22,859
so forth and could have some

1681
01:23:21,359 --> 01:23:24,359
implications for some<font color="#CCCCCC"> multi-homing</font>

1682
01:23:22,859 --> 01:23:27,559
approaches unfortunately i don't have

1683
01:23:24,359 --> 01:23:31,079
the<font color="#CCCCCC"> multi-homing section in here</font><font color="#E5E5E5"> anymore</font>

1684
01:23:27,559 --> 01:23:32,309
the cons the the long chains as<font color="#E5E5E5"> I</font>

1685
01:23:31,079 --> 01:23:35,280
already mentioned can reduce performance

1686
01:23:32,309 --> 01:23:38,010
and there's not much operational

1687
01:23:35,280 --> 01:23:40,919
experience with<font color="#CCCCCC"> that as a result quad-a</font>

1688
01:23:38,010 --> 01:23:45,359
is the preferred<font color="#CCCCCC"> DNS method right now</font>

1689
01:23:40,919 --> 01:23:46,469
for for production deployment and I

1690
01:23:45,359 --> 01:23:48,629
think<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> down to the last slide</font><font color="#CCCCCC"> here</font>

1691
01:23:46,469 --> 01:23:52,109
<font color="#E5E5E5">which is pretty I actually got that</font>

1692
01:23:48,629 --> 01:23:56,399
almost right on time some open or semi

1693
01:23:52,109 --> 01:24:00,719
open issues with ipv6 and transitioning

1694
01:23:56,399 --> 01:24:02,189
to ipv6 one is security into insecurity

1695
01:24:00,719 --> 01:24:05,010
as i mentioned<font color="#CCCCCC"> that back at the very</font>

1696
01:24:02,189 --> 01:24:06,780
<font color="#E5E5E5">beginning of this talk is better than</font>

1697
01:24:05,010 --> 01:24:09,530
trying to<font color="#E5E5E5"> hide behind a</font><font color="#CCCCCC"> NAT which is</font>

1698
01:24:06,780 --> 01:24:13,169
kind<font color="#E5E5E5"> of a broken way of doing security</font>

1699
01:24:09,530 --> 01:24:16,768
so ipv6 gives us the opportunity to

1700
01:24:13,169 --> 01:24:18,629
improve the the present state of

1701
01:24:16,769 --> 01:24:21,869
security<font color="#CCCCCC"> on the internet which is</font><font color="#E5E5E5"> which</font>

1702
01:24:18,629 --> 01:24:23,659
<font color="#CCCCCC">is pretty horrendous firewalls really</font>

1703
01:24:21,869 --> 01:24:27,419
need to become smarter and this this

1704
01:24:23,659 --> 01:24:28,858
<font color="#E5E5E5">really is kind of a side from ipv6 they</font>

1705
01:24:27,419 --> 01:24:34,590
need to become smarter whether we're

1706
01:24:28,859 --> 01:24:38,010
talking about ipv6<font color="#E5E5E5"> or ipv4 there are too</font>

1707
01:24:34,590 --> 01:24:39,959
many hacks with firewalls right now that

1708
01:24:38,010 --> 01:24:43,459
application developers use and so forth

1709
01:24:39,959 --> 01:24:46,590
firewalls need to start learning how to

1710
01:24:43,459 --> 01:24:48,030
examine things better transition

1711
01:24:46,590 --> 01:24:50,789
vulnerabilities need to be better

1712
01:24:48,030 --> 01:24:52,949
understood and unfortunately the only

1713
01:24:50,789 --> 01:24:54,509
way those vulnerabilities are probably

1714
01:24:52,949 --> 01:25:00,079
going to be understood is to start doing

1715
01:24:54,510 --> 01:25:01,859
transitions particularly security

1716
01:25:00,079 --> 01:25:02,549
vulnerabilities need to be better

1717
01:25:01,859 --> 01:25:05,820
understood

1718
01:25:02,550 --> 01:25:07,670
there are there<font color="#CCCCCC"> are documents out there</font>

1719
01:25:05,820 --> 01:25:10,500
some internet-drafts that discuss

1720
01:25:07,670 --> 01:25:12,270
potentials for abuse and denial of

1721
01:25:10,500 --> 01:25:15,809
service attacks of different kinds of

1722
01:25:12,270 --> 01:25:18,960
ipv6 addresses used in<font color="#E5E5E5"> in various</font>

1723
01:25:15,809 --> 01:25:20,460
transition technologies management

1724
01:25:18,960 --> 01:25:22,349
<font color="#CCCCCC">definitely needs</font><font color="#E5E5E5"> to be improved there</font>

1725
01:25:20,460 --> 01:25:25,800
was a<font color="#CCCCCC"> statement just this morning in</font>

1726
01:25:22,349 --> 01:25:28,739
fact you made that that<font color="#E5E5E5"> the mids for</font>

1727
01:25:25,800 --> 01:25:32,179
ipv6 in routers are not as good as is

1728
01:25:28,739 --> 01:25:35,190
the mids for ipv4 that needs to improve

1729
01:25:32,179 --> 01:25:37,500
that's<font color="#E5E5E5"> something that you got to go back</font>

1730
01:25:35,190 --> 01:25:44,449
on the shoulder<font color="#CCCCCC"> of router vendors among</font>

1731
01:25:37,500 --> 01:25:47,489
other things and the ipv6 network itself

1732
01:25:44,449 --> 01:25:49,619
needs to be managed in conjunction with

1733
01:25:47,489 --> 01:25:52,348
ipv4 you shouldn't have to have separate

1734
01:25:49,619 --> 01:25:54,598
management platforms or somehow view the

1735
01:25:52,349 --> 01:25:57,570
ipv6 portion of<font color="#E5E5E5"> your network separately</font>

1736
01:25:54,599 --> 01:25:59,369
from<font color="#E5E5E5"> ipv4 what I've heard over and over</font>

1737
01:25:57,570 --> 01:26:01,019
from various operators is you know I

1738
01:25:59,369 --> 01:26:04,440
<font color="#E5E5E5">need to see my network as a whole and</font>

1739
01:26:01,020 --> 01:26:06,540
the management platforms that i use need

1740
01:26:04,440 --> 01:26:09,888
to give me that visibility and<font color="#E5E5E5"> i should</font>

1741
01:26:06,540 --> 01:26:15,540
be<font color="#CCCCCC"> able to manage and</font><font color="#E5E5E5"> view my ipv6</font>

1742
01:26:09,889 --> 01:26:17,760
traffic in the same way<font color="#E5E5E5"> i can ipv4 in</font>

1743
01:26:15,540 --> 01:26:19,949
the<font color="#CCCCCC"> long-term ipv6 networks should</font>

1744
01:26:17,760 --> 01:26:23,400
actually be cheaper to manage than ipv4

1745
01:26:19,949 --> 01:26:26,040
networks part<font color="#E5E5E5"> of that could have to do</font>

1746
01:26:23,400 --> 01:26:28,259
<font color="#CCCCCC">with ipv with end-to-end security a big</font>

1747
01:26:26,040 --> 01:26:31,710
part of that can have to do with getting

1748
01:26:28,260 --> 01:26:33,559
rid<font color="#CCCCCC"> of gnats and dynamic IP address</font>

1749
01:26:31,710 --> 01:26:39,929
pools and that sort of thing

1750
01:26:33,559 --> 01:26:44,309
<font color="#CCCCCC">multi-homing is a big big issue there's</font>

1751
01:26:39,929 --> 01:26:46,770
nothing inherent in ipv6 that improves

1752
01:26:44,309 --> 01:26:48,809
the really crummy state that we're in

1753
01:26:46,770 --> 01:26:52,530
right now<font color="#CCCCCC"> with the internet with ipv4</font>

1754
01:26:48,809 --> 01:26:54,449
<font color="#CCCCCC">multi-homing and the kind</font><font color="#E5E5E5"> of not</font><font color="#CCCCCC"> so good</font>

1755
01:26:52,530 --> 01:26:57,239
practices that we've had with ipv4

1756
01:26:54,449 --> 01:26:59,070
<font color="#CCCCCC">multi-homing of leaking long addresses</font>

1757
01:26:57,239 --> 01:27:02,598
into the default free zone and all of

1758
01:26:59,070 --> 01:27:05,639
that<font color="#CCCCCC"> kind of thing what ipv4 v6</font>

1759
01:27:02,599 --> 01:27:09,150
transition does is give us an

1760
01:27:05,639 --> 01:27:12,059
opportunity that to fix the things that

1761
01:27:09,150 --> 01:27:14,219
we've<font color="#CCCCCC"> done wrong in ipv4 because if</font>

1762
01:27:12,059 --> 01:27:16,090
we're going<font color="#E5E5E5"> to transition anyway as we</font>

1763
01:27:14,219 --> 01:27:18,880
start why not try doing bed

1764
01:27:16,090 --> 01:27:22,330
<font color="#CCCCCC">multi-homing practices as i said earlier</font>

1765
01:27:18,880 --> 01:27:23,710
on the if with these slides posted on

1766
01:27:22,330 --> 01:27:25,659
the net<font color="#CCCCCC"> i've actually put the</font>

1767
01:27:23,710 --> 01:27:27,909
<font color="#CCCCCC">multi-homing portion of this</font>

1768
01:27:25,659 --> 01:27:29,530
presentation at<font color="#E5E5E5"> the very end of this</font>

1769
01:27:27,909 --> 01:27:31,179
presentation so you can<font color="#E5E5E5"> look at it and</font>

1770
01:27:29,530 --> 01:27:35,199
<font color="#E5E5E5">i'll try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do a</font><font color="#CCCCCC"> multi-homing</font>

1771
01:27:31,179 --> 01:27:37,929
presentation in Chicago because there's

1772
01:27:35,199 --> 01:27:40,419
some important issues there there<font color="#E5E5E5"> are a</font>

1773
01:27:37,929 --> 01:27:43,179
lot of proposed solutions right now for

1774
01:27:40,420 --> 01:27:46,570
<font color="#CCCCCC">multi-homing for ipv6 none of</font><font color="#E5E5E5"> them are</font>

1775
01:27:43,179 --> 01:27:48,699
<font color="#CCCCCC">perfect there's certainly plenty of</font>

1776
01:27:46,570 --> 01:27:50,320
ground and plenty<font color="#E5E5E5"> of room for</font>

1777
01:27:48,699 --> 01:27:52,598
intelligent people to come up with

1778
01:27:50,320 --> 01:27:54,309
<font color="#CCCCCC">better solutions for multihoming because</font>

1779
01:27:52,599 --> 01:27:56,550
there's only<font color="#E5E5E5"> going to be a limited</font>

1780
01:27:54,310 --> 01:28:00,940
amount of time where we can<font color="#E5E5E5"> fix that</font>

1781
01:27:56,550 --> 01:28:03,130
already people running some ipv6

1782
01:28:00,940 --> 01:28:05,888
networks are talking<font color="#E5E5E5"> about just using</font>

1783
01:28:03,130 --> 01:28:08,020
ipv4 types of<font color="#CCCCCC"> multihoming procedures</font>

1784
01:28:05,889 --> 01:28:10,570
because there's<font color="#E5E5E5"> nothing better to be</font>

1785
01:28:08,020 --> 01:28:14,380
done out there another another issue is

1786
01:28:10,570 --> 01:28:18,429
that very<font color="#E5E5E5"> much p</font><font color="#CCCCCC"> i address space is</font>

1787
01:28:14,380 --> 01:28:20,980
needed for ipv6 right now with ipv6 if

1788
01:28:18,429 --> 01:28:22,900
<font color="#E5E5E5">you're allocated if you're you</font><font color="#CCCCCC"> know way</font>

1789
01:28:20,980 --> 01:28:25,809
down the chain somewhere you're going to

1790
01:28:22,900 --> 01:28:27,369
<font color="#E5E5E5">get a PA address space that's a big</font>

1791
01:28:25,810 --> 01:28:29,619
<font color="#CCCCCC">turnoff for a lot of enterprises</font>

1792
01:28:27,369 --> 01:28:32,049
enterprises will say I want a p.i

1793
01:28:29,619 --> 01:28:35,429
address space for<font color="#CCCCCC"> multi-homing and such</font>

1794
01:28:32,050 --> 01:28:39,280
so that I'm not<font color="#E5E5E5"> dependent on any one</font>

1795
01:28:35,429 --> 01:28:40,449
provider and there's discussion about

1796
01:28:39,280 --> 01:28:43,179
that but that's<font color="#CCCCCC"> something that's needed</font>

1797
01:28:40,449 --> 01:28:45,519
<font color="#CCCCCC">and then</font><font color="#E5E5E5"> finally it sounds kind of funny</font>

1798
01:28:43,179 --> 01:28:49,179
to say in<font color="#E5E5E5"> this video but marketing is</font>

1799
01:28:45,520 --> 01:28:53,230
needed there are a lot of misconceptions

1800
01:28:49,179 --> 01:28:55,270
and myths out there still around ipv6 I

1801
01:28:53,230 --> 01:28:58,480
mentioned a couple of those back at<font color="#E5E5E5"> the</font>

1802
01:28:55,270 --> 01:29:02,440
very<font color="#E5E5E5"> beginning of the of the talk and</font>

1803
01:28:58,480 --> 01:29:04,598
I'm kind<font color="#E5E5E5"> of put that in here as as a</font>

1804
01:29:02,440 --> 01:29:06,309
<font color="#E5E5E5">come-on to say you</font><font color="#CCCCCC"> know if you're not</font>

1805
01:29:04,599 --> 01:29:08,860
involved if you're interested and you're

1806
01:29:06,310 --> 01:29:12,219
<font color="#E5E5E5">not involved with the ipv6 forum which</font>

1807
01:29:08,860 --> 01:29:15,820
is mainly its main task is to market

1808
01:29:12,219 --> 01:29:18,369
ipv6 you know we<font color="#E5E5E5"> could certainly use</font>

1809
01:29:15,820 --> 01:29:21,040
your help writing articles particularly

1810
01:29:18,369 --> 01:29:23,170
speaking and trying to kill off these

1811
01:29:21,040 --> 01:29:26,590
myriad myths and get some get some

1812
01:29:23,170 --> 01:29:28,790
reality<font color="#E5E5E5"> around what transitioning to</font>

1813
01:29:26,590 --> 01:29:34,010
ipv6 is all about

1814
01:29:28,790 --> 01:29:34,010
and with that are there<font color="#E5E5E5"> any questions I</font>

1815
01:29:34,910 --> 01:29:40,040
just educated you so well there was not

1816
01:29:37,530 --> 01:29:43,259
anything else you need to know is it<font color="#E5E5E5"> I</font>

1817
01:29:40,040 --> 01:29:45,360
somehow<font color="#CCCCCC"> I doubt that if you</font><font color="#E5E5E5"> think of</font>

1818
01:29:43,260 --> 01:29:46,980
some questions later my my email

1819
01:29:45,360 --> 01:29:48,990
addresses on here I'm just<font color="#E5E5E5"> Jeff at</font>

1820
01:29:46,980 --> 01:29:53,540
juniper net please feel free to email<font color="#E5E5E5"> me</font>

1821
01:29:48,990 --> 01:30:12,300
at<font color="#E5E5E5"> any time and uh oh quick question oh</font>

1822
01:29:53,540 --> 01:30:14,310
yeah<font color="#CCCCCC"> is there a in that draft published</font>

1823
01:30:12,300 --> 01:30:18,050
about why that is they heard that thing

1824
01:30:14,310 --> 01:30:21,000
to do thus far nobody weaker with as

1825
01:30:18,050 --> 01:30:25,430
they share diddly about that said there

1826
01:30:21,000 --> 01:30:26,940
you sixes go away yeah I

1827
01:30:25,430 --> 01:30:29,730
personally

1828
01:30:26,940 --> 01:30:34,169
I can't see the likelihood of any cast

1829
01:30:29,730 --> 01:30:36,660
adrift point very relationship make sure

1830
01:30:34,170 --> 01:30:41,550
<font color="#E5E5E5">of useful down yeah do you think the</font>

1831
01:30:36,660 --> 01:30:44,910
real reason not to use I can't<font color="#E5E5E5"> think of</font>

1832
01:30:41,550 --> 01:30:46,969
any kidding do you have any thoughts on

1833
01:30:44,910 --> 01:30:46,969
that

1834
01:31:08,230 --> 01:31:18,879
yeah yeah there's yeah I you know Eileen

1835
01:31:16,630 --> 01:31:20,440
very much to your opinion there's

1836
01:31:18,880 --> 01:31:23,140
there's a lot of things<font color="#E5E5E5"> out there like</font>

1837
01:31:20,440 --> 01:31:26,139
<font color="#E5E5E5">you know you know talking about you know</font>

1838
01:31:23,140 --> 01:31:28,000
home user gets gets assigned to / 48 you

1839
01:31:26,140 --> 01:31:31,270
know which gives you you know capability

1840
01:31:28,000 --> 01:31:33,940
in like 65,000 subnets in your home you

1841
01:31:31,270 --> 01:31:36,340
should know is that's just<font color="#E5E5E5"> you know sure</font>

1842
01:31:33,940 --> 01:31:38,049
there's an abundant amount of ipv6

1843
01:31:36,340 --> 01:31:42,489
address space out there but why be

1844
01:31:38,050 --> 01:31:45,070
wasteful and so I don't know<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

1845
01:31:42,489 --> 01:31:47,190
<font color="#CCCCCC">there's some odd practices right now yes</font>

1846
01:31:45,070 --> 01:31:47,190
sir

1847
01:32:02,400 --> 01:32:05,400
uh-huh

1848
01:32:16,010 --> 01:32:23,060
you know I don't know<font color="#E5E5E5"> I would assume so</font>

1849
01:32:19,430 --> 01:32:26,270
not being a DNS guy like said I'm a

1850
01:32:23,060 --> 01:32:28,460
router guy and so I actually did you

1851
01:32:26,270 --> 01:32:43,550
know if there's any automated<font color="#CCCCCC"> DNS tools</font>

1852
01:32:28,460 --> 01:32:47,270
for ipv6 right now yeah so easy thing to

1853
01:32:43,550 --> 01:32:52,280
do you kind<font color="#E5E5E5"> of tasted that's not</font>

1854
01:32:47,270 --> 01:32:54,740
completed be nice to her yeah what about

1855
01:32:52,280 --> 01:32:56,150
<font color="#E5E5E5">the the various commercial tools that</font>

1856
01:32:54,740 --> 01:33:05,090
are available they do you know if any of

1857
01:32:56,150 --> 01:33:08,349
those will deal with ipv6<font color="#CCCCCC"> okay so there</font>

1858
01:33:05,090 --> 01:33:08,350
there is stuff of me alone

1859
01:33:11,080 --> 01:33:15,430
he has a lot of money he does that's our

1860
01:33:19,960 --> 01:33:25,940
okay other questions thought I saw

1861
01:33:23,600 --> 01:33:30,110
another hand somewhere over here

1862
01:33:25,940 --> 01:33:32,780
anything<font color="#E5E5E5"> okay well thank you very much</font>

1863
01:33:30,110 --> 01:33:35,389
for for coming and for putting<font color="#E5E5E5"> up with</font>

1864
01:33:32,780 --> 01:33:37,360
me for an<font color="#E5E5E5"> hour and a half and like i</font>

1865
01:33:35,390 --> 01:33:39,590
said if questions occur to you later

1866
01:33:37,360 --> 01:33:41,179
please feel<font color="#E5E5E5"> free to eat lamb</font><font color="#CCCCCC"> i always</font>

1867
01:33:39,590 --> 01:33:42,230
always happy to hear from anybody if<font color="#CCCCCC"> i</font>

1868
01:33:41,180 --> 01:33:43,610
can't answer the question i can

1869
01:33:42,230 --> 01:33:46,780
certainly point you to someone who can

1870
01:33:43,610 --> 01:33:46,780
thanks<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot</font>

