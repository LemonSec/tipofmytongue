1
00:00:00,000 --> 00:00:02,060
<font color="#CCCCCC">you</font>

2
00:00:08,080 --> 00:00:15,070
we have a<font color="#E5E5E5"> Peter</font><font color="#CCCCCC"> Ashwood</font><font color="#E5E5E5"> Smith with</font>

3
00:00:09,879 --> 00:00:16,948
<font color="#CCCCCC">blowing thank you very much it's my</font>

4
00:00:15,070 --> 00:00:19,990
pleasure today to introduce<font color="#CCCCCC"> to</font><font color="#E5E5E5"> you</font>

5
00:00:16,949 --> 00:00:23,980
<font color="#CCCCCC">shortest path bridging</font><font color="#E5E5E5"> or the I Triple E</font>

6
00:00:19,990 --> 00:00:25,959
designation 802 dot 1aq<font color="#CCCCCC"> there's a lot of</font>

7
00:00:23,980 --> 00:00:27,880
us have<font color="#E5E5E5"> been referring</font><font color="#CCCCCC"> to this as just</font><font color="#E5E5E5"> a</font>

8
00:00:25,960 --> 00:00:30,880
<font color="#E5E5E5">cue to kind of keep things</font><font color="#CCCCCC"> keep</font><font color="#E5E5E5"> things</font>

9
00:00:27,880 --> 00:00:32,680
relatively simple<font color="#CCCCCC"> so we're giving you</font><font color="#E5E5E5"> a</font>

10
00:00:30,880 --> 00:00:34,089
couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> new acronyms well why are we</font>

11
00:00:32,680 --> 00:00:36,640
giving you<font color="#E5E5E5"> these acronyms what are they</font>

12
00:00:34,090 --> 00:00:39,999
good<font color="#CCCCCC"> for</font><font color="#E5E5E5"> if you're working with</font><font color="#CCCCCC"> a layer</font>

13
00:00:36,640 --> 00:00:41,469
2 protocol<font color="#CCCCCC"> if you are building a layer 2</font>

14
00:00:39,999 --> 00:00:44,050
portion of<font color="#E5E5E5"> your network for whatever</font>

15
00:00:41,469 --> 00:00:46,899
reason you<font color="#E5E5E5"> might be doing that you</font>

16
00:00:44,050 --> 00:00:49,149
<font color="#CCCCCC">really</font><font color="#E5E5E5"> have essentially</font><font color="#CCCCCC"> three choices</font>

17
00:00:46,899 --> 00:00:52,239
<font color="#E5E5E5">for a dynamic control you have the</font>

18
00:00:49,149 --> 00:00:55,420
spanning tree protocols<font color="#E5E5E5"> you have ring</font>

19
00:00:52,239 --> 00:00:58,089
based protocols<font color="#E5E5E5"> and then you have split</font>

20
00:00:55,420 --> 00:01:01,629
lag type type mechanisms<font color="#E5E5E5"> each of these</font>

21
00:00:58,089 --> 00:01:05,408
has caveats<font color="#E5E5E5"> and problems and so the</font><font color="#CCCCCC"> I</font>

22
00:01:01,629 --> 00:01:07,780
Triple<font color="#E5E5E5"> E has been looking at ways to</font>

23
00:01:05,409 --> 00:01:10,560
<font color="#E5E5E5">address these problems and the 802 dot</font>

24
00:01:07,780 --> 00:01:12,670
1aq or shortest path<font color="#CCCCCC"> bridging is</font>

25
00:01:10,560 --> 00:01:16,240
attempting<font color="#CCCCCC"> to do so</font><font color="#E5E5E5"> and what I will do</font>

26
00:01:12,670 --> 00:01:20,380
is go<font color="#CCCCCC"> through this protocol for you in</font>

27
00:01:16,240 --> 00:01:22,570
in<font color="#E5E5E5"> the next 30 minutes so what are the</font>

28
00:01:20,380 --> 00:01:24,369
<font color="#E5E5E5">requirements</font><font color="#CCCCCC"> you know what are the sort</font>

29
00:01:22,570 --> 00:01:26,830
of<font color="#E5E5E5"> challenges that are that are</font><font color="#CCCCCC"> being</font>

30
00:01:24,370 --> 00:01:28,510
<font color="#CCCCCC">addressed here by this by this protocol</font>

31
00:01:26,830 --> 00:01:30,030
<font color="#E5E5E5">one of the first things that we wanted</font>

32
00:01:28,510 --> 00:01:33,340
<font color="#CCCCCC">to do was to increase the scale</font>

33
00:01:30,030 --> 00:01:36,190
<font color="#E5E5E5">currently you know layer 2 networks are</font>

34
00:01:33,340 --> 00:01:37,660
pretty small we picked the<font color="#E5E5E5"> number 1000</font>

35
00:01:36,190 --> 00:01:40,390
it's an order of magnitude larger than

36
00:01:37,660 --> 00:01:42,250
what's<font color="#E5E5E5"> currently possible</font><font color="#CCCCCC"> we wanted</font><font color="#E5E5E5"> to</font>

37
00:01:40,390 --> 00:01:44,800
be able<font color="#E5E5E5"> to use arbitrary mesh</font><font color="#CCCCCC"> we want to</font>

38
00:01:42,250 --> 00:01:46,570
be able<font color="#E5E5E5"> to use the full topology every</font>

39
00:01:44,800 --> 00:01:48,160
single link<font color="#E5E5E5"> if you bother to put a big</font>

40
00:01:46,570 --> 00:01:50,229
network together<font color="#CCCCCC"> you should be able to</font>

41
00:01:48,160 --> 00:01:52,509
use all<font color="#CCCCCC"> of those links I want to be able</font>

42
00:01:50,230 --> 00:01:55,360
to<font color="#E5E5E5"> use every single shortest path in the</font>

43
00:01:52,510 --> 00:01:57,159
<font color="#CCCCCC">network</font><font color="#E5E5E5"> again if you put the topology</font>

44
00:01:55,360 --> 00:01:58,570
together we want<font color="#E5E5E5"> to be able to use it</font>

45
00:01:57,159 --> 00:01:59,860
all<font color="#E5E5E5"> and if there are multiple shortest</font>

46
00:01:58,570 --> 00:02:03,250
paths we should be able<font color="#E5E5E5"> to use them all</font>

47
00:01:59,860 --> 00:02:06,909
in terms<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the multicast mechanisms we</font>

48
00:02:03,250 --> 00:02:08,769
want efficient replication at transit

49
00:02:06,909 --> 00:02:10,269
replication points or at the head<font color="#CCCCCC"> end we</font>

50
00:02:08,769 --> 00:02:12,010
want<font color="#E5E5E5"> to be able to do the same sorts of</font>

51
00:02:10,269 --> 00:02:14,520
replication that<font color="#E5E5E5"> currently happens with</font>

52
00:02:12,010 --> 00:02:17,489
existing<font color="#E5E5E5"> layer 2 networks</font>

53
00:02:14,520 --> 00:02:21,090
<font color="#CCCCCC">address learning one of the problems of</font>

54
00:02:17,490 --> 00:02:22,900
you know these large<font color="#CCCCCC"> Mac tables</font>

55
00:02:21,090 --> 00:02:24,520
distributed throughout<font color="#CCCCCC"> a</font><font color="#E5E5E5"> network we</font>

56
00:02:22,900 --> 00:02:26,440
don't want to have to learn these MAC

57
00:02:24,520 --> 00:02:29,650
addresses<font color="#E5E5E5"> everywhere and we want to get</font>

58
00:02:26,440 --> 00:02:31,990
the<font color="#CCCCCC"> recovery times down into 100 100 zuv</font>

59
00:02:29,650 --> 00:02:34,390
milliseconds or even smaller<font color="#E5E5E5"> for</font>

60
00:02:31,990 --> 00:02:36,100
reasonable<font color="#CCCCCC"> size topologies we want good</font>

61
00:02:34,390 --> 00:02:37,899
scale without loops and we want to be

62
00:02:36,100 --> 00:02:39,730
able<font color="#CCCCCC"> to create not only this physical</font>

63
00:02:37,900 --> 00:02:42,490
topology<font color="#E5E5E5"> but to create lots of logical</font>

64
00:02:39,730 --> 00:02:44,049
layer<font color="#CCCCCC"> 2 topologies within</font><font color="#E5E5E5"> that and while</font>

65
00:02:42,490 --> 00:02:45,610
we're creating those logical layer 2

66
00:02:44,050 --> 00:02:46,780
topologies within<font color="#E5E5E5"> that we want to</font>

67
00:02:45,610 --> 00:02:49,180
maintain<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> those wonderful</font>

68
00:02:46,780 --> 00:02:51,010
<font color="#E5E5E5">properties of the physical</font><font color="#CCCCCC"> layer 2</font>

69
00:02:49,180 --> 00:02:53,380
within<font color="#E5E5E5"> that logical layer 2 in</font>

70
00:02:51,010 --> 00:02:56,079
<font color="#E5E5E5">particular the ordering the symmetry of</font>

71
00:02:53,380 --> 00:02:58,630
the the routing the congruence<font color="#CCCCCC"> of the</font>

72
00:02:56,080 --> 00:03:01,000
unicast and multicast<font color="#CCCCCC"> all while using</font>

73
00:02:58,630 --> 00:03:02,769
the shortest<font color="#E5E5E5"> paths and</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a very</font>

74
00:03:01,000 --> 00:03:06,280
important the last<font color="#E5E5E5"> point we want to</font>

75
00:03:02,770 --> 00:03:08,110
<font color="#E5E5E5">maintain all of the</font><font color="#CCCCCC"> OEM 802 dot 11731</font>

76
00:03:06,280 --> 00:03:09,490
<font color="#CCCCCC">all of</font><font color="#E5E5E5"> those protocols that have been</font>

77
00:03:08,110 --> 00:03:12,120
developed over<font color="#E5E5E5"> the</font><font color="#CCCCCC"> last I don't know</font><font color="#E5E5E5"> how</font>

78
00:03:09,490 --> 00:03:15,580
many<font color="#E5E5E5"> years we can't invalidate those</font>

79
00:03:12,120 --> 00:03:17,170
this is<font color="#CCCCCC"> a simple</font><font color="#E5E5E5"> little example STP</font>

80
00:03:15,580 --> 00:03:18,580
Network I'm sure a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> are</font>

81
00:03:17,170 --> 00:03:22,299
<font color="#CCCCCC">very</font><font color="#E5E5E5"> familiar with some</font><font color="#CCCCCC"> of these issues</font>

82
00:03:18,580 --> 00:03:23,950
<font color="#E5E5E5">here's a 36 node</font><font color="#CCCCCC"> network you can</font><font color="#E5E5E5"> see the</font>

83
00:03:22,300 --> 00:03:26,770
green links or the<font color="#E5E5E5"> physical links the</font>

84
00:03:23,950 --> 00:03:30,190
route of the<font color="#CCCCCC"> root of this of this tree</font>

85
00:03:26,770 --> 00:03:31,840
<font color="#CCCCCC">is off there on the Left node 1 and the</font>

86
00:03:30,190 --> 00:03:35,290
spanning<font color="#CCCCCC"> tree is drawn there and those</font>

87
00:03:31,840 --> 00:03:36,400
those pinkish links<font color="#CCCCCC"> we can see</font>

88
00:03:35,290 --> 00:03:38,859
<font color="#CCCCCC">immediately</font><font color="#E5E5E5"> a couple of the problems</font>

89
00:03:36,400 --> 00:03:40,480
<font color="#CCCCCC">with</font><font color="#E5E5E5"> this I can't physically use all of</font>

90
00:03:38,860 --> 00:03:44,620
the links in this network<font color="#E5E5E5"> that's not</font>

91
00:03:40,480 --> 00:03:46,600
ideal<font color="#CCCCCC"> the path from</font><font color="#E5E5E5"> the source</font><font color="#CCCCCC"> to the</font>

92
00:03:44,620 --> 00:03:48,310
<font color="#E5E5E5">destination over there on the on the</font>

93
00:03:46,600 --> 00:03:50,230
extreme right<font color="#E5E5E5"> goes all the way up</font><font color="#CCCCCC"> that</font>

94
00:03:48,310 --> 00:03:52,930
tree<font color="#E5E5E5"> and all the way back</font><font color="#CCCCCC"> down again</font><font color="#E5E5E5"> so</font>

95
00:03:50,230 --> 00:03:55,329
that's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> ideal and thirdly all of the</font>

96
00:03:52,930 --> 00:03:57,190
<font color="#E5E5E5">addresses</font><font color="#CCCCCC"> off on the source</font><font color="#E5E5E5"> they're</font>

97
00:03:55,330 --> 00:03:59,230
hanging off<font color="#CCCCCC"> that</font><font color="#E5E5E5"> source node have to be</font>

98
00:03:57,190 --> 00:04:01,180
known by<font color="#E5E5E5"> all of the devices all the</font><font color="#CCCCCC"> way</font>

99
00:03:59,230 --> 00:04:03,760
up the tree and<font color="#E5E5E5"> back down again</font><font color="#CCCCCC"> so these</font>

100
00:04:01,180 --> 00:04:07,510
are not ideal properties for a lot<font color="#E5E5E5"> of a</font>

101
00:04:03,760 --> 00:04:10,660
lot<font color="#CCCCCC"> of applications so what is this 802</font>

102
00:04:07,510 --> 00:04:13,989
<font color="#CCCCCC">2.1 aq shortest path bridging protocol</font>

103
00:04:10,660 --> 00:04:16,238
<font color="#E5E5E5">it's essentially a night reply 802 2.1</font>

104
00:04:13,990 --> 00:04:18,790
protocol which built on top<font color="#E5E5E5"> of</font><font color="#CCCCCC"> all of</font>

105
00:04:16,238 --> 00:04:20,469
<font color="#CCCCCC">the existing nato 2.1 standards</font><font color="#E5E5E5"> we're</font>

106
00:04:18,790 --> 00:04:22,570
<font color="#E5E5E5">not in validating anything that already</font>

107
00:04:20,470 --> 00:04:24,970
exists<font color="#E5E5E5"> it's essentially a new control</font>

108
00:04:22,570 --> 00:04:25,980
plane designed to operate with<font color="#E5E5E5"> the q and</font>

109
00:04:24,970 --> 00:04:28,290
<font color="#E5E5E5">q and</font><font color="#CCCCCC"> Mac</font><font color="#E5E5E5"> and</font>

110
00:04:25,980 --> 00:04:30,120
data paths<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is very important</font>

111
00:04:28,290 --> 00:04:31,860
because<font color="#E5E5E5"> all the existing Asics out there</font>

112
00:04:30,120 --> 00:04:35,220
that support<font color="#E5E5E5"> Q and Q and Mac and</font><font color="#CCCCCC"> Mac</font>

113
00:04:31,860 --> 00:04:37,530
<font color="#E5E5E5">many of them can operate</font><font color="#CCCCCC"> 802 don't 1aq</font>

114
00:04:35,220 --> 00:04:40,410
unchanged<font color="#E5E5E5"> so it's it's a</font><font color="#CCCCCC"> very</font>

115
00:04:37,530 --> 00:04:42,450
inexpensive option<font color="#E5E5E5"> the q and q mode is</font>

116
00:04:40,410 --> 00:04:45,630
referred to as<font color="#CCCCCC"> v mode and the Mac and</font>

117
00:04:42,450 --> 00:04:48,060
Mac mode is referred to as M mode<font color="#E5E5E5"> again</font>

118
00:04:45,630 --> 00:04:50,400
as I said<font color="#CCCCCC"> backward compatibility</font><font color="#E5E5E5"> with</font>

119
00:04:48,060 --> 00:04:53,940
<font color="#CCCCCC">the ADA 2.1 protocols in particular the</font>

120
00:04:50,400 --> 00:04:55,530
AG<font color="#CCCCCC"> 1731</font><font color="#E5E5E5"> and and forward compatible or</font>

121
00:04:53,940 --> 00:04:58,560
sideways depends on how you<font color="#E5E5E5"> define it</font>

122
00:04:55,530 --> 00:05:00,150
with the the currently<font color="#E5E5E5"> being defined</font>

123
00:04:58,560 --> 00:05:03,270
data center bridging<font color="#E5E5E5"> suite of protocols</font>

124
00:05:00,150 --> 00:05:04,859
<font color="#E5E5E5">but the primary goal</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> application</font>

125
00:05:03,270 --> 00:05:07,799
<font color="#CCCCCC">this protocol</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to produce multiple</font>

126
00:05:04,860 --> 00:05:10,470
loop free shortest paths<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and want</font>

127
00:05:07,800 --> 00:05:12,450
to<font color="#E5E5E5"> use the existing mesh completely and</font>

128
00:05:10,470 --> 00:05:14,220
we want to be able to use multiple

129
00:05:12,450 --> 00:05:16,830
shortest paths<font color="#E5E5E5"> in this case we can</font>

130
00:05:14,220 --> 00:05:19,230
<font color="#E5E5E5">currently support</font><font color="#CCCCCC"> 16 shortest paths</font><font color="#E5E5E5"> and</font>

131
00:05:16,830 --> 00:05:21,270
there's opaque mechanisms to allow<font color="#E5E5E5"> us to</font>

132
00:05:19,230 --> 00:05:23,790
go even<font color="#E5E5E5"> further in</font><font color="#CCCCCC"> the future</font>

133
00:05:21,270 --> 00:05:25,380
multicast mechanisms<font color="#CCCCCC"> to multicast</font>

134
00:05:23,790 --> 00:05:28,110
mechanisms one is<font color="#CCCCCC"> a head end replication</font>

135
00:05:25,380 --> 00:05:30,570
<font color="#CCCCCC">model</font><font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to a VPLS style and the</font>

136
00:05:28,110 --> 00:05:33,330
other is pure transit replication of the

137
00:05:30,570 --> 00:05:36,420
<font color="#E5E5E5">appropriate replication points all all</font>

138
00:05:33,330 --> 00:05:38,070
within<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> protocol now because the</font>

139
00:05:36,420 --> 00:05:39,720
protocol is completely deterministic

140
00:05:38,070 --> 00:05:42,180
<font color="#E5E5E5">because the routes are produced</font>

141
00:05:39,720 --> 00:05:43,650
deterministically<font color="#E5E5E5"> offline tools allow</font>

142
00:05:42,180 --> 00:05:45,750
you to<font color="#E5E5E5"> predict exactly where your</font>

143
00:05:43,650 --> 00:05:48,090
traffic is<font color="#E5E5E5"> going to go and the nice</font>

144
00:05:45,750 --> 00:05:50,130
<font color="#CCCCCC">thing about this is that you can through</font>

145
00:05:48,090 --> 00:05:51,869
head<font color="#E5E5E5"> and assignment all traffic to the</font>

146
00:05:50,130 --> 00:05:53,640
different shortest paths<font color="#E5E5E5"> you can do a</font>

147
00:05:51,870 --> 00:05:56,670
form of<font color="#CCCCCC"> lightweight traffic engineering</font>

148
00:05:53,640 --> 00:05:58,050
<font color="#CCCCCC">this is a it doesn't</font><font color="#E5E5E5"> involve</font><font color="#CCCCCC"> C SPF and</font>

149
00:05:56,670 --> 00:05:59,370
<font color="#E5E5E5">signaling and all of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> but</font>

150
00:05:58,050 --> 00:06:00,960
<font color="#E5E5E5">nonetheless he gives you a degree</font><font color="#CCCCCC"> of</font>

151
00:05:59,370 --> 00:06:04,470
<font color="#CCCCCC">balance and</font><font color="#E5E5E5"> control</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> your network</font>

152
00:06:00,960 --> 00:06:06,479
previously that<font color="#E5E5E5"> it wasn't available</font><font color="#CCCCCC"> the</font>

153
00:06:04,470 --> 00:06:08,160
is<font color="#E5E5E5"> is protocol is the the link to a</font>

154
00:06:06,480 --> 00:06:10,530
protocol<font color="#CCCCCC"> used to drive shortest path</font>

155
00:06:08,160 --> 00:06:13,140
bridging<font color="#E5E5E5"> and of course is is has already</font>

156
00:06:10,530 --> 00:06:16,289
<font color="#CCCCCC">been demonstrated to work</font><font color="#E5E5E5"> considerably</font>

157
00:06:13,140 --> 00:06:18,810
larger than than a thousand<font color="#E5E5E5"> nodes</font><font color="#CCCCCC"> and so</font>

158
00:06:16,290 --> 00:06:20,340
this is a good choice for<font color="#E5E5E5"> this for this</font>

159
00:06:18,810 --> 00:06:21,990
protocol<font color="#CCCCCC"> there's already a</font><font color="#E5E5E5"> huge</font>

160
00:06:20,340 --> 00:06:24,869
improvement<font color="#E5E5E5"> over the</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of scales that</font>

161
00:06:21,990 --> 00:06:27,210
we can do with<font color="#E5E5E5"> rings or with the</font>

162
00:06:24,870 --> 00:06:29,040
spanning<font color="#CCCCCC"> few protocols the convergence</font>

163
00:06:27,210 --> 00:06:30,479
times<font color="#E5E5E5"> well good convergence times</font>

164
00:06:29,040 --> 00:06:31,340
excellent<font color="#E5E5E5"> convergence times with a</font>

165
00:06:30,480 --> 00:06:33,780
minimum of<font color="#E5E5E5"> fuss</font>

166
00:06:31,340 --> 00:06:37,710
<font color="#CCCCCC">certainly</font><font color="#E5E5E5"> sub-second</font>

167
00:06:33,780 --> 00:06:39,330
our paths<font color="#E5E5E5"> to get sub</font><font color="#CCCCCC"> 100 millisecond</font>

168
00:06:37,710 --> 00:06:41,909
conversions<font color="#CCCCCC"> using various</font><font color="#E5E5E5"> hardware</font>

169
00:06:39,330 --> 00:06:43,440
multicast mechanisms I've got a slide at

170
00:06:41,910 --> 00:06:47,580
<font color="#E5E5E5">the very end here which talks about that</font>

171
00:06:43,440 --> 00:06:50,280
<font color="#E5E5E5">very briefly</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> some pretty standard</font>

172
00:06:47,580 --> 00:06:51,900
deployments there's a 50 or<font color="#E5E5E5"> 60 node</font><font color="#CCCCCC"> pre</font>

173
00:06:50,280 --> 00:06:53,940
standard<font color="#CCCCCC"> deployment that</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> actually</font>

174
00:06:51,900 --> 00:06:55,950
reporting 300 millisecond recovery times

175
00:06:53,940 --> 00:06:58,320
<font color="#CCCCCC">and that includes all of the replication</font>

176
00:06:55,950 --> 00:07:02,159
points and so forth for for hundreds<font color="#E5E5E5"> and</font>

177
00:06:58,320 --> 00:07:05,550
hundreds of services of layer 2 VPNs

178
00:07:02,160 --> 00:07:08,280
within the network<font color="#CCCCCC"> the is is</font><font color="#E5E5E5"> protocol as</font>

179
00:07:05,550 --> 00:07:11,220
I said is<font color="#E5E5E5"> it's chosen to to</font><font color="#CCCCCC"> support this</font>

180
00:07:08,280 --> 00:07:13,200
<font color="#CCCCCC">82 don't 1aq</font><font color="#E5E5E5"> and it can operate either</font>

181
00:07:11,220 --> 00:07:16,830
is a<font color="#E5E5E5"> completely independent</font><font color="#CCCCCC"> is is</font>

182
00:07:13,200 --> 00:07:18,450
instance or<font color="#E5E5E5"> you can run the</font><font color="#CCCCCC"> shortest</font>

183
00:07:16,830 --> 00:07:20,870
path<font color="#CCCCCC"> routing protocol</font><font color="#E5E5E5"> within</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> eius</font>

184
00:07:18,450 --> 00:07:23,430
<font color="#E5E5E5">eius instance</font><font color="#CCCCCC"> there's also</font><font color="#E5E5E5"> supporting IP</font>

185
00:07:20,870 --> 00:07:26,790
<font color="#CCCCCC">the protocol</font><font color="#E5E5E5"> itself really doesn't mind</font>

186
00:07:23,430 --> 00:07:28,290
it's just additive to<font color="#E5E5E5"> to</font><font color="#CCCCCC"> eius eius</font><font color="#E5E5E5"> it</font>

187
00:07:26,790 --> 00:07:31,169
also<font color="#E5E5E5"> supports the multi topology</font>

188
00:07:28,290 --> 00:07:32,960
extensions for is<font color="#E5E5E5"> is so that those</font><font color="#CCCCCC"> of</font>

189
00:07:31,169 --> 00:07:39,630
<font color="#E5E5E5">those extensions to is is are</font>

190
00:07:32,960 --> 00:07:41,400
transparent to<font color="#CCCCCC"> 2aq the a nice</font>

191
00:07:39,630 --> 00:07:43,080
simplification<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we did with with</font>

192
00:07:41,400 --> 00:07:45,570
<font color="#CCCCCC">shortest path bridging was to advertise</font>

193
00:07:43,080 --> 00:07:48,419
membership<font color="#E5E5E5"> information so membership in</font>

194
00:07:45,570 --> 00:07:49,950
a layer 2 VPN is advertised within the

195
00:07:48,419 --> 00:07:52,409
same protocol that advertises the

196
00:07:49,950 --> 00:07:54,560
topology<font color="#CCCCCC"> and so what this gives you is a</font>

197
00:07:52,410 --> 00:07:56,610
<font color="#E5E5E5">very simple</font><font color="#CCCCCC"> plug-and-play mechanism</font><font color="#E5E5E5"> and</font>

198
00:07:54,560 --> 00:07:57,870
membership information<font color="#E5E5E5"> allows you to</font>

199
00:07:56,610 --> 00:07:59,310
<font color="#E5E5E5">create you know if you have two members</font>

200
00:07:57,870 --> 00:08:02,039
<font color="#CCCCCC">you get an e line if you have</font><font color="#E5E5E5"> three</font>

201
00:07:59,310 --> 00:08:03,180
<font color="#E5E5E5">members or more you get an eland</font><font color="#CCCCCC"> and</font>

202
00:08:02,039 --> 00:08:05,849
depending<font color="#E5E5E5"> on the properties of</font>

203
00:08:03,180 --> 00:08:09,900
membership you<font color="#CCCCCC"> can create tree or</font><font color="#E5E5E5"> other</font>

204
00:08:05,850 --> 00:08:11,340
kinds of communities<font color="#CCCCCC"> and</font><font color="#E5E5E5"> these are all</font>

205
00:08:09,900 --> 00:08:13,169
<font color="#E5E5E5">just variations on the membership</font>

206
00:08:11,340 --> 00:08:16,320
attributes so we have transmit and

207
00:08:13,169 --> 00:08:19,229
receive attributes and<font color="#E5E5E5"> head end or</font>

208
00:08:16,320 --> 00:08:20,789
transit replication attributes<font color="#E5E5E5"> if you</font>

209
00:08:19,229 --> 00:08:24,120
use the<font color="#E5E5E5"> Mac in Mac data path mode</font>

210
00:08:20,789 --> 00:08:25,380
<font color="#E5E5E5">shortest path bridging will restrict the</font>

211
00:08:24,120 --> 00:08:28,470
address learning to the edge of the

212
00:08:25,380 --> 00:08:30,180
network<font color="#E5E5E5"> that's just the basic</font><font color="#CCCCCC"> behavior</font>

213
00:08:28,470 --> 00:08:31,830
of Mac and Mac<font color="#E5E5E5"> and</font><font color="#CCCCCC"> in this</font><font color="#E5E5E5"> case the</font>

214
00:08:30,180 --> 00:08:33,570
<font color="#E5E5E5">forwarding database is computed and</font>

215
00:08:31,830 --> 00:08:36,569
populated very much the way a router

216
00:08:33,570 --> 00:08:38,159
computer you know<font color="#E5E5E5"> a Dijkstra calculation</font>

217
00:08:36,570 --> 00:08:39,960
computes the shortest path and populates

218
00:08:38,159 --> 00:08:42,088
the<font color="#CCCCCC"> fording table</font><font color="#E5E5E5"> main difference here</font>

219
00:08:39,960 --> 00:08:44,370
<font color="#E5E5E5">is that</font><font color="#CCCCCC"> the unicast and multicast are</font>

220
00:08:42,089 --> 00:08:46,980
populated at the same time and we also

221
00:08:44,370 --> 00:08:48,850
make these guarantees

222
00:08:46,980 --> 00:08:50,459
symmetry and congruence so the

223
00:08:48,850 --> 00:08:53,380
calculations have some special

224
00:08:50,459 --> 00:08:56,380
<font color="#CCCCCC">tiebreaking mechanisms that guarantee</font>

225
00:08:53,380 --> 00:08:58,000
that the the routes between<font color="#CCCCCC"> a source</font><font color="#E5E5E5"> and</font>

226
00:08:56,380 --> 00:08:59,920
destination will be<font color="#E5E5E5"> the same within</font><font color="#CCCCCC"> a</font>

227
00:08:58,000 --> 00:09:02,080
given<font color="#E5E5E5"> type raking or a given ecmp</font>

228
00:08:59,920 --> 00:09:03,819
behavior<font color="#E5E5E5"> and there's a certain amount</font><font color="#CCCCCC"> of</font>

229
00:09:02,080 --> 00:09:05,500
<font color="#CCCCCC">tune ability with respect to</font><font color="#E5E5E5"> this ecmp</font>

230
00:09:03,820 --> 00:09:08,050
<font color="#E5E5E5">behavior as well you can tweak and</font>

231
00:09:05,500 --> 00:09:11,860
twiddle this to actually<font color="#CCCCCC"> move the paths</font>

232
00:09:08,050 --> 00:09:13,180
around<font color="#E5E5E5"> so you know a picture's worth a</font>

233
00:09:11,860 --> 00:09:16,120
thousand words

234
00:09:13,180 --> 00:09:18,370
this is actually a series of screen

235
00:09:16,120 --> 00:09:20,500
captures<font color="#E5E5E5"> from one of my network</font>

236
00:09:18,370 --> 00:09:22,420
emulation tools<font color="#CCCCCC"> guys in my group put</font>

237
00:09:20,500 --> 00:09:25,330
together<font color="#E5E5E5"> shows</font><font color="#CCCCCC"> the sources and</font>

238
00:09:22,420 --> 00:09:27,729
<font color="#CCCCCC">destinations</font><font color="#E5E5E5"> around a and</font><font color="#CCCCCC"> aq</font><font color="#E5E5E5"> network and</font>

239
00:09:25,330 --> 00:09:29,380
you<font color="#E5E5E5"> can see the</font><font color="#CCCCCC"> sixteen dcmp paths so</font>

240
00:09:27,730 --> 00:09:32,140
you you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> immediately see</font><font color="#CCCCCC"> that it's</font>

241
00:09:29,380 --> 00:09:33,370
giving a very good set of<font color="#E5E5E5"> paths through</font>

242
00:09:32,140 --> 00:09:36,670
this<font color="#E5E5E5"> network between the different</font>

243
00:09:33,370 --> 00:09:38,260
sources<font color="#E5E5E5"> and destinations</font><font color="#CCCCCC"> and all</font><font color="#E5E5E5"> of the</font>

244
00:09:36,670 --> 00:09:43,420
<font color="#E5E5E5">links in this particular network are</font>

245
00:09:38,260 --> 00:09:45,550
usable so where would<font color="#E5E5E5"> this protocol be</font>

246
00:09:43,420 --> 00:09:47,890
of use well in a number<font color="#CCCCCC"> of places the</font>

247
00:09:45,550 --> 00:09:51,609
first<font color="#E5E5E5"> obvious</font><font color="#CCCCCC"> places if you're using M</font>

248
00:09:47,890 --> 00:09:52,990
<font color="#CCCCCC">STP</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you want to do replace</font><font color="#E5E5E5"> it and if</font>

249
00:09:51,610 --> 00:09:56,440
you do then you're<font color="#E5E5E5"> going to be able to</font>

250
00:09:52,990 --> 00:09:58,270
<font color="#E5E5E5">go to a much larger layer</font><font color="#CCCCCC"> too you can do</font>

251
00:09:56,440 --> 00:10:00,820
this without resorting to<font color="#E5E5E5"> the MSTP</font>

252
00:09:58,270 --> 00:10:02,470
regions<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> gonna have a very</font><font color="#CCCCCC"> low</font>

253
00:10:00,820 --> 00:10:04,630
<font color="#CCCCCC">effort to get good routing because</font><font color="#E5E5E5"> with</font>

254
00:10:02,470 --> 00:10:05,980
<font color="#CCCCCC">MSTP you're going to be creating lots of</font>

255
00:10:04,630 --> 00:10:07,959
different trees in order<font color="#CCCCCC"> to get the</font>

256
00:10:05,980 --> 00:10:10,450
routes to go the way you want here those

257
00:10:07,959 --> 00:10:11,979
trees are automatically created<font color="#CCCCCC"> and the</font>

258
00:10:10,450 --> 00:10:13,770
<font color="#E5E5E5">routing is automatically shortest</font><font color="#CCCCCC"> paths</font>

259
00:10:11,980 --> 00:10:15,910
<font color="#E5E5E5">so you don't have to go to that effort</font>

260
00:10:13,770 --> 00:10:18,579
<font color="#E5E5E5">convergence times like I said are going</font>

261
00:10:15,910 --> 00:10:20,079
to be considerably<font color="#E5E5E5"> better and if you use</font>

262
00:10:18,579 --> 00:10:24,279
a Mac and Mac data path you're going<font color="#CCCCCC"> to</font>

263
00:10:20,079 --> 00:10:26,199
get the address<font color="#CCCCCC"> isolation for free the</font>

264
00:10:24,279 --> 00:10:28,420
data center<font color="#E5E5E5"> is</font><font color="#CCCCCC"> another application</font><font color="#E5E5E5"> where</font>

265
00:10:26,200 --> 00:10:31,959
shortest<font color="#E5E5E5"> path routing is a fairly hot</font>

266
00:10:28,420 --> 00:10:33,670
topic and<font color="#CCCCCC"> this is a number of reasons</font>

267
00:10:31,959 --> 00:10:36,130
for<font color="#CCCCCC"> this one</font><font color="#E5E5E5"> of the reasons</font><font color="#CCCCCC"> has to do</font>

268
00:10:33,670 --> 00:10:38,040
with the fact that the there's a lot<font color="#E5E5E5"> of</font>

269
00:10:36,130 --> 00:10:41,170
traffic<font color="#E5E5E5"> between</font><font color="#CCCCCC"> the different servers</font>

270
00:10:38,040 --> 00:10:42,790
<font color="#CCCCCC">maybe 50 to 70% of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> traffic within</font><font color="#E5E5E5"> a</font>

271
00:10:41,170 --> 00:10:44,410
day the<font color="#E5E5E5"> same may actually be between</font>

272
00:10:42,790 --> 00:10:45,910
servers<font color="#E5E5E5"> and of course if you don't use</font>

273
00:10:44,410 --> 00:10:47,290
shortest<font color="#CCCCCC"> path prodding you</font><font color="#E5E5E5"> go all</font><font color="#CCCCCC"> the</font>

274
00:10:45,910 --> 00:10:50,819
way up a tree and all<font color="#CCCCCC"> the way</font><font color="#E5E5E5"> back down</font>

275
00:10:47,290 --> 00:10:53,410
is<font color="#CCCCCC"> very inefficient one of the other</font>

276
00:10:50,820 --> 00:10:55,360
<font color="#E5E5E5">attributes of shortest path greeting</font>

277
00:10:53,410 --> 00:10:58,319
which is<font color="#E5E5E5"> particularly useful in a data</font>

278
00:10:55,360 --> 00:11:00,060
center<font color="#E5E5E5"> has to do with the flexibility</font>

279
00:10:58,320 --> 00:11:02,640
these these layer 2 VPNs that are

280
00:11:00,060 --> 00:11:04,469
created<font color="#CCCCCC"> to correspond to</font><font color="#E5E5E5"> a subnet</font><font color="#CCCCCC"> and</font>

281
00:11:02,640 --> 00:11:06,540
<font color="#E5E5E5">basically what it means is</font><font color="#CCCCCC"> that you can</font>

282
00:11:04,470 --> 00:11:09,420
you<font color="#CCCCCC"> can extend</font><font color="#E5E5E5"> and shrink and grow and</font>

283
00:11:06,540 --> 00:11:11,189
and move your subnet<font color="#E5E5E5"> points of</font>

284
00:11:09,420 --> 00:11:13,459
connectivity pretty much anywhere within

285
00:11:11,190 --> 00:11:18,120
this this physical network over a fairly

286
00:11:13,460 --> 00:11:19,260
broad range of of notes<font color="#CCCCCC"> and that's why I</font>

287
00:11:18,120 --> 00:11:22,290
said that's very important<font color="#CCCCCC"> for the</font>

288
00:11:19,260 --> 00:11:23,700
virtualization<font color="#E5E5E5"> of concepts</font><font color="#CCCCCC"> compatibility</font>

289
00:11:22,290 --> 00:11:25,740
with<font color="#E5E5E5"> a data center bridging protocols</font>

290
00:11:23,700 --> 00:11:27,390
<font color="#CCCCCC">and OEM</font><font color="#E5E5E5"> the address isolation</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> gain</font>

291
00:11:25,740 --> 00:11:29,700
is<font color="#E5E5E5"> also something that in the data</font>

292
00:11:27,390 --> 00:11:31,260
center<font color="#CCCCCC"> is a very</font><font color="#E5E5E5"> important large members</font>

293
00:11:29,700 --> 00:11:32,580
of<font color="#E5E5E5"> MAC</font><font color="#CCCCCC"> addresses</font><font color="#E5E5E5"> coming from all</font><font color="#CCCCCC"> of</font>

294
00:11:31,260 --> 00:11:33,960
these different<font color="#CCCCCC"> servers we don't want</font>

295
00:11:32,580 --> 00:11:35,640
the course which is to have to know

296
00:11:33,960 --> 00:11:37,020
about<font color="#E5E5E5"> those and some form of</font>

297
00:11:35,640 --> 00:11:39,240
encapsulation takes care of that

298
00:11:37,020 --> 00:11:42,079
<font color="#E5E5E5">obviously</font><font color="#CCCCCC"> we want fast</font><font color="#E5E5E5"> recovery and we</font>

299
00:11:39,240 --> 00:11:44,790
definitely<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> want to go on loops</font>

300
00:11:42,080 --> 00:11:48,300
<font color="#CCCCCC">just talking a little bit more about</font>

301
00:11:44,790 --> 00:11:51,469
<font color="#E5E5E5">some of the virtualization</font><font color="#CCCCCC"> applications</font>

302
00:11:48,300 --> 00:11:54,870
<font color="#CCCCCC">that use the VMware mechanisms of</font><font color="#E5E5E5"> VMware</font>

303
00:11:51,470 --> 00:11:58,130
<font color="#E5E5E5">om or VM</font><font color="#CCCCCC"> V motion</font><font color="#E5E5E5"> and and some of these</font>

304
00:11:54,870 --> 00:12:00,540
other mechanisms<font color="#CCCCCC"> depend on layer</font><font color="#E5E5E5"> 2</font>

305
00:11:58,130 --> 00:12:03,420
<font color="#E5E5E5">broadcast mechanisms layer 2 multicast</font>

306
00:12:00,540 --> 00:12:06,569
mechanisms in particular the one of the

307
00:12:03,420 --> 00:12:08,069
key ones is in<font color="#E5E5E5"> order to move an IP</font>

308
00:12:06,570 --> 00:12:10,680
<font color="#CCCCCC">address from</font><font color="#E5E5E5"> one place to another they</font>

309
00:12:08,070 --> 00:12:12,750
do reverse<font color="#E5E5E5"> our things within the within</font>

310
00:12:10,680 --> 00:12:14,640
the<font color="#E5E5E5"> the subnet</font><font color="#CCCCCC"> so the ability to</font><font color="#E5E5E5"> make</font>

311
00:12:12,750 --> 00:12:16,740
that subnet go anywhere you want<font color="#E5E5E5"> within</font>

312
00:12:14,640 --> 00:12:18,900
me within<font color="#E5E5E5"> the data center</font><font color="#CCCCCC"> or we're in a</font>

313
00:12:16,740 --> 00:12:21,360
larger span within<font color="#E5E5E5"> that data center</font>

314
00:12:18,900 --> 00:12:24,750
increases the<font color="#E5E5E5"> the span over which these</font>

315
00:12:21,360 --> 00:12:26,730
<font color="#E5E5E5">these protocols will just work in terms</font>

316
00:12:24,750 --> 00:12:29,160
of things<font color="#E5E5E5"> like Microsoft load balancing</font>

317
00:12:26,730 --> 00:12:32,040
<font color="#E5E5E5">one of the modes is a multicast over</font>

318
00:12:29,160 --> 00:12:34,980
<font color="#E5E5E5">layer 2 so I gain you need a multicast</font>

319
00:12:32,040 --> 00:12:36,900
<font color="#E5E5E5">layer 2 solution in order to for that to</font>

320
00:12:34,980 --> 00:12:38,610
operate and and making that<font color="#E5E5E5"> work on a</font>

321
00:12:36,900 --> 00:12:41,850
larger scale is a very useful<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> to</font>

322
00:12:38,610 --> 00:12:45,090
do<font color="#E5E5E5"> vrrp of course the multicast between</font>

323
00:12:41,850 --> 00:12:46,650
the two the two<font color="#E5E5E5"> routers so really what's</font>

324
00:12:45,090 --> 00:12:48,860
happening here in the data center<font color="#CCCCCC"> is</font>

325
00:12:46,650 --> 00:12:51,209
<font color="#CCCCCC">that a shortest path</font><font color="#E5E5E5"> bridging protocol</font>

326
00:12:48,860 --> 00:12:53,730
simply allows the layer to portion of

327
00:12:51,210 --> 00:12:55,440
that data center<font color="#E5E5E5"> to grow bigger and that</font>

328
00:12:53,730 --> 00:13:00,150
allows the virtualization to operate

329
00:12:55,440 --> 00:13:03,060
over that over<font color="#CCCCCC"> that larger span in a</font>

330
00:13:00,150 --> 00:13:04,620
small<font color="#CCCCCC"> Metro shortest path bridging can</font>

331
00:13:03,060 --> 00:13:06,780
offer a very lightweight and<font color="#E5E5E5"> very</font>

332
00:13:04,620 --> 00:13:09,510
<font color="#E5E5E5">inexpensive solution for providing layer</font>

333
00:13:06,780 --> 00:13:11,670
2 VPNs<font color="#E5E5E5"> so the line</font><font color="#CCCCCC"> kneel and</font>

334
00:13:09,510 --> 00:13:12,900
<font color="#CCCCCC">three</font><font color="#E5E5E5"> flavors and so you can think of</font>

335
00:13:11,670 --> 00:13:16,770
this as<font color="#CCCCCC"> a</font><font color="#E5E5E5"> sort of a very very</font>

336
00:13:12,900 --> 00:13:18,780
<font color="#E5E5E5">inexpensive form of VPLS you can do the</font>

337
00:13:16,770 --> 00:13:21,390
VPLS style head<font color="#E5E5E5"> end replication by</font>

338
00:13:18,780 --> 00:13:24,660
setting a flag one way at a member

339
00:13:21,390 --> 00:13:26,970
membership in<font color="#E5E5E5"> one of these services</font><font color="#CCCCCC"> or</font>

340
00:13:24,660 --> 00:13:28,560
you can set it<font color="#CCCCCC"> for</font><font color="#E5E5E5"> multicast replication</font>

341
00:13:26,970 --> 00:13:30,900
<font color="#E5E5E5">in which</font><font color="#CCCCCC"> garrote</font><font color="#E5E5E5"> end</font>

342
00:13:28,560 --> 00:13:31,800
sorry transit replication<font color="#CCCCCC"> in which case</font>

343
00:13:30,900 --> 00:13:34,949
<font color="#CCCCCC">it'll behave just like a</font>

344
00:13:31,800 --> 00:13:37,589
point-to-multipoint<font color="#E5E5E5"> except without all</font>

345
00:13:34,950 --> 00:13:39,420
<font color="#CCCCCC">of the signaling required so it's a game</font>

346
00:13:37,590 --> 00:13:43,020
<font color="#CCCCCC">plug-and-play</font><font color="#E5E5E5"> mechanisms will allow you</font>

347
00:13:39,420 --> 00:13:47,160
to to do this<font color="#E5E5E5"> even</font><font color="#CCCCCC"> within</font><font color="#E5E5E5"> a larger scale</font>

348
00:13:43,020 --> 00:13:49,439
such<font color="#CCCCCC"> as a such as a</font><font color="#E5E5E5"> metro so how does</font>

349
00:13:47,160 --> 00:13:50,969
this all work<font color="#CCCCCC"> well from the operators</font>

350
00:13:49,440 --> 00:13:54,840
perspective<font color="#CCCCCC"> this is really very simple</font>

351
00:13:50,970 --> 00:13:57,600
<font color="#CCCCCC">you plug the</font><font color="#E5E5E5"> N and</font><font color="#CCCCCC"> i's</font><font color="#E5E5E5"> together</font><font color="#CCCCCC"> you</font>

352
00:13:54,840 --> 00:13:59,070
group<font color="#CCCCCC"> V and the topology comes up you</font>

353
00:13:57,600 --> 00:14:01,250
don't<font color="#E5E5E5"> have to assign addresses</font><font color="#CCCCCC"> or doing</font>

354
00:13:59,070 --> 00:14:04,260
being fancy there<font color="#E5E5E5"> you then group the</font>

355
00:14:01,250 --> 00:14:06,300
logical ports<font color="#E5E5E5"> at the you knees that you</font>

356
00:14:04,260 --> 00:14:10,920
wish to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> bridge together so whatever</font>

357
00:14:06,300 --> 00:14:13,469
tagging or untagging forms those logical

358
00:14:10,920 --> 00:14:16,319
ports is<font color="#E5E5E5"> orthogonal</font><font color="#CCCCCC"> to the protocol</font><font color="#E5E5E5"> and</font>

359
00:14:13,470 --> 00:14:18,630
<font color="#E5E5E5">you then assign a group number</font><font color="#CCCCCC"> to each</font>

360
00:14:16,320 --> 00:14:21,270
of them this<font color="#CCCCCC"> is the IC</font><font color="#E5E5E5"> of the service</font>

361
00:14:18,630 --> 00:14:23,010
identifier and Mac<font color="#CCCCCC"> and Mac</font><font color="#E5E5E5"> and that's</font>

362
00:14:21,270 --> 00:14:24,930
all you have to do they then<font color="#E5E5E5"> are bridged</font>

363
00:14:23,010 --> 00:14:28,319
<font color="#E5E5E5">and the traffic follows the shortest</font>

364
00:14:24,930 --> 00:14:29,819
paths and<font color="#E5E5E5"> as I just described internally</font>

365
00:14:28,320 --> 00:14:32,340
what happens is a little bit more

366
00:14:29,820 --> 00:14:34,500
complicated obviously<font color="#E5E5E5"> the is is protocol</font>

367
00:14:32,340 --> 00:14:37,020
will read a box MAC address so there's a

368
00:14:34,500 --> 00:14:39,060
box based Mac which comes from the

369
00:14:37,020 --> 00:14:40,890
<font color="#E5E5E5">factory or what you can configure it if</font>

370
00:14:39,060 --> 00:14:43,439
you want you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have to it'll form</font>

371
00:14:40,890 --> 00:14:46,770
the NNI adjacencies using<font color="#CCCCCC"> our sis</font><font color="#E5E5E5"> hello</font>

372
00:14:43,440 --> 00:14:48,720
nothing special<font color="#E5E5E5"> happening different</font><font color="#CCCCCC"> the</font>

373
00:14:46,770 --> 00:14:50,189
is<font color="#CCCCCC"> is</font><font color="#E5E5E5"> cool and advertise those MAC</font>

374
00:14:48,720 --> 00:14:54,060
addresses again no configuration

375
00:14:50,190 --> 00:14:56,070
<font color="#E5E5E5">required and then the you know one of</font>

376
00:14:54,060 --> 00:14:58,680
<font color="#E5E5E5">the the differences</font><font color="#CCCCCC"> here is that is is</font>

377
00:14:56,070 --> 00:15:01,410
<font color="#E5E5E5">will then look at the assignments of</font>

378
00:14:58,680 --> 00:15:04,349
services<font color="#E5E5E5"> to ports it will then advertise</font>

379
00:15:01,410 --> 00:15:06,569
that information along with the topology

380
00:15:04,350 --> 00:15:08,460
<font color="#CCCCCC">information so now every node in the</font>

381
00:15:06,570 --> 00:15:10,080
network knows the complete topology and

382
00:15:08,460 --> 00:15:12,720
what services<font color="#E5E5E5"> are</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> from where to</font>

383
00:15:10,080 --> 00:15:14,160
where<font color="#E5E5E5"> and it can then compute</font><font color="#CCCCCC"> the</font>

384
00:15:12,720 --> 00:15:15,910
appropriate forwarding table entries

385
00:15:14,160 --> 00:15:19,120
such that the

386
00:15:15,910 --> 00:15:23,610
those<font color="#CCCCCC"> services are bridged</font><font color="#E5E5E5"> and isolated</font>

387
00:15:19,120 --> 00:15:23,610
obviously from<font color="#E5E5E5"> non participating members</font>

388
00:15:23,940 --> 00:15:28,870
so what does the data<font color="#E5E5E5"> path look like the</font>

389
00:15:26,920 --> 00:15:31,089
Mac and Mac mode packet arise either

390
00:15:28,870 --> 00:15:33,610
tagged or untagged<font color="#CCCCCC"> at</font><font color="#E5E5E5"> uni</font><font color="#CCCCCC"> its</font>

391
00:15:31,089 --> 00:15:36,310
encapsulated<font color="#E5E5E5"> with the MAC address</font><font color="#CCCCCC"> source</font>

392
00:15:33,610 --> 00:15:38,019
of the source<font color="#CCCCCC"> address of the bridge</font>

393
00:15:36,310 --> 00:15:39,790
<font color="#E5E5E5">it's then encapsulated with</font><font color="#CCCCCC"> a service</font>

394
00:15:38,019 --> 00:15:43,389
identifier<font color="#CCCCCC"> that identifies the group</font>

395
00:15:39,790 --> 00:15:45,730
that<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is a member off and then the vid</font>

396
00:15:43,389 --> 00:15:47,529
that is used to<font color="#E5E5E5"> route the packet through</font>

397
00:15:45,730 --> 00:15:50,920
this<font color="#E5E5E5"> through this network is chosen</font>

398
00:15:47,529 --> 00:15:54,699
<font color="#E5E5E5">either automatically or based on some</font>

399
00:15:50,920 --> 00:15:56,500
offline or or<font color="#E5E5E5"> a user preference and then</font>

400
00:15:54,699 --> 00:15:59,469
<font color="#E5E5E5">the interesting part happens we</font><font color="#CCCCCC"> we look</font>

401
00:15:56,500 --> 00:16:01,959
up the the end station address<font color="#CCCCCC"> if we</font>

402
00:15:59,470 --> 00:16:04,000
find it<font color="#E5E5E5"> well we know exactly what egress</font>

403
00:16:01,959 --> 00:16:05,739
node that corresponds to what egress a

404
00:16:04,000 --> 00:16:08,110
<font color="#CCCCCC">queue node that corresponds to so we</font>

405
00:16:05,740 --> 00:16:11,980
insert<font color="#E5E5E5"> the destination address as the</font>

406
00:16:08,110 --> 00:16:14,339
egress<font color="#E5E5E5"> MAC address of</font><font color="#CCCCCC"> that all</font><font color="#E5E5E5"> that end</font>

407
00:16:11,980 --> 00:16:16,569
that<font color="#CCCCCC"> end box and all that goes unicast</font>

408
00:16:14,339 --> 00:16:19,329
<font color="#CCCCCC">the</font><font color="#E5E5E5"> interesting thing happens</font><font color="#CCCCCC"> now of</font>

409
00:16:16,569 --> 00:16:20,860
course if we don't find<font color="#E5E5E5"> it there are two</font>

410
00:16:19,329 --> 00:16:24,399
options<font color="#E5E5E5"> here if we don't find it one</font>

411
00:16:20,860 --> 00:16:26,170
option is<font color="#E5E5E5"> that we can multicast it using</font>

412
00:16:24,399 --> 00:16:27,790
a head end replication<font color="#E5E5E5"> mechanism so</font><font color="#CCCCCC"> we</font>

413
00:16:26,170 --> 00:16:30,579
<font color="#E5E5E5">just had and replicated to all of the</font>

414
00:16:27,790 --> 00:16:32,529
other members<font color="#CCCCCC"> of this group</font><font color="#E5E5E5"> or if it's</font>

415
00:16:30,579 --> 00:16:34,479
or if we've selected<font color="#E5E5E5"> that we wish</font><font color="#CCCCCC"> to</font>

416
00:16:32,529 --> 00:16:36,670
<font color="#E5E5E5">have transit replication then what</font>

417
00:16:34,480 --> 00:16:38,290
happens is<font color="#CCCCCC"> that a multicast address is</font>

418
00:16:36,670 --> 00:16:40,540
formed that<font color="#E5E5E5"> says the packet has come</font>

419
00:16:38,290 --> 00:16:43,360
<font color="#E5E5E5">from me it</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to this group and</font>

420
00:16:40,540 --> 00:16:44,949
the transit nodes have created multicast

421
00:16:43,360 --> 00:16:47,649
<font color="#E5E5E5">state that will afford the packet along</font>

422
00:16:44,949 --> 00:16:54,790
<font color="#CCCCCC">the appropriate tree to those other</font>

423
00:16:47,649 --> 00:16:58,029
members<font color="#E5E5E5"> the unicast</font><font color="#CCCCCC"> transient State or</font>

424
00:16:54,790 --> 00:16:59,949
forwarding table<font color="#E5E5E5"> essentially produces or</font>

425
00:16:58,029 --> 00:17:02,319
it consists of a unique shortest<font color="#E5E5E5"> path</font>

426
00:16:59,949 --> 00:17:04,089
from this node to<font color="#E5E5E5"> all the other nodes so</font>

427
00:17:02,319 --> 00:17:06,369
<font color="#E5E5E5">we compute those shortest paths</font>

428
00:17:04,089 --> 00:17:07,688
<font color="#E5E5E5">similarly to what</font><font color="#CCCCCC"> we would do with with</font>

429
00:17:06,369 --> 00:17:11,829
Dijkstra and OSPF

430
00:17:07,689 --> 00:17:13,480
or IP is is and install those<font color="#E5E5E5"> the</font>

431
00:17:11,829 --> 00:17:16,809
forwarding<font color="#E5E5E5"> table of course contains a</font>

432
00:17:13,480 --> 00:17:19,870
<font color="#CCCCCC">BMAC for each of the each of the other</font>

433
00:17:16,809 --> 00:17:21,699
<font color="#E5E5E5">aq nodes and it points to</font><font color="#CCCCCC"> the</font>

434
00:17:19,869 --> 00:17:24,879
appropriate outgoing interface<font color="#E5E5E5"> to to get</font>

435
00:17:21,699 --> 00:17:27,400
<font color="#E5E5E5">to that along the shortest path that</font><font color="#CCCCCC"> is</font>

436
00:17:24,880 --> 00:17:28,940
being used<font color="#CCCCCC"> here we allow this to be</font>

437
00:17:27,400 --> 00:17:32,180
repeated for<font color="#CCCCCC"> sixteen</font><font color="#E5E5E5"> possible</font>

438
00:17:28,940 --> 00:17:34,070
<font color="#E5E5E5">shortest paths and so in a network you</font>

439
00:17:32,180 --> 00:17:35,810
might theoretically<font color="#CCCCCC"> use sixteen</font><font color="#E5E5E5"> bivas</font>

440
00:17:34,070 --> 00:17:38,330
<font color="#E5E5E5">total even if you had a thousand nodes</font>

441
00:17:35,810 --> 00:17:40,700
<font color="#E5E5E5">to allow you</font><font color="#CCCCCC"> sixteen</font><font color="#E5E5E5"> ecmp paths across</font>

442
00:17:38,330 --> 00:17:42,230
<font color="#CCCCCC">them across the network</font><font color="#E5E5E5"> the symmetry</font><font color="#CCCCCC"> of</font>

443
00:17:40,700 --> 00:17:43,700
routing<font color="#E5E5E5"> which is one of the properties</font>

444
00:17:42,230 --> 00:17:46,700
here is assured through special

445
00:17:43,700 --> 00:17:49,280
<font color="#CCCCCC">tiebreaking logic and sixteen different</font>

446
00:17:46,700 --> 00:17:51,200
<font color="#E5E5E5">tie breaking algorithms for for equal</font>

447
00:17:49,280 --> 00:17:54,770
cost<font color="#E5E5E5"> shortest</font><font color="#CCCCCC"> paths</font><font color="#E5E5E5"> allow</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> to produce</font>

448
00:17:51,200 --> 00:17:55,960
<font color="#CCCCCC">16 different</font><font color="#E5E5E5"> somewhat diverse reasonably</font>

449
00:17:54,770 --> 00:17:58,700
diverse routes

450
00:17:55,960 --> 00:18:02,210
<font color="#E5E5E5">here's a picture make this a little more</font>

451
00:17:58,700 --> 00:18:03,620
<font color="#E5E5E5">concrete here we have six nodes I've</font>

452
00:18:02,210 --> 00:18:05,720
just shown the<font color="#E5E5E5"> last nibble of the MAC</font>

453
00:18:03,620 --> 00:18:08,030
address<font color="#CCCCCC"> and between</font><font color="#E5E5E5"> these six nodes</font>

454
00:18:05,720 --> 00:18:11,600
between<font color="#E5E5E5"> nodes</font><font color="#CCCCCC"> 1 and node 4 there</font><font color="#E5E5E5"> are</font>

455
00:18:08,030 --> 00:18:13,310
actually<font color="#E5E5E5"> 4 equal cost paths the the pink</font>

456
00:18:11,600 --> 00:18:15,620
one the yellow one<font color="#E5E5E5"> the blue</font><font color="#CCCCCC"> one and</font><font color="#E5E5E5"> the</font>

457
00:18:13,310 --> 00:18:17,960
<font color="#CCCCCC">red one</font><font color="#E5E5E5"> and I've just shown a little</font>

458
00:18:15,620 --> 00:18:22,340
portion<font color="#E5E5E5"> of</font><font color="#CCCCCC"> two of the forwarding tables</font>

459
00:18:17,960 --> 00:18:26,210
here<font color="#E5E5E5"> the left most node one has four</font>

460
00:18:22,340 --> 00:18:29,959
entries for the the<font color="#E5E5E5"> Mac on the</font><font color="#CCCCCC"> right</font>

461
00:18:26,210 --> 00:18:32,620
<font color="#CCCCCC">four and you can see the different B</font>

462
00:18:29,960 --> 00:18:34,640
vids<font color="#E5E5E5"> that have been used 1 2</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 4 and</font>

463
00:18:32,620 --> 00:18:37,610
going to the appropriate<font color="#CCCCCC"> outgoing</font>

464
00:18:34,640 --> 00:18:40,280
interfaces in this case 9<font color="#E5E5E5"> 9 10 10 and</font>

465
00:18:37,610 --> 00:18:43,729
then of<font color="#CCCCCC"> course the the reverse symmetric</font>

466
00:18:40,280 --> 00:18:45,920
<font color="#E5E5E5">routes from node 4 back to node 1 again</font>

467
00:18:43,730 --> 00:18:48,620
choosing<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> B vids that correspond</font>

468
00:18:45,920 --> 00:18:51,080
to<font color="#E5E5E5"> reverse the</font><font color="#CCCCCC"> reverse route</font><font color="#E5E5E5"> so if we</font>

469
00:18:48,620 --> 00:18:52,669
had services originating at node 1 and

470
00:18:51,080 --> 00:18:54,919
terminating at node 4 we would assign

471
00:18:52,670 --> 00:18:56,840
them to one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these pivots and those</font>

472
00:18:54,920 --> 00:18:59,120
services<font color="#E5E5E5"> would flow along that</font><font color="#CCCCCC"> V vyd</font>

473
00:18:56,840 --> 00:19:01,129
other services<font color="#E5E5E5"> could</font><font color="#CCCCCC"> be assigned to</font>

474
00:18:59,120 --> 00:19:02,600
other<font color="#CCCCCC"> Davids they were slow on the on</font>

475
00:19:01,130 --> 00:19:04,910
the others and and that<font color="#E5E5E5"> would be</font>

476
00:19:02,600 --> 00:19:09,590
<font color="#CCCCCC">guaranteed and there'd</font><font color="#E5E5E5"> be no divergence</font>

477
00:19:04,910 --> 00:19:12,140
<font color="#E5E5E5">from those midstream so in the the</font>

478
00:19:09,590 --> 00:19:15,199
multicast forwarding table<font color="#CCCCCC"> it's actually</font>

479
00:19:12,140 --> 00:19:17,300
pretty<font color="#CCCCCC"> simple if if there's no</font><font color="#E5E5E5"> request</font>

480
00:19:15,200 --> 00:19:19,550
<font color="#CCCCCC">for transit replication there's nothing</font>

481
00:19:17,300 --> 00:19:21,020
to do no service asks for<font color="#E5E5E5"> transit</font>

482
00:19:19,550 --> 00:19:22,190
replication there's no multicast

483
00:19:21,020 --> 00:19:23,900
forwarding<font color="#E5E5E5"> state</font><font color="#CCCCCC"> in the core of the</font>

484
00:19:22,190 --> 00:19:25,730
network it's boring<font color="#CCCCCC"> its head end</font>

485
00:19:23,900 --> 00:19:28,340
replication<font color="#CCCCCC"> you know not worth talking</font>

486
00:19:25,730 --> 00:19:32,120
<font color="#CCCCCC">about what's</font><font color="#E5E5E5"> interesting is the case</font>

487
00:19:28,340 --> 00:19:33,800
where the<font color="#E5E5E5"> head end has requested transit</font>

488
00:19:32,120 --> 00:19:35,570
replication by the other nodes in the

489
00:19:33,800 --> 00:19:36,980
network and in<font color="#E5E5E5"> this case you get the</font>

490
00:19:35,570 --> 00:19:38,928
<font color="#E5E5E5">equivalent of a point</font>

491
00:19:36,980 --> 00:19:40,640
the point<font color="#E5E5E5"> tree of source specific tree</font>

492
00:19:38,929 --> 00:19:42,919
but he's done without signaling it's

493
00:19:40,640 --> 00:19:44,799
done<font color="#E5E5E5"> specifically by calculation</font><font color="#CCCCCC"> the</font>

494
00:19:42,919 --> 00:19:46,790
deterministic<font color="#E5E5E5"> set of calculations</font><font color="#CCCCCC"> that</font>

495
00:19:44,799 --> 00:19:49,250
<font color="#E5E5E5">calculation can be relatively easily</font>

496
00:19:46,790 --> 00:19:51,799
described<font color="#E5E5E5"> if I'm a node in the middle of</font>

497
00:19:49,250 --> 00:19:54,799
the network<font color="#E5E5E5"> and I am on a shortest path</font>

498
00:19:51,799 --> 00:19:58,129
<font color="#E5E5E5">between some node a which is originating</font>

499
00:19:54,799 --> 00:20:00,620
some group<font color="#CCCCCC"> high and some node B which is</font>

500
00:19:58,130 --> 00:20:02,809
receiving group<font color="#CCCCCC"> ID then I have to</font>

501
00:20:00,620 --> 00:20:06,649
produce a portion of that multicast

502
00:20:02,809 --> 00:20:09,470
<font color="#CCCCCC">state</font><font color="#E5E5E5"> for this group from from that node</font>

503
00:20:06,650 --> 00:20:11,929
so I actually do that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> merge a portion</font>

504
00:20:09,470 --> 00:20:14,030
of the multicast<font color="#E5E5E5"> state in from node a</font>

505
00:20:11,929 --> 00:20:17,570
group I to the outgoing<font color="#CCCCCC"> interface</font>

506
00:20:14,030 --> 00:20:19,280
towards B now in order to<font color="#E5E5E5"> do that I have</font>

507
00:20:17,570 --> 00:20:21,379
to be able to<font color="#CCCCCC"> manufacture a multicast</font>

508
00:20:19,280 --> 00:20:23,360
address and so this is the actual

509
00:20:21,380 --> 00:20:26,840
address<font color="#CCCCCC"> format that gets motivates my</font>

510
00:20:23,360 --> 00:20:28,760
<font color="#E5E5E5">FAC</font><font color="#CCCCCC"> shirred the</font><font color="#E5E5E5"> transit replication in</font>

511
00:20:26,840 --> 00:20:30,709
this case it's a there's<font color="#E5E5E5"> a 48-bit</font>

512
00:20:28,760 --> 00:20:32,780
<font color="#E5E5E5">obviously MAC address the</font><font color="#CCCCCC"> low-order</font>

513
00:20:30,710 --> 00:20:36,559
<font color="#CCCCCC">portion of this</font><font color="#E5E5E5"> says what group I'm a</font>

514
00:20:32,780 --> 00:20:39,678
<font color="#E5E5E5">member off so the</font><font color="#CCCCCC"> isit goes in the low</font><font color="#E5E5E5"> 3</font>

515
00:20:36,559 --> 00:20:42,290
3 bytes of this the<font color="#E5E5E5"> high order portion</font>

516
00:20:39,679 --> 00:20:44,750
of<font color="#E5E5E5"> this is where it contains the source</font>

517
00:20:42,290 --> 00:20:47,210
which node has originated<font color="#E5E5E5"> this packet</font>

518
00:20:44,750 --> 00:20:48,919
and we<font color="#E5E5E5"> call</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the SP source ID yes</font>

519
00:20:47,210 --> 00:20:51,740
the source ID is just a 20-bit

520
00:20:48,919 --> 00:20:53,240
identifier a unique identifier within

521
00:20:51,740 --> 00:20:55,400
the scope of<font color="#E5E5E5"> this network of where the</font>

522
00:20:53,240 --> 00:20:57,380
packets come from combination<font color="#E5E5E5"> of the</font>

523
00:20:55,400 --> 00:20:59,290
source and the group allows us to

524
00:20:57,380 --> 00:21:01,730
uniquely<font color="#E5E5E5"> identify</font><font color="#CCCCCC"> the tree that this</font>

525
00:20:59,290 --> 00:21:03,470
combined actually with<font color="#CCCCCC"> tube even allows</font>

526
00:21:01,730 --> 00:21:05,990
us to uniquely identify<font color="#CCCCCC"> the tree of</font><font color="#E5E5E5"> this</font>

527
00:21:03,470 --> 00:21:07,640
<font color="#E5E5E5">packet</font><font color="#CCCCCC"> should be</font><font color="#E5E5E5"> flowing along and since</font>

528
00:21:05,990 --> 00:21:10,580
every node knows what the format is<font color="#E5E5E5"> they</font>

529
00:21:07,640 --> 00:21:12,919
can manufacture these very easily<font color="#E5E5E5"> here's</font>

530
00:21:10,580 --> 00:21:15,350
a little example<font color="#E5E5E5"> and there's actually a</font>

531
00:21:12,919 --> 00:21:17,360
<font color="#CCCCCC">mistake in this example just</font><font color="#E5E5E5"> assume that</font>

532
00:21:15,350 --> 00:21:19,399
the link between 3<font color="#CCCCCC"> & 6 doesn't exist</font>

533
00:21:17,360 --> 00:21:22,719
because<font color="#CCCCCC"> I threw that second arrow</font>

534
00:21:19,400 --> 00:21:26,840
incorrectly but<font color="#E5E5E5"> assuming</font><font color="#CCCCCC"> that we have</font><font color="#E5E5E5"> a</font>

535
00:21:22,720 --> 00:21:28,850
little<font color="#E5E5E5"> 6 node</font><font color="#CCCCCC"> network here we have the</font>

536
00:21:26,840 --> 00:21:31,370
service or<font color="#CCCCCC"> the group</font><font color="#E5E5E5"> 2 5 5 which</font>

537
00:21:28,850 --> 00:21:32,928
originates it to node 1 and terminates

538
00:21:31,370 --> 00:21:35,750
or there's a receiver at node 3<font color="#CCCCCC"> and a</font>

539
00:21:32,929 --> 00:21:38,960
receiver at node 4<font color="#CCCCCC"> well node 5 is on the</font>

540
00:21:35,750 --> 00:21:41,480
shortest<font color="#CCCCCC"> path between node 4 and node 1</font>

541
00:21:38,960 --> 00:21:44,950
and they share a group 2 5 5 so it

542
00:21:41,480 --> 00:21:46,870
creates state<font color="#CCCCCC"> 2 interface 5</font>

543
00:21:44,950 --> 00:21:49,060
and it's also on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> shortest path</font>

544
00:21:46,870 --> 00:21:52,750
between<font color="#E5E5E5"> three and</font><font color="#CCCCCC"> ones so it creates</font>

545
00:21:49,060 --> 00:21:55,090
state<font color="#E5E5E5"> to interface six and the multicast</font>

546
00:21:52,750 --> 00:21:56,950
address that it manufactures essentially

547
00:21:55,090 --> 00:22:00,010
says it's come from node<font color="#E5E5E5"> one and it's</font>

548
00:21:56,950 --> 00:22:01,870
part of group 255<font color="#E5E5E5"> and if you just kind</font>

549
00:22:00,010 --> 00:22:03,970
of my induction do that everywhere

550
00:22:01,870 --> 00:22:05,439
within<font color="#CCCCCC"> the network</font><font color="#E5E5E5"> you get the set</font><font color="#CCCCCC"> of</font>

551
00:22:03,970 --> 00:22:07,810
trees that<font color="#E5E5E5"> are that</font><font color="#CCCCCC"> are produced</font>

552
00:22:05,440 --> 00:22:11,080
automatically<font color="#E5E5E5"> in the case where transit</font>

553
00:22:07,810 --> 00:22:13,450
replication is being requested<font color="#E5E5E5"> this is</font>

554
00:22:11,080 --> 00:22:15,909
another animation<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a sequence of</font>

555
00:22:13,450 --> 00:22:17,980
<font color="#CCCCCC">screenshots augmented with a little bit</font>

556
00:22:15,910 --> 00:22:21,700
of extra<font color="#E5E5E5"> graphics what you're looking at</font>

557
00:22:17,980 --> 00:22:24,460
<font color="#E5E5E5">here</font><font color="#CCCCCC"> is an about</font><font color="#E5E5E5"> a sixty six node a 2.1</font>

558
00:22:21,700 --> 00:22:27,280
<font color="#E5E5E5">aq</font><font color="#CCCCCC"> network and there is we're</font>

559
00:22:24,460 --> 00:22:30,400
highlighting a<font color="#CCCCCC"> seven member eilen so</font>

560
00:22:27,280 --> 00:22:32,560
there are seven of<font color="#E5E5E5"> these devices</font><font color="#CCCCCC"> that</font>

561
00:22:30,400 --> 00:22:35,470
have their<font color="#E5E5E5"> Union ports configured with I</font>

562
00:22:32,560 --> 00:22:37,990
said 100<font color="#E5E5E5"> and we're looking at the</font>

563
00:22:35,470 --> 00:22:41,230
routing<font color="#E5E5E5"> that has been produced to to</font>

564
00:22:37,990 --> 00:22:44,430
bridge these ports<font color="#CCCCCC"> together you can see</font>

565
00:22:41,230 --> 00:22:46,690
I've<font color="#E5E5E5"> highlighted each</font><font color="#CCCCCC"> of the trees</font>

566
00:22:44,430 --> 00:22:49,020
starting with that<font color="#E5E5E5"> little</font><font color="#CCCCCC"> v-shape that</font>

567
00:22:46,690 --> 00:22:51,010
pink shape<font color="#CCCCCC"> v that's the</font><font color="#E5E5E5"> root of the tree</font>

568
00:22:49,020 --> 00:22:53,620
<font color="#CCCCCC">and</font><font color="#E5E5E5"> we go</font><font color="#CCCCCC"> through all</font><font color="#E5E5E5"> the different</font>

569
00:22:51,010 --> 00:22:55,270
trees in rapid succession<font color="#E5E5E5"> and then for</font>

570
00:22:53,620 --> 00:22:56,889
one of them I highlight the symmetry so

571
00:22:55,270 --> 00:22:58,629
if you if you look quickly at it you can

572
00:22:56,890 --> 00:23:00,550
see the symmetry<font color="#CCCCCC"> between the</font><font color="#E5E5E5"> upper left</font>

573
00:22:58,630 --> 00:23:02,470
and the lower right and that symmetry is

574
00:23:00,550 --> 00:23:04,480
<font color="#E5E5E5">true of all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the all of the nodes in</font>

575
00:23:02,470 --> 00:23:06,280
the<font color="#E5E5E5"> network the shortest path tree is</font>

576
00:23:04,480 --> 00:23:08,410
used in one<font color="#E5E5E5"> direction for unicast</font>

577
00:23:06,280 --> 00:23:11,350
routing towards the route it's used in

578
00:23:08,410 --> 00:23:13,020
<font color="#E5E5E5">the other direction for multicast away</font>

579
00:23:11,350 --> 00:23:15,969
from the route<font color="#E5E5E5"> and it can either</font><font color="#CCCCCC"> be used</font>

580
00:23:13,020 --> 00:23:18,490
serially for unicast away from the route

581
00:23:15,970 --> 00:23:20,980
or the<font color="#CCCCCC"> fork points in that tree</font><font color="#E5E5E5"> can be</font>

582
00:23:18,490 --> 00:23:24,880
used as replication points<font color="#CCCCCC"> if you're</font>

583
00:23:20,980 --> 00:23:26,740
<font color="#E5E5E5">choosing to do transit replication so</font>

584
00:23:24,880 --> 00:23:28,540
the control<font color="#E5E5E5"> point what happens with the</font>

585
00:23:26,740 --> 00:23:31,570
control plane well as I<font color="#E5E5E5"> said it's an is</font>

586
00:23:28,540 --> 00:23:33,129
is<font color="#CCCCCC"> link state protocol as the basis rate</font>

587
00:23:31,570 --> 00:23:34,990
<font color="#CCCCCC">which you don't want a cue nice thing</font>

588
00:23:33,130 --> 00:23:37,840
about this is we don't<font color="#E5E5E5"> need IP to</font>

589
00:23:34,990 --> 00:23:41,230
operate<font color="#CCCCCC"> a sis</font><font color="#E5E5E5"> can operate strictly layer</font>

590
00:23:37,840 --> 00:23:44,649
<font color="#E5E5E5">two without IP</font><font color="#CCCCCC"> that doesn't preclude the</font>

591
00:23:41,230 --> 00:23:46,870
use of<font color="#CCCCCC"> IP v4 v6 in parallel with aq</font><font color="#E5E5E5"> and</font>

592
00:23:44,650 --> 00:23:50,170
<font color="#CCCCCC">the same</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> assistance it's just not</font>

593
00:23:46,870 --> 00:23:53,260
mandated or or discussed in the standard

594
00:23:50,170 --> 00:23:55,090
the B MAC address is<font color="#E5E5E5"> carried in the</font><font color="#CCCCCC"> sis</font>

595
00:23:53,260 --> 00:23:56,590
ID but it's also possible<font color="#E5E5E5"> to carry</font>

596
00:23:55,090 --> 00:23:57,520
<font color="#CCCCCC">additional V MAC addresses for</font>

597
00:23:56,590 --> 00:23:59,949
<font color="#CCCCCC">multihoming</font>

598
00:23:57,520 --> 00:24:02,500
no new<font color="#E5E5E5"> PDUs are introduced is is for</font>

599
00:23:59,950 --> 00:24:04,450
this protocol<font color="#E5E5E5"> essentially for tlvs</font>

600
00:24:02,500 --> 00:24:06,970
really are all<font color="#CCCCCC"> it's required and a</font>

601
00:24:04,450 --> 00:24:08,920
<font color="#E5E5E5">calculation first</font><font color="#CCCCCC"> TLV is part of</font><font color="#E5E5E5"> the</font>

602
00:24:06,970 --> 00:24:10,480
<font color="#CCCCCC">holo mechanism</font><font color="#E5E5E5"> that simply says hello</font>

603
00:24:08,920 --> 00:24:14,980
<font color="#CCCCCC">I'm running shortest path bridging</font><font color="#E5E5E5"> and I</font>

604
00:24:10,480 --> 00:24:17,710
wish<font color="#CCCCCC"> to use these vids we in the link</font>

605
00:24:14,980 --> 00:24:21,760
<font color="#E5E5E5">state updates have three additional</font><font color="#CCCCCC"> tlvs</font>

606
00:24:17,710 --> 00:24:23,950
<font color="#E5E5E5">one of which says here are the neighbors</font>

607
00:24:21,760 --> 00:24:25,450
<font color="#E5E5E5">that I have and the metrics I wish to</font>

608
00:24:23,950 --> 00:24:27,550
use for the purpose of shortest path

609
00:24:25,450 --> 00:24:29,860
bridging so I can have<font color="#E5E5E5"> additional</font>

610
00:24:27,550 --> 00:24:31,300
metrics<font color="#E5E5E5"> above and beyond the normal IP</font>

611
00:24:29,860 --> 00:24:34,870
metrics in the case where you run the

612
00:24:31,300 --> 00:24:37,090
two<font color="#E5E5E5"> protocols in parallel we also have</font>

613
00:24:34,870 --> 00:24:39,760
the service membership so the<font color="#CCCCCC"> isit</font>

614
00:24:37,090 --> 00:24:41,439
information which gets advertised<font color="#CCCCCC"> and</font>

615
00:24:39,760 --> 00:24:43,930
<font color="#E5E5E5">then there's also some</font><font color="#CCCCCC"> information for</font>

616
00:24:41,440 --> 00:24:45,550
the case<font color="#CCCCCC"> of multicast transit</font>

617
00:24:43,930 --> 00:24:47,800
<font color="#E5E5E5">replication what the</font><font color="#CCCCCC"> higher-order</font>

618
00:24:45,550 --> 00:24:49,870
<font color="#E5E5E5">portion of the MAC</font><font color="#CCCCCC"> address should</font><font color="#E5E5E5"> be if</font>

619
00:24:47,800 --> 00:24:53,080
packets are originating from the node

620
00:24:49,870 --> 00:24:55,899
which is advertised this here's a quick

621
00:24:53,080 --> 00:24:57,939
dump of<font color="#CCCCCC"> the link link state database on</font>

622
00:24:55,900 --> 00:25:01,330
a node<font color="#CCCCCC"> I've just drawn a picture on the</font>

623
00:24:57,940 --> 00:25:02,620
<font color="#CCCCCC">right-hand side</font><font color="#E5E5E5"> of topological fragment</font>

624
00:25:01,330 --> 00:25:05,080
<font color="#E5E5E5">that you're looking at or looking at</font>

625
00:25:02,620 --> 00:25:08,399
node<font color="#CCCCCC"> 1 that has two neighbors 4</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 3</font>

626
00:25:05,080 --> 00:25:12,790
costs<font color="#E5E5E5"> to each of them of 10 and node 1</font>

627
00:25:08,400 --> 00:25:15,520
sources<font color="#CCCCCC"> service</font><font color="#E5E5E5"> 255 and service 2 5 6</font>

628
00:25:12,790 --> 00:25:18,280
<font color="#E5E5E5">and so we can see the various components</font>

629
00:25:15,520 --> 00:25:20,379
here in the actual link state database

630
00:25:18,280 --> 00:25:22,690
we can see the the<font color="#E5E5E5"> society which</font>

631
00:25:20,380 --> 00:25:23,920
contains the MAC<font color="#CCCCCC"> address of node 1 we</font>

632
00:25:22,690 --> 00:25:26,170
can see there's a new network<font color="#E5E5E5"> layer</font>

633
00:25:23,920 --> 00:25:28,750
protocol identifier the<font color="#E5E5E5"> ml pid' for</font>

634
00:25:26,170 --> 00:25:32,170
shortest path bridging<font color="#E5E5E5"> we can see two</font>

635
00:25:28,750 --> 00:25:36,040
new neighbors<font color="#E5E5E5"> neighbor tlvs</font>

636
00:25:32,170 --> 00:25:38,410
the cost of cost of<font color="#E5E5E5"> 10 we can see some</font>

637
00:25:36,040 --> 00:25:40,870
equal cost<font color="#E5E5E5"> information about what vids</font>

638
00:25:38,410 --> 00:25:43,660
are being used within this<font color="#CCCCCC"> network and</font>

639
00:25:40,870 --> 00:25:46,090
then finally and most importantly<font color="#E5E5E5"> we can</font>

640
00:25:43,660 --> 00:25:49,300
see the service<font color="#E5E5E5"> line identifiers the</font><font color="#CCCCCC"> ice</font>

641
00:25:46,090 --> 00:25:51,040
is<font color="#CCCCCC"> 255 which support transmit and</font>

642
00:25:49,300 --> 00:25:59,080
receive so the various<font color="#E5E5E5"> flags you can see</font>

643
00:25:51,040 --> 00:26:01,810
<font color="#E5E5E5">down there and also a 256 so in any sort</font>

644
00:25:59,080 --> 00:26:03,790
<font color="#E5E5E5">of distributed dynamic routing system</font>

645
00:26:01,810 --> 00:26:05,830
the issue of looping loop suppression

646
00:26:03,790 --> 00:26:08,560
and<font color="#E5E5E5"> avoidance comes up it's an important</font>

647
00:26:05,830 --> 00:26:09,340
<font color="#E5E5E5">issue 802</font><font color="#CCCCCC"> Dahl</font><font color="#E5E5E5"> 1aq supports two</font>

648
00:26:08,560 --> 00:26:11,110
<font color="#CCCCCC">mechanisms</font>

649
00:26:09,340 --> 00:26:13,000
<font color="#CCCCCC">as</font><font color="#E5E5E5"> a suppression mechanism one</font><font color="#CCCCCC"> is an</font>

650
00:26:11,110 --> 00:26:14,679
avoidance mechanism<font color="#E5E5E5"> suppression</font>

651
00:26:13,000 --> 00:26:17,320
mechanism is essentially a reverse path

652
00:26:14,680 --> 00:26:20,290
forwarding check<font color="#CCCCCC"> because the</font><font color="#E5E5E5"> routing is</font>

653
00:26:17,320 --> 00:26:23,260
fully symmetric<font color="#CCCCCC"> both the unicast and</font>

654
00:26:20,290 --> 00:26:26,170
multicast<font color="#CCCCCC"> we can take the SA look it up</font>

655
00:26:23,260 --> 00:26:28,930
in<font color="#E5E5E5"> the layer two forwarding table and if</font>

656
00:26:26,170 --> 00:26:30,250
we do not find exactly<font color="#E5E5E5"> what we expect</font>

657
00:26:28,930 --> 00:26:31,780
which is<font color="#E5E5E5"> that it should</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> come from</font>

658
00:26:30,250 --> 00:26:33,850
the interface that<font color="#CCCCCC"> it would have gone to</font>

659
00:26:31,780 --> 00:26:38,440
if we were forwarding to it we can throw

660
00:26:33,850 --> 00:26:40,030
<font color="#E5E5E5">that packet away most of the</font><font color="#CCCCCC"> a6 the that</font>

661
00:26:38,440 --> 00:26:42,670
<font color="#E5E5E5">I've looked at actually support this</font>

662
00:26:40,030 --> 00:26:45,639
option already<font color="#E5E5E5"> and hardware so being</font>

663
00:26:42,670 --> 00:26:47,950
able to<font color="#E5E5E5"> either learn or discard allows</font>

664
00:26:45,640 --> 00:26:50,290
<font color="#E5E5E5">us to to use the discard mechanism in</font>

665
00:26:47,950 --> 00:26:52,530
existing existing<font color="#CCCCCC"> a6 to do this</font><font color="#E5E5E5"> very</font>

666
00:26:50,290 --> 00:26:55,690
powerful<font color="#CCCCCC"> loop suppression mechanism</font>

667
00:26:52,530 --> 00:26:57,430
however if you do take<font color="#E5E5E5"> a very specific</font>

668
00:26:55,690 --> 00:27:00,490
<font color="#E5E5E5">type of network and you simultaneously</font>

669
00:26:57,430 --> 00:27:02,440
add and remove<font color="#E5E5E5"> several links it is</font>

670
00:27:00,490 --> 00:27:03,490
possible to<font color="#E5E5E5"> trap a set of packets in a</font>

671
00:27:02,440 --> 00:27:05,320
loop where the<font color="#E5E5E5"> reverse path forwarding</font>

672
00:27:03,490 --> 00:27:07,960
<font color="#E5E5E5">allows the packet to go neither</font>

673
00:27:05,320 --> 00:27:10,810
direction<font color="#CCCCCC"> around that loop so there is</font>

674
00:27:07,960 --> 00:27:12,850
<font color="#CCCCCC">also required a an avoidance mechanism</font>

675
00:27:10,810 --> 00:27:15,310
for<font color="#E5E5E5"> that sort of</font><font color="#CCCCCC"> one-in-a-million case</font>

676
00:27:12,850 --> 00:27:17,590
and the avoidance<font color="#E5E5E5"> mechanism is based on</font>

677
00:27:15,310 --> 00:27:20,820
an<font color="#E5E5E5"> agreement protocol the agreement</font>

678
00:27:17,590 --> 00:27:24,820
protocol is sort of a best described as

679
00:27:20,820 --> 00:27:27,879
<font color="#E5E5E5">I agree with with each of</font><font color="#CCCCCC"> my neighbors</font>

680
00:27:24,820 --> 00:27:30,550
<font color="#E5E5E5">not to move a particular forwarding</font>

681
00:27:27,880 --> 00:27:32,320
entry<font color="#E5E5E5"> more than a certain distance</font><font color="#CCCCCC"> and</font>

682
00:27:30,550 --> 00:27:34,330
<font color="#CCCCCC">it turns out that if you bound the</font>

683
00:27:32,320 --> 00:27:37,090
distance over which forwarding entry can

684
00:27:34,330 --> 00:27:40,870
<font color="#CCCCCC">be moved</font><font color="#E5E5E5"> and everybody agrees</font><font color="#CCCCCC"> to bound</font>

685
00:27:37,090 --> 00:27:42,840
it within certain<font color="#E5E5E5"> ranges then sort</font><font color="#CCCCCC"> of by</font>

686
00:27:40,870 --> 00:27:44,530
<font color="#E5E5E5">induction you can prove that</font><font color="#CCCCCC"> a loop is</font>

687
00:27:42,840 --> 00:27:47,470
not possible

688
00:27:44,530 --> 00:27:50,379
<font color="#CCCCCC">so that range of movement allows you</font>

689
00:27:47,470 --> 00:27:52,200
actually to operate while the

690
00:27:50,380 --> 00:27:55,840
forwardable forwarding planes still up

691
00:27:52,200 --> 00:27:59,179
<font color="#E5E5E5">while the control plane is reconversion</font>

692
00:27:55,840 --> 00:28:03,499
and<font color="#E5E5E5"> only having to remove a subset of</font>

693
00:27:59,179 --> 00:28:06,710
that's a<font color="#CCCCCC"> two-hour</font><font color="#E5E5E5"> topic by</font><font color="#CCCCCC"> itself in</font>

694
00:28:03,499 --> 00:28:09,710
terms<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the OEM</font><font color="#E5E5E5"> as I said you</font><font color="#CCCCCC"> do 2.1 aq</font>

695
00:28:06,710 --> 00:28:13,549
doesn't do any OEM it inherits it by

696
00:28:09,710 --> 00:28:15,529
<font color="#E5E5E5">design so the the network layer the</font>

697
00:28:13,549 --> 00:28:18,349
<font color="#E5E5E5">sorry the service layer the link layer</font>

698
00:28:15,529 --> 00:28:23,659
and the network<font color="#E5E5E5"> layer</font><font color="#CCCCCC"> om</font><font color="#E5E5E5"> so the 802 dot</font>

699
00:28:18,349 --> 00:28:25,968
<font color="#CCCCCC">1ag</font><font color="#E5E5E5"> the 802 dot</font><font color="#CCCCCC"> 3 aah and the 1731 stuff</font>

700
00:28:23,659 --> 00:28:28,399
all just work transparently on top of

701
00:28:25,969 --> 00:28:31,089
<font color="#E5E5E5">this protocol</font><font color="#CCCCCC"> if you look at things</font><font color="#E5E5E5"> like</font>

702
00:28:28,399 --> 00:28:34,609
the<font color="#E5E5E5"> symmetry the</font><font color="#CCCCCC"> symmetry of</font><font color="#E5E5E5"> routing</font>

703
00:28:31,089 --> 00:28:36,469
<font color="#E5E5E5">allows for example the</font><font color="#CCCCCC"> 1731 to a delay</font>

704
00:28:34,609 --> 00:28:37,879
<font color="#E5E5E5">and one way to delay or in</font><font color="#CCCCCC"> particular</font>

705
00:28:36,469 --> 00:28:39,289
the<font color="#CCCCCC"> one-way delay to give you an</font>

706
00:28:37,879 --> 00:28:42,468
<font color="#CCCCCC">accurate response</font><font color="#E5E5E5"> because if you divide</font>

707
00:28:39,289 --> 00:28:47,479
<font color="#CCCCCC">a</font><font color="#E5E5E5"> two-way delay by</font><font color="#CCCCCC"> two you get</font><font color="#E5E5E5"> a one-way</font>

708
00:28:42,469 --> 00:28:49,519
delay<font color="#CCCCCC"> only if it's a symmetric route in</font>

709
00:28:47,479 --> 00:28:52,460
terms of recovery<font color="#CCCCCC"> I just very briefly</font>

710
00:28:49,519 --> 00:28:56,559
mentioned there's a mechanism<font color="#E5E5E5"> in 802</font>

711
00:28:52,460 --> 00:29:01,429
don't<font color="#E5E5E5"> 1aq where the use of the multicast</font>

712
00:28:56,559 --> 00:29:03,859
mechanisms which it creates for<font color="#CCCCCC"> the Uni</font>

713
00:29:01,429 --> 00:29:05,269
ports<font color="#E5E5E5"> can also be used to interconnect</font>

714
00:29:03,859 --> 00:29:07,249
<font color="#E5E5E5">the control planes so we can</font>

715
00:29:05,269 --> 00:29:10,940
<font color="#E5E5E5">interconnect all the control planes with</font>

716
00:29:07,249 --> 00:29:13,519
multicast forwarding<font color="#E5E5E5"> state and if we do</font>

717
00:29:10,940 --> 00:29:15,049
that<font color="#CCCCCC"> and there</font><font color="#E5E5E5"> is a link state</font><font color="#CCCCCC"> update</font>

718
00:29:13,519 --> 00:29:17,299
which we have to advertise quickly we

719
00:29:15,049 --> 00:29:19,759
can place<font color="#CCCCCC"> it</font><font color="#E5E5E5"> on the multicast tree and</font>

720
00:29:17,299 --> 00:29:21,799
have it advertised<font color="#E5E5E5"> all of the nodes very</font>

721
00:29:19,759 --> 00:29:23,839
quickly and this allows us<font color="#CCCCCC"> to avoid all</font>

722
00:29:21,799 --> 00:29:25,879
<font color="#CCCCCC">of the link state packet comes up to the</font>

723
00:29:23,839 --> 00:29:27,950
<font color="#E5E5E5">CPU do some processing forwarding and</font>

724
00:29:25,879 --> 00:29:29,539
outer link<font color="#E5E5E5"> it can just be simultaneously</font>

725
00:29:27,950 --> 00:29:32,119
sent to all of the other nodes<font color="#E5E5E5"> in the</font>

726
00:29:29,539 --> 00:29:36,799
network<font color="#E5E5E5"> this has a radical effect</font><font color="#CCCCCC"> on me</font>

727
00:29:32,119 --> 00:29:41,599
on the<font color="#E5E5E5"> convergence convergence times so</font>

728
00:29:36,799 --> 00:29:43,908
in conclusion I have in this deck which

729
00:29:41,599 --> 00:29:44,619
I imagine will<font color="#CCCCCC"> be available</font><font color="#E5E5E5"> on the Nanog</font>

730
00:29:43,909 --> 00:29:46,690
server

731
00:29:44,619 --> 00:29:48,830
reasonably soon if it's not already

732
00:29:46,690 --> 00:29:49,999
<font color="#CCCCCC">there's a worked example for those</font><font color="#E5E5E5"> of</font>

733
00:29:48,830 --> 00:29:52,609
you that don't<font color="#E5E5E5"> like pretty pictures and</font>

734
00:29:49,999 --> 00:29:55,820
<font color="#E5E5E5">prefer to see forwarding tables probably</font>

735
00:29:52,609 --> 00:29:58,759
<font color="#E5E5E5">something worth</font><font color="#CCCCCC"> looking at</font><font color="#E5E5E5"> there is also</font>

736
00:29:55,820 --> 00:30:01,460
a<font color="#E5E5E5"> Wikipedia page</font><font color="#CCCCCC"> if you go to Wikipedia</font>

737
00:29:58,759 --> 00:30:02,989
and<font color="#E5E5E5"> look up by Triple E 802</font><font color="#CCCCCC"> 1aq is we've</font>

738
00:30:01,460 --> 00:30:04,820
been trying<font color="#E5E5E5"> to keep that up to</font><font color="#CCCCCC"> date</font><font color="#E5E5E5"> so I</font>

739
00:30:02,989 --> 00:30:08,149
<font color="#E5E5E5">give you an overview of what's going</font><font color="#CCCCCC"> on</font>

740
00:30:04,820 --> 00:30:09,870
<font color="#E5E5E5">there's also a plan to do a an in-depth</font>

741
00:30:08,149 --> 00:30:12,000
<font color="#E5E5E5">tutorial probably at the next</font>

742
00:30:09,870 --> 00:30:14,969
if there's if there's fishing<font color="#E5E5E5"> interest</font>

743
00:30:12,000 --> 00:30:16,800
<font color="#CCCCCC">and finally if folks have questions and</font>

744
00:30:14,970 --> 00:30:18,300
would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to see how this protocol</font>

745
00:30:16,800 --> 00:30:19,649
works<font color="#E5E5E5"> on different network</font><font color="#CCCCCC"> types I</font>

746
00:30:18,300 --> 00:30:21,180
actually have an emulator on<font color="#E5E5E5"> my laptop</font>

747
00:30:19,650 --> 00:30:23,250
<font color="#E5E5E5">and I'd be happy</font><font color="#CCCCCC"> to sit in the bar</font>

748
00:30:21,180 --> 00:30:26,490
afterwards<font color="#E5E5E5"> with a beer and draw networks</font>

749
00:30:23,250 --> 00:30:29,160
and argue<font color="#CCCCCC"> with people</font><font color="#E5E5E5"> about you</font><font color="#CCCCCC"> know the</font>

750
00:30:26,490 --> 00:30:36,440
<font color="#E5E5E5">various pros and cons any questions</font>

751
00:30:29,160 --> 00:30:36,440
thank<font color="#E5E5E5"> you yes at the back</font>

752
00:30:48,810 --> 00:30:59,470
most presentations aren't coming<font color="#E5E5E5"> well</font>

753
00:30:53,890 --> 00:31:01,320
they usually show up afterwards okay<font color="#E5E5E5"> my</font>

754
00:30:59,470 --> 00:31:04,180
apologies

755
00:31:01,320 --> 00:31:06,429
<font color="#E5E5E5">Michael Sinatra UC</font><font color="#CCCCCC"> Berkeley um this I</font>

756
00:31:04,180 --> 00:31:08,320
think a lot of<font color="#E5E5E5"> us who unfortunately have</font>

757
00:31:06,430 --> 00:31:11,820
had to work in big<font color="#E5E5E5"> large-scale data</font>

758
00:31:08,320 --> 00:31:13,870
centers with big enterprises are really

759
00:31:11,820 --> 00:31:15,909
interested<font color="#E5E5E5"> in this happening and really</font>

760
00:31:13,870 --> 00:31:17,939
<font color="#E5E5E5">want to see this happen</font><font color="#CCCCCC"> where we have</font>

761
00:31:15,910 --> 00:31:22,450
<font color="#E5E5E5">lots of complex</font><font color="#CCCCCC"> spanning-tree</font>

762
00:31:17,940 --> 00:31:26,260
my main<font color="#E5E5E5"> question is what why</font><font color="#CCCCCC"> should I</font>

763
00:31:22,450 --> 00:31:29,560
use<font color="#CCCCCC"> 802 2.18 q as opposed to trill if</font>

764
00:31:26,260 --> 00:31:31,960
that ever happens and is it mainly<font color="#E5E5E5"> the</font>

765
00:31:29,560 --> 00:31:34,360
<font color="#E5E5E5">802</font><font color="#CCCCCC"> dot one Oh</font><font color="#E5E5E5"> a and I'm sweet is that</font>

766
00:31:31,960 --> 00:31:37,030
the big integration<font color="#E5E5E5"> win that I get or</font>

767
00:31:34,360 --> 00:31:40,870
<font color="#E5E5E5">are there other reasons</font><font color="#CCCCCC"> in like</font><font color="#E5E5E5"> 30</font>

768
00:31:37,030 --> 00:31:43,379
seconds so yeah<font color="#E5E5E5"> that's a very</font><font color="#CCCCCC"> good</font>

769
00:31:40,870 --> 00:31:46,090
question and<font color="#E5E5E5"> I'm very much a pragmatist</font>

770
00:31:43,380 --> 00:31:48,490
<font color="#E5E5E5">the way I see things right now is we</font>

771
00:31:46,090 --> 00:31:52,389
have<font color="#E5E5E5"> trill which has adopted a certain</font>

772
00:31:48,490 --> 00:31:54,640
class of<font color="#E5E5E5"> ecmp behavior and</font><font color="#CCCCCC"> aq which is</font>

773
00:31:52,390 --> 00:31:56,350
adopted<font color="#CCCCCC"> a certain class of ecmp behavior</font>

774
00:31:54,640 --> 00:31:58,660
<font color="#E5E5E5">and I think what you ultimately should</font>

775
00:31:56,350 --> 00:32:01,480
should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> asking for is a composite of</font>

776
00:31:58,660 --> 00:32:03,190
<font color="#CCCCCC">the two</font><font color="#E5E5E5"> I think that it's very</font>

777
00:32:01,480 --> 00:32:06,580
unfortunate<font color="#E5E5E5"> the two groups of people</font>

778
00:32:03,190 --> 00:32:10,150
<font color="#E5E5E5">can't agree on</font><font color="#CCCCCC"> you know unifying the</font>

779
00:32:06,580 --> 00:32:11,949
behavior I come from a vendor and of

780
00:32:10,150 --> 00:32:13,180
course we're interested<font color="#E5E5E5"> in providing</font>

781
00:32:11,950 --> 00:32:15,550
what our customers<font color="#CCCCCC"> want</font>

782
00:32:13,180 --> 00:32:18,400
so I think<font color="#E5E5E5"> that the right answer</font><font color="#CCCCCC"> is to</font>

783
00:32:15,550 --> 00:32:20,980
<font color="#E5E5E5">take the best of both</font><font color="#CCCCCC"> and of course that</font>

784
00:32:18,400 --> 00:32:23,770
requires compromise on behalf of the two

785
00:32:20,980 --> 00:32:25,840
the<font color="#CCCCCC"> two groups of people involved</font><font color="#E5E5E5"> thanks</font>

786
00:32:23,770 --> 00:32:28,120
that's that's good<font color="#E5E5E5"> I just</font><font color="#CCCCCC"> I just want to</font>

787
00:32:25,840 --> 00:32:30,300
say that's<font color="#CCCCCC"> very unique I've never heard</font>

788
00:32:28,120 --> 00:32:32,500
of two groups<font color="#E5E5E5"> of people in a standards</font>

789
00:32:30,300 --> 00:32:34,450
<font color="#E5E5E5">situation not being</font><font color="#CCCCCC"> able to agree in</font>

790
00:32:32,500 --> 00:32:37,270
having two divergent standard yeah it's

791
00:32:34,450 --> 00:32:38,590
just<font color="#E5E5E5"> remarkable isn't it but you know</font>

792
00:32:37,270 --> 00:32:40,240
that's<font color="#E5E5E5"> that's one of the one of the</font>

793
00:32:38,590 --> 00:32:43,510
goals we would like to<font color="#E5E5E5"> accomplish is</font><font color="#CCCCCC"> to</font>

794
00:32:40,240 --> 00:32:46,210
is to bring the the behaviors<font color="#CCCCCC"> of these</font>

795
00:32:43,510 --> 00:32:47,350
two protocols together and<font color="#E5E5E5"> I</font><font color="#CCCCCC"> believe</font>

796
00:32:46,210 --> 00:32:48,700
<font color="#CCCCCC">that there are some vendors that are</font>

797
00:32:47,350 --> 00:32:50,179
<font color="#E5E5E5">actually already kind of in the middle</font>

798
00:32:48,700 --> 00:32:52,340
<font color="#E5E5E5">ground using</font>

799
00:32:50,180 --> 00:32:54,710
an<font color="#E5E5E5"> Ethernet control</font><font color="#CCCCCC"> plant a nice</font><font color="#E5E5E5"> re an</font>

800
00:32:52,340 --> 00:32:56,510
<font color="#CCCCCC">Ethernet MAC and</font><font color="#E5E5E5"> Mac header they've</font>

801
00:32:54,710 --> 00:32:58,430
<font color="#E5E5E5">added a TTL</font><font color="#CCCCCC"> to the Mac and Mac header</font>

802
00:32:56,510 --> 00:33:00,680
and they're using eius eius to control

803
00:32:58,430 --> 00:33:03,500
it so<font color="#E5E5E5"> there's already some some hybrid</font>

804
00:33:00,680 --> 00:33:05,390
stuff going on so but<font color="#E5E5E5"> if you you know if</font>

805
00:33:03,500 --> 00:33:09,820
<font color="#CCCCCC">you believe in that you</font><font color="#E5E5E5"> know by</font><font color="#CCCCCC"> all</font>

806
00:33:05,390 --> 00:33:09,820
means<font color="#E5E5E5"> help us and and push that</font>

807
00:33:10,660 --> 00:33:13,940
regardless<font color="#E5E5E5"> of size I think</font><font color="#CCCCCC"> Oh someone's</font>

808
00:33:12,740 --> 00:33:15,050
trying<font color="#CCCCCC"> to work to get</font><font color="#E5E5E5"> them updated they</font>

809
00:33:13,940 --> 00:33:17,800
haven't been updated since I think<font color="#CCCCCC"> like</font>

810
00:33:15,050 --> 00:33:17,800
10:30 this morning

