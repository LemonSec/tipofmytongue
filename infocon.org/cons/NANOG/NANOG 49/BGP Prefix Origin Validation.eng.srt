1
00:00:00,000 --> 00:00:02,029
I

2
00:00:06,710 --> 00:00:11,129
<font color="#CCCCCC">ya name is</font><font color="#E5E5E5"> / douche I'm going to talk a</font>

3
00:00:09,330 --> 00:00:13,200
bit about the origin validation

4
00:00:11,130 --> 00:00:16,950
framework that we have been<font color="#CCCCCC"> working at</font>

5
00:00:13,200 --> 00:00:18,450
the ITF cider group there are many folks

6
00:00:16,950 --> 00:00:20,939
from the cider group were present here

7
00:00:18,450 --> 00:00:26,970
so we can have<font color="#E5E5E5"> more discussion on the</font>

8
00:00:20,939 --> 00:00:30,119
things<font color="#E5E5E5"> that I don't know about um some</font>

9
00:00:26,970 --> 00:00:32,940
motivation I think the talks before me

10
00:00:30,119 --> 00:00:35,489
especially<font color="#E5E5E5"> Sharon's talk and the</font>

11
00:00:32,940 --> 00:00:37,079
following talk as<font color="#E5E5E5"> well gave quite a bit</font>

12
00:00:35,489 --> 00:00:38,820
of introduction into the into the

13
00:00:37,079 --> 00:00:41,310
problem<font color="#E5E5E5"> definition so I'm not going</font><font color="#CCCCCC"> to</font>

14
00:00:38,820 --> 00:00:44,460
spend a lot<font color="#E5E5E5"> of time on that but in a</font>

15
00:00:41,310 --> 00:00:46,080
sense the motivation for<font color="#E5E5E5"> the work at</font>

16
00:00:44,460 --> 00:00:48,150
least the origin validation work has

17
00:00:46,080 --> 00:00:51,540
been<font color="#E5E5E5"> that you know any</font><font color="#CCCCCC"> AAS can inject</font>

18
00:00:48,150 --> 00:00:52,710
any graphics in BGP today and that that

19
00:00:51,540 --> 00:00:55,140
we would like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> call as prefix</font>

20
00:00:52,710 --> 00:00:58,170
hijacking it's mostly mistakes it's

21
00:00:55,140 --> 00:01:00,990
mostly configuration errors and the aim

22
00:00:58,170 --> 00:01:02,970
in essence is to provide a solution to

23
00:01:00,990 --> 00:01:06,750
that factor but it could be malicious as

24
00:01:02,970 --> 00:01:09,030
Florence talk mostly focused on and the

25
00:01:06,750 --> 00:01:10,979
manifestations of that would be you know

26
00:01:09,030 --> 00:01:12,780
someone<font color="#CCCCCC"> else announcing someone else's</font>

27
00:01:10,979 --> 00:01:18,420
prefix or someone else announcing a more

28
00:01:12,780 --> 00:01:20,280
specific someone else's prefix this is

29
00:01:18,420 --> 00:01:24,060
an example<font color="#CCCCCC"> that I borrowed from</font><font color="#E5E5E5"> all of</font>

30
00:01:20,280 --> 00:01:25,530
the slides which shows how you know if

31
00:01:24,060 --> 00:01:27,479
you want if someone else announces the

32
00:01:25,530 --> 00:01:29,850
prefix the short<font color="#E5E5E5"> race path winds and</font>

33
00:01:27,479 --> 00:01:32,039
that's how we are able<font color="#E5E5E5"> to you know I</font>

34
00:01:29,850 --> 00:01:36,509
track the<font color="#E5E5E5"> traffic this is here it shows</font>

35
00:01:32,039 --> 00:01:39,479
a more specific route to you know from

36
00:01:36,509 --> 00:01:40,740
from the from the<font color="#E5E5E5"> actual victim and and</font>

37
00:01:39,479 --> 00:01:45,139
a way<font color="#E5E5E5"> to attract the traffic for that</font>

38
00:01:40,740 --> 00:01:49,889
and the famous<font color="#E5E5E5"> YouTube high-tech example</font>

39
00:01:45,139 --> 00:01:55,679
of you know<font color="#E5E5E5"> that basically shows an</font>

40
00:01:49,889 --> 00:01:58,590
example of more specific hiking<font color="#E5E5E5"> um so so</font>

41
00:01:55,679 --> 00:02:00,420
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is where the the Arctic</font><font color="#E5E5E5"> hey I i'm</font>

42
00:01:58,590 --> 00:02:03,450
not sure how many<font color="#E5E5E5"> of you are totally</font>

43
00:02:00,420 --> 00:02:05,310
familiar with the RTI framework but in

44
00:02:03,450 --> 00:02:07,499
essence i would just like<font color="#E5E5E5"> to view the</font>

45
00:02:05,310 --> 00:02:10,430
<font color="#E5E5E5">arctic air or define that BK as as a</font>

46
00:02:07,499 --> 00:02:14,070
framework to create a trusted data store

47
00:02:10,430 --> 00:02:16,140
and all everything else that that

48
00:02:14,070 --> 00:02:19,709
entails<font color="#E5E5E5"> to create that frustrated a</font>

49
00:02:16,140 --> 00:02:23,190
store and how the end users can benefit

50
00:02:19,710 --> 00:02:24,960
out of it so the main components to me

51
00:02:23,190 --> 00:02:28,170
at least the main components look like

52
00:02:24,960 --> 00:02:31,380
the<font color="#E5E5E5"> following four or five one is the</font>

53
00:02:28,170 --> 00:02:34,320
object format which<font color="#CCCCCC"> is where we use most</font>

54
00:02:31,380 --> 00:02:37,109
part of the certificates the entire pki

55
00:02:34,320 --> 00:02:40,320
framework as we know of it with the

56
00:02:37,110 --> 00:02:41,910
already defined extensions for the

57
00:02:40,320 --> 00:02:43,829
resources that we are<font color="#CCCCCC"> interested in</font>

58
00:02:41,910 --> 00:02:46,290
which is<font color="#E5E5E5"> basically the IP IP addresses</font>

59
00:02:43,830 --> 00:02:48,600
<font color="#E5E5E5">and various numbers and a way to bind</font>

60
00:02:46,290 --> 00:02:49,980
that and the way to bind that is what we

61
00:02:48,600 --> 00:02:52,380
are interested in because that that

62
00:02:49,980 --> 00:02:57,090
<font color="#E5E5E5">gives us the trusted sort of the trusted</font>

63
00:02:52,380 --> 00:02:58,710
notion that this IP address is or this

64
00:02:57,090 --> 00:03:01,530
IP prefix<font color="#E5E5E5"> when it is announced for money</font>

65
00:02:58,710 --> 00:03:02,940
<font color="#E5E5E5">as it's a valid or authenticated one and</font>

66
00:03:01,530 --> 00:03:05,400
that's that's the one that the second

67
00:03:02,940 --> 00:03:07,230
part provides which is raw or out router

68
00:03:05,400 --> 00:03:09,260
origin of the attestation and we'll go

69
00:03:07,230 --> 00:03:11,760
to an example of how<font color="#CCCCCC"> that looks like</font>

70
00:03:09,260 --> 00:03:14,940
then there is two active side of the

71
00:03:11,760 --> 00:03:17,370
applique as well which is the allocation

72
00:03:14,940 --> 00:03:20,160
hierarchy how does you know it all

73
00:03:17,370 --> 00:03:21,690
starts from the allocation policy is one

74
00:03:20,160 --> 00:03:24,390
today the routing policy is one today

75
00:03:21,690 --> 00:03:27,000
from the allocation policy how does it

76
00:03:24,390 --> 00:03:28,709
flow all the way from the<font color="#CCCCCC"> route I and</font>

77
00:03:27,000 --> 00:03:33,810
<font color="#E5E5E5">our car I asked to the high arch to the</font>

78
00:03:28,710 --> 00:03:36,270
ISPs and how<font color="#CCCCCC"> does the the trusted data</font>

79
00:03:33,810 --> 00:03:37,710
store that practically<font color="#E5E5E5"> I aims to provide</font>

80
00:03:36,270 --> 00:03:40,410
how does<font color="#E5E5E5"> that create it through this</font>

81
00:03:37,710 --> 00:03:42,060
hierarchical process the same with the

82
00:03:40,410 --> 00:03:43,920
database maintenance how does that how

83
00:03:42,060 --> 00:03:46,620
does the database get maintained and how

84
00:03:43,920 --> 00:03:48,780
do<font color="#E5E5E5"> we get the get the data out of the</font>

85
00:03:46,620 --> 00:03:51,270
database to verify what we want to

86
00:03:48,780 --> 00:03:53,940
verify<font color="#E5E5E5"> the transactions in mind takes if</font>

87
00:03:51,270 --> 00:03:56,610
one<font color="#E5E5E5"> you know one owner of an IP address</font>

88
00:03:53,940 --> 00:03:58,350
wants to sub allocate you know an

89
00:03:56,610 --> 00:04:00,180
address block how does how does that

90
00:03:58,350 --> 00:04:02,430
transaction take place in a sort of a

91
00:04:00,180 --> 00:04:04,080
secure manner as well as certificate

92
00:04:02,430 --> 00:04:05,490
checks the<font color="#CCCCCC"> crl is there a vocation</font>

93
00:04:04,080 --> 00:04:09,840
smaller so that's that's the active side

94
00:04:05,490 --> 00:04:12,150
of it then the part that<font color="#E5E5E5"> I was mostly</font>

95
00:04:09,840 --> 00:04:14,790
interested in focusing on is getting the

96
00:04:12,150 --> 00:04:17,190
data to to the BGT speaking routers and

97
00:04:14,790 --> 00:04:18,539
what what does<font color="#E5E5E5"> it mean to a veggie be</font>

98
00:04:17,190 --> 00:04:22,079
speaking it out and what changes<font color="#E5E5E5"> are</font>

99
00:04:18,539 --> 00:04:23,669
really needed or that we want<font color="#E5E5E5"> to do to</font>

100
00:04:22,079 --> 00:04:25,889
do the origin validation so<font color="#E5E5E5"> ultimately</font>

101
00:04:23,670 --> 00:04:28,350
when it went<font color="#E5E5E5"> in when a neighbor or when</font>

102
00:04:25,889 --> 00:04:30,360
appear sensors that out a route of you

103
00:04:28,350 --> 00:04:31,449
know<font color="#CCCCCC"> not yet message how do we know that</font>

104
00:04:30,360 --> 00:04:34,029
that's a valid one

105
00:04:31,449 --> 00:04:37,509
if it is invalid how do we in or discard

106
00:04:34,029 --> 00:04:39,099
those<font color="#E5E5E5"> I'm sorry I was mostly going to</font>

107
00:04:37,509 --> 00:04:41,800
focus on that but then I borrowed some

108
00:04:39,099 --> 00:04:44,169
slides from Randy to talk a bit about

109
00:04:41,800 --> 00:04:46,029
the overall big picture of how the RPK<font color="#E5E5E5"> I</font>

110
00:04:44,169 --> 00:04:48,159
read<font color="#E5E5E5"> also looks like i'm just going to</font>

111
00:04:46,029 --> 00:04:51,969
<font color="#E5E5E5">project it here and X try to explain it</font>

112
00:04:48,159 --> 00:04:54,449
if not alas trying to explain more so

113
00:04:51,969 --> 00:04:56,860
the one of the complete pictures from

114
00:04:54,449 --> 00:04:59,589
you know from how that picky<font color="#E5E5E5"> I would</font>

115
00:04:56,860 --> 00:05:01,569
<font color="#E5E5E5">look like the top portion is what the</font>

116
00:04:59,589 --> 00:05:04,270
you know the how the allocation should

117
00:05:01,569 --> 00:05:06,490
look like you know you have an IP

118
00:05:04,270 --> 00:05:09,609
address block so you need to get a

119
00:05:06,490 --> 00:05:11,289
certificate proving the ownership that

120
00:05:09,610 --> 00:05:13,810
you are the owner of that<font color="#E5E5E5"> IP address</font>

121
00:05:11,289 --> 00:05:16,060
blocks in similar to an AS number that's

122
00:05:13,810 --> 00:05:17,560
a resource and we need to<font color="#E5E5E5"> be totally</font>

123
00:05:16,060 --> 00:05:20,499
verifiable that you are the owner of

124
00:05:17,560 --> 00:05:24,460
that<font color="#E5E5E5"> is number so the top portion talks</font>

125
00:05:20,499 --> 00:05:26,499
about how you know an r ir alli are

126
00:05:24,460 --> 00:05:27,849
organized we would<font color="#E5E5E5"> look like and</font>

127
00:05:26,499 --> 00:05:30,339
typically there would be a<font color="#E5E5E5"> back-end</font>

128
00:05:27,849 --> 00:05:32,789
process which is which is<font color="#E5E5E5"> you know with</font>

129
00:05:30,339 --> 00:05:35,919
with a<font color="#CCCCCC"> front-end providing the GUI to</font>

130
00:05:32,789 --> 00:05:37,719
you know to configure that this

131
00:05:35,919 --> 00:05:40,419
<font color="#E5E5E5">allocations and stuff so that's where</font>

132
00:05:37,719 --> 00:05:41,979
then that's one part of the<font color="#E5E5E5"> aqua care</font>

133
00:05:40,419 --> 00:05:44,830
process fits in which is<font color="#CCCCCC"> a ticket which</font>

134
00:05:41,979 --> 00:05:47,050
is called as not bi engine<font color="#CCCCCC"> to to issue</font>

135
00:05:44,830 --> 00:05:49,839
certificates to issue rowers and to

136
00:05:47,050 --> 00:05:52,300
publish that to the RPK a store of the

137
00:05:49,839 --> 00:05:55,810
<font color="#E5E5E5">toasted LT care store so once we have</font>

138
00:05:52,300 --> 00:05:59,949
that that<font color="#E5E5E5"> book those objects published</font>

139
00:05:55,810 --> 00:06:02,110
that's where there's the middle database

140
00:05:59,949 --> 00:06:05,589
such that shows<font color="#E5E5E5"> that this is this is the</font>

141
00:06:02,110 --> 00:06:07,120
<font color="#E5E5E5">resource pki framework once that and</font>

142
00:06:05,589 --> 00:06:08,860
that's that's essentially a distributed

143
00:06:07,120 --> 00:06:10,300
framework you know that is there is a

144
00:06:08,860 --> 00:06:13,240
<font color="#E5E5E5">root and that is there is a hierarchy</font>

145
00:06:10,300 --> 00:06:15,339
and you know that database exists which

146
00:06:13,240 --> 00:06:18,009
which contains all the certificates in

147
00:06:15,339 --> 00:06:21,759
the signed objects then that is there is

148
00:06:18,009 --> 00:06:26,169
a protocol that periodically fetches the

149
00:06:21,759 --> 00:06:28,930
data from that rpki store and then there

150
00:06:26,169 --> 00:06:31,599
are there<font color="#CCCCCC"> are certain more objects</font><font color="#E5E5E5"> that</font>

151
00:06:28,930 --> 00:06:33,699
are created called cash or servers so

152
00:06:31,599 --> 00:06:35,620
that a little slide we're going to show

153
00:06:33,699 --> 00:06:37,569
how that how the service our place to

154
00:06:35,620 --> 00:06:40,149
where the servers are placed and what do

155
00:06:37,569 --> 00:06:42,430
they what do they do but those those

156
00:06:40,149 --> 00:06:44,289
cash are essentially you know getting a

157
00:06:42,430 --> 00:06:46,779
cache of the ipk a store locally

158
00:06:44,289 --> 00:06:50,680
that you know rest of the rest of the

159
00:06:46,779 --> 00:06:52,749
you know routers and other other

160
00:06:50,680 --> 00:06:56,229
hardware they can eat they can use to

161
00:06:52,749 --> 00:06:58,419
use the resources once it comes to the

162
00:06:56,229 --> 00:07:00,969
<font color="#CCCCCC">cache then that</font><font color="#E5E5E5"> is a separate protocol</font>

163
00:06:58,419 --> 00:07:02,498
that is defined that we have defined

164
00:07:00,969 --> 00:07:04,689
it's called you know arctic edge router

165
00:07:02,499 --> 00:07:07,389
protocol that takes the data from the

166
00:07:04,689 --> 00:07:10,680
cache and you know has a secure session

167
00:07:07,389 --> 00:07:13,899
to the actual end bgp router bgp speaker

168
00:07:10,680 --> 00:07:15,129
to get the data in a binary format once

169
00:07:13,899 --> 00:07:17,499
you get<font color="#E5E5E5"> the data you build the database</font>

170
00:07:15,129 --> 00:07:20,709
locally on the speaker and then you

171
00:07:17,499 --> 00:07:25,360
validate the valid at allowed in or out

172
00:07:20,709 --> 00:07:27,789
announcements that we receive so again

173
00:07:25,360 --> 00:07:30,789
this is this is again showing how do the

174
00:07:27,789 --> 00:07:33,219
how do the cap cache hierarchy could

175
00:07:30,789 --> 00:07:36,639
look like<font color="#CCCCCC"> if it's an extremely large isp</font>

176
00:07:33,219 --> 00:07:39,279
the<font color="#E5E5E5"> solution</font><font color="#CCCCCC"> to all of the words scale</font>

177
00:07:36,639 --> 00:07:41,770
problems is by creating hierarchies so

178
00:07:39,279 --> 00:07:44,020
you can create hierarchies where you can

179
00:07:41,770 --> 00:07:45,698
have caches in Asia in<font color="#E5E5E5"> North America and</font>

180
00:07:44,020 --> 00:07:48,758
<font color="#E5E5E5">Europe and then the next level of</font>

181
00:07:45,699 --> 00:07:50,949
hierarchy of caches<font color="#CCCCCC"> or each pup can</font>

182
00:07:48,759 --> 00:07:53,139
store a cache or two for<font color="#CCCCCC"> intensive</font>

183
00:07:50,949 --> 00:07:55,509
purposes and then you can<font color="#E5E5E5"> go down there</font>

184
00:07:53,139 --> 00:07:57,729
or you know ultimately<font color="#CCCCCC"> your PGP speaker</font>

185
00:07:55,509 --> 00:07:59,409
so busy<font color="#CCCCCC"> P routers at the edges can</font>

186
00:07:57,729 --> 00:08:05,248
<font color="#E5E5E5">connect to one or two of these caches to</font>

187
00:07:59,409 --> 00:08:08,919
receive the IP ki data so one closer

188
00:08:05,249 --> 00:08:13,330
look at the raw like we talked about<font color="#CCCCCC"> row</font>

189
00:08:08,919 --> 00:08:15,549
is assigned object and it binds an IP

190
00:08:13,330 --> 00:08:17,169
address block to a nice number<font color="#E5E5E5"> to</font>

191
00:08:15,550 --> 00:08:20,129
to say that this<font color="#E5E5E5"> is number is is</font>

192
00:08:17,169 --> 00:08:25,508
authenticated to or is authorized to

193
00:08:20,129 --> 00:08:27,009
announce this IP address block so it

194
00:08:25,509 --> 00:08:28,899
indicates that this perfect place to

195
00:08:27,009 --> 00:08:30,879
authorization that<font color="#E5E5E5"> nation can can arrive</font>

196
00:08:28,899 --> 00:08:33,729
the originator prefix and the format of

197
00:08:30,879 --> 00:08:35,829
that from from the<font color="#CCCCCC"> BGP you know from</font>

198
00:08:33,729 --> 00:08:38,199
visiting from from somebody interested

199
00:08:35,828 --> 00:08:40,269
in vgb looks like<font color="#E5E5E5"> a case number and the</font>

200
00:08:38,198 --> 00:08:45,099
prefix block the traffic / mask and

201
00:08:40,269 --> 00:08:49,420
<font color="#CCCCCC">ahmad the max mass length thrower</font><font color="#E5E5E5"> that</font>

202
00:08:45,100 --> 00:08:52,839
<font color="#E5E5E5">is an example of that so once we have</font>

203
00:08:49,420 --> 00:08:54,400
the rpki side of the repository sorted

204
00:08:52,839 --> 00:08:57,340
out this is this<font color="#E5E5E5"> is</font>

205
00:08:54,400 --> 00:08:59,199
again a closer look at how the BGP you

206
00:08:57,340 --> 00:09:02,710
know PBG beside of the implementation

207
00:08:59,200 --> 00:09:05,700
<font color="#CCCCCC">looks like on the extreme left it is the</font>

208
00:09:02,710 --> 00:09:08,080
it is a distributed at BK<font color="#E5E5E5"> repository</font>

209
00:09:05,700 --> 00:09:10,810
from<font color="#E5E5E5"> the repository like we talked about</font>

210
00:09:08,080 --> 00:09:13,270
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is a protocol which would like to</font>

211
00:09:10,810 --> 00:09:16,150
call the<font color="#CCCCCC"> arsenio</font><font color="#E5E5E5"> what there's a protocol</font>

212
00:09:13,270 --> 00:09:18,280
that the cache uses to fetch or gather

213
00:09:16,150 --> 00:09:21,370
the data in from the distributed

214
00:09:18,280 --> 00:09:23,560
database and<font color="#CCCCCC"> then we assume that there</font>

215
00:09:21,370 --> 00:09:25,750
are one or two of these caches either in

216
00:09:23,560 --> 00:09:29,530
pop or somewhere local to the router

217
00:09:25,750 --> 00:09:31,480
that the router can connect you to get

218
00:09:29,530 --> 00:09:32,920
the data so that's that's the next part

219
00:09:31,480 --> 00:09:34,960
which is<font color="#E5E5E5"> the cash to router protocol</font>

220
00:09:32,920 --> 00:09:38,439
it's nothing<font color="#CCCCCC"> but a simple</font><font color="#E5E5E5"> SSH session</font>

221
00:09:34,960 --> 00:09:41,080
with with the<font color="#E5E5E5"> format defined to fetch</font>

222
00:09:38,440 --> 00:09:43,450
the<font color="#CCCCCC"> IP address to a s number or IP</font>

223
00:09:41,080 --> 00:09:46,420
address block IP prefix<font color="#E5E5E5"> to race number</font>

224
00:09:43,450 --> 00:09:49,810
mappings once the router gets the data

225
00:09:46,420 --> 00:09:52,719
it creates a validation database which

226
00:09:49,810 --> 00:09:54,790
<font color="#CCCCCC">is essentially a tree of storing the IP</font>

227
00:09:52,720 --> 00:09:57,850
address blocks to these s number

228
00:09:54,790 --> 00:09:59,740
mappings so that's that's one part of

229
00:09:57,850 --> 00:10:02,320
the part of the implementation the other

230
00:09:59,740 --> 00:10:04,720
part<font color="#CCCCCC"> of the implementation is when when</font>

231
00:10:02,320 --> 00:10:08,740
the when the router receives prefixes or

232
00:10:04,720 --> 00:10:11,020
updates from the peers it bit it then

233
00:10:08,740 --> 00:10:13,000
goes<font color="#E5E5E5"> and looks at this validation</font>

234
00:10:11,020 --> 00:10:15,340
database to figure out whether the base

235
00:10:13,000 --> 00:10:17,920
number that thought it came out with<font color="#E5E5E5"> the</font>

236
00:10:15,340 --> 00:10:20,980
origin<font color="#E5E5E5"> age number as claimed from the</font>

237
00:10:17,920 --> 00:10:23,650
bit message is actually a valid one and

238
00:10:20,980 --> 00:10:25,450
based on that it it you know take some

239
00:10:23,650 --> 00:10:30,579
action and fraction will be described in

240
00:10:25,450 --> 00:10:33,520
let<font color="#E5E5E5"> us later stage the details of the</font>

241
00:10:30,580 --> 00:10:36,220
cash to router protocol like we talked

242
00:10:33,520 --> 00:10:39,550
about it is it's an SS securitisation

243
00:10:36,220 --> 00:10:41,800
between the router and the cash and it

244
00:10:39,550 --> 00:10:43,959
is a serial number based binary exchange

245
00:10:41,800 --> 00:10:46,150
of pd use containing the prefix

246
00:10:43,960 --> 00:10:48,820
<font color="#CCCCCC">religionist mappings on the right side</font><font color="#E5E5E5"> a</font>

247
00:10:46,150 --> 00:10:50,620
typical<font color="#E5E5E5"> sequence diagram of how the how</font>

248
00:10:48,820 --> 00:10:52,840
the exchanges would look like when the

249
00:10:50,620 --> 00:10:55,630
router comes up it basically<font color="#E5E5E5"> creates a</font>

250
00:10:52,840 --> 00:10:57,210
sensation with the cash or with one or

251
00:10:55,630 --> 00:10:59,860
<font color="#CCCCCC">more caches that have been configured</font>

252
00:10:57,210 --> 00:11:02,260
and it sends something cause it is said

253
00:10:59,860 --> 00:11:04,500
query pdu that basically says give me<font color="#CCCCCC"> a</font>

254
00:11:02,260 --> 00:11:07,000
dumb of everything that you know of and

255
00:11:04,500 --> 00:11:09,490
that's when the cash sense

256
00:11:07,000 --> 00:11:12,670
again in the format which<font color="#CCCCCC"> is defined in</font>

257
00:11:09,490 --> 00:11:16,720
terms of<font color="#E5E5E5"> T Elvis to send the data like</font>

258
00:11:12,670 --> 00:11:19,449
ipv4 prefixes or<font color="#E5E5E5"> ipv6 prefixes all those</font>

259
00:11:16,720 --> 00:11:21,520
<font color="#E5E5E5">in separate</font><font color="#CCCCCC"> bdu's and each of</font><font color="#E5E5E5"> them is</font>

260
00:11:19,450 --> 00:11:23,470
associated with<font color="#E5E5E5"> the serial</font><font color="#CCCCCC"> number back</font>

261
00:11:21,520 --> 00:11:25,000
to<font color="#CCCCCC"> the router and when you know when it</font>

262
00:11:23,470 --> 00:11:27,880
<font color="#CCCCCC">is done with the</font><font color="#E5E5E5"> data is a sense an end</font>

263
00:11:25,000 --> 00:11:30,310
<font color="#E5E5E5">of data so that's for the initial them</font>

264
00:11:27,880 --> 00:11:32,920
after that<font color="#CCCCCC"> the protocol defines</font><font color="#E5E5E5"> a format</font>

265
00:11:30,310 --> 00:11:34,839
by which the router can periodically go

266
00:11:32,920 --> 00:11:37,660
and query if you have new data give me

267
00:11:34,840 --> 00:11:40,030
or like the normal notification

268
00:11:37,660 --> 00:11:43,270
mechanism that we know of the cash can

269
00:11:40,030 --> 00:11:46,569
send asynchronously and notify pdu with

270
00:11:43,270 --> 00:11:48,520
the with the<font color="#CCCCCC"> you know the latest serial</font>

271
00:11:46,570 --> 00:11:50,490
number back to<font color="#E5E5E5"> the router if it has new</font>

272
00:11:48,520 --> 00:11:57,569
data and then outer goes and fetches the

273
00:11:50,490 --> 00:12:00,570
fetches the new data so on on the router

274
00:11:57,570 --> 00:12:02,830
once we have<font color="#CCCCCC"> the data build or the</font>

275
00:12:00,570 --> 00:12:05,350
database the<font color="#E5E5E5"> britax validation database</font>

276
00:12:02,830 --> 00:12:07,990
that which<font color="#CCCCCC"> is which forms a tree sort of</font>

277
00:12:05,350 --> 00:12:11,530
a tree which is<font color="#E5E5E5"> the mask and the prefix</font>

278
00:12:07,990 --> 00:12:13,300
mass and the<font color="#E5E5E5"> s number this kind of gifts</font>

279
00:12:11,530 --> 00:12:15,010
are pseudo quarters<font color="#CCCCCC"> you know algorithm</font>

280
00:12:13,300 --> 00:12:19,469
of how the validation logic would look

281
00:12:15,010 --> 00:12:22,660
like so 11 essential part of of this<font color="#E5E5E5"> is</font>

282
00:12:19,470 --> 00:12:25,300
because the<font color="#CCCCCC"> Ruhr contains in a prefix</font>

283
00:12:22,660 --> 00:12:28,959
last mass length and a max length as

284
00:12:25,300 --> 00:12:32,020
well so this<font color="#CCCCCC"> is the SAS is allowed to</font>

285
00:12:28,960 --> 00:12:33,790
originate prefixes that that belong in

286
00:12:32,020 --> 00:12:35,620
this particular range which is<font color="#E5E5E5"> the mass</font>

287
00:12:33,790 --> 00:12:37,180
length at that that is provided on the

288
00:12:35,620 --> 00:12:39,520
max like that is provided the maximum

289
00:12:37,180 --> 00:12:41,650
thing that is provided and the algorithm

290
00:12:39,520 --> 00:12:43,540
essentially takes the data and<font color="#E5E5E5"> when it</font>

291
00:12:41,650 --> 00:12:46,510
validates it creates three states for

292
00:12:43,540 --> 00:12:50,230
the<font color="#CCCCCC"> data for the update</font><font color="#E5E5E5"> message that it</font>

293
00:12:46,510 --> 00:12:53,230
receives from the<font color="#E5E5E5"> beer the states could</font>

294
00:12:50,230 --> 00:12:56,800
be valid not found<font color="#E5E5E5"> or invalid so the</font>

295
00:12:53,230 --> 00:12:59,410
valiant actually means that i received a

296
00:12:56,800 --> 00:13:01,780
prefix announcement or an update<font color="#E5E5E5"> message</font>

297
00:12:59,410 --> 00:13:04,270
from a fear and the origin is that<font color="#E5E5E5"> i</font>

298
00:13:01,780 --> 00:13:05,709
derive from that update message<font color="#CCCCCC"> is</font>

299
00:13:04,270 --> 00:13:08,170
actually the originals that<font color="#E5E5E5"> matches</font>

300
00:13:05,710 --> 00:13:10,480
against the validation database then of

301
00:13:08,170 --> 00:13:12,310
course the announcement is valid and<font color="#CCCCCC"> i</font>

302
00:13:10,480 --> 00:13:13,870
can accept<font color="#E5E5E5"> it and then you know process</font>

303
00:13:12,310 --> 00:13:15,739
it as well as send it send it to all all

304
00:13:13,870 --> 00:13:17,810
my peers

305
00:13:15,740 --> 00:13:19,100
the other state could be invalid which

306
00:13:17,810 --> 00:13:22,040
essentially means that the prefix

307
00:13:19,100 --> 00:13:23,750
actually exists in the database so that

308
00:13:22,040 --> 00:13:25,969
is the prefix with the<font color="#CCCCCC"> massillon that</font>

309
00:13:23,750 --> 00:13:27,950
matches the database but the ACE number

310
00:13:25,970 --> 00:13:30,650
that the database tells me does<font color="#CCCCCC"> not</font>

311
00:13:27,950 --> 00:13:32,630
match the alias number that the object

312
00:13:30,650 --> 00:13:34,730
message came with or originates number

313
00:13:32,630 --> 00:13:36,380
the doublet message<font color="#E5E5E5"> team breath in that</font>

314
00:13:34,730 --> 00:13:38,600
case it is invalid in that I can take

315
00:13:36,380 --> 00:13:40,970
some actions based on it and the third

316
00:13:38,600 --> 00:13:42,590
state of course is<font color="#E5E5E5"> not found because we</font>

317
00:13:40,970 --> 00:13:44,870
<font color="#E5E5E5">cannot always assume</font><font color="#CCCCCC"> that the database</font>

318
00:13:42,590 --> 00:13:46,700
is complete especially through the

319
00:13:44,870 --> 00:13:48,680
gradual migration process that we would

320
00:13:46,700 --> 00:13:50,630
<font color="#CCCCCC">be deploying the</font><font color="#E5E5E5"> the new advocare</font>

321
00:13:48,680 --> 00:13:52,910
framework with in which case the prefix

322
00:13:50,630 --> 00:13:54,470
does not exist foul and<font color="#CCCCCC"> the result of</font>

323
00:13:52,910 --> 00:13:56,600
course should be<font color="#E5E5E5"> not formed so this this</font>

324
00:13:54,470 --> 00:14:02,960
gives the algorithm for how do we derive

325
00:13:56,600 --> 00:14:05,990
those states so once we derive the

326
00:14:02,960 --> 00:14:07,790
<font color="#E5E5E5">states what what actions can the router</font>

327
00:14:05,990 --> 00:14:11,410
take what actions can the BGT speaker

328
00:14:07,790 --> 00:14:13,819
take and this slide talks a bit about

329
00:14:11,410 --> 00:14:16,880
you know as second in the life of an<font color="#CCCCCC"> EB</font>

330
00:14:13,820 --> 00:14:19,880
gpupdate kind of so the<font color="#CCCCCC"> ebgp update</font>

331
00:14:16,880 --> 00:14:22,400
arrives on<font color="#CCCCCC"> the speaker we gather the</font>

332
00:14:19,880 --> 00:14:23,780
origin<font color="#CCCCCC"> a.s and validated against the</font>

333
00:14:22,400 --> 00:14:25,850
validation database like we talked about

334
00:14:23,780 --> 00:14:28,910
so that's the<font color="#CCCCCC"> first step check and mark</font>

335
00:14:25,850 --> 00:14:32,330
<font color="#E5E5E5">the origin validity after that the</font>

336
00:14:28,910 --> 00:14:34,010
implementation allows for matching

337
00:14:32,330 --> 00:14:38,420
against the<font color="#E5E5E5"> states that we talked about</font>

338
00:14:34,010 --> 00:14:41,180
<font color="#E5E5E5">which is valid invalid or not found in</font>

339
00:14:38,420 --> 00:14:42,680
the<font color="#CCCCCC"> in the in the usual</font><font color="#E5E5E5"> inbound route</font>

340
00:14:41,180 --> 00:14:44,739
policy that you thought you<font color="#E5E5E5"> applied to</font>

341
00:14:42,680 --> 00:14:48,739
<font color="#E5E5E5">the neighbor so you can match against</font>

342
00:14:44,740 --> 00:14:51,950
the state<font color="#CCCCCC"> of</font><font color="#E5E5E5"> being invalid and drop all</font>

343
00:14:48,740 --> 00:14:53,480
the objects for example so that's that's

344
00:14:51,950 --> 00:14:55,580
the next step that applied the inbound

345
00:14:53,480 --> 00:14:57,440
policy and the policy may match on this

346
00:14:55,580 --> 00:15:01,460
validity stayed and celebratory

347
00:14:57,440 --> 00:15:03,200
attributes so once the once all<font color="#E5E5E5"> qualstar</font>

348
00:15:01,460 --> 00:15:05,840
<font color="#E5E5E5">inbound policy evaluation takes place</font>

349
00:15:03,200 --> 00:15:08,000
you I've lied<font color="#CCCCCC"> to the to your eight patch</font>

350
00:15:05,840 --> 00:15:09,740
<font color="#CCCCCC">ribbon and process and you know run your</font>

351
00:15:08,000 --> 00:15:13,610
decision process and the<font color="#E5E5E5"> next steps go</font>

352
00:15:09,740 --> 00:15:16,010
on and then<font color="#CCCCCC"> you take</font><font color="#E5E5E5"> those prefixes and</font>

353
00:15:13,610 --> 00:15:21,830
send it out to your ID chip appears or

354
00:15:16,010 --> 00:15:25,010
<font color="#CCCCCC">all other AP superiors so some examples</font>

355
00:15:21,830 --> 00:15:26,900
of the of the policy<font color="#CCCCCC"> that you can apply</font>

356
00:15:25,010 --> 00:15:28,760
on the<font color="#E5E5E5"> on the inbound side of the</font>

357
00:15:26,900 --> 00:15:31,290
neighbor

358
00:15:28,760 --> 00:15:33,750
the typical mass<font color="#E5E5E5"> treatment if the origin</font>

359
00:15:31,290 --> 00:15:36,089
validation state is valid then apply a

360
00:15:33,750 --> 00:15:39,540
higher local proof than usual local

361
00:15:36,090 --> 00:15:41,910
press you can<font color="#CCCCCC"> set it</font><font color="#E5E5E5"> as 50 for the ones</font>

362
00:15:39,540 --> 00:15:43,740
that do not a not valid and set hundred

363
00:15:41,910 --> 00:15:46,050
for<font color="#CCCCCC"> the ones that are that are valid and</font>

364
00:15:43,740 --> 00:15:47,880
that's that's a typical way of saying

365
00:15:46,050 --> 00:15:50,219
that<font color="#E5E5E5"> I always prefer the ones that are</font>

366
00:15:47,880 --> 00:15:52,020
valid prefixes according<font color="#CCCCCC"> to the</font>

367
00:15:50,220 --> 00:15:54,570
validation database and you know not

368
00:15:52,020 --> 00:15:57,090
prefer the<font color="#CCCCCC"> others another example could</font>

369
00:15:54,570 --> 00:15:58,710
be you set set the<font color="#CCCCCC"> med not the local</font>

370
00:15:57,090 --> 00:16:00,690
<font color="#CCCCCC">terrific that's the highest in the</font>

371
00:15:58,710 --> 00:16:03,120
decision process but set different types

372
00:16:00,690 --> 00:16:05,730
of meds based on whether they're valid

373
00:16:03,120 --> 00:16:08,400
in not found or invalid you could also

374
00:16:05,730 --> 00:16:12,420
choose to drop all the invalid routes by

375
00:16:08,400 --> 00:16:14,699
just matching on the invalid<font color="#E5E5E5"> state so</font>

376
00:16:12,420 --> 00:16:17,219
the DC decision process changes from

377
00:16:14,700 --> 00:16:20,340
these states again this<font color="#E5E5E5"> is optional</font>

378
00:16:17,220 --> 00:16:23,790
because<font color="#E5E5E5"> by default what would happen is</font>

379
00:16:20,340 --> 00:16:25,140
you just mark them based on what you

380
00:16:23,790 --> 00:16:26,910
have searched for what you have looked

381
00:16:25,140 --> 00:16:28,710
for in the validation state then you

382
00:16:26,910 --> 00:16:31,140
apply then everything else is left to

383
00:16:28,710 --> 00:16:34,380
the operator that<font color="#E5E5E5"> you apply the usual</font>

384
00:16:31,140 --> 00:16:36,140
policy and set the existing attributes

385
00:16:34,380 --> 00:16:40,200
to to<font color="#CCCCCC"> play for one versus the other</font>

386
00:16:36,140 --> 00:16:42,960
there is also another process that is

387
00:16:40,200 --> 00:16:45,330
defined that<font color="#E5E5E5"> that we have worked on</font>

388
00:16:42,960 --> 00:16:48,150
which is enabled by configuration only

389
00:16:45,330 --> 00:16:51,510
and it automatically matches on the

390
00:16:48,150 --> 00:16:54,360
<font color="#E5E5E5">states that that that the validation</font>

391
00:16:51,510 --> 00:16:56,490
process came out with so what made up<font color="#CCCCCC"> by</font>

392
00:16:54,360 --> 00:16:58,500
as we talked about valid not found and

393
00:16:56,490 --> 00:17:01,830
invalid you just assign different states

394
00:16:58,500 --> 00:17:04,349
and you just insert a step in<font color="#E5E5E5"> your in</font>

395
00:17:01,830 --> 00:17:07,230
your<font color="#E5E5E5"> decision process that that you know</font>

396
00:17:04,349 --> 00:17:09,719
prefers valid do not found to invalid

397
00:17:07,230 --> 00:17:15,030
and this is defined<font color="#CCCCCC"> to be before the</font>

398
00:17:09,720 --> 00:17:16,770
local proof comparison step on of<font color="#CCCCCC"> course</font>

399
00:17:15,030 --> 00:17:20,339
the blue magician can do<font color="#E5E5E5"> different types</font>

400
00:17:16,770 --> 00:17:22,050
of policy overrides you know you you

401
00:17:20,339 --> 00:17:24,839
enable disable the prefix validation

402
00:17:22,050 --> 00:17:27,270
marking globally or on a per avg be<font color="#E5E5E5"> peer</font>

403
00:17:24,839 --> 00:17:29,820
for a particular set of prefixes that if

404
00:17:27,270 --> 00:17:31,980
<font color="#CCCCCC">you're interested in you know then</font>

405
00:17:29,820 --> 00:17:34,460
similarly<font color="#E5E5E5"> the enable disable validate</font>

406
00:17:31,980 --> 00:17:37,140
state comparison in<font color="#CCCCCC"> the decision process</font>

407
00:17:34,460 --> 00:17:39,240
the same kind<font color="#E5E5E5"> of knobs globally private</font>

408
00:17:37,140 --> 00:17:41,100
appear in<font color="#CCCCCC"> four set of prefixes and then</font>

409
00:17:39,240 --> 00:17:42,600
what<font color="#CCCCCC"> are the default</font>

410
00:17:41,100 --> 00:17:46,980
use and how do you<font color="#E5E5E5"> change the default</font>

411
00:17:42,600 --> 00:17:49,678
values another interesting part<font color="#E5E5E5"> of this</font>

412
00:17:46,980 --> 00:17:52,230
is because<font color="#E5E5E5"> the prefix validation happens</font>

413
00:17:49,679 --> 00:17:54,539
only on the ebgp side that you receive

414
00:17:52,230 --> 00:17:57,090
from<font color="#E5E5E5"> your ebgp Pierre I'd know either</font>

415
00:17:54,539 --> 00:17:59,129
from your customer or from your fear and

416
00:17:57,090 --> 00:18:01,830
you would<font color="#E5E5E5"> like to validate the prefixes</font>

417
00:17:59,130 --> 00:18:03,720
you know and set a particular marking

418
00:18:01,830 --> 00:18:06,240
but how<font color="#CCCCCC"> about when you send them to your</font>

419
00:18:03,720 --> 00:18:08,130
ibgp<font color="#CCCCCC"> peers how do how do you convey the</font>

420
00:18:06,240 --> 00:18:11,490
fact how do<font color="#E5E5E5"> you automatically convey the</font>

421
00:18:08,130 --> 00:18:12,960
fact that this particular state is valid

422
00:18:11,490 --> 00:18:14,640
or this particular state you know this

423
00:18:12,960 --> 00:18:17,940
particular prefix the state is invalid

424
00:18:14,640 --> 00:18:19,440
or not found and that we<font color="#E5E5E5"> have defined an</font>

425
00:18:17,940 --> 00:18:21,570
external community to just you know

426
00:18:19,440 --> 00:18:23,520
propagate that state back to<font color="#E5E5E5"> your</font><font color="#CCCCCC"> I BTW</font>

427
00:18:21,570 --> 00:18:28,559
peers because they can also do the do

428
00:18:23,520 --> 00:18:32,760
the similar comparison that<font color="#E5E5E5"> you did so</font>

429
00:18:28,559 --> 00:18:35,549
about bit about status for all that we

430
00:18:32,760 --> 00:18:37,350
we discussed from from PGP perspective

431
00:18:35,549 --> 00:18:39,059
the product code on you know for the

432
00:18:37,350 --> 00:18:42,570
<font color="#E5E5E5">part that is on the router available</font>

433
00:18:39,059 --> 00:18:44,190
both and<font color="#E5E5E5"> I was an XR then Eddie sitting</font>

434
00:18:42,570 --> 00:18:45,360
right there you can contact if you'll

435
00:18:44,190 --> 00:18:47,970
just have to play around with it

436
00:18:45,360 --> 00:18:51,809
experiment with it similarly<font color="#CCCCCC"> for the</font>

437
00:18:47,970 --> 00:18:54,210
Aqua ki implementation that we saw the

438
00:18:51,809 --> 00:18:55,559
RPK engine and creating those you know

439
00:18:54,210 --> 00:18:58,110
certificates and stuff like that and

440
00:18:55,559 --> 00:18:59,879
publishing that is available<font color="#CCCCCC"> as open</font>

441
00:18:58,110 --> 00:19:02,370
source and here is the pointer to the

442
00:18:59,880 --> 00:19:04,110
open source if would like to you know

443
00:19:02,370 --> 00:19:09,209
get that and get that<font color="#E5E5E5"> into a cache or</font>

444
00:19:04,110 --> 00:19:11,668
whatever and this<font color="#E5E5E5"> is just</font><font color="#CCCCCC"> showing a</font>

445
00:19:09,210 --> 00:19:13,140
picture<font color="#E5E5E5"> of the open testbed that you</font>

446
00:19:11,669 --> 00:19:16,799
know people<font color="#CCCCCC"> have been playing around</font>

447
00:19:13,140 --> 00:19:19,049
with and who who have you know applique

448
00:19:16,799 --> 00:19:21,510
I engines already implemented already

449
00:19:19,049 --> 00:19:22,860
there<font color="#CCCCCC"> to you know issue the certificates</font>

450
00:19:21,510 --> 00:19:26,070
and store the certificates and this is

451
00:19:22,860 --> 00:19:31,949
how<font color="#E5E5E5"> well that BK I trust store or</font>

452
00:19:26,070 --> 00:19:33,510
requisite would look like about the the

453
00:19:31,950 --> 00:19:35,900
configuration combines it just just

454
00:19:33,510 --> 00:19:38,549
literally to the<font color="#E5E5E5"> configuration commands</font>

455
00:19:35,900 --> 00:19:40,950
of how you would if you would like<font color="#CCCCCC"> to</font>

456
00:19:38,549 --> 00:19:42,900
play with with<font color="#E5E5E5"> the router you would</font>

457
00:19:40,950 --> 00:19:44,669
configure a cache with the cache cache

458
00:19:42,900 --> 00:19:47,669
name and in a port numbers right now the

459
00:19:44,669 --> 00:19:49,500
prototype code just you know<font color="#CCCCCC"> has a</font><font color="#E5E5E5"> TCP</font>

460
00:19:47,669 --> 00:19:51,929
connection to the cash instead of<font color="#E5E5E5"> an SSH</font>

461
00:19:49,500 --> 00:19:54,600
so this is a configuration for just

462
00:19:51,929 --> 00:19:57,809
configuring a TCP session with the<font color="#E5E5E5"> cash</font>

463
00:19:54,600 --> 00:20:00,299
the data and<font color="#E5E5E5"> then the usual knobs of</font>

464
00:19:57,809 --> 00:20:01,980
either validating you know enabling the

465
00:20:00,299 --> 00:20:06,210
validation so that you start marking

466
00:20:01,980 --> 00:20:08,100
your your<font color="#E5E5E5"> BGP of bits or you can you can</font>

467
00:20:06,210 --> 00:20:10,559
<font color="#CCCCCC">even have a knob to compare the</font>

468
00:20:08,100 --> 00:20:12,870
validation state to automatically in

469
00:20:10,559 --> 00:20:14,730
your decision<font color="#E5E5E5"> process with with knobs</font>

470
00:20:12,870 --> 00:20:16,020
whether to allow the invalid or you know

471
00:20:14,730 --> 00:20:20,669
<font color="#CCCCCC">not allow the invalid and stuff like</font>

472
00:20:16,020 --> 00:20:22,530
that and you know typically to the show

473
00:20:20,669 --> 00:20:26,250
<font color="#CCCCCC">command</font><font color="#E5E5E5"> I don't know if you can if you</font>

474
00:20:22,530 --> 00:20:27,629
can see the screen but the you know the

475
00:20:26,250 --> 00:20:31,789
prefix validation database that the

476
00:20:27,630 --> 00:20:35,490
speaker has built<font color="#E5E5E5"> the show off of that</font>

477
00:20:31,789 --> 00:20:37,140
and similarly for<font color="#E5E5E5"> the marking once the</font>

478
00:20:35,490 --> 00:20:39,990
marking is done for the prefix you can

479
00:20:37,140 --> 00:20:42,809
again see it with you know<font color="#CCCCCC"> the</font><font color="#E5E5E5"> usual</font>

480
00:20:39,990 --> 00:20:44,429
show bgp command with the origin but you

481
00:20:42,809 --> 00:20:47,129
know where is invalidated<font color="#E5E5E5"> state at last</font>

482
00:20:44,429 --> 00:20:49,650
site into that that is extra which is

483
00:20:47,130 --> 00:20:53,280
whether it's valid invalid or or not

484
00:20:49,650 --> 00:20:54,600
<font color="#E5E5E5">found here your some of the references</font>

485
00:20:53,280 --> 00:20:58,850
and<font color="#E5E5E5"> of course the cyber working group</font>

486
00:20:54,600 --> 00:21:06,020
has has all the all the crowds<font color="#CCCCCC"> their</font>

487
00:20:58,850 --> 00:21:06,020
questions<font color="#CCCCCC"> portions</font>

488
00:21:09,130 --> 00:21:15,240
and if folks are hungry<font color="#E5E5E5"> okay thank you</font>

489
00:21:12,760 --> 00:21:15,240
<font color="#E5E5E5">very</font><font color="#CCCCCC"> much</font>

