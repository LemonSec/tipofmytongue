1
00:00:00,030 --> 00:00:06,180
right thank you<font color="#E5E5E5"> very much so it is the</font>

2
00:00:04,770 --> 00:00:08,490
<font color="#CCCCCC">the universally</font><font color="#E5E5E5"> applied rule of thumb</font>

3
00:00:06,180 --> 00:00:11,790
<font color="#E5E5E5">that the buffer of a router needs to be</font>

4
00:00:08,490 --> 00:00:14,280
<font color="#CCCCCC">2t times</font><font color="#E5E5E5"> C where 2t is the two-way</font>

5
00:00:11,790 --> 00:00:17,189
propagation delay<font color="#CCCCCC"> of a flow through the</font>

6
00:00:14,280 --> 00:00:18,830
router and C is the<font color="#E5E5E5"> capacity of the</font>

7
00:00:17,190 --> 00:00:21,029
bottleneck<font color="#E5E5E5"> Lane</font>

8
00:00:18,830 --> 00:00:23,490
often we<font color="#E5E5E5"> don't know</font><font color="#CCCCCC"> exactly what the</font>

9
00:00:21,029 --> 00:00:25,529
wrong hood time go through<font color="#CCCCCC"> Robert is so</font>

10
00:00:23,490 --> 00:00:29,009
what people<font color="#E5E5E5"> will do</font><font color="#CCCCCC"> is they'll simply</font>

11
00:00:25,529 --> 00:00:31,710
assume it's<font color="#E5E5E5"> 150 milliseconds</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> rule</font>

12
00:00:29,010 --> 00:00:33,710
<font color="#CCCCCC">is mandated</font><font color="#E5E5E5"> in many RFPs for backbone</font>

13
00:00:31,710 --> 00:00:37,950
and<font color="#E5E5E5"> edge routers there's at least one</font>

14
00:00:33,710 --> 00:00:40,110
<font color="#CCCCCC">hour seat from the ITF it's usually the</font>

15
00:00:37,950 --> 00:00:41,670
reference<font color="#E5E5E5"> where this rule comes from is</font>

16
00:00:40,110 --> 00:00:43,320
usually a paper we<font color="#E5E5E5"> will own a siren song</font>

17
00:00:41,670 --> 00:00:45,870
called<font color="#E5E5E5"> highest performance TCP and</font>

18
00:00:43,320 --> 00:00:47,730
<font color="#CCCCCC">am-ness net</font><font color="#E5E5E5"> high performance at that</font>

19
00:00:45,870 --> 00:00:51,690
time<font color="#E5E5E5"> and about 40 megabits per second</font>

20
00:00:47,730 --> 00:00:54,148
<font color="#E5E5E5">and up to</font><font color="#CCCCCC"> 4 flows</font><font color="#E5E5E5"> so times have changed</font>

21
00:00:51,690 --> 00:00:56,280
a little since then this rule<font color="#CCCCCC"> of thumb</font>

22
00:00:54,149 --> 00:00:58,109
<font color="#E5E5E5">also has major consequences for router</font>

23
00:00:56,280 --> 00:01:00,840
design and<font color="#E5E5E5"> let me just</font><font color="#CCCCCC"> give a very</font>

24
00:00:58,109 --> 00:01:02,579
simple<font color="#E5E5E5"> example if today your router</font>

25
00:01:00,840 --> 00:01:04,920
manufacturer and<font color="#E5E5E5"> you want to build</font><font color="#CCCCCC"> a 10</font>

26
00:01:02,579 --> 00:01:06,990
megabit line card the rule of thumb

27
00:01:04,920 --> 00:01:10,350
tells you that you need<font color="#CCCCCC"> about 300</font>

28
00:01:06,990 --> 00:01:12,600
megabytes worth of buffering<font color="#E5E5E5"> and what's</font>

29
00:01:10,350 --> 00:01:14,399
worse<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> to this memory you have to</font>

30
00:01:12,600 --> 00:01:16,289
read and write from into this memory<font color="#CCCCCC"> to</font>

31
00:01:14,400 --> 00:01:19,799
read and write a packet every 32

32
00:01:16,290 --> 00:01:22,380
nanoseconds now the amount<font color="#CCCCCC"> of memory</font>

33
00:01:19,799 --> 00:01:23,460
alone is not<font color="#E5E5E5"> a problem 300 megabytes you</font>

34
00:01:22,380 --> 00:01:24,990
can go to the local<font color="#E5E5E5"> electronics store</font>

35
00:01:23,460 --> 00:01:27,089
and<font color="#CCCCCC"> buy that for approximately</font><font color="#E5E5E5"> hundred</font>

36
00:01:24,990 --> 00:01:28,740
dollars the problem is the normal<font color="#CCCCCC"> DRAM</font>

37
00:01:27,090 --> 00:01:31,320
that you can buy there is much too slow

38
00:01:28,740 --> 00:01:33,630
to be accessed at these feeds you could

39
00:01:31,320 --> 00:01:35,130
instead<font color="#E5E5E5"> trying to use SRAM with</font><font color="#CCCCCC"> astron</font>

40
00:01:33,630 --> 00:01:37,170
you need about<font color="#CCCCCC"> 80 devices which</font><font color="#E5E5E5"> will</font>

41
00:01:35,130 --> 00:01:39,990
pretty<font color="#CCCCCC"> much cover</font><font color="#E5E5E5"> most of</font><font color="#CCCCCC"> the space</font><font color="#E5E5E5"> on</font>

42
00:01:37,170 --> 00:01:42,390
<font color="#CCCCCC">your own</font><font color="#E5E5E5"> your light heart and it'll also</font>

43
00:01:39,990 --> 00:01:44,158
cost<font color="#E5E5E5"> about $2,000 and worst of all it'll</font>

44
00:01:42,390 --> 00:01:46,950
generate about<font color="#CCCCCC"> one</font><font color="#E5E5E5"> kilowatt worth of</font>

45
00:01:44,159 --> 00:01:48,630
heat<font color="#CCCCCC"> one</font><font color="#E5E5E5"> kilowatt per line card is</font>

46
00:01:46,950 --> 00:01:51,899
probably more than your local<font color="#E5E5E5"> data</font>

47
00:01:48,630 --> 00:01:53,339
center<font color="#E5E5E5"> can</font><font color="#CCCCCC"> anticipate</font><font color="#E5E5E5"> so you can't sort</font>

48
00:01:51,899 --> 00:01:55,079
<font color="#E5E5E5">of need either of the two approaches</font>

49
00:01:53,340 --> 00:01:56,549
worked and this is a<font color="#E5E5E5"> 10 gigabits per</font>

50
00:01:55,079 --> 00:01:58,309
second so if you go<font color="#E5E5E5"> to 40 gigabits per</font>

51
00:01:56,549 --> 00:02:00,649
second<font color="#E5E5E5"> the problem</font><font color="#CCCCCC"> it becomes much</font>

52
00:01:58,310 --> 00:02:04,159
<font color="#E5E5E5">charter people</font><font color="#CCCCCC"> that proposed</font><font color="#E5E5E5"> a variety</font>

53
00:02:00,649 --> 00:02:06,350
<font color="#CCCCCC">of solutions</font><font color="#E5E5E5"> are LTR</font><font color="#CCCCCC"> mfc ram</font><font color="#E5E5E5"> funneling</font>

54
00:02:04,159 --> 00:02:08,690
architectures with extremely<font color="#E5E5E5"> wide buses</font>

55
00:02:06,350 --> 00:02:10,340
<font color="#E5E5E5">but I think it's safe</font><font color="#CCCCCC"> to say that</font><font color="#E5E5E5"> for</font>

56
00:02:08,690 --> 00:02:11,930
today's of our vendors<font color="#E5E5E5"> building the</font>

57
00:02:10,340 --> 00:02:16,610
memory architectures for<font color="#E5E5E5"> these high-end</font>

58
00:02:11,930 --> 00:02:19,040
<font color="#E5E5E5">line carts remains a major challenge so</font>

59
00:02:16,610 --> 00:02:20,810
in this talk<font color="#E5E5E5"> I want to convince you that</font>

60
00:02:19,040 --> 00:02:23,420
the rule<font color="#E5E5E5"> of thumb for sizing</font><font color="#CCCCCC"> Rado</font>

61
00:02:20,810 --> 00:02:25,610
<font color="#E5E5E5">buffers that</font><font color="#CCCCCC"> is universally applied</font><font color="#E5E5E5"> is</font>

62
00:02:23,420 --> 00:02:28,700
wrong<font color="#E5E5E5"> and that is wrong by</font><font color="#CCCCCC"> about a</font>

63
00:02:25,610 --> 00:02:30,140
factor of<font color="#CCCCCC"> 100</font><font color="#E5E5E5"> I'll first tell you where</font>

64
00:02:28,700 --> 00:02:33,200
<font color="#E5E5E5">originally the rule of thumb came from</font>

65
00:02:30,140 --> 00:02:37,819
and then why for<font color="#CCCCCC"> a robbery the core of</font>

66
00:02:33,200 --> 00:02:39,619
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Internet today no longer</font><font color="#E5E5E5"> holds so</font>

67
00:02:37,819 --> 00:02:42,260
the reason<font color="#E5E5E5"> for the rule of thumb is</font><font color="#CCCCCC"> the</font>

68
00:02:39,620 --> 00:02:44,450
congestion<font color="#E5E5E5"> control mechanism of TCP so</font>

69
00:02:42,260 --> 00:02:46,910
I'll briefly<font color="#E5E5E5"> sort of recap TCP which</font>

70
00:02:44,450 --> 00:02:49,730
many of you might might know by heart

71
00:02:46,910 --> 00:02:51,709
but for those who<font color="#E5E5E5"> don't how it works and</font>

72
00:02:49,730 --> 00:02:55,399
then sort of<font color="#E5E5E5"> explain and drive to go at</font>

73
00:02:51,709 --> 00:02:57,950
them<font color="#E5E5E5"> TCP controls</font><font color="#CCCCCC"> it's sending</font><font color="#E5E5E5"> rate by a</font>

74
00:02:55,400 --> 00:02:59,959
congestion window<font color="#E5E5E5"> W and it has a very</font>

75
00:02:57,950 --> 00:03:03,170
simple<font color="#E5E5E5"> rule</font><font color="#CCCCCC"> that says at any given time</font>

76
00:02:59,959 --> 00:03:04,549
I may send<font color="#E5E5E5"> W packets but then I have to</font>

77
00:03:03,170 --> 00:03:06,078
wait<font color="#CCCCCC"> for acknowledgments before I can</font>

78
00:03:04,549 --> 00:03:07,400
send any additional packets<font color="#E5E5E5"> at any given</font>

79
00:03:06,079 --> 00:03:09,620
time I may only<font color="#E5E5E5"> have W packets</font>

80
00:03:07,400 --> 00:03:11,269
outstanding<font color="#E5E5E5"> so if W is 3 I can send 3</font>

81
00:03:09,620 --> 00:03:13,549
packets then I wait<font color="#E5E5E5"> until</font>

82
00:03:11,269 --> 00:03:16,489
acknowledgments come in it also has a

83
00:03:13,549 --> 00:03:18,260
rule for updating<font color="#E5E5E5"> the window size and a</font>

84
00:03:16,489 --> 00:03:20,150
<font color="#E5E5E5">congestion avoidance mode which is the</font>

85
00:03:18,260 --> 00:03:22,608
<font color="#E5E5E5">most part which</font><font color="#CCCCCC"> should be the mode of</font>

86
00:03:20,150 --> 00:03:25,519
<font color="#CCCCCC">long live TCP flows this rule for</font>

87
00:03:22,609 --> 00:03:26,870
updating<font color="#E5E5E5"> W is that whenever I receive</font><font color="#CCCCCC"> an</font>

88
00:03:25,519 --> 00:03:28,130
<font color="#E5E5E5">acknowledgment that a packet was</font>

89
00:03:26,870 --> 00:03:30,290
successfully transmitted to the

90
00:03:28,130 --> 00:03:33,200
destination<font color="#CCCCCC"> I may increase my window</font>

91
00:03:30,290 --> 00:03:37,130
size by 1<font color="#E5E5E5"> over W so if my window size is</font>

92
00:03:33,200 --> 00:03:39,709
<font color="#E5E5E5">3 I</font><font color="#CCCCCC"> increase my</font><font color="#E5E5E5"> window size by 1/3 if a</font>

93
00:03:37,130 --> 00:03:41,269
<font color="#E5E5E5">packet is lost</font><font color="#CCCCCC"> I have my window size so</font>

94
00:03:39,709 --> 00:03:44,060
<font color="#CCCCCC">if I</font><font color="#E5E5E5"> win the previous</font><font color="#CCCCCC"> owner size is 10 I</font>

95
00:03:41,269 --> 00:03:46,760
go down to window size<font color="#E5E5E5"> file the result</font>

96
00:03:44,060 --> 00:03:49,160
of that is the<font color="#E5E5E5"> TCP sawtooth shown at the</font>

97
00:03:46,760 --> 00:03:52,638
bottom<font color="#CCCCCC"> here which I think everyone</font><font color="#E5E5E5"> is</font>

98
00:03:49,160 --> 00:03:55,819
familiar<font color="#CCCCCC"> with now let's have a look</font><font color="#E5E5E5"> how</font>

99
00:03:52,639 --> 00:03:58,340
this<font color="#E5E5E5"> works in practice so what we have</font>

100
00:03:55,819 --> 00:04:00,679
here<font color="#CCCCCC"> is a TCP flow from a sender to the</font>

101
00:03:58,340 --> 00:04:02,720
<font color="#E5E5E5">left to receiver on the right through a</font>

102
00:04:00,680 --> 00:04:03,840
router<font color="#E5E5E5"> in this case this router does not</font>

103
00:04:02,720 --> 00:04:06,720
have any<font color="#E5E5E5"> buffering</font>

104
00:04:03,840 --> 00:04:08,400
the the link to the right<font color="#CCCCCC"> of the router</font>

105
00:04:06,720 --> 00:04:10,140
is our bottleneck<font color="#CCCCCC"> link and one of the</font>

106
00:04:08,400 --> 00:04:11,640
goals we<font color="#CCCCCC"> have for</font><font color="#E5E5E5"> router is to fully</font>

107
00:04:10,140 --> 00:04:12,929
utilize this bottleneck<font color="#CCCCCC"> link</font><font color="#E5E5E5"> so that's</font>

108
00:04:11,640 --> 00:04:14,429
why I'm showing the<font color="#E5E5E5"> utilization there</font>

109
00:04:12,930 --> 00:04:16,440
keep an<font color="#E5E5E5"> eye</font><font color="#CCCCCC"> on that utilization</font>

110
00:04:14,430 --> 00:04:18,120
<font color="#E5E5E5">currently a window size is one</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> is</font>

111
00:04:16,440 --> 00:04:21,149
successfully transmitted<font color="#E5E5E5"> one packet we</font>

112
00:04:18,120 --> 00:04:22,919
increase<font color="#E5E5E5"> our window size by 1 over 1 so</font>

113
00:04:21,149 --> 00:04:26,250
by<font color="#CCCCCC"> one and now</font><font color="#E5E5E5"> I have a window size of</font><font color="#CCCCCC"> 2</font>

114
00:04:22,919 --> 00:04:28,229
<font color="#E5E5E5">so we're sending out</font><font color="#CCCCCC"> 2 packets</font><font color="#E5E5E5"> and here</font>

115
00:04:26,250 --> 00:04:30,540
at the<font color="#E5E5E5"> bottom you can</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> the plot of</font>

116
00:04:28,230 --> 00:04:33,180
the current window size let me eat this

117
00:04:30,540 --> 00:04:34,590
up<font color="#E5E5E5"> a little bit here</font><font color="#CCCCCC"> we now have two</font>

118
00:04:33,180 --> 00:04:36,000
packets outstanding<font color="#E5E5E5"> both are</font>

119
00:04:34,590 --> 00:04:37,830
successfully transmitted so the window

120
00:04:36,000 --> 00:04:39,479
size<font color="#CCCCCC"> is increased to 3 if you look at</font>

121
00:04:37,830 --> 00:04:42,450
the utilization<font color="#E5E5E5"> the</font><font color="#CCCCCC"> utilization is less</font>

122
00:04:39,479 --> 00:04:44,610
than<font color="#CCCCCC"> 100% and it's</font><font color="#E5E5E5"> immediately clear why</font>

123
00:04:42,450 --> 00:04:46,440
this is the case<font color="#E5E5E5"> currently we just don't</font>

124
00:04:44,610 --> 00:04:48,600
have<font color="#E5E5E5"> enough packets in flight here to</font>

125
00:04:46,440 --> 00:04:50,760
fully utilize this link all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the time</font>

126
00:04:48,600 --> 00:04:53,250
<font color="#E5E5E5">so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> an important observation that</font>

127
00:04:50,760 --> 00:04:55,200
<font color="#E5E5E5">the window size of TCP sender must have</font>

128
00:04:53,250 --> 00:04:58,020
a certain<font color="#E5E5E5"> minimum value in order to</font>

129
00:04:55,200 --> 00:04:59,940
fully<font color="#CCCCCC"> saturate a link I'm</font><font color="#E5E5E5"> going to speed</font>

130
00:04:58,020 --> 00:05:02,280
this up now<font color="#E5E5E5"> and let's see what happens</font>

131
00:04:59,940 --> 00:05:03,780
when<font color="#E5E5E5"> we have actually enough pattern in</font>

132
00:05:02,280 --> 00:05:09,500
a large enough window size<font color="#CCCCCC"> to fully</font>

133
00:05:03,780 --> 00:05:13,049
utilize the<font color="#CCCCCC"> link so window sizes</font><font color="#E5E5E5"> 7</font>

134
00:05:09,500 --> 00:05:15,660
<font color="#E5E5E5">window size</font><font color="#CCCCCC"> 8 so if window size 8 we now</font>

135
00:05:13,050 --> 00:05:16,979
have the link is fully<font color="#E5E5E5"> utilized all of</font>

136
00:05:15,660 --> 00:05:19,050
the time

137
00:05:16,979 --> 00:05:20,789
<font color="#E5E5E5">it still</font><font color="#CCCCCC"> shows</font><font color="#E5E5E5"> utilization</font><font color="#CCCCCC"> 95 percent</font>

138
00:05:19,050 --> 00:05:23,220
but this<font color="#E5E5E5"> is just because it's almost</font>

139
00:05:20,789 --> 00:05:26,099
raining a little bit now the<font color="#E5E5E5"> problem is</font>

140
00:05:23,220 --> 00:05:28,160
that what will happen<font color="#E5E5E5"> the</font><font color="#CCCCCC"> next time</font><font color="#E5E5E5"> my</font>

141
00:05:26,100 --> 00:05:30,450
sender increases its window size by<font color="#CCCCCC"> 1</font>

142
00:05:28,160 --> 00:05:32,729
<font color="#CCCCCC">when huge pieces has window size by</font><font color="#E5E5E5"> 1</font>

143
00:05:30,450 --> 00:05:34,770
it'll send this<font color="#E5E5E5"> one extra packet this</font>

144
00:05:32,729 --> 00:05:36,150
packet<font color="#E5E5E5"> can no longer fit anywhere on the</font>

145
00:05:34,770 --> 00:05:38,039
link<font color="#E5E5E5"> because visibly all the link is not</font>

146
00:05:36,150 --> 00:05:39,120
occupied<font color="#E5E5E5"> with packets it also can't fit</font>

147
00:05:38,039 --> 00:05:40,349
in the router buffer because there is no

148
00:05:39,120 --> 00:05:43,680
<font color="#E5E5E5">auto</font><font color="#CCCCCC"> Parker so here comes the extra</font>

149
00:05:40,350 --> 00:05:45,389
packet it gets dropped<font color="#E5E5E5"> as expected this</font>

150
00:05:43,680 --> 00:05:47,850
drop information in the form of<font color="#E5E5E5"> a</font>

151
00:05:45,389 --> 00:05:49,979
missing sequence number<font color="#E5E5E5"> is now</font><font color="#CCCCCC"> traveling</font>

152
00:05:47,850 --> 00:05:52,260
to<font color="#E5E5E5"> the recipient and then back</font><font color="#CCCCCC"> to the</font>

153
00:05:49,979 --> 00:05:53,880
<font color="#E5E5E5">sender</font><font color="#CCCCCC"> and we know what the what the</font>

154
00:05:52,260 --> 00:05:55,229
sender will do<font color="#E5E5E5"> and it receives the drop</font>

155
00:05:53,880 --> 00:05:59,100
information it will<font color="#E5E5E5"> have its window size</font>

156
00:05:55,229 --> 00:06:00,479
and when it has its window size from 10

157
00:05:59,100 --> 00:06:03,030
to 5<font color="#CCCCCC"> it'll now have more packets</font>

158
00:06:00,479 --> 00:06:04,580
outstanding than it made so stop sending

159
00:06:03,030 --> 00:06:06,750
for swath while and then start with

160
00:06:04,580 --> 00:06:08,550
resume sending again but only<font color="#E5E5E5"> with</font><font color="#CCCCCC"> 5</font>

161
00:06:06,750 --> 00:06:11,490
packets outstanding so here's the drop

162
00:06:08,550 --> 00:06:12,930
<font color="#CCCCCC">window size gets reduced to</font><font color="#E5E5E5"> 5 now has 10</font>

163
00:06:11,490 --> 00:06:14,530
packets<font color="#CCCCCC"> I'll send you it may</font><font color="#E5E5E5"> only have</font><font color="#CCCCCC"> 5</font>

164
00:06:12,930 --> 00:06:19,240
<font color="#CCCCCC">parts</font><font color="#E5E5E5"> and stop sending for a while</font>

165
00:06:14,530 --> 00:06:23,679
and after a short<font color="#E5E5E5"> while just start</font>

166
00:06:19,240 --> 00:06:25,060
<font color="#CCCCCC">sending</font><font color="#E5E5E5"> again here we go so but now</font><font color="#CCCCCC"> it's</font>

167
00:06:23,680 --> 00:06:26,830
<font color="#CCCCCC">ending with windows science 5 which</font>

168
00:06:25,060 --> 00:06:29,050
again is insufficient to fully utilize

169
00:06:26,830 --> 00:06:31,090
the<font color="#E5E5E5"> bottleneck link and this will</font>

170
00:06:29,050 --> 00:06:35,740
basically repeat itself again<font color="#CCCCCC"> and again</font>

171
00:06:31,090 --> 00:06:38,640
again<font color="#CCCCCC"> we get</font><font color="#E5E5E5"> this we get a sawtooth to</font>

172
00:06:35,740 --> 00:06:41,380
summarize<font color="#E5E5E5"> if we have an unbuffered link</font>

173
00:06:38,640 --> 00:06:43,180
our window size will below the threshold

174
00:06:41,380 --> 00:06:45,520
that's necessary in order<font color="#E5E5E5"> to maintain</font>

175
00:06:43,180 --> 00:06:47,500
full utilization of<font color="#E5E5E5"> the bottleneck link</font>

176
00:06:45,520 --> 00:06:49,270
<font color="#E5E5E5">most of the time whenever it touches</font>

177
00:06:47,500 --> 00:06:51,160
<font color="#E5E5E5">that point where actually the link is</font>

178
00:06:49,270 --> 00:06:54,789
fully utilized<font color="#CCCCCC"> it'll scale</font><font color="#E5E5E5"> down again</font>

179
00:06:51,160 --> 00:06:55,990
<font color="#CCCCCC">and the link</font><font color="#E5E5E5"> will not be utilized</font><font color="#CCCCCC"> you</font>

180
00:06:54,790 --> 00:06:58,060
can actually run the map here and<font color="#E5E5E5"> it</font>

181
00:06:55,990 --> 00:07:00,580
<font color="#E5E5E5">turns out they can still get</font><font color="#CCCCCC"> 75%</font><font color="#E5E5E5"> link</font>

182
00:06:58,060 --> 00:07:02,800
utilization<font color="#CCCCCC"> without any buffering but</font>

183
00:07:00,580 --> 00:07:05,169
you cannot move with a single TCP flow

184
00:07:02,800 --> 00:07:07,900
<font color="#E5E5E5">75%</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> utilization is the maximum you</font>

185
00:07:05,169 --> 00:07:09,460
can get now let's<font color="#E5E5E5"> look what happens if I</font>

186
00:07:07,900 --> 00:07:11,770
<font color="#E5E5E5">have a router that</font><font color="#CCCCCC"> has a sufficient</font>

187
00:07:09,460 --> 00:07:14,530
amount<font color="#CCCCCC"> of buffering</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we have the same</font>

188
00:07:11,770 --> 00:07:16,900
experiment as before but<font color="#E5E5E5"> this time</font><font color="#CCCCCC"> we</font>

189
00:07:14,530 --> 00:07:18,580
<font color="#E5E5E5">have a buffer in the router and as you</font>

190
00:07:16,900 --> 00:07:20,760
can<font color="#E5E5E5"> see the queue fills with packets and</font>

191
00:07:18,580 --> 00:07:23,140
then the packets get sent out<font color="#E5E5E5"> one by one</font>

192
00:07:20,760 --> 00:07:24,849
<font color="#E5E5E5">we start with the window size of 5 and</font>

193
00:07:23,140 --> 00:07:26,919
as we've<font color="#E5E5E5"> seen before</font><font color="#CCCCCC"> 5 is not sufficient</font>

194
00:07:24,850 --> 00:07:28,570
to<font color="#E5E5E5"> fully utilize the bottleneck link so</font>

195
00:07:26,919 --> 00:07:30,729
let's<font color="#CCCCCC"> speed this up</font><font color="#E5E5E5"> and see</font><font color="#CCCCCC"> what happens</font>

196
00:07:28,570 --> 00:07:33,849
<font color="#E5E5E5">when a window size is large enough</font><font color="#CCCCCC"> to</font>

197
00:07:30,729 --> 00:07:38,830
<font color="#E5E5E5">fully utilize link</font><font color="#CCCCCC"> if utilization 70%</font>

198
00:07:33,850 --> 00:07:41,320
80%<font color="#E5E5E5"> 90% at this point</font><font color="#CCCCCC"> the link</font><font color="#E5E5E5"> is fully</font>

199
00:07:38,830 --> 00:07:43,240
<font color="#CCCCCC">utilized all of the time</font><font color="#E5E5E5"> what happens</font>

200
00:07:41,320 --> 00:07:44,469
when the window<font color="#CCCCCC"> sizes</font><font color="#E5E5E5"> increase when this</font>

201
00:07:43,240 --> 00:07:46,479
extra packet isn't here's one of these

202
00:07:44,470 --> 00:07:47,979
extra packets this<font color="#E5E5E5"> extra Packer could</font>

203
00:07:46,479 --> 00:07:50,650
not be put anywhere<font color="#E5E5E5"> on the link so it</font>

204
00:07:47,979 --> 00:07:52,150
gets stored<font color="#E5E5E5"> in the router in in the</font>

205
00:07:50,650 --> 00:07:53,650
router buffer<font color="#E5E5E5"> so the role of the router</font>

206
00:07:52,150 --> 00:07:56,830
buffer<font color="#E5E5E5"> here really is</font><font color="#CCCCCC"> to absorb</font><font color="#E5E5E5"> these</font>

207
00:07:53,650 --> 00:07:58,690
occasional<font color="#E5E5E5"> extra packets which which no</font>

208
00:07:56,830 --> 00:08:00,520
longer<font color="#E5E5E5"> fit on the link and prevent the</font>

209
00:07:58,690 --> 00:08:03,790
window from<font color="#E5E5E5"> scaling down because of the</font>

210
00:08:00,520 --> 00:08:05,409
packet drop prematurely<font color="#CCCCCC"> so here we see</font>

211
00:08:03,790 --> 00:08:06,760
another here's another extra packet and

212
00:08:05,410 --> 00:08:08,320
again the queue length<font color="#CCCCCC"> and</font><font color="#E5E5E5"> water</font>

213
00:08:06,760 --> 00:08:12,520
<font color="#E5E5E5">increases by</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> because of the extra</font>

214
00:08:08,320 --> 00:08:14,200
packet<font color="#E5E5E5"> this will continue</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be that way</font>

215
00:08:12,520 --> 00:08:16,330
<font color="#CCCCCC">until the the buffer queue the the</font>

216
00:08:14,200 --> 00:08:21,318
ridiculous hole so we have<font color="#E5E5E5"> about two</font>

217
00:08:16,330 --> 00:08:25,050
spaces remaining one space remaining

218
00:08:21,319 --> 00:08:27,030
and now the buffer queue is<font color="#E5E5E5"> full so the</font>

219
00:08:25,050 --> 00:08:30,659
<font color="#E5E5E5">next time an extra packet is sent by the</font>

220
00:08:27,030 --> 00:08:34,228
sender will see a drop and the the

221
00:08:30,659 --> 00:08:35,610
sender will will have its window size<font color="#CCCCCC"> so</font>

222
00:08:34,229 --> 00:08:37,680
at sixteen point<font color="#E5E5E5"> eight sixteen point</font>

223
00:08:35,610 --> 00:08:39,719
nine<font color="#E5E5E5"> here's the extra packet extra</font>

224
00:08:37,679 --> 00:08:41,489
packets<font color="#E5E5E5"> is also it</font><font color="#CCCCCC"> gets dropped</font><font color="#E5E5E5"> the drop</font>

225
00:08:39,719 --> 00:08:44,700
information again as a missing sequence

226
00:08:41,490 --> 00:08:47,100
number<font color="#E5E5E5"> travels through the queue to the</font>

227
00:08:44,700 --> 00:08:48,510
recipient<font color="#E5E5E5"> and back to the sender what</font>

228
00:08:47,100 --> 00:08:50,940
the sender will do is the sender<font color="#E5E5E5"> will</font>

229
00:08:48,510 --> 00:08:52,470
again half its window size<font color="#E5E5E5"> stop sending</font>

230
00:08:50,940 --> 00:08:53,940
for short period of<font color="#CCCCCC"> time</font><font color="#E5E5E5"> because now it</font>

231
00:08:52,470 --> 00:08:56,940
<font color="#E5E5E5">has more packets outstanding than it may</font>

232
00:08:53,940 --> 00:08:58,589
and then<font color="#E5E5E5"> resume sending but</font><font color="#CCCCCC"> on with with</font>

233
00:08:56,940 --> 00:09:01,200
half the window<font color="#CCCCCC"> size</font><font color="#E5E5E5"> that it had</font><font color="#CCCCCC"> before</font>

234
00:08:58,589 --> 00:09:02,579
so here<font color="#E5E5E5"> it stopped sending but during</font>

235
00:09:01,200 --> 00:09:04,290
the time that<font color="#E5E5E5"> stopped sending the link</font>

236
00:09:02,579 --> 00:09:06,630
is still serviced by<font color="#E5E5E5"> the packet from the</font>

237
00:09:04,290 --> 00:09:08,339
from the<font color="#CCCCCC"> router queue</font><font color="#E5E5E5"> and basically just</font>

238
00:09:06,630 --> 00:09:10,620
from the<font color="#E5E5E5"> first packet from the from the</font>

239
00:09:08,339 --> 00:09:12,120
sender arrives at the router again<font color="#E5E5E5"> the</font>

240
00:09:10,620 --> 00:09:14,490
queue<font color="#E5E5E5"> is empty</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we have hundred</font>

241
00:09:12,120 --> 00:09:16,410
percent utilization all of the time also

242
00:09:14,490 --> 00:09:17,940
our minimal window size<font color="#E5E5E5"> so the window</font>

243
00:09:16,410 --> 00:09:20,519
size after<font color="#E5E5E5"> the drop was about eight</font>

244
00:09:17,940 --> 00:09:25,199
point five which<font color="#CCCCCC"> is sufficient to</font><font color="#E5E5E5"> fully</font>

245
00:09:20,519 --> 00:09:28,110
utilize<font color="#CCCCCC"> the link so we have 100%</font><font color="#E5E5E5"> link</font>

246
00:09:25,199 --> 00:09:31,170
utilization<font color="#CCCCCC"> all of the time</font><font color="#E5E5E5"> so to</font>

247
00:09:28,110 --> 00:09:33,870
summarize the case of a buffered link on

248
00:09:31,170 --> 00:09:35,849
a fully buffered link the window size is

249
00:09:33,870 --> 00:09:37,620
<font color="#CCCCCC">always above the threshold</font><font color="#E5E5E5"> that is</font>

250
00:09:35,850 --> 00:09:38,970
necessary<font color="#E5E5E5"> to fully fill the link with</font>

251
00:09:37,620 --> 00:09:40,589
packets at any given time so<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> a</font>

252
00:09:38,970 --> 00:09:43,350
<font color="#E5E5E5">hundred</font><font color="#CCCCCC"> percent link utilization all the</font>

253
00:09:40,589 --> 00:09:44,850
time<font color="#E5E5E5"> the reason</font><font color="#CCCCCC"> why the window size is</font>

254
00:09:43,350 --> 00:09:47,610
high enough is that<font color="#E5E5E5"> when the window</font>

255
00:09:44,850 --> 00:09:49,320
grows above the threshold<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is that</font>

256
00:09:47,610 --> 00:09:51,449
is<font color="#CCCCCC"> necessary has the link full</font><font color="#E5E5E5"> with</font>

257
00:09:49,320 --> 00:09:53,880
packets the extra packets get buffered

258
00:09:51,449 --> 00:09:55,410
<font color="#E5E5E5">by the router buffer so the</font><font color="#CCCCCC"> role of</font><font color="#E5E5E5"> the</font>

259
00:09:53,880 --> 00:09:57,120
router buffer here is as you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see in</font>

260
00:09:55,410 --> 00:09:58,740
the<font color="#CCCCCC"> upper graph to basically</font><font color="#E5E5E5"> absorb</font>

261
00:09:57,120 --> 00:10:01,440
these fluctuations in the window size of

262
00:09:58,740 --> 00:10:04,320
TCP<font color="#E5E5E5"> so how much buffering do we need we</font>

263
00:10:01,440 --> 00:10:07,410
<font color="#CCCCCC">need enough to buffer in order to fit</font>

264
00:10:04,320 --> 00:10:08,550
the sawtooth of TCP<font color="#E5E5E5"> if TCP wouldn't have</font>

265
00:10:07,410 --> 00:10:10,230
a sawtooth we wouldn't need

266
00:10:08,550 --> 00:10:12,750
buffering and<font color="#E5E5E5"> router or we need at least</font>

267
00:10:10,230 --> 00:10:14,399
<font color="#CCCCCC">much much less power and this</font><font color="#E5E5E5"> is the</font>

268
00:10:12,750 --> 00:10:16,140
<font color="#CCCCCC">origin of the rule</font><font color="#E5E5E5"> of thumb</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> plug in</font>

269
00:10:14,399 --> 00:10:18,029
the numbers<font color="#CCCCCC"> and if you're interested in</font>

270
00:10:16,140 --> 00:10:21,360
<font color="#E5E5E5">the math there's a signal publication</font>

271
00:10:18,029 --> 00:10:23,459
from<font color="#E5E5E5"> this year that has the equations it</font>

272
00:10:21,360 --> 00:10:26,220
actually turns out<font color="#E5E5E5"> that you need</font><font color="#CCCCCC"> exactly</font>

273
00:10:23,459 --> 00:10:28,290
<font color="#CCCCCC">two T</font><font color="#E5E5E5"> times</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> that the the height of the</font>

274
00:10:26,220 --> 00:10:30,649
<font color="#CCCCCC">Sawtooth is exactly</font><font color="#E5E5E5"> is exactly</font><font color="#CCCCCC"> two T</font>

275
00:10:28,290 --> 00:10:30,649
times<font color="#E5E5E5"> C</font>

276
00:10:30,879 --> 00:10:38,719
so to<font color="#E5E5E5"> summarize the rule of thumb makes</font>

277
00:10:35,059 --> 00:10:40,759
sense for one flow now<font color="#E5E5E5"> the routers that</font>

278
00:10:38,719 --> 00:10:42,379
<font color="#E5E5E5">you here in the room</font><font color="#CCCCCC"> are all operating</font>

279
00:10:40,759 --> 00:10:44,179
have more than one flow they typically

280
00:10:42,379 --> 00:10:46,539
have the thousands<font color="#E5E5E5"> or ten thousands of</font>

281
00:10:44,179 --> 00:10:48,889
<font color="#CCCCCC">close</font><font color="#E5E5E5"> so the question is if</font><font color="#CCCCCC"> we go up by</font>

282
00:10:46,539 --> 00:10:52,369
four<font color="#E5E5E5"> orders of magnitude</font><font color="#CCCCCC"> does the rule</font>

283
00:10:48,889 --> 00:10:54,559
of thumb still hold the answer is if the

284
00:10:52,369 --> 00:10:55,969
<font color="#E5E5E5">Falls are perfectly synchronized then</font>

285
00:10:54,559 --> 00:10:57,919
<font color="#E5E5E5">the rule of thumb still holds it's a</font>

286
00:10:55,969 --> 00:11:00,439
<font color="#E5E5E5">falsity synchronized then the rule of</font>

287
00:10:57,919 --> 00:11:03,468
thumb<font color="#E5E5E5"> doesn't hold this brings me to</font><font color="#CCCCCC"> the</font>

288
00:11:00,439 --> 00:11:04,998
<font color="#E5E5E5">second part which</font><font color="#CCCCCC"> is what is the correct</font>

289
00:11:03,469 --> 00:11:07,849
amount<font color="#E5E5E5"> of buffering</font><font color="#CCCCCC"> that's needed for</font>

290
00:11:04,999 --> 00:11:10,279
<font color="#E5E5E5">router for congested</font><font color="#CCCCCC"> bottom and the</font>

291
00:11:07,849 --> 00:11:12,049
result will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> that it's</font><font color="#CCCCCC"> to G times C so</font>

292
00:11:10,279 --> 00:11:17,869
are all rule of thumb<font color="#E5E5E5"> divided by the</font>

293
00:11:12,049 --> 00:11:19,909
square root<font color="#E5E5E5"> of the number of drugs so if</font>

294
00:11:17,869 --> 00:11:21,619
we have more<font color="#E5E5E5"> than one flow</font><font color="#CCCCCC"> going through</font>

295
00:11:19,909 --> 00:11:23,389
a router the role of<font color="#E5E5E5"> the rather buffer</font>

296
00:11:21,619 --> 00:11:24,919
is to absorb the fluctuation<font color="#E5E5E5"> in the</font>

297
00:11:23,389 --> 00:11:26,569
<font color="#E5E5E5">total number of outstanding</font><font color="#CCCCCC"> jackets so</font>

298
00:11:24,919 --> 00:11:28,459
instead of absorbing<font color="#E5E5E5"> one single sort</font>

299
00:11:26,569 --> 00:11:30,738
that now has<font color="#CCCCCC"> to visibly</font><font color="#E5E5E5"> absorb the sum</font>

300
00:11:28,459 --> 00:11:33,018
of<font color="#E5E5E5"> all these salty if the flows are</font>

301
00:11:30,739 --> 00:11:34,879
<font color="#E5E5E5">perfectly synchronized we basically hit</font>

302
00:11:33,019 --> 00:11:36,499
<font color="#E5E5E5">a small salty that add up</font><font color="#CCCCCC"> to one large</font>

303
00:11:34,879 --> 00:11:38,509
<font color="#E5E5E5">sort hood so we have</font><font color="#CCCCCC"> exactly the same</font>

304
00:11:36,499 --> 00:11:39,619
dynamics of the<font color="#CCCCCC"> Alpha of the number of</font>

305
00:11:38,509 --> 00:11:43,009
outstanding packets<font color="#E5E5E5"> that we have for</font>

306
00:11:39,619 --> 00:11:44,329
single flow we also have the same buffer

307
00:11:43,009 --> 00:11:48,109
<font color="#E5E5E5">occupancy that we have for single flow</font>

308
00:11:44,329 --> 00:11:50,059
so the rule<font color="#CCCCCC"> of</font><font color="#E5E5E5"> thumb steroids if those</font>

309
00:11:48,109 --> 00:11:52,879
are not<font color="#E5E5E5"> synchronized it is more</font>

310
00:11:50,059 --> 00:11:53,929
complicated<font color="#E5E5E5"> here we have the bottom</font>

311
00:11:52,879 --> 00:11:55,189
shown<font color="#CCCCCC"> two clothes that are not</font>

312
00:11:53,929 --> 00:11:59,029
synchronized<font color="#E5E5E5"> so basically we now have a</font>

313
00:11:55,189 --> 00:12:00,949
slightly randomized I'm sorry<font color="#E5E5E5"> and the</font>

314
00:11:59,029 --> 00:12:02,329
<font color="#E5E5E5">sum of these randomized salty what we</font>

315
00:12:00,949 --> 00:12:05,598
expect to<font color="#CCCCCC"> see is some kind of</font>

316
00:12:02,329 --> 00:12:07,789
<font color="#CCCCCC">statistical multiplexing we can make a</font>

317
00:12:05,599 --> 00:12:09,679
<font color="#E5E5E5">very simple quantitative argument here</font>

318
00:12:07,789 --> 00:12:12,019
and<font color="#E5E5E5"> I'll spare you the math again if</font>

319
00:12:09,679 --> 00:12:14,089
you're interested it's in the paper<font color="#CCCCCC"> but</font>

320
00:12:12,019 --> 00:12:16,819
if we assume<font color="#E5E5E5"> that each</font><font color="#CCCCCC"> of the window</font>

321
00:12:14,089 --> 00:12:18,769
<font color="#E5E5E5">sizes the window size of each flow is an</font>

322
00:12:16,819 --> 00:12:20,839
independent random variable<font color="#E5E5E5"> then the</font>

323
00:12:18,769 --> 00:12:22,129
<font color="#E5E5E5">central limit theorem</font><font color="#CCCCCC"> tells</font><font color="#E5E5E5"> us if we</font>

324
00:12:20,839 --> 00:12:22,879
take the sum<font color="#E5E5E5"> of independent</font><font color="#CCCCCC"> random</font>

325
00:12:22,129 --> 00:12:24,259
variables

326
00:12:22,879 --> 00:12:28,209
it should converge to<font color="#CCCCCC"> loss</font><font color="#E5E5E5"> the Gaussian</font>

327
00:12:24,259 --> 00:12:31,789
distribution<font color="#E5E5E5"> does anyone remember that</font>

328
00:12:28,209 --> 00:12:34,429
<font color="#E5E5E5">so that's something which you can very</font>

329
00:12:31,789 --> 00:12:36,829
<font color="#CCCCCC">easily verify</font><font color="#E5E5E5"> so we taken a network</font>

330
00:12:34,429 --> 00:12:38,809
simulation<font color="#E5E5E5"> mode with NS</font><font color="#CCCCCC"> tool we plot the</font>

331
00:12:36,829 --> 00:12:40,050
probability<font color="#E5E5E5"> distribution of the</font><font color="#CCCCCC"> sum of</font>

332
00:12:38,809 --> 00:12:43,980
the window sizes

333
00:12:40,050 --> 00:12:46,679
and we did that<font color="#E5E5E5"> and what you</font><font color="#CCCCCC"> actually</font>

334
00:12:43,980 --> 00:12:49,079
get is something that<font color="#CCCCCC"> looks</font><font color="#E5E5E5"> pretty much</font>

335
00:12:46,679 --> 00:12:51,290
<font color="#CCCCCC">like a boss so in this case this</font><font color="#E5E5E5"> will</font>

336
00:12:49,079 --> 00:12:54,599
just was for a<font color="#E5E5E5"> hundred mega building</font>

337
00:12:51,290 --> 00:12:57,540
<font color="#E5E5E5">with it with</font><font color="#CCCCCC"> a thousands</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> those well</font>

338
00:12:54,600 --> 00:13:00,449
about a thousand<font color="#CCCCCC"> applause</font><font color="#E5E5E5"> so how much</font>

339
00:12:57,540 --> 00:13:02,189
buffering<font color="#CCCCCC"> do we need in</font><font color="#E5E5E5"> this case we</font>

340
00:13:00,449 --> 00:13:04,258
<font color="#E5E5E5">said the role of the buffer is to absorb</font>

341
00:13:02,189 --> 00:13:09,179
these fluctuations in the<font color="#E5E5E5"> total</font><font color="#CCCCCC"> number</font>

342
00:13:04,259 --> 00:13:10,529
of<font color="#CCCCCC"> outstanding packets the probability</font>

343
00:13:09,179 --> 00:13:12,269
distribution of these<font color="#CCCCCC"> out saying a</font>

344
00:13:10,529 --> 00:13:13,829
number<font color="#E5E5E5"> of packets is dislodged</font><font color="#CCCCCC"> so we</font>

345
00:13:12,269 --> 00:13:15,329
presently want to pick a buffer<font color="#E5E5E5"> that</font>

346
00:13:13,829 --> 00:13:17,339
will bracket<font color="#E5E5E5"> our gosh</font>

347
00:13:15,329 --> 00:13:19,019
so that'll<font color="#E5E5E5"> busily</font><font color="#CCCCCC"> big enough to fit the</font>

348
00:13:17,339 --> 00:13:21,149
<font color="#E5E5E5">Gaussian most of the time so the</font>

349
00:13:19,019 --> 00:13:22,949
probability of so many packets being

350
00:13:21,149 --> 00:13:24,269
outstanding<font color="#E5E5E5"> that we're above our buffer</font>

351
00:13:22,949 --> 00:13:25,920
and we<font color="#E5E5E5"> get drops as small and the</font>

352
00:13:24,269 --> 00:13:27,540
probability of so<font color="#CCCCCC"> Q</font><font color="#E5E5E5"> the packets</font>

353
00:13:25,920 --> 00:13:28,709
outstanding that<font color="#CCCCCC"> we below the buffer and</font>

354
00:13:27,540 --> 00:13:32,579
<font color="#E5E5E5">effectively don't under percent</font>

355
00:13:28,709 --> 00:13:34,079
utilization is also small<font color="#CCCCCC"> and the the</font>

356
00:13:32,579 --> 00:13:37,319
<font color="#E5E5E5">central limit theorem also tells us that</font>

357
00:13:34,079 --> 00:13:38,729
<font color="#CCCCCC">the the more variables we have</font><font color="#E5E5E5"> the more</font>

358
00:13:37,319 --> 00:13:40,769
statistical multiplexing and the

359
00:13:38,730 --> 00:13:41,850
narrower<font color="#CCCCCC"> the portion gets the width of</font>

360
00:13:40,769 --> 00:13:44,129
<font color="#E5E5E5">the Gaussian decreases the</font><font color="#CCCCCC"> one over</font>

361
00:13:41,850 --> 00:13:47,040
<font color="#CCCCCC">square</font><font color="#E5E5E5"> root of n as you can look up in</font>

362
00:13:44,129 --> 00:13:49,559
most math books so the the buffer size

363
00:13:47,040 --> 00:13:51,360
<font color="#E5E5E5">which is necessary to to bracket the</font>

364
00:13:49,559 --> 00:13:54,299
width of this<font color="#CCCCCC"> dorsum also decreases of 1</font>

365
00:13:51,360 --> 00:13:56,129
over the<font color="#E5E5E5"> square root</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> n we know the</font>

366
00:13:54,299 --> 00:13:58,529
battle<font color="#E5E5E5"> for single flow</font><font color="#CCCCCC"> was 2t times C</font>

367
00:13:56,129 --> 00:14:01,379
we've seen before<font color="#CCCCCC"> that for</font><font color="#E5E5E5"> single flow</font>

368
00:13:58,529 --> 00:14:04,350
<font color="#E5E5E5">the rule of thumb still holds so the</font>

369
00:14:01,379 --> 00:14:06,509
amount of buffering required for<font color="#E5E5E5"> for n</font>

370
00:14:04,350 --> 00:14:08,790
flows should be 2t times C<font color="#E5E5E5"> divided by</font>

371
00:14:06,509 --> 00:14:10,379
<font color="#E5E5E5">the square root</font><font color="#CCCCCC"> of n so what I'm</font><font color="#E5E5E5"> saying</font>

372
00:14:08,790 --> 00:14:12,809
<font color="#E5E5E5">here is that</font><font color="#CCCCCC"> actually the more flows you</font>

373
00:14:10,379 --> 00:14:14,069
have the less buffer you need<font color="#E5E5E5"> things is</font>

374
00:14:12,809 --> 00:14:16,980
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> only thing and networking</font><font color="#E5E5E5"> that</font>

375
00:14:14,069 --> 00:14:19,679
<font color="#E5E5E5">gets better the</font><font color="#CCCCCC"> more the</font><font color="#E5E5E5"> more clients</font>

376
00:14:16,980 --> 00:14:20,429
<font color="#CCCCCC">here at</font><font color="#E5E5E5"> your serving and again there's</font>

377
00:14:19,679 --> 00:14:23,189
<font color="#E5E5E5">something which you can very easily</font>

378
00:14:20,429 --> 00:14:24,809
<font color="#CCCCCC">verify using</font><font color="#E5E5E5"> an NS</font><font color="#CCCCCC"> 2 simulation we have</font>

379
00:14:23,189 --> 00:14:27,419
on the x-axis<font color="#E5E5E5"> here the the number of</font>

380
00:14:24,809 --> 00:14:29,368
<font color="#E5E5E5">flows and on the y-axis the minimum</font>

381
00:14:27,419 --> 00:14:31,410
buffer<font color="#E5E5E5"> that we found basically</font>

382
00:14:29,369 --> 00:14:32,819
iteratively so we just rerun the

383
00:14:31,410 --> 00:14:35,238
experiment<font color="#E5E5E5"> until we found the buffer</font>

384
00:14:32,819 --> 00:14:37,889
size that<font color="#E5E5E5"> would guarantee as 95%</font><font color="#CCCCCC"> quickly</font>

385
00:14:35,239 --> 00:14:40,559
<font color="#CCCCCC">we can</font><font color="#E5E5E5"> see that the the red dots which</font>

386
00:14:37,889 --> 00:14:42,239
is our simulation<font color="#E5E5E5"> fit very well on our</font>

387
00:14:40,559 --> 00:14:46,469
model of<font color="#E5E5E5"> 2t times C over</font><font color="#CCCCCC"> square root</font><font color="#E5E5E5"> of</font>

388
00:14:42,239 --> 00:14:47,939
n which is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Green Line so to</font>

389
00:14:46,470 --> 00:14:49,640
summarize for<font color="#E5E5E5"> congested router</font>

390
00:14:47,939 --> 00:14:51,199
<font color="#E5E5E5">flows in the coffin</font>

391
00:14:49,640 --> 00:14:52,970
or argue<font color="#E5E5E5"> synchronized there's plenty</font><font color="#CCCCCC"> of</font>

392
00:14:51,200 --> 00:14:54,589
experimental<font color="#CCCCCC"> evidence for</font><font color="#E5E5E5"> that and also</font>

393
00:14:52,970 --> 00:14:57,050
<font color="#E5E5E5">if you run a network simulation once you</font>

394
00:14:54,589 --> 00:14:58,820
get enough flows they do synchronize and

395
00:14:57,050 --> 00:15:00,500
<font color="#E5E5E5">for</font><font color="#CCCCCC"> disorganized long will it flows you</font>

396
00:14:58,820 --> 00:15:04,010
need only buffers of<font color="#CCCCCC"> 2t times C</font><font color="#E5E5E5"> over</font>

397
00:15:00,500 --> 00:15:05,720
<font color="#CCCCCC">square root</font><font color="#E5E5E5"> of n now we said before n is</font>

398
00:15:04,010 --> 00:15:07,220
<font color="#E5E5E5">something like 10,000 so what I'm</font>

399
00:15:05,720 --> 00:15:09,920
<font color="#E5E5E5">telling you here</font><font color="#CCCCCC"> is that if</font><font color="#E5E5E5"> you take</font>

400
00:15:07,220 --> 00:15:12,890
<font color="#E5E5E5">your</font><font color="#CCCCCC"> current Robert today and switched</font>

401
00:15:09,920 --> 00:15:15,260
<font color="#E5E5E5">off</font><font color="#CCCCCC"> 99% of the buffering</font><font color="#E5E5E5"> it'll run</font>

402
00:15:12,890 --> 00:15:17,149
better<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> change anything</font>

403
00:15:15,260 --> 00:15:18,980
the<font color="#CCCCCC"> protocols any</font><font color="#E5E5E5"> other external</font><font color="#CCCCCC"> network</font>

404
00:15:17,149 --> 00:15:20,930
parameters<font color="#E5E5E5"> but basically this will still</font>

405
00:15:18,980 --> 00:15:22,490
be sufficient in order<font color="#E5E5E5"> to absorb</font>

406
00:15:20,930 --> 00:15:25,339
fluctuations in the<font color="#E5E5E5"> total number of</font>

407
00:15:22,490 --> 00:15:27,980
outstanding packets it'll also reduce

408
00:15:25,339 --> 00:15:29,450
<font color="#E5E5E5">your over the overall latency of flows</font>

409
00:15:27,980 --> 00:15:32,779
through the router<font color="#CCCCCC"> in case of congestion</font>

410
00:15:29,450 --> 00:15:37,550
<font color="#CCCCCC">and then we have</font><font color="#E5E5E5"> later some experiments</font>

411
00:15:32,779 --> 00:15:39,170
<font color="#CCCCCC">to back up that claim now so far we were</font>

412
00:15:37,550 --> 00:15:42,550
<font color="#E5E5E5">assuming</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> a congested router</font>

413
00:15:39,170 --> 00:15:44,930
with long live flows you might<font color="#E5E5E5"> wonder</font>

414
00:15:42,550 --> 00:15:45,620
what happens if we<font color="#CCCCCC"> have flows a slow</font>

415
00:15:44,930 --> 00:15:47,599
start

416
00:15:45,620 --> 00:15:49,399
the majority of flows in the network

417
00:15:47,600 --> 00:15:52,220
actually<font color="#E5E5E5"> are typically short-lived flows</font>

418
00:15:49,399 --> 00:15:53,779
for example web traffic that<font color="#CCCCCC"> only sends</font>

419
00:15:52,220 --> 00:15:55,370
a few packets before the flow terminates

420
00:15:53,779 --> 00:15:56,420
these flows never get out<font color="#CCCCCC"> of slows</font><font color="#E5E5E5"> I've</font>

421
00:15:55,370 --> 00:15:58,579
never get<font color="#E5E5E5"> into this congestion avoidance</font>

422
00:15:56,420 --> 00:16:00,680
mode and do in<font color="#E5E5E5"> that case buffer</font>

423
00:15:58,579 --> 00:16:03,399
requirements differ and the answer is

424
00:16:00,680 --> 00:16:05,779
yes<font color="#CCCCCC"> you</font><font color="#E5E5E5"> actually need even less power</font>

425
00:16:03,399 --> 00:16:07,220
<font color="#E5E5E5">unfortunately if you mix long live flows</font>

426
00:16:05,779 --> 00:16:08,990
and short-lived<font color="#E5E5E5"> flows as you have it in</font>

427
00:16:07,220 --> 00:16:11,570
<font color="#CCCCCC">a real network the effect</font><font color="#E5E5E5"> from the long</font>

428
00:16:08,990 --> 00:16:14,060
live flows dominates<font color="#E5E5E5"> and even if</font><font color="#CCCCCC"> only</font>

429
00:16:11,570 --> 00:16:16,519
<font color="#E5E5E5">10% in a typical</font><font color="#CCCCCC"> Network</font><font color="#E5E5E5"> today probably</font>

430
00:16:14,060 --> 00:16:18,018
<font color="#E5E5E5">something like 80 90 percent of your</font>

431
00:16:16,519 --> 00:16:20,690
<font color="#E5E5E5">packets are from long live flows in the</font>

432
00:16:18,019 --> 00:16:22,730
congestion avoidance mode<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if it was</font>

433
00:16:20,690 --> 00:16:24,470
<font color="#CCCCCC">only 10% still the long live flows what</font>

434
00:16:22,730 --> 00:16:26,089
dominates<font color="#CCCCCC"> was the very very</font><font color="#E5E5E5"> small</font>

435
00:16:24,470 --> 00:16:29,390
<font color="#CCCCCC">percentage of long</font><font color="#E5E5E5"> live flows is</font>

436
00:16:26,089 --> 00:16:30,949
sufficient<font color="#E5E5E5"> in order to to have the long</font>

437
00:16:29,390 --> 00:16:32,990
live<font color="#CCCCCC"> law affect dominate</font><font color="#E5E5E5"> your buffer</font>

438
00:16:30,949 --> 00:16:34,069
requirements<font color="#E5E5E5"> but if you have a router</font>

439
00:16:32,990 --> 00:16:35,810
where you know this part has never

440
00:16:34,070 --> 00:16:38,240
congested<font color="#CCCCCC"> you never have any long live</font>

441
00:16:35,810 --> 00:16:41,689
flows<font color="#E5E5E5"> then you can actually get away</font>

442
00:16:38,240 --> 00:16:43,519
<font color="#E5E5E5">with even smaller buffers so</font><font color="#CCCCCC"> in slow</font>

443
00:16:41,690 --> 00:16:45,980
start<font color="#E5E5E5"> TCP has a different way of</font>

444
00:16:43,519 --> 00:16:47,269
<font color="#CCCCCC">updating</font><font color="#E5E5E5"> its congestion window it'll</font>

445
00:16:45,980 --> 00:16:49,100
<font color="#E5E5E5">start out with a congestion window of</font>

446
00:16:47,269 --> 00:16:51,260
two and then basically double<font color="#E5E5E5"> this</font>

447
00:16:49,100 --> 00:16:52,339
<font color="#E5E5E5">congestion window for each window worth</font>

448
00:16:51,260 --> 00:16:54,079
of<font color="#E5E5E5"> data that was successfully</font>

449
00:16:52,339 --> 00:16:55,850
transmitted so TCP world's<font color="#E5E5E5"> first sent</font>

450
00:16:54,079 --> 00:16:57,089
two packets<font color="#E5E5E5"> and four packets eight</font>

451
00:16:55,850 --> 00:16:58,620
packets sixteen packets

452
00:16:57,089 --> 00:17:02,730
<font color="#E5E5E5">two packets the distance between these</font>

453
00:16:58,620 --> 00:17:05,640
bursts being one<font color="#CCCCCC"> RTT I'll spare you the</font>

454
00:17:02,730 --> 00:17:07,829
the mathematical model that that<font color="#E5E5E5"> sort of</font>

455
00:17:05,640 --> 00:17:10,169
<font color="#CCCCCC">the</font><font color="#E5E5E5"> to model these</font><font color="#CCCCCC"> smart close</font>

456
00:17:07,829 --> 00:17:11,970
<font color="#CCCCCC">especially a human theoretical model</font><font color="#E5E5E5"> we</font>

457
00:17:10,169 --> 00:17:14,159
can with<font color="#E5E5E5"> this model</font><font color="#CCCCCC"> calculate things</font>

458
00:17:11,970 --> 00:17:15,510
like<font color="#E5E5E5"> loss rate average queue length</font><font color="#CCCCCC"> or</font>

459
00:17:14,159 --> 00:17:17,209
<font color="#E5E5E5">the flow completion time so the time</font>

460
00:17:15,510 --> 00:17:20,459
from starting<font color="#E5E5E5"> in flow to ending on flow</font>

461
00:17:17,209 --> 00:17:22,949
<font color="#CCCCCC">the complete models in the paper</font><font color="#E5E5E5"> here's</font>

462
00:17:20,459 --> 00:17:24,419
just a brief<font color="#CCCCCC"> overview</font><font color="#E5E5E5"> what the what the</font>

463
00:17:22,949 --> 00:17:26,520
result means<font color="#E5E5E5"> what we've plotted here is</font>

464
00:17:24,419 --> 00:17:28,020
<font color="#E5E5E5">the</font><font color="#CCCCCC"> average queue length you're gonna</font>

465
00:17:26,520 --> 00:17:30,360
see in your router if you only have

466
00:17:28,020 --> 00:17:32,460
short clothes and at the bottom<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

467
00:17:30,360 --> 00:17:34,918
the flow length and<font color="#CCCCCC"> packets so assume we</font>

468
00:17:32,460 --> 00:17:37,529
have only flows of length<font color="#E5E5E5"> 20 20 packets</font>

469
00:17:34,919 --> 00:17:40,230
which would be probably<font color="#E5E5E5"> be like a small</font>

470
00:17:37,529 --> 00:17:41,640
web page<font color="#E5E5E5"> then the the</font><font color="#CCCCCC"> queue the average</font>

471
00:17:40,230 --> 00:17:45,000
queue length you<font color="#E5E5E5"> would see is only</font><font color="#CCCCCC"> ten</font>

472
00:17:41,640 --> 00:17:46,470
packets<font color="#CCCCCC"> this depends on</font><font color="#E5E5E5"> what load you</font>

473
00:17:45,000 --> 00:17:49,340
<font color="#CCCCCC">have near</font><font color="#E5E5E5"> entre this is assuming a load</font>

474
00:17:46,470 --> 00:17:51,600
of<font color="#CCCCCC"> 80% which is</font><font color="#E5E5E5"> already fell behind</font><font color="#CCCCCC"> the</font>

475
00:17:49,340 --> 00:17:52,918
<font color="#CCCCCC">important thing to take away here is</font><font color="#E5E5E5"> not</font>

476
00:17:51,600 --> 00:17:56,129
so<font color="#E5E5E5"> much what the exact quantitative</font>

477
00:17:52,919 --> 00:17:57,779
relationship is but 15 or 20<font color="#CCCCCC"> or 30</font>

478
00:17:56,130 --> 00:18:00,270
packets worth of buffering is all an

479
00:17:57,779 --> 00:18:03,049
extremely small buffer<font color="#E5E5E5"> you today</font><font color="#CCCCCC"> robbers</font>

480
00:18:00,270 --> 00:18:06,379
took we have<font color="#E5E5E5"> thousands of 10,000 packets</font>

481
00:18:03,049 --> 00:18:06,379
<font color="#CCCCCC">high in</font><font color="#E5E5E5"> progress</font>

482
00:18:07,220 --> 00:18:11,610
<font color="#CCCCCC">other</font><font color="#E5E5E5"> results from the</font><font color="#CCCCCC"> Swart flow model</font>

483
00:18:09,799 --> 00:18:13,679
most importantly the<font color="#CCCCCC"> buffering</font>

484
00:18:11,610 --> 00:18:16,469
requirements only<font color="#E5E5E5"> depend on the</font><font color="#CCCCCC"> length</font>

485
00:18:13,679 --> 00:18:19,230
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the bursts and</font><font color="#CCCCCC"> in the load</font><font color="#E5E5E5"> they do</font>

486
00:18:16,470 --> 00:18:21,990
not<font color="#E5E5E5"> depend on the</font><font color="#CCCCCC"> line speed and the rtt</font>

487
00:18:19,230 --> 00:18:25,679
to give an<font color="#E5E5E5"> example if you have bursts of</font>

488
00:18:21,990 --> 00:18:29,070
up to<font color="#E5E5E5"> size 16 and a lot of 80% for</font><font color="#CCCCCC"> 1%</font>

489
00:18:25,679 --> 00:18:31,169
<font color="#E5E5E5">loss probability mu 115 packets worth of</font>

490
00:18:29,070 --> 00:18:33,240
buffering<font color="#E5E5E5"> if you double</font><font color="#CCCCCC"> that buffer</font><font color="#E5E5E5"> you</font>

491
00:18:31,169 --> 00:18:35,309
get another<font color="#E5E5E5"> factor of hundred smaller</font>

492
00:18:33,240 --> 00:18:36,419
loss probability so there's can edit<font color="#E5E5E5"> if</font>

493
00:18:35,309 --> 00:18:38,549
<font color="#E5E5E5">increase here and amount of buffering</font>

494
00:18:36,419 --> 00:18:42,450
will give you an exponential decrease in

495
00:18:38,549 --> 00:18:44,220
the amount of probability versus of size

496
00:18:42,450 --> 00:18:46,710
<font color="#E5E5E5">16 might seem small at a first glance</font>

497
00:18:44,220 --> 00:18:48,990
<font color="#E5E5E5">but for example</font><font color="#CCCCCC"> Windows XP</font><font color="#E5E5E5"> usually</font>

498
00:18:46,710 --> 00:18:52,830
<font color="#CCCCCC">doesn't scale</font><font color="#E5E5E5"> it's a window size above</font>

499
00:18:48,990 --> 00:18:54,990
<font color="#CCCCCC">12 packets so this is actually a</font><font color="#E5E5E5"> fairly</font>

500
00:18:52,830 --> 00:18:57,539
realistic number<font color="#E5E5E5"> but the most important</font>

501
00:18:54,990 --> 00:18:58,919
takeaway is<font color="#CCCCCC"> that all this doesn't</font><font color="#E5E5E5"> does</font>

502
00:18:57,539 --> 00:19:00,120
the<font color="#E5E5E5"> the amount of buffering put of these</font>

503
00:18:58,919 --> 00:19:02,190
short clothes that you need does not

504
00:19:00,120 --> 00:19:04,199
scale<font color="#E5E5E5"> with the line speed</font><font color="#CCCCCC"> so if you</font>

505
00:19:02,190 --> 00:19:04,930
<font color="#E5E5E5">build a</font><font color="#CCCCCC"> Mon megabit router or 40 gigabit</font>

506
00:19:04,200 --> 00:19:06,430
router

507
00:19:04,930 --> 00:19:08,800
as long as<font color="#CCCCCC"> it serves</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same type of</font>

508
00:19:06,430 --> 00:19:10,000
<font color="#E5E5E5">traffic</font><font color="#CCCCCC"> and just</font><font color="#E5E5E5"> more of it the amount</font>

509
00:19:08,800 --> 00:19:13,120
<font color="#E5E5E5">of buffering</font><font color="#CCCCCC"> you need does not change</font>

510
00:19:10,000 --> 00:19:15,070
<font color="#CCCCCC">and what this</font><font color="#E5E5E5"> means is</font><font color="#CCCCCC"> that the amount</font>

511
00:19:13,120 --> 00:19:16,510
<font color="#CCCCCC">of buffering you get you need for the</font>

512
00:19:15,070 --> 00:19:18,730
long flows which increases with<font color="#CCCCCC"> the</font>

513
00:19:16,510 --> 00:19:24,400
bandwidth<font color="#CCCCCC"> usually dominate is the</font>

514
00:19:18,730 --> 00:19:25,810
dominant of<font color="#E5E5E5"> the of the two effects so I</font>

515
00:19:24,400 --> 00:19:27,790
now<font color="#CCCCCC"> want to show you what happens if you</font>

516
00:19:25,810 --> 00:19:31,210
<font color="#E5E5E5">actually try this out with simulation</font>

517
00:19:27,790 --> 00:19:36,340
and real physical networks so this is a

518
00:19:31,210 --> 00:19:39,880
<font color="#E5E5E5">comparison</font><font color="#CCCCCC"> of three</font><font color="#E5E5E5"> things the model</font><font color="#CCCCCC"> of</font>

519
00:19:36,340 --> 00:19:41,379
<font color="#CCCCCC">a simulating our model with a bow first</font>

520
00:19:39,880 --> 00:19:42,580
<font color="#CCCCCC">of</font><font color="#E5E5E5"> all our quantitative model</font><font color="#CCCCCC"> supposedly</font>

521
00:19:41,380 --> 00:19:45,220
<font color="#E5E5E5">just using the formula that</font><font color="#CCCCCC"> I just</font>

522
00:19:42,580 --> 00:19:48,129
<font color="#CCCCCC">presented simulation is of a network</font>

523
00:19:45,220 --> 00:19:50,770
<font color="#E5E5E5">using</font><font color="#CCCCCC"> ns2 and experiment on the real</font>

524
00:19:48,130 --> 00:19:56,230
physical assist<font color="#E5E5E5"> code GSR</font><font color="#CCCCCC"> auto with OC OC</font>

525
00:19:50,770 --> 00:20:02,440
<font color="#CCCCCC">3</font><font color="#E5E5E5"> line parts that's a very</font><font color="#CCCCCC"> old place the</font>

526
00:19:56,230 --> 00:20:03,970
engine 0 so the we have um<font color="#CCCCCC"> we repeated</font>

527
00:20:02,440 --> 00:20:05,920
this line<font color="#E5E5E5"> this experiment for us 400</font>

528
00:20:03,970 --> 00:20:09,670
<font color="#E5E5E5">flows and for 400 flows and then we</font>

529
00:20:05,920 --> 00:20:12,760
<font color="#E5E5E5">picked</font><font color="#CCCCCC"> router buffer sizes of</font><font color="#E5E5E5"> 2t</font><font color="#CCCCCC"> times C</font>

530
00:20:09,670 --> 00:20:14,140
over<font color="#E5E5E5"> square root of n half of that</font><font color="#CCCCCC"> two</font>

531
00:20:12,760 --> 00:20:15,220
times that and three times that's<font color="#E5E5E5"> just</font>

532
00:20:14,140 --> 00:20:17,080
<font color="#CCCCCC">to</font><font color="#E5E5E5"> get an idea for sort of the</font>

533
00:20:15,220 --> 00:20:19,300
elasticity how exactly does it<font color="#E5E5E5"> depend on</font>

534
00:20:17,080 --> 00:20:21,250
<font color="#CCCCCC">the amount of traffic that</font><font color="#E5E5E5"> you have you</font>

535
00:20:19,300 --> 00:20:22,899
<font color="#E5E5E5">can</font><font color="#CCCCCC"> see in the the numbers to</font><font color="#E5E5E5"> the right</font>

536
00:20:21,250 --> 00:20:24,760
<font color="#E5E5E5">that there's probably good agreement</font>

537
00:20:22,900 --> 00:20:28,060
between model simulation and experiments

538
00:20:24,760 --> 00:20:29,950
<font color="#CCCCCC">about two</font><font color="#E5E5E5"> things a LED with</font><font color="#CCCCCC"> two T times</font>

539
00:20:28,060 --> 00:20:31,929
<font color="#E5E5E5">C over square root of n</font><font color="#CCCCCC"> sized buffers</font>

540
00:20:29,950 --> 00:20:34,240
<font color="#CCCCCC">you can achieve very</font><font color="#E5E5E5"> close to hundred</font>

541
00:20:31,930 --> 00:20:35,380
percent utilization<font color="#CCCCCC"> if you have four</font>

542
00:20:34,240 --> 00:20:37,750
<font color="#CCCCCC">hundred flows</font><font color="#E5E5E5"> actually a hundred</font><font color="#CCCCCC"> percent</font>

543
00:20:35,380 --> 00:20:40,600
<font color="#E5E5E5">utilization</font><font color="#CCCCCC"> then 99.9 the experiment is</font>

544
00:20:37,750 --> 00:20:44,440
probably a statistical error<font color="#CCCCCC"> it also</font>

545
00:20:40,600 --> 00:20:47,020
<font color="#CCCCCC">shows that</font><font color="#E5E5E5"> the model roughly predicts</font>

546
00:20:44,440 --> 00:20:48,220
correctly<font color="#CCCCCC"> at which point utilization</font>

547
00:20:47,020 --> 00:20:51,340
will drop from hundred percent to

548
00:20:48,220 --> 00:20:52,960
something below<font color="#CCCCCC"> hundred percent so this</font>

549
00:20:51,340 --> 00:20:54,939
formula of 2t times<font color="#CCCCCC"> G over square root</font>

550
00:20:52,960 --> 00:20:56,740
<font color="#E5E5E5">of n in a laboratory experiment with</font>

551
00:20:54,940 --> 00:21:00,850
traffic<font color="#E5E5E5"> that we generated ourselves does</font>

552
00:20:56,740 --> 00:21:03,970
actually work we also<font color="#E5E5E5"> tested our short</font>

553
00:21:00,850 --> 00:21:06,159
flow model<font color="#E5E5E5"> so this shows the</font><font color="#CCCCCC"> probability</font>

554
00:21:03,970 --> 00:21:07,810
distribution<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> Q exceeds a</font>

555
00:21:06,160 --> 00:21:11,140
certain length on a router<font color="#CCCCCC"> so we have</font>

556
00:21:07,810 --> 00:21:14,139
the<font color="#CCCCCC"> probability on the on the</font><font color="#E5E5E5"> y axis in</font>

557
00:21:11,140 --> 00:21:17,320
<font color="#E5E5E5">logarithmic scale and the the cooling</font>

558
00:21:14,140 --> 00:21:19,059
on the x-axis and we can see that<font color="#CCCCCC"> the</font>

559
00:21:17,320 --> 00:21:20,678
model which is the blue<font color="#CCCCCC"> line fits very</font>

560
00:21:19,059 --> 00:21:22,830
well with two sets of experimental data

561
00:21:20,679 --> 00:21:26,679
which is the red and<font color="#CCCCCC"> the green line that</font>

562
00:21:22,830 --> 00:21:29,139
<font color="#CCCCCC">is if you shift the data by 42 packets</font>

563
00:21:26,679 --> 00:21:30,640
and at first<font color="#E5E5E5"> this puzzle does lock there</font>

564
00:21:29,140 --> 00:21:33,370
was no we didn't see any good<font color="#E5E5E5"> reason</font><font color="#CCCCCC"> why</font>

565
00:21:30,640 --> 00:21:36,580
<font color="#CCCCCC">we would always underestimate the queue</font>

566
00:21:33,370 --> 00:21:39,399
length divided by<font color="#CCCCCC"> 40</font><font color="#E5E5E5"> two packets but</font>

567
00:21:36,580 --> 00:21:40,629
then we started running numbers and<font color="#E5E5E5"> 42</font>

568
00:21:39,400 --> 00:21:43,679
packets or<font color="#CCCCCC"> forty</font><font color="#E5E5E5"> three packets</font>

569
00:21:40,630 --> 00:21:45,670
corresponds<font color="#E5E5E5"> to 65 kilobytes of data and</font>

570
00:21:43,679 --> 00:21:47,860
so<font color="#CCCCCC"> we were thinking maybe</font><font color="#E5E5E5"> there</font>

571
00:21:45,670 --> 00:21:49,809
somewhere is a hidden memory here of 65

572
00:21:47,860 --> 00:21:51,129
kilobytes<font color="#E5E5E5"> that we that is not documented</font>

573
00:21:49,809 --> 00:21:52,720
the router documentation that<font color="#E5E5E5"> we can't</font>

574
00:21:51,130 --> 00:21:54,280
measure<font color="#E5E5E5"> if there's some additional</font>

575
00:21:52,720 --> 00:21:58,080
<font color="#E5E5E5">buffering of that size</font><font color="#CCCCCC"> would explain</font>

576
00:21:54,280 --> 00:22:00,250
what<font color="#E5E5E5"> we always measure a queue length</font>

577
00:21:58,080 --> 00:22:01,809
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> all okay</font><font color="#E5E5E5"> so we actually I</font>

578
00:22:00,250 --> 00:22:03,429
contacted the manufacturer and find

579
00:22:01,809 --> 00:22:05,080
<font color="#E5E5E5">found</font><font color="#CCCCCC"> the person</font><font color="#E5E5E5"> who who build the wine</font>

580
00:22:03,429 --> 00:22:06,480
<font color="#E5E5E5">cart</font><font color="#CCCCCC"> and they told us yes it's actually</font>

581
00:22:05,080 --> 00:22:09,809
true in the end<font color="#E5E5E5"> the interface management</font>

582
00:22:06,480 --> 00:22:13,299
<font color="#E5E5E5">chip there's a 64 kilobyte buffer and</font>

583
00:22:09,809 --> 00:22:13,899
with<font color="#E5E5E5"> this offset the the theory in the</font>

584
00:22:13,299 --> 00:22:18,340
experiment

585
00:22:13,900 --> 00:22:20,110
<font color="#CCCCCC">I</font><font color="#E5E5E5"> imagine extremely well so we decided</font>

586
00:22:18,340 --> 00:22:22,199
<font color="#E5E5E5">to go one step further and try this out</font>

587
00:22:20,110 --> 00:22:26,439
with with live traffic with real users

588
00:22:22,200 --> 00:22:28,720
<font color="#E5E5E5">so so far the experiment the exponent</font><font color="#CCCCCC"> of</font>

589
00:22:26,440 --> 00:22:32,830
<font color="#CCCCCC">the GSR that we did was basically</font><font color="#E5E5E5"> an</font>

590
00:22:28,720 --> 00:22:34,840
idealized set<font color="#E5E5E5"> up in the laboratory</font><font color="#CCCCCC"> so we</font>

591
00:22:32,830 --> 00:22:38,320
only had long lived<font color="#CCCCCC"> clothes we had very</font>

592
00:22:34,840 --> 00:22:40,418
<font color="#E5E5E5">controlled traffic we only had TCP</font><font color="#CCCCCC"> but</font>

593
00:22:38,320 --> 00:22:43,450
we have<font color="#E5E5E5"> we had real</font><font color="#CCCCCC"> pc's</font><font color="#E5E5E5"> with real TCP</font>

594
00:22:40,419 --> 00:22:45,730
stacks in this experiment we took<font color="#E5E5E5"> a live</font>

595
00:22:43,450 --> 00:22:47,500
<font color="#CCCCCC">production</font><font color="#E5E5E5"> network while it was running</font>

596
00:22:45,730 --> 00:22:49,390
<font color="#CCCCCC">throttled the bandwidth</font><font color="#E5E5E5"> until we got</font>

597
00:22:47,500 --> 00:22:51,309
congestion and then we'd<font color="#CCCCCC"> use the buffer</font>

598
00:22:49,390 --> 00:22:53,799
size to see when utilization would fall

599
00:22:51,309 --> 00:22:56,139
below<font color="#CCCCCC"> hundred-percent</font><font color="#E5E5E5"> and big thanks</font><font color="#CCCCCC"> to</font>

600
00:22:53,799 --> 00:22:59,080
<font color="#CCCCCC">Leah</font><font color="#E5E5E5"> Roberts sunayana</font><font color="#CCCCCC"> Gunsan</font><font color="#E5E5E5"> from</font>

601
00:22:56,140 --> 00:23:02,230
Stanford<font color="#E5E5E5"> for allowing us to do that</font><font color="#CCCCCC"> and</font>

602
00:22:59,080 --> 00:23:04,330
it turns out<font color="#E5E5E5"> that with small multiples</font>

603
00:23:02,230 --> 00:23:06,070
<font color="#CCCCCC">of 2</font><font color="#E5E5E5"> T times cos square root of</font><font color="#CCCCCC"> n which</font>

604
00:23:04,330 --> 00:23:09,490
<font color="#E5E5E5">is shown</font><font color="#CCCCCC"> here in there in the second</font>

605
00:23:06,070 --> 00:23:11,020
column we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> get in the experiment</font>

606
00:23:09,490 --> 00:23:13,140
<font color="#E5E5E5">there so the rightmost column on</font>

607
00:23:11,020 --> 00:23:16,379
utilizations that are very close to<font color="#E5E5E5"> 100%</font>

608
00:23:13,140 --> 00:23:19,030
<font color="#CCCCCC">so even</font><font color="#E5E5E5"> for traffic that's a mix of</font>

609
00:23:16,380 --> 00:23:21,309
<font color="#CCCCCC">long-lived</font><font color="#E5E5E5"> flows short-lived flows</font><font color="#CCCCCC"> UDP</font>

610
00:23:19,030 --> 00:23:23,299
traffic probably occasional denial of

611
00:23:21,309 --> 00:23:25,039
service attack or something like that

612
00:23:23,299 --> 00:23:27,499
even<font color="#E5E5E5"> the sort</font><font color="#CCCCCC"> of this is much</font><font color="#E5E5E5"> more</font>

613
00:23:25,039 --> 00:23:33,799
diverse<font color="#E5E5E5"> traffic</font><font color="#CCCCCC"> makes this rule still</font>

614
00:23:27,499 --> 00:23:37,489
holds fairly well<font color="#CCCCCC"> we also tried this on</font>

615
00:23:33,799 --> 00:23:39,590
on the<font color="#CCCCCC"> Internet to research network</font><font color="#E5E5E5"> so</font>

616
00:23:37,489 --> 00:23:41,299
the we took the link from Indianapolis

617
00:23:39,590 --> 00:23:45,259
to Kansas<font color="#E5E5E5"> this is a</font><font color="#CCCCCC"> ten gigabits per</font>

618
00:23:41,299 --> 00:23:47,899
second link<font color="#CCCCCC"> served by a</font><font color="#E5E5E5"> PI to Juniper T</font>

619
00:23:45,259 --> 00:23:50,570
<font color="#E5E5E5">six 40s on each end the default buffer</font>

620
00:23:47,899 --> 00:23:54,049
of the Juniper is about one second<font color="#CCCCCC"> we</font>

621
00:23:50,570 --> 00:23:56,418
and on this link<font color="#E5E5E5"> we have occasional test</font>

622
00:23:54,049 --> 00:23:58,009
wells of one gigabit per second for TCP

623
00:23:56,419 --> 00:23:59,840
<font color="#E5E5E5">flow of one gigabit per second with</font>

624
00:23:58,009 --> 00:24:01,220
normal TCP we need<font color="#E5E5E5"> very</font><font color="#CCCCCC"> very small loss</font>

625
00:23:59,840 --> 00:24:02,480
probabilities some somewhere in the

626
00:24:01,220 --> 00:24:05,629
<font color="#E5E5E5">order of</font><font color="#CCCCCC"> ten to</font><font color="#E5E5E5"> the minus</font><font color="#CCCCCC"> eight</font>

627
00:24:02,480 --> 00:24:07,580
so<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> extremely</font><font color="#E5E5E5"> stringent and</font><font color="#CCCCCC"> have</font>

628
00:24:05,629 --> 00:24:09,408
loss criteria we have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> fulfill here</font><font color="#E5E5E5"> so</font>

629
00:24:07,580 --> 00:24:10,999
the the<font color="#CCCCCC"> first experiment a buffer size</font>

630
00:24:09,409 --> 00:24:12,859
to<font color="#E5E5E5"> ten millisecond or</font><font color="#CCCCCC"> one percent of the</font>

631
00:24:10,999 --> 00:24:15,859
default<font color="#E5E5E5"> nothing happened</font><font color="#CCCCCC"> five</font>

632
00:24:12,859 --> 00:24:17,389
milliseconds<font color="#CCCCCC"> still nothing happened the</font>

633
00:24:15,859 --> 00:24:19,189
next<font color="#CCCCCC"> step is two milliseconds or so</font><font color="#E5E5E5"> the</font>

634
00:24:17,389 --> 00:24:20,840
experiment is ongoing<font color="#E5E5E5"> but so far there</font>

635
00:24:19,190 --> 00:24:23,389
<font color="#CCCCCC">was basically nothing that there was to</font>

636
00:24:20,840 --> 00:24:25,220
observe<font color="#E5E5E5"> the test flows would still have</font>

637
00:24:23,389 --> 00:24:27,709
the full<font color="#E5E5E5"> utilization we would not see</font>

638
00:24:25,220 --> 00:24:29,869
any<font color="#E5E5E5"> packet drops on the link even with</font>

639
00:24:27,710 --> 00:24:31,999
these with these<font color="#E5E5E5"> small buffers</font><font color="#CCCCCC"> and</font>

640
00:24:29,869 --> 00:24:35,738
<font color="#E5E5E5">thanks to just</font><font color="#CCCCCC"> a special enough</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> ok</font>

641
00:24:31,999 --> 00:24:38,749
arm so it helped make<font color="#E5E5E5"> that happen</font>

642
00:24:35,739 --> 00:24:41,600
so to summarize the old rule<font color="#CCCCCC"> of thumb</font>

643
00:24:38,749 --> 00:24:44,989
for how much buffer<font color="#E5E5E5"> a router</font><font color="#CCCCCC"> needs is</font>

644
00:24:41,600 --> 00:24:46,340
one delay bandwidth product<font color="#E5E5E5"> and there's</font>

645
00:24:44,989 --> 00:24:48,109
still<font color="#E5E5E5"> certain cases which this rule</font>

646
00:24:46,340 --> 00:24:50,779
holds<font color="#E5E5E5"> first of all if you have a single</font>

647
00:24:48,109 --> 00:24:53,029
flow that<font color="#E5E5E5"> should be able to saturate</font>

648
00:24:50,779 --> 00:24:55,879
your<font color="#E5E5E5"> router at full speed then you still</font>

649
00:24:53,029 --> 00:24:58,279
need<font color="#E5E5E5"> a buffer</font><font color="#CCCCCC"> of twenty</font><font color="#E5E5E5"> times</font><font color="#CCCCCC"> see if</font><font color="#E5E5E5"> for</font>

650
00:24:55,879 --> 00:25:00,230
<font color="#CCCCCC">a single flow you can</font><font color="#E5E5E5"> live with</font><font color="#CCCCCC"> 75% of</font>

651
00:24:58,279 --> 00:25:02,929
the utilization<font color="#E5E5E5"> then actually you can</font>

652
00:25:00,230 --> 00:25:04,190
you can use much smaller buffers<font color="#CCCCCC"> so if</font>

653
00:25:02,929 --> 00:25:05,059
you want<font color="#CCCCCC"> to set for example a new speed</font>

654
00:25:04,190 --> 00:25:07,009
record

655
00:25:05,059 --> 00:25:09,259
large buffers might might still be

656
00:25:07,009 --> 00:25:14,029
<font color="#CCCCCC">necessary however if you're serving</font><font color="#E5E5E5"> many</font>

657
00:25:09,259 --> 00:25:16,279
flows<font color="#E5E5E5"> even if you have congestion then</font>

658
00:25:14,029 --> 00:25:18,139
you only need buffers of<font color="#CCCCCC"> 2 T</font><font color="#E5E5E5"> times C</font>

659
00:25:16,279 --> 00:25:19,759
<font color="#CCCCCC">over square root of N and we</font><font color="#E5E5E5"> believe</font>

660
00:25:18,139 --> 00:25:24,019
this<font color="#CCCCCC"> is applicable for</font><font color="#E5E5E5"> the core and</font><font color="#CCCCCC"> the</font>

661
00:25:19,759 --> 00:25:26,389
edge of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> today if you have</font>

662
00:25:24,019 --> 00:25:27,830
one or many flows<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> have no</font>

663
00:25:26,389 --> 00:25:29,840
congestion<font color="#E5E5E5"> and you know there never will</font>

664
00:25:27,830 --> 00:25:31,129
be congestion on<font color="#E5E5E5"> this router then you</font>

665
00:25:29,840 --> 00:25:33,669
can actually get<font color="#CCCCCC"> away with</font><font color="#E5E5E5"> even smaller</font>

666
00:25:31,129 --> 00:25:35,469
buffers<font color="#CCCCCC"> something the order of hundred</font>

667
00:25:33,670 --> 00:25:36,760
maybe<font color="#E5E5E5"> 200 packets it's fairly</font>

668
00:25:35,470 --> 00:25:38,500
independent of line speed it just

669
00:25:36,760 --> 00:25:41,260
depends on<font color="#E5E5E5"> how close you want to get</font>

670
00:25:38,500 --> 00:25:42,640
your load<font color="#E5E5E5"> to to</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> I mean again this</font>

671
00:25:41,260 --> 00:25:44,980
is only for<font color="#CCCCCC"> include gestured routers so</font>

672
00:25:42,640 --> 00:25:47,740
if your load goes above one you'd busily

673
00:25:44,980 --> 00:25:49,000
be back in the<font color="#E5E5E5"> upper case but this only</font>

674
00:25:47,740 --> 00:25:50,800
works<font color="#CCCCCC"> if you know</font><font color="#E5E5E5"> your honor will never</font>

675
00:25:49,000 --> 00:25:52,330
be congested<font color="#CCCCCC"> and which probably for for</font>

676
00:25:50,800 --> 00:25:54,790
real network is not<font color="#E5E5E5"> putting particularly</font>

677
00:25:52,330 --> 00:25:56,470
sensible<font color="#CCCCCC"> architectural</font><font color="#E5E5E5"> and design</font>

678
00:25:54,790 --> 00:25:57,850
<font color="#CCCCCC">guidelines so the link goes down or</font>

679
00:25:56,470 --> 00:26:02,350
<font color="#E5E5E5">something like that you you might get</font>

680
00:25:57,850 --> 00:26:04,629
fantastic so this change has a fairly

681
00:26:02,350 --> 00:26:06,669
large impact on router design<font color="#E5E5E5"> if you</font>

682
00:26:04,630 --> 00:26:08,500
have a 10 gigabit link line<font color="#E5E5E5"> card serving</font>

683
00:26:06,670 --> 00:26:11,050
200,000<font color="#CCCCCC"> modem flows which sort of</font><font color="#E5E5E5"> is the</font>

684
00:26:08,500 --> 00:26:12,340
<font color="#E5E5E5">last generation</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> line cards then the</font>

685
00:26:11,050 --> 00:26:15,070
rule of<font color="#E5E5E5"> thumb tells you you need two</font>

686
00:26:12,340 --> 00:26:17,439
point five gigabits worth of buffer

687
00:26:15,070 --> 00:26:21,429
memory which<font color="#E5E5E5"> would</font><font color="#CCCCCC"> it require external</font>

688
00:26:17,440 --> 00:26:24,820
slow<font color="#CCCCCC"> d ram with a new rule of thumb this</font>

689
00:26:21,430 --> 00:26:27,310
buffer now becomes 6 megabits 6 megabits

690
00:26:24,820 --> 00:26:29,470
<font color="#CCCCCC">you can easily</font><font color="#E5E5E5"> put not</font><font color="#CCCCCC"> only in SRAM</font><font color="#E5E5E5"> but</font>

691
00:26:27,310 --> 00:26:32,710
put<font color="#E5E5E5"> an</font><font color="#CCCCCC"> on-chip</font><font color="#E5E5E5"> SRAM so you don't need</font>

692
00:26:29,470 --> 00:26:34,810
<font color="#E5E5E5">any external RAM devices for buffering</font>

693
00:26:32,710 --> 00:26:38,410
<font color="#E5E5E5">anymore at all for 40 Gigabit LAN card</font>

694
00:26:34,810 --> 00:26:40,690
with 40,000 a broadband flows we still

695
00:26:38,410 --> 00:26:43,810
need the the reductions from<font color="#E5E5E5"> 10 gigabits</font>

696
00:26:40,690 --> 00:26:45,550
to 50 megabits of<font color="#CCCCCC"> buffer memory 50</font>

697
00:26:43,810 --> 00:26:48,940
megabits<font color="#E5E5E5"> today is just slightly too</font>

698
00:26:45,550 --> 00:26:50,260
large to put it on ship<font color="#E5E5E5"> but the people</font>

699
00:26:48,940 --> 00:26:52,560
who understand how<font color="#CCCCCC"> to build</font><font color="#E5E5E5"> these things</font>

700
00:26:50,260 --> 00:26:55,180
tell me that in<font color="#E5E5E5"> the next generation of</font>

701
00:26:52,560 --> 00:26:57,280
of chip design it should<font color="#E5E5E5"> be possible to</font>

702
00:26:55,180 --> 00:26:58,600
fit<font color="#E5E5E5"> something that order of</font><font color="#CCCCCC"> magnitude on</font>

703
00:26:57,280 --> 00:27:00,790
the chips<font color="#CCCCCC"> directly I think currently you</font>

704
00:26:58,600 --> 00:27:01,929
can do<font color="#CCCCCC"> 30</font><font color="#E5E5E5"> 2 megabits on SRAM chip but</font>

705
00:27:00,790 --> 00:27:04,690
the next<font color="#E5E5E5"> generation you</font><font color="#CCCCCC"> will be able to</font>

706
00:27:01,930 --> 00:27:08,770
<font color="#CCCCCC">do 64 so that buffer also</font><font color="#E5E5E5"> puts go back</font>

707
00:27:04,690 --> 00:27:11,260
on the rocket ship<font color="#E5E5E5"> and</font><font color="#CCCCCC"> with that I thank</font>

708
00:27:08,770 --> 00:27:12,370
you<font color="#E5E5E5"> if anyone wants to know</font><font color="#CCCCCC"> once you</font>

709
00:27:11,260 --> 00:27:15,120
have more information<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have a lot more</font>

710
00:27:12,370 --> 00:27:22,929
experimental data and and<font color="#CCCCCC"> all the math</font>

711
00:27:15,120 --> 00:27:25,260
<font color="#E5E5E5">there's paper on our</font><font color="#CCCCCC"> homepage</font><font color="#E5E5E5"> and I have</font>

712
00:27:22,930 --> 00:27:28,010
a question<font color="#CCCCCC"> over here</font>

713
00:27:25,260 --> 00:27:30,870
have you noticed in<font color="#CCCCCC"> your experiments any</font>

714
00:27:28,010 --> 00:27:33,210
any reduction<font color="#CCCCCC"> in latency along with</font>

715
00:27:30,870 --> 00:27:36,000
<font color="#E5E5E5">reducing</font><font color="#CCCCCC"> the length of the queue and it</font>

716
00:27:33,210 --> 00:27:37,380
<font color="#E5E5E5">or the buffer</font><font color="#CCCCCC"> and is that significant</font>

717
00:27:36,000 --> 00:27:40,740
enough to<font color="#E5E5E5"> be another good argument</font><font color="#CCCCCC"> for</font>

718
00:27:37,380 --> 00:27:43,470
doing<font color="#E5E5E5"> this yes absolutely</font><font color="#CCCCCC"> um I didn't</font>

719
00:27:40,740 --> 00:27:45,120
<font color="#E5E5E5">touch on that but the if you have</font>

720
00:27:43,470 --> 00:27:48,530
buffers<font color="#E5E5E5"> of one delay bandwidth product</font>

721
00:27:45,120 --> 00:27:50,790
<font color="#E5E5E5">right</font><font color="#CCCCCC"> your your maximum queuing delay is</font>

722
00:27:48,530 --> 00:27:52,889
the<font color="#E5E5E5"> amount of buffering</font><font color="#CCCCCC"> you have divided</font>

723
00:27:50,790 --> 00:27:55,230
by a line speed so if it's<font color="#CCCCCC"> two T times C</font>

724
00:27:52,890 --> 00:27:57,450
divided by C so your maximum queuing

725
00:27:55,230 --> 00:27:59,250
delay is<font color="#CCCCCC"> 2t which means in case</font><font color="#E5E5E5"> of</font>

726
00:27:57,450 --> 00:28:01,080
<font color="#E5E5E5">congestion the latency through the</font>

727
00:27:59,250 --> 00:28:03,600
router will just be twice what it is

728
00:28:01,080 --> 00:28:05,189
without congestion<font color="#E5E5E5"> so effectively the</font>

729
00:28:03,600 --> 00:28:07,439
the existing rule of thumb sort of

730
00:28:05,190 --> 00:28:10,650
doubles doubles latency in case of

731
00:28:07,440 --> 00:28:13,740
<font color="#E5E5E5">congestion with a new rule of thumb you</font>

732
00:28:10,650 --> 00:28:17,550
get to the<font color="#E5E5E5"> the increases percent or</font>

733
00:28:13,740 --> 00:28:19,440
<font color="#E5E5E5">something like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> over the</font><font color="#CCCCCC"> the latency</font>

734
00:28:17,550 --> 00:28:22,320
with without congestion so we have a

735
00:28:19,440 --> 00:28:25,140
much much smaller increase<font color="#E5E5E5"> even more</font>

736
00:28:22,320 --> 00:28:27,450
interestingly<font color="#E5E5E5"> me one of the questions</font>

737
00:28:25,140 --> 00:28:28,590
that came<font color="#CCCCCC"> up is with if we have smaller</font>

738
00:28:27,450 --> 00:28:31,080
buffers we might get a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit more</font>

739
00:28:28,590 --> 00:28:33,240
loss<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example does this</font><font color="#CCCCCC"> perch it's</font>

740
00:28:31,080 --> 00:28:35,100
a short flows in mixes of course if we

741
00:28:33,240 --> 00:28:36,840
have long flows and<font color="#E5E5E5"> short</font><font color="#CCCCCC"> close to short</font>

742
00:28:35,100 --> 00:28:39,120
<font color="#CCCCCC">posts suffer from smaller buffers</font><font color="#E5E5E5"> and</font>

743
00:28:36,840 --> 00:28:42,000
<font color="#E5E5E5">turns out no they actually because the</font>

744
00:28:39,120 --> 00:28:45,209
the much shorter<font color="#CCCCCC"> RTT through the through</font>

745
00:28:42,000 --> 00:28:46,800
the<font color="#E5E5E5"> router outweighs any any longer</font><font color="#CCCCCC"> for</font>

746
00:28:45,210 --> 00:28:49,320
<font color="#E5E5E5">long to turn due to losses or timeouts</font>

747
00:28:46,800 --> 00:28:51,360
<font color="#E5E5E5">by an order of magnitude</font><font color="#CCCCCC"> so if you have</font>

748
00:28:49,320 --> 00:28:53,399
short the smaller buffers<font color="#CCCCCC"> basically in</font>

749
00:28:51,360 --> 00:28:55,110
<font color="#CCCCCC">case of congestion your shot flows will</font>

750
00:28:53,400 --> 00:28:57,420
take half the time or or close to<font color="#CCCCCC"> half</font>

751
00:28:55,110 --> 00:29:01,500
<font color="#E5E5E5">the</font><font color="#CCCCCC"> time to complete thank you</font>

752
00:28:57,420 --> 00:29:02,940
it's very interesting hi Scott<font color="#E5E5E5"> Marcus</font>

753
00:29:01,500 --> 00:29:05,310
the very interesting piece of<font color="#CCCCCC"> work</font>

754
00:29:02,940 --> 00:29:07,470
I was curious<font color="#E5E5E5"> since in the comparisons</font>

755
00:29:05,310 --> 00:29:10,139
<font color="#E5E5E5">between the the theoretical simulated</font>

756
00:29:07,470 --> 00:29:12,120
and actual results<font color="#CCCCCC"> all the numbers</font><font color="#E5E5E5"> are</font>

757
00:29:10,140 --> 00:29:13,590
<font color="#CCCCCC">pretty close to unity I</font><font color="#E5E5E5"> assume your</font>

758
00:29:12,120 --> 00:29:14,639
sample sizes were probably<font color="#E5E5E5"> pretty large</font>

759
00:29:13,590 --> 00:29:20,189
I was wondering about the confidence

760
00:29:14,640 --> 00:29:21,480
intervals<font color="#E5E5E5"> so let me see which which of</font>

761
00:29:20,190 --> 00:29:23,010
the slides were you referring<font color="#CCCCCC"> to</font><font color="#E5E5E5"> it's</font>

762
00:29:21,480 --> 00:29:25,200
different for different<font color="#E5E5E5"> ones so for the</font>

763
00:29:23,010 --> 00:29:26,820
for the Stanford experiments the biggest

764
00:29:25,200 --> 00:29:31,020
problem was estimating the<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of</font>

765
00:29:26,820 --> 00:29:32,669
concurrent flows so busy<font color="#CCCCCC"> hour N and n is</font>

766
00:29:31,020 --> 00:29:33,660
only<font color="#E5E5E5"> in a square root so we're not</font>

767
00:29:32,670 --> 00:29:36,000
particularly sensitive<font color="#E5E5E5"> to miss</font>

768
00:29:33,660 --> 00:29:37,539
estimating that although there<font color="#E5E5E5"> we we're</font>

769
00:29:36,000 --> 00:29:40,239
not particularly precise we

770
00:29:37,539 --> 00:29:43,299
be off by as much as a factor of<font color="#E5E5E5"> 1.5 or</font>

771
00:29:40,239 --> 00:29:44,919
<font color="#CCCCCC">two okay thank you in the in the</font><font color="#E5E5E5"> other</font>

772
00:29:43,299 --> 00:29:46,330
experiment here we're much much<font color="#E5E5E5"> more</font>

773
00:29:44,919 --> 00:29:48,519
precise<font color="#E5E5E5"> because we could could control</font>

774
00:29:46,330 --> 00:29:50,799
the<font color="#CCCCCC"> setup so here would say</font><font color="#E5E5E5"> we're</font>

775
00:29:48,519 --> 00:29:55,330
<font color="#CCCCCC">probably within dot one</font><font color="#E5E5E5"> percent or two</font>

776
00:29:50,799 --> 00:29:56,918
<font color="#E5E5E5">percent okay so your confidence</font><font color="#CCCCCC"> interval</font>

777
00:29:55,330 --> 00:29:57,999
<font color="#CCCCCC">on</font><font color="#E5E5E5"> each of the individual percentages</font>

778
00:29:56,919 --> 00:29:59,710
you're saying is<font color="#CCCCCC"> probably within</font><font color="#E5E5E5"> one</font>

779
00:29:57,999 --> 00:30:05,429
without one<font color="#CCCCCC"> or two percent yes that's</font>

780
00:29:59,710 --> 00:30:09,629
great okay thank<font color="#CCCCCC"> you did you give any</font>

781
00:30:05,429 --> 00:30:11,979
<font color="#CCCCCC">consideration to how routers</font>

782
00:30:09,629 --> 00:30:13,799
<font color="#E5E5E5">prioritizing</font><font color="#CCCCCC"> cues</font><font color="#E5E5E5"> for example weighted</font>

783
00:30:11,979 --> 00:30:17,799
fair queuing or<font color="#CCCCCC"> a class of service</font>

784
00:30:13,799 --> 00:30:19,929
<font color="#CCCCCC">impact says does this model apply to</font>

785
00:30:17,799 --> 00:30:23,820
that or does<font color="#CCCCCC"> that is that a</font><font color="#E5E5E5"> totally</font>

786
00:30:19,929 --> 00:30:26,470
different experiment<font color="#E5E5E5"> to factor that in</font>

787
00:30:23,820 --> 00:30:28,119
we thought about<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little bit</font><font color="#E5E5E5"> I mean for</font>

788
00:30:26,470 --> 00:30:29,739
the experiments in here we<font color="#E5E5E5"> just</font><font color="#CCCCCC"> assumed</font>

789
00:30:28,119 --> 00:30:31,779
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> have one output</font><font color="#CCCCCC"> queue</font><font color="#E5E5E5"> right</font>

790
00:30:29,739 --> 00:30:33,159
which<font color="#E5E5E5"> is slight oversimplification or</font>

791
00:30:31,779 --> 00:30:35,649
<font color="#E5E5E5">what do you</font><font color="#CCCCCC"> have in a in a</font><font color="#E5E5E5"> real</font><font color="#CCCCCC"> network</font>

792
00:30:33,159 --> 00:30:38,710
<font color="#CCCCCC">and if you have multiple virtual output</font>

793
00:30:35,649 --> 00:30:41,168
queues that are completely separate then

794
00:30:38,710 --> 00:30:43,359
basically you would have to each each

795
00:30:41,169 --> 00:30:44,499
output<font color="#E5E5E5"> queue would have by itself would</font>

796
00:30:43,359 --> 00:30:47,590
need to have this amount of buffering

797
00:30:44,499 --> 00:30:49,119
<font color="#CCCCCC">you can well okay this</font><font color="#E5E5E5"> is a slight</font>

798
00:30:47,590 --> 00:30:50,590
overestimate you can get some with<font color="#E5E5E5"> some</font>

799
00:30:49,119 --> 00:30:51,580
others<font color="#E5E5E5"> using multiplexing between them</font>

800
00:30:50,590 --> 00:30:57,908
<font color="#E5E5E5">and it would be less</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> if you just</font>

801
00:30:51,580 --> 00:31:00,129
<font color="#CCCCCC">have one queue John Lee I had a</font><font color="#E5E5E5"> question</font>

802
00:30:57,909 --> 00:31:01,779
about what packet sizes you were<font color="#CCCCCC"> using</font>

803
00:31:00,129 --> 00:31:06,580
and did you have variable packet sizes

804
00:31:01,779 --> 00:31:10,059
in<font color="#CCCCCC"> your flows in</font><font color="#E5E5E5"> our simulations as well</font>

805
00:31:06,580 --> 00:31:12,668
as the experiments we we<font color="#E5E5E5"> just had long</font>

806
00:31:10,059 --> 00:31:14,080
flow sending<font color="#E5E5E5"> a maximum rate sending</font>

807
00:31:12,669 --> 00:31:16,359
infinite amount<font color="#CCCCCC"> of data so they would</font>

808
00:31:14,080 --> 00:31:18,879
always<font color="#E5E5E5"> have maximum length TCP packets</font>

809
00:31:16,359 --> 00:31:22,599
<font color="#CCCCCC">one-way</font><font color="#E5E5E5"> in X going back so that was</font>

810
00:31:18,879 --> 00:31:24,728
<font color="#CCCCCC">1,500 or was that jumbo</font><font color="#E5E5E5"> packet in the</font>

811
00:31:22,599 --> 00:31:27,700
<font color="#E5E5E5">for the</font><font color="#CCCCCC"> Stanford</font><font color="#E5E5E5"> experiment we had a</font>

812
00:31:24,729 --> 00:31:30,279
wide range<font color="#E5E5E5"> that you know what is typical</font>

813
00:31:27,700 --> 00:31:31,840
for for a production<font color="#E5E5E5"> network today</font><font color="#CCCCCC"> so we</font>

814
00:31:30,279 --> 00:31:34,960
had some short short flows we had some

815
00:31:31,840 --> 00:31:37,119
<font color="#E5E5E5">streaming applications with like 300 to</font>

816
00:31:34,960 --> 00:31:39,879
700<font color="#E5E5E5"> my packet lengths we had something</font>

817
00:31:37,119 --> 00:31:42,970
<font color="#E5E5E5">we still had probably around a third or</font>

818
00:31:39,879 --> 00:31:46,529
half<font color="#CCCCCC"> max</font><font color="#E5E5E5"> maximum thousand</font><font color="#CCCCCC"> five or</font><font color="#E5E5E5"> five</font>

819
00:31:42,970 --> 00:31:46,529
<font color="#CCCCCC">habits</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> thank you</font>

820
00:31:48,809 --> 00:31:56,590
wanted to<font color="#E5E5E5"> ask you if the cost factor by</font>

821
00:31:53,590 --> 00:31:59,709
<font color="#E5E5E5">increasing the buffer size decreasing</font>

822
00:31:56,590 --> 00:32:02,559
the buffer size by a factor<font color="#CCCCCC"> of 100 how</font>

823
00:31:59,710 --> 00:32:04,179
much does it is<font color="#E5E5E5"> a like what what's the</font>

824
00:32:02,559 --> 00:32:07,030
net result in terms of the<font color="#CCCCCC"> overall</font>

825
00:32:04,179 --> 00:32:08,950
reduction<font color="#E5E5E5"> in cost of the router so I</font>

826
00:32:07,030 --> 00:32:10,178
guess we<font color="#E5E5E5"> have a lot people in the room</font>

827
00:32:08,950 --> 00:32:12,309
here<font color="#CCCCCC"> who can probably answer that</font><font color="#E5E5E5"> better</font>

828
00:32:10,179 --> 00:32:15,730
<font color="#E5E5E5">than I could so what I've heard from</font>

829
00:32:12,309 --> 00:32:18,100
from router manufacturers<font color="#E5E5E5"> is first of</font>

830
00:32:15,730 --> 00:32:19,630
all the RAM chips<font color="#CCCCCC"> themselves I mean</font>

831
00:32:18,100 --> 00:32:21,189
<font color="#E5E5E5">typically today for all you have to use</font>

832
00:32:19,630 --> 00:32:22,990
<font color="#E5E5E5">the RAM</font><font color="#CCCCCC"> at the end of the day because</font>

833
00:32:21,190 --> 00:32:24,400
<font color="#E5E5E5">that's the only only RAM chips</font><font color="#CCCCCC"> that'll</font>

834
00:32:22,990 --> 00:32:26,980
give you<font color="#CCCCCC"> enough amount of buffering</font>

835
00:32:24,400 --> 00:32:28,390
<font color="#E5E5E5">because of the DRAM is negligible it's</font>

836
00:32:26,980 --> 00:32:31,300
in the<font color="#E5E5E5"> order of hundreds of dollars</font>

837
00:32:28,390 --> 00:32:33,130
however<font color="#E5E5E5"> the the architecture</font><font color="#CCCCCC"> you that</font>

838
00:32:31,300 --> 00:32:36,129
you need in<font color="#CCCCCC"> order</font><font color="#E5E5E5"> to access this DRAM</font><font color="#CCCCCC"> so</font>

839
00:32:33,130 --> 00:32:38,350
typically these sort<font color="#E5E5E5"> of staged</font><font color="#CCCCCC"> hard</font><font color="#E5E5E5"> SRAM</font>

840
00:32:36,130 --> 00:32:41,280
part DRAM very wide bus architectures

841
00:32:38,350 --> 00:32:44,559
they tend<font color="#E5E5E5"> to make the line cards</font><font color="#CCCCCC"> both</font>

842
00:32:41,280 --> 00:32:47,470
more expensive<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> as much</font><font color="#E5E5E5"> more</font>

843
00:32:44,559 --> 00:32:49,420
<font color="#E5E5E5">power hungry so estimates I've heard and</font>

844
00:32:47,470 --> 00:32:51,580
this is I can sort<font color="#CCCCCC"> of just pass this on</font>

845
00:32:49,420 --> 00:32:53,110
where that<font color="#E5E5E5"> between</font><font color="#CCCCCC"> 30 and</font><font color="#E5E5E5"> 40 percent of</font>

846
00:32:51,580 --> 00:32:54,939
the cost and complexity of a line card

847
00:32:53,110 --> 00:32:56,439
today is the buffering architecture so

848
00:32:54,940 --> 00:32:58,090
if you could<font color="#E5E5E5"> all move it back on chip</font>

849
00:32:56,440 --> 00:33:00,490
<font color="#CCCCCC">you might be able</font><font color="#E5E5E5"> to reduce</font><font color="#CCCCCC"> it by</font>

850
00:32:58,090 --> 00:33:02,139
<font color="#E5E5E5">roughly that amount thank you quick</font>

851
00:33:00,490 --> 00:33:04,470
question have<font color="#E5E5E5"> you considered the effect</font>

852
00:33:02,140 --> 00:33:07,809
of correlations like if you have on off

853
00:33:04,470 --> 00:33:09,730
sources<font color="#CCCCCC"> with long</font><font color="#E5E5E5"> gone periods it's well</font>

854
00:33:07,809 --> 00:33:12,070
<font color="#E5E5E5">known</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the superposition of such</font>

855
00:33:09,730 --> 00:33:14,380
sources is highly correlated<font color="#E5E5E5"> going into</font>

856
00:33:12,070 --> 00:33:16,360
the buffer<font color="#E5E5E5"> and the way they</font><font color="#CCCCCC"> interact in</font>

857
00:33:14,380 --> 00:33:18,450
the buffer<font color="#CCCCCC"> have you</font><font color="#E5E5E5"> considered that</font>

858
00:33:16,360 --> 00:33:23,469
<font color="#E5E5E5">effect of the other type of correlation</font>

859
00:33:18,450 --> 00:33:25,540
so in our models know the the trace<font color="#CCCCCC"> data</font>

860
00:33:23,470 --> 00:33:28,150
that I've seen<font color="#CCCCCC"> for sort of core links in</font>

861
00:33:25,540 --> 00:33:31,300
the network<font color="#E5E5E5"> typically show data that is</font>

862
00:33:28,150 --> 00:33:33,280
that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> fairly a fairly</font><font color="#CCCCCC"> well behaved</font><font color="#E5E5E5"> in</font>

863
00:33:31,300 --> 00:33:34,870
terms of its overall<font color="#E5E5E5"> behavior so there's</font>

864
00:33:33,280 --> 00:33:38,440
no strong synchronization at any time

865
00:33:34,870 --> 00:33:40,559
scale<font color="#CCCCCC"> at any time scale relevant for the</font>

866
00:33:38,440 --> 00:33:43,990
<font color="#CCCCCC">for sort of</font><font color="#E5E5E5"> the analysis that we do</font>

867
00:33:40,559 --> 00:33:45,610
between flows so I guess my answer<font color="#E5E5E5"> would</font>

868
00:33:43,990 --> 00:33:47,679
be in the<font color="#CCCCCC"> traces of the network that</font>

869
00:33:45,610 --> 00:33:50,678
<font color="#CCCCCC">I've seen I didn't see that effect</font><font color="#E5E5E5"> and</font>

870
00:33:47,679 --> 00:33:51,820
so we didn't look<font color="#E5E5E5"> at it</font><font color="#CCCCCC"> in more detail</font>

871
00:33:50,679 --> 00:33:53,679
if<font color="#E5E5E5"> if you have a network where this</font>

872
00:33:51,820 --> 00:33:56,100
plays a major role that you'd have<font color="#E5E5E5"> to</font>

873
00:33:53,679 --> 00:33:56,100
<font color="#E5E5E5">look at this</font>

874
00:33:56,840 --> 00:34:06,330
two quick<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> is did you</font>

875
00:34:01,340 --> 00:34:09,650
<font color="#CCCCCC">monitor test any topologies involving</font>

876
00:34:06,330 --> 00:34:12,420
multiple serialized routers<font color="#E5E5E5"> some with</font>

877
00:34:09,650 --> 00:34:16,410
regular<font color="#CCCCCC"> sized buffers and others with</font>

878
00:34:12,420 --> 00:34:20,270
the new model<font color="#E5E5E5"> buffering and especially</font>

879
00:34:16,409 --> 00:34:23,429
at different speeds<font color="#E5E5E5"> okay so we looked at</font>

880
00:34:20,270 --> 00:34:25,889
topologies where we have for<font color="#CCCCCC"> example</font>

881
00:34:23,429 --> 00:34:27,989
access links that are that<font color="#CCCCCC"> are slower or</font>

882
00:34:25,889 --> 00:34:29,969
somewhere in the path we have routers

883
00:34:27,989 --> 00:34:31,739
that are<font color="#E5E5E5"> links that are slower than</font><font color="#CCCCCC"> our</font>

884
00:34:29,969 --> 00:34:33,149
<font color="#E5E5E5">bottleneck link right which is typically</font>

885
00:34:31,739 --> 00:34:35,609
<font color="#CCCCCC">the case in the core of the network if</font>

886
00:34:33,150 --> 00:34:36,960
you<font color="#CCCCCC"> have a 10 gig of a link in the core</font>

887
00:34:35,610 --> 00:34:40,190
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the network hardly anyone who's in</font>

888
00:34:36,960 --> 00:34:43,409
tanki would access link to the core<font color="#E5E5E5"> and</font>

889
00:34:40,190 --> 00:34:45,929
<font color="#E5E5E5">in that case so generally slow access</font>

890
00:34:43,409 --> 00:34:48,389
links<font color="#E5E5E5"> smooth out traffic</font><font color="#CCCCCC"> I mean because</font>

891
00:34:45,929 --> 00:34:50,159
basically<font color="#E5E5E5"> if a quick burst will space</font>

892
00:34:48,389 --> 00:34:52,799
the out as individual packets<font color="#E5E5E5"> and arrive</font>

893
00:34:50,159 --> 00:34:55,109
at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Kaurava as individual packets</font><font color="#E5E5E5"> and</font>

894
00:34:52,800 --> 00:34:56,280
this is<font color="#E5E5E5"> beneficial and we did not look</font>

895
00:34:55,110 --> 00:34:58,500
at<font color="#E5E5E5"> scenarios where you have multiple</font>

896
00:34:56,280 --> 00:35:02,610
<font color="#CCCCCC">points of congestion</font><font color="#E5E5E5"> in the network that</font>

897
00:34:58,500 --> 00:35:05,430
is I guess my question<font color="#E5E5E5"> was really even</font>

898
00:35:02,610 --> 00:35:07,260
<font color="#E5E5E5">in the if there was only one congestion</font>

899
00:35:05,430 --> 00:35:10,379
<font color="#E5E5E5">point would it matter where the</font>

900
00:35:07,260 --> 00:35:13,680
buffering was actually reduced so the

901
00:35:10,380 --> 00:35:15,870
<font color="#CCCCCC">answers we looked at we looked at some</font>

902
00:35:13,680 --> 00:35:18,960
scenarios<font color="#E5E5E5"> there we think that that sort</font>

903
00:35:15,870 --> 00:35:21,839
<font color="#CCCCCC">of covers most topologies but the</font><font color="#E5E5E5"> single</font>

904
00:35:18,960 --> 00:35:23,250
point<font color="#CCCCCC"> of congestion and what I've</font>

905
00:35:21,840 --> 00:35:26,580
presented<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> worst case</font><font color="#CCCCCC"> estimate</font>

906
00:35:23,250 --> 00:35:28,350
<font color="#E5E5E5">so if you have the other topologies</font>

907
00:35:26,580 --> 00:35:29,759
<font color="#CCCCCC">there might need</font><font color="#E5E5E5"> less buffering because</font>

908
00:35:28,350 --> 00:35:32,279
basically traffic is smoothed out<font color="#CCCCCC"> in the</font>

909
00:35:29,760 --> 00:35:34,470
<font color="#E5E5E5">access does that answer your question</font>

910
00:35:32,280 --> 00:35:37,170
incredible<font color="#E5E5E5"> I'll follow up afterwards ok</font>

911
00:35:34,470 --> 00:35:40,080
the<font color="#E5E5E5"> other question is for the internet</font>

912
00:35:37,170 --> 00:35:43,020
speed land record stuff<font color="#CCCCCC"> would</font><font color="#E5E5E5"> that not</font>

913
00:35:40,080 --> 00:35:45,660
be a case of<font color="#E5E5E5"> it would have make not more</font>

914
00:35:43,020 --> 00:35:49,380
sense for them to<font color="#E5E5E5"> have modified versions</font>

915
00:35:45,660 --> 00:35:51,990
of TCP that<font color="#E5E5E5"> don't do the window in half</font>

916
00:35:49,380 --> 00:35:53,520
and absolutely<font color="#CCCCCC"> I mean because once</font>

917
00:35:51,990 --> 00:35:56,069
you've got the small buffers<font color="#E5E5E5"> then they</font>

918
00:35:53,520 --> 00:36:01,710
need<font color="#E5E5E5"> to work around you yeah no question</font>

919
00:35:56,070 --> 00:36:03,780
<font color="#E5E5E5">absolutely</font><font color="#CCCCCC"> no question for you does your</font>

920
00:36:01,710 --> 00:36:06,000
<font color="#E5E5E5">data include admittedly have not read</font>

921
00:36:03,780 --> 00:36:07,050
your<font color="#CCCCCC"> AC</font><font color="#E5E5E5"> on paper so perhaps it does does</font>

922
00:36:06,000 --> 00:36:08,670
your<font color="#E5E5E5"> data include</font>

923
00:36:07,050 --> 00:36:10,470
kinds<font color="#E5E5E5"> of simulations with tests in which</font>

924
00:36:08,670 --> 00:36:12,450
<font color="#E5E5E5">you had a combination</font><font color="#CCCCCC"> of conformant</font><font color="#E5E5E5"> to</font>

925
00:36:10,470 --> 00:36:13,950
loss<font color="#E5E5E5"> like</font><font color="#CCCCCC"> tcp of course and non</font>

926
00:36:12,450 --> 00:36:17,850
conformal foils like voice over IP or

927
00:36:13,950 --> 00:36:19,980
<font color="#E5E5E5">TDM over IP that kind</font><font color="#CCCCCC"> of things</font><font color="#E5E5E5"> so we</font>

928
00:36:17,850 --> 00:36:22,799
did we do<font color="#E5E5E5"> combinations of short live</font>

929
00:36:19,980 --> 00:36:24,990
flows<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the long live flows and well</font>

930
00:36:22,800 --> 00:36:27,000
Charlotte flows<font color="#E5E5E5"> they still in theory</font>

931
00:36:24,990 --> 00:36:29,339
adapt to to congestion<font color="#E5E5E5"> they lose a</font>

932
00:36:27,000 --> 00:36:30,870
packet in in<font color="#E5E5E5"> practice</font><font color="#CCCCCC"> they are so much</font>

933
00:36:29,340 --> 00:36:32,280
more<font color="#CCCCCC"> aggressive than the</font><font color="#E5E5E5"> long live those</font>

934
00:36:30,870 --> 00:36:33,750
because they have smaller window size

935
00:36:32,280 --> 00:36:35,520
and just<font color="#E5E5E5"> double every time</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you can</font>

936
00:36:33,750 --> 00:36:36,900
almost treat them as a sort of

937
00:36:35,520 --> 00:36:38,759
<font color="#E5E5E5">concentrate sender or something like</font>

938
00:36:36,900 --> 00:36:40,830
<font color="#CCCCCC">that and that</font><font color="#E5E5E5"> doesn't change the results</font>

939
00:36:38,760 --> 00:36:42,960
<font color="#CCCCCC">I guess the</font><font color="#E5E5E5"> the one question or more</font>

940
00:36:40,830 --> 00:36:44,759
<font color="#CCCCCC">concern I would</font><font color="#E5E5E5"> have in my</font><font color="#CCCCCC"> mind is</font><font color="#E5E5E5"> for</font>

941
00:36:42,960 --> 00:36:46,440
example<font color="#CCCCCC"> on a network</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we we know is</font>

942
00:36:44,760 --> 00:36:48,570
going<font color="#E5E5E5"> to carry large the RTP traffic</font>

943
00:36:46,440 --> 00:36:51,690
<font color="#E5E5E5">what would those non-conforming flows</font>

944
00:36:48,570 --> 00:36:53,520
tend to exaggerate<font color="#CCCCCC"> the capture effect if</font>

945
00:36:51,690 --> 00:36:55,560
you<font color="#CCCCCC"> had less and</font><font color="#E5E5E5"> less buffer at</font>

946
00:36:53,520 --> 00:36:57,720
congestion points so<font color="#CCCCCC"> forth</font>

947
00:36:55,560 --> 00:37:05,250
<font color="#E5E5E5">okay we should</font><font color="#CCCCCC"> maybe take that</font><font color="#E5E5E5"> offline</font>

948
00:36:57,720 --> 00:37:07,169
<font color="#E5E5E5">sometimes yes sometimes no thank you if</font>

949
00:37:05,250 --> 00:37:08,550
you change<font color="#E5E5E5"> one little</font><font color="#CCCCCC"> thing to</font><font color="#E5E5E5"> say in a</font>

950
00:37:07,170 --> 00:37:16,050
cube<font color="#E5E5E5"> root of</font><font color="#CCCCCC"> ten did you have some</font>

951
00:37:08,550 --> 00:37:25,770
sample I'm sorry I didn't get<font color="#E5E5E5"> the first</font>

952
00:37:16,050 --> 00:37:28,910
part<font color="#E5E5E5"> of the question okay</font><font color="#CCCCCC"> yeah it's two</font>

953
00:37:25,770 --> 00:37:34,560
T by<font color="#CCCCCC"> C</font><font color="#E5E5E5"> but you</font><font color="#CCCCCC"> defended</font><font color="#E5E5E5"> you could you</font>

954
00:37:28,910 --> 00:37:36,600
comment on that<font color="#E5E5E5"> change yeah</font>

955
00:37:34,560 --> 00:37:38,009
so the if you mean the the<font color="#CCCCCC"> fundamental</font>

956
00:37:36,600 --> 00:37:40,920
question<font color="#E5E5E5"> there is what happens if you</font>

957
00:37:38,010 --> 00:37:43,080
pick a<font color="#E5E5E5"> size is too small</font><font color="#CCCCCC"> or too big</font>

958
00:37:40,920 --> 00:37:45,530
right<font color="#CCCCCC"> if you sort</font><font color="#E5E5E5"> of if you look at the</font>

959
00:37:43,080 --> 00:37:48,720
shape<font color="#E5E5E5"> of the Gaussian</font><font color="#CCCCCC"> all right</font><font color="#E5E5E5"> it's</font>

960
00:37:45,530 --> 00:37:52,920
it's a<font color="#E5E5E5"> family sense sort of your it's</font>

961
00:37:48,720 --> 00:37:54,149
fairly<font color="#E5E5E5"> sensitive to if you pick much too</font>

962
00:37:52,920 --> 00:37:55,560
small about<font color="#E5E5E5"> for your media gonna rely</font>

963
00:37:54,150 --> 00:37:57,180
recognize it<font color="#CCCCCC"> because your losses just</font>

964
00:37:55,560 --> 00:37:58,590
<font color="#E5E5E5">will become huge</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> and you're not</font>

965
00:37:57,180 --> 00:38:00,120
<font color="#CCCCCC">gonna go anywhere near hundred percent</font>

966
00:37:58,590 --> 00:38:01,470
utilization anymore<font color="#CCCCCC"> if you think a</font>

967
00:38:00,120 --> 00:38:02,549
buffer size that's too large

968
00:38:01,470 --> 00:38:04,140
you'll still get<font color="#CCCCCC"> hundred percent</font>

969
00:38:02,550 --> 00:38:06,960
utilization but with a larger latency

970
00:38:04,140 --> 00:38:10,049
and these sort of<font color="#E5E5E5"> this this transition</font>

971
00:38:06,960 --> 00:38:14,550
is actually fairly sharp so if you would

972
00:38:10,050 --> 00:38:15,900
take<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> know - TT MC over Q like</font>

973
00:38:14,550 --> 00:38:18,240
the cubic<font color="#CCCCCC"> root of N or</font><font color="#E5E5E5"> some</font>

974
00:38:15,900 --> 00:38:19,680
like that<font color="#E5E5E5"> you wouldn't you would get mad</font>

975
00:38:18,240 --> 00:38:20,939
<font color="#E5E5E5">you would get a much less than</font><font color="#CCCCCC"> hundred</font>

976
00:38:19,680 --> 00:38:24,240
percent utilization and<font color="#E5E5E5"> set the</font>

977
00:38:20,940 --> 00:38:27,779
significant losses is that does<font color="#E5E5E5"> answer</font>

978
00:38:24,240 --> 00:38:41,578
your question yeah<font color="#CCCCCC"> I was</font><font color="#E5E5E5"> looking at some</font>

979
00:38:27,779 --> 00:38:44,369
you know<font color="#CCCCCC"> done in this so so that there's</font>

980
00:38:41,579 --> 00:38:45,539
<font color="#E5E5E5">some in the the extended version of the</font>

981
00:38:44,369 --> 00:38:47,279
second<font color="#E5E5E5"> paper that's in our home page</font>

982
00:38:45,539 --> 00:38:49,440
there's some data on that that compares

983
00:38:47,279 --> 00:38:51,059
sort of how varying<font color="#E5E5E5"> your amount of</font>

984
00:38:49,440 --> 00:38:53,039
buffering effects utilization so if you

985
00:38:51,059 --> 00:38:55,680
know if<font color="#CCCCCC"> you get ninety nine</font><font color="#E5E5E5"> point five</font>

986
00:38:53,039 --> 00:38:57,869
versus 98 or you know<font color="#CCCCCC"> ninety-nine point</font>

987
00:38:55,680 --> 00:39:09,240
nine<font color="#CCCCCC"> you might want to have a</font><font color="#E5E5E5"> look at</font>

988
00:38:57,869 --> 00:39:11,819
<font color="#E5E5E5">that or okay one quick question</font><font color="#CCCCCC"> did you</font>

989
00:39:09,240 --> 00:39:13,558
was there any investigation of red or

990
00:39:11,819 --> 00:39:18,058
<font color="#E5E5E5">other similar discard mechanisms of the</font>

991
00:39:13,559 --> 00:39:19,819
<font color="#CCCCCC">pintail drop</font><font color="#E5E5E5"> yes</font><font color="#CCCCCC"> the the key effect of</font>

992
00:39:18,059 --> 00:39:23,640
red is that it<font color="#CCCCCC"> D</font><font color="#E5E5E5"> synchronizers flows</font>

993
00:39:19,819 --> 00:39:25,500
which for<font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean my whole analysis here</font>

994
00:39:23,640 --> 00:39:26,819
is if you have synchronized flows<font color="#CCCCCC"> then</font>

995
00:39:25,500 --> 00:39:28,589
you need to<font color="#E5E5E5"> lead a large buffers because</font>

996
00:39:26,819 --> 00:39:31,109
<font color="#E5E5E5">GCM can I suppose you don't need a large</font>

997
00:39:28,589 --> 00:39:32,520
buffers<font color="#E5E5E5"> I don't claim to fully</font>

998
00:39:31,109 --> 00:39:34,109
understand when flows are synchronized

999
00:39:32,520 --> 00:39:35,730
and<font color="#E5E5E5"> whether or</font><font color="#CCCCCC"> not the big problem is</font>

1000
00:39:34,109 --> 00:39:38,700
that<font color="#E5E5E5"> the NS</font><font color="#CCCCCC"> two which is the standard</font>

1001
00:39:35,730 --> 00:39:40,680
tool who the academic<font color="#CCCCCC"> community to to to</font>

1002
00:39:38,700 --> 00:39:42,720
simulate networks<font color="#CCCCCC"> tends</font><font color="#E5E5E5"> to overestimate</font>

1003
00:39:40,680 --> 00:39:44,069
<font color="#E5E5E5">synchronization so if n is two shows</font><font color="#CCCCCC"> of</font>

1004
00:39:42,720 --> 00:39:45,328
<font color="#E5E5E5">synchronization</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> doesn't mean you</font>

1005
00:39:44,069 --> 00:39:48,599
necessarily<font color="#E5E5E5"> have some translational real</font>

1006
00:39:45,329 --> 00:39:50,039
<font color="#CCCCCC">network rat if you have synchronization</font>

1007
00:39:48,599 --> 00:39:51,539
you use red it<font color="#E5E5E5"> will definitely help you</font>

1008
00:39:50,039 --> 00:39:52,890
<font color="#E5E5E5">to decent cognize the pulse and get to</font>

1009
00:39:51,539 --> 00:39:55,289
your lower buffer requirements earlier

1010
00:39:52,890 --> 00:39:57,240
for a very large<font color="#CCCCCC"> number of flows flows</font>

1011
00:39:55,289 --> 00:39:59,039
tend to be synchronized with red or drop

1012
00:39:57,240 --> 00:40:00,629
tail or any<font color="#E5E5E5"> other scheme so it doesn't</font>

1013
00:39:59,039 --> 00:40:03,210
really matter<font color="#E5E5E5"> what you</font><font color="#CCCCCC"> use I mean if you</font>

1014
00:40:00,630 --> 00:40:05,869
have like more<font color="#E5E5E5"> than</font><font color="#CCCCCC"> 5,000 flows you use</font>

1015
00:40:03,210 --> 00:40:05,869
whatever you<font color="#E5E5E5"> want it</font>

1016
00:40:07,380 --> 00:40:10,500
thank you

