1
00:00:18,250 --> 00:00:24,500
I'm Justin CTO and co-founder of Alfia

2
00:00:22,550 --> 00:00:27,140
and today I'm going to be talking about

3
00:00:24,500 --> 00:00:30,080
building an ISP in a box or sort of a

4
00:00:27,140 --> 00:00:32,989
new economic model for last mile

5
00:00:30,080 --> 00:00:34,849
networks but before I go there I'm going

6
00:00:32,989 --> 00:00:36,320
to take a brief detour for those of you

7
00:00:34,850 --> 00:00:38,000
who aren't already familiar with sort of

8
00:00:36,320 --> 00:00:40,460
the economics of building last mile

9
00:00:38,000 --> 00:00:43,150
networks and explain a little bit about

10
00:00:40,460 --> 00:00:45,800
what it costs and what the barriers are

11
00:00:43,150 --> 00:00:47,510
particularly from my perspective since

12
00:00:45,800 --> 00:00:51,010
I'm most familiar with Wireless ISP

13
00:00:47,510 --> 00:00:54,800
equipment but the long story short is

14
00:00:51,010 --> 00:00:56,870
that you can hook up a customer with

15
00:00:54,800 --> 00:00:59,059
better than median u.s. internet speeds

16
00:00:56,870 --> 00:01:01,309
for $300 and that's a pretty

17
00:00:59,060 --> 00:01:03,620
conservative estimate the numbers change

18
00:01:01,309 --> 00:01:06,009
the exact details change maybe you go

19
00:01:03,620 --> 00:01:08,990
with fiber or maybe you'll go with cable

20
00:01:06,009 --> 00:01:11,740
but no matter how you do it building

21
00:01:08,990 --> 00:01:14,179
infrastructure is wildly profitable and

22
00:01:11,740 --> 00:01:17,449
coordinating it is what is hard the

23
00:01:14,180 --> 00:01:19,550
actual hardware cost is really pitiful

24
00:01:17,450 --> 00:01:22,940
compared to the cost of building the

25
00:01:19,550 --> 00:01:24,470
actual network out now I'll take a

26
00:01:22,940 --> 00:01:28,069
moment to say that last mile networks

27
00:01:24,470 --> 00:01:31,759
are by definition within a few miles you

28
00:01:28,069 --> 00:01:33,920
know somewhere less than 50 of existing

29
00:01:31,759 --> 00:01:37,280
fiber backbone infrastructure you have

30
00:01:33,920 --> 00:01:39,830
end-user homes or locations that just

31
00:01:37,280 --> 00:01:43,580
don't have access to good existing

32
00:01:39,830 --> 00:01:45,349
infrastructure and when you ask why that

33
00:01:43,580 --> 00:01:47,390
is people often say it's just expensive

34
00:01:45,349 --> 00:01:49,490
well it's not expensive to build it's

35
00:01:47,390 --> 00:01:51,560
expensive to coordinate it's expensive

36
00:01:49,490 --> 00:01:53,509
to gain access to customer property to

37
00:01:51,560 --> 00:01:55,490
install equipment it's expensive to gain

38
00:01:53,509 --> 00:01:58,520
access to business property or city

39
00:01:55,490 --> 00:02:00,318
property to build the infrastructure

40
00:01:58,520 --> 00:02:02,630
that you need to build and place the

41
00:02:00,319 --> 00:02:05,599
rather cheap equipment in the correct

42
00:02:02,630 --> 00:02:07,098
locations so how can we solve this

43
00:02:05,599 --> 00:02:09,050
problem how can we increase the

44
00:02:07,099 --> 00:02:12,050
availability and reduce the price of

45
00:02:09,050 --> 00:02:14,420
Internet access and we actually have a

46
00:02:12,050 --> 00:02:16,700
very successful model for solving this

47
00:02:14,420 --> 00:02:20,269
problem it's called the Internet and

48
00:02:16,700 --> 00:02:23,060
it's where a group of autonomous

49
00:02:20,270 --> 00:02:24,860
organizations cooperate to form a

50
00:02:23,060 --> 00:02:28,250
network with no single owner and this

51
00:02:24,860 --> 00:02:30,380
creates better efficiency if one company

52
00:02:28,250 --> 00:02:31,940
wanted to own the entire Internet it

53
00:02:30,380 --> 00:02:33,230
would not be feasible they simply

54
00:02:31,940 --> 00:02:35,180
wouldn't be able to coordinate it

55
00:02:33,230 --> 00:02:37,899
because human communication does not

56
00:02:35,180 --> 00:02:40,280
scale that well on the other hand

57
00:02:37,900 --> 00:02:42,860
automated cooperation and human

58
00:02:40,280 --> 00:02:46,370
cooperation in the form of events like

59
00:02:42,860 --> 00:02:48,140
Nanog and other peering groups really

60
00:02:46,370 --> 00:02:51,140
are what make the internet cost feasible

61
00:02:48,140 --> 00:02:53,899
in the first place so what if we could

62
00:02:51,140 --> 00:02:57,019
apply that same principle to the last

63
00:02:53,900 --> 00:03:00,380
mile because right now the only way you

64
00:02:57,020 --> 00:03:03,980
can make money as an ISP sorry as a last

65
00:03:00,380 --> 00:03:06,980
mile and user ISP is to have subscribers

66
00:03:03,980 --> 00:03:10,310
so fully captured subscribers that pay

67
00:03:06,980 --> 00:03:12,170
you for temporary access to your to your

68
00:03:10,310 --> 00:03:15,560
monopoly on infrastructure to their

69
00:03:12,170 --> 00:03:17,269
location and this is great if you're a

70
00:03:15,560 --> 00:03:19,570
provider it's a very Stratus steady

71
00:03:17,270 --> 00:03:22,610
stream of income it's very predictable

72
00:03:19,570 --> 00:03:27,109
but it's not so great if you're a

73
00:03:22,610 --> 00:03:28,910
customer who cannot share resources

74
00:03:27,110 --> 00:03:30,950
cannot make use of multiple pieces of

75
00:03:28,910 --> 00:03:31,910
infrastructure to their home and more

76
00:03:30,950 --> 00:03:34,519
importantly you end up with really

77
00:03:31,910 --> 00:03:37,310
ridiculous situations where one home has

78
00:03:34,520 --> 00:03:38,720
good internet access and maybe 200 feet

79
00:03:37,310 --> 00:03:40,910
down the road or a mile down the road

80
00:03:38,720 --> 00:03:42,650
somebody has horrible internet access

81
00:03:40,910 --> 00:03:45,350
and they asked well why can't you just

82
00:03:42,650 --> 00:03:47,660
hook them up it seems easy and that's

83
00:03:45,350 --> 00:03:48,980
because it is the two hundred thousand

84
00:03:47,660 --> 00:03:50,420
dollars or two million dollars or

85
00:03:48,980 --> 00:03:53,480
whatever ridiculous number you hear when

86
00:03:50,420 --> 00:03:55,489
you hear this anecdote is the price you

87
00:03:53,480 --> 00:03:58,220
are paying for the monopoly ownership

88
00:03:55,490 --> 00:04:01,970
model of existing ISPs

89
00:03:58,220 --> 00:04:03,500
so this is what Alethea is it's a system

90
00:04:01,970 --> 00:04:04,730
to change the economic model of

91
00:04:03,500 --> 00:04:07,430
last-mile ISPs

92
00:04:04,730 --> 00:04:08,739
by sort of shrinking down and automating

93
00:04:07,430 --> 00:04:12,140
the Internet's

94
00:04:08,740 --> 00:04:14,240
peering model where many different

95
00:04:12,140 --> 00:04:18,798
people participate in a single network

96
00:04:14,240 --> 00:04:20,569
independently and compensation is moved

97
00:04:18,798 --> 00:04:22,849
through the system through peering

98
00:04:20,569 --> 00:04:24,830
agreements or not necessarily peering

99
00:04:22,850 --> 00:04:27,680
agreements but transit agreements

100
00:04:24,830 --> 00:04:29,090
forgive me if my terminology is a little

101
00:04:27,680 --> 00:04:33,020
off here because I'm trying to apply

102
00:04:29,090 --> 00:04:35,299
concepts from the larger Internet to a

103
00:04:33,020 --> 00:04:37,099
smaller automated scale so I'm sure we

104
00:04:35,300 --> 00:04:38,030
can have arguments about semantics all

105
00:04:37,099 --> 00:04:44,570
day of some

106
00:04:38,030 --> 00:04:46,190
like doing that so yeah the principle is

107
00:04:44,570 --> 00:04:48,380
that we can reduce cost and increase

108
00:04:46,190 --> 00:04:51,500
access by allowing people to cooperate

109
00:04:48,380 --> 00:04:55,930
on the last mile but how do we do that

110
00:04:51,500 --> 00:04:55,930
can we really automate that effectively

111
00:05:00,700 --> 00:05:06,070
yeah so how we do this is that we're not

112
00:05:04,130 --> 00:05:08,840
proposing something like a new inner

113
00:05:06,070 --> 00:05:10,550
like a new internet or something strange

114
00:05:08,840 --> 00:05:13,580
what we are proposing is essentially a

115
00:05:10,550 --> 00:05:15,110
normal last mile ISP in all appearances

116
00:05:13,580 --> 00:05:18,729
on the outside using perhaps

117
00:05:15,110 --> 00:05:22,550
point-to-point wireless fiber or cable

118
00:05:18,730 --> 00:05:24,590
but the each user is capable of

119
00:05:22,550 --> 00:05:26,870
selecting their own routes providing

120
00:05:24,590 --> 00:05:28,549
transit for others being paid and paying

121
00:05:26,870 --> 00:05:31,010
for these services completely

122
00:05:28,550 --> 00:05:34,280
automatically and from the perspective

123
00:05:31,010 --> 00:05:36,080
of the outside world you could say that

124
00:05:34,280 --> 00:05:39,409
it's just a bunch of Wi-Fi routers

125
00:05:36,080 --> 00:05:40,909
paying each other for bandwidth so can

126
00:05:39,410 --> 00:05:43,130
we implement this this is something

127
00:05:40,910 --> 00:05:45,680
right out of science fiction and the

128
00:05:43,130 --> 00:05:46,820
answer is yes we can and in fact I hope

129
00:05:45,680 --> 00:05:49,400
that by the end of this presentation

130
00:05:46,820 --> 00:05:51,710
you'll believe that it's very simple my

131
00:05:49,400 --> 00:05:53,299
goal is not to convince you that this

132
00:05:51,710 --> 00:05:55,010
new economic model is the best thing

133
00:05:53,300 --> 00:05:58,540
since sliced bread it's to convince you

134
00:05:55,010 --> 00:06:01,219
that it can at least be built and it is

135
00:05:58,540 --> 00:06:03,290
possible for it to be competitive with

136
00:06:01,220 --> 00:06:05,510
existing systems and in fact we have

137
00:06:03,290 --> 00:06:07,810
already built this you can download it

138
00:06:05,510 --> 00:06:12,020
and use it it's open-source github.com

139
00:06:07,810 --> 00:06:13,880
Alfia - mesh now that the explanation

140
00:06:12,020 --> 00:06:18,320
sort of out of the way we can get into

141
00:06:13,880 --> 00:06:20,300
the technical details so what we ended

142
00:06:18,320 --> 00:06:24,040
up choosing is our platform is open wrt

143
00:06:20,300 --> 00:06:24,040
routers which is sort of an odd choice

144
00:06:24,160 --> 00:06:29,419
from the perspective of how to build a

145
00:06:27,740 --> 00:06:31,610
new system but it's a very effective

146
00:06:29,419 --> 00:06:33,109
choice in terms of reducing costs and

147
00:06:31,610 --> 00:06:35,120
making it easier to get stuff into

148
00:06:33,110 --> 00:06:37,970
customers homes because primarily we

149
00:06:35,120 --> 00:06:40,520
need agency the customer needs the agent

150
00:06:37,970 --> 00:06:42,260
well the system that is in the customers

151
00:06:40,520 --> 00:06:45,090
home needs agency to make routing

152
00:06:42,260 --> 00:06:48,659
decisions on their behalf to pay for

153
00:06:45,090 --> 00:06:52,080
routes and bandwidth and to generally do

154
00:06:48,660 --> 00:06:55,350
the by side of this autonomous bandwidth

155
00:06:52,080 --> 00:06:57,330
market we're talking about building and

156
00:06:55,350 --> 00:06:59,220
within that footprint of an open wrt

157
00:06:57,330 --> 00:07:01,409
router we have to fit everything you

158
00:06:59,220 --> 00:07:04,830
would traditionally have an isp do so

159
00:07:01,410 --> 00:07:07,350
this is GLS routing even stuff like

160
00:07:04,830 --> 00:07:10,190
incident resolution and of course our

161
00:07:07,350 --> 00:07:15,060
headliner feature peer-to-peer

162
00:07:10,190 --> 00:07:17,070
autonomous bandwidth payments yeah so

163
00:07:15,060 --> 00:07:18,360
here is a network diagram I'm not going

164
00:07:17,070 --> 00:07:20,810
to go over this in detail but I want to

165
00:07:18,360 --> 00:07:23,070
call a few things to your attention

166
00:07:20,810 --> 00:07:25,940
other than the fact that the NAT isn't

167
00:07:23,070 --> 00:07:29,040
there when people are using ipv6 native

168
00:07:25,940 --> 00:07:31,110
mainly that traffic goes through an

169
00:07:29,040 --> 00:07:32,639
arbitrary number of routers and these

170
00:07:31,110 --> 00:07:34,860
can be any particular hardware device

171
00:07:32,639 --> 00:07:37,860
before it reaches an exit and an exit

172
00:07:34,860 --> 00:07:39,270
acts as an interface between the Alethea

173
00:07:37,860 --> 00:07:41,430
sort of peering system and the

174
00:07:39,270 --> 00:07:44,250
traditional internet it's also a trusted

175
00:07:41,430 --> 00:07:45,690
endpoint for user traffic because we

176
00:07:44,250 --> 00:07:48,000
have a situation where the users router

177
00:07:45,690 --> 00:07:49,530
may decide hey you know that connection

178
00:07:48,000 --> 00:07:50,940
over there is a little bit cheaper and

179
00:07:49,530 --> 00:07:53,010
it's Layton sees a little lower let's

180
00:07:50,940 --> 00:07:55,320
just switch the traffic over there so

181
00:07:53,010 --> 00:07:59,880
obviously we need some encryption we

182
00:07:55,320 --> 00:08:02,360
also have a second problem in that we

183
00:07:59,880 --> 00:08:04,229
need to bill everyone along the route

184
00:08:02,360 --> 00:08:05,760
appropriately so we need to account for

185
00:08:04,229 --> 00:08:09,450
how much traffic they have transited

186
00:08:05,760 --> 00:08:12,900
because you are bill because payment is

187
00:08:09,450 --> 00:08:14,389
made per byte of traffic forwarded and

188
00:08:12,900 --> 00:08:16,760
I'll get into the details of that later

189
00:08:14,389 --> 00:08:19,470
so we have a second layer of encryption

190
00:08:16,760 --> 00:08:22,050
in between each device that allows us to

191
00:08:19,470 --> 00:08:23,639
securely authenticate each payment this

192
00:08:22,050 --> 00:08:26,490
way you cannot simply change the packet

193
00:08:23,639 --> 00:08:28,530
headers and have somebody else pay for

194
00:08:26,490 --> 00:08:32,959
your DDoS attack or whatever malicious

195
00:08:28,530 --> 00:08:36,000
behavior you're trying to perform now I

196
00:08:32,958 --> 00:08:39,718
know what you're probably thinking we

197
00:08:36,000 --> 00:08:42,360
are doing two layers of VPN encryption

198
00:08:39,719 --> 00:08:44,039
on an embedded device and the great

199
00:08:42,360 --> 00:08:45,870
thing about the open wrt routers is that

200
00:08:44,039 --> 00:08:47,370
they let us play man-in-the-middle for

201
00:08:45,870 --> 00:08:48,920
everybody's smart fridge so we don't

202
00:08:47,370 --> 00:08:51,360
have to write any special code for that

203
00:08:48,920 --> 00:08:55,890
the bad thing is that we have to run all

204
00:08:51,360 --> 00:08:57,630
of our code on to be generous cereal box

205
00:08:55,890 --> 00:09:00,360
processors

206
00:08:57,630 --> 00:09:02,670
but that's actually not nearly as bad of

207
00:09:00,360 --> 00:09:06,030
a situation as it was just a few years

208
00:09:02,670 --> 00:09:09,810
ago here I have some Colonel flame

209
00:09:06,030 --> 00:09:11,220
graphs of packets being forwarded and I

210
00:09:09,810 --> 00:09:14,479
think the software for this is by

211
00:09:11,220 --> 00:09:18,090
Brendan Gregg that I get the name right

212
00:09:14,480 --> 00:09:21,450
but anyways the key thing here is that

213
00:09:18,090 --> 00:09:23,970
since the advent of smartphones arm has

214
00:09:21,450 --> 00:09:27,150
become more and more popular as a router

215
00:09:23,970 --> 00:09:29,610
CPU choice previously it was MIPS which

216
00:09:27,150 --> 00:09:32,370
is exceptionally low cost exceptionally

217
00:09:29,610 --> 00:09:35,850
simple very good at what it does but

218
00:09:32,370 --> 00:09:36,330
rather slow you can see the cha-cha 20

219
00:09:35,850 --> 00:09:39,710
MIT's

220
00:09:36,330 --> 00:09:42,240
category eating up almost half of this

221
00:09:39,710 --> 00:09:45,150
packet forwarding process and then the

222
00:09:42,240 --> 00:09:47,430
tiny little candlesticks of the kernel

223
00:09:45,150 --> 00:09:48,750
doing its routing job on the other hand

224
00:09:47,430 --> 00:09:53,189
if we take a look down at the arm

225
00:09:48,750 --> 00:09:55,920
version you can see that we have a neon

226
00:09:53,190 --> 00:09:58,950
vectorized arm implementation of the

227
00:09:55,920 --> 00:10:00,839
encryption and the entire graph is

228
00:09:58,950 --> 00:10:04,190
dominated by the kernel doing memory

229
00:10:00,840 --> 00:10:06,410
lookups this means that we can on cheap

230
00:10:04,190 --> 00:10:08,790
otherwise low performance devices

231
00:10:06,410 --> 00:10:10,980
achieve let's see

232
00:10:08,790 --> 00:10:14,550
so for $90 you can get a hundred 50

233
00:10:10,980 --> 00:10:16,560
megabits for $160 you can get 500 if

234
00:10:14,550 --> 00:10:17,699
you're willing to go 300 you can get 10

235
00:10:16,560 --> 00:10:20,670
gig the question is whether or not

236
00:10:17,700 --> 00:10:22,560
you're willing to tolerate a fan so yes

237
00:10:20,670 --> 00:10:25,349
it is in fact possible to perform the

238
00:10:22,560 --> 00:10:28,260
encryption and authentication required

239
00:10:25,350 --> 00:10:31,560
for a system like this efficiently even

240
00:10:28,260 --> 00:10:33,660
with very cheap devices you don't really

241
00:10:31,560 --> 00:10:37,319
end up adding much if any cost over a

242
00:10:33,660 --> 00:10:39,630
normal in the user CPE to achieve better

243
00:10:37,320 --> 00:10:41,430
than median u.s. internet speeds or much

244
00:10:39,630 --> 00:10:44,910
better than median you attic us internet

245
00:10:41,430 --> 00:10:47,310
speeds depending on your target price so

246
00:10:44,910 --> 00:10:49,939
the second bit of this is network

247
00:10:47,310 --> 00:10:52,199
engineering so we're talking about

248
00:10:49,940 --> 00:10:54,660
creating a network where people are

249
00:10:52,200 --> 00:10:56,460
allowed to connect devices in arbitrary

250
00:10:54,660 --> 00:10:58,230
ways and have them pay each other for

251
00:10:56,460 --> 00:11:00,240
bandwidth that hypothetical situation I

252
00:10:58,230 --> 00:11:04,110
started out with where you simply

253
00:11:00,240 --> 00:11:05,140
connect a neighbor that's possible and

254
00:11:04,110 --> 00:11:07,120
in fact

255
00:11:05,140 --> 00:11:08,680
we also have to tolerate the situation

256
00:11:07,120 --> 00:11:12,040
of where people may connect many

257
00:11:08,680 --> 00:11:13,390
neighbors in otherwise in the sort of

258
00:11:12,040 --> 00:11:15,670
network formats that we wouldn't allow

259
00:11:13,390 --> 00:11:17,680
so as network engineers what we normally

260
00:11:15,670 --> 00:11:21,099
try and do is that we build the network

261
00:11:17,680 --> 00:11:24,010
we lay it out we architect it to not be

262
00:11:21,100 --> 00:11:25,420
overloaded from the beginning but we

263
00:11:24,010 --> 00:11:27,430
really don't have that luxury if we're

264
00:11:25,420 --> 00:11:29,319
going to go for this distributed system

265
00:11:27,430 --> 00:11:33,250
so how do we solve the traffic

266
00:11:29,320 --> 00:11:35,080
management problem and people well so

267
00:11:33,250 --> 00:11:37,300
people on our team actually make fun of

268
00:11:35,080 --> 00:11:40,210
me for being a codel evangelist but it

269
00:11:37,300 --> 00:11:43,209
really is that good what Codel or flow

270
00:11:40,210 --> 00:11:45,280
cue Codel specifically is is a traffic

271
00:11:43,210 --> 00:11:48,070
management system that hashes the

272
00:11:45,280 --> 00:11:54,040
headers of packet streams in order to on

273
00:11:48,070 --> 00:11:56,530
cue each packet into a cue for its

274
00:11:54,040 --> 00:11:58,540
specific connection so you have many

275
00:11:56,530 --> 00:12:00,819
different cues and they are DQ'd

276
00:11:58,540 --> 00:12:06,040
smallest cue first now this is a gross

277
00:12:00,820 --> 00:12:07,750
oversimplification and I might even get

278
00:12:06,040 --> 00:12:11,110
an email from David about summarizing

279
00:12:07,750 --> 00:12:13,450
his system wrong but the long story

280
00:12:11,110 --> 00:12:15,390
short is that this is an automated fare

281
00:12:13,450 --> 00:12:18,850
bandwidth allocation system that

282
00:12:15,390 --> 00:12:20,939
prioritizes low latency meaning that if

283
00:12:18,850 --> 00:12:24,040
you have a big downloader on the network

284
00:12:20,940 --> 00:12:25,480
the lower latency traffic goes first we

285
00:12:24,040 --> 00:12:27,939
higher latency traffic goes second

286
00:12:25,480 --> 00:12:29,470
seamlessly and you can achieve really

287
00:12:27,940 --> 00:12:31,089
great performance in very crowded

288
00:12:29,470 --> 00:12:32,560
networks this is a benchmark taken from

289
00:12:31,089 --> 00:12:35,890
buffer bloat net which you should all

290
00:12:32,560 --> 00:12:38,050
visit and it shows an exchange for a two

291
00:12:35,890 --> 00:12:40,870
megabit per second reduction in in

292
00:12:38,050 --> 00:12:43,870
average throughput you can receive a 17

293
00:12:40,870 --> 00:12:45,339
X reduction in average latency and these

294
00:12:43,870 --> 00:12:47,050
benchmarks are entirely borne out by

295
00:12:45,339 --> 00:12:50,560
what we actually see in the real world

296
00:12:47,050 --> 00:12:52,630
in fact I would say that if you are

297
00:12:50,560 --> 00:12:55,359
providing connections to end users and

298
00:12:52,630 --> 00:12:57,310
you are not performing some sort of

299
00:12:55,360 --> 00:12:59,710
Codel flow control you are doing them a

300
00:12:57,310 --> 00:13:01,780
disservice this solves the problem of

301
00:12:59,710 --> 00:13:04,320
limited connections getting bogged down

302
00:13:01,780 --> 00:13:06,430
latency increasing bad user experience

303
00:13:04,320 --> 00:13:09,760
it's not something that has to happen

304
00:13:06,430 --> 00:13:11,680
anymore it's just a TC module that's in

305
00:13:09,760 --> 00:13:14,950
the kernel it's open source feel free to

306
00:13:11,680 --> 00:13:16,780
use it it is really just that great and

307
00:13:14,950 --> 00:13:18,279
I strongly suggest you try it for

308
00:13:16,780 --> 00:13:21,290
yourself

309
00:13:18,279 --> 00:13:23,330
so for us particularly this is deeply

310
00:13:21,290 --> 00:13:26,599
important because we have to deal with

311
00:13:23,330 --> 00:13:28,610
arbitrary architectures so it handles

312
00:13:26,600 --> 00:13:30,200
the fair sharing problem we apply two

313
00:13:28,610 --> 00:13:32,390
layers of Codel you might have noticed

314
00:13:30,200 --> 00:13:34,040
in our earlier diagram and that

315
00:13:32,390 --> 00:13:38,510
essentially allows us to fairly share

316
00:13:34,040 --> 00:13:41,029
bandwidth between routers so different

317
00:13:38,510 --> 00:13:43,310
homes and then share a bandwidth on a

318
00:13:41,029 --> 00:13:45,439
larger network scale where many routers

319
00:13:43,310 --> 00:13:47,479
may be going through a single point in

320
00:13:45,440 --> 00:13:49,670
the network and in fact new connections

321
00:13:47,480 --> 00:13:55,300
may be load-balanced to or away from any

322
00:13:49,670 --> 00:13:57,829
giving given link at any given time so

323
00:13:55,300 --> 00:14:00,500
yeah now we're going to get into sort of

324
00:13:57,830 --> 00:14:04,580
the fun stuff the routing mainly how do

325
00:14:00,500 --> 00:14:05,420
we automate the BGP in this mini

326
00:14:04,580 --> 00:14:08,990
Internet

327
00:14:05,420 --> 00:14:11,120
sort of model so we use Babel which is

328
00:14:08,990 --> 00:14:14,230
an open source distance vector

329
00:14:11,120 --> 00:14:19,399
link-state detecting routing protocol

330
00:14:14,230 --> 00:14:22,220
it's pretty exhaustively defined as far

331
00:14:19,399 --> 00:14:25,160
as specification it's an IETF spec and

332
00:14:22,220 --> 00:14:26,450
it provides extensibility and also

333
00:14:25,160 --> 00:14:27,949
important for us is that it inserts

334
00:14:26,450 --> 00:14:30,190
routes directly as kernel routes since

335
00:14:27,950 --> 00:14:32,600
we get most of our performance from

336
00:14:30,190 --> 00:14:35,600
allowing the kernel to handle packet

337
00:14:32,600 --> 00:14:38,450
forwarding so what we have done is that

338
00:14:35,600 --> 00:14:40,459
we extended babel to have multiple

339
00:14:38,450 --> 00:14:42,640
distance vectors so this is the sell

340
00:14:40,459 --> 00:14:45,949
side of our autonomous bandwidth market

341
00:14:42,640 --> 00:14:47,899
and instead of trying to come up with

342
00:14:45,950 --> 00:14:49,579
some sort of negotiation process where

343
00:14:47,899 --> 00:14:52,459
the buyer has to negotiate with the

344
00:14:49,579 --> 00:14:55,399
seller the process of advertising a

345
00:14:52,459 --> 00:14:57,439
price and a sale is simply a distance

346
00:14:55,399 --> 00:15:01,550
vector operation so this is well

347
00:14:57,440 --> 00:15:05,390
understood well known and very doable

348
00:15:01,550 --> 00:15:08,270
what we have done is bring in multiple

349
00:15:05,390 --> 00:15:11,649
distance vectors so price is just hop

350
00:15:08,270 --> 00:15:16,899
count where you pick your own number and

351
00:15:11,649 --> 00:15:16,899
we also have two other vectors

352
00:15:17,260 --> 00:15:22,670
round-trip time and full path packet

353
00:15:20,360 --> 00:15:24,320
loss and these are important because you

354
00:15:22,670 --> 00:15:26,939
need to not only evaluate the price of a

355
00:15:24,320 --> 00:15:30,120
connection but also its quality

356
00:15:26,940 --> 00:15:31,920
and the methods you use to validate the

357
00:15:30,120 --> 00:15:35,730
quality of the connection need to be

358
00:15:31,920 --> 00:15:38,579
verifiable because as you probably know

359
00:15:35,730 --> 00:15:42,090
from news headlines BGP an existing

360
00:15:38,580 --> 00:15:45,240
distance vector routing protocols do not

361
00:15:42,090 --> 00:15:46,950
prevent metric spoofing so if we're

362
00:15:45,240 --> 00:15:49,680
going to create even a much smaller

363
00:15:46,950 --> 00:15:51,630
scale Network we need some way to

364
00:15:49,680 --> 00:15:53,489
prevent spoofing if we're going to

365
00:15:51,630 --> 00:15:57,630
confidently say that this can be

366
00:15:53,490 --> 00:16:00,180
automated so from earlier in our

367
00:15:57,630 --> 00:16:01,650
presentation we had a encrypted

368
00:16:00,180 --> 00:16:04,229
connection to an end point called the

369
00:16:01,650 --> 00:16:06,150
exit that peers out our traffic to the

370
00:16:04,230 --> 00:16:08,730
existing internet from the Alethea

371
00:16:06,150 --> 00:16:10,400
system and we have an encrypted

372
00:16:08,730 --> 00:16:13,230
connection that we can tunnel

373
00:16:10,400 --> 00:16:16,890
verification of these verifiable metrics

374
00:16:13,230 --> 00:16:18,750
over so we can determine the round-trip

375
00:16:16,890 --> 00:16:20,610
time and the packet loss to the exit

376
00:16:18,750 --> 00:16:23,310
which is advertising the route to us and

377
00:16:20,610 --> 00:16:26,820
compare it to the actual values that we

378
00:16:23,310 --> 00:16:29,250
have well to the advertised values and

379
00:16:26,820 --> 00:16:30,750
to the actual values depending on which

380
00:16:29,250 --> 00:16:33,530
direction you're doing that comparison

381
00:16:30,750 --> 00:16:37,110
in and then we can apply these changes

382
00:16:33,530 --> 00:16:41,550
to our routing table and fully

383
00:16:37,110 --> 00:16:44,460
understand well compensate for whatever

384
00:16:41,550 --> 00:16:48,540
fraud is going on or perhaps even just

385
00:16:44,460 --> 00:16:50,940
accidental and accuracy so here's an

386
00:16:48,540 --> 00:16:52,560
example of a network with the three

387
00:16:50,940 --> 00:16:56,190
different with the three different

388
00:16:52,560 --> 00:16:58,260
metrics in action one of these is best

389
00:16:56,190 --> 00:16:59,580
price one is best round-trip time and

390
00:16:58,260 --> 00:17:04,680
one is best packet loss but I've

391
00:16:59,580 --> 00:17:06,870
forgotten which so now for actual

392
00:17:04,680 --> 00:17:10,290
routing decisions weary aggregate these

393
00:17:06,869 --> 00:17:12,329
metrics as as the sum of the logs of the

394
00:17:10,290 --> 00:17:15,149
values multiplied by a scaling factor

395
00:17:12,329 --> 00:17:17,879
that allows the user to have some

396
00:17:15,150 --> 00:17:19,950
selection over whether or not they want

397
00:17:17,880 --> 00:17:23,580
to lower price connection or maybe a

398
00:17:19,950 --> 00:17:26,819
certain mix of price and latency but the

399
00:17:23,579 --> 00:17:29,970
exact outcome is not exactly fully user

400
00:17:26,819 --> 00:17:32,419
selectable because we are not using any

401
00:17:29,970 --> 00:17:34,540
of Babel source routing features so

402
00:17:32,420 --> 00:17:36,940
Babel so the

403
00:17:34,540 --> 00:17:39,280
colonel rules inserted only allow one

404
00:17:36,940 --> 00:17:41,470
route at a time meaning that your

405
00:17:39,280 --> 00:17:43,360
packets will follow each individual

406
00:17:41,470 --> 00:17:45,429
nodes preferences as they traverse the

407
00:17:43,360 --> 00:17:47,830
network so that's an easy opportunity

408
00:17:45,429 --> 00:17:49,570
for improvement in the future but not

409
00:17:47,830 --> 00:17:54,070
something we've really bothered with so

410
00:17:49,570 --> 00:17:58,030
far also the other thing to note here is

411
00:17:54,070 --> 00:18:00,129
that this is a linearly scaling memory

412
00:17:58,030 --> 00:18:02,830
usage routing protocol like all

413
00:18:00,130 --> 00:18:04,960
distance-vector protocols that I know of

414
00:18:02,830 --> 00:18:07,178
so this means that we have a limited

415
00:18:04,960 --> 00:18:08,679
number of routes we can have in the

416
00:18:07,179 --> 00:18:11,110
network and we have to deal with

417
00:18:08,679 --> 00:18:15,640
potential scale scaling problems that

418
00:18:11,110 --> 00:18:20,260
may reveal themselves as things get grow

419
00:18:15,640 --> 00:18:22,360
larger but that's really not the most

420
00:18:20,260 --> 00:18:25,990
difficult challenge as far as dealing

421
00:18:22,360 --> 00:18:28,389
with automated routing you can get up to

422
00:18:25,990 --> 00:18:30,340
4,000 nodes with the default settings

423
00:18:28,390 --> 00:18:33,549
and the overhead is very reasonable and

424
00:18:30,340 --> 00:18:34,540
at that point you can subnet users are

425
00:18:33,549 --> 00:18:35,799
not going to be happy with their

426
00:18:34,540 --> 00:18:38,230
internet experience if they're going

427
00:18:35,799 --> 00:18:40,090
over more than five or six hops to get

428
00:18:38,230 --> 00:18:42,850
to an exit anyways

429
00:18:40,090 --> 00:18:45,189
so you're not really going to encounter

430
00:18:42,850 --> 00:18:46,480
that and if you did you know there are

431
00:18:45,190 --> 00:18:49,150
definitely some optimization

432
00:18:46,480 --> 00:18:52,090
opportunities in Babel I think we can at

433
00:18:49,150 --> 00:18:53,790
least get at the 10k and maybe 100k

434
00:18:52,090 --> 00:18:58,918
without changing the hardware or

435
00:18:53,790 --> 00:19:01,178
meaningfully needing faster devices now

436
00:18:58,919 --> 00:19:03,240
the real challenge is that there's a

437
00:19:01,179 --> 00:19:06,250
fundamental limit to how accurate

438
00:19:03,240 --> 00:19:09,880
network - how accurate metric

439
00:19:06,250 --> 00:19:11,799
verification can be because Babel is

440
00:19:09,880 --> 00:19:15,220
advertising these routes out of band and

441
00:19:11,799 --> 00:19:17,230
user space so when you see when you

442
00:19:15,220 --> 00:19:20,799
receive a route from Babel and it says

443
00:19:17,230 --> 00:19:24,220
that this has a packet loss of 3% you're

444
00:19:20,799 --> 00:19:25,990
actually seeing a sample over the

445
00:19:24,220 --> 00:19:28,330
default update rate times the number of

446
00:19:25,990 --> 00:19:30,460
hops so like four seconds is the default

447
00:19:28,330 --> 00:19:33,250
update rate for hops would be it's a 16

448
00:19:30,460 --> 00:19:35,140
second sample so when you perform your

449
00:19:33,250 --> 00:19:37,990
verification with the exit it's going to

450
00:19:35,140 --> 00:19:39,070
be an almost instantaneous operation and

451
00:19:37,990 --> 00:19:40,809
you're going to have to reconcile

452
00:19:39,070 --> 00:19:43,540
essentially those two probability

453
00:19:40,809 --> 00:19:44,678
distributions and this is the one thing

454
00:19:43,540 --> 00:19:47,200
in this presentation

455
00:19:44,679 --> 00:19:51,940
do not actually have in production yet

456
00:19:47,200 --> 00:19:55,509
we have the full path route so we have

457
00:19:51,940 --> 00:19:57,490
price determination we have the full

458
00:19:55,509 --> 00:20:01,450
path route quality and round-trip time

459
00:19:57,490 --> 00:20:04,539
and latency all sort of working but we

460
00:20:01,450 --> 00:20:06,190
do not have the automated verification

461
00:20:04,539 --> 00:20:08,190
on and in a state where it will actually

462
00:20:06,190 --> 00:20:11,379
do something about potential fraud

463
00:20:08,190 --> 00:20:13,690
that's because we spend about roughly

464
00:20:11,379 --> 00:20:16,748
six months on each component starting up

465
00:20:13,690 --> 00:20:18,789
starting with the original babble and

466
00:20:16,749 --> 00:20:21,970
wire guard setup about six months to get

467
00:20:18,789 --> 00:20:24,149
the network component of that stable and

468
00:20:21,970 --> 00:20:27,129
then we've just sort of wrapped up

469
00:20:24,149 --> 00:20:29,799
billing and getting billing to really

470
00:20:27,129 --> 00:20:31,029
work and what I really mean by building

471
00:20:29,799 --> 00:20:32,168
our bandwidth payments because there's a

472
00:20:31,029 --> 00:20:35,409
lot of things in this system that you

473
00:20:32,169 --> 00:20:37,990
could qualify as billing how we do this

474
00:20:35,409 --> 00:20:40,749
is device to device cryptocurrency micro

475
00:20:37,990 --> 00:20:42,519
payments so what the user does is that

476
00:20:40,749 --> 00:20:44,529
they simply deposit money into their

477
00:20:42,519 --> 00:20:47,860
router and the router will pay everyone

478
00:20:44,529 --> 00:20:49,749
along the path and in fact it's very

479
00:20:47,860 --> 00:20:51,610
important we have access to an API

480
00:20:49,749 --> 00:20:53,289
that's a lot like cryptocurrency we

481
00:20:51,610 --> 00:20:55,869
don't really need a blockchain so much

482
00:20:53,289 --> 00:20:59,049
as we need digital money

483
00:20:55,869 --> 00:21:02,070
well digital cash where the device

484
00:20:59,049 --> 00:21:05,408
itself can hold funds and can pay

485
00:21:02,070 --> 00:21:06,700
adjacent devices in very small amounts

486
00:21:05,409 --> 00:21:13,419
so our average payment amount is ten

487
00:21:06,700 --> 00:21:16,629
cents because the key for the key

488
00:21:13,419 --> 00:21:19,299
insight that makes the buy side of our

489
00:21:16,629 --> 00:21:22,119
distributed bandwidth market possible is

490
00:21:19,299 --> 00:21:25,269
to really unwind that distance-vector

491
00:21:22,119 --> 00:21:27,999
price network so if I have a route and

492
00:21:25,269 --> 00:21:32,889
this route says that it costs 10

493
00:21:27,999 --> 00:21:35,769
whatever's I will pay a lump sum to the

494
00:21:32,889 --> 00:21:38,350
first node who will then pay the next

495
00:21:35,769 --> 00:21:41,440
node out of that amount and by keeping

496
00:21:38,350 --> 00:21:45,879
the payment amounts very small like I

497
00:21:41,440 --> 00:21:47,919
was saying 10 cents the most a hostile

498
00:21:45,879 --> 00:21:50,799
node could walk off with at any given

499
00:21:47,919 --> 00:21:53,259
time is a dime if it costs them five

500
00:21:50,799 --> 00:21:55,460
dollars to register their identity then

501
00:21:53,259 --> 00:21:58,370
it's never a good deal for them

502
00:21:55,460 --> 00:21:59,659
you steal your bandwidth payment because

503
00:21:58,370 --> 00:22:01,399
they would then be found to be

504
00:21:59,659 --> 00:22:08,779
fraudulent and that would end quite

505
00:22:01,399 --> 00:22:11,299
badly yeah so this brings us to the more

506
00:22:08,779 --> 00:22:14,210
complicated problem on the buy side of

507
00:22:11,299 --> 00:22:17,750
our system and that is that we need to

508
00:22:14,210 --> 00:22:19,520
be able to deal with faults particularly

509
00:22:17,750 --> 00:22:22,760
packet loss happens packets get lost

510
00:22:19,520 --> 00:22:25,639
packets good we tried all sorts of

511
00:22:22,760 --> 00:22:27,080
different problems occur and we really

512
00:22:25,640 --> 00:22:29,929
don't want to come up with a very chatty

513
00:22:27,080 --> 00:22:31,490
Byzantine fault-tolerant system for

514
00:22:29,929 --> 00:22:33,830
determining whether or not a payment was

515
00:22:31,490 --> 00:22:36,799
actually made how much was owed and

516
00:22:33,830 --> 00:22:39,260
things like that you know like I was

517
00:22:36,799 --> 00:22:42,049
talking about earlier we advertise

518
00:22:39,260 --> 00:22:43,908
prices using distance-vector and this

519
00:22:42,049 --> 00:22:45,830
makes the whole system very efficient

520
00:22:43,909 --> 00:22:47,120
because it's exactly the same sort of

521
00:22:45,830 --> 00:22:48,889
route advertisement you would see in a

522
00:22:47,120 --> 00:22:50,178
in a in a distance-vector protocol

523
00:22:48,890 --> 00:22:51,980
there's no additional back-and-forth

524
00:22:50,179 --> 00:22:55,220
overhead to deal with the pricing

525
00:22:51,980 --> 00:22:57,470
structure so how do we achieve payment

526
00:22:55,220 --> 00:23:01,630
with an equally small amount of

527
00:22:57,470 --> 00:23:06,620
chattiness and the answer to that is

528
00:23:01,630 --> 00:23:10,220
paper forward so in this model each node

529
00:23:06,620 --> 00:23:13,370
is paid per packet it forwards loss and

530
00:23:10,220 --> 00:23:17,299
other disruptions simply resolve to an

531
00:23:13,370 --> 00:23:19,580
overpayment so node a would look at its

532
00:23:17,299 --> 00:23:20,899
DX counter determine how much it was

533
00:23:19,580 --> 00:23:23,418
supposed to pay because it has the

534
00:23:20,899 --> 00:23:26,570
advertised price to multiply by the TX

535
00:23:23,419 --> 00:23:28,789
bytes and the and the receiving node

536
00:23:26,570 --> 00:23:31,070
would take a look at its RX counter and

537
00:23:28,789 --> 00:23:33,770
multiply that by its advertised price to

538
00:23:31,070 --> 00:23:36,770
come to a decision on what the other

539
00:23:33,770 --> 00:23:39,799
user owes them in the case that some

540
00:23:36,770 --> 00:23:42,668
packet loss has occurred the TX is

541
00:23:39,799 --> 00:23:45,860
slightly greater than the RX counter and

542
00:23:42,669 --> 00:23:48,620
the second node simply believes that it

543
00:23:45,860 --> 00:23:51,529
was slightly overpaid and this is great

544
00:23:48,620 --> 00:23:54,428
because it prevents us from needing very

545
00:23:51,529 --> 00:23:57,200
complex dispute resolution systems and

546
00:23:54,429 --> 00:24:00,200
resolves all communication about how

547
00:23:57,200 --> 00:24:01,789
these payments are performed to a very

548
00:24:00,200 --> 00:24:03,620
simple advertisement which is part of

549
00:24:01,789 --> 00:24:05,210
the distance vector system in the first

550
00:24:03,620 --> 00:24:08,330
place and the

551
00:24:05,210 --> 00:24:09,830
in a payment message you know you say

552
00:24:08,330 --> 00:24:11,899
hey I paid you and there's no

553
00:24:09,830 --> 00:24:14,299
negotiation over what the amount should

554
00:24:11,899 --> 00:24:15,649
be or how much was sent or really

555
00:24:14,299 --> 00:24:18,440
anything that you would have to get into

556
00:24:15,649 --> 00:24:22,189
an exceptionally complicated adversarial

557
00:24:18,440 --> 00:24:24,350
communication protocol to deal with so

558
00:24:22,190 --> 00:24:26,059
here is a payment map from our

559
00:24:24,350 --> 00:24:27,678
production network over one week it's

560
00:24:26,059 --> 00:24:31,820
interactive you can visit that link and

561
00:24:27,679 --> 00:24:34,309
play around with it and anybody who has

562
00:24:31,820 --> 00:24:36,710
been thinking about what I've been

563
00:24:34,309 --> 00:24:40,190
talking about has probably realized that

564
00:24:36,710 --> 00:24:42,020
on a real last mile Network almost all

565
00:24:40,190 --> 00:24:44,480
the traffic is download traffic so how

566
00:24:42,020 --> 00:24:47,240
does paper forward work and the answer

567
00:24:44,480 --> 00:24:49,970
is that exit nodes are actually the

568
00:24:47,240 --> 00:24:52,669
exception to the paper forward model we

569
00:24:49,970 --> 00:24:54,649
simplify the complicated general case

570
00:24:52,669 --> 00:24:56,870
and in which we may need to pay

571
00:24:54,649 --> 00:24:59,959
arbitrary nodes over arbitrary paths at

572
00:24:56,870 --> 00:25:02,600
an arbitrary period of time into paper

573
00:24:59,960 --> 00:25:06,200
for work which is very resilient to

574
00:25:02,600 --> 00:25:10,309
problems but the relationship between

575
00:25:06,200 --> 00:25:12,740
the exit node and a client which is just

576
00:25:10,309 --> 00:25:14,450
a two-party relationship involves the

577
00:25:12,740 --> 00:25:16,570
client paying the exit for download

578
00:25:14,450 --> 00:25:19,220
traffic which is slightly more trustful

579
00:25:16,570 --> 00:25:22,158
because you have to trust what the exit'

580
00:25:19,220 --> 00:25:26,330
says within reason on things like packet

581
00:25:22,159 --> 00:25:27,799
loss but it greatly simplifies the

582
00:25:26,330 --> 00:25:30,470
general case which is what we're really

583
00:25:27,799 --> 00:25:33,408
looking for here and that that's what

584
00:25:30,470 --> 00:25:35,480
allow that's what has allowed us to get

585
00:25:33,409 --> 00:25:36,820
a working system implemented in a

586
00:25:35,480 --> 00:25:40,070
reasonable amount of time

587
00:25:36,820 --> 00:25:43,549
so yeah payments are out there in real

588
00:25:40,070 --> 00:25:45,950
world they work they're pretty stable at

589
00:25:43,549 --> 00:25:47,418
this point although I'll talk about some

590
00:25:45,950 --> 00:25:52,940
of the problems we've had developing it

591
00:25:47,419 --> 00:25:54,380
later if I end up having time yeah so

592
00:25:52,940 --> 00:25:55,820
some of the fundamental challenges with

593
00:25:54,380 --> 00:25:58,399
billing is that we're committing a

594
00:25:55,820 --> 00:26:01,039
cardinal sin of being both a network

595
00:25:58,399 --> 00:26:02,330
protocol and a network application so

596
00:26:01,039 --> 00:26:04,250
most of the time you have a network

597
00:26:02,330 --> 00:26:06,770
protocol and it is completely separate

598
00:26:04,250 --> 00:26:08,059
from any network application because the

599
00:26:06,770 --> 00:26:10,190
job of the protocol is to stand the

600
00:26:08,059 --> 00:26:12,440
network up but in this case we have a

601
00:26:10,190 --> 00:26:14,029
network protocol that depends on the

602
00:26:12,440 --> 00:26:16,609
network working in order to

603
00:26:14,029 --> 00:26:19,039
the outside world to pay people for

604
00:26:16,609 --> 00:26:22,009
bandwidth so this is a bootstrapping

605
00:26:19,039 --> 00:26:25,489
problem that we had to come to a robust

606
00:26:22,009 --> 00:26:28,190
solution for and what we do right now is

607
00:26:25,489 --> 00:26:31,759
that we provide a little under a megabit

608
00:26:28,190 --> 00:26:34,099
of bandwidth that is free not

609
00:26:31,759 --> 00:26:36,679
necessarily free so much as never turned

610
00:26:34,099 --> 00:26:38,330
off so users who do not pay are never

611
00:26:36,679 --> 00:26:41,090
completely cut off they have enough

612
00:26:38,330 --> 00:26:42,978
bandwidth to reach out into the world

613
00:26:41,090 --> 00:26:45,789
and make a payment to get themselves

614
00:26:42,979 --> 00:26:45,789
back online

615
00:26:46,269 --> 00:26:52,129
most of our bugs or errors involving

616
00:26:50,029 --> 00:26:54,229
payment after a painful several month

617
00:26:52,129 --> 00:26:55,849
period where we had to figure out all of

618
00:26:54,229 --> 00:26:57,529
the different error cases you can have

619
00:26:55,849 --> 00:26:59,928
when you're both standing up the network

620
00:26:57,529 --> 00:27:03,849
and trying to send a packet out to the

621
00:26:59,929 --> 00:27:07,339
Internet are related to the

622
00:27:03,849 --> 00:27:09,769
unreliability of the blockchain as far

623
00:27:07,339 --> 00:27:11,749
as getting payments in there's a fairly

624
00:27:09,769 --> 00:27:14,330
complicated process on that end as well

625
00:27:11,749 --> 00:27:16,580
so we've had to integrate some more

626
00:27:14,330 --> 00:27:20,029
logic into our system to compensate for

627
00:27:16,580 --> 00:27:22,639
issues there finally you can have

628
00:27:20,029 --> 00:27:24,979
devices that just get a bit flipped by a

629
00:27:22,639 --> 00:27:29,478
cosmic ray it does happen they don't

630
00:27:24,979 --> 00:27:31,460
have ECC they do need to be rebooted you

631
00:27:29,479 --> 00:27:34,609
know it's hard to isolate these sorts of

632
00:27:31,460 --> 00:27:36,499
problems from just random errors in your

633
00:27:34,609 --> 00:27:38,989
application but I've had a few

634
00:27:36,499 --> 00:27:40,969
situations where the outcome was just so

635
00:27:38,989 --> 00:27:44,179
ridiculous that I had to believe that

636
00:27:40,969 --> 00:27:45,769
the device was corrupted in some way but

637
00:27:44,179 --> 00:27:49,450
in general we can handle those pretty

638
00:27:45,769 --> 00:27:52,999
well now after I've seen a few of them

639
00:27:49,450 --> 00:27:54,710
so yeah it looks like I've got about two

640
00:27:52,999 --> 00:27:56,979
minutes to tell some stories about

641
00:27:54,710 --> 00:28:00,109
building a system like this so we have a

642
00:27:56,979 --> 00:28:03,529
test network of about 50 customers this

643
00:28:00,109 --> 00:28:07,580
map is sort of all in classic and I

644
00:28:03,529 --> 00:28:08,809
Oregon and on average the downtime is

645
00:28:07,580 --> 00:28:11,809
about 15 minutes a week including

646
00:28:08,809 --> 00:28:15,589
patching cycles which is not all that

647
00:28:11,809 --> 00:28:18,639
great but it is mostly skewed by finding

648
00:28:15,589 --> 00:28:20,980
bugs which is exactly what you want in

649
00:28:18,640 --> 00:28:23,470
testing network to be big enough to find

650
00:28:20,980 --> 00:28:24,820
bugs but small enough that you're not

651
00:28:23,470 --> 00:28:28,510
going to inconvenience too many people

652
00:28:24,820 --> 00:28:30,428
while you do now that is average across

653
00:28:28,510 --> 00:28:32,770
the whole network so for example if we

654
00:28:30,429 --> 00:28:34,750
have one user down for an hour that

655
00:28:32,770 --> 00:28:39,190
would skew the entire network average

656
00:28:34,750 --> 00:28:41,080
for a while so we have included

657
00:28:39,190 --> 00:28:43,299
automated incident recovery which I

658
00:28:41,080 --> 00:28:44,919
talked about when we first slide but I

659
00:28:43,299 --> 00:28:46,389
didn't end up going into detail there

660
00:28:44,920 --> 00:28:48,850
because I've essentially automated

661
00:28:46,390 --> 00:28:51,010
hitting it until it works again and I've

662
00:28:48,850 --> 00:28:54,909
found that works out very well

663
00:28:51,010 --> 00:28:57,490
when necessary the speed and latency at

664
00:28:54,910 --> 00:29:00,460
two or even three hops into the system

665
00:28:57,490 --> 00:29:02,290
is still 100 megabits per second about

666
00:29:00,460 --> 00:29:04,299
10 milliseconds to get all the way out

667
00:29:02,290 --> 00:29:06,460
to the data center I measure this by

668
00:29:04,299 --> 00:29:09,400
opinion CloudFlare because they have a

669
00:29:06,460 --> 00:29:13,030
server in PDX where we locate our exit

670
00:29:09,400 --> 00:29:15,070
and peer out to the outside world we do

671
00:29:13,030 --> 00:29:18,129
perform automated patching on these

672
00:29:15,070 --> 00:29:21,100
devices so the general advice is that

673
00:29:18,130 --> 00:29:24,309
you should not update opened every RT

674
00:29:21,100 --> 00:29:26,559
devices on a script but we have and

675
00:29:24,309 --> 00:29:29,620
we've done so for the most part very

676
00:29:26,559 --> 00:29:32,678
successfully we have one failure where

677
00:29:29,620 --> 00:29:34,719
we where the update disabled the update

678
00:29:32,679 --> 00:29:36,370
system but the network was still working

679
00:29:34,720 --> 00:29:38,799
so we were able to sort of sneak around

680
00:29:36,370 --> 00:29:42,219
and get that all fixed without anything

681
00:29:38,799 --> 00:29:44,650
to disastrous happening generally users

682
00:29:42,220 --> 00:29:46,600
are pretty satisfied this is a rural

683
00:29:44,650 --> 00:29:49,630
area most of these users are coming off

684
00:29:46,600 --> 00:29:51,790
of either two generations ago of fixed

685
00:29:49,630 --> 00:29:54,250
wireless where they have less than five

686
00:29:51,790 --> 00:29:57,399
megabits or DSL or they also have less

687
00:29:54,250 --> 00:30:00,040
than five megabits or cable which is so

688
00:29:57,400 --> 00:30:01,480
oversold that they can't maintain a good

689
00:30:00,040 --> 00:30:06,159
video call because packets get dropped

690
00:30:01,480 --> 00:30:07,720
all the time so it's really not

691
00:30:06,160 --> 00:30:09,280
exceptionally hard to do better than

692
00:30:07,720 --> 00:30:11,740
what's already provided in rural America

693
00:30:09,280 --> 00:30:15,580
and in fact many urban areas as well

694
00:30:11,740 --> 00:30:17,590
still have only DSL as an option simply

695
00:30:15,580 --> 00:30:21,399
because nobody can coordinate installing

696
00:30:17,590 --> 00:30:26,168
new infrastructure into the area pay per

697
00:30:21,400 --> 00:30:27,790
byte billing is definitely sort of it's

698
00:30:26,169 --> 00:30:29,320
both an advantage and a problem there

699
00:30:27,790 --> 00:30:29,970
are lots of people who like it because

700
00:30:29,320 --> 00:30:32,450
it is

701
00:30:29,970 --> 00:30:35,180
better for the consumer in situations

702
00:30:32,450 --> 00:30:39,570
well for most consumers actually because

703
00:30:35,180 --> 00:30:42,630
almost all been almost all ISPs today

704
00:30:39,570 --> 00:30:46,020
sell you a connection with a cap and

705
00:30:42,630 --> 00:30:48,690
when you do the math that's really just

706
00:30:46,020 --> 00:30:52,350
selling bandwidth for seven or so since

707
00:30:48,690 --> 00:30:54,660
the gigabyte with no option for a refund

708
00:30:52,350 --> 00:30:57,899
and no option to pay less if you use

709
00:30:54,660 --> 00:31:02,970
less for most people Alethea is a better

710
00:30:57,900 --> 00:31:05,340
deal because it is being done well

711
00:31:02,970 --> 00:31:06,960
because they receive the discount if

712
00:31:05,340 --> 00:31:09,480
they end up using the last source or out

713
00:31:06,960 --> 00:31:12,530
of the house or whatever it does have

714
00:31:09,480 --> 00:31:15,540
downsides and mostly in that users are

715
00:31:12,530 --> 00:31:18,540
sort of uncertain about the nature of

716
00:31:15,540 --> 00:31:20,700
the new billing method and they want

717
00:31:18,540 --> 00:31:22,740
some level of understanding of what's

718
00:31:20,700 --> 00:31:25,110
going on we've added some new features

719
00:31:22,740 --> 00:31:27,030
recently that show the user their

720
00:31:25,110 --> 00:31:28,199
average usage the expected time left on

721
00:31:27,030 --> 00:31:29,940
the money they have deposited in the

722
00:31:28,200 --> 00:31:34,200
router and that's gotten really positive

723
00:31:29,940 --> 00:31:37,230
responses yeah I think I'm pretty much

724
00:31:34,200 --> 00:31:41,480
out of time here so I'll go ahead and

725
00:31:37,230 --> 00:31:43,230
take questions how far ahead are we i

726
00:31:41,480 --> 00:31:45,360
have five minutes left

727
00:31:43,230 --> 00:31:46,500
oh well you know I tested this and I

728
00:31:45,360 --> 00:31:47,969
always came out to exactly thirty

729
00:31:46,500 --> 00:31:50,730
minutes but I guess I got a couple of

730
00:31:47,970 --> 00:31:52,140
minutes on the start and I sabotage my

731
00:31:50,730 --> 00:31:55,140
own strategy of going so long that

732
00:31:52,140 --> 00:31:57,480
nobody could ask me questions hello Tim

733
00:31:55,140 --> 00:32:00,030
neva check all points broadband are you

734
00:31:57,480 --> 00:32:01,890
mostly using five gigahertz or are you

735
00:32:00,030 --> 00:32:04,470
investigating using sixty gear it's for

736
00:32:01,890 --> 00:32:05,550
your microwave okay yeah so I do forget

737
00:32:04,470 --> 00:32:08,340
to mention this

738
00:32:05,550 --> 00:32:10,139
we're completely medium agnostic but we

739
00:32:08,340 --> 00:32:12,270
mostly use five gigahertz in our test

740
00:32:10,140 --> 00:32:14,580
Network because it's cheap and fairly

741
00:32:12,270 --> 00:32:15,780
performant is he you can probably tell

742
00:32:14,580 --> 00:32:18,480
us five gigahertz by the performance

743
00:32:15,780 --> 00:32:21,480
numbers we are standing up a 60

744
00:32:18,480 --> 00:32:24,420
gigahertz link to one of our relays

745
00:32:21,480 --> 00:32:25,800
which is a customer that serves other

746
00:32:24,420 --> 00:32:27,450
customers because they provide a tower

747
00:32:25,800 --> 00:32:31,770
they receive a cut of traffic that

748
00:32:27,450 --> 00:32:33,300
transits their node and the idea there

749
00:32:31,770 --> 00:32:35,010
is that we're going to actually plug 2

750
00:32:33,300 --> 00:32:39,570
into nose in parallel into the system

751
00:32:35,010 --> 00:32:41,460
and do a sort of 60 gigahertz to 5

752
00:32:39,570 --> 00:32:43,169
gigahertz failover but using Babel and

753
00:32:41,460 --> 00:32:43,590
it's linked state detection rather than

754
00:32:43,170 --> 00:32:45,150
some of the

755
00:32:43,590 --> 00:32:46,889
integrated systems that ubiquity and

756
00:32:45,150 --> 00:32:49,890
such you're talking about offering in a

757
00:32:46,890 --> 00:32:53,429
year or so I think in CB RS is that on

758
00:32:49,890 --> 00:32:56,250
the way as well see VRS I'm sorry I'm

759
00:32:53,429 --> 00:33:00,299
not from at six five two two store two

760
00:32:56,250 --> 00:33:03,750
six two two or sorry 3 6 2 3 8 gigahertz

761
00:33:00,299 --> 00:33:04,950
the new open spectrum there ah yeah once

762
00:33:03,750 --> 00:33:07,529
we can start to get our hands on that

763
00:33:04,950 --> 00:33:10,020
sure but right now we don't look too far

764
00:33:07,529 --> 00:33:12,240
forward as far as what the connection

765
00:33:10,020 --> 00:33:14,250
medium is because for the most part

766
00:33:12,240 --> 00:33:16,890
what's available performs really well

767
00:33:14,250 --> 00:33:18,690
you know mikrotik has those wireless

768
00:33:16,890 --> 00:33:22,429
wires which for about 300 dollars will

769
00:33:18,690 --> 00:33:25,380
do gigabit over a little over a mile so

770
00:33:22,429 --> 00:33:30,570
we can't really complain about the cost

771
00:33:25,380 --> 00:33:33,149
of hardware thanks unless the Daigle

772
00:33:30,570 --> 00:33:35,220
thinking cat enterprises think you can

773
00:33:33,149 --> 00:33:36,750
enterprises world HQ might in fact be

774
00:33:35,220 --> 00:33:38,340
located in an environment that doesn't

775
00:33:36,750 --> 00:33:40,039
look very dissimilar to your pictures

776
00:33:38,340 --> 00:33:44,189
with the possible addition of mountains

777
00:33:40,039 --> 00:33:45,720
I wanted to know how many deployments do

778
00:33:44,190 --> 00:33:48,510
you have you just have like the one test

779
00:33:45,720 --> 00:33:51,000
one or how many different deployments do

780
00:33:48,510 --> 00:33:52,770
you have yeah so like I said we just

781
00:33:51,000 --> 00:33:54,960
recently got billing into a state where

782
00:33:52,770 --> 00:33:58,679
we felt comfortable with it

783
00:33:54,960 --> 00:34:00,210
so right now we have to sort of in

784
00:33:58,679 --> 00:34:02,460
production deployments with billing

785
00:34:00,210 --> 00:34:05,309
running and that sort of stuff one in

786
00:34:02,460 --> 00:34:09,240
Class C and I Oregon one in Medellin

787
00:34:05,309 --> 00:34:12,029
Colombia and they're both running and

788
00:34:09,239 --> 00:34:13,229
working ok and we're now we're into sort

789
00:34:12,030 --> 00:34:14,790
of the sales side where we're trying to

790
00:34:13,230 --> 00:34:16,849
start up a few more deployments and

791
00:34:14,790 --> 00:34:19,830
they're in the process of signing up

792
00:34:16,849 --> 00:34:22,619
users in fact if you is it Alethea mesh

793
00:34:19,830 --> 00:34:24,359
comm you will find our sign up process

794
00:34:22,619 --> 00:34:28,200
going on there as we try and stand up

795
00:34:24,359 --> 00:34:29,730
another I've lost count deployments but

796
00:34:28,199 --> 00:34:32,009
I think it's really like four or five

797
00:34:29,730 --> 00:34:33,869
we're focused on right now right so your

798
00:34:32,010 --> 00:34:35,639
your model is basically you will take

799
00:34:33,869 --> 00:34:37,349
these take on these these are my keys my

800
00:34:35,639 --> 00:34:39,480
keys spaces and and work for the

801
00:34:37,349 --> 00:34:41,520
environment to build out the mesh my

802
00:34:39,480 --> 00:34:42,839
question really is you you mentioned

803
00:34:41,520 --> 00:34:44,909
that your hardware agnostic which is

804
00:34:42,839 --> 00:34:48,418
good I mentioned that there are hills

805
00:34:44,909 --> 00:34:51,029
she's not so good um we kind of run into

806
00:34:48,418 --> 00:34:52,978
the line of sight is challenged

807
00:34:51,029 --> 00:34:55,619
yes this is actually one of our big

808
00:34:52,978 --> 00:34:56,668
selling points and that's what I was

809
00:34:55,619 --> 00:34:59,609
talking about when I was talking about

810
00:34:56,668 --> 00:35:02,400
cooperation so if you take a look at or

811
00:34:59,609 --> 00:35:04,890
a network diagram here this isn't like a

812
00:35:02,400 --> 00:35:08,819
topple so this isn't a map that shows

813
00:35:04,890 --> 00:35:11,160
elevation but the position downtown

814
00:35:08,819 --> 00:35:12,660
where we have our fiber drop to in as

815
00:35:11,160 --> 00:35:15,749
much as anywhere as downtown and Klotz

816
00:35:12,660 --> 00:35:17,069
can I is not the sort of position you

817
00:35:15,749 --> 00:35:18,538
could build the traditional wisp out of

818
00:35:17,069 --> 00:35:20,279
it doesn't have good it doesn't have

819
00:35:18,539 --> 00:35:21,930
great lines of sight you couldn't see

820
00:35:20,279 --> 00:35:23,609
enough you couldn't see enough customers

821
00:35:21,930 --> 00:35:25,919
from there but you'll notice that we

822
00:35:23,609 --> 00:35:29,130
have relays this map is old there are

823
00:35:25,920 --> 00:35:31,200
more now but these are people we bounce

824
00:35:29,130 --> 00:35:35,069
the signal to and then bounce signals

825
00:35:31,200 --> 00:35:38,578
from two other users and this is this is

826
00:35:35,069 --> 00:35:42,359
sort of the reason that we believe Alfia

827
00:35:38,579 --> 00:35:44,219
has advantages because these users we

828
00:35:42,359 --> 00:35:45,420
didn't like have two access easements or

829
00:35:44,219 --> 00:35:47,940
anything we came to them or like hey

830
00:35:45,420 --> 00:35:50,430
we're gonna help you install a pole onto

831
00:35:47,940 --> 00:35:51,690
your property and it's going to provide

832
00:35:50,430 --> 00:35:53,190
service to other people you're going to

833
00:35:51,690 --> 00:35:55,680
get paid for it now their internet bill

834
00:35:53,190 --> 00:35:56,940
is zero or negative in the case of some

835
00:35:55,680 --> 00:35:59,038
of our relays and they're extremely

836
00:35:56,940 --> 00:36:00,599
happy with the whole situation great so

837
00:35:59,039 --> 00:36:02,430
if I can catch you in the break we can

838
00:36:00,599 --> 00:36:04,979
then talk about trees and other little

839
00:36:02,430 --> 00:36:06,779
impediments yes I'm afraid they're

840
00:36:04,979 --> 00:36:09,089
coming up here with the hook so I'm

841
00:36:06,779 --> 00:36:11,339
going to go ahead and let the next

842
00:36:09,089 --> 00:36:13,000
presenter go you can catch me outside

843
00:36:11,339 --> 00:36:13,820
for more questions

844
00:36:13,000 --> 00:36:17,209
you

845
00:36:13,820 --> 00:36:17,209
[Applause]

846
00:36:22,220 --> 00:36:24,279
you

