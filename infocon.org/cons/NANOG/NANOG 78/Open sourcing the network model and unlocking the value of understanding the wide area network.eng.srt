1
00:00:02,389 --> 00:00:06,898
good evening everyone thank you once

2
00:00:05,580 --> 00:00:09,030
again for attending one of the last

3
00:00:06,899 --> 00:00:11,610
sessions of Nanog on a Wednesday

4
00:00:09,030 --> 00:00:13,230
I very much appreciate that my name is

5
00:00:11,610 --> 00:00:18,090
Tim Faiola and I'm gonna talk to you

6
00:00:13,230 --> 00:00:21,509
today about network modeling open

7
00:00:18,090 --> 00:00:24,029
sourcing the network model and the value

8
00:00:21,510 --> 00:00:28,199
that provides when you model your wide

9
00:00:24,029 --> 00:00:29,880
area networks I am here as an

10
00:00:28,199 --> 00:00:34,739
independent person I am in an automation

11
00:00:29,880 --> 00:00:37,260
and network modeling enthusiast so

12
00:00:34,739 --> 00:00:39,059
here's the agenda we're gonna first

13
00:00:37,260 --> 00:00:41,849
define the problem statement we're gonna

14
00:00:39,059 --> 00:00:44,879
take a look at wide network modeling is

15
00:00:41,850 --> 00:00:48,000
strategic we're gonna define what a

16
00:00:44,879 --> 00:00:50,329
network model is what it does the need

17
00:00:48,000 --> 00:00:53,100
for open source tools in this space

18
00:00:50,329 --> 00:00:54,960
we're going to talk about PI n TM and

19
00:00:53,100 --> 00:00:55,829
why it's helpful and a little bit of a

20
00:00:54,960 --> 00:00:58,199
spoiler alert

21
00:00:55,829 --> 00:01:01,800
PI n TM is a network modeling engine

22
00:00:58,199 --> 00:01:03,629
okay we're gonna talk about the PI n TM

23
00:01:01,800 --> 00:01:07,408
features and roadmap that it currently

24
00:01:03,629 --> 00:01:11,369
supports and then we're we're looking to

25
00:01:07,409 --> 00:01:13,439
take it we're going to discuss if if and

26
00:01:11,369 --> 00:01:16,799
how PI n TM can help you right now as it

27
00:01:13,439 --> 00:01:21,710
is next steps forget to note PI n TM and

28
00:01:16,799 --> 00:01:21,710
then we're gonna talk about a demo

29
00:01:22,610 --> 00:01:28,829
understanding the WAM is hard it's very

30
00:01:25,830 --> 00:01:30,750
difficult in a big machine network it

31
00:01:28,829 --> 00:01:33,479
becomes really difficult to understand

32
00:01:30,750 --> 00:01:36,360
how your networks going to react to a

33
00:01:33,479 --> 00:01:37,710
failure are you gonna saturate links do

34
00:01:36,360 --> 00:01:40,490
you have enough capacity somewhere do

35
00:01:37,710 --> 00:01:42,899
you have too much capacity somewhere

36
00:01:40,490 --> 00:01:47,399
it's hard to understand in a big mesh

37
00:01:42,899 --> 00:01:49,170
you an how your how a failure might

38
00:01:47,399 --> 00:01:51,479
impact utilization in other parts of the

39
00:01:49,170 --> 00:01:54,240
network so because it's such a difficult

40
00:01:51,479 --> 00:01:57,240
problem there's often use of like

41
00:01:54,240 --> 00:02:00,949
educated guessing and general rules of

42
00:01:57,240 --> 00:02:06,869
thumb for learning for augmenting and

43
00:02:00,950 --> 00:02:09,750
growing the network okay so you take an

44
00:02:06,869 --> 00:02:12,360
icp-ms GI GP win and then you throw Auto

45
00:02:09,750 --> 00:02:14,370
bandwidth LSPs on top of it it becomes

46
00:02:12,360 --> 00:02:16,560
even more difficult

47
00:02:14,370 --> 00:02:18,180
the traffic any given link would handle

48
00:02:16,560 --> 00:02:21,750
can change throughout the day that week

49
00:02:18,180 --> 00:02:23,580
the month the year bypass LSPs can have

50
00:02:21,750 --> 00:02:26,580
very non-intuitive impacts when

51
00:02:23,580 --> 00:02:30,120
triggered Auto bandwidth LSP behavior is

52
00:02:26,580 --> 00:02:31,860
often non-deterministic and one of my

53
00:02:30,120 --> 00:02:33,540
favorites is you add capacity in one

54
00:02:31,860 --> 00:02:35,400
part of the network and you change the

55
00:02:33,540 --> 00:02:37,410
behaviors of an LSP in a different part

56
00:02:35,400 --> 00:02:39,750
of the network that's always one that is

57
00:02:37,410 --> 00:02:44,250
difficult to understand if you're seeing

58
00:02:39,750 --> 00:02:46,590
it in your network itself so an

59
00:02:44,250 --> 00:02:48,840
aggravating factor here is lanced

60
00:02:46,590 --> 00:02:50,310
ricketts are expensive they're not

61
00:02:48,840 --> 00:02:52,500
always available for the routes you want

62
00:02:50,310 --> 00:02:54,780
and when you can get one at the right

63
00:02:52,500 --> 00:02:58,440
price it takes a long time sometimes

64
00:02:54,780 --> 00:03:01,860
months to turn up that new capacity so

65
00:02:58,440 --> 00:03:05,030
you have to be ahead of the game here so

66
00:03:01,860 --> 00:03:05,030
let's talk about modeling

67
00:03:10,170 --> 00:03:15,359
network modeling will give you insight

68
00:03:12,629 --> 00:03:18,120
into your wins behavior modeling gives

69
00:03:15,360 --> 00:03:19,920
you a very unique data based

70
00:03:18,120 --> 00:03:22,349
understanding of how your networks going

71
00:03:19,920 --> 00:03:25,409
to behave during failover

72
00:03:22,349 --> 00:03:27,929
during changes in your traffic matrix

73
00:03:25,409 --> 00:03:31,739
and other changes into your topology

74
00:03:27,930 --> 00:03:35,579
such as adding or changing your RSVP LSP

75
00:03:31,739 --> 00:03:38,849
mesh and speaking of that modeling is a

76
00:03:35,579 --> 00:03:40,530
great way to understand how to read your

77
00:03:38,849 --> 00:03:46,619
LSP mesh and what it might be telling

78
00:03:40,530 --> 00:03:48,959
you about needing to add capacity so

79
00:03:46,620 --> 00:03:53,280
this insight from LAN modeling is

80
00:03:48,959 --> 00:03:55,530
strategic this is why it lets you it

81
00:03:53,280 --> 00:03:58,980
helps prevent you from over building LAN

82
00:03:55,530 --> 00:04:00,629
links which strands your capital or not

83
00:03:58,980 --> 00:04:02,819
building enough capacity in your LAN

84
00:04:00,629 --> 00:04:08,010
links which increases your network risk

85
00:04:02,819 --> 00:04:10,500
this is strategic value so these are

86
00:04:08,010 --> 00:04:13,798
some rules that a that a network model

87
00:04:10,500 --> 00:04:16,589
will help with cap planner and network

88
00:04:13,799 --> 00:04:19,349
engineer anyone planning or conducting a

89
00:04:16,589 --> 00:04:21,089
maintenance or anyone with a general

90
00:04:19,349 --> 00:04:24,030
interest in network performance all

91
00:04:21,089 --> 00:04:29,940
these rules can benefit from using a

92
00:04:24,030 --> 00:04:33,979
network model of the WAM so let's look

93
00:04:29,940 --> 00:04:38,039
at a network model two main input

94
00:04:33,979 --> 00:04:42,120
components in a network model there's

95
00:04:38,039 --> 00:04:44,400
the traffic matrix and the traffic

96
00:04:42,120 --> 00:04:45,060
matrix much of us many of us have seen

97
00:04:44,400 --> 00:04:46,859
them before

98
00:04:45,060 --> 00:04:48,510
it's a way of describing how much

99
00:04:46,860 --> 00:04:50,250
traffic is going from one node in your

100
00:04:48,510 --> 00:04:55,800
network to a separate node in your

101
00:04:50,250 --> 00:04:57,180
network and how much traffic that is and

102
00:04:55,800 --> 00:04:59,520
I'm going to show an example on the next

103
00:04:57,180 --> 00:05:01,560
slide so I won't go too much into it the

104
00:04:59,520 --> 00:05:03,330
other piece is the topology your

105
00:05:01,560 --> 00:05:05,840
topology includes your layer 3 nodes

106
00:05:03,330 --> 00:05:09,210
your circuits between your nodes

107
00:05:05,840 --> 00:05:12,479
your shared risk linked groups your RSVP

108
00:05:09,210 --> 00:05:14,039
LSPs and you can throw a lot more into

109
00:05:12,479 --> 00:05:15,930
the model as well depending on what your

110
00:05:14,039 --> 00:05:18,000
use cases are but those these are some

111
00:05:15,930 --> 00:05:19,409
very common ones another common one

112
00:05:18,000 --> 00:05:21,500
that's not on here is the layer 1

113
00:05:19,409 --> 00:05:26,270
underlay

114
00:05:21,500 --> 00:05:28,250
okay the traffic matrix it's going to

115
00:05:26,270 --> 00:05:29,810
vary over time there's not one traffic

116
00:05:28,250 --> 00:05:32,210
matrix for your network there are many

117
00:05:29,810 --> 00:05:35,540
traffic matrices over time for your

118
00:05:32,210 --> 00:05:37,849
network this is one of the toughest

119
00:05:35,540 --> 00:05:41,780
parts of modeling is getting a good

120
00:05:37,850 --> 00:05:43,430
input traffic matrix it's tough it can

121
00:05:41,780 --> 00:05:46,940
be tough you have to have the right

122
00:05:43,430 --> 00:05:49,700
resources to do it but you need to do it

123
00:05:46,940 --> 00:05:53,210
because understanding your your matrices

124
00:05:49,700 --> 00:05:55,400
for your network you need that to do

125
00:05:53,210 --> 00:05:57,859
truly effective engineering and planning

126
00:05:55,400 --> 00:06:01,280
of your Wham because if you can't even

127
00:05:57,860 --> 00:06:02,919
define the problem it's hard to counter

128
00:06:01,280 --> 00:06:07,309
the problem and solve the problem

129
00:06:02,919 --> 00:06:13,250
without that knowledge so in this sample

130
00:06:07,310 --> 00:06:15,919
traffic matrix here laser just this is a

131
00:06:13,250 --> 00:06:19,280
very simple traffic matrix but you're

132
00:06:15,919 --> 00:06:21,289
sourced from node a your traffic

133
00:06:19,280 --> 00:06:24,140
destined for node C oh my gosh look at

134
00:06:21,290 --> 00:06:25,970
that it's 120 megabits per second that

135
00:06:24,140 --> 00:06:30,500
is the magnitude of the traffic demand

136
00:06:25,970 --> 00:06:32,990
from node a to node C 120 megabits per

137
00:06:30,500 --> 00:06:36,530
second of traffic so it's a pretty

138
00:06:32,990 --> 00:06:40,190
simple concept and one common question I

139
00:06:36,530 --> 00:06:42,739
get in when modeling is hey what if I

140
00:06:40,190 --> 00:06:47,150
make a BGP change or a policy change can

141
00:06:42,740 --> 00:06:52,910
you model that no the traffic matrix is

142
00:06:47,150 --> 00:06:55,190
a product of all those policies and to

143
00:06:52,910 --> 00:06:57,229
track it to let me back up it's a

144
00:06:55,190 --> 00:06:59,000
product of all your BGP policies and any

145
00:06:57,229 --> 00:07:00,950
other policies that will affect traffic

146
00:06:59,000 --> 00:07:03,770
but in the end the traffic matrix is

147
00:07:00,950 --> 00:07:07,150
just traffic going from one part of your

148
00:07:03,770 --> 00:07:10,099
internal domain to another part via IGP

149
00:07:07,150 --> 00:07:12,679
that's what the traffic matrix is so all

150
00:07:10,100 --> 00:07:14,690
those things are essential to forming

151
00:07:12,680 --> 00:07:17,410
your traffic matrix but in the end the

152
00:07:14,690 --> 00:07:19,820
traffic matrix is something like this

153
00:07:17,410 --> 00:07:22,090
from here to here I have this much

154
00:07:19,820 --> 00:07:22,090
traffic

155
00:07:24,730 --> 00:07:30,340
so network modeling provides simulation

156
00:07:27,950 --> 00:07:32,900
capability and what is the simulation

157
00:07:30,340 --> 00:07:35,780
apply your traffic matrix to your

158
00:07:32,900 --> 00:07:37,820
topology the way the traffic routes is

159
00:07:35,780 --> 00:07:39,710
widely understood so you just simply

160
00:07:37,820 --> 00:07:44,360
route the traffic demands the same way

161
00:07:39,710 --> 00:07:48,430
your network would this gives you data

162
00:07:44,360 --> 00:07:51,140
on the network state for the simulation

163
00:07:48,430 --> 00:07:53,240
so on a given day you would have

164
00:07:51,140 --> 00:07:54,409
different traffic matrices for your

165
00:07:53,240 --> 00:07:55,760
network and you would have different

166
00:07:54,410 --> 00:07:57,560
Network States you would model

167
00:07:55,760 --> 00:08:00,080
throughout the day for your network to

168
00:07:57,560 --> 00:08:02,180
understand how your when will behave

169
00:08:00,080 --> 00:08:03,919
different parts of your day if it

170
00:08:02,180 --> 00:08:14,960
encounters a failure where a topology

171
00:08:03,920 --> 00:08:17,480
change click alright there we go so

172
00:08:14,960 --> 00:08:19,130
without modeling rules that them are

173
00:08:17,480 --> 00:08:23,090
often used for an engineering and

174
00:08:19,130 --> 00:08:25,760
planning rules of thumb our general one

175
00:08:23,090 --> 00:08:27,820
I hear very often is we augment circuits

176
00:08:25,760 --> 00:08:32,840
when they reach 50% capacity

177
00:08:27,820 --> 00:08:35,059
automatically ok since it's a general

178
00:08:32,840 --> 00:08:38,930
rule you might be over building or under

179
00:08:35,059 --> 00:08:41,030
building based on that policy general

180
00:08:38,929 --> 00:08:44,120
rules don't protect you necessarily

181
00:08:41,030 --> 00:08:45,860
against failures you are or should be

182
00:08:44,120 --> 00:08:47,780
interested in they don't help define the

183
00:08:45,860 --> 00:08:52,430
problem they just it's just a rule you

184
00:08:47,780 --> 00:08:55,160
you blindly follow they don't and they

185
00:08:52,430 --> 00:08:59,689
may provide sorry it may have unintended

186
00:08:55,160 --> 00:09:02,839
consequences because they are general so

187
00:08:59,690 --> 00:09:04,040
a simulation gives you insight as to how

188
00:09:02,840 --> 00:09:07,310
your network is going to behave during a

189
00:09:04,040 --> 00:09:09,500
failure event or a change in the traffic

190
00:09:07,310 --> 00:09:11,119
matrix if you're planning a big augment

191
00:09:09,500 --> 00:09:12,710
if you're expecting a new customer turn

192
00:09:11,120 --> 00:09:15,650
up that's going to have a lot more

193
00:09:12,710 --> 00:09:17,470
traffic in a two months model it's see

194
00:09:15,650 --> 00:09:20,180
where you're vulnerable get ahead of it

195
00:09:17,470 --> 00:09:25,850
and again it gives you insight as to

196
00:09:20,180 --> 00:09:28,370
your LSP mesh behavior so modeling can

197
00:09:25,850 --> 00:09:30,170
show you it can uncover vulnerabilities

198
00:09:28,370 --> 00:09:32,420
in the WAM you run a bunch of different

199
00:09:30,170 --> 00:09:34,939
scenarios you realize we're exposed here

200
00:09:32,420 --> 00:09:35,449
we have risk on this link that we didn't

201
00:09:34,940 --> 00:09:37,430
know before

202
00:09:35,450 --> 00:09:40,430
that's non-intuitive but it

203
00:09:37,430 --> 00:09:43,069
they're modeling can help uncover what

204
00:09:40,430 --> 00:09:46,790
you should be interested in in as far as

205
00:09:43,070 --> 00:09:49,370
failures in your network and if you want

206
00:09:46,790 --> 00:09:51,529
to do more sophisticated analysis for

207
00:09:49,370 --> 00:09:52,220
instance I want to plan a Greenfield

208
00:09:51,529 --> 00:09:54,080
Network

209
00:09:52,220 --> 00:09:57,080
I want to optimize this network for low

210
00:09:54,080 --> 00:09:59,120
cost you need some type of simulation

211
00:09:57,080 --> 00:10:00,740
engine under the hood to run the

212
00:09:59,120 --> 00:10:02,890
scenarios and give you the optimal

213
00:10:00,740 --> 00:10:06,680
solution for what you're trying to do a

214
00:10:02,890 --> 00:10:13,610
model is foundational for strategic

215
00:10:06,680 --> 00:10:17,300
planning of your network few more

216
00:10:13,610 --> 00:10:19,130
benefits we cover the capital you can

217
00:10:17,300 --> 00:10:22,819
efficiently allocate your capital don't

218
00:10:19,130 --> 00:10:27,470
over build or under build expose events

219
00:10:22,820 --> 00:10:29,660
you care about simulations produce a ton

220
00:10:27,470 --> 00:10:31,190
of data about the state of the network

221
00:10:29,660 --> 00:10:34,130
for the given conditions you're

222
00:10:31,190 --> 00:10:38,990
simulating this is a great way to be

223
00:10:34,130 --> 00:10:41,029
more fact-based or data-driven but for

224
00:10:38,990 --> 00:10:44,720
real this time about how you what you do

225
00:10:41,029 --> 00:10:47,300
with your network at a minimum modeling

226
00:10:44,720 --> 00:10:50,270
gives you the ability to make more

227
00:10:47,300 --> 00:10:51,560
informed educated decisions you don't

228
00:10:50,270 --> 00:10:53,449
necessarily need a sophisticated

229
00:10:51,560 --> 00:10:56,089
modeling setup to get value from this

230
00:10:53,450 --> 00:10:59,120
network modeling for instance if you use

231
00:10:56,089 --> 00:11:00,830
rules of thumb generally okay model out

232
00:10:59,120 --> 00:11:02,560
your rules of thumb are you over

233
00:11:00,830 --> 00:11:05,870
building are you on your building a

234
00:11:02,560 --> 00:11:08,719
simple a simple use case like that test

235
00:11:05,870 --> 00:11:13,070
our general rules of thumb it can start

236
00:11:08,720 --> 00:11:15,940
to provide value for you so here are

237
00:11:13,070 --> 00:11:20,170
some use cases for network models

238
00:11:15,940 --> 00:11:23,170
understand your topology understand your

239
00:11:20,170 --> 00:11:24,800
failover by modeling failures

240
00:11:23,170 --> 00:11:29,540
understanding where it makes sense to

241
00:11:24,800 --> 00:11:32,620
augment how do changes in the network

242
00:11:29,540 --> 00:11:35,209
affect my traffic flow my traffic spread

243
00:11:32,620 --> 00:11:40,700
RSVP implementations if I want to modify

244
00:11:35,209 --> 00:11:43,040
my mesh or Adam s and again expose what

245
00:11:40,700 --> 00:11:45,560
failures should I be paid I'd be paying

246
00:11:43,040 --> 00:11:50,140
attention to you might uncover some

247
00:11:45,560 --> 00:11:53,109
blind spots so

248
00:11:50,140 --> 00:11:55,210
we need to make this more accessible we

249
00:11:53,110 --> 00:11:57,160
need open source tools that allow a

250
00:11:55,210 --> 00:12:00,310
programmatic approach to network

251
00:11:57,160 --> 00:12:03,850
modeling and simulation specifically I

252
00:12:00,310 --> 00:12:05,849
would like to see an open source

253
00:12:03,850 --> 00:12:10,320
modeling engine which PI NT it whoops

254
00:12:05,850 --> 00:12:13,300
backup laser of which PI NT n is one

255
00:12:10,320 --> 00:12:15,100
it's an open source modeling engine the

256
00:12:13,300 --> 00:12:18,189
other part is open source tools to

257
00:12:15,100 --> 00:12:20,260
create reasonable traffic matrices my

258
00:12:18,190 --> 00:12:24,340
friend Paulo has a good one pm acct

259
00:12:20,260 --> 00:12:26,200
that's very helpful a nice to have would

260
00:12:24,340 --> 00:12:29,200
be an open source GUI for visualization

261
00:12:26,200 --> 00:12:35,020
in case a human wants to interact with a

262
00:12:29,200 --> 00:12:37,630
network model so what does pi n TM it's

263
00:12:35,020 --> 00:12:41,050
the Python 3 network traffic modeler

264
00:12:37,630 --> 00:12:43,750
it's open source it simply applies a

265
00:12:41,050 --> 00:12:46,449
traffic matrix to a topology - to route

266
00:12:43,750 --> 00:12:48,790
traffic as the network would under the

267
00:12:46,450 --> 00:12:51,340
hood we're using Network X to get the

268
00:12:48,790 --> 00:12:52,750
path information for the topology and I

269
00:12:51,340 --> 00:12:54,850
I can't say enough good things about

270
00:12:52,750 --> 00:12:57,640
Network X I love it and without network

271
00:12:54,850 --> 00:12:59,740
X there's no PI n TM there's no open

272
00:12:57,640 --> 00:13:03,730
source modeling engine it is a great

273
00:12:59,740 --> 00:13:05,290
module but there's more to modeling than

274
00:13:03,730 --> 00:13:08,080
just understanding your paths and we're

275
00:13:05,290 --> 00:13:10,329
going to talk about that so the value PI

276
00:13:08,080 --> 00:13:13,480
n TM provides is it it takes your

277
00:13:10,330 --> 00:13:15,220
network exit paths and it builds

278
00:13:13,480 --> 00:13:18,820
infrastructure around them to model a

279
00:13:15,220 --> 00:13:23,830
network specific state and what does

280
00:13:18,820 --> 00:13:26,190
that mean so let's look at just kind of

281
00:13:23,830 --> 00:13:29,830
what we've got going on here in PI n TM

282
00:13:26,190 --> 00:13:32,340
your traffic your demand excuse me our

283
00:13:29,830 --> 00:13:37,870
traffic demand paths and RSVP paths I

284
00:13:32,340 --> 00:13:40,480
get those from Network X then I use the

285
00:13:37,870 --> 00:13:43,510
constructs and the engine to derive

286
00:13:40,480 --> 00:13:47,460
interface utilization to model reserve

287
00:13:43,510 --> 00:13:50,620
the bandwidth for 4 interfaces and to

288
00:13:47,460 --> 00:13:52,390
model the actual interfaces that the

289
00:13:50,620 --> 00:13:54,540
traffic egress is from source to

290
00:13:52,390 --> 00:13:54,540
destination

291
00:13:57,810 --> 00:14:05,770
so in other words I'm in other words

292
00:14:01,360 --> 00:14:08,800
Network X provides the the path but then

293
00:14:05,770 --> 00:14:12,040
PI and TM will map the traffic to an LSP

294
00:14:08,800 --> 00:14:14,079
the LSP 2 interfaces and then derive the

295
00:14:12,040 --> 00:14:16,120
interface utilization caused by the

296
00:14:14,080 --> 00:14:18,730
demand on the LSP on the interface

297
00:14:16,120 --> 00:14:26,380
that's what PI Tia NTM provides as a

298
00:14:18,730 --> 00:14:28,090
simulation engine ok so before I go any

299
00:14:26,380 --> 00:14:31,090
further with this I realized after

300
00:14:28,090 --> 00:14:34,860
showing this to a friend these I wasn't

301
00:14:31,090 --> 00:14:38,590
clear these numbers up here is represent

302
00:14:34,860 --> 00:14:41,260
traffic egress in the interface from

303
00:14:38,590 --> 00:14:45,730
left to right so you have 12 megabits

304
00:14:41,260 --> 00:14:48,760
per second ingressing the topology at

305
00:14:45,730 --> 00:14:50,290
node a and then what I'm showing here in

306
00:14:48,760 --> 00:14:52,930
these pictures is how much of that

307
00:14:50,290 --> 00:14:54,550
traffic goes on each interface egress is

308
00:14:52,930 --> 00:14:57,729
each interface from source to

309
00:14:54,550 --> 00:15:03,990
destination so where I'm going with that

310
00:14:57,730 --> 00:15:03,990
is traffic spreads you can't model

311
00:15:04,200 --> 00:15:10,900
utilization from a certain demand just

312
00:15:07,630 --> 00:15:12,760
by taking the unique paths and splitting

313
00:15:10,900 --> 00:15:14,260
the demand by the unique paths and

314
00:15:12,760 --> 00:15:17,220
modeling that traffic across the

315
00:15:14,260 --> 00:15:19,720
interfaces it doesn't work all the time

316
00:15:17,220 --> 00:15:21,910
for instance in this example here we

317
00:15:19,720 --> 00:15:25,270
have two of the paths through the

318
00:15:21,910 --> 00:15:30,730
network have a common interface from A

319
00:15:25,270 --> 00:15:32,650
to C in an end-to-end load balance

320
00:15:30,730 --> 00:15:34,300
scenario you're going to get 8 megabits

321
00:15:32,650 --> 00:15:39,459
per second of traffic on that link right

322
00:15:34,300 --> 00:15:42,819
there and for going up top this is not

323
00:15:39,460 --> 00:15:44,620
how a GP is necessarily behaved in some

324
00:15:42,820 --> 00:15:48,370
corner cases like if you have a big

325
00:15:44,620 --> 00:15:49,900
exceptionally huge flow within this you

326
00:15:48,370 --> 00:15:52,450
might get the elephant flow where it all

327
00:15:49,900 --> 00:15:54,550
hatches out onto one link and kind of

328
00:15:52,450 --> 00:15:56,490
throws you off but in this example here

329
00:15:54,550 --> 00:15:58,990
let's just assume there's many flows

330
00:15:56,490 --> 00:16:04,930
none of them is abnormally large and

331
00:15:58,990 --> 00:16:06,250
we're getting good hashing so just take

332
00:16:04,930 --> 00:16:07,839
note of this traffic spread it's an

333
00:16:06,250 --> 00:16:09,949
end-to-end traffic spread for this

334
00:16:07,840 --> 00:16:12,479
demand

335
00:16:09,949 --> 00:16:15,419
let's talk about what really happens

336
00:16:12,479 --> 00:16:17,279
what really happens into I GP is you use

337
00:16:15,419 --> 00:16:21,749
hop by hop load balancing

338
00:16:17,279 --> 00:16:25,949
so in hop by hop load balancing you get

339
00:16:21,749 --> 00:16:28,979
these splits so this looks very

340
00:16:25,949 --> 00:16:31,978
different than the traffic spread from

341
00:16:28,979 --> 00:16:34,409
the end end load balancing the point of

342
00:16:31,979 --> 00:16:37,889
all this traffic modeling is more than

343
00:16:34,409 --> 00:16:38,939
just understanding your paths you have

344
00:16:37,889 --> 00:16:40,379
to understand how you're never just

345
00:16:38,939 --> 00:16:44,039
going to how your traffic's going to

346
00:16:40,379 --> 00:16:52,139
split upon each path and model that

347
00:16:44,039 --> 00:16:53,819
behavior so why is it helpful it

348
00:16:52,139 --> 00:16:56,579
leverages your path information from

349
00:16:53,819 --> 00:17:06,029
network X and gives you network state

350
00:16:56,579 --> 00:17:07,678
specific context and PI n TM AP is they

351
00:17:06,029 --> 00:17:09,689
allow for a programmatic network

352
00:17:07,679 --> 00:17:11,610
modeling capability so you don't have to

353
00:17:09,689 --> 00:17:13,169
have a person with a GUI clicking and

354
00:17:11,609 --> 00:17:14,969
doing all this stuff to do hundreds of

355
00:17:13,169 --> 00:17:16,980
simulations you can program the

356
00:17:14,970 --> 00:17:19,350
simulations walk away and come back and

357
00:17:16,980 --> 00:17:21,589
look at the data see what it's telling

358
00:17:19,349 --> 00:17:21,589
you

359
00:17:27,388 --> 00:17:33,580
hi NTM allows users to easily modify the

360
00:17:31,029 --> 00:17:35,529
topology of a network and determine

361
00:17:33,580 --> 00:17:38,139
alternate network state based on that

362
00:17:35,529 --> 00:17:40,870
change for example failing a node adding

363
00:17:38,139 --> 00:17:44,289
a new node adding a new circuit adding

364
00:17:40,870 --> 00:17:46,629
LSPs you can easily do that in pi NTM

365
00:17:44,289 --> 00:17:48,129
and then see what does it do what's my

366
00:17:46,629 --> 00:17:51,248
network doing under those new conditions

367
00:17:48,129 --> 00:17:53,949
and if specifically designed to easily

368
00:17:51,249 --> 00:17:57,299
relate related objects in the model for

369
00:17:53,950 --> 00:18:00,580
instance traffic demands right on LSPs

370
00:17:57,299 --> 00:18:03,940
which have a path which transit

371
00:18:00,580 --> 00:18:06,610
interfaces which are on nodes which

372
00:18:03,940 --> 00:18:08,529
source traffic which sync traffic you

373
00:18:06,610 --> 00:18:11,490
can mine all this information easily

374
00:18:08,529 --> 00:18:14,110
with pi NTM from the model to understand

375
00:18:11,490 --> 00:18:19,929
stuff that might not be intuitive about

376
00:18:14,110 --> 00:18:23,110
what your network is doing features and

377
00:18:19,929 --> 00:18:24,759
roadmaps so currently version 1.5 that's

378
00:18:23,110 --> 00:18:25,990
the most recent version of pi and CM out

379
00:18:24,759 --> 00:18:29,889
there

380
00:18:25,990 --> 00:18:34,840
it supports IGP routing RSVP LSP full

381
00:18:29,889 --> 00:18:37,119
mesh and within that it supports auto

382
00:18:34,840 --> 00:18:39,850
bandwidth LSP as well where they will

383
00:18:37,119 --> 00:18:42,549
adjust to reserve as much bandwidth as

384
00:18:39,850 --> 00:18:45,340
they need and can and it also supports

385
00:18:42,549 --> 00:18:51,210
manually assigning the bandwidth to an

386
00:18:45,340 --> 00:18:53,559
LSP support shared risk link groups and

387
00:18:51,210 --> 00:18:56,350
so right now it currently supports

388
00:18:53,559 --> 00:19:00,639
modeling a single link between layer 3

389
00:18:56,350 --> 00:19:02,498
nodes for many use cases even if you

390
00:19:00,639 --> 00:19:05,350
have parallel links between multiple

391
00:19:02,499 --> 00:19:07,059
nodes in a lot of use cases from a

392
00:19:05,350 --> 00:19:09,399
modern perspective it makes sense to

393
00:19:07,059 --> 00:19:10,480
model those as a single link you don't

394
00:19:09,399 --> 00:19:12,939
necessarily have to model them as

395
00:19:10,480 --> 00:19:16,509
separate links depending on your use

396
00:19:12,940 --> 00:19:18,129
cases so right now we support a single

397
00:19:16,509 --> 00:19:20,320
link so if you'd have multiple links you

398
00:19:18,129 --> 00:19:23,639
would combine them to model as a single

399
00:19:20,320 --> 00:19:23,639
link at least right now

400
00:19:24,450 --> 00:19:30,540
because we don't we meaning I but

401
00:19:27,810 --> 00:19:32,820
hopefully we at some point here are

402
00:19:30,540 --> 00:19:37,110
accepting feature requests and or pull

403
00:19:32,820 --> 00:19:38,939
requests on github current there's three

404
00:19:37,110 --> 00:19:41,280
open feature requests that I've got so

405
00:19:38,940 --> 00:19:44,280
far one is for IGP shortcuts for RSVP

406
00:19:41,280 --> 00:19:46,770
LSPs one is for multiple links between

407
00:19:44,280 --> 00:19:49,139
layer three nodes and I'm currently

408
00:19:46,770 --> 00:19:53,190
working on that interesting problems to

409
00:19:49,140 --> 00:19:55,410
solve with coding I'm trying to figure

410
00:19:53,190 --> 00:19:58,560
out if there's a performance penalty in

411
00:19:55,410 --> 00:20:00,600
the modeling engine having multiple

412
00:19:58,560 --> 00:20:01,770
links between two nodes because it it

413
00:20:00,600 --> 00:20:03,659
necessarily means there's more

414
00:20:01,770 --> 00:20:06,570
processing to figure out which link

415
00:20:03,660 --> 00:20:12,360
you'd be taken between nodes but anyway

416
00:20:06,570 --> 00:20:15,090
I'm looking into that top people and the

417
00:20:12,360 --> 00:20:17,909
other the third fit the third feature

418
00:20:15,090 --> 00:20:21,060
request is assigning a manual cost to an

419
00:20:17,910 --> 00:20:25,500
RSVP LSP those are the three that are

420
00:20:21,060 --> 00:20:29,370
open right now you know possible roadmap

421
00:20:25,500 --> 00:20:32,400
features that I've thought of these are

422
00:20:29,370 --> 00:20:33,899
some of them it's helpful to get

423
00:20:32,400 --> 00:20:36,780
feedback from the community though I

424
00:20:33,900 --> 00:20:39,750
these are ones I think are valuable but

425
00:20:36,780 --> 00:20:40,830
it's I can't tell so if this is

426
00:20:39,750 --> 00:20:43,530
something that's interesting to you I

427
00:20:40,830 --> 00:20:45,060
would like to understand even if you're

428
00:20:43,530 --> 00:20:46,350
not going to use PI and TM what you

429
00:20:45,060 --> 00:20:50,250
would want to see in an open source

430
00:20:46,350 --> 00:20:53,459
modeling engine a couple other ones that

431
00:20:50,250 --> 00:20:55,830
I thought of just as I was going along

432
00:20:53,460 --> 00:20:59,610
is incorporating a database into the

433
00:20:55,830 --> 00:21:01,409
model object to quickly retrieve data I

434
00:20:59,610 --> 00:21:03,330
think that would improve performance

435
00:21:01,410 --> 00:21:05,970
because right now we're the simulations

436
00:21:03,330 --> 00:21:07,470
generate a ton of data and I'm not

437
00:21:05,970 --> 00:21:09,480
necessarily keeping all the data right

438
00:21:07,470 --> 00:21:11,820
now a lot of it I am but some of that

439
00:21:09,480 --> 00:21:13,860
I'm reading again when you ask when

440
00:21:11,820 --> 00:21:15,450
where there's a certain call a database

441
00:21:13,860 --> 00:21:17,280
might might help in that area

442
00:21:15,450 --> 00:21:20,930
so setting up a database to do something

443
00:21:17,280 --> 00:21:28,110
like that would be super helpful and

444
00:21:20,930 --> 00:21:31,050
regional RSVP meshes and again excuse me

445
00:21:28,110 --> 00:21:33,510
I'm always open to performance

446
00:21:31,050 --> 00:21:36,060
improvements and optimizations if if you

447
00:21:33,510 --> 00:21:38,250
happen to know if your happen to be good

448
00:21:36,060 --> 00:21:39,510
at finding optimizations in code

449
00:21:38,250 --> 00:21:43,230
I would love to hear about it because

450
00:21:39,510 --> 00:21:46,560
right now simulating LSPs is very

451
00:21:43,230 --> 00:21:48,060
expensive because you have to basically

452
00:21:46,560 --> 00:21:50,490
simulate them one at a time

453
00:21:48,060 --> 00:21:52,649
converge the model simulate the next

454
00:21:50,490 --> 00:21:56,190
routing converge the model because one

455
00:21:52,650 --> 00:21:59,040
LS piece path is dependent on how the

456
00:21:56,190 --> 00:22:01,350
other LS appears before a trout so LS

457
00:21:59,040 --> 00:22:03,540
peas are expensive so I'm that is where

458
00:22:01,350 --> 00:22:05,850
I'm looking for more optimization right

459
00:22:03,540 --> 00:22:07,409
now that being said I'm getting pretty

460
00:22:05,850 --> 00:22:12,270
good performance but I it could

461
00:22:07,410 --> 00:22:13,220
definitely be better can PI n TM help

462
00:22:12,270 --> 00:22:18,270
you right now

463
00:22:13,220 --> 00:22:19,560
so generally you have two options and

464
00:22:18,270 --> 00:22:21,540
there's a secret third option which is

465
00:22:19,560 --> 00:22:23,399
called build your own but I'm not going

466
00:22:21,540 --> 00:22:25,700
to cover that but you have commercial

467
00:22:23,400 --> 00:22:27,930
options and the big ones out there are

468
00:22:25,700 --> 00:22:29,640
cisco has a product juniper has a

469
00:22:27,930 --> 00:22:31,110
product I think

470
00:22:29,640 --> 00:22:32,820
Aria networks is still round they have a

471
00:22:31,110 --> 00:22:34,740
product

472
00:22:32,820 --> 00:22:36,450
there's your commercial options then you

473
00:22:34,740 --> 00:22:38,790
have pi NTM and what i'm doing here is

474
00:22:36,450 --> 00:22:41,010
i'm just showing that drawing out the

475
00:22:38,790 --> 00:22:43,139
differences here clearly with the

476
00:22:41,010 --> 00:22:48,660
commercial options you're gonna have

477
00:22:43,140 --> 00:22:50,670
cost they cost money PI n TM is just

478
00:22:48,660 --> 00:22:52,410
there it's free

479
00:22:50,670 --> 00:22:54,300
both have AP is for programmatic

480
00:22:52,410 --> 00:22:57,600
modeling at least most of the commercial

481
00:22:54,300 --> 00:22:59,010
options do one thing about the

482
00:22:57,600 --> 00:23:00,870
commercial options that can't be

483
00:22:59,010 --> 00:23:03,180
undersold I think it provides a great

484
00:23:00,870 --> 00:23:05,429
value for the commercial options is a

485
00:23:03,180 --> 00:23:07,560
lot of them will create a traffic matrix

486
00:23:05,430 --> 00:23:09,870
for you so if you can't create your own

487
00:23:07,560 --> 00:23:11,399
traffic matrix you probably want to go

488
00:23:09,870 --> 00:23:14,070
to the commercial option route because

489
00:23:11,400 --> 00:23:18,930
they will often create one for you and

490
00:23:14,070 --> 00:23:21,780
that value there is huge the commercial

491
00:23:18,930 --> 00:23:26,700
options have sophisticated UI's for

492
00:23:21,780 --> 00:23:30,360
visualization which PI NTM does not and

493
00:23:26,700 --> 00:23:33,390
then there's the open source we're open

494
00:23:30,360 --> 00:23:38,120
source the vendors not so you're not as

495
00:23:33,390 --> 00:23:38,120
dependent on the vendor with PI and TM

496
00:23:41,180 --> 00:23:47,060
so this is the call to action slide this

497
00:23:44,520 --> 00:23:49,520
needs to be a thing now python is mature

498
00:23:47,060 --> 00:23:52,560
python is prevalent in the network

499
00:23:49,520 --> 00:23:54,780
networking community the need for

500
00:23:52,560 --> 00:23:56,669
modeling is huge right now because more

501
00:23:54,780 --> 00:23:59,280
and more networks are hidden you know

502
00:23:56,670 --> 00:24:01,590
scale constraints where there's capital

503
00:23:59,280 --> 00:24:03,629
budget constraints there's when link

504
00:24:01,590 --> 00:24:05,760
constraints there's people constraints

505
00:24:03,630 --> 00:24:08,130
there's just not enough to keep up with

506
00:24:05,760 --> 00:24:13,370
how to grow the web you need to grow it

507
00:24:08,130 --> 00:24:13,370
smartly not just with rules of thumb

508
00:24:15,320 --> 00:24:20,370
more reasons why this should be a thing

509
00:24:17,930 --> 00:24:22,200
the capability for basic modeling is a

510
00:24:20,370 --> 00:24:25,379
very mature these these commercial

511
00:24:22,200 --> 00:24:28,410
products have been around for 17 years

512
00:24:25,380 --> 00:24:31,800
mature mature technologies can and

513
00:24:28,410 --> 00:24:33,600
should be modularized so for instance

514
00:24:31,800 --> 00:24:38,430
you can have one app to create a traffic

515
00:24:33,600 --> 00:24:40,649
matrix maybe PM acct one app to model

516
00:24:38,430 --> 00:24:46,800
that uses the traffic matrix maybe PI n

517
00:24:40,650 --> 00:24:48,900
TM so who is this for if you can if you

518
00:24:46,800 --> 00:24:53,370
have access to a reasonable traffic

519
00:24:48,900 --> 00:24:55,340
matrix if you have coding skills for

520
00:24:53,370 --> 00:24:57,840
Python if you don't want to rely on

521
00:24:55,340 --> 00:25:01,500
external vendors and oftentimes that's a

522
00:24:57,840 --> 00:25:04,500
cultural thing within a company if your

523
00:25:01,500 --> 00:25:08,070
man is IGP only or if it's IG bleep IG P

524
00:25:04,500 --> 00:25:09,930
plus full mesh RSVP you can start using

525
00:25:08,070 --> 00:25:14,760
it now and at least kick the tires I

526
00:25:09,930 --> 00:25:17,040
would love the feedback otherwise look

527
00:25:14,760 --> 00:25:19,620
I'm still adding features i've have some

528
00:25:17,040 --> 00:25:21,629
feature requests that are were we're

529
00:25:19,620 --> 00:25:23,330
submitted I would love more I'd love to

530
00:25:21,630 --> 00:25:29,340
see what the needs are of the community

531
00:25:23,330 --> 00:25:33,780
to open-source the modeling engine next

532
00:25:29,340 --> 00:25:36,419
steps for you if you are interested its

533
00:25:33,780 --> 00:25:40,020
int Emma is downloadable as a Python

534
00:25:36,420 --> 00:25:43,980
package from pi PI be sure to do a pip 3

535
00:25:40,020 --> 00:25:47,100
because this is Python 3 the github full

536
00:25:43,980 --> 00:25:49,590
repository is super cool it gives you

537
00:25:47,100 --> 00:25:53,070
access to sample scripts and it gives

538
00:25:49,590 --> 00:25:54,720
you access just to some beta features

539
00:25:53,070 --> 00:25:57,418
including an interactive visualization

540
00:25:54,720 --> 00:26:00,360
that's good at small-scale and a simple

541
00:25:57,419 --> 00:26:05,669
user interface to help a human explore

542
00:26:00,360 --> 00:26:07,049
the model topology there's some free

543
00:26:05,669 --> 00:26:10,320
training modules which I recently

544
00:26:07,049 --> 00:26:13,039
published those are on the the wiki page

545
00:26:10,320 --> 00:26:16,519
for the repository we have read the docs

546
00:26:13,039 --> 00:26:19,190
docstrings are real I've done them and

547
00:26:16,519 --> 00:26:22,409
if you can if you feel you constrain

548
00:26:19,190 --> 00:26:25,740
network behavior in code feel free to

549
00:26:22,409 --> 00:26:29,870
contribute I would love the I would love

550
00:26:25,740 --> 00:26:32,730
the input the feedback and the help so

551
00:26:29,870 --> 00:26:35,610
quickly here demo seemed like a good

552
00:26:32,730 --> 00:26:38,549
idea until they don't I had to record a

553
00:26:35,610 --> 00:26:42,449
demo to do but it was terrible on these

554
00:26:38,549 --> 00:26:44,580
screens in this bigger room so I can't

555
00:26:42,450 --> 00:26:47,909
wait a bit this morning and I'm just

556
00:26:44,580 --> 00:26:49,740
gonna show screenshots the point of this

557
00:26:47,909 --> 00:26:52,799
of showing a demo and now the

558
00:26:49,740 --> 00:26:55,799
screenshots is to show you that using PI

559
00:26:52,799 --> 00:27:00,690
n TM programmatically is a real thing

560
00:26:55,799 --> 00:27:04,350
it's it's can be done so we'll cover

561
00:27:00,690 --> 00:27:08,159
that as we go so how these looking

562
00:27:04,350 --> 00:27:10,529
pretty good okay so the first thing

563
00:27:08,159 --> 00:27:14,370
we're doing here is this up here this is

564
00:27:10,529 --> 00:27:16,889
just some boilerplate stuff what we're

565
00:27:14,370 --> 00:27:20,820
doing here is we're creating a model

566
00:27:16,889 --> 00:27:22,740
object by using a class call and loading

567
00:27:20,820 --> 00:27:24,870
the network data the topology

568
00:27:22,740 --> 00:27:30,539
information and traffic matrix for that

569
00:27:24,870 --> 00:27:32,250
matter from a CSV file so now you have

570
00:27:30,539 --> 00:27:34,769
your model loaded you need to get your

571
00:27:32,250 --> 00:27:37,669
simulation data so you need to run an

572
00:27:34,769 --> 00:27:40,799
update simulation this call right here

573
00:27:37,669 --> 00:27:49,379
will actually do the routing of the LSP

574
00:27:40,799 --> 00:27:50,549
as if present and of the demands so

575
00:27:49,379 --> 00:27:52,320
we've loaded the network we have our

576
00:27:50,549 --> 00:27:54,870
model it's converged because we updated

577
00:27:52,320 --> 00:27:57,360
the simulation this is one of the beta

578
00:27:54,870 --> 00:27:59,250
features it's this interactive network

579
00:27:57,360 --> 00:28:02,639
graph and it's beta because it's not

580
00:27:59,250 --> 00:28:07,070
core it's just kind of a augment that I

581
00:28:02,639 --> 00:28:07,070
did to help in training really

582
00:28:07,929 --> 00:28:15,590
so this is the call to to create the

583
00:28:12,470 --> 00:28:16,640
interactive network graph and don't

584
00:28:15,590 --> 00:28:19,279
worry about trying to read the

585
00:28:16,640 --> 00:28:20,900
information on this graph but what this

586
00:28:19,279 --> 00:28:25,429
does is it creates a locally served

587
00:28:20,900 --> 00:28:27,140
interactive map powered by MPL d3 which

588
00:28:25,429 --> 00:28:28,490
is a super cool Python plug and if you

589
00:28:27,140 --> 00:28:30,980
haven't messed with it it's awesome for

590
00:28:28,490 --> 00:28:35,029
data visualization and interaction from

591
00:28:30,980 --> 00:28:38,539
Python so what you should note here is

592
00:28:35,029 --> 00:28:40,600
that we're showing there's a interface

593
00:28:38,539 --> 00:28:43,970
utilization legend on this side here and

594
00:28:40,600 --> 00:28:46,719
there's two interfaces the purple ones

595
00:28:43,970 --> 00:28:52,640
that are over a hundred percent utilized

596
00:28:46,720 --> 00:28:56,029
for egress traffic so I'm gonna skip

597
00:28:52,640 --> 00:28:58,070
this I'm running out of time

598
00:28:56,029 --> 00:29:00,740
so we've converged our model hey let's

599
00:28:58,070 --> 00:29:03,260
look at interfaces that have over ninety

600
00:29:00,740 --> 00:29:06,649
percent utilization it's just a simple

601
00:29:03,260 --> 00:29:08,120
for loop grab the interface objects look

602
00:29:06,649 --> 00:29:10,870
at the utilization if it's over 90

603
00:29:08,120 --> 00:29:14,600
percent print some interface some

604
00:29:10,870 --> 00:29:16,520
information about the interfaces so we

605
00:29:14,600 --> 00:29:19,939
have the interface name the source node

606
00:29:16,520 --> 00:29:22,250
and then the utilization so you have two

607
00:29:19,940 --> 00:29:25,730
interfaces that are over ninety percent

608
00:29:22,250 --> 00:29:29,149
utilized we're gonna fail an interface

609
00:29:25,730 --> 00:29:32,029
now so I'm gonna do a call to grab an

610
00:29:29,149 --> 00:29:36,020
interface from the model and here's the

611
00:29:32,029 --> 00:29:38,120
wrapper for the interface and here I'm

612
00:29:36,020 --> 00:29:41,200
doing a call a true/false call is this

613
00:29:38,120 --> 00:29:44,928
failed it does not fail that is false

614
00:29:41,200 --> 00:29:49,220
so given that its operational let's fail

615
00:29:44,929 --> 00:29:52,010
it so you do a fail interface call from

616
00:29:49,220 --> 00:29:57,409
the interface object update the

617
00:29:52,010 --> 00:30:00,890
simulation okay this might be a bit of

618
00:29:57,409 --> 00:30:02,419
an eye chart so I'm gonna what I did is

619
00:30:00,890 --> 00:30:03,799
I just did a for loop grabbed all the

620
00:30:02,419 --> 00:30:05,710
interface objects and printed the

621
00:30:03,799 --> 00:30:11,059
interface utilization for each interface

622
00:30:05,710 --> 00:30:14,659
let's look at the highlight so we failed

623
00:30:11,059 --> 00:30:16,820
the interface from A to B so that's down

624
00:30:14,659 --> 00:30:18,160
no surprise but the interface from being

625
00:30:16,820 --> 00:30:20,770
a also went down because

626
00:30:18,160 --> 00:30:22,960
a circuit needs to interfaces to stay up

627
00:30:20,770 --> 00:30:26,290
so the circuit failed the other side

628
00:30:22,960 --> 00:30:27,940
failed and the other interesting piece

629
00:30:26,290 --> 00:30:30,159
of information here is our utilization

630
00:30:27,940 --> 00:30:33,100
on a 2d went to under one hundred and

631
00:30:30,160 --> 00:30:35,470
sixty four percent Wow what's causing

632
00:30:33,100 --> 00:30:39,219
that utilization here's the quick

633
00:30:35,470 --> 00:30:43,570
visualization failed circuit interface

634
00:30:39,220 --> 00:30:45,790
we're looking at it's very saturated so

635
00:30:43,570 --> 00:30:46,679
this is just me showing off how I have

636
00:30:45,790 --> 00:30:51,060
docstrings

637
00:30:46,680 --> 00:30:53,260
they're real they're a thing necessary

638
00:30:51,060 --> 00:30:55,360
what I'm going to do what I did here is

639
00:30:53,260 --> 00:30:57,520
I'm grabbing the demand so what is

640
00:30:55,360 --> 00:30:58,719
driving that 164 percent utilization in

641
00:30:57,520 --> 00:31:02,170
them on that interface

642
00:30:58,720 --> 00:31:04,990
let me grab the track 1 ah let me grab

643
00:31:02,170 --> 00:31:06,850
the traffic these are the demands that

644
00:31:04,990 --> 00:31:09,400
are egressing that interface causing

645
00:31:06,850 --> 00:31:11,919
that hundred 64 percent utilization so

646
00:31:09,400 --> 00:31:14,980
now you know what traffic is affected by

647
00:31:11,920 --> 00:31:21,100
that failure you know what demands are

648
00:31:14,980 --> 00:31:23,800
drop in traffic okay so real quickly

649
00:31:21,100 --> 00:31:27,189
here because I'm about one minute over I

650
00:31:23,800 --> 00:31:30,940
think what I did here is I grabbed the

651
00:31:27,190 --> 00:31:33,340
demand from the model from the demand

652
00:31:30,940 --> 00:31:35,800
from A to B and what I'm doing here is

653
00:31:33,340 --> 00:31:41,159
I'm using the path call from the demand

654
00:31:35,800 --> 00:31:43,480
to tell me hey what what paths or paths

655
00:31:41,160 --> 00:31:46,510
does this demand take across the network

656
00:31:43,480 --> 00:31:49,170
and there are two equal cost paths one

657
00:31:46,510 --> 00:31:52,900
from A to D and D to B and one from

658
00:31:49,170 --> 00:31:59,620
that's got three humps here are those

659
00:31:52,900 --> 00:32:05,230
paths kind of visualized node a D to B

660
00:31:59,620 --> 00:32:06,850
and node a to D to e to B this is not

661
00:32:05,230 --> 00:32:08,950
always intuitive to do in a big network

662
00:32:06,850 --> 00:32:14,320
you can do this with Phi and TM

663
00:32:08,950 --> 00:32:17,860
okay that's the point here alright that

664
00:32:14,320 --> 00:32:19,120
wraps it up for the the talk if there's

665
00:32:17,860 --> 00:32:23,580
any questions I've happy to take them

666
00:32:19,120 --> 00:32:23,580
now or we can talk later on as well

667
00:32:25,740 --> 00:32:33,500
okay looks like we are done thank you

