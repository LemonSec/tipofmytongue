1
00:00:00,210 --> 00:00:06,000
thanks a lot so yeah this year's

2
00:00:03,090 --> 00:00:09,120
hackathon we decided this year to host a

3
00:00:06,000 --> 00:00:10,639
hackathon on an OP these and so if we

4
00:00:09,120 --> 00:00:13,980
could jump to the next slide please

5
00:00:10,639 --> 00:00:15,870
quicker list here so what does Panoptix

6
00:00:13,980 --> 00:00:18,660
figure we should talk about that first

7
00:00:15,870 --> 00:00:21,419
cannot even open source and to end

8
00:00:18,660 --> 00:00:24,269
monitoring system that we built at Yahoo

9
00:00:21,420 --> 00:00:26,580
and brought over into Verizon media as

10
00:00:24,269 --> 00:00:27,930
we've got acquired and and what the

11
00:00:26,580 --> 00:00:30,959
problem was that we were trying to solve

12
00:00:27,930 --> 00:00:32,790
was we were over polling we had a lot of

13
00:00:30,960 --> 00:00:34,170
different monitoring systems we wanted

14
00:00:32,790 --> 00:00:36,170
to consolidate the polling and

15
00:00:34,170 --> 00:00:40,469
consolidate the monitoring systems and

16
00:00:36,170 --> 00:00:43,440
build a distribution bus thank you

17
00:00:40,469 --> 00:00:45,180
build the distribution bus to then send

18
00:00:43,440 --> 00:00:47,640
those metrics anywhere that they needed

19
00:00:45,180 --> 00:00:51,329
to be and so that's what we built with

20
00:00:47,640 --> 00:00:54,719
monopolies what makes it special we've

21
00:00:51,329 --> 00:00:56,579
scaled it to Verizon media scale so

22
00:00:54,719 --> 00:00:59,930
we're we're monitoring tens of thousands

23
00:00:56,579 --> 00:01:02,820
of devices on it in production right now

24
00:00:59,930 --> 00:01:04,760
it's battle-tested we've been running it

25
00:01:02,820 --> 00:01:07,560
in production for three or four years

26
00:01:04,760 --> 00:01:08,760
it's extendable and has a plug-in

27
00:01:07,560 --> 00:01:10,380
architecture and a lot of what the

28
00:01:08,760 --> 00:01:11,850
hackathon was built around was built

29
00:01:10,380 --> 00:01:13,619
around extending those plugins building

30
00:01:11,850 --> 00:01:16,080
those plugins coming up with new and

31
00:01:13,619 --> 00:01:18,840
interesting integrations to do with

32
00:01:16,080 --> 00:01:24,060
panopticon finally it's open source so

33
00:01:18,840 --> 00:01:25,860
anybody can use it so brief history we

34
00:01:24,060 --> 00:01:27,390
actually started working on penalties in

35
00:01:25,860 --> 00:01:30,150
January of 2016

36
00:01:27,390 --> 00:01:32,070
and it's kind of been a journey with

37
00:01:30,150 --> 00:01:33,600
nanog because a lot of our major

38
00:01:32,070 --> 00:01:37,020
announcements have been at this

39
00:01:33,600 --> 00:01:39,119
conference so in 2017 we announced

40
00:01:37,020 --> 00:01:40,530
monopolies at at nanog we came and

41
00:01:39,119 --> 00:01:43,500
talked about it and talked about what it

42
00:01:40,530 --> 00:01:46,979
was we were working on 2018 we open

43
00:01:43,500 --> 00:01:48,270
sourced the platform 2019 we actually

44
00:01:46,979 --> 00:01:50,640
made the open source a lot more

45
00:01:48,270 --> 00:01:52,740
accessible by wrapping it in a docker

46
00:01:50,640 --> 00:01:54,479
image so that people could quickly

47
00:01:52,740 --> 00:01:55,610
install it and get up and running with

48
00:01:54,479 --> 00:01:58,530
it

49
00:01:55,610 --> 00:02:00,299
January 22nd of this year we pulled the

50
00:01:58,530 --> 00:02:02,100
trigger and decided let's do a hackathon

51
00:02:00,299 --> 00:02:04,399
and in two weeks the team pulled it

52
00:02:02,100 --> 00:02:09,959
together and we hosted the hackathon

53
00:02:04,399 --> 00:02:12,300
this past Sunday and so why did we do

54
00:02:09,959 --> 00:02:13,370
this well we are very interested in

55
00:02:12,300 --> 00:02:16,040
getting

56
00:02:13,370 --> 00:02:19,430
community engagement with monopolies

57
00:02:16,040 --> 00:02:21,109
it's kind of been a one company show so

58
00:02:19,430 --> 00:02:22,610
far but we would we would love to have

59
00:02:21,110 --> 00:02:25,400
contributions come in and we'd love to

60
00:02:22,610 --> 00:02:27,470
see people get involved with a platform

61
00:02:25,400 --> 00:02:30,069
and and you know really start to iterate

62
00:02:27,470 --> 00:02:32,540
on iterate on it and make it better

63
00:02:30,069 --> 00:02:34,190
looking for new ideas new ways that we

64
00:02:32,540 --> 00:02:35,420
can stretch the platform and finally we

65
00:02:34,190 --> 00:02:37,549
wanted to help out and make nanog

66
00:02:35,420 --> 00:02:40,179
awesome so with that I'm going to hand

67
00:02:37,549 --> 00:02:44,870
off to Derek to talk a little about

68
00:02:40,180 --> 00:02:47,019
leading up to the hackathon hey guys so

69
00:02:44,870 --> 00:02:50,150
wouldn't what went into this a whole lot

70
00:02:47,019 --> 00:02:53,329
so once I told the team we were doing

71
00:02:50,150 --> 00:02:56,120
this and the shock wore off they quickly

72
00:02:53,329 --> 00:02:58,790
jumped in to assessing and addressing

73
00:02:56,120 --> 00:03:00,819
all the issues that we have with the

74
00:02:58,790 --> 00:03:05,450
docker image to get that up and running

75
00:03:00,819 --> 00:03:08,869
to build a document test and build a

76
00:03:05,450 --> 00:03:10,548
repeatable setup process as we do is

77
00:03:08,870 --> 00:03:12,019
crucial to get the teams up and running

78
00:03:10,549 --> 00:03:22,790
as soon as possible so that they can

79
00:03:12,019 --> 00:03:26,060
work on the hacks next the green one it

80
00:03:22,790 --> 00:03:28,638
isn't it there we go

81
00:03:26,060 --> 00:03:31,609
also we were able to leverage two

82
00:03:28,639 --> 00:03:34,040
pseudos amazing cloud emulation platform

83
00:03:31,609 --> 00:03:36,290
which made things a whole lot easier for

84
00:03:34,040 --> 00:03:38,810
the spin up an infrastructure and it's

85
00:03:36,290 --> 00:03:43,668
apology that we could pull against so we

86
00:03:38,810 --> 00:03:46,489
built a multi vendor for diversity and a

87
00:03:43,669 --> 00:03:50,079
simple full mesh topology with no

88
00:03:46,489 --> 00:03:51,859
running iperf to generate metrics and

89
00:03:50,079 --> 00:03:58,040
forcing that you know with synthetic

90
00:03:51,859 --> 00:04:05,260
traffic and so this was a just an

91
00:03:58,040 --> 00:04:12,459
interesting slide we want to share okay

92
00:04:05,260 --> 00:04:15,349
sorry Mac know this all right

93
00:04:12,459 --> 00:04:17,149
sorry about that so we want to share

94
00:04:15,349 --> 00:04:18,918
this slide about what the the team's

95
00:04:17,149 --> 00:04:21,380
kind of focus on so primarily the

96
00:04:18,918 --> 00:04:23,140
plugins that the teams kind of honed in

97
00:04:21,380 --> 00:04:25,280
long where the polling plug-in

98
00:04:23,140 --> 00:04:27,669
distribution plug-in and also the time

99
00:04:25,280 --> 00:04:27,669
series

100
00:04:27,830 --> 00:04:34,349
the time series database and so not sure

101
00:04:32,669 --> 00:04:36,990
you know probably time constraints you

102
00:04:34,349 --> 00:04:38,969
know with the other plugins that we had

103
00:04:36,990 --> 00:04:41,159
but you know this was interesting

104
00:04:38,970 --> 00:04:43,050
observation that you know most of the

105
00:04:41,159 --> 00:04:47,520
teams kind of focus on these plugins

106
00:04:43,050 --> 00:04:50,280
during the hackathon and just a huge

107
00:04:47,520 --> 00:04:52,258
thank you to the panel piscine for

108
00:04:50,280 --> 00:04:56,068
getting is done and short notice I know

109
00:04:52,259 --> 00:04:58,199
it was a lot of work and it's a

110
00:04:56,069 --> 00:05:00,659
testament to how awesome you guys are

111
00:04:58,199 --> 00:05:05,039
sudo for allowing us to use their

112
00:05:00,659 --> 00:05:06,840
platform and nanog and the committee's a

113
00:05:05,039 --> 00:05:09,380
hackathon for making it all possible

114
00:05:06,840 --> 00:05:13,198
walking us through our first hackathon

115
00:05:09,380 --> 00:05:16,979
and I don't have it here but lastly just

116
00:05:13,199 --> 00:05:18,419
all the participants because truly it's

117
00:05:16,979 --> 00:05:20,969
your time and effort that makes this

118
00:05:18,419 --> 00:05:23,310
event amazing so thank you for doing

119
00:05:20,969 --> 00:05:26,009
this hackathon and you know future

120
00:05:23,310 --> 00:05:29,360
hackathons so with that I think I'll

121
00:05:26,009 --> 00:05:32,280
pass it to end to announce the winners

122
00:05:29,360 --> 00:05:34,800
thanks yeah and just to underscore we

123
00:05:32,280 --> 00:05:36,840
had eight teams this year 42

124
00:05:34,800 --> 00:05:39,630
participants in the hackathon so a great

125
00:05:36,840 --> 00:05:41,940
turnout lots of engagement and the

126
00:05:39,630 --> 00:05:50,419
winners are

127
00:05:41,940 --> 00:05:53,099
let the auspice okay the panopticon

128
00:05:50,419 --> 00:05:55,080
the Purdue team who did a Prometheus

129
00:05:53,099 --> 00:05:58,759
integration so I think first on the

130
00:05:55,080 --> 00:05:58,758
stage we'll call up the panopticon

131
00:05:59,880 --> 00:06:05,860
[Applause]

132
00:06:06,300 --> 00:06:09,360
[Music]

133
00:06:15,660 --> 00:06:20,060
everyone I'm sorry Blevins and joined up

134
00:06:17,700 --> 00:06:22,590
here by a Flavio Castro are not chained

135
00:06:20,060 --> 00:06:24,810
Joshua so holla and Chris would field

136
00:06:22,590 --> 00:06:27,390
and Pramila Singh also participated in

137
00:06:24,810 --> 00:06:29,640
the talk with us so our goal is to take

138
00:06:27,390 --> 00:06:31,710
metrics out of penalties enrich them of

139
00:06:29,640 --> 00:06:33,780
topology data and toward them to a graph

140
00:06:31,710 --> 00:06:38,430
database and walk you guys through how

141
00:06:33,780 --> 00:06:40,349
we did that so first step was to write a

142
00:06:38,430 --> 00:06:41,880
polling plug-in and Aipom the copyist

143
00:06:40,350 --> 00:06:44,490
team was kind enough to supply us with a

144
00:06:41,880 --> 00:06:46,440
starter plug-in so what we did is we

145
00:06:44,490 --> 00:06:48,390
took that starter plug-in and we used

146
00:06:46,440 --> 00:06:51,840
the gut interface counters method and a

147
00:06:48,390 --> 00:06:54,000
pom to pull our interface metrics we did

148
00:06:51,840 --> 00:06:57,929
some cannot B's built-in transforms to

149
00:06:54,000 --> 00:07:00,600
create a conversion from the counters to

150
00:06:57,930 --> 00:07:02,310
the input an output rates and then the

151
00:07:00,600 --> 00:07:05,790
get LDP neighbors method was used to

152
00:07:02,310 --> 00:07:08,190
enrich that data with with LTP data so

153
00:07:05,790 --> 00:07:09,480
we created this generic plugin and then

154
00:07:08,190 --> 00:07:11,670
we had each of our vendor plug-ins

155
00:07:09,480 --> 00:07:14,760
inherit from that we chose napalm

156
00:07:11,670 --> 00:07:16,170
because it did have support for most of

157
00:07:14,760 --> 00:07:17,400
the devices we chose and there's a

158
00:07:16,170 --> 00:07:19,680
little bit of a caveat there that we'll

159
00:07:17,400 --> 00:07:21,239
talk about when we get to challenges but

160
00:07:19,680 --> 00:07:23,940
that's the direction we took with the

161
00:07:21,240 --> 00:07:26,130
polling plugin and so this is an example

162
00:07:23,940 --> 00:07:28,110
of a metric that was produced that was

163
00:07:26,130 --> 00:07:29,400
run off the Kafka bus so you could see

164
00:07:28,110 --> 00:07:30,930
that we do get the input and output rate

165
00:07:29,400 --> 00:07:34,770
and both a counter and engage the gauge

166
00:07:30,930 --> 00:07:36,480
is that converted rate and then the

167
00:07:34,770 --> 00:07:39,150
dimensions we added where our you know

168
00:07:36,480 --> 00:07:40,320
neighbor port or neighbor name the speed

169
00:07:39,150 --> 00:07:42,900
of that link so that we could calculate

170
00:07:40,320 --> 00:07:47,520
utilization as well as the interface

171
00:07:42,900 --> 00:07:49,169
name that's the source of the metric so

172
00:07:47,520 --> 00:07:51,900
the next step was to create a bridge to

173
00:07:49,169 --> 00:07:53,460
our graph database so we chose neo4j and

174
00:07:51,900 --> 00:07:55,590
it's got pretty good community

175
00:07:53,460 --> 00:07:57,989
acceptance full-disclosure neither none

176
00:07:55,590 --> 00:08:02,099
of us had touched it before so this is

177
00:07:57,990 --> 00:08:04,770
the model I came up with when using a

178
00:08:02,100 --> 00:08:08,430
library called neo model to produce

179
00:08:04,770 --> 00:08:09,780
nowhere I'm on top of neo4j this model

180
00:08:08,430 --> 00:08:11,490
is likely not perfect I'm sure those of

181
00:08:09,780 --> 00:08:13,080
you with a graph database experience

182
00:08:11,490 --> 00:08:14,790
probably have some feedback on it but in

183
00:08:13,080 --> 00:08:16,770
general we create our router object and

184
00:08:14,790 --> 00:08:20,010
then we describe this relationship that

185
00:08:16,770 --> 00:08:24,690
we store our utilization metrics as well

186
00:08:20,010 --> 00:08:26,370
as port details on so this is the graph

187
00:08:24,690 --> 00:08:27,580
visualization we wanted to get out of

188
00:08:26,370 --> 00:08:29,860
that and

189
00:08:27,580 --> 00:08:31,030
we will talk about challenges but for a

190
00:08:29,860 --> 00:08:32,680
little bit we were worried weren't gonna

191
00:08:31,030 --> 00:08:36,280
get real metrics in here so I went ahead

192
00:08:32,679 --> 00:08:37,719
and hard-coded the graph using our graph

193
00:08:36,280 --> 00:08:39,549
database just to get it what we what we

194
00:08:37,720 --> 00:08:41,800
were hoping for and you can see that

195
00:08:39,549 --> 00:08:45,699
same full mesh that was shown on the pen

196
00:08:41,799 --> 00:08:47,910
a few slides earlier and so this is what

197
00:08:45,700 --> 00:08:49,900
we got we got really really close

198
00:08:47,910 --> 00:08:52,780
unfortunately cumulus doesn't have an a

199
00:08:49,900 --> 00:08:54,490
plumb driver and the nexus Napalm driver

200
00:08:52,780 --> 00:08:56,949
doesn't support it interface counters

201
00:08:54,490 --> 00:08:58,360
for some reason so we weren't able to

202
00:08:56,950 --> 00:08:59,770
get metrics from those two notes about

203
00:08:58,360 --> 00:09:01,360
that because we're able to get the rest

204
00:08:59,770 --> 00:09:03,160
of the graph the only link we're missing

205
00:09:01,360 --> 00:09:05,380
is the link between Nexus and cumulus

206
00:09:03,160 --> 00:09:07,030
and one other thing to point out is if

207
00:09:05,380 --> 00:09:08,470
you look at the bottom there and those

208
00:09:07,030 --> 00:09:10,510
are the lots of the data that we

209
00:09:08,470 --> 00:09:12,940
actually got about that link so that's

210
00:09:10,510 --> 00:09:14,140
what we're storing in that relationship

211
00:09:12,940 --> 00:09:16,390
and what we could use to then calculate

212
00:09:14,140 --> 00:09:19,330
utilization and potentially color this

213
00:09:16,390 --> 00:09:20,590
graph so I'm going to hand it off real

214
00:09:19,330 --> 00:09:26,380
quick to Flavio to talk about our

215
00:09:20,590 --> 00:09:28,420
challenges so hi everyone so just to

216
00:09:26,380 --> 00:09:30,850
talk a little bit about the challenges I

217
00:09:28,420 --> 00:09:33,219
want to preface a little bit that if

218
00:09:30,850 --> 00:09:35,200
people haven't you know even to ever

219
00:09:33,220 --> 00:09:37,030
touch Napalm it's a great starting point

220
00:09:35,200 --> 00:09:39,310
if you want to get it started with

221
00:09:37,030 --> 00:09:43,449
automating things it's supposed to be a

222
00:09:39,310 --> 00:09:45,280
multi vendor open source project so the

223
00:09:43,450 --> 00:09:47,950
first challenge that we had was that

224
00:09:45,280 --> 00:09:50,949
there was no napalm driver for cumulus

225
00:09:47,950 --> 00:09:53,770
and that's something that you know if

226
00:09:50,950 --> 00:09:57,010
someone has it or has interested that

227
00:09:53,770 --> 00:09:58,510
would be nice too to see there that was

228
00:09:57,010 --> 00:10:01,390
the first challenge the second challenge

229
00:09:58,510 --> 00:10:04,450
was that for example for Nexus as Zooey

230
00:10:01,390 --> 00:10:07,600
mentioned we did have the napalm driver

231
00:10:04,450 --> 00:10:10,570
but for some reason the counters weren't

232
00:10:07,600 --> 00:10:12,730
being reported properly so that was the

233
00:10:10,570 --> 00:10:14,620
second challenge mostly that we had and

234
00:10:12,730 --> 00:10:18,100
a third reason and that was due to a

235
00:10:14,620 --> 00:10:21,010
hardware failure for i/o acts for the

236
00:10:18,100 --> 00:10:23,440
iOS XR device that we had we didn't have

237
00:10:21,010 --> 00:10:24,790
everything we did get values back from

238
00:10:23,440 --> 00:10:27,250
the conference but then we had some

239
00:10:24,790 --> 00:10:30,339
issue that the hardware was misreporting

240
00:10:27,250 --> 00:10:32,530
the values themselves but other than

241
00:10:30,340 --> 00:10:34,690
that we were able again to get data from

242
00:10:32,530 --> 00:10:40,050
iOS and journals successfully so that

243
00:10:34,690 --> 00:10:40,050
was nice and yep that's it so

244
00:10:42,050 --> 00:10:49,140
so one more challenge we hit and sorry

245
00:10:46,260 --> 00:10:51,210
veranda tell you out here but relative

246
00:10:49,140 --> 00:10:53,040
imports aren't supported not these so we

247
00:10:51,210 --> 00:10:54,750
wasted a good hour and a half to two

248
00:10:53,040 --> 00:10:56,459
hours trying to get our plugins to load

249
00:10:54,750 --> 00:10:57,960
and they were silently failing and we

250
00:10:56,460 --> 00:11:00,000
didn't know why and we were all kind of

251
00:10:57,960 --> 00:11:02,100
poking at it and turns out relative

252
00:11:00,000 --> 00:11:05,660
imports her arts ported and it doesn't

253
00:11:02,100 --> 00:11:07,710
really look when you do that so if

254
00:11:05,660 --> 00:11:09,300
anybody wants to contribute back to the

255
00:11:07,710 --> 00:11:12,420
panaka news project and you know fix

256
00:11:09,300 --> 00:11:15,089
that bug be pretty great and then as

257
00:11:12,420 --> 00:11:19,829
Flavio mentioned we did have the iOS 6

258
00:11:15,090 --> 00:11:21,170
our counter is being misreported so what

259
00:11:19,830 --> 00:11:23,220
would be the next steps for this hack

260
00:11:21,170 --> 00:11:25,140
obviously we would need to implement

261
00:11:23,220 --> 00:11:28,850
some de Paume methods if we chose to

262
00:11:25,140 --> 00:11:31,380
continue using napalm as the poling base

263
00:11:28,850 --> 00:11:33,060
another option would be to movies all TP

264
00:11:31,380 --> 00:11:35,220
dimensions and do the enrichment plugins

265
00:11:33,060 --> 00:11:37,260
Infinity's we chose not to do this

266
00:11:35,220 --> 00:11:38,790
because we would have to do we would

267
00:11:37,260 --> 00:11:43,050
have to do it SNMP base for the way that

268
00:11:38,790 --> 00:11:45,000
it's architected and at LDP data via

269
00:11:43,050 --> 00:11:46,650
SNMP is mildly and consistent across

270
00:11:45,000 --> 00:11:49,190
vendors at least when I last looked like

271
00:11:46,650 --> 00:11:51,120
five years ago that may have changed now

272
00:11:49,190 --> 00:11:52,410
another thing we really wanted to add

273
00:11:51,120 --> 00:11:53,730
and what we were hoping to have done in

274
00:11:52,410 --> 00:11:55,680
this hack was to actually show the

275
00:11:53,730 --> 00:11:57,030
thickness or the color of those links

276
00:11:55,680 --> 00:11:59,010
based on the percentage of utilization

277
00:11:57,030 --> 00:12:02,699
on that link have been a really cool

278
00:11:59,010 --> 00:12:05,730
visualization and then finally and you

279
00:12:02,700 --> 00:12:07,350
know this is you know graphs are great

280
00:12:05,730 --> 00:12:08,370
apology BAPS are pretty but there's a

281
00:12:07,350 --> 00:12:09,390
lot more you can do with the graph

282
00:12:08,370 --> 00:12:10,860
database so it would be really

283
00:12:09,390 --> 00:12:13,199
interesting to now that we've got this

284
00:12:10,860 --> 00:12:16,950
data fed into a graph database come up

285
00:12:13,200 --> 00:12:18,180
with some cool uses of that data so I

286
00:12:16,950 --> 00:12:19,980
want to give a shout out to the

287
00:12:18,180 --> 00:12:21,660
advertising media folks for putting this

288
00:12:19,980 --> 00:12:24,750
half together in a really short time and

289
00:12:21,660 --> 00:12:26,550
then also the two pseudo T to do for

290
00:12:24,750 --> 00:12:27,870
supplying the lab and specifically Tom

291
00:12:26,550 --> 00:12:30,300
Beecher Andy while he for getting those

292
00:12:27,870 --> 00:12:32,850
devices configured for us during the lab

293
00:12:30,300 --> 00:12:35,579
is support lldpe again sssh access so

294
00:12:32,850 --> 00:12:37,050
thanks a lot everyone and if you want to

295
00:12:35,580 --> 00:12:40,790
see the source code for what we did and

296
00:12:37,050 --> 00:12:40,790
got it up on git thank you

297
00:12:41,810 --> 00:12:44,930
[Applause]

298
00:13:07,150 --> 00:13:12,020
all right good morning everyone my name

299
00:13:10,610 --> 00:13:14,510
is Nigel Wilson

300
00:13:12,020 --> 00:13:17,230
I'm from Purdue University and I'm

301
00:13:14,510 --> 00:13:20,050
joined on the stage with my colleagues

302
00:13:17,230 --> 00:13:24,380
Jakob Slater who's also from Purdue and

303
00:13:20,050 --> 00:13:29,420
our friend basil fillin from mythic

304
00:13:24,380 --> 00:13:31,630
beasts and as Ian and Derek explained a

305
00:13:29,420 --> 00:13:34,130
lot of the project with the nobbies was

306
00:13:31,630 --> 00:13:38,330
working on that plug inside whether it

307
00:13:34,130 --> 00:13:42,230
be discovery enrichment or polling

308
00:13:38,330 --> 00:13:44,300
plugins adding some functionality adding

309
00:13:42,230 --> 00:13:46,370
new ones kind of changing things around

310
00:13:44,300 --> 00:13:47,780
but we kind of wanted to take a

311
00:13:46,370 --> 00:13:49,040
different approach to it we wanted to

312
00:13:47,780 --> 00:13:50,569
look towards that back end where all

313
00:13:49,040 --> 00:13:53,300
that data was being stored in the

314
00:13:50,570 --> 00:13:57,260
databases specifically we wanted to look

315
00:13:53,300 --> 00:14:00,560
at the time series database with influx

316
00:13:57,260 --> 00:14:01,900
DB and that's where we thought well how

317
00:14:00,560 --> 00:14:04,489
can we make this better

318
00:14:01,900 --> 00:14:06,020
considering Penn appeases open source we

319
00:14:04,490 --> 00:14:09,170
wanted to look at some more open source

320
00:14:06,020 --> 00:14:11,840
options and while in flux DB has or open

321
00:14:09,170 --> 00:14:18,949
source options that high availability is

322
00:14:11,840 --> 00:14:20,230
behind a paywall so what's the solution

323
00:14:18,950 --> 00:14:23,210
to that

324
00:14:20,230 --> 00:14:26,180
Prometheus could be the option

325
00:14:23,210 --> 00:14:27,650
unlike in flux DB Prometheus allows that

326
00:14:26,180 --> 00:14:28,839
high availability at the open source

327
00:14:27,650 --> 00:14:32,510
level

328
00:14:28,840 --> 00:14:35,210
additionally there are plenty of vendor

329
00:14:32,510 --> 00:14:38,240
plenty of companies that are using

330
00:14:35,210 --> 00:14:40,180
Prometheus over in flux as is so why not

331
00:14:38,240 --> 00:14:43,010
add that accessibility to multiple

332
00:14:40,180 --> 00:14:46,280
companies and vendors using Prometheus

333
00:14:43,010 --> 00:14:48,650
as well as influx and this took a little

334
00:14:46,280 --> 00:14:50,810
bit of a challenge because as we can see

335
00:14:48,650 --> 00:14:53,750
from this slide they're not necessarily

336
00:14:50,810 --> 00:14:55,910
the exact same structures in flux DB

337
00:14:53,750 --> 00:14:59,570
uses a push based system where

338
00:14:55,910 --> 00:15:03,199
Prometheus uses a pull as well as how

339
00:14:59,570 --> 00:15:06,230
they're querying these these data types

340
00:15:03,200 --> 00:15:07,580
is different because influx is using SQL

341
00:15:06,230 --> 00:15:09,560
Wow

342
00:15:07,580 --> 00:15:13,130
Prometheus is using a more simplified

343
00:15:09,560 --> 00:15:15,319
query model neither of these are better

344
00:15:13,130 --> 00:15:18,050
or worse than the other it just changes

345
00:15:15,320 --> 00:15:20,540
how we have to go about manipulating

346
00:15:18,050 --> 00:15:23,209
that data to get it to that database and

347
00:15:20,540 --> 00:15:25,219
now I'll actually pass it off to basil

348
00:15:23,210 --> 00:15:31,370
to add some visualizations and

349
00:15:25,220 --> 00:15:34,400
explanation as to how we did that so as

350
00:15:31,370 --> 00:15:36,650
a Prometheus primarily users Apple based

351
00:15:34,400 --> 00:15:38,540
system in order to ingest data this

352
00:15:36,650 --> 00:15:40,100
wasn't completely compatible with the

353
00:15:38,540 --> 00:15:43,640
push play system that existed and cannot

354
00:15:40,100 --> 00:15:48,440
you ever lose data we modified the in

355
00:15:43,640 --> 00:15:53,390
fact to be Kafka consumer in order to an

356
00:15:48,440 --> 00:15:55,730
ingest data for Prometheus we we used

357
00:15:53,390 --> 00:15:58,490
Redis of an intermediate database to

358
00:15:55,730 --> 00:16:02,300
buffer data before of polls but an

359
00:15:58,490 --> 00:16:06,080
object for intermediates we directly

360
00:16:02,300 --> 00:16:07,880
translated an octave dimensions into

361
00:16:06,080 --> 00:16:09,440
primitive labels to make sure we had

362
00:16:07,880 --> 00:16:17,450
metadata for the date of the we were

363
00:16:09,440 --> 00:16:18,890
ingesting as the Jacob so when we first

364
00:16:17,450 --> 00:16:20,780
started this we were provided with a

365
00:16:18,890 --> 00:16:22,850
docker container that had an instance of

366
00:16:20,780 --> 00:16:25,819
gharana setup with some example graphs

367
00:16:22,850 --> 00:16:28,490
feeding in from influx TV and after

368
00:16:25,820 --> 00:16:33,740
letting it run for a little bit we ended

369
00:16:28,490 --> 00:16:34,900
up with something like something like

370
00:16:33,740 --> 00:16:37,580
this

371
00:16:34,900 --> 00:16:39,290
we then after letting it run for some

372
00:16:37,580 --> 00:16:40,850
time with the Prometheus exporter

373
00:16:39,290 --> 00:16:42,170
attempted to duplicate the graphs just

374
00:16:40,850 --> 00:16:43,610
to demonstrate that we had in fact

375
00:16:42,170 --> 00:16:46,219
captured the data that we thought we had

376
00:16:43,610 --> 00:16:47,870
after around a few hours of letting it

377
00:16:46,220 --> 00:16:50,390
run we ended up with a result that

378
00:16:47,870 --> 00:16:53,030
looked something like this from the

379
00:16:50,390 --> 00:16:53,510
Prometheus side which looked relatively

380
00:16:53,030 --> 00:16:55,579
similar

381
00:16:53,510 --> 00:16:58,370
we then attempted to duplicate this for

382
00:16:55,580 --> 00:17:00,290
other graphs and again managed to reach

383
00:16:58,370 --> 00:17:03,590
what we felt was a relatively similar

384
00:17:00,290 --> 00:17:05,480
result these are not for network

385
00:17:03,590 --> 00:17:07,160
interfaces on say a switch the example

386
00:17:05,480 --> 00:17:09,349
data that was provided and the data we

387
00:17:07,160 --> 00:17:10,789
chose to use was from just the

388
00:17:09,349 --> 00:17:13,309
host machine that the docker instance

389
00:17:10,789 --> 00:17:16,669
was running on however the same /

390
00:17:13,309 --> 00:17:19,069
restart out for me this the same imports

391
00:17:16,669 --> 00:17:20,480
that were used for the UNIX machine

392
00:17:19,069 --> 00:17:24,230
because if an OP these can be used

393
00:17:20,480 --> 00:17:26,360
across any other networking device thank

394
00:17:24,230 --> 00:17:29,120
you for your time and we would just like

395
00:17:26,359 --> 00:17:32,120
to take the time to thank Nanog for

396
00:17:29,120 --> 00:17:35,600
their NCI initiative that allowed purdue

397
00:17:32,120 --> 00:17:37,909
to actually come here and work on the

398
00:17:35,600 --> 00:17:40,490
hackathon and participate it with nanog

399
00:17:37,910 --> 00:17:43,309
as well as thanking the Verizon media

400
00:17:40,490 --> 00:17:46,250
team and to sudo for putting on the

401
00:17:43,309 --> 00:17:49,490
hackathon thank you

402
00:17:46,250 --> 00:17:49,490
[Applause]

