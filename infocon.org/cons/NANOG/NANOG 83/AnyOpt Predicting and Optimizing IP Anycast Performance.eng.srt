1
00:00:00,000 --> 00:00:05,359
[Music]

2
00:00:05,359 --> 00:00:06,799
hello everyone

3
00:00:06,799 --> 00:00:09,360
today i'm going to present our

4
00:00:09,360 --> 00:00:12,160
research project that is called any opt

5
00:00:12,160 --> 00:00:14,639
so this work focus on predicting the

6
00:00:14,639 --> 00:00:17,359
anycast catchment and also optimize the

7
00:00:17,359 --> 00:00:20,560
ipn cost performance and this is a joint

8
00:00:20,560 --> 00:00:22,480
work that collaborates with many

9
00:00:22,480 --> 00:00:25,199
companies and also institutions which is

10
00:00:25,199 --> 00:00:27,680
listed on these slides

11
00:00:27,680 --> 00:00:30,240
so first let me introduce what is

12
00:00:30,240 --> 00:00:33,920
ipnicast so ipncast is a routing

13
00:00:33,920 --> 00:00:36,239
paradigm that allows you to announce the

14
00:00:36,239 --> 00:00:38,480
same ip prefix from multiple different

15
00:00:38,480 --> 00:00:39,600
locations

16
00:00:39,600 --> 00:00:41,680
take this graph as an example there are

17
00:00:41,680 --> 00:00:43,600
three anycast sites

18
00:00:43,600 --> 00:00:46,079
so each site can announce the same ip

19
00:00:46,079 --> 00:00:48,239
prefix to the internet

20
00:00:48,239 --> 00:00:50,800
so after the bgp got converged that

21
00:00:50,800 --> 00:00:52,800
means the internet

22
00:00:52,800 --> 00:00:55,760
bgp will converge different clients will

23
00:00:55,760 --> 00:00:58,399
get its catchment area so each different

24
00:00:58,399 --> 00:01:00,800
clients will just send its requests to

25
00:01:00,800 --> 00:01:03,280
the corresponding catchment sites

26
00:01:03,280 --> 00:01:04,239
so

27
00:01:04,239 --> 00:01:07,119
for example in this graph after the bgp

28
00:01:07,119 --> 00:01:09,439
announcement got converged the whole

29
00:01:09,439 --> 00:01:11,280
internet got split into three different

30
00:01:11,280 --> 00:01:12,799
catchment areas

31
00:01:12,799 --> 00:01:15,119
so the host in different catchment areas

32
00:01:15,119 --> 00:01:17,360
will only send requests to its course

33
00:01:17,360 --> 00:01:19,119
from core surrounding

34
00:01:19,119 --> 00:01:22,479
anchor sites and because of this

35
00:01:22,479 --> 00:01:26,000
specific feature any cost is adopted by

36
00:01:26,000 --> 00:01:28,560
many geographical distributed

37
00:01:28,560 --> 00:01:31,119
service providers so for example some

38
00:01:31,119 --> 00:01:34,159
dns and also cdn and also ddos

39
00:01:34,159 --> 00:01:36,640
mitigation system they're all using most

40
00:01:36,640 --> 00:01:39,439
of them are using iphost to provide the

41
00:01:39,439 --> 00:01:42,240
service to improve their performance and

42
00:01:42,240 --> 00:01:44,560
also resilience

43
00:01:44,560 --> 00:01:47,200
so what do we expect for the ip anicas

44
00:01:47,200 --> 00:01:48,799
network so

45
00:01:48,799 --> 00:01:50,960
in the ideal case for the wrong trade

46
00:01:50,960 --> 00:01:53,680
time reduction we expect iris client

47
00:01:53,680 --> 00:01:55,280
will get access

48
00:01:55,280 --> 00:01:57,759
to the nearest end card size so that

49
00:01:57,759 --> 00:02:00,799
means it will choose the optimal size

50
00:02:00,799 --> 00:02:03,200
regarding other considering

51
00:02:03,200 --> 00:02:05,360
just the round trip time so in this

52
00:02:05,360 --> 00:02:08,639
graph we showed an example of anycast

53
00:02:08,639 --> 00:02:10,560
network which composed with three

54
00:02:10,560 --> 00:02:13,120
different anchor sites so one in chicago

55
00:02:13,120 --> 00:02:15,599
one in london and one in singapore

56
00:02:15,599 --> 00:02:18,239
we also have a bunch of clients that

57
00:02:18,239 --> 00:02:20,160
want to get access to this any kind of

58
00:02:20,160 --> 00:02:21,120
service

59
00:02:21,120 --> 00:02:23,520
so in terms of the performance each

60
00:02:23,520 --> 00:02:25,920
client should select the size which

61
00:02:25,920 --> 00:02:28,319
provides the minimal round trip time so

62
00:02:28,319 --> 00:02:30,319
that's how the optimal catchment should

63
00:02:30,319 --> 00:02:33,040
be like so each client will choose the

64
00:02:33,040 --> 00:02:34,720
optimal catchment site

65
00:02:34,720 --> 00:02:36,720
which is the determinant

66
00:02:36,720 --> 00:02:39,280
the result is stand by different colors

67
00:02:39,280 --> 00:02:41,599
so the write down stands for clients can

68
00:02:41,599 --> 00:02:44,080
get optimal performance from the chicago

69
00:02:44,080 --> 00:02:47,760
site so in this case the average latency

70
00:02:47,760 --> 00:02:50,640
will be only 62 milliseconds if each

71
00:02:50,640 --> 00:02:52,879
client can select the site with minimal

72
00:02:52,879 --> 00:02:55,040
just minimal round trip time

73
00:02:55,040 --> 00:02:56,239
but

74
00:02:56,239 --> 00:02:58,400
we also deploy the same identical

75
00:02:58,400 --> 00:03:01,040
configuration

76
00:03:01,519 --> 00:03:04,640
and announce our experimental prefix to

77
00:03:04,640 --> 00:03:07,120
those three any car sites and we got the

78
00:03:07,120 --> 00:03:10,480
real catchment error like this

79
00:03:10,480 --> 00:03:12,560
so that means the majority of the

80
00:03:12,560 --> 00:03:16,080
clients actually was drawn

81
00:03:16,080 --> 00:03:18,480
was covered by singapore size catchment

82
00:03:18,480 --> 00:03:22,000
error so that will result in a very uh

83
00:03:22,000 --> 00:03:24,239
very hard problem so that's

84
00:03:24,239 --> 00:03:26,720
what about a very bad performance

85
00:03:26,720 --> 00:03:28,799
so in this case we also measure the

86
00:03:28,799 --> 00:03:30,720
performance of all clients around the

87
00:03:30,720 --> 00:03:32,799
world so that gave us an average

88
00:03:32,799 --> 00:03:34,400
long-term round-trip time for all

89
00:03:34,400 --> 00:03:35,599
clients

90
00:03:35,599 --> 00:03:38,879
that's 133 milliseconds that's almost

91
00:03:38,879 --> 00:03:40,959
twice as ideal case

92
00:03:40,959 --> 00:03:42,959
so this also tells us in the real

93
00:03:42,959 --> 00:03:44,720
anycast network

94
00:03:44,720 --> 00:03:46,640
the client does not necessarily

95
00:03:46,640 --> 00:03:49,360
select optimal uh any class size that

96
00:03:49,360 --> 00:03:51,440
means clients always reach far away

97
00:03:51,440 --> 00:03:52,400
sites

98
00:03:52,400 --> 00:03:54,480
so there have been several previous

99
00:03:54,480 --> 00:03:56,000
literatures

100
00:03:56,000 --> 00:03:58,319
also confirmed disk scenario

101
00:03:58,319 --> 00:04:00,480
so like three years ago at the sitcom

102
00:04:00,480 --> 00:04:03,120
lee at all uh claimed that

103
00:04:03,120 --> 00:04:06,480
around one-thirds of the dns queries

104
00:04:06,480 --> 00:04:08,400
actually suffered from serious anacostia

105
00:04:08,400 --> 00:04:10,319
inflation so that's

106
00:04:10,319 --> 00:04:12,560
so that's the thing we just discussed

107
00:04:12,560 --> 00:04:15,040
that's the like clients cannot always

108
00:04:15,040 --> 00:04:18,880
select the most efficient anchor sites

109
00:04:18,880 --> 00:04:21,440
and also uh calden

110
00:04:21,440 --> 00:04:23,520
and coke at al also

111
00:04:23,520 --> 00:04:26,080
confirmed that with the trace data from

112
00:04:26,080 --> 00:04:28,639
microsoft and cost cloud so they say

113
00:04:28,639 --> 00:04:31,919
that only 20 to 35 percent of users

114
00:04:31,919 --> 00:04:34,400
experience serious any cost inflation

115
00:04:34,400 --> 00:04:37,280
and there is also another work uh tell

116
00:04:37,280 --> 00:04:38,960
us how to measure

117
00:04:38,960 --> 00:04:43,040
the anycast catchment efficiently

118
00:04:43,040 --> 00:04:45,840
so here comes the question the challenge

119
00:04:45,840 --> 00:04:47,919
uh on how to improve the performance of

120
00:04:47,919 --> 00:04:51,360
anycast performance so

121
00:04:51,360 --> 00:04:53,199
at first a service provider need to

122
00:04:53,199 --> 00:04:55,759
select a subset of the anchor size to

123
00:04:55,759 --> 00:04:57,280
announce the end cut

124
00:04:57,280 --> 00:04:58,240
service

125
00:04:58,240 --> 00:05:00,639
but the problem is

126
00:05:00,639 --> 00:05:02,639
the bgp protocol you're usually

127
00:05:02,639 --> 00:05:04,720
determining a size

128
00:05:04,720 --> 00:05:06,160
catchment

129
00:05:06,160 --> 00:05:08,840
the problem is bgp is usually perform

130
00:05:08,840 --> 00:05:11,280
agnostic and

131
00:05:11,280 --> 00:05:13,360
that's just show that show us that

132
00:05:13,360 --> 00:05:15,600
increasing the number of sites does not

133
00:05:15,600 --> 00:05:18,720
always reduce latency and this is also

134
00:05:18,720 --> 00:05:20,080
confirmed by

135
00:05:20,080 --> 00:05:20,800
to

136
00:05:20,800 --> 00:05:23,600
several previous literatures

137
00:05:23,600 --> 00:05:26,479
so here comes the question in order to

138
00:05:26,479 --> 00:05:28,320
optimize the performance of anycast

139
00:05:28,320 --> 00:05:29,280
cloud

140
00:05:29,280 --> 00:05:31,600
we uh we need to answer this question

141
00:05:31,600 --> 00:05:33,840
how to choose a soft side from potential

142
00:05:33,840 --> 00:05:36,240
and cloud sites to minimize the client's

143
00:05:36,240 --> 00:05:39,039
latency and in order to do that we first

144
00:05:39,039 --> 00:05:40,960
need to solve the problem of how to

145
00:05:40,960 --> 00:05:43,680
estimate in latency and that require us

146
00:05:43,680 --> 00:05:47,199
to predict the catchment for any cons

147
00:05:47,199 --> 00:05:50,080
for any case networks

148
00:05:50,080 --> 00:05:52,479
so we will have a stronger approach that

149
00:05:52,479 --> 00:05:54,880
will solve this problem so first step

150
00:05:54,880 --> 00:05:57,840
we'll experiment all possible subsides

151
00:05:57,840 --> 00:06:00,160
of all available and car sites

152
00:06:00,160 --> 00:06:01,919
and then for each

153
00:06:01,919 --> 00:06:04,639
subside of the uh for each subside we'll

154
00:06:04,639 --> 00:06:06,400
deploy this configuration

155
00:06:06,400 --> 00:06:08,800
and also measure each size catchment and

156
00:06:08,800 --> 00:06:11,280
also average client

157
00:06:11,280 --> 00:06:13,919
average client latency and in the end we

158
00:06:13,919 --> 00:06:16,400
can just choose the subside with minimal

159
00:06:16,400 --> 00:06:19,280
average latency but this methodology

160
00:06:19,280 --> 00:06:21,600
have a very serious problem that is the

161
00:06:21,600 --> 00:06:24,240
scalability so the number of

162
00:06:24,240 --> 00:06:26,720
experiments we need to do in this stroma

163
00:06:26,720 --> 00:06:28,000
approach

164
00:06:28,000 --> 00:06:31,680
is exponential in the number of sites

165
00:06:31,680 --> 00:06:34,160
so in order to solve that problem we

166
00:06:34,160 --> 00:06:37,360
propose an option so any opt is a method

167
00:06:37,360 --> 00:06:39,840
to do any any

168
00:06:39,840 --> 00:06:42,240
custom network optimization follow a

169
00:06:42,240 --> 00:06:44,880
three-stage method so that is measure

170
00:06:44,880 --> 00:06:46,800
model and optimize

171
00:06:46,800 --> 00:06:48,800
so in the first step we'll measure a

172
00:06:48,800 --> 00:06:50,880
client's preference order between each

173
00:06:50,880 --> 00:06:52,960
pair of anika sites

174
00:06:52,960 --> 00:06:55,199
and based on this method we will

175
00:06:55,199 --> 00:06:57,599
consolidate consolidate those

176
00:06:57,599 --> 00:07:00,240
information into a linear order among

177
00:07:00,240 --> 00:07:02,400
all available anchor sites for each

178
00:07:02,400 --> 00:07:05,280
client and we can also measure

179
00:07:05,280 --> 00:07:06,240
the

180
00:07:06,240 --> 00:07:08,400
the wrong trip time from different

181
00:07:08,400 --> 00:07:11,199
clients to different anacost sites in a

182
00:07:11,199 --> 00:07:12,560
similar way

183
00:07:12,560 --> 00:07:14,240
and then we can model a client's brow

184
00:07:14,240 --> 00:07:16,720
selection behavior as a linear

185
00:07:16,720 --> 00:07:19,440
preference order

186
00:07:19,440 --> 00:07:21,280
and either end with both of those

187
00:07:21,280 --> 00:07:24,000
information i have just mentioned so one

188
00:07:24,000 --> 00:07:26,080
is a total order among all available

189
00:07:26,080 --> 00:07:28,080
sites and the other one is the wrong

190
00:07:28,080 --> 00:07:29,919
tree time from different clients to the

191
00:07:29,919 --> 00:07:32,319
uncut sites with those

192
00:07:32,319 --> 00:07:34,479
information we can just solve this

193
00:07:34,479 --> 00:07:37,520
problem in an optimization pro

194
00:07:37,520 --> 00:07:40,560
optimization way offline so that we can

195
00:07:40,560 --> 00:07:42,479
choose the optimal subside that can

196
00:07:42,479 --> 00:07:45,280
minimize the round trip time

197
00:07:45,280 --> 00:07:47,599
so first let me introduce what is the

198
00:07:47,599 --> 00:07:50,319
linear order we use in this case so at

199
00:07:50,319 --> 00:07:52,879
the beginning of this project we have a

200
00:07:52,879 --> 00:07:56,319
much smaller like ion cast network so

201
00:07:56,319 --> 00:07:59,039
that we can try every possible subsides

202
00:07:59,039 --> 00:08:01,360
of the end of the and potential anika

203
00:08:01,360 --> 00:08:02,879
sites so

204
00:08:02,879 --> 00:08:04,879
in that experiment we found that

205
00:08:04,879 --> 00:08:07,840
actually a majority of the clients

206
00:08:07,840 --> 00:08:09,680
select their

207
00:08:09,680 --> 00:08:12,879
anchor sites according to a linear order

208
00:08:12,879 --> 00:08:15,520
so take this graph as an example for one

209
00:08:15,520 --> 00:08:17,680
specific client here

210
00:08:17,680 --> 00:08:20,319
it will have three annika sites

211
00:08:20,319 --> 00:08:22,000
which will potentially announce the

212
00:08:22,000 --> 00:08:23,039
prefix

213
00:08:23,039 --> 00:08:25,680
and we tried all possible combinations

214
00:08:25,680 --> 00:08:28,080
of those sites and we found out actually

215
00:08:28,080 --> 00:08:30,319
the client selects the optimal

216
00:08:30,319 --> 00:08:33,440
catchment side following that

217
00:08:33,440 --> 00:08:35,919
linear order so that means the clients

218
00:08:35,919 --> 00:08:38,320
were preferred any car size a the most

219
00:08:38,320 --> 00:08:41,599
then follow the b and it does dislike

220
00:08:41,599 --> 00:08:43,919
the anchor side c the most

221
00:08:43,919 --> 00:08:47,680
so with this lead total order we can

222
00:08:47,680 --> 00:08:50,160
it will enable us to have the capability

223
00:08:50,160 --> 00:08:52,880
to predict the catchment site for any

224
00:08:52,880 --> 00:08:55,600
possible combination of those sites

225
00:08:55,600 --> 00:08:57,839
so for example if we only enable any

226
00:08:57,839 --> 00:09:00,800
class site a and anchor site c here

227
00:09:00,800 --> 00:09:03,440
the anycast c a will be selected in the

228
00:09:03,440 --> 00:09:04,320
end

229
00:09:04,320 --> 00:09:07,120
and if we only enable any customer b and

230
00:09:07,120 --> 00:09:08,399
anchor size c

231
00:09:08,399 --> 00:09:10,959
the b and car side b will be selected

232
00:09:10,959 --> 00:09:13,920
and if we enable all any car sites the

233
00:09:13,920 --> 00:09:16,080
most favorable one so that's any car

234
00:09:16,080 --> 00:09:18,959
side a will be selected

235
00:09:18,959 --> 00:09:20,800
so there have been

236
00:09:20,800 --> 00:09:23,440
there held several related work trying

237
00:09:23,440 --> 00:09:25,040
to control the catchment area

238
00:09:25,040 --> 00:09:28,240
proactively or doing some inference work

239
00:09:28,240 --> 00:09:30,240
to predict the catchment so the first

240
00:09:30,240 --> 00:09:33,600
one is azubi at all they proposed to use

241
00:09:33,600 --> 00:09:36,399
mpls based catchment control method

242
00:09:36,399 --> 00:09:39,680
to manually assign the ingress point to

243
00:09:39,680 --> 00:09:42,160
any sites which are cited into the

244
00:09:42,160 --> 00:09:44,399
single same and as

245
00:09:44,399 --> 00:09:45,839
manually

246
00:09:45,839 --> 00:09:48,480
and the other work is suspense

247
00:09:48,480 --> 00:09:50,880
at all they proposed a method to use

248
00:09:50,880 --> 00:09:53,440
public bgp fees and also to ask

249
00:09:53,440 --> 00:09:56,320
relationship topology to infer the

250
00:09:56,320 --> 00:09:59,440
catchment area for one specific as but

251
00:09:59,440 --> 00:10:01,040
our work here

252
00:10:01,040 --> 00:10:04,000
use a pro use measurement work conduct

253
00:10:04,000 --> 00:10:06,560
by ourselves to build the whole

254
00:10:06,560 --> 00:10:08,800
total order for each client and based on

255
00:10:08,800 --> 00:10:10,240
that total order we can make some

256
00:10:10,240 --> 00:10:13,279
prediction and also minimize and uh and

257
00:10:13,279 --> 00:10:16,320
cast round trip time latency

258
00:10:16,320 --> 00:10:18,160
so here

259
00:10:18,160 --> 00:10:20,240
let me introduce how to get the total

260
00:10:20,240 --> 00:10:23,680
order of the clients so we get we get

261
00:10:23,680 --> 00:10:25,680
the total order based on the paradise

262
00:10:25,680 --> 00:10:27,600
side comparison result

263
00:10:27,600 --> 00:10:30,160
so for the pairwise preference discovery

264
00:10:30,160 --> 00:10:32,480
we'll announce the same prefix

265
00:10:32,480 --> 00:10:35,279
to two of the available sites and after

266
00:10:35,279 --> 00:10:38,079
the bgp got convert for the internet the

267
00:10:38,079 --> 00:10:39,920
whole internet will be divided into two

268
00:10:39,920 --> 00:10:42,560
parts so each part will belong to just

269
00:10:42,560 --> 00:10:44,959
one size catchment so in this graph we

270
00:10:44,959 --> 00:10:47,519
can see client x belong to any class

271
00:10:47,519 --> 00:10:49,519
size 8 catchment and the other two

272
00:10:49,519 --> 00:10:51,440
belong to the other one

273
00:10:51,440 --> 00:10:54,640
and then we will send out smp package to

274
00:10:54,640 --> 00:10:57,040
all clients at the same time and based

275
00:10:57,040 --> 00:10:59,519
on the catchment areas the client will

276
00:10:59,519 --> 00:11:02,079
only reply the package to one separate

277
00:11:02,079 --> 00:11:03,680
specific tunnel

278
00:11:03,680 --> 00:11:06,640
so based on this we can see

279
00:11:06,640 --> 00:11:09,360
the request to client x will only return

280
00:11:09,360 --> 00:11:11,360
through the tunnel between and casa a

281
00:11:11,360 --> 00:11:14,000
and our orchestrator there and the other

282
00:11:14,000 --> 00:11:16,640
two will reply to snmp package in

283
00:11:16,640 --> 00:11:19,200
another way so based on that we all know

284
00:11:19,200 --> 00:11:22,000
for client x the paris comparison result

285
00:11:22,000 --> 00:11:24,320
is that the clan x will prefer and has

286
00:11:24,320 --> 00:11:26,959
any cut side a more than b but for the

287
00:11:26,959 --> 00:11:27,760
other

288
00:11:27,760 --> 00:11:29,680
two they will have

289
00:11:29,680 --> 00:11:32,000
another kind of preference order so that

290
00:11:32,000 --> 00:11:34,240
is they prefer anchor set b

291
00:11:34,240 --> 00:11:36,320
other than a

292
00:11:36,320 --> 00:11:38,560
so this will allow us to reduce number

293
00:11:38,560 --> 00:11:40,800
of experiments to just quadratic in the

294
00:11:40,800 --> 00:11:43,600
number of anchor sites rather than the

295
00:11:43,600 --> 00:11:46,240
exponential

296
00:11:47,200 --> 00:11:49,279
use that method we will get the total

297
00:11:49,279 --> 00:11:51,680
order of all clients but we still need

298
00:11:51,680 --> 00:11:53,920
to draw to get the wrong trip time from

299
00:11:53,920 --> 00:11:56,000
different client to the end class size

300
00:11:56,000 --> 00:11:57,600
to make the prediction

301
00:11:57,600 --> 00:11:58,560
so

302
00:11:58,560 --> 00:12:00,480
in order to get the round free time from

303
00:12:00,480 --> 00:12:03,040
different clients to the in-car sites

304
00:12:03,040 --> 00:12:06,000
they will announce and has prefix to one

305
00:12:06,000 --> 00:12:08,480
single and size so that means we'll

306
00:12:08,480 --> 00:12:11,839
announce the prefix in a unicast way and

307
00:12:11,839 --> 00:12:14,959
after the uh internet got converged all

308
00:12:14,959 --> 00:12:17,360
the clients will belong to the single

309
00:12:17,360 --> 00:12:19,519
sites catchment area and after that

310
00:12:19,519 --> 00:12:21,600
we'll send out smp package to our

311
00:12:21,600 --> 00:12:22,880
clients

312
00:12:22,880 --> 00:12:25,920
and the client's reply will

313
00:12:25,920 --> 00:12:28,560
will return back through the same tunnel

314
00:12:28,560 --> 00:12:30,959
then we can get the wrong trip time bus

315
00:12:30,959 --> 00:12:33,680
by subtracting the wrong total travel

316
00:12:33,680 --> 00:12:37,360
time with the tunnel travel time

317
00:12:37,360 --> 00:12:40,160
so in order to evaluate how many clients

318
00:12:40,160 --> 00:12:42,480
actually can have the

319
00:12:42,480 --> 00:12:44,880
total order we deployed the moderator

320
00:12:44,880 --> 00:12:47,440
and class network to evaluate this

321
00:12:47,440 --> 00:12:50,800
so we selected 15 sites around the globe

322
00:12:50,800 --> 00:12:53,360
considering both traffic concentration

323
00:12:53,360 --> 00:12:55,920
and also geographical distribution and

324
00:12:55,920 --> 00:12:58,560
we also have a auxiliary server that

325
00:12:58,560 --> 00:13:00,959
connects to all those 15 different anica

326
00:13:00,959 --> 00:13:03,440
sites and they built jre tunnel with

327
00:13:03,440 --> 00:13:06,800
those anchor sites and send out the

328
00:13:06,800 --> 00:13:10,000
bgp announcements and also snp packet to

329
00:13:10,000 --> 00:13:12,639
all those sites in order to measure the

330
00:13:12,639 --> 00:13:15,680
linear order and also round trip time

331
00:13:15,680 --> 00:13:18,000
so besides that we also selected more

332
00:13:18,000 --> 00:13:20,399
than 15 and three hundred different

333
00:13:20,399 --> 00:13:24,000
routers ip and all those uh routers ips

334
00:13:24,000 --> 00:13:26,079
covers more than twelve thousand

335
00:13:26,079 --> 00:13:29,120
different slash 24 network prefixes and

336
00:13:29,120 --> 00:13:31,600
the the all those ips cover more than

337
00:13:31,600 --> 00:13:32,880
five thousand and three hundred

338
00:13:32,880 --> 00:13:35,839
different axes

339
00:13:36,160 --> 00:13:39,120
so with this large skill we can get

340
00:13:39,120 --> 00:13:40,880
with this large-scale

341
00:13:40,880 --> 00:13:43,120
infrastructure we can get all the linear

342
00:13:43,120 --> 00:13:45,920
order for all 15 and cast sites for each

343
00:13:45,920 --> 00:13:48,560
client and also the round trip time so

344
00:13:48,560 --> 00:13:50,560
those two parts of the information will

345
00:13:50,560 --> 00:13:53,120
serve as the input impulse for the

346
00:13:53,120 --> 00:13:55,600
following optimization problem so it

347
00:13:55,600 --> 00:13:57,760
turns out that

348
00:13:57,760 --> 00:14:00,480
this optimization problem is actually

349
00:14:00,480 --> 00:14:02,880
just exactly the same simple facility

350
00:14:02,880 --> 00:14:05,440
location problem with clients preference

351
00:14:05,440 --> 00:14:08,560
order which is proposed around 35 years

352
00:14:08,560 --> 00:14:11,440
ago but this problem is

353
00:14:11,440 --> 00:14:14,560
proved to be np hard and do not have

354
00:14:14,560 --> 00:14:16,959
consistent polynomial time

355
00:14:16,959 --> 00:14:19,839
approximation solution but luckily

356
00:14:19,839 --> 00:14:22,000
for this modulated skill infrastructure

357
00:14:22,000 --> 00:14:24,480
like 15 anchor sites we can just solve

358
00:14:24,480 --> 00:14:28,399
this problem like offline

359
00:14:28,560 --> 00:14:29,440
so

360
00:14:29,440 --> 00:14:31,839
in order to just justify the existence

361
00:14:31,839 --> 00:14:34,079
of the linear order we also work out

362
00:14:34,079 --> 00:14:35,760
several different scenarios that will

363
00:14:35,760 --> 00:14:37,920
guarantee each client will have the

364
00:14:37,920 --> 00:14:40,480
linear order so there are two scenarios

365
00:14:40,480 --> 00:14:42,720
that will allow the clients to have a

366
00:14:42,720 --> 00:14:44,720
consistent linear order

367
00:14:44,720 --> 00:14:46,720
among available any class size so the

368
00:14:46,720 --> 00:14:48,720
first end scenario is the route

369
00:14:48,720 --> 00:14:50,800
selection based strictly based on the

370
00:14:50,800 --> 00:14:53,120
preference order among all available

371
00:14:53,120 --> 00:14:55,920
neighbors and the second scenario is

372
00:14:55,920 --> 00:14:58,480
we will only announce our prefix from a

373
00:14:58,480 --> 00:15:00,639
tier one trend provider and the

374
00:15:00,639 --> 00:15:02,880
following round selection uh strictly

375
00:15:02,880 --> 00:15:05,680
based on aspas and neighbor id so under

376
00:15:05,680 --> 00:15:06,720
those two

377
00:15:06,720 --> 00:15:08,079
scenarios

378
00:15:08,079 --> 00:15:10,079
the job selection is consistent with web

379
00:15:10,079 --> 00:15:12,959
free vgp routing model but they will

380
00:15:12,959 --> 00:15:15,360
still guarantee there will be a total

381
00:15:15,360 --> 00:15:17,600
linear order but we also found out that

382
00:15:17,600 --> 00:15:20,240
there are several counter cases a linear

383
00:15:20,240 --> 00:15:22,480
order may not exist for all value free

384
00:15:22,480 --> 00:15:25,760
bgp routing policies

385
00:15:25,760 --> 00:15:26,399
so

386
00:15:26,399 --> 00:15:29,680
uh in order to develop to get the most

387
00:15:29,680 --> 00:15:32,000
clients that have a linear order we have

388
00:15:32,000 --> 00:15:33,279
resolved a

389
00:15:33,279 --> 00:15:36,560
few different a few like different

390
00:15:36,560 --> 00:15:38,560
uh different problems so the first one

391
00:15:38,560 --> 00:15:40,240
is the bgp implementation of the tie

392
00:15:40,240 --> 00:15:42,959
braking with arrival time so on the left

393
00:15:42,959 --> 00:15:46,480
side it is the rfc file to describe how

394
00:15:46,480 --> 00:15:48,560
the route selection or tie breaking is

395
00:15:48,560 --> 00:15:49,360
done

396
00:15:49,360 --> 00:15:52,160
in the bgp specification it have it will

397
00:15:52,160 --> 00:15:54,880
follow a sequence of those all factors

398
00:15:54,880 --> 00:15:56,880
on the right but on the right side there

399
00:15:56,880 --> 00:15:57,920
are the

400
00:15:57,920 --> 00:16:00,000
cutting edge or state of art

401
00:16:00,000 --> 00:16:03,440
implementation of the bgp route bgp type

402
00:16:03,440 --> 00:16:04,720
route bgp

403
00:16:04,720 --> 00:16:07,120
tie breaking so we have saw that there

404
00:16:07,120 --> 00:16:09,440
are one more additional factors here so

405
00:16:09,440 --> 00:16:12,240
that is the routes arrival time so that

406
00:16:12,240 --> 00:16:14,639
means if all the above factors are all

407
00:16:14,639 --> 00:16:17,040
the same the routers there will just

408
00:16:17,040 --> 00:16:19,519
based on the arrival time to select the

409
00:16:19,519 --> 00:16:21,600
optimal pass

410
00:16:21,600 --> 00:16:23,920
so in order to solve this problem uh

411
00:16:23,920 --> 00:16:26,240
just we just announced the prefix from

412
00:16:26,240 --> 00:16:29,440
two different sites in both others

413
00:16:29,440 --> 00:16:31,600
so this have a huge influence on the

414
00:16:31,600 --> 00:16:33,839
clients that who can't have a total

415
00:16:33,839 --> 00:16:35,920
linear order so the right line here

416
00:16:35,920 --> 00:16:36,959
shows

417
00:16:36,959 --> 00:16:38,480
the portion of clients which will

418
00:16:38,480 --> 00:16:40,959
preserve a consistent linear order in

419
00:16:40,959 --> 00:16:43,759
the end for 15 sites if we announce them

420
00:16:43,759 --> 00:16:45,519
like similar to both sides

421
00:16:45,519 --> 00:16:47,040
simultaneously

422
00:16:47,040 --> 00:16:49,519
and the red the blue line shows if we

423
00:16:49,519 --> 00:16:52,160
use an order linear order the other

424
00:16:52,160 --> 00:16:54,160
announcement order what will be the

425
00:16:54,160 --> 00:16:56,240
portion of client that will keep that we

426
00:16:56,240 --> 00:16:58,320
found out that only 15 percent of

427
00:16:58,320 --> 00:17:00,399
clients will have a total linear order

428
00:17:00,399 --> 00:17:02,079
if we do not consider the

429
00:17:02,079 --> 00:17:05,199
announcement order but if we use other

430
00:17:05,199 --> 00:17:07,359
announcement nearly 90 percent of all

431
00:17:07,359 --> 00:17:09,520
clients will have the total linear order

432
00:17:09,520 --> 00:17:12,400
which will allow us to do a more precise

433
00:17:12,400 --> 00:17:14,959
uh estimate round-trip time estimation

434
00:17:14,959 --> 00:17:17,359
so the second problem is scalability so

435
00:17:17,359 --> 00:17:19,439
the number of experiments is quadratic

436
00:17:19,439 --> 00:17:21,599
in terms of size that's the best we can

437
00:17:21,599 --> 00:17:23,839
do with the current method but it's

438
00:17:23,839 --> 00:17:26,400
still a lot so for example if we use the

439
00:17:26,400 --> 00:17:29,919
15 size it will take like 210 different

440
00:17:29,919 --> 00:17:32,559
bgp experiments to finish all the to

441
00:17:32,559 --> 00:17:34,320
finish that

442
00:17:34,320 --> 00:17:37,280
so so that's a also a huge number so in

443
00:17:37,280 --> 00:17:39,840
order to resolve that problem we use a

444
00:17:39,840 --> 00:17:42,000
two level method so in the first level

445
00:17:42,000 --> 00:17:44,000
we just resolve the

446
00:17:44,000 --> 00:17:46,559
power s comparison among those tier one

447
00:17:46,559 --> 00:17:48,000
transit providers

448
00:17:48,000 --> 00:17:49,760
so in our 15

449
00:17:49,760 --> 00:17:52,080
different indica site we have six

450
00:17:52,080 --> 00:17:54,400
different tier one trend providers so

451
00:17:54,400 --> 00:17:56,640
that will cost us like 13 runs of

452
00:17:56,640 --> 00:17:58,720
different bgp experiments and in the

453
00:17:58,720 --> 00:18:01,280
second level we'll figure out how the

454
00:18:01,280 --> 00:18:04,799
intro as level uh but different sites

455
00:18:04,799 --> 00:18:06,960
preference order so that will bring us

456
00:18:06,960 --> 00:18:09,600
additional 13 different bgp

457
00:18:09,600 --> 00:18:11,520
experiments so in total it will cost

458
00:18:11,520 --> 00:18:14,960
just 43 bgp experiments compared with

459
00:18:14,960 --> 00:18:18,160
uh like 200 like several hundreds

460
00:18:18,160 --> 00:18:20,960
in the previous round so with all those

461
00:18:20,960 --> 00:18:23,039
like total order we have just discovered

462
00:18:23,039 --> 00:18:25,039
it will allow us to do a precise

463
00:18:25,039 --> 00:18:27,360
roundtrip estimation for those 15

464
00:18:27,360 --> 00:18:28,720
different clients

465
00:18:28,720 --> 00:18:31,360
so in this graph we showed how the

466
00:18:31,360 --> 00:18:34,080
absolute estimation arrow would be like

467
00:18:34,080 --> 00:18:36,799
so in this experiment we deployed 38

468
00:18:36,799 --> 00:18:38,880
different random bgp con

469
00:18:38,880 --> 00:18:40,480
configurations so that means different

470
00:18:40,480 --> 00:18:42,960
step size of the anchor sites and we

471
00:18:42,960 --> 00:18:45,200
deploy them and measure the actual

472
00:18:45,200 --> 00:18:47,360
rendering time and we compare it with

473
00:18:47,360 --> 00:18:49,840
the predicted round trip time

474
00:18:49,840 --> 00:18:52,960
then we see that nearly 90 percent of

475
00:18:52,960 --> 00:18:56,160
all the random configuration will have a

476
00:18:56,160 --> 00:18:58,320
absolute estimate a estimation arrow

477
00:18:58,320 --> 00:19:00,960
less than eight milliseconds

478
00:19:00,960 --> 00:19:03,679
we also compare the performance uh with

479
00:19:03,679 --> 00:19:06,080
optimal configuration we got from the

480
00:19:06,080 --> 00:19:09,520
offline optimization process so any opt

481
00:19:09,520 --> 00:19:12,480
is the optimal configuration we got from

482
00:19:12,480 --> 00:19:14,320
the offline uh

483
00:19:14,320 --> 00:19:17,039
explicit immunization it gave us an

484
00:19:17,039 --> 00:19:19,360
answer with just 12 sites and we also

485
00:19:19,360 --> 00:19:21,600
select 12 sites greatly based on the

486
00:19:21,600 --> 00:19:25,039
unicast roundtrip time so it will

487
00:19:25,039 --> 00:19:26,960
improve the median round trade time by

488
00:19:26,960 --> 00:19:29,120
38

489
00:19:29,120 --> 00:19:31,520
millisecond and we also compare with the

490
00:19:31,520 --> 00:19:34,000
configuration which includes all subs

491
00:19:34,000 --> 00:19:36,160
all available and cloud sites and

492
00:19:36,160 --> 00:19:38,160
compared with that it will reduce the

493
00:19:38,160 --> 00:19:40,000
round-trip median round-trip time by 14

494
00:19:40,000 --> 00:19:42,320
milliseconds

495
00:19:42,320 --> 00:19:45,200
so it uh transit provider is just one

496
00:19:45,200 --> 00:19:47,840
part we also have a large volume of

497
00:19:47,840 --> 00:19:50,640
purine links so here we also measure the

498
00:19:50,640 --> 00:19:52,960
pure lens coverage so from the cdf we

499
00:19:52,960 --> 00:19:55,360
can see

500
00:19:55,600 --> 00:19:57,600
around eighty percent of our pure link

501
00:19:57,600 --> 00:19:58,760
just cover

502
00:19:58,760 --> 00:20:01,679
22.5 percent of all

503
00:20:01,679 --> 00:20:03,440
customer

504
00:20:03,440 --> 00:20:05,360
and the different peer link will bring

505
00:20:05,360 --> 00:20:06,960
different uh

506
00:20:06,960 --> 00:20:08,880
impact to the overall performance so

507
00:20:08,880 --> 00:20:11,520
from this graph we add one single period

508
00:20:11,520 --> 00:20:14,080
link to the any opt configuration and it

509
00:20:14,080 --> 00:20:16,400
will give us different influence on the

510
00:20:16,400 --> 00:20:18,240
average rendering time so from this

511
00:20:18,240 --> 00:20:20,480
graph we can see the

512
00:20:20,480 --> 00:20:22,960
impact is not uniformly so several

513
00:20:22,960 --> 00:20:25,520
configuration can even

514
00:20:25,520 --> 00:20:26,320
like

515
00:20:26,320 --> 00:20:28,640
bring worse com worse influence on the

516
00:20:28,640 --> 00:20:30,400
average long-term time

517
00:20:30,400 --> 00:20:33,039
and we also compare with other several

518
00:20:33,039 --> 00:20:35,919
peering configurations so

519
00:20:35,919 --> 00:20:38,240
the purple lines here shows any opt

520
00:20:38,240 --> 00:20:39,760
configuration

521
00:20:39,760 --> 00:20:42,320
plus the benefit appears so that means

522
00:20:42,320 --> 00:20:44,799
the peering links can guarantee to

523
00:20:44,799 --> 00:20:47,200
improve the average average round trip

524
00:20:47,200 --> 00:20:49,280
time and we also include all peering

525
00:20:49,280 --> 00:20:52,080
links so from here we can see

526
00:20:52,080 --> 00:20:55,280
uh if we bring on all pure links it can

527
00:20:55,280 --> 00:20:57,360
actually improve the performance by

528
00:20:57,360 --> 00:20:58,720
eight seven

529
00:20:58,720 --> 00:21:00,320
milliseconds

530
00:21:00,320 --> 00:21:01,600
um

531
00:21:01,600 --> 00:21:03,919
so for the contribution of this project

532
00:21:03,919 --> 00:21:06,880
so in this project we proposed we

533
00:21:06,880 --> 00:21:09,440
proposed the linear order assumption and

534
00:21:09,440 --> 00:21:12,159
justified this assumption with empirical

535
00:21:12,159 --> 00:21:13,600
evidence and also selective

536
00:21:13,600 --> 00:21:15,039
justification

537
00:21:15,039 --> 00:21:17,360
and we also build up an ops which is a

538
00:21:17,360 --> 00:21:19,760
system to predict the end cast catchment

539
00:21:19,760 --> 00:21:21,919
and also optimize any custom

540
00:21:21,919 --> 00:21:23,200
configuration

541
00:21:23,200 --> 00:21:25,280
and we also provide the evaluation with

542
00:21:25,280 --> 00:21:27,120
the moderate and cost network and a

543
00:21:27,120 --> 00:21:29,360
large-scale

544
00:21:29,360 --> 00:21:30,960
client sites

545
00:21:30,960 --> 00:21:33,520
and but there are also several other

546
00:21:33,520 --> 00:21:36,080
future works for this project so first

547
00:21:36,080 --> 00:21:38,559
um it's very hard to adapt this

548
00:21:38,559 --> 00:21:41,039
any option to larger and custom

549
00:21:41,039 --> 00:21:43,440
network for example akamai dns have

550
00:21:43,440 --> 00:21:46,000
hundreds of sites around the world but

551
00:21:46,000 --> 00:21:47,840
pairwise are just two level methods that

552
00:21:47,840 --> 00:21:50,559
can consume too much time to finish this

553
00:21:50,559 --> 00:21:51,840
and

554
00:21:51,840 --> 00:21:53,840
in this project we only considered round

555
00:21:53,840 --> 00:21:56,640
tree time as objective but sometimes for

556
00:21:56,640 --> 00:21:58,799
any kind of services robustness and also

557
00:21:58,799 --> 00:22:01,440
load balance can be also very important

558
00:22:01,440 --> 00:22:02,559
for the

559
00:22:02,559 --> 00:22:05,200
sla and also

560
00:22:05,200 --> 00:22:07,600
for the combination combinatorial

561
00:22:07,600 --> 00:22:10,240
problem for the hearing links

562
00:22:10,240 --> 00:22:12,799
we can we still cannot achieve accurate

563
00:22:12,799 --> 00:22:15,039
prediction for that

564
00:22:15,039 --> 00:22:16,799
so that's all for my

565
00:22:16,799 --> 00:22:20,000
uh talk here i'm very happy to take any

566
00:22:20,000 --> 00:22:23,480
any questions

567
00:22:34,480 --> 00:22:36,799
thank you

568
00:22:37,360 --> 00:22:38,559
thank you shane

569
00:22:38,559 --> 00:22:39,520
um

570
00:22:39,520 --> 00:22:41,600
as as you all can see

571
00:22:41,600 --> 00:22:44,960
shane's advisors are joining us now

572
00:22:44,960 --> 00:22:47,280
bruce and zowie

573
00:22:47,280 --> 00:22:50,080
from boston and durham north carolina

574
00:22:50,080 --> 00:22:51,280
yeah

575
00:22:51,280 --> 00:22:53,840
um any we have one question from the

576
00:22:53,840 --> 00:22:56,559
audience go ahead

577
00:22:59,280 --> 00:23:00,720
mike

578
00:23:00,720 --> 00:23:02,960
hello there we go robert story from

579
00:23:02,960 --> 00:23:05,840
uscisi

580
00:23:05,840 --> 00:23:07,440
it would probably

581
00:23:07,440 --> 00:23:09,520
explode your number of experiments but

582
00:23:09,520 --> 00:23:11,520
did you look at doing any traffic

583
00:23:11,520 --> 00:23:12,799
engineering

584
00:23:12,799 --> 00:23:15,280
with any of the announcements uh like

585
00:23:15,280 --> 00:23:17,600
pre-pending or communities to restrict

586
00:23:17,600 --> 00:23:19,200
advertisements

587
00:23:19,200 --> 00:23:20,559
yeah

588
00:23:20,559 --> 00:23:23,600
yeah now that's a very good question so

589
00:23:23,600 --> 00:23:24,640
uh

590
00:23:24,640 --> 00:23:26,320
the community number and also traffic

591
00:23:26,320 --> 00:23:28,720
engineering techniques can influence

592
00:23:28,720 --> 00:23:31,520
this result but

593
00:23:31,520 --> 00:23:34,640
that's the parts usually

594
00:23:34,640 --> 00:23:37,440
lies along the line so which we could

595
00:23:37,440 --> 00:23:38,960
not control

596
00:23:38,960 --> 00:23:41,520
so because in in this project we

597
00:23:41,520 --> 00:23:43,360
aim to proactively

598
00:23:43,360 --> 00:23:44,480
uh

599
00:23:44,480 --> 00:23:45,919
optimize the performance without

600
00:23:45,919 --> 00:23:48,240
cooperation with any other parts

601
00:23:48,240 --> 00:23:50,559
so that should be the next step we we

602
00:23:50,559 --> 00:23:52,000
should look into

603
00:23:52,000 --> 00:23:53,679
thanks

604
00:23:53,679 --> 00:23:56,640
we have one online question here from

605
00:23:56,640 --> 00:23:58,880
we

606
00:23:58,960 --> 00:24:03,360
so how many bgp experiences experience

607
00:24:03,360 --> 00:24:06,159
will trigger bgp route dampening

608
00:24:06,159 --> 00:24:07,760
and how do you resolve that

609
00:24:07,760 --> 00:24:09,600
yeah yeah that's also a very good

610
00:24:09,600 --> 00:24:11,200
question so because

611
00:24:11,200 --> 00:24:14,320
uh frequent bgp change or updates will

612
00:24:14,320 --> 00:24:17,600
trigger the raw damping bgp raw damping

613
00:24:17,600 --> 00:24:21,279
which will uh influence the result so as

614
00:24:21,279 --> 00:24:24,159
in in in my previous example for the 15

615
00:24:24,159 --> 00:24:28,080
sites it will take 210 rounds to finish

616
00:24:28,080 --> 00:24:29,679
all the experiments

617
00:24:29,679 --> 00:24:32,640
so if we up if we do not insert like

618
00:24:32,640 --> 00:24:34,720
spacing into them actually they will

619
00:24:34,720 --> 00:24:35,840
actually

620
00:24:35,840 --> 00:24:38,000
trigger this phenomenon so in order to

621
00:24:38,000 --> 00:24:40,000
resolve this problem we

622
00:24:40,000 --> 00:24:41,039
uh

623
00:24:41,039 --> 00:24:42,000
we

624
00:24:42,000 --> 00:24:43,279
wait for

625
00:24:43,279 --> 00:24:46,159
one hour to let the whole bgp to

626
00:24:46,159 --> 00:24:49,039
converge and after that we'll reset that

627
00:24:49,039 --> 00:24:51,760
prefix that means clean uh

628
00:24:51,760 --> 00:24:54,240
withdraw the prefix from the internet

629
00:24:54,240 --> 00:24:55,919
and let the

630
00:24:55,919 --> 00:24:58,080
whole pgp system cool down and in the

631
00:24:58,080 --> 00:25:00,480
next round we'll do another new

632
00:25:00,480 --> 00:25:03,039
experiments

633
00:25:06,559 --> 00:25:08,799
excellent

634
00:25:08,799 --> 00:25:11,919
any other questions from the audience or

635
00:25:11,919 --> 00:25:13,600
online

636
00:25:13,600 --> 00:25:15,679
about our virtual visitors do you have

637
00:25:15,679 --> 00:25:17,440
any questions or anything you'd like to

638
00:25:17,440 --> 00:25:19,450
add nice job shane

639
00:25:19,450 --> 00:25:22,000
[Laughter]

640
00:25:22,000 --> 00:25:24,159
uh if we can get a round of applause for

641
00:25:24,159 --> 00:25:25,520
shane and

642
00:25:25,520 --> 00:25:27,679
his advisors

643
00:25:27,679 --> 00:25:31,799
thank you thank you thank you

644
00:25:32,440 --> 00:25:36,739
[Music]

