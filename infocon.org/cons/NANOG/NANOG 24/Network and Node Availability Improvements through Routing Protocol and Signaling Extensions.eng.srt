1
00:00:00,350 --> 00:00:05,040
thank you very much my name is David

2
00:00:02,639 --> 00:00:08,039
Ward I<font color="#E5E5E5"> work for cisco systems but this</font>

3
00:00:05,040 --> 00:00:09,690
morning<font color="#CCCCCC"> I'd like to represent basically</font>

4
00:00:08,039 --> 00:00:12,268
the community<font color="#E5E5E5"> of folks who work on</font>

5
00:00:09,690 --> 00:00:13,410
routing protocols and signaling

6
00:00:12,269 --> 00:00:15,750
protocols because there's<font color="#E5E5E5"> been an</font>

7
00:00:13,410 --> 00:00:18,930
emerging trend over the last four years

8
00:00:15,750 --> 00:00:21,300
on a promise made about 15 years<font color="#CCCCCC"> ago</font>

9
00:00:18,930 --> 00:00:24,000
that routing a signaling<font color="#E5E5E5"> protocol to be</font>

10
00:00:21,300 --> 00:00:27,019
a highly<font color="#CCCCCC"> available over</font><font color="#E5E5E5"> the last four</font>

11
00:00:24,000 --> 00:00:29,698
years in a number of groups at the IETF

12
00:00:27,019 --> 00:00:31,259
again this common threat has emerged but

13
00:00:29,699 --> 00:00:32,309
<font color="#E5E5E5">it's been difficult to find its way</font>

14
00:00:31,260 --> 00:00:35,309
through<font color="#E5E5E5"> because there hasn't been a</font>

15
00:00:32,308 --> 00:00:36,899
unified discussion on the topic so what

16
00:00:35,309 --> 00:00:38,430
I'd like<font color="#E5E5E5"> to do is talk to</font><font color="#CCCCCC"> you about a</font>

17
00:00:36,899 --> 00:00:40,800
non-stop boarding highly available

18
00:00:38,430 --> 00:00:44,190
routing and signaling protocols by

19
00:00:40,800 --> 00:00:46,078
describing the problem presenting the

20
00:00:44,190 --> 00:00:48,780
solution that's of emerging because it

21
00:00:46,079 --> 00:00:50,879
is a common solution throughout being

22
00:00:48,780 --> 00:00:54,420
applied to<font color="#E5E5E5"> all the protocols clock</font>

23
00:00:50,879 --> 00:00:57,570
specific without<font color="#E5E5E5"> BGP the ibps multicast</font>

24
00:00:54,420 --> 00:00:59,670
mpls a bit of infrastructure because

25
00:00:57,570 --> 00:01:02,309
it's not<font color="#CCCCCC"> just all</font><font color="#E5E5E5"> about the protocols</font>

26
00:00:59,670 --> 00:01:03,930
themselves but overall what I want to

27
00:01:02,309 --> 00:01:05,759
<font color="#E5E5E5">talk about is not how the bits and bytes</font>

28
00:01:03,930 --> 00:01:07,260
are lining up in the protocol headers or

29
00:01:05,760 --> 00:01:09,270
whatever the<font color="#CCCCCC"> case might be but in fact</font>

30
00:01:07,260 --> 00:01:10,710
<font color="#E5E5E5">what is going to happen</font><font color="#CCCCCC"> to their</font>

31
00:01:09,270 --> 00:01:13,439
networks what your customers are going

32
00:01:10,710 --> 00:01:16,530
<font color="#E5E5E5">to see and what this impact is going</font><font color="#CCCCCC"> to</font>

33
00:01:13,439 --> 00:01:19,048
have on<font color="#CCCCCC"> your network in general overall</font>

34
00:01:16,530 --> 00:01:20,850
<font color="#E5E5E5">the</font><font color="#CCCCCC"> problem can be stated that we need</font>

35
00:01:19,049 --> 00:01:22,619
<font color="#CCCCCC">to increase</font><font color="#E5E5E5"> network and note</font>

36
00:01:20,850 --> 00:01:24,630
availability during planned and

37
00:01:22,619 --> 00:01:27,990
unplanned software restart or hardware

38
00:01:24,630 --> 00:01:30,149
changes is the<font color="#E5E5E5"> period that we've been in</font>

39
00:01:27,990 --> 00:01:32,640
right now is that upgrade and downgrade

40
00:01:30,150 --> 00:01:35,180
of software is very<font color="#E5E5E5"> high impact all</font>

41
00:01:32,640 --> 00:01:37,490
traffic goes around a particular node

42
00:01:35,180 --> 00:01:40,409
but and the router stops functioning

43
00:01:37,490 --> 00:01:42,119
packets<font color="#E5E5E5"> stop flowing instead of non-stop</font>

44
00:01:40,409 --> 00:01:43,500
boarding there's full stop forwarding in

45
00:01:42,119 --> 00:01:46,020
the router itself and in the network

46
00:01:43,500 --> 00:01:48,090
this apology change can be seen across

47
00:01:46,020 --> 00:01:50,080
the<font color="#E5E5E5"> network regardless of how</font><font color="#CCCCCC"> long the</font>

48
00:01:48,090 --> 00:01:52,600
duration might actually

49
00:01:50,080 --> 00:01:54,280
entail route we're going to fly through

50
00:01:52,600 --> 00:01:55,929
<font color="#E5E5E5">the network and external to your network</font>

51
00:01:54,280 --> 00:01:58,060
potentially there<font color="#E5E5E5"> will be traffic</font>

52
00:01:55,930 --> 00:02:00,070
oscillations as you know as a mole goes

53
00:01:58,060 --> 00:02:01,780
down your fabric<font color="#CCCCCC"> every route around that</font>

54
00:02:00,070 --> 00:02:03,699
you have to engineer for the<font color="#CCCCCC"> traffic</font>

55
00:02:01,780 --> 00:02:05,140
oscillation and the increased load

56
00:02:03,700 --> 00:02:07,210
across<font color="#CCCCCC"> the links that</font><font color="#E5E5E5"> were not</font>

57
00:02:05,140 --> 00:02:09,340
originally necessarily engineered to

58
00:02:07,210 --> 00:02:11,250
handle that particular load or<font color="#E5E5E5"> spike</font>

59
00:02:09,340 --> 00:02:14,500
during the planned or unplanned outage

60
00:02:11,250 --> 00:02:17,170
also as we all know network Nevil soda

61
00:02:14,500 --> 00:02:19,210
coming in<font color="#E5E5E5"> crystal complex and blanks and</font>

62
00:02:17,170 --> 00:02:20,619
duration of maintenance windows is

63
00:02:19,210 --> 00:02:22,090
getting shorter and shorter and<font color="#E5E5E5"> the</font>

64
00:02:20,620 --> 00:02:24,550
amount of<font color="#E5E5E5"> work that needs to get done as</font>

65
00:02:22,090 --> 00:02:26,170
never become more complex gets longer

66
00:02:24,550 --> 00:02:27,550
and longer and so some of these

67
00:02:26,170 --> 00:02:31,208
extensions might actually begin to

68
00:02:27,550 --> 00:02:33,459
alleviate a particular problem so

69
00:02:31,209 --> 00:02:36,550
overall<font color="#E5E5E5"> the potential solution can</font>

70
00:02:33,459 --> 00:02:38,440
really be summed up effectively in my

71
00:02:36,550 --> 00:02:41,620
<font color="#E5E5E5">first bullet here which is</font><font color="#CCCCCC"> that you are</font>

72
00:02:38,440 --> 00:02:44,620
attempting now to recover state from

73
00:02:41,620 --> 00:02:47,230
your network<font color="#CCCCCC"> spears and adjacencies you</font>

74
00:02:44,620 --> 00:02:48,970
can do a bit of optimization by

75
00:02:47,230 --> 00:02:51,429
comparing with a local checkpoint or a

76
00:02:48,970 --> 00:02:54,280
local state cash<font color="#CCCCCC"> or what the pier state</font>

77
00:02:51,430 --> 00:02:56,410
was before you did the restart as and

78
00:02:54,280 --> 00:02:58,660
set some timing variables but also

79
00:02:56,410 --> 00:03:01,450
what's key is that as it's been

80
00:02:58,660 --> 00:03:04,510
specified you do not<font color="#E5E5E5"> have to try and</font>

81
00:03:01,450 --> 00:03:06,369
keep<font color="#E5E5E5"> TCP or transport state during the</font>

82
00:03:04,510 --> 00:03:08,410
outage duration instead you put the

83
00:03:06,370 --> 00:03:10,600
peers into a new state thus making it

84
00:03:08,410 --> 00:03:11,890
easier to develop and deploy in your

85
00:03:10,600 --> 00:03:15,609
network but<font color="#E5E5E5"> it is something you</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to</font>

86
00:03:11,890 --> 00:03:17,768
<font color="#E5E5E5">take notice of because in the past a</font>

87
00:03:15,610 --> 00:03:20,950
number of potential customers<font color="#CCCCCC"> of yours</font>

88
00:03:17,769 --> 00:03:22,660
would take a look at the BGP<font color="#E5E5E5"> neighbors</font>

89
00:03:20,950 --> 00:03:23,920
state and if it<font color="#E5E5E5"> went into</font><font color="#CCCCCC"> down state</font>

90
00:03:22,660 --> 00:03:25,780
they<font color="#CCCCCC"> would plan that as an outage</font>

91
00:03:23,920 --> 00:03:28,030
because of course in the past pack of

92
00:03:25,780 --> 00:03:29,350
southpoint now there's this new

93
00:03:28,030 --> 00:03:31,720
intermediate state which I'll describe

94
00:03:29,350 --> 00:03:35,440
to you in which packets keep flowing but

95
00:03:31,720 --> 00:03:37,930
the state does transition so the second

96
00:03:35,440 --> 00:03:39,730
point is that of course it has to<font color="#E5E5E5"> be</font>

97
00:03:37,930 --> 00:03:42,700
negotiated across your network because

98
00:03:39,730 --> 00:03:45,100
we can't just have<font color="#E5E5E5"> each one introduced</font>

99
00:03:42,700 --> 00:03:47,109
this this new feature through a flag day

100
00:03:45,100 --> 00:03:50,739
also<font color="#CCCCCC"> you have to</font><font color="#E5E5E5"> be able to enforce</font>

101
00:03:47,110 --> 00:03:53,940
migrate router to router and peer to

102
00:03:50,739 --> 00:03:57,030
peer relationships to handle this

103
00:03:53,940 --> 00:03:59,160
the new off in the<font color="#E5E5E5"> future so we've</font>

104
00:03:57,030 --> 00:04:01,050
<font color="#CCCCCC">non-stop boarding basically the point</font><font color="#E5E5E5"> is</font>

105
00:03:59,160 --> 00:04:04,079
that service level agreements<font color="#E5E5E5"> for packet</font>

106
00:04:01,050 --> 00:04:05,340
flows and we preserve there's no sudden

107
00:04:04,080 --> 00:04:07,860
oscillation of<font color="#E5E5E5"> the traffic in the</font>

108
00:04:05,340 --> 00:04:10,650
network as<font color="#CCCCCC"> I mentioned but</font><font color="#E5E5E5"> again during</font>

109
00:04:07,860 --> 00:04:13,140
state<font color="#E5E5E5"> and adjacency state does change no</font>

110
00:04:10,650 --> 00:04:15,630
flapping routes necessarily across the

111
00:04:13,140 --> 00:04:18,419
peering points whether it's external<font color="#CCCCCC"> BGP</font>

112
00:04:15,630 --> 00:04:22,370
or internal DVD and then the fifth point

113
00:04:18,420 --> 00:04:25,680
on this slide is that naturally enforce

114
00:04:22,370 --> 00:04:27,240
multicast unicast and mpls all have have

115
00:04:25,680 --> 00:04:29,550
specific approaches to this particular

116
00:04:27,240 --> 00:04:31,440
problem because they have very different

117
00:04:29,550 --> 00:04:33,360
networks characteristics and so

118
00:04:31,440 --> 00:04:36,660
different<font color="#E5E5E5"> solutions emerge for the</font>

119
00:04:33,360 --> 00:04:39,900
different technologies and the<font color="#CCCCCC"> solutions</font>

120
00:04:36,660 --> 00:04:42,720
so moving<font color="#CCCCCC"> forward the potential solution</font>

121
00:04:39,900 --> 00:04:44,750
you're going to see also that<font color="#CCCCCC"> the key is</font>

122
00:04:42,720 --> 00:04:48,240
<font color="#CCCCCC">how long it takes to detect the outage</font>

123
00:04:44,750 --> 00:04:51,030
restart the<font color="#E5E5E5"> process</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> board Rican and</font>

124
00:04:48,240 --> 00:04:53,340
reconvert within a specified amount of

125
00:04:51,030 --> 00:04:55,530
down time that is configurable not only

126
00:04:53,340 --> 00:04:57,719
<font color="#E5E5E5">can it work within as you'll see</font><font color="#CCCCCC"> that</font>

127
00:04:55,530 --> 00:04:59,969
specified timers of downtime for each

128
00:04:57,720 --> 00:05:01,470
protocol whether dynamic routing horse

129
00:04:59,970 --> 00:05:03,090
tingling but<font color="#E5E5E5"> also it has to be</font>

130
00:05:01,470 --> 00:05:06,780
overridden by what you want to have your

131
00:05:03,090 --> 00:05:09,150
network do and so will see that this is

132
00:05:06,780 --> 00:05:10,650
configurable as well clearly we had to

133
00:05:09,150 --> 00:05:12,900
handle the cases<font color="#E5E5E5"> of when non-stop</font>

134
00:05:10,650 --> 00:05:15,840
boarding and extensions these protocols

135
00:05:12,900 --> 00:05:17,940
have<font color="#E5E5E5"> to be aborted in all</font><font color="#CCCCCC"> cases whether</font>

136
00:05:15,840 --> 00:05:19,260
its potential multiple planned or

137
00:05:17,940 --> 00:05:21,840
unplanned failures or whatever the case

138
00:05:19,260 --> 00:05:23,190
<font color="#E5E5E5">could be it has to you have to have the</font>

139
00:05:21,840 --> 00:05:24,539
control to be able to afford<font color="#E5E5E5"> this</font>

140
00:05:23,190 --> 00:05:27,719
feature as it might not be<font color="#E5E5E5"> the right</font>

141
00:05:24,540 --> 00:05:30,210
<font color="#E5E5E5">things in your network also what has</font>

142
00:05:27,720 --> 00:05:32,400
been attempted to to occur by the

143
00:05:30,210 --> 00:05:35,280
protocol developers is that there are

144
00:05:32,400 --> 00:05:37,020
both in too many cases protocol

145
00:05:35,280 --> 00:05:38,760
extensions that are not required to

146
00:05:37,020 --> 00:05:40,380
achieve non-stop boring high variability

147
00:05:38,760 --> 00:05:44,159
and I'll walk through an example of

148
00:05:40,380 --> 00:05:46,469
those as well of<font color="#E5E5E5"> course or in general</font>

149
00:05:44,160 --> 00:05:49,440
those that do require protocol

150
00:05:46,470 --> 00:05:51,419
extensions<font color="#CCCCCC"> over time are generally made</font>

151
00:05:49,440 --> 00:05:53,250
because convergence properties are in

152
00:05:51,419 --> 00:05:54,729
fact better by making this<font color="#E5E5E5"> extension so</font>

153
00:05:53,250 --> 00:05:57,759
<font color="#E5E5E5">I'll describe those of it as well as</font>

154
00:05:54,729 --> 00:05:59,169
<font color="#E5E5E5">will you do another key thing is that we</font>

155
00:05:57,759 --> 00:06:00,909
don't<font color="#E5E5E5"> want to have to carry more</font>

156
00:05:59,169 --> 00:06:02,680
information in the update packets

157
00:06:00,909 --> 00:06:04,539
between peers or between adjacencies

158
00:06:02,680 --> 00:06:05,589
we're<font color="#E5E5E5"> already worried about convergence</font>

159
00:06:04,539 --> 00:06:07,058
time we're already worried about

160
00:06:05,589 --> 00:06:09,039
increasing size of packets and

161
00:06:07,059 --> 00:06:10,990
increasing<font color="#CCCCCC"> load and we don't want a</font>

162
00:06:09,039 --> 00:06:13,449
future like this to necessarily require

163
00:06:10,990 --> 00:06:16,270
more compute I'm or more load upon the

164
00:06:13,449 --> 00:06:18,099
fears that of public you may have to

165
00:06:16,270 --> 00:06:19,628
spare at router capabilities that's

166
00:06:18,099 --> 00:06:23,050
overloading once different router or

167
00:06:19,629 --> 00:06:25,990
another also the last<font color="#E5E5E5"> one related to the</font>

168
00:06:23,050 --> 00:06:28,059
previous topic is that we don't<font color="#E5E5E5"> want the</font>

169
00:06:25,990 --> 00:06:30,819
new updates<font color="#E5E5E5"> links eight announcements or</font>

170
00:06:28,059 --> 00:06:32,469
promoted packets have to change their

171
00:06:30,819 --> 00:06:34,330
stuffing properties in other words we

172
00:06:32,469 --> 00:06:36,370
don't want to necessarily now have one

173
00:06:34,330 --> 00:06:38,080
prefix for update packet or something

174
00:06:36,370 --> 00:06:40,360
which would again increased<font color="#CCCCCC"> loading your</font>

175
00:06:38,080 --> 00:06:42,938
network unnecessarily to to drive<font color="#E5E5E5"> this</font>

176
00:06:40,360 --> 00:06:44,379
<font color="#E5E5E5">feature at the same time we do want the</font>

177
00:06:42,939 --> 00:06:46,149
<font color="#CCCCCC">ability to be able to control this on a</font>

178
00:06:44,379 --> 00:06:49,509
per address-family sub<font color="#CCCCCC"> address-family</font>

179
00:06:46,149 --> 00:06:51,249
<font color="#E5E5E5">and mpls characteristics and</font><font color="#CCCCCC"> use of a</font>

180
00:06:49,509 --> 00:06:53,349
packet so that way you can once again

181
00:06:51,249 --> 00:06:55,419
control even further what you<font color="#E5E5E5"> want to</font>

182
00:06:53,349 --> 00:06:58,599
have non stop forwarding enabled and

183
00:06:55,419 --> 00:07:01,149
what you want<font color="#E5E5E5"> to be highly available so</font>

184
00:06:58,599 --> 00:07:03,339
let me<font color="#E5E5E5"> describe what you'll see in BGP</font>

185
00:07:01,149 --> 00:07:05,289
when you turn on this particular feature

186
00:07:03,339 --> 00:07:06,909
and what it looks like and I'll walk

187
00:07:05,289 --> 00:07:10,419
<font color="#E5E5E5">through what it's what you see on a</font>

188
00:07:06,909 --> 00:07:11,529
receiving peer who receives a i'll be

189
00:07:10,419 --> 00:07:13,240
back<font color="#E5E5E5"> message or a graceful restart</font>

190
00:07:11,529 --> 00:07:15,580
message and what you'll see<font color="#CCCCCC"> on the</font>

191
00:07:13,240 --> 00:07:16,930
restarting gear and then we'll go a bit

192
00:07:15,580 --> 00:07:21,128
further into<font color="#CCCCCC"> the other protocols and</font>

193
00:07:16,930 --> 00:07:25,089
<font color="#CCCCCC">infrastructure so the goals that we want</font>

194
00:07:21,129 --> 00:07:26,740
can have for bgp and its behavior is

195
00:07:25,089 --> 00:07:28,240
that the routing table table is

196
00:07:26,740 --> 00:07:30,939
recoverable from peers without keeping

197
00:07:28,240 --> 00:07:33,459
tcp<font color="#CCCCCC"> state whatsoever post state and</font>

198
00:07:30,939 --> 00:07:35,319
transport state should be and is able to

199
00:07:33,459 --> 00:07:38,020
<font color="#CCCCCC">be separated</font><font color="#E5E5E5"> out from protocol state</font>

200
00:07:35,319 --> 00:07:39,999
itself and in fact the<font color="#E5E5E5"> TCP socket will</font>

201
00:07:38,020 --> 00:07:42,430
be closed during during a graceful

202
00:07:39,999 --> 00:07:45,129
restart the extensions need to work

203
00:07:42,430 --> 00:07:47,469
report failover software restart or peer

204
00:07:45,129 --> 00:07:48,909
reset of any<font color="#CCCCCC"> particular flavor and of</font>

205
00:07:47,469 --> 00:07:50,110
<font color="#CCCCCC">course as I mentioned</font><font color="#E5E5E5"> you have to be</font>

206
00:07:48,909 --> 00:07:53,289
able to limit the number of graceful

207
00:07:50,110 --> 00:07:55,180
restarts appear gets into a temporary

208
00:07:53,289 --> 00:07:57,580
state where it's constantly restarting

209
00:07:55,180 --> 00:07:59,589
that again your network<font color="#E5E5E5"> people would be</font>

210
00:07:57,580 --> 00:08:01,359
out of<font color="#E5E5E5"> synch rip out of sync for too</font>

211
00:07:59,589 --> 00:08:02,740
long of a period of time<font color="#E5E5E5"> and in that</font>

212
00:08:01,360 --> 00:08:04,329
<font color="#CCCCCC">particular case you</font><font color="#E5E5E5"> want to shut down</font>

213
00:08:02,740 --> 00:08:05,470
<font color="#E5E5E5">that gear we don't want to get into a</font>

214
00:08:04,329 --> 00:08:07,630
tight loop

215
00:08:05,470 --> 00:08:11,020
constantly restarting was<font color="#CCCCCC"> very cold war</font>

216
00:08:07,630 --> 00:08:14,050
<font color="#CCCCCC">ungraceful of course the gristle</font>

217
00:08:11,020 --> 00:08:17,490
restarts in BGP as I mentioned<font color="#CCCCCC"> he is</font>

218
00:08:14,050 --> 00:08:20,260
negotiated either at open time or

219
00:08:17,490 --> 00:08:22,240
through recent extensions in BGP<font color="#E5E5E5"> it can</font>

220
00:08:20,260 --> 00:08:25,500
be dynamically negotiated during an

221
00:08:22,240 --> 00:08:27,580
already up tearing session so that<font color="#E5E5E5"> way</font>

222
00:08:25,500 --> 00:08:29,320
depending<font color="#CCCCCC"> on how you want to transition</font>

223
00:08:27,580 --> 00:08:31,900
<font color="#E5E5E5">to deploy this particular feature it</font>

224
00:08:29,320 --> 00:08:33,610
doesn't<font color="#CCCCCC"> require a flag day or a restart</font>

225
00:08:31,900 --> 00:08:35,468
such that you<font color="#E5E5E5"> can continue with the</font>

226
00:08:33,610 --> 00:08:38,500
graceful restart beyond that again it's

227
00:08:35,469 --> 00:08:40,270
a deployment consideration so the actual

228
00:08:38,500 --> 00:08:43,289
extensions that are<font color="#E5E5E5"> required to turn</font>

229
00:08:40,270 --> 00:08:46,060
this on vgp<font color="#E5E5E5"> are actually fairly simple</font>

230
00:08:43,289 --> 00:08:48,579
basically we have<font color="#E5E5E5"> to add an end of rib</font>

231
00:08:46,060 --> 00:08:50,619
marker because<font color="#E5E5E5"> as we know in BGP there's</font>

232
00:08:48,580 --> 00:08:53,110
no sequence IDs and update package yet

233
00:08:50,620 --> 00:08:54,820
such that you can't necessarily tell

234
00:08:53,110 --> 00:08:57,390
when you've received a complete rib or

235
00:08:54,820 --> 00:08:59,920
appears notion of a<font color="#CCCCCC"> publix complete rib</font>

236
00:08:57,390 --> 00:09:02,110
so that way we've added<font color="#E5E5E5"> the end of rib</font>

237
00:08:59,920 --> 00:09:03,670
marker<font color="#CCCCCC"> of course you have to</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> the</font>

238
00:09:02,110 --> 00:09:06,610
graceful restart capability as i

239
00:09:03,670 --> 00:09:08,319
mentioned in which you'll have a

240
00:09:06,610 --> 00:09:11,530
graceful restart capability that you

241
00:09:08,320 --> 00:09:13,839
negotiate / address-family v4 v6<font color="#E5E5E5"> and /</font>

242
00:09:11,530 --> 00:09:16,839
sub address-family unicast multicast and

243
00:09:13,839 --> 00:09:18,820
it also has an extension for mpls as

244
00:09:16,839 --> 00:09:20,290
well and the<font color="#CCCCCC"> capability can</font><font color="#E5E5E5"> be</font>

245
00:09:18,820 --> 00:09:22,510
negotiated and you can control your

246
00:09:20,290 --> 00:09:24,219
network to determine what you want to

247
00:09:22,510 --> 00:09:29,710
have happen along these boundaries as

248
00:09:24,220 --> 00:09:33,280
well so flexibility<font color="#CCCCCC"> is there on the</font>

249
00:09:29,710 --> 00:09:35,170
receiving speaker when you<font color="#E5E5E5"> receive a</font>

250
00:09:33,280 --> 00:09:36,850
graceful restart message from<font color="#CCCCCC"> up here</font>

251
00:09:35,170 --> 00:09:39,579
the first thing<font color="#CCCCCC"> you're immediately going</font>

252
00:09:36,850 --> 00:09:42,280
to<font color="#E5E5E5"> do is take all the prefixes you've</font>

253
00:09:39,580 --> 00:09:44,680
learned<font color="#E5E5E5"> from that pier and and mark them</font>

254
00:09:42,280 --> 00:09:46,930
if scale and put them<font color="#E5E5E5"> on a perch timer</font>

255
00:09:44,680 --> 00:09:48,640
immediately so this perch timer is

256
00:09:46,930 --> 00:09:51,160
ticking in the background no matter what

257
00:09:48,640 --> 00:09:53,560
when<font color="#E5E5E5"> the pier comes back up and you</font>

258
00:09:51,160 --> 00:09:55,810
receive<font color="#CCCCCC"> the new open message you stop</font>

259
00:09:53,560 --> 00:09:58,060
that<font color="#CCCCCC"> purge timer now the point of this</font>

260
00:09:55,810 --> 00:10:00,040
purge timer is that if<font color="#CCCCCC"> the pier doesn't</font>

261
00:09:58,060 --> 00:10:02,859
come back<font color="#E5E5E5"> within the specified interval</font>

262
00:10:00,040 --> 00:10:04,540
and currently specified interval is 180

263
00:10:02,860 --> 00:10:06,220
seconds which is<font color="#E5E5E5"> quite a long</font><font color="#CCCCCC"> time you</font>

264
00:10:04,540 --> 00:10:08,199
might not want your network to the out

265
00:10:06,220 --> 00:10:10,660
of sync for<font color="#E5E5E5"> that period for that</font>

266
00:10:08,200 --> 00:10:13,000
duration you might want to control how

267
00:10:10,660 --> 00:10:14,860
long that tier can be down for and when

268
00:10:13,000 --> 00:10:16,690
you<font color="#E5E5E5"> receive that open message so</font><font color="#CCCCCC"> that</font>

269
00:10:14,860 --> 00:10:19,150
way if something<font color="#E5E5E5"> did go catastrophic</font>

270
00:10:16,690 --> 00:10:20,950
whatever the case you could detect that

271
00:10:19,150 --> 00:10:24,130
earlier and potentially<font color="#E5E5E5"> even earlier</font>

272
00:10:20,950 --> 00:10:27,190
than the current default 180 seconds so

273
00:10:24,130 --> 00:10:28,870
again we the<font color="#CCCCCC"> Pierce come back up we</font><font color="#E5E5E5"> stop</font>

274
00:10:27,190 --> 00:10:31,210
the purge timer because the pier is back

275
00:10:28,870 --> 00:10:34,060
<font color="#E5E5E5">and what we do is</font><font color="#CCCCCC"> we now start another</font>

276
00:10:31,210 --> 00:10:36,280
timer which waits for the end of rib

277
00:10:34,060 --> 00:10:37,660
marker<font color="#E5E5E5"> from that particular pier now the</font>

278
00:10:36,280 --> 00:10:41,410
<font color="#E5E5E5">point of waiting for the end of rib</font>

279
00:10:37,660 --> 00:10:43,209
marker really is so that<font color="#E5E5E5"> you have a</font>

280
00:10:41,410 --> 00:10:45,310
finite amount of time which you've

281
00:10:43,210 --> 00:10:46,960
configured in which you want to<font color="#E5E5E5"> get back</font>

282
00:10:45,310 --> 00:10:50,260
<font color="#CCCCCC">into</font><font color="#E5E5E5"> sync</font><font color="#CCCCCC"> Andrey converge from that</font>

283
00:10:46,960 --> 00:10:53,560
particular fear so the end of rib timer

284
00:10:50,260 --> 00:10:55,240
is going to fire when either an end of

285
00:10:53,560 --> 00:10:57,819
rib messages received from the

286
00:10:55,240 --> 00:11:00,040
restarting speaker and what happens is

287
00:10:57,820 --> 00:11:03,280
if you<font color="#E5E5E5"> have not received</font><font color="#CCCCCC"> the entire rib</font>

288
00:11:00,040 --> 00:11:04,930
within again that particular timer what

289
00:11:03,280 --> 00:11:06,699
you're going to do then is just assume

290
00:11:04,930 --> 00:11:08,319
that those routes are stale they<font color="#CCCCCC"> haven't</font>

291
00:11:06,700 --> 00:11:09,760
been refreshed from that pier and you're

292
00:11:08,320 --> 00:11:11,950
going<font color="#E5E5E5"> to get rid</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> and purge them</font>

293
00:11:09,760 --> 00:11:13,990
from your forwarding table so you've

294
00:11:11,950 --> 00:11:16,120
<font color="#E5E5E5">controlled how long the pier has to come</font>

295
00:11:13,990 --> 00:11:17,890
back<font color="#E5E5E5"> up</font><font color="#CCCCCC"> and you're now controlling how</font>

296
00:11:16,120 --> 00:11:21,610
long you're going<font color="#E5E5E5"> to give that</font><font color="#CCCCCC"> here to</font>

297
00:11:17,890 --> 00:11:23,920
<font color="#CCCCCC">actually send you all of its rib data so</font>

298
00:11:21,610 --> 00:11:25,930
again point number four is if the<font color="#E5E5E5"> perch</font>

299
00:11:23,920 --> 00:11:29,890
timer does fire you're going to remove

300
00:11:25,930 --> 00:11:31,300
<font color="#E5E5E5">all the sale routes and of course if the</font>

301
00:11:29,890 --> 00:11:33,430
pier comes back up it doesn't<font color="#E5E5E5"> have</font>

302
00:11:31,300 --> 00:11:35,319
graceful restart capability announced

303
00:11:33,430 --> 00:11:36,670
you immediately just purge all the

304
00:11:35,320 --> 00:11:38,320
<font color="#E5E5E5">routes from the particular</font><font color="#CCCCCC"> appear this</font>

305
00:11:36,670 --> 00:11:40,680
could be in<font color="#E5E5E5"> that upgrade downgrade</font>

306
00:11:38,320 --> 00:11:43,090
situation in which you downgrade because

307
00:11:40,680 --> 00:11:45,400
you suddenly want to use a<font color="#E5E5E5"> different</font>

308
00:11:43,090 --> 00:11:47,700
feature on a different particular rather

309
00:11:45,400 --> 00:11:51,370
software or whatever the case<font color="#E5E5E5"> could be</font>

310
00:11:47,700 --> 00:11:52,870
now on the restarting speaker a couple

311
00:11:51,370 --> 00:11:54,490
<font color="#CCCCCC">of things</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> to happen so now you're</font>

312
00:11:52,870 --> 00:11:56,560
the pier in which you want to graceful

313
00:11:54,490 --> 00:11:58,780
restart what you need to<font color="#CCCCCC"> do is you need</font>

314
00:11:56,560 --> 00:12:01,869
<font color="#CCCCCC">to configure how long you want to hold</font>

315
00:11:58,780 --> 00:12:03,189
<font color="#E5E5E5">on to the rib or database of routes that</font>

316
00:12:01,870 --> 00:12:05,440
you've received from all your peers

317
00:12:03,190 --> 00:12:07,660
because<font color="#E5E5E5"> if you can't come back in time</font>

318
00:12:05,440 --> 00:12:09,100
and renegotiate between them you need to

319
00:12:07,660 --> 00:12:11,589
purge your data and tell everybody that

320
00:12:09,100 --> 00:12:12,970
it's stale as soon as possible<font color="#E5E5E5"> so you're</font>

321
00:12:11,590 --> 00:12:14,500
on this particular box you're going to

322
00:12:12,970 --> 00:12:17,110
configure how long you're going<font color="#E5E5E5"> to hold</font>

323
00:12:14,500 --> 00:12:18,970
<font color="#CCCCCC">onto your data so what you do at that</font>

324
00:12:17,110 --> 00:12:21,100
point is you send your opens to your

325
00:12:18,970 --> 00:12:23,170
<font color="#E5E5E5">peers and you wait for end of rib</font>

326
00:12:21,100 --> 00:12:25,510
markers from from all of your peers that

327
00:12:23,170 --> 00:12:27,550
are graceful restart capable again this

328
00:12:25,510 --> 00:12:29,200
can be<font color="#E5E5E5"> running a mixed networks for ease</font>

329
00:12:27,550 --> 00:12:30,520
of deployment as well as where you want

330
00:12:29,200 --> 00:12:32,290
this to happen in in your particular

331
00:12:30,520 --> 00:12:34,600
network topology

332
00:12:32,290 --> 00:12:35,829
restarting speaker once again you've

333
00:12:34,600 --> 00:12:37,240
configured your timer how long you're

334
00:12:35,829 --> 00:12:39,099
going to<font color="#E5E5E5"> hold your data you send out</font>

335
00:12:37,240 --> 00:12:41,410
your open messages you get<font color="#E5E5E5"> your open</font>

336
00:12:39,100 --> 00:12:43,480
messages<font color="#E5E5E5"> back from</font><font color="#CCCCCC"> your peers you then</font>

337
00:12:41,410 --> 00:12:44,980
start reconverting by sending having

338
00:12:43,480 --> 00:12:46,360
receiving the data from<font color="#E5E5E5"> your peers and</font>

339
00:12:44,980 --> 00:12:48,639
you wait for the<font color="#E5E5E5"> end of red markers from</font>

340
00:12:46,360 --> 00:12:50,019
from your peers once you've received all

341
00:12:48,639 --> 00:12:54,790
of<font color="#CCCCCC"> your end of rib markers from their</font>

342
00:12:50,019 --> 00:12:56,920
peers or the updates on time or fires

343
00:12:54,790 --> 00:12:59,079
what you do is you calculate your best

344
00:12:56,920 --> 00:13:01,269
path so what we're doing<font color="#CCCCCC"> here is we're</font>

345
00:12:59,079 --> 00:13:03,219
optimizing to only send out the new

346
00:13:01,269 --> 00:13:06,040
prefixes that we would have selected

347
00:13:03,220 --> 00:13:07,209
during any kind<font color="#E5E5E5"> of topological at would</font>

348
00:13:06,040 --> 00:13:10,149
have happened during the graceful

349
00:13:07,209 --> 00:13:12,430
restart period so what we do is we

350
00:13:10,149 --> 00:13:14,560
update our rib again<font color="#CCCCCC"> doing a mark</font><font color="#E5E5E5"> and</font>

351
00:13:12,430 --> 00:13:15,790
sweep potentially we generate all<font color="#CCCCCC"> the</font>

352
00:13:14,560 --> 00:13:17,949
updates and we send them<font color="#E5E5E5"> out to our</font>

353
00:13:15,790 --> 00:13:19,990
peers we send them our end of<font color="#CCCCCC"> rib marker</font>

354
00:13:17,949 --> 00:13:22,300
and we hopefully have optimal Erie

355
00:13:19,990 --> 00:13:24,250
converged for either the duration you

356
00:13:22,300 --> 00:13:25,630
want between peer outages or the

357
00:13:24,250 --> 00:13:27,009
duration that<font color="#E5E5E5"> you want your network to</font>

358
00:13:25,630 --> 00:13:29,980
be out of sync through the end of rib

359
00:13:27,009 --> 00:13:31,779
timer so again<font color="#CCCCCC"> lets you send target</font>

360
00:13:29,980 --> 00:13:33,699
package you sent out your your end of

361
00:13:31,779 --> 00:13:35,769
<font color="#CCCCCC">rib message</font><font color="#E5E5E5"> tell your peers and you what</font>

362
00:13:33,699 --> 00:13:37,779
you've also tried<font color="#CCCCCC"> to do is attempt to</font>

363
00:13:35,769 --> 00:13:40,029
cut down<font color="#CCCCCC"> the number of extra packets</font>

364
00:13:37,779 --> 00:13:41,620
<font color="#E5E5E5">extra update packets or routing protocol</font>

365
00:13:40,029 --> 00:13:43,630
packets that you need to send between

366
00:13:41,620 --> 00:13:48,430
your peers and try and optimal<font color="#CCCCCC"> Erie</font>

367
00:13:43,630 --> 00:13:50,260
converge so moving<font color="#CCCCCC"> on to the I</font><font color="#E5E5E5"> GPS</font>

368
00:13:48,430 --> 00:13:52,388
because as we know this is really

369
00:13:50,260 --> 00:13:55,269
interesting<font color="#E5E5E5"> for external BGP but</font>

370
00:13:52,389 --> 00:13:57,639
internal BGP relies upon either ospf or

371
00:13:55,269 --> 00:13:59,470
is is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> calculate the next tops and</font>

372
00:13:57,639 --> 00:14:03,190
where traffic is going<font color="#E5E5E5"> to be sent across</font>

373
00:13:59,470 --> 00:14:06,399
your network so for ospf<font color="#E5E5E5"> I'm going to</font>

374
00:14:03,190 --> 00:14:08,680
talk about a specification which

375
00:14:06,399 --> 00:14:10,750
requires protocol team changes and<font color="#E5E5E5"> for</font>

376
00:14:08,680 --> 00:14:13,449
is is I'm going to<font color="#E5E5E5"> talk about changes</font>

377
00:14:10,750 --> 00:14:15,279
that<font color="#CCCCCC"> are not specified but you can that</font>

378
00:14:13,449 --> 00:14:16,899
can enable non stop forwarding and<font color="#E5E5E5"> then</font>

379
00:14:15,279 --> 00:14:18,430
I'm going<font color="#E5E5E5"> to talk about version 2 of non</font>

380
00:14:16,899 --> 00:14:20,130
stop forwarding for is is<font color="#CCCCCC"> and which</font>

381
00:14:18,430 --> 00:14:23,459
protocol extensions are required and

382
00:14:20,130 --> 00:14:26,019
also<font color="#E5E5E5"> there's in ospf there's a second</font>

383
00:14:23,459 --> 00:14:27,339
extension to<font color="#CCCCCC"> the Pro Tour there's not</font><font color="#E5E5E5"> an</font>

384
00:14:26,019 --> 00:14:28,630
extension of the protocol but non stop

385
00:14:27,339 --> 00:14:31,990
forwarding is enabled as well but<font color="#CCCCCC"> I'll</font>

386
00:14:28,630 --> 00:14:34,689
<font color="#CCCCCC">just give the example in is is so the</font>

387
00:14:31,990 --> 00:14:36,699
goals of the<font color="#E5E5E5"> I</font><font color="#CCCCCC"> GPS are rather I'm</font>

388
00:14:34,689 --> 00:14:40,569
remarkably similar to<font color="#CCCCCC"> what we wanted to</font>

389
00:14:36,699 --> 00:14:42,930
do for bgp the I GPS have to be able<font color="#E5E5E5"> to</font>

390
00:14:40,569 --> 00:14:45,339
recover and rebuild state information

391
00:14:42,930 --> 00:14:45,910
from the neighbors<font color="#E5E5E5"> before the adjacency</font>

392
00:14:45,339 --> 00:14:47,770
timers

393
00:14:45,910 --> 00:14:50,110
fire now of<font color="#E5E5E5"> course these adjacency</font>

394
00:14:47,770 --> 00:14:51,939
timers are controlled by you as well in

395
00:14:50,110 --> 00:14:53,620
your configuration you<font color="#E5E5E5"> can leave them as</font>

396
00:14:51,940 --> 00:14:55,330
default or you can change them to what

397
00:14:53,620 --> 00:14:57,910
you want<font color="#E5E5E5"> them</font><font color="#CCCCCC"> to be but of course</font><font color="#E5E5E5"> that</font>

398
00:14:55,330 --> 00:14:59,710
will necessarily create the<font color="#CCCCCC"> situation</font>

399
00:14:57,910 --> 00:15:01,180
where the protocols will go through a

400
00:14:59,710 --> 00:15:04,990
mark<font color="#E5E5E5"> and sweep and potentially can tree</font>

401
00:15:01,180 --> 00:15:10,209
converge optimally so for the fastest

402
00:15:04,990 --> 00:15:12,430
recovery of either ospf or is<font color="#E5E5E5"> is all</font>

403
00:15:10,210 --> 00:15:14,680
neighbors must be NSF aware to the

404
00:15:12,430 --> 00:15:16,359
fastest recovery there are other

405
00:15:14,680 --> 00:15:17,739
protocol enhancements for the end it<font color="#E5E5E5"> for</font>

406
00:15:16,360 --> 00:15:18,910
the non stop<font color="#E5E5E5"> forwarding unaware</font>

407
00:15:17,740 --> 00:15:20,440
neighbors that are a<font color="#E5E5E5"> bit slower</font><font color="#CCCCCC"> and</font>

408
00:15:18,910 --> 00:15:25,390
again we'll talk about that<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> i us</font>

409
00:15:20,440 --> 00:15:27,640
and like<font color="#E5E5E5"> bgp the</font><font color="#CCCCCC"> igps must reinstall</font>

410
00:15:25,390 --> 00:15:29,920
their prefixes within a specified purge

411
00:15:27,640 --> 00:15:33,160
timer that<font color="#E5E5E5"> you configure as well so like</font>

412
00:15:29,920 --> 00:15:35,079
in BGP you can determine or you can

413
00:15:33,160 --> 00:15:36,699
configure how long you want<font color="#E5E5E5"> your network</font>

414
00:15:35,080 --> 00:15:38,740
to be out of sync it can either be the

415
00:15:36,700 --> 00:15:40,330
default or it can be shorter<font color="#CCCCCC"> than that</font>

416
00:15:38,740 --> 00:15:42,160
or can<font color="#E5E5E5"> be longer than that depending on</font>

417
00:15:40,330 --> 00:15:45,310
<font color="#E5E5E5">the properties of your network so that's</font>

418
00:15:42,160 --> 00:15:46,510
configurable as well as for the I<font color="#E5E5E5"> GPS we</font>

419
00:15:45,310 --> 00:15:48,640
have to be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> handle traffic</font>

420
00:15:46,510 --> 00:15:50,680
carrying traffic engineering data and in

421
00:15:48,640 --> 00:15:55,330
fact these extensions are equally suited

422
00:15:50,680 --> 00:15:56,829
for either v4 or v6 addresses carrying

423
00:15:55,330 --> 00:16:02,770
multicast traffic as<font color="#CCCCCC"> well as carrying</font>

424
00:15:56,830 --> 00:16:05,050
<font color="#E5E5E5">traffic engineering information so</font>

425
00:16:02,770 --> 00:16:07,120
here's a<font color="#E5E5E5"> really high</font><font color="#CCCCCC"> level flow of what</font>

426
00:16:05,050 --> 00:16:09,459
ospf looks like during a restart so

427
00:16:07,120 --> 00:16:10,960
effectively you've got configure on any

428
00:16:09,460 --> 00:16:13,540
box whether or not you<font color="#E5E5E5"> want nonstop</font>

429
00:16:10,960 --> 00:16:15,910
boarding or graceful restart to the<font color="#CCCCCC"> igp</font>

430
00:16:13,540 --> 00:16:18,880
there so the process restarts and reads

431
00:16:15,910 --> 00:16:21,010
that configuration for ospf on all of

432
00:16:18,880 --> 00:16:22,660
the interfaces in the Upstate that<font color="#CCCCCC"> that</font>

433
00:16:21,010 --> 00:16:25,120
the<font color="#CCCCCC"> IGP detects when it comes back up</font>

434
00:16:22,660 --> 00:16:28,480
<font color="#E5E5E5">it'll send out a</font><font color="#CCCCCC"> hello with a specific</font>

435
00:16:25,120 --> 00:16:30,190
recent resync bit set really

436
00:16:28,480 --> 00:16:32,710
straightforward rather similar to<font color="#CCCCCC"> bgp</font>

437
00:16:30,190 --> 00:16:34,300
we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> wait for n seconds where</font>

438
00:16:32,710 --> 00:16:35,940
n is determined by you and configured by

439
00:16:34,300 --> 00:16:38,380
you to learn about all of the neighbors

440
00:16:35,940 --> 00:16:39,670
we start our link state database

441
00:16:38,380 --> 00:16:42,840
resynchronization with all of our

442
00:16:39,670 --> 00:16:45,610
neighbors we run a mark<font color="#E5E5E5"> and sweep</font>

443
00:16:42,840 --> 00:16:47,110
through our LSD<font color="#CCCCCC"> be of what we've</font>

444
00:16:45,610 --> 00:16:49,120
received in the topologies that we've

445
00:16:47,110 --> 00:16:52,150
<font color="#CCCCCC">received from</font><font color="#E5E5E5"> our from our neighbors and</font>

446
00:16:49,120 --> 00:16:54,370
we generate<font color="#E5E5E5"> a router LSA we run our SPF</font>

447
00:16:52,150 --> 00:16:56,079
algorithm and then we flush anything

448
00:16:54,370 --> 00:16:58,270
that's that's stale in our link state

449
00:16:56,080 --> 00:16:59,690
database again you<font color="#CCCCCC"> can see that it's a</font>

450
00:16:58,270 --> 00:17:05,209
really similar solution to

451
00:16:59,690 --> 00:17:06,980
what's happening in BGP as i mentioned

452
00:17:05,209 --> 00:17:08,900
non stop forwarding in this feature has

453
00:17:06,980 --> 00:17:10,849
to be able<font color="#E5E5E5"> to be controlled when it</font>

454
00:17:08,900 --> 00:17:12,890
needs<font color="#E5E5E5"> to be aborted because of some kind</font>

455
00:17:10,849 --> 00:17:16,669
of failure situation or catastrophic

456
00:17:12,890 --> 00:17:17,930
event so on the restarting router non

457
00:17:16,670 --> 00:17:19,699
stop forwarding is going to be aborted

458
00:17:17,930 --> 00:17:21,260
when any of<font color="#E5E5E5"> the neighbors are non stop</font>

459
00:17:19,699 --> 00:17:23,720
forwarding incapable<font color="#E5E5E5"> because then you</font>

460
00:17:21,260 --> 00:17:25,189
can't resync your database without

461
00:17:23,720 --> 00:17:27,770
setting the special bits or having your

462
00:17:25,189 --> 00:17:31,220
<font color="#CCCCCC">a Jason sees understand these particular</font>

463
00:17:27,770 --> 00:17:32,990
be these particular bits also non stop

464
00:17:31,220 --> 00:17:34,580
warning is going to be aborted if the

465
00:17:32,990 --> 00:17:36,050
resynchronization doesn't get completed

466
00:17:34,580 --> 00:17:37,550
within the<font color="#E5E5E5"> configured dead interval</font>

467
00:17:36,050 --> 00:17:40,419
again you're controlling how long you

468
00:17:37,550 --> 00:17:42,260
want<font color="#CCCCCC"> your network to be out of sync and</font>

469
00:17:40,420 --> 00:17:44,240
non-stop warnings going to be aborted

470
00:17:42,260 --> 00:17:46,670
when there's one or more neighbors also

471
00:17:44,240 --> 00:17:49,310
attempting to gracefully restart at the

472
00:17:46,670 --> 00:17:50,870
same time in the particular situation

473
00:17:49,310 --> 00:17:52,639
where you have more than one although

474
00:17:50,870 --> 00:17:54,199
<font color="#CCCCCC">with the mathematical proof shows that</font>

475
00:17:52,640 --> 00:17:56,990
potentially you can get<font color="#E5E5E5"> back to a</font>

476
00:17:54,200 --> 00:17:59,030
synchronized database right now there's

477
00:17:56,990 --> 00:18:00,710
many different interesting state

478
00:17:59,030 --> 00:18:04,340
transitions you can get<font color="#E5E5E5"> into and it's</font>

479
00:18:00,710 --> 00:18:06,590
<font color="#E5E5E5">just plain easier to deploy in our</font>

480
00:18:04,340 --> 00:18:08,870
opinion when you don't have multiple

481
00:18:06,590 --> 00:18:10,820
neighbors attempting<font color="#E5E5E5"> to restart with non</font>

482
00:18:08,870 --> 00:18:13,250
stop forwarding and everybody resync

483
00:18:10,820 --> 00:18:15,530
through their database on<font color="#CCCCCC"> the adjacent</font>

484
00:18:13,250 --> 00:18:16,700
<font color="#E5E5E5">router non-stop fording is going to be</font>

485
00:18:15,530 --> 00:18:19,220
aborted again when there's one of our

486
00:18:16,700 --> 00:18:20,960
<font color="#E5E5E5">neighbors attempting NSF or when there's</font>

487
00:18:19,220 --> 00:18:22,430
a change in topology when<font color="#CCCCCC"> non-stop</font>

488
00:18:20,960 --> 00:18:24,470
learning is in progress and that's

489
00:18:22,430 --> 00:18:27,590
configurable so if you're worried that<font color="#CCCCCC"> a</font>

490
00:18:24,470 --> 00:18:29,180
triple logic is what occurs while you're

491
00:18:27,590 --> 00:18:31,100
attempting to resync your database and

492
00:18:29,180 --> 00:18:32,660
potentially you're afraid that<font color="#E5E5E5"> the</font>

493
00:18:31,100 --> 00:18:34,129
protocol can't handle it you can

494
00:18:32,660 --> 00:18:36,500
<font color="#E5E5E5">configure that if there's any</font><font color="#CCCCCC"> toppa</font>

495
00:18:34,130 --> 00:18:39,500
logic to detect 'add don't run non-stop

496
00:18:36,500 --> 00:18:46,040
forwarding<font color="#CCCCCC"> rhian it the entire adjacency</font>

497
00:18:39,500 --> 00:18:50,020
<font color="#E5E5E5">as it always has and continue moving on</font>

498
00:18:46,040 --> 00:18:53,389
to is is non-stop running version<font color="#CCCCCC"> one</font>

499
00:18:50,020 --> 00:18:56,780
effectively it's an extremely simple way

500
00:18:53,390 --> 00:18:58,370
that<font color="#E5E5E5"> today is ice can be restarted in a</font>

501
00:18:56,780 --> 00:19:00,290
graceful manner without any protocol

502
00:18:58,370 --> 00:19:01,520
extensions whatsoever but<font color="#E5E5E5"> there's a</font>

503
00:19:00,290 --> 00:19:02,750
couple<font color="#CCCCCC"> of there's a couple</font><font color="#E5E5E5"> of key things</font>

504
00:19:01,520 --> 00:19:05,330
as I mentioned<font color="#E5E5E5"> it's a pretty</font>

505
00:19:02,750 --> 00:19:07,850
straightforward extension effectively

506
00:19:05,330 --> 00:19:09,800
you have to be<font color="#CCCCCC"> able to recover with your</font>

507
00:19:07,850 --> 00:19:11,689
adjacencies before the holo timers

508
00:19:09,800 --> 00:19:13,549
expire in other words what you have to

509
00:19:11,690 --> 00:19:16,190
be able to do is<font color="#E5E5E5"> send fo</font>

510
00:19:13,549 --> 00:19:18,470
or received and acknowledged and LSA

511
00:19:16,190 --> 00:19:19,940
within is is within that before the holo

512
00:19:18,470 --> 00:19:23,470
timers expire and again it's a three

513
00:19:19,940 --> 00:19:26,720
strikes rule and you can configure how

514
00:19:23,470 --> 00:19:28,340
how many in some cases and how what the

515
00:19:26,720 --> 00:19:31,489
duration or interval is in between<font color="#CCCCCC"> the</font>

516
00:19:28,340 --> 00:19:32,570
<font color="#E5E5E5">hellos the</font><font color="#CCCCCC"> holo that are being sent this</font>

517
00:19:31,489 --> 00:19:34,909
<font color="#E5E5E5">particular one is they mentioned</font>

518
00:19:32,570 --> 00:19:37,999
interrupts interoperates with unaware

519
00:19:34,909 --> 00:19:40,249
adjacencies but it is simplistic so if

520
00:19:37,999 --> 00:19:41,659
you use this kind of configuration knob

521
00:19:40,249 --> 00:19:42,799
for how long it's going to take how<font color="#E5E5E5"> long</font>

522
00:19:41,659 --> 00:19:45,169
you want<font color="#CCCCCC"> your number to take for</font>

523
00:19:42,799 --> 00:19:48,259
conversions to occur so you<font color="#CCCCCC"> also have an</font>

524
00:19:45,169 --> 00:19:49,580
interval between the maximum or the

525
00:19:48,259 --> 00:19:51,499
minimum amount<font color="#E5E5E5"> of time that you're going</font>

526
00:19:49,580 --> 00:19:54,499
<font color="#E5E5E5">to allow between non stop forwarding or</font>

527
00:19:51,499 --> 00:19:58,429
grits will restart<font color="#CCCCCC"> resource I apologize</font>

528
00:19:54,499 --> 00:20:02,330
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then a timer</font><font color="#E5E5E5"> for how long you</font><font color="#CCCCCC"> want</font>

529
00:19:58,429 --> 00:20:04,789
<font color="#E5E5E5">to allow a route to be maintained in the</font>

530
00:20:02,330 --> 00:20:06,590
database in between restarts ordering a

531
00:20:04,789 --> 00:20:08,809
restart duration so in other words you

532
00:20:06,590 --> 00:20:11,059
set the time converge my network within

533
00:20:08,809 --> 00:20:13,039
10 seconds if the network doesn't

534
00:20:11,059 --> 00:20:15,440
converge with and then automatically

535
00:20:13,039 --> 00:20:17,869
<font color="#CCCCCC">purge but in fact what's nice about it</font>

536
00:20:15,440 --> 00:20:20,179
is that you don't<font color="#E5E5E5"> have to change the</font>

537
00:20:17,869 --> 00:20:21,859
protocol at all so just let's walk

538
00:20:20,179 --> 00:20:24,559
through the state machine it's really

539
00:20:21,859 --> 00:20:26,600
<font color="#CCCCCC">quite</font><font color="#E5E5E5"> straightforward so what you do is</font>

540
00:20:24,559 --> 00:20:27,918
you check pointed your adjacency

541
00:20:26,600 --> 00:20:30,049
database so you know who you had

542
00:20:27,919 --> 00:20:32,600
adjacencies with before<font color="#CCCCCC"> you restart you</font>

543
00:20:30,049 --> 00:20:34,639
quick read that you enable<font color="#CCCCCC"> your sending</font>

544
00:20:32,600 --> 00:20:37,309
of packets start sending hellos to<font color="#E5E5E5"> those</font>

545
00:20:34,639 --> 00:20:39,109
restored adjacencies you read your the

546
00:20:37,309 --> 00:20:41,869
checkpoint table of your of your<font color="#E5E5E5"> link</font>

547
00:20:39,109 --> 00:20:46,549
state database you begin<font color="#CCCCCC"> to restore</font><font color="#E5E5E5"> your</font>

548
00:20:41,869 --> 00:20:49,029
<font color="#CCCCCC">LSPs you enable the i/o input output of</font>

549
00:20:46,549 --> 00:20:51,379
the<font color="#E5E5E5"> LSP s you start requesting</font>

550
00:20:49,029 --> 00:20:54,980
checkpoint the checkpoint LSPs that you

551
00:20:51,379 --> 00:20:57,619
have on specific circuits you restore

552
00:20:54,980 --> 00:21:00,320
those<font color="#E5E5E5"> LS PS you start checking land</font>

553
00:20:57,619 --> 00:21:02,299
circuits next you restore the land

554
00:21:00,320 --> 00:21:04,850
circuits you start synchronizing

555
00:21:02,299 --> 00:21:06,230
point-to-point circuits by doing you the

556
00:21:04,850 --> 00:21:08,090
<font color="#E5E5E5">typical handshake</font><font color="#CCCCCC"> that you've configured</font>

557
00:21:06,230 --> 00:21:10,249
on those particular links you then

558
00:21:08,090 --> 00:21:12,559
restore those<font color="#E5E5E5"> LS PS here's the</font>

559
00:21:10,249 --> 00:21:14,509
configurable knob in which you listen

560
00:21:12,559 --> 00:21:15,980
for new LSPs and you just said<font color="#E5E5E5"> it that's</font>

561
00:21:14,509 --> 00:21:17,570
really simple<font color="#E5E5E5"> interval that in which</font>

562
00:21:15,980 --> 00:21:20,929
you're going<font color="#E5E5E5"> to allow a new ESPYs to</font>

563
00:21:17,570 --> 00:21:23,450
arrive you run your layer 1 STFU run

564
00:21:20,929 --> 00:21:26,299
your layer 2 SPF<font color="#E5E5E5"> you resync your new</font>

565
00:21:23,450 --> 00:21:27,620
state back when did in the RP<font color="#E5E5E5"> and then</font>

566
00:21:26,299 --> 00:21:30,350
non stop<font color="#E5E5E5"> forwarding restarts</font>

567
00:21:27,620 --> 00:21:31,580
so it's all done with the magical how

568
00:21:30,350 --> 00:21:34,669
long am I going<font color="#E5E5E5"> to wait</font><font color="#CCCCCC"> to listen for</font>

569
00:21:31,580 --> 00:21:40,490
new<font color="#E5E5E5"> melodies and a couple of local</font>

570
00:21:34,670 --> 00:21:44,140
checkpointing hooks on the RP itself so

571
00:21:40,490 --> 00:21:47,000
is is non stop forwarding version 2 is

572
00:21:44,140 --> 00:21:50,000
again a simple extension following the

573
00:21:47,000 --> 00:21:51,980
initial work done in BGP where you're

574
00:21:50,000 --> 00:21:55,490
kind<font color="#E5E5E5"> of sending the moral</font><font color="#CCCCCC"> equivalent</font><font color="#E5E5E5"> of</font>

575
00:21:51,980 --> 00:21:57,559
<font color="#E5E5E5">an end of rib in is</font><font color="#CCCCCC"> iOS but here it's</font>

576
00:21:55,490 --> 00:21:59,720
basically<font color="#E5E5E5"> to Pakistani to send one is</font>

577
00:21:57,559 --> 00:22:02,059
the restart<font color="#E5E5E5"> request magically like the</font>

578
00:21:59,720 --> 00:22:03,710
graceful restart configurator crates

579
00:22:02,059 --> 00:22:04,820
will restart knob being sent in BGP<font color="#CCCCCC"> and</font>

580
00:22:03,710 --> 00:22:07,400
the second one<font color="#CCCCCC"> is the restart</font>

581
00:22:04,820 --> 00:22:09,230
<font color="#E5E5E5">acknowledgment or are a packet so those</font>

582
00:22:07,400 --> 00:22:12,380
are<font color="#CCCCCC"> the two new options that the hello</font>

583
00:22:09,230 --> 00:22:14,480
packet and<font color="#CCCCCC"> i fiss and effectively how it</font>

584
00:22:12,380 --> 00:22:16,730
works really straightforwardly is when

585
00:22:14,480 --> 00:22:18,559
you receive a restart request you start

586
00:22:16,730 --> 00:22:21,260
refreshing the adjacency<font color="#E5E5E5"> annealing state</font>

587
00:22:18,559 --> 00:22:23,389
<font color="#CCCCCC">in the topology learned across that</font>

588
00:22:21,260 --> 00:22:25,730
adjacency boundary<font color="#E5E5E5"> and then when</font>

589
00:22:23,390 --> 00:22:27,590
everything<font color="#E5E5E5"> is resync to send your your</font>

590
00:22:25,730 --> 00:22:29,120
restart<font color="#CCCCCC"> acknowledgement and then you</font>

591
00:22:27,590 --> 00:22:30,439
then you know you've received the entire

592
00:22:29,120 --> 00:22:32,120
topology<font color="#CCCCCC"> that you're supposed to have</font>

593
00:22:30,440 --> 00:22:35,240
<font color="#E5E5E5">received an adjacency and you can</font>

594
00:22:32,120 --> 00:22:40,820
optimally remove any<font color="#E5E5E5"> anything that</font>

595
00:22:35,240 --> 00:22:44,030
hasn't been refreshed<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the topology so</font>

596
00:22:40,820 --> 00:22:46,070
moving<font color="#CCCCCC"> on to multicast unicast has had a</font>

597
00:22:44,030 --> 00:22:48,170
pretty common theme working through

598
00:22:46,070 --> 00:22:51,020
which is announced you're going down do

599
00:22:48,170 --> 00:22:52,610
a mark<font color="#E5E5E5"> and sweep on your database send a</font>

600
00:22:51,020 --> 00:22:55,370
notifier when you received everything

601
00:22:52,610 --> 00:22:58,760
<font color="#CCCCCC">ree converge and continue forward</font>

602
00:22:55,370 --> 00:23:01,040
multicast is a bit different because of

603
00:22:58,760 --> 00:23:04,610
the properties of multicast networking

604
00:23:01,040 --> 00:23:05,870
and really you have to have an

605
00:23:04,610 --> 00:23:08,629
<font color="#CCCCCC">understanding of the two different</font>

606
00:23:05,870 --> 00:23:09,860
<font color="#E5E5E5">pieces running inside the router and how</font>

607
00:23:08,630 --> 00:23:11,330
<font color="#E5E5E5">multi casting works you have to have a</font>

608
00:23:09,860 --> 00:23:13,040
notion of the control plane and what the

609
00:23:11,330 --> 00:23:14,240
protocols are doing but the forwarding

610
00:23:13,040 --> 00:23:16,010
plane also has to have<font color="#E5E5E5"> enough</font>

611
00:23:14,240 --> 00:23:18,110
intelligence to be able<font color="#E5E5E5"> to plug back</font>

612
00:23:16,010 --> 00:23:19,640
into the control<font color="#E5E5E5"> plane as well as</font>

613
00:23:18,110 --> 00:23:22,850
control the forwarding itself because

614
00:23:19,640 --> 00:23:24,830
multicast could unfortunately be you

615
00:23:22,850 --> 00:23:26,300
know the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> internet packet gun which</font>

616
00:23:24,830 --> 00:23:27,800
we<font color="#E5E5E5"> don't want to have happen and the</font>

617
00:23:26,300 --> 00:23:31,520
other<font color="#CCCCCC"> thing is</font><font color="#E5E5E5"> the fawning plane can</font>

618
00:23:27,800 --> 00:23:32,928
actually detect routing loops and make

619
00:23:31,520 --> 00:23:35,840
intelligent decisions for<font color="#CCCCCC"> you at that</font>

620
00:23:32,929 --> 00:23:37,520
particular point so again will be a

621
00:23:35,840 --> 00:23:39,678
timer<font color="#CCCCCC"> for the forwarding plane so</font><font color="#E5E5E5"> that</font>

622
00:23:37,520 --> 00:23:40,679
way it only forwards multicast packets

623
00:23:39,679 --> 00:23:43,289
long enough for the control

624
00:23:40,679 --> 00:23:44,639
<font color="#E5E5E5">into restarts and to avoid the</font><font color="#CCCCCC"> internet</font>

625
00:23:43,289 --> 00:23:50,730
packet done put a rate limit on

626
00:23:44,639 --> 00:23:52,229
multicast traffic so again of following

627
00:23:50,730 --> 00:23:54,779
<font color="#CCCCCC">the same pattern that</font><font color="#E5E5E5"> I've that</font><font color="#CCCCCC"> have</font>

628
00:23:52,230 --> 00:23:56,610
mentioned already multicast non stop

629
00:23:54,779 --> 00:23:58,110
forwarding follows the same thing by

630
00:23:56,610 --> 00:24:00,570
checkpointing some critical state

631
00:23:58,110 --> 00:24:03,299
necessary to optimize how to restart and

632
00:24:00,570 --> 00:24:06,570
how to restart more quickly add some

633
00:24:03,299 --> 00:24:09,960
done messages like end of rib to the

634
00:24:06,570 --> 00:24:11,730
multicast routing protocols and of

635
00:24:09,960 --> 00:24:13,559
course the forwarding plane has to be

636
00:24:11,730 --> 00:24:16,019
NSF aware to be able<font color="#E5E5E5"> to plug back into</font>

637
00:24:13,559 --> 00:24:18,749
the control plane what is check pointed

638
00:24:16,019 --> 00:24:21,450
what is<font color="#E5E5E5"> that important data well the</font>

639
00:24:18,749 --> 00:24:23,850
<font color="#CCCCCC">group's RP mapping and the RPF ribbon</font>

640
00:24:21,450 --> 00:24:26,519
multicast that'll just allow you to

641
00:24:23,850 --> 00:24:28,439
reconvert more quickly what isn't check

642
00:24:26,519 --> 00:24:30,990
pointed and what state<font color="#E5E5E5"> don't you have to</font>

643
00:24:28,440 --> 00:24:32,879
keep<font color="#CCCCCC"> well again PIM has been</font><font color="#E5E5E5"> extended to</font>

644
00:24:30,990 --> 00:24:35,279
be able<font color="#E5E5E5"> to recover from its its network</font>

645
00:24:32,879 --> 00:24:39,539
<font color="#E5E5E5">Pierce igmp has been extended can</font>

646
00:24:35,279 --> 00:24:42,980
recover from the<font color="#CCCCCC"> network MSD msdp cash</font>

647
00:24:39,539 --> 00:24:46,919
is also recoverable from<font color="#E5E5E5"> the network as</font>

648
00:24:42,980 --> 00:24:48,899
<font color="#CCCCCC">I mentioned the forwarding plan has got</font>

649
00:24:46,919 --> 00:24:50,490
to be able<font color="#E5E5E5"> to detect loops and shut down</font>

650
00:24:48,899 --> 00:24:52,199
those routing loops so that way we

651
00:24:50,490 --> 00:24:56,519
aren't spraying data unnecessarily down

652
00:24:52,200 --> 00:24:58,169
links that don't have any any receivers

653
00:24:56,519 --> 00:24:59,549
there as well as we don't<font color="#E5E5E5"> want to get</font>

654
00:24:58,169 --> 00:25:02,610
into a tight loop in the network and

655
00:24:59,549 --> 00:25:06,450
just destroy links unnecessarily so

656
00:25:02,610 --> 00:25:08,129
basically during the<font color="#CCCCCC"> update process any</font>

657
00:25:06,450 --> 00:25:09,809
multicast forwarding entries that have

658
00:25:08,129 --> 00:25:11,730
been updated<font color="#E5E5E5"> can send out a pem assert</font>

659
00:25:09,809 --> 00:25:13,440
to designate the<font color="#CCCCCC"> Florida even if the</font>

660
00:25:11,730 --> 00:25:15,840
unicast is not converged and I'll walk

661
00:25:13,440 --> 00:25:17,279
through a bit of state of of when the

662
00:25:15,840 --> 00:25:20,999
control<font color="#E5E5E5"> plane fails and how this works</font>

663
00:25:17,279 --> 00:25:23,639
in a moment also the forwarding entries

664
00:25:20,999 --> 00:25:26,549
marked old you<font color="#CCCCCC"> know again during the</font>

665
00:25:23,639 --> 00:25:28,019
market sweet remove the interfaces from

666
00:25:26,549 --> 00:25:29,158
the<font color="#E5E5E5"> 0 list if</font><font color="#CCCCCC"> they receive any data</font>

667
00:25:28,019 --> 00:25:30,960
matching on it so that way you've

668
00:25:29,159 --> 00:25:32,549
clearly detected a loop take it out of

669
00:25:30,960 --> 00:25:36,059
<font color="#E5E5E5">the</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> list you won't send packets down</font>

670
00:25:32,549 --> 00:25:39,119
that particular link anymore so pulling

671
00:25:36,059 --> 00:25:40,230
it together if you've taken if<font color="#E5E5E5"> you if</font>

672
00:25:39,119 --> 00:25:41,428
you followed what I've what I've

673
00:25:40,230 --> 00:25:43,289
mentioned for bgp and what<font color="#E5E5E5"> i've</font>

674
00:25:41,429 --> 00:25:44,519
mentioned for the I GPS and you pull it

675
00:25:43,289 --> 00:25:46,289
together with<font color="#E5E5E5"> the example of the</font>

676
00:25:44,519 --> 00:25:47,639
multicast control plane you see once

677
00:25:46,289 --> 00:25:49,049
<font color="#CCCCCC">again the pattern that's emerging and</font>

678
00:25:47,639 --> 00:25:52,080
here's a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> more data of</font><font color="#CCCCCC"> what it</font>

679
00:25:49,049 --> 00:25:53,940
actually looks like when the RP for

680
00:25:52,080 --> 00:25:54,449
example if you want to do a swap out of

681
00:25:53,940 --> 00:25:57,510
the RP

682
00:25:54,450 --> 00:25:59,430
so in this particular case when<font color="#E5E5E5"> you want</font>

683
00:25:57,510 --> 00:26:01,260
to upgrade a piece<font color="#CCCCCC"> of hardware or swap</font>

684
00:25:59,430 --> 00:26:02,910
out a piece<font color="#CCCCCC"> of hardware</font><font color="#E5E5E5"> like the RP both</font>

685
00:26:01,260 --> 00:26:03,750
unicast and multicast protocols are

686
00:26:02,910 --> 00:26:05,910
going to go down that's pretty

687
00:26:03,750 --> 00:26:07,710
straightforward the forwarding plane

688
00:26:05,910 --> 00:26:09,750
again has<font color="#CCCCCC"> to have enough intelligence to</font>

689
00:26:07,710 --> 00:26:11,370
detect the fall starts to and starts to

690
00:26:09,750 --> 00:26:13,140
initiate the non stop<font color="#E5E5E5"> forwarding action</font>

691
00:26:11,370 --> 00:26:15,239
what does it do again the old mark and

692
00:26:13,140 --> 00:26:17,520
sweep<font color="#E5E5E5"> it marks the the multicast feed</font>

693
00:26:15,240 --> 00:26:18,990
entries is hold it begins the rate limit

694
00:26:17,520 --> 00:26:20,940
the total amount of multicast as I

695
00:26:18,990 --> 00:26:25,050
mentioned and then we start a timer for

696
00:26:20,940 --> 00:26:27,090
<font color="#E5E5E5">the refresh on that multicast fib before</font>

697
00:26:25,050 --> 00:26:29,190
it runs a sweep all<font color="#CCCCCC"> the control</font>

698
00:26:27,090 --> 00:26:31,860
processes are now restarting the

699
00:26:29,190 --> 00:26:33,960
multicast rib is holding that holding

700
00:26:31,860 --> 00:26:35,729
back multicast fib updates so that way

701
00:26:33,960 --> 00:26:37,440
we can reconvert and not for a shower

702
00:26:35,730 --> 00:26:38,940
forwarding tables and again start

703
00:26:37,440 --> 00:26:40,740
spraying packets all over the place as

704
00:26:38,940 --> 00:26:42,660
well as we want to<font color="#E5E5E5"> refresh back to the</font>

705
00:26:40,740 --> 00:26:44,070
<font color="#E5E5E5">state that we were in and any</font>

706
00:26:42,660 --> 00:26:46,020
intermediate state is we're learning

707
00:26:44,070 --> 00:26:48,330
information from our peers or

708
00:26:46,020 --> 00:26:50,610
adjacencies will cause us to thrash or

709
00:26:48,330 --> 00:26:52,649
multicast fitted unnecessarily and we

710
00:26:50,610 --> 00:26:53,939
won't<font color="#E5E5E5"> be comparing the state we ran to</font>

711
00:26:52,650 --> 00:26:55,860
the state that we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be in</font>

712
00:26:53,940 --> 00:27:00,540
which is fully convert both multicast

713
00:26:55,860 --> 00:27:03,360
and unicast so the multicast unicast

714
00:27:00,540 --> 00:27:05,909
ribs begins to restore prefixes from the

715
00:27:03,360 --> 00:27:07,469
unicast routing protocols<font color="#E5E5E5"> igmp gets us</font>

716
00:27:05,910 --> 00:27:10,320
updates propagates those to the

717
00:27:07,470 --> 00:27:12,060
multicast rib<font color="#E5E5E5"> igmp sends are done so</font>

718
00:27:10,320 --> 00:27:15,120
that way the multicast rib understands

719
00:27:12,060 --> 00:27:18,470
when our GMP is done<font color="#E5E5E5"> PIM refreshes</font>

720
00:27:15,120 --> 00:27:21,330
itself with its network neighbors and

721
00:27:18,470 --> 00:27:23,760
and<font color="#E5E5E5"> for my GMP and update the multicast</font>

722
00:27:21,330 --> 00:27:28,139
<font color="#E5E5E5">rib sends a done message the multitasker</font>

723
00:27:23,760 --> 00:27:30,510
it as I mentioned when the multicast rib

724
00:27:28,140 --> 00:27:32,460
starts gets its finished message from

725
00:27:30,510 --> 00:27:33,960
Tim then it starts updating the

726
00:27:32,460 --> 00:27:35,580
multicast forwarding table because now

727
00:27:33,960 --> 00:27:38,160
you're again comparing the states that

728
00:27:35,580 --> 00:27:41,340
<font color="#E5E5E5">we were in before</font><font color="#CCCCCC"> you decided to switch</font>

729
00:27:38,160 --> 00:27:43,290
over your RP<font color="#E5E5E5"> board the multicast</font><font color="#CCCCCC"> fit</font>

730
00:27:41,340 --> 00:27:45,209
starts receiving the updates we start

731
00:27:43,290 --> 00:27:46,920
reinstalling at the<font color="#E5E5E5"> relative granularity</font>

732
00:27:45,210 --> 00:27:49,200
you now can refresh all of those

733
00:27:46,920 --> 00:27:51,080
prefixes in the multicast fib we sweep

734
00:27:49,200 --> 00:27:54,000
out anything that<font color="#E5E5E5"> hasn't been refreshed</font>

735
00:27:51,080 --> 00:27:55,409
when you when you nicastri<font color="#E5E5E5"> convergys we</font>

736
00:27:54,000 --> 00:27:57,150
<font color="#CCCCCC">receive the done message that way we</font>

737
00:27:55,410 --> 00:27:59,520
know we can resolve all the next hops

738
00:27:57,150 --> 00:28:01,410
for any of the multicast traffic we

739
00:27:59,520 --> 00:28:02,610
remove the<font color="#CCCCCC"> rate-limiting and non stop</font>

740
00:28:01,410 --> 00:28:05,910
forwarding is complete and we've

741
00:28:02,610 --> 00:28:07,500
compared where we were with where we

742
00:28:05,910 --> 00:28:10,720
want to be

743
00:28:07,500 --> 00:28:12,160
so we've made<font color="#E5E5E5"> it through unicast we've</font>

744
00:28:10,720 --> 00:28:13,900
made<font color="#E5E5E5"> it</font><font color="#CCCCCC"> through multicast how that's</font>

745
00:28:12,160 --> 00:28:15,910
going to work we've got a few<font color="#CCCCCC"> things</font>

746
00:28:13,900 --> 00:28:18,220
left let's talk a bit about mpls which

747
00:28:15,910 --> 00:28:19,480
<font color="#E5E5E5">I'll go through quickly then we'll talk</font>

748
00:28:18,220 --> 00:28:21,490
about bit about the infrastructure

749
00:28:19,480 --> 00:28:22,810
<font color="#E5E5E5">because it all has to hold together as I</font>

750
00:28:21,490 --> 00:28:27,270
mentioned within the<font color="#E5E5E5"> control plane and</font>

751
00:28:22,810 --> 00:28:32,200
then I'll sum it up so in my only

752
00:28:27,270 --> 00:28:34,330
picture in the slide says basically mpls

753
00:28:32,200 --> 00:28:36,970
is going to follow the same principles

754
00:28:34,330 --> 00:28:39,070
that we did with a relationship<font color="#CCCCCC"> between</font>

755
00:28:36,970 --> 00:28:40,840
unicast and multicast and then tie it

756
00:28:39,070 --> 00:28:42,610
together except it's going to use

757
00:28:40,840 --> 00:28:46,350
potentially a<font color="#CCCCCC"> slightly different way of</font>

758
00:28:42,610 --> 00:28:49,080
modifying the forwarding table for even

759
00:28:46,350 --> 00:28:51,760
for basically<font color="#E5E5E5"> no packet forwarding</font>

760
00:28:49,080 --> 00:28:54,159
issues whatsoever so the traffic

761
00:28:51,760 --> 00:28:57,550
engineering database clearly is created

762
00:28:54,160 --> 00:28:59,260
by ospf<font color="#CCCCCC"> bgp and is is so that database</font>

763
00:28:57,550 --> 00:29:01,360
itself can be recovered from those

764
00:28:59,260 --> 00:29:03,640
particular protocols there's no reason

765
00:29:01,360 --> 00:29:05,709
not<font color="#CCCCCC"> to once again just rely upon the</font>

766
00:29:03,640 --> 00:29:09,100
producer of the data to<font color="#E5E5E5"> refresh your</font>

767
00:29:05,710 --> 00:29:12,340
state the signaling protocols both RSVP

768
00:29:09,100 --> 00:29:14,530
and<font color="#CCCCCC"> ldp have been</font><font color="#E5E5E5"> extended to recover in</font>

769
00:29:12,340 --> 00:29:16,840
the same manner as bgp in the<font color="#CCCCCC"> eye gps as</font>

770
00:29:14,530 --> 00:29:19,960
well as multicast to recover<font color="#CCCCCC"> from its</font>

771
00:29:16,840 --> 00:29:21,909
adjacencies and<font color="#E5E5E5"> neighbors label manager</font>

772
00:29:19,960 --> 00:29:24,040
or<font color="#CCCCCC"> the actual database to be installed</font>

773
00:29:21,910 --> 00:29:25,360
thats its also in the control plane to

774
00:29:24,040 --> 00:29:26,530
keep state across all the line cards

775
00:29:25,360 --> 00:29:28,959
well that can be recovered from the

776
00:29:26,530 --> 00:29:30,370
layers up above and then the label fib

777
00:29:28,960 --> 00:29:32,890
actually sitting on<font color="#E5E5E5"> your line parts</font>

778
00:29:30,370 --> 00:29:35,649
that's forwarding for you through those

779
00:29:32,890 --> 00:29:38,160
<font color="#E5E5E5">tunnels</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> going to take</font><font color="#CCCCCC"> a new step in</font>

780
00:29:35,650 --> 00:29:40,060
<font color="#E5E5E5">which it actually now takes the new</font>

781
00:29:38,160 --> 00:29:41,590
label fib that was created<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

782
00:29:40,060 --> 00:29:43,419
control plane install it and into<font color="#E5E5E5"> an</font>

783
00:29:41,590 --> 00:29:46,480
update<font color="#CCCCCC"> of a pointer and then you'll have</font>

784
00:29:43,420 --> 00:29:49,390
no packet drops whatsoever now what's

785
00:29:46,480 --> 00:29:51,490
interesting is that mpls already has no

786
00:29:49,390 --> 00:29:54,160
protection it already has<font color="#CCCCCC"> mastery route</font>

787
00:29:51,490 --> 00:29:56,230
to go around particular nodes so I'm not

788
00:29:54,160 --> 00:29:58,240
necessarily<font color="#E5E5E5"> advocating the use of this</font>

789
00:29:56,230 --> 00:30:00,430
particular feature but it can be useful

790
00:29:58,240 --> 00:30:02,110
<font color="#CCCCCC">too if you wanted to upgrade downgrade</font>

791
00:30:00,430 --> 00:30:04,120
if you don't want to necessarily move

792
00:30:02,110 --> 00:30:05,379
your traffic onto your back up links if

793
00:30:04,120 --> 00:30:09,040
the duration is going to be short<font color="#E5E5E5"> enough</font>

794
00:30:05,380 --> 00:30:11,200
or because<font color="#CCCCCC"> auto policemen currently</font>

795
00:30:09,040 --> 00:30:13,210
isn't enabled on mpls and you don't<font color="#E5E5E5"> have</font>

796
00:30:11,200 --> 00:30:14,830
every label switch path going through

797
00:30:13,210 --> 00:30:17,110
this particular router backed up with<font color="#E5E5E5"> a</font>

798
00:30:14,830 --> 00:30:19,000
fast reroute link maybe you<font color="#E5E5E5"> just wanted</font>

799
00:30:17,110 --> 00:30:21,010
to<font color="#CCCCCC"> use these protocol extensions so</font>

800
00:30:19,000 --> 00:30:22,900
caveat emptor on whether<font color="#CCCCCC"> or</font><font color="#E5E5E5"> not this is</font>

801
00:30:21,010 --> 00:30:25,900
<font color="#E5E5E5">particularly useful</font><font color="#CCCCCC"> or necessary in your</font>

802
00:30:22,900 --> 00:30:27,970
particular<font color="#E5E5E5"> network and I pretty much</font>

803
00:30:25,900 --> 00:30:29,890
have walked through the next<font color="#CCCCCC"> bullet</font><font color="#E5E5E5"> on</font>

804
00:30:27,970 --> 00:30:31,510
<font color="#E5E5E5">the slide again the traffic engineering</font>

805
00:30:29,890 --> 00:30:34,690
databases recovered from the protocols

806
00:30:31,510 --> 00:30:36,900
RSVP and<font color="#E5E5E5"> LTC have been extended</font><font color="#CCCCCC"> in the</font>

807
00:30:34,690 --> 00:30:39,910
same manner which I've<font color="#E5E5E5"> already described</font>

808
00:30:36,900 --> 00:30:41,200
we do have a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of local</font>

809
00:30:39,910 --> 00:30:43,870
<font color="#CCCCCC">checkpointing of data for an</font>

810
00:30:41,200 --> 00:30:46,660
optimization but the key now is that we

811
00:30:43,870 --> 00:30:50,020
can wholly generate refresh recalculate

812
00:30:46,660 --> 00:30:52,120
our label fib or LSP fib downloads it

813
00:30:50,020 --> 00:30:54,160
back to the line cards update a poner no

814
00:30:52,120 --> 00:30:58,840
packet drop either for the case<font color="#CCCCCC"> of</font>

815
00:30:54,160 --> 00:31:00,160
unicast multicast or now mpls moving on

816
00:30:58,840 --> 00:31:01,389
<font color="#E5E5E5">to the infrastructure because it's all</font>

817
00:31:00,160 --> 00:31:03,100
got to hang together because we've

818
00:31:01,390 --> 00:31:04,690
talked about<font color="#E5E5E5"> the interaction</font><font color="#CCCCCC"> of a number</font>

819
00:31:03,100 --> 00:31:07,689
<font color="#E5E5E5">of processes a number of applications</font>

820
00:31:04,690 --> 00:31:09,520
and if the infrastructure isn't also<font color="#E5E5E5"> non</font>

821
00:31:07,690 --> 00:31:12,790
stop learning aware and capable and able

822
00:31:09,520 --> 00:31:14,680
to handle<font color="#CCCCCC"> the</font><font color="#E5E5E5"> situation the router your</font>

823
00:31:12,790 --> 00:31:17,110
network will not be highly available and

824
00:31:14,680 --> 00:31:18,550
you will have packet drop again the<font color="#E5E5E5"> goal</font>

825
00:31:17,110 --> 00:31:23,169
is to<font color="#E5E5E5"> keep packets flown through the</font>

826
00:31:18,550 --> 00:31:24,730
node again one way to do<font color="#CCCCCC"> this is to use</font>

827
00:31:23,170 --> 00:31:26,230
some<font color="#E5E5E5"> of the principles that I've just</font>

828
00:31:24,730 --> 00:31:28,240
described of how the protocols are

829
00:31:26,230 --> 00:31:29,650
working and so there's a few<font color="#CCCCCC"> things</font>

830
00:31:28,240 --> 00:31:31,750
<font color="#E5E5E5">we've</font><font color="#CCCCCC"> got to take care</font><font color="#E5E5E5"> of the route</font>

831
00:31:29,650 --> 00:31:33,010
downloader between the rib the database

832
00:31:31,750 --> 00:31:35,740
of the prefixes you've learned from your

833
00:31:33,010 --> 00:31:37,030
peers and adjacencies and how those how

834
00:31:35,740 --> 00:31:39,160
those prefixes get down to the<font color="#E5E5E5"> FIB</font>

835
00:31:37,030 --> 00:31:41,410
through the downloader the rib has got

836
00:31:39,160 --> 00:31:43,030
to be able<font color="#E5E5E5"> to handle protocol restart</font>

837
00:31:41,410 --> 00:31:45,880
<font color="#E5E5E5">and then we've got to be able to handle</font>

838
00:31:43,030 --> 00:31:47,200
<font color="#E5E5E5">rib failure</font><font color="#CCCCCC"> a rib restart if that if for</font>

839
00:31:45,880 --> 00:31:49,480
some reason that's part of the upgraded

840
00:31:47,200 --> 00:31:51,690
downgrade situation so for the

841
00:31:49,480 --> 00:31:54,400
downloader when it restarts basically

842
00:31:51,690 --> 00:31:55,840
the rib can detect the failure I'm not

843
00:31:54,400 --> 00:31:58,690
connected to<font color="#E5E5E5"> this particular application</font>

844
00:31:55,840 --> 00:32:00,159
anymore it associates any state download

845
00:31:58,690 --> 00:32:03,130
state that it was in<font color="#CCCCCC"> between the ribbon</font>

846
00:32:00,160 --> 00:32:05,590
the fibs and then basically what happens

847
00:32:03,130 --> 00:32:07,150
is down on the line cards the<font color="#E5E5E5"> FIB</font>

848
00:32:05,590 --> 00:32:09,699
clients are in forms of the restart

849
00:32:07,150 --> 00:32:11,530
because<font color="#CCCCCC"> they also have lost any</font>

850
00:32:09,700 --> 00:32:13,120
connection with<font color="#CCCCCC"> the downloader and they</font>

851
00:32:11,530 --> 00:32:14,560
once again mark the routes for deletion

852
00:32:13,120 --> 00:32:16,419
this is all this should all be sounding

853
00:32:14,560 --> 00:32:19,570
familiar as we're reusing the same

854
00:32:16,420 --> 00:32:21,510
principles again once once the download

855
00:32:19,570 --> 00:32:24,790
it retrieves all the routes from the rib

856
00:32:21,510 --> 00:32:26,200
you basically the downloader then starts

857
00:32:24,790 --> 00:32:27,700
of course passing it down to the line

858
00:32:26,200 --> 00:32:29,890
<font color="#E5E5E5">cards the downloader informs the FIB</font>

859
00:32:27,700 --> 00:32:31,420
clients when the entire<font color="#E5E5E5"> rib is there</font>

860
00:32:29,890 --> 00:32:32,640
because<font color="#E5E5E5"> again we know what's in the</font>

861
00:32:31,420 --> 00:32:34,650
database so we know when we

862
00:32:32,640 --> 00:32:36,390
we know when we end and anything that

863
00:32:34,650 --> 00:32:38,030
isn't refreshed down in<font color="#E5E5E5"> wine cards the</font>

864
00:32:36,390 --> 00:32:40,140
<font color="#E5E5E5">good plants can purge the mark routes</font>

865
00:32:38,030 --> 00:32:43,590
potentially on a configuration of

866
00:32:40,140 --> 00:32:45,870
depending<font color="#CCCCCC"> on the implementation protocol</font>

867
00:32:43,590 --> 00:32:48,600
restart as<font color="#E5E5E5"> I've talked about for most of</font>

868
00:32:45,870 --> 00:32:50,250
the time during this presentation the

869
00:32:48,600 --> 00:32:52,620
rib can detect the restart of<font color="#E5E5E5"> the</font>

870
00:32:50,250 --> 00:32:54,120
protocol as the applications reconnect

871
00:32:52,620 --> 00:32:56,340
across any particular application

872
00:32:54,120 --> 00:32:58,739
programming interface and in the rib

873
00:32:56,340 --> 00:33:00,990
it's going<font color="#E5E5E5"> to just like we did between</font>

874
00:32:58,740 --> 00:33:02,250
our peers do a mark of anything we've

875
00:33:00,990 --> 00:33:04,560
learned<font color="#CCCCCC"> from</font><font color="#E5E5E5"> that particular protocol</font>

876
00:33:02,250 --> 00:33:06,690
set a<font color="#CCCCCC"> purge timer for those protocol</font>

877
00:33:04,560 --> 00:33:08,730
routes where that duration could be a

878
00:33:06,690 --> 00:33:10,830
configuration knob the protocol restarts

879
00:33:08,730 --> 00:33:12,930
it<font color="#E5E5E5"> reckon verges along the ones I've</font>

880
00:33:10,830 --> 00:33:15,179
mentioned it inserts Newport inserts

881
00:33:12,930 --> 00:33:17,370
those prefixes into the rib the protocol

882
00:33:15,180 --> 00:33:19,020
could inform the<font color="#E5E5E5"> rib when it's received</font>

883
00:33:17,370 --> 00:33:20,580
all its prefixes because we have enough

884
00:33:19,020 --> 00:33:22,230
information from all our network peers

885
00:33:20,580 --> 00:33:24,510
to have keep the intelligence<font color="#E5E5E5"> inside the</font>

886
00:33:22,230 --> 00:33:27,270
box anything that hasn't been refreshed

887
00:33:24,510 --> 00:33:29,210
we mark and we remove or you have to

888
00:33:27,270 --> 00:33:31,470
configure configurable perch timer hits

889
00:33:29,210 --> 00:33:36,150
you'll remove the prefixes at that

890
00:33:31,470 --> 00:33:38,340
particular time so what happens when the

891
00:33:36,150 --> 00:33:39,600
database you know the big database in

892
00:33:38,340 --> 00:33:40,439
the router of the rib<font color="#E5E5E5"> of all the pre</font>

893
00:33:39,600 --> 00:33:42,629
<font color="#E5E5E5">pieces you've learned</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> your</font>

894
00:33:40,440 --> 00:33:45,510
<font color="#E5E5E5">neighbors restarts this also can be</font>

895
00:33:42,630 --> 00:33:47,520
<font color="#E5E5E5">handled so the rib restarts we start</font>

896
00:33:45,510 --> 00:33:49,350
running our<font color="#E5E5E5"> convergence timer and we</font>

897
00:33:47,520 --> 00:33:53,280
withhold any update down to the fibs

898
00:33:49,350 --> 00:33:54,600
until we receive effectively a message

899
00:33:53,280 --> 00:33:56,310
<font color="#E5E5E5">from the from the protocols because</font>

900
00:33:54,600 --> 00:33:57,689
again we have enough information to be

901
00:33:56,310 --> 00:34:00,330
<font color="#E5E5E5">able to keep the intelligence inside the</font>

902
00:33:57,690 --> 00:34:02,580
box so the protocols detect the restart

903
00:34:00,330 --> 00:34:05,100
of<font color="#E5E5E5"> the rib the downloaded will also</font>

904
00:34:02,580 --> 00:34:06,960
detect the rib failure it reconnects it

905
00:34:05,100 --> 00:34:09,060
<font color="#E5E5E5">informs the fib clients of the restart</font>

906
00:34:06,960 --> 00:34:11,790
<font color="#CCCCCC">fid clients could potentially create a</font>

907
00:34:09,060 --> 00:34:14,100
new table or the<font color="#E5E5E5"> food clients could</font>

908
00:34:11,790 --> 00:34:16,529
<font color="#CCCCCC">begin to mark prefixes for the deletion</font>

909
00:34:14,100 --> 00:34:18,330
what<font color="#E5E5E5"> I mean</font><font color="#CCCCCC"> by this is that what could</font>

910
00:34:16,530 --> 00:34:19,679
happen for<font color="#CCCCCC"> either multicast or unicast</font>

911
00:34:18,330 --> 00:34:21,929
forwarding is that you actually create

912
00:34:19,679 --> 00:34:24,030
<font color="#E5E5E5">the</font><font color="#CCCCCC"> fib first in an independent</font><font color="#E5E5E5"> table</font>

913
00:34:21,929 --> 00:34:25,590
and then just do an update so that way

914
00:34:24,030 --> 00:34:27,960
you have<font color="#CCCCCC"> absolutely no thrashing</font>

915
00:34:25,590 --> 00:34:29,280
whatsoever to either<font color="#E5E5E5"> the memory space or</font>

916
00:34:27,960 --> 00:34:32,429
<font color="#CCCCCC">affect forwarding at all on the</font>

917
00:34:29,280 --> 00:34:34,050
particular line card so when the

918
00:34:32,429 --> 00:34:35,850
protocols and insert the routes<font color="#E5E5E5"> in the</font>

919
00:34:34,050 --> 00:34:37,679
rib it informs<font color="#CCCCCC"> the rib that that</font>

920
00:34:35,850 --> 00:34:39,149
everything's finished the<font color="#E5E5E5"> downloaded</font>

921
00:34:37,679 --> 00:34:42,389
retrieves all the prefixes from the rib

922
00:34:39,149 --> 00:34:44,489
downloading the fib clients ribbon forms

923
00:34:42,389 --> 00:34:46,080
the downloader of conversions time again

924
00:34:44,489 --> 00:34:48,120
brought in from the<font color="#E5E5E5"> peers</font>

925
00:34:46,080 --> 00:34:49,620
or for the timer expires and then things

926
00:34:48,120 --> 00:34:50,909
are considered done at that point

927
00:34:49,620 --> 00:34:53,520
because<font color="#E5E5E5"> you determine them to be</font>

928
00:34:50,909 --> 00:34:56,489
finished everything<font color="#CCCCCC"> begins to resume</font>

929
00:34:53,520 --> 00:34:58,080
<font color="#CCCCCC">normal operation at this point and the</font>

930
00:34:56,489 --> 00:34:59,970
<font color="#E5E5E5">FIB on the line cards to switch over to</font>

931
00:34:58,080 --> 00:35:03,090
the new table and no packets<font color="#E5E5E5"> have been</font>

932
00:34:59,970 --> 00:35:04,890
dropped at all or the pre for the fit

933
00:35:03,090 --> 00:35:06,330
entries are going to be removed<font color="#CCCCCC"> because</font>

934
00:35:04,890 --> 00:35:08,190
you've determined that your network a

935
00:35:06,330 --> 00:35:10,080
not converge fast enough within<font color="#CCCCCC"> the time</font>

936
00:35:08,190 --> 00:35:13,380
period and you'll just<font color="#E5E5E5"> allow a normal</font>

937
00:35:10,080 --> 00:35:17,220
insertion of prefixes as happens in all

938
00:35:13,380 --> 00:35:19,520
other operations so let me sum up here

939
00:35:17,220 --> 00:35:21,689
with a<font color="#CCCCCC"> couple more slides I've got</font>

940
00:35:19,520 --> 00:35:23,640
pretty much the only marketing slide

941
00:35:21,690 --> 00:35:25,080
which in other words routing and

942
00:35:23,640 --> 00:35:27,930
signaling protocol non-stop touring

943
00:35:25,080 --> 00:35:29,190
enables non-disruptive meaning packets

944
00:35:27,930 --> 00:35:31,529
<font color="#E5E5E5">continue to flow through their network</font>

945
00:35:29,190 --> 00:35:33,450
as you've engineered it and as you

946
00:35:31,530 --> 00:35:35,310
administer administrative<font color="#E5E5E5"> ly control</font>

947
00:35:33,450 --> 00:35:38,189
them during planned and unplanned

948
00:35:35,310 --> 00:35:40,259
software restarts or during the<font color="#E5E5E5"> upgrade</font>

949
00:35:38,190 --> 00:35:42,480
or replacement of hardware during the

950
00:35:40,260 --> 00:35:44,850
upgrade or downgrade of software you can

951
00:35:42,480 --> 00:35:47,300
use the same mechanisms now to enable

952
00:35:44,850 --> 00:35:49,440
migrating your software version and

953
00:35:47,300 --> 00:35:51,840
hopefully this will eliminate any

954
00:35:49,440 --> 00:35:54,060
traffic oscillations depending on the

955
00:35:51,840 --> 00:35:57,390
interval or duration that<font color="#E5E5E5"> you've set</font>

956
00:35:54,060 --> 00:35:59,130
your timers so configurable knobs could

957
00:35:57,390 --> 00:36:01,589
are enabled for local tolerance of

958
00:35:59,130 --> 00:36:02,960
graceful restart timing non stop

959
00:36:01,590 --> 00:36:06,030
forwarding is going to be the key and

960
00:36:02,960 --> 00:36:09,000
there should<font color="#E5E5E5"> be no route no sorry</font>

961
00:36:06,030 --> 00:36:10,770
there's necessarily no route flap either

962
00:36:09,000 --> 00:36:13,080
seen internally<font color="#E5E5E5"> or externally instead</font>

963
00:36:10,770 --> 00:36:15,060
it's a<font color="#E5E5E5"> refresh database in the topology</font>

964
00:36:13,080 --> 00:36:18,060
doesn't necessarily have to change

965
00:36:15,060 --> 00:36:21,090
whatsoever then<font color="#E5E5E5"> again in limiting the</font>

966
00:36:18,060 --> 00:36:23,160
traffic oscillations also nope eigrp has

967
00:36:21,090 --> 00:36:25,470
also been specified rather similar to

968
00:36:23,160 --> 00:36:26,640
i/o size<font color="#CCCCCC"> non-stop version 2 but for the</font>

969
00:36:25,470 --> 00:36:31,080
special I just<font color="#E5E5E5"> wonder folks on the</font>

970
00:36:26,640 --> 00:36:32,580
specified<font color="#CCCCCC"> protocol sit in so to sum up</font>

971
00:36:31,080 --> 00:36:34,680
what happens in your network and what

972
00:36:32,580 --> 00:36:36,600
are your customers<font color="#E5E5E5"> see they're going to</font>

973
00:36:34,680 --> 00:36:38,129
see a<font color="#E5E5E5"> new state of the</font><font color="#CCCCCC"> BGP peering</font>

974
00:36:36,600 --> 00:36:40,680
session it's going to<font color="#E5E5E5"> be stale State</font>

975
00:36:38,130 --> 00:36:42,540
it's not up it's not down it's in<font color="#E5E5E5"> the</font>

976
00:36:40,680 --> 00:36:44,669
reef<font color="#CCCCCC"> it's during the Refresh interval in</font>

977
00:36:42,540 --> 00:36:47,040
which prefixes are being exchanging the

978
00:36:44,670 --> 00:36:48,900
reconversion they will see the TCP

979
00:36:47,040 --> 00:36:50,790
connection drop they'll see it go to fin

980
00:36:48,900 --> 00:36:53,640
fin later<font color="#CCCCCC"> closed depending</font><font color="#E5E5E5"> on the type</font>

981
00:36:50,790 --> 00:36:55,650
of restart<font color="#CCCCCC"> that occurred so this</font><font color="#E5E5E5"> is</font>

982
00:36:53,640 --> 00:36:57,870
something<font color="#E5E5E5"> that it would take some</font>

983
00:36:55,650 --> 00:36:59,700
education of customers so that way they

984
00:36:57,870 --> 00:37:00,009
understand<font color="#CCCCCC"> that when they see the TCP</font>

985
00:36:59,700 --> 00:37:02,379
session

986
00:37:00,010 --> 00:37:04,030
go down<font color="#E5E5E5"> for the peering session traffic</font>

987
00:37:02,380 --> 00:37:06,400
<font color="#E5E5E5">is still flowing they need to watch the</font>

988
00:37:04,030 --> 00:37:08,410
<font color="#E5E5E5">state of the peering session due to</font>

989
00:37:06,400 --> 00:37:10,750
these extensions there are no extra

990
00:37:08,410 --> 00:37:13,450
withdrawn or announced packets we aren't

991
00:37:10,750 --> 00:37:15,970
sending any special packets and again

992
00:37:13,450 --> 00:37:17,830
there's no<font color="#E5E5E5"> longer any sending of which</font>

993
00:37:15,970 --> 00:37:19,750
our announcements due to the plan or

994
00:37:17,830 --> 00:37:21,310
unplanned outage hopefully we aren't

995
00:37:19,750 --> 00:37:24,610
thrashing the network of if it's not

996
00:37:21,310 --> 00:37:28,870
<font color="#E5E5E5">necessary but in all cases if we need to</font>

997
00:37:24,610 --> 00:37:30,580
abort the restart the restart capability

998
00:37:28,870 --> 00:37:32,319
we have to be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to let the network</font>

999
00:37:30,580 --> 00:37:34,600
know as soon as possible we have to be

1000
00:37:32,320 --> 00:37:35,800
able<font color="#E5E5E5"> to configure it and the network is</font>

1001
00:37:34,600 --> 00:37:38,319
going to be<font color="#CCCCCC"> able to do the right</font><font color="#E5E5E5"> thing</font>

1002
00:37:35,800 --> 00:37:40,090
according to<font color="#E5E5E5"> current specifications in</font>

1003
00:37:38,320 --> 00:37:42,940
the current way that these protocols

1004
00:37:40,090 --> 00:37:45,790
were floating<font color="#CCCCCC"> the network note that not</font>

1005
00:37:42,940 --> 00:37:47,680
every router is required at all

1006
00:37:45,790 --> 00:37:50,759
<font color="#E5E5E5">locations in the network this can be</font>

1007
00:37:47,680 --> 00:37:54,279
deployed router by router or in pockets

1008
00:37:50,760 --> 00:37:55,990
to be able to be<font color="#CCCCCC"> enabled</font><font color="#E5E5E5"> and the network</font>

1009
00:37:54,280 --> 00:37:58,000
can handle a transition router by router

1010
00:37:55,990 --> 00:37:59,589
because it is negotiated or dynamically

1011
00:37:58,000 --> 00:38:02,370
negotiated potentially once the<font color="#CCCCCC"> current</font>

1012
00:37:59,590 --> 00:38:05,200
sessions or adjacencies have been up

1013
00:38:02,370 --> 00:38:07,960
there are no new black holes or routing

1014
00:38:05,200 --> 00:38:10,540
loops necessarily created by these

1015
00:38:07,960 --> 00:38:13,240
particular capabilities excuse me

1016
00:38:10,540 --> 00:38:14,740
instead in fact the normal routing loops

1017
00:38:13,240 --> 00:38:16,149
and black holes that we have to<font color="#CCCCCC"> deal</font>

1018
00:38:14,740 --> 00:38:18,399
with in the network today due to

1019
00:38:16,150 --> 00:38:21,190
specified timers could actually be

1020
00:38:18,400 --> 00:38:24,490
alleviated because the recovery now

1021
00:38:21,190 --> 00:38:26,350
allows you to specify how long you want

1022
00:38:24,490 --> 00:38:28,569
<font color="#E5E5E5">each state of the graceful restart</font>

1023
00:38:26,350 --> 00:38:30,009
period to occur whether it's how long

1024
00:38:28,570 --> 00:38:32,050
you want<font color="#E5E5E5"> to wait</font><font color="#CCCCCC"> for a holo to come back</font>

1025
00:38:30,010 --> 00:38:33,880
<font color="#E5E5E5">so if you</font><font color="#CCCCCC"> think about the</font><font color="#E5E5E5"> 3-minute timer</font>

1026
00:38:32,050 --> 00:38:35,710
and bgp if you have you now have a

1027
00:38:33,880 --> 00:38:37,480
specific<font color="#E5E5E5"> time or how long you want that</font>

1028
00:38:35,710 --> 00:38:39,760
that particular peer to come back and

1029
00:38:37,480 --> 00:38:44,350
<font color="#E5E5E5">give</font><font color="#CCCCCC"> you an open</font><font color="#E5E5E5"> message or dump the</font>

1030
00:38:39,760 --> 00:38:46,330
packets immediately and another key

1031
00:38:44,350 --> 00:38:49,000
<font color="#CCCCCC">thing is that not all address families</font>

1032
00:38:46,330 --> 00:38:50,799
or sub address families or mpls must be

1033
00:38:49,000 --> 00:38:53,080
enabled with non stop forwarding<font color="#E5E5E5"> this is</font>

1034
00:38:50,800 --> 00:38:54,520
not a ubiquitous feature in which

1035
00:38:53,080 --> 00:38:57,790
everything comes know if you want to

1036
00:38:54,520 --> 00:39:00,250
protect v4 from v6 multicast from<font color="#E5E5E5"> X Y or</font>

1037
00:38:57,790 --> 00:39:01,990
Z or mpls you can<font color="#E5E5E5"> configure what address</font>

1038
00:39:00,250 --> 00:39:03,400
family<font color="#CCCCCC"> sub X premises or extensions you</font>

1039
00:39:01,990 --> 00:39:07,779
want to be non stop forwarding enabled

1040
00:39:03,400 --> 00:39:11,070
or not so I have<font color="#E5E5E5"> reached my last slide</font>

1041
00:39:07,780 --> 00:39:11,070
if there<font color="#E5E5E5"> are any</font><font color="#CCCCCC"> questions</font>

1042
00:39:16,789 --> 00:39:24,509
hey sue<font color="#E5E5E5"> okay let's go to a few</font><font color="#CCCCCC"> question</font>

1043
00:39:21,210 --> 00:39:30,240
or two pages no no those the back of it

1044
00:39:24,509 --> 00:39:35,000
no no not OC why did<font color="#CCCCCC"> you guys not decide</font>

1045
00:39:30,240 --> 00:39:37,589
to do the ospf ok restart functionality

1046
00:39:35,000 --> 00:39:40,529
actually i<font color="#CCCCCC"> just presented one particular</font>

1047
00:39:37,589 --> 00:39:42,119
way of<font color="#E5E5E5"> doing ospf and actually with the</font>

1048
00:39:40,529 --> 00:39:45,539
extent actually with the exception that

1049
00:39:42,119 --> 00:39:47,819
i described opaque<font color="#CCCCCC"> lsas are reflected</font>

1050
00:39:45,539 --> 00:39:50,480
again and you can actually reconvert any

1051
00:39:47,819 --> 00:39:52,440
information in Luna Bay calluses ok

1052
00:39:50,480 --> 00:39:54,480
gotcha has you<font color="#CCCCCC"> just said yeah it's</font>

1053
00:39:52,440 --> 00:39:57,779
actually the<font color="#CCCCCC"> other draft that doesn't</font>

1054
00:39:54,480 --> 00:40:01,680
but I didn't<font color="#E5E5E5"> want to get into it</font><font color="#CCCCCC"> ok um</font>

1055
00:39:57,779 --> 00:40:06,240
one other thing is uh stuck with the nib

1056
00:40:01,680 --> 00:40:08,930
and bgp um I'm<font color="#E5E5E5"> sorry I said sure I'm</font>

1057
00:40:06,240 --> 00:40:15,589
sorry I'm not getting our goodness

1058
00:40:08,930 --> 00:40:15,589
somebody has to<font color="#CCCCCC"> be support would this</font>

1059
00:40:15,619 --> 00:40:21,210
would this be a good mid edition how are

1060
00:40:19,380 --> 00:40:25,170
you guys monitoring when the when the

1061
00:40:21,210 --> 00:40:26,730
machines go into this<font color="#CCCCCC"> particular sake it</font>

1062
00:40:25,170 --> 00:40:27,960
would be an excellent extension we

1063
00:40:26,730 --> 00:40:29,789
should work<font color="#CCCCCC"> with</font><font color="#E5E5E5"> Jeff right over there</font>

1064
00:40:27,960 --> 00:40:33,210
to have it done<font color="#E5E5E5"> properly was that were</font>

1065
00:40:29,789 --> 00:40:35,430
denied that was my<font color="#E5E5E5"> bid for Jeff you can</font>

1066
00:40:33,210 --> 00:40:40,319
say thank you Jeff um there<font color="#E5E5E5"> are three</font>

1067
00:40:35,430 --> 00:40:42,078
sir there are three sources of BGP

1068
00:40:40,319 --> 00:40:47,430
crashes that some of this doesn't

1069
00:40:42,079 --> 00:40:52,470
identify that which<font color="#CCCCCC"> is bad prefixes</font>

1070
00:40:47,430 --> 00:40:55,890
sending downloads it's over max you know

1071
00:40:52,470 --> 00:40:59,339
over the max limit of prefixes and bad

1072
00:40:55,890 --> 00:41:01,920
as path what happens when this occurs is

1073
00:40:59,339 --> 00:41:06,240
it attacked in any of this particular

1074
00:41:01,920 --> 00:41:08,190
work so you're<font color="#CCCCCC"> saying the</font><font color="#E5E5E5"> particular</font>

1075
00:41:06,240 --> 00:41:09,839
<font color="#CCCCCC">case that you're you have two cases in</font>

1076
00:41:08,190 --> 00:41:11,099
which a notification would be sent which

1077
00:41:09,839 --> 00:41:12,390
would bring<font color="#CCCCCC"> down appearing session</font>

1078
00:41:11,099 --> 00:41:14,640
because there's some air whether it's a

1079
00:41:12,390 --> 00:41:17,490
s path or it was prefix or in some cases

1080
00:41:14,640 --> 00:41:20,940
as the Nautilus just said that doesn't

1081
00:41:17,490 --> 00:41:23,160
<font color="#E5E5E5">really some rather stones is choose to</font>

1082
00:41:20,940 --> 00:41:25,349
silently ignore sure in that particular

1083
00:41:23,160 --> 00:41:25,920
case a couple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> things would happen</font>

1084
00:41:25,349 --> 00:41:28,290
with

1085
00:41:25,920 --> 00:41:30,180
in the case of bad information you've

1086
00:41:28,290 --> 00:41:31,890
<font color="#E5E5E5">received that information and you had</font>

1087
00:41:30,180 --> 00:41:33,779
you don't<font color="#E5E5E5"> want to recover that state and</font>

1088
00:41:31,890 --> 00:41:35,040
so something's wrong with that fear and

1089
00:41:33,780 --> 00:41:36,000
something's catastrophic a wrong with

1090
00:41:35,040 --> 00:41:38,730
that fear and this is in a particular

1091
00:41:36,000 --> 00:41:40,020
case where an RP went down this is

1092
00:41:38,730 --> 00:41:42,599
actually a bad data they're sending you

1093
00:41:40,020 --> 00:41:44,759
so bad data take them down because you

1094
00:41:42,599 --> 00:41:46,349
can't trust<font color="#E5E5E5"> anything from them so that</font>

1095
00:41:44,760 --> 00:41:48,780
kind of covers the prefix and ass path

1096
00:41:46,349 --> 00:41:53,280
case with<font color="#CCCCCC"> respect to the max prefix case</font>

1097
00:41:48,780 --> 00:41:54,990
rank now what<font color="#E5E5E5"> could happen is that the</font>

1098
00:41:53,280 --> 00:41:56,700
current session it's a number of max

1099
00:41:54,990 --> 00:42:00,390
prefixes and the<font color="#E5E5E5"> Korean session goes</font>

1100
00:41:56,700 --> 00:42:03,299
down if this was one time aberrant

1101
00:42:00,390 --> 00:42:05,308
behavior potentially would refresh the

1102
00:42:03,299 --> 00:42:06,990
number of prefixes up to that<font color="#CCCCCC"> max prefix</font>

1103
00:42:05,309 --> 00:42:08,460
limit and hopefully things have been

1104
00:42:06,990 --> 00:42:10,558
corrected if they haven't<font color="#E5E5E5"> been corrected</font>

1105
00:42:08,460 --> 00:42:12,180
you would go through this restart period

1106
00:42:10,559 --> 00:42:14,280
potentially<font color="#CCCCCC"> n times where n is</font>

1107
00:42:12,180 --> 00:42:15,660
configurable and then if it if it

1108
00:42:14,280 --> 00:42:16,859
continues in<font color="#E5E5E5"> this in this state that</font>

1109
00:42:15,660 --> 00:42:20,328
<font color="#E5E5E5">Pierre would be brought down and held</font>

1110
00:42:16,859 --> 00:42:22,770
down<font color="#E5E5E5"> okay so you you have</font><font color="#CCCCCC"> the same</font>

1111
00:42:20,329 --> 00:42:29,730
automatic restart that<font color="#E5E5E5"> keeps going into</font>

1112
00:42:22,770 --> 00:42:32,430
this could be some and badass half is

1113
00:42:29,730 --> 00:42:34,559
this like bad data that good again okay

1114
00:42:32,430 --> 00:42:36,569
if you get bad data take them down okay

1115
00:42:34,559 --> 00:42:39,119
some people have asked on the list that

1116
00:42:36,569 --> 00:42:41,750
not trash things because it tends<font color="#E5E5E5"> to</font>

1117
00:42:39,119 --> 00:42:43,829
fluctuate so so one thing to on the

1118
00:42:41,750 --> 00:42:45,270
things I've described also there's a

1119
00:42:43,829 --> 00:42:47,490
number<font color="#E5E5E5"> of new error conditions or</font>

1120
00:42:45,270 --> 00:42:50,460
notifications and also being extended if

1121
00:42:47,490 --> 00:42:53,848
you know the what I described is kind of

1122
00:42:50,460 --> 00:42:56,250
just generally above any specific and

1123
00:42:53,849 --> 00:42:57,329
not allowing or I'm not describing it in

1124
00:42:56,250 --> 00:42:59,700
case where<font color="#CCCCCC"> you can have a specific</font>

1125
00:42:57,329 --> 00:43:01,650
policy for any type of condition to get

1126
00:42:59,700 --> 00:43:04,859
into instead it deals with a restart in

1127
00:43:01,650 --> 00:43:06,990
a gentleman gender and yeah I agree just

1128
00:43:04,859 --> 00:43:08,520
some people<font color="#E5E5E5"> had when I did the query on</font>

1129
00:43:06,990 --> 00:43:12,058
the BJP state machine this<font color="#E5E5E5"> particular</font>

1130
00:43:08,520 --> 00:43:13,530
topic was raised in these bad<font color="#CCCCCC"> spot</font><font color="#E5E5E5"> so I</font>

1131
00:43:12,059 --> 00:43:17,099
<font color="#E5E5E5">wanted just wanted to make sure people</font>

1132
00:43:13,530 --> 00:43:19,410
knew where where you're stuck<font color="#CCCCCC"> Laden set</font>

1133
00:43:17,099 --> 00:43:20,940
I bet<font color="#E5E5E5"> over time things will head such</font>

1134
00:43:19,410 --> 00:43:23,129
that you<font color="#E5E5E5"> can have a configurable policy</font>

1135
00:43:20,940 --> 00:43:25,589
I would<font color="#E5E5E5"> imagine although think you know</font>

1136
00:43:23,130 --> 00:43:29,910
with deployment experience helps<font color="#E5E5E5"> a lot</font>

1137
00:43:25,589 --> 00:43:33,569
<font color="#CCCCCC">yeah which</font><font color="#E5E5E5"> is a hint for people to come</font>

1138
00:43:29,910 --> 00:43:36,240
to give<font color="#CCCCCC"> a that that good deployment</font>

1139
00:43:33,569 --> 00:43:39,960
experience I'm sure

1140
00:43:36,240 --> 00:43:42,419
the is is v2 portion was that could you

1141
00:43:39,960 --> 00:43:44,820
identify<font color="#E5E5E5"> the one versus v2 in your ice</font>

1142
00:43:42,420 --> 00:43:51,360
ice restart as far as the ice is restart

1143
00:43:44,820 --> 00:43:52,950
dress like<font color="#E5E5E5"> SH and yeah I'm sorry I</font>

1144
00:43:51,360 --> 00:43:55,530
<font color="#E5E5E5">thought you were going to ask mike this</font>

1145
00:43:52,950 --> 00:43:59,240
Mike's not here no nobody not only just

1146
00:43:55,530 --> 00:44:02,310
the Shan draft for version tofu and

1147
00:43:59,240 --> 00:44:04,140
lastly the reason you didn't mention the

1148
00:44:02,310 --> 00:44:05,880
m.s DP is because the AMS dp's<font color="#CCCCCC"> five</font>

1149
00:44:04,140 --> 00:44:08,009
<font color="#E5E5E5">hasn't changed at this point is</font><font color="#CCCCCC"> that</font>

1150
00:44:05,880 --> 00:44:12,840
correct are your stuffs beyond yours to

1151
00:44:08,010 --> 00:44:14,970
under work yes so it sits in the design

1152
00:44:12,840 --> 00:44:17,160
group so<font color="#E5E5E5"> you've you've worked on stuff</font>

1153
00:44:14,970 --> 00:44:19,649
that<font color="#E5E5E5"> doesn't match the 11 or the six</font>

1154
00:44:17,160 --> 00:44:22,259
draft um everything is work in progress

1155
00:44:19,650 --> 00:44:24,060
I can actually everything I've described

1156
00:44:22,260 --> 00:44:27,030
as completely work in progress for a

1157
00:44:24,060 --> 00:44:32,009
<font color="#E5E5E5">number</font><font color="#CCCCCC"> of vendors at this point</font><font color="#E5E5E5"> okay</font>

1158
00:44:27,030 --> 00:44:35,790
thank you<font color="#E5E5E5"> sure Hauschka from Ayr</font>

1159
00:44:32,010 --> 00:44:38,250
networks<font color="#CCCCCC"> them so you are their</font>

1160
00:44:35,790 --> 00:44:40,830
equivalent could you speak up a live

1161
00:44:38,250 --> 00:44:43,460
ullin developments with link level

1162
00:44:40,830 --> 00:44:47,400
protocols<font color="#CCCCCC"> hdl-c ignore my keeper lives</font>

1163
00:44:43,460 --> 00:44:49,530
during this period or um you not expect

1164
00:44:47,400 --> 00:44:54,510
<font color="#E5E5E5">link to go down and and I mean how do</font>

1165
00:44:49,530 --> 00:44:57,000
<font color="#E5E5E5">you so right now I'm not necessarily</font>

1166
00:44:54,510 --> 00:45:00,060
aware of any extensions in that area I

1167
00:44:57,000 --> 00:45:06,690
was one level of the stat so there may

1168
00:45:00,060 --> 00:45:07,670
be but I'm<font color="#CCCCCC"> not exactly</font><font color="#E5E5E5"> positive anything</font>

1169
00:45:06,690 --> 00:45:10,630
else

1170
00:45:07,670 --> 00:45:10,630
thank you very<font color="#CCCCCC"> much</font>

