1
00:00:11,180 --> 00:00:17,910
software for open networking and cloud

2
00:00:14,510 --> 00:00:21,210
sonic great contribution from Microsoft

3
00:00:17,910 --> 00:00:22,740
in the world of networking but I have to

4
00:00:21,210 --> 00:00:28,770
say they didn't get something quite

5
00:00:22,740 --> 00:00:32,549
right the name in cloud and think

6
00:00:28,770 --> 00:00:33,739
outside of cloud that's the use case for

7
00:00:32,549 --> 00:00:37,769
our talk today

8
00:00:33,739 --> 00:00:41,070
he's Vince from Dell network architect

9
00:00:37,770 --> 00:00:44,030
and me Alan Carr our data center

10
00:00:41,070 --> 00:00:46,739
architect from Comcast

11
00:00:44,030 --> 00:00:50,280
what we are going to talk today a quick

12
00:00:46,739 --> 00:00:54,358
overview so we will look at overview of

13
00:00:50,280 --> 00:00:58,559
Comcast data centers how what's in there

14
00:00:54,359 --> 00:01:00,649
how they look like why we were even

15
00:00:58,559 --> 00:01:05,220
looking for a new operating system

16
00:01:00,649 --> 00:01:07,730
details about Sonic and where we are

17
00:01:05,220 --> 00:01:12,210
deploying it at Comcast and how we are

18
00:01:07,730 --> 00:01:14,100
operationalizing it ok so the data

19
00:01:12,210 --> 00:01:17,490
center footprint at Comcast we have

20
00:01:14,100 --> 00:01:20,520
eight national data centers 14 regional

21
00:01:17,490 --> 00:01:24,119
50 for local a bunch of others total

22
00:01:20,520 --> 00:01:25,949
about like 90 sites the focus today is

23
00:01:24,119 --> 00:01:30,570
primarily on the Nationals because

24
00:01:25,950 --> 00:01:34,320
that's where we are doing sonic in terms

25
00:01:30,570 --> 00:01:36,089
of devices we are looking at about 9500

26
00:01:34,320 --> 00:01:39,059
natural devices just for routing

27
00:01:36,090 --> 00:01:42,570
switching kind of the devices the count

28
00:01:39,060 --> 00:01:48,090
that we know about which gives us close

29
00:01:42,570 --> 00:01:50,490
to 300,000 server ports and we do 600

30
00:01:48,090 --> 00:01:55,590
plus Network changes a month again the

31
00:01:50,490 --> 00:01:58,199
changes that we know about so well so

32
00:01:55,590 --> 00:02:01,710
but the complexity where it comes from

33
00:01:58,200 --> 00:02:03,630
is the rainbow datacenters we build with

34
00:02:01,710 --> 00:02:06,059
multi vendor and all different kind of

35
00:02:03,630 --> 00:02:09,630
hardware's and different vendors there

36
00:02:06,060 --> 00:02:12,230
so we have more than eight vendors for

37
00:02:09,630 --> 00:02:16,079
again not including any server hardware

38
00:02:12,230 --> 00:02:19,109
which brings 117 different hardware

39
00:02:16,080 --> 00:02:22,080
models and 184 different operating

40
00:02:19,110 --> 00:02:22,740
systems management tools are we don't

41
00:02:22,080 --> 00:02:26,520
want to talk

42
00:02:22,740 --> 00:02:28,440
and everything is there so what runs on

43
00:02:26,520 --> 00:02:30,840
that hardware or different cloud

44
00:02:28,440 --> 00:02:33,600
platforms OpenStack cloud the VMware

45
00:02:30,840 --> 00:02:36,990
cloud kubernetes container a Service

46
00:02:33,600 --> 00:02:39,870
Cloud Foundry and no video systems why

47
00:02:36,990 --> 00:02:41,550
systems bare-metal all different kind of

48
00:02:39,870 --> 00:02:45,210
applications so in different kind of

49
00:02:41,550 --> 00:02:48,240
protocols and on top of that we need to

50
00:02:45,210 --> 00:02:49,980
secure that so there's some segmentation

51
00:02:48,240 --> 00:02:53,690
going on in the network which makes it

52
00:02:49,980 --> 00:02:59,100
so which makes it very hard to

53
00:02:53,690 --> 00:03:01,200
operationalize things and scale is still

54
00:02:59,100 --> 00:03:05,280
manageable the difference we have from

55
00:03:01,200 --> 00:03:07,290
the big web scalers is instead of doing

56
00:03:05,280 --> 00:03:10,940
one thing hundred thousand times we do

57
00:03:07,290 --> 00:03:14,640
like 100 things ten thousand times

58
00:03:10,940 --> 00:03:16,020
so why we need new operating system

59
00:03:14,640 --> 00:03:18,869
after having all those different

60
00:03:16,020 --> 00:03:21,780
variations and that comes to like okay

61
00:03:18,870 --> 00:03:24,030
what if the whole world spoke one

62
00:03:21,780 --> 00:03:25,710
language the travels would have been

63
00:03:24,030 --> 00:03:27,180
much easier they will all understand the

64
00:03:25,710 --> 00:03:29,180
same thing yeah they could have

65
00:03:27,180 --> 00:03:32,490
different cultures and different

66
00:03:29,180 --> 00:03:35,640
traditions but I can communicate to them

67
00:03:32,490 --> 00:03:37,830
in one language so the biggest challenge

68
00:03:35,640 --> 00:03:39,959
is the automation if I have these

69
00:03:37,830 --> 00:03:43,530
different operating systems and these

70
00:03:39,960 --> 00:03:46,980
different hardware's I need something as

71
00:03:43,530 --> 00:03:49,110
a translator to give the same command to

72
00:03:46,980 --> 00:03:52,859
all of them and traditionally we have

73
00:03:49,110 --> 00:03:56,970
been building translation layer on top

74
00:03:52,860 --> 00:03:58,560
of the traditional OSS the attempts were

75
00:03:56,970 --> 00:04:01,170
made with DES laughs and we did use

76
00:03:58,560 --> 00:04:05,070
tailor open config is another great one

77
00:04:01,170 --> 00:04:08,459
but we still need something more that we

78
00:04:05,070 --> 00:04:10,920
can talk the same language normalize the

79
00:04:08,460 --> 00:04:13,740
hardware variations so I want all

80
00:04:10,920 --> 00:04:16,229
different kind of hardware versions but

81
00:04:13,740 --> 00:04:20,609
they all need to be on same level ground

82
00:04:16,230 --> 00:04:23,610
and behave the same way the software

83
00:04:20,608 --> 00:04:26,159
Interop is is a big one to give an

84
00:04:23,610 --> 00:04:29,070
example I cannot I I had problem having

85
00:04:26,160 --> 00:04:32,910
two platforms from same vendor and could

86
00:04:29,070 --> 00:04:34,520
not speak eius eius between them because

87
00:04:32,910 --> 00:04:36,510
they are using different packet formats

88
00:04:34,520 --> 00:04:39,210
several days wasted

89
00:04:36,510 --> 00:04:41,460
you know the troubleshooting cases we

90
00:04:39,210 --> 00:04:43,320
figure out they are using different kind

91
00:04:41,460 --> 00:04:46,289
of hello packets and one needed padding

92
00:04:43,320 --> 00:04:48,240
so if the operating system is the same

93
00:04:46,290 --> 00:04:51,150
chances are we won't have these issues

94
00:04:48,240 --> 00:04:53,130
anymore and we could save some time in

95
00:04:51,150 --> 00:04:56,580
the interrupt testing and certification

96
00:04:53,130 --> 00:04:58,080
internally obviously every time you do

97
00:04:56,580 --> 00:05:01,260
something new we need to reduce the cost

98
00:04:58,080 --> 00:05:05,960
and I want something that is cheaper in

99
00:05:01,260 --> 00:05:09,420
I mean software has a cost to support

100
00:05:05,960 --> 00:05:12,239
another big one is break free with the

101
00:05:09,420 --> 00:05:14,790
with the vendor operating systems I have

102
00:05:12,240 --> 00:05:16,860
a feature built by one vendor but not by

103
00:05:14,790 --> 00:05:19,110
other and now I'm stuck I cannot use it

104
00:05:16,860 --> 00:05:19,680
because it has to make business sense

105
00:05:19,110 --> 00:05:21,990
for them

106
00:05:19,680 --> 00:05:25,350
it has to lie on their priority list

107
00:05:21,990 --> 00:05:27,690
which is not always the case

108
00:05:25,350 --> 00:05:31,320
we need multi vendor we need chip

109
00:05:27,690 --> 00:05:33,180
diversity and we want to decouple not

110
00:05:31,320 --> 00:05:35,370
only the hardware software but also

111
00:05:33,180 --> 00:05:39,600
different software components so if I

112
00:05:35,370 --> 00:05:42,930
want I can yank this stack and replace

113
00:05:39,600 --> 00:05:45,420
it or I can upgrade one at a time not

114
00:05:42,930 --> 00:05:48,930
having the traditional monolithic codes

115
00:05:45,420 --> 00:05:53,550
and out of all that wish list I still

116
00:05:48,930 --> 00:05:57,060
want the luxury to be able to have phone

117
00:05:53,550 --> 00:06:00,600
call and have some support on it so

118
00:05:57,060 --> 00:06:01,800
where that takes us is that's that's

119
00:06:00,600 --> 00:06:06,020
served by Sonic

120
00:06:01,800 --> 00:06:06,020
what is sonic wins

121
00:06:10,050 --> 00:06:15,930
so raise of hand before this talk how

122
00:06:13,480 --> 00:06:20,620
many people have heard of Sonic

123
00:06:15,930 --> 00:06:23,670
all right that's a fifth and of those

124
00:06:20,620 --> 00:06:28,630
people how many have actually installed

125
00:06:23,670 --> 00:06:31,330
played with it tested it out all right a

126
00:06:28,630 --> 00:06:34,540
significantly less amount of people I

127
00:06:31,330 --> 00:06:37,330
only it's all about five hands up

128
00:06:34,540 --> 00:06:40,600
so underlying underneath the covers

129
00:06:37,330 --> 00:06:43,000
right Sonic is built upon Linux and with

130
00:06:40,600 --> 00:06:45,040
that you're able to leverage advanced

131
00:06:43,000 --> 00:06:46,870
management tools such that the server

132
00:06:45,040 --> 00:06:50,620
guys that are already used to with a

133
00:06:46,870 --> 00:06:52,690
common CI CD ansible Jenkins Jeff puppet

134
00:06:50,620 --> 00:06:54,940
from the management system so that in

135
00:06:52,690 --> 00:06:56,860
itself is alan carr had mentioned being

136
00:06:54,940 --> 00:06:59,920
able to leverage that for the network

137
00:06:56,860 --> 00:07:04,570
and if we look at the two things there

138
00:06:59,920 --> 00:07:06,340
the OD AB and ASIC vendor diversity as

139
00:07:04,570 --> 00:07:09,990
well as the search abstraction layer

140
00:07:06,340 --> 00:07:13,349
that means what we can do is leverage

141
00:07:09,990 --> 00:07:16,720
manufacturers such as Broadcom Mellanox

142
00:07:13,350 --> 00:07:19,360
barefoot and it's hardware independent

143
00:07:16,720 --> 00:07:21,520
right so what that we were talking about

144
00:07:19,360 --> 00:07:24,070
was being able to use the same software

145
00:07:21,520 --> 00:07:25,659
all the same automation tools to manage

146
00:07:24,070 --> 00:07:31,900
the network infrastructure but the

147
00:07:25,660 --> 00:07:34,110
hardware itself can change we were

148
00:07:31,900 --> 00:07:37,359
talking about containers right

149
00:07:34,110 --> 00:07:39,430
everything right now that's what they're

150
00:07:37,360 --> 00:07:43,210
built on and if we look at how this is

151
00:07:39,430 --> 00:07:46,750
built for example BGP we can take that

152
00:07:43,210 --> 00:07:49,539
stack there and as the operator you have

153
00:07:46,750 --> 00:07:53,350
the option you have the choice of being

154
00:07:49,540 --> 00:07:56,830
able to pick quagga FRR go bgp versus

155
00:07:53,350 --> 00:07:59,890
bgp or juniper crpd and again customize

156
00:07:56,830 --> 00:08:02,500
that operator to customize the operating

157
00:07:59,890 --> 00:08:06,010
system based upon your specific use case

158
00:08:02,500 --> 00:08:08,250
maybe you don't like one stack versus

159
00:08:06,010 --> 00:08:10,270
the other easy to swap out without

160
00:08:08,250 --> 00:08:12,420
unchanging the underlying operating

161
00:08:10,270 --> 00:08:12,419
system

162
00:08:14,060 --> 00:08:17,690
what I'd like to show here and I'm not

163
00:08:16,460 --> 00:08:18,859
going to go through all of it right is

164
00:08:17,690 --> 00:08:21,050
again

165
00:08:18,860 --> 00:08:22,760
in the user space you see all the

166
00:08:21,050 --> 00:08:24,980
different pieces that are containerized

167
00:08:22,760 --> 00:08:28,250
and the ability to maybe pull them out

168
00:08:24,980 --> 00:08:30,230
create your own and then interact at the

169
00:08:28,250 --> 00:08:31,520
bottom level we have the actual physical

170
00:08:30,230 --> 00:08:33,740
hardware right we're talking about the

171
00:08:31,520 --> 00:08:35,240
specific Asics and then the kernel space

172
00:08:33,740 --> 00:08:38,180
where you have all the different drivers

173
00:08:35,240 --> 00:08:40,310
right the switch abstraction interface

174
00:08:38,179 --> 00:08:43,130
sits there to be able to leverage

175
00:08:40,309 --> 00:08:45,380
different vendors and what I do want to

176
00:08:43,130 --> 00:08:47,150
highlight here is in a pub sub model so

177
00:08:45,380 --> 00:08:54,740
again being able to create your own

178
00:08:47,150 --> 00:08:56,240
pieces custom to your environment with

179
00:08:54,740 --> 00:08:59,810
this I'm not going to go through it but

180
00:08:56,240 --> 00:09:01,610
you'll have the slides I'd like to ask

181
00:08:59,810 --> 00:09:03,829
when was the last time you actually saw

182
00:09:01,610 --> 00:09:06,530
a packet walk through from a vendor

183
00:09:03,830 --> 00:09:09,080
showing getting an update and then

184
00:09:06,530 --> 00:09:13,480
programming the fit right that's not

185
00:09:09,080 --> 00:09:13,480
publicly usually publicly available a

186
00:09:14,080 --> 00:09:20,510
little bit about the maturity of Sonic 3

187
00:09:17,180 --> 00:09:21,560
releases a year there's about hundreds

188
00:09:20,510 --> 00:09:25,130
of commits a month

189
00:09:21,560 --> 00:09:26,959
we got about 850 community members and I

190
00:09:25,130 --> 00:09:30,410
actually just checked this morning

191
00:09:26,960 --> 00:09:32,920
there's about 89 supported platforms so

192
00:09:30,410 --> 00:09:36,319
by the time that we had submitted this

193
00:09:32,920 --> 00:09:39,709
until today it's increased in the number

194
00:09:36,320 --> 00:09:41,170
of size major customers that are

195
00:09:39,710 --> 00:09:42,470
actually running this in production

196
00:09:41,170 --> 00:09:45,110
Alibaba

197
00:09:42,470 --> 00:09:48,530
Tencent linkedin dell Broadcom and

198
00:09:45,110 --> 00:09:51,200
Mellanox as far as contributors to the

199
00:09:48,530 --> 00:09:52,760
sonic repository and then there also is

200
00:09:51,200 --> 00:09:55,160
commercial support available for people

201
00:09:52,760 --> 00:10:00,890
that want to run open source but still

202
00:09:55,160 --> 00:10:03,709
need some form of support so the

203
00:10:00,890 --> 00:10:05,720
advantages of sonic again designer

204
00:10:03,710 --> 00:10:08,660
network operating system we saw in the

205
00:10:05,720 --> 00:10:10,700
slide or to go you can change out the

206
00:10:08,660 --> 00:10:15,160
routing stack depending upon your

207
00:10:10,700 --> 00:10:18,560
specific use case that next point there

208
00:10:15,160 --> 00:10:22,390
sonic it's open source so being able to

209
00:10:18,560 --> 00:10:24,979
leverage that with current vendors as

210
00:10:22,390 --> 00:10:28,399
opposed to people with large spend where

211
00:10:24,980 --> 00:10:31,879
they're being able to actually negotiate

212
00:10:28,399 --> 00:10:34,310
rates with their current vendors because

213
00:10:31,879 --> 00:10:36,230
it is a modern operating system we don't

214
00:10:34,310 --> 00:10:38,388
have to worry about monolithic code and

215
00:10:36,230 --> 00:10:42,620
all the baggage that comes associated

216
00:10:38,389 --> 00:10:46,879
with that at some point if there is

217
00:10:42,620 --> 00:10:49,160
looking at Sonic what we mean by here is

218
00:10:46,879 --> 00:10:52,459
building the same layer 2 layer 3 stack

219
00:10:49,160 --> 00:10:55,069
you see all the other vendors everyone

220
00:10:52,459 --> 00:10:57,310
they're building the same feature if we

221
00:10:55,069 --> 00:10:59,149
were able to consolidate on the same

222
00:10:57,310 --> 00:11:00,979
person creating that feature

223
00:10:59,149 --> 00:11:05,600
interoperability and stability would

224
00:11:00,980 --> 00:11:07,610
probably go up in my opinion zero

225
00:11:05,600 --> 00:11:09,350
downtime being able to upgrade the

226
00:11:07,610 --> 00:11:11,029
containers on the fly and then Alan

227
00:11:09,350 --> 00:11:14,000
Carter will also go through a brief demo

228
00:11:11,029 --> 00:11:16,579
of the fast reboot and warm reboot and

229
00:11:14,000 --> 00:11:19,399
part of the CI CD practice is that's not

230
00:11:16,579 --> 00:11:22,779
just for cloud ever anymore everyone has

231
00:11:19,399 --> 00:11:22,779
the ability to do this

232
00:11:27,600 --> 00:11:33,540
okay so where are we deploying sonic at

233
00:11:30,730 --> 00:11:39,250
Comcast we're taking a phased approach

234
00:11:33,540 --> 00:11:40,719
starting from the DC core that we have

235
00:11:39,250 --> 00:11:43,720
in more detail in than the following

236
00:11:40,720 --> 00:11:46,060
slides how the team looks like so five

237
00:11:43,720 --> 00:11:51,640
engineers and that includes our new boss

238
00:11:46,060 --> 00:11:54,130
as well plus 24/7 operations team we do

239
00:11:51,640 --> 00:11:55,780
have plans to extend it in lower layers

240
00:11:54,130 --> 00:11:58,180
and enable more features later

241
00:11:55,780 --> 00:12:05,380
but what's deployed now is pretty simple

242
00:11:58,180 --> 00:12:09,280
we are doing lldp BGP ecmp DHCP LLDPE

243
00:12:05,380 --> 00:12:14,230
the generic management features ECL NTP

244
00:12:09,280 --> 00:12:17,410
tech acts and stuff we do want to get to

245
00:12:14,230 --> 00:12:22,300
some of the layer 2 things next year

246
00:12:17,410 --> 00:12:26,260
including the we explained and a bgp

247
00:12:22,300 --> 00:12:29,319
evpn so high level how the comcast data

248
00:12:26,260 --> 00:12:33,160
centers look like this we follow quad

249
00:12:29,320 --> 00:12:35,320
design which means so the National DC is

250
00:12:33,160 --> 00:12:38,160
divided in quad one two three four

251
00:12:35,320 --> 00:12:41,800
typically if you see on the bottom here

252
00:12:38,160 --> 00:12:44,319
there are racks with top of rack

253
00:12:41,800 --> 00:12:48,189
switches connecting into spines further

254
00:12:44,320 --> 00:12:51,130
aggregated into AG spine going north of

255
00:12:48,190 --> 00:12:54,070
it super-rag and multiple hundred gigs

256
00:12:51,130 --> 00:12:54,970
connected to backbone it's all layer

257
00:12:54,070 --> 00:12:58,030
three ebgp

258
00:12:54,970 --> 00:13:00,370
between the layers now in the center

259
00:12:58,030 --> 00:13:02,140
where it says DC core we're gonna zoom

260
00:13:00,370 --> 00:13:06,060
into it little more on the next one and

261
00:13:02,140 --> 00:13:10,240
that's the area where we are doing sonic

262
00:13:06,060 --> 00:13:12,880
so the DC core is kind of a contained

263
00:13:10,240 --> 00:13:15,520
unit it's like a block that we can

264
00:13:12,880 --> 00:13:21,310
repeat in different quads each unit

265
00:13:15,520 --> 00:13:22,590
looks like 48 so it is 32 spines and 16

266
00:13:21,310 --> 00:13:25,780
tier-2 spines

267
00:13:22,590 --> 00:13:29,920
they are all same kind of switch same

268
00:13:25,780 --> 00:13:34,079
skew tomahawk 3 based 32 by 400 device

269
00:13:29,920 --> 00:13:37,209
and at the end what I get out of it is

270
00:13:34,080 --> 00:13:40,720
2048 ports of 100 gig that I can use for

271
00:13:37,210 --> 00:13:44,199
any top of the rack switches it's a 2

272
00:13:40,720 --> 00:13:47,740
hundred 4.8 a non-blocking fabric we had

273
00:13:44,199 --> 00:13:50,258
a good non-blocking and the leaf spine

274
00:13:47,740 --> 00:13:55,600
taught from Ross white before that this

275
00:13:50,259 --> 00:13:58,120
is one of those fabric design and we are

276
00:13:55,600 --> 00:14:00,930
we are running it pretty lean like we

277
00:13:58,120 --> 00:14:05,319
looked at the features its underlay only

278
00:14:00,930 --> 00:14:07,899
IP v4 v6 fabric by doing this what I get

279
00:14:05,319 --> 00:14:11,920
is for about 40 percent reduction in

280
00:14:07,899 --> 00:14:15,310
cost and that's after we have

281
00:14:11,920 --> 00:14:18,519
standardized on single-mode 500 meter dr

282
00:14:15,310 --> 00:14:18,939
for optics versus what we were doing

283
00:14:18,519 --> 00:14:22,509
before

284
00:14:18,939 --> 00:14:24,579
hey this is sr this is long rage cutting

285
00:14:22,509 --> 00:14:28,360
down all of that just have one optics

286
00:14:24,579 --> 00:14:30,819
overall and we also gain in terms of

287
00:14:28,360 --> 00:14:33,610
latency going from D buffer to shallow

288
00:14:30,819 --> 00:14:38,889
buffer here it's a significant

289
00:14:33,610 --> 00:14:41,800
improvement in latency now the

290
00:14:38,889 --> 00:14:43,509
monitoring part the data collection so

291
00:14:41,800 --> 00:14:47,829
we are leveraging all these different

292
00:14:43,509 --> 00:14:50,350
sources or telemetry gr PC syslog as an

293
00:14:47,829 --> 00:14:56,589
MP CLI and ever flow is something that

294
00:14:50,350 --> 00:14:58,559
we are working on now more details into

295
00:14:56,589 --> 00:15:01,720
the data sources what they are doing so

296
00:14:58,559 --> 00:15:05,469
for control plane and network topology

297
00:15:01,720 --> 00:15:09,129
we are looking at as an mp4 system

298
00:15:05,470 --> 00:15:11,949
events its syslog and various counter

299
00:15:09,129 --> 00:15:16,209
sport counters and the buffer counters

300
00:15:11,949 --> 00:15:18,758
it's using streaming telemetry again our

301
00:15:16,209 --> 00:15:23,050
flow is there in words for packet

302
00:15:18,759 --> 00:15:25,439
telemetry and the tools we are using we

303
00:15:23,050 --> 00:15:28,089
are building in-house in partnering with

304
00:15:25,439 --> 00:15:30,250
its one of partnering with outside

305
00:15:28,089 --> 00:15:33,930
vendors also to build to collect the

306
00:15:30,250 --> 00:15:37,180
data and make some sense out of it

307
00:15:33,930 --> 00:15:38,529
unlike the traditional tools where they

308
00:15:37,180 --> 00:15:40,989
are used just for the monitoring

309
00:15:38,529 --> 00:15:45,189
purposes a up down we want to do

310
00:15:40,990 --> 00:15:48,160
something more in this core few few

311
00:15:45,189 --> 00:15:49,509
things we are looking at or using the

312
00:15:48,160 --> 00:15:53,069
machine learning capabilities for

313
00:15:49,509 --> 00:15:53,069
pattern recognition and drifts

314
00:15:54,540 --> 00:16:00,160
so a few things that we we have as a

315
00:15:57,790 --> 00:16:02,410
requirement or I'm not going to

316
00:16:00,160 --> 00:16:06,069
configure any threshold on any of the

317
00:16:02,410 --> 00:16:09,360
counters they have to be adaptive and

318
00:16:06,070 --> 00:16:12,280
more of like machine learning kind of

319
00:16:09,360 --> 00:16:14,560
you see the pattern let it run for a

320
00:16:12,280 --> 00:16:17,439
week or more and when there is a drift

321
00:16:14,560 --> 00:16:20,709
for more than a certain amount it causes

322
00:16:17,440 --> 00:16:22,420
an alert other thing we want to make get

323
00:16:20,710 --> 00:16:24,430
out of it is to detect the grave

324
00:16:22,420 --> 00:16:29,469
failures which is more important for

325
00:16:24,430 --> 00:16:31,510
sonic the way it behaves if the box is

326
00:16:29,470 --> 00:16:33,850
up and running and interfaces are up but

327
00:16:31,510 --> 00:16:37,860
certainly I drop traffic we need to

328
00:16:33,850 --> 00:16:40,900
detect that and that's not based on any

329
00:16:37,860 --> 00:16:42,550
traditional alert like this something

330
00:16:40,900 --> 00:16:44,770
went down in this case nothing went down

331
00:16:42,550 --> 00:16:49,270
but we are learning it from the patterns

332
00:16:44,770 --> 00:16:50,949
and from the drift the the third one we

333
00:16:49,270 --> 00:16:53,620
we need to look at some of the

334
00:16:50,950 --> 00:16:56,470
correlation pieces so when something

335
00:16:53,620 --> 00:16:59,140
goes wrong I get 30 events and I want

336
00:16:56,470 --> 00:17:02,080
this tool to be able to correlate them

337
00:16:59,140 --> 00:17:04,450
there hey there are all the events

338
00:17:02,080 --> 00:17:06,790
related to one incident so alert me only

339
00:17:04,450 --> 00:17:09,370
once I mean there's detail available but

340
00:17:06,790 --> 00:17:15,730
I need only they are one so I need only

341
00:17:09,369 --> 00:17:18,579
one incident repeatable shot we we did

342
00:17:15,730 --> 00:17:20,410
so this is one of the features which is

343
00:17:18,579 --> 00:17:23,260
particularly interesting to me because

344
00:17:20,410 --> 00:17:26,560
we were looking at traditional vendors

345
00:17:23,260 --> 00:17:28,450
to build us something hey why it takes

346
00:17:26,560 --> 00:17:31,060
so long to reboot and we have been

347
00:17:28,450 --> 00:17:34,510
asking the feature velocity or whatever

348
00:17:31,060 --> 00:17:35,379
never got it and sonic has it now the

349
00:17:34,510 --> 00:17:38,440
fast reboot

350
00:17:35,380 --> 00:17:40,330
I still get messages from the guy

351
00:17:38,440 --> 00:17:43,540
working in lab hey I loaded all the

352
00:17:40,330 --> 00:17:45,189
configs and I rebooted the box box is

353
00:17:43,540 --> 00:17:50,170
going for a reboot and I'm going out for

354
00:17:45,190 --> 00:17:52,960
lunch so with with the fast reboot we

355
00:17:50,170 --> 00:17:54,490
can reboot the Box in less than the

356
00:17:52,960 --> 00:17:57,520
requirements say 25 seconds

357
00:17:54,490 --> 00:17:59,260
conservatively I put here 30 seconds so

358
00:17:57,520 --> 00:18:01,870
we did some demos and I have the

359
00:17:59,260 --> 00:18:05,620
screenshots here to share so on the left

360
00:18:01,870 --> 00:18:06,729
it shows ferryboat loading type and on

361
00:18:05,620 --> 00:18:08,770
the right is over

362
00:18:06,730 --> 00:18:12,549
reboot we are going to look at the fast

363
00:18:08,770 --> 00:18:15,520
reboot today so the the control plane so

364
00:18:12,549 --> 00:18:19,179
the state of the forwarding DB and the

365
00:18:15,520 --> 00:18:21,400
ARP table is saved before before the

366
00:18:19,179 --> 00:18:24,549
control plane goes down and data plane

367
00:18:21,400 --> 00:18:26,549
is not cleared until the control pin has

368
00:18:24,549 --> 00:18:32,470
come back and it's ready to reinitialize

369
00:18:26,549 --> 00:18:36,668
the data plane here's the setup on the

370
00:18:32,470 --> 00:18:40,720
top we have two boxes running sonic and

371
00:18:36,669 --> 00:18:45,880
at the bottom server 37 and 39 running

372
00:18:40,720 --> 00:18:48,700
high power so the top two windows here

373
00:18:45,880 --> 00:18:52,570
are showing those two switches the

374
00:18:48,700 --> 00:18:58,450
steady state and window marked one

375
00:18:52,570 --> 00:19:02,590
showing high power of turning on now if

376
00:18:58,450 --> 00:19:06,070
you could read on the window one is you

377
00:19:02,590 --> 00:19:07,600
a faster abort command and the iperf

378
00:19:06,070 --> 00:19:13,270
doesn't show any disruption there's no

379
00:19:07,600 --> 00:19:15,969
disruption in data plane yet once the

380
00:19:13,270 --> 00:19:16,870
control plane is up the data plane gets

381
00:19:15,970 --> 00:19:19,270
reinitialized

382
00:19:16,870 --> 00:19:29,139
and that's when I saw only 15 second

383
00:19:19,270 --> 00:19:31,960
disruption sonic has open source there's

384
00:19:29,140 --> 00:19:35,880
a lot to read and some reference that we

385
00:19:31,960 --> 00:19:35,880
use for building this slide deck

386
00:19:36,330 --> 00:19:40,020
thank you questions

387
00:19:52,220 --> 00:20:01,980
illegal Dutch telecom looking at the

388
00:19:57,210 --> 00:20:10,290
slides I am

389
00:20:01,980 --> 00:20:18,090
I seem to detect gap in while okay maybe

390
00:20:10,290 --> 00:20:27,620
a roadmap I'm seeing mention of SNMP yes

391
00:20:18,090 --> 00:20:32,189
and G RPC and I for the access to data I

392
00:20:27,620 --> 00:20:34,469
would have expected to see net con for

393
00:20:32,190 --> 00:20:37,170
rest conf somewhere in the picture and

394
00:20:34,470 --> 00:20:44,430
for the data modeling I think I didn't

395
00:20:37,170 --> 00:20:49,760
see anything and my humble observation

396
00:20:44,430 --> 00:20:54,710
is that the data modeling using yang

397
00:20:49,760 --> 00:21:00,450
seems to be a fairly interesting

398
00:20:54,710 --> 00:21:03,660
development and to me it looks like if

399
00:21:00,450 --> 00:21:07,200
you don't have it in your roadmap and

400
00:21:03,660 --> 00:21:14,480
picture you might actually miss a train

401
00:21:07,200 --> 00:21:17,460
that's leaving can you comment so the

402
00:21:14,480 --> 00:21:21,060
open configure supported the other

403
00:21:17,460 --> 00:21:23,100
models are there my the way I'm showing

404
00:21:21,060 --> 00:21:27,649
is like how we are deploying it at

405
00:21:23,100 --> 00:21:31,889
Comcast there's a lot more than this I

406
00:21:27,650 --> 00:21:34,680
am not so sure about some of the other

407
00:21:31,890 --> 00:21:36,800
data models I mean if anyone else want

408
00:21:34,680 --> 00:21:41,580
to comment

409
00:21:36,800 --> 00:21:43,980
Rahul Agarwal Rock Tara we've been

410
00:21:41,580 --> 00:21:46,919
working with Comcast on this so just to

411
00:21:43,980 --> 00:21:49,230
add to what you just said

412
00:21:46,920 --> 00:21:50,490
actually sonic does the poorest comp so

413
00:21:49,230 --> 00:21:53,280
it has a REST API it's a pretty

414
00:21:50,490 --> 00:21:56,340
sophisticated REST API and it does

415
00:21:53,280 --> 00:21:58,470
support open config based models and in

416
00:21:56,340 --> 00:22:02,320
fact what's been deployed does have a

417
00:21:58,470 --> 00:22:03,910
network model which uses rest as well as

418
00:22:02,320 --> 00:22:06,520
open config but of course it comes over

419
00:22:03,910 --> 00:22:08,740
gr PC yep thank you I'll then to mention

420
00:22:06,520 --> 00:22:12,040
we are working with the hall and his

421
00:22:08,740 --> 00:22:21,210
tool on terror to develop the internal

422
00:22:12,040 --> 00:22:29,349
tools okay thank you

423
00:22:21,210 --> 00:22:29,349
[Applause]

424
00:22:35,340 --> 00:22:37,399
you

