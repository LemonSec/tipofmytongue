1
00:00:10,190 --> 00:00:17,640
hello I'm Tim and I currently work

2
00:00:14,340 --> 00:00:19,590
to tell networking this particular talk

3
00:00:17,640 --> 00:00:24,450
has its roots from when I was at a group

4
00:00:19,590 --> 00:00:25,350
at EMC and at the time this is about six

5
00:00:24,450 --> 00:00:29,520
or seven years ago

6
00:00:25,350 --> 00:00:33,210
we were operating a medium-sized cloud

7
00:00:29,520 --> 00:00:35,820
object store so we stored whatever you

8
00:00:33,210 --> 00:00:37,860
sent to us right and it was a

9
00:00:35,820 --> 00:00:41,280
traditional Network environment with a

10
00:00:37,860 --> 00:00:43,350
core and distribution layer and operated

11
00:00:41,280 --> 00:00:46,830
in a very traditional format all CLI

12
00:00:43,350 --> 00:00:48,570
driven no automation of any kind

13
00:00:46,830 --> 00:00:53,670
involved really in the in the process

14
00:00:48,570 --> 00:00:56,040
and we were asked to expand the

15
00:00:53,670 --> 00:00:58,110
environment significantly so we went

16
00:00:56,040 --> 00:01:01,129
from operating this medium-sized cloud

17
00:00:58,110 --> 00:01:03,210
with let's say hundreds of switches to

18
00:01:01,130 --> 00:01:04,799
having to build out a very large

19
00:01:03,210 --> 00:01:08,939
environment that was measured in

20
00:01:04,799 --> 00:01:12,659
thousands of switches and also went from

21
00:01:08,939 --> 00:01:14,699
storing let's petabytes of data to

22
00:01:12,659 --> 00:01:16,920
storing exabytes of data so a

23
00:01:14,700 --> 00:01:20,039
significant jump in what we were asked

24
00:01:16,920 --> 00:01:22,499
to do and when we started in this

25
00:01:20,039 --> 00:01:24,749
process this was fairly early at least

26
00:01:22,499 --> 00:01:26,908
for us and I think even in the community

27
00:01:24,749 --> 00:01:29,939
as far as DevOps methodology and how

28
00:01:26,909 --> 00:01:31,770
that applies to networking obviously our

29
00:01:29,939 --> 00:01:32,969
friends over on the compute side and the

30
00:01:31,770 --> 00:01:35,100
storage side have been doing this for

31
00:01:32,969 --> 00:01:38,928
decades and they all look at us and

32
00:01:35,100 --> 00:01:42,210
laugh but for us this is quite new and

33
00:01:38,929 --> 00:01:45,539
so we had started experimenting with the

34
00:01:42,210 --> 00:01:48,619
idea of bootstrapping equipment using

35
00:01:45,539 --> 00:01:51,509
some form of automation we went to a

36
00:01:48,619 --> 00:01:53,759
Cisco live conference and we heard about

37
00:01:51,509 --> 00:01:57,479
Pope the power-on Auto provision

38
00:01:53,759 --> 00:01:58,649
methodology that cisco has and started

39
00:01:57,479 --> 00:02:00,950
experimenting with that along with

40
00:01:58,649 --> 00:02:04,859
puppet is something that we knew right

41
00:02:00,950 --> 00:02:05,700
and in that process we found there's a

42
00:02:04,859 --> 00:02:08,008
problem with that

43
00:02:05,700 --> 00:02:10,590
right and what do we do about how we get

44
00:02:08,008 --> 00:02:13,140
data in right so how do we get data into

45
00:02:10,590 --> 00:02:14,790
the auto ship automation process where

46
00:02:13,140 --> 00:02:17,130
do we store this data how do we collect

47
00:02:14,790 --> 00:02:18,989
it how do we actually begin the

48
00:02:17,130 --> 00:02:20,700
automation so that's what this is about

49
00:02:18,990 --> 00:02:23,920
right a single source of truth for your

50
00:02:20,700 --> 00:02:26,410
automation the dream

51
00:02:23,920 --> 00:02:27,940
we want to click the easy button and the

52
00:02:26,410 --> 00:02:29,829
network's configure really we want to

53
00:02:27,940 --> 00:02:31,030
just have it all happen right we don't

54
00:02:29,830 --> 00:02:32,500
want to have minimal human involvement

55
00:02:31,030 --> 00:02:34,569
hopefully right like this should not be

56
00:02:32,500 --> 00:02:36,670
something that network engineers are

57
00:02:34,569 --> 00:02:38,739
having to sit and do and copy paste or

58
00:02:36,670 --> 00:02:43,269
what-have-you of course that's the dream

59
00:02:38,740 --> 00:02:45,370
right the reality not so much we have

60
00:02:43,270 --> 00:02:48,010
varying vendor support for various

61
00:02:45,370 --> 00:02:49,959
methods of automation there's multiple

62
00:02:48,010 --> 00:02:50,679
completing frameworks to use for your

63
00:02:49,959 --> 00:02:54,280
automation

64
00:02:50,680 --> 00:02:56,380
nothing's off-the-shelf there simply is

65
00:02:54,280 --> 00:02:58,080
no easy button that helps you create the

66
00:02:56,380 --> 00:03:03,310
easy button right this is something that

67
00:02:58,080 --> 00:03:05,260
traditionally had to be custom-built why

68
00:03:03,310 --> 00:03:07,870
do we want to automate this is a

69
00:03:05,260 --> 00:03:09,640
question that sometimes comes up and I

70
00:03:07,870 --> 00:03:12,330
think particularly if you're making the

71
00:03:09,640 --> 00:03:15,339
transition from more traditional

72
00:03:12,330 --> 00:03:18,790
operation model to an automated or

73
00:03:15,340 --> 00:03:20,290
DevOps model often we ask this right and

74
00:03:18,790 --> 00:03:22,570
it quite often people make the

75
00:03:20,290 --> 00:03:23,950
transition due to scale because you

76
00:03:22,570 --> 00:03:27,940
simply can no longer hire enough people

77
00:03:23,950 --> 00:03:29,738
to do whatever the work is sometimes

78
00:03:27,940 --> 00:03:33,459
people think the reason we might want to

79
00:03:29,739 --> 00:03:35,950
do this is to save time or save money or

80
00:03:33,459 --> 00:03:38,410
various other reasons but and really

81
00:03:35,950 --> 00:03:41,320
know the reason we do this at least for

82
00:03:38,410 --> 00:03:43,390
us is idempotency so it's term we stole

83
00:03:41,320 --> 00:03:47,260
from our DevOps stole from the math

84
00:03:43,390 --> 00:03:48,790
academic wonks and it just is

85
00:03:47,260 --> 00:03:51,459
essentially the idea of that we should

86
00:03:48,790 --> 00:03:54,280
be able to repeat a task and get exactly

87
00:03:51,459 --> 00:03:55,600
the same result every single time so we

88
00:03:54,280 --> 00:03:57,489
should be able to burn our data center

89
00:03:55,600 --> 00:03:58,930
to the ground and redeploy it tomorrow

90
00:03:57,489 --> 00:04:01,450
and it should look exactly the same

91
00:03:58,930 --> 00:04:04,329
tomorrow as it did today so there should

92
00:04:01,450 --> 00:04:05,970
be no difference in every time we run

93
00:04:04,329 --> 00:04:08,380
this task we should get the same result

94
00:04:05,970 --> 00:04:11,170
that's the primary driver behind

95
00:04:08,380 --> 00:04:12,549
automation and DevOps culture and this

96
00:04:11,170 --> 00:04:13,899
is something I think it's a bit of a

97
00:04:12,549 --> 00:04:15,910
paradigm shift right like it's we have

98
00:04:13,900 --> 00:04:18,489
to think about how we do things in a

99
00:04:15,910 --> 00:04:22,840
different way and this is a key

100
00:04:18,488 --> 00:04:25,830
component of that automation versus

101
00:04:22,840 --> 00:04:29,229
orchestration what are those two things

102
00:04:25,830 --> 00:04:31,000
orchestration codifying your process so

103
00:04:29,229 --> 00:04:33,120
taking your process flow your workflow

104
00:04:31,000 --> 00:04:36,370
and putting that into code for

105
00:04:33,120 --> 00:04:37,630
automation codifying your tasks so these

106
00:04:36,370 --> 00:04:40,180
are individual tasks

107
00:04:37,630 --> 00:04:43,690
that we take that a human use to do and

108
00:04:40,180 --> 00:04:45,970
we make code do it so these two things

109
00:04:43,690 --> 00:04:47,800
go together but they're not the same and

110
00:04:45,970 --> 00:04:49,900
it's key its key thing to think about

111
00:04:47,800 --> 00:04:51,280
that we need to make sure that we're

112
00:04:49,900 --> 00:04:53,200
thinking of orchestration versus

113
00:04:51,280 --> 00:04:56,020
automation and how those two things work

114
00:04:53,200 --> 00:04:58,750
together so orchestration taking our

115
00:04:56,020 --> 00:05:03,039
bits of automation and stringing them

116
00:04:58,750 --> 00:05:04,900
together into a workflow so kind of an

117
00:05:03,040 --> 00:05:07,540
overview of things that we thought about

118
00:05:04,900 --> 00:05:09,460
that we wanted to accomplish when we

119
00:05:07,540 --> 00:05:12,040
started down this road of network

120
00:05:09,460 --> 00:05:13,719
automation and what does it mean so we

121
00:05:12,040 --> 00:05:15,670
have the bootstrap right the greenfield

122
00:05:13,720 --> 00:05:16,780
environment or it could even be into a

123
00:05:15,670 --> 00:05:19,480
brownfield environment where you're

124
00:05:16,780 --> 00:05:22,239
deploying new gear we want to deploy the

125
00:05:19,480 --> 00:05:25,000
new you the new equipment with minimal

126
00:05:22,240 --> 00:05:26,410
human involvement right we want to be

127
00:05:25,000 --> 00:05:27,940
able to validate our physical

128
00:05:26,410 --> 00:05:30,220
infrastructure so we want it to be able

129
00:05:27,940 --> 00:05:33,670
to automate our cable validation as an

130
00:05:30,220 --> 00:05:35,770
example as part of this process moving

131
00:05:33,670 --> 00:05:38,250
into more of the operations environment

132
00:05:35,770 --> 00:05:41,109
we want our not to be able to push out

133
00:05:38,250 --> 00:05:43,810
moves adds and changes without requiring

134
00:05:41,110 --> 00:05:46,150
intervention or work for the network

135
00:05:43,810 --> 00:05:47,560
engineering team you know standardized

136
00:05:46,150 --> 00:05:50,409
changes should be able to be done

137
00:05:47,560 --> 00:05:53,860
without much human or any human

138
00:05:50,410 --> 00:05:55,690
involvement device configuration we

139
00:05:53,860 --> 00:05:57,010
wanted to be able to take the configs

140
00:05:55,690 --> 00:05:59,920
that we had on our devices and

141
00:05:57,010 --> 00:06:02,020
templatized it right so most likely the

142
00:05:59,920 --> 00:06:03,370
config that's on one spine looks really

143
00:06:02,020 --> 00:06:05,469
really similar to the config that's not

144
00:06:03,370 --> 00:06:07,690
another spine same for your Leafs or

145
00:06:05,470 --> 00:06:10,120
what have you right so let's put those

146
00:06:07,690 --> 00:06:14,170
in template form so we can store them in

147
00:06:10,120 --> 00:06:16,960
some format that is repeatable and it

148
00:06:14,170 --> 00:06:18,670
could be in whole for the device or just

149
00:06:16,960 --> 00:06:20,409
a part of the device you know for

150
00:06:18,670 --> 00:06:22,210
example we had some environments where

151
00:06:20,410 --> 00:06:23,710
we kind of thought of the configures to

152
00:06:22,210 --> 00:06:25,450
separate components one that's sort of

153
00:06:23,710 --> 00:06:27,370
like the infrastructure component that's

154
00:06:25,450 --> 00:06:29,260
a little bit more handcrafted and then

155
00:06:27,370 --> 00:06:32,430
another one that's maybe our tenant

156
00:06:29,260 --> 00:06:34,120
based configurations so the

157
00:06:32,430 --> 00:06:36,370
configurations we need to deploy for

158
00:06:34,120 --> 00:06:38,590
particular tenants or customers or what

159
00:06:36,370 --> 00:06:40,180
have you that's probably a lot more

160
00:06:38,590 --> 00:06:43,659
standardized and can be easily

161
00:06:40,180 --> 00:06:45,310
templatized and then version control we

162
00:06:43,660 --> 00:06:48,370
wanted to be able to have some form of

163
00:06:45,310 --> 00:06:50,170
control over our changes so keeping our

164
00:06:48,370 --> 00:06:52,300
templates and github

165
00:06:50,170 --> 00:06:54,340
and then using either branches or forks

166
00:06:52,300 --> 00:06:55,900
depending on your particular religion as

167
00:06:54,340 --> 00:06:59,799
far as how you wanted to maintain your

168
00:06:55,900 --> 00:07:01,599
ghetto and then having a standardized

169
00:06:59,800 --> 00:07:06,070
format of peer review before we merge

170
00:07:01,600 --> 00:07:08,380
changes up into our master branch some

171
00:07:06,070 --> 00:07:10,930
tools we looked at so when we started on

172
00:07:08,380 --> 00:07:13,330
this it was relatively early days and

173
00:07:10,930 --> 00:07:15,940
Puppet was kind of the thing so that's

174
00:07:13,330 --> 00:07:18,729
where we started along the way we

175
00:07:15,940 --> 00:07:21,730
experimented with salt and napalm before

176
00:07:18,730 --> 00:07:24,280
eventually ending up on ansible they

177
00:07:21,730 --> 00:07:27,130
have their pluses and minuses I think

178
00:07:24,280 --> 00:07:30,690
the simplicity of ansible gives it a

179
00:07:27,130 --> 00:07:34,390
strong use case in the network world and

180
00:07:30,690 --> 00:07:35,590
on the orchestration side we have a

181
00:07:34,390 --> 00:07:37,570
stack storm is the one that we

182
00:07:35,590 --> 00:07:40,239
particularly went with of course there's

183
00:07:37,570 --> 00:07:41,710
also other choices like run deck there

184
00:07:40,240 --> 00:07:43,660
are other orchestration tools as well

185
00:07:41,710 --> 00:07:47,609
depending on what you particularly like

186
00:07:43,660 --> 00:07:53,380
to use or what works in your case and as

187
00:07:47,610 --> 00:07:56,500
we looked at this there are some methods

188
00:07:53,380 --> 00:07:59,980
of inputting data right so we've got the

189
00:07:56,500 --> 00:08:01,720
really bad do it by hand copy paste this

190
00:07:59,980 --> 00:08:04,210
is where we started and is what

191
00:08:01,720 --> 00:08:06,190
motivated us to begin this process of

192
00:08:04,210 --> 00:08:08,590
like so we need a better way to get the

193
00:08:06,190 --> 00:08:10,210
data in right because copy paste is very

194
00:08:08,590 --> 00:08:12,179
error-prone it's highly time-consuming

195
00:08:10,210 --> 00:08:14,530
and it's taking us a long time

196
00:08:12,180 --> 00:08:16,810
statically defining it in code also

197
00:08:14,530 --> 00:08:20,140
really really bad write it that doesn't

198
00:08:16,810 --> 00:08:22,900
scale you can't change it easily still

199
00:08:20,140 --> 00:08:25,659
not so great using spreadsheets things

200
00:08:22,900 --> 00:08:28,179
like Google Docs or what have you we did

201
00:08:25,660 --> 00:08:30,700
this also this was a step better than

202
00:08:28,180 --> 00:08:33,870
doing it by hand but still error-prone

203
00:08:30,700 --> 00:08:37,330
and still not particularly scalable and

204
00:08:33,870 --> 00:08:38,669
then finally a little bit better but

205
00:08:37,330 --> 00:08:42,490
still not as good as it could be

206
00:08:38,669 --> 00:08:44,620
disconnected tools things like IPM CMDB

207
00:08:42,490 --> 00:08:47,470
DCIM right so you have all of these

208
00:08:44,620 --> 00:08:49,630
various databases that are not generally

209
00:08:47,470 --> 00:08:51,970
not connected and traditionally have not

210
00:08:49,630 --> 00:08:53,800
been so the data that is in your ipam is

211
00:08:51,970 --> 00:08:58,060
in no way connected to the data that's

212
00:08:53,800 --> 00:08:59,949
in your CMDB or your DCIM and typically

213
00:08:58,060 --> 00:09:01,989
that often means now we're duplicating

214
00:08:59,950 --> 00:09:02,740
data so we've got to put things in twice

215
00:09:01,990 --> 00:09:04,810
we've

216
00:09:02,740 --> 00:09:06,640
to enter the same device into our ipam

217
00:09:04,810 --> 00:09:08,050
that we have to enter into our CMDB and

218
00:09:06,640 --> 00:09:10,060
there's this whole problem of keeping

219
00:09:08,050 --> 00:09:12,910
everything in sync right because once

220
00:09:10,060 --> 00:09:14,199
you put some data in two places probably

221
00:09:12,910 --> 00:09:16,120
you're not going to have it the same in

222
00:09:14,200 --> 00:09:20,520
both and this leads to lots of problems

223
00:09:16,120 --> 00:09:23,440
as we move down the road so a better way

224
00:09:20,520 --> 00:09:26,680
let's have a single source of truth for

225
00:09:23,440 --> 00:09:28,750
all of our data store all of the static

226
00:09:26,680 --> 00:09:31,439
data that we have in the database are in

227
00:09:28,750 --> 00:09:33,970
the data center in a single database

228
00:09:31,440 --> 00:09:36,209
this lets us link together

229
00:09:33,970 --> 00:09:40,029
formally disconnected pieces of data and

230
00:09:36,209 --> 00:09:42,399
we only have to maintain one copy so

231
00:09:40,029 --> 00:09:44,080
instead of having all of these different

232
00:09:42,399 --> 00:09:47,850
databases that have no connection to

233
00:09:44,080 --> 00:09:47,850
each other let's put all the data in one

234
00:09:48,240 --> 00:09:54,760
what data do we want to store so for us

235
00:09:51,880 --> 00:09:56,110
we wanted to store everything and by

236
00:09:54,760 --> 00:09:57,760
everything we meant literally everything

237
00:09:56,110 --> 00:09:59,680
in the data center it didn't matter

238
00:09:57,760 --> 00:10:02,920
whether it was a network piece of

239
00:09:59,680 --> 00:10:07,380
equipment or compute a server or

240
00:10:02,920 --> 00:10:09,670
something from the storage team a rack a

241
00:10:07,380 --> 00:10:11,260
tile in the data center the physical

242
00:10:09,670 --> 00:10:13,270
location of the data center everything

243
00:10:11,260 --> 00:10:16,029
both physical and logical we wanted to

244
00:10:13,270 --> 00:10:18,100
maintain in the data center so all

245
00:10:16,029 --> 00:10:20,140
physical and virtual devices we want to

246
00:10:18,100 --> 00:10:24,070
put in there and again it doesn't matter

247
00:10:20,140 --> 00:10:26,890
whether it's a VM or a switch we wanted

248
00:10:24,070 --> 00:10:29,680
to have it in the database our links all

249
00:10:26,890 --> 00:10:32,800
of our links going between the gear data

250
00:10:29,680 --> 00:10:35,560
set are info so the site addresses the

251
00:10:32,800 --> 00:10:37,719
racks etc IP addresses VLANs a assigns

252
00:10:35,560 --> 00:10:40,300
everything all the bits of data that we

253
00:10:37,720 --> 00:10:42,160
need to make or configurations and our

254
00:10:40,300 --> 00:10:45,849
environment work we want to maintain in

255
00:10:42,160 --> 00:10:47,709
the database so as I mentioned earlier

256
00:10:45,850 --> 00:10:49,839
now we can make these rich connections

257
00:10:47,709 --> 00:10:52,899
between this data that we have so now

258
00:10:49,839 --> 00:10:55,060
our IP address scheme is linked to our

259
00:10:52,899 --> 00:10:57,130
devices that we actually have in the

260
00:10:55,060 --> 00:10:58,930
database etc right all of our links are

261
00:10:57,130 --> 00:11:02,470
connected we can make connections

262
00:10:58,930 --> 00:11:04,420
between the logical side of our link

263
00:11:02,470 --> 00:11:06,310
connections so whether it's the VLAN or

264
00:11:04,420 --> 00:11:09,069
the IP address on a point-to-point link

265
00:11:06,310 --> 00:11:10,569
and the actual physical link so we have

266
00:11:09,070 --> 00:11:12,130
that relationship now between the

267
00:11:10,570 --> 00:11:16,320
physical and the virtual and logical

268
00:11:12,130 --> 00:11:18,420
resources we can easily retrieve

269
00:11:16,320 --> 00:11:20,040
use out of the database based on any

270
00:11:18,420 --> 00:11:21,870
number of search criteria that we want

271
00:11:20,040 --> 00:11:25,740
so whether it's a VLAN or what-have-you

272
00:11:21,870 --> 00:11:28,890
and we can take those resources and put

273
00:11:25,740 --> 00:11:32,610
them into pools so now instead of

274
00:11:28,890 --> 00:11:35,610
thinking of as an example the rack units

275
00:11:32,610 --> 00:11:37,710
in Iraq as individual units we can think

276
00:11:35,610 --> 00:11:40,410
them as think of them as a resource pool

277
00:11:37,710 --> 00:11:44,280
that can be allocated out so we can

278
00:11:40,410 --> 00:11:47,010
assign out use 1 through 15 to the

279
00:11:44,280 --> 00:11:48,689
server team and we can leave some blank

280
00:11:47,010 --> 00:11:52,250
in the middle and we can give ourselves

281
00:11:48,690 --> 00:11:55,020
let's say 35 to 40 8 up at the top and

282
00:11:52,250 --> 00:11:56,790
then we can Alec and let the server team

283
00:11:55,020 --> 00:11:59,370
handle the use that they want to take

284
00:11:56,790 --> 00:12:07,620
and we can take ours as well from the

285
00:11:59,370 --> 00:12:11,910
database so little aside most of us many

286
00:12:07,620 --> 00:12:13,260
of us have a pet and the characteristic

287
00:12:11,910 --> 00:12:15,660
thing about pets right is that we love

288
00:12:13,260 --> 00:12:18,720
them we name them we take care of them

289
00:12:15,660 --> 00:12:23,520
and we particularly are invested in them

290
00:12:18,720 --> 00:12:25,140
as an individual on the other hand if we

291
00:12:23,520 --> 00:12:27,750
look at cattle and many of you may have

292
00:12:25,140 --> 00:12:30,660
heard this explanation before the pets

293
00:12:27,750 --> 00:12:31,920
versus cattle with cattle is not so much

294
00:12:30,660 --> 00:12:35,280
right we don't care about them on an

295
00:12:31,920 --> 00:12:36,930
individual basis we don't name them they

296
00:12:35,280 --> 00:12:39,420
get some sort of a serial number or a

297
00:12:36,930 --> 00:12:41,160
barcode or something we don't

298
00:12:39,420 --> 00:12:43,140
particularly love them on an individual

299
00:12:41,160 --> 00:12:48,900
basis even though we might enjoy them at

300
00:12:43,140 --> 00:12:50,310
dinner we and when they get sick we

301
00:12:48,900 --> 00:12:52,199
probably don't really take care of them

302
00:12:50,310 --> 00:12:56,010
much right we shoot them in the head and

303
00:12:52,200 --> 00:12:57,720
we get a new one and this is in a way

304
00:12:56,010 --> 00:13:01,920
the way we need to think about our

305
00:12:57,720 --> 00:13:04,170
resources our resources we think that

306
00:13:01,920 --> 00:13:06,089
they're special we want to name our

307
00:13:04,170 --> 00:13:07,650
switch we want to love it we want to

308
00:13:06,090 --> 00:13:09,630
protect it we want to take care of it

309
00:13:07,650 --> 00:13:12,449
when it gets sick we call tack and we

310
00:13:09,630 --> 00:13:13,740
get it taken care of and that's how we

311
00:13:12,450 --> 00:13:15,420
cook that's how we traditionally have

312
00:13:13,740 --> 00:13:16,740
thought about all of our resources right

313
00:13:15,420 --> 00:13:19,500
we do the same thing with our IP

314
00:13:16,740 --> 00:13:21,780
addresses and our VLANs like we care

315
00:13:19,500 --> 00:13:23,850
about them on an individual basis we

316
00:13:21,780 --> 00:13:25,260
want to know what VLAN 100 is and that

317
00:13:23,850 --> 00:13:27,780
it's going to be the same everywhere and

318
00:13:25,260 --> 00:13:29,920
that it has a special name and the

319
00:13:27,780 --> 00:13:32,410
answer to that is no your resources are

320
00:13:29,920 --> 00:13:34,510
not special treat them like cattle don't

321
00:13:32,410 --> 00:13:36,550
treat them like pets they're not pets

322
00:13:34,510 --> 00:13:38,950
they shouldn't be something that you

323
00:13:36,550 --> 00:13:41,109
love and care for for it forever we

324
00:13:38,950 --> 00:13:42,670
treat all your resources and it doesn't

325
00:13:41,110 --> 00:13:48,670
matter what it is whether it's a switch

326
00:13:42,670 --> 00:13:51,310
a server VM treat them as cattle this

327
00:13:48,670 --> 00:13:54,010
allows you and frees you from that

328
00:13:51,310 --> 00:13:57,638
restriction of having to care about all

329
00:13:54,010 --> 00:14:01,420
the things ok that's the end of my

330
00:13:57,639 --> 00:14:03,190
little soapbox speech on that so some

331
00:14:01,420 --> 00:14:04,620
different examples that you might use as

332
00:14:03,190 --> 00:14:07,029
a source of truth

333
00:14:04,620 --> 00:14:10,149
DIY wrote right you could go with a

334
00:14:07,029 --> 00:14:11,709
Mongo database or Postgres when we

335
00:14:10,149 --> 00:14:13,209
started we happen to have access to a

336
00:14:11,709 --> 00:14:16,149
post Christ engineer so that's the route

337
00:14:13,209 --> 00:14:17,888
that we went you could use something a

338
00:14:16,149 --> 00:14:20,680
little more proprietary like puppet DB

339
00:14:17,889 --> 00:14:23,139
or Huayra and then even just something

340
00:14:20,680 --> 00:14:26,439
more flat file like a Gamal or Jason

341
00:14:23,139 --> 00:14:28,300
file relatively easy but you kind of get

342
00:14:26,440 --> 00:14:29,620
back to that data entry problem I was

343
00:14:28,300 --> 00:14:33,699
talking about earlier if you go that

344
00:14:29,620 --> 00:14:35,560
route and then off the shelf so this was

345
00:14:33,699 --> 00:14:38,019
a interesting experience for us when we

346
00:14:35,560 --> 00:14:40,239
started down this path netbox was not a

347
00:14:38,019 --> 00:14:44,350
thing or it wasn't open-source sorry it

348
00:14:40,240 --> 00:14:46,269
may have existed and so about I think

349
00:14:44,350 --> 00:14:49,079
about three years after we had been a

350
00:14:46,269 --> 00:14:52,589
using our proprietary one that we built

351
00:14:49,079 --> 00:14:55,599
we saw net net box be open sourced and

352
00:14:52,589 --> 00:14:57,970
we saw that someone else had seen the

353
00:14:55,600 --> 00:15:00,100
same problem we saw and went about

354
00:14:57,970 --> 00:15:01,660
solving it in virtually the same way and

355
00:15:00,100 --> 00:15:04,570
did almost exactly the same thing that

356
00:15:01,660 --> 00:15:06,430
we did so it was fun to see that like in

357
00:15:04,570 --> 00:15:08,140
a vacuum two separate groups of people

358
00:15:06,430 --> 00:15:10,870
created almost identically the same

359
00:15:08,140 --> 00:15:12,610
thing so if you haven't been using net

360
00:15:10,870 --> 00:15:13,720
box or if you are using net box this is

361
00:15:12,610 --> 00:15:16,390
a great route especially if you're

362
00:15:13,720 --> 00:15:18,010
starting fresh today someone's done a

363
00:15:16,390 --> 00:15:19,360
lot of the work already and you may need

364
00:15:18,010 --> 00:15:21,790
to make some updates for your particular

365
00:15:19,360 --> 00:15:24,339
environment but this is a great starting

366
00:15:21,790 --> 00:15:27,360
point if you don't want to go the total

367
00:15:24,339 --> 00:15:27,360
custom path

368
00:15:27,819 --> 00:15:34,849
this is just a simple idea of the kind

369
00:15:33,050 --> 00:15:38,118
of data and the way you might format it

370
00:15:34,850 --> 00:15:40,639
in your database as a network engineers

371
00:15:38,119 --> 00:15:44,509
maybe we traditionally haven't thought

372
00:15:40,639 --> 00:15:46,550
in this form of DB schema and so this

373
00:15:44,509 --> 00:15:47,990
was kind of new for us and also was

374
00:15:46,550 --> 00:15:49,609
fortunate again that we had a Postgres

375
00:15:47,990 --> 00:15:51,350
engineer to help us kind of like learn

376
00:15:49,610 --> 00:15:54,410
how to think about how do you format

377
00:15:51,350 --> 00:15:56,209
data in a database and this would be one

378
00:15:54,410 --> 00:15:57,230
of the areas where using netbox might

379
00:15:56,209 --> 00:15:58,849
kind of free you up because you don't

380
00:15:57,230 --> 00:16:01,639
have to think about this detail because

381
00:15:58,850 --> 00:16:04,160
they've done it for you but if you take

382
00:16:01,639 --> 00:16:05,629
the what we looked at and again this is

383
00:16:04,160 --> 00:16:07,459
a fairly sanitized version this doesn't

384
00:16:05,629 --> 00:16:11,029
have all the things but just to give you

385
00:16:07,459 --> 00:16:12,079
an idea in the middle is the devices

386
00:16:11,029 --> 00:16:14,629
right and that's kind of the center of

387
00:16:12,079 --> 00:16:16,670
the universe that's where we kind of

388
00:16:14,629 --> 00:16:19,309
revolve everything around the device and

389
00:16:16,670 --> 00:16:21,920
again that device could be a switch it

390
00:16:19,309 --> 00:16:26,749
could be a server it could be a VM it

391
00:16:21,920 --> 00:16:28,849
could be a rack in the data center it

392
00:16:26,749 --> 00:16:30,199
could be anything physical or virtual in

393
00:16:28,850 --> 00:16:32,749
the data center that we want to track in

394
00:16:30,199 --> 00:16:34,670
the database and these are just some

395
00:16:32,749 --> 00:16:37,249
example bits of information you might

396
00:16:34,670 --> 00:16:39,050
want to store about that device one

397
00:16:37,249 --> 00:16:42,019
thing you'll notice is that we split off

398
00:16:39,050 --> 00:16:44,719
interfaces into its own table and the

399
00:16:42,019 --> 00:16:47,689
reason for that is that as you if you're

400
00:16:44,720 --> 00:16:50,899
using different vendors for your

401
00:16:47,689 --> 00:16:53,179
equipment in the data center typically

402
00:16:50,899 --> 00:16:56,899
the the interfaces are often named or

403
00:16:53,179 --> 00:16:58,910
numbered in different formats and this

404
00:16:56,899 --> 00:17:01,730
can be true even within the same vendor

405
00:16:58,910 --> 00:17:03,589
right like a particular model might have

406
00:17:01,730 --> 00:17:06,169
one numbering format versus another

407
00:17:03,589 --> 00:17:08,659
numbering format and if you're operating

408
00:17:06,169 --> 00:17:12,439
in a traditional CLI format that's not

409
00:17:08,659 --> 00:17:15,260
so much of a problem because as the

410
00:17:12,439 --> 00:17:18,020
engineer you know it's you know e 1 / 1

411
00:17:15,260 --> 00:17:20,209
/ 1 versus e 1 you know depending on the

412
00:17:18,020 --> 00:17:21,949
numbering format but when you move into

413
00:17:20,209 --> 00:17:23,569
an automated format that starts to

414
00:17:21,949 --> 00:17:26,449
become an issue the code doesn't know

415
00:17:23,569 --> 00:17:28,520
that those are maybe the same thing so

416
00:17:26,449 --> 00:17:30,289
by having interfaces in its own table it

417
00:17:28,520 --> 00:17:32,929
gave us the freedom to template eyes

418
00:17:30,289 --> 00:17:35,570
what different models look like and what

419
00:17:32,929 --> 00:17:39,159
different vendors how they number ports

420
00:17:35,570 --> 00:17:43,129
and so you can start to standardize that

421
00:17:39,159 --> 00:17:46,940
left side of the screen is the physical

422
00:17:43,129 --> 00:17:49,549
world so the site the rack that the gear

423
00:17:46,940 --> 00:17:51,499
is located in and the physical link

424
00:17:49,549 --> 00:17:54,309
connections that occur between the gear

425
00:17:51,499 --> 00:17:57,730
and the right side of the screen is the

426
00:17:54,309 --> 00:18:01,519
logical world so we have a VLANs

427
00:17:57,730 --> 00:18:03,139
networks or IP addresses verse etc right

428
00:18:01,519 --> 00:18:05,299
so these two kind of sides here's how

429
00:18:03,139 --> 00:18:07,610
I've tried to present it and this is

430
00:18:05,299 --> 00:18:11,929
just again an example of what you might

431
00:18:07,610 --> 00:18:13,519
do with your database and some types of

432
00:18:11,929 --> 00:18:15,590
data that you might want to store

433
00:18:13,519 --> 00:18:17,389
hopefully this give you an idea of some

434
00:18:15,590 --> 00:18:21,379
way that if you're not doing it now that

435
00:18:17,389 --> 00:18:23,479
you might think about doing it so let's

436
00:18:21,379 --> 00:18:27,230
take a look at a practical example of

437
00:18:23,480 --> 00:18:30,169
what you could actually do if you had a

438
00:18:27,230 --> 00:18:33,379
single source of truth storing your data

439
00:18:30,169 --> 00:18:35,720
for your environment and we'll do a

440
00:18:33,379 --> 00:18:36,830
little bit of like pseudocode just kind

441
00:18:35,720 --> 00:18:39,039
of give you an idea of how we might

442
00:18:36,830 --> 00:18:41,689
actually implement it in the real world

443
00:18:39,039 --> 00:18:44,960
so let's say we wanted to deploy a

444
00:18:41,690 --> 00:18:46,369
network update to configure a new

445
00:18:44,960 --> 00:18:50,869
physical server that's going to run some

446
00:18:46,369 --> 00:18:53,178
web servers okay so we have we need to

447
00:18:50,869 --> 00:18:55,129
know on the physical side we need to

448
00:18:53,179 --> 00:18:57,259
know things like the switch ports that

449
00:18:55,129 --> 00:19:00,439
the server is going to be connected to

450
00:18:57,259 --> 00:19:03,110
on the two tours and we need to know

451
00:19:00,440 --> 00:19:04,549
what the cabling requirements are we

452
00:19:03,110 --> 00:19:06,619
also need to know like the rack that

453
00:19:04,549 --> 00:19:09,259
it's going to go in I didn't put that up

454
00:19:06,619 --> 00:19:11,799
there and we've got some logical

455
00:19:09,259 --> 00:19:15,230
requirements maybe we need a VLAN and

456
00:19:11,799 --> 00:19:21,559
some IP addresses and an fqdn to a sign

457
00:19:15,230 --> 00:19:23,389
out so from the resource pools that you

458
00:19:21,559 --> 00:19:26,178
can now create in your single source of

459
00:19:23,389 --> 00:19:28,490
truth we can programmatically allocate

460
00:19:26,179 --> 00:19:31,429
all this data which if you looked at the

461
00:19:28,490 --> 00:19:33,259
previous screen traditionally a network

462
00:19:31,429 --> 00:19:35,240
engineer would have often or maybe even

463
00:19:33,259 --> 00:19:37,249
still is allocating almost all of that

464
00:19:35,240 --> 00:19:39,740
data out by hand or from a spreadsheet

465
00:19:37,249 --> 00:19:42,049
or going to those various different

466
00:19:39,740 --> 00:19:44,090
databases may be going into ipam going

467
00:19:42,049 --> 00:19:47,240
into the CMDB and doing all these

468
00:19:44,090 --> 00:19:49,490
allocations right by hand but now we can

469
00:19:47,240 --> 00:19:51,410
do that via programmatically so we can

470
00:19:49,490 --> 00:19:53,600
get our rack unit location we can get

471
00:19:51,410 --> 00:19:54,860
our switch ports we can get our VLANs we

472
00:19:53,600 --> 00:19:56,840
can get our IP addresses we can do all

473
00:19:54,860 --> 00:19:58,189
that automatically nobody needs to be

474
00:19:56,840 --> 00:19:59,840
involved in that you know in that

475
00:19:58,190 --> 00:20:03,440
particular process from a human

476
00:19:59,840 --> 00:20:05,659
perspective we can automatically

477
00:20:03,440 --> 00:20:07,910
generate the requests going out to DC

478
00:20:05,660 --> 00:20:09,710
ops to RAC and cable the server so we

479
00:20:07,910 --> 00:20:11,930
can send off a ticket into our ticketing

480
00:20:09,710 --> 00:20:13,880
system to have them go do this with all

481
00:20:11,930 --> 00:20:15,410
the information they need to do their

482
00:20:13,880 --> 00:20:16,670
job right so we can send them the cut

483
00:20:15,410 --> 00:20:18,560
sheet we can send them all the port

484
00:20:16,670 --> 00:20:19,520
requirements we can send the cable

485
00:20:18,560 --> 00:20:20,530
requirements this could all happen

486
00:20:19,520 --> 00:20:22,370
automatically

487
00:20:20,530 --> 00:20:26,080
we can generate our network

488
00:20:22,370 --> 00:20:28,250
configuration so we can configure the

489
00:20:26,080 --> 00:20:29,659
configure we can generate the

490
00:20:28,250 --> 00:20:31,220
configuration that needs to be applied

491
00:20:29,660 --> 00:20:34,520
to the switches and potentially to

492
00:20:31,220 --> 00:20:37,120
firewalls or what have you and we could

493
00:20:34,520 --> 00:20:40,670
create some DNS entries this was a

494
00:20:37,120 --> 00:20:41,870
example of something that was you built

495
00:20:40,670 --> 00:20:44,750
something and then people use it in

496
00:20:41,870 --> 00:20:46,850
unexpected ways for us we created this

497
00:20:44,750 --> 00:20:49,490
database that we started using on the

498
00:20:46,850 --> 00:20:51,020
network side and we gradually just sort

499
00:20:49,490 --> 00:20:52,730
of threw grass roots underground effort

500
00:20:51,020 --> 00:20:56,030
got the rest of the teams to start using

501
00:20:52,730 --> 00:20:58,370
it and our DNS team ended up creating

502
00:20:56,030 --> 00:21:00,399
their own platform that they were

503
00:20:58,370 --> 00:21:02,719
monitoring the database looking for

504
00:21:00,400 --> 00:21:04,460
devices and fqdn s that were added to

505
00:21:02,720 --> 00:21:07,100
the database and then automatically

506
00:21:04,460 --> 00:21:08,690
populating that into DNS so they took

507
00:21:07,100 --> 00:21:09,980
this platform and ran with it and did

508
00:21:08,690 --> 00:21:11,960
their own thing and it was it was really

509
00:21:09,980 --> 00:21:13,700
cool to see somebody using something we

510
00:21:11,960 --> 00:21:16,370
built in a way totally unexpected that

511
00:21:13,700 --> 00:21:17,570
we didn't ever plan for that so this is

512
00:21:16,370 --> 00:21:20,330
one of these things particularly when

513
00:21:17,570 --> 00:21:22,250
you build this kind of thing other teams

514
00:21:20,330 --> 00:21:25,370
will start to see the advantages of it

515
00:21:22,250 --> 00:21:30,620
and use it in it because starts to

516
00:21:25,370 --> 00:21:32,510
become a critical tool the path that we

517
00:21:30,620 --> 00:21:36,020
ended up on eventually was ansible in

518
00:21:32,510 --> 00:21:37,970
Python for our automation ansible has

519
00:21:36,020 --> 00:21:39,830
really short learning curve like I

520
00:21:37,970 --> 00:21:41,120
mentioned earlier we started with puppet

521
00:21:39,830 --> 00:21:42,520
it's kind of like a medium sized

522
00:21:41,120 --> 00:21:46,909
learning curve it's a little bit harder

523
00:21:42,520 --> 00:21:48,440
and also compared particularly comparing

524
00:21:46,910 --> 00:21:51,740
those two one of the advantage of

525
00:21:48,440 --> 00:21:53,060
ansible is that it is agentless which i

526
00:21:51,740 --> 00:21:55,820
think particularly in the network world

527
00:21:53,060 --> 00:21:57,980
has makes it much easier even though

528
00:21:55,820 --> 00:21:59,689
today we do now have generally speaking

529
00:21:57,980 --> 00:22:01,660
access to the underlining operating

530
00:21:59,690 --> 00:22:03,990
system on the gear

531
00:22:01,660 --> 00:22:07,630
back in the old days we didn't always

532
00:22:03,990 --> 00:22:08,890
it's open sourced so we can see the

533
00:22:07,630 --> 00:22:11,350
changes that are coming in there and we

534
00:22:08,890 --> 00:22:13,420
get pretty rapid updates into ansible

535
00:22:11,350 --> 00:22:15,610
and really broad vendor support right

536
00:22:13,420 --> 00:22:17,500
like ansible has modules for virtually

537
00:22:15,610 --> 00:22:20,740
every bit of network year or server gear

538
00:22:17,500 --> 00:22:22,990
out there on the other side on the

539
00:22:20,740 --> 00:22:25,030
coding side python most common language

540
00:22:22,990 --> 00:22:27,340
probably who knows right light just

541
00:22:25,030 --> 00:22:29,620
depends on your religion again it's

542
00:22:27,340 --> 00:22:31,689
highly readable so this is advantageous

543
00:22:29,620 --> 00:22:33,610
particularly as people come and go or

544
00:22:31,690 --> 00:22:35,920
various people are contributing to the

545
00:22:33,610 --> 00:22:38,379
code that we're writing it's pretty

546
00:22:35,920 --> 00:22:40,770
human readable even though we all should

547
00:22:38,380 --> 00:22:43,510
be commenting our code we don't always

548
00:22:40,770 --> 00:22:45,580
and it's supported in virtually all

549
00:22:43,510 --> 00:22:47,020
tools I think pretty much every major

550
00:22:45,580 --> 00:22:49,000
networks which now has a Python

551
00:22:47,020 --> 00:22:51,250
interpreter on it so if you want to run

552
00:22:49,000 --> 00:22:55,930
Python on the switch itself that's a

553
00:22:51,250 --> 00:23:00,010
possibility continuing down the ansible

554
00:22:55,930 --> 00:23:02,350
path there's something that is maybe not

555
00:23:00,010 --> 00:23:05,470
particularly obvious that when you're

556
00:23:02,350 --> 00:23:08,409
using ansible there is a very special

557
00:23:05,470 --> 00:23:10,060
place that you can put code that will

558
00:23:08,410 --> 00:23:12,550
become accessible to you in your

559
00:23:10,060 --> 00:23:14,889
playbooks or your templates so if you

560
00:23:12,550 --> 00:23:17,350
put a code in a flat you know in a

561
00:23:14,890 --> 00:23:21,370
folder the ansible / play / filter

562
00:23:17,350 --> 00:23:25,120
plugins you can access that code inside

563
00:23:21,370 --> 00:23:26,110
of your templates or your place for me

564
00:23:25,120 --> 00:23:27,580
at least this wasn't particularly

565
00:23:26,110 --> 00:23:31,449
obvious in something I had to kind of

566
00:23:27,580 --> 00:23:33,220
stumble on and but particularly unlocks

567
00:23:31,450 --> 00:23:35,680
the possibility of using your single

568
00:23:33,220 --> 00:23:37,810
source of truth because now we can

569
00:23:35,680 --> 00:23:41,740
create a Python code or whatever code

570
00:23:37,810 --> 00:23:43,570
you want in this folder that knows how

571
00:23:41,740 --> 00:23:46,180
to access your database whether you're

572
00:23:43,570 --> 00:23:48,189
using net box or what have you right so

573
00:23:46,180 --> 00:23:52,990
you can write a Python class or a Python

574
00:23:48,190 --> 00:23:56,710
function in there so this would be an

575
00:23:52,990 --> 00:23:58,720
example of a ginger template hopefully

576
00:23:56,710 --> 00:24:01,090
if you are familiar with ansible or

577
00:23:58,720 --> 00:24:03,670
ginger templating this would just be a

578
00:24:01,090 --> 00:24:06,340
really simple switch configuration we're

579
00:24:03,670 --> 00:24:07,480
gonna create an interface we don't know

580
00:24:06,340 --> 00:24:09,459
the number yet because we're going to

581
00:24:07,480 --> 00:24:14,290
pull it out of the database

582
00:24:09,460 --> 00:24:15,430
and a sign of VLAN to that interface so

583
00:24:14,290 --> 00:24:18,040
if we take a look at the little bit of

584
00:24:15,430 --> 00:24:20,650
code that's there you'll see we're going

585
00:24:18,040 --> 00:24:23,379
to input the fqdn that's the variable

586
00:24:20,650 --> 00:24:25,990
and we're going to run a function that

587
00:24:23,380 --> 00:24:28,840
we've created up in our filter plugins

588
00:24:25,990 --> 00:24:30,280
folder called allocate port and we're

589
00:24:28,840 --> 00:24:31,810
gonna feed it the pool that we want to

590
00:24:30,280 --> 00:24:34,840
get the port from and that's just in

591
00:24:31,810 --> 00:24:36,790
this case it's the webserver pool in the

592
00:24:34,840 --> 00:24:39,429
same with the VLAN we're gonna feed in

593
00:24:36,790 --> 00:24:42,280
the variable of the site and we're gonna

594
00:24:39,430 --> 00:24:45,210
run a function called get VLAN and have

595
00:24:42,280 --> 00:24:47,740
the same pool web servers for the VLAN

596
00:24:45,210 --> 00:24:50,440
little nuance of Jinja that's kind of

597
00:24:47,740 --> 00:24:53,260
maybe a little different the first

598
00:24:50,440 --> 00:24:56,770
variable fed into the function comes

599
00:24:53,260 --> 00:24:58,810
before the pipe all second and following

600
00:24:56,770 --> 00:25:00,730
variables fed into the function come

601
00:24:58,810 --> 00:25:03,879
within the parentheses would be kind of

602
00:25:00,730 --> 00:25:10,390
more normal format so just some weird

603
00:25:03,880 --> 00:25:15,580
idiosyncrasy of Jinja so this is what we

604
00:25:10,390 --> 00:25:17,940
could put in the my functions Python

605
00:25:15,580 --> 00:25:20,230
code up in the filters plug-in folder

606
00:25:17,940 --> 00:25:21,730
obviously this is pseudo code because I

607
00:25:20,230 --> 00:25:23,920
don't know what your database looks like

608
00:25:21,730 --> 00:25:26,220
or how you would access it you would

609
00:25:23,920 --> 00:25:28,570
have to write your own class for that

610
00:25:26,220 --> 00:25:30,130
but this would be the basic idea right

611
00:25:28,570 --> 00:25:31,510
we write a little function that's going

612
00:25:30,130 --> 00:25:34,420
to go that knows how to go look up in

613
00:25:31,510 --> 00:25:36,750
the database feed in the fqdn and the

614
00:25:34,420 --> 00:25:39,820
pool we want to get a port from and

615
00:25:36,750 --> 00:25:47,340
return that to the template and the same

616
00:25:39,820 --> 00:25:49,240
with the VLAN so now down into play and

617
00:25:47,340 --> 00:25:51,580
again if you're familiar with the

618
00:25:49,240 --> 00:25:54,460
ansible plays this is a barely simple

619
00:25:51,580 --> 00:25:56,860
simple one we're going to actually

620
00:25:54,460 --> 00:25:58,060
create the variables that are starting

621
00:25:56,860 --> 00:26:00,280
this whole process right so we've got

622
00:25:58,060 --> 00:26:03,159
the fqdn that we're naming the server

623
00:26:00,280 --> 00:26:04,330
and the particular site location so

624
00:26:03,160 --> 00:26:07,990
those would be the variables that are

625
00:26:04,330 --> 00:26:09,610
entered into the functions and then the

626
00:26:07,990 --> 00:26:11,620
source will be our Jinta template and

627
00:26:09,610 --> 00:26:15,070
the destination will be our switch

628
00:26:11,620 --> 00:26:17,219
config so ansible will take over will

629
00:26:15,070 --> 00:26:19,870
run the python code that we've written

630
00:26:17,220 --> 00:26:22,870
we'll extract that information out at

631
00:26:19,870 --> 00:26:23,290
the database put it in merge that in

632
00:26:22,870 --> 00:26:25,840
with the

633
00:26:23,290 --> 00:26:28,780
a ginger template and produce our switch

634
00:26:25,840 --> 00:26:31,389
config which will hopefully look

635
00:26:28,780 --> 00:26:33,580
something like this so we got a port

636
00:26:31,390 --> 00:26:36,580
back from the database port 12 is

637
00:26:33,580 --> 00:26:37,840
available and VLAN 101 is free and so

638
00:26:36,580 --> 00:26:42,540
that's what we're going to use to

639
00:26:37,840 --> 00:26:46,870
configure these ports all on the switch

640
00:26:42,540 --> 00:26:49,300
so looking at kind of like the overview

641
00:26:46,870 --> 00:26:57,370
of what just happened and what we could

642
00:26:49,300 --> 00:26:58,899
do with that we can take the automation

643
00:26:57,370 --> 00:27:01,750
that we just created that little tiny

644
00:26:58,900 --> 00:27:03,700
little piece of automation and we can

645
00:27:01,750 --> 00:27:08,050
layer orchestration on top of that to do

646
00:27:03,700 --> 00:27:12,160
more things so for example we could take

647
00:27:08,050 --> 00:27:14,800
a snapshot of the switch before we

648
00:27:12,160 --> 00:27:17,860
deploy this change we could deploy the

649
00:27:14,800 --> 00:27:19,480
change via SSH or API and simple

650
00:27:17,860 --> 00:27:21,639
supports multiple methods for doing that

651
00:27:19,480 --> 00:27:23,980
we obviously can save the change to the

652
00:27:21,640 --> 00:27:26,290
device and we potentially could rollback

653
00:27:23,980 --> 00:27:29,050
on failure from that snapshot we took

654
00:27:26,290 --> 00:27:32,170
before and this would all be layers of

655
00:27:29,050 --> 00:27:35,620
orchestration that ansible could empower

656
00:27:32,170 --> 00:27:38,110
for us if we layer it on top of that

657
00:27:35,620 --> 00:27:40,030
more orchestration like a tool like

658
00:27:38,110 --> 00:27:42,370
stack storm or run deck we can

659
00:27:40,030 --> 00:27:44,440
potentially do more things like for

660
00:27:42,370 --> 00:27:47,800
example we could deploy this change out

661
00:27:44,440 --> 00:27:50,620
to multiple switches at the same time we

662
00:27:47,800 --> 00:27:53,080
could ensure that the change goes

663
00:27:50,620 --> 00:27:54,580
through change control properly before

664
00:27:53,080 --> 00:27:56,439
it's actually deployed and maybe we want

665
00:27:54,580 --> 00:27:58,600
to automatically deploy the change at 3

666
00:27:56,440 --> 00:28:03,400
a.m. during our change window versus

667
00:27:58,600 --> 00:28:05,159
doing it now or we can also make sure

668
00:28:03,400 --> 00:28:07,680
that this is triggered by events

669
00:28:05,160 --> 00:28:11,440
potentially maybe we want to wait until

670
00:28:07,680 --> 00:28:13,810
the DC ops team reports back that the

671
00:28:11,440 --> 00:28:15,010
cabling is done and then we deploy the

672
00:28:13,810 --> 00:28:16,300
change out right there are various ways

673
00:28:15,010 --> 00:28:18,910
depending on your environment that you

674
00:28:16,300 --> 00:28:21,399
could run with this and take the

675
00:28:18,910 --> 00:28:23,440
orchestration sorry the automation you

676
00:28:21,400 --> 00:28:26,460
created and orchestrate that to do

677
00:28:23,440 --> 00:28:26,460
really powerful things

678
00:28:27,570 --> 00:28:32,189
so this is your early warning that we're

679
00:28:30,809 --> 00:28:35,279
coming to the end if you have questions

680
00:28:32,190 --> 00:28:37,320
you can start to prepare them Network

681
00:28:35,279 --> 00:28:40,080
automation it's becoming mainstream this

682
00:28:37,320 --> 00:28:41,850
is something that we're doing more and

683
00:28:40,080 --> 00:28:43,350
more hopefully I don't know where you

684
00:28:41,850 --> 00:28:45,059
are in your company whether or not you

685
00:28:43,350 --> 00:28:46,379
have a DevOps culture but if it's

686
00:28:45,059 --> 00:28:48,749
something you've been thinking about I

687
00:28:46,379 --> 00:28:50,689
hope I can encourage you to start to

688
00:28:48,749 --> 00:28:53,549
play with it and start to learn about it

689
00:28:50,690 --> 00:28:55,679
if you're not writing code now please

690
00:28:53,549 --> 00:28:57,570
start practicing start learning Python

691
00:28:55,679 --> 00:29:00,239
or some language any language I

692
00:28:57,570 --> 00:29:03,269
personally started on Ruby but wherever

693
00:29:00,239 --> 00:29:04,349
you want to you know wherever you go we

694
00:29:03,269 --> 00:29:06,210
have to start thinking about things

695
00:29:04,349 --> 00:29:08,099
differently this does require a paradigm

696
00:29:06,210 --> 00:29:09,989
shift it is a whole new way of thinking

697
00:29:08,099 --> 00:29:14,340
compared to how we have traditionally

698
00:29:09,989 --> 00:29:17,759
operated our networks if you are just

699
00:29:14,340 --> 00:29:19,439
starting start by identifying the key

700
00:29:17,759 --> 00:29:21,419
processes that can be automated you know

701
00:29:19,440 --> 00:29:23,249
pick the easy stuff pick the things that

702
00:29:21,419 --> 00:29:24,840
are taking a lot of time pick the things

703
00:29:23,249 --> 00:29:27,659
that are generating the most tickets for

704
00:29:24,840 --> 00:29:31,049
you start there and start to build that

705
00:29:27,659 --> 00:29:32,789
out and don't be afraid to rethink how

706
00:29:31,049 --> 00:29:34,320
those processes work because there's a

707
00:29:32,789 --> 00:29:36,809
really good chance that whatever you're

708
00:29:34,320 --> 00:29:39,689
doing now is horrible right that you're

709
00:29:36,809 --> 00:29:42,349
wasting time it's not efficient also

710
00:29:39,690 --> 00:29:44,820
when you move into an automated fashion

711
00:29:42,349 --> 00:29:46,619
the way it used to work when you did it

712
00:29:44,820 --> 00:29:48,389
by hand might not work so well when you

713
00:29:46,619 --> 00:29:50,970
do it automatically so maybe you really

714
00:29:48,389 --> 00:29:54,269
need to rethink that and again start

715
00:29:50,970 --> 00:29:58,529
writing code if you aren't in questions

716
00:29:54,269 --> 00:30:02,190
any comments feedback feel free to poke

717
00:29:58,529 --> 00:30:04,460
away at me anybody moving towards the

718
00:30:02,190 --> 00:30:04,460
mics

719
00:30:06,710 --> 00:30:14,190
well hello Jared Montz from Akamai yeah

720
00:30:11,640 --> 00:30:16,310
I think the title of this talk I think

721
00:30:14,190 --> 00:30:20,820
is really key which is having an

722
00:30:16,310 --> 00:30:24,000
authoritative source of truth which is

723
00:30:20,820 --> 00:30:25,200
is a challenge I think for many of us I

724
00:30:24,000 --> 00:30:26,820
know that's been a challenge for me

725
00:30:25,200 --> 00:30:29,010
coming over to a new employer in the

726
00:30:26,820 --> 00:30:31,110
past couple years and I'm wondering what

727
00:30:29,010 --> 00:30:33,960
challenges you faced and what things you

728
00:30:31,110 --> 00:30:35,389
were able to achieve in having a single

729
00:30:33,960 --> 00:30:38,340
source of truth

730
00:30:35,390 --> 00:30:41,760
this is absolutely fundamental yes

731
00:30:38,340 --> 00:30:42,689
and as I had mentioned earlier it is a

732
00:30:41,760 --> 00:30:45,330
paradigm shift

733
00:30:42,690 --> 00:30:48,030
not only in yourself in your team and

734
00:30:45,330 --> 00:30:50,760
eventually in your company and that's

735
00:30:48,030 --> 00:30:53,580
the hard part for sure we were lucky

736
00:30:50,760 --> 00:30:55,980
that we had a team of individuals that

737
00:30:53,580 --> 00:30:58,949
was jumped wholeheartedly into DevOps

738
00:30:55,980 --> 00:31:01,050
and we wanted to do it so we started

739
00:30:58,950 --> 00:31:03,000
with the notion that we would create

740
00:31:01,050 --> 00:31:05,159
this source of truth with the idea that

741
00:31:03,000 --> 00:31:06,570
everyone could use it but that we

742
00:31:05,160 --> 00:31:09,030
weren't going to force people to use it

743
00:31:06,570 --> 00:31:11,129
so we started doing it and we put all of

744
00:31:09,030 --> 00:31:14,090
the network here and there and we drove

745
00:31:11,130 --> 00:31:16,560
the entire network environment this way

746
00:31:14,090 --> 00:31:19,800
to give you an example of what we did

747
00:31:16,560 --> 00:31:22,020
with this the original environments we

748
00:31:19,800 --> 00:31:24,629
were building were several hundred

749
00:31:22,020 --> 00:31:26,730
switches and we were spending about two

750
00:31:24,630 --> 00:31:29,010
weeks of time with two network engineers

751
00:31:26,730 --> 00:31:32,610
to build configure and deploy that data

752
00:31:29,010 --> 00:31:36,120
center by the end of the project we were

753
00:31:32,610 --> 00:31:39,360
deploying a data center with something

754
00:31:36,120 --> 00:31:42,330
like 500 switches 600 switches a single

755
00:31:39,360 --> 00:31:46,500
engineer and four hours and that

756
00:31:42,330 --> 00:31:48,360
included deploying out the gear doing

757
00:31:46,500 --> 00:31:50,250
all the cable validation and turning

758
00:31:48,360 --> 00:31:53,189
everything over to the compute team it's

759
00:31:50,250 --> 00:31:55,440
your turn now so again two weeks and

760
00:31:53,190 --> 00:31:57,690
four hours a huge difference right in

761
00:31:55,440 --> 00:31:59,010
the amount of time spent in deploying an

762
00:31:57,690 --> 00:32:00,300
environment now of course that's a green

763
00:31:59,010 --> 00:32:02,690
field environment which we don't always

764
00:32:00,300 --> 00:32:04,770
get to do every day but I think the the

765
00:32:02,690 --> 00:32:07,230
practical aspects of that are the same

766
00:32:04,770 --> 00:32:08,760
now how did that actually work as far as

767
00:32:07,230 --> 00:32:11,760
getting out the source of truth to

768
00:32:08,760 --> 00:32:13,530
everybody other people started to see

769
00:32:11,760 --> 00:32:16,500
our success and other teams started

770
00:32:13,530 --> 00:32:19,470
using it a compute team jumped on fairly

771
00:32:16,500 --> 00:32:22,470
quickly storage eventually came around

772
00:32:19,470 --> 00:32:23,970
and the application-layer teams also saw

773
00:32:22,470 --> 00:32:26,250
the advantages of it fairly quickly it

774
00:32:23,970 --> 00:32:28,230
was very grassroots to be honest we went

775
00:32:26,250 --> 00:32:29,940
from just is something we used inside

776
00:32:28,230 --> 00:32:32,970
the network team to a company-wide

777
00:32:29,940 --> 00:32:35,790
mission critical tool in about I'd say

778
00:32:32,970 --> 00:32:37,530
about a year year and a half yeah and it

779
00:32:35,790 --> 00:32:39,030
was literally just like look at the

780
00:32:37,530 --> 00:32:41,820
success we've had you guys can do this

781
00:32:39,030 --> 00:32:44,670
too yes

782
00:32:41,820 --> 00:32:46,919
i SD Feldman CBS Interactive we're going

783
00:32:44,670 --> 00:32:48,900
down a similar path we using dead box as

784
00:32:46,920 --> 00:32:50,640
our source of truth we're discovering

785
00:32:48,900 --> 00:32:53,220
that works great most of the time but

786
00:32:50,640 --> 00:32:54,960
there are a few cases where mid boxes

787
00:32:53,220 --> 00:32:57,870
data bottles don't really fit what we're

788
00:32:54,960 --> 00:32:59,160
doing so for you or anybody else who's

789
00:32:57,870 --> 00:33:01,199
gone down this path how do you deal with

790
00:32:59,160 --> 00:33:02,670
that do you use separate databases or

791
00:33:01,200 --> 00:33:06,600
tables or do you try to squeeze it in

792
00:33:02,670 --> 00:33:08,940
the Box somehow we custom-built our own

793
00:33:06,600 --> 00:33:11,750
at the time that we started net box was

794
00:33:08,940 --> 00:33:14,940
not open source and wasn't available and

795
00:33:11,750 --> 00:33:18,030
we had attended several conferences

796
00:33:14,940 --> 00:33:20,220
including Nano and heard other companies

797
00:33:18,030 --> 00:33:22,860
talking about the automation and they

798
00:33:20,220 --> 00:33:24,600
kind of danced around this topic but it

799
00:33:22,860 --> 00:33:26,070
was clear they must have some form of

800
00:33:24,600 --> 00:33:28,320
single source of truth because of the

801
00:33:26,070 --> 00:33:30,030
things they're saying and so in fact

802
00:33:28,320 --> 00:33:32,280
even I got up to the mic at one point

803
00:33:30,030 --> 00:33:35,010
and asked like so what are you using for

804
00:33:32,280 --> 00:33:36,480
your database and the answer was we

805
00:33:35,010 --> 00:33:39,090
can't talk about that it's intellectual

806
00:33:36,480 --> 00:33:40,380
property so we had to build our own at

807
00:33:39,090 --> 00:33:43,530
the time and that's the route we went

808
00:33:40,380 --> 00:33:45,390
yeah I I understand that would be a

809
00:33:43,530 --> 00:33:48,990
challenge if you go anything that's off

810
00:33:45,390 --> 00:33:51,030
the shelf yeah you you the disadvantage

811
00:33:48,990 --> 00:33:52,800
is that you're going to have to fork it

812
00:33:51,030 --> 00:33:54,590
probably if you go this route and of

813
00:33:52,800 --> 00:33:58,260
course forking is always not so great

814
00:33:54,590 --> 00:34:00,720
but you know we were fortunate to have a

815
00:33:58,260 --> 00:34:02,700
database engineer available to us to do

816
00:34:00,720 --> 00:34:04,770
this if I were starting from scratch

817
00:34:02,700 --> 00:34:07,650
today and didn't want to use that box I

818
00:34:04,770 --> 00:34:09,239
would probably use MongoDB it's much

819
00:34:07,650 --> 00:34:10,409
simpler to wrap your head around and you

820
00:34:09,239 --> 00:34:15,299
don't necessarily have to have a

821
00:34:10,409 --> 00:34:17,610
database engineer thanks Tony Tobruk

822
00:34:15,300 --> 00:34:18,929
Comcast I would encourage also people

823
00:34:17,610 --> 00:34:20,580
thinking about these things to think

824
00:34:18,929 --> 00:34:23,250
about the life cycle of all the things

825
00:34:20,580 --> 00:34:24,870
that they do like how does it other

826
00:34:23,250 --> 00:34:26,570
things get in how do they come out you

827
00:34:24,870 --> 00:34:30,000
know all the different changes because

828
00:34:26,570 --> 00:34:31,000
right just just establish establishing

829
00:34:30,000 --> 00:34:33,370
it as

830
00:34:31,000 --> 00:34:34,120
one part but you've got to think about

831
00:34:33,370 --> 00:34:38,230
all this

832
00:34:34,120 --> 00:34:42,069
I didn't expand into the topic of the

833
00:34:38,230 --> 00:34:44,050
orchestration layer as much but yes you

834
00:34:42,070 --> 00:34:45,610
also need to be able to delete just as

835
00:34:44,050 --> 00:34:47,950
well as you add and you need to be able

836
00:34:45,610 --> 00:34:50,800
to change as things as things change in

837
00:34:47,949 --> 00:34:52,540
your environment for sure yeah this was

838
00:34:50,800 --> 00:34:56,800
something I didn't delve into but yes

839
00:34:52,540 --> 00:34:58,480
actually on the change topic so what do

840
00:34:56,800 --> 00:35:00,160
you think or I don't know if you had

841
00:34:58,480 --> 00:35:02,050
this experience of like if you change

842
00:35:00,160 --> 00:35:05,770
the fqdn like if you if you keep off

843
00:35:02,050 --> 00:35:08,620
fqdn is the you know key signifier you

844
00:35:05,770 --> 00:35:10,030
know identifier but you may have the

845
00:35:08,620 --> 00:35:12,670
same physical box that you changed your

846
00:35:10,030 --> 00:35:15,550
different fqdn because your naming

847
00:35:12,670 --> 00:35:18,100
convention changes or something or you

848
00:35:15,550 --> 00:35:19,630
know the you know what do you find is

849
00:35:18,100 --> 00:35:21,759
the thing that you've really lock on to

850
00:35:19,630 --> 00:35:25,000
is the fqdn is it some serial number is

851
00:35:21,760 --> 00:35:28,090
it some you know just private key that

852
00:35:25,000 --> 00:35:31,570
you use for your own purposes this is a

853
00:35:28,090 --> 00:35:33,610
challenge on the bootstrapping side the

854
00:35:31,570 --> 00:35:36,070
key that we were working off of a serial

855
00:35:33,610 --> 00:35:38,320
number so when we bootstrap a piece of

856
00:35:36,070 --> 00:35:40,420
equipment we know particularly who it is

857
00:35:38,320 --> 00:35:44,200
or what it should be based on its serial

858
00:35:40,420 --> 00:35:45,820
number that is problematic because you

859
00:35:44,200 --> 00:35:49,060
replace for here and now you've got to

860
00:35:45,820 --> 00:35:50,890
go update that yes this is a difficult

861
00:35:49,060 --> 00:35:53,770
problem because it's a chicken and egg

862
00:35:50,890 --> 00:35:56,350
thing and how do you flow that out with

863
00:35:53,770 --> 00:35:58,990
your intent oh this is really going

864
00:35:56,350 --> 00:36:04,509
really deep if you want to go down the

865
00:35:58,990 --> 00:36:06,310
path of intent based configuration then

866
00:36:04,510 --> 00:36:07,660
ideally it should be you know a switch

867
00:36:06,310 --> 00:36:10,750
should be able to figure out what it is

868
00:36:07,660 --> 00:36:12,370
based on who its neighbors are so we

869
00:36:10,750 --> 00:36:15,370
shouldn't need to know that serial

870
00:36:12,370 --> 00:36:17,470
number or that MAC address at the moment

871
00:36:15,370 --> 00:36:18,880
that is well when I left that project

872
00:36:17,470 --> 00:36:22,919
that is still where we were at but as

873
00:36:18,880 --> 00:36:27,160
far as that it's a it's a challenge yeah

874
00:36:22,920 --> 00:36:30,610
yes I'll be Freedman with Kent ik we use

875
00:36:27,160 --> 00:36:32,170
net doubts for our old person serve a

876
00:36:30,610 --> 00:36:35,110
huggie thing that you would call a

877
00:36:32,170 --> 00:36:37,990
private cloud in Equinix and then that

878
00:36:35,110 --> 00:36:39,820
worked until we started proxying VPC

879
00:36:37,990 --> 00:36:40,529
flow logs and being in public cloud and

880
00:36:39,820 --> 00:36:42,840
alike

881
00:36:40,530 --> 00:36:46,260
and then as you said the orchestration

882
00:36:42,840 --> 00:36:47,220
system is this other thing and not

883
00:36:46,260 --> 00:36:49,590
talking about what we do for customers

884
00:36:47,220 --> 00:36:53,879
just for our own stuff so we wound up

885
00:36:49,590 --> 00:36:54,930
with is for the state of infrastructure

886
00:36:53,880 --> 00:36:57,510
and what should be

887
00:36:54,930 --> 00:36:59,690
it's neither net box nor sitting in

888
00:36:57,510 --> 00:37:02,099
configured database it's sort of

889
00:36:59,690 --> 00:37:04,440
mirrored with the orchestration system

890
00:37:02,099 --> 00:37:06,119
that links to is this physical or

891
00:37:04,440 --> 00:37:08,790
logical infrastructure what's the

892
00:37:06,119 --> 00:37:10,320
topology so in essence we're not really

893
00:37:08,790 --> 00:37:12,779
changing the physical state of things

894
00:37:10,320 --> 00:37:15,090
that our net Boxey that much but all the

895
00:37:12,780 --> 00:37:17,580
VLANs and things on top of that we were

896
00:37:15,090 --> 00:37:19,170
pushed to a net box so an office person

897
00:37:17,580 --> 00:37:22,020
can see it but we have to write our own

898
00:37:19,170 --> 00:37:23,340
so cloud which is dynamically

899
00:37:22,020 --> 00:37:25,590
orchestrated and as you were just

900
00:37:23,340 --> 00:37:27,780
talking about the orchestrate or itself

901
00:37:25,590 --> 00:37:29,880
where things may be turned on and up and

902
00:37:27,780 --> 00:37:32,130
up and down in containers but when a

903
00:37:29,880 --> 00:37:33,690
ticket comes in and someone says the

904
00:37:32,130 --> 00:37:36,270
thing didn't work at this time you need

905
00:37:33,690 --> 00:37:37,470
to go back and see where it was yeah

906
00:37:36,270 --> 00:37:38,580
it'll be interesting and I have been

907
00:37:37,470 --> 00:37:41,129
wondering and asked some people his

908
00:37:38,580 --> 00:37:43,200
netbox gonna go do that and I've heard

909
00:37:41,130 --> 00:37:45,330
there's an endless stream of requests

910
00:37:43,200 --> 00:37:47,848
for that box anyway so it'll be

911
00:37:45,330 --> 00:37:51,330
interesting to see how that all involves

912
00:37:47,849 --> 00:37:52,650
yes it's it's definitely early days on

913
00:37:51,330 --> 00:37:55,109
this particularly I think for netbooks

914
00:37:52,650 --> 00:37:57,810
and it's really cool to he'll hear of

915
00:37:55,109 --> 00:38:00,150
multiple stories now of people using net

916
00:37:57,810 --> 00:38:01,890
box this is actually the first time that

917
00:38:00,150 --> 00:38:04,200
I've given this talk and heard people

918
00:38:01,890 --> 00:38:05,879
say hey I'm using net box so that's

919
00:38:04,200 --> 00:38:07,799
that's actually really cool just out of

920
00:38:05,880 --> 00:38:09,450
curiosity do you guys mind raise of

921
00:38:07,800 --> 00:38:11,160
hands like how many of you are operating

922
00:38:09,450 --> 00:38:12,960
in some form of DevOps automated

923
00:38:11,160 --> 00:38:14,310
environment like just is it like half

924
00:38:12,960 --> 00:38:16,140
the crowd and more than half the crowd

925
00:38:14,310 --> 00:38:18,839
so like a third of the crowd something

926
00:38:16,140 --> 00:38:20,549
like that so I hope for those of you

927
00:38:18,839 --> 00:38:24,240
that aren't in this environment

928
00:38:20,550 --> 00:38:26,160
give you some ideas for how you can go

929
00:38:24,240 --> 00:38:29,430
back and start playing with this today

930
00:38:26,160 --> 00:38:30,868
or tomorrow you know sometimes we hear

931
00:38:29,430 --> 00:38:32,250
these talks and you're like oh man

932
00:38:30,869 --> 00:38:35,040
there's no way I can implement that at

933
00:38:32,250 --> 00:38:37,849
my place or whatever but hopefully you

934
00:38:35,040 --> 00:38:40,050
can see some path where this this is a

935
00:38:37,849 --> 00:38:42,540
something you can start to implement in

936
00:38:40,050 --> 00:38:44,200
your environment as well as even just

937
00:38:42,540 --> 00:38:47,120
for your own

938
00:38:44,200 --> 00:38:49,069
future career I think this is the

939
00:38:47,120 --> 00:38:50,480
direction we're heading right so you

940
00:38:49,070 --> 00:38:51,650
know start to learn how to write code if

941
00:38:50,480 --> 00:38:55,230
you're not doing that now start

942
00:38:51,650 --> 00:39:02,070
practicing okay thank you

943
00:38:55,230 --> 00:39:02,070
[Applause]

944
00:39:06,950 --> 00:39:09,009
you

