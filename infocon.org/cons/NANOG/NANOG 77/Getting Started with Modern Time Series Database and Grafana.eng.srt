1
00:00:12,300 --> 00:00:18,850
hello welcome to the Nanog tutorial

2
00:00:15,100 --> 00:00:20,320
track like to welcome Damon Garros we'll

3
00:00:18,850 --> 00:00:22,330
be talking about getting started with

4
00:00:20,320 --> 00:00:27,340
modern time series databases in grow

5
00:00:22,330 --> 00:00:31,390
fauna thanks hi everyone

6
00:00:27,340 --> 00:00:32,980
very excited to be here and so yeah it's

7
00:00:31,390 --> 00:00:34,750
just for seeing where the topic today is

8
00:00:32,980 --> 00:00:37,209
ready to talk about you know how to get

9
00:00:34,750 --> 00:00:40,809
started on on monitoring telemetry and

10
00:00:37,210 --> 00:00:42,310
all of that and I've been working in you

11
00:00:40,809 --> 00:00:44,650
know telemetry sync for last four or

12
00:00:42,310 --> 00:00:46,240
five years when I was I started that

13
00:00:44,650 --> 00:00:48,070
juniper started working on the first

14
00:00:46,240 --> 00:00:50,710
implementation of photometry streaming

15
00:00:48,070 --> 00:00:53,140
and then I got a chance to move to two

16
00:00:50,710 --> 00:00:54,430
customers actually implement a lot of

17
00:00:53,140 --> 00:00:56,380
that in the real world and approach

18
00:00:54,430 --> 00:00:58,630
environments and now I'm with the

19
00:00:56,380 --> 00:01:00,250
network to code and we're working with

20
00:00:58,630 --> 00:01:02,290
our customers we're a consulting company

21
00:01:00,250 --> 00:01:03,610
and working with our customers to help

22
00:01:02,290 --> 00:01:06,369
them get started into a network

23
00:01:03,610 --> 00:01:09,490
automation so what we're going to do

24
00:01:06,369 --> 00:01:10,810
today show you the end is really going

25
00:01:09,490 --> 00:01:12,399
to show you how to be all you know -

26
00:01:10,810 --> 00:01:13,630
ball like this one and there's a lot of

27
00:01:12,400 --> 00:01:15,969
informations and we're going to impact

28
00:01:13,630 --> 00:01:17,770
but you know what we're seeing here is a

29
00:01:15,969 --> 00:01:19,869
lot of information we have at the bottom

30
00:01:17,770 --> 00:01:22,199
like visual representation of statuses

31
00:01:19,869 --> 00:01:24,159
of interfaces and and bgp session like

32
00:01:22,200 --> 00:01:26,319
actually look at the right of the screen

33
00:01:24,159 --> 00:01:28,240
the different colors are representing

34
00:01:26,319 --> 00:01:31,119
the different statuses of some BGP

35
00:01:28,240 --> 00:01:33,339
sessions and on top we have some you

36
00:01:31,119 --> 00:01:35,170
know traffic informations that have been

37
00:01:33,340 --> 00:01:37,780
aggregated they're per device per roles

38
00:01:35,170 --> 00:01:41,740
that are providing some very meaningful

39
00:01:37,780 --> 00:01:43,689
signals you know that you can action and

40
00:01:41,740 --> 00:01:45,579
alerts on on your topology so that's

41
00:01:43,689 --> 00:01:48,339
that's awfully you know what we will

42
00:01:45,579 --> 00:01:50,288
have at the end of the session but we

43
00:01:48,340 --> 00:01:51,340
have to cover a lot of things so have to

44
00:01:50,289 --> 00:01:53,649
cover you know how to build those

45
00:01:51,340 --> 00:01:56,139
dashboards we're going to talk about why

46
00:01:53,649 --> 00:01:58,119
times three databases are and you know

47
00:01:56,139 --> 00:01:59,770
those technology should be part of the

48
00:01:58,119 --> 00:02:01,929
toolbox of the network engineers I

49
00:01:59,770 --> 00:02:03,429
understand a lot of you are not software

50
00:02:01,929 --> 00:02:05,439
engineers they're Nazis that means

51
00:02:03,429 --> 00:02:08,020
you're not you know going to deploy and

52
00:02:05,439 --> 00:02:10,149
manage those databases but you're a user

53
00:02:08,020 --> 00:02:11,620
of them and they offer a lot of very

54
00:02:10,149 --> 00:02:13,330
interesting capabilities so it's very

55
00:02:11,620 --> 00:02:15,160
important you know that network engineer

56
00:02:13,330 --> 00:02:19,300
get involved in those discussions and

57
00:02:15,160 --> 00:02:20,859
understand how they can use them we're

58
00:02:19,300 --> 00:02:22,840
gonna you know talk about how to track

59
00:02:20,860 --> 00:02:26,560
interfaces and BGP that

60
00:02:22,840 --> 00:02:28,810
is in a time series database we'll have

61
00:02:26,560 --> 00:02:31,360
a little very short introductions about

62
00:02:28,810 --> 00:02:33,400
GMI which is a new telemetry streaming

63
00:02:31,360 --> 00:02:35,319
interface the goal of this presentation

64
00:02:33,400 --> 00:02:37,930
today is naturally to go deep on jean-mi

65
00:02:35,319 --> 00:02:39,730
it's really about databases but that's

66
00:02:37,930 --> 00:02:41,860
what we will use to extract the

67
00:02:39,730 --> 00:02:45,849
information from the device I'll show

68
00:02:41,860 --> 00:02:47,620
you how to install a time suite database

69
00:02:45,849 --> 00:02:49,209
called permit use how to collect

70
00:02:47,620 --> 00:02:52,150
information with a collector called

71
00:02:49,209 --> 00:02:54,480
Telegraph and then we will also explore

72
00:02:52,150 --> 00:02:56,829
graph anion how to hook that together

73
00:02:54,480 --> 00:02:58,690
most of the sessions will be actually

74
00:02:56,829 --> 00:03:00,220
live demo just going to go through some

75
00:02:58,690 --> 00:03:01,630
slide at the beginning to make sure you

76
00:03:00,220 --> 00:03:03,040
know we've never said we have an

77
00:03:01,630 --> 00:03:05,470
understanding of where we're coming from

78
00:03:03,040 --> 00:03:09,690
where we're going at and all that but

79
00:03:05,470 --> 00:03:14,170
hopefully very quickly we'll get into

80
00:03:09,690 --> 00:03:15,730
into the demo parts so where are we

81
00:03:14,170 --> 00:03:17,708
coming from you know in terms of network

82
00:03:15,730 --> 00:03:21,069
monitoring and and all of that in the

83
00:03:17,709 --> 00:03:22,750
network industry so I will bet that most

84
00:03:21,069 --> 00:03:24,879
of you today are in this you know

85
00:03:22,750 --> 00:03:26,709
situations where we hope you have what

86
00:03:24,879 --> 00:03:28,959
we'll call a legacy network monitoring

87
00:03:26,709 --> 00:03:31,030
solutions you have all in one server

88
00:03:28,959 --> 00:03:33,359
that is pulling information from the

89
00:03:31,030 --> 00:03:36,130
device network devices using SNMP

90
00:03:33,359 --> 00:03:37,870
collecting some traps and everything is

91
00:03:36,130 --> 00:03:41,230
happening on this server the collections

92
00:03:37,870 --> 00:03:43,870
the storage and the visualization what

93
00:03:41,230 --> 00:03:45,670
you may not realize is that all of those

94
00:03:43,870 --> 00:03:48,849
solutions whether they are you know open

95
00:03:45,670 --> 00:03:50,230
and open NMS collect the observable

96
00:03:48,849 --> 00:03:52,569
cacti mrtg

97
00:03:50,230 --> 00:03:55,149
all of them are through using a single

98
00:03:52,569 --> 00:03:57,310
component the same component at the core

99
00:03:55,150 --> 00:03:59,620
which is called Rd tools you know that's

100
00:03:57,310 --> 00:04:02,530
what is generating those various query

101
00:03:59,620 --> 00:04:04,959
graph that we all have seen and honestly

102
00:04:02,530 --> 00:04:06,880
this tool is has been amazing when he

103
00:04:04,959 --> 00:04:08,889
got introduced in 1999 yo for some

104
00:04:06,880 --> 00:04:11,500
capabilities that were you know

105
00:04:08,889 --> 00:04:13,329
unprecedent back then but nowadays it's

106
00:04:11,500 --> 00:04:16,000
it's very outdated tools like the issue

107
00:04:13,329 --> 00:04:18,160
is it's a storage system but it's not a

108
00:04:16,000 --> 00:04:20,200
database you actually store a lot of the

109
00:04:18,160 --> 00:04:21,970
information and you also visualize them

110
00:04:20,200 --> 00:04:25,780
and it doesn't really give us any

111
00:04:21,970 --> 00:04:27,430
capabilities to explore the data in what

112
00:04:25,780 --> 00:04:29,169
a new database and that's we're going to

113
00:04:27,430 --> 00:04:31,270
talk about today can provide like there

114
00:04:29,169 --> 00:04:33,190
is no query enjoying the data retention

115
00:04:31,270 --> 00:04:34,900
is really bad it's very inefficient

116
00:04:33,190 --> 00:04:35,540
nowadays and really there are some

117
00:04:34,900 --> 00:04:36,710
amazing

118
00:04:35,540 --> 00:04:39,530
system out there that can replace that

119
00:04:36,710 --> 00:04:42,109
that will offer new capabilities the

120
00:04:39,530 --> 00:04:44,210
issues as network engineer we are used

121
00:04:42,110 --> 00:04:46,040
now to not have those capabilities so

122
00:04:44,210 --> 00:04:48,020
we're not asking for them but if we

123
00:04:46,040 --> 00:04:50,240
realize what we can do with those new

124
00:04:48,020 --> 00:04:52,310
system then we can really do some

125
00:04:50,240 --> 00:04:54,380
amazing things in terms of you know

126
00:04:52,310 --> 00:04:56,570
retention and then sampling I don't know

127
00:04:54,380 --> 00:04:59,000
if you realize but usually those are Rd

128
00:04:56,570 --> 00:05:00,950
graphs they always come in batch of

129
00:04:59,000 --> 00:05:03,980
three or four and you'll have like one

130
00:05:00,950 --> 00:05:05,780
day one week and then a month and it's

131
00:05:03,980 --> 00:05:08,690
because the storage engine is actually

132
00:05:05,780 --> 00:05:11,630
very quickly losing data in down

133
00:05:08,690 --> 00:05:14,030
sampling you know you have this you

134
00:05:11,630 --> 00:05:15,650
store for a day with some precision and

135
00:05:14,030 --> 00:05:17,299
then very quickly you actually sample

136
00:05:15,650 --> 00:05:18,770
down and you only save you know less

137
00:05:17,300 --> 00:05:20,600
information for a week and then for an

138
00:05:18,770 --> 00:05:22,760
ounce which mean if you want to go back

139
00:05:20,600 --> 00:05:25,160
to the data you already have lost a lot

140
00:05:22,760 --> 00:05:26,810
of very critical information the new

141
00:05:25,160 --> 00:05:28,580
data base is that we're going to explore

142
00:05:26,810 --> 00:05:30,200
they are way more efficient and they

143
00:05:28,580 --> 00:05:32,630
don't have all those limitations and you

144
00:05:30,200 --> 00:05:34,960
can actually store in a more efficient

145
00:05:32,630 --> 00:05:39,320
way you know a very high granularity

146
00:05:34,960 --> 00:05:41,060
systems and data that's one part and

147
00:05:39,320 --> 00:05:43,070
also part of the network industries

148
00:05:41,060 --> 00:05:45,530
we've been talking a lot of that we got

149
00:05:43,070 --> 00:05:47,420
a call kil SNMP we've gotta move to time

150
00:05:45,530 --> 00:05:49,099
interest streaming everything is gonna

151
00:05:47,420 --> 00:05:52,430
be open configure everything is gonna be

152
00:05:49,100 --> 00:05:54,740
Gena my and personally I feel we've been

153
00:05:52,430 --> 00:05:56,360
kind of lost in this discussions and we

154
00:05:54,740 --> 00:05:59,600
probably is focusing on the wrong

155
00:05:56,360 --> 00:06:01,100
problems like all of that is about how

156
00:05:59,600 --> 00:06:03,230
do we actually extract the data from the

157
00:06:01,100 --> 00:06:05,540
network there's very little discussions

158
00:06:03,230 --> 00:06:07,460
about how to actually consume those data

159
00:06:05,540 --> 00:06:09,260
like there's almost nothing out of the

160
00:06:07,460 --> 00:06:11,450
box that can consume telemetry streaming

161
00:06:09,260 --> 00:06:12,740
today like it's actually super hearts

162
00:06:11,450 --> 00:06:15,920
you know people don't really talk about

163
00:06:12,740 --> 00:06:17,810
that and at the end of the day it's not

164
00:06:15,920 --> 00:06:20,180
really about should I push or should I

165
00:06:17,810 --> 00:06:22,100
pull honestly it's a non debate like

166
00:06:20,180 --> 00:06:24,410
outside of our industry people are not

167
00:06:22,100 --> 00:06:26,690
so opinionated about that if you need to

168
00:06:24,410 --> 00:06:28,360
build a Sdn controller yes you need push

169
00:06:26,690 --> 00:06:31,160
you need to have sub seconds you know

170
00:06:28,360 --> 00:06:33,410
information coming to you but in most of

171
00:06:31,160 --> 00:06:35,720
the other use cases it's actually not as

172
00:06:33,410 --> 00:06:37,040
the big of a requirement so we should

173
00:06:35,720 --> 00:06:38,480
not spend so much time you know like

174
00:06:37,040 --> 00:06:41,210
sing oh I should do streaming or I

175
00:06:38,480 --> 00:06:43,940
should do SNMP personally I feel again

176
00:06:41,210 --> 00:06:46,340
it is the wrong debate and there are

177
00:06:43,940 --> 00:06:48,380
places for for both of them depending on

178
00:06:46,340 --> 00:06:51,919
the use cases

179
00:06:48,380 --> 00:06:53,420
so how are other doing outside of the

180
00:06:51,920 --> 00:06:54,650
network industry and I usually like to

181
00:06:53,420 --> 00:06:56,720
look at the you know several

182
00:06:54,650 --> 00:06:59,120
infrastructures and see how you know in

183
00:06:56,720 --> 00:07:01,370
terms of automation and monitoring they

184
00:06:59,120 --> 00:07:04,160
are usually a couple of years if not

185
00:07:01,370 --> 00:07:06,350
more ahead of us so on the server world

186
00:07:04,160 --> 00:07:08,810
the way it works is you know usually

187
00:07:06,350 --> 00:07:10,220
have an agent running on the server that

188
00:07:08,810 --> 00:07:13,310
will be in charge of collecting the data

189
00:07:10,220 --> 00:07:15,800
and then you will have a data store and

190
00:07:13,310 --> 00:07:17,300
you'll have another system that will be

191
00:07:15,800 --> 00:07:19,040
decoupled from that that will be used

192
00:07:17,300 --> 00:07:23,090
you know to visualize or to do their

193
00:07:19,040 --> 00:07:25,790
learning system and what we're seeing is

194
00:07:23,090 --> 00:07:28,219
also we have multiple data stores based

195
00:07:25,790 --> 00:07:29,930
on the type of data that we are actually

196
00:07:28,220 --> 00:07:31,880
we don't collect and we want to

197
00:07:29,930 --> 00:07:33,620
visualize where this one's because the

198
00:07:31,880 --> 00:07:35,590
type of data are so specific that we

199
00:07:33,620 --> 00:07:39,410
have very specialized data store today

200
00:07:35,590 --> 00:07:41,419
and in terms of how do we get the data

201
00:07:39,410 --> 00:07:43,430
from the server actually there's as many

202
00:07:41,420 --> 00:07:45,710
push and pull solutions like there's

203
00:07:43,430 --> 00:07:47,750
actually one of the most popular

204
00:07:45,710 --> 00:07:50,450
monitoring solution that we can export

205
00:07:47,750 --> 00:07:52,220
to the primitives is using push pull

206
00:07:50,450 --> 00:07:53,960
sorry pull from the device it's just

207
00:07:52,220 --> 00:07:55,550
it's doing that in a way that is way

208
00:07:53,960 --> 00:07:58,460
more efficient than what we're used to

209
00:07:55,550 --> 00:08:02,090
so we can you know pull a lot of

210
00:07:58,460 --> 00:08:04,609
information from you know thousands or

211
00:08:02,090 --> 00:08:07,760
tens of thousands of endpoints every ten

212
00:08:04,610 --> 00:08:10,010
seconds or so without scalability issues

213
00:08:07,760 --> 00:08:11,599
so again depend on the tools depend on

214
00:08:10,010 --> 00:08:14,030
the use case that's not really the part

215
00:08:11,600 --> 00:08:15,260
that we should focus on so what we would

216
00:08:14,030 --> 00:08:17,179
to look at that we will really have

217
00:08:15,260 --> 00:08:19,969
desegregated the stack we have a

218
00:08:17,180 --> 00:08:21,890
collector we have the database and then

219
00:08:19,970 --> 00:08:23,750
we have the visualization and shinin

220
00:08:21,890 --> 00:08:27,740
each one is really focused on on its

221
00:08:23,750 --> 00:08:28,910
system if we look at the data it's

222
00:08:27,740 --> 00:08:30,770
important to understand what are the

223
00:08:28,910 --> 00:08:33,260
type of data and what are the different

224
00:08:30,770 --> 00:08:35,630
you know their specificity so on one

225
00:08:33,260 --> 00:08:38,210
side we have the metrics or the time

226
00:08:35,630 --> 00:08:39,890
series which the time series and metrics

227
00:08:38,210 --> 00:08:44,270
are really applied to anything that is

228
00:08:39,890 --> 00:08:46,699
about numbers counters you know CPU

229
00:08:44,270 --> 00:08:48,230
value number of peers number of routes

230
00:08:46,700 --> 00:08:50,660
anything that can be represented with

231
00:08:48,230 --> 00:08:52,370
the numbers will very well fit into a

232
00:08:50,660 --> 00:08:53,780
time series database and that's

233
00:08:52,370 --> 00:08:55,670
something that you usually expect you

234
00:08:53,780 --> 00:08:58,040
know coming constantly to you every

235
00:08:55,670 --> 00:09:00,650
every few seconds every 30 seconds but

236
00:08:58,040 --> 00:09:01,400
something that you always get and then

237
00:09:00,650 --> 00:09:02,810
on the other

238
00:09:01,400 --> 00:09:05,510
that we have deluxe you know in the

239
00:09:02,810 --> 00:09:07,640
middle the logs are structured data more

240
00:09:05,510 --> 00:09:10,040
or less structured actually mostly texts

241
00:09:07,640 --> 00:09:12,020
you don't can really predict when they

242
00:09:10,040 --> 00:09:13,819
will come so you know there's completely

243
00:09:12,020 --> 00:09:16,160
different type of data that requires a

244
00:09:13,820 --> 00:09:18,800
different type of you know databases and

245
00:09:16,160 --> 00:09:20,780
an ensign actually to process that and

246
00:09:18,800 --> 00:09:23,660
then the last one are the structured

247
00:09:20,780 --> 00:09:26,120
data which really don't fit in any of

248
00:09:23,660 --> 00:09:28,459
those more complex structures like the

249
00:09:26,120 --> 00:09:30,320
ARP table my cable routing tables all

250
00:09:28,460 --> 00:09:33,170
those tables that really don't have a

251
00:09:30,320 --> 00:09:35,240
standardized way and and each of them

252
00:09:33,170 --> 00:09:37,069
requires a different pipeline different

253
00:09:35,240 --> 00:09:38,630
data base different storage and join the

254
00:09:37,070 --> 00:09:41,330
one we're gonna focus on today are

255
00:09:38,630 --> 00:09:44,420
really the metric and the time serie and

256
00:09:41,330 --> 00:09:49,640
you know so the starks is only covering

257
00:09:44,420 --> 00:09:51,500
that part there's a lot of open source

258
00:09:49,640 --> 00:09:53,120
projects that are very active in this

259
00:09:51,500 --> 00:09:55,070
space I just wanted to give you some of

260
00:09:53,120 --> 00:09:57,230
them you know in terms of there's a lot

261
00:09:55,070 --> 00:09:59,030
of collectors a lot of databases a lot

262
00:09:57,230 --> 00:10:01,730
of system you can use for learning or

263
00:09:59,030 --> 00:10:03,500
visualization I just wanted you know

264
00:10:01,730 --> 00:10:05,690
please let's not be caught up in the

265
00:10:03,500 --> 00:10:07,280
tools like honestly if you can if you

266
00:10:05,690 --> 00:10:09,290
get started with any of them you cannot

267
00:10:07,280 --> 00:10:10,970
go wrong like any of them will provide

268
00:10:09,290 --> 00:10:13,069
amazing capabilities compared to where

269
00:10:10,970 --> 00:10:15,290
we are right now and there's a lot of

270
00:10:13,070 --> 00:10:16,700
the same concept and notions across all

271
00:10:15,290 --> 00:10:18,260
of them they have their own you know

272
00:10:16,700 --> 00:10:20,360
variations on the implementation side

273
00:10:18,260 --> 00:10:22,760
but you know it's it's this presentation

274
00:10:20,360 --> 00:10:24,680
is going to use Telegraph as the

275
00:10:22,760 --> 00:10:26,810
collector primitives as at times three

276
00:10:24,680 --> 00:10:28,489
data base and you know graph enhancer

277
00:10:26,810 --> 00:10:31,699
visualization but it's not so much about

278
00:10:28,490 --> 00:10:33,230
those systems and I hopefully you know a

279
00:10:31,700 --> 00:10:34,670
lot of these things we will discuss in

280
00:10:33,230 --> 00:10:37,340
this presentations are also applicable

281
00:10:34,670 --> 00:10:39,439
to all of them like all of them are

282
00:10:37,340 --> 00:10:43,220
actually very very good and very popular

283
00:10:39,440 --> 00:10:44,900
a little bit more about Telegraph's so

284
00:10:43,220 --> 00:10:46,490
Telegraph is the collector that's the

285
00:10:44,900 --> 00:10:48,170
part that we will use today to actually

286
00:10:46,490 --> 00:10:49,880
extract information from the device I

287
00:10:48,170 --> 00:10:51,620
personally call that the the Swiss Army

288
00:10:49,880 --> 00:10:54,680
knife because it's extremely poor fall

289
00:10:51,620 --> 00:10:57,080
he actually has this very flexible input

290
00:10:54,680 --> 00:10:59,359
and output plugins where you can collect

291
00:10:57,080 --> 00:11:01,730
data from hundreds of different systems

292
00:10:59,360 --> 00:11:04,550
and different formats and it can you

293
00:11:01,730 --> 00:11:08,390
know and you can also talk to many many

294
00:11:04,550 --> 00:11:09,819
different back-end and data bases so in

295
00:11:08,390 --> 00:11:12,380
this case we're gonna use it for

296
00:11:09,820 --> 00:11:15,520
Prometheus as a back-end and we're going

297
00:11:12,380 --> 00:11:21,070
to use a specific plug-in that what

298
00:11:15,520 --> 00:11:23,319
developed by Cisco for 14 mi if you're

299
00:11:21,070 --> 00:11:25,330
not so much into building your own stack

300
00:11:23,320 --> 00:11:26,830
and managing it and you know your want

301
00:11:25,330 --> 00:11:28,180
to focus on your core business is

302
00:11:26,830 --> 00:11:29,560
totally fine I particularly a lot of the

303
00:11:28,180 --> 00:11:30,699
things we discussed today can also be

304
00:11:29,560 --> 00:11:33,339
applied in more of a cloud-based

305
00:11:30,700 --> 00:11:34,600
solutions what are using can take or you

306
00:11:33,340 --> 00:11:36,070
know that a dog or any of those

307
00:11:34,600 --> 00:11:38,950
solutions we can provide like basically

308
00:11:36,070 --> 00:11:41,620
cloud base time series that is solution

309
00:11:38,950 --> 00:11:43,510
where they would like to replace the

310
00:11:41,620 --> 00:11:45,220
database the visualization in all of

311
00:11:43,510 --> 00:11:47,400
that usually you will still have an

312
00:11:45,220 --> 00:11:50,140
agent either generic one or their own

313
00:11:47,400 --> 00:11:51,850
running on your site to collect but at

314
00:11:50,140 --> 00:11:56,830
the end again a lot of those concepts

315
00:11:51,850 --> 00:11:59,020
also apply in those solution so now

316
00:11:56,830 --> 00:12:00,820
let's look at how is it going to look

317
00:11:59,020 --> 00:12:04,240
like if we actually want to you know

318
00:12:00,820 --> 00:12:05,890
implement that on a network vault so we

319
00:12:04,240 --> 00:12:07,780
will use the same data store same

320
00:12:05,890 --> 00:12:11,110
database same tools to visualizations

321
00:12:07,780 --> 00:12:12,699
and an alerting and really the part that

322
00:12:11,110 --> 00:12:15,520
will change is the collector or the

323
00:12:12,700 --> 00:12:18,730
agent so first use case if you have a

324
00:12:15,520 --> 00:12:20,170
Linux based nas most likely you can

325
00:12:18,730 --> 00:12:21,550
pretty much use the same agent that they

326
00:12:20,170 --> 00:12:23,170
have on the server side so if you have

327
00:12:21,550 --> 00:12:24,550
at least a cumulus or an arts lab but

328
00:12:23,170 --> 00:12:26,770
that can be any other system that lets

329
00:12:24,550 --> 00:12:28,270
you install something on Linux you can

330
00:12:26,770 --> 00:12:30,010
install those agents and you will be

331
00:12:28,270 --> 00:12:32,650
able to extract a lot of information out

332
00:12:30,010 --> 00:12:35,380
of the box pretty much have don't have

333
00:12:32,650 --> 00:12:37,090
to do anything special here then there's

334
00:12:35,380 --> 00:12:39,790
what I call the legacy device the one

335
00:12:37,090 --> 00:12:41,620
that only hex books for example SNMP so

336
00:12:39,790 --> 00:12:43,599
those agents like Telegraph they also

337
00:12:41,620 --> 00:12:45,610
have the ability to connect information

338
00:12:43,600 --> 00:12:46,960
for example through an MP and they can

339
00:12:45,610 --> 00:12:48,790
run outside of the device they don't

340
00:12:46,960 --> 00:12:50,920
have to run on the device itself so you

341
00:12:48,790 --> 00:12:53,620
can have an agent that will collect this

342
00:12:50,920 --> 00:12:55,959
information from SNMP to a lot of device

343
00:12:53,620 --> 00:12:58,660
that's actually probably the most common

344
00:12:55,960 --> 00:13:00,730
use cases where people get started into

345
00:12:58,660 --> 00:13:03,760
the network world and using those new

346
00:13:00,730 --> 00:13:05,440
databases with SNMP and with traditional

347
00:13:03,760 --> 00:13:08,830
devices and it works great

348
00:13:05,440 --> 00:13:10,090
honestly again SNMP is not perfect but

349
00:13:08,830 --> 00:13:11,410
it's not something that should prevent

350
00:13:10,090 --> 00:13:13,720
us from moving forward in those

351
00:13:11,410 --> 00:13:15,550
directions another solution that I've

352
00:13:13,720 --> 00:13:16,840
seen I personally implemented that works

353
00:13:15,550 --> 00:13:20,140
very well is you can build your own

354
00:13:16,840 --> 00:13:21,850
collector you know in Python and go

355
00:13:20,140 --> 00:13:23,680
whatever language and just connect to

356
00:13:21,850 --> 00:13:25,930
the device through there whatever API is

357
00:13:23,680 --> 00:13:27,180
they provide you know all the modern

358
00:13:25,930 --> 00:13:29,189
devices have

359
00:13:27,180 --> 00:13:30,870
advanced api's and so if you're working

360
00:13:29,190 --> 00:13:33,060
on the Juniper device you can collect a

361
00:13:30,870 --> 00:13:35,430
lot of information with net comp at a

362
00:13:33,060 --> 00:13:37,109
pretty high rate and you know export all

363
00:13:35,430 --> 00:13:41,069
those information to the to the database

364
00:13:37,110 --> 00:13:42,810
and then the last one I which considers

365
00:13:41,070 --> 00:13:45,540
our you know the device there are

366
00:13:42,810 --> 00:13:47,670
telemetry streaming and so for those

367
00:13:45,540 --> 00:13:51,390
there's a new generation of interfaces

368
00:13:47,670 --> 00:13:53,250
that are now available couple years ago

369
00:13:51,390 --> 00:13:55,230
every vendor was coming up with its own

370
00:13:53,250 --> 00:13:57,450
interface like I'm personally familiar

371
00:13:55,230 --> 00:14:00,030
with the one from GE protocol GGI

372
00:13:57,450 --> 00:14:02,100
there's a typo on the screen Cisco had

373
00:14:00,030 --> 00:14:04,020
also their own interface and nowadays

374
00:14:02,100 --> 00:14:05,880
all the vendors are trying to actually

375
00:14:04,020 --> 00:14:09,030
implement a standard interface for

376
00:14:05,880 --> 00:14:12,570
telemetry called gnm I and so we also

377
00:14:09,030 --> 00:14:13,920
have a you know multiple collectors that

378
00:14:12,570 --> 00:14:20,310
are available on this field that can be

379
00:14:13,920 --> 00:14:22,140
used to to store all of that so we're

380
00:14:20,310 --> 00:14:23,579
going to have a quick descriptions but

381
00:14:22,140 --> 00:14:25,050
specifically what is interesting about

382
00:14:23,580 --> 00:14:33,120
those those times the database and then

383
00:14:25,050 --> 00:14:35,550
we'll move on to the land so the the

384
00:14:33,120 --> 00:14:37,500
time three database really I mean it's

385
00:14:35,550 --> 00:14:39,990
really something and my perspective they

386
00:14:37,500 --> 00:14:41,940
start around you know 2013 really came

387
00:14:39,990 --> 00:14:43,980
instrument 2016 a lot of different

388
00:14:41,940 --> 00:14:46,050
projects you know started to be very

389
00:14:43,980 --> 00:14:49,200
focused and dedicated and how do I store

390
00:14:46,050 --> 00:14:50,880
and how do i process and consume you

391
00:14:49,200 --> 00:14:53,940
know those specific derive of time sorry

392
00:14:50,880 --> 00:14:56,189
but about counters and integer and all

393
00:14:53,940 --> 00:14:58,470
of that and and all of those system

394
00:14:56,190 --> 00:15:00,300
actually have some specific some

395
00:14:58,470 --> 00:15:02,250
similarity in sense that they all come

396
00:15:00,300 --> 00:15:04,199
with a very powerful query enjoin and

397
00:15:02,250 --> 00:15:07,020
they lets you completely de correlate

398
00:15:04,200 --> 00:15:08,430
how you store to how you visualize and

399
00:15:07,020 --> 00:15:10,319
how you consume and that's what we're

400
00:15:08,430 --> 00:15:13,079
going to explore today they actually

401
00:15:10,320 --> 00:15:14,400
have the ability to and it's something

402
00:15:13,080 --> 00:15:17,010
we are not used to in this industry like

403
00:15:14,400 --> 00:15:18,600
we can store all the informations about

404
00:15:17,010 --> 00:15:19,950
the XE the interface counters and then

405
00:15:18,600 --> 00:15:23,550
we can actually visualize them and

406
00:15:19,950 --> 00:15:25,560
represent them in dozen different way at

407
00:15:23,550 --> 00:15:27,599
any point of time just based on how we

408
00:15:25,560 --> 00:15:29,819
are acquiring the data so it's it's very

409
00:15:27,600 --> 00:15:32,430
interesting those databases are very

410
00:15:29,820 --> 00:15:33,810
different than the SQL databases in

411
00:15:32,430 --> 00:15:37,589
sense that there's usually no schema

412
00:15:33,810 --> 00:15:39,780
there's usually more read more writes

413
00:15:37,590 --> 00:15:40,620
where we constantly writing data to it

414
00:15:39,780 --> 00:15:41,939
then read

415
00:15:40,620 --> 00:15:44,250
but that's why also we have such a

416
00:15:41,940 --> 00:15:47,730
specialization in this space for those

417
00:15:44,250 --> 00:15:49,530
specific type of data and the way

418
00:15:47,730 --> 00:15:51,000
usually the data will looks like in the

419
00:15:49,530 --> 00:15:54,510
database will looks pretty much like

420
00:15:51,000 --> 00:15:56,280
that so you have what some of them

421
00:15:54,510 --> 00:15:58,680
called a measurement name or Surrey

422
00:15:56,280 --> 00:16:01,020
which is really defined what is the type

423
00:15:58,680 --> 00:16:02,969
of data so here that will be let's say I

424
00:16:01,020 --> 00:16:06,329
want to be you know interface output

425
00:16:02,970 --> 00:16:08,400
bytes and then you have a set of tags or

426
00:16:06,330 --> 00:16:10,020
label they all have crawl differently

427
00:16:08,400 --> 00:16:13,410
but what it mean it's the contextual

428
00:16:10,020 --> 00:16:15,210
information on width in which context

429
00:16:13,410 --> 00:16:17,520
this information was actually captured

430
00:16:15,210 --> 00:16:19,620
and so if I'm talking about interface

431
00:16:17,520 --> 00:16:21,870
counters the minimum I need to capture

432
00:16:19,620 --> 00:16:23,790
is the name of the device and the name

433
00:16:21,870 --> 00:16:25,500
of the interface but the idea is that

434
00:16:23,790 --> 00:16:28,550
you can have many many more contextual

435
00:16:25,500 --> 00:16:31,110
information that will actually let you

436
00:16:28,550 --> 00:16:32,849
query those device and that's again what

437
00:16:31,110 --> 00:16:34,590
we'll be exploring in the other part of

438
00:16:32,850 --> 00:16:38,190
the talk and then usually you have a

439
00:16:34,590 --> 00:16:40,620
value so really all the data that we

440
00:16:38,190 --> 00:16:44,520
collect have kind of these specific

441
00:16:40,620 --> 00:16:46,170
formats and I'll I'll skip to the labs

442
00:16:44,520 --> 00:16:49,460
but we'll explore life you know how to

443
00:16:46,170 --> 00:16:55,620
create that and how does that looks like

444
00:16:49,460 --> 00:16:57,840
so the lab so I created this lab based

445
00:16:55,620 --> 00:17:01,230
on six different devices three different

446
00:16:57,840 --> 00:17:03,150
nas iOS 6 RG no cos it's basically

447
00:17:01,230 --> 00:17:05,099
explained leaf topology with 4 spines to

448
00:17:03,150 --> 00:17:07,709
leave a couple of servers to generate

449
00:17:05,099 --> 00:17:10,439
some traffic and what we'll have is we

450
00:17:07,709 --> 00:17:13,770
will have a server where we will install

451
00:17:10,440 --> 00:17:16,380
the x 3 database the visualization it

452
00:17:13,770 --> 00:17:18,180
will install one telegraph agent for

453
00:17:16,380 --> 00:17:20,490
every node in this Telegraph agent we'll

454
00:17:18,180 --> 00:17:23,130
use G nmi to connect to the device

455
00:17:20,490 --> 00:17:25,500
queried information and it will expose

456
00:17:23,130 --> 00:17:27,660
that to primitives and again all works

457
00:17:25,500 --> 00:17:29,100
with that for information is to polish

458
00:17:27,660 --> 00:17:32,310
is running in the cloud in solution

459
00:17:29,100 --> 00:17:33,480
called pseudo there's a github repo that

460
00:17:32,310 --> 00:17:35,879
actually has I think all the

461
00:17:33,480 --> 00:17:38,070
instructions to recreate that and the

462
00:17:35,880 --> 00:17:39,750
pseudo provided some coupon if you

463
00:17:38,070 --> 00:17:42,030
wanted to recreate this topology on your

464
00:17:39,750 --> 00:17:43,710
own after you can come see me and you

465
00:17:42,030 --> 00:17:46,440
can dis if you have some sandwich sure

466
00:17:43,710 --> 00:17:47,450
to spin that up on your own and try at

467
00:17:46,440 --> 00:17:49,950
home

468
00:17:47,450 --> 00:17:51,870
so a little bit about jean-mi if you're

469
00:17:49,950 --> 00:17:53,620
not familiar with Ginny my Gina is the

470
00:17:51,870 --> 00:17:55,570
new standard that has been you know in

471
00:17:53,620 --> 00:17:58,689
for telemetry streaming you came out of

472
00:17:55,570 --> 00:18:00,189
the open config working group and it's

473
00:17:58,690 --> 00:18:02,200
really actually an interface that can be

474
00:18:00,190 --> 00:18:04,690
used both to configure the device using

475
00:18:02,200 --> 00:18:06,700
open country beep and also collect and

476
00:18:04,690 --> 00:18:09,190
subscribe to the states and the counters

477
00:18:06,700 --> 00:18:10,930
in the open config formats so both of

478
00:18:09,190 --> 00:18:13,690
them in this specific case I'm not using

479
00:18:10,930 --> 00:18:16,330
it for configuration just to collect the

480
00:18:13,690 --> 00:18:18,790
data nowadays it is supported by most

481
00:18:16,330 --> 00:18:22,480
vendors so the latest release of you

482
00:18:18,790 --> 00:18:25,210
know Gino's or Arista or iOS 6 are for

483
00:18:22,480 --> 00:18:27,160
example support that and we're just

484
00:18:25,210 --> 00:18:28,840
saying you know the first generations of

485
00:18:27,160 --> 00:18:31,890
collector in these specific fields

486
00:18:28,840 --> 00:18:33,970
coming up so actually I think I I I

487
00:18:31,890 --> 00:18:35,200
wanted to explore this idea so I

488
00:18:33,970 --> 00:18:37,990
actually managed to get you know this

489
00:18:35,200 --> 00:18:39,490
multi vendor environments working I

490
00:18:37,990 --> 00:18:41,170
think we're still at the beginning of

491
00:18:39,490 --> 00:18:43,450
that you know hundred percent is not

492
00:18:41,170 --> 00:18:45,790
with the compatible between all of them

493
00:18:43,450 --> 00:18:48,610
yet but I think it's heading into the

494
00:18:45,790 --> 00:18:51,070
into the right direction so and the way

495
00:18:48,610 --> 00:18:54,040
it works is it's using gr pcs transport

496
00:18:51,070 --> 00:18:56,230
and the collector needs to open decision

497
00:18:54,040 --> 00:18:58,450
so it's initiated by the collector and

498
00:18:56,230 --> 00:18:59,950
the collector then will subscribe to

499
00:18:58,450 --> 00:19:01,600
some of the data and tell you know when

500
00:18:59,950 --> 00:19:03,429
he open decisions what he would like to

501
00:19:01,600 --> 00:19:05,980
receive and that the device would like

502
00:19:03,429 --> 00:19:08,770
to stream the data after that and I'll

503
00:19:05,980 --> 00:19:10,750
show you some of that but again if you

504
00:19:08,770 --> 00:19:12,190
have information about gnm I am very

505
00:19:10,750 --> 00:19:14,230
happy to talk about after the

506
00:19:12,190 --> 00:19:15,760
presentation this is not so much a

507
00:19:14,230 --> 00:19:17,679
presentation about jean-mi I guess you

508
00:19:15,760 --> 00:19:22,440
know people could do a full tox of a

509
00:19:17,679 --> 00:19:24,730
Hauer on it but that's what I just for

510
00:19:22,440 --> 00:19:28,300
just to explore that I decided to use

511
00:19:24,730 --> 00:19:31,270
for a for this presentation and

512
00:19:28,300 --> 00:19:33,909
specifically I'm using a collector

513
00:19:31,270 --> 00:19:37,090
called Cisco telemetry jean-mi that has

514
00:19:33,910 --> 00:19:39,460
been provided by contributed by Cisco to

515
00:19:37,090 --> 00:19:42,370
Telegraph so it's part of the main

516
00:19:39,460 --> 00:19:44,740
Telegraph release it's 1.11 and I

517
00:19:42,370 --> 00:19:47,949
actually was successful and be able to

518
00:19:44,740 --> 00:19:50,620
use that from 112 to on you know other

519
00:19:47,950 --> 00:19:52,300
devices like carrot Stein and juniper so

520
00:19:50,620 --> 00:19:54,669
if you want to try and if you can just

521
00:19:52,300 --> 00:19:55,870
download the the base image of Telegraph

522
00:19:54,670 --> 00:20:00,570
and you will actually get that and you

523
00:19:55,870 --> 00:20:03,280
will be able to use that last slide

524
00:20:00,570 --> 00:20:06,570
before we actually get into the demo a

525
00:20:03,280 --> 00:20:09,360
little bit about theory about primitives

526
00:20:06,570 --> 00:20:11,189
so prometheus is at I'm sorry database

527
00:20:09,360 --> 00:20:14,039
that's what we're gonna use for this

528
00:20:11,190 --> 00:20:16,289
presentation and it is really focus on

529
00:20:14,039 --> 00:20:17,429
on the storage and the query engine and

530
00:20:16,289 --> 00:20:19,649
you can see there's a lot of things

531
00:20:17,429 --> 00:20:21,179
around it but the usual component that

532
00:20:19,649 --> 00:20:23,370
will see is that first you usually use

533
00:20:21,179 --> 00:20:24,690
an external system for visualization so

534
00:20:23,370 --> 00:20:27,840
in this case we're looking at graph Anna

535
00:20:24,690 --> 00:20:29,399
that's we're gonna use Prometheus also

536
00:20:27,840 --> 00:20:31,379
has the ability to generate some alerts

537
00:20:29,399 --> 00:20:32,758
based on the data we are not exploring

538
00:20:31,380 --> 00:20:34,769
that today but it's actually very

539
00:20:32,759 --> 00:20:36,539
powerful capability is very interesting

540
00:20:34,769 --> 00:20:38,340
and usually relies on an external

541
00:20:36,539 --> 00:20:40,769
component called the alert manager that

542
00:20:38,340 --> 00:20:43,080
they're also providing but it's it's

543
00:20:40,769 --> 00:20:45,509
used in many places to to generate alert

544
00:20:43,080 --> 00:20:48,509
and and provide some insights on all of

545
00:20:45,509 --> 00:20:50,429
those data and then on the other side

546
00:20:48,509 --> 00:20:52,860
what we have is really how do we get the

547
00:20:50,429 --> 00:20:54,899
data so as I told you earlier

548
00:20:52,860 --> 00:20:58,340
Prometheus is about pulling the data

549
00:20:54,899 --> 00:21:00,508
they call that scraping and so usually

550
00:20:58,340 --> 00:21:02,370
we have endpoints that will actually

551
00:21:00,509 --> 00:21:03,899
expose those data and I will show you

552
00:21:02,370 --> 00:21:05,549
later how that works

553
00:21:03,899 --> 00:21:07,590
in a specific formats in the expose

554
00:21:05,549 --> 00:21:09,210
that's through a web UI and then we just

555
00:21:07,590 --> 00:21:11,129
give this list of endpoints to the

556
00:21:09,210 --> 00:21:13,529
server and the server will automatically

557
00:21:11,129 --> 00:21:15,059
scrape them on its own and you know the

558
00:21:13,529 --> 00:21:17,700
format's make it that it's it's very

559
00:21:15,059 --> 00:21:19,710
efficient there's also a way using what

560
00:21:17,700 --> 00:21:21,240
they call the push to get way to be able

561
00:21:19,710 --> 00:21:24,269
to get some information that are not

562
00:21:21,240 --> 00:21:28,139
able to expose this longley interface so

563
00:21:24,269 --> 00:21:30,690
we have way to collect those it is

564
00:21:28,139 --> 00:21:32,580
usually common to deploy those system

565
00:21:30,690 --> 00:21:35,220
coupled which they call service

566
00:21:32,580 --> 00:21:36,480
discovery mechanism so that the

567
00:21:35,220 --> 00:21:38,399
primitive servers will actually

568
00:21:36,480 --> 00:21:41,840
automatically discover those endpoints

569
00:21:38,399 --> 00:21:44,610
through some you know centralized

570
00:21:41,840 --> 00:21:46,830
service catalogs or things like that so

571
00:21:44,610 --> 00:21:48,240
that you don't have to manually update

572
00:21:46,830 --> 00:21:51,899
and keep track of all of that but it's

573
00:21:48,240 --> 00:21:53,370
it's an all different topic some of

574
00:21:51,899 --> 00:21:55,289
those service discovery for example will

575
00:21:53,370 --> 00:21:57,268
be like it's naturally integrated with

576
00:21:55,289 --> 00:21:58,559
the kubernetes for example so that's if

577
00:21:57,269 --> 00:22:01,169
you have service training in kubernetes

578
00:21:58,559 --> 00:22:03,269
you can automatically be discovered and

579
00:22:01,169 --> 00:22:06,690
monitored with primitives you know some

580
00:22:03,269 --> 00:22:08,100
are some of the typical use cases what

581
00:22:06,690 --> 00:22:10,799
all keeps things simple we're not gonna

582
00:22:08,100 --> 00:22:13,019
use service discovery today we're gonna

583
00:22:10,799 --> 00:22:16,139
try to export the basics and hopefully

584
00:22:13,019 --> 00:22:17,580
you know show you how that works and how

585
00:22:16,139 --> 00:22:18,300
you need to think when you approach that

586
00:22:17,580 --> 00:22:20,909
in

587
00:22:18,300 --> 00:22:23,700
to work industry so let's get to the

588
00:22:20,910 --> 00:22:25,470
demo unless there's a couple of

589
00:22:23,700 --> 00:22:27,320
questions but what we're gonna do is you

590
00:22:25,470 --> 00:22:31,080
know we're first gonna set up telegraph

591
00:22:27,320 --> 00:22:33,240
which permit use clients to expose the

592
00:22:31,080 --> 00:22:35,399
data in a GM I on the other side to

593
00:22:33,240 --> 00:22:37,170
collect the data from the device then

594
00:22:35,400 --> 00:22:38,910
also we have all of those telegraph

595
00:22:37,170 --> 00:22:41,310
agent and we're collecting the data from

596
00:22:38,910 --> 00:22:43,410
the device will set up from E to servers

597
00:22:41,310 --> 00:22:45,649
and what starts to you know consume and

598
00:22:43,410 --> 00:22:48,030
and scrape those data from primitives

599
00:22:45,650 --> 00:22:49,470
explore some of that stripper Medusa

600
00:22:48,030 --> 00:22:54,870
next start exploring some of the query

601
00:22:49,470 --> 00:22:57,270
so let's get started with that if you

602
00:22:54,870 --> 00:23:06,030
have questions please just go to the

603
00:22:57,270 --> 00:23:09,629
Nikon and we can now so I have a project

604
00:23:06,030 --> 00:23:11,399
again I have actually written some play

605
00:23:09,630 --> 00:23:13,260
books to help me deploy those Telegraph

606
00:23:11,400 --> 00:23:14,310
agents I'm just gonna run that and

607
00:23:13,260 --> 00:23:16,320
explain what's happening in the

608
00:23:14,310 --> 00:23:18,780
background why it's running but what I'm

609
00:23:16,320 --> 00:23:22,260
doing with that is I'm actually starting

610
00:23:18,780 --> 00:23:24,840
six telegraph agents on my jump host or

611
00:23:22,260 --> 00:23:26,879
and on my train post right now if I look

612
00:23:24,840 --> 00:23:28,439
at darker I don't have any image running

613
00:23:26,880 --> 00:23:30,690
so I'm gonna have in two minutes I will

614
00:23:28,440 --> 00:23:34,620
have six images of Telegraph one for

615
00:23:30,690 --> 00:23:36,630
each of my devices and to show you some

616
00:23:34,620 --> 00:23:39,899
example of the configuration this is how

617
00:23:36,630 --> 00:23:42,750
a telegraph configuration looks like so

618
00:23:39,900 --> 00:23:44,700
we have the ability to define what are

619
00:23:42,750 --> 00:23:47,010
the output plug in any input public

620
00:23:44,700 --> 00:23:49,950
anyone we use so here I say I want the

621
00:23:47,010 --> 00:23:53,070
output plug-in to be Prometheus probably

622
00:23:49,950 --> 00:23:55,950
cannot try to make that bigger and then

623
00:23:53,070 --> 00:23:57,770
I want to say I want to use the input

624
00:23:55,950 --> 00:24:00,000
plug-in I want to use the Cisco

625
00:23:57,770 --> 00:24:02,580
telemetry Gina and when I was talking

626
00:24:00,000 --> 00:24:04,890
about and then I will have to provide

627
00:24:02,580 --> 00:24:07,199
where's the device login password and

628
00:24:04,890 --> 00:24:09,510
then the rest of the configuration is

629
00:24:07,200 --> 00:24:12,630
really about what do I want to subscribe

630
00:24:09,510 --> 00:24:14,190
to and here just because I wanted just

631
00:24:12,630 --> 00:24:16,560
some data I'm subscribing to the

632
00:24:14,190 --> 00:24:20,280
interface stats that's what I have here

633
00:24:16,560 --> 00:24:21,929
/ interfaces / interface which is how

634
00:24:20,280 --> 00:24:24,450
things works in jean-mi has subscribed

635
00:24:21,930 --> 00:24:26,070
to a specific path that represent a

636
00:24:24,450 --> 00:24:30,060
specific data that is defined in the

637
00:24:26,070 --> 00:24:31,529
open config data model and here I'm also

638
00:24:30,060 --> 00:24:34,289
subscribing to

639
00:24:31,529 --> 00:24:35,820
the BGP information in the States now

640
00:24:34,289 --> 00:24:37,799
what personally I really like Chris

641
00:24:35,820 --> 00:24:40,379
Telegraph is they are they provide a

642
00:24:37,799 --> 00:24:42,509
very flexible system so that I can

643
00:24:40,379 --> 00:24:43,740
process the data before sending it to

644
00:24:42,509 --> 00:24:46,679
the database to make sure it looks

645
00:24:43,740 --> 00:24:49,049
exactly how I want so for example what

646
00:24:46,679 --> 00:24:50,850
I'm doing here is I'm telling it you

647
00:24:49,049 --> 00:24:52,799
know what I'm gonna get from my

648
00:24:50,850 --> 00:24:54,449
interfaces I'll get a lot of counters

649
00:24:52,799 --> 00:24:56,490
we'll also have some states I will have

650
00:24:54,450 --> 00:24:59,309
some information that say my interface

651
00:24:56,490 --> 00:25:01,919
is up or my interface is down if you

652
00:24:59,309 --> 00:25:03,450
follow the the process you know time

653
00:25:01,919 --> 00:25:06,149
series database are really about

654
00:25:03,450 --> 00:25:07,919
counters in numbers not so much about up

655
00:25:06,149 --> 00:25:08,850
and down so what I'm doing is I

656
00:25:07,919 --> 00:25:12,389
converting on-the-fly

657
00:25:08,850 --> 00:25:15,809
those those still those statuses up and

658
00:25:12,389 --> 00:25:17,789
down into integer like one for up to

659
00:25:15,809 --> 00:25:20,220
four down so that I can actually keep

660
00:25:17,789 --> 00:25:22,049
track of that in my tensor database and

661
00:25:20,220 --> 00:25:24,870
I'll show you later on how I can revert

662
00:25:22,049 --> 00:25:26,610
that back in and represent that and I'm

663
00:25:24,870 --> 00:25:29,129
doing the same for my bgp session i'm

664
00:25:26,610 --> 00:25:31,320
saying you know if it's establish a sign

665
00:25:29,129 --> 00:25:33,689
1 if it's active a sign - if it's

666
00:25:31,320 --> 00:25:35,460
connected sign 3 if it's a less than 4

667
00:25:33,690 --> 00:25:37,169
and so based on that I can now keep

668
00:25:35,460 --> 00:25:39,179
track and alerts on those specific

669
00:25:37,169 --> 00:25:40,529
States you know inside my might I'm

670
00:25:39,179 --> 00:25:45,480
sorry database so that's something that

671
00:25:40,529 --> 00:25:47,549
is done at the at the Telegraph layer so

672
00:25:45,480 --> 00:25:50,879
now that everything is working I should

673
00:25:47,549 --> 00:25:52,559
have 6 Telegraph agent running each one

674
00:25:50,879 --> 00:25:58,799
is actually exposed on a specific ports

675
00:25:52,559 --> 00:26:06,750
so if I go now to my my server on let's

676
00:25:58,799 --> 00:26:09,600
say a specific port slash metrics I can

677
00:26:06,750 --> 00:26:12,509
actually see all the data it looks very

678
00:26:09,600 --> 00:26:13,799
nd just oh so beyond that it's not meant

679
00:26:12,509 --> 00:26:16,230
for us to actually look at it's just

680
00:26:13,799 --> 00:26:18,179
more of a troubleshooting exercise or to

681
00:26:16,230 --> 00:26:20,070
understand how the workflow but we have

682
00:26:18,179 --> 00:26:25,259
actually here all the information and if

683
00:26:20,070 --> 00:26:27,570
I try to get one of them let's say admin

684
00:26:25,259 --> 00:26:28,889
status what we can see here is here it's

685
00:26:27,570 --> 00:26:31,740
actually exactly what I was doing

686
00:26:28,889 --> 00:26:34,350
earlier I have the name of measurements

687
00:26:31,740 --> 00:26:36,570
and then I have a set of tags that are

688
00:26:34,350 --> 00:26:38,908
defined the tags that define the name of

689
00:26:36,570 --> 00:26:40,950
the device I have a tag that define the

690
00:26:38,909 --> 00:26:42,869
name of the interface here I have other

691
00:26:40,950 --> 00:26:45,330
tags that are provided that I may or may

692
00:26:42,869 --> 00:26:47,550
not use I'm using one to insert the

693
00:26:45,330 --> 00:26:49,290
the role of the device is part of it and

694
00:26:47,550 --> 00:26:51,270
then I have an integer then that

695
00:26:49,290 --> 00:26:53,070
actually define my adenine status which

696
00:26:51,270 --> 00:26:54,900
is up here so I have all those

697
00:26:53,070 --> 00:26:55,200
information that I expose for each of

698
00:26:54,900 --> 00:26:58,970
them

699
00:26:55,200 --> 00:27:00,270
so now let's move on to installing

700
00:26:58,970 --> 00:27:03,510
prometheus

701
00:27:00,270 --> 00:27:05,790
so usually you won't stop permit use as

702
00:27:03,510 --> 00:27:10,410
a as a long-running system you will

703
00:27:05,790 --> 00:27:13,440
install that as a as a proper service

704
00:27:10,410 --> 00:27:15,120
here I'm just going to do the basics and

705
00:27:13,440 --> 00:27:18,120
the simple installations where I

706
00:27:15,120 --> 00:27:21,479
download the binary lettuce 1 I unpack

707
00:27:18,120 --> 00:27:24,000
it and I just basically extract so sits

708
00:27:21,480 --> 00:27:27,810
it's to go process I actually don't need

709
00:27:24,000 --> 00:27:30,360
much all I need is a process each cell

710
00:27:27,810 --> 00:27:32,610
call Prometheus and if I start that I

711
00:27:30,360 --> 00:27:34,530
will have time to a database you can run

712
00:27:32,610 --> 00:27:37,439
on your lap on a Mac on Windows you can

713
00:27:34,530 --> 00:27:39,710
run anywhere that's the beauty of go all

714
00:27:37,440 --> 00:27:42,210
I really need is a configuration file so

715
00:27:39,710 --> 00:27:48,230
the minimum configuration files you can

716
00:27:42,210 --> 00:27:48,230
have will be this one that will

717
00:27:51,980 --> 00:27:56,940
so if I that what I really have here is

718
00:27:55,200 --> 00:27:59,490
that just tell it like every five

719
00:27:56,940 --> 00:28:00,840
seconds I will delight you to scrape

720
00:27:59,490 --> 00:28:02,880
yourself actually extract the

721
00:28:00,840 --> 00:28:04,590
information about yourself because you

722
00:28:02,880 --> 00:28:05,760
know as a as a database works you want

723
00:28:04,590 --> 00:28:08,879
to get some metrics and some

724
00:28:05,760 --> 00:28:14,730
informations about it now if I start

725
00:28:08,880 --> 00:28:16,440
that I actually have a tank sorry

726
00:28:14,730 --> 00:28:19,710
database running that will get you know

727
00:28:16,440 --> 00:28:24,780
some information by default for me

728
00:28:19,710 --> 00:28:27,120
choose expose everything on ports 9090

729
00:28:24,780 --> 00:28:29,250
so if I go here actually have the

730
00:28:27,120 --> 00:28:30,989
interface you know there's some

731
00:28:29,250 --> 00:28:33,120
informations we can go to can see

732
00:28:30,990 --> 00:28:35,160
actually what systems are getting

733
00:28:33,120 --> 00:28:38,639
scraped and what is their statuses and

734
00:28:35,160 --> 00:28:41,670
some information we also have a very

735
00:28:38,640 --> 00:28:43,380
simple query enjoin that we can use so

736
00:28:41,670 --> 00:28:46,170
for example if I wanted to see you know

737
00:28:43,380 --> 00:28:47,580
how many series and data's are actually

738
00:28:46,170 --> 00:28:49,770
collected I can have this information

739
00:28:47,580 --> 00:28:53,580
here so you can see here right now I

740
00:28:49,770 --> 00:28:55,020
have you know about 500 kind of metrics

741
00:28:53,580 --> 00:28:57,120
and series that are extracted from the

742
00:28:55,020 --> 00:28:59,070
database itself so but right now I'm not

743
00:28:57,120 --> 00:29:03,000
wearing any information from the network

744
00:28:59,070 --> 00:29:06,270
so let's update the the configuration to

745
00:29:03,000 --> 00:29:08,850
actually collect the information from

746
00:29:06,270 --> 00:29:11,940
the six collectors that I have running I

747
00:29:08,850 --> 00:29:15,300
go back to my system I stop the existing

748
00:29:11,940 --> 00:29:16,950
one update my configuration what I'm

749
00:29:15,300 --> 00:29:18,510
going to do now is I'm heading those new

750
00:29:16,950 --> 00:29:21,030
job and I see now I would like to scrape

751
00:29:18,510 --> 00:29:23,400
every 30 seconds those six endpoints

752
00:29:21,030 --> 00:29:24,930
which are representing the six Telegraph

753
00:29:23,400 --> 00:29:26,220
agent that are running everything runs

754
00:29:24,930 --> 00:29:28,830
on the same pool so everything is

755
00:29:26,220 --> 00:29:33,170
localhost but that's that's what it

756
00:29:28,830 --> 00:29:37,560
meant if I restart the database now and

757
00:29:33,170 --> 00:29:39,690
I go back to the UI I will be able to

758
00:29:37,560 --> 00:29:43,919
see now I have all my additional

759
00:29:39,690 --> 00:29:47,550
endpoint and you know they are slowly

760
00:29:43,920 --> 00:29:50,430
coming up and now I can actually go in

761
00:29:47,550 --> 00:29:52,680
my in my graph and I can query those

762
00:29:50,430 --> 00:29:54,480
information so for example if I wanted

763
00:29:52,680 --> 00:30:00,360
to see my counters that will be

764
00:29:54,480 --> 00:30:02,550
interface States counters in octet so in

765
00:30:00,360 --> 00:30:04,949
this case that's the ingress octet that

766
00:30:02,550 --> 00:30:05,610
I'm getting per interface and as I run

767
00:30:04,950 --> 00:30:07,470
this query

768
00:30:05,610 --> 00:30:09,360
what I'm seeing is I'm actually getting

769
00:30:07,470 --> 00:30:12,750
so we were seeing the data point here

770
00:30:09,360 --> 00:30:15,090
it's very very it's just coming up but

771
00:30:12,750 --> 00:30:20,430
basically I have one you know series of

772
00:30:15,090 --> 00:30:21,810
counters per interface for device so and

773
00:30:20,430 --> 00:30:24,060
now it's all about how do we actually

774
00:30:21,810 --> 00:30:26,310
query dance so let's explore some of the

775
00:30:24,060 --> 00:30:27,810
things we can do like for example I can

776
00:30:26,310 --> 00:30:29,399
filter and say I don't want all my

777
00:30:27,810 --> 00:30:33,210
device only one of the device that are

778
00:30:29,400 --> 00:30:36,570
called at the tag name device of type

779
00:30:33,210 --> 00:30:39,000
device that has a value of Amarillo and

780
00:30:36,570 --> 00:30:41,250
if I do that now I only have six

781
00:30:39,000 --> 00:30:43,290
interfaces six value which really

782
00:30:41,250 --> 00:30:46,500
represent the six data and getting from

783
00:30:43,290 --> 00:30:48,659
this specific device now what I have

784
00:30:46,500 --> 00:30:51,090
here is technically the absolute

785
00:30:48,660 --> 00:30:52,890
counters of those interfaces it doesn't

786
00:30:51,090 --> 00:30:54,600
really give me the rates of traffic on

787
00:30:52,890 --> 00:30:57,450
those interface you know if you see here

788
00:30:54,600 --> 00:30:59,699
we have sixty million so it's not very

789
00:30:57,450 --> 00:31:03,690
interesting to me what I really want is

790
00:30:59,700 --> 00:31:06,870
I want to have the database to calculate

791
00:31:03,690 --> 00:31:08,850
for me the instance rates over you know

792
00:31:06,870 --> 00:31:11,040
a period of 60 seconds for each of those

793
00:31:08,850 --> 00:31:13,050
interfaces on the fly and those systems

794
00:31:11,040 --> 00:31:15,720
are you know optimized for that so now

795
00:31:13,050 --> 00:31:18,629
and since there is no traffic it's it's

796
00:31:15,720 --> 00:31:19,950
very straight and boring but you know

797
00:31:18,630 --> 00:31:21,420
now I actually have you know some

798
00:31:19,950 --> 00:31:23,730
information and actually have the rates

799
00:31:21,420 --> 00:31:26,610
I can actually do some mass here you

800
00:31:23,730 --> 00:31:28,440
know if I say I don't really want the

801
00:31:26,610 --> 00:31:30,840
octet I want the the bits per second

802
00:31:28,440 --> 00:31:33,300
then I just have to multiply everything

803
00:31:30,840 --> 00:31:35,790
by eight and now I actually have my you

804
00:31:33,300 --> 00:31:39,240
know bytes per seconds per interface

805
00:31:35,790 --> 00:31:40,680
that's just a very simple query now

806
00:31:39,240 --> 00:31:42,870
let's say that I am not so much

807
00:31:40,680 --> 00:31:44,660
interested about every single interface

808
00:31:42,870 --> 00:31:47,219
but at some point I'd like to have a

809
00:31:44,660 --> 00:31:49,080
query that tells me what is the

810
00:31:47,220 --> 00:31:52,260
aggregated throughput for this specific

811
00:31:49,080 --> 00:31:55,530
device so I will be able to say now what

812
00:31:52,260 --> 00:32:00,600
I would like to do is the sum of all

813
00:31:55,530 --> 00:32:01,770
those interfaces group by device and in

814
00:32:00,600 --> 00:32:03,899
this case what I'm getting is I'm

815
00:32:01,770 --> 00:32:05,340
getting one line for my device where

816
00:32:03,900 --> 00:32:06,990
have all the interfaces that have been

817
00:32:05,340 --> 00:32:08,639
aggregated together and you're saying

818
00:32:06,990 --> 00:32:11,190
it's very fast the database are really

819
00:32:08,640 --> 00:32:14,160
optimized you know for us to dynamically

820
00:32:11,190 --> 00:32:16,530
calculate those things on the fly if I

821
00:32:14,160 --> 00:32:19,020
remove the filter here and I say I don't

822
00:32:16,530 --> 00:32:20,580
really want to get that just for this

823
00:32:19,020 --> 00:32:22,800
device I want to that for all my device

824
00:32:20,580 --> 00:32:25,199
and I want to group for all my device

825
00:32:22,800 --> 00:32:26,790
based on the tag device then now I can

826
00:32:25,200 --> 00:32:28,140
execute that and I can see I have

827
00:32:26,790 --> 00:32:30,240
actually one

828
00:32:28,140 --> 00:32:32,190
you know graph per device you have six

829
00:32:30,240 --> 00:32:34,890
devices so that's that's what I'm

830
00:32:32,190 --> 00:32:36,960
getting here so you can see you know

831
00:32:34,890 --> 00:32:39,300
it's uh it's pretty powerful let me just

832
00:32:36,960 --> 00:32:40,650
start up some some traffic a little bit

833
00:32:39,300 --> 00:32:44,480
in the background so hopefully we get

834
00:32:40,650 --> 00:32:50,730
some more interesting systems later on

835
00:32:44,480 --> 00:32:53,460
so I'll just start some of that while we

836
00:32:50,730 --> 00:32:54,950
are exploring those other systems so now

837
00:32:53,460 --> 00:32:58,350
I don't know if you actually notice

838
00:32:54,950 --> 00:33:00,540
noticed that here I'm actually getting

839
00:32:58,350 --> 00:33:02,520
sis interfaces and only two of them's

840
00:33:00,540 --> 00:33:04,260
our data plane there's actually the

841
00:33:02,520 --> 00:33:06,420
loopback interface the management

842
00:33:04,260 --> 00:33:08,400
interface so I actually don't really

843
00:33:06,420 --> 00:33:10,290
wants to aggregate for example those

844
00:33:08,400 --> 00:33:12,630
management interfaces I'm on maybe to

845
00:33:10,290 --> 00:33:15,990
just look at my my data plane interface

846
00:33:12,630 --> 00:33:18,720
so I also have the ability to filter on

847
00:33:15,990 --> 00:33:22,950
that and I say I wants my name that only

848
00:33:18,720 --> 00:33:25,350
start with G for example and then now I

849
00:33:22,950 --> 00:33:28,050
only have two interfaces which are my my

850
00:33:25,350 --> 00:33:29,669
data plane interface so now we're

851
00:33:28,050 --> 00:33:31,980
actually getting into situations where

852
00:33:29,670 --> 00:33:34,980
I'm actually limited on what I can do

853
00:33:31,980 --> 00:33:36,810
here because if I want to only get some

854
00:33:34,980 --> 00:33:38,700
specific interface I have to know their

855
00:33:36,810 --> 00:33:41,159
names I have to know that this specific

856
00:33:38,700 --> 00:33:43,350
interface is an uplink or this one is

857
00:33:41,160 --> 00:33:45,060
connected to a server and you know and

858
00:33:43,350 --> 00:33:47,010
that's like the the physical

859
00:33:45,060 --> 00:33:49,050
implementation of my my system actually

860
00:33:47,010 --> 00:33:51,300
getting to my queries and if I wanted to

861
00:33:49,050 --> 00:33:53,639
do that across multiple vendors that

862
00:33:51,300 --> 00:33:56,700
will start to get pretty complicated so

863
00:33:53,640 --> 00:33:58,650
that's where I you know we really need

864
00:33:56,700 --> 00:34:00,120
this very important that when we insert

865
00:33:58,650 --> 00:34:02,310
all those data into the database works

866
00:34:00,120 --> 00:34:04,590
we insert the right tags like because I

867
00:34:02,310 --> 00:34:06,899
don't have a tags here that tells me

868
00:34:04,590 --> 00:34:08,489
what is the role of my interface I'm not

869
00:34:06,900 --> 00:34:10,230
able to make a query that's they only

870
00:34:08,489 --> 00:34:13,020
give me my interface that are part of my

871
00:34:10,230 --> 00:34:15,300
data plane but hopefully because I have

872
00:34:13,020 --> 00:34:17,668
this flexibility I can actually do that

873
00:34:15,300 --> 00:34:19,919
and that's where Telegraph and it's

874
00:34:17,668 --> 00:34:23,699
flexibility is very interesting is I

875
00:34:19,918 --> 00:34:25,620
actually adjust a flag that I'm gonna

876
00:34:23,699 --> 00:34:27,149
regenerate my configuration for

877
00:34:25,620 --> 00:34:30,509
Telegraph I'll show you the difference

878
00:34:27,149 --> 00:34:32,850
but what I'm doing this time is that

879
00:34:30,510 --> 00:34:34,680
will actually insert

880
00:34:32,850 --> 00:34:37,889
some specific rules for each device that

881
00:34:34,679 --> 00:34:40,100
say if it's interface one I know this

882
00:34:37,889 --> 00:34:42,359
one is a roll-up link so actually

883
00:34:40,100 --> 00:34:45,389
automatically insert a specific tag for

884
00:34:42,360 --> 00:34:48,360
this device if this interface is you

885
00:34:45,389 --> 00:34:50,429
know interface - I know so that's we

886
00:34:48,360 --> 00:34:53,940
have here for example on this specific

887
00:34:50,429 --> 00:34:56,040
device used on I know that Enterprise 3

888
00:34:53,940 --> 00:34:59,190
is actually facing your server so I'm

889
00:34:56,040 --> 00:35:01,590
going to insert a specific tag on every

890
00:34:59,190 --> 00:35:04,380
single information associated in this

891
00:35:01,590 --> 00:35:05,270
interface and I will get populated into

892
00:35:04,380 --> 00:35:07,890
my database

893
00:35:05,270 --> 00:35:10,020
I'm also inserting here the information

894
00:35:07,890 --> 00:35:12,960
about the neighbors so I'm able to do

895
00:35:10,020 --> 00:35:15,210
that because in this specific system I

896
00:35:12,960 --> 00:35:17,370
actually already classified everything

897
00:35:15,210 --> 00:35:19,350
that's actually what I used to generate

898
00:35:17,370 --> 00:35:20,910
all those configuration I use in Siebel

899
00:35:19,350 --> 00:35:25,230
so I have everything that is classified

900
00:35:20,910 --> 00:35:26,490
in enamel and I can reuse the same

901
00:35:25,230 --> 00:35:29,360
information I used to configure my

902
00:35:26,490 --> 00:35:31,560
device to generate very specific

903
00:35:29,360 --> 00:35:33,600
configuration for Telegraph and make

904
00:35:31,560 --> 00:35:36,029
sure that inserts all the right tags all

905
00:35:33,600 --> 00:35:37,710
the right informations before I actually

906
00:35:36,030 --> 00:35:40,110
send everything into the database and

907
00:35:37,710 --> 00:35:41,910
because I have those new tags that will

908
00:35:40,110 --> 00:35:43,980
be able to you know to make some more

909
00:35:41,910 --> 00:35:46,410
interesting queries and and really focus

910
00:35:43,980 --> 00:35:50,270
on on the role of those components and

911
00:35:46,410 --> 00:35:59,160
not so much about their names themselves

912
00:35:50,270 --> 00:36:03,090
so now where are we my six collectors

913
00:35:59,160 --> 00:36:04,319
have been restarted and automatically

914
00:36:03,090 --> 00:36:08,670
this should have been picked up so now

915
00:36:04,320 --> 00:36:12,780
if I actually reacts acute my query it's

916
00:36:08,670 --> 00:36:15,180
not yet coming up what I'm seeing here

917
00:36:12,780 --> 00:36:17,850
is now you know where I used to have two

918
00:36:15,180 --> 00:36:19,529
results now I have four and it's

919
00:36:17,850 --> 00:36:20,940
actually considering them as different

920
00:36:19,530 --> 00:36:23,310
because every time we have a different

921
00:36:20,940 --> 00:36:24,840
set of tags it's considering them as a

922
00:36:23,310 --> 00:36:26,279
different search that how it works so

923
00:36:24,840 --> 00:36:29,010
but now what we're saying is the new one

924
00:36:26,280 --> 00:36:31,260
they have this interface role tags that

925
00:36:29,010 --> 00:36:32,850
here is defined as leave they have this

926
00:36:31,260 --> 00:36:34,640
neighbour tags that actually keep track

927
00:36:32,850 --> 00:36:37,080
of what is the name of my neighbors and

928
00:36:34,640 --> 00:36:39,180
because I have all of that inter

929
00:36:37,080 --> 00:36:41,549
database now I can use that as part of

930
00:36:39,180 --> 00:36:43,799
my query so instead of saying I want to

931
00:36:41,550 --> 00:36:45,130
see only my interfaces that have a

932
00:36:43,800 --> 00:36:48,130
specific name I'm going

933
00:36:45,130 --> 00:36:50,619
say I want to see only a specific

934
00:36:48,130 --> 00:36:55,119
interface that have a role that is

935
00:36:50,619 --> 00:36:57,819
called leaf and now I'm just getting

936
00:36:55,119 --> 00:36:59,559
that and since this role is applicable

937
00:36:57,819 --> 00:37:01,269
across multiple of my system in

938
00:36:59,559 --> 00:37:03,910
respectively of which vendor I'm using I

939
00:37:01,269 --> 00:37:06,700
can actually do that across you know all

940
00:37:03,910 --> 00:37:09,098
of my device so now if I do that I

941
00:37:06,700 --> 00:37:11,470
actually get all the interfaces on my

942
00:37:09,099 --> 00:37:16,750
spine that are facing my leaves for all

943
00:37:11,470 --> 00:37:18,609
of my my my spines and if I actually go

944
00:37:16,750 --> 00:37:24,519
back to my query earlier and I see now I

945
00:37:18,609 --> 00:37:26,950
want to do this um by device but just

946
00:37:24,519 --> 00:37:29,618
for the interface that are specific role

947
00:37:26,950 --> 00:37:31,720
for each of those device then I will be

948
00:37:29,619 --> 00:37:34,240
able to have an aggregated value of my

949
00:37:31,720 --> 00:37:36,430
scruples per device only for the data

950
00:37:34,240 --> 00:37:38,019
plane interface on my spine

951
00:37:36,430 --> 00:37:40,000
so I hope you really understand how

952
00:37:38,019 --> 00:37:41,799
important it is to have the right tags

953
00:37:40,000 --> 00:37:43,990
in the right labels in those places

954
00:37:41,799 --> 00:37:46,000
because one mistakes I was doing when I

955
00:37:43,990 --> 00:37:47,649
was at juniper is we're all focusing

956
00:37:46,000 --> 00:37:49,240
about getting the data as fast as we can

957
00:37:47,650 --> 00:37:51,309
into the database and we didn't really

958
00:37:49,240 --> 00:37:53,649
focus about that part like it was just

959
00:37:51,309 --> 00:37:55,599
about minimum number of tags that we

960
00:37:53,650 --> 00:37:57,309
call set but honestly I think that was a

961
00:37:55,599 --> 00:37:59,680
mistake because if you don't have those

962
00:37:57,309 --> 00:38:01,480
specific tags you will be very limited

963
00:37:59,680 --> 00:38:04,598
on what you can do now that I have that

964
00:38:01,480 --> 00:38:05,829
I can you know and I'll try to show you

965
00:38:04,599 --> 00:38:10,029
I can do some some very interesting

966
00:38:05,829 --> 00:38:11,349
query so now we're going to move on I

967
00:38:10,029 --> 00:38:13,630
mean this interface is more

968
00:38:11,349 --> 00:38:15,400
troubleshooting exploring the data have

969
00:38:13,630 --> 00:38:17,200
some information most people really

970
00:38:15,400 --> 00:38:19,480
don't use that you know when we want to

971
00:38:17,200 --> 00:38:20,890
visualize the data will usually go with

972
00:38:19,480 --> 00:38:22,930
more of a dedicated solutions like

973
00:38:20,890 --> 00:38:25,359
Ravana so now we're going to move on and

974
00:38:22,930 --> 00:38:29,078
explore that part of the of the

975
00:38:25,359 --> 00:38:33,308
presentation again if you have any

976
00:38:29,079 --> 00:38:36,059
questions please feel free to go to the

977
00:38:33,309 --> 00:38:36,059
mic and ask them

978
00:38:37,560 --> 00:38:42,240
so here again I have just prepared you

979
00:38:40,410 --> 00:38:45,660
know the command I will go vis the very

980
00:38:42,240 --> 00:38:50,850
basic of installing Ravana just

981
00:38:45,660 --> 00:38:54,540
downloading Debian package installing it

982
00:38:50,850 --> 00:38:56,520
I will also install a specific panel and

983
00:38:54,540 --> 00:38:58,140
I will go back to that earlier later and

984
00:38:56,520 --> 00:39:01,140
explain but basically I'm installing a

985
00:38:58,140 --> 00:39:04,400
panels called discrete we'll explore

986
00:39:01,140 --> 00:39:09,299
that and then now I'm just starting

987
00:39:04,400 --> 00:39:14,820
graph Anna so with that I have a graph

988
00:39:09,300 --> 00:39:17,130
on a server running on my jump host and

989
00:39:14,820 --> 00:39:18,680
usually Griffin has torn on port 3000 by

990
00:39:17,130 --> 00:39:21,480
default unless you specify otherwise

991
00:39:18,680 --> 00:39:24,270
first time you connect its admin admin

992
00:39:21,480 --> 00:39:31,590
and you need to specify it your own

993
00:39:24,270 --> 00:39:34,770
password and then now I have you know

994
00:39:31,590 --> 00:39:38,810
functioning graph on a server the first

995
00:39:34,770 --> 00:39:38,810
step is to define the data source

996
00:39:41,369 --> 00:39:46,039
so Griffin out of the box works with

997
00:39:43,380 --> 00:39:49,319
many many different type of databases

998
00:39:46,039 --> 00:39:51,180
the one we're using here is Prometheus

999
00:39:49,319 --> 00:39:52,829
so if you select Prometheus we need to

1000
00:39:51,180 --> 00:39:55,379
provide some informations about where's

1001
00:39:52,829 --> 00:39:57,119
the server and in this case the server

1002
00:39:55,380 --> 00:39:59,069
is on the same host in exposing every

1003
00:39:57,119 --> 00:40:00,989
single port 99s which the default

1004
00:39:59,069 --> 00:40:03,359
configuration i didn't provide any

1005
00:40:00,989 --> 00:40:05,309
authentication so we'll just save that

1006
00:40:03,359 --> 00:40:06,598
and it's selling me everything is

1007
00:40:05,309 --> 00:40:08,719
working in actually tested the

1008
00:40:06,599 --> 00:40:11,940
connectivity so now I have a data source

1009
00:40:08,719 --> 00:40:13,619
configured once I have that I can really

1010
00:40:11,940 --> 00:40:15,809
move on into building a dashboard so

1011
00:40:13,619 --> 00:40:18,630
going into this plus sign I can start

1012
00:40:15,809 --> 00:40:20,130
creating a dashboard so dashboard in

1013
00:40:18,630 --> 00:40:23,999
graph Anna is really a collection of

1014
00:40:20,130 --> 00:40:25,739
graph that are called panel and so we

1015
00:40:23,999 --> 00:40:27,299
can start we know rebuild the one we

1016
00:40:25,739 --> 00:40:28,859
were building earlier it's very similar

1017
00:40:27,299 --> 00:40:30,450
technically to the interface we had

1018
00:40:28,859 --> 00:40:33,269
earlier it's just we have more

1019
00:40:30,450 --> 00:40:38,089
flexibility to make it looks nice so I

1020
00:40:33,269 --> 00:40:43,379
can now you know again call my interface

1021
00:40:38,089 --> 00:40:49,940
state counter octet for example and I

1022
00:40:43,380 --> 00:40:55,319
can say I only want the one they have of

1023
00:40:49,940 --> 00:40:57,029
roll leaf and I want to calculate the

1024
00:40:55,319 --> 00:41:04,729
rate on that because I'm not so much

1025
00:40:57,029 --> 00:41:07,829
interested about but the absolute value

1026
00:41:04,729 --> 00:41:11,189
and again if I do that you automatically

1027
00:41:07,829 --> 00:41:16,380
show me all of my counters in my rate

1028
00:41:11,190 --> 00:41:20,160
for my interfaces of a specific specific

1029
00:41:16,380 --> 00:41:21,420
role now where Griffin and provide more

1030
00:41:20,160 --> 00:41:24,149
is you know we can actually tweak like

1031
00:41:21,420 --> 00:41:25,759
for say the legend like here what I

1032
00:41:24,150 --> 00:41:27,719
really want to see is just the

1033
00:41:25,759 --> 00:41:31,380
information about what is the name of

1034
00:41:27,719 --> 00:41:33,420
the device and one is the name of the

1035
00:41:31,380 --> 00:41:36,089
interface which is associative the label

1036
00:41:33,420 --> 00:41:38,160
called name here if i do that now i can

1037
00:41:36,089 --> 00:41:40,558
see that i'm building a legend that you

1038
00:41:38,160 --> 00:41:46,950
know start to make more sense to me i

1039
00:41:40,559 --> 00:41:50,910
can also define for example the dimetric

1040
00:41:46,950 --> 00:41:53,450
here so on the axes what I can say is

1041
00:41:50,910 --> 00:41:56,569
here I'm actually visualizing

1042
00:41:53,450 --> 00:41:59,270
bits per seconds so I have some specific

1043
00:41:56,570 --> 00:42:02,480
information I can define that my legend

1044
00:41:59,270 --> 00:42:04,940
I want actually to be as a table on the

1045
00:42:02,480 --> 00:42:09,110
right with some data for example by the

1046
00:42:04,940 --> 00:42:11,300
the current the current data so you know

1047
00:42:09,110 --> 00:42:13,310
now I actually start to have something

1048
00:42:11,300 --> 00:42:20,780
that that speak to me and I can say you

1049
00:42:13,310 --> 00:42:23,360
know its interface traffic blinks so

1050
00:42:20,780 --> 00:42:26,800
that's one graph I can move it around

1051
00:42:23,360 --> 00:42:30,140
and we have the ability to select the

1052
00:42:26,800 --> 00:42:32,690
how many how much data we won't see how

1053
00:42:30,140 --> 00:42:34,430
often we want to you know refresh those

1054
00:42:32,690 --> 00:42:37,180
data so that's things like refine our

1055
00:42:34,430 --> 00:42:41,390
provider out of the box

1056
00:42:37,180 --> 00:42:43,549
so now let's explore this author plugin

1057
00:42:41,390 --> 00:42:47,299
I install let's say I want to start

1058
00:42:43,550 --> 00:42:51,410
monitoring the state of my BGP session

1059
00:42:47,300 --> 00:42:54,050
so the state of BGP session doesn't fit

1060
00:42:51,410 --> 00:42:55,520
as a graph as as a line so in this case

1061
00:42:54,050 --> 00:42:57,050
that's why it's called is a describe

1062
00:42:55,520 --> 00:42:58,370
plug in the screed plug-in that

1063
00:42:57,050 --> 00:43:01,270
personally I found very interesting to

1064
00:42:58,370 --> 00:43:03,770
to save that so the way it works is I

1065
00:43:01,270 --> 00:43:07,430
still have to do a query and in this

1066
00:43:03,770 --> 00:43:09,259
case my query will be you know I have

1067
00:43:07,430 --> 00:43:14,149
those information about the states of my

1068
00:43:09,260 --> 00:43:20,990
system that are saved as BGP neighbor

1069
00:43:14,150 --> 00:43:22,760
session states and if I query that I can

1070
00:43:20,990 --> 00:43:24,919
see here actually have a bunch of one

1071
00:43:22,760 --> 00:43:26,240
and two which represent if you remember

1072
00:43:24,920 --> 00:43:29,060
the actual state like one minute

1073
00:43:26,240 --> 00:43:31,279
stablish and all that so here what I'm

1074
00:43:29,060 --> 00:43:34,640
gonna do first gonna produce a little

1075
00:43:31,280 --> 00:43:36,860
bit the size of those lines we'll get

1076
00:43:34,640 --> 00:43:38,839
more of them and then this plug-in

1077
00:43:36,860 --> 00:43:44,810
actually let me do the mapping reverse

1078
00:43:38,840 --> 00:43:49,870
so here I can say now the value one

1079
00:43:44,810 --> 00:43:52,870
actually mean established the value two

1080
00:43:49,870 --> 00:43:52,870
was

1081
00:43:52,900 --> 00:44:05,829
what was devoted to active value three

1082
00:43:57,420 --> 00:44:08,049
mean connects and four is idle so I'm

1083
00:44:05,829 --> 00:44:11,140
doing the mapping reverse and I will be

1084
00:44:08,049 --> 00:44:15,700
able also to do a mapping based on on

1085
00:44:11,140 --> 00:44:17,730
the color so your established will be no

1086
00:44:15,700 --> 00:44:26,308
green

1087
00:44:17,730 --> 00:44:26,309
I'll have connects active

1088
00:44:29,520 --> 00:44:37,220
an idol let's say Idol is it's gonna be

1089
00:44:33,470 --> 00:44:41,450
blue and active is gonna be orange

1090
00:44:37,220 --> 00:44:45,589
that's it connect it's gonna be you know

1091
00:44:41,450 --> 00:44:47,970
darker orange so now I can actually

1092
00:44:45,590 --> 00:44:56,640
visualize this information I can give it

1093
00:44:47,970 --> 00:44:58,470
name for example and I can also assign a

1094
00:44:56,640 --> 00:45:03,600
legend here which will be in this case

1095
00:44:58,470 --> 00:45:10,100
what is the name of my device and I

1096
00:45:03,600 --> 00:45:10,100
believe here it's pure IP

1097
00:45:13,640 --> 00:45:18,519
stroke metrics name that is not Jerry

1098
00:45:16,249 --> 00:45:18,519
Payne

1099
00:45:21,839 --> 00:45:24,769
that is

1100
00:45:30,910 --> 00:45:34,629
actually I can get it here

1101
00:45:41,300 --> 00:45:49,720
the GP neighbor neighbor address that's

1102
00:45:47,090 --> 00:45:49,720
what I was looking for

1103
00:45:52,369 --> 00:45:55,489
so now because I have that I can

1104
00:45:54,019 --> 00:45:57,890
actually see exactly which piece

1105
00:45:55,489 --> 00:46:00,079
appreciation we're looking at and I will

1106
00:45:57,890 --> 00:46:01,339
be able you know to visualize all of

1107
00:46:00,079 --> 00:46:03,950
those for right now all of them are

1108
00:46:01,339 --> 00:46:06,558
established so it's just shut one down

1109
00:46:03,950 --> 00:46:09,140
so that we have something a little bit

1110
00:46:06,559 --> 00:46:12,469
more interesting so I'm going to go to

1111
00:46:09,140 --> 00:46:15,430
one of my device is actually one of my

1112
00:46:12,469 --> 00:46:15,430
leaf

1113
00:46:17,109 --> 00:46:20,109
neighbor

1114
00:46:23,210 --> 00:46:31,599
so we have all of them here and I'm just

1115
00:46:26,710 --> 00:46:31,599
going to shut down one of the interface

1116
00:46:36,869 --> 00:46:39,900
so that this you know one of the

1117
00:46:38,309 --> 00:46:42,029
interface will go down we'll be able to

1118
00:46:39,900 --> 00:46:45,269
follow the states and to bgp sessions

1119
00:46:42,029 --> 00:46:46,529
will go down as well so you can see you

1120
00:46:45,269 --> 00:46:50,218
know we're starting to build those

1121
00:46:46,529 --> 00:46:51,839
dashboards so now you know we can have a

1122
00:46:50,219 --> 00:46:54,539
lot of information on the dashboard one

1123
00:46:51,839 --> 00:46:56,670
thing that I usually do is I have two

1124
00:46:54,539 --> 00:46:58,049
dashboards when they will have a global

1125
00:46:56,670 --> 00:47:00,390
view of the network that will provide

1126
00:46:58,049 --> 00:47:03,319
some aggregated value between multiple

1127
00:47:00,390 --> 00:47:06,690
device and but what's usually also

1128
00:47:03,319 --> 00:47:09,900
stolen art is will have a dashboard spur

1129
00:47:06,690 --> 00:47:12,749
device and so the way it will work so

1130
00:47:09,900 --> 00:47:17,900
let's see here we have you know 10,000

1131
00:47:12,749 --> 00:47:22,259
feet view dashboard and we'll also have

1132
00:47:17,900 --> 00:47:31,469
one per device so I'm gonna clone this

1133
00:47:22,259 --> 00:47:32,700
one and I will call it device now since

1134
00:47:31,469 --> 00:47:34,109
I want that per device and I don't

1135
00:47:32,700 --> 00:47:36,538
really want to create a dashboard for

1136
00:47:34,109 --> 00:47:38,519
each of my device what I'm gonna do is

1137
00:47:36,539 --> 00:47:40,769
I'm going to create a variable that will

1138
00:47:38,519 --> 00:47:44,249
dynamically let me choose which device

1139
00:47:40,769 --> 00:47:46,950
I want to visualize so here I create a

1140
00:47:44,249 --> 00:47:51,899
viable I give it a name and I say I want

1141
00:47:46,950 --> 00:47:57,598
to dynamically query the value of a

1142
00:47:51,900 --> 00:47:59,549
specific label from and I give it the

1143
00:47:57,599 --> 00:48:03,029
name of specific measurement and I say

1144
00:47:59,549 --> 00:48:05,549
for all the tags that are value device

1145
00:48:03,029 --> 00:48:09,410
so here trim you preview like that's the

1146
00:48:05,549 --> 00:48:11,640
six five device they have right now I

1147
00:48:09,410 --> 00:48:16,140
think one of them is not properly

1148
00:48:11,640 --> 00:48:18,269
reporting those dos session and and so

1149
00:48:16,140 --> 00:48:19,499
now I have actually you know I will be

1150
00:48:18,269 --> 00:48:21,779
able to choose and I have a variable

1151
00:48:19,499 --> 00:48:23,038
that can dynamically take the name of

1152
00:48:21,779 --> 00:48:26,039
you know another device

1153
00:48:23,039 --> 00:48:27,479
so first what you're seeing here you're

1154
00:48:26,039 --> 00:48:30,539
actually seeing you know those bgp

1155
00:48:27,479 --> 00:48:33,479
session that went from idle to active

1156
00:48:30,539 --> 00:48:36,420
for example on on on the spine side

1157
00:48:33,479 --> 00:48:38,549
where the device the interface is now

1158
00:48:36,420 --> 00:48:41,190
down so you know we had this rotation on

1159
00:48:38,549 --> 00:48:42,809
the other side we actually devise a

1160
00:48:41,190 --> 00:48:45,210
since the interface is down the BG

1161
00:48:42,809 --> 00:48:47,609
position is just in that i don't know so

1162
00:48:45,210 --> 00:48:49,890
now if I just wanted to represent for

1163
00:48:47,609 --> 00:48:50,830
some device I will have to update my

1164
00:48:49,890 --> 00:48:54,540
query

1165
00:48:50,830 --> 00:48:56,799
we'll see here I only want to see the

1166
00:48:54,540 --> 00:49:00,400
information for a device that actually

1167
00:48:56,800 --> 00:49:01,480
map with my variable here so if I do

1168
00:49:00,400 --> 00:49:04,930
that automatically

1169
00:49:01,480 --> 00:49:06,820
since my variable is defined here I can

1170
00:49:04,930 --> 00:49:10,210
do that and I will be able to switch you

1171
00:49:06,820 --> 00:49:11,950
know between my my specific devices and

1172
00:49:10,210 --> 00:49:13,990
in this case it's I'm just looking at

1173
00:49:11,950 --> 00:49:15,580
one device every time I don't really

1174
00:49:13,990 --> 00:49:18,700
need to put the name of the device but

1175
00:49:15,580 --> 00:49:21,850
just the name of the object here and

1176
00:49:18,700 --> 00:49:25,919
then I will do the same for my

1177
00:49:21,850 --> 00:49:32,279
interfaces here actually just looking at

1178
00:49:25,920 --> 00:49:32,280
the device that are matching my specific

1179
00:49:36,109 --> 00:49:41,779
specific device in here if you look at

1180
00:49:39,920 --> 00:49:46,459
that I actually see you know have some

1181
00:49:41,779 --> 00:49:48,019
specific information define so now I

1182
00:49:46,459 --> 00:49:49,489
have a dashboard that is dedicated per

1183
00:49:48,019 --> 00:49:51,488
device and I can start you know having

1184
00:49:49,489 --> 00:49:54,459
some some specific information on that

1185
00:49:51,489 --> 00:50:01,999
any questions so far I'm actually

1186
00:49:54,459 --> 00:50:04,939
surprised hi

1187
00:50:01,999 --> 00:50:06,468
Reynaldo cheese from Oracle can you

1188
00:50:04,939 --> 00:50:09,649
elaborate a little bit more how you

1189
00:50:06,469 --> 00:50:14,959
collect the metrics from the devices and

1190
00:50:09,650 --> 00:50:16,910
you scrape from tomatillos yes so in

1191
00:50:14,959 --> 00:50:19,910
this specific case I'm using Telegraph

1192
00:50:16,910 --> 00:50:23,239
so I have one Telegraph process running

1193
00:50:19,910 --> 00:50:24,949
per device and I have an example of

1194
00:50:23,239 --> 00:50:28,849
configuration here and that's where for

1195
00:50:24,949 --> 00:50:31,640
each device I provided how to connect

1196
00:50:28,849 --> 00:50:34,249
and what to collect using the path so

1197
00:50:31,640 --> 00:50:39,019
the pass is something specific to Gina

1198
00:50:34,249 --> 00:50:41,029
my so telegraph opener gmj RPC sessions

1199
00:50:39,019 --> 00:50:42,709
to the device and when you open decision

1200
00:50:41,029 --> 00:50:44,539
say I would like to receive the

1201
00:50:42,709 --> 00:50:47,779
interface stats and I would like to

1202
00:50:44,539 --> 00:50:49,519
receive the BGP session stats and so

1203
00:50:47,779 --> 00:50:51,679
telegraph get those information and

1204
00:50:49,519 --> 00:50:53,839
since I defined telegraph and I say I

1205
00:50:51,679 --> 00:50:56,029
want you to expose everything in the

1206
00:50:53,839 --> 00:50:59,269
Prometheus format on a specific port

1207
00:50:56,029 --> 00:51:01,009
then I get that something like that for

1208
00:50:59,269 --> 00:51:03,488
each of my device so each of my device

1209
00:51:01,009 --> 00:51:06,259
actually expose those information and

1210
00:51:03,489 --> 00:51:08,689
here I have you know one ports per

1211
00:51:06,259 --> 00:51:10,429
device so nine thousand two is one nine

1212
00:51:08,689 --> 00:51:12,558
thousand one is another one and that's

1213
00:51:10,429 --> 00:51:16,400
how I get all my information from my

1214
00:51:12,559 --> 00:51:19,549
device on the primitive side I created

1215
00:51:16,400 --> 00:51:21,619
the configuration to match those so here

1216
00:51:19,549 --> 00:51:24,920
I actually you can see that Prometheus

1217
00:51:21,619 --> 00:51:26,599
is actually scraping every 30 seconds

1218
00:51:24,920 --> 00:51:29,029
all of those in point and I was showing

1219
00:51:26,599 --> 00:51:31,219
you and the format is actually you know

1220
00:51:29,029 --> 00:51:34,369
an agreement between the Prometheus

1221
00:51:31,219 --> 00:51:36,829
client and the server that as long as I

1222
00:51:34,369 --> 00:51:39,380
expose the data in a format that match

1223
00:51:36,829 --> 00:51:41,420
primitive specification then the

1224
00:51:39,380 --> 00:51:43,549
Prometheus server will be able to scrape

1225
00:51:41,420 --> 00:51:45,679
that and every service they can see will

1226
00:51:43,549 --> 00:51:46,580
go and they will get all of those

1227
00:51:45,679 --> 00:51:51,920
information

1228
00:51:46,580 --> 00:51:51,920
does that answer your question perfect

1229
00:51:52,160 --> 00:52:07,950
so let's start a little bit more traffic

1230
00:51:56,850 --> 00:52:09,480
maybe so now there's actually some very

1231
00:52:07,950 --> 00:52:11,460
interesting we can do online like we've

1232
00:52:09,480 --> 00:52:15,510
just been scratching the surface here

1233
00:52:11,460 --> 00:52:18,330
like for example since I have all of

1234
00:52:15,510 --> 00:52:19,890
those data and all of those capability

1235
00:52:18,330 --> 00:52:22,950
into database that starts to explore for

1236
00:52:19,890 --> 00:52:30,900
example what else we can do so let's say

1237
00:52:22,950 --> 00:52:34,710
that now I'm not so interested about so

1238
00:52:30,900 --> 00:52:39,660
let's say we're looking at at the leaf

1239
00:52:34,710 --> 00:52:41,430
so that will be done as for example and

1240
00:52:39,660 --> 00:52:49,170
let's say that here we're actually

1241
00:52:41,430 --> 00:52:50,580
looking at either uplink or leaf so what

1242
00:52:49,170 --> 00:52:52,830
we can see here is there's three you

1243
00:52:50,580 --> 00:52:55,080
know not a really good load balancing my

1244
00:52:52,830 --> 00:52:57,180
AC NP is not working very well now if I

1245
00:52:55,080 --> 00:52:58,680
look at it I can see it now what's

1246
00:52:57,180 --> 00:53:00,660
interesting with the system is that it

1247
00:52:58,680 --> 00:53:02,879
they have a lot of functions and math

1248
00:53:00,660 --> 00:53:07,649
and all of that they'll actually let me

1249
00:53:02,880 --> 00:53:09,720
define and provide you know metrics or

1250
00:53:07,650 --> 00:53:12,420
signals that will be able to alert some

1251
00:53:09,720 --> 00:53:14,609
so for example there is a functions here

1252
00:53:12,420 --> 00:53:21,000
that will let me automatically calculate

1253
00:53:14,610 --> 00:53:24,570
what is the difference of rates between

1254
00:53:21,000 --> 00:53:25,830
my interface which will be if I say I

1255
00:53:24,570 --> 00:53:28,800
want to calculate the standard

1256
00:53:25,830 --> 00:53:32,850
deviations between a set of you know

1257
00:53:28,800 --> 00:53:35,160
graph I will get one line as a as a

1258
00:53:32,850 --> 00:53:38,370
response that actually indicates and

1259
00:53:35,160 --> 00:53:40,620
expectations that if my if my ICMP is

1260
00:53:38,370 --> 00:53:42,299
working perfectly the deviation between

1261
00:53:40,620 --> 00:53:43,740
all of those should be zero because they

1262
00:53:42,300 --> 00:53:46,590
will have exactly the same traffic on

1263
00:53:43,740 --> 00:53:48,870
all of them but now I can see here for

1264
00:53:46,590 --> 00:53:51,270
example that my ICMP is not working and

1265
00:53:48,870 --> 00:53:53,660
so I have a deviations between my four

1266
00:53:51,270 --> 00:53:56,759
uplinks there's actually pretty bad and

1267
00:53:53,660 --> 00:53:58,520
so I will be able for example using

1268
00:53:56,760 --> 00:54:04,640
graph on ax or using

1269
00:53:58,520 --> 00:54:09,680
Prometheus itself - to set up let's say

1270
00:54:04,640 --> 00:54:13,368
an alert so if I wanted to say now

1271
00:54:09,680 --> 00:54:15,290
actually want to set us ritual as 1000

1272
00:54:13,369 --> 00:54:17,690
so I know based on my previous

1273
00:54:15,290 --> 00:54:20,058
experience that if my standard

1274
00:54:17,690 --> 00:54:23,089
deviations between all of my link and a

1275
00:54:20,059 --> 00:54:24,920
specific spine mean that I go over

1276
00:54:23,089 --> 00:54:26,540
specific thresholds either it mean I

1277
00:54:24,920 --> 00:54:29,180
have some very balanced traffic and

1278
00:54:26,540 --> 00:54:30,890
maybe my system is not working properly

1279
00:54:29,180 --> 00:54:31,848
or maybe I need to remediate or maybe

1280
00:54:30,890 --> 00:54:34,848
there's something else like maybe

1281
00:54:31,849 --> 00:54:36,230
there's actually some specific errors

1282
00:54:34,849 --> 00:54:38,420
and my interfaces that are dropping

1283
00:54:36,230 --> 00:54:40,040
packets on one of the on one of the

1284
00:54:38,420 --> 00:54:42,260
paths though there's many multiple

1285
00:54:40,040 --> 00:54:44,839
reasons but having that will be able to

1286
00:54:42,260 --> 00:54:48,020
actually you know provide some some very

1287
00:54:44,839 --> 00:54:50,808
you know specific and actionable metrics

1288
00:54:48,020 --> 00:54:59,000
so that's just one example another

1289
00:54:50,809 --> 00:55:02,300
example that I like to explore is if we

1290
00:54:59,000 --> 00:55:05,589
go back to the global one let's say that

1291
00:55:02,300 --> 00:55:07,970
now I would like to see for example if

1292
00:55:05,589 --> 00:55:10,578
one of my devices actually dropping

1293
00:55:07,970 --> 00:55:11,930
traffic one of my spine so in this

1294
00:55:10,579 --> 00:55:16,339
specific case I have all the information

1295
00:55:11,930 --> 00:55:18,200
so that my my spines and because I have

1296
00:55:16,339 --> 00:55:20,990
all of that I can say I would like to

1297
00:55:18,200 --> 00:55:27,589
configure the aggregated value for each

1298
00:55:20,990 --> 00:55:29,359
of my spines by device so here I see you

1299
00:55:27,589 --> 00:55:31,400
know the aggregated value of ingress

1300
00:55:29,359 --> 00:55:34,970
traffic for only the data plane

1301
00:55:31,400 --> 00:55:41,299
interfaces for each of them and I would

1302
00:55:34,970 --> 00:55:44,750
like to subtract the same value of what

1303
00:55:41,299 --> 00:55:47,299
I'm getting for incoming for egress

1304
00:55:44,750 --> 00:55:50,960
traffic and so basically the idea is

1305
00:55:47,299 --> 00:55:52,670
that everything that is not zero mean

1306
00:55:50,960 --> 00:55:54,500
that I have more traffic that is

1307
00:55:52,670 --> 00:55:56,569
incoming my device then what I have that

1308
00:55:54,500 --> 00:55:58,069
is actually leaving my device so as a

1309
00:55:56,569 --> 00:56:00,680
spine that's actually a signal that

1310
00:55:58,069 --> 00:56:02,779
something is going wrong so most of the

1311
00:56:00,680 --> 00:56:04,460
case you could expect to have some error

1312
00:56:02,780 --> 00:56:06,770
counters that were going on that week

1313
00:56:04,460 --> 00:56:08,660
also show here but you know in some

1314
00:56:06,770 --> 00:56:10,910
cases if you have a big chassis that

1315
00:56:08,660 --> 00:56:12,259
could actually have some drop inside the

1316
00:56:10,910 --> 00:56:14,029
line car some PFE

1317
00:56:12,260 --> 00:56:16,250
and a lot of other places that you might

1318
00:56:14,030 --> 00:56:17,960
not be able to see you know have with

1319
00:56:16,250 --> 00:56:20,450
the specific counters than being able to

1320
00:56:17,960 --> 00:56:23,030
dynamically measure everything's coming

1321
00:56:20,450 --> 00:56:24,080
in everything's going out on some device

1322
00:56:23,030 --> 00:56:26,840
on your network you will be you know

1323
00:56:24,080 --> 00:56:29,330
very quickly able to identify and I can

1324
00:56:26,840 --> 00:56:32,380
say here that in this case this specific

1325
00:56:29,330 --> 00:56:34,609
device Amarillo is dropping some traffic

1326
00:56:32,380 --> 00:56:36,109
where it was not dropping anything

1327
00:56:34,609 --> 00:56:38,450
before you know and again that's

1328
00:56:36,109 --> 00:56:41,509
something I can you know now visualize

1329
00:56:38,450 --> 00:56:44,810
generates and alerts understand and if I

1330
00:56:41,510 --> 00:56:46,400
look at my device my my 10,000 feet view

1331
00:56:44,810 --> 00:56:49,070
I can actually see that and I can drill

1332
00:56:46,400 --> 00:56:51,200
down and and go back on on one specific

1333
00:56:49,070 --> 00:56:53,150
device and start investigating and

1334
00:56:51,200 --> 00:56:57,259
getting faster to my my root cause

1335
00:56:53,150 --> 00:57:01,460
analysis so we're almost at the end of

1336
00:56:57,260 --> 00:57:05,119
the session is there any questions and I

1337
00:57:01,460 --> 00:57:06,890
hope you know we were able to cover all

1338
00:57:05,119 --> 00:57:07,970
the objectivity of the sessions now you

1339
00:57:06,890 --> 00:57:09,740
have a better understanding you know

1340
00:57:07,970 --> 00:57:12,680
what are those times to database how to

1341
00:57:09,740 --> 00:57:15,020
set up you know some collection with

1342
00:57:12,680 --> 00:57:17,240
Telegraph how to do the interaction

1343
00:57:15,020 --> 00:57:19,250
between the collector and the database

1344
00:57:17,240 --> 00:57:20,569
and the database and graph fauna and you

1345
00:57:19,250 --> 00:57:22,310
have you know some of the basic

1346
00:57:20,570 --> 00:57:23,960
understanding of how you can use Griffon

1347
00:57:22,310 --> 00:57:26,960
a to start building some dashboards to

1348
00:57:23,960 --> 00:57:29,030
give you your some insight and again I

1349
00:57:26,960 --> 00:57:31,250
think if there's one takeaway is that

1350
00:57:29,030 --> 00:57:33,830
what's super important is to have the

1351
00:57:31,250 --> 00:57:35,090
right labels on your data and if you

1352
00:57:33,830 --> 00:57:36,770
don't have the right labels when you

1353
00:57:35,090 --> 00:57:39,770
insert them in the database you won't be

1354
00:57:36,770 --> 00:57:41,570
able to do as many interesting query so

1355
00:57:39,770 --> 00:57:43,820
it's very important because those labels

1356
00:57:41,570 --> 00:57:45,619
really are reflections in some way of

1357
00:57:43,820 --> 00:57:47,660
your network design so as a network

1358
00:57:45,619 --> 00:57:49,490
engineer it's really important that you

1359
00:57:47,660 --> 00:57:51,410
get into these conversations with the

1360
00:57:49,490 --> 00:57:53,540
people setting up the pipeline to ensure

1361
00:57:51,410 --> 00:57:55,730
that they have a way to get those

1362
00:57:53,540 --> 00:57:57,380
information to insert them and to work

1363
00:57:55,730 --> 00:57:59,270
with them to make sure that because for

1364
00:57:57,380 --> 00:58:01,160
them otherwise it's just going to give

1365
00:57:59,270 --> 00:58:03,500
you a device name and an interface name

1366
00:58:01,160 --> 00:58:05,089
and very minimal informations and you

1367
00:58:03,500 --> 00:58:07,580
will actually be very limited later on

1368
00:58:05,090 --> 00:58:11,830
on what you can do in explore in your

1369
00:58:07,580 --> 00:58:14,060
data with that

1370
00:58:11,830 --> 00:58:17,319
I'll take any questions otherwise I

1371
00:58:14,060 --> 00:58:17,320
think we're done

1372
00:58:22,140 --> 00:58:37,529
thanks again if you're interested to you

1373
00:58:34,920 --> 00:58:39,499
know set up the topology at home there

1374
00:58:37,529 --> 00:58:42,420
are some vouchers as provided by a

1375
00:58:39,499 --> 00:58:46,609
digital the cloud providers that you can

1376
00:58:42,420 --> 00:58:46,609
use to set up your topology on your own

1377
00:58:55,550 --> 00:58:57,610
you

