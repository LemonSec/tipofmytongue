1
00:00:00,290 --> 00:00:04,500
I mind will probably be less than<font color="#E5E5E5"> 10</font>

2
00:00:02,879 --> 00:00:06,330
minutes I'm sure I've just got a handful

3
00:00:04,500 --> 00:00:08,340
of slides so I wanted<font color="#E5E5E5"> to show this</font>

4
00:00:06,330 --> 00:00:10,200
initial one to describe a tool that I

5
00:00:08,340 --> 00:00:11,730
wrote based on traceroute so hopefully

6
00:00:10,200 --> 00:00:13,410
all<font color="#E5E5E5"> of you know how traceroute works</font>

7
00:00:11,730 --> 00:00:15,150
where you send a packet and your

8
00:00:13,410 --> 00:00:16,859
increment the TTL each hop and you get a

9
00:00:15,150 --> 00:00:18,720
response from each router<font color="#E5E5E5"> until you</font>

10
00:00:16,859 --> 00:00:20,789
reach<font color="#CCCCCC"> the destination where you'll get</font><font color="#E5E5E5"> a</font>

11
00:00:18,720 --> 00:00:22,439
port and reach a bowler or an echo

12
00:00:20,789 --> 00:00:25,380
response back depending on the protocol

13
00:00:22,439 --> 00:00:27,090
using what you get back is the ingress

14
00:00:25,380 --> 00:00:29,160
interface on<font color="#CCCCCC"> the forward path so on</font>

15
00:00:27,090 --> 00:00:31,198
these routers on the path you get the

16
00:00:29,160 --> 00:00:33,570
the response from that a interface on

17
00:00:31,199 --> 00:00:35,190
along<font color="#E5E5E5"> the way but what I was wondering</font>

18
00:00:33,570 --> 00:00:37,170
<font color="#CCCCCC">is if I could actually get that be</font>

19
00:00:35,190 --> 00:00:39,149
address along the path and build<font color="#E5E5E5"> a full</font>

20
00:00:37,170 --> 00:00:42,780
path of all the interfaces to the

21
00:00:39,149 --> 00:00:45,180
destination so how do you do this so I

22
00:00:42,780 --> 00:00:46,890
ended up discovering that you could and

23
00:00:45,180 --> 00:00:48,390
maybe this is novel and someone's done

24
00:00:46,890 --> 00:00:50,100
this before that<font color="#CCCCCC"> I didn't find</font><font color="#E5E5E5"> it and I</font>

25
00:00:48,390 --> 00:00:52,050
apologize<font color="#CCCCCC"> but what I discovered is if</font>

26
00:00:50,100 --> 00:00:54,270
you when you get that a interface

27
00:00:52,050 --> 00:00:56,940
address from that second hop router that

28
00:00:54,270 --> 00:00:58,620
middle router you you know or can

29
00:00:56,940 --> 00:01:00,899
presume that that a<font color="#E5E5E5"> address is on the</font>

30
00:00:58,620 --> 00:01:03,300
same network as the preceding<font color="#E5E5E5"> be</font>

31
00:01:00,899 --> 00:01:05,460
interface on the<font color="#E5E5E5"> first router and so</font>

32
00:01:03,300 --> 00:01:08,189
it's a simple matter of discovering that

33
00:01:05,459 --> 00:01:10,259
be a dress<font color="#E5E5E5"> and so you can do essentially</font>

34
00:01:08,189 --> 00:01:12,330
<font color="#CCCCCC">a ring search where you go when address</font>

35
00:01:10,260 --> 00:01:14,640
greater lower than to it to higher to

36
00:01:12,330 --> 00:01:18,450
lower until you find him and the trick

37
00:01:14,640 --> 00:01:21,150
<font color="#E5E5E5">is to use a TTL</font><font color="#CCCCCC"> of the preceding router</font>

38
00:01:18,450 --> 00:01:25,080
to discover that address so when you

39
00:01:21,150 --> 00:01:28,860
send a probe with a TTL of one with an

40
00:01:25,080 --> 00:01:30,600
with<font color="#E5E5E5"> a address that should be in the</font>

41
00:01:28,860 --> 00:01:32,070
range of that<font color="#CCCCCC"> a interface in</font><font color="#E5E5E5"> the second</font>

42
00:01:30,600 --> 00:01:33,750
hop router if you get a response you can

43
00:01:32,070 --> 00:01:35,309
presume that<font color="#E5E5E5"> you found that egress</font>

44
00:01:33,750 --> 00:01:36,509
interface on that router and so you do

45
00:01:35,310 --> 00:01:38,880
that along<font color="#CCCCCC"> the path and then you</font>

46
00:01:36,509 --> 00:01:41,880
discover your interfaces along that path

47
00:01:38,880 --> 00:01:44,640
<font color="#E5E5E5">and so that's I wrote something called</font>

48
00:01:41,880 --> 00:01:46,439
<font color="#E5E5E5">trace interface and this is sort of what</font>

49
00:01:44,640 --> 00:01:47,790
the default output looks like so if

50
00:01:46,439 --> 00:01:49,350
<font color="#E5E5E5">someone from Mary here can tell me if</font>

51
00:01:47,790 --> 00:01:50,909
this actually looks right so you run

52
00:01:49,350 --> 00:01:54,539
this of course you need root privileges

53
00:01:50,909 --> 00:01:57,509
to get<font color="#E5E5E5"> access to the sockets my my</font>

54
00:01:54,540 --> 00:02:01,200
output is not exactly intuitive is but

55
00:01:57,509 --> 00:02:03,420
the last hop<font color="#CCCCCC"> I believe it's actually the</font>

56
00:02:01,200 --> 00:02:07,890
last<font color="#E5E5E5"> line there is actually the what</font>

57
00:02:03,420 --> 00:02:10,770
would be<font color="#E5E5E5"> the default gateway for the for</font>

58
00:02:07,890 --> 00:02:12,480
the for the nanog wet server so the the

59
00:02:10,770 --> 00:02:16,650
arrows indicating the direction

60
00:02:12,480 --> 00:02:18,510
of the hop there then so why might this

61
00:02:16,650 --> 00:02:19,830
be useful<font color="#E5E5E5"> I just thought it was kind</font><font color="#CCCCCC"> of</font>

62
00:02:18,510 --> 00:02:21,239
neat maybe it's<font color="#E5E5E5"> not all that useful but</font>

63
00:02:19,830 --> 00:02:22,620
it might<font color="#CCCCCC"> be useful for just discovering</font>

64
00:02:21,239 --> 00:02:24,269
topology a little further than you would

65
00:02:22,620 --> 00:02:25,590
otherwise have but maybe there's

66
00:02:24,269 --> 00:02:28,890
something here that you<font color="#E5E5E5"> could use to</font>

67
00:02:25,590 --> 00:02:30,870
also pinpoint exact delays and whether

68
00:02:28,890 --> 00:02:33,208
it's the actual link or the router

69
00:02:30,870 --> 00:02:35,340
itself something I discovered was<font color="#CCCCCC"> that</font>

70
00:02:33,209 --> 00:02:37,650
this doesn't<font color="#E5E5E5"> work so well with your</font>

71
00:02:35,340 --> 00:02:40,610
typical trace route on<font color="#CCCCCC"> UNIX which uses</font>

72
00:02:37,650 --> 00:02:43,110
UDP if you aim packets to a destination

73
00:02:40,610 --> 00:02:44,579
address of a router using UDP they just

74
00:02:43,110 --> 00:02:47,069
tend not to respond you tend not to get

75
00:02:44,579 --> 00:02:50,670
anything back so ICMP just tends to work

76
00:02:47,069 --> 00:02:52,410
better and from most of the experiments

77
00:02:50,670 --> 00:02:54,030
I've done it hasn't<font color="#E5E5E5"> been a lot you're</font>

78
00:02:52,410 --> 00:02:57,030
the writer interfaces which would make

79
00:02:54,030 --> 00:02:59,579
sense the<font color="#CCCCCC"> the neighbor addresses tend to</font>

80
00:02:57,030 --> 00:03:01,549
be one away from<font color="#CCCCCC"> each other so people</font>

81
00:02:59,579 --> 00:03:04,290
who<font color="#E5E5E5"> are addressing usually in / 30s</font>

82
00:03:01,549 --> 00:03:06,750
between routers but occasionally you'll

83
00:03:04,290 --> 00:03:08,280
you can have your<font color="#E5E5E5"> spring range go a</font>

84
00:03:06,750 --> 00:03:11,849
little further and then you can discover

85
00:03:08,280 --> 00:03:14,190
that's / 24 you can certainly sweep that

86
00:03:11,849 --> 00:03:15,328
range as<font color="#CCCCCC"> well so I put some prototype</font>

87
00:03:14,190 --> 00:03:18,120
code here if any wants to play around

88
00:03:15,329 --> 00:03:19,829
<font color="#E5E5E5">with it I'm not much of a programmer my</font>

89
00:03:18,120 --> 00:03:21,660
my standard joke is I don't<font color="#CCCCCC"> know</font><font color="#E5E5E5"> parolee</font>

90
00:03:19,829 --> 00:03:24,060
no combat pearl so it's<font color="#E5E5E5"> it's something</font>

91
00:03:21,660 --> 00:03:25,168
that mostly works not<font color="#E5E5E5"> completely works</font>

92
00:03:24,060 --> 00:03:26,849
but it's something<font color="#E5E5E5"> you can sort of her</font>

93
00:03:25,169 --> 00:03:31,019
around with if this is of interest<font color="#E5E5E5"> to</font>

94
00:03:26,849 --> 00:03:38,280
you excellent thank you are that was

95
00:03:31,019 --> 00:03:39,569
lightning are there questions<font color="#CCCCCC"> who I just</font>

96
00:03:38,280 --> 00:03:42,419
<font color="#E5E5E5">have one comment which is that um</font>

97
00:03:39,569 --> 00:03:44,040
another technique<font color="#CCCCCC"> which the academic</font>

98
00:03:42,419 --> 00:03:46,260
community is found to be<font color="#E5E5E5"> useful</font><font color="#CCCCCC"> here is</font>

99
00:03:44,040 --> 00:03:50,280
<font color="#E5E5E5">is actually reverse dns lookups and</font>

100
00:03:46,260 --> 00:03:52,260
finding that that many<font color="#E5E5E5"> times the you can</font>

101
00:03:50,280 --> 00:03:54,690
tell from<font color="#E5E5E5"> the base name of the router in</font>

102
00:03:52,260 --> 00:03:56,010
the<font color="#E5E5E5"> dns response actually the base name</font>

103
00:03:54,690 --> 00:03:57,629
of the router is the same and<font color="#E5E5E5"> it's you</font>

104
00:03:56,010 --> 00:04:00,120
know interface one two or three whatever

105
00:03:57,629 --> 00:04:03,358
on that on that base router name sure so

106
00:04:00,120 --> 00:04:04,560
this<font color="#E5E5E5"> is pretty</font><font color="#CCCCCC"> cool stuff huh excellent</font>

107
00:04:03,359 --> 00:04:06,620
thank you

108
00:04:04,560 --> 00:04:06,620
you

