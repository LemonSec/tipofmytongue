1
00:00:01,100 --> 00:00:10,049
so this is a<font color="#E5E5E5"> presentation about</font><font color="#CCCCCC"> s flow</font>

2
00:00:05,279 --> 00:00:12,629
it is<font color="#E5E5E5"> a</font><font color="#CCCCCC"> standards-based</font><font color="#E5E5E5"> protocol for</font>

3
00:00:10,050 --> 00:00:14,670
exporting information about packets

4
00:00:12,630 --> 00:00:16,440
<font color="#E5E5E5">traveling through a router or switch</font>

5
00:00:14,670 --> 00:00:19,470
it's like net flow which a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people</font>

6
00:00:16,440 --> 00:00:23,939
use<font color="#E5E5E5"> simple premise</font><font color="#CCCCCC"> you can't possibly</font>

7
00:00:19,470 --> 00:00:25,619
have<font color="#E5E5E5"> a tap port or any way to record all</font>

8
00:00:23,939 --> 00:00:27,660
<font color="#CCCCCC">the packets go through your</font><font color="#E5E5E5"> data all the</font>

9
00:00:25,619 --> 00:00:30,179
<font color="#E5E5E5">locations but you may be interested</font><font color="#CCCCCC"> in</font>

10
00:00:27,660 --> 00:00:34,079
some portion for statistical sampling

11
00:00:30,179 --> 00:00:36,210
and you may<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to gather data</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> s</font>

12
00:00:34,079 --> 00:00:39,719
flow protocol was designed<font color="#E5E5E5"> by the Inman</font>

13
00:00:36,210 --> 00:00:42,600
corporation 2001<font color="#CCCCCC"> they did an RFC for the</font>

14
00:00:39,719 --> 00:00:44,940
original versions<font color="#E5E5E5"> and then they haven't</font>

15
00:00:42,600 --> 00:00:46,289
<font color="#E5E5E5">done</font><font color="#CCCCCC"> our FCS for updates but there have</font>

16
00:00:44,940 --> 00:00:50,730
been<font color="#E5E5E5"> a few new versions since those</font>

17
00:00:46,289 --> 00:00:53,070
published<font color="#E5E5E5"> the design of the protocol was</font>

18
00:00:50,730 --> 00:00:56,690
was intended<font color="#CCCCCC"> to overcome limitations</font><font color="#E5E5E5"> of</font>

19
00:00:53,070 --> 00:00:59,789
the traditional net flow protocol

20
00:00:56,690 --> 00:01:02,070
specifically<font color="#E5E5E5"> the fixed header format you</font>

21
00:00:59,789 --> 00:01:03,780
know every<font color="#E5E5E5"> time</font><font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to add a new</font>

22
00:01:02,070 --> 00:01:06,299
type of<font color="#CCCCCC"> information you have to release</font>

23
00:01:03,780 --> 00:01:08,820
<font color="#CCCCCC">a</font><font color="#E5E5E5"> new version and it became difficult</font>

24
00:01:06,299 --> 00:01:11,689
for<font color="#E5E5E5"> people to support so it's very</font>

25
00:01:08,820 --> 00:01:14,220
<font color="#E5E5E5">flexible extensible you can change add</font>

26
00:01:11,689 --> 00:01:17,070
update<font color="#CCCCCC"> new header formats</font>

27
00:01:14,220 --> 00:01:19,619
<font color="#CCCCCC">to various things like I</font><font color="#E5E5E5"> said it's</font>

28
00:01:17,070 --> 00:01:21,979
intended<font color="#CCCCCC"> to enhance or replace arm on</font>

29
00:01:19,619 --> 00:01:24,420
<font color="#CCCCCC">net</font><font color="#E5E5E5"> flow the usual type of things</font><font color="#CCCCCC"> and</font>

30
00:01:21,979 --> 00:01:26,549
there<font color="#CCCCCC"> are a few</font><font color="#E5E5E5"> vendors who are very</font>

31
00:01:24,420 --> 00:01:30,030
prominent with it specifically<font color="#CCCCCC"> foundry</font>

32
00:01:26,549 --> 00:01:33,750
extreme<font color="#CCCCCC"> and forced n are relatively well</font>

33
00:01:30,030 --> 00:01:36,270
<font color="#E5E5E5">known for supporting</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> Cisco and</font>

34
00:01:33,750 --> 00:01:41,939
juniper<font color="#E5E5E5"> however do not they still go</font>

35
00:01:36,270 --> 00:01:45,420
with net flow<font color="#E5E5E5"> a quick recap on why to</font>

36
00:01:41,939 --> 00:01:48,539
use any type of export protocol you know

37
00:01:45,420 --> 00:01:50,460
<font color="#CCCCCC">you are interested in your protocol port</font>

38
00:01:48,540 --> 00:01:52,020
application statistics you're interested

39
00:01:50,460 --> 00:01:55,710
in tracking denial service<font color="#E5E5E5"> you're</font>

40
00:01:52,020 --> 00:01:58,500
interested in capacity planning<font color="#CCCCCC"> one</font>

41
00:01:55,710 --> 00:02:01,589
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> thing that sflow adds is the</font>

42
00:01:58,500 --> 00:02:04,560
<font color="#CCCCCC">ability</font><font color="#E5E5E5"> to do layer</font><font color="#CCCCCC"> 2 support so a lot</font>

43
00:02:01,590 --> 00:02:07,049
<font color="#E5E5E5">of folks use it for analysis</font><font color="#CCCCCC"> on layer 2</font>

44
00:02:04,560 --> 00:02:08,970
exchange points<font color="#E5E5E5"> so you can tell how much</font>

45
00:02:07,049 --> 00:02:11,700
traffic is going between<font color="#E5E5E5"> any particular</font>

46
00:02:08,970 --> 00:02:12,630
member<font color="#E5E5E5"> without everyone's gear having to</font>

47
00:02:11,700 --> 00:02:15,780
do max

48
00:02:12,630 --> 00:02:17,700
<font color="#CCCCCC">mack counting which a lot of equipment</font>

49
00:02:15,780 --> 00:02:19,350
out<font color="#E5E5E5"> there doesn't support or</font><font color="#CCCCCC"> even if it</font>

50
00:02:17,700 --> 00:02:20,700
does<font color="#E5E5E5"> it's flying car dependent or it's</font>

51
00:02:19,350 --> 00:02:23,370
very<font color="#E5E5E5"> limited or</font><font color="#CCCCCC"> it's some feature that</font>

52
00:02:20,700 --> 00:02:25,850
you<font color="#CCCCCC"> lose when you turn</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> on so for</font>

53
00:02:23,370 --> 00:02:28,080
the exchange point to do the<font color="#CCCCCC"> polling is</font>

54
00:02:25,850 --> 00:02:30,750
beneficial<font color="#E5E5E5"> for everyone you get a nice</font>

55
00:02:28,080 --> 00:02:32,930
<font color="#CCCCCC">webpage</font><font color="#E5E5E5"> and it displays how much traffic</font>

56
00:02:30,750 --> 00:02:35,270
you're doing to every individual appear

57
00:02:32,930 --> 00:02:38,490
some folks<font color="#E5E5E5"> have rolled this out already</font>

58
00:02:35,270 --> 00:02:40,140
<font color="#E5E5E5">Equinix was I think the</font><font color="#CCCCCC"> first and links</font>

59
00:02:38,490 --> 00:02:42,720
<font color="#E5E5E5">and</font><font color="#CCCCCC"> AM</font><font color="#E5E5E5"> six I know have followed up with</font>

60
00:02:40,140 --> 00:02:45,420
their own versions<font color="#CCCCCC"> and it's proven to</font><font color="#E5E5E5"> be</font>

61
00:02:42,720 --> 00:02:48,660
<font color="#CCCCCC">very popular there are some concerns</font>

62
00:02:45,420 --> 00:02:53,579
<font color="#E5E5E5">about data</font><font color="#CCCCCC"> privacy but in general folks</font>

63
00:02:48,660 --> 00:02:56,100
like it and find it<font color="#E5E5E5"> very</font><font color="#CCCCCC"> useful so</font>

64
00:02:53,580 --> 00:02:58,500
here's the<font color="#CCCCCC"> sFlow version of the history</font>

65
00:02:56,100 --> 00:03:02,820
<font color="#CCCCCC">of flow export which is probably neither</font>

66
00:02:58,500 --> 00:03:05,870
<font color="#E5E5E5">thorough nor accurate but it shows some</font>

67
00:03:02,820 --> 00:03:11,209
of the<font color="#CCCCCC"> progression through time of</font>

68
00:03:05,870 --> 00:03:14,220
traffic<font color="#CCCCCC"> levels and various forms of flow</font>

69
00:03:11,210 --> 00:03:16,170
<font color="#E5E5E5">like I said the version that you're</font>

70
00:03:14,220 --> 00:03:19,320
probably all aware<font color="#CCCCCC"> of is net flow which</font>

71
00:03:16,170 --> 00:03:21,959
<font color="#CCCCCC">was Cisco dependent it's been extended</font>

72
00:03:19,320 --> 00:03:25,799
<font color="#CCCCCC">many times and the latest</font><font color="#E5E5E5"> version is</font>

73
00:03:21,960 --> 00:03:28,110
<font color="#CCCCCC">NetFlow</font><font color="#E5E5E5"> v9 which not many people have</font>

74
00:03:25,800 --> 00:03:31,050
rolled out<font color="#E5E5E5"> from what I've seen but its</font>

75
00:03:28,110 --> 00:03:34,380
goal is<font color="#CCCCCC"> to copy a lot of the features of</font>

76
00:03:31,050 --> 00:03:38,100
s flow whereas<font color="#E5E5E5"> s flow is release much</font>

77
00:03:34,380 --> 00:03:42,590
earlier<font color="#CCCCCC"> v9 tries to replicate that with</font>

78
00:03:38,100 --> 00:03:45,810
a lot of the extended format<font color="#E5E5E5"> so</font>

79
00:03:42,590 --> 00:03:48,690
basically the limitations that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are</font>

80
00:03:45,810 --> 00:03:51,020
facing<font color="#CCCCCC"> when it comes to</font><font color="#E5E5E5"> sampling data is</font>

81
00:03:48,690 --> 00:03:53,880
how much data are you<font color="#CCCCCC"> pulling the sample</font>

82
00:03:51,020 --> 00:03:56,400
with traffic rates growing at the rate

83
00:03:53,880 --> 00:04:00,560
<font color="#E5E5E5">that they are it's significantly</font>

84
00:03:56,400 --> 00:04:02,970
<font color="#E5E5E5">difficult to get all the packets or</font>

85
00:04:00,560 --> 00:04:07,410
<font color="#CCCCCC">anywhere approaching all the packets so</font>

86
00:04:02,970 --> 00:04:09,750
there are two methods that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> used to</font>

87
00:04:07,410 --> 00:04:12,180
reduce<font color="#E5E5E5"> the</font><font color="#CCCCCC"> amount of data that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font>

88
00:04:09,750 --> 00:04:14,490
to monitor<font color="#CCCCCC"> the first is sampling which</font>

89
00:04:12,180 --> 00:04:16,829
is simply looking at one out of every in

90
00:04:14,490 --> 00:04:18,570
packet so you know sample one out<font color="#CCCCCC"> of</font>

91
00:04:16,829 --> 00:04:20,579
<font color="#E5E5E5">every thousand packets multiplied by a</font>

92
00:04:18,570 --> 00:04:24,360
thousand and hope for<font color="#E5E5E5"> a statistically</font>

93
00:04:20,579 --> 00:04:26,430
correct<font color="#E5E5E5"> average</font><font color="#CCCCCC"> and the other</font><font color="#E5E5E5"> method is</font>

94
00:04:24,360 --> 00:04:27,090
aggregation which is to<font color="#E5E5E5"> collect all the</font>

95
00:04:26,430 --> 00:04:29,220
<font color="#CCCCCC">data</font><font color="#E5E5E5"> but</font>

96
00:04:27,090 --> 00:04:32,250
<font color="#E5E5E5">then consolidate it on the device before</font>

97
00:04:29,220 --> 00:04:35,250
<font color="#E5E5E5">exporting it</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example say you're</font>

98
00:04:32,250 --> 00:04:37,110
not<font color="#E5E5E5"> interested</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> destination IP</font>

99
00:04:35,250 --> 00:04:39,570
<font color="#E5E5E5">of every flow but say you're interested</font>

100
00:04:37,110 --> 00:04:41,850
in destination prefix you might do the

101
00:04:39,570 --> 00:04:43,800
aggregation<font color="#CCCCCC"> on the device</font><font color="#E5E5E5"> itself before</font>

102
00:04:41,850 --> 00:04:45,870
<font color="#CCCCCC">exporting</font><font color="#E5E5E5"> data and that reduces load on</font>

103
00:04:43,800 --> 00:04:48,720
<font color="#CCCCCC">your collector and</font><font color="#E5E5E5"> load on on traffic</font>

104
00:04:45,870 --> 00:04:50,520
that you have to export usually sampling

105
00:04:48,720 --> 00:04:53,729
is the<font color="#CCCCCC"> winner</font><font color="#E5E5E5"> and the reason is you</font>

106
00:04:50,520 --> 00:04:55,799
<font color="#CCCCCC">don't have to maintain</font><font color="#E5E5E5"> state for a lot</font>

107
00:04:53,729 --> 00:04:58,289
<font color="#E5E5E5">of networks complex networks with lots</font>

108
00:04:55,800 --> 00:05:01,470
of flows<font color="#CCCCCC"> there</font><font color="#E5E5E5"> just isn't enough</font>

109
00:04:58,290 --> 00:05:03,660
<font color="#CCCCCC">DCAM in the world</font><font color="#E5E5E5"> or whatever</font><font color="#CCCCCC"> resources</font>

110
00:05:01,470 --> 00:05:07,950
<font color="#CCCCCC">being</font><font color="#E5E5E5"> used</font><font color="#CCCCCC"> as RAM whatever</font><font color="#E5E5E5"> to track the</font>

111
00:05:03,660 --> 00:05:10,919
state to build the flows<font color="#E5E5E5"> so a lot of</font>

112
00:05:07,950 --> 00:05:13,200
folks face this<font color="#E5E5E5"> on platforms today where</font>

113
00:05:10,919 --> 00:05:15,330
if you're trying<font color="#E5E5E5"> to track net flow even</font>

114
00:05:13,200 --> 00:05:16,950
<font color="#E5E5E5">if you don't want it to be stateful you</font>

115
00:05:15,330 --> 00:05:21,450
can't turn<font color="#E5E5E5"> it off and you're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

116
00:05:16,950 --> 00:05:23,969
<font color="#CCCCCC">quickly exhaust your router resources so</font>

117
00:05:21,450 --> 00:05:26,479
the problems<font color="#CCCCCC"> of net flow it is</font>

118
00:05:23,970 --> 00:05:30,030
<font color="#E5E5E5">originally based as a flow based system</font>

119
00:05:26,479 --> 00:05:33,000
<font color="#CCCCCC">you know it was designed so that</font><font color="#E5E5E5"> if your</font>

120
00:05:30,030 --> 00:05:35,280
router saw<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> packets about a flow but</font>

121
00:05:33,000 --> 00:05:37,710
before they say the 30 second export

122
00:05:35,280 --> 00:05:40,559
cycle or whatever the case may be it

123
00:05:37,710 --> 00:05:42,239
<font color="#E5E5E5">would summarize that</font><font color="#CCCCCC"> data and export</font>

124
00:05:40,560 --> 00:05:46,530
<font color="#E5E5E5">information about that specific</font><font color="#CCCCCC"> flow</font>

125
00:05:42,240 --> 00:05:50,760
that requires<font color="#E5E5E5"> state so like I said</font>

126
00:05:46,530 --> 00:05:53,190
frequent<font color="#CCCCCC"> state memory exhaustion and</font><font color="#E5E5E5"> the</font>

127
00:05:50,760 --> 00:05:55,710
sampling<font color="#E5E5E5"> that is available</font><font color="#CCCCCC"> is an</font>

128
00:05:53,190 --> 00:05:58,169
afterthought<font color="#E5E5E5"> so there's no mechanism</font>

129
00:05:55,710 --> 00:06:00,739
<font color="#CCCCCC">inside the</font><font color="#E5E5E5"> protocol for example to</font>

130
00:05:58,169 --> 00:06:03,450
communicate what the sampling rate<font color="#CCCCCC"> is</font>

131
00:06:00,740 --> 00:06:05,610
you have to<font color="#E5E5E5"> know what you've configured</font>

132
00:06:03,450 --> 00:06:07,800
the device for<font color="#E5E5E5"> you</font><font color="#CCCCCC"> generally can't</font>

133
00:06:05,610 --> 00:06:10,169
<font color="#E5E5E5">configure multiple sampling rates across</font>

134
00:06:07,800 --> 00:06:15,120
different cards<font color="#E5E5E5"> different architecture</font>

135
00:06:10,169 --> 00:06:17,840
types<font color="#E5E5E5"> things like that</font><font color="#CCCCCC"> and support for</font>

136
00:06:15,120 --> 00:06:20,910
<font color="#E5E5E5">all versions and features is sporadic</font>

137
00:06:17,840 --> 00:06:24,690
<font color="#CCCCCC">NetFlow</font><font color="#E5E5E5"> v5 is probably the most commonly</font>

138
00:06:20,910 --> 00:06:26,550
used<font color="#E5E5E5"> today that's the generic net flow</font>

139
00:06:24,690 --> 00:06:29,910
it doesn't include support for

140
00:06:26,550 --> 00:06:32,430
aggregation<font color="#CCCCCC"> that's in v8</font><font color="#E5E5E5"> which is less</font>

141
00:06:29,910 --> 00:06:34,260
commonly<font color="#CCCCCC"> used</font><font color="#E5E5E5"> the most commonly used</font>

142
00:06:32,430 --> 00:06:36,090
versions<font color="#E5E5E5"> don't support layer 2</font>

143
00:06:34,260 --> 00:06:38,460
<font color="#CCCCCC">information they're not extensible</font><font color="#E5E5E5"> and</font>

144
00:06:36,090 --> 00:06:40,770
that's something that<font color="#CCCCCC"> NetFlow v9 has</font>

145
00:06:38,460 --> 00:06:43,698
tried to fix but<font color="#CCCCCC"> I guess</font>

146
00:06:40,770 --> 00:06:46,289
it's an afterthought<font color="#E5E5E5"> and it's basically</font>

147
00:06:43,699 --> 00:06:50,099
adapting the features of<font color="#CCCCCC"> sFlow back</font><font color="#E5E5E5"> into</font>

148
00:06:46,289 --> 00:06:53,099
<font color="#CCCCCC">NetFlow so the features of sFlow</font><font color="#E5E5E5"> it's</font>

149
00:06:50,099 --> 00:06:55,080
specifically<font color="#CCCCCC"> designed for sampling there</font>

150
00:06:53,099 --> 00:06:57,539
is no flow data<font color="#CCCCCC"> there's no attempt</font><font color="#E5E5E5"> to</font>

151
00:06:55,080 --> 00:07:01,710
track flow data<font color="#E5E5E5"> and from</font><font color="#CCCCCC"> the ground up</font>

152
00:06:57,539 --> 00:07:04,770
it's built to do sampling<font color="#E5E5E5"> so it</font>

153
00:07:01,710 --> 00:07:06,378
communicates this<font color="#E5E5E5"> type of data inside</font>

154
00:07:04,770 --> 00:07:11,128
<font color="#CCCCCC">the packet</font><font color="#E5E5E5"> and makes it much</font><font color="#CCCCCC"> easier to</font>

155
00:07:06,379 --> 00:07:13,770
<font color="#E5E5E5">maintain correct and accurate data like</font>

156
00:07:11,129 --> 00:07:15,569
<font color="#E5E5E5">I say here you can configure lower rates</font>

157
00:07:13,770 --> 00:07:18,539
for<font color="#E5E5E5"> 10 gig cards versus hundred</font><font color="#CCCCCC"> Meg</font>

158
00:07:15,569 --> 00:07:21,870
cards if you want more data<font color="#E5E5E5"> more</font>

159
00:07:18,539 --> 00:07:23,759
<font color="#E5E5E5">granular data inside things that you</font>

160
00:07:21,870 --> 00:07:26,220
don't<font color="#E5E5E5"> necessarily aren't passing</font><font color="#CCCCCC"> that</font>

161
00:07:23,759 --> 00:07:29,699
much traffic<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> currently 23 types</font>

162
00:07:26,220 --> 00:07:31,800
of data<font color="#E5E5E5"> bearing message formats</font><font color="#CCCCCC"> that's</font>

163
00:07:29,699 --> 00:07:34,319
<font color="#E5E5E5">extended all</font><font color="#CCCCCC"> the time</font><font color="#E5E5E5"> but it includes</font>

164
00:07:31,800 --> 00:07:38,569
everything<font color="#E5E5E5"> under the Sun from your</font>

165
00:07:34,319 --> 00:07:41,629
<font color="#E5E5E5">generic type of net flow information to</font>

166
00:07:38,569 --> 00:07:45,750
information about<font color="#E5E5E5"> the BGP path selected</font>

167
00:07:41,629 --> 00:07:48,270
<font color="#E5E5E5">MPLS paths and various things</font><font color="#CCCCCC"> it fully</font>

168
00:07:45,750 --> 00:07:51,349
<font color="#E5E5E5">supports layer</font><font color="#CCCCCC"> 2 fully supports MPLS and</font>

169
00:07:48,270 --> 00:07:53,909
<font color="#E5E5E5">BGP like I said and it also supports</font>

170
00:07:51,349 --> 00:07:56,940
passing the first 128 bytes of<font color="#CCCCCC"> the</font>

171
00:07:53,909 --> 00:08:00,449
packet<font color="#E5E5E5"> and that lets you get into a lot</font>

172
00:07:56,940 --> 00:08:03,029
<font color="#CCCCCC">more interesting detailed analysis with</font>

173
00:08:00,449 --> 00:08:04,710
the header and writing<font color="#CCCCCC"> custom code</font><font color="#E5E5E5"> to do</font>

174
00:08:03,029 --> 00:08:07,169
whatever you want<font color="#E5E5E5"> and one of the other</font>

175
00:08:04,710 --> 00:08:09,090
<font color="#CCCCCC">interesting things that no other NetFlow</font>

176
00:08:07,169 --> 00:08:11,818
has that I'm aware of<font color="#E5E5E5"> is a push base</font>

177
00:08:09,090 --> 00:08:13,830
counter<font color="#E5E5E5"> so instead of having to go out</font>

178
00:08:11,819 --> 00:08:16,469
<font color="#CCCCCC">and SNMP query a box and then get the</font>

179
00:08:13,830 --> 00:08:19,590
<font color="#CCCCCC">results back it will actually push the</font>

180
00:08:16,469 --> 00:08:22,080
usual SNMP type data<font color="#E5E5E5"> out for each</font>

181
00:08:19,590 --> 00:08:24,508
interface<font color="#E5E5E5"> it makes it really easy to</font>

182
00:08:22,080 --> 00:08:27,330
collect<font color="#E5E5E5"> at a high rate of speed</font>

183
00:08:24,509 --> 00:08:33,390
interface data<font color="#E5E5E5"> so it's it's</font><font color="#CCCCCC"> kind of</font>

184
00:08:27,330 --> 00:08:35,789
useful<font color="#E5E5E5"> said that turns out to be very</font>

185
00:08:33,390 --> 00:08:38,520
<font color="#CCCCCC">useful and there's a lot</font><font color="#E5E5E5"> of benefits to</font>

186
00:08:35,789 --> 00:08:41,640
<font color="#E5E5E5">getting down into the</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> thirty</font>

187
00:08:38,520 --> 00:08:44,819
second range<font color="#E5E5E5"> as opposed to like a five</font>

188
00:08:41,640 --> 00:08:46,770
minute average<font color="#CCCCCC"> or whatever you</font><font color="#E5E5E5"> really</font>

189
00:08:44,820 --> 00:08:50,779
see a<font color="#E5E5E5"> lot more denial of service you</font>

190
00:08:46,770 --> 00:08:52,610
really see a microburst a lot more so

191
00:08:50,779 --> 00:08:56,600
it's very<font color="#E5E5E5"> useful</font><font color="#CCCCCC"> once people</font><font color="#E5E5E5"> are</font>

192
00:08:52,610 --> 00:08:59,810
<font color="#E5E5E5">interested in that the issues with</font><font color="#CCCCCC"> s</font>

193
00:08:56,600 --> 00:09:02,120
<font color="#E5E5E5">flow generally speaking the issues are</font>

194
00:08:59,810 --> 00:09:03,739
all in the design<font color="#CCCCCC"> of the protocol so</font>

195
00:09:02,120 --> 00:09:08,629
when I first<font color="#CCCCCC"> looked</font><font color="#E5E5E5"> at this thing I</font>

196
00:09:03,740 --> 00:09:10,459
thought oh wow this is<font color="#E5E5E5"> bad it's got some</font>

197
00:09:08,629 --> 00:09:12,529
<font color="#E5E5E5">interesting formatting to say the least</font>

198
00:09:10,459 --> 00:09:14,268
<font color="#CCCCCC">and you can obviously see where they're</font>

199
00:09:12,529 --> 00:09:18,949
trying<font color="#E5E5E5"> to keep everything 32-bit word</font>

200
00:09:14,269 --> 00:09:20,959
aligned<font color="#E5E5E5"> the issue is that you have very</font>

201
00:09:18,949 --> 00:09:22,519
inefficient use of space<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example</font>

202
00:09:20,959 --> 00:09:24,378
you may have values that<font color="#CCCCCC"> are only</font><font color="#E5E5E5"> going</font>

203
00:09:22,519 --> 00:09:27,319
<font color="#CCCCCC">to be</font><font color="#E5E5E5"> one through four</font><font color="#CCCCCC"> like say bgp</font>

204
00:09:24,379 --> 00:09:29,329
version and that's<font color="#E5E5E5"> gonna be a 32-bit</font>

205
00:09:27,319 --> 00:09:32,719
value<font color="#E5E5E5"> and then later</font><font color="#CCCCCC"> on they will</font><font color="#E5E5E5"> have</font>

206
00:09:29,329 --> 00:09:34,609
separate message formats where they try

207
00:09:32,720 --> 00:09:37,519
to take something<font color="#CCCCCC"> that is legitimately a</font>

208
00:09:34,610 --> 00:09:41,990
32-bit<font color="#E5E5E5"> value like say if index and they</font>

209
00:09:37,519 --> 00:09:44,750
say well if it's less<font color="#CCCCCC"> than 24 we'll add</font>

210
00:09:41,990 --> 00:09:47,209
in some other 8-bit value at the end<font color="#E5E5E5"> and</font>

211
00:09:44,750 --> 00:09:50,810
it results<font color="#E5E5E5"> in extra message formats and</font>

212
00:09:47,209 --> 00:09:52,459
all kinds of complexity<font color="#E5E5E5"> but fortunately</font>

213
00:09:50,810 --> 00:09:54,949
that's just an<font color="#E5E5E5"> issue</font><font color="#CCCCCC"> for the people</font>

214
00:09:52,459 --> 00:09:58,369
writing<font color="#E5E5E5"> the libraries to parse the</font>

215
00:09:54,949 --> 00:10:01,250
packets the other issue is<font color="#CCCCCC"> that at</font><font color="#E5E5E5"> least</font>

216
00:09:58,370 --> 00:10:04,100
in the the<font color="#CCCCCC"> original v2 and then the v4</font>

217
00:10:01,250 --> 00:10:06,259
versions there was no<font color="#CCCCCC"> TLB encoding so</font>

218
00:10:04,100 --> 00:10:08,269
what<font color="#E5E5E5"> this</font><font color="#CCCCCC"> means is you have</font><font color="#E5E5E5"> to know your</font>

219
00:10:06,259 --> 00:10:11,899
parser has<font color="#E5E5E5"> to know about every type of</font>

220
00:10:08,269 --> 00:10:13,189
<font color="#CCCCCC">packet or you know if you receive a type</font>

221
00:10:11,899 --> 00:10:15,579
<font color="#CCCCCC">of packet which you can't correctly</font>

222
00:10:13,189 --> 00:10:18,079
parse if someone has added a<font color="#E5E5E5"> new</font>

223
00:10:15,579 --> 00:10:20,149
protocol or new export message which are

224
00:10:18,079 --> 00:10:21,649
not aware of<font color="#E5E5E5"> you can't just skip over it</font>

225
00:10:20,149 --> 00:10:23,689
<font color="#E5E5E5">you become</font><font color="#CCCCCC"> D synchronized with the</font>

226
00:10:21,649 --> 00:10:25,220
<font color="#CCCCCC">stream and</font><font color="#E5E5E5"> you end up losing the entire</font>

227
00:10:23,689 --> 00:10:28,790
packet and corrupting your data

228
00:10:25,220 --> 00:10:31,220
potentially<font color="#E5E5E5"> so that's been at least</font>

229
00:10:28,790 --> 00:10:34,579
somewhat<font color="#E5E5E5"> fixed in v5 they've gone back</font>

230
00:10:31,220 --> 00:10:36,230
and added a<font color="#E5E5E5"> few new features</font><font color="#CCCCCC"> generally</font>

231
00:10:34,579 --> 00:10:41,029
<font color="#CCCCCC">speaking is transparent to the</font><font color="#E5E5E5"> end-user</font>

232
00:10:36,230 --> 00:10:45,439
once you get<font color="#E5E5E5"> around it</font><font color="#CCCCCC"> then like</font><font color="#E5E5E5"> I said</font>

233
00:10:41,029 --> 00:10:47,209
<font color="#E5E5E5">there's a net flow v9 which adds the</font>

234
00:10:45,439 --> 00:10:49,790
flexible fields which<font color="#E5E5E5"> is comparable to</font>

235
00:10:47,209 --> 00:10:51,500
<font color="#E5E5E5">all the different</font><font color="#CCCCCC"> s flow format types it</font>

236
00:10:49,790 --> 00:10:55,189
adds the layer<font color="#CCCCCC"> to</font><font color="#E5E5E5"> information</font>

237
00:10:51,500 --> 00:10:58,569
it adds the information about MPLS paths

238
00:10:55,189 --> 00:11:02,120
you may be<font color="#E5E5E5"> traversing about BGP routes</font>

239
00:10:58,569 --> 00:11:04,430
<font color="#E5E5E5">various other enhancements so it's</font>

240
00:11:02,120 --> 00:11:06,680
<font color="#E5E5E5">really intended to</font><font color="#CCCCCC"> catch up to s flow</font>

241
00:11:04,430 --> 00:11:10,069
and then there's been<font color="#E5E5E5"> a recent IETF</font>

242
00:11:06,680 --> 00:11:12,530
standardization attempt on IP fix<font color="#E5E5E5"> aka</font>

243
00:11:10,070 --> 00:11:14,960
<font color="#CCCCCC">NetFlow v10 which is based on</font><font color="#E5E5E5"> that flow</font>

244
00:11:12,530 --> 00:11:18,110
<font color="#CCCCCC">v9 they had a</font><font color="#E5E5E5"> couple more things some</font>

245
00:11:14,960 --> 00:11:21,140
some<font color="#CCCCCC"> enterprise specific formats but</font>

246
00:11:18,110 --> 00:11:22,730
<font color="#E5E5E5">roughly the same thing kind of the same</font>

247
00:11:21,140 --> 00:11:25,630
<font color="#E5E5E5">features</font><font color="#CCCCCC"> I haven't</font><font color="#E5E5E5"> played with it</font>

248
00:11:22,730 --> 00:11:28,610
personally<font color="#CCCCCC"> so I can't speak to it</font><font color="#E5E5E5"> but</font>

249
00:11:25,630 --> 00:11:30,650
<font color="#E5E5E5">for people that happen to operate</font>

250
00:11:28,610 --> 00:11:32,330
foundry extremely important networks

251
00:11:30,650 --> 00:11:33,890
<font color="#CCCCCC">you're still gonna be interested in</font><font color="#E5E5E5"> s</font>

252
00:11:32,330 --> 00:11:37,670
flow because that's the only only<font color="#E5E5E5"> thing</font>

253
00:11:33,890 --> 00:11:39,890
supported so even if if not<font color="#CCCCCC"> flow V 9</font><font color="#E5E5E5"> or</font>

254
00:11:37,670 --> 00:11:41,479
IP fix get around to adding all the same

255
00:11:39,890 --> 00:11:45,500
functionality<font color="#CCCCCC"> the still interesting</font>

256
00:11:41,480 --> 00:11:47,750
stuff it<font color="#E5E5E5"> currently as far as I'm aware</font>

257
00:11:45,500 --> 00:11:48,520
is only<font color="#E5E5E5"> supported by Cisco and that's</font>

258
00:11:47,750 --> 00:11:51,380
bee-nine

259
00:11:48,520 --> 00:11:52,280
<font color="#CCCCCC">I'm not sure what universe plans are for</font>

260
00:11:51,380 --> 00:11:54,650
it

261
00:11:52,280 --> 00:11:56,480
it doesn't replicate the<font color="#E5E5E5"> push</font><font color="#CCCCCC"> based</font>

262
00:11:54,650 --> 00:12:00,470
counters which I<font color="#CCCCCC"> personally find very</font>

263
00:11:56,480 --> 00:12:02,690
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> so there's a couple ways</font>

264
00:12:00,470 --> 00:12:05,330
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do this and I</font><font color="#CCCCCC"> apologize I</font>

265
00:12:02,690 --> 00:12:09,230
had a more current<font color="#E5E5E5"> version of the slide</font>

266
00:12:05,330 --> 00:12:11,750
which I<font color="#CCCCCC"> don't have here the folks at</font>

267
00:12:09,230 --> 00:12:15,140
<font color="#CCCCCC">am-6 had worked hard to</font><font color="#E5E5E5"> develop their</font>

268
00:12:11,750 --> 00:12:16,370
own tools<font color="#E5E5E5"> and I wasn't able to get any</font>

269
00:12:15,140 --> 00:12:18,949
<font color="#CCCCCC">information</font><font color="#E5E5E5"> on whether</font><font color="#CCCCCC"> that was</font>

270
00:12:16,370 --> 00:12:23,060
officially<font color="#CCCCCC"> released or not</font><font color="#E5E5E5"> but you may</font>

271
00:12:18,950 --> 00:12:26,690
want<font color="#E5E5E5"> to harass</font><font color="#CCCCCC"> Niels</font><font color="#E5E5E5"> there's the</font>

272
00:12:23,060 --> 00:12:28,250
official<font color="#CCCCCC"> sFlow site there's a reference</font>

273
00:12:26,690 --> 00:12:29,960
collector that<font color="#E5E5E5"> they give away for</font><font color="#CCCCCC"> free</font>

274
00:12:28,250 --> 00:12:31,190
there's commercial products<font color="#CCCCCC"> that they</font>

275
00:12:29,960 --> 00:12:32,680
sell obviously it was written<font color="#E5E5E5"> and</font>

276
00:12:31,190 --> 00:12:35,750
developed<font color="#CCCCCC"> by a commercial</font><font color="#E5E5E5"> company</font>

277
00:12:32,680 --> 00:12:39,859
<font color="#CCCCCC">there's some specifications online for</font>

278
00:12:35,750 --> 00:12:40,940
the<font color="#E5E5E5"> actual protocol and like I said</font><font color="#CCCCCC"> and</font>

279
00:12:39,860 --> 00:12:42,650
I'm<font color="#CCCCCC"> not</font><font color="#E5E5E5"> sure if they have</font><font color="#CCCCCC"> six tool has</font>

280
00:12:40,940 --> 00:12:46,160
ever been released<font color="#E5E5E5"> but they did their</font>

281
00:12:42,650 --> 00:12:54,500
own stuff actually<font color="#E5E5E5"> needles can tell me</font>

282
00:12:46,160 --> 00:12:58,250
right<font color="#CCCCCC"> now well maybe not</font><font color="#E5E5E5"> they probably</font>

283
00:12:54,500 --> 00:13:03,850
have to turn<font color="#E5E5E5"> it on because it's called</font>

284
00:12:58,250 --> 00:13:07,100
<font color="#E5E5E5">the</font><font color="#CCCCCC"> nets s</font><font color="#E5E5E5"> flow and it's on</font><font color="#CCCCCC"> Sipan okay</font>

285
00:13:03,850 --> 00:13:10,010
so<font color="#E5E5E5"> I also for the purposes of this</font>

286
00:13:07,100 --> 00:13:14,330
<font color="#E5E5E5">worked on another implementation which</font>

287
00:13:10,010 --> 00:13:16,370
is<font color="#E5E5E5"> my own high speed</font><font color="#CCCCCC"> C library I split</font>

288
00:13:14,330 --> 00:13:18,380
this up into two packages<font color="#E5E5E5"> one which is</font>

289
00:13:16,370 --> 00:13:20,350
the generic library which

290
00:13:18,380 --> 00:13:22,820
anyone can<font color="#CCCCCC"> use to</font><font color="#E5E5E5"> parse the packets and</font>

291
00:13:20,350 --> 00:13:26,780
fairly efficient given the limitations

292
00:13:22,820 --> 00:13:30,860
<font color="#CCCCCC">of the protocol</font><font color="#E5E5E5"> and I also split it up</font>

293
00:13:26,780 --> 00:13:32,209
into a reference example code<font color="#CCCCCC"> I'm sort</font>

294
00:13:30,860 --> 00:13:33,710
of<font color="#E5E5E5"> right now the documentation</font><font color="#CCCCCC"> isn't</font>

295
00:13:32,210 --> 00:13:34,970
that great<font color="#E5E5E5"> so</font><font color="#CCCCCC"> if you know what you're</font>

296
00:13:33,710 --> 00:13:37,460
doing you<font color="#CCCCCC"> can probably</font><font color="#E5E5E5"> figure it out</font><font color="#CCCCCC"> if</font>

297
00:13:34,970 --> 00:13:38,840
you don't you may be confused<font color="#CCCCCC"> or try to</font>

298
00:13:37,460 --> 00:13:42,260
<font color="#E5E5E5">get around to adding</font><font color="#CCCCCC"> more documentation</font>

299
00:13:38,840 --> 00:13:44,450
shortly but there is a reference

300
00:13:42,260 --> 00:13:47,660
collector which implements<font color="#CCCCCC"> the two most</font>

301
00:13:44,450 --> 00:13:52,610
interesting<font color="#E5E5E5"> features</font><font color="#CCCCCC"> that I'm aware of</font>

302
00:13:47,660 --> 00:13:54,469
which are<font color="#E5E5E5"> the push counter information</font>

303
00:13:52,610 --> 00:13:57,830
writing that out<font color="#E5E5E5"> as the equivalent of</font>

304
00:13:54,470 --> 00:14:01,820
replacing SNP polling and<font color="#CCCCCC"> the layer -</font>

305
00:13:57,830 --> 00:14:03,560
<font color="#E5E5E5">Mac</font><font color="#CCCCCC"> - MAC address mapping so anyone that</font>

306
00:14:01,820 --> 00:14:04,910
<font color="#E5E5E5">runs an exchange point that's interested</font>

307
00:14:03,560 --> 00:14:08,900
in<font color="#CCCCCC"> s flow</font><font color="#E5E5E5"> data is probably going to</font><font color="#CCCCCC"> be</font>

308
00:14:04,910 --> 00:14:13,130
very<font color="#E5E5E5"> interested in this it's the kind</font><font color="#CCCCCC"> of</font>

309
00:14:08,900 --> 00:14:15,770
thing that users<font color="#E5E5E5"> seem to like that's</font>

310
00:14:13,130 --> 00:14:18,880
basically the gist of it

311
00:14:15,770 --> 00:14:18,880
so questions

312
00:14:22,890 --> 00:14:28,270
and Chris<font color="#E5E5E5"> Whitfield</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> also in</font>

313
00:14:26,440 --> 00:14:30,339
your list<font color="#E5E5E5"> of applications supporting and</font>

314
00:14:28,270 --> 00:14:32,410
I wanted<font color="#CCCCCC"> to add that</font><font color="#E5E5E5"> the latest versions</font>

315
00:14:30,339 --> 00:14:34,690
of n top also<font color="#E5E5E5"> will collect us flow</font>

316
00:14:32,410 --> 00:14:37,449
although<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> the latest release</font>

317
00:14:34,690 --> 00:14:39,910
version has a bug that<font color="#E5E5E5"> breaks</font><font color="#CCCCCC"> sample des</font>

318
00:14:37,450 --> 00:14:45,580
flow<font color="#E5E5E5"> but there's an RC that was released</font>

319
00:14:39,910 --> 00:14:48,520
<font color="#E5E5E5">today that fixes that bug</font><font color="#CCCCCC"> Matt Rangel</font>

320
00:14:45,580 --> 00:14:50,410
Tufts University<font color="#CCCCCC"> one thing</font><font color="#E5E5E5"> was very go s</font>

321
00:14:48,520 --> 00:14:53,439
flow is so you could not actually

322
00:14:50,410 --> 00:14:55,270
<font color="#E5E5E5">construct total traffic passed by just</font>

323
00:14:53,440 --> 00:14:56,800
<font color="#CCCCCC">taking a look</font><font color="#E5E5E5"> at all the STL samples</font><font color="#CCCCCC"> I</font>

324
00:14:55,270 --> 00:14:58,300
mean yeah there's<font color="#CCCCCC"> plenty of other ways</font>

325
00:14:56,800 --> 00:15:00,969
<font color="#E5E5E5">to do it but you could not do it using s</font>

326
00:14:58,300 --> 00:15:03,160
flow<font color="#E5E5E5"> specifically right you can't well</font>

327
00:15:00,970 --> 00:15:05,260
you can reconstruct the<font color="#E5E5E5"> total data one</font>

328
00:15:03,160 --> 00:15:06,880
<font color="#CCCCCC">of the fields that it does pass</font><font color="#E5E5E5"> is the</font>

329
00:15:05,260 --> 00:15:09,189
amount<font color="#E5E5E5"> of data that</font><font color="#CCCCCC"> was originally there</font>

330
00:15:06,880 --> 00:15:11,740
before it was sampled so more<font color="#E5E5E5"> than just</font>

331
00:15:09,190 --> 00:15:14,830
<font color="#E5E5E5">knowing about the packets if you happen</font>

332
00:15:11,740 --> 00:15:16,029
to get for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> your one out of a</font>

333
00:15:14,830 --> 00:15:18,520
thousand packets happened to be the

334
00:15:16,029 --> 00:15:21,040
small packet<font color="#E5E5E5"> it still has the counters</font>

335
00:15:18,520 --> 00:15:23,350
<font color="#E5E5E5">for the the original data that came that</font>

336
00:15:21,040 --> 00:15:24,819
was sampled from<font color="#CCCCCC"> the thousand packets</font><font color="#E5E5E5"> so</font>

337
00:15:23,350 --> 00:15:28,770
you can at least reconstruct total

338
00:15:24,820 --> 00:15:28,770
<font color="#CCCCCC">utilization from that alright thank you</font>

339
00:15:34,310 --> 00:15:40,400
anyone else<font color="#CCCCCC"> I think we're good</font>

