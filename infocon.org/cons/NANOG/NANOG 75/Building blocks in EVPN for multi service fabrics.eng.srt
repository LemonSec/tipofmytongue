1
00:00:15,260 --> 00:00:19,480
I talked about

2
00:00:17,020 --> 00:00:21,640
EVP MVX land specifically with a focus

3
00:00:19,480 --> 00:00:23,740
on the building blocks or what I will

4
00:00:21,640 --> 00:00:26,290
call out is building blocks in the EVP

5
00:00:23,740 --> 00:00:29,168
excellent for multiservice fabrics

6
00:00:26,290 --> 00:00:33,339
my name is Aldrin Isaac and I'm with

7
00:00:29,169 --> 00:00:39,879
Juniper Networks I'm also one of the

8
00:00:33,340 --> 00:00:44,739
co-authors of evpn RFC 7432 I've been

9
00:00:39,879 --> 00:00:47,080
involved with evpn before it was evpn so

10
00:00:44,739 --> 00:00:49,809
just get started I ripped this one from

11
00:00:47,080 --> 00:00:52,510
Google slides somewhere you know network

12
00:00:49,809 --> 00:00:56,890
system as a whole is basically composed

13
00:00:52,510 --> 00:00:58,269
of multiple subsystems and one of the

14
00:00:56,890 --> 00:01:01,299
subsystems is a network virtualization

15
00:00:58,269 --> 00:01:04,360
subsystem and that is in the case of

16
00:01:01,299 --> 00:01:05,290
Google its Andromeda and the case of

17
00:01:04,360 --> 00:01:09,130
what we're going to talk about today

18
00:01:05,290 --> 00:01:10,930
it's going to be a VPN right it's more

19
00:01:09,130 --> 00:01:14,140
specifically we're talking about a VPN

20
00:01:10,930 --> 00:01:16,810
in the in the fabric so this is as

21
00:01:14,140 --> 00:01:20,770
opposed to a VPN implemented on compute

22
00:01:16,810 --> 00:01:23,170
nodes or with smart NICs specifically

23
00:01:20,770 --> 00:01:25,390
here it's going to be if you can in the

24
00:01:23,170 --> 00:01:30,310
physical fabric and this is what I refer

25
00:01:25,390 --> 00:01:34,899
to as the multi service fabric all right

26
00:01:30,310 --> 00:01:37,479
quick agenda do a quick recap of EVIC in

27
00:01:34,899 --> 00:01:39,070
fundamentals first five slides I did I'm

28
00:01:37,479 --> 00:01:41,048
not familiar with what the audience

29
00:01:39,070 --> 00:01:43,839
knows or doesn't know so in order to

30
00:01:41,049 --> 00:01:44,890
bring anybody up to speed who needs to

31
00:01:43,840 --> 00:01:47,979
better like be brought up to speed I'm

32
00:01:44,890 --> 00:01:50,289
just gonna do a quick recap forgive me

33
00:01:47,979 --> 00:01:52,600
if you already know this stuff and then

34
00:01:50,289 --> 00:01:54,579
we're going to talk about overlay

35
00:01:52,600 --> 00:01:58,990
options or overlay building blocks if

36
00:01:54,579 --> 00:02:01,389
you will for east-west traffic and then

37
00:01:58,990 --> 00:02:03,999
we will move on to some interesting use

38
00:02:01,389 --> 00:02:06,189
cases I want to cover just just sort of

39
00:02:03,999 --> 00:02:09,310
highlight these some of these building

40
00:02:06,189 --> 00:02:11,739
blocks that we will talk about in Lesson

41
00:02:09,310 --> 00:02:14,500
number two and then lesson number four

42
00:02:11,740 --> 00:02:18,730
we will talk about north-south traffic

43
00:02:14,500 --> 00:02:20,110
flows in using a VPN based service

44
00:02:18,730 --> 00:02:23,859
chains using the building blocks I would

45
00:02:20,110 --> 00:02:25,420
cover in lesson two and then finally if

46
00:02:23,860 --> 00:02:27,430
we have time we'll talk about some

47
00:02:25,420 --> 00:02:29,069
interesting efficient overlay over

48
00:02:27,430 --> 00:02:33,239
application options

49
00:02:29,069 --> 00:02:37,409
in evpn okay some things to note about

50
00:02:33,239 --> 00:02:39,329
this tutorial it's all 100% edpm there's

51
00:02:37,409 --> 00:02:40,469
no mixing with any proprietary

52
00:02:39,329 --> 00:02:43,969
technology

53
00:02:40,469 --> 00:02:48,689
everything here is eat again all you can

54
00:02:43,969 --> 00:02:50,670
second thing is that this is about stuff

55
00:02:48,689 --> 00:02:53,280
that's been implemented is in the

56
00:02:50,670 --> 00:02:55,230
process of being implemented or is

57
00:02:53,280 --> 00:02:57,840
capable of being implemented with the

58
00:02:55,230 --> 00:02:58,950
VPN so because I talk about it I'm

59
00:02:57,840 --> 00:03:01,620
talking about it in a very

60
00:02:58,950 --> 00:03:07,560
vendor-neutral way as a co-author of the

61
00:03:01,620 --> 00:03:09,060
RFC so this is this doesn't mean that

62
00:03:07,560 --> 00:03:10,799
everything you see here is actually

63
00:03:09,060 --> 00:03:13,769
implemented I'm talking about it as a

64
00:03:10,799 --> 00:03:19,260
representative of evpn not as one of a

65
00:03:13,769 --> 00:03:26,430
vendor so I will not go into route and

66
00:03:19,260 --> 00:03:29,608
tunnel header details although some of

67
00:03:26,430 --> 00:03:32,010
this may be straightforward for most of

68
00:03:29,609 --> 00:03:36,840
you guys and for some it might be a

69
00:03:32,010 --> 00:03:38,280
little bit too much detail and the model

70
00:03:36,840 --> 00:03:41,299
that I'm going to be using here for

71
00:03:38,280 --> 00:03:46,620
those of you know is VLAN aware model

72
00:03:41,299 --> 00:03:48,299
the VLAN base model with evpn is you

73
00:03:46,620 --> 00:03:50,639
could consider a subset of the deal and

74
00:03:48,299 --> 00:03:53,069
aware model it's a VLAN aware model with

75
00:03:50,639 --> 00:03:55,019
one VLAN and a few procedural

76
00:03:53,069 --> 00:03:57,629
differences very minor procedural

77
00:03:55,019 --> 00:03:59,639
differences and then as we move forward

78
00:03:57,629 --> 00:04:01,978
I think even from the beginning we'll

79
00:03:59,639 --> 00:04:07,459
probably be moving at a really fast clip

80
00:04:01,979 --> 00:04:10,769
so hopefully I'll keep you guys engaged

81
00:04:07,459 --> 00:04:12,599
alright so um to begin we need to

82
00:04:10,769 --> 00:04:15,419
actually have a reference model so I'm

83
00:04:12,599 --> 00:04:17,760
going to establish one basically for

84
00:04:15,419 --> 00:04:21,449
this tutorial we have this concept of a

85
00:04:17,760 --> 00:04:24,409
tenant and tenant is basically that's

86
00:04:21,449 --> 00:04:29,729
Pepsi coke you know payroll engineering

87
00:04:24,409 --> 00:04:33,120
and the these tenants are composed of

88
00:04:29,729 --> 00:04:36,300
groups of location-independent endpoints

89
00:04:33,120 --> 00:04:39,479
groups are manifest as subnets in for

90
00:04:36,300 --> 00:04:41,170
this tutorial and these subnets are

91
00:04:39,479 --> 00:04:43,479
routed to other subnet

92
00:04:41,170 --> 00:04:47,690
using a disagree writing function and

93
00:04:43,480 --> 00:04:51,020
all intra tenant traffic we will refer

94
00:04:47,690 --> 00:04:53,030
to as east-west traffic so inter sub net

95
00:04:51,020 --> 00:04:54,320
traffic within a tenant and intra subnet

96
00:04:53,030 --> 00:04:57,289
half traffic with an attendant is

97
00:04:54,320 --> 00:05:01,760
east-west so tenants can be routed to

98
00:04:57,290 --> 00:05:05,480
other tenants and to external

99
00:05:01,760 --> 00:05:07,190
destinations and through service

100
00:05:05,480 --> 00:05:10,130
function chains so that's why we talk

101
00:05:07,190 --> 00:05:14,240
about service function chains and this

102
00:05:10,130 --> 00:05:15,950
is what I refer to as north-south so any

103
00:05:14,240 --> 00:05:17,450
extra tenant traffic it to me is

104
00:05:15,950 --> 00:05:18,920
north-south okay at least for this

105
00:05:17,450 --> 00:05:22,280
tutorial that's what we will refer to as

106
00:05:18,920 --> 00:05:26,420
no it's out so tenants and groups are

107
00:05:22,280 --> 00:05:29,299
implemented obviously as overlay virtual

108
00:05:26,420 --> 00:05:30,830
networks I will occasionally refer to

109
00:05:29,300 --> 00:05:32,540
these things that's different things one

110
00:05:30,830 --> 00:05:34,669
thing you might hear me say is l3

111
00:05:32,540 --> 00:05:39,380
virtual networks and l2 virtual networks

112
00:05:34,670 --> 00:05:41,150
or l3 V ends and l2v ends means you know

113
00:05:39,380 --> 00:05:45,820
basically IP and you thin that overlay

114
00:05:41,150 --> 00:05:49,250
networks now the network virtual is this

115
00:05:45,820 --> 00:05:52,520
virtualization edge or nve function

116
00:05:49,250 --> 00:05:54,400
which is referred to as in NV o3 network

117
00:05:52,520 --> 00:05:58,340
virtualization over three working group

118
00:05:54,400 --> 00:06:02,510
can be implemented on the tour or in a

119
00:05:58,340 --> 00:06:05,270
computer or smart Nix and we're going to

120
00:06:02,510 --> 00:06:09,320
be emphasizing implementation in the

121
00:06:05,270 --> 00:06:12,320
physical network and these nve's are

122
00:06:09,320 --> 00:06:14,840
also referred to as provider edge and SP

123
00:06:12,320 --> 00:06:18,409
networks and vite Epson VX LAN networks

124
00:06:14,840 --> 00:06:21,289
which PE stands for I think I said it's

125
00:06:18,410 --> 00:06:24,740
already provider edge and PV type stand

126
00:06:21,290 --> 00:06:27,320
for the excellent tunnel endpoints if I

127
00:06:24,740 --> 00:06:30,650
use the word NV e PE V type all means

128
00:06:27,320 --> 00:06:31,820
the same thing ok so just want to draw

129
00:06:30,650 --> 00:06:34,280
some parallels between the classical

130
00:06:31,820 --> 00:06:36,230
network and evpn we start first with our

131
00:06:34,280 --> 00:06:39,169
V tips that are connected to an IP

132
00:06:36,230 --> 00:06:42,410
fabric in the classical network you have

133
00:06:39,169 --> 00:06:45,650
physical switches in a VPN network

134
00:06:42,410 --> 00:06:49,700
system you have a virtual switch in RFC

135
00:06:45,650 --> 00:06:51,320
7432 lingo it's called a Mac the RF if I

136
00:06:49,700 --> 00:06:52,700
say Mac verify mean virtual switch if I

137
00:06:51,320 --> 00:07:04,460
say virtual switch anaemic

138
00:06:52,700 --> 00:07:06,349
BRF okay so a second in the physical

139
00:07:04,460 --> 00:07:10,880
switch we have VLANs EMI on tables

140
00:07:06,350 --> 00:07:12,920
specifically in the ET pin no a network

141
00:07:10,880 --> 00:07:17,030
system within a virtual switch you have

142
00:07:12,920 --> 00:07:19,760
VLAN tables as well same thing in the

143
00:07:17,030 --> 00:07:22,419
physics classical network you have VLAN

144
00:07:19,760 --> 00:07:26,330
trunks connecting the physical switches

145
00:07:22,420 --> 00:07:29,240
with VLAN channels connecting the VLAN

146
00:07:26,330 --> 00:07:31,010
tables between the across the physical

147
00:07:29,240 --> 00:07:34,850
switches creating an adjacency between

148
00:07:31,010 --> 00:07:37,820
those tables in the EPP Network you have

149
00:07:34,850 --> 00:07:40,580
the excellent tunnels connecting the

150
00:07:37,820 --> 00:07:43,310
virtual switches and you can with these

151
00:07:40,580 --> 00:07:46,039
tags called the nice virtual network IDs

152
00:07:43,310 --> 00:07:51,050
that kind of are the corollary between

153
00:07:46,040 --> 00:07:52,970
the the classical networks VLAN trunks

154
00:07:51,050 --> 00:07:56,090
right so you can think of a vehicle and

155
00:07:52,970 --> 00:08:00,680
tunnels as sort of what the same as the

156
00:07:56,090 --> 00:08:04,729
VLAN trunks that connect the VLAN tables

157
00:08:00,680 --> 00:08:08,180
together okay actually going to go back

158
00:08:04,730 --> 00:08:10,490
one second the learning in the physical

159
00:08:08,180 --> 00:08:13,010
switch between the line tables it

160
00:08:10,490 --> 00:08:15,140
happens in the data plane and through

161
00:08:13,010 --> 00:08:18,110
flood and learn in EDP an has done the

162
00:08:15,140 --> 00:08:19,880
control plane routes are exchanged

163
00:08:18,110 --> 00:08:26,030
routing information exchanged between

164
00:08:19,880 --> 00:08:27,830
between tables using BGP and along with

165
00:08:26,030 --> 00:08:29,929
those routes are the information

166
00:08:27,830 --> 00:08:35,090
necessary for the tunneling

167
00:08:29,930 --> 00:08:37,250
encapsulation like via nice and then in

168
00:08:35,090 --> 00:08:40,640
the classical network you have physical

169
00:08:37,250 --> 00:08:45,530
routers with connected by physical ports

170
00:08:40,640 --> 00:08:50,900
with OSPF or BGP to use for route

171
00:08:45,530 --> 00:08:53,420
exchange and in the eb pin network you

172
00:08:50,900 --> 00:08:54,410
have virtual routers that are exchanging

173
00:08:53,420 --> 00:08:58,280
routing information with each other

174
00:08:54,410 --> 00:09:01,189
using the NP bgp control plane or over

175
00:08:58,280 --> 00:09:02,930
beach P right and then finally you have

176
00:09:01,190 --> 00:09:04,850
a connection between the routed Network

177
00:09:02,930 --> 00:09:07,488
and the bridge network

178
00:09:04,850 --> 00:09:11,029
on the right with a physical interface

179
00:09:07,489 --> 00:09:13,809
on the left using integrated routing and

180
00:09:11,029 --> 00:09:16,309
bridging interface and you can see

181
00:09:13,809 --> 00:09:18,679
there's a lot of correlation between

182
00:09:16,309 --> 00:09:21,829
your classical network and your a VPN

183
00:09:18,679 --> 00:09:24,319
network you know to some degree almost

184
00:09:21,829 --> 00:09:25,728
one on one - the fact that there's

185
00:09:24,319 --> 00:09:28,549
control plane learning on one side and

186
00:09:25,729 --> 00:09:29,720
data plan learning and additionally the

187
00:09:28,549 --> 00:09:32,419
classical network is considered single

188
00:09:29,720 --> 00:09:34,669
tenant and a VPN network system is multi

189
00:09:32,419 --> 00:09:36,949
tenant okay

190
00:09:34,669 --> 00:09:40,639
for those of you aren't familiar with

191
00:09:36,949 --> 00:09:42,349
BGP be ice VPNs just a quick overview we

192
00:09:40,639 --> 00:09:45,019
have our V chap

193
00:09:42,350 --> 00:09:47,299
it has a BGP component specifically a

194
00:09:45,019 --> 00:09:50,929
multi-protocol BGP component that

195
00:09:47,299 --> 00:09:53,419
implements a VPN and then you have the

196
00:09:50,929 --> 00:09:55,429
same thing on other V types and they

197
00:09:53,419 --> 00:09:59,059
exchange in routing information with

198
00:09:55,429 --> 00:10:00,769
each other either through direct pairing

199
00:09:59,059 --> 00:10:04,100
or preferably through a route reflector

200
00:10:00,769 --> 00:10:08,569
which simplifies the configuration and

201
00:10:04,100 --> 00:10:13,699
then we add to that the we add to that

202
00:10:08,569 --> 00:10:16,849
the the the tables that we just spoke of

203
00:10:13,699 --> 00:10:19,969
in our previous slide the V RFS and the

204
00:10:16,850 --> 00:10:22,999
Mac V RFS and the corresponding l2

205
00:10:19,970 --> 00:10:28,339
tables within those mac brf's we assign

206
00:10:22,999 --> 00:10:30,169
these tables IDs data plane IDs say 100

207
00:10:28,339 --> 00:10:32,689
and 200 in this case for VX on V and

208
00:10:30,169 --> 00:10:35,209
eyes and an Ethernet tag and typically

209
00:10:32,689 --> 00:10:37,309
in the VX LAN network you just as a sign

210
00:10:35,209 --> 00:10:39,858
the V and I the exelon V and I and the

211
00:10:37,309 --> 00:10:42,679
tag is set to the same value and there's

212
00:10:39,859 --> 00:10:48,249
also a the X line tag associated to the

213
00:10:42,679 --> 00:10:51,079
v RF as well and now you export the

214
00:10:48,249 --> 00:10:57,079
routing information that's local using

215
00:10:51,079 --> 00:11:02,659
MP BGP to other V tips and the way you

216
00:10:57,079 --> 00:11:05,449
do this is by associating a what's

217
00:11:02,659 --> 00:11:08,269
called a route target like a topic ID on

218
00:11:05,449 --> 00:11:14,439
your routes and importing routes from

219
00:11:08,269 --> 00:11:18,110
other the chaps with route target IDs

220
00:11:14,439 --> 00:11:21,349
that you are interested in typically

221
00:11:18,110 --> 00:11:23,150
in the general case what you export and

222
00:11:21,350 --> 00:11:25,370
what you import are the same value right

223
00:11:23,150 --> 00:11:28,189
and that gives you what we refer to as

224
00:11:25,370 --> 00:11:29,630
full mesh VPNs right and the process of

225
00:11:28,190 --> 00:11:33,170
exporting and importing routes you

226
00:11:29,630 --> 00:11:37,760
populate your routing tables your

227
00:11:33,170 --> 00:11:39,620
fording tables your l3 VPN IP routes in

228
00:11:37,760 --> 00:11:42,680
your vr af-s sale to routes in your mac

229
00:11:39,620 --> 00:11:44,500
vrf and the information that you need

230
00:11:42,680 --> 00:11:46,579
with those routes corresponding to the

231
00:11:44,500 --> 00:11:48,920
the tonal information you need the

232
00:11:46,580 --> 00:11:50,870
correspond to those routes just average

233
00:11:48,920 --> 00:11:52,400
the tunnels and then l1 routes which

234
00:11:50,870 --> 00:11:56,290
we'll talk about really quickly in the

235
00:11:52,400 --> 00:12:01,010
next slide and this gives you your

236
00:11:56,290 --> 00:12:05,709
overlay VPNs okay so we talked about

237
00:12:01,010 --> 00:12:10,310
route types first by layer so evpn has

238
00:12:05,710 --> 00:12:12,560
some route types for l2 tattoo mac IP

239
00:12:10,310 --> 00:12:16,400
routes or unicast specifically that is

240
00:12:12,560 --> 00:12:21,109
mac only and Mac plus IP routes type

241
00:12:16,400 --> 00:12:22,520
three is for a bum and it's called the

242
00:12:21,110 --> 00:12:26,120
inclusive multicast Heath in a tag route

243
00:12:22,520 --> 00:12:28,189
so if I say inclusive I mean everybody

244
00:12:26,120 --> 00:12:30,440
gets it and then type six is for

245
00:12:28,190 --> 00:12:32,480
selective so only the folks that are

246
00:12:30,440 --> 00:12:35,960
interested well cover type six a little

247
00:12:32,480 --> 00:12:40,910
bit more in detail towards the end then

248
00:12:35,960 --> 00:12:42,290
we have the l3 routes IP routes namely

249
00:12:40,910 --> 00:12:44,030
the type five routes there's two forms

250
00:12:42,290 --> 00:12:46,160
of it we're going to cover the birth to

251
00:12:44,030 --> 00:12:47,829
verb form there's actually a Mac - Mac -

252
00:12:46,160 --> 00:12:50,150
Mac perform which is the original form

253
00:12:47,830 --> 00:12:53,870
the verb depart form was introduced

254
00:12:50,150 --> 00:12:55,510
later and for this tutorial we're just

255
00:12:53,870 --> 00:13:03,830
going to cover the birth to her form of

256
00:12:55,510 --> 00:13:05,780
type five routes and these routes that I

257
00:13:03,830 --> 00:13:08,450
highlighted are kind of like layer two

258
00:13:05,780 --> 00:13:10,160
and a half if you will the Mac plus IP

259
00:13:08,450 --> 00:13:12,290
route is used for our proxy and you know

260
00:13:10,160 --> 00:13:15,170
the ARP is sort of a layer two in that

261
00:13:12,290 --> 00:13:18,500
function and then you know type six is

262
00:13:15,170 --> 00:13:20,060
you can think of type six as a IGP

263
00:13:18,500 --> 00:13:21,200
snooping supporting igmp snooping which

264
00:13:20,060 --> 00:13:25,790
is kind of a two and a half function as

265
00:13:21,200 --> 00:13:26,870
well and then the Mac - Mac - Mac birf

266
00:13:25,790 --> 00:13:29,839
is sort of a two and a half as well

267
00:13:26,870 --> 00:13:31,730
we're not going to cover that one now

268
00:13:29,840 --> 00:13:35,180
the last category of routes is that

269
00:13:31,730 --> 00:13:38,149
one routes this is unique to evpn that

270
00:13:35,180 --> 00:13:44,149
actually trades routes related that are

271
00:13:38,149 --> 00:13:47,329
basically about the interfaces and yeah

272
00:13:44,149 --> 00:13:48,769
there is some additional detail which

273
00:13:47,329 --> 00:13:51,859
I'm not going to cover here but as you

274
00:13:48,769 --> 00:13:55,579
can see there in evpn there is L 1 all

275
00:13:51,860 --> 00:13:57,709
the way to L 3 right and that's one of

276
00:13:55,579 --> 00:14:00,949
the interesting things about evpn versus

277
00:13:57,709 --> 00:14:05,479
others there is a very nice integration

278
00:14:00,949 --> 00:14:11,569
between these layers any VPN right and

279
00:14:05,480 --> 00:14:13,250
that's sort of what makes it as robust

280
00:14:11,570 --> 00:14:19,490
as it is it actually takes into account

281
00:14:13,250 --> 00:14:21,949
that the relationship between layers now

282
00:14:19,490 --> 00:14:23,570
same route types looked at a different

283
00:14:21,949 --> 00:14:25,939
way so there's four route types for

284
00:14:23,570 --> 00:14:29,510
unicast and six route types for

285
00:14:25,940 --> 00:14:33,620
replication right one thing that I will

286
00:14:29,510 --> 00:14:34,850
want you to note is you know if you

287
00:14:33,620 --> 00:14:37,459
don't need multihoming you don't need

288
00:14:34,850 --> 00:14:40,250
the multihoming routes right if you

289
00:14:37,459 --> 00:14:42,050
don't need you know replication you

290
00:14:40,250 --> 00:14:44,300
don't need the replication routes so

291
00:14:42,050 --> 00:14:47,959
there is an aspect of evpn that you may

292
00:14:44,300 --> 00:14:49,790
not see in implementations where it is

293
00:14:47,959 --> 00:14:52,160
one of the goals of evpn was to be

294
00:14:49,790 --> 00:14:54,380
policy based so you can actually craft

295
00:14:52,160 --> 00:14:56,329
quite some interesting scenarios with

296
00:14:54,380 --> 00:14:59,180
evpn by what you trade and what you

297
00:14:56,329 --> 00:15:01,279
don't trade with other v-chips right and

298
00:14:59,180 --> 00:15:08,959
we'll cover some of that those concepts

299
00:15:01,279 --> 00:15:10,579
today right so yeah these routes are

300
00:15:08,959 --> 00:15:12,199
basically and the procedures around

301
00:15:10,579 --> 00:15:14,750
these routes are they basically form the

302
00:15:12,199 --> 00:15:17,630
primitives of the building blocks that

303
00:15:14,750 --> 00:15:20,029
we're going to cover next in our

304
00:15:17,630 --> 00:15:23,060
tutorial and so with that we're we're

305
00:15:20,029 --> 00:15:26,990
done with the basics and we're going to

306
00:15:23,060 --> 00:15:30,579
talk about different for overlay service

307
00:15:26,990 --> 00:15:32,990
models which will be the basically the

308
00:15:30,579 --> 00:15:36,910
form of building blocks for our

309
00:15:32,990 --> 00:15:39,890
subsequent discussions lessons as well

310
00:15:36,910 --> 00:15:42,800
the first one is pure bridging it's very

311
00:15:39,890 --> 00:15:43,910
basic we're doing only using here the

312
00:15:42,800 --> 00:15:46,250
type type

313
00:15:43,910 --> 00:15:50,719
I'm sorry the lair to route types that

314
00:15:46,250 --> 00:15:53,740
we spoke of in earlier slide and for

315
00:15:50,720 --> 00:15:57,340
this one we're using the type to Mack

316
00:15:53,740 --> 00:16:00,140
only route and the type three route for

317
00:15:57,340 --> 00:16:04,220
inclusive multicast replication which is

318
00:16:00,140 --> 00:16:07,490
basically for broadcast and then

319
00:16:04,220 --> 00:16:09,860
obviously the VX land as we spoke this

320
00:16:07,490 --> 00:16:11,390
is this is just the the basic basic

321
00:16:09,860 --> 00:16:13,040
building block so we're gonna we're

322
00:16:11,390 --> 00:16:16,100
gonna build on this in the next two

323
00:16:13,040 --> 00:16:18,500
overlays models if you want to do

324
00:16:16,100 --> 00:16:23,030
routing well you're gonna have to do it

325
00:16:18,500 --> 00:16:24,380
with an external gateway right and but

326
00:16:23,030 --> 00:16:28,100
interestingly and we could talk about

327
00:16:24,380 --> 00:16:32,630
this in the next two slides you know in

328
00:16:28,100 --> 00:16:35,210
in after the next slide actually you can

329
00:16:32,630 --> 00:16:38,450
do our suppression with LT only overlays

330
00:16:35,210 --> 00:16:41,720
and for that we're gonna you add the Mac

331
00:16:38,450 --> 00:16:47,810
plus IP route okay a little bit of

332
00:16:41,720 --> 00:16:51,440
detail here yeah we have here leaf one

333
00:16:47,810 --> 00:16:54,979
and leave to we're gonna you know add

334
00:16:51,440 --> 00:16:57,110
the Mac vrf or a tenant T add the VLANs

335
00:16:54,980 --> 00:17:05,599
if you don't want to rely to for tenant

336
00:16:57,110 --> 00:17:08,690
e we are going to set up a ll to VPN or

337
00:17:05,599 --> 00:17:14,000
policy to exchange routes between these

338
00:17:08,690 --> 00:17:16,010
Mac V RFS so that policy is going to

339
00:17:14,000 --> 00:17:22,780
cover both VLANs

340
00:17:16,010 --> 00:17:25,220
VLAN 1 and VLAN 2 and so basically this

341
00:17:22,780 --> 00:17:28,280
is what we call an e VI

342
00:17:25,220 --> 00:17:30,890
so if I use the word Evi in the context

343
00:17:28,280 --> 00:17:32,510
of a tenant it's not just one VLAN it's

344
00:17:30,890 --> 00:17:34,580
basically all the VLANs of a tenant

345
00:17:32,510 --> 00:17:36,230
right and it can all the villains of a

346
00:17:34,580 --> 00:17:39,320
tenant can be described in one policy

347
00:17:36,230 --> 00:17:40,540
that is implemented at the Mac vrf level

348
00:17:39,320 --> 00:17:44,510
right

349
00:17:40,540 --> 00:17:48,590
so yeah just note when I use the word

350
00:17:44,510 --> 00:17:52,129
Evi it covers all all the villains that

351
00:17:48,590 --> 00:17:56,230
are participating in a tenant and

352
00:17:52,130 --> 00:18:00,070
configured within the Mac VRS

353
00:17:56,230 --> 00:18:03,519
now the to route types as I said were

354
00:18:00,070 --> 00:18:05,260
type two and type three now we have the

355
00:18:03,519 --> 00:18:08,440
routing information that's been

356
00:18:05,260 --> 00:18:12,399
exchanged between those Mac V ahrefs and

357
00:18:08,440 --> 00:18:15,100
used to populate the VLAN tables along

358
00:18:12,399 --> 00:18:17,289
with the the NIH's of those VLAN tables

359
00:18:15,100 --> 00:18:20,678
so we can we can transport packets

360
00:18:17,289 --> 00:18:25,690
between tables using the X line okay

361
00:18:20,679 --> 00:18:26,919
so before I get into the next two

362
00:18:25,690 --> 00:18:28,720
service types which are integrated

363
00:18:26,919 --> 00:18:31,450
routing and bridging overlay service

364
00:18:28,720 --> 00:18:33,190
types we'll talk about our proxy because

365
00:18:31,450 --> 00:18:38,889
they're important component of the next

366
00:18:33,190 --> 00:18:41,080
two types so our proxy is used for two

367
00:18:38,889 --> 00:18:45,029
functions namely ARP table

368
00:18:41,080 --> 00:18:48,549
synchronization and our ARP suppression

369
00:18:45,029 --> 00:18:49,720
so before I describe what ARP table

370
00:18:48,549 --> 00:18:52,769
synchronization is let me describe what

371
00:18:49,720 --> 00:18:55,809
how our tables are populated in

372
00:18:52,769 --> 00:18:57,880
traditional routed networks if you have

373
00:18:55,809 --> 00:19:00,428
a subnet and there's say two gateways in

374
00:18:57,880 --> 00:19:03,460
the subnet the way the tables populate

375
00:19:00,429 --> 00:19:05,260
is when a external packet is being

376
00:19:03,460 --> 00:19:06,760
forwarded into a subnet by a gateway if

377
00:19:05,260 --> 00:19:09,129
it doesn't have an ARP entry it doesn't

378
00:19:06,760 --> 00:19:10,840
Mac for that particular IP it sends it

379
00:19:09,130 --> 00:19:13,899
an ARP request it gets in our response

380
00:19:10,840 --> 00:19:16,870
in a popular taup table the second

381
00:19:13,899 --> 00:19:19,899
gateway that we just described it it has

382
00:19:16,870 --> 00:19:23,080
no idea the first gateway and you know

383
00:19:19,899 --> 00:19:25,090
create an ARP table entry and so it's

384
00:19:23,080 --> 00:19:26,830
our table it doesn't have an opportunity

385
00:19:25,090 --> 00:19:29,860
for that same host until a packet

386
00:19:26,830 --> 00:19:31,629
arrives on the second gateway to to be

387
00:19:29,860 --> 00:19:33,250
forwarded to the same host and then it

388
00:19:31,630 --> 00:19:37,029
sends out at our request and it

389
00:19:33,250 --> 00:19:40,120
populates ARP table any VPN it's very

390
00:19:37,029 --> 00:19:43,679
different these are tables are actually

391
00:19:40,120 --> 00:19:46,000
sort of pre-populated and the way there

392
00:19:43,679 --> 00:19:48,549
and they're populated all at the same

393
00:19:46,000 --> 00:19:50,679
time the way they're populated is that

394
00:19:48,549 --> 00:19:56,460
the leaf V tips at the bottom are

395
00:19:50,679 --> 00:20:00,880
snooping ARP and they basically extract

396
00:19:56,460 --> 00:20:02,529
IP mac bindings from the sender field of

397
00:20:00,880 --> 00:20:04,000
our ProQuest's and ARPA responses and

398
00:20:02,529 --> 00:20:08,010
they send it in the control plane as Mac

399
00:20:04,000 --> 00:20:09,480
plus IP routes all the V tips

400
00:20:08,010 --> 00:20:15,480
participating

401
00:20:09,480 --> 00:20:18,750
in a subnet you know store that Mac IP

402
00:20:15,480 --> 00:20:20,429
binding animatic ID binding table any

403
00:20:18,750 --> 00:20:23,429
integrated gateways like the ones at the

404
00:20:20,429 --> 00:20:26,130
top take those bindings and install them

405
00:20:23,429 --> 00:20:28,350
in their arpund our ARP tables and if

406
00:20:26,130 --> 00:20:29,490
you have two gateways integrated

407
00:20:28,350 --> 00:20:31,408
gateways they're both getting their ARP

408
00:20:29,490 --> 00:20:34,950
tables updated at the same time if you

409
00:20:31,409 --> 00:20:36,330
have for all four eight all eight and so

410
00:20:34,950 --> 00:20:43,159
on so they're all getting synchronized

411
00:20:36,330 --> 00:20:46,740
at the same time yeah

412
00:20:43,159 --> 00:20:51,480
now ARP sync suppression uses basically

413
00:20:46,740 --> 00:20:54,990
the same machinery so that that Mac plus

414
00:20:51,480 --> 00:20:58,710
IP information advertised in the Mac

415
00:20:54,990 --> 00:21:02,780
plus IP route is also like I said stored

416
00:20:58,710 --> 00:21:03,950
in a Mac plus IP binding table for that

417
00:21:02,780 --> 00:21:12,269
[Music]

418
00:21:03,950 --> 00:21:18,120
for a particular broadcast domain and so

419
00:21:12,269 --> 00:21:20,460
if a remote AV tape that receives a ARP

420
00:21:18,120 --> 00:21:24,029
request locally from a local end system

421
00:21:20,460 --> 00:21:28,010
will respond to the will intercept our

422
00:21:24,029 --> 00:21:30,809
ProQuest right and respond to the

423
00:21:28,010 --> 00:21:35,279
requester locally by generating an ARP

424
00:21:30,809 --> 00:21:38,908
response locally and by doing so it

425
00:21:35,279 --> 00:21:41,549
doesn't broadcast it there are requests

426
00:21:38,909 --> 00:21:48,510
across that at the broadcast domain

427
00:21:41,549 --> 00:21:53,070
across the subnet you know so now if it

428
00:21:48,510 --> 00:21:54,870
doesn't have the IP Mac binding entry it

429
00:21:53,070 --> 00:21:58,470
will just reenact the packet and let it

430
00:21:54,870 --> 00:22:00,870
flood okay and when the response comes

431
00:21:58,470 --> 00:22:02,880
back if a response come back the V tap

432
00:22:00,870 --> 00:22:05,908
that's closest to the responder will

433
00:22:02,880 --> 00:22:08,519
take the ARP response extract the macro

434
00:22:05,909 --> 00:22:10,769
scipy binding from its center field and

435
00:22:08,519 --> 00:22:11,970
it advertising the control plane and

436
00:22:10,769 --> 00:22:16,530
that will be the last time that that

437
00:22:11,970 --> 00:22:17,690
thing will get broadcast again right so

438
00:22:16,530 --> 00:22:21,860
[Music]

439
00:22:17,690 --> 00:22:23,900
yeah there used to be a working group in

440
00:22:21,860 --> 00:22:25,250
our MD address resolution of mega

441
00:22:23,900 --> 00:22:28,670
datacenters because it was such a huge

442
00:22:25,250 --> 00:22:30,950
problem in in mega data centers and evpn

443
00:22:28,670 --> 00:22:32,590
just basically addresses this issue for

444
00:22:30,950 --> 00:22:38,179
for everybody with our suppression

445
00:22:32,590 --> 00:22:44,059
capability I'm going to skip this one so

446
00:22:38,179 --> 00:22:45,620
there is an additional you know feature

447
00:22:44,059 --> 00:22:49,490
I guess you can add to it which is the

448
00:22:45,620 --> 00:22:54,709
support for gratuitous ARP what I spoke

449
00:22:49,490 --> 00:22:56,480
of before the the leaf V tap you know

450
00:22:54,710 --> 00:22:58,070
extract somatic IP binding from an our

451
00:22:56,480 --> 00:22:59,990
request response sends in the control

452
00:22:58,070 --> 00:23:01,309
plane the remote V Tepes they just

453
00:22:59,990 --> 00:23:04,280
installed it in their table they don't

454
00:23:01,309 --> 00:23:05,990
refloated or anything they just don't a

455
00:23:04,280 --> 00:23:08,809
table and wait for our proquest to come

456
00:23:05,990 --> 00:23:11,000
in and they respond right well I'm gonna

457
00:23:08,809 --> 00:23:12,950
comes to gratuitous ARP if you do if you

458
00:23:11,000 --> 00:23:15,710
do that and you don't flood it what

459
00:23:12,950 --> 00:23:17,150
happens is you know the systems there's

460
00:23:15,710 --> 00:23:19,429
a legitimate reason why it needs to be

461
00:23:17,150 --> 00:23:20,750
flooded and you know everyone all the V

462
00:23:19,429 --> 00:23:22,100
tips are holding on to the mac IP

463
00:23:20,750 --> 00:23:25,070
bindings and they're floating it right

464
00:23:22,100 --> 00:23:27,678
so with gratuitous ARP you you know

465
00:23:25,070 --> 00:23:30,080
whenever a there's a binding change a

466
00:23:27,679 --> 00:23:32,059
new binding or a binding change the

467
00:23:30,080 --> 00:23:34,610
remote V tips will actually just reef

468
00:23:32,059 --> 00:23:37,040
Lud it from the control plane back into

469
00:23:34,610 --> 00:23:43,189
the to local end systems participating

470
00:23:37,040 --> 00:23:45,049
in the subnet and you know the systems

471
00:23:43,190 --> 00:23:49,610
the modern modern operating systems

472
00:23:45,049 --> 00:23:52,040
basically ignore ARP gratuitous Arps

473
00:23:49,610 --> 00:23:53,719
that they do not have an existing

474
00:23:52,040 --> 00:23:55,399
binding for if they had not asked for

475
00:23:53,720 --> 00:23:58,669
that are country they were just quietly

476
00:23:55,400 --> 00:24:01,250
ignore it right so it doesn't you know

477
00:23:58,669 --> 00:24:02,990
the old in the old days you would you

478
00:24:01,250 --> 00:24:03,950
could build up ARP tables massive ARP

479
00:24:02,990 --> 00:24:05,510
tables and have problems for yourself

480
00:24:03,950 --> 00:24:08,030
but the newer systems was just ignored

481
00:24:05,510 --> 00:24:10,280
if it hadn't requested for an ARP entry

482
00:24:08,030 --> 00:24:11,899
earlier right so this is not actually

483
00:24:10,280 --> 00:24:15,590
not a problem in modern operating

484
00:24:11,900 --> 00:24:18,020
systems and we'll we'll we'll use this

485
00:24:15,590 --> 00:24:19,580
you know in our example section for

486
00:24:18,020 --> 00:24:26,200
something interesting

487
00:24:19,580 --> 00:24:28,939
VIP mobility mobility in bridged mode a

488
00:24:26,200 --> 00:24:33,650
wi-fi's via mobility all of these use

489
00:24:28,940 --> 00:24:35,779
gratuitous are quite liberally okay

490
00:24:33,650 --> 00:24:39,019
so with that we're going to start our

491
00:24:35,779 --> 00:24:41,719
second overlay type which is centrally

492
00:24:39,019 --> 00:24:44,539
routed bridging and centrally routed

493
00:24:41,719 --> 00:24:48,399
bridging as its name implies the routing

494
00:24:44,539 --> 00:24:51,320
happens at some central point so and

495
00:24:48,399 --> 00:24:57,590
whichever point is implementing the

496
00:24:51,320 --> 00:24:59,479
central routing that that the Mac and IP

497
00:24:57,590 --> 00:25:01,869
addresses for each subnet and should be

498
00:24:59,479 --> 00:25:01,869
the same

499
00:25:02,739 --> 00:25:09,139
the I'm going to refer to this central

500
00:25:05,359 --> 00:25:10,999
routing point as the CRB gateway just

501
00:25:09,139 --> 00:25:13,668
because the rest of it it's kind of a

502
00:25:10,999 --> 00:25:16,129
mouthful so just if you say if I say CRP

503
00:25:13,669 --> 00:25:18,349
I mean central rada bridging so CRP

504
00:25:16,129 --> 00:25:20,178
gateways can be placed anywhere it

505
00:25:18,349 --> 00:25:22,839
doesn't it could be on a server it could

506
00:25:20,179 --> 00:25:24,830
be you know in a spine it could be

507
00:25:22,839 --> 00:25:28,428
wherever right

508
00:25:24,830 --> 00:25:30,830
there's no placement rules as long as

509
00:25:28,429 --> 00:25:35,349
it's within the the domain of the V

510
00:25:30,830 --> 00:25:40,099
excellent tunnel CRB access which is

511
00:25:35,349 --> 00:25:43,129
implemented on the leaves that n systems

512
00:25:40,099 --> 00:25:45,289
connect you just are just performing

513
00:25:43,129 --> 00:25:46,728
bridging exactly the way the pure

514
00:25:45,289 --> 00:25:49,489
bridging that we spoke of nothing

515
00:25:46,729 --> 00:25:51,589
different exactly the same thing so the

516
00:25:49,489 --> 00:25:53,419
only thing we added on top of the pure

517
00:25:51,589 --> 00:25:59,749
bridging was someplace in the network

518
00:25:53,419 --> 00:26:02,929
which is providing routing right so that

519
00:25:59,749 --> 00:26:06,919
that CRB gateway will advertise its Mac

520
00:26:02,929 --> 00:26:10,070
plus IP Mac and Mac OS IP as type to Mac

521
00:26:06,919 --> 00:26:11,929
only America plus IP routes and so all

522
00:26:10,070 --> 00:26:16,639
these of e-types will know okay this Mac

523
00:26:11,929 --> 00:26:20,299
Mac IP is over there and and it can

524
00:26:16,639 --> 00:26:22,968
forward Mac by it for my own Mac to to

525
00:26:20,299 --> 00:26:25,309
the to the Gateway for packets that need

526
00:26:22,969 --> 00:26:26,869
to go to the Gateway and it forwards you

527
00:26:25,309 --> 00:26:33,139
know directly to other V tips for other

528
00:26:26,869 --> 00:26:34,668
Macs and also has a Mac plus IP for ARP

529
00:26:33,139 --> 00:26:39,468
synchronization of the gateways as well

530
00:26:34,669 --> 00:26:41,089
as ARP suppression we just spoke of so

531
00:26:39,469 --> 00:26:43,099
some of you are probably familiar with

532
00:26:41,089 --> 00:26:46,220
distributed inter subnet routing in

533
00:26:43,099 --> 00:26:47,689
bridging we I will refer to that as edge

534
00:26:46,220 --> 00:26:51,770
routed bridging

535
00:26:47,690 --> 00:26:54,830
less of a mouthful you may ask well what

536
00:26:51,770 --> 00:26:56,780
do we need CRV why not air be there are

537
00:26:54,830 --> 00:26:58,750
use cases for it for example the CRV

538
00:26:56,780 --> 00:27:03,410
might be a gateway might be implemented

539
00:26:58,750 --> 00:27:05,350
on a firewall right and you can't do

540
00:27:03,410 --> 00:27:08,420
what the firewall does on leaf switches

541
00:27:05,350 --> 00:27:12,020
right you can also it may be that the

542
00:27:08,420 --> 00:27:13,700
CRB gateway has better a CL scale and it

543
00:27:12,020 --> 00:27:17,360
or it's implement some other type of

544
00:27:13,700 --> 00:27:20,390
function that's useful little detail we

545
00:27:17,360 --> 00:27:23,149
start with the peer bridging exactly the

546
00:27:20,390 --> 00:27:26,300
same we can do intra subnet with pure

547
00:27:23,150 --> 00:27:28,250
bridging we add a gateway you know we

548
00:27:26,300 --> 00:27:34,760
add the Mac vera for the tenant we

549
00:27:28,250 --> 00:27:36,980
joined the tenancy VI we add a vrf at

550
00:27:34,760 --> 00:27:38,240
the gateway and connect the vrf to the

551
00:27:36,980 --> 00:27:41,260
subnets with integrated routing and

552
00:27:38,240 --> 00:27:45,080
bridging and now we have inter sub net

553
00:27:41,260 --> 00:27:47,500
routing at the gateway and that's

554
00:27:45,080 --> 00:27:49,909
basically it

555
00:27:47,500 --> 00:27:52,730
the third overlay model is the edge

556
00:27:49,910 --> 00:27:55,040
router bridging in nature out of

557
00:27:52,730 --> 00:27:58,130
bridging we move the routing function

558
00:27:55,040 --> 00:28:00,889
from central point all the way to all

559
00:27:58,130 --> 00:28:03,290
the leafy tips where the tenants and

560
00:28:00,890 --> 00:28:05,360
systems are connected so our tenon brf's

561
00:28:03,290 --> 00:28:08,840
are pretty much everywhere where we're

562
00:28:05,360 --> 00:28:10,580
tenant end systems are connected and all

563
00:28:08,840 --> 00:28:16,030
these gateways for every subnet needs to

564
00:28:10,580 --> 00:28:19,669
have a the same Mac an IP for the Stork

565
00:28:16,030 --> 00:28:23,389
there's two forms of azure bridging

566
00:28:19,670 --> 00:28:28,970
there's the asymmetric form exactly same

567
00:28:23,390 --> 00:28:33,170
route types as CRB requires the Mac plus

568
00:28:28,970 --> 00:28:35,960
IP route for ARP synchronization for for

569
00:28:33,170 --> 00:28:40,850
intercept net forwarding the drawbacks

570
00:28:35,960 --> 00:28:43,370
of this approach is that it you know you

571
00:28:40,850 --> 00:28:48,070
need the VLAN of the tenant everywhere

572
00:28:43,370 --> 00:28:51,739
where the tenants vrf is configured so

573
00:28:48,070 --> 00:28:55,340
that's a big drawback so I will talk

574
00:28:51,740 --> 00:28:58,290
about type five based symmetric ER B

575
00:28:55,340 --> 00:29:00,870
this is a form of symmetric air B so

576
00:28:58,290 --> 00:29:01,680
form that that we implement you know

577
00:29:00,870 --> 00:29:03,840
there's some room

578
00:29:01,680 --> 00:29:05,730
you know I guess foot out there that

579
00:29:03,840 --> 00:29:10,199
Jennifer doesn't implement symmetric we

580
00:29:05,730 --> 00:29:11,990
implement type five symmetric and this

581
00:29:10,200 --> 00:29:14,790
is different from the type two symmetric

582
00:29:11,990 --> 00:29:16,290
so type five symmetric uses type five

583
00:29:14,790 --> 00:29:27,720
routes to do symmetric inter summit

584
00:29:16,290 --> 00:29:32,909
routing and basically how this works is

585
00:29:27,720 --> 00:29:35,010
that locally learned ARP entries are in

586
00:29:32,910 --> 00:29:36,420
the IP from the locally learned our pet

587
00:29:35,010 --> 00:29:38,310
entries are imported into the ribbon

588
00:29:36,420 --> 00:29:41,700
advertised as host routes entire as type

589
00:29:38,310 --> 00:29:47,940
five host routes and they're imported by

590
00:29:41,700 --> 00:29:51,870
all of the brf's of a tenant advantages

591
00:29:47,940 --> 00:29:53,880
is that by the way that type the type

592
00:29:51,870 --> 00:29:57,239
two Mac plus IP rod is still used it's

593
00:29:53,880 --> 00:29:59,640
but it's used for our suppression now

594
00:29:57,240 --> 00:30:00,990
the advantages of the symmetric approach

595
00:29:59,640 --> 00:30:04,290
is that you don't need to configure that

596
00:30:00,990 --> 00:30:05,400
the VLAN of the tenant everywhere that

597
00:30:04,290 --> 00:30:09,300
where the verve of the tenant is

598
00:30:05,400 --> 00:30:13,140
configured and that means it's much more

599
00:30:09,300 --> 00:30:16,550
scalable so a little quick detail we

600
00:30:13,140 --> 00:30:20,070
start with again with the pure bridging

601
00:30:16,550 --> 00:30:22,379
service model and then we add the vrf to

602
00:30:20,070 --> 00:30:26,010
all the leaves for the tenant vrf to all

603
00:30:22,380 --> 00:30:29,490
the leaves now we have local inter

604
00:30:26,010 --> 00:30:31,680
subnet routing with the type two Mac

605
00:30:29,490 --> 00:30:34,620
plus IP route ARP table synchronization

606
00:30:31,680 --> 00:30:38,220
we have inter subnet routing between

607
00:30:34,620 --> 00:30:42,330
leaves and this is a symmetric okay so

608
00:30:38,220 --> 00:30:45,840
we you see the path is l2 l3 l2 on leaf

609
00:30:42,330 --> 00:30:50,790
one and then across l2 and reverse will

610
00:30:45,840 --> 00:30:53,340
be again L 2 L 3 L 2 L so L 2 L 3 L 2 L

611
00:30:50,790 --> 00:30:54,960
2 okay so it's the phoning

612
00:30:53,340 --> 00:30:59,970
bi-directional forwarding pattern is a

613
00:30:54,960 --> 00:31:03,180
symmetric for symmetric we exchange our

614
00:30:59,970 --> 00:31:05,850
host routes learned from ARP locally

615
00:31:03,180 --> 00:31:09,930
learned from ARP as type five host

616
00:31:05,850 --> 00:31:12,659
routes and and now we do symmetric

617
00:31:09,930 --> 00:31:14,700
right up so now it becomes L 2 L 3 L 3 L

618
00:31:12,660 --> 00:31:16,590
2 and the same in the reverse direction

619
00:31:14,700 --> 00:31:21,960
and in that forwarding pattern is what

620
00:31:16,590 --> 00:31:23,370
we call as symmetric okay all right and

621
00:31:21,960 --> 00:31:26,910
the final overlay service type is the IP

622
00:31:23,370 --> 00:31:29,550
routed model IP routed model is just

623
00:31:26,910 --> 00:31:32,730
basically for those you know MPLS IP

624
00:31:29,550 --> 00:31:41,159
VPNs it's the same thing but it's using

625
00:31:32,730 --> 00:31:43,520
you can type v + VX lab so the IP

626
00:31:41,160 --> 00:31:48,150
overlays can be used are useful for

627
00:31:43,520 --> 00:31:53,100
north-south traffic flows for service

628
00:31:48,150 --> 00:31:55,080
chaining and as well as for you know

629
00:31:53,100 --> 00:31:59,790
tenants that don't have no need for

630
00:31:55,080 --> 00:32:02,879
Ethernet bridging yeah we spoke of that

631
00:31:59,790 --> 00:32:04,860
type v perfect sprouts now if you need

632
00:32:02,880 --> 00:32:08,370
mobility here you need to do bgp all the

633
00:32:04,860 --> 00:32:09,990
way to the host right and you know if

634
00:32:08,370 --> 00:32:12,179
you have a workload that moves needs to

635
00:32:09,990 --> 00:32:14,000
move from one host to the other the

636
00:32:12,180 --> 00:32:19,290
original host has to withdraw and the

637
00:32:14,000 --> 00:32:21,600
target host has to announce and it's

638
00:32:19,290 --> 00:32:24,030
it's also you know useful for these

639
00:32:21,600 --> 00:32:26,610
overlays are useful even for folks who

640
00:32:24,030 --> 00:32:29,510
don't believe that I need it for example

641
00:32:26,610 --> 00:32:32,550
with if you're running an IP only

642
00:32:29,510 --> 00:32:35,970
infrastructure you can still use routed

643
00:32:32,550 --> 00:32:39,990
overlays to run lean core so you don't

644
00:32:35,970 --> 00:32:45,030
have any workload state workload IP in

645
00:32:39,990 --> 00:32:46,710
your spines etc you can use it for

646
00:32:45,030 --> 00:32:48,450
lightweight multi-tenancy like you have

647
00:32:46,710 --> 00:32:51,210
a dev environment and prod environment

648
00:32:48,450 --> 00:32:52,680
and you want to keep an air-gapped you

649
00:32:51,210 --> 00:32:56,340
keep the mer gapped but over the same

650
00:32:52,680 --> 00:32:58,020
infrastructure and then you can use you

651
00:32:56,340 --> 00:33:00,870
know the tunnels themselves the tunnel

652
00:32:58,020 --> 00:33:04,490
headers themselves like particularly an

653
00:33:00,870 --> 00:33:06,899
bo3 headers like tunnel tunnel

654
00:33:04,490 --> 00:33:12,690
encapsulation pro data plan protocols

655
00:33:06,900 --> 00:33:16,290
like the x9g PE and genève also bring in

656
00:33:12,690 --> 00:33:19,200
additional option headers that you can

657
00:33:16,290 --> 00:33:23,580
use for example for a group based policy

658
00:33:19,200 --> 00:33:25,500
as well as in suit to OEM so

659
00:33:23,580 --> 00:33:27,500
there are some advantages of having

660
00:33:25,500 --> 00:33:35,120
other advantages of besides overlays of

661
00:33:27,500 --> 00:33:38,640
having these the tunneling headers so

662
00:33:35,120 --> 00:33:43,620
you can have different overlay

663
00:33:38,640 --> 00:33:45,510
topologies with the IP based overlays in

664
00:33:43,620 --> 00:33:46,979
this case we have a full mesh topology

665
00:33:45,510 --> 00:33:49,500
and the way that full mesh topology

666
00:33:46,980 --> 00:33:52,200
happens here is we import and export the

667
00:33:49,500 --> 00:33:55,440
same route target and we have basically

668
00:33:52,200 --> 00:33:59,180
a full mesh topology right

669
00:33:55,440 --> 00:33:59,180
all of these vrf see each other's routes

670
00:33:59,420 --> 00:34:03,900
there's a hub-and-spoke or I would

671
00:34:02,190 --> 00:34:07,110
probably also referring to this as

672
00:34:03,900 --> 00:34:13,100
directional VPNs where in this case it's

673
00:34:07,110 --> 00:34:15,710
the the border gateway border vrf efg

674
00:34:13,100 --> 00:34:19,049
announces routes with its routes with

675
00:34:15,710 --> 00:34:21,780
RTG and receives imports routes with our

676
00:34:19,050 --> 00:34:23,580
TX and the VR faxes do the exact

677
00:34:21,780 --> 00:34:26,670
opposite right and this is directional

678
00:34:23,580 --> 00:34:30,179
now you might say you know hey I if V

679
00:34:26,670 --> 00:34:31,950
rfg advertises down a default route you

680
00:34:30,179 --> 00:34:35,399
can actually you know forward from the

681
00:34:31,949 --> 00:34:38,429
RF x to v RF x only via from one leaf

682
00:34:35,400 --> 00:34:39,389
one - leave - that is possible so if you

683
00:34:38,429 --> 00:34:42,179
don't want that behavior you can

684
00:34:39,389 --> 00:34:44,730
implement a routing table policy to

685
00:34:42,179 --> 00:34:47,219
prevent that behavior or there are other

686
00:34:44,730 --> 00:34:50,909
ways of doing that as well right

687
00:34:47,219 --> 00:34:53,310
this type of VPN you don't want to do

688
00:34:50,909 --> 00:34:55,379
with Mac birth to Mac for if you don't

689
00:34:53,310 --> 00:34:59,370
want to do this at the l2 level it gets

690
00:34:55,380 --> 00:35:00,780
tricky fast right so this this sort of

691
00:34:59,370 --> 00:35:05,160
very flexible topology is probably

692
00:35:00,780 --> 00:35:07,500
better reserved for l3 VPNs and we're

693
00:35:05,160 --> 00:35:11,250
gonna we're going to you know be using

694
00:35:07,500 --> 00:35:14,430
this this particular hub spoke or

695
00:35:11,250 --> 00:35:18,270
directional VPNs in our service chaining

696
00:35:14,430 --> 00:35:22,859
discussion okay so here's a case where

697
00:35:18,270 --> 00:35:27,509
we're going to basically we have a need

698
00:35:22,860 --> 00:35:30,960
to connect this edge routed bridging

699
00:35:27,510 --> 00:35:34,340
tenant to the external world we add our

700
00:35:30,960 --> 00:35:38,150
border gateway with VR FG

701
00:35:34,340 --> 00:35:42,950
at a hub-and-spoke VPN between VAR f g

702
00:35:38,150 --> 00:35:44,900
and the tenant vr af-s and advertised

703
00:35:42,950 --> 00:35:48,560
down default from the tenant the vr FG

704
00:35:44,900 --> 00:35:51,440
and advertised up the host routes and we

705
00:35:48,560 --> 00:35:53,060
have and also announced to external and

706
00:35:51,440 --> 00:35:55,160
maybe an aggregate of these host routes

707
00:35:53,060 --> 00:35:57,980
from the graph G and we have

708
00:35:55,160 --> 00:36:01,330
communication between the tenant and

709
00:35:57,980 --> 00:36:07,550
systems and whatever external networks

710
00:36:01,330 --> 00:36:09,650
you need to reach ok alright so I'm

711
00:36:07,550 --> 00:36:15,710
gonna skip over this the interest of

712
00:36:09,650 --> 00:36:17,510
time now everything we spoke of up to

713
00:36:15,710 --> 00:36:20,720
now is no multihoming so we're gonna

714
00:36:17,510 --> 00:36:21,740
talk about multihoming now you didn't

715
00:36:20,720 --> 00:36:23,240
need multihoming if you didn't need

716
00:36:21,740 --> 00:36:24,500
multihoming for any of the overlays but

717
00:36:23,240 --> 00:36:28,879
if you do need multihoming you need to

718
00:36:24,500 --> 00:36:31,450
add this building block basically so

719
00:36:28,880 --> 00:36:34,990
here's where we were introducing the l1

720
00:36:31,450 --> 00:36:37,399
route types right you can sports n way

721
00:36:34,990 --> 00:36:40,339
multihoming where n can be greater than

722
00:36:37,400 --> 00:36:43,430
2 MC lag is a two-way multi only if you

723
00:36:40,340 --> 00:36:48,740
can support more than that technically

724
00:36:43,430 --> 00:36:50,660
any number but and we'll cover

725
00:36:48,740 --> 00:36:53,180
interesting example for how we can use

726
00:36:50,660 --> 00:36:53,779
this anyway multihoming you know in a

727
00:36:53,180 --> 00:36:58,310
few slides

728
00:36:53,780 --> 00:37:03,110
there's no ICL link required as with MC

729
00:36:58,310 --> 00:37:05,870
lag we use here type 1 and type 4 routes

730
00:37:03,110 --> 00:37:07,460
and if when you introduce selective

731
00:37:05,870 --> 00:37:11,000
multicast which we'll talk about a

732
00:37:07,460 --> 00:37:15,580
little later in our tutorial you have to

733
00:37:11,000 --> 00:37:16,700
add type 6 & 7 routes as well so

734
00:37:15,580 --> 00:37:18,710
multihoming

735
00:37:16,700 --> 00:37:21,310
multiple men systems are identified in

736
00:37:18,710 --> 00:37:27,140
the overlay by a unique segment ID

737
00:37:21,310 --> 00:37:30,920
otherwise referred to as a ESI Ethernet

738
00:37:27,140 --> 00:37:34,310
segment ID the ESI basically represents

739
00:37:30,920 --> 00:37:36,860
a split horizon boundary right it

740
00:37:34,310 --> 00:37:38,930
doesn't really identify it does it

741
00:37:36,860 --> 00:37:40,850
identify an attachment point but

742
00:37:38,930 --> 00:37:42,950
effectively what it is its purpose is to

743
00:37:40,850 --> 00:37:47,660
identify split horizon boundary between

744
00:37:42,950 --> 00:37:51,140
two you know l2 entities

745
00:37:47,660 --> 00:37:53,538
right it could be a host it could be

746
00:37:51,140 --> 00:37:55,069
another network but it defines a unique

747
00:37:53,539 --> 00:37:57,650
split horizon boundary between those two

748
00:37:55,069 --> 00:37:59,779
and what crosses the boundary is not

749
00:37:57,650 --> 00:38:05,809
allowed to cross back right that's

750
00:37:59,780 --> 00:38:07,760
basically what an ESI is so only one

751
00:38:05,809 --> 00:38:12,020
member link of an ESI is allowed to

752
00:38:07,760 --> 00:38:13,760
forward replicated packets and that

753
00:38:12,020 --> 00:38:18,980
member link is known as the designated

754
00:38:13,760 --> 00:38:22,700
forwarder it can be at the DF can be at

755
00:38:18,980 --> 00:38:24,020
the granularity of a VLAN ID but for

756
00:38:22,700 --> 00:38:26,210
this tutorial we'll leave it at the

757
00:38:24,020 --> 00:38:32,059
granularity of a port and then

758
00:38:26,210 --> 00:38:35,770
interestingly RFC 7432 does suggest ways

759
00:38:32,059 --> 00:38:37,849
to make this ESI discovery automatic

760
00:38:35,770 --> 00:38:40,190
also ESI generated discovery and

761
00:38:37,849 --> 00:38:43,069
generation automatic you buy little

762
00:38:40,190 --> 00:38:45,289
snooping LACP system ID and generating

763
00:38:43,069 --> 00:38:49,430
es eyes against the system ID of LACP

764
00:38:45,289 --> 00:38:51,289
but also interestingly in the type 2 it

765
00:38:49,430 --> 00:38:56,629
auto ESI is snoops

766
00:38:51,289 --> 00:38:59,059
on the BPD root bridge right

767
00:38:56,630 --> 00:39:02,630
so an interesting outcome of the second

768
00:38:59,059 --> 00:39:05,690
one is if you have if evpn is multihomed

769
00:39:02,630 --> 00:39:07,760
into a spanning tree network and that

770
00:39:05,690 --> 00:39:09,829
network partitions and each partition

771
00:39:07,760 --> 00:39:12,619
gets a new root bridge ID e VPN will

772
00:39:09,829 --> 00:39:13,970
actually heal it right and an

773
00:39:12,619 --> 00:39:16,579
interesting thing you can do about this

774
00:39:13,970 --> 00:39:18,319
is is divide and conquer build if you

775
00:39:16,579 --> 00:39:20,150
have a giant l2 network and you want to

776
00:39:18,319 --> 00:39:23,359
kind of break it up eventually over time

777
00:39:20,150 --> 00:39:25,750
into aunty VPN you can use this as a way

778
00:39:23,359 --> 00:39:25,750
to do it

779
00:39:27,039 --> 00:39:33,770
ok IP multihoming is here I think most

780
00:39:31,760 --> 00:39:35,299
of you know what it is the ethernet

781
00:39:33,770 --> 00:39:37,520
multihoming was related to the first

782
00:39:35,299 --> 00:39:39,440
three overlay building blocks the broker

783
00:39:37,520 --> 00:39:40,849
bridging and the two integrated routing

784
00:39:39,440 --> 00:39:43,609
and bridging overlays CR B and a are B

785
00:39:40,849 --> 00:39:47,059
IP multihoming is how do you multi-home

786
00:39:43,609 --> 00:39:50,720
in the pure routed overlay type there's

787
00:39:47,059 --> 00:39:53,180
two forms of it and we'll skip the

788
00:39:50,720 --> 00:39:56,419
details right just it's just here for

789
00:39:53,180 --> 00:39:59,240
completeness okay and that was lesson 2

790
00:39:56,420 --> 00:40:01,070
in this lesson 3 just going over some

791
00:39:59,240 --> 00:40:06,229
special use cases you

792
00:40:01,070 --> 00:40:07,580
the building blocks that we spoke of so

793
00:40:06,230 --> 00:40:09,890
here's an example

794
00:40:07,580 --> 00:40:13,130
underlay routed overlay subnets it's a

795
00:40:09,890 --> 00:40:15,049
mouthful basically the the subnets

796
00:40:13,130 --> 00:40:20,000
themselves are overlay but the routing

797
00:40:15,050 --> 00:40:21,680
happens on the underlay okay and this is

798
00:40:20,000 --> 00:40:25,640
where you might have a single tenant

799
00:40:21,680 --> 00:40:27,940
from an l-3 standpoint it's a single

800
00:40:25,640 --> 00:40:30,580
tenant variant of edge router bridging

801
00:40:27,940 --> 00:40:33,440
or the routing again happens in the

802
00:40:30,580 --> 00:40:40,940
underlay if you familiar with gino's

803
00:40:33,440 --> 00:40:42,620
it's IE Net Zero so as its name implies

804
00:40:40,940 --> 00:40:47,000
there's no virtualization or tunneling

805
00:40:42,620 --> 00:40:48,980
for IP the very very basic use case is I

806
00:40:47,000 --> 00:40:51,560
like MC lag but I want to open version

807
00:40:48,980 --> 00:40:53,570
of it I have to two switches and myspace

808
00:40:51,560 --> 00:40:54,890
subnets only span these two switches and

809
00:40:53,570 --> 00:40:57,860
I want to multi-home across these two

810
00:40:54,890 --> 00:41:02,390
switches right I want to do it with a

811
00:40:57,860 --> 00:41:04,100
VPN right and you can use it but I went

812
00:41:02,390 --> 00:41:07,250
around in the underlay so you can

813
00:41:04,100 --> 00:41:09,860
basically use a VPN simply as a as an MC

814
00:41:07,250 --> 00:41:11,540
lag replacement and open variant events

815
00:41:09,860 --> 00:41:15,980
laggy don't want to burn any ICL links

816
00:41:11,540 --> 00:41:18,560
or whatever the expanded use case is I

817
00:41:15,980 --> 00:41:21,770
just want to do my overlay subnets I

818
00:41:18,560 --> 00:41:24,290
want to place my overlay and my saw end

819
00:41:21,770 --> 00:41:29,180
points my subnets anywhere in in the

820
00:41:24,290 --> 00:41:32,180
network and you know but I still want to

821
00:41:29,180 --> 00:41:36,440
route in the underlay all right and you

822
00:41:32,180 --> 00:41:41,169
can you can do that and you can throw in

823
00:41:36,440 --> 00:41:44,660
our suppression comes for free okay

824
00:41:41,170 --> 00:41:47,810
example two now we have legacy access

825
00:41:44,660 --> 00:41:55,190
switches and we want to kind of bring

826
00:41:47,810 --> 00:41:57,230
that in into evpn so in this example I

827
00:41:55,190 --> 00:41:59,090
have these access which is they don't

828
00:41:57,230 --> 00:42:02,600
support each pin but they support lag or

829
00:41:59,090 --> 00:42:04,130
MC lag and this is sort of a variant of

830
00:42:02,600 --> 00:42:07,549
edge router bridging I have a I have a

831
00:42:04,130 --> 00:42:11,230
set of a VPN leaves right I'll call

832
00:42:07,550 --> 00:42:14,359
these this set as the collapse mine a

833
00:42:11,230 --> 00:42:21,239
man who coined the word is right there

834
00:42:14,359 --> 00:42:23,249
Dameon and basically if if the subnet

835
00:42:21,239 --> 00:42:26,220
does not span beyond these this collapse

836
00:42:23,249 --> 00:42:28,259
fine I can just advertise the subnet

837
00:42:26,220 --> 00:42:29,609
routes I don't have to advertise the

838
00:42:28,259 --> 00:42:31,319
hosts route so it's a variant of er

839
00:42:29,609 --> 00:42:38,009
beware I'm advertising subnet routes

840
00:42:31,319 --> 00:42:39,808
instead of host routes and I'm doing EVP

841
00:42:38,009 --> 00:42:42,839
multihoming down to the axis which is an

842
00:42:39,809 --> 00:42:44,640
MC lag up from the axis which is and

843
00:42:42,839 --> 00:42:47,880
this is an example of n way multihoming

844
00:42:44,640 --> 00:42:50,400
right in using anyway multihoming an EVP

845
00:42:47,880 --> 00:42:54,329
and collapse mind pods can can be part

846
00:42:50,400 --> 00:42:56,579
of a larger IP fabric we've seen this as

847
00:42:54,329 --> 00:42:58,499
a transitional step that some companies

848
00:42:56,579 --> 00:42:59,700
use they it takes it's really hard to

849
00:42:58,499 --> 00:43:01,828
change out your access switches because

850
00:42:59,700 --> 00:43:02,970
of all the connections in the disruption

851
00:43:01,829 --> 00:43:06,720
that happens at that layer but you want

852
00:43:02,970 --> 00:43:09,988
to introduce a VPN starting at some

853
00:43:06,720 --> 00:43:14,459
layer in the next layer up and you know

854
00:43:09,989 --> 00:43:17,039
maybe you want more than two members of

855
00:43:14,460 --> 00:43:18,059
your collapse fine reason being well if

856
00:43:17,039 --> 00:43:19,589
you're doing maintenance on one you're

857
00:43:18,059 --> 00:43:21,329
standing on one leg well if you have

858
00:43:19,589 --> 00:43:22,710
three you had do maintenance on one or

859
00:43:21,329 --> 00:43:25,430
one goes down you have to still have two

860
00:43:22,710 --> 00:43:29,029
left running so that's an interesting

861
00:43:25,430 --> 00:43:31,950
value prop for the n way multihoming

862
00:43:29,029 --> 00:43:34,529
okay the third example is a bum free

863
00:43:31,950 --> 00:43:39,359
subnet and this is where the which is

864
00:43:34,529 --> 00:43:46,229
our proxy function comes in so some

865
00:43:39,359 --> 00:43:49,410
operators they they need the you know l2

866
00:43:46,229 --> 00:43:51,538
but they just want unicast but

867
00:43:49,410 --> 00:43:55,049
unfortunately you know l 2 comes with

868
00:43:51,539 --> 00:43:59,190
broadcast right and there was something

869
00:43:55,049 --> 00:44:00,569
you can do about that so basically the

870
00:43:59,190 --> 00:44:03,180
broadcast what is the need for us just

871
00:44:00,569 --> 00:44:05,009
needed for ARP right and just because

872
00:44:03,180 --> 00:44:08,879
you have ARP you now need to have

873
00:44:05,009 --> 00:44:11,670
broadcast so with Eve you can you can

874
00:44:08,880 --> 00:44:13,430
basically enable ARP suppression with

875
00:44:11,670 --> 00:44:18,029
the GARP support that we spoke of before

876
00:44:13,430 --> 00:44:21,419
and then like I said you can use a

877
00:44:18,029 --> 00:44:25,229
policy to knobs right to suppress the

878
00:44:21,420 --> 00:44:27,600
sending and receiving of type 3 6 7 & 8

879
00:44:25,229 --> 00:44:30,419
routes which are the ones for

880
00:44:27,600 --> 00:44:33,750
any multi destination frames and now you

881
00:44:30,420 --> 00:44:35,940
have an l2 network that is just for

882
00:44:33,750 --> 00:44:38,150
unicast right and then nice thing about

883
00:44:35,940 --> 00:44:42,450
it is there's no bum so there's no loops

884
00:44:38,150 --> 00:44:44,670
there's no flood list state scale issues

885
00:44:42,450 --> 00:44:46,859
all right because when you have bum or

886
00:44:44,670 --> 00:44:48,810
you have any type of replication you

887
00:44:46,860 --> 00:44:51,050
have flood lists and that consumes State

888
00:44:48,810 --> 00:44:53,430
on your chip so you have none of that

889
00:44:51,050 --> 00:44:57,030
and it's IP VPN like but it has the

890
00:44:53,430 --> 00:45:00,029
ethernet plug and play properties caveat

891
00:44:57,030 --> 00:45:01,500
is that the systems that are

892
00:45:00,030 --> 00:45:05,640
participating in such a network have to

893
00:45:01,500 --> 00:45:08,220
send GARP right when they start up and

894
00:45:05,640 --> 00:45:10,319
when they move ok so that's that's a

895
00:45:08,220 --> 00:45:14,910
requirement it's actually possible to do

896
00:45:10,320 --> 00:45:18,120
that in in on Linux I don't know how you

897
00:45:14,910 --> 00:45:22,920
do it on other systems but typically if

898
00:45:18,120 --> 00:45:25,710
this was an AP a bridge mode ap when an

899
00:45:22,920 --> 00:45:27,750
n system moves the AP will do a

900
00:45:25,710 --> 00:45:29,490
gratuitous ARP on its behalf if it's a

901
00:45:27,750 --> 00:45:31,080
hypervisor the hypervisor will do a

902
00:45:29,490 --> 00:45:32,819
gratuitous ARP on behalf of the

903
00:45:31,080 --> 00:45:34,140
workloads that move and including at the

904
00:45:32,820 --> 00:45:35,880
time when it comes up so there's a

905
00:45:34,140 --> 00:45:37,890
number of cases where it's just fine so

906
00:45:35,880 --> 00:45:39,900
if you have a bare-metal system you have

907
00:45:37,890 --> 00:45:44,759
to just have to make sure that this is

908
00:45:39,900 --> 00:45:46,740
this is in place ok I'm going to skip

909
00:45:44,760 --> 00:45:51,300
this one because I think it takes like

910
00:45:46,740 --> 00:45:53,459
15 minutes to explain but that was a

911
00:45:51,300 --> 00:45:56,130
kind of a I was restoring it out there

912
00:45:53,460 --> 00:45:57,810
as a way to do p VLAN right you can you

913
00:45:56,130 --> 00:46:01,800
can do p VLAN but the best way to do p

914
00:45:57,810 --> 00:46:04,080
VLAN by the way is is probably group

915
00:46:01,800 --> 00:46:08,520
based policy so if you're interested in

916
00:46:04,080 --> 00:46:12,000
PV I go look up group based policy final

917
00:46:08,520 --> 00:46:14,370
example I have here is you know VX LAN

918
00:46:12,000 --> 00:46:18,380
and plus VX minus r v6 coexistence I've

919
00:46:14,370 --> 00:46:23,009
seen some telco cloud folks who

920
00:46:18,380 --> 00:46:25,560
basically need MPLS or SR v6 to

921
00:46:23,010 --> 00:46:29,400
communicate across their land fabric and

922
00:46:25,560 --> 00:46:31,320
so they believe that you know east-west

923
00:46:29,400 --> 00:46:34,140
traffic must also use the same end caps

924
00:46:31,320 --> 00:46:35,670
right if I'm using a server 6 across my

925
00:46:34,140 --> 00:46:38,339
fabric or a music segment running across

926
00:46:35,670 --> 00:46:40,660
my fabric my east-west must also my

927
00:46:38,340 --> 00:46:42,130
intra fabric must also use

928
00:46:40,660 --> 00:46:45,549
the same end cap and that's not true

929
00:46:42,130 --> 00:46:48,160
right I can still use VX landing cap and

930
00:46:45,550 --> 00:46:52,810
all the stuff we just spoke of and in to

931
00:46:48,160 --> 00:46:56,859
Torrance you know lesson two and I can

932
00:46:52,810 --> 00:47:00,870
coexist with an MPLS in this example an

933
00:46:56,860 --> 00:47:05,050
MPLS vrf participant and IP MPLS VPN

934
00:47:00,870 --> 00:47:06,850
also implemented here on the leaf my

935
00:47:05,050 --> 00:47:07,990
front-end overhead backends and front

936
00:47:06,850 --> 00:47:11,049
ends of phonons are the ones that need

937
00:47:07,990 --> 00:47:13,899
to communicate across the land it could

938
00:47:11,050 --> 00:47:15,430
be a vnf or whatever it is it can have a

939
00:47:13,900 --> 00:47:16,840
second interface in the second interface

940
00:47:15,430 --> 00:47:20,230
it could be a logical interface

941
00:47:16,840 --> 00:47:22,380
connected to a VLAN trunk to which a

942
00:47:20,230 --> 00:47:24,400
particular VLAN goes into an MPLS BRF

943
00:47:22,380 --> 00:47:26,680
and you can round out that way so that's

944
00:47:24,400 --> 00:47:28,750
one form of coexistence and it doesn't

945
00:47:26,680 --> 00:47:30,160
seem so pretty another way is I can get

946
00:47:28,750 --> 00:47:33,640
rid of that interface and I just

947
00:47:30,160 --> 00:47:39,279
basically leak routes between the MPLS

948
00:47:33,640 --> 00:47:42,609
vrf and the VX LAN brf's right and it's

949
00:47:39,280 --> 00:47:44,050
kind of service chaining right so all my

950
00:47:42,610 --> 00:47:47,380
east-west traffic in this case is

951
00:47:44,050 --> 00:47:49,720
actually the X LAN exactly like as we

952
00:47:47,380 --> 00:47:55,780
did it in lesson 2 and my north-south is

953
00:47:49,720 --> 00:48:00,009
now going over MPLS VPN ok do the same

954
00:47:55,780 --> 00:48:01,540
thing with SR v6 right I don't want you

955
00:48:00,010 --> 00:48:04,890
know there's not a lot of tours that

956
00:48:01,540 --> 00:48:11,800
implement SR v6 but the reality is that

957
00:48:04,890 --> 00:48:15,400
SR v6 it really did I don't think that

958
00:48:11,800 --> 00:48:16,840
you need SR v6 at the tour right usually

959
00:48:15,400 --> 00:48:19,480
what with srt-6

960
00:48:16,840 --> 00:48:21,610
you know you have a workload and it

961
00:48:19,480 --> 00:48:26,290
needs to be do you try to do egress peer

962
00:48:21,610 --> 00:48:28,690
engineering and you workload ask the

963
00:48:26,290 --> 00:48:31,120
controller hey tell me which way to go

964
00:48:28,690 --> 00:48:33,190
control it gives it a segment list right

965
00:48:31,120 --> 00:48:35,799
and the first segment and the the first

966
00:48:33,190 --> 00:48:39,400
hop in that segment list is actually not

967
00:48:35,800 --> 00:48:43,390
the tour it's the it's maybe the

968
00:48:39,400 --> 00:48:46,540
datacenter gateway right so the tour

969
00:48:43,390 --> 00:48:49,750
actually just Ford's on ipv6 right and

970
00:48:46,540 --> 00:48:52,610
same way back so here you have the

971
00:48:49,750 --> 00:48:56,570
workload knows SR v6

972
00:48:52,610 --> 00:48:59,570
the next you know next hop in the

973
00:48:56,570 --> 00:49:01,100
segment list knows SR v6 but the tour

974
00:48:59,570 --> 00:49:03,260
doesn't have to know a so our v6 it just

975
00:49:01,100 --> 00:49:08,870
needs to know ipv6 and I'm just leaking

976
00:49:03,260 --> 00:49:11,240
routes here right so there you go that's

977
00:49:08,870 --> 00:49:14,480
the end of lesson 3 now we can talk

978
00:49:11,240 --> 00:49:17,890
about just this is a concept discussion

979
00:49:14,480 --> 00:49:20,750
here I'm not talking you know technology

980
00:49:17,890 --> 00:49:21,620
it's more mostly abstraction so just

981
00:49:20,750 --> 00:49:23,240
kind of bear with me on these

982
00:49:21,620 --> 00:49:25,390
abstractions it's just stuff to think

983
00:49:23,240 --> 00:49:25,390
about

984
00:49:25,480 --> 00:49:33,980
so in my book the service chains are

985
00:49:30,200 --> 00:49:35,270
basically for for this tutorial the

986
00:49:33,980 --> 00:49:37,070
reference model for service changes

987
00:49:35,270 --> 00:49:39,050
anything that needs to go between

988
00:49:37,070 --> 00:49:40,850
tenants or any extra tenant

989
00:49:39,050 --> 00:49:42,530
communication is going through search

990
00:49:40,850 --> 00:49:44,150
chain right either now you know

991
00:49:42,530 --> 00:49:45,140
conceptual sort of chain or actually

992
00:49:44,150 --> 00:49:48,550
service chain with real service

993
00:49:45,140 --> 00:49:48,549
functions in it right

994
00:49:49,810 --> 00:49:55,850
ok I'm gonna skip this one because I

995
00:49:52,130 --> 00:49:57,620
skipped this piece in the last lesson so

996
00:49:55,850 --> 00:50:00,080
here we've actually seen service

997
00:49:57,620 --> 00:50:02,569
chaining already in this lesson I'm

998
00:50:00,080 --> 00:50:04,130
sorry in this tutorial it was that

999
00:50:02,570 --> 00:50:05,420
example where we had the ER be that

1000
00:50:04,130 --> 00:50:07,670
needed to go out through the border

1001
00:50:05,420 --> 00:50:11,060
gateway so let's just say that border

1002
00:50:07,670 --> 00:50:13,610
gateway was a service is implementing a

1003
00:50:11,060 --> 00:50:15,470
MPLS VPN gateway it's a service function

1004
00:50:13,610 --> 00:50:18,140
right and we connected that service

1005
00:50:15,470 --> 00:50:20,359
function to the tenant VRS using a

1006
00:50:18,140 --> 00:50:23,509
directional VPN right and we just

1007
00:50:20,360 --> 00:50:28,820
implemented service chaining

1008
00:50:23,510 --> 00:50:33,220
same here we connected a MPLS PRF which

1009
00:50:28,820 --> 00:50:35,180
is effectively an MPLS VPN gateway right

1010
00:50:33,220 --> 00:50:41,509
service function you can look at it that

1011
00:50:35,180 --> 00:50:43,040
way and we connected them you know into

1012
00:50:41,510 --> 00:50:48,710
a service chain and this is much more of

1013
00:50:43,040 --> 00:50:53,150
a distributed form of it ok so service

1014
00:50:48,710 --> 00:50:55,730
chaining is basically kind of looks

1015
00:50:53,150 --> 00:51:03,370
something like this right lots of stuff

1016
00:50:55,730 --> 00:51:03,370
in between you know in systems

1017
00:51:03,850 --> 00:51:08,170
but basically in the evpn world we're

1018
00:51:06,670 --> 00:51:11,770
using exactly the same building blocks

1019
00:51:08,170 --> 00:51:14,320
one of those four types right are

1020
00:51:11,770 --> 00:51:17,200
involved over here so you know in this

1021
00:51:14,320 --> 00:51:18,640
case I'm using ER B over here er B on

1022
00:51:17,200 --> 00:51:21,430
the left and the right side of these

1023
00:51:18,640 --> 00:51:23,799
service function this here is my service

1024
00:51:21,430 --> 00:51:26,319
function block over here I'm using a

1025
00:51:23,800 --> 00:51:28,630
pure IP left and right this is my

1026
00:51:26,320 --> 00:51:29,950
service function block right and I'm

1027
00:51:28,630 --> 00:51:33,460
connecting this with the directional

1028
00:51:29,950 --> 00:51:37,480
VPNs over here right and talked about

1029
00:51:33,460 --> 00:51:40,000
the external gate in a second so service

1030
00:51:37,480 --> 00:51:44,710
chains are for this tutorial or

1031
00:51:40,000 --> 00:51:46,480
bi-directional right they go left and

1032
00:51:44,710 --> 00:51:47,800
right if you try to you know stick a

1033
00:51:46,480 --> 00:51:48,880
multi-directional service function in

1034
00:51:47,800 --> 00:51:49,870
the middle of a service chain you don't

1035
00:51:48,880 --> 00:51:56,380
get a chain anymore

1036
00:51:49,870 --> 00:51:59,080
you get mass confusion so so just for

1037
00:51:56,380 --> 00:52:00,970
the purpose of this lesson we're going

1038
00:51:59,080 --> 00:52:04,240
to kind of play service chain Lego I

1039
00:52:00,970 --> 00:52:06,549
have a little bit of symbology here it's

1040
00:52:04,240 --> 00:52:08,799
just to make it easy otherwise that this

1041
00:52:06,550 --> 00:52:12,730
this the pictures get really hairy very

1042
00:52:08,800 --> 00:52:17,500
quickly so I have some service function

1043
00:52:12,730 --> 00:52:20,950
types as examples service function to to

1044
00:52:17,500 --> 00:52:23,020
connect you know Tenon's together to

1045
00:52:20,950 --> 00:52:28,720
connect a service function to the

1046
00:52:23,020 --> 00:52:33,009
underlay a service function block for l1

1047
00:52:28,720 --> 00:52:35,620
right and another one service function

1048
00:52:33,010 --> 00:52:36,760
block for l3 service functions I'm going

1049
00:52:35,620 --> 00:52:39,160
to skip this one except don't have time

1050
00:52:36,760 --> 00:52:42,720
to talk about it and then I have

1051
00:52:39,160 --> 00:52:46,960
integrated IPSec gateway and integrated

1052
00:52:42,720 --> 00:52:48,669
IP VPN gateway and a service function

1053
00:52:46,960 --> 00:52:54,160
that connects me out to the external

1054
00:52:48,670 --> 00:52:57,760
world right and external gateway so just

1055
00:52:54,160 --> 00:53:01,899
dipping in a little into the and two of

1056
00:52:57,760 --> 00:53:05,350
those service function blocks one that

1057
00:53:01,900 --> 00:53:09,700
supports the l1 basically what we're

1058
00:53:05,350 --> 00:53:15,900
looking at is exactly using the stuff we

1059
00:53:09,700 --> 00:53:15,899
spoke about right we have we have here a

1060
00:53:16,330 --> 00:53:22,720
IP overlay a building block on the left

1061
00:53:19,840 --> 00:53:25,260
and on the right using a directional VPN

1062
00:53:22,720 --> 00:53:28,750
on the left and the right to connect to

1063
00:53:25,260 --> 00:53:32,530
a building block whether it's an ER b c

1064
00:53:28,750 --> 00:53:34,600
RB or other tenant or another service

1065
00:53:32,530 --> 00:53:37,510
function block on the left same thing on

1066
00:53:34,600 --> 00:53:40,000
the right and with service chaining

1067
00:53:37,510 --> 00:53:46,210
you're moving the routes on the left

1068
00:53:40,000 --> 00:53:48,580
Oh tell my left and right yeah you're

1069
00:53:46,210 --> 00:53:49,810
moving your your routes from your left

1070
00:53:48,580 --> 00:53:50,920
towards the right and your routes from

1071
00:53:49,810 --> 00:53:52,330
right towards the left through this

1072
00:53:50,920 --> 00:53:53,980
chain so you can have the bi-directional

1073
00:53:52,330 --> 00:53:55,480
routing how you do it we're not going

1074
00:53:53,980 --> 00:53:57,430
into the details of that you can use BGP

1075
00:53:55,480 --> 00:53:59,200
you can use static routes whatever right

1076
00:53:57,430 --> 00:54:02,049
but you're basically communicating them

1077
00:53:59,200 --> 00:54:03,669
across these directional VPNs between us

1078
00:54:02,050 --> 00:54:05,440
this is an IP connected service chain

1079
00:54:03,670 --> 00:54:06,340
you can do l2 connected service Jana I

1080
00:54:05,440 --> 00:54:09,940
don't have time for that

1081
00:54:06,340 --> 00:54:12,040
today so that was a case where both

1082
00:54:09,940 --> 00:54:14,770
sides of the service function are part

1083
00:54:12,040 --> 00:54:17,230
of the service function block in this

1084
00:54:14,770 --> 00:54:19,360
case only one side it's one leg because

1085
00:54:17,230 --> 00:54:23,680
the other leg of the service function

1086
00:54:19,360 --> 00:54:26,290
goes outside right the same okay in the

1087
00:54:23,680 --> 00:54:31,319
case of l1 bump on the wire these two

1088
00:54:26,290 --> 00:54:33,790
verbs are adjacent and in the case of l3

1089
00:54:31,320 --> 00:54:35,830
they're not adjacent they're adjacent to

1090
00:54:33,790 --> 00:54:38,290
the left and right interfaces of the

1091
00:54:35,830 --> 00:54:39,790
service function but again the routes on

1092
00:54:38,290 --> 00:54:41,020
the left have to be propagated to the

1093
00:54:39,790 --> 00:54:44,250
right and the right routes on the right

1094
00:54:41,020 --> 00:54:46,810
have to be propagated to the left okay

1095
00:54:44,250 --> 00:54:48,370
know the important takeaway here is we

1096
00:54:46,810 --> 00:54:54,700
used exactly the same four building

1097
00:54:48,370 --> 00:54:57,040
blocks in in-service training ok first

1098
00:54:54,700 --> 00:55:00,490
service chaining service change scaling

1099
00:54:57,040 --> 00:55:02,380
we we have our one block here you can

1100
00:55:00,490 --> 00:55:05,129
add as many as you like right as long as

1101
00:55:02,380 --> 00:55:07,300
it's using the same template right

1102
00:55:05,130 --> 00:55:08,770
connected the same directional VPNs on

1103
00:55:07,300 --> 00:55:16,240
the left on the right you just scaled

1104
00:55:08,770 --> 00:55:18,610
each service function now there's some

1105
00:55:16,240 --> 00:55:22,240
cases where you have an active standby

1106
00:55:18,610 --> 00:55:26,560
service function and those active

1107
00:55:22,240 --> 00:55:30,819
Samurai need l2 adjacency and there may

1108
00:55:26,560 --> 00:55:35,320
be using virtual IPS for that you can

1109
00:55:30,820 --> 00:55:39,490
just use an ARB as your right instead of

1110
00:55:35,320 --> 00:55:43,150
IP right so the left and right is still

1111
00:55:39,490 --> 00:55:44,649
done through the verve using oops I

1112
00:55:43,150 --> 00:55:45,610
still doing done through the roast using

1113
00:55:44,650 --> 00:55:48,850
a directional VPNs

1114
00:55:45,610 --> 00:55:53,260
but the l2 is supported for these guys

1115
00:55:48,850 --> 00:55:56,110
Jason CLT adjacency with one another I'm

1116
00:55:53,260 --> 00:55:58,390
gonna skip this one okay so here's an

1117
00:55:56,110 --> 00:56:00,670
example of where you have a tenant with

1118
00:55:58,390 --> 00:56:02,290
multiple chains or tenant each tenant

1119
00:56:00,670 --> 00:56:06,760
may have more than one chain associated

1120
00:56:02,290 --> 00:56:08,310
to it so the all the tenants on the Left

1121
00:56:06,760 --> 00:56:11,020
need to talk to the tenants on the right

1122
00:56:08,310 --> 00:56:13,090
they go to the top service chain so

1123
00:56:11,020 --> 00:56:14,140
chain 1 for the tenants on the left to

1124
00:56:13,090 --> 00:56:15,790
talk to each other they go through

1125
00:56:14,140 --> 00:56:16,839
service chain 2 for tenants on the right

1126
00:56:15,790 --> 00:56:19,720
talk to each other that they go through

1127
00:56:16,840 --> 00:56:23,440
service chain 3 alright so an example of

1128
00:56:19,720 --> 00:56:26,410
where you can do you know multiple

1129
00:56:23,440 --> 00:56:29,470
chains right again all using the same

1130
00:56:26,410 --> 00:56:30,750
building blocks this is an example where

1131
00:56:29,470 --> 00:56:35,140
chains are connected to other chains

1132
00:56:30,750 --> 00:56:36,280
right the top two tenants need to go

1133
00:56:35,140 --> 00:56:37,600
through a load balancer the bottom 10

1134
00:56:36,280 --> 00:56:39,640
Denise go through firewall but they both

1135
00:56:37,600 --> 00:56:43,509
need to go out to their campuses for

1136
00:56:39,640 --> 00:56:45,580
example using an IPSec gateway and

1137
00:56:43,510 --> 00:56:48,040
that's an example of branching chains or

1138
00:56:45,580 --> 00:56:49,900
these connected chains and you can also

1139
00:56:48,040 --> 00:56:52,270
have scenarios where one chain depends

1140
00:56:49,900 --> 00:56:54,610
on another chain in this case this chain

1141
00:56:52,270 --> 00:56:56,440
ends in IPSec IP VPN which has a

1142
00:56:54,610 --> 00:56:58,750
transport tunnel that depends on the

1143
00:56:56,440 --> 00:57:00,940
underlay fabric routing but the underlay

1144
00:56:58,750 --> 00:57:03,820
fabric routing must exit the network

1145
00:57:00,940 --> 00:57:05,440
using a service chain right so you tie

1146
00:57:03,820 --> 00:57:09,460
the underlay fabric to a service chain

1147
00:57:05,440 --> 00:57:12,970
and maybe needs an encryption so this

1148
00:57:09,460 --> 00:57:15,040
guy goes out under encrypts and out okay

1149
00:57:12,970 --> 00:57:17,080
so that's dependent service chains right

1150
00:57:15,040 --> 00:57:18,790
and these these are all just concepts

1151
00:57:17,080 --> 00:57:21,279
right you know you may be able to do it

1152
00:57:18,790 --> 00:57:23,050
a lot more right but you know if you

1153
00:57:21,280 --> 00:57:25,060
simplify things into these abstractions

1154
00:57:23,050 --> 00:57:26,260
I guess the point is you can find a lot

1155
00:57:25,060 --> 00:57:28,270
of different things you can do with it

1156
00:57:26,260 --> 00:57:28,720
right and we just use four building

1157
00:57:28,270 --> 00:57:32,290
blocks

1158
00:57:28,720 --> 00:57:34,810
right okay

1159
00:57:32,290 --> 00:57:38,080
Gateway's these n way forwarders are

1160
00:57:34,810 --> 00:57:41,200
kind of unique animals yeah I don't

1161
00:57:38,080 --> 00:57:42,310
consider them as something you would

1162
00:57:41,200 --> 00:57:44,618
stick in the middle of the chain you

1163
00:57:42,310 --> 00:57:46,750
would just have mass confusion but they

1164
00:57:44,619 --> 00:57:49,240
are you can you know stick them at the

1165
00:57:46,750 --> 00:57:50,950
ends I'm sorry you can stick them at the

1166
00:57:49,240 --> 00:57:52,839
ends of your chain right

1167
00:57:50,950 --> 00:57:54,490
typically your external gateways we

1168
00:57:52,840 --> 00:57:57,190
connect it directly into your tenants

1169
00:57:54,490 --> 00:57:58,390
right they don't have a directional VPN

1170
00:57:57,190 --> 00:58:00,460
as the connector they just connect

1171
00:57:58,390 --> 00:58:06,690
directly and then they can connect

1172
00:58:00,460 --> 00:58:09,160
upstream into a chain that one

1173
00:58:06,690 --> 00:58:10,869
multicast through chains is interesting

1174
00:58:09,160 --> 00:58:15,129
if you have a need for talking about

1175
00:58:10,869 --> 00:58:17,490
multicast or chains to talk to me we're

1176
00:58:15,130 --> 00:58:17,490
not there yet

1177
00:58:17,890 --> 00:58:22,270
you have to use l2 linked chains for

1178
00:58:20,680 --> 00:58:24,490
from almost getting multicast room I

1179
00:58:22,270 --> 00:58:33,040
don't I don't have time for that okay so

1180
00:58:24,490 --> 00:58:37,598
finally finally we have overlay

1181
00:58:33,040 --> 00:58:39,250
replication this is my last section here

1182
00:58:37,599 --> 00:58:42,070
last lesson

1183
00:58:39,250 --> 00:58:46,300
so overlay replication uses over-the-top

1184
00:58:42,070 --> 00:58:48,900
signaling so means we're not doing

1185
00:58:46,300 --> 00:58:50,830
signaling hop-by-hop in the underlay

1186
00:58:48,900 --> 00:58:52,210
which means we don't have any

1187
00:58:50,830 --> 00:58:55,060
traditional underlay multicast protocols

1188
00:58:52,210 --> 00:58:57,430
and that's a nice thing right which

1189
00:58:55,060 --> 00:58:59,049
means that you don't have tenant state

1190
00:58:57,430 --> 00:59:00,460
in your underlay which is a nice thing

1191
00:58:59,050 --> 00:59:03,460
which means you're running lean core

1192
00:59:00,460 --> 00:59:06,910
okay so you want overlay replication the

1193
00:59:03,460 --> 00:59:09,130
problem with overlay replication is you

1194
00:59:06,910 --> 00:59:11,140
know oh you also you know technically

1195
00:59:09,130 --> 00:59:12,790
depend on your implementation your

1196
00:59:11,140 --> 00:59:14,700
convergence is effectively the same as

1197
00:59:12,790 --> 00:59:17,560
as your unicast conversions

1198
00:59:14,700 --> 00:59:19,359
the problem with overlay replication is

1199
00:59:17,560 --> 00:59:20,980
not so efficient especially when you're

1200
00:59:19,359 --> 00:59:23,609
talking about ingress replication but

1201
00:59:20,980 --> 00:59:26,050
evpn does have some you know new

1202
00:59:23,609 --> 00:59:28,810
capabilities associated to it that

1203
00:59:26,050 --> 00:59:32,170
improve over overlay replication we'll

1204
00:59:28,810 --> 00:59:33,580
talk about that in this last section the

1205
00:59:32,170 --> 00:59:36,040
first thing we talk about is selective

1206
00:59:33,580 --> 00:59:39,910
multicast replication with selective

1207
00:59:36,040 --> 00:59:41,540
multicast replication unlike inclusive

1208
00:59:39,910 --> 00:59:44,540
replication

1209
00:59:41,540 --> 00:59:49,220
inclusive replication if all the V tapes

1210
00:59:44,540 --> 00:59:51,500
that are participating in a subnet if

1211
00:59:49,220 --> 00:59:54,259
whether it's broadcast unknown unicast

1212
00:59:51,500 --> 00:59:59,030
or multicast they all get the the frame

1213
00:59:54,260 --> 01:00:03,290
right and in a selective multicast

1214
00:59:59,030 --> 01:00:07,819
replication we have this additional type

1215
01:00:03,290 --> 01:00:09,349
six route where we can signal the V

1216
01:00:07,819 --> 01:00:14,630
tapes that have interested receivers for

1217
01:00:09,349 --> 01:00:17,240
an IP multicast so if I have a hundred V

1218
01:00:14,630 --> 01:00:21,589
tapes and only and I have an active

1219
01:00:17,240 --> 01:00:23,930
receiver only for a group for for on ten

1220
01:00:21,589 --> 01:00:25,549
of them I only send ten copies at the

1221
01:00:23,930 --> 01:00:35,750
ingress rather than 100 copies which is

1222
01:00:25,549 --> 01:00:42,230
quite a lot right so it's used as type

1223
01:00:35,750 --> 01:00:44,540
six estimate routes now this is require

1224
01:00:42,230 --> 01:00:48,319
state you know anything selective

1225
01:00:44,540 --> 01:00:49,970
consume state so you can limit the

1226
01:00:48,319 --> 01:00:51,829
amount of state consumed using a policy

1227
01:00:49,970 --> 01:00:57,379
you'd say hey I'm only going to do

1228
01:00:51,829 --> 01:00:59,900
estimate for you know a subset of my

1229
01:00:57,380 --> 01:01:01,339
multicast groups everything else for my

1230
01:00:59,900 --> 01:01:03,890
high-volume groups for my low volume

1231
01:01:01,339 --> 01:01:07,250
groups I'm just going to do inclusive

1232
01:01:03,890 --> 01:01:10,578
replication now when you're doing

1233
01:01:07,250 --> 01:01:12,859
multihoming you need to add some more

1234
01:01:10,579 --> 01:01:14,240
route types and the reason for that is

1235
01:01:12,859 --> 01:01:16,848
you know when you have a multi home

1236
01:01:14,240 --> 01:01:18,290
system your DF might be on the left but

1237
01:01:16,849 --> 01:01:22,040
your IGMP joins are going to the right

1238
01:01:18,290 --> 01:01:25,549
and your DF has no idea that this host

1239
01:01:22,040 --> 01:01:27,770
is interested in getting receiving a

1240
01:01:25,549 --> 01:01:31,460
multicast flow so the somehow the DF has

1241
01:01:27,770 --> 01:01:33,619
to be informed right that to permit this

1242
01:01:31,460 --> 01:01:35,990
flow through and that's whether the join

1243
01:01:33,619 --> 01:01:38,859
sync and the leave sync are important

1244
01:01:35,990 --> 01:01:38,859
when you have multihoming

1245
01:01:43,170 --> 01:01:47,460
now with the joint when you have multi

1246
01:01:45,810 --> 01:01:52,620
homeless systems the joint sink and

1247
01:01:47,460 --> 01:01:53,850
leave sink ensure that the D F the D F

1248
01:01:52,620 --> 01:01:56,549
is always the one that sends the

1249
01:01:53,850 --> 01:01:58,470
estimate route and the joint sink and

1250
01:01:56,550 --> 01:02:01,820
lead sink ensures that the D F is aware

1251
01:01:58,470 --> 01:02:10,500
that the estimate route needs to be

1252
01:02:01,820 --> 01:02:12,960
advertised or withdrawn now these are

1253
01:02:10,500 --> 01:02:15,060
machinery that you will that already

1254
01:02:12,960 --> 01:02:17,820
lives under the covers of things like MC

1255
01:02:15,060 --> 01:02:19,500
lag the dis difference so it's not like

1256
01:02:17,820 --> 01:02:22,260
hey you know this looks complicated

1257
01:02:19,500 --> 01:02:24,180
well you're living it today it's just

1258
01:02:22,260 --> 01:02:26,700
you don't see it and the nice thing

1259
01:02:24,180 --> 01:02:28,319
about evpn is you actually see

1260
01:02:26,700 --> 01:02:29,910
everything and so and sometimes it's

1261
01:02:28,320 --> 01:02:30,630
kind of like wow that's that's that's

1262
01:02:29,910 --> 01:02:32,730
too complicated

1263
01:02:30,630 --> 01:02:34,830
well guess what you're living in with it

1264
01:02:32,730 --> 01:02:36,210
today if you use MC lag you got all this

1265
01:02:34,830 --> 01:02:40,529
stuff going on today you just don't know

1266
01:02:36,210 --> 01:02:43,080
about it right and so we're just kind of

1267
01:02:40,530 --> 01:02:45,840
wringing it out with evpn you're making

1268
01:02:43,080 --> 01:02:48,750
it standards okay

1269
01:02:45,840 --> 01:02:50,360
optimized inter subnet multicast smile

1270
01:02:48,750 --> 01:02:54,570
flow I'm going to just say Oh ISM

1271
01:02:50,360 --> 01:02:57,650
basically in typical multicast right the

1272
01:02:54,570 --> 01:03:00,410
Gateway at the gateway you replicate

1273
01:02:57,650 --> 01:03:05,100
again and again for every single subnet

1274
01:03:00,410 --> 01:03:07,560
right with oi'm you only replicate once

1275
01:03:05,100 --> 01:03:09,089
to an egress v tap the ingress view tip

1276
01:03:07,560 --> 01:03:10,500
only replicates one to an egress riva

1277
01:03:09,090 --> 01:03:15,240
tv-type regardless of the number of

1278
01:03:10,500 --> 01:03:17,610
subnets at that V tab and this only

1279
01:03:15,240 --> 01:03:19,439
works with edge router bridging and

1280
01:03:17,610 --> 01:03:21,240
introduces a concept of distributed dr

1281
01:03:19,440 --> 01:03:22,890
and supplemental bt so I'll talk a

1282
01:03:21,240 --> 01:03:27,240
little bit more about it in a few

1283
01:03:22,890 --> 01:03:28,410
minutes yeah new procedures no new road

1284
01:03:27,240 --> 01:03:32,430
types okay

1285
01:03:28,410 --> 01:03:34,740
there's also this new capability called

1286
01:03:32,430 --> 01:03:39,230
assisted replicator and what the

1287
01:03:34,740 --> 01:03:39,229
assister replicator does is you know

1288
01:03:40,370 --> 01:03:45,600
ingress v taps they send all their bum

1289
01:03:43,410 --> 01:03:48,120
to an assistant replicator and the

1290
01:03:45,600 --> 01:03:51,089
assisted replicator does the work of

1291
01:03:48,120 --> 01:03:52,319
replicating so the the load the

1292
01:03:51,090 --> 01:03:53,370
replication load on the ingress goes

1293
01:03:52,320 --> 01:03:55,130
away and gets transferred to the

1294
01:03:53,370 --> 01:03:57,019
replicas replicate

1295
01:03:55,130 --> 01:04:04,009
the replicator could be connected maybe

1296
01:03:57,019 --> 01:04:06,288
with more capacity right now you can

1297
01:04:04,009 --> 01:04:08,599
have multiple replicators so you can

1298
01:04:06,289 --> 01:04:09,920
have a set of replicator so your ingress

1299
01:04:08,599 --> 01:04:11,720
feet up can actually load balanced

1300
01:04:09,920 --> 01:04:14,690
across that set if one of the

1301
01:04:11,720 --> 01:04:16,149
replicators goes down it just erupted

1302
01:04:14,690 --> 01:04:22,700
you know it uses the the remaining

1303
01:04:16,150 --> 01:04:26,869
replicators and uh yeah I said it it's

1304
01:04:22,700 --> 01:04:29,328
already new procedures and there's a new

1305
01:04:26,869 --> 01:04:33,890
PMSI tunnel flags but otherwise it's

1306
01:04:29,329 --> 01:04:36,999
known raw types now all of this stuff

1307
01:04:33,890 --> 01:04:39,799
that we spoke of selectively poison and

1308
01:04:36,999 --> 01:04:43,479
a city replicator can actually be

1309
01:04:39,799 --> 01:04:46,038
combined together right to create

1310
01:04:43,479 --> 01:04:48,470
overlay replication that depending on

1311
01:04:46,039 --> 01:04:51,049
your topology could be as efficient as

1312
01:04:48,470 --> 01:04:54,950
underlay replication well when you bring

1313
01:04:51,049 --> 01:04:57,529
all of these things together okay so and

1314
01:04:54,950 --> 01:05:01,578
finally I'm going to go over you know

1315
01:04:57,529 --> 01:05:10,009
how do you do multicast in the existing

1316
01:05:01,579 --> 01:05:12,859
overlay service models today you can do

1317
01:05:10,009 --> 01:05:17,210
it with an external multicast only

1318
01:05:12,859 --> 01:05:19,308
routers so all of your unicast routing

1319
01:05:17,210 --> 01:05:21,140
can happen in the overlay and your

1320
01:05:19,309 --> 01:05:23,299
multicast routing can happen as with an

1321
01:05:21,140 --> 01:05:25,489
external gateway and in order to do this

1322
01:05:23,299 --> 01:05:28,579
you want to using congruent multicast

1323
01:05:25,489 --> 01:05:30,589
namely with the use of M VPN so your

1324
01:05:28,579 --> 01:05:32,779
external gateways basically implement M

1325
01:05:30,589 --> 01:05:36,170
VPN and otherwise if you do pin base you

1326
01:05:32,779 --> 01:05:37,549
have must do congruent multicast and VPN

1327
01:05:36,170 --> 01:05:39,109
allows you to ingre in congruent

1328
01:05:37,549 --> 01:05:41,559
multicast so you can actually have

1329
01:05:39,109 --> 01:05:45,799
different gateways for M VPN as well as

1330
01:05:41,559 --> 01:05:48,079
vs mostly multicast versus unicast and

1331
01:05:45,799 --> 01:05:51,140
you can do this for obviously pure

1332
01:05:48,079 --> 01:06:00,619
bridged and both of your IRB based

1333
01:05:51,140 --> 01:06:03,288
overlays CRB and ARB okay so now that

1334
01:06:00,619 --> 01:06:05,059
doesn't mean that the the overlay itself

1335
01:06:03,289 --> 01:06:07,109
isn't doing anything for multicast it is

1336
01:06:05,059 --> 01:06:10,009
actually doing ingress replication

1337
01:06:07,109 --> 01:06:12,119
you can optimize it with selective

1338
01:06:10,009 --> 01:06:16,470
replication you can further optimize it

1339
01:06:12,119 --> 01:06:19,410
with assisted replication and then you

1340
01:06:16,470 --> 01:06:21,930
have IP multicast in CRB overlays we can

1341
01:06:19,410 --> 01:06:24,450
use a classical model in CRB basically

1342
01:06:21,930 --> 01:06:26,220
we give each crba a gateway a unique IP

1343
01:06:24,450 --> 01:06:28,529
address and in addition to its common IP

1344
01:06:26,220 --> 01:06:30,480
address its anycast eyepiece and we do

1345
01:06:28,529 --> 01:06:32,519
pim signaling and we do regular dr

1346
01:06:30,480 --> 01:06:35,400
election at the CRB gateways and we do

1347
01:06:32,519 --> 01:06:37,379
regular multicast at the CoV gateways so

1348
01:06:35,400 --> 01:06:41,160
that's how you can do multicast in CRB

1349
01:06:37,380 --> 01:06:42,779
and then ARB there's actually no

1350
01:06:41,160 --> 01:06:47,190
implementations of this oh isn't it

1351
01:06:42,779 --> 01:06:49,769
though but this is basically the right

1352
01:06:47,190 --> 01:06:52,890
model for doing optimizing or something

1353
01:06:49,769 --> 01:06:55,439
it with ER be today there be do you

1354
01:06:52,890 --> 01:06:59,279
don't get multicast at all right with

1355
01:06:55,440 --> 01:07:02,849
the RP it's just just unicast so the way

1356
01:06:59,279 --> 01:07:07,009
it's this the ER be always introduces

1357
01:07:02,849 --> 01:07:09,930
dystrophy dr and supplemental BD and

1358
01:07:07,009 --> 01:07:12,089
basically all the anycast all the the

1359
01:07:09,930 --> 01:07:15,419
brf's at the leaves

1360
01:07:12,089 --> 01:07:18,390
basically become local DRS you know

1361
01:07:15,420 --> 01:07:20,670
typically you know subnet you have you

1362
01:07:18,390 --> 01:07:23,759
know one dr right for the whole subnet

1363
01:07:20,670 --> 01:07:27,450
here you know subnet expands across most

1364
01:07:23,759 --> 01:07:30,059
beliefs every one of those brf's are DRS

1365
01:07:27,450 --> 01:07:32,009
right but they're only allowed to

1366
01:07:30,059 --> 01:07:33,599
forward to their local receivers they're

1367
01:07:32,009 --> 01:07:36,210
never allowed to forward back into the

1368
01:07:33,599 --> 01:07:39,539
core right and that is what we call

1369
01:07:36,210 --> 01:07:42,809
distributed you are the ingress beat app

1370
01:07:39,539 --> 01:07:44,999
basically replicates on the source VLAN

1371
01:07:42,809 --> 01:07:47,160
and any gateways that's also connected

1372
01:07:44,999 --> 01:07:49,319
to the source VLAN will will further

1373
01:07:47,160 --> 01:07:53,700
will replicate from the source VLAN to

1374
01:07:49,319 --> 01:07:55,380
their local receivers right for V taps

1375
01:07:53,700 --> 01:07:57,480
the source VLAN there's this thing

1376
01:07:55,380 --> 01:08:00,539
called a supplemental BD ingress V tap

1377
01:07:57,480 --> 01:08:02,099
will will send to those Vitebsk it will

1378
01:08:00,539 --> 01:08:04,380
set for that tenant it'll send it over

1379
01:08:02,099 --> 01:08:07,739
the Supplemental BD and the cell and and

1380
01:08:04,380 --> 01:08:10,890
Gateway on the supple for the tenant at

1381
01:08:07,739 --> 01:08:13,739
that V tap will do the same thing it'll

1382
01:08:10,890 --> 01:08:16,249
forward it to a supplement for two local

1383
01:08:13,739 --> 01:08:16,249
receivers

1384
01:08:18,389 --> 01:08:25,799
yeah I think I covered that and again

1385
01:08:23,310 --> 01:08:27,719
like I said the when when the VRS

1386
01:08:25,799 --> 01:08:31,589
forward to their local receivers on the

1387
01:08:27,719 --> 01:08:33,210
others on the other receivers beside the

1388
01:08:31,589 --> 01:08:34,710
source of it that I'm sorry the other

1389
01:08:33,210 --> 01:08:35,969
VLANs besides the source turn up net it

1390
01:08:34,710 --> 01:08:41,359
only forwards locally it would never

1391
01:08:35,969 --> 01:08:43,500
send it back to core okay and I

1392
01:08:41,359 --> 01:08:49,980
mentioned this already the Supplemental

1393
01:08:43,500 --> 01:08:52,080
BD is the one VLAN that spans all the

1394
01:08:49,979 --> 01:08:58,108
connected to all the VRS of a tenant so

1395
01:08:52,080 --> 01:09:01,229
if the source VLAN is not present on an

1396
01:08:58,109 --> 01:09:04,469
egress Vee tip the multicast for om is

1397
01:09:01,229 --> 01:09:09,809
sent it to that V tap via the

1398
01:09:04,469 --> 01:09:13,230
supplemental video BD for that tenant we

1399
01:09:09,810 --> 01:09:15,960
can also add selective multicast

1400
01:09:13,229 --> 01:09:19,968
replication as well as assisted

1401
01:09:15,960 --> 01:09:23,189
replication to optimize always zoom and

1402
01:09:19,969 --> 01:09:25,380
the final one I have here is you know

1403
01:09:23,189 --> 01:09:28,799
given that we don't have awesome how do

1404
01:09:25,380 --> 01:09:31,139
you do multicast if you're doing ERV you

1405
01:09:28,799 --> 01:09:33,569
can do it by adding a CRB gateway to e

1406
01:09:31,139 --> 01:09:36,600
RB so you basically have you know all of

1407
01:09:33,569 --> 01:09:38,850
your east-west route unicast traffic

1408
01:09:36,600 --> 01:09:43,770
happening you know distributed way and

1409
01:09:38,850 --> 01:09:46,139
your multicast will will get forwarded

1410
01:09:43,770 --> 01:09:49,469
at a central gateway all right so you're

1411
01:09:46,139 --> 01:09:51,750
combining ARB with CR b gateway in order

1412
01:09:49,469 --> 01:09:53,460
for multicast and what that looks like

1413
01:09:51,750 --> 01:09:56,270
is kind of like this we've seen this

1414
01:09:53,460 --> 01:09:59,850
picture before we had the border gateway

1415
01:09:56,270 --> 01:10:02,070
for communicating externally we added a

1416
01:09:59,850 --> 01:10:05,699
tenant vrf at the border gateway we

1417
01:10:02,070 --> 01:10:10,349
joined the Evi we gave that gateway the

1418
01:10:05,699 --> 01:10:12,269
same we we gave that gateway unique IP

1419
01:10:10,350 --> 01:10:15,600
addresses for it to do DF election just

1420
01:10:12,270 --> 01:10:17,909
like in the classical model and and now

1421
01:10:15,600 --> 01:10:19,260
it picks up all the multicast and

1422
01:10:17,909 --> 01:10:21,690
forwards did those inter subnet

1423
01:10:19,260 --> 01:10:22,889
forwarding for multicast at the see

1424
01:10:21,690 --> 01:10:25,710
every gateway all the unique a still

1425
01:10:22,889 --> 01:10:26,760
happens down here I know it's a bit kind

1426
01:10:25,710 --> 01:10:30,710
of sorry

1427
01:10:26,760 --> 01:10:30,710
all the unicast it still happens

1428
01:10:30,789 --> 01:10:40,119
down there the multicast happens up

1429
01:10:34,940 --> 01:10:42,320
there as well as going out that that's

1430
01:10:40,119 --> 01:10:46,070
that's the end of the tutorial

1431
01:10:42,320 --> 01:10:48,039
recap so we talked about the the four

1432
01:10:46,070 --> 01:10:53,409
overlay types for east-west networking

1433
01:10:48,039 --> 01:10:56,480
service chain concepts for extra tenant

1434
01:10:53,409 --> 01:10:58,848
communication and we talked about

1435
01:10:56,480 --> 01:11:04,489
optimized replication options any VPN

1436
01:10:58,849 --> 01:11:07,219
and like I mentioned before if you can

1437
01:11:04,489 --> 01:11:09,709
is only as complex as it needs to be

1438
01:11:07,219 --> 01:11:11,300
right there's a lot of route types yes

1439
01:11:09,710 --> 01:11:12,679
but if you're not doing multihoming

1440
01:11:11,300 --> 01:11:13,999
you're not doing the right multihoming

1441
01:11:12,679 --> 01:11:14,960
route types you're not doing replication

1442
01:11:13,999 --> 01:11:17,590
you're not doing the replication route

1443
01:11:14,960 --> 01:11:21,920
types so you're basically using the bits

1444
01:11:17,590 --> 01:11:25,130
that you need right and again different

1445
01:11:21,920 --> 01:11:26,869
implementations might actually try to

1446
01:11:25,130 --> 01:11:28,280
simplify things for you by giving you

1447
01:11:26,869 --> 01:11:29,749
one knob that does you know ten

1448
01:11:28,280 --> 01:11:32,690
different things but if you were to take

1449
01:11:29,749 --> 01:11:35,300
the covers off a VPN was not in designed

1450
01:11:32,690 --> 01:11:37,308
to be it was designed to for you to

1451
01:11:35,300 --> 01:11:39,440
actually create abstractions or fixed

1452
01:11:37,309 --> 01:11:41,090
abstraction on top but also for more

1453
01:11:39,440 --> 01:11:42,799
flexible implementations for you to be

1454
01:11:41,090 --> 01:11:45,980
able to do lots of cool things with it

1455
01:11:42,800 --> 01:11:48,499
right and the degree of complexity is is

1456
01:11:45,980 --> 01:11:50,989
the complexity you own because that's

1457
01:11:48,499 --> 01:11:53,150
what you want to do right and if you

1458
01:11:50,989 --> 01:11:55,280
want to do something you got to own the

1459
01:11:53,150 --> 01:12:01,190
complexity for it right it's and it

1460
01:11:55,280 --> 01:12:05,889
doesn't come for free yeah and it's an

1461
01:12:01,190 --> 01:12:05,888
open standard that's it

1462
01:12:11,310 --> 01:12:21,520
any questions comments I have a few

1463
01:12:17,080 --> 01:12:25,450
minutes I back here - you're right

1464
01:12:21,520 --> 01:12:28,930
you're right yeah yeah David Zimmerman

1465
01:12:25,450 --> 01:12:31,990
LinkedIn so in all honesty I ran out of

1466
01:12:28,930 --> 01:12:33,970
buffer at about 45 minutes or so

1467
01:12:31,990 --> 01:12:37,840
this was really comprehensive I was

1468
01:12:33,970 --> 01:12:40,420
having flashbacks to my VPLS days and

1469
01:12:37,840 --> 01:12:42,460
wishing for VP VPN about five years ago

1470
01:12:40,420 --> 01:12:44,650
and it's nice to see the world has moved

1471
01:12:42,460 --> 01:12:46,570
on and improved that case I would

1472
01:12:44,650 --> 01:12:49,809
inflict that on my current work thanks I

1473
01:12:46,570 --> 01:12:52,889
mean we started this work by the way we

1474
01:12:49,810 --> 01:12:55,480
began the eve you can journey in 2007

1475
01:12:52,890 --> 01:12:59,080
right it just took a long time in fact

1476
01:12:55,480 --> 01:13:00,730
you know we standardized a VPN evpn was

1477
01:12:59,080 --> 01:13:03,370
designed to be a data center protocol

1478
01:13:00,730 --> 01:13:05,230
and it turns out that it was a superset

1479
01:13:03,370 --> 01:13:06,760
of all the functionality needed in the

1480
01:13:05,230 --> 01:13:08,169
land and there was no data center

1481
01:13:06,760 --> 01:13:09,940
working group in the IETF so we had to

1482
01:13:08,170 --> 01:13:12,280
standardize it in the LAN working group

1483
01:13:09,940 --> 01:13:15,070
in the l2 VPN working group so it was a

1484
01:13:12,280 --> 01:13:16,360
long journey to get to for evey pin to

1485
01:13:15,070 --> 01:13:18,460
get to the place for which it was

1486
01:13:16,360 --> 01:13:20,469
designed well the whole multihoming

1487
01:13:18,460 --> 01:13:24,910
thing I was trying to do that with VPLS

1488
01:13:20,470 --> 01:13:28,000
and after one catastrophic attempt at

1489
01:13:24,910 --> 01:13:30,010
that kind of just worked around it a

1490
01:13:28,000 --> 01:13:32,440
figuring at some point evpn would be

1491
01:13:30,010 --> 01:13:35,650
fully cooked so it's it's really good to

1492
01:13:32,440 --> 01:13:39,759
see how cooked it is my specific

1493
01:13:35,650 --> 01:13:42,370
question on on slide 26 I can reference

1494
01:13:39,760 --> 01:13:44,830
the IP routed overlay yeah which is kind

1495
01:13:42,370 --> 01:13:47,470
of the simple model you mentioned you

1496
01:13:44,830 --> 01:13:49,150
requires BGP to host for IP address

1497
01:13:47,470 --> 01:13:53,020
mobility is that because there's a

1498
01:13:49,150 --> 01:13:55,210
specific BGP TLV that's involved or no

1499
01:13:53,020 --> 01:13:58,360
it's just you know remember Ethernet is

1500
01:13:55,210 --> 01:14:00,940
plug-and-play it's designed for mobility

1501
01:13:58,360 --> 01:14:03,460
if it's something moves you know any

1502
01:14:00,940 --> 01:14:05,410
view in an Ethernet a destination can

1503
01:14:03,460 --> 01:14:08,320
only be in one place or another it

1504
01:14:05,410 --> 01:14:11,650
cannot be in two places an IP it can be

1505
01:14:08,320 --> 01:14:13,450
in two places so if you have two end

1506
01:14:11,650 --> 01:14:15,670
systems right and they have a workload

1507
01:14:13,450 --> 01:14:18,630
with an address and the workload moves

1508
01:14:15,670 --> 01:14:20,609
from one end system to the other right

1509
01:14:18,630 --> 01:14:24,149
first of all

1510
01:14:20,609 --> 01:14:25,859
this end system you know is there's no

1511
01:14:24,149 --> 01:14:29,879
common subnet this is this is a

1512
01:14:25,859 --> 01:14:31,889
standalone system a / 32 entry right

1513
01:14:29,879 --> 01:14:33,839
somebody has to inform the IP overlay

1514
01:14:31,889 --> 01:14:36,479
that it's here and then that it's there

1515
01:14:33,839 --> 01:14:38,399
right and that has unique bgp peering to

1516
01:14:36,479 --> 01:14:40,260
the end system right in order for it to

1517
01:14:38,399 --> 01:14:44,070
announce the workloads that it has and

1518
01:14:40,260 --> 01:14:46,139
if a workload moves though the were the

1519
01:14:44,070 --> 01:14:47,219
end system from which it moved has to

1520
01:14:46,139 --> 01:14:49,949
announce a withdrawal

1521
01:14:47,219 --> 01:14:52,019
okay so that's that's the that's the BGP

1522
01:14:49,949 --> 01:14:55,379
yeah he is that you've got the end

1523
01:14:52,019 --> 01:14:59,129
system integrated with your your routing

1524
01:14:55,379 --> 01:15:00,449
and you have it could be it could be rip

1525
01:14:59,129 --> 01:15:02,999
for that matter right

1526
01:15:00,449 --> 01:15:05,369
that could be rip yeah okay let's focus

1527
01:15:02,999 --> 01:15:10,800
know what the problem with rip is it

1528
01:15:05,369 --> 01:15:12,570
ages out right I mean yeah you can yeah

1529
01:15:10,800 --> 01:15:14,699
yeah I guess there's nothing like a GP

1530
01:15:12,570 --> 01:15:16,018
specifically like a TIA like a TLV there

1531
01:15:14,699 --> 01:15:19,888
could be you know if you had a niacin is

1532
01:15:16,019 --> 01:15:21,869
is routing protocol on your host it

1533
01:15:19,889 --> 01:15:24,570
could in it you just need an injectable

1534
01:15:21,869 --> 01:15:28,169
mechanism right yeah okay that's it I

1535
01:15:24,570 --> 01:15:30,030
mean it's rocket science is just by the

1536
01:15:28,169 --> 01:15:31,858
way there is and I that's the one a

1537
01:15:30,030 --> 01:15:33,648
couple slides that I missed that I just

1538
01:15:31,859 --> 01:15:37,409
skipped over in the interest of time

1539
01:15:33,649 --> 01:15:41,189
there is a draft out there for IP

1540
01:15:37,409 --> 01:15:45,358
mobility right so basically it takes the

1541
01:15:41,189 --> 01:15:47,879
the the sequence the Mac mobility

1542
01:15:45,359 --> 01:15:50,579
extended community used for l2 to do the

1543
01:15:47,879 --> 01:15:52,530
Mac mobility in L 2 for l2 for Mac type

1544
01:15:50,579 --> 01:15:55,619
to route and it get and it gives it to

1545
01:15:52,530 --> 01:15:57,809
LLL type five so when the emaki mobility

1546
01:15:55,619 --> 01:15:59,549
extended community is associated to type

1547
01:15:57,809 --> 01:16:01,859
five it means that the end system is

1548
01:15:59,550 --> 01:16:03,510
either here or there right and whoever

1549
01:16:01,859 --> 01:16:04,979
has the highest sequence number it's

1550
01:16:03,510 --> 01:16:06,239
that's the where it's supposed to be and

1551
01:16:04,979 --> 01:16:10,320
everybody else is supposed to withdraw

1552
01:16:06,239 --> 01:16:12,178
right so that is there there are some

1553
01:16:10,320 --> 01:16:13,679
caveats and that's why I skipped over

1554
01:16:12,179 --> 01:16:16,699
because you talking about the caveats

1555
01:16:13,679 --> 01:16:19,399
with Bo take awhile but there is this

1556
01:16:16,699 --> 01:16:22,199
draft out there that says you could do

1557
01:16:19,399 --> 01:16:23,969
mobility using the extent mobility

1558
01:16:22,199 --> 01:16:25,709
extended community and Eve you can by

1559
01:16:23,969 --> 01:16:26,849
associating to a type five instead of

1560
01:16:25,709 --> 01:16:29,369
having the end system have to be

1561
01:16:26,849 --> 01:16:31,210
directly trusted to to integrate with

1562
01:16:29,369 --> 01:16:33,549
your routing

1563
01:16:31,210 --> 01:16:35,380
I'm sorry instead instead of having the

1564
01:16:33,550 --> 01:16:36,730
end system directly involved yeah

1565
01:16:35,380 --> 01:16:42,430
instead of having the end system

1566
01:16:36,730 --> 01:16:45,129
involved in in so in that case it

1567
01:16:42,430 --> 01:16:47,440
involves there's still a VLAN component

1568
01:16:45,130 --> 01:16:51,280
there right and that VLAN component

1569
01:16:47,440 --> 01:16:56,830
still has to do learning right but that

1570
01:16:51,280 --> 01:16:58,540
host route is is you know the learning

1571
01:16:56,830 --> 01:17:01,150
actually happens at the edge through ARP

1572
01:16:58,540 --> 01:17:02,890
right and it's exactly like what we

1573
01:17:01,150 --> 01:17:05,080
described in terms of edge router at

1574
01:17:02,890 --> 01:17:07,870
bridging where the locally learned ARP

1575
01:17:05,080 --> 01:17:08,380
is advertised as a type 5 route same

1576
01:17:07,870 --> 01:17:10,269
thing here

1577
01:17:08,380 --> 01:17:12,160
it's a locally learn ARP is advertised

1578
01:17:10,270 --> 01:17:14,640
type 5 route but the VLAN itself is not

1579
01:17:12,160 --> 01:17:19,620
an overlay it's it's it's just

1580
01:17:14,640 --> 01:17:19,620
individual VLANs that just happens to

1581
01:17:21,060 --> 01:17:27,880
you know we use our proxy which is

1582
01:17:24,790 --> 01:17:29,320
different from proxy are sorry we use

1583
01:17:27,880 --> 01:17:33,280
proxy ARP which is different from our

1584
01:17:29,320 --> 01:17:38,849
proxy right to extend subnets with with

1585
01:17:33,280 --> 01:17:40,960
the the type 5 host mobility model so I

1586
01:17:38,850 --> 01:17:42,219
need some slides to discuss them maybe I

1587
01:17:40,960 --> 01:17:46,750
could talk to you about it later it's is

1588
01:17:42,219 --> 01:17:48,699
there's it's oh my my the reason it

1589
01:17:46,750 --> 01:17:50,380
caught my attention is that there are

1590
01:17:48,699 --> 01:17:54,639
cases where I want to look at mobility

1591
01:17:50,380 --> 01:17:57,699
for a service but you know in in in like

1592
01:17:54,640 --> 01:17:59,320
previous life the same group ran the

1593
01:17:57,699 --> 01:18:01,089
routing as ran the system that was

1594
01:17:59,320 --> 01:18:02,769
injecting the slash narratives that was

1595
01:18:01,090 --> 01:18:04,360
that was all great in my current life

1596
01:18:02,770 --> 01:18:06,880
there are completely different groups

1597
01:18:04,360 --> 01:18:12,670
and and somewhat siloed so you want to

1598
01:18:06,880 --> 01:18:14,830
sort of have support wade away from the

1599
01:18:12,670 --> 01:18:17,650
injection side and more like what you

1600
01:18:14,830 --> 01:18:19,840
were describing yeah why don't we speak

1601
01:18:17,650 --> 01:18:22,629
afterwards I can just go through those

1602
01:18:19,840 --> 01:18:24,219
slides with you I think I guess I think

1603
01:18:22,630 --> 01:18:26,710
I get it now just yeah yeah it's it's

1604
01:18:24,219 --> 01:18:30,430
not free let's put it that way it's and

1605
01:18:26,710 --> 01:18:31,960
it's not a panacea but it maybe works

1606
01:18:30,430 --> 01:18:32,880
for some people I don't know it probably

1607
01:18:31,960 --> 01:18:40,390
wouldn't work for me

1608
01:18:32,880 --> 01:18:40,929
thank you yeah amen nice talk so Damon

1609
01:18:40,390 --> 01:18:42,409
Garros

1610
01:18:40,929 --> 01:18:46,150
these robux

1611
01:18:42,409 --> 01:18:52,519
just way too can you speak a little bit

1612
01:18:46,150 --> 01:18:55,519
how es is and the new type 5c metrics

1613
01:18:52,520 --> 01:18:57,440
have been adopted by the industry like

1614
01:18:55,520 --> 01:19:01,070
is that something knowledge reworking

1615
01:18:57,440 --> 01:19:06,169
multi-vendor or are we still seeing the

1616
01:19:01,070 --> 01:19:12,230
type 5 symmetric yes because I and es x

1617
01:19:06,170 --> 01:19:16,460
multihoming yes well we're seeing es

1618
01:19:12,230 --> 01:19:19,250
eyes are now being implemented by at

1619
01:19:16,460 --> 01:19:21,530
least four vendors right but maybe

1620
01:19:19,250 --> 01:19:22,520
they're not the vendors you want to

1621
01:19:21,530 --> 01:19:24,590
implement it

1622
01:19:22,520 --> 01:19:26,719
[Music]

1623
01:19:24,590 --> 01:19:31,340
III think that with a growing adoption

1624
01:19:26,719 --> 01:19:34,070
of evpn that eventually all of the

1625
01:19:31,340 --> 01:19:35,869
vendors will implement it especially as

1626
01:19:34,070 --> 01:19:38,659
the newer silicon it's easier to

1627
01:19:35,869 --> 01:19:41,750
implement it was much harder and older

1628
01:19:38,659 --> 01:19:43,460
silicon so I think it's just a matter of

1629
01:19:41,750 --> 01:19:46,040
time we have four vendors implementing

1630
01:19:43,460 --> 01:19:49,960
right now and the other two or three

1631
01:19:46,040 --> 01:19:53,079
before or all the new routing you know

1632
01:19:49,960 --> 01:20:00,219
vendors probably implemented over time

1633
01:19:53,079 --> 01:20:04,659
and as far as type five base symmetric

1634
01:20:00,219 --> 01:20:07,639
the EA and TC for symmetric it only

1635
01:20:04,659 --> 01:20:09,589
tests their the that recognized you know

1636
01:20:07,639 --> 01:20:12,050
they've recognized test center right in

1637
01:20:09,590 --> 01:20:14,150
the Europe they only test symmetric type

1638
01:20:12,050 --> 01:20:16,579
five they don't know tested symmetric

1639
01:20:14,150 --> 01:20:18,530
type 2 and it is interoperable across

1640
01:20:16,579 --> 01:20:23,989
all the vendors that we've been tested

1641
01:20:18,530 --> 01:20:26,659
against really cool thanks thanks by the

1642
01:20:23,989 --> 01:20:28,909
way I personally you know I I'm a purist

1643
01:20:26,659 --> 01:20:32,150
and I like to keep my layer 2 and layer

1644
01:20:28,909 --> 01:20:33,769
3 separate to the degree possible I know

1645
01:20:32,150 --> 01:20:38,290
evpn does bring these things together

1646
01:20:33,770 --> 01:20:42,199
but in terms of you know trading routes

1647
01:20:38,290 --> 01:20:44,570
I think there's some value and just

1648
01:20:42,199 --> 01:20:46,839
keeping the the type the layer 3 routing

1649
01:20:44,570 --> 01:20:51,259
exchange separate from the layer 2

1650
01:20:46,840 --> 01:20:55,429
exchange in fact you know there is no

1651
01:20:51,260 --> 01:20:56,390
there's there's no impact in the control

1652
01:20:55,429 --> 01:20:59,930
plane

1653
01:20:56,390 --> 01:21:00,470
or in the rib to doing type 5 versus

1654
01:20:59,930 --> 01:21:03,220
type 2

1655
01:21:00,470 --> 01:21:06,590
it's the resources consumed are

1656
01:21:03,220 --> 01:21:08,270
basically the same in type 2 takes one

1657
01:21:06,590 --> 01:21:09,980
route type and extract two pieces of

1658
01:21:08,270 --> 01:21:12,860
information and it updates the same

1659
01:21:09,980 --> 01:21:15,230
tables the same fibs and type five it

1660
01:21:12,860 --> 01:21:17,059
takes to route types and does exactly

1661
01:21:15,230 --> 01:21:20,179
the same thing so your cost is a little

1662
01:21:17,060 --> 01:21:21,800
bit extra memory right but your

1663
01:21:20,180 --> 01:21:23,360
opportunity is it's much more flexible

1664
01:21:21,800 --> 01:21:27,380
you can do more things with it because

1665
01:21:23,360 --> 01:21:29,839
they're not so conjoined so we kind of

1666
01:21:27,380 --> 01:21:33,830
prefer type five the historically also I

1667
01:21:29,840 --> 01:21:35,660
want to say is type five the type five

1668
01:21:33,830 --> 01:21:40,309
draft and specifically birth to birth

1669
01:21:35,660 --> 01:21:43,760
came after the type to spec was written

1670
01:21:40,310 --> 01:21:45,830
right so my personal feeling having been

1671
01:21:43,760 --> 01:21:47,270
involved as long as I have if it had

1672
01:21:45,830 --> 01:21:53,059
been the other way there would be no

1673
01:21:47,270 --> 01:21:55,570
type two symmetric right it would just

1674
01:21:53,060 --> 01:21:55,570
be type five

1675
01:21:58,950 --> 01:22:04,389
and yes thanks guys appreciate your

1676
01:22:03,210 --> 01:22:09,149
attendance

1677
01:22:04,390 --> 01:22:09,149
[Applause]

1678
01:22:13,559 --> 01:22:15,619
you

