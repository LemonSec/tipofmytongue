1
00:00:11,640 --> 00:00:16,070
morning can hear me all right

2
00:00:16,180 --> 00:00:24,140
so talking about white box why am I here

3
00:00:21,529 --> 00:00:26,509
to shared open networking experience

4
00:00:24,140 --> 00:00:29,240
from an enterprise perspective I noted

5
00:00:26,510 --> 00:00:31,189
non hyper scale there because I think

6
00:00:29,240 --> 00:00:33,019
it's very different for a typical

7
00:00:31,189 --> 00:00:35,390
enterprise to put white boxes in their

8
00:00:33,020 --> 00:00:39,050
network no we're not a Facebook Google

9
00:00:35,390 --> 00:00:41,360
we don't have an army of IT engineers to

10
00:00:39,050 --> 00:00:45,769
build code or write their own thing like

11
00:00:41,360 --> 00:00:48,340
Sonic so a little bit about me my

12
00:00:45,770 --> 00:00:51,379
company I work at Qualcomm we have a

13
00:00:48,340 --> 00:00:52,850
30-plus data centers about half of those

14
00:00:51,379 --> 00:00:55,670
are actually considered server rooms

15
00:00:52,850 --> 00:00:58,280
because they're Tier one or two data

16
00:00:55,670 --> 00:01:02,989
centers not three or four like the

17
00:00:58,280 --> 00:01:06,290
better ones lots of data centers which

18
00:01:02,989 --> 00:01:09,408
is mostly spine leaf topology and we

19
00:01:06,290 --> 00:01:11,270
have a dedicated net DevOps team so more

20
00:01:09,409 --> 00:01:13,340
on that later but we're very lucky to

21
00:01:11,270 --> 00:01:14,720
have a team of developers about seven

22
00:01:13,340 --> 00:01:17,060
there right

23
00:01:14,720 --> 00:01:24,049
custom tools for us for a self-service

24
00:01:17,060 --> 00:01:25,280
type automation what is open networking

25
00:01:24,049 --> 00:01:28,880
it kind of depends on who you're talking

26
00:01:25,280 --> 00:01:31,520
to who your audience is for us open

27
00:01:28,880 --> 00:01:37,240
networking is basically a white box or

28
00:01:31,520 --> 00:01:40,939
bright box with onei and software on top

29
00:01:37,240 --> 00:01:43,460
so for us we've tested many different

30
00:01:40,939 --> 00:01:45,710
things you hear me talk mostly about

31
00:01:43,460 --> 00:01:49,579
cumulus and big switch monitoring fabric

32
00:01:45,710 --> 00:01:52,219
we've also tested open switch Sonic and

33
00:01:49,579 --> 00:01:57,500
Juno's on white boxes just to make sure

34
00:01:52,219 --> 00:02:02,210
everything works and have a backup so

35
00:01:57,500 --> 00:02:05,840
why open networking it's it's one of the

36
00:02:02,210 --> 00:02:07,189
obvious drivers is cost reduction you

37
00:02:05,840 --> 00:02:09,860
save a lot of money by doing open

38
00:02:07,189 --> 00:02:11,810
networking that's initially why we

39
00:02:09,860 --> 00:02:14,090
started looking at open networking at

40
00:02:11,810 --> 00:02:16,550
Qualcomm we want to see what was out

41
00:02:14,090 --> 00:02:19,430
there a few years ago we started paying

42
00:02:16,550 --> 00:02:21,830
more attention to Finance and this was

43
00:02:19,430 --> 00:02:26,640
an easy way to potentially save a lot of

44
00:02:21,830 --> 00:02:28,920
money this aggregation is another one so

45
00:02:26,640 --> 00:02:31,079
we settled on Big Switch for monitoring

46
00:02:28,920 --> 00:02:33,500
fabric wixi it's a packet replication

47
00:02:31,080 --> 00:02:36,330
network and cumulus for networking but

48
00:02:33,500 --> 00:02:37,650
that can change so if one of our

49
00:02:36,330 --> 00:02:39,120
favorite vendors gets purchased by

50
00:02:37,650 --> 00:02:40,590
another large vendor swallowed up and

51
00:02:39,120 --> 00:02:43,650
they discontinue the product we can

52
00:02:40,590 --> 00:02:45,690
shift and run different software on top

53
00:02:43,650 --> 00:02:49,350
hopefully that doesn't happen with these

54
00:02:45,690 --> 00:02:51,300
two then this Linux is easier to

55
00:02:49,350 --> 00:02:53,070
automate than Cisco risk the Junos I

56
00:02:51,300 --> 00:02:56,570
might be a little bit biased when I say

57
00:02:53,070 --> 00:02:59,750
this I started out with ansible on Linux

58
00:02:56,570 --> 00:03:02,310
more of a server type of automation

59
00:02:59,750 --> 00:03:05,130
mostly just copy file copy type

60
00:03:02,310 --> 00:03:08,730
operations and it's very very simple

61
00:03:05,130 --> 00:03:11,400
very easy to use and we then started

62
00:03:08,730 --> 00:03:12,540
using ansible on Arista Cisco and other

63
00:03:11,400 --> 00:03:15,360
things there's a little bit more of a

64
00:03:12,540 --> 00:03:17,310
challenge so with with the these tools

65
00:03:15,360 --> 00:03:20,190
that weren't built for Linux using them

66
00:03:17,310 --> 00:03:22,260
on a Linux platform like cumulus or open

67
00:03:20,190 --> 00:03:25,680
switch is a little bit easier in my

68
00:03:22,260 --> 00:03:30,600
opinion but I have a picture there of

69
00:03:25,680 --> 00:03:32,310
some cattle versus pets it's a this is a

70
00:03:30,600 --> 00:03:35,010
server term that doesn't exactly

71
00:03:32,310 --> 00:03:36,540
translate to networking but I use it to

72
00:03:35,010 --> 00:03:39,870
try to illustrate a point with my

73
00:03:36,540 --> 00:03:41,429
engineers and my team that before we

74
00:03:39,870 --> 00:03:42,720
would have very very special switches

75
00:03:41,430 --> 00:03:44,580
and we would log into them we would know

76
00:03:42,720 --> 00:03:46,830
them by name and we would config to them

77
00:03:44,580 --> 00:03:48,330
and you know put all of our special

78
00:03:46,830 --> 00:03:50,220
configure on there maybe we had our own

79
00:03:48,330 --> 00:03:52,050
special shortcut commands on there and

80
00:03:50,220 --> 00:03:54,720
we would memorize the name of the switch

81
00:03:52,050 --> 00:03:56,310
well when you make a change like this to

82
00:03:54,720 --> 00:03:59,430
open networking it's very easy to go

83
00:03:56,310 --> 00:04:01,290
from that mindset to cattle mindset

84
00:03:59,430 --> 00:04:04,590
where you're using ansible to basically

85
00:04:01,290 --> 00:04:06,660
or a puppet chef whatever your flavor is

86
00:04:04,590 --> 00:04:08,880
to push out this this configuration and

87
00:04:06,660 --> 00:04:10,829
you're no longer need to keep track of

88
00:04:08,880 --> 00:04:12,329
the switch name all that's my special

89
00:04:10,830 --> 00:04:13,350
switch in that data center that always

90
00:04:12,330 --> 00:04:15,049
looking at you know they're all the same

91
00:04:13,350 --> 00:04:17,190
and you can basically use automation for

92
00:04:15,049 --> 00:04:21,570
configuration and show commands so it's

93
00:04:17,190 --> 00:04:23,460
it's a different mindset and it's it's

94
00:04:21,570 --> 00:04:26,520
Linux soap and Linux so we'll talk more

95
00:04:23,460 --> 00:04:27,690
about the specifics of our boxes but one

96
00:04:26,520 --> 00:04:29,690
thing I really like about it is it's

97
00:04:27,690 --> 00:04:32,760
basically an open Linux platform mam

98
00:04:29,690 --> 00:04:33,990
Arista lets you get into there bash and

99
00:04:32,760 --> 00:04:35,700
you can do a few things but you can't

100
00:04:33,990 --> 00:04:37,740
just install whatever you want so with

101
00:04:35,700 --> 00:04:39,200
the open networking it is open and

102
00:04:37,740 --> 00:04:43,820
allows you to do whatever you want

103
00:04:39,200 --> 00:04:46,490
do just great for us so how did we start

104
00:04:43,820 --> 00:04:47,810
we didn't just start by throwing in some

105
00:04:46,490 --> 00:04:50,770
white boxes straight into our data

106
00:04:47,810 --> 00:04:53,590
centers we did a lot of lab testing so

107
00:04:50,770 --> 00:04:55,340
about a year of lab testing I think

108
00:04:53,590 --> 00:04:59,090
tested a lot of different vendor

109
00:04:55,340 --> 00:05:02,479
products bought some trial licenses open

110
00:04:59,090 --> 00:05:04,820
some tack cases with a few vendors you

111
00:05:02,480 --> 00:05:06,680
know talked to a lot of SES and settled

112
00:05:04,820 --> 00:05:09,230
on cumulus for networking and Big Switch

113
00:05:06,680 --> 00:05:11,630
monitoring fabric four pack of

114
00:05:09,230 --> 00:05:13,700
replication network it's a little bit

115
00:05:11,630 --> 00:05:14,300
out of order because we started with big

116
00:05:13,700 --> 00:05:16,400
switch

117
00:05:14,300 --> 00:05:18,470
we had a very expensive a new e network

118
00:05:16,400 --> 00:05:20,030
packet brokering Network pack of

119
00:05:18,470 --> 00:05:22,850
replication two security tools things

120
00:05:20,030 --> 00:05:24,710
like that and the time came to renew the

121
00:05:22,850 --> 00:05:25,760
bill and I was like wow look at this I'd

122
00:05:24,710 --> 00:05:28,489
never gotten one of those kind of

123
00:05:25,760 --> 00:05:30,080
renewals before and basically for the

124
00:05:28,490 --> 00:05:31,670
price of renewal of like three or four

125
00:05:30,080 --> 00:05:35,150
boxes we were able to purchase a

126
00:05:31,670 --> 00:05:37,000
completely new BMF network all the

127
00:05:35,150 --> 00:05:39,109
switches the software everything and

128
00:05:37,000 --> 00:05:41,090
it's actually easier to configure in

129
00:05:39,110 --> 00:05:43,150
control as it's basically open flow

130
00:05:41,090 --> 00:05:47,150
underneath and uses a controller so we

131
00:05:43,150 --> 00:05:48,260
replaced a whole new e network with big

132
00:05:47,150 --> 00:05:50,929
switch hopefully the nobody's in here

133
00:05:48,260 --> 00:05:53,690
from a new e sorry about that but it

134
00:05:50,930 --> 00:05:55,010
just works so did that that was running

135
00:05:53,690 --> 00:05:57,410
for about a year or so and in the

136
00:05:55,010 --> 00:06:01,070
meantime we were testing cumulus and a

137
00:05:57,410 --> 00:06:02,630
few other things and in our labs and I'm

138
00:06:01,070 --> 00:06:05,840
said ok let's let's try it out so we

139
00:06:02,630 --> 00:06:07,969
started out with you know some basic

140
00:06:05,840 --> 00:06:10,219
copper installations which I'll show in

141
00:06:07,970 --> 00:06:12,470
a second so all some cool features I

142
00:06:10,220 --> 00:06:14,540
mentioned the open flow for a big

143
00:06:12,470 --> 00:06:16,160
monitoring fabric it's also when you

144
00:06:14,540 --> 00:06:18,290
bring these boxes up it's a heck of a

145
00:06:16,160 --> 00:06:20,900
lot easier because you basically start

146
00:06:18,290 --> 00:06:23,480
off with CTP type functionality zero

147
00:06:20,900 --> 00:06:25,460
touch provisioning and DHCP to load

148
00:06:23,480 --> 00:06:27,410
software so you don't have to run around

149
00:06:25,460 --> 00:06:29,930
with a console cable and plug in like we

150
00:06:27,410 --> 00:06:31,370
used to do basically use the network to

151
00:06:29,930 --> 00:06:34,070
bring these up if you're lucky enough to

152
00:06:31,370 --> 00:06:35,930
have an out-of-band network that is and

153
00:06:34,070 --> 00:06:37,430
cumulus if you haven't check them out

154
00:06:35,930 --> 00:06:40,010
they have some pretty cool Network

155
00:06:37,430 --> 00:06:41,960
features bgp unnumbered is a great one I

156
00:06:40,010 --> 00:06:42,150
mean how come you haven't done that for

157
00:06:41,960 --> 00:06:45,000
the

158
00:06:42,150 --> 00:06:46,260
10-15 years there's some other ones in

159
00:06:45,000 --> 00:06:47,610
there there that are exciting

160
00:06:46,260 --> 00:06:50,849
maybe not for everybody but for certain

161
00:06:47,610 --> 00:06:54,030
environments very useful so what about

162
00:06:50,850 --> 00:06:56,100
hardware we started off with act on edge

163
00:06:54,030 --> 00:06:56,429
core hardware because most of our

164
00:06:56,100 --> 00:06:58,350
vendors

165
00:06:56,430 --> 00:07:00,419
it seemed that most of their development

166
00:06:58,350 --> 00:07:02,669
was going that way and they had a lot of

167
00:07:00,419 --> 00:07:05,690
different boxes on the hardware Bailey

168
00:07:02,669 --> 00:07:10,229
list those worked well for both vendors

169
00:07:05,690 --> 00:07:12,600
we recently made a move to Dell for a

170
00:07:10,229 --> 00:07:15,469
lot of reasons one of mine was basically

171
00:07:12,600 --> 00:07:16,979
snap in rack rails I heard that on

172
00:07:15,470 --> 00:07:18,810
podcast some Wow

173
00:07:16,979 --> 00:07:21,539
how come we don't do that and doing it

174
00:07:18,810 --> 00:07:23,190
with servers for years so they're great

175
00:07:21,539 --> 00:07:26,250
these show up no screwdriver you just

176
00:07:23,190 --> 00:07:29,100
pop them in the quality's is a little

177
00:07:26,250 --> 00:07:31,229
bit better as well and whenever we buy

178
00:07:29,100 --> 00:07:33,419
switches we make sure that the model is

179
00:07:31,229 --> 00:07:36,449
on both of our vendors hardware

180
00:07:33,419 --> 00:07:37,948
compatibility list so we stock spares we

181
00:07:36,449 --> 00:07:40,320
don't actually buy a hardware support

182
00:07:37,949 --> 00:07:42,510
and if something dies we just swap it

183
00:07:40,320 --> 00:07:43,919
out whether it's big switch or cumulus

184
00:07:42,510 --> 00:07:46,169
you just swap out the hardware and the

185
00:07:43,919 --> 00:07:50,639
license is basically a license it's not

186
00:07:46,169 --> 00:07:53,659
tied to the Box optics and cables

187
00:07:50,639 --> 00:07:55,800
basically everything we've tried works

188
00:07:53,660 --> 00:07:58,620
that's another area where we've saved a

189
00:07:55,800 --> 00:08:02,130
lot of money and then underneath it's

190
00:07:58,620 --> 00:08:03,479
the same chips and Intel CPUs and and

191
00:08:02,130 --> 00:08:05,070
basically everything if you get in an

192
00:08:03,479 --> 00:08:07,680
Arista

193
00:08:05,070 --> 00:08:08,909
PCI same thing on one of these white

194
00:08:07,680 --> 00:08:11,280
boxes it's all the same hard way

195
00:08:08,910 --> 00:08:13,110
underneath and that that really helps

196
00:08:11,280 --> 00:08:14,669
because we know that the performance of

197
00:08:13,110 --> 00:08:19,889
these you know tried in two or tried in

198
00:08:14,669 --> 00:08:22,109
three chips as I mentioned we weren't

199
00:08:19,889 --> 00:08:24,690
able to just throw these boxes in and

200
00:08:22,110 --> 00:08:27,199
start going because there's very

201
00:08:24,690 --> 00:08:29,760
different architectures in both cases

202
00:08:27,199 --> 00:08:31,979
with the big switch modern fabric it was

203
00:08:29,760 --> 00:08:33,630
actually really easy we just put the

204
00:08:31,979 --> 00:08:36,088
boxes on the network a little bit of

205
00:08:33,630 --> 00:08:37,439
DHCP pull their software from the

206
00:08:36,089 --> 00:08:38,580
controller you pointed me the controller

207
00:08:37,440 --> 00:08:40,200
and everything else is done from the

208
00:08:38,580 --> 00:08:41,789
controller so those are easy so most of

209
00:08:40,200 --> 00:08:43,560
the the rest of what I'm going to talk

210
00:08:41,789 --> 00:08:47,430
about is focused on cumulus and how we

211
00:08:43,559 --> 00:08:50,810
do the the zero touch provisioning and

212
00:08:47,430 --> 00:08:52,729
initial configuration of those boxes

213
00:08:50,810 --> 00:08:54,109
so as I mentioned zero touch

214
00:08:52,730 --> 00:08:57,199
provisioning is the way to go those

215
00:08:54,110 --> 00:08:59,060
things boot up in Oni open Network

216
00:08:57,199 --> 00:09:01,849
install environment they look for a

217
00:08:59,060 --> 00:09:03,589
default URL give them a default URL and

218
00:09:01,850 --> 00:09:06,079
they just come up on the code version

219
00:09:03,589 --> 00:09:08,480
that you want that's great we store

220
00:09:06,079 --> 00:09:10,939
everything and get github have to do

221
00:09:08,480 --> 00:09:13,309
this if not you'll end up with engineers

222
00:09:10,939 --> 00:09:15,139
with different code and different ztp

223
00:09:13,309 --> 00:09:19,639
scripts on their laptops nothing matches

224
00:09:15,139 --> 00:09:22,430
up and you know it's just chaos that we

225
00:09:19,639 --> 00:09:26,930
use Jenkins for basically a centralized

226
00:09:22,430 --> 00:09:28,579
point to run our ansible playbooks from

227
00:09:26,930 --> 00:09:31,248
it and you'll see why here in a minute

228
00:09:28,579 --> 00:09:33,258
and then we use edible a lot of the

229
00:09:31,249 --> 00:09:35,569
other developers in our company use

230
00:09:33,259 --> 00:09:37,040
ansible i've gotten a lot of help from

231
00:09:35,569 --> 00:09:38,479
them as far as building this

232
00:09:37,040 --> 00:09:40,998
architecture there's a lot of examples

233
00:09:38,480 --> 00:09:43,309
online and it doesn't require agents so

234
00:09:40,999 --> 00:09:44,839
when we we started with ansible for

235
00:09:43,309 --> 00:09:49,399
cumulus but then we were able to move it

236
00:09:44,839 --> 00:09:54,259
to Arista Citrix a little bit and some

237
00:09:49,399 --> 00:09:57,529
other platforms so here's a picture of

238
00:09:54,259 --> 00:10:00,259
what that framework looks like as I

239
00:09:57,529 --> 00:10:02,449
mentioned we started it out for cumulus

240
00:10:00,259 --> 00:10:04,850
basically I don't know anybody ever

241
00:10:02,449 --> 00:10:08,000
configured a cumulus switch or on opx

242
00:10:04,850 --> 00:10:10,220
which a couple people the first time I

243
00:10:08,000 --> 00:10:12,889
did one of these I sat down and I you

244
00:10:10,220 --> 00:10:15,259
know opened up VI and I built out the

245
00:10:12,889 --> 00:10:17,509
resolve comm from the ntp comp and the

246
00:10:15,259 --> 00:10:19,730
ports are confident that one time I said

247
00:10:17,509 --> 00:10:22,009
never again I'm not doing VI every time

248
00:10:19,730 --> 00:10:24,350
my engineers would just rebel they

249
00:10:22,009 --> 00:10:25,670
wouldn't do that so that's how we

250
00:10:24,350 --> 00:10:27,589
started looking at how are we going to

251
00:10:25,670 --> 00:10:29,389
do this how are we going to configure

252
00:10:27,589 --> 00:10:32,660
these things in Mass and then have our

253
00:10:29,389 --> 00:10:34,399
configuration stay true to what it

254
00:10:32,660 --> 00:10:36,350
should be so basically the source of

255
00:10:34,399 --> 00:10:40,220
truth is in is in github for for our

256
00:10:36,350 --> 00:10:42,230
configurations and then we like I

257
00:10:40,220 --> 00:10:44,089
mentioned we use Jett Jenkins for the

258
00:10:42,230 --> 00:10:46,370
central point for which from which to

259
00:10:44,089 --> 00:10:49,069
run these playbooks and there's there's

260
00:10:46,370 --> 00:10:50,629
a lot of reasons for that you could look

261
00:10:49,069 --> 00:10:52,790
at ansible tower there's a few other

262
00:10:50,629 --> 00:10:54,769
things out there this one is we have a

263
00:10:52,790 --> 00:10:56,569
lot of Jenkins experience at the company

264
00:10:54,769 --> 00:10:58,550
again so a lot of people are using it we

265
00:10:56,569 --> 00:11:00,709
have tie-ins to Splunk so it tracks you

266
00:10:58,550 --> 00:11:00,899
know who ran a job when it was run with

267
00:11:00,709 --> 00:11:03,449
the

268
00:11:00,899 --> 00:11:04,920
put was and he can search through Splunk

269
00:11:03,449 --> 00:11:07,050
for that output so if you want to see

270
00:11:04,920 --> 00:11:08,790
you know what happened when and who ran

271
00:11:07,050 --> 00:11:12,089
this and who made this change to NCP

272
00:11:08,790 --> 00:11:14,099
conf it's all there it's green it also

273
00:11:12,089 --> 00:11:16,369
gives us a centralized place to run

274
00:11:14,100 --> 00:11:18,720
these these play books from so early on

275
00:11:16,369 --> 00:11:20,069
sorrow these play books are great and we

276
00:11:18,720 --> 00:11:21,809
can do ansible in this and that but if

277
00:11:20,069 --> 00:11:24,059
we just end up with play books on

278
00:11:21,809 --> 00:11:26,759
everybody's laptops it'll be just like

279
00:11:24,059 --> 00:11:28,379
you know or initial config scripts on

280
00:11:26,759 --> 00:11:30,119
everybody's laptops and then maybe this

281
00:11:28,379 --> 00:11:31,829
guy has his own name in there that has a

282
00:11:30,119 --> 00:11:34,589
local user account and then this one has

283
00:11:31,829 --> 00:11:37,498
these you know shortcut commands and

284
00:11:34,589 --> 00:11:40,319
everything kind of gets configuration

285
00:11:37,499 --> 00:11:41,759
straight so having everything in github

286
00:11:40,319 --> 00:11:44,519
and then running all the play books from

287
00:11:41,759 --> 00:11:46,589
one place kind of guarantee that we're

288
00:11:44,519 --> 00:11:48,029
tracking what's run where and this is a

289
00:11:46,589 --> 00:11:49,499
big part of our automation because if

290
00:11:48,029 --> 00:11:52,319
you don't have this things can kind of

291
00:11:49,499 --> 00:11:54,300
get out of control quickly another thing

292
00:11:52,319 --> 00:11:56,189
is that that Jenkins ansible server or

293
00:11:54,300 --> 00:11:58,709
servers is in a special subnet which has

294
00:11:56,189 --> 00:12:00,360
access into DM zs and certain other

295
00:11:58,709 --> 00:12:04,979
areas in our network so it's a little

296
00:12:00,360 --> 00:12:08,100
bit easier to do security and basically

297
00:12:04,980 --> 00:12:10,439
that Jenkins VM it's just a VM it's not

298
00:12:08,100 --> 00:12:11,759
it doesn't have any ansible plugins or

299
00:12:10,439 --> 00:12:13,259
anything installer I know it says that

300
00:12:11,759 --> 00:12:14,999
it here but we're just we just installed

301
00:12:13,259 --> 00:12:16,829
ansible on there we don't we try to keep

302
00:12:14,999 --> 00:12:17,910
it very simple so if the VM blows up I

303
00:12:16,829 --> 00:12:19,859
can just build another one and keep

304
00:12:17,910 --> 00:12:22,219
chugging and it's great for other things

305
00:12:19,860 --> 00:12:27,389
like cron jobs we want to run something

306
00:12:22,220 --> 00:12:29,370
once a day it's very easy to do so what

307
00:12:27,389 --> 00:12:31,470
do we automate almost everything so this

308
00:12:29,370 --> 00:12:35,279
this is in regards to our open

309
00:12:31,470 --> 00:12:37,230
networking specifically cumulus we use e

310
00:12:35,279 --> 00:12:39,059
TP for bring up like I mentioned ansible

311
00:12:37,230 --> 00:12:41,149
for the initial configuration so we push

312
00:12:39,059 --> 00:12:44,029
the global config on to the switches

313
00:12:41,149 --> 00:12:45,929
that's your resolve comp and TB Kampf

314
00:12:44,029 --> 00:12:48,240
ports are kind of all those things I

315
00:12:45,929 --> 00:12:51,689
mentioned it also restarts the services

316
00:12:48,240 --> 00:12:55,410
after it pushes those files now we have

317
00:12:51,689 --> 00:12:56,939
an API for user self-service GUI and I

318
00:12:55,410 --> 00:12:59,910
have some screenshots of that it's sort

319
00:12:56,939 --> 00:13:02,549
de - automation that lets our our users

320
00:12:59,910 --> 00:13:03,839
or our team that does the racket stack

321
00:13:02,549 --> 00:13:05,399
of servers actually go in there and

322
00:13:03,839 --> 00:13:07,049
change VLANs and do all that sort of

323
00:13:05,399 --> 00:13:09,240
things so they're not putting a request

324
00:13:07,049 --> 00:13:10,470
with us and waiting for our SLA of two

325
00:13:09,240 --> 00:13:15,030
three days whatever to

326
00:13:10,470 --> 00:13:17,070
unimportant that we also use ansible for

327
00:13:15,030 --> 00:13:18,839
global configuration compliance this is

328
00:13:17,070 --> 00:13:21,360
a new one that we've just started doing

329
00:13:18,840 --> 00:13:23,040
so we have audit requirements

330
00:13:21,360 --> 00:13:25,470
anybody else have audit requirements you

331
00:13:23,040 --> 00:13:28,680
have to comply with autumn yeah I know I

332
00:13:25,470 --> 00:13:31,110
do so it's a lot easier to just

333
00:13:28,680 --> 00:13:32,729
basically declare it really say once a

334
00:13:31,110 --> 00:13:34,860
week once a month whatever here are all

335
00:13:32,730 --> 00:13:36,840
your NTP servers here or is your syslog

336
00:13:34,860 --> 00:13:39,510
configuration here's your taxi

337
00:13:36,840 --> 00:13:41,640
configuration and then push that once a

338
00:13:39,510 --> 00:13:43,830
month once a week whatever and you get

339
00:13:41,640 --> 00:13:46,380
that feedback of if something's okay or

340
00:13:43,830 --> 00:13:48,360
something changed and it's a lot easier

341
00:13:46,380 --> 00:13:51,090
than auditing you know hundreds of

342
00:13:48,360 --> 00:13:52,320
switches and then looking through the

343
00:13:51,090 --> 00:13:54,930
results and then trying to go fix

344
00:13:52,320 --> 00:13:56,970
everything so it's a lot easier for us

345
00:13:54,930 --> 00:13:59,160
to to do that sort of thing on a

346
00:13:56,970 --> 00:14:00,900
Greenfield environment like cumulus

347
00:13:59,160 --> 00:14:03,689
white box all right definitely realize

348
00:14:00,900 --> 00:14:05,310
that and then I know down there do

349
00:14:03,690 --> 00:14:07,260
automation date one so if you are

350
00:14:05,310 --> 00:14:08,640
thinking of doing this or if you're

351
00:14:07,260 --> 00:14:10,560
working on in the lab everything

352
00:14:08,640 --> 00:14:11,910
definitely incorporate automation day

353
00:14:10,560 --> 00:14:13,949
one as part of it you don't want to

354
00:14:11,910 --> 00:14:15,930
start something new and then basically

355
00:14:13,950 --> 00:14:18,390
just fall into the old ways of config

356
00:14:15,930 --> 00:14:20,670
see everything one at a time this is a

357
00:14:18,390 --> 00:14:25,500
great opportunity to basically change

358
00:14:20,670 --> 00:14:28,380
the way you do things so some some

359
00:14:25,500 --> 00:14:30,240
examples zero-touch provisioning this is

360
00:14:28,380 --> 00:14:33,780
for cumulus and it's very easy it's just

361
00:14:30,240 --> 00:14:36,120
the default URL you pointed at a we use

362
00:14:33,780 --> 00:14:38,670
a web server the switch will boot up

363
00:14:36,120 --> 00:14:40,260
it's an Oni mode DHCP is out all of its

364
00:14:38,670 --> 00:14:41,760
interfaces we plug in the management

365
00:14:40,260 --> 00:14:44,760
interface to our out-of-band management

366
00:14:41,760 --> 00:14:47,040
network pulls an IP address DNS server

367
00:14:44,760 --> 00:14:49,439
default gateway and a default URL then

368
00:14:47,040 --> 00:14:52,140
it goes to that web server pulls down

369
00:14:49,440 --> 00:14:56,010
the code reboots and voila you have a

370
00:14:52,140 --> 00:14:57,750
cumulus switch one thing I didn't

371
00:14:56,010 --> 00:15:00,960
include on here is reservations we

372
00:14:57,750 --> 00:15:03,600
actually do mac-address reservations per

373
00:15:00,960 --> 00:15:05,250
switch so when we will either grab the

374
00:15:03,600 --> 00:15:06,900
MAC addresses from the switches before

375
00:15:05,250 --> 00:15:08,400
we send them out to the team to mount

376
00:15:06,900 --> 00:15:10,680
them or we just send all the switches to

377
00:15:08,400 --> 00:15:12,750
the team that mounts them they tell us

378
00:15:10,680 --> 00:15:15,479
they switch 47 is going to be MAC

379
00:15:12,750 --> 00:15:17,160
address you know ABCD and that we do a

380
00:15:15,480 --> 00:15:18,960
MAC address reservation for that so that

381
00:15:17,160 --> 00:15:20,560
we know when that switch comes up it's

382
00:15:18,960 --> 00:15:21,760
already got its right name correct name

383
00:15:20,560 --> 00:15:23,800
everything and we could just push the

384
00:15:21,760 --> 00:15:26,770
automation towards it whether it's a

385
00:15:23,800 --> 00:15:33,219
leaf or copper switch lying that sort of

386
00:15:26,770 --> 00:15:34,060
thing so once the switch is online on

387
00:15:33,220 --> 00:15:35,740
the network

388
00:15:34,060 --> 00:15:37,689
we've already zero-touch provisioned it

389
00:15:35,740 --> 00:15:40,839
is there we can ping it ssh to it

390
00:15:37,690 --> 00:15:42,279
whatnot then we'll run the it's will

391
00:15:40,839 --> 00:15:45,730
playbook to push down that global

392
00:15:42,279 --> 00:15:48,550
configuration additionally for for these

393
00:15:45,730 --> 00:15:51,120
switches we're pushing the leaf

394
00:15:48,550 --> 00:15:53,920
configuration so for cumulus will do a

395
00:15:51,120 --> 00:15:56,110
leaf set of two switches and they do

396
00:15:53,920 --> 00:15:59,110
their m like thing and they were on bgp

397
00:15:56,110 --> 00:16:01,360
and they always have their own local

398
00:15:59,110 --> 00:16:03,850
slash 24 and then they have slash 30 to

399
00:16:01,360 --> 00:16:05,230
use whatever the case is so we put all

400
00:16:03,850 --> 00:16:07,029
that in variables i'm not showing that

401
00:16:05,230 --> 00:16:08,980
in on the github picture there but it's

402
00:16:07,029 --> 00:16:11,680
all there and then there's a screenshot

403
00:16:08,980 --> 00:16:14,440
of jenkins which we use to run the

404
00:16:11,680 --> 00:16:16,029
playbooks from and if you haven't used

405
00:16:14,440 --> 00:16:18,490
Jenkins before basically what it does is

406
00:16:16,029 --> 00:16:21,180
all it's doing for us is it's pulling

407
00:16:18,490 --> 00:16:24,010
down that playbook from github and

408
00:16:21,180 --> 00:16:26,829
running it so every time we make a

409
00:16:24,010 --> 00:16:28,390
change in github we can basically just

410
00:16:26,830 --> 00:16:31,150
pull it down and run it in fact some of

411
00:16:28,390 --> 00:16:33,550
one of our other playbooks auto runs it

412
00:16:31,150 --> 00:16:35,439
uses a web hook from github so if you

413
00:16:33,550 --> 00:16:37,930
change something in the repo just change

414
00:16:35,440 --> 00:16:40,270
the host file it'll auto run and email

415
00:16:37,930 --> 00:16:43,209
your results from whatever show commands

416
00:16:40,270 --> 00:16:46,170
you wanted to do and at the bottom there

417
00:16:43,210 --> 00:16:49,089
is just an example of successful ansible

418
00:16:46,170 --> 00:16:55,390
so this one is actually provisioning two

419
00:16:49,089 --> 00:16:57,610
switches day two automation like I said

420
00:16:55,390 --> 00:17:01,510
in the beginning we're very lucky to

421
00:16:57,610 --> 00:17:03,459
have a dedicated team I think we have

422
00:17:01,510 --> 00:17:05,230
seven or eight engineers now that

423
00:17:03,459 --> 00:17:06,970
basically do nothing what they do a lot

424
00:17:05,230 --> 00:17:09,610
of things but well the main things they

425
00:17:06,970 --> 00:17:11,740
do is build our day-to automation tools

426
00:17:09,609 --> 00:17:13,389
for us and they use whatever language

427
00:17:11,740 --> 00:17:16,209
they want and you know they use whatever

428
00:17:13,390 --> 00:17:17,500
GUI they want but very useful tool this

429
00:17:16,209 --> 00:17:20,560
one right here this is a screenshot of

430
00:17:17,500 --> 00:17:23,199
one of our tools that a rack and stack

431
00:17:20,560 --> 00:17:25,089
guys used to change VLANs on ports so it

432
00:17:23,199 --> 00:17:27,220
used to be that they would rack and

433
00:17:25,089 --> 00:17:28,629
stack you know a couple servers in iraq

434
00:17:27,220 --> 00:17:30,310
and then they would find some open ports

435
00:17:28,630 --> 00:17:31,600
and a switch and go plug it in and say

436
00:17:30,310 --> 00:17:32,040
hey guys can you please put these on

437
00:17:31,600 --> 00:17:33,959
view

438
00:17:32,040 --> 00:17:37,590
you know - or whatever the case more

439
00:17:33,960 --> 00:17:38,580
trunk or VPC or whatever it is and then

440
00:17:37,590 --> 00:17:40,110
they were you know we go through our

441
00:17:38,580 --> 00:17:41,490
ticketing process couple days later that

442
00:17:40,110 --> 00:17:43,770
would happen well now they can basically

443
00:17:41,490 --> 00:17:44,970
go into this tool and make those changes

444
00:17:43,770 --> 00:17:46,830
themselves but we have a lot of

445
00:17:44,970 --> 00:17:48,890
safeguards in place so the the read

446
00:17:46,830 --> 00:17:50,850
ports are the ones that are down and

447
00:17:48,890 --> 00:17:52,320
with this tool they can only make

448
00:17:50,850 --> 00:17:54,870
changes to down ports so they know that

449
00:17:52,320 --> 00:17:56,700
and before they plug in the server

450
00:17:54,870 --> 00:17:57,840
they'll make the change put the you know

451
00:17:56,700 --> 00:17:59,970
the right VLAN or whatever it is

452
00:17:57,840 --> 00:18:01,290
description on and then plug it in it

453
00:17:59,970 --> 00:18:05,310
comes up and they don't have to wait for

454
00:18:01,290 --> 00:18:07,889
us to do that configuration so very

455
00:18:05,310 --> 00:18:12,270
lucky to have that team do not take them

456
00:18:07,890 --> 00:18:14,280
for granted so this wasn't easy is it's

457
00:18:12,270 --> 00:18:17,220
still not easy I mean we're at the point

458
00:18:14,280 --> 00:18:20,160
now where I think we have about 50 or 60

459
00:18:17,220 --> 00:18:23,130
switches in production another you know

460
00:18:20,160 --> 00:18:24,810
10 or 20 in our lab for testing wasn't

461
00:18:23,130 --> 00:18:27,810
easy to get them online there's quite a

462
00:18:24,810 --> 00:18:29,879
few obstacles to overcome one of the big

463
00:18:27,810 --> 00:18:31,560
ones is where's my config T so I have a

464
00:18:29,880 --> 00:18:33,870
team of eight engineers in San Diego

465
00:18:31,560 --> 00:18:36,510
that supports datacenter networking and

466
00:18:33,870 --> 00:18:38,959
load balancing and really sharp guys

467
00:18:36,510 --> 00:18:41,400
been doing this a long time

468
00:18:38,960 --> 00:18:43,740
there is no config T on these switches

469
00:18:41,400 --> 00:18:46,020
it's it's basically Debian Linux for

470
00:18:43,740 --> 00:18:47,880
cumulus anyways yeah so it's very very

471
00:18:46,020 --> 00:18:50,639
different you go from having one file to

472
00:18:47,880 --> 00:18:52,380
manage to configure a whole bunch of

473
00:18:50,640 --> 00:18:57,120
different files restarting process is

474
00:18:52,380 --> 00:18:58,860
basically Linux net sysadmin but they

475
00:18:57,120 --> 00:19:00,209
like they actually they enjoy a new

476
00:18:58,860 --> 00:19:01,350
challenge is something very different

477
00:19:00,210 --> 00:19:03,360
from what they've been doing for the

478
00:19:01,350 --> 00:19:05,879
past you know 10 or 15 years so most

479
00:19:03,360 --> 00:19:09,149
engineers are pretty excited to to one

480
00:19:05,880 --> 00:19:12,570
or something new so this is the second

481
00:19:09,150 --> 00:19:14,970
bullet I showed this to my director last

482
00:19:12,570 --> 00:19:16,500
week you sit him back there and he said

483
00:19:14,970 --> 00:19:17,700
you threw me under the bus and I've no

484
00:19:16,500 --> 00:19:19,170
this is definitely not throwing you

485
00:19:17,700 --> 00:19:21,810
under the bus this is a valid point I

486
00:19:19,170 --> 00:19:24,210
wanted to bring up I'm very lucky my

487
00:19:21,810 --> 00:19:26,460
directors a triple CCIE and then his

488
00:19:24,210 --> 00:19:28,010
boss is also CCI a very sharp guys they

489
00:19:26,460 --> 00:19:31,140
know networking inside now

490
00:19:28,010 --> 00:19:33,240
lucky to have them but one of the first

491
00:19:31,140 --> 00:19:35,700
questions is who do I call for support

492
00:19:33,240 --> 00:19:36,840
so there's a software vendor that rides

493
00:19:35,700 --> 00:19:38,820
on top of the hardware then there's a

494
00:19:36,840 --> 00:19:40,830
hardware vendor well who do I call if a

495
00:19:38,820 --> 00:19:43,320
box dies so if you've been doing Cisco

496
00:19:40,830 --> 00:19:45,629
or restore Juniper for the past 15 years

497
00:19:43,320 --> 00:19:45,929
you know you just call there attack and

498
00:19:45,630 --> 00:19:48,030
then

499
00:19:45,930 --> 00:19:49,980
they deal with it and they cinema on the

500
00:19:48,030 --> 00:19:51,870
server side of things we've been doing

501
00:19:49,980 --> 00:19:53,610
that you know the software and hardware

502
00:19:51,870 --> 00:19:57,270
way for a while now so it's just a

503
00:19:53,610 --> 00:19:58,290
matter of basically shifting gears I can

504
00:19:57,270 --> 00:20:02,070
tell you from experience I think we've

505
00:19:58,290 --> 00:20:06,270
had two maybe three RMA's of boxes no

506
00:20:02,070 --> 00:20:07,530
Dells yet but those were very very easy

507
00:20:06,270 --> 00:20:10,410
to deal with though I think those were

508
00:20:07,530 --> 00:20:12,240
all DOA once which just goes dead and

509
00:20:10,410 --> 00:20:13,830
another one had a bad console port and

510
00:20:12,240 --> 00:20:15,720
we just called up cumulus and said hey

511
00:20:13,830 --> 00:20:18,060
we think we have that hardware they gave

512
00:20:15,720 --> 00:20:19,380
us a few commands to run yeah it's bad

513
00:20:18,060 --> 00:20:21,030
hardware and then we went back to our

514
00:20:19,380 --> 00:20:23,370
vendor that we bought it from I think

515
00:20:21,030 --> 00:20:25,170
was HP for those and said hey we got

516
00:20:23,370 --> 00:20:27,840
Bart bad Hardware the new switch came

517
00:20:25,170 --> 00:20:29,760
home AG no questions asked so I haven't

518
00:20:27,840 --> 00:20:31,470
heard any horror stories of you know

519
00:20:29,760 --> 00:20:32,820
software vendor pointing in a hardware

520
00:20:31,470 --> 00:20:36,840
vendor say no it's their fault they're

521
00:20:32,820 --> 00:20:39,810
falling and causing problems but it is

522
00:20:36,840 --> 00:20:43,830
something that you have to identify day

523
00:20:39,810 --> 00:20:45,780
one it's very different legacy network

524
00:20:43,830 --> 00:20:48,270
management so these are these are Linux

525
00:20:45,780 --> 00:20:50,100
boxes and we have Linux monitoring tools

526
00:20:48,270 --> 00:20:52,410
for our servers but this is a network

527
00:20:50,100 --> 00:20:55,379
device so we still have to use a lot of

528
00:20:52,410 --> 00:20:57,330
our network tools you know we use RSA

529
00:20:55,380 --> 00:20:59,850
for login and ACS that sort of thing

530
00:20:57,330 --> 00:21:02,520
SNMP looking at interface squares so it

531
00:20:59,850 --> 00:21:04,379
mostly all works some of it was a little

532
00:21:02,520 --> 00:21:07,050
challenging to set up at first but it

533
00:21:04,380 --> 00:21:08,640
all works but then you can start doing

534
00:21:07,050 --> 00:21:11,430
things a little bit differently as well

535
00:21:08,640 --> 00:21:14,340
so you can store configs and github

536
00:21:11,430 --> 00:21:17,850
jenkins rather than a config repository

537
00:21:14,340 --> 00:21:20,370
like HP a Opsware so our plan for off a

538
00:21:17,850 --> 00:21:22,530
switch dies is not take the switch

539
00:21:20,370 --> 00:21:25,350
configuration that was running you know

540
00:21:22,530 --> 00:21:27,389
24 hours ago one big file and slap it on

541
00:21:25,350 --> 00:21:29,820
the armaid switch we basically just put

542
00:21:27,390 --> 00:21:31,500
the new switch in Xero touch provision

543
00:21:29,820 --> 00:21:32,669
it push the global config on and then

544
00:21:31,500 --> 00:21:35,700
really the only thing that makes that

545
00:21:32,670 --> 00:21:36,600
switch unique is the Etsy network

546
00:21:35,700 --> 00:21:38,970
interfaces file

547
00:21:36,600 --> 00:21:42,480
maybe the port's kampf gegen comm so we

548
00:21:38,970 --> 00:21:44,040
backup those specific files once every

549
00:21:42,480 --> 00:21:46,710
24 hours and we just keep them in the

550
00:21:44,040 --> 00:21:49,110
Jenkins server so a little bit different

551
00:21:46,710 --> 00:21:51,030
way of doing things and I've already

552
00:21:49,110 --> 00:21:52,800
kind of mentioned this but a change in

553
00:21:51,030 --> 00:21:57,870
mindset from a single configuration file

554
00:21:52,800 --> 00:21:59,059
to Linux and that's this admin but at my

555
00:21:57,870 --> 00:22:00,830
company I don't know if anybody else

556
00:21:59,059 --> 00:22:02,059
is companies running OpenStack or

557
00:22:00,830 --> 00:22:04,309
kubernetes or anything like that I mean

558
00:22:02,059 --> 00:22:06,649
this is this is worthwhile knowledge to

559
00:22:04,309 --> 00:22:09,230
have if we're all going towards this you

560
00:22:06,649 --> 00:22:10,489
know Linux networking approach and more

561
00:22:09,230 --> 00:22:12,909
and more exposure to that as we're

562
00:22:10,490 --> 00:22:15,799
dealing with things like calico and

563
00:22:12,909 --> 00:22:17,389
kubernetes we all need to know a little

564
00:22:15,799 --> 00:22:19,580
bit of Linux networking so it makes

565
00:22:17,389 --> 00:22:23,299
sense to learn it and this is a great

566
00:22:19,580 --> 00:22:25,549
place to do then so where did we start

567
00:22:23,299 --> 00:22:28,519
like I said we started in a lab for

568
00:22:25,549 --> 00:22:29,960
about a year still working in the lab

569
00:22:28,519 --> 00:22:31,360
still testing a lot of things like for

570
00:22:29,960 --> 00:22:35,029
right now we're testing the excellent

571
00:22:31,360 --> 00:22:36,408
interoperability with other vendors but

572
00:22:35,029 --> 00:22:37,820
where did we start deploying we started

573
00:22:36,409 --> 00:22:40,549
playing in the out-of-band

574
00:22:37,820 --> 00:22:42,139
networks so our data center out-of-band

575
00:22:40,549 --> 00:22:45,529
network that's our out-of-band force our

576
00:22:42,139 --> 00:22:47,149
switches not a critical environment easy

577
00:22:45,529 --> 00:22:49,039
place to deploy something that if it

578
00:22:47,149 --> 00:22:51,469
crashes not that big a deal it's just

579
00:22:49,039 --> 00:22:53,119
kind of a backup network anyways and

580
00:22:51,470 --> 00:22:55,580
then we just started applying in server

581
00:22:53,119 --> 00:22:58,668
out-of-band network so the ILO's and

582
00:22:55,580 --> 00:23:00,619
that sort of thing very low risk but we

583
00:22:58,669 --> 00:23:02,899
can get the switches out there and we

584
00:23:00,619 --> 00:23:05,720
could have them in monitoring and and

585
00:23:02,899 --> 00:23:07,610
start to learn what to look for you know

586
00:23:05,720 --> 00:23:10,309
learn things and syslog when to alert on

587
00:23:07,610 --> 00:23:13,969
whatever errors things like that get to

588
00:23:10,309 --> 00:23:17,658
know the vendor tactic and then lab test

589
00:23:13,970 --> 00:23:19,129
dev environments so this this is what my

590
00:23:17,659 --> 00:23:22,340
team would consider production but other

591
00:23:19,129 --> 00:23:24,918
business units consider lab test dev so

592
00:23:22,340 --> 00:23:26,840
we deploy to those environments some

593
00:23:24,919 --> 00:23:28,999
land access we've tested PUA that works

594
00:23:26,840 --> 00:23:31,369
well and then a simple critical

595
00:23:28,999 --> 00:23:33,499
environment this is the we run a HPC

596
00:23:31,369 --> 00:23:34,939
grid to develop all the chips for all

597
00:23:33,499 --> 00:23:37,970
your phones and modems things like that

598
00:23:34,940 --> 00:23:40,100
and that requires a lot of compute so we

599
00:23:37,970 --> 00:23:41,899
one of our high throughput tests was

600
00:23:40,100 --> 00:23:43,850
basically a pair of hundred gig leaf

601
00:23:41,899 --> 00:23:47,389
switches hanging off mostly Arista

602
00:23:43,850 --> 00:23:49,070
Network and a stack of servers all

603
00:23:47,389 --> 00:23:51,918
connected a 25 gig just to you know

604
00:23:49,070 --> 00:23:57,168
measure raw throughput in LACP and like

605
00:23:51,919 --> 00:23:58,399
things like that test network you

606
00:23:57,169 --> 00:24:00,049
definitely want to have a test network

607
00:23:58,399 --> 00:24:02,209
we have a large lab it's basically a

608
00:24:00,049 --> 00:24:04,369
small data center I'm very lucky to have

609
00:24:02,210 --> 00:24:05,240
that I know so we have lots of things to

610
00:24:04,369 --> 00:24:08,269
put in there

611
00:24:05,240 --> 00:24:10,369
we test everything in production in the

612
00:24:08,269 --> 00:24:12,029
lab before we put it into production we

613
00:24:10,369 --> 00:24:14,609
also use VirtualBox quite a bit

614
00:24:12,029 --> 00:24:17,789
and vagrant makes it really easy we can

615
00:24:14,609 --> 00:24:19,559
have a vagrant topology stored in github

616
00:24:17,789 --> 00:24:21,419
and any engineer can just download it

617
00:24:19,559 --> 00:24:23,519
and run it and now they have a built out

618
00:24:21,419 --> 00:24:26,849
cumulus Network they can they can test

619
00:24:23,519 --> 00:24:28,200
out lessons learned I'm going to assume

620
00:24:26,849 --> 00:24:31,229
through the the rest of these so when

621
00:24:28,200 --> 00:24:32,969
you have some Q&A time adoption can be

622
00:24:31,229 --> 00:24:35,580
tough for seasoned network engineers but

623
00:24:32,969 --> 00:24:36,570
as I mentioned a lot of the older

624
00:24:35,580 --> 00:24:38,009
engineers have been doing this for a

625
00:24:36,570 --> 00:24:40,200
while like this challenge of something

626
00:24:38,009 --> 00:24:41,820
new it's very very different and like I

627
00:24:40,200 --> 00:24:44,399
said it's it's a bridge towards other

628
00:24:41,820 --> 00:24:48,359
Linux networking that they might be

629
00:24:44,399 --> 00:24:50,699
exposed to cattle instead of pets talked

630
00:24:48,359 --> 00:24:52,468
about that switch VMS are great learning

631
00:24:50,700 --> 00:24:55,169
tool that's a picture of a Mac with some

632
00:24:52,469 --> 00:24:56,700
salutes switches on there so we have a

633
00:24:55,169 --> 00:24:58,619
topology like this that you can just

634
00:24:56,700 --> 00:25:00,419
download and vagrant up and then you

635
00:24:58,619 --> 00:25:01,918
have four switches connected in that way

636
00:25:00,419 --> 00:25:04,109
you have an answerable VM off to the

637
00:25:01,919 --> 00:25:05,729
side so we test a lot of our automation

638
00:25:04,109 --> 00:25:07,439
before it goes into production and

639
00:25:05,729 --> 00:25:09,029
things like this or we'll test it here

640
00:25:07,440 --> 00:25:10,999
that will move it to the lab that will

641
00:25:09,029 --> 00:25:14,489
move it to production

642
00:25:10,999 --> 00:25:17,820
so in conclusion enterprises can deploy

643
00:25:14,489 --> 00:25:19,259
these and save money and usher in the

644
00:25:17,820 --> 00:25:22,049
new era of Linux and networking I like

645
00:25:19,259 --> 00:25:25,559
that thing as long as you basically keep

646
00:25:22,049 --> 00:25:29,789
an open mind open networking requires an

647
00:25:25,559 --> 00:25:31,408
open mind so this is a pest versus

648
00:25:29,789 --> 00:25:38,219
cattle picture found on the Internet

649
00:25:31,409 --> 00:25:40,739
any questions hi my name is Aaron from

650
00:25:38,219 --> 00:25:42,089
Bloomberg have you doing exactly what

651
00:25:40,739 --> 00:25:44,789
you guys are doing yet so I can actually

652
00:25:42,089 --> 00:25:46,200
relate to that one question that I had

653
00:25:44,789 --> 00:25:49,169
you talked pretty much about your

654
00:25:46,200 --> 00:25:50,969
automation team how do you bridge the

655
00:25:49,169 --> 00:25:52,950
gap it's been software developers well

656
00:25:50,969 --> 00:25:55,649
not network engineers and asking them to

657
00:25:52,950 --> 00:25:57,089
develop networking tools so that that

658
00:25:55,649 --> 00:25:59,158
was easy for us I don't know about the

659
00:25:57,089 --> 00:26:01,349
rest of the companies out there so for

660
00:25:59,159 --> 00:26:03,450
us we had some really really sharp well

661
00:26:01,349 --> 00:26:04,950
one guy he's really one of our go-to

662
00:26:03,450 --> 00:26:07,139
guys really sharp a network engineer who

663
00:26:04,950 --> 00:26:09,239
took an interest in development it just

664
00:26:07,139 --> 00:26:10,889
started developing so we kind of brought

665
00:26:09,239 --> 00:26:13,859
him along and he was the linchpin that

666
00:26:10,889 --> 00:26:16,320
we hired a front end guy yeah like

667
00:26:13,859 --> 00:26:18,820
another Middleditch guy and we just

668
00:26:16,320 --> 00:26:21,158
started building around them and

669
00:26:18,820 --> 00:26:22,330
just kind of blossom one thing I didn't

670
00:26:21,159 --> 00:26:24,429
mention in the freezer we're doing a lot

671
00:26:22,330 --> 00:26:25,720
of ansible stuff but then we're starting

672
00:26:24,429 --> 00:26:27,309
we're starting to run into the edges of

673
00:26:25,720 --> 00:26:29,440
what danceable can support so then it's

674
00:26:27,309 --> 00:26:31,090
like oh we need to use Python to make

675
00:26:29,440 --> 00:26:32,850
the safety I call for whatever to

676
00:26:31,090 --> 00:26:35,049
populate the hosts list so our engineers

677
00:26:32,850 --> 00:26:36,250
started with this and they learn ansible

678
00:26:35,049 --> 00:26:38,168
and now they're starting to push the

679
00:26:36,250 --> 00:26:41,139
boundaries and started to do more Python

680
00:26:38,169 --> 00:26:43,779
so then they can much easier much more

681
00:26:41,139 --> 00:26:44,620
easily relate to our dev team that

682
00:26:43,779 --> 00:26:46,720
builds the full-on

683
00:26:44,620 --> 00:26:48,600
tools so it's kind of a way for the both

684
00:26:46,720 --> 00:26:53,970
sides to sort of start coming together

685
00:26:48,600 --> 00:26:57,610
thank you yeah a my name is John from

686
00:26:53,970 --> 00:26:58,960
LinkedIn you said that your first

687
00:26:57,610 --> 00:27:00,850
appointment was kind of in an

688
00:26:58,960 --> 00:27:02,350
out-of-band Network and that's a trend

689
00:27:00,850 --> 00:27:05,110
that I'm seeing and I'm just kind of

690
00:27:02,350 --> 00:27:07,330
curious if you have thoughts on what

691
00:27:05,110 --> 00:27:09,969
hurdles we have to overcome before we

692
00:27:07,330 --> 00:27:13,059
can see this in more of a CAD everyday

693
00:27:09,970 --> 00:27:14,889
production environment I think it's it's

694
00:27:13,059 --> 00:27:16,539
really just trust and confidence so if

695
00:27:14,889 --> 00:27:18,969
we've been running in arista cisco for

696
00:27:16,539 --> 00:27:20,980
10 15 years we know it inside now we

697
00:27:18,970 --> 00:27:22,809
have you know huge list of syslog alerts

698
00:27:20,980 --> 00:27:24,730
things like that SNMP things that we do

699
00:27:22,809 --> 00:27:26,049
with things to watch out for so with

700
00:27:24,730 --> 00:27:27,850
something as new as this you just need

701
00:27:26,049 --> 00:27:29,408
to get some exposure you need to get as

702
00:27:27,850 --> 00:27:32,529
many switches in the network as possible

703
00:27:29,409 --> 00:27:34,419
and how to ban Network and just start

704
00:27:32,529 --> 00:27:36,129
trying them it's all about risk you know

705
00:27:34,419 --> 00:27:38,320
the smaller companies I think could

706
00:27:36,129 --> 00:27:40,689
probably go faster larger companies is a

707
00:27:38,320 --> 00:27:44,519
little bit bigger ship slower turn so

708
00:27:40,690 --> 00:27:47,169
it's all about managing the risk Thanks

709
00:27:44,519 --> 00:27:48,970
hi Michael Sinatra yes net I want to

710
00:27:47,169 --> 00:27:51,009
preface my question with two things one

711
00:27:48,970 --> 00:27:58,080
is great presentation thank you for that

712
00:27:51,009 --> 00:28:00,190
secondly the you Illustrated a risk of

713
00:27:58,080 --> 00:28:03,908
buying a product that's essentially

714
00:28:00,190 --> 00:28:06,279
black box router switch and that company

715
00:28:03,909 --> 00:28:09,070
being acquired and it being end-of-life

716
00:28:06,279 --> 00:28:10,720
that kind of stuff um I really like this

717
00:28:09,070 --> 00:28:14,769
idea of disaggregated architectures for

718
00:28:10,720 --> 00:28:17,080
routing and switching but my concern is

719
00:28:14,769 --> 00:28:19,059
that now you have instead of one black

720
00:28:17,080 --> 00:28:20,949
box that's potentially getting acquired

721
00:28:19,059 --> 00:28:23,950
or potentially end-of-life you know have

722
00:28:20,950 --> 00:28:28,840
four or five pieces any one of which

723
00:28:23,950 --> 00:28:31,419
could get acquired and quashed and what

724
00:28:28,840 --> 00:28:31,928
is your feeling on sort of the risk of

725
00:28:31,419 --> 00:28:34,240
that as

726
00:28:31,929 --> 00:28:36,940
compared to the risk of a single black

727
00:28:34,240 --> 00:28:39,009
box and what is your feeling in terms of

728
00:28:36,940 --> 00:28:42,669
how does the market look for things like

729
00:28:39,009 --> 00:28:45,519
routing engines that run on top of open

730
00:28:42,669 --> 00:28:48,490
flow controllers that run on top of open

731
00:28:45,519 --> 00:28:51,549
flow switches or other switches that

732
00:28:48,490 --> 00:28:53,889
have open api's do you feel like there's

733
00:28:51,549 --> 00:28:57,460
enough backup in each of those lengths

734
00:28:53,889 --> 00:28:59,979
of that chain that you can build a

735
00:28:57,460 --> 00:29:02,350
relatively risk-free router that you

736
00:28:59,980 --> 00:29:02,980
could hook up to an IX and actually uses

737
00:29:02,350 --> 00:29:04,240
your clearing router

738
00:29:02,980 --> 00:29:06,879
good question I don't know if anything

739
00:29:04,240 --> 00:29:10,600
is risk-free but we focused mainly on

740
00:29:06,879 --> 00:29:11,860
the software and if our hardware vendors

741
00:29:10,600 --> 00:29:15,070
were to get bought out basically as long

742
00:29:11,860 --> 00:29:17,199
as some boxes Oni compliant we know that

743
00:29:15,070 --> 00:29:19,389
we can run the this off wrong as long as

744
00:29:17,200 --> 00:29:21,159
the vendor qualifies it my bigger

745
00:29:19,389 --> 00:29:23,199
concern is if the software vendors say

746
00:29:21,159 --> 00:29:26,139
you know Cisco bah cumulus or something

747
00:29:23,200 --> 00:29:29,499
like that and then changed it up what

748
00:29:26,139 --> 00:29:31,418
would you do at that point is if we're

749
00:29:29,499 --> 00:29:33,340
focused around basic functionality and

750
00:29:31,419 --> 00:29:34,539
we try to reduce the number of features

751
00:29:33,340 --> 00:29:36,220
that we're running in our data centers

752
00:29:34,539 --> 00:29:38,379
rather than expand we're really

753
00:29:36,220 --> 00:29:42,429
dependent on on basic things like my

754
00:29:38,379 --> 00:29:46,209
galley CP and FRR you know quite a good

755
00:29:42,429 --> 00:29:48,279
next-gen so we could if chemos got

756
00:29:46,210 --> 00:29:49,809
swallowed up wouldn't like it but we

757
00:29:48,279 --> 00:29:52,659
could probably run some other thing that

758
00:29:49,809 --> 00:29:54,759
was based on those specific functions so

759
00:29:52,659 --> 00:29:56,860
as long as we're building out and I

760
00:29:54,759 --> 00:29:59,049
think that that's less of a challenge

761
00:29:56,860 --> 00:30:01,059
than the initial big move from a

762
00:29:59,049 --> 00:30:03,129
traditional vendor to a white bar

763
00:30:01,059 --> 00:30:04,269
solution but good question that's that's

764
00:30:03,129 --> 00:30:05,949
something that we deal with we're

765
00:30:04,269 --> 00:30:07,629
managing risk as this time goes as the

766
00:30:05,950 --> 00:30:09,490
manager I'm expected to manage risk and

767
00:30:07,629 --> 00:30:11,080
if I'm saving this amount of money great

768
00:30:09,490 --> 00:30:13,619
but if I'm adding this amount of risk

769
00:30:11,080 --> 00:30:13,619
it's a no-go

770
00:30:14,279 --> 00:30:20,980
I am crisp Woodfield salesforce a lot of

771
00:30:19,929 --> 00:30:22,869
your discussion a lot of your

772
00:30:20,980 --> 00:30:25,809
presentation had to do with the changes

773
00:30:22,869 --> 00:30:28,408
in the in the management mentality as

774
00:30:25,809 --> 00:30:31,779
far as yeah there's no coffee any more

775
00:30:28,409 --> 00:30:34,509
cattle not that's all that has there

776
00:30:31,779 --> 00:30:36,100
been any changes in my in mindset and

777
00:30:34,509 --> 00:30:38,590
operational practice in terms of the

778
00:30:36,100 --> 00:30:41,320
monitoring aspect of your network

779
00:30:38,590 --> 00:30:44,139
I realized SNMP is syslog pretty

780
00:30:41,320 --> 00:30:45,700
Universal stuff but you know has has

781
00:30:44,140 --> 00:30:48,160
anything else come up that you've had to

782
00:30:45,700 --> 00:30:50,860
change or your operational practices or

783
00:30:48,160 --> 00:30:53,880
your mindset around in terms of running

784
00:30:50,860 --> 00:30:56,500
the network once everything's configured

785
00:30:53,880 --> 00:30:59,500
no not exactly so we brought these

786
00:30:56,500 --> 00:31:00,970
switches in then we we basically told

787
00:30:59,500 --> 00:31:02,920
ourselves these have to run with our

788
00:31:00,970 --> 00:31:06,820
older or traditional tools whether

789
00:31:02,920 --> 00:31:08,590
that's ACS and matter or SNMP tools but

790
00:31:06,820 --> 00:31:09,970
what we have done is you know got them

791
00:31:08,590 --> 00:31:11,080
working at the minimum bare essentials

792
00:31:09,970 --> 00:31:13,360
working but now we're looking at what

793
00:31:11,080 --> 00:31:14,860
else could we do could we use telemetry

794
00:31:13,360 --> 00:31:17,709
on these boxes with different vendor

795
00:31:14,860 --> 00:31:19,600
flavors G RPC something like that where

796
00:31:17,710 --> 00:31:23,620
do we go next what how can we get better

797
00:31:19,600 --> 00:31:25,510
telemetry can I get better visibility on

798
00:31:23,620 --> 00:31:27,070
microbursts is one of the things that

799
00:31:25,510 --> 00:31:31,390
that I'm interested in our data centers

800
00:31:27,070 --> 00:31:32,350
because our traffic is like this so it

801
00:31:31,390 --> 00:31:34,600
really just depends on your environment

802
00:31:32,350 --> 00:31:36,879
I think and what you're looking to get

803
00:31:34,600 --> 00:31:38,260
out of it interface counters and in

804
00:31:36,880 --> 00:31:40,120
errors those sort of things one of the

805
00:31:38,260 --> 00:31:41,860
things that kills us so as long as we

806
00:31:40,120 --> 00:31:43,719
have as good monitoring on when our

807
00:31:41,860 --> 00:31:46,469
optics are starting to dire somebody

808
00:31:43,720 --> 00:31:53,430
pinches Fiber then then we're good okay

809
00:31:46,470 --> 00:31:53,430
thanks all right thanks for having me

810
00:32:00,550 --> 00:32:02,610
you

