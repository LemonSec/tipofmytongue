1
00:00:09,320 --> 00:00:15,059
good afternoon everyone I'll be talking

2
00:00:12,660 --> 00:00:17,090
about ebgp flowspec pairing for DDoS

3
00:00:15,059 --> 00:00:17,090
mitigation

4
00:00:24,620 --> 00:00:31,640
so taking a quick look at the DDoS

5
00:00:28,520 --> 00:00:34,100
market scenario the attacks continue to

6
00:00:31,640 --> 00:00:36,860
grow in terms of size frequency and

7
00:00:34,100 --> 00:00:38,870
complexity traditional mitigation

8
00:00:36,860 --> 00:00:41,300
techniques have involved use of

9
00:00:38,870 --> 00:00:43,239
scrubbers which is basically taking an

10
00:00:41,300 --> 00:00:45,500
on load of good and bad traffic

11
00:00:43,239 --> 00:00:47,089
scrubbing the bad traffic and then

12
00:00:45,500 --> 00:00:50,269
offloading the good traffic back to the

13
00:00:47,090 --> 00:00:52,850
network most organizations used a

14
00:00:50,270 --> 00:00:56,870
scrubbing solution of ten gig or 40 gig

15
00:00:52,850 --> 00:00:58,970
or maybe even less however various

16
00:00:56,870 --> 00:01:01,339
recent attacks have been more than one

17
00:00:58,970 --> 00:01:03,739
Turbots in size making it very difficult

18
00:01:01,340 --> 00:01:05,990
to have the scrubbing capacity to deal

19
00:01:03,739 --> 00:01:08,149
with them because one terabits is like

20
00:01:05,990 --> 00:01:11,240
twenty times the size of the best

21
00:01:08,149 --> 00:01:14,119
available scrubber what this leads to is

22
00:01:11,240 --> 00:01:15,880
no other option rather other than just

23
00:01:14,119 --> 00:01:19,100
using remote triggered black hole and

24
00:01:15,880 --> 00:01:21,470
our tbh is really not mitigating the

25
00:01:19,100 --> 00:01:23,600
attack it is more of just protecting

26
00:01:21,470 --> 00:01:25,720
your network because you're just black

27
00:01:23,600 --> 00:01:28,100
holing all the traffic

28
00:01:25,720 --> 00:01:30,050
additionally black holing commercial

29
00:01:28,100 --> 00:01:32,630
customers is not really a big option due

30
00:01:30,050 --> 00:01:34,009
to service level agreements and besides

31
00:01:32,630 --> 00:01:35,179
you have to deal with complaints from

32
00:01:34,009 --> 00:01:41,390
both residential and commercial

33
00:01:35,179 --> 00:01:44,030
customers some important statistics so

34
00:01:41,390 --> 00:01:47,090
far while the number of DDoS attacks

35
00:01:44,030 --> 00:01:50,360
continues to rise in number 75 percent

36
00:01:47,090 --> 00:01:52,360
of the attacks are still volumetric they

37
00:01:50,360 --> 00:01:55,130
are simple just volumetric attacks which

38
00:01:52,360 --> 00:01:56,840
simply occupy the channels the pipes and

39
00:01:55,130 --> 00:02:01,130
fill up so that you have service

40
00:01:56,840 --> 00:02:02,660
unavailability also importantly 60

41
00:02:01,130 --> 00:02:05,089
percent of the attacks are less than an

42
00:02:02,660 --> 00:02:07,789
hour or under 6 hours so most of the

43
00:02:05,090 --> 00:02:09,619
attacks are very short time and they

44
00:02:07,789 --> 00:02:12,160
don't last for like you know hours and

45
00:02:09,619 --> 00:02:14,569
hours or days or something like that

46
00:02:12,160 --> 00:02:16,220
since I mentioned it's most of the day

47
00:02:14,569 --> 00:02:16,700
most of the most of them are simple

48
00:02:16,220 --> 00:02:21,950
attacks

49
00:02:16,700 --> 00:02:24,679
they include DNS NTP LDAP or SSDP for

50
00:02:21,950 --> 00:02:27,290
example someone has a open DNS resolver

51
00:02:24,680 --> 00:02:30,700
and it is being used to spoof the victim

52
00:02:27,290 --> 00:02:34,909
IP and then send an amplified DNS answer

53
00:02:30,700 --> 00:02:37,369
also anti Biman lists the best practices

54
00:02:34,909 --> 00:02:37,970
to block on lists but there are a lot of

55
00:02:37,370 --> 00:02:41,450
open

56
00:02:37,970 --> 00:02:44,210
TV servers which do not do that so what

57
00:02:41,450 --> 00:02:46,820
happens is scrubbers get busy mitigating

58
00:02:44,210 --> 00:02:48,620
these small attacks and this is not

59
00:02:46,820 --> 00:02:51,200
really the best use of intelligent

60
00:02:48,620 --> 00:02:53,960
device like scrubbers and when there is

61
00:02:51,200 --> 00:02:56,030
a major attack of simultaneous large

62
00:02:53,960 --> 00:02:57,800
attack the scrubbing solution is there

63
00:02:56,030 --> 00:03:03,080
are left with no capacity to deal with

64
00:02:57,800 --> 00:03:04,970
them a quick look at the existing

65
00:03:03,080 --> 00:03:06,980
solution in practice in most of the

66
00:03:04,970 --> 00:03:08,990
service Freudian networks we talked

67
00:03:06,980 --> 00:03:11,269
about scrubbers you can either have

68
00:03:08,990 --> 00:03:12,740
several scrubbers at your somewhere

69
00:03:11,270 --> 00:03:14,810
closer to your peering point so it's

70
00:03:12,740 --> 00:03:16,670
more like it's distributed solution or

71
00:03:14,810 --> 00:03:18,380
you can have it a bigger scrubbing

72
00:03:16,670 --> 00:03:21,470
solution in your data center so it acts

73
00:03:18,380 --> 00:03:24,500
like a centralized architecture it's

74
00:03:21,470 --> 00:03:27,320
also best common practices VC p38 to

75
00:03:24,500 --> 00:03:29,750
minimize spoof traffic by enabling

76
00:03:27,320 --> 00:03:31,579
reverse path forward RPF check on your

77
00:03:29,750 --> 00:03:35,209
routers so that there is limited smooth

78
00:03:31,580 --> 00:03:39,590
traffic and it is also advisable to not

79
00:03:35,209 --> 00:03:42,170
let the DDoS traffic drink up all your

80
00:03:39,590 --> 00:03:44,360
channels so it's best to block it as

81
00:03:42,170 --> 00:03:47,179
close to the source as possible in

82
00:03:44,360 --> 00:03:50,510
recent times flow suspect has been

83
00:03:47,180 --> 00:03:52,730
talked about a lot the only problem is

84
00:03:50,510 --> 00:03:54,980
that flowspec cannot be used on smaller

85
00:03:52,730 --> 00:03:56,720
routers because older hardware doesn't

86
00:03:54,980 --> 00:04:00,290
really support it so maybe you're able

87
00:03:56,720 --> 00:04:02,000
to use it at your peering edge but at

88
00:04:00,290 --> 00:04:03,560
most other error like customer eyes or

89
00:04:02,000 --> 00:04:07,580
something you might not be able to use

90
00:04:03,560 --> 00:04:11,510
it so much there is also dots which is a

91
00:04:07,580 --> 00:04:15,110
ddos open thread signaling it has picked

92
00:04:11,510 --> 00:04:17,329
up in the last few years and it is still

93
00:04:15,110 --> 00:04:19,580
a work in progress so it will be still

94
00:04:17,329 --> 00:04:23,990
be a la considerable time before the

95
00:04:19,579 --> 00:04:26,539
architecture is ready for us to use so

96
00:04:23,990 --> 00:04:28,700
here what the solution that we are

97
00:04:26,540 --> 00:04:31,460
proposing and pushing for is DDoS

98
00:04:28,700 --> 00:04:34,039
peering which is essentially ebgp

99
00:04:31,460 --> 00:04:38,659
peering with trusted service providers

100
00:04:34,040 --> 00:04:41,240
to exchange flowspec rules this is not a

101
00:04:38,660 --> 00:04:43,550
new concept some industry leaders from

102
00:04:41,240 --> 00:04:45,860
AT&T and CenturyLink in the past

103
00:04:43,550 --> 00:04:49,640
non-obscene even had presented the

104
00:04:45,860 --> 00:04:51,020
concept and explained it in detail what

105
00:04:49,640 --> 00:04:51,659
we have done is we have done the

106
00:04:51,020 --> 00:04:55,380
implementation

107
00:04:51,660 --> 00:04:58,650
and a validation of the concept and see

108
00:04:55,380 --> 00:05:00,900
how it is working I just wanted to

109
00:04:58,650 --> 00:05:03,359
clarify that this is this is not meant

110
00:05:00,900 --> 00:05:06,359
to act as a standalone solution for DDoS

111
00:05:03,360 --> 00:05:08,820
mitigation nor it is meant to replace

112
00:05:06,360 --> 00:05:12,840
your existing solutions this is for an

113
00:05:08,820 --> 00:05:15,630
enhanced DDoS mitigation the simple and

114
00:05:12,840 --> 00:05:17,849
smaller attacks will be managed by this

115
00:05:15,630 --> 00:05:19,560
solution while the complex attacks will

116
00:05:17,850 --> 00:05:22,230
still require use of your existing

117
00:05:19,560 --> 00:05:24,900
scrubbing solutions so in this

118
00:05:22,230 --> 00:05:28,080
collaboration we are having inter IP

119
00:05:24,900 --> 00:05:30,299
flowspec so one DDoS spear will sell

120
00:05:28,080 --> 00:05:32,550
will send flowspec advertisements to

121
00:05:30,300 --> 00:05:34,650
another peer asking the peer to rate

122
00:05:32,550 --> 00:05:37,530
limit or block traffic to a particular

123
00:05:34,650 --> 00:05:39,900
destination destination IP address the

124
00:05:37,530 --> 00:05:41,880
important criteria here being that there

125
00:05:39,900 --> 00:05:44,310
must be a destination IP address which

126
00:05:41,880 --> 00:05:46,680
is managed by the initiating peer for

127
00:05:44,310 --> 00:05:48,020
example charter cannot ask a peer to you

128
00:05:46,680 --> 00:05:50,430
know rate limit traffic

129
00:05:48,020 --> 00:05:55,219
therefore for a IP space which is not

130
00:05:50,430 --> 00:05:58,770
managed by it in return the DDoS spear

131
00:05:55,220 --> 00:06:00,600
will ideally use that rule applied

132
00:05:58,770 --> 00:06:02,729
across its network on the peering edge

133
00:06:00,600 --> 00:06:09,300
and then filter traffic based on the

134
00:06:02,730 --> 00:06:11,820
role this is a high-level overview of

135
00:06:09,300 --> 00:06:17,250
how the solution works let's say we have

136
00:06:11,820 --> 00:06:19,620
three ISPs ISP a is PB is PC we have a

137
00:06:17,250 --> 00:06:22,620
victim in ISP a on which a DDoS attack

138
00:06:19,620 --> 00:06:26,960
is happening and the victim is unable to

139
00:06:22,620 --> 00:06:30,750
access a valid website on the right side

140
00:06:26,960 --> 00:06:33,260
is P a and is PB our participating DDoS

141
00:06:30,750 --> 00:06:35,940
peers so when the attack is happening

142
00:06:33,260 --> 00:06:38,490
the peering routers are sending the net

143
00:06:35,940 --> 00:06:41,730
flow information to a standard DDoS

144
00:06:38,490 --> 00:06:42,900
detection tool it sends the D our net

145
00:06:41,730 --> 00:06:44,970
for information about the number of

146
00:06:42,900 --> 00:06:47,520
packets and all the general regular

147
00:06:44,970 --> 00:06:50,400
stuff the detection tool will run its

148
00:06:47,520 --> 00:06:52,950
algorithms to identify the type of DDoS

149
00:06:50,400 --> 00:06:55,849
attack the port numbers the protocol use

150
00:06:52,950 --> 00:06:58,469
the packet size and all other details

151
00:06:55,850 --> 00:07:00,750
this information is sent to the flow

152
00:06:58,470 --> 00:07:03,210
spec controller the flow spec controller

153
00:07:00,750 --> 00:07:04,360
is present on both sides of the pair is

154
00:07:03,210 --> 00:07:06,340
PA and ISP

155
00:07:04,360 --> 00:07:08,949
be and this is the center brain of the

156
00:07:06,340 --> 00:07:11,318
whole project the flowspec controller

157
00:07:08,949 --> 00:07:13,960
will get syslog messages from the DDoS

158
00:07:11,319 --> 00:07:16,150
detection tool and it will come it will

159
00:07:13,960 --> 00:07:18,250
construct a flowspec advertisement and

160
00:07:16,150 --> 00:07:20,650
send the rule not only to its own

161
00:07:18,250 --> 00:07:22,509
peering router but it will also send it

162
00:07:20,650 --> 00:07:25,780
across to ISP be is a flow spec

163
00:07:22,509 --> 00:07:28,810
controller the ISP B's prospect

164
00:07:25,780 --> 00:07:31,359
controller will in return except the

165
00:07:28,810 --> 00:07:33,250
advertisement do some processing over it

166
00:07:31,360 --> 00:07:36,009
run some validation checks and then

167
00:07:33,250 --> 00:07:38,349
advertise it to its peering edge thereby

168
00:07:36,009 --> 00:07:40,690
a part of the DDoS traffic is blocked

169
00:07:38,349 --> 00:07:43,210
even before it comes to isp a it's

170
00:07:40,690 --> 00:07:48,849
directly blocked ads either at source or

171
00:07:43,210 --> 00:07:51,039
while still in transit talking about the

172
00:07:48,849 --> 00:07:52,930
details of the proof of concept we've

173
00:07:51,039 --> 00:07:55,990
developed the architecture layout and

174
00:07:52,930 --> 00:07:58,659
the implementation to receive flowspec

175
00:07:55,990 --> 00:08:02,199
rules do some processing and then

176
00:07:58,659 --> 00:08:04,810
realize them into the network since it's

177
00:08:02,199 --> 00:08:07,750
a ebgp relationship obviously you cannot

178
00:08:04,810 --> 00:08:10,810
directly trust the rule rule sent by an

179
00:08:07,750 --> 00:08:12,940
e b gb pair so we do not directly trust

180
00:08:10,810 --> 00:08:15,940
any any any route sent by the flow of

181
00:08:12,940 --> 00:08:18,099
flowspec pair there are certain rules

182
00:08:15,940 --> 00:08:21,159
which the flow spec advertisements must

183
00:08:18,099 --> 00:08:23,139
obey the first thing is that all non

184
00:08:21,159 --> 00:08:25,900
flow spec rules are advertised this is

185
00:08:23,139 --> 00:08:27,960
not for general bgp routing so any

186
00:08:25,900 --> 00:08:29,549
general BGP routes will be completely

187
00:08:27,960 --> 00:08:31,089
neglected

188
00:08:29,550 --> 00:08:33,010
additionally there should be a

189
00:08:31,089 --> 00:08:36,370
destination IP address present in the

190
00:08:33,010 --> 00:08:38,198
flow spec rule I'm assuming most of the

191
00:08:36,370 --> 00:08:39,909
audience knows here about flow specs I'm

192
00:08:38,198 --> 00:08:43,689
not going into the details of what is

193
00:08:39,909 --> 00:08:46,029
flow spec but having a destination IP

194
00:08:43,690 --> 00:08:47,829
address in the flow spectrum it ensures

195
00:08:46,029 --> 00:08:49,959
that traffic is being brought to a

196
00:08:47,829 --> 00:08:51,849
particular IP address and not just a

197
00:08:49,959 --> 00:08:53,680
traffic error which is simply matching a

198
00:08:51,850 --> 00:08:55,380
particular port pair or a particular

199
00:08:53,680 --> 00:08:58,540
source IP address

200
00:08:55,380 --> 00:09:00,430
additionally we only want to rate limit

201
00:08:58,540 --> 00:09:02,860
or blob block traffic for a single IP

202
00:09:00,430 --> 00:09:05,620
address so in terms of ipv4

203
00:09:02,860 --> 00:09:07,990
the IP address should be a slash 32 or

204
00:09:05,620 --> 00:09:09,810
in terms of ipv6 it should be a slash

205
00:09:07,990 --> 00:09:12,720
128

206
00:09:09,810 --> 00:09:15,250
additionally a network and security

207
00:09:12,720 --> 00:09:16,889
logging is everything so we are logging

208
00:09:15,250 --> 00:09:19,739
every information which we get

209
00:09:16,889 --> 00:09:23,129
from the appear so any valid request

210
00:09:19,739 --> 00:09:26,040
invalid request BGP updates validation

211
00:09:23,129 --> 00:09:27,660
checks whether the drool rule was

212
00:09:26,040 --> 00:09:30,358
applied to the network everything has to

213
00:09:27,660 --> 00:09:33,868
be logged so that it's easier for audit

214
00:09:30,359 --> 00:09:35,939
trail this is how it does how the

215
00:09:33,869 --> 00:09:37,709
process how the processing is done for

216
00:09:35,939 --> 00:09:40,618
the rules which it receives from the

217
00:09:37,709 --> 00:09:43,319
peer the mechanism for sending the rules

218
00:09:40,619 --> 00:09:46,350
from using the dear existing details

219
00:09:43,319 --> 00:09:48,540
detection tool the mechanism to automate

220
00:09:46,350 --> 00:09:50,579
that is still in process but it is

221
00:09:48,540 --> 00:09:53,248
essentially the script will get that

222
00:09:50,579 --> 00:09:54,959
syslog from the DDoS tool construct of

223
00:09:53,249 --> 00:10:01,859
flowspec rule and advertise it to the

224
00:09:54,959 --> 00:10:04,768
pier so this is how it should work when

225
00:10:01,859 --> 00:10:07,919
in sync there is an inbound DDoS attack

226
00:10:04,769 --> 00:10:10,829
on is p1 the attack is detected by the

227
00:10:07,919 --> 00:10:12,779
standard tool and it sends a syslog to

228
00:10:10,829 --> 00:10:14,699
the flowspec controller the flowspec

229
00:10:12,779 --> 00:10:17,189
controller in return will send the rule

230
00:10:14,699 --> 00:10:20,449
advertise the flowspec rule to isp

231
00:10:17,189 --> 00:10:23,309
seconds flowspec controller which will

232
00:10:20,449 --> 00:10:25,139
receive the rule run some validation

233
00:10:23,309 --> 00:10:28,230
checks and then apply it across its

234
00:10:25,139 --> 00:10:30,779
peering edge this way the bad traffic is

235
00:10:28,230 --> 00:10:33,980
rate limited or blocked more closer to

236
00:10:30,779 --> 00:10:37,259
the source this not only ensures a

237
00:10:33,980 --> 00:10:39,989
congest free link and more clear cleaner

238
00:10:37,259 --> 00:10:41,999
traffic but it also ensures that the

239
00:10:39,989 --> 00:10:45,149
peering router is not bombarded with a

240
00:10:41,999 --> 00:10:50,279
just high traffic which it cannot deal

241
00:10:45,149 --> 00:10:53,009
with this is a workflow of the how the

242
00:10:50,279 --> 00:10:55,799
script on the flow spec controller works

243
00:10:53,009 --> 00:10:58,079
the flow spec controller is essentially

244
00:10:55,799 --> 00:11:01,470
using EXA be G P which is an open source

245
00:10:58,079 --> 00:11:03,299
implementation of bgp and it has it's a

246
00:11:01,470 --> 00:11:04,949
standard villain on linux server which

247
00:11:03,299 --> 00:11:07,679
has a bunch of python scripts running on

248
00:11:04,949 --> 00:11:10,349
them so when a rule is out of the eyes

249
00:11:07,679 --> 00:11:13,289
by is p12 is p2 this is the workflow

250
00:11:10,350 --> 00:11:15,829
which takes place on the server the xwg

251
00:11:13,289 --> 00:11:18,720
p server is listening for flowspec rules

252
00:11:15,829 --> 00:11:21,169
it converts those flowspec rules into

253
00:11:18,720 --> 00:11:24,449
JSON and sends it to the Python script

254
00:11:21,169 --> 00:11:26,879
the Python script will log everything to

255
00:11:24,449 --> 00:11:28,679
our database for audit trail and then

256
00:11:26,879 --> 00:11:30,779
perform a series of validation checks

257
00:11:28,679 --> 00:11:32,689
the validation checks

258
00:11:30,779 --> 00:11:35,070
it should have a destination IP address

259
00:11:32,690 --> 00:11:37,740
the destination IP address should be a

260
00:11:35,070 --> 00:11:40,440
slash 32 and the IP address should match

261
00:11:37,740 --> 00:11:42,810
the ASN from which it is coming so that

262
00:11:40,440 --> 00:11:45,480
this ensures that no ISP is no hijacking

263
00:11:42,810 --> 00:11:47,939
routes are controlling the actions on

264
00:11:45,480 --> 00:11:50,190
routes for which it does not own if

265
00:11:47,940 --> 00:11:52,380
there is any error invalidation or

266
00:11:50,190 --> 00:11:54,180
something goes wrong it will definitely

267
00:11:52,380 --> 00:11:56,250
raise another alarm so that later the

268
00:11:54,180 --> 00:11:58,260
initiating pair can be notified saying

269
00:11:56,250 --> 00:12:01,230
hey your rule was wrong or maybe there

270
00:11:58,260 --> 00:12:02,990
was this problem in the road once it

271
00:12:01,230 --> 00:12:06,510
does the validation checks and it passes

272
00:12:02,990 --> 00:12:10,019
it is sent to a web UI so on the web UI

273
00:12:06,510 --> 00:12:12,360
the operator can see a list of all the

274
00:12:10,019 --> 00:12:15,449
validated rules and it is shown as a

275
00:12:12,360 --> 00:12:17,220
pending rule once it is a pending rule

276
00:12:15,449 --> 00:12:19,410
the operator can decide whether they

277
00:12:17,220 --> 00:12:21,680
want to advertise it in the network or

278
00:12:19,410 --> 00:12:24,660
they want to completely ignore it

279
00:12:21,680 --> 00:12:26,430
once the NOC decides to advertise it

280
00:12:24,660 --> 00:12:27,990
it's an it's simply a button you click

281
00:12:26,430 --> 00:12:30,120
on the button and it is advertised to

282
00:12:27,990 --> 00:12:32,190
the network which is further advertised

283
00:12:30,120 --> 00:12:34,860
using lots of factors - like the

284
00:12:32,190 --> 00:12:36,630
backbone or the bearing edge once that

285
00:12:34,860 --> 00:12:39,300
rule is applied all traffic for that

286
00:12:36,630 --> 00:12:41,910
destination IP address in the second ISP

287
00:12:39,300 --> 00:12:45,329
will be blocked or rate limit rate

288
00:12:41,910 --> 00:12:47,910
emitted depending on the rule so this

289
00:12:45,329 --> 00:12:50,910
helps to block the traffic closer to the

290
00:12:47,910 --> 00:12:57,000
source and it ensures that there is a

291
00:12:50,910 --> 00:12:58,740
less load on the ISP this is how the

292
00:12:57,000 --> 00:13:01,279
rule is bataan once the rule is

293
00:12:58,740 --> 00:13:05,220
withdrawn after the DDoS attack is

294
00:13:01,279 --> 00:13:07,050
stopped that syslog goes saying hey the

295
00:13:05,220 --> 00:13:09,149
attacker stars flaw the attack is

296
00:13:07,050 --> 00:13:12,180
stopped a flowspec withdrawal is sent

297
00:13:09,149 --> 00:13:14,100
and then X a BGP again receives it does

298
00:13:12,180 --> 00:13:17,569
some processing runs validation checks

299
00:13:14,100 --> 00:13:19,260
making sure this was already accepted

300
00:13:17,569 --> 00:13:20,969
advertisement in the past

301
00:13:19,260 --> 00:13:22,949
it's not a crafted packet or something

302
00:13:20,970 --> 00:13:24,839
like that and then the rule is withdrawn

303
00:13:22,949 --> 00:13:27,810
from the peering edge and then the

304
00:13:24,839 --> 00:13:33,899
normal traffic flow continues we have a

305
00:13:27,810 --> 00:13:35,849
quick demo for this as well so I'm not

306
00:13:33,899 --> 00:13:38,209
sure how it works you have to click off

307
00:13:35,850 --> 00:13:38,209
something

308
00:13:41,459 --> 00:13:46,569
okay so as we see this is the backbone

309
00:13:45,009 --> 00:13:48,579
router and we see there are no existing

310
00:13:46,570 --> 00:13:51,370
flow spec routes on the backbone router

311
00:13:48,579 --> 00:13:53,589
on the flow spec controller we start the

312
00:13:51,370 --> 00:13:55,959
exhibit EP session and it creates an e

313
00:13:53,589 --> 00:14:00,930
bgp session with the pair and we run our

314
00:13:55,959 --> 00:14:03,069
flask server to use a web UI as well

315
00:14:00,930 --> 00:14:04,959
this is the web UI showing that

316
00:14:03,069 --> 00:14:06,250
currently there are no existing routes

317
00:14:04,959 --> 00:14:09,369
which have been received from an

318
00:14:06,250 --> 00:14:11,199
external peer and now an external peer

319
00:14:09,370 --> 00:14:17,620
is advertising a particular flow spec

320
00:14:11,199 --> 00:14:19,269
rule as seen on the web UI the flow spec

321
00:14:17,620 --> 00:14:22,930
rule is seen for a particular IP address

322
00:14:19,269 --> 00:14:25,870
5.6 or 7.8 for a particular source

323
00:14:22,930 --> 00:14:27,489
number 666 and there's a button to

324
00:14:25,870 --> 00:14:31,180
either advertise or if you want to

325
00:14:27,490 --> 00:14:33,399
ignore you just let it be there as shown

326
00:14:31,180 --> 00:14:37,089
the route is advertised and then on the

327
00:14:33,399 --> 00:14:41,199
backbone router you can see that the

328
00:14:37,089 --> 00:14:47,050
rule has received five six seven eight

329
00:14:41,199 --> 00:14:49,089
so source four six six six there is an

330
00:14:47,050 --> 00:14:51,160
also option to withdraw the rule if

331
00:14:49,089 --> 00:14:52,600
required we will not withdraw it here

332
00:14:51,160 --> 00:14:55,170
but if someone wants to manually

333
00:14:52,600 --> 00:14:58,060
withdraw the rule that can also be done

334
00:14:55,170 --> 00:14:59,889
so when the external peer will stop the

335
00:14:58,060 --> 00:15:01,989
advertisement of the flow spec rule it

336
00:14:59,889 --> 00:15:03,790
should automatically go into the system

337
00:15:01,990 --> 00:15:07,839
and without withdraw that rule from the

338
00:15:03,790 --> 00:15:09,630
network we refresh the page and see the

339
00:15:07,839 --> 00:15:12,100
rule is gone

340
00:15:09,630 --> 00:15:18,220
we also verify it on the backbone router

341
00:15:12,100 --> 00:15:20,560
as seen the rule is no longer there this

342
00:15:18,220 --> 00:15:23,019
process of using of web UI that can also

343
00:15:20,560 --> 00:15:24,969
be completely automated but since it is

344
00:15:23,019 --> 00:15:27,100
in the initial stages we want to allow

345
00:15:24,970 --> 00:15:28,959
the operator to have the control over

346
00:15:27,100 --> 00:15:32,550
what it wants to advertise in its

347
00:15:28,959 --> 00:15:32,550
network and what it wants to ignore

348
00:15:32,639 --> 00:15:37,800
these are the next steps in the process

349
00:15:34,829 --> 00:15:40,599
we've started working this with a few

350
00:15:37,800 --> 00:15:42,279
subscribers and we're starting with rate

351
00:15:40,600 --> 00:15:44,230
limiting because that is more safe

352
00:15:42,279 --> 00:15:47,740
rather than just blocking on the traffic

353
00:15:44,230 --> 00:15:50,410
of the mechanism to automate the sending

354
00:15:47,740 --> 00:15:50,630
of DDoS detection rules that is yet to

355
00:15:50,410 --> 00:15:52,600
be

356
00:15:50,630 --> 00:15:55,850
done but it should be done shortly

357
00:15:52,600 --> 00:15:58,190
another interesting feature which we

358
00:15:55,850 --> 00:16:00,950
want to add in this project is to accept

359
00:15:58,190 --> 00:16:02,900
flowspec rules from peering ISPs

360
00:16:00,950 --> 00:16:05,810
customers so that a customer can

361
00:16:02,900 --> 00:16:08,060
advertise it to its parent ISP and that

362
00:16:05,810 --> 00:16:13,430
I speak and relay that splain same flow

363
00:16:08,060 --> 00:16:15,800
spectreville to another DDoS spear to

364
00:16:13,430 --> 00:16:18,260
summarize this this works when you

365
00:16:15,800 --> 00:16:20,270
already have a trusted relationship with

366
00:16:18,260 --> 00:16:22,760
a service provider you already are doing

367
00:16:20,270 --> 00:16:24,560
an existing BGP peering you have the

368
00:16:22,760 --> 00:16:26,800
trust built in and then you can have a

369
00:16:24,560 --> 00:16:30,500
separate DDoS feeding session as well

370
00:16:26,800 --> 00:16:32,569
this will enable the ISP to have less

371
00:16:30,500 --> 00:16:34,610
strain on the resources the scrubbers

372
00:16:32,570 --> 00:16:36,710
are still kept for mitigating the

373
00:16:34,610 --> 00:16:39,370
complex complex attacks and simpler

374
00:16:36,710 --> 00:16:41,360
attacks can be done using a flow spec

375
00:16:39,370 --> 00:16:43,220
one more thing which I want to mention

376
00:16:41,360 --> 00:16:45,290
or there is a concern with flowspec that

377
00:16:43,220 --> 00:16:48,530
hey how many rules with the router be

378
00:16:45,290 --> 00:16:50,060
required to advertise because most of

379
00:16:48,530 --> 00:16:53,300
the routers do not support a whole bunch

380
00:16:50,060 --> 00:16:55,250
of flowspec rules at any given time on a

381
00:16:53,300 --> 00:16:57,680
particular ISP there are not more than

382
00:16:55,250 --> 00:16:59,990
20 or 40 DDoS attacks happening

383
00:16:57,680 --> 00:17:02,420
simultaneously so there should not be

384
00:16:59,990 --> 00:17:06,970
more than 20 or 30 at our respect rules

385
00:17:02,420 --> 00:17:09,949
on the router it's a long way out it's

386
00:17:06,970 --> 00:17:12,199
difficult to get all ISPs to do it but

387
00:17:09,949 --> 00:17:13,910
it's one step at a time and I'm

388
00:17:12,199 --> 00:17:16,040
definitely looking forward to any

389
00:17:13,910 --> 00:17:20,300
feedback or a constructive criticism

390
00:17:16,040 --> 00:17:24,470
from the audience a reference of the

391
00:17:20,300 --> 00:17:27,319
materials if you guys have any questions

392
00:17:24,470 --> 00:17:29,270
we can go ahead right now or you can

393
00:17:27,319 --> 00:17:30,830
feel free to contact anyone from this

394
00:17:29,270 --> 00:17:34,040
slide as well thank you

395
00:17:30,830 --> 00:17:37,460
hi there Roland Devon's net scowl Arbor

396
00:17:34,040 --> 00:17:38,030
I think I said it right a comment a

397
00:17:37,460 --> 00:17:40,070
question

398
00:17:38,030 --> 00:17:41,300
so one comment I have is something that

399
00:17:40,070 --> 00:17:43,939
I don't think you've really touched on

400
00:17:41,300 --> 00:17:45,740
in the presentation is that when you're

401
00:17:43,940 --> 00:17:47,750
doing flowspec peering you know inter

402
00:17:45,740 --> 00:17:49,460
organizationally like this there's a

403
00:17:47,750 --> 00:17:50,960
relatively high amount of technical

404
00:17:49,460 --> 00:17:53,420
information that you have to exchange

405
00:17:50,960 --> 00:17:56,000
with your flowspec partner about what

406
00:17:53,420 --> 00:17:57,530
router what platform what line

407
00:17:56,000 --> 00:17:59,320
or you know so on and so forth though

408
00:17:57,530 --> 00:18:01,430
this is a little bit more complex

409
00:17:59,320 --> 00:18:03,560
technically than establishing you know

410
00:18:01,430 --> 00:18:07,430
your basic destination based remote

411
00:18:03,560 --> 00:18:08,570
trigger black hole type of of scenario

412
00:18:07,430 --> 00:18:10,460
so I just wanted to put that out there

413
00:18:08,570 --> 00:18:12,500
but I have a question for you and it

414
00:18:10,460 --> 00:18:15,620
relates to your comment about being

415
00:18:12,500 --> 00:18:17,240
concerned about an explosion of flowspec

416
00:18:15,620 --> 00:18:20,239
rules which would potentially overflow

417
00:18:17,240 --> 00:18:22,970
tkm can you talk a little bit about the

418
00:18:20,240 --> 00:18:26,750
policy on the router and or the ralph

419
00:18:22,970 --> 00:18:31,400
server that you're wrapping around these

420
00:18:26,750 --> 00:18:33,200
the the incoming advertisements to to

421
00:18:31,400 --> 00:18:36,380
act as a self-protection mechanism to

422
00:18:33,200 --> 00:18:39,110
avoid a scaling problem when you see a

423
00:18:36,380 --> 00:18:41,120
scaling problem at in the script there

424
00:18:39,110 --> 00:18:42,469
is a validation check to ensure that at

425
00:18:41,120 --> 00:18:45,530
a particular time there should not be

426
00:18:42,470 --> 00:18:48,020
more than like 20 or 30 flow spec active

427
00:18:45,530 --> 00:18:49,520
rules so there are it ain't sure that

428
00:18:48,020 --> 00:18:52,190
there are more not more than more rules

429
00:18:49,520 --> 00:18:54,710
like that and as far as the policy goes

430
00:18:52,190 --> 00:18:56,720
we have specific communities set on the

431
00:18:54,710 --> 00:18:58,880
router to ensure that hey the rule

432
00:18:56,720 --> 00:19:00,740
received from an exhibition server it is

433
00:18:58,880 --> 00:19:03,050
essentially flows back and you'll go to

434
00:19:00,740 --> 00:19:05,060
these routes reflector or the bearing

435
00:19:03,050 --> 00:19:06,800
edge or something like that I'm not sure

436
00:19:05,060 --> 00:19:09,080
if I correctly answered the question but

437
00:19:06,800 --> 00:19:10,040
if there's something left we can know

438
00:19:09,080 --> 00:19:12,800
that oh that's good

439
00:19:10,040 --> 00:19:14,389
also put any wrapping policy on the

440
00:19:12,800 --> 00:19:17,570
router to act as a belt and suspenders

441
00:19:14,390 --> 00:19:18,830
to control how many flows backgrounds

442
00:19:17,570 --> 00:19:23,149
it's going to accept from the route

443
00:19:18,830 --> 00:19:26,060
server for example right - to your ends

444
00:19:23,150 --> 00:19:28,040
router so in the exit the flow spec

445
00:19:26,060 --> 00:19:31,580
controller the script there and shows

446
00:19:28,040 --> 00:19:33,560
that at a particular because it has h it

447
00:19:31,580 --> 00:19:36,050
can check how many active rules are

448
00:19:33,560 --> 00:19:38,419
present on the router so it will not

449
00:19:36,050 --> 00:19:40,610
accept it will not activate any more

450
00:19:38,420 --> 00:19:42,470
rules than like 20 or 30 so that is

451
00:19:40,610 --> 00:19:43,760
basically taking care that there are not

452
00:19:42,470 --> 00:19:45,710
high amount of flow spectrum rules

453
00:19:43,760 --> 00:19:52,520
advertised okay so your policies on the

454
00:19:45,710 --> 00:19:56,300
controller okay thank you very much - my

455
00:19:52,520 --> 00:19:59,030
cover chenkov curator elapsed say thank

456
00:19:56,300 --> 00:20:03,100
you that's a nice presentation

457
00:19:59,030 --> 00:20:07,450
I too like hacking around tags Abitibi

458
00:20:03,100 --> 00:20:10,480
but my question is about the ddos open

459
00:20:07,450 --> 00:20:13,950
turret signaling I mean I get your point

460
00:20:10,480 --> 00:20:17,590
that it's working progress that's right

461
00:20:13,950 --> 00:20:20,410
but you are handling ipv6 prefixes

462
00:20:17,590 --> 00:20:24,070
you're using falls back in terms of ITF

463
00:20:20,410 --> 00:20:27,790
process full specification rules for

464
00:20:24,070 --> 00:20:30,520
ipv6 our father from release then all

465
00:20:27,790 --> 00:20:33,520
the dots documents at least the first

466
00:20:30,520 --> 00:20:36,070
pile of those documents so is there

467
00:20:33,520 --> 00:20:39,309
anything else that maybe prevents you

468
00:20:36,070 --> 00:20:43,120
from using dots except for you know the

469
00:20:39,309 --> 00:20:45,300
the process because that's not how it

470
00:20:43,120 --> 00:20:49,449
goes

471
00:20:45,300 --> 00:20:52,690
yes for ipv6 we don't have the RFC yet

472
00:20:49,450 --> 00:20:54,460
but almost all vendors have their own

473
00:20:52,690 --> 00:20:56,500
implementation of how they are doing it

474
00:20:54,460 --> 00:21:00,520
so it will definitely be a challenge to

475
00:20:56,500 --> 00:21:02,890
address the ipv6 issue right now we're

476
00:21:00,520 --> 00:21:07,389
just looking to deal with the ipv4 first

477
00:21:02,890 --> 00:21:12,040
and then deal with ipv6 as it comes okay

478
00:21:07,390 --> 00:21:14,740
thanks so Jeff has and with suitable

479
00:21:12,040 --> 00:21:16,450
networks I'm a big advocate for flowspec

480
00:21:14,740 --> 00:21:18,070
work and it didn't in sight aware of

481
00:21:16,450 --> 00:21:22,150
each of the implementation to work an

482
00:21:18,070 --> 00:21:23,080
idea for the stuff and I'm thrilled to

483
00:21:22,150 --> 00:21:25,990
see that you're recommending

484
00:21:23,080 --> 00:21:29,980
inter-domain flow spec and you should be

485
00:21:25,990 --> 00:21:31,710
terrified there's been a number of

486
00:21:29,980 --> 00:21:33,670
really scary bugs in various

487
00:21:31,710 --> 00:21:36,370
implementations from more than one

488
00:21:33,670 --> 00:21:37,900
vendor including us over the years you

489
00:21:36,370 --> 00:21:39,820
want to make sure that whoever's

490
00:21:37,900 --> 00:21:41,830
participating this is running current

491
00:21:39,820 --> 00:21:44,080
code and you do a really strong

492
00:21:41,830 --> 00:21:45,879
conformance suite make sure the stuff is

493
00:21:44,080 --> 00:21:48,939
going to work otherwise you'll end up

494
00:21:45,880 --> 00:21:50,740
with some unpleasant surprises but that

495
00:21:48,940 --> 00:21:53,380
said it's not a bad idea

496
00:21:50,740 --> 00:21:55,270
but there's definitely some strong

497
00:21:53,380 --> 00:21:56,170
operational caveats here I'm happy to

498
00:21:55,270 --> 00:21:58,540
talk about them offline

499
00:21:56,170 --> 00:22:00,160
no I definitely agree with that we've

500
00:21:58,540 --> 00:22:01,960
also discovered various you know bugs

501
00:22:00,160 --> 00:22:03,910
that hey this is supposed to act in this

502
00:22:01,960 --> 00:22:05,890
way but it's not acting so that will

503
00:22:03,910 --> 00:22:07,210
definitely be a challenge so right now

504
00:22:05,890 --> 00:22:09,190
what we want to do is you know start in

505
00:22:07,210 --> 00:22:11,380
the lab and stick to what we've tested

506
00:22:09,190 --> 00:22:14,280
and Willy go with those rules but I

507
00:22:11,380 --> 00:22:14,280
definitely agree with that

508
00:22:14,680 --> 00:22:20,170
the hospice Centrelink Don Smith

509
00:22:17,050 --> 00:22:22,810
Centrelink and we discussed nimurun I

510
00:22:20,170 --> 00:22:25,090
did actually the idea of bringing

511
00:22:22,810 --> 00:22:27,340
customer routes that black hole

512
00:22:25,090 --> 00:22:30,490
filtering flowspec etc for the other

513
00:22:27,340 --> 00:22:31,750
peer the fact is depending on how they

514
00:22:30,490 --> 00:22:33,730
implement it you might not even know

515
00:22:31,750 --> 00:22:35,230
it's a customer route you may not know

516
00:22:33,730 --> 00:22:38,770
that's really for the customer as

517
00:22:35,230 --> 00:22:40,990
opposed for protecting them so you kind

518
00:22:38,770 --> 00:22:44,080
of have to just allow that one and

519
00:22:40,990 --> 00:22:45,370
that's pretty much a given but one of

520
00:22:44,080 --> 00:22:47,139
the things I'm really interested in I

521
00:22:45,370 --> 00:22:50,110
don't don't think I heard it are you

522
00:22:47,140 --> 00:22:52,080
looking to do SNP polling or something

523
00:22:50,110 --> 00:22:55,500
to check the health of the router

524
00:22:52,080 --> 00:22:58,240
routinely after you apply for scigirls'

525
00:22:55,500 --> 00:23:00,910
right now we haven't that's that part

526
00:22:58,240 --> 00:23:01,990
yet but I think that's a good feature

527
00:23:00,910 --> 00:23:03,400
you've mentioned and we should

528
00:23:01,990 --> 00:23:06,000
definitely add that in this as well

529
00:23:03,400 --> 00:23:06,000
thank you

530
00:23:08,620 --> 00:23:11,590
first I wanted to thank you for

531
00:23:09,790 --> 00:23:13,870
following up on our previous

532
00:23:11,590 --> 00:23:15,399
presentation and beating all of us to

533
00:23:13,870 --> 00:23:20,770
the punch and getting something actually

534
00:23:15,400 --> 00:23:23,020
implemented so the first thing I had was

535
00:23:20,770 --> 00:23:26,620
about the validation suite that you have

536
00:23:23,020 --> 00:23:29,650
and you said that the you wanted to do

537
00:23:26,620 --> 00:23:31,719
validations so that the only routes you

538
00:23:29,650 --> 00:23:34,870
would accept from a peer would routes

539
00:23:31,720 --> 00:23:38,800
that had the same origin a same origin

540
00:23:34,870 --> 00:23:41,830
AAS for the peer that would prevent me

541
00:23:38,800 --> 00:23:44,200
for example I have a DDoS mitigation

542
00:23:41,830 --> 00:23:46,449
service so I wouldn't be able to

543
00:23:44,200 --> 00:23:48,100
advertise a route to you on behalf of

544
00:23:46,450 --> 00:23:51,610
one of the customers that I'm working on

545
00:23:48,100 --> 00:23:54,100
a mitigation for what I would recommend

546
00:23:51,610 --> 00:23:58,419
for that would be to rather than

547
00:23:54,100 --> 00:24:00,520
checking the the a s would also be to

548
00:23:58,420 --> 00:24:04,180
look at see if the route is if you

549
00:24:00,520 --> 00:24:06,820
already have a next hop to me for that

550
00:24:04,180 --> 00:24:09,250
route so if then if the best path if you

551
00:24:06,820 --> 00:24:11,169
have a best path that comes to me then

552
00:24:09,250 --> 00:24:12,160
that would be a valid route for you to

553
00:24:11,170 --> 00:24:15,610
accept in flowspec

554
00:24:12,160 --> 00:24:17,110
mm-hmm I see got it yeah I think you

555
00:24:15,610 --> 00:24:18,939
definitely added that when definitely

556
00:24:17,110 --> 00:24:22,320
will contact use of making sure this is

557
00:24:18,940 --> 00:24:22,320
what we're doing yes thanks again

558
00:24:23,429 --> 00:24:31,379
honey over here oh sorry I'm hard to see

559
00:24:29,239 --> 00:24:33,899
can you talk a little bit more about the

560
00:24:31,379 --> 00:24:36,959
web UI that you're using to verify and

561
00:24:33,899 --> 00:24:39,418
implement the rules yes I mean it's just

562
00:24:36,960 --> 00:24:41,639
a standard a flask server you know using

563
00:24:39,419 --> 00:24:45,389
like GU nakhon or something so it's not

564
00:24:41,639 --> 00:24:48,059
meant to be a UI for like a high use

565
00:24:45,389 --> 00:24:50,908
exists for the knock or the soft team to

566
00:24:48,059 --> 00:24:53,820
spin up the UI it will display a list of

567
00:24:50,909 --> 00:24:56,399
rules which have been validated and are

568
00:24:53,820 --> 00:24:58,408
awaiting opera or the operators approval

569
00:24:56,399 --> 00:25:01,018
for advertisement and then it will have

570
00:24:58,409 --> 00:25:03,089
a list of IPs which are already at least

571
00:25:01,019 --> 00:25:04,649
and then which you can withdraw them

572
00:25:03,089 --> 00:25:06,210
from the network as well and then it

573
00:25:04,649 --> 00:25:10,379
contains videos or details of the flow

574
00:25:06,210 --> 00:25:13,979
spectrum okay thank you um doesn't

575
00:25:10,379 --> 00:25:16,408
forgive that from Facebook so during

576
00:25:13,979 --> 00:25:19,379
testing what are the different factors

577
00:25:16,409 --> 00:25:22,769
that would play a role in taking the

578
00:25:19,379 --> 00:25:25,109
time between detecting and then going in

579
00:25:22,769 --> 00:25:27,419
the controller and me appearing with the

580
00:25:25,109 --> 00:25:29,570
controller communication so what's that

581
00:25:27,419 --> 00:25:33,659
timeline we are talking about here right

582
00:25:29,570 --> 00:25:36,749
so there is no significant delay for the

583
00:25:33,659 --> 00:25:38,669
controller to process it it's only the

584
00:25:36,749 --> 00:25:40,919
delay is just the minimal delay which

585
00:25:38,669 --> 00:25:42,599
standard data DDoS detection tool will

586
00:25:40,919 --> 00:25:44,460
take to send that syslog to the

587
00:25:42,599 --> 00:25:46,379
controller the controller will no

588
00:25:44,460 --> 00:25:50,839
identify it and then construct a flow

589
00:25:46,379 --> 00:25:53,248
spectral for it as far as the

590
00:25:50,839 --> 00:25:55,710
advertising that rule on the second pure

591
00:25:53,249 --> 00:25:57,330
its yes the operator you know it will be

592
00:25:55,710 --> 00:26:00,509
it'll take some time for the operator to

593
00:25:57,330 --> 00:26:02,879
look at the UI decide whether they want

594
00:26:00,509 --> 00:26:05,279
to accept this or not that can be

595
00:26:02,879 --> 00:26:07,709
completely automated as well in fact it

596
00:26:05,279 --> 00:26:09,629
is automated be first bugsy we purposely

597
00:26:07,710 --> 00:26:11,399
kept it manual because in the initial

598
00:26:09,629 --> 00:26:13,529
stages of the project we want to give

599
00:26:11,399 --> 00:26:14,939
the peers the control to decide whether

600
00:26:13,529 --> 00:26:17,369
they want to advertise this in their

601
00:26:14,940 --> 00:26:18,479
network or not but apart from that there

602
00:26:17,369 --> 00:26:22,429
shouldn't be any significant dealer

603
00:26:18,479 --> 00:26:25,739
thank you all right thank you

604
00:26:22,430 --> 00:26:25,739
[Applause]

605
00:26:30,600 --> 00:26:32,659
you

