1
00:00:11,850 --> 00:00:16,299
hello everybody

2
00:00:14,110 --> 00:00:20,680
looks like sauna and OT n is already

3
00:00:16,299 --> 00:00:22,390
scaring folks away I apologize for that

4
00:00:20,680 --> 00:00:26,560
my name is Christian I work for Cisco

5
00:00:22,390 --> 00:00:29,290
and some of you might think ot ends on

6
00:00:26,560 --> 00:00:32,500
it is you're gonna waste my time I hope

7
00:00:29,290 --> 00:00:34,360
it will not what I'm gonna talk about is

8
00:00:32,500 --> 00:00:37,239
how did deliver private line services

9
00:00:34,360 --> 00:00:38,769
over MPLS and I think we have talked

10
00:00:37,239 --> 00:00:40,449
about that or the industry has talked

11
00:00:38,770 --> 00:00:44,140
about that for many years so I'm not

12
00:00:40,449 --> 00:00:45,640
going to repeat that but I think a few

13
00:00:44,140 --> 00:00:49,690
things have changed and I want to share

14
00:00:45,640 --> 00:00:51,219
some trends and maybe make you start

15
00:00:49,690 --> 00:00:54,729
think and maybe there are some

16
00:00:51,219 --> 00:00:58,179
discussion coming out of this in the

17
00:00:54,729 --> 00:01:00,519
industry so when we talk about private

18
00:00:58,179 --> 00:01:02,859
line services you know when if we go

19
00:01:00,519 --> 00:01:06,548
back a couple of decades it was mostly

20
00:01:02,859 --> 00:01:08,799
about ds1 circuits in between routers

21
00:01:06,549 --> 00:01:12,640
using serial interfaces right good old

22
00:01:08,799 --> 00:01:15,820
days then Ethernet became became let's

23
00:01:12,640 --> 00:01:19,270
say a more and more adopted and accepted

24
00:01:15,820 --> 00:01:21,490
technology in the wide area network but

25
00:01:19,270 --> 00:01:24,670
I would say particularly in the North

26
00:01:21,490 --> 00:01:26,649
American market fiber wasn't always

27
00:01:24,670 --> 00:01:28,420
there where you needed it so Ethernet

28
00:01:26,650 --> 00:01:30,570
was so on and basically running Ethernet

29
00:01:28,420 --> 00:01:33,730
over a pdh or solid infrastructure

30
00:01:30,570 --> 00:01:35,679
became a predominant use case and this

31
00:01:33,730 --> 00:01:38,830
traffic grew of course now we talk about

32
00:01:35,680 --> 00:01:42,340
Tang GigE hundred giegi basically big

33
00:01:38,830 --> 00:01:45,370
fat point-to-point pipes that either get

34
00:01:42,340 --> 00:01:48,460
delivered by a carrier right or get

35
00:01:45,370 --> 00:01:50,050
bought by an you know an operator that

36
00:01:48,460 --> 00:01:52,479
wants to build his network

37
00:01:50,050 --> 00:01:55,080
infrastructure right and commonly they

38
00:01:52,480 --> 00:01:58,060
are used today or deploy today using

39
00:01:55,080 --> 00:02:01,210
some kind of TWM setup maybe max

40
00:01:58,060 --> 00:02:04,260
Ponder's sometimes there you know you

41
00:02:01,210 --> 00:02:06,639
know back to back patched or whatever or

42
00:02:04,260 --> 00:02:12,790
OTN as a switching technology is being

43
00:02:06,640 --> 00:02:15,610
adopted so I think one point here is

44
00:02:12,790 --> 00:02:18,730
that all these private line services I

45
00:02:15,610 --> 00:02:20,890
would say have two things one they are

46
00:02:18,730 --> 00:02:21,619
quite costly and I'm not running an

47
00:02:20,890 --> 00:02:24,049
operator so

48
00:02:21,620 --> 00:02:26,180
I can't really speak for that but I

49
00:02:24,050 --> 00:02:29,209
think that it's pretty much true but

50
00:02:26,180 --> 00:02:31,099
also it is quite costly or cumbersome

51
00:02:29,209 --> 00:02:33,080
for providers to even provide them right

52
00:02:31,099 --> 00:02:36,200
you know building a hundred key pipe

53
00:02:33,080 --> 00:02:37,700
from A to Z anywhere in the u.s. you

54
00:02:36,200 --> 00:02:39,349
know it's probably not that easy and

55
00:02:37,700 --> 00:02:43,149
it's gonna take a while until you get

56
00:02:39,349 --> 00:02:45,619
one right so this is not very agile so

57
00:02:43,150 --> 00:02:49,099
what if those private line service is in

58
00:02:45,620 --> 00:02:51,260
common the first and the last one I

59
00:02:49,099 --> 00:02:53,268
would say is important for those of you

60
00:02:51,260 --> 00:02:54,709
that provide those services right you

61
00:02:53,269 --> 00:02:57,019
want to provide them as cheap as

62
00:02:54,709 --> 00:02:59,000
possible and you want to have a simple

63
00:02:57,019 --> 00:03:01,280
operation for running those right both

64
00:02:59,000 --> 00:03:04,250
of them drive your cost and basically

65
00:03:01,280 --> 00:03:06,319
try your profit on the flip side the

66
00:03:04,250 --> 00:03:08,540
folks that actually need those pipes

67
00:03:06,319 --> 00:03:10,399
they are concerned about how that pipe

68
00:03:08,540 --> 00:03:12,828
is going to behave right you need to be

69
00:03:10,400 --> 00:03:15,170
low latency guaranteed bandwidth it

70
00:03:12,829 --> 00:03:18,650
needs to be highly available you want to

71
00:03:15,170 --> 00:03:20,708
have sophisticated OAM and things like

72
00:03:18,650 --> 00:03:20,709
that

73
00:03:21,160 --> 00:03:28,100
let's touch point on the first one which

74
00:03:24,470 --> 00:03:29,980
is cost and I think this is actually

75
00:03:28,100 --> 00:03:32,569
good that we have had the session before

76
00:03:29,980 --> 00:03:35,840
we were just talking about one are you

77
00:03:32,569 --> 00:03:39,560
pizza boxes tender a bit for terabit

78
00:03:35,840 --> 00:03:42,319
right even more coming on the capacity

79
00:03:39,560 --> 00:03:45,349
that aim to use and Asics are today

80
00:03:42,319 --> 00:03:47,810
delivering for packet forwarding is just

81
00:03:45,349 --> 00:03:50,179
the massive and amazing it's actually I

82
00:03:47,810 --> 00:03:52,760
would say mind-boggling I remember when

83
00:03:50,180 --> 00:03:54,560
I was designing routers and we were

84
00:03:52,760 --> 00:03:57,620
trying to get a 10 gig card out of the

85
00:03:54,560 --> 00:04:01,280
door with some Q s it was a pain right

86
00:03:57,620 --> 00:04:03,440
now you just put a you know you know an

87
00:04:01,280 --> 00:04:06,410
MP on a card a bunch of cards together

88
00:04:03,440 --> 00:04:09,319
and you have a box right it's it's way

89
00:04:06,410 --> 00:04:12,349
different now what do we see on the TDM

90
00:04:09,319 --> 00:04:14,839
side we already see that OTN is lagging

91
00:04:12,349 --> 00:04:16,969
behind OD n being the success of SONET

92
00:04:14,840 --> 00:04:20,510
right so this is a thing a very

93
00:04:16,970 --> 00:04:23,479
important point to remember if you tend

94
00:04:20,510 --> 00:04:25,490
to believe will want to provide you know

95
00:04:23,479 --> 00:04:27,590
those high capacity service using OT n

96
00:04:25,490 --> 00:04:29,840
switching you should bear in mind that

97
00:04:27,590 --> 00:04:32,969
the cost per bit of OT n is not gonna

98
00:04:29,840 --> 00:04:35,099
you know be that good and it will

99
00:04:32,969 --> 00:04:40,319
be able to pick up with what packet is

100
00:04:35,099 --> 00:04:41,929
allowing you another thing is if you

101
00:04:40,319 --> 00:04:45,749
want to build an audience which that's

102
00:04:41,929 --> 00:04:49,289
big now you typically do what is shown

103
00:04:45,749 --> 00:04:52,769
in this picture right investment in TDM

104
00:04:49,289 --> 00:04:54,568
silicon has really you know stopped so

105
00:04:52,769 --> 00:04:56,519
you're not going to use a classical TDM

106
00:04:54,569 --> 00:04:58,349
crossbar what you actually gonna do

107
00:04:56,519 --> 00:05:00,599
you're gonna throw in some kind of cell

108
00:04:58,349 --> 00:05:03,569
based fabric right and one you know

109
00:05:00,599 --> 00:05:05,909
predominant example is the DN x product

110
00:05:03,569 --> 00:05:08,639
line from Broadcom AKA jericho or out

111
00:05:05,909 --> 00:05:11,399
whatever you want to call it and around

112
00:05:08,639 --> 00:05:14,069
that you put OTN framers the OEF has

113
00:05:11,399 --> 00:05:16,110
defined a protocol or an implementation

114
00:05:14,069 --> 00:05:18,329
how you can take OT n frames and

115
00:05:16,110 --> 00:05:20,639
basically hand them over to a cell based

116
00:05:18,329 --> 00:05:22,619
fabric and then on the other side you

117
00:05:20,639 --> 00:05:25,019
would oh TN framer takes the cell stream

118
00:05:22,619 --> 00:05:26,879
and then basically regenerates the OT n

119
00:05:25,019 --> 00:05:28,919
frames right so that's how you build an

120
00:05:26,879 --> 00:05:34,529
OT n switch that scales to terabytes of

121
00:05:28,919 --> 00:05:34,859
capacity the interesting part is most of

122
00:05:34,529 --> 00:05:37,769
you

123
00:05:34,860 --> 00:05:39,689
I guess already know this thing in the

124
00:05:37,769 --> 00:05:41,550
middle is really more or less a router

125
00:05:39,689 --> 00:05:44,489
now right it's not only a fabric

126
00:05:41,550 --> 00:05:45,989
interface it does some decent packet

127
00:05:44,489 --> 00:05:49,709
forwarding and actually it's getting

128
00:05:45,989 --> 00:05:52,768
better and better so if you take the OT

129
00:05:49,709 --> 00:05:55,529
n framer away you remove two out of

130
00:05:52,769 --> 00:05:57,329
three chips per line card and by the way

131
00:05:55,529 --> 00:05:59,459
if you're not using interlocking between

132
00:05:57,329 --> 00:06:02,339
the frame or enter Chirico chip you can

133
00:05:59,459 --> 00:06:04,919
actually put two more 100 Gig interfaces

134
00:06:02,339 --> 00:06:06,869
on the jericho so you get a 600 per slot

135
00:06:04,919 --> 00:06:08,669
system rather than a wanna click per

136
00:06:06,869 --> 00:06:12,599
slot system more capacity means lower

137
00:06:08,669 --> 00:06:17,279
cost per bit and then if you want to go

138
00:06:12,599 --> 00:06:19,529
wild right if we gonna take away the 450

139
00:06:17,279 --> 00:06:21,419
millimeter depth or the 300 field 300

140
00:06:19,529 --> 00:06:23,909
millimeter depth right if we want to

141
00:06:21,419 --> 00:06:25,558
build the box is different no longer the

142
00:06:23,909 --> 00:06:28,019
front to back where we paint the air

143
00:06:25,559 --> 00:06:30,779
kind of design but we take the classical

144
00:06:28,019 --> 00:06:33,629
data center approach here we can stick

145
00:06:30,779 --> 00:06:36,058
six of those and pews onto a card gives

146
00:06:33,629 --> 00:06:38,309
me roughly three point six terabytes x

147
00:06:36,059 --> 00:06:40,289
16 slots you can take them off this is a

148
00:06:38,309 --> 00:06:43,129
lot of terabytes per rack per half rack

149
00:06:40,289 --> 00:06:46,440
again you're driving down the cost and

150
00:06:43,129 --> 00:06:47,760
also as those views grow

151
00:06:46,440 --> 00:06:51,810
you're gonna get bigger number and

152
00:06:47,760 --> 00:06:55,020
bigger bigger numbers so let's just

153
00:06:51,810 --> 00:06:59,340
assume we have decided you know we want

154
00:06:55,020 --> 00:07:00,960
to run this over MPLS right how are we

155
00:06:59,340 --> 00:07:03,299
gonna do this right I mean we all know

156
00:07:00,960 --> 00:07:05,549
that you know IP MPLS is connection-less

157
00:07:03,300 --> 00:07:07,590
right so we need to somehow get a

158
00:07:05,550 --> 00:07:09,720
representation of that connection right

159
00:07:07,590 --> 00:07:11,849
thanks Toluca Mateen and a bunch of

160
00:07:09,720 --> 00:07:14,190
other people many years ago they defined

161
00:07:11,850 --> 00:07:16,500
the pseudo wire right the pseudo is

162
00:07:14,190 --> 00:07:17,910
giving us a representation of a

163
00:07:16,500 --> 00:07:22,530
point-to-point connection between two

164
00:07:17,910 --> 00:07:24,690
attachment circuits it has been you know

165
00:07:22,530 --> 00:07:27,690
defined for any type of a tetra circuit

166
00:07:24,690 --> 00:07:32,010
D is one frame relay ATM and Ethernet I

167
00:07:27,690 --> 00:07:34,560
would say while many years ago the whole

168
00:07:32,010 --> 00:07:36,390
topic about migrating ATM and frame was

169
00:07:34,560 --> 00:07:39,030
a big one I don't think that ever really

170
00:07:36,390 --> 00:07:42,090
picked up predominantly you use sudo

171
00:07:39,030 --> 00:07:44,070
wise for Ethernet transport right but

172
00:07:42,090 --> 00:07:46,280
it's still you know why little bit you

173
00:07:44,070 --> 00:07:49,650
know vital defined for everything a

174
00:07:46,280 --> 00:07:53,549
pseudo idle doesn't really have a notion

175
00:07:49,650 --> 00:07:56,429
of bandwidth and path in it's like

176
00:07:53,550 --> 00:07:57,900
purest definition right so it's just a

177
00:07:56,430 --> 00:07:59,970
point-to-point connection it's an

178
00:07:57,900 --> 00:08:02,849
associate association between two

179
00:07:59,970 --> 00:08:05,430
endpoints right so if you want to have

180
00:08:02,850 --> 00:08:07,680
some notion of path and bandwidth we're

181
00:08:05,430 --> 00:08:10,770
gonna use an MPLS LSP in between right

182
00:08:07,680 --> 00:08:13,170
and that app that MPLS LSP is giving us

183
00:08:10,770 --> 00:08:15,409
two things for example it lets us deal

184
00:08:13,170 --> 00:08:18,480
with bandwidth and it lets us deal with

185
00:08:15,410 --> 00:08:25,650
deciding how the path needs to go

186
00:08:18,480 --> 00:08:27,170
through the network is this real and how

187
00:08:25,650 --> 00:08:30,030
people are doing this and actually

188
00:08:27,170 --> 00:08:32,580
Verizon you might have seen this is

189
00:08:30,030 --> 00:08:34,620
publicly talking about this a couple of

190
00:08:32,580 --> 00:08:37,200
years back they started adopting this

191
00:08:34,620 --> 00:08:38,849
technology not for Ethernet but also

192
00:08:37,200 --> 00:08:41,430
using it within it but per se the new

193
00:08:38,849 --> 00:08:43,740
thing is they're actually doubling down

194
00:08:41,429 --> 00:08:46,500
on modernized modernizing there are

195
00:08:43,740 --> 00:08:49,590
solid a solid infrastructure and using

196
00:08:46,500 --> 00:08:53,070
circuit emulation MPLS suit wires there

197
00:08:49,590 --> 00:08:55,110
today running actively circuit emulation

198
00:08:53,070 --> 00:08:57,089
in the XS which is shown on the on the

199
00:08:55,110 --> 00:08:59,190
top that's where they're actually doing

200
00:08:57,089 --> 00:08:59,970
an interesting trick in areas where they

201
00:08:59,190 --> 00:09:01,680
don't have fire

202
00:08:59,970 --> 00:09:03,540
or resources where they're actually

203
00:09:01,680 --> 00:09:06,359
relying on third-party carriers to

204
00:09:03,540 --> 00:09:09,180
provide ds1 circuits they are migrating

205
00:09:06,360 --> 00:09:11,160
to a common Ethernet service from a

206
00:09:09,180 --> 00:09:13,620
third-party and they're consolidating

207
00:09:11,160 --> 00:09:15,569
multiple Diaz ones as well as Ethernet

208
00:09:13,620 --> 00:09:20,040
services using pseudo and MPLS

209
00:09:15,569 --> 00:09:22,259
technology and as we speak they're going

210
00:09:20,040 --> 00:09:24,649
down the middle and the bottom picture

211
00:09:22,259 --> 00:09:27,569
where they actually more widely deploy

212
00:09:24,649 --> 00:09:31,139
MPLS in the metro and trying to

213
00:09:27,569 --> 00:09:33,930
modernize all the TDM infrastructure and

214
00:09:31,139 --> 00:09:35,459
all of you probably can imagine this is

215
00:09:33,930 --> 00:09:37,229
going to be a huge undertaking because

216
00:09:35,459 --> 00:09:40,529
essentially what you're trying to do

217
00:09:37,230 --> 00:09:42,389
you're trying to migrate a museum I mean

218
00:09:40,529 --> 00:09:44,399
I have been myself in a central office

219
00:09:42,389 --> 00:09:46,230
at Verizon and I couldn't believe what I

220
00:09:44,399 --> 00:09:49,170
have seen right I mean it's really

221
00:09:46,230 --> 00:09:51,089
mind-boggling and over the years a lot

222
00:09:49,170 --> 00:09:53,250
of equipment has been you know collected

223
00:09:51,089 --> 00:09:55,470
and they basically need to migrate that

224
00:09:53,250 --> 00:09:57,389
some of it maybe they can just turn off

225
00:09:55,470 --> 00:10:01,199
but some of it they can't they need to

226
00:09:57,389 --> 00:10:02,250
migrate the services now once you go

227
00:10:01,199 --> 00:10:04,979
down that path

228
00:10:02,250 --> 00:10:07,889
right depending on what you want to do

229
00:10:04,980 --> 00:10:10,279
is you might actually care a little bit

230
00:10:07,889 --> 00:10:13,079
about how you run your network right

231
00:10:10,279 --> 00:10:14,879
some of you or some providers may say

232
00:10:13,079 --> 00:10:17,279
well if a micro it's just a bunch of

233
00:10:14,879 --> 00:10:20,220
these ones and I have a 400 gig backbone

234
00:10:17,279 --> 00:10:23,639
I don't care right but some might say

235
00:10:20,220 --> 00:10:25,559
well my infrastructure may be actually

236
00:10:23,639 --> 00:10:27,930
just as big as I can

237
00:10:25,559 --> 00:10:29,339
you know migrate my services so you

238
00:10:27,930 --> 00:10:31,290
might want to be a little bit more

239
00:10:29,339 --> 00:10:33,529
stringent in terms of how you run your

240
00:10:31,290 --> 00:10:35,610
network and how you route your LSPs

241
00:10:33,529 --> 00:10:37,319
again this is not rocket science right

242
00:10:35,610 --> 00:10:39,120
all of you guys notice right the left

243
00:10:37,319 --> 00:10:41,519
picture is classical traffic engineering

244
00:10:39,120 --> 00:10:44,040
right we compute our paths at the head

245
00:10:41,519 --> 00:10:47,069
end we're gonna run our set up and we're

246
00:10:44,040 --> 00:10:50,550
gonna you know map our pseudo eyes onto

247
00:10:47,069 --> 00:10:52,469
onto labels on the label switch path of

248
00:10:50,550 --> 00:10:54,089
course you can also do it in a more

249
00:10:52,470 --> 00:10:56,759
centralized fashion I would say this is

250
00:10:54,089 --> 00:11:00,180
where segment routing and a lot of the

251
00:10:56,759 --> 00:11:03,990
PCE and Pisa and Sdn centric approaches

252
00:11:00,180 --> 00:11:06,209
are you know feeling at home whether you

253
00:11:03,990 --> 00:11:07,740
do it you know you know the left of a

254
00:11:06,209 --> 00:11:09,540
right way it doesn't really matter the

255
00:11:07,740 --> 00:11:11,860
point is that you actually start dealing

256
00:11:09,540 --> 00:11:16,750
with you know LSPs and bandwidth manage

257
00:11:11,860 --> 00:11:19,839
a bit more inside so I talked about we

258
00:11:16,750 --> 00:11:23,170
make being pseudo wires on to LSPs so

259
00:11:19,839 --> 00:11:26,529
let's spend a minute on that essentially

260
00:11:23,170 --> 00:11:28,829
the what the first way to do that in

261
00:11:26,529 --> 00:11:32,470
particular if you want to map you know

262
00:11:28,829 --> 00:11:34,149
point-to-point private lines is some

263
00:11:32,470 --> 00:11:35,769
kind of a one-to-one pinning where

264
00:11:34,149 --> 00:11:37,329
basically say this pseudo wire goes on

265
00:11:35,769 --> 00:11:38,470
for this LSB the pseudo wire goes into

266
00:11:37,329 --> 00:11:40,060
this LSB right

267
00:11:38,470 --> 00:11:41,709
this actually has a nice side effect

268
00:11:40,060 --> 00:11:43,300
because as you have a one-to-one

269
00:11:41,709 --> 00:11:46,719
relationship between your pseudo wire

270
00:11:43,300 --> 00:11:48,670
and two LSP you can also keep track of

271
00:11:46,720 --> 00:11:50,829
the bandwidth right so traffic

272
00:11:48,670 --> 00:11:54,219
engineering and path computation is

273
00:11:50,829 --> 00:11:56,890
making sure that I only put as many LSPs

274
00:11:54,220 --> 00:11:59,440
onto a particular link as I have pained

275
00:11:56,890 --> 00:12:01,180
with available on that link and with

276
00:11:59,440 --> 00:12:03,730
this you know pain with management or

277
00:12:01,180 --> 00:12:06,099
pseudo wire kak you can now also assign

278
00:12:03,730 --> 00:12:07,690
a pain with to a pseudo wire and keep

279
00:12:06,100 --> 00:12:10,269
track of how many pseudo Y's you map

280
00:12:07,690 --> 00:12:13,390
onto the LSB so now you get really this

281
00:12:10,269 --> 00:12:16,269
end-to-end pain with admission that you

282
00:12:13,390 --> 00:12:18,130
that you get from sonnet and and dou TN

283
00:12:16,269 --> 00:12:19,839
were essentially you're gonna only

284
00:12:18,130 --> 00:12:22,410
assign time slots that you haven't

285
00:12:19,839 --> 00:12:22,410
assigned yet

286
00:12:24,790 --> 00:12:30,910
the other approach is you gonna turn on

287
00:12:28,570 --> 00:12:33,399
the autopilot right what you're gonna do

288
00:12:30,910 --> 00:12:35,920
is essentially you could run order

289
00:12:33,399 --> 00:12:38,050
bandwidth on your LSPs whether it's our

290
00:12:35,920 --> 00:12:41,079
own box or off box in a controller I

291
00:12:38,050 --> 00:12:43,089
mean that that you know you know depends

292
00:12:41,079 --> 00:12:45,579
on your choice but essentially gonna

293
00:12:43,089 --> 00:12:48,970
gonna adjust your LSP bandwidth based on

294
00:12:45,579 --> 00:12:51,729
traffic measurements and continuously

295
00:12:48,970 --> 00:12:55,800
monitor how your network is loaded and

296
00:12:51,730 --> 00:12:58,120
reroute potentially LSPs as as needed

297
00:12:55,800 --> 00:13:01,000
while you do that you normally would

298
00:12:58,120 --> 00:13:03,370
also then outer route announce your LSPs

299
00:13:01,000 --> 00:13:05,380
which means basically your LSPs become

300
00:13:03,370 --> 00:13:07,269
links in your topology or an inter in

301
00:13:05,380 --> 00:13:08,920
your routing table and then the pseudo

302
00:13:07,269 --> 00:13:12,730
wire traffic is kind of dynamically

303
00:13:08,920 --> 00:13:15,130
getting diverted or injected into LSPs

304
00:13:12,730 --> 00:13:22,899
based on which one is the best to reach

305
00:13:15,130 --> 00:13:25,029
the destination okay the next next you

306
00:13:22,899 --> 00:13:27,089
know service level agreement parameter

307
00:13:25,029 --> 00:13:30,069
that we want to look at is availability

308
00:13:27,089 --> 00:13:32,199
again this is not something new right

309
00:13:30,069 --> 00:13:34,540
traffic engineering is known to

310
00:13:32,199 --> 00:13:36,550
everybody fast reroute is I guess also

311
00:13:34,540 --> 00:13:38,800
known to everybody we have a primary

312
00:13:36,550 --> 00:13:40,779
path we have call admission control it

313
00:13:38,800 --> 00:13:42,250
across the network and for each and

314
00:13:40,779 --> 00:13:44,439
every link or note that we want to

315
00:13:42,250 --> 00:13:47,860
protect we're gonna calculate some

316
00:13:44,440 --> 00:13:49,810
detour LSPs traffic engineering fast

317
00:13:47,860 --> 00:13:50,740
reroute uses this model were basically

318
00:13:49,810 --> 00:13:53,109
we're going to look at all the

319
00:13:50,740 --> 00:13:55,180
interfaces we want to protect we try to

320
00:13:53,110 --> 00:13:57,459
find one of those green detours and

321
00:13:55,180 --> 00:14:01,569
we're going to try to get back to the

322
00:13:57,459 --> 00:14:02,229
previous or primary path as as soon as

323
00:14:01,569 --> 00:14:04,420
possible

324
00:14:02,230 --> 00:14:06,699
right depending on whether you look for

325
00:14:04,420 --> 00:14:08,380
a link or node protection you might go a

326
00:14:06,699 --> 00:14:12,189
little further but essentially always

327
00:14:08,380 --> 00:14:15,010
try to get back to your original path so

328
00:14:12,190 --> 00:14:16,720
when a failure happens essentially we

329
00:14:15,010 --> 00:14:19,269
can do a local detection and the Quick

330
00:14:16,720 --> 00:14:22,329
Reaction and traffic is gonna go you

331
00:14:19,269 --> 00:14:24,730
know a short little detour this is kind

332
00:14:22,329 --> 00:14:27,010
of like when something happens on your

333
00:14:24,730 --> 00:14:29,910
on the highway and you're gonna get the

334
00:14:27,010 --> 00:14:33,010
word it to some other some other roads

335
00:14:29,910 --> 00:14:34,990
important while we have done some quick

336
00:14:33,010 --> 00:14:37,630
local reaction we also do global

337
00:14:34,990 --> 00:14:38,390
convergence so after some time we're

338
00:14:37,630 --> 00:14:40,730
going to look

339
00:14:38,390 --> 00:14:42,980
a new working path and for a new path

340
00:14:40,730 --> 00:14:45,079
for the LSB and we're gonna route for

341
00:14:42,980 --> 00:14:49,130
example in my topology the traffic on

342
00:14:45,079 --> 00:14:51,380
the bottom side if you would adopt

343
00:14:49,130 --> 00:14:54,370
segment routing something very similar

344
00:14:51,380 --> 00:14:57,410
you know is happening in your network

345
00:14:54,370 --> 00:14:59,209
either just by plane segment routing or

346
00:14:57,410 --> 00:15:01,939
maybe using a segment routing policy

347
00:14:59,209 --> 00:15:06,920
again our traffic may in normal

348
00:15:01,940 --> 00:15:08,630
situation run on the top blue path also

349
00:15:06,920 --> 00:15:10,729
we're going to look at all the different

350
00:15:08,630 --> 00:15:12,410
nodes and all the interfaces and nodes

351
00:15:10,730 --> 00:15:15,079
we want to protect and we're going to

352
00:15:12,410 --> 00:15:18,560
pre-compute and pre-program what we now

353
00:15:15,079 --> 00:15:21,109
call a loop tree alternate this is very

354
00:15:18,560 --> 00:15:23,420
similar to a TFR our model but there's a

355
00:15:21,110 --> 00:15:25,339
small little difference here we no

356
00:15:23,420 --> 00:15:28,130
longer try to get back as soon as

357
00:15:25,339 --> 00:15:30,290
possible to the actual path of the LSP

358
00:15:28,130 --> 00:15:33,110
but rather we're going to look from a

359
00:15:30,290 --> 00:15:35,360
point of repair perspective what is the

360
00:15:33,110 --> 00:15:38,350
most optimum and suitable path towards

361
00:15:35,360 --> 00:15:42,050
the destination and this is giving us

362
00:15:38,350 --> 00:15:44,839
more along the line what we call the

363
00:15:42,050 --> 00:15:47,599
post convergence path because if I click

364
00:15:44,839 --> 00:15:50,180
the clicker here you know this is the

365
00:15:47,600 --> 00:15:53,060
immediate reaction but once the network

366
00:15:50,180 --> 00:15:55,939
converges you know this blue path is

367
00:15:53,060 --> 00:15:57,890
pretty much the same as this green path

368
00:15:55,940 --> 00:16:00,769
and depending on the topology they might

369
00:15:57,890 --> 00:16:02,750
be exactly the same so what does this

370
00:16:00,769 --> 00:16:04,070
mean or what what's what's the important

371
00:16:02,750 --> 00:16:06,860
point that I want to point out here is

372
00:16:04,070 --> 00:16:08,300
we need to deal with two situations

373
00:16:06,860 --> 00:16:09,680
right one is the immediate reaction

374
00:16:08,300 --> 00:16:12,740
you're gonna have some network

375
00:16:09,680 --> 00:16:14,089
utilization and the other one is the the

376
00:16:12,740 --> 00:16:15,800
situation of the network when the

377
00:16:14,089 --> 00:16:19,130
failure I mean the network has converged

378
00:16:15,800 --> 00:16:22,310
for the failure and in order to deal

379
00:16:19,130 --> 00:16:23,540
with that you need to implement some

380
00:16:22,310 --> 00:16:25,939
kind of network planning and

381
00:16:23,540 --> 00:16:28,519
optimization right I guess again this

382
00:16:25,940 --> 00:16:30,140
may not be you know news to you I mean

383
00:16:28,519 --> 00:16:32,360
if you run a network you always want to

384
00:16:30,140 --> 00:16:36,050
plan it and optimize it but you know in

385
00:16:32,360 --> 00:16:39,079
the context of you know talking about a

386
00:16:36,050 --> 00:16:41,300
more traditional sonnet or all TN type

387
00:16:39,079 --> 00:16:42,079
of network operation I think this is an

388
00:16:41,300 --> 00:16:44,839
important point

389
00:16:42,079 --> 00:16:47,540
it's not about set and forget you're not

390
00:16:44,839 --> 00:16:50,240
just allocating time slots and then you

391
00:16:47,540 --> 00:16:51,020
don't do anything you really more use a

392
00:16:50,240 --> 00:16:53,000
dynamic

393
00:16:51,020 --> 00:16:54,980
work that you constantly need to monitor

394
00:16:53,000 --> 00:17:04,040
but for the benefit that you have much

395
00:16:54,980 --> 00:17:06,680
more capacity at a lower price now the

396
00:17:04,040 --> 00:17:09,139
third option if you really want to be

397
00:17:06,680 --> 00:17:12,380
very you know TDM centric in your

398
00:17:09,140 --> 00:17:15,880
behavior is to adopt a path protection

399
00:17:12,380 --> 00:17:18,380
model and that actually has one benefit

400
00:17:15,880 --> 00:17:21,050
you don't have to really deal with this

401
00:17:18,380 --> 00:17:23,690
in needed reaction and post convergence

402
00:17:21,050 --> 00:17:26,030
right all you have is a working path

403
00:17:23,690 --> 00:17:30,020
that you again call it mission control

404
00:17:26,030 --> 00:17:31,490
and setup and a protect half and the

405
00:17:30,020 --> 00:17:35,360
protect path is shown in green on the

406
00:17:31,490 --> 00:17:37,940
bottom adding bi-directional and core

407
00:17:35,360 --> 00:17:39,590
routing aspects to it which has been you

408
00:17:37,940 --> 00:17:41,480
know have been defined a couple of years

409
00:17:39,590 --> 00:17:43,070
ago you can actually also ensure that

410
00:17:41,480 --> 00:17:44,930
the forward direction and the reverse

411
00:17:43,070 --> 00:17:47,389
direction is going along exactly the

412
00:17:44,930 --> 00:17:50,090
same path and that has the benefit that

413
00:17:47,390 --> 00:17:56,350
you have equal or very close to the same

414
00:17:50,090 --> 00:17:56,350
latency in both directions in this model

415
00:17:56,470 --> 00:18:03,530
we essentially need to kind of get an

416
00:18:02,120 --> 00:18:06,320
idea of whether they're working in the

417
00:18:03,530 --> 00:18:08,870
protect path at the head and both

418
00:18:06,320 --> 00:18:11,230
endpoints is still available in order to

419
00:18:08,870 --> 00:18:14,870
do that we need to use some end-to-end

420
00:18:11,230 --> 00:18:16,760
liveliness and in case of MPLS PFD is

421
00:18:14,870 --> 00:18:18,500
used here so we are exchanging PFD

422
00:18:16,760 --> 00:18:21,170
keeper lives on both the working protect

423
00:18:18,500 --> 00:18:23,330
and that allows us to fail to find a

424
00:18:21,170 --> 00:18:26,690
failure anywhere along the path right

425
00:18:23,330 --> 00:18:29,510
the local protection schemes FRR and

426
00:18:26,690 --> 00:18:31,190
loop pre alternate are relying on local

427
00:18:29,510 --> 00:18:32,600
failure detection so they don't need to

428
00:18:31,190 --> 00:18:35,720
find out that there is some kind of

429
00:18:32,600 --> 00:18:39,350
remote failure so once we detect the

430
00:18:35,720 --> 00:18:41,210
working path has a problem we now at the

431
00:18:39,350 --> 00:18:43,580
head and can decide not to send traffic

432
00:18:41,210 --> 00:18:47,120
on the working path but on the protect

433
00:18:43,580 --> 00:18:50,330
path the important point here why can

434
00:18:47,120 --> 00:18:52,729
you stop dealing with immediate reaction

435
00:18:50,330 --> 00:18:55,669
and post convergence in a situation is

436
00:18:52,730 --> 00:18:58,190
both the working and protect paths have

437
00:18:55,670 --> 00:19:01,460
been pre signaled and bandwidth has been

438
00:18:58,190 --> 00:19:03,490
allocated so whenever you switch over

439
00:19:01,460 --> 00:19:05,980
you know already in advance that you

440
00:19:03,490 --> 00:19:07,929
I have enough bandwidth there that makes

441
00:19:05,980 --> 00:19:12,700
the you know running the network in a

442
00:19:07,929 --> 00:19:14,530
very TDM centric way much easier but

443
00:19:12,700 --> 00:19:17,140
there actually have been a couple of

444
00:19:14,530 --> 00:19:20,050
wrinkles that we are uncovered and they

445
00:19:17,140 --> 00:19:23,380
are coming from let's say the root of IP

446
00:19:20,050 --> 00:19:26,559
MPLS being very dynamic and being you

447
00:19:23,380 --> 00:19:29,590
know optimized to to to adapt to changes

448
00:19:26,559 --> 00:19:30,970
in the network if the working path

449
00:19:29,590 --> 00:19:34,780
changes we're going to switch to the

450
00:19:30,970 --> 00:19:37,270
protect but what rsvp-te dynamically

451
00:19:34,780 --> 00:19:39,760
does or automatically does it is looking

452
00:19:37,270 --> 00:19:42,010
for a way around the failure and if

453
00:19:39,760 --> 00:19:44,770
there is one it will re-establish the

454
00:19:42,010 --> 00:19:47,050
primary path and this is the blue zigzag

455
00:19:44,770 --> 00:19:49,360
path that I'm showing here and also at

456
00:19:47,050 --> 00:19:50,950
the same time the head and we'll start

457
00:19:49,360 --> 00:19:53,409
switching back from the protect to the

458
00:19:50,950 --> 00:19:56,530
working now a lot of folks would say

459
00:19:53,410 --> 00:20:00,130
well I don't care why not but in the

460
00:19:56,530 --> 00:20:02,860
strictest TDM centric way this is

461
00:20:00,130 --> 00:20:05,710
something that classical SONET networks

462
00:20:02,860 --> 00:20:08,530
and OTN networks don't do so if you want

463
00:20:05,710 --> 00:20:10,570
to you know emulate that behavior as

464
00:20:08,530 --> 00:20:11,940
close as possible you need to stop doing

465
00:20:10,570 --> 00:20:14,350
that

466
00:20:11,940 --> 00:20:17,400
there was actually a very easy way to do

467
00:20:14,350 --> 00:20:20,379
that is by just implementing something

468
00:20:17,400 --> 00:20:23,740
that we from Cisco called sticky path

469
00:20:20,380 --> 00:20:25,870
for lack of a better word I guess the

470
00:20:23,740 --> 00:20:28,510
more you know clever name could have

471
00:20:25,870 --> 00:20:30,340
been persistent essentially we want to

472
00:20:28,510 --> 00:20:32,770
make sure that my previously established

473
00:20:30,340 --> 00:20:34,178
working path stays persistent

474
00:20:32,770 --> 00:20:36,010
essentially we're going to keep it in

475
00:20:34,179 --> 00:20:38,260
our memory and whenever we try to

476
00:20:36,010 --> 00:20:40,720
establish it we always kind of try that

477
00:20:38,260 --> 00:20:43,210
old path this is something that classic

478
00:20:40,720 --> 00:20:46,630
RS BBT doesn't do but with this small

479
00:20:43,210 --> 00:20:50,670
knob here we can now make the behavior

480
00:20:46,630 --> 00:20:50,670
look very much like sauna deep-ando TM

481
00:20:52,410 --> 00:20:57,450
another thing that IP MPLS networks

482
00:20:54,820 --> 00:21:01,120
don't do but sooner than OTN that looks

483
00:20:57,450 --> 00:21:03,040
you know sorry

484
00:21:01,120 --> 00:21:04,899
something that IP MPLS networks do but

485
00:21:03,040 --> 00:21:08,559
sooner than OTN networks don't do you

486
00:21:04,900 --> 00:21:10,390
got automatically back and i think you

487
00:21:08,559 --> 00:21:12,910
know this this difference probably comes

488
00:21:10,390 --> 00:21:14,800
from the fact that the TDM that looks a

489
00:21:12,910 --> 00:21:16,540
more static in nature and you really

490
00:21:14,800 --> 00:21:17,350
want to make sure that your gonna switch

491
00:21:16,540 --> 00:21:18,610
back

492
00:21:17,350 --> 00:21:20,049
and you really really want to make sure

493
00:21:18,610 --> 00:21:21,580
right

494
00:21:20,049 --> 00:21:25,440
so whenever the working path gets

495
00:21:21,580 --> 00:21:28,149
established the non-operative behavior

496
00:21:25,440 --> 00:21:29,919
is something that you know you can

497
00:21:28,149 --> 00:21:32,379
define as a local function and note and

498
00:21:29,919 --> 00:21:34,840
say basically well we have the working

499
00:21:32,379 --> 00:21:36,699
path back up but we don't want to switch

500
00:21:34,840 --> 00:21:39,158
back yet and we're gonna wait until the

501
00:21:36,700 --> 00:21:43,899
operator is issuing a command and then

502
00:21:39,159 --> 00:21:49,090
only we do so and last but not least

503
00:21:43,899 --> 00:21:51,189
that was a fun one after talking about

504
00:21:49,090 --> 00:21:53,529
how we can actually emulate the sonnet

505
00:21:51,190 --> 00:21:54,970
and OTN behavior and basically saying

506
00:21:53,529 --> 00:21:57,070
well we're gonna keep our paths

507
00:21:54,970 --> 00:21:59,289
persistent meaning I only gonna

508
00:21:57,070 --> 00:22:01,960
reestablish my old working and I only

509
00:21:59,289 --> 00:22:03,820
going to reestablish my old protect what

510
00:22:01,960 --> 00:22:06,509
happens if I have a catastrophic failure

511
00:22:03,820 --> 00:22:09,158
and get into a double failure situation

512
00:22:06,509 --> 00:22:11,109
my working is down my protect is down

513
00:22:09,159 --> 00:22:13,239
but I actually have still some

514
00:22:11,109 --> 00:22:15,279
interfaces and links and resources in my

515
00:22:13,239 --> 00:22:17,309
network that actually could bring my

516
00:22:15,279 --> 00:22:20,590
service up why would i unnecessarily

517
00:22:17,309 --> 00:22:22,749
bring my service down now all of this is

518
00:22:20,590 --> 00:22:25,840
really you know again and some people

519
00:22:22,749 --> 00:22:28,720
might you know shake their heads this is

520
00:22:25,840 --> 00:22:30,820
all kind of try to please and copy the

521
00:22:28,720 --> 00:22:32,499
OT and and so on behavior but once you

522
00:22:30,820 --> 00:22:33,759
start doing that you need to go all the

523
00:22:32,499 --> 00:22:36,909
way otherwise you're gonna get in

524
00:22:33,759 --> 00:22:39,100
trouble but if you do so with a small

525
00:22:36,909 --> 00:22:40,989
little wrinkle here in addition you

526
00:22:39,100 --> 00:22:42,789
could actually just say okay the working

527
00:22:40,989 --> 00:22:44,590
is now on the protect is down let's

528
00:22:42,789 --> 00:22:46,720
actually configure my tunnel or my

529
00:22:44,590 --> 00:22:48,850
second routing policy with a third path

530
00:22:46,720 --> 00:22:52,450
option so whenever the first two are

531
00:22:48,850 --> 00:22:54,219
down let's signal an on demand option

532
00:22:52,450 --> 00:22:55,899
that doesn't need to guarantee anything

533
00:22:54,220 --> 00:22:57,309
and if there is something we can at

534
00:22:55,899 --> 00:22:59,229
least bring back the service and

535
00:22:57,309 --> 00:23:00,759
whenever the working and the order

536
00:22:59,230 --> 00:23:02,529
protect comes back they're gonna switch

537
00:23:00,759 --> 00:23:05,309
to that and we're gonna go back to the

538
00:23:02,529 --> 00:23:05,309
normal operation

539
00:23:07,410 --> 00:23:13,630
latency I think that's a fun one for me

540
00:23:11,250 --> 00:23:16,960
but actually it's an easy point to

541
00:23:13,630 --> 00:23:19,090
address right routers are no longer CPU

542
00:23:16,960 --> 00:23:21,250
base right there hardware-based

543
00:23:19,090 --> 00:23:24,010
they can forward packets very fast and

544
00:23:21,250 --> 00:23:25,960
the only reason why you would see

545
00:23:24,010 --> 00:23:28,629
latency in a packet network these days

546
00:23:25,960 --> 00:23:31,750
is if you congest links or congest a

547
00:23:28,630 --> 00:23:34,030
certain traffic class right take any

548
00:23:31,750 --> 00:23:36,670
router today they're gonna show you I

549
00:23:34,030 --> 00:23:38,800
mean I just take a rough guess here ten

550
00:23:36,670 --> 00:23:40,240
bit between 10 and 30 microseconds

551
00:23:38,800 --> 00:23:42,159
depending on the platform and the design

552
00:23:40,240 --> 00:23:43,930
of the box but you know a low

553
00:23:42,160 --> 00:23:46,240
double-digit microsecond number of

554
00:23:43,930 --> 00:23:47,830
latency and by the way if we think back

555
00:23:46,240 --> 00:23:50,170
of what I just said before about how you

556
00:23:47,830 --> 00:23:51,909
build an audience which these days the

557
00:23:50,170 --> 00:23:54,490
audience which is not gonna show your

558
00:23:51,910 --> 00:23:56,830
lower latency the actual transfer late

559
00:23:54,490 --> 00:23:58,570
this year over a big audience which is

560
00:23:56,830 --> 00:24:07,179
very likely going to be actually higher

561
00:23:58,570 --> 00:24:12,210
than of a big MPLS box today quickly on

562
00:24:07,180 --> 00:24:14,950
one topic as OTN and SONET networks are

563
00:24:12,210 --> 00:24:16,720
heavily relying on I would say net

564
00:24:14,950 --> 00:24:20,290
network management systems to provision

565
00:24:16,720 --> 00:24:22,360
those if you want to propagate failures

566
00:24:20,290 --> 00:24:23,980
and state information you can't use a

567
00:24:22,360 --> 00:24:25,330
dynamic routing protocol so a lot of

568
00:24:23,980 --> 00:24:27,340
those things have actually been

569
00:24:25,330 --> 00:24:28,960
superimposed into the frame overhead

570
00:24:27,340 --> 00:24:31,480
right so whenever you have a local

571
00:24:28,960 --> 00:24:33,640
failure some alarm you know some

572
00:24:31,480 --> 00:24:35,650
alarming in signal is added into the

573
00:24:33,640 --> 00:24:38,650
framer and the other side might know

574
00:24:35,650 --> 00:24:40,420
about that in our case if we start using

575
00:24:38,650 --> 00:24:42,640
pseudo wires and we are actually only

576
00:24:40,420 --> 00:24:44,910
having a TDM interface on one end and on

577
00:24:42,640 --> 00:24:47,110
the other we can do exactly the same

578
00:24:44,910 --> 00:24:49,300
we're just using some signaling

579
00:24:47,110 --> 00:24:52,090
mechanism and in our case if you use LDP

580
00:24:49,300 --> 00:24:53,919
you have a local loss of signal we're

581
00:24:52,090 --> 00:24:56,470
gonna translate that into a pseudo high

582
00:24:53,920 --> 00:24:58,890
status message so on the far end we can

583
00:24:56,470 --> 00:25:02,140
then look at that and inject an EIS

584
00:24:58,890 --> 00:25:04,000
downstream signal if you use Ethernet

585
00:25:02,140 --> 00:25:06,520
pseudo wires you could do something

586
00:25:04,000 --> 00:25:08,260
along the same lines by basically

587
00:25:06,520 --> 00:25:10,450
looking at pseudo high status and shut

588
00:25:08,260 --> 00:25:13,810
down the interface I know this is you

589
00:25:10,450 --> 00:25:15,700
know let's say not a well-defined

590
00:25:13,810 --> 00:25:17,560
behavior and you know depending on what

591
00:25:15,700 --> 00:25:18,400
vendor you look at you know you might

592
00:25:17,560 --> 00:25:20,919
have an implemented

593
00:25:18,400 --> 00:25:22,870
not war you just say are gonna go down

594
00:25:20,920 --> 00:25:26,020
the standard route and are gonna use y7

595
00:25:22,870 --> 00:25:29,729
and 31 that protocol has implemented all

596
00:25:26,020 --> 00:25:29,730
of those alarm signals as well

597
00:25:31,800 --> 00:25:36,940
performance monitoring that was honestly

598
00:25:34,840 --> 00:25:39,370
for me something very interesting

599
00:25:36,940 --> 00:25:40,750
because I have been working on on

600
00:25:39,370 --> 00:25:43,389
routers for a long time and carry

601
00:25:40,750 --> 00:25:47,410
Ethernet but this piece are completely

602
00:25:43,390 --> 00:25:49,900
overlooked in the TDM world we can

603
00:25:47,410 --> 00:25:52,840
monitor or give an indication of the

604
00:25:49,900 --> 00:25:57,610
quality of the signal by using parity so

605
00:25:52,840 --> 00:26:00,030
essentially on one end we are looking at

606
00:25:57,610 --> 00:26:02,080
the zeros and ones in the frame and

607
00:26:00,030 --> 00:26:05,770
depending on whether you do even more

608
00:26:02,080 --> 00:26:08,800
odd parity you have a one or more parity

609
00:26:05,770 --> 00:26:10,720
bits and you set it to 1 or 0 so that

610
00:26:08,800 --> 00:26:16,120
overall the number of one's is either

611
00:26:10,720 --> 00:26:18,880
even or odd on the receive side you look

612
00:26:16,120 --> 00:26:20,709
at and by the way once you do that you

613
00:26:18,880 --> 00:26:22,870
put that into a frame that later on the

614
00:26:20,710 --> 00:26:24,880
receive side you can actually compare so

615
00:26:22,870 --> 00:26:27,669
you can compare two copies and whenever

616
00:26:24,880 --> 00:26:28,930
the number of ones of 0 changes this is

617
00:26:27,670 --> 00:26:30,730
a good indication that something

618
00:26:28,930 --> 00:26:33,700
happened to your frame so you have a bit

619
00:26:30,730 --> 00:26:36,910
error and some block is maybe no longer

620
00:26:33,700 --> 00:26:40,530
valid and by doing this constant frame

621
00:26:36,910 --> 00:26:42,940
based frame overhead based over I know

622
00:26:40,530 --> 00:26:45,370
monitoring you can actually detect

623
00:26:42,940 --> 00:26:47,410
something like an error block an error

624
00:26:45,370 --> 00:26:48,909
at second a Seabee layer at second and

625
00:26:47,410 --> 00:26:51,070
if you have more than 10 civilian

626
00:26:48,910 --> 00:26:55,960
circuits you're gonna call the service

627
00:26:51,070 --> 00:26:57,580
to be unavailable and that's the point

628
00:26:55,960 --> 00:27:00,340
that I overlooked over all these years

629
00:26:57,580 --> 00:27:04,540
actually many many years ago I think

630
00:27:00,340 --> 00:27:06,340
nearly a decade ago ITU and MEF define

631
00:27:04,540 --> 00:27:08,260
something very similar and I'm not sure

632
00:27:06,340 --> 00:27:10,110
if that for me at least it was a

633
00:27:08,260 --> 00:27:14,290
surprise so this is a public confession

634
00:27:10,110 --> 00:27:17,050
but you know why 1563 may not be known

635
00:27:14,290 --> 00:27:19,090
to everybody now the wrinkle is he also

636
00:27:17,050 --> 00:27:21,460
it's not that widely implemented but

637
00:27:19,090 --> 00:27:24,669
from a definition perspective if you

638
00:27:21,460 --> 00:27:27,280
have now an Ethernet circuit you cannot

639
00:27:24,670 --> 00:27:29,230
do the bit error to the parity bit right

640
00:27:27,280 --> 00:27:30,610
but what you can do is you can inject

641
00:27:29,230 --> 00:27:32,290
loss measurement package

642
00:27:30,610 --> 00:27:34,449
and you can look at whether you lose

643
00:27:32,290 --> 00:27:37,270
some of those packets and if in a

644
00:27:34,450 --> 00:27:39,940
certain interval the frame loss ratio is

645
00:27:37,270 --> 00:27:42,129
above a threshold you declare something

646
00:27:39,940 --> 00:27:45,760
like a severely arid ethernet interval

647
00:27:42,130 --> 00:27:48,070
or second now why did I use the word

648
00:27:45,760 --> 00:27:50,440
interval because when you really want to

649
00:27:48,070 --> 00:27:52,439
do that on a per second basis you can

650
00:27:50,440 --> 00:27:55,510
imagine that this is quite a bit of load

651
00:27:52,440 --> 00:27:57,250
onto the actual router to do that and I

652
00:27:55,510 --> 00:28:00,940
would say this is that's also the reason

653
00:27:57,250 --> 00:28:03,730
why why 1563 is not widely supported by

654
00:28:00,940 --> 00:28:06,040
a but you know various vendors but it's

655
00:28:03,730 --> 00:28:08,710
defined and you could if you extend

656
00:28:06,040 --> 00:28:11,530
interval you could even do an off box

657
00:28:08,710 --> 00:28:15,720
you know evaluation of this of these

658
00:28:11,530 --> 00:28:15,720
available availability parameters

659
00:28:17,280 --> 00:28:23,950
transparency I think that was you know

660
00:28:21,040 --> 00:28:26,139
an interesting topic over many years and

661
00:28:23,950 --> 00:28:28,780
I have to say because carry Ethernet

662
00:28:26,140 --> 00:28:30,880
started by dumping a bunch of enterprise

663
00:28:28,780 --> 00:28:33,460
switches into the ground you know it was

664
00:28:30,880 --> 00:28:36,760
a bit of a painful start right you know

665
00:28:33,460 --> 00:28:38,620
in the old days if you put a switch into

666
00:28:36,760 --> 00:28:42,040
your network and all of a sudden a BBDO

667
00:28:38,620 --> 00:28:43,570
came came came in came in on a port the

668
00:28:42,040 --> 00:28:45,129
switch said wow this seems to be a

669
00:28:43,570 --> 00:28:47,649
spanning tree packet I need to deal with

670
00:28:45,130 --> 00:28:50,080
it right but it was a spanning tree

671
00:28:47,650 --> 00:28:52,570
packet from your customer right so it

672
00:28:50,080 --> 00:28:54,040
took the vendors including us I would

673
00:28:52,570 --> 00:28:54,340
say a couple of years to figure that one

674
00:28:54,040 --> 00:28:56,830
out

675
00:28:54,340 --> 00:29:00,310
thanks to enemy F and at various

676
00:28:56,830 --> 00:29:01,929
operators I think we slowly we're

677
00:29:00,310 --> 00:29:04,030
actually I think it wasn't that slow but

678
00:29:01,930 --> 00:29:06,160
over time we defined what needs to be

679
00:29:04,030 --> 00:29:09,610
done and the implementations got cleared

680
00:29:06,160 --> 00:29:12,190
and now we have clear guidelines what to

681
00:29:09,610 --> 00:29:14,800
do with those slow protocol and control

682
00:29:12,190 --> 00:29:18,570
control plane packets and we now are

683
00:29:14,800 --> 00:29:20,680
able to either block them tunnel them or

684
00:29:18,570 --> 00:29:25,899
process them depending on what the

685
00:29:20,680 --> 00:29:29,190
service is there's always a but

686
00:29:25,900 --> 00:29:31,630
right you know lately mexic became very

687
00:29:29,190 --> 00:29:33,850
you know very interesting for a lot of

688
00:29:31,630 --> 00:29:36,460
people because it gives you a high

689
00:29:33,850 --> 00:29:37,929
performance option of encrypting your

690
00:29:36,460 --> 00:29:40,810
traffic leaving your box right

691
00:29:37,930 --> 00:29:42,310
unfortunately you're doing a key you

692
00:29:40,810 --> 00:29:44,980
know per definition the key

693
00:29:42,310 --> 00:29:47,679
change is using a well known MAC address

694
00:29:44,980 --> 00:29:51,850
that again you know goes into the pool

695
00:29:47,680 --> 00:29:54,070
of slow protocols and today it is very

696
00:29:51,850 --> 00:29:57,280
likely going to be the case that a

697
00:29:54,070 --> 00:29:59,590
switch that is you know installed in

698
00:29:57,280 --> 00:30:03,070
some provider that may actually drop

699
00:29:59,590 --> 00:30:05,800
that packet the good news I would say

700
00:30:03,070 --> 00:30:07,689
it's just the question of time the

701
00:30:05,800 --> 00:30:09,820
various vendors will actually figure

702
00:30:07,690 --> 00:30:11,980
that one out and will start tunneling

703
00:30:09,820 --> 00:30:13,629
them based on how you you know how you

704
00:30:11,980 --> 00:30:17,530
define your your pseudo wires and

705
00:30:13,630 --> 00:30:19,870
services but also I can talk for our

706
00:30:17,530 --> 00:30:22,660
products we have provided an option to

707
00:30:19,870 --> 00:30:24,550
actually change this MAC address to for

708
00:30:22,660 --> 00:30:26,170
example a broadcast address and then you

709
00:30:24,550 --> 00:30:28,240
can pass it through as well so either

710
00:30:26,170 --> 00:30:35,680
way you know luckily I think this

711
00:30:28,240 --> 00:30:39,760
problem got solved quite soon last but

712
00:30:35,680 --> 00:30:41,620
not least simplicity of operation so

713
00:30:39,760 --> 00:30:43,210
this is really more for those of you

714
00:30:41,620 --> 00:30:44,889
that need to deal with provisioning

715
00:30:43,210 --> 00:30:48,520
tiers ones which I would say is the

716
00:30:44,890 --> 00:30:50,110
minority but think about this even if

717
00:30:48,520 --> 00:30:52,900
you talk about an Ethernet of a SONET

718
00:30:50,110 --> 00:30:54,580
circuit and if you as an ISP for example

719
00:30:52,900 --> 00:30:56,950
ask somebody to provide you an Ethernet

720
00:30:54,580 --> 00:31:00,070
or SONET circuit they need to go through

721
00:30:56,950 --> 00:31:01,930
the TDM network and find time slots and

722
00:31:00,070 --> 00:31:04,360
sometimes they have them and sometimes

723
00:31:01,930 --> 00:31:07,150
they don't have them sometimes they need

724
00:31:04,360 --> 00:31:10,570
to install new ATMs or do whatever is

725
00:31:07,150 --> 00:31:12,520
necessary to accomplish the deal now

726
00:31:10,570 --> 00:31:14,139
once you have found all the capacity you

727
00:31:12,520 --> 00:31:15,610
can provision it and then after that you

728
00:31:14,140 --> 00:31:17,500
basically don't need to deal with it

729
00:31:15,610 --> 00:31:20,949
anymore this is the classic set and

730
00:31:17,500 --> 00:31:22,150
forget but once you're actually done but

731
00:31:20,950 --> 00:31:25,920
until you are done with that you

732
00:31:22,150 --> 00:31:25,920
actually have quite a bit of work to do

733
00:31:28,440 --> 00:31:34,780
by adopting MPLS and pseudo wires you

734
00:31:31,930 --> 00:31:37,000
change the paradigm right not only are

735
00:31:34,780 --> 00:31:40,450
you using cheaper boxes in between that

736
00:31:37,000 --> 00:31:41,860
to the MPLS switching but you also go

737
00:31:40,450 --> 00:31:44,050
directly into a point-to-point

738
00:31:41,860 --> 00:31:46,570
end-to-end provisioning model so you're

739
00:31:44,050 --> 00:31:47,800
going to touch an endpoint on one side

740
00:31:46,570 --> 00:31:49,960
and you cannot touch an endpoint on the

741
00:31:47,800 --> 00:31:52,750
other side your Sdn controller

742
00:31:49,960 --> 00:31:55,510
provisioning system or you just sitting

743
00:31:52,750 --> 00:31:55,900
on a GUI say these two endpoints need to

744
00:31:55,510 --> 00:31:57,879
become

745
00:31:55,900 --> 00:32:01,120
the to each other you establish a pseudo

746
00:31:57,880 --> 00:32:04,720
wire and then underneath that you're

747
00:32:01,120 --> 00:32:07,239
using some kind of MPLS tunnel of your

748
00:32:04,720 --> 00:32:09,340
choice right depending on how you how

749
00:32:07,240 --> 00:32:10,990
your one around your network and gonna

750
00:32:09,340 --> 00:32:14,070
make sure that your traffic is passing

751
00:32:10,990 --> 00:32:14,070
from the left to the right side

752
00:32:15,660 --> 00:32:21,430
so in summary essentially the key

753
00:32:19,660 --> 00:32:24,809
takeaways that I would have for you is

754
00:32:21,430 --> 00:32:27,730
that this is somewhat an old topic right

755
00:32:24,809 --> 00:32:28,470
but I think thing things have changed

756
00:32:27,730 --> 00:32:31,030
right

757
00:32:28,470 --> 00:32:33,429
MPLS routers or switches whatever you

758
00:32:31,030 --> 00:32:36,730
want to call them are getting bigger and

759
00:32:33,429 --> 00:32:38,740
bigger more cost-effective and really

760
00:32:36,730 --> 00:32:41,530
there is no reason why they cannot

761
00:32:38,740 --> 00:32:45,640
provide the same same level of service

762
00:32:41,530 --> 00:32:48,940
agreements as they do on SONET early or

763
00:32:45,640 --> 00:32:50,200
OTN infrastructures and I think as we

764
00:32:48,940 --> 00:32:52,330
have seen also in the previous

765
00:32:50,200 --> 00:32:55,510
presentation probably you guys seen in

766
00:32:52,330 --> 00:32:57,909
tomorrow's presentation optics and the

767
00:32:55,510 --> 00:33:01,090
speed of MPLS interfaces is increasing

768
00:32:57,910 --> 00:33:03,130
right 400 gig MPLS interfaces are not

769
00:33:01,090 --> 00:33:05,230
far away they are really around the

770
00:33:03,130 --> 00:33:09,640
corner right and you will get higher

771
00:33:05,230 --> 00:33:11,820
interfaces over time so really knowing

772
00:33:09,640 --> 00:33:15,280
that the routers are getting bigger and

773
00:33:11,820 --> 00:33:16,659
in that way also cheaper do you really

774
00:33:15,280 --> 00:33:19,590
want to continue putting your hundred

775
00:33:16,660 --> 00:33:22,929
gig pipes into an OTA and switched

776
00:33:19,590 --> 00:33:26,230
infrastructure or is it maybe time to

777
00:33:22,929 --> 00:33:27,929
rethink and consider that MPLS is going

778
00:33:26,230 --> 00:33:30,309
to become the new electrical

779
00:33:27,929 --> 00:33:32,860
multiplexing / switching layer right

780
00:33:30,309 --> 00:33:35,290
whatever you want to call it and by

781
00:33:32,860 --> 00:33:37,570
being MPLS and the native transport for

782
00:33:35,290 --> 00:33:39,520
any type of other services you have the

783
00:33:37,570 --> 00:33:41,770
choice to run your network very

784
00:33:39,520 --> 00:33:43,960
stringent and then really you use it as

785
00:33:41,770 --> 00:33:47,200
a multiplexing layer right you don't

786
00:33:43,960 --> 00:33:49,630
over book you hard you know you you do

787
00:33:47,200 --> 00:33:51,340
have some hard bandwidth guarantees or

788
00:33:49,630 --> 00:33:53,020
you run your network for some service is

789
00:33:51,340 --> 00:33:56,110
very flexible and potentially

790
00:33:53,020 --> 00:33:59,860
oversubscribed and you can do it on a on

791
00:33:56,110 --> 00:34:02,129
a per LSP or poor service basis with

792
00:33:59,860 --> 00:34:03,879
this arm at the end of my presentation

793
00:34:02,130 --> 00:34:07,120
appreciate your time

794
00:34:03,880 --> 00:34:09,490
I actually start stopped a little

795
00:34:07,120 --> 00:34:19,719
earlier so if somebody has questions we

796
00:34:09,489 --> 00:34:22,118
I'm willing to answer them and Joe s

797
00:34:19,719 --> 00:34:23,980
with s communication one quick question

798
00:34:22,119 --> 00:34:26,590
on this there's a lot of stuff inside

799
00:34:23,980 --> 00:34:28,449
the SONET headers and u s-- mentioned a

800
00:34:26,590 --> 00:34:30,790
tunnel where's the tunnel in the system

801
00:34:28,449 --> 00:34:33,480
is it a separate channel or what or is

802
00:34:30,790 --> 00:34:37,719
it in the network management system

803
00:34:33,480 --> 00:34:40,270
you mean the LSP tunnel or no not the

804
00:34:37,719 --> 00:34:41,529
LSP tunnel i've got like the d4 headers

805
00:34:40,270 --> 00:34:43,570
a lot of people put a lot of stuff

806
00:34:41,530 --> 00:34:45,250
inside SONET headers and uh that's

807
00:34:43,570 --> 00:34:48,340
presumably that's all gonna go away and

808
00:34:45,250 --> 00:34:49,869
not be part of my LSP tunnel yeah so

809
00:34:48,340 --> 00:34:52,629
that's a very good question so that

810
00:34:49,869 --> 00:34:55,149
depends on so in you know you're talking

811
00:34:52,629 --> 00:34:59,020
about emulating for example so on so on

812
00:34:55,149 --> 00:35:01,210
a tour des ones right so if you if you

813
00:34:59,020 --> 00:35:03,820
look at PD H which is T as one and tier

814
00:35:01,210 --> 00:35:07,180
3 right what predominantly is being used

815
00:35:03,820 --> 00:35:09,220
you take the full frame and just slap on

816
00:35:07,180 --> 00:35:12,250
a label and send it over the other side

817
00:35:09,220 --> 00:35:15,069
right so you include the SONET header

818
00:35:12,250 --> 00:35:17,080
the whole full frame in there yes so

819
00:35:15,070 --> 00:35:19,150
this is the ds1 on the ds3 case right

820
00:35:17,080 --> 00:35:22,900
now if we talk about Sona interfaces

821
00:35:19,150 --> 00:35:25,590
being Oct 12 48 they are we're actually

822
00:35:22,900 --> 00:35:27,700
not taking the full the full frame

823
00:35:25,590 --> 00:35:29,859
because that actually would be very

824
00:35:27,700 --> 00:35:32,560
let's say pain within the patient and

825
00:35:29,859 --> 00:35:34,450
also it wouldn't allow you to because

826
00:35:32,560 --> 00:35:36,430
normally in an Oct 12 you have some time

827
00:35:34,450 --> 00:35:38,490
slots go here sometimes let's go here

828
00:35:36,430 --> 00:35:41,740
right so what actually is being done

829
00:35:38,490 --> 00:35:44,169
which has been standardized by the

830
00:35:41,740 --> 00:35:46,359
standard called CEP if you look at the

831
00:35:44,170 --> 00:35:49,330
path right so you get rid of the first

832
00:35:46,359 --> 00:35:52,600
two to two layers and then use the the

833
00:35:49,330 --> 00:35:55,150
SONET path and you encapsulate that so

834
00:35:52,600 --> 00:35:57,700
you're gonna lose your let's say L DCC

835
00:35:55,150 --> 00:36:00,100
and SDCC kind of stuff right and you

836
00:35:57,700 --> 00:36:00,879
start acting like a real multiplex or

837
00:36:00,100 --> 00:36:03,750
cross-connect

838
00:36:00,880 --> 00:36:03,750
thank you

839
00:36:08,670 --> 00:36:14,100
Steve our Christa networks I'm wondering

840
00:36:11,280 --> 00:36:15,450
if you're suggesting as a complement to

841
00:36:14,100 --> 00:36:17,850
this that there be a change in the

842
00:36:15,450 --> 00:36:21,149
service level objectives for circuit

843
00:36:17,850 --> 00:36:24,569
services a number of the packet

844
00:36:21,150 --> 00:36:26,550
forwarding engines on the market from a

845
00:36:24,570 --> 00:36:30,690
variety of folks are not capable of

846
00:36:26,550 --> 00:36:32,910
actually reaching the kind of Leoline

847
00:36:30,690 --> 00:36:34,710
rate requirements associated with that

848
00:36:32,910 --> 00:36:36,960
which would lead to either like

849
00:36:34,710 --> 00:36:39,330
sub-optimally packin circuit services

850
00:36:36,960 --> 00:36:40,770
which are being emulated here which has

851
00:36:39,330 --> 00:36:42,990
a decided you know negative economic

852
00:36:40,770 --> 00:36:45,600
impact or are you suggesting maybe

853
00:36:42,990 --> 00:36:48,750
there's a potential for an alternate

854
00:36:45,600 --> 00:36:51,630
tier circuit a circuit delivery from a

855
00:36:48,750 --> 00:36:53,040
service level perspective yeah yeah I

856
00:36:51,630 --> 00:36:55,770
think that's that's pretty much what

857
00:36:53,040 --> 00:36:57,420
what I'm hinting at right mind today I

858
00:36:55,770 --> 00:37:00,360
think we're living in a world where

859
00:36:57,420 --> 00:37:02,160
people say a circuit is a circuit a wave

860
00:37:00,360 --> 00:37:05,810
is a wave nobody can take it away from

861
00:37:02,160 --> 00:37:08,220
me right but if you think about it that

862
00:37:05,810 --> 00:37:10,920
economically this you know it's probably

863
00:37:08,220 --> 00:37:13,259
not the most efficient way I think

864
00:37:10,920 --> 00:37:15,540
there's a valid compromise where

865
00:37:13,260 --> 00:37:18,090
basically you could say I trust my

866
00:37:15,540 --> 00:37:20,520
operator that is actually designing the

867
00:37:18,090 --> 00:37:24,120
network so that actually I get what what

868
00:37:20,520 --> 00:37:26,520
I expect right and I think this is you

869
00:37:24,120 --> 00:37:29,279
know a fair assumption that that has two

870
00:37:26,520 --> 00:37:31,080
benefits right the operator could start

871
00:37:29,280 --> 00:37:34,230
leveraging technology that's better for

872
00:37:31,080 --> 00:37:36,240
him and it's also an option for the

873
00:37:34,230 --> 00:37:38,970
customer to say well maybe I gonna get

874
00:37:36,240 --> 00:37:42,209
you know more capacity for for lower

875
00:37:38,970 --> 00:37:44,279
price now from a TDM emulation

876
00:37:42,210 --> 00:37:46,350
perspective I have to say that the

877
00:37:44,280 --> 00:37:48,120
actual service level agreements and the

878
00:37:46,350 --> 00:37:50,069
performance will be it completely

879
00:37:48,120 --> 00:37:53,609
identical because as you emulate the

880
00:37:50,070 --> 00:37:55,110
frames you you even have things like

881
00:37:53,610 --> 00:37:58,040
digital buffer management who are

882
00:37:55,110 --> 00:38:01,230
basically you don't see any difference

883
00:37:58,040 --> 00:38:04,170
assuming that the network is built in a

884
00:38:01,230 --> 00:38:06,890
reliable way but other than that it will

885
00:38:04,170 --> 00:38:06,890
be exactly the same

886
00:38:14,849 --> 00:38:20,349
spend karevik with apple

887
00:38:17,560 --> 00:38:23,828
what about clocking when you go to an

888
00:38:20,349 --> 00:38:26,849
MPLS mall or sister legacy not that I

889
00:38:23,829 --> 00:38:29,530
needed but I'm just curious

890
00:38:26,849 --> 00:38:32,950
clocking actually the problem has been

891
00:38:29,530 --> 00:38:35,920
solved luckily many years ago you now

892
00:38:32,950 --> 00:38:37,810
can build an MPLS switch using

893
00:38:35,920 --> 00:38:40,570
synchronous Ethernet interfaces so

894
00:38:37,810 --> 00:38:43,660
essentially you can use the the physical

895
00:38:40,570 --> 00:38:46,359
media between two routers to transfer a

896
00:38:43,660 --> 00:38:48,790
clock so essentially on a hop by hop

897
00:38:46,359 --> 00:38:50,348
basis you do exactly the same as you

898
00:38:48,790 --> 00:38:52,960
would do in the SONET infrastructure

899
00:38:50,349 --> 00:38:55,780
that's one approach and the second

900
00:38:52,960 --> 00:38:57,599
approach which would apply for example

901
00:38:55,780 --> 00:39:00,369
in the use case that I showed where

902
00:38:57,599 --> 00:39:02,740
Verizon is using circuit emulation over

903
00:39:00,369 --> 00:39:06,520
the XS there you need to rely on things

904
00:39:02,740 --> 00:39:09,339
like I Triple E 1588 or PTP to derive

905
00:39:06,520 --> 00:39:12,609
the clock and and that together with

906
00:39:09,339 --> 00:39:15,940
some pseudo I pasted in a traffic rate

907
00:39:12,609 --> 00:39:17,890
recovery also gives you good enough

908
00:39:15,940 --> 00:39:20,060
clock recovery for that so there are two

909
00:39:17,890 --> 00:39:23,259
options for that

910
00:39:20,060 --> 00:39:23,259
[Music]

911
00:39:30,190 --> 00:39:35,670
okay Arthur thank you very much

912
00:39:41,090 --> 00:39:43,150
you

