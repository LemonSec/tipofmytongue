1
00:00:11,610 --> 00:00:17,919
hello my name is my caution of and today

2
00:00:14,980 --> 00:00:19,900
we are going to talk about telemetry its

3
00:00:17,920 --> 00:00:22,930
existent we market for three years and

4
00:00:19,900 --> 00:00:24,720
we will start with brief introduction

5
00:00:22,930 --> 00:00:27,579
you'll take a look at the components

6
00:00:24,720 --> 00:00:29,979
what's current state is it right now and

7
00:00:27,579 --> 00:00:33,360
as a final thoughts just to have a whole

8
00:00:29,980 --> 00:00:36,960
picture about telemetry right now

9
00:00:33,360 --> 00:00:39,489
telemetry is an automated process for

10
00:00:36,960 --> 00:00:42,370
gathering data from remote or

11
00:00:39,489 --> 00:00:45,879
inaccessible points in transmitting this

12
00:00:42,370 --> 00:00:48,309
data to monitor for to receiving

13
00:00:45,880 --> 00:00:51,070
equipment for monitoring or for some

14
00:00:48,310 --> 00:00:56,500
analytics in case of streaming telemetry

15
00:00:51,070 --> 00:01:02,019
we want few few quantities of it and it

16
00:00:56,500 --> 00:01:04,960
should be fast easy reliable data for it

17
00:01:02,020 --> 00:01:08,049
should be useful deterministic because

18
00:01:04,959 --> 00:01:11,380
we want to know what and where to expect

19
00:01:08,049 --> 00:01:14,409
and as much as possible data

20
00:01:11,380 --> 00:01:16,509
so what's we on water which we have when

21
00:01:14,409 --> 00:01:22,510
we design streaming telemetry for our

22
00:01:16,510 --> 00:01:24,850
routers if we start to compare streaming

23
00:01:22,510 --> 00:01:27,940
telemetry choice and beam we can see on

24
00:01:24,850 --> 00:01:30,850
the top left graph which beacons stream

25
00:01:27,940 --> 00:01:32,560
much more counters and we can do it much

26
00:01:30,850 --> 00:01:35,440
faster with streaming telemetry because

27
00:01:32,560 --> 00:01:39,520
this concept was designed from this in

28
00:01:35,440 --> 00:01:41,920
the system and in terms of CPU load we

29
00:01:39,520 --> 00:01:44,530
edge receivers and the three receivers

30
00:01:41,920 --> 00:01:48,040
we have 8 percent of CPU consumption

31
00:01:44,530 --> 00:01:52,140
compared to 20 percent CPU consumption

32
00:01:48,040 --> 00:01:55,119
in SNMP so we can easily see what

33
00:01:52,140 --> 00:01:58,570
telemetry bringing us benefit in job in

34
00:01:55,119 --> 00:02:01,330
terms of CPU load and of course we can

35
00:01:58,570 --> 00:02:04,149
stream much moderator and we can do it

36
00:02:01,330 --> 00:02:07,900
faster so time to color to collect our

37
00:02:04,150 --> 00:02:11,250
tones of counters we have streaming

38
00:02:07,900 --> 00:02:14,680
telemetry / SNMP is just like a

39
00:02:11,250 --> 00:02:17,560
wonderful advantage so key takeaway from

40
00:02:14,680 --> 00:02:21,849
this moment is we can get our collection

41
00:02:17,560 --> 00:02:24,060
faster we reduce load on CPU and we can

42
00:02:21,849 --> 00:02:24,060
do

43
00:02:24,780 --> 00:02:30,790
telemetry existed on the market for

44
00:02:27,040 --> 00:02:34,060
three years and in my opinion it's going

45
00:02:30,790 --> 00:02:37,329
to early majority and early majority is

46
00:02:34,060 --> 00:02:40,050
pretty pretty good to be or in majority

47
00:02:37,330 --> 00:02:43,810
as well here I will need a small help

48
00:02:40,050 --> 00:02:47,440
from auditorium do consider are you

49
00:02:43,810 --> 00:02:50,170
using Excel Emma tree in sandbox or some

50
00:02:47,440 --> 00:02:52,359
lab environments or just like considered

51
00:02:50,170 --> 00:02:53,850
to using if so please rise a friend to

52
00:02:52,360 --> 00:02:58,570
help in overview

53
00:02:53,850 --> 00:03:00,460
okay so we have some attendants do use

54
00:02:58,570 --> 00:03:07,690
telemetry in production in your network

55
00:03:00,460 --> 00:03:09,910
okay so something in early adopters or

56
00:03:07,690 --> 00:03:12,840
early majority probably we are moving

57
00:03:09,910 --> 00:03:15,070
into early majority piece over here and

58
00:03:12,840 --> 00:03:17,350
it's good to be in majority we don't

59
00:03:15,070 --> 00:03:23,230
want to be in laggards but we slowly

60
00:03:17,350 --> 00:03:26,560
start to adopt this technology when it

61
00:03:23,230 --> 00:03:28,840
was designed initially we first and my

62
00:03:26,560 --> 00:03:31,480
main goal was to avoid ascendant be

63
00:03:28,840 --> 00:03:33,820
because of clear disadvantages of

64
00:03:31,480 --> 00:03:36,340
technology and how long it exists on the

65
00:03:33,820 --> 00:03:39,459
market first and initial focus for

66
00:03:36,340 --> 00:03:43,240
replacement when you can add you can

67
00:03:39,460 --> 00:03:45,700
remove we see like COI execution on my

68
00:03:43,240 --> 00:03:47,800
device like show comments and you want

69
00:03:45,700 --> 00:03:50,560
to get this data in automated and

70
00:03:47,800 --> 00:03:55,090
programmatic way and doesn't matter if

71
00:03:50,560 --> 00:03:56,890
it's like control point or j2 point this

72
00:03:55,090 --> 00:03:59,530
is the first aspects which we had in

73
00:03:56,890 --> 00:04:02,440
mind once you start to advance and bring

74
00:03:59,530 --> 00:04:05,020
more features only a telemetry side you

75
00:04:02,440 --> 00:04:07,720
can think about not only guidance based

76
00:04:05,020 --> 00:04:10,630
even so extreme encounters out of device

77
00:04:07,720 --> 00:04:14,170
but it's something on top of it like his

78
00:04:10,630 --> 00:04:18,190
log messages which is even based

79
00:04:14,170 --> 00:04:20,349
geometry or have more Hardware data and

80
00:04:18,190 --> 00:04:23,590
stream your NP you starts from the

81
00:04:20,350 --> 00:04:26,890
device and of course we are not limited

82
00:04:23,590 --> 00:04:30,039
in future implementations or to do

83
00:04:26,890 --> 00:04:34,539
something else like in been telemetry s

84
00:04:30,040 --> 00:04:36,340
flow net flow or it's some support for

85
00:04:34,540 --> 00:04:40,090
open beam P so

86
00:04:36,340 --> 00:04:42,799
this is like steel considerations and

87
00:04:40,090 --> 00:04:47,929
where is the room for improvement for

88
00:04:42,800 --> 00:04:52,790
telemetry let's proceed with components

89
00:04:47,930 --> 00:04:55,310
and once we talk about models we have

90
00:04:52,790 --> 00:04:58,430
two approaches over here you can select

91
00:04:55,310 --> 00:05:01,250
native models and this would be your

92
00:04:58,430 --> 00:05:03,590
superset of models it's like two

93
00:05:01,250 --> 00:05:06,890
hundreds in one package you don't have

94
00:05:03,590 --> 00:05:10,010
it you have everything in it perfect for

95
00:05:06,890 --> 00:05:13,700
each use case but it maybe not but

96
00:05:10,010 --> 00:05:16,190
portable for your transportation or you

97
00:05:13,700 --> 00:05:18,440
don't always want to to bring it with

98
00:05:16,190 --> 00:05:20,990
you it's not very versatile because if

99
00:05:18,440 --> 00:05:24,680
you go to the different vendors you have

100
00:05:20,990 --> 00:05:26,750
different modules and with such variety

101
00:05:24,680 --> 00:05:29,600
of different models you need to do some

102
00:05:26,750 --> 00:05:31,310
work on top of it it can be just

103
00:05:29,600 --> 00:05:34,840
normalization or you need to rank

104
00:05:31,310 --> 00:05:38,350
post-processing for data so you name it

105
00:05:34,840 --> 00:05:41,890
if we took open config models its

106
00:05:38,350 --> 00:05:47,320
standard for acro across via vendors but

107
00:05:41,890 --> 00:05:49,310
we coverage much smaller and it's

108
00:05:47,320 --> 00:05:51,469
implicit representation it's nice

109
00:05:49,310 --> 00:05:54,020
because it's on only a small set of

110
00:05:51,470 --> 00:05:57,380
screwdrivers but probably it will solve

111
00:05:54,020 --> 00:06:00,859
most of your cases and if it doesn't do

112
00:05:57,380 --> 00:06:05,300
it we just go for native models and wet

113
00:06:00,860 --> 00:06:07,930
approach is perfectly fine but once you

114
00:06:05,300 --> 00:06:11,360
start to consider open config models

115
00:06:07,930 --> 00:06:15,110
here you need to be very precise in what

116
00:06:11,360 --> 00:06:17,240
exactly you stream out of device a bunch

117
00:06:15,110 --> 00:06:20,840
of young models published on github it's

118
00:06:17,240 --> 00:06:24,110
a it's available and you go through this

119
00:06:20,840 --> 00:06:26,330
model and identify revision name across

120
00:06:24,110 --> 00:06:29,180
different vendors you may have different

121
00:06:26,330 --> 00:06:31,849
support for revisions plus you need to

122
00:06:29,180 --> 00:06:35,180
keep in mind revision for your operation

123
00:06:31,850 --> 00:06:39,160
system version because different

124
00:06:35,180 --> 00:06:41,930
revisions small variances in nuances in

125
00:06:39,160 --> 00:06:44,210
implementation for open config module

126
00:06:41,930 --> 00:06:46,370
you may have some difference so you need

127
00:06:44,210 --> 00:06:48,739
to make sure that you check everything

128
00:06:46,370 --> 00:06:51,979
before you start to build some

129
00:06:48,740 --> 00:06:54,889
any checks on top of it revisions is not

130
00:06:51,979 --> 00:06:57,770
the only one aspect you also need to

131
00:06:54,889 --> 00:07:01,039
make sure to be sure about deviations

132
00:06:57,770 --> 00:07:03,889
because different deviations may exist

133
00:07:01,039 --> 00:07:07,400
for different vendors and you you you

134
00:07:03,889 --> 00:07:09,770
better to check on on a public source

135
00:07:07,400 --> 00:07:12,638
how its implemented for this specific

136
00:07:09,770 --> 00:07:16,008
deviation so yes it's open config model

137
00:07:12,639 --> 00:07:18,650
it's perfectly much for I don't know

138
00:07:16,009 --> 00:07:21,590
ninety percent of the same items or

139
00:07:18,650 --> 00:07:23,780
maybe maybe more but some something's

140
00:07:21,590 --> 00:07:29,359
still may be different so we need to

141
00:07:23,780 --> 00:07:33,559
make sure of it a lot of activity around

142
00:07:29,360 --> 00:07:36,220
IETF standards and it's good to have

143
00:07:33,560 --> 00:07:39,590
standard body here in this scenario and

144
00:07:36,220 --> 00:07:42,229
we are looking for what's going on

145
00:07:39,590 --> 00:07:46,729
around and I keep a keep this in mind

146
00:07:42,229 --> 00:07:51,440
for for future deployments and future

147
00:07:46,729 --> 00:07:54,070
enhancements we discussed models we have

148
00:07:51,440 --> 00:07:57,830
open config models or which is yours

149
00:07:54,070 --> 00:08:01,190
like limited set of screwdrivers or on

150
00:07:57,830 --> 00:08:05,120
native models with 200 items in released

151
00:08:01,190 --> 00:08:09,919
and after we going for encoding you have

152
00:08:05,120 --> 00:08:13,610
three times of encoding first one is GPB

153
00:08:09,919 --> 00:08:16,460
or Google protobuf we also called code

154
00:08:13,610 --> 00:08:19,849
compact GPB and we're going to touch

155
00:08:16,460 --> 00:08:20,989
base on wed next one is key value GPB or

156
00:08:19,849 --> 00:08:25,310
self-describing

157
00:08:20,990 --> 00:08:28,669
GPB which still Google protolith and the

158
00:08:25,310 --> 00:08:32,089
third is Jason I don't think it doesn't

159
00:08:28,669 --> 00:08:35,149
need explanation over here and it's very

160
00:08:32,089 --> 00:08:40,070
variable well-known and very human

161
00:08:35,149 --> 00:08:46,130
friendly transport free methods here Jer

162
00:08:40,070 --> 00:08:49,520
PC now it's Google RPC and when we have

163
00:08:46,130 --> 00:08:52,930
just tragedy traditional our methods for

164
00:08:49,520 --> 00:08:52,930
connections TCP and UDP

165
00:08:54,020 --> 00:09:00,060
if we talk about your PC

166
00:08:56,940 --> 00:09:02,940
it comes with overhead and you can hear

167
00:09:00,060 --> 00:09:05,010
and connection before your data got

168
00:09:02,940 --> 00:09:08,430
going out of video I device its

169
00:09:05,010 --> 00:09:12,420
negotiated and you can see in a bar

170
00:09:08,430 --> 00:09:14,430
shark but HTTP magic numbers send some

171
00:09:12,420 --> 00:09:17,189
kind of some details and settings sent

172
00:09:14,430 --> 00:09:21,989
from the router also negotiation going

173
00:09:17,190 --> 00:09:24,720
for window size from both sides from

174
00:09:21,990 --> 00:09:27,420
both sides and only after settings

175
00:09:24,720 --> 00:09:31,800
confirmation you have to stream your

176
00:09:27,420 --> 00:09:34,589
data a little bit overhead but it comes

177
00:09:31,800 --> 00:09:38,160
with an advantage because speed control

178
00:09:34,590 --> 00:09:41,220
available from the collector side and it

179
00:09:38,160 --> 00:09:43,560
can be a window windows window could be

180
00:09:41,220 --> 00:09:46,350
adjusted based on a collector decision

181
00:09:43,560 --> 00:09:48,900
and what's good GRP Shiism like modern

182
00:09:46,350 --> 00:09:54,330
protocol and we saw more and more

183
00:09:48,900 --> 00:09:57,630
utilization in network world for it tcp

184
00:09:54,330 --> 00:10:02,010
and UDP are very well-known in industry

185
00:09:57,630 --> 00:10:05,790
it exists for for a long time and when

186
00:10:02,010 --> 00:10:09,870
you start to consume your data in TCP or

187
00:10:05,790 --> 00:10:12,660
UDP you may be aware you should be aware

188
00:10:09,870 --> 00:10:15,450
of a header and once you start to build

189
00:10:12,660 --> 00:10:18,650
your own collector just keeps header and

190
00:10:15,450 --> 00:10:21,870
mines which are before processing can

191
00:10:18,650 --> 00:10:23,550
mediate itself or the payload you need

192
00:10:21,870 --> 00:10:30,050
to strip the header for further

193
00:10:23,550 --> 00:10:34,140
processing another aspect of

194
00:10:30,050 --> 00:10:37,410
transmitting data is security which RPC

195
00:10:34,140 --> 00:10:38,990
deal in mode when when you connect when

196
00:10:37,410 --> 00:10:42,900
you initiate connection from the

197
00:10:38,990 --> 00:10:43,410
collector side to the router to options

198
00:10:42,900 --> 00:10:47,790
available

199
00:10:43,410 --> 00:10:50,250
no tos or a Cheers in case of sandbox

200
00:10:47,790 --> 00:10:52,380
environment or just lab trials you don't

201
00:10:50,250 --> 00:10:54,420
want to generate certificates and just

202
00:10:52,380 --> 00:10:57,930
want to check the capabilities what

203
00:10:54,420 --> 00:11:01,949
exactly exists it's good to use no gos

204
00:10:57,930 --> 00:11:04,739
option and we disadvantage offered all

205
00:11:01,950 --> 00:11:06,960
your sensitive data is centered in the

206
00:11:04,740 --> 00:11:09,330
plaintext of course

207
00:11:06,960 --> 00:11:12,540
this solution should shouldn't be

208
00:11:09,330 --> 00:11:15,170
applicable for your production

209
00:11:12,540 --> 00:11:19,199
deployments or real-life scenarios and

210
00:11:15,170 --> 00:11:22,380
gos should be revised so men in the

211
00:11:19,200 --> 00:11:28,020
middle will be not able to decode your

212
00:11:22,380 --> 00:11:33,830
message is it enough to claim but we are

213
00:11:28,020 --> 00:11:37,949
PC supported for your transport protocol

214
00:11:33,830 --> 00:11:40,620
well some nuances here exist as well if

215
00:11:37,950 --> 00:11:43,279
we talk about different implementation

216
00:11:40,620 --> 00:11:47,130
from different vendors you may see what

217
00:11:43,279 --> 00:11:49,820
your are PCs described but methods

218
00:11:47,130 --> 00:11:52,350
inside have different signatures and

219
00:11:49,820 --> 00:11:56,730
once you start to build your collector

220
00:11:52,350 --> 00:11:59,370
or you want to have more in-depth

221
00:11:56,730 --> 00:12:03,300
knowledge of what's inside and how its

222
00:11:59,370 --> 00:12:05,190
organized you need to check how how its

223
00:12:03,300 --> 00:12:08,399
implemented internally because this is

224
00:12:05,190 --> 00:12:12,209
crucial different type of messages can

225
00:12:08,399 --> 00:12:15,959
be sent and can be sent values the data

226
00:12:12,209 --> 00:12:19,050
structures and overall it's good to be

227
00:12:15,959 --> 00:12:20,819
aware of implementation so you may heard

228
00:12:19,050 --> 00:12:26,400
the claim but JRPG is supported but

229
00:12:20,820 --> 00:12:28,709
again where as soon you answers we touch

230
00:12:26,400 --> 00:12:31,740
based on the transport and let's press

231
00:12:28,709 --> 00:12:34,589
golf room and coatings the first

232
00:12:31,740 --> 00:12:38,459
encoding is most efficient one it's

233
00:12:34,589 --> 00:12:41,279
Google protocol compact everything in

234
00:12:38,459 --> 00:12:45,689
vision coding is binary and that's why

235
00:12:41,279 --> 00:12:49,980
it's extremely efficient but for each

236
00:12:45,690 --> 00:12:53,400
product per each model you need a

237
00:12:49,980 --> 00:12:56,180
protocol and miss tooling is required

238
00:12:53,400 --> 00:12:59,370
required in order to decode your message

239
00:12:56,180 --> 00:13:02,060
also proto files may be different for

240
00:12:59,370 --> 00:13:05,670
different versions of operation system

241
00:13:02,060 --> 00:13:11,479
so you may consider to use key value on

242
00:13:05,670 --> 00:13:15,510
GPB also describing three string

243
00:13:11,480 --> 00:13:19,140
represents your key and your value value

244
00:13:15,510 --> 00:13:20,310
still binary it's easier to consume you

245
00:13:19,140 --> 00:13:24,569
have medium wire

246
00:13:20,310 --> 00:13:26,910
efficiency with key value GPB and you

247
00:13:24,569 --> 00:13:29,579
need only one single profile to decode

248
00:13:26,910 --> 00:13:31,949
your message and this is where

249
00:13:29,579 --> 00:13:34,469
compromise compromise which used across

250
00:13:31,949 --> 00:13:36,120
many many customers because it's easier

251
00:13:34,470 --> 00:13:39,540
to start with key value just one

252
00:13:36,120 --> 00:13:42,089
protocol you do not have much of the

253
00:13:39,540 --> 00:13:43,410
data yet collected from telemetry and

254
00:13:42,089 --> 00:13:47,699
you are good to go

255
00:13:43,410 --> 00:13:49,829
if q.value GPB maybe you don't care

256
00:13:47,699 --> 00:13:51,540
about google protolith you just don't

257
00:13:49,829 --> 00:13:56,489
want to invest time in learning how it

258
00:13:51,540 --> 00:14:00,290
works internally and what's it feels

259
00:13:56,490 --> 00:14:04,230
like to deal with GPB go ahead use JSON

260
00:14:00,290 --> 00:14:06,569
everything is string in this case keys

261
00:14:04,230 --> 00:14:09,870
and values you have been lowest by

262
00:14:06,569 --> 00:14:11,939
efficiency in terms of JSON but it

263
00:14:09,870 --> 00:14:14,009
brings you benefits in terms of concept

264
00:14:11,939 --> 00:14:16,649
consumption you can stream your data

265
00:14:14,009 --> 00:14:19,350
directly to Kafka or to any other

266
00:14:16,649 --> 00:14:22,139
receiver it's very human friendly its

267
00:14:19,350 --> 00:14:26,579
readable you can validate read directly

268
00:14:22,139 --> 00:14:28,920
on Python and this is a good start for

269
00:14:26,579 --> 00:14:31,519
some of you I could be beginning trials

270
00:14:28,920 --> 00:14:31,519
with telemetry

271
00:14:32,750 --> 00:14:39,720
for example devices we don't care which

272
00:14:37,110 --> 00:14:42,360
encoding you select think about

273
00:14:39,720 --> 00:14:44,459
predefined seats in the Train it's not

274
00:14:42,360 --> 00:14:46,889
first-come first-serve basis your seat

275
00:14:44,459 --> 00:14:49,920
already like reserved to you and once

276
00:14:46,889 --> 00:14:55,199
the module is processing with encoding

277
00:14:49,920 --> 00:14:58,199
we know all the types of for each entry

278
00:14:55,199 --> 00:15:03,029
for each field so encoding is fast for

279
00:14:58,199 --> 00:15:05,490
any any type of about available options

280
00:15:03,029 --> 00:15:08,850
so you just don't care about it you care

281
00:15:05,490 --> 00:15:12,720
about very efficiency and but once we

282
00:15:08,850 --> 00:15:15,929
proceed with numbers we same sentiment

283
00:15:12,720 --> 00:15:22,980
and message we've GPB it would be 300 by

284
00:15:15,929 --> 00:15:25,399
its key value GPB 1100 and JSON 1300 key

285
00:15:22,980 --> 00:15:30,290
volume as I mentioned could be a good

286
00:15:25,399 --> 00:15:30,290
start for you to explore telemetry

287
00:15:30,980 --> 00:15:37,850
but what do people really want in terms

288
00:15:34,890 --> 00:15:42,560
of transports your PC is most advanced

289
00:15:37,850 --> 00:15:46,530
on a second place we'll go TCP and let's

290
00:15:42,560 --> 00:15:48,180
bring this reliability and probably if

291
00:15:46,530 --> 00:15:51,689
you have if you're running on some

292
00:15:48,180 --> 00:15:54,030
legacy systems you have only UDP option

293
00:15:51,690 --> 00:15:56,660
give it UDP you may miss some

294
00:15:54,030 --> 00:15:59,400
collections because of you like protocol

295
00:15:56,660 --> 00:16:02,520
instability and if you have some

296
00:15:59,400 --> 00:16:04,439
problems in a network UDP maybe not your

297
00:16:02,520 --> 00:16:08,400
best option so if you have this

298
00:16:04,440 --> 00:16:09,170
capability to to stream over your PC go

299
00:16:08,400 --> 00:16:13,829
for it

300
00:16:09,170 --> 00:16:16,979
and codings key-value GPB is your first

301
00:16:13,830 --> 00:16:20,880
chat single protocol known and no need

302
00:16:16,980 --> 00:16:23,970
forces for a bunch of proto files like

303
00:16:20,880 --> 00:16:27,030
in compact GPB and of course no one

304
00:16:23,970 --> 00:16:32,430
limits you to use JSON but expect to

305
00:16:27,030 --> 00:16:34,949
have less very efficiency and one we

306
00:16:32,430 --> 00:16:37,380
pray once we proceed with models open

307
00:16:34,950 --> 00:16:40,650
config of course first one because of

308
00:16:37,380 --> 00:16:43,650
the higher adoption native models have

309
00:16:40,650 --> 00:16:47,310
super sets of features but we do not

310
00:16:43,650 --> 00:16:52,620
forget about ITF and people still still

311
00:16:47,310 --> 00:16:56,369
see interest in in it you can start

312
00:16:52,620 --> 00:16:59,820
Explorer telemetry today it's already

313
00:16:56,370 --> 00:17:03,360
available on a box it's exist it's

314
00:16:59,820 --> 00:17:06,240
proven and some collection stock be

315
00:17:03,360 --> 00:17:09,209
based on open source tools available for

316
00:17:06,240 --> 00:17:12,170
you cisco released by wayne which is

317
00:17:09,209 --> 00:17:16,200
open source collector and its first

318
00:17:12,170 --> 00:17:19,140
first stop for your data once your data

319
00:17:16,200 --> 00:17:21,990
in PI point you can stream it to through

320
00:17:19,140 --> 00:17:25,830
in iam source it could be influx data

321
00:17:21,990 --> 00:17:28,470
which is time series database perfectly

322
00:17:25,829 --> 00:17:32,429
fits for telemetry region it could be a

323
00:17:28,470 --> 00:17:35,400
Primus stack with all required

324
00:17:32,430 --> 00:17:39,030
components or you can just consume it to

325
00:17:35,400 --> 00:17:44,310
Kafka and create a bunch of subscribe

326
00:17:39,030 --> 00:17:44,700
subscribers for you for your bus well if

327
00:17:44,310 --> 00:17:48,000
you use

328
00:17:44,700 --> 00:17:52,680
Jason you make you make just go directly

329
00:17:48,000 --> 00:17:55,560
to Kafka and to avoid using pipeline but

330
00:17:52,680 --> 00:17:58,290
again these all these tools are fully

331
00:17:55,560 --> 00:18:01,440
available and you can try to Instagram

332
00:17:58,290 --> 00:18:04,460
today and already run a trials in the

333
00:18:01,440 --> 00:18:06,810
lab it's worth to mention a

334
00:18:04,460 --> 00:18:09,320
visualization tool and usually we use

335
00:18:06,810 --> 00:18:13,770
graph Anna to demonstrate how it works

336
00:18:09,320 --> 00:18:16,470
because it's open-source the community

337
00:18:13,770 --> 00:18:20,610
around graph Anna is developing new

338
00:18:16,470 --> 00:18:23,300
feature pretty rapid and also we have a

339
00:18:20,610 --> 00:18:25,800
legend mechanism beside the

340
00:18:23,300 --> 00:18:28,590
visualization and monitoring for all

341
00:18:25,800 --> 00:18:33,659
your data you can configure thresholds

342
00:18:28,590 --> 00:18:36,270
and send web hooks to any of your agents

343
00:18:33,660 --> 00:18:39,570
or some business logic which you may

344
00:18:36,270 --> 00:18:43,860
have behind me consuming telemetry it's

345
00:18:39,570 --> 00:18:46,189
open go for it give it a try and proceed

346
00:18:43,860 --> 00:18:46,189
with it

347
00:18:47,810 --> 00:18:55,020
we have more upcoming features and

348
00:18:52,040 --> 00:18:58,530
recently we announced support for Gina

349
00:18:55,020 --> 00:19:02,400
my jean-mi it's

350
00:18:58,530 --> 00:19:05,280
initiative led by open config and its

351
00:19:02,400 --> 00:19:07,530
network management interface defined by

352
00:19:05,280 --> 00:19:10,260
open config because we're main

353
00:19:07,530 --> 00:19:13,910
contributors behind it it's data model

354
00:19:10,260 --> 00:19:17,129
independent it's your eyes on your PC

355
00:19:13,910 --> 00:19:21,270
framework for communication and rich to

356
00:19:17,130 --> 00:19:23,970
link available for it the main idea for

357
00:19:21,270 --> 00:19:27,270
Gina my to provide a standard approach

358
00:19:23,970 --> 00:19:30,480
for encoding and transport and across

359
00:19:27,270 --> 00:19:33,690
different vendors and once more and more

360
00:19:30,480 --> 00:19:38,810
vendors will support Gina my you may

361
00:19:33,690 --> 00:19:41,850
have unified encoding just across

362
00:19:38,810 --> 00:19:44,790
different open config models which will

363
00:19:41,850 --> 00:19:46,679
bring your versatility and you simplify

364
00:19:44,790 --> 00:19:49,790
your operations in terms of your

365
00:19:46,680 --> 00:19:49,790
processing your data

366
00:19:50,630 --> 00:19:56,850
Gina I should be the answer for you you

367
00:19:54,540 --> 00:19:59,639
have for a type of RPC

368
00:19:56,850 --> 00:20:02,429
my main are pieces one is to get

369
00:19:59,640 --> 00:20:06,720
capabilities from device another one is

370
00:20:02,430 --> 00:20:10,620
yet set and we are interesting in the

371
00:20:06,720 --> 00:20:13,800
last RPC subscribed because it's twice

372
00:20:10,620 --> 00:20:16,409
by telemetry once you define the message

373
00:20:13,800 --> 00:20:18,930
you have list of preselected type and

374
00:20:16,410 --> 00:20:23,280
you just need like to construct your

375
00:20:18,930 --> 00:20:26,640
message further so Gina is here and we

376
00:20:23,280 --> 00:20:32,670
expect to have more adoption in terms of

377
00:20:26,640 --> 00:20:36,210
usage for Gina mine but we mainly use

378
00:20:32,670 --> 00:20:39,980
kiss for telemetry as of now the first

379
00:20:36,210 --> 00:20:43,650
you can start easily is to replace SNMP

380
00:20:39,980 --> 00:20:46,740
probably you have a bunch of SNMP food

381
00:20:43,650 --> 00:20:50,460
out of your device and you can see the

382
00:20:46,740 --> 00:20:53,640
benefits by replacing and when to module

383
00:20:50,460 --> 00:20:55,710
driven telemetry we have published bunch

384
00:20:53,640 --> 00:20:59,850
of use cases where you can monitor your

385
00:20:55,710 --> 00:21:03,030
routing protocols interface starts all

386
00:20:59,850 --> 00:21:06,360
your not health and bunch of details

387
00:21:03,030 --> 00:21:09,510
situated to it when you start to collect

388
00:21:06,360 --> 00:21:11,490
this the MIS data you may want to to

389
00:21:09,510 --> 00:21:14,240
conduct some types of analytics on top

390
00:21:11,490 --> 00:21:17,040
of it and here you may bring some

391
00:21:14,240 --> 00:21:21,330
third-party knowledge to build with

392
00:21:17,040 --> 00:21:22,889
analytics inside for it and because more

393
00:21:21,330 --> 00:21:25,409
and more data generated in your

394
00:21:22,890 --> 00:21:30,680
environment you may start to use some

395
00:21:25,410 --> 00:21:36,060
patterns for for analyzing and just

396
00:21:30,680 --> 00:21:37,850
proceed with statistics on it different

397
00:21:36,060 --> 00:21:41,220
companies announced support for

398
00:21:37,850 --> 00:21:43,649
streaming cinema tree and we can see

399
00:21:41,220 --> 00:21:45,570
more and more of them catching up on

400
00:21:43,650 --> 00:21:48,810
streaming television because previously

401
00:21:45,570 --> 00:21:52,889
it was just SNMP based and now ways

402
00:21:48,810 --> 00:21:55,790
support streaming telemetry is a part of

403
00:21:52,890 --> 00:21:55,790
where package

404
00:21:57,870 --> 00:22:05,679
and is a closing reminder we need to

405
00:22:02,470 --> 00:22:08,500
have a full picture in our head at first

406
00:22:05,680 --> 00:22:12,400
you have young models it's used for

407
00:22:08,500 --> 00:22:18,010
configuration and operation models for

408
00:22:12,400 --> 00:22:20,620
your device it allows you to simplify we

409
00:22:18,010 --> 00:22:23,740
dealing with COI and replace it to a

410
00:22:20,620 --> 00:22:26,979
more programmatic approach when we

411
00:22:23,740 --> 00:22:32,560
touched base on GMA each wires on

412
00:22:26,980 --> 00:22:35,230
protobuf because we mentioned g PB and J

413
00:22:32,560 --> 00:22:39,580
are PC as well as a part of it and this

414
00:22:35,230 --> 00:22:43,420
is a management protocol the third

415
00:22:39,580 --> 00:22:46,270
component is Gen Y and this is net

416
00:22:43,420 --> 00:22:50,020
network operation interface it's mostly

417
00:22:46,270 --> 00:22:53,740
for used for operational commands and

418
00:22:50,020 --> 00:22:57,730
last but not least it's JIRA by which

419
00:22:53,740 --> 00:23:01,510
gives you interface for rib and allow

420
00:22:57,730 --> 00:23:05,830
you to programmatically access based on

421
00:23:01,510 --> 00:23:08,530
API and once you consider to have all

422
00:23:05,830 --> 00:23:10,449
these components in mind you can see

423
00:23:08,530 --> 00:23:14,139
what pro-tobacco devised in free offer

424
00:23:10,450 --> 00:23:16,540
plus your PC is heavily used so if you

425
00:23:14,140 --> 00:23:19,420
don't yet spend your time on learning

426
00:23:16,540 --> 00:23:22,389
how in general approach above works

427
00:23:19,420 --> 00:23:26,260
order PC it's good to go for examples

428
00:23:22,390 --> 00:23:28,710
right now and just spend some time

429
00:23:26,260 --> 00:23:32,260
learning on it or give it a try

430
00:23:28,710 --> 00:23:36,280
configure your PC directly on your box

431
00:23:32,260 --> 00:23:38,890
if it's supported and just to have an

432
00:23:36,280 --> 00:23:42,370
idea of where this direction is moving

433
00:23:38,890 --> 00:23:45,300
to and but so for today for my site and

434
00:23:42,370 --> 00:23:45,300
I'm open to questions

435
00:23:46,390 --> 00:23:57,240
[Applause]

436
00:23:51,980 --> 00:24:00,330
alright Tony taubira Comcast good

437
00:23:57,240 --> 00:24:01,590
presentation and overview and we're

438
00:24:00,330 --> 00:24:04,889
starting to get what with this which is

439
00:24:01,590 --> 00:24:06,480
exciting and people have questions you

440
00:24:04,889 --> 00:24:09,479
can I can maybe share a little of our

441
00:24:06,480 --> 00:24:12,720
experience what I'd say is third-party

442
00:24:09,480 --> 00:24:14,700
tool vendors who want you know to do

443
00:24:12,720 --> 00:24:16,470
analytics and discovery and all this

444
00:24:14,700 --> 00:24:18,990
kind of thing you need to start

445
00:24:16,470 --> 00:24:21,299
supporting us like this you know coming

446
00:24:18,990 --> 00:24:23,009
to us and say okay man we're just gonna

447
00:24:21,299 --> 00:24:24,929
set up you know just give us an Appy

448
00:24:23,009 --> 00:24:26,879
access cuz that's what we need to like

449
00:24:24,929 --> 00:24:29,610
figure out what your network is they

450
00:24:26,879 --> 00:24:31,709
need to start supporting telemetry you

451
00:24:29,610 --> 00:24:33,928
know facts discovered by telemetry Oh

452
00:24:31,710 --> 00:24:35,580
usually they don't need traffic stats

453
00:24:33,929 --> 00:24:37,320
even if they do they should be able to

454
00:24:35,580 --> 00:24:40,799
accept them in some other format CEA's

455
00:24:37,320 --> 00:24:43,980
fear whatever you know an extract if

456
00:24:40,799 --> 00:24:47,100
they need topology interface information

457
00:24:43,980 --> 00:24:49,440
entity information get it from telemetry

458
00:24:47,100 --> 00:24:51,990
figure out some way to subscribe to the

459
00:24:49,440 --> 00:24:54,330
Kafka bus or whatever to get that

460
00:24:51,990 --> 00:24:57,450
information that's what I have to say

461
00:24:54,330 --> 00:25:00,059
thanks yeah thank you um you can just

462
00:24:57,450 --> 00:25:02,940
reconfigure separate Kafka instance

463
00:25:00,059 --> 00:25:05,490
directly program and provide like secure

464
00:25:02,940 --> 00:25:08,460
channel for first party to access this

465
00:25:05,490 --> 00:25:10,799
data of course oh yeah it's just there

466
00:25:08,460 --> 00:25:13,620
compatibility that needs to be thank you

467
00:25:10,799 --> 00:25:17,789
I should have done from day neck and we

468
00:25:13,620 --> 00:25:19,639
started with telemetry around a couple

469
00:25:17,789 --> 00:25:22,679
of months ago because of the need of

470
00:25:19,639 --> 00:25:25,350
SNMP isn't providing all the data or the

471
00:25:22,679 --> 00:25:28,110
metrics anymore which telemetry at the

472
00:25:25,350 --> 00:25:30,449
moment does for example MEK accounting

473
00:25:28,110 --> 00:25:32,279
which is pretty pretty nice to have when

474
00:25:30,450 --> 00:25:35,070
you're connect to an IXP environment and

475
00:25:32,279 --> 00:25:38,460
so the thing is from a roadmap point of

476
00:25:35,070 --> 00:25:40,889
view can we say that telemetry is the

477
00:25:38,460 --> 00:25:43,409
future of exporting metrics and SNMP is

478
00:25:40,889 --> 00:25:46,080
going to die because currently it looks

479
00:25:43,409 --> 00:25:49,259
like that SNMP is already lacking

480
00:25:46,080 --> 00:25:53,220
metrics which you can still get by a CLI

481
00:25:49,259 --> 00:25:55,440
or by yeah

482
00:25:53,220 --> 00:25:57,480
phew nan Abstergo it was presentation

483
00:25:55,440 --> 00:25:59,399
that by Google what SNMP is dead

484
00:25:57,480 --> 00:26:02,850
well it's still somewhere in the field

485
00:25:59,399 --> 00:26:06,330
but we saw we drive towards telemetry

486
00:26:02,850 --> 00:26:08,428
and mrs. future met the other we really

487
00:26:06,330 --> 00:26:10,740
could cost with me a lot of time was the

488
00:26:08,429 --> 00:26:13,649
thing to find out that I guess the old

489
00:26:10,740 --> 00:26:15,360
stuff was policy-driven export and now

490
00:26:13,649 --> 00:26:17,370
as the state-of-the-art cisco singing is

491
00:26:15,360 --> 00:26:19,918
model-driven right so we can forget

492
00:26:17,370 --> 00:26:21,389
about policy stuff um this was the first

493
00:26:19,919 --> 00:26:22,740
thing I stepped into ever started was

494
00:26:21,389 --> 00:26:25,258
the policy singing and I thought no this

495
00:26:22,740 --> 00:26:27,269
is not working out this is I'm solving a

496
00:26:25,259 --> 00:26:28,769
different puzzle here and so this was

497
00:26:27,269 --> 00:26:30,509
really confusing and you should get rid

498
00:26:28,769 --> 00:26:32,610
of on the website was it because people

499
00:26:30,509 --> 00:26:36,509
still google it the policy stuff and

500
00:26:32,610 --> 00:26:39,209
it's I think it's deprecated right yes

501
00:26:36,509 --> 00:26:40,980
so we remain naming for its its

502
00:26:39,210 --> 00:26:43,169
streaming telemetry which includes

503
00:26:40,980 --> 00:26:46,019
module driven telemetry and we have

504
00:26:43,169 --> 00:26:48,629
cadence based for work interface and

505
00:26:46,019 --> 00:26:51,929
offered on a based on a sample interval

506
00:26:48,629 --> 00:26:53,459
and we support event-driven telemetry

507
00:26:51,929 --> 00:26:55,769
for example for sis logs

508
00:26:53,460 --> 00:26:59,610
one last question when we jump over from

509
00:26:55,769 --> 00:27:04,950
metrics to configuration starting with

510
00:26:59,610 --> 00:27:07,168
iOS xr6 something we try to forget to

511
00:27:04,950 --> 00:27:10,379
deploy the whole rooted configuration by

512
00:27:07,169 --> 00:27:12,870
a net convient and we we have plenty of

513
00:27:10,379 --> 00:27:14,939
cases with you guys because we were able

514
00:27:12,870 --> 00:27:18,199
to crash the whole system so cisco

515
00:27:14,940 --> 00:27:20,370
basically wasn't able to to do the

516
00:27:18,200 --> 00:27:21,899
adjustments for for the basic stuffs for

517
00:27:20,370 --> 00:27:24,539
example if you push also these in the

518
00:27:21,899 --> 00:27:27,029
management configuration and layer 2

519
00:27:24,539 --> 00:27:29,039
configuration and so on at some point it

520
00:27:27,029 --> 00:27:31,860
crashed the whole system so with the new

521
00:27:29,039 --> 00:27:33,720
approach does cisco guarantee that i am

522
00:27:31,860 --> 00:27:35,990
able to push the whole configuration and

523
00:27:33,720 --> 00:27:38,850
the system is doing all all the

524
00:27:35,990 --> 00:27:41,450
adjustments without in the best case

525
00:27:38,850 --> 00:27:44,100
without any service impact

526
00:27:41,450 --> 00:27:46,049
well in case for telemetry it's just

527
00:27:44,100 --> 00:27:49,439
like pushed data out of the device and

528
00:27:46,049 --> 00:27:51,629
as it was demonstrated on once wide once

529
00:27:49,440 --> 00:27:55,019
you had more receivers it's still stable

530
00:27:51,629 --> 00:27:57,209
so for net confirm i hope we see both

531
00:27:55,019 --> 00:27:58,040
issues would be resolved it's not

532
00:27:57,210 --> 00:28:00,680
convent

533
00:27:58,040 --> 00:28:03,980
or the other thing is there are two

534
00:28:00,680 --> 00:28:05,900
different approaches or yeah it's it's

535
00:28:03,980 --> 00:28:09,010
kind of different we can discuss with

536
00:28:05,900 --> 00:28:09,010
later i know ii thank you

537
00:28:20,050 --> 00:28:26,620
I'll speak while he's waiting and guy

538
00:28:22,460 --> 00:28:28,910
from jeffires Juniper SNMP bibs are dead

539
00:28:26,620 --> 00:28:33,560
don't expect new things to happen with

540
00:28:28,910 --> 00:28:35,600
those anymore telemetry transport is a

541
00:28:33,560 --> 00:28:36,950
distraction we have a lot of flavours of

542
00:28:35,600 --> 00:28:38,780
things on the screens in front of us

543
00:28:36,950 --> 00:28:39,950
they all do roughly the same thing as

544
00:28:38,780 --> 00:28:42,050
far as you're concerned for getting

545
00:28:39,950 --> 00:28:43,430
state out of your network that's great

546
00:28:42,050 --> 00:28:46,100
choose whatever it happens to work for

547
00:28:43,430 --> 00:28:49,040
you that said the thing that everybody

548
00:28:46,100 --> 00:28:51,909
in this room should be doing and I'm

549
00:28:49,040 --> 00:28:55,790
saying this as a vendor demand

550
00:28:51,910 --> 00:28:56,750
standardized models you want to be able

551
00:28:55,790 --> 00:28:59,450
to get your state out of the network

552
00:28:56,750 --> 00:29:01,400
without having to go through no some

553
00:28:59,450 --> 00:29:02,780
vendor augmentation to get something

554
00:29:01,400 --> 00:29:04,790
that's important the thing that nibs

555
00:29:02,780 --> 00:29:07,300
really gave you was the ability to get

556
00:29:04,790 --> 00:29:10,100
the same stuff from different platforms

557
00:29:07,300 --> 00:29:17,030
demand standardized models yep

558
00:29:10,100 --> 00:29:20,419
that's a good comment thank you power

559
00:29:17,030 --> 00:29:24,590
will chant NTT communications do you

560
00:29:20,420 --> 00:29:28,570
work for Cisco yeah somehow I was

561
00:29:24,590 --> 00:29:33,800
thinking you were working for Google so

562
00:29:28,570 --> 00:29:36,169
three three three plus years later I see

563
00:29:33,800 --> 00:29:39,500
the picture you want me to have in mind

564
00:29:36,170 --> 00:29:43,160
and I see too many three four laterals

565
00:29:39,500 --> 00:29:46,550
starting with G so a little bit of

566
00:29:43,160 --> 00:29:48,590
follow up from what Jeff was saying like

567
00:29:46,550 --> 00:29:51,260
a standardized models what I missed in

568
00:29:48,590 --> 00:29:53,659
this presentation is maybe a little bit

569
00:29:51,260 --> 00:29:56,090
of a sense we're streaming telemetry is

570
00:29:53,660 --> 00:29:59,540
going in terms of standardization and

571
00:29:56,090 --> 00:30:01,760
interoperability you know with vendors I

572
00:29:59,540 --> 00:30:03,860
it's true that the two routers don't

573
00:30:01,760 --> 00:30:07,190
have to stream telemetry to each other

574
00:30:03,860 --> 00:30:10,370
but but if I build a collector I build a

575
00:30:07,190 --> 00:30:12,530
collector myself I find that I have

576
00:30:10,370 --> 00:30:14,929
essentially to build multiple collectors

577
00:30:12,530 --> 00:30:16,129
one per vendor and that is simply

578
00:30:14,930 --> 00:30:18,980
unacceptable

579
00:30:16,130 --> 00:30:20,800
and that it's simply just not working

580
00:30:18,980 --> 00:30:22,970
out you know three plus years later

581
00:30:20,800 --> 00:30:25,760
thank you I think we are going through

582
00:30:22,970 --> 00:30:31,610
this with ROS exact issue with Gianna my

583
00:30:25,760 --> 00:30:34,100
support Steve or Christina works two

584
00:30:31,610 --> 00:30:37,250
comments one wholehearted agreement with

585
00:30:34,100 --> 00:30:40,760
Jeff in terms of demand for you know

586
00:30:37,250 --> 00:30:43,700
standards driven models one thing that I

587
00:30:40,760 --> 00:30:46,730
hit me you might point out in the future

588
00:30:43,700 --> 00:30:49,640
is you know the the compliment in yang

589
00:30:46,730 --> 00:30:51,230
to the deviation is the augment so from

590
00:30:49,640 --> 00:30:53,570
a standards perspective you can start

591
00:30:51,230 --> 00:30:55,270
with standards based models and ask your

592
00:30:53,570 --> 00:30:57,740
vendors to provide the associated

593
00:30:55,270 --> 00:30:59,780
augmentations for the nibbly bits that

594
00:30:57,740 --> 00:31:02,360
are you know not necessarily found in

595
00:30:59,780 --> 00:31:04,550
your cast of screwdrivers there I was

596
00:31:02,360 --> 00:31:05,990
wondering if you could perhaps provide a

597
00:31:04,550 --> 00:31:10,700
bit of commentary or some thoughts

598
00:31:05,990 --> 00:31:13,790
around model versioning and handling of

599
00:31:10,700 --> 00:31:16,550
various model versions across vendor

600
00:31:13,790 --> 00:31:17,990
implementations I think as an industry

601
00:31:16,550 --> 00:31:19,790
we're not talking about some of the

602
00:31:17,990 --> 00:31:22,760
concurrent operational complexity

603
00:31:19,790 --> 00:31:25,100
associated with managing different

604
00:31:22,760 --> 00:31:27,830
versions of models inside of software

605
00:31:25,100 --> 00:31:32,719
revisions across software versions or

606
00:31:27,830 --> 00:31:34,429
even across vendors unfortunately I

607
00:31:32,720 --> 00:31:36,440
think right now it's kind of manual

608
00:31:34,430 --> 00:31:38,120
process to manage because you need to

609
00:31:36,440 --> 00:31:40,550
validate your current release of

610
00:31:38,120 --> 00:31:43,250
operation system for your vendor plus

611
00:31:40,550 --> 00:31:45,530
supported open configuration for a

612
00:31:43,250 --> 00:31:49,490
specific model and just like to have

613
00:31:45,530 --> 00:31:51,080
this drug in one Excel spreadsheet yeah

614
00:31:49,490 --> 00:31:54,290
I think we have a new combinatorial

615
00:31:51,080 --> 00:31:56,980
problem that we can look forward to

616
00:31:54,290 --> 00:32:01,360
featuring in our presentations to debate

617
00:31:56,980 --> 00:32:04,220
thank you yeah last question

618
00:32:01,360 --> 00:32:06,409
ELISA Cooper I'm the chair of the IETF

619
00:32:04,220 --> 00:32:08,150
and I work at Cisco as well this is a

620
00:32:06,410 --> 00:32:09,680
comment actually not a question for you

621
00:32:08,150 --> 00:32:11,870
but just to follow up on the comments

622
00:32:09,680 --> 00:32:13,820
about standardization if there are

623
00:32:11,870 --> 00:32:15,919
things that the IETF models are not

624
00:32:13,820 --> 00:32:17,270
giving people that they need or things

625
00:32:15,920 --> 00:32:18,650
about the IETF process that aren't

626
00:32:17,270 --> 00:32:20,420
giving people what they need in terms of

627
00:32:18,650 --> 00:32:22,700
the speed of standardization or anything

628
00:32:20,420 --> 00:32:23,900
else about it I would love to hear more

629
00:32:22,700 --> 00:32:27,320
about that

630
00:32:23,900 --> 00:32:29,390
and get new ideas for how we can more

631
00:32:27,320 --> 00:32:31,220
effectively produce standardized models

632
00:32:29,390 --> 00:32:32,450
that get take-up in the industry so

633
00:32:31,220 --> 00:32:36,090
please come talk to me if that's

634
00:32:32,450 --> 00:32:42,960
something that interests you Thanks

635
00:32:36,090 --> 00:32:42,959
[Applause]

636
00:32:47,870 --> 00:32:49,929
you

