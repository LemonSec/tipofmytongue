1
00:00:08,850 --> 00:00:14,410
<font color="#CCCCCC">all right next up we have our</font><font color="#E5E5E5"> lightning</font>

2
00:00:11,830 --> 00:00:17,470
talks<font color="#CCCCCC"> and our first presenters are going</font>

3
00:00:14,410 --> 00:00:19,650
<font color="#CCCCCC">to be Ian Flint and</font><font color="#E5E5E5"> Igor</font><font color="#CCCCCC"> Gusinsky from</font>

4
00:00:17,470 --> 00:00:29,650
Yahoo telling us all<font color="#CCCCCC"> about you Dee ping</font>

5
00:00:19,650 --> 00:00:30,820
<font color="#E5E5E5">take it away</font><font color="#CCCCCC"> guys everyone so how many</font>

6
00:00:29,650 --> 00:00:34,660
people<font color="#E5E5E5"> have some like this in their</font>

7
00:00:30,820 --> 00:00:37,210
network<font color="#E5E5E5"> bunch of lags fully meshed</font>

8
00:00:34,660 --> 00:00:39,010
<font color="#E5E5E5">between your routers and somebody says I</font>

9
00:00:37,210 --> 00:00:43,480
have a<font color="#E5E5E5"> performance issue from source to</font>

10
00:00:39,010 --> 00:00:47,140
destination<font color="#CCCCCC"> what the hell do you</font><font color="#E5E5E5"> do and</font>

11
00:00:43,480 --> 00:00:48,910
that's actually<font color="#E5E5E5"> the simple case</font><font color="#CCCCCC"> but make</font>

12
00:00:47,140 --> 00:00:52,059
that<font color="#CCCCCC"> go all the way</font><font color="#E5E5E5"> across the</font><font color="#CCCCCC"> country</font>

13
00:00:48,910 --> 00:00:54,610
<font color="#E5E5E5">where you have multiple hops of this how</font>

14
00:00:52,059 --> 00:00:57,640
do you detect<font color="#E5E5E5"> monitor troubleshoot the</font>

15
00:00:54,610 --> 00:00:59,079
usual method is well<font color="#E5E5E5"> not pretty you're</font>

16
00:00:57,640 --> 00:01:00,820
basically start taking links out of

17
00:00:59,079 --> 00:01:02,469
service<font color="#E5E5E5"> or city pairs out of service</font>

18
00:01:00,820 --> 00:01:04,509
until<font color="#E5E5E5"> you find whatever is causing</font><font color="#CCCCCC"> the</font>

19
00:01:02,469 --> 00:01:05,890
problem<font color="#E5E5E5"> and if it's point five percent</font>

20
00:01:04,509 --> 00:01:08,070
packet loss or<font color="#E5E5E5"> something along</font><font color="#CCCCCC"> those</font>

21
00:01:05,890 --> 00:01:10,690
<font color="#CCCCCC">lines it might take you a couple of days</font>

22
00:01:08,070 --> 00:01:12,130
<font color="#E5E5E5">well as you can</font><font color="#CCCCCC"> imagine in</font><font color="#E5E5E5"> a large-scale</font>

23
00:01:10,690 --> 00:01:17,530
production network that<font color="#E5E5E5"> doesn't work</font><font color="#CCCCCC"> so</font>

24
00:01:12,130 --> 00:01:18,940
<font color="#E5E5E5">all also we have heard</font><font color="#CCCCCC"> for many</font><font color="#E5E5E5"> years</font>

25
00:01:17,530 --> 00:01:20,800
that there's going to be solutions to

26
00:01:18,940 --> 00:01:22,330
this there<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be BFD that works</font>

27
00:01:20,800 --> 00:01:24,039
for<font color="#CCCCCC"> luck</font><font color="#E5E5E5"> that will detect this there's</font>

28
00:01:22,330 --> 00:01:27,420
going to be eaten at<font color="#E5E5E5"> om there's going to</font>

29
00:01:24,039 --> 00:01:29,950
be some<font color="#CCCCCC"> other magic</font><font color="#E5E5E5"> thingy</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> think</font>

30
00:01:27,420 --> 00:01:31,149
after<font color="#CCCCCC"> waiting for close to a decade we</font>

31
00:01:29,950 --> 00:01:34,590
decided that we need to do<font color="#E5E5E5"> something</font>

32
00:01:31,149 --> 00:01:38,649
<font color="#E5E5E5">about it</font><font color="#CCCCCC"> so here's the</font><font color="#E5E5E5"> end to talk about</font>

33
00:01:34,590 --> 00:01:39,910
what you do hello so what we built to

34
00:01:38,649 --> 00:01:42,369
solve this<font color="#E5E5E5"> problem is something</font><font color="#CCCCCC"> we're</font>

35
00:01:39,910 --> 00:01:45,160
calling<font color="#CCCCCC"> UT paying what UD being does</font>

36
00:01:42,369 --> 00:01:47,289
it's an evolution of the<font color="#CCCCCC"> one-way</font><font color="#E5E5E5"> active</font>

37
00:01:45,160 --> 00:01:50,789
management protocol so<font color="#CCCCCC"> it</font><font color="#E5E5E5"> sends a stream</font>

38
00:01:47,289 --> 00:01:53,380
of UDP packets<font color="#E5E5E5"> from</font><font color="#CCCCCC"> a client</font><font color="#E5E5E5"> to a server</font>

39
00:01:50,789 --> 00:01:55,509
<font color="#CCCCCC">the packets are</font><font color="#E5E5E5"> emitted in groups we</font>

40
00:01:53,380 --> 00:01:57,580
chop<font color="#E5E5E5"> them into groups of packets and</font>

41
00:01:55,509 --> 00:01:59,530
each of the packets we timestamp it at

42
00:01:57,580 --> 00:02:01,270
the client and then we pick it<font color="#CCCCCC"> up at the</font>

43
00:01:59,530 --> 00:02:04,119
server and check<font color="#CCCCCC"> the time stamp at</font><font color="#E5E5E5"> the</font>

44
00:02:01,270 --> 00:02:06,009
server to determine latency<font color="#CCCCCC"> and we put a</font>

45
00:02:04,119 --> 00:02:08,169
serial<font color="#CCCCCC"> number on</font><font color="#E5E5E5"> every packet which</font><font color="#CCCCCC"> is a</font>

46
00:02:06,009 --> 00:02:10,840
monotonically increasing singing serial

47
00:02:08,169 --> 00:02:13,630
number so that<font color="#E5E5E5"> we can detect packet loss</font>

48
00:02:10,840 --> 00:02:15,670
by basically<font color="#CCCCCC"> taking the difference</font>

49
00:02:13,630 --> 00:02:17,609
between<font color="#E5E5E5"> the last packet in the group and</font>

50
00:02:15,670 --> 00:02:19,569
the first packet in<font color="#E5E5E5"> the group and</font>

51
00:02:17,610 --> 00:02:20,849
subtracting the number<font color="#CCCCCC"> of packets we</font>

52
00:02:19,569 --> 00:02:23,159
received so

53
00:02:20,849 --> 00:02:24,899
if the first and last packets<font color="#E5E5E5"> are 20</font>

54
00:02:23,159 --> 00:02:28,230
packets<font color="#E5E5E5"> apart and we receive 19 we know</font>

55
00:02:24,900 --> 00:02:31,170
<font color="#E5E5E5">who lost a packet on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> server side</font>

56
00:02:28,230 --> 00:02:33,899
<font color="#CCCCCC">we've got a server that</font><font color="#E5E5E5"> receives the</font>

57
00:02:31,170 --> 00:02:36,089
packet<font color="#CCCCCC"> times Samson as they come in</font>

58
00:02:33,900 --> 00:02:39,629
does<font color="#E5E5E5"> lost detection and then emits</font>

59
00:02:36,090 --> 00:02:47,669
status statistics to either stats<font color="#CCCCCC"> D or</font>

60
00:02:39,629 --> 00:02:50,040
standard out<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> features</font><font color="#E5E5E5"> so that's</font>

61
00:02:47,669 --> 00:02:52,469
all<font color="#E5E5E5"> very nice</font><font color="#CCCCCC"> but but what was really a</font>

62
00:02:50,040 --> 00:02:54,030
<font color="#E5E5E5">challenge was to</font><font color="#CCCCCC"> make this useful in a</font>

63
00:02:52,469 --> 00:02:55,888
complex networking environment like what

64
00:02:54,030 --> 00:02:59,129
<font color="#CCCCCC">Igor described so so we do a lot of</font>

65
00:02:55,889 --> 00:03:01,079
tricks<font color="#CCCCCC"> to make this</font><font color="#E5E5E5"> thing sort of ferret</font>

66
00:02:59,129 --> 00:03:03,540
out as<font color="#E5E5E5"> many problems as we possibly can</font>

67
00:03:01,079 --> 00:03:04,919
<font color="#E5E5E5">so the first is we do true</font><font color="#CCCCCC"> one-way</font>

68
00:03:03,540 --> 00:03:07,048
measurement this means we<font color="#CCCCCC"> can measure</font>

69
00:03:04,919 --> 00:03:09,719
the<font color="#CCCCCC"> quality of service</font><font color="#E5E5E5"> in one direction</font>

70
00:03:07,049 --> 00:03:11,579
versus another<font color="#E5E5E5"> so if we have a funny</font>

71
00:03:09,719 --> 00:03:13,909
route in one way that isn't<font color="#E5E5E5"> the</font><font color="#CCCCCC"> other</font>

72
00:03:11,579 --> 00:03:16,379
way we can actually<font color="#E5E5E5"> isolate that problem</font>

73
00:03:13,909 --> 00:03:18,149
<font color="#CCCCCC">we spread the traffic</font><font color="#E5E5E5"> across multiple</font>

74
00:03:16,379 --> 00:03:21,689
<font color="#CCCCCC">next-hop great ways we would</font><font color="#E5E5E5"> do that as</font>

75
00:03:18,150 --> 00:03:24,540
<font color="#CCCCCC">we</font><font color="#E5E5E5"> actually write the ethernet frame and</font>

76
00:03:21,689 --> 00:03:26,310
we manipulate<font color="#E5E5E5"> next</font><font color="#CCCCCC"> top mac so</font><font color="#E5E5E5"> that we</font>

77
00:03:24,540 --> 00:03:27,900
can force the traffic to go to either

78
00:03:26,310 --> 00:03:30,239
the<font color="#E5E5E5"> primary</font><font color="#CCCCCC"> or the</font><font color="#E5E5E5"> secondary</font><font color="#CCCCCC"> or router</font>

79
00:03:27,900 --> 00:03:34,259
<font color="#CCCCCC">out of the network that we're emitting</font>

80
00:03:30,239 --> 00:03:37,129
<font color="#CCCCCC">from we manipulate the source port</font><font color="#E5E5E5"> so we</font>

81
00:03:34,259 --> 00:03:39,540
can<font color="#E5E5E5"> exercise if we have multiple ecmp</font>

82
00:03:37,129 --> 00:03:42,078
<font color="#E5E5E5">pathways we can exercise</font><font color="#CCCCCC"> all of those</font>

83
00:03:39,540 --> 00:03:45,000
and you can<font color="#E5E5E5"> do since we're writing the</font>

84
00:03:42,079 --> 00:03:47,250
link level<font color="#E5E5E5"> header</font><font color="#CCCCCC"> we can use as many</font>

85
00:03:45,000 --> 00:03:50,099
<font color="#E5E5E5">source ports as we want</font><font color="#CCCCCC"> to you</font><font color="#E5E5E5"> don't</font>

86
00:03:47,250 --> 00:03:51,959
actually have<font color="#CCCCCC"> to bind to a</font><font color="#E5E5E5"> UDP socket or</font>

87
00:03:50,099 --> 00:03:54,839
<font color="#E5E5E5">to UDP port you just you</font><font color="#CCCCCC"> just throw the</font>

88
00:03:51,959 --> 00:03:56,519
packets on<font color="#CCCCCC"> the wire and they go</font><font color="#E5E5E5"> so that</font>

89
00:03:54,840 --> 00:03:58,650
makes it very<font color="#E5E5E5"> nice it makes it easy to</font>

90
00:03:56,519 --> 00:04:01,500
deconflict multiple instances of UDP

91
00:03:58,650 --> 00:04:05,340
running on a single on a single<font color="#CCCCCC"> client</font>

92
00:04:01,500 --> 00:04:07,859
machine randomize the payload size<font color="#E5E5E5"> so</font>

93
00:04:05,340 --> 00:04:09,870
you<font color="#E5E5E5"> can detect like MSS failures you can</font>

94
00:04:07,859 --> 00:04:12,120
say I want<font color="#CCCCCC"> to push right</font><font color="#E5E5E5"> up to my MSS</font>

95
00:04:09,870 --> 00:04:13,979
and<font color="#CCCCCC"> see if it makes it across</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> if it</font>

96
00:04:12,120 --> 00:04:15,689
<font color="#E5E5E5">gets fragmented and lost or</font><font color="#CCCCCC"> you know if</font>

97
00:04:13,979 --> 00:04:18,090
there's any<font color="#E5E5E5"> particular issues with a</font>

98
00:04:15,689 --> 00:04:21,409
particular packet size I know we've had

99
00:04:18,089 --> 00:04:23,729
a few<font color="#CCCCCC"> of those problems in our network</font>

100
00:04:21,409 --> 00:04:26,580
<font color="#E5E5E5">the other thing that we were</font><font color="#CCCCCC"> really</font>

101
00:04:23,729 --> 00:04:29,310
concerned<font color="#CCCCCC"> about was was resonance</font><font color="#E5E5E5"> and so</font>

102
00:04:26,580 --> 00:04:31,409
you know if you<font color="#E5E5E5"> omit a packet once a</font>

103
00:04:29,310 --> 00:04:32,849
second or if you omit a packet once

104
00:04:31,409 --> 00:04:34,500
every half second or<font color="#E5E5E5"> once every</font><font color="#CCCCCC"> 10 to</font>

105
00:04:32,849 --> 00:04:36,659
<font color="#E5E5E5">the second maybe there's an event</font>

106
00:04:34,500 --> 00:04:38,460
happens<font color="#CCCCCC"> every second or every half</font>

107
00:04:36,660 --> 00:04:40,350
second or<font color="#CCCCCC"> every tenth of a second</font><font color="#E5E5E5"> that</font>

108
00:04:38,460 --> 00:04:42,599
just happens to miss every packet that

109
00:04:40,350 --> 00:04:44,460
<font color="#CCCCCC">you send or just happens to</font><font color="#E5E5E5"> hit every</font>

110
00:04:42,600 --> 00:04:46,320
packet<font color="#CCCCCC"> that you send so there's a</font>

111
00:04:44,460 --> 00:04:48,840
randomization method called<font color="#CCCCCC"> Plus on</font>

112
00:04:46,320 --> 00:04:50,969
sampling it's based on<font color="#E5E5E5"> a you know an</font>

113
00:04:48,840 --> 00:04:53,280
exponential<font color="#CCCCCC"> curve and what it does is it</font>

114
00:04:50,970 --> 00:04:55,890
allows<font color="#CCCCCC"> you to do random intervals</font>

115
00:04:53,280 --> 00:04:58,340
between packets<font color="#CCCCCC"> and</font><font color="#E5E5E5"> yet still have your</font>

116
00:04:55,890 --> 00:05:00,860
<font color="#CCCCCC">your emission frequency averaged to a</font>

117
00:04:58,340 --> 00:05:03,810
fixed number that you<font color="#CCCCCC"> want to go after</font>

118
00:05:00,860 --> 00:05:07,110
<font color="#E5E5E5">and finally we collect</font><font color="#CCCCCC"> statistics that</font>

119
00:05:03,810 --> 00:05:10,380
allow you to take<font color="#CCCCCC"> the output of stats T</font>

120
00:05:07,110 --> 00:05:12,630
and turn it into jitter measurement by

121
00:05:10,380 --> 00:05:15,419
<font color="#E5E5E5">doing some squares you can do a rough</font>

122
00:05:12,630 --> 00:05:17,820
approximation<font color="#CCCCCC"> of standard deviation</font>

123
00:05:15,419 --> 00:05:21,780
across the set of packets<font color="#E5E5E5"> we also emit a</font>

124
00:05:17,820 --> 00:05:23,969
sum and<font color="#CCCCCC"> countin and maximum latency</font>

125
00:05:21,780 --> 00:05:27,299
<font color="#E5E5E5">what's nice about these</font><font color="#CCCCCC"> statistics as</font>

126
00:05:23,970 --> 00:05:29,250
well<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that they're additive so you can</font>

127
00:05:27,300 --> 00:05:31,110
do standard deviation across a single

128
00:05:29,250 --> 00:05:32,940
<font color="#CCCCCC">group or you can do standard deviation</font>

129
00:05:31,110 --> 00:05:35,100
across<font color="#CCCCCC"> ten groups</font><font color="#E5E5E5"> or across ten minutes</font>

130
00:05:32,940 --> 00:05:39,350
or across<font color="#E5E5E5"> an hour whatever</font><font color="#CCCCCC"> you want to</font>

131
00:05:35,100 --> 00:05:39,350
do<font color="#E5E5E5"> it all adds up in the math works out</font>

132
00:05:41,000 --> 00:05:46,320
so as far as deploying this in Yahoo

133
00:05:43,850 --> 00:05:47,850
<font color="#CCCCCC">what we did was we started</font><font color="#E5E5E5"> out by</font>

134
00:05:46,320 --> 00:05:50,250
rolling it strictly for for

135
00:05:47,850 --> 00:05:53,040
point-to-point links so you guys

136
00:05:50,250 --> 00:05:55,979
remember how I talked about what happens

137
00:05:53,040 --> 00:05:57,870
when<font color="#E5E5E5"> you have how do you identify</font><font color="#CCCCCC"> where</font>

138
00:05:55,979 --> 00:05:59,460
the problem<font color="#CCCCCC"> is well one way you do it</font>

139
00:05:57,870 --> 00:06:01,110
<font color="#E5E5E5">across a global backbone is you simply</font>

140
00:05:59,460 --> 00:06:04,200
<font color="#E5E5E5">say I'm going to test every city pair</font>

141
00:06:01,110 --> 00:06:06,270
and if I have a problem<font color="#E5E5E5"> from one line</font><font color="#CCCCCC"> to</font>

142
00:06:04,200 --> 00:06:08,460
another well the<font color="#E5E5E5"> city pair that is</font>

143
00:06:06,270 --> 00:06:10,229
<font color="#E5E5E5">having the problem that</font><font color="#CCCCCC"> we dip in will</font>

144
00:06:08,460 --> 00:06:11,940
again<font color="#E5E5E5"> hopefully identify that city pair</font>

145
00:06:10,229 --> 00:06:13,530
at that point you still<font color="#E5E5E5"> will have to do</font>

146
00:06:11,940 --> 00:06:15,419
the<font color="#E5E5E5"> standard you know binary</font><font color="#CCCCCC"> division</font>

147
00:06:13,530 --> 00:06:17,549
take out enough links and see where the

148
00:06:15,419 --> 00:06:19,740
problem<font color="#CCCCCC"> is but</font><font color="#E5E5E5"> at least it zooms in</font><font color="#CCCCCC"> and</font>

149
00:06:17,550 --> 00:06:22,440
where<font color="#E5E5E5"> the problem is which is usually</font>

150
00:06:19,740 --> 00:06:24,479
the<font color="#CCCCCC"> hardest part of the whole thing yeah</font>

151
00:06:22,440 --> 00:06:27,150
<font color="#E5E5E5">and I mean you know the other thing is</font>

152
00:06:24,479 --> 00:06:30,330
when we<font color="#CCCCCC"> move to you deepen</font><font color="#E5E5E5"> we move to</font>

153
00:06:27,150 --> 00:06:31,679
you<font color="#CCCCCC"> tipping from a simple ICMP probe the</font>

154
00:06:30,330 --> 00:06:34,169
problem that I<font color="#CCCCCC"> see in people open</font><font color="#E5E5E5"> is it</font>

155
00:06:31,680 --> 00:06:36,360
only exercises one path<font color="#CCCCCC"> you know where</font>

156
00:06:34,169 --> 00:06:40,169
you may have<font color="#CCCCCC"> sixteen</font><font color="#E5E5E5"> thirty</font><font color="#CCCCCC"> to however</font>

157
00:06:36,360 --> 00:06:42,539
<font color="#CCCCCC">many paths between two to between a city</font>

158
00:06:40,169 --> 00:06:44,310
pair and<font color="#E5E5E5"> so it does guaranteed that</font>

159
00:06:42,539 --> 00:06:46,860
you're<font color="#E5E5E5"> spreading your traffic out across</font>

160
00:06:44,310 --> 00:06:47,880
<font color="#E5E5E5">your</font><font color="#CCCCCC"> entire network footprint</font><font color="#E5E5E5"> rather</font>

161
00:06:46,860 --> 00:06:50,970
than only<font color="#E5E5E5"> exercise</font>

162
00:06:47,880 --> 00:06:52,650
<font color="#CCCCCC">a small portion of it so we started out</font>

163
00:06:50,970 --> 00:06:54,870
by<font color="#CCCCCC"> doing this in a point-to-point</font>

164
00:06:52,650 --> 00:06:58,140
deployment<font color="#E5E5E5"> we basically put it in every</font>

165
00:06:54,870 --> 00:07:00,990
pop<font color="#E5E5E5"> in our back on our backbone</font><font color="#CCCCCC"> and we</font>

166
00:06:58,140 --> 00:07:04,080
measured single hop latency single hop

167
00:07:00,990 --> 00:07:08,250
packet loss<font color="#E5E5E5"> across all those and emitted</font>

168
00:07:04,080 --> 00:07:10,740
alerts to our monitoring console<font color="#CCCCCC"> the</font>

169
00:07:08,250 --> 00:07:13,260
next step was to<font color="#E5E5E5"> deploy a full mesh</font>

170
00:07:10,740 --> 00:07:16,170
across<font color="#E5E5E5"> our backbone</font><font color="#CCCCCC"> and so every single</font>

171
00:07:13,260 --> 00:07:18,210
pop every single site<font color="#CCCCCC"> we put</font><font color="#E5E5E5"> one of</font>

172
00:07:16,170 --> 00:07:20,550
<font color="#CCCCCC">these agents</font><font color="#E5E5E5"> in and we we set it up to</font>

173
00:07:18,210 --> 00:07:22,710
do a full mesh to every<font color="#E5E5E5"> other pop in</font>

174
00:07:20,550 --> 00:07:26,360
<font color="#CCCCCC">sight and we're able</font><font color="#E5E5E5"> to draw</font><font color="#CCCCCC"> a nice grid</font>

175
00:07:22,710 --> 00:07:29,430
which on a good day it's all green<font color="#E5E5E5"> and</font>

176
00:07:26,360 --> 00:07:32,730
<font color="#E5E5E5">look at the performance of our</font><font color="#CCCCCC"> backplane</font>

177
00:07:29,430 --> 00:07:34,740
our backbone as a as a whole the next

178
00:07:32,730 --> 00:07:36,630
thing we're planning to do is<font color="#CCCCCC"> our data</font>

179
00:07:34,740 --> 00:07:40,350
centers at Yahoo<font color="#E5E5E5"> are split into</font>

180
00:07:36,630 --> 00:07:42,240
availability zones<font color="#CCCCCC"> and so we want to</font>

181
00:07:40,350 --> 00:07:44,970
deploy<font color="#E5E5E5"> this into every availability zone</font>

182
00:07:42,240 --> 00:07:46,500
<font color="#E5E5E5">and build a full mesh between</font>

183
00:07:44,970 --> 00:07:48,060
<font color="#CCCCCC">availability</font><font color="#E5E5E5"> zones which will give</font><font color="#CCCCCC"> us a</font>

184
00:07:46,500 --> 00:07:50,160
<font color="#E5E5E5">couple of things it will give us</font><font color="#CCCCCC"> more</font>

185
00:07:48,060 --> 00:07:52,980
<font color="#E5E5E5">redundancy in terms of our coverage of</font>

186
00:07:50,160 --> 00:07:55,080
our backbone<font color="#CCCCCC"> if you only deploy to a</font>

187
00:07:52,980 --> 00:07:57,120
single<font color="#E5E5E5"> box in each pop in your</font><font color="#CCCCCC"> backbone</font>

188
00:07:55,080 --> 00:07:58,590
you you know that<font color="#E5E5E5"> box becomes a single</font>

189
00:07:57,120 --> 00:08:01,140
<font color="#E5E5E5">point of failure but if you deploy</font><font color="#CCCCCC"> to</font>

190
00:07:58,590 --> 00:08:03,840
multiple<font color="#CCCCCC"> lazy's within a within</font><font color="#E5E5E5"> a site</font>

191
00:08:01,140 --> 00:08:04,890
<font color="#CCCCCC">you have that redundancy</font><font color="#E5E5E5"> and you can you</font>

192
00:08:03,840 --> 00:08:06,929
know actually tell the difference

193
00:08:04,890 --> 00:08:10,349
<font color="#CCCCCC">between a single</font><font color="#E5E5E5"> box failure and a</font>

194
00:08:06,930 --> 00:08:12,510
backbone failure and one of the reasons

195
00:08:10,350 --> 00:08:15,330
that<font color="#E5E5E5"> we do that is if you think about it</font>

196
00:08:12,510 --> 00:08:19,620
<font color="#E5E5E5">let's say you have packet loss from DC</font>

197
00:08:15,330 --> 00:08:21,419
to Bay Area so phase<font color="#CCCCCC"> 2 is what will say</font>

198
00:08:19,620 --> 00:08:22,920
hey<font color="#E5E5E5"> you have a problem from DC</font><font color="#CCCCCC"> tube</font><font color="#E5E5E5"> area</font>

199
00:08:21,420 --> 00:08:24,690
on top of what<font color="#E5E5E5"> you have every</font>

200
00:08:22,920 --> 00:08:26,580
point-to-point links that says hey I

201
00:08:24,690 --> 00:08:29,280
have<font color="#E5E5E5"> a little problem between actually</font>

202
00:08:26,580 --> 00:08:30,900
Chicago and Denver<font color="#E5E5E5"> so now that kind of</font>

203
00:08:29,280 --> 00:08:32,520
zooms you<font color="#E5E5E5"> in and where you need to begin</font>

204
00:08:30,900 --> 00:08:35,159
<font color="#E5E5E5">troubleshooting by having multiple</font>

205
00:08:32,520 --> 00:08:37,260
overlapping layers of monitoring you

206
00:08:35,159 --> 00:08:39,299
effectively<font color="#E5E5E5"> can say I have a problem</font>

207
00:08:37,260 --> 00:08:41,929
<font color="#E5E5E5">from here to here and this is actually</font>

208
00:08:39,299 --> 00:08:44,939
the problem<font color="#CCCCCC"> and</font><font color="#E5E5E5"> even with</font><font color="#CCCCCC"> the simple</font>

209
00:08:41,929 --> 00:08:47,339
example of New York to<font color="#CCCCCC"> Chicago</font><font color="#E5E5E5"> well on</font>

210
00:08:44,940 --> 00:08:48,000
that example<font color="#E5E5E5"> you had four</font><font color="#CCCCCC"> different</font>

211
00:08:47,340 --> 00:08:51,090
paths

212
00:08:48,000 --> 00:08:53,670
effectively all<font color="#CCCCCC"> Lag you could see if the</font>

213
00:08:51,090 --> 00:08:56,089
packet<font color="#E5E5E5"> lost 25% there</font><font color="#CCCCCC"> okay it's one of</font>

214
00:08:53,670 --> 00:08:59,280
the<font color="#CCCCCC"> live numbers</font><font color="#E5E5E5"> is the packet</font><font color="#CCCCCC"> lost 50%</font>

215
00:08:56,089 --> 00:09:01,440
<font color="#CCCCCC">probably one of the routers</font><font color="#E5E5E5"> is it</font><font color="#CCCCCC"> one</font>

216
00:08:59,280 --> 00:09:01,769
<font color="#CCCCCC">percent</font><font color="#E5E5E5"> okay one of the links is being</font>

217
00:09:01,440 --> 00:09:04,319
played

218
00:09:01,769 --> 00:09:05,910
it really allows you but<font color="#E5E5E5"> having multiple</font>

219
00:09:04,319 --> 00:09:08,368
overlapping<font color="#E5E5E5"> layers to troubleshoot and</font>

220
00:09:05,910 --> 00:09:11,670
<font color="#E5E5E5">cement which you have to work on and</font><font color="#CCCCCC"> the</font>

221
00:09:08,369 --> 00:09:13,800
spar is all it allows you<font color="#E5E5E5"> to</font><font color="#CCCCCC"> figure that</font>

222
00:09:11,670 --> 00:09:17,009
<font color="#CCCCCC">out at least with you depending what</font>

223
00:09:13,800 --> 00:09:18,769
<font color="#E5E5E5">10,000 packets per second over the whole</font>

224
00:09:17,009 --> 00:09:21,809
backbone<font color="#E5E5E5"> yeah about that</font>

225
00:09:18,769 --> 00:09:23,369
<font color="#CCCCCC">with about</font><font color="#E5E5E5"> 10,000 PPS you can detect it</font>

226
00:09:21,809 --> 00:09:26,819
hopefully way before<font color="#E5E5E5"> your applications</font>

227
00:09:23,369 --> 00:09:29,129
here yeah extremely<font color="#CCCCCC"> lightweight it's a</font>

228
00:09:26,819 --> 00:09:31,079
fully written<font color="#E5E5E5"> in C I think</font><font color="#CCCCCC"> the the</font>

229
00:09:29,129 --> 00:09:33,299
memory size<font color="#E5E5E5"> of it's like less</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> 50 K</font>

230
00:09:31,079 --> 00:09:34,799
so you can run<font color="#E5E5E5"> it and it barely has</font><font color="#CCCCCC"> a</font>

231
00:09:33,299 --> 00:09:37,350
footprint on<font color="#E5E5E5"> the host that you're</font>

232
00:09:34,799 --> 00:09:38,910
running<font color="#E5E5E5"> it on so the best news I don't</font>

233
00:09:37,350 --> 00:09:41,040
<font color="#E5E5E5">know if you've caught the lower right</font>

234
00:09:38,910 --> 00:09:43,920
hand corner<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the last few</font><font color="#CCCCCC"> slides but</font>

235
00:09:41,040 --> 00:09:46,319
it's<font color="#E5E5E5"> open sourced and so you're free to</font>

236
00:09:43,920 --> 00:09:46,769
<font color="#E5E5E5">download it for</font><font color="#CCCCCC"> kit use it as you see</font>

237
00:09:46,319 --> 00:09:48,839
<font color="#CCCCCC">fit</font>

238
00:09:46,769 --> 00:09:50,459
<font color="#CCCCCC">contribute</font><font color="#E5E5E5"> back we'd love to get any</font>

239
00:09:48,839 --> 00:09:54,480
improvements that<font color="#CCCCCC"> you might have to it</font>

240
00:09:50,459 --> 00:09:56,758
<font color="#E5E5E5">github comm / Yahoo</font><font color="#CCCCCC"> / UT ping that</font>

241
00:09:54,480 --> 00:10:03,209
closes the talk any questions<font color="#E5E5E5"> yes you</font>

242
00:09:56,759 --> 00:10:05,069
<font color="#E5E5E5">have 27 seconds off actually</font><font color="#CCCCCC"> we're going</font>

243
00:10:03,209 --> 00:10:07,410
<font color="#E5E5E5">to hold questions until the</font><font color="#CCCCCC"> end of the</font>

244
00:10:05,069 --> 00:10:09,509
lightning<font color="#E5E5E5"> talks if we have time for that</font>

245
00:10:07,410 --> 00:10:12,629
<font color="#CCCCCC">if not you're more</font><font color="#E5E5E5"> than welcome to come</font>

246
00:10:09,509 --> 00:10:14,339
<font color="#CCCCCC">up and you know talk to Ian</font><font color="#E5E5E5"> and Igor</font>

247
00:10:12,629 --> 00:10:17,299
afterwards<font color="#CCCCCC"> but thank you</font><font color="#E5E5E5"> very much guys</font>

248
00:10:14,339 --> 00:10:17,299
you

