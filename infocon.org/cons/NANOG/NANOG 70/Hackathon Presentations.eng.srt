1
00:00:09,540 --> 00:00:14,259
okay so for the ordering<font color="#E5E5E5"> of the</font>

2
00:00:12,660 --> 00:00:15,370
I<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> have it in the</font><font color="#CCCCCC"> survey</font>

3
00:00:14,260 --> 00:00:16,990
maybe<font color="#CCCCCC"> we'll go through the order I'm</font>

4
00:00:15,370 --> 00:00:19,660
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to call up</font><font color="#CCCCCC"> the teams I want to</font>

5
00:00:16,990 --> 00:00:24,250
make<font color="#CCCCCC"> sure I'm not missing anybody so I</font>

6
00:00:19,660 --> 00:00:27,520
have<font color="#E5E5E5"> polite</font><font color="#CCCCCC"> traffic shifters maintenance</font>

7
00:00:24,250 --> 00:00:30,460
notification the BMP collector<font color="#CCCCCC"> IX Mon</font>

8
00:00:27,520 --> 00:00:32,470
and<font color="#CCCCCC"> Pierre validators for validation</font><font color="#E5E5E5"> is</font>

9
00:00:30,460 --> 00:00:34,140
that all the groups<font color="#E5E5E5"> raise your hand if</font>

10
00:00:32,470 --> 00:00:36,040
I'm missing somebody

11
00:00:34,140 --> 00:00:37,720
Brandon's also going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> present at the</font>

12
00:00:36,040 --> 00:00:39,330
<font color="#E5E5E5">end but</font><font color="#CCCCCC"> he can't win</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> he's not</font><font color="#E5E5E5"> in the</font>

13
00:00:37,720 --> 00:00:45,670
list<font color="#CCCCCC"> story Brennan</font>

14
00:00:39,330 --> 00:00:48,640
all right cool<font color="#CCCCCC"> ah all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so first</font>

15
00:00:45,670 --> 00:00:50,470
we'll<font color="#E5E5E5"> have a</font><font color="#CCCCCC"> polite come up policy tool</font>

16
00:00:48,640 --> 00:00:53,739
for engineers<font color="#CCCCCC"> so if they want to</font><font color="#E5E5E5"> come on</font>

17
00:00:50,470 --> 00:00:56,640
<font color="#E5E5E5">up also at the end of this we will be</font>

18
00:00:53,739 --> 00:01:00,309
doing the voting on the different<font color="#E5E5E5"> hacks</font>

19
00:00:56,640 --> 00:01:02,610
along with some raffle<font color="#E5E5E5"> prizes</font><font color="#CCCCCC"> so watch</font>

20
00:01:00,309 --> 00:01:02,610
out for<font color="#CCCCCC"> that</font>

21
00:01:17,290 --> 00:01:21,340
does anybody know how<font color="#CCCCCC"> to share</font>

22
00:01:45,170 --> 00:01:50,310
right hello<font color="#E5E5E5"> everybody and I would like</font>

23
00:01:48,270 --> 00:01:52,920
<font color="#CCCCCC">to</font><font color="#E5E5E5"> get the others as</font><font color="#CCCCCC"> well come up who</font>

24
00:01:50,310 --> 00:01:54,600
was going to<font color="#CCCCCC"> present we ended up having</font>

25
00:01:52,920 --> 00:01:56,460
about<font color="#CCCCCC"> 12 people</font><font color="#E5E5E5"> in our team</font><font color="#CCCCCC"> and</font>

26
00:01:54,600 --> 00:01:58,080
everybody is just<font color="#E5E5E5"> coming and coming and</font>

27
00:01:56,460 --> 00:02:00,419
they were interested<font color="#CCCCCC"> in so I didn't</font><font color="#E5E5E5"> want</font>

28
00:01:58,080 --> 00:02:02,670
<font color="#E5E5E5">to say you know go somewhere else</font><font color="#CCCCCC"> which</font>

29
00:02:00,420 --> 00:02:05,580
means<font color="#E5E5E5"> 12 is really difficult to manage</font>

30
00:02:02,670 --> 00:02:07,050
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> in a small hack so we divided</font>

31
00:02:05,580 --> 00:02:08,850
<font color="#E5E5E5">up into four different groups and</font>

32
00:02:07,050 --> 00:02:10,859
everybody is going to present that<font color="#E5E5E5"> till</font>

33
00:02:08,850 --> 00:02:14,970
piece of module what<font color="#CCCCCC"> we did today here</font>

34
00:02:10,860 --> 00:02:18,030
the idea was<font color="#CCCCCC"> to create a tool which goes</font>

35
00:02:14,970 --> 00:02:20,730
out to registries pull the prefixes PSN

36
00:02:18,030 --> 00:02:23,190
<font color="#E5E5E5">and generate configuration templates and</font>

37
00:02:20,730 --> 00:02:26,369
push down to<font color="#E5E5E5"> Juniper and Arista devices</font>

38
00:02:23,190 --> 00:02:29,700
and we were quite<font color="#E5E5E5"> successful</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> happy</font>

39
00:02:26,370 --> 00:02:32,160
happy<font color="#E5E5E5"> by the end</font><font color="#CCCCCC"> of the day</font><font color="#E5E5E5"> I also</font>

40
00:02:29,700 --> 00:02:34,530
worked<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> stack module so I</font>

41
00:02:32,160 --> 00:02:36,329
just<font color="#E5E5E5"> go through quickly of the structure</font>

42
00:02:34,530 --> 00:02:38,580
and then everybody<font color="#E5E5E5"> gets to</font><font color="#CCCCCC"> present a bit</font>

43
00:02:36,330 --> 00:02:41,580
so<font color="#E5E5E5"> we got a collector it goes out</font><font color="#CCCCCC"> to</font>

44
00:02:38,580 --> 00:02:43,140
<font color="#CCCCCC">Aaron it also gets some parameters which</font>

45
00:02:41,580 --> 00:02:44,330
<font color="#E5E5E5">essence we are interested in this is</font>

46
00:02:43,140 --> 00:02:47,730
going to be the<font color="#E5E5E5"> list of the customers</font>

47
00:02:44,330 --> 00:02:49,709
<font color="#E5E5E5">create a JSON file then the themes are</font>

48
00:02:47,730 --> 00:02:52,500
<font color="#E5E5E5">agreed between</font><font color="#CCCCCC"> the interfaces or how</font>

49
00:02:49,709 --> 00:02:54,510
they're going<font color="#E5E5E5"> to use those data and</font><font color="#CCCCCC"> then</font>

50
00:02:52,500 --> 00:02:55,950
<font color="#E5E5E5">we created templates and there's two</font>

51
00:02:54,510 --> 00:02:59,030
<font color="#CCCCCC">different groups who worked on templates</font>

52
00:02:55,950 --> 00:03:02,780
there was a one for every star using<font color="#CCCCCC"> am</font>

53
00:02:59,030 --> 00:03:06,060
<font color="#E5E5E5">EAP</font><font color="#CCCCCC"> I and the other one was</font><font color="#E5E5E5"> some other</font>

54
00:03:02,780 --> 00:03:07,620
tools and then created complete files

55
00:03:06,060 --> 00:03:10,830
which got down<font color="#CCCCCC"> pushed to devices</font><font color="#E5E5E5"> in</font>

56
00:03:07,620 --> 00:03:16,019
different<font color="#CCCCCC"> methods and I just</font><font color="#E5E5E5"> present my</font>

57
00:03:10,830 --> 00:03:18,600
bit first<font color="#E5E5E5"> for the statistics so if you</font>

58
00:03:16,019 --> 00:03:20,910
do this<font color="#E5E5E5"> tool in production it will take</font>

59
00:03:18,600 --> 00:03:23,370
some time<font color="#E5E5E5"> to do so and some</font><font color="#CCCCCC"> resources</font>

60
00:03:20,910 --> 00:03:25,829
and it's important for<font color="#E5E5E5"> management to</font>

61
00:03:23,370 --> 00:03:28,830
understand what they can<font color="#E5E5E5"> win with this</font>

62
00:03:25,830 --> 00:03:31,380
tool so just created a quick<font color="#E5E5E5"> JavaScript</font>

63
00:03:28,830 --> 00:03:34,049
<font color="#CCCCCC">so just</font><font color="#E5E5E5"> to show you what you can win</font>

64
00:03:31,380 --> 00:03:36,000
with it<font color="#E5E5E5"> so for now we have four peers</font>

65
00:03:34,049 --> 00:03:38,340
<font color="#E5E5E5">you can't really see</font><font color="#CCCCCC"> but the es numbers</font>

66
00:03:36,000 --> 00:03:40,890
and the customers now names are in there

67
00:03:38,340 --> 00:03:43,440
the last one is Microsoft and it shows

68
00:03:40,890 --> 00:03:44,250
you<font color="#E5E5E5"> how much prefixes</font><font color="#CCCCCC"> we received from</font>

69
00:03:43,440 --> 00:03:47,760
<font color="#E5E5E5">it today</font>

70
00:03:44,250 --> 00:03:51,150
which<font color="#E5E5E5"> is over 15 of</font><font color="#CCCCCC"> 1,500 others were</font>

71
00:03:47,760 --> 00:03:53,829
<font color="#CCCCCC">not</font><font color="#E5E5E5"> that significant and then the other</font>

72
00:03:51,150 --> 00:03:56,530
one shows<font color="#CCCCCC"> you how much it changed since</font>

73
00:03:53,830 --> 00:04:00,610
April so you could see Microsoft<font color="#E5E5E5"> had an</font>

74
00:03:56,530 --> 00:04:04,030
extra<font color="#CCCCCC"> 10 this one extra 7 this</font><font color="#E5E5E5"> one x.25</font>

75
00:04:00,610 --> 00:04:05,800
<font color="#CCCCCC">if you've got multiple instances</font>

76
00:04:04,030 --> 00:04:07,990
<font color="#E5E5E5">changing you need to create a change</font>

77
00:04:05,800 --> 00:04:10,540
request you need to create some

78
00:04:07,990 --> 00:04:12,550
operators some<font color="#CCCCCC"> protein follow some</font>

79
00:04:10,540 --> 00:04:14,650
processes which takes up time<font color="#E5E5E5"> if it's</font>

80
00:04:12,550 --> 00:04:16,890
done automatically<font color="#E5E5E5"> you save time and</font>

81
00:04:14,650 --> 00:04:23,170
<font color="#CCCCCC">money thank you very</font><font color="#E5E5E5"> much</font>

82
00:04:16,890 --> 00:04:25,780
the<font color="#E5E5E5"> next one is the data team sorry our</font>

83
00:04:23,170 --> 00:04:28,050
team was responsible<font color="#CCCCCC"> for writing</font><font color="#E5E5E5"> the</font>

84
00:04:25,780 --> 00:04:31,809
piece that actually<font color="#E5E5E5"> collected data from</font>

85
00:04:28,050 --> 00:04:33,640
we ended<font color="#E5E5E5"> up using our</font><font color="#CCCCCC"> ADB we were</font>

86
00:04:31,810 --> 00:04:38,080
disappointed<font color="#CCCCCC"> to find that there is known</font>

87
00:04:33,640 --> 00:04:42,340
<font color="#E5E5E5">nice restful api for</font><font color="#CCCCCC"> this so we ended up</font>

88
00:04:38,080 --> 00:04:45,340
using<font color="#CCCCCC"> who is and grabbing the data</font><font color="#E5E5E5"> that</font>

89
00:04:42,340 --> 00:04:47,799
way<font color="#E5E5E5"> and collecting</font><font color="#CCCCCC"> together putting</font><font color="#E5E5E5"> it</font>

90
00:04:45,340 --> 00:04:56,890
out in JSON format for the next team<font color="#CCCCCC"> to</font>

91
00:04:47,800 --> 00:05:02,340
use so<font color="#E5E5E5"> we made the</font><font color="#CCCCCC"> Geneva</font><font color="#E5E5E5"> template we</font>

92
00:04:56,890 --> 00:05:05,260
used we made use of<font color="#CCCCCC"> Jinja 2 as well as</font>

93
00:05:02,340 --> 00:05:08,109
<font color="#E5E5E5">we got</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> JSON files from the data team</font>

94
00:05:05,260 --> 00:05:10,690
and we picked out all the prefixes that

95
00:05:08,110 --> 00:05:12,090
<font color="#E5E5E5">were advertised by the particular</font><font color="#CCCCCC"> ASO</font>

96
00:05:10,690 --> 00:05:15,610
<font color="#E5E5E5">people look we were looking into and</font>

97
00:05:12,090 --> 00:05:18,190
accordingly<font color="#E5E5E5"> we made the BGP policies for</font>

98
00:05:15,610 --> 00:05:21,310
the for us to accept<font color="#E5E5E5"> routes from that</font>

99
00:05:18,190 --> 00:05:25,719
customer<font color="#CCCCCC"> and then we pushed it</font><font color="#E5E5E5"> into</font>

100
00:05:21,310 --> 00:05:28,630
configurations for the devices then once

101
00:05:25,720 --> 00:05:32,230
the conflicts were already in you know

102
00:05:28,630 --> 00:05:35,020
JSON format<font color="#CCCCCC"> oh so one doesn't</font><font color="#E5E5E5"> figure</font>

103
00:05:32,230 --> 00:05:37,690
ready I get those<font color="#E5E5E5"> conflicts to what he</font>

104
00:05:35,020 --> 00:05:40,750
meant then he<font color="#E5E5E5"> just used the Juniper py</font>

105
00:05:37,690 --> 00:05:43,090
easy API you know the net<font color="#CCCCCC"> confía that</font>

106
00:05:40,750 --> 00:05:45,490
they provide<font color="#CCCCCC"> to do management</font><font color="#E5E5E5"> other</font>

107
00:05:43,090 --> 00:05:47,140
<font color="#E5E5E5">devices and based on that he just</font>

108
00:05:45,490 --> 00:05:49,960
committed<font color="#CCCCCC"> two</font><font color="#E5E5E5"> conflicts and he also</font>

109
00:05:47,140 --> 00:05:51,760
basically<font color="#E5E5E5"> assembled everything that all</font>

110
00:05:49,960 --> 00:05:57,010
the crappy code that I gave him and put

111
00:05:51,760 --> 00:06:00,450
that you<font color="#E5E5E5"> know in place and I'll</font><font color="#CCCCCC"> stick on</font>

112
00:05:57,010 --> 00:06:04,360
a big half of the eraser template team

113
00:06:00,450 --> 00:06:08,099
<font color="#CCCCCC">they</font><font color="#E5E5E5"> actually they did the same in</font><font color="#CCCCCC"> the</font>

114
00:06:04,360 --> 00:06:13,090
<font color="#E5E5E5">same file they got the JSON data</font>

115
00:06:08,100 --> 00:06:15,970
<font color="#E5E5E5">they</font><font color="#CCCCCC"> used the</font><font color="#E5E5E5"> ERISA</font><font color="#CCCCCC"> API to connect</font><font color="#E5E5E5"> there</font>

116
00:06:13,090 --> 00:06:19,210
is the device and and<font color="#CCCCCC"> and push the</font>

117
00:06:15,970 --> 00:06:21,610
config over<font color="#CCCCCC"> so very similar</font><font color="#E5E5E5"> to what we</font>

118
00:06:19,210 --> 00:06:26,169
did with<font color="#E5E5E5"> juniper and both of those tools</font>

119
00:06:21,610 --> 00:06:28,720
and<font color="#CCCCCC"> seems like</font><font color="#E5E5E5"> a good</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> to to use</font>

120
00:06:26,170 --> 00:06:31,690
definitely better than<font color="#E5E5E5"> map maker because</font>

121
00:06:28,720 --> 00:06:35,140
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> quick ones Norrish configs together</font>

122
00:06:31,690 --> 00:06:38,920
and in a in an elegant<font color="#E5E5E5"> way and</font><font color="#CCCCCC"> using</font>

123
00:06:35,140 --> 00:06:48,039
<font color="#E5E5E5">api's was definitely good</font><font color="#CCCCCC"> shape is a few</font>

124
00:06:38,920 --> 00:06:49,150
like thank<font color="#E5E5E5"> you just</font><font color="#CCCCCC"> i have to say thank</font>

125
00:06:48,040 --> 00:06:51,640
you<font color="#E5E5E5"> to the guys because they do</font>

126
00:06:49,150 --> 00:06:53,739
fantastic<font color="#CCCCCC"> jobs be for so many people</font><font color="#E5E5E5"> and</font>

127
00:06:51,640 --> 00:06:55,180
<font color="#E5E5E5">then we just could pull it together by</font>

128
00:06:53,740 --> 00:06:59,500
the<font color="#E5E5E5"> end of the day so it</font><font color="#CCCCCC"> is really</font>

129
00:06:55,180 --> 00:07:02,320
<font color="#CCCCCC">successful</font><font color="#E5E5E5"> and thank you very</font><font color="#CCCCCC"> much thank</font>

130
00:06:59,500 --> 00:07:06,160
you<font color="#E5E5E5"> so next we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the traffic shifters</font>

131
00:07:02,320 --> 00:07:09,130
the only one with<font color="#CCCCCC"> the name</font><font color="#E5E5E5"> let's I</font><font color="#CCCCCC"> like</font>

132
00:07:06,160 --> 00:07:27,580
it but<font color="#CCCCCC"> I</font><font color="#E5E5E5"> just let's just go from there</font>

133
00:07:09,130 --> 00:07:28,930
who's going<font color="#E5E5E5"> to present awesome</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font>

134
00:07:27,580 --> 00:07:32,080
while she's setting up just to let you

135
00:07:28,930 --> 00:07:33,520
know we've<font color="#E5E5E5"> run into quite a</font><font color="#CCCCCC"> few quite</font><font color="#E5E5E5"> a</font>

136
00:07:32,080 --> 00:07:36,010
few scenarios where we're trying<font color="#E5E5E5"> to</font>

137
00:07:33,520 --> 00:07:38,140
upgrade devices in our network<font color="#E5E5E5"> and if</font>

138
00:07:36,010 --> 00:07:39,909
you're at a<font color="#E5E5E5"> hyper scale network you know</font>

139
00:07:38,140 --> 00:07:43,450
that trying to<font color="#E5E5E5"> do that manually is an</font>

140
00:07:39,910 --> 00:07:45,490
absolute nightmare<font color="#CCCCCC"> so what we developed</font>

141
00:07:43,450 --> 00:07:48,340
is a is a program that we'll go through

142
00:07:45,490 --> 00:07:50,280
<font color="#CCCCCC">and in upgrade</font><font color="#E5E5E5"> basically in a clause</font>

143
00:07:48,340 --> 00:07:53,440
type architecture<font color="#CCCCCC"> we'll go through and</font>

144
00:07:50,280 --> 00:07:56,799
shift traffic from either<font color="#CCCCCC"> a to the B</font>

145
00:07:53,440 --> 00:07:58,480
side if<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> oh here we go ok so from</font>

146
00:07:56,800 --> 00:08:02,050
<font color="#E5E5E5">the a side to the B side so</font><font color="#CCCCCC"> that you can</font>

147
00:07:58,480 --> 00:08:04,470
upgrade the a side and then run health

148
00:08:02,050 --> 00:08:08,560
checks<font color="#E5E5E5"> make sure that everything is good</font>

149
00:08:04,470 --> 00:08:10,570
post upgrade and then we'll<font color="#CCCCCC"> ship traffic</font>

150
00:08:08,560 --> 00:08:14,890
<font color="#CCCCCC">again</font><font color="#E5E5E5"> from the B side of</font><font color="#CCCCCC"> the a side see</font>

151
00:08:10,570 --> 00:08:18,490
<font color="#CCCCCC">ok you can upgrade B so we worked on a</font>

152
00:08:14,890 --> 00:08:21,550
process to essentially shift traffic

153
00:08:18,490 --> 00:08:25,419
<font color="#E5E5E5">from a upgrade a and then shift</font>

154
00:08:21,550 --> 00:08:28,270
back onto a so that so<font color="#E5E5E5"> that it all is</font>

155
00:08:25,419 --> 00:08:29,919
good<font color="#CCCCCC"> so we we we didn't complete it</font><font color="#E5E5E5"> in</font>

156
00:08:28,270 --> 00:08:34,659
upgrade<font color="#E5E5E5"> be we're just</font><font color="#CCCCCC"> doing a at this</font>

157
00:08:29,919 --> 00:08:37,598
<font color="#E5E5E5">point that's all we could get done sorry</font>

158
00:08:34,659 --> 00:08:42,010
so<font color="#CCCCCC"> here we're moving traffic</font><font color="#E5E5E5"> off it's a</font>

159
00:08:37,599 --> 00:08:44,830
<font color="#E5E5E5">command-line tool you specify your your</font>

160
00:08:42,010 --> 00:08:47,260
<font color="#CCCCCC">hostname</font><font color="#E5E5E5"> your user your</font><font color="#CCCCCC"> pass the action</font>

161
00:08:44,830 --> 00:08:48,580
which is either move off or move on as

162
00:08:47,260 --> 00:08:49,930
<font color="#E5E5E5">well as the devices</font><font color="#CCCCCC"> that you need to</font>

163
00:08:48,580 --> 00:08:53,890
check<font color="#E5E5E5"> to actually confirm that those</font>

164
00:08:49,930 --> 00:08:55,089
<font color="#E5E5E5">routes are withdrawn or on there</font><font color="#CCCCCC"> and so</font>

165
00:08:53,890 --> 00:08:58,209
it just<font color="#E5E5E5"> runs through tells you is</font>

166
00:08:55,089 --> 00:09:01,240
connecting<font color="#CCCCCC"> to the router</font><font color="#E5E5E5"> so that's one</font>

167
00:08:58,209 --> 00:09:05,439
of so<font color="#CCCCCC"> fifty 2.24</font><font color="#E5E5E5"> is one it is the</font><font color="#CCCCCC"> VM X's</font>

168
00:09:01,240 --> 00:09:07,510
<font color="#E5E5E5">in our network</font><font color="#CCCCCC"> topology</font><font color="#E5E5E5"> and then it's</font>

169
00:09:05,440 --> 00:09:08,860
<font color="#E5E5E5">checking all the $10 dresses or those of</font>

170
00:09:07,510 --> 00:09:10,899
the<font color="#CCCCCC"> splines so it's actually</font><font color="#E5E5E5"> checking</font>

171
00:09:08,860 --> 00:09:17,200
and it<font color="#E5E5E5"> confirms that traffic</font><font color="#CCCCCC"> has been</font>

172
00:09:10,899 --> 00:09:21,579
<font color="#E5E5E5">moved off those</font><font color="#CCCCCC"> devices and then you can</font>

173
00:09:17,200 --> 00:09:26,290
<font color="#E5E5E5">run your upgrade on that specific on</font>

174
00:09:21,579 --> 00:09:42,699
<font color="#CCCCCC">that specific device which takes a</font>

175
00:09:26,290 --> 00:09:46,060
little<font color="#E5E5E5"> time once up complete and now</font>

176
00:09:42,700 --> 00:09:49,079
we're going<font color="#CCCCCC"> to go ahead and change</font><font color="#E5E5E5"> this</font>

177
00:09:46,060 --> 00:09:49,079
to<font color="#E5E5E5"> move on</font>

178
00:10:17,610 --> 00:10:22,930
yeah so the check is to<font color="#E5E5E5"> actually see if</font>

179
00:10:20,529 --> 00:10:27,790
the defaults are there or<font color="#CCCCCC"> not</font><font color="#E5E5E5"> to verify</font>

180
00:10:22,930 --> 00:10:29,439
that traffic<font color="#E5E5E5"> it's been moved so yeah and</font>

181
00:10:27,790 --> 00:10:32,050
it's actually mostly<font color="#CCCCCC"> functional</font><font color="#E5E5E5"> it this</font>

182
00:10:29,440 --> 00:10:33,790
<font color="#CCCCCC">this this works you can do this like</font>

183
00:10:32,050 --> 00:10:35,140
it's actually movie like this is

184
00:10:33,790 --> 00:10:54,459
<font color="#E5E5E5">actually confirming</font><font color="#CCCCCC"> everything on the</font>

185
00:10:35,140 --> 00:10:56,140
<font color="#E5E5E5">router</font><font color="#CCCCCC"> so thank you so I think the</font><font color="#E5E5E5"> next</font>

186
00:10:54,460 --> 00:10:57,730
one<font color="#CCCCCC"> I probably should have just said</font>

187
00:10:56,140 --> 00:10:59,380
that<font color="#CCCCCC"> the head of time but</font><font color="#E5E5E5"> next we have</font><font color="#CCCCCC"> a</font>

188
00:10:57,730 --> 00:11:03,010
maintenance notification and<font color="#E5E5E5"> then just</font>

189
00:10:59,380 --> 00:11:09,150
so people<font color="#E5E5E5"> know the BMP controller</font><font color="#CCCCCC"> IX</font><font color="#E5E5E5"> Mon</font>

190
00:11:03,010 --> 00:11:09,150
and peer validations so here we go

191
00:11:22,120 --> 00:11:31,430
hi how's<font color="#CCCCCC"> it going so I am Colin</font><font color="#E5E5E5"> McIntosh</font>

192
00:11:27,019 --> 00:11:33,440
<font color="#CCCCCC">and I'm</font><font color="#E5E5E5"> - and</font><font color="#CCCCCC"> we're going to talk about</font>

193
00:11:31,430 --> 00:11:37,390
<font color="#E5E5E5">maintenance notifications</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> how to</font>

194
00:11:33,440 --> 00:11:40,250
<font color="#CCCCCC">manage them better so for our hackathon</font>

195
00:11:37,390 --> 00:11:41,449
<font color="#CCCCCC">project we had some goals of we want to</font>

196
00:11:40,250 --> 00:11:44,120
<font color="#E5E5E5">be able</font><font color="#CCCCCC"> to read</font><font color="#E5E5E5"> main incident</font>

197
00:11:41,450 --> 00:11:46,399
notification<font color="#E5E5E5"> emails</font><font color="#CCCCCC"> and we're doing</font><font color="#E5E5E5"> that</font>

198
00:11:44,120 --> 00:11:48,470
over<font color="#CCCCCC"> IMAP we want to identify</font><font color="#E5E5E5"> which</font>

199
00:11:46,399 --> 00:11:51,050
emails are<font color="#E5E5E5"> maintenance notifications and</font>

200
00:11:48,470 --> 00:11:55,100
then parse out<font color="#E5E5E5"> the start time end time</font>

201
00:11:51,050 --> 00:11:56,990
<font color="#E5E5E5">the</font><font color="#CCCCCC"> circuit ID</font><font color="#E5E5E5"> and like the partner name</font>

202
00:11:55,100 --> 00:11:58,490
<font color="#CCCCCC">then we want to add</font><font color="#E5E5E5"> those events to a</font>

203
00:11:56,990 --> 00:11:59,779
<font color="#E5E5E5">calendar and then we want to notify</font>

204
00:11:58,490 --> 00:12:05,240
<font color="#CCCCCC">people if there's conflicting</font>

205
00:11:59,779 --> 00:12:07,550
maintenances so this is a little<font color="#CCCCCC"> bit of</font>

206
00:12:05,240 --> 00:12:09,230
how it<font color="#E5E5E5"> works</font><font color="#CCCCCC"> like I said it connects via</font>

207
00:12:07,550 --> 00:12:12,620
IMAP<font color="#CCCCCC"> we wrote the whole thing</font><font color="#E5E5E5"> in Python</font>

208
00:12:09,230 --> 00:12:16,579
<font color="#CCCCCC">it just reads in your emails finds</font>

209
00:12:12,620 --> 00:12:19,250
<font color="#CCCCCC">maintance notifications</font><font color="#E5E5E5"> posts the</font>

210
00:12:16,579 --> 00:12:20,810
calendar events to Google Calendar via

211
00:12:19,250 --> 00:12:23,480
the Google<font color="#E5E5E5"> API and then if</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a</font>

212
00:12:20,810 --> 00:12:25,959
<font color="#E5E5E5">conflicting notification it will send an</font>

213
00:12:23,480 --> 00:12:29,360
email not via the Google<font color="#E5E5E5"> API via</font>

214
00:12:25,959 --> 00:12:31,880
actually email<font color="#CCCCCC"> so how it works is</font>

215
00:12:29,360 --> 00:12:33,800
there's some<font color="#E5E5E5"> already existing work on</font>

216
00:12:31,880 --> 00:12:36,350
maintenance notifications<font color="#E5E5E5"> for parsing</font>

217
00:12:33,800 --> 00:12:40,640
the<font color="#CCCCCC"> Mount via</font><font color="#E5E5E5"> iCal and a header</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> X</font>

218
00:12:36,350 --> 00:12:42,770
maintenance note<font color="#CCCCCC"> so we wanted to try</font>

219
00:12:40,640 --> 00:12:47,720
<font color="#CCCCCC">this first because it's you know</font><font color="#E5E5E5"> more</font>

220
00:12:42,770 --> 00:12:50,510
standardized<font color="#CCCCCC"> and easier sorry easier</font><font color="#E5E5E5"> to</font>

221
00:12:47,720 --> 00:12:52,339
parse<font color="#E5E5E5"> the problem is not many vendors</font>

222
00:12:50,510 --> 00:12:54,230
<font color="#CCCCCC">actually send these headers or the iCal</font>

223
00:12:52,339 --> 00:12:58,089
attachment<font color="#E5E5E5"> we only have one vendor that</font>

224
00:12:54,230 --> 00:12:58,089
does<font color="#E5E5E5"> so it doesn't really work</font><font color="#CCCCCC"> that well</font>

225
00:12:58,300 --> 00:13:03,349
<font color="#CCCCCC">so our fallback is naive parsing which</font>

226
00:13:01,220 --> 00:13:06,020
is just some red X patterns to match an

227
00:13:03,350 --> 00:13:09,800
email a domain the start<font color="#CCCCCC"> and end time</font>

228
00:13:06,020 --> 00:13:11,540
and<font color="#CCCCCC"> the circuit ID and basically it's</font>

229
00:13:09,800 --> 00:13:14,300
just<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of these little yellow blobs</font>

230
00:13:11,540 --> 00:13:18,829
for each vendor<font color="#E5E5E5"> and the type of</font><font color="#CCCCCC"> Magnus</font>

231
00:13:14,300 --> 00:13:22,420
<font color="#CCCCCC">certification that they send so it works</font>

232
00:13:18,829 --> 00:13:24,709
it actually posts it to<font color="#CCCCCC"> Google Calendar</font>

233
00:13:22,420 --> 00:13:26,479
<font color="#CCCCCC">this is an</font><font color="#E5E5E5"> example of what one of the</font>

234
00:13:24,709 --> 00:13:28,399
notifications look like looks<font color="#E5E5E5"> like it's</font>

235
00:13:26,480 --> 00:13:30,860
<font color="#E5E5E5">very simple of course</font><font color="#CCCCCC"> you know we can</font>

236
00:13:28,399 --> 00:13:31,460
add more data in here<font color="#CCCCCC"> I actually want to</font>

237
00:13:30,860 --> 00:13:32,779
add

238
00:13:31,460 --> 00:13:35,420
it's that way it has<font color="#CCCCCC"> the original</font>

239
00:13:32,779 --> 00:13:39,980
maintenance message<font color="#E5E5E5"> in the description</font>

240
00:13:35,420 --> 00:13:42,110
<font color="#E5E5E5">but we</font><font color="#CCCCCC"> didn't get</font><font color="#E5E5E5"> time to do it</font><font color="#CCCCCC"> yeah and</font>

241
00:13:39,980 --> 00:13:45,080
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> just some future work</font><font color="#CCCCCC"> that we</font>

242
00:13:42,110 --> 00:13:46,640
think would<font color="#E5E5E5"> be cool to work on the we'd</font>

243
00:13:45,080 --> 00:13:48,440
actually like to<font color="#E5E5E5"> check the circuit IDs</font>

244
00:13:46,640 --> 00:13:50,420
<font color="#E5E5E5">against</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> topology and see if the</font>

245
00:13:48,440 --> 00:13:51,980
conflicting<font color="#E5E5E5"> maintenance is on the same</font>

246
00:13:50,420 --> 00:13:53,779
path<font color="#CCCCCC"> right now we actually</font><font color="#E5E5E5"> just check if</font>

247
00:13:51,980 --> 00:13:57,470
it's<font color="#E5E5E5"> during the same time which is</font><font color="#CCCCCC"> very</font>

248
00:13:53,779 --> 00:13:59,330
naive<font color="#CCCCCC"> and won't work very well so we</font>

249
00:13:57,470 --> 00:14:00,620
need<font color="#CCCCCC"> to improve that we'd like to add</font>

250
00:13:59,330 --> 00:14:01,880
support<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the ex maintenance note</font>

251
00:14:00,620 --> 00:14:05,660
headers<font color="#CCCCCC"> right now we're only doing</font><font color="#E5E5E5"> the</font>

252
00:14:01,880 --> 00:14:08,420
iCal parsing<font color="#CCCCCC"> like to add more vendor</font>

253
00:14:05,660 --> 00:14:09,620
patterns<font color="#CCCCCC"> it would be nice to be able</font><font color="#E5E5E5"> to</font>

254
00:14:08,420 --> 00:14:10,910
<font color="#E5E5E5">support other types of</font><font color="#CCCCCC"> maintenance like</font>

255
00:14:09,620 --> 00:14:13,070
power maintenance or site maintenance

256
00:14:10,910 --> 00:14:14,390
<font color="#E5E5E5">just to get it on the calendar</font><font color="#CCCCCC"> circuit</font>

257
00:14:13,070 --> 00:14:17,209
ID validation which goes into the

258
00:14:14,390 --> 00:14:18,680
topology checking<font color="#E5E5E5"> and then we also want</font>

259
00:14:17,209 --> 00:14:20,569
<font color="#E5E5E5">ask vendors to actually include</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> ex</font>

260
00:14:18,680 --> 00:14:22,370
maintenance maintenance note headers

261
00:14:20,570 --> 00:14:26,240
because<font color="#E5E5E5"> that would be awesome</font><font color="#CCCCCC"> and make</font>

262
00:14:22,370 --> 00:14:30,529
this much easier<font color="#CCCCCC"> to do yeah that's</font>

263
00:14:26,240 --> 00:14:38,000
pretty much all<font color="#E5E5E5"> we got good</font><font color="#CCCCCC"> yeah that's</font>

264
00:14:30,529 --> 00:14:40,520
it<font color="#E5E5E5"> so as you</font><font color="#CCCCCC"> mentioned</font><font color="#E5E5E5"> column the</font>

265
00:14:38,000 --> 00:14:42,680
libraries that<font color="#CCCCCC"> already exists are in</font>

266
00:14:40,520 --> 00:14:45,410
Python and we were Jade and<font color="#E5E5E5"> I were</font>

267
00:14:42,680 --> 00:14:47,900
<font color="#CCCCCC">working on re-implementing those in go</font>

268
00:14:45,410 --> 00:14:50,029
which was quite<font color="#CCCCCC"> interesting for me as I</font>

269
00:14:47,900 --> 00:14:51,170
never used<font color="#E5E5E5"> that language</font><font color="#CCCCCC"> before and we</font>

270
00:14:50,029 --> 00:14:54,230
made<font color="#E5E5E5"> some pretty good progress we got</font>

271
00:14:51,170 --> 00:14:58,160
the examples duplicated<font color="#E5E5E5"> in a very happy</font>

272
00:14:54,230 --> 00:15:00,170
way<font color="#E5E5E5"> of taking iCal data generating JSON</font>

273
00:14:58,160 --> 00:15:03,650
for that and then on the<font color="#CCCCCC"> other direction</font>

274
00:15:00,170 --> 00:15:06,140
<font color="#CCCCCC">taking raw data and then generating</font><font color="#E5E5E5"> the</font>

275
00:15:03,650 --> 00:15:09,050
the iCal and<font color="#CCCCCC"> go and then Jade did a</font>

276
00:15:06,140 --> 00:15:12,230
bunch of<font color="#E5E5E5"> work to start putting that up</font>

277
00:15:09,050 --> 00:15:14,979
on github<font color="#E5E5E5"> and cleaning it up a lot so a</font>

278
00:15:12,230 --> 00:15:14,980
lot of<font color="#E5E5E5"> good progress today</font>

279
00:15:15,070 --> 00:15:21,110
thank you so next we have<font color="#E5E5E5"> the BMP</font>

280
00:15:19,010 --> 00:15:24,550
<font color="#E5E5E5">controller group so if you want to come</font>

281
00:15:21,110 --> 00:15:24,550
on<font color="#E5E5E5"> up</font><font color="#CCCCCC"> and present what you</font><font color="#E5E5E5"> have</font>

282
00:16:17,350 --> 00:16:19,980
<font color="#E5E5E5">okay</font>

283
00:16:26,890 --> 00:16:33,890
good<font color="#CCCCCC"> so let</font><font color="#E5E5E5"> me kind of explain what we</font>

284
00:16:32,690 --> 00:16:36,830
<font color="#E5E5E5">were trying</font><font color="#CCCCCC"> to do in the first</font><font color="#E5E5E5"> place</font>

285
00:16:33,890 --> 00:16:38,449
<font color="#E5E5E5">there was there was quite a lot of stuff</font>

286
00:16:36,830 --> 00:16:40,550
that<font color="#CCCCCC"> we actually</font><font color="#E5E5E5"> had</font><font color="#CCCCCC"> to finish to try</font>

287
00:16:38,450 --> 00:16:43,100
and see<font color="#E5E5E5"> if</font><font color="#CCCCCC"> eking pieces together I think</font>

288
00:16:40,550 --> 00:16:46,310
<font color="#E5E5E5">this sort of</font><font color="#CCCCCC"> halfway there</font><font color="#E5E5E5"> hmm</font>

289
00:16:43,100 --> 00:16:48,110
especially in terms of getting most of

290
00:16:46,310 --> 00:16:50,390
<font color="#CCCCCC">the routes that</font><font color="#E5E5E5"> we need into a Redis</font>

291
00:16:48,110 --> 00:16:53,180
database<font color="#CCCCCC"> will sort</font><font color="#E5E5E5"> of explain some of</font>

292
00:16:50,390 --> 00:16:56,420
the pieces that we were<font color="#CCCCCC"> working on the</font>

293
00:16:53,180 --> 00:16:58,729
<font color="#E5E5E5">primary goal was I have I can have as</font>

294
00:16:56,420 --> 00:17:01,819
many routers<font color="#E5E5E5"> as I want in my bgp network</font>

295
00:16:58,730 --> 00:17:05,599
and the primary<font color="#E5E5E5"> goal is to</font><font color="#CCCCCC"> make sure</font>

296
00:17:01,820 --> 00:17:08,270
<font color="#CCCCCC">that</font><font color="#E5E5E5"> each router does not actually push</font>

297
00:17:05,599 --> 00:17:12,490
any routes into<font color="#CCCCCC"> the rib as part of the</font>

298
00:17:08,270 --> 00:17:14,780
<font color="#E5E5E5">BGP process itself instead</font><font color="#CCCCCC"> the the BGP</font>

299
00:17:12,490 --> 00:17:17,540
processes on all the routers<font color="#E5E5E5"> are only</font>

300
00:17:14,780 --> 00:17:19,970
used<font color="#CCCCCC"> for establishing the neighbors</font><font color="#E5E5E5"> and</font>

301
00:17:17,540 --> 00:17:22,430
of course getting<font color="#CCCCCC"> the routes here and</font>

302
00:17:19,970 --> 00:17:24,640
there based on<font color="#E5E5E5"> what's required</font><font color="#CCCCCC"> but the</font>

303
00:17:22,430 --> 00:17:27,589
actual<font color="#E5E5E5"> route calculation</font><font color="#CCCCCC"> and the rib</font>

304
00:17:24,640 --> 00:17:31,220
<font color="#E5E5E5">creation happens on the the collector</font>

305
00:17:27,589 --> 00:17:33,139
front so what we effectively<font color="#E5E5E5"> do is when</font>

306
00:17:31,220 --> 00:17:35,750
we learn routes<font color="#E5E5E5"> over let's say from</font>

307
00:17:33,140 --> 00:17:37,460
router<font color="#CCCCCC"> 2 into route 1 we publish a</font>

308
00:17:35,750 --> 00:17:39,770
<font color="#E5E5E5">single route policy on router</font><font color="#CCCCCC"> 1 to</font>

309
00:17:37,460 --> 00:17:43,310
prevent any<font color="#E5E5E5"> routes from being</font><font color="#CCCCCC"> downloaded</font>

310
00:17:39,770 --> 00:17:46,310
into the<font color="#E5E5E5"> rip and push all of the routes</font>

311
00:17:43,310 --> 00:17:48,770
into<font color="#E5E5E5"> the open BMP controller that's</font>

312
00:17:46,310 --> 00:17:50,000
sitting up though now because all<font color="#CCCCCC"> of</font>

313
00:17:48,770 --> 00:17:53,060
<font color="#CCCCCC">that is being</font><font color="#E5E5E5"> published into a single</font>

314
00:17:50,000 --> 00:17:55,400
<font color="#CCCCCC">cup covers we effectively have multiple</font>

315
00:17:53,060 --> 00:17:58,490
sort of agents<font color="#CCCCCC"> push pulling data</font><font color="#E5E5E5"> off</font>

316
00:17:55,400 --> 00:18:00,980
that<font color="#E5E5E5"> bus and then processing all of</font><font color="#CCCCCC"> the</font>

317
00:17:58,490 --> 00:18:03,290
ribs that we would need one by one<font color="#CCCCCC"> what</font>

318
00:18:00,980 --> 00:18:06,170
we have at this<font color="#E5E5E5"> point it is working is</font>

319
00:18:03,290 --> 00:18:09,200
the fact that we<font color="#CCCCCC"> are able to get the</font>

320
00:18:06,170 --> 00:18:13,880
adjacency<font color="#E5E5E5"> in rib</font><font color="#CCCCCC"> completely populated</font>

321
00:18:09,200 --> 00:18:16,100
from the router<font color="#CCCCCC"> one as we achieve as we</font>

322
00:18:13,880 --> 00:18:19,640
receive<font color="#E5E5E5"> all of the routes over open BMP</font>

323
00:18:16,100 --> 00:18:23,149
and then go ahead<font color="#CCCCCC"> and push all of that</font>

324
00:18:19,640 --> 00:18:25,730
into a<font color="#E5E5E5"> single Redis database so as that</font>

325
00:18:23,150 --> 00:18:27,170
happens<font color="#E5E5E5"> we have two other pieces of code</font>

326
00:18:25,730 --> 00:18:29,510
<font color="#CCCCCC">that we haven't finished integrating it</font>

327
00:18:27,170 --> 00:18:33,110
but those<font color="#CCCCCC"> pieces of code effectively</font>

328
00:18:29,510 --> 00:18:34,760
will allow us to<font color="#E5E5E5"> have completely sort of</font>

329
00:18:33,110 --> 00:18:37,939
pythonic versions or<font color="#CCCCCC"> llaman</font><font color="#E5E5E5"> based</font>

330
00:18:34,760 --> 00:18:38,400
versions of defining a route policy<font color="#E5E5E5"> so</font>

331
00:18:37,940 --> 00:18:40,980
<font color="#E5E5E5">that you can</font>

332
00:18:38,400 --> 00:18:44,310
define<font color="#CCCCCC"> exactly what goes into the</font>

333
00:18:40,980 --> 00:18:46,290
adjacency<font color="#E5E5E5"> in the post policy and then</font>

334
00:18:44,310 --> 00:18:50,639
finally do<font color="#E5E5E5"> part selection and push</font>

335
00:18:46,290 --> 00:18:52,649
everything<font color="#CCCCCC"> down so the last portion</font><font color="#E5E5E5"> is</font>

336
00:18:50,640 --> 00:18:55,830
the one that we wanted<font color="#E5E5E5"> to concentrate on</font>

337
00:18:52,650 --> 00:18:58,440
<font color="#E5E5E5">separately which is how do you actually</font>

338
00:18:55,830 --> 00:18:59,820
get the routes into the eventually we're

339
00:18:58,440 --> 00:19:01,530
going sort<font color="#E5E5E5"> of a roundabout</font><font color="#CCCCCC"> way of</font>

340
00:18:59,820 --> 00:19:03,990
<font color="#E5E5E5">getting the routes into</font><font color="#CCCCCC"> the rib</font><font color="#E5E5E5"> so they</font>

341
00:19:01,530 --> 00:19:06,840
will appear<font color="#CCCCCC"> as in this case static</font>

342
00:19:03,990 --> 00:19:09,210
routes the the admin distance would be

343
00:19:06,840 --> 00:19:11,850
<font color="#CCCCCC">said</font><font color="#E5E5E5"> completely based on whether it's an</font>

344
00:19:09,210 --> 00:19:13,740
<font color="#CCCCCC">IV GP session or an EVP session so the</font>

345
00:19:11,850 --> 00:19:16,949
static routes can effectively<font color="#E5E5E5"> monitored</font>

346
00:19:13,740 --> 00:19:19,470
in that way and once you do a

347
00:19:16,950 --> 00:19:21,420
redistribute static your adjacency<font color="#E5E5E5"> out</font>

348
00:19:19,470 --> 00:19:24,050
<font color="#E5E5E5">rib just gets populated based on what</font>

349
00:19:21,420 --> 00:19:27,330
the controller published so effectively

350
00:19:24,050 --> 00:19:29,669
<font color="#E5E5E5">with using</font><font color="#CCCCCC"> bgp only to establish</font>

351
00:19:27,330 --> 00:19:31,020
membership and<font color="#CCCCCC"> lan routes but</font><font color="#E5E5E5"> we are</font>

352
00:19:29,670 --> 00:19:34,140
actually doing<font color="#E5E5E5"> the entire</font><font color="#CCCCCC"> rib</font>

353
00:19:31,020 --> 00:19:38,610
calculation and creation<font color="#CCCCCC"> into</font><font color="#E5E5E5"> Redis</font>

354
00:19:34,140 --> 00:19:40,290
database<font color="#E5E5E5"> up top in the controller so I</font>

355
00:19:38,610 --> 00:19:42,479
was making<font color="#CCCCCC"> a few last-minute changes I</font>

356
00:19:40,290 --> 00:19:44,659
hope I don't break my<font color="#CCCCCC"> code but let me</font>

357
00:19:42,480 --> 00:19:44,660
see

358
00:20:43,340 --> 00:20:46,059
<font color="#E5E5E5">okay</font>

359
00:21:06,440 --> 00:21:09,440
second

360
00:21:29,610 --> 00:21:37,360
so sorry<font color="#E5E5E5"> all right what do you</font><font color="#CCCCCC"> actually</font>

361
00:21:34,600 --> 00:21:39,790
<font color="#E5E5E5">see happening is that as</font><font color="#CCCCCC"> the routes</font><font color="#E5E5E5"> are</font>

362
00:21:37,360 --> 00:21:41,530
being learned from router<font color="#CCCCCC"> 2 on to in</font>

363
00:21:39,790 --> 00:21:42,760
through<font color="#E5E5E5"> open</font><font color="#CCCCCC"> BMP</font><font color="#E5E5E5"> we're pushing all of</font>

364
00:21:41,530 --> 00:21:44,560
<font color="#E5E5E5">that into the cup covers and that's</font>

365
00:21:42,760 --> 00:21:46,420
being learned by the threads<font color="#E5E5E5"> running and</font>

366
00:21:44,560 --> 00:21:48,639
effectively<font color="#CCCCCC"> looking at the Kafka events</font>

367
00:21:46,420 --> 00:21:52,330
coming<font color="#E5E5E5"> in what you're</font><font color="#CCCCCC"> noticing here is</font>

368
00:21:48,640 --> 00:21:54,760
that as each of<font color="#CCCCCC"> the routes come in we're</font>

369
00:21:52,330 --> 00:21:56,800
able to<font color="#E5E5E5"> sort of immediately understand</font>

370
00:21:54,760 --> 00:21:58,720
whether<font color="#E5E5E5"> they're add or delete</font><font color="#CCCCCC"> events for</font>

371
00:21:56,800 --> 00:22:01,149
<font color="#CCCCCC">each of the prefixes</font><font color="#E5E5E5"> and we create an</font>

372
00:21:58,720 --> 00:22:04,060
entire rip tree for all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> routes</font>

373
00:22:01,150 --> 00:22:07,720
coming<font color="#E5E5E5"> in the way we at least try</font><font color="#CCCCCC"> to</font>

374
00:22:04,060 --> 00:22:09,550
monitor all the routes<font color="#CCCCCC"> is to make sure</font>

375
00:22:07,720 --> 00:22:10,780
<font color="#E5E5E5">that we create a tree for the routes</font><font color="#CCCCCC"> I</font>

376
00:22:09,550 --> 00:22:12,850
don't want to get into details<font color="#E5E5E5"> of all of</font>

377
00:22:10,780 --> 00:22:15,100
<font color="#E5E5E5">the code but effectively we are</font>

378
00:22:12,850 --> 00:22:16,929
mirroring<font color="#E5E5E5"> what BGP would do on the</font>

379
00:22:15,100 --> 00:22:20,129
router but do it<font color="#E5E5E5"> on the controller only</font>

380
00:22:16,930 --> 00:22:22,690
<font color="#CCCCCC">in terms of rip creation we don't handle</font>

381
00:22:20,130 --> 00:22:25,260
updates<font color="#E5E5E5"> BGP updates we don't handle</font>

382
00:22:22,690 --> 00:22:27,190
<font color="#CCCCCC">neighbor messages etcetera</font><font color="#E5E5E5"> so instead of</font>

383
00:22:25,260 --> 00:22:28,780
re-implementing a controller which

384
00:22:27,190 --> 00:22:31,210
basically does<font color="#E5E5E5"> peering with</font><font color="#CCCCCC"> all the</font>

385
00:22:28,780 --> 00:22:32,980
routers<font color="#E5E5E5"> we only concentrate</font><font color="#CCCCCC"> on trip</font>

386
00:22:31,210 --> 00:22:34,780
calculation<font color="#E5E5E5"> and let the peering and</font>

387
00:22:32,980 --> 00:22:36,310
everything we happen<font color="#E5E5E5"> purely on the</font>

388
00:22:34,780 --> 00:22:37,960
routers themselves<font color="#E5E5E5"> so we are not</font>

389
00:22:36,310 --> 00:22:40,179
reimplemented a protocol we just

390
00:22:37,960 --> 00:22:42,730
allowing ourselves to completely

391
00:22:40,180 --> 00:22:45,160
deconstruct<font color="#E5E5E5"> all of the ribs in BGP so</font>

392
00:22:42,730 --> 00:22:47,650
that the user<font color="#CCCCCC"> can has complete control</font>

393
00:22:45,160 --> 00:22:50,920
<font color="#CCCCCC">over what goes</font><font color="#E5E5E5"> into each rib that BGP</font>

394
00:22:47,650 --> 00:22:52,300
handles which are for them<font color="#CCCCCC"> alright also</font>

395
00:22:50,920 --> 00:22:54,450
if I can just<font color="#E5E5E5"> show you another part of</font>

396
00:22:52,300 --> 00:22:54,450
<font color="#E5E5E5">this</font>

397
00:23:27,720 --> 00:23:33,190
so in case somebody still wants to see

398
00:23:30,460 --> 00:23:35,320
<font color="#E5E5E5">like the</font><font color="#CCCCCC"> CLI will now be red</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> best</font><font color="#E5E5E5"> you</font>

399
00:23:33,190 --> 00:23:37,029
<font color="#E5E5E5">can exactly</font><font color="#CCCCCC"> query all the keys as you</font>

400
00:23:35,320 --> 00:23:39,580
<font color="#E5E5E5">need and try and figure out exactly</font>

401
00:23:37,029 --> 00:23:43,179
<font color="#E5E5E5">what's happening</font><font color="#CCCCCC"> in each rib you can of</font>

402
00:23:39,580 --> 00:23:44,889
course<font color="#E5E5E5"> construct your own sort of CLI on</font>

403
00:23:43,179 --> 00:23:46,989
top of it by<font color="#CCCCCC"> creating a Python client</font>

404
00:23:44,889 --> 00:23:49,299
that queries<font color="#E5E5E5"> this and figures out what</font>

405
00:23:46,989 --> 00:23:51,580
you want<font color="#E5E5E5"> to do with each part of this</font><font color="#CCCCCC"> in</font>

406
00:23:49,299 --> 00:23:53,139
this case<font color="#E5E5E5"> since I've only populated the</font>

407
00:23:51,580 --> 00:24:02,109
adjacency<font color="#E5E5E5"> in rib I'll show you what it</font>

408
00:23:53,139 --> 00:24:03,789
looks like<font color="#CCCCCC"> as I mentioned</font><font color="#E5E5E5"> you get all</font>

409
00:24:02,109 --> 00:24:06,668
the routers<font color="#E5E5E5"> that have been pushing the</font>

410
00:24:03,789 --> 00:24:08,649
data into<font color="#E5E5E5"> the open</font><font color="#CCCCCC"> BMP collector</font><font color="#E5E5E5"> along</font>

411
00:24:06,669 --> 00:24:10,160
with the hashes corresponding to each

412
00:24:08,649 --> 00:24:13,299
other<font color="#CCCCCC"> out</font>

413
00:24:10,160 --> 00:24:13,299
[Music]

414
00:24:19,990 --> 00:24:25,990
and once you<font color="#CCCCCC"> take a</font><font color="#E5E5E5"> look at any of the</font>

415
00:24:23,980 --> 00:24:27,580
data as as it<font color="#E5E5E5"> keeps coming in what you</font>

416
00:24:25,990 --> 00:24:30,040
notice is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> all the routes being</font>

417
00:24:27,580 --> 00:24:32,740
<font color="#CCCCCC">learnt are effectively pushed in to a</font>

418
00:24:30,040 --> 00:24:35,080
separate<font color="#E5E5E5"> JSON which in this case is the</font>

419
00:24:32,740 --> 00:24:37,510
adjacency<font color="#CCCCCC"> engine</font><font color="#E5E5E5"> and as you</font><font color="#CCCCCC"> continue to</font>

420
00:24:35,080 --> 00:24:39,970
<font color="#CCCCCC">populate</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> of the pieces</font><font color="#E5E5E5"> one by one</font>

421
00:24:37,510 --> 00:24:41,770
<font color="#CCCCCC">you will</font><font color="#E5E5E5"> notice</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> each rib gets</font>

422
00:24:39,970 --> 00:24:44,920
populated one by one as a separate<font color="#E5E5E5"> JSON</font>

423
00:24:41,770 --> 00:24:47,110
entity so this helps<font color="#E5E5E5"> us also isolate all</font>

424
00:24:44,920 --> 00:24:49,990
<font color="#E5E5E5">the pieces of code so</font><font color="#CCCCCC"> as you go ahead</font>

425
00:24:47,110 --> 00:24:52,479
and provide<font color="#E5E5E5"> your own logic for route</font>

426
00:24:49,990 --> 00:24:54,610
policies or own logic for path<font color="#E5E5E5"> selection</font>

427
00:24:52,480 --> 00:24:56,350
we can<font color="#E5E5E5"> do that or we can fall back to</font>

428
00:24:54,610 --> 00:24:58,870
<font color="#E5E5E5">normal BGP path selection in</font><font color="#CCCCCC"> doubt</font>

429
00:24:56,350 --> 00:25:01,030
policy concepts so in a way that's

430
00:24:58,870 --> 00:25:02,320
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> sort of the</font><font color="#CCCCCC"> the gist of it</font><font color="#E5E5E5"> we</font>

431
00:25:01,030 --> 00:25:04,480
weren't able to complete<font color="#CCCCCC"> the whole thing</font>

432
00:25:02,320 --> 00:25:07,149
but I think<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can probably do it later</font>

433
00:25:04,480 --> 00:25:23,160
as well with plugins<font color="#E5E5E5"> all right thank you</font>

434
00:25:07,150 --> 00:25:25,450
<font color="#E5E5E5">all</font><font color="#CCCCCC"> right thank you so next we have IX</font><font color="#E5E5E5"> 1</font>

435
00:25:23,160 --> 00:25:27,550
<font color="#CCCCCC">so whoever's representing for IX on</font>

436
00:25:25,450 --> 00:25:28,870
please come on<font color="#E5E5E5"> up</font><font color="#CCCCCC"> I know yeah I think</font>

437
00:25:27,550 --> 00:25:30,639
<font color="#E5E5E5">you're splitting into kind of</font><font color="#CCCCCC"> two groups</font>

438
00:25:28,870 --> 00:25:33,060
<font color="#E5E5E5">whether you can just both come up and do</font>

439
00:25:30,640 --> 00:25:33,060
at<font color="#E5E5E5"> the same time</font>

440
00:26:09,820 --> 00:26:15,830
<font color="#CCCCCC">alright so we</font><font color="#E5E5E5"> just grabbed an item off</font>

441
00:26:13,010 --> 00:26:18,500
the list<font color="#CCCCCC"> I'm not sure who added it but</font>

442
00:26:15,830 --> 00:26:20,929
whoever<font color="#E5E5E5"> did thank you</font><font color="#CCCCCC"> it was a measure</font>

443
00:26:18,500 --> 00:26:25,040
when<font color="#CCCCCC"> link latency router to router and</font>

444
00:26:20,930 --> 00:26:29,320
check<font color="#CCCCCC"> for changes so we took this and</font>

445
00:26:25,040 --> 00:26:29,320
tried<font color="#CCCCCC"> to</font><font color="#E5E5E5"> apply to appearing exchange so</font>

446
00:26:29,500 --> 00:26:36,770
we set up a<font color="#CCCCCC"> django</font><font color="#E5E5E5"> back-end so you could</font>

447
00:26:34,610 --> 00:26:39,500
actually<font color="#E5E5E5"> create router objects define</font>

448
00:26:36,770 --> 00:26:42,410
exchanges and authentication for all

449
00:26:39,500 --> 00:26:46,010
your different<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> as well as peers</font>

450
00:26:42,410 --> 00:26:47,090
and track<font color="#E5E5E5"> polling from your edge device</font>

451
00:26:46,010 --> 00:26:53,840
to the other<font color="#CCCCCC"> peers</font>

452
00:26:47,090 --> 00:26:55,790
so the idea is<font color="#CCCCCC"> we used</font><font color="#E5E5E5"> py easy and when</font>

453
00:26:53,840 --> 00:26:57,980
you send<font color="#E5E5E5"> a poll it'll actually log into</font>

454
00:26:55,790 --> 00:27:00,139
the device<font color="#E5E5E5"> and then pull whatever</font><font color="#CCCCCC"> peer</font>

455
00:26:57,980 --> 00:27:03,280
you like<font color="#E5E5E5"> and then measure</font><font color="#CCCCCC"> the latency</font>

456
00:27:00,140 --> 00:27:05,390
<font color="#E5E5E5">and record it back into the database</font>

457
00:27:03,280 --> 00:27:07,610
<font color="#CCCCCC">based on</font><font color="#E5E5E5"> that you could take some other</font>

458
00:27:05,390 --> 00:27:08,840
actions<font color="#CCCCCC"> if you're seeing spikes and</font>

459
00:27:07,610 --> 00:27:11,330
<font color="#CCCCCC">latency to certain peers you could</font>

460
00:27:08,840 --> 00:27:14,629
automatically tear them down<font color="#CCCCCC"> if you're</font>

461
00:27:11,330 --> 00:27:15,800
seeing spikes<font color="#CCCCCC"> to</font><font color="#E5E5E5"> certain peers on</font><font color="#CCCCCC"> the</font>

462
00:27:14,630 --> 00:27:17,810
exchange but not others it might<font color="#E5E5E5"> help</font>

463
00:27:15,800 --> 00:27:19,639
you identify some<font color="#E5E5E5"> congestion issues or</font>

464
00:27:17,810 --> 00:27:25,760
something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> but we never got to</font>

465
00:27:19,640 --> 00:27:28,490
that<font color="#CCCCCC"> point what we did get to so you can</font>

466
00:27:25,760 --> 00:27:31,490
go into the database<font color="#E5E5E5"> and define your</font>

467
00:27:28,490 --> 00:27:37,010
objects<font color="#E5E5E5"> and methods of authentication</font>

468
00:27:31,490 --> 00:27:42,370
<font color="#E5E5E5">and exchanges and which routers they</font>

469
00:27:37,010 --> 00:27:42,370
actually sit<font color="#CCCCCC"> on and</font>

470
00:27:47,850 --> 00:27:53,770
so you can send<font color="#CCCCCC"> polls from a device to</font>

471
00:27:51,430 --> 00:28:02,200
another<font color="#CCCCCC"> peer that it's connected to on</font>

472
00:27:53,770 --> 00:28:07,389
the peering exchange and it will get

473
00:28:02,200 --> 00:28:09,280
that<font color="#CCCCCC"> data and populate it back</font><font color="#E5E5E5"> into the</font>

474
00:28:07,390 --> 00:28:13,120
database<font color="#E5E5E5"> back-end and you've got your</font>

475
00:28:09,280 --> 00:28:19,960
ping min<font color="#E5E5E5"> Max and average those values</font>

476
00:28:13,120 --> 00:28:21,459
have<font color="#E5E5E5"> to be divided by 10,000 sorry and</font>

477
00:28:19,960 --> 00:28:24,340
you can see each one<font color="#E5E5E5"> the idea was</font><font color="#CCCCCC"> that</font>

478
00:28:21,460 --> 00:28:26,680
to also<font color="#E5E5E5"> take this data and maybe put it</font>

479
00:28:24,340 --> 00:28:29,020
in the plot<font color="#E5E5E5"> live so you could graph it</font>

480
00:28:26,680 --> 00:28:31,590
<font color="#E5E5E5">based on a</font><font color="#CCCCCC"> specified range</font><font color="#E5E5E5"> but we ran</font>

481
00:28:29,020 --> 00:28:39,629
<font color="#CCCCCC">out of time and didn't get</font><font color="#E5E5E5"> to do that</font>

482
00:28:31,590 --> 00:28:39,629
you won't talk with different changes

483
00:28:41,370 --> 00:28:51,370
all right yeah I'll go to that<font color="#E5E5E5"> one</font><font color="#CCCCCC"> one</font>

484
00:28:47,710 --> 00:28:54,460
<font color="#CCCCCC">sec - so</font><font color="#E5E5E5"> another one we did</font><font color="#CCCCCC"> was if</font>

485
00:28:51,370 --> 00:28:56,679
you're in a situation<font color="#E5E5E5"> where you you peer</font>

486
00:28:54,460 --> 00:28:58,510
at multiple exchanges<font color="#CCCCCC"> and there's</font>

487
00:28:56,680 --> 00:29:00,550
another<font color="#CCCCCC"> ASN that's also</font><font color="#E5E5E5"> multiple</font>

488
00:28:58,510 --> 00:29:03,310
exchanges<font color="#E5E5E5"> and you have</font><font color="#CCCCCC"> sessions with</font>

489
00:29:00,550 --> 00:29:05,669
them<font color="#E5E5E5"> at some exchanges but not all</font><font color="#CCCCCC"> of</font>

490
00:29:03,310 --> 00:29:07,780
them<font color="#E5E5E5"> it'll run through the</font><font color="#CCCCCC"> different</font>

491
00:29:05,670 --> 00:29:09,370
exchanges that<font color="#E5E5E5"> you both have a present</font>

492
00:29:07,780 --> 00:29:11,530
set and see if you have a peer session

493
00:29:09,370 --> 00:29:13,080
configured and then if not recommend

494
00:29:11,530 --> 00:29:15,850
these set up hearing at that exchange

495
00:29:13,080 --> 00:29:19,060
<font color="#E5E5E5">and the idea was</font><font color="#CCCCCC"> to even automate</font><font color="#E5E5E5"> that</font>

496
00:29:15,850 --> 00:29:21,520
into like an email template from peering

497
00:29:19,060 --> 00:29:23,050
DB so just<font color="#E5E5E5"> send off a hey we're both</font>

498
00:29:21,520 --> 00:29:24,100
here we already<font color="#CCCCCC"> peer at the following</font>

499
00:29:23,050 --> 00:29:27,070
exchanges<font color="#E5E5E5"> would you like to set up</font>

500
00:29:24,100 --> 00:29:29,490
hearing something<font color="#E5E5E5"> like that</font><font color="#CCCCCC"> we got part</font>

501
00:29:27,070 --> 00:29:29,490
<font color="#E5E5E5">of it done</font>

502
00:29:33,450 --> 00:29:38,770
so it grabs data from<font color="#CCCCCC"> peering DB and it</font>

503
00:29:37,120 --> 00:29:44,229
grabs data from this<font color="#CCCCCC"> back-end here as</font>

504
00:29:38,770 --> 00:29:46,210
well so we got<font color="#E5E5E5"> peering setup with</font>

505
00:29:44,230 --> 00:29:50,340
Microsoft<font color="#E5E5E5"> at the Seattle internet</font>

506
00:29:46,210 --> 00:29:53,650
exchange and it grabs all<font color="#CCCCCC"> the Microsoft</font>

507
00:29:50,340 --> 00:29:55,740
<font color="#CCCCCC">ASN data from peering DB and it runs</font>

508
00:29:53,650 --> 00:29:58,840
<font color="#E5E5E5">through the list and sees that we have</font>

509
00:29:55,740 --> 00:30:00,400
peering<font color="#CCCCCC"> presence</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> 6:00 and AM 6 but</font>

510
00:29:58,840 --> 00:30:03,820
we're only<font color="#E5E5E5"> appearing with them at</font><font color="#CCCCCC"> 6:00</font>

511
00:30:00,400 --> 00:30:05,200
and not am<font color="#E5E5E5"> sick so at this point we</font>

512
00:30:03,820 --> 00:30:06,490
would have<font color="#E5E5E5"> liked to write the code</font><font color="#CCCCCC"> to</font>

513
00:30:05,200 --> 00:30:16,330
raise the recommendation<font color="#E5E5E5"> to purify</font>

514
00:30:06,490 --> 00:30:20,500
monastics as well thank you

515
00:30:16,330 --> 00:30:21,549
so<font color="#CCCCCC"> peer validation I don't actually know</font>

516
00:30:20,500 --> 00:30:23,200
<font color="#CCCCCC">the right name but we're going</font><font color="#E5E5E5"> to go</font>

517
00:30:21,549 --> 00:30:26,080
<font color="#E5E5E5">with that and you can</font><font color="#CCCCCC"> correct me when</font>

518
00:30:23,200 --> 00:30:28,150
<font color="#E5E5E5">you get up</font><font color="#CCCCCC"> here and then</font><font color="#E5E5E5"> after that</font>

519
00:30:26,080 --> 00:30:32,100
we'll<font color="#E5E5E5"> have Brandon and then after that</font>

520
00:30:28,150 --> 00:30:32,100
we will do some<font color="#E5E5E5"> voting</font>

521
00:30:52,100 --> 00:30:56,340
<font color="#E5E5E5">all right so we weren't able to to</font>

522
00:30:54,990 --> 00:30:58,710
<font color="#E5E5E5">complete all the way through it was</font>

523
00:30:56,340 --> 00:31:00,480
three<font color="#CCCCCC"> of us and mainly what we were</font>

524
00:30:58,710 --> 00:31:02,040
trying<font color="#CCCCCC"> to do is with a small</font><font color="#E5E5E5"> amount of</font>

525
00:31:00,480 --> 00:31:04,230
the smallest<font color="#E5E5E5"> amount of input create a</font>

526
00:31:02,040 --> 00:31:10,020
source<font color="#E5E5E5"> of truth on</font><font color="#CCCCCC"> that source of</font><font color="#E5E5E5"> truth</font>

527
00:31:04,230 --> 00:31:13,380
<font color="#CCCCCC">basically have a model created</font><font color="#E5E5E5"> for for</font>

528
00:31:10,020 --> 00:31:15,389
every given device<font color="#E5E5E5"> I have an example</font>

529
00:31:13,380 --> 00:31:17,850
<font color="#E5E5E5">device from here</font>

530
00:31:15,390 --> 00:31:20,220
I was just went<font color="#E5E5E5"> through and did it with</font>

531
00:31:17,850 --> 00:31:24,570
<font color="#E5E5E5">XML since I wanted something that would</font>

532
00:31:20,220 --> 00:31:26,040
persist locally<font color="#CCCCCC"> and from if you want to</font>

533
00:31:24,570 --> 00:31:31,950
show the small<font color="#E5E5E5"> amount like the actual</font>

534
00:31:26,040 --> 00:31:34,980
<font color="#CCCCCC">inputs that generated</font><font color="#E5E5E5"> that yeah so</font>

535
00:31:31,950 --> 00:31:39,990
basically it's a CSV<font color="#CCCCCC"> that would</font>

536
00:31:34,980 --> 00:31:42,330
<font color="#E5E5E5">basically be a name vendor</font><font color="#CCCCCC"> did the</font>

537
00:31:39,990 --> 00:31:44,970
<font color="#E5E5E5">exchange it was at and what</font><font color="#CCCCCC"> state was in</font>

538
00:31:42,330 --> 00:31:47,879
really<font color="#E5E5E5"> what happens is by the end of it</font>

539
00:31:44,970 --> 00:31:50,610
<font color="#CCCCCC">what we</font><font color="#E5E5E5"> wanted to do is</font><font color="#CCCCCC"> expected versus</font>

540
00:31:47,880 --> 00:31:52,830
actual<font color="#CCCCCC"> validation</font><font color="#E5E5E5"> so where state</font>

541
00:31:50,610 --> 00:31:56,010
validation was always the intended

542
00:31:52,830 --> 00:31:57,120
target at the end of the day<font color="#E5E5E5"> so active</font>

543
00:31:56,010 --> 00:32:02,370
<font color="#E5E5E5">being the device is actually in</font>

544
00:31:57,120 --> 00:32:04,169
<font color="#CCCCCC">production and from that then you'd be</font>

545
00:32:02,370 --> 00:32:06,540
able<font color="#E5E5E5"> to consistently through the</font><font color="#CCCCCC"> Jinja</font>

546
00:32:04,170 --> 00:32:09,090
templates<font color="#E5E5E5"> alter whether it was in if</font>

547
00:32:06,540 --> 00:32:12,120
it's in a prod<font color="#CCCCCC"> state then</font><font color="#E5E5E5"> it would be in</font>

548
00:32:09,090 --> 00:32:14,790
a pushing traffic and<font color="#CCCCCC"> an on overloaded</font>

549
00:32:12,120 --> 00:32:17,219
<font color="#E5E5E5">state and if it was in a drain state it</font>

550
00:32:14,790 --> 00:32:20,460
would<font color="#E5E5E5"> be like maintenance or incident or</font>

551
00:32:17,220 --> 00:32:22,080
<font color="#CCCCCC">pre-production anything like that I'll</font>

552
00:32:20,460 --> 00:32:26,730
<font color="#E5E5E5">actually talk about his part with the</font>

553
00:32:22,080 --> 00:32:28,590
<font color="#E5E5E5">templating as well sure so I started out</font>

554
00:32:26,730 --> 00:32:29,940
trying<font color="#CCCCCC"> to like solve all the world's</font>

555
00:32:28,590 --> 00:32:31,379
problems and didn't<font color="#E5E5E5"> think of this very</font>

556
00:32:29,940 --> 00:32:34,200
hockey and<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> it was like</font><font color="#CCCCCC"> a final</font>

557
00:32:31,380 --> 00:32:36,990
<font color="#CCCCCC">production design so I had like 10</font>

558
00:32:34,200 --> 00:32:39,480
<font color="#E5E5E5">different ginger models and nesting and</font>

559
00:32:36,990 --> 00:32:41,880
then by the<font color="#E5E5E5"> end I had</font><font color="#CCCCCC"> two they're</font><font color="#E5E5E5"> very</font>

560
00:32:39,480 --> 00:32:43,740
like<font color="#CCCCCC"> twenty lines long each so in the</font>

561
00:32:41,880 --> 00:32:45,630
end I I did get towards the<font color="#CCCCCC"> end we</font>

562
00:32:43,740 --> 00:32:47,130
didn't we ran out of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> to actually</font>

563
00:32:45,630 --> 00:32:48,510
<font color="#CCCCCC">integrate the data</font><font color="#E5E5E5"> source with</font><font color="#CCCCCC"> the</font>

564
00:32:47,130 --> 00:32:49,920
<font color="#CCCCCC">gingiva but they both do exist it's a</font>

565
00:32:48,510 --> 00:32:52,020
matter of just<font color="#E5E5E5"> unifying the namespaces</font>

566
00:32:49,920 --> 00:32:53,760
but it does sort<font color="#E5E5E5"> of point out one of the</font>

567
00:32:52,020 --> 00:32:55,530
things<font color="#E5E5E5"> we did in our group that I think</font>

568
00:32:53,760 --> 00:32:57,000
is interesting terms<font color="#CCCCCC"> hacks like what</font>

569
00:32:55,530 --> 00:32:57,470
went wrong<font color="#E5E5E5"> but I don't</font><font color="#CCCCCC"> know it was</font>

570
00:32:57,000 --> 00:33:00,350
<font color="#E5E5E5">necessarily</font>

571
00:32:57,470 --> 00:33:02,990
wrong<font color="#CCCCCC"> we all</font><font color="#E5E5E5"> went</font><font color="#CCCCCC"> for things</font><font color="#E5E5E5"> that we</font>

572
00:33:00,350 --> 00:33:05,600
hadn't<font color="#E5E5E5"> done before</font><font color="#CCCCCC"> so I've done a</font><font color="#E5E5E5"> lot of</font>

573
00:33:02,990 --> 00:33:07,159
SNMP modeling and that<font color="#CCCCCC"> would've been a</font>

574
00:33:05,600 --> 00:33:09,559
very<font color="#CCCCCC"> easy thing for</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do but I</font>

575
00:33:07,159 --> 00:33:10,700
didn't do that<font color="#E5E5E5"> part and instead</font><font color="#CCCCCC"> Gregor's</font>

576
00:33:09,559 --> 00:33:12,830
did that because that<font color="#E5E5E5"> was something he</font>

577
00:33:10,700 --> 00:33:14,929
<font color="#E5E5E5">wanted</font><font color="#CCCCCC"> to investigate doing SNMP at the</font>

578
00:33:12,830 --> 00:33:17,000
CLI<font color="#E5E5E5"> rather than doing</font><font color="#CCCCCC"> a mega screen</font>

579
00:33:14,929 --> 00:33:18,559
scrape so each of us went for the most

580
00:33:17,000 --> 00:33:19,880
<font color="#CCCCCC">challenging thing that would expand us</font>

581
00:33:18,559 --> 00:33:21,649
the most<font color="#E5E5E5"> which I actually learned</font><font color="#CCCCCC"> quite</font>

582
00:33:19,880 --> 00:33:23,929
a<font color="#CCCCCC"> bit today and I think everyone</font><font color="#E5E5E5"> did so</font>

583
00:33:21,650 --> 00:33:25,850
in that sense<font color="#E5E5E5"> it was a success and we</font>

584
00:33:23,929 --> 00:33:28,549
actually did get close<font color="#E5E5E5"> to finishing</font>

585
00:33:25,850 --> 00:33:31,689
<font color="#CCCCCC">there are pieces</font><font color="#E5E5E5"> it's a matter of doing</font>

586
00:33:28,549 --> 00:33:31,690
a<font color="#E5E5E5"> little bit of</font><font color="#CCCCCC"> stitching at the end</font>

587
00:33:33,970 --> 00:33:41,059
nothing<font color="#E5E5E5"> much to add but uh I'm not a</font>

588
00:33:36,710 --> 00:33:43,520
programmer<font color="#CCCCCC"> yet in any merchant way so it</font>

589
00:33:41,059 --> 00:33:45,350
was<font color="#CCCCCC"> mostly kind</font><font color="#E5E5E5"> of a exercise but I</font>

590
00:33:43,520 --> 00:33:48,470
think I did<font color="#CCCCCC"> quite well</font><font color="#E5E5E5"> I was able to get</font>

591
00:33:45,350 --> 00:33:52,549
<font color="#E5E5E5">a list of peers from given device</font>

592
00:33:48,470 --> 00:33:56,480
through SNMP<font color="#CCCCCC"> and find how many prefixes</font>

593
00:33:52,549 --> 00:33:59,450
are being learned<font color="#E5E5E5"> and advertised</font><font color="#CCCCCC"> so I</font>

594
00:33:56,480 --> 00:34:02,090
would probably<font color="#E5E5E5"> need another few hours</font><font color="#CCCCCC"> to</font>

595
00:33:59,450 --> 00:34:13,190
get the data cleaned and ready<font color="#CCCCCC"> for them</font>

596
00:34:02,090 --> 00:34:16,960
to<font color="#E5E5E5"> do to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> part thank you</font>

597
00:34:13,190 --> 00:34:16,960
<font color="#CCCCCC">brainy's</font><font color="#E5E5E5"> got one last thing to present</font>

598
00:34:24,239 --> 00:34:32,279
that's my<font color="#CCCCCC"> phone I would have found</font><font color="#E5E5E5"> you</font>

599
00:34:29,260 --> 00:34:32,280
<font color="#CCCCCC">I'll check</font><font color="#E5E5E5"> down</font>

600
00:34:39,960 --> 00:34:44,339
everybody had to<font color="#E5E5E5"> do this on that was</font>

601
00:34:41,770 --> 00:34:44,339
back to man

602
00:34:55,090 --> 00:35:01,870
<font color="#E5E5E5">okay my hack</font><font color="#CCCCCC"> is a meta hack</font><font color="#E5E5E5"> it's a hack</font>

603
00:34:58,510 --> 00:35:02,890
about hackathons so we wanted<font color="#E5E5E5"> a way we</font>

604
00:35:01,870 --> 00:35:04,990
were kind<font color="#CCCCCC"> of chatting before we were</font>

605
00:35:02,890 --> 00:35:07,330
kind of one away that we could have a

606
00:35:04,990 --> 00:35:09,790
master<font color="#E5E5E5"> get repo or some way</font><font color="#CCCCCC"> that people</font>

607
00:35:07,330 --> 00:35:11,650
could discover these hacks<font color="#CCCCCC"> not</font><font color="#E5E5E5"> only at</font>

608
00:35:09,790 --> 00:35:13,150
this hackathon but<font color="#CCCCCC"> another</font><font color="#E5E5E5"> hackathon so</font>

609
00:35:11,650 --> 00:35:16,870
I thought hey why don't<font color="#E5E5E5"> we just</font><font color="#CCCCCC"> throw</font>

610
00:35:13,150 --> 00:35:18,790
<font color="#E5E5E5">together a sequel backed</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> webpage so</font>

611
00:35:16,870 --> 00:35:21,670
that's what I have here<font color="#E5E5E5"> hack</font>

612
00:35:18,790 --> 00:35:22,930
<font color="#E5E5E5">Rhaego</font><font color="#CCCCCC"> Rago I don't know it's a</font><font color="#E5E5E5"> horrible</font>

613
00:35:21,670 --> 00:35:25,450
<font color="#E5E5E5">name will come</font><font color="#CCCCCC"> up some better later on</font>

614
00:35:22,930 --> 00:35:28,180
<font color="#CCCCCC">but the</font><font color="#E5E5E5"> idea here</font><font color="#CCCCCC"> is you have a list of</font>

615
00:35:25,450 --> 00:35:30,430
<font color="#E5E5E5">hackathons so there's one in there today</font>

616
00:35:28,180 --> 00:35:31,690
<font color="#E5E5E5">and then there's a bunch</font><font color="#CCCCCC"> of hacks</font><font color="#E5E5E5"> so</font>

617
00:35:30,430 --> 00:35:33,069
these are just all made up because<font color="#E5E5E5"> I</font>

618
00:35:31,690 --> 00:35:36,010
don't had I didn't have<font color="#E5E5E5"> your hacks while</font>

619
00:35:33,070 --> 00:35:38,320
I was I was<font color="#E5E5E5"> doing this</font><font color="#CCCCCC"> we can link to</font>

620
00:35:36,010 --> 00:35:39,610
people's code we can find out<font color="#E5E5E5"> the peeps</font>

621
00:35:38,320 --> 00:35:41,970
that<font color="#E5E5E5"> are actually working on it</font>

622
00:35:39,610 --> 00:35:44,230
I<font color="#E5E5E5"> work with some</font><font color="#CCCCCC"> great teams</font><font color="#E5E5E5"> here</font>

623
00:35:41,970 --> 00:35:47,200
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> they're superstars</font>

624
00:35:44,230 --> 00:35:49,000
they're super supermen and<font color="#CCCCCC"> we can</font>

625
00:35:47,200 --> 00:35:51,790
actually<font color="#E5E5E5"> click on one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these and get</font>

626
00:35:49,000 --> 00:35:53,230
additional information<font color="#E5E5E5"> so I think next</font>

627
00:35:51,790 --> 00:35:55,870
steps here<font color="#E5E5E5"> is kind of adding in a voting</font>

628
00:35:53,230 --> 00:35:58,510
<font color="#CCCCCC">system</font><font color="#E5E5E5"> getting this to be cleaned up a</font>

629
00:35:55,870 --> 00:35:59,560
<font color="#E5E5E5">little bit more</font><font color="#CCCCCC"> and any other</font><font color="#E5E5E5"> idea so</font>

630
00:35:58,510 --> 00:36:01,840
that's<font color="#E5E5E5"> kind of why I wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> present</font>

631
00:35:59,560 --> 00:36:03,730
<font color="#E5E5E5">is I want your feedback what would be</font>

632
00:36:01,840 --> 00:36:04,690
<font color="#E5E5E5">really awesome to put in here and</font><font color="#CCCCCC"> here</font>

633
00:36:03,730 --> 00:36:07,690
what's<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that we can actually</font>

634
00:36:04,690 --> 00:36:10,240
have ready<font color="#CCCCCC"> in production it's</font><font color="#E5E5E5"> like stage</font>

635
00:36:07,690 --> 00:36:12,540
the next<font color="#E5E5E5"> time we have act on so thank</font>

636
00:36:10,240 --> 00:36:12,540
you<font color="#CCCCCC"> very much</font>

