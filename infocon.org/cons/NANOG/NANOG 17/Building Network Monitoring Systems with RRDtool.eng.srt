1
00:00:02,029 --> 00:00:07,410
my name is Toby attacker I'm usually

2
00:00:05,430 --> 00:00:12,030
working as a system manager and have no

3
00:00:07,410 --> 00:00:14,250
idea about networking so but I have a

4
00:00:12,030 --> 00:00:23,820
sort of a hobby<font color="#E5E5E5"> and I right network</font>

5
00:00:14,250 --> 00:00:29,220
monitoring software in just a question

6
00:00:23,820 --> 00:00:35,219
up<font color="#E5E5E5"> front who's using mr TG ok so i can</font>

7
00:00:29,220 --> 00:00:37,110
<font color="#CCCCCC">assume that</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> this in a few</font>

8
00:00:35,219 --> 00:00:41,219
years ago I worked at a place where I

9
00:00:37,110 --> 00:00:43,410
did network network key stuff and I

10
00:00:41,219 --> 00:00:49,649
ended up writing this tool and it's

11
00:00:43,410 --> 00:00:51,360
<font color="#E5E5E5">grown since so this prison blue this</font>

12
00:00:49,649 --> 00:00:55,350
presentation will be about a new tool

13
00:00:51,360 --> 00:00:58,079
<font color="#E5E5E5">I've written it's called rd tool and</font>

14
00:00:55,350 --> 00:01:03,210
it's a system to store display time

15
00:00:58,079 --> 00:01:05,850
series data and it does<font color="#CCCCCC"> that in a very</font>

16
00:01:03,210 --> 00:01:08,880
compact way which will<font color="#E5E5E5"> not expand over</font>

17
00:01:05,850 --> 00:01:12,059
time and<font color="#E5E5E5"> it can also be used to present</font>

18
00:01:08,880 --> 00:01:15,750
this data in graphical format sort of

19
00:01:12,060 --> 00:01:20,030
like mr TG but only<font color="#CCCCCC"> part of it and done</font>

20
00:01:15,750 --> 00:01:20,030
in a more appropriate way

21
00:01:21,760 --> 00:01:27,510
oops<font color="#E5E5E5"> benign 29 slides</font>

22
00:01:38,159 --> 00:01:44,130
first I'm going<font color="#E5E5E5"> to show you some graphs</font>

23
00:01:40,560 --> 00:01:48,869
of well which you can produce this rd

24
00:01:44,130 --> 00:01:51,679
tool then<font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to tell you about</font>

25
00:01:48,869 --> 00:01:55,770
the roots of<font color="#E5E5E5"> rd tool how it came to be</font>

26
00:01:51,679 --> 00:01:56,850
going to explain how<font color="#E5E5E5"> it's designed tell</font>

27
00:01:55,770 --> 00:01:59,339
you something about<font color="#CCCCCC"> the implementation</font>

28
00:01:56,850 --> 00:02:03,390
<font color="#E5E5E5">of the program and</font><font color="#CCCCCC"> how you can use it in</font>

29
00:01:59,340 --> 00:02:06,509
your own tools then<font color="#E5E5E5"> I'll run down a</font>

30
00:02:03,390 --> 00:02:08,639
short list of existing applications

31
00:02:06,509 --> 00:02:11,280
which already use rd tool at the base

32
00:02:08,639 --> 00:02:15,208
<font color="#CCCCCC">I'm going</font><font color="#E5E5E5"> to have a little sales pitch</font>

33
00:02:11,280 --> 00:02:17,790
about<font color="#E5E5E5"> mr t g3 and finally</font><font color="#CCCCCC"> i'm going to</font>

34
00:02:15,209 --> 00:02:20,129
talk about how<font color="#E5E5E5"> to extend our d 2 in</font>

35
00:02:17,790 --> 00:02:23,578
future and after<font color="#E5E5E5"> my talk there'll be</font>

36
00:02:20,129 --> 00:02:29,238
another talk which will tell you about

37
00:02:23,579 --> 00:02:29,239
one possible way of<font color="#E5E5E5"> using rd tool</font>

38
00:02:33,890 --> 00:02:41,179
this is a graph showing the network

39
00:02:36,780 --> 00:02:45,330
traffic as it occurs between kada and

40
00:02:41,180 --> 00:02:47,489
the<font color="#E5E5E5"> internet k does</font><font color="#CCCCCC"> place where i've</font>

41
00:02:45,330 --> 00:02:50,489
been<font color="#E5E5E5"> working for the summer and they</font>

42
00:02:47,489 --> 00:02:54,959
actually<font color="#E5E5E5"> paid for the final development</font>

43
00:02:50,489 --> 00:02:57,690
stages of rd tool this graph here<font color="#CCCCCC"> shows</font>

44
00:02:54,959 --> 00:03:03,629
the distribution of traffic between UDP

45
00:02:57,690 --> 00:03:06,629
tcp<font color="#E5E5E5"> icmp and encapsulated IP you can</font>

46
00:03:03,629 --> 00:03:09,780
also do percentage graphs that's the

47
00:03:06,629 --> 00:03:11,429
same graph breath every<font color="#E5E5E5"> car every column</font>

48
00:03:09,780 --> 00:03:15,750
is expanding two hundred percent so that

49
00:03:11,430 --> 00:03:17,420
you can see the distribution better you

50
00:03:15,750 --> 00:03:19,890
see little line missing in this graph

51
00:03:17,420 --> 00:03:24,298
that's intentional there's actually data

52
00:03:19,890 --> 00:03:27,809
missing and in contrast<font color="#E5E5E5"> to mr TG rd tool</font>

53
00:03:24,299 --> 00:03:29,940
knows about unknown data so if ever

54
00:03:27,810 --> 00:03:33,319
there is inundated will not paint

55
00:03:29,940 --> 00:03:33,319
anything it will not flat line

56
00:03:36,770 --> 00:03:43,980
in 1995<font color="#E5E5E5"> I was working in the UK and we</font>

57
00:03:41,489 --> 00:03:46,470
had the<font color="#E5E5E5"> 64 K bit link into the internet</font>

58
00:03:43,980 --> 00:03:49,829
through the university<font color="#CCCCCC"> with 20,000</font>

59
00:03:46,470 --> 00:03:51,090
students so the link was pretty full all

60
00:03:49,830 --> 00:03:52,470
the time and everybody was very

61
00:03:51,090 --> 00:03:56,940
<font color="#E5E5E5">interested in knowing whether it was</font>

62
00:03:52,470 --> 00:04:00,330
down which<font color="#CCCCCC"> is full so I wrote this tool</font>

63
00:03:56,940 --> 00:04:03,569
which visualized the link status on the

64
00:04:00,330 --> 00:04:05,370
network<font color="#E5E5E5"> he is constant fire constant</font>

65
00:04:03,569 --> 00:04:09,238
size log files so I didn't have to

66
00:04:05,370 --> 00:04:12,180
bother with them filling up the desk and

67
00:04:09,239 --> 00:04:15,239
I published the tool on<font color="#CCCCCC"> the Internet it</font>

68
00:04:12,180 --> 00:04:19,228
grew in popularity quickly pretty

69
00:04:15,239 --> 00:04:22,290
quickly<font color="#E5E5E5"> and at the end of 95 I got a</font>

70
00:04:19,228 --> 00:04:25,320
patch from a friend of<font color="#CCCCCC"> above net which</font>

71
00:04:22,290 --> 00:04:26,940
speeded up the whole tool so it became

72
00:04:25,320 --> 00:04:33,030
useful to people who have to monitor

73
00:04:26,940 --> 00:04:36,300
more than<font color="#E5E5E5"> one 64k bit link but still mr</font>

74
00:04:33,030 --> 00:04:38,130
<font color="#E5E5E5">GG ethic got used on larger networks and</font>

75
00:04:36,300 --> 00:04:41,370
people were doing more diverse stuff

76
00:04:38,130 --> 00:04:43,740
with it it became sort of well patchy

77
00:04:41,370 --> 00:04:45,060
people sent in patches which didn't

78
00:04:43,740 --> 00:04:49,050
quite match but<font color="#E5E5E5"> I applied them</font>

79
00:04:45,060 --> 00:04:52,530
nevertheless and mot cheap which you can

80
00:04:49,050 --> 00:04:56,220
get today is very big it is a lot<font color="#E5E5E5"> of</font>

81
00:04:52,530 --> 00:05:02,130
<font color="#E5E5E5">things and it's like grown out of its</font>

82
00:04:56,220 --> 00:05:03,900
<font color="#E5E5E5">original shape koala especially there</font>

83
00:05:02,130 --> 00:05:06,210
was a lack of flexibility people who

84
00:05:03,900 --> 00:05:08,909
have started using<font color="#E5E5E5"> mr TG to monitor</font>

85
00:05:06,210 --> 00:05:16,159
things which I<font color="#E5E5E5"> never envisioned</font><font color="#CCCCCC"> like the</font>

86
00:05:08,910 --> 00:05:19,919
tide on<font color="#E5E5E5"> scripps pier in</font><font color="#CCCCCC"> san diego so in</font>

87
00:05:16,160 --> 00:05:22,080
1979<font color="#E5E5E5"> i started designing a new tool the</font>

88
00:05:19,919 --> 00:05:24,919
idea was basically breaking out the

89
00:05:22,080 --> 00:05:29,609
logging and graphing part of mr TG and

90
00:05:24,919 --> 00:05:33,900
rewriting it so I was<font color="#E5E5E5"> not going to write</font>

91
00:05:29,610 --> 00:05:36,660
a to which this collected data or create

92
00:05:33,900 --> 00:05:39,780
web pages but which allows you to put

93
00:05:36,660 --> 00:05:41,969
<font color="#E5E5E5">data into a database and then produce</font>

94
00:05:39,780 --> 00:05:44,508
graphs of that data

95
00:05:41,969 --> 00:05:47,009
it is going to be fully documented I

96
00:05:44,509 --> 00:05:49,769
actually wrote the documentation first

97
00:05:47,009 --> 00:05:53,069
and then started programming it uses

98
00:05:49,769 --> 00:05:55,259
floating-point math so you can show any

99
00:05:53,069 --> 00:05:57,809
numerical data you want into that tool

100
00:05:55,259 --> 00:06:01,139
it doesn't require the data to<font color="#E5E5E5"> be in</font>

101
00:05:57,809 --> 00:06:04,919
<font color="#CCCCCC">katra format anymore it knows about</font>

102
00:06:01,139 --> 00:06:07,349
unknown and it uses a<font color="#CCCCCC"> round robin based</font>

103
00:06:04,919 --> 00:06:11,128
logging mechanism which is much faster

104
00:06:07,349 --> 00:06:17,188
than what mr chi<font color="#E5E5E5"> chi did and it has</font>

105
00:06:11,129 --> 00:06:18,629
flexible and powerful graphing in the

106
00:06:17,189 --> 00:06:21,360
following<font color="#E5E5E5"> slides I'll tell you about the</font>

107
00:06:18,629 --> 00:06:25,039
implementation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> rd tool how that</font>

108
00:06:21,360 --> 00:06:28,889
logging works how you can create graphs

109
00:06:25,039 --> 00:06:31,889
some general points about how to use rd

110
00:06:28,889 --> 00:06:33,599
tool and the method for accessing rd

111
00:06:31,889 --> 00:06:35,639
tool from within your<font color="#E5E5E5"> own applications</font>

112
00:06:33,599 --> 00:06:38,128
because somehow you must<font color="#E5E5E5"> get</font><font color="#CCCCCC"> that data</font>

113
00:06:35,639 --> 00:06:44,929
<font color="#E5E5E5">into Rd tool and then tell it to graph</font>

114
00:06:38,129 --> 00:06:48,539
the data that's your work rd tool

115
00:06:44,929 --> 00:06:51,659
maintains a constant<font color="#E5E5E5"> fire constant size</font>

116
00:06:48,539 --> 00:06:53,969
log file which contains several data

117
00:06:51,659 --> 00:06:57,089
arrays and it writes data into these

118
00:06:53,969 --> 00:06:59,189
arrays in a round-robin manner so

119
00:06:57,089 --> 00:07:01,769
whenever<font color="#E5E5E5"> data gets written to disk the</font>

120
00:06:59,189 --> 00:07:06,749
transfer to disk is actually only that

121
00:07:01,769 --> 00:07:08,129
one data value and at the same time<font color="#E5E5E5"> the</font>

122
00:07:06,749 --> 00:07:10,469
log file doesn't grow so it's not just

123
00:07:08,129 --> 00:07:13,679
depending to the log file but it's<font color="#E5E5E5"> going</font>

124
00:07:10,469 --> 00:07:15,449
<font color="#E5E5E5">round robin in an array so once you've</font>

125
00:07:13,679 --> 00:07:21,089
set<font color="#CCCCCC"> up the log file you know how big</font><font color="#E5E5E5"> it</font>

126
00:07:15,449 --> 00:07:24,179
will be RT tool can store data different

127
00:07:21,089 --> 00:07:26,159
resolutions at the same time so you can

128
00:07:24,179 --> 00:07:28,469
set up your<font color="#E5E5E5"> log file to store data in</font>

129
00:07:26,159 --> 00:07:31,079
<font color="#CCCCCC">five-minute intervals as well as one</font>

130
00:07:28,469 --> 00:07:34,019
hour intervals and one day intervals you

131
00:07:31,079 --> 00:07:36,509
can show the data<font color="#CCCCCC"> into rd tool whenever</font>

132
00:07:34,019 --> 00:07:38,639
you want and it will figure it out on

133
00:07:36,509 --> 00:07:42,929
how to distribute the data in the

134
00:07:38,639 --> 00:07:45,590
different into the<font color="#E5E5E5"> different arrays I'll</font>

135
00:07:42,929 --> 00:07:48,900
have some more slides in this later

136
00:07:45,590 --> 00:07:51,030
data when it<font color="#E5E5E5"> gets distributed into these</font>

137
00:07:48,900 --> 00:07:53,909
different arrays gets consolidated so

138
00:07:51,030 --> 00:07:57,719
you can tell it to store the maximum

139
00:07:53,910 --> 00:08:00,000
<font color="#E5E5E5">five minute have value each hour for</font>

140
00:07:57,720 --> 00:08:03,590
example or each day or you can tell it

141
00:08:00,000 --> 00:08:11,130
to store the minimum one second<font color="#E5E5E5"> average</font>

142
00:08:03,590 --> 00:08:15,210
every year whatever this slide here

143
00:08:11,130 --> 00:08:20,960
shows you how this round robin logging

144
00:08:15,210 --> 00:08:26,310
works in this sample database I have and

145
00:08:20,960 --> 00:08:29,989
set up three storage storage areas one

146
00:08:26,310 --> 00:08:32,730
which stores in five minute intervals

147
00:08:29,990 --> 00:08:35,340
one which stores in one hour in tools

148
00:08:32,730 --> 00:08:40,289
and the third one stores in one day

149
00:08:35,340 --> 00:08:42,510
intervals as you can see each of these

150
00:08:40,289 --> 00:08:45,270
round-robin arrays is at a<font color="#E5E5E5"> different</font>

151
00:08:42,510 --> 00:08:48,500
point in storing data and it sort of

152
00:08:45,270 --> 00:08:48,500
roles as it goes

153
00:08:54,319 --> 00:09:02,939
when you set<font color="#CCCCCC"> up around</font><font color="#E5E5E5"> robbing database</font>

154
00:08:58,610 --> 00:09:05,910
you use the command line tool which uses

155
00:09:02,940 --> 00:09:15,690
a specific syntax and I'm going to<font color="#E5E5E5"> talk</font>

156
00:09:05,910 --> 00:09:20,120
a little<font color="#E5E5E5"> about this syntax now you can</font>

157
00:09:15,690 --> 00:09:22,860
set up<font color="#CCCCCC"> around robbing database using or</font>

158
00:09:20,120 --> 00:09:26,759
taking input from several data sources

159
00:09:22,860 --> 00:09:28,980
for each data source you define what

160
00:09:26,759 --> 00:09:32,190
name the data<font color="#E5E5E5"> source has what type of</font>

161
00:09:28,980 --> 00:09:34,769
data source it is so if you're<font color="#E5E5E5"> looking</font>

162
00:09:32,190 --> 00:09:37,769
at the octet counter on a router

163
00:09:34,769 --> 00:09:43,620
interface you would use the counter data

164
00:09:37,769 --> 00:09:45,180
source type<font color="#E5E5E5"> be this year or if you're</font>

165
00:09:43,620 --> 00:09:49,759
looking<font color="#E5E5E5"> at the temperature of your</font>

166
00:09:45,180 --> 00:09:52,620
machine<font color="#E5E5E5"> room you would use gauge which</font>

167
00:09:49,759 --> 00:09:55,199
behaves differently a counter would be

168
00:09:52,620 --> 00:09:57,000
used to build difference between the

169
00:09:55,199 --> 00:09:59,370
current reading and<font color="#E5E5E5"> the last one and</font>

170
00:09:57,000 --> 00:10:01,560
then divide the whole thing by the time

171
00:09:59,370 --> 00:10:04,380
which have has passed between<font color="#E5E5E5"> two</font>

172
00:10:01,560 --> 00:10:07,829
readings and store the rate the gauge

173
00:10:04,380 --> 00:10:09,899
and a data source type already knows

174
00:10:07,829 --> 00:10:13,229
what to store it stores what comes into

175
00:10:09,899 --> 00:10:16,529
<font color="#E5E5E5">it then for each data source you</font><font color="#CCCCCC"> can</font>

176
00:10:13,230 --> 00:10:18,420
<font color="#E5E5E5">define a heartbeat that means while we</font>

177
00:10:16,529 --> 00:10:21,870
have<font color="#CCCCCC"> set</font><font color="#E5E5E5"> up your database to store data</font>

178
00:10:18,420 --> 00:10:26,569
every five minutes you allow for for

179
00:10:21,870 --> 00:10:29,670
<font color="#E5E5E5">example 600 second update intervals so</font>

180
00:10:26,569 --> 00:10:32,819
you have a 600 second window where you

181
00:10:29,670 --> 00:10:34,709
can put data into<font color="#E5E5E5"> Rd tool and it will</font>

182
00:10:32,819 --> 00:10:38,040
accept the data if data doesn't come in

183
00:10:34,709 --> 00:10:40,380
off within the 600 second interval rd

184
00:10:38,040 --> 00:10:43,259
tool will assume that<font color="#CCCCCC"> somehow you lost</font>

185
00:10:40,380 --> 00:10:46,920
connection to<font color="#CCCCCC"> your data source and will</font>

186
00:10:43,259 --> 00:10:49,949
store unknown so if it happens<font color="#CCCCCC"> that you</font>

187
00:10:46,920 --> 00:10:53,279
you cannot update your rd database it

188
00:10:49,949 --> 00:10:56,519
will automatically know when the<font color="#E5E5E5"> data</font>

189
00:10:53,279 --> 00:10:58,829
becomes unknown you can also define a

190
00:10:56,519 --> 00:11:02,250
minimum and maximum value for<font color="#E5E5E5"> each data</font>

191
00:10:58,829 --> 00:11:04,229
source so this allows already tool to

192
00:11:02,250 --> 00:11:06,420
figure out whether the data providing is

193
00:11:04,230 --> 00:11:08,190
actually valid or not so

194
00:11:06,420 --> 00:11:09,899
if you're turning off your router at

195
00:11:08,190 --> 00:11:11,880
some point and reset all the<font color="#E5E5E5"> traffic</font>

196
00:11:09,899 --> 00:11:13,889
counters and then turn it back on<font color="#E5E5E5"> and</font>

197
00:11:11,880 --> 00:11:16,560
start feeding<font color="#E5E5E5"> that data into our G tool</font>

198
00:11:13,889 --> 00:11:21,720
it'll be<font color="#CCCCCC"> able to tell that that data</font>

199
00:11:16,560 --> 00:11:23,760
cannot possibly be valid once you have

200
00:11:21,720 --> 00:11:25,560
<font color="#E5E5E5">to find your data sources you have to</font>

201
00:11:23,760 --> 00:11:28,380
tell rd tool how to store the data

202
00:11:25,560 --> 00:11:31,040
that's<font color="#E5E5E5"> done with the second part of this</font>

203
00:11:28,380 --> 00:11:36,630
slide with<font color="#CCCCCC"> the round dropping archives</font>

204
00:11:31,040 --> 00:11:40,110
for each data storage area you<font color="#CCCCCC"> have to</font>

205
00:11:36,630 --> 00:11:42,560
have<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> these entries you tell rd to</font>

206
00:11:40,110 --> 00:11:44,760
what type of compression or

207
00:11:42,560 --> 00:11:47,969
consolidation it should use to<font color="#E5E5E5"> store the</font>

208
00:11:44,760 --> 00:11:50,819
data if you're getting<font color="#E5E5E5"> data into your</font>

209
00:11:47,970 --> 00:11:52,860
round robin our database<font color="#E5E5E5"> every five</font>

210
00:11:50,820 --> 00:11:57,180
minutes you can set up<font color="#CCCCCC"> a storage</font><font color="#E5E5E5"> area</font>

211
00:11:52,860 --> 00:12:00,750
which stores data every five minutes for

212
00:11:57,180 --> 00:12:03,660
<font color="#E5E5E5">let's a day and then have another one</font>

213
00:12:00,750 --> 00:12:05,570
which stores data every hour averages

214
00:12:03,660 --> 00:12:09,329
the<font color="#CCCCCC"> 5-minute values into a</font><font color="#E5E5E5"> one-hour</font>

215
00:12:05,570 --> 00:12:16,920
<font color="#E5E5E5">average in stores the one our values for</font>

216
00:12:09,329 --> 00:12:19,319
a month or a year and you<font color="#E5E5E5"> can also</font>

217
00:12:16,920 --> 00:12:22,110
define how many of these basic

218
00:12:19,320 --> 00:12:25,440
<font color="#E5E5E5">five-minute input values must be valid</font>

219
00:12:22,110 --> 00:12:29,810
in order to have a valid consolidated

220
00:12:25,440 --> 00:12:33,570
value so if you're<font color="#E5E5E5"> storing one hour</font>

221
00:12:29,810 --> 00:12:36,510
averages but get five minute data points

222
00:12:33,570 --> 00:12:38,310
as input and you tell it that half of

223
00:12:36,510 --> 00:12:42,360
the input must be known in order<font color="#E5E5E5"> to</font>

224
00:12:38,310 --> 00:12:44,910
<font color="#E5E5E5">warrant valid one hour average you must</font>

225
00:12:42,360 --> 00:12:50,190
have 14 or you<font color="#E5E5E5"> must have more than 30</font>

226
00:12:44,910 --> 00:12:54,199
<font color="#CCCCCC">minutes of valid input data for a one</font>

227
00:12:50,190 --> 00:12:54,199
hour valid average

228
00:12:59,800 --> 00:13:09,490
re tool works by using data<font color="#E5E5E5"> ribboning</font>

229
00:13:05,140 --> 00:13:12,189
its new word rebeaning means that when

230
00:13:09,490 --> 00:13:14,380
you're putting data into re tool it may

231
00:13:12,190 --> 00:13:16,600
be that it's not at the<font color="#E5E5E5"> five minute</font>

232
00:13:14,380 --> 00:13:19,390
interval exactly you're not able to

233
00:13:16,600 --> 00:13:21,850
provide data every 300 seconds because

234
00:13:19,390 --> 00:13:23,769
<font color="#CCCCCC">you</font><font color="#E5E5E5"> have somehow got to query your</font>

235
00:13:21,850 --> 00:13:26,140
<font color="#CCCCCC">routers or run your data acquisition</font>

236
00:13:23,769 --> 00:13:28,480
software and it will not be able<font color="#E5E5E5"> to</font>

237
00:13:26,140 --> 00:13:31,089
actually provide data exactly at five

238
00:13:28,480 --> 00:13:34,000
minute intervals that doesn't<font color="#E5E5E5"> matter rd</font>

239
00:13:31,089 --> 00:13:37,180
tool is able to rely<font color="#CCCCCC"> on your data into</font>

240
00:13:34,000 --> 00:13:39,579
<font color="#CCCCCC">the</font><font color="#E5E5E5"> basic data acquisition interview</font>

241
00:13:37,180 --> 00:13:43,329
ball you have defined and this slide

242
00:13:39,579 --> 00:13:48,130
should give you of explanation how this

243
00:13:43,329 --> 00:13:50,800
works in<font color="#CCCCCC"> the first graph you see the</font>

244
00:13:48,130 --> 00:13:54,700
input you're providing it after four

245
00:13:50,800 --> 00:13:57,010
hundred seconds you<font color="#E5E5E5"> have</font><font color="#CCCCCC"> two hundred and</font>

246
00:13:54,700 --> 00:14:02,829
<font color="#CCCCCC">eighty thousand architects which have</font>

247
00:13:57,010 --> 00:14:06,490
passed that interface rd tool wants to

248
00:14:02,829 --> 00:14:10,149
store data every 300 seconds so in the

249
00:14:06,490 --> 00:14:13,060
second graph you see the context of this

250
00:14:10,149 --> 00:14:20,250
one measurement there is a<font color="#CCCCCC"> very low</font>

251
00:14:13,060 --> 00:14:20,250
measurement first anxiety amplifier

252
00:14:21,279 --> 00:14:29,210
there's a very low sample first than a

253
00:14:25,880 --> 00:14:33,370
large one and then a medium one in the

254
00:14:29,210 --> 00:14:37,880
third graph you see that it integrates

255
00:14:33,370 --> 00:14:41,990
over this space and stores the

256
00:14:37,880 --> 00:14:44,290
integrated value so it<font color="#E5E5E5"> doesn't matter</font>

257
00:14:41,990 --> 00:14:48,560
when you're providing updates 2 r.d tool

258
00:14:44,290 --> 00:14:51,829
<font color="#E5E5E5">it'll always do the right thing unless</font>

259
00:14:48,560 --> 00:14:53,869
you're surpassing this let's say 600

260
00:14:51,830 --> 00:14:55,520
seconds update interval which you have

261
00:14:53,870 --> 00:14:57,800
defined in first place so if you're<font color="#E5E5E5"> not</font>

262
00:14:55,520 --> 00:15:00,920
providing an update after 600 seconds

263
00:14:57,800 --> 00:15:03,290
are the tools eight oops you've passed

264
00:15:00,920 --> 00:15:05,829
your limit<font color="#E5E5E5"> will store unknown for this</font>

265
00:15:03,290 --> 00:15:05,829
period

266
00:15:10,720 --> 00:15:15,730
these five<font color="#E5E5E5"> minutes</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> these five minute</font>

267
00:15:13,329 --> 00:15:20,800
intervals are called primary data points

268
00:15:15,730 --> 00:15:22,810
that's what the PDP stands for so this

269
00:15:20,800 --> 00:15:25,569
slide shows you what happens once you

270
00:15:22,810 --> 00:15:28,329
have your data<font color="#CCCCCC"> ribbond at</font><font color="#E5E5E5"> three hundred</font>

271
00:15:25,569 --> 00:15:31,439
second intervals and you're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

272
00:15:28,329 --> 00:15:36,040
store it into the round-robin archive

273
00:15:31,439 --> 00:15:40,290
that's the original data and then<font color="#E5E5E5"> I have</font>

274
00:15:36,040 --> 00:15:43,920
to<font color="#E5E5E5"> round robin archives one which stores</font>

275
00:15:40,290 --> 00:15:47,160
every if if the<font color="#E5E5E5"> first one was let's say</font>

276
00:15:43,920 --> 00:15:50,740
30 minute intervals this one would store

277
00:15:47,160 --> 00:15:54,699
every hour<font color="#E5E5E5"> and this one would store</font>

278
00:15:50,740 --> 00:15:57,129
every one half hours so the round robin

279
00:15:54,699 --> 00:16:00,758
archives always must be multiples of the

280
00:15:57,129 --> 00:16:02,230
original data acquisition interval and

281
00:16:00,759 --> 00:16:05,439
<font color="#E5E5E5">as you can see it's doing its</font>

282
00:16:02,230 --> 00:16:08,170
integration thing again integrating over

283
00:16:05,439 --> 00:16:13,449
the time passed and then storing the

284
00:16:08,170 --> 00:16:15,490
average and<font color="#CCCCCC"> the colors you can see in</font>

285
00:16:13,449 --> 00:16:17,969
the graph<font color="#E5E5E5"> should give a hint on how this</font>

286
00:16:15,490 --> 00:16:17,970
happens

287
00:16:21,589 --> 00:16:26,970
in the slide where I set up the<font color="#E5E5E5"> round</font>

288
00:16:25,199 --> 00:16:29,248
<font color="#E5E5E5">robin archives you saw</font><font color="#CCCCCC"> that there were</font>

289
00:16:26,970 --> 00:16:31,949
different data consolidation methods

290
00:16:29,249 --> 00:16:36,029
available this slide<font color="#CCCCCC"> shows what happens</font>

291
00:16:31,949 --> 00:16:39,269
if you have defined minimum and minimum

292
00:16:36,029 --> 00:16:41,309
and maximum consolidation methods so

293
00:16:39,269 --> 00:16:44,100
instead of<font color="#E5E5E5"> building the average it picks</font>

294
00:16:41,309 --> 00:16:46,799
out the<font color="#E5E5E5"> maximum</font><font color="#CCCCCC"> five minute or whatever</font>

295
00:16:44,100 --> 00:16:49,170
the base into a loss value and storage

296
00:16:46,799 --> 00:16:58,350
stepped into the consolidated

297
00:16:49,170 --> 00:17:00,569
round-robin archive ok now<font color="#E5E5E5"> you stored</font>

298
00:16:58,350 --> 00:17:03,059
the data in your round<font color="#CCCCCC"> robin archives in</font>

299
00:17:00,569 --> 00:17:04,799
your ground roving databases you have

300
00:17:03,059 --> 00:17:06,569
accumulated a lot of dating you want to

301
00:17:04,799 --> 00:17:10,439
produce graphical representations of

302
00:17:06,569 --> 00:17:14,240
this data in a mortgagee you will limit

303
00:17:10,439 --> 00:17:18,360
it to two data sources for a graph

304
00:17:14,240 --> 00:17:20,459
basically incoming<font color="#CCCCCC"> outgoing traffic in</font>

305
00:17:18,359 --> 00:17:22,319
RG tool this limit does not exist you

306
00:17:20,459 --> 00:17:27,510
can have as many data sources as you

307
00:17:22,319 --> 00:17:29,250
want<font color="#CCCCCC"> you can use different presentation</font>

308
00:17:27,510 --> 00:17:32,158
methods you can have a line graph an

309
00:17:29,250 --> 00:17:34,169
area graph or you can stack several data

310
00:17:32,159 --> 00:17:37,350
sources on top of<font color="#E5E5E5"> each other as you saw</font>

311
00:17:34,169 --> 00:17:40,130
in the<font color="#E5E5E5"> initial graphs on the second</font>

312
00:17:37,350 --> 00:17:43,408
slider so which I showed and you can do

313
00:17:40,130 --> 00:17:46,679
<font color="#E5E5E5">reverse polish notation math on the data</font>

314
00:17:43,409 --> 00:17:49,190
before you graph it<font color="#E5E5E5"> I'll have a slide on</font>

315
00:17:46,679 --> 00:17:49,190
<font color="#E5E5E5">this later</font>

316
00:17:51,510 --> 00:17:57,370
this light here shows<font color="#E5E5E5"> few samples just</font>

317
00:17:54,840 --> 00:17:59,530
<font color="#CCCCCC">look at the third at the</font><font color="#E5E5E5"> first three</font>

318
00:17:57,370 --> 00:18:08,530
they're probably useful and the fourth

319
00:17:59,530 --> 00:18:11,889
one is to<font color="#CCCCCC"> trick to show</font><font color="#E5E5E5"> off and this</font>

320
00:18:08,530 --> 00:18:14,200
slide explains how to do graph now your

321
00:18:11,890 --> 00:18:17,710
<font color="#CCCCCC">routers will provide you with octet</font>

322
00:18:14,200 --> 00:18:22,810
counts and you yourself or your managers

323
00:18:17,710 --> 00:18:25,000
want<font color="#E5E5E5"> to see bits per second so you need</font>

324
00:18:22,810 --> 00:18:28,000
<font color="#E5E5E5">to somehow convert</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> data between the</font>

325
00:18:25,000 --> 00:18:32,640
two presentation formats and this here

326
00:18:28,000 --> 00:18:34,960
is how it's done this here defines

327
00:18:32,640 --> 00:18:38,080
that's all on the command line by the

328
00:18:34,960 --> 00:18:39,460
<font color="#E5E5E5">way this he defines where the data come</font>

329
00:18:38,080 --> 00:18:41,949
from comes from<font color="#CCCCCC"> it comes from this</font>

330
00:18:39,460 --> 00:18:44,830
database you're going to use the data

331
00:18:41,950 --> 00:18:46,650
source called incoming which has been

332
00:18:44,830 --> 00:18:49,360
consolidated using the averaging

333
00:18:46,650 --> 00:18:55,090
consolidation method and you assign this

334
00:18:49,360 --> 00:18:57,909
to the variable<font color="#E5E5E5"> name a then you use</font>

335
00:18:55,090 --> 00:19:04,290
reverse polish notation<font color="#E5E5E5"> math to multiply</font>

336
00:18:57,910 --> 00:19:07,960
a by<font color="#CCCCCC"> 8 and store it into</font><font color="#E5E5E5"> the variable B</font>

337
00:19:04,290 --> 00:19:12,490
finally you're going to graph this where

338
00:19:07,960 --> 00:19:16,020
i will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> using hex color red and give</font>

339
00:19:12,490 --> 00:19:16,020
it<font color="#E5E5E5"> a label incoming</font>

340
00:19:16,740 --> 00:19:24,870
who did that produces a graph with one

341
00:19:19,980 --> 00:19:28,420
area type of presentation can look like

342
00:19:24,870 --> 00:19:30,850
like the orange<font color="#E5E5E5"> one here for example now</font>

343
00:19:28,420 --> 00:19:33,390
your traffic would look like this but to

344
00:19:30,850 --> 00:19:33,389
get the idea

345
00:19:37,380 --> 00:19:43,550
you have already<font color="#E5E5E5"> seen now some rd tool</font>

346
00:19:40,350 --> 00:19:46,560
syntax and lose a few words about this

347
00:19:43,550 --> 00:19:50,909
<font color="#E5E5E5">rd tool has many simple functions like</font>

348
00:19:46,560 --> 00:19:53,550
update create database creation one for

349
00:19:50,910 --> 00:19:55,710
graphing one for dumping your database

350
00:19:53,550 --> 00:19:58,379
into a ski have a slide<font color="#CCCCCC"> on this lecture</font>

351
00:19:55,710 --> 00:20:03,150
each of the functions has its own

352
00:19:58,380 --> 00:20:04,920
argument definition so the graphing one

353
00:20:03,150 --> 00:20:06,660
has special arguments for creating

354
00:20:04,920 --> 00:20:08,820
graphs the update one has special

355
00:20:06,660 --> 00:20:13,080
arguments for creating or for updating

356
00:20:08,820 --> 00:20:18,689
databases neither of<font color="#CCCCCC"> the funk none of</font>

357
00:20:13,080 --> 00:20:21,300
the functions to exit or produce output

358
00:20:18,690 --> 00:20:24,270
on the screens on the screen<font color="#E5E5E5"> this allows</font>

359
00:20:21,300 --> 00:20:27,419
you to integrate rd tool into other

360
00:20:24,270 --> 00:20:30,090
programs without messing up the output

361
00:20:27,420 --> 00:20:32,130
there is a way of<font color="#CCCCCC"> getting out put out of</font>

362
00:20:30,090 --> 00:20:33,600
rd tool but<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> controlled so it</font>

363
00:20:32,130 --> 00:20:40,560
doesn't just right through your screen

364
00:20:33,600 --> 00:20:43,230
or exit it always returns and there is

365
00:20:40,560 --> 00:20:45,450
full documentation on already tool on

366
00:20:43,230 --> 00:20:47,100
each of the functions because as<font color="#E5E5E5"> i</font>

367
00:20:45,450 --> 00:20:49,490
<font color="#E5E5E5">mentioned the documentation was written</font>

368
00:20:47,100 --> 00:20:49,490
first

369
00:20:51,510 --> 00:20:56,160
when you're using<font color="#CCCCCC"> already tool you have</font>

370
00:20:53,880 --> 00:20:58,260
<font color="#E5E5E5">an array of different methods to do that</font>

371
00:20:56,160 --> 00:21:01,050
first you can use it<font color="#CCCCCC"> on the command line</font>

372
00:20:58,260 --> 00:21:06,930
it's a simple<font color="#CCCCCC"> utility it's about five</font>

373
00:21:01,050 --> 00:21:09,120
hundred kilobytes in size easy to<font color="#E5E5E5"> use or</font>

374
00:21:06,930 --> 00:21:12,450
you can attach it to a process via a set

375
00:21:09,120 --> 00:21:15,360
of pipes and pipe<font color="#E5E5E5"> your updates into</font><font color="#CCCCCC"> rd</font>

376
00:21:12,450 --> 00:21:18,200
tool by these pipes this saves<font color="#E5E5E5"> you the</font>

377
00:21:15,360 --> 00:21:21,030
time you would use<font color="#CCCCCC"> to start up rd tool</font>

378
00:21:18,200 --> 00:21:23,340
and actually<font color="#CCCCCC"> if you're doing</font>

379
00:21:21,030 --> 00:21:26,639
high-performance logging this is the

380
00:21:23,340 --> 00:21:29,129
<font color="#E5E5E5">only way to get a decent performance rd</font>

381
00:21:26,640 --> 00:21:33,030
tool if it<font color="#E5E5E5"> doesn't have to start up for</font>

382
00:21:29,130 --> 00:21:36,750
every update can do about<font color="#E5E5E5"> 1000 or can</font>

383
00:21:33,030 --> 00:21:39,510
lock<font color="#E5E5E5"> 1000 data points per second this</font>

384
00:21:36,750 --> 00:21:41,940
allows you to do a lot of logging and

385
00:21:39,510 --> 00:21:44,220
have a conciliation in there as well<font color="#CCCCCC"> so</font>

386
00:21:41,940 --> 00:21:46,980
it's<font color="#E5E5E5"> not actually not</font><font color="#CCCCCC"> only up like</font>

387
00:21:44,220 --> 00:21:49,320
writing a pending to a log file it's

388
00:21:46,980 --> 00:21:51,000
actually maintaining the database you'll

389
00:21:49,320 --> 00:21:54,810
<font color="#E5E5E5">never have to go back</font><font color="#CCCCCC"> and consolidate</font>

390
00:21:51,000 --> 00:21:57,780
its doing that on the fly there are

391
00:21:54,810 --> 00:22:01,320
bindings for<font color="#CCCCCC"> pearl which come with rd</font>

392
00:21:57,780 --> 00:22:03,600
tool as a shared library you<font color="#CCCCCC"> can also</font>

393
00:22:01,320 --> 00:22:05,610
build rd tool stand alone as a shared

394
00:22:03,600 --> 00:22:07,679
library and then loaded into any program

395
00:22:05,610 --> 00:22:10,979
which supports loading in arbitrary

396
00:22:07,680 --> 00:22:13,340
shared libraries their bindings for

397
00:22:10,980 --> 00:22:15,960
<font color="#E5E5E5">python and tickle being developed and</font>

398
00:22:13,340 --> 00:22:19,169
there is a<font color="#E5E5E5"> special version of</font><font color="#CCCCCC"> rd tool</font>

399
00:22:15,960 --> 00:22:21,510
called rd cgi which allows you to write

400
00:22:19,170 --> 00:22:26,370
web pages which rebuilds two graphs on

401
00:22:21,510 --> 00:22:27,960
the fly sort of like PHP only the

402
00:22:26,370 --> 00:22:31,830
command set is much more limited than

403
00:22:27,960 --> 00:22:34,110
with PHP obviously now these two slides

404
00:22:31,830 --> 00:22:36,439
will give you a<font color="#E5E5E5"> short run down on which</font>

405
00:22:34,110 --> 00:22:39,149
functions are supported in rd tool

406
00:22:36,440 --> 00:22:41,730
there's a great function which allows

407
00:22:39,150 --> 00:22:44,520
you to set up<font color="#E5E5E5"> new databases an update</font>

408
00:22:41,730 --> 00:22:48,000
function which stores data values into

409
00:22:44,520 --> 00:22:50,400
the databases a graphing function which

410
00:22:48,000 --> 00:22:55,470
allows you to create graphs both in jail

411
00:22:50,400 --> 00:22:59,700
<font color="#E5E5E5">and PNG formats so depending</font><font color="#CCCCCC"> on your use</font>

412
00:22:55,470 --> 00:23:02,490
you<font color="#E5E5E5"> can either abide by the patent laws</font>

413
00:22:59,700 --> 00:23:05,010
or make your users happy

414
00:23:02,490 --> 00:23:08,400
and there is a dump utility which

415
00:23:05,010 --> 00:23:10,800
exports an RD tool database which is<font color="#CCCCCC"> in</font>

416
00:23:08,400 --> 00:23:12,600
machine specific format into an ASCII

417
00:23:10,800 --> 00:23:14,720
format and allows you to transport<font color="#CCCCCC"> it</font>

418
00:23:12,600 --> 00:23:16,980
from one architecture to another one and

419
00:23:14,720 --> 00:23:20,880
<font color="#E5E5E5">the dumpling is also useful for</font>

420
00:23:16,980 --> 00:23:23,400
debugging because it uses a<font color="#E5E5E5"> XML type</font>

421
00:23:20,880 --> 00:23:26,120
format when once the database is done so

422
00:23:23,400 --> 00:23:29,880
you can<font color="#CCCCCC"> look at it and make sense of</font><font color="#E5E5E5"> it</font>

423
00:23:26,120 --> 00:23:31,770
and there's a restore tool which goes

424
00:23:29,880 --> 00:23:35,010
back from<font color="#E5E5E5"> the dumped format into the</font>

425
00:23:31,770 --> 00:23:38,760
binary format there is also a fetch

426
00:23:35,010 --> 00:23:40,950
utility so if you have a rd tool

427
00:23:38,760 --> 00:23:44,460
database which stores<font color="#CCCCCC"> five minute values</font>

428
00:23:40,950 --> 00:23:48,770
for a month it's about maybe 10 or 20

429
00:23:44,460 --> 00:23:52,800
lines of pearl to do 95th<font color="#E5E5E5"> percentile</font>

430
00:23:48,770 --> 00:23:55,400
evaluation utility and it takes about

431
00:23:52,800 --> 00:23:58,139
<font color="#E5E5E5">half an hour if in April I guess and</font>

432
00:23:55,400 --> 00:24:00,600
there is a<font color="#E5E5E5"> June utility which allows you</font>

433
00:23:58,140 --> 00:24:03,900
to modify certain properties of an

434
00:24:00,600 --> 00:24:07,050
<font color="#CCCCCC">existing round robin database there's it</font>

435
00:24:03,900 --> 00:24:10,200
utility to find the current last sort

436
00:24:07,050 --> 00:24:12,960
value so if you know the<font color="#E5E5E5"> MRT</font><font color="#CCCCCC"> G graph</font>

437
00:24:10,200 --> 00:24:15,050
there's always the current state of<font color="#E5E5E5"> the</font>

438
00:24:12,960 --> 00:24:16,920
network<font color="#CCCCCC"> report it as well with the last</font>

439
00:24:15,050 --> 00:24:20,820
command you<font color="#CCCCCC"> can find this information</font>

440
00:24:16,920 --> 00:24:22,770
<font color="#E5E5E5">and there's a tool to resize your round</font>

441
00:24:20,820 --> 00:24:25,860
robin databases or actually the archives

442
00:24:22,770 --> 00:24:28,290
within the database which allows you to

443
00:24:25,860 --> 00:24:30,620
expand the amount of data which is being

444
00:24:28,290 --> 00:24:30,620
stored

445
00:24:32,620 --> 00:24:36,780
oops<font color="#CCCCCC"> sorry</font>

446
00:24:44,250 --> 00:24:51,960
this year is a complete<font color="#E5E5E5"> example on how</font>

447
00:24:47,760 --> 00:24:55,800
to set up<font color="#CCCCCC"> the round robin database you</font>

448
00:24:51,960 --> 00:24:59,490
have you two data sources each data

449
00:24:55,800 --> 00:25:01,740
source can have a name their counter

450
00:24:59,490 --> 00:25:05,130
data sources so it would be interface

451
00:25:01,740 --> 00:25:08,880
octet counters probably they<font color="#CCCCCC"> have to be</font>

452
00:25:05,130 --> 00:25:10,620
updated every 600 seconds and the values

453
00:25:08,880 --> 00:25:15,290
which you're going<font color="#E5E5E5"> to allow in these</font>

454
00:25:10,620 --> 00:25:21,959
databases are between 0 and 10 base-t

455
00:25:15,290 --> 00:25:24,420
<font color="#E5E5E5">Ethernet speed and you're storing the</font>

456
00:25:21,960 --> 00:25:27,900
data<font color="#E5E5E5"> into four different round robin</font>

457
00:25:24,420 --> 00:25:30,360
archives two of them store the averages

458
00:25:27,900 --> 00:25:34,320
one stores the<font color="#E5E5E5"> 5-minute averages for day</font>

459
00:25:30,360 --> 00:25:36,899
the other one stores the only averages

460
00:25:34,320 --> 00:25:39,300
for a week and then for the weekly one

461
00:25:36,900 --> 00:25:41,700
you have you store as<font color="#CCCCCC"> well the minimal</font>

462
00:25:39,300 --> 00:25:43,740
<font color="#E5E5E5">five minute average or the minimum five</font>

463
00:25:41,700 --> 00:25:48,900
remaining minute value and the maximum

464
00:25:43,740 --> 00:25:51,750
<font color="#CCCCCC">five minute value once you've executed</font>

465
00:25:48,900 --> 00:25:54,300
this command you get your rd database

466
00:25:51,750 --> 00:25:57,900
it's filled with unknown values because

467
00:25:54,300 --> 00:26:01,820
there is no data available yet but it

468
00:25:57,900 --> 00:26:01,820
has its final size it will not<font color="#E5E5E5"> change</font>

469
00:26:03,080 --> 00:26:09,120
now you need<font color="#E5E5E5"> to feed data into</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> round</font>

470
00:26:05,970 --> 00:26:12,690
robin database this happens like this

471
00:26:09,120 --> 00:26:15,739
call Rt tool update function pellet

472
00:26:12,690 --> 00:26:18,930
which database you<font color="#E5E5E5"> want to update then</font>

473
00:26:15,740 --> 00:26:23,430
you can give a template which says which

474
00:26:18,930 --> 00:26:25,350
tells<font color="#CCCCCC"> are the two the order of the round</font>

475
00:26:23,430 --> 00:26:29,040
robin or of the data sources you're

476
00:26:25,350 --> 00:26:32,030
going to<font color="#CCCCCC"> update and then you tell it to</font>

477
00:26:29,040 --> 00:26:35,610
<font color="#CCCCCC">update with these two counter values n</font>

478
00:26:32,030 --> 00:26:38,340
stands for now and can also be replaced

479
00:26:35,610 --> 00:26:40,679
by unix timestamp if you have some more

480
00:26:38,340 --> 00:26:43,679
accurate timing information available

481
00:26:40,680 --> 00:26:46,440
for<font color="#E5E5E5"> the update if you look at these</font>

482
00:26:43,680 --> 00:26:50,210
slides in your notebook you'll be

483
00:26:46,440 --> 00:26:50,210
actually be able<font color="#E5E5E5"> to read this here</font>

484
00:26:52,299 --> 00:26:57,950
if you have up if you<font color="#E5E5E5"> have run update</font>

485
00:26:55,009 --> 00:27:00,980
for some time you have data<font color="#CCCCCC"> in your</font>

486
00:26:57,950 --> 00:27:03,320
database to create a graph<font color="#E5E5E5"> and this</font>

487
00:27:00,980 --> 00:27:11,059
would be<font color="#E5E5E5"> the commands needed to create a</font>

488
00:27:03,320 --> 00:27:12,619
PNG version graph<font color="#CCCCCC"> I'm setting a</font><font color="#E5E5E5"> low</font>

489
00:27:11,059 --> 00:27:15,440
limit here because everything in the

490
00:27:12,619 --> 00:27:18,230
graph is also configured so if my data

491
00:27:15,440 --> 00:27:20,450
doesn't go to<font color="#E5E5E5"> zero graph wouldn't go to</font>

492
00:27:18,230 --> 00:27:23,480
zero as well so<font color="#E5E5E5"> just to</font><font color="#CCCCCC"> be sure I'm</font>

493
00:27:20,450 --> 00:27:25,519
<font color="#E5E5E5">telling the rapper to go to zero to plot</font>

494
00:27:23,480 --> 00:27:27,679
the serial line so that you don't have<font color="#CCCCCC"> a</font>

495
00:27:25,519 --> 00:27:31,519
<font color="#E5E5E5">newspaper graph but actually I've useful</font>

496
00:27:27,679 --> 00:27:35,720
one i define variables for my two data

497
00:27:31,519 --> 00:27:38,419
sources and then I<font color="#E5E5E5"> plop the first data</font>

498
00:27:35,720 --> 00:27:42,950
source as an area and the second data

499
00:27:38,419 --> 00:27:45,019
source as a line of with one the second

500
00:27:42,950 --> 00:27:50,240
data source is the max<font color="#CCCCCC"> into max has been</font>

501
00:27:45,019 --> 00:27:53,299
<font color="#CCCCCC">evaluated for every hour so you see the</font>

502
00:27:50,240 --> 00:27:55,309
math is very tacky but<font color="#E5E5E5"> it's guilt from</font>

503
00:27:53,299 --> 00:27:57,379
the same data<font color="#E5E5E5"> as the average and</font>

504
00:27:55,309 --> 00:28:00,740
therefore you can see that<font color="#CCCCCC"> this actually</font>

505
00:27:57,379 --> 00:28:03,668
works it's always picking the max here

506
00:28:00,740 --> 00:28:03,669
and here

507
00:28:06,150 --> 00:28:14,220
now if you're already<font color="#E5E5E5"> using rd to hear</font>

508
00:28:09,750 --> 00:28:16,950
some points to keep in mind<font color="#E5E5E5"> rd tool will</font>

509
00:28:14,220 --> 00:28:18,960
store whatever you tell it to<font color="#E5E5E5"> store but</font>

510
00:28:16,950 --> 00:28:21,270
<font color="#E5E5E5">it'll also help you to make</font><font color="#CCCCCC"> sure that</font>

511
00:28:18,960 --> 00:28:24,000
you're<font color="#E5E5E5"> only storing valid data in order</font>

512
00:28:21,270 --> 00:28:26,370
to enable<font color="#CCCCCC"> rd tool to do this you must</font>

513
00:28:24,000 --> 00:28:29,990
give it some idea of what data it's

514
00:28:26,370 --> 00:28:32,580
going to<font color="#E5E5E5"> expect and therefore use these</font>

515
00:28:29,990 --> 00:28:37,020
switches to define minimum and maximum

516
00:28:32,580 --> 00:28:40,439
values to set up the maximum accepted

517
00:28:37,020 --> 00:28:42,300
input or update interval if you're not

518
00:28:40,440 --> 00:28:45,090
doing<font color="#CCCCCC"> this you'll end up with huge</font>

519
00:28:42,300 --> 00:28:47,520
spikes because you get some counter

520
00:28:45,090 --> 00:28:49,169
wraps or stuff like that rd tool tries

521
00:28:47,520 --> 00:28:51,930
to figure out if you're<font color="#E5E5E5"> having a counter</font>

522
00:28:49,170 --> 00:28:55,290
rap but it might miss them and then it's

523
00:28:51,930 --> 00:28:59,580
better to<font color="#CCCCCC"> have some min and Max limits</font>

524
00:28:55,290 --> 00:29:03,870
in there as well our key tool gets

525
00:28:59,580 --> 00:29:06,290
updated quite frequently and if you're

526
00:29:03,870 --> 00:29:08,639
using the<font color="#E5E5E5"> perl module you want to use</font>

527
00:29:06,290 --> 00:29:10,080
the version number as well when you're

528
00:29:08,640 --> 00:29:12,660
loading that module so that you're sure

529
00:29:10,080 --> 00:29:14,460
<font color="#E5E5E5">that you actually get the version of the</font>

530
00:29:12,660 --> 00:29:16,560
module which you<font color="#E5E5E5"> think you're getting</font>

531
00:29:14,460 --> 00:29:18,390
and not some other version which has

532
00:29:16,560 --> 00:29:21,480
<font color="#E5E5E5">been installed by some other person</font>

533
00:29:18,390 --> 00:29:23,250
somewhere else<font color="#E5E5E5"> on the system this makes</font>

534
00:29:21,480 --> 00:29:27,240
<font color="#CCCCCC">for quite some traffic on the main list</font>

535
00:29:23,250 --> 00:29:29,700
actually and as<font color="#CCCCCC"> I mentioned in</font><font color="#E5E5E5"> the</font>

536
00:29:27,240 --> 00:29:31,740
example use lower limit when you're

537
00:29:29,700 --> 00:29:35,340
creating graphs so that the graphs

538
00:29:31,740 --> 00:29:37,290
actually start at zero if you have type

539
00:29:35,340 --> 00:29:40,830
of<font color="#E5E5E5"> data which you want to see the actual</font>

540
00:29:37,290 --> 00:29:43,370
<font color="#E5E5E5">amount</font><font color="#CCCCCC"> of data and not only</font><font color="#E5E5E5"> how the line</font>

541
00:29:40,830 --> 00:29:43,370
Wiggles around

542
00:29:45,250 --> 00:29:54,370
the most time-consuming task on using rd

543
00:29:49,960 --> 00:29:56,860
tool is creating graphs and therefore<font color="#E5E5E5"> I</font>

544
00:29:54,370 --> 00:29:59,590
have developed<font color="#E5E5E5"> little tool called our DC</font>

545
00:29:56,860 --> 00:30:03,879
<font color="#E5E5E5">GI which allows you to embed graph</font>

546
00:29:59,590 --> 00:30:06,189
creation commands in a HTML page and

547
00:30:03,880 --> 00:30:08,620
have them executed once the page is

548
00:30:06,190 --> 00:30:10,540
loaded so the graph gets only created

549
00:30:08,620 --> 00:30:13,330
when somebody looks at it at the<font color="#E5E5E5"> same</font>

550
00:30:10,540 --> 00:30:16,659
time the graph gets actually created so

551
00:30:13,330 --> 00:30:18,939
<font color="#CCCCCC">hardy tool can figure out whether it has</font>

552
00:30:16,660 --> 00:30:21,100
to regenerate the graph not so if a lot

553
00:30:18,940 --> 00:30:24,760
<font color="#CCCCCC">of people looking at that</font><font color="#E5E5E5"> page it hasn't</font>

554
00:30:21,100 --> 00:30:29,159
got to recreate the graph for every call

555
00:30:24,760 --> 00:30:29,160
it only recreated when it's out of date

556
00:30:31,260 --> 00:30:38,280
if you're not programming and rather

557
00:30:35,050 --> 00:30:43,419
prefer to use a prepackaged solution and

558
00:30:38,280 --> 00:30:45,730
<font color="#CCCCCC">rd tool seems to spark a lot of work in</font>

559
00:30:43,420 --> 00:30:50,670
this area the oldest one probably<font color="#E5E5E5"> is</font>

560
00:30:45,730 --> 00:30:52,960
cricket it uses<font color="#CCCCCC"> a hired hierarchical</font>

561
00:30:50,670 --> 00:30:55,060
configuration tree which allows you to

562
00:30:52,960 --> 00:30:57,750
define your devices at the<font color="#E5E5E5"> higher levels</font>

563
00:30:55,060 --> 00:31:01,750
and build instances of them sort of semi

564
00:30:57,750 --> 00:31:05,440
<font color="#E5E5E5">object-oriented there is</font><font color="#CCCCCC"> Orca developed</font>

565
00:31:01,750 --> 00:31:11,760
by Blair<font color="#CCCCCC"> saya of</font><font color="#E5E5E5"> geo cities originally</font>

566
00:31:05,440 --> 00:31:11,760
and this one is for reading static files

567
00:31:12,270 --> 00:31:18,550
so<font color="#E5E5E5"> you have some other</font><font color="#CCCCCC"> soft to log into</font>

568
00:31:15,310 --> 00:31:21,010
a file and then are at you run<font color="#CCCCCC"> Orca</font>

569
00:31:18,550 --> 00:31:23,050
which pulls data from these files there

570
00:31:21,010 --> 00:31:25,180
is<font color="#E5E5E5"> rain stopped which will be presented</font>

571
00:31:23,050 --> 00:31:27,399
in the next talk so I'm<font color="#CCCCCC"> not</font><font color="#E5E5E5"> going to say</font>

572
00:31:25,180 --> 00:31:29,860
anything about it there is flow scam

573
00:31:27,400 --> 00:31:33,340
we're just learned about<font color="#E5E5E5"> it the other</font>

574
00:31:29,860 --> 00:31:37,479
day it's combining see flow d and<font color="#CCCCCC"> rd</font>

575
00:31:33,340 --> 00:31:39,820
tool for flow based istics it's not

576
00:31:37,480 --> 00:31:44,530
available<font color="#E5E5E5"> publicly yet but you can write</font>

577
00:31:39,820 --> 00:31:48,330
to its writer and then there will be mrt

578
00:31:44,530 --> 00:31:48,330
t3 someday maybe

579
00:31:48,679 --> 00:31:54,960
it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> done yet because I spent all my</font>

580
00:31:51,960 --> 00:31:59,400
time developing RT tool but I have some

581
00:31:54,960 --> 00:32:02,220
<font color="#CCCCCC">initial work which sort of I've already</font>

582
00:31:59,400 --> 00:32:07,260
planned how to be it's<font color="#E5E5E5"> going to be</font>

583
00:32:02,220 --> 00:32:09,450
<font color="#E5E5E5">object oriented pearl and the idea is</font>

584
00:32:07,260 --> 00:32:13,110
that instead of writing a configuration

585
00:32:09,450 --> 00:32:14,549
file I'll provide you with sort of basic

586
00:32:13,110 --> 00:32:16,139
building blocks for a monitoring

587
00:32:14,549 --> 00:32:18,418
application which will make it<font color="#CCCCCC"> very</font>

588
00:32:16,140 --> 00:32:20,520
<font color="#E5E5E5">simple to sort of code blue</font>

589
00:32:18,419 --> 00:32:26,789
configuration so<font color="#E5E5E5"> I'll have pearl</font>

590
00:32:20,520 --> 00:32:28,320
evaluate the configuration file and it's

591
00:32:26,789 --> 00:32:31,470
going<font color="#E5E5E5"> to use a tree structure as</font><font color="#CCCCCC"> well</font>

592
00:32:28,320 --> 00:32:33,710
which allows you to leverage basic

593
00:32:31,470 --> 00:32:37,919
configurations and then have<font color="#CCCCCC"> them</font>

594
00:32:33,710 --> 00:32:40,350
tailored to your specific needs if you

595
00:32:37,919 --> 00:32:43,309
want to be in on this effort subscribe

596
00:32:40,350 --> 00:32:43,309
to this mailing list here

597
00:32:45,630 --> 00:32:53,130
also rd tool has some future Burke I

598
00:32:50,480 --> 00:32:55,170
want it to be more flexible in the

599
00:32:53,130 --> 00:32:57,740
graphing area<font color="#E5E5E5"> even more flexible and</font>

600
00:32:55,170 --> 00:33:01,770
that will need some revelation of how to

601
00:32:57,740 --> 00:33:05,190
do all these<font color="#CCCCCC"> command-line things I want</font>

602
00:33:01,770 --> 00:33:06,750
it<font color="#CCCCCC"> to be anti-aliasing</font><font color="#E5E5E5"> everything for</font>

603
00:33:05,190 --> 00:33:12,000
even<font color="#CCCCCC"> more beautiful graphs I want to</font>

604
00:33:06,750 --> 00:33:14,910
have the 95 percentile built in and I'll

605
00:33:12,000 --> 00:33:18,240
review everything so maybe the command

606
00:33:14,910 --> 00:33:20,100
lines will change but the database

607
00:33:18,240 --> 00:33:22,560
format will certainly not change so

608
00:33:20,100 --> 00:33:25,290
whatever data you store it will be there

609
00:33:22,560 --> 00:33:28,889
<font color="#E5E5E5">and i'll be using the linux versioning</font>

610
00:33:25,290 --> 00:33:31,830
number version numbering scheme so 1.0

611
00:33:28,890 --> 00:33:34,050
will stay the way it is just bug fixes

612
00:33:31,830 --> 00:33:38,939
and maybe small enhancements and 1.1

613
00:33:34,050 --> 00:33:41,310
will be development version yeah that's

614
00:33:38,940 --> 00:33:44,430
my talk I thank<font color="#E5E5E5"> to abovenet for paying</font>

615
00:33:41,310 --> 00:33:46,139
the fare and cater for feeding me during

616
00:33:44,430 --> 00:33:50,270
the summer<font color="#CCCCCC"> and 85 for making it</font>

617
00:33:46,140 --> 00:33:50,270
impossible great

618
00:33:54,789 --> 00:33:59,450
we have a few<font color="#CCCCCC"> minutes for questions so</font>

619
00:33:57,440 --> 00:34:01,370
go ahead and<font color="#CCCCCC"> keep the microphones if</font><font color="#E5E5E5"> you</font>

620
00:33:59,450 --> 00:34:03,080
like<font color="#E5E5E5"> I did have a cup of question that</font>

621
00:34:01,370 --> 00:34:04,489
won't ask you since I didn't think

622
00:34:03,080 --> 00:34:05,990
<font color="#E5E5E5">anyone in this audience has been asked</font>

623
00:34:04,490 --> 00:34:11,659
you<font color="#E5E5E5"> have a Windows NT version for this</font>

624
00:34:05,990 --> 00:34:14,149
yeah it does compile it does compiler<font color="#CCCCCC"> 19</font>

625
00:34:11,659 --> 00:34:15,889
but I'm not providing binary versions

626
00:34:14,149 --> 00:34:18,830
there are people using it on NT and

627
00:34:15,889 --> 00:34:22,940
<font color="#CCCCCC">they're these project files I think the</font>

628
00:34:18,830 --> 00:34:24,739
cold for visual c++ which are in<font color="#E5E5E5"> the</font>

629
00:34:22,940 --> 00:34:27,619
distribution the distribution is hard

630
00:34:24,739 --> 00:34:32,089
reset but if you're able to unpack it

631
00:34:27,619 --> 00:34:33,770
it'll yeah compile an empty can the idea

632
00:34:32,089 --> 00:34:36,529
<font color="#CCCCCC">that was you're storing all this</font>

633
00:34:33,770 --> 00:34:39,230
information into a database of some form

634
00:34:36,530 --> 00:34:41,629
is just a proprietary database structure

635
00:34:39,230 --> 00:34:43,849
this particular shorted the database is

636
00:34:41,629 --> 00:34:46,819
built into our d tool rd tool is

637
00:34:43,849 --> 00:34:48,740
available under two new license and if

638
00:34:46,820 --> 00:34:50,270
you<font color="#E5E5E5"> look at the code there is a full</font>

639
00:34:48,739 --> 00:34:53,000
documentation of the database format

640
00:34:50,270 --> 00:34:56,750
with explanation of all the acronyms and

641
00:34:53,000 --> 00:35:01,820
everything and the database is not like

642
00:34:56,750 --> 00:35:04,760
an existing database form format but

643
00:35:01,820 --> 00:35:07,940
it's a database format tailored to the

644
00:35:04,760 --> 00:35:13,310
went to these round<font color="#CCCCCC"> robin archives which</font>

645
00:35:07,940 --> 00:35:15,550
allow fast updates great any questions

646
00:35:13,310 --> 00:35:15,549
from the audience

647
00:35:15,859 --> 00:35:20,019
<font color="#CCCCCC">no hey job do this</font>

