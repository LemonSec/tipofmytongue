1
00:00:00,000 --> 00:00:04,880
[Music]

2
00:00:04,880 --> 00:00:07,040
so we now welcome to the stage mauricio

3
00:00:07,040 --> 00:00:10,000
rojas presenting the power of kubernetes

4
00:00:10,000 --> 00:00:12,400
crds to automate the underlay network at

5
00:00:12,400 --> 00:00:14,920
the edge via gnmi

6
00:00:14,920 --> 00:00:17,279
yang that's a long title

7
00:00:17,279 --> 00:00:19,920
uh certainly a contender here mauricio

8
00:00:19,920 --> 00:00:22,240
is the principal consulting engineer for

9
00:00:22,240 --> 00:00:24,560
network automation at nokia and is

10
00:00:24,560 --> 00:00:25,840
coming today

11
00:00:25,840 --> 00:00:28,080
coming to us today from texas

12
00:00:28,080 --> 00:00:30,400
this is mauricio's first time presenting

13
00:00:30,400 --> 00:00:32,640
it to nanag and it's a pleasure to have

14
00:00:32,640 --> 00:00:34,960
him uh here today so please welcome

15
00:00:34,960 --> 00:00:37,960
mauricio

16
00:00:44,879 --> 00:00:46,719
just playing everything in the title

17
00:00:46,719 --> 00:00:49,920
saying well we are working with crds

18
00:00:49,920 --> 00:00:54,000
that is a new concept in kubernetes

19
00:00:54,320 --> 00:00:57,199
and also with gnmi and john devices that

20
00:00:57,199 --> 00:00:59,120
is something also

21
00:00:59,120 --> 00:01:02,000
relatively new in the with network

22
00:01:02,000 --> 00:01:05,360
devices like switches and routers okay

23
00:01:05,360 --> 00:01:07,600
then

24
00:01:07,600 --> 00:01:09,200
i'm going to explain a little about the

25
00:01:09,200 --> 00:01:10,479
edge

26
00:01:10,479 --> 00:01:11,760
it's probably

27
00:01:11,760 --> 00:01:13,840
many of you are familiar familiar with

28
00:01:13,840 --> 00:01:15,600
the concept

29
00:01:15,600 --> 00:01:16,560
uh

30
00:01:16,560 --> 00:01:18,880
there are some use cases for the edge

31
00:01:18,880 --> 00:01:20,400
like uh

32
00:01:20,400 --> 00:01:21,439
5g

33
00:01:21,439 --> 00:01:24,640
5g was actually thought in in the

34
00:01:24,640 --> 00:01:26,720
concept of microservices

35
00:01:26,720 --> 00:01:27,920
that you can

36
00:01:27,920 --> 00:01:30,640
take some of those microservices closer

37
00:01:30,640 --> 00:01:32,320
to the user like

38
00:01:32,320 --> 00:01:35,280
for example the user plane

39
00:01:35,280 --> 00:01:36,400
at the edge

40
00:01:36,400 --> 00:01:37,360
and

41
00:01:37,360 --> 00:01:39,520
you have other use cases like a cloud

42
00:01:39,520 --> 00:01:40,320
ground

43
00:01:40,320 --> 00:01:42,799
that is is being split also in

44
00:01:42,799 --> 00:01:45,280
microservices you have the distributed

45
00:01:45,280 --> 00:01:46,240
units

46
00:01:46,240 --> 00:01:49,040
that it can be talking with the central

47
00:01:49,040 --> 00:01:51,200
unit that can be also at the edge in

48
00:01:51,200 --> 00:01:53,439
other edge a central edge or we can talk

49
00:01:53,439 --> 00:01:55,840
about the distributed unit

50
00:01:55,840 --> 00:01:58,240
the fart edge and you have the right

51
00:01:58,240 --> 00:02:00,719
units for you know on the left that you

52
00:02:00,719 --> 00:02:02,960
need to also be communicating directly

53
00:02:02,960 --> 00:02:04,799
with distributed units

54
00:02:04,799 --> 00:02:07,520
for cable operators you have

55
00:02:07,520 --> 00:02:09,919
applications like a png

56
00:02:09,919 --> 00:02:12,560
cmts and so on there are many

57
00:02:12,560 --> 00:02:14,400
applications that can be running at the

58
00:02:14,400 --> 00:02:16,959
edge to bring a better experience to the

59
00:02:16,959 --> 00:02:20,720
user and to the enterprises

60
00:02:21,520 --> 00:02:23,840
um

61
00:02:23,840 --> 00:02:25,920
what is the edge cloud from the point of

62
00:02:25,920 --> 00:02:28,080
view of where it's located

63
00:02:28,080 --> 00:02:29,840
can be located in a

64
00:02:29,840 --> 00:02:32,720
uh what used to be a central office

65
00:02:32,720 --> 00:02:35,040
uh for the public at

66
00:02:35,040 --> 00:02:36,560
a telephone network

67
00:02:36,560 --> 00:02:37,519
could be

68
00:02:37,519 --> 00:02:40,239
also a coffee shop it could be in the

69
00:02:40,239 --> 00:02:42,879
airport could be in a retail store it

70
00:02:42,879 --> 00:02:43,760
could be

71
00:02:43,760 --> 00:02:46,319
a hidden for the cable operator could be

72
00:02:46,319 --> 00:02:47,360
anywhere

73
00:02:47,360 --> 00:02:49,599
everything depends of the use case or

74
00:02:49,599 --> 00:02:50,879
the application

75
00:02:50,879 --> 00:02:51,840
that

76
00:02:51,840 --> 00:02:54,000
this edge is going to have

77
00:02:54,000 --> 00:02:57,360
for the carrier for the for the operator

78
00:02:57,360 --> 00:03:00,640
or even for the enterprise

79
00:03:01,280 --> 00:03:02,959
something in common on

80
00:03:02,959 --> 00:03:05,599
those locations is

81
00:03:05,599 --> 00:03:07,840
they are very limited in space very

82
00:03:07,840 --> 00:03:09,760
limited in power

83
00:03:09,760 --> 00:03:13,360
then you can think on something

84
00:03:13,360 --> 00:03:16,239
bigger than probably three racks

85
00:03:16,239 --> 00:03:18,800
or even sometimes a couple of devices

86
00:03:18,800 --> 00:03:21,120
like a one server and one switch

87
00:03:21,120 --> 00:03:24,319
then you are constrained from the point

88
00:03:24,319 --> 00:03:27,360
of view of of resources then anything

89
00:03:27,360 --> 00:03:29,200
that you're going to be running

90
00:03:29,200 --> 00:03:31,440
on top of that need to

91
00:03:31,440 --> 00:03:35,760
think that you're gonna be limited okay

92
00:03:36,799 --> 00:03:38,799
then

93
00:03:38,799 --> 00:03:40,959
what um

94
00:03:40,959 --> 00:03:43,280
how the edge is working

95
00:03:43,280 --> 00:03:45,680
and how we are trying to bring

96
00:03:45,680 --> 00:03:46,959
services

97
00:03:46,959 --> 00:03:49,360
on those locations

98
00:03:49,360 --> 00:03:52,159
we have uh orchestration platforms like

99
00:03:52,159 --> 00:03:55,680
kubernetes kubernetes today is

100
00:03:55,680 --> 00:03:57,120
is

101
00:03:57,120 --> 00:03:59,360
present in the 77

102
00:03:59,360 --> 00:04:03,680
77 of the cases and it's growing

103
00:04:03,680 --> 00:04:05,200
you need an orchestrator to bring

104
00:04:05,200 --> 00:04:07,439
compute storage

105
00:04:07,439 --> 00:04:09,680
network at the edge

106
00:04:09,680 --> 00:04:12,400
to make it uh

107
00:04:12,400 --> 00:04:15,920
agile from the point of view of bringing

108
00:04:15,920 --> 00:04:17,600
all the connectivity that

109
00:04:17,600 --> 00:04:19,839
those applications are going to need

110
00:04:19,839 --> 00:04:23,040
let's go for the case of uh cloud brand

111
00:04:23,040 --> 00:04:25,360
that is you have the distributed unit

112
00:04:25,360 --> 00:04:28,639
that you that need to on the right to

113
00:04:28,639 --> 00:04:31,360
communicate with the cu and on the left

114
00:04:31,360 --> 00:04:34,160
need to go to the radio units also

115
00:04:34,160 --> 00:04:36,080
then you need something that can bring

116
00:04:36,080 --> 00:04:38,560
the connectivity to the applications

117
00:04:38,560 --> 00:04:39,919
from the point of view of the underlying

118
00:04:39,919 --> 00:04:40,880
network

119
00:04:40,880 --> 00:04:43,840
that need to be very agile

120
00:04:44,160 --> 00:04:46,320
need to be efficient you don't have so

121
00:04:46,320 --> 00:04:48,479
much room for

122
00:04:48,479 --> 00:04:50,720
more servers then anything that you're

123
00:04:50,720 --> 00:04:52,240
going to bring from the point of view of

124
00:04:52,240 --> 00:04:54,960
orchestration and automation

125
00:04:54,960 --> 00:04:57,440
can have cannot have an independent

126
00:04:57,440 --> 00:05:00,400
platform you need to work what you have

127
00:05:00,400 --> 00:05:02,400
at the edge and sometimes could be just

128
00:05:02,400 --> 00:05:05,440
one server and just one switch

129
00:05:05,440 --> 00:05:07,440
and

130
00:05:07,440 --> 00:05:09,440
need to be self-contained

131
00:05:09,440 --> 00:05:11,120
from the point of view

132
00:05:11,120 --> 00:05:11,840
that

133
00:05:11,840 --> 00:05:13,039
if you lose

134
00:05:13,039 --> 00:05:14,240
the

135
00:05:14,240 --> 00:05:16,479
communication with your central

136
00:05:16,479 --> 00:05:17,440
uh

137
00:05:17,440 --> 00:05:18,639
location

138
00:05:18,639 --> 00:05:21,280
you need to keep attending users

139
00:05:21,280 --> 00:05:23,360
collecting information

140
00:05:23,360 --> 00:05:25,280
waiting for this communication to come

141
00:05:25,280 --> 00:05:27,199
back and

142
00:05:27,199 --> 00:05:29,039
that means the any any sort of

143
00:05:29,039 --> 00:05:30,960
orchestration automation need to work

144
00:05:30,960 --> 00:05:34,400
independently from the central site

145
00:05:34,400 --> 00:05:36,400
performance well

146
00:05:36,400 --> 00:05:37,600
you can run

147
00:05:37,600 --> 00:05:40,000
different sort of applications

148
00:05:40,000 --> 00:05:42,960
if you are for example um

149
00:05:42,960 --> 00:05:45,199
running telco applications like in the

150
00:05:45,199 --> 00:05:47,039
case of a packet core

151
00:05:47,039 --> 00:05:49,680
you need to deal with performance uh you

152
00:05:49,680 --> 00:05:51,120
are running applications that are

153
00:05:51,120 --> 00:05:53,919
related to a gaming use case

154
00:05:53,919 --> 00:05:56,639
you're gonna deal with a latency or

155
00:05:56,639 --> 00:05:59,520
bandwidth then you have to run

156
00:05:59,520 --> 00:06:01,360
many different applications that they're

157
00:06:01,360 --> 00:06:04,639
gonna require different things

158
00:06:04,639 --> 00:06:06,479
uh from the network

159
00:06:06,479 --> 00:06:08,960
and and your orchestration need to bring

160
00:06:08,960 --> 00:06:10,080
that kind of

161
00:06:10,080 --> 00:06:12,400
things

162
00:06:13,840 --> 00:06:15,199
then

163
00:06:15,199 --> 00:06:18,240
what we are doing with the crd well

164
00:06:18,240 --> 00:06:20,560
first we are limited in a space it's a

165
00:06:20,560 --> 00:06:23,039
very small footprint unless you have the

166
00:06:23,039 --> 00:06:24,800
underlay network cover

167
00:06:24,800 --> 00:06:27,280
you're not actually bringing it into an

168
00:06:27,280 --> 00:06:29,520
experience from the point of view of the

169
00:06:29,520 --> 00:06:32,800
orchestration and automation

170
00:06:32,800 --> 00:06:35,600
that solution because of the small

171
00:06:35,600 --> 00:06:37,120
footprint

172
00:06:37,120 --> 00:06:39,919
need to run on the same we are proposing

173
00:06:39,919 --> 00:06:42,400
to run on the same kubernetes cluster as

174
00:06:42,400 --> 00:06:44,240
another application

175
00:06:44,240 --> 00:06:46,840
uh like some sort of

176
00:06:46,840 --> 00:06:49,199
controller you are limited in the amount

177
00:06:49,199 --> 00:06:51,680
of resources in your organizations

178
00:06:51,680 --> 00:06:53,199
for

179
00:06:53,199 --> 00:06:55,199
to automate things means

180
00:06:55,199 --> 00:06:56,880
right now you have kubernetes and there

181
00:06:56,880 --> 00:06:58,800
are many tools that i can work with the

182
00:06:58,800 --> 00:07:00,800
kubernetes apis

183
00:07:00,800 --> 00:07:03,440
but if in some cases an application for

184
00:07:03,440 --> 00:07:05,120
automation requires

185
00:07:05,120 --> 00:07:07,759
other set of tools other set of apis

186
00:07:07,759 --> 00:07:09,520
then the idea is to try to keep this

187
00:07:09,520 --> 00:07:10,560
simple

188
00:07:10,560 --> 00:07:12,720
using the same resources that we have at

189
00:07:12,720 --> 00:07:14,960
the edge like kubernetes and only extend

190
00:07:14,960 --> 00:07:18,080
the apis using crds

191
00:07:18,080 --> 00:07:21,520
multi-tenancy is

192
00:07:21,840 --> 00:07:24,960
sometimes the edge is not just for

193
00:07:24,960 --> 00:07:27,520
one use case you are you have multiple

194
00:07:27,520 --> 00:07:29,199
applications with different use cases at

195
00:07:29,199 --> 00:07:30,639
the same location

196
00:07:30,639 --> 00:07:32,319
from different vendors

197
00:07:32,319 --> 00:07:34,000
then you need an application cam that

198
00:07:34,000 --> 00:07:36,720
can work on different name spaces

199
00:07:36,720 --> 00:07:38,880
uh can actually be connected to

200
00:07:38,880 --> 00:07:39,840
different

201
00:07:39,840 --> 00:07:42,800
network services related to different

202
00:07:42,800 --> 00:07:45,759
users and different vendors

203
00:07:45,759 --> 00:07:46,639
um

204
00:07:46,639 --> 00:07:48,879
and the day two is

205
00:07:48,879 --> 00:07:50,879
anyone that knows very well kubernetes

206
00:07:50,879 --> 00:07:52,400
know that

207
00:07:52,400 --> 00:07:54,479
you have the scheduler and the scheduler

208
00:07:54,479 --> 00:07:56,960
is taking the applications around the

209
00:07:56,960 --> 00:07:59,199
cluster and it's very dynamic and the

210
00:07:59,199 --> 00:08:01,280
applications that they can pop up in any

211
00:08:01,280 --> 00:08:02,720
node anytime

212
00:08:02,720 --> 00:08:04,720
then you need something that can

213
00:08:04,720 --> 00:08:07,039
be related to that checking on the

214
00:08:07,039 --> 00:08:09,759
events how those applications are

215
00:08:09,759 --> 00:08:11,120
moving around

216
00:08:11,120 --> 00:08:12,879
and start setting

217
00:08:12,879 --> 00:08:14,319
the

218
00:08:14,319 --> 00:08:16,160
the services that those applications are

219
00:08:16,160 --> 00:08:17,680
not gonna are

220
00:08:17,680 --> 00:08:20,560
are gonna require

221
00:08:20,800 --> 00:08:22,160
then

222
00:08:22,160 --> 00:08:23,440
for that

223
00:08:23,440 --> 00:08:25,680
we are proposing the use of crds in

224
00:08:25,680 --> 00:08:27,199
kubernetes

225
00:08:27,199 --> 00:08:28,960
that is going to help us to take the

226
00:08:28,960 --> 00:08:30,960
advantage of that platform i'm going to

227
00:08:30,960 --> 00:08:33,279
talk a little more about it

228
00:08:33,279 --> 00:08:34,399
um

229
00:08:34,399 --> 00:08:36,479
in something very

230
00:08:36,479 --> 00:08:39,519
common and all those use cases

231
00:08:39,519 --> 00:08:42,719
almost everybody is using multiuse

232
00:08:42,719 --> 00:08:45,360
who is not familiar with multus multus

233
00:08:45,360 --> 00:08:47,680
is bringing

234
00:08:47,680 --> 00:08:50,080
the possibility to create

235
00:08:50,080 --> 00:08:51,760
additional network definitions on

236
00:08:51,760 --> 00:08:54,560
kubernetes that means you have for

237
00:08:54,560 --> 00:08:57,760
example a data plane as a control as a

238
00:08:57,760 --> 00:08:59,839
network function on kubernetes and this

239
00:08:59,839 --> 00:09:02,160
is going to require probably 10 or 20

240
00:09:02,160 --> 00:09:04,399
interfaces you need to create those

241
00:09:04,399 --> 00:09:05,839
interfaces using something like

242
00:09:05,839 --> 00:09:07,279
multi-use

243
00:09:07,279 --> 00:09:09,279
and that is part of the orchestration

244
00:09:09,279 --> 00:09:11,839
that you can bring from kubernetes

245
00:09:11,839 --> 00:09:12,560
but

246
00:09:12,560 --> 00:09:14,720
when mulches is creating interfaces you

247
00:09:14,720 --> 00:09:16,399
can deal with different technologies in

248
00:09:16,399 --> 00:09:18,800
some cases you have something called

249
00:09:18,800 --> 00:09:20,399
sario v

250
00:09:20,399 --> 00:09:24,240
or macvilan ipv then you need something

251
00:09:24,240 --> 00:09:26,800
a controller that can not only work on

252
00:09:26,800 --> 00:09:30,320
the crds but also be

253
00:09:30,320 --> 00:09:32,560
need to be worked with the different cni

254
00:09:32,560 --> 00:09:35,279
plugins that multus is going to start

255
00:09:35,279 --> 00:09:36,720
using to create a different network

256
00:09:36,720 --> 00:09:39,920
attachment definitions

257
00:09:41,040 --> 00:09:41,920
then

258
00:09:41,920 --> 00:09:43,600
this is a crd

259
00:09:43,600 --> 00:09:46,200
starting in the release wind

260
00:09:46,200 --> 00:09:48,080
1.7

261
00:09:48,080 --> 00:09:50,560
we have the concept of crd we can create

262
00:09:50,560 --> 00:09:53,680
a specific object in kubernetes for a

263
00:09:53,680 --> 00:09:55,920
specific application

264
00:09:55,920 --> 00:09:59,279
um in this case we are proposing to use

265
00:09:59,279 --> 00:10:00,240
those

266
00:10:00,240 --> 00:10:02,640
to create a crd that could be related to

267
00:10:02,640 --> 00:10:05,440
a switch or a router with the different

268
00:10:05,440 --> 00:10:06,880
pieces of the configuration that you're

269
00:10:06,880 --> 00:10:09,920
gonna need on that underlay network

270
00:10:09,920 --> 00:10:12,240
okay

271
00:10:12,720 --> 00:10:14,399
then

272
00:10:14,399 --> 00:10:16,399
what we are doing is

273
00:10:16,399 --> 00:10:19,519
we are using kubernetes

274
00:10:19,519 --> 00:10:21,600
as our as our platform for the

275
00:10:21,600 --> 00:10:23,200
controller

276
00:10:23,200 --> 00:10:25,120
we are taking advantage of the apis like

277
00:10:25,120 --> 00:10:27,200
i told you the crts

278
00:10:27,200 --> 00:10:30,079
are helping me to extend the apis

279
00:10:30,079 --> 00:10:32,320
of my controller directly on the

280
00:10:32,320 --> 00:10:35,360
kubernetes apis then i can keep using

281
00:10:35,360 --> 00:10:38,320
the same ci ci cd tools

282
00:10:38,320 --> 00:10:40,480
that i have for my pipeline

283
00:10:40,480 --> 00:10:41,839
um

284
00:10:41,839 --> 00:10:43,040
also

285
00:10:43,040 --> 00:10:44,560
i'm using

286
00:10:44,560 --> 00:10:46,240
other consoles in kubernetes like the

287
00:10:46,240 --> 00:10:47,600
etc

288
00:10:47,600 --> 00:10:49,519
database for the values

289
00:10:49,519 --> 00:10:51,760
and to save the state

290
00:10:51,760 --> 00:10:54,880
of my crd or the configuration that i

291
00:10:54,880 --> 00:10:57,680
have on my switches

292
00:10:57,680 --> 00:10:59,440
i can use also the concept of

293
00:10:59,440 --> 00:11:01,519
multi-tenancy with the network with the

294
00:11:01,519 --> 00:11:05,120
namespaces i can use uh the security the

295
00:11:05,120 --> 00:11:07,120
granular security data kubernetes also

296
00:11:07,120 --> 00:11:09,200
is bringing on the table

297
00:11:09,200 --> 00:11:10,640
um

298
00:11:10,640 --> 00:11:13,600
and and that is that controller that is

299
00:11:13,600 --> 00:11:15,200
going to be running

300
00:11:15,200 --> 00:11:17,680
on the in our case we are proposing to

301
00:11:17,680 --> 00:11:20,399
run this on the master node or

302
00:11:20,399 --> 00:11:22,800
controller node in kubernetes it's going

303
00:11:22,800 --> 00:11:25,200
to be working with the routers and the

304
00:11:25,200 --> 00:11:29,120
local switches through gmi

305
00:11:29,120 --> 00:11:32,000
to do any any sort of configuration that

306
00:11:32,000 --> 00:11:33,600
i'm gonna need from the underlay network

307
00:11:33,600 --> 00:11:35,839
okay

308
00:11:38,320 --> 00:11:39,920
like i told you

309
00:11:39,920 --> 00:11:40,800
uh

310
00:11:40,800 --> 00:11:43,279
extending using the crts you are only

311
00:11:43,279 --> 00:11:44,800
extending

312
00:11:44,800 --> 00:11:46,560
the

313
00:11:46,560 --> 00:11:49,760
any setting on the switches or routers

314
00:11:49,760 --> 00:11:50,880
directly

315
00:11:50,880 --> 00:11:51,920
on the

316
00:11:51,920 --> 00:11:54,079
kubernetes apis

317
00:11:54,079 --> 00:11:56,480
then as soon as you do any change on

318
00:11:56,480 --> 00:11:59,040
those ideas

319
00:11:59,040 --> 00:12:01,040
the controller is going to go and

320
00:12:01,040 --> 00:12:03,040
reconcile that information directly on

321
00:12:03,040 --> 00:12:04,399
the underlying network on the physical

322
00:12:04,399 --> 00:12:06,560
devices

323
00:12:06,560 --> 00:12:08,399
thanks to that you can use the same

324
00:12:08,399 --> 00:12:11,680
tools that you have for

325
00:12:11,680 --> 00:12:17,040
for those apis for your ci ocd process

326
00:12:17,040 --> 00:12:19,200
in our case for example we were testing

327
00:12:19,200 --> 00:12:21,680
argo cd

328
00:12:21,680 --> 00:12:24,079
to change the values of the our helm

329
00:12:24,079 --> 00:12:25,360
chart

330
00:12:25,360 --> 00:12:26,240
and

331
00:12:26,240 --> 00:12:27,760
also

332
00:12:27,760 --> 00:12:29,920
we are providing

333
00:12:29,920 --> 00:12:31,839
important information from the point of

334
00:12:31,839 --> 00:12:33,440
view of

335
00:12:33,440 --> 00:12:37,040
alarms in prometheus we have an insta

336
00:12:37,040 --> 00:12:38,160
running on the kubernetes with

337
00:12:38,160 --> 00:12:40,399
prometheus to bring all the information

338
00:12:40,399 --> 00:12:41,680
of any

339
00:12:41,680 --> 00:12:44,079
any alarm and fluency

340
00:12:44,079 --> 00:12:46,800
also in kubernetes to bring all the

341
00:12:46,800 --> 00:12:49,360
events that are happening happening in

342
00:12:49,360 --> 00:12:51,680
the controller and also in the devices

343
00:12:51,680 --> 00:12:53,760
that are local to that

344
00:12:53,760 --> 00:12:56,000
edge location

345
00:12:56,000 --> 00:12:57,839
and

346
00:12:57,839 --> 00:12:59,440
you know and you can connect this with

347
00:12:59,440 --> 00:13:03,200
any other assurance management solution

348
00:13:03,200 --> 00:13:06,800
or even with the grafana or kivana that

349
00:13:06,800 --> 00:13:09,040
are actually very used

350
00:13:09,040 --> 00:13:11,599
nowadays

351
00:13:14,639 --> 00:13:15,680
for

352
00:13:15,680 --> 00:13:18,399
who is not familiar how kubernetes

353
00:13:18,399 --> 00:13:19,519
is

354
00:13:19,519 --> 00:13:20,800
is working

355
00:13:20,800 --> 00:13:23,519
we have two different type of nodes

356
00:13:23,519 --> 00:13:25,440
uh i'm going to spend

357
00:13:25,440 --> 00:13:27,680
just three minutes on this

358
00:13:27,680 --> 00:13:29,920
we have the controller or the master

359
00:13:29,920 --> 00:13:30,959
node

360
00:13:30,959 --> 00:13:35,279
that is running the controller manager

361
00:13:35,279 --> 00:13:36,959
service that is uh

362
00:13:36,959 --> 00:13:39,839
actually a kubernetes system application

363
00:13:39,839 --> 00:13:42,480
it's like uh the actual controller of

364
00:13:42,480 --> 00:13:43,519
everything

365
00:13:43,519 --> 00:13:46,160
and you have the sc the scheduler this

366
00:13:46,160 --> 00:13:48,639
the scheduler is

367
00:13:48,639 --> 00:13:51,440
helping me to

368
00:13:51,600 --> 00:13:53,279
when i'm going to create a an

369
00:13:53,279 --> 00:13:56,560
application is based on the information

370
00:13:56,560 --> 00:13:59,120
or the values of the workers

371
00:13:59,120 --> 00:14:02,639
is creating the part of that application

372
00:14:02,639 --> 00:14:06,800
in any of the nodes in the cluster

373
00:14:06,800 --> 00:14:08,639
and sometimes could be based on the

374
00:14:08,639 --> 00:14:10,399
availability of resources that i have in

375
00:14:10,399 --> 00:14:12,560
that node

376
00:14:12,560 --> 00:14:15,360
and you have the api server that's

377
00:14:15,360 --> 00:14:17,360
another set of pods that are running on

378
00:14:17,360 --> 00:14:18,880
the controller

379
00:14:18,880 --> 00:14:21,680
to bring access to kubernetes

380
00:14:21,680 --> 00:14:24,160
and you have the atc the

381
00:14:24,160 --> 00:14:25,199
values

382
00:14:25,199 --> 00:14:26,639
database

383
00:14:26,639 --> 00:14:29,199
where i'm all the information of my crds

384
00:14:29,199 --> 00:14:30,560
are actually

385
00:14:30,560 --> 00:14:31,440
is

386
00:14:31,440 --> 00:14:33,440
safe over there

387
00:14:33,440 --> 00:14:34,320
and

388
00:14:34,320 --> 00:14:37,040
as soon as i'm doing any change

389
00:14:37,040 --> 00:14:38,399
the controller is taking that

390
00:14:38,399 --> 00:14:39,839
information and reconciling the

391
00:14:39,839 --> 00:14:41,760
information directly on the underlying

392
00:14:41,760 --> 00:14:42,800
network

393
00:14:42,800 --> 00:14:46,480
but atcda is actual uh kubernetes system

394
00:14:46,480 --> 00:14:48,800
application that is running on the on

395
00:14:48,800 --> 00:14:49,519
the

396
00:14:49,519 --> 00:14:51,440
controller

397
00:14:51,440 --> 00:14:53,920
you have also the worker

398
00:14:53,920 --> 00:14:56,240
the worker is the actual node where my

399
00:14:56,240 --> 00:14:58,959
applications are running

400
00:14:58,959 --> 00:15:02,560
and you have to a cubelet that is

401
00:15:02,560 --> 00:15:05,120
taking care of over seeing what is

402
00:15:05,120 --> 00:15:07,199
happening with the container on time

403
00:15:07,199 --> 00:15:09,519
some cases could be container d or could

404
00:15:09,519 --> 00:15:12,639
be docker or could be a cryo everything

405
00:15:12,639 --> 00:15:14,240
depends on the technology that you're

406
00:15:14,240 --> 00:15:16,880
using we are not limited to the any

407
00:15:16,880 --> 00:15:19,120
runtime in this case

408
00:15:19,120 --> 00:15:21,920
um you have q proxy good proxy is the

409
00:15:21,920 --> 00:15:24,240
one that is changing the rules

410
00:15:24,240 --> 00:15:26,399
uh security and network rules

411
00:15:26,399 --> 00:15:28,639
directly on every worker to allow the

412
00:15:28,639 --> 00:15:31,519
communication with the different parts

413
00:15:31,519 --> 00:15:33,519
um

414
00:15:33,519 --> 00:15:35,680
we have the cni plugins

415
00:15:35,680 --> 00:15:38,320
well cnap again you have many it's just

416
00:15:38,320 --> 00:15:39,600
a standard

417
00:15:39,600 --> 00:15:42,079
where a vendor wants to create any sort

418
00:15:42,079 --> 00:15:43,600
of uh

419
00:15:43,600 --> 00:15:46,320
way to communicate the parts

420
00:15:46,320 --> 00:15:48,720
for example for the management interface

421
00:15:48,720 --> 00:15:52,000
you have cni plugins like

422
00:15:52,000 --> 00:15:56,880
calico calicos is very used in intelco

423
00:15:56,880 --> 00:15:59,199
is working with the layer 3 approach but

424
00:15:59,199 --> 00:16:01,519
you also have flannel there is a layer 2

425
00:16:01,519 --> 00:16:03,440
approach but you have many many

426
00:16:03,440 --> 00:16:05,600
different options for the sienna plugins

427
00:16:05,600 --> 00:16:06,560
from the

428
00:16:06,560 --> 00:16:09,040
for the management interface

429
00:16:09,040 --> 00:16:10,800
in the case of the additional interfaces

430
00:16:10,800 --> 00:16:13,279
we are working with multi-use

431
00:16:13,279 --> 00:16:15,839
and multi-use is allowing me the way to

432
00:16:15,839 --> 00:16:18,800
create additional network definitions

433
00:16:18,800 --> 00:16:20,480
where i'm gonna put the different

434
00:16:20,480 --> 00:16:22,480
additional interfaces of my

435
00:16:22,480 --> 00:16:24,000
network functions that are running on

436
00:16:24,000 --> 00:16:25,680
top of kubernetes

437
00:16:25,680 --> 00:16:29,519
um and usually i'm moving between ipvlan

438
00:16:29,519 --> 00:16:32,480
macville and sriv between

439
00:16:32,480 --> 00:16:35,800
those three

440
00:16:37,120 --> 00:16:39,680
how the controller that we are proposing

441
00:16:39,680 --> 00:16:43,440
is working in this environment well

442
00:16:43,440 --> 00:16:45,040
we have

443
00:16:45,040 --> 00:16:47,120
two operators

444
00:16:47,120 --> 00:16:49,440
one operators running in

445
00:16:49,440 --> 00:16:51,279
master node

446
00:16:51,279 --> 00:16:52,639
is the

447
00:16:52,639 --> 00:16:56,240
intent operator the intent operator

448
00:16:56,240 --> 00:16:59,040
is collecting information

449
00:16:59,040 --> 00:17:02,399
that we are of the crds

450
00:17:02,399 --> 00:17:05,119
and depending on what changes we have in

451
00:17:05,119 --> 00:17:07,280
the crds is reconciling that information

452
00:17:07,280 --> 00:17:10,160
directly on the switch or router through

453
00:17:10,160 --> 00:17:12,720
gnmi

454
00:17:13,439 --> 00:17:15,760
i'm going to show later an example of

455
00:17:15,760 --> 00:17:18,400
the crd but you can see that actually

456
00:17:18,400 --> 00:17:21,199
inside the crd on every crd that i'm we

457
00:17:21,199 --> 00:17:22,319
are creating

458
00:17:22,319 --> 00:17:24,079
for the demo

459
00:17:24,079 --> 00:17:26,559
we can define a specific path of where

460
00:17:26,559 --> 00:17:28,880
we want to change the configuration of

461
00:17:28,880 --> 00:17:31,440
the switch of the router

462
00:17:31,440 --> 00:17:32,720
um

463
00:17:32,720 --> 00:17:34,320
you have also the

464
00:17:34,320 --> 00:17:35,840
scalar

465
00:17:35,840 --> 00:17:37,039
uh

466
00:17:37,039 --> 00:17:39,280
the scalar is the one

467
00:17:39,280 --> 00:17:42,240
that is gonna do any change

468
00:17:42,240 --> 00:17:44,320
on the switches

469
00:17:44,320 --> 00:17:45,760
related

470
00:17:45,760 --> 00:17:47,919
to the parts of the applications how

471
00:17:47,919 --> 00:17:50,240
they are moving around i mean you have

472
00:17:50,240 --> 00:17:52,320
an agent in the node and then in the

473
00:17:52,320 --> 00:17:54,000
working node called

474
00:17:54,000 --> 00:17:56,240
scalar agent

475
00:17:56,240 --> 00:17:59,039
is overseeing all the events that are

476
00:17:59,039 --> 00:18:02,160
having in those nodes to see if there is

477
00:18:02,160 --> 00:18:05,039
any new application on the nodes that is

478
00:18:05,039 --> 00:18:06,480
requesting

479
00:18:06,480 --> 00:18:08,320
a specific network definition that i

480
00:18:08,320 --> 00:18:11,200
have created with multiuse

481
00:18:11,200 --> 00:18:12,160
and

482
00:18:12,160 --> 00:18:14,960
here as soon as i'm i'm creating that

483
00:18:14,960 --> 00:18:16,720
application or this application is

484
00:18:16,720 --> 00:18:18,480
popping up in any of the workers you

485
00:18:18,480 --> 00:18:19,679
don't know exactly where where it's

486
00:18:19,679 --> 00:18:21,600
going to happen depends how you set up

487
00:18:21,600 --> 00:18:23,760
the values of the workers and how the

488
00:18:23,760 --> 00:18:26,559
scheduler is actually using it

489
00:18:26,559 --> 00:18:27,520
it's going to

490
00:18:27,520 --> 00:18:29,280
go directly

491
00:18:29,280 --> 00:18:30,559
to the

492
00:18:30,559 --> 00:18:33,360
operator on the controller and say to

493
00:18:33,360 --> 00:18:34,960
the controller well

494
00:18:34,960 --> 00:18:36,799
this new application with those

495
00:18:36,799 --> 00:18:39,440
interfaces i need that switch actually

496
00:18:39,440 --> 00:18:41,440
to be connected then please create the

497
00:18:41,440 --> 00:18:44,559
vlans on that switch or router and add

498
00:18:44,559 --> 00:18:46,799
those sub interfaces directly to those

499
00:18:46,799 --> 00:18:48,880
layer two layer

500
00:18:48,880 --> 00:18:52,559
3d services on the network okay then uh

501
00:18:52,559 --> 00:18:53,919
sometimes

502
00:18:53,919 --> 00:18:56,559
you have applications that are running

503
00:18:56,559 --> 00:18:57,919
uh

504
00:18:57,919 --> 00:19:01,520
interfaces for example in the case of a

505
00:19:01,520 --> 00:19:03,679
cloud brand you have multiple different

506
00:19:03,679 --> 00:19:05,600
applications and parts some of those

507
00:19:05,600 --> 00:19:07,840
need to go and connect with the central

508
00:19:07,840 --> 00:19:10,240
unit others need to go to their radio

509
00:19:10,240 --> 00:19:11,600
unit then

510
00:19:11,600 --> 00:19:14,240
this is the way that actually you can

511
00:19:14,240 --> 00:19:16,000
create many replicas of the application

512
00:19:16,000 --> 00:19:17,039
and you know you're going to have

513
00:19:17,039 --> 00:19:18,160
something that is going to be

514
00:19:18,160 --> 00:19:19,600
overlooking

515
00:19:19,600 --> 00:19:21,120
where i need to do the changes on the

516
00:19:21,120 --> 00:19:23,200
underlay to keep the communication and

517
00:19:23,200 --> 00:19:26,960
do it quickly as possible

518
00:19:26,960 --> 00:19:27,840
and

519
00:19:27,840 --> 00:19:32,240
lately you have the network intent

520
00:19:32,799 --> 00:19:34,880
this is a this is an actual

521
00:19:34,880 --> 00:19:37,200
container image that you can run on your

522
00:19:37,200 --> 00:19:38,640
laptop

523
00:19:38,640 --> 00:19:40,400
when you want to build

524
00:19:40,400 --> 00:19:43,600
any helm packet char

525
00:19:43,600 --> 00:19:45,360
for a

526
00:19:45,360 --> 00:19:48,160
for your intent for for your deployment

527
00:19:48,160 --> 00:19:50,480
on the underlying network

528
00:19:50,480 --> 00:19:52,400
and and then you can take that

529
00:19:52,400 --> 00:19:54,400
information it's just bringing some

530
00:19:54,400 --> 00:19:56,880
simplicity in the way that i can design

531
00:19:56,880 --> 00:19:58,320
those templates

532
00:19:58,320 --> 00:20:00,400
and then put those templates

533
00:20:00,400 --> 00:20:02,720
directly on my ci cd tool that could be

534
00:20:02,720 --> 00:20:06,520
for example argo cd

535
00:20:09,760 --> 00:20:12,720
this is uh well what is what is the

536
00:20:12,720 --> 00:20:14,799
value prop that we are bringing with

537
00:20:14,799 --> 00:20:16,559
this solution

538
00:20:16,559 --> 00:20:18,320
after all this

539
00:20:18,320 --> 00:20:21,200
technical description well

540
00:20:21,200 --> 00:20:23,760
normally uh kubernetes

541
00:20:23,760 --> 00:20:25,679
the standard approach is

542
00:20:25,679 --> 00:20:27,679
yes i'm bringing orchestration to the

543
00:20:27,679 --> 00:20:30,000
network but the orchestration is only at

544
00:20:30,000 --> 00:20:32,840
the level of the servers at the

545
00:20:32,840 --> 00:20:36,640
nodes doesn't have any context of what

546
00:20:36,640 --> 00:20:38,720
is happening on the underlying network

547
00:20:38,720 --> 00:20:40,480
on the switch or router that i have at

548
00:20:40,480 --> 00:20:42,080
the edge

549
00:20:42,080 --> 00:20:42,960
then

550
00:20:42,960 --> 00:20:45,039
like i told you this is not enough is i

551
00:20:45,039 --> 00:20:46,840
need to connect some of those

552
00:20:46,840 --> 00:20:50,080
applications to other sites like uh like

553
00:20:50,080 --> 00:20:52,720
i told you a central side or

554
00:20:52,720 --> 00:20:53,919
or

555
00:20:53,919 --> 00:20:55,520
radio units

556
00:20:55,520 --> 00:20:57,440
then what is the evolution that we are

557
00:20:57,440 --> 00:20:59,120
bringing on the table with

558
00:20:59,120 --> 00:21:01,679
something like this with the crts in

559
00:21:01,679 --> 00:21:03,280
kupernetes

560
00:21:03,280 --> 00:21:04,880
and the controller

561
00:21:04,880 --> 00:21:07,760
is now i'm bringing all the context of

562
00:21:07,760 --> 00:21:10,000
the underlay

563
00:21:10,000 --> 00:21:11,280
network

564
00:21:11,280 --> 00:21:13,039
and the different services that i have

565
00:21:13,039 --> 00:21:14,960
through this underlying network to

566
00:21:14,960 --> 00:21:17,600
connect the different other sites

567
00:21:17,600 --> 00:21:20,960
directly to kubernetes and i can manage

568
00:21:20,960 --> 00:21:23,440
everything directly using kubernetes

569
00:21:23,440 --> 00:21:25,840
apis and then i'm using

570
00:21:25,840 --> 00:21:28,240
kubernetes not just like the

571
00:21:28,240 --> 00:21:31,280
orchestrator of my applications

572
00:21:31,280 --> 00:21:32,799
and using kubernetes now like

573
00:21:32,799 --> 00:21:34,640
orchestrator of my whole

574
00:21:34,640 --> 00:21:36,960
network at the edge

575
00:21:36,960 --> 00:21:38,240
then

576
00:21:38,240 --> 00:21:41,440
having those in intents i can take all

577
00:21:41,440 --> 00:21:44,320
of those intents along with application

578
00:21:44,320 --> 00:21:46,480
doesn't need to be an intel specific for

579
00:21:46,480 --> 00:21:48,559
the network i can put all together in

580
00:21:48,559 --> 00:21:49,679
the same

581
00:21:49,679 --> 00:21:51,039
helm chart

582
00:21:51,039 --> 00:21:54,240
the application for example definition

583
00:21:54,240 --> 00:21:56,320
and also the network requirements in

584
00:21:56,320 --> 00:21:59,600
only one package and

585
00:21:59,600 --> 00:22:00,799
and i can

586
00:22:00,799 --> 00:22:04,559
run those in multiple edge sites

587
00:22:04,559 --> 00:22:07,120
and and have this actually working

588
00:22:07,120 --> 00:22:09,679
through the apis to orchestrate all the

589
00:22:09,679 --> 00:22:12,320
deployment of my edge and the different

590
00:22:12,320 --> 00:22:13,679
applications

591
00:22:13,679 --> 00:22:16,159
even if i need to run this for different

592
00:22:16,159 --> 00:22:18,559
vendors

593
00:22:18,799 --> 00:22:20,240
then

594
00:22:20,240 --> 00:22:23,120
what is the benefit of that

595
00:22:23,120 --> 00:22:24,559
first

596
00:22:24,559 --> 00:22:27,039
i'm providing an in intent based

597
00:22:27,039 --> 00:22:29,440
solution for the edge

598
00:22:29,440 --> 00:22:30,720
where you can

599
00:22:30,720 --> 00:22:32,480
design

600
00:22:32,480 --> 00:22:34,720
your underlying network depending on the

601
00:22:34,720 --> 00:22:37,360
use case or your application

602
00:22:37,360 --> 00:22:38,720
in a

603
00:22:38,720 --> 00:22:41,280
intent format i mean in this case in a

604
00:22:41,280 --> 00:22:43,200
helm chart

605
00:22:43,200 --> 00:22:44,080
uh

606
00:22:44,080 --> 00:22:45,679
that is basically a jump file or could

607
00:22:45,679 --> 00:22:47,520
be a json file

608
00:22:47,520 --> 00:22:48,880
and i

609
00:22:48,880 --> 00:22:50,559
can put this directly with my

610
00:22:50,559 --> 00:22:54,640
application then it's only

611
00:22:54,640 --> 00:22:55,440
one

612
00:22:55,440 --> 00:22:57,760
pipeline investment that i'm doing

613
00:22:57,760 --> 00:23:00,400
along with my application to also take

614
00:23:00,400 --> 00:23:02,480
care of the network

615
00:23:02,480 --> 00:23:05,440
and i want to have only one single

616
00:23:05,440 --> 00:23:07,520
source of truth

617
00:23:07,520 --> 00:23:08,559
regarding

618
00:23:08,559 --> 00:23:09,840
anything that i'm going to need at the

619
00:23:09,840 --> 00:23:11,520
edge then everything is going to be

620
00:23:11,520 --> 00:23:12,799
actually

621
00:23:12,799 --> 00:23:15,039
in this intent

622
00:23:15,039 --> 00:23:16,320
um

623
00:23:16,320 --> 00:23:18,320
and that internet is going to have a

624
00:23:18,320 --> 00:23:19,440
value

625
00:23:19,440 --> 00:23:22,240
values file where i can customize

626
00:23:22,240 --> 00:23:23,600
everything

627
00:23:23,600 --> 00:23:26,480
from that point of view

628
00:23:30,240 --> 00:23:31,679
what is going to happen in my

629
00:23:31,679 --> 00:23:33,520
organization is

630
00:23:33,520 --> 00:23:35,039
you have

631
00:23:35,039 --> 00:23:37,280
the concept of netops

632
00:23:37,280 --> 00:23:39,280
and some of those are actually working

633
00:23:39,280 --> 00:23:42,000
as uh network designers

634
00:23:42,000 --> 00:23:44,480
those network designers now

635
00:23:44,480 --> 00:23:45,840
anything that you're gonna need from the

636
00:23:45,840 --> 00:23:48,240
point of view of the network can be done

637
00:23:48,240 --> 00:23:50,559
in a intent in a

638
00:23:50,559 --> 00:23:53,039
file json file jump file

639
00:23:53,039 --> 00:23:55,760
like any any piece of code

640
00:23:55,760 --> 00:23:58,640
you can define all your settings for

641
00:23:58,640 --> 00:24:01,520
that edge directly on that intent

642
00:24:01,520 --> 00:24:04,080
and then provide that intent using those

643
00:24:04,080 --> 00:24:07,120
crds that we are using

644
00:24:07,120 --> 00:24:09,360
with this controller

645
00:24:09,360 --> 00:24:12,720
to the operation that where they can

646
00:24:12,720 --> 00:24:15,520
change any of the values to customize

647
00:24:15,520 --> 00:24:17,600
those intents depending on the use cases

648
00:24:17,600 --> 00:24:20,880
that they need to bring at the edge

649
00:24:20,880 --> 00:24:25,039
we have also cases that we have

650
00:24:25,039 --> 00:24:27,039
the application

651
00:24:27,039 --> 00:24:30,400
team that is also using those intents

652
00:24:30,400 --> 00:24:32,960
to create other services uh we have a

653
00:24:32,960 --> 00:24:35,360
case with low balancers

654
00:24:35,360 --> 00:24:37,679
we were actually working only in telco

655
00:24:37,679 --> 00:24:39,039
use cases

656
00:24:39,039 --> 00:24:41,200
but

657
00:24:41,200 --> 00:24:43,760
someone was asking well i need to do a

658
00:24:43,760 --> 00:24:45,919
bgp relationship with the low balancers

659
00:24:45,919 --> 00:24:49,279
on my my notes my kubernetes notes

660
00:24:49,279 --> 00:24:51,200
and every time that i need to do that i

661
00:24:51,200 --> 00:24:52,720
need to go and open a ticket with the

662
00:24:52,720 --> 00:24:55,440
network team and it's taking me like a

663
00:24:55,440 --> 00:24:57,600
couple of weeks to get an answer back

664
00:24:57,600 --> 00:24:58,320
and

665
00:24:58,320 --> 00:24:59,679
i have that

666
00:24:59,679 --> 00:25:00,960
then um

667
00:25:00,960 --> 00:25:03,919
in those cases the network

668
00:25:03,919 --> 00:25:06,159
operation team can provide those

669
00:25:06,159 --> 00:25:07,360
templates

670
00:25:07,360 --> 00:25:09,840
and bring some

671
00:25:09,840 --> 00:25:12,320
some flexibility to the application

672
00:25:12,320 --> 00:25:14,400
team to do all the changes that they

673
00:25:14,400 --> 00:25:16,159
need in order to start

674
00:25:16,159 --> 00:25:17,679
doing the pgp peering for the load

675
00:25:17,679 --> 00:25:19,919
balancer service and get a similar

676
00:25:19,919 --> 00:25:21,520
approach on the way that you're having

677
00:25:21,520 --> 00:25:23,200
on the public cloud but now in on

678
00:25:23,200 --> 00:25:25,679
premises

679
00:25:26,000 --> 00:25:28,480
then saving a lot of time you can put

680
00:25:28,480 --> 00:25:31,120
different roles and you have the concept

681
00:25:31,120 --> 00:25:33,039
of cdci also

682
00:25:33,039 --> 00:25:34,640
bringing the agility that the eh is

683
00:25:34,640 --> 00:25:36,880
going to require

684
00:25:36,880 --> 00:25:37,840
then

685
00:25:37,840 --> 00:25:40,000
this is an example of

686
00:25:40,000 --> 00:25:40,840
an

687
00:25:40,840 --> 00:25:43,760
intent is a helm chart

688
00:25:43,760 --> 00:25:44,880
then

689
00:25:44,880 --> 00:25:46,720
on the right you have the template that

690
00:25:46,720 --> 00:25:48,880
is the one that actually is defining the

691
00:25:48,880 --> 00:25:50,000
crd

692
00:25:50,000 --> 00:25:51,520
like i told you the crd is just a

693
00:25:51,520 --> 00:25:54,559
definition of an object you just in this

694
00:25:54,559 --> 00:25:56,240
case the object is a piece of the

695
00:25:56,240 --> 00:25:57,600
configuration of the router and the

696
00:25:57,600 --> 00:26:00,000
switch then in gnmi

697
00:26:00,000 --> 00:26:01,760
just specify the path

698
00:26:01,760 --> 00:26:03,760
where you are going to do the change and

699
00:26:03,760 --> 00:26:05,760
the values of that tree

700
00:26:05,760 --> 00:26:08,000
for the change

701
00:26:08,000 --> 00:26:08,880
and

702
00:26:08,880 --> 00:26:10,480
on the left

703
00:26:10,480 --> 00:26:12,000
you provide the

704
00:26:12,000 --> 00:26:14,320
different values the inputs that you can

705
00:26:14,320 --> 00:26:15,520
use

706
00:26:15,520 --> 00:26:16,960
for that change

707
00:26:16,960 --> 00:26:20,240
in this case for example i have the

708
00:26:20,240 --> 00:26:23,120
physical interface one one and i'm

709
00:26:23,120 --> 00:26:26,000
defining four villains

710
00:26:26,000 --> 00:26:28,320
with some specific numbers but in other

711
00:26:28,320 --> 00:26:31,760
cases probably i need to use other

712
00:26:31,760 --> 00:26:32,559
uh

713
00:26:32,559 --> 00:26:34,480
sort of feelings or more villains or

714
00:26:34,480 --> 00:26:36,640
lesbians then i can provide this

715
00:26:36,640 --> 00:26:38,720
information directly on the values chart

716
00:26:38,720 --> 00:26:41,200
and i don't need to touch the template

717
00:26:41,200 --> 00:26:43,440
the design of the network

718
00:26:43,440 --> 00:26:44,799
okay

719
00:26:44,799 --> 00:26:46,080
then

720
00:26:46,080 --> 00:26:47,840
on the right you have the network

721
00:26:47,840 --> 00:26:50,799
designers that they can create intent

722
00:26:50,799 --> 00:26:52,320
and on the left you have the network

723
00:26:52,320 --> 00:26:55,120
operators that can be modifying those

724
00:26:55,120 --> 00:26:57,600
values depending on what applications or

725
00:26:57,600 --> 00:26:59,760
what vlans they are going to require

726
00:26:59,760 --> 00:27:02,000
okay

727
00:27:04,159 --> 00:27:06,880
here you have a screenshot of

728
00:27:06,880 --> 00:27:09,279
how we are

729
00:27:09,279 --> 00:27:12,240
seeing these changes in kubernetes

730
00:27:12,240 --> 00:27:13,760
then

731
00:27:13,760 --> 00:27:15,039
the

732
00:27:15,039 --> 00:27:16,960
application team and the network

733
00:27:16,960 --> 00:27:19,440
operation team they can see if those

734
00:27:19,440 --> 00:27:21,760
changes those crts

735
00:27:21,760 --> 00:27:24,080
actually if they are working you can see

736
00:27:24,080 --> 00:27:26,000
the path that actually of the

737
00:27:26,000 --> 00:27:27,840
configuration that they are changing on

738
00:27:27,840 --> 00:27:29,919
the switch on and in the router

739
00:27:29,919 --> 00:27:32,559
you can see if the process was uh

740
00:27:32,559 --> 00:27:34,159
successful

741
00:27:34,159 --> 00:27:37,360
and in some cases this is the status is

742
00:27:37,360 --> 00:27:39,840
not ready you can't just go

743
00:27:39,840 --> 00:27:41,919
inside the controller and see what is

744
00:27:41,919 --> 00:27:42,880
wrong

745
00:27:42,880 --> 00:27:46,399
uh or you can go to prometheus or or

746
00:27:46,399 --> 00:27:49,120
or fluentd and start pulling information

747
00:27:49,120 --> 00:27:49,919
through

748
00:27:49,919 --> 00:27:52,480
grafana or kivana to see

749
00:27:52,480 --> 00:27:54,799
maybe a bigger picture of that

750
00:27:54,799 --> 00:27:56,159
and

751
00:27:56,159 --> 00:27:58,320
you can go to every

752
00:27:58,320 --> 00:27:59,279
piece

753
00:27:59,279 --> 00:28:00,080
of

754
00:28:00,080 --> 00:28:02,159
the crds that we are defining with this

755
00:28:02,159 --> 00:28:03,440
solution

756
00:28:03,440 --> 00:28:05,039
if you go for example this is one of the

757
00:28:05,039 --> 00:28:06,640
crds

758
00:28:06,640 --> 00:28:08,559
that you see before then and just

759
00:28:08,559 --> 00:28:12,399
getting one of those uh element objects

760
00:28:12,399 --> 00:28:14,640
and then just getting the description

761
00:28:14,640 --> 00:28:16,320
you can see that actually you have

762
00:28:16,320 --> 00:28:18,240
something very similar of what i'm doing

763
00:28:18,240 --> 00:28:21,279
with gnmi and just putting the path

764
00:28:21,279 --> 00:28:23,279
of what i want to change

765
00:28:23,279 --> 00:28:25,440
and you have the values of the actual

766
00:28:25,440 --> 00:28:27,279
change that i'm doing in that part of

767
00:28:27,279 --> 00:28:30,640
the the configuration

768
00:28:30,640 --> 00:28:31,760
and

769
00:28:31,760 --> 00:28:33,600
also you're getting the state of that is

770
00:28:33,600 --> 00:28:35,039
this the working nothing not working

771
00:28:35,039 --> 00:28:37,760
every time i can go to kubernetes and i

772
00:28:37,760 --> 00:28:39,039
can do

773
00:28:39,039 --> 00:28:40,720
a change anytime

774
00:28:40,720 --> 00:28:42,480
of that crd and this is going to be

775
00:28:42,480 --> 00:28:44,320
reconciled immediately with the

776
00:28:44,320 --> 00:28:46,720
underlying network i don't need to go

777
00:28:46,720 --> 00:28:49,440
all the way through only home i just can

778
00:28:49,440 --> 00:28:51,600
go directly for example

779
00:28:51,600 --> 00:28:54,080
do that crd and do a specific change

780
00:28:54,080 --> 00:28:55,440
manually and that is going to be

781
00:28:55,440 --> 00:28:57,039
reconciled immediately also on the

782
00:28:57,039 --> 00:28:58,640
network but this is going to be my

783
00:28:58,640 --> 00:29:01,200
single sort of truth of what i have in

784
00:29:01,200 --> 00:29:04,159
my underlying network

785
00:29:06,799 --> 00:29:09,440
there are multiple use cases we've been

786
00:29:09,440 --> 00:29:11,440
working with some customers

787
00:29:11,440 --> 00:29:13,200
with proof of concepts

788
00:29:13,200 --> 00:29:15,520
we have a pros of concept with packet

789
00:29:15,520 --> 00:29:16,799
core

790
00:29:16,799 --> 00:29:19,120
we have a profile concept with the cloud

791
00:29:19,120 --> 00:29:20,159
run

792
00:29:20,159 --> 00:29:22,080
we are working with different kubernetes

793
00:29:22,080 --> 00:29:25,520
er distributions in some cases vanella

794
00:29:25,520 --> 00:29:27,840
some cases we are using openshift

795
00:29:27,840 --> 00:29:30,000
other cases we are working with a google

796
00:29:30,000 --> 00:29:31,039
anthos

797
00:29:31,039 --> 00:29:33,600
we are not limited in the in the

798
00:29:33,600 --> 00:29:35,120
type of kubernetes that you can use for

799
00:29:35,120 --> 00:29:36,399
this

800
00:29:36,399 --> 00:29:37,520
um

801
00:29:37,520 --> 00:29:39,440
we are working through the apis

802
00:29:39,440 --> 00:29:41,440
then it doesn't matter what kind of

803
00:29:41,440 --> 00:29:44,080
kubernetes or runtime or container

804
00:29:44,080 --> 00:29:46,960
runtime you have

805
00:29:47,360 --> 00:29:48,799
we have also

806
00:29:48,799 --> 00:29:50,960
a use case that is the enterprise hub

807
00:29:50,960 --> 00:29:52,480
network

808
00:29:52,480 --> 00:29:56,000
in this case the

809
00:29:56,000 --> 00:29:57,679
the

810
00:29:57,679 --> 00:29:59,600
the virtual

811
00:29:59,600 --> 00:30:01,840
the the application is a security

812
00:30:01,840 --> 00:30:03,679
gateway

813
00:30:03,679 --> 00:30:05,840
uh and this is the one that actually i

814
00:30:05,840 --> 00:30:08,399
got uh i have a recording of the demo

815
00:30:08,399 --> 00:30:10,240
like i compressed the demo in four

816
00:30:10,240 --> 00:30:12,559
minutes video i'm just going to show you

817
00:30:12,559 --> 00:30:14,720
a high-level understanding of the

818
00:30:14,720 --> 00:30:15,760
solution

819
00:30:15,760 --> 00:30:18,880
but the funny thing of this is

820
00:30:18,880 --> 00:30:20,880
the security gateway also have an nmi

821
00:30:20,880 --> 00:30:23,600
interface then i i

822
00:30:23,600 --> 00:30:25,840
not doing just the intent for the

823
00:30:25,840 --> 00:30:27,600
underlying network i also doing the

824
00:30:27,600 --> 00:30:30,080
intent for the actual security gateway

825
00:30:30,080 --> 00:30:31,840
that is an application running on top of

826
00:30:31,840 --> 00:30:33,840
the cluster

827
00:30:33,840 --> 00:30:34,799
then

828
00:30:34,799 --> 00:30:36,559
we are not just bringing the intent for

829
00:30:36,559 --> 00:30:38,240
like i told you for the infra we're

830
00:30:38,240 --> 00:30:40,640
bringing the the whole concept

831
00:30:40,640 --> 00:30:43,200
in in an instant

832
00:30:43,200 --> 00:30:45,200
then

833
00:30:45,200 --> 00:30:47,520
for this demo

834
00:30:47,520 --> 00:30:49,200
and this is an actual demo that we are

835
00:30:49,200 --> 00:30:50,640
doing with a customer actually the

836
00:30:50,640 --> 00:30:53,360
customer requested to do this

837
00:30:53,360 --> 00:30:54,559
this demo

838
00:30:54,559 --> 00:30:57,760
and by the way this is still a work in

839
00:30:57,760 --> 00:31:00,159
progress we are thinking to release the

840
00:31:00,159 --> 00:31:02,799
apis

841
00:31:03,120 --> 00:31:05,840
to everybody to use it and if everything

842
00:31:05,840 --> 00:31:07,279
goes okay probably in a couple of years

843
00:31:07,279 --> 00:31:08,720
we're gonna release the whole code of

844
00:31:08,720 --> 00:31:11,919
the application to the whole community

845
00:31:11,919 --> 00:31:13,600
but so far we're gonna start releasing

846
00:31:13,600 --> 00:31:15,519
the apis

847
00:31:15,519 --> 00:31:16,559
then

848
00:31:16,559 --> 00:31:18,480
what we did is

849
00:31:18,480 --> 00:31:19,760
uh

850
00:31:19,760 --> 00:31:22,880
this customer was requesting a solution

851
00:31:22,880 --> 00:31:25,440
uh because many because of it many of

852
00:31:25,440 --> 00:31:27,120
the employees were actually returning

853
00:31:27,120 --> 00:31:29,360
home and working from home

854
00:31:29,360 --> 00:31:30,399
and

855
00:31:30,399 --> 00:31:32,960
and at least

856
00:31:32,960 --> 00:31:35,600
in my own experience when i have to go

857
00:31:35,600 --> 00:31:38,559
and start working from home

858
00:31:38,559 --> 00:31:40,399
i was working in my lab and from the

859
00:31:40,399 --> 00:31:42,159
office and i could just upload a

860
00:31:42,159 --> 00:31:44,960
container image in two minutes

861
00:31:44,960 --> 00:31:47,519
working from home connecting a vpn from

862
00:31:47,519 --> 00:31:50,880
texas to chicago took me like two hours

863
00:31:50,880 --> 00:31:52,240
and you can see there is a big

864
00:31:52,240 --> 00:31:54,480
difference between working from office

865
00:31:54,480 --> 00:31:57,440
with a private link to your lab

866
00:31:57,440 --> 00:31:59,519
that working from a vpn that you

867
00:31:59,519 --> 00:32:01,840
actually using from home then

868
00:32:01,840 --> 00:32:05,120
we were thinking about many solutions um

869
00:32:05,120 --> 00:32:07,760
we have also the sd1 but the property

870
00:32:07,760 --> 00:32:09,440
university one you need to invest in a

871
00:32:09,440 --> 00:32:12,080
appliance in every home and you need to

872
00:32:12,080 --> 00:32:13,120
provide

873
00:32:13,120 --> 00:32:14,559
even though a private link because

874
00:32:14,559 --> 00:32:16,720
internet is not enough

875
00:32:16,720 --> 00:32:17,840
and

876
00:32:17,840 --> 00:32:21,600
other solution that we were thinking is

877
00:32:21,600 --> 00:32:23,840
maybe we can go with a private link and

878
00:32:23,840 --> 00:32:26,159
us cpa directly at

879
00:32:26,159 --> 00:32:28,640
every home but it the cost of software

880
00:32:28,640 --> 00:32:30,799
the cost of of the appliance and now the

881
00:32:30,799 --> 00:32:33,679
link is is very high then the solution

882
00:32:33,679 --> 00:32:35,279
that we were thinking with the customer

883
00:32:35,279 --> 00:32:36,799
is okay

884
00:32:36,799 --> 00:32:39,519
what about if at the edge in one of the

885
00:32:39,519 --> 00:32:41,679
headings that i had on

886
00:32:41,679 --> 00:32:44,399
many of the cities you know you have

887
00:32:44,399 --> 00:32:46,960
probably like uh 10 or 20 hittings in

888
00:32:46,960 --> 00:32:49,120
every city for different residential

889
00:32:49,120 --> 00:32:50,159
areas

890
00:32:50,159 --> 00:32:52,159
we can just bring a security guard right

891
00:32:52,159 --> 00:32:52,960
there

892
00:32:52,960 --> 00:32:54,799
and from there to create a link a

893
00:32:54,799 --> 00:32:57,440
private link to the central offices with

894
00:32:57,440 --> 00:33:00,880
a vpn with mtls that could be

895
00:33:00,880 --> 00:33:02,640
a possible solution

896
00:33:02,640 --> 00:33:03,760
then

897
00:33:03,760 --> 00:33:05,519
we were thinking about this

898
00:33:05,519 --> 00:33:06,320
well

899
00:33:06,320 --> 00:33:08,240
the limited space that we have in those

900
00:33:08,240 --> 00:33:10,399
places actually force us to go and think

901
00:33:10,399 --> 00:33:12,880
about immediately about kubernetes and

902
00:33:12,880 --> 00:33:15,279
think about how can i automate

903
00:33:15,279 --> 00:33:16,799
hundreds of sites

904
00:33:16,799 --> 00:33:18,960
with a security graphic solution using a

905
00:33:18,960 --> 00:33:20,799
controller like this

906
00:33:20,799 --> 00:33:21,840
then

907
00:33:21,840 --> 00:33:23,200
we thought in the

908
00:33:23,200 --> 00:33:25,039
virtual security gateway

909
00:33:25,039 --> 00:33:27,120
as a network function running directly

910
00:33:27,120 --> 00:33:28,799
on kubernetes

911
00:33:28,799 --> 00:33:31,760
at the at that site and then

912
00:33:31,760 --> 00:33:34,240
that is going to help me as a user to

913
00:33:34,240 --> 00:33:35,519
use any

914
00:33:35,519 --> 00:33:37,120
sort of application

915
00:33:37,120 --> 00:33:39,120
that can support ibsec to create a

916
00:33:39,120 --> 00:33:40,720
tunnel i don't need a specific

917
00:33:40,720 --> 00:33:42,880
application i just need to score ipsec

918
00:33:42,880 --> 00:33:44,720
and get the certificates from my

919
00:33:44,720 --> 00:33:46,960
organization and that's it

920
00:33:46,960 --> 00:33:48,240
then

921
00:33:48,240 --> 00:33:50,320
what we did is

922
00:33:50,320 --> 00:33:52,640
we create a proof of concept thinking is

923
00:33:52,640 --> 00:33:54,080
okay i have

924
00:33:54,080 --> 00:33:57,279
the user the home juicer from

925
00:33:57,279 --> 00:33:59,120
uh in one end

926
00:33:59,120 --> 00:34:00,880
i have the central offices in the other

927
00:34:00,880 --> 00:34:02,799
end and in the middle i need to put the

928
00:34:02,799 --> 00:34:05,840
couponers uh kubernetes cluster with my

929
00:34:05,840 --> 00:34:07,840
virtual security gateway

930
00:34:07,840 --> 00:34:09,839
and get the connection

931
00:34:09,839 --> 00:34:12,000
from the user to that virtual gateway

932
00:34:12,000 --> 00:34:14,079
and then going from there to the central

933
00:34:14,079 --> 00:34:15,599
office

934
00:34:15,599 --> 00:34:17,440
was very basic

935
00:34:17,440 --> 00:34:20,159
however they also that well i want that

936
00:34:20,159 --> 00:34:21,679
security get player to also support

937
00:34:21,679 --> 00:34:23,199
multiple organizations and multiple

938
00:34:23,199 --> 00:34:24,800
customers

939
00:34:24,800 --> 00:34:26,960
then um when we're starting to deal with

940
00:34:26,960 --> 00:34:28,159
that we

941
00:34:28,159 --> 00:34:30,239
realize okay probably we need

942
00:34:30,239 --> 00:34:31,839
multiple interfaces we were thinking

943
00:34:31,839 --> 00:34:33,599
first in just a couple of interfaces

944
00:34:33,599 --> 00:34:36,159
then saturday we were thinking in maybe

945
00:34:36,159 --> 00:34:38,800
eight or 16 interfaces in the same

946
00:34:38,800 --> 00:34:41,199
virtual instance that was running in

947
00:34:41,199 --> 00:34:43,040
kubernetes

948
00:34:43,040 --> 00:34:44,800
then

949
00:34:44,800 --> 00:34:47,280
we created a demo

950
00:34:47,280 --> 00:34:48,800
uh

951
00:34:48,800 --> 00:34:51,359
everything virtual at first

952
00:34:51,359 --> 00:34:53,359
and then um

953
00:34:53,359 --> 00:34:56,560
we put uh our security gateway in

954
00:34:56,560 --> 00:34:58,160
kubernetes

955
00:34:58,160 --> 00:35:00,960
uh i think it's very small sorry for the

956
00:35:00,960 --> 00:35:02,320
small fund

957
00:35:02,320 --> 00:35:03,280
and

958
00:35:03,280 --> 00:35:05,680
and we have a an area at the top that is

959
00:35:05,680 --> 00:35:07,040
the security gateway with the

960
00:35:07,040 --> 00:35:08,240
certificates

961
00:35:08,240 --> 00:35:10,079
uh and at the bottom we have the vprm

962
00:35:10,079 --> 00:35:11,760
that is going and taking me to the

963
00:35:11,760 --> 00:35:13,440
office okay

964
00:35:13,440 --> 00:35:16,400
in the middle i have the leaf that is

965
00:35:16,400 --> 00:35:18,800
actually leaving the at the edge

966
00:35:18,800 --> 00:35:22,240
and i have also a border leaf or border

967
00:35:22,240 --> 00:35:24,320
gateway that is the one bringing all the

968
00:35:24,320 --> 00:35:26,480
services from the

969
00:35:26,480 --> 00:35:29,280
residential user and also

970
00:35:29,280 --> 00:35:31,599
giving me the access to the central

971
00:35:31,599 --> 00:35:34,240
office throughout tls network

972
00:35:34,240 --> 00:35:37,040
then we simulate everything with

973
00:35:37,040 --> 00:35:38,400
containers

974
00:35:38,400 --> 00:35:41,359
and virtual wires

975
00:35:41,680 --> 00:35:43,760
we thought well will something like that

976
00:35:43,760 --> 00:35:45,200
is is good

977
00:35:45,200 --> 00:35:45,920
but

978
00:35:45,920 --> 00:35:47,520
well you know there is some constraint

979
00:35:47,520 --> 00:35:49,839
to get devices and sometimes it's taking

980
00:35:49,839 --> 00:35:52,720
months to to get my full lap or the full

981
00:35:52,720 --> 00:35:54,560
stack of devices that i need to to build

982
00:35:54,560 --> 00:35:56,240
that up and

983
00:35:56,240 --> 00:35:58,160
thanks to the technology of containers

984
00:35:58,160 --> 00:36:00,320
now we can have switches routers in

985
00:36:00,320 --> 00:36:02,480
containers we can use virtual wires for

986
00:36:02,480 --> 00:36:04,960
the connectivity even kubernetes can be

987
00:36:04,960 --> 00:36:06,720
running in containers using virtual

988
00:36:06,720 --> 00:36:10,160
wires to connect the whole thing

989
00:36:10,440 --> 00:36:14,640
then um we use container lab

990
00:36:14,640 --> 00:36:15,599
uh

991
00:36:15,599 --> 00:36:17,200
who is not familiar with container lab

992
00:36:17,200 --> 00:36:18,880
that was actually on a presentation i

993
00:36:18,880 --> 00:36:22,880
think two nanos ago and nanox ago uh

994
00:36:22,880 --> 00:36:26,960
where actually they they brought a tool

995
00:36:26,960 --> 00:36:28,640
that is

996
00:36:28,640 --> 00:36:30,880
online that you can just download and

997
00:36:30,880 --> 00:36:33,599
create any sort of um

998
00:36:33,599 --> 00:36:35,520
topology for your data center in this

999
00:36:35,520 --> 00:36:37,440
case we created a topology for the edge

1000
00:36:37,440 --> 00:36:38,960
but you can go with a three-tier

1001
00:36:38,960 --> 00:36:41,440
topology if you want to try to simulate

1002
00:36:41,440 --> 00:36:43,280
a data center with that

1003
00:36:43,280 --> 00:36:46,000
then we use the container lab we created

1004
00:36:46,000 --> 00:36:48,480
the kubernetes cluster we connected that

1005
00:36:48,480 --> 00:36:51,680
with virtual wires in the same server

1006
00:36:51,680 --> 00:36:52,800
and

1007
00:36:52,800 --> 00:36:54,400
we brought the security gateway as a

1008
00:36:54,400 --> 00:36:56,240
virtual application

1009
00:36:56,240 --> 00:36:57,839
and

1010
00:36:57,839 --> 00:36:59,440
thanks to that

1011
00:36:59,440 --> 00:37:00,560
thanks to

1012
00:37:00,560 --> 00:37:02,480
the controller the edge controller

1013
00:37:02,480 --> 00:37:04,160
we could create all the configuration

1014
00:37:04,160 --> 00:37:06,320
not just for the underlay network

1015
00:37:06,320 --> 00:37:08,720
uh from the scratch also for the

1016
00:37:08,720 --> 00:37:11,760
security gateway through the gnmi access

1017
00:37:11,760 --> 00:37:13,119
in this case in this case we were

1018
00:37:13,119 --> 00:37:15,359
working with just one replica but it

1019
00:37:15,359 --> 00:37:17,359
demo can be extended to many replicas of

1020
00:37:17,359 --> 00:37:19,040
the security gateway

1021
00:37:19,040 --> 00:37:20,960
you are not limited in resources from

1022
00:37:20,960 --> 00:37:22,720
the point of view of

1023
00:37:22,720 --> 00:37:24,400
of the kubernetes unless you have only

1024
00:37:24,400 --> 00:37:26,240
one node but if you have multiple nodes

1025
00:37:26,240 --> 00:37:27,599
you can create many replicas that you

1026
00:37:27,599 --> 00:37:29,760
want

1027
00:37:29,760 --> 00:37:31,680
um

1028
00:37:31,680 --> 00:37:34,000
again sorry for a small phone you have

1029
00:37:34,000 --> 00:37:36,079
here this is the full topology that

1030
00:37:36,079 --> 00:37:37,440
actually we created through the

1031
00:37:37,440 --> 00:37:40,320
controller via gnmi

1032
00:37:40,320 --> 00:37:42,400
we created the security gateway the vp

1033
00:37:42,400 --> 00:37:44,640
rearrange we created this for different

1034
00:37:44,640 --> 00:37:47,760
organizations for different users

1035
00:37:47,760 --> 00:37:48,800
and

1036
00:37:48,800 --> 00:37:51,599
we did everything at the

1037
00:37:51,599 --> 00:37:53,680
border leaf and also at the

1038
00:37:53,680 --> 00:37:56,079
left that is where that is directly

1039
00:37:56,079 --> 00:37:58,480
connected to the servers

1040
00:37:58,480 --> 00:38:00,320
everything from kubernetes we didn't

1041
00:38:00,320 --> 00:38:03,839
touch any device at all not even the

1042
00:38:03,839 --> 00:38:06,079
virtual security gateway the virtual

1043
00:38:06,079 --> 00:38:08,560
security technology also was fully set

1044
00:38:08,560 --> 00:38:11,680
up from kuverners

1045
00:38:12,240 --> 00:38:15,599
and that took us only

1046
00:38:15,599 --> 00:38:17,119
um

1047
00:38:17,119 --> 00:38:19,760
five minutes to be

1048
00:38:19,760 --> 00:38:21,839
more exact

1049
00:38:21,839 --> 00:38:23,119
then um

1050
00:38:23,119 --> 00:38:25,839
this is our recording it's uh

1051
00:38:25,839 --> 00:38:27,119
you're gonna have a recording of this

1052
00:38:27,119 --> 00:38:29,520
session then you can go later step by

1053
00:38:29,520 --> 00:38:31,359
step if you want to see it

1054
00:38:31,359 --> 00:38:32,560
carefully

1055
00:38:32,560 --> 00:38:34,800
sorry about that but i just wanna

1056
00:38:34,800 --> 00:38:36,720
bring the whole

1057
00:38:36,720 --> 00:38:39,680
the high level description of the video

1058
00:38:39,680 --> 00:38:41,680
here you're seeing and i'm trying to

1059
00:38:41,680 --> 00:38:44,400
zoom in some of the the pieces of this

1060
00:38:44,400 --> 00:38:47,359
uh demo you're gonna see that a i'm

1061
00:38:47,359 --> 00:38:49,599
running helm packages

1062
00:38:49,599 --> 00:38:52,640
in my kubernetes to set up all my

1063
00:38:52,640 --> 00:38:55,680
network all my underlay network then as

1064
00:38:55,680 --> 00:38:58,320
you see here i only have in my switches

1065
00:38:58,320 --> 00:39:00,800
the management network first and now

1066
00:39:00,800 --> 00:39:04,160
after i i run the helm chart i have also

1067
00:39:04,160 --> 00:39:05,839
the layer two services that are gonna

1068
00:39:05,839 --> 00:39:07,599
provide to all my applications on the

1069
00:39:07,599 --> 00:39:10,079
kubernetes cluster

1070
00:39:10,079 --> 00:39:11,520
and

1071
00:39:11,520 --> 00:39:13,200
then

1072
00:39:13,200 --> 00:39:14,480
i'm gonna

1073
00:39:14,480 --> 00:39:17,040
start creating now my security gateway

1074
00:39:17,040 --> 00:39:18,880
when i create my security gateway i'm

1075
00:39:18,880 --> 00:39:20,400
adding four

1076
00:39:20,400 --> 00:39:22,480
additional interfaces to my security

1077
00:39:22,480 --> 00:39:23,599
gateway

1078
00:39:23,599 --> 00:39:25,200
i don't know if it's gonna pop up in the

1079
00:39:25,200 --> 00:39:27,520
worker one or the worker two this is why

1080
00:39:27,520 --> 00:39:29,920
we have the agent that's gonna do my the

1081
00:39:29,920 --> 00:39:31,119
job for me

1082
00:39:31,119 --> 00:39:33,680
this is machine to machine i i'm not

1083
00:39:33,680 --> 00:39:35,599
actually deciding anything here this

1084
00:39:35,599 --> 00:39:37,359
actually the machine

1085
00:39:37,359 --> 00:39:38,640
the kubernetes and the switches are

1086
00:39:38,640 --> 00:39:40,079
deciding where they're gonna actually

1087
00:39:40,079 --> 00:39:43,119
allocate the services and then you see

1088
00:39:43,119 --> 00:39:45,760
here there as soon as i created the

1089
00:39:45,760 --> 00:39:47,680
security gateway

1090
00:39:47,680 --> 00:39:48,480
is

1091
00:39:48,480 --> 00:39:50,240
the application through the controller

1092
00:39:50,240 --> 00:39:52,000
create the sub-interfaces and allocate

1093
00:39:52,000 --> 00:39:55,119
those sub-interfaces in the right

1094
00:39:55,119 --> 00:39:57,680
interfaces and i and then connect that

1095
00:39:57,680 --> 00:40:00,079
to the right services depending if i'm

1096
00:40:00,079 --> 00:40:02,160
going to the user home user or i'm going

1097
00:40:02,160 --> 00:40:04,240
to the central office

1098
00:40:04,240 --> 00:40:06,400
and

1099
00:40:06,400 --> 00:40:07,920
i want to

1100
00:40:07,920 --> 00:40:10,880
also set up the security gateway because

1101
00:40:10,880 --> 00:40:12,560
i have my

1102
00:40:12,560 --> 00:40:14,240
security the appliance the virtual

1103
00:40:14,240 --> 00:40:16,000
appliance working but now i need to set

1104
00:40:16,000 --> 00:40:18,560
up my significant way i need to create

1105
00:40:18,560 --> 00:40:20,960
put the certificates do the ipsec

1106
00:40:20,960 --> 00:40:22,000
settings

1107
00:40:22,000 --> 00:40:22,960
and

1108
00:40:22,960 --> 00:40:25,440
for the security gateway to work

1109
00:40:25,440 --> 00:40:28,960
and and if you see in this testing

1110
00:40:28,960 --> 00:40:31,599
the home 2 is not working the home one

1111
00:40:31,599 --> 00:40:34,160
is the only one actually working

1112
00:40:34,160 --> 00:40:38,160
in this uh this we did that at purpose

1113
00:40:38,160 --> 00:40:40,640
because now i'm gonna go to the

1114
00:40:40,640 --> 00:40:42,640
intent and i'm gonna start changing the

1115
00:40:42,640 --> 00:40:45,040
values of my intent to also add the

1116
00:40:45,040 --> 00:40:45,920
second

1117
00:40:45,920 --> 00:40:47,680
home user

1118
00:40:47,680 --> 00:40:49,760
and i'm commenting the lines

1119
00:40:49,760 --> 00:40:51,440
and now i'm gonna applying the chart

1120
00:40:51,440 --> 00:40:54,240
again if you're using a ci cd tool that

1121
00:40:54,240 --> 00:40:57,119
would be happening right now but i

1122
00:40:57,119 --> 00:40:59,440
just wanted to show how we are applying

1123
00:40:59,440 --> 00:41:02,960
a helm directly through kubernetes

1124
00:41:02,960 --> 00:41:06,800
and as soon as i run in the ending with

1125
00:41:06,800 --> 00:41:08,000
the

1126
00:41:08,000 --> 00:41:09,680
setup through helm

1127
00:41:09,680 --> 00:41:11,200
with the new values

1128
00:41:11,200 --> 00:41:13,680
that i put in my intent

1129
00:41:13,680 --> 00:41:15,359
you're going to see now the

1130
00:41:15,359 --> 00:41:16,960
two users

1131
00:41:16,960 --> 00:41:20,400
now they have communication with the

1132
00:41:20,400 --> 00:41:22,720
central offices through that security

1133
00:41:22,720 --> 00:41:25,118
gateway

1134
00:41:26,720 --> 00:41:28,640
and that is going to happen

1135
00:41:28,640 --> 00:41:30,880
now

1136
00:41:30,880 --> 00:41:32,640
okay then

1137
00:41:32,640 --> 00:41:34,640
the idea of this demo is to

1138
00:41:34,640 --> 00:41:36,160
bring a high level understanding of the

1139
00:41:36,160 --> 00:41:39,200
solution is i'm not just changing the

1140
00:41:39,200 --> 00:41:41,119
underlying network you can see it now

1141
00:41:41,119 --> 00:41:43,440
and actually checking the gateway

1142
00:41:43,440 --> 00:41:46,480
like it was any any sort of router

1143
00:41:46,480 --> 00:41:47,359
and

1144
00:41:47,359 --> 00:41:49,839
and and also changing here the virtual

1145
00:41:49,839 --> 00:41:52,240
function that is my security gateway

1146
00:41:52,240 --> 00:41:54,880
because i have also gm access

1147
00:41:54,880 --> 00:41:56,319
to that device

1148
00:41:56,319 --> 00:42:00,319
even if only a virtual function i can do

1149
00:42:00,319 --> 00:42:02,240
intense i can apply intense of those

1150
00:42:02,240 --> 00:42:04,079
devices

1151
00:42:04,079 --> 00:42:05,599
you can see every piece of the

1152
00:42:05,599 --> 00:42:07,119
configuration

1153
00:42:07,119 --> 00:42:08,720
that i'm doing

1154
00:42:08,720 --> 00:42:11,359
on those devices directly in kubernetes

1155
00:42:11,359 --> 00:42:13,040
you can get the description of every

1156
00:42:13,040 --> 00:42:15,040
piece of the configuration in kubernetes

1157
00:42:15,040 --> 00:42:18,560
and i can do manual changes if i want

1158
00:42:18,560 --> 00:42:20,560
through the apis and kubernetes and they

1159
00:42:20,560 --> 00:42:23,359
are going to be immediately reconciled

1160
00:42:23,359 --> 00:42:25,839
in with the fabric or with the

1161
00:42:25,839 --> 00:42:28,079
sorry in this case with the switches

1162
00:42:28,079 --> 00:42:31,119
or the security gateway

1163
00:42:31,119 --> 00:42:33,359
then

1164
00:42:34,000 --> 00:42:37,040
this is my last slide well if you want

1165
00:42:37,040 --> 00:42:40,079
to see more information about

1166
00:42:40,079 --> 00:42:42,720
the edge controller i can tell you stay

1167
00:42:42,720 --> 00:42:44,240
tuned because we are going to open the

1168
00:42:44,240 --> 00:42:46,480
project the apis to anyone to download

1169
00:42:46,480 --> 00:42:48,240
the images the container images and

1170
00:42:48,240 --> 00:42:50,640
start playing around in your own

1171
00:42:50,640 --> 00:42:52,400
kubernetes

1172
00:42:52,400 --> 00:42:54,079
and

1173
00:42:54,079 --> 00:42:56,880
also i encourage you to go to container

1174
00:42:56,880 --> 00:42:58,480
lab because you don't need to have

1175
00:42:58,480 --> 00:43:00,720
physical appliances to start playing

1176
00:43:00,720 --> 00:43:02,960
with this solution you can do everything

1177
00:43:02,960 --> 00:43:06,400
virtual with a very low cost in compute

1178
00:43:06,400 --> 00:43:07,680
and storage

1179
00:43:07,680 --> 00:43:10,720
thanks to the container technology

1180
00:43:10,720 --> 00:43:13,440
and and there is a presentation of to

1181
00:43:13,440 --> 00:43:14,640
nano

1182
00:43:14,640 --> 00:43:17,839
ago of containing lav

1183
00:43:17,839 --> 00:43:19,760
that you can see all the detail how you

1184
00:43:19,760 --> 00:43:22,240
can set up a container lab

1185
00:43:22,240 --> 00:43:24,640
and we are also in this case for demo we

1186
00:43:24,640 --> 00:43:28,960
use sr linux we also support um sros

1187
00:43:28,960 --> 00:43:31,200
and for the ones that i have a question

1188
00:43:31,200 --> 00:43:31,920
is

1189
00:43:31,920 --> 00:43:33,920
are you supporting multi-vendor yes we

1190
00:43:33,920 --> 00:43:35,920
are planning to support also other

1191
00:43:35,920 --> 00:43:39,440
vendors or their devices and

1192
00:43:39,440 --> 00:43:42,720
and uh and we are gonna add probably uh

1193
00:43:42,720 --> 00:43:45,119
operator for netconf

1194
00:43:45,119 --> 00:43:47,920
the only problem with that is uh the

1195
00:43:47,920 --> 00:43:50,240
visibility that we can get with netcon

1196
00:43:50,240 --> 00:43:52,480
in some of the vendors very limited then

1197
00:43:52,480 --> 00:43:53,680
we only

1198
00:43:53,680 --> 00:43:55,359
we are only

1199
00:43:55,359 --> 00:43:57,359
be able to do

1200
00:43:57,359 --> 00:43:59,760
settings for the visibility or for what

1201
00:43:59,760 --> 00:44:02,400
the actual net companies allowing us to

1202
00:44:02,400 --> 00:44:04,160
do okay

1203
00:44:04,160 --> 00:44:05,359
um

1204
00:44:05,359 --> 00:44:09,839
well that's all and thank you very much

1205
00:44:13,330 --> 00:44:14,960
[Applause]

1206
00:44:14,960 --> 00:44:19,000
i don't know if you have any questions

1207
00:44:24,480 --> 00:44:26,800
okay we are good

1208
00:44:26,800 --> 00:44:28,880
okay thank you steve thank you thank you

1209
00:44:28,880 --> 00:44:32,240
no no questions from remote

1210
00:44:32,720 --> 00:44:35,520
so uh you know thank you mauricio um and

1211
00:44:35,520 --> 00:44:37,280
for your time oh we have a question

1212
00:44:37,280 --> 00:44:39,839
mauricio

1213
00:44:42,000 --> 00:44:44,240
so it's not loud enough so anyways um

1214
00:44:44,240 --> 00:44:46,000
regarding all those vms that you well

1215
00:44:46,000 --> 00:44:47,280
containers that you run under computer

1216
00:44:47,280 --> 00:44:49,040
needs and everything did you find a

1217
00:44:49,040 --> 00:44:50,960
specific requirement to run anything

1218
00:44:50,960 --> 00:44:53,839
like a srov or like uh tapping directly

1219
00:44:53,839 --> 00:44:55,359
into network interfaces and stuff like

1220
00:44:55,359 --> 00:44:56,160
that

1221
00:44:56,160 --> 00:44:57,760
if we have any

1222
00:44:57,760 --> 00:44:58,560
uh

1223
00:44:58,560 --> 00:45:01,119
requirement if need to be srv or need to

1224
00:45:01,119 --> 00:45:03,920
be uh mcmillian ibn sorry yeah so you

1225
00:45:03,920 --> 00:45:06,880
run everything with mac vlan or srov or

1226
00:45:06,880 --> 00:45:09,119
is there a big difference okay okay in

1227
00:45:09,119 --> 00:45:11,359
this demo we are running macmillan

1228
00:45:11,359 --> 00:45:13,680
because we are doing this virtually

1229
00:45:13,680 --> 00:45:15,040
for srv

1230
00:45:15,040 --> 00:45:16,880
we don't have any restriction with srv

1231
00:45:16,880 --> 00:45:20,400
we can work also with srv but for uh to

1232
00:45:20,400 --> 00:45:22,079
do the virtual demo you need actual

1233
00:45:22,079 --> 00:45:23,680
appliance physical appliance in order to

1234
00:45:23,680 --> 00:45:25,280
make that work all right thank you very

1235
00:45:25,280 --> 00:45:28,240
much okay your work

1236
00:45:30,640 --> 00:45:33,839
any additional questions

1237
00:45:36,400 --> 00:45:38,960
okay thank you for the question

1238
00:45:38,960 --> 00:45:42,160
thank you mauricio thank you

1239
00:45:42,160 --> 00:45:46,489
[Music]

