1
00:00:00,000 --> 00:00:05,359
[Music]

2
00:00:05,359 --> 00:00:07,759
next up we have our lightning talks and

3
00:00:07,759 --> 00:00:08,800
we have

4
00:00:08,800 --> 00:00:10,400
first charles

5
00:00:10,400 --> 00:00:12,320
rumford with daft

6
00:00:12,320 --> 00:00:14,559
is going to be speaking on 20 hours to

7
00:00:14,559 --> 00:00:17,119
20 minutes a story of process automation

8
00:00:17,119 --> 00:00:18,960
and being lazy

9
00:00:18,960 --> 00:00:21,680
um so hi my name is uh as introduced my

10
00:00:21,680 --> 00:00:23,199
name is charles rumford i'm a network

11
00:00:23,199 --> 00:00:24,480
engineer

12
00:00:24,480 --> 00:00:26,960
and automation engineer at daft

13
00:00:26,960 --> 00:00:31,119
and i wanted to share a quick story of

14
00:00:31,119 --> 00:00:33,200
a project that i work on worked on last

15
00:00:33,200 --> 00:00:35,120
year

16
00:00:35,120 --> 00:00:36,399
to show

17
00:00:36,399 --> 00:00:38,079
a the technology that i came up the

18
00:00:38,079 --> 00:00:39,600
automation i came up with but also to

19
00:00:39,600 --> 00:00:41,840
review the process

20
00:00:41,840 --> 00:00:44,640
and allow people to see what some of the

21
00:00:44,640 --> 00:00:46,320
benefits of going through a formalized

22
00:00:46,320 --> 00:00:47,600
process

23
00:00:47,600 --> 00:00:51,120
to do the automation is

24
00:00:51,120 --> 00:00:52,000
but

25
00:00:52,000 --> 00:00:53,920
where automotive automation starts with

26
00:00:53,920 --> 00:00:55,600
is that you need to have a task that you

27
00:00:55,600 --> 00:00:57,600
want to automate right something that

28
00:00:57,600 --> 00:00:59,280
takes a long time

29
00:00:59,280 --> 00:01:01,440
um that's manually intensive things like

30
00:01:01,440 --> 00:01:04,319
that and for us that after listening to

31
00:01:04,319 --> 00:01:07,040
a bunch of conversations that was

32
00:01:07,040 --> 00:01:08,799
uh

33
00:01:08,799 --> 00:01:10,560
draining traffic off of a router to

34
00:01:10,560 --> 00:01:12,400
perform maintenance right we don't want

35
00:01:12,400 --> 00:01:14,479
to just turn the router off we want to

36
00:01:14,479 --> 00:01:16,640
you know gracefully drain all the

37
00:01:16,640 --> 00:01:18,560
traffic off the device and then turn it

38
00:01:18,560 --> 00:01:20,640
off and do the maintenance we need to do

39
00:01:20,640 --> 00:01:23,119
but when i started at deft

40
00:01:23,119 --> 00:01:24,799
that process was

41
00:01:24,799 --> 00:01:26,479
very manually intensive it involved

42
00:01:26,479 --> 00:01:28,560
touching a lot of devices it was very

43
00:01:28,560 --> 00:01:29,920
risk prone

44
00:01:29,920 --> 00:01:32,079
there were lots of documents that had to

45
00:01:32,079 --> 00:01:33,920
be produced and it took somewhere in the

46
00:01:33,920 --> 00:01:36,240
order of 20 to 30 hours per device to

47
00:01:36,240 --> 00:01:38,240
drain that traffic and i was like whoa

48
00:01:38,240 --> 00:01:39,840
whoa whoa whoa there's got to be a

49
00:01:39,840 --> 00:01:41,200
simpler way to do this there's going to

50
00:01:41,200 --> 00:01:43,040
be a faster way to do this

51
00:01:43,040 --> 00:01:44,720
let's dive in

52
00:01:44,720 --> 00:01:46,000
so i went through

53
00:01:46,000 --> 00:01:47,360
a standard

54
00:01:47,360 --> 00:01:50,240
requirements gathering process

55
00:01:50,240 --> 00:01:51,360
so the process started with just

56
00:01:51,360 --> 00:01:53,520
gathering requirements and this

57
00:01:53,520 --> 00:01:54,479
involved

58
00:01:54,479 --> 00:01:56,799
talking to other engineers

59
00:01:56,799 --> 00:01:58,640
shadowing projects so i could see how

60
00:01:58,640 --> 00:02:01,840
people were doing things and documenting

61
00:02:01,840 --> 00:02:04,719
everything right um it may be simple

62
00:02:04,719 --> 00:02:06,640
documentations in my like

63
00:02:06,640 --> 00:02:08,239
vim notebook or it could have been on

64
00:02:08,239 --> 00:02:10,560
our confluence but the point was it got

65
00:02:10,560 --> 00:02:12,720
recorded

66
00:02:12,720 --> 00:02:14,879
after that i started going through all

67
00:02:14,879 --> 00:02:16,160
the information that i collected during

68
00:02:16,160 --> 00:02:18,160
the requirements and started building

69
00:02:18,160 --> 00:02:19,760
user stories how are people going to be

70
00:02:19,760 --> 00:02:22,000
using this tool what tasks do they need

71
00:02:22,000 --> 00:02:23,520
to accomplish

72
00:02:23,520 --> 00:02:25,280
what are the end results how do we get

73
00:02:25,280 --> 00:02:26,319
there

74
00:02:26,319 --> 00:02:28,239
and then also the big thing i think that

75
00:02:28,239 --> 00:02:30,160
gets um

76
00:02:30,160 --> 00:02:32,080
ignored a lot are how to deal with

77
00:02:32,080 --> 00:02:33,920
errors right

78
00:02:33,920 --> 00:02:36,800
bob does a thing and the router explodes

79
00:02:36,800 --> 00:02:39,840
or bob does or sally does a thing and

80
00:02:39,840 --> 00:02:42,319
um all the bgps in the entire network go

81
00:02:42,319 --> 00:02:44,319
down you know something like that but

82
00:02:44,319 --> 00:02:47,519
those need to be documented also

83
00:02:47,519 --> 00:02:48,800
from there

84
00:02:48,800 --> 00:02:50,879
i'm a huge fan of building minimal

85
00:02:50,879 --> 00:02:54,400
viable products um and building small

86
00:02:54,400 --> 00:02:56,160
things that accomplish a very simple

87
00:02:56,160 --> 00:02:58,400
goal and then iterating on those as they

88
00:02:58,400 --> 00:03:00,800
go forward right so

89
00:03:00,800 --> 00:03:03,440
i took what we were doing by hand

90
00:03:03,440 --> 00:03:06,000
and just directly

91
00:03:06,000 --> 00:03:07,760
turn that into a python script that did

92
00:03:07,760 --> 00:03:09,920
exactly the same thing right

93
00:03:09,920 --> 00:03:11,680
minimal viable product it's now i've

94
00:03:11,680 --> 00:03:13,440
gone from 20 hours

95
00:03:13,440 --> 00:03:15,200
to like 40 minutes

96
00:03:15,200 --> 00:03:16,159
right

97
00:03:16,159 --> 00:03:18,959
but because

98
00:03:18,959 --> 00:03:21,440
we had all that documentation about the

99
00:03:21,440 --> 00:03:23,680
process and the requirements and the

100
00:03:23,680 --> 00:03:27,040
user stories it allowed us to go back

101
00:03:27,040 --> 00:03:29,840
and reevaluate how we were doing it and

102
00:03:29,840 --> 00:03:32,159
inspect the process to improve the

103
00:03:32,159 --> 00:03:33,200
process

104
00:03:33,200 --> 00:03:35,040
right which then allowed me to make the

105
00:03:35,040 --> 00:03:36,640
next version of the code which got us

106
00:03:36,640 --> 00:03:38,239
down to 20 minutes

107
00:03:38,239 --> 00:03:40,560
right

108
00:03:41,120 --> 00:03:44,159
so oh i messed up my automations so the

109
00:03:44,159 --> 00:03:46,000
product they came up the the script that

110
00:03:46,000 --> 00:03:49,040
i came up with was um i called it drano

111
00:03:49,040 --> 00:03:50,799
because well you're draining traffic off

112
00:03:50,799 --> 00:03:52,080
a router

113
00:03:52,080 --> 00:03:53,840
the first thing it's a python based

114
00:03:53,840 --> 00:03:56,640
automation um ran from a linux command

115
00:03:56,640 --> 00:03:57,840
line

116
00:03:57,840 --> 00:04:00,640
um it's super configurable so

117
00:04:00,640 --> 00:04:02,799
um the

118
00:04:02,799 --> 00:04:04,959
the whole thing's powered out of a yaml

119
00:04:04,959 --> 00:04:07,760
file so you can change how different

120
00:04:07,760 --> 00:04:10,640
routers um get drained

121
00:04:10,640 --> 00:04:12,000
the other thing that's really exciting

122
00:04:12,000 --> 00:04:14,159
about it is very plug-in based so if

123
00:04:14,159 --> 00:04:15,599
there's an action that needs to be taken

124
00:04:15,599 --> 00:04:16,959
with a different type of router that's

125
00:04:16,959 --> 00:04:18,560
supporting a different type of service

126
00:04:18,560 --> 00:04:20,478
we can just write a new plug-in for it

127
00:04:20,478 --> 00:04:22,639
shove it in move on with

128
00:04:22,639 --> 00:04:23,680
the work

129
00:04:23,680 --> 00:04:25,040
the other big thing that i really

130
00:04:25,040 --> 00:04:27,360
thought about were quick exit points

131
00:04:27,360 --> 00:04:29,680
right you know something goes wrong i

132
00:04:29,680 --> 00:04:32,320
want to stop and i want to stop now

133
00:04:32,320 --> 00:04:35,919
right so as each step is taken

134
00:04:35,919 --> 00:04:37,759
there are a number of state checks that

135
00:04:37,759 --> 00:04:38,800
are taken

136
00:04:38,800 --> 00:04:40,880
to make sure that the router is still in

137
00:04:40,880 --> 00:04:43,280
good working order before moving to the

138
00:04:43,280 --> 00:04:44,479
next step

139
00:04:44,479 --> 00:04:46,720
right i've used um

140
00:04:46,720 --> 00:04:48,800
juniper has a

141
00:04:48,800 --> 00:04:50,960
state checker that you can run before

142
00:04:50,960 --> 00:04:52,800
you run an operation and again and then

143
00:04:52,800 --> 00:04:55,280
it will compare the states for you

144
00:04:55,280 --> 00:04:57,040
it's a really cool python library if

145
00:04:57,040 --> 00:04:58,880
you've no one's seen it

146
00:04:58,880 --> 00:05:00,240
but the other thing is they really

147
00:05:00,240 --> 00:05:01,440
wanted to make sure that you could run

148
00:05:01,440 --> 00:05:02,479
the script

149
00:05:02,479 --> 00:05:05,520
400 times and not mess anything up so

150
00:05:05,520 --> 00:05:07,759
the whole thing is item potent right you

151
00:05:07,759 --> 00:05:09,759
can run the script 400 times and not

152
00:05:09,759 --> 00:05:11,280
have any problems

153
00:05:11,280 --> 00:05:14,000
but that also means that if we exit if

154
00:05:14,000 --> 00:05:16,000
something does happen the engineer can

155
00:05:16,000 --> 00:05:18,240
go and fix the problem and then just run

156
00:05:18,240 --> 00:05:20,240
the script again and not have to worry

157
00:05:20,240 --> 00:05:22,560
about the 12 steps that had happened

158
00:05:22,560 --> 00:05:25,199
already and just worry about the next 13

159
00:05:25,199 --> 00:05:27,120
that need to happen right

160
00:05:27,120 --> 00:05:29,440
and as i said earlier the whole thing is

161
00:05:29,440 --> 00:05:32,080
state driven

162
00:05:33,759 --> 00:05:36,560
wow i really did mess up this automation

163
00:05:36,560 --> 00:05:38,960
so some takeaways um the big thing is

164
00:05:38,960 --> 00:05:41,199
document document document right if you

165
00:05:41,199 --> 00:05:43,600
don't have documentation whether it's

166
00:05:43,600 --> 00:05:46,479
informal or formal um it's going to be

167
00:05:46,479 --> 00:05:48,800
really hard to explain your automation

168
00:05:48,800 --> 00:05:50,160
and why you're doing things to other

169
00:05:50,160 --> 00:05:52,080
engineers

170
00:05:52,080 --> 00:05:54,240
but at the same time you also need to

171
00:05:54,240 --> 00:05:55,440
have like

172
00:05:55,440 --> 00:05:57,759
readme files and instructions on how to

173
00:05:57,759 --> 00:05:59,120
use it

174
00:05:59,120 --> 00:06:00,479
whether or not other people read it or

175
00:06:00,479 --> 00:06:02,560
not is a different problem but it should

176
00:06:02,560 --> 00:06:04,800
at least exist

177
00:06:04,800 --> 00:06:06,639
the other thing is is you can't automate

178
00:06:06,639 --> 00:06:09,199
something that doesn't exist right um

179
00:06:09,199 --> 00:06:10,639
you can't automate a process that

180
00:06:10,639 --> 00:06:12,080
doesn't already exist

181
00:06:12,080 --> 00:06:14,400
so you need to formalize the process

182
00:06:14,400 --> 00:06:15,440
first

183
00:06:15,440 --> 00:06:17,120
and then you can go and automate it

184
00:06:17,120 --> 00:06:18,960
right um a couple of companies that i've

185
00:06:18,960 --> 00:06:20,560
worked for

186
00:06:20,560 --> 00:06:22,160
they're like go automate this thing and

187
00:06:22,160 --> 00:06:23,199
i'm like

188
00:06:23,199 --> 00:06:24,240
what thing

189
00:06:24,240 --> 00:06:26,160
there's no process so

190
00:06:26,160 --> 00:06:28,000
we then spent the time to do that that

191
00:06:28,000 --> 00:06:30,240
work

192
00:06:30,240 --> 00:06:31,919
the other thing is is that as you gather

193
00:06:31,919 --> 00:06:34,160
all that documentation and you build

194
00:06:34,160 --> 00:06:36,400
things don't be afraid to review

195
00:06:36,400 --> 00:06:38,560
question and interrogate the process

196
00:06:38,560 --> 00:06:41,360
right nothing changes or gets better

197
00:06:41,360 --> 00:06:43,280
unless you question it

198
00:06:43,280 --> 00:06:45,360
to think about it if you just keep going

199
00:06:45,360 --> 00:06:47,199
down the line of this is how we've

200
00:06:47,199 --> 00:06:48,960
always done it this is how we'll always

201
00:06:48,960 --> 00:06:49,840
do it

202
00:06:49,840 --> 00:06:52,560
nothing really gets improved right as i

203
00:06:52,560 --> 00:06:54,880
said earlier uh minimal vial product is

204
00:06:54,880 --> 00:06:57,120
my friend it is how i do most of my

205
00:06:57,120 --> 00:06:58,639
automation work

206
00:06:58,639 --> 00:07:00,720
um and then the following thing is

207
00:07:00,720 --> 00:07:03,280
iterate iterate iterate right

208
00:07:03,280 --> 00:07:05,680
as you complete something

209
00:07:05,680 --> 00:07:08,400
take some time step back review question

210
00:07:08,400 --> 00:07:10,560
and interrogate find ways to make it

211
00:07:10,560 --> 00:07:13,120
better and then just keep going forward

212
00:07:13,120 --> 00:07:17,120
um also less than that more v6

213
00:07:17,120 --> 00:07:21,190
so that is all i've got

214
00:07:21,190 --> 00:07:25,519
[Music]

