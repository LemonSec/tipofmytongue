1
00:00:00,000 --> 00:00:04,960
[Music]

2
00:00:04,960 --> 00:00:07,520
all right hello everyone and welcome to

3
00:00:07,520 --> 00:00:10,320
the nanog85 hackathon introduction

4
00:00:10,320 --> 00:00:12,719
my name is aaron i'm co-chair of the

5
00:00:12,719 --> 00:00:15,440
hackathon committee here at nanog

6
00:00:15,440 --> 00:00:16,720
appreciate you all taking the time to

7
00:00:16,720 --> 00:00:17,840
join today

8
00:00:17,840 --> 00:00:19,760
we'll be doing a quick walkthrough of

9
00:00:19,760 --> 00:00:21,840
what you can expect from the hackathon

10
00:00:21,840 --> 00:00:24,400
logistics ways to communicate

11
00:00:24,400 --> 00:00:26,320
um our infrastructure that we'll be

12
00:00:26,320 --> 00:00:28,720
providing and as well the the theme for

13
00:00:28,720 --> 00:00:31,039
this nanog85 hackathon

14
00:00:31,039 --> 00:00:32,079
um

15
00:00:32,079 --> 00:00:35,280
we'll be uh available for questions and

16
00:00:35,280 --> 00:00:37,520
and so forth at the end if you have any

17
00:00:37,520 --> 00:00:39,920
uh let's get started so

18
00:00:39,920 --> 00:00:42,000
a bit about the hackathon as a little

19
00:00:42,000 --> 00:00:43,120
overview

20
00:00:43,120 --> 00:00:44,719
the hackathon is part of nanog's

21
00:00:44,719 --> 00:00:46,320
educational mission

22
00:00:46,320 --> 00:00:48,399
we aim to provide this experience such

23
00:00:48,399 --> 00:00:50,160
that knowledge can be shared amongst

24
00:00:50,160 --> 00:00:53,440
participants to help foster new ideas

25
00:00:53,440 --> 00:00:54,800
that will help the community and the

26
00:00:54,800 --> 00:00:56,719
participants grow

27
00:00:56,719 --> 00:00:59,120
a bit of logistics here on the slide

28
00:00:59,120 --> 00:01:02,160
so given that this upcoming nanog will

29
00:01:02,160 --> 00:01:04,720
be held in montreal uh we

30
00:01:04,720 --> 00:01:07,760
like to go with local time for um all

31
00:01:07,760 --> 00:01:09,840
the below listed

32
00:01:09,840 --> 00:01:14,000
date and time stamps um so in montreal

33
00:01:14,000 --> 00:01:15,840
we'll be going by eastern daylight time

34
00:01:15,840 --> 00:01:18,720
which is utc minus four the hackathon

35
00:01:18,720 --> 00:01:20,720
happens the uh the weekend before the

36
00:01:20,720 --> 00:01:23,040
general conference so that's saturday

37
00:01:23,040 --> 00:01:26,720
june 4th to sunday june 5th hacking will

38
00:01:26,720 --> 00:01:31,439
be going from 1pm or 1300 on saturday

39
00:01:31,439 --> 00:01:32,880
again edt

40
00:01:32,880 --> 00:01:33,600
to

41
00:01:33,600 --> 00:01:37,520
5 pm or 1700 sunday

42
00:01:37,520 --> 00:01:40,240
mentors will be available to help we'll

43
00:01:40,240 --> 00:01:41,520
talk about that more in a bit and how

44
00:01:41,520 --> 00:01:43,119
you can reach us

45
00:01:43,119 --> 00:01:46,560
from saturday uh 1 pm until 4 pm

46
00:01:46,560 --> 00:01:48,640
and keep in mind with saturday we will

47
00:01:48,640 --> 00:01:51,200
actually not have a room at the hote at

48
00:01:51,200 --> 00:01:53,280
the conference hotel

49
00:01:53,280 --> 00:01:55,759
saturday will be entirely virtual

50
00:01:55,759 --> 00:01:58,880
uh sunday however um mentors will be

51
00:01:58,880 --> 00:02:01,360
available from noon to five and will as

52
00:02:01,360 --> 00:02:03,200
well be providing a room there are like

53
00:02:03,200 --> 00:02:05,360
two conjoining rooms at the hotel

54
00:02:05,360 --> 00:02:07,920
from 9am to 6pm p.m

55
00:02:07,920 --> 00:02:10,639
only on sunday june 5th

56
00:02:10,639 --> 00:02:12,560
um so talking about how you can reach

57
00:02:12,560 --> 00:02:14,959
the mentors and other members of the

58
00:02:14,959 --> 00:02:17,360
hackathon on saturday virtually and so

59
00:02:17,360 --> 00:02:18,720
forth on how to like collaborate with

60
00:02:18,720 --> 00:02:21,599
your teams we primarily use slack and

61
00:02:21,599 --> 00:02:23,040
zoom

62
00:02:23,040 --> 00:02:24,720
slack is pretty much the primary way to

63
00:02:24,720 --> 00:02:26,160
get a hold of everyone

64
00:02:26,160 --> 00:02:27,599
on the fly

65
00:02:27,599 --> 00:02:30,160
especially the mentors

66
00:02:30,160 --> 00:02:31,599
everyone should be a member of the

67
00:02:31,599 --> 00:02:34,480
nanog85 hackathon slack channel

68
00:02:34,480 --> 00:02:35,840
if you registered for the hackathon you

69
00:02:35,840 --> 00:02:36,959
should have already

70
00:02:36,959 --> 00:02:39,440
uh received that information if not uh

71
00:02:39,440 --> 00:02:40,879
feel free to reach us at the end of this

72
00:02:40,879 --> 00:02:42,720
and we'll be sure to get you into that

73
00:02:42,720 --> 00:02:45,840
channel and the the slack in in in

74
00:02:45,840 --> 00:02:47,040
general

75
00:02:47,040 --> 00:02:49,200
um team slack channels can of course be

76
00:02:49,200 --> 00:02:50,879
created

77
00:02:50,879 --> 00:02:52,640
feel free to do so

78
00:02:52,640 --> 00:02:55,200
if you want to reach mentors we have a

79
00:02:55,200 --> 00:02:57,440
user group within the slack you can just

80
00:02:57,440 --> 00:02:59,920
use at mentors and it will ping all of

81
00:02:59,920 --> 00:03:01,040
us

82
00:03:01,040 --> 00:03:05,360
we'll be sure to get back to you asap um

83
00:03:05,360 --> 00:03:08,000
we kindly ask that you do not use at

84
00:03:08,000 --> 00:03:10,879
here or at channel as they

85
00:03:10,879 --> 00:03:12,800
will create notifications for everybody

86
00:03:12,800 --> 00:03:14,239
either you know in the channel or

87
00:03:14,239 --> 00:03:16,159
currently active we don't want to really

88
00:03:16,159 --> 00:03:18,319
distract anyone from their work during

89
00:03:18,319 --> 00:03:20,480
the hackathon as best as possible

90
00:03:20,480 --> 00:03:22,720
so we kindly ask you do not use those

91
00:03:22,720 --> 00:03:24,959
those

92
00:03:25,280 --> 00:03:27,280
at here and out channel things

93
00:03:27,280 --> 00:03:29,360
um having an up to date to a client of

94
00:03:29,360 --> 00:03:30,840
course is a good idea

95
00:03:30,840 --> 00:03:34,560
uh we will be providing a zoom room for

96
00:03:34,560 --> 00:03:36,879
both saturday and sunday for

97
00:03:36,879 --> 00:03:38,640
um of course saturday everyone will be a

98
00:03:38,640 --> 00:03:40,400
virtual attendee but even if sunday if

99
00:03:40,400 --> 00:03:42,319
you can't make it in person we'll have

100
00:03:42,319 --> 00:03:43,760
that that

101
00:03:43,760 --> 00:03:46,239
zoom available for collaboration and uh

102
00:03:46,239 --> 00:03:48,159
you you'll generally as well find

103
00:03:48,159 --> 00:03:49,280
mentors

104
00:03:49,280 --> 00:03:51,840
um that are not going to be attending in

105
00:03:51,840 --> 00:03:54,959
person as well uh in that zoom room

106
00:03:54,959 --> 00:03:56,239
um

107
00:03:56,239 --> 00:03:57,840
for you know any general question you

108
00:03:57,840 --> 00:04:00,159
want to ask them

109
00:04:00,159 --> 00:04:00,959
you know

110
00:04:00,959 --> 00:04:03,439
not over slack

111
00:04:03,439 --> 00:04:04,879
and as well we just want to be clear

112
00:04:04,879 --> 00:04:06,640
that for whatever reason if you have any

113
00:04:06,640 --> 00:04:08,400
issue of any kind please do not hesitate

114
00:04:08,400 --> 00:04:10,959
to reach out to the mentors

115
00:04:10,959 --> 00:04:14,560
even if if that means privately

116
00:04:14,560 --> 00:04:16,639
by all means

117
00:04:16,639 --> 00:04:19,600
so the theme this time around we decided

118
00:04:19,600 --> 00:04:21,279
to go with what we're calling projects

119
00:04:21,279 --> 00:04:23,280
that make a difference

120
00:04:23,280 --> 00:04:25,759
the idea is to develop improvements for

121
00:04:25,759 --> 00:04:27,840
important tools that we feel have a

122
00:04:27,840 --> 00:04:29,360
significant contribution to the

123
00:04:29,360 --> 00:04:31,680
community significant impact and so

124
00:04:31,680 --> 00:04:33,520
forth

125
00:04:33,520 --> 00:04:36,560
we did have a cfp for this

126
00:04:36,560 --> 00:04:37,440
so

127
00:04:37,440 --> 00:04:40,000
later on in this presentation

128
00:04:40,000 --> 00:04:41,199
for

129
00:04:41,199 --> 00:04:42,639
um

130
00:04:42,639 --> 00:04:44,880
going over basically maintainers of

131
00:04:44,880 --> 00:04:46,160
projects that make a difference we'll be

132
00:04:46,160 --> 00:04:48,720
spotlighting or showcasing in a moment

133
00:04:48,720 --> 00:04:51,360
one of those that's submitted to our cfp

134
00:04:51,360 --> 00:04:53,040
so stay tuned for that

135
00:04:53,040 --> 00:04:54,080
um

136
00:04:54,080 --> 00:04:55,680
of course you can work on whatever you

137
00:04:55,680 --> 00:04:57,199
like at the hackathon

138
00:04:57,199 --> 00:05:00,479
um however this will be kind of like the

139
00:05:00,479 --> 00:05:02,800
the centralized theme that we would ask

140
00:05:02,800 --> 00:05:05,199
for you to participate in if if you

141
00:05:05,199 --> 00:05:06,000
could

142
00:05:06,000 --> 00:05:08,000
um it doesn't necessarily have to be the

143
00:05:08,000 --> 00:05:09,919
the project that we are showcasing but

144
00:05:09,919 --> 00:05:11,840
that's kind of the um

145
00:05:11,840 --> 00:05:13,919
the general idea of like finding a code

146
00:05:13,919 --> 00:05:15,600
base or a project that you feel that

147
00:05:15,600 --> 00:05:18,080
would make a significant impact towards

148
00:05:18,080 --> 00:05:21,759
um network operating

149
00:05:21,759 --> 00:05:23,360
engineers or you know in general the

150
00:05:23,360 --> 00:05:25,440
network engineering community we will as

151
00:05:25,440 --> 00:05:27,520
well be providing infrastructure

152
00:05:27,520 --> 00:05:28,479
so

153
00:05:28,479 --> 00:05:31,680
if you have any kind of project uh that

154
00:05:31,680 --> 00:05:33,039
you are working on that you would like

155
00:05:33,039 --> 00:05:35,360
to actually test out on like for example

156
00:05:35,360 --> 00:05:36,720
a virtual router

157
00:05:36,720 --> 00:05:38,560
we provide

158
00:05:38,560 --> 00:05:40,400
arista and juniper container routers

159
00:05:40,400 --> 00:05:43,280
with centos boxes as well as hosts for

160
00:05:43,280 --> 00:05:44,320
you to

161
00:05:44,320 --> 00:05:45,840
experiment on as kind of like a

162
00:05:45,840 --> 00:05:47,759
playground

163
00:05:47,759 --> 00:05:49,280
and we'll be covering that a little bit

164
00:05:49,280 --> 00:05:51,120
more in detail

165
00:05:51,120 --> 00:05:54,080
later each instance has prepared uh

166
00:05:54,080 --> 00:05:57,039
docker containers as i said um which you

167
00:05:57,039 --> 00:05:58,960
can see a quick glimpse of here in terms

168
00:05:58,960 --> 00:06:00,560
of a topology

169
00:06:00,560 --> 00:06:02,639
and every team in terms of the

170
00:06:02,639 --> 00:06:04,240
infrastructure

171
00:06:04,240 --> 00:06:07,039
it will be an aws instance with public

172
00:06:07,039 --> 00:06:09,759
ipv4 and ipv6 addresses going out to

173
00:06:09,759 --> 00:06:12,960
teams uh if you have a team fantastic if

174
00:06:12,960 --> 00:06:16,000
not no worries uh we'll be able to help

175
00:06:16,000 --> 00:06:17,759
you out after this introduction or you

176
00:06:17,759 --> 00:06:20,960
know even on on saturday if um so yeah

177
00:06:20,960 --> 00:06:23,680
no worries about teams um we're all a

178
00:06:23,680 --> 00:06:25,759
huge collective here one way or another

179
00:06:25,759 --> 00:06:28,400
and then finally uh closing out my spiel

180
00:06:28,400 --> 00:06:29,840
here um

181
00:06:29,840 --> 00:06:31,440
the way we close the hackathon is each

182
00:06:31,440 --> 00:06:33,199
group is invited to present their work

183
00:06:33,199 --> 00:06:35,840
at 5 p.m on sunday

184
00:06:35,840 --> 00:06:37,840
um 1700.

185
00:06:37,840 --> 00:06:39,759
so uh we'll follow up with additional

186
00:06:39,759 --> 00:06:41,600
details then of course as i mentioned

187
00:06:41,600 --> 00:06:44,000
earlier in the call we will have a room

188
00:06:44,000 --> 00:06:45,280
on sunday

189
00:06:45,280 --> 00:06:47,840
at the conference hotel where we'll be

190
00:06:47,840 --> 00:06:51,520
showcasing all of your work that you

191
00:06:51,520 --> 00:06:53,919
contributed to this time around

192
00:06:53,919 --> 00:06:56,560
just to give a quick heads up we will uh

193
00:06:56,560 --> 00:06:59,440
do be doing some interviewing uh during

194
00:06:59,440 --> 00:07:01,120
and after the hackathon only if you're

195
00:07:01,120 --> 00:07:03,280
open to it you know we'll um

196
00:07:03,280 --> 00:07:05,840
ask you kindly uh you can expect just

197
00:07:05,840 --> 00:07:07,360
like general questions of how did you

198
00:07:07,360 --> 00:07:08,880
hear about the hackathon how do you like

199
00:07:08,880 --> 00:07:10,400
participating

200
00:07:10,400 --> 00:07:11,440
and

201
00:07:11,440 --> 00:07:14,960
along that kind of line of questioning

202
00:07:14,960 --> 00:07:17,520
so um that

203
00:07:17,520 --> 00:07:19,759
as a is mentioned in the slide will be

204
00:07:19,759 --> 00:07:22,720
hopefully um added to a short video that

205
00:07:22,720 --> 00:07:24,319
will be part of the general session

206
00:07:24,319 --> 00:07:27,440
showcasing uh the hackathon and um what

207
00:07:27,440 --> 00:07:29,280
you all worked on over the weekend this

208
00:07:29,280 --> 00:07:32,319
time around uh peering db who we've had

209
00:07:32,319 --> 00:07:34,240
before submit uh projects for the

210
00:07:34,240 --> 00:07:35,440
hackathon

211
00:07:35,440 --> 00:07:38,240
uh was uh one of the contributors to the

212
00:07:38,240 --> 00:07:40,800
cfp that we felt was a

213
00:07:40,800 --> 00:07:42,560
well detailed project that was that was

214
00:07:42,560 --> 00:07:45,919
worth showcasing here um and so

215
00:07:45,919 --> 00:07:47,440
at this point i'd like to actually hand

216
00:07:47,440 --> 00:07:50,479
it off to leo um who i think has some

217
00:07:50,479 --> 00:07:52,960
prepared material to show you all

218
00:07:52,960 --> 00:07:56,160
we participated in the nano hackathon a

219
00:07:56,160 --> 00:07:58,479
couple of times before and each time we

220
00:07:58,479 --> 00:08:00,800
participated we've learned something

221
00:08:00,800 --> 00:08:03,280
from it and one of the things we learned

222
00:08:03,280 --> 00:08:06,080
from the last hackathon

223
00:08:06,080 --> 00:08:08,560
was

224
00:08:09,599 --> 00:08:14,080
it it can be difficult for someone who

225
00:08:14,080 --> 00:08:15,840
is new to

226
00:08:15,840 --> 00:08:17,520
interconnection

227
00:08:17,520 --> 00:08:18,960
to

228
00:08:18,960 --> 00:08:21,360
participate in a hackathon

229
00:08:21,360 --> 00:08:23,360
if they don't have a good understanding

230
00:08:23,360 --> 00:08:24,720
of networking

231
00:08:24,720 --> 00:08:27,440
and also of course sometimes someone

232
00:08:27,440 --> 00:08:29,039
will come to a hackathon and they'll

233
00:08:29,039 --> 00:08:31,680
have a good understanding of one

234
00:08:31,680 --> 00:08:34,399
language and the software

235
00:08:34,399 --> 00:08:36,159
that uh

236
00:08:36,159 --> 00:08:37,839
the the project they would like to work

237
00:08:37,839 --> 00:08:39,279
on is actually developed in something

238
00:08:39,279 --> 00:08:40,958
else so

239
00:08:40,958 --> 00:08:43,519
we've slightly adjusted our approach

240
00:08:43,519 --> 00:08:44,720
this time

241
00:08:44,720 --> 00:08:46,880
and

242
00:08:46,880 --> 00:08:48,640
what we're trying to do is we're trying

243
00:08:48,640 --> 00:08:49,519
to

244
00:08:49,519 --> 00:08:52,880
introduce people to peering db

245
00:08:52,880 --> 00:08:56,080
and we're trying to design a feature

246
00:08:56,080 --> 00:08:57,920
rather than develop it

247
00:08:57,920 --> 00:08:59,040
um

248
00:08:59,040 --> 00:08:59,839
so

249
00:08:59,839 --> 00:09:02,399
quickly the

250
00:09:02,399 --> 00:09:03,440
uh

251
00:09:03,440 --> 00:09:05,360
headline is

252
00:09:05,360 --> 00:09:07,680
peering db is sort of like a yellow

253
00:09:07,680 --> 00:09:10,800
pages for interconnection um

254
00:09:10,800 --> 00:09:12,080
networks

255
00:09:12,080 --> 00:09:14,160
um internet exchange points and

256
00:09:14,160 --> 00:09:15,440
facilities

257
00:09:15,440 --> 00:09:18,880
um are listed in peering db

258
00:09:18,880 --> 00:09:22,240
um about 25 000 networks which is about

259
00:09:22,240 --> 00:09:25,200
one in three of the networks that you

260
00:09:25,200 --> 00:09:27,040
will find uh

261
00:09:27,040 --> 00:09:29,040
in the routine table

262
00:09:29,040 --> 00:09:30,000
so

263
00:09:30,000 --> 00:09:33,279
as peering db has developed and sort of

264
00:09:33,279 --> 00:09:34,880
increased its reach

265
00:09:34,880 --> 00:09:38,640
um the process for

266
00:09:38,640 --> 00:09:41,360
introducing new entries to peering db

267
00:09:41,360 --> 00:09:43,680
has had to develop as well

268
00:09:43,680 --> 00:09:45,760
and

269
00:09:45,760 --> 00:09:49,279
we got some new guidelines approved for

270
00:09:49,279 --> 00:09:51,360
introducing

271
00:09:51,360 --> 00:09:54,720
new interconnection facilities which is

272
00:09:54,720 --> 00:09:58,959
buildings where networks interconnect

273
00:09:58,959 --> 00:10:00,560
and

274
00:10:00,560 --> 00:10:02,560
in order to implement those new

275
00:10:02,560 --> 00:10:04,800
guidelines we need some software

276
00:10:04,800 --> 00:10:06,399
um

277
00:10:06,399 --> 00:10:07,600
so

278
00:10:07,600 --> 00:10:10,240
this is roughly the workflow that we

279
00:10:10,240 --> 00:10:13,760
need to turn into some kind of software

280
00:10:13,760 --> 00:10:16,240
design

281
00:10:16,399 --> 00:10:19,120
the idea is that there is someone who is

282
00:10:19,120 --> 00:10:21,279
new to peering db

283
00:10:21,279 --> 00:10:22,079
and

284
00:10:22,079 --> 00:10:22,959
they

285
00:10:22,959 --> 00:10:24,880
say hey i've got an interconnection

286
00:10:24,880 --> 00:10:27,120
facility and i'd like to register

287
00:10:27,120 --> 00:10:28,079
and

288
00:10:28,079 --> 00:10:30,399
we don't know who they are which in the

289
00:10:30,399 --> 00:10:32,560
olden days we perhaps would have

290
00:10:32,560 --> 00:10:35,440
and therefore we want to make sure that

291
00:10:35,440 --> 00:10:37,519
they're not just a bot who's going to

292
00:10:37,519 --> 00:10:39,440
try and use peering db to distribute

293
00:10:39,440 --> 00:10:40,720
their spam

294
00:10:40,720 --> 00:10:41,680
um

295
00:10:41,680 --> 00:10:44,399
so the plan is that they will get

296
00:10:44,399 --> 00:10:46,720
a unique url of

297
00:10:46,720 --> 00:10:48,880
some kind and

298
00:10:48,880 --> 00:10:50,320
networks

299
00:10:50,320 --> 00:10:53,360
or ixps will have

300
00:10:53,360 --> 00:10:56,160
90 days to essentially

301
00:10:56,160 --> 00:10:59,040
go to that url and click i am appearing

302
00:10:59,040 --> 00:11:00,880
db user

303
00:11:00,880 --> 00:11:02,480
i say that this is a real

304
00:11:02,480 --> 00:11:05,920
interconnection facility um

305
00:11:05,920 --> 00:11:08,640
if they get that after 90 days or within

306
00:11:08,640 --> 00:11:11,600
the 90 days then exit to the happy happy

307
00:11:11,600 --> 00:11:14,399
path and we go and create the uh

308
00:11:14,399 --> 00:11:16,079
registration

309
00:11:16,079 --> 00:11:18,800
if it fails there is some kind of polite

310
00:11:18,800 --> 00:11:21,360
notification saying you didn't make it

311
00:11:21,360 --> 00:11:22,320
sorry

312
00:11:22,320 --> 00:11:23,519
and

313
00:11:23,519 --> 00:11:25,839
presumably they could try again

314
00:11:25,839 --> 00:11:28,160
maybe not that's sort of up to the

315
00:11:28,160 --> 00:11:31,279
design our offer to you as for potential

316
00:11:31,279 --> 00:11:33,920
volunteers on this project is that we

317
00:11:33,920 --> 00:11:34,959
will

318
00:11:34,959 --> 00:11:37,519
teach you a little bit about peering db

319
00:11:37,519 --> 00:11:40,640
and through peering db you'll have a

320
00:11:40,640 --> 00:11:44,399
window into the nano community

321
00:11:44,399 --> 00:11:47,040
obviously we can't teach you everything

322
00:11:47,040 --> 00:11:47,839
but

323
00:11:47,839 --> 00:11:51,839
this is a good place to understand how

324
00:11:51,839 --> 00:11:54,000
networks internet exchange points into

325
00:11:54,000 --> 00:11:56,639
connection facilities and so on go and

326
00:11:56,639 --> 00:11:58,560
do their stuff which

327
00:11:58,560 --> 00:11:59,920
could be useful

328
00:11:59,920 --> 00:12:01,040
um

329
00:12:01,040 --> 00:12:03,680
we will work on a design

330
00:12:03,680 --> 00:12:06,160
discuss how different cases

331
00:12:06,160 --> 00:12:07,920
could work

332
00:12:07,920 --> 00:12:09,680
and then the goal is that we will have

333
00:12:09,680 --> 00:12:11,760
some kind of design that we could be uh

334
00:12:11,760 --> 00:12:14,720
delivering to developers now

335
00:12:14,720 --> 00:12:17,440
if we do really well we might be able to

336
00:12:17,440 --> 00:12:19,519
come up with some kind of scratch

337
00:12:19,519 --> 00:12:21,920
implementation as well but that would

338
00:12:21,920 --> 00:12:24,399
definitely be the icing on the cake it's

339
00:12:24,399 --> 00:12:25,920
not the

340
00:12:25,920 --> 00:12:28,479
objective

341
00:12:28,720 --> 00:12:29,760
now

342
00:12:29,760 --> 00:12:32,399
i will be sharing this deck of slides

343
00:12:32,399 --> 00:12:35,200
which is a google thing

344
00:12:35,200 --> 00:12:37,519
and there are links here to

345
00:12:37,519 --> 00:12:39,839
getting started developing for peering

346
00:12:39,839 --> 00:12:41,440
db and

347
00:12:41,440 --> 00:12:44,240
good first issues

348
00:12:44,240 --> 00:12:46,800
if you want to go and develop something

349
00:12:46,800 --> 00:12:48,639
else for peering ddb and not work on

350
00:12:48,639 --> 00:12:51,279
this particular project then you can

351
00:12:51,279 --> 00:12:53,200
definitely take a look at some of those

352
00:12:53,200 --> 00:12:55,760
good first issues and that web page

353
00:12:55,760 --> 00:12:56,560
there

354
00:12:56,560 --> 00:12:59,120
has uh some uh

355
00:12:59,120 --> 00:13:02,240
advice on how to set up our developing

356
00:13:02,240 --> 00:13:04,959
development environment and how to go

357
00:13:04,959 --> 00:13:08,480
about um putting the code in into place

358
00:13:08,480 --> 00:13:11,120
but if you don't want to do the coding

359
00:13:11,120 --> 00:13:13,040
and you just want to design the feature

360
00:13:13,040 --> 00:13:16,079
then we have a project for you and

361
00:13:16,079 --> 00:13:17,519
um

362
00:13:17,519 --> 00:13:21,440
that is it so i'm gonna hand back

363
00:13:21,440 --> 00:13:23,680
chris if you don't mind going through a

364
00:13:23,680 --> 00:13:25,839
walk-through of our infrastructure

365
00:13:25,839 --> 00:13:28,320
so um if you've been to the next couple

366
00:13:28,320 --> 00:13:31,360
hackathons uh this will all sound pretty

367
00:13:31,360 --> 00:13:34,320
familiar uh because uh we've been yeah

368
00:13:34,320 --> 00:13:36,560
we've landed on a good model for the lab

369
00:13:36,560 --> 00:13:38,079
infrastructure and we've been mainly

370
00:13:38,079 --> 00:13:41,440
iterating on it uh since then um

371
00:13:41,440 --> 00:13:43,440
so uh

372
00:13:43,440 --> 00:13:46,959
so a few a few hackathons ago we landed

373
00:13:46,959 --> 00:13:49,600
on container lab as a

374
00:13:49,600 --> 00:13:50,560
as a

375
00:13:50,560 --> 00:13:52,160
infrastructure uh

376
00:13:52,160 --> 00:13:54,079
infrastructure provider it's an open

377
00:13:54,079 --> 00:13:58,240
source project uh mainly funded by nokia

378
00:13:58,240 --> 00:14:01,440
so as always thank thanks to nokia for

379
00:14:01,440 --> 00:14:03,519
for their support in helping us get this

380
00:14:03,519 --> 00:14:06,480
up and running um

381
00:14:06,480 --> 00:14:08,079
and i just realized there's a typo here

382
00:14:08,079 --> 00:14:10,320
because we're actually not running nokia

383
00:14:10,320 --> 00:14:12,480
instances they're juniper instances now

384
00:14:12,480 --> 00:14:14,000
um

385
00:14:14,000 --> 00:14:18,560
so um so no so container lab is a is a

386
00:14:18,560 --> 00:14:21,199
system for creating

387
00:14:21,199 --> 00:14:22,800
creating in

388
00:14:22,800 --> 00:14:25,040
container based network infrastructure

389
00:14:25,040 --> 00:14:28,000
um it comes with a definition language

390
00:14:28,000 --> 00:14:31,199
configuration language for um for

391
00:14:31,199 --> 00:14:33,839
bringing up container-based os's or

392
00:14:33,839 --> 00:14:35,279
container images

393
00:14:35,279 --> 00:14:36,800
uh provisioning

394
00:14:36,800 --> 00:14:38,800
you know setting provisioning links

395
00:14:38,800 --> 00:14:40,160
between them

396
00:14:40,160 --> 00:14:41,600
which is probably the most important

397
00:14:41,600 --> 00:14:42,720
part

398
00:14:42,720 --> 00:14:46,399
using using docker and uh name spacing

399
00:14:46,399 --> 00:14:49,519
capabilities to create uh the topology

400
00:14:49,519 --> 00:14:52,800
as you need it um

401
00:14:53,519 --> 00:14:55,839
and so we have a standard we have a

402
00:14:55,839 --> 00:14:58,959
standard infrastructure that we designed

403
00:14:58,959 --> 00:15:01,760
and each team on request we will

404
00:15:01,760 --> 00:15:04,079
provision an instance so this will be uh

405
00:15:04,079 --> 00:15:07,279
this will be an aws ec2 instance uh

406
00:15:07,279 --> 00:15:10,720
there is a shared ssh key

407
00:15:10,720 --> 00:15:14,560
for the very for for the instances so uh

408
00:15:14,560 --> 00:15:16,560
we will give you access to snhk and

409
00:15:16,560 --> 00:15:19,279
you'll use that to reach the instance

410
00:15:19,279 --> 00:15:20,959
and then once in the instance you have

411
00:15:20,959 --> 00:15:23,680
access to the different containerized uh

412
00:15:23,680 --> 00:15:26,399
router os's as well as a pair of

413
00:15:26,399 --> 00:15:28,240
of centos nodes

414
00:15:28,240 --> 00:15:29,279
that can

415
00:15:29,279 --> 00:15:30,959
that you can use as development hosts

416
00:15:30,959 --> 00:15:32,079
that are part of the infrastructure as

417
00:15:32,079 --> 00:15:34,160
well

418
00:15:34,160 --> 00:15:36,560
if you would like to spin up

419
00:15:36,560 --> 00:15:38,320
change the topology or spin up

420
00:15:38,320 --> 00:15:40,800
additional containers add anything to it

421
00:15:40,800 --> 00:15:44,399
uh there are there are the the container

422
00:15:44,399 --> 00:15:45,920
os's we're using are not the only ones

423
00:15:45,920 --> 00:15:47,360
that are supported

424
00:15:47,360 --> 00:15:49,199
so we're happy to to work with you if

425
00:15:49,199 --> 00:15:50,800
you'd like to create something more

426
00:15:50,800 --> 00:15:52,639
custom than what we're providing

427
00:15:52,639 --> 00:15:53,920
we put a key in the slack channel and

428
00:15:53,920 --> 00:15:56,399
then you use that private key to access

429
00:15:56,399 --> 00:15:59,440
uh the container assigned to your team

430
00:15:59,440 --> 00:16:01,519
several ways to access them

431
00:16:01,519 --> 00:16:04,399
you can always create an ssh tunnel uh

432
00:16:04,399 --> 00:16:06,320
which gives you direct which which you

433
00:16:06,320 --> 00:16:08,480
use to get direct access to the

434
00:16:08,480 --> 00:16:10,720
containers from your desktop if needed

435
00:16:10,720 --> 00:16:11,519
uh

436
00:16:11,519 --> 00:16:13,839
you can always develop locally and then

437
00:16:13,839 --> 00:16:15,360
push your code

438
00:16:15,360 --> 00:16:18,800
to the device um or just run you know

439
00:16:18,800 --> 00:16:19,920
just run everything on the remote

440
00:16:19,920 --> 00:16:22,079
service directly

441
00:16:22,079 --> 00:16:23,360
just as a

442
00:16:23,360 --> 00:16:25,120
as an fyi

443
00:16:25,120 --> 00:16:28,160
these are ephemeral instances uh they're

444
00:16:28,160 --> 00:16:30,160
not going to be

445
00:16:30,160 --> 00:16:32,959
they're not going to be kept beyond the

446
00:16:32,959 --> 00:16:34,480
hackathon

447
00:16:34,480 --> 00:16:37,440
what we'll probably do is turn them off

448
00:16:37,440 --> 00:16:38,639
after

449
00:16:38,639 --> 00:16:41,680
after the hackathon closes next sunday

450
00:16:41,680 --> 00:16:44,800
and uh keep keep the instances stopped

451
00:16:44,800 --> 00:16:47,120
which preserves their file systems and

452
00:16:47,120 --> 00:16:48,800
then most likely a week or so later

453
00:16:48,800 --> 00:16:50,399
delete them entirely

454
00:16:50,399 --> 00:16:53,199
so if you need any files off of your

455
00:16:53,199 --> 00:16:56,160
instance uh within that week or during

456
00:16:56,160 --> 00:16:57,920
you know during nano please let me know

457
00:16:57,920 --> 00:17:00,320
we can bring it back up and get you

458
00:17:00,320 --> 00:17:02,880
access to it

459
00:17:02,880 --> 00:17:04,720
but you know anything

460
00:17:04,720 --> 00:17:06,720
back up anything that you want to keep

461
00:17:06,720 --> 00:17:09,839
so this is this is the topology and the

462
00:17:09,839 --> 00:17:12,640
address plan um

463
00:17:12,640 --> 00:17:14,799
it's fairly simple and straightforward

464
00:17:14,799 --> 00:17:15,679
uh

465
00:17:15,679 --> 00:17:18,160
there are two routers running ceos which

466
00:17:18,160 --> 00:17:20,559
is arista's uh containerized version of

467
00:17:20,559 --> 00:17:22,400
eos

468
00:17:22,400 --> 00:17:24,400
we have two

469
00:17:24,400 --> 00:17:27,359
uh two containers running crpd which is

470
00:17:27,359 --> 00:17:31,440
juniper's containerized router os

471
00:17:31,440 --> 00:17:32,720
which is

472
00:17:32,720 --> 00:17:35,200
not quite junos

473
00:17:35,200 --> 00:17:37,280
but close enough for

474
00:17:37,280 --> 00:17:40,320
most most tasks

475
00:17:40,320 --> 00:17:42,240
it is effectively

476
00:17:42,240 --> 00:17:45,039
it's not the full stack junos it is the

477
00:17:45,039 --> 00:17:47,120
crpd daemon and associated support

478
00:17:47,120 --> 00:17:50,080
utilities uh running in a container so

479
00:17:50,080 --> 00:17:52,400
um some as you can see some of the

480
00:17:52,400 --> 00:17:54,400
commands are slightly different and some

481
00:17:54,400 --> 00:17:57,280
of them are unix commands not june cli

482
00:17:57,280 --> 00:17:59,520
commands so

483
00:17:59,520 --> 00:18:01,280
i found a couple of those so far and you

484
00:18:01,280 --> 00:18:04,640
might find more yourself as you go

485
00:18:04,640 --> 00:18:08,400
everything is dual stack v6 ipv4 and

486
00:18:08,400 --> 00:18:09,679
ipv6

487
00:18:09,679 --> 00:18:12,960
and all of the routing between the four

488
00:18:12,960 --> 00:18:15,760
routers are our evgp sessions where each

489
00:18:15,760 --> 00:18:18,559
device has its own as number

490
00:18:18,559 --> 00:18:22,320
to access the lab using your ssh key

491
00:18:22,320 --> 00:18:24,480
important important thing to remember i

492
00:18:24,480 --> 00:18:26,640
get tricked on this myself all the time

493
00:18:26,640 --> 00:18:29,440
when you download an ssh key and drop it

494
00:18:29,440 --> 00:18:30,799
into your

495
00:18:30,799 --> 00:18:34,400
ssh directory on mac os linux

496
00:18:34,400 --> 00:18:36,320
do not forget to change its owner

497
00:18:36,320 --> 00:18:40,799
permissions uh ssh key our ssh

498
00:18:40,799 --> 00:18:43,120
key based authentication does not does

499
00:18:43,120 --> 00:18:46,640
not work unless the key file is

500
00:18:46,640 --> 00:18:51,039
mode 600 and only readable by by you by

501
00:18:51,039 --> 00:18:54,720
your by by your username

502
00:18:54,720 --> 00:18:57,039
so and then use that to

503
00:18:57,039 --> 00:18:59,039
to authenticate with the instance

504
00:18:59,039 --> 00:19:01,360
and just here's an example of that

505
00:19:01,360 --> 00:19:03,919
if you you know download the key drop it

506
00:19:03,919 --> 00:19:07,840
into your ssh um yeah this this chon and

507
00:19:07,840 --> 00:19:08,960
shmod

508
00:19:08,960 --> 00:19:12,160
uh command here is the important bit

509
00:19:12,160 --> 00:19:14,000
otherwise you're going to get errors

510
00:19:14,000 --> 00:19:17,120
that may not be obvious

511
00:19:17,120 --> 00:19:19,280
and then once you're there

512
00:19:19,280 --> 00:19:20,880
you can simply

513
00:19:20,880 --> 00:19:22,320
something i've learned is that you don't

514
00:19:22,320 --> 00:19:25,039
actually need the dash eye switch to

515
00:19:25,039 --> 00:19:26,559
specify the key

516
00:19:26,559 --> 00:19:29,840
as long as that key is in the ssh

517
00:19:29,840 --> 00:19:32,799
directory in your home directory uh ssh

518
00:19:32,799 --> 00:19:36,080
will pick it up and use it

519
00:19:36,080 --> 00:19:36,960
so

520
00:19:36,960 --> 00:19:38,960
and then once you're in you'll get

521
00:19:38,960 --> 00:19:41,679
fingerprint prompt that as usual and

522
00:19:41,679 --> 00:19:43,679
then you will have access to your

523
00:19:43,679 --> 00:19:46,880
instance uh make sure to use the ubuntu

524
00:19:46,880 --> 00:19:49,760
username that's the default username for

525
00:19:49,760 --> 00:19:52,799
for each for these instances

526
00:19:52,799 --> 00:19:54,880
and as that implies if you want to

527
00:19:54,880 --> 00:19:57,919
install packages uh use upon two's uh

528
00:19:57,919 --> 00:20:00,799
package management utilities to do so

529
00:20:00,799 --> 00:20:03,679
a bit about container lab um

530
00:20:03,679 --> 00:20:04,720
the

531
00:20:04,720 --> 00:20:06,080
the

532
00:20:06,080 --> 00:20:07,919
control utility for running container

533
00:20:07,919 --> 00:20:10,320
lab is called c lab um i'm just going to

534
00:20:10,320 --> 00:20:12,080
show you an example of a couple commands

535
00:20:12,080 --> 00:20:14,480
that that you can run um

536
00:20:14,480 --> 00:20:15,600
this is the

537
00:20:15,600 --> 00:20:17,280
this is probably the

538
00:20:17,280 --> 00:20:20,000
the basic one to show you what is

539
00:20:20,000 --> 00:20:21,360
actually running

540
00:20:21,360 --> 00:20:22,480
um

541
00:20:22,480 --> 00:20:24,559
and you'll see there are there are the

542
00:20:24,559 --> 00:20:28,240
six containers uh with their names and

543
00:20:28,240 --> 00:20:29,600
these names are what you will use to

544
00:20:29,600 --> 00:20:31,120
access them

545
00:20:31,120 --> 00:20:33,360
and it tells you what images and

546
00:20:33,360 --> 00:20:35,679
the kind the kind is a c lab specific

547
00:20:35,679 --> 00:20:38,240
field um so it's

548
00:20:38,240 --> 00:20:40,240
it's got internal logic to know how to

549
00:20:40,240 --> 00:20:42,799
handle the various uh that the various

550
00:20:42,799 --> 00:20:45,280
vendor containers it supports uh if you

551
00:20:45,280 --> 00:20:47,760
want to reach them by their ip address

552
00:20:47,760 --> 00:20:50,480
instead of the instead of docker exec

553
00:20:50,480 --> 00:20:51,919
commands

554
00:20:51,919 --> 00:20:54,159
these are the ip addresses that each

555
00:20:54,159 --> 00:20:56,159
container gets assigned for

556
00:20:56,159 --> 00:20:58,159
for external access so if you want to

557
00:20:58,159 --> 00:20:59,679
create a tunnel from your desktop

558
00:20:59,679 --> 00:21:01,280
directly to an instance

559
00:21:01,280 --> 00:21:04,320
this is the destination ip for your ssh

560
00:21:04,320 --> 00:21:07,039
tunnel command that you would use

561
00:21:07,039 --> 00:21:09,280
if you're familiar with docker

562
00:21:09,280 --> 00:21:10,799
the

563
00:21:10,799 --> 00:21:11,919
the

564
00:21:11,919 --> 00:21:13,520
process for getting into one of your

565
00:21:13,520 --> 00:21:16,799
containers is the docker exec

566
00:21:16,799 --> 00:21:19,360
is the docker exec command uh which

567
00:21:19,360 --> 00:21:20,480
effectively

568
00:21:20,480 --> 00:21:21,760
uh

569
00:21:21,760 --> 00:21:24,000
gives you gives you terminal on the

570
00:21:24,000 --> 00:21:25,760
instance now remember these are all

571
00:21:25,760 --> 00:21:30,080
linux based uh containers so by default

572
00:21:30,080 --> 00:21:32,640
uh you will not get into the router 0

573
00:21:32,640 --> 00:21:34,559
but you will not get into the router's

574
00:21:34,559 --> 00:21:36,559
exact command line

575
00:21:36,559 --> 00:21:38,640
you will just get in you'll just get a

576
00:21:38,640 --> 00:21:40,240
batch prompt

577
00:21:40,240 --> 00:21:44,080
so the the exact argument is slightly

578
00:21:44,080 --> 00:21:46,320
different between arista and juniper uh

579
00:21:46,320 --> 00:21:49,440
the difference is that the c and cli is

580
00:21:49,440 --> 00:21:54,000
capitalized for the arista containers

581
00:21:54,159 --> 00:21:55,600
so just a

582
00:21:55,600 --> 00:21:58,960
subtle difference but an important one

583
00:21:58,960 --> 00:22:00,000
okay

584
00:22:00,000 --> 00:22:03,039
and and here's an example of reaching

585
00:22:03,039 --> 00:22:06,080
reaching the cli on a

586
00:22:06,080 --> 00:22:09,280
on one of the cos instances um

587
00:22:09,280 --> 00:22:10,559
you know this is

588
00:22:10,559 --> 00:22:13,520
this is the previous iteration of the

589
00:22:13,520 --> 00:22:16,000
of the uh

590
00:22:16,000 --> 00:22:19,039
of the lab but the command is the same

591
00:22:19,039 --> 00:22:20,080
so you

592
00:22:20,080 --> 00:22:22,000
docker exec it

593
00:22:22,000 --> 00:22:25,039
the name of your container and then the

594
00:22:25,039 --> 00:22:26,960
the exec command

595
00:22:26,960 --> 00:22:31,600
cli for ceos with the c capitalized cli

596
00:22:31,600 --> 00:22:33,280
with the c

597
00:22:33,280 --> 00:22:36,559
not capitalized for the crpd

598
00:22:36,559 --> 00:22:38,000
instances

599
00:22:38,000 --> 00:22:39,760
for those of you who don't have

600
00:22:39,760 --> 00:22:44,720
familiarity with the ristas eos um

601
00:22:44,720 --> 00:22:47,120
you're if you if you know cisco you are

602
00:22:47,120 --> 00:22:51,200
90 there uh arista's eos is so similar

603
00:22:51,200 --> 00:22:52,720
to cisco that cisco actually sued

604
00:22:52,720 --> 00:22:56,080
arrested over this one point um

605
00:22:56,080 --> 00:22:58,480
and uh you'll you'll find a lot of

606
00:22:58,480 --> 00:23:01,039
familiarity once you once you get into

607
00:23:01,039 --> 00:23:03,840
the arista exact exact

608
00:23:03,840 --> 00:23:06,400
commands um

609
00:23:06,400 --> 00:23:08,960
configure configure t works as you would

610
00:23:08,960 --> 00:23:10,720
expect uh

611
00:23:10,720 --> 00:23:13,039
with the one angle is the one

612
00:23:13,039 --> 00:23:14,720
twist is that there is a configure

613
00:23:14,720 --> 00:23:16,880
session command which

614
00:23:16,880 --> 00:23:18,960
makes it a lot easier to create

615
00:23:18,960 --> 00:23:21,360
candidate configs very similar to

616
00:23:21,360 --> 00:23:23,919
juniper's config mode where you

617
00:23:23,919 --> 00:23:27,039
make your config changes and then commit

618
00:23:27,039 --> 00:23:29,840
and here's a link to

619
00:23:29,840 --> 00:23:32,559
to their config language

620
00:23:32,559 --> 00:23:34,960
if you'd like to reference that

621
00:23:34,960 --> 00:23:36,880
also most of us here have a lot of

622
00:23:36,880 --> 00:23:38,880
familiarity with arista uh feel free to

623
00:23:38,880 --> 00:23:41,520
hit us up if you want to do any specific

624
00:23:41,520 --> 00:23:42,960
configurations

625
00:23:42,960 --> 00:23:44,320
um

626
00:23:44,320 --> 00:23:46,400
that uh that you're not that you're not

627
00:23:46,400 --> 00:23:50,000
hundred percent on how to do

628
00:23:50,000 --> 00:23:51,440
we are here to help

629
00:23:51,440 --> 00:23:53,520
um

630
00:23:53,520 --> 00:23:56,640
crpg like i said is a containerized

631
00:23:56,640 --> 00:23:59,039
version of the juno the genos routing

632
00:23:59,039 --> 00:24:03,440
demon the rpg demon it is not a full

633
00:24:03,440 --> 00:24:06,000
juniper os

634
00:24:06,000 --> 00:24:07,360
and what that means is that you have

635
00:24:07,360 --> 00:24:10,159
this strange dichotomy of some commands

636
00:24:10,159 --> 00:24:11,600
that you're familiar with on the junior

637
00:24:11,600 --> 00:24:14,400
work exactly as you expect and others do

638
00:24:14,400 --> 00:24:16,480
not

639
00:24:16,480 --> 00:24:19,520
the ones that do not tend to be the

640
00:24:19,520 --> 00:24:22,080
the more basic exec commands uh for

641
00:24:22,080 --> 00:24:25,360
example ping arp um

642
00:24:25,360 --> 00:24:28,000
don't are not available in the exec mode

643
00:24:28,000 --> 00:24:29,200
you have to drop to the shell to run

644
00:24:29,200 --> 00:24:31,039
those um

645
00:24:31,039 --> 00:24:34,480
which takes some getting used to um

646
00:24:34,480 --> 00:24:35,760
next slide i think i put in some

647
00:24:35,760 --> 00:24:37,200
examples of those

648
00:24:37,200 --> 00:24:39,840
show bgb summary exactly the same output

649
00:24:39,840 --> 00:24:42,080
that you'd see on a

650
00:24:42,080 --> 00:24:44,960
on a real juniper router but

651
00:24:44,960 --> 00:24:48,320
if you try to ping it doesn't recognize

652
00:24:48,320 --> 00:24:50,720
that um

653
00:24:50,720 --> 00:24:53,279
so next slide uh that's where you would

654
00:24:53,279 --> 00:24:55,520
use the start shell command and that

655
00:24:55,520 --> 00:24:58,799
gets you to a that gets you to a uh to a

656
00:24:58,799 --> 00:25:00,880
bash show and then from there

657
00:25:00,880 --> 00:25:03,039
you can run unix level commands that are

658
00:25:03,039 --> 00:25:06,640
underneath so ping arp um netstat you

659
00:25:06,640 --> 00:25:07,440
know

660
00:25:07,440 --> 00:25:10,159
even the ip route commands work here um

661
00:25:10,159 --> 00:25:12,880
because all that crpd doing is populated

662
00:25:12,880 --> 00:25:15,679
is populated the linux uh linux kernel

663
00:25:15,679 --> 00:25:17,760
uh kernel route table

664
00:25:17,760 --> 00:25:19,520
so something to understand is that you

665
00:25:19,520 --> 00:25:22,000
know as as i've said this is this we've

666
00:25:22,000 --> 00:25:23,760
been iterating on this uh on this

667
00:25:23,760 --> 00:25:26,159
topology for a while um

668
00:25:26,159 --> 00:25:28,559
so if you're logged into your your

669
00:25:28,559 --> 00:25:31,520
instance you'll see that there is a

670
00:25:31,520 --> 00:25:33,679
these are the definition files so these

671
00:25:33,679 --> 00:25:36,400
are the files that uh define the

672
00:25:36,400 --> 00:25:40,000
topology um we've left the

673
00:25:40,000 --> 00:25:43,600
the topology file for the last last

674
00:25:43,600 --> 00:25:45,520
hackathon in here so

675
00:25:45,520 --> 00:25:47,840
the main difference is that last

676
00:25:47,840 --> 00:25:50,080
is at the last hackathon we were using

677
00:25:50,080 --> 00:25:52,960
you know sr linux uh containers uh for

678
00:25:52,960 --> 00:25:54,799
this one we swapped into juniper ones

679
00:25:54,799 --> 00:25:57,120
mainly because of greater familiarity

680
00:25:57,120 --> 00:25:59,840
with with junos versus uh versus nokia's

681
00:25:59,840 --> 00:26:00,720
os

682
00:26:00,720 --> 00:26:02,960
so

683
00:26:04,080 --> 00:26:05,840
so if you look at the current version of

684
00:26:05,840 --> 00:26:06,720
the

685
00:26:06,720 --> 00:26:10,799
of the c lab uh definition file um

686
00:26:10,799 --> 00:26:13,600
so this is container labs configuration

687
00:26:13,600 --> 00:26:14,960
um

688
00:26:14,960 --> 00:26:18,559
you have definitions of

689
00:26:18,559 --> 00:26:19,840
you know here this is the management

690
00:26:19,840 --> 00:26:22,000
network

691
00:26:22,000 --> 00:26:23,840
we have

692
00:26:23,840 --> 00:26:26,480
the kind keyword and we have those

693
00:26:26,480 --> 00:26:28,480
linked to the images

694
00:26:28,480 --> 00:26:30,880
um

695
00:26:31,120 --> 00:26:33,200
so we know that you know this kind

696
00:26:33,200 --> 00:26:34,240
matches

697
00:26:34,240 --> 00:26:35,200
this

698
00:26:35,200 --> 00:26:37,840
this container image

699
00:26:37,840 --> 00:26:40,159
from here we have definitions for the

700
00:26:40,159 --> 00:26:41,919
nodes um

701
00:26:41,919 --> 00:26:43,840
and if you look into this directory

702
00:26:43,840 --> 00:26:45,600
you'll see the startup configs that each

703
00:26:45,600 --> 00:26:48,000
one uses um

704
00:26:48,000 --> 00:26:50,640
and and you can you can edit those at

705
00:26:50,640 --> 00:26:53,600
your leisure and if you restart the lab

706
00:26:53,600 --> 00:26:56,320
they will use the new configurations

707
00:26:56,320 --> 00:26:58,559
um

708
00:26:59,600 --> 00:27:01,760
we've got some there's a startup script

709
00:27:01,760 --> 00:27:04,559
that is linked from the

710
00:27:04,559 --> 00:27:05,679
that goes in the center house and this

711
00:27:05,679 --> 00:27:07,760
sets up the basic networking

712
00:27:07,760 --> 00:27:10,080
for the centos instances so you can log

713
00:27:10,080 --> 00:27:12,720
into those and in a prop in a properly

714
00:27:12,720 --> 00:27:15,440
functioning lab the two centos images

715
00:27:15,440 --> 00:27:17,120
the two sentence distances should be

716
00:27:17,120 --> 00:27:19,600
able to reach each other um if you bring

717
00:27:19,600 --> 00:27:21,840
up your lab and you cannot ping centos

718
00:27:21,840 --> 00:27:24,000
two from centos one uh please let me

719
00:27:24,000 --> 00:27:26,640
know um

720
00:27:26,640 --> 00:27:29,679
the the magic bit down here

721
00:27:29,679 --> 00:27:32,640
is the definition of the virtual links

722
00:27:32,640 --> 00:27:35,279
so if you want to create a new

723
00:27:35,279 --> 00:27:38,159
if you want to add add an image or add a

724
00:27:38,159 --> 00:27:40,240
node you need to make sure that you also

725
00:27:40,240 --> 00:27:43,520
define links that define which ports

726
00:27:43,520 --> 00:27:46,080
those nodes connect to uh on the old

727
00:27:46,080 --> 00:27:46,840
ones

728
00:27:46,840 --> 00:27:49,679
now because these are all containerized

729
00:27:49,679 --> 00:27:51,840
os's they all use

730
00:27:51,840 --> 00:27:54,960
linux style linux style uh interface

731
00:27:54,960 --> 00:27:57,039
definitions eth0 is always the

732
00:27:57,039 --> 00:28:00,240
management so you'll start at each one

733
00:28:00,240 --> 00:28:03,200
now these don't translate to these exact

734
00:28:03,200 --> 00:28:04,720
interface names once you're in the

735
00:28:04,720 --> 00:28:05,840
router os

736
00:28:05,840 --> 00:28:08,158
um

737
00:28:08,320 --> 00:28:09,919
but at least the numbers the numbers

738
00:28:09,919 --> 00:28:11,760
will be the same uh

739
00:28:11,760 --> 00:28:14,960
i think cos it becomes ethernet one not

740
00:28:14,960 --> 00:28:17,440
each one

741
00:28:17,440 --> 00:28:19,360
so um

742
00:28:19,360 --> 00:28:21,600
so if you want to change your topology

743
00:28:21,600 --> 00:28:23,039
this is the file that you would work

744
00:28:23,039 --> 00:28:25,039
with to do that um

745
00:28:25,039 --> 00:28:26,399
it's actually similar to this file but

746
00:28:26,399 --> 00:28:28,080
you get the idea

747
00:28:28,080 --> 00:28:29,200
what i would actually recommend is

748
00:28:29,200 --> 00:28:30,399
copying this

749
00:28:30,399 --> 00:28:31,919
if you want to change it copying this

750
00:28:31,919 --> 00:28:34,720
make a new file and then change the sim

751
00:28:34,720 --> 00:28:39,279
link to point to the edited file um

752
00:28:39,279 --> 00:28:40,720
no

753
00:28:40,720 --> 00:28:42,399
no everything is going to require sudo

754
00:28:42,399 --> 00:28:44,080
so both clan and docker commands are

755
00:28:44,080 --> 00:28:46,799
parts judo

756
00:28:51,039 --> 00:28:52,000
so

757
00:28:52,000 --> 00:28:54,320
you know this command gives you it gives

758
00:28:54,320 --> 00:28:56,720
you the running instances

759
00:28:56,720 --> 00:28:58,480
and it's very it's

760
00:28:58,480 --> 00:29:00,799
you you get almost the same information

761
00:29:00,799 --> 00:29:02,640
if you run a docker ps

762
00:29:02,640 --> 00:29:03,760
um

763
00:29:03,760 --> 00:29:06,240
you'll see here the same

764
00:29:06,240 --> 00:29:08,159
the same image names but this gives you

765
00:29:08,159 --> 00:29:08,960
some

766
00:29:08,960 --> 00:29:12,399
some additional information um about you

767
00:29:12,399 --> 00:29:14,399
know from doctor's point of view of the

768
00:29:14,399 --> 00:29:15,440
commands

769
00:29:15,440 --> 00:29:17,840
of these images in images

770
00:29:17,840 --> 00:29:19,840
now

771
00:29:19,840 --> 00:29:23,039
redeploying this is fairly easy

772
00:29:23,039 --> 00:29:27,158
and i can do that for you live

773
00:29:28,390 --> 00:29:31,440
[Music]

774
00:29:31,440 --> 00:29:35,360
this is going to shut down the lab

775
00:29:37,520 --> 00:29:40,520
and

776
00:29:47,039 --> 00:29:50,000
and another nature's found so search to

777
00:29:50,000 --> 00:29:53,000
redeploy

778
00:29:57,600 --> 00:30:01,120
you use the c lab deploy command and you

779
00:30:01,120 --> 00:30:03,840
always want to have this dash t

780
00:30:03,840 --> 00:30:08,039
to point to the yaml file

781
00:30:09,120 --> 00:30:11,760
so we're

782
00:30:12,320 --> 00:30:14,720
creating the containers creating

783
00:30:14,720 --> 00:30:16,000
instances

784
00:30:16,000 --> 00:30:17,919
um

785
00:30:17,919 --> 00:30:19,600
you generally want to give it a minute

786
00:30:19,600 --> 00:30:23,360
or two for the actual demons to spin up

787
00:30:23,360 --> 00:30:25,039
after the

788
00:30:25,039 --> 00:30:29,360
after the instance itself launches but

789
00:30:29,360 --> 00:30:32,000
it's waiting for that to complete now

790
00:30:32,000 --> 00:30:34,320
there have been some times where if you

791
00:30:34,320 --> 00:30:36,000
log in immediately after you get the

792
00:30:36,000 --> 00:30:37,440
prompt back it

793
00:30:37,440 --> 00:30:41,279
it may not be completely booted

794
00:30:44,880 --> 00:30:47,120
so

795
00:30:49,679 --> 00:30:52,799
and then here's our lab

796
00:30:52,799 --> 00:30:54,960
so

797
00:30:56,000 --> 00:30:59,039
as i said the

798
00:30:59,200 --> 00:31:02,159
the mechanism for reaching your instance

799
00:31:02,159 --> 00:31:03,679
is going reaching any of these

800
00:31:03,679 --> 00:31:06,480
containers is

801
00:31:07,679 --> 00:31:10,559
is going to be the docker exec command

802
00:31:10,559 --> 00:31:13,279
and for for arrested it's going to be

803
00:31:13,279 --> 00:31:16,320
cli capitalized

804
00:31:16,320 --> 00:31:19,320
okay

805
00:31:20,559 --> 00:31:23,519
here's our router

806
00:31:30,159 --> 00:31:34,320
see we have a full range hill

807
00:31:42,000 --> 00:31:44,880
so here all of our

808
00:31:44,880 --> 00:31:47,840
all our v6

809
00:31:48,320 --> 00:31:49,440
routes

810
00:31:49,440 --> 00:31:50,240
so

811
00:31:50,240 --> 00:31:52,640
if i want to

812
00:31:52,640 --> 00:31:56,360
link it back out

813
00:32:06,559 --> 00:32:09,440
and centos you know it's it's linux so

814
00:32:09,440 --> 00:32:13,000
you're just going to use the bash

815
00:32:14,799 --> 00:32:16,480
this you know all your

816
00:32:16,480 --> 00:32:18,640
all of your standard uh

817
00:32:18,640 --> 00:32:22,000
routing works here

818
00:32:22,880 --> 00:32:24,080
so

819
00:32:24,080 --> 00:32:28,240
if we go back to the

820
00:32:28,240 --> 00:32:31,720
to the uh topology

821
00:32:31,720 --> 00:32:34,320
10.1.1.2 is centos business in house 2

822
00:32:34,320 --> 00:32:36,639
image

823
00:32:40,000 --> 00:32:43,840
and we have connectivity

824
00:32:54,799 --> 00:32:57,120
and v6 connectivity as well is all

825
00:32:57,120 --> 00:32:59,678
operational

826
00:33:01,760 --> 00:33:04,760
so

827
00:33:13,919 --> 00:33:16,320
and then

828
00:33:22,840 --> 00:33:26,158
okay oh

829
00:33:30,080 --> 00:33:33,600
and here is your crpd with

830
00:33:33,600 --> 00:33:34,640
a

831
00:33:34,640 --> 00:33:35,600
notice

832
00:33:35,600 --> 00:33:37,519
notice that your

833
00:33:37,519 --> 00:33:40,080
your your interfaces are the same unix

834
00:33:40,080 --> 00:33:42,240
name so ethernet one these two

835
00:33:42,240 --> 00:33:44,880
but with the same juniper unit zero

836
00:33:44,880 --> 00:33:47,519
family i net item six

837
00:33:47,519 --> 00:33:49,760
um

838
00:33:50,720 --> 00:33:54,159
routing options bgp protocols and policy

839
00:33:54,159 --> 00:33:55,440
uh pretty much configured the way that

840
00:33:55,440 --> 00:33:58,080
you expect it on a on a main juniper

841
00:33:58,080 --> 00:33:58,799
but

842
00:33:58,799 --> 00:34:01,200
again

843
00:34:02,559 --> 00:34:05,960
very smart works

844
00:34:06,880 --> 00:34:09,760
we have traceroute but

845
00:34:09,760 --> 00:34:13,520
you know ping is not a known command

846
00:34:14,000 --> 00:34:17,760
show interfaces gives you

847
00:34:19,440 --> 00:34:21,040
some of these aren't don't give you the

848
00:34:21,040 --> 00:34:22,480
same thing you expect show interface

849
00:34:22,480 --> 00:34:24,879
descriptions one that i noticed

850
00:34:24,879 --> 00:34:26,159
that doesn't

851
00:34:26,159 --> 00:34:28,960
give you everything

852
00:34:31,520 --> 00:34:33,839
yeah monitor doesn't work the way that

853
00:34:33,839 --> 00:34:35,359
you would yeah some of these things are

854
00:34:35,359 --> 00:34:36,239
just missing it's a partial

855
00:34:36,239 --> 00:34:37,599
implementation

856
00:34:37,599 --> 00:34:38,719
um

857
00:34:38,719 --> 00:34:40,079
but if there's something you're trying

858
00:34:40,079 --> 00:34:42,719
to do and running into trouble again

859
00:34:42,719 --> 00:34:45,440
we're here to help uh reach out and let

860
00:34:45,440 --> 00:34:46,719
us know if you're

861
00:34:46,719 --> 00:34:48,480
if you're if you're running in any

862
00:34:48,480 --> 00:34:49,359
issues

863
00:34:49,359 --> 00:34:51,598
um

864
00:34:51,760 --> 00:34:52,800
but

865
00:34:52,800 --> 00:34:53,918
you know

866
00:34:53,918 --> 00:34:56,960
if you know junos to get to the

867
00:34:56,960 --> 00:34:59,359
unix shell start shell is your

868
00:34:59,359 --> 00:35:03,839
is your go to command and then from here

869
00:35:04,400 --> 00:35:07,520
you can run your ping command

870
00:35:08,400 --> 00:35:10,720
arp works those are the two that i found

871
00:35:10,720 --> 00:35:12,800
that that you need to drop in the shell

872
00:35:12,800 --> 00:35:15,880
to get

873
00:35:16,079 --> 00:35:17,040
and then

874
00:35:17,040 --> 00:35:19,280
and then the unix ip

875
00:35:19,280 --> 00:35:20,480
ip

876
00:35:20,480 --> 00:35:23,839
commands work as you expect

877
00:35:28,000 --> 00:35:31,480
yeah just show

878
00:35:42,160 --> 00:35:45,200
then you get the view

879
00:35:45,200 --> 00:35:47,200
try to remember how you get the uh the

880
00:35:47,200 --> 00:35:50,000
v6 table

881
00:35:55,920 --> 00:35:59,839
i have completely blanked on this

882
00:36:10,079 --> 00:36:11,280
anyway

883
00:36:11,280 --> 00:36:12,720
so

884
00:36:12,720 --> 00:36:15,040
i will i will google a man page to

885
00:36:15,040 --> 00:36:18,079
remember that command um

886
00:36:18,079 --> 00:36:20,720
thank you very much uh again we're in

887
00:36:20,720 --> 00:36:23,040
the channel if you have any questions

888
00:36:23,040 --> 00:36:24,079
um

889
00:36:24,079 --> 00:36:27,760
and uh thank you very much thanks chris

890
00:36:27,760 --> 00:36:30,480
okay well thank you all for joining

891
00:36:30,480 --> 00:36:34,160
today i hope to see you all saturday

892
00:36:34,160 --> 00:36:38,560
uh on june 4th and um

893
00:36:38,560 --> 00:36:40,580
have a great rest of your week

894
00:36:40,580 --> 00:36:46,578
[Music]

