1
00:00:00,000 --> 00:00:04,799
[Music]

2
00:00:04,799 --> 00:00:07,040
i would like to introduce shannon

3
00:00:07,040 --> 00:00:09,280
weirich presenting on the edge of small

4
00:00:09,280 --> 00:00:13,759
data shannon is a vp research at ns1

5
00:00:13,759 --> 00:00:16,079
and traveled from new york to join us on

6
00:00:16,079 --> 00:00:18,080
stage this is shannon's first time

7
00:00:18,080 --> 00:00:20,080
presenting at nanog and it's a pleasure

8
00:00:20,080 --> 00:00:21,600
to have him speaking with us today

9
00:00:21,600 --> 00:00:24,400
welcome shannon

10
00:00:26,370 --> 00:00:28,160
[Applause]

11
00:00:28,160 --> 00:00:29,679
buddy thanks for

12
00:00:29,679 --> 00:00:32,079
having me here thank you nanak for uh

13
00:00:32,079 --> 00:00:33,280
for hosting

14
00:00:33,280 --> 00:00:35,200
and thank you all for

15
00:00:35,200 --> 00:00:36,960
holding your attention to the last talk

16
00:00:36,960 --> 00:00:38,000
of the day

17
00:00:38,000 --> 00:00:40,399
uh let's jump in i'm gonna start with a

18
00:00:40,399 --> 00:00:43,680
quick poll of the audience as well so

19
00:00:43,680 --> 00:00:46,000
who here is currently processing

20
00:00:46,000 --> 00:00:48,160
visibility data some kind of

21
00:00:48,160 --> 00:00:51,520
telemetry from their infrastructure

22
00:00:51,520 --> 00:00:53,840
fans go up good awesome

23
00:00:53,840 --> 00:00:55,680
quick follow-up question

24
00:00:55,680 --> 00:00:56,960
who thinks they could be getting more

25
00:00:56,960 --> 00:00:59,440
out of that solution in other words who

26
00:00:59,440 --> 00:01:01,199
who's not quite happy with who thinks we

27
00:01:01,199 --> 00:01:02,960
could do better

28
00:01:02,960 --> 00:01:04,319
a couple of hands okay that's that's

29
00:01:04,319 --> 00:01:06,320
great context

30
00:01:06,320 --> 00:01:08,240
so i'm going to talk about

31
00:01:08,240 --> 00:01:09,520
this concept i've been thinking about

32
00:01:09,520 --> 00:01:11,680
called small data and

33
00:01:11,680 --> 00:01:13,680
see if it sits with you folks so i'm

34
00:01:13,680 --> 00:01:16,640
going to come about it from the angle of

35
00:01:16,640 --> 00:01:18,000
the company i've worked for for many

36
00:01:18,000 --> 00:01:21,600
years so ns1 and we

37
00:01:21,600 --> 00:01:22,960
among other things do manage

38
00:01:22,960 --> 00:01:24,640
authoritative dns

39
00:01:24,640 --> 00:01:27,280
we have a global anycast network

40
00:01:27,280 --> 00:01:29,920
that serves dns queries for our

41
00:01:29,920 --> 00:01:31,439
customers

42
00:01:31,439 --> 00:01:32,479
we're doing

43
00:01:32,479 --> 00:01:33,840
something in the order of 100 billion

44
00:01:33,840 --> 00:01:36,240
dns queries a day

45
00:01:36,240 --> 00:01:38,079
on a good day on an attack day maybe

46
00:01:38,079 --> 00:01:39,200
that's higher

47
00:01:39,200 --> 00:01:40,479
and of course we are collecting

48
00:01:40,479 --> 00:01:42,159
telemetry from our systems so we're

49
00:01:42,159 --> 00:01:43,920
looking at flow data

50
00:01:43,920 --> 00:01:45,759
uh we're pulling it into systems we're

51
00:01:45,759 --> 00:01:47,759
processing it we

52
00:01:47,759 --> 00:01:49,600
are also looking at the packets

53
00:01:49,600 --> 00:01:52,560
themselves and extracting information

54
00:01:52,560 --> 00:01:54,560
and i would say that um the way we've

55
00:01:54,560 --> 00:01:56,479
thought about how to do that over time

56
00:01:56,479 --> 00:01:58,000
has changed

57
00:01:58,000 --> 00:02:00,240
uh and

58
00:02:00,240 --> 00:02:02,399
you know maybe some of you will uh will

59
00:02:02,399 --> 00:02:04,960
associate with this but early on

60
00:02:04,960 --> 00:02:07,119
we thought what data should we collect

61
00:02:07,119 --> 00:02:09,199
well let's collect all of it all right

62
00:02:09,199 --> 00:02:11,920
that gives us the ability to

63
00:02:11,920 --> 00:02:14,000
ask any questions we want we're not

64
00:02:14,000 --> 00:02:15,520
quite sure what we want from the data

65
00:02:15,520 --> 00:02:17,760
yet so let's just stuff it all somewhere

66
00:02:17,760 --> 00:02:18,959
and then we'll figure out what to do

67
00:02:18,959 --> 00:02:20,239
with it

68
00:02:20,239 --> 00:02:21,040
and

69
00:02:21,040 --> 00:02:22,640
over time i think what we've learned is

70
00:02:22,640 --> 00:02:24,160
that that's not actually what we want or

71
00:02:24,160 --> 00:02:25,599
at least that there are other strategies

72
00:02:25,599 --> 00:02:27,040
to think about

73
00:02:27,040 --> 00:02:29,680
and what we actually want are targeted

74
00:02:29,680 --> 00:02:32,800
insights the things that help us today

75
00:02:32,800 --> 00:02:35,920
to operate and debug and scale protect

76
00:02:35,920 --> 00:02:38,080
our network

77
00:02:38,080 --> 00:02:40,080
and we've you know i would argue that

78
00:02:40,080 --> 00:02:42,160
there's a price to pay for

79
00:02:42,160 --> 00:02:44,239
streaming raw data to some kind of

80
00:02:44,239 --> 00:02:46,160
central solution and that there is

81
00:02:46,160 --> 00:02:50,519
another way to think about it

82
00:02:50,959 --> 00:02:52,319
some of the lessons that we've learned

83
00:02:52,319 --> 00:02:54,959
over time just by dealing with trying to

84
00:02:54,959 --> 00:02:56,879
push a lot of data around so often

85
00:02:56,879 --> 00:02:59,120
there's complicated data pipelines

86
00:02:59,120 --> 00:03:00,879
um you have to find ways to collect it

87
00:03:00,879 --> 00:03:02,319
all to ship it around it's often a

88
00:03:02,319 --> 00:03:04,879
patchwork of different tools

89
00:03:04,879 --> 00:03:06,000
and then you have to do something with

90
00:03:06,000 --> 00:03:07,840
it right so the raw data isn't

91
00:03:07,840 --> 00:03:09,519
particularly useful you have to process

92
00:03:09,519 --> 00:03:11,280
it in some way

93
00:03:11,280 --> 00:03:13,120
there's cross facilities associated with

94
00:03:13,120 --> 00:03:15,360
that both both time and

95
00:03:15,360 --> 00:03:17,280
money

96
00:03:17,280 --> 00:03:19,280
and uh then you have to start to make

97
00:03:19,280 --> 00:03:21,040
sense the data right sometimes sometimes

98
00:03:21,040 --> 00:03:22,560
that's hard you're not even sure what

99
00:03:22,560 --> 00:03:23,920
the data is telling you you have to be

100
00:03:23,920 --> 00:03:25,120
able to extract the insights you're

101
00:03:25,120 --> 00:03:26,319
looking for

102
00:03:26,319 --> 00:03:27,599
you know and so you wind up having a lot

103
00:03:27,599 --> 00:03:28,959
of data that you're not even sure you're

104
00:03:28,959 --> 00:03:31,360
getting all the value out of

105
00:03:31,360 --> 00:03:33,519
and in the past we've also seen

106
00:03:33,519 --> 00:03:34,879
you know these types of solutions can

107
00:03:34,879 --> 00:03:37,040
lead to slow dashboards and

108
00:03:37,040 --> 00:03:39,040
uh the short retention times because we

109
00:03:39,040 --> 00:03:40,959
can't store that much

110
00:03:40,959 --> 00:03:43,120
and in times of problems if you're under

111
00:03:43,120 --> 00:03:45,519
some kind of attack or something

112
00:03:45,519 --> 00:03:47,360
it can take time to get that information

113
00:03:47,360 --> 00:03:48,879
through your system so that you can

114
00:03:48,879 --> 00:03:50,400
visualize it and understand what's going

115
00:03:50,400 --> 00:03:53,040
on and ideally you want that information

116
00:03:53,040 --> 00:03:55,040
directly at the edge directly close to

117
00:03:55,040 --> 00:03:58,079
where the events are happening

118
00:03:58,879 --> 00:04:01,120
so i've been thinking about um this

119
00:04:01,120 --> 00:04:02,879
different way to do it so i'd like to

120
00:04:02,879 --> 00:04:05,200
propose this idea of small data

121
00:04:05,200 --> 00:04:07,840
and what i mean by that is to

122
00:04:07,840 --> 00:04:09,439
uh to think about pushing that

123
00:04:09,439 --> 00:04:11,760
processing that we do after collecting

124
00:04:11,760 --> 00:04:13,519
all of that raw data push that out to

125
00:04:13,519 --> 00:04:14,959
the edge

126
00:04:14,959 --> 00:04:16,079
and

127
00:04:16,079 --> 00:04:18,639
be able to look at the data in real time

128
00:04:18,639 --> 00:04:20,880
that's coming into our edges right we

129
00:04:20,880 --> 00:04:22,639
know that there's a lot of interesting

130
00:04:22,639 --> 00:04:23,919
information in there that we want

131
00:04:23,919 --> 00:04:25,360
operationally

132
00:04:25,360 --> 00:04:27,280
but let's push that analysis out there

133
00:04:27,280 --> 00:04:29,040
and extract those insights that we're

134
00:04:29,040 --> 00:04:32,000
looking for in real time at the edge

135
00:04:32,000 --> 00:04:34,560
and if we think about doing it that way

136
00:04:34,560 --> 00:04:36,479
there are several benefits right so one

137
00:04:36,479 --> 00:04:38,880
is we can react quicker because we have

138
00:04:38,880 --> 00:04:40,880
those insights available local to the

139
00:04:40,880 --> 00:04:42,800
nodes where where the source

140
00:04:42,800 --> 00:04:44,720
of the events are happening and so we

141
00:04:44,720 --> 00:04:45,919
can potentially action on that

142
00:04:45,919 --> 00:04:48,160
information immediately faster but we

143
00:04:48,160 --> 00:04:51,040
can also collect that centrally right so

144
00:04:51,040 --> 00:04:53,040
we we do have the global view of what's

145
00:04:53,040 --> 00:04:55,040
going on across across our

146
00:04:55,040 --> 00:04:58,160
infrastructure across our topology

147
00:04:58,160 --> 00:05:00,960
and in general if we do it that way

148
00:05:00,960 --> 00:05:03,120
we have less data to deal with right

149
00:05:03,120 --> 00:05:04,400
we're collecting

150
00:05:04,400 --> 00:05:05,680
less data

151
00:05:05,680 --> 00:05:07,520
we are processing less data we're

152
00:05:07,520 --> 00:05:09,039
storing less data

153
00:05:09,039 --> 00:05:11,360
and one of the ways you know i've talked

154
00:05:11,360 --> 00:05:13,520
about this is that rather than thinking

155
00:05:13,520 --> 00:05:14,880
about collecting a bunch of data and

156
00:05:14,880 --> 00:05:17,199
then later on theoretically we'll find

157
00:05:17,199 --> 00:05:18,400
the needle in the haystack when we're

158
00:05:18,400 --> 00:05:19,520
ready for it

159
00:05:19,520 --> 00:05:21,120
let's just collect the needles let's

160
00:05:21,120 --> 00:05:22,400
just collect the insights we're looking

161
00:05:22,400 --> 00:05:25,280
for that help us operate today

162
00:05:25,280 --> 00:05:28,160
and part of that uh proposal

163
00:05:28,160 --> 00:05:30,479
is that we want to decide what those

164
00:05:30,479 --> 00:05:32,160
needles are we want to decide what the

165
00:05:32,160 --> 00:05:34,000
insights we're looking for are

166
00:05:34,000 --> 00:05:36,479
in real time and so we need this dynamic

167
00:05:36,479 --> 00:05:40,560
ability to tell our observing tool at

168
00:05:40,560 --> 00:05:44,240
the edge what we're interested in

169
00:05:44,800 --> 00:05:46,560
so my name is shannon weirich i've been

170
00:05:46,560 --> 00:05:48,160
in the internet infrastructure industry

171
00:05:48,160 --> 00:05:50,080
for quite some time i spent the last

172
00:05:50,080 --> 00:05:53,280
eight years at ns1 and the last year and

173
00:05:53,280 --> 00:05:55,680
a half or so working on the orb project

174
00:05:55,680 --> 00:05:59,039
that i'm going to talk about at ns1 labs

175
00:05:59,039 --> 00:06:00,560
this is my email address i'd love to

176
00:06:00,560 --> 00:06:02,319
hear from anyone who's got thoughts on

177
00:06:02,319 --> 00:06:06,039
anything i'm talking about

178
00:06:06,080 --> 00:06:09,039
so i'm going to give a quick tldr also i

179
00:06:09,039 --> 00:06:10,880
know it is the last talk of the day i

180
00:06:10,880 --> 00:06:12,319
know we've got an event right after this

181
00:06:12,319 --> 00:06:14,880
so if anybody uh kind of wants to hear

182
00:06:14,880 --> 00:06:16,960
the quick summary in a few slides and

183
00:06:16,960 --> 00:06:19,520
then slip out uh i have no problem with

184
00:06:19,520 --> 00:06:20,560
that

185
00:06:20,560 --> 00:06:23,120
orb is an open source edge observability

186
00:06:23,120 --> 00:06:24,240
platform

187
00:06:24,240 --> 00:06:25,680
so it's a tool that we've been working

188
00:06:25,680 --> 00:06:27,360
on that's designed for distributed edge

189
00:06:27,360 --> 00:06:28,639
networks

190
00:06:28,639 --> 00:06:31,440
it uses this small data paradigm that

191
00:06:31,440 --> 00:06:32,639
i've mentioned

192
00:06:32,639 --> 00:06:34,720
and it combines that with this idea of

193
00:06:34,720 --> 00:06:36,639
dynamic policy orchestration that we can

194
00:06:36,639 --> 00:06:39,199
reprogram our fleet of observers in real

195
00:06:39,199 --> 00:06:40,240
time

196
00:06:40,240 --> 00:06:42,160
and the goal is to extract insights at

197
00:06:42,160 --> 00:06:43,120
the edge

198
00:06:43,120 --> 00:06:44,479
from all this data that's flowing

199
00:06:44,479 --> 00:06:46,400
through

200
00:06:46,400 --> 00:06:49,280
and pull it into our observability

201
00:06:49,280 --> 00:06:51,199
stacks so we want to integrate with

202
00:06:51,199 --> 00:06:53,199
modern observability stacks

203
00:06:53,199 --> 00:06:54,560
and everything i'm going to talk about

204
00:06:54,560 --> 00:06:57,599
is free and open source

205
00:06:59,440 --> 00:07:02,000
this is a dashboard right just to kind

206
00:07:02,000 --> 00:07:03,440
of cut to the chase a bit here's an

207
00:07:03,440 --> 00:07:04,720
example of something you can put

208
00:07:04,720 --> 00:07:06,800
together with the output of this orb

209
00:07:06,800 --> 00:07:08,960
system this is a community dashboard we

210
00:07:08,960 --> 00:07:10,400
have on grafana

211
00:07:10,400 --> 00:07:12,960
and right away we can start to see

212
00:07:12,960 --> 00:07:14,880
some of the information

213
00:07:14,880 --> 00:07:16,240
that we're talking about when we say we

214
00:07:16,240 --> 00:07:18,319
want to extract some things at the edge

215
00:07:18,319 --> 00:07:21,039
and the idea is that we can do some

216
00:07:21,039 --> 00:07:23,520
deeper streaming analysis at the edge

217
00:07:23,520 --> 00:07:25,120
using

218
00:07:25,120 --> 00:07:26,319
using

219
00:07:26,319 --> 00:07:28,639
data sketch algorithms that can examine

220
00:07:28,639 --> 00:07:31,120
and summarize the data in ways

221
00:07:31,120 --> 00:07:32,479
that we care about and a lot of that are

222
00:07:32,479 --> 00:07:35,440
things like tops right we care about

223
00:07:35,440 --> 00:07:36,560
various

224
00:07:36,560 --> 00:07:38,319
layers of the of the network packet that

225
00:07:38,319 --> 00:07:41,360
we see we care about top ips and

226
00:07:41,360 --> 00:07:44,000
top asn's top back and we also want to

227
00:07:44,000 --> 00:07:46,000
go a level deeper sometimes certainly

228
00:07:46,000 --> 00:07:48,400
the background of this project is coming

229
00:07:48,400 --> 00:07:51,039
out of a dns provider so we have very

230
00:07:51,039 --> 00:07:52,639
good dns support

231
00:07:52,639 --> 00:07:54,160
and to operate our networks we care

232
00:07:54,160 --> 00:07:56,720
about top queue names top r codes top q

233
00:07:56,720 --> 00:07:58,160
types and things like that you would

234
00:07:58,160 --> 00:07:59,520
expect

235
00:07:59,520 --> 00:08:01,840
and then on the networking side digging

236
00:08:01,840 --> 00:08:04,000
into the flow data and being able to

237
00:08:04,000 --> 00:08:05,840
to pull out interesting information as

238
00:08:05,840 --> 00:08:07,840
well so this is the system that i'm

239
00:08:07,840 --> 00:08:09,199
going to talk about

240
00:08:09,199 --> 00:08:10,319
and since we don't have too much time

241
00:08:10,319 --> 00:08:11,680
i'm going to dive

242
00:08:11,680 --> 00:08:14,080
right in so i'll start with the uh

243
00:08:14,080 --> 00:08:15,599
control plane side of it so there's

244
00:08:15,599 --> 00:08:17,599
really two parts to the orb system

245
00:08:17,599 --> 00:08:19,919
there's the centralized control plane

246
00:08:19,919 --> 00:08:21,440
and then there are the there's the edge

247
00:08:21,440 --> 00:08:23,360
agent that gets deployed into your

248
00:08:23,360 --> 00:08:25,599
infrastructure

249
00:08:25,599 --> 00:08:28,000
and for the control tower it's got

250
00:08:28,000 --> 00:08:29,680
several services right this this central

251
00:08:29,680 --> 00:08:33,200
control uh plane gets installed into

252
00:08:33,200 --> 00:08:34,479
kubernetes

253
00:08:34,479 --> 00:08:36,719
uh or you can use our sas that i'll talk

254
00:08:36,719 --> 00:08:39,120
about but it's um it's responsible for

255
00:08:39,120 --> 00:08:41,120
providing the services we see here first

256
00:08:41,120 --> 00:08:42,880
of all there's a rest api right we all

257
00:08:42,880 --> 00:08:45,360
we all want to to automate there's also

258
00:08:45,360 --> 00:08:47,440
a portal to help you manage these things

259
00:08:47,440 --> 00:08:49,519
we see here and the first thing is fleet

260
00:08:49,519 --> 00:08:51,760
management so the idea is that we want

261
00:08:51,760 --> 00:08:53,839
to be able to work with a range of

262
00:08:53,839 --> 00:08:55,440
agents that are out there that are doing

263
00:08:55,440 --> 00:08:57,200
this observation and that means we need

264
00:08:57,200 --> 00:08:58,640
to provision them and connect them and

265
00:08:58,640 --> 00:09:01,040
organize them and so forth

266
00:09:01,040 --> 00:09:03,360
next is the policy management and so

267
00:09:03,360 --> 00:09:06,000
this gets to this idea of

268
00:09:06,000 --> 00:09:07,680
of dynamic orchestration we want to be

269
00:09:07,680 --> 00:09:09,440
able to tell these agents in real time

270
00:09:09,440 --> 00:09:11,279
and reprogram them in real time and so

271
00:09:11,279 --> 00:09:12,560
that means we need

272
00:09:12,560 --> 00:09:14,399
a way to store the recipes that we plan

273
00:09:14,399 --> 00:09:15,920
to send out to them right so policy

274
00:09:15,920 --> 00:09:18,240
management is built in

275
00:09:18,240 --> 00:09:20,640
sync management so once the agents are

276
00:09:20,640 --> 00:09:22,640
out there doing their thing we want to

277
00:09:22,640 --> 00:09:23,920
collect that information and put it

278
00:09:23,920 --> 00:09:26,240
somewhere so this is built into our

279
00:09:26,240 --> 00:09:27,839
system it's not a separate step creating

280
00:09:27,839 --> 00:09:29,600
data pipelines

281
00:09:29,600 --> 00:09:31,920
we will collect the the metrics and

282
00:09:31,920 --> 00:09:33,440
information and telemetry coming back

283
00:09:33,440 --> 00:09:35,839
from these agents and send it to async

284
00:09:35,839 --> 00:09:37,680
which is essentially the database where

285
00:09:37,680 --> 00:09:39,600
you'd like to see it so that you can run

286
00:09:39,600 --> 00:09:41,519
your dashboards and and and use that

287
00:09:41,519 --> 00:09:43,200
data

288
00:09:43,200 --> 00:09:44,399
and then there's this configuration

289
00:09:44,399 --> 00:09:46,880
management aspect to it right so this is

290
00:09:46,880 --> 00:09:48,640
something like you know your ansible or

291
00:09:48,640 --> 00:09:50,640
your puppet or something where

292
00:09:50,640 --> 00:09:52,560
part of the ord platform is the ability

293
00:09:52,560 --> 00:09:53,680
to

294
00:09:53,680 --> 00:09:55,760
address your fleet into groups and

295
00:09:55,760 --> 00:09:57,680
decide which policies

296
00:09:57,680 --> 00:10:01,199
to send to which groups in real time

297
00:10:03,120 --> 00:10:05,120
uh so here is a quick

298
00:10:05,120 --> 00:10:07,120
uh architecture overview it's actually

299
00:10:07,120 --> 00:10:08,640
pretty busy i'm sorry about that let me

300
00:10:08,640 --> 00:10:10,399
just run through it a little bit the big

301
00:10:10,399 --> 00:10:12,240
cloud in the middle is this orb control

302
00:10:12,240 --> 00:10:13,519
plane that i've that i've been talking

303
00:10:13,519 --> 00:10:16,000
about uh as i mentioned it can be

304
00:10:16,000 --> 00:10:17,760
self-hosted so you can run your own on

305
00:10:17,760 --> 00:10:19,040
kubernetes

306
00:10:19,040 --> 00:10:22,160
we also do have a free sas site called

307
00:10:22,160 --> 00:10:24,320
org.live which you can check out anytime

308
00:10:24,320 --> 00:10:25,440
if you'd like

309
00:10:25,440 --> 00:10:26,480
and that's if you don't want to do the

310
00:10:26,480 --> 00:10:27,839
self-hosting part

311
00:10:27,839 --> 00:10:29,519
but we see that it does provide the rest

312
00:10:29,519 --> 00:10:32,560
api you can automate against it the ui

313
00:10:32,560 --> 00:10:34,240
connects into this and then the whole

314
00:10:34,240 --> 00:10:36,000
top part represents the agents right and

315
00:10:36,000 --> 00:10:37,200
the idea is that you want to install

316
00:10:37,200 --> 00:10:39,839
these agents uh as close to the event

317
00:10:39,839 --> 00:10:41,839
sources as possible and we're able to

318
00:10:41,839 --> 00:10:43,839
ingest different types of events which

319
00:10:43,839 --> 00:10:45,360
i'll talk about in a few minutes but

320
00:10:45,360 --> 00:10:47,360
that may be from a dns server but it may

321
00:10:47,360 --> 00:10:49,360
be from a router or a switch

322
00:10:49,360 --> 00:10:52,240
it may be embedded in a vm or a docker

323
00:10:52,240 --> 00:10:54,000
container somewhere

324
00:10:54,000 --> 00:10:56,160
and you want that fleet to connect into

325
00:10:56,160 --> 00:10:58,000
the control plane

326
00:10:58,000 --> 00:10:59,839
we have the ability to send policies out

327
00:10:59,839 --> 00:11:02,240
to this fleet and

328
00:11:02,240 --> 00:11:03,680
collect back the metrics and the logs

329
00:11:03,680 --> 00:11:05,120
that result from that

330
00:11:05,120 --> 00:11:08,399
and then we send that out to the sinks

331
00:11:08,399 --> 00:11:09,839
so uh

332
00:11:09,839 --> 00:11:11,760
the actual dashboarding and

333
00:11:11,760 --> 00:11:14,079
visualization that's not part of orb it

334
00:11:14,079 --> 00:11:16,800
would we would expect that you have

335
00:11:16,800 --> 00:11:19,760
an observability stack that already runs

336
00:11:19,760 --> 00:11:21,040
that we want to connect to that and let

337
00:11:21,040 --> 00:11:25,599
you use your tools to to use that data

338
00:11:26,880 --> 00:11:28,480
i'm just going to go through real quick

339
00:11:28,480 --> 00:11:30,240
you know what what this orb ui looks

340
00:11:30,240 --> 00:11:32,160
like to give a bit of flavor for it so

341
00:11:32,160 --> 00:11:33,920
the fleet management has what you'd

342
00:11:33,920 --> 00:11:35,360
expect here's our list of agents that

343
00:11:35,360 --> 00:11:36,720
have connected in

344
00:11:36,720 --> 00:11:38,079
we can see that they're online we can

345
00:11:38,079 --> 00:11:39,600
see which are offline which may have

346
00:11:39,600 --> 00:11:41,360
gone stale

347
00:11:41,360 --> 00:11:43,200
there's a tagging system to organize the

348
00:11:43,200 --> 00:11:45,600
agents and be able to address them

349
00:11:45,600 --> 00:11:46,800
you can see what's running on them in

350
00:11:46,800 --> 00:11:48,880
real time

351
00:11:48,880 --> 00:11:50,880
policy management lists these recipes

352
00:11:50,880 --> 00:11:52,720
again that we care about we're telling

353
00:11:52,720 --> 00:11:55,279
the agents how to analyze the data which

354
00:11:55,279 --> 00:11:57,279
data we're interested in which of these

355
00:11:57,279 --> 00:11:58,560
needles in the haystack that we're

356
00:11:58,560 --> 00:12:01,518
interested in pulling in

357
00:12:01,920 --> 00:12:03,600
syncs let us define our databases that

358
00:12:03,600 --> 00:12:05,680
we want to send to you can define many

359
00:12:05,680 --> 00:12:07,440
syncs you can decide

360
00:12:07,440 --> 00:12:09,519
which data to sync

361
00:12:09,519 --> 00:12:12,079
from which agent so you can have from

362
00:12:12,079 --> 00:12:13,600
the same agent you can send it to two

363
00:12:13,600 --> 00:12:15,200
different databases and do some pipeline

364
00:12:15,200 --> 00:12:17,279
management that way

365
00:12:17,279 --> 00:12:18,639
and then we decide

366
00:12:18,639 --> 00:12:20,720
how to take a policy and send it out to

367
00:12:20,720 --> 00:12:22,399
the different groups of agents and this

368
00:12:22,399 --> 00:12:25,200
happens in real time and

369
00:12:25,200 --> 00:12:26,880
individual agents can run concurrent

370
00:12:26,880 --> 00:12:28,160
policies and we can spin them up and

371
00:12:28,160 --> 00:12:30,880
down at any time

372
00:12:32,880 --> 00:12:34,800
and again the dashboarding piece of it

373
00:12:34,800 --> 00:12:36,320
this is a this is a view of grafana

374
00:12:36,320 --> 00:12:37,920
again where we're watching the results

375
00:12:37,920 --> 00:12:39,360
of the metrics from

376
00:12:39,360 --> 00:12:42,160
uh that we've collected

377
00:12:42,160 --> 00:12:44,480
so that's the control plane side of it

378
00:12:44,480 --> 00:12:46,399
and so the other piece of it is the edge

379
00:12:46,399 --> 00:12:48,639
piece right so what is this tool

380
00:12:48,639 --> 00:12:51,279
that sits at the edge and is doing this

381
00:12:51,279 --> 00:12:54,160
streaming analysis

382
00:12:57,760 --> 00:12:59,680
so this comes from technology that we've

383
00:12:59,680 --> 00:13:02,399
built over the years inside of ns1

384
00:13:02,399 --> 00:13:04,320
called pack advisor

385
00:13:04,320 --> 00:13:07,839
and its goal is to tap into data streams

386
00:13:07,839 --> 00:13:10,079
at the edge right and so originally

387
00:13:10,079 --> 00:13:12,560
um this was focused around capture

388
00:13:12,560 --> 00:13:14,880
uh we were using it on our nodes to

389
00:13:14,880 --> 00:13:16,560
mostly look at the dns traffic but also

390
00:13:16,560 --> 00:13:18,720
help us understand you know the general

391
00:13:18,720 --> 00:13:20,959
network traffic going on

392
00:13:20,959 --> 00:13:23,200
but uh it's it's a

393
00:13:23,200 --> 00:13:25,200
it's a passive system for looking at the

394
00:13:25,200 --> 00:13:28,000
data that's flowing by and uh it's using

395
00:13:28,000 --> 00:13:30,720
these fast streaming algorithms to

396
00:13:30,720 --> 00:13:32,160
analyze deeply

397
00:13:32,160 --> 00:13:33,040
and

398
00:13:33,040 --> 00:13:34,639
as we'll see in a minute

399
00:13:34,639 --> 00:13:37,040
there's the concept of

400
00:13:37,040 --> 00:13:38,639
using packets and so we can do some deep

401
00:13:38,639 --> 00:13:40,480
packet inspection but there's also other

402
00:13:40,480 --> 00:13:41,839
types of information that we can tap

403
00:13:41,839 --> 00:13:43,760
into and use the same concepts of

404
00:13:43,760 --> 00:13:44,880
analysis

405
00:13:44,880 --> 00:13:47,360
and apply to different types of tabs

406
00:13:47,360 --> 00:13:49,680
but the goal is to is to summarize is to

407
00:13:49,680 --> 00:13:51,680
pull out these insights we care about

408
00:13:51,680 --> 00:13:53,519
and kind of leave the leave the raw data

409
00:13:53,519 --> 00:13:55,199
that's not interesting for us right now

410
00:13:55,199 --> 00:13:57,760
pull out those uh those interesting

411
00:13:57,760 --> 00:13:59,040
summaries that we care about and

412
00:13:59,040 --> 00:14:01,600
generate metrics to collect back

413
00:14:01,600 --> 00:14:02,720
and as i mentioned this can be

414
00:14:02,720 --> 00:14:05,680
reprogrammed in real time

415
00:14:05,680 --> 00:14:07,760
finally it's been built to scale up and

416
00:14:07,760 --> 00:14:09,040
scale down

417
00:14:09,040 --> 00:14:11,839
so this edge agent

418
00:14:11,839 --> 00:14:14,079
is meant to be deployed

419
00:14:14,079 --> 00:14:15,600
to handle a lot of traffic and so we can

420
00:14:15,600 --> 00:14:16,720
run it we can kind of scale it

421
00:14:16,720 --> 00:14:19,120
horizontally even on a single node and

422
00:14:19,120 --> 00:14:22,480
we can also scale it down uh and into um

423
00:14:22,480 --> 00:14:24,399
embedded systems right so we've got one

424
00:14:24,399 --> 00:14:25,839
running on a raspberry pi for example

425
00:14:25,839 --> 00:14:27,839
but that also might be um switch or

426
00:14:27,839 --> 00:14:30,480
router or something

427
00:14:30,480 --> 00:14:31,760
it's written in c plus plus if that's

428
00:14:31,760 --> 00:14:33,120
important to anybody but it is meant to

429
00:14:33,120 --> 00:14:35,760
be efficient

430
00:14:35,920 --> 00:14:38,000
so what types of things can we tap into

431
00:14:38,000 --> 00:14:38,959
so

432
00:14:38,959 --> 00:14:40,880
uh i mentioned packet capture is one of

433
00:14:40,880 --> 00:14:42,399
the things that we do

434
00:14:42,399 --> 00:14:45,040
dns tap is another uh standard that we

435
00:14:45,040 --> 00:14:46,480
support and this is supported by a lot

436
00:14:46,480 --> 00:14:49,279
of the big open source dns

437
00:14:49,279 --> 00:14:51,279
servers uh

438
00:14:51,279 --> 00:14:52,560
similar to packet capture but we're

439
00:14:52,560 --> 00:14:55,760
sucking in all of that um those those

440
00:14:55,760 --> 00:14:58,000
the dns information and analyzing that

441
00:14:58,000 --> 00:14:59,279
in real time

442
00:14:59,279 --> 00:15:01,199
and we've recently added flow data so s

443
00:15:01,199 --> 00:15:04,160
flow net flow ipv ipfix

444
00:15:04,160 --> 00:15:07,120
uh and other taps to come and so this

445
00:15:07,120 --> 00:15:09,199
this tap system is built uh to be

446
00:15:09,199 --> 00:15:11,440
modular and to be expandable so we can

447
00:15:11,440 --> 00:15:12,800
have

448
00:15:12,800 --> 00:15:14,800
essentially a plug-in system for it that

449
00:15:14,800 --> 00:15:16,000
lets us

450
00:15:16,000 --> 00:15:19,360
tap into new things in the future

451
00:15:21,440 --> 00:15:22,959
and what kinds of metrics are we

452
00:15:22,959 --> 00:15:25,600
generating right now so it is focused on

453
00:15:25,600 --> 00:15:28,399
the metrics that we've needed at ns1 to

454
00:15:28,399 --> 00:15:30,560
help us operate the networks over time

455
00:15:30,560 --> 00:15:32,160
but again this is something that we're

456
00:15:32,160 --> 00:15:35,279
expanding so there's l2 l3 network

457
00:15:35,279 --> 00:15:37,680
metrics dns dcp

458
00:15:37,680 --> 00:15:39,279
and flows

459
00:15:39,279 --> 00:15:41,360
is what we've focused on so far policy

460
00:15:41,360 --> 00:15:44,160
resource usage is um is another one and

461
00:15:44,160 --> 00:15:46,160
that's because as we start pushing

462
00:15:46,160 --> 00:15:47,519
policies to the edge we do care about

463
00:15:47,519 --> 00:15:48,959
how many resources we're using so we

464
00:15:48,959 --> 00:15:50,480
need to be able to understand

465
00:15:50,480 --> 00:15:52,320
uh you know as we're sending these

466
00:15:52,320 --> 00:15:54,560
dynamic policies how much

467
00:15:54,560 --> 00:15:56,800
of this edge compute resources are we

468
00:15:56,800 --> 00:15:57,759
using

469
00:15:57,759 --> 00:15:59,759
so we generate metrics based on that a

470
00:15:59,759 --> 00:16:01,839
sort of reflection piece

471
00:16:01,839 --> 00:16:04,079
and again this is a this is a plug-in

472
00:16:04,079 --> 00:16:05,600
system and so we'll be expanding these

473
00:16:05,600 --> 00:16:09,079
as we go as well

474
00:16:09,839 --> 00:16:11,920
so here's a diagram of what it looks

475
00:16:11,920 --> 00:16:14,320
like inside of pac advisor

476
00:16:14,320 --> 00:16:16,720
to process the data so essentially we've

477
00:16:16,720 --> 00:16:20,480
got embedded data stream processing

478
00:16:20,480 --> 00:16:22,399
and i know this one's a little busy as

479
00:16:22,399 --> 00:16:23,839
well i'm sorry i'll try to explain it a

480
00:16:23,839 --> 00:16:26,800
bit uh but it's it's trying to to show

481
00:16:26,800 --> 00:16:28,480
the concept that we can open up multiple

482
00:16:28,480 --> 00:16:31,360
inputs on the same agent and handle

483
00:16:31,360 --> 00:16:34,320
multiple policies at once as well and so

484
00:16:34,320 --> 00:16:35,839
what we see here are that we've got

485
00:16:35,839 --> 00:16:38,000
three policies total represented by

486
00:16:38,000 --> 00:16:40,320
these yellow boxes in the middle um but

487
00:16:40,320 --> 00:16:43,199
they're attached to two inputs and so

488
00:16:43,199 --> 00:16:46,079
we've got two two tabs open here one is

489
00:16:46,079 --> 00:16:47,920
on packet capture

490
00:16:47,920 --> 00:16:50,160
and we've set that up to look at eth0 in

491
00:16:50,160 --> 00:16:51,440
this example

492
00:16:51,440 --> 00:16:53,120
and on that same agent we're opening up

493
00:16:53,120 --> 00:16:54,880
another tap which is to look at flow

494
00:16:54,880 --> 00:16:57,040
data right and it's it's bound to a port

495
00:16:57,040 --> 00:16:59,680
there and so both of those are

496
00:16:59,680 --> 00:17:01,440
waiting for data and processing the data

497
00:17:01,440 --> 00:17:03,120
as it comes in

498
00:17:03,120 --> 00:17:05,679
and they were fired up because we'd sent

499
00:17:05,679 --> 00:17:07,839
these policies out and so uh the first

500
00:17:07,839 --> 00:17:11,599
two policies are dns focused and

501
00:17:11,599 --> 00:17:15,039
they both uh attached to the packet

502
00:17:15,039 --> 00:17:17,520
capture input and they have a particular

503
00:17:17,520 --> 00:17:19,280
filter so part of the configuration of a

504
00:17:19,280 --> 00:17:21,359
policy is which filters are we are we

505
00:17:21,359 --> 00:17:22,880
using in in this case we're looking at

506
00:17:22,880 --> 00:17:25,839
port 53 because we're interested in dns

507
00:17:25,839 --> 00:17:27,359
but we have two different policies

508
00:17:27,359 --> 00:17:30,320
hanging off of that and the first one is

509
00:17:30,320 --> 00:17:34,000
uh it's been told to analyze the network

510
00:17:34,000 --> 00:17:35,919
uh so that's going to pull things like

511
00:17:35,919 --> 00:17:38,640
top ips and source ports and again that

512
00:17:38,640 --> 00:17:40,320
l2 l3 layer

513
00:17:40,320 --> 00:17:43,440
and then we also have the dns handler

514
00:17:43,440 --> 00:17:44,880
but the dns handler in particular has

515
00:17:44,880 --> 00:17:46,559
been configured to

516
00:17:46,559 --> 00:17:48,720
only look at dns

517
00:17:48,720 --> 00:17:51,520
packets that are nx domain

518
00:17:51,520 --> 00:17:53,600
right so this particular policy that

519
00:17:53,600 --> 00:17:54,880
we'd sent out

520
00:17:54,880 --> 00:17:56,880
is helping us understand nx domain

521
00:17:56,880 --> 00:17:58,000
traffic

522
00:17:58,000 --> 00:17:58,960
and

523
00:17:58,960 --> 00:18:02,160
the the associated network metrics right

524
00:18:02,160 --> 00:18:04,640
and so that will generate a time series

525
00:18:04,640 --> 00:18:07,039
specific to that policy off to the right

526
00:18:07,039 --> 00:18:08,559
there and so this is it's keeping this

527
00:18:08,559 --> 00:18:09,760
in memory

528
00:18:09,760 --> 00:18:11,840
uh for up to a couple of minutes right

529
00:18:11,840 --> 00:18:13,520
there's no actual local data store it's

530
00:18:13,520 --> 00:18:16,000
not writing to a database it's in memory

531
00:18:16,000 --> 00:18:17,520
and it's the responsibility of the orb

532
00:18:17,520 --> 00:18:19,600
agent to scrape that data out and keep

533
00:18:19,600 --> 00:18:21,600
that pipeline flowing back to our

534
00:18:21,600 --> 00:18:23,679
central location and this information is

535
00:18:23,679 --> 00:18:25,760
available locally for usage too right so

536
00:18:25,760 --> 00:18:27,840
there's a there's actually a local rest

537
00:18:27,840 --> 00:18:29,600
api that you can write automation

538
00:18:29,600 --> 00:18:32,160
against and use this data in real time

539
00:18:32,160 --> 00:18:34,240
directly on the node

540
00:18:34,240 --> 00:18:35,840
but the second policy that we have here

541
00:18:35,840 --> 00:18:37,440
it's also attached to the to the packet

542
00:18:37,440 --> 00:18:41,039
capture and it's generating the same uh

543
00:18:41,039 --> 00:18:43,360
metrics on the dns side because we have

544
00:18:43,360 --> 00:18:44,960
the dns handler here

545
00:18:44,960 --> 00:18:46,640
but across a different dimension because

546
00:18:46,640 --> 00:18:50,160
this filter is on coo.com and so it's

547
00:18:50,160 --> 00:18:51,760
gonna it's gonna

548
00:18:51,760 --> 00:18:53,679
activate a sort of similar dashboard

549
00:18:53,679 --> 00:18:56,080
except it's only gonna be showing top

550
00:18:56,080 --> 00:18:58,400
queue names uh well not the top q as in

551
00:18:58,400 --> 00:18:59,919
this case because we only have one but

552
00:18:59,919 --> 00:19:01,200
you know the ports it's using and the

553
00:19:01,200 --> 00:19:02,640
result codes and things are going to be

554
00:19:02,640 --> 00:19:04,000
focused on this filter we have for

555
00:19:04,000 --> 00:19:05,919
food.com and so we fired up a very

556
00:19:05,919 --> 00:19:08,160
specific policy to help us debug that

557
00:19:08,160 --> 00:19:10,640
and that's going to fire back into uh

558
00:19:10,640 --> 00:19:11,919
and get collected back into the system

559
00:19:11,919 --> 00:19:14,160
as well and then finally the last one

560
00:19:14,160 --> 00:19:15,360
you know while all that's happening

561
00:19:15,360 --> 00:19:17,039
we've also got this flow processor

562
00:19:17,039 --> 00:19:19,360
happening which also has a filter you

563
00:19:19,360 --> 00:19:21,360
know in this example we've focused in on

564
00:19:21,360 --> 00:19:23,200
this one net block and we're processing

565
00:19:23,200 --> 00:19:25,600
flow metrics and generating time series

566
00:19:25,600 --> 00:19:27,120
for that and the idea is that this is

567
00:19:27,120 --> 00:19:28,799
all very dynamic you can spin up these

568
00:19:28,799 --> 00:19:31,679
policies in real time to dig into and

569
00:19:31,679 --> 00:19:33,200
and give you the insights you're looking

570
00:19:33,200 --> 00:19:35,360
for

571
00:19:37,039 --> 00:19:39,039
and just to walk you through the the

572
00:19:39,039 --> 00:19:41,600
viewpoint of pac advisor as it's sort of

573
00:19:41,600 --> 00:19:43,440
flowing across and i'm going again i'm

574
00:19:43,440 --> 00:19:45,200
going to use this this dns use case

575
00:19:45,200 --> 00:19:47,520
analysis but you know from pac advisors

576
00:19:47,520 --> 00:19:49,360
point of view there's you know there's

577
00:19:49,360 --> 00:19:52,240
just this stream of dns streaming across

578
00:19:52,240 --> 00:19:54,400
uh it comes in spikes right there's

579
00:19:54,400 --> 00:19:55,760
there's there's troughs and there's

580
00:19:55,760 --> 00:19:57,760
peaks but there's a lot of information

581
00:19:57,760 --> 00:19:59,280
that's packed into

582
00:19:59,280 --> 00:20:01,360
the data on the wire that um that is

583
00:20:01,360 --> 00:20:03,520
useful for us right as operators and so

584
00:20:03,520 --> 00:20:05,200
again we want to understand what's being

585
00:20:05,200 --> 00:20:06,799
queried what are the results are they

586
00:20:06,799 --> 00:20:08,480
failing what are the you know

587
00:20:08,480 --> 00:20:10,640
percentiles of the timings what's the

588
00:20:10,640 --> 00:20:13,280
cardinality of the ips we're seeing and

589
00:20:13,280 --> 00:20:15,360
a lot of interesting information and so

590
00:20:15,360 --> 00:20:16,960
pac advisor is watching all of these and

591
00:20:16,960 --> 00:20:18,480
it's pulling out that information that

592
00:20:18,480 --> 00:20:20,159
that interesting information we care

593
00:20:20,159 --> 00:20:22,240
about and every minute we get a summary

594
00:20:22,240 --> 00:20:25,039
of what just happened

595
00:20:25,039 --> 00:20:26,480
and we're getting those summaries

596
00:20:26,480 --> 00:20:28,960
regardless of how much traffic is coming

597
00:20:28,960 --> 00:20:32,720
in or not right so if if no traffic is

598
00:20:32,720 --> 00:20:35,600
coming in or very little traffic we're

599
00:20:35,600 --> 00:20:36,880
generating

600
00:20:36,880 --> 00:20:39,280
the same metric series

601
00:20:39,280 --> 00:20:41,520
uh but if if we're under attack and

602
00:20:41,520 --> 00:20:43,520
there's a lot of traffic coming in

603
00:20:43,520 --> 00:20:45,200
we're also generating

604
00:20:45,200 --> 00:20:46,799
the same amount of data right so the

605
00:20:46,799 --> 00:20:48,640
output is not a function of the amount

606
00:20:48,640 --> 00:20:50,480
of input we're seeing which is a really

607
00:20:50,480 --> 00:20:52,400
nice architectural property we're not

608
00:20:52,400 --> 00:20:54,080
putting more pressure on downstream

609
00:20:54,080 --> 00:20:56,320
systems in terms of the collection and

610
00:20:56,320 --> 00:20:57,679
the analysis

611
00:20:57,679 --> 00:21:00,240
uh we're able to operate at that same

612
00:21:00,240 --> 00:21:02,640
steady pace

613
00:21:02,640 --> 00:21:03,760
and again all this information that

614
00:21:03,760 --> 00:21:05,679
we're collecting is available

615
00:21:05,679 --> 00:21:07,440
locally to the node so we can action on

616
00:21:07,440 --> 00:21:09,280
it there and we collect it in and get

617
00:21:09,280 --> 00:21:12,720
that global view as well

618
00:21:14,799 --> 00:21:16,880
so just a couple of tech notes on the

619
00:21:16,880 --> 00:21:18,720
agent itself so it's mostly been

620
00:21:18,720 --> 00:21:21,840
designed to run on linux systems

621
00:21:21,840 --> 00:21:24,880
uh x86 64 and arm as i mentioned we've

622
00:21:24,880 --> 00:21:26,159
gotten it working on like even a

623
00:21:26,159 --> 00:21:28,880
raspberry pi we've started to uh to

624
00:21:28,880 --> 00:21:31,520
experiment with it running directly

625
00:21:31,520 --> 00:21:33,840
um on some routers that support it we

626
00:21:33,840 --> 00:21:36,240
mostly run um docker containers

627
00:21:36,240 --> 00:21:37,280
ourselves

628
00:21:37,280 --> 00:21:39,280
uh but you can run statically linked

629
00:21:39,280 --> 00:21:41,440
binaries like basically we want it to be

630
00:21:41,440 --> 00:21:43,679
very easy to to deploy right this is the

631
00:21:43,679 --> 00:21:44,880
type of thing that's supposed to live

632
00:21:44,880 --> 00:21:46,480
everywhere so it needs to be easy to

633
00:21:46,480 --> 00:21:49,200
deploy and run everywhere

634
00:21:49,200 --> 00:21:51,200
and the agents themselves

635
00:21:51,200 --> 00:21:53,600
connect into the orb control plane over

636
00:21:53,600 --> 00:21:54,960
mqtt

637
00:21:54,960 --> 00:21:58,640
over tls and so all of the metrics and

638
00:21:58,640 --> 00:22:01,039
information telemetry it's sending back

639
00:22:01,039 --> 00:22:03,679
is encrypted and for those of you who

640
00:22:03,679 --> 00:22:06,240
are processing flow data um this might

641
00:22:06,240 --> 00:22:09,440
be an upgrade i think uh it's common to

642
00:22:09,440 --> 00:22:11,600
shoot flow data over the internet sort

643
00:22:11,600 --> 00:22:13,440
of open udp

644
00:22:13,440 --> 00:22:15,280
and if you use this solution you'd be

645
00:22:15,280 --> 00:22:17,280
sending it locally to our agent and we

646
00:22:17,280 --> 00:22:19,360
process it at the edge and then we ship

647
00:22:19,360 --> 00:22:20,320
that back

648
00:22:20,320 --> 00:22:22,960
over tls

649
00:22:22,960 --> 00:22:24,960
i mentioned the control plane so it does

650
00:22:24,960 --> 00:22:26,559
run in kubernetes if you do want to

651
00:22:26,559 --> 00:22:28,640
self-host and there's other ways to run

652
00:22:28,640 --> 00:22:30,480
it right these are the microservices

653
00:22:30,480 --> 00:22:31,840
architecture

654
00:22:31,840 --> 00:22:33,280
if you're familiar with kubernetes we do

655
00:22:33,280 --> 00:22:35,120
have a helm chart available to to help

656
00:22:35,120 --> 00:22:36,320
you do that

657
00:22:36,320 --> 00:22:38,400
if you don't want to sell post you can

658
00:22:38,400 --> 00:22:42,000
try this also at our orb.live sas site

659
00:22:42,000 --> 00:22:43,280
and

660
00:22:43,280 --> 00:22:45,360
the way we sync data today we're focused

661
00:22:45,360 --> 00:22:47,919
on a prometheus as a sort of de facto

662
00:22:47,919 --> 00:22:50,559
standard for a way to push metrics uh

663
00:22:50,559 --> 00:22:52,640
into a time series database

664
00:22:52,640 --> 00:22:55,200
but we've decided to um to go with open

665
00:22:55,200 --> 00:22:57,919
telemetry which is uh which is in

666
00:22:57,919 --> 00:23:00,000
progress some really great work from a

667
00:23:00,000 --> 00:23:01,200
lot of different companies that have

668
00:23:01,200 --> 00:23:02,960
decided on a standard way to represent

669
00:23:02,960 --> 00:23:05,360
metrics and logs and traces and we're

670
00:23:05,360 --> 00:23:07,200
building this into our system

671
00:23:07,200 --> 00:23:09,280
and that's going to allow us to

672
00:23:09,280 --> 00:23:12,000
to to process the data pipelines and to

673
00:23:12,000 --> 00:23:14,480
take advantage of supporting a lot of

674
00:23:14,480 --> 00:23:16,640
different ways to export into

675
00:23:16,640 --> 00:23:20,520
different observability stacks

676
00:23:22,240 --> 00:23:24,320
and we're kind of just beginning so um

677
00:23:24,320 --> 00:23:25,520
you know we've used a lot of this

678
00:23:25,520 --> 00:23:27,600
technology internally at ns1 for quite

679
00:23:27,600 --> 00:23:28,640
some time

680
00:23:28,640 --> 00:23:30,559
uh as i mentioned it's been about a year

681
00:23:30,559 --> 00:23:32,240
and a half of working on orb and putting

682
00:23:32,240 --> 00:23:34,320
all these pieces together and so we're

683
00:23:34,320 --> 00:23:36,799
we're looking for uh use cases and we're

684
00:23:36,799 --> 00:23:39,120
really really interested in um and how

685
00:23:39,120 --> 00:23:40,799
everyone's thinking about observability

686
00:23:40,799 --> 00:23:42,320
and and whether these ideas are

687
00:23:42,320 --> 00:23:43,600
interesting

688
00:23:43,600 --> 00:23:46,080
so we're trying to build our community

689
00:23:46,080 --> 00:23:48,400
we know that there's a lot of different

690
00:23:48,400 --> 00:23:49,679
ways we could be looking at the data

691
00:23:49,679 --> 00:23:51,600
looking at different inputs looking at

692
00:23:51,600 --> 00:23:53,760
different ways to analyze the data

693
00:23:53,760 --> 00:23:55,679
we've definitely thought about

694
00:23:55,679 --> 00:23:57,120
using machine learning in these

695
00:23:57,120 --> 00:23:59,360
pipelines especially at the edge that

696
00:23:59,360 --> 00:24:01,360
could be very interesting things like

697
00:24:01,360 --> 00:24:03,840
anomaly detection and being able to use

698
00:24:03,840 --> 00:24:05,200
that information

699
00:24:05,200 --> 00:24:07,840
uh at the edge to to action on that on

700
00:24:07,840 --> 00:24:10,000
that information

701
00:24:10,000 --> 00:24:11,919
and we might be able to you know i've

702
00:24:11,919 --> 00:24:14,000
talked about small data but there's

703
00:24:14,000 --> 00:24:16,240
nothing to say that we couldn't mix that

704
00:24:16,240 --> 00:24:18,240
with this idea that but sometimes we do

705
00:24:18,240 --> 00:24:19,840
want the highest granularity of things

706
00:24:19,840 --> 00:24:21,679
like maybe we can use the orb

707
00:24:21,679 --> 00:24:24,159
orchestration platform to decide that

708
00:24:24,159 --> 00:24:25,919
across our fleet we actually want to

709
00:24:25,919 --> 00:24:26,799
take

710
00:24:26,799 --> 00:24:28,880
a pcap sample and get that back in

711
00:24:28,880 --> 00:24:30,880
centrally so that we can process it in

712
00:24:30,880 --> 00:24:33,120
some way right an orb

713
00:24:33,120 --> 00:24:35,679
uh aging groups give us the ability to

714
00:24:35,679 --> 00:24:39,279
address our fleet and do things on them

715
00:24:39,279 --> 00:24:40,880
and then you know in the future maybe

716
00:24:40,880 --> 00:24:43,760
there's more interesting ways or ways we

717
00:24:43,760 --> 00:24:45,760
can make it easier to

718
00:24:45,760 --> 00:24:47,039
analyze

719
00:24:47,039 --> 00:24:49,840
domain specific data streams right where

720
00:24:49,840 --> 00:24:51,600
you can write a little program that's

721
00:24:51,600 --> 00:24:52,880
going to process it in some way and

722
00:24:52,880 --> 00:24:54,080
generate the metrics that are very

723
00:24:54,080 --> 00:24:56,080
interesting to you and these are these

724
00:24:56,080 --> 00:24:58,240
are ideas right so

725
00:24:58,240 --> 00:25:00,320
maybe you folks have other ideas as well

726
00:25:00,320 --> 00:25:01,679
and we're certainly interested in

727
00:25:01,679 --> 00:25:04,400
talking about that

728
00:25:05,600 --> 00:25:07,840
so i'm going to wind it up that's um

729
00:25:07,840 --> 00:25:11,039
that's most of it so if you do have uh

730
00:25:11,039 --> 00:25:12,159
you know a couple of things that you

731
00:25:12,159 --> 00:25:14,000
take away from this

732
00:25:14,000 --> 00:25:16,159
orb is an observability tool it's

733
00:25:16,159 --> 00:25:17,520
designed for

734
00:25:17,520 --> 00:25:20,159
distributed edge networks it uses this

735
00:25:20,159 --> 00:25:22,799
small data concept paired with dynamic

736
00:25:22,799 --> 00:25:25,279
policy orchestration the idea is to get

737
00:25:25,279 --> 00:25:27,760
these insights directly at the edge

738
00:25:27,760 --> 00:25:30,159
collect uh collect the needles directly

739
00:25:30,159 --> 00:25:32,240
from the haystack and integrate with

740
00:25:32,240 --> 00:25:34,480
your observability stacks

741
00:25:34,480 --> 00:25:36,159
again it's it's free and open source

742
00:25:36,159 --> 00:25:38,799
software so we hope you try it out

743
00:25:38,799 --> 00:25:40,000
there's a couple of links here we do

744
00:25:40,000 --> 00:25:42,640
have a community site at getorb.io where

745
00:25:42,640 --> 00:25:45,039
you can read a bit more about it

746
00:25:45,039 --> 00:25:47,760
orb.live is this sas site feel free to

747
00:25:47,760 --> 00:25:49,120
sign up for that it only takes a couple

748
00:25:49,120 --> 00:25:51,200
of seconds there's no credit card or

749
00:25:51,200 --> 00:25:54,080
other other color other kind of signup

750
00:25:54,080 --> 00:25:56,320
very light very lightweight

751
00:25:56,320 --> 00:25:58,400
way to try it out

752
00:25:58,400 --> 00:26:00,080
and uh all of our stuff is hosted on

753
00:26:00,080 --> 00:26:01,600
github so feel free to check that out

754
00:26:01,600 --> 00:26:03,200
and give us a star if it's something

755
00:26:03,200 --> 00:26:05,600
you're interested in

756
00:26:05,600 --> 00:26:07,600
and with that i'll wind it up i hope

757
00:26:07,600 --> 00:26:10,799
this was an interesting way to end our

758
00:26:10,799 --> 00:26:12,159
tuesdays

759
00:26:12,159 --> 00:26:13,440
thank you

760
00:26:13,440 --> 00:26:15,440
thank you for your presentation

761
00:26:15,440 --> 00:26:18,640
uh and time again today shannon um we

762
00:26:18,640 --> 00:26:20,080
are out of time for questions but we

763
00:26:20,080 --> 00:26:21,679
might be able to sneak one in if one of

764
00:26:21,679 --> 00:26:22,840
you have

765
00:26:22,840 --> 00:26:25,360
one okay

766
00:26:25,360 --> 00:26:27,200
okay well

767
00:26:27,200 --> 00:26:30,410
thanks very much

768
00:26:30,410 --> 00:26:34,739
[Music]

