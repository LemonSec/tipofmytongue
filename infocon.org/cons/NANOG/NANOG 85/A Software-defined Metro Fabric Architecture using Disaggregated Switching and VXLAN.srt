1
00:00:00,000 --> 00:00:04,560
[Music]

2
00:00:04,560 --> 00:00:06,240
while continuing with our program at

3
00:00:06,240 --> 00:00:07,759
this time we're happy to welcome to the

4
00:00:07,759 --> 00:00:10,960
stage our next presenter

5
00:00:11,440 --> 00:00:13,840
i hope

6
00:00:13,840 --> 00:00:15,519
i would like to introduce marco pesci

7
00:00:15,519 --> 00:00:17,600
presenting a software-defined metro

8
00:00:17,600 --> 00:00:19,760
fabric architecture using disaggregated

9
00:00:19,760 --> 00:00:22,080
switching and vxlan

10
00:00:22,080 --> 00:00:24,560
marco is a global technical architect at

11
00:00:24,560 --> 00:00:26,400
pluribus networks and traveled from san

12
00:00:26,400 --> 00:00:28,640
francisco the san francisco bay area to

13
00:00:28,640 --> 00:00:31,199
join us today this is marco's first time

14
00:00:31,199 --> 00:00:33,040
presenting at nanag and it's a pleasure

15
00:00:33,040 --> 00:00:35,440
to have him speaking today welcome marco

16
00:00:35,440 --> 00:00:38,000
thank you steve

17
00:00:38,000 --> 00:00:39,120
thank you

18
00:00:39,120 --> 00:00:41,680
very excited to be here back on stage

19
00:00:41,680 --> 00:00:43,280
after

20
00:00:43,280 --> 00:00:45,360
quite a few years and

21
00:00:45,360 --> 00:00:47,280
i wanted just to thank you

22
00:00:47,280 --> 00:00:49,600
my mentor melchior

23
00:00:49,600 --> 00:00:53,360
valerie and the nano staff for having me

24
00:00:53,360 --> 00:00:55,760
um so uh

25
00:00:55,760 --> 00:00:58,480
let me just grab this i'm gonna need it

26
00:00:58,480 --> 00:01:01,359
so the title is quite long i try to bid

27
00:01:01,359 --> 00:01:02,719
for the

28
00:01:02,719 --> 00:01:05,280
longest title price at the conference

29
00:01:05,280 --> 00:01:06,080
but

30
00:01:06,080 --> 00:01:09,040
i think i failed and i'm pretty sure

31
00:01:09,040 --> 00:01:11,439
the acronym at the end was probably the

32
00:01:11,439 --> 00:01:13,520
point where i failed

33
00:01:13,520 --> 00:01:15,920
anyway that's fine so what i want to

34
00:01:15,920 --> 00:01:17,680
discuss today is

35
00:01:17,680 --> 00:01:20,240
a technology that actually is native to

36
00:01:20,240 --> 00:01:22,159
data center environment

37
00:01:22,159 --> 00:01:26,320
that uses vxlan and top of rack switches

38
00:01:26,320 --> 00:01:27,840
with sdn

39
00:01:27,840 --> 00:01:30,640
with an sdn controller and how that can

40
00:01:30,640 --> 00:01:33,759
apply to metropolitan transport

41
00:01:33,759 --> 00:01:34,720
and

42
00:01:34,720 --> 00:01:35,600
like

43
00:01:35,600 --> 00:01:39,360
many other stories this starts back in

44
00:01:39,360 --> 00:01:41,920
2016.

45
00:01:41,920 --> 00:01:43,680
in 2016

46
00:01:43,680 --> 00:01:48,560
i met a fellow a mate in in madrid

47
00:01:48,560 --> 00:01:51,439
he started working for this major

48
00:01:51,439 --> 00:01:55,840
company that was um offering data center

49
00:01:55,840 --> 00:01:59,200
space to big to be customers of

50
00:01:59,200 --> 00:02:02,000
big enterprise customers but also telco

51
00:02:02,000 --> 00:02:03,439
operators

52
00:02:03,439 --> 00:02:05,520
in the major cities in

53
00:02:05,520 --> 00:02:09,119
in spain and and portugal and he tells

54
00:02:09,119 --> 00:02:12,239
me well marco i have this new project is

55
00:02:12,239 --> 00:02:14,959
a network architect very very

56
00:02:14,959 --> 00:02:16,080
brilliant

57
00:02:16,080 --> 00:02:18,560
i have this new project um there are

58
00:02:18,560 --> 00:02:21,520
several customers who started asking me

59
00:02:21,520 --> 00:02:24,319
can you guys sell us uh point-to-point

60
00:02:24,319 --> 00:02:26,560
services between cities

61
00:02:26,560 --> 00:02:29,040
to interconnect our data centers

62
00:02:29,040 --> 00:02:32,000
and so i i've been evaluating possible

63
00:02:32,000 --> 00:02:34,640
solutions and the the one that i have

64
00:02:34,640 --> 00:02:36,720
which is mpls based

65
00:02:36,720 --> 00:02:40,000
is is too expensive so the project is

66
00:02:40,000 --> 00:02:42,319
gonna be canned so is there something

67
00:02:42,319 --> 00:02:44,959
you can do since you're working on vxlan

68
00:02:44,959 --> 00:02:47,440
to provide a similar service and i tell

69
00:02:47,440 --> 00:02:50,080
you well actually yeah we we have just

70
00:02:50,080 --> 00:02:52,720
developed a vxlam pseudo wire

71
00:02:52,720 --> 00:02:54,800
and it's the first in the industry i

72
00:02:54,800 --> 00:02:57,440
mean 2016 there was no concept of the

73
00:02:57,440 --> 00:03:00,080
exam pseudo wire yet in in the

74
00:03:00,080 --> 00:03:03,440
preliminary evpn drafts so that's how it

75
00:03:03,440 --> 00:03:04,720
started

76
00:03:04,720 --> 00:03:07,680
and eventually we did the poc

77
00:03:07,680 --> 00:03:09,440
it went very well

78
00:03:09,440 --> 00:03:10,239
and

79
00:03:10,239 --> 00:03:12,159
customers started

80
00:03:12,159 --> 00:03:14,400
buying the solution they liked it very

81
00:03:14,400 --> 00:03:17,519
much and so now we have real madrid we

82
00:03:17,519 --> 00:03:20,720
have customers like vodafone passing and

83
00:03:20,720 --> 00:03:23,680
pls traffic between between cities so

84
00:03:23,680 --> 00:03:25,519
that's how it started

85
00:03:25,519 --> 00:03:29,280
five years later um here to kind of show

86
00:03:29,280 --> 00:03:31,920
you the experience that i had for this

87
00:03:31,920 --> 00:03:34,799
type of project and a little bit about

88
00:03:34,799 --> 00:03:37,360
myself

89
00:03:37,360 --> 00:03:40,080
i have the fortune to work for a company

90
00:03:40,080 --> 00:03:42,080
blurry boost networks that provides an

91
00:03:42,080 --> 00:03:44,799
awesome technology for data center

92
00:03:44,799 --> 00:03:47,519
solution which is about

93
00:03:47,519 --> 00:03:49,760
using a software

94
00:03:49,760 --> 00:03:51,760
network operating system that runs on

95
00:03:51,760 --> 00:03:55,120
commodity switches and has an offer an

96
00:03:55,120 --> 00:03:58,560
sdn abstraction inside the os itself

97
00:03:58,560 --> 00:04:01,680
without using an external controller and

98
00:04:01,680 --> 00:04:03,920
i'm also lucky for the fed the company

99
00:04:03,920 --> 00:04:06,640
is quite small so i can have a dual role

100
00:04:06,640 --> 00:04:08,959
uh so i'm actually leading the technical

101
00:04:08,959 --> 00:04:10,959
field worldwide but i'm also

102
00:04:10,959 --> 00:04:12,640
contributing a lot

103
00:04:12,640 --> 00:04:15,280
uh to the product definition

104
00:04:15,280 --> 00:04:17,199
and working with with our engineering

105
00:04:17,199 --> 00:04:19,279
team to develop the product and how it

106
00:04:19,279 --> 00:04:20,560
evolves

107
00:04:20,560 --> 00:04:23,199
as a background right now i've i've been

108
00:04:23,199 --> 00:04:24,960
focusing a lot on a new technology

109
00:04:24,960 --> 00:04:28,400
called dpu data processing units you can

110
00:04:28,400 --> 00:04:30,240
think about it like a switching

111
00:04:30,240 --> 00:04:33,280
miniature that has a network interface

112
00:04:33,280 --> 00:04:34,960
car form factor

113
00:04:34,960 --> 00:04:37,680
and sits inside your server but has

114
00:04:37,680 --> 00:04:40,960
hardware accelerated network functions

115
00:04:40,960 --> 00:04:44,000
and i've been doing a lot of vxlan-based

116
00:04:44,000 --> 00:04:46,800
solutions for distributed data centers

117
00:04:46,800 --> 00:04:49,199
active active dr solutions

118
00:04:49,199 --> 00:04:52,240
um as an experience i've been with peru

119
00:04:52,240 --> 00:04:55,440
seven years previously almost 20 years

120
00:04:55,440 --> 00:04:58,960
with cisco and and others a lot of

121
00:04:58,960 --> 00:05:00,880
routing and switching

122
00:05:00,880 --> 00:05:03,600
um i always liked and had a little bit

123
00:05:03,600 --> 00:05:06,400
of a passion about being hands-on and

124
00:05:06,400 --> 00:05:07,919
how to

125
00:05:07,919 --> 00:05:10,720
then manage the solution and so

126
00:05:10,720 --> 00:05:12,960
if it was let's say to have an

127
00:05:12,960 --> 00:05:14,160
experience

128
00:05:14,160 --> 00:05:15,919
with for example

129
00:05:15,919 --> 00:05:16,800
um

130
00:05:16,800 --> 00:05:18,560
tl1

131
00:05:18,560 --> 00:05:20,400
which is which is the cli very

132
00:05:20,400 --> 00:05:21,680
structured

133
00:05:21,680 --> 00:05:24,720
but also you know concept like uh

134
00:05:24,720 --> 00:05:27,759
stacking and uh virtual switching or

135
00:05:27,759 --> 00:05:30,080
satellite switches that that's really

136
00:05:30,080 --> 00:05:32,240
what drove my experience uh in

137
00:05:32,240 --> 00:05:35,600
networking in the in the past 25 years

138
00:05:35,600 --> 00:05:38,400
so today for um

139
00:05:38,400 --> 00:05:42,560
for the discussion right so i like to um

140
00:05:42,560 --> 00:05:45,360
kind of evaluate the different and

141
00:05:45,360 --> 00:05:47,600
predominant architecture that are used

142
00:05:47,600 --> 00:05:48,720
today

143
00:05:48,720 --> 00:05:52,160
uh or or that have been evaluating uh

144
00:05:52,160 --> 00:05:55,120
today for metro ethernet transport i

145
00:05:55,120 --> 00:05:59,199
like to focus uh particularly on l2 vpn

146
00:05:59,199 --> 00:06:02,639
services um and and also in terms of

147
00:06:02,639 --> 00:06:03,759
layers

148
00:06:03,759 --> 00:06:06,479
definitely metro metro aggregation but

149
00:06:06,479 --> 00:06:08,960
this principle in theory apply also to

150
00:06:08,960 --> 00:06:11,440
l3 vpn services and other layers in the

151
00:06:11,440 --> 00:06:13,520
network

152
00:06:13,520 --> 00:06:15,280
i'd like to

153
00:06:15,280 --> 00:06:18,639
take a look and show you how

154
00:06:18,639 --> 00:06:20,880
the modernization of data center

155
00:06:20,880 --> 00:06:24,639
technologies can also have applicability

156
00:06:24,639 --> 00:06:26,479
into distributed networks like like

157
00:06:26,479 --> 00:06:28,800
metro ethernet use cases

158
00:06:28,800 --> 00:06:31,759
and particularly i like to

159
00:06:31,759 --> 00:06:34,080
contrast a little bit how the different

160
00:06:34,080 --> 00:06:38,000
technologies differ in terms of scale

161
00:06:38,000 --> 00:06:41,360
both on the operational scale um

162
00:06:41,360 --> 00:06:43,520
and also control plane and and

163
00:06:43,520 --> 00:06:45,919
performance in general

164
00:06:45,919 --> 00:06:48,160
and finally before wrapping up and and

165
00:06:48,160 --> 00:06:50,479
taking your questions i'll be happy to

166
00:06:50,479 --> 00:06:54,240
show you a real world example

167
00:06:55,199 --> 00:06:56,880
okay so um

168
00:06:56,880 --> 00:06:59,919
for l2 vpn uh

169
00:06:59,919 --> 00:07:02,960
meth compliant maf stands for metro

170
00:07:02,960 --> 00:07:05,039
ethernet forum

171
00:07:05,039 --> 00:07:08,000
services the de facto standard the

172
00:07:08,000 --> 00:07:12,160
predominant technology today is vpls

173
00:07:12,160 --> 00:07:15,280
but the recurring questions that most of

174
00:07:15,280 --> 00:07:19,039
you have and a lot of my customer had is

175
00:07:19,039 --> 00:07:22,520
is there a better way is there a better

176
00:07:22,520 --> 00:07:25,680
cost-effective technology

177
00:07:25,680 --> 00:07:29,280
that takes me out for

178
00:07:29,280 --> 00:07:32,240
being obliged to use a very expensive

179
00:07:32,240 --> 00:07:33,440
hardware

180
00:07:33,440 --> 00:07:36,479
and is there a better way we just saw a

181
00:07:36,479 --> 00:07:40,639
presentation earlier to to manage a a

182
00:07:40,639 --> 00:07:43,680
distributed set of nodes that kind of

183
00:07:43,680 --> 00:07:46,400
you know takes down my operational cost

184
00:07:46,400 --> 00:07:48,240
for for the solution

185
00:07:48,240 --> 00:07:51,120
so one of the answers that the industry

186
00:07:51,120 --> 00:07:53,919
has to offer and has been offering for

187
00:07:53,919 --> 00:07:55,120
decades

188
00:07:55,120 --> 00:07:57,840
is uh

189
00:07:57,840 --> 00:08:00,560
layer two fabrics not not just saying q

190
00:08:00,560 --> 00:08:02,879
and q but but others as well and and the

191
00:08:02,879 --> 00:08:04,639
nice thing of this

192
00:08:04,639 --> 00:08:09,280
uh bridge fabric is um the fact that uh

193
00:08:09,280 --> 00:08:11,039
you know historically the being the

194
00:08:11,039 --> 00:08:12,479
first attempt

195
00:08:12,479 --> 00:08:16,240
to use commoditized switching to provide

196
00:08:16,240 --> 00:08:19,520
high gigabit uh performance uh to

197
00:08:19,520 --> 00:08:21,280
distributed networks

198
00:08:21,280 --> 00:08:24,960
any metro ethernet okay q and q but also

199
00:08:24,960 --> 00:08:28,080
for example i have some competitive

200
00:08:28,080 --> 00:08:31,120
information for the asian market south

201
00:08:31,120 --> 00:08:33,360
american market huawei has been using

202
00:08:33,360 --> 00:08:34,640
triple q

203
00:08:34,640 --> 00:08:37,919
in the in the transport network uh most

204
00:08:37,919 --> 00:08:41,039
of you at hopefully a good experience

205
00:08:41,039 --> 00:08:44,399
with brocade vdx which was a trill-based

206
00:08:44,399 --> 00:08:45,440
fabric

207
00:08:45,440 --> 00:08:47,920
so all these experiences different

208
00:08:47,920 --> 00:08:49,360
technologies

209
00:08:49,360 --> 00:08:51,920
had in common the simplicity of the

210
00:08:51,920 --> 00:08:55,440
solution a vlan or a vlan based service

211
00:08:55,440 --> 00:08:58,399
as a concept in a bridge network is

212
00:08:58,399 --> 00:09:02,240
conceptually simple structurally simple

213
00:09:02,240 --> 00:09:04,399
and also from a management perspective

214
00:09:04,399 --> 00:09:06,800
is kind of a plug-in

215
00:09:06,800 --> 00:09:09,120
network where i define

216
00:09:09,120 --> 00:09:10,959
the service i don't think the pointer

217
00:09:10,959 --> 00:09:15,120
work but in in this diagram where i'm

218
00:09:15,120 --> 00:09:17,760
visioning a

219
00:09:17,760 --> 00:09:20,320
a metro ethernet network with three main

220
00:09:20,320 --> 00:09:22,800
sites where i have a customer blue at

221
00:09:22,800 --> 00:09:24,880
these three main sites

222
00:09:24,880 --> 00:09:26,720
asking for a mesh

223
00:09:26,720 --> 00:09:30,959
a vlan service so this type of offer

224
00:09:30,959 --> 00:09:33,440
can be you know either very reasonable

225
00:09:33,440 --> 00:09:36,160
operative cost

226
00:09:36,160 --> 00:09:38,399
can be deployed by just defining the

227
00:09:38,399 --> 00:09:41,600
vlan in one of the sites

228
00:09:41,600 --> 00:09:43,600
and then in the moment i assign this

229
00:09:43,600 --> 00:09:44,720
vlan

230
00:09:44,720 --> 00:09:47,680
uh to each of the three ports in the

231
00:09:47,680 --> 00:09:50,399
three different sites well because this

232
00:09:50,399 --> 00:09:52,560
is a bridge network the vlan gets just

233
00:09:52,560 --> 00:09:54,560
distributed so from

234
00:09:54,560 --> 00:09:58,000
a management perspective the effort is

235
00:09:58,000 --> 00:09:58,959
you know

236
00:09:58,959 --> 00:10:00,720
quite negligible

237
00:10:00,720 --> 00:10:02,800
and so this is really what i like of

238
00:10:02,800 --> 00:10:04,560
this type of architecture

239
00:10:04,560 --> 00:10:06,959
unfortunately

240
00:10:06,959 --> 00:10:08,640
you know a loop

241
00:10:08,640 --> 00:10:11,279
a layer 2 meltdown is the worst

242
00:10:11,279 --> 00:10:14,399
nightmare for a network administrator

243
00:10:14,399 --> 00:10:15,680
and

244
00:10:15,680 --> 00:10:17,120
there's some fragility in the

245
00:10:17,120 --> 00:10:19,279
architecture here

246
00:10:19,279 --> 00:10:21,279
there's also some

247
00:10:21,279 --> 00:10:23,279
issues in managing multipathing

248
00:10:23,279 --> 00:10:24,480
efficiently

249
00:10:24,480 --> 00:10:26,399
for example what i'm representing here

250
00:10:26,399 --> 00:10:28,160
in this picture there are some dotted

251
00:10:28,160 --> 00:10:30,320
lines that represent

252
00:10:30,320 --> 00:10:33,200
hot standby links that are not in use so

253
00:10:33,200 --> 00:10:34,959
these are kind of the challenges that

254
00:10:34,959 --> 00:10:36,399
prevent

255
00:10:36,399 --> 00:10:39,760
um layer two fabrics to kind of grow in

256
00:10:39,760 --> 00:10:42,560
size and and there's also some limits

257
00:10:42,560 --> 00:10:44,959
definitely in the in the scale being

258
00:10:44,959 --> 00:10:46,720
being a vlan technology

259
00:10:46,720 --> 00:10:49,760
but still still a good successful

260
00:10:49,760 --> 00:10:53,360
alternative uh to other technology like

261
00:10:53,360 --> 00:10:56,959
for example ipm pls and definitely ipmp

262
00:10:56,959 --> 00:10:59,839
ls is the

263
00:10:59,839 --> 00:11:02,079
and

264
00:11:02,399 --> 00:11:03,839
one one of the

265
00:11:03,839 --> 00:11:06,640
great things here is uh um you know

266
00:11:06,640 --> 00:11:10,000
bringing a resilient transport uh

267
00:11:10,000 --> 00:11:12,640
with a with a layer three routed network

268
00:11:12,640 --> 00:11:14,800
in in the transport

269
00:11:14,800 --> 00:11:18,000
and so implementing uh you know best

270
00:11:18,000 --> 00:11:20,560
path efficient routing

271
00:11:20,560 --> 00:11:23,600
uh including active active ecmp based

272
00:11:23,600 --> 00:11:26,160
routing so definitely that's uh that's

273
00:11:26,160 --> 00:11:29,319
the advantage

274
00:11:29,519 --> 00:11:33,519
on the let's say minus side we know that

275
00:11:33,519 --> 00:11:35,279
this type of protocols are quite

276
00:11:35,279 --> 00:11:36,880
demanding

277
00:11:36,880 --> 00:11:39,200
uh there's definitely an operational

278
00:11:39,200 --> 00:11:40,640
cost in the plumbing this type of

279
00:11:40,640 --> 00:11:42,880
network but there's also a harder cost

280
00:11:42,880 --> 00:11:45,120
associated with the fact that i need a

281
00:11:45,120 --> 00:11:48,240
router or a

282
00:11:48,240 --> 00:11:50,639
highly performant switch asic like for

283
00:11:50,639 --> 00:11:52,480
example broadcom

284
00:11:52,480 --> 00:11:55,279
camran or jericho families

285
00:11:55,279 --> 00:11:58,320
so is there an alternative to this

286
00:11:58,320 --> 00:12:02,240
and yes vxtan and evpn this is not new

287
00:12:02,240 --> 00:12:05,279
what brings a vxlan

288
00:12:05,279 --> 00:12:07,680
fabric to the picture here

289
00:12:07,680 --> 00:12:10,320
the nice thing of a layer 3 transport so

290
00:12:10,320 --> 00:12:13,680
vxlan is a udp-based protocol

291
00:12:13,680 --> 00:12:15,360
it's very

292
00:12:15,360 --> 00:12:17,040
nice to

293
00:12:17,040 --> 00:12:20,320
firewalls but beyond that the main

294
00:12:20,320 --> 00:12:23,279
interesting part is that it is a light

295
00:12:23,279 --> 00:12:26,560
encapsulation protocol and it's nicely

296
00:12:26,560 --> 00:12:28,160
load balanced so i can have flow

297
00:12:28,160 --> 00:12:32,079
balancing a very efficient per flow

298
00:12:32,079 --> 00:12:36,319
based on the vxlan udp entropy

299
00:12:37,200 --> 00:12:38,959
and definitely you know i can leverage

300
00:12:38,959 --> 00:12:40,240
all the

301
00:12:40,240 --> 00:12:41,360
uh

302
00:12:41,360 --> 00:12:44,399
uh pluses of having a routed transport

303
00:12:44,399 --> 00:12:46,399
in in the core

304
00:12:46,399 --> 00:12:49,600
um the good thing also is when i add a

305
00:12:49,600 --> 00:12:51,440
control plane to the vxlan transport

306
00:12:51,440 --> 00:12:54,639
that is evpn i can really you know refer

307
00:12:54,639 --> 00:12:56,000
to a model where there's a good

308
00:12:56,000 --> 00:12:58,560
separation between an underlay network

309
00:12:58,560 --> 00:13:01,680
which is basically the core transport

310
00:13:01,680 --> 00:13:03,760
and the overlay

311
00:13:03,760 --> 00:13:05,839
network which is where we deploy and we

312
00:13:05,839 --> 00:13:09,120
offer the services to the customers

313
00:13:09,120 --> 00:13:11,440
and that you know kind of gives us

314
00:13:11,440 --> 00:13:14,639
different tools to attack

315
00:13:14,639 --> 00:13:16,480
each of these two

316
00:13:16,480 --> 00:13:19,120
components of the solution with uh with

317
00:13:19,120 --> 00:13:20,959
the best with the best architecture so

318
00:13:20,959 --> 00:13:23,279
for example for the underlay

319
00:13:23,279 --> 00:13:25,120
which is uh the part of the network that

320
00:13:25,120 --> 00:13:28,639
i deploy first is my day one deployment

321
00:13:28,639 --> 00:13:31,120
i can you know depending on the topology

322
00:13:31,120 --> 00:13:35,279
decide where i put my pe vpn

323
00:13:35,279 --> 00:13:38,079
speakers right for this simple topology

324
00:13:38,079 --> 00:13:41,040
for example i can have three speakers

325
00:13:41,040 --> 00:13:43,120
where in the sites where i deploy the

326
00:13:43,120 --> 00:13:46,959
service and i can have three mutual evpn

327
00:13:46,959 --> 00:13:49,279
adjacency so that means that

328
00:13:49,279 --> 00:13:51,920
there are the four routers in the middle

329
00:13:51,920 --> 00:13:53,760
just run

330
00:13:53,760 --> 00:13:57,120
an igp or a bgp protocol so as simple as

331
00:13:57,120 --> 00:13:58,240
that

332
00:13:58,240 --> 00:14:01,279
of course if this topology grows in size

333
00:14:01,279 --> 00:14:04,399
then i can still use vpn to peer up with

334
00:14:04,399 --> 00:14:06,320
the upstream switches

335
00:14:06,320 --> 00:14:08,160
and so kind of limit the number of

336
00:14:08,160 --> 00:14:10,399
adjacency so i have many options like

337
00:14:10,399 --> 00:14:11,760
for any

338
00:14:11,760 --> 00:14:14,480
router design so that's really great and

339
00:14:14,480 --> 00:14:16,639
once the underlay has been designed and

340
00:14:16,639 --> 00:14:20,160
deployed then i can focus uh for my

341
00:14:20,160 --> 00:14:22,079
daily operation just on the overlay

342
00:14:22,079 --> 00:14:24,880
services and i define them at the edge

343
00:14:24,880 --> 00:14:27,839
in every site and then magically thanks

344
00:14:27,839 --> 00:14:31,040
to the evpn control plane vxlan tunnel

345
00:14:31,040 --> 00:14:33,920
are are created side to side for for

346
00:14:33,920 --> 00:14:35,519
each service like for example the blue

347
00:14:35,519 --> 00:14:38,000
service here towards the the customer

348
00:14:38,000 --> 00:14:40,399
sees

349
00:14:41,839 --> 00:14:44,959
this is not new right there's a lot of

350
00:14:44,959 --> 00:14:46,800
literature

351
00:14:46,800 --> 00:14:48,240
for example

352
00:14:48,240 --> 00:14:51,199
richard steenberger i've presented a

353
00:14:51,199 --> 00:14:55,040
paper at nanook in 2018

354
00:14:55,040 --> 00:14:58,800
but also i found a reference in

355
00:14:58,800 --> 00:15:00,880
brazil ix

356
00:15:00,880 --> 00:15:02,639
from a plm

357
00:15:02,639 --> 00:15:04,959
works for extreme

358
00:15:04,959 --> 00:15:08,480
and and the conclusion is vxlan is is a

359
00:15:08,480 --> 00:15:11,120
great tunneling technology it's very

360
00:15:11,120 --> 00:15:14,959
light uh compared to mpls encapsulation

361
00:15:14,959 --> 00:15:16,560
um

362
00:15:16,560 --> 00:15:20,560
it requires some control plane though

363
00:15:20,560 --> 00:15:22,240
and

364
00:15:22,240 --> 00:15:24,639
one alternative could be an sdn

365
00:15:24,639 --> 00:15:27,279
centralized controller approach but the

366
00:15:27,279 --> 00:15:29,839
problem with that it doesn't scale

367
00:15:29,839 --> 00:15:33,600
um and so evpn is a preferred control

368
00:15:33,600 --> 00:15:36,079
plane approach because it scales

369
00:15:36,079 --> 00:15:39,279
uh in terms of network size and and and

370
00:15:39,279 --> 00:15:40,720
multi-tenant

371
00:15:40,720 --> 00:15:43,120
size skate

372
00:15:43,120 --> 00:15:43,920
um

373
00:15:43,920 --> 00:15:46,320
now why

374
00:15:46,320 --> 00:15:49,360
we haven't seen so many deployments or

375
00:15:49,360 --> 00:15:51,440
at least in my experience i don't see a

376
00:15:51,440 --> 00:15:56,240
lot of evpn deployments in in metro

377
00:15:56,240 --> 00:15:57,759
i think one of the reason is the

378
00:15:57,759 --> 00:16:01,839
complexity of the vpn configuration

379
00:16:01,839 --> 00:16:04,639
um so i i talked to many customers who

380
00:16:04,639 --> 00:16:07,680
tell me well actually yeah it's nice but

381
00:16:07,680 --> 00:16:08,800
you know

382
00:16:08,800 --> 00:16:10,079
at the end

383
00:16:10,079 --> 00:16:11,440
for the

384
00:16:11,440 --> 00:16:14,000
l2 vpn i need

385
00:16:14,000 --> 00:16:16,560
mostly our point to point

386
00:16:16,560 --> 00:16:19,680
well i just use static vxl antennas i

387
00:16:19,680 --> 00:16:22,160
don't use vpn at all

388
00:16:22,160 --> 00:16:25,199
others have been looking at

389
00:16:25,199 --> 00:16:27,519
management solutions that work out of

390
00:16:27,519 --> 00:16:29,360
the box

391
00:16:29,360 --> 00:16:31,600
in in a server

392
00:16:31,600 --> 00:16:34,320
there's of course a lot of

393
00:16:34,320 --> 00:16:36,399
home built automation

394
00:16:36,399 --> 00:16:39,360
uh that is necessary to to orchestrate

395
00:16:39,360 --> 00:16:42,480
such a a complex configuration where i

396
00:16:42,480 --> 00:16:43,279
have

397
00:16:43,279 --> 00:16:46,480
for example for ll3 vpn service i i need

398
00:16:46,480 --> 00:16:48,959
about 30 lines of code

399
00:16:48,959 --> 00:16:50,880
per switch which is which is a little

400
00:16:50,880 --> 00:16:52,639
bit too much

401
00:16:52,639 --> 00:16:54,880
um if we look at

402
00:16:54,880 --> 00:16:58,880
this problem a little bit more closely

403
00:16:58,880 --> 00:17:01,199
the problem i need to solve is the fact

404
00:17:01,199 --> 00:17:03,759
that i have to deploy a service in three

405
00:17:03,759 --> 00:17:06,400
sites using evpn

406
00:17:06,400 --> 00:17:08,720
and the configuration in these three

407
00:17:08,720 --> 00:17:11,520
switches or six switches if there's

408
00:17:11,520 --> 00:17:12,959
redundancy

409
00:17:12,959 --> 00:17:15,839
needs to match

410
00:17:16,400 --> 00:17:18,799
and this is not an easy task

411
00:17:18,799 --> 00:17:21,280
um first because there's high code that

412
00:17:21,280 --> 00:17:25,599
needs to be kind of abstracted somehow

413
00:17:25,599 --> 00:17:28,079
but the main problem is the

414
00:17:28,079 --> 00:17:30,400
configuration state of each of these

415
00:17:30,400 --> 00:17:33,600
switches is completely independent

416
00:17:33,600 --> 00:17:35,679
they run on their own

417
00:17:35,679 --> 00:17:38,080
even if i'm using

418
00:17:38,080 --> 00:17:40,160
an orchestration system

419
00:17:40,160 --> 00:17:42,559
that manages individual

420
00:17:42,559 --> 00:17:44,799
each of these switches using ssh

421
00:17:44,799 --> 00:17:46,880
sessions

422
00:17:46,880 --> 00:17:50,000
it's not that a switch is aware that he

423
00:17:50,000 --> 00:17:51,440
has to

424
00:17:51,440 --> 00:17:54,000
speak only to the management system

425
00:17:54,000 --> 00:17:56,559
to the automation

426
00:17:56,559 --> 00:17:59,440
ansible tower etc right so if i'm a

427
00:17:59,440 --> 00:18:02,080
network admin and i'm using the

428
00:18:02,080 --> 00:18:04,000
credential that the automation system is

429
00:18:04,000 --> 00:18:06,880
using i can go on and switch and try out

430
00:18:06,880 --> 00:18:08,880
something maybe a little bit of sandbox

431
00:18:08,880 --> 00:18:09,919
right

432
00:18:09,919 --> 00:18:12,640
and then what happened when

433
00:18:12,640 --> 00:18:15,520
for some reason the same identifiers are

434
00:18:15,520 --> 00:18:19,200
used for a service in production to a

435
00:18:19,200 --> 00:18:20,480
customer

436
00:18:20,480 --> 00:18:23,039
right so either my automation system

437
00:18:23,039 --> 00:18:25,840
fails doesn't know how to roll back

438
00:18:25,840 --> 00:18:27,120
uh it's

439
00:18:27,120 --> 00:18:29,280
very difficult to troubleshoot the

440
00:18:29,280 --> 00:18:31,679
problem or maybe i can you know just

441
00:18:31,679 --> 00:18:33,200
have a silent

442
00:18:33,200 --> 00:18:36,240
go well the service was already there

443
00:18:36,240 --> 00:18:40,000
let's go ahead no alarms no warnings and

444
00:18:40,000 --> 00:18:42,400
then what i end up is well that customer

445
00:18:42,400 --> 00:18:45,280
service no more isolated

446
00:18:45,280 --> 00:18:47,600
so definitely these are the

447
00:18:47,600 --> 00:18:49,120
things that you know

448
00:18:49,120 --> 00:18:51,440
make us scratch our heads how can we

449
00:18:51,440 --> 00:18:52,880
solve this

450
00:18:52,880 --> 00:18:55,760
uh if you allow me to take a further

451
00:18:55,760 --> 00:18:58,960
look at the configuration

452
00:18:58,960 --> 00:19:02,240
the problem also derives from you know

453
00:19:02,240 --> 00:19:05,120
30 plus years of history inside inside

454
00:19:05,120 --> 00:19:07,600
switching and routing code

455
00:19:07,600 --> 00:19:10,480
and all vendors are kind of in the same

456
00:19:10,480 --> 00:19:12,720
situation here right so

457
00:19:12,720 --> 00:19:14,400
we developed

458
00:19:14,400 --> 00:19:17,120
uh different interfaces different

459
00:19:17,120 --> 00:19:18,640
modules that

460
00:19:18,640 --> 00:19:21,200
just got reused when we implemented

461
00:19:21,200 --> 00:19:23,760
vxlan and when we implemented the vpn on

462
00:19:23,760 --> 00:19:25,039
top

463
00:19:25,039 --> 00:19:28,240
so for example if you cannot go through

464
00:19:28,240 --> 00:19:30,480
any vpn config

465
00:19:30,480 --> 00:19:33,120
you may recognize three main blocks of

466
00:19:33,120 --> 00:19:34,960
configuration these are completely

467
00:19:34,960 --> 00:19:37,679
independent structures okay

468
00:19:37,679 --> 00:19:40,160
there's the definition of

469
00:19:40,160 --> 00:19:42,080
the service locally

470
00:19:42,080 --> 00:19:44,960
right the vlan so that i can attribute

471
00:19:44,960 --> 00:19:46,160
these

472
00:19:46,160 --> 00:19:49,520
uh services to physical ports facing dc

473
00:19:49,520 --> 00:19:50,880
site

474
00:19:50,880 --> 00:19:54,240
um i need also to identify the service

475
00:19:54,240 --> 00:19:56,000
in the data plane but towards the

476
00:19:56,000 --> 00:19:57,440
transport side

477
00:19:57,440 --> 00:20:00,320
so i need for example to define a vxlan

478
00:20:00,320 --> 00:20:02,640
dni identifier

479
00:20:02,640 --> 00:20:05,200
in the vxlan realm

480
00:20:05,200 --> 00:20:07,679
um and then there's the evpn control

481
00:20:07,679 --> 00:20:10,799
plane where i need to to define a route

482
00:20:10,799 --> 00:20:12,799
distinguisher i need to import and

483
00:20:12,799 --> 00:20:14,000
export

484
00:20:14,000 --> 00:20:16,000
uh route targets

485
00:20:16,000 --> 00:20:18,480
now some of the vendors have improved

486
00:20:18,480 --> 00:20:21,200
offer some compression of this

487
00:20:21,200 --> 00:20:23,120
configuration but the problem still

488
00:20:23,120 --> 00:20:25,440
exists in the majority so i need to

489
00:20:25,440 --> 00:20:27,520
make these three components

490
00:20:27,520 --> 00:20:29,679
match inside one switch

491
00:20:29,679 --> 00:20:32,240
and i need this configuration state to

492
00:20:32,240 --> 00:20:34,400
match across my entire network so if i

493
00:20:34,400 --> 00:20:36,320
have a mesh service

494
00:20:36,320 --> 00:20:37,280
with

495
00:20:37,280 --> 00:20:40,240
10 nodes then i may end up in in

496
00:20:40,240 --> 00:20:43,200
consuming almost you know hundreds and

497
00:20:43,200 --> 00:20:45,600
hundreds of lines and how can i scale to

498
00:20:45,600 --> 00:20:47,760
thousands of these services

499
00:20:47,760 --> 00:20:49,840
so that's the problem that we have tried

500
00:20:49,840 --> 00:20:51,840
to resolve

501
00:20:51,840 --> 00:20:54,159
let's put some sort of software-defined

502
00:20:54,159 --> 00:20:56,640
abstraction and let's try to run it

503
00:20:56,640 --> 00:20:59,039
inside the switch itself let's try to

504
00:20:59,039 --> 00:21:02,559
rewrite the code so that we can define

505
00:21:02,559 --> 00:21:05,360
an object atomically for an entire

506
00:21:05,360 --> 00:21:08,080
distributed network

507
00:21:08,080 --> 00:21:11,120
so the approach is not the different

508
00:21:11,120 --> 00:21:12,159
from

509
00:21:12,159 --> 00:21:13,840
evpn and

510
00:21:13,840 --> 00:21:16,000
vxlan principle

511
00:21:16,000 --> 00:21:17,760
we still have a distinction between

512
00:21:17,760 --> 00:21:20,640
underlay and overlay

513
00:21:20,640 --> 00:21:23,679
the underlay is a router network you can

514
00:21:23,679 --> 00:21:26,320
use any

515
00:21:26,320 --> 00:21:28,880
router technology you can use ebgp you

516
00:21:28,880 --> 00:21:31,840
can use an igp

517
00:21:32,400 --> 00:21:35,039
and you're completely free to pick up

518
00:21:35,039 --> 00:21:37,919
the design that you want

519
00:21:37,919 --> 00:21:40,559
but then we have

520
00:21:40,559 --> 00:21:41,440
some

521
00:21:41,440 --> 00:21:43,919
interesting application that runs on the

522
00:21:43,919 --> 00:21:47,280
switches at the edge of this topology

523
00:21:47,280 --> 00:21:48,320
that

524
00:21:48,320 --> 00:21:53,360
creates an sdn cluster or an sdn domain

525
00:21:53,360 --> 00:21:56,080
so essentially it's like a federation

526
00:21:56,080 --> 00:21:57,280
it's a

527
00:21:57,280 --> 00:21:59,280
mesh application

528
00:21:59,280 --> 00:22:02,799
that it's based on a mutual peering

529
00:22:02,799 --> 00:22:04,240
across all these switches that

530
00:22:04,240 --> 00:22:06,400
participate in this domain

531
00:22:06,400 --> 00:22:09,440
and it's based on security cv it's a tls

532
00:22:09,440 --> 00:22:14,640
based application okay so that creates a

533
00:22:14,640 --> 00:22:17,600
logical cluster that basically turn

534
00:22:17,600 --> 00:22:20,000
every switch into a line card of a

535
00:22:20,000 --> 00:22:22,400
virtual chassis

536
00:22:22,400 --> 00:22:24,400
and one of the benefits that this

537
00:22:24,400 --> 00:22:27,520
architecture provides is a single point

538
00:22:27,520 --> 00:22:31,200
of management a single point of truth

539
00:22:31,200 --> 00:22:33,840
so that means that when i have to define

540
00:22:33,840 --> 00:22:35,360
my service

541
00:22:35,360 --> 00:22:37,200
for customer blue

542
00:22:37,200 --> 00:22:40,559
my three-way service i define it once

543
00:22:40,559 --> 00:22:43,280
i define it once by connecting to

544
00:22:43,280 --> 00:22:46,000
any of the switches in the topology

545
00:22:46,000 --> 00:22:48,720
using ssh or using a gui

546
00:22:48,720 --> 00:22:49,840
right but

547
00:22:49,840 --> 00:22:51,760
the switch and

548
00:22:51,760 --> 00:22:54,400
the sdn mesh

549
00:22:54,400 --> 00:22:56,240
takes care of bringing that

550
00:22:56,240 --> 00:22:59,120
configuration and committing to all the

551
00:22:59,120 --> 00:23:01,200
switches if something goes wrong on one

552
00:23:01,200 --> 00:23:03,200
of the switches like in the example i

553
00:23:03,200 --> 00:23:04,720
made before

554
00:23:04,720 --> 00:23:06,400
well

555
00:23:06,400 --> 00:23:09,200
that configuration command will fade

556
00:23:09,200 --> 00:23:11,360
so i go back and i check what's what's

557
00:23:11,360 --> 00:23:14,159
wrong but i'm never in a situation where

558
00:23:14,159 --> 00:23:15,280
i have

559
00:23:15,280 --> 00:23:17,120
an inconsistent

560
00:23:17,120 --> 00:23:20,239
provisioning state

561
00:23:20,320 --> 00:23:23,440
so um kind of to summarize what we saw

562
00:23:23,440 --> 00:23:26,720
we saw bgp vpn which is a problem

563
00:23:26,720 --> 00:23:29,760
technology that scales very well

564
00:23:29,760 --> 00:23:32,720
but has some caveats in terms of

565
00:23:32,720 --> 00:23:35,440
management scale

566
00:23:35,440 --> 00:23:39,840
an sdn a centralized controller approach

567
00:23:39,840 --> 00:23:41,200
has been

568
00:23:41,200 --> 00:23:44,080
confirmed by the industry like not being

569
00:23:44,080 --> 00:23:45,760
a good fit

570
00:23:45,760 --> 00:23:48,320
because it lacks the network scalability

571
00:23:48,320 --> 00:23:50,240
that we need to have for a distributed

572
00:23:50,240 --> 00:23:52,720
network solution like this one

573
00:23:52,720 --> 00:23:53,520
so

574
00:23:53,520 --> 00:23:56,720
a distributed sdn approach

575
00:23:56,720 --> 00:23:59,039
that works either in conjunction with

576
00:23:59,039 --> 00:24:03,679
evpn for the forwarding plane

577
00:24:03,679 --> 00:24:07,679
or without vpn with just uh routing is

578
00:24:07,679 --> 00:24:10,640
uh in my opinion this is my test is

579
00:24:10,640 --> 00:24:12,960
the great approach for this type of

580
00:24:12,960 --> 00:24:14,159
networks

581
00:24:14,159 --> 00:24:16,000
at least it provides

582
00:24:16,000 --> 00:24:17,200
a way to

583
00:24:17,200 --> 00:24:19,919
um to have a valid low-cost alternative

584
00:24:19,919 --> 00:24:22,159
to vpls

585
00:24:22,159 --> 00:24:25,120
uh i wanted to spend just two minutes on

586
00:24:25,120 --> 00:24:28,080
because probably distributed controller

587
00:24:28,080 --> 00:24:30,799
versus centralized controller is

588
00:24:30,799 --> 00:24:33,039
a debate that is a little bit new to

589
00:24:33,039 --> 00:24:35,039
this audience so let me just spend two

590
00:24:35,039 --> 00:24:37,600
minutes here and comparing the two so on

591
00:24:37,600 --> 00:24:39,440
the left i have the centralized approach

592
00:24:39,440 --> 00:24:41,760
on the right a distributed controller

593
00:24:41,760 --> 00:24:42,960
approach

594
00:24:42,960 --> 00:24:45,440
the goal is the same so i have a network

595
00:24:45,440 --> 00:24:47,440
here with six

596
00:24:47,440 --> 00:24:50,159
leaves and two spines and i want to

597
00:24:50,159 --> 00:24:53,279
manage it consistently as a single point

598
00:24:53,279 --> 00:24:55,760
of touch

599
00:24:55,760 --> 00:24:58,640
when i use a centralized controller

600
00:24:58,640 --> 00:25:00,880
approach

601
00:25:00,880 --> 00:25:03,679
the domain of the network

602
00:25:03,679 --> 00:25:05,840
includes also the spine includes also

603
00:25:05,840 --> 00:25:07,360
the transport

604
00:25:07,360 --> 00:25:09,440
and when i use a distributor controller

605
00:25:09,440 --> 00:25:11,440
approach the spine are just transport

606
00:25:11,440 --> 00:25:13,760
node could be running

607
00:25:13,760 --> 00:25:14,960
any

608
00:25:14,960 --> 00:25:17,679
routing stack of any vendor

609
00:25:17,679 --> 00:25:19,919
right and and this is kind of a one of

610
00:25:19,919 --> 00:25:21,440
the advantages

611
00:25:21,440 --> 00:25:23,360
that the distributor controller approach

612
00:25:23,360 --> 00:25:24,880
brings in

613
00:25:24,880 --> 00:25:26,000
um

614
00:25:26,000 --> 00:25:28,000
then of course in the distributed

615
00:25:28,000 --> 00:25:29,279
controller

616
00:25:29,279 --> 00:25:31,840
case the controller resides inside the

617
00:25:31,840 --> 00:25:34,559
switch and the control plane scales as

618
00:25:34,559 --> 00:25:36,880
the network grows

619
00:25:36,880 --> 00:25:39,360
in the centralized controller

620
00:25:39,360 --> 00:25:42,000
situation i have a single controller i

621
00:25:42,000 --> 00:25:44,400
need to make sure i have

622
00:25:44,400 --> 00:25:46,720
high availability some clustering

623
00:25:46,720 --> 00:25:49,679
technology there that also allows the

624
00:25:49,679 --> 00:25:52,880
controller to be present

625
00:25:52,880 --> 00:25:55,200
at any site potentially because i may

626
00:25:55,200 --> 00:25:57,279
lose one site and i and i still need the

627
00:25:57,279 --> 00:25:59,200
controller

628
00:25:59,200 --> 00:26:01,520
so definitely these are cost

629
00:26:01,520 --> 00:26:05,039
implications and architecturally

630
00:26:05,039 --> 00:26:06,960
although it may look simple the

631
00:26:06,960 --> 00:26:09,679
centralized controller is not a good fit

632
00:26:09,679 --> 00:26:12,080
for a distributed network so that's kind

633
00:26:12,080 --> 00:26:14,240
of the conclusion and

634
00:26:14,240 --> 00:26:16,400
one last thought

635
00:26:16,400 --> 00:26:17,360
um

636
00:26:17,360 --> 00:26:19,760
data center switching

637
00:26:19,760 --> 00:26:20,640
has

638
00:26:20,640 --> 00:26:22,320
has been

639
00:26:22,320 --> 00:26:25,120
kind of evolving right from

640
00:26:25,120 --> 00:26:27,120
chassis based solution to scale out

641
00:26:27,120 --> 00:26:28,400
solution

642
00:26:28,400 --> 00:26:30,799
um the solutions that are available

643
00:26:30,799 --> 00:26:33,120
today with commoditized top of rack

644
00:26:33,120 --> 00:26:36,000
scale very well in terms of a number of

645
00:26:36,000 --> 00:26:37,679
tenants

646
00:26:37,679 --> 00:26:39,360
and so i don't see why this

647
00:26:39,360 --> 00:26:41,279
transformation can also apply to

648
00:26:41,279 --> 00:26:43,679
distributed networks so i don't see the

649
00:26:43,679 --> 00:26:45,120
need of using

650
00:26:45,120 --> 00:26:47,279
the buffers

651
00:26:47,279 --> 00:26:49,760
or custom silicon

652
00:26:49,760 --> 00:26:52,240
because everything we need is actually

653
00:26:52,240 --> 00:26:54,640
there it's just a matter of applying the

654
00:26:54,640 --> 00:26:56,159
best design practices that we

655
00:26:56,159 --> 00:26:58,880
experienced in data centers

656
00:26:58,880 --> 00:27:01,440
also to distributed networks

657
00:27:01,440 --> 00:27:04,080
and i

658
00:27:04,400 --> 00:27:07,039
at the end of my presentation i

659
00:27:07,039 --> 00:27:09,760
show you just a quick example here of a

660
00:27:09,760 --> 00:27:12,559
real world network i'm

661
00:27:12,559 --> 00:27:16,880
considering here a kind of a hybrid um

662
00:27:16,880 --> 00:27:19,039
service provider that maybe started

663
00:27:19,039 --> 00:27:21,600
offering edge data center services and

664
00:27:21,600 --> 00:27:23,360
specialized

665
00:27:23,360 --> 00:27:25,039
into

666
00:27:25,039 --> 00:27:26,960
some specific application for example

667
00:27:26,960 --> 00:27:29,360
the customer i have in mind here started

668
00:27:29,360 --> 00:27:31,520
working with the film with the movie

669
00:27:31,520 --> 00:27:35,360
industry and specialized in

670
00:27:35,360 --> 00:27:37,440
image processing a lot

671
00:27:37,440 --> 00:27:39,200
and and of course when you start

672
00:27:39,200 --> 00:27:41,600
offering certain services you care about

673
00:27:41,600 --> 00:27:43,919
the performance of the service and the

674
00:27:43,919 --> 00:27:46,640
performance of the service depends

675
00:27:46,640 --> 00:27:50,480
definitely on the connectivity and so

676
00:27:50,480 --> 00:27:52,320
the higher the bandwidth i'm able to

677
00:27:52,320 --> 00:27:54,480
offer the service to the lower the

678
00:27:54,480 --> 00:27:55,760
latency

679
00:27:55,760 --> 00:27:58,320
the more quality the service has and and

680
00:27:58,320 --> 00:28:00,080
the better i can monetize the service

681
00:28:00,080 --> 00:28:01,600
and compete with

682
00:28:01,600 --> 00:28:04,799
with a public cloud for example so

683
00:28:04,799 --> 00:28:07,760
that's kind of the story here um the key

684
00:28:07,760 --> 00:28:09,360
takeaways

685
00:28:09,360 --> 00:28:11,120
are

686
00:28:11,120 --> 00:28:13,840
on the ring on the left right and i'm

687
00:28:13,840 --> 00:28:15,840
using here all

688
00:28:15,840 --> 00:28:19,840
toporak switches that provide 10g to 25g

689
00:28:19,840 --> 00:28:22,240
down to the customer

690
00:28:22,240 --> 00:28:24,919
on the ring on the left i can replace a

691
00:28:24,919 --> 00:28:26,960
g1832 ring

692
00:28:26,960 --> 00:28:29,919
with a routed ring that uses best path

693
00:28:29,919 --> 00:28:32,720
for for routing i can go further than

694
00:28:32,720 --> 00:28:35,600
that if i introduce dwdm

695
00:28:35,600 --> 00:28:38,000
uh i can actually turn a ring into a

696
00:28:38,000 --> 00:28:40,000
logical leaf and spine this has been

697
00:28:40,000 --> 00:28:41,200
proven

698
00:28:41,200 --> 00:28:43,840
there's a lot of literature look for

699
00:28:43,840 --> 00:28:47,279
example at m6 the netherlands internet

700
00:28:47,279 --> 00:28:49,279
exchange company

701
00:28:49,279 --> 00:28:51,760
they uh they wrote a paper about this

702
00:28:51,760 --> 00:28:55,120
also using using pureboost technology

703
00:28:55,120 --> 00:28:57,039
and the bottom line

704
00:28:57,039 --> 00:29:00,320
here is bgp end to end from top to to

705
00:29:00,320 --> 00:29:01,279
bottom

706
00:29:01,279 --> 00:29:03,840
and i can use an sdn domain that

707
00:29:03,840 --> 00:29:05,840
stretches across all the distribution

708
00:29:05,840 --> 00:29:09,200
network and that allows me to define

709
00:29:09,200 --> 00:29:12,080
customer services at one click in one

710
00:29:12,080 --> 00:29:14,320
atomic parish

711
00:29:14,320 --> 00:29:16,240
so that's the conclusion of my

712
00:29:16,240 --> 00:29:18,640
presentation so i'll

713
00:29:18,640 --> 00:29:20,960
steve if you want to

714
00:29:20,960 --> 00:29:23,279
come

715
00:29:24,720 --> 00:29:27,840
for any questions

716
00:29:30,159 --> 00:29:32,000
again folks if you have questions feel

717
00:29:32,000 --> 00:29:34,399
free to use the microphones in the room

718
00:29:34,399 --> 00:29:36,399
uh any folks who are remote or would

719
00:29:36,399 --> 00:29:38,960
like to solicit questions over the chat

720
00:29:38,960 --> 00:29:43,039
interface i'm happy to relay them here

721
00:29:45,279 --> 00:29:46,960
this may be a dumb question because it's

722
00:29:46,960 --> 00:29:49,039
not yeah there are no dumb questions oh

723
00:29:49,039 --> 00:29:50,960
i can i can break that

724
00:29:50,960 --> 00:29:52,240
uh

725
00:29:52,240 --> 00:29:55,120
but when you've got a centralized sdn

726
00:29:55,120 --> 00:29:57,120
control plane you know the controller

727
00:29:57,120 --> 00:29:59,039
touches all the nodes to ensure the

728
00:29:59,039 --> 00:30:01,200
configuration is in sync

729
00:30:01,200 --> 00:30:03,039
if you have a node in a distributed

730
00:30:03,039 --> 00:30:04,799
control plane like this that becomes

731
00:30:04,799 --> 00:30:06,880
isolated yeah um

732
00:30:06,880 --> 00:30:09,840
how does it resume sync with the system

733
00:30:09,840 --> 00:30:10,799
when

734
00:30:10,799 --> 00:30:12,080
right right it would have that

735
00:30:12,080 --> 00:30:13,760
centralized plan right right or how do i

736
00:30:13,760 --> 00:30:16,240
manage split brain situation right so

737
00:30:16,240 --> 00:30:18,880
when a node goes off um

738
00:30:18,880 --> 00:30:21,120
the node has still a configuration that

739
00:30:21,120 --> 00:30:23,440
is local it's just a copy of the entire

740
00:30:23,440 --> 00:30:25,600
fabric configuration

741
00:30:25,600 --> 00:30:27,679
so it has a way even if it becomes

742
00:30:27,679 --> 00:30:30,159
isolated to provide a continue to

743
00:30:30,159 --> 00:30:32,080
provide local services

744
00:30:32,080 --> 00:30:34,159
then from

745
00:30:34,159 --> 00:30:36,080
a management perspective if i lose a

746
00:30:36,080 --> 00:30:39,039
note and it's a temporary situation well

747
00:30:39,039 --> 00:30:42,880
i go and resolve that um if i really

748
00:30:42,880 --> 00:30:45,279
lost for example a switch because of a

749
00:30:45,279 --> 00:30:46,480
major

750
00:30:46,480 --> 00:30:48,640
problem and i need to replace that then

751
00:30:48,640 --> 00:30:50,720
i'm kind of in a situation where i

752
00:30:50,720 --> 00:30:52,399
cannot create

753
00:30:52,399 --> 00:30:54,720
fabric-wide services

754
00:30:54,720 --> 00:30:57,519
because there's no consensus

755
00:30:57,519 --> 00:30:59,360
right from this node that

756
00:30:59,360 --> 00:31:01,360
went offline

757
00:31:01,360 --> 00:31:04,799
so one possibility i can do is i

758
00:31:04,799 --> 00:31:07,200
basically exclude from participating to

759
00:31:07,200 --> 00:31:09,200
the consensus so that allows me to

760
00:31:09,200 --> 00:31:10,799
continue operating the network and

761
00:31:10,799 --> 00:31:14,000
deploy new services and by the time

762
00:31:14,000 --> 00:31:15,840
the switch comes back maybe two days

763
00:31:15,840 --> 00:31:18,720
later i found a spare and i replace it

764
00:31:18,720 --> 00:31:20,960
well at that point the switch comes back

765
00:31:20,960 --> 00:31:24,080
joins back the sdn fabric and well the

766
00:31:24,080 --> 00:31:26,159
switch you know it's very different from

767
00:31:26,159 --> 00:31:28,080
the vpn right the switch has a

768
00:31:28,080 --> 00:31:31,200
conscience that is part of an sdn domain

769
00:31:31,200 --> 00:31:33,919
so we'll just ask for the source of true

770
00:31:33,919 --> 00:31:36,720
so it will ask the other switches in the

771
00:31:36,720 --> 00:31:40,559
fire hey what's the latest configuration

772
00:31:40,559 --> 00:31:42,960
it gets it and comes back up so all

773
00:31:42,960 --> 00:31:45,279
normal so that's that's how we manage it

774
00:31:45,279 --> 00:31:48,399
it works very very well

775
00:31:48,399 --> 00:31:49,279
thanks

776
00:31:49,279 --> 00:31:51,679
any other question

777
00:31:51,679 --> 00:31:54,080
steve remote you're good

778
00:31:54,080 --> 00:31:55,440
as good as i can be then we're good

779
00:31:55,440 --> 00:31:56,480
merci

780
00:31:56,480 --> 00:31:58,559
thank you

781
00:31:58,559 --> 00:32:01,039
thank you marco

782
00:32:01,039 --> 00:32:05,640
thank you for your time appreciate it

783
00:32:05,640 --> 00:32:09,969
[Music]

