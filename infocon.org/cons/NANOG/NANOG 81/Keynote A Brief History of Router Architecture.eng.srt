1
00:00:01,610 --> 00:00:05,520
[Music]

2
00:00:05,520 --> 00:00:06,319
good morning

3
00:00:06,319 --> 00:00:08,480
hi i'm tony lee and we'll be talking

4
00:00:08,480 --> 00:00:10,400
today about a brief history of router

5
00:00:10,400 --> 00:00:11,679
architecture

6
00:00:11,679 --> 00:00:13,920
um mostly this is a tour down memory

7
00:00:13,920 --> 00:00:15,839
lane

8
00:00:15,839 --> 00:00:18,240
i will be dumping on people who messed

9
00:00:18,240 --> 00:00:19,279
on messed up

10
00:00:19,279 --> 00:00:22,880
on the architecture that's everybody

11
00:00:22,880 --> 00:00:26,640
nobody is innocent here so um

12
00:00:26,640 --> 00:00:29,760
everybody is going to get a fair share

13
00:00:29,760 --> 00:00:32,399
i'm not going to name names i'm not out

14
00:00:32,399 --> 00:00:34,000
to

15
00:00:34,000 --> 00:00:36,320
actually hurt anybody i've just been

16
00:00:36,320 --> 00:00:37,440
trying to

17
00:00:37,440 --> 00:00:39,520
point out all the mistakes we made and

18
00:00:39,520 --> 00:00:42,000
all the things we learned

19
00:00:42,000 --> 00:00:44,480
this is also based on my non-ecc

20
00:00:44,480 --> 00:00:46,160
protected neurons

21
00:00:46,160 --> 00:00:48,640
um i have no documentation of all of

22
00:00:48,640 --> 00:00:49,440
this because

23
00:00:49,440 --> 00:00:51,760
at the time it was all under nda and all

24
00:00:51,760 --> 00:00:53,920
that stuff has been burned

25
00:00:53,920 --> 00:00:59,840
so all the errors are mine

26
00:00:59,840 --> 00:01:02,879
so when we started off batters looked

27
00:01:02,879 --> 00:01:03,600
like

28
00:01:03,600 --> 00:01:06,799
computers there was a bus

29
00:01:06,799 --> 00:01:09,840
and a cpu hanging off of it and nick

30
00:01:09,840 --> 00:01:12,320
cards stuck in the bus

31
00:01:12,320 --> 00:01:15,439
and this really sucked packets came in

32
00:01:15,439 --> 00:01:16,479
one nick

33
00:01:16,479 --> 00:01:20,400
went across the bus up through the cpu

34
00:01:20,400 --> 00:01:24,240
into memory then we do a lookup

35
00:01:24,240 --> 00:01:27,040
rewri the output of the packet shove it

36
00:01:27,040 --> 00:01:29,200
back across the bus

37
00:01:29,200 --> 00:01:32,799
and back out a nick every packet is

38
00:01:32,799 --> 00:01:35,680
traversing the bus twice

39
00:01:35,680 --> 00:01:37,200
so you have to have a lot of bus

40
00:01:37,200 --> 00:01:39,119
bandwidth for this

41
00:01:39,119 --> 00:01:43,920
guess what nobody did it sucked

42
00:01:43,920 --> 00:01:46,720
buses and cpus are centralized resources

43
00:01:46,720 --> 00:01:48,159
in this architecture

44
00:01:48,159 --> 00:01:50,880
and they scale linearly you want to

45
00:01:50,880 --> 00:01:52,479
build a bigger box

46
00:01:52,479 --> 00:01:56,079
well you've gotta beef up the bus

47
00:01:56,079 --> 00:01:59,840
and the cpu and because you're

48
00:01:59,840 --> 00:02:01,920
stroking the bus twice you've gotta

49
00:02:01,920 --> 00:02:03,439
double the amount

50
00:02:03,439 --> 00:02:06,960
of the bus what's worse

51
00:02:06,960 --> 00:02:09,758
is as you change the bus speed you have

52
00:02:09,758 --> 00:02:10,720
to change

53
00:02:10,720 --> 00:02:13,840
all of the nicks in the bus all of those

54
00:02:13,840 --> 00:02:14,800
interconnects

55
00:02:14,800 --> 00:02:18,080
are going to be cost you depending on

56
00:02:18,080 --> 00:02:22,480
just how fast the bus is this

57
00:02:22,480 --> 00:02:25,520
does not scale at all so this really

58
00:02:25,520 --> 00:02:26,879
just sucked

59
00:02:26,879 --> 00:02:30,399
and it did not last for long

60
00:02:30,720 --> 00:02:34,080
now unfortunately architectural change

61
00:02:34,080 --> 00:02:35,200
is hard

62
00:02:35,200 --> 00:02:38,080
and risky and when you don't know what

63
00:02:38,080 --> 00:02:40,400
you're doing

64
00:02:40,400 --> 00:02:43,680
you don't make radical changes so

65
00:02:43,680 --> 00:02:46,080
if you don't want to make a radical

66
00:02:46,080 --> 00:02:48,800
change and one bus is not working

67
00:02:48,800 --> 00:02:51,840
how about we add a bus

68
00:02:51,920 --> 00:02:55,920
and we need some more compute power so

69
00:02:55,920 --> 00:02:57,920
cheap compute power comes in the form of

70
00:02:57,920 --> 00:02:59,280
an alu

71
00:02:59,280 --> 00:03:01,120
in this case it was a digital signal

72
00:03:01,120 --> 00:03:03,360
processor and that got stuck

73
00:03:03,360 --> 00:03:08,080
on and a faster bus with new nick cards

74
00:03:08,080 --> 00:03:11,360
but this doesn't change a problem

75
00:03:11,360 --> 00:03:13,519
it gives you more bandwidth that's true

76
00:03:13,519 --> 00:03:15,360
and a few more cycles per packet

77
00:03:15,360 --> 00:03:17,280
but it doesn't really fundamentally

78
00:03:17,280 --> 00:03:19,840
scale things

79
00:03:20,239 --> 00:03:23,120
small constant improvement sure but it's

80
00:03:23,120 --> 00:03:26,560
not an architectural change

81
00:03:28,959 --> 00:03:32,000
then we went off and said well

82
00:03:32,000 --> 00:03:34,560
this ip address lookup is painful what

83
00:03:34,560 --> 00:03:36,080
happens if we make this a little bit

84
00:03:36,080 --> 00:03:36,959
faster

85
00:03:36,959 --> 00:03:40,159
and we stuck an fpga onto

86
00:03:40,159 --> 00:03:43,440
the alu and that let us do hardware

87
00:03:43,440 --> 00:03:46,080
lookups for the first time

88
00:03:46,080 --> 00:03:48,720
and that was better but it didn't help

89
00:03:48,720 --> 00:03:49,760
that much

90
00:03:49,760 --> 00:03:52,480
surprisingly

91
00:03:52,879 --> 00:03:56,239
well okay we can we can do packet

92
00:03:56,239 --> 00:03:58,560
forwarding and hardware and that's good

93
00:03:58,560 --> 00:04:01,280
but we're going to abandon that and

94
00:04:01,280 --> 00:04:02,879
we're going to do something else

95
00:04:02,879 --> 00:04:04,720
but the ip address lookup turns out to

96
00:04:04,720 --> 00:04:06,959
not be the only bottleneck

97
00:04:06,959 --> 00:04:08,959
adding lookup hardware only saved a

98
00:04:08,959 --> 00:04:10,480
little bit of the cpu time

99
00:04:10,480 --> 00:04:12,159
and there were still lots of congestion

100
00:04:12,159 --> 00:04:15,360
just from data handling

101
00:04:15,360 --> 00:04:18,478
the real issue is centralized

102
00:04:18,478 --> 00:04:20,720
we need distributed bandwidth and

103
00:04:20,720 --> 00:04:22,000
processing

104
00:04:22,000 --> 00:04:23,919
if you don't distribute it you're going

105
00:04:23,919 --> 00:04:28,720
to get stuck

106
00:04:28,720 --> 00:04:31,600
and then the web came along the carriers

107
00:04:31,600 --> 00:04:34,080
bought up the nsf net regionals

108
00:04:34,080 --> 00:04:37,680
the real money started to flow we had to

109
00:04:37,680 --> 00:04:40,840
get serious and not play around

110
00:04:40,840 --> 00:04:42,000
everybody and

111
00:04:42,000 --> 00:04:44,560
everybody else wanted to build a router

112
00:04:44,560 --> 00:04:46,800
uh asics became serious

113
00:04:46,800 --> 00:04:49,199
and people started doing interesting

114
00:04:49,199 --> 00:04:50,479
things

115
00:04:50,479 --> 00:04:54,560
we had lots of crazy ideas at that point

116
00:04:54,960 --> 00:04:58,320
we went first to a scheduled crossbar

117
00:04:58,320 --> 00:05:02,479
here we take inputs seen on the bottom

118
00:05:02,479 --> 00:05:05,280
and send packets actually we divide them

119
00:05:05,280 --> 00:05:06,639
up into cells

120
00:05:06,639 --> 00:05:09,759
and then send them to the outputs and we

121
00:05:09,759 --> 00:05:10,479
schedule it

122
00:05:10,479 --> 00:05:12,560
so that we figure out when who's going

123
00:05:12,560 --> 00:05:15,039
to send when

124
00:05:15,039 --> 00:05:17,600
this looks great in theory but the fact

125
00:05:17,600 --> 00:05:19,039
is that internet traffic

126
00:05:19,039 --> 00:05:22,400
is horribly uh irregular

127
00:05:22,400 --> 00:05:25,120
it's even fractal in nature and it's

128
00:05:25,120 --> 00:05:27,680
never going to be as uniform as you like

129
00:05:27,680 --> 00:05:29,759
so the scheduling never works out quite

130
00:05:29,759 --> 00:05:32,160
nicely

131
00:05:34,160 --> 00:05:36,560
worse you can't always drain your output

132
00:05:36,560 --> 00:05:38,000
and drain your inputs

133
00:05:38,000 --> 00:05:40,320
so you end up with head of line blocking

134
00:05:40,320 --> 00:05:42,880
we had systems that had these problems

135
00:05:42,880 --> 00:05:44,160
throughput really suffers when you

136
00:05:44,160 --> 00:05:46,400
happen when that happens

137
00:05:46,400 --> 00:05:48,800
what you really need to do this is the

138
00:05:48,800 --> 00:05:50,400
inputs need a cue per

139
00:05:50,400 --> 00:05:52,000
output and you need to be able to

140
00:05:52,000 --> 00:05:54,720
schedule a cross matrix

141
00:05:54,720 --> 00:05:58,400
of inputs versus outputs and

142
00:05:58,400 --> 00:06:00,560
if you do that that becomes a really big

143
00:06:00,560 --> 00:06:03,199
problem and it doesn't scale

144
00:06:03,199 --> 00:06:06,880
it just sucks

145
00:06:06,880 --> 00:06:08,880
okay here's a crazy one i can't even

146
00:06:08,880 --> 00:06:10,160
draw

147
00:06:10,160 --> 00:06:12,160
what if we arrange our router in a

148
00:06:12,160 --> 00:06:14,560
taurus

149
00:06:14,960 --> 00:06:18,840
well theoretically that looks great it's

150
00:06:18,840 --> 00:06:22,240
consistent but what happens

151
00:06:22,240 --> 00:06:25,280
well it's non-uniform bandwidth

152
00:06:25,280 --> 00:06:28,479
and now our bandwidth can take very

153
00:06:28,479 --> 00:06:30,960
different paths across the torus and you

154
00:06:30,960 --> 00:06:31,759
can end up

155
00:06:31,759 --> 00:06:33,199
having congestion at certain points

156
00:06:33,199 --> 00:06:36,160
around the chorus

157
00:06:36,160 --> 00:06:39,280
if you take out a card you can break the

158
00:06:39,280 --> 00:06:40,160
fabric

159
00:06:40,160 --> 00:06:42,720
and you end up with even less uniform

160
00:06:42,720 --> 00:06:43,520
fabric

161
00:06:43,520 --> 00:06:46,560
so you cause more bandwidth issues

162
00:06:46,560 --> 00:06:48,720
our bandwidth needs to be distributed

163
00:06:48,720 --> 00:06:50,400
and it needs to be uniform

164
00:06:50,400 --> 00:06:53,840
and this is actually a key point

165
00:06:56,479 --> 00:06:58,240
so we went off and we tried something

166
00:06:58,240 --> 00:06:59,919
else

167
00:06:59,919 --> 00:07:02,560
what happens if we have a distributed

168
00:07:02,560 --> 00:07:03,840
cell memory

169
00:07:03,840 --> 00:07:07,440
and a full mesh of interconnectivity

170
00:07:07,440 --> 00:07:09,120
okay this has gotten some nice

171
00:07:09,120 --> 00:07:11,199
properties our bandwidth now

172
00:07:11,199 --> 00:07:14,400
is uniform any packet

173
00:07:14,400 --> 00:07:17,280
gets divided up into cells sprayed

174
00:07:17,280 --> 00:07:17,919
across

175
00:07:17,919 --> 00:07:21,039
all of the various nicks and

176
00:07:21,039 --> 00:07:23,120
then there's even uniform bandwidth

177
00:07:23,120 --> 00:07:25,680
going back out

178
00:07:25,680 --> 00:07:28,639
ah but we've created another problem by

179
00:07:28,639 --> 00:07:31,120
doing this what happens if you lose a

180
00:07:31,120 --> 00:07:33,360
nick

181
00:07:34,560 --> 00:07:36,960
if you hot swap a card out all the

182
00:07:36,960 --> 00:07:37,840
packets

183
00:07:37,840 --> 00:07:39,840
in the system throughout the system are

184
00:07:39,840 --> 00:07:41,120
lost

185
00:07:41,120 --> 00:07:43,440
you've lost cells from everything you

186
00:07:43,440 --> 00:07:45,840
can't reassemble anything so

187
00:07:45,840 --> 00:07:49,120
basically it's restart them on the the

188
00:07:49,120 --> 00:07:52,960
forwarding plane that's not good

189
00:07:52,960 --> 00:07:54,560
we also have a problem because the

190
00:07:54,560 --> 00:07:56,160
bandwidth of the system

191
00:07:56,160 --> 00:07:58,479
is a fixed multiple of the bandwidth of

192
00:07:58,479 --> 00:08:00,800
the card

193
00:08:00,800 --> 00:08:03,520
if i want to build a bigger system i now

194
00:08:03,520 --> 00:08:04,960
have to build different cards and have

195
00:08:04,960 --> 00:08:07,039
more bandwidth

196
00:08:07,039 --> 00:08:09,599
that's still not scalable how do we get

197
00:08:09,599 --> 00:08:13,840
to something scalable

198
00:08:16,319 --> 00:08:18,080
from there we went off and we tried

199
00:08:18,080 --> 00:08:21,199
something very very simple

200
00:08:21,199 --> 00:08:24,800
well what happens if we take all of this

201
00:08:24,800 --> 00:08:28,639
and dump it into one giant memory

202
00:08:28,639 --> 00:08:31,919
okay it's uniform hot swapping nicks

203
00:08:31,919 --> 00:08:34,958
doesn't cause a problem

204
00:08:35,279 --> 00:08:38,839
is this better well it's better in some

205
00:08:38,839 --> 00:08:40,479
senses

206
00:08:40,479 --> 00:08:43,360
we have uniformity things are well

207
00:08:43,360 --> 00:08:44,399
distributed

208
00:08:44,399 --> 00:08:47,680
we don't have queuing problems but

209
00:08:47,680 --> 00:08:50,320
memory bandwidth is somewhat limited we

210
00:08:50,320 --> 00:08:53,440
can only build memories that are so big

211
00:08:53,440 --> 00:08:56,560
and in doing so we end up with

212
00:08:56,560 --> 00:09:00,399
a problem that we still can't scale

213
00:09:00,399 --> 00:09:04,080
so this sucks too

214
00:09:04,080 --> 00:09:06,839
really need to do something very very

215
00:09:06,839 --> 00:09:09,680
different

216
00:09:09,680 --> 00:09:12,800
well again architectural change is hard

217
00:09:12,800 --> 00:09:16,560
and expensive and it took us a long time

218
00:09:16,560 --> 00:09:20,399
but we finally stumbled on listening to

219
00:09:20,399 --> 00:09:23,120
something invented a long time ago by

220
00:09:23,120 --> 00:09:25,519
the telephone network

221
00:09:25,519 --> 00:09:27,680
charles clow who is a researcher in

222
00:09:27,680 --> 00:09:28,880
switching theory

223
00:09:28,880 --> 00:09:31,600
came up with a topology that gave us

224
00:09:31,600 --> 00:09:33,760
something interesting

225
00:09:33,760 --> 00:09:35,839
now he started off doing this with

226
00:09:35,839 --> 00:09:37,600
telephone calls of course

227
00:09:37,600 --> 00:09:40,320
but we can take the same basic ideas and

228
00:09:40,320 --> 00:09:40,959
apply it

229
00:09:40,959 --> 00:09:44,000
and build a clone network

230
00:09:44,000 --> 00:09:46,560
in this you see inputs on the left cell

231
00:09:46,560 --> 00:09:47,360
switches

232
00:09:47,360 --> 00:09:50,320
peppered throughout the fabric and

233
00:09:50,320 --> 00:09:53,200
outputs on the right

234
00:09:53,200 --> 00:09:55,680
why is this good well this is a nice

235
00:09:55,680 --> 00:09:56,720
architecture

236
00:09:56,720 --> 00:09:59,040
because it's very redundant if you lose

237
00:09:59,040 --> 00:09:59,760
anything

238
00:09:59,760 --> 00:10:03,360
there are alternatives okay

239
00:10:03,360 --> 00:10:08,160
and everything is uniform

240
00:10:08,160 --> 00:10:11,279
you can always get from input to output

241
00:10:11,279 --> 00:10:14,480
okay now in practice

242
00:10:14,480 --> 00:10:16,240
our input cards are the same as our

243
00:10:16,240 --> 00:10:18,399
output cards

244
00:10:18,399 --> 00:10:22,640
so if you fold this thing in half

245
00:10:22,640 --> 00:10:25,680
you actually get a simple network

246
00:10:25,680 --> 00:10:28,959
that looks like this this is called a

247
00:10:28,959 --> 00:10:30,880
folded clone effort

248
00:10:30,880 --> 00:10:32,880
and if you turn it sideways and you're

249
00:10:32,880 --> 00:10:35,279
from arista you're gonna call this

250
00:10:35,279 --> 00:10:38,720
the leaf spine architecture

251
00:10:41,760 --> 00:10:45,600
everybody uses this all the time okay

252
00:10:45,600 --> 00:10:48,480
this sucks a lot less okay bandwidth is

253
00:10:48,480 --> 00:10:49,519
distributed

254
00:10:49,519 --> 00:10:52,079
it's uniform it's redundant but our

255
00:10:52,079 --> 00:10:55,360
scalability is still very limited

256
00:10:55,360 --> 00:10:57,839
to avoid problems our inputs need a q

257
00:10:57,839 --> 00:11:01,279
per output that helps

258
00:11:01,279 --> 00:11:04,320
but that means that we can only have a

259
00:11:04,320 --> 00:11:06,240
fixed number of outputs when we design

260
00:11:06,240 --> 00:11:08,880
the system to begin with

261
00:11:08,880 --> 00:11:12,320
that's a limitation on scalability

262
00:11:12,320 --> 00:11:14,240
our cell addressing turns out to be

263
00:11:14,240 --> 00:11:15,680
finite

264
00:11:15,680 --> 00:11:18,640
we have to have address bits in the cell

265
00:11:18,640 --> 00:11:19,519
and that means

266
00:11:19,519 --> 00:11:22,640
that our fabric can only be so big we

267
00:11:22,640 --> 00:11:23,680
have to fix this

268
00:11:23,680 --> 00:11:25,040
when we start designing the fabric

269
00:11:25,040 --> 00:11:26,959
hardware so

270
00:11:26,959 --> 00:11:29,360
we have to make a decision up front very

271
00:11:29,360 --> 00:11:30,560
early on

272
00:11:30,560 --> 00:11:34,640
about how big our fabric is going to be

273
00:11:35,279 --> 00:11:38,399
and unfortunately the cell fabric turns

274
00:11:38,399 --> 00:11:41,519
out to be proprietary

275
00:11:41,519 --> 00:11:44,240
that's a real problem that ends up with

276
00:11:44,240 --> 00:11:46,880
creating all sorts of issues because

277
00:11:46,880 --> 00:11:50,560
we can't change out the solid clamp

278
00:11:51,360 --> 00:11:53,680
technology and upgrades seem to be very

279
00:11:53,680 --> 00:11:56,160
difficult to roll in

280
00:11:56,160 --> 00:11:59,200
okay if you've designed a silicon around

281
00:11:59,200 --> 00:12:02,880
a fabric and you have new silicon

282
00:12:02,880 --> 00:12:05,440
that's going to go say 10 times faster

283
00:12:05,440 --> 00:12:06,000
how does it

284
00:12:06,000 --> 00:12:09,360
interface to older silicon how does it

285
00:12:09,360 --> 00:12:11,440
do so smoothly

286
00:12:11,440 --> 00:12:13,839
and lots and lots of folks have tried

287
00:12:13,839 --> 00:12:14,480
this

288
00:12:14,480 --> 00:12:16,000
and we've never been able to make it

289
00:12:16,000 --> 00:12:18,240
work

290
00:12:20,079 --> 00:12:23,519
the problem ends up being primarily

291
00:12:23,519 --> 00:12:27,120
we end up with lock-in if you do this

292
00:12:27,120 --> 00:12:29,519
you end up with vendor lock-in you buy

293
00:12:29,519 --> 00:12:30,720
one part of the fabric

294
00:12:30,720 --> 00:12:33,680
and you end up using the same chipset

295
00:12:33,680 --> 00:12:35,440
and end up using the same software

296
00:12:35,440 --> 00:12:37,279
vendor or a hardware vendor

297
00:12:37,279 --> 00:12:40,480
and you're stuck you end up using the

298
00:12:40,480 --> 00:12:42,399
same architecture in the same system for

299
00:12:42,399 --> 00:12:45,279
the entire lifetime of the system

300
00:12:45,279 --> 00:12:48,399
that can be a serious problem

301
00:12:48,399 --> 00:12:50,480
some people are working right now to try

302
00:12:50,480 --> 00:12:52,560
to get this opened

303
00:12:52,560 --> 00:12:54,320
and they're trying to stabilize the

304
00:12:54,320 --> 00:12:56,959
standardized on a particular chipset

305
00:12:56,959 --> 00:12:59,040
but that just shifts the problem from

306
00:12:59,040 --> 00:13:00,079
being a

307
00:13:00,079 --> 00:13:03,200
pure hardware vendor problem to an asic

308
00:13:03,200 --> 00:13:05,279
vendor problem

309
00:13:05,279 --> 00:13:07,920
giving the asic vendor a lock-in or the

310
00:13:07,920 --> 00:13:08,399
system

311
00:13:08,399 --> 00:13:10,959
software vendor a lock-in is not an

312
00:13:10,959 --> 00:13:12,480
advantage

313
00:13:12,480 --> 00:13:14,000
you're just moving the problem around

314
00:13:14,000 --> 00:13:16,720
you're not solving

315
00:13:18,320 --> 00:13:21,519
what can you do well we'd like to

316
00:13:21,519 --> 00:13:22,560
propose

317
00:13:22,560 --> 00:13:25,279
the same idea but let's use packet

318
00:13:25,279 --> 00:13:27,040
switches instead

319
00:13:27,040 --> 00:13:30,000
let's use ethernet between the switches

320
00:13:30,000 --> 00:13:31,600
and now this does look

321
00:13:31,600 --> 00:13:34,639
very much like a leaf spine or super

322
00:13:34,639 --> 00:13:36,880
spine architecture

323
00:13:36,880 --> 00:13:39,279
but underneath it it's really a close

324
00:13:39,279 --> 00:13:40,880
topology

325
00:13:40,880 --> 00:13:43,600
because we're using ethernet and we've

326
00:13:43,600 --> 00:13:43,920
got

327
00:13:43,920 --> 00:13:46,720
industry standard links we've got

328
00:13:46,720 --> 00:13:48,880
industry standard switches

329
00:13:48,880 --> 00:13:52,079
we can easily do incremental upgrades

330
00:13:52,079 --> 00:13:55,199
we've got very good inventory

331
00:13:55,199 --> 00:13:57,199
independence

332
00:13:57,199 --> 00:13:59,120
we can do all of this with standard

333
00:13:59,120 --> 00:14:00,959
protocols so we've got pretty good

334
00:14:00,959 --> 00:14:03,519
interoperability

335
00:14:03,519 --> 00:14:06,720
we're packet not cell based so we are

336
00:14:06,720 --> 00:14:07,279
going to need

337
00:14:07,279 --> 00:14:09,680
a little bit of extra bandwidth things

338
00:14:09,680 --> 00:14:11,199
are not going to be as smooth

339
00:14:11,199 --> 00:14:12,959
simply because the atomic level that

340
00:14:12,959 --> 00:14:14,320
we're operating at

341
00:14:14,320 --> 00:14:17,360
is now going to be 1500 bytes not 53 or

342
00:14:17,360 --> 00:14:19,920
64.

343
00:14:20,959 --> 00:14:23,680
the nice part is that our fabric scales

344
00:14:23,680 --> 00:14:26,320
we can add more stages and switches

345
00:14:26,320 --> 00:14:28,720
or we can add more width to our switches

346
00:14:28,720 --> 00:14:30,320
either one works

347
00:14:30,320 --> 00:14:32,880
you can do both depending on what you

348
00:14:32,880 --> 00:14:34,160
need for a particular

349
00:14:34,160 --> 00:14:36,800
architecture

350
00:14:37,760 --> 00:14:39,600
this is the big win this is where i

351
00:14:39,600 --> 00:14:42,839
think we're headed in terms of

352
00:14:42,839 --> 00:14:44,959
architecture

353
00:14:44,959 --> 00:14:46,560
now there's some software issues that we

354
00:14:46,560 --> 00:14:48,720
need to work on

355
00:14:48,720 --> 00:14:50,880
what we really need to do is take that

356
00:14:50,880 --> 00:14:52,079
architecture

357
00:14:52,079 --> 00:14:53,360
and we want to make it look like a

358
00:14:53,360 --> 00:14:55,680
single router

359
00:14:55,680 --> 00:14:57,839
it's got to work on the control and the

360
00:14:57,839 --> 00:15:00,720
management plans

361
00:15:01,360 --> 00:15:04,560
we need some work to do

362
00:15:04,560 --> 00:15:07,360
this we're working on this currently in

363
00:15:07,360 --> 00:15:08,959
the itf

364
00:15:08,959 --> 00:15:11,760
we're trying to improve abstractions in

365
00:15:11,760 --> 00:15:13,360
the igp

366
00:15:13,360 --> 00:15:14,880
we'd like to make our super node look

367
00:15:14,880 --> 00:15:16,800
like a single router and we've got some

368
00:15:16,800 --> 00:15:19,199
protocol changes to do that

369
00:15:19,199 --> 00:15:21,440
we also have to make our super node look

370
00:15:21,440 --> 00:15:22,560
like a single router

371
00:15:22,560 --> 00:15:24,959
from a management plane and we've got a

372
00:15:24,959 --> 00:15:26,720
proxy solution in the works

373
00:15:26,720 --> 00:15:30,000
that'll take us to doing that so

374
00:15:30,000 --> 00:15:32,320
this is where i think we're headed uh we

375
00:15:32,320 --> 00:15:34,399
have to figure out ways to scale

376
00:15:34,399 --> 00:15:36,480
scaling has been the number one problem

377
00:15:36,480 --> 00:15:40,560
we've always had

378
00:15:40,560 --> 00:15:43,279
thank you very much

379
00:15:43,370 --> 00:15:47,700
[Music]

380
00:15:47,759 --> 00:15:50,160
thank you tony that was an excellent

381
00:15:50,160 --> 00:15:52,320
talk we do have some questions for you

382
00:15:52,320 --> 00:15:52,880
in the

383
00:15:52,880 --> 00:15:56,240
q a tab um if you're out there

384
00:15:56,240 --> 00:15:57,839
watching have any questions for tony

385
00:15:57,839 --> 00:15:59,279
please put them in the tab now this is

386
00:15:59,279 --> 00:16:00,560
your chance we can get to the answer

387
00:16:00,560 --> 00:16:01,279
here

388
00:16:01,279 --> 00:16:03,360
um so tony would you prefer to read the

389
00:16:03,360 --> 00:16:04,720
questions yourself or have me read them

390
00:16:04,720 --> 00:16:06,000
to you

391
00:16:06,000 --> 00:16:08,240
uh you can read them steve all right so

392
00:16:08,240 --> 00:16:10,399
um chris winfield asks for the benefit

393
00:16:10,399 --> 00:16:11,360
of those who haven't been in the

394
00:16:11,360 --> 00:16:13,120
business as long as we have

395
00:16:13,120 --> 00:16:14,639
around what time periods did these

396
00:16:14,639 --> 00:16:16,079
various architectures come into

397
00:16:16,079 --> 00:16:18,240
production use

398
00:16:18,240 --> 00:16:20,800
so the original bus architecture started

399
00:16:20,800 --> 00:16:21,759
with the amp

400
00:16:21,759 --> 00:16:24,720
and of course that started around 1969

401
00:16:24,720 --> 00:16:25,120
in

402
00:16:25,120 --> 00:16:29,040
networking usage since then

403
00:16:29,040 --> 00:16:31,360
we started seeing multiple buses i think

404
00:16:31,360 --> 00:16:34,079
around 1990

405
00:16:34,079 --> 00:16:37,519
and then crossbar started showing up

406
00:16:37,519 --> 00:16:40,720
around 1996

407
00:16:40,720 --> 00:16:43,680
and boss network started showing up

408
00:16:43,680 --> 00:16:44,440
around

409
00:16:44,440 --> 00:16:47,440
2003.

410
00:16:47,519 --> 00:16:50,959
okay and a question from matt pitock

411
00:16:50,959 --> 00:16:53,360
um so here we are with almost two

412
00:16:53,360 --> 00:16:55,120
decades across networks and half a

413
00:16:55,120 --> 00:16:57,440
decade of pakistan data centers and

414
00:16:57,440 --> 00:16:58,399
backbones

415
00:16:58,399 --> 00:17:00,079
thoughts on what the next iteration will

416
00:17:00,079 --> 00:17:02,000
be supernode is just a wrapper and isn't

417
00:17:02,000 --> 00:17:05,839
fundamentally different

418
00:17:07,919 --> 00:17:10,640
so i expect cloth networks to continue

419
00:17:10,640 --> 00:17:12,959
to grow for quite some time

420
00:17:12,959 --> 00:17:16,880
mostly because we haven't found anything

421
00:17:16,880 --> 00:17:19,599
the least bit better um we've been

422
00:17:19,599 --> 00:17:20,880
playing with long

423
00:17:20,880 --> 00:17:23,760
lots of things for a long time and uh i

424
00:17:23,760 --> 00:17:25,520
haven't seen any improvements on the

425
00:17:25,520 --> 00:17:28,000
horizon

426
00:17:28,079 --> 00:17:30,400
and dan mcgorian is asking how does the

427
00:17:30,400 --> 00:17:31,760
supernode approach get around

428
00:17:31,760 --> 00:17:33,600
limitations of the consistent

429
00:17:33,600 --> 00:17:36,719
constituent routers

430
00:17:38,240 --> 00:17:40,400
well it gets around redundancy for the

431
00:17:40,400 --> 00:17:41,360
obvious

432
00:17:41,360 --> 00:17:44,640
obvious ways it gets around having to

433
00:17:44,640 --> 00:17:45,200
build

434
00:17:45,200 --> 00:17:47,919
giant single control planes because it's

435
00:17:47,919 --> 00:17:48,320
now

436
00:17:48,320 --> 00:17:50,559
really distributed and loosely coupled

437
00:17:50,559 --> 00:17:53,600
which are really major improvements

438
00:17:53,600 --> 00:17:56,880
and that's those are the major benefits

439
00:17:56,880 --> 00:17:59,280
right there

440
00:17:59,600 --> 00:18:01,600
okay um does anybody else have any

441
00:18:01,600 --> 00:18:05,200
questions while we still have tony

442
00:18:05,200 --> 00:18:07,360
ah here's one blake willis is asking do

443
00:18:07,360 --> 00:18:09,360
you think ethernet's mac header is

444
00:18:09,360 --> 00:18:10,000
required

445
00:18:10,000 --> 00:18:11,840
inside of an ethernet based router

446
00:18:11,840 --> 00:18:13,600
fabric

447
00:18:13,600 --> 00:18:16,880
well clearly it's not necessary we

448
00:18:16,880 --> 00:18:17,280
really

449
00:18:17,280 --> 00:18:19,120
really don't need all of those bits

450
00:18:19,120 --> 00:18:21,120
identifying the node

451
00:18:21,120 --> 00:18:23,679
but on the other hand we very very very

452
00:18:23,679 --> 00:18:25,600
much want to stay standardized

453
00:18:25,600 --> 00:18:29,840
so that should never change

454
00:18:30,000 --> 00:18:32,880
and tony tubber asks what is the trade

455
00:18:32,880 --> 00:18:34,000
what are the trade-offs between

456
00:18:34,000 --> 00:18:34,799
multi-bucks

457
00:18:34,799 --> 00:18:38,080
class and as many are doing and single

458
00:18:38,080 --> 00:18:40,640
box clause as you propose

459
00:18:40,640 --> 00:18:44,400
i'm not proposing a single box close i'm

460
00:18:44,400 --> 00:18:46,320
suggesting that we always build things

461
00:18:46,320 --> 00:18:47,760
with multiple boxes

462
00:18:47,760 --> 00:18:50,960
in a class internally and then wrap

463
00:18:50,960 --> 00:18:51,440
around

464
00:18:51,440 --> 00:18:53,440
wrap software around it to make it look

465
00:18:53,440 --> 00:18:55,200
like a single box

466
00:18:55,200 --> 00:18:57,360
so that we can scale that's the

467
00:18:57,360 --> 00:19:01,280
important part we need the hierarchy

468
00:19:01,760 --> 00:19:04,320
eric osborne is asking what ietf work is

469
00:19:04,320 --> 00:19:06,720
ongoing are you referring to draftly

470
00:19:06,720 --> 00:19:11,840
hierarchical isis

471
00:19:11,840 --> 00:19:15,760
i referred to several drafts that i'm

472
00:19:15,760 --> 00:19:19,120
talking about one of them is dynamic

473
00:19:19,120 --> 00:19:20,080
flooding

474
00:19:20,080 --> 00:19:22,840
that improves flooding inside of dense

475
00:19:22,840 --> 00:19:24,080
networks

476
00:19:24,080 --> 00:19:27,440
another one is isis area proxy

477
00:19:27,440 --> 00:19:30,240
this improves the area mechanism in isis

478
00:19:30,240 --> 00:19:31,760
so that it collapses

479
00:19:31,760 --> 00:19:33,760
entire areas and makes them look like a

480
00:19:33,760 --> 00:19:35,200
single node

481
00:19:35,200 --> 00:19:38,240
and yes the hierarchical isis draft

482
00:19:38,240 --> 00:19:42,320
is also there for additional scale

483
00:19:45,039 --> 00:19:49,440
okay last chance any questions

484
00:19:50,320 --> 00:19:52,720
all right then um that's it uh thank you

485
00:19:52,720 --> 00:19:54,640
very much tony that was a fascinating

486
00:19:54,640 --> 00:19:56,480
look at where we've been and where we're

487
00:19:56,480 --> 00:19:57,840
going um

488
00:19:57,840 --> 00:20:01,360
appreciate you coming here to join us

489
00:20:01,770 --> 00:20:04,840
[Music]

490
00:20:04,840 --> 00:20:08,000
today you

