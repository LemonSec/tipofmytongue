1
00:00:01,610 --> 00:00:05,940
[Music]

2
00:00:06,080 --> 00:00:07,759
the internet's routing system

3
00:00:07,759 --> 00:00:10,480
is notoriously insecure allowing

4
00:00:10,480 --> 00:00:12,160
adversaries to launch attacks that

5
00:00:12,160 --> 00:00:13,599
discard traffic

6
00:00:13,599 --> 00:00:15,440
impersonate a service or perform

7
00:00:15,440 --> 00:00:16,720
eavesdropping

8
00:00:16,720 --> 00:00:18,800
yet a strategic adversary can do so much

9
00:00:18,800 --> 00:00:20,960
more damage by launching application

10
00:00:20,960 --> 00:00:22,640
specific routing attacks

11
00:00:22,640 --> 00:00:24,320
that attack services with security and

12
00:00:24,320 --> 00:00:26,160
privacy concerns of their own

13
00:00:26,160 --> 00:00:28,400
like the tor anonymity system

14
00:00:28,400 --> 00:00:30,000
certificate authorities

15
00:00:30,000 --> 00:00:31,840
and bitcoin so in this talk i'm going to

16
00:00:31,840 --> 00:00:32,800
discuss some of these

17
00:00:32,800 --> 00:00:34,880
application-specific routing attacks

18
00:00:34,880 --> 00:00:36,880
and also application-specific defenses

19
00:00:36,880 --> 00:00:38,640
that can protect against these attacks

20
00:00:38,640 --> 00:00:40,640
while we continue the long-term work of

21
00:00:40,640 --> 00:00:42,000
securing the internet's routing

22
00:00:42,000 --> 00:00:43,440
infrastructure

23
00:00:43,440 --> 00:00:45,600
but first is to refresh our memory about

24
00:00:45,600 --> 00:00:46,879
bgp bgp

25
00:00:46,879 --> 00:00:49,120
is the glue that holds the disparate

26
00:00:49,120 --> 00:00:50,960
parts of the internet together

27
00:00:50,960 --> 00:00:53,360
by allowing an autonomous system to

28
00:00:53,360 --> 00:00:54,960
announce an address block that it can

29
00:00:54,960 --> 00:00:55,520
reach

30
00:00:55,520 --> 00:00:57,120
and allow it to diffuse across the

31
00:00:57,120 --> 00:00:59,039
internet to other parts of the internet

32
00:00:59,039 --> 00:01:00,640
but unfortunately it's vulnerable like

33
00:01:00,640 --> 00:01:02,840
many internet protocols to attack and

34
00:01:02,840 --> 00:01:04,239
misconfiguration

35
00:01:04,239 --> 00:01:06,159
where an autonomous system that is not

36
00:01:06,159 --> 00:01:07,680
authorized to announce a particular

37
00:01:07,680 --> 00:01:09,280
address block does so

38
00:01:09,280 --> 00:01:10,960
and tricks other parts of the internet

39
00:01:10,960 --> 00:01:12,880
to routing to or through

40
00:01:12,880 --> 00:01:15,200
that as so these attacks can affect

41
00:01:15,200 --> 00:01:16,240
availability

42
00:01:16,240 --> 00:01:18,000
if the attacker drops the traffic on the

43
00:01:18,000 --> 00:01:20,080
floor or confidentiality if the

44
00:01:20,080 --> 00:01:20,720
adversary

45
00:01:20,720 --> 00:01:22,720
interposes himself on the path and

46
00:01:22,720 --> 00:01:23,759
eavesdrops on

47
00:01:23,759 --> 00:01:26,159
the communication this is of course not

48
00:01:26,159 --> 00:01:28,159
new information bgp has had security

49
00:01:28,159 --> 00:01:29,520
problems for many years

50
00:01:29,520 --> 00:01:31,439
and there's been lots and lots of work

51
00:01:31,439 --> 00:01:33,280
on trying to improve the security of the

52
00:01:33,280 --> 00:01:34,560
routing system

53
00:01:34,560 --> 00:01:36,560
but deploying these security solutions

54
00:01:36,560 --> 00:01:38,640
is hard and takes place gradually and so

55
00:01:38,640 --> 00:01:39,680
we still see

56
00:01:39,680 --> 00:01:41,119
the routing system having a lot of

57
00:01:41,119 --> 00:01:43,040
vulnerability particularly to strategic

58
00:01:43,040 --> 00:01:44,479
adversaries that are intentionally

59
00:01:44,479 --> 00:01:46,320
introducing attacks

60
00:01:46,320 --> 00:01:48,399
and yet there are a lot of applications

61
00:01:48,399 --> 00:01:50,159
on the internet that provide important

62
00:01:50,159 --> 00:01:51,520
services to users

63
00:01:51,520 --> 00:01:52,880
that have security and privacy

64
00:01:52,880 --> 00:01:54,720
properties that are important as well

65
00:01:54,720 --> 00:01:56,799
things like tor the onion router that

66
00:01:56,799 --> 00:01:59,040
provides anonymity to users browsing the

67
00:01:59,040 --> 00:01:59,600
web

68
00:01:59,600 --> 00:02:01,840
or certificate authorities that give out

69
00:02:01,840 --> 00:02:02,799
certificates for

70
00:02:02,799 --> 00:02:06,560
ssl or bitcoin the crypto currencies

71
00:02:06,560 --> 00:02:09,360
and so these applications are written to

72
00:02:09,360 --> 00:02:11,038
treat the network as a dumb pipe

73
00:02:11,038 --> 00:02:12,319
which is natural this is one of the

74
00:02:12,319 --> 00:02:14,000
great benefits of layering is that we

75
00:02:14,000 --> 00:02:14,480
can

76
00:02:14,480 --> 00:02:16,160
ignore the underlying network layer when

77
00:02:16,160 --> 00:02:18,080
writing higher level applications

78
00:02:18,080 --> 00:02:20,400
but unfortunately bgp doesn't provide

79
00:02:20,400 --> 00:02:21,840
sufficient scaffolding for these

80
00:02:21,840 --> 00:02:22,879
applications

81
00:02:22,879 --> 00:02:25,120
and in fact what we see is that

82
00:02:25,120 --> 00:02:27,040
assumptions made in one layer

83
00:02:27,040 --> 00:02:28,959
about the layer below can lead to

84
00:02:28,959 --> 00:02:30,640
vulnerabilities that can be exploited by

85
00:02:30,640 --> 00:02:31,680
an adversary

86
00:02:31,680 --> 00:02:33,440
to violate the security and privacy

87
00:02:33,440 --> 00:02:36,160
properties these applications assume but

88
00:02:36,160 --> 00:02:37,760
fortunately these attacks are

89
00:02:37,760 --> 00:02:39,680
are very targeted and these applications

90
00:02:39,680 --> 00:02:41,680
are very incentivized to deploy security

91
00:02:41,680 --> 00:02:43,200
solutions of their own and so we'll see

92
00:02:43,200 --> 00:02:43,599
that

93
00:02:43,599 --> 00:02:45,360
although there are powerful attacks that

94
00:02:45,360 --> 00:02:46,879
could be launched on these applications

95
00:02:46,879 --> 00:02:47,840
from below

96
00:02:47,840 --> 00:02:49,680
there are also natural application

97
00:02:49,680 --> 00:02:51,040
specific defenses

98
00:02:51,040 --> 00:02:53,200
that can be deployed to protect against

99
00:02:53,200 --> 00:02:54,080
them

100
00:02:54,080 --> 00:02:55,599
but just to set the stage i'm just going

101
00:02:55,599 --> 00:02:57,280
to go through a little bit of background

102
00:02:57,280 --> 00:02:59,280
on bgp attacks most of this is probably

103
00:02:59,280 --> 00:03:00,720
hat to most of you

104
00:03:00,720 --> 00:03:02,480
but just just to get us all on the same

105
00:03:02,480 --> 00:03:04,000
page you can imagine an

106
00:03:04,000 --> 00:03:05,599
autonomous system six here that's

107
00:03:05,599 --> 00:03:08,319
announcing an address block like 1234

108
00:03:08,319 --> 00:03:10,560
16 all the internet is routing traffic

109
00:03:10,560 --> 00:03:12,720
through it and an adversary on the other

110
00:03:12,720 --> 00:03:14,239
end of the net could announce the same

111
00:03:14,239 --> 00:03:15,360
prefix

112
00:03:15,360 --> 00:03:17,280
and some fraction of the internet is

113
00:03:17,280 --> 00:03:18,480
going to believe this

114
00:03:18,480 --> 00:03:20,159
erroneous route particularly if it's

115
00:03:20,159 --> 00:03:21,840
upstream provider doesn't filter

116
00:03:21,840 --> 00:03:24,640
it and so on average about half of the

117
00:03:24,640 --> 00:03:26,000
internet the part of the internet sort

118
00:03:26,000 --> 00:03:26,319
of

119
00:03:26,319 --> 00:03:28,799
logically closer to the adversary will

120
00:03:28,799 --> 00:03:30,400
be directing traffic through to the

121
00:03:30,400 --> 00:03:32,400
adversary rather than to the legitimate

122
00:03:32,400 --> 00:03:33,599
destination

123
00:03:33,599 --> 00:03:35,280
and the adversary might drop the traffic

124
00:03:35,280 --> 00:03:37,360
on the floor or impersonate

125
00:03:37,360 --> 00:03:39,840
the the legitimate service but

126
00:03:39,840 --> 00:03:41,040
fortunately attacks like this are

127
00:03:41,040 --> 00:03:42,799
relatively easy to detect

128
00:03:42,799 --> 00:03:44,560
because the last hop in the ais path

129
00:03:44,560 --> 00:03:46,480
does not match the one that usually

130
00:03:46,480 --> 00:03:49,280
introduces this prefix into bgp so bgp

131
00:03:49,280 --> 00:03:51,200
anomaly detection systems

132
00:03:51,200 --> 00:03:54,640
or the rpki would detect these kinds of

133
00:03:54,640 --> 00:03:55,200
attacks

134
00:03:55,200 --> 00:03:56,640
as they're gradually more and more

135
00:03:56,640 --> 00:03:58,959
deployed so a smarter adversary would

136
00:03:58,959 --> 00:04:00,239
perhaps go further

137
00:04:00,239 --> 00:04:02,560
and try to evade detection by forging

138
00:04:02,560 --> 00:04:04,400
the last top of the as path

139
00:04:04,400 --> 00:04:06,720
so that it looks like that this as has a

140
00:04:06,720 --> 00:04:08,879
legitimate link to the actual

141
00:04:08,879 --> 00:04:11,360
rightful owner of this address block and

142
00:04:11,360 --> 00:04:13,200
so this path being announced into pgp

143
00:04:13,200 --> 00:04:14,879
will look legitimate because the last

144
00:04:14,879 --> 00:04:15,920
hop

145
00:04:15,920 --> 00:04:18,478
matches the expected one and so it would

146
00:04:18,478 --> 00:04:21,120
fool a lot of bgp anomaly systems and

147
00:04:21,120 --> 00:04:24,800
early uses of rpki now in return some of

148
00:04:24,800 --> 00:04:26,479
the ass and the internet won't pick this

149
00:04:26,479 --> 00:04:28,080
route because it's slightly longer but

150
00:04:28,080 --> 00:04:29,600
the adversary can still

151
00:04:29,600 --> 00:04:31,199
attract a certain fraction of traffic

152
00:04:31,199 --> 00:04:32,479
that's meant for the legitimate

153
00:04:32,479 --> 00:04:34,800
destination to itself

154
00:04:34,800 --> 00:04:37,120
the adversary gets a little smarter it

155
00:04:37,120 --> 00:04:39,040
can more generally sculpt

156
00:04:39,040 --> 00:04:41,280
which asses in the internet pick its

157
00:04:41,280 --> 00:04:43,199
route over the legitimate route to the

158
00:04:43,199 --> 00:04:45,120
destination in particular bgp path

159
00:04:45,120 --> 00:04:46,720
poisoning will allow that

160
00:04:46,720 --> 00:04:48,639
so for example suppose this adversary

161
00:04:48,639 --> 00:04:50,960
doesn't want autonomous system three

162
00:04:50,960 --> 00:04:52,800
to route to it it would rather only

163
00:04:52,800 --> 00:04:54,560
attract traffic from autonomous system

164
00:04:54,560 --> 00:04:55,440
two

165
00:04:55,440 --> 00:04:57,360
then it could put autonomous system 3's

166
00:04:57,360 --> 00:04:58,800
as number in the path

167
00:04:58,800 --> 00:05:00,720
so that upon receiving this route

168
00:05:00,720 --> 00:05:02,400
autonomous system 3 would do loop

169
00:05:02,400 --> 00:05:03,120
detection

170
00:05:03,120 --> 00:05:04,960
and discard the route so it would not

171
00:05:04,960 --> 00:05:06,960
pick that route let alone propagate it

172
00:05:06,960 --> 00:05:08,000
to others

173
00:05:08,000 --> 00:05:09,919
and so this provides a general mechanism

174
00:05:09,919 --> 00:05:12,080
as does the use of bgp communities

175
00:05:12,080 --> 00:05:14,560
for the adversary to determine exactly

176
00:05:14,560 --> 00:05:15,600
who's going to pick

177
00:05:15,600 --> 00:05:18,880
the route that it gets advertised and so

178
00:05:18,880 --> 00:05:20,479
we're particularly interested here in

179
00:05:20,479 --> 00:05:22,240
how a smart adversary might use

180
00:05:22,240 --> 00:05:24,639
these kind of mechanisms to fly under

181
00:05:24,639 --> 00:05:25,759
the radar screen

182
00:05:25,759 --> 00:05:28,160
to announce bogus routes that won't set

183
00:05:28,160 --> 00:05:28,960
off alarms

184
00:05:28,960 --> 00:05:32,080
won't violate our pki and yet will

185
00:05:32,080 --> 00:05:33,919
only trick a small fraction of the

186
00:05:33,919 --> 00:05:35,280
internet exactly the part that the

187
00:05:35,280 --> 00:05:36,479
adversary wants

188
00:05:36,479 --> 00:05:39,759
into routing the runway so in particular

189
00:05:39,759 --> 00:05:41,600
we're interested in attacks that target

190
00:05:41,600 --> 00:05:43,520
a particular center

191
00:05:43,520 --> 00:05:45,600
or or a set of centers of which you need

192
00:05:45,600 --> 00:05:47,520
to fool just one

193
00:05:47,520 --> 00:05:49,520
with limited scope where our goal is

194
00:05:49,520 --> 00:05:52,560
only to have the as necessary to deliver

195
00:05:52,560 --> 00:05:53,520
the traffic

196
00:05:53,520 --> 00:05:54,880
be convinced to route through the

197
00:05:54,880 --> 00:05:57,280
adversary this will limit the visibility

198
00:05:57,280 --> 00:05:59,440
of these attacks in the routing system

199
00:05:59,440 --> 00:06:01,360
helping evade detection and limit the

200
00:06:01,360 --> 00:06:03,039
amount of data traffic that follows the

201
00:06:03,039 --> 00:06:04,479
hijacked path

202
00:06:04,479 --> 00:06:06,160
limiting the overhead on the adversary

203
00:06:06,160 --> 00:06:07,680
to carry that traffic and limiting the

204
00:06:07,680 --> 00:06:09,919
detectability of the attack

205
00:06:09,919 --> 00:06:11,120
and we'll note that some of these

206
00:06:11,120 --> 00:06:12,800
attacks can take place for a very short

207
00:06:12,800 --> 00:06:13,759
period of time

208
00:06:13,759 --> 00:06:15,919
and still be effective again limiting

209
00:06:15,919 --> 00:06:17,680
the overhead for the adversary and

210
00:06:17,680 --> 00:06:19,680
minimizing the chance that it gets

211
00:06:19,680 --> 00:06:20,720
detected

212
00:06:20,720 --> 00:06:22,319
and so kind of attack we mean here is

213
00:06:22,319 --> 00:06:24,720
suppose an adversary now in as4

214
00:06:24,720 --> 00:06:26,479
wants to attract traffic just from

215
00:06:26,479 --> 00:06:27,919
autonomous system one

216
00:06:27,919 --> 00:06:29,199
and doesn't want the rest of the

217
00:06:29,199 --> 00:06:30,960
internet to route to it

218
00:06:30,960 --> 00:06:33,039
then it can do path poisoning to have

219
00:06:33,039 --> 00:06:35,520
the autonomous systems adjacent to the

220
00:06:35,520 --> 00:06:36,479
path as1

221
00:06:36,479 --> 00:06:39,600
takes to reach as4 discard the route

222
00:06:39,600 --> 00:06:42,720
due to loop detection so that the uh

223
00:06:42,720 --> 00:06:44,960
as1 sends traffic through the adversary

224
00:06:44,960 --> 00:06:45,919
but the other as

225
00:06:45,919 --> 00:06:47,680
is continue routing normally to the

226
00:06:47,680 --> 00:06:49,759
correct destination

227
00:06:49,759 --> 00:06:51,280
now why would the adversary want to do

228
00:06:51,280 --> 00:06:52,400
this well we're going to look at one

229
00:06:52,400 --> 00:06:53,919
concrete example related to the

230
00:06:53,919 --> 00:06:55,280
certificate authorities

231
00:06:55,280 --> 00:06:57,599
where the adversary's goal is to have a

232
00:06:57,599 --> 00:06:59,440
particular certificate authority

233
00:06:59,440 --> 00:07:01,520
or any one certificate authority that's

234
00:07:01,520 --> 00:07:03,199
most easily attacked

235
00:07:03,199 --> 00:07:05,520
direct traffic to the adversary instead

236
00:07:05,520 --> 00:07:07,360
of the legitimate destination

237
00:07:07,360 --> 00:07:08,960
and we're going to do that precisely at

238
00:07:08,960 --> 00:07:10,880
the time when the adversary is going to

239
00:07:10,880 --> 00:07:12,319
try to get a certificate

240
00:07:12,319 --> 00:07:15,199
for a website controlled by the victim

241
00:07:15,199 --> 00:07:16,240
this attack now

242
00:07:16,240 --> 00:07:18,319
will have limited scope and lasts for a

243
00:07:18,319 --> 00:07:19,840
limited duration under the control of

244
00:07:19,840 --> 00:07:21,039
the adversary who is the one

245
00:07:21,039 --> 00:07:24,080
asking for the certificate

246
00:07:24,080 --> 00:07:25,919
so just to be a little more concrete if

247
00:07:25,919 --> 00:07:27,440
you're trying to get a certificate for a

248
00:07:27,440 --> 00:07:29,199
website you've just set up a new website

249
00:07:29,199 --> 00:07:31,280
you want to be able to run https

250
00:07:31,280 --> 00:07:33,280
you need to get your certificate signed

251
00:07:33,280 --> 00:07:34,400
and so you'll go

252
00:07:34,400 --> 00:07:36,479
to a certificate authority like let's

253
00:07:36,479 --> 00:07:37,440
encrypt

254
00:07:37,440 --> 00:07:39,120
and you'll say that you would like them

255
00:07:39,120 --> 00:07:40,720
to sign your certificate

256
00:07:40,720 --> 00:07:42,160
now the certificate authority is going

257
00:07:42,160 --> 00:07:43,280
to want to check if you're the

258
00:07:43,280 --> 00:07:44,160
legitimate

259
00:07:44,160 --> 00:07:46,400
owner are you actually in control of the

260
00:07:46,400 --> 00:07:48,080
site the domain

261
00:07:48,080 --> 00:07:50,000
that you're asking about and so it's

262
00:07:50,000 --> 00:07:51,360
going to want to verify that and so it's

263
00:07:51,360 --> 00:07:52,240
going to send back

264
00:07:52,240 --> 00:07:54,560
a domain control validation request it's

265
00:07:54,560 --> 00:07:55,759
going to say hey if you really are in

266
00:07:55,759 --> 00:07:57,199
control of this website

267
00:07:57,199 --> 00:07:59,039
go to it right now at this particular

268
00:07:59,039 --> 00:08:01,360
url and put this content there

269
00:08:01,360 --> 00:08:04,479
and i'm going to check moments later and

270
00:08:04,479 --> 00:08:06,160
you have to essentially prove to me that

271
00:08:06,160 --> 00:08:08,240
you have enough control of this website

272
00:08:08,240 --> 00:08:10,800
to update its contents quickly and then

273
00:08:10,800 --> 00:08:12,240
the result will come back and i'll

274
00:08:12,240 --> 00:08:14,160
verify that yep you're the legitimate

275
00:08:14,160 --> 00:08:16,160
party in charge of this site

276
00:08:16,160 --> 00:08:17,759
i'll sign your certificate and you're on

277
00:08:17,759 --> 00:08:19,360
your merry way

278
00:08:19,360 --> 00:08:20,879
and that's how it works normally but an

279
00:08:20,879 --> 00:08:23,120
adversary might choose this precise

280
00:08:23,120 --> 00:08:23,680
moment

281
00:08:23,680 --> 00:08:26,560
to launch a hijack so that the domain

282
00:08:26,560 --> 00:08:28,080
validation request

283
00:08:28,080 --> 00:08:30,000
comes to the adversary rather than the

284
00:08:30,000 --> 00:08:31,759
legitimate website

285
00:08:31,759 --> 00:08:33,440
where the adversary can now produce the

286
00:08:33,440 --> 00:08:35,039
intended response

287
00:08:35,039 --> 00:08:36,958
fooling the certificate authority into

288
00:08:36,958 --> 00:08:38,479
giving out a certificate to the wrong

289
00:08:38,479 --> 00:08:39,679
party

290
00:08:39,679 --> 00:08:41,679
with this certificate in hand now the

291
00:08:41,679 --> 00:08:43,279
adversary can launch man and a

292
00:08:43,279 --> 00:08:45,839
man in the middle attacks on https

293
00:08:45,839 --> 00:08:46,480
traffic

294
00:08:46,480 --> 00:08:49,120
destined to that victim domain so that's

295
00:08:49,120 --> 00:08:50,560
the kind of attack we're worried about

296
00:08:50,560 --> 00:08:52,800
where the adversary just needs to fool

297
00:08:52,800 --> 00:08:54,480
the certificate authority into riding to

298
00:08:54,480 --> 00:08:56,000
the wrong place and just briefly at a

299
00:08:56,000 --> 00:08:58,800
time of the adversary's choosing

300
00:08:58,800 --> 00:09:02,000
so with a few years ago we worked on

301
00:09:02,000 --> 00:09:03,600
identifying this attack and then

302
00:09:03,600 --> 00:09:05,040
demonstrating it in the wild

303
00:09:05,040 --> 00:09:07,600
using the purine testbed at columbia so

304
00:09:07,600 --> 00:09:09,680
we took an ip prefix that we controlled

305
00:09:09,680 --> 00:09:10,880
through that testbed

306
00:09:10,880 --> 00:09:13,200
domain names that we created and clients

307
00:09:13,200 --> 00:09:14,000
that we ran

308
00:09:14,000 --> 00:09:15,680
so we wouldn't actually affect any real

309
00:09:15,680 --> 00:09:17,120
traffic on the internet

310
00:09:17,120 --> 00:09:19,200
and we did this attack where we hijacked

311
00:09:19,200 --> 00:09:20,160
ourselves

312
00:09:20,160 --> 00:09:22,000
and asked for a web certificate during

313
00:09:22,000 --> 00:09:23,680
that narrow window of time

314
00:09:23,680 --> 00:09:25,519
and we did this attack on on the the

315
00:09:25,519 --> 00:09:27,519
five main certificate authorities

316
00:09:27,519 --> 00:09:28,959
uh that all do domain controlled

317
00:09:28,959 --> 00:09:30,640
validation either

318
00:09:30,640 --> 00:09:33,040
of http like i showed a moment ago or

319
00:09:33,040 --> 00:09:34,080
using the

320
00:09:34,080 --> 00:09:36,720
email server of the domain all five of

321
00:09:36,720 --> 00:09:38,399
these cas signed our certificate

322
00:09:38,399 --> 00:09:39,920
request in less than two minutes and we

323
00:09:39,920 --> 00:09:42,240
are good to go with bogus certificates

324
00:09:42,240 --> 00:09:45,600
uh in under two minutes so so what

325
00:09:45,600 --> 00:09:47,200
should we do about this is clearly a

326
00:09:47,200 --> 00:09:48,880
vulnerability in a protocol

327
00:09:48,880 --> 00:09:50,720
that exists to create security on the

328
00:09:50,720 --> 00:09:52,000
internet

329
00:09:52,000 --> 00:09:54,560
and so i want to note also although i'm

330
00:09:54,560 --> 00:09:55,200
going to focus

331
00:09:55,200 --> 00:09:57,279
mainly on domain validation requests

332
00:09:57,279 --> 00:09:58,800
sent to the websites

333
00:09:58,800 --> 00:10:01,040
you could also imagine hijacks of the

334
00:10:01,040 --> 00:10:03,279
dams server of the domain or the meal

335
00:10:03,279 --> 00:10:04,640
circular of the domain

336
00:10:04,640 --> 00:10:06,640
and you can also imagine hijacks on the

337
00:10:06,640 --> 00:10:08,000
reverse traffic

338
00:10:08,000 --> 00:10:10,720
from the domain the legitimate domain to

339
00:10:10,720 --> 00:10:12,160
the certificate authority where the

340
00:10:12,160 --> 00:10:13,040
adversary can

341
00:10:13,040 --> 00:10:15,680
interpose itself as well but we'll focus

342
00:10:15,680 --> 00:10:16,880
mainly on the case

343
00:10:16,880 --> 00:10:19,120
where the adversary is trying to stop

344
00:10:19,120 --> 00:10:21,200
the legitimate domain from receiving the

345
00:10:21,200 --> 00:10:22,800
validation request so that a

346
00:10:22,800 --> 00:10:25,839
erroneous response can be generated so

347
00:10:25,839 --> 00:10:27,360
what can you do about this well

348
00:10:27,360 --> 00:10:30,079
one possible application layer defenses

349
00:10:30,079 --> 00:10:32,079
is pretty simple and

350
00:10:32,079 --> 00:10:33,360
before i get to that though i just want

351
00:10:33,360 --> 00:10:35,200
to mention one more thing which is

352
00:10:35,200 --> 00:10:37,360
attacking any one certificate authority

353
00:10:37,360 --> 00:10:38,720
is already a risk

354
00:10:38,720 --> 00:10:40,880
but there's an additional risk here that

355
00:10:40,880 --> 00:10:42,560
there are actually around 100 different

356
00:10:42,560 --> 00:10:44,399
certificate authorities and any one of

357
00:10:44,399 --> 00:10:45,040
them

358
00:10:45,040 --> 00:10:47,279
can sign a certificate request for a

359
00:10:47,279 --> 00:10:48,160
domain

360
00:10:48,160 --> 00:10:50,079
and so an adversary has the option to

361
00:10:50,079 --> 00:10:51,680
choose not only the victim

362
00:10:51,680 --> 00:10:53,760
but which certificate authority to try

363
00:10:53,760 --> 00:10:54,720
to fool

364
00:10:54,720 --> 00:10:56,320
and so in this picture a certificate

365
00:10:56,320 --> 00:10:57,839
authority one

366
00:10:57,839 --> 00:10:59,440
is relatively close to the victim and

367
00:10:59,440 --> 00:11:01,120
it'd be quite hard for the adversary to

368
00:11:01,120 --> 00:11:03,040
be successful in launching a prefix

369
00:11:03,040 --> 00:11:03,760
hijack

370
00:11:03,760 --> 00:11:05,680
that tricked the ca into routing through

371
00:11:05,680 --> 00:11:07,360
the adversary but there might be a

372
00:11:07,360 --> 00:11:09,519
second ca closer to the adversary and

373
00:11:09,519 --> 00:11:10,720
further from the victim

374
00:11:10,720 --> 00:11:12,640
that's much easier for the adversary to

375
00:11:12,640 --> 00:11:14,560
attack and so a real challenge here is

376
00:11:14,560 --> 00:11:15,360
not that

377
00:11:15,360 --> 00:11:16,959
hey half of the destinations on the

378
00:11:16,959 --> 00:11:18,720
internet might

379
00:11:18,720 --> 00:11:20,240
half of the destinations on the internet

380
00:11:20,240 --> 00:11:21,600
might be attacked by the adversary but

381
00:11:21,600 --> 00:11:22,000
in fact

382
00:11:22,000 --> 00:11:24,160
almost all of them can be if the right

383
00:11:24,160 --> 00:11:26,399
certificate authority is used to launch

384
00:11:26,399 --> 00:11:29,040
uh to launch the attack so the adversary

385
00:11:29,040 --> 00:11:30,720
can control its own position

386
00:11:30,720 --> 00:11:33,120
which victim it's after and which ca

387
00:11:33,120 --> 00:11:34,240
it's going to try to trick

388
00:11:34,240 --> 00:11:36,320
giving the adversary a lot of power in

389
00:11:36,320 --> 00:11:38,640
launching attacks like this

390
00:11:38,640 --> 00:11:40,720
so what's a possible defense well a

391
00:11:40,720 --> 00:11:42,079
simple idea

392
00:11:42,079 --> 00:11:44,160
is that it's possible to fool some of

393
00:11:44,160 --> 00:11:45,440
the people some of the time

394
00:11:45,440 --> 00:11:48,240
but not all the people all the time in

395
00:11:48,240 --> 00:11:49,519
particular it's not hard for an

396
00:11:49,519 --> 00:11:51,760
adversary for a brief window of time

397
00:11:51,760 --> 00:11:53,600
to fool one vantage point run by a

398
00:11:53,600 --> 00:11:54,880
certificate authority

399
00:11:54,880 --> 00:11:56,800
but to fool multiple vantage points

400
00:11:56,800 --> 00:11:58,800
distributed across the internet topology

401
00:11:58,800 --> 00:11:59,839
across the globe

402
00:11:59,839 --> 00:12:01,760
will be much more difficult the

403
00:12:01,760 --> 00:12:02,959
adversary would have to fool

404
00:12:02,959 --> 00:12:05,120
all over most of them uh to get a

405
00:12:05,120 --> 00:12:06,800
certificate and that's essentially what

406
00:12:06,800 --> 00:12:08,160
we've done is we've worked with let's

407
00:12:08,160 --> 00:12:08,720
encrypt

408
00:12:08,720 --> 00:12:10,720
to do multi-vantage point domain

409
00:12:10,720 --> 00:12:12,079
validation

410
00:12:12,079 --> 00:12:14,959
so that a stealthy adversary would have

411
00:12:14,959 --> 00:12:15,920
difficulty

412
00:12:15,920 --> 00:12:18,000
actually tricking all of these vantage

413
00:12:18,000 --> 00:12:18,959
points into routing through the

414
00:12:18,959 --> 00:12:20,399
adversary and particularly have

415
00:12:20,399 --> 00:12:21,839
difficulty doing so without being

416
00:12:21,839 --> 00:12:22,959
detected

417
00:12:22,959 --> 00:12:25,680
a large-scale attack that is visible to

418
00:12:25,680 --> 00:12:27,040
all of these vantage points would also

419
00:12:27,040 --> 00:12:28,480
be widely visible and much

420
00:12:28,480 --> 00:12:30,639
much easier to detect and so about a

421
00:12:30,639 --> 00:12:32,079
year ago let's encrypt deployed

422
00:12:32,079 --> 00:12:33,200
multi-vantage point

423
00:12:33,200 --> 00:12:34,720
domain validation and what i want to do

424
00:12:34,720 --> 00:12:36,160
in the next few minutes is talk a little

425
00:12:36,160 --> 00:12:37,680
bit about our experiences working with

426
00:12:37,680 --> 00:12:38,800
let's encrypt on

427
00:12:38,800 --> 00:12:40,639
the deployment and evaluation of their

428
00:12:40,639 --> 00:12:42,160
deployment to look at

429
00:12:42,160 --> 00:12:44,000
what's involved in building these

430
00:12:44,000 --> 00:12:46,240
application layer defenses

431
00:12:46,240 --> 00:12:47,600
now i mean at a high level this sounds

432
00:12:47,600 --> 00:12:49,760
super easy instead of verifying from one

433
00:12:49,760 --> 00:12:51,680
vantage point verified from multiple

434
00:12:51,680 --> 00:12:53,440
but we've got a lot of challenges to

435
00:12:53,440 --> 00:12:55,200
address here we want of course

436
00:12:55,200 --> 00:12:57,920
security that's our primary goal so we

437
00:12:57,920 --> 00:12:59,519
want these vantage points to offer

438
00:12:59,519 --> 00:13:01,120
diverse perspectives to

439
00:13:01,120 --> 00:13:03,040
have make independent routing decisions

440
00:13:03,040 --> 00:13:04,800
so that would be unlikely they'd all be

441
00:13:04,800 --> 00:13:07,040
fooled by the same adversary

442
00:13:07,040 --> 00:13:08,639
and that means we also need a quorum

443
00:13:08,639 --> 00:13:10,480
policy a vote if you will

444
00:13:10,480 --> 00:13:12,320
that really requires most if not all of

445
00:13:12,320 --> 00:13:14,000
these vantage points to agree

446
00:13:14,000 --> 00:13:15,920
uh before before we decide to give a

447
00:13:15,920 --> 00:13:17,760
certificate

448
00:13:17,760 --> 00:13:19,519
yet we want this to be manageable and in

449
00:13:19,519 --> 00:13:21,279
fact certificate authorities

450
00:13:21,279 --> 00:13:23,680
are subject to the ca browser forum that

451
00:13:23,680 --> 00:13:25,839
puts pretty strict requirements on

452
00:13:25,839 --> 00:13:27,440
where domain control validation can be

453
00:13:27,440 --> 00:13:29,680
done and so we want to be compliant with

454
00:13:29,680 --> 00:13:30,959
those requirements

455
00:13:30,959 --> 00:13:32,880
and we also want to run multiple vantage

456
00:13:32,880 --> 00:13:35,760
points without introducing a ton of cost

457
00:13:35,760 --> 00:13:36,720
and complexity

458
00:13:36,720 --> 00:13:39,680
to run those multiple vantage points we

459
00:13:39,680 --> 00:13:41,519
also want to minimize the latency and

460
00:13:41,519 --> 00:13:43,040
communication overhead for the many

461
00:13:43,040 --> 00:13:44,639
legitimate requests that are made to

462
00:13:44,639 --> 00:13:46,240
certificate authorities and

463
00:13:46,240 --> 00:13:48,800
avoid rejecting valid requests for

464
00:13:48,800 --> 00:13:50,720
certificates as the vast majority of the

465
00:13:50,720 --> 00:13:52,160
requests are expected to be

466
00:13:52,160 --> 00:13:55,120
to be valid so i'm going to walk through

467
00:13:55,120 --> 00:13:56,800
how we handle each of these issues in

468
00:13:56,800 --> 00:13:58,480
the in the deployment that let's encrypt

469
00:13:58,480 --> 00:13:59,360
has done

470
00:13:59,360 --> 00:14:02,000
so the first the the ca browser forum

471
00:14:02,000 --> 00:14:04,480
requires that domain control validation

472
00:14:04,480 --> 00:14:06,240
be done from data centers with certain

473
00:14:06,240 --> 00:14:08,320
standards for physical security

474
00:14:08,320 --> 00:14:10,160
and they do auditing of those data

475
00:14:10,160 --> 00:14:11,440
centers to make sure that they're

476
00:14:11,440 --> 00:14:12,480
suitable

477
00:14:12,480 --> 00:14:14,320
so making all the vantage points have to

478
00:14:14,320 --> 00:14:16,160
comply with the ca browser forum

479
00:14:16,160 --> 00:14:17,199
requirements would be

480
00:14:17,199 --> 00:14:20,000
quite onerous so instead what we do is

481
00:14:20,000 --> 00:14:20,480
have

482
00:14:20,480 --> 00:14:23,519
a primary va a primary vantage point

483
00:14:23,519 --> 00:14:25,279
that's in a data center compliant with

484
00:14:25,279 --> 00:14:27,440
the form that's already in place

485
00:14:27,440 --> 00:14:28,800
even before let's encrypt started

486
00:14:28,800 --> 00:14:31,360
working with us and instead

487
00:14:31,360 --> 00:14:33,839
then add a bunch of remote va's on top

488
00:14:33,839 --> 00:14:36,000
of that existing primary va that may be

489
00:14:36,000 --> 00:14:38,480
running in public cloud networks and in

490
00:14:38,480 --> 00:14:39,360
particular

491
00:14:39,360 --> 00:14:41,040
in the less encrypt deployment they're

492
00:14:41,040 --> 00:14:43,120
using amazon web services

493
00:14:43,120 --> 00:14:45,440
this offers the manageability benefits

494
00:14:45,440 --> 00:14:47,120
of using the public cloud

495
00:14:47,120 --> 00:14:49,839
in combination with the primary va being

496
00:14:49,839 --> 00:14:51,199
compliant with the browser

497
00:14:51,199 --> 00:14:54,079
ca forum but because of that we also

498
00:14:54,079 --> 00:14:56,560
have to treat the primary va as special

499
00:14:56,560 --> 00:14:57,680
in other words we can't grant a

500
00:14:57,680 --> 00:15:00,079
certificate if if that va

501
00:15:00,079 --> 00:15:02,959
is unable to validate uh due domain

502
00:15:02,959 --> 00:15:04,800
control validation so whatever forum

503
00:15:04,800 --> 00:15:06,160
policy we pick

504
00:15:06,160 --> 00:15:08,639
has to have the primary va succeed in

505
00:15:08,639 --> 00:15:10,240
validating the request

506
00:15:10,240 --> 00:15:12,800
for the domain and some number of the

507
00:15:12,800 --> 00:15:15,120
remote va's have to succeed as well

508
00:15:15,120 --> 00:15:17,120
so that way we would never give a

509
00:15:17,120 --> 00:15:19,199
certificate in a setting where the old

510
00:15:19,199 --> 00:15:19,920
solution

511
00:15:19,920 --> 00:15:21,760
would have chosen not to but we may be

512
00:15:21,760 --> 00:15:23,760
more strict and not give one sometimes

513
00:15:23,760 --> 00:15:24,880
when the old solution

514
00:15:24,880 --> 00:15:28,399
would have so second now we want to

515
00:15:28,399 --> 00:15:28,959
balance

516
00:15:28,959 --> 00:15:30,880
the security that we offer against the

517
00:15:30,880 --> 00:15:33,279
complexity of running these remote vas

518
00:15:33,279 --> 00:15:35,279
in what might otherwise be many public

519
00:15:35,279 --> 00:15:37,360
clouds to get truly independent vantage

520
00:15:37,360 --> 00:15:38,720
points on the internet

521
00:15:38,720 --> 00:15:40,560
and fortunately here we find that using

522
00:15:40,560 --> 00:15:42,320
a single cloud provider

523
00:15:42,320 --> 00:15:44,160
multiple data centers but run by the

524
00:15:44,160 --> 00:15:45,519
same cloud provider

525
00:15:45,519 --> 00:15:47,920
offers sufficient route diversity so we

526
00:15:47,920 --> 00:15:49,360
don't have to have the complexity of

527
00:15:49,360 --> 00:15:51,040
using multiple cloud providers with

528
00:15:51,040 --> 00:15:52,959
multiple billing models and multiple

529
00:15:52,959 --> 00:15:55,040
ways of instantiating vms

530
00:15:55,040 --> 00:15:56,880
and so in practice we can actually have

531
00:15:56,880 --> 00:15:58,560
a solution this is what led syncrypt

532
00:15:58,560 --> 00:15:59,199
does

533
00:15:59,199 --> 00:16:01,040
that has just one relationship with the

534
00:16:01,040 --> 00:16:02,399
single cloud provider

535
00:16:02,399 --> 00:16:04,320
and in particular with let's encrypt

536
00:16:04,320 --> 00:16:06,240
they have their primary va either in

537
00:16:06,240 --> 00:16:08,959
denver or in salt lake city in the u.s

538
00:16:08,959 --> 00:16:12,079
and remote va's running in aws in oregon

539
00:16:12,079 --> 00:16:14,560
ohio and frankfurt and we'll come back

540
00:16:14,560 --> 00:16:16,399
later to these particular choices and

541
00:16:16,399 --> 00:16:16,800
whether

542
00:16:16,800 --> 00:16:18,320
whether more vantage points would be

543
00:16:18,320 --> 00:16:20,639
helpful

544
00:16:20,639 --> 00:16:22,480
so next now the system is relatively

545
00:16:22,480 --> 00:16:23,920
easy to manage

546
00:16:23,920 --> 00:16:25,759
but we still have to worry about benign

547
00:16:25,759 --> 00:16:27,839
failures where a legitimate request

548
00:16:27,839 --> 00:16:29,600
might be erroneously rejected

549
00:16:29,600 --> 00:16:31,839
and how can we minimize the performance

550
00:16:31,839 --> 00:16:34,639
impact to benign users as well as the

551
00:16:34,639 --> 00:16:37,759
risk of giving them an error message

552
00:16:37,759 --> 00:16:40,240
so these remote vas these remote vantage

553
00:16:40,240 --> 00:16:42,560
points they may respond slowly

554
00:16:42,560 --> 00:16:44,480
which could give latency to valid

555
00:16:44,480 --> 00:16:46,880
requests they may fail to respond

556
00:16:46,880 --> 00:16:48,480
for legitimate reasons some sort of

557
00:16:48,480 --> 00:16:50,000
outage or they may give

558
00:16:50,000 --> 00:16:52,720
inconsistent answers and we'd like to be

559
00:16:52,720 --> 00:16:54,160
able to make sure that we're not

560
00:16:54,160 --> 00:16:55,519
vulnerable to that happening to

561
00:16:55,519 --> 00:16:57,920
legitimate requests

562
00:16:57,920 --> 00:17:00,959
and so to allow a bit of robustness to a

563
00:17:00,959 --> 00:17:03,600
single remote va having a problem we're

564
00:17:03,600 --> 00:17:05,520
going to have a quorum policy where

565
00:17:05,520 --> 00:17:07,839
the primary va has to succeed in

566
00:17:07,839 --> 00:17:09,520
invalidating the domain

567
00:17:09,520 --> 00:17:12,720
and two of the three va's must do so

568
00:17:12,720 --> 00:17:14,400
and you can imagine stricter or weaker

569
00:17:14,400 --> 00:17:15,839
models here but the idea of allowing at

570
00:17:15,839 --> 00:17:17,599
least one of the remote va's

571
00:17:17,599 --> 00:17:19,599
to not succeed means we can respond more

572
00:17:19,599 --> 00:17:21,919
quickly when the third va is slow

573
00:17:21,919 --> 00:17:24,079
we can respond appropriately when the

574
00:17:24,079 --> 00:17:25,359
third va fails

575
00:17:25,359 --> 00:17:27,520
or has an outage of some sort and i can

576
00:17:27,520 --> 00:17:28,720
accommodate a small number of

577
00:17:28,720 --> 00:17:30,799
inconsistencies that might arise

578
00:17:30,799 --> 00:17:32,320
and so that's the quorum policy that

579
00:17:32,320 --> 00:17:35,120
that's in place now

580
00:17:35,120 --> 00:17:36,799
so in doing this deployment with let's

581
00:17:36,799 --> 00:17:38,240
encrypt let's encrypted

582
00:17:38,240 --> 00:17:41,360
a number of things to face this feature

583
00:17:41,360 --> 00:17:43,200
into their production system

584
00:17:43,200 --> 00:17:44,960
gradually because they're really making

585
00:17:44,960 --> 00:17:47,039
changes to a live operational system to

586
00:17:47,039 --> 00:17:47,520
put this

587
00:17:47,520 --> 00:17:50,240
uh security defense in so first they did

588
00:17:50,240 --> 00:17:51,760
a staging deployment

589
00:17:51,760 --> 00:17:54,080
where they did internal testing uh of

590
00:17:54,080 --> 00:17:56,559
this feature on a non-production

591
00:17:56,559 --> 00:17:58,400
copy of the system that they use in

592
00:17:58,400 --> 00:18:00,799
practice this allowed the software to be

593
00:18:00,799 --> 00:18:02,880
developed and tested

594
00:18:02,880 --> 00:18:04,480
then there was testing in the production

595
00:18:04,480 --> 00:18:06,400
environment but without

596
00:18:06,400 --> 00:18:08,080
actually affecting how certificates are

597
00:18:08,080 --> 00:18:10,480
granted in other words the remote vas

598
00:18:10,480 --> 00:18:12,480
were doing domain validation and logging

599
00:18:12,480 --> 00:18:13,520
their results

600
00:18:13,520 --> 00:18:15,520
but the primary va was driving all

601
00:18:15,520 --> 00:18:16,799
decisions about

602
00:18:16,799 --> 00:18:18,720
validation requests and the granting of

603
00:18:18,720 --> 00:18:20,720
certificates so the remote va's were

604
00:18:20,720 --> 00:18:21,440
just being

605
00:18:21,440 --> 00:18:23,520
tested out taking through their paces if

606
00:18:23,520 --> 00:18:24,720
you will

607
00:18:24,720 --> 00:18:26,960
in that process we found a number of

608
00:18:26,960 --> 00:18:28,559
domains that sometimes had problems

609
00:18:28,559 --> 00:18:30,320
legitimate domains that sometimes had

610
00:18:30,320 --> 00:18:32,160
problems and so with the initial

611
00:18:32,160 --> 00:18:34,000
production deployment there was an

612
00:18:34,000 --> 00:18:35,919
exception list where domains with

613
00:18:35,919 --> 00:18:37,600
non-problems working with the remote

614
00:18:37,600 --> 00:18:38,320
va's

615
00:18:38,320 --> 00:18:41,200
were left out of doing remote multiple

616
00:18:41,200 --> 00:18:42,400
vantage point

617
00:18:42,400 --> 00:18:44,480
uh validation particularly to make sure

618
00:18:44,480 --> 00:18:45,600
that when those domains

619
00:18:45,600 --> 00:18:47,039
renewed there are already existing

620
00:18:47,039 --> 00:18:48,799
certificates that those wouldn't be

621
00:18:48,799 --> 00:18:50,480
erroneously rejected

622
00:18:50,480 --> 00:18:51,760
and this was possible because those

623
00:18:51,760 --> 00:18:53,600
domains already had certificates and we

624
00:18:53,600 --> 00:18:55,200
were able through the logging done in

625
00:18:55,200 --> 00:18:56,160
stage two

626
00:18:56,160 --> 00:18:58,480
to determine that they might be at risk

627
00:18:58,480 --> 00:18:59,520
of having a problem

628
00:18:59,520 --> 00:19:01,200
this was done only for domains where

629
00:19:01,200 --> 00:19:03,200
let's encrypt had contact information to

630
00:19:03,200 --> 00:19:04,480
reach out to those domains

631
00:19:04,480 --> 00:19:06,000
and could work with them to understand

632
00:19:06,000 --> 00:19:08,400
and fix whatever problems were causing

633
00:19:08,400 --> 00:19:10,799
multi-vantage point validation to fail

634
00:19:10,799 --> 00:19:12,080
and then finally

635
00:19:12,080 --> 00:19:14,160
a full production deployment is in

636
00:19:14,160 --> 00:19:15,679
process now where all certificate

637
00:19:15,679 --> 00:19:16,559
requests around

638
00:19:16,559 --> 00:19:19,360
1.5 million per day are validated by the

639
00:19:19,360 --> 00:19:20,640
multiple vantage points

640
00:19:20,640 --> 00:19:22,559
so this gradual process let us get a lot

641
00:19:22,559 --> 00:19:24,640
of valuable lessons along the way

642
00:19:24,640 --> 00:19:26,320
while balancing the trade-off between

643
00:19:26,320 --> 00:19:29,039
security and avoiding false positives

644
00:19:29,039 --> 00:19:29,440
with

645
00:19:29,440 --> 00:19:32,559
benign sites so i want to just touch

646
00:19:32,559 --> 00:19:34,559
on a couple of anecdotes about our

647
00:19:34,559 --> 00:19:36,400
experiences working with let's encrypt

648
00:19:36,400 --> 00:19:39,039
and some interesting results so first we

649
00:19:39,039 --> 00:19:40,000
found

650
00:19:40,000 --> 00:19:42,240
one concern we had at the beginning was

651
00:19:42,240 --> 00:19:44,160
that validation would be slow and would

652
00:19:44,160 --> 00:19:45,679
cause certificates to be issued more

653
00:19:45,679 --> 00:19:46,640
slowly

654
00:19:46,640 --> 00:19:48,400
but in practice we found the remote

655
00:19:48,400 --> 00:19:49,919
vantage points actually typically had

656
00:19:49,919 --> 00:19:51,919
lower latency than the primary vantage

657
00:19:51,919 --> 00:19:52,400
point

658
00:19:52,400 --> 00:19:54,720
because the amazon data centers are

659
00:19:54,720 --> 00:19:57,360
performant and and centrally located

660
00:19:57,360 --> 00:19:59,120
and so in practice we didn't find the

661
00:19:59,120 --> 00:20:01,280
addition of remote vas

662
00:20:01,280 --> 00:20:04,320
to inflate latency likewise validation

663
00:20:04,320 --> 00:20:05,840
bandwidth was not all that high is

664
00:20:05,840 --> 00:20:07,600
really a relatively small amount of work

665
00:20:07,600 --> 00:20:09,520
to coordinate the multiple vas

666
00:20:09,520 --> 00:20:12,480
and to have them do a small web request

667
00:20:12,480 --> 00:20:13,440
to the domain

668
00:20:13,440 --> 00:20:15,440
so we're using up about half a megabit

669
00:20:15,440 --> 00:20:17,919
per second per remote va to keep up with

670
00:20:17,919 --> 00:20:20,799
about 20 certificates per second

671
00:20:20,799 --> 00:20:23,760
and then we saw very few benign failures

672
00:20:23,760 --> 00:20:26,480
the case where the primary va succeeds

673
00:20:26,480 --> 00:20:28,640
but any remote va fails and remember we

674
00:20:28,640 --> 00:20:29,600
can tolerate one

675
00:20:29,600 --> 00:20:31,679
remote va failing without without

676
00:20:31,679 --> 00:20:33,039
declining the certificate

677
00:20:33,039 --> 00:20:34,799
happened just over one percent of the

678
00:20:34,799 --> 00:20:36,240
validations

679
00:20:36,240 --> 00:20:37,679
and so common cases here are kind of

680
00:20:37,679 --> 00:20:39,600
interesting uh the most common reason

681
00:20:39,600 --> 00:20:40,799
this happened

682
00:20:40,799 --> 00:20:43,360
related to dns where one of the remote

683
00:20:43,360 --> 00:20:45,679
vas could not correctly do a dns

684
00:20:45,679 --> 00:20:48,080
resolution of the domain's name and the

685
00:20:48,080 --> 00:20:49,520
reason for this is interesting what

686
00:20:49,520 --> 00:20:51,600
happens is someone creates a website

687
00:20:51,600 --> 00:20:54,240
they go to get a domain name and a dns

688
00:20:54,240 --> 00:20:55,520
service and they go and get a

689
00:20:55,520 --> 00:20:56,960
certificate for their site

690
00:20:56,960 --> 00:20:59,360
often roughly at the same time and so

691
00:20:59,360 --> 00:21:01,520
the dns zone transfer is taking place in

692
00:21:01,520 --> 00:21:02,320
the background

693
00:21:02,320 --> 00:21:04,400
to replicate that dns data were

694
00:21:04,400 --> 00:21:07,039
sometimes not populated across the globe

695
00:21:07,039 --> 00:21:08,799
by the time they made their request for

696
00:21:08,799 --> 00:21:10,400
their certificate signing

697
00:21:10,400 --> 00:21:12,320
and so we sometimes see one remote

698
00:21:12,320 --> 00:21:15,039
vantage point fail in its dns resolution

699
00:21:15,039 --> 00:21:16,000
because the information

700
00:21:16,000 --> 00:21:18,880
about that domain had not yet propagated

701
00:21:18,880 --> 00:21:20,480
to that part of the internet

702
00:21:20,480 --> 00:21:22,480
as you might expect requests like that

703
00:21:22,480 --> 00:21:23,760
will often be successful

704
00:21:23,760 --> 00:21:26,640
upon retry and second we found a few

705
00:21:26,640 --> 00:21:27,919
cases where

706
00:21:27,919 --> 00:21:30,080
the domain validation requests from the

707
00:21:30,080 --> 00:21:31,520
multiple vantage points

708
00:21:31,520 --> 00:21:33,919
triggered ddos detection in the victim

709
00:21:33,919 --> 00:21:36,080
network so ironically our attempts to

710
00:21:36,080 --> 00:21:39,120
be more secure in issuing certificates

711
00:21:39,120 --> 00:21:40,799
sometimes triggered other security

712
00:21:40,799 --> 00:21:43,440
systems in the victim domain

713
00:21:43,440 --> 00:21:45,039
and of course this is a reason why it's

714
00:21:45,039 --> 00:21:46,799
helpful not to have too many va's you

715
00:21:46,799 --> 00:21:47,360
would think

716
00:21:47,360 --> 00:21:49,360
more vantage points would be better but

717
00:21:49,360 --> 00:21:50,880
in practice that might not be true

718
00:21:50,880 --> 00:21:52,080
because not only would more vantage

719
00:21:52,080 --> 00:21:53,600
points lead to higher latency and higher

720
00:21:53,600 --> 00:21:54,400
bandwidth

721
00:21:54,400 --> 00:21:56,880
but might occasionally set off uh ddos

722
00:21:56,880 --> 00:21:58,640
detection as well

723
00:21:58,640 --> 00:22:01,200
but in practice many of the the failed

724
00:22:01,200 --> 00:22:03,039
uh validation requests were successful

725
00:22:03,039 --> 00:22:04,159
upon retry

726
00:22:04,159 --> 00:22:06,880
or by working with the particular domain

727
00:22:06,880 --> 00:22:09,039
to address the problem

728
00:22:09,039 --> 00:22:12,000
so we wanted to quantify the security

729
00:22:12,000 --> 00:22:13,360
improvement everything i've said

730
00:22:13,360 --> 00:22:16,320
so far is focused on normal requests

731
00:22:16,320 --> 00:22:17,360
that are not attacked

732
00:22:17,360 --> 00:22:20,080
so how successful is multi-domain

733
00:22:20,080 --> 00:22:21,200
multi-vantage point

734
00:22:21,200 --> 00:22:23,520
verification in protecting against the

735
00:22:23,520 --> 00:22:25,360
attacks we were concerned about

736
00:22:25,360 --> 00:22:27,840
so we went back to the appearing test

737
00:22:27,840 --> 00:22:29,120
bed to launch at

738
00:22:29,120 --> 00:22:31,120
the same kind of ethical attacks we had

739
00:22:31,120 --> 00:22:32,720
announced earlier when we were first

740
00:22:32,720 --> 00:22:34,559
identifying this attack

741
00:22:34,559 --> 00:22:35,919
and we found that the let's encrypt

742
00:22:35,919 --> 00:22:37,520
quorum policy caught most of these

743
00:22:37,520 --> 00:22:38,320
attacks

744
00:22:38,320 --> 00:22:40,080
although in some cases a very well

745
00:22:40,080 --> 00:22:41,600
connected adversary

746
00:22:41,600 --> 00:22:43,440
could be successful and still getting

747
00:22:43,440 --> 00:22:44,960
all of the vantage points

748
00:22:44,960 --> 00:22:48,400
to uh to actually go to the wrong place

749
00:22:48,400 --> 00:22:50,159
and second we did a bunch of bgp

750
00:22:50,159 --> 00:22:51,760
simulation experiments

751
00:22:51,760 --> 00:22:53,919
to be able to model adversaries located

752
00:22:53,919 --> 00:22:55,840
not just at the locations of columbia's

753
00:22:55,840 --> 00:22:57,039
peering testbed

754
00:22:57,039 --> 00:22:59,200
but at randomly chosen ais throughout

755
00:22:59,200 --> 00:23:01,039
the internet to understand how

756
00:23:01,039 --> 00:23:03,600
a randomly chosen adversary's location

757
00:23:03,600 --> 00:23:05,600
might affect attacks

758
00:23:05,600 --> 00:23:07,760
here we had to go a little further than

759
00:23:07,760 --> 00:23:10,159
existing work on bgp simulation because

760
00:23:10,159 --> 00:23:10,960
we can't model

761
00:23:10,960 --> 00:23:13,039
connectivity just at the autonomous

762
00:23:13,039 --> 00:23:14,000
system level

763
00:23:14,000 --> 00:23:16,000
we needed to capture the unique

764
00:23:16,000 --> 00:23:17,760
connectivity in each aws

765
00:23:17,760 --> 00:23:20,320
data center if we treated aws as one

766
00:23:20,320 --> 00:23:21,520
node in the graph

767
00:23:21,520 --> 00:23:23,760
we might erroneously think all the aws

768
00:23:23,760 --> 00:23:25,600
data centers would pick the same route

769
00:23:25,600 --> 00:23:27,440
but in practice that's not the case they

770
00:23:27,440 --> 00:23:29,120
have a different set of peers and make

771
00:23:29,120 --> 00:23:30,960
independent routing decisions

772
00:23:30,960 --> 00:23:33,280
so we had to extend our model of as

773
00:23:33,280 --> 00:23:34,320
connectivity

774
00:23:34,320 --> 00:23:36,559
to capture the richness and diversity of

775
00:23:36,559 --> 00:23:38,320
the aws data center

776
00:23:38,320 --> 00:23:41,360
bgp ecosystem and then from that those

777
00:23:41,360 --> 00:23:42,559
experiments we found

778
00:23:42,559 --> 00:23:44,559
that the median domain is resilient to

779
00:23:44,559 --> 00:23:46,240
attacks from more than 90

780
00:23:46,240 --> 00:23:49,039
of locations on the internet so both of

781
00:23:49,039 --> 00:23:50,559
these results are positive we can catch

782
00:23:50,559 --> 00:23:52,640
the vast majority of attacks

783
00:23:52,640 --> 00:23:55,039
using using the multi-vantage point but

784
00:23:55,039 --> 00:23:56,720
a well-connected adversary still has

785
00:23:56,720 --> 00:23:57,760
some power

786
00:23:57,760 --> 00:23:59,520
and so we did some experiments of what

787
00:23:59,520 --> 00:24:01,279
would happen if let's encrypt were to

788
00:24:01,279 --> 00:24:04,240
add additional aws data centers to its

789
00:24:04,240 --> 00:24:05,919
multiple vantage points and we found if

790
00:24:05,919 --> 00:24:08,320
they would add one or maybe two more

791
00:24:08,320 --> 00:24:10,080
paris and singapore in particular to add

792
00:24:10,080 --> 00:24:12,480
a little more geographic diversity

793
00:24:12,480 --> 00:24:14,559
or to have a stricter quorum policy

794
00:24:14,559 --> 00:24:16,080
would go a long way towards defending

795
00:24:16,080 --> 00:24:17,840
against even the most richly connected

796
00:24:17,840 --> 00:24:19,279
adversaries

797
00:24:19,279 --> 00:24:20,960
but note again an adversary that

798
00:24:20,960 --> 00:24:23,279
announces and a hijack

799
00:24:23,279 --> 00:24:25,120
that aggressively that all the vantage

800
00:24:25,120 --> 00:24:26,960
points in luxembourg were to see the

801
00:24:26,960 --> 00:24:27,919
bogus route

802
00:24:27,919 --> 00:24:30,240
would also be quite visible in bgp

803
00:24:30,240 --> 00:24:32,080
monitoring systems as well

804
00:24:32,080 --> 00:24:33,520
so there's a tension here where the

805
00:24:33,520 --> 00:24:35,360
adversary wants to be stealthy

806
00:24:35,360 --> 00:24:37,919
to not be detected and yet needs to fool

807
00:24:37,919 --> 00:24:39,440
a large number of vantage points to get

808
00:24:39,440 --> 00:24:41,360
its job done it's fundamentally hard

809
00:24:41,360 --> 00:24:43,279
to be stealthy and have that broader

810
00:24:43,279 --> 00:24:46,400
scope for an attack at the same time

811
00:24:46,400 --> 00:24:48,559
in the attacks i've talked about so far

812
00:24:48,559 --> 00:24:50,400
the adversary does a same

813
00:24:50,400 --> 00:24:53,679
prefix attack it attacks the same prefix

814
00:24:53,679 --> 00:24:55,600
that the legitimate owner of the address

815
00:24:55,600 --> 00:24:56,960
block is using

816
00:24:56,960 --> 00:24:58,640
adversaries can do more powerful things

817
00:24:58,640 --> 00:25:00,159
such as announcing

818
00:25:00,159 --> 00:25:02,240
smaller address blocks where it may in

819
00:25:02,240 --> 00:25:04,320
fact get the entire internet to route to

820
00:25:04,320 --> 00:25:04,640
it

821
00:25:04,640 --> 00:25:06,000
rather than to the legitimate

822
00:25:06,000 --> 00:25:08,159
destination multi-vantage point

823
00:25:08,159 --> 00:25:09,840
verification is only so useful in this

824
00:25:09,840 --> 00:25:11,520
case because all of the vantage points

825
00:25:11,520 --> 00:25:13,200
were brought to the adversary

826
00:25:13,200 --> 00:25:15,440
but in practice this we think is a less

827
00:25:15,440 --> 00:25:17,679
less likely attack because first of all

828
00:25:17,679 --> 00:25:19,440
for a bunch of prefixes this isn't

829
00:25:19,440 --> 00:25:21,200
possible in particular if the

830
00:25:21,200 --> 00:25:23,679
original prefix is already a slash 24

831
00:25:23,679 --> 00:25:25,679
the adversary typically can't announce a

832
00:25:25,679 --> 00:25:27,440
yet smaller prefix without it being

833
00:25:27,440 --> 00:25:28,640
filtered

834
00:25:28,640 --> 00:25:31,039
and again these smaller prefix attacks

835
00:25:31,039 --> 00:25:32,559
that are widely distributed

836
00:25:32,559 --> 00:25:35,600
would be visible in bgp monitoring

837
00:25:35,600 --> 00:25:37,200
and potentially if our pki is more

838
00:25:37,200 --> 00:25:39,840
widely deployed in rpki as well

839
00:25:39,840 --> 00:25:42,000
so this is an important category of

840
00:25:42,000 --> 00:25:43,760
attack as well but we think in practice

841
00:25:43,760 --> 00:25:45,279
it's hard to do these in the stealthy

842
00:25:45,279 --> 00:25:46,960
way

843
00:25:46,960 --> 00:25:48,559
finally to close i'll just mention

844
00:25:48,559 --> 00:25:50,080
another class of attacks that

845
00:25:50,080 --> 00:25:52,480
is relevant to other applications that

846
00:25:52,480 --> 00:25:53,760
i'll talk about in a moment which are

847
00:25:53,760 --> 00:25:56,799
bgp interception attacks and so in bgp

848
00:25:56,799 --> 00:25:58,320
interception attacks the adversary's

849
00:25:58,320 --> 00:26:00,080
goal is not to

850
00:26:00,080 --> 00:26:03,200
black hole or impersonate the legitimate

851
00:26:03,200 --> 00:26:03,679
owner

852
00:26:03,679 --> 00:26:05,200
but to just have the traffic pass

853
00:26:05,200 --> 00:26:06,720
through that as on route to the

854
00:26:06,720 --> 00:26:08,159
legitimate destination

855
00:26:08,159 --> 00:26:10,159
so in particular here at adversary in

856
00:26:10,159 --> 00:26:12,080
autonomous system three

857
00:26:12,080 --> 00:26:14,240
they want traffic going to autonomous

858
00:26:14,240 --> 00:26:16,799
system six to go through it on route

859
00:26:16,799 --> 00:26:18,320
and so what it might do is through

860
00:26:18,320 --> 00:26:19,840
different routers connected to different

861
00:26:19,840 --> 00:26:20,880
neighbors

862
00:26:20,880 --> 00:26:22,799
announce different routes in particular

863
00:26:22,799 --> 00:26:24,799
might tell autonomous system 7

864
00:26:24,799 --> 00:26:26,559
that it has a very attractive route to

865
00:26:26,559 --> 00:26:28,480
the destination so that autonomous

866
00:26:28,480 --> 00:26:30,960
system 7 will route through 3

867
00:26:30,960 --> 00:26:33,600
while simultaneously having as3 retain

868
00:26:33,600 --> 00:26:35,520
its own route through autonomous system

869
00:26:35,520 --> 00:26:36,720
4.

870
00:26:36,720 --> 00:26:38,799
as a result seven will route through

871
00:26:38,799 --> 00:26:40,400
three's route but three will forward

872
00:26:40,400 --> 00:26:41,760
that traffic onward

873
00:26:41,760 --> 00:26:43,840
to the legitimate destination and this

874
00:26:43,840 --> 00:26:45,200
allows an adversary now

875
00:26:45,200 --> 00:26:47,520
to do eavesdropping on traffic as it

876
00:26:47,520 --> 00:26:48,240
goes

877
00:26:48,240 --> 00:26:50,320
uh through the internet and we've seen

878
00:26:50,320 --> 00:26:51,840
in other applications we've studied this

879
00:26:51,840 --> 00:26:53,360
to be a very effective

880
00:26:53,360 --> 00:26:55,039
attack for particularly attacking

881
00:26:55,039 --> 00:26:58,320
anonymity systems like tor

882
00:26:58,320 --> 00:27:00,320
so just stepping back there are a lot of

883
00:27:00,320 --> 00:27:01,919
applications on the internet that have

884
00:27:01,919 --> 00:27:03,919
security and privacy concerns beyond

885
00:27:03,919 --> 00:27:05,279
certificate authorities

886
00:27:05,279 --> 00:27:07,120
some of them use domain validation much

887
00:27:07,120 --> 00:27:08,960
like certificate authorities do

888
00:27:08,960 --> 00:27:10,880
some websites if you change your account

889
00:27:10,880 --> 00:27:13,440
password will do domain validation

890
00:27:13,440 --> 00:27:15,600
if you are restaurant review or hotel

891
00:27:15,600 --> 00:27:17,840
review sites will sometimes require

892
00:27:17,840 --> 00:27:20,159
the owner of a hotel or restaurant to

893
00:27:20,159 --> 00:27:22,159
validate that it controls the restaurant

894
00:27:22,159 --> 00:27:23,520
or hotel's website

895
00:27:23,520 --> 00:27:25,120
before allowing it to update other

896
00:27:25,120 --> 00:27:27,760
information at the review site and so on

897
00:27:27,760 --> 00:27:29,279
so domain foundation is actually more

898
00:27:29,279 --> 00:27:32,080
widely used than just just for cas

899
00:27:32,080 --> 00:27:33,360
and as i mentioned anonymous

900
00:27:33,360 --> 00:27:35,360
communication like tor

901
00:27:35,360 --> 00:27:37,360
relies on on the underlying routing

902
00:27:37,360 --> 00:27:38,960
system to deliver traffic

903
00:27:38,960 --> 00:27:40,480
with the assumption that the past

904
00:27:40,480 --> 00:27:42,320
through the internet are independent

905
00:27:42,320 --> 00:27:44,080
an adversary that can launch bgp

906
00:27:44,080 --> 00:27:46,240
interception attacks can put itself on

907
00:27:46,240 --> 00:27:48,399
the path between the client and tour

908
00:27:48,399 --> 00:27:50,480
and between tor and the server that the

909
00:27:50,480 --> 00:27:52,159
client is speaking with

910
00:27:52,159 --> 00:27:54,240
by so doing adversaries can do traffic

911
00:27:54,240 --> 00:27:55,440
analysis attacks

912
00:27:55,440 --> 00:27:57,919
that can break the privacy and anonymity

913
00:27:57,919 --> 00:27:59,600
that tor is trying to provide

914
00:27:59,600 --> 00:28:01,919
and here too we've launched ethical

915
00:28:01,919 --> 00:28:03,039
hijacks and

916
00:28:03,039 --> 00:28:04,799
ethical interception attacks to

917
00:28:04,799 --> 00:28:06,480
demonstrate that tor's anonymity

918
00:28:06,480 --> 00:28:08,080
properties can be compromised

919
00:28:08,080 --> 00:28:10,480
by network layer attacks and finally as

920
00:28:10,480 --> 00:28:12,480
i mentioned earlier in the talk

921
00:28:12,480 --> 00:28:14,880
others have demonstrated that bgp can be

922
00:28:14,880 --> 00:28:16,000
used to attack

923
00:28:16,000 --> 00:28:18,240
bitcoin by disrupting the consensus

924
00:28:18,240 --> 00:28:19,760
protocol that's run

925
00:28:19,760 --> 00:28:22,399
among the nodes in the bitcoin network

926
00:28:22,399 --> 00:28:24,399
so all of this points to the fact that

927
00:28:24,399 --> 00:28:26,399
cross-layer attacks are a serious

928
00:28:26,399 --> 00:28:28,640
problem assumptions in one layer

929
00:28:28,640 --> 00:28:30,640
can be violated by the layer below

930
00:28:30,640 --> 00:28:32,000
leaving the adversary a lot of

931
00:28:32,000 --> 00:28:33,679
opportunity to work across layer

932
00:28:33,679 --> 00:28:34,399
boundaries

933
00:28:34,399 --> 00:28:36,159
to do attacks that application

934
00:28:36,159 --> 00:28:37,600
developers and network protocol

935
00:28:37,600 --> 00:28:40,000
designers might both be ignoring

936
00:28:40,000 --> 00:28:42,080
fortunately that means we can use

937
00:28:42,080 --> 00:28:43,440
application layer defenses that are

938
00:28:43,440 --> 00:28:45,039
often easier to deploy because they

939
00:28:45,039 --> 00:28:46,880
don't require a global agreement

940
00:28:46,880 --> 00:28:49,120
to deploy but to be clear i don't think

941
00:28:49,120 --> 00:28:50,640
that means we should abandon

942
00:28:50,640 --> 00:28:52,240
the important work that's taking place

943
00:28:52,240 --> 00:28:54,720
on network layer defenses such as rpki

944
00:28:54,720 --> 00:28:57,919
and manners and more because ultimately

945
00:28:57,919 --> 00:28:59,760
it's costly for every application to

946
00:28:59,760 --> 00:29:01,679
have to develop its own defenses

947
00:29:01,679 --> 00:29:03,440
and a single solution that protects the

948
00:29:03,440 --> 00:29:05,120
network layer will protect

949
00:29:05,120 --> 00:29:06,880
a lot of applications not just these

950
00:29:06,880 --> 00:29:09,440
large applications that are particularly

951
00:29:09,440 --> 00:29:11,279
strong and having security and privacy

952
00:29:11,279 --> 00:29:14,159
concerns and so a way forward is to

953
00:29:14,159 --> 00:29:16,080
in the meantime protect these popular

954
00:29:16,080 --> 00:29:17,679
and important applications

955
00:29:17,679 --> 00:29:19,520
and important prefixes that these

956
00:29:19,520 --> 00:29:20,720
applications use

957
00:29:20,720 --> 00:29:22,640
while we continue the important work of

958
00:29:22,640 --> 00:29:24,399
securing the routing system

959
00:29:24,399 --> 00:29:26,080
and hopefully also find ways to

960
00:29:26,080 --> 00:29:28,159
incentivize greater deployment

961
00:29:28,159 --> 00:29:30,320
of these bgp security solutions both by

962
00:29:30,320 --> 00:29:31,520
raising awareness

963
00:29:31,520 --> 00:29:33,279
of the severity of these application

964
00:29:33,279 --> 00:29:35,200
level attacks and perhaps in using

965
00:29:35,200 --> 00:29:36,320
routing solutions

966
00:29:36,320 --> 00:29:38,399
that favor networks that have gone a

967
00:29:38,399 --> 00:29:40,000
part of the way towards their role in

968
00:29:40,000 --> 00:29:40,640
making

969
00:29:40,640 --> 00:29:43,520
the internet routing system more secure

970
00:29:43,520 --> 00:29:44,880
so thank you i'll be happy to take

971
00:29:44,880 --> 00:29:46,640
questions i also hear a point to

972
00:29:46,640 --> 00:29:48,240
some papers that go into more detail

973
00:29:48,240 --> 00:29:50,159
about the studies we've done

974
00:29:50,159 --> 00:29:55,840
happy to take your questions

975
00:29:58,000 --> 00:30:00,480
hello everyone we'll continue next with

976
00:30:00,480 --> 00:30:02,159
q a

977
00:30:02,159 --> 00:30:05,760
dr rexfort please expand on the topic of

978
00:30:05,760 --> 00:30:07,440
hijacking an authoritative

979
00:30:07,440 --> 00:30:10,159
dns server instead of a website all

980
00:30:10,159 --> 00:30:10,559
right so

981
00:30:10,559 --> 00:30:12,320
in the attacks i mentioned in the talk

982
00:30:12,320 --> 00:30:13,600
your the adversary

983
00:30:13,600 --> 00:30:15,440
is attacking a domain validation request

984
00:30:15,440 --> 00:30:17,919
done over http to the website

985
00:30:17,919 --> 00:30:19,760
where the domain owner is expected to

986
00:30:19,760 --> 00:30:22,000
put up content at a particular url

987
00:30:22,000 --> 00:30:23,440
but there are other ways to do that that

988
00:30:23,440 --> 00:30:25,840
could be gone done via email servers or

989
00:30:25,840 --> 00:30:28,159
via dns servers so for example

990
00:30:28,159 --> 00:30:30,480
the certificate authority could require

991
00:30:30,480 --> 00:30:32,799
a particular txt record to be placed at

992
00:30:32,799 --> 00:30:33,279
the

993
00:30:33,279 --> 00:30:35,679
the site's authoritative dns server and

994
00:30:35,679 --> 00:30:37,200
the similar attack would work there as

995
00:30:37,200 --> 00:30:38,960
well where the adversary would

996
00:30:38,960 --> 00:30:40,799
hijack the address block of the

997
00:30:40,799 --> 00:30:42,480
authoritative dns server

998
00:30:42,480 --> 00:30:44,080
at the time of the domain validation

999
00:30:44,080 --> 00:30:46,159
request in order to return the expected

1000
00:30:46,159 --> 00:30:47,120
answer

1001
00:30:47,120 --> 00:30:50,240
uh via via dns now something like dns

1002
00:30:50,240 --> 00:30:51,279
sec were in place

1003
00:30:51,279 --> 00:30:53,039
that wouldn't necessarily be a problem

1004
00:30:53,039 --> 00:30:55,120
but it isn't widely enough deployed to

1005
00:30:55,120 --> 00:30:56,480
prevent that kind of attack

1006
00:30:56,480 --> 00:30:58,080
and similarly with email you could

1007
00:30:58,080 --> 00:30:59,919
imagine intercepting the email traffic

1008
00:30:59,919 --> 00:31:00,880
in order to

1009
00:31:00,880 --> 00:31:02,159
to be able to answer the email

1010
00:31:02,159 --> 00:31:04,240
appropriately that the domain

1011
00:31:04,240 --> 00:31:06,720
controls

1012
00:31:07,440 --> 00:31:09,279
okay very good thank you another

1013
00:31:09,279 --> 00:31:10,880
question that came up was

1014
00:31:10,880 --> 00:31:13,840
the case of sub prefix hijack with bat

1015
00:31:13,840 --> 00:31:14,640
poisoning

1016
00:31:14,640 --> 00:31:18,000
to innovate pgp monitoring systems right

1017
00:31:18,000 --> 00:31:18,480
that's a

1018
00:31:18,480 --> 00:31:20,960
great question so sub prefix attack is

1019
00:31:20,960 --> 00:31:22,720
harder for us because it could fool

1020
00:31:22,720 --> 00:31:25,360
multiple vantage points into into going

1021
00:31:25,360 --> 00:31:27,120
to the wrong destination

1022
00:31:27,120 --> 00:31:28,640
and with path poisoning it could be

1023
00:31:28,640 --> 00:31:30,720
sculpted in such a way that only

1024
00:31:30,720 --> 00:31:32,320
some parts of the internet would see the

1025
00:31:32,320 --> 00:31:33,760
bogus route so here

1026
00:31:33,760 --> 00:31:36,080
the main reason we're hopefully okay in

1027
00:31:36,080 --> 00:31:37,200
this case although there's certainly

1028
00:31:37,200 --> 00:31:38,399
more to study here

1029
00:31:38,399 --> 00:31:40,159
is to full enough of the vantage points

1030
00:31:40,159 --> 00:31:42,720
to get the multi-quaran policy to vote

1031
00:31:42,720 --> 00:31:44,960
that the adversary's destination is

1032
00:31:44,960 --> 00:31:45,760
legitimate

1033
00:31:45,760 --> 00:31:47,760
the scope of that path poisoning can't

1034
00:31:47,760 --> 00:31:49,600
be too narrow because you need to pull

1035
00:31:49,600 --> 00:31:50,720
multiple

1036
00:31:50,720 --> 00:31:52,720
vantage points into actually routing to

1037
00:31:52,720 --> 00:31:54,480
the wrong place so there we're really

1038
00:31:54,480 --> 00:31:56,240
relying on the fact that that sub prefix

1039
00:31:56,240 --> 00:31:57,919
hijack would be visible

1040
00:31:57,919 --> 00:32:00,159
in bgp and look erroneous because it's

1041
00:32:00,159 --> 00:32:01,919
it's never advertised normally

1042
00:32:01,919 --> 00:32:03,200
that address block doesn't exist

1043
00:32:03,200 --> 00:32:04,960
normally in the routing system

1044
00:32:04,960 --> 00:32:06,640
uh so the combination of the need to

1045
00:32:06,640 --> 00:32:08,000
fool a lot of adversaries

1046
00:32:08,000 --> 00:32:10,399
and the sub prefix being unusual in the

1047
00:32:10,399 --> 00:32:11,279
first place is

1048
00:32:11,279 --> 00:32:13,120
is likely to set off some sort of

1049
00:32:13,120 --> 00:32:15,440
anomaly detection of reasonable scope

1050
00:32:15,440 --> 00:32:16,720
but it's certainly something we need to

1051
00:32:16,720 --> 00:32:18,960
study more carefully in particular

1052
00:32:18,960 --> 00:32:20,320
we're thinking about ways where the

1053
00:32:20,320 --> 00:32:22,240
vantage points themselves might do bgp

1054
00:32:22,240 --> 00:32:23,760
monitoring since they're the ones most

1055
00:32:23,760 --> 00:32:24,480
likely

1056
00:32:24,480 --> 00:32:27,279
to see the erroneous sub-prefix route

1057
00:32:27,279 --> 00:32:28,799
precisely because they are the ones who

1058
00:32:28,799 --> 00:32:30,159
need to be fooled

1059
00:32:30,159 --> 00:32:33,039
into using it

1060
00:32:33,679 --> 00:32:35,840
very good is there anything else you

1061
00:32:35,840 --> 00:32:38,399
would like to add

1062
00:32:38,559 --> 00:32:41,600
to to your talk

1063
00:32:41,600 --> 00:32:44,080
anything else yeah i mean my first of

1064
00:32:44,080 --> 00:32:45,679
all my hope is that more certificate

1065
00:32:45,679 --> 00:32:47,519
authorities adopt these defenses because

1066
00:32:47,519 --> 00:32:48,960
although it's great that let's encrypt

1067
00:32:48,960 --> 00:32:50,399
has and it's been really fantastic

1068
00:32:50,399 --> 00:32:51,679
working with them

1069
00:32:51,679 --> 00:32:53,919
this whole attack is is the defenses are

1070
00:32:53,919 --> 00:32:55,679
only as strong as the weakest link

1071
00:32:55,679 --> 00:32:57,279
and so someone can go to a different

1072
00:32:57,279 --> 00:32:58,880
certificate authority other than let's

1073
00:32:58,880 --> 00:32:59,760
encrypt

1074
00:32:59,760 --> 00:33:01,600
and potentially attack those certificate

1075
00:33:01,600 --> 00:33:03,200
authorities so really getting

1076
00:33:03,200 --> 00:33:05,039
broad deployment of defenses whether

1077
00:33:05,039 --> 00:33:06,640
based on bgp monitoring

1078
00:33:06,640 --> 00:33:09,279
or based on data plane validation like

1079
00:33:09,279 --> 00:33:10,480
we've done here

1080
00:33:10,480 --> 00:33:12,000
i think it's necessary otherwise

1081
00:33:12,000 --> 00:33:13,600
adversaries will just go to whichever

1082
00:33:13,600 --> 00:33:15,120
certificate authority they're able to

1083
00:33:15,120 --> 00:33:16,559
most easily attack

1084
00:33:16,559 --> 00:33:18,640
um of course let's encrypt is the most

1085
00:33:18,640 --> 00:33:20,320
popular one so it's important that it's

1086
00:33:20,320 --> 00:33:22,159
defended against but it's not sufficient

1087
00:33:22,159 --> 00:33:24,480
in its own right

1088
00:33:24,480 --> 00:33:26,880
uh thank you um another question came up

1089
00:33:26,880 --> 00:33:28,159
is uh

1090
00:33:28,159 --> 00:33:30,399
speaking of dns hijacks uh what

1091
00:33:30,399 --> 00:33:32,399
additional levels of security would dns

1092
00:33:32,399 --> 00:33:33,039
sec

1093
00:33:33,039 --> 00:33:36,880
add to uh protect dns and services

1094
00:33:36,880 --> 00:33:38,480
right so here particularly for the

1095
00:33:38,480 --> 00:33:40,399
attacks we're worried about dnssec would

1096
00:33:40,399 --> 00:33:40,880
prevent

1097
00:33:40,880 --> 00:33:43,519
the the domain validation attack going

1098
00:33:43,519 --> 00:33:45,120
through dns because the adversary

1099
00:33:45,120 --> 00:33:46,320
wouldn't be able to generate the

1100
00:33:46,320 --> 00:33:47,919
appropriate signature on the dns

1101
00:33:47,919 --> 00:33:49,440
responses so i think that

1102
00:33:49,440 --> 00:33:50,960
dns sect deployment would help a great

1103
00:33:50,960 --> 00:33:53,519
deal in concert with dns based

1104
00:33:53,519 --> 00:33:55,760
domain validation uh so that that's

1105
00:33:55,760 --> 00:33:56,640
certainly a help

1106
00:33:56,640 --> 00:33:58,880
also note that if dns based domain

1107
00:33:58,880 --> 00:34:00,480
validation is done it helps with one of

1108
00:34:00,480 --> 00:34:01,760
the issues that came up in our

1109
00:34:01,760 --> 00:34:02,880
deployment

1110
00:34:02,880 --> 00:34:05,440
which is that sometimes a domain would

1111
00:34:05,440 --> 00:34:06,640
go to let's encrypt

1112
00:34:06,640 --> 00:34:08,560
before their dns information had even

1113
00:34:08,560 --> 00:34:09,839
fully propagated

1114
00:34:09,839 --> 00:34:11,599
uh and that caused confusion where the

1115
00:34:11,599 --> 00:34:13,199
vantage points would sometimes be unable

1116
00:34:13,199 --> 00:34:15,280
to do their own dns resolution

1117
00:34:15,280 --> 00:34:16,879
and so in some sense if you could get

1118
00:34:16,879 --> 00:34:19,359
your dns ducks in order first as a

1119
00:34:19,359 --> 00:34:20,399
domain owner

1120
00:34:20,399 --> 00:34:22,239
before you go and start getting ready to

1121
00:34:22,239 --> 00:34:23,679
do https

1122
00:34:23,679 --> 00:34:25,679
uh that would have advantages as well

1123
00:34:25,679 --> 00:34:27,679
and finally dns has ways to

1124
00:34:27,679 --> 00:34:29,599
require that only certain certificate

1125
00:34:29,599 --> 00:34:31,119
authorities be viewed as

1126
00:34:31,119 --> 00:34:34,159
authorized to to respond on behalf of

1127
00:34:34,159 --> 00:34:36,000
your certificates and so that can also

1128
00:34:36,000 --> 00:34:37,520
provide an additional way for sites to

1129
00:34:37,520 --> 00:34:38,639
protect themselves

1130
00:34:38,639 --> 00:34:40,320
so that adversaries wouldn't be able to

1131
00:34:40,320 --> 00:34:41,760
go after these weaker certificate

1132
00:34:41,760 --> 00:34:43,280
authorities and request

1133
00:34:43,280 --> 00:34:45,359
uh certificates in their behalf so i

1134
00:34:45,359 --> 00:34:46,639
think there's a lot that could be done

1135
00:34:46,639 --> 00:34:46,879
in

1136
00:34:46,879 --> 00:34:49,839
using dns to help help improve the

1137
00:34:49,839 --> 00:34:51,760
defenses against these kinds of attacks

1138
00:34:51,760 --> 00:34:52,320
and of course

1139
00:34:52,320 --> 00:34:54,079
securing dns is important in its own

1140
00:34:54,079 --> 00:34:57,040
right as well

1141
00:34:57,040 --> 00:34:59,520
okay very good you touched briefly on

1142
00:34:59,520 --> 00:35:01,839
rpki

1143
00:35:01,839 --> 00:35:03,920
you believe rpki is something that will

1144
00:35:03,920 --> 00:35:04,960
help uh

1145
00:35:04,960 --> 00:35:06,079
solve a lot of those problems we're

1146
00:35:06,079 --> 00:35:08,720
seeing with hijacks yeah i think it's

1147
00:35:08,720 --> 00:35:10,160
very important just the incremental

1148
00:35:10,160 --> 00:35:11,920
deployment makes it tricky to defend

1149
00:35:11,920 --> 00:35:13,920
against a strategic adversary so

1150
00:35:13,920 --> 00:35:15,920
it's it certainly goes after

1151
00:35:15,920 --> 00:35:17,760
incrementally more sophisticated attacks

1152
00:35:17,760 --> 00:35:19,359
as it gets more widely deployed and more

1153
00:35:19,359 --> 00:35:21,520
widely used and that's clearly important

1154
00:35:21,520 --> 00:35:23,119
so i sort of view this the work in this

1155
00:35:23,119 --> 00:35:24,960
talk in two ways one is to say hey there

1156
00:35:24,960 --> 00:35:25,359
are

1157
00:35:25,359 --> 00:35:27,680
attacks rpki can't fully defend against

1158
00:35:27,680 --> 00:35:29,280
today because its full vision hasn't

1159
00:35:29,280 --> 00:35:30,480
been yet realized

1160
00:35:30,480 --> 00:35:31,680
and we should make sure to defend

1161
00:35:31,680 --> 00:35:33,599
against those attacks in the meantime

1162
00:35:33,599 --> 00:35:35,200
but it's really inefficient for every

1163
00:35:35,200 --> 00:35:37,040
service on the internet to have to go

1164
00:35:37,040 --> 00:35:38,240
through the exercise of doing

1165
00:35:38,240 --> 00:35:40,160
application specific defenses

1166
00:35:40,160 --> 00:35:41,839
it's worth it for tor it's worth it for

1167
00:35:41,839 --> 00:35:43,200
certificate authorities

1168
00:35:43,200 --> 00:35:45,200
maybe it's worth it for blockchain too

1169
00:35:45,200 --> 00:35:46,800
but ultimately it'd be better if the

1170
00:35:46,800 --> 00:35:48,720
routing system itself made these

1171
00:35:48,720 --> 00:35:50,640
uh attacks much less difficult much more

1172
00:35:50,640 --> 00:35:52,480
difficult to do so i don't see the two

1173
00:35:52,480 --> 00:35:54,000
things in conflict i mean it's sort of

1174
00:35:54,000 --> 00:35:56,240
this is a way to limp along while while

1175
00:35:56,240 --> 00:35:58,400
we get bgp security to be more

1176
00:35:58,400 --> 00:36:00,000
widely deployed and and more

1177
00:36:00,000 --> 00:36:01,760
sophisticated in the attacks it can

1178
00:36:01,760 --> 00:36:02,560
defend against

1179
00:36:02,560 --> 00:36:04,240
and yet i hope it also raises awareness

1180
00:36:04,240 --> 00:36:05,760
about the need to do that

1181
00:36:05,760 --> 00:36:07,599
actually because of the fact that these

1182
00:36:07,599 --> 00:36:09,119
important applications

1183
00:36:09,119 --> 00:36:10,880
uh can't can't make reasonable

1184
00:36:10,880 --> 00:36:12,560
assumptions about the layer beneath them

1185
00:36:12,560 --> 00:36:13,119
without

1186
00:36:13,119 --> 00:36:16,800
without better bgp security

1187
00:36:18,240 --> 00:36:21,280
okay well uh very good uh

1188
00:36:21,280 --> 00:36:22,800
dr rexford thank you very much for

1189
00:36:22,800 --> 00:36:26,210
joining us today

1190
00:36:26,210 --> 00:36:30,400
[Music]

1191
00:36:30,400 --> 00:36:32,480
you

