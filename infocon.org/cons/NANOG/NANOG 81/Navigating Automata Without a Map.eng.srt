1
00:00:01,610 --> 00:00:04,880
[Music]

2
00:00:04,880 --> 00:00:06,480
hello and welcome to my talk

3
00:00:06,480 --> 00:00:09,840
i'm david g um i blog on dave.dev

4
00:00:09,840 --> 00:00:12,240
previously of ipengineer.net

5
00:00:12,240 --> 00:00:14,160
and i just have to throw out there that

6
00:00:14,160 --> 00:00:16,079
i happen to work for a big bad vendor

7
00:00:16,079 --> 00:00:18,000
in juniper i won't be talking about

8
00:00:18,000 --> 00:00:20,080
juniper uh in this presentation

9
00:00:20,080 --> 00:00:21,840
it's not a sales pitch and this really

10
00:00:21,840 --> 00:00:24,400
is a brain dump of some

11
00:00:24,400 --> 00:00:27,439
kind of scientific query quandaries

12
00:00:27,439 --> 00:00:29,359
frustration and some other kind of

13
00:00:29,359 --> 00:00:30,480
things i've been dealing with for the

14
00:00:30,480 --> 00:00:32,479
last 12 months and all of that

15
00:00:32,479 --> 00:00:36,239
frustration is embedded into this deck

16
00:00:36,239 --> 00:00:38,879
now i will say as well part of this talk

17
00:00:38,879 --> 00:00:40,320
has been given at one of the irish

18
00:00:40,320 --> 00:00:41,680
network operator groups

19
00:00:41,680 --> 00:00:43,600
um it was quite well received lots of

20
00:00:43,600 --> 00:00:45,440
interest uh from both the scientific

21
00:00:45,440 --> 00:00:47,039
community and just kind of from the uh

22
00:00:47,039 --> 00:00:48,000
the normal cynics

23
00:00:48,000 --> 00:00:49,840
so hopefully if you take nothing away

24
00:00:49,840 --> 00:00:51,680
from this um other than a bit of

25
00:00:51,680 --> 00:00:52,399
frustration

26
00:00:52,399 --> 00:00:54,800
maybe the the presentation was a success

27
00:00:54,800 --> 00:00:57,120
so i've been in the networking space and

28
00:00:57,120 --> 00:00:58,320
the software space

29
00:00:58,320 --> 00:01:01,280
for quite a while now and and what kind

30
00:01:01,280 --> 00:01:03,039
of frustrated me early on

31
00:01:03,039 --> 00:01:05,040
was how everybody seems to jump to a

32
00:01:05,040 --> 00:01:07,119
device run some cli commands to try and

33
00:01:07,119 --> 00:01:08,240
figure out

34
00:01:08,240 --> 00:01:11,520
what a node in a graph was doing

35
00:01:11,520 --> 00:01:13,600
and graph theory is one of those things

36
00:01:13,600 --> 00:01:15,439
where i'm no mathematician i'm not an

37
00:01:15,439 --> 00:01:16,240
expert

38
00:01:16,240 --> 00:01:18,159
i've learned enough to be dangerous but

39
00:01:18,159 --> 00:01:19,920
from what i did learn

40
00:01:19,920 --> 00:01:22,080
it turns out that if you apply the

41
00:01:22,080 --> 00:01:23,600
fundamentals of graph theory to

42
00:01:23,600 --> 00:01:25,040
everything in networking

43
00:01:25,040 --> 00:01:26,960
then it really becomes a data traversal

44
00:01:26,960 --> 00:01:28,159
problem in a graph

45
00:01:28,159 --> 00:01:31,200
um and networking therefore you can see

46
00:01:31,200 --> 00:01:31,840
from the

47
00:01:31,840 --> 00:01:32,880
the graphic on the right side of the

48
00:01:32,880 --> 00:01:35,040
screen there can be represented quite

49
00:01:35,040 --> 00:01:35,600
easily

50
00:01:35,600 --> 00:01:38,000
uh in a in a graph database that the

51
00:01:38,000 --> 00:01:38,720
problem

52
00:01:38,720 --> 00:01:40,720
ultimately is getting data meaningful

53
00:01:40,720 --> 00:01:42,799
data from those graph nodes

54
00:01:42,799 --> 00:01:44,479
so that might be a firewall it might be

55
00:01:44,479 --> 00:01:46,320
a router it might be a switch

56
00:01:46,320 --> 00:01:48,960
and luckily there's lots of industry

57
00:01:48,960 --> 00:01:50,640
movements happening to help us do that

58
00:01:50,640 --> 00:01:52,479
stuff

59
00:01:52,479 --> 00:01:54,479
graphs can also contain more than just

60
00:01:54,479 --> 00:01:56,079
states so we can actually contain

61
00:01:56,079 --> 00:01:57,520
workflows on them as well

62
00:01:57,520 --> 00:01:59,439
uh that means we can deal with things

63
00:01:59,439 --> 00:02:01,840
like configuration management as well as

64
00:02:01,840 --> 00:02:03,680
operational states and what's really

65
00:02:03,680 --> 00:02:04,640
interesting

66
00:02:04,640 --> 00:02:06,159
is when we start talking about

67
00:02:06,159 --> 00:02:08,080
self-driving but ultimately

68
00:02:08,080 --> 00:02:09,758
and this is really the title of the talk

69
00:02:09,758 --> 00:02:11,200
i kind of started viewing network

70
00:02:11,200 --> 00:02:12,160
operations

71
00:02:12,160 --> 00:02:14,000
as a load of pirates going off on the

72
00:02:14,000 --> 00:02:15,920
70s looking for treasure but they

73
00:02:15,920 --> 00:02:17,760
didn't have a map and i it's kind of

74
00:02:17,760 --> 00:02:18,959
stuck with me for quite a while that

75
00:02:18,959 --> 00:02:20,640
this is a weird state of affairs that we

76
00:02:20,640 --> 00:02:21,599
have

77
00:02:21,599 --> 00:02:24,319
in networking

78
00:02:24,959 --> 00:02:27,599
so anybody that's done anything at all

79
00:02:27,599 --> 00:02:28,080
in

80
00:02:28,080 --> 00:02:31,280
automation network automation we'll see

81
00:02:31,280 --> 00:02:32,080
immediately

82
00:02:32,080 --> 00:02:35,280
the relationship between a graph cyclic

83
00:02:35,280 --> 00:02:38,160
graphs as in there is a start point

84
00:02:38,160 --> 00:02:40,000
uh a series of nodes you can traverse

85
00:02:40,000 --> 00:02:41,440
those nodes and you can pass data

86
00:02:41,440 --> 00:02:42,879
through those nodes or the nodes may

87
00:02:42,879 --> 00:02:44,000
affect the data

88
00:02:44,000 --> 00:02:46,800
uh in another system uh and ultimately

89
00:02:46,800 --> 00:02:47,680
they have

90
00:02:47,680 --> 00:02:49,760
an endpoint some graphs are entirely

91
00:02:49,760 --> 00:02:51,599
cyclical and they never exit a lot of

92
00:02:51,599 --> 00:02:53,120
software systems can be modeled like

93
00:02:53,120 --> 00:02:53,840
this

94
00:02:53,840 --> 00:02:56,480
some people also refer to these as label

95
00:02:56,480 --> 00:02:58,400
transition systems and if

96
00:02:58,400 --> 00:03:00,239
again if mathematics is your thing some

97
00:03:00,239 --> 00:03:02,080
of this is really really quite simple

98
00:03:02,080 --> 00:03:04,640
but once you start fundamentally seeing

99
00:03:04,640 --> 00:03:05,760
how to change

100
00:03:05,760 --> 00:03:08,879
a node so again a network device

101
00:03:08,879 --> 00:03:10,800
in a very very simple way that takes

102
00:03:10,800 --> 00:03:12,959
part in a much larger graph

103
00:03:12,959 --> 00:03:15,280
the the notions of graph theory really

104
00:03:15,280 --> 00:03:17,519
become uh quite important

105
00:03:17,519 --> 00:03:19,040
and then we start talking about like

106
00:03:19,040 --> 00:03:20,800
products uh and how

107
00:03:20,800 --> 00:03:23,040
kind of um i guess those turnkey

108
00:03:23,040 --> 00:03:25,360
products like cisco's aci

109
00:03:25,360 --> 00:03:29,040
they really embrace certain aspects

110
00:03:29,040 --> 00:03:30,879
of of graph theory and even if you go

111
00:03:30,879 --> 00:03:32,400
and try and design a service you're very

112
00:03:32,400 --> 00:03:34,000
much in this mode of thinking when you

113
00:03:34,000 --> 00:03:35,840
when you design these things

114
00:03:35,840 --> 00:03:37,840
another beautiful thing about this is

115
00:03:37,840 --> 00:03:39,920
networking really is never in an end

116
00:03:39,920 --> 00:03:40,480
state

117
00:03:40,480 --> 00:03:42,000
so even if you're a professional

118
00:03:42,000 --> 00:03:43,760
services person if you're an operations

119
00:03:43,760 --> 00:03:44,720
person

120
00:03:44,720 --> 00:03:46,560
and you're looking at the network as a

121
00:03:46,560 --> 00:03:48,720
means to uh deliver service

122
00:03:48,720 --> 00:03:51,280
as in you you start on monday by friday

123
00:03:51,280 --> 00:03:52,640
your network better be open better

124
00:03:52,640 --> 00:03:53,840
delivering services

125
00:03:53,840 --> 00:03:55,439
your exit might be friday but the

126
00:03:55,439 --> 00:03:57,280
network itself now never

127
00:03:57,280 --> 00:03:59,360
has an end state there are always

128
00:03:59,360 --> 00:04:01,680
changes moves ads and changes happening

129
00:04:01,680 --> 00:04:04,319
um and the graphs give you a really

130
00:04:04,319 --> 00:04:05,040
powerful

131
00:04:05,040 --> 00:04:08,000
aspect here as in you can not only model

132
00:04:08,000 --> 00:04:08,480
um

133
00:04:08,480 --> 00:04:10,400
what is what is possible what you need

134
00:04:10,400 --> 00:04:12,319
to do you can verify that it has been

135
00:04:12,319 --> 00:04:12,879
done

136
00:04:12,879 --> 00:04:14,640
but there's enough data embedded into

137
00:04:14,640 --> 00:04:16,959
the system um to always allow you

138
00:04:16,959 --> 00:04:20,000
to move forward on this kind of um

139
00:04:20,000 --> 00:04:21,519
infrastructure without an end state kind

140
00:04:21,519 --> 00:04:23,440
of approach

141
00:04:23,440 --> 00:04:25,759
but the more you tend to look at

142
00:04:25,759 --> 00:04:27,840
automation systems and

143
00:04:27,840 --> 00:04:30,160
and whether that's cellular automation

144
00:04:30,160 --> 00:04:31,840
or or really really just kind of like

145
00:04:31,840 --> 00:04:32,800
you know simple a

146
00:04:32,800 --> 00:04:35,120
a element a affects element b and

147
00:04:35,120 --> 00:04:36,479
there's some stuff that happens in the

148
00:04:36,479 --> 00:04:37,120
transition

149
00:04:37,120 --> 00:04:40,560
how a affects b um the more you start

150
00:04:40,560 --> 00:04:41,120
breaking

151
00:04:41,120 --> 00:04:43,840
problems down into this space the more i

152
00:04:43,840 --> 00:04:45,360
just got frustrated

153
00:04:45,360 --> 00:04:47,919
so a few years ago having conversations

154
00:04:47,919 --> 00:04:49,040
with kind of fellow

155
00:04:49,040 --> 00:04:51,199
network engineers and really trying to

156
00:04:51,199 --> 00:04:52,800
automate some of these things in

157
00:04:52,800 --> 00:04:54,560
a very meaningful way that we can make

158
00:04:54,560 --> 00:04:56,000
abstract enough where it's not overly

159
00:04:56,000 --> 00:04:58,240
complex but it gives us the power of

160
00:04:58,240 --> 00:04:59,759
things like verification and

161
00:04:59,759 --> 00:05:00,880
assertability

162
00:05:00,880 --> 00:05:02,160
and modeling we want to be able to model

163
00:05:02,160 --> 00:05:04,560
these things um and and it just

164
00:05:04,560 --> 00:05:06,639
the more i thought about it the more my

165
00:05:06,639 --> 00:05:08,639
gears got cranked out of line in terms

166
00:05:08,639 --> 00:05:09,120
of

167
00:05:09,120 --> 00:05:12,639
being frustrated um and the frustration

168
00:05:12,639 --> 00:05:13,520
ultimately came

169
00:05:13,520 --> 00:05:15,120
down to me analyzing the industry at

170
00:05:15,120 --> 00:05:17,199
great length and then having a bit of a

171
00:05:17,199 --> 00:05:18,800
nervous breakdown not a real nervous

172
00:05:18,800 --> 00:05:20,400
breakdown but a bit of a a bit of an

173
00:05:20,400 --> 00:05:21,120
issue

174
00:05:21,120 --> 00:05:22,880
um because all it seems that we've

175
00:05:22,880 --> 00:05:24,960
really perfected at this point is we've

176
00:05:24,960 --> 00:05:26,800
automated the keyboard

177
00:05:26,800 --> 00:05:28,880
we've taken what otherwise would be

178
00:05:28,880 --> 00:05:30,400
generating some human

179
00:05:30,400 --> 00:05:32,000
uh readable and human kind of

180
00:05:32,000 --> 00:05:33,600
generatable configuration

181
00:05:33,600 --> 00:05:36,560
and we've thrown it right into um a

182
00:05:36,560 --> 00:05:37,680
machine and we said hey

183
00:05:37,680 --> 00:05:39,520
automate this for us so what have we

184
00:05:39,520 --> 00:05:41,680
really done well we we've separated the

185
00:05:41,680 --> 00:05:43,759
data that typically goes into a set of

186
00:05:43,759 --> 00:05:44,639
repetitive

187
00:05:44,639 --> 00:05:47,199
repetitious uh commands so we've given

188
00:05:47,199 --> 00:05:49,360
that over to a tool like ansible puppet

189
00:05:49,360 --> 00:05:50,639
or chef

190
00:05:50,639 --> 00:05:52,800
and then we have this magic module that

191
00:05:52,800 --> 00:05:54,639
generates and renders new configuration

192
00:05:54,639 --> 00:05:56,319
and pushes it down to the device

193
00:05:56,319 --> 00:05:58,720
and if we look back and if we widen our

194
00:05:58,720 --> 00:06:01,280
blinkers in terms of this very

195
00:06:01,280 --> 00:06:03,039
high level graph approach of how

196
00:06:03,039 --> 00:06:04,639
everything is connected and how

197
00:06:04,639 --> 00:06:06,880
bits of data whether that's config data

198
00:06:06,880 --> 00:06:08,479
or operational data flows end to end

199
00:06:08,479 --> 00:06:10,080
that allows us to model

200
00:06:10,080 --> 00:06:11,759
all we've done at this point is we've

201
00:06:11,759 --> 00:06:14,400
sped up uh how we get config from our

202
00:06:14,400 --> 00:06:16,160
brains or from designs

203
00:06:16,160 --> 00:06:19,440
into um into a device we still haven't

204
00:06:19,440 --> 00:06:20,639
got any real

205
00:06:20,639 --> 00:06:23,199
uh any real closer to to automation an

206
00:06:23,199 --> 00:06:24,639
automator

207
00:06:24,639 --> 00:06:26,880
um comes from a greek word that i i

208
00:06:26,880 --> 00:06:28,319
can't write or pronounce

209
00:06:28,319 --> 00:06:30,720
uh but the rough translation is for self

210
00:06:30,720 --> 00:06:32,080
making

211
00:06:32,080 --> 00:06:34,880
and ansible and terraform and all of the

212
00:06:34,880 --> 00:06:36,639
current tools and infrastructure

213
00:06:36,639 --> 00:06:40,160
as co tools uh automated today

214
00:06:40,160 --> 00:06:42,160
self-making is not you know we we've got

215
00:06:42,160 --> 00:06:43,759
a very long way to go in terms of

216
00:06:43,759 --> 00:06:46,160
really having that kind of the power we

217
00:06:46,160 --> 00:06:47,840
all talk about

218
00:06:47,840 --> 00:06:49,360
but what about unit test and all these

219
00:06:49,360 --> 00:06:50,720
things these are all great steps and i'm

220
00:06:50,720 --> 00:06:51,360
not saying

221
00:06:51,360 --> 00:06:53,520
it isn't good enough but i'm also saying

222
00:06:53,520 --> 00:06:54,560
it isn't good enough

223
00:06:54,560 --> 00:06:56,080
from an automation point of view i

224
00:06:56,080 --> 00:06:57,919
always think about things

225
00:06:57,919 --> 00:06:59,360
in these kind of huge kind of chronic

226
00:06:59,360 --> 00:07:02,000
connected graphs not so much as cycle

227
00:07:02,000 --> 00:07:04,639
times and going through tools which

228
00:07:04,639 --> 00:07:05,599
leads me to some

229
00:07:05,599 --> 00:07:07,360
to some frustration as you can probably

230
00:07:07,360 --> 00:07:08,960
hear my voice um

231
00:07:08,960 --> 00:07:10,800
so where are we as an industry if we

232
00:07:10,800 --> 00:07:12,319
take these kind of viewpoints

233
00:07:12,319 --> 00:07:14,560
into account well we have the business

234
00:07:14,560 --> 00:07:16,000
and the business sits on top of a

235
00:07:16,000 --> 00:07:16,800
network

236
00:07:16,800 --> 00:07:18,880
uh we have different teams managing that

237
00:07:18,880 --> 00:07:20,240
and really what we've done is we've

238
00:07:20,240 --> 00:07:22,080
affected we've affected a really tiny

239
00:07:22,080 --> 00:07:23,759
aspect of our business we've maybe sped

240
00:07:23,759 --> 00:07:25,039
some of our jobs up

241
00:07:25,039 --> 00:07:27,199
uh but we haven't necessarily improved

242
00:07:27,199 --> 00:07:29,039
anything um we might have got a little

243
00:07:29,039 --> 00:07:30,160
bit more time back in the day which

244
00:07:30,160 --> 00:07:31,759
might allow us to change some things

245
00:07:31,759 --> 00:07:33,360
uh but we haven't really gained any

246
00:07:33,360 --> 00:07:35,360
awareness of anything around us we've

247
00:07:35,360 --> 00:07:37,039
not managed to

248
00:07:37,039 --> 00:07:38,800
query the systems and all the systems

249
00:07:38,800 --> 00:07:41,440
and how they're dependent on each other

250
00:07:41,440 --> 00:07:42,960
um it's a bit of a bit of a poor state

251
00:07:42,960 --> 00:07:44,800
of affairs really

252
00:07:44,800 --> 00:07:48,960
um and again um just if if you're new to

253
00:07:48,960 --> 00:07:51,039
network automation um i'm not trying to

254
00:07:51,039 --> 00:07:52,240
put you off

255
00:07:52,240 --> 00:07:54,639
the entry level very much is you grab

256
00:07:54,639 --> 00:07:55,599
some templates

257
00:07:55,599 --> 00:07:56,960
and that might be in the parlance of

258
00:07:56,960 --> 00:07:58,800
whatever device you have so

259
00:07:58,800 --> 00:08:00,639
if i think about you know cisco might be

260
00:08:00,639 --> 00:08:01,919
ios there might be some

261
00:08:01,919 --> 00:08:04,879
some duos there might be some vios um

262
00:08:04,879 --> 00:08:06,479
whatever so we create some human

263
00:08:06,479 --> 00:08:08,400
readable templates we remove

264
00:08:08,400 --> 00:08:10,879
the inputs um we then have host

265
00:08:10,879 --> 00:08:12,240
information of where the data is going

266
00:08:12,240 --> 00:08:13,919
to go we have variables then that go

267
00:08:13,919 --> 00:08:15,680
back into the templates that might be

268
00:08:15,680 --> 00:08:18,639
a vlan number a description uh we might

269
00:08:18,639 --> 00:08:20,160
have some other other directives but we

270
00:08:20,160 --> 00:08:21,680
put all those things together we render

271
00:08:21,680 --> 00:08:22,960
some config viral tool

272
00:08:22,960 --> 00:08:24,479
and then we almost push blindly the

273
00:08:24,479 --> 00:08:27,759
device and going back to the graph piece

274
00:08:27,759 --> 00:08:29,680
we might have an instance where we have

275
00:08:29,680 --> 00:08:31,919
two empty uh empty devices or

276
00:08:31,919 --> 00:08:33,360
we're trying to stand up a service so

277
00:08:33,360 --> 00:08:35,279
maybe the interfaces on these devices

278
00:08:35,279 --> 00:08:36,640
the device is doing other things but we

279
00:08:36,640 --> 00:08:38,080
have two new revenue ports that we need

280
00:08:38,080 --> 00:08:39,679
to bring up and face each other

281
00:08:39,679 --> 00:08:42,080
so we bring up a port we stick an ip

282
00:08:42,080 --> 00:08:42,719
address on

283
00:08:42,719 --> 00:08:44,800
um so you can see inet dot one slash

284
00:08:44,800 --> 00:08:46,720
thirty uh in the middle set of routers

285
00:08:46,720 --> 00:08:47,279
there

286
00:08:47,279 --> 00:08:49,279
and i net dot two slash thirty on the on

287
00:08:49,279 --> 00:08:51,200
the bottom uh on the bottom router there

288
00:08:51,200 --> 00:08:52,640
if we've done our job right and the

289
00:08:52,640 --> 00:08:54,080
templates are correct and the host

290
00:08:54,080 --> 00:08:55,519
variables are correct and all everything

291
00:08:55,519 --> 00:08:56,720
else is correct and the tools have

292
00:08:56,720 --> 00:08:58,560
connected to the right devices and

293
00:08:58,560 --> 00:09:00,320
the devices have accepted these human

294
00:09:00,320 --> 00:09:02,320
readable configs we might get to a point

295
00:09:02,320 --> 00:09:03,920
on the right hand side

296
00:09:03,920 --> 00:09:06,000
where the link comes up successfully but

297
00:09:06,000 --> 00:09:07,680
we've got no guarantees on that and even

298
00:09:07,680 --> 00:09:08,240
if

299
00:09:08,240 --> 00:09:09,920
the argument is presented well what

300
00:09:09,920 --> 00:09:11,760
about databases dave and

301
00:09:11,760 --> 00:09:14,240
what about um yaml files where we can

302
00:09:14,240 --> 00:09:15,440
store all these variables

303
00:09:15,440 --> 00:09:16,880
okay that's that's great but we still

304
00:09:16,880 --> 00:09:18,160
don't get any assurances that all it

305
00:09:18,160 --> 00:09:18,720
means if

306
00:09:18,720 --> 00:09:20,880
we've moved the book somebody else more

307
00:09:20,880 --> 00:09:22,480
diligent now has to manage those

308
00:09:22,480 --> 00:09:24,800
variables further up the stack

309
00:09:24,800 --> 00:09:26,800
so confidence is a bit of a problem here

310
00:09:26,800 --> 00:09:28,560
visibility is a bit of a problem

311
00:09:28,560 --> 00:09:30,080
and growing this thing properly and

312
00:09:30,080 --> 00:09:33,279
organically we still haven't solved

313
00:09:33,279 --> 00:09:35,519
um and then what really made me chuckle

314
00:09:35,519 --> 00:09:36,320
as part of the

315
00:09:36,320 --> 00:09:37,680
the journey in terms of trying to

316
00:09:37,680 --> 00:09:39,760
describe these frustrations i saw a

317
00:09:39,760 --> 00:09:41,120
family guy episode

318
00:09:41,120 --> 00:09:43,120
um so i thought well this is going to

319
00:09:43,120 --> 00:09:44,560
explain things beautifully and it's a

320
00:09:44,560 --> 00:09:45,839
real gear grinder

321
00:09:45,839 --> 00:09:47,839
um it's been really difficult for me to

322
00:09:47,839 --> 00:09:50,000
kind of swallow the state of automation

323
00:09:50,000 --> 00:09:53,120
is probably quite made me um unpopular

324
00:09:53,120 --> 00:09:55,120
maybe especially i'm trying to kind of

325
00:09:55,120 --> 00:09:57,040
quest myself on on social media and keep

326
00:09:57,040 --> 00:09:58,320
myself quiet

327
00:09:58,320 --> 00:10:00,720
um ultimately what's missing in all of

328
00:10:00,720 --> 00:10:02,160
our efforts around automation it's not

329
00:10:02,160 --> 00:10:05,120
the na the the next great library or the

330
00:10:05,120 --> 00:10:06,880
next great tool

331
00:10:06,880 --> 00:10:09,760
it's a graph it's a it's a graph i'm not

332
00:10:09,760 --> 00:10:10,399
going to swear

333
00:10:10,399 --> 00:10:12,399
and it's obviously a light swear word

334
00:10:12,399 --> 00:10:14,160
and the more i think about operations

335
00:10:14,160 --> 00:10:15,920
and all of the challenges and trials and

336
00:10:15,920 --> 00:10:16,959
tribulations

337
00:10:16,959 --> 00:10:18,880
uh if we thought about things more in in

338
00:10:18,880 --> 00:10:20,160
terms of how they're connected

339
00:10:20,160 --> 00:10:22,160
end to end we'd be in a much much much

340
00:10:22,160 --> 00:10:24,000
better place um

341
00:10:24,000 --> 00:10:25,839
jeff sussner is a guy that i want to

342
00:10:25,839 --> 00:10:27,440
just kind of briefly talk about and

343
00:10:27,440 --> 00:10:28,640
he wrote a book called designing

344
00:10:28,640 --> 00:10:30,640
delivery and you think about

345
00:10:30,640 --> 00:10:32,800
problems in terms of product delivery or

346
00:10:32,800 --> 00:10:34,480
service delivery not just

347
00:10:34,480 --> 00:10:36,240
build it throw it over the fence and run

348
00:10:36,240 --> 00:10:38,720
for the hills but how do you

349
00:10:38,720 --> 00:10:40,959
roll out a product deep within the

350
00:10:40,959 --> 00:10:42,560
business to make it harmonious so if

351
00:10:42,560 --> 00:10:43,360
we're gonna

352
00:10:43,360 --> 00:10:45,519
automate the stand up of a service on

353
00:10:45,519 --> 00:10:46,880
the network

354
00:10:46,880 --> 00:10:48,160
we want to do that thing so it's

355
00:10:48,160 --> 00:10:49,440
absolutely reliable but that means

356
00:10:49,440 --> 00:10:51,279
having knowledge of how operations might

357
00:10:51,279 --> 00:10:52,320
want to

358
00:10:52,320 --> 00:10:54,959
um observe that the new service comes up

359
00:10:54,959 --> 00:10:56,800
they might want to take some metrics

360
00:10:56,800 --> 00:10:58,480
and baseline it for the first few days

361
00:10:58,480 --> 00:10:59,839
to make sure there aren't any snags or

362
00:10:59,839 --> 00:11:00,160
any

363
00:11:00,160 --> 00:11:02,160
any weird issues the amount of times

364
00:11:02,160 --> 00:11:03,839
i've seen services come up and they've

365
00:11:03,839 --> 00:11:04,880
not worked and then

366
00:11:04,880 --> 00:11:06,160
you know you put the phone up and you

367
00:11:06,160 --> 00:11:07,519
have a chat with support and you get

368
00:11:07,519 --> 00:11:09,279
nothing but frustration

369
00:11:09,279 --> 00:11:11,760
um and it's really where we are as an

370
00:11:11,760 --> 00:11:13,120
industry and i think we've gone

371
00:11:13,120 --> 00:11:15,440
so far down the path of making

372
00:11:15,440 --> 00:11:17,040
everything efficient and everything so

373
00:11:17,040 --> 00:11:18,560
damn optimal

374
00:11:18,560 --> 00:11:20,800
we've missed the arts as well of

375
00:11:20,800 --> 00:11:23,760
injecting change into the business

376
00:11:23,760 --> 00:11:25,279
which brings me right back to the graph

377
00:11:25,279 --> 00:11:27,200
because if we can model everything onto

378
00:11:27,200 --> 00:11:28,000
a a

379
00:11:28,000 --> 00:11:29,680
very large graph we can see how

380
00:11:29,680 --> 00:11:31,120
everything affects each other how

381
00:11:31,120 --> 00:11:32,320
everything is related

382
00:11:32,320 --> 00:11:34,160
even operations can work on the same

383
00:11:34,160 --> 00:11:35,360
system

384
00:11:35,360 --> 00:11:36,720
instead of having one system for

385
00:11:36,720 --> 00:11:38,560
provisioning and once one system for

386
00:11:38,560 --> 00:11:39,519
monitoring

387
00:11:39,519 --> 00:11:41,680
and alerting and auto remediation

388
00:11:41,680 --> 00:11:42,560
everything else

389
00:11:42,560 --> 00:11:44,800
um i still see that businesses is

390
00:11:44,800 --> 00:11:46,240
massively fragmented

391
00:11:46,240 --> 00:11:49,760
um and the the kind of traditional i say

392
00:11:49,760 --> 00:11:51,760
traditional classic network automation

393
00:11:51,760 --> 00:11:52,959
approaches where really we're kind of

394
00:11:52,959 --> 00:11:54,160
stuck in the lands

395
00:11:54,160 --> 00:11:57,839
uh of tools like ansible or

396
00:11:57,839 --> 00:12:00,480
independent um efforts so take a python

397
00:12:00,480 --> 00:12:02,079
library write some scripts

398
00:12:02,079 --> 00:12:04,880
um well big news a lot of people were

399
00:12:04,880 --> 00:12:06,000
doing this with pearl

400
00:12:06,000 --> 00:12:08,880
years and years and years ago and um and

401
00:12:08,880 --> 00:12:09,519
even

402
00:12:09,519 --> 00:12:11,279
languages like php just because we

403
00:12:11,279 --> 00:12:12,880
change language we pick a new tool up it

404
00:12:12,880 --> 00:12:14,160
doesn't mean we've actually progressed

405
00:12:14,160 --> 00:12:14,800
it's just

406
00:12:14,800 --> 00:12:17,200
the same old thing with a new name um

407
00:12:17,200 --> 00:12:18,399
but unfortunately

408
00:12:18,399 --> 00:12:21,600
it's not progression um and this

409
00:12:21,600 --> 00:12:23,760
is again it's another gripe it really

410
00:12:23,760 --> 00:12:25,519
grinds my keys that we talk about dev

411
00:12:25,519 --> 00:12:29,200
and devops and secops and sass ops

412
00:12:29,200 --> 00:12:30,880
we're not really improving things we can

413
00:12:30,880 --> 00:12:32,399
talk about it we can be aware of it

414
00:12:32,399 --> 00:12:34,000
having awareness and reading the books

415
00:12:34,000 --> 00:12:36,320
doesn't really move us any more forward

416
00:12:36,320 --> 00:12:38,720
and the more the more i deal with this

417
00:12:38,720 --> 00:12:40,480
the more frustrated i get to a point

418
00:12:40,480 --> 00:12:41,040
where

419
00:12:41,040 --> 00:12:43,040
um this is where this this presentation

420
00:12:43,040 --> 00:12:44,560
came around um so back

421
00:12:44,560 --> 00:12:46,000
back in the eye nog days somebody said

422
00:12:46,000 --> 00:12:48,240
ah you know we know you've uh you talk

423
00:12:48,240 --> 00:12:49,519
about this stuff a lot you're frustrated

424
00:12:49,519 --> 00:12:50,720
with this do you want to present it and

425
00:12:50,720 --> 00:12:51,040
i

426
00:12:51,040 --> 00:12:52,959
did because all i can do is get angry

427
00:12:52,959 --> 00:12:55,040
about this stuff there's this great big

428
00:12:55,040 --> 00:12:57,279
black hole in the middle uh of every

429
00:12:57,279 --> 00:12:58,880
automation system and even if we think

430
00:12:58,880 --> 00:12:59,519
about

431
00:12:59,519 --> 00:13:02,000
the the the road that we've tried we

432
00:13:02,000 --> 00:13:04,160
talk about things like open daylight and

433
00:13:04,160 --> 00:13:05,680
yeah but we can go netconf from there to

434
00:13:05,680 --> 00:13:08,160
here um the information that goes into

435
00:13:08,160 --> 00:13:08,959
those systems

436
00:13:08,959 --> 00:13:10,959
is still quite isolated it still comes

437
00:13:10,959 --> 00:13:12,800
from a spreadsheet it still comes from

438
00:13:12,800 --> 00:13:16,240
an isolated database um there's no great

439
00:13:16,240 --> 00:13:20,000
um record system of record underneath to

440
00:13:20,000 --> 00:13:21,680
help us analyze verify

441
00:13:21,680 --> 00:13:24,000
query in in one kind of and i don't want

442
00:13:24,000 --> 00:13:25,519
to say pane of glass but i almost want

443
00:13:25,519 --> 00:13:28,000
to say one layer of normalization

444
00:13:28,000 --> 00:13:30,560
um and the panacea really is if we can

445
00:13:30,560 --> 00:13:32,639
bring all these things together

446
00:13:32,639 --> 00:13:35,760
um and and move things forward uh

447
00:13:35,760 --> 00:13:38,480
i can't really underestimate though the

448
00:13:38,480 --> 00:13:40,639
the power of being able to have that

449
00:13:40,639 --> 00:13:42,560
layer of normalization

450
00:13:42,560 --> 00:13:44,800
um and right now we can talk about json

451
00:13:44,800 --> 00:13:47,120
and xml and yaml and python and go and

452
00:13:47,120 --> 00:13:48,320
all these different tools

453
00:13:48,320 --> 00:13:51,360
and all these tools and language formats

454
00:13:51,360 --> 00:13:51,680
and

455
00:13:51,680 --> 00:13:53,120
and metadata types and data

456
00:13:53,120 --> 00:13:55,040
representation systems they're only

457
00:13:55,040 --> 00:13:57,199
tiny elements in a much larger system

458
00:13:57,199 --> 00:13:59,040
and i very much came to the conclusion

459
00:13:59,040 --> 00:14:00,560
as an industry and when we're talking

460
00:14:00,560 --> 00:14:02,000
about network automation and network

461
00:14:02,000 --> 00:14:02,880
orchestration

462
00:14:02,880 --> 00:14:04,720
self-driving self-healing all these

463
00:14:04,720 --> 00:14:07,040
different things that um we actually

464
00:14:07,040 --> 00:14:10,000
lack complete ability to even describe

465
00:14:10,000 --> 00:14:12,480
what it is that we want to do so

466
00:14:12,480 --> 00:14:14,160
i was in electronics way before i was in

467
00:14:14,160 --> 00:14:15,920
networking

468
00:14:15,920 --> 00:14:17,440
and even looking at a little simple

469
00:14:17,440 --> 00:14:18,800
circuit like this immediately you

470
00:14:18,800 --> 00:14:20,800
recognize the components and ultimately

471
00:14:20,800 --> 00:14:22,160
go well i don't need to build this to

472
00:14:22,160 --> 00:14:23,760
understand that the chances are this is

473
00:14:23,760 --> 00:14:25,199
a flip-flop circuit nearly these are

474
00:14:25,199 --> 00:14:25,680
gonna

475
00:14:25,680 --> 00:14:26,639
they're gonna flip-flop between

476
00:14:26,639 --> 00:14:28,000
themselves and then you can go off and

477
00:14:28,000 --> 00:14:29,440
you can take the resistor values and the

478
00:14:29,440 --> 00:14:31,519
capacitor values which are on on the

479
00:14:31,519 --> 00:14:33,120
the diagram unfortunately but then you

480
00:14:33,120 --> 00:14:34,720
could figure out the flash rate through

481
00:14:34,720 --> 00:14:37,360
scientific means we don't have that what

482
00:14:37,360 --> 00:14:38,720
we do in networking

483
00:14:38,720 --> 00:14:41,440
is we've selected a tool and

484
00:14:41,440 --> 00:14:42,880
everything's fantastic we're going to

485
00:14:42,880 --> 00:14:44,480
pay more tax because our business is

486
00:14:44,480 --> 00:14:46,399
going to grow

487
00:14:46,399 --> 00:14:48,079
and it's it's just a little bit

488
00:14:48,079 --> 00:14:50,880
disappointing we're not anywhere

489
00:14:50,880 --> 00:14:53,440
closer to solving this than we were a

490
00:14:53,440 --> 00:14:54,720
few years ago and and

491
00:14:54,720 --> 00:14:56,800
yes there are systems out there they're

492
00:14:56,800 --> 00:14:58,079
kind of dealing with uh

493
00:14:58,079 --> 00:15:01,120
declarative content um and

494
00:15:01,120 --> 00:15:05,120
an intent but in terms of being able to

495
00:15:05,120 --> 00:15:09,120
model drive operate verify assert

496
00:15:09,120 --> 00:15:11,680
and rapidly troubleshoot we can't do

497
00:15:11,680 --> 00:15:13,839
those things in terms of self-driving

498
00:15:13,839 --> 00:15:15,680
how does a car self-drive well we need

499
00:15:15,680 --> 00:15:17,360
an inordinate amount of data coming into

500
00:15:17,360 --> 00:15:18,399
the vehicle to be able to do those

501
00:15:18,399 --> 00:15:19,120
things

502
00:15:19,120 --> 00:15:21,360
um well the data's beginning to hit

503
00:15:21,360 --> 00:15:23,360
devices now through telemetry

504
00:15:23,360 --> 00:15:26,160
um and standardization of data objects

505
00:15:26,160 --> 00:15:27,680
so we can take open config for instance

506
00:15:27,680 --> 00:15:28,880
which is helping us to

507
00:15:28,880 --> 00:15:30,560
bring some tax on i mean some structure

508
00:15:30,560 --> 00:15:32,000
to the data that we need to be able to

509
00:15:32,000 --> 00:15:33,279
build these systems

510
00:15:33,279 --> 00:15:34,720
but i also don't think it's a machine

511
00:15:34,720 --> 00:15:36,000
learning problem a lot of a lot of

512
00:15:36,000 --> 00:15:37,360
people turn around and say well you know

513
00:15:37,360 --> 00:15:38,800
what about ai and ml

514
00:15:38,800 --> 00:15:41,040
well do i really want to trust the uh i

515
00:15:41,040 --> 00:15:42,959
don't know an isp or carrier network do

516
00:15:42,959 --> 00:15:44,800
i want to hand the control over to that

517
00:15:44,800 --> 00:15:46,720
to the equivalent of a two or three year

518
00:15:46,720 --> 00:15:47,199
old

519
00:15:47,199 --> 00:15:48,560
just because there's loads and loads of

520
00:15:48,560 --> 00:15:50,480
data that's gone into those systems

521
00:15:50,480 --> 00:15:52,480
does it really mean that the decision is

522
00:15:52,480 --> 00:15:54,639
going to be made how we want it to be

523
00:15:54,639 --> 00:15:56,160
we can't really trust those systems to

524
00:15:56,160 --> 00:15:58,639
be able to to calculate especially i

525
00:15:58,639 --> 00:15:59,920
think in one of the talks i saw on that

526
00:15:59,920 --> 00:16:00,639
long back

527
00:16:00,639 --> 00:16:02,399
um one of the algorithms i think is one

528
00:16:02,399 --> 00:16:03,759
of the google image algorithms couldn't

529
00:16:03,759 --> 00:16:05,440
tell the difference between a desert and

530
00:16:05,440 --> 00:16:07,440
an apache helicopter you know imagine if

531
00:16:07,440 --> 00:16:09,920
that's a flow spec record oops we we you

532
00:16:09,920 --> 00:16:11,680
know given away the keys to the kingdom

533
00:16:11,680 --> 00:16:13,360
not only have we paid more taxes but the

534
00:16:13,360 --> 00:16:15,600
kingdom has been defeated

535
00:16:15,600 --> 00:16:17,279
um an automator is generally a lot more

536
00:16:17,279 --> 00:16:18,720
complex and this is really the

537
00:16:18,720 --> 00:16:19,920
the bottom line i don't like the reading

538
00:16:19,920 --> 00:16:22,079
from slides too much but it's just more

539
00:16:22,079 --> 00:16:23,839
complex than a set of if else statements

540
00:16:23,839 --> 00:16:25,759
are self-driving and self-healing

541
00:16:25,759 --> 00:16:28,480
um if we have if else statements sure we

542
00:16:28,480 --> 00:16:30,399
can generate a signal that is meaningful

543
00:16:30,399 --> 00:16:32,000
and it has context within the

544
00:16:32,000 --> 00:16:34,079
the bounds of the felt statements but

545
00:16:34,079 --> 00:16:35,279
when it comes to

546
00:16:35,279 --> 00:16:37,360
uh external dependencies and and what

547
00:16:37,360 --> 00:16:39,360
other inputs that we can query for we

548
00:16:39,360 --> 00:16:40,639
don't have good means of doing that

549
00:16:40,639 --> 00:16:42,800
without human getting involved

550
00:16:42,800 --> 00:16:46,399
um so given all of this this chatter

551
00:16:46,399 --> 00:16:49,199
over um over graphs you know where could

552
00:16:49,199 --> 00:16:50,000
we be

553
00:16:50,000 --> 00:16:52,880
well if we could represent configuration

554
00:16:52,880 --> 00:16:53,440
in

555
00:16:53,440 --> 00:16:55,279
our kind of desired state in terms of

556
00:16:55,279 --> 00:16:57,360
graph um and if we could take

557
00:16:57,360 --> 00:16:58,399
information

558
00:16:58,399 --> 00:17:00,079
uh from ops and put it back onto the

559
00:17:00,079 --> 00:17:01,920
same graph we have

560
00:17:01,920 --> 00:17:03,839
two things we have our desired state and

561
00:17:03,839 --> 00:17:05,520
a means to regulate

562
00:17:05,520 --> 00:17:07,839
or coalesce uh the actual real world

563
00:17:07,839 --> 00:17:08,640
devices

564
00:17:08,640 --> 00:17:11,280
um against the the config graph we can

565
00:17:11,280 --> 00:17:12,000
then

566
00:17:12,000 --> 00:17:14,160
keep an open loop open so or a closed

567
00:17:14,160 --> 00:17:15,679
loop sorry we can take information from

568
00:17:15,679 --> 00:17:16,400
the graph

569
00:17:16,400 --> 00:17:17,760
we can push it down to the device and we

570
00:17:17,760 --> 00:17:19,760
can verify in a check based on signals

571
00:17:19,760 --> 00:17:20,559
and events so

572
00:17:20,559 --> 00:17:23,199
say if a commit has been received on a

573
00:17:23,199 --> 00:17:24,079
device

574
00:17:24,079 --> 00:17:26,240
um the the information contained on the

575
00:17:26,240 --> 00:17:27,919
configuration graph

576
00:17:27,919 --> 00:17:29,760
a small subsystem could do a

577
00:17:29,760 --> 00:17:30,960
verification you know is the

578
00:17:30,960 --> 00:17:32,080
configuration of the device

579
00:17:32,080 --> 00:17:34,799
the same as us on the graph um and this

580
00:17:34,799 --> 00:17:35,919
is really quite important because if

581
00:17:35,919 --> 00:17:36,960
only a small

582
00:17:36,960 --> 00:17:38,640
portion of the graph changes we can also

583
00:17:38,640 --> 00:17:40,240
isolate parts of a configuration

584
00:17:40,240 --> 00:17:41,679
standards that we that we know are going

585
00:17:41,679 --> 00:17:42,880
to have changed

586
00:17:42,880 --> 00:17:44,640
which is important if humans are still

587
00:17:44,640 --> 00:17:46,320
fiddling around with other little

588
00:17:46,320 --> 00:17:48,080
pieces of configuration around the edge

589
00:17:48,080 --> 00:17:49,600
of the network which they're invariably

590
00:17:49,600 --> 00:17:50,640
going to do there is no

591
00:17:50,640 --> 00:17:53,360
there is no hard do or don't i think in

592
00:17:53,360 --> 00:17:54,480
this arena

593
00:17:54,480 --> 00:17:56,640
lots of conversations come up with uh to

594
00:17:56,640 --> 00:17:58,240
make automation reliable but let's just

595
00:17:58,240 --> 00:17:59,919
ban the humans well in in that case

596
00:17:59,919 --> 00:18:01,360
actually we slow the business down

597
00:18:01,360 --> 00:18:02,640
because simple problems can't be solved

598
00:18:02,640 --> 00:18:04,160
you know if you ring up a bank

599
00:18:04,160 --> 00:18:06,480
uh i've got a friend who um he took on a

600
00:18:06,480 --> 00:18:08,080
one gigabit uh ethernet connection in

601
00:18:08,080 --> 00:18:09,039
milton keynes

602
00:18:09,039 --> 00:18:11,039
and it turns out um it was a product

603
00:18:11,039 --> 00:18:12,559
that didn't exist it was kind of like a

604
00:18:12,559 --> 00:18:13,600
marketing product

605
00:18:13,600 --> 00:18:14,799
and now he's stuck on the system and

606
00:18:14,799 --> 00:18:16,240
can't get off the system because nobody

607
00:18:16,240 --> 00:18:17,440
built the process to the

608
00:18:17,440 --> 00:18:19,039
to remove him um which is kind of

609
00:18:19,039 --> 00:18:20,960
laughable but it's a good example

610
00:18:20,960 --> 00:18:24,080
if we make hard and cold decisions on on

611
00:18:24,080 --> 00:18:24,559
this

612
00:18:24,559 --> 00:18:26,160
we're going to cause more problems we

613
00:18:26,160 --> 00:18:28,480
have to be flexible so the idea is if

614
00:18:28,480 --> 00:18:30,240
our configuration graph

615
00:18:30,240 --> 00:18:33,440
um is aware of the changes uh that it's

616
00:18:33,440 --> 00:18:34,559
that it's asserting on

617
00:18:34,559 --> 00:18:36,160
on devices on real world device and

618
00:18:36,160 --> 00:18:38,240
there's a system that can

619
00:18:38,240 --> 00:18:40,640
double check for those those changes it

620
00:18:40,640 --> 00:18:42,000
means that somebody else can change

621
00:18:42,000 --> 00:18:44,080
some of the data on the system uh

622
00:18:44,080 --> 00:18:46,000
without fear of the system doing a hard

623
00:18:46,000 --> 00:18:47,679
reset because of you know whole

624
00:18:47,679 --> 00:18:49,200
a small part of configuration has

625
00:18:49,200 --> 00:18:51,280
changed where the system tries to

626
00:18:51,280 --> 00:18:54,960
reinforce um push back um the last known

627
00:18:54,960 --> 00:18:56,559
commit for the whole configuration which

628
00:18:56,559 --> 00:18:58,320
is i think terrifying in my mind's eye

629
00:18:58,320 --> 00:19:00,160
especially if we think about isps

630
00:19:00,160 --> 00:19:01,840
uh and ixps we don't want to be in a

631
00:19:01,840 --> 00:19:03,360
position where we're deleting the whole

632
00:19:03,360 --> 00:19:05,200
configuration regenerating and leaving

633
00:19:05,200 --> 00:19:06,799
it down to the network operating system

634
00:19:06,799 --> 00:19:08,559
to figure out how to do the delta

635
00:19:08,559 --> 00:19:10,240
and i've just realized i've talked about

636
00:19:10,240 --> 00:19:11,760
the config piece quite a

637
00:19:11,760 --> 00:19:14,640
quite a bit there um but the whole the

638
00:19:14,640 --> 00:19:15,840
the union between

639
00:19:15,840 --> 00:19:18,000
ops and configuration almost is like

640
00:19:18,000 --> 00:19:20,000
this kind of devops if if our dev is the

641
00:19:20,000 --> 00:19:20,880
config

642
00:19:20,880 --> 00:19:23,200
and our ops is in terms of kind of this

643
00:19:23,200 --> 00:19:24,799
assertion validation dealing with

644
00:19:24,799 --> 00:19:26,640
failure this kind of constant discovery

645
00:19:26,640 --> 00:19:28,000
and absolute knowledge of what it is

646
00:19:28,000 --> 00:19:29,440
that we've done from the config

647
00:19:29,440 --> 00:19:30,960
we can almost look at this as a dna

648
00:19:30,960 --> 00:19:33,760
system you know our human bodies is

649
00:19:33,760 --> 00:19:35,280
built from a small set of building

650
00:19:35,280 --> 00:19:36,880
blocks but it's actually quite a complex

651
00:19:36,880 --> 00:19:38,559
machine when we look at it

652
00:19:38,559 --> 00:19:40,240
in the kind of cold cold light of day

653
00:19:40,240 --> 00:19:42,160
and that kind of spurred me on

654
00:19:42,160 --> 00:19:44,880
to something else um a lot of our

655
00:19:44,880 --> 00:19:47,039
infrastructure as code tools

656
00:19:47,039 --> 00:19:49,360
are actually really quite simple we've

657
00:19:49,360 --> 00:19:50,400
took a

658
00:19:50,400 --> 00:19:52,880
model from a network operating system

659
00:19:52,880 --> 00:19:54,720
we've then created a data type in some

660
00:19:54,720 --> 00:19:55,360
language

661
00:19:55,360 --> 00:19:57,039
now whether that's been represented in

662
00:19:57,039 --> 00:19:58,559
another another data form it doesn't

663
00:19:58,559 --> 00:19:59,520
really matter

664
00:19:59,520 --> 00:20:02,240
um but it does quite a poor job so if we

665
00:20:02,240 --> 00:20:03,679
think about this as a machine-to-machine

666
00:20:03,679 --> 00:20:04,799
problem and everybody's been talking

667
00:20:04,799 --> 00:20:06,240
about iot and machine to machine

668
00:20:06,240 --> 00:20:07,760
communications well this is one of those

669
00:20:07,760 --> 00:20:08,799
one of those things

670
00:20:08,799 --> 00:20:11,440
um our iac tools our infrastructure as

671
00:20:11,440 --> 00:20:13,120
coat tools don't do a very good job of

672
00:20:13,120 --> 00:20:14,080
talking machine

673
00:20:14,080 --> 00:20:16,720
back to it back to a higher level system

674
00:20:16,720 --> 00:20:17,520
um

675
00:20:17,520 --> 00:20:18,880
there is one tool out there that does

676
00:20:18,880 --> 00:20:20,720
though and that is terrible

677
00:20:20,720 --> 00:20:22,720
and with terraform providing the

678
00:20:22,720 --> 00:20:24,159
southbound provider

679
00:20:24,159 --> 00:20:26,159
that goes off and talks to those devices

680
00:20:26,159 --> 00:20:27,360
is being built with

681
00:20:27,360 --> 00:20:29,039
proper resource handling in mind and

682
00:20:29,039 --> 00:20:30,559
this is not a pass through of cli

683
00:20:30,559 --> 00:20:31,919
commands or s commands which

684
00:20:31,919 --> 00:20:33,600
i've seen a few out there like that but

685
00:20:33,600 --> 00:20:35,039
actual resources so

686
00:20:35,039 --> 00:20:37,280
a bit of a cliche example would be uh

687
00:20:37,280 --> 00:20:38,480
vlans

688
00:20:38,480 --> 00:20:41,360
if we create a vlan in terraform for a

689
00:20:41,360 --> 00:20:43,120
known provider that handles resources

690
00:20:43,120 --> 00:20:45,360
what we'll actually have is a set of

691
00:20:45,360 --> 00:20:47,679
hcl key values that go into the

692
00:20:47,679 --> 00:20:49,120
configuration for that vlan

693
00:20:49,120 --> 00:20:51,200
so that might be a vlan name a vlan

694
00:20:51,200 --> 00:20:53,200
number a vlan description

695
00:20:53,200 --> 00:20:54,960
i plus a few other fields maybe some

696
00:20:54,960 --> 00:20:56,480
ports where it's applied but it's

697
00:20:56,480 --> 00:20:58,320
represented in terms of

698
00:20:58,320 --> 00:21:01,520
a proper resource within um within

699
00:21:01,520 --> 00:21:02,559
terraform

700
00:21:02,559 --> 00:21:04,799
now interestingly terraform itself then

701
00:21:04,799 --> 00:21:06,159
runs a graph

702
00:21:06,159 --> 00:21:08,000
internally in a cyclic graph it

703
00:21:08,000 --> 00:21:09,679
organizes the resources in terms of

704
00:21:09,679 --> 00:21:10,799
dependencies

705
00:21:10,799 --> 00:21:12,720
tells you the operator what it is that

706
00:21:12,720 --> 00:21:14,240
it's going to do and that also might be

707
00:21:14,240 --> 00:21:15,919
to close a delta if there has been a

708
00:21:15,919 --> 00:21:17,280
been a change or a move

709
00:21:17,280 --> 00:21:20,000
uh of data and then using a southbank

710
00:21:20,000 --> 00:21:21,760
connection goes off to a device

711
00:21:21,760 --> 00:21:23,440
and implements said configuration now

712
00:21:23,440 --> 00:21:24,880
what terraform doesn't do

713
00:21:24,880 --> 00:21:26,799
is there isn't a terraform of terraform

714
00:21:26,799 --> 00:21:29,200
so we still have to deal with

715
00:21:29,200 --> 00:21:31,360
directories of configuration per device

716
00:21:31,360 --> 00:21:32,880
but within that device

717
00:21:32,880 --> 00:21:35,760
um ultimately terraform can can handle

718
00:21:35,760 --> 00:21:36,400
um

719
00:21:36,400 --> 00:21:38,960
the the acyclic graph now i've had a

720
00:21:38,960 --> 00:21:40,559
couple of people say well you could have

721
00:21:40,559 --> 00:21:42,080
you could apply terraform to the whole

722
00:21:42,080 --> 00:21:43,520
network wide

723
00:21:43,520 --> 00:21:45,280
but then what you've done unless you go

724
00:21:45,280 --> 00:21:47,200
off and and handle

725
00:21:47,200 --> 00:21:50,400
uh small changes independently um

726
00:21:50,400 --> 00:21:51,679
or if you go off and handle small

727
00:21:51,679 --> 00:21:52,960
changes independently what you end up

728
00:21:52,960 --> 00:21:54,880
with is the kind of master

729
00:21:54,880 --> 00:21:56,799
um let's call it the the umbrella

730
00:21:56,799 --> 00:21:58,159
terraform being relatively unaware of

731
00:21:58,159 --> 00:21:59,200
what's getting gone

732
00:21:59,200 --> 00:22:01,440
so terraform is great if we think about

733
00:22:01,440 --> 00:22:02,880
this per device now the lovely thing is

734
00:22:02,880 --> 00:22:03,760
terraform

735
00:22:03,760 --> 00:22:07,039
with a a provider that's been built the

736
00:22:07,039 --> 00:22:07,520
right way

737
00:22:07,520 --> 00:22:09,679
to handle self-brand resources correctly

738
00:22:09,679 --> 00:22:10,720
it will tell you

739
00:22:10,720 --> 00:22:14,559
in json form about its metadata or

740
00:22:14,559 --> 00:22:16,880
structure so it will tell you what

741
00:22:16,880 --> 00:22:19,520
fields a vlan resource accepts or a bgp

742
00:22:19,520 --> 00:22:20,480
peer accepts

743
00:22:20,480 --> 00:22:22,159
which becomes very interesting when we

744
00:22:22,159 --> 00:22:23,600
start thinking about things in graph

745
00:22:23,600 --> 00:22:24,480
format

746
00:22:24,480 --> 00:22:26,799
because it means we now have an iec tool

747
00:22:26,799 --> 00:22:28,480
that talks machine language

748
00:22:28,480 --> 00:22:30,400
to um potentially a high level

749
00:22:30,400 --> 00:22:32,080
orchestrator that understands all the

750
00:22:32,080 --> 00:22:33,840
capabilities that terraform has

751
00:22:33,840 --> 00:22:37,600
for a given device um it's really

752
00:22:37,600 --> 00:22:39,440
quite an important point that can't be

753
00:22:39,440 --> 00:22:41,280
can't be understated

754
00:22:41,280 --> 00:22:44,559
so what happened at this point um

755
00:22:44,559 --> 00:22:47,840
was uh two two and a half years ago from

756
00:22:47,840 --> 00:22:48,720
this point

757
00:22:48,720 --> 00:22:52,159
um i built a experimental terraform

758
00:22:52,159 --> 00:22:52,799
provider

759
00:22:52,799 --> 00:22:55,120
for junos and it only did kind of four

760
00:22:55,120 --> 00:22:56,240
or five things

761
00:22:56,240 --> 00:22:59,360
it did something like a vlan a bjp

762
00:22:59,360 --> 00:23:02,880
um an interface uh from a from a layer

763
00:23:02,880 --> 00:23:03,760
three point of view

764
00:23:03,760 --> 00:23:05,840
and also applying a vlan to an access

765
00:23:05,840 --> 00:23:07,120
port or a trunk port it was all

766
00:23:07,120 --> 00:23:08,320
relatively straightforward

767
00:23:08,320 --> 00:23:10,640
but what i managed to do was get and

768
00:23:10,640 --> 00:23:12,080
this is a recent addition to the

769
00:23:12,080 --> 00:23:13,280
experiment

770
00:23:13,280 --> 00:23:15,440
i managed to get terraform to describe

771
00:23:15,440 --> 00:23:17,520
to me what it could do to these devices

772
00:23:17,520 --> 00:23:19,280
and i created canonical examples of

773
00:23:19,280 --> 00:23:21,200
those things and then placed them on

774
00:23:21,200 --> 00:23:23,200
a graph almost as an intent so the

775
00:23:23,200 --> 00:23:24,960
intent actually is the inputs that go to

776
00:23:24,960 --> 00:23:26,240
the iac tools

777
00:23:26,240 --> 00:23:28,400
um but it allowed us to it will allowed

778
00:23:28,400 --> 00:23:30,320
me certainly to try and stop

779
00:23:30,320 --> 00:23:32,000
moving out from the realm of frustration

780
00:23:32,000 --> 00:23:33,440
into a realm of real

781
00:23:33,440 --> 00:23:36,320
and changing things um so long story

782
00:23:36,320 --> 00:23:37,200
short i went off

783
00:23:37,200 --> 00:23:40,720
and probably heads down for a good six

784
00:23:40,720 --> 00:23:41,679
months last year

785
00:23:41,679 --> 00:23:44,640
in all my spare time went into this um i

786
00:23:44,640 --> 00:23:44,960
i

787
00:23:44,960 --> 00:23:46,000
wrote i don't know how many lines of

788
00:23:46,000 --> 00:23:47,279
code at this point probably several

789
00:23:47,279 --> 00:23:48,320
hundred thousand

790
00:23:48,320 --> 00:23:50,480
um it's all built on the back of neo4j

791
00:23:50,480 --> 00:23:51,679
which is a graph database

792
00:23:51,679 --> 00:23:55,200
um 99 of code is in go there's only one

793
00:23:55,200 --> 00:23:57,840
module in python and that's uh quite a

794
00:23:57,840 --> 00:23:58,320
novel

795
00:23:58,320 --> 00:24:00,159
uh element um i'll go into that in a

796
00:24:00,159 --> 00:24:02,240
moment all communication

797
00:24:02,240 --> 00:24:04,720
um that drives this graph is based on

798
00:24:04,720 --> 00:24:05,520
nats which is

799
00:24:05,520 --> 00:24:07,760
a message bus what kind of message plus

800
00:24:07,760 --> 00:24:09,520
often called an ear and mouth message

801
00:24:09,520 --> 00:24:10,000
bus

802
00:24:10,000 --> 00:24:12,240
uh and google protocol buffers is the uh

803
00:24:12,240 --> 00:24:13,440
the means of me

804
00:24:13,440 --> 00:24:16,080
um transmitting data between those

805
00:24:16,080 --> 00:24:19,200
components and gluing things together

806
00:24:19,200 --> 00:24:22,320
so what we have right now or what i have

807
00:24:22,320 --> 00:24:22,880
right now

808
00:24:22,880 --> 00:24:24,480
is a means of discovering some basic

809
00:24:24,480 --> 00:24:26,000
topology which is what you see in front

810
00:24:26,000 --> 00:24:27,840
of you that includes devices like cards

811
00:24:27,840 --> 00:24:28,880
interfaces

812
00:24:28,880 --> 00:24:30,880
um there is a taxonomy tree which is not

813
00:24:30,880 --> 00:24:31,919
on this graph but i think it might be on

814
00:24:31,919 --> 00:24:33,279
the next one

815
00:24:33,279 --> 00:24:36,480
where we can pin things like state of

816
00:24:36,480 --> 00:24:38,240
bgp

817
00:24:38,240 --> 00:24:40,720
peers asn or whatever really important

818
00:24:40,720 --> 00:24:42,000
operational information

819
00:24:42,000 --> 00:24:44,320
we can have in a known structure and

820
00:24:44,320 --> 00:24:45,520
known tree

821
00:24:45,520 --> 00:24:47,840
and then we can place the desired intent

822
00:24:47,840 --> 00:24:49,600
um onto the graph in terms of how we

823
00:24:49,600 --> 00:24:51,039
want our configuration

824
00:24:51,039 --> 00:24:52,240
and then what happens is there's a

825
00:24:52,240 --> 00:24:54,640
global signal system that runs

826
00:24:54,640 --> 00:24:56,960
um so once i've made all these changes i

827
00:24:56,960 --> 00:24:57,919
create a snapshot

828
00:24:57,919 --> 00:25:00,240
hashes are stored of all the sub trees

829
00:25:00,240 --> 00:25:01,039
and the trees

830
00:25:01,039 --> 00:25:02,799
and then i run a reconciliation event

831
00:25:02,799 --> 00:25:04,559
and what happens is system agents

832
00:25:04,559 --> 00:25:05,440
responsible

833
00:25:05,440 --> 00:25:08,720
for devices um they log into the graph

834
00:25:08,720 --> 00:25:10,320
they do a query and say right tell me

835
00:25:10,320 --> 00:25:11,360
everything i need to know about the

836
00:25:11,360 --> 00:25:12,840
desired state of

837
00:25:12,840 --> 00:25:15,600
mx01 and it breaks down

838
00:25:15,600 --> 00:25:18,000
into small terraform files and then any

839
00:25:18,000 --> 00:25:19,679
deltas are dealt with by the agent the

840
00:25:19,679 --> 00:25:20,799
agent

841
00:25:20,799 --> 00:25:22,400
deals with the devices have the signal

842
00:25:22,400 --> 00:25:24,320
proceed go make the change

843
00:25:24,320 --> 00:25:26,159
and then it does a verify comes back and

844
00:25:26,159 --> 00:25:28,000
providing that the device now looks like

845
00:25:28,000 --> 00:25:29,919
the graph and we come back with a with

846
00:25:29,919 --> 00:25:31,360
it within an all clear

847
00:25:31,360 --> 00:25:32,480
and you could almost look at this

848
00:25:32,480 --> 00:25:34,240
scientifically like an eventual

849
00:25:34,240 --> 00:25:36,080
consistency approach to dealing with

850
00:25:36,080 --> 00:25:37,679
network configuration

851
00:25:37,679 --> 00:25:40,320
um now this i can't even begin to tell

852
00:25:40,320 --> 00:25:42,320
you how much pain some of these things

853
00:25:42,320 --> 00:25:44,559
have kind of well how much have been

854
00:25:44,559 --> 00:25:45,600
inflicted on me

855
00:25:45,600 --> 00:25:48,000
it took me um about two and a half weeks

856
00:25:48,000 --> 00:25:49,760
to write an algorithm

857
00:25:49,760 --> 00:25:53,200
where i can go from json or

858
00:25:53,200 --> 00:25:55,679
json in a very particular format um to

859
00:25:55,679 --> 00:25:56,240
the graph

860
00:25:56,240 --> 00:25:58,000
and from the graph back to json again

861
00:25:58,000 --> 00:25:59,039
and that includes things like

862
00:25:59,039 --> 00:26:00,480
cardinality of node so

863
00:26:00,480 --> 00:26:01,760
give you an example in a particular

864
00:26:01,760 --> 00:26:03,360
stanza you might have three vlans well

865
00:26:03,360 --> 00:26:05,039
what you might have is a vlan node

866
00:26:05,039 --> 00:26:06,559
and then you might have three children

867
00:26:06,559 --> 00:26:08,799
of that mode and it's how to represent

868
00:26:08,799 --> 00:26:09,440
the data

869
00:26:09,440 --> 00:26:11,679
um so and really importantly as well

870
00:26:11,679 --> 00:26:14,000
some data is is highly sensitive to

871
00:26:14,000 --> 00:26:16,320
sequence so if the sequencing

872
00:26:16,320 --> 00:26:17,520
configuration

873
00:26:17,520 --> 00:26:19,440
and intent between the device and the

874
00:26:19,440 --> 00:26:21,039
graph is incorrect we could end up with

875
00:26:21,039 --> 00:26:22,320
all sorts of problems to give you an

876
00:26:22,320 --> 00:26:22,960
idea

877
00:26:22,960 --> 00:26:25,039
if we run a reconciliation cycle for

878
00:26:25,039 --> 00:26:26,559
some other configuration

879
00:26:26,559 --> 00:26:29,440
um and the sequence comes out um wrong

880
00:26:29,440 --> 00:26:31,279
let's say after three

881
00:26:31,279 --> 00:26:32,799
three reconciliations we get three

882
00:26:32,799 --> 00:26:34,159
different kinds of states we've got a

883
00:26:34,159 --> 00:26:34,799
problem

884
00:26:34,799 --> 00:26:36,880
so even though the graph doesn't deal

885
00:26:36,880 --> 00:26:38,559
with ordered data

886
00:26:38,559 --> 00:26:40,960
necessarily a built-in metadata onto

887
00:26:40,960 --> 00:26:42,159
each of the graph nodes

888
00:26:42,159 --> 00:26:45,360
to ensure always that um sequencing and

889
00:26:45,360 --> 00:26:47,520
order of data is is maintained between

890
00:26:47,520 --> 00:26:49,200
the external world and the graph world

891
00:26:49,200 --> 00:26:50,559
and that was just one tiny little

892
00:26:50,559 --> 00:26:52,880
problem that um that i came

893
00:26:52,880 --> 00:26:54,880
came down to do now there is so much

894
00:26:54,880 --> 00:26:56,559
work to be done on this it's this is not

895
00:26:56,559 --> 00:26:57,760
a product it's not something that you're

896
00:26:57,760 --> 00:26:59,120
going to go and buy this is

897
00:26:59,120 --> 00:27:01,039
really a huge piece of research that i'm

898
00:27:01,039 --> 00:27:03,200
planning on um

899
00:27:03,200 --> 00:27:05,279
well i'm here giving this talk i gave

900
00:27:05,279 --> 00:27:07,039
another inaugur to try and

901
00:27:07,039 --> 00:27:09,440
encourage the world to to move forward

902
00:27:09,440 --> 00:27:10,400
in its hopes

903
00:27:10,400 --> 00:27:12,320
uh and abilities for for network

904
00:27:12,320 --> 00:27:14,480
automation um so the things that we've

905
00:27:14,480 --> 00:27:16,000
already discussed this can load

906
00:27:16,000 --> 00:27:17,600
uh infrastructures code primitives and

907
00:27:17,600 --> 00:27:19,279
drive canonical

908
00:27:19,279 --> 00:27:21,039
examples and there's a and there's

909
00:27:21,039 --> 00:27:22,399
another slide around this

910
00:27:22,399 --> 00:27:23,840
but um this is a bit that's written in

911
00:27:23,840 --> 00:27:25,919
python so the idea is i consume

912
00:27:25,919 --> 00:27:28,960
um a metadata file or a structure of

913
00:27:28,960 --> 00:27:30,240
data so i can

914
00:27:30,240 --> 00:27:31,919
terraform can tell me what it can do in

915
00:27:31,919 --> 00:27:33,840
terms of uh resources so

916
00:27:33,840 --> 00:27:36,880
i get a schema back um using a bit of

917
00:27:36,880 --> 00:27:39,360
weird logic i take that schema and i

918
00:27:39,360 --> 00:27:40,799
generate and create

919
00:27:40,799 --> 00:27:44,720
a json schema individual json schemas

920
00:27:44,720 --> 00:27:46,480
and then i create canonical examples so

921
00:27:46,480 --> 00:27:48,080
one of the biggest problems i think with

922
00:27:48,080 --> 00:27:48,559
any

923
00:27:48,559 --> 00:27:50,559
any data-driven system is you have to go

924
00:27:50,559 --> 00:27:51,840
to the documentation

925
00:27:51,840 --> 00:27:54,480
um and the idea really should be i want

926
00:27:54,480 --> 00:27:56,080
a browser-based system that

927
00:27:56,080 --> 00:27:57,840
i can go off and query and say right

928
00:27:57,840 --> 00:28:00,240
well how do i how do i create a vlan on

929
00:28:00,240 --> 00:28:01,200
this system

930
00:28:01,200 --> 00:28:03,120
and um this is exactly what i've got so

931
00:28:03,120 --> 00:28:04,559
i can go and say well it's this kind of

932
00:28:04,559 --> 00:28:05,200
device

933
00:28:05,200 --> 00:28:06,880
it's you know this kind of resource that

934
00:28:06,880 --> 00:28:08,399
i want tell me how it looks and then the

935
00:28:08,399 --> 00:28:10,000
browser will actually tell me

936
00:28:10,000 --> 00:28:11,679
the inputs that are expected required

937
00:28:11,679 --> 00:28:13,200
fields that kind of thing

938
00:28:13,200 --> 00:28:14,799
which means and i can i can skin this

939
00:28:14,799 --> 00:28:16,320
with the ui further down the line if i

940
00:28:16,320 --> 00:28:17,520
have to because everything is model

941
00:28:17,520 --> 00:28:19,360
derived and it happens to be

942
00:28:19,360 --> 00:28:22,000
terraform is is driving the modeling

943
00:28:22,000 --> 00:28:23,120
certainly from the

944
00:28:23,120 --> 00:28:25,200
the canvas point of view from the data

945
00:28:25,200 --> 00:28:26,399
structure point of view

946
00:28:26,399 --> 00:28:29,600
but when it comes to self-driving um

947
00:28:29,600 --> 00:28:31,279
this is work in progress and i haven't

948
00:28:31,279 --> 00:28:32,880
solved this yet and i made a point

949
00:28:32,880 --> 00:28:34,559
a while ago i need to go off and develop

950
00:28:34,559 --> 00:28:36,640
some gpu skills um because i think what

951
00:28:36,640 --> 00:28:37,919
we actually need for this

952
00:28:37,919 --> 00:28:40,559
instead of having uh influx database um

953
00:28:40,559 --> 00:28:41,200
and some

954
00:28:41,200 --> 00:28:44,320
some logical triggers uh over time um

955
00:28:44,320 --> 00:28:46,480
the problem with that is over time the

956
00:28:46,480 --> 00:28:47,679
more data that goes in

957
00:28:47,679 --> 00:28:49,120
the more cardinality that you have or

958
00:28:49,120 --> 00:28:51,200
that let's say the the different fields

959
00:28:51,200 --> 00:28:52,159
of data that you

960
00:28:52,159 --> 00:28:54,799
have going to that database um the disk

961
00:28:54,799 --> 00:28:55,279
io

962
00:28:55,279 --> 00:28:57,919
just massively increases and climbs cpu

963
00:28:57,919 --> 00:28:59,600
just kind of rockets up

964
00:28:59,600 --> 00:29:01,120
and we've got a scalability problem and

965
00:29:01,120 --> 00:29:02,799
i'm not talking about um whatever he

966
00:29:02,799 --> 00:29:04,080
talks about how to make this internet

967
00:29:04,080 --> 00:29:04,640
scale but

968
00:29:04,640 --> 00:29:07,120
the problem is for us networks and the

969
00:29:07,120 --> 00:29:08,720
amount of data they can emit

970
00:29:08,720 --> 00:29:10,720
was already uh becoming to be a bit of a

971
00:29:10,720 --> 00:29:12,000
problem with snmp

972
00:29:12,000 --> 00:29:14,799
anyway but with telemetry uh where we

973
00:29:14,799 --> 00:29:16,640
can stream data every you know five

974
00:29:16,640 --> 00:29:18,559
seconds every 10 seconds it's a huge

975
00:29:18,559 --> 00:29:19,520
problem

976
00:29:19,520 --> 00:29:21,360
and what i'd love to be able to do is

977
00:29:21,360 --> 00:29:22,880
consume all of that data

978
00:29:22,880 --> 00:29:24,240
in this kind of active framework so it's

979
00:29:24,240 --> 00:29:26,159
a stream based real-time processing

980
00:29:26,159 --> 00:29:27,039
system

981
00:29:27,039 --> 00:29:30,159
massively parallel um with streams and

982
00:29:30,159 --> 00:29:32,000
things talking to each other and i'm

983
00:29:32,000 --> 00:29:33,760
of opinion and i'm really kind of

984
00:29:33,760 --> 00:29:35,120
winning out of time to go any deeper on

985
00:29:35,120 --> 00:29:37,360
this but with some gpu processing we can

986
00:29:37,360 --> 00:29:39,039
take that telemetry information

987
00:29:39,039 --> 00:29:41,200
pre-cook it almost like you would with a

988
00:29:41,200 --> 00:29:42,080
routing algorithm

989
00:29:42,080 --> 00:29:43,360
and then take the metadata and put it

990
00:29:43,360 --> 00:29:45,039
back on the graph for analysis um so

991
00:29:45,039 --> 00:29:46,480
i've got a huge amount of work to do on

992
00:29:46,480 --> 00:29:48,080
that and also creating relationships

993
00:29:48,080 --> 00:29:49,600
between configure gaps i've got the

994
00:29:49,600 --> 00:29:51,120
algorithm sorted out now

995
00:29:51,120 --> 00:29:52,559
um i just haven't got around to

996
00:29:52,559 --> 00:29:54,559
implementing implementing that piece

997
00:29:54,559 --> 00:29:57,039
so where we could be is i think a much

998
00:29:57,039 --> 00:29:57,840
better place

999
00:29:57,840 --> 00:29:59,360
you know if we have this treasure map

1000
00:29:59,360 --> 00:30:01,200
there is a whole pile of treasures that

1001
00:30:01,200 --> 00:30:02,399
we could go after here just as an

1002
00:30:02,399 --> 00:30:03,600
industry i think it'd be absolutely

1003
00:30:03,600 --> 00:30:04,720
amazing

1004
00:30:04,720 --> 00:30:06,720
um telemetry is emerging we've got open

1005
00:30:06,720 --> 00:30:09,440
config models um which is slowly uh kind

1006
00:30:09,440 --> 00:30:10,880
of getting there we've got protocols

1007
00:30:10,880 --> 00:30:12,480
like pgp monitoring

1008
00:30:12,480 --> 00:30:14,000
protocol which are really really helpful

1009
00:30:14,000 --> 00:30:16,159
we can go templateless we can throw

1010
00:30:16,159 --> 00:30:17,919
ginger two away and all of these kind of

1011
00:30:17,919 --> 00:30:19,679
horrendous workflows that just automate

1012
00:30:19,679 --> 00:30:20,720
the keyboard

1013
00:30:20,720 --> 00:30:22,399
we've got machine friendly data which

1014
00:30:22,399 --> 00:30:24,080
means our tool chains can be

1015
00:30:24,080 --> 00:30:25,600
a lot more reliable especially as the

1016
00:30:25,600 --> 00:30:27,440
system can describe data to another

1017
00:30:27,440 --> 00:30:28,799
system fantastic

1018
00:30:28,799 --> 00:30:30,720
we can remove humans from jumping on

1019
00:30:30,720 --> 00:30:32,720
devices and removing those cli checks

1020
00:30:32,720 --> 00:30:33,840
and really just kind of removing the

1021
00:30:33,840 --> 00:30:35,120
burdens of

1022
00:30:35,120 --> 00:30:36,640
going device to device we can go off and

1023
00:30:36,640 --> 00:30:38,399
query the graph for these kind of

1024
00:30:38,399 --> 00:30:40,320
relationships and how things are are

1025
00:30:40,320 --> 00:30:42,000
interrelated and we can have a tight

1026
00:30:42,000 --> 00:30:42,880
control loop

1027
00:30:42,880 --> 00:30:44,480
between what we want and what we have

1028
00:30:44,480 --> 00:30:46,240
meaning we can put our kind of intent

1029
00:30:46,240 --> 00:30:47,600
onto the graph feed that into

1030
00:30:47,600 --> 00:30:48,960
infrastructure as code tools

1031
00:30:48,960 --> 00:30:51,120
and have an external agent reconcile

1032
00:30:51,120 --> 00:30:52,799
that almost in real time or through

1033
00:30:52,799 --> 00:30:54,720
signals if you need to pin things to

1034
00:30:54,720 --> 00:30:56,240
things like maintenance windows and

1035
00:30:56,240 --> 00:30:56,960
management

1036
00:30:56,960 --> 00:30:59,039
and then it really um gets to this point

1037
00:30:59,039 --> 00:31:00,320
where we can actually do

1038
00:31:00,320 --> 00:31:02,240
a proper event drive and not just event

1039
00:31:02,240 --> 00:31:03,440
while the interface has gone down

1040
00:31:03,440 --> 00:31:05,279
go do something but we could actually

1041
00:31:05,279 --> 00:31:07,120
have very complex and and

1042
00:31:07,120 --> 00:31:10,000
actual um i guess i don't say actual ml

1043
00:31:10,000 --> 00:31:10,320
but

1044
00:31:10,320 --> 00:31:12,159
we we've got at this point enough data

1045
00:31:12,159 --> 00:31:14,320
points uh and enough data

1046
00:31:14,320 --> 00:31:16,240
over time where we can feed them into

1047
00:31:16,240 --> 00:31:17,840
algorithms to try and get a sense of

1048
00:31:17,840 --> 00:31:19,360
well this is abnormal is this an

1049
00:31:19,360 --> 00:31:20,960
abnormal thing that's just happening

1050
00:31:20,960 --> 00:31:23,039
interface and give you an example cctv

1051
00:31:23,039 --> 00:31:24,000
now has this

1052
00:31:24,000 --> 00:31:25,760
so if you have a car park outside of

1053
00:31:25,760 --> 00:31:27,519
your office or home or work

1054
00:31:27,519 --> 00:31:29,760
um and nobody hangs around there but all

1055
00:31:29,760 --> 00:31:31,120
of a sudden a load of teenagers come

1056
00:31:31,120 --> 00:31:32,640
along and start partying on the back

1057
00:31:32,640 --> 00:31:33,200
garden

1058
00:31:33,200 --> 00:31:35,600
um even right now or in the car park so

1059
00:31:35,600 --> 00:31:36,960
i'd say back on

1060
00:31:36,960 --> 00:31:39,600
even now um you can push out algorithms

1061
00:31:39,600 --> 00:31:41,120
to cameras for that and the camera will

1062
00:31:41,120 --> 00:31:42,640
say hey there's some abnormal behavior

1063
00:31:42,640 --> 00:31:43,760
going on here i don't know what it is

1064
00:31:43,760 --> 00:31:44,880
but code take a look

1065
00:31:44,880 --> 00:31:46,559
we could be in that position with this

1066
00:31:46,559 --> 00:31:48,640
level of awareness it could actually be

1067
00:31:48,640 --> 00:31:49,120
really

1068
00:31:49,120 --> 00:31:51,360
quite fantastic a bit of a screenshot

1069
00:31:51,360 --> 00:31:52,559
for you here so everything

1070
00:31:52,559 --> 00:31:54,559
i'm building um it's all on web kind of

1071
00:31:54,559 --> 00:31:56,640
standard stuff so there's a swagger

1072
00:31:56,640 --> 00:31:59,039
api this example i mentioned i can go

1073
00:31:59,039 --> 00:32:00,880
and query the system for resources

1074
00:32:00,880 --> 00:32:03,279
so i'm querying it for a device type of

1075
00:32:03,279 --> 00:32:05,200
qfx again sorry i work for juniper and

1076
00:32:05,200 --> 00:32:06,720
i've got access to those devices

1077
00:32:06,720 --> 00:32:09,440
um a resource name of type vlan and on

1078
00:32:09,440 --> 00:32:11,360
on the um the bottom screen now you can

1079
00:32:11,360 --> 00:32:13,120
see the resources that have all been

1080
00:32:13,120 --> 00:32:14,000
returned that have got

1081
00:32:14,000 --> 00:32:16,559
vlan or something to do with vlan from

1082
00:32:16,559 --> 00:32:17,279
the query

1083
00:32:17,279 --> 00:32:18,720
and you can see all the information that

1084
00:32:18,720 --> 00:32:20,320
goes into those resources again this is

1085
00:32:20,320 --> 00:32:21,919
a machine schema something that we can

1086
00:32:21,919 --> 00:32:24,000
verify and validate we don't have to go

1087
00:32:24,000 --> 00:32:25,200
off guessing or

1088
00:32:25,200 --> 00:32:27,120
worry about software upgrades we can we

1089
00:32:27,120 --> 00:32:28,399
can just onboard a new

1090
00:32:28,399 --> 00:32:30,320
um infrastructure scope terraform

1091
00:32:30,320 --> 00:32:31,760
provider and deal with

1092
00:32:31,760 --> 00:32:33,919
as and when and then from an operations

1093
00:32:33,919 --> 00:32:34,880
point of view

1094
00:32:34,880 --> 00:32:38,240
um where i want to get to between

1095
00:32:38,240 --> 00:32:41,039
orchestration of terraform resources and

1096
00:32:41,039 --> 00:32:42,159
operational data

1097
00:32:42,159 --> 00:32:44,320
is is kind of uh what you see here it's

1098
00:32:44,320 --> 00:32:46,080
a little bit hard to see especially the

1099
00:32:46,080 --> 00:32:47,600
speed that we're running through

1100
00:32:47,600 --> 00:32:49,279
but even the relationships are named

1101
00:32:49,279 --> 00:32:51,200
which gives us this huge capability

1102
00:32:51,200 --> 00:32:52,399
so it means we could actually go well

1103
00:32:52,399 --> 00:32:54,320
what does a path look like from

1104
00:32:54,320 --> 00:32:56,640
you know the qfx01 device if down the

1105
00:32:56,640 --> 00:32:58,480
orchestration branch and what resources

1106
00:32:58,480 --> 00:33:00,720
lead me to gigabit ethernet zero zero

1107
00:33:00,720 --> 00:33:02,880
zero um and we might find actually

1108
00:33:02,880 --> 00:33:04,240
there's a piece of configuration and a

1109
00:33:04,240 --> 00:33:05,679
piece of operational data

1110
00:33:05,679 --> 00:33:08,000
um that aren't connected and that might

1111
00:33:08,000 --> 00:33:09,440
even mean that we've accidentally put

1112
00:33:09,440 --> 00:33:11,360
the sub interface in the wrong vrf for

1113
00:33:11,360 --> 00:33:12,640
instance

1114
00:33:12,640 --> 00:33:14,399
um and this is uh exactly what i've just

1115
00:33:14,399 --> 00:33:15,760
described here

1116
00:33:15,760 --> 00:33:18,080
this is a bit messy um you have to

1117
00:33:18,080 --> 00:33:19,840
constrain your thinking a little bit

1118
00:33:19,840 --> 00:33:22,159
but it gives us this this normalization

1119
00:33:22,159 --> 00:33:23,840
layer something that's not special to be

1120
00:33:23,840 --> 00:33:24,640
able to deal with

1121
00:33:24,640 --> 00:33:27,279
a very connected thing this this network

1122
00:33:27,279 --> 00:33:28,960
that really shouldn't be islands of

1123
00:33:28,960 --> 00:33:30,640
independently managed devices

1124
00:33:30,640 --> 00:33:31,919
we can pull out the right level

1125
00:33:31,919 --> 00:33:34,159
information and the right level of

1126
00:33:34,159 --> 00:33:37,279
intelligence from these devices and that

1127
00:33:37,279 --> 00:33:39,600
i'm out of time i realized i've packed

1128
00:33:39,600 --> 00:33:41,120
way too much into this presentation

1129
00:33:41,120 --> 00:33:42,399
again this has been a

1130
00:33:42,399 --> 00:33:44,799
it's been a privilege and an honor to to

1131
00:33:44,799 --> 00:33:45,440
present

1132
00:33:45,440 --> 00:33:47,840
um i was certainly my heart jumped to be

1133
00:33:47,840 --> 00:33:49,519
when i saw the the message that

1134
00:33:49,519 --> 00:33:51,440
the talk had been accepted as well so

1135
00:33:51,440 --> 00:33:53,120
thank you for for listening to me

1136
00:33:53,120 --> 00:33:54,720
rant on and dream on about everything

1137
00:33:54,720 --> 00:33:56,320
that's been going on i'm more than happy

1138
00:33:56,320 --> 00:33:58,080
to chat and answer questions

1139
00:33:58,080 --> 00:34:00,480
um again thank you uh you can email me

1140
00:34:00,480 --> 00:34:01,519
at dave.dev

1141
00:34:01,519 --> 00:34:04,240
um or at underscore ip engineer on

1142
00:34:04,240 --> 00:34:04,799
twitter

1143
00:34:04,799 --> 00:34:06,530
thank you again

1144
00:34:06,530 --> 00:34:10,860
[Music]

1145
00:34:11,199 --> 00:34:13,359
good morning good evening good afternoon

1146
00:34:13,359 --> 00:34:15,599
thank you david for that wonderful talk

1147
00:34:15,599 --> 00:34:17,918
to start our morning and afternoon off

1148
00:34:17,918 --> 00:34:18,800
um

1149
00:34:18,800 --> 00:34:20,800
we're gonna go right to the q a section

1150
00:34:20,800 --> 00:34:22,480
and we have approximately

1151
00:34:22,480 --> 00:34:25,839
five minutes and there are already two

1152
00:34:25,839 --> 00:34:26,719
questions in there

1153
00:34:26,719 --> 00:34:28,480
and david has indicated that he sees

1154
00:34:28,480 --> 00:34:30,480
those david if you want to go ahead and

1155
00:34:30,480 --> 00:34:31,839
answer those for

1156
00:34:31,839 --> 00:34:34,960
the gentleman sure

1157
00:34:34,960 --> 00:34:37,599
yeah thank you um so the first question

1158
00:34:37,599 --> 00:34:38,960
uh what are the shortcomings of the

1159
00:34:38,960 --> 00:34:40,560
existing tools in the libraries that do

1160
00:34:40,560 --> 00:34:42,079
support graph models and operations

1161
00:34:42,079 --> 00:34:44,000
and what is the most needed to mature

1162
00:34:44,000 --> 00:34:45,280
this space i'm going to answer that one

1163
00:34:45,280 --> 00:34:46,560
backwards

1164
00:34:46,560 --> 00:34:49,199
i think from a maturation of this space

1165
00:34:49,199 --> 00:34:51,280
uh working groups in communities exactly

1166
00:34:51,280 --> 00:34:52,879
like this i think if we could community

1167
00:34:52,879 --> 00:34:53,440
source

1168
00:34:53,440 --> 00:34:55,760
uh kind of operational uh insight and

1169
00:34:55,760 --> 00:34:57,680
experience and turn those into practices

1170
00:34:57,680 --> 00:34:58,880
i think we could see some

1171
00:34:58,880 --> 00:35:00,960
a great deal of good being done instead

1172
00:35:00,960 --> 00:35:02,160
of it coming out of the

1173
00:35:02,160 --> 00:35:04,400
standards bodies something like the itf

1174
00:35:04,400 --> 00:35:05,760
i think it'd be great to have some of

1175
00:35:05,760 --> 00:35:06,800
these uh things

1176
00:35:06,800 --> 00:35:09,440
crowdsourced um i think this is a very

1177
00:35:09,440 --> 00:35:09,839
uh

1178
00:35:09,839 --> 00:35:12,079
early space um there's lots of good

1179
00:35:12,079 --> 00:35:13,359
things going on i think

1180
00:35:13,359 --> 00:35:16,400
the danger uh with some of this is

1181
00:35:16,400 --> 00:35:17,839
his concerted secret source for some

1182
00:35:17,839 --> 00:35:20,079
organizations even the research

1183
00:35:20,079 --> 00:35:22,079
that i've been doing on this um he's not

1184
00:35:22,079 --> 00:35:23,440
talked about a whole lot

1185
00:35:23,440 --> 00:35:25,680
um so i think that'd be great to to do

1186
00:35:25,680 --> 00:35:27,040
that with the community

1187
00:35:27,040 --> 00:35:29,040
um shortcomings of existing tools and

1188
00:35:29,040 --> 00:35:30,320
libraries

1189
00:35:30,320 --> 00:35:32,240
and those that do support graph models

1190
00:35:32,240 --> 00:35:34,160
what libraries um other than using

1191
00:35:34,160 --> 00:35:34,960
pre-baked

1192
00:35:34,960 --> 00:35:36,720
off-the-shelf uh products or kind of

1193
00:35:36,720 --> 00:35:38,800
open source platforms terraform

1194
00:35:38,800 --> 00:35:41,359
um is is great from a graph model

1195
00:35:41,359 --> 00:35:42,720
perspective from infrastructure's code

1196
00:35:42,720 --> 00:35:44,160
and modelling resources from an

1197
00:35:44,160 --> 00:35:46,000
operations point of view i'm not aware

1198
00:35:46,000 --> 00:35:47,040
of a whole amount

1199
00:35:47,040 --> 00:35:48,960
of tooling out there from from a graph

1200
00:35:48,960 --> 00:35:50,320
perspective

1201
00:35:50,320 --> 00:35:51,680
i'd love to be able to take this offline

1202
00:35:51,680 --> 00:35:53,599
and do some more digging on that

1203
00:35:53,599 --> 00:35:55,119
i'm going to jump to the to the second

1204
00:35:55,119 --> 00:35:57,200
question also from from michael

1205
00:35:57,200 --> 00:35:59,760
um so thoughts on persistence for graph

1206
00:35:59,760 --> 00:36:00,720
systems

1207
00:36:00,720 --> 00:36:02,160
a graph database is necessary so i'm

1208
00:36:02,160 --> 00:36:05,440
going to answer that one immediately

1209
00:36:05,599 --> 00:36:07,680
so graph database is necessary i've

1210
00:36:07,680 --> 00:36:09,359
experimented with and without the graph

1211
00:36:09,359 --> 00:36:10,400
systems

1212
00:36:10,400 --> 00:36:13,920
d graph requires a schema orango um had

1213
00:36:13,920 --> 00:36:15,760
uh poor support for go the last time i

1214
00:36:15,760 --> 00:36:17,040
checked into it and

1215
00:36:17,040 --> 00:36:19,200
the library i'm using is neo4j under

1216
00:36:19,200 --> 00:36:21,440
everything using cipher natively and a

1217
00:36:21,440 --> 00:36:22,720
go library attached to that

1218
00:36:22,720 --> 00:36:24,240
are they really necessary i think you

1219
00:36:24,240 --> 00:36:25,760
can achieve a great lot

1220
00:36:25,760 --> 00:36:27,680
with relational databases and actually

1221
00:36:27,680 --> 00:36:29,839
um even the the kind of early work that

1222
00:36:29,839 --> 00:36:31,520
i've got is backed by several databases

1223
00:36:31,520 --> 00:36:32,880
so there's neo4j

1224
00:36:32,880 --> 00:36:35,280
uh and this is postgres and there's also

1225
00:36:35,280 --> 00:36:37,280
a key value store as well and i'm doing

1226
00:36:37,280 --> 00:36:38,720
all sorts of interesting things like

1227
00:36:38,720 --> 00:36:40,480
there are relational tables

1228
00:36:40,480 --> 00:36:42,640
um and what i'm doing i'm i'm basically

1229
00:36:42,640 --> 00:36:44,720
modeling sub trees hashing them

1230
00:36:44,720 --> 00:36:46,320
and then doing kind of reference checks

1231
00:36:46,320 --> 00:36:48,320
as the graph changes it's a bit hard to

1232
00:36:48,320 --> 00:36:50,320
describe in a couple of minutes

1233
00:36:50,320 --> 00:36:53,280
um i do think the necessary for finding

1234
00:36:53,280 --> 00:36:55,200
the best path between

1235
00:36:55,200 --> 00:36:57,520
between nodes especially if we're trying

1236
00:36:57,520 --> 00:36:59,119
to kind of reconcile configuration

1237
00:36:59,119 --> 00:37:00,800
against operational state

1238
00:37:00,800 --> 00:37:03,599
take um a computation away from that

1239
00:37:03,599 --> 00:37:06,160
maybe turn it into an externalized event

1240
00:37:06,160 --> 00:37:07,280
so i think they are necessary i think

1241
00:37:07,280 --> 00:37:08,720
you can do a great deal without them

1242
00:37:08,720 --> 00:37:09,359
though

1243
00:37:09,359 --> 00:37:11,359
um but i i've got to kind of put my

1244
00:37:11,359 --> 00:37:13,440
stick in the ground on that one

1245
00:37:13,440 --> 00:37:16,560
um and then uh graph models and excuse

1246
00:37:16,560 --> 00:37:16,880
me

1247
00:37:16,880 --> 00:37:19,599
uh logic moves into the into the

1248
00:37:19,599 --> 00:37:21,119
services so i think i've answered that i

1249
00:37:21,119 --> 00:37:22,320
think that was pretty much one

1250
00:37:22,320 --> 00:37:25,680
question um i really want to go back to

1251
00:37:25,680 --> 00:37:27,680
this that the maturation though of of

1252
00:37:27,680 --> 00:37:29,599
the space and if anybody is interested

1253
00:37:29,599 --> 00:37:31,520
in this from this community i'd love to

1254
00:37:31,520 --> 00:37:33,280
either work with nano maybe we can put

1255
00:37:33,280 --> 00:37:34,800
some kind of a working group together

1256
00:37:34,800 --> 00:37:37,040
uh work offline on this um certainly we

1257
00:37:37,040 --> 00:37:38,480
can exchange information i think there's

1258
00:37:38,480 --> 00:37:39,760
a there's a huge amount of promise in

1259
00:37:39,760 --> 00:37:42,240
this space

1260
00:37:42,400 --> 00:37:44,400
um i think there are no more questions

1261
00:37:44,400 --> 00:37:45,520
on the q a list

1262
00:37:45,520 --> 00:37:48,960
so uh thank you david anymore uh

1263
00:37:48,960 --> 00:37:52,240
i appreciate your response to

1264
00:37:52,240 --> 00:37:54,960
the questions that were asked thank you

1265
00:37:54,960 --> 00:37:56,960
for your presentation

1266
00:37:56,960 --> 00:38:01,800
[Music]

1267
00:38:01,800 --> 00:38:04,800
again

