1
00:00:01,640 --> 00:00:05,200
[Music]

2
00:00:05,200 --> 00:00:05,920
good morning

3
00:00:05,920 --> 00:00:09,280
uh good afternoon wherever you are

4
00:00:09,280 --> 00:00:11,920
i am jeffrey zhang i'm a distinguished

5
00:00:11,920 --> 00:00:14,719
engineer from juniper networks

6
00:00:14,719 --> 00:00:17,600
today i'm going to talk about multicast

7
00:00:17,600 --> 00:00:18,320
in

8
00:00:18,320 --> 00:00:21,760
segment routing networks

9
00:00:22,480 --> 00:00:25,680
agenda so we are first going to

10
00:00:25,680 --> 00:00:29,760
review the sr principles and

11
00:00:29,760 --> 00:00:32,399
available options for multicasting sr

12
00:00:32,399 --> 00:00:34,000
and networks

13
00:00:34,000 --> 00:00:36,559
then we will talk about controller

14
00:00:36,559 --> 00:00:38,879
signals t20 tunnels

15
00:00:38,879 --> 00:00:42,480
followed by bgp signal multicast

16
00:00:42,480 --> 00:00:44,640
we will talk about integrating

17
00:00:44,640 --> 00:00:46,800
end-to-end multicast

18
00:00:46,800 --> 00:00:50,480
and broadcast being integrated with

19
00:00:50,480 --> 00:00:53,760
classical transport

20
00:00:54,079 --> 00:00:57,120
so segment writing principles there are

21
00:00:57,120 --> 00:00:58,640
two principles here

22
00:00:58,640 --> 00:01:02,079
i want to talk about the foremost one

23
00:01:02,079 --> 00:01:05,199
is no per flow or pertinent state inside

24
00:01:05,199 --> 00:01:07,600
the network

25
00:01:07,600 --> 00:01:10,000
instead the packets have embedded

26
00:01:10,000 --> 00:01:11,040
segment list

27
00:01:11,040 --> 00:01:15,119
for traffic steering the second option

28
00:01:15,119 --> 00:01:17,600
is that

29
00:01:18,479 --> 00:01:21,520
optionally and preferably we will use

30
00:01:21,520 --> 00:01:22,880
controllers

31
00:01:22,880 --> 00:01:24,960
the controllers will instruct ingress

32
00:01:24,960 --> 00:01:26,640
routers to embed

33
00:01:26,640 --> 00:01:29,920
segment lists in packets for the

34
00:01:29,920 --> 00:01:33,280
traffic steering purposes

35
00:01:34,720 --> 00:01:37,119
now apply that to multicast for the

36
00:01:37,119 --> 00:01:38,320
first one

37
00:01:38,320 --> 00:01:42,320
no per tree stage inside that network

38
00:01:42,320 --> 00:01:44,320
there are two options for that um the

39
00:01:44,320 --> 00:01:46,399
first one is ingress replication

40
00:01:46,399 --> 00:01:48,159
which has been used for a long time

41
00:01:48,159 --> 00:01:49,680
actually

42
00:01:49,680 --> 00:01:53,759
as indicated in the upper right picture

43
00:01:53,759 --> 00:01:55,600
the ingress router will send

44
00:01:55,600 --> 00:01:58,719
multiple copies to individual

45
00:01:58,719 --> 00:02:02,079
uh edge receivers

46
00:02:02,079 --> 00:02:05,200
obviously this does not have a effect

47
00:02:05,200 --> 00:02:07,360
efficient replication in the inside the

48
00:02:07,360 --> 00:02:08,399
network

49
00:02:08,399 --> 00:02:11,200
but it does not incur priority state

50
00:02:11,200 --> 00:02:13,040
inside network

51
00:02:13,040 --> 00:02:16,400
it works for some use cases

52
00:02:16,400 --> 00:02:19,040
the second one is beer bit index

53
00:02:19,040 --> 00:02:21,360
explicit replication

54
00:02:21,360 --> 00:02:24,319
it is a new multicast technology that

55
00:02:24,319 --> 00:02:25,120
gives you

56
00:02:25,120 --> 00:02:28,560
efficient replication without requiring

57
00:02:28,560 --> 00:02:31,599
per tree state inside the network

58
00:02:31,599 --> 00:02:34,080
basic idea is that packets carry a bit

59
00:02:34,080 --> 00:02:35,120
stream

60
00:02:35,120 --> 00:02:37,840
indicating where the tractor should go

61
00:02:37,840 --> 00:02:39,760
and then the internal routers

62
00:02:39,760 --> 00:02:42,080
transit routers will figure out how to

63
00:02:42,080 --> 00:02:43,440
wrap it towards those

64
00:02:43,440 --> 00:02:46,000
indicated today's edge routers

65
00:02:46,000 --> 00:02:48,480
efficiently

66
00:02:48,480 --> 00:02:51,360
because it does give you efficient

67
00:02:51,360 --> 00:02:52,239
replication

68
00:02:52,239 --> 00:02:55,360
and does not require poetry state in the

69
00:02:55,360 --> 00:02:56,560
network

70
00:02:56,560 --> 00:03:00,159
it is the best broadcast technology

71
00:03:00,159 --> 00:03:03,599
so far um whether it's

72
00:03:03,599 --> 00:03:07,440
for extra network or not

73
00:03:07,440 --> 00:03:09,920
however it because it involves a new

74
00:03:09,920 --> 00:03:11,280
forwarding plan

75
00:03:11,280 --> 00:03:14,080
so its deployment has not has been

76
00:03:14,080 --> 00:03:15,360
handled

77
00:03:15,360 --> 00:03:17,360
and we are actually not going to cover

78
00:03:17,360 --> 00:03:20,319
it in today's presentation

79
00:03:20,319 --> 00:03:23,200
i want to point out uh both ingress

80
00:03:23,200 --> 00:03:24,080
replication

81
00:03:24,080 --> 00:03:27,599
and beer while they uh

82
00:03:27,599 --> 00:03:29,519
they match the sr principle number one

83
00:03:29,519 --> 00:03:30,799
very well

84
00:03:30,799 --> 00:03:34,239
they are actually all independent of sr

85
00:03:34,239 --> 00:03:37,840
you can use them in a non-sr network as

86
00:03:37,840 --> 00:03:40,080
well

87
00:03:40,480 --> 00:03:44,959
principle number two use of controllers

88
00:03:44,959 --> 00:03:47,120
so there are two flavors of this the

89
00:03:47,120 --> 00:03:49,360
first one is the controller only does

90
00:03:49,360 --> 00:03:50,879
the calculation

91
00:03:50,879 --> 00:03:54,239
it calculates a p2mp3

92
00:03:54,239 --> 00:03:57,599
and then send the explicit path to the

93
00:03:57,599 --> 00:04:00,000
panel ingress we will then use

94
00:04:00,000 --> 00:04:01,000
traditional

95
00:04:01,000 --> 00:04:03,920
rsvpt p2p signaling

96
00:04:03,920 --> 00:04:07,840
to set up the tunnel the second flavor

97
00:04:07,840 --> 00:04:11,360
is that controller does everything

98
00:04:11,360 --> 00:04:13,360
it does the calculation and it does the

99
00:04:13,360 --> 00:04:15,360
signaling

100
00:04:15,360 --> 00:04:18,880
and for that there are also two flavors

101
00:04:18,880 --> 00:04:22,960
one is that what we call srp2 and p

102
00:04:22,960 --> 00:04:26,000
are previously known as precip the

103
00:04:26,000 --> 00:04:29,759
second one is mldp and we'll talk about

104
00:04:29,759 --> 00:04:33,199
those a bit more later

105
00:04:33,199 --> 00:04:36,240
i want to emphasize here that all these

106
00:04:36,240 --> 00:04:37,840
options here

107
00:04:37,840 --> 00:04:40,800
have identical forwarding plane as with

108
00:04:40,800 --> 00:04:42,240
legacy mldp

109
00:04:42,240 --> 00:04:46,560
or rcbpte p20 tunnels

110
00:04:46,560 --> 00:04:48,720
you will have per tunnel state inside

111
00:04:48,720 --> 00:04:50,720
the net network

112
00:04:50,720 --> 00:04:54,240
and you will have incoming

113
00:04:54,240 --> 00:04:57,280
and traffic which lay with labels and

114
00:04:57,280 --> 00:04:58,560
you will replicate

115
00:04:58,560 --> 00:05:01,520
those traffic out

116
00:05:02,720 --> 00:05:05,840
so to review uh here are the multicast

117
00:05:05,840 --> 00:05:06,560
options in

118
00:05:06,560 --> 00:05:09,919
sr network if you care about effective

119
00:05:09,919 --> 00:05:11,039
replication

120
00:05:11,039 --> 00:05:13,680
and you don't want to have pro tree

121
00:05:13,680 --> 00:05:14,160
state

122
00:05:14,160 --> 00:05:16,720
in the network and most of your routers

123
00:05:16,720 --> 00:05:18,080
can support beer

124
00:05:18,080 --> 00:05:21,199
then the beer is best option

125
00:05:21,199 --> 00:05:24,000
if you cannot do that then traditional

126
00:05:24,000 --> 00:05:26,240
multicast may work well for you

127
00:05:26,240 --> 00:05:28,880
whether it's pin p2mp tunnel or integral

128
00:05:28,880 --> 00:05:30,720
stratification

129
00:05:30,720 --> 00:05:33,280
for example you don't need a controller

130
00:05:33,280 --> 00:05:34,240
and you don't mind

131
00:05:34,240 --> 00:05:38,160
running team nrdp or rsvp

132
00:05:38,160 --> 00:05:40,080
those traditional multicast protocols in

133
00:05:40,080 --> 00:05:42,000
your sr network

134
00:05:42,000 --> 00:05:44,400
i want to point out that while you're

135
00:05:44,400 --> 00:05:46,160
running sr unicast

136
00:05:46,160 --> 00:05:48,560
it's still perfectly okay to run those

137
00:05:48,560 --> 00:05:50,479
traditional modicus protocols

138
00:05:50,479 --> 00:05:53,520
as long as you don't mind but

139
00:05:53,520 --> 00:05:57,360
if you need controller calculated trees

140
00:05:57,360 --> 00:06:00,479
and or you want to remove those legacy

141
00:06:00,479 --> 00:06:03,360
protocols from your sr network then you

142
00:06:03,360 --> 00:06:06,000
can do controller signal multicast

143
00:06:06,000 --> 00:06:08,160
just bear in mind that with controller

144
00:06:08,160 --> 00:06:09,759
signal multicast

145
00:06:09,759 --> 00:06:11,360
you will still have per tree or

146
00:06:11,360 --> 00:06:15,600
pertinent state inside network

147
00:06:17,600 --> 00:06:19,600
now let's talk about controller signals

148
00:06:19,600 --> 00:06:22,319
p2 and t

149
00:06:22,720 --> 00:06:24,960
the first option of controller signal

150
00:06:24,960 --> 00:06:25,919
p2mp

151
00:06:25,919 --> 00:06:30,560
is srp2mt or previously known as treesit

152
00:06:30,560 --> 00:06:33,600
it's now being worked on in iatf versus

153
00:06:33,600 --> 00:06:36,880
working group groups

154
00:06:36,880 --> 00:06:40,479
the the basic idea is that

155
00:06:40,479 --> 00:06:43,120
the controllers will dodge a tree

156
00:06:43,120 --> 00:06:44,479
calculation

157
00:06:44,479 --> 00:06:48,080
and send a forwarding states

158
00:06:48,080 --> 00:06:51,758
to each tree load of their tree

159
00:06:52,319 --> 00:06:55,280
to set up forwarding paths the folding

160
00:06:55,280 --> 00:06:55,919
stage

161
00:06:55,919 --> 00:06:58,240
for a particular nodes on a particular

162
00:06:58,240 --> 00:06:58,960
tree

163
00:06:58,960 --> 00:07:03,520
we refer it to as replication segments

164
00:07:03,520 --> 00:07:07,919
a replication segment is identified by

165
00:07:07,919 --> 00:07:11,840
the root id tree id candidate paths

166
00:07:11,840 --> 00:07:15,280
and targeting nodes and the folding

167
00:07:15,280 --> 00:07:17,440
information includes incoming label or

168
00:07:17,440 --> 00:07:18,880
incoming acid

169
00:07:18,880 --> 00:07:22,479
and a bunch of outgoing label uh

170
00:07:22,479 --> 00:07:26,720
alcohol and set to rapid traffic too

171
00:07:26,720 --> 00:07:29,120
from the controllers to the tree nodes

172
00:07:29,120 --> 00:07:30,000
the signaling

173
00:07:30,000 --> 00:07:33,039
signaling could be done by psap

174
00:07:33,039 --> 00:07:37,120
by bgp multicast or bgp srt signaling

175
00:07:37,120 --> 00:07:39,520
and in this presentation we are going to

176
00:07:39,520 --> 00:07:44,639
focus on bgp multicast

177
00:07:44,639 --> 00:07:47,039
the second option of controller signals

178
00:07:47,039 --> 00:07:48,720
p2mp

179
00:07:48,720 --> 00:07:51,759
is a mldp tunnel that signal

180
00:07:51,759 --> 00:07:53,759
that is signaled by bgt from the

181
00:07:53,759 --> 00:07:56,400
controllers

182
00:07:57,280 --> 00:07:59,759
i want to point out that some here the

183
00:07:59,759 --> 00:08:01,039
only regular

184
00:08:01,039 --> 00:08:04,879
relevance to mldp is that we use the

185
00:08:04,879 --> 00:08:05,599
mrdp

186
00:08:05,599 --> 00:08:09,039
fact to identify the tree in the control

187
00:08:09,039 --> 00:08:10,400
plane

188
00:08:10,400 --> 00:08:12,720
notice that in the forwarding plan it's

189
00:08:12,720 --> 00:08:15,199
just like srp2np or legacy

190
00:08:15,199 --> 00:08:18,720
nrdp so

191
00:08:18,720 --> 00:08:20,800
while we use the mltp effects and

192
00:08:20,800 --> 00:08:22,160
identify the tree

193
00:08:22,160 --> 00:08:24,560
in the control plane we actually do not

194
00:08:24,560 --> 00:08:26,000
use ldp signaling

195
00:08:26,000 --> 00:08:30,160
anymore the reason to do this mrdp

196
00:08:30,160 --> 00:08:35,839
tree identification includes that

197
00:08:36,159 --> 00:08:39,039
it allows easy transition from existing

198
00:08:39,039 --> 00:08:40,479
mrdp deployment

199
00:08:40,479 --> 00:08:43,599
for example if you already have a bgpm18

200
00:08:43,599 --> 00:08:44,480
deployment

201
00:08:44,480 --> 00:08:48,640
with mldp tunnels then all you change

202
00:08:48,640 --> 00:08:52,160
is the how this mldp tunnel are set up

203
00:08:52,160 --> 00:08:56,160
there is no change on the nvp in part

204
00:08:57,680 --> 00:09:00,720
another another benefit of using mldp

205
00:09:00,720 --> 00:09:03,760
fact as tree identification is that

206
00:09:03,760 --> 00:09:07,200
mrdp has this opaque

207
00:09:07,200 --> 00:09:09,440
structure so it gives you a lot of

208
00:09:09,440 --> 00:09:10,480
flexibility

209
00:09:10,480 --> 00:09:13,200
and extensibility when it comes to

210
00:09:13,200 --> 00:09:13,920
identify

211
00:09:13,920 --> 00:09:17,200
actually now

212
00:09:17,200 --> 00:09:20,839
the signaling of mrdp tunnel using bgp

213
00:09:20,839 --> 00:09:23,440
multi-class can actually be done

214
00:09:23,440 --> 00:09:25,839
either from controllers or using the

215
00:09:25,839 --> 00:09:28,080
traditional hardware hub signaling

216
00:09:28,080 --> 00:09:31,600
from leaves towards the roots

217
00:09:33,680 --> 00:09:38,560
now let's focus on bgp signal multicast

218
00:09:40,480 --> 00:09:45,360
bgp mk signaling is basically used bgp

219
00:09:45,360 --> 00:09:49,279
a new bgp sapphire called mkh3 sapphire

220
00:09:49,279 --> 00:09:53,600
to signal srp10b tunnel or p2mldp

221
00:09:53,600 --> 00:09:57,760
tunnel or ip multicast or any potential

222
00:09:57,760 --> 00:10:00,959
future new types

223
00:10:02,320 --> 00:10:05,440
we just use a different nri type to uh

224
00:10:05,440 --> 00:10:07,120
to signal different trees

225
00:10:07,120 --> 00:10:09,760
that uh then the rest of it will be

226
00:10:09,760 --> 00:10:10,800
identical

227
00:10:10,800 --> 00:10:12,880
where no matter what kind of tree where

228
00:10:12,880 --> 00:10:15,680
we're setting up

229
00:10:16,240 --> 00:10:19,440
the signaling can be from controllers or

230
00:10:19,440 --> 00:10:20,240
can be by

231
00:10:20,240 --> 00:10:22,160
uh from the leaves towards the root

232
00:10:22,160 --> 00:10:23,760
hardware hop

233
00:10:23,760 --> 00:10:27,279
there are different ihf drafts

234
00:10:27,279 --> 00:10:30,839
specifying the procedures for those two

235
00:10:30,839 --> 00:10:32,720
options

236
00:10:32,720 --> 00:10:35,839
a little a little bit more details here

237
00:10:35,839 --> 00:10:39,040
so um in the upper right corner we have

238
00:10:39,040 --> 00:10:41,360
a part of the bgt updates

239
00:10:41,360 --> 00:10:44,880
where we have nrri networking layer

240
00:10:44,880 --> 00:10:45,680
recipe

241
00:10:45,680 --> 00:10:48,240
information that encodes the tree

242
00:10:48,240 --> 00:10:49,920
identification

243
00:10:49,920 --> 00:10:51,600
for different trees we will use

244
00:10:51,600 --> 00:10:53,600
different nlri

245
00:10:53,600 --> 00:10:56,880
route types for example we can have a

246
00:10:56,880 --> 00:10:59,760
multicast ip multicast tree that is

247
00:10:59,760 --> 00:11:01,839
identified by source group

248
00:11:01,839 --> 00:11:06,079
and we can have srp20 a tunnel

249
00:11:06,079 --> 00:11:10,320
and the nri worker encode candidate pass

250
00:11:10,320 --> 00:11:13,760
root id and tree id and

251
00:11:13,760 --> 00:11:16,800
if it's a mlt tunnel we will just encode

252
00:11:16,800 --> 00:11:17,519
mlpt

253
00:11:17,519 --> 00:11:21,360
factor the next piece of information

254
00:11:21,360 --> 00:11:25,519
in the nrri is the targeted router

255
00:11:25,519 --> 00:11:27,760
if you look at the picture the

256
00:11:27,760 --> 00:11:29,360
controller is

257
00:11:29,360 --> 00:11:33,040
is a button to the left of that picture

258
00:11:33,040 --> 00:11:36,399
that controller calculates the tree and

259
00:11:36,399 --> 00:11:39,600
sends the folding information to

260
00:11:39,600 --> 00:11:41,040
different vouchers

261
00:11:41,040 --> 00:11:44,240
let's say r1 is a node on the tree then

262
00:11:44,240 --> 00:11:45,760
the controller will send the route

263
00:11:45,760 --> 00:11:47,360
towards r1

264
00:11:47,360 --> 00:11:50,399
and that route will encode the treat

265
00:11:50,399 --> 00:11:53,279
identification and also encodes r1's

266
00:11:53,279 --> 00:11:54,480
identification

267
00:11:54,480 --> 00:11:57,680
because that particular route is for r1

268
00:11:57,680 --> 00:12:00,160
itself owning for the multicast tree

269
00:12:00,160 --> 00:12:03,760
specifying the folding information on r1

270
00:12:03,760 --> 00:12:06,399
for that sheet

271
00:12:07,760 --> 00:12:10,000
we will also have a tunnel encapsulation

272
00:12:10,000 --> 00:12:10,959
attributes

273
00:12:10,959 --> 00:12:14,639
that encode forwarding information

274
00:12:14,639 --> 00:12:17,120
that internal encapsulation attributes

275
00:12:17,120 --> 00:12:17,920
are

276
00:12:17,920 --> 00:12:21,120
tga the basic encodes a list of quote

277
00:12:21,120 --> 00:12:23,040
unquote tunnels

278
00:12:23,040 --> 00:12:26,560
each tunnel will then identify

279
00:12:26,560 --> 00:12:29,279
the upstream or downstream information

280
00:12:29,279 --> 00:12:30,399
we'll talk about

281
00:12:30,399 --> 00:12:33,600
that in the next slides a bit more

282
00:12:33,600 --> 00:12:36,720
and finally we also have raw targets to

283
00:12:36,720 --> 00:12:38,399
control the propagation

284
00:12:38,399 --> 00:12:40,320
and importation of that route for

285
00:12:40,320 --> 00:12:41,440
example

286
00:12:41,440 --> 00:12:43,760
the route that the controller signals

287
00:12:43,760 --> 00:12:45,120
for r1

288
00:12:45,120 --> 00:12:48,480
will not be sent towards r2 or r3

289
00:12:48,480 --> 00:12:53,760
because of this raw target

290
00:12:53,760 --> 00:12:56,480
now the tunnel encapsulation attribute

291
00:12:56,480 --> 00:12:56,880
or

292
00:12:56,880 --> 00:13:00,639
tea as we mentioned it just encodes a

293
00:13:00,639 --> 00:13:02,320
list of tunnels

294
00:13:02,320 --> 00:13:05,600
which could be of different panel types

295
00:13:05,600 --> 00:13:08,800
that's already specified for unicast

296
00:13:08,800 --> 00:13:11,839
and in unicast matching traffic

297
00:13:11,839 --> 00:13:14,880
will be load balanced out of one of the

298
00:13:14,880 --> 00:13:16,480
listview tunnels

299
00:13:16,480 --> 00:13:19,440
now when we extend this to bgp multicast

300
00:13:19,440 --> 00:13:20,000
the matching

301
00:13:20,000 --> 00:13:23,120
traffic will be replicated out of all

302
00:13:23,120 --> 00:13:25,920
the listed tunnels

303
00:13:25,920 --> 00:13:28,639
and we also added a new tunnel type we

304
00:13:28,639 --> 00:13:30,560
called any incap

305
00:13:30,560 --> 00:13:34,079
it basically says that any way

306
00:13:34,079 --> 00:13:37,040
of getting to that title endpoint is

307
00:13:37,040 --> 00:13:37,760
fine

308
00:13:37,760 --> 00:13:39,760
whether it's native forwarding because

309
00:13:39,760 --> 00:13:42,000
the upstream and downstream nodes are

310
00:13:42,000 --> 00:13:45,120
directly connected or it could be mpos

311
00:13:45,120 --> 00:13:48,480
iosp gre tunnel sr p2p pass

312
00:13:48,480 --> 00:13:50,880
or whatever is fine as long as you can

313
00:13:50,880 --> 00:13:51,680
get me

314
00:13:51,680 --> 00:13:55,440
to that kind of endpoint that's fine

315
00:13:55,440 --> 00:13:58,720
now the tunnel in that tea could have

316
00:13:58,720 --> 00:14:00,079
sub-povs

317
00:14:00,079 --> 00:14:03,279
to encode more information for example

318
00:14:03,279 --> 00:14:06,800
you could have a rtf sub tlv indicating

319
00:14:06,800 --> 00:14:08,800
that this particular panel

320
00:14:08,800 --> 00:14:12,320
is for receiving traffic from upstream

321
00:14:12,320 --> 00:14:14,480
it could have a tree label a tree saved

322
00:14:14,480 --> 00:14:15,680
sub trb

323
00:14:15,680 --> 00:14:18,240
to specify the incoming or outgoing

324
00:14:18,240 --> 00:14:20,079
label tree label

325
00:14:20,079 --> 00:14:22,079
you could have an endpoint address that

326
00:14:22,079 --> 00:14:25,279
identifies the downstream node or link

327
00:14:25,279 --> 00:14:27,120
and in some other more complicated

328
00:14:27,120 --> 00:14:29,519
scenarios you could have more

329
00:14:29,519 --> 00:14:33,279
subjects us specify more information

330
00:14:33,279 --> 00:14:36,240
we have a simple example here the tea

331
00:14:36,240 --> 00:14:36,880
has

332
00:14:36,880 --> 00:14:39,920
four tunnels the first one is

333
00:14:39,920 --> 00:14:44,880
have has rtf sub-glv indicating that is

334
00:14:44,880 --> 00:14:47,839
this is to specify upstream information

335
00:14:47,839 --> 00:14:49,920
for incoming traffic

336
00:14:49,920 --> 00:14:52,560
and then tunnel two three four there are

337
00:14:52,560 --> 00:14:54,880
two different downstream nodes

338
00:14:54,880 --> 00:14:58,480
um and with the same or different tree

339
00:14:58,480 --> 00:14:59,920
label there

340
00:14:59,920 --> 00:15:02,000
so with this tunnel encapsulation

341
00:15:02,000 --> 00:15:03,760
attributes along

342
00:15:03,760 --> 00:15:06,880
we can create 14 states

343
00:15:06,880 --> 00:15:10,240
um for the for the tunnel

344
00:15:10,240 --> 00:15:15,360
that is identified in the nri

345
00:15:17,040 --> 00:15:21,040
now so far we sort of as

346
00:15:21,040 --> 00:15:24,160
assumed that the foreign plane is mtos

347
00:15:24,160 --> 00:15:27,360
but this sr ntos

348
00:15:27,360 --> 00:15:31,680
or sr t20p or sr or mlg g20p

349
00:15:31,680 --> 00:15:36,639
they work for both ntos and srv6

350
00:15:36,639 --> 00:15:39,759
forwarding plan we just needs a minimum

351
00:15:39,759 --> 00:15:41,680
differences or extensions

352
00:15:41,680 --> 00:15:43,759
in the tunnel encapsulation attribute to

353
00:15:43,759 --> 00:15:47,120
make it work for srv6

354
00:15:47,120 --> 00:15:49,920
in case of mqs forwarding plane the

355
00:15:49,920 --> 00:15:51,519
forwarding onto a branch

356
00:15:51,519 --> 00:15:54,480
uses a transport label followed by a

357
00:15:54,480 --> 00:15:56,079
tree label stack

358
00:15:56,079 --> 00:15:58,399
the transport labels will get a package

359
00:15:58,399 --> 00:16:00,399
to the downstream node

360
00:16:00,399 --> 00:16:03,440
it could be either explicitly encoded

361
00:16:03,440 --> 00:16:06,480
in a ta tunnel or derived

362
00:16:06,480 --> 00:16:08,880
from the tunnel endpoints listed in

363
00:16:08,880 --> 00:16:10,639
their tunnel

364
00:16:10,639 --> 00:16:14,240
the transport labels could also be empty

365
00:16:14,240 --> 00:16:16,880
for example the upstream and functional

366
00:16:16,880 --> 00:16:20,079
downstream nodes are connected directly

367
00:16:20,079 --> 00:16:23,519
it could be also an sr path or it could

368
00:16:23,519 --> 00:16:25,920
even be a label that represents a p2 and

369
00:16:25,920 --> 00:16:28,000
g3 or subtree

370
00:16:28,000 --> 00:16:31,600
that is just like the traditional mldp

371
00:16:31,600 --> 00:16:36,480
over the rcvpt pdmp tunnel case

372
00:16:36,480 --> 00:16:39,360
and then in case of an srv6 forwarding

373
00:16:39,360 --> 00:16:40,800
plane

374
00:16:40,800 --> 00:16:42,880
the above mentioned label stack will

375
00:16:42,880 --> 00:16:46,240
become ipv6 address

376
00:16:46,240 --> 00:16:49,600
remember that in the sr

377
00:16:49,600 --> 00:16:52,560
forwarding plan and ipv6 address is now

378
00:16:52,560 --> 00:16:54,399
divided into a locator id

379
00:16:54,399 --> 00:16:57,360
part and followed by the functional or

380
00:16:57,360 --> 00:16:58,240
function and

381
00:16:58,240 --> 00:17:01,279
argument part so in this case the locate

382
00:17:01,279 --> 00:17:03,279
locator id part will represent the

383
00:17:03,279 --> 00:17:04,559
downstream

384
00:17:04,559 --> 00:17:07,119
corresponding to the transport labels

385
00:17:07,119 --> 00:17:08,799
that is responsible for getting the

386
00:17:08,799 --> 00:17:09,839
traffic to that

387
00:17:09,839 --> 00:17:12,799
downstream node and the function and

388
00:17:12,799 --> 00:17:15,439
argument part of the ipv6 address

389
00:17:15,439 --> 00:17:17,679
will represent the tree it corresponds

390
00:17:17,679 --> 00:17:19,119
into the tree label

391
00:17:19,119 --> 00:17:23,599
so you can see that this uh

392
00:17:23,599 --> 00:17:28,079
the same signaling will work for both

393
00:17:28,079 --> 00:17:33,840
mtos and srb6 forwarding plane

394
00:17:34,240 --> 00:17:36,880
so in this presentation we are focusing

395
00:17:36,880 --> 00:17:37,760
on bg

396
00:17:37,760 --> 00:17:40,880
bgp and car signaling because we believe

397
00:17:40,880 --> 00:17:43,360
it's the best option for example if you

398
00:17:43,360 --> 00:17:44,160
compare

399
00:17:44,160 --> 00:17:48,240
it against psap inc if you're using bgp

400
00:17:48,240 --> 00:17:51,440
signaling from the controller

401
00:17:51,440 --> 00:17:54,880
you only need one session

402
00:17:54,880 --> 00:17:57,520
to one of the bgp speakers in the

403
00:17:57,520 --> 00:17:59,039
network

404
00:17:59,039 --> 00:18:02,000
if you use psap you will need one preset

405
00:18:02,000 --> 00:18:02,720
session

406
00:18:02,720 --> 00:18:06,400
to every tree node additionally

407
00:18:06,400 --> 00:18:10,320
the php signaling has great coverage

408
00:18:10,320 --> 00:18:13,360
and extensibility you

409
00:18:13,360 --> 00:18:16,320
you as you already see we are using the

410
00:18:16,320 --> 00:18:18,720
same bgm cap signaling

411
00:18:18,720 --> 00:18:21,840
procedures and uh encoding to seek to

412
00:18:21,840 --> 00:18:25,280
to signal both ip multicast key srp2 and

413
00:18:25,280 --> 00:18:26,320
p-tunnel

414
00:18:26,320 --> 00:18:29,520
mltp or

415
00:18:29,520 --> 00:18:34,080
possible future extensions

416
00:18:34,320 --> 00:18:36,960
and in some cases we can even use this

417
00:18:36,960 --> 00:18:38,400
pgpm cast

418
00:18:38,400 --> 00:18:43,200
to replace phpmvpn in some scenarios

419
00:18:43,200 --> 00:18:45,039
and this same procedure can be used for

420
00:18:45,039 --> 00:18:47,039
both underlay tunnel signaling

421
00:18:47,039 --> 00:18:50,080
and overlay multicast tree setup it

422
00:18:50,080 --> 00:18:52,400
already specifies

423
00:18:52,400 --> 00:18:54,880
how the bi-directional tree can be can

424
00:18:54,880 --> 00:18:56,400
be supported

425
00:18:56,400 --> 00:18:59,760
it works for both harbor hub signaling

426
00:18:59,760 --> 00:19:02,160
or controller signaling

427
00:19:02,160 --> 00:19:06,000
and it also easily fits into the

428
00:19:06,000 --> 00:19:09,840
end-to-end intelligent multicast tree

429
00:19:09,840 --> 00:19:13,919
framework and also integrates very well

430
00:19:13,919 --> 00:19:15,520
with class for transport

431
00:19:15,520 --> 00:19:17,120
which we will be talking about in the

432
00:19:17,120 --> 00:19:19,280
next photo apps

433
00:19:19,280 --> 00:19:21,760
slides

434
00:19:22,480 --> 00:19:25,360
so now let's talk about end-to-end

435
00:19:25,360 --> 00:19:28,720
inter-region multicast

436
00:19:28,720 --> 00:19:31,280
a multicast tree can span multiple

437
00:19:31,280 --> 00:19:32,640
regions

438
00:19:32,640 --> 00:19:35,679
um here a region could be an as

439
00:19:35,679 --> 00:19:37,679
autonomous system or it can be an igg

440
00:19:37,679 --> 00:19:39,120
area

441
00:19:39,120 --> 00:19:41,200
and you can use different signaling in

442
00:19:41,200 --> 00:19:43,280
different regions

443
00:19:43,280 --> 00:19:45,679
between the regions have we have these

444
00:19:45,679 --> 00:19:46,559
rousers called

445
00:19:46,559 --> 00:19:50,799
rbrs or regional border routers

446
00:19:51,039 --> 00:19:54,559
and for particle region we can do either

447
00:19:54,559 --> 00:19:57,679
implant signaling or overlap signaling

448
00:19:57,679 --> 00:20:00,080
with implant signaling the internal

449
00:20:00,080 --> 00:20:00,880
routers

450
00:20:00,880 --> 00:20:04,480
in the region will maintain states

451
00:20:04,480 --> 00:20:07,679
for those individual end-to-end trees

452
00:20:07,679 --> 00:20:10,080
but with overlap signaling the internal

453
00:20:10,080 --> 00:20:11,520
routers

454
00:20:11,520 --> 00:20:14,000
will not keep state for the end-to-end

455
00:20:14,000 --> 00:20:16,400
trees

456
00:20:19,120 --> 00:20:21,039
let's take a look a closer look at

457
00:20:21,039 --> 00:20:22,320
imbalance signaling

458
00:20:22,320 --> 00:20:25,360
across the region remember that we can

459
00:20:25,360 --> 00:20:27,679
have different methods using different

460
00:20:27,679 --> 00:20:29,280
regions

461
00:20:29,280 --> 00:20:31,360
in this picture you can see that we have

462
00:20:31,360 --> 00:20:32,400
the roots

463
00:20:32,400 --> 00:20:34,720
in the metro region one lives in metro

464
00:20:34,720 --> 00:20:36,720
region two

465
00:20:36,720 --> 00:20:39,760
now it could be that we

466
00:20:39,760 --> 00:20:42,720
have the multicast tree is i it's ip

467
00:20:42,720 --> 00:20:43,760
multicast

468
00:20:43,760 --> 00:20:47,039
identified with source group and in the

469
00:20:47,039 --> 00:20:49,039
metro region 2 we are doing pim

470
00:20:49,039 --> 00:20:50,159
signaling

471
00:20:50,159 --> 00:20:52,559
when it comes to core region by doing

472
00:20:52,559 --> 00:20:54,559
mlg imbalance signaling

473
00:20:54,559 --> 00:20:57,120
we'll have one mltp tunnel for each of

474
00:20:57,120 --> 00:20:59,200
those ip multicast trees

475
00:20:59,200 --> 00:21:01,919
and when it comes to metro region 1 we

476
00:21:01,919 --> 00:21:03,600
switch to bgp

477
00:21:03,600 --> 00:21:05,600
signaling and whether it's controller

478
00:21:05,600 --> 00:21:07,600
based or harbor high hop

479
00:21:07,600 --> 00:21:11,679
signaling another example is that

480
00:21:11,679 --> 00:21:14,960
in the metro region 2 we can have sr p2p

481
00:21:14,960 --> 00:21:16,000
tunnel setup by

482
00:21:16,000 --> 00:21:18,960
psap when it comes to core regime where

483
00:21:18,960 --> 00:21:19,280
you

484
00:21:19,280 --> 00:21:22,240
do php uh m car signaling for uh for the

485
00:21:22,240 --> 00:21:22,559
same

486
00:21:22,559 --> 00:21:26,559
srt1p tunnel and in metro region one

487
00:21:26,559 --> 00:21:29,120
someone said i wanted the pgt srte

488
00:21:29,120 --> 00:21:31,840
signal for that

489
00:21:32,080 --> 00:21:36,240
and finally for um in the metro region 2

490
00:21:36,240 --> 00:21:38,880
you could be doing the legacy mltp

491
00:21:38,880 --> 00:21:40,960
signaling for mltp tunnel

492
00:21:40,960 --> 00:21:44,080
and the core regime we can uh do

493
00:21:44,080 --> 00:21:47,120
that pgpm car signaling from controllers

494
00:21:47,120 --> 00:21:48,080
to set up

495
00:21:48,080 --> 00:21:51,760
set up the mldt tunnel and in region one

496
00:21:51,760 --> 00:21:54,799
we use dcpm and car signaling

497
00:21:54,799 --> 00:21:59,520
but to do a half backup

498
00:21:59,520 --> 00:22:03,360
fashion now in case of halfway half

499
00:22:03,360 --> 00:22:06,000
signaling

500
00:22:07,280 --> 00:22:09,919
a router needs to determine its reverse

501
00:22:09,919 --> 00:22:11,280
password in labor

502
00:22:11,280 --> 00:22:13,840
basically the next hub neighbor towards

503
00:22:13,840 --> 00:22:15,039
the tree root

504
00:22:15,039 --> 00:22:18,000
so it needs to have a route towards the

505
00:22:18,000 --> 00:22:19,600
root

506
00:22:19,600 --> 00:22:22,880
in the inter-region case for example

507
00:22:22,880 --> 00:22:26,720
similes npos or feminist lsr

508
00:22:26,720 --> 00:22:29,200
it's quite often that internal routers

509
00:22:29,200 --> 00:22:31,440
actually do not have the route towards

510
00:22:31,440 --> 00:22:32,880
the

511
00:22:32,880 --> 00:22:36,159
tree roots in that case the rtf needs to

512
00:22:36,159 --> 00:22:38,840
be towards the upstream

513
00:22:38,840 --> 00:22:42,559
rbrs instead and for that

514
00:22:42,559 --> 00:22:45,919
if the team signaling is used then the

515
00:22:45,919 --> 00:22:46,480
pin

516
00:22:46,480 --> 00:22:49,280
rpf vector can be used to encode the

517
00:22:49,280 --> 00:22:51,200
upstream rbr

518
00:22:51,200 --> 00:22:54,240
if it's mldg signaling then mldt

519
00:22:54,240 --> 00:22:55,440
recursive effect

520
00:22:55,440 --> 00:22:58,720
can be used these are all existing

521
00:22:58,720 --> 00:23:02,640
rfc now for bgm

522
00:23:02,640 --> 00:23:05,200
signaling similarly we introduced this

523
00:23:05,200 --> 00:23:06,400
rpf address

524
00:23:06,400 --> 00:23:08,799
extended community to encode the same

525
00:23:08,799 --> 00:23:11,440
information

526
00:23:12,240 --> 00:23:15,520
now with overlay signaling over a region

527
00:23:15,520 --> 00:23:17,600
the internal routers do not keep states

528
00:23:17,600 --> 00:23:20,400
for the end to entries anymore

529
00:23:20,400 --> 00:23:22,799
instead the original border routers were

530
00:23:22,799 --> 00:23:24,000
signaled to each other

531
00:23:24,000 --> 00:23:28,400
directly over targeted ldp sessions or

532
00:23:28,400 --> 00:23:31,440
over bgp sessions there are three

533
00:23:31,440 --> 00:23:34,240
options here the overnight signal link

534
00:23:34,240 --> 00:23:35,840
could be bgpf vpn

535
00:23:35,840 --> 00:23:39,679
specified in this rfc 6c 514

536
00:23:39,679 --> 00:23:43,440
but could be done by mldp

537
00:23:43,440 --> 00:23:46,960
over targeted sessions specified in rfc

538
00:23:46,960 --> 00:23:48,640
7060

539
00:23:48,640 --> 00:23:51,360
and finally it can also be used for i

540
00:23:51,360 --> 00:23:52,480
can use bgbm

541
00:23:52,480 --> 00:23:56,799
test signaling now notice that

542
00:23:56,799 --> 00:24:02,240
when we use mrdp or bcpncats

543
00:24:02,240 --> 00:24:03,840
there is actually no difference between

544
00:24:03,840 --> 00:24:06,000
ovary and in-band signaling anymore

545
00:24:06,000 --> 00:24:08,480
it's just whether the downstream oxygen

546
00:24:08,480 --> 00:24:11,120
nodes are directly conducted or not

547
00:24:11,120 --> 00:24:15,039
in this picture the rb1 and rbr

548
00:24:15,039 --> 00:24:18,159
rbr1 and ibr2 are not directly connected

549
00:24:18,159 --> 00:24:23,600
rbr2 send the signal into rbr-1 directly

550
00:24:23,600 --> 00:24:26,159
and then rbr1 will tunnel the traffic to

551
00:24:26,159 --> 00:24:27,679
downstream rbrs

552
00:24:27,679 --> 00:24:30,880
either by ingress replication or by p2mp

553
00:24:30,880 --> 00:24:31,679
tunnels

554
00:24:31,679 --> 00:24:34,000
and however that p2mp tunnel is set up

555
00:24:34,000 --> 00:24:36,480
is fine

556
00:24:39,679 --> 00:24:41,840
finally let's talk about multiclass with

557
00:24:41,840 --> 00:24:42,720
class 4

558
00:24:42,720 --> 00:24:46,000
transport class 4

559
00:24:46,000 --> 00:24:49,200
transport is a new topic that is ongoing

560
00:24:49,200 --> 00:24:50,880
in the iatf

561
00:24:50,880 --> 00:24:54,400
basic idea is that

562
00:24:54,559 --> 00:24:57,120
in operation network the underlay routes

563
00:24:57,120 --> 00:24:58,480
are classified into

564
00:24:58,480 --> 00:25:01,600
transport classes for example we have

565
00:25:01,600 --> 00:25:03,279
red transport class

566
00:25:03,279 --> 00:25:05,600
blue transport class and green transport

567
00:25:05,600 --> 00:25:06,799
class

568
00:25:06,799 --> 00:25:09,520
those underlay routes are advertised

569
00:25:09,520 --> 00:25:10,559
with this new

570
00:25:10,559 --> 00:25:12,880
sapphi called class for transport

571
00:25:12,880 --> 00:25:14,240
station

572
00:25:14,240 --> 00:25:17,440
and they are the routes attached with a

573
00:25:17,440 --> 00:25:20,799
transfer class raw target the raw target

574
00:25:20,799 --> 00:25:22,400
specified the transfer

575
00:25:22,400 --> 00:25:25,360
transport class also controls route

576
00:25:25,360 --> 00:25:26,159
propagation

577
00:25:26,159 --> 00:25:29,600
and importation and the service routes

578
00:25:29,600 --> 00:25:31,600
or overlay routes will carry a mapping

579
00:25:31,600 --> 00:25:32,799
community

580
00:25:32,799 --> 00:25:35,200
that will map to the transport class

581
00:25:35,200 --> 00:25:36,240
that is used

582
00:25:36,240 --> 00:25:38,640
to resolve the protocol next stop so

583
00:25:38,640 --> 00:25:40,640
that's the basic idea of this

584
00:25:40,640 --> 00:25:44,880
php class for transport framework

585
00:25:44,880 --> 00:25:49,360
now multicast can easily

586
00:25:49,360 --> 00:25:52,080
fit into that into that picture for

587
00:25:52,080 --> 00:25:54,000
example a multicast tree or a multicast

588
00:25:54,000 --> 00:25:58,000
channel could be a underlay one

589
00:25:58,000 --> 00:26:00,960
for a particular transport class or it

590
00:26:00,960 --> 00:26:02,480
could be an overlay one

591
00:26:02,480 --> 00:26:06,320
using a particular transport class

592
00:26:06,480 --> 00:26:09,520
either way when we use bgpmk

593
00:26:09,520 --> 00:26:14,720
signaling the bgp messages can carry

594
00:26:14,720 --> 00:26:16,960
a mapping community for the transport

595
00:26:16,960 --> 00:26:18,400
transfer class

596
00:26:18,400 --> 00:26:21,679
and that will affect the selection of

597
00:26:21,679 --> 00:26:22,240
paths

598
00:26:22,240 --> 00:26:25,440
or tunnels between an upstream

599
00:26:25,440 --> 00:26:28,159
and its downstream nodes it could also

600
00:26:28,159 --> 00:26:29,440
affect the

601
00:26:29,440 --> 00:26:31,679
selection of upstream nodes on a

602
00:26:31,679 --> 00:26:38,320
downstream node

603
00:26:38,320 --> 00:26:42,080
in summary we looked at uh

604
00:26:42,080 --> 00:26:45,360
principles of sr networks and various

605
00:26:45,360 --> 00:26:48,799
options for multicast in sr networks

606
00:26:48,799 --> 00:26:52,400
those options could be per s

607
00:26:52,400 --> 00:26:55,679
could be per sr principles or not mainly

608
00:26:55,679 --> 00:26:57,520
it's basically

609
00:26:57,520 --> 00:27:01,679
per deployment considerations

610
00:27:01,919 --> 00:27:05,120
in the non-beer non-traditional options

611
00:27:05,120 --> 00:27:07,440
we believe bhp multicast is the best

612
00:27:07,440 --> 00:27:09,840
option

613
00:27:10,080 --> 00:27:12,480
it only needs one single session from

614
00:27:12,480 --> 00:27:14,240
the controller to one of the bgp

615
00:27:14,240 --> 00:27:16,480
speakers

616
00:27:16,480 --> 00:27:19,200
and it offers great coverage and

617
00:27:19,200 --> 00:27:21,840
extensibility

618
00:27:22,080 --> 00:27:25,120
in particular if you already have a

619
00:27:25,120 --> 00:27:28,960
mldp deployment then using bgp

620
00:27:28,960 --> 00:27:32,240
signals mldp

621
00:27:32,399 --> 00:27:36,399
will make the transition a lot easier

622
00:27:36,399 --> 00:27:40,080
and also because of the

623
00:27:40,080 --> 00:27:44,240
flexibility and extensibility

624
00:27:44,720 --> 00:27:47,360
due to opex natural nature of ammo

625
00:27:47,360 --> 00:27:48,159
effect

626
00:27:48,159 --> 00:27:51,200
that will make the tree identification a

627
00:27:51,200 --> 00:27:52,320
lot easier

628
00:27:52,320 --> 00:27:55,200
when you use mrdp factor to identify the

629
00:27:55,200 --> 00:27:57,520
tree

630
00:27:58,000 --> 00:28:01,679
so an end to end broadcast tree or

631
00:28:01,679 --> 00:28:03,200
vertical channel

632
00:28:03,200 --> 00:28:05,520
they span multiple regions you can use

633
00:28:05,520 --> 00:28:06,559
different

634
00:28:06,559 --> 00:28:09,039
signaling methods in different regions

635
00:28:09,039 --> 00:28:10,399
and bgp

636
00:28:10,399 --> 00:28:14,960
signaling is one way to

637
00:28:14,960 --> 00:28:17,440
stitch everything together especially in

638
00:28:17,440 --> 00:28:18,880
the in the region case

639
00:28:18,880 --> 00:28:22,720
bgp is like the universal language here

640
00:28:22,720 --> 00:28:26,240
and finally hdm cast signaling

641
00:28:26,240 --> 00:28:28,880
can easily integrate with class 4

642
00:28:28,880 --> 00:28:29,600
transport

643
00:28:29,600 --> 00:28:32,158
concepts

644
00:28:32,160 --> 00:28:36,489
[Music]

645
00:28:37,840 --> 00:28:41,919
well that was one of the more

646
00:28:41,919 --> 00:28:44,399
in-depth presentations about multicast

647
00:28:44,399 --> 00:28:46,159
i've ever seen

648
00:28:46,159 --> 00:28:49,440
um so let's see what we have for

649
00:28:49,440 --> 00:28:52,000
questions

650
00:28:53,440 --> 00:28:58,080
the answer is nobody's asked anything

651
00:28:58,080 --> 00:29:01,600
do you have a closing comment

652
00:29:01,600 --> 00:29:03,039
anything you've thought about since you

653
00:29:03,039 --> 00:29:06,000
did the presentation

654
00:29:07,279 --> 00:29:10,320
uh actually no i hope

655
00:29:10,320 --> 00:29:12,640
people may find this information useful

656
00:29:12,640 --> 00:29:13,919
i'm

657
00:29:13,919 --> 00:29:18,000
always happy to have follow-up um

658
00:29:18,000 --> 00:29:22,000
discussions um anywhere in ietf or

659
00:29:22,000 --> 00:29:23,919
through our customer connections your

660
00:29:23,919 --> 00:29:25,039
customer connections

661
00:29:25,039 --> 00:29:26,799
and your email address is readily

662
00:29:26,799 --> 00:29:28,159
available yes

663
00:29:28,159 --> 00:29:37,600
thank you very much

