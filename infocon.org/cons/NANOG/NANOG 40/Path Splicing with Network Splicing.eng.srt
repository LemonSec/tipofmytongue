1
00:00:00,140 --> 00:00:05,430
hi<font color="#E5E5E5"> today I will be telling you about</font>

2
00:00:03,179 --> 00:00:08,000
some research that<font color="#CCCCCC"> I've been</font><font color="#E5E5E5"> doing with</font>

3
00:00:05,430 --> 00:00:10,769
<font color="#CCCCCC">my student murtuza mark multi wala and</font>

4
00:00:08,000 --> 00:00:13,500
another professor at Georgia Tech Center

5
00:00:10,769 --> 00:00:16,529
from Paula who directs the algorithms

6
00:00:13,500 --> 00:00:20,400
and randomness Center this work that<font color="#E5E5E5"> I'm</font>

7
00:00:16,529 --> 00:00:23,009
going<font color="#E5E5E5"> to describe is basically a very</font>

8
00:00:20,400 --> 00:00:29,369
scalable way of exposing lots and lots

9
00:00:23,010 --> 00:00:31,769
of diverse paths to end systems so as we

10
00:00:29,369 --> 00:00:33,899
know there are several things that

11
00:00:31,769 --> 00:00:37,980
routing actually does quite well these

12
00:00:33,899 --> 00:00:40,260
days providing reach ability to lots and

13
00:00:37,980 --> 00:00:42,360
lots of destinations and doing so in a

14
00:00:40,260 --> 00:00:48,059
scalable fashion handling things like

15
00:00:42,360 --> 00:00:50,399
churn and size of the global total

16
00:00:48,059 --> 00:00:52,739
number of networks and destinations

17
00:00:50,399 --> 00:00:55,770
quite well there are other things that

18
00:00:52,739 --> 00:00:58,230
arguably it does less well I guess even

19
00:00:55,770 --> 00:00:59,910
<font color="#CCCCCC">the first two are our scalability and in</font>

20
00:00:58,230 --> 00:01:03,599
particular is coming in to debate a

21
00:00:59,910 --> 00:01:07,939
recent recently as well but these the

22
00:01:03,600 --> 00:01:10,619
second two goals diversity in particular

23
00:01:07,939 --> 00:01:13,408
it's<font color="#E5E5E5"> something that's arguably today's</font>

24
00:01:10,619 --> 00:01:16,229
protocols don't do quite as well in

25
00:01:13,409 --> 00:01:19,140
particular<font color="#CCCCCC"> what we mean by this is can</font>

26
00:01:16,229 --> 00:01:21,360
we expose paths to end hosts such a way

27
00:01:19,140 --> 00:01:23,909
that<font color="#E5E5E5"> you know if nodes and links fail</font>

28
00:01:21,360 --> 00:01:25,740
for some definition of fail that<font color="#E5E5E5"> could</font>

29
00:01:23,909 --> 00:01:27,390
<font color="#E5E5E5">be hard failures but it could also be</font>

30
00:01:25,740 --> 00:01:31,500
things like persistent congestion or

31
00:01:27,390 --> 00:01:34,409
packet loss can we maintain connectivity

32
00:01:31,500 --> 00:01:37,829
good connectivity between between<font color="#E5E5E5"> the</font>

33
00:01:34,409 --> 00:01:39,720
endpoints<font color="#CCCCCC"> that might be useful for a</font>

34
00:01:37,829 --> 00:01:42,210
variety of reasons one<font color="#E5E5E5"> of course being</font>

35
00:01:39,720 --> 00:01:45,658
fault tolerance the other or seeing if

36
00:01:42,210 --> 00:01:47,220
you could have these multiple paths

37
00:01:45,659 --> 00:01:50,880
available so that the<font color="#CCCCCC"> Antos could use</font>

38
00:01:47,220 --> 00:01:54,000
them say simultaneously then you might

39
00:01:50,880 --> 00:01:55,560
have the<font color="#CCCCCC"> ability to exploit better the</font>

40
00:01:54,000 --> 00:01:57,180
capacity of the<font color="#E5E5E5"> underlying</font><font color="#CCCCCC"> network</font>

41
00:01:55,560 --> 00:01:58,590
dimension if you could use multiple

42
00:01:57,180 --> 00:02:00,780
paths in parallel rather than just

43
00:01:58,590 --> 00:02:02,219
single path the other of<font color="#CCCCCC"> course is that</font>

44
00:02:00,780 --> 00:02:04,530
<font color="#E5E5E5">you want to do this in such a way that</font>

45
00:02:02,219 --> 00:02:06,210
you<font color="#CCCCCC"> know if you're using these paths</font>

46
00:02:04,530 --> 00:02:07,770
that are you know rather<font color="#CCCCCC"> than just the</font>

47
00:02:06,210 --> 00:02:10,619
single shortest path of the single best

48
00:02:07,770 --> 00:02:12,540
path you're going to of course by nature

49
00:02:10,619 --> 00:02:14,930
be picking some paths that are

50
00:02:12,540 --> 00:02:17,269
you know not the<font color="#E5E5E5"> absolute best but the</font>

51
00:02:14,930 --> 00:02:19,049
set of paths that you use you want to

52
00:02:17,269 --> 00:02:20,879
you know they<font color="#E5E5E5"> shouldn't be too</font>

53
00:02:19,049 --> 00:02:24,060
circuitous or suit too long in<font color="#E5E5E5"> the case</font>

54
00:02:20,879 --> 00:02:25,260
of shortest paths routing we like to

55
00:02:24,060 --> 00:02:30,810
think<font color="#E5E5E5"> of this</font><font color="#CCCCCC"> is you know having low</font>

56
00:02:25,260 --> 00:02:32,760
stretch arguably we'd like to do a

57
00:02:30,810 --> 00:02:35,549
little<font color="#CCCCCC"> better than what today's routing</font>

58
00:02:32,760 --> 00:02:37,140
protocol short<font color="#E5E5E5"> on particular today's I</font>

59
00:02:35,549 --> 00:02:39,209
<font color="#CCCCCC">jeebies are giving us most of this talk</font>

60
00:02:37,140 --> 00:02:43,939
is<font color="#E5E5E5"> going to be about sort of igp style</font>

61
00:02:39,209 --> 00:02:46,200
routing and how we could do better the

62
00:02:43,939 --> 00:02:49,260
<font color="#E5E5E5">one particular approach to doing this</font>

63
00:02:46,200 --> 00:02:50,909
might be doing something like multipath

64
00:02:49,260 --> 00:02:53,250
and of course there are existing

65
00:02:50,909 --> 00:02:55,319
solutions out there today like ecmp and

66
00:02:53,250 --> 00:02:58,290
things like that that<font color="#CCCCCC"> we know about the</font>

67
00:02:55,319 --> 00:03:00,899
do allow nodes to send traffic along

68
00:02:58,290 --> 00:03:02,970
multiple paths through the network have

69
00:03:00,900 --> 00:03:06,269
sort of vanilla multipath though has its

70
00:03:02,970 --> 00:03:08,250
own set of problems<font color="#E5E5E5"> right so imagine you</font>

71
00:03:06,269 --> 00:03:09,989
know this is<font color="#CCCCCC"> just a toy example of</font>

72
00:03:08,250 --> 00:03:12,919
course which<font color="#CCCCCC"> is to illustrate the point</font>

73
00:03:09,989 --> 00:03:15,689
clearly suppose<font color="#CCCCCC"> that we have you know to</font>

74
00:03:12,919 --> 00:03:19,579
link disjoint paths between a notice and

75
00:03:15,689 --> 00:03:22,680
<font color="#E5E5E5">an OT a red path and a blue path well</font>

76
00:03:19,579 --> 00:03:24,510
that's that's all well and good but the

77
00:03:22,680 --> 00:03:26,909
problem here is of course that if any

78
00:03:24,510 --> 00:03:28,918
link on both on each of these paths

79
00:03:26,909 --> 00:03:31,519
fails<font color="#E5E5E5"> than</font><font color="#CCCCCC"> SNT become disconnected right</font>

80
00:03:28,919 --> 00:03:34,169
doesn't<font color="#E5E5E5"> have to be a cut of the graph</font>

81
00:03:31,519 --> 00:03:38,010
just adding any link failing on both of

82
00:03:34,169 --> 00:03:41,940
these paths<font color="#E5E5E5"> at once creates problems by</font>

83
00:03:38,010 --> 00:03:44,608
disconnecting s from T again by failure

84
00:03:41,940 --> 00:03:46,409
here we could we could mean cut or we

85
00:03:44,609 --> 00:03:49,409
could<font color="#E5E5E5"> also just be talking</font><font color="#CCCCCC"> about poor</font>

86
00:03:46,409 --> 00:03:51,510
performance congestion what we'd really

87
00:03:49,409 --> 00:03:54,179
like is it something<font color="#CCCCCC"> more like this</font>

88
00:03:51,510 --> 00:03:55,638
where the end systems or any pair<font color="#CCCCCC"> of</font>

89
00:03:54,180 --> 00:03:58,049
nodes if you will remain connected

90
00:03:55,639 --> 00:04:00,659
unless the underlying graph itself is

91
00:03:58,049 --> 00:04:04,590
disconnected right so if we have a cut

92
00:04:00,659 --> 00:04:07,198
for example as I've shown here if you

93
00:04:04,590 --> 00:04:08,430
know the the<font color="#CCCCCC"> red edge in the blue edge</font>

94
00:04:07,199 --> 00:04:09,720
that have shown failing here that

95
00:04:08,430 --> 00:04:11,129
<font color="#E5E5E5">actually creates a partition on</font><font color="#CCCCCC"> the</font>

96
00:04:09,720 --> 00:04:13,228
graph well there's<font color="#CCCCCC"> obviously nothing we</font>

97
00:04:11,129 --> 00:04:15,739
can do in<font color="#CCCCCC"> that case but in the former</font>

98
00:04:13,229 --> 00:04:18,359
case where the underlying graph the

99
00:04:15,739 --> 00:04:20,489
physical topology is still connected<font color="#E5E5E5"> we</font>

100
00:04:18,358 --> 00:04:22,859
want the routing protocol<font color="#CCCCCC"> actually to</font>

101
00:04:20,488 --> 00:04:24,590
give us some way or give us some way of

102
00:04:22,860 --> 00:04:26,389
actually reaching<font color="#E5E5E5"> T and that's basically</font>

103
00:04:24,590 --> 00:04:30,409
what splicing is

104
00:04:26,389 --> 00:04:32,449
about so splicing is actually not a new

105
00:04:30,409 --> 00:04:34,699
routing protocol at all what we're going

106
00:04:32,449 --> 00:04:36,259
to do is take the<font color="#CCCCCC"> igp and play some</font>

107
00:04:34,699 --> 00:04:39,680
<font color="#E5E5E5">tricks with it</font><font color="#CCCCCC"> actually run it multiple</font>

108
00:04:36,259 --> 00:04:41,659
times so there's some support for

109
00:04:39,680 --> 00:04:43,669
similar types<font color="#E5E5E5"> of things routers today</font>

110
00:04:41,659 --> 00:04:44,960
<font color="#E5E5E5">there there</font><font color="#CCCCCC"> are a few tweaks that I</font>

111
00:04:43,669 --> 00:04:46,520
think we that we might need<font color="#CCCCCC"> to actually</font>

112
00:04:44,960 --> 00:04:48,099
make this happen so I've got some

113
00:04:46,520 --> 00:04:50,779
questions for you at the end<font color="#CCCCCC"> about that</font>

114
00:04:48,099 --> 00:04:52,430
the main<font color="#CCCCCC"> idea is actually to run</font>

115
00:04:50,779 --> 00:04:54,139
multiple<font color="#E5E5E5"> instances of your routing</font>

116
00:04:52,430 --> 00:04:56,060
protocol right so you're going<font color="#E5E5E5"> to</font>

117
00:04:54,139 --> 00:04:58,699
compute multiple forwarding trees<font color="#CCCCCC"> per</font>

118
00:04:56,060 --> 00:04:59,509
<font color="#E5E5E5">the desk or destination essentially how</font>

119
00:04:58,699 --> 00:05:00,439
are you going to do<font color="#E5E5E5"> that well you're</font>

120
00:04:59,509 --> 00:05:02,419
<font color="#E5E5E5">basically going to run</font><font color="#CCCCCC"> multiple</font>

121
00:05:00,439 --> 00:05:04,340
instances the protocol but each instance

122
00:05:02,419 --> 00:05:05,599
is going to be configured slightly

123
00:05:04,340 --> 00:05:07,818
different way so if you're if you're

124
00:05:05,599 --> 00:05:10,099
familiar with some things<font color="#CCCCCC"> in the IETF</font>

125
00:05:07,819 --> 00:05:11,300
like multi topology routing or there's

126
00:05:10,099 --> 00:05:14,180
some recent work on multi routing

127
00:05:11,300 --> 00:05:16,460
configuration it's it's a similar those

128
00:05:14,180 --> 00:05:18,110
are similar kinds of ideas now the trick

129
00:05:16,460 --> 00:05:21,560
here that we're<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> use that</font><font color="#E5E5E5"> gives</font>

130
00:05:18,110 --> 00:05:23,449
us a big win over over those existing

131
00:05:21,560 --> 00:05:24,680
schemes is we're going<font color="#E5E5E5"> to allow the</font>

132
00:05:23,449 --> 00:05:29,599
<font color="#E5E5E5">packets to actually switch trees</font>

133
00:05:24,680 --> 00:05:32,120
anywhere midstream along and route from

134
00:05:29,599 --> 00:05:34,099
source to destination right so imagine

135
00:05:32,120 --> 00:05:37,520
we have<font color="#E5E5E5"> a graph like this from s to T</font>

136
00:05:34,099 --> 00:05:38,360
and the first step<font color="#E5E5E5"> of course is as I</font>

137
00:05:37,520 --> 00:05:40,270
mentioned we're going to run multiple

138
00:05:38,360 --> 00:05:42,830
<font color="#E5E5E5">instances of the routing protocol</font>

139
00:05:40,270 --> 00:05:44,688
essentially by and then for<font color="#CCCCCC"> each</font>

140
00:05:42,830 --> 00:05:46,688
instance<font color="#CCCCCC"> we're going to run / those with</font>

141
00:05:44,689 --> 00:05:50,389
perturbed link weights of the base graph

142
00:05:46,689 --> 00:05:54,620
<font color="#E5E5E5">okay so suppose</font><font color="#CCCCCC"> we have now a red tree</font>

143
00:05:50,389 --> 00:05:56,479
and a green tea tree from s to<font color="#E5E5E5"> T the</font>

144
00:05:54,620 --> 00:05:58,520
second step of course is rather than

145
00:05:56,479 --> 00:06:00,139
just you know<font color="#E5E5E5"> picking the red tree or</font>

146
00:05:58,520 --> 00:06:02,240
<font color="#CCCCCC">the green tree we're going to</font><font color="#E5E5E5"> allow that</font>

147
00:06:00,139 --> 00:06:06,020
traffic to actually switch from red to

148
00:06:02,240 --> 00:06:07,729
green at any point along the path you

149
00:06:06,020 --> 00:06:11,719
may have some questions about this in

150
00:06:07,729 --> 00:06:13,099
particular<font color="#E5E5E5"> does it cause loops and in in</font>

151
00:06:11,719 --> 00:06:14,180
the interest of<font color="#CCCCCC"> time I'm not going to</font>

152
00:06:13,099 --> 00:06:15,800
get into<font color="#E5E5E5"> that in the talk but if you</font>

153
00:06:14,180 --> 00:06:17,930
want<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about in the questions we</font>

154
00:06:15,800 --> 00:06:23,089
can certainly<font color="#E5E5E5"> get into that so that's</font>

155
00:06:17,930 --> 00:06:26,029
basically the main idea<font color="#CCCCCC"> and the reason I</font>

156
00:06:23,089 --> 00:06:27,800
<font color="#CCCCCC">think this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a sort of</font><font color="#E5E5E5"> particularly</font>

157
00:06:26,029 --> 00:06:31,009
interesting is you note that by allowing

158
00:06:27,800 --> 00:06:32,689
the traffic to switch at any point along

159
00:06:31,009 --> 00:06:34,849
the path essentially<font color="#CCCCCC"> you get an</font>

160
00:06:32,689 --> 00:06:37,159
exponential number of choices in terms

161
00:06:34,849 --> 00:06:39,349
of the paths<font color="#E5E5E5"> that you can use</font><font color="#CCCCCC"> to send</font>

162
00:06:37,159 --> 00:06:40,248
<font color="#E5E5E5">your traffic from s to T but you don't</font>

163
00:06:39,349 --> 00:06:42,369
get an exponentially

164
00:06:40,249 --> 00:06:44,419
<font color="#E5E5E5">recent complexity right so the sort of</font>

165
00:06:42,369 --> 00:06:46,009
Achilles heel<font color="#CCCCCC"> of a lot of multipath</font>

166
00:06:44,419 --> 00:06:48,139
routing protocols is yes you can

167
00:06:46,009 --> 00:06:49,369
advertise<font color="#E5E5E5"> multiple paths out but you</font>

168
00:06:48,139 --> 00:06:50,959
<font color="#E5E5E5">know is every node going to advertise</font>

169
00:06:49,369 --> 00:06:52,639
multiple paths and that could<font color="#E5E5E5"> create a</font>

170
00:06:50,959 --> 00:06:54,739
lot<font color="#CCCCCC"> of state insurance and so forth and</font>

171
00:06:52,639 --> 00:06:56,239
we don't<font color="#E5E5E5"> really run into any of those</font>

172
00:06:54,739 --> 00:06:57,919
<font color="#E5E5E5">problems all we're doing is running k</font>

173
00:06:56,239 --> 00:06:59,628
instances of the routing protocol so

174
00:06:57,919 --> 00:07:05,239
it's a linear increase in the amount of

175
00:06:59,629 --> 00:07:07,639
state but<font color="#CCCCCC"> we get an exponential gain in</font>

176
00:07:05,239 --> 00:07:11,808
terms of the number<font color="#E5E5E5"> of paths that are</font>

177
00:07:07,639 --> 00:07:12,979
available<font color="#E5E5E5"> to the source so well so how</font>

178
00:07:11,809 --> 00:07:15,829
do we<font color="#E5E5E5"> do this let me sort of describe</font>

179
00:07:12,979 --> 00:07:19,849
<font color="#E5E5E5">each of those steps in sequence so the</font>

180
00:07:15,829 --> 00:07:21,289
first is is<font color="#E5E5E5"> to the first thing we need</font>

181
00:07:19,849 --> 00:07:23,659
to do is give each instance of<font color="#E5E5E5"> the</font>

182
00:07:21,289 --> 00:07:26,808
routing protocol access to<font color="#CCCCCC"> different</font>

183
00:07:23,659 --> 00:07:28,279
paths in<font color="#E5E5E5"> the underlying graph the idea</font>

184
00:07:26,809 --> 00:07:30,469
is basically this<font color="#E5E5E5"> imagine you start off</font>

185
00:07:28,279 --> 00:07:32,389
with a base graph and you're in your<font color="#CCCCCC"> IGP</font>

186
00:07:30,469 --> 00:07:33,469
right that has certain link wait so the

187
00:07:32,389 --> 00:07:34,549
link weights<font color="#E5E5E5"> that I haven't haven't</font>

188
00:07:33,469 --> 00:07:37,369
labeled there you can just<font color="#E5E5E5"> assume</font>

189
00:07:34,549 --> 00:07:41,808
<font color="#E5E5E5">they're one so this graph there's some</font>

190
00:07:37,369 --> 00:07:45,229
shortest path tree that that is formed

191
00:07:41,809 --> 00:07:48,259
<font color="#CCCCCC">from s to T and the idea is take that</font>

192
00:07:45,229 --> 00:07:49,938
base graph and perturb the link weights

193
00:07:48,259 --> 00:07:51,709
right and<font color="#E5E5E5"> there are various ways to</font>

194
00:07:49,939 --> 00:07:52,849
perturb them there's a tech report that

195
00:07:51,709 --> 00:07:54,649
<font color="#E5E5E5">I'll point you to at the end</font><font color="#CCCCCC"> of the talk</font>

196
00:07:52,849 --> 00:07:56,089
where<font color="#E5E5E5"> we look at different types of</font>

197
00:07:54,649 --> 00:07:58,489
perturbation schemes but the idea is

198
00:07:56,089 --> 00:08:01,219
then take those<font color="#E5E5E5"> link weights and</font>

199
00:07:58,489 --> 00:08:03,558
generate a new set of weights based on

200
00:08:01,219 --> 00:08:06,739
perturbations<font color="#CCCCCC"> at the original so they're</font>

201
00:08:03,559 --> 00:08:08,599
<font color="#E5E5E5">not completely random but you take the</font>

202
00:08:06,739 --> 00:08:10,008
base graph and actually just just tweak

203
00:08:08,599 --> 00:08:11,808
the<font color="#CCCCCC"> way it's just slightly so what you</font>

204
00:08:10,009 --> 00:08:13,909
<font color="#E5E5E5">get are our paths that are you know</font>

205
00:08:11,809 --> 00:08:16,279
slightly<font color="#E5E5E5"> longer than shortest paths and</font>

206
00:08:13,909 --> 00:08:18,619
I'll briefly describe how what i mean<font color="#E5E5E5"> by</font>

207
00:08:16,279 --> 00:08:20,509
<font color="#E5E5E5">slightly longer and a little bit but the</font>

208
00:08:18,619 --> 00:08:22,009
idea is if you do this repeatedly then

209
00:08:20,509 --> 00:08:24,049
you get a<font color="#E5E5E5"> bunch of perturb graphs and</font>

210
00:08:22,009 --> 00:08:25,909
you can overlay them and now you have<font color="#E5E5E5"> a</font>

211
00:08:24,049 --> 00:08:27,349
bunch<font color="#E5E5E5"> of graphs like the red tree in the</font>

212
00:08:25,909 --> 00:08:28,579
green tree etc like I should like<font color="#E5E5E5"> I</font>

213
00:08:27,349 --> 00:08:30,349
showed you on the previous slide so

214
00:08:28,579 --> 00:08:32,389
that's that's kind of the first step is

215
00:08:30,349 --> 00:08:35,659
run<font color="#CCCCCC"> the run the routing protocol</font>

216
00:08:32,389 --> 00:08:38,509
multiple times<font color="#CCCCCC"> to get multiple trees the</font>

217
00:08:35,659 --> 00:08:41,360
next step is actually to allow these

218
00:08:38,509 --> 00:08:43,969
these tables to actually coexist and

219
00:08:41,360 --> 00:08:45,649
this<font color="#E5E5E5"> actually there's there's a you know</font>

220
00:08:43,969 --> 00:08:47,600
similar type of<font color="#E5E5E5"> functionality that's</font>

221
00:08:45,649 --> 00:08:49,910
already in routers today with<font color="#CCCCCC"> vr af-s</font>

222
00:08:47,600 --> 00:08:52,429
<font color="#CCCCCC">and and such but the the idea here is</font>

223
00:08:49,910 --> 00:08:53,730
now just<font color="#E5E5E5"> to install those in in separate</font>

224
00:08:52,429 --> 00:08:56,970
forwarding tables and

225
00:08:53,730 --> 00:09:01,699
and index them based on some you know we

226
00:08:56,970 --> 00:09:03,570
call it sort<font color="#E5E5E5"> of a slice ID um then</font>

227
00:09:01,699 --> 00:09:05,490
there's one additional thing that

228
00:09:03,570 --> 00:09:08,040
<font color="#CCCCCC">actually has to be</font><font color="#E5E5E5"> added you</font><font color="#CCCCCC"> know to</font>

229
00:09:05,490 --> 00:09:09,750
<font color="#E5E5E5">actually exercise these paths that are</font>

230
00:09:08,040 --> 00:09:11,760
sitting there right and that's<font color="#E5E5E5"> but we</font>

231
00:09:09,750 --> 00:09:15,000
need to actually indicate somewhere at

232
00:09:11,760 --> 00:09:17,579
each hop which forwarding table this

233
00:09:15,000 --> 00:09:18,810
packet should actually take at that

234
00:09:17,579 --> 00:09:22,109
particular node so what we do is

235
00:09:18,810 --> 00:09:23,969
actually toss an extra header you<font color="#CCCCCC"> know</font>

236
00:09:22,110 --> 00:09:27,029
this could presumably go<font color="#CCCCCC"> in an IP option</font>

237
00:09:23,970 --> 00:09:28,589
field or you know in the paper we

238
00:09:27,029 --> 00:09:32,459
describe it as just<font color="#E5E5E5"> adding a shim right</font>

239
00:09:28,589 --> 00:09:33,720
underneath the IP header but the idea is

240
00:09:32,459 --> 00:09:38,279
basically you just have a string of bits

241
00:09:33,720 --> 00:09:39,630
and at each hop suppose you have<font color="#CCCCCC"> K of</font>

242
00:09:38,279 --> 00:09:42,389
these trees<font color="#E5E5E5"> right so then you're going</font>

243
00:09:39,630 --> 00:09:44,310
<font color="#E5E5E5">to need log K bits to actually index</font>

244
00:09:42,389 --> 00:09:46,350
into into each of those forwarding

245
00:09:44,310 --> 00:09:48,000
tables right so now the operation that

246
00:09:46,350 --> 00:09:50,519
<font color="#E5E5E5">each router is going to perform or each</font>

247
00:09:48,000 --> 00:09:52,380
router that supports this that it's

248
00:09:50,519 --> 00:09:53,670
going<font color="#E5E5E5"> to look at the rightmost log K</font>

249
00:09:52,380 --> 00:09:56,310
bits figure out which table it should

250
00:09:53,670 --> 00:09:57,839
should index into use the use of that

251
00:09:56,310 --> 00:10:03,420
particular next<font color="#CCCCCC"> top two for the traffic</font>

252
00:09:57,839 --> 00:10:05,430
<font color="#E5E5E5">shift the bits and forward the packet so</font>

253
00:10:03,420 --> 00:10:07,939
<font color="#E5E5E5">there</font><font color="#CCCCCC"> are a couple things</font><font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to draw</font>

254
00:10:05,430 --> 00:10:10,170
your attention to the first is that

255
00:10:07,940 --> 00:10:11,850
based on you know based<font color="#E5E5E5"> on where we</font>

256
00:10:10,170 --> 00:10:13,889
decide to put these bits this is totally

257
00:10:11,850 --> 00:10:15,240
incrementally deployable because you

258
00:10:13,889 --> 00:10:16,589
know any router that doesn't understand

259
00:10:15,240 --> 00:10:18,600
this can just<font color="#E5E5E5"> forward the traffic based</font>

260
00:10:16,589 --> 00:10:22,380
on on the IP<font color="#CCCCCC"> header any router that does</font>

261
00:10:18,600 --> 00:10:25,050
can can do this magic the other is you

262
00:10:22,380 --> 00:10:26,250
know which may raise concern I guess we

263
00:10:25,050 --> 00:10:28,649
can talk about<font color="#E5E5E5"> that at</font><font color="#CCCCCC"> the end as well</font>

264
00:10:26,250 --> 00:10:34,500
this is a this is a research talk is

265
00:10:28,649 --> 00:10:36,389
that to access these multiple paths the

266
00:10:34,500 --> 00:10:38,579
source doesn't need to do anything<font color="#E5E5E5"> fancy</font>

267
00:10:36,389 --> 00:10:40,470
like you know know the IP addresses of

268
00:10:38,579 --> 00:10:43,170
the hops along the path basically this

269
00:10:40,470 --> 00:10:47,069
sequence of<font color="#E5E5E5"> bits is opaque so it gets</font>

270
00:10:43,170 --> 00:10:49,680
this sort<font color="#E5E5E5"> of nice black box interface</font>

271
00:10:47,069 --> 00:10:51,479
where all it needs to do is say change

272
00:10:49,680 --> 00:10:54,540
these bits and with high probability it

273
00:10:51,480 --> 00:10:56,760
will get a new path or suppose it wants

274
00:10:54,540 --> 00:10:59,279
to use multiple paths in parallel it can

275
00:10:56,760 --> 00:11:01,470
send traffic out to some destination

276
00:10:59,279 --> 00:11:04,079
with different bits set in this header

277
00:11:01,470 --> 00:11:06,620
in and send traffic along multiple paths

278
00:11:04,079 --> 00:11:06,620
in parallel

279
00:11:07,290 --> 00:11:10,800
how well does this work that's a good

280
00:11:09,480 --> 00:11:13,470
<font color="#E5E5E5">question we're actually still trying to</font>

281
00:11:10,800 --> 00:11:15,449
figure<font color="#E5E5E5"> that out but we have some</font>

282
00:11:13,470 --> 00:11:18,300
preliminary<font color="#E5E5E5"> results this is actually</font>

283
00:11:15,449 --> 00:11:20,130
<font color="#E5E5E5">where also you folks could help us in</font>

284
00:11:18,300 --> 00:11:21,839
sort<font color="#E5E5E5"> of understanding what topologies</font>

285
00:11:20,130 --> 00:11:22,860
look like better because we didn't we

286
00:11:21,839 --> 00:11:25,050
<font color="#E5E5E5">don't have a whole lot of real</font>

287
00:11:22,860 --> 00:11:28,740
topologies that we can test this on but

288
00:11:25,050 --> 00:11:29,880
we did do this on the giant topology

289
00:11:28,740 --> 00:11:31,709
which I think was mentioned in a couple

290
00:11:29,880 --> 00:11:34,529
talks ago we have access to that

291
00:11:31,709 --> 00:11:36,540
<font color="#E5E5E5">topology and there's a there's a</font>

292
00:11:34,529 --> 00:11:38,459
research tool called rocket fuel which I

293
00:11:36,540 --> 00:11:40,500
think maybe those folks came here

294
00:11:38,459 --> 00:11:42,508
several<font color="#E5E5E5"> manage ago and talked about you</font>

295
00:11:40,500 --> 00:11:45,509
know their best guesses<font color="#CCCCCC"> of isb</font>

296
00:11:42,509 --> 00:11:48,540
topologies so you know<font color="#E5E5E5"> for all</font><font color="#CCCCCC"> their</font>

297
00:11:45,509 --> 00:11:50,160
faults that's that's the best we<font color="#CCCCCC"> have so</font>

298
00:11:48,540 --> 00:11:53,519
<font color="#E5E5E5">we use we use one of those as well to</font>

299
00:11:50,160 --> 00:11:57,600
try this um then we basically ran this a

300
00:11:53,519 --> 00:12:02,699
bunch of times we ran a bunch of trials

301
00:11:57,600 --> 00:12:04,589
and what we did<font color="#E5E5E5"> is see if</font><font color="#CCCCCC"> we removed</font>

302
00:12:02,699 --> 00:12:06,508
edges from each of these typologies with

303
00:12:04,589 --> 00:12:09,449
a certain probability that basically

304
00:12:06,509 --> 00:12:11,310
gives us that basically gives us a

305
00:12:09,449 --> 00:12:13,349
probability of disconnection of the both

306
00:12:11,310 --> 00:12:15,540
in the underlying graph and in whatever

307
00:12:13,350 --> 00:12:18,060
we decide<font color="#E5E5E5"> to put on</font><font color="#CCCCCC"> top of it right so</font>

308
00:12:15,540 --> 00:12:21,630
these lines are<font color="#E5E5E5"> a little thin so let me</font>

309
00:12:18,060 --> 00:12:23,489
sort of let me sort<font color="#E5E5E5"> of point point with</font>

310
00:12:21,630 --> 00:12:25,860
the arrow here so on the x-axis

311
00:12:23,490 --> 00:12:27,540
basically this is<font color="#E5E5E5"> the probability of any</font>

312
00:12:25,860 --> 00:12:29,970
particular link in the topology failing

313
00:12:27,540 --> 00:12:31,319
so this is we basically you know flip

314
00:12:29,970 --> 00:12:32,670
awaited coin and decide whether<font color="#E5E5E5"> or not</font>

315
00:12:31,319 --> 00:12:35,519
to remove each edge and that gives<font color="#E5E5E5"> us</font>

316
00:12:32,670 --> 00:12:37,260
now you know the topology with the

317
00:12:35,519 --> 00:12:40,199
failures injected and then what we're

318
00:12:37,260 --> 00:12:42,120
asking on the y-axis here is what are

319
00:12:40,199 --> 00:12:44,699
the fraction of source destination pairs

320
00:12:42,120 --> 00:12:46,620
that actually become disconnected as a

321
00:12:44,699 --> 00:12:48,269
<font color="#E5E5E5">result of this so ideally what you'd</font>

322
00:12:46,620 --> 00:12:51,269
like to<font color="#CCCCCC"> see in</font><font color="#E5E5E5"> this graph is some some</font>

323
00:12:48,269 --> 00:12:53,880
line that basically goes pretty much

324
00:12:51,269 --> 00:12:55,410
along the<font color="#E5E5E5"> bottom here you know until the</font>

325
00:12:53,880 --> 00:12:56,910
probability of<font color="#E5E5E5"> failure of each link</font>

326
00:12:55,410 --> 00:12:57,959
failing gets really high and<font color="#E5E5E5"> then you</font>

327
00:12:56,910 --> 00:13:02,100
know<font color="#E5E5E5"> lots of</font><font color="#CCCCCC"> things start to become</font>

328
00:12:57,959 --> 00:13:04,319
disconnected so two things to note one

329
00:13:02,100 --> 00:13:06,899
is this this black dotted line that's

330
00:13:04,319 --> 00:13:08,639
the this characteristic for the

331
00:13:06,899 --> 00:13:11,430
<font color="#E5E5E5">underlying graph itself right so that's</font>

332
00:13:08,639 --> 00:13:14,000
before<font color="#CCCCCC"> we run any any routing protocols</font>

333
00:13:11,430 --> 00:13:16,229
on top of it at all you know we can ask

334
00:13:14,000 --> 00:13:17,610
do source destination pairs get

335
00:13:16,230 --> 00:13:19,319
disconnected in the underlying graph

336
00:13:17,610 --> 00:13:20,699
itself what are the properties of the

337
00:13:19,319 --> 00:13:21,089
physical graph so that's the best<font color="#E5E5E5"> we</font>

338
00:13:20,699 --> 00:13:23,870
could do

339
00:13:21,089 --> 00:13:26,550
this thick red line up here on top is

340
00:13:23,870 --> 00:13:28,379
for k equals 1 so<font color="#E5E5E5"> that's basically one</font>

341
00:13:26,550 --> 00:13:29,910
instance<font color="#E5E5E5"> of shortest path so that's</font>

342
00:13:28,379 --> 00:13:33,990
basically this is<font color="#CCCCCC"> what you would get if</font>

343
00:13:29,910 --> 00:13:35,699
you ran just you<font color="#E5E5E5"> know your</font><font color="#CCCCCC"> IGP what we</font>

344
00:13:33,990 --> 00:13:37,110
see and actually the best way to see

345
00:13:35,699 --> 00:13:40,680
this<font color="#CCCCCC"> is actually to zoom in a little bit</font>

346
00:13:37,110 --> 00:13:42,120
here we<font color="#E5E5E5"> look at these sort of low</font>

347
00:13:40,680 --> 00:13:43,739
probability of failures and you can see

348
00:13:42,120 --> 00:13:46,980
for actually just a very small<font color="#CCCCCC"> number of</font>

349
00:13:43,740 --> 00:13:49,319
slices k equals four or five we're

350
00:13:46,980 --> 00:13:51,660
really approaching you know<font color="#E5E5E5"> about as</font>

351
00:13:49,319 --> 00:13:54,180
best you can do that is the reach of the

352
00:13:51,660 --> 00:13:56,160
the reliability that<font color="#E5E5E5"> we're seeing</font><font color="#CCCCCC"> in</font>

353
00:13:54,180 --> 00:13:57,899
terms of do these pairs actually remain

354
00:13:56,160 --> 00:13:59,430
connected it's actually approaching the

355
00:13:57,899 --> 00:14:01,050
reliability that<font color="#E5E5E5"> you actually get in the</font>

356
00:13:59,430 --> 00:14:03,689
underlying physical graph so that's uh

357
00:14:01,050 --> 00:14:05,189
that's pretty nice now the cost of

358
00:14:03,689 --> 00:14:07,319
<font color="#E5E5E5">course as I mentioned is</font><font color="#CCCCCC"> that because</font>

359
00:14:05,189 --> 00:14:08,490
<font color="#E5E5E5">we're perturbing the link weights some</font>

360
00:14:07,319 --> 00:14:10,979
of these paths are actually slightly

361
00:14:08,490 --> 00:14:12,449
longer so you might ask how<font color="#E5E5E5"> long that</font>

362
00:14:10,980 --> 00:14:13,860
depends<font color="#E5E5E5"> on how you perturb the link</font>

363
00:14:12,449 --> 00:14:16,229
weights but for this particular

364
00:14:13,860 --> 00:14:21,509
experiment it was about thirty percent

365
00:14:16,230 --> 00:14:23,279
<font color="#E5E5E5">longer</font><font color="#CCCCCC"> okay so that's basically just a</font>

366
00:14:21,509 --> 00:14:25,230
simulation as far as you know we can run

367
00:14:23,279 --> 00:14:26,699
these you know run this on on top<font color="#E5E5E5"> of the</font>

368
00:14:25,230 --> 00:14:30,689
graph and ask what kind<font color="#CCCCCC"> of properties we</font>

369
00:14:26,699 --> 00:14:32,248
get where<font color="#E5E5E5"> they're of course a bunch of</font>

370
00:14:30,689 --> 00:14:34,980
open questions as far as you know can

371
00:14:32,249 --> 00:14:37,139
you react fast enough etc etc<font color="#E5E5E5"> so we're</font>

372
00:14:34,980 --> 00:14:39,689
actually trying to build a prototype<font color="#E5E5E5"> of</font>

373
00:14:37,139 --> 00:14:41,309
this as well actually be<font color="#CCCCCC"> interested to</font>

374
00:14:39,689 --> 00:14:43,050
hear from router vendors and things like

375
00:14:41,309 --> 00:14:45,689
that to see<font color="#E5E5E5"> how much</font><font color="#CCCCCC"> of a leap this</font>

376
00:14:43,050 --> 00:14:47,779
would take to actually you know put this

377
00:14:45,689 --> 00:14:50,759
kind<font color="#E5E5E5"> of functionality in a router but</font>

378
00:14:47,779 --> 00:14:53,730
there is a prototype implementation

379
00:14:50,759 --> 00:14:55,410
going on on a network<font color="#E5E5E5"> testbed called</font>

380
00:14:53,730 --> 00:14:57,149
Vinny and I won't<font color="#E5E5E5"> get into the details</font>

381
00:14:55,410 --> 00:14:58,949
<font color="#E5E5E5">but the details are in the slides</font>

382
00:14:57,149 --> 00:15:00,179
themselves so<font color="#E5E5E5"> they're of course a bunch</font>

383
00:14:58,949 --> 00:15:02,998
of open questions that we're<font color="#CCCCCC"> trying to</font>

384
00:15:00,179 --> 00:15:05,129
answer and hopefully<font color="#CCCCCC"> at some point</font><font color="#E5E5E5"> I'll</font>

385
00:15:02,999 --> 00:15:08,309
come back with with some<font color="#E5E5E5"> good answers on</font>

386
00:15:05,129 --> 00:15:10,199
this one of course is the dynamics

387
00:15:08,309 --> 00:15:11,790
themselves can and<font color="#CCCCCC"> hosts and end systems</font>

388
00:15:10,199 --> 00:15:14,459
react fast enough to recover<font color="#E5E5E5"> from these</font>

389
00:15:11,790 --> 00:15:16,139
failures how do<font color="#E5E5E5"> you find actually an</font>

390
00:15:14,459 --> 00:15:17,910
alternate path that works on their

391
00:15:16,139 --> 00:15:20,040
related<font color="#E5E5E5"> questions of course which is</font>

392
00:15:17,910 --> 00:15:21,540
<font color="#E5E5E5">that if you squint this kind of looks</font>

393
00:15:20,040 --> 00:15:23,699
like source routing so is this really

394
00:15:21,540 --> 00:15:25,019
going to frustrate you know the answer

395
00:15:23,699 --> 00:15:26,969
is the<font color="#CCCCCC"> uncertainty of the traffic that's</font>

396
00:15:25,019 --> 00:15:28,949
<font color="#E5E5E5">offered</font><font color="#CCCCCC"> to the two to a network going to</font>

397
00:15:26,970 --> 00:15:31,769
frustrate operators I guess that's<font color="#CCCCCC"> a</font>

398
00:15:28,949 --> 00:15:33,870
question I have for you we'd<font color="#E5E5E5"> really like</font>

399
00:15:31,769 --> 00:15:34,420
to try this out on on other topology so

400
00:15:33,870 --> 00:15:36,070
I

401
00:15:34,420 --> 00:15:38,410
I realize the sensitivity of the data

402
00:15:36,070 --> 00:15:40,450
here but if this<font color="#E5E5E5"> is something that you</font>

403
00:15:38,410 --> 00:15:42,910
know any particular<font color="#E5E5E5"> ISP finds</font>

404
00:15:40,450 --> 00:15:44,680
interesting we definitely like to hear

405
00:15:42,910 --> 00:15:49,000
more from you<font color="#E5E5E5"> and perhaps work together</font>

406
00:15:44,680 --> 00:15:52,660
on that so I guess the meta question

407
00:15:49,000 --> 00:15:56,649
there's is this<font color="#E5E5E5"> interesting and question</font>

408
00:15:52,660 --> 00:15:58,870
I have for you<font color="#E5E5E5"> know vendors and router</font>

409
00:15:56,649 --> 00:16:00,910
vendors would be you know how big<font color="#CCCCCC"> of a</font>

410
00:15:58,870 --> 00:16:02,529
jump is this today<font color="#CCCCCC"> of course there are</font>

411
00:16:00,910 --> 00:16:05,290
certain things<font color="#E5E5E5"> already as i mentioned</font>

412
00:16:02,529 --> 00:16:06,939
that<font color="#E5E5E5"> are there but things like indexing</font>

413
00:16:05,290 --> 00:16:08,230
using the bits to index into two

414
00:16:06,940 --> 00:16:09,699
different forwarding tables in each hop

415
00:16:08,230 --> 00:16:11,949
might be might be<font color="#E5E5E5"> something that we have</font>

416
00:16:09,699 --> 00:16:13,620
<font color="#E5E5E5">to add there's a slight variation of</font>

417
00:16:11,949 --> 00:16:16,750
this how much<font color="#E5E5E5"> how much time do</font><font color="#CCCCCC"> I have</font>

418
00:16:13,620 --> 00:16:19,209
two minutes<font color="#E5E5E5"> perfect so there's a slight</font>

419
00:16:16,750 --> 00:16:21,850
variation of<font color="#E5E5E5"> this that we're also they</font>

420
00:16:19,209 --> 00:16:24,880
were also<font color="#E5E5E5"> thinking about we call this</font>

421
00:16:21,850 --> 00:16:26,380
<font color="#E5E5E5">BGP splicing so the idea here this is</font>

422
00:16:24,880 --> 00:16:28,750
this is just a one slide summary of<font color="#E5E5E5"> this</font>

423
00:16:26,380 --> 00:16:30,610
idea<font color="#E5E5E5"> but the idea here is rather than</font>

424
00:16:28,750 --> 00:16:32,500
running multiple routing protocols

425
00:16:30,610 --> 00:16:35,649
exploit the fact that the rib itself

426
00:16:32,500 --> 00:16:37,600
actually has multiple alternate paths or

427
00:16:35,649 --> 00:16:39,399
alternate alternate routes in the rib

428
00:16:37,600 --> 00:16:41,440
and if you could somehow push those down

429
00:16:39,399 --> 00:16:43,540
into the forwarding table could<font color="#E5E5E5"> you use</font>

430
00:16:41,440 --> 00:16:44,980
these routing bits to actually do the

431
00:16:43,540 --> 00:16:50,290
same kind<font color="#CCCCCC"> of thing like switch at</font>

432
00:16:44,980 --> 00:16:51,430
ingress or egress the BGP route that's

433
00:16:50,290 --> 00:16:53,439
being used<font color="#E5E5E5"> to send traffic to a</font>

434
00:16:51,430 --> 00:16:55,750
particular destination of course this I

435
00:16:53,440 --> 00:16:59,350
think<font color="#E5E5E5"> requires you know a bit more</font>

436
00:16:55,750 --> 00:17:01,930
thought and add perhaps you know

437
00:16:59,350 --> 00:17:03,820
considerable changes there's a bunch of

438
00:17:01,930 --> 00:17:07,198
related work which<font color="#E5E5E5"> I'm going to cruise</font>

439
00:17:03,820 --> 00:17:09,459
through but<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> the slides as well</font>

440
00:17:07,199 --> 00:17:11,079
most related work i think<font color="#CCCCCC"> is</font><font color="#E5E5E5"> this first</font>

441
00:17:09,459 --> 00:17:12,189
group<font color="#E5E5E5"> of work which is sort of there's</font>

442
00:17:11,079 --> 00:17:14,918
<font color="#E5E5E5">been a lot of work on pre computing</font>

443
00:17:12,189 --> 00:17:17,679
<font color="#E5E5E5">backup paths obviously in particular</font>

444
00:17:14,919 --> 00:17:22,270
that in the ITF on multi topology

445
00:17:17,679 --> 00:17:24,339
routing etc we think this this scheme

446
00:17:22,270 --> 00:17:28,389
has quite a lot to offer it's quite

447
00:17:24,339 --> 00:17:30,940
<font color="#CCCCCC">simple right there's you know no</font>

448
00:17:28,390 --> 00:17:33,549
complexity as far as you know needing to

449
00:17:30,940 --> 00:17:36,700
specify IP addresses of routers or you

450
00:17:33,549 --> 00:17:39,639
know<font color="#CCCCCC"> doing any source routing in types</font>

451
00:17:36,700 --> 00:17:40,900
of<font color="#E5E5E5"> things the bits are enough to provide</font>

452
00:17:39,640 --> 00:17:42,460
access<font color="#E5E5E5"> to different paths through the</font>

453
00:17:40,900 --> 00:17:43,840
network and as<font color="#E5E5E5"> I</font><font color="#CCCCCC"> mentioned doesn't</font>

454
00:17:42,460 --> 00:17:45,790
matter if a particular router does or

455
00:17:43,840 --> 00:17:47,980
doesn't understand it those that do can

456
00:17:45,790 --> 00:17:51,370
actually allow the end hosts

457
00:17:47,980 --> 00:17:53,049
this diversity as<font color="#E5E5E5"> I mentioned before you</font>

458
00:17:51,370 --> 00:17:54,309
get this nice exponential increase in

459
00:17:53,049 --> 00:17:59,080
the number of paths that are available

460
00:17:54,309 --> 00:18:00,668
for just a linear increase in state the

461
00:17:59,080 --> 00:18:02,918
other thing which which we're exploring

462
00:18:00,669 --> 00:18:04,330
too is that you know this does beg the

463
00:18:02,919 --> 00:18:05,919
question of<font color="#E5E5E5"> how fast you need the</font>

464
00:18:04,330 --> 00:18:10,120
routing protocols to actually converge

465
00:18:05,919 --> 00:18:12,250
right because if<font color="#E5E5E5"> you have an end hosts</font>

466
00:18:10,120 --> 00:18:14,139
<font color="#E5E5E5">that can or an end system some kind that</font>

467
00:18:12,250 --> 00:18:15,640
<font color="#E5E5E5">can detect that</font><font color="#CCCCCC"> the network isn't</font>

468
00:18:14,140 --> 00:18:17,470
performing well for whatever reason

469
00:18:15,640 --> 00:18:19,480
heart failure congestion packet loss etc

470
00:18:17,470 --> 00:18:20,890
and somehow right around that then that

471
00:18:19,480 --> 00:18:22,809
begs<font color="#E5E5E5"> the question of how fast you</font>

472
00:18:20,890 --> 00:18:24,490
actually need the routing protocol to to

473
00:18:22,809 --> 00:18:27,160
detect maybe only a subset of these

474
00:18:24,490 --> 00:18:29,350
problems<font color="#E5E5E5"> and the other thing of course</font>

475
00:18:27,160 --> 00:18:31,120
is that<font color="#E5E5E5"> you notice I didn't actually</font>

476
00:18:29,350 --> 00:18:35,110
propose any real changes to the routing

477
00:18:31,120 --> 00:18:36,520
protocols themselves just running

478
00:18:35,110 --> 00:18:38,559
multiple instances of existing protocols

479
00:18:36,520 --> 00:18:41,260
so that<font color="#E5E5E5"> actually has a corollary which</font>

480
00:18:38,559 --> 00:18:42,910
is that this could apply to all types of

481
00:18:41,260 --> 00:18:44,770
routing I mean I described it in terms

482
00:18:42,910 --> 00:18:46,600
<font color="#E5E5E5">of igp and a little bit in terms of</font><font color="#CCCCCC"> BGP</font>

483
00:18:44,770 --> 00:18:48,970
but certainly other types of routing

484
00:18:46,600 --> 00:18:52,090
protocols to overlay type routing etc

485
00:18:48,970 --> 00:18:54,130
<font color="#CCCCCC">would certainly apply so we have a lot</font>

486
00:18:52,090 --> 00:18:56,139
of ideas for<font color="#CCCCCC"> how this might apply we'd</font>

487
00:18:54,130 --> 00:18:57,429
certainly welcome your suggestions as

488
00:18:56,140 --> 00:19:00,669
well and there there is a tech report

489
00:18:57,429 --> 00:19:02,890
there which I hope<font color="#E5E5E5"> that some folks will</font>

490
00:19:00,669 --> 00:19:06,929
check<font color="#E5E5E5"> out and I'm curious to</font><font color="#CCCCCC"> to hear</font>

491
00:19:02,890 --> 00:19:06,929
from folks about their reaction to this

492
00:19:07,290 --> 00:19:11,340
<font color="#E5E5E5">Thanks</font><font color="#CCCCCC"> okay thank you Nick</font>

