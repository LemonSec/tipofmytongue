1
00:00:14,789 --> 00:00:18,880
good morning thanks for coming<font color="#CCCCCC"> to my</font>

2
00:00:17,080 --> 00:00:21,759
<font color="#E5E5E5">talk and thanks to nap for this</font>

3
00:00:18,880 --> 00:00:23,890
opportunity so I'm strike hard<font color="#CCCCCC"> I</font><font color="#E5E5E5"> am a</font>

4
00:00:21,759 --> 00:00:26,590
graduating PhD student across<font color="#E5E5E5"> the street</font>

5
00:00:23,890 --> 00:00:29,800
at Georgia Tech where I work with

6
00:00:26,590 --> 00:00:32,320
<font color="#CCCCCC">professor feemster so today I'm going to</font>

7
00:00:29,800 --> 00:00:35,559
talk about a recent work on how you can

8
00:00:32,320 --> 00:00:38,199
measure my performance bottlenecks<font color="#E5E5E5"> in</font>

9
00:00:35,559 --> 00:00:42,580
broadband access networks and also how

10
00:00:38,199 --> 00:00:45,339
<font color="#CCCCCC">you can mitigate them okay so web</font>

11
00:00:42,580 --> 00:00:48,400
performance counts so to the extent that

12
00:00:45,339 --> 00:00:50,860
many content providers spend a

13
00:00:48,400 --> 00:00:53,860
considerable amount of time and<font color="#CCCCCC"> effort</font>

14
00:00:50,860 --> 00:00:56,440
in trying to reduce page load times and

15
00:00:53,860 --> 00:00:58,119
recent studies<font color="#CCCCCC"> have shown that users are</font>

16
00:00:56,440 --> 00:01:00,760
very sensitive<font color="#E5E5E5"> to even a few hundred</font>

17
00:00:58,119 --> 00:01:04,089
milliseconds for instance a study in

18
00:01:00,760 --> 00:01:06,548
2009 showed that the 500 millisecond

19
00:01:04,089 --> 00:01:09,429
delay caused us about a 1.2 percent

20
00:01:06,549 --> 00:01:11,049
decrease in<font color="#CCCCCC"> bangs revenue similarly</font>

21
00:01:09,430 --> 00:01:13,240
about<font color="#E5E5E5"> a four hundred millisecond delay</font>

22
00:01:11,049 --> 00:01:15,520
caused us about<font color="#E5E5E5"> three-quarters of a</font>

23
00:01:13,240 --> 00:01:18,729
percentage decrease in<font color="#E5E5E5"> Google searches</font>

24
00:01:15,520 --> 00:01:21,189
and just 100 millisecond delay causes a

25
00:01:18,729 --> 00:01:24,009
<font color="#E5E5E5">one percent decrease in amazon's revenue</font>

26
00:01:21,189 --> 00:01:26,229
so when it<font color="#E5E5E5"> comes to our performance it's</font>

27
00:01:24,009 --> 00:01:29,829
no great exaggeration to<font color="#E5E5E5"> say that every</font>

28
00:01:26,229 --> 00:01:32,979
millisecond counts and as you might

29
00:01:29,829 --> 00:01:35,288
expect there's been a lot of effort gone

30
00:01:32,979 --> 00:01:37,679
into this you know trying<font color="#E5E5E5"> to improve</font>

31
00:01:35,289 --> 00:01:40,450
response time over the last decade<font color="#E5E5E5"> or so</font>

32
00:01:37,679 --> 00:01:42,939
you know on the client side and the home

33
00:01:40,450 --> 00:01:45,310
network you<font color="#CCCCCC"> have really intelligent</font>

34
00:01:42,939 --> 00:01:49,839
browsers now that do all sorts of

35
00:01:45,310 --> 00:01:52,030
caching DNS prefetching content caching

36
00:01:49,840 --> 00:01:55,840
and you have new protocols like speedy

37
00:01:52,030 --> 00:01:59,259
and quick content keeps moving closer

38
00:01:55,840 --> 00:02:01,479
and closer to the user with CD<font color="#E5E5E5"> ends</font><font color="#CCCCCC"> you</font>

39
00:01:59,259 --> 00:02:05,229
also have dns servers that are right at

40
00:02:01,479 --> 00:02:08,500
the ISPs edge<font color="#E5E5E5"> now the server side you</font>

41
00:02:05,229 --> 00:02:11,470
have<font color="#CCCCCC"> TCP optimizations like</font><font color="#E5E5E5"> persistent</font>

42
00:02:08,500 --> 00:02:13,600
and parallel TCP connections bigger

43
00:02:11,470 --> 00:02:16,350
initial condition windows for<font color="#E5E5E5"> TCP and</font>

44
00:02:13,600 --> 00:02:19,480
also all sorts of content optimization

45
00:02:16,350 --> 00:02:20,680
however with more more and<font color="#E5E5E5"> more</font><font color="#CCCCCC"> people</font>

46
00:02:19,480 --> 00:02:24,310
accessing

47
00:02:20,680 --> 00:02:28,239
the web from homes the question we ask

48
00:02:24,310 --> 00:02:29,829
is you know what about the last mile you

49
00:02:28,239 --> 00:02:34,239
know what are the effects that<font color="#E5E5E5"> the last</font>

50
00:02:29,829 --> 00:02:35,890
mile has on web performance you know it

51
00:02:34,239 --> 00:02:39,879
<font color="#E5E5E5">must be obvious that the throughput is</font>

52
00:02:35,890 --> 00:02:41,950
an important factor<font color="#E5E5E5"> however</font><font color="#CCCCCC"> we found in</font>

53
00:02:39,879 --> 00:02:44,078
a study a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> years ago that the</font>

54
00:02:41,950 --> 00:02:47,858
last mile latency can be pretty

55
00:02:44,079 --> 00:02:49,480
significant for many broadband users for

56
00:02:47,859 --> 00:02:53,260
instance we found that more than about

57
00:02:49,480 --> 00:02:56,290
<font color="#E5E5E5">fifty percent of 1880s dsl users have</font>

58
00:02:53,260 --> 00:03:00,909
lost my latency exceeding 20

59
00:02:56,290 --> 00:03:02,578
milliseconds so<font color="#CCCCCC"> obviously any sort of</font>

60
00:03:00,909 --> 00:03:06,069
optimization that you might implement

61
00:03:02,579 --> 00:03:07,930
are affected by last mile performance

62
00:03:06,069 --> 00:03:12,099
you know latency as well as throughput

63
00:03:07,930 --> 00:03:15,310
and this particular effect has not been

64
00:03:12,099 --> 00:03:17,828
particularly studied so so in this talk

65
00:03:15,310 --> 00:03:20,139
<font color="#E5E5E5">I'm going to do two things I'm going to</font>

66
00:03:17,829 --> 00:03:23,230
first present the results of our study

67
00:03:20,139 --> 00:03:25,840
that measures the effect of the last

68
00:03:23,230 --> 00:03:28,828
mile and then we also<font color="#E5E5E5"> look into some</font>

69
00:03:25,840 --> 00:03:33,579
basic techniques<font color="#E5E5E5"> on how to mitigate them</font>

70
00:03:28,829 --> 00:03:38,229
so first for<font color="#E5E5E5"> the measurement part we use</font>

71
00:03:33,579 --> 00:03:41,139
data<font color="#CCCCCC"> from the FCC Sam knows study they</font>

72
00:03:38,229 --> 00:03:43,599
have about they have home gateways

73
00:03:41,139 --> 00:03:47,500
deployed in more<font color="#E5E5E5"> than 5,000 homes across</font>

74
00:03:43,599 --> 00:03:50,319
the<font color="#CCCCCC"> u.s. and we basically find that page</font>

75
00:03:47,500 --> 00:03:52,629
load times stop improving as the access

76
00:03:50,319 --> 00:03:58,119
link throughput exceeds about 16

77
00:03:52,629 --> 00:04:00,220
megabits per second so how do<font color="#E5E5E5"> we measure</font>

78
00:03:58,120 --> 00:04:01,840
the<font color="#E5E5E5"> effect of the last mile on web</font>

79
00:04:00,220 --> 00:04:04,810
performance now there are many

80
00:04:01,840 --> 00:04:06,310
challenges<font color="#CCCCCC"> to this first</font><font color="#E5E5E5"> is you know how</font>

81
00:04:04,810 --> 00:04:08,290
do you instrument and host if you want

82
00:04:06,310 --> 00:04:11,799
to measure from the end hosts how do you

83
00:04:08,290 --> 00:04:14,078
instrument<font color="#E5E5E5"> it and a fundamental issue</font>

84
00:04:11,799 --> 00:04:17,519
here is that there's no<font color="#E5E5E5"> real concept of</font>

85
00:04:14,079 --> 00:04:20,259
ground truth which browser do<font color="#E5E5E5"> you</font>

86
00:04:17,519 --> 00:04:23,050
measure from which positive instrument

87
00:04:20,259 --> 00:04:25,449
and different browsers implement

88
00:04:23,050 --> 00:04:26,680
different optimizations and you know

89
00:04:25,449 --> 00:04:29,409
sometimes<font color="#E5E5E5"> they implement the same</font>

90
00:04:26,680 --> 00:04:31,150
optimization in different ways<font color="#E5E5E5"> and there</font>

91
00:04:29,409 --> 00:04:32,740
are also other confounding factors that

92
00:04:31,150 --> 00:04:33,820
could affect performance your choice of

93
00:04:32,740 --> 00:04:36,880
operating system

94
00:04:33,820 --> 00:04:41,020
choice<font color="#E5E5E5"> of and host you know many</font><font color="#CCCCCC"> many</font>

95
00:04:36,880 --> 00:04:43,659
different<font color="#E5E5E5"> things so</font><font color="#CCCCCC"> in order to get</font>

96
00:04:41,020 --> 00:04:47,349
around that we like<font color="#E5E5E5"> I said we exploit</font>

97
00:04:43,660 --> 00:04:50,920
the FCC<font color="#E5E5E5"> San nose deployment and measure</font>

98
00:04:47,350 --> 00:04:53,740
directly from the<font color="#E5E5E5"> router so this gives</font>

99
00:04:50,920 --> 00:04:55,420
us advantage that no we have a broadly

100
00:04:53,740 --> 00:04:57,010
similar set of hardware<font color="#E5E5E5"> that we measure</font>

101
00:04:55,420 --> 00:04:59,400
from so that's one confronting<font color="#E5E5E5"> factor</font>

102
00:04:57,010 --> 00:05:01,810
out of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> way and we also have</font>

103
00:04:59,400 --> 00:05:05,080
longitudal measurements over multiple

104
00:05:01,810 --> 00:05:08,380
weeks and that gives us a much better

105
00:05:05,080 --> 00:05:09,940
<font color="#CCCCCC">characterization so for this we use a</font>

106
00:05:08,380 --> 00:05:12,730
tool that's<font color="#E5E5E5"> been developed for this</font>

107
00:05:09,940 --> 00:05:15,219
platform that's called<font color="#CCCCCC"> Mirage and it</font>

108
00:05:12,730 --> 00:05:18,610
essentially emulates the basic browser

109
00:05:15,220 --> 00:05:21,610
function it estimates page load time

110
00:05:18,610 --> 00:05:24,250
<font color="#CCCCCC">I'll show you</font><font color="#E5E5E5"> how and it also more</font>

111
00:05:21,610 --> 00:05:27,540
importantly breaks down the fetch Layton

112
00:05:24,250 --> 00:05:30,430
sees for every object in the in the in

113
00:05:27,540 --> 00:05:33,280
minute minute minute downloads the web

114
00:05:30,430 --> 00:05:38,350
page so like I said it's been deployed

115
00:05:33,280 --> 00:05:41,260
<font color="#E5E5E5">by Sam knows in the FCC deployment and</font>

116
00:05:38,350 --> 00:05:43,660
it profiles nine popular sites both the

117
00:05:41,260 --> 00:05:45,580
measurement and the code are publicly

118
00:05:43,660 --> 00:05:50,500
available from the<font color="#CCCCCC"> FCC's and the sanno</font>

119
00:05:45,580 --> 00:05:52,180
sites so for those who don't know about

120
00:05:50,500 --> 00:05:54,850
the sameness deployment here here's a

121
00:05:52,180 --> 00:05:58,300
little bit<font color="#E5E5E5"> more detail back when we did</font>

122
00:05:54,850 --> 00:06:00,550
the study in about 18 months ago we<font color="#E5E5E5"> got</font>

123
00:05:58,300 --> 00:06:02,260
the data from about 18 months ago the

124
00:06:00,550 --> 00:06:05,260
deployment was about seven thousand

125
00:06:02,260 --> 00:06:08,469
strong and we use<font color="#CCCCCC"> data from about 5,500</font>

126
00:06:05,260 --> 00:06:11,830
homes it's a netgear<font color="#CCCCCC"> 3,500 Rooter that</font>

127
00:06:08,470 --> 00:06:15,100
they deploy across many isps we use data

128
00:06:11,830 --> 00:06:20,830
<font color="#CCCCCC">from about</font><font color="#E5E5E5"> 11 is peace with the most</font>

129
00:06:15,100 --> 00:06:23,350
number of users and we profile<font color="#CCCCCC"> 9 popular</font>

130
00:06:20,830 --> 00:06:26,250
websites this is the list<font color="#E5E5E5"> and we use</font>

131
00:06:23,350 --> 00:06:32,290
<font color="#CCCCCC">data from sep tember 2012 for the study</font>

132
00:06:26,250 --> 00:06:35,160
<font color="#CCCCCC">okay so so a quick primer on of how</font>

133
00:06:32,290 --> 00:06:38,920
mirage and any regular web browser works

134
00:06:35,160 --> 00:06:42,430
so you feed it a URL and it looks up the

135
00:06:38,920 --> 00:06:45,440
URL and gets the IP address<font color="#E5E5E5"> that takes</font>

136
00:06:42,430 --> 00:06:47,150
some<font color="#E5E5E5"> time and then it connects to the</font>

137
00:06:45,440 --> 00:06:50,450
server you know completes a TCP

138
00:06:47,150 --> 00:06:54,260
handshake and then it sends a request

139
00:06:50,450 --> 00:06:55,969
for the landing page and there's a

140
00:06:54,260 --> 00:06:58,159
server processing time as the<font color="#CCCCCC"> backend</font>

141
00:06:55,970 --> 00:07:01,490
server processes request and then it

142
00:06:58,160 --> 00:07:05,870
actually fetches this object now it then

143
00:07:01,490 --> 00:07:07,610
processes this object and then gets a

144
00:07:05,870 --> 00:07:10,460
list of the objects<font color="#E5E5E5"> that it needs to</font>

145
00:07:07,610 --> 00:07:12,950
fetch to render the<font color="#E5E5E5"> whole page and then</font>

146
00:07:10,460 --> 00:07:15,320
it uses<font color="#E5E5E5"> parallel and persistent TCP</font>

147
00:07:12,950 --> 00:07:19,520
connections in order to fetch<font color="#E5E5E5"> the rest</font>

148
00:07:15,320 --> 00:07:21,380
of the page so<font color="#E5E5E5"> Mira's mirage is</font>

149
00:07:19,520 --> 00:07:23,960
different from regular browsers in a few

150
00:07:21,380 --> 00:07:27,230
important ways as you can see it has<font color="#CCCCCC"> a</font>

151
00:07:23,960 --> 00:07:29,659
few our<font color="#E5E5E5"> great outlines and that's</font>

152
00:07:27,230 --> 00:07:32,810
because it's a very lightweight tool and

153
00:07:29,660 --> 00:07:35,270
it does not resolve<font color="#E5E5E5"> or fetch active</font>

154
00:07:32,810 --> 00:07:37,400
objects so it doesn't<font color="#CCCCCC"> really attempt to</font>

155
00:07:35,270 --> 00:07:40,010
establish ground truth however<font color="#CCCCCC"> what it</font>

156
00:07:37,400 --> 00:07:42,260
does is give us a pretty decent estimate

157
00:07:40,010 --> 00:07:45,530
of the page load time and as you can see

158
00:07:42,260 --> 00:07:49,120
it also<font color="#E5E5E5"> breaks down every fetch into its</font>

159
00:07:45,530 --> 00:07:54,500
constituent parts so we<font color="#CCCCCC"> actually get the</font>

160
00:07:49,120 --> 00:07:58,610
individual latency of you know<font color="#CCCCCC"> x sorry</font>

161
00:07:54,500 --> 00:08:01,520
so here here's the<font color="#E5E5E5"> first result so so</font>

162
00:07:58,610 --> 00:08:05,270
this<font color="#E5E5E5"> is a box plot that shows across all</font>

163
00:08:01,520 --> 00:08:09,320
the users the time it<font color="#E5E5E5"> takes to load each</font>

164
00:08:05,270 --> 00:08:13,190
of these web pages so the<font color="#E5E5E5"> box plot shows</font>

165
00:08:09,320 --> 00:08:15,710
the interquartile range and<font color="#CCCCCC"> we also see</font>

166
00:08:13,190 --> 00:08:18,530
the average page load time which is

167
00:08:15,710 --> 00:08:20,359
<font color="#E5E5E5">denoted by the X and</font><font color="#CCCCCC"> the median which is</font>

168
00:08:18,530 --> 00:08:23,030
denoted by the red line in the<font color="#E5E5E5"> somewhere</font>

169
00:08:20,360 --> 00:08:25,400
inside the box so what<font color="#E5E5E5"> this shows here</font>

170
00:08:23,030 --> 00:08:29,059
is that<font color="#E5E5E5"> the median page load time</font>

171
00:08:25,400 --> 00:08:32,000
exceeds<font color="#E5E5E5"> one second for even the popular</font>

172
00:08:29,060 --> 00:08:34,179
sites for most of them actually and as<font color="#E5E5E5"> I</font>

173
00:08:32,000 --> 00:08:36,860
showed you earlier you know this is

174
00:08:34,179 --> 00:08:39,530
pretty high because users are very

175
00:08:36,860 --> 00:08:43,130
sensitive<font color="#E5E5E5"> to high page load times and in</font>

176
00:08:39,530 --> 00:08:45,620
this one case with<font color="#CCCCCC"> Yahoo the median page</font>

177
00:08:43,130 --> 00:08:48,439
load time actually exceeds two seconds

178
00:08:45,620 --> 00:08:51,370
so you might expect you know<font color="#E5E5E5"> okay it</font>

179
00:08:48,440 --> 00:08:54,260
could just<font color="#E5E5E5"> be users with low throughput</font>

180
00:08:51,370 --> 00:08:56,550
and that is true<font color="#E5E5E5"> to an extent and to</font>

181
00:08:54,260 --> 00:08:58,950
<font color="#E5E5E5">study that we break down the</font>

182
00:08:56,550 --> 00:09:03,240
users according<font color="#CCCCCC"> to their last mile</font>

183
00:08:58,950 --> 00:09:05,970
downstream throughput so and<font color="#E5E5E5"> this graph</font>

184
00:09:03,240 --> 00:09:10,230
<font color="#E5E5E5">shows the shows the result of that so on</font>

185
00:09:05,970 --> 00:09:12,959
the x axis<font color="#E5E5E5"> we have bins of downstream</font>

186
00:09:10,230 --> 00:09:16,320
throughput you know 0 to 1<font color="#E5E5E5"> mbps wanted</font>

187
00:09:12,959 --> 00:09:18,268
to<font color="#E5E5E5"> 2 to 4 etc and on the</font><font color="#CCCCCC"> y axis you have</font>

188
00:09:16,320 --> 00:09:21,300
<font color="#E5E5E5">the median page load time for these</font>

189
00:09:18,269 --> 00:09:23,279
<font color="#CCCCCC">websites and this is log scale so what</font>

190
00:09:21,300 --> 00:09:26,250
we see here<font color="#E5E5E5"> says you might expect as</font>

191
00:09:23,279 --> 00:09:29,390
throughput increases initially the page

192
00:09:26,250 --> 00:09:32,399
load time decreases pretty drastically

193
00:09:29,390 --> 00:09:36,089
however it plateaus and doesn't really

194
00:09:32,399 --> 00:09:40,950
improve beyond a throughput of about 16

195
00:09:36,089 --> 00:09:45,000
megabytes per second and the<font color="#CCCCCC"> reason for</font>

196
00:09:40,950 --> 00:09:50,250
that<font color="#CCCCCC"> is pretty obvious as you can</font><font color="#E5E5E5"> see</font>

197
00:09:45,000 --> 00:09:52,500
for for many of these fetches the time

198
00:09:50,250 --> 00:09:54,320
is actually<font color="#E5E5E5"> for many of these objects</font>

199
00:09:52,500 --> 00:09:57,209
the time is actually dominated by

200
00:09:54,320 --> 00:09:58,380
latency you have the look<font color="#CCCCCC"> up time you</font>

201
00:09:57,209 --> 00:09:59,969
have the connect time they have the

202
00:09:58,380 --> 00:10:02,850
processing time and none of<font color="#E5E5E5"> this</font>

203
00:09:59,970 --> 00:10:05,250
actually<font color="#E5E5E5"> depends on your throughput it's</font>

204
00:10:02,850 --> 00:10:07,620
only<font color="#CCCCCC"> the</font><font color="#E5E5E5"> object fetch time that depends</font>

205
00:10:05,250 --> 00:10:09,779
on the throughput and even in this the

206
00:10:07,620 --> 00:10:12,350
objects are so small with modern web

207
00:10:09,779 --> 00:10:14,640
site you have objects that are you know

208
00:10:12,350 --> 00:10:20,070
kilobytes even sometimes less than<font color="#E5E5E5"> that</font>

209
00:10:14,640 --> 00:10:22,829
<font color="#E5E5E5">so TCP is overhead been ramping up and</font>

210
00:10:20,070 --> 00:10:25,020
with latency end-to-end latency the TCP

211
00:10:22,829 --> 00:10:28,410
overhead is so high<font color="#CCCCCC"> that we saw in some</font>

212
00:10:25,020 --> 00:10:30,720
cases<font color="#CCCCCC"> that the latency to just connect</font>

213
00:10:28,410 --> 00:10:32,910
and wait for the<font color="#E5E5E5"> object can far exceed</font>

214
00:10:30,720 --> 00:10:36,899
the time it takes to actually download

215
00:10:32,910 --> 00:10:38,520
the objects so latency overhead is very

216
00:10:36,899 --> 00:10:42,329
dominant for especially<font color="#E5E5E5"> for small</font>

217
00:10:38,520 --> 00:10:46,319
objects so and in order<font color="#CCCCCC"> to see the</font>

218
00:10:42,329 --> 00:10:48,630
effect of the last mile we be broke down

219
00:10:46,320 --> 00:10:51,240
the users according to the last<font color="#E5E5E5"> mile</font>

220
00:10:48,630 --> 00:10:53,370
latency which is a latency between the

221
00:10:51,240 --> 00:10:57,480
home and the edge of the<font color="#E5E5E5"> ISPs network</font>

222
00:10:53,370 --> 00:11:00,390
and this graph shows the page load times

223
00:10:57,480 --> 00:11:04,110
for<font color="#E5E5E5"> this so what you see</font><font color="#CCCCCC"> here on the</font>

224
00:11:00,390 --> 00:11:05,990
<font color="#CCCCCC">y-axis is a last my latency is broken</font>

225
00:11:04,110 --> 00:11:08,089
down in 10 millisecond intervals

226
00:11:05,990 --> 00:11:10,970
and the<font color="#E5E5E5"> y-axis you have the page load</font>

227
00:11:08,089 --> 00:11:13,820
time again in log scale as you<font color="#E5E5E5"> can see</font>

228
00:11:10,970 --> 00:11:17,260
as the last<font color="#E5E5E5"> mile latency increases the</font>

229
00:11:13,820 --> 00:11:20,570
page load time keeps increasing and as

230
00:11:17,260 --> 00:11:23,209
you know the latency goes beyond about

231
00:11:20,570 --> 00:11:26,120
20 or 30 milliseconds you have actually

232
00:11:23,209 --> 00:11:27,709
a very<font color="#E5E5E5"> drastic increase in the page load</font>

233
00:11:26,120 --> 00:11:29,630
time and<font color="#E5E5E5"> this is log scale so this</font>

234
00:11:27,709 --> 00:11:32,180
actually translates to a pretty

235
00:11:29,630 --> 00:11:35,180
significant increase in page load times

236
00:11:32,180 --> 00:11:36,739
and as I told<font color="#E5E5E5"> you earlier we actually</font>

237
00:11:35,180 --> 00:11:39,620
saw that many dsl use has been

238
00:11:36,740 --> 00:11:42,770
particular in the US have last mile

239
00:11:39,620 --> 00:11:45,350
agencies that exceed 20 30 milliseconds

240
00:11:42,770 --> 00:11:50,270
and so their web performance could

241
00:11:45,350 --> 00:11:55,130
suffer pretty drastically so now<font color="#E5E5E5"> that we</font>

242
00:11:50,270 --> 00:11:58,010
know exactly<font color="#E5E5E5"> what causes slow web page</font>

243
00:11:55,130 --> 00:11:59,540
load times we look into<font color="#E5E5E5"> how we can</font>

244
00:11:58,010 --> 00:12:01,910
mitigate them we look at a very simple

245
00:11:59,540 --> 00:12:05,209
technique<font color="#E5E5E5"> called popularity based</font>

246
00:12:01,910 --> 00:12:11,600
prefetching inside the home and see how

247
00:12:05,209 --> 00:12:14,390
effective it is so as we saw a<font color="#E5E5E5"> lot of</font>

248
00:12:11,600 --> 00:12:16,010
the optimizations that<font color="#E5E5E5"> exist don't</font>

249
00:12:14,390 --> 00:12:17,959
really take into<font color="#E5E5E5"> consideration the last</font>

250
00:12:16,010 --> 00:12:19,880
my latency you know<font color="#CCCCCC"> Syrians can only</font>

251
00:12:17,959 --> 00:12:22,040
come<font color="#CCCCCC"> up to the edge of the</font><font color="#E5E5E5"> ISPs network</font>

252
00:12:19,880 --> 00:12:24,560
they cannot actually you know compensate

253
00:12:22,040 --> 00:12:26,750
for further for the last mile and many

254
00:12:24,560 --> 00:12:29,119
client-side optimizations in the browser

255
00:12:26,750 --> 00:12:30,740
their application specific even if you

256
00:12:29,120 --> 00:12:34,790
use two instances of the same browser

257
00:12:30,740 --> 00:12:37,760
you cannot you cannot exploit any common

258
00:12:34,790 --> 00:12:40,880
browsing behavior let alone<font color="#E5E5E5"> across users</font>

259
00:12:37,760 --> 00:12:42,950
inside the home so the solution to<font color="#CCCCCC"> that</font>

260
00:12:40,880 --> 00:12:45,770
is<font color="#E5E5E5"> pretty simple we do prefetching</font>

261
00:12:42,950 --> 00:12:49,339
inside the home but we do it on<font color="#E5E5E5"> the home</font>

262
00:12:45,770 --> 00:12:52,880
gateway so the idea<font color="#E5E5E5"> is that you can</font>

263
00:12:49,339 --> 00:12:57,290
maintain the popular domains list in the

264
00:12:52,880 --> 00:13:01,640
browser based on usage of users and then

265
00:12:57,290 --> 00:13:06,740
as people browse this list gets updated

266
00:13:01,640 --> 00:13:09,050
and the Gateway can periodically refresh

267
00:13:06,740 --> 00:13:11,240
DNS records and maintain open tcp

268
00:13:09,050 --> 00:13:13,579
connections to the popular websites and

269
00:13:11,240 --> 00:13:16,070
this can be done we have<font color="#CCCCCC"> a prototype of</font>

270
00:13:13,579 --> 00:13:20,719
limitation that can run<font color="#CCCCCC"> on your home</font>

271
00:13:16,070 --> 00:13:23,600
gateway so we look at how this actually

272
00:13:20,720 --> 00:13:24,709
works<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> you might ask you might</font>

273
00:13:23,600 --> 00:13:26,660
you might say that<font color="#E5E5E5"> in a lot of these</font>

274
00:13:24,709 --> 00:13:30,469
optimizations are already implemented in

275
00:13:26,660 --> 00:13:32,150
the browser so we first evaluate the

276
00:13:30,470 --> 00:13:33,589
improvement<font color="#E5E5E5"> that you can hope to get by</font>

277
00:13:32,150 --> 00:13:36,079
this technique by looking at performance

278
00:13:33,589 --> 00:13:39,250
improvement in the best case and we test

279
00:13:36,079 --> 00:13:43,339
this on the bismuth platform using<font color="#E5E5E5"> niraj</font>

280
00:13:39,250 --> 00:13:45,740
be also in<font color="#E5E5E5"> the paper we also look into</font>

281
00:13:43,339 --> 00:13:48,040
how this complements existing browser

282
00:13:45,740 --> 00:13:50,240
optimizations by using phantom GS and

283
00:13:48,040 --> 00:13:52,880
then we<font color="#E5E5E5"> also look into how we can</font>

284
00:13:50,240 --> 00:13:56,089
actually<font color="#E5E5E5"> make this practical so</font><font color="#CCCCCC"> I'm</font>

285
00:13:52,880 --> 00:13:57,949
<font color="#E5E5E5">going to talk about how we evaluate the</font>

286
00:13:56,089 --> 00:14:00,079
<font color="#CCCCCC">performance of</font><font color="#E5E5E5"> this in Bismarck and also</font>

287
00:13:57,949 --> 00:14:02,150
how we can make this practical<font color="#E5E5E5"> I</font>

288
00:14:00,079 --> 00:14:07,149
encourage you to<font color="#E5E5E5"> look at the paper to</font>

289
00:14:02,150 --> 00:14:09,709
look at the other results so a quick

290
00:14:07,149 --> 00:14:11,449
note on the Bismarck deployment so this

291
00:14:09,709 --> 00:14:13,969
Bismarck is a project<font color="#CCCCCC"> that's led by</font>

292
00:14:11,449 --> 00:14:16,579
Georgia Tech the goal is to enable

293
00:14:13,970 --> 00:14:18,770
experiments and measurements from home

294
00:14:16,579 --> 00:14:23,329
networks kind<font color="#E5E5E5"> of like planetlab but for</font>

295
00:14:18,770 --> 00:14:27,199
the home and for this<font color="#E5E5E5"> study we use 64</font>

296
00:14:23,329 --> 00:14:30,170
homes across about<font color="#CCCCCC"> 15 countries but</font>

297
00:14:27,199 --> 00:14:34,069
currently the<font color="#E5E5E5"> deployment is about 175</font>

298
00:14:30,170 --> 00:14:38,180
active home gateways across more than<font color="#E5E5E5"> 25</font>

299
00:14:34,070 --> 00:14:40,339
countries and all our data<font color="#CCCCCC"> and all our</font>

300
00:14:38,180 --> 00:14:41,959
code<font color="#CCCCCC"> is online and you can</font><font color="#E5E5E5"> get more</font>

301
00:14:40,339 --> 00:14:46,610
<font color="#E5E5E5">information from our website project</font>

302
00:14:41,959 --> 00:14:49,310
<font color="#E5E5E5">Bismarck net so to look at the effect of</font>

303
00:14:46,610 --> 00:14:54,079
<font color="#E5E5E5">DNS prefetching we ran this experiment</font>

304
00:14:49,310 --> 00:14:56,930
using garage so first we clear all the

305
00:14:54,079 --> 00:15:00,140
caches in the home gateway and then we

306
00:14:56,930 --> 00:15:02,689
fetch the page using rush and we then

307
00:15:00,140 --> 00:15:05,110
fetch the page again since<font color="#E5E5E5"> mirage let's</font>

308
00:15:02,690 --> 00:15:07,670
<font color="#CCCCCC">just a command-line tool and it doesn't</font>

309
00:15:05,110 --> 00:15:10,490
cash content or maintain open tcp

310
00:15:07,670 --> 00:15:12,800
connections across multiple runs so the

311
00:15:10,490 --> 00:15:15,860
<font color="#E5E5E5">difference in the the load time that we</font>

312
00:15:12,800 --> 00:15:19,099
<font color="#E5E5E5">get across these two fetches just gives</font>

313
00:15:15,860 --> 00:15:23,089
us the benefit of<font color="#E5E5E5"> DNS caching and what</font>

314
00:15:19,100 --> 00:15:24,500
we found<font color="#E5E5E5"> was this prefetching can could</font>

315
00:15:23,089 --> 00:15:28,300
improve page load time according to

316
00:15:24,500 --> 00:15:32,060
<font color="#E5E5E5">website by up to ten percent</font>

317
00:15:28,300 --> 00:15:34,849
and now to look<font color="#E5E5E5"> at the effect of TCP</font>

318
00:15:32,060 --> 00:15:37,520
connection prefetching we did<font color="#CCCCCC"> we're on a</font>

319
00:15:34,850 --> 00:15:41,090
similar experiment but we used in HTTP

320
00:15:37,520 --> 00:15:43,220
proxy I'll tell<font color="#E5E5E5"> you why so we first</font>

321
00:15:41,090 --> 00:15:46,790
clear the<font color="#E5E5E5"> cache and then we fetch the</font>

322
00:15:43,220 --> 00:15:48,710
page through the HTTP proxy I use

323
00:15:46,790 --> 00:15:51,319
<font color="#E5E5E5">Filippo in this case and then we just</font>

324
00:15:48,710 --> 00:15:54,910
<font color="#CCCCCC">clear the content cash in the HTTP proxy</font>

325
00:15:51,320 --> 00:15:58,850
and then we fetch the page again so

326
00:15:54,910 --> 00:16:01,610
since the HTTP proxy will maintain open

327
00:15:58,850 --> 00:16:03,890
tcp connections this gives us the

328
00:16:01,610 --> 00:16:07,370
benefit of use reusing these connections

329
00:16:03,890 --> 00:16:09,199
across multiple runs and so we found

330
00:16:07,370 --> 00:16:10,790
that you<font color="#CCCCCC"> know you just</font><font color="#E5E5E5"> using TCP</font>

331
00:16:09,200 --> 00:16:13,040
connection<font color="#CCCCCC"> Cashin</font><font color="#E5E5E5"> could improve patient</font>

332
00:16:10,790 --> 00:16:15,530
time but up to<font color="#CCCCCC"> thirty five percent</font><font color="#E5E5E5"> and</font>

333
00:16:13,040 --> 00:16:17,740
remember this is<font color="#E5E5E5"> without content caching</font>

334
00:16:15,530 --> 00:16:24,050
so this<font color="#CCCCCC"> is a pretty</font><font color="#E5E5E5"> significant</font>

335
00:16:17,740 --> 00:16:26,870
improvement so well I mean maintaining

336
00:16:24,050 --> 00:16:29,510
open tcp connections to a lot of service

337
00:16:26,870 --> 00:16:34,400
is not in not entirely practical so in

338
00:16:29,510 --> 00:16:36,380
order to do that we we thought about<font color="#E5E5E5"> how</font>

339
00:16:34,400 --> 00:16:39,079
we can reduce the overhead of this

340
00:16:36,380 --> 00:16:42,560
prefetching so the solution is of course

341
00:16:39,080 --> 00:16:46,370
popularity base and we prefetch only the

342
00:16:42,560 --> 00:16:48,380
<font color="#CCCCCC">the DNS requests and TCP connections for</font>

343
00:16:46,370 --> 00:16:52,480
only the popular sites and we<font color="#CCCCCC"> also</font>

344
00:16:48,380 --> 00:16:55,930
implement a timeout and we analyze<font color="#CCCCCC"> the</font>

345
00:16:52,480 --> 00:16:59,510
effectiveness of this using browser

346
00:16:55,930 --> 00:17:02,630
browsing traces from users from about 12

347
00:16:59,510 --> 00:17:05,750
homes and we run a simulation based on

348
00:17:02,630 --> 00:17:09,560
those traces and we test different list

349
00:17:05,750 --> 00:17:13,339
sizes and timeout intervals and we found

350
00:17:09,560 --> 00:17:15,770
<font color="#E5E5E5">that a cache size of just 20 popular</font>

351
00:17:13,339 --> 00:17:18,050
sites with the time<font color="#E5E5E5"> out of two minutes</font>

352
00:17:15,770 --> 00:17:20,180
could offer pretty significant

353
00:17:18,050 --> 00:17:21,948
improvement in cache hit rates so

354
00:17:20,180 --> 00:17:28,339
essentially<font color="#E5E5E5"> what it means is you only</font>

355
00:17:21,949 --> 00:17:32,150
need to prefetch for 20 popular websites

356
00:17:28,339 --> 00:17:33,590
and you also need<font color="#CCCCCC"> to only have a timeout</font>

357
00:17:32,150 --> 00:17:35,390
of<font color="#E5E5E5"> about two minutes so if the user</font>

358
00:17:33,590 --> 00:17:37,790
doesn't go back so if no one goes back

359
00:17:35,390 --> 00:17:40,880
to the side for<font color="#E5E5E5"> two minutes you just</font>

360
00:17:37,790 --> 00:17:41,809
stopped prefetching and this essentially

361
00:17:40,880 --> 00:17:46,249
try

362
00:17:41,809 --> 00:17:48,649
to exploit browsing behavior across

363
00:17:46,249 --> 00:17:51,289
multiple users you know many people go

364
00:17:48,649 --> 00:17:53,120
to common websites so and we found<font color="#CCCCCC"> that</font>

365
00:17:51,289 --> 00:17:55,429
<font color="#E5E5E5">cache hit rates improve quite</font>

366
00:17:53,120 --> 00:17:57,320
significantly and that translates to

367
00:17:55,429 --> 00:18:02,809
pretty significant improvement in page

368
00:17:57,320 --> 00:18:05,330
load times so in<font color="#CCCCCC"> conclusion so we saw</font>

369
00:18:02,809 --> 00:18:07,039
how page load times could be very high

370
00:18:05,330 --> 00:18:09,309
even for popular sites that you might

371
00:18:07,039 --> 00:18:14,480
expect would be highly optimized and

372
00:18:09,309 --> 00:18:16,220
that latency is the major bottleneck

373
00:18:14,480 --> 00:18:18,799
especially as<font color="#CCCCCC"> downstream throughput</font>

374
00:18:16,220 --> 00:18:21,830
exceeds about 16 megabits per second and

375
00:18:18,799 --> 00:18:24,110
we also saw how a simple popularity

376
00:18:21,830 --> 00:18:25,850
based prefetching technique could

377
00:18:24,110 --> 00:18:28,549
improve performance by up to<font color="#CCCCCC"> thirty</font><font color="#E5E5E5"> five</font>

378
00:18:25,850 --> 00:18:32,389
percent and<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> complementary to</font>

379
00:18:28,549 --> 00:18:35,090
existing optimizations the full paper

380
00:18:32,389 --> 00:18:37,248
the data<font color="#E5E5E5"> and also the code</font><font color="#CCCCCC"> that we used</font>

381
00:18:35,090 --> 00:18:40,399
for this for this work is publicly

382
00:18:37,249 --> 00:18:44,210
available<font color="#CCCCCC"> I encourage you to</font><font color="#E5E5E5"> visit our</font>

383
00:18:40,399 --> 00:18:46,340
website<font color="#CCCCCC"> project</font><font color="#E5E5E5"> Bismarck net and I'm</font>

384
00:18:44,210 --> 00:18:48,230
happy to take questions now please also

385
00:18:46,340 --> 00:18:51,220
contact me over email if if that works

386
00:18:48,230 --> 00:18:51,220
thank

387
00:18:56,040 --> 00:19:02,740
we have time for<font color="#E5E5E5"> questions over here hi</font>

388
00:19:00,130 --> 00:19:03,820
I'm Wayne from limelight networks one

389
00:19:02,740 --> 00:19:06,820
thing<font color="#CCCCCC"> that I was wondering about what</font>

390
00:19:03,820 --> 00:19:08,439
you're making your presentation was it's

391
00:19:06,820 --> 00:19:10,030
almost impossible for somebody to have a

392
00:19:08,440 --> 00:19:13,870
home network that does not involve some

393
00:19:10,030 --> 00:19:15,510
sort of force proxy and I'm<font color="#CCCCCC"> wondering if</font>

394
00:19:13,870 --> 00:19:18,639
you<font color="#CCCCCC"> have any sense of whether that</font>

395
00:19:15,510 --> 00:19:19,780
contributes to or helps to alleviate the

396
00:19:18,640 --> 00:19:22,540
sort of<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> that you're that you're</font>

397
00:19:19,780 --> 00:19:24,790
discussing sorry what sort of proxy a

398
00:19:22,540 --> 00:19:27,190
force proxy where you you you basically

399
00:19:24,790 --> 00:19:29,379
<font color="#E5E5E5">can't access anything except without</font>

400
00:19:27,190 --> 00:19:35,380
your connection being redirected through

401
00:19:29,380 --> 00:19:38,410
your vendors proxy um well actually we

402
00:19:35,380 --> 00:19:41,170
haven't looked into that but this should

403
00:19:38,410 --> 00:19:43,330
at least that's what I think<font color="#E5E5E5"> it should</font>

404
00:19:41,170 --> 00:19:45,520
<font color="#CCCCCC">work independently of that I mean it</font>

405
00:19:43,330 --> 00:19:48,460
doesn't it shouldn't matter<font color="#E5E5E5"> to the to</font>

406
00:19:45,520 --> 00:19:49,840
the ISP whether your request comes from

407
00:19:48,460 --> 00:19:52,930
an end host or from another prophecy

408
00:19:49,840 --> 00:19:54,310
well my my thinking those that rather

409
00:19:52,930 --> 00:19:55,660
than making a direct connection to the

410
00:19:54,310 --> 00:19:57,610
site you're going through another server

411
00:19:55,660 --> 00:20:00,910
which adds additional processing time

412
00:19:57,610 --> 00:20:03,550
additional latency but it can perhaps

413
00:20:00,910 --> 00:20:06,850
compensate by having some sub data cache

414
00:20:03,550 --> 00:20:13,210
well we actually<font color="#E5E5E5"> tested that so we</font>

415
00:20:06,850 --> 00:20:16,719
actually<font color="#E5E5E5"> looked at the case where we did</font>

416
00:20:13,210 --> 00:20:18,190
run a cash-in in a server that<font color="#CCCCCC"> was</font>

417
00:20:16,720 --> 00:20:20,170
pretty close by less than<font color="#E5E5E5"> over 20</font>

418
00:20:18,190 --> 00:20:21,730
milliseconds away and we saw that<font color="#E5E5E5"> you</font>

419
00:20:20,170 --> 00:20:23,890
<font color="#CCCCCC">know</font><font color="#E5E5E5"> this technique offers pretty</font>

420
00:20:21,730 --> 00:20:29,230
significant improvements over that so

421
00:20:23,890 --> 00:20:33,040
having<font color="#E5E5E5"> a proxy in the ISPs network it</font>

422
00:20:29,230 --> 00:20:41,650
does help but not not as much as<font color="#E5E5E5"> you</font>

423
00:20:33,040 --> 00:20:43,570
would hope I'm Jeff Houston AP gnok in a

424
00:20:41,650 --> 00:20:45,720
presentation later on in this meeting

425
00:20:43,570 --> 00:20:50,200
i'm talking about<font color="#CCCCCC"> our observed</font>

426
00:20:45,720 --> 00:20:52,480
performance of v6<font color="#CCCCCC"> vs. v4 and i actually</font>

427
00:20:50,200 --> 00:20:55,390
looked very hard at<font color="#E5E5E5"> the scene handshake</font>

428
00:20:52,480 --> 00:20:58,720
and the question<font color="#CCCCCC"> to you is in what</font>

429
00:20:55,390 --> 00:21:04,140
you've seen do you see consistent

430
00:20:58,720 --> 00:21:07,240
evidence of trapping of sins on port 80

431
00:21:04,140 --> 00:21:10,030
because what we appear to be seeing

432
00:21:07,240 --> 00:21:13,090
is that v4 is slightly slower than six

433
00:21:10,030 --> 00:21:15,070
on port 80 and one of the possible

434
00:21:13,090 --> 00:21:17,110
explanations is there's a lot of

435
00:21:15,070 --> 00:21:19,809
infrastructure around to look for web

436
00:21:17,110 --> 00:21:21,820
fetches<font color="#E5E5E5"> on board 80 and 4 but a lot less</font>

437
00:21:19,809 --> 00:21:24,940
than six because<font color="#E5E5E5"> people don't think six</font>

438
00:21:21,820 --> 00:21:26,860
is real do you see any evidence in your

439
00:21:24,940 --> 00:21:32,140
study to back up that rather vague

440
00:21:26,860 --> 00:21:33,370
theory no I haven't<font color="#E5E5E5"> looked well I'm not</font>

441
00:21:32,140 --> 00:21:35,170
<font color="#E5E5E5">sure</font><font color="#CCCCCC"> I understand your question i'll be</font>

442
00:21:33,370 --> 00:21:37,989
happy to follow up<font color="#CCCCCC"> with you after this</font>

443
00:21:35,170 --> 00:21:42,370
too well when<font color="#CCCCCC"> i send a packet from home</font>

444
00:21:37,990 --> 00:21:44,710
to some IP address port 80 is there a

445
00:21:42,370 --> 00:21:47,139
possibility<font color="#CCCCCC"> that that packet won't get</font>

446
00:21:44,710 --> 00:21:49,510
there because some intervening<font color="#E5E5E5"> middle</font>

447
00:21:47,140 --> 00:21:51,460
where we'll go<font color="#CCCCCC"> wow I'm going to track</font>

448
00:21:49,510 --> 00:21:53,800
this connection and see what they're

449
00:21:51,460 --> 00:21:56,740
asking for because<font color="#CCCCCC"> I might be able to</font>

450
00:21:53,800 --> 00:21:59,800
<font color="#E5E5E5">answer it myself as distinct from say</font>

451
00:21:56,740 --> 00:22:03,190
sending<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> scene along port 443</font>

452
00:21:59,800 --> 00:22:06,850
I'm doing<font color="#CCCCCC"> TAS in which case it won't</font><font color="#E5E5E5"> get</font>

453
00:22:03,190 --> 00:22:10,240
trapped okay that's okay I understand so

454
00:22:06,850 --> 00:22:15,550
we haven't<font color="#CCCCCC"> actually looked but I think</font>

455
00:22:10,240 --> 00:22:18,220
that's a good good thing to look for Lee

456
00:22:15,550 --> 00:22:19,720
Howard Time Warner Cable I was<font color="#E5E5E5"> going to</font>

457
00:22:18,220 --> 00:22:22,450
ask very similar question is Jeff we're

458
00:22:19,720 --> 00:22:24,160
on the same panel later I would<font color="#CCCCCC"> love to</font>

459
00:22:22,450 --> 00:22:25,780
see the<font color="#E5E5E5"> first half where you're talking</font>

460
00:22:24,160 --> 00:22:28,020
<font color="#E5E5E5">about your measurements I would love to</font>

461
00:22:25,780 --> 00:22:31,178
<font color="#E5E5E5">see a comparison of ipv4 and ipv6</font>

462
00:22:28,020 --> 00:22:33,910
fetching websites over both families to

463
00:22:31,179 --> 00:22:36,309
see which section is is the same or

464
00:22:33,910 --> 00:22:38,920
different and then I was thinking<font color="#CCCCCC"> about</font>

465
00:22:36,309 --> 00:22:41,110
next steps for this work so you've

466
00:22:38,920 --> 00:22:45,130
identified a possible optimization for

467
00:22:41,110 --> 00:22:48,550
the top and websites that's<font color="#CCCCCC"> fantastic</font>

468
00:22:45,130 --> 00:22:50,860
for the top-end websites I'm sure that

469
00:22:48,550 --> 00:22:53,220
those content providers I are highly

470
00:22:50,860 --> 00:22:55,840
<font color="#CCCCCC">motivated to provide free hardware to</font>

471
00:22:53,220 --> 00:22:58,000
consumers around the around the world so

472
00:22:55,840 --> 00:22:59,110
that their websites can go faster but it

473
00:22:58,000 --> 00:23:01,330
doesn't affect the rest of the world

474
00:22:59,110 --> 00:23:04,449
right so I would say<font color="#CCCCCC"> that this actually</font>

475
00:23:01,330 --> 00:23:05,860
would improve performance for the not

476
00:23:04,450 --> 00:23:07,720
popular sites because they're less

477
00:23:05,860 --> 00:23:10,928
likely to<font color="#E5E5E5"> be you know as close to the</font>

478
00:23:07,720 --> 00:23:12,850
user as the popular sites but the point

479
00:23:10,929 --> 00:23:14,230
about point of showing this<font color="#CCCCCC"> was that</font>

480
00:23:12,850 --> 00:23:15,939
<font color="#CCCCCC">even for the popular sites which you</font>

481
00:23:14,230 --> 00:23:18,360
would expect would be highly optimized

482
00:23:15,940 --> 00:23:20,760
you see you know pretty

483
00:23:18,360 --> 00:23:22,530
improvement and for those that<font color="#E5E5E5"> are</font>

484
00:23:20,760 --> 00:23:25,350
farther away you would see even greater

485
00:23:22,530 --> 00:23:28,500
improvement so per site that's not<font color="#E5E5E5"> on a</font>

486
00:23:25,350 --> 00:23:29,969
CDN then yes<font color="#CCCCCC"> we can imagine stir because</font>

487
00:23:28,500 --> 00:23:31,800
you have a TCP session because once

488
00:23:29,970 --> 00:23:34,170
you've created the initial<font color="#E5E5E5"> TCP</font>

489
00:23:31,800 --> 00:23:37,080
connection the long live session music

490
00:23:34,170 --> 00:23:41,130
said we actually looked at kind of a

491
00:23:37,080 --> 00:23:42,929
similar<font color="#E5E5E5"> issue so what we did was we sin</font>

492
00:23:41,130 --> 00:23:44,130
students we have<font color="#E5E5E5"> the deployment across</font>

493
00:23:42,930 --> 00:23:47,250
the world we actually looked at

494
00:23:44,130 --> 00:23:49,410
performance improvement in the US vs in

495
00:23:47,250 --> 00:23:52,380
Asia Emperor instance right and we saw

496
00:23:49,410 --> 00:23:54,960
much more you know much more<font color="#E5E5E5"> significant</font>

497
00:23:52,380 --> 00:23:57,330
improvements in Asia so the theory is in

498
00:23:54,960 --> 00:23:58,800
a<font color="#E5E5E5"> Content is farther away I think at</font>

499
00:23:57,330 --> 00:24:01,080
least in the US for the<font color="#E5E5E5"> popular sites</font>

500
00:23:58,800 --> 00:24:03,180
it's as close as it can get to the user

501
00:24:01,080 --> 00:24:05,100
without actually being in the home right

502
00:24:03,180 --> 00:24:07,320
but it's not<font color="#CCCCCC"> the</font><font color="#E5E5E5"> case in Asia for</font>

503
00:24:05,100 --> 00:24:08,790
instance and we saw very significant

504
00:24:07,320 --> 00:24:11,210
improvements much much greater<font color="#E5E5E5"> than what</font>

505
00:24:08,790 --> 00:24:13,980
I showed here for those users so I

506
00:24:11,210 --> 00:24:15,450
assume<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can extrapolate this for</font>

507
00:24:13,980 --> 00:24:17,220
the non popular sites if you imagine

508
00:24:15,450 --> 00:24:22,160
<font color="#E5E5E5">that they're farther away from the users</font>

509
00:24:17,220 --> 00:24:22,160
it even in the US<font color="#E5E5E5"> thanks</font>

510
00:24:26,210 --> 00:24:31,950
thank you

511
00:24:28,330 --> 00:24:31,949
thank you very much to go

512
00:24:41,220 --> 00:24:43,280
you

