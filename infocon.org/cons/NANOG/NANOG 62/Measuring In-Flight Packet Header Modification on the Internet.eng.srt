1
00:00:08,269 --> 00:00:14,000
alrighty welcome<font color="#CCCCCC"> back from</font>

2
00:00:11,400 --> 00:00:16,740
Dundee nanog program committee chair

3
00:00:14,000 --> 00:00:18,240
will be<font color="#E5E5E5"> getting</font><font color="#CCCCCC"> started here in just a</font>

4
00:00:16,740 --> 00:00:20,578
minute<font color="#E5E5E5"> I do want to throw out a reminder</font>

5
00:00:18,240 --> 00:00:23,009
to fill out the surveys<font color="#E5E5E5"> we'll be</font>

6
00:00:20,579 --> 00:00:25,140
announcing our survey winner between the

7
00:00:23,009 --> 00:00:26,640
<font color="#E5E5E5">next two talks and so hopefully</font><font color="#CCCCCC"> you</font>

8
00:00:25,140 --> 00:00:29,099
filled out the survey yesterday you may

9
00:00:26,640 --> 00:00:31,199
have a prize coming to you one other

10
00:00:29,099 --> 00:00:32,879
note we do still have nominations open

11
00:00:31,199 --> 00:00:36,150
for the program committee and

12
00:00:32,879 --> 00:00:37,769
communications committee for 2015 we had

13
00:00:36,150 --> 00:00:39,600
some discussion get some<font color="#E5E5E5"> good discussion</font>

14
00:00:37,769 --> 00:00:41,850
in the community meeting yesterday about

15
00:00:39,600 --> 00:00:44,519
ways we can improve diversity within

16
00:00:41,850 --> 00:00:46,320
this within the<font color="#E5E5E5"> leadership of Dan aughh</font>

17
00:00:44,519 --> 00:00:48,839
and this is one of<font color="#E5E5E5"> the ways to do it</font>

18
00:00:46,320 --> 00:00:51,030
please please nominate anyone you'd like

19
00:00:48,839 --> 00:00:52,619
to see on these committees we very<font color="#E5E5E5"> much</font>

20
00:00:51,030 --> 00:00:55,290
would like to get fresh blood in here

21
00:00:52,619 --> 00:00:58,290
and with that<font color="#E5E5E5"> I will hand this over to</font>

22
00:00:55,290 --> 00:01:04,110
Ryan Craven<font color="#E5E5E5"> Ryan is here to present</font>

23
00:00:58,290 --> 00:01:07,820
thank you very much Ryan<font color="#CCCCCC"> thank you bear</font>

24
00:01:04,110 --> 00:01:07,820
with me one second here

25
00:01:13,890 --> 00:01:19,080
Ryan's got some live demos for us so

26
00:01:16,270 --> 00:01:19,080
brace<font color="#E5E5E5"> yourselves</font>

27
00:01:49,310 --> 00:01:54,680
<font color="#E5E5E5">alright so thanks to</font><font color="#CCCCCC"> introduction so my</font>

28
00:01:53,119 --> 00:01:57,259
<font color="#E5E5E5">name is</font><font color="#CCCCCC"> ren craven a little bit about me</font>

29
00:01:54,680 --> 00:01:58,700
real quick I'm a recent graduate of the

30
00:01:57,259 --> 00:02:01,490
ph.d program at Naval Postgraduate

31
00:01:58,700 --> 00:02:03,259
School in Monterey California and now

32
00:02:01,490 --> 00:02:04,850
I'm<font color="#CCCCCC"> back on the</font><font color="#E5E5E5"> East Coast working for</font>

33
00:02:03,259 --> 00:02:07,310
the Space and Naval Warfare Center which

34
00:02:04,850 --> 00:02:12,440
is<font color="#E5E5E5"> in Charleston South Carolina as part</font>

35
00:02:07,310 --> 00:02:14,450
of the<font color="#E5E5E5"> US Navy and some of my work that</font>

36
00:02:12,440 --> 00:02:15,920
did while it's at mps was about

37
00:02:14,450 --> 00:02:18,980
measuring<font color="#CCCCCC"> in-flight packet header</font>

38
00:02:15,920 --> 00:02:20,720
modification on the internet and so why

39
00:02:18,980 --> 00:02:22,369
do we<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> do this well we'll see it</font>

40
00:02:20,720 --> 00:02:27,080
all boils down to how<font color="#E5E5E5"> middleboxes</font>

41
00:02:22,370 --> 00:02:28,760
interact with<font color="#CCCCCC"> tcp so prior to starting</font>

42
00:02:27,080 --> 00:02:30,709
up a new connection you know what is TC

43
00:02:28,760 --> 00:02:32,030
TC p doesn't really know anything about

44
00:02:30,709 --> 00:02:37,099
<font color="#CCCCCC">the end</font><font color="#E5E5E5"> end path conditions between</font>

45
00:02:32,030 --> 00:02:38,510
itself and receiver a priori but during

46
00:02:37,099 --> 00:02:39,738
<font color="#CCCCCC">the connection there are questions it</font>

47
00:02:38,510 --> 00:02:42,440
needs to answer in order to make<font color="#E5E5E5"> the</font>

48
00:02:39,739 --> 00:02:44,900
most efficient<font color="#CCCCCC"> use of that path such as</font>

49
00:02:42,440 --> 00:02:46,609
how<font color="#E5E5E5"> fast can send how much did i send it</font>

50
00:02:44,900 --> 00:02:49,010
once you know do the other end get my

51
00:02:46,610 --> 00:02:52,130
data was an intact piece missing etc and

52
00:02:49,010 --> 00:02:53,630
so in order answers questions<font color="#CCCCCC"> TCP has</font>

53
00:02:52,130 --> 00:02:55,519
tools to make inferences during the

54
00:02:53,630 --> 00:02:57,680
connection you<font color="#E5E5E5"> know and some of these</font>

55
00:02:55,519 --> 00:03:00,680
<font color="#CCCCCC">have been around since</font><font color="#E5E5E5"> TCP was first</font>

56
00:02:57,680 --> 00:03:02,090
created like sequence numbers and others

57
00:03:00,680 --> 00:03:03,739
over time have been<font color="#E5E5E5"> added on as a</font>

58
00:03:02,090 --> 00:03:06,190
network evolved and requirements changed

59
00:03:03,739 --> 00:03:10,489
such as congestion control in the 80s

60
00:03:06,190 --> 00:03:11,569
<font color="#CCCCCC">and so we believe</font><font color="#E5E5E5"> that modern TCP needs</font>

61
00:03:10,489 --> 00:03:15,079
to know the answer to another question

62
00:03:11,569 --> 00:03:16,548
and that<font color="#CCCCCC"> is am</font><font color="#E5E5E5"> I being misinterpreted in</font>

63
00:03:15,079 --> 00:03:17,600
other words is some new feature<font color="#CCCCCC"> that I</font>

64
00:03:16,549 --> 00:03:20,450
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use going to be properly</font>

65
00:03:17,600 --> 00:03:21,920
communicated along a path and one way we

66
00:03:20,450 --> 00:03:25,760
can check<font color="#E5E5E5"> this is by looking at and</font>

67
00:03:21,920 --> 00:03:27,078
flight pachyderm modifications and so

68
00:03:25,760 --> 00:03:29,209
the main reason we have to ask<font color="#E5E5E5"> this</font>

69
00:03:27,079 --> 00:03:31,609
question is because<font color="#E5E5E5"> of issues with</font>

70
00:03:29,209 --> 00:03:33,889
<font color="#E5E5E5">little boxes on the network so for</font>

71
00:03:31,609 --> 00:03:36,739
example take the scenario where to<font color="#E5E5E5"> TCP</font>

72
00:03:33,889 --> 00:03:38,150
endpoints Alice and Bob communicate

73
00:03:36,739 --> 00:03:39,769
across the<font color="#E5E5E5"> internet you know we've</font>

74
00:03:38,150 --> 00:03:41,329
actually oversimplified this particular

75
00:03:39,769 --> 00:03:45,139
scenario a bit what it<font color="#E5E5E5"> really looks like</font>

76
00:03:41,329 --> 00:03:48,799
<font color="#E5E5E5">is a bit more no boxes like firewalls</font>

77
00:03:45,139 --> 00:03:50,600
proxies etc basically the reality is

78
00:03:48,799 --> 00:03:52,850
that path is complicated by middle boxes

79
00:03:50,600 --> 00:03:55,250
of all types doing<font color="#CCCCCC"> things like enforcing</font>

80
00:03:52,850 --> 00:03:58,480
policies expanding address base playing

81
00:03:55,250 --> 00:03:58,480
tricks to Nia's performance etc

82
00:03:58,860 --> 00:04:04,500
and there's a survey in a sitcom paper a

83
00:04:02,490 --> 00:04:06,330
couple years ago that surveyed some

84
00:04:04,500 --> 00:04:08,130
nanog admins and they<font color="#E5E5E5"> found that across</font>

85
00:04:06,330 --> 00:04:10,200
all networks sizes<font color="#E5E5E5"> this is enterprise</font>

86
00:04:08,130 --> 00:04:11,970
networks the number<font color="#E5E5E5"> of middleboxes is</font>

87
00:04:10,200 --> 00:04:14,730
actually on par with the<font color="#E5E5E5"> number of</font>

88
00:04:11,970 --> 00:04:16,108
routers in a network and you know what

89
00:04:14,730 --> 00:04:17,849
they found is a lot of these<font color="#E5E5E5"> devices or</font>

90
00:04:16,108 --> 00:04:20,669
standalone systems that hard to manage

91
00:04:17,850 --> 00:04:22,320
their expensive to buy maintain keep<font color="#E5E5E5"> up</font>

92
00:04:20,670 --> 00:04:23,730
<font color="#E5E5E5">to date and they usually</font><font color="#CCCCCC"> require a</font>

93
00:04:22,320 --> 00:04:25,380
well-trained staff to maintain and

94
00:04:23,730 --> 00:04:27,300
<font color="#E5E5E5">configure them so it's not all that</font>

95
00:04:25,380 --> 00:04:29,370
uncommon when stuff breaks and in fact

96
00:04:27,300 --> 00:04:31,110
that same survey found that most admins

97
00:04:29,370 --> 00:04:32,580
spend<font color="#E5E5E5"> one to five hours</font><font color="#CCCCCC"> a week dealing</font>

98
00:04:31,110 --> 00:04:35,160
with middle box related failures and

99
00:04:32,580 --> 00:04:39,000
nine percent said they spend six to ten

100
00:04:35,160 --> 00:04:40,590
<font color="#CCCCCC">hours a week and in that same survey</font>

101
00:04:39,000 --> 00:04:42,270
miss configuration was<font color="#E5E5E5"> cited as the most</font>

102
00:04:40,590 --> 00:04:43,950
common cause of failure when it occurred

103
00:04:42,270 --> 00:04:46,109
now that failure could be something

104
00:04:43,950 --> 00:04:48,599
obvious like a bad fire<font color="#CCCCCC"> older blocks</font>

105
00:04:46,110 --> 00:04:49,830
traffic or what we've targeted which is

106
00:04:48,600 --> 00:04:51,570
the more subtle issues that can hurt

107
00:04:49,830 --> 00:04:55,140
performance and protocol innovation and

108
00:04:51,570 --> 00:04:56,700
which can be really<font color="#E5E5E5"> hard to debug it's a</font>

109
00:04:55,140 --> 00:04:59,640
good example of that that I want<font color="#E5E5E5"> to get</font>

110
00:04:56,700 --> 00:05:01,890
into<font color="#E5E5E5"> here is with ECM so with ecn you</font>

111
00:04:59,640 --> 00:05:03,210
have the sort<font color="#E5E5E5"> of 1980s version of how</font>

112
00:05:01,890 --> 00:05:06,030
the headers looked and then you have the

113
00:05:03,210 --> 00:05:07,830
post ecn version of the headers and the

114
00:05:06,030 --> 00:05:10,349
difference being that the second bite of

115
00:05:07,830 --> 00:05:12,390
the IP<font color="#CCCCCC"> header is now split into dscp and</font>

116
00:05:10,350 --> 00:05:13,950
the TVC n bits<font color="#E5E5E5"> and they've also</font>

117
00:05:12,390 --> 00:05:17,550
reassigned some<font color="#E5E5E5"> reserved bids from the</font>

118
00:05:13,950 --> 00:05:19,440
TCP header but the problem<font color="#CCCCCC"> is is that</font>

119
00:05:17,550 --> 00:05:21,690
<font color="#E5E5E5">even as recently as a few years ago so</font>

120
00:05:19,440 --> 00:05:23,310
this<font color="#E5E5E5"> is you know ecn was from first</font>

121
00:05:21,690 --> 00:05:25,380
started being created around two

122
00:05:23,310 --> 00:05:28,169
thousand or so so it's<font color="#E5E5E5"> been about 15</font>

123
00:05:25,380 --> 00:05:30,300
<font color="#E5E5E5">years and even as recently the few years</font>

124
00:05:28,169 --> 00:05:31,650
<font color="#E5E5E5">ago research was still finding devices</font>

125
00:05:30,300 --> 00:05:33,690
that misinterpreted these fields that

126
00:05:31,650 --> 00:05:36,810
messed that difference up between the

127
00:05:33,690 --> 00:05:38,280
1980s version in the 2000 version and in

128
00:05:36,810 --> 00:05:40,020
<font color="#E5E5E5">one paper the authors discovered a</font>

129
00:05:38,280 --> 00:05:42,510
switch on a major<font color="#E5E5E5"> ISP that was actually</font>

130
00:05:40,020 --> 00:05:44,520
messing up ecn by mistreating that

131
00:05:42,510 --> 00:05:45,780
second bite of the IP<font color="#E5E5E5"> header and it</font>

132
00:05:44,520 --> 00:05:50,609
turned out it<font color="#CCCCCC"> was an issue that the</font>

133
00:05:45,780 --> 00:05:52,200
provider didn't know about another

134
00:05:50,610 --> 00:05:53,910
example<font color="#E5E5E5"> that illustrates this problem</font>

135
00:05:52,200 --> 00:05:56,400
pretty well as with TCP window scaling

136
00:05:53,910 --> 00:05:57,600
so imagine for example that two

137
00:05:56,400 --> 00:05:59,460
endpoints are going to<font color="#E5E5E5"> talk to each</font>

138
00:05:57,600 --> 00:06:03,930
<font color="#E5E5E5">other and they want to use a window</font>

139
00:05:59,460 --> 00:06:05,130
scaling value of<font color="#CCCCCC"> seven unfortunately</font>

140
00:06:03,930 --> 00:06:06,870
there's been real instances where a

141
00:06:05,130 --> 00:06:09,360
device was found during out the scale

142
00:06:06,870 --> 00:06:11,280
value and the result<font color="#E5E5E5"> is that these two</font>

143
00:06:09,360 --> 00:06:12,390
endpoints Alice and Bob give differing

144
00:06:11,280 --> 00:06:13,890
ideas of what

145
00:06:12,390 --> 00:06:18,300
all says receive<font color="#CCCCCC"> window really should be</font>

146
00:06:13,890 --> 00:06:20,940
and in this case what<font color="#CCCCCC"> happens is Alice</font>

147
00:06:18,300 --> 00:06:23,670
thinks our window size is 128 k whereas

148
00:06:20,940 --> 00:06:24,719
Bob thinks her window size is 1k and so

149
00:06:23,670 --> 00:06:28,020
you know what does this look like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

150
00:06:24,720 --> 00:06:29,880
user so<font color="#E5E5E5"> I'm going to jump back over here</font>

151
00:06:28,020 --> 00:06:31,380
<font color="#E5E5E5">to the demo you see I started</font><font color="#CCCCCC"> this file</font>

152
00:06:29,880 --> 00:06:34,350
transfer before<font color="#CCCCCC"> I came up here and it's</font>

153
00:06:31,380 --> 00:06:35,790
running<font color="#E5E5E5"> really slow so I know what's</font>

154
00:06:34,350 --> 00:06:37,260
<font color="#E5E5E5">wrong</font><font color="#CCCCCC"> with this there's transfer why</font>

155
00:06:35,790 --> 00:06:39,810
it's going<font color="#E5E5E5"> slow and that's because I've</font>

156
00:06:37,260 --> 00:06:42,000
put a middle box in between these two

157
00:06:39,810 --> 00:06:47,280
these two hosts<font color="#E5E5E5"> that is zeroing out that</font>

158
00:06:42,000 --> 00:06:48,600
<font color="#E5E5E5">windows get value and so knowing</font><font color="#CCCCCC"> that</font>

159
00:06:47,280 --> 00:06:53,609
what i can do actually is kill this

160
00:06:48,600 --> 00:06:57,780
transfer and then turn tell linux to

161
00:06:53,610 --> 00:07:04,290
turn off windows going and then try that

162
00:06:57,780 --> 00:07:05,400
file transfer one more time you<font color="#CCCCCC"> can see</font>

163
00:07:04,290 --> 00:07:07,170
that actually runs so much faster<font color="#CCCCCC"> now</font>

164
00:07:05,400 --> 00:07:09,690
and it's a bit counterintuitive because

165
00:07:07,170 --> 00:07:12,900
if you look<font color="#E5E5E5"> up window scaling in rfcs</font>

166
00:07:09,690 --> 00:07:17,610
it's in an RFC titled<font color="#CCCCCC"> high-performance</font>

167
00:07:12,900 --> 00:07:20,000
extensions for tcp and we actually<font color="#CCCCCC"> got</font>

168
00:07:17,610 --> 00:07:22,350
better performance by turning it<font color="#E5E5E5"> off and</font>

169
00:07:20,000 --> 00:07:29,460
<font color="#E5E5E5">so why was that what was because of that</font>

170
00:07:22,350 --> 00:07:30,480
the no box that's in the way and so you

171
00:07:29,460 --> 00:07:32,250
know what are the chances that an

172
00:07:30,480 --> 00:07:33,480
average user would know<font color="#CCCCCC"> that that's the</font>

173
00:07:32,250 --> 00:07:35,490
problem<font color="#E5E5E5"> that's the reason</font><font color="#CCCCCC"> their file</font>

174
00:07:33,480 --> 00:07:38,790
<font color="#CCCCCC">transfer is going slow that's sort of</font>

175
00:07:35,490 --> 00:07:41,460
what this<font color="#CCCCCC"> this talk is all about so</font>

176
00:07:38,790 --> 00:07:44,160
there's some other examples ecn and

177
00:07:41,460 --> 00:07:46,349
window scaling are just two in a sea of

178
00:07:44,160 --> 00:07:47,880
IP and TCP functionality they can get

179
00:07:46,350 --> 00:07:49,890
disrupted by middleboxes at one time or

180
00:07:47,880 --> 00:07:51,780
another there are actually<font color="#CCCCCC"> other issues</font>

181
00:07:49,890 --> 00:07:54,510
we've seen such as TCP selective

182
00:07:51,780 --> 00:07:56,340
acknowledgments artificial flow control

183
00:07:54,510 --> 00:07:57,960
using the receive window and then a

184
00:07:56,340 --> 00:08:02,820
whole bunch<font color="#CCCCCC"> of stuff</font><font color="#E5E5E5"> in the IP and TCP</font>

185
00:07:57,960 --> 00:08:04,440
option space the<font color="#CCCCCC"> high-level takeaway</font>

186
00:08:02,820 --> 00:08:05,580
from all this though is that you know

187
00:08:04,440 --> 00:08:07,110
these<font color="#CCCCCC"> are real problems they're going to</font>

188
00:08:05,580 --> 00:08:08,550
continue to occur the network's not

189
00:08:07,110 --> 00:08:10,230
getting any less intelligent and

190
00:08:08,550 --> 00:08:11,610
something important to stress here<font color="#E5E5E5"> is</font>

191
00:08:10,230 --> 00:08:13,290
that<font color="#E5E5E5"> even when these issues occur on</font>

192
00:08:11,610 --> 00:08:14,820
just a small percentage of connections

193
00:08:13,290 --> 00:08:16,980
that can still have a wide reaching

194
00:08:14,820 --> 00:08:18,960
impact for<font color="#E5E5E5"> instance just a small</font>

195
00:08:16,980 --> 00:08:20,910
percentage<font color="#E5E5E5"> of connections affected is</font>

196
00:08:18,960 --> 00:08:22,469
enough to dissuade for instance a large

197
00:08:20,910 --> 00:08:24,390
content provider from turning on some

198
00:08:22,470 --> 00:08:25,680
new feature so in that sense it can

199
00:08:24,390 --> 00:08:28,080
really hurt protocol innovation

200
00:08:25,680 --> 00:08:29,669
but we do recognize<font color="#E5E5E5"> that mailboxes can</font>

201
00:08:28,080 --> 00:08:31,409
and actually<font color="#CCCCCC"> do do a</font><font color="#E5E5E5"> lot of useful</font>

202
00:08:29,669 --> 00:08:33,779
things for operators providers and

203
00:08:31,410 --> 00:08:34,950
they're not sometimes customers and so

204
00:08:33,779 --> 00:08:36,990
we want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> really want to be able to</font>

205
00:08:34,950 --> 00:08:41,490
detect and fix these<font color="#E5E5E5"> without disrupting</font>

206
00:08:36,990 --> 00:08:43,200
the more<font color="#CCCCCC"> well behaved mailboxes and so</font>

207
00:08:41,490 --> 00:08:44,580
when it'd be great if we can easy way to

208
00:08:43,200 --> 00:08:46,459
detect these it could benefit

209
00:08:44,580 --> 00:08:48,990
researchers with the measurement tools

210
00:08:46,459 --> 00:08:51,239
TCP performance extensive in terms of

211
00:08:48,990 --> 00:08:53,130
performance and extensibility and then

212
00:08:51,240 --> 00:08:55,050
of course operators for<font color="#E5E5E5"> better end and</font>

213
00:08:53,130 --> 00:08:58,709
debugging and leading to happier

214
00:08:55,050 --> 00:09:00,300
customers and this<font color="#E5E5E5"> end to end piece is</font>

215
00:08:58,709 --> 00:09:01,589
pretty important because you know if the

216
00:09:00,300 --> 00:09:03,359
problem is somewhere that's outside of

217
00:09:01,589 --> 00:09:05,010
<font color="#CCCCCC">our administrative control it can be</font>

218
00:09:03,360 --> 00:09:07,350
much harder to debug and often requires

219
00:09:05,010 --> 00:09:09,120
cooperation from another endpoint to do

220
00:09:07,350 --> 00:09:10,709
some testing to really determine it and

221
00:09:09,120 --> 00:09:15,180
figure out where the problem<font color="#CCCCCC"> is in</font>

222
00:09:10,709 --> 00:09:16,709
what's<font color="#E5E5E5"> causing those issues so there are</font>

223
00:09:15,180 --> 00:09:18,810
some tools out there already to help us

224
00:09:16,709 --> 00:09:21,540
<font color="#CCCCCC">with this if you do have a cooperating</font>

225
00:09:18,810 --> 00:09:22,979
endpoint you can actually of<font color="#E5E5E5"> course you</font>

226
00:09:21,540 --> 00:09:25,620
can just run TCP dump and manually

227
00:09:22,980 --> 00:09:27,360
compare the output and see if<font color="#E5E5E5"> a mailbox</font>

228
00:09:25,620 --> 00:09:29,339
is changing something in your headers or

229
00:09:27,360 --> 00:09:31,650
you can use one<font color="#CCCCCC"> of the more automated</font>

230
00:09:29,339 --> 00:09:33,120
tools nmap has a tool called n ping

231
00:09:31,650 --> 00:09:35,610
that's got an echo server and client

232
00:09:33,120 --> 00:09:37,709
that you<font color="#E5E5E5"> can use eff has been working on</font>

233
00:09:35,610 --> 00:09:39,540
<font color="#E5E5E5">some of these and for purposes of</font>

234
00:09:37,709 --> 00:09:41,219
network neutrality and they have a tool

235
00:09:39,540 --> 00:09:43,380
they they worked<font color="#E5E5E5"> on a while ago called</font><font color="#CCCCCC"> p</font>

236
00:09:41,220 --> 00:09:46,589
captive which sort of led into other

237
00:09:43,380 --> 00:09:49,200
tools called switzerland and TP cat but

238
00:09:46,589 --> 00:09:50,490
one<font color="#E5E5E5"> of the more useful ones is a tool</font>

239
00:09:49,200 --> 00:09:51,779
that doesn't<font color="#E5E5E5"> need that cooperating</font>

240
00:09:50,490 --> 00:09:53,880
endpoint like all those other ones do

241
00:09:51,779 --> 00:09:56,189
call trace box and it actually doesn't

242
00:09:53,880 --> 00:09:58,709
require that bed endpoint and it has a

243
00:09:56,190 --> 00:10:01,380
similar methodology to trace route but

244
00:09:58,709 --> 00:10:03,719
it goes to the extra step of parsing and

245
00:10:01,380 --> 00:10:05,700
differencing the ICMP TTL exceeded

246
00:10:03,720 --> 00:10:08,250
quotes that come back from for matters

247
00:10:05,700 --> 00:10:11,010
and checking to see if any middleboxes

248
00:10:08,250 --> 00:10:12,750
made changes between those hops the pro

249
00:10:11,010 --> 00:10:14,459
is that you get<font color="#E5E5E5"> the location</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

250
00:10:12,750 --> 00:10:17,190
modification but<font color="#E5E5E5"> there are some cons in</font>

251
00:10:14,459 --> 00:10:19,050
terms of you know reliance on ICMP and

252
00:10:17,190 --> 00:10:20,339
then also the same problems with reverse

253
00:10:19,050 --> 00:10:24,180
path measurement that<font color="#E5E5E5"> you get with</font>

254
00:10:20,339 --> 00:10:26,430
traceroute so it all kind<font color="#E5E5E5"> of feeds into</font>

255
00:10:24,180 --> 00:10:28,979
the main challenge which is an available

256
00:10:26,430 --> 00:10:30,569
and reliable communications channel so

257
00:10:28,980 --> 00:10:32,160
say you're trying to communicate<font color="#CCCCCC"> an</font>

258
00:10:30,570 --> 00:10:33,450
integrity check between two tcp

259
00:10:32,160 --> 00:10:36,390
endpoints you know you could do

260
00:10:33,450 --> 00:10:38,750
something<font color="#CCCCCC"> like an out-of-band ICMP maybe</font>

261
00:10:36,390 --> 00:10:39,920
make a new IP or<font color="#CCCCCC"> TCP option</font>

262
00:10:38,750 --> 00:10:41,660
try to redefine a field out<font color="#E5E5E5"> of the</font>

263
00:10:39,920 --> 00:10:44,089
header but the problem<font color="#CCCCCC"> with all of</font><font color="#E5E5E5"> those</font>

264
00:10:41,660 --> 00:10:45,650
is that the very same set of paths that

265
00:10:44,090 --> 00:10:47,600
will most likely disrupt those methods

266
00:10:45,650 --> 00:10:50,510
are precisely the paths that<font color="#E5E5E5"> were most</font>

267
00:10:47,600 --> 00:10:51,920
interested in testing so for<font color="#E5E5E5"> instance if</font>

268
00:10:50,510 --> 00:10:54,170
you go to trouble and creating a new

269
00:10:51,920 --> 00:10:55,729
option<font color="#CCCCCC"> to carry your integrity chuck it</font>

270
00:10:54,170 --> 00:10:57,740
could get stripped out by<font color="#E5E5E5"> middle box and</font>

271
00:10:55,730 --> 00:10:59,480
so you need something that will be most

272
00:10:57,740 --> 00:11:01,550
capable of transiting all types of paths

273
00:10:59,480 --> 00:11:02,960
and when you really restrict yourself to

274
00:11:01,550 --> 00:11:04,910
that you<font color="#CCCCCC"> also</font><font color="#E5E5E5"> run into issues of</font>

275
00:11:02,960 --> 00:11:06,350
capacity you know getting enough bits to

276
00:11:04,910 --> 00:11:08,810
send the information you want and then

277
00:11:06,350 --> 00:11:10,670
<font color="#CCCCCC">also being incremented playable making</font>

278
00:11:08,810 --> 00:11:12,500
sure that you don't break<font color="#E5E5E5"> anything with</font>

279
00:11:10,670 --> 00:11:13,939
whatever you're trying to do<font color="#E5E5E5"> and then a</font>

280
00:11:12,500 --> 00:11:15,710
more subtle issue of being middle box

281
00:11:13,940 --> 00:11:18,170
cooperative so this goes back to our

282
00:11:15,710 --> 00:11:20,690
point earlier that sometimes<font color="#CCCCCC"> little</font>

283
00:11:18,170 --> 00:11:22,910
boxes can actually do useful things for

284
00:11:20,690 --> 00:11:24,800
<font color="#CCCCCC">us and so we don't</font><font color="#E5E5E5"> want to disrupt or</font>

285
00:11:22,910 --> 00:11:27,350
otherwise circumvent well-behaved middle

286
00:11:24,800 --> 00:11:32,270
boxes and then also being<font color="#CCCCCC"> able to inform</font>

287
00:11:27,350 --> 00:11:34,190
both<font color="#E5E5E5"> endpoints</font><font color="#CCCCCC"> and so our solution to</font>

288
00:11:32,270 --> 00:11:36,110
meet<font color="#CCCCCC"> each of these challenges is hiccups</font>

289
00:11:34,190 --> 00:11:38,090
which is a lightweight<font color="#CCCCCC"> TCP extension</font>

290
00:11:36,110 --> 00:11:40,280
that exposes<font color="#E5E5E5"> in-flight packet header</font>

291
00:11:38,090 --> 00:11:41,930
modification<font color="#E5E5E5"> to</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> points essentially</font>

292
00:11:40,280 --> 00:11:43,730
what<font color="#E5E5E5"> we're trying to do is automate the</font>

293
00:11:41,930 --> 00:11:45,229
question did my packets arrive at the

294
00:11:43,730 --> 00:11:47,030
destination with the same headers as

295
00:11:45,230 --> 00:11:48,740
sent the idea here is we're trying<font color="#E5E5E5"> to</font>

296
00:11:47,030 --> 00:11:50,480
protect mailboxes making changes so that

297
00:11:48,740 --> 00:11:54,110
we can<font color="#E5E5E5"> help TCP determine whether it's</font>

298
00:11:50,480 --> 00:11:56,839
<font color="#E5E5E5">being misinterpreted without interfering</font>

299
00:11:54,110 --> 00:11:58,130
with the good metal boxes and at a high

300
00:11:56,839 --> 00:12:00,290
level a little<font color="#CCCCCC"> bit about how the</font><font color="#E5E5E5"> hiccups</font>

301
00:11:58,130 --> 00:12:01,370
works so we actually overload 3 header

302
00:12:00,290 --> 00:12:03,260
fields out of the<font color="#E5E5E5"> three-way handshake</font>

303
00:12:01,370 --> 00:12:05,480
the initial sequence number of the

304
00:12:03,260 --> 00:12:07,550
initial ipid in the initial receive

305
00:12:05,480 --> 00:12:08,960
window and we overload each of those

306
00:12:07,550 --> 00:12:11,420
with a function<font color="#E5E5E5"> of the packet headers</font>

307
00:12:08,960 --> 00:12:13,220
and so now each<font color="#CCCCCC"> of those three fields</font>

308
00:12:11,420 --> 00:12:15,560
serve dual purposes in<font color="#CCCCCC"> addition</font><font color="#E5E5E5"> to the</font>

309
00:12:13,220 --> 00:12:19,580
original job they also contain hiccups

310
00:12:15,560 --> 00:12:21,530
and probation and we spread over three

311
00:12:19,580 --> 00:12:23,870
fields in case one has<font color="#E5E5E5"> changed so in</font>

312
00:12:21,530 --> 00:12:25,130
some of our<font color="#E5E5E5"> early work we found that you</font>

313
00:12:23,870 --> 00:12:26,540
can't<font color="#E5E5E5"> just rely on for instance a</font>

314
00:12:25,130 --> 00:12:28,580
initial sequence number because there

315
00:12:26,540 --> 00:12:31,400
are quite a few boxes out there that bit

316
00:12:28,580 --> 00:12:33,070
translate that and<font color="#E5E5E5"> change it and so we</font>

317
00:12:31,400 --> 00:12:35,030
also use a lightweight hash function

318
00:12:33,070 --> 00:12:37,490
because we really have a little bit of

319
00:12:35,030 --> 00:12:39,890
<font color="#E5E5E5">space in our case</font><font color="#CCCCCC"> we only</font><font color="#E5E5E5"> use three sets</font>

320
00:12:37,490 --> 00:12:41,510
of<font color="#E5E5E5"> 12 bits so we use the light weight</font>

321
00:12:39,890 --> 00:12:43,520
function and<font color="#CCCCCC"> we also make the assumption</font>

322
00:12:41,510 --> 00:12:44,930
there's no shared secret available and

323
00:12:43,520 --> 00:12:46,610
that's so that we can<font color="#E5E5E5"> work with general</font>

324
00:12:44,930 --> 00:12:49,060
in<font color="#E5E5E5"> the general case with anonymous hosts</font>

325
00:12:46,610 --> 00:12:49,060
on the<font color="#CCCCCC"> internet</font>

326
00:12:50,209 --> 00:12:54,989
and the result of<font color="#E5E5E5"> all this is that we</font>

327
00:12:52,589 --> 00:12:57,029
create an end-to-end tamper-evident<font color="#E5E5E5"> seal</font>

328
00:12:54,990 --> 00:12:58,079
over the packet headers and we want to

329
00:12:57,029 --> 00:12:59,519
stress that this<font color="#E5E5E5"> is different than a</font>

330
00:12:58,079 --> 00:13:01,529
checksum for instance if the

331
00:12:59,519 --> 00:13:03,180
modification occurs to the packet header

332
00:13:01,529 --> 00:13:04,949
we still accept that packet it's just

333
00:13:03,180 --> 00:13:06,899
now that now TCP get some extra

334
00:13:04,949 --> 00:13:08,309
information about what happened and can

335
00:13:06,899 --> 00:13:11,009
try to take a step<font color="#E5E5E5"> maybe to recover from</font>

336
00:13:08,309 --> 00:13:16,769
<font color="#E5E5E5">it or work around the issue or bring</font><font color="#CCCCCC"> it</font>

337
00:13:11,009 --> 00:13:18,689
to you<font color="#CCCCCC"> attention to</font><font color="#E5E5E5"> the user and so in</font>

338
00:13:16,769 --> 00:13:20,309
order to use hiccups a house tcp stack

339
00:13:18,689 --> 00:13:21,629
has to be enabled<font color="#CCCCCC"> with it but once that</font>

340
00:13:20,309 --> 00:13:23,730
happens hiccups can be used without

341
00:13:21,629 --> 00:13:26,009
<font color="#E5E5E5">endpoint coordination our long-term</font>

342
00:13:23,730 --> 00:13:28,529
vision is to try to<font color="#E5E5E5"> get this into</font><font color="#CCCCCC"> TCP</font>

343
00:13:26,009 --> 00:13:30,329
and so if all stacks included it you

344
00:13:28,529 --> 00:13:31,949
know kind<font color="#CCCCCC"> of work in a parallel in terms</font>

345
00:13:30,329 --> 00:13:34,498
of how in the way congestion control

346
00:13:31,949 --> 00:13:37,290
helps<font color="#CCCCCC"> TCP and fur and and congestion</font>

347
00:13:34,499 --> 00:13:38,399
congestion<font color="#E5E5E5"> state hiccups could help</font><font color="#CCCCCC"> TCP</font>

348
00:13:37,290 --> 00:13:42,480
and for end-to-end packet header

349
00:13:38,399 --> 00:13:45,089
modification state and so for our

350
00:13:42,480 --> 00:13:47,279
implementation we wrote a patch for the

351
00:13:45,089 --> 00:13:49,920
Linux kernel version 394 that alters the

352
00:13:47,279 --> 00:13:52,439
<font color="#CCCCCC">TCP stack in Linux to enable hiccups and</font>

353
00:13:49,920 --> 00:13:54,959
this<font color="#CCCCCC"> particular edition requires no</font>

354
00:13:52,439 --> 00:13:56,730
action by applications but if they want

355
00:13:54,959 --> 00:13:58,378
we provide some additional optional

356
00:13:56,730 --> 00:14:01,410
features they can take<font color="#E5E5E5"> advantage of for</font>

357
00:13:58,379 --> 00:14:03,600
instance getting the the status from the

358
00:14:01,410 --> 00:14:05,730
check mandame of specifying certain

359
00:14:03,600 --> 00:14:07,920
fields the application maybe won't<font color="#E5E5E5"> check</font>

360
00:14:05,730 --> 00:14:11,009
and then also engaging what we call<font color="#CCCCCC"> apps</font>

361
00:14:07,920 --> 00:14:12,689
<font color="#CCCCCC">alt mode which is an additional way to</font>

362
00:14:11,009 --> 00:14:16,050
add<font color="#CCCCCC"> additional protection to the hashes</font>

363
00:14:12,689 --> 00:14:18,029
and make them harder to fake and<font color="#E5E5E5"> we also</font>

364
00:14:16,050 --> 00:14:19,620
have<font color="#CCCCCC"> a set of cross-platform userspace</font>

365
00:14:18,029 --> 00:14:21,929
tools so that we can do some one-off

366
00:14:19,620 --> 00:14:27,029
testing in cases<font color="#CCCCCC"> where</font><font color="#E5E5E5"> we can't or don't</font>

367
00:14:21,929 --> 00:14:29,399
want<font color="#E5E5E5"> to alter the colonel so we use our</font>

368
00:14:27,029 --> 00:14:31,230
tools<font color="#E5E5E5"> and some measurements that we ran</font>

369
00:14:29,399 --> 00:14:34,649
on the general internet using planetlab

370
00:14:31,230 --> 00:14:36,540
and also<font color="#E5E5E5"> Kate</font><font color="#CCCCCC"> Ozark and the goal being</font>

371
00:14:34,649 --> 00:14:37,860
here is that we wanted<font color="#CCCCCC"> to you know</font>

372
00:14:36,540 --> 00:14:38,969
through we call vidding with our

373
00:14:37,860 --> 00:14:40,350
measurements is if there was some sort

374
00:14:38,970 --> 00:14:42,569
of interesting behavior happening we

375
00:14:40,350 --> 00:14:44,129
wanted to<font color="#E5E5E5"> find it so we</font><font color="#CCCCCC"> tested a range</font>

376
00:14:42,569 --> 00:14:46,110
of different<font color="#E5E5E5"> ports and parameters and</font>

377
00:14:44,129 --> 00:14:47,610
for<font color="#E5E5E5"> instance like we</font><font color="#CCCCCC"> checked different</font>

378
00:14:46,110 --> 00:14:49,589
ports because prior work has shown that

379
00:14:47,610 --> 00:14:51,809
some paths actually exhibit port

380
00:14:49,589 --> 00:14:53,759
specific behaviors where middle box may

381
00:14:51,809 --> 00:14:55,559
be operating<font color="#CCCCCC"> on one port but not the</font>

382
00:14:53,759 --> 00:14:59,490
other and so we wanted to be able to

383
00:14:55,559 --> 00:15:01,529
detect that and find that and summarize

384
00:14:59,490 --> 00:15:03,420
our<font color="#E5E5E5"> measurements at a high level almost</font>

385
00:15:01,529 --> 00:15:04,980
half the nodes we<font color="#CCCCCC"> tested</font>

386
00:15:03,420 --> 00:15:06,930
saw at<font color="#E5E5E5"> least one in path header</font>

387
00:15:04,980 --> 00:15:09,510
modification to one of the<font color="#E5E5E5"> ports that we</font>

388
00:15:06,930 --> 00:15:11,370
tested and this was more than expected

389
00:15:09,510 --> 00:15:13,740
<font color="#CCCCCC">to find especially given the nature of</font>

390
00:15:11,370 --> 00:15:15,330
our measurement network you know we use

391
00:15:13,740 --> 00:15:17,250
<font color="#CCCCCC">planetlab</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is mostly hosted on</font>

392
00:15:15,330 --> 00:15:19,500
<font color="#CCCCCC">university networks and it should be</font>

393
00:15:17,250 --> 00:15:20,910
<font color="#E5E5E5">more open and research networks and so I</font>

394
00:15:19,500 --> 00:15:23,400
<font color="#E5E5E5">guess I was a bit more than</font><font color="#CCCCCC"> we expected</font>

395
00:15:20,910 --> 00:15:26,189
<font color="#E5E5E5">we also saw cases of a symmetric</font>

396
00:15:23,400 --> 00:15:27,689
modifications where the header

397
00:15:26,190 --> 00:15:31,100
modification only occurred<font color="#CCCCCC"> two out of</font>

398
00:15:27,690 --> 00:15:33,570
<font color="#CCCCCC">the forward or reverse path but not both</font>

399
00:15:31,100 --> 00:15:34,770
and so this table here shows<font color="#CCCCCC"> a condensed</font>

400
00:15:33,570 --> 00:15:36,480
version<font color="#CCCCCC"> of all the different</font>

401
00:15:34,770 --> 00:15:39,030
modifications that we tested for and

402
00:15:36,480 --> 00:15:40,740
found<font color="#E5E5E5"> and each number on the table</font><font color="#CCCCCC"> you</font>

403
00:15:39,030 --> 00:15:42,900
see<font color="#E5E5E5"> represents one of the port path</font>

404
00:15:40,740 --> 00:15:44,520
pairs and there's a<font color="#E5E5E5"> few one here</font><font color="#CCCCCC"> that I</font>

405
00:15:42,900 --> 00:15:46,890
want<font color="#CCCCCC"> to point out in particular the</font>

406
00:15:44,520 --> 00:15:50,520
first one being<font color="#CCCCCC"> I signed translation</font>

407
00:15:46,890 --> 00:15:52,560
that occurred on about eight point eight

408
00:15:50,520 --> 00:15:54,750
percent and the<font color="#CCCCCC"> potential is there for</font>

409
00:15:52,560 --> 00:15:57,150
<font color="#CCCCCC">TCP selective</font><font color="#E5E5E5"> acknowledgement disruption</font>

410
00:15:54,750 --> 00:15:58,680
the<font color="#E5E5E5"> idea being that you know some older</font>

411
00:15:57,150 --> 00:16:01,050
devices will translate the sequence

412
00:15:58,680 --> 00:16:03,150
number but then fail to also update the

413
00:16:01,050 --> 00:16:07,020
to seek with<font color="#E5E5E5"> a copy of the secret number</font>

414
00:16:03,150 --> 00:16:08,970
that's placed in the sac blocks and the

415
00:16:07,020 --> 00:16:13,980
result is<font color="#CCCCCC"> you get to sort of out of out</font>

416
00:16:08,970 --> 00:16:15,420
<font color="#CCCCCC">of sync sequence numbers and also</font>

417
00:16:13,980 --> 00:16:17,850
another thing<font color="#E5E5E5"> I want to point out is</font>

418
00:16:15,420 --> 00:16:19,829
<font color="#CCCCCC">with ecn IP code points being changed</font>

419
00:16:17,850 --> 00:16:22,350
the potentials<font color="#CCCCCC"> therefore that that sort</font>

420
00:16:19,830 --> 00:16:24,290
of disrupt between like the 1980s

421
00:16:22,350 --> 00:16:26,790
version in the 2000s version of the ecn

422
00:16:24,290 --> 00:16:30,810
so this is<font color="#E5E5E5"> so this particular this for</font>

423
00:16:26,790 --> 00:16:32,699
instance be bad for ECM<font color="#CCCCCC"> and we also saw</font>

424
00:16:30,810 --> 00:16:34,260
some cases of<font color="#CCCCCC"> TCP options being stripped</font>

425
00:16:32,700 --> 00:16:37,230
out which<font color="#CCCCCC"> you</font><font color="#E5E5E5"> think about it's kind of</font>

426
00:16:34,260 --> 00:16:39,180
disheartening because options are the

427
00:16:37,230 --> 00:16:41,490
primary way to extend<font color="#E5E5E5"> TCP in most</font>

428
00:16:39,180 --> 00:16:43,469
instances and so and also this was on

429
00:16:41,490 --> 00:16:44,940
planetlab a narc which are you know open

430
00:16:43,470 --> 00:16:47,670
networks meant for research<font color="#E5E5E5"> and we still</font>

431
00:16:44,940 --> 00:16:50,600
saw about<font color="#E5E5E5"> seven percent of cases</font><font color="#CCCCCC"> where</font>

432
00:16:47,670 --> 00:16:50,599
the options were stripped

433
00:16:52,089 --> 00:16:56,860
oh sorry and I want<font color="#E5E5E5"> to add that not</font>

434
00:16:55,629 --> 00:16:59,199
necessarily<font color="#CCCCCC"> all options but more like</font>

435
00:16:56,860 --> 00:17:02,079
than the newer option so multipath

436
00:16:59,199 --> 00:17:03,639
capable for multipath TCP and also the

437
00:17:02,079 --> 00:17:05,079
last one on the list is an experimental

438
00:17:03,639 --> 00:17:07,179
option that we added<font color="#E5E5E5"> for the purposes of</font>

439
00:17:05,079 --> 00:17:11,139
<font color="#CCCCCC">test so create a new one and try to</font>

440
00:17:07,179 --> 00:17:12,909
transfer<font color="#CCCCCC"> that and we also saw instances</font>

441
00:17:11,140 --> 00:17:14,589
of a new<font color="#CCCCCC"> behavior to us that happen with</font>

442
00:17:12,909 --> 00:17:17,199
<font color="#CCCCCC">windows scaling being added so a little</font>

443
00:17:14,589 --> 00:17:19,379
<font color="#E5E5E5">more about</font><font color="#CCCCCC"> that we actually</font><font color="#E5E5E5"> saw</font><font color="#CCCCCC"> it on</font>

444
00:17:17,199 --> 00:17:22,600
one of<font color="#E5E5E5"> the planet lab nodes there was</font>

445
00:17:19,380 --> 00:17:24,459
whenever we tried to send out a syn

446
00:17:22,599 --> 00:17:26,319
packet without requesting window scaling

447
00:17:24,459 --> 00:17:27,669
there was a box along the path it was

448
00:17:26,319 --> 00:17:28,899
like oh I'll help you<font color="#CCCCCC"> out you missed</font>

449
00:17:27,669 --> 00:17:31,750
window scaling<font color="#E5E5E5"> i'll add that back for</font>

450
00:17:28,899 --> 00:17:34,029
you and on the syn<font color="#E5E5E5"> ack it also removed</font>

451
00:17:31,750 --> 00:17:36,039
the responding windows scaling from the

452
00:17:34,029 --> 00:17:39,390
other end and so we never knew what was

453
00:17:36,039 --> 00:17:41,408
we we didn't know what's going on and

454
00:17:39,390 --> 00:17:42,610
that's only<font color="#E5E5E5"> happened what we discovered</font>

455
00:17:41,409 --> 00:17:45,850
is only happened we're going out<font color="#E5E5E5"> that</font>

456
00:17:42,610 --> 00:17:50,529
ports 80 or 443 and window hiccups

457
00:17:45,850 --> 00:17:53,110
helped us detectives so what we want to

458
00:17:50,529 --> 00:17:54,789
<font color="#E5E5E5">do is we ran bulk transfer between our</font>

459
00:17:53,110 --> 00:17:56,860
planet lab node and one of our<font color="#E5E5E5"> Hank our</font>

460
00:17:54,789 --> 00:17:58,120
server anchor nodes and we observed that

461
00:17:56,860 --> 00:18:00,850
that transfer was obviously flow

462
00:17:58,120 --> 00:18:02,020
controlled and when we told each unknown

463
00:18:00,850 --> 00:18:04,959
or<font color="#CCCCCC"> windows scaling the throughput</font>

464
00:18:02,020 --> 00:18:06,340
doubled so in this case we emailed the

465
00:18:04,960 --> 00:18:08,140
owners of<font color="#E5E5E5"> the node and it turns out they</font>

466
00:18:06,340 --> 00:18:09,610
didn't know about the behavior the issue

467
00:18:08,140 --> 00:18:11,710
was on one of their<font color="#E5E5E5"> providers systems</font>

468
00:18:09,610 --> 00:18:13,689
and they contacted their provider to get

469
00:18:11,710 --> 00:18:15,460
it fixed unfortunately we don't know any

470
00:18:13,690 --> 00:18:16,929
<font color="#CCCCCC">more details about what it was but the</font>

471
00:18:15,460 --> 00:18:18,190
cool part is that hiccups detected

472
00:18:16,929 --> 00:18:20,140
something that<font color="#E5E5E5"> even they didn't know was</font>

473
00:18:18,190 --> 00:18:21,520
happening I was a subtle issue that

474
00:18:20,140 --> 00:18:26,380
affected<font color="#CCCCCC"> the whole campus and they were</font>

475
00:18:21,520 --> 00:18:27,970
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> get it fixed and</font><font color="#E5E5E5"> I'll just like</font>

476
00:18:26,380 --> 00:18:31,029
to point you to our website TCP hiccups

477
00:18:27,970 --> 00:18:33,370
org where we have posted our code it's

478
00:18:31,029 --> 00:18:34,779
<font color="#E5E5E5">available for download you can</font><font color="#CCCCCC"> grab one</font>

479
00:18:33,370 --> 00:18:36,610
<font color="#E5E5E5">of the Colonel's we and deploy it we</font>

480
00:18:34,779 --> 00:18:39,730
have some rpms available for red hat

481
00:18:36,610 --> 00:18:42,219
fedora and you can also use<font color="#E5E5E5"> the users</font>

482
00:18:39,730 --> 00:18:46,120
based tools and go and test your<font color="#CCCCCC"> own</font>

483
00:18:42,220 --> 00:18:47,710
networks and see what you<font color="#E5E5E5"> can find if</font>

484
00:18:46,120 --> 00:18:50,770
you were to do that I show you real

485
00:18:47,710 --> 00:18:54,640
quick<font color="#CCCCCC"> what that would look like back on</font>

486
00:18:50,770 --> 00:18:56,139
our little demo here so in this case

487
00:18:54,640 --> 00:18:58,510
remember<font color="#E5E5E5"> what's going on here is there's</font>

488
00:18:56,140 --> 00:19:01,649
a middle box in the way that is zeroing

489
00:18:58,510 --> 00:19:01,649
out that window scaling value

490
00:19:06,420 --> 00:19:11,410
so this is<font color="#E5E5E5"> our user space client here</font>

491
00:19:09,130 --> 00:19:12,940
that you're looking<font color="#E5E5E5"> at and when we ran</font>

492
00:19:11,410 --> 00:19:15,100
it we find<font color="#E5E5E5"> that it does detect the</font>

493
00:19:12,940 --> 00:19:17,200
window scaling modification happening in

494
00:19:15,100 --> 00:19:18,790
both directions and that's when we probe

495
00:19:17,200 --> 00:19:21,580
for<font color="#CCCCCC"> windows scaling if we take off this</font>

496
00:19:18,790 --> 00:19:24,580
tack in here it will not check windows

497
00:19:21,580 --> 00:19:27,159
scaling or yeah it will not set a window

498
00:19:24,580 --> 00:19:28,389
scaling option and when that's done<font color="#E5E5E5"> we</font>

499
00:19:27,160 --> 00:19:31,390
see that there's no modifications that

500
00:19:28,390 --> 00:19:32,700
happen and so we<font color="#E5E5E5"> can infer from this is</font>

501
00:19:31,390 --> 00:19:34,960
there's a middle box in the way that is

502
00:19:32,700 --> 00:19:37,710
<font color="#CCCCCC">sooo is changing that window scaling</font>

503
00:19:34,960 --> 00:19:37,710
value when we set it

504
00:19:42,630 --> 00:19:46,800
and so last we also have an email

505
00:19:45,060 --> 00:19:49,169
address set up where you<font color="#E5E5E5"> can send us any</font>

506
00:19:46,800 --> 00:19:50,600
feedback if you download and run the

507
00:19:49,170 --> 00:19:52,740
tool any issues you have with the tool

508
00:19:50,600 --> 00:19:54,689
crazy middle box stories that you have

509
00:19:52,740 --> 00:19:57,090
<font color="#E5E5E5">an experience</font><font color="#CCCCCC"> you get from using the</font>

510
00:19:54,690 --> 00:19:59,610
tool we'd love to<font color="#E5E5E5"> hear it so any of that</font>

511
00:19:57,090 --> 00:20:02,370
is very<font color="#E5E5E5"> welcome and that's hiccups at</font>

512
00:19:59,610 --> 00:20:05,060
SEMA org and with that<font color="#E5E5E5"> I'm finished and</font>

513
00:20:02,370 --> 00:20:05,060
I'll take any questions

514
00:20:29,550 --> 00:20:34,600
Ralph meulen internet archive I would

515
00:20:32,230 --> 00:20:37,210
love to use the tool<font color="#CCCCCC"> and easily can put</font>

516
00:20:34,600 --> 00:20:38,980
a new kernel on one end but on the

517
00:20:37,210 --> 00:20:41,020
remote and I might have more

518
00:20:38,980 --> 00:20:43,750
restrictions on what I can do is there

519
00:20:41,020 --> 00:20:45,850
any way to run this in user space with

520
00:20:43,750 --> 00:20:47,950
like raw sockets or so just<font color="#E5E5E5"> for testing</font>

521
00:20:45,850 --> 00:20:48,939
purposes to see what happened yeah

522
00:20:47,950 --> 00:20:53,620
that's actually<font color="#E5E5E5"> how the user base</font>

523
00:20:48,940 --> 00:20:55,210
towards using<font color="#CCCCCC"> the raw sockets in the</font>

524
00:20:53,620 --> 00:20:56,830
client is cross-platform I've got

525
00:20:55,210 --> 00:20:59,020
working on windows and you know it's<font color="#E5E5E5"> 10</font>

526
00:20:56,830 --> 00:21:00,490
and everything but there's a server a

527
00:20:59,020 --> 00:21:03,280
raw socket server that actually have

528
00:21:00,490 --> 00:21:05,620
working<font color="#E5E5E5"> in linux and it's part of that</font>

529
00:21:03,280 --> 00:21:07,480
same packet you download<font color="#CCCCCC"> it there's an</font>

530
00:21:05,620 --> 00:21:10,540
HS tool in there that you can run on the

531
00:21:07,480 --> 00:21:12,430
linux server if you don't use the kernel

532
00:21:10,540 --> 00:21:15,730
for instance we've also set up some some

533
00:21:12,430 --> 00:21:17,680
measurement servers so on a website if

534
00:21:15,730 --> 00:21:19,600
you<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> i think</font><font color="#E5E5E5"> you actually run</font>

535
00:21:17,680 --> 00:21:21,850
<font color="#CCCCCC">the client without giving it a</font>

536
00:21:19,600 --> 00:21:23,770
destination it will download a list of

537
00:21:21,850 --> 00:21:28,590
anchor nodes that we've set up and then

538
00:21:23,770 --> 00:21:28,590
allow you to propos thank you

539
00:21:31,600 --> 00:21:37,949
you more questions all right thank<font color="#CCCCCC"> you</font>

540
00:21:35,410 --> 00:21:37,950
<font color="#E5E5E5">very</font><font color="#CCCCCC"> much Ryan</font>

541
00:21:50,370 --> 00:21:52,429
you

