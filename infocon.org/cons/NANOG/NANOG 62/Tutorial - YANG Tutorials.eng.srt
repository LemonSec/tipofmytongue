1
00:00:08,710 --> 00:00:15,590
<font color="#CCCCCC">okay so it's on the half-hour</font><font color="#E5E5E5"> so I guess</font>

2
00:00:11,840 --> 00:00:16,210
we<font color="#E5E5E5"> better</font><font color="#CCCCCC"> start</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> thank you all for</font>

3
00:00:15,590 --> 00:00:19,850
coming

4
00:00:16,210 --> 00:00:23,270
amazing turnout<font color="#E5E5E5"> for a data modeling</font>

5
00:00:19,850 --> 00:00:25,700
language and protocol<font color="#E5E5E5"> walkthrough</font><font color="#CCCCCC"> I wish</font>

6
00:00:23,270 --> 00:00:29,420
they<font color="#CCCCCC"> could have a bigger room</font><font color="#E5E5E5"> that would</font>

7
00:00:25,700 --> 00:00:32,659
be cool so my name is<font color="#CCCCCC"> called Moberg this</font>

8
00:00:29,420 --> 00:00:35,690
is a follow-up<font color="#E5E5E5"> session from</font><font color="#CCCCCC"> Nanog 61</font><font color="#E5E5E5"> it</font>

9
00:00:32,659 --> 00:00:38,269
is slightly<font color="#CCCCCC"> updated and actually for you</font>

10
00:00:35,690 --> 00:00:39,680
guys we have two sessions<font color="#E5E5E5"> today so the</font>

11
00:00:38,270 --> 00:00:43,040
first one<font color="#CCCCCC"> that I'm gonna</font><font color="#E5E5E5"> start in on</font>

12
00:00:39,680 --> 00:00:45,620
right now<font color="#CCCCCC"> is a technology deep dive we</font>

13
00:00:43,040 --> 00:00:47,570
will cover the<font color="#CCCCCC"> yang language and the</font>

14
00:00:45,620 --> 00:00:50,750
Netcom protocol in some detail<font color="#E5E5E5"> actually</font>

15
00:00:47,570 --> 00:00:52,670
<font color="#CCCCCC">and I'll let you go for lunch or a brief</font>

16
00:00:50,750 --> 00:00:54,769
lunch<font color="#CCCCCC"> we have about 30</font><font color="#E5E5E5"> minutes between</font>

17
00:00:52,670 --> 00:00:58,280
<font color="#E5E5E5">the sessions</font><font color="#CCCCCC"> and the second session</font><font color="#E5E5E5"> will</font>

18
00:00:54,770 --> 00:01:01,460
be all examples so I will literally<font color="#E5E5E5"> only</font>

19
00:00:58,280 --> 00:01:02,960
have a<font color="#CCCCCC"> single slide</font><font color="#E5E5E5"> compared to the 75</font>

20
00:01:01,460 --> 00:01:05,049
or so I have in this session<font color="#E5E5E5"> and the</font>

21
00:01:02,960 --> 00:01:09,049
rest will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> spent in my terminal window</font>

22
00:01:05,049 --> 00:01:13,310
<font color="#CCCCCC">so depending on what you care for both</font>

23
00:01:09,049 --> 00:01:16,010
<font color="#E5E5E5">probably serves their purposes</font><font color="#CCCCCC"> for those</font>

24
00:01:13,310 --> 00:01:18,260
of you who were<font color="#CCCCCC"> here for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> the kind of</font>

25
00:01:16,010 --> 00:01:20,180
<font color="#E5E5E5">the similar presentation</font><font color="#CCCCCC"> from Nanak</font><font color="#E5E5E5"> 61</font>

26
00:01:18,260 --> 00:01:22,640
this<font color="#E5E5E5"> is kind of the same I'm gonna use</font>

27
00:01:20,180 --> 00:01:24,170
it as a level set so none of you<font color="#E5E5E5"> guys</font>

28
00:01:22,640 --> 00:01:26,299
actually<font color="#E5E5E5"> hit the next session without</font>

29
00:01:24,170 --> 00:01:28,670
knowing what I'm talking about<font color="#E5E5E5"> there's</font>

30
00:01:26,299 --> 00:01:30,290
only been a few<font color="#E5E5E5"> updates around the</font>

31
00:01:28,670 --> 00:01:32,840
models that<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> gonna talk about in</font>

32
00:01:30,290 --> 00:01:35,030
the standards<font color="#E5E5E5"> and a couple of things</font>

33
00:01:32,840 --> 00:01:37,490
<font color="#CCCCCC">related to</font><font color="#E5E5E5"> the protocol otherwise</font><font color="#CCCCCC"> is</font>

34
00:01:35,030 --> 00:01:44,750
<font color="#E5E5E5">going to cover much of</font><font color="#CCCCCC"> the same basis as</font>

35
00:01:37,490 --> 00:01:47,149
here and let me<font color="#CCCCCC"> try the clicker good</font><font color="#E5E5E5"> and</font>

36
00:01:44,750 --> 00:01:49,310
as I said<font color="#E5E5E5"> the next session will</font><font color="#CCCCCC"> also use</font>

37
00:01:47,150 --> 00:01:51,470
two<font color="#E5E5E5"> protocols</font><font color="#CCCCCC"> nat coffin</font><font color="#E5E5E5"> actually will</font>

38
00:01:49,310 --> 00:01:52,880
look a little<font color="#E5E5E5"> bit on the rest</font><font color="#CCCCCC"> cone</font>

39
00:01:51,470 --> 00:01:56,240
protocol or the protocol<font color="#CCCCCC"> that</font><font color="#E5E5E5"> will</font>

40
00:01:52,880 --> 00:02:00,908
eventually<font color="#E5E5E5"> be called rest conf</font><font color="#CCCCCC"> in the</font>

41
00:01:56,240 --> 00:02:00,908
next session for protocol level examples

42
00:02:00,939 --> 00:02:06,649
okay so let's get<font color="#CCCCCC"> started and</font><font color="#E5E5E5"> I would</font>

43
00:02:04,070 --> 00:02:09,228
strongly urge you<font color="#CCCCCC"> guys and girls to ask</font>

44
00:02:06,650 --> 00:02:11,209
questions<font color="#E5E5E5"> otherwise this won't be a 90</font>

45
00:02:09,229 --> 00:02:14,269
minute presentation it will<font color="#E5E5E5"> probably be</font>

46
00:02:11,209 --> 00:02:18,530
a 60 minute or so presentation so either

47
00:02:14,269 --> 00:02:20,340
raise your hands<font color="#E5E5E5"> and scream or be good</font>

48
00:02:18,530 --> 00:02:22,140
citizens<font color="#E5E5E5"> and walk up to</font><font color="#CCCCCC"> the</font>

49
00:02:20,340 --> 00:02:25,470
I don't think<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> gonna have any lines</font>

50
00:02:22,140 --> 00:02:28,040
<font color="#CCCCCC">so I</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> think ordering or order at</font>

51
00:02:25,470 --> 00:02:31,620
the<font color="#E5E5E5"> mic will be a be a huge problem here</font>

52
00:02:28,040 --> 00:02:33,510
<font color="#CCCCCC">okay so let's get going so first of all</font>

53
00:02:31,620 --> 00:02:35,069
<font color="#E5E5E5">I usually start these presentations by</font>

54
00:02:33,510 --> 00:02:38,340
kind of level setting of what we're

55
00:02:35,069 --> 00:02:40,140
talking<font color="#CCCCCC"> about I have worked around</font>

56
00:02:38,340 --> 00:02:42,830
network configuration and network

57
00:02:40,140 --> 00:02:45,420
orchestration since the late 90s

58
00:02:42,830 --> 00:02:48,239
unfortunately not<font color="#E5E5E5"> much have changed over</font>

59
00:02:45,420 --> 00:02:50,280
<font color="#E5E5E5">time so just to get us all started we</font>

60
00:02:48,239 --> 00:02:52,739
have to realize<font color="#CCCCCC"> that we're all battling</font>

61
00:02:50,280 --> 00:02:54,930
at this point<font color="#E5E5E5"> in the entire industry</font>

62
00:02:52,739 --> 00:02:57,750
the following<font color="#E5E5E5"> incumbent market leaders</font>

63
00:02:54,930 --> 00:02:59,340
<font color="#CCCCCC">in configuration</font><font color="#E5E5E5"> management</font><font color="#CCCCCC"> I moved to</font>

64
00:02:57,750 --> 00:03:01,769
the<font color="#E5E5E5"> US</font><font color="#CCCCCC"> about two years ago</font><font color="#E5E5E5"> I've been</font>

65
00:02:59,340 --> 00:03:03,480
<font color="#E5E5E5">traveling to most of the large companies</font>

66
00:03:01,769 --> 00:03:06,209
<font color="#CCCCCC">that</font><font color="#E5E5E5"> owned and run networks and I'll</font>

67
00:03:03,480 --> 00:03:08,880
tell you<font color="#CCCCCC"> that 100%</font><font color="#E5E5E5"> of them without a</font>

68
00:03:06,209 --> 00:03:11,580
doubt<font color="#E5E5E5"> actually sit</font><font color="#CCCCCC"> in swivel</font><font color="#E5E5E5"> chairs and</font>

69
00:03:08,880 --> 00:03:14,190
type things into<font color="#E5E5E5"> their CL eyes or craft</font>

70
00:03:11,580 --> 00:03:16,200
interfaces based off of content in<font color="#E5E5E5"> Excel</font>

71
00:03:14,190 --> 00:03:19,290
sheets<font color="#E5E5E5"> Word documents or stuff that</font>

72
00:03:16,200 --> 00:03:20,700
<font color="#CCCCCC">comes</font><font color="#E5E5E5"> out of printers so we're trying to</font>

73
00:03:19,290 --> 00:03:22,769
very modest<font color="#E5E5E5"> approach here we're trying</font>

74
00:03:20,700 --> 00:03:25,709
<font color="#CCCCCC">to start from nothing and go to</font>

75
00:03:22,769 --> 00:03:28,350
somewhere so it's<font color="#E5E5E5"> not a super</font>

76
00:03:25,709 --> 00:03:29,670
<font color="#E5E5E5">forward-looking post Sdn presentation</font>

77
00:03:28,350 --> 00:03:32,459
it's going<font color="#E5E5E5"> from where we are</font><font color="#CCCCCC"> right now</font>

78
00:03:29,670 --> 00:03:36,988
<font color="#E5E5E5">into something</font><font color="#CCCCCC"> that is incrementally but</font>

79
00:03:32,459 --> 00:03:38,430
noticeably<font color="#E5E5E5"> better so I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> go</font>

80
00:03:36,989 --> 00:03:39,840
<font color="#E5E5E5">through a brief overview</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of a</font>

81
00:03:38,430 --> 00:03:43,109
<font color="#E5E5E5">background of motivation of these</font>

82
00:03:39,840 --> 00:03:45,600
technologies go deeper into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Netcom</font>

83
00:03:43,109 --> 00:03:49,109
protocol<font color="#E5E5E5"> even though most details most</font>

84
00:03:45,600 --> 00:03:51,060
kind of<font color="#CCCCCC"> PDUs most</font><font color="#E5E5E5"> packet content will</font><font color="#CCCCCC"> be</font>

85
00:03:49,109 --> 00:03:52,859
deferred<font color="#CCCCCC"> to the next session</font><font color="#E5E5E5"> but I will</font>

86
00:03:51,060 --> 00:03:55,140
spend quite a bit<font color="#CCCCCC"> of time</font><font color="#E5E5E5"> on the yang</font>

87
00:03:52,859 --> 00:03:57,150
language and<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> contra constructs and</font>

88
00:03:55,140 --> 00:03:59,790
we will of course leverage<font color="#E5E5E5"> what I tell</font>

89
00:03:57,150 --> 00:04:01,440
you in<font color="#E5E5E5"> this session in the</font><font color="#CCCCCC"> next session</font>

90
00:03:59,790 --> 00:04:06,870
we<font color="#CCCCCC"> will</font><font color="#E5E5E5"> see things actually going over</font>

91
00:04:01,440 --> 00:04:10,019
the wire so the origins of<font color="#CCCCCC"> net convent</font>

92
00:04:06,870 --> 00:04:12,000
yang<font color="#E5E5E5"> okay so actually</font><font color="#CCCCCC"> the kind</font><font color="#E5E5E5"> of saga</font>

93
00:04:10,019 --> 00:04:14,160
or the story<font color="#E5E5E5"> about this is that there</font>

94
00:04:12,000 --> 00:04:15,870
was a race of hands<font color="#E5E5E5"> or let's go back to</font>

95
00:04:14,160 --> 00:04:18,089
the IETF meetings<font color="#CCCCCC"> what used to happen</font>

96
00:04:15,870 --> 00:04:20,039
during<font color="#E5E5E5"> the ITF meetings was that a group</font>

97
00:04:18,089 --> 00:04:22,830
of service providers would meet on the

98
00:04:20,039 --> 00:04:25,289
Sunday<font color="#E5E5E5"> before the</font><font color="#CCCCCC"> IETF and discuss how</font>

99
00:04:22,830 --> 00:04:28,200
<font color="#CCCCCC">to keep the</font><font color="#E5E5E5"> internet alive until the</font>

100
00:04:25,289 --> 00:04:29,969
next ITF which was a good meeting<font color="#E5E5E5"> to go</font>

101
00:04:28,200 --> 00:04:31,440
<font color="#E5E5E5">to if you wanted to understand what was</font>

102
00:04:29,970 --> 00:04:33,240
<font color="#CCCCCC">actually going</font><font color="#E5E5E5"> on in the operational</font>

103
00:04:31,440 --> 00:04:36,150
<font color="#CCCCCC">sides of the</font><font color="#E5E5E5"> Internet</font>

104
00:04:33,240 --> 00:04:38,400
at that<font color="#E5E5E5"> at the other point in the very</font>

105
00:04:36,150 --> 00:04:41,219
early 2000s late 90s there<font color="#CCCCCC"> was a race of</font>

106
00:04:38,400 --> 00:04:44,370
hands<font color="#CCCCCC"> around whether people were using</font>

107
00:04:41,220 --> 00:04:46,830
SNMP for configuration<font color="#E5E5E5"> or no and when</font>

108
00:04:44,370 --> 00:04:50,039
the ITF<font color="#CCCCCC"> or the iesg realized that there</font>

109
00:04:46,830 --> 00:04:53,120
were no usages<font color="#E5E5E5"> of there were significant</font>

110
00:04:50,039 --> 00:04:55,500
uses of SNMP for<font color="#E5E5E5"> configuration purposes</font>

111
00:04:53,120 --> 00:04:58,259
<font color="#E5E5E5">they realized that there was a gap right</font>

112
00:04:55,500 --> 00:05:00,300
<font color="#CCCCCC">there were no standardized protocols for</font>

113
00:04:58,259 --> 00:05:04,110
programmatically changing<font color="#CCCCCC"> configuration</font>

114
00:05:00,300 --> 00:05:06,690
<font color="#E5E5E5">as an MP had the features for it but no</font>

115
00:05:04,110 --> 00:05:08,819
one used it so there were several

116
00:05:06,690 --> 00:05:10,349
meetings<font color="#CCCCCC"> actually the ITF</font><font color="#E5E5E5"> created a bit</font>

117
00:05:08,819 --> 00:05:13,319
of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> roadshow</font><font color="#E5E5E5"> and went to several</font>

118
00:05:10,349 --> 00:05:16,830
meetings including<font color="#CCCCCC"> nano</font><font color="#E5E5E5"> 22 right</font><font color="#CCCCCC"> 40 and</font>

119
00:05:13,319 --> 00:05:18,990
a couple<font color="#E5E5E5"> of others like Lisa's to talk</font>

120
00:05:16,830 --> 00:05:21,659
to service<font color="#E5E5E5"> writers and people in the</font>

121
00:05:18,990 --> 00:05:24,240
know<font color="#CCCCCC"> about the requirements for such a</font>

122
00:05:21,659 --> 00:05:26,580
protocol<font color="#E5E5E5"> for</font><font color="#CCCCCC"> what could become a useful</font>

123
00:05:24,240 --> 00:05:28,650
protocol for programmatically changing

124
00:05:26,580 --> 00:05:31,560
the configuration<font color="#CCCCCC"> of</font><font color="#E5E5E5"> network elements</font><font color="#CCCCCC"> in</font>

125
00:05:28,650 --> 00:05:36,090
distributed networks<font color="#E5E5E5"> and they then held</font>

126
00:05:31,560 --> 00:05:39,300
actually a workshop<font color="#E5E5E5"> during</font><font color="#CCCCCC"> the middle of</font>

127
00:05:36,090 --> 00:05:41,568
2002 and<font color="#CCCCCC"> this workshop actually produced</font>

128
00:05:39,300 --> 00:05:45,150
a very very useful document

129
00:05:41,569 --> 00:05:46,770
<font color="#CCCCCC">it's RFC 35:35 and we're</font><font color="#E5E5E5"> going to talk</font>

130
00:05:45,150 --> 00:05:49,380
about<font color="#E5E5E5"> the contents of</font><font color="#CCCCCC"> that but I would</font>

131
00:05:46,770 --> 00:05:51,960
strongly urge you<font color="#E5E5E5"> to read that it is a</font>

132
00:05:49,380 --> 00:05:56,550
horrible<font color="#E5E5E5"> reminder that the world looks</font>

133
00:05:51,960 --> 00:05:58,020
today<font color="#E5E5E5"> like it did in 2002 and it in very</font>

134
00:05:56,550 --> 00:06:00,300
<font color="#E5E5E5">much in detail points out the</font>

135
00:05:58,020 --> 00:06:01,799
<font color="#E5E5E5">shortcomings of</font><font color="#CCCCCC"> the operational</font>

136
00:06:00,300 --> 00:06:04,259
processes that we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> in place largely</font>

137
00:06:01,800 --> 00:06:06,029
<font color="#E5E5E5">and the technology that we have for its</font>

138
00:06:04,259 --> 00:06:09,180
underpinning<font color="#E5E5E5"> it's still very very</font>

139
00:06:06,029 --> 00:06:14,130
relevant<font color="#CCCCCC"> so it's it's it's</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> good</font>

140
00:06:09,180 --> 00:06:17,810
read here are my personal favorites from

141
00:06:14,130 --> 00:06:21,469
<font color="#CCCCCC">35:35</font><font color="#E5E5E5"> let's use that as a starting point</font>

142
00:06:17,810 --> 00:06:23,639
<font color="#E5E5E5">these may sound like very basic</font>

143
00:06:21,469 --> 00:06:25,860
assumptions especially<font color="#CCCCCC"> for someone with</font>

144
00:06:23,639 --> 00:06:28,259
a computer<font color="#E5E5E5"> science background</font><font color="#CCCCCC"> but they</font>

145
00:06:25,860 --> 00:06:30,090
haven't<font color="#E5E5E5"> really held true until the</font>

146
00:06:28,259 --> 00:06:32,639
combination of<font color="#CCCCCC"> NAT convent yang that are</font>

147
00:06:30,090 --> 00:06:35,039
now<font color="#E5E5E5"> becoming something that you can find</font>

148
00:06:32,639 --> 00:06:37,770
in actual running<font color="#E5E5E5"> code came to fruition</font>

149
00:06:35,039 --> 00:06:39,930
<font color="#CCCCCC">and the first one is to make a clear</font>

150
00:06:37,770 --> 00:06:42,719
distinction between what's configuration

151
00:06:39,930 --> 00:06:46,050
data and data that<font color="#CCCCCC"> describes operational</font>

152
00:06:42,719 --> 00:06:46,380
<font color="#CCCCCC">state</font><font color="#E5E5E5"> and statistics right if you</font><font color="#CCCCCC"> think</font>

153
00:06:46,050 --> 00:06:48,840
<font color="#CCCCCC">about</font>

154
00:06:46,380 --> 00:06:50,969
previous protocols like SNMP and<font color="#E5E5E5"> others</font>

155
00:06:48,840 --> 00:06:53,520
<font color="#E5E5E5">didn't really make a big difference</font>

156
00:06:50,970 --> 00:06:56,130
between them so for<font color="#E5E5E5"> example if you</font>

157
00:06:53,520 --> 00:06:59,340
wanted to back something<font color="#E5E5E5"> up and put it</font>

158
00:06:56,130 --> 00:07:01,830
aside and<font color="#E5E5E5"> then roll it back you would</font>

159
00:06:59,340 --> 00:07:03,630
actually have a lot of<font color="#E5E5E5"> data in that</font>

160
00:07:01,830 --> 00:07:05,190
<font color="#CCCCCC">backup that didn't actually cover</font>

161
00:07:03,630 --> 00:07:09,860
<font color="#E5E5E5">configuration that was actually</font>

162
00:07:05,190 --> 00:07:09,860
statistics or immutable operational data

163
00:07:10,490 --> 00:07:15,120
we would like to<font color="#E5E5E5"> think</font><font color="#CCCCCC"> about the</font>

164
00:07:13,050 --> 00:07:16,710
<font color="#CCCCCC">configuration of the network and you'll</font>

165
00:07:15,120 --> 00:07:19,320
find that's<font color="#E5E5E5"> why we call</font><font color="#CCCCCC"> it net</font><font color="#E5E5E5"> comp</font>

166
00:07:16,710 --> 00:07:22,140
rather than simplistic device by device

167
00:07:19,320 --> 00:07:24,210
configuration we still have some ways<font color="#CCCCCC"> to</font>

168
00:07:22,140 --> 00:07:26,219
<font color="#E5E5E5">go here</font><font color="#CCCCCC"> but we're</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to talk about</font>

169
00:07:24,210 --> 00:07:29,190
<font color="#E5E5E5">today is the underpinnings of such an</font>

170
00:07:26,220 --> 00:07:32,400
<font color="#E5E5E5">effort</font><font color="#CCCCCC"> so instead of thinking it as</font><font color="#E5E5E5"> a</font>

171
00:07:29,190 --> 00:07:33,900
set of<font color="#E5E5E5"> discrete data sets that are not</font>

172
00:07:32,400 --> 00:07:36,710
<font color="#CCCCCC">interconnected we want to</font><font color="#E5E5E5"> think about</font>

173
00:07:33,900 --> 00:07:40,890
how to provision<font color="#E5E5E5"> or configure</font>

174
00:07:36,710 --> 00:07:42,060
<font color="#E5E5E5">distributed networks transactions which</font>

175
00:07:40,890 --> 00:07:44,849
has been around<font color="#E5E5E5"> in computer science</font>

176
00:07:42,060 --> 00:07:47,370
since I'd say<font color="#CCCCCC"> early 70s or something</font>

177
00:07:44,850 --> 00:07:49,830
<font color="#CCCCCC">like that</font><font color="#E5E5E5"> is such an obvious choice</font><font color="#CCCCCC"> for</font>

178
00:07:47,370 --> 00:07:51,750
distributed domains that it's hard<font color="#E5E5E5"> to</font>

179
00:07:49,830 --> 00:07:53,969
<font color="#E5E5E5">realize or understand why we haven't had</font>

180
00:07:51,750 --> 00:07:55,830
it for<font color="#CCCCCC"> networks before</font><font color="#E5E5E5"> and of course</font>

181
00:07:53,970 --> 00:07:58,200
transactions in the<font color="#CCCCCC"> distributed domain</font>

182
00:07:55,830 --> 00:08:00,800
that we call networks<font color="#E5E5E5"> has everything to</font>

183
00:07:58,200 --> 00:08:02,789
do with<font color="#E5E5E5"> promising the end user</font><font color="#CCCCCC"> or the</font>

184
00:08:00,800 --> 00:08:05,280
provisioning system<font color="#E5E5E5"> that either the</font>

185
00:08:02,790 --> 00:08:07,410
entire change that happens over all the

186
00:08:05,280 --> 00:08:10,739
network elements or we're back to where

187
00:08:07,410 --> 00:08:13,050
<font color="#E5E5E5">we</font><font color="#CCCCCC"> were such a fundamental feature could</font>

188
00:08:10,740 --> 00:08:16,170
also not<font color="#CCCCCC"> be found</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> traditional or</font>

189
00:08:13,050 --> 00:08:17,730
historical configuration<font color="#E5E5E5"> protocols or</font>

190
00:08:16,170 --> 00:08:20,760
configuration features that we had

191
00:08:17,730 --> 00:08:22,800
implemented<font color="#E5E5E5"> in these</font><font color="#CCCCCC"> systems and as a</font>

192
00:08:20,760 --> 00:08:24,990
kind of corollary to the distinction

193
00:08:22,800 --> 00:08:26,940
between configuration and<font color="#E5E5E5"> data sets</font><font color="#CCCCCC"> a</font>

194
00:08:24,990 --> 00:08:28,920
<font color="#E5E5E5">primary mechanism to backup</font>

195
00:08:26,940 --> 00:08:30,680
<font color="#CCCCCC">configuration and to be able</font><font color="#E5E5E5"> to roll</font>

196
00:08:28,920 --> 00:08:34,620
that<font color="#CCCCCC"> back sounds like a very compelling</font>

197
00:08:30,680 --> 00:08:38,099
<font color="#E5E5E5">thing to have for large networks and</font>

198
00:08:34,620 --> 00:08:40,320
database schema a declarative way<font color="#E5E5E5"> of</font>

199
00:08:38,099 --> 00:08:43,550
describing<font color="#CCCCCC"> what the network elements can</font>

200
00:08:40,320 --> 00:08:46,950
or can't do in terms<font color="#E5E5E5"> of configuration</font>

201
00:08:43,549 --> 00:08:48,770
<font color="#E5E5E5">statistics and operational parameters so</font>

202
00:08:46,950 --> 00:08:50,280
<font color="#E5E5E5">that we don't have to have</font>

203
00:08:48,770 --> 00:08:53,340
reverse-engineered

204
00:08:50,280 --> 00:08:56,459
and perhaps<font color="#E5E5E5"> even offline libraries of</font>

205
00:08:53,340 --> 00:08:59,280
models like we did with<font color="#E5E5E5"> SNMP or SNMP</font>

206
00:08:56,460 --> 00:09:00,120
<font color="#CCCCCC">mids in</font><font color="#E5E5E5"> the SMI language would also be</font>

207
00:08:59,280 --> 00:09:02,249
good

208
00:09:00,120 --> 00:09:05,459
so again these<font color="#CCCCCC"> are my favorites from</font>

209
00:09:02,249 --> 00:09:07,019
<font color="#CCCCCC">35:35 that reflects the conversations</font>

210
00:09:05,459 --> 00:09:09,300
<font color="#E5E5E5">that were had with service providers</font><font color="#CCCCCC"> at</font>

211
00:09:07,019 --> 00:09:14,939
<font color="#CCCCCC">the time and again a reminder</font><font color="#E5E5E5"> this was</font>

212
00:09:09,300 --> 00:09:16,199
12<font color="#E5E5E5"> years</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> so what we want to the way</font>

213
00:09:14,939 --> 00:09:18,748
we want to<font color="#E5E5E5"> think about this is that</font>

214
00:09:16,199 --> 00:09:21,779
<font color="#CCCCCC">napkin</font><font color="#E5E5E5"> for yang again the topic of this</font>

215
00:09:18,749 --> 00:09:24,350
first presentation<font color="#E5E5E5"> is what came out of</font>

216
00:09:21,779 --> 00:09:27,389
<font color="#E5E5E5">let's say three</font><font color="#CCCCCC"> pressured art directions</font>

217
00:09:24,350 --> 00:09:29,490
<font color="#CCCCCC">of course</font><font color="#E5E5E5"> people had a lot of practice</font>

218
00:09:27,389 --> 00:09:31,410
or a lot of<font color="#E5E5E5"> experience with</font><font color="#CCCCCC"> using SI</font>

219
00:09:29,490 --> 00:09:33,899
<font color="#CCCCCC">allies so the structure and semantics of</font>

220
00:09:31,410 --> 00:09:36,120
<font color="#E5E5E5">sea</font><font color="#CCCCCC"> lice is forever ingrained in our</font>

221
00:09:33,899 --> 00:09:38,249
operations team so it is something<font color="#E5E5E5"> that</font>

222
00:09:36,120 --> 00:09:40,499
<font color="#E5E5E5">we</font><font color="#CCCCCC"> want to learn from again there's a</font>

223
00:09:38,249 --> 00:09:43,019
lot<font color="#E5E5E5"> of operator requirements at the time</font>

224
00:09:40,499 --> 00:09:46,290
<font color="#E5E5E5">that were very well described and</font>

225
00:09:43,019 --> 00:09:48,240
covered<font color="#E5E5E5"> and we actually had</font><font color="#CCCCCC"> quite</font><font color="#E5E5E5"> a bit</font>

226
00:09:46,290 --> 00:09:50,969
<font color="#E5E5E5">of people</font><font color="#CCCCCC"> that had a lot of experience</font>

227
00:09:48,240 --> 00:09:52,499
with SNMP<font color="#E5E5E5"> for those of you who remember</font>

228
00:09:50,970 --> 00:09:55,769
they used<font color="#CCCCCC"> to actually be a kind of a</font>

229
00:09:52,499 --> 00:09:59,550
restart project<font color="#E5E5E5"> for for SNMP or for SMI</font>

230
00:09:55,769 --> 00:10:01,170
called<font color="#E5E5E5"> SMI ng so there was a lot of good</font>

231
00:09:59,550 --> 00:10:03,508
experience<font color="#CCCCCC"> that had gone</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> that</font>

232
00:10:01,170 --> 00:10:05,579
project<font color="#CCCCCC"> that we could leverage</font><font color="#E5E5E5"> and bring</font>

233
00:10:03,509 --> 00:10:08,069
<font color="#CCCCCC">into the net conf and yang efforts in</font>

234
00:10:05,579 --> 00:10:10,138
the<font color="#E5E5E5"> ITF so these three</font><font color="#CCCCCC"> things operator</font>

235
00:10:08,069 --> 00:10:11,819
requirements CLI best practices in the

236
00:10:10,139 --> 00:10:14,189
experience from SNMP was largely the

237
00:10:11,819 --> 00:10:18,899
<font color="#CCCCCC">base of which we started</font><font color="#E5E5E5"> building napkin</font>

238
00:10:14,189 --> 00:10:20,730
from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> angle so first of all net the</font>

239
00:10:18,899 --> 00:10:22,679
<font color="#CCCCCC">Netcom protocol</font><font color="#E5E5E5"> so what we're talking</font>

240
00:10:20,730 --> 00:10:24,649
<font color="#E5E5E5">about here is a protocol</font><font color="#CCCCCC"> that is</font>

241
00:10:22,679 --> 00:10:27,929
specifically<font color="#E5E5E5"> designed to manipulate</font>

242
00:10:24,649 --> 00:10:29,009
<font color="#E5E5E5">configuration so it's an ITF protocol it</font>

243
00:10:27,929 --> 00:10:31,379
has the distinction between

244
00:10:29,009 --> 00:10:33,839
configuration and state<font color="#E5E5E5"> it actually has</font>

245
00:10:31,379 --> 00:10:36,329
<font color="#CCCCCC">this concept of</font><font color="#E5E5E5"> multiple configuration</font>

246
00:10:33,839 --> 00:10:39,089
data stores<font color="#CCCCCC"> we'll get to that</font><font color="#E5E5E5"> in much</font>

247
00:10:36,329 --> 00:10:40,679
more detail<font color="#CCCCCC"> it can validate</font>

248
00:10:39,089 --> 00:10:42,420
configuration changes you<font color="#E5E5E5"> can actually</font>

249
00:10:40,679 --> 00:10:43,709
ask the distributed elements<font color="#E5E5E5"> to do that</font>

250
00:10:42,420 --> 00:10:45,498
for you

251
00:10:43,709 --> 00:10:47,790
it actually has<font color="#E5E5E5"> as a primary feature</font>

252
00:10:45,499 --> 00:10:50,069
<font color="#E5E5E5">configuration state</font><font color="#CCCCCC"> transactions so that</font>

253
00:10:47,790 --> 00:10:52,469
two-phase commit<font color="#CCCCCC"> based transactions that</font>

254
00:10:50,069 --> 00:10:53,990
<font color="#E5E5E5">we want are all based on primary</font>

255
00:10:52,470 --> 00:10:56,519
features in<font color="#CCCCCC"> that conf</font>

256
00:10:53,990 --> 00:10:58,829
<font color="#CCCCCC">it</font><font color="#E5E5E5"> actually does really well in</font>

257
00:10:56,519 --> 00:11:02,009
selective data<font color="#E5E5E5"> retrieval so you can use</font>

258
00:10:58,829 --> 00:11:05,569
either a simplistic filtering based on

259
00:11:02,009 --> 00:11:08,519
paths or<font color="#E5E5E5"> XPath to retreat data here</font>

260
00:11:05,569 --> 00:11:10,469
<font color="#CCCCCC">there's actually event notifications not</font>

261
00:11:08,519 --> 00:11:12,120
to be confused with SNMP<font color="#E5E5E5"> traps</font>

262
00:11:10,470 --> 00:11:13,529
it's more of a selective and filter

263
00:11:12,120 --> 00:11:16,709
based retrieval

264
00:11:13,529 --> 00:11:18,509
of a<font color="#CCCCCC"> pub/sub approach if you like and</font>

265
00:11:16,709 --> 00:11:20,550
it's got an extensible<font color="#E5E5E5"> remote</font><font color="#CCCCCC"> procedure</font>

266
00:11:18,509 --> 00:11:22,529
called mechanism<font color="#CCCCCC"> there is</font><font color="#E5E5E5"> a number of</font>

267
00:11:20,550 --> 00:11:24,719
things<font color="#CCCCCC"> that we do in operations</font><font color="#E5E5E5"> that is</font>

268
00:11:22,529 --> 00:11:25,980
not all about<font color="#E5E5E5"> reading data or</font>

269
00:11:24,720 --> 00:11:28,560
configuring<font color="#E5E5E5"> things but actually</font>

270
00:11:25,980 --> 00:11:31,379
<font color="#E5E5E5">performing or executing stuff with side</font>

271
00:11:28,560 --> 00:11:33,540
effects<font color="#E5E5E5"> like rebooting or pinging trace</font>

272
00:11:31,379 --> 00:11:36,180
routing so that's all<font color="#E5E5E5"> covered</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> the</font>

273
00:11:33,540 --> 00:11:37,769
protocol<font color="#E5E5E5"> and the reason why we</font><font color="#CCCCCC"> think you</font>

274
00:11:36,180 --> 00:11:42,029
<font color="#CCCCCC">should care of course is that</font><font color="#E5E5E5"> this is</font>

275
00:11:37,769 --> 00:11:44,459
the first real good and<font color="#E5E5E5"> well designed</font>

276
00:11:42,029 --> 00:11:46,529
protocol<font color="#E5E5E5"> that we've seen coming out of</font>

277
00:11:44,459 --> 00:11:50,219
the<font color="#CCCCCC"> internet community that actually</font>

278
00:11:46,529 --> 00:11:52,259
<font color="#CCCCCC">cuts to the heart of all these</font><font color="#E5E5E5"> features</font>

279
00:11:50,220 --> 00:11:55,709
or all these requests<font color="#E5E5E5"> that we have in RC</font>

280
00:11:52,259 --> 00:11:58,019
<font color="#CCCCCC">35:35</font><font color="#E5E5E5"> and it can definitely</font><font color="#CCCCCC"> provide the</font>

281
00:11:55,709 --> 00:12:00,329
fundamentals<font color="#E5E5E5"> for a very nice and useful</font>

282
00:11:58,019 --> 00:12:02,129
<font color="#CCCCCC">and</font><font color="#E5E5E5"> robust programming environment right</font>

283
00:12:00,329 --> 00:12:03,660
<font color="#E5E5E5">because that's where we're going we're</font>

284
00:12:02,129 --> 00:12:08,399
<font color="#E5E5E5">gonna have software do these things and</font>

285
00:12:03,660 --> 00:12:10,259
not humans so the<font color="#E5E5E5"> yang language of</font>

286
00:12:08,399 --> 00:12:11,970
course<font color="#E5E5E5"> when we had the Netcom protocol</font>

287
00:12:10,259 --> 00:12:14,040
we realized that<font color="#E5E5E5"> we needed</font><font color="#CCCCCC"> a way</font><font color="#E5E5E5"> of</font>

288
00:12:11,970 --> 00:12:16,199
expressing the syntax<font color="#E5E5E5"> structure and</font>

289
00:12:14,040 --> 00:12:18,870
semantics of the<font color="#CCCCCC"> datasets that we</font><font color="#E5E5E5"> could</font>

290
00:12:16,199 --> 00:12:21,839
manipulate<font color="#E5E5E5"> using that conf so we went</font>

291
00:12:18,870 --> 00:12:24,930
hard<font color="#CCCCCC"> to work on that and</font><font color="#E5E5E5"> the yang</font><font color="#CCCCCC"> RFC</font>

292
00:12:21,839 --> 00:12:27,660
actually came to fruition in 2006 the

293
00:12:24,930 --> 00:12:29,279
<font color="#E5E5E5">first criteria for the yang language</font>

294
00:12:27,660 --> 00:12:31,079
well the first criteria was to<font color="#E5E5E5"> prove</font>

295
00:12:29,279 --> 00:12:33,300
<font color="#CCCCCC">that we couldn't</font><font color="#E5E5E5"> use any of the current</font>

296
00:12:31,079 --> 00:12:36,120
<font color="#E5E5E5">at that point current schema languages</font>

297
00:12:33,300 --> 00:12:38,128
like<font color="#E5E5E5"> XML schema and others because they</font>

298
00:12:36,120 --> 00:12:40,079
weren't really<font color="#E5E5E5"> well designed</font><font color="#CCCCCC"> for this</font>

299
00:12:38,129 --> 00:12:43,829
particular domain<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that took quite a</font>

300
00:12:40,079 --> 00:12:45,779
<font color="#CCCCCC">while</font><font color="#E5E5E5"> but the the main criteria for</font><font color="#CCCCCC"> Yang</font>

301
00:12:43,829 --> 00:12:48,930
<font color="#E5E5E5">was actually to be human</font><font color="#CCCCCC"> readable and</font>

302
00:12:45,779 --> 00:12:51,120
easy to learn so it's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> language where</font>

303
00:12:48,930 --> 00:12:53,189
you're not<font color="#E5E5E5"> supposed to be required to</font>

304
00:12:51,120 --> 00:12:56,990
<font color="#E5E5E5">have an IDE</font><font color="#CCCCCC"> to have some sort of visual</font>

305
00:12:53,189 --> 00:12:59,730
support to<font color="#CCCCCC"> edit or manipulate it</font><font color="#E5E5E5"> so</font>

306
00:12:56,990 --> 00:13:01,769
<font color="#CCCCCC">compared to</font><font color="#E5E5E5"> things like SMI and for that</font>

307
00:12:59,730 --> 00:13:03,899
matter XML schema<font color="#E5E5E5"> you're supposed to be</font>

308
00:13:01,769 --> 00:13:06,629
able<font color="#E5E5E5"> to do this</font><font color="#CCCCCC"> right in</font><font color="#E5E5E5"> your in</font><font color="#CCCCCC"> your</font>

309
00:13:03,899 --> 00:13:09,000
preferred text editor one that what may

310
00:13:06,629 --> 00:13:11,850
<font color="#E5E5E5">vary you're not supposed to be required</font>

311
00:13:09,000 --> 00:13:14,639
<font color="#CCCCCC">to use anything with visual support</font><font color="#E5E5E5"> it's</font>

312
00:13:11,850 --> 00:13:19,439
a hierarchical configuration data

313
00:13:14,639 --> 00:13:21,029
modeling language there<font color="#CCCCCC"> I invariably get</font>

314
00:13:19,439 --> 00:13:24,360
into discussions with<font color="#CCCCCC"> people from</font><font color="#E5E5E5"> the</font>

315
00:13:21,029 --> 00:13:26,879
object-oriented domain now the reason we

316
00:13:24,360 --> 00:13:27,450
went for hierarchical configuration data

317
00:13:26,879 --> 00:13:29,430
is that

318
00:13:27,450 --> 00:13:32,130
that is probably<font color="#CCCCCC"> the</font><font color="#E5E5E5"> best way of</font>

319
00:13:29,430 --> 00:13:33,750
<font color="#CCCCCC">reflecting the way routers switches and</font>

320
00:13:32,130 --> 00:13:36,120
different types of network<font color="#E5E5E5"> elements</font>

321
00:13:33,750 --> 00:13:39,270
<font color="#CCCCCC">today</font><font color="#E5E5E5"> store their configuration data</font>

322
00:13:36,120 --> 00:13:41,720
anyway right<font color="#E5E5E5"> I've yet to find a router</font>

323
00:13:39,270 --> 00:13:44,040
switch<font color="#E5E5E5"> or a data plane that actually has</font>

324
00:13:41,720 --> 00:13:46,590
<font color="#E5E5E5">object-oriented representation of the</font>

325
00:13:44,040 --> 00:13:47,910
configuration<font color="#E5E5E5"> state right so while we</font>

326
00:13:46,590 --> 00:13:50,790
could<font color="#E5E5E5"> have gone there</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> was a</font>

327
00:13:47,910 --> 00:13:52,709
pragmatic<font color="#E5E5E5"> approach</font><font color="#CCCCCC"> to the way the world</font>

328
00:13:50,790 --> 00:13:56,240
<font color="#E5E5E5">looks like we will forever of course</font>

329
00:13:52,710 --> 00:13:59,490
battle<font color="#E5E5E5"> people wanting</font><font color="#CCCCCC"> to introduce</font>

330
00:13:56,240 --> 00:14:01,680
<font color="#E5E5E5">object orientation here but as long as</font>

331
00:13:59,490 --> 00:14:03,000
<font color="#E5E5E5">this works for us and it does this is</font>

332
00:14:01,680 --> 00:14:05,300
probably the way we're<font color="#E5E5E5"> gonna stay</font><font color="#CCCCCC"> here</font>

333
00:14:03,000 --> 00:14:08,160
<font color="#E5E5E5">that doesn't mean that we can't have</font>

334
00:14:05,300 --> 00:14:10,410
higher abstraction languages on top of

335
00:14:08,160 --> 00:14:12,390
<font color="#E5E5E5">yang that may leverage object</font>

336
00:14:10,410 --> 00:14:13,850
orientation<font color="#E5E5E5"> or it doesn't matter it</font>

337
00:14:12,390 --> 00:14:16,560
<font color="#E5E5E5">doesn't mean</font><font color="#CCCCCC"> that we can't take</font>

338
00:14:13,850 --> 00:14:19,260
<font color="#E5E5E5">object-oriented models and translate</font>

339
00:14:16,560 --> 00:14:23,939
into<font color="#E5E5E5"> yang but it does mean that yang is</font>

340
00:14:19,260 --> 00:14:25,620
a<font color="#E5E5E5"> tree structured language extensibility</font>

341
00:14:23,940 --> 00:14:28,320
through augmentation as you guys can

342
00:14:25,620 --> 00:14:30,330
<font color="#E5E5E5">imagine there was</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> interesting</font>

343
00:14:28,320 --> 00:14:32,820
conversation around<font color="#E5E5E5"> this when some of</font>

344
00:14:30,330 --> 00:14:35,700
the<font color="#E5E5E5"> incumbent vendors realized that this</font>

345
00:14:32,820 --> 00:14:38,670
could<font color="#CCCCCC"> eventually lead to standardized</font>

346
00:14:35,700 --> 00:14:41,100
models for configuration<font color="#CCCCCC"> of basic router</font>

347
00:14:38,670 --> 00:14:43,439
and switch<font color="#E5E5E5"> configuration such as</font>

348
00:14:41,100 --> 00:14:46,380
interface configuration IP configuration

349
00:14:43,440 --> 00:14:49,050
<font color="#CCCCCC">rig OSPF</font><font color="#E5E5E5"> bgp MPLS and all that stuff</font>

350
00:14:46,380 --> 00:14:50,790
right<font color="#E5E5E5"> and of course a requirement from</font>

351
00:14:49,050 --> 00:14:53,459
these incumbent vendors was the<font color="#CCCCCC"> ability</font>

352
00:14:50,790 --> 00:14:57,270
to<font color="#E5E5E5"> be able to extend all these data</font>

353
00:14:53,460 --> 00:15:00,060
models with their own particularly more

354
00:14:57,270 --> 00:15:01,770
important extensions that makes things<font color="#E5E5E5"> a</font>

355
00:15:00,060 --> 00:15:04,530
little bit more valuable<font color="#CCCCCC"> so we have a</font>

356
00:15:01,770 --> 00:15:06,750
very strong augmentation<font color="#E5E5E5"> system so you</font>

357
00:15:04,530 --> 00:15:09,420
can<font color="#CCCCCC"> actually place definitely place</font>

358
00:15:06,750 --> 00:15:11,550
extensions<font color="#E5E5E5"> very flexibly across the tree</font>

359
00:15:09,420 --> 00:15:14,250
<font color="#E5E5E5">we'll go into much</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> detail over</font><font color="#CCCCCC"> this</font>

360
00:15:11,550 --> 00:15:16,020
presentation formal constraints for

361
00:15:14,250 --> 00:15:18,180
configuration validation it would be

362
00:15:16,020 --> 00:15:21,180
cool if a<font color="#E5E5E5"> language like this will allow</font>

363
00:15:18,180 --> 00:15:22,920
for<font color="#E5E5E5"> offline validation to the extent</font>

364
00:15:21,180 --> 00:15:24,839
that we<font color="#E5E5E5"> can allow</font><font color="#CCCCCC"> it to</font><font color="#E5E5E5"> without</font>

365
00:15:22,920 --> 00:15:27,900
bothering<font color="#E5E5E5"> the actual network elements</font>

366
00:15:24,840 --> 00:15:30,420
themselves<font color="#CCCCCC"> so we could be sure</font><font color="#E5E5E5"> of or</font>

367
00:15:27,900 --> 00:15:31,890
some sort of sure of that<font color="#CCCCCC"> the</font>

368
00:15:30,420 --> 00:15:34,170
<font color="#CCCCCC">configuration that we're sending or</font>

369
00:15:31,890 --> 00:15:36,090
suggesting to the<font color="#CCCCCC"> box</font><font color="#E5E5E5"> is reasonably pre</font>

370
00:15:34,170 --> 00:15:39,660
validated<font color="#E5E5E5"> there's always going to be</font>

371
00:15:36,090 --> 00:15:41,220
<font color="#E5E5E5">local context specific constraints to</font>

372
00:15:39,660 --> 00:15:43,379
the router<font color="#CCCCCC"> or the switch that we can</font>

373
00:15:41,220 --> 00:15:45,810
never capture semantically in a language

374
00:15:43,379 --> 00:15:47,459
<font color="#E5E5E5">like this but much</font><font color="#CCCCCC"> of the type systems</font>

375
00:15:45,810 --> 00:15:50,399
and the<font color="#E5E5E5"> structures and the relations we</font>

376
00:15:47,459 --> 00:15:53,128
can<font color="#E5E5E5"> so again this would</font><font color="#CCCCCC"> actually relieve</font>

377
00:15:50,399 --> 00:15:55,889
the<font color="#CCCCCC"> burden of many of these things</font><font color="#E5E5E5"> from</font>

378
00:15:53,129 --> 00:15:57,899
<font color="#CCCCCC">the devices</font><font color="#E5E5E5"> themselves and of course we</font>

379
00:15:55,889 --> 00:15:59,160
need data modularity through modules and

380
00:15:57,899 --> 00:16:01,110
sub-modules<font color="#CCCCCC"> people are going</font><font color="#E5E5E5"> to go to</font>

381
00:15:59,160 --> 00:16:04,139
work on this and of<font color="#E5E5E5"> course things like</font>

382
00:16:01,110 --> 00:16:05,819
types and groups of sets of<font color="#E5E5E5"> data it</font>

383
00:16:04,139 --> 00:16:07,740
would<font color="#E5E5E5"> be great if we could reuse that</font>

384
00:16:05,819 --> 00:16:10,529
<font color="#E5E5E5">we'll talk</font><font color="#CCCCCC"> about that also in more</font>

385
00:16:07,740 --> 00:16:12,569
detail versioning rules<font color="#E5E5E5"> it's something</font>

386
00:16:10,529 --> 00:16:15,870
that have been<font color="#E5E5E5"> biting us</font><font color="#CCCCCC"> forever with</font>

387
00:16:12,569 --> 00:16:17,519
SNMP<font color="#E5E5E5"> SNMP or the SMI language never had</font>

388
00:16:15,870 --> 00:16:20,060
consistent and<font color="#CCCCCC"> well understood</font>

389
00:16:17,519 --> 00:16:22,019
versioning rules<font color="#E5E5E5"> so it was always</font>

390
00:16:20,060 --> 00:16:24,300
<font color="#E5E5E5">impossible to understand whether there</font>

391
00:16:22,019 --> 00:16:26,060
maybe you<font color="#E5E5E5"> were looking at was actually</font>

392
00:16:24,300 --> 00:16:28,829
what was<font color="#CCCCCC"> running in a particular box</font>

393
00:16:26,060 --> 00:16:30,689
<font color="#E5E5E5">yang took a good stab at that and we</font>

394
00:16:28,829 --> 00:16:32,489
have very strict versioning rules and

395
00:16:30,689 --> 00:16:34,879
<font color="#E5E5E5">also actually rules for upgrading or</font>

396
00:16:32,490 --> 00:16:37,620
downgrading or shifting<font color="#CCCCCC"> between versions</font>

397
00:16:34,879 --> 00:16:40,019
and the reason why we should<font color="#E5E5E5"> care about</font>

398
00:16:37,620 --> 00:16:41,970
<font color="#E5E5E5">this of course is that the whole</font><font color="#CCCCCC"> idea of</font>

399
00:16:40,019 --> 00:16:44,699
having<font color="#E5E5E5"> a full and formal contract</font>

400
00:16:41,970 --> 00:16:46,079
language<font color="#E5E5E5"> from the device to whatever</font>

401
00:16:44,699 --> 00:16:48,990
piece of software that<font color="#E5E5E5"> wants to</font>

402
00:16:46,079 --> 00:16:52,579
<font color="#E5E5E5">manipulate its state is a pretty pretty</font>

403
00:16:48,990 --> 00:16:55,769
powerful concept<font color="#E5E5E5"> it allows for reduced</font>

404
00:16:52,579 --> 00:16:57,649
integration<font color="#CCCCCC"> costs it allows for a lot of</font>

405
00:16:55,769 --> 00:16:59,730
cool things<font color="#CCCCCC"> in the software domain and</font>

406
00:16:57,649 --> 00:17:01,740
since it's also something that you<font color="#CCCCCC"> can</font>

407
00:16:59,730 --> 00:17:04,260
actually<font color="#E5E5E5"> query</font><font color="#CCCCCC"> the network elements for</font>

408
00:17:01,740 --> 00:17:06,449
you can be very<font color="#E5E5E5"> reactive</font><font color="#CCCCCC"> and very agile</font>

409
00:17:04,260 --> 00:17:09,230
<font color="#E5E5E5">around these things so it's a very very</font>

410
00:17:06,449 --> 00:17:13,380
promising technology<font color="#CCCCCC"> I</font><font color="#E5E5E5"> would say and</font>

411
00:17:09,230 --> 00:17:15,089
right now I don't<font color="#E5E5E5"> see many competing</font>

412
00:17:13,380 --> 00:17:17,039
suggestions and there's a lot of

413
00:17:15,089 --> 00:17:20,069
traction<font color="#CCCCCC"> around this</font><font color="#E5E5E5"> so I think</font><font color="#CCCCCC"> yang</font>

414
00:17:17,039 --> 00:17:22,049
really has a good opportunity to<font color="#E5E5E5"> make a</font>

415
00:17:20,069 --> 00:17:25,938
significant and lasting change<font color="#E5E5E5"> in the</font>

416
00:17:22,049 --> 00:17:28,349
way we<font color="#E5E5E5"> think about these things</font><font color="#CCCCCC"> now</font>

417
00:17:25,939 --> 00:17:30,059
<font color="#E5E5E5">here's one thing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> usually trips me</font>

418
00:17:28,349 --> 00:17:31,980
<font color="#CCCCCC">up in shorter</font><font color="#E5E5E5"> presentations so I'm going</font>

419
00:17:30,059 --> 00:17:34,860
to go through it in some detail<font color="#E5E5E5"> it's</font>

420
00:17:31,980 --> 00:17:38,190
perhaps not trivial<font color="#E5E5E5"> right there's a big</font>

421
00:17:34,860 --> 00:17:40,979
<font color="#CCCCCC">difference</font><font color="#E5E5E5"> between a data model and a</font>

422
00:17:38,190 --> 00:17:43,770
protocol so in this case the yang

423
00:17:40,980 --> 00:17:46,919
language<font color="#E5E5E5"> is what we're using to write</font>

424
00:17:43,770 --> 00:17:51,750
data models<font color="#E5E5E5"> right and data models</font>

425
00:17:46,919 --> 00:17:53,710
describe sets of permitted data<font color="#E5E5E5"> right</font>

426
00:17:51,750 --> 00:17:57,580
it's like SQL<font color="#CCCCCC"> or</font>

427
00:17:53,710 --> 00:18:00,429
that matter<font color="#CCCCCC"> XML schema it is precisely</font>

428
00:17:57,580 --> 00:18:03,250
determines the set of data<font color="#E5E5E5"> that is valid</font>

429
00:18:00,429 --> 00:18:05,200
<font color="#CCCCCC">according</font><font color="#E5E5E5"> to the schema so in this case</font>

430
00:18:03,250 --> 00:18:07,360
when we<font color="#CCCCCC"> think</font><font color="#E5E5E5"> about these data models</font>

431
00:18:05,200 --> 00:18:09,370
are something that<font color="#E5E5E5"> are implemented</font><font color="#CCCCCC"> on</font>

432
00:18:07,360 --> 00:18:11,219
the<font color="#CCCCCC"> device</font><font color="#E5E5E5"> that were manipulating on the</font>

433
00:18:09,370 --> 00:18:14,229
device<font color="#E5E5E5"> that we are configuring</font><font color="#CCCCCC"> right and</font>

434
00:18:11,220 --> 00:18:18,750
using<font color="#E5E5E5"> that</font><font color="#CCCCCC"> data model it will check its</font>

435
00:18:14,230 --> 00:18:22,330
input data<font color="#E5E5E5"> for validity</font><font color="#CCCCCC"> a protocol</font>

436
00:18:18,750 --> 00:18:25,330
provides primitives<font color="#E5E5E5"> it provides verbs if</font>

437
00:18:22,330 --> 00:18:27,129
you like<font color="#E5E5E5"> it is something that</font><font color="#CCCCCC"> you use to</font>

438
00:18:25,330 --> 00:18:29,049
manipulate<font color="#E5E5E5"> the configuration of the</font>

439
00:18:27,130 --> 00:18:32,980
state data that<font color="#E5E5E5"> actually resides on the</font>

440
00:18:29,049 --> 00:18:36,370
<font color="#E5E5E5">element itself and the encoding of this</font>

441
00:18:32,980 --> 00:18:38,770
data<font color="#E5E5E5"> the content of the data is then</font>

442
00:18:36,370 --> 00:18:42,459
constrained by the model or defined by

443
00:18:38,770 --> 00:18:44,129
the model<font color="#E5E5E5"> okay now one false corollary</font>

444
00:18:42,460 --> 00:18:47,890
<font color="#CCCCCC">that I come across</font><font color="#E5E5E5"> quite a bit is</font><font color="#CCCCCC"> that</font>

445
00:18:44,130 --> 00:18:50,559
it is not<font color="#E5E5E5"> necessary true that you can</font>

446
00:18:47,890 --> 00:18:52,870
use the models to validate protocol

447
00:18:50,559 --> 00:18:56,350
message<font color="#CCCCCC"> content so things that come</font>

448
00:18:52,870 --> 00:18:59,289
flying over to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> to the device in</font><font color="#CCCCCC"> PDUs</font>

449
00:18:56,350 --> 00:19:01,629
<font color="#E5E5E5">right let</font><font color="#CCCCCC"> me take an example</font><font color="#E5E5E5"> might</font><font color="#CCCCCC"> be</font>

450
00:18:59,289 --> 00:19:04,750
the<font color="#E5E5E5"> case that a particular device only</font>

451
00:19:01,630 --> 00:19:06,460
<font color="#E5E5E5">supports a list of let's say</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> security</font>

452
00:19:04,750 --> 00:19:07,720
rules<font color="#E5E5E5"> right that would be a horrible</font>

453
00:19:06,460 --> 00:19:11,020
implementation but this particular

454
00:19:07,720 --> 00:19:14,409
<font color="#CCCCCC">device only</font><font color="#E5E5E5"> supports</font><font color="#CCCCCC"> 10 security rules</font>

455
00:19:11,020 --> 00:19:17,049
<font color="#E5E5E5">that box is now running with 10 security</font>

456
00:19:14,409 --> 00:19:19,750
rules and someone is using a protocol

457
00:19:17,049 --> 00:19:22,029
maybe<font color="#CCCCCC"> napkins maybe rest to suggest the</font>

458
00:19:19,750 --> 00:19:25,960
addition of a new<font color="#CCCCCC"> one</font><font color="#E5E5E5"> if we're only</font>

459
00:19:22,029 --> 00:19:27,789
looking at<font color="#E5E5E5"> the protocol content the</font>

460
00:19:25,960 --> 00:19:29,559
content<font color="#E5E5E5"> of the PDU of the frame that's</font>

461
00:19:27,789 --> 00:19:31,510
coming<font color="#E5E5E5"> towards the device we can say</font>

462
00:19:29,559 --> 00:19:33,668
<font color="#E5E5E5">nothing</font><font color="#CCCCCC"> about the validity right because</font>

463
00:19:31,510 --> 00:19:35,890
we<font color="#E5E5E5"> have to take in the totality of</font>

464
00:19:33,669 --> 00:19:37,750
what's in<font color="#CCCCCC"> the box</font><font color="#E5E5E5"> which by the way</font><font color="#CCCCCC"> is</font>

465
00:19:35,890 --> 00:19:40,480
<font color="#CCCCCC">already</font><font color="#E5E5E5"> full and</font><font color="#CCCCCC"> what's coming</font><font color="#E5E5E5"> over the</font>

466
00:19:37,750 --> 00:19:43,029
wire<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so in this case the model would</font>

467
00:19:40,480 --> 00:19:45,399
tell us no you can't add a new security

468
00:19:43,029 --> 00:19:47,529
role because the instance data already

469
00:19:45,399 --> 00:19:50,199
<font color="#E5E5E5">has 10 of those</font><font color="#CCCCCC"> ok</font>

470
00:19:47,529 --> 00:19:53,289
so bear in mind that<font color="#E5E5E5"> the model</font><font color="#CCCCCC"> that</font>

471
00:19:50,200 --> 00:19:55,929
describes what's on the device cannot

472
00:19:53,289 --> 00:19:59,490
necessarily<font color="#E5E5E5"> be used to validate the</font>

473
00:19:55,929 --> 00:19:59,490
<font color="#CCCCCC">contents of protocol messages</font>

474
00:19:59,950 --> 00:20:07,510
<font color="#E5E5E5">there were everyone looks relieved and</font>

475
00:20:01,659 --> 00:20:09,669
enlightened<font color="#CCCCCC"> regu also another</font><font color="#E5E5E5"> thing that</font>

476
00:20:07,510 --> 00:20:12,399
<font color="#CCCCCC">kind of tricks me up at times</font><font color="#E5E5E5"> is the</font>

477
00:20:09,669 --> 00:20:15,779
definition<font color="#CCCCCC"> or the</font><font color="#E5E5E5"> difference between</font>

478
00:20:12,399 --> 00:20:19,989
<font color="#CCCCCC">information models and data models right</font>

479
00:20:15,779 --> 00:20:24,010
<font color="#E5E5E5">there's a great RFC again it's</font><font color="#CCCCCC"> third</font>

480
00:20:19,990 --> 00:20:26,010
<font color="#E5E5E5">know with</font><font color="#CCCCCC"> 35:35</font><font color="#E5E5E5"> it's another one you</font>

481
00:20:24,010 --> 00:20:27,940
<font color="#E5E5E5">guys will have to</font><font color="#CCCCCC"> google</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the title</font>

482
00:20:26,010 --> 00:20:30,580
<font color="#CCCCCC">it's on the difference between</font>

483
00:20:27,940 --> 00:20:32,529
<font color="#CCCCCC">information models and</font><font color="#E5E5E5"> data models so</font>

484
00:20:30,580 --> 00:20:35,199
information<font color="#E5E5E5"> models and a good example</font><font color="#CCCCCC"> of</font>

485
00:20:32,529 --> 00:20:37,510
this is<font color="#E5E5E5"> that is when people use UML for</font>

486
00:20:35,200 --> 00:20:39,039
<font color="#E5E5E5">example for</font><font color="#CCCCCC"> anytime you see</font><font color="#E5E5E5"> someone on a</font>

487
00:20:37,510 --> 00:20:41,980
white board writing boxes and arrows

488
00:20:39,039 --> 00:20:45,399
<font color="#CCCCCC">with names on them that's an information</font>

489
00:20:41,980 --> 00:20:47,169
<font color="#E5E5E5">model it usually describes relationships</font>

490
00:20:45,399 --> 00:20:50,168
between things that<font color="#CCCCCC"> usually describes</font>

491
00:20:47,169 --> 00:20:52,630
multiplicity but not to<font color="#CCCCCC"> that</font><font color="#E5E5E5"> level</font><font color="#CCCCCC"> that</font>

492
00:20:50,169 --> 00:20:54,639
you<font color="#E5E5E5"> can implement things actually you</font>

493
00:20:52,630 --> 00:20:56,320
<font color="#E5E5E5">want to keep information models on a</font>

494
00:20:54,639 --> 00:20:59,070
level where<font color="#CCCCCC"> you can't implement</font><font color="#E5E5E5"> things</font>

495
00:20:56,320 --> 00:21:02,049
because you<font color="#CCCCCC"> want to allow for different</font>

496
00:20:59,070 --> 00:21:03,549
implementations<font color="#E5E5E5"> of your information</font>

497
00:21:02,049 --> 00:21:07,299
model different protocols to implement

498
00:21:03,549 --> 00:21:09,010
the<font color="#E5E5E5"> same thing data models are tied to a</font>

499
00:21:07,299 --> 00:21:11,350
<font color="#CCCCCC">particular implementation a particular</font>

500
00:21:09,010 --> 00:21:13,149
protocol<font color="#E5E5E5"> so in this case of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> the</font>

501
00:21:11,350 --> 00:21:16,178
<font color="#E5E5E5">data more the language we're talking</font>

502
00:21:13,149 --> 00:21:19,059
about<font color="#E5E5E5"> today is young many standards</font>

503
00:21:16,179 --> 00:21:21,429
organizations use informal data models

504
00:21:19,059 --> 00:21:23,139
like UML to describe<font color="#E5E5E5"> kind of the</font>

505
00:21:21,429 --> 00:21:26,260
backbone structure of what they're

506
00:21:23,139 --> 00:21:27,820
trying<font color="#CCCCCC"> to describe things like MAF and</font>

507
00:21:26,260 --> 00:21:29,590
<font color="#E5E5E5">cable apps and others use information</font>

508
00:21:27,820 --> 00:21:33,189
<font color="#E5E5E5">models and then they have a</font><font color="#CCCCCC"> variety of</font>

509
00:21:29,590 --> 00:21:34,809
mappings<font color="#E5E5E5"> into data models yang being a</font>

510
00:21:33,190 --> 00:21:36,929
data<font color="#E5E5E5"> modeling language is supposed to be</font>

511
00:21:34,809 --> 00:21:39,639
complete enough for an implementation

512
00:21:36,929 --> 00:21:41,049
<font color="#CCCCCC">for a particular protocol</font><font color="#E5E5E5"> and of course</font>

513
00:21:39,639 --> 00:21:45,469
<font color="#E5E5E5">today we're going to talk</font><font color="#CCCCCC"> about net conf</font>

514
00:21:41,049 --> 00:21:48,230
<font color="#E5E5E5">and rest cough okay</font>

515
00:21:45,470 --> 00:21:50,509
protocol layers<font color="#CCCCCC"> another thing right</font><font color="#E5E5E5"> so</font>

516
00:21:48,230 --> 00:21:52,309
there's a number<font color="#E5E5E5"> of protocols that I've</font>

517
00:21:50,509 --> 00:21:54,289
been kind<font color="#E5E5E5"> of associated with network</font>

518
00:21:52,309 --> 00:21:56,629
management<font color="#E5E5E5"> over time</font><font color="#CCCCCC"> before I bring up</font>

519
00:21:54,289 --> 00:22:00,470
<font color="#E5E5E5">here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> as an MP</font><font color="#CCCCCC"> not called soap and</font>

520
00:21:56,629 --> 00:22:03,219
<font color="#CCCCCC">rests</font><font color="#E5E5E5"> okay they are different things as</font>

521
00:22:00,470 --> 00:22:06,620
an MP Annette<font color="#E5E5E5"> Kampf</font><font color="#CCCCCC"> or semantically</font><font color="#E5E5E5"> rich</font>

522
00:22:03,220 --> 00:22:09,049
protocol stacks for very precise uses as

523
00:22:06,620 --> 00:22:11,449
an MP has great use for<font color="#CCCCCC"> fault and</font>

524
00:22:09,049 --> 00:22:13,908
performance I believe net conf<font color="#E5E5E5"> again has</font>

525
00:22:11,450 --> 00:22:17,299
a good set of features<font color="#CCCCCC"> for changing</font>

526
00:22:13,909 --> 00:22:20,000
configuration<font color="#CCCCCC"> soap and rest</font><font color="#E5E5E5"> or general</font>

527
00:22:17,299 --> 00:22:22,639
transport<font color="#E5E5E5"> mechanisms for many types of</font>

528
00:22:20,000 --> 00:22:25,580
<font color="#CCCCCC">uses they don't carry any semantic</font>

529
00:22:22,639 --> 00:22:27,740
meaning you can implement<font color="#E5E5E5"> net conf</font>

530
00:22:25,580 --> 00:22:29,960
like protocols<font color="#CCCCCC"> reson MP like protocols</font>

531
00:22:27,740 --> 00:22:33,049
using<font color="#E5E5E5"> soap and rest but you can also</font>

532
00:22:29,960 --> 00:22:34,460
implement many other things and so that

533
00:22:33,049 --> 00:22:37,220
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> thickness of</font><font color="#E5E5E5"> the stack</font>

534
00:22:34,460 --> 00:22:38,779
here<font color="#E5E5E5"> is vastly different</font><font color="#CCCCCC"> so if you're</font>

535
00:22:37,220 --> 00:22:40,129
looking<font color="#CCCCCC"> for something that is particular</font>

536
00:22:38,779 --> 00:22:41,990
to network configuration you<font color="#E5E5E5"> were</font>

537
00:22:40,129 --> 00:22:44,059
probably<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for SNMP or</font><font color="#E5E5E5"> net cough</font>

538
00:22:41,990 --> 00:22:47,090
<font color="#E5E5E5">if you're looking for general transport</font>

539
00:22:44,059 --> 00:22:48,289
<font color="#E5E5E5">mechanism then soap and rest is probably</font>

540
00:22:47,090 --> 00:22:53,750
what you want<font color="#E5E5E5"> to what you want to look</font>

541
00:22:48,289 --> 00:22:55,789
<font color="#E5E5E5">at so putting this all in context of</font>

542
00:22:53,750 --> 00:22:58,340
<font color="#E5E5E5">course this is how what it looks like</font>

543
00:22:55,789 --> 00:23:00,590
you have distributed the disability main

544
00:22:58,340 --> 00:23:03,320
you have<font color="#E5E5E5"> network elements they hopefully</font>

545
00:23:00,590 --> 00:23:05,509
implement yang modules they expose on

546
00:23:03,320 --> 00:23:07,939
that<font color="#CCCCCC"> conf</font><font color="#E5E5E5"> interface then you have</font>

547
00:23:05,509 --> 00:23:10,009
management<font color="#E5E5E5"> applications in this range is</font>

548
00:23:07,940 --> 00:23:13,490
of course from very<font color="#E5E5E5"> small things like</font>

549
00:23:10,009 --> 00:23:15,830
scripts and<font color="#E5E5E5"> Python libraries all the way</font>

550
00:23:13,490 --> 00:23:17,090
up to full-blown<font color="#E5E5E5"> network service</font>

551
00:23:15,830 --> 00:23:19,730
orchestration or<font color="#E5E5E5"> configuration</font>

552
00:23:17,090 --> 00:23:21,799
management systems<font color="#CCCCCC"> that are aware</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

553
00:23:19,730 --> 00:23:24,490
models that<font color="#E5E5E5"> are implemented by these</font>

554
00:23:21,799 --> 00:23:26,779
devices and that's kind of the<font color="#E5E5E5"> the</font>

555
00:23:24,490 --> 00:23:28,700
contract loop if you like and if

556
00:23:26,779 --> 00:23:31,519
something changes on the network<font color="#CCCCCC"> element</font>

557
00:23:28,700 --> 00:23:33,259
<font color="#E5E5E5">side yang models get updated the</font>

558
00:23:31,519 --> 00:23:34,879
management applications have means of

559
00:23:33,259 --> 00:23:37,159
updating themselves<font color="#CCCCCC"> when they figure out</font>

560
00:23:34,879 --> 00:23:40,750
<font color="#E5E5E5">that</font><font color="#CCCCCC"> something has changed</font><font color="#E5E5E5"> that's kind</font>

561
00:23:37,159 --> 00:23:43,639
of the entire context around<font color="#E5E5E5"> this I</font>

562
00:23:40,750 --> 00:23:46,429
always<font color="#E5E5E5"> also get this</font><font color="#CCCCCC"> question what about</font>

563
00:23:43,639 --> 00:23:50,120
<font color="#E5E5E5">dollar proto maybe they have someone has</font>

564
00:23:46,429 --> 00:23:51,620
a particular<font color="#E5E5E5"> liking to things that exist</font>

565
00:23:50,120 --> 00:23:54,110
like open flow or things that<font color="#CCCCCC"> doesn't</font>

566
00:23:51,620 --> 00:23:57,258
<font color="#E5E5E5">exist like I</font><font color="#CCCCCC"> - RS or whatever it is</font>

567
00:23:54,110 --> 00:23:58,830
<font color="#E5E5E5">right</font><font color="#CCCCCC"> and my usual</font><font color="#E5E5E5"> question back is that</font>

568
00:23:57,259 --> 00:24:01,140
<font color="#E5E5E5">it depends on what you're looking for</font>

569
00:23:58,830 --> 00:24:03,149
so if<font color="#E5E5E5"> you're looking only</font><font color="#CCCCCC"> for transport</font>

570
00:24:01,140 --> 00:24:05,400
<font color="#E5E5E5">protocol then yes HTTP would be great</font>

571
00:24:03,150 --> 00:24:07,740
for you<font color="#CCCCCC"> if you need</font><font color="#E5E5E5"> transport protocol</font>

572
00:24:05,400 --> 00:24:09,960
with our<font color="#CCCCCC"> PCs</font><font color="#E5E5E5"> well okay look at rest</font>

573
00:24:07,740 --> 00:24:11,040
<font color="#E5E5E5">right rest actually has a couple of</font>

574
00:24:09,960 --> 00:24:13,380
verbs<font color="#E5E5E5"> and it's fairly well understood</font>

575
00:24:11,040 --> 00:24:15,149
<font color="#E5E5E5">how to do things with that</font><font color="#CCCCCC"> if you need</font>

576
00:24:13,380 --> 00:24:18,120
<font color="#E5E5E5">operations on top of this which means</font>

577
00:24:15,150 --> 00:24:19,770
protocol semantics<font color="#E5E5E5"> then</font><font color="#CCCCCC"> Netcom</font><font color="#E5E5E5"> for SNMP</font>

578
00:24:18,120 --> 00:24:21,870
is probably good<font color="#E5E5E5"> and if you actually</font>

579
00:24:19,770 --> 00:24:23,670
want something that<font color="#E5E5E5"> describes the</font>

580
00:24:21,870 --> 00:24:25,620
content<font color="#E5E5E5"> well then you need a schema</font>

581
00:24:23,670 --> 00:24:27,870
driven protocol right you<font color="#E5E5E5"> need something</font>

582
00:24:25,620 --> 00:24:30,929
<font color="#E5E5E5">that describes the content on top of it</font>

583
00:24:27,870 --> 00:24:33,330
<font color="#CCCCCC">and this then varies over the types</font><font color="#E5E5E5"> of</font>

584
00:24:30,930 --> 00:24:36,830
protocols<font color="#CCCCCC"> that people will throw my way</font>

585
00:24:33,330 --> 00:24:36,830
so it depends on what you're<font color="#CCCCCC"> looking for</font>

586
00:24:37,340 --> 00:24:43,169
so<font color="#CCCCCC"> deep-diving</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> little bit more so</font>

587
00:24:40,530 --> 00:24:45,210
again we're going<font color="#CCCCCC"> back to the</font><font color="#E5E5E5"> assumption</font>

588
00:24:43,170 --> 00:24:47,820
or the realization<font color="#CCCCCC"> that SNMP had failed</font>

589
00:24:45,210 --> 00:24:49,470
for<font color="#E5E5E5"> configuration right extensive use</font>

590
00:24:47,820 --> 00:24:51,840
for fault and performance but<font color="#E5E5E5"> we</font>

591
00:24:49,470 --> 00:24:54,030
realized that<font color="#CCCCCC"> people</font><font color="#E5E5E5"> were using the CLI</font>

592
00:24:51,840 --> 00:24:55,949
as much as we didn't like it<font color="#CCCCCC"> that's what</font>

593
00:24:54,030 --> 00:24:57,750
they<font color="#CCCCCC"> did</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's it that's</font><font color="#E5E5E5"> how you</font>

594
00:24:55,950 --> 00:24:59,430
<font color="#CCCCCC">know at</font><font color="#E5E5E5"> least a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of two or three</font>

595
00:24:57,750 --> 00:25:01,650
<font color="#E5E5E5">generations</font><font color="#CCCCCC"> of network engineers were</font>

596
00:24:59,430 --> 00:25:03,810
trained using<font color="#E5E5E5"> the CLI so that</font><font color="#CCCCCC"> tree</font>

597
00:25:01,650 --> 00:25:06,960
structure<font color="#E5E5E5"> that kind</font><font color="#CCCCCC"> of command</font><font color="#E5E5E5"> or</font>

598
00:25:03,810 --> 00:25:08,580
<font color="#CCCCCC">data-driven approach</font><font color="#E5E5E5"> not only</font><font color="#CCCCCC"> was what</font>

599
00:25:06,960 --> 00:25:12,330
<font color="#E5E5E5">people were trained on it was also the</font>

600
00:25:08,580 --> 00:25:18,919
way<font color="#CCCCCC"> routing stacks</font><font color="#E5E5E5"> entire routing and</font>

601
00:25:12,330 --> 00:25:22,590
switching operating systems worked and a

602
00:25:18,920 --> 00:25:25,950
huge thing that that kind<font color="#CCCCCC"> of came out of</font>

603
00:25:22,590 --> 00:25:30,929
that<font color="#E5E5E5"> is that there is still</font><font color="#CCCCCC"> very large</font>

604
00:25:25,950 --> 00:25:34,050
set<font color="#CCCCCC"> of resources</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> are spent on the</font>

605
00:25:30,930 --> 00:25:36,150
the<font color="#E5E5E5"> the way</font><font color="#CCCCCC"> we integrate</font><font color="#E5E5E5"> our network</font>

606
00:25:34,050 --> 00:25:39,270
elements into something that that makes

607
00:25:36,150 --> 00:25:41,520
use of it right<font color="#E5E5E5"> so the assumption</font>

608
00:25:39,270 --> 00:25:43,800
currently is that<font color="#CCCCCC"> there</font><font color="#E5E5E5"> will be human</font>

609
00:25:41,520 --> 00:25:46,740
interventions between any network device

610
00:25:43,800 --> 00:25:50,760
and an upper layer management<font color="#E5E5E5"> software</font>

611
00:25:46,740 --> 00:25:53,130
right and you will<font color="#E5E5E5"> actually have either</font>

612
00:25:50,760 --> 00:25:55,350
humans typing things in or<font color="#E5E5E5"> over time</font>

613
00:25:53,130 --> 00:25:56,730
<font color="#CCCCCC">have software developers that that kind</font>

614
00:25:55,350 --> 00:25:59,580
<font color="#CCCCCC">of</font><font color="#E5E5E5"> reflect the human to</font><font color="#CCCCCC"> machine</font>

615
00:25:56,730 --> 00:26:01,560
interfaces<font color="#E5E5E5"> so it would be cool to</font><font color="#CCCCCC"> have</font>

616
00:25:59,580 --> 00:26:05,040
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that was designed for</font><font color="#E5E5E5"> ease of</font>

617
00:26:01,560 --> 00:26:08,010
<font color="#E5E5E5">use</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> reduce the amount of</font><font color="#CCCCCC"> s</font><font color="#E5E5E5"> effort or</font>

618
00:26:05,040 --> 00:26:10,020
resources spent over<font color="#E5E5E5"> the</font><font color="#CCCCCC"> lifecycle of</font>

619
00:26:08,010 --> 00:26:11,700
your<font color="#E5E5E5"> network in order</font><font color="#CCCCCC"> to just keep it</font>

620
00:26:10,020 --> 00:26:14,510
humming or keep it doing<font color="#E5E5E5"> what it should</font>

621
00:26:11,700 --> 00:26:18,690
do so ease-of-use is obviously key here

622
00:26:14,510 --> 00:26:20,490
<font color="#E5E5E5">and again I can't begin</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> tell you how</font>

623
00:26:18,690 --> 00:26:23,850
important this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> clearly separate</font>

624
00:26:20,490 --> 00:26:26,550
<font color="#CCCCCC">configuration and state data that gives</font>

625
00:26:23,850 --> 00:26:28,560
you<font color="#E5E5E5"> roll backs that gives you backups</font><font color="#CCCCCC"> it</font>

626
00:26:26,550 --> 00:26:31,500
gives you the ability<font color="#E5E5E5"> to compare data</font>

627
00:26:28,560 --> 00:26:35,540
across<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> it's just a very</font>

628
00:26:31,500 --> 00:26:35,540
fundamental fundamental<font color="#CCCCCC"> feature here</font>

629
00:26:36,110 --> 00:26:40,290
again we want the underpinnings<font color="#CCCCCC"> of</font>

630
00:26:38,550 --> 00:26:42,990
something that we can<font color="#E5E5E5"> translate into</font>

631
00:26:40,290 --> 00:26:44,520
service<font color="#E5E5E5"> configuration there are</font>

632
00:26:42,990 --> 00:26:47,070
something<font color="#CCCCCC"> that would allow for software</font>

633
00:26:44,520 --> 00:26:48,510
to build<font color="#E5E5E5"> higher abstractions but in</font>

634
00:26:47,070 --> 00:26:50,280
order to do that we need solid

635
00:26:48,510 --> 00:26:52,560
underpinnings<font color="#CCCCCC"> and we need some</font><font color="#E5E5E5"> sort of a</font>

636
00:26:50,280 --> 00:26:54,510
<font color="#E5E5E5">translation layer between the</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> and</font>

637
00:26:52,560 --> 00:26:56,490
that<font color="#CCCCCC"> should support</font><font color="#E5E5E5"> network wide</font>

638
00:26:54,510 --> 00:26:58,379
transactions<font color="#E5E5E5"> if</font><font color="#CCCCCC"> they're somewhere I</font>

639
00:26:56,490 --> 00:27:01,110
think<font color="#E5E5E5"> it's a really exciting</font><font color="#CCCCCC"> time right</font>

640
00:26:58,380 --> 00:27:03,510
<font color="#E5E5E5">now both in the ITF but also in many</font>

641
00:27:01,110 --> 00:27:06,300
other<font color="#E5E5E5"> standardization organizations is</font>

642
00:27:03,510 --> 00:27:09,360
<font color="#E5E5E5">the emerging idea or the the emerging</font>

643
00:27:06,300 --> 00:27:11,940
push for<font color="#CCCCCC"> network</font><font color="#E5E5E5"> wide service models the</font>

644
00:27:09,360 --> 00:27:14,429
<font color="#CCCCCC">MAF has done quite a bit</font><font color="#E5E5E5"> of work here</font>

645
00:27:11,940 --> 00:27:16,890
<font color="#CCCCCC">Cable has done</font><font color="#E5E5E5"> a quite a bit of work and</font>

646
00:27:14,430 --> 00:27:18,480
there's a number<font color="#E5E5E5"> of very exciting things</font>

647
00:27:16,890 --> 00:27:21,060
happening<font color="#E5E5E5"> in the ITF over the coming</font>

648
00:27:18,480 --> 00:27:23,430
<font color="#CCCCCC">months and this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> all based on</font><font color="#E5E5E5"> the fact</font>

649
00:27:21,060 --> 00:27:25,830
<font color="#CCCCCC">that we now have</font><font color="#E5E5E5"> Yang and that we have</font>

650
00:27:23,430 --> 00:27:27,270
at least you know an<font color="#CCCCCC"> even distribution</font>

651
00:27:25,830 --> 00:27:29,250
of net<font color="#CCCCCC"> conf</font>

652
00:27:27,270 --> 00:27:31,379
in the network<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we can start thinking</font>

653
00:27:29,250 --> 00:27:33,870
about<font color="#E5E5E5"> these things</font><font color="#CCCCCC"> and of course the</font>

654
00:27:31,380 --> 00:27:35,760
whole term Sdn really helped people<font color="#CCCCCC"> kick</font>

655
00:27:33,870 --> 00:27:38,459
<font color="#CCCCCC">in this</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> into this gear</font><font color="#E5E5E5"> to realize</font>

656
00:27:35,760 --> 00:27:43,860
what software<font color="#E5E5E5"> could do for our network</font>

657
00:27:38,460 --> 00:27:45,870
<font color="#CCCCCC">at some scale other requirements may</font><font color="#E5E5E5"> be</font>

658
00:27:43,860 --> 00:27:48,479
more<font color="#E5E5E5"> minut but</font><font color="#CCCCCC"> also very very important</font>

659
00:27:45,870 --> 00:27:50,120
we<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to allow</font><font color="#E5E5E5"> the devices</font>

660
00:27:48,480 --> 00:27:53,280
themselves to figure out the ordering

661
00:27:50,120 --> 00:27:55,169
<font color="#CCCCCC">even though I am currently an employee</font>

662
00:27:53,280 --> 00:27:57,480
<font color="#E5E5E5">of Cisco I have to tell you</font><font color="#CCCCCC"> guys</font><font color="#E5E5E5"> that</font>

663
00:27:55,170 --> 00:27:59,160
one<font color="#E5E5E5"> of the fundamental trickeries with a</font>

664
00:27:57,480 --> 00:28:00,840
<font color="#CCCCCC">Cisco CLI</font><font color="#E5E5E5"> is that there is an inherent</font>

665
00:27:59,160 --> 00:28:03,150
<font color="#E5E5E5">ordering if you</font><font color="#CCCCCC"> want to remove things</font>

666
00:28:00,840 --> 00:28:04,949
you have to<font color="#CCCCCC"> removing a particular order</font>

667
00:28:03,150 --> 00:28:07,140
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> want to add things there's</font>

668
00:28:04,950 --> 00:28:10,620
actually ordering to that as well<font color="#E5E5E5"> it is</font>

669
00:28:07,140 --> 00:28:12,270
really really irritating<font color="#E5E5E5"> and with net</font>

670
00:28:10,620 --> 00:28:14,969
<font color="#E5E5E5">comp we wanted to push this to</font><font color="#CCCCCC"> the</font>

671
00:28:12,270 --> 00:28:17,820
device<font color="#E5E5E5"> so we could send it valid but</font>

672
00:28:14,970 --> 00:28:20,520
unordered data<font color="#E5E5E5"> and let the device itself</font>

673
00:28:17,820 --> 00:28:22,830
<font color="#CCCCCC">figure it out</font><font color="#E5E5E5"> that doesn't mean that we</font>

674
00:28:20,520 --> 00:28:24,900
can't have<font color="#E5E5E5"> references</font><font color="#CCCCCC"> to things so we</font>

675
00:28:22,830 --> 00:28:28,290
wouldn't allow<font color="#E5E5E5"> for example</font>

676
00:28:24,900 --> 00:28:30,420
the references to security policies by

677
00:28:28,290 --> 00:28:32,610
name<font color="#CCCCCC"> that doesn't</font><font color="#E5E5E5"> exist</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> but at</font>

678
00:28:30,420 --> 00:28:34,530
least we could<font color="#E5E5E5"> send it as a lump an</font>

679
00:28:32,610 --> 00:28:37,770
ordered lump<font color="#CCCCCC"> so you don't have to do the</font>

680
00:28:34,530 --> 00:28:40,020
<font color="#CCCCCC">ordering yourself</font><font color="#E5E5E5"> in software minimal</font>

681
00:28:37,770 --> 00:28:42,150
<font color="#E5E5E5">divs</font><font color="#CCCCCC"> if we want</font><font color="#E5E5E5"> to change bandwidth</font>

682
00:28:40,020 --> 00:28:45,030
parameters for a VPN there's no need to

683
00:28:42,150 --> 00:28:46,410
<font color="#E5E5E5">tear down the entire VPN and bring it up</font>

684
00:28:45,030 --> 00:28:49,620
again<font color="#CCCCCC"> just</font><font color="#E5E5E5"> because we're</font><font color="#CCCCCC"> changing a</font>

685
00:28:46,410 --> 00:28:51,510
bandwidth parameter<font color="#E5E5E5"> we should allow</font><font color="#CCCCCC"> for</font>

686
00:28:49,620 --> 00:28:54,209
compute computation of minimal deaths

687
00:28:51,510 --> 00:28:55,770
between configurations not to upset<font color="#CCCCCC"> the</font>

688
00:28:54,210 --> 00:28:57,960
instrumentation code running<font color="#E5E5E5"> in the</font>

689
00:28:55,770 --> 00:29:00,120
devices<font color="#CCCCCC"> themselves</font><font color="#E5E5E5"> again a fairly</font>

690
00:28:57,960 --> 00:29:02,400
pragmatic approach to<font color="#E5E5E5"> something we know</font>

691
00:29:00,120 --> 00:29:04,770
to be<font color="#E5E5E5"> true in the way people implement</font>

692
00:29:02,400 --> 00:29:07,740
the network elements today and again

693
00:29:04,770 --> 00:29:09,600
backup and restore<font color="#E5E5E5"> we believe that these</font>

694
00:29:07,740 --> 00:29:11,730
things are<font color="#E5E5E5"> just basically</font><font color="#CCCCCC"> Atmos tests of</font>

695
00:29:09,600 --> 00:29:15,540
a<font color="#E5E5E5"> management interface both for human</font>

696
00:29:11,730 --> 00:29:17,730
consumption and<font color="#E5E5E5"> also for software again</font>

697
00:29:15,540 --> 00:29:20,730
validation of configuration the ability

698
00:29:17,730 --> 00:29:24,000
<font color="#CCCCCC">to have profoundly or a detailed enough</font>

699
00:29:20,730 --> 00:29:27,720
schema<font color="#CCCCCC"> before you send the configuration</font>

700
00:29:24,000 --> 00:29:29,400
allow for offline validation<font color="#CCCCCC"> and also</font>

701
00:29:27,720 --> 00:29:31,710
offload the implementation on<font color="#CCCCCC"> the</font>

702
00:29:29,400 --> 00:29:33,930
devices<font color="#E5E5E5"> themselves</font><font color="#CCCCCC"> and also at the</font>

703
00:29:31,710 --> 00:29:35,190
network<font color="#E5E5E5"> level</font><font color="#CCCCCC"> actually kind of</font><font color="#E5E5E5"> coming</font>

704
00:29:33,930 --> 00:29:40,410
back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> idea that we could</font><font color="#E5E5E5"> have</font>

705
00:29:35,190 --> 00:29:43,470
service level models<font color="#E5E5E5"> for basic things</font>

706
00:29:40,410 --> 00:29:45,300
<font color="#CCCCCC">like VPNs or BGP policies that would</font>

707
00:29:43,470 --> 00:29:47,460
allow for<font color="#E5E5E5"> validation of</font><font color="#CCCCCC"> endpoints that</font>

708
00:29:45,300 --> 00:29:49,980
would allow for<font color="#E5E5E5"> correlation of data</font>

709
00:29:47,460 --> 00:29:55,070
between<font color="#E5E5E5"> participating devices right all</font>

710
00:29:49,980 --> 00:29:57,870
in<font color="#CCCCCC"> a formal and</font><font color="#E5E5E5"> end language based way</font>

711
00:29:55,070 --> 00:30:00,960
and again<font color="#CCCCCC"> textual encoding so this is</font>

712
00:29:57,870 --> 00:30:02,639
<font color="#E5E5E5">something that we can</font><font color="#CCCCCC"> use existing</font><font color="#E5E5E5"> tools</font>

713
00:30:00,960 --> 00:30:04,860
that's worse we don't have to reinvent a

714
00:30:02,640 --> 00:30:08,670
completely new ecosystem of tools<font color="#E5E5E5"> for</font>

715
00:30:04,860 --> 00:30:09,389
<font color="#E5E5E5">this standardized data models now it's</font>

716
00:30:08,670 --> 00:30:11,490
getting interesting

717
00:30:09,390 --> 00:30:13,680
of<font color="#E5E5E5"> course everybody was</font><font color="#CCCCCC"> very happy with</font>

718
00:30:11,490 --> 00:30:15,390
<font color="#E5E5E5">bringing out the yang language itself</font>

719
00:30:13,680 --> 00:30:17,040
<font color="#CCCCCC">it's a it's an interesting exercise</font>

720
00:30:15,390 --> 00:30:19,410
<font color="#CCCCCC">takes a couple</font><font color="#E5E5E5"> of years and</font><font color="#CCCCCC"> probably</font>

721
00:30:17,040 --> 00:30:21,540
<font color="#E5E5E5">something you wouldn't do</font><font color="#CCCCCC"> one more</font><font color="#E5E5E5"> time</font>

722
00:30:19,410 --> 00:30:24,540
<font color="#E5E5E5">right but when it comes to actually</font>

723
00:30:21,540 --> 00:30:27,740
standardizing<font color="#E5E5E5"> the models themselves</font><font color="#CCCCCC"> much</font>

724
00:30:24,540 --> 00:30:29,850
like we<font color="#E5E5E5"> did with SNMP in me</font><font color="#CCCCCC"> too right</font>

725
00:30:27,740 --> 00:30:31,320
<font color="#E5E5E5">that's where the fun starts and the</font>

726
00:30:29,850 --> 00:30:33,510
reason why<font color="#CCCCCC"> I exemplify here with</font>

727
00:30:31,320 --> 00:30:35,960
interfaces data model is<font color="#E5E5E5"> because that's</font>

728
00:30:33,510 --> 00:30:38,140
one<font color="#E5E5E5"> of the models that we have spent</font>

729
00:30:35,960 --> 00:30:39,790
unbelievable amounts of time<font color="#E5E5E5"> in</font>

730
00:30:38,140 --> 00:30:41,679
making sure<font color="#CCCCCC"> that the model that we</font>

731
00:30:39,790 --> 00:30:43,928
<font color="#CCCCCC">describe is something that fits the</font>

732
00:30:41,679 --> 00:30:47,910
implementation of all<font color="#CCCCCC"> the major vendors</font>

733
00:30:43,929 --> 00:30:51,340
<font color="#E5E5E5">in the industry which was on which was</font>

734
00:30:47,910 --> 00:30:52,809
not<font color="#E5E5E5"> trivial</font><font color="#CCCCCC"> to put it mildly</font><font color="#E5E5E5"> because we</font>

735
00:30:51,340 --> 00:30:54,669
<font color="#E5E5E5">don't want to constrain of course the</font>

736
00:30:52,809 --> 00:30:57,370
<font color="#CCCCCC">implementation space of how you</font>

737
00:30:54,670 --> 00:30:59,590
structure your interfaces<font color="#CCCCCC"> in your</font>

738
00:30:57,370 --> 00:31:01,090
implementation<font color="#CCCCCC"> but at the same time we</font>

739
00:30:59,590 --> 00:31:04,120
really think it's very compelling<font color="#CCCCCC"> to</font>

740
00:31:01,090 --> 00:31:06,149
have a single<font color="#CCCCCC"> well known</font><font color="#E5E5E5"> standard and</font>

741
00:31:04,120 --> 00:31:10,169
interoperable<font color="#E5E5E5"> way of describing</font>

742
00:31:06,150 --> 00:31:10,170
interfaces and how to<font color="#E5E5E5"> configure them</font>

743
00:31:11,850 --> 00:31:16,480
support<font color="#E5E5E5"> from a multiple configuration</font>

744
00:31:14,320 --> 00:31:18,010
sets this might sound minut<font color="#CCCCCC"> but it's</font>

745
00:31:16,480 --> 00:31:19,780
actually<font color="#E5E5E5"> pretty important when you do</font>

746
00:31:18,010 --> 00:31:22,270
<font color="#E5E5E5">this these things in software we wanted</font>

747
00:31:19,780 --> 00:31:24,190
<font color="#E5E5E5">a scratch pad</font><font color="#CCCCCC"> we'll go into this in much</font>

748
00:31:22,270 --> 00:31:26,710
more detail so you<font color="#E5E5E5"> could make several</font>

749
00:31:24,190 --> 00:31:29,020
<font color="#E5E5E5">sets of configuration changes that you</font>

750
00:31:26,710 --> 00:31:31,690
validate over time and when you're<font color="#CCCCCC"> happy</font>

751
00:31:29,020 --> 00:31:34,120
<font color="#CCCCCC">with it that's when</font><font color="#E5E5E5"> you push it to the</font>

752
00:31:31,690 --> 00:31:37,360
<font color="#E5E5E5">running state of the device right so</font>

753
00:31:34,120 --> 00:31:39,489
several<font color="#E5E5E5"> configs and then you commit it</font>

754
00:31:37,360 --> 00:31:41,559
<font color="#E5E5E5">this is something</font><font color="#CCCCCC"> that exists</font><font color="#E5E5E5"> and have</font>

755
00:31:39,490 --> 00:31:43,240
<font color="#E5E5E5">existed in</font><font color="#CCCCCC"> in both Juniper and</font><font color="#E5E5E5"> Cisco</font><font color="#CCCCCC"> C</font>

756
00:31:41,559 --> 00:31:45,340
<font color="#CCCCCC">lines for a long while and it's also</font>

757
00:31:43,240 --> 00:31:47,110
very<font color="#CCCCCC"> valuable feature for the</font>

758
00:31:45,340 --> 00:31:49,149
programmatic<font color="#E5E5E5"> access you can have delayed</font>

759
00:31:47,110 --> 00:31:50,709
and orchestrated activation<font color="#E5E5E5"> you can put</font>

760
00:31:49,150 --> 00:31:52,990
things in place<font color="#E5E5E5"> you can validate them</font>

761
00:31:50,710 --> 00:31:59,290
but you can wait until<font color="#CCCCCC"> you actually</font><font color="#E5E5E5"> put</font>

762
00:31:52,990 --> 00:32:02,169
<font color="#E5E5E5">it</font><font color="#CCCCCC"> into action things that are usually</font>

763
00:31:59,290 --> 00:32:04,840
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of put on afterwards</font><font color="#E5E5E5"> are things</font>

764
00:32:02,169 --> 00:32:07,360
<font color="#E5E5E5">around</font><font color="#CCCCCC"> Triple A right so we would like</font>

765
00:32:04,840 --> 00:32:09,520
<font color="#CCCCCC">to have a way of describing</font><font color="#E5E5E5"> role based</font>

766
00:32:07,360 --> 00:32:12,760
<font color="#E5E5E5">access control using of course</font><font color="#CCCCCC"> create</font>

767
00:32:09,520 --> 00:32:14,889
read update delete primitives<font color="#CCCCCC"> that is</font>

768
00:32:12,760 --> 00:32:16,960
both data oriented<font color="#E5E5E5"> you can express</font>

769
00:32:14,890 --> 00:32:18,370
things<font color="#E5E5E5"> like well junior engineers can</font>

770
00:32:16,960 --> 00:32:20,799
only see<font color="#CCCCCC"> customer-facing</font>

771
00:32:18,370 --> 00:32:23,070
Ethernet while senior engineers can see

772
00:32:20,799 --> 00:32:25,750
everything including<font color="#CCCCCC"> BGP configuration</font>

773
00:32:23,070 --> 00:32:27,490
but you may also<font color="#E5E5E5"> want it to be task</font>

774
00:32:25,750 --> 00:32:28,870
oriented<font color="#E5E5E5"> so you can say well junior</font>

775
00:32:27,490 --> 00:32:31,510
engineers are not allowed to<font color="#E5E5E5"> reboot</font>

776
00:32:28,870 --> 00:32:33,610
<font color="#E5E5E5">right so it's not just</font><font color="#CCCCCC"> data it</font><font color="#E5E5E5"> is the</font>

777
00:32:31,510 --> 00:32:34,929
actions as well<font color="#E5E5E5"> while senior engineers</font>

778
00:32:33,610 --> 00:32:36,370
they can do whatever they<font color="#CCCCCC"> want they can</font>

779
00:32:34,929 --> 00:32:39,520
<font color="#CCCCCC">take down the entire cluster</font><font color="#E5E5E5"> if they</font>

780
00:32:36,370 --> 00:32:43,870
want to so build a framework<font color="#E5E5E5"> that would</font>

781
00:32:39,520 --> 00:32:46,179
allow for<font color="#CCCCCC"> our back policies across</font><font color="#E5E5E5"> these</font>

782
00:32:43,870 --> 00:32:48,969
data sets<font color="#E5E5E5"> or across</font><font color="#CCCCCC"> these data models</font>

783
00:32:46,179 --> 00:32:51,570
including tasks including remote

784
00:32:48,970 --> 00:32:51,570
procedure calls

785
00:32:53,110 --> 00:32:59,000
<font color="#E5E5E5">okay so the implications of this can be</font>

786
00:32:55,850 --> 00:33:00,740
pretty<font color="#E5E5E5"> profound</font><font color="#CCCCCC"> traditionally we have</font>

787
00:32:59,000 --> 00:33:03,260
<font color="#E5E5E5">had no well-defined protocols we have</font>

788
00:33:00,740 --> 00:33:05,150
had no transactions<font color="#CCCCCC"> we have had huge</font>

789
00:33:03,260 --> 00:33:06,590
<font color="#E5E5E5">amounts of ordering challenges which</font>

790
00:33:05,150 --> 00:33:08,060
means that<font color="#E5E5E5"> people have mistyped things</font>

791
00:33:06,590 --> 00:33:10,129
and<font color="#E5E5E5"> taken networks out of order and</font>

792
00:33:08,060 --> 00:33:13,550
<font color="#E5E5E5">still do that actually</font><font color="#CCCCCC"> to the point</font>

793
00:33:10,130 --> 00:33:15,140
<font color="#CCCCCC">where this is a I</font><font color="#E5E5E5"> think the number is</font>

794
00:33:13,550 --> 00:33:18,110
about<font color="#CCCCCC"> thirteen billion</font><font color="#E5E5E5"> dollars</font><font color="#CCCCCC"> a year</font>

795
00:33:15,140 --> 00:33:19,820
spent<font color="#E5E5E5"> only on the last hope between the</font>

796
00:33:18,110 --> 00:33:22,760
provisioning systems and the network

797
00:33:19,820 --> 00:33:25,010
elements themselves<font color="#E5E5E5"> and what we're</font><font color="#CCCCCC"> going</font>

798
00:33:22,760 --> 00:33:26,660
for<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> is something that will</font>

799
00:33:25,010 --> 00:33:28,670
<font color="#E5E5E5">allow</font><font color="#CCCCCC"> for transactions</font><font color="#E5E5E5"> standard models</font>

800
00:33:26,660 --> 00:33:31,910
and standardized protocols<font color="#E5E5E5"> which will</font>

801
00:33:28,670 --> 00:33:35,300
reduce hopefully definitely reduce the

802
00:33:31,910 --> 00:33:37,730
amount of<font color="#E5E5E5"> time money and humans spent on</font>

803
00:33:35,300 --> 00:33:40,700
typing things<font color="#CCCCCC"> vastly</font><font color="#E5E5E5"> and more</font>

804
00:33:37,730 --> 00:33:42,650
importantly take out<font color="#E5E5E5"> large parts of this</font>

805
00:33:40,700 --> 00:33:44,900
cost base which is again based<font color="#E5E5E5"> on</font>

806
00:33:42,650 --> 00:33:47,720
<font color="#E5E5E5">integration which usually means ongoing</font>

807
00:33:44,900 --> 00:33:50,030
<font color="#E5E5E5">programming and put that into licenses</font>

808
00:33:47,720 --> 00:33:51,590
<font color="#E5E5E5">own software that knows how to talk</font><font color="#CCCCCC"> to</font>

809
00:33:50,030 --> 00:33:52,910
these standard protocols or<font color="#E5E5E5"> taught these</font>

810
00:33:51,590 --> 00:33:54,800
standard protocols and talk to<font color="#E5E5E5"> these</font>

811
00:33:52,910 --> 00:33:56,390
standardized models so if you want to

812
00:33:54,800 --> 00:33:58,700
<font color="#E5E5E5">look for a very very strong driver</font>

813
00:33:56,390 --> 00:34:05,090
coming<font color="#E5E5E5"> from the operational side</font><font color="#CCCCCC"> of</font>

814
00:33:58,700 --> 00:34:07,960
things<font color="#E5E5E5"> this is probably it any questions</font>

815
00:34:05,090 --> 00:34:07,959
on the background

816
00:34:09,260 --> 00:34:15,139
you<font color="#E5E5E5"> will got it that's great all right</font>

817
00:34:12,918 --> 00:34:17,960
<font color="#E5E5E5">let's go</font><font color="#CCCCCC"> internet conf a little bit more</font>

818
00:34:15,139 --> 00:34:20,990
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so of course it's a protocol</font><font color="#E5E5E5"> so we</font>

819
00:34:17,960 --> 00:34:22,850
have a layering model this comes back<font color="#E5E5E5"> to</font>

820
00:34:20,989 --> 00:34:25,040
<font color="#CCCCCC">the previous slides right in the</font><font color="#E5E5E5"> bottom</font>

821
00:34:22,850 --> 00:34:27,980
<font color="#E5E5E5">we wanted to make</font><font color="#CCCCCC"> Netcom protocol or</font>

822
00:34:25,040 --> 00:34:30,050
transport protocol<font color="#E5E5E5"> agnostic so we</font>

823
00:34:27,980 --> 00:34:32,179
actually<font color="#CCCCCC"> may allowed it to travel</font><font color="#E5E5E5"> over</font>

824
00:34:30,050 --> 00:34:33,889
several<font color="#E5E5E5"> protocols the ones that seem to</font>

825
00:34:32,179 --> 00:34:36,139
stick we had a<font color="#E5E5E5"> couple</font><font color="#CCCCCC"> of them in the</font>

826
00:34:33,889 --> 00:34:38,450
<font color="#CCCCCC">beginning</font><font color="#E5E5E5"> we actually had SSH</font><font color="#CCCCCC"> we have</font>

827
00:34:36,139 --> 00:34:40,730
soap<font color="#E5E5E5"> we had beep and a couple of others</font>

828
00:34:38,449 --> 00:34:44,000
<font color="#E5E5E5">the ones that</font><font color="#CCCCCC"> seemed to stick is SSH</font>

829
00:34:40,730 --> 00:34:46,280
<font color="#E5E5E5">that is what everyone</font><font color="#CCCCCC"> is implementing</font>

830
00:34:44,000 --> 00:34:48,530
and it seems<font color="#E5E5E5"> to be the case</font><font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is</font>

831
00:34:46,280 --> 00:34:50,389
<font color="#E5E5E5">the only security protocol or</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> security</font>

832
00:34:48,530 --> 00:34:52,550
tunneling protocol that service

833
00:34:50,389 --> 00:34:55,610
providers or large network owners I

834
00:34:52,550 --> 00:34:57,410
should say trusts and<font color="#E5E5E5"> have the capacity</font>

835
00:34:55,610 --> 00:35:00,200
of<font color="#E5E5E5"> understanding also for their security</font>

836
00:34:57,410 --> 00:35:01,850
frameworks<font color="#E5E5E5"> TLS is really compelling</font>

837
00:35:00,200 --> 00:35:03,890
especially<font color="#CCCCCC"> if you're going</font><font color="#E5E5E5"> in both</font>

838
00:35:01,850 --> 00:35:05,950
<font color="#CCCCCC">directions so we're working on that as</font>

839
00:35:03,890 --> 00:35:08,569
well<font color="#E5E5E5"> but as soon as we mentioned</font>

840
00:35:05,950 --> 00:35:11,419
certificates people tend to crawl back

841
00:35:08,570 --> 00:35:15,050
<font color="#CCCCCC">into</font><font color="#E5E5E5"> where they were so it's a little</font>

842
00:35:11,420 --> 00:35:17,660
<font color="#E5E5E5">bit more needs more work on top of these</font>

843
00:35:15,050 --> 00:35:21,050
transport protocols we have<font color="#E5E5E5"> an RPC layer</font>

844
00:35:17,660 --> 00:35:24,589
<font color="#E5E5E5">so basically not much more than an RPC</font>

845
00:35:21,050 --> 00:35:26,750
and an RPC reply framing on top of that

846
00:35:24,590 --> 00:35:29,150
we have the<font color="#E5E5E5"> actual operations so here's</font>

847
00:35:26,750 --> 00:35:31,190
<font color="#E5E5E5">where we go from a transport or envelope</font>

848
00:35:29,150 --> 00:35:33,740
protocol into something with semantic

849
00:35:31,190 --> 00:35:35,480
value<font color="#E5E5E5"> here's what it starts to tell you</font>

850
00:35:33,740 --> 00:35:37,549
that it this protocol knows that it's

851
00:35:35,480 --> 00:35:40,520
doing things<font color="#E5E5E5"> it's changing configuration</font>

852
00:35:37,550 --> 00:35:42,830
<font color="#E5E5E5">so we have things</font><font color="#CCCCCC"> like get which</font><font color="#E5E5E5"> means</font>

853
00:35:40,520 --> 00:35:44,630
that you fetch<font color="#E5E5E5"> the entire set of data</font><font color="#CCCCCC"> on</font>

854
00:35:42,830 --> 00:35:46,970
the<font color="#CCCCCC"> Box both operational and</font>

855
00:35:44,630 --> 00:35:49,100
configuration data you have get config

856
00:35:46,970 --> 00:35:51,680
which actually just<font color="#CCCCCC"> again fetches the</font>

857
00:35:49,100 --> 00:35:54,080
<font color="#E5E5E5">subset of the data that is</font><font color="#CCCCCC"> related to</font>

858
00:35:51,680 --> 00:35:55,819
actual<font color="#CCCCCC"> configuration we also have</font>

859
00:35:54,080 --> 00:35:57,880
notifications<font color="#CCCCCC"> so I mentioned that</font>

860
00:35:55,820 --> 00:36:00,320
<font color="#E5E5E5">there's also in a synchronous way for</font>

861
00:35:57,880 --> 00:36:02,210
servers which means the devices

862
00:36:00,320 --> 00:36:04,820
themselves to send a synchronous

863
00:36:02,210 --> 00:36:07,790
notifications<font color="#E5E5E5"> it's kind of a</font><font color="#CCCCCC"> pub/sub set</font>

864
00:36:04,820 --> 00:36:09,950
up to the clients<font color="#E5E5E5"> and on top of</font><font color="#CCCCCC"> this</font>

865
00:36:07,790 --> 00:36:12,110
<font color="#E5E5E5">travels our precious configuration and</font>

866
00:36:09,950 --> 00:36:14,390
state data<font color="#E5E5E5"> so you would wrap that into</font>

867
00:36:12,110 --> 00:36:16,520
the<font color="#CCCCCC"> gets they get configs or the added</font>

868
00:36:14,390 --> 00:36:18,650
configs<font color="#E5E5E5"> and that's actually the meet the</font>

869
00:36:16,520 --> 00:36:21,070
things that we validate towards the

870
00:36:18,650 --> 00:36:21,070
<font color="#E5E5E5">angles</font>

871
00:36:21,589 --> 00:36:25,890
conceptual databases and I'll go through

872
00:36:24,029 --> 00:36:29,130
<font color="#E5E5E5">this again</font><font color="#CCCCCC"> in the next session in some</font>

873
00:36:25,890 --> 00:36:31,319
<font color="#E5E5E5">gruesome detail</font><font color="#CCCCCC"> with a lot of</font><font color="#E5E5E5"> XML and</font>

874
00:36:29,130 --> 00:36:33,210
things flying over the wire here but

875
00:36:31,319 --> 00:36:35,519
there's<font color="#E5E5E5"> three</font><font color="#CCCCCC"> databases and most people</font>

876
00:36:33,210 --> 00:36:38,519
with experience again from modern for

877
00:36:35,519 --> 00:36:40,680
example<font color="#E5E5E5"> juniper and</font><font color="#CCCCCC"> Cisco devices will</font>

878
00:36:38,519 --> 00:36:43,558
recognize this<font color="#E5E5E5"> we have something called</font>

879
00:36:40,680 --> 00:36:45,690
a candidate<font color="#E5E5E5"> data store</font><font color="#CCCCCC"> which I think of</font>

880
00:36:43,559 --> 00:36:47,579
as a scratch pad so when you start<font color="#CCCCCC"> your</font>

881
00:36:45,690 --> 00:36:49,829
session<font color="#E5E5E5"> the candidate data store</font>

882
00:36:47,579 --> 00:36:51,450
actually<font color="#E5E5E5"> usually has what's in the</font>

883
00:36:49,829 --> 00:36:53,039
running<font color="#E5E5E5"> data store but you</font><font color="#CCCCCC"> can change it</font>

884
00:36:51,450 --> 00:36:55,169
to<font color="#E5E5E5"> your heart's content</font><font color="#CCCCCC"> without</font>

885
00:36:53,039 --> 00:36:57,269
<font color="#E5E5E5">affecting the running state of the</font>

886
00:36:55,170 --> 00:36:58,859
network<font color="#E5E5E5"> element itself so you</font><font color="#CCCCCC"> can play</font>

887
00:36:57,269 --> 00:37:00,660
around with<font color="#CCCCCC"> that you can edit</font><font color="#E5E5E5"> it to your</font>

888
00:36:58,859 --> 00:37:03,029
heart's content<font color="#CCCCCC"> you can continuously</font>

889
00:37:00,660 --> 00:37:04,740
<font color="#E5E5E5">also validate you can ask the</font><font color="#CCCCCC"> box to</font>

890
00:37:03,029 --> 00:37:06,480
take<font color="#E5E5E5"> a look at the content of the</font>

891
00:37:04,740 --> 00:37:09,598
<font color="#CCCCCC">candidate</font><font color="#E5E5E5"> and tell me what you think</font>

892
00:37:06,480 --> 00:37:11,339
according<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the yang module so that's</font>

893
00:37:09,599 --> 00:37:13,920
<font color="#CCCCCC">actually optional</font><font color="#E5E5E5"> you don't have to have</font>

894
00:37:11,339 --> 00:37:15,509
<font color="#E5E5E5">that what is mandatory is the running</font>

895
00:37:13,920 --> 00:37:17,640
database<font color="#CCCCCC"> the running database is a</font>

896
00:37:15,509 --> 00:37:19,859
conceptual than representation of what

897
00:37:17,640 --> 00:37:22,200
what the<font color="#E5E5E5"> box is actually trying</font><font color="#CCCCCC"> to do or</font>

898
00:37:19,859 --> 00:37:23,910
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> doing in most cases so it</font>

899
00:37:22,200 --> 00:37:26,368
reflects the running<font color="#E5E5E5"> state both</font>

900
00:37:23,910 --> 00:37:28,828
configuration and non configuration data

901
00:37:26,369 --> 00:37:31,170
in the box and then of course<font color="#E5E5E5"> there's</font>

902
00:37:28,829 --> 00:37:33,720
the<font color="#E5E5E5"> startup data store</font><font color="#CCCCCC"> which is</font><font color="#E5E5E5"> also</font>

903
00:37:31,170 --> 00:37:35,490
<font color="#CCCCCC">optional which is likely</font><font color="#E5E5E5"> something that</font>

904
00:37:33,720 --> 00:37:38,220
you would now and then copy you're

905
00:37:35,490 --> 00:37:41,578
running configuration into because if

906
00:37:38,220 --> 00:37:43,348
your box<font color="#CCCCCC"> cold or warm restarts</font><font color="#E5E5E5"> that's</font>

907
00:37:41,579 --> 00:37:46,380
where it's<font color="#CCCCCC"> going to pick its con its</font>

908
00:37:43,349 --> 00:37:49,289
<font color="#E5E5E5">content from so those are the three</font>

909
00:37:46,380 --> 00:37:51,630
conceptual<font color="#CCCCCC"> databases that Netcom kind of</font>

910
00:37:49,289 --> 00:37:53,849
describes where both candidate and

911
00:37:51,630 --> 00:37:55,109
startup are optional<font color="#E5E5E5"> and running of</font>

912
00:37:53,849 --> 00:38:00,210
course<font color="#CCCCCC"> you can't have box without</font>

913
00:37:55,109 --> 00:38:03,650
running capabilities this is really also

914
00:38:00,210 --> 00:38:07,200
<font color="#E5E5E5">a very profound thing with</font><font color="#CCCCCC"> navcom right</font>

915
00:38:03,650 --> 00:38:08,970
when you<font color="#CCCCCC"> open up a net concession</font><font color="#E5E5E5"> both</font>

916
00:38:07,200 --> 00:38:12,089
sides both<font color="#CCCCCC"> the client and</font><font color="#E5E5E5"> the server</font>

917
00:38:08,970 --> 00:38:13,230
<font color="#E5E5E5">will expose its capabilities what the</font>

918
00:38:12,089 --> 00:38:15,450
client<font color="#E5E5E5"> says is actually not very</font>

919
00:38:13,230 --> 00:38:17,759
interesting<font color="#CCCCCC"> what the server says is</font>

920
00:38:15,450 --> 00:38:20,368
<font color="#E5E5E5">actually what is interesting so</font>

921
00:38:17,759 --> 00:38:22,740
capabilities<font color="#E5E5E5"> is basically a way for the</font>

922
00:38:20,369 --> 00:38:25,289
<font color="#CCCCCC">box to describe what it can do</font><font color="#E5E5E5"> both in</font>

923
00:38:22,740 --> 00:38:28,200
<font color="#E5E5E5">terms of protocol protocol extensions</font>

924
00:38:25,289 --> 00:38:29,910
<font color="#CCCCCC">but</font><font color="#E5E5E5"> also which data models and versions</font>

925
00:38:28,200 --> 00:38:31,319
and<font color="#E5E5E5"> deviations of the data modes that</font>

926
00:38:29,910 --> 00:38:32,410
they support so this<font color="#E5E5E5"> is the way for the</font>

927
00:38:31,319 --> 00:38:35,020
<font color="#E5E5E5">box to</font>

928
00:38:32,410 --> 00:38:38,710
hopefully in a complete fashion<font color="#E5E5E5"> describe</font>

929
00:38:35,020 --> 00:38:42,900
<font color="#E5E5E5">to the client how to talk</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> it and what</font>

930
00:38:38,710 --> 00:38:42,900
it's got available<font color="#E5E5E5"> for the client okay</font>

931
00:38:44,970 --> 00:38:50,200
and we really wanted<font color="#CCCCCC"> to make net Kampf</font>

932
00:38:48,190 --> 00:38:53,890
<font color="#E5E5E5">into a protocol</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you could implement</font>

933
00:38:50,200 --> 00:38:56,500
on very restricted<font color="#E5E5E5"> platforms so again</font>

934
00:38:53,890 --> 00:38:57,940
the mandatory set of operations the

935
00:38:56,500 --> 00:39:00,030
mandatory set of things<font color="#E5E5E5"> you have to</font>

936
00:38:57,940 --> 00:39:04,060
<font color="#E5E5E5">implement the claim net</font><font color="#CCCCCC"> called</font>

937
00:39:00,030 --> 00:39:06,280
capabilities is very very small<font color="#E5E5E5"> you can</font>

938
00:39:04,060 --> 00:39:08,500
actually have a running database<font color="#E5E5E5"> that</font>

939
00:39:06,280 --> 00:39:10,170
<font color="#E5E5E5">would require reboots</font><font color="#CCCCCC"> right so if you</font>

940
00:39:08,500 --> 00:39:13,270
have very<font color="#E5E5E5"> resource constrained</font>

941
00:39:10,170 --> 00:39:14,740
environments like your actuators and

942
00:39:13,270 --> 00:39:18,030
sensors<font color="#E5E5E5"> and things</font><font color="#CCCCCC"> like that there's</font>

943
00:39:14,740 --> 00:39:20,439
usually no reason for<font color="#E5E5E5"> being able to</font>

944
00:39:18,030 --> 00:39:21,820
<font color="#E5E5E5">manipulate the configuration but rather</font>

945
00:39:20,440 --> 00:39:24,850
change the configuration have the<font color="#CCCCCC"> box</font>

946
00:39:21,820 --> 00:39:28,600
reboot okay so<font color="#CCCCCC"> Netcom scales very</font><font color="#E5E5E5"> well</font>

947
00:39:24,850 --> 00:39:30,339
<font color="#E5E5E5">both up and down here so the common</font>

948
00:39:28,600 --> 00:39:32,200
operations<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> have the primary</font>

949
00:39:30,340 --> 00:39:34,810
verbs if you like the<font color="#E5E5E5"> primary features</font>

950
00:39:32,200 --> 00:39:37,060
of the Netcom<font color="#CCCCCC"> protocol so get is the</font>

951
00:39:34,810 --> 00:39:39,250
word<font color="#E5E5E5"> that you would use</font><font color="#CCCCCC"> to fetch the</font>

952
00:39:37,060 --> 00:39:41,440
entire or a subset of the data<font color="#E5E5E5"> set of</font>

953
00:39:39,250 --> 00:39:43,180
what's<font color="#CCCCCC"> running</font><font color="#E5E5E5"> in a box of course you</font>

954
00:39:41,440 --> 00:39:45,190
can filter for<font color="#E5E5E5"> things but get will give</font>

955
00:39:43,180 --> 00:39:48,430
you both state data operational data and

956
00:39:45,190 --> 00:39:51,700
configuration<font color="#CCCCCC"> data you have get config</font>

957
00:39:48,430 --> 00:39:54,190
which will fetch<font color="#E5E5E5"> only</font><font color="#CCCCCC"> the configuration</font>

958
00:39:51,700 --> 00:39:56,379
parameters<font color="#E5E5E5"> so if you're doing a backup</font>

959
00:39:54,190 --> 00:39:57,700
or if you're<font color="#CCCCCC"> doing a rollback</font><font color="#E5E5E5"> or setting</font>

960
00:39:56,380 --> 00:39:59,830
up<font color="#E5E5E5"> for a rollback you would use get</font>

961
00:39:57,700 --> 00:40:01,240
config because it's something that<font color="#E5E5E5"> net</font>

962
00:39:59,830 --> 00:40:03,220
<font color="#CCCCCC">conf will tell you that you can take</font>

963
00:40:01,240 --> 00:40:05,290
this<font color="#E5E5E5"> content that</font><font color="#CCCCCC"> I'm giving you</font><font color="#E5E5E5"> here</font>

964
00:40:03,220 --> 00:40:07,270
<font color="#E5E5E5">from</font><font color="#CCCCCC"> the server put it to the side and</font>

965
00:40:05,290 --> 00:40:11,080
then you can<font color="#E5E5E5"> use that as the content of</font>

966
00:40:07,270 --> 00:40:13,390
a later<font color="#E5E5E5"> edit config okay so it's always</font>

967
00:40:11,080 --> 00:40:14,890
the case<font color="#E5E5E5"> that the content of a get</font>

968
00:40:13,390 --> 00:40:18,879
config is something that you can try and

969
00:40:14,890 --> 00:40:20,350
<font color="#CCCCCC">put back on the device later</font><font color="#E5E5E5"> edit config</font>

970
00:40:18,880 --> 00:40:21,640
is the verb<font color="#CCCCCC"> to actually edit the</font>

971
00:40:20,350 --> 00:40:23,830
configuration<font color="#E5E5E5"> again there are many</font>

972
00:40:21,640 --> 00:40:25,660
versions of variants of<font color="#E5E5E5"> this depending</font>

973
00:40:23,830 --> 00:40:27,730
on<font color="#E5E5E5"> which databases you</font><font color="#CCCCCC"> have and we'll</font>

974
00:40:25,660 --> 00:40:29,379
talk about<font color="#E5E5E5"> that in the next</font><font color="#CCCCCC"> session we</font>

975
00:40:27,730 --> 00:40:31,450
have<font color="#CCCCCC"> cockpit config which is what you</font>

976
00:40:29,380 --> 00:40:34,540
use<font color="#CCCCCC"> to copy</font><font color="#E5E5E5"> content between the</font>

977
00:40:31,450 --> 00:40:36,790
databases<font color="#E5E5E5"> or actually</font><font color="#CCCCCC"> also from URLs</font><font color="#E5E5E5"> so</font>

978
00:40:34,540 --> 00:40:39,190
if you want<font color="#E5E5E5"> to do things like copy this</font>

979
00:40:36,790 --> 00:40:41,460
configuration<font color="#E5E5E5"> from a</font><font color="#CCCCCC"> TFTP server or HTTP</font>

980
00:40:39,190 --> 00:40:43,020
server<font color="#E5E5E5"> you would use the copy config</font>

981
00:40:41,460 --> 00:40:45,930
operation

982
00:40:43,020 --> 00:40:49,830
<font color="#CCCCCC">delete config is what you use to</font><font color="#E5E5E5"> delete</font>

983
00:40:45,930 --> 00:40:54,629
subsets of data<font color="#E5E5E5"> or configuration data in</font>

984
00:40:49,830 --> 00:40:56,670
any of the databases<font color="#E5E5E5"> discard changes</font><font color="#CCCCCC"> is</font>

985
00:40:54,630 --> 00:40:58,650
something that's tied<font color="#E5E5E5"> to the optional</font>

986
00:40:56,670 --> 00:41:00,360
candidate database it's a way of<font color="#E5E5E5"> saying</font>

987
00:40:58,650 --> 00:41:03,660
that whatever outstanding changes I've

988
00:41:00,360 --> 00:41:05,790
made to<font color="#CCCCCC"> the candidate database remove</font>

989
00:41:03,660 --> 00:41:08,640
them and take the candidate database

990
00:41:05,790 --> 00:41:11,009
into sync<font color="#E5E5E5"> with running it's part of the</font>

991
00:41:08,640 --> 00:41:13,730
set of operations<font color="#CCCCCC"> that you would do if</font>

992
00:41:11,010 --> 00:41:16,140
you're<font color="#CCCCCC"> using locking and transactions</font>

993
00:41:13,730 --> 00:41:19,950
<font color="#CCCCCC">fourth we are looking</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> locking</font>

994
00:41:16,140 --> 00:41:22,140
structure for the initial<font color="#CCCCCC"> Netcom</font><font color="#E5E5E5"> data or</font>

995
00:41:19,950 --> 00:41:24,480
the Netcom protocol is<font color="#CCCCCC"> very crude either</font>

996
00:41:22,140 --> 00:41:25,950
you lock the<font color="#CCCCCC"> entire database</font><font color="#E5E5E5"> or you</font>

997
00:41:24,480 --> 00:41:29,700
don't<font color="#E5E5E5"> lock the entire</font><font color="#CCCCCC"> database there is</font>

998
00:41:25,950 --> 00:41:32,009
<font color="#E5E5E5">no at this point useful more</font>

999
00:41:29,700 --> 00:41:33,299
fine-grained looking turns out<font color="#E5E5E5"> that this</font>

1000
00:41:32,010 --> 00:41:36,330
<font color="#E5E5E5">is that's a very very challenging</font>

1001
00:41:33,300 --> 00:41:39,240
proposal and we are<font color="#E5E5E5"> kind of working on</font>

1002
00:41:36,330 --> 00:41:41,910
<font color="#CCCCCC">it but for</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> locking is on the whole</font>

1003
00:41:39,240 --> 00:41:44,759
database or not and the big tough part

1004
00:41:41,910 --> 00:41:47,790
with this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> young as we will see</font>

1005
00:41:44,760 --> 00:41:51,780
allows for references across<font color="#CCCCCC"> datasets</font>

1006
00:41:47,790 --> 00:41:54,600
<font color="#E5E5E5">and it's very easy</font><font color="#CCCCCC"> to build yang models</font>

1007
00:41:51,780 --> 00:41:56,010
that would not allow<font color="#CCCCCC"> you to do very</font>

1008
00:41:54,600 --> 00:41:58,259
fine-grained locking<font color="#E5E5E5"> because you would</font>

1009
00:41:56,010 --> 00:42:00,320
then look things that were<font color="#CCCCCC"> referenced</font>

1010
00:41:58,260 --> 00:42:03,300
and the referee at the<font color="#E5E5E5"> same time or</font>

1011
00:42:00,320 --> 00:42:05,160
partial locks covering partial sets of

1012
00:42:03,300 --> 00:42:07,440
these references<font color="#CCCCCC"> it gets really really</font>

1013
00:42:05,160 --> 00:42:11,190
tricky<font color="#E5E5E5"> so for now we have to live with</font>

1014
00:42:07,440 --> 00:42:13,620
all<font color="#CCCCCC"> or</font><font color="#E5E5E5"> nothing locking so we of course</font>

1015
00:42:11,190 --> 00:42:16,260
we have the commit operation<font color="#E5E5E5"> commit</font>

1016
00:42:13,620 --> 00:42:18,509
literally takes the<font color="#CCCCCC"> data that's in the</font>

1017
00:42:16,260 --> 00:42:20,580
candidate data store and turns it into

1018
00:42:18,510 --> 00:42:23,280
the<font color="#E5E5E5"> running data store</font>

1019
00:42:20,580 --> 00:42:24,810
it requires<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you have the candidate</font>

1020
00:42:23,280 --> 00:42:29,130
<font color="#E5E5E5">data store</font><font color="#CCCCCC"> obviously so it's tied to</font>

1021
00:42:24,810 --> 00:42:31,860
<font color="#E5E5E5">that to that feature and of course you</font>

1022
00:42:29,130 --> 00:42:33,930
can also do a<font color="#CCCCCC"> cancel commit</font><font color="#E5E5E5"> so we'll go</font>

1023
00:42:31,860 --> 00:42:36,270
<font color="#CCCCCC">through that as well</font><font color="#E5E5E5"> commit can be done</font>

1024
00:42:33,930 --> 00:42:39,299
in a timed<font color="#CCCCCC"> fashion so</font><font color="#E5E5E5"> you can say things</font>

1025
00:42:36,270 --> 00:42:41,580
<font color="#E5E5E5">like commit this to the data store to</font>

1026
00:42:39,300 --> 00:42:43,670
<font color="#E5E5E5">the running data store and wait for a</font>

1027
00:42:41,580 --> 00:42:46,830
confirmed commit and if I'm not<font color="#CCCCCC"> back</font>

1028
00:42:43,670 --> 00:42:48,750
<font color="#E5E5E5">inside</font><font color="#CCCCCC"> of a number of</font><font color="#E5E5E5"> seconds rollback</font>

1029
00:42:46,830 --> 00:42:50,580
<font color="#E5E5E5">so that's also a</font><font color="#CCCCCC"> fundamental part of the</font>

1030
00:42:48,750 --> 00:42:52,950
two-phase coming<font color="#E5E5E5"> right but if you want</font>

1031
00:42:50,580 --> 00:42:55,269
to<font color="#E5E5E5"> cancel that commit before the timer</font>

1032
00:42:52,950 --> 00:42:59,169
expires<font color="#CCCCCC"> you use the cancel committed</font>

1033
00:42:55,269 --> 00:43:01,299
operation<font color="#CCCCCC"> Skiba management and this</font><font color="#E5E5E5"> is</font>

1034
00:42:59,170 --> 00:43:03,099
again<font color="#E5E5E5"> also a fundamental</font><font color="#CCCCCC"> thing right as</font>

1035
00:43:01,299 --> 00:43:05,049
part of the monitoring capability

1036
00:43:03,099 --> 00:43:06,880
<font color="#E5E5E5">there's something called get schema so</font>

1037
00:43:05,049 --> 00:43:09,400
if you think<font color="#E5E5E5"> about the fact that the</font>

1038
00:43:06,880 --> 00:43:12,450
device<font color="#E5E5E5"> will expose to the client during</font>

1039
00:43:09,400 --> 00:43:15,309
<font color="#E5E5E5">its initial hello exchange the</font>

1040
00:43:12,450 --> 00:43:17,649
capabilities that<font color="#CCCCCC"> it implements</font><font color="#E5E5E5"> in terms</font>

1041
00:43:15,309 --> 00:43:19,569
of the<font color="#E5E5E5"> yang modules that implements it</font>

1042
00:43:17,650 --> 00:43:22,029
is up to<font color="#CCCCCC"> the client then to say okay I</font>

1043
00:43:19,569 --> 00:43:24,249
actually have<font color="#E5E5E5"> all these yang models so I</font>

1044
00:43:22,029 --> 00:43:26,469
understand what it's doing here<font color="#CCCCCC"> but that</font>

1045
00:43:24,249 --> 00:43:28,629
one<font color="#E5E5E5"> is new and I haven't seen it before</font>

1046
00:43:26,469 --> 00:43:31,150
<font color="#E5E5E5">so we would use get schema to actually</font>

1047
00:43:28,630 --> 00:43:33,700
ask the network element itself<font color="#E5E5E5"> to send</font>

1048
00:43:31,150 --> 00:43:36,369
back the<font color="#E5E5E5"> yang or XML schema model for</font>

1049
00:43:33,700 --> 00:43:38,348
that particular capability<font color="#E5E5E5"> might also be</font>

1050
00:43:36,369 --> 00:43:40,749
<font color="#E5E5E5">the case that</font><font color="#CCCCCC"> you reboot a router</font><font color="#E5E5E5"> or</font>

1051
00:43:38,349 --> 00:43:43,450
switch<font color="#E5E5E5"> with a new set</font><font color="#CCCCCC"> of features</font><font color="#E5E5E5"> new</font>

1052
00:43:40,749 --> 00:43:45,160
firmware<font color="#CCCCCC"> and the yang models aren't</font><font color="#E5E5E5"> new</font>

1053
00:43:43,450 --> 00:43:47,200
but<font color="#CCCCCC"> there's a new version</font><font color="#E5E5E5"> let's say of</font>

1054
00:43:45,160 --> 00:43:49,058
the interface configuration yang module

1055
00:43:47,200 --> 00:43:51,669
and you would realize that<font color="#E5E5E5"> what you have</font>

1056
00:43:49,059 --> 00:43:53,289
on disk is now<font color="#E5E5E5"> updated and you</font><font color="#CCCCCC"> would use</font>

1057
00:43:51,670 --> 00:43:56,170
the get schema operation to fetch the

1058
00:43:53,289 --> 00:43:57,940
network<font color="#E5E5E5"> it is again a very</font><font color="#CCCCCC"> powerful part</font>

1059
00:43:56,170 --> 00:44:00,609
<font color="#E5E5E5">or potentially a very powerful part of</font>

1060
00:43:57,940 --> 00:44:02,739
<font color="#E5E5E5">the</font><font color="#CCCCCC"> discovery mechanism of standardized</font>

1061
00:44:00,609 --> 00:44:05,109
<font color="#E5E5E5">hopefully</font><font color="#CCCCCC"> standardize network so when</font>

1062
00:44:02,739 --> 00:44:07,299
you find a<font color="#E5E5E5"> new device you open up a net</font>

1063
00:44:05,109 --> 00:44:08,920
<font color="#CCCCCC">confession to it and you discover the</font>

1064
00:44:07,299 --> 00:44:11,200
capability so<font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of matching</font><font color="#E5E5E5"> on</font>

1065
00:44:08,920 --> 00:44:12,700
product vendor name and product version

1066
00:44:11,200 --> 00:44:14,649
right<font color="#E5E5E5"> you would discover the</font>

1067
00:44:12,700 --> 00:44:16,749
capabilities described by the protocol

1068
00:44:14,650 --> 00:44:19,989
and<font color="#E5E5E5"> the yang modules described in the</font>

1069
00:44:16,749 --> 00:44:22,118
protocol<font color="#E5E5E5"> so no more matching on vendor</font>

1070
00:44:19,989 --> 00:44:24,549
ID and no more matching on firmware

1071
00:44:22,119 --> 00:44:26,589
<font color="#E5E5E5">revision you</font><font color="#CCCCCC"> would rather</font><font color="#E5E5E5"> look for what</font>

1072
00:44:24,549 --> 00:44:28,569
features does<font color="#CCCCCC"> it expose and what are the</font>

1073
00:44:26,589 --> 00:44:30,940
versions<font color="#E5E5E5"> of the standard hopefully and</font>

1074
00:44:28,569 --> 00:44:33,390
also vendor specific yang<font color="#CCCCCC"> Mo's that you</font>

1075
00:44:30,940 --> 00:44:33,390
would discover

1076
00:44:35,710 --> 00:44:40,570
<font color="#E5E5E5">all right so anatomy</font><font color="#CCCCCC"> of net concessions</font>

1077
00:44:39,280 --> 00:44:42,970
on the left side you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the very</font>

1078
00:44:40,570 --> 00:44:46,420
ambitious<font color="#CCCCCC"> net concession someone with</font>

1079
00:44:42,970 --> 00:44:48,279
very<font color="#E5E5E5"> ambitious way of thinking about how</font>

1080
00:44:46,420 --> 00:44:50,230
<font color="#CCCCCC">to do things</font><font color="#E5E5E5"> you would of course do the</font>

1081
00:44:48,280 --> 00:44:52,300
<font color="#CCCCCC">hello-hello which is mandatory</font>

1082
00:44:50,230 --> 00:44:54,250
you<font color="#E5E5E5"> would probably lock lock the running</font>

1083
00:44:52,300 --> 00:44:55,960
and<font color="#E5E5E5"> the candidate database you would</font>

1084
00:44:54,250 --> 00:44:58,089
discard<font color="#E5E5E5"> the</font><font color="#CCCCCC"> changes on the candidates</font>

1085
00:44:55,960 --> 00:44:59,950
<font color="#E5E5E5">you know that you're starting afresh</font><font color="#CCCCCC"> you</font>

1086
00:44:58,089 --> 00:45:02,230
would<font color="#CCCCCC"> edit the config on the candidate</font>

1087
00:44:59,950 --> 00:45:04,089
<font color="#E5E5E5">you would probably commit confirmed and</font>

1088
00:45:02,230 --> 00:45:05,980
you would<font color="#E5E5E5"> probably go and do some tests</font>

1089
00:45:04,089 --> 00:45:07,779
while the confirming timeout is running

1090
00:45:05,980 --> 00:45:10,839
<font color="#E5E5E5">when you're happy</font><font color="#CCCCCC"> with everything you</font>

1091
00:45:07,780 --> 00:45:12,730
confirm the commit<font color="#E5E5E5"> and you copy running</font>

1092
00:45:10,839 --> 00:45:15,609
to start up you unlock the candidate<font color="#E5E5E5"> and</font>

1093
00:45:12,730 --> 00:45:17,890
<font color="#E5E5E5">the running and you're done a fairly</font>

1094
00:45:15,609 --> 00:45:20,799
watertight set of operations<font color="#CCCCCC"> that</font>

1095
00:45:17,890 --> 00:45:22,690
<font color="#CCCCCC">actually covers</font><font color="#E5E5E5"> many of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> errors and</font>

1096
00:45:20,800 --> 00:45:25,300
<font color="#CCCCCC">the kind of failure cases that we see in</font>

1097
00:45:22,690 --> 00:45:26,619
traditional<font color="#E5E5E5"> configuration management but</font>

1098
00:45:25,300 --> 00:45:28,869
on the other hand of things maybe you're

1099
00:45:26,619 --> 00:45:31,359
running<font color="#CCCCCC"> something</font><font color="#E5E5E5"> the very low power and</font>

1100
00:45:28,869 --> 00:45:33,580
<font color="#E5E5E5">all you need to</font><font color="#CCCCCC"> do in this case</font><font color="#E5E5E5"> is to</font>

1101
00:45:31,359 --> 00:45:35,348
accept the hello exchange and<font color="#E5E5E5"> you send</font>

1102
00:45:33,580 --> 00:45:39,310
an edit config directly into the<font color="#E5E5E5"> running</font>

1103
00:45:35,349 --> 00:45:41,830
database and off you go<font color="#E5E5E5"> so at times we</font>

1104
00:45:39,310 --> 00:45:44,500
<font color="#CCCCCC">hear feedback</font><font color="#E5E5E5"> saying that net conf is</font>

1105
00:45:41,830 --> 00:45:47,230
too bloated<font color="#CCCCCC"> or too ambitious but again</font>

1106
00:45:44,500 --> 00:45:49,869
the<font color="#E5E5E5"> point here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> as a protocol it</font>

1107
00:45:47,230 --> 00:45:51,849
literally scales to both<font color="#E5E5E5"> ends to very</font>

1108
00:45:49,869 --> 00:45:54,460
ambitious<font color="#E5E5E5"> transaction-oriented networks</font>

1109
00:45:51,849 --> 00:45:56,500
<font color="#E5E5E5">all the way down to very small kind of</font>

1110
00:45:54,460 --> 00:45:58,720
firmware<font color="#E5E5E5"> or very small low-power devices</font>

1111
00:45:56,500 --> 00:46:01,119
<font color="#CCCCCC">it all depends on</font><font color="#E5E5E5"> the way you implement</font>

1112
00:45:58,720 --> 00:46:05,830
<font color="#E5E5E5">it so the protocol doesn't force you</font>

1113
00:46:01,119 --> 00:46:07,000
into any of these<font color="#E5E5E5"> models so distributed</font>

1114
00:46:05,830 --> 00:46:09,279
transactions this<font color="#E5E5E5"> is where it gets</font>

1115
00:46:07,000 --> 00:46:10,869
<font color="#E5E5E5">really interested interesting right you</font>

1116
00:46:09,280 --> 00:46:13,450
want to<font color="#E5E5E5"> do something across three boxes</font>

1117
00:46:10,869 --> 00:46:15,210
<font color="#E5E5E5">you would connect to</font><font color="#CCCCCC"> our one or</font><font color="#E5E5E5"> two or</font>

1118
00:46:13,450 --> 00:46:17,439
three<font color="#CCCCCC"> in this case you would lock them</font>

1119
00:46:15,210 --> 00:46:20,440
you would edit<font color="#E5E5E5"> the candidate database</font>

1120
00:46:17,440 --> 00:46:21,790
with a commit to the<font color="#E5E5E5"> timeout and this is</font>

1121
00:46:20,440 --> 00:46:23,290
a game<font color="#CCCCCC"> where you do assurance checks</font>

1122
00:46:21,790 --> 00:46:25,480
maybe you want<font color="#E5E5E5"> to see that a traceroute</font>

1123
00:46:23,290 --> 00:46:27,520
goes through this new VPN<font color="#E5E5E5"> you do</font><font color="#CCCCCC"> burning</font>

1124
00:46:25,480 --> 00:46:30,550
tests from MF services<font color="#E5E5E5"> while they</font>

1125
00:46:27,520 --> 00:46:31,839
confirmed<font color="#E5E5E5"> timeout is running or actually</font>

1126
00:46:30,550 --> 00:46:33,880
you make sure that<font color="#CCCCCC"> you didn't configure</font>

1127
00:46:31,839 --> 00:46:36,400
away your manageability IP address which

1128
00:46:33,880 --> 00:46:38,440
is<font color="#CCCCCC"> another classic right</font><font color="#E5E5E5"> if any of these</font>

1129
00:46:36,400 --> 00:46:41,320
fails<font color="#CCCCCC"> you can tear down</font><font color="#E5E5E5"> the session and</font>

1130
00:46:38,440 --> 00:46:43,089
the boxes will<font color="#CCCCCC"> rollback</font><font color="#E5E5E5"> themselves or if</font>

1131
00:46:41,320 --> 00:46:45,099
you lose the session<font color="#E5E5E5"> the boxes will</font>

1132
00:46:43,089 --> 00:46:47,410
<font color="#E5E5E5">rollback themselves or nothing to do</font>

1133
00:46:45,099 --> 00:46:48,049
<font color="#E5E5E5">software wise</font><font color="#CCCCCC"> on the client</font><font color="#E5E5E5"> side or</font>

1134
00:46:47,410 --> 00:46:50,509
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> on the</font>

1135
00:46:48,049 --> 00:46:52,038
the<font color="#E5E5E5"> management platform side when you're</font>

1136
00:46:50,509 --> 00:46:53,079
done with<font color="#E5E5E5"> it or everything looks good</font>

1137
00:46:52,039 --> 00:46:56,059
<font color="#E5E5E5">your intest</font>

1138
00:46:53,079 --> 00:46:57,439
<font color="#CCCCCC">return success</font><font color="#E5E5E5"> you confirm the commit</font>

1139
00:46:56,059 --> 00:47:00,890
copy to<font color="#E5E5E5"> start up and you release the</font>

1140
00:46:57,439 --> 00:47:02,538
logs so<font color="#E5E5E5"> anything that happens</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> here</font>

1141
00:47:00,890 --> 00:47:05,989
again this<font color="#E5E5E5"> is very close</font><font color="#CCCCCC"> to a very</font>

1142
00:47:02,539 --> 00:47:08,059
<font color="#CCCCCC">traditional</font><font color="#E5E5E5"> two-phase commit in</font><font color="#CCCCCC"> the</font>

1143
00:47:05,989 --> 00:47:10,969
truly in<font color="#E5E5E5"> the computer science database</font>

1144
00:47:08,059 --> 00:47:17,989
world<font color="#E5E5E5"> it covers most of the failure</font>

1145
00:47:10,969 --> 00:47:20,150
<font color="#CCCCCC">cases that are known in this domain okay</font>

1146
00:47:17,989 --> 00:47:22,759
<font color="#CCCCCC">number of common</font><font color="#E5E5E5"> F confuse cases of</font>

1147
00:47:20,150 --> 00:47:26,150
course all of<font color="#E5E5E5"> these things do apply</font>

1148
00:47:22,759 --> 00:47:28,219
mostly to<font color="#CCCCCC"> to</font><font color="#E5E5E5"> day-to-day operations and</font>

1149
00:47:26,150 --> 00:47:31,969
it's something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we would expect from</font>

1150
00:47:28,219 --> 00:47:35,829
<font color="#E5E5E5">an</font><font color="#CCCCCC"> ambitious protocol any questions</font>

1151
00:47:31,969 --> 00:47:40,059
about the Netcom protocol<font color="#E5E5E5"> any questions</font>

1152
00:47:35,829 --> 00:47:40,059
we all know<font color="#CCCCCC"> at</font><font color="#E5E5E5"> the level that's good</font>

1153
00:47:41,180 --> 00:47:46,710
let's<font color="#E5E5E5"> go into yang so again yang data</font>

1154
00:47:45,120 --> 00:47:49,170
<font color="#E5E5E5">modeling language</font><font color="#CCCCCC"> tree-structured</font>

1155
00:47:46,710 --> 00:47:51,120
we<font color="#E5E5E5"> wanted to be very close to the device</font>

1156
00:47:49,170 --> 00:47:53,610
instrumentation so a lot of<font color="#E5E5E5"> time spent</font>

1157
00:47:51,120 --> 00:47:54,839
with<font color="#E5E5E5"> people</font><font color="#CCCCCC"> under the hoods of</font><font color="#E5E5E5"> routing</font>

1158
00:47:53,610 --> 00:47:57,390
and switching platforms<font color="#CCCCCC"> to make sure</font>

1159
00:47:54,840 --> 00:47:59,690
that the construction yang reflects

1160
00:47:57,390 --> 00:48:02,870
what's<font color="#E5E5E5"> running both in proprietary</font>

1161
00:47:59,690 --> 00:48:05,130
implementations and<font color="#E5E5E5"> also in kind of the</font>

1162
00:48:02,870 --> 00:48:07,080
commercially available<font color="#E5E5E5"> routing stacks</font>

1163
00:48:05,130 --> 00:48:09,330
and<font color="#CCCCCC"> what</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> you all right so it's</font><font color="#E5E5E5"> it's</font>

1164
00:48:07,080 --> 00:48:13,290
<font color="#CCCCCC">in</font><font color="#E5E5E5"> fairly well harmonized with the</font>

1165
00:48:09,330 --> 00:48:14,940
<font color="#CCCCCC">running code that's out there it's got a</font>

1166
00:48:13,290 --> 00:48:16,440
lot<font color="#CCCCCC"> of features</font><font color="#E5E5E5"> right it's a full-blown</font>

1167
00:48:14,940 --> 00:48:19,110
language it's not<font color="#E5E5E5"> something that you</font>

1168
00:48:16,440 --> 00:48:21,030
would<font color="#CCCCCC"> use to express processes or</font>

1169
00:48:19,110 --> 00:48:22,380
something that<font color="#E5E5E5"> would give you</font><font color="#CCCCCC"> Turing</font>

1170
00:48:21,030 --> 00:48:24,240
completeness or anything<font color="#E5E5E5"> like that again</font>

1171
00:48:22,380 --> 00:48:28,230
<font color="#E5E5E5">it's a it's a data modeling language</font>

1172
00:48:24,240 --> 00:48:30,029
right<font color="#E5E5E5"> it is actually it doesn't it's</font>

1173
00:48:28,230 --> 00:48:31,410
it's protocol mapping independence<font color="#E5E5E5"> you</font>

1174
00:48:30,030 --> 00:48:33,300
<font color="#E5E5E5">know people are doing quite exciting</font>

1175
00:48:31,410 --> 00:48:35,370
things with<font color="#E5E5E5"> it of course it came out you</font>

1176
00:48:33,300 --> 00:48:37,530
<font color="#E5E5E5">know we designed it</font><font color="#CCCCCC"> to work hand-in-hand</font>

1177
00:48:35,370 --> 00:48:39,750
with<font color="#CCCCCC"> Netcom</font><font color="#E5E5E5"> well we know of several</font>

1178
00:48:37,530 --> 00:48:42,480
<font color="#CCCCCC">implementations of which I've worked</font>

1179
00:48:39,750 --> 00:48:44,670
with at least<font color="#CCCCCC"> two that allows yang to</font>

1180
00:48:42,480 --> 00:48:47,610
drive not<font color="#CCCCCC"> only on</font><font color="#E5E5E5"> at conf interface but</font>

1181
00:48:44,670 --> 00:48:50,010
actually see<font color="#CCCCCC"> allies as an MP we have</font>

1182
00:48:47,610 --> 00:48:52,110
<font color="#E5E5E5">rest comp that I mentioned here</font><font color="#CCCCCC"> webview</font>

1183
00:48:50,010 --> 00:48:54,420
<font color="#CCCCCC">is right so it's our experience</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

1184
00:48:52,110 --> 00:48:56,400
it's definitely rich enough that you're

1185
00:48:54,420 --> 00:48:59,120
<font color="#E5E5E5">not tied to</font><font color="#CCCCCC"> Netcom alone</font><font color="#E5E5E5"> I would</font><font color="#CCCCCC"> even</font>

1186
00:48:56,400 --> 00:49:01,320
argue that the power of<font color="#E5E5E5"> Yang</font><font color="#CCCCCC"> is that it</font>

1187
00:48:59,120 --> 00:49:03,779
transcends<font color="#CCCCCC"> that comfy if you like it</font><font color="#E5E5E5"> it</font>

1188
00:49:01,320 --> 00:49:06,120
actually can be<font color="#E5E5E5"> applied with</font><font color="#CCCCCC"> many other</font>

1189
00:49:03,780 --> 00:49:08,310
protocols so if<font color="#CCCCCC"> Netcom for some reason</font>

1190
00:49:06,120 --> 00:49:10,470
doesn't<font color="#E5E5E5"> really take hold that doesn't</font>

1191
00:49:08,310 --> 00:49:12,299
matter that<font color="#E5E5E5"> yang is useless it is</font><font color="#CCCCCC"> the</font>

1192
00:49:10,470 --> 00:49:14,700
best<font color="#CCCCCC"> stab</font><font color="#E5E5E5"> that we have for a</font><font color="#CCCCCC"> game</font>

1193
00:49:12,300 --> 00:49:16,890
context specific data<font color="#E5E5E5"> modeling language</font>

1194
00:49:14,700 --> 00:49:21,330
to express configuration<font color="#CCCCCC"> and state data</font>

1195
00:49:16,890 --> 00:49:23,160
<font color="#CCCCCC">and network elements it's got a module</font>

1196
00:49:21,330 --> 00:49:24,630
content structure<font color="#E5E5E5"> to it</font>

1197
00:49:23,160 --> 00:49:26,460
and for people<font color="#CCCCCC"> with a background in</font>

1198
00:49:24,630 --> 00:49:28,440
miebs will realize that<font color="#CCCCCC"> yes we are</font>

1199
00:49:26,460 --> 00:49:30,180
<font color="#E5E5E5">borrowed quite heavily from there of</font>

1200
00:49:28,440 --> 00:49:32,670
course<font color="#E5E5E5"> you got a header information</font><font color="#CCCCCC"> got</font>

1201
00:49:30,180 --> 00:49:35,970
metadata<font color="#E5E5E5"> like who's the author what's</font>

1202
00:49:32,670 --> 00:49:37,140
the what's the version what are the

1203
00:49:35,970 --> 00:49:39,330
prefixes for this

1204
00:49:37,140 --> 00:49:41,730
we got imports and includes of course

1205
00:49:39,330 --> 00:49:43,259
<font color="#E5E5E5">especially</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> things like types you</font>

1206
00:49:41,730 --> 00:49:46,080
don't want to<font color="#E5E5E5"> reinvent what an ipv4</font>

1207
00:49:43,260 --> 00:49:47,760
address is over and over you<font color="#CCCCCC"> can have</font>

1208
00:49:46,080 --> 00:49:49,259
your<font color="#E5E5E5"> local type definitions if there's</font>

1209
00:49:47,760 --> 00:49:50,970
something in<font color="#E5E5E5"> your module that requires</font>

1210
00:49:49,260 --> 00:49:52,270
that and you don't want<font color="#CCCCCC"> to use the base</font>

1211
00:49:50,970 --> 00:49:55,029
types and the

1212
00:49:52,270 --> 00:49:56,500
<font color="#CCCCCC">publicly-available</font><font color="#E5E5E5"> types and then comes</font>

1213
00:49:55,030 --> 00:49:58,870
usually<font color="#CCCCCC"> the meat of</font><font color="#E5E5E5"> it which is the</font>

1214
00:49:56,500 --> 00:50:01,000
<font color="#E5E5E5">configuration operational data sets or</font>

1215
00:49:58,870 --> 00:50:03,549
data declarations which is the<font color="#E5E5E5"> structure</font>

1216
00:50:01,000 --> 00:50:05,590
syntax and semantics of what<font color="#CCCCCC"> you can do</font>

1217
00:50:03,550 --> 00:50:07,960
with a device implementing<font color="#E5E5E5"> this year.i</font>

1218
00:50:05,590 --> 00:50:10,240
module<font color="#E5E5E5"> and towards the</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> we usually</font>

1219
00:50:07,960 --> 00:50:12,150
<font color="#E5E5E5">group the</font><font color="#CCCCCC"> rpcs as I mentioned the pings</font>

1220
00:50:10,240 --> 00:50:14,830
or reboots the<font color="#CCCCCC"> side-effect based</font>

1221
00:50:12,150 --> 00:50:16,330
operations<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> notification</font>

1222
00:50:14,830 --> 00:50:19,299
declarations I mentioned that<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is</font>

1223
00:50:16,330 --> 00:50:22,180
<font color="#E5E5E5">again is an asynchronous way for</font><font color="#CCCCCC"> Netcom</font>

1224
00:50:19,300 --> 00:50:24,580
servers to send<font color="#E5E5E5"> notifications in kind</font><font color="#CCCCCC"> of</font>

1225
00:50:22,180 --> 00:50:28,029
a<font color="#CCCCCC"> pub/sub model</font><font color="#E5E5E5"> so that's the overall</font>

1226
00:50:24,580 --> 00:50:30,160
<font color="#E5E5E5">structure of a yang module as I</font>

1227
00:50:28,030 --> 00:50:32,050
mentioned the header metadata important

1228
00:50:30,160 --> 00:50:33,339
to understand here or one thing that I'd

1229
00:50:32,050 --> 00:50:35,320
like<font color="#E5E5E5"> to point out is the revision</font>

1230
00:50:33,340 --> 00:50:38,230
statement<font color="#E5E5E5"> that is actually quite</font>

1231
00:50:35,320 --> 00:50:40,060
<font color="#E5E5E5">important and heavily</font><font color="#CCCCCC"> used in</font><font color="#E5E5E5"> yang it's</font>

1232
00:50:38,230 --> 00:50:42,970
actually supposed<font color="#E5E5E5"> to also be</font><font color="#CCCCCC"> reflected</font>

1233
00:50:40,060 --> 00:50:45,040
in the<font color="#E5E5E5"> file</font><font color="#CCCCCC"> name of a yang module so in</font>

1234
00:50:42,970 --> 00:50:48,430
<font color="#E5E5E5">this case we can see</font><font color="#CCCCCC"> that this module</font><font color="#E5E5E5"> is</font>

1235
00:50:45,040 --> 00:50:51,250
named<font color="#CCCCCC"> Acme box and it's a revision 2014</font>

1236
00:50:48,430 --> 00:50:55,440
<font color="#CCCCCC">412 so in this case that file is</font>

1237
00:50:51,250 --> 00:50:58,900
supposed to be<font color="#E5E5E5"> called Acme box at 2014 0</font>

1238
00:50:55,440 --> 00:51:00,460
<font color="#CCCCCC">412 don't yak</font><font color="#E5E5E5"> right because</font><font color="#CCCCCC"> that would</font>

1239
00:50:58,900 --> 00:51:04,810
allow<font color="#CCCCCC"> me to also see from</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> outside</font>

1240
00:51:00,460 --> 00:51:06,550
which version it<font color="#E5E5E5"> is of and the relation</font>

1241
00:51:04,810 --> 00:51:09,940
statements are also supposed to<font color="#E5E5E5"> include</font>

1242
00:51:06,550 --> 00:51:12,940
a description and there<font color="#E5E5E5"> are firm</font><font color="#CCCCCC"> advice</font>

1243
00:51:09,940 --> 00:51:15,040
<font color="#CCCCCC">on when you have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually bump</font><font color="#E5E5E5"> the</font>

1244
00:51:12,940 --> 00:51:17,680
revision because<font color="#CCCCCC"> the changes in the yang</font>

1245
00:51:15,040 --> 00:51:20,380
file are such that instrumentation code

1246
00:51:17,680 --> 00:51:22,359
can't really upgrade or downgrade using

1247
00:51:20,380 --> 00:51:23,550
this and<font color="#E5E5E5"> another thing that's important</font>

1248
00:51:22,360 --> 00:51:25,690
<font color="#CCCCCC">here is that</font><font color="#E5E5E5"> we make heavy use of</font>

1249
00:51:23,550 --> 00:51:28,060
namespaces and<font color="#CCCCCC"> this is of</font><font color="#E5E5E5"> course</font>

1250
00:51:25,690 --> 00:51:30,450
borrowed from<font color="#E5E5E5"> the XML world and you will</font>

1251
00:51:28,060 --> 00:51:33,220
<font color="#E5E5E5">see tie ins to this but the Acme box</font>

1252
00:51:30,450 --> 00:51:35,859
<font color="#E5E5E5">namespace here</font><font color="#CCCCCC"> I should probably use</font>

1253
00:51:33,220 --> 00:51:37,270
<font color="#E5E5E5">something like example.com here but this</font>

1254
00:51:35,860 --> 00:51:40,990
<font color="#E5E5E5">is a string that's supposed to</font><font color="#CCCCCC"> be</font>

1255
00:51:37,270 --> 00:51:44,320
globally and galactically unique to this

1256
00:51:40,990 --> 00:51:46,060
module<font color="#E5E5E5"> combined</font><font color="#CCCCCC"> with its version so it</font>

1257
00:51:44,320 --> 00:51:50,610
should uniquely<font color="#E5E5E5"> allow people to</font>

1258
00:51:46,060 --> 00:51:50,610
reference this module using a<font color="#E5E5E5"> namespace</font>

1259
00:51:51,000 --> 00:51:55,600
so data definition<font color="#E5E5E5"> so I'm gonna kind of</font>

1260
00:51:54,160 --> 00:51:57,460
pick<font color="#CCCCCC"> up the speed a little bit here</font>

1261
00:51:55,600 --> 00:51:59,620
<font color="#E5E5E5">leave statements this is probably the</font>

1262
00:51:57,460 --> 00:52:01,780
bread and<font color="#E5E5E5"> butter right this defines a</font>

1263
00:51:59,620 --> 00:52:03,700
single value of a<font color="#E5E5E5"> particular type and</font>

1264
00:52:01,780 --> 00:52:05,220
<font color="#E5E5E5">kind of the nature of a leaf is that it</font>

1265
00:52:03,700 --> 00:52:06,839
holds<font color="#E5E5E5"> no children</font>

1266
00:52:05,220 --> 00:52:09,270
so it would be things<font color="#CCCCCC"> like the IP</font>

1267
00:52:06,839 --> 00:52:12,089
address of an interface<font color="#E5E5E5"> the</font><font color="#CCCCCC"> netmask</font><font color="#E5E5E5"> of</font>

1268
00:52:09,270 --> 00:52:15,119
an interface things like that right it

1269
00:52:12,089 --> 00:52:17,819
got types<font color="#E5E5E5"> we can declare</font><font color="#CCCCCC"> things to be</font>

1270
00:52:15,119 --> 00:52:20,490
mandatory<font color="#CCCCCC"> you will also</font><font color="#E5E5E5"> see here that</font><font color="#CCCCCC"> it</font>

1271
00:52:17,819 --> 00:52:22,259
has<font color="#E5E5E5"> a config true which means</font><font color="#CCCCCC"> that the</font>

1272
00:52:20,490 --> 00:52:23,848
top leaf as like config true which<font color="#CCCCCC"> means</font>

1273
00:52:22,260 --> 00:52:26,849
that this<font color="#E5E5E5"> is configuration data so it</font>

1274
00:52:23,849 --> 00:52:29,190
will be sent<font color="#CCCCCC"> back on a get config while</font>

1275
00:52:26,849 --> 00:52:30,810
the second leaf here<font color="#E5E5E5"> CPU temperature</font>

1276
00:52:29,190 --> 00:52:33,450
<font color="#E5E5E5">obviously</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> that you</font>

1277
00:52:30,810 --> 00:52:35,369
<font color="#E5E5E5">would change</font><font color="#CCCCCC"> using a client</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> it's</font>

1278
00:52:33,450 --> 00:52:38,040
<font color="#E5E5E5">something is that's read-only so that's</font>

1279
00:52:35,369 --> 00:52:39,780
config false<font color="#E5E5E5"> and you can also see that</font>

1280
00:52:38,040 --> 00:52:42,089
we can express<font color="#CCCCCC"> things like units here</font>

1281
00:52:39,780 --> 00:52:46,250
but again<font color="#E5E5E5"> leaves is at the end of the of</font>

1282
00:52:42,089 --> 00:52:48,390
the branch notes no children<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that I</font>

1283
00:52:46,250 --> 00:52:50,490
mentioned some of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> attributes there</font>

1284
00:52:48,390 --> 00:52:53,279
are more I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> point some</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

1285
00:52:50,490 --> 00:52:57,598
more important<font color="#CCCCCC"> ones outs more important</font>

1286
00:52:53,280 --> 00:52:59,790
<font color="#E5E5E5">ones out later</font><font color="#CCCCCC"> leave lists</font><font color="#E5E5E5"> so multiple</font>

1287
00:52:57,599 --> 00:53:02,280
values of a<font color="#E5E5E5"> particular type things like</font>

1288
00:52:59,790 --> 00:53:04,770
if you allow for<font color="#CCCCCC"> many IP addresses to</font>

1289
00:53:02,280 --> 00:53:08,130
<font color="#CCCCCC">the interface then you would have</font><font color="#E5E5E5"> a leaf</font>

1290
00:53:04,770 --> 00:53:11,550
list of type IP address right in this

1291
00:53:08,130 --> 00:53:14,040
case domain search type string<font color="#E5E5E5"> there is</font>

1292
00:53:11,550 --> 00:53:15,390
ordering to<font color="#CCCCCC"> this</font><font color="#E5E5E5"> right some leaf lists</font>

1293
00:53:14,040 --> 00:53:18,300
need ordering so<font color="#E5E5E5"> you can either her</font>

1294
00:53:15,390 --> 00:53:21,629
system<font color="#E5E5E5"> ordered or user ordered depends</font>

1295
00:53:18,300 --> 00:53:23,130
on the nature of<font color="#E5E5E5"> the data itself</font><font color="#CCCCCC"> and of</font>

1296
00:53:21,630 --> 00:53:25,650
course there are<font color="#E5E5E5"> operations then in</font>

1297
00:53:23,130 --> 00:53:27,990
<font color="#E5E5E5">order list to insert things first last</font>

1298
00:53:25,650 --> 00:53:32,250
or before or after particular members of

1299
00:53:27,990 --> 00:53:35,879
the list container statements<font color="#E5E5E5"> or just</font>

1300
00:53:32,250 --> 00:53:37,950
that they contain<font color="#E5E5E5"> things and it doesn't</font>

1301
00:53:35,880 --> 00:53:39,420
carry any<font color="#E5E5E5"> semantic value except for the</font>

1302
00:53:37,950 --> 00:53:42,060
fact<font color="#E5E5E5"> that containers can have something</font>

1303
00:53:39,420 --> 00:53:44,490
<font color="#E5E5E5">called presence so for example if you</font>

1304
00:53:42,060 --> 00:53:46,680
have a container<font color="#CCCCCC"> in this case yeah</font>

1305
00:53:44,490 --> 00:53:48,450
that's good it's a it's an<font color="#E5E5E5"> SSH container</font>

1306
00:53:46,680 --> 00:53:50,129
<font color="#CCCCCC">and it's got a</font><font color="#E5E5E5"> precedence statement</font>

1307
00:53:48,450 --> 00:53:52,980
saying<font color="#CCCCCC"> that if you find this container</font>

1308
00:53:50,130 --> 00:53:55,859
in<font color="#CCCCCC"> the configuration that means that</font>

1309
00:53:52,980 --> 00:53:57,450
this box<font color="#CCCCCC"> actually has SSH enabled it</font>

1310
00:53:55,859 --> 00:54:00,150
also means<font color="#CCCCCC"> that if the SSH container</font>

1311
00:53:57,450 --> 00:54:02,368
does not exist<font color="#E5E5E5"> you can check you can use</font>

1312
00:54:00,150 --> 00:54:03,839
<font color="#CCCCCC">an F come</font><font color="#E5E5E5"> for existence checks it means</font>

1313
00:54:02,369 --> 00:54:06,510
that SSH for some reason is not

1314
00:54:03,839 --> 00:54:07,828
<font color="#E5E5E5">available</font><font color="#CCCCCC"> for this box</font><font color="#E5E5E5"> so it's a it's an</font>

1315
00:54:06,510 --> 00:54:12,960
optional container that carries some

1316
00:54:07,829 --> 00:54:15,390
semantic meaning<font color="#E5E5E5"> leasts</font><font color="#CCCCCC"> I guess after</font>

1317
00:54:12,960 --> 00:54:18,510
Leafs I guess<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the big construct here</font>

1318
00:54:15,390 --> 00:54:22,980
so list<font color="#E5E5E5"> is what what SNMP people</font>

1319
00:54:18,510 --> 00:54:26,610
would call a table it's it's definitely

1320
00:54:22,980 --> 00:54:29,490
it's a need<font color="#E5E5E5"> set of data or</font><font color="#CCCCCC"> there's a</font>

1321
00:54:26,610 --> 00:54:34,410
list for configuration lists a key is

1322
00:54:29,490 --> 00:54:36,870
actually<font color="#E5E5E5"> required if the list is in is</font>

1323
00:54:34,410 --> 00:54:39,480
not configuration you don't have to have

1324
00:54:36,870 --> 00:54:42,870
keys at all because<font color="#E5E5E5"> you might not be</font>

1325
00:54:39,480 --> 00:54:45,090
<font color="#E5E5E5">able to even key things into it so you</font>

1326
00:54:42,870 --> 00:54:46,410
might<font color="#E5E5E5"> be required to dump the</font><font color="#CCCCCC"> entire</font>

1327
00:54:45,090 --> 00:54:51,660
list<font color="#E5E5E5"> or the entire table</font><font color="#CCCCCC"> at the same</font>

1328
00:54:46,410 --> 00:54:54,390
<font color="#E5E5E5">time so putting things together of</font>

1329
00:54:51,660 --> 00:54:55,980
<font color="#E5E5E5">course this game will go into this</font><font color="#CCCCCC"> in</font>

1330
00:54:54,390 --> 00:54:58,680
much deeper detail in the<font color="#CCCCCC"> next session</font>

1331
00:54:55,980 --> 00:55:00,390
<font color="#CCCCCC">we can express again most of</font><font color="#E5E5E5"> the things</font>

1332
00:54:58,680 --> 00:55:04,049
that we've<font color="#CCCCCC"> found to</font><font color="#E5E5E5"> be true in network</font>

1333
00:55:00,390 --> 00:55:05,580
elements today<font color="#CCCCCC"> a number of constraints</font>

1334
00:55:04,050 --> 00:55:07,650
kind of semantic and syntactic

1335
00:55:05,580 --> 00:55:09,450
constraints attributes for<font color="#CCCCCC"> list and leaf</font>

1336
00:55:07,650 --> 00:55:11,910
<font color="#E5E5E5">list you can have Max and min elements</font>

1337
00:55:09,450 --> 00:55:13,770
of course<font color="#E5E5E5"> things like how many</font>

1338
00:55:11,910 --> 00:55:16,049
interfaces<font color="#E5E5E5"> or how many IP addresses to</font>

1339
00:55:13,770 --> 00:55:20,250
<font color="#E5E5E5">an interface can be expressed by max</font>

1340
00:55:16,050 --> 00:55:21,900
elements we can key things in different

1341
00:55:20,250 --> 00:55:23,820
<font color="#E5E5E5">ways and this</font><font color="#CCCCCC"> is where it gets</font><font color="#E5E5E5"> a little</font>

1342
00:55:21,900 --> 00:55:27,600
<font color="#E5E5E5">bit more interesting and again this will</font>

1343
00:55:23,820 --> 00:55:29,730
be also part<font color="#E5E5E5"> of the next session</font><font color="#CCCCCC"> the key</font>

1344
00:55:27,600 --> 00:55:31,799
field is of course as usual used to

1345
00:55:29,730 --> 00:55:33,990
<font color="#CCCCCC">specify exactly</font><font color="#E5E5E5"> which row we're talking</font>

1346
00:55:31,800 --> 00:55:36,450
about<font color="#E5E5E5"> or which member we're talking</font>

1347
00:55:33,990 --> 00:55:38,910
about<font color="#E5E5E5"> and we don't allow</font><font color="#CCCCCC"> two rows to</font>

1348
00:55:36,450 --> 00:55:43,290
have the same key values but there's

1349
00:55:38,910 --> 00:55:44,819
<font color="#E5E5E5">actually something called unique as well</font>

1350
00:55:43,290 --> 00:55:47,610
so you<font color="#E5E5E5"> can have a combination of keys</font>

1351
00:55:44,820 --> 00:55:50,130
and unique statements so what well keys

1352
00:55:47,610 --> 00:55:52,260
is the index<font color="#E5E5E5"> if you like unique is a</font>

1353
00:55:50,130 --> 00:55:55,350
semantic constraint that says<font color="#E5E5E5"> for this</font>

1354
00:55:52,260 --> 00:55:57,120
set of items or this set of leaves<font color="#E5E5E5"> they</font>

1355
00:55:55,350 --> 00:56:00,500
need to be unique among<font color="#E5E5E5"> the sets of</font>

1356
00:55:57,120 --> 00:56:00,500
members in this list

1357
00:56:04,410 --> 00:56:10,990
multiple keys<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so if you have</font>

1358
00:56:09,220 --> 00:56:14,529
multiple<font color="#CCCCCC"> keys in this case for</font><font color="#E5E5E5"> example</font>

1359
00:56:10,990 --> 00:56:16,720
<font color="#E5E5E5">IP prefix Paris on an interface</font><font color="#CCCCCC"> of</font>

1360
00:56:14,530 --> 00:56:18,369
course you can have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> ip with but</font>

1361
00:56:16,720 --> 00:56:19,930
with different<font color="#E5E5E5"> prefixes in some</font>

1362
00:56:18,369 --> 00:56:24,579
implementations<font color="#E5E5E5"> of interface managers</font>

1363
00:56:19,930 --> 00:56:26,290
<font color="#E5E5E5">right while in that case of</font><font color="#CCCCCC"> course only</font>

1364
00:56:24,579 --> 00:56:28,630
the<font color="#E5E5E5"> IP and certainly only the prefix</font>

1365
00:56:26,290 --> 00:56:30,790
would not be sufficient<font color="#CCCCCC"> to</font><font color="#E5E5E5"> express</font>

1366
00:56:28,630 --> 00:56:33,250
uniqueness<font color="#E5E5E5"> right so you can have</font>

1367
00:56:30,790 --> 00:56:35,500
multiple keys and basically a key

1368
00:56:33,250 --> 00:56:37,859
statement with multiple<font color="#CCCCCC"> Leafs in</font><font color="#E5E5E5"> it and</font>

1369
00:56:35,500 --> 00:56:41,200
the key order is significant right so

1370
00:56:37,859 --> 00:56:43,960
depending on whether the ordering is you

1371
00:56:41,200 --> 00:56:45,160
know<font color="#E5E5E5"> IP prefix or prefix IP we're going</font>

1372
00:56:43,960 --> 00:56:49,990
to show things differently<font color="#CCCCCC"> over the</font>

1373
00:56:45,160 --> 00:56:51,520
protocol leaf<font color="#CCCCCC"> refs this is something</font>

1374
00:56:49,990 --> 00:56:54,098
<font color="#CCCCCC">that database</font><font color="#E5E5E5"> people usually call</font>

1375
00:56:51,520 --> 00:56:57,609
<font color="#CCCCCC">foreign</font><font color="#E5E5E5"> keys it's a way of referencing</font>

1376
00:56:54,099 --> 00:57:02,799
<font color="#CCCCCC">from a particular part in the tree to an</font>

1377
00:56:57,609 --> 00:57:05,440
instance<font color="#E5E5E5"> in another part</font><font color="#CCCCCC"> of the tree</font><font color="#E5E5E5"> so</font>

1378
00:57:02,799 --> 00:57:07,480
a valid<font color="#E5E5E5"> leaf ref of course the entire</font>

1379
00:57:05,440 --> 00:57:09,430
concept<font color="#E5E5E5"> of a valid leaf ref is that</font>

1380
00:57:07,480 --> 00:57:12,640
there exists a value for whatever<font color="#E5E5E5"> it is</font>

1381
00:57:09,430 --> 00:57:15,549
pointing to or sets of valid values for

1382
00:57:12,640 --> 00:57:16,930
whatever it's pointing to so this

1383
00:57:15,549 --> 00:57:18,940
actually introduces a little bit of

1384
00:57:16,930 --> 00:57:21,910
ordering<font color="#E5E5E5"> so a good</font><font color="#CCCCCC"> example of this is</font>

1385
00:57:18,940 --> 00:57:24,010
for example<font color="#E5E5E5"> name security policies so</font>

1386
00:57:21,910 --> 00:57:25,720
name security policies can of course be

1387
00:57:24,010 --> 00:57:27,910
referenced<font color="#E5E5E5"> from configuration for</font>

1388
00:57:25,720 --> 00:57:31,359
example for interface context or<font color="#CCCCCC"> Earth</font>

1389
00:57:27,910 --> 00:57:33,730
contexts so by using leaf reps<font color="#E5E5E5"> here we</font>

1390
00:57:31,359 --> 00:57:37,630
can ensure that<font color="#CCCCCC"> if you're referencing</font><font color="#E5E5E5"> a</font>

1391
00:57:33,730 --> 00:57:39,849
name policy we check that<font color="#E5E5E5"> that name</font>

1392
00:57:37,630 --> 00:57:41,109
policy<font color="#CCCCCC"> actually exists so in order to</font>

1393
00:57:39,849 --> 00:57:43,750
reference it it needs to be created

1394
00:57:41,109 --> 00:57:45,339
<font color="#E5E5E5">first so if you're setting up a new</font>

1395
00:57:43,750 --> 00:57:48,040
policy<font color="#CCCCCC"> and I'm gonna</font><font color="#E5E5E5"> use it you have</font><font color="#CCCCCC"> to</font>

1396
00:57:45,339 --> 00:57:49,240
<font color="#E5E5E5">add the policy and then reference it of</font>

1397
00:57:48,040 --> 00:57:51,790
course<font color="#E5E5E5"> you can do it in a</font><font color="#CCCCCC"> single</font>

1398
00:57:49,240 --> 00:57:54,520
transaction<font color="#E5E5E5"> but it will don't allow you</font>

1399
00:57:51,790 --> 00:57:57,099
<font color="#E5E5E5">to reference</font><font color="#CCCCCC"> non existing policies so</font>

1400
00:57:54,520 --> 00:58:00,400
it's a nice<font color="#E5E5E5"> construct for referential</font>

1401
00:57:57,099 --> 00:58:02,589
integrity and also<font color="#E5E5E5"> doesn't well it</font>

1402
00:58:00,400 --> 00:58:04,990
allows<font color="#CCCCCC"> us to</font><font color="#E5E5E5"> avoid kind of dangling</font>

1403
00:58:02,589 --> 00:58:07,690
pointers which is not uncommon in<font color="#E5E5E5"> human</font>

1404
00:58:04,990 --> 00:58:09,520
to<font color="#CCCCCC"> machine interfaces</font><font color="#E5E5E5"> and it's also the</font>

1405
00:58:07,690 --> 00:58:11,920
case<font color="#CCCCCC"> then that you can't remove a</font>

1406
00:58:09,520 --> 00:58:12,849
security policy<font color="#E5E5E5"> that's being used</font>

1407
00:58:11,920 --> 00:58:14,140
somewhere<font color="#CCCCCC"> else</font>

1408
00:58:12,849 --> 00:58:14,650
I would<font color="#CCCCCC"> actually produce an error</font>

1409
00:58:14,140 --> 00:58:22,690
because

1410
00:58:14,650 --> 00:58:24,210
not valid<font color="#E5E5E5"> according</font><font color="#CCCCCC"> to the data model so</font>

1411
00:58:22,690 --> 00:58:26,290
in this case we have a<font color="#CCCCCC"> rip-roaring</font>

1412
00:58:24,210 --> 00:58:30,150
<font color="#CCCCCC">subsystem that has a list of leaves</font>

1413
00:58:26,290 --> 00:58:33,759
pointing to existing interfaces right so

1414
00:58:30,150 --> 00:58:39,010
the key being here that you can't<font color="#E5E5E5"> really</font>

1415
00:58:33,760 --> 00:58:40,810
for example remove an interface in this

1416
00:58:39,010 --> 00:58:43,030
<font color="#E5E5E5">case so if you were to try and remove</font>

1417
00:58:40,810 --> 00:58:45,490
the interface by a particular name using

1418
00:58:43,030 --> 00:58:46,960
configuration<font color="#E5E5E5"> means it would complain</font>

1419
00:58:45,490 --> 00:58:49,180
that that<font color="#CCCCCC"> would invalidate the rip</font>

1420
00:58:46,960 --> 00:58:54,820
configuration<font color="#E5E5E5"> right so this</font><font color="#CCCCCC"> is a this is</font>

1421
00:58:49,180 --> 00:58:56,589
a specific<font color="#CCCCCC"> example</font><font color="#E5E5E5"> of that and to make</font>

1422
00:58:54,820 --> 00:58:59,050
it<font color="#E5E5E5"> more interesting of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> at times</font>

1423
00:58:56,590 --> 00:59:01,480
you<font color="#CCCCCC"> have to reference</font><font color="#E5E5E5"> combinations of</font>

1424
00:58:59,050 --> 00:59:03,610
things<font color="#E5E5E5"> right</font><font color="#CCCCCC"> so for example for a</font>

1425
00:59:01,480 --> 00:59:06,210
particular in<font color="#E5E5E5"> these constructs we have a</font>

1426
00:59:03,610 --> 00:59:10,990
container called video that wants to

1427
00:59:06,210 --> 00:59:12,850
<font color="#E5E5E5">reference both an IP and a port pair so</font>

1428
00:59:10,990 --> 00:59:15,910
it<font color="#E5E5E5"> start to get interesting in the</font>

1429
00:59:12,850 --> 00:59:20,529
second path here but we want<font color="#E5E5E5"> to do is</font>

1430
00:59:15,910 --> 00:59:23,589
pin<font color="#E5E5E5"> this video parameters to an existing</font>

1431
00:59:20,530 --> 00:59:27,430
IP and port pair but not to any IP or

1432
00:59:23,590 --> 00:59:28,960
any port but the<font color="#E5E5E5"> pair so the first path</font>

1433
00:59:27,430 --> 00:59:32,350
here is pretty<font color="#CCCCCC"> straightforward</font>

1434
00:59:28,960 --> 00:59:34,390
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> slash</font><font color="#E5E5E5"> client / IP the second path</font>

1435
00:59:32,350 --> 00:59:37,299
is more intricate<font color="#CCCCCC"> right what it actually</font>

1436
00:59:34,390 --> 00:59:41,890
does<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that it says</font><font color="#E5E5E5"> I want to reference</font>

1437
00:59:37,300 --> 00:59:46,450
<font color="#E5E5E5">a list member under client that has the</font>

1438
00:59:41,890 --> 00:59:51,069
same<font color="#CCCCCC"> IP that</font><font color="#E5E5E5"> my sibling leaf has so it</font>

1439
00:59:46,450 --> 00:59:54,339
resolves the sibling leaf current VIP

1440
00:59:51,070 --> 00:59:57,520
<font color="#E5E5E5">current dot dot VIP port to mean</font>

1441
00:59:54,340 --> 01:00:03,460
<font color="#E5E5E5">whatever the VIP leaf points to and then</font>

1442
00:59:57,520 --> 01:00:05,800
pins its own value to that port yes it

1443
01:00:03,460 --> 01:00:07,270
takes<font color="#E5E5E5"> a little bit of thinking but</font><font color="#CCCCCC"> it's</font>

1444
01:00:05,800 --> 01:00:09,400
a clever construct<font color="#E5E5E5"> that would actually</font>

1445
01:00:07,270 --> 01:00:13,830
<font color="#CCCCCC">allow you to</font><font color="#E5E5E5"> then have multiple keys to</font>

1446
01:00:09,400 --> 01:00:13,830
single instances<font color="#E5E5E5"> in external lists</font>

1447
01:00:15,809 --> 01:00:21,849
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> and as I</font><font color="#E5E5E5"> mentioned we can</font><font color="#CCCCCC"> use XPath</font>

1448
01:00:19,150 --> 01:00:23,469
and there's actually the<font color="#E5E5E5"> concept of DVF</font>

1449
01:00:21,849 --> 01:00:25,660
here<font color="#E5E5E5"> which is also a</font><font color="#CCCCCC"> very powerful</font>

1450
01:00:23,469 --> 01:00:28,359
construct<font color="#CCCCCC"> you can take an XPath and you</font>

1451
01:00:25,660 --> 01:00:29,680
can<font color="#E5E5E5"> dear F the value and it reduces the</font>

1452
01:00:28,359 --> 01:00:32,949
complexity if you look at the left side

1453
01:00:29,680 --> 01:00:35,529
<font color="#E5E5E5">we actually</font><font color="#CCCCCC"> have a triple</font><font color="#E5E5E5"> pointer</font><font color="#CCCCCC"> so</font>

1454
01:00:32,949 --> 01:00:37,029
three different<font color="#CCCCCC"> or we did what we did in</font>

1455
01:00:35,529 --> 01:00:39,849
the<font color="#CCCCCC"> previous slide but now we're doing</font>

1456
01:00:37,029 --> 01:00:41,920
it<font color="#E5E5E5"> on three and by using D refs on the</font>

1457
01:00:39,849 --> 01:00:44,680
right side we<font color="#CCCCCC"> can make it a lot</font><font color="#E5E5E5"> easier</font>

1458
01:00:41,920 --> 01:00:46,869
<font color="#E5E5E5">to understand and kind of grasp</font><font color="#CCCCCC"> so</font>

1459
01:00:44,680 --> 01:00:50,078
that's why it's a good if<font color="#CCCCCC"> not if nothing</font>

1460
01:00:46,869 --> 01:00:52,329
else good syntactic sugar<font color="#E5E5E5"> and again this</font>

1461
01:00:50,079 --> 01:00:54,729
is still on the server side so this is

1462
01:00:52,329 --> 01:00:56,529
<font color="#CCCCCC">the part</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a yang model that we</font>

1463
01:00:54,729 --> 01:01:03,098
valid for a<font color="#E5E5E5"> particular</font><font color="#CCCCCC"> implementation</font>

1464
01:00:56,529 --> 01:01:05,469
right grouping of course this ties<font color="#E5E5E5"> into</font>

1465
01:01:03,099 --> 01:01:07,959
<font color="#E5E5E5">the reusability rights or groupings are</font>

1466
01:01:05,469 --> 01:01:11,949
kind of like include statements they're

1467
01:01:07,959 --> 01:01:13,930
used for<font color="#E5E5E5"> lumping together</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> sets in a</font>

1468
01:01:11,949 --> 01:01:17,589
<font color="#E5E5E5">name the fashion so you can use them</font>

1469
01:01:13,930 --> 01:01:19,089
later<font color="#CCCCCC"> so in this case address port pairs</font>

1470
01:01:17,589 --> 01:01:21,640
of course is an obvious thing<font color="#CCCCCC"> for</font>

1471
01:01:19,089 --> 01:01:24,160
<font color="#E5E5E5">grouping</font><font color="#CCCCCC"> and we can see on the</font><font color="#E5E5E5"> lower</font>

1472
01:01:21,640 --> 01:01:27,098
left<font color="#E5E5E5"> side how the container pier has a</font>

1473
01:01:24,160 --> 01:01:29,348
container destination that uses targets

1474
01:01:27,099 --> 01:01:31,959
<font color="#E5E5E5">and of course</font><font color="#CCCCCC"> targets is the name of the</font>

1475
01:01:29,349 --> 01:01:34,209
grouping<font color="#E5E5E5"> on top and of course you can</font>

1476
01:01:31,959 --> 01:01:37,180
use grouping<font color="#E5E5E5"> you can have several use of</font>

1477
01:01:34,209 --> 01:01:40,989
statements<font color="#CCCCCC"> uses statements on the same</font>

1478
01:01:37,180 --> 01:01:43,149
<font color="#E5E5E5">grouping so it's more a</font><font color="#CCCCCC"> matter of if you</font>

1479
01:01:40,989 --> 01:01:45,130
like modularizing or refactoring your

1480
01:01:43,150 --> 01:01:51,099
yang models into something that can<font color="#E5E5E5"> be</font>

1481
01:01:45,130 --> 01:01:53,319
<font color="#E5E5E5">consumed by people more easy</font><font color="#CCCCCC"> and you can</font>

1482
01:01:51,099 --> 01:01:55,299
do refines<font color="#E5E5E5"> so refines is a way of saying</font>

1483
01:01:53,319 --> 01:01:57,219
I like that grouping<font color="#E5E5E5"> but for the in this</font>

1484
01:01:55,299 --> 01:01:59,650
<font color="#E5E5E5">particular context I want to add stuff</font>

1485
01:01:57,219 --> 01:02:01,449
<font color="#E5E5E5">in this case we have something called a</font>

1486
01:01:59,650 --> 01:02:03,940
target grouping with an address<font color="#E5E5E5"> port</font>

1487
01:02:01,449 --> 01:02:06,190
pair but<font color="#E5E5E5"> the user on the right side says</font>

1488
01:02:03,940 --> 01:02:09,969
that<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> for the way we use this</font>

1489
01:02:06,190 --> 01:02:14,380
grouping in<font color="#E5E5E5"> HTTP we need to add a</font>

1490
01:02:09,969 --> 01:02:17,140
default<font color="#CCCCCC"> statement</font><font color="#E5E5E5"> to the target port so</font>

1491
01:02:14,380 --> 01:02:18,940
when we<font color="#CCCCCC"> use this for HTTP</font><font color="#E5E5E5"> we're going to</font>

1492
01:02:17,140 --> 01:02:21,160
add the fact<font color="#E5E5E5"> that the default port if</font>

1493
01:02:18,940 --> 01:02:23,880
nothing<font color="#CCCCCC"> else is is</font><font color="#E5E5E5"> mentioned here is</font>

1494
01:02:21,160 --> 01:02:23,879
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be 80</font>

1495
01:02:25,240 --> 01:02:30,470
important include<font color="#CCCCCC"> okay so just</font><font color="#E5E5E5"> quickly</font>

1496
01:02:28,130 --> 01:02:32,240
here<font color="#CCCCCC"> so it's all</font><font color="#E5E5E5"> around namespaces right</font>

1497
01:02:30,470 --> 01:02:34,790
so you'd have module<font color="#E5E5E5"> X which has a</font>

1498
01:02:32,240 --> 01:02:38,509
namespace<font color="#CCCCCC"> and the big difference between</font>

1499
01:02:34,790 --> 01:02:41,750
imports<font color="#E5E5E5"> and includes is that imports</font>

1500
01:02:38,510 --> 01:02:45,470
<font color="#E5E5E5">pick datasets from other namespaces</font>

1501
01:02:41,750 --> 01:02:47,120
so you import them by reference<font color="#E5E5E5"> which</font>

1502
01:02:45,470 --> 01:02:49,549
also assumes that you<font color="#CCCCCC"> have access to</font>

1503
01:02:47,120 --> 01:02:51,170
<font color="#E5E5E5">that namespace</font><font color="#CCCCCC"> during</font><font color="#E5E5E5"> your compile step</font>

1504
01:02:49,550 --> 01:02:55,090
or your build step or<font color="#E5E5E5"> whatever you're</font>

1505
01:02:51,170 --> 01:02:57,860
doing this while includes is more like

1506
01:02:55,090 --> 01:02:59,990
more like<font color="#E5E5E5"> actually include statements in</font>

1507
01:02:57,860 --> 01:03:02,680
<font color="#E5E5E5">in in for example</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> C language</font>

1508
01:02:59,990 --> 01:03:06,229
it sucks data into your current

1509
01:03:02,680 --> 01:03:08,629
namespace<font color="#CCCCCC"> right so it typically be</font>

1510
01:03:06,230 --> 01:03:10,520
something to keep you from<font color="#E5E5E5"> having super</font>

1511
01:03:08,630 --> 01:03:13,400
<font color="#E5E5E5">large files maybe you want to factor out</font>

1512
01:03:10,520 --> 01:03:15,040
things<font color="#E5E5E5"> in separate files</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you want</font>

1513
01:03:13,400 --> 01:03:18,560
them<font color="#E5E5E5"> to end up in the same namespace</font>

1514
01:03:15,040 --> 01:03:20,509
<font color="#E5E5E5">while includes</font><font color="#CCCCCC"> or import is when you</font>

1515
01:03:18,560 --> 01:03:24,290
want to<font color="#E5E5E5"> borrow for example data types</font>

1516
01:03:20,510 --> 01:03:28,820
from existing modules or the<font color="#CCCCCC"> existing</font>

1517
01:03:24,290 --> 01:03:35,000
models everybody is kind<font color="#CCCCCC"> of nodding</font>

1518
01:03:28,820 --> 01:03:36,230
<font color="#E5E5E5">that's good so sub modules again as we</font>

1519
01:03:35,000 --> 01:03:39,320
<font color="#E5E5E5">mentioned it's something that you would</font>

1520
01:03:36,230 --> 01:03:41,180
then<font color="#CCCCCC"> include</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> submerged you know what</font>

1521
01:03:39,320 --> 01:03:42,560
they belong to so they actually<font color="#E5E5E5"> point</font>

1522
01:03:41,180 --> 01:03:44,870
that out in<font color="#E5E5E5"> their in their own</font>

1523
01:03:42,560 --> 01:03:47,020
declaration it's through using<font color="#E5E5E5"> the</font>

1524
01:03:44,870 --> 01:03:49,910
belongs to statement because you<font color="#E5E5E5"> can't</font>

1525
01:03:47,020 --> 01:03:55,820
import sub modules you can<font color="#E5E5E5"> only include</font>

1526
01:03:49,910 --> 01:03:59,120
sub modules<font color="#CCCCCC"> okay a little</font><font color="#E5E5E5"> bit of types</font>

1527
01:03:55,820 --> 01:04:01,940
here<font color="#E5E5E5"> so actually most of the type work</font>

1528
01:03:59,120 --> 01:04:04,069
that went into yang came from the<font color="#CCCCCC"> sm ing</font>

1529
01:04:01,940 --> 01:04:06,800
<font color="#E5E5E5">crowd so the people that</font><font color="#CCCCCC"> had worked on a</font>

1530
01:04:04,070 --> 01:04:09,830
new and<font color="#E5E5E5"> improved version</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> SMI types</font>

1531
01:04:06,800 --> 01:04:11,930
can<font color="#CCCCCC"> be a horrible process we were very</font>

1532
01:04:09,830 --> 01:04:15,140
<font color="#CCCCCC">happy to take most</font><font color="#E5E5E5"> of their work and</font>

1533
01:04:11,930 --> 01:04:17,210
<font color="#CCCCCC">just put it in there right so we have</font>

1534
01:04:15,140 --> 01:04:18,740
base types and<font color="#CCCCCC"> drive types so base types</font>

1535
01:04:17,210 --> 01:04:21,230
is of course part<font color="#E5E5E5"> of the yang language</font>

1536
01:04:18,740 --> 01:04:24,229
itself derived types is something that

1537
01:04:21,230 --> 01:04:27,140
the users would start with base types

1538
01:04:24,230 --> 01:04:29,240
and then derive things out of<font color="#E5E5E5"> and then</font>

1539
01:04:27,140 --> 01:04:32,960
<font color="#E5E5E5">we of course</font><font color="#CCCCCC"> we continuously publish</font>

1540
01:04:29,240 --> 01:04:35,359
what we hope are useful<font color="#E5E5E5"> type modules so</font>

1541
01:04:32,960 --> 01:04:37,130
for example of<font color="#E5E5E5"> course we have the Ayana</font>

1542
01:04:35,360 --> 01:04:39,560
interface set

1543
01:04:37,130 --> 01:04:42,520
as a yang module that<font color="#E5E5E5"> you can download</font>

1544
01:04:39,560 --> 01:04:45,080
<font color="#E5E5E5">from ion</font><font color="#CCCCCC"> dianna website to the</font><font color="#E5E5E5"> Ayana</font>

1545
01:04:42,520 --> 01:04:47,240
<font color="#E5E5E5">environment and of course we have a</font>

1546
01:04:45,080 --> 01:04:49,910
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> basic yang types for</font>

1547
01:04:47,240 --> 01:04:52,430
networking<font color="#E5E5E5"> so things like ipv4 address</font>

1548
01:04:49,910 --> 01:04:54,529
like fully qualified domain<font color="#E5E5E5"> name and an</font>

1549
01:04:52,430 --> 01:04:57,950
ipv6 address which by the way<font color="#E5E5E5"> were</font>

1550
01:04:54,530 --> 01:05:00,290
surprisingly hard to<font color="#CCCCCC"> define</font><font color="#E5E5E5"> in a</font><font color="#CCCCCC"> reggae</font>

1551
01:04:57,950 --> 01:05:03,919
<font color="#E5E5E5">X is already available so no need</font><font color="#CCCCCC"> to</font>

1552
01:05:00,290 --> 01:05:05,990
reinvent<font color="#E5E5E5"> those wheels the usual suspects</font>

1553
01:05:03,920 --> 01:05:08,300
<font color="#E5E5E5">of course integers decimals</font><font color="#CCCCCC"> strings</font>

1554
01:05:05,990 --> 01:05:11,930
<font color="#E5E5E5">enumerations nothing that would surprise</font>

1555
01:05:08,300 --> 01:05:13,550
<font color="#E5E5E5">anyone I think</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> the leaf ref we</font>

1556
01:05:11,930 --> 01:05:15,859
mentioned<font color="#E5E5E5"> that is its own type and we</font>

1557
01:05:13,550 --> 01:05:17,540
have less strict references like

1558
01:05:15,860 --> 01:05:19,850
<font color="#E5E5E5">identity refs that we will cover in</font><font color="#CCCCCC"> a</font>

1559
01:05:17,540 --> 01:05:21,170
<font color="#CCCCCC">little bit as well and</font><font color="#E5E5E5"> of course</font><font color="#CCCCCC"> the</font>

1560
01:05:19,850 --> 01:05:22,819
empty type for things<font color="#E5E5E5"> that doesn't</font>

1561
01:05:21,170 --> 01:05:26,420
<font color="#E5E5E5">contain anything but maybe it's a</font>

1562
01:05:22,820 --> 01:05:28,220
<font color="#CCCCCC">precedence container you can</font><font color="#E5E5E5"> define your</font>

1563
01:05:26,420 --> 01:05:29,660
<font color="#E5E5E5">new types in this case of course we</font>

1564
01:05:28,220 --> 01:05:32,029
<font color="#E5E5E5">wanted a percentage type based on</font>

1565
01:05:29,660 --> 01:05:34,879
unsigned integer<font color="#E5E5E5"> 16 but we had a max</font>

1566
01:05:32,030 --> 01:05:37,730
range of<font color="#E5E5E5"> 0 200 so 16 of course is a</font>

1567
01:05:34,880 --> 01:05:40,610
little<font color="#CCCCCC"> bit wide for it we describe it as</font>

1568
01:05:37,730 --> 01:05:42,380
percentage<font color="#E5E5E5"> and then you can just use</font>

1569
01:05:40,610 --> 01:05:46,220
<font color="#CCCCCC">that type in the same</font><font color="#E5E5E5"> name space without</font>

1570
01:05:42,380 --> 01:05:48,320
any prefixes for it<font color="#E5E5E5"> you can do</font>

1571
01:05:46,220 --> 01:05:50,899
restrictions<font color="#E5E5E5"> which is very useful</font>

1572
01:05:48,320 --> 01:05:52,850
<font color="#E5E5E5">especially for string types</font><font color="#CCCCCC"> you can have</font>

1573
01:05:50,900 --> 01:05:55,940
this young ranges<font color="#E5E5E5"> so in this case we</font>

1574
01:05:52,850 --> 01:05:57,710
have a base in 32 type that is

1575
01:05:55,940 --> 01:06:01,640
restricted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the value space between 1</font>

1576
01:05:57,710 --> 01:06:04,100
and<font color="#E5E5E5"> 4 and 10 to 20 we have</font><font color="#CCCCCC"> native</font><font color="#E5E5E5"> type</font>

1577
01:06:01,640 --> 01:06:07,250
limits<font color="#CCCCCC"> available so in the second one</font>

1578
01:06:04,100 --> 01:06:09,110
here derived in 32 we can have 11<font color="#E5E5E5"> to max</font>

1579
01:06:07,250 --> 01:06:12,650
so<font color="#CCCCCC"> you don't have</font><font color="#E5E5E5"> to go back and</font>

1580
01:06:09,110 --> 01:06:15,740
remember<font color="#E5E5E5"> what in 32 max was for strings</font>

1581
01:06:12,650 --> 01:06:17,630
you can both constrain the length if<font color="#E5E5E5"> you</font>

1582
01:06:15,740 --> 01:06:20,509
<font color="#E5E5E5">like the lexical length of things so in</font>

1583
01:06:17,630 --> 01:06:22,670
this case 1 to 255<font color="#E5E5E5"> but also have</font>

1584
01:06:20,510 --> 01:06:26,180
patterns<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> use reg excerpts here</font>

1585
01:06:22,670 --> 01:06:28,130
<font color="#E5E5E5">they're surprisingly</font><font color="#CCCCCC"> powerful concept</font>

1586
01:06:26,180 --> 01:06:31,100
<font color="#E5E5E5">right an important thing here again is</font>

1587
01:06:28,130 --> 01:06:34,010
to make use of this for<font color="#E5E5E5"> offline</font>

1588
01:06:31,100 --> 01:06:36,470
<font color="#E5E5E5">validation so before you send things you</font>

1589
01:06:34,010 --> 01:06:38,690
can consult the<font color="#CCCCCC"> yang file for</font><font color="#E5E5E5"> all the</font>

1590
01:06:36,470 --> 01:06:41,450
data that<font color="#CCCCCC"> you that your that</font><font color="#E5E5E5"> you want to</font>

1591
01:06:38,690 --> 01:06:42,020
send and match it<font color="#CCCCCC"> for example with a</font>

1592
01:06:41,450 --> 01:06:43,220
regex

1593
01:06:42,020 --> 01:06:44,810
engine to make<font color="#E5E5E5"> sure that whatever you're</font>

1594
01:06:43,220 --> 01:06:46,669
<font color="#CCCCCC">about to</font><font color="#E5E5E5"> send is actually something that</font>

1595
01:06:44,810 --> 01:06:49,520
<font color="#E5E5E5">stands a reasonable chance of being</font>

1596
01:06:46,670 --> 01:06:50,900
<font color="#CCCCCC">accepted it also again takes a lot of</font>

1597
01:06:49,520 --> 01:06:53,990
<font color="#E5E5E5">pressure</font><font color="#CCCCCC"> off of the</font>

1598
01:06:50,900 --> 01:06:56,779
implementation on the<font color="#E5E5E5"> network element</font>

1599
01:06:53,990 --> 01:07:00,890
side<font color="#E5E5E5"> right because again these are</font><font color="#CCCCCC"> very</font>

1600
01:06:56,779 --> 01:07:04,490
<font color="#E5E5E5">well defined and</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> well structured</font>

1601
01:07:00,890 --> 01:07:07,098
<font color="#E5E5E5">I'd say constraint elements which means</font>

1602
01:07:04,490 --> 01:07:10,038
that this fits<font color="#E5E5E5"> very well in a data model</font>

1603
01:07:07,099 --> 01:07:11,779
driven<font color="#CCCCCC"> environment so for</font><font color="#E5E5E5"> the vendors</font>

1604
01:07:10,039 --> 01:07:14,510
<font color="#CCCCCC">that have implemented</font><font color="#E5E5E5"> or invested in</font>

1605
01:07:11,779 --> 01:07:17,240
having<font color="#E5E5E5"> their own board management</font>

1606
01:07:14,510 --> 01:07:18,740
framework<font color="#E5E5E5"> being data model driven this</font>

1607
01:07:17,240 --> 01:07:23,779
reduces<font color="#E5E5E5"> the amount of coding quite</font>

1608
01:07:18,740 --> 01:07:26,149
significantly unions of course<font color="#E5E5E5"> one of</font>

1609
01:07:23,779 --> 01:07:29,210
its member types<font color="#E5E5E5"> so in this case for</font>

1610
01:07:26,150 --> 01:07:32,839
example you<font color="#CCCCCC"> would have a threshold</font><font color="#E5E5E5"> that</font>

1611
01:07:29,210 --> 01:07:34,490
<font color="#CCCCCC">could be either a</font><font color="#E5E5E5"> percentage or disabled</font>

1612
01:07:32,839 --> 01:07:39,410
<font color="#E5E5E5">so</font><font color="#CCCCCC"> you can have different</font><font color="#E5E5E5"> types in the</font>

1613
01:07:34,490 --> 01:07:41,479
<font color="#CCCCCC">Union obviously</font><font color="#E5E5E5"> I mentioned the common</font>

1614
01:07:39,410 --> 01:07:43,220
<font color="#E5E5E5">yang types yes we got good coverage for</font>

1615
01:07:41,480 --> 01:07:44,690
<font color="#E5E5E5">most things</font><font color="#CCCCCC"> you would you would expect</font>

1616
01:07:43,220 --> 01:07:48,348
all the way from physical address or MAC

1617
01:07:44,690 --> 01:07:50,900
address to IP address that's a union<font color="#E5E5E5"> of</font>

1618
01:07:48,349 --> 01:07:53,630
ipv4<font color="#E5E5E5"> and ipv6</font><font color="#CCCCCC"> so again no need</font><font color="#E5E5E5"> to</font>

1619
01:07:50,900 --> 01:07:58,520
reinvent<font color="#CCCCCC"> things here all were well</font>

1620
01:07:53,630 --> 01:08:00,589
defined in RFC<font color="#E5E5E5"> sixty</font><font color="#CCCCCC"> 21 or PCs and</font>

1621
01:07:58,520 --> 01:08:04,700
notifications<font color="#E5E5E5"> okay so I mentioned</font>

1622
01:08:00,589 --> 01:08:06,529
<font color="#E5E5E5">actions with</font><font color="#CCCCCC"> side-effects so an RPC has</font>

1623
01:08:04,700 --> 01:08:09,799
a set<font color="#E5E5E5"> of inputs</font><font color="#CCCCCC"> and a set of</font><font color="#E5E5E5"> outputs</font>

1624
01:08:06,529 --> 01:08:11,420
<font color="#E5E5E5">that are defined</font><font color="#CCCCCC"> in yang okay so you can</font>

1625
01:08:09,799 --> 01:08:13,819
of course<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> like a call signature</font>

1626
01:08:11,420 --> 01:08:15,680
if you like or we still for soap<font color="#E5E5E5"> or</font>

1627
01:08:13,819 --> 01:08:17,988
whatever you want to compare<font color="#E5E5E5"> with</font><font color="#CCCCCC"> it</font>

1628
01:08:15,680 --> 01:08:20,448
describes<font color="#E5E5E5"> what it's what we expect going</font>

1629
01:08:17,988 --> 01:08:23,448
<font color="#E5E5E5">in and it will tell you how it</font><font color="#CCCCCC"> will</font>

1630
01:08:20,448 --> 01:08:24,979
respond of<font color="#E5E5E5"> course the input in this case</font>

1631
01:08:23,448 --> 01:08:27,799
is a<font color="#E5E5E5"> very simple thing it's just an</font>

1632
01:08:24,979 --> 01:08:29,209
image<font color="#CCCCCC"> it's a single leaf</font><font color="#E5E5E5"> right but you</font>

1633
01:08:27,799 --> 01:08:31,339
can of course<font color="#E5E5E5"> have more structured</font>

1634
01:08:29,210 --> 01:08:32,810
inputs right to your<font color="#E5E5E5"> heart's content</font>

1635
01:08:31,339 --> 01:08:35,330
<font color="#E5E5E5">depending</font><font color="#CCCCCC"> on what this thing is</font><font color="#E5E5E5"> doing</font>

1636
01:08:32,810 --> 01:08:37,159
<font color="#CCCCCC">and the same thing with the output in</font>

1637
01:08:35,330 --> 01:08:38,839
this<font color="#CCCCCC"> case it's a simple status string</font>

1638
01:08:37,158 --> 01:08:40,849
but of course you could send<font color="#CCCCCC"> back an</font>

1639
01:08:38,839 --> 01:08:44,778
<font color="#CCCCCC">entire data set of something maybe an</font>

1640
01:08:40,850 --> 01:08:49,170
ordered list of traceroute results<font color="#E5E5E5"> for</font>

1641
01:08:44,779 --> 01:08:50,940
<font color="#E5E5E5">example which is pretty common</font>

1642
01:08:49,170 --> 01:08:52,589
and this of<font color="#CCCCCC"> course again is</font><font color="#E5E5E5"> something</font>

1643
01:08:50,939 --> 01:08:56,519
that the<font color="#E5E5E5"> client-side can consume and</font>

1644
01:08:52,589 --> 01:08:58,679
understand how to form<font color="#E5E5E5"> our pcs from so</font>

1645
01:08:56,520 --> 01:09:01,710
again things like<font color="#E5E5E5"> the reboot our PC</font>

1646
01:08:58,679 --> 01:09:04,529
would be something<font color="#E5E5E5"> that the device would</font>

1647
01:09:01,710 --> 01:09:06,029
expose through<font color="#E5E5E5"> with yang models it's not</font>

1648
01:09:04,529 --> 01:09:08,009
something<font color="#CCCCCC"> that you would hopefully</font><font color="#E5E5E5"> not</font>

1649
01:09:06,029 --> 01:09:10,109
have<font color="#E5E5E5"> to do magical incantations to do</font>

1650
01:09:08,009 --> 01:09:12,389
<font color="#E5E5E5">using other means but it</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> be part of</font>

1651
01:09:10,109 --> 01:09:16,980
the complete set of<font color="#CCCCCC"> yang definitions in</font>

1652
01:09:12,389 --> 01:09:18,659
an ambitious implementation notification

1653
01:09:16,979 --> 01:09:21,868
statements again I mentioned there<font color="#CCCCCC"> are</font>

1654
01:09:18,658 --> 01:09:24,599
ways for<font color="#E5E5E5"> servers to send a synchronous</font>

1655
01:09:21,868 --> 01:09:26,099
notifications in a pub sub model so in

1656
01:09:24,600 --> 01:09:28,589
this case we have a modification<font color="#E5E5E5"> or</font><font color="#CCCCCC"> a</font>

1657
01:09:26,100 --> 01:09:31,830
notification called config change<font color="#E5E5E5"> and</font>

1658
01:09:28,589 --> 01:09:33,839
it's got two<font color="#CCCCCC"> different</font><font color="#E5E5E5"> leaves here first</font>

1659
01:09:31,830 --> 01:09:35,429
of<font color="#E5E5E5"> all an operator name so maybe we're</font>

1660
01:09:33,839 --> 01:09:37,139
pointing out maybe this is the<font color="#E5E5E5"> beginning</font>

1661
01:09:35,429 --> 01:09:39,089
of a nice blame game implementation it

1662
01:09:37,139 --> 01:09:42,089
points out what's the username<font color="#E5E5E5"> of the</font>

1663
01:09:39,089 --> 01:09:44,339
person who did<font color="#E5E5E5"> this change and here's a</font>

1664
01:09:42,089 --> 01:09:46,139
<font color="#E5E5E5">clever use of instance</font><font color="#CCCCCC"> identifier so in</font>

1665
01:09:44,339 --> 01:09:49,500
this case we could actually<font color="#E5E5E5"> have the</font>

1666
01:09:46,139 --> 01:09:52,859
notification<font color="#E5E5E5"> actually contain the data</font>

1667
01:09:49,500 --> 01:09:55,230
set<font color="#CCCCCC"> that was</font><font color="#E5E5E5"> the change so maybe an</font><font color="#CCCCCC"> F</font>

1668
01:09:52,859 --> 01:09:56,420
<font color="#E5E5E5">called payload representation of what</font>

1669
01:09:55,230 --> 01:09:59,129
just changed

1670
01:09:56,420 --> 01:10:00,540
maybe something in line or you reference

1671
01:09:59,130 --> 01:10:03,210
it some somewhere<font color="#E5E5E5"> in the box</font>

1672
01:10:00,540 --> 01:10:06,090
so in this case the instance identifier

1673
01:10:03,210 --> 01:10:08,699
values would point to in this in this

1674
01:10:06,090 --> 01:10:11,040
actual example<font color="#CCCCCC"> forum</font><font color="#E5E5E5"> implementation we</font>

1675
01:10:08,699 --> 01:10:14,099
would point<font color="#E5E5E5"> out the data set in this</font>

1676
01:10:11,040 --> 01:10:17,369
<font color="#E5E5E5">case the leaves and lists that have been</font>

1677
01:10:14,100 --> 01:10:22,489
changed<font color="#CCCCCC"> and what their new value is so</font>

1678
01:10:17,369 --> 01:10:25,320
for incrementally<font color="#CCCCCC"> tracking</font><font color="#E5E5E5"> for example</font>

1679
01:10:22,489 --> 01:10:27,269
<font color="#E5E5E5">inventor system that would be enough to</font>

1680
01:10:25,320 --> 01:10:29,429
update<font color="#E5E5E5"> itself based on</font><font color="#CCCCCC"> Alice incurs</font>

1681
01:10:27,270 --> 01:10:31,170
notification<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the network</font><font color="#E5E5E5"> and then</font>

1682
01:10:29,429 --> 01:10:32,909
of<font color="#CCCCCC"> course you can</font><font color="#E5E5E5"> go and correlate but</font>

1683
01:10:31,170 --> 01:10:34,139
this should<font color="#CCCCCC"> be enough for</font><font color="#E5E5E5"> it to</font>

1684
01:10:32,909 --> 01:10:39,750
understand what<font color="#CCCCCC"> the</font><font color="#E5E5E5"> nature of that</font>

1685
01:10:34,139 --> 01:10:42,360
change was<font color="#E5E5E5"> okay let's head into the</font>

1686
01:10:39,750 --> 01:10:44,159
<font color="#CCCCCC">advanced stuff there's one</font><font color="#E5E5E5"> also very</font>

1687
01:10:42,360 --> 01:10:47,420
<font color="#CCCCCC">particularly powerful</font><font color="#E5E5E5"> construct called</font>

1688
01:10:44,159 --> 01:10:52,290
musts here so a must statement basically

1689
01:10:47,420 --> 01:10:55,679
<font color="#E5E5E5">takes a XPath statement and checks its</font>

1690
01:10:52,290 --> 01:10:58,320
<font color="#E5E5E5">validity on every commit or on every</font>

1691
01:10:55,679 --> 01:11:00,480
change so it's a very powerful way<font color="#CCCCCC"> of</font>

1692
01:10:58,320 --> 01:11:02,929
saying that these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> must</font><font color="#E5E5E5"> hold true</font>

1693
01:11:00,480 --> 01:11:06,110
other ways we will throw an error

1694
01:11:02,929 --> 01:11:10,100
so in this case what we're checking is

1695
01:11:06,110 --> 01:11:13,309
that the<font color="#CCCCCC"> or in this</font><font color="#E5E5E5"> case we are checking</font>

1696
01:11:10,100 --> 01:11:15,890
<font color="#CCCCCC">that the retry timer or actually the</font>

1697
01:11:13,310 --> 01:11:19,010
access<font color="#CCCCCC"> timeout is not bigger than the</font>

1698
01:11:15,890 --> 01:11:21,020
<font color="#E5E5E5">the access timeout because</font><font color="#CCCCCC"> if it is we</font>

1699
01:11:19,010 --> 01:11:22,640
<font color="#CCCCCC">will send a message right we will abort</font>

1700
01:11:21,020 --> 01:11:24,949
<font color="#E5E5E5">the transaction we will refuse</font><font color="#CCCCCC"> the</font>

1701
01:11:22,640 --> 01:11:27,320
change and we will just send<font color="#CCCCCC"> that</font>

1702
01:11:24,949 --> 01:11:30,710
message back<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this must construct can</font>

1703
01:11:27,320 --> 01:11:33,110
be used for most of the<font color="#E5E5E5"> things that the</font>

1704
01:11:30,710 --> 01:11:35,690
<font color="#E5E5E5">day to day network engineers has on</font>

1705
01:11:33,110 --> 01:11:38,299
little pink worksheets<font color="#E5E5E5"> beside their</font>

1706
01:11:35,690 --> 01:11:40,370
screen<font color="#E5E5E5"> things like don't reuse IP</font>

1707
01:11:38,300 --> 01:11:42,590
address is something<font color="#CCCCCC"> that you can</font>

1708
01:11:40,370 --> 01:11:45,320
normally<font color="#E5E5E5"> trivially Express with a must</font>

1709
01:11:42,590 --> 01:11:47,870
statement so if an incoming<font color="#E5E5E5"> edit config</font>

1710
01:11:45,320 --> 01:11:49,849
contains an IP address<font color="#E5E5E5"> we can look for</font>

1711
01:11:47,870 --> 01:11:51,559
its existence<font color="#CCCCCC"> elsewhere in the data set</font>

1712
01:11:49,850 --> 01:11:54,080
and<font color="#E5E5E5"> if we find something we can say</font>

1713
01:11:51,560 --> 01:11:56,750
that's<font color="#E5E5E5"> probably a bad idea</font><font color="#CCCCCC"> you're using</font>

1714
01:11:54,080 --> 01:11:59,570
an IP address<font color="#E5E5E5"> right so there's a whole</font>

1715
01:11:56,750 --> 01:12:01,969
world of interesting semantic

1716
01:11:59,570 --> 01:12:04,420
restrictions<font color="#CCCCCC"> that you could use</font><font color="#E5E5E5"> masked</font>

1717
01:12:01,969 --> 01:12:07,190
statements for that I<font color="#E5E5E5"> think could be</font>

1718
01:12:04,420 --> 01:12:10,429
<font color="#E5E5E5">lifesavers in many in many instances in</font>

1719
01:12:07,190 --> 01:12:11,780
a game these<font color="#E5E5E5"> things the way of course</font>

1720
01:12:10,429 --> 01:12:14,179
yang is<font color="#E5E5E5"> defined</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> the way these</font>

1721
01:12:11,780 --> 01:12:16,340
<font color="#E5E5E5">things are described is</font><font color="#CCCCCC"> that as long as</font>

1722
01:12:14,179 --> 01:12:18,710
<font color="#E5E5E5">you can access the data set in the</font>

1723
01:12:16,340 --> 01:12:19,820
<font color="#E5E5E5">configuration</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> actually don't have</font><font color="#CCCCCC"> to</font>

1724
01:12:18,710 --> 01:12:21,920
check these<font color="#E5E5E5"> things in the</font>

1725
01:12:19,820 --> 01:12:24,710
instrumentation code<font color="#E5E5E5"> you can do that in</font>

1726
01:12:21,920 --> 01:12:29,390
<font color="#E5E5E5">your data model driven layer the</font><font color="#CCCCCC"> day's</font>

1727
01:12:24,710 --> 01:12:32,090
first questions this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a big moment</font><font color="#E5E5E5"> is</font>

1728
01:12:29,390 --> 01:12:37,130
so the question<font color="#CCCCCC"> what angle</font><font color="#E5E5E5"> the question</font>

1729
01:12:32,090 --> 01:12:38,690
<font color="#CCCCCC">was is there a should to</font><font color="#E5E5E5"> the must no not</font>

1730
01:12:37,130 --> 01:12:44,380
that I know<font color="#E5E5E5"> of what would have the</font>

1731
01:12:38,690 --> 01:12:44,379
semantics of<font color="#CCCCCC"> I should strongly suggested</font>

1732
01:12:54,660 --> 01:13:02,010
<font color="#E5E5E5">ah</font><font color="#CCCCCC"> kind of a please let me shoot myself</font>

1733
01:12:57,570 --> 01:13:03,570
in the foot<font color="#E5E5E5"> thing yeah that's not</font><font color="#CCCCCC"> a</font>

1734
01:13:02,010 --> 01:13:05,640
<font color="#E5E5E5">primary feature of</font><font color="#CCCCCC"> Jung</font><font color="#E5E5E5"> there is an</font>

1735
01:13:03,570 --> 01:13:06,769
interesting interesting<font color="#E5E5E5"> take actually</font>

1736
01:13:05,640 --> 01:13:09,990
more<font color="#CCCCCC"> like a</font><font color="#E5E5E5"> warning</font>

1737
01:13:06,770 --> 01:13:11,580
you have to do things twice you know<font color="#E5E5E5"> the</font>

1738
01:13:09,990 --> 01:13:15,080
 will trigger on the first attempt

1739
01:13:11,580 --> 01:13:15,080
<font color="#E5E5E5">on</font><font color="#CCCCCC"> the session interesting</font>

1740
01:13:26,210 --> 01:13:29,400
absolutely<font color="#E5E5E5"> and you have to be careful</font>

1741
01:13:28,110 --> 01:13:31,290
<font color="#E5E5E5">with in my</font><font color="#CCCCCC"> statement so</font><font color="#E5E5E5"> you don't</font>

1742
01:13:29,400 --> 01:13:35,009
constrain<font color="#CCCCCC"> yourself</font><font color="#E5E5E5"> you know too much</font>

1743
01:13:31,290 --> 01:13:39,840
<font color="#E5E5E5">right second question</font>

1744
01:13:35,010 --> 01:13:41,700
so the<font color="#CCCCCC"> XPath the scope of things that</font>

1745
01:13:39,840 --> 01:13:44,250
you can access<font color="#E5E5E5"> with that is just the one</font>

1746
01:13:41,700 --> 01:13:46,080
device or are there constructs that<font color="#E5E5E5"> like</font>

1747
01:13:44,250 --> 01:13:52,380
<font color="#CCCCCC">what can let you get out and kind of</font>

1748
01:13:46,080 --> 01:13:54,480
check consistency across<font color="#E5E5E5"> the network so</font>

1749
01:13:52,380 --> 01:13:56,130
in<font color="#E5E5E5"> this case what we're talking about</font>

1750
01:13:54,480 --> 01:13:58,080
here it's constrained to the local

1751
01:13:56,130 --> 01:14:00,030
device where it really explodes in

1752
01:13:58,080 --> 01:14:02,790
usefulness is what you mentioned<font color="#E5E5E5"> and</font>

1753
01:14:00,030 --> 01:14:04,920
that<font color="#E5E5E5"> is service models in yang where you</font>

1754
01:14:02,790 --> 01:14:06,570
can check constraints across distributed

1755
01:14:04,920 --> 01:14:08,180
devices<font color="#E5E5E5"> that's when it gets really</font>

1756
01:14:06,570 --> 01:14:11,280
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> this conversation</font>

1757
01:14:08,180 --> 01:14:13,350
<font color="#CCCCCC">maybe</font><font color="#E5E5E5"> that's not on 63 talk about what</font>

1758
01:14:11,280 --> 01:14:15,210
serve is more<font color="#E5E5E5"> than the Yang's look like</font>

1759
01:14:13,350 --> 01:14:17,510
where<font color="#E5E5E5"> you can check constraints across</font>

1760
01:14:15,210 --> 01:14:17,510
devices

1761
01:14:36,649 --> 01:14:44,349
and you and so can<font color="#E5E5E5"> you formulate that as</font>

1762
01:14:40,459 --> 01:14:44,349
question<font color="#E5E5E5"> like</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> can tell it</font><font color="#CCCCCC"> to the mic</font>

1763
01:14:55,410 --> 01:15:02,370
<font color="#CCCCCC">I once even wrote a</font><font color="#E5E5E5"> blog post about why</font>

1764
01:14:59,430 --> 01:15:03,780
that's<font color="#E5E5E5"> not a good idea so the question</font>

1765
01:15:02,370 --> 01:15:09,690
was<font color="#E5E5E5"> this is there a way to express</font>

1766
01:15:03,780 --> 01:15:11,190
constraints on operational data based on

1767
01:15:09,690 --> 01:15:12,750
operation of<font color="#E5E5E5"> that so own configurations</font>

1768
01:15:11,190 --> 01:15:14,940
are based on<font color="#CCCCCC"> operational data</font><font color="#E5E5E5"> so</font>

1769
01:15:12,750 --> 01:15:18,030
actually<font color="#CCCCCC"> I</font><font color="#E5E5E5"> most implementations that I</font>

1770
01:15:14,940 --> 01:15:20,129
know of<font color="#E5E5E5"> won't stop you but what's</font>

1771
01:15:18,030 --> 01:15:21,389
strange<font color="#E5E5E5"> and and this quickly gets</font>

1772
01:15:20,130 --> 01:15:23,520
philosophical of course is that

1773
01:15:21,390 --> 01:15:27,660
operational data in general<font color="#CCCCCC"> you can't</font>

1774
01:15:23,520 --> 01:15:29,760
control<font color="#E5E5E5"> so your data set may become</font>

1775
01:15:27,660 --> 01:15:32,190
invalid<font color="#CCCCCC"> a synchronous</font><font color="#E5E5E5"> it just suddenly</font>

1776
01:15:29,760 --> 01:15:33,840
<font color="#E5E5E5">right so if you're referencing things</font>

1777
01:15:32,190 --> 01:15:37,110
<font color="#E5E5E5">that could be affected by operational</font>

1778
01:15:33,840 --> 01:15:39,390
<font color="#CCCCCC">State</font><font color="#E5E5E5"> next the</font><font color="#CCCCCC"> next second your data</font>

1779
01:15:37,110 --> 01:15:42,120
might<font color="#E5E5E5"> be valid and that</font><font color="#CCCCCC"> poses a really</font>

1780
01:15:39,390 --> 01:15:43,260
tricky<font color="#E5E5E5"> situation for the server</font>

1781
01:15:42,120 --> 01:15:45,570
implementation for the device

1782
01:15:43,260 --> 01:15:47,370
implementation what do we do what do we

1783
01:15:45,570 --> 01:15:50,009
do now that<font color="#E5E5E5"> we know that it must</font>

1784
01:15:47,370 --> 01:15:52,500
statements doesn't hold<font color="#E5E5E5"> who do we call</font>

1785
01:15:50,010 --> 01:15:53,940
and remind them<font color="#CCCCCC"> that oh the operational</font>

1786
01:15:52,500 --> 01:15:55,830
state of<font color="#E5E5E5"> something but that's in the</font>

1787
01:15:53,940 --> 01:15:57,419
<font color="#E5E5E5">general sense right of course then you</font>

1788
01:15:55,830 --> 01:16:00,840
could<font color="#CCCCCC"> argue well there are operational</font>

1789
01:15:57,420 --> 01:16:02,790
data that we do<font color="#E5E5E5"> control right and that</font>

1790
01:16:00,840 --> 01:16:06,060
we could say we trust the fact<font color="#E5E5E5"> that</font>

1791
01:16:02,790 --> 01:16:06,420
won't change<font color="#E5E5E5"> variously but in a</font><font color="#CCCCCC"> general</font>

1792
01:16:06,060 --> 01:16:09,630
sense

1793
01:16:06,420 --> 01:16:11,460
it's a dangerous proposition<font color="#CCCCCC"> dangerous</font>

1794
01:16:09,630 --> 01:16:13,440
<font color="#E5E5E5">because again it can become a</font>

1795
01:16:11,460 --> 01:16:15,710
synchronously invalid just suddenly<font color="#CCCCCC"> it's</font>

1796
01:16:13,440 --> 01:16:15,710
in that

1797
01:16:20,059 --> 01:16:25,909
<font color="#E5E5E5">okay another</font><font color="#CCCCCC"> mah statement of course we</font>

1798
01:16:23,989 --> 01:16:28,610
can use clever things in XPath like

1799
01:16:25,909 --> 01:16:31,190
summing so<font color="#CCCCCC"> some is a primary</font><font color="#E5E5E5"> feature in</font>

1800
01:16:28,610 --> 01:16:32,719
XPath<font color="#E5E5E5"> so if your favorite</font><font color="#CCCCCC"> net conf and</font>

1801
01:16:31,190 --> 01:16:35,960
<font color="#E5E5E5">yang implementation vendor</font><font color="#CCCCCC"> actually</font>

1802
01:16:32,719 --> 01:16:40,849
supports that<font color="#E5E5E5"> they</font><font color="#CCCCCC"> hopefully have done</font>

1803
01:16:35,960 --> 01:16:42,980
things<font color="#E5E5E5"> like made sure that in this case</font>

1804
01:16:40,849 --> 01:16:46,190
<font color="#E5E5E5">we</font><font color="#CCCCCC"> look at the</font><font color="#E5E5E5"> total weight exceeding</font>

1805
01:16:42,980 --> 01:16:47,718
the configured max weight<font color="#E5E5E5"> so again this</font>

1806
01:16:46,190 --> 01:16:49,070
is<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can be</font><font color="#CCCCCC"> done but you</font>

1807
01:16:47,719 --> 01:16:51,320
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to remember that this sits on</font><font color="#CCCCCC"> the</font>

1808
01:16:49,070 --> 01:16:52,849
device<font color="#E5E5E5"> so not only</font><font color="#CCCCCC"> does</font><font color="#E5E5E5"> it need to be</font>

1809
01:16:51,320 --> 01:16:55,190
<font color="#E5E5E5">expressed there needs to be supported</font>

1810
01:16:52,849 --> 01:16:57,670
there as well but it does provide<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a</font>

1811
01:16:55,190 --> 01:17:00,110
very very<font color="#E5E5E5"> efficient or very interesting</font>

1812
01:16:57,670 --> 01:17:03,170
ways of<font color="#E5E5E5"> constraining stuff that again</font>

1813
01:17:00,110 --> 01:17:05,690
<font color="#E5E5E5">this can also be used for pre checking</font>

1814
01:17:03,170 --> 01:17:10,130
<font color="#E5E5E5">right so before you send things to the</font>

1815
01:17:05,690 --> 01:17:12,289
network element self<font color="#E5E5E5"> augmentation I</font>

1816
01:17:10,130 --> 01:17:13,520
mentioned that that extensions is really

1817
01:17:12,289 --> 01:17:15,199
really important<font color="#CCCCCC"> especially to the</font>

1818
01:17:13,520 --> 01:17:17,449
vendor base right we want to be able<font color="#E5E5E5"> to</font>

1819
01:17:15,199 --> 01:17:20,419
let people<font color="#CCCCCC"> express what they do better</font>

1820
01:17:17,449 --> 01:17:23,539
around some basic features<font color="#CCCCCC"> so the way</font>

1821
01:17:20,420 --> 01:17:25,400
you use augment in this case you<font color="#E5E5E5"> use in</font>

1822
01:17:23,539 --> 01:17:27,320
the augment statement you point<font color="#E5E5E5"> out</font>

1823
01:17:25,400 --> 01:17:29,750
where in the data tree you<font color="#E5E5E5"> want to graft</font>

1824
01:17:27,320 --> 01:17:33,619
on a new data tree so in this case we'll

1825
01:17:29,750 --> 01:17:36,860
put under system<font color="#CCCCCC"> user we will put a new</font>

1826
01:17:33,619 --> 01:17:39,980
leaf called<font color="#E5E5E5"> expire that's has a date and</font>

1827
01:17:36,860 --> 01:17:44,030
<font color="#E5E5E5">time</font><font color="#CCCCCC"> type to it so it's taken in</font>

1828
01:17:39,980 --> 01:17:46,400
<font color="#CCCCCC">combination with the</font><font color="#E5E5E5"> sis module</font><font color="#CCCCCC"> we'll</font>

1829
01:17:44,030 --> 01:17:48,320
<font color="#CCCCCC">give a tree that the you where the users</font>

1830
01:17:46,400 --> 01:17:50,138
actually have an expiration of<font color="#E5E5E5"> type date</font>

1831
01:17:48,320 --> 01:17:53,179
<font color="#E5E5E5">and time so it's a way</font><font color="#CCCCCC"> of decorating</font>

1832
01:17:50,139 --> 01:17:55,909
<font color="#CCCCCC">known or existing modules with your own</font>

1833
01:17:53,179 --> 01:17:57,710
extensions if you<font color="#E5E5E5"> like and it's still on</font>

1834
01:17:55,909 --> 01:17:59,869
the positive side so it's adding<font color="#E5E5E5"> things</font>

1835
01:17:57,710 --> 01:18:03,230
you don't use augments to take away

1836
01:17:59,869 --> 01:18:06,139
<font color="#CCCCCC">things and in this</font><font color="#E5E5E5"> case we</font><font color="#CCCCCC"> actually</font>

1837
01:18:03,230 --> 01:18:07,339
added<font color="#E5E5E5"> what's called a when statement</font><font color="#CCCCCC"> so</font>

1838
01:18:06,139 --> 01:18:09,530
in this case which is<font color="#E5E5E5"> another</font>

1839
01:18:07,340 --> 01:18:11,329
<font color="#CCCCCC">constraints you can you use when to</font>

1840
01:18:09,530 --> 01:18:15,110
check for particular<font color="#E5E5E5"> things so in this</font>

1841
01:18:11,329 --> 01:18:18,380
case if the<font color="#CCCCCC"> Syst</font><font color="#E5E5E5"> class of a particular</font>

1842
01:18:15,110 --> 01:18:20,629
user is<font color="#E5E5E5"> wheel then he can choose his</font><font color="#CCCCCC"> own</font>

1843
01:18:18,380 --> 01:18:25,249
shell the<font color="#E5E5E5"> shell is configurable</font>

1844
01:18:20,629 --> 01:18:30,608
if this<font color="#E5E5E5"> this user doesn't have class</font>

1845
01:18:25,249 --> 01:18:33,079
wheel<font color="#E5E5E5"> then the the sub the leaf shell</font>

1846
01:18:30,609 --> 01:18:39,289
aren't<font color="#CCCCCC"> available you can't</font><font color="#E5E5E5"> configure</font>

1847
01:18:33,079 --> 01:18:42,079
them at all<font color="#E5E5E5"> choice is always interesting</font>

1848
01:18:39,289 --> 01:18:43,398
so a choice<font color="#E5E5E5"> allows one of one of several</font>

1849
01:18:42,079 --> 01:18:45,699
alternatives and the difference between

1850
01:18:43,399 --> 01:18:48,289
Union<font color="#E5E5E5"> and a choice is that</font><font color="#CCCCCC"> a choice</font><font color="#E5E5E5"> has</font>

1851
01:18:45,699 --> 01:18:50,499
<font color="#E5E5E5">structure to it it's not</font><font color="#CCCCCC"> just a</font><font color="#E5E5E5"> set</font><font color="#CCCCCC"> of</font>

1852
01:18:48,289 --> 01:18:53,148
types but actually set of sub structures

1853
01:18:50,499 --> 01:18:58,629
<font color="#E5E5E5">so in this case the</font><font color="#CCCCCC"> transferor interval</font>

1854
01:18:53,149 --> 01:19:00,649
can either be<font color="#E5E5E5"> in a frequency or</font>

1855
01:18:58,629 --> 01:19:02,239
<font color="#E5E5E5">something in this case that would say</font>

1856
01:19:00,649 --> 01:19:04,249
after<font color="#E5E5E5"> each commit to be transfer all</font>

1857
01:19:02,239 --> 01:19:07,398
right so either a sub<font color="#E5E5E5"> structure with a</font>

1858
01:19:04,249 --> 01:19:09,349
particular unsigned integer or<font color="#CCCCCC"> just an</font>

1859
01:19:07,399 --> 01:19:11,899
empty<font color="#E5E5E5"> set which then carry semantic</font>

1860
01:19:09,349 --> 01:19:15,039
value<font color="#E5E5E5"> in the sense that that box will</font>

1861
01:19:11,899 --> 01:19:17,389
behave<font color="#CCCCCC"> differently if</font><font color="#E5E5E5"> you choose</font><font color="#CCCCCC"> that</font>

1862
01:19:15,039 --> 01:19:19,699
and of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> you can have multiple</font>

1863
01:19:17,389 --> 01:19:21,919
definitions<font color="#E5E5E5"> you can name them or you can</font>

1864
01:19:19,699 --> 01:19:23,808
<font color="#CCCCCC">have you use containers</font><font color="#E5E5E5"> and groupings</font>

1865
01:19:21,919 --> 01:19:26,959
for<font color="#E5E5E5"> this so our choice can actually have</font>

1866
01:19:23,809 --> 01:19:30,590
several<font color="#E5E5E5"> cases in this case we will</font><font color="#CCCCCC"> have</font>

1867
01:19:26,959 --> 01:19:33,469
a number<font color="#E5E5E5"> of leaves for the counters</font>

1868
01:19:30,590 --> 01:19:35,869
<font color="#E5E5E5">thing here and a container for warning</font>

1869
01:19:33,469 --> 01:19:39,010
only<font color="#E5E5E5"> and there's a default</font><font color="#CCCCCC"> statement</font>

1870
01:19:35,869 --> 01:19:42,469
right<font color="#E5E5E5"> so if you create the choice</font>

1871
01:19:39,010 --> 01:19:45,949
<font color="#CCCCCC">container or create the choice group</font><font color="#E5E5E5"> we</font>

1872
01:19:42,469 --> 01:19:48,320
<font color="#E5E5E5">can pick one for you</font><font color="#CCCCCC"> and this</font><font color="#E5E5E5"> means that</font>

1873
01:19:45,949 --> 01:19:49,728
<font color="#E5E5E5">if you send an edit config for example</font>

1874
01:19:48,320 --> 01:19:52,219
to create<font color="#E5E5E5"> these things the</font>

1875
01:19:49,729 --> 01:19:55,849
implementation itself<font color="#CCCCCC"> will put in this</font>

1876
01:19:52,219 --> 01:20:00,249
<font color="#E5E5E5">case</font><font color="#CCCCCC"> the counters ask the valid</font><font color="#E5E5E5"> or</font>

1877
01:19:55,849 --> 01:20:00,249
currently active<font color="#E5E5E5"> configuration</font>

1878
01:20:00,710 --> 01:20:06,000
identities<font color="#CCCCCC"> so here's a</font><font color="#E5E5E5"> way of</font><font color="#CCCCCC"> getting</font>

1879
01:20:03,630 --> 01:20:07,620
<font color="#E5E5E5">closer to what most of the people</font><font color="#CCCCCC"> that</font>

1880
01:20:06,000 --> 01:20:10,650
<font color="#E5E5E5">are</font><font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> object orientation looks</font>

1881
01:20:07,620 --> 01:20:14,130
for extensible types<font color="#E5E5E5"> right so in this</font>

1882
01:20:10,650 --> 01:20:17,639
case we have physical<font color="#E5E5E5"> interface and we</font>

1883
01:20:14,130 --> 01:20:20,040
know that in<font color="#E5E5E5"> our main or first module we</font>

1884
01:20:17,640 --> 01:20:22,530
<font color="#CCCCCC">defined a</font><font color="#E5E5E5"> couple of them we have so we</font>

1885
01:20:20,040 --> 01:20:22,860
have module<font color="#CCCCCC"> phase if</font><font color="#E5E5E5"> we have an identity</font>

1886
01:20:22,530 --> 01:20:25,320
called

1887
01:20:22,860 --> 01:20:28,019
<font color="#E5E5E5">Ethernet so that defines</font><font color="#CCCCCC"> an Ethernet</font>

1888
01:20:25,320 --> 01:20:31,320
type and then you have identity<font color="#E5E5E5"> Ethernet</font>

1889
01:20:28,020 --> 01:20:33,570
1g that is based off<font color="#E5E5E5"> of base ignant so</font>

1890
01:20:31,320 --> 01:20:35,700
this is ways of expressing if like some

1891
01:20:33,570 --> 01:20:38,269
sort of inheritance or referential

1892
01:20:35,700 --> 01:20:41,490
integrity going kind<font color="#E5E5E5"> of abstraction</font><font color="#CCCCCC"> and</font>

1893
01:20:38,270 --> 01:20:45,060
you can also of course borrow in so if

1894
01:20:41,490 --> 01:20:46,410
you<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> sudden separate module is</font>

1895
01:20:45,060 --> 01:20:49,560
called<font color="#E5E5E5"> case called newer</font>

1896
01:20:46,410 --> 01:20:51,599
<font color="#E5E5E5">you can keep working on</font><font color="#CCCCCC"> that base face</font>

1897
01:20:49,560 --> 01:20:52,440
if<font color="#E5E5E5"> Ethernet and extend it to your</font>

1898
01:20:51,600 --> 01:20:55,020
heart's content

1899
01:20:52,440 --> 01:20:58,339
so<font color="#E5E5E5"> these cuts across</font><font color="#CCCCCC"> many things where</font>

1900
01:20:55,020 --> 01:21:00,090
you<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> be open</font><font color="#CCCCCC"> for</font>

1901
01:20:58,340 --> 01:21:02,970
extensions at a later stage

1902
01:21:00,090 --> 01:21:06,710
so interface types is a good example<font color="#CCCCCC"> of</font>

1903
01:21:02,970 --> 01:21:06,710
<font color="#CCCCCC">that question number three</font>

1904
01:21:13,820 --> 01:21:16,780
say that one more time

1905
01:21:26,889 --> 01:21:38,020
right so for example in in environment

1906
01:21:33,369 --> 01:21:40,150
so not all data structures<font color="#E5E5E5"> allow itself</font>

1907
01:21:38,020 --> 01:21:44,290
to be augmented nicely so for example

1908
01:21:40,150 --> 01:21:45,480
you can't<font color="#E5E5E5"> really augment a list</font><font color="#CCCCCC"> like to</font>

1909
01:21:44,290 --> 01:21:50,889
have new<font color="#E5E5E5"> members</font>

1910
01:21:45,480 --> 01:21:53,110
you can't augment a container for

1911
01:21:50,889 --> 01:21:55,989
example<font color="#E5E5E5"> so in that case you will fold it</font>

1912
01:21:53,110 --> 01:22:00,250
<font color="#CCCCCC">into whoops you would fold it</font><font color="#E5E5E5"> into</font>

1913
01:21:55,989 --> 01:22:03,309
identities and use those as types<font color="#CCCCCC"> all</font>

1914
01:22:00,250 --> 01:22:06,280
right but it steps back<font color="#E5E5E5"> from the very</font>

1915
01:22:03,310 --> 01:22:07,449
concrete<font color="#E5E5E5"> because of course the fact</font><font color="#CCCCCC"> that</font>

1916
01:22:06,280 --> 01:22:09,489
you have an identity carries some

1917
01:22:07,449 --> 01:22:11,469
meaning<font color="#E5E5E5"> which then is pushed into the</font>

1918
01:22:09,489 --> 01:22:13,330
instrumentation rather than expressed

1919
01:22:11,469 --> 01:22:16,119
<font color="#E5E5E5">what what does it</font><font color="#CCCCCC"> mean to be an even</font>

1920
01:22:13,330 --> 01:22:17,739
interface so<font color="#E5E5E5"> you usually have if you see</font>

1921
01:22:16,119 --> 01:22:19,780
identities you usually<font color="#E5E5E5"> have big</font>

1922
01:22:17,739 --> 01:22:22,000
description fields that describes the

1923
01:22:19,780 --> 01:22:24,969
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of semantic behavior other things</font>

1924
01:22:22,000 --> 01:22:27,429
are<font color="#E5E5E5"> like things like crypto algorithms</font>

1925
01:22:24,969 --> 01:22:29,800
<font color="#E5E5E5">where we can we can</font><font color="#CCCCCC"> be sure</font><font color="#E5E5E5"> that there</font>

1926
01:22:27,429 --> 01:22:31,989
will<font color="#E5E5E5"> be new ones</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> that's one of the</font>

1927
01:22:29,800 --> 01:22:34,000
things that we can be sure<font color="#CCCCCC"> about but it</font>

1928
01:22:31,989 --> 01:22:36,280
doesn't really help to augment things

1929
01:22:34,000 --> 01:22:39,190
<font color="#CCCCCC">into known and structures you would</font>

1930
01:22:36,280 --> 01:22:41,460
rather extend them did that make<font color="#CCCCCC"> any</font>

1931
01:22:39,190 --> 01:22:41,460
<font color="#CCCCCC">sense</font>

1932
01:22:45,350 --> 01:22:49,970
<font color="#E5E5E5">feature statements</font><font color="#CCCCCC"> I meant a little bit</font>

1933
01:22:47,540 --> 01:22:53,060
about that so you<font color="#CCCCCC"> can declare</font><font color="#E5E5E5"> things</font>

1934
01:22:49,970 --> 01:22:56,150
like has local<font color="#CCCCCC"> disc in</font><font color="#E5E5E5"> this case this</font><font color="#CCCCCC"> is</font>

1935
01:22:53,060 --> 01:22:57,530
a feature<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> box can say that you</font>

1936
01:22:56,150 --> 01:22:59,120
know I have a feature called has local

1937
01:22:57,530 --> 01:23:01,759
<font color="#E5E5E5">disc it may or may not be available</font>

1938
01:22:59,120 --> 01:23:04,370
<font color="#CCCCCC">right</font><font color="#E5E5E5"> you can check for that later</font>

1939
01:23:01,760 --> 01:23:06,680
<font color="#E5E5E5">so down in the system container in the</font>

1940
01:23:04,370 --> 01:23:09,290
<font color="#CCCCCC">login</font><font color="#E5E5E5"> container you can check for if</font>

1941
01:23:06,680 --> 01:23:12,590
<font color="#CCCCCC">feature</font><font color="#E5E5E5"> so if has local disc is true for</font>

1942
01:23:09,290 --> 01:23:14,060
<font color="#E5E5E5">this device then</font><font color="#CCCCCC"> it will expose first of</font>

1943
01:23:12,590 --> 01:23:15,710
all the<font color="#E5E5E5"> presence saying that you can</font>

1944
01:23:14,060 --> 01:23:18,400
enable logging because<font color="#E5E5E5"> there's this here</font>

1945
01:23:15,710 --> 01:23:20,510
and<font color="#E5E5E5"> you can describe the buffer size and</font>

1946
01:23:18,400 --> 01:23:22,160
things<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> in the standard model</font>

1947
01:23:20,510 --> 01:23:25,880
today<font color="#CCCCCC"> or things like the</font><font color="#E5E5E5"> stay spokes</font>

1948
01:23:22,160 --> 01:23:27,830
implement<font color="#E5E5E5"> SNMP right or</font><font color="#CCCCCC"> there SNMP on</font>

1949
01:23:25,880 --> 01:23:31,220
this box<font color="#E5E5E5"> in this case we can actually</font>

1950
01:23:27,830 --> 01:23:32,540
<font color="#E5E5E5">look for a interface index also</font><font color="#CCCCCC"> in the</font>

1951
01:23:31,220 --> 01:23:35,630
net<font color="#E5E5E5"> in the realm of</font><font color="#CCCCCC"> net</font><font color="#E5E5E5"> off and</font>

1952
01:23:32,540 --> 01:23:37,760
correlate between SNMP<font color="#E5E5E5"> and the neck or</font>

1953
01:23:35,630 --> 01:23:39,530
<font color="#E5E5E5">Braille right if it doesn't implement as</font>

1954
01:23:37,760 --> 01:23:41,450
an MP then there's obviously<font color="#E5E5E5"> no</font>

1955
01:23:39,530 --> 01:23:43,639
interface or doesn't have to be an

1956
01:23:41,450 --> 01:23:45,290
interface index right<font color="#E5E5E5"> so it's a it's a</font>

1957
01:23:43,640 --> 01:23:47,750
way<font color="#CCCCCC"> of expressing</font><font color="#E5E5E5"> what features the</font><font color="#CCCCCC"> box</font>

1958
01:23:45,290 --> 01:23:50,690
is currently running<font color="#E5E5E5"> and to</font><font color="#CCCCCC"> constrain</font><font color="#E5E5E5"> if</font>

1959
01:23:47,750 --> 01:23:52,220
you like or<font color="#CCCCCC"> exposed</font><font color="#E5E5E5"> certain parts of the</font>

1960
01:23:50,690 --> 01:23:53,210
data set depending<font color="#CCCCCC"> on whether that</font>

1961
01:23:52,220 --> 01:23:55,520
<font color="#E5E5E5">features</font><font color="#CCCCCC"> or no</font>

1962
01:23:53,210 --> 01:23:57,350
it also has a lot to<font color="#E5E5E5"> do with how many</font>

1963
01:23:55,520 --> 01:23:59,210
<font color="#E5E5E5">vendors are building the routers right</font>

1964
01:23:57,350 --> 01:24:01,670
and actually<font color="#CCCCCC"> how many</font><font color="#E5E5E5"> vendors are</font>

1965
01:23:59,210 --> 01:24:03,560
licensing the router<font color="#CCCCCC"> software some</font>

1966
01:24:01,670 --> 01:24:05,900
features may not be turned on because<font color="#E5E5E5"> of</font>

1967
01:24:03,560 --> 01:24:07,760
<font color="#CCCCCC">licensing constraints some routers may</font>

1968
01:24:05,900 --> 01:24:09,679
run on<font color="#CCCCCC"> a particular hardware so it's the</font>

1969
01:24:07,760 --> 01:24:10,940
same operating<font color="#E5E5E5"> system</font><font color="#CCCCCC"> but it</font><font color="#E5E5E5"> runs on a</font>

1970
01:24:09,680 --> 01:24:13,370
particular<font color="#E5E5E5"> hardware form factor</font>

1971
01:24:10,940 --> 01:24:14,809
<font color="#E5E5E5">therefore it's got a couple of</font><font color="#CCCCCC"> features</font>

1972
01:24:13,370 --> 01:24:16,610
that's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> available</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> that are</font>

1973
01:24:14,810 --> 01:24:18,800
available<font color="#CCCCCC"> based</font><font color="#E5E5E5"> on that form</font><font color="#CCCCCC"> factor</font><font color="#E5E5E5"> and</font>

1974
01:24:16,610 --> 01:24:20,179
of course many<font color="#E5E5E5"> many features</font><font color="#CCCCCC"> that you</font>

1975
01:24:18,800 --> 01:24:21,740
<font color="#CCCCCC">have in the hardware based platforms</font>

1976
01:24:20,180 --> 01:24:23,120
will have features that's<font color="#E5E5E5"> going to be</font>

1977
01:24:21,740 --> 01:24:25,280
turned off in their<font color="#E5E5E5"> virtual counterparts</font>

1978
01:24:23,120 --> 01:24:26,900
when<font color="#E5E5E5"> you run in a VM</font><font color="#CCCCCC"> you know many</font><font color="#E5E5E5"> of</font>

1979
01:24:25,280 --> 01:24:30,130
the hardware platform stuff but of

1980
01:24:26,900 --> 01:24:30,129
course not make any sense<font color="#E5E5E5"> at all</font>

1981
01:24:31,960 --> 01:24:37,030
<font color="#E5E5E5">deviations so they said all question</font>

1982
01:24:39,210 --> 01:24:42,140
go to the mic

1983
01:24:43,760 --> 01:24:48,410
is<font color="#E5E5E5"> their standard place that you go to</font>

1984
01:24:46,640 --> 01:24:50,960
<font color="#E5E5E5">look to find out what features</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> box</font>

1985
01:24:48,410 --> 01:24:55,610
has like when you get do<font color="#CCCCCC"> you get the</font>

1986
01:24:50,960 --> 01:24:56,990
features no no but but<font color="#CCCCCC"> there's a big</font>

1987
01:24:55,610 --> 01:24:58,040
<font color="#E5E5E5">difference between oh maybe I should put</font>

1988
01:24:56,990 --> 01:24:59,330
this<font color="#CCCCCC"> in the speaker notes for their</font>

1989
01:24:58,040 --> 01:25:01,070
<font color="#CCCCCC">features slide there's a big difference</font>

1990
01:24:59,330 --> 01:25:03,530
<font color="#CCCCCC">between</font><font color="#E5E5E5"> you know what happens in the</font>

1991
01:25:01,070 --> 01:25:05,299
hello exchange<font color="#E5E5E5"> right when you when when</font>

1992
01:25:03,530 --> 01:25:07,460
the server describes what the protocol

1993
01:25:05,300 --> 01:25:10,280
extensions it knows what<font color="#CCCCCC"> capabilities it</font>

1994
01:25:07,460 --> 01:25:13,130
has<font color="#E5E5E5"> and features that are local to a</font>

1995
01:25:10,280 --> 01:25:15,590
<font color="#E5E5E5">module but but it's a good it's</font><font color="#CCCCCC"> a good</font>

1996
01:25:13,130 --> 01:25:18,400
point<font color="#CCCCCC"> eventually there might that might</font>

1997
01:25:15,590 --> 01:25:21,950
be a good<font color="#E5E5E5"> idea especially</font><font color="#CCCCCC"> for well-known</font>

1998
01:25:18,400 --> 01:25:23,660
<font color="#E5E5E5">modules so if you augment in your own</font>

1999
01:25:21,950 --> 01:25:27,260
features you know how to formulate and

2000
01:25:23,660 --> 01:25:28,849
how to expose them because the way it is

2001
01:25:27,260 --> 01:25:30,590
now you actually<font color="#E5E5E5"> have to parse and</font>

2002
01:25:28,850 --> 01:25:32,690
understand the yang module for a

2003
01:25:30,590 --> 01:25:35,450
particular part of<font color="#E5E5E5"> the data set enjoy</font>

2004
01:25:32,690 --> 01:25:44,089
your own conclusions which is<font color="#CCCCCC"> a manual</font>

2005
01:25:35,450 --> 01:25:46,070
step so<font color="#E5E5E5"> deviations so this is the this</font>

2006
01:25:44,090 --> 01:25:49,280
is<font color="#CCCCCC"> something we reluctantly</font><font color="#E5E5E5"> introduced</font>

2007
01:25:46,070 --> 01:25:53,210
we realized that all<font color="#E5E5E5"> implementations can</font>

2008
01:25:49,280 --> 01:25:55,280
<font color="#E5E5E5">support all full standard models even if</font>

2009
01:25:53,210 --> 01:25:59,390
we try to<font color="#E5E5E5"> do the standard models very</font>

2010
01:25:55,280 --> 01:26:00,860
constrained and very very pragmatic so

2011
01:25:59,390 --> 01:26:04,250
vendors can implement something<font color="#E5E5E5"> called</font>

2012
01:26:00,860 --> 01:26:06,980
deviations so deviations<font color="#CCCCCC"> can actually be</font>

2013
01:26:04,250 --> 01:26:09,500
<font color="#E5E5E5">the extension that</font><font color="#CCCCCC"> you use to actually</font>

2014
01:26:06,980 --> 01:26:12,500
replace or remove or add things<font color="#CCCCCC"> that</font>

2015
01:26:09,500 --> 01:26:15,350
<font color="#CCCCCC">will break</font><font color="#E5E5E5"> the semantics of a known</font>

2016
01:26:12,500 --> 01:26:17,750
module<font color="#E5E5E5"> so of course it's it's it's a way</font>

2017
01:26:15,350 --> 01:26:20,360
<font color="#CCCCCC">out if you like we haven't seen much of</font>

2018
01:26:17,750 --> 01:26:21,830
this yet might have to do<font color="#E5E5E5"> with the fact</font>

2019
01:26:20,360 --> 01:26:24,530
that<font color="#E5E5E5"> there's there aren't massive</font>

2020
01:26:21,830 --> 01:26:26,210
amounts of implementations<font color="#E5E5E5"> and we will</font>

2021
01:26:24,530 --> 01:26:28,070
likely see<font color="#E5E5E5"> it the big question I guess</font>

2022
01:26:26,210 --> 01:26:30,440
is<font color="#E5E5E5"> whether people are going to declare</font>

2023
01:26:28,070 --> 01:26:33,019
their deviations or just silently

2024
01:26:30,440 --> 01:26:35,150
deviate and of course in the in the

2025
01:26:33,020 --> 01:26:38,000
standard sense<font color="#E5E5E5"> who are try and push them</font>

2026
01:26:35,150 --> 01:26:39,920
to at<font color="#E5E5E5"> least use deviations to explain to</font>

2027
01:26:38,000 --> 01:26:43,880
clients what<font color="#E5E5E5"> is what's</font><font color="#CCCCCC"> difference</font>

2028
01:26:39,920 --> 01:26:46,960
<font color="#E5E5E5">between the exposed or published model</font>

2029
01:26:43,880 --> 01:26:46,960
and what they're<font color="#E5E5E5"> doing</font>

2030
01:26:47,480 --> 01:26:52,230
any more questions about the<font color="#CCCCCC"> young</font>

2031
01:26:49,680 --> 01:26:53,730
language<font color="#E5E5E5"> before we hit</font><font color="#CCCCCC"> the kind of</font>

2032
01:26:52,230 --> 01:26:58,919
finishing notes on what we're<font color="#CCCCCC"> doing with</font>

2033
01:26:53,730 --> 01:27:01,290
<font color="#CCCCCC">yang</font><font color="#E5E5E5"> all right</font><font color="#CCCCCC"> a couple of</font><font color="#E5E5E5"> things</font>

2034
01:26:58,920 --> 01:27:03,300
happening most of the actions<font color="#E5E5E5"> around the</font>

2035
01:27:01,290 --> 01:27:05,760
<font color="#E5E5E5">language itself and its core modules</font>

2036
01:27:03,300 --> 01:27:08,880
currently happens in the ITF although

2037
01:27:05,760 --> 01:27:11,760
there are a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> activities being spun</font>

2038
01:27:08,880 --> 01:27:13,680
<font color="#E5E5E5">up in for example</font><font color="#CCCCCC"> I work with the Open</font>

2039
01:27:11,760 --> 01:27:15,210
<font color="#CCCCCC">Networking</font><font color="#E5E5E5"> foundation around</font><font color="#CCCCCC"> virtual</font>

2040
01:27:13,680 --> 01:27:17,610
switch<font color="#CCCCCC"> management's for open flow that's</font>

2041
01:27:15,210 --> 01:27:19,800
actually based on<font color="#E5E5E5"> that company there are</font>

2042
01:27:17,610 --> 01:27:20,940
<font color="#CCCCCC">m EF standards for performance of both</font>

2043
01:27:19,800 --> 01:27:22,860
management<font color="#CCCCCC"> in</font><font color="#E5E5E5"> yang</font>

2044
01:27:20,940 --> 01:27:25,860
there are<font color="#CCCCCC"> cable</font><font color="#E5E5E5"> lab standards for C cap</font>

2045
01:27:22,860 --> 01:27:28,910
in yang TM<font color="#CCCCCC"> form</font><font color="#E5E5E5"> seems to be</font><font color="#CCCCCC"> picking it</font>

2046
01:27:25,860 --> 01:27:30,839
up so a<font color="#E5E5E5"> number</font><font color="#CCCCCC"> of activities</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> on</font>

2047
01:27:28,910 --> 01:27:33,120
across<font color="#E5E5E5"> the</font><font color="#CCCCCC"> industry but</font><font color="#E5E5E5"> the most</font>

2048
01:27:30,840 --> 01:27:35,550
tangible stuff is<font color="#CCCCCC"> happening in the ITF</font>

2049
01:27:33,120 --> 01:27:37,710
and<font color="#E5E5E5"> for the Netcom working group for</font><font color="#CCCCCC"> the</font>

2050
01:27:35,550 --> 01:27:39,240
protocol side of things<font color="#CCCCCC"> we're working on</font>

2051
01:27:37,710 --> 01:27:41,460
<font color="#CCCCCC">is rest comp</font><font color="#E5E5E5"> and it will talk more about</font>

2052
01:27:39,240 --> 01:27:42,630
<font color="#CCCCCC">rest on team in the next slot here I'll</font>

2053
01:27:41,460 --> 01:27:45,560
show<font color="#E5E5E5"> you what that looks like it's</font>

2054
01:27:42,630 --> 01:27:48,390
<font color="#CCCCCC">basically using rest to manipulate data</font>

2055
01:27:45,560 --> 01:27:50,520
described by yang<font color="#E5E5E5"> we're working on an</font>

2056
01:27:48,390 --> 01:27:52,680
app called<font color="#CCCCCC"> cold home horrible this will</font>

2057
01:27:50,520 --> 01:27:54,060
hopefully take<font color="#E5E5E5"> a stab right at the</font>

2058
01:27:52,680 --> 01:27:55,800
horrible<font color="#E5E5E5"> situation we have</font><font color="#CCCCCC"> with</font>

2059
01:27:54,060 --> 01:27:58,140
discovery in the industry<font color="#E5E5E5"> today</font>

2060
01:27:55,800 --> 01:28:00,510
discovery as you all know<font color="#CCCCCC"> right now is</font>

2061
01:27:58,140 --> 01:28:02,340
ping sweeps and<font color="#CCCCCC"> nib</font><font color="#E5E5E5"> walks if we could</font>

2062
01:28:00,510 --> 01:28:05,370
build a secure<font color="#CCCCCC"> and robust call home</font>

2063
01:28:02,340 --> 01:28:06,000
protocol based on<font color="#CCCCCC"> net confidence SH</font><font color="#E5E5E5"> that</font>

2064
01:28:05,370 --> 01:28:08,190
would be huge

2065
01:28:06,000 --> 01:28:09,750
<font color="#E5E5E5">the good thing</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> that would be</font>

2066
01:28:08,190 --> 01:28:11,820
<font color="#E5E5E5">open standardized and hopefully</font>

2067
01:28:09,750 --> 01:28:13,290
interoperable<font color="#E5E5E5"> so you can reduce the</font>

2068
01:28:11,820 --> 01:28:15,269
<font color="#E5E5E5">amount of cold home protocols you had</font>

2069
01:28:13,290 --> 01:28:18,150
down to<font color="#E5E5E5"> something that resembles one</font>

2070
01:28:15,270 --> 01:28:20,550
<font color="#E5E5E5">that'd be cool</font><font color="#CCCCCC"> net come</font><font color="#E5E5E5"> over TLS is</font>

2071
01:28:18,150 --> 01:28:23,969
great for companies<font color="#E5E5E5"> that actually has a</font>

2072
01:28:20,550 --> 01:28:26,070
certificate infrastructure in place so

2073
01:28:23,970 --> 01:28:29,490
we're<font color="#CCCCCC"> advancing that we're</font><font color="#E5E5E5"> looking at</font>

2074
01:28:26,070 --> 01:28:32,190
ways of teaching<font color="#CCCCCC"> network</font><font color="#E5E5E5"> devices where</font>

2075
01:28:29,490 --> 01:28:34,469
to go for<font color="#E5E5E5"> their net</font><font color="#CCCCCC"> comp server might be</font>

2076
01:28:32,190 --> 01:28:36,210
using the<font color="#E5E5E5"> HP</font><font color="#CCCCCC"> v6 options for this there's</font>

2077
01:28:34,470 --> 01:28:39,150
a whole<font color="#CCCCCC"> other</font><font color="#E5E5E5"> debate whether XML is</font>

2078
01:28:36,210 --> 01:28:40,830
efficient enough<font color="#E5E5E5"> for protocol encodings</font>

2079
01:28:39,150 --> 01:28:42,870
right some people<font color="#CCCCCC"> would argue that</font><font color="#E5E5E5"> XML</font>

2080
01:28:40,830 --> 01:28:45,480
<font color="#E5E5E5">is bloated</font><font color="#CCCCCC"> so we're</font><font color="#E5E5E5"> looking at ways of</font>

2081
01:28:42,870 --> 01:28:48,420
perhaps<font color="#E5E5E5"> mitigating that something called</font>

2082
01:28:45,480 --> 01:28:50,040
efficiency extensions schema conformance

2083
01:28:48,420 --> 01:28:51,690
is something that comes<font color="#E5E5E5"> over</font><font color="#CCCCCC"> from SNMP</font>

2084
01:28:50,040 --> 01:28:53,910
it's another way<font color="#E5E5E5"> of describing</font><font color="#CCCCCC"> exactly</font>

2085
01:28:51,690 --> 01:28:55,860
how you implement certain<font color="#CCCCCC"> yang modules</font>

2086
01:28:53,910 --> 01:28:58,360
and what<font color="#E5E5E5"> your inheritance tree looks</font>

2087
01:28:55,860 --> 01:29:00,610
like<font color="#E5E5E5"> timed operations you</font><font color="#CCCCCC"> might</font>

2088
01:28:58,360 --> 01:29:03,400
<font color="#E5E5E5">I say here is what I'm gonna put in</font><font color="#CCCCCC"> the</font>

2089
01:29:00,610 --> 01:29:05,799
candidate and you should trigger<font color="#E5E5E5"> this</font><font color="#CCCCCC"> at</font>

2090
01:29:03,400 --> 01:29:09,400
my maintenance<font color="#CCCCCC"> window which is 1:00 a.m.</font>

2091
01:29:05,800 --> 01:29:11,170
<font color="#E5E5E5">local time and in the</font><font color="#CCCCCC"> networking group</font>

2092
01:29:09,400 --> 01:29:12,879
<font color="#E5E5E5">so in the language working group we're</font>

2093
01:29:11,170 --> 01:29:15,310
working on yang one at one it's going<font color="#CCCCCC"> to</font>

2094
01:29:12,880 --> 01:29:16,860
<font color="#CCCCCC">be</font><font color="#E5E5E5"> backwards</font><font color="#CCCCCC"> compatible</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> this I don't</font>

2095
01:29:15,310 --> 01:29:19,540
<font color="#E5E5E5">have to rewrite this</font><font color="#CCCCCC"> entire presentation</font>

2096
01:29:16,860 --> 01:29:20,619
<font color="#CCCCCC">but there's bits and pieces of</font><font color="#E5E5E5"> course</font>

2097
01:29:19,540 --> 01:29:23,350
that we've learned over<font color="#E5E5E5"> the eight years</font>

2098
01:29:20,619 --> 01:29:25,659
<font color="#CCCCCC">that we've had</font><font color="#E5E5E5"> yang now we want to be</font>

2099
01:29:23,350 --> 01:29:26,920
able to configure SNMP sound so ironic

2100
01:29:25,659 --> 01:29:30,309
but it would be great if we<font color="#CCCCCC"> had one</font>

2101
01:29:26,920 --> 01:29:31,869
entry point also<font color="#E5E5E5"> to set up SNMP one of</font>

2102
01:29:30,310 --> 01:29:34,510
the big ones is models for routing

2103
01:29:31,869 --> 01:29:36,790
management or for managing routing

2104
01:29:34,510 --> 01:29:39,369
protocol implementations I'd say and of

2105
01:29:36,790 --> 01:29:42,340
course the<font color="#CCCCCC"> usual</font><font color="#E5E5E5"> suspects being is is</font>

2106
01:29:39,369 --> 01:29:43,570
<font color="#CCCCCC">OSPF</font><font color="#E5E5E5"> PGP and everything that</font><font color="#CCCCCC"> comes after</font>

2107
01:29:42,340 --> 01:29:45,760
<font color="#E5E5E5">that so big</font>

2108
01:29:43,570 --> 01:29:48,009
interesting heated debates in the<font color="#CCCCCC"> ITF</font>

2109
01:29:45,760 --> 01:29:49,300
around that we want to leverage<font color="#E5E5E5"> the</font>

2110
01:29:48,010 --> 01:29:52,420
experience<font color="#CCCCCC"> that we have so</font><font color="#E5E5E5"> we're writing</font>

2111
01:29:49,300 --> 01:29:54,639
<font color="#E5E5E5">guidelines for authors and</font><font color="#CCCCCC"> reviewers and</font>

2112
01:29:52,420 --> 01:29:56,260
if there's something I<font color="#E5E5E5"> would like to put</font>

2113
01:29:54,639 --> 01:29:58,840
<font color="#E5E5E5">out to this team of course it's come</font>

2114
01:29:56,260 --> 01:30:01,000
help now that<font color="#CCCCCC"> we have what we believe is</font>

2115
01:29:58,840 --> 01:30:02,340
a good and expressive and robust

2116
01:30:01,000 --> 01:30:04,630
language<font color="#E5E5E5"> with several implementations</font>

2117
01:30:02,340 --> 01:30:07,179
<font color="#CCCCCC">now we need to go work</font><font color="#E5E5E5"> on the standard</font>

2118
01:30:04,630 --> 01:30:08,830
models<font color="#CCCCCC"> there's something called the yang</font>

2119
01:30:07,179 --> 01:30:09,880
doctors in the ITF they're always

2120
01:30:08,830 --> 01:30:12,219
looking<font color="#CCCCCC"> for people that are very</font>

2121
01:30:09,880 --> 01:30:13,330
<font color="#CCCCCC">interested we have the</font><font color="#E5E5E5"> some days before</font>

2122
01:30:12,219 --> 01:30:14,980
<font color="#CCCCCC">the ITF scar-l</font>

2123
01:30:13,330 --> 01:30:18,000
to actually sit down<font color="#E5E5E5"> and</font><font color="#CCCCCC"> help people</font>

2124
01:30:14,980 --> 01:30:21,400
<font color="#CCCCCC">with models there's actually a github</font>

2125
01:30:18,000 --> 01:30:25,389
<font color="#CCCCCC">put up for the work</font><font color="#E5E5E5"> that's being done</font>

2126
01:30:21,400 --> 01:30:29,110
right<font color="#E5E5E5"> now in the ITF under that URL</font><font color="#CCCCCC"> so</font>

2127
01:30:25,389 --> 01:30:30,639
get digging<font color="#E5E5E5"> if you if you want we would</font>

2128
01:30:29,110 --> 01:30:32,080
<font color="#E5E5E5">very much appreciate more people</font>

2129
01:30:30,639 --> 01:30:33,909
spending time with this<font color="#E5E5E5"> because we want</font>

2130
01:30:32,080 --> 01:30:38,790
<font color="#E5E5E5">they're kind of</font><font color="#CCCCCC"> second</font><font color="#E5E5E5"> generation</font><font color="#CCCCCC"> yang</font>

2131
01:30:33,909 --> 01:30:41,138
<font color="#CCCCCC">moles</font><font color="#E5E5E5"> to be very good here</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

2132
01:30:38,790 --> 01:30:46,659
RFC's available this<font color="#CCCCCC"> is more for</font>

2133
01:30:41,139 --> 01:30:50,190
<font color="#E5E5E5">reference and thank you any questions or</font>

2134
01:30:46,659 --> 01:30:50,190
we<font color="#E5E5E5"> send the</font><font color="#CCCCCC"> qu'il session</font>

2135
01:30:50,640 --> 01:30:56,130
thank you very<font color="#CCCCCC"> much for</font><font color="#E5E5E5"> your patience</font>

2136
01:30:52,630 --> 01:30:56,130
<font color="#E5E5E5">thanks a lot see you back</font>

2137
01:31:12,400 --> 01:31:17,210
let me just<font color="#E5E5E5"> reiterate that the actual</font>

2138
01:31:15,350 --> 01:31:20,510
<font color="#CCCCCC">hands-on or</font><font color="#E5E5E5"> the where you start seeing</font>

2139
01:31:17,210 --> 01:31:22,610
<font color="#CCCCCC">PDUs flying is in half an</font><font color="#E5E5E5"> hour so I</font>

2140
01:31:20,510 --> 01:31:24,170
guess go get something<font color="#E5E5E5"> to</font><font color="#CCCCCC"> drink and come</font>

2141
01:31:22,610 --> 01:31:27,009
<font color="#E5E5E5">back and we'll open my terminal</font><font color="#CCCCCC"> window</font>

2142
01:31:24,170 --> 01:31:27,010
<font color="#CCCCCC">and let it rip</font>

2143
01:31:34,310 --> 01:31:36,370
you

