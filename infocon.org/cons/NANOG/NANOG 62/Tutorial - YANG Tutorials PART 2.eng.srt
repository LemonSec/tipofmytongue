1
00:00:09,519 --> 00:00:15,650
okay so welcome back

2
00:00:12,320 --> 00:00:18,860
the second part<font color="#CCCCCC"> of my two-part monster</font>

3
00:00:15,650 --> 00:00:21,950
session on that convent yang this one is

4
00:00:18,860 --> 00:00:25,099
more about running code so what we're

5
00:00:21,950 --> 00:00:26,869
going to do<font color="#CCCCCC"> here is</font><font color="#E5E5E5"> to take a sliver of</font>

6
00:00:25,099 --> 00:00:30,619
the<font color="#E5E5E5"> things that I talk to you about in</font>

7
00:00:26,869 --> 00:00:35,420
the first session and put some code and

8
00:00:30,619 --> 00:00:37,280
pd use and stuff around it we're<font color="#E5E5E5"> going</font>

9
00:00:35,420 --> 00:00:38,750
<font color="#E5E5E5">to use a couple of two or I am going to</font>

10
00:00:37,280 --> 00:00:40,820
<font color="#CCCCCC">use a couple</font><font color="#E5E5E5"> of tools that you can see</font>

11
00:00:38,750 --> 00:00:43,129
I've moved from standing at the pulpit

12
00:00:40,820 --> 00:00:45,680
<font color="#E5E5E5">you sitting at the keyboard because i</font>

13
00:00:43,129 --> 00:00:47,120
only have as I mentioned previous a

14
00:00:45,680 --> 00:00:49,250
single slide for this part of the

15
00:00:47,120 --> 00:00:52,940
session the rest will be<font color="#E5E5E5"> using these</font>

16
00:00:49,250 --> 00:00:54,379
tools for a net cover rescomp server

17
00:00:52,940 --> 00:00:59,510
we're going<font color="#E5E5E5"> to use a product called</font>

18
00:00:54,379 --> 00:01:01,879
comedy or configuration demon it is a if

19
00:00:59,510 --> 00:01:04,339
you want an own device configuration

20
00:01:01,879 --> 00:01:06,679
management framework that used to be

21
00:01:04,339 --> 00:01:09,020
part of my ex-employer telef systems and

22
00:01:06,680 --> 00:01:12,020
it's a very ambitious implementation oh

23
00:01:09,020 --> 00:01:17,810
that's better volume wise now I'm right

24
00:01:12,020 --> 00:01:19,369
through your skulls there we go we will

25
00:01:17,810 --> 00:01:22,400
use that<font color="#E5E5E5"> as our netconf arrest calm</font>

26
00:01:19,369 --> 00:01:27,408
server we will use a small python script

27
00:01:22,400 --> 00:01:29,450
called netconf console to send<font color="#CCCCCC"> netcom</font>

28
00:01:27,409 --> 00:01:31,970
content and watch it come<font color="#E5E5E5"> back from the</font>

29
00:01:29,450 --> 00:01:35,439
server we're going<font color="#E5E5E5"> to look a little bit</font>

30
00:01:31,970 --> 00:01:39,079
<font color="#E5E5E5">at a Python library for net</font><font color="#CCCCCC"> called</font>

31
00:01:35,439 --> 00:01:42,008
<font color="#E5E5E5">netconf client library in python is what</font>

32
00:01:39,079 --> 00:01:46,008
<font color="#CCCCCC">i wanted to</font><font color="#E5E5E5"> say called NC client and</font>

33
00:01:42,009 --> 00:01:47,990
we're going<font color="#E5E5E5"> to use curl to tickle or to</font>

34
00:01:46,009 --> 00:01:51,470
use the rest come for the rest interface

35
00:01:47,990 --> 00:01:52,850
and again i want<font color="#E5E5E5"> to remind you guys and</font>

36
00:01:51,470 --> 00:01:55,670
<font color="#E5E5E5">girls that this is going to be a</font>

37
00:01:52,850 --> 00:01:57,740
protocol exercise so while there is a

38
00:01:55,670 --> 00:02:00,740
lot to say about how to<font color="#E5E5E5"> actually</font>

39
00:01:57,740 --> 00:02:02,960
encapsulate all these protocol motions

40
00:02:00,740 --> 00:02:05,479
in libraries that's probably<font color="#E5E5E5"> for the</font>

41
00:02:02,960 --> 00:02:08,359
next session or for the next step<font color="#E5E5E5"> and</font>

42
00:02:05,479 --> 00:02:11,810
<font color="#E5E5E5">next time hopefully invited back here so</font>

43
00:02:08,360 --> 00:02:13,880
don't<font color="#E5E5E5"> be tempted to think that the tools</font>

44
00:02:11,810 --> 00:02:15,350
that<font color="#CCCCCC"> i'm using to show you what's</font>

45
00:02:13,880 --> 00:02:18,290
actually coming over the wire are the

46
00:02:15,350 --> 00:02:21,049
only tools you know<font color="#CCCCCC"> i purposely picked</font>

47
00:02:18,290 --> 00:02:23,870
things that does expose all the<font color="#CCCCCC"> xml and</font>

48
00:02:21,049 --> 00:02:26,210
<font color="#E5E5E5">the json that you can think of in these</font>

49
00:02:23,870 --> 00:02:29,020
things and again there are

50
00:02:26,210 --> 00:02:31,670
many higher level tools to be used

51
00:02:29,020 --> 00:02:33,470
across these protocols that would make

52
00:02:31,670 --> 00:02:36,470
them immediately useful to operations

53
00:02:33,470 --> 00:02:39,350
teams but again<font color="#E5E5E5"> that's not the intent or</font>

54
00:02:36,470 --> 00:02:41,300
the what I<font color="#E5E5E5"> plan</font><font color="#CCCCCC"> for this session here</font>

55
00:02:39,350 --> 00:02:44,690
this is to teach you exactly what it

56
00:02:41,300 --> 00:02:51,590
looks like for that<font color="#E5E5E5"> conference call</font><font color="#CCCCCC"> okay</font>

57
00:02:44,690 --> 00:02:54,079
so we<font color="#E5E5E5"> can get rid of</font><font color="#CCCCCC"> power point i'd</font>

58
00:02:51,590 --> 00:02:58,310
like<font color="#CCCCCC"> to present my shell this is where</font>

59
00:02:54,080 --> 00:03:01,430
we<font color="#E5E5E5"> will spend this this session and I as</font>

60
00:02:58,310 --> 00:03:02,690
<font color="#CCCCCC">much</font><font color="#E5E5E5"> as I understand and have done this</font>

61
00:03:01,430 --> 00:03:04,280
a couple of<font color="#E5E5E5"> times I'm going to have to</font>

62
00:03:02,690 --> 00:03:06,020
switch back and forth a little bit to a

63
00:03:04,280 --> 00:03:09,440
demo script so hopefully you guys don't

64
00:03:06,020 --> 00:03:11,300
<font color="#E5E5E5">get seasick when I do that that's going</font>

65
00:03:09,440 --> 00:03:14,450
<font color="#E5E5E5">to look like some something okay we can</font>

66
00:03:11,300 --> 00:03:19,370
take this away as well that's<font color="#E5E5E5"> going to</font>

67
00:03:14,450 --> 00:03:23,299
look something like this<font color="#CCCCCC"> alright so we</font>

68
00:03:19,370 --> 00:03:24,800
have<font color="#E5E5E5"> a recently started</font><font color="#CCCCCC"> netcom server</font>

69
00:03:23,300 --> 00:03:27,380
running in the background<font color="#E5E5E5"> here that's</font>

70
00:03:24,800 --> 00:03:28,880
<font color="#E5E5E5">the conf d session that I told you about</font>

71
00:03:27,380 --> 00:03:31,540
<font color="#CCCCCC">where they call the server that i told</font>

72
00:03:28,880 --> 00:03:34,730
you about<font color="#E5E5E5"> we're in an aptly named</font>

73
00:03:31,540 --> 00:03:38,420
directory called nano demo and inside

74
00:03:34,730 --> 00:03:42,739
this we<font color="#E5E5E5"> actually have a directory called</font>

75
00:03:38,420 --> 00:03:47,869
<font color="#CCCCCC">netconf queries and we're going to start</font>

76
00:03:42,740 --> 00:03:51,590
<font color="#CCCCCC">by using the net conf console program</font>

77
00:03:47,870 --> 00:03:54,260
here right so newly started<font color="#CCCCCC"> netcom</font>

78
00:03:51,590 --> 00:03:56,000
server it's<font color="#E5E5E5"> running on my localhost so</font>

79
00:03:54,260 --> 00:03:57,829
the only thing<font color="#E5E5E5"> I need</font><font color="#CCCCCC"> to add</font><font color="#E5E5E5"> to netcom</font>

80
00:03:56,000 --> 00:03:59,680
console here is how<font color="#E5E5E5"> much I want to see</font>

81
00:03:57,830 --> 00:04:02,180
and since this again is a protocol

82
00:03:59,680 --> 00:04:08,050
experience i'm going to<font color="#E5E5E5"> ask the National</font>

83
00:04:02,180 --> 00:04:08,050
console to show me everything yep

84
00:04:12,730 --> 00:04:18,680
good question that I would have<font color="#E5E5E5"> probably</font>

85
00:04:16,130 --> 00:04:21,890
needed another slide for that so the net

86
00:04:18,680 --> 00:04:23,870
com server that is commonly located on a

87
00:04:21,890 --> 00:04:26,840
router or switch in the distributed

88
00:04:23,870 --> 00:04:32,570
<font color="#CCCCCC">network is for</font><font color="#E5E5E5"> this purpose running on</font>

89
00:04:26,840 --> 00:04:34,489
my laptop<font color="#E5E5E5"> so I'm going to talk to see</font>

90
00:04:32,570 --> 00:04:36,409
that's another thing that I maybe should

91
00:04:34,490 --> 00:04:38,840
have put in the framing in the net<font color="#E5E5E5"> conf</font>

92
00:04:36,410 --> 00:04:40,430
world we've opted for<font color="#CCCCCC"> the client</font><font color="#E5E5E5"> and</font>

93
00:04:38,840 --> 00:04:42,590
server terms as opposed to for example

94
00:04:40,430 --> 00:04:45,200
manager and agent which we talked<font color="#E5E5E5"> about</font>

95
00:04:42,590 --> 00:04:48,049
for SNMP so the client sits with the

96
00:04:45,200 --> 00:04:50,900
management software and the server which

97
00:04:48,050 --> 00:04:53,690
takes requests from<font color="#E5E5E5"> the client sits in</font>

98
00:04:50,900 --> 00:04:55,250
the network elements right so in the net

99
00:04:53,690 --> 00:04:57,650
cough case<font color="#CCCCCC"> netconf servers would be</font>

100
00:04:55,250 --> 00:04:59,780
running in your you know juniper<font color="#E5E5E5"> Cisco</font>

101
00:04:57,650 --> 00:05:01,370
alcatel-lucent boxes and the clients

102
00:04:59,780 --> 00:05:06,859
would be located<font color="#CCCCCC"> in the EMS or the</font>

103
00:05:01,370 --> 00:05:12,610
service orchestration system how would

104
00:05:06,860 --> 00:05:12,610
you prefer a manager agent or<font color="#CCCCCC"> something</font>

105
00:05:15,760 --> 00:05:20,630
true true that server something that

106
00:05:18,110 --> 00:05:27,020
comes from I guess from from compaq or

107
00:05:20,630 --> 00:05:29,990
HP or dell right so good choice then you

108
00:05:27,020 --> 00:05:31,849
awake woke up<font color="#E5E5E5"> that's great so the net</font>

109
00:05:29,990 --> 00:05:34,850
<font color="#E5E5E5">comm console then just be very clear is</font>

110
00:05:31,850 --> 00:05:36,740
our client and it's going to query and

111
00:05:34,850 --> 00:05:39,170
manipulate the data that's residing on

112
00:05:36,740 --> 00:05:41,690
<font color="#CCCCCC">the net comp server and that netcom</font>

113
00:05:39,170 --> 00:05:44,150
server instance happens to run on my

114
00:05:41,690 --> 00:05:45,680
laptop and not on a virtualized or

115
00:05:44,150 --> 00:05:47,929
physical network<font color="#E5E5E5"> element somewhere else</font>

116
00:05:45,680 --> 00:05:51,680
just to make<font color="#CCCCCC"> it</font><font color="#E5E5E5"> more of a of a lab</font>

117
00:05:47,930 --> 00:05:53,480
environment here<font color="#CCCCCC"> okay so the first</font><font color="#E5E5E5"> thing</font>

118
00:05:51,680 --> 00:05:54,920
<font color="#E5E5E5">that we would do as I mentioned in the</font>

119
00:05:53,480 --> 00:05:57,920
previous slot is that we would issue

120
00:05:54,920 --> 00:05:59,300
what's called a<font color="#E5E5E5"> Hello right so in this</font>

121
00:05:57,920 --> 00:06:03,170
case we're going to use actually a

122
00:05:59,300 --> 00:06:05,240
feature of the net comm console to send

123
00:06:03,170 --> 00:06:09,710
the hello message and start the

124
00:06:05,240 --> 00:06:11,570
capabilities exchange so here's what we

125
00:06:09,710 --> 00:06:13,430
get back from the server so I want<font color="#CCCCCC"> to</font>

126
00:06:11,570 --> 00:06:15,560
walk through this in some detail so this

127
00:06:13,430 --> 00:06:18,500
server tells me that it actually

128
00:06:15,560 --> 00:06:20,990
supports both versions of the net conf

129
00:06:18,500 --> 00:06:24,190
<font color="#E5E5E5">based protocol 1 at 0 and 1 dot</font>

130
00:06:20,990 --> 00:06:26,690
and depending on what the client sent

131
00:06:24,190 --> 00:06:28,850
the session<font color="#E5E5E5"> is going to be based on</font>

132
00:06:26,690 --> 00:06:30,560
either of those the<font color="#CCCCCC"> only big difference</font>

133
00:06:28,850 --> 00:06:34,040
between<font color="#E5E5E5"> them is has to do with framing</font>

134
00:06:30,560 --> 00:06:36,880
or chunking actually which we changed

135
00:06:34,040 --> 00:06:39,680
between base 1 at 0 and 1 at one and

136
00:06:36,880 --> 00:06:41,900
then there's a number of let me see if I

137
00:06:39,680 --> 00:06:44,570
can<font color="#CCCCCC"> make it more readable capabilities</font>

138
00:06:41,900 --> 00:06:47,929
that has to do with the net com protocol

139
00:06:44,570 --> 00:06:50,360
itself so in this case we can see that

140
00:06:47,930 --> 00:06:52,520
<font color="#CCCCCC">the way the server is set up you can</font>

141
00:06:50,360 --> 00:06:54,530
actually<font color="#E5E5E5"> write configuration data right</font>

142
00:06:52,520 --> 00:06:55,940
into the running database so an edit

143
00:06:54,530 --> 00:06:57,919
config towards the running database

144
00:06:55,940 --> 00:07:00,020
would make configuration bite

145
00:06:57,920 --> 00:07:03,620
immediately if<font color="#E5E5E5"> you like traditional CLI</font>

146
00:07:00,020 --> 00:07:05,870
style but we also<font color="#E5E5E5"> have a candidate which</font>

147
00:07:03,620 --> 00:07:07,460
means<font color="#CCCCCC"> that we can opt to edit the</font>

148
00:07:05,870 --> 00:07:09,770
candidate to our hearts content and when

149
00:07:07,460 --> 00:07:12,140
we're<font color="#CCCCCC"> done there we can copy that</font>

150
00:07:09,770 --> 00:07:15,650
content into the running so we support

151
00:07:12,140 --> 00:07:17,360
both here and there's<font color="#E5E5E5"> actually support</font>

152
00:07:15,650 --> 00:07:18,650
for the<font color="#E5E5E5"> confirm commit all these things</font>

153
00:07:17,360 --> 00:07:20,870
I will<font color="#E5E5E5"> walk through in gruesome detail</font>

154
00:07:18,650 --> 00:07:22,549
but the<font color="#CCCCCC"> confirmed commit is then the</font>

155
00:07:20,870 --> 00:07:24,380
timer based commit that i mentioned in

156
00:07:22,550 --> 00:07:26,720
the previous lot where i can say go run

157
00:07:24,380 --> 00:07:30,530
with<font color="#E5E5E5"> this but if i'm not back inside of</font>

158
00:07:26,720 --> 00:07:32,240
a number<font color="#CCCCCC"> of seconds</font><font color="#E5E5E5"> rollback and</font><font color="#CCCCCC"> if i</font>

159
00:07:30,530 --> 00:07:36,919
kill the<font color="#E5E5E5"> session or lose contact while</font>

160
00:07:32,240 --> 00:07:39,290
that timer is running rollback<font color="#CCCCCC"> we</font>

161
00:07:36,920 --> 00:07:41,090
support<font color="#E5E5E5"> XPath for</font><font color="#CCCCCC"> queries we support the</font>

162
00:07:39,290 --> 00:07:43,100
opportunity to validate the data in the

163
00:07:41,090 --> 00:07:45,469
candidate before sending it to the

164
00:07:43,100 --> 00:07:47,180
<font color="#E5E5E5">running database we support also roll</font>

165
00:07:45,470 --> 00:07:49,310
back on error so if you<font color="#E5E5E5"> find an error</font>

166
00:07:47,180 --> 00:07:51,260
somewhere in the data set that you're

167
00:07:49,310 --> 00:07:54,260
sending<font color="#CCCCCC"> the server will actually roll</font>

168
00:07:51,260 --> 00:07:57,289
back we also have<font color="#E5E5E5"> some proprietary</font>

169
00:07:54,260 --> 00:08:00,800
extensions so this<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> way for</font><font color="#E5E5E5"> the</font>

170
00:07:57,290 --> 00:08:02,390
vendor in this case<font color="#CCCCCC"> tail F to explain to</font>

171
00:08:00,800 --> 00:08:04,250
the client that we actually<font color="#CCCCCC"> have a new</font>

172
00:08:02,390 --> 00:08:06,409
ability here and in this case is

173
00:08:04,250 --> 00:08:09,110
something called actions so it's<font color="#E5E5E5"> not our</font>

174
00:08:06,410 --> 00:08:10,310
<font color="#CCCCCC">pc's the way standard netconf is</font>

175
00:08:09,110 --> 00:08:12,200
designed it's actually something called

176
00:08:10,310 --> 00:08:15,080
actions which is kind<font color="#E5E5E5"> of an RPC that you</font>

177
00:08:12,200 --> 00:08:18,349
can put inside of data trees so you can

178
00:08:15,080 --> 00:08:21,890
have our reload action for example

179
00:08:18,350 --> 00:08:25,160
associated with a line card and then

180
00:08:21,890 --> 00:08:29,419
there's a number of yang modules

181
00:08:25,160 --> 00:08:33,229
supported down here you'll see<font color="#E5E5E5"> a number</font>

182
00:08:29,420 --> 00:08:34,700
of proprietary modules so triple-a

183
00:08:33,229 --> 00:08:37,340
modules a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

184
00:08:34,700 --> 00:08:39,370
with web you<font color="#CCCCCC"> is and monitoring it is</font>

185
00:08:37,340 --> 00:08:41,570
also<font color="#E5E5E5"> a third party but known standard</font>

186
00:08:39,370 --> 00:08:43,850
<font color="#CCCCCC">module supported so it's</font><font color="#E5E5E5"> something we</font>

187
00:08:41,570 --> 00:08:46,610
pick up from yang central org which is a

188
00:08:43,850 --> 00:08:49,510
kind<font color="#E5E5E5"> of a loosely held repository for</font>

189
00:08:46,610 --> 00:08:55,370
useful yang files or yang modules and

190
00:08:49,510 --> 00:08:58,100
there's also some iono an ITF managed

191
00:08:55,370 --> 00:09:02,750
modules in this<font color="#CCCCCC"> case largely around</font>

192
00:08:58,100 --> 00:09:04,400
types access control management and some

193
00:09:02,750 --> 00:09:06,920
of the monitoring capabilities that we

194
00:09:04,400 --> 00:09:11,600
have standardized netconf notifications

195
00:09:06,920 --> 00:09:14,780
and general types so this is the

196
00:09:11,600 --> 00:09:17,240
complete way for the server<font color="#CCCCCC"> to tell the</font>

197
00:09:14,780 --> 00:09:19,010
client how you can interact with it

198
00:09:17,240 --> 00:09:21,350
<font color="#CCCCCC">using the</font><font color="#E5E5E5"> net com protocol which</font>

199
00:09:19,010 --> 00:09:24,830
extensions which optional extensions to

200
00:09:21,350 --> 00:09:27,950
<font color="#CCCCCC">the protocol it supports and which yang</font>

201
00:09:24,830 --> 00:09:31,280
modules be that again proprietary third

202
00:09:27,950 --> 00:09:33,080
party or standard that can be that can

203
00:09:31,280 --> 00:09:35,300
be manipulated here so this should give

204
00:09:33,080 --> 00:09:37,310
the client developer a complete

205
00:09:35,300 --> 00:09:39,260
understanding<font color="#E5E5E5"> of the entire data set the</font>

206
00:09:37,310 --> 00:09:41,839
<font color="#CCCCCC">start structures in tax and semantics of</font>

207
00:09:39,260 --> 00:09:44,720
<font color="#E5E5E5">the data that</font><font color="#CCCCCC"> you can manipulate in this</font>

208
00:09:41,840 --> 00:09:47,450
box you're not<font color="#E5E5E5"> supposed to have to query</font>

209
00:09:44,720 --> 00:09:50,750
for<font color="#E5E5E5"> other things again like version of</font>

210
00:09:47,450 --> 00:09:52,250
some sort<font color="#E5E5E5"> of a vendor name or ID this</font>

211
00:09:50,750 --> 00:09:54,910
should be<font color="#CCCCCC"> a</font><font color="#E5E5E5"> complete description</font><font color="#CCCCCC"> of the</font>

212
00:09:52,250 --> 00:09:54,910
entire dataset

213
00:09:59,680 --> 00:10:05,380
<font color="#E5E5E5">okay so the next thing now</font><font color="#CCCCCC"> that we know</font>

214
00:10:02,220 --> 00:10:07,360
what it supports the first thing we can

215
00:10:05,380 --> 00:10:11,439
do for this demo over this session is to

216
00:10:07,360 --> 00:10:13,600
issue a get request on the route<font color="#E5E5E5"> right</font>

217
00:10:11,440 --> 00:10:16,630
without a filter this will ask the

218
00:10:13,600 --> 00:10:18,670
device to<font color="#E5E5E5"> dump everything it knows both</font>

219
00:10:16,630 --> 00:10:20,980
configuration and state data to the

220
00:10:18,670 --> 00:10:22,660
<font color="#E5E5E5">client this is one of those things that</font>

221
00:10:20,980 --> 00:10:25,959
if you really want<font color="#CCCCCC"> to stress</font><font color="#E5E5E5"> real</font>

222
00:10:22,660 --> 00:10:27,730
implementations of<font color="#E5E5E5"> net</font><font color="#CCCCCC"> comp let's say</font>

223
00:10:25,959 --> 00:10:30,399
big core routers and things like that

224
00:10:27,730 --> 00:10:32,500
this is usually a very<font color="#E5E5E5"> mean thing to do</font>

225
00:10:30,399 --> 00:10:35,140
because it usually takes a long while

226
00:10:32,500 --> 00:10:36,940
for a router a real implementation to

227
00:10:35,140 --> 00:10:39,010
collect both all operational and

228
00:10:36,940 --> 00:10:40,990
configurational data in a timely manner

229
00:10:39,010 --> 00:10:42,700
<font color="#E5E5E5">and shape it to a client so it's</font>

230
00:10:40,990 --> 00:10:45,190
something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can use if you want</font>

231
00:10:42,700 --> 00:10:46,750
to try and break things now we have a

232
00:10:45,190 --> 00:10:49,290
pretty limited implementation here so

233
00:10:46,750 --> 00:10:53,950
<font color="#E5E5E5">this is pretty snappy so here you'll see</font>

234
00:10:49,290 --> 00:10:56,349
in this or PC reply a set<font color="#E5E5E5"> of data and</font>

235
00:10:53,950 --> 00:10:59,980
here<font color="#CCCCCC"> you'll also</font><font color="#E5E5E5"> start</font><font color="#CCCCCC"> to see as I</font>

236
00:10:56,350 --> 00:11:03,010
mentioned<font color="#CCCCCC"> before</font><font color="#E5E5E5"> identifiers for yang</font>

237
00:10:59,980 --> 00:11:07,390
modules using namespaces so when the

238
00:11:03,010 --> 00:11:10,569
client sees this it knows which yang

239
00:11:07,390 --> 00:11:12,459
module this data is valid according to

240
00:11:10,570 --> 00:11:15,070
<font color="#E5E5E5">okay so here's kind of the back pointer</font>

241
00:11:12,459 --> 00:11:16,839
from the content into the yang modules

242
00:11:15,070 --> 00:11:18,850
that the client should know about at

243
00:11:16,839 --> 00:11:21,910
this<font color="#E5E5E5"> point</font><font color="#CCCCCC"> right so here's where</font>

244
00:11:18,850 --> 00:11:26,440
namespaces becomes useful so if we keep

245
00:11:21,910 --> 00:11:27,699
looking for<font color="#E5E5E5"> them we will see</font><font color="#CCCCCC"> that so we</font>

246
00:11:26,440 --> 00:11:29,620
<font color="#E5E5E5">had Triple A here's the conf d</font>

247
00:11:27,700 --> 00:11:31,240
monitoring and here's the actual<font color="#E5E5E5"> content</font>

248
00:11:29,620 --> 00:11:33,010
of the module that we're going<font color="#E5E5E5"> to play</font>

249
00:11:31,240 --> 00:11:34,810
around<font color="#E5E5E5"> with which is then from a</font>

250
00:11:33,010 --> 00:11:39,939
third-party environments the yang

251
00:11:34,810 --> 00:11:41,619
central repository here's our access

252
00:11:39,940 --> 00:11:43,029
controls you'll see a role based access

253
00:11:41,620 --> 00:11:47,680
control according to the standard model

254
00:11:43,029 --> 00:11:49,300
from the ITF and here's netconf state so

255
00:11:47,680 --> 00:11:50,739
here's actually<font color="#E5E5E5"> another way of getting</font>

256
00:11:49,300 --> 00:11:53,109
to the same data that we got in<font color="#CCCCCC"> our</font>

257
00:11:50,740 --> 00:11:56,350
hello but inside of the protocol session

258
00:11:53,110 --> 00:11:57,520
so if you have some for<font color="#E5E5E5"> some reason you</font>

259
00:11:56,350 --> 00:11:58,420
want<font color="#E5E5E5"> to see these things again but you</font>

260
00:11:57,520 --> 00:12:00,640
don't want to tear down the net

261
00:11:58,420 --> 00:12:04,899
concession you can query for this

262
00:12:00,640 --> 00:12:06,910
namespace there's also types right so

263
00:12:04,899 --> 00:12:10,650
inside of this data model we're

264
00:12:06,910 --> 00:12:12,910
leveraging or reusing a data type from

265
00:12:10,650 --> 00:12:15,730
an external or from

266
00:12:12,910 --> 00:12:17,140
separate module right so if we look<font color="#E5E5E5"> at</font>

267
00:12:15,730 --> 00:12:19,840
in this<font color="#E5E5E5"> yank file you'll see that they</font>

268
00:12:17,140 --> 00:12:21,790
have borrowed the transaction ID type

269
00:12:19,840 --> 00:12:23,410
from net cough monitoring and they're

270
00:12:21,790 --> 00:12:25,240
using<font color="#E5E5E5"> it here right so for completeness</font>

271
00:12:23,410 --> 00:12:30,069
of course we need to point out the

272
00:12:25,240 --> 00:12:33,690
namespace here as well<font color="#CCCCCC"> okay so that's</font>

273
00:12:30,070 --> 00:12:37,060
the entire<font color="#CCCCCC"> thing the second of course</font>

274
00:12:33,690 --> 00:12:39,250
basic primitive feature we have here is

275
00:12:37,060 --> 00:12:41,739
get config so<font color="#E5E5E5"> remember this will fetch</font>

276
00:12:39,250 --> 00:12:44,230
only configuration data right so it will

277
00:12:41,740 --> 00:12:48,700
leave the state data out and just get

278
00:12:44,230 --> 00:12:50,050
the configuration so that would be

279
00:12:48,700 --> 00:12:52,000
somewhat different<font color="#CCCCCC"> triple-a</font><font color="#E5E5E5"> is still</font>

280
00:12:50,050 --> 00:12:54,969
configurable we have configuration stuff

281
00:12:52,000 --> 00:12:58,530
in dhcp and ACM but we don't have<font color="#E5E5E5"> the</font>

282
00:12:54,970 --> 00:13:00,730
<font color="#E5E5E5">monitoring things for</font><font color="#CCCCCC"> example so the the</font>

283
00:12:58,530 --> 00:13:02,560
the data that i mentioned you could

284
00:13:00,730 --> 00:13:03,670
fetch that we describe the capabilities

285
00:13:02,560 --> 00:13:05,979
is obviously something you wouldn't

286
00:13:03,670 --> 00:13:07,990
configure so that's operational data

287
00:13:05,980 --> 00:13:12,330
hence it doesn't arrive when<font color="#CCCCCC"> i do a get</font>

288
00:13:07,990 --> 00:13:12,330
config like this<font color="#E5E5E5"> okay</font>

289
00:13:16,209 --> 00:13:25,508
and let's quickly look at the same<font color="#CCCCCC"> thing</font>

290
00:13:18,699 --> 00:13:28,719
<font color="#CCCCCC">but using rest cough</font><font color="#E5E5E5"> okay so rest comp</font>

291
00:13:25,509 --> 00:13:32,050
then uses HTTP and the well-known HTTP

292
00:13:28,720 --> 00:13:34,899
verbs<font color="#CCCCCC"> to take and format data according</font>

293
00:13:32,050 --> 00:13:38,349
to a yang model and send it to<font color="#E5E5E5"> the</font>

294
00:13:34,899 --> 00:13:40,720
client right and we have<font color="#CCCCCC"> two encoding we</font>

295
00:13:38,350 --> 00:13:42,279
have<font color="#E5E5E5"> XML and we have JSON and in this</font>

296
00:13:40,720 --> 00:13:45,759
case where we don't<font color="#E5E5E5"> send any except</font>

297
00:13:42,279 --> 00:13:54,179
headers it's going<font color="#E5E5E5"> to arrive oh that's</font>

298
00:13:45,759 --> 00:13:54,179
interesting oh my first snack

299
00:13:57,070 --> 00:14:04,750
see what that<font color="#CCCCCC"> is oh</font><font color="#E5E5E5"> there we go okay</font>

300
00:14:01,810 --> 00:14:06,780
let's do that again why would<font color="#CCCCCC"> you do</font>

301
00:14:04,750 --> 00:14:06,780
that

302
00:14:07,459 --> 00:14:16,309
here we go so this is querying the top

303
00:14:11,660 --> 00:14:18,050
level<font color="#CCCCCC"> of the REST API all right so this</font>

304
00:14:16,309 --> 00:14:20,389
would<font color="#CCCCCC"> be the URL for the top level and</font>

305
00:14:18,050 --> 00:14:22,490
of course<font color="#E5E5E5"> just as we near the other rest</font>

306
00:14:20,389 --> 00:14:24,259
interface you will have to know what to

307
00:14:22,490 --> 00:14:26,569
look for<font color="#E5E5E5"> this right there are trickeries</font>

308
00:14:24,259 --> 00:14:29,389
around using particularly well

309
00:14:26,569 --> 00:14:31,368
particularly crafted<font color="#CCCCCC"> urls and using the</font>

310
00:14:29,389 --> 00:14:33,350
well-known name space but you will have

311
00:14:31,369 --> 00:14:35,809
to find the end point for the rest

312
00:14:33,350 --> 00:14:39,249
interface<font color="#E5E5E5"> beacon sort wearing it and for</font>

313
00:14:35,809 --> 00:14:39,249
this implementation this is where<font color="#CCCCCC"> round</font>

314
00:14:41,290 --> 00:14:46,969
it is an alternative protocol to use

315
00:14:44,240 --> 00:14:49,939
rest like primitives or rest like

316
00:14:46,970 --> 00:14:52,420
technologies to manipulate data that is

317
00:14:49,939 --> 00:14:54,829
modeled by yang so it's got the same

318
00:14:52,420 --> 00:14:56,179
consistent data store in the bottom it's

319
00:14:54,829 --> 00:15:00,949
just another<font color="#E5E5E5"> way of getting to the data</font>

320
00:14:56,179 --> 00:15:04,100
and manipulating the data thank you for

321
00:15:00,949 --> 00:15:07,368
<font color="#E5E5E5">asking that's a good question so in</font>

322
00:15:04,100 --> 00:15:09,290
<font color="#CCCCCC">general you know netcom is a a context</font>

323
00:15:07,369 --> 00:15:12,110
specific protocol right it's got a lot

324
00:15:09,290 --> 00:15:13,459
of features into it as<font color="#E5E5E5"> primary features</font>

325
00:15:12,110 --> 00:15:15,740
that has to do with the<font color="#CCCCCC"> distributor</font>

326
00:15:13,459 --> 00:15:18,559
domain things like the underpinnings of

327
00:15:15,740 --> 00:15:21,860
transactions rest comp is leveraging

328
00:15:18,559 --> 00:15:23,600
rest right rest for example has the idea

329
00:15:21,860 --> 00:15:26,959
<font color="#CCCCCC">that there should be no side effects</font>

330
00:15:23,600 --> 00:15:29,290
hence you can't do transactions right so

331
00:15:26,959 --> 00:15:31,670
for lightweight want line to one server

332
00:15:29,290 --> 00:15:34,279
fetching and simple configuration

333
00:15:31,670 --> 00:15:35,929
changes rest comp is great for

334
00:15:34,279 --> 00:15:37,970
distributed domains where you need

335
00:15:35,929 --> 00:15:41,420
transactions netconf is probably your

336
00:15:37,970 --> 00:15:44,089
<font color="#E5E5E5">best bet so we also see things like rest</font>

337
00:15:41,420 --> 00:15:45,949
<font color="#E5E5E5">conf on top of controllers where there's</font>

338
00:15:44,089 --> 00:15:47,660
this there's there's practically no

339
00:15:45,949 --> 00:15:50,809
distribution<font color="#CCCCCC"> right it's just</font><font color="#E5E5E5"> a single</font>

340
00:15:47,660 --> 00:15:52,969
server while<font color="#E5E5E5"> there might be a use than</font>

341
00:15:50,809 --> 00:15:56,269
for net conf in the actual distributed

342
00:15:52,970 --> 00:16:00,339
<font color="#CCCCCC">Network evidence themselves that make</font>

343
00:15:56,269 --> 00:16:00,339
sense kind of

344
00:16:02,269 --> 00:16:09,690
okay i'm<font color="#E5E5E5"> going to show you then of</font>

345
00:16:04,290 --> 00:16:20,790
course what it looks like over json what

346
00:16:09,690 --> 00:16:22,649
is this<font color="#E5E5E5"> this is mean ah that's not it so</font>

347
00:16:20,790 --> 00:16:24,240
here's the JSON it is not very beautiful

348
00:16:22,649 --> 00:16:25,980
we'll look at bigger models but of

349
00:16:24,240 --> 00:16:28,139
course is the exact same thing we just

350
00:16:25,980 --> 00:16:30,360
<font color="#E5E5E5">asked it for different encoding over the</font>

351
00:16:28,139 --> 00:16:32,250
wire right so now it comes<font color="#E5E5E5"> down to</font>

352
00:16:30,360 --> 00:16:34,620
programmer preference would you rather

353
00:16:32,250 --> 00:16:36,449
whip out your<font color="#E5E5E5"> XML library and parse the</font>

354
00:16:34,620 --> 00:16:38,779
incoming content or would you<font color="#CCCCCC"> rather use</font>

355
00:16:36,449 --> 00:16:42,540
your whatever native way you have of

356
00:16:38,779 --> 00:16:44,069
parsing and ingesting<font color="#CCCCCC"> JSON but it's</font><font color="#E5E5E5"> the</font>

357
00:16:42,540 --> 00:16:47,000
same data and it's driven<font color="#CCCCCC"> by the same</font>

358
00:16:44,069 --> 00:16:47,000
<font color="#E5E5E5">data model</font>

359
00:16:52,950 --> 00:17:03,330
so we can<font color="#E5E5E5"> actually look at the</font><font color="#CCCCCC"> running</font>

360
00:16:54,930 --> 00:17:05,069
<font color="#E5E5E5">database of course in the same way what</font>

361
00:17:03,330 --> 00:17:08,790
we saw with the first queries was just

362
00:17:05,069 --> 00:17:10,349
the top level content so here's the

363
00:17:08,790 --> 00:17:12,540
actual running database and you would<font color="#CCCCCC"> be</font>

364
00:17:10,349 --> 00:17:16,409
not so surprised<font color="#E5E5E5"> to see that it is the</font>

365
00:17:12,540 --> 00:17:18,270
same content as we would have over net

366
00:17:16,410 --> 00:17:20,370
conf it's just<font color="#E5E5E5"> that this is the running</font>

367
00:17:18,270 --> 00:17:23,639
database which by definition is the

368
00:17:20,369 --> 00:17:29,429
configuration only and of<font color="#E5E5E5"> course you can</font>

369
00:17:23,640 --> 00:17:33,170
ask for<font color="#E5E5E5"> it over JSON instead so you will</font>

370
00:17:29,430 --> 00:17:40,310
see this is the<font color="#E5E5E5"> same data but it's JSON</font>

371
00:17:33,170 --> 00:17:40,310
encoded ok

372
00:17:42,360 --> 00:17:49,139
okay so if we look at this the way we

373
00:17:45,540 --> 00:17:52,200
fetched the schema again or looked at

374
00:17:49,140 --> 00:17:55,790
the the output of the<font color="#E5E5E5"> hello message</font>

375
00:17:52,200 --> 00:17:58,320
right so a couple of modules here and

376
00:17:55,790 --> 00:18:01,740
the one<font color="#E5E5E5"> that we care mostly about today</font>

377
00:17:58,320 --> 00:18:05,250
is the dhcp module<font color="#E5E5E5"> okay and we know that</font>

378
00:18:01,740 --> 00:18:15,200
it's<font color="#E5E5E5"> identifier</font><font color="#CCCCCC"> its dhcp so now we can</font>

379
00:18:05,250 --> 00:18:15,200
do<font color="#E5E5E5"> I get schema equals dhcp</font>

380
00:18:16,540 --> 00:18:22,790
so this tells the<font color="#E5E5E5"> server to send us the</font>

381
00:18:20,390 --> 00:18:26,480
actual<font color="#E5E5E5"> content of that schema so again</font>

382
00:18:22,790 --> 00:18:28,428
if you open up a<font color="#CCCCCC"> Hello if you have a</font>

383
00:18:26,480 --> 00:18:30,620
capability to change and<font color="#E5E5E5"> help the hello</font>

384
00:18:28,429 --> 00:18:32,750
message from the server tells you that

385
00:18:30,620 --> 00:18:34,669
there are now modules that<font color="#E5E5E5"> you have</font>

386
00:18:32,750 --> 00:18:35,809
never seen<font color="#E5E5E5"> before or new versions this</font>

387
00:18:34,670 --> 00:18:38,929
is literally how you would go about

388
00:18:35,809 --> 00:18:40,340
updating your disc-based library of yang

389
00:18:38,929 --> 00:18:44,470
modules or whatever you need to do with

390
00:18:40,340 --> 00:18:44,470
<font color="#CCCCCC">it to be up to date right</font>

391
00:18:54,380 --> 00:19:02,860
<font color="#E5E5E5">I would strongly suggest they would have</font>

392
00:18:57,380 --> 00:19:05,300
<font color="#CCCCCC">it</font><font color="#E5E5E5"> textual strongly</font><font color="#CCCCCC"> suggest speed and</font>

393
00:19:02,860 --> 00:19:07,189
because there's<font color="#E5E5E5"> no reason I mean it</font>

394
00:19:05,300 --> 00:19:09,470
remember it's it's<font color="#E5E5E5"> the schema it's not</font>

395
00:19:07,190 --> 00:19:12,440
the content right so there should be

396
00:19:09,470 --> 00:19:14,870
<font color="#E5E5E5">little need for assemblying things it</font>

397
00:19:12,440 --> 00:19:17,480
should literally be a part of shipping

398
00:19:14,870 --> 00:19:21,399
code should be putting the yang file on

399
00:19:17,480 --> 00:19:21,400
the file system and just<font color="#E5E5E5"> serve it</font>

400
00:19:44,450 --> 00:19:48,410
it is an informational piece but it's a

401
00:19:46,610 --> 00:19:55,429
pretty crucial right because it means

402
00:19:48,410 --> 00:19:58,310
that any interested client can acquire

403
00:19:55,430 --> 00:20:00,350
you know the<font color="#E5E5E5"> kind of contract between</font>

404
00:19:58,310 --> 00:20:02,659
the network device itself and the client

405
00:20:00,350 --> 00:20:05,090
work right it is almost like a promise

406
00:20:02,660 --> 00:20:08,870
from the device<font color="#CCCCCC"> that these are my</font>

407
00:20:05,090 --> 00:20:10,370
current data sets that I support<font color="#E5E5E5"> and you</font>

408
00:20:08,870 --> 00:20:14,239
can always<font color="#E5E5E5"> go</font><font color="#CCCCCC"> to the source for</font><font color="#E5E5E5"> that</font>

409
00:20:10,370 --> 00:20:18,080
<font color="#E5E5E5">there's never a we cannot close the gap</font>

410
00:20:14,240 --> 00:20:20,210
for slippage for example in release

411
00:20:18,080 --> 00:20:22,189
versions right because you can always

412
00:20:20,210 --> 00:20:23,990
<font color="#E5E5E5">you know if you're a vendor you can</font>

413
00:20:22,190 --> 00:20:26,540
literally<font color="#E5E5E5"> always tell the customer which</font>

414
00:20:23,990 --> 00:20:28,250
query the router you can always add you

415
00:20:26,540 --> 00:20:30,560
can you can go to the horse's mouth if

416
00:20:28,250 --> 00:20:31,610
<font color="#E5E5E5">you like and then get it from from word</font>

417
00:20:30,560 --> 00:20:34,389
matters which is the actual

418
00:20:31,610 --> 00:20:34,389
implementation

419
00:20:39,500 --> 00:20:47,430
which<font color="#E5E5E5"> I'm sure</font><font color="#CCCCCC"> you know has led to eons</font>

420
00:20:43,500 --> 00:20:49,740
of painful mistakes there were never

421
00:20:47,430 --> 00:20:54,180
away in SNMP to actually query the box

422
00:20:49,740 --> 00:20:55,680
for its<font color="#CCCCCC"> MIPS which is a which was in my</font>

423
00:20:54,180 --> 00:20:58,800
mind<font color="#E5E5E5"> you know something we should have</font>

424
00:20:55,680 --> 00:21:01,770
done for SNMP as well and you would<font color="#CCCCCC"> be</font>

425
00:20:58,800 --> 00:21:03,600
stuck with offline libraries where you

426
00:21:01,770 --> 00:21:05,129
there was no structured version

427
00:21:03,600 --> 00:21:07,020
numbering<font color="#E5E5E5"> either so</font><font color="#CCCCCC"> you could</font><font color="#E5E5E5"> never be</font>

428
00:21:05,130 --> 00:21:09,780
sure that<font color="#CCCCCC"> the main file i have on disk</font>

429
00:21:07,020 --> 00:21:12,389
is actually with this agent implements

430
00:21:09,780 --> 00:21:15,149
because they were never you know version

431
00:21:12,390 --> 00:21:23,460
strings so this<font color="#E5E5E5"> is trying to really</font>

432
00:21:15,150 --> 00:21:25,710
solve<font color="#E5E5E5"> and OD solve that problem</font><font color="#CCCCCC"> okay so</font>

433
00:21:23,460 --> 00:21:27,420
let's look at this let's actually look

434
00:21:25,710 --> 00:21:32,130
at this let's look at it in<font color="#E5E5E5"> a more calm</font>

435
00:21:27,420 --> 00:21:33,540
no let's<font color="#E5E5E5"> move it here so will you get</font>

436
00:21:32,130 --> 00:21:34,920
the headers<font color="#CCCCCC"> of course we have a</font>

437
00:21:33,540 --> 00:21:36,659
particular namespace you've seen that

438
00:21:34,920 --> 00:21:39,570
before in the capabilities exchange we

439
00:21:36,660 --> 00:21:41,450
have a prefix so if people import this

440
00:21:39,570 --> 00:21:44,340
<font color="#E5E5E5">you know this is how they would</font>

441
00:21:41,450 --> 00:21:47,400
namespace identify this we use the yang

442
00:21:44,340 --> 00:21:49,590
types module which then obviously also

443
00:21:47,400 --> 00:21:52,050
needs<font color="#E5E5E5"> to be present in the capabilities</font>

444
00:21:49,590 --> 00:21:54,679
exchange we use the ITF violent types

445
00:21:52,050 --> 00:21:59,520
and we use a<font color="#E5E5E5"> couple of</font><font color="#CCCCCC"> taylor specific</font>

446
00:21:54,680 --> 00:22:01,320
common data types so first of all we

447
00:21:59,520 --> 00:22:02,700
have a grouping and we talked about

448
00:22:01,320 --> 00:22:05,040
groupings in the previous walk right

449
00:22:02,700 --> 00:22:06,480
this grouping is called subnet list so

450
00:22:05,040 --> 00:22:10,520
we have a list of subnets that we can

451
00:22:06,480 --> 00:22:15,360
reuse by name<font color="#E5E5E5"> okay this list has a key</font>

452
00:22:10,520 --> 00:22:18,629
called net this key leaf is of type I

453
00:22:15,360 --> 00:22:21,360
NAT IP prefix so it's a well-known data

454
00:22:18,630 --> 00:22:24,540
type<font color="#E5E5E5"> and since it says IP prefix and not</font>

455
00:22:21,360 --> 00:22:29,060
ipv4<font color="#E5E5E5"> ipv6 it's actually a union of ipv4</font>

456
00:22:24,540 --> 00:22:33,450
or<font color="#E5E5E5"> ipv6 prefix let's get a container</font>

457
00:22:29,060 --> 00:22:36,419
called range with presence so if this

458
00:22:33,450 --> 00:22:38,610
container actually exists if an instance

459
00:22:36,420 --> 00:22:40,800
of data of this continued exists this

460
00:22:38,610 --> 00:22:43,080
box has enabled dynamic address

461
00:22:40,800 --> 00:22:45,990
assignment right in this<font color="#E5E5E5"> container</font><font color="#CCCCCC"> there</font>

462
00:22:43,080 --> 00:22:47,790
<font color="#CCCCCC">is a leaf called dynamic bootp and it's</font>

463
00:22:45,990 --> 00:22:50,070
also empty so it has kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> presents</font>

464
00:22:47,790 --> 00:22:52,170
meaning if this is

465
00:22:50,070 --> 00:22:54,600
present but<font color="#E5E5E5"> empty it allows bootp</font>

466
00:22:52,170 --> 00:22:56,640
clients to work on this range<font color="#CCCCCC"> and you</font>

467
00:22:54,600 --> 00:22:59,719
have a low and a high address and they

468
00:22:56,640 --> 00:23:01,800
are both mandatory which means that

469
00:22:59,720 --> 00:23:03,630
configuration that lack either of these

470
00:23:01,800 --> 00:23:06,389
is<font color="#CCCCCC"> not valid you can't create this</font>

471
00:23:03,630 --> 00:23:09,900
container without providing values for

472
00:23:06,390 --> 00:23:11,190
low and<font color="#E5E5E5"> high we don't have default</font>

473
00:23:09,900 --> 00:23:13,590
values here we could have default values

474
00:23:11,190 --> 00:23:15,360
and that would remove<font color="#CCCCCC"> the need for</font>

475
00:23:13,590 --> 00:23:17,129
mandatory<font color="#E5E5E5"> because if you create it and</font>

476
00:23:15,360 --> 00:23:19,110
don't have an input data the

477
00:23:17,130 --> 00:23:23,790
<font color="#E5E5E5">implementation would just take the</font>

478
00:23:19,110 --> 00:23:27,600
default value ok we have a container

479
00:23:23,790 --> 00:23:29,190
<font color="#CCCCCC">DHCP options we have a leaf list of</font>

480
00:23:27,600 --> 00:23:32,129
routers so of course<font color="#E5E5E5"> you can have a</font>

481
00:23:29,190 --> 00:23:34,080
number of routers in this container it

482
00:23:32,130 --> 00:23:36,450
is<font color="#E5E5E5"> ordered by you sir so there's some</font>

483
00:23:34,080 --> 00:23:38,580
semantics to the order it's up<font color="#CCCCCC"> to the</font>

484
00:23:36,450 --> 00:23:41,330
client to order the entries of<font color="#CCCCCC"> these</font>

485
00:23:38,580 --> 00:23:44,070
lists and usually in priority order them

486
00:23:41,330 --> 00:23:49,110
you got a domain name and<font color="#E5E5E5"> we reuse the</font>

487
00:23:44,070 --> 00:23:52,169
inet domain name here you have a max

488
00:23:49,110 --> 00:23:53,939
least Im the defaults to<font color="#CCCCCC"> 7200 it's in</font>

489
00:23:52,170 --> 00:23:55,830
unit seconds which means that<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you</font>

490
00:23:53,940 --> 00:23:58,860
create max least<font color="#E5E5E5"> time but don't submit a</font>

491
00:23:55,830 --> 00:24:00,780
value just going to pick<font color="#E5E5E5"> 7200 and then</font>

492
00:23:58,860 --> 00:24:03,719
we come to Canada meteor the DHCP

493
00:24:00,780 --> 00:24:05,970
container so you have a max least Im for

494
00:24:03,720 --> 00:24:07,920
<font color="#E5E5E5">dhcp the</font><font color="#CCCCCC"> faults</font><font color="#E5E5E5"> are the same thing</font><font color="#CCCCCC"> you</font>

495
00:24:05,970 --> 00:24:09,110
have a default least time and here's

496
00:24:07,920 --> 00:24:12,600
where it gets start to get interesting

497
00:24:09,110 --> 00:24:14,939
here's a must statement that says that

498
00:24:12,600 --> 00:24:17,010
the default each time cannot be longer

499
00:24:14,940 --> 00:24:21,750
than the max<font color="#CCCCCC"> waste time right so we can</font>

500
00:24:17,010 --> 00:24:23,550
capture those that that mistake before

501
00:24:21,750 --> 00:24:25,800
hitting the actual instrumentation by

502
00:24:23,550 --> 00:24:28,970
<font color="#CCCCCC">just looking at the data incoming right</font>

503
00:24:25,800 --> 00:24:31,560
and the default for that is 600 and

504
00:24:28,970 --> 00:24:33,000
here's how we instantiate the grouping

505
00:24:31,560 --> 00:24:34,710
that<font color="#E5E5E5"> we started out with so here's a</font>

506
00:24:33,000 --> 00:24:36,990
sudden at least here's how we're that is

507
00:24:34,710 --> 00:24:40,200
actually let's say expand it into the

508
00:24:36,990 --> 00:24:41,670
data tree we got a container shot

509
00:24:40,200 --> 00:24:44,580
networks which is a list of<font color="#CCCCCC"> shark</font>

510
00:24:41,670 --> 00:24:46,620
<font color="#CCCCCC">networks with a key name it's got names</font>

511
00:24:44,580 --> 00:24:48,750
and it also uses the sudden at least

512
00:24:46,620 --> 00:24:51,929
it's keyed<font color="#CCCCCC"> off of name but it's a set of</font>

513
00:24:48,750 --> 00:24:54,480
subnets and we have a container status

514
00:24:51,930 --> 00:24:56,460
which is config false so this is<font color="#E5E5E5"> not</font>

515
00:24:54,480 --> 00:24:58,470
configuration data right it's actually

516
00:24:56,460 --> 00:25:00,250
state data so it's the content of this

517
00:24:58,470 --> 00:25:03,220
will not come<font color="#CCCCCC"> to naught P</font>

518
00:25:00,250 --> 00:25:04,750
turned if we do a get config right so

519
00:25:03,220 --> 00:25:06,700
<font color="#E5E5E5">it's typically the way I used</font><font color="#CCCCCC"> to think</font>

520
00:25:04,750 --> 00:25:10,450
about it is typically something<font color="#E5E5E5"> that you</font>

521
00:25:06,700 --> 00:25:15,660
wouldn't expect<font color="#E5E5E5"> in a backup file so</font>

522
00:25:10,450 --> 00:25:15,660
those<font color="#E5E5E5"> are the leases that we have yep</font>

523
00:25:16,260 --> 00:25:21,670
that's right config falls on a container

524
00:25:19,090 --> 00:25:26,350
declares everything under that container

525
00:25:21,670 --> 00:25:28,180
to be config false because this is where

526
00:25:26,350 --> 00:25:29,939
it starts<font color="#E5E5E5"> to get you know even my head</font>

527
00:25:28,180 --> 00:25:32,740
still spins if you try to put<font color="#CCCCCC"> a</font>

528
00:25:29,940 --> 00:25:34,240
configurational parameter inside the

529
00:25:32,740 --> 00:25:37,180
scope of something that is operational

530
00:25:34,240 --> 00:25:40,570
what happens if that operational you

531
00:25:37,180 --> 00:25:42,910
know state goes away and again what

532
00:25:40,570 --> 00:25:44,860
happens if you take a backup right of

533
00:25:42,910 --> 00:25:47,350
something that relies on configurational

534
00:25:44,860 --> 00:25:49,090
state that configures the configuration

535
00:25:47,350 --> 00:25:50,830
state changes<font color="#CCCCCC"> and you try to roll back</font>

536
00:25:49,090 --> 00:25:52,600
all right so you're<font color="#E5E5E5"> absolutely right</font>

537
00:25:50,830 --> 00:25:54,730
that config falls in a container says

538
00:25:52,600 --> 00:26:00,310
that below here we can have any

539
00:25:54,730 --> 00:26:01,570
configuration and<font color="#E5E5E5"> I mention our pcs in</font>

540
00:26:00,310 --> 00:26:04,060
this case we're using<font color="#E5E5E5"> the tail</font><font color="#CCCCCC"> f</font>

541
00:26:01,570 --> 00:26:07,060
extension called set clock so we have

542
00:26:04,060 --> 00:26:11,020
some input so clock settings we can set

543
00:26:07,060 --> 00:26:13,330
the time and we won't<font color="#CCCCCC"> allow</font><font color="#E5E5E5"> this call to</font>

544
00:26:11,020 --> 00:26:15,700
we don't<font color="#E5E5E5"> allow the call to arrive with</font>

545
00:26:13,330 --> 00:26:17,530
clock settings empty or without clock

546
00:26:15,700 --> 00:26:21,460
settings it makes no<font color="#CCCCCC"> sense to</font><font color="#E5E5E5"> try to set</font>

547
00:26:17,530 --> 00:26:23,290
clock without clock settings it's not

548
00:26:21,460 --> 00:26:26,980
mandatory though to express it this is

549
00:26:23,290 --> 00:26:28,240
UTC or no and whether we're going to try

550
00:26:26,980 --> 00:26:32,440
and sing for<font color="#CCCCCC"> the hardware job and the</font>

551
00:26:28,240 --> 00:26:34,390
output will<font color="#CCCCCC"> be a combination of</font><font color="#E5E5E5"> the</font>

552
00:26:32,440 --> 00:26:36,340
system clock and the<font color="#E5E5E5"> hardware go so and</font>

553
00:26:34,390 --> 00:26:41,920
they're both leveraging the yang data

554
00:26:36,340 --> 00:26:47,399
type date and time<font color="#CCCCCC"> okay we</font><font color="#E5E5E5"> can also use</font>

555
00:26:41,920 --> 00:26:47,400
the PI to my producer wants the season

556
00:26:49,919 --> 00:26:58,080
<font color="#E5E5E5">okay i will</font><font color="#CCCCCC"> repeat the questions thank</font>

557
00:26:53,110 --> 00:27:02,879
<font color="#E5E5E5">you sir so there's a tool called p hang</font>

558
00:26:58,080 --> 00:27:06,220
so if you want to<font color="#E5E5E5"> take a quick look at</font>

559
00:27:02,880 --> 00:27:08,679
this structure of any module<font color="#CCCCCC"> i could i</font>

560
00:27:06,220 --> 00:27:10,690
would<font color="#E5E5E5"> strongly suggest you look at p and</font>

561
00:27:08,679 --> 00:27:14,230
its<font color="#E5E5E5"> output format called tree so I just</font>

562
00:27:10,690 --> 00:27:15,690
so happen to have up here the dhcp yang

563
00:27:14,230 --> 00:27:17,679
module hope I can<font color="#E5E5E5"> resolve all</font>

564
00:27:15,690 --> 00:27:19,690
dependencies otherwise we'll have<font color="#CCCCCC"> to go</font>

565
00:27:17,679 --> 00:27:21,220
work on that so here's the same data

566
00:27:19,690 --> 00:27:24,580
that I just showed you but in a skeet

567
00:27:21,220 --> 00:27:27,010
reform<font color="#E5E5E5"> okay and it's got</font><font color="#CCCCCC"> a particular</font>

568
00:27:24,580 --> 00:27:29,799
way of coding things but<font color="#E5E5E5"> this is easier</font>

569
00:27:27,010 --> 00:27:32,289
to<font color="#E5E5E5"> get an overview of then then</font>

570
00:27:29,799 --> 00:27:36,789
scrolling through the 95 itself that I

571
00:27:32,289 --> 00:27:39,250
just did there are also many other

572
00:27:36,789 --> 00:27:41,740
output modules for this including for

573
00:27:39,250 --> 00:27:43,179
<font color="#E5E5E5">the</font><font color="#CCCCCC"> sewing client a uml output module</font>

574
00:27:41,740 --> 00:27:44,590
that can take<font color="#E5E5E5"> yang and I'll put</font>

575
00:27:43,179 --> 00:27:48,750
something that looks a whole lot like

576
00:27:44,590 --> 00:27:48,750
<font color="#E5E5E5">you amount so it depends on your needs</font>

577
00:27:49,740 --> 00:27:52,740
<font color="#E5E5E5">okay</font>

578
00:27:55,389 --> 00:28:05,708
now we're going<font color="#E5E5E5"> to start in on the</font>

579
00:27:57,489 --> 00:28:07,599
actual yep it's a that's right<font color="#E5E5E5"> it's a</font>

580
00:28:05,709 --> 00:28:10,209
partial validator so the question<font color="#CCCCCC"> was</font>

581
00:28:07,599 --> 00:28:12,339
peeing is a tool yeah so yeah as an

582
00:28:10,209 --> 00:28:14,259
input it takes young files it parses

583
00:28:12,339 --> 00:28:17,139
validates and it's got a fairly flexible

584
00:28:14,259 --> 00:28:18,549
output format<font color="#CCCCCC"> plug-in environment so in</font>

585
00:28:17,139 --> 00:28:21,519
this case we<font color="#CCCCCC"> use the particular output</font>

586
00:28:18,549 --> 00:28:23,799
format called f3 or three and there are

587
00:28:21,519 --> 00:28:26,169
many others and it's open source and

588
00:28:23,799 --> 00:28:33,849
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> available that I think it leaves at</font>

589
00:28:26,169 --> 00:28:35,589
Google go<font color="#CCCCCC"> alright now we're going to</font><font color="#E5E5E5"> get</font>

590
00:28:33,849 --> 00:28:39,389
back to netcom console<font color="#E5E5E5"> but we're going</font>

591
00:28:35,589 --> 00:28:42,749
<font color="#E5E5E5">to actually start looking at things here</font>

592
00:28:39,389 --> 00:28:42,748
let's do this

593
00:28:46,110 --> 00:28:52,199
no let's not do<font color="#CCCCCC"> that let's do this</font>

594
00:28:53,660 --> 00:29:00,710
we're<font color="#E5E5E5"> going to look at a simple XML</font>

595
00:28:57,290 --> 00:29:02,810
request for a filtered get<font color="#E5E5E5"> request okay</font>

596
00:29:00,710 --> 00:29:04,910
so what you see<font color="#CCCCCC"> here is a complete</font>

597
00:29:02,810 --> 00:29:06,860
session so of course every time we start

598
00:29:04,910 --> 00:29:10,180
this up we're<font color="#E5E5E5"> going to send a</font><font color="#CCCCCC"> hello</font><font color="#E5E5E5"> let</font>

599
00:29:06,860 --> 00:29:13,100
the capabilities back do<font color="#E5E5E5"> our RPC and</font>

600
00:29:10,180 --> 00:29:16,550
then close the session but<font color="#E5E5E5"> the important</font>

601
00:29:13,100 --> 00:29:17,899
content is in the middle here so here

602
00:29:16,550 --> 00:29:21,050
you see the<font color="#E5E5E5"> layers again right here's</font>

603
00:29:17,900 --> 00:29:23,870
the RPC layer here's<font color="#E5E5E5"> the operation in</font>

604
00:29:21,050 --> 00:29:27,320
this case we've actually have additional

605
00:29:23,870 --> 00:29:28,969
layer of semantics which is a filter so

606
00:29:27,320 --> 00:29:31,760
we're<font color="#E5E5E5"> going to filter on this namespace</font>

607
00:29:28,970 --> 00:29:34,760
which is the dhp namespace and when a

608
00:29:31,760 --> 00:29:41,750
filter on dhcp so only show the subtree

609
00:29:34,760 --> 00:29:44,410
below dhcp so we would do have

610
00:29:41,750 --> 00:29:44,410
confidence<font color="#E5E5E5"> oh</font>

611
00:29:51,970 --> 00:29:55,960
and what comes back not surprisingly is

612
00:29:54,460 --> 00:29:59,140
something that has inside the data

613
00:29:55,960 --> 00:30:07,570
enclosure only the namespace for<font color="#CCCCCC"> DHCP</font>

614
00:29:59,140 --> 00:30:14,910
right it leaves the<font color="#E5E5E5"> rest out response</font>

615
00:30:07,570 --> 00:30:14,909
from the server right

616
00:30:16,550 --> 00:30:21,770
that's right that's right yeah so what I

617
00:30:20,330 --> 00:30:24,620
just showed you here in the in the

618
00:30:21,770 --> 00:30:27,230
editor session this is the<font color="#CCCCCC"> actual netcom</font>

619
00:30:24,620 --> 00:30:28,790
payload that we're sending so<font color="#E5E5E5"> I'm asking</font>

620
00:30:27,230 --> 00:30:30,920
<font color="#E5E5E5">the client to send this in rapid</font>

621
00:30:28,790 --> 00:30:33,980
succession and see what comes<font color="#E5E5E5"> back from</font>

622
00:30:30,920 --> 00:30:36,290
the server so<font color="#E5E5E5"> I like you said I'm</font>

623
00:30:33,980 --> 00:30:38,240
sending a<font color="#CCCCCC"> navcom for PCs and I'm showing</font>

624
00:30:36,290 --> 00:30:40,460
<font color="#CCCCCC">on the screen the</font><font color="#E5E5E5"> output that comes back</font>

625
00:30:38,240 --> 00:30:43,280
again this<font color="#E5E5E5"> is on the protocol level</font>

626
00:30:40,460 --> 00:30:44,750
which<font color="#CCCCCC"> is very specific to this session</font>

627
00:30:43,280 --> 00:30:47,120
here today this is<font color="#E5E5E5"> not how you would do</font>

628
00:30:44,750 --> 00:30:50,380
it in your day-to-day operations but to

629
00:30:47,120 --> 00:30:50,379
show you the way the protocol works

630
00:30:54,890 --> 00:31:00,410
right so that was a gap right so it

631
00:30:57,350 --> 00:31:03,080
would get all the things under dhcp also

632
00:31:00,410 --> 00:31:04,970
the status<font color="#CCCCCC"> alright so down here and we</font>

633
00:31:03,080 --> 00:31:06,889
happen to know because<font color="#E5E5E5"> we've looked at</font>

634
00:31:04,970 --> 00:31:08,930
the yank file that this is not

635
00:31:06,890 --> 00:31:12,410
configuration data this<font color="#E5E5E5"> is actually the</font>

636
00:31:08,930 --> 00:31:20,450
leases that we have outstanding so if i

637
00:31:12,410 --> 00:31:23,540
would use another call called PHP config

638
00:31:20,450 --> 00:31:25,880
which uses another RPC and the big

639
00:31:23,540 --> 00:31:30,170
difference here is that we're<font color="#E5E5E5"> using the</font>

640
00:31:25,880 --> 00:31:31,970
get config operation and if<font color="#E5E5E5"> we use get</font>

641
00:31:30,170 --> 00:31:34,340
config we actually have to tell the

642
00:31:31,970 --> 00:31:36,680
server which database we want to<font color="#E5E5E5"> peek at</font>

643
00:31:34,340 --> 00:31:38,750
right so in this case we want to<font color="#E5E5E5"> look at</font>

644
00:31:36,680 --> 00:31:43,460
the<font color="#E5E5E5"> running database we're going to use</font>

645
00:31:38,750 --> 00:31:45,610
the same filter and we'll see what comes

646
00:31:43,460 --> 00:31:45,610
back

647
00:31:50,140 --> 00:31:54,520
and what you'll<font color="#CCCCCC"> notice here is that</font>

648
00:31:52,030 --> 00:31:56,620
there is<font color="#CCCCCC"> no status subnet right there</font>

649
00:31:54,520 --> 00:31:58,840
sorry there's no status subtree so we're

650
00:31:56,620 --> 00:32:00,520
only fetching the configuration so again

651
00:31:58,840 --> 00:32:02,649
this content is what you're supposed<font color="#CCCCCC"> to</font>

652
00:32:00,520 --> 00:32:04,270
be<font color="#CCCCCC"> able to put to the side your boot</font>

653
00:32:02,650 --> 00:32:05,980
your router or in this case the HP

654
00:32:04,270 --> 00:32:07,120
server crashes you take that content and

655
00:32:05,980 --> 00:32:08,500
you push it back and you're supposed<font color="#E5E5E5"> to</font>

656
00:32:07,120 --> 00:32:10,750
<font color="#E5E5E5">be back to where exactly where you were</font>

657
00:32:08,500 --> 00:32:13,090
so this is<font color="#CCCCCC"> the semantic difference</font>

658
00:32:10,750 --> 00:32:15,810
between operational data and

659
00:32:13,090 --> 00:32:15,810
configuration data

660
00:32:20,310 --> 00:32:24,480
<font color="#E5E5E5">okay so let's go into the more</font>

661
00:32:22,380 --> 00:32:25,980
interesting things we're<font color="#E5E5E5"> going to start</font>

662
00:32:24,480 --> 00:32:27,630
up taking things here<font color="#E5E5E5"> and we're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

663
00:32:25,980 --> 00:32:29,130
start with<font color="#E5E5E5"> just manipulating the running</font>

664
00:32:27,630 --> 00:32:31,350
data stores we're going to write right

665
00:32:29,130 --> 00:32:36,510
into what it's doing right now we get to

666
00:32:31,350 --> 00:32:39,050
commits and a candidate later so we'll

667
00:32:36,510 --> 00:32:39,050
start<font color="#CCCCCC"> by using</font>

668
00:32:44,770 --> 00:32:50,650
actually let's start by yeah set set the

669
00:32:47,140 --> 00:32:53,170
<font color="#E5E5E5">default least Im to one hour so let's</font>

670
00:32:50,650 --> 00:32:54,760
look<font color="#E5E5E5"> at what that looks like so this has</font>

671
00:32:53,170 --> 00:32:57,820
got more moving parts and again this is

672
00:32:54,760 --> 00:33:00,310
protocol level stuff so it's an RPC it's

673
00:32:57,820 --> 00:33:02,110
got an edit config and of course the<font color="#CCCCCC"> box</font>

674
00:33:00,310 --> 00:33:03,669
wants to know which database do we want

675
00:33:02,110 --> 00:33:04,780
to<font color="#E5E5E5"> configure we want to configure the</font>

676
00:33:03,670 --> 00:33:07,570
running data store so it bites

677
00:33:04,780 --> 00:33:11,500
immediately and we want to config in the

678
00:33:07,570 --> 00:33:15,129
dhcp subtree<font color="#CCCCCC"> okay so we're</font><font color="#E5E5E5"> going to</font>

679
00:33:11,500 --> 00:33:18,250
<font color="#E5E5E5">address this namespace and what we</font><font color="#CCCCCC"> also</font>

680
00:33:15,130 --> 00:33:20,230
need is actually to express which

681
00:33:18,250 --> 00:33:22,780
operation right so the ways you would

682
00:33:20,230 --> 00:33:25,930
manipulate data or you can do things

683
00:33:22,780 --> 00:33:27,129
<font color="#CCCCCC">like add delete and merge right so in</font>

684
00:33:25,930 --> 00:33:28,930
this case we're going to use the merge

685
00:33:27,130 --> 00:33:30,550
operation which means<font color="#CCCCCC"> that we'll take</font>

686
00:33:28,930 --> 00:33:32,410
this input data and merge it what it has

687
00:33:30,550 --> 00:33:35,770
already so it doesn't matter<font color="#CCCCCC"> if this</font>

688
00:33:32,410 --> 00:33:37,420
value exists from before or no we're

689
00:33:35,770 --> 00:33:39,160
just<font color="#E5E5E5"> going to put it</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> there so we need</font>

690
00:33:37,420 --> 00:33:41,760
<font color="#CCCCCC">the</font><font color="#E5E5E5"> namespace from the net cough based</font>

691
00:33:39,160 --> 00:33:44,920
protocol we're<font color="#E5E5E5"> going to update it</font><font color="#CCCCCC"> to the</font>

692
00:33:41,760 --> 00:33:47,129
3600 and then we're going to close the

693
00:33:44,920 --> 00:33:47,130
session

694
00:33:53,360 --> 00:33:57,559
not much to happen here right we just

695
00:33:55,910 --> 00:34:01,190
had a successful return so the server

696
00:33:57,559 --> 00:34:02,928
said<font color="#E5E5E5"> okay which means that that the</font>

697
00:34:01,190 --> 00:34:05,330
value<font color="#CCCCCC"> is now updated right so nothing</font>

698
00:34:02,929 --> 00:34:06,679
particularly exciting there now let's<font color="#E5E5E5"> do</font>

699
00:34:05,330 --> 00:34:13,909
something more exciting let's look at

700
00:34:06,679 --> 00:34:15,560
the invalid data set so<font color="#E5E5E5"> down here we're</font>

701
00:34:13,909 --> 00:34:17,929
going<font color="#E5E5E5"> to put the default least Im to</font>

702
00:34:15,560 --> 00:34:19,969
something<font color="#CCCCCC"> that we know is higher than</font>

703
00:34:17,929 --> 00:34:22,190
<font color="#CCCCCC">the max this time right and this is not</font>

704
00:34:19,969 --> 00:34:26,330
<font color="#E5E5E5">allowed according</font><font color="#CCCCCC"> to our yang modules</font>

705
00:34:22,190 --> 00:34:27,668
must statement so if we<font color="#CCCCCC"> do that we</font>

706
00:34:26,330 --> 00:34:33,259
should get a more interesting feedback

707
00:34:27,668 --> 00:34:35,149
whoops so here tells me<font color="#E5E5E5"> and of</font><font color="#CCCCCC"> course</font>

708
00:34:33,260 --> 00:34:36,740
this again is based off of the yang

709
00:34:35,149 --> 00:34:39,138
that's loaded into the agent right so

710
00:34:36,739 --> 00:34:40,609
<font color="#E5E5E5">this should happen far before you upset</font>

711
00:34:39,139 --> 00:34:43,760
the<font color="#CCCCCC"> actually instrumentation the actual</font>

712
00:34:40,609 --> 00:34:46,129
router running code right you get an RPC

713
00:34:43,760 --> 00:34:48,200
error with a number of metadata so its

714
00:34:46,129 --> 00:34:50,509
application level it's an operation that

715
00:34:48,199 --> 00:34:53,299
failed it's an error so it's a violation

716
00:34:50,510 --> 00:34:56,920
right and it's a must violation and the

717
00:34:53,300 --> 00:35:00,080
error path in this case is in the DHCP

718
00:34:56,920 --> 00:35:03,770
namespace and it's actually<font color="#CCCCCC"> in this</font>

719
00:35:00,080 --> 00:35:06,980
subtree of the data set right and the

720
00:35:03,770 --> 00:35:09,380
error message in English is exactly what

721
00:35:06,980 --> 00:35:11,119
it<font color="#E5E5E5"> said in the</font><font color="#CCCCCC"> yang module so it</font>

722
00:35:09,380 --> 00:35:12,740
literally sends what the yang model

723
00:35:11,119 --> 00:35:15,770
describes as the error message because

724
00:35:12,740 --> 00:35:18,520
it<font color="#E5E5E5"> broke the constraint now we're</font>

725
00:35:15,770 --> 00:35:21,550
<font color="#CCCCCC">getting a question on the mic great yeah</font>

726
00:35:18,520 --> 00:35:24,320
I'm Richard Campbell them with priceline

727
00:35:21,550 --> 00:35:26,570
just a quick question can you variable

728
00:35:24,320 --> 00:35:29,420
<font color="#E5E5E5">eyes the output messages so you can</font>

729
00:35:26,570 --> 00:35:32,140
actually specify the actual least time

730
00:35:29,420 --> 00:35:35,450
max in the<font color="#CCCCCC"> error message so you know</font>

731
00:35:32,140 --> 00:35:38,319
what that target is that's actually a

732
00:35:35,450 --> 00:35:41,810
vendor extension not in the base

733
00:35:38,320 --> 00:35:43,550
definition no variables in the base but

734
00:35:41,810 --> 00:35:45,880
it's a very useful vendor extension as

735
00:35:43,550 --> 00:35:45,880
you can imagine

736
00:35:47,380 --> 00:35:54,650
all right oh one more yay well Ralph

737
00:35:52,130 --> 00:35:56,840
Whelan from the internet archive if I

738
00:35:54,650 --> 00:36:00,410
want<font color="#E5E5E5"> to implement one of the new a DHCP</font>

739
00:35:56,840 --> 00:36:02,960
feature say each<font color="#CCCCCC"> DP option 53 at which</font>

740
00:36:00,410 --> 00:36:05,450
<font color="#E5E5E5">point would I learn that the particular</font>

741
00:36:02,960 --> 00:36:07,130
device doesn't have that implement it is

742
00:36:05,450 --> 00:36:09,980
that<font color="#CCCCCC"> something where I can validate it</font>

743
00:36:07,130 --> 00:36:12,530
on the client<font color="#E5E5E5"> and it already knows</font>

744
00:36:09,980 --> 00:36:13,850
because device told me what it can do or

745
00:36:12,530 --> 00:36:15,830
is<font color="#CCCCCC"> it something that I would only find</font>

746
00:36:13,850 --> 00:36:18,500
out when i try to load it into the

747
00:36:15,830 --> 00:36:21,410
<font color="#E5E5E5">server on a particular router that is</font>

748
00:36:18,500 --> 00:36:23,030
not supported in a<font color="#E5E5E5"> well-behaved an</font>

749
00:36:21,410 --> 00:36:24,920
ambitious implementation you should be

750
00:36:23,030 --> 00:36:27,140
able to infer that from the yang modules

751
00:36:24,920 --> 00:36:29,500
that<font color="#E5E5E5"> you can fetch from the box it</font>

752
00:36:27,140 --> 00:36:32,150
should be able to tell you its entire

753
00:36:29,500 --> 00:36:34,070
available data set both<font color="#E5E5E5"> configuration</font>

754
00:36:32,150 --> 00:36:35,540
operations that should tell you<font color="#E5E5E5"> what</font>

755
00:36:34,070 --> 00:36:37,580
it's possible then if you remember from

756
00:36:35,540 --> 00:36:39,859
the<font color="#E5E5E5"> most recent from the previous lot</font>

757
00:36:37,580 --> 00:36:42,140
right it's the feature we have the

758
00:36:39,859 --> 00:36:46,040
feature construct that you can use for

759
00:36:42,140 --> 00:36:48,618
runtime things so maybe it has a feature

760
00:36:46,040 --> 00:36:50,630
that's called option 43 or whichever

761
00:36:48,619 --> 00:36:52,760
option right and you have to check for

762
00:36:50,630 --> 00:36:54,710
whether that's actually turned on and if

763
00:36:52,760 --> 00:36:56,869
it's turned<font color="#E5E5E5"> on then</font><font color="#CCCCCC"> it's available but</font>

764
00:36:54,710 --> 00:36:58,820
normally and I'd say it's<font color="#CCCCCC"> more prudent</font>

765
00:36:56,869 --> 00:37:02,390
to have that in the actual yang itself

766
00:36:58,820 --> 00:37:04,510
to describe at the<font color="#CCCCCC"> bottom can do thank</font>

767
00:37:02,390 --> 00:37:04,509
you

768
00:37:07,780 --> 00:37:13,300
<font color="#E5E5E5">okay so we can look at now is that we</font>

769
00:37:11,830 --> 00:37:15,730
can look at removing things so we<font color="#E5E5E5"> just</font>

770
00:37:13,300 --> 00:37:22,540
added something and then we failed an ad

771
00:37:15,730 --> 00:37:24,430
as well let's look at deleting things so

772
00:37:22,540 --> 00:37:26,830
what we're going to do in this case

773
00:37:24,430 --> 00:37:29,589
we're going<font color="#E5E5E5"> to so again it's an RPC it's</font>

774
00:37:26,830 --> 00:37:30,850
an edit config targets running the big

775
00:37:29,590 --> 00:37:33,940
difference here<font color="#E5E5E5"> is that we're using the</font>

776
00:37:30,850 --> 00:37:36,130
remove operation right so in this case

777
00:37:33,940 --> 00:37:38,290
in the dhcp namespace under shared

778
00:37:36,130 --> 00:37:40,930
networks we're going<font color="#E5E5E5"> to remove a shared</font>

779
00:37:38,290 --> 00:37:42,460
network that has a key with the

780
00:37:40,930 --> 00:37:44,230
<font color="#E5E5E5">following name</font><font color="#CCCCCC"> okay so that's all we</font>

781
00:37:42,460 --> 00:37:46,690
<font color="#E5E5E5">need since this is an entry in the list</font>

782
00:37:44,230 --> 00:37:49,930
all we need<font color="#CCCCCC"> is an index for that entry</font>

783
00:37:46,690 --> 00:37:52,000
and use the remove operation and that

784
00:37:49,930 --> 00:37:54,120
should remove everything below it in the

785
00:37:52,000 --> 00:37:54,120
list

786
00:38:03,220 --> 00:38:09,700
not much happening here<font color="#CCCCCC"> as well</font><font color="#E5E5E5"> so this</font>

787
00:38:05,470 --> 00:38:18,939
<font color="#E5E5E5">is an okay so we now have removed to 249</font>

788
00:38:09,700 --> 00:38:22,240
so of course our data set sorry<font color="#E5E5E5"> there</font>

789
00:38:18,940 --> 00:38:23,890
you<font color="#E5E5E5"> go for</font><font color="#CCCCCC"> the DA pcs upset is much</font>

790
00:38:22,240 --> 00:38:27,939
smaller because we removed the entire

791
00:38:23,890 --> 00:38:29,440
segment right and since we're doing this

792
00:38:27,940 --> 00:38:31,450
to the<font color="#E5E5E5"> running database that happen</font>

793
00:38:29,440 --> 00:38:33,250
immediately right so the books said with

794
00:38:31,450 --> 00:38:39,189
its ok said I'm now running under the

795
00:38:33,250 --> 00:38:40,630
new configuration right away ok so it's

796
00:38:39,190 --> 00:38:44,290
removed so let's look at how to use

797
00:38:40,630 --> 00:38:48,310
candidates so what we can<font color="#E5E5E5"> do here when I</font>

798
00:38:44,290 --> 00:38:51,640
start stealing things from this is to

799
00:38:48,310 --> 00:38:53,590
ask for groups is to ask for<font color="#E5E5E5"> the content</font>

800
00:38:51,640 --> 00:38:56,440
of the candidate so this<font color="#E5E5E5"> is a recently</font>

801
00:38:53,590 --> 00:39:00,820
started<font color="#CCCCCC"> netcom server right it was cold</font>

802
00:38:56,440 --> 00:39:03,160
started half an hour ago which means

803
00:39:00,820 --> 00:39:04,660
that<font color="#E5E5E5"> when you check the candidate</font>

804
00:39:03,160 --> 00:39:06,580
database if you're the<font color="#CCCCCC"> first visitor to</font>

805
00:39:04,660 --> 00:39:08,410
encounter the candidate database it's

806
00:39:06,580 --> 00:39:11,440
going to<font color="#E5E5E5"> be have the same content as the</font>

807
00:39:08,410 --> 00:39:13,509
running now if you if you can't trust

808
00:39:11,440 --> 00:39:14,950
that it actually has the<font color="#E5E5E5"> same content</font>

809
00:39:13,510 --> 00:39:17,260
that the running<font color="#E5E5E5"> because someone has</font>

810
00:39:14,950 --> 00:39:18,879
edited it you do what's called a discard

811
00:39:17,260 --> 00:39:21,730
changes so you make<font color="#CCCCCC"> sure that the</font>

812
00:39:18,880 --> 00:39:23,980
candidate database is the exact same as

813
00:39:21,730 --> 00:39:26,050
the running database and you probably do

814
00:39:23,980 --> 00:39:27,790
that under a lock so you can make sure

815
00:39:26,050 --> 00:39:29,800
<font color="#CCCCCC">that no one sneaks in changes while</font>

816
00:39:27,790 --> 00:39:32,589
you're doing<font color="#CCCCCC"> these things but</font><font color="#E5E5E5"> again</font>

817
00:39:29,800 --> 00:39:35,109
that's the ambitious round here<font color="#CCCCCC"> ok so we</font>

818
00:39:32,589 --> 00:39:41,560
have<font color="#E5E5E5"> a copy of the running in the in</font><font color="#CCCCCC"> the</font>

819
00:39:35,109 --> 00:39:44,799
in the candidate so we can<font color="#E5E5E5"> now actually</font>

820
00:39:41,560 --> 00:39:47,040
start removing things from the candidate

821
00:39:44,800 --> 00:39:47,040
here

822
00:39:53,600 --> 00:39:57,040
yeah i want to show you this first

823
00:40:08,210 --> 00:40:14,390
so we have another example of an edit

824
00:40:11,930 --> 00:40:17,960
config this time targeting the candidate

825
00:40:14,390 --> 00:40:22,069
that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> also using</font><font color="#CCCCCC"> an invalid value of</font>

826
00:40:17,960 --> 00:40:27,320
the default least I'm right so to show

827
00:40:22,070 --> 00:40:30,830
you<font color="#E5E5E5"> that also the candidate does cement</font>

828
00:40:27,320 --> 00:40:33,770
or must checking we can send that

829
00:40:30,830 --> 00:40:35,569
invalid value to the server it will say

830
00:40:33,770 --> 00:40:36,859
the<font color="#CCCCCC"> same thing it's just</font><font color="#E5E5E5"> that now we're</font>

831
00:40:35,570 --> 00:40:38,690
trying<font color="#E5E5E5"> to do it with the candidate right</font>

832
00:40:36,859 --> 00:40:40,609
so some things you can check<font color="#E5E5E5"> also</font><font color="#CCCCCC"> on the</font>

833
00:40:38,690 --> 00:40:42,710
candidate while others are checked on

834
00:40:40,609 --> 00:40:49,390
<font color="#CCCCCC">commits from the candidate to the</font>

835
00:40:42,710 --> 00:40:52,390
<font color="#E5E5E5">running there's a single global</font>

836
00:40:49,390 --> 00:40:52,390
candidate

837
00:41:02,950 --> 00:41:07,490
<font color="#E5E5E5">I'd say it kind of on the top three</font>

838
00:41:05,840 --> 00:41:10,100
frequently asked questions and the

839
00:41:07,490 --> 00:41:12,890
really tricky part here is leaf leaf

840
00:41:10,100 --> 00:41:14,900
references right because<font color="#CCCCCC"> if you started</font>

841
00:41:12,890 --> 00:41:16,700
here<font color="#E5E5E5"> on in the general case I mean you</font>

842
00:41:14,900 --> 00:41:18,860
can have leaf references pointing all

843
00:41:16,700 --> 00:41:23,330
over the data set right and it'd be<font color="#CCCCCC"> very</font>

844
00:41:18,860 --> 00:41:26,750
tricky to implement editing on subsets

845
00:41:23,330 --> 00:41:30,470
that you could<font color="#E5E5E5"> prove didn't impact other</font>

846
00:41:26,750 --> 00:41:31,880
sessions right and I'm sure as we get

847
00:41:30,470 --> 00:41:33,649
more experienced with this more

848
00:41:31,880 --> 00:41:34,970
implementations more best practices we

849
00:41:33,650 --> 00:41:37,310
will come<font color="#E5E5E5"> up</font><font color="#CCCCCC"> with a way that would allow</font>

850
00:41:34,970 --> 00:41:39,560
several writers at the same time because

851
00:41:37,310 --> 00:41:41,960
<font color="#CCCCCC">it just screams for it right but it's</font>

852
00:41:39,560 --> 00:41:43,970
really<font color="#E5E5E5"> hard to even you know imagine</font>

853
00:41:41,960 --> 00:41:46,880
<font color="#E5E5E5">what that would look like that would</font>

854
00:41:43,970 --> 00:41:50,390
<font color="#E5E5E5">also kind of satisfy or fulfil the</font>

855
00:41:46,880 --> 00:41:53,810
features of Yang and yeah that is just a

856
00:41:50,390 --> 00:41:55,520
very<font color="#E5E5E5"> tricky proposition so looking and</font>

857
00:41:53,810 --> 00:41:57,970
single candidates is what we have<font color="#E5E5E5"> right</font>

858
00:41:55,520 --> 00:42:00,860
now<font color="#E5E5E5"> and of</font><font color="#CCCCCC"> course the point being that</font>

859
00:41:57,970 --> 00:42:04,040
you know if you have yet and if you have

860
00:42:00,860 --> 00:42:05,930
net phone<font color="#CCCCCC"> your editing session should be</font>

861
00:42:04,040 --> 00:42:08,390
sub-second right it should literally<font color="#E5E5E5"> be</font>

862
00:42:05,930 --> 00:42:09,770
a very fast thing also i mean if you

863
00:42:08,390 --> 00:42:11,629
think about transactions this is all

864
00:42:09,770 --> 00:42:14,570
going to<font color="#E5E5E5"> be in the critical section so</font>

865
00:42:11,630 --> 00:42:17,420
it behooves the client developer to

866
00:42:14,570 --> 00:42:21,460
really keep it snappy and fast and not

867
00:42:17,420 --> 00:42:21,460
look something and spend time in there

868
00:42:43,510 --> 00:42:49,030
that's where low<font color="#CCCCCC"> King comes in so unless</font>

869
00:42:46,000 --> 00:42:51,480
<font color="#E5E5E5">you look that can happen but if you make</font>

870
00:42:49,030 --> 00:42:54,520
sure that you discard changes in n log

871
00:42:51,480 --> 00:42:56,290
you avoid<font color="#CCCCCC"> that because anyone that tries</font>

872
00:42:54,520 --> 00:42:57,910
to<font color="#E5E5E5"> sneak in changes while you're waiting</font>

873
00:42:56,290 --> 00:43:08,770
for<font color="#E5E5E5"> a conference committee will</font><font color="#CCCCCC"> be held</font>

874
00:42:57,910 --> 00:43:11,950
back by<font color="#CCCCCC"> the</font><font color="#E5E5E5"> log so you see that in your</font>

875
00:43:08,770 --> 00:43:13,480
session and if you close the session

876
00:43:11,950 --> 00:43:17,580
it's going<font color="#E5E5E5"> to roll back so you have to</font>

877
00:43:13,480 --> 00:43:17,580
wait in the session it's a session oh

878
00:43:20,850 --> 00:43:29,830
thank you and just what they asked for

879
00:43:23,890 --> 00:43:31,120
as well you have such a booming voice I

880
00:43:29,830 --> 00:43:33,460
just assumed<font color="#E5E5E5"> that it reached to the</font>

881
00:43:31,120 --> 00:43:34,960
other end of sorry so my<font color="#CCCCCC"> question was</font>

882
00:43:33,460 --> 00:43:39,130
how do<font color="#E5E5E5"> you know that somebody else</font>

883
00:43:34,960 --> 00:43:41,560
hasn't done a confirm you know has set a

884
00:43:39,130 --> 00:43:43,840
commit is waiting for the time to expire

885
00:43:41,560 --> 00:43:45,400
how do you know it's a for you with a

886
00:43:43,840 --> 00:43:47,230
separate client to go in and<font color="#E5E5E5"> make</font>

887
00:43:45,400 --> 00:43:49,330
changes<font color="#CCCCCC"> to ha so you mean if there's an</font>

888
00:43:47,230 --> 00:43:51,010
outstanding<font color="#CCCCCC"> confirm commit and you try</font>

889
00:43:49,330 --> 00:43:52,750
to start one so the implementation won't

890
00:43:51,010 --> 00:43:55,510
allow you<font color="#E5E5E5"> to do a confirm commit if</font>

891
00:43:52,750 --> 00:43:58,540
there is one already running so that is

892
00:43:55,510 --> 00:44:00,790
by necessity serialized right you can't

893
00:43:58,540 --> 00:44:05,640
have two<font color="#E5E5E5"> outstanding confirm commits at</font>

894
00:44:00,790 --> 00:44:05,640
the same time thank you

895
00:44:11,230 --> 00:44:19,240
so we're<font color="#E5E5E5"> going to add back the shark net</font>

896
00:44:17,410 --> 00:44:23,259
but we're<font color="#E5E5E5"> going to add this back in the</font>

897
00:44:19,240 --> 00:44:25,479
candidate ok so the shark net that we

898
00:44:23,260 --> 00:44:27,310
just removed we just added that but we

899
00:44:25,480 --> 00:44:29,470
have it not in the running but in the

900
00:44:27,310 --> 00:44:31,570
candidate data store let's take a quick

901
00:44:29,470 --> 00:44:33,459
<font color="#CCCCCC">look and you guys know</font><font color="#E5E5E5"> this by now but</font>

902
00:44:31,570 --> 00:44:36,880
here's<font color="#CCCCCC"> the big difference so it's an RPC</font>

903
00:44:33,460 --> 00:44:39,780
at it config its candidate and it's the

904
00:44:36,880 --> 00:44:42,820
subset of the data<font color="#CCCCCC"> that we just removed</font>

905
00:44:39,780 --> 00:44:44,980
so you remember we removed a shared

906
00:44:42,820 --> 00:44:46,450
network with this as key and now we're

907
00:44:44,980 --> 00:44:49,750
putting it back<font color="#E5E5E5"> I just happened to</font>

908
00:44:46,450 --> 00:44:51,460
remember what it said here but now again

909
00:44:49,750 --> 00:44:52,990
it's still in the candidate right so if

910
00:44:51,460 --> 00:44:54,640
we haven't committed to running yet so

911
00:44:52,990 --> 00:44:59,470
the box isn't running on the assumption

912
00:44:54,640 --> 00:45:01,240
that it should have those subnets yet so

913
00:44:59,470 --> 00:45:05,220
what<font color="#E5E5E5"> you can do here which can be very</font>

914
00:45:01,240 --> 00:45:09,009
powerful is to send send a validate

915
00:45:05,220 --> 00:45:11,529
issue a validate request right and in

916
00:45:09,010 --> 00:45:13,780
this case again it's nor pc is it's a

917
00:45:11,530 --> 00:45:15,760
primary or busy called validate or a

918
00:45:13,780 --> 00:45:18,310
feature RPC called validate part of the

919
00:45:15,760 --> 00:45:20,680
<font color="#E5E5E5">national based protocol and it validates</font>

920
00:45:18,310 --> 00:45:22,630
the candidates it just says look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the</font>

921
00:45:20,680 --> 00:45:24,520
content here and compare both with your

922
00:45:22,630 --> 00:45:26,230
<font color="#CCCCCC">yang declaration and if you have other</font>

923
00:45:24,520 --> 00:45:28,570
things they want to<font color="#E5E5E5"> check as well do</font>

924
00:45:26,230 --> 00:45:29,980
<font color="#E5E5E5">that so this</font><font color="#CCCCCC"> is also part of the kind</font><font color="#E5E5E5"> of</font>

925
00:45:28,570 --> 00:45:31,690
<font color="#E5E5E5">two-phase commit because this is</font><font color="#CCCCCC"> the</font>

926
00:45:29,980 --> 00:45:33,910
<font color="#CCCCCC">preparer face so</font><font color="#E5E5E5"> you can ask the device</font>

927
00:45:31,690 --> 00:45:37,090
<font color="#E5E5E5">to say to tell you that it's reasonably</font>

928
00:45:33,910 --> 00:45:39,430
sure that this is<font color="#E5E5E5"> valid right so this</font><font color="#CCCCCC"> is</font>

929
00:45:37,090 --> 00:45:43,180
<font color="#E5E5E5">the prepared step in in common database</font>

930
00:45:39,430 --> 00:45:48,160
lingo<font color="#CCCCCC"> and of course</font><font color="#E5E5E5"> we hope that this is</font>

931
00:45:43,180 --> 00:45:51,779
all well in this case so<font color="#E5E5E5"> it will return</font>

932
00:45:48,160 --> 00:45:54,339
hoops it would return<font color="#CCCCCC"> ok</font>

933
00:45:51,779 --> 00:45:57,730
ok so it's validated so now<font color="#E5E5E5"> I have a</font>

934
00:45:54,339 --> 00:46:02,349
high degree of I feel confident<font color="#CCCCCC"> that I</font>

935
00:45:57,730 --> 00:46:04,499
can commit these things let's look at

936
00:46:02,349 --> 00:46:04,499
that

937
00:46:08,500 --> 00:46:12,220
pretty straightforward right<font color="#CCCCCC"> commit</font>

938
00:46:10,270 --> 00:46:14,170
doesn't actually target any particular

939
00:46:12,220 --> 00:46:15,759
databases<font color="#E5E5E5"> it's inferred that it's taking</font>

940
00:46:14,170 --> 00:46:17,470
the content of the candidate and putting

941
00:46:15,760 --> 00:46:20,220
it into running so all<font color="#E5E5E5"> you do is issue a</font>

942
00:46:17,470 --> 00:46:20,220
commit like this

943
00:46:23,740 --> 00:46:27,600
and it worked so now<font color="#CCCCCC"> we have</font>

944
00:46:34,480 --> 00:46:38,710
put back whip

945
00:46:43,880 --> 00:46:56,539
<font color="#CCCCCC">The Shard</font><font color="#E5E5E5"> network</font><font color="#CCCCCC"> 224 that's 29 into</font>

946
00:46:47,809 --> 00:46:57,859
<font color="#E5E5E5">running</font><font color="#CCCCCC"> okay so we put it back</font><font color="#E5E5E5"> okay so</font>

947
00:46:56,539 --> 00:46:59,569
let's do this i'm<font color="#CCCCCC"> going to do this</font><font color="#E5E5E5"> a</font>

948
00:46:57,859 --> 00:47:03,589
little bit<font color="#E5E5E5"> quicker we're just going to</font>

949
00:46:59,569 --> 00:47:05,720
remove<font color="#E5E5E5"> the</font><font color="#CCCCCC"> shark net from the running</font>

950
00:47:03,589 --> 00:47:09,470
again because i'm going to show you a

951
00:47:05,720 --> 00:47:11,390
confirming commit so which means that we

952
00:47:09,470 --> 00:47:18,259
remove it and we add it<font color="#CCCCCC"> to candidate</font>

953
00:47:11,390 --> 00:47:22,690
you've seen<font color="#E5E5E5"> that before and let's look</font>

954
00:47:18,259 --> 00:47:22,690
at this set here

955
00:47:23,810 --> 00:47:29,630
it's an orphan see it's a comment it's

956
00:47:26,810 --> 00:47:34,430
got to confirm the flag set and the

957
00:47:29,630 --> 00:47:35,990
confirmed time out is<font color="#CCCCCC"> 10 seconds and</font><font color="#E5E5E5"> the</font>

958
00:47:34,430 --> 00:47:38,270
persist ID if I wanted<font color="#E5E5E5"> to do something</font>

959
00:47:35,990 --> 00:47:41,120
about this later is the fifth thing Lee

960
00:47:38,270 --> 00:47:49,480
enough nano so in this case I'm going to

961
00:47:41,120 --> 00:47:49,480
<font color="#E5E5E5">let this actually run let's do this</font>

962
00:47:53,390 --> 00:47:59,750
so we committed and let's see<font color="#E5E5E5"> if we can</font>

963
00:47:56,120 --> 00:48:04,130
get the use of a config you see<font color="#E5E5E5"> to 24 29</font>

964
00:47:59,750 --> 00:48:06,310
here<font color="#E5E5E5"> wait 10 seconds you</font><font color="#CCCCCC"> peek at the</font>

965
00:48:04,130 --> 00:48:06,310
load

966
00:48:10,500 --> 00:48:16,890
it's gone ok so the device timeout

967
00:48:14,580 --> 00:48:19,980
expired and<font color="#CCCCCC"> the implementation itself</font>

968
00:48:16,890 --> 00:48:22,080
<font color="#E5E5E5">rolled back right so this is useful when</font>

969
00:48:19,980 --> 00:48:24,660
you because most<font color="#E5E5E5"> of you guys probably</font>

970
00:48:22,080 --> 00:48:26,910
have done this configure yourself away

971
00:48:24,660 --> 00:48:28,500
from management reach ability because

972
00:48:26,910 --> 00:48:29,970
then you lose<font color="#CCCCCC"> the session the timeout</font>

973
00:48:28,500 --> 00:48:36,200
will expire and the device will roll

974
00:48:29,970 --> 00:48:43,250
back itself so if<font color="#CCCCCC"> I redo this with a</font>

975
00:48:36,200 --> 00:48:43,250
shark net let me<font color="#E5E5E5"> just look at it</font>

976
00:48:44,980 --> 00:48:51,340
they will commit confirmed and then we

977
00:48:47,230 --> 00:48:55,060
do a confirming committed it's going to

978
00:48:51,340 --> 00:48:56,800
<font color="#E5E5E5">buy it so the timer is now taken out of</font>

979
00:48:55,060 --> 00:48:59,040
play here<font color="#E5E5E5"> and the configuration will</font>

980
00:48:56,800 --> 00:48:59,040
stick

981
00:49:02,050 --> 00:49:13,600
any questions<font color="#E5E5E5"> okay oh so the persist is</font>

982
00:49:09,970 --> 00:49:14,980
if you have<font color="#CCCCCC"> an outstanding confirming</font>

983
00:49:13,600 --> 00:49:19,779
commit and you want to manipulate it

984
00:49:14,980 --> 00:49:21,880
later it's the ID ID to for example

985
00:49:19,780 --> 00:49:23,470
cancel the commit you need to be able to

986
00:49:21,880 --> 00:49:25,120
identify that you know which one you

987
00:49:23,470 --> 00:49:27,839
want<font color="#E5E5E5"> to cancel even though there can</font>

988
00:49:25,120 --> 00:49:27,839
only be one outstanding

989
00:49:32,210 --> 00:49:37,680
okay good

990
00:49:35,280 --> 00:49:42,360
so getting closer to wrap up here we're

991
00:49:37,680 --> 00:49:44,129
going<font color="#E5E5E5"> to talk a little bit about no</font>

992
00:49:42,360 --> 00:49:48,240
<font color="#E5E5E5">actually I</font><font color="#CCCCCC"> think we</font><font color="#E5E5E5"> need to actually</font>

993
00:49:44,130 --> 00:49:51,990
stop here any any questions guys and

994
00:49:48,240 --> 00:49:57,169
girls a lot of<font color="#E5E5E5"> x i'm at a lot of pd use</font>

995
00:49:51,990 --> 00:49:57,169
flying back and forth all crystal clear

996
00:49:58,490 --> 00:50:01,549
there's one

997
00:50:02,150 --> 00:50:07,970
so if<font color="#CCCCCC"> we wanted to replicate what you</font>

998
00:50:05,029 --> 00:50:09,559
did here today what's the easiest way to

999
00:50:07,970 --> 00:50:10,848
sort of build the set up its at all

1000
00:50:09,559 --> 00:50:12,260
<font color="#E5E5E5">stuff that you</font><font color="#CCCCCC"> gotta</font><font color="#E5E5E5"> go build from</font>

1001
00:50:10,849 --> 00:50:13,730
source and then you can run these tools

1002
00:50:12,260 --> 00:50:16,700
or are they available in the standard

1003
00:50:13,730 --> 00:50:19,549
repositories for linux distributions or

1004
00:50:16,700 --> 00:50:22,038
what so there's two sides of this right

1005
00:50:19,549 --> 00:50:24,230
there's the client tools as<font color="#CCCCCC"> I mentioned</font>

1006
00:50:22,039 --> 00:50:27,980
in the<font color="#CCCCCC"> PowerPoint</font><font color="#E5E5E5"> and the ones that I</font>

1007
00:50:24,230 --> 00:50:30,130
use are all actually<font color="#E5E5E5"> available for</font>

1008
00:50:27,980 --> 00:50:30,130
anyone

1009
00:50:35,980 --> 00:50:39,790
so the net<font color="#CCCCCC"> comm console</font><font color="#E5E5E5"> you can find</font>

1010
00:50:38,140 --> 00:50:42,339
that<font color="#E5E5E5"> the anticline and curl obviously</font>

1011
00:50:39,790 --> 00:50:45,430
are readily available right now the

1012
00:50:42,340 --> 00:50:47,650
<font color="#CCCCCC">comedy in this case the server it's not</font>

1013
00:50:45,430 --> 00:50:49,750
right right now it's it's still a

1014
00:50:47,650 --> 00:50:52,030
proprietary solution we are working to

1015
00:50:49,750 --> 00:50:53,740
change that so<font color="#E5E5E5"> I now work for one of the</font>

1016
00:50:52,030 --> 00:50:55,750
vendors and we're<font color="#CCCCCC"> trying to make this</font>

1017
00:50:53,740 --> 00:50:57,850
actually something that will be freely

1018
00:50:55,750 --> 00:51:00,369
available but it isn't right now<font color="#E5E5E5"> there</font>

1019
00:50:57,850 --> 00:51:02,890
are<font color="#E5E5E5"> other open source implementations of</font>

1020
00:51:00,369 --> 00:51:04,960
netcom servers there's<font color="#CCCCCC"> one called Yuma</font>

1021
00:51:02,890 --> 00:51:06,600
there's<font color="#E5E5E5"> one called lib net conf and</font>

1022
00:51:04,960 --> 00:51:09,220
there's one called free<font color="#E5E5E5"> net com and</font>

1023
00:51:06,600 --> 00:51:12,250
they're all fine and you can use them of

1024
00:51:09,220 --> 00:51:14,640
course<font color="#E5E5E5"> for these types of exercises to</font>

1025
00:51:12,250 --> 00:51:14,640
<font color="#CCCCCC">your heart's content</font>

1026
00:51:18,140 --> 00:51:23,299
and you can<font color="#E5E5E5"> always</font><font color="#CCCCCC"> use a one of the</font>

1027
00:51:21,230 --> 00:51:25,490
major vendors boxes I'm not<font color="#E5E5E5"> going to</font>

1028
00:51:23,299 --> 00:51:27,079
<font color="#E5E5E5">point one out</font><font color="#CCCCCC"> but you can also ask them</font>

1029
00:51:25,490 --> 00:51:28,848
when<font color="#E5E5E5"> they're if they don't have it</font><font color="#CCCCCC"> to</font>

1030
00:51:27,079 --> 00:51:31,519
your<font color="#CCCCCC"> surprise you can always ask</font><font color="#E5E5E5"> them</font>

1031
00:51:28,849 --> 00:51:34,880
when they're implementing it just one

1032
00:51:31,519 --> 00:51:36,890
<font color="#E5E5E5">more</font><font color="#CCCCCC"> question do you know of operating</font>

1033
00:51:34,880 --> 00:51:40,880
system vendors looking to use this like

1034
00:51:36,890 --> 00:51:42,558
you know Apple or Microsoft or<font color="#E5E5E5"> Lennox to</font>

1035
00:51:40,880 --> 00:51:44,089
be<font color="#E5E5E5"> included as a default so you can</font>

1036
00:51:42,559 --> 00:51:47,720
<font color="#E5E5E5">actually manipulate</font><font color="#CCCCCC"> host configs</font>

1037
00:51:44,089 --> 00:51:49,220
remotely save that question one more

1038
00:51:47,720 --> 00:51:53,029
time sorry I didn't catch the beginning

1039
00:51:49,220 --> 00:51:55,640
of production do you see like OS benders

1040
00:51:53,029 --> 00:51:58,130
implementing net comp on<font color="#CCCCCC"> their in their</font>

1041
00:51:55,640 --> 00:52:00,319
OS so it's not<font color="#CCCCCC"> only can you configure</font>

1042
00:51:58,130 --> 00:52:04,279
and manage routers but you can configure

1043
00:52:00,319 --> 00:52:06,140
image and clients or host<font color="#CCCCCC"> okay so so for</font>

1044
00:52:04,279 --> 00:52:07,880
that type of environment there<font color="#CCCCCC"> there's</font>

1045
00:52:06,140 --> 00:52:10,160
<font color="#E5E5E5">an abundance of other means of</font>

1046
00:52:07,880 --> 00:52:14,119
configuring right and I'm not<font color="#E5E5E5"> entirely</font>

1047
00:52:10,160 --> 00:52:15,859
convinced that net conf is a appropriate

1048
00:52:14,119 --> 00:52:17,960
protocol for let's say server based or

1049
00:52:15,859 --> 00:52:20,288
application based configuration now

1050
00:52:17,960 --> 00:52:22,789
there's a big<font color="#E5E5E5"> gray area though with</font>

1051
00:52:20,289 --> 00:52:24,259
applications like dns and dhcp and

1052
00:52:22,789 --> 00:52:25,970
things like that need to be of course

1053
00:52:24,259 --> 00:52:28,549
being today's example which is

1054
00:52:25,970 --> 00:52:31,250
inherently network-centric that

1055
00:52:28,549 --> 00:52:34,309
inherently has a configuration data set

1056
00:52:31,250 --> 00:52:36,559
that<font color="#E5E5E5"> you might want to manipulate where</font>

1057
00:52:34,309 --> 00:52:38,599
there are actually some vendors that do

1058
00:52:36,559 --> 00:52:41,150
implement these things for it and of

1059
00:52:38,599 --> 00:52:43,579
course one<font color="#CCCCCC"> of the many things that we're</font>

1060
00:52:41,150 --> 00:52:45,859
pushing for is for for the appropriate

1061
00:52:43,579 --> 00:52:47,029
applications things that would<font color="#CCCCCC"> be facing</font>

1062
00:52:45,859 --> 00:52:49,519
let's say a network service

1063
00:52:47,029 --> 00:52:51,619
orchestration environment napkin yang is

1064
00:52:49,519 --> 00:52:53,930
fitting right so we<font color="#CCCCCC"> are trying</font><font color="#E5E5E5"> to push</font>

1065
00:52:51,619 --> 00:52:56,869
for standard models for it we're<font color="#E5E5E5"> trying</font>

1066
00:52:53,930 --> 00:52:59,000
to push for open source implementations

1067
00:52:56,869 --> 00:53:01,190
of it and we're trying to push for

1068
00:52:59,000 --> 00:53:03,259
vendors in that space to implement it as

1069
00:53:01,190 --> 00:53:05,089
well because again you know having the

1070
00:53:03,259 --> 00:53:07,369
basis of transactions and allowing<font color="#E5E5E5"> them</font>

1071
00:53:05,089 --> 00:53:09,529
to participate<font color="#E5E5E5"> in that spanning the</font>

1072
00:53:07,369 --> 00:53:14,299
network assets it can be a very<font color="#E5E5E5"> powerful</font>

1073
00:53:09,529 --> 00:53:16,579
<font color="#CCCCCC">consular yes sir just</font><font color="#E5E5E5"> to follow on</font><font color="#CCCCCC"> the</font>

1074
00:53:14,299 --> 00:53:19,630
previous<font color="#CCCCCC"> question if we</font><font color="#E5E5E5"> wanted to</font>

1075
00:53:16,579 --> 00:53:19,630
reproduce this ourselves

1076
00:53:20,150 --> 00:53:24,150
is there some instructions somewhere

1077
00:53:22,470 --> 00:53:25,770
about how we could do<font color="#E5E5E5"> this or would you</font>

1078
00:53:24,150 --> 00:53:27,810
be able to<font color="#E5E5E5"> post somewhere some</font>

1079
00:53:25,770 --> 00:53:29,850
instructions just<font color="#E5E5E5"> obviously not the</font><font color="#CCCCCC"> comp</font>

1080
00:53:27,810 --> 00:53:32,670
d part i guess but all the other parts

1081
00:53:29,850 --> 00:53:34,440
it's a very far ask actually<font color="#E5E5E5"> i'm going</font>

1082
00:53:32,670 --> 00:53:35,880
to take on myself<font color="#E5E5E5"> to put something</font>

1083
00:53:34,440 --> 00:53:37,440
together and make sure<font color="#CCCCCC"> that the</font>

1084
00:53:35,880 --> 00:53:43,110
appropriate<font color="#CCCCCC"> people are now know can</font>

1085
00:53:37,440 --> 00:53:50,430
distribute that thank you<font color="#CCCCCC"> okay great</font>

1086
00:53:43,110 --> 00:53:52,920
<font color="#E5E5E5">more questions I have questions Brian</font>

1087
00:53:50,430 --> 00:53:54,629
Knight from nye tell if a general

1088
00:53:52,920 --> 00:53:59,340
question you've been<font color="#E5E5E5"> showing us a lot</font>

1089
00:53:54,630 --> 00:54:05,070
about how the<font color="#CCCCCC"> XML transaction itself and</font>

1090
00:53:59,340 --> 00:54:08,310
and what it<font color="#E5E5E5"> does what I guess how would</font>

1091
00:54:05,070 --> 00:54:11,390
we use this in our daily lives what

1092
00:54:08,310 --> 00:54:13,710
<font color="#E5E5E5">would be the workflow would we write our</font>

1093
00:54:11,390 --> 00:54:19,200
configurations and yang and you some

1094
00:54:13,710 --> 00:54:20,730
tool to transmute them into XML and send

1095
00:54:19,200 --> 00:54:23,939
it to<font color="#E5E5E5"> the server or would we write</font><font color="#CCCCCC"> it in</font>

1096
00:54:20,730 --> 00:54:25,470
XML how would that work yeah so I mean

1097
00:54:23,940 --> 00:54:27,540
<font color="#E5E5E5">there's two sides of it if you're a</font>

1098
00:54:25,470 --> 00:54:30,089
vendor you know if you build network

1099
00:54:27,540 --> 00:54:32,580
elements you would hopefully kind<font color="#E5E5E5"> of</font>

1100
00:54:30,090 --> 00:54:34,680
adjust your tooling<font color="#CCCCCC"> to start using yang</font>

1101
00:54:32,580 --> 00:54:36,960
as the way to drive your manageability

1102
00:54:34,680 --> 00:54:38,399
framework right so when<font color="#CCCCCC"> you would spin</font>

1103
00:54:36,960 --> 00:54:40,410
any release right you would actually

1104
00:54:38,400 --> 00:54:42,720
drive the CLI<font color="#CCCCCC"> and the net conf interface</font>

1105
00:54:40,410 --> 00:54:44,790
and what have you from<font color="#CCCCCC"> a set of yang</font>

1106
00:54:42,720 --> 00:54:46,560
modules which would give you the<font color="#E5E5E5"> benefit</font>

1107
00:54:44,790 --> 00:54:48,450
of being able to<font color="#E5E5E5"> serve your customers</font>

1108
00:54:46,560 --> 00:54:50,580
people that would that would code for

1109
00:54:48,450 --> 00:54:52,560
<font color="#E5E5E5">this you know a young file that actors</font>

1110
00:54:50,580 --> 00:54:54,569
accurately reflects<font color="#E5E5E5"> with that actual</font>

1111
00:54:52,560 --> 00:54:57,120
version does right and for the client

1112
00:54:54,570 --> 00:54:58,770
side I mean there are many ways it helps

1113
00:54:57,120 --> 00:55:00,150
you all the way from just basic

1114
00:54:58,770 --> 00:55:02,160
scripting you know even<font color="#E5E5E5"> though as</font>

1115
00:55:00,150 --> 00:55:03,750
painful<font color="#CCCCCC"> as that is and probably doesn't</font>

1116
00:55:02,160 --> 00:55:05,940
help much over tickle scripting<font color="#CCCCCC"> for</font><font color="#E5E5E5"> your</font>

1117
00:55:03,750 --> 00:55:08,070
lines right all the way to and<font color="#E5E5E5"> this is</font>

1118
00:55:05,940 --> 00:55:12,240
<font color="#E5E5E5">probably the subject matter of work for</font>

1119
00:55:08,070 --> 00:55:13,890
you<font color="#CCCCCC"> know Additional Sessions here now no</font>

1120
00:55:12,240 --> 00:55:16,140
but what I'm showing here again is<font color="#CCCCCC"> just</font>

1121
00:55:13,890 --> 00:55:18,810
the raw protocol right and then there<font color="#CCCCCC"> is</font>

1122
00:55:16,140 --> 00:55:21,600
a<font color="#E5E5E5"> variety of language bindings for this</font>

1123
00:55:18,810 --> 00:55:23,490
with various types<font color="#E5E5E5"> of abstractions so</font>

1124
00:55:21,600 --> 00:55:26,100
you have gold language bindings you have

1125
00:55:23,490 --> 00:55:28,589
<font color="#E5E5E5">Python of course you know Ruby and many</font>

1126
00:55:26,100 --> 00:55:30,540
others so that's great then you can

1127
00:55:28,590 --> 00:55:33,180
abstract<font color="#E5E5E5"> away the actual you</font><font color="#CCCCCC"> know</font>

1128
00:55:30,540 --> 00:55:34,650
creating<font color="#CCCCCC"> of XML and sending of XML some</font>

1129
00:55:33,180 --> 00:55:36,960
of these libraries also have yang

1130
00:55:34,650 --> 00:55:40,890
bindings so they can actually<font color="#E5E5E5"> take yang</font>

1131
00:55:36,960 --> 00:55:43,200
and produce data model specific<font color="#E5E5E5"> ap is</font>

1132
00:55:40,890 --> 00:55:46,920
<font color="#E5E5E5">for</font><font color="#CCCCCC"> example so you can traverse data</font>

1133
00:55:43,200 --> 00:55:49,950
sets using generated<font color="#E5E5E5"> API sore generated</font>

1134
00:55:46,920 --> 00:55:53,120
object models right and of course on top

1135
00:55:49,950 --> 00:55:56,850
of<font color="#E5E5E5"> that there's entire systems that can</font>

1136
00:55:53,120 --> 00:55:58,500
consume yang can actually build moving

1137
00:55:56,850 --> 00:56:00,720
parts out of<font color="#E5E5E5"> it so</font><font color="#CCCCCC"> you could build</font>

1138
00:55:58,500 --> 00:56:03,660
something<font color="#CCCCCC"> that could express for example</font>

1139
00:56:00,720 --> 00:56:05,970
<font color="#CCCCCC">services traversing several instances of</font>

1140
00:56:03,660 --> 00:56:08,399
net company I ok so<font color="#CCCCCC"> this so</font><font color="#E5E5E5"> the goal is</font>

1141
00:56:05,970 --> 00:56:11,970
not<font color="#E5E5E5"> a happy yang be that be the language</font>

1142
00:56:08,400 --> 00:56:15,840
<font color="#E5E5E5">to to necessarily define configuration</font>

1143
00:56:11,970 --> 00:56:19,680
and pick oh I<font color="#E5E5E5"> want this particular DCP</font>

1144
00:56:15,840 --> 00:56:22,890
subnet to be used that is yang is more

1145
00:56:19,680 --> 00:56:24,810
of a data modeling language and<font color="#E5E5E5"> XML is</font>

1146
00:56:22,890 --> 00:56:27,390
the way to send that<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the device</font>

1147
00:56:24,810 --> 00:56:29,279
exactly so yang describes the data set

1148
00:56:27,390 --> 00:56:32,310
that is<font color="#CCCCCC"> available to you</font><font color="#E5E5E5"> to manipulate</font>

1149
00:56:29,280 --> 00:56:34,050
and read on the device right and the<font color="#E5E5E5"> XML</font>

1150
00:56:32,310 --> 00:56:36,570
that you see flying back and forth<font color="#E5E5E5"> here</font>

1151
00:56:34,050 --> 00:56:40,070
is protocol specific renditions of what

1152
00:56:36,570 --> 00:56:44,220
you<font color="#E5E5E5"> want to do to that data set I think</font>

1153
00:56:40,070 --> 00:56:47,420
hey junkie and poetic so this<font color="#CCCCCC"> netcong</font>

1154
00:56:44,220 --> 00:56:51,359
from yang looks really good tool but it

1155
00:56:47,420 --> 00:56:52,830
<font color="#CCCCCC">looks very static policy pushing so you</font>

1156
00:56:51,360 --> 00:56:54,660
know actually network there's a lot<font color="#CCCCCC"> of</font>

1157
00:56:52,830 --> 00:56:56,640
changes going on so I just want to know

1158
00:56:54,660 --> 00:56:58,109
<font color="#CCCCCC">that is there any like support like for</font>

1159
00:56:56,640 --> 00:56:59,940
example do you have to<font color="#E5E5E5"> make a yang</font>

1160
00:56:58,110 --> 00:57:01,950
program and there's some event comes in

1161
00:56:59,940 --> 00:57:04,650
like intrusion or something and you have

1162
00:57:01,950 --> 00:57:07,439
another yang language and you do you

1163
00:57:04,650 --> 00:57:09,000
just<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to use scripts to react</font><font color="#CCCCCC"> to</font>

1164
00:57:07,440 --> 00:57:11,100
<font color="#CCCCCC">that or is there any support that you</font>

1165
00:57:09,000 --> 00:57:13,560
actually can automate that<font color="#CCCCCC"> too like you</font>

1166
00:57:11,100 --> 00:57:15,420
want to like actually say like oh if

1167
00:57:13,560 --> 00:57:18,540
this event comes in i<font color="#E5E5E5"> want to just push</font>

1168
00:57:15,420 --> 00:57:20,700
this and push another one things like

1169
00:57:18,540 --> 00:57:22,890
that<font color="#E5E5E5"> so so that's a good question so</font>

1170
00:57:20,700 --> 00:57:25,020
young and<font color="#E5E5E5"> netconf and perhaps rest</font>

1171
00:57:22,890 --> 00:57:26,359
<font color="#CCCCCC">confess buyers to the moving parts of</font>

1172
00:57:25,020 --> 00:57:28,650
<font color="#E5E5E5">the kind of read side and the right side</font>

1173
00:57:26,360 --> 00:57:30,750
so of<font color="#CCCCCC"> course you can write things with</font>

1174
00:57:28,650 --> 00:57:33,270
it<font color="#E5E5E5"> you can read things with</font><font color="#CCCCCC"> it and you</font>

1175
00:57:30,750 --> 00:57:35,440
can also accept or take notifications

1176
00:57:33,270 --> 00:57:37,930
but the actual tying

1177
00:57:35,440 --> 00:57:39,550
things together on the top is actually

1178
00:57:37,930 --> 00:57:41,230
out<font color="#CCCCCC"> of soap both</font><font color="#E5E5E5"> from that company yang</font>

1179
00:57:39,550 --> 00:57:42,880
and we're eagerly awaiting you know

1180
00:57:41,230 --> 00:57:44,290
clever ways of doing that because I

1181
00:57:42,880 --> 00:57:46,480
think<font color="#E5E5E5"> what you're saying makes a whole</font>

1182
00:57:44,290 --> 00:57:49,599
lot of sense and should be a very

1183
00:57:46,480 --> 00:57:52,359
<font color="#E5E5E5">exciting endeavor for anyone now that we</font>

1184
00:57:49,599 --> 00:57:54,849
have again the formalized declarative

1185
00:57:52,359 --> 00:57:56,560
way of describing both the configuration

1186
00:57:54,849 --> 00:57:58,690
operational and notification data set

1187
00:57:56,560 --> 00:58:02,670
but it's not in scope right now for

1188
00:57:58,690 --> 00:58:10,170
napkin for yang go build it will become

1189
00:58:02,670 --> 00:58:13,960
thank you hi I'm Brennan with facebook

1190
00:58:10,170 --> 00:58:16,930
thanks for pimping the the go<font color="#E5E5E5"> bindings</font>

1191
00:58:13,960 --> 00:58:19,150
as i wrote that so else but i have a

1192
00:58:16,930 --> 00:58:23,259
another question do you see yang being

1193
00:58:19,150 --> 00:58:25,630
used outside of<font color="#E5E5E5"> a client a client server</font>

1194
00:58:23,260 --> 00:58:27,700
model more like a streaming model<font color="#E5E5E5"> being</font>

1195
00:58:25,630 --> 00:58:33,490
able to describe data being streamed

1196
00:58:27,700 --> 00:58:35,770
from the box as an alternative to like

1197
00:58:33,490 --> 00:58:37,750
an sn2 people for example<font color="#CCCCCC"> right getting</font>

1198
00:58:35,770 --> 00:58:39,640
more<font color="#E5E5E5"> real-time information i always want</font>

1199
00:58:37,750 --> 00:58:42,940
every second i want<font color="#E5E5E5"> my interface</font>

1200
00:58:39,640 --> 00:58:45,750
counters can you and then have yang<font color="#CCCCCC"> BB</font>

1201
00:58:42,940 --> 00:58:49,510
kind<font color="#E5E5E5"> of the way to describe that</font><font color="#CCCCCC"> i guess</font>

1202
00:58:45,750 --> 00:58:52,510
so so the net cough notifications can

1203
00:58:49,510 --> 00:58:54,339
can give you part<font color="#E5E5E5"> of that right it is a</font>

1204
00:58:52,510 --> 00:58:55,810
way of saying for example<font color="#E5E5E5"> the client can</font>

1205
00:58:54,339 --> 00:58:57,578
say first of all<font color="#E5E5E5"> I want to see all the</font>

1206
00:58:55,810 --> 00:58:59,859
streams that are available right and<font color="#E5E5E5"> I</font>

1207
00:58:57,579 --> 00:59:02,170
<font color="#E5E5E5">just want to see these streets the</font>

1208
00:58:59,859 --> 00:59:04,119
pacing of it though is of course out<font color="#E5E5E5"> of</font>

1209
00:59:02,170 --> 00:59:06,130
scope for the client so but that could

1210
00:59:04,119 --> 00:59:08,680
be<font color="#E5E5E5"> made a configurable now I hear myself</font>

1211
00:59:06,130 --> 00:59:10,810
also completely overloading but net

1212
00:59:08,680 --> 00:59:12,700
company yang is about but it's one<font color="#E5E5E5"> of</font>

1213
00:59:10,810 --> 00:59:14,740
those that yeah you could do that I'm

1214
00:59:12,700 --> 00:59:20,009
not<font color="#CCCCCC"> sure it's the the appropriate way</font>

1215
00:59:14,740 --> 00:59:22,390
but certainly you could do<font color="#CCCCCC"> that Thanks</font>

1216
00:59:20,010 --> 00:59:25,319
Go Go language by the way don't stop

1217
00:59:22,390 --> 00:59:25,319
don't stop

1218
00:59:25,589 --> 00:59:36,400
any other questions<font color="#E5E5E5"> okay for the brave</font>

1219
00:59:34,359 --> 00:59:39,308
people that I've<font color="#E5E5E5"> announced that been</font>

1220
00:59:36,400 --> 00:59:42,359
here for two<font color="#CCCCCC"> and half hours thank you</font>

1221
00:59:39,309 --> 00:59:42,359
very much thanks for coming

1222
00:59:54,050 --> 00:59:56,110
you

