1
00:00:00,680 --> 00:00:08,550
good afternoon<font color="#E5E5E5"> for the next 30 minutes</font>

2
00:00:06,240 --> 00:00:11,730
or<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I'll talk about buffer sizing in</font>

3
00:00:08,550 --> 00:00:15,240
Internet routers<font color="#E5E5E5"> the goal is to find out</font>

4
00:00:11,730 --> 00:00:17,369
how<font color="#E5E5E5"> small we can make buffers without</font>

5
00:00:15,240 --> 00:00:19,890
any major degradation in system

6
00:00:17,369 --> 00:00:22,859
performance<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a joint</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> with</font>

7
00:00:19,890 --> 00:00:26,160
<font color="#CCCCCC">Gullo Appenzeller as mentioned he gave</font>

8
00:00:22,859 --> 00:00:29,340
it to<font color="#CCCCCC"> us last</font><font color="#E5E5E5"> year</font><font color="#CCCCCC"> here about the work</font>

9
00:00:26,160 --> 00:00:30,779
we had done<font color="#E5E5E5"> at that</font><font color="#CCCCCC"> time and also Mahalo</font>

10
00:00:29,340 --> 00:00:34,140
<font color="#E5E5E5">in</font><font color="#CCCCCC"> a chesco</font><font color="#E5E5E5"> Ashish</font><font color="#CCCCCC"> called tim</font>

11
00:00:30,779 --> 00:00:35,940
roughgarden and<font color="#CCCCCC"> Nick McEwan old from</font>

12
00:00:34,140 --> 00:00:41,100
Stanford University<font color="#CCCCCC"> let me start with</font>

13
00:00:35,940 --> 00:00:43,140
<font color="#E5E5E5">the story</font><font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> talk about three</font>

14
00:00:41,100 --> 00:00:44,730
different<font color="#CCCCCC"> rules for buffer sizing in the</font>

15
00:00:43,140 --> 00:00:46,590
core of<font color="#E5E5E5"> the Internet the first one which</font>

16
00:00:44,730 --> 00:00:49,828
I referred<font color="#CCCCCC"> to</font><font color="#E5E5E5"> as the rule</font><font color="#CCCCCC"> of thumb is</font>

17
00:00:46,590 --> 00:00:55,410
the<font color="#E5E5E5"> rule which is used today</font><font color="#CCCCCC"> for buffer</font>

18
00:00:49,829 --> 00:00:58,129
sizing and<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the 2t times C I will talk</font>

19
00:00:55,410 --> 00:01:01,260
about<font color="#CCCCCC"> what T and C are</font><font color="#E5E5E5"> in a moment and</font>

20
00:00:58,129 --> 00:01:02,570
it<font color="#CCCCCC"> basically comes from the</font><font color="#E5E5E5"> assumption</font>

21
00:01:01,260 --> 00:01:08,429
that we want<font color="#CCCCCC"> to have a</font><font color="#E5E5E5"> hundred percent</font>

22
00:01:02,570 --> 00:01:13,430
utilization<font color="#E5E5E5"> on the links and the second</font>

23
00:01:08,430 --> 00:01:18,000
rule which was recently<font color="#E5E5E5"> proposed by</font>

24
00:01:13,430 --> 00:01:20,310
Guido<font color="#E5E5E5"> Nick and Isaac basically claims</font>

25
00:01:18,000 --> 00:01:22,049
that if we have n flows in the core of

26
00:01:20,310 --> 00:01:23,810
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Internet we</font><font color="#E5E5E5"> can reduce the buffer</font>

27
00:01:22,049 --> 00:01:26,490
size by a<font color="#CCCCCC"> factor of square root of</font><font color="#E5E5E5"> n</font>

28
00:01:23,810 --> 00:01:29,040
today we have tens of thousands<font color="#E5E5E5"> of flows</font>

29
00:01:26,490 --> 00:01:30,630
going<font color="#E5E5E5"> through the</font><font color="#CCCCCC"> router scorers</font><font color="#E5E5E5"> so</font>

30
00:01:29,040 --> 00:01:33,030
based on this<font color="#E5E5E5"> rule we</font><font color="#CCCCCC"> can reduce the</font>

31
00:01:30,630 --> 00:01:35,399
buffer size by a<font color="#CCCCCC"> factor of at least</font><font color="#E5E5E5"> 100</font>

32
00:01:33,030 --> 00:01:38,790
and the last one which<font color="#CCCCCC"> is a more recent</font>

33
00:01:35,400 --> 00:01:42,060
result which we<font color="#CCCCCC"> propose basically says</font>

34
00:01:38,790 --> 00:01:44,880
that<font color="#E5E5E5"> you can reduce the buffer size even</font>

35
00:01:42,060 --> 00:01:47,310
<font color="#CCCCCC">more</font><font color="#E5E5E5"> to log of</font><font color="#CCCCCC"> W</font><font color="#E5E5E5"> W is the maximum</font>

36
00:01:44,880 --> 00:01:52,229
congestion window size<font color="#E5E5E5"> of the flows</font>

37
00:01:47,310 --> 00:01:54,659
going<font color="#E5E5E5"> through the router and if you</font>

38
00:01:52,229 --> 00:01:56,820
apply each<font color="#CCCCCC"> of these rules to a 10</font>

39
00:01:54,659 --> 00:01:59,549
gigabit per second link<font color="#E5E5E5"> based on the</font>

40
00:01:56,820 --> 00:02:02,429
first rule<font color="#CCCCCC"> we'll have we have to have a</font>

41
00:01:59,549 --> 00:02:04,590
<font color="#E5E5E5">buffer size of 1 million packets the</font>

42
00:02:02,430 --> 00:02:07,320
second rule reduces this month<font color="#E5E5E5"> this</font>

43
00:02:04,590 --> 00:02:08,910
buffer size to just 10,000 packets<font color="#E5E5E5"> and</font>

44
00:02:07,320 --> 00:02:09,519
based on the last<font color="#CCCCCC"> rule</font>

45
00:02:08,910 --> 00:02:12,040
I'll

46
00:02:09,520 --> 00:02:15,460
have<font color="#CCCCCC"> we'll just need to have</font><font color="#E5E5E5"> to any</font>

47
00:02:12,040 --> 00:02:17,799
packets of buffer sizing the of course

48
00:02:15,460 --> 00:02:20,050
<font color="#CCCCCC">the the</font><font color="#E5E5E5"> assumption</font><font color="#CCCCCC"> here in the last</font>

49
00:02:17,800 --> 00:02:22,000
result is that we<font color="#E5E5E5"> are not going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

50
00:02:20,050 --> 00:02:24,070
a hundred<font color="#E5E5E5"> percent link utilization and</font>

51
00:02:22,000 --> 00:02:26,830
<font color="#CCCCCC">I'll talk about that in</font><font color="#E5E5E5"> more details in</font>

52
00:02:24,070 --> 00:02:30,310
a few<font color="#E5E5E5"> moments for each of these rules</font>

53
00:02:26,830 --> 00:02:32,230
<font color="#CCCCCC">I'll try</font><font color="#E5E5E5"> to give you</font><font color="#CCCCCC"> the reason and an</font>

54
00:02:30,310 --> 00:02:35,050
intuition behind why<font color="#E5E5E5"> where this rule</font>

55
00:02:32,230 --> 00:02:39,790
<font color="#E5E5E5">comes from and then I will show you some</font>

56
00:02:35,050 --> 00:02:41,590
evidence<font color="#E5E5E5"> that</font><font color="#CCCCCC"> validates that</font><font color="#E5E5E5"> result okay</font>

57
00:02:39,790 --> 00:02:43,739
let me start with<font color="#E5E5E5"> the rule of thumb</font>

58
00:02:41,590 --> 00:02:45,850
<font color="#E5E5E5">which is the one used today</font><font color="#CCCCCC"> a</font>

59
00:02:43,740 --> 00:02:49,870
universally applied rule of thumb says

60
00:02:45,850 --> 00:02:51,460
<font color="#E5E5E5">that if you want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have a</font><font color="#CCCCCC"> co router</font><font color="#E5E5E5"> to</font>

61
00:02:49,870 --> 00:02:53,740
have<font color="#E5E5E5"> a hundred percent utilization at</font>

62
00:02:51,460 --> 00:02:56,730
all times<font color="#E5E5E5"> the buffer size should</font><font color="#CCCCCC"> be</font>

63
00:02:53,740 --> 00:02:58,780
equal to 2t times<font color="#CCCCCC"> c2 T is the two-way</font>

64
00:02:56,730 --> 00:03:00,760
propagation delay<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the packets going</font>

65
00:02:58,780 --> 00:03:03,370
<font color="#E5E5E5">through the router and</font><font color="#CCCCCC"> sees the capacity</font>

66
00:03:00,760 --> 00:03:05,590
of the link this is mandated in backbone

67
00:03:03,370 --> 00:03:08,980
and<font color="#E5E5E5"> edge routers and appears in RFPs</font>

68
00:03:05,590 --> 00:03:10,540
IETF architectural guidelines<font color="#E5E5E5"> and in the</font>

69
00:03:08,980 --> 00:03:12,609
literature<font color="#CCCCCC"> is usually referenced</font><font color="#E5E5E5"> to a</font>

70
00:03:10,540 --> 00:03:15,549
paper by vilasa<font color="#E5E5E5"> Moore and son but based</font>

71
00:03:12,610 --> 00:03:18,420
on an email in an end-to-end mailing

72
00:03:15,550 --> 00:03:23,050
<font color="#E5E5E5">list we believe that it was known much</font>

73
00:03:18,420 --> 00:03:24,640
before<font color="#CCCCCC"> that</font><font color="#E5E5E5"> that and if you take a</font>

74
00:03:23,050 --> 00:03:27,070
closer look<font color="#E5E5E5"> at this rule</font><font color="#CCCCCC"> you can see</font>

75
00:03:24,640 --> 00:03:29,079
that even<font color="#CCCCCC"> though we don't expect T to</font>

76
00:03:27,070 --> 00:03:31,420
change over time<font color="#E5E5E5"> that much we expect</font>

77
00:03:29,080 --> 00:03:33,760
capacity to grow dramatically and so the

78
00:03:31,420 --> 00:03:35,739
<font color="#E5E5E5">buffer size should also grow linearly</font>

79
00:03:33,760 --> 00:03:40,390
<font color="#E5E5E5">with capacity and it has major</font>

80
00:03:35,740 --> 00:03:43,140
<font color="#CCCCCC">consequences in</font><font color="#E5E5E5"> our design</font><font color="#CCCCCC"> ok let me</font>

81
00:03:40,390 --> 00:03:45,399
<font color="#CCCCCC">show you where</font><font color="#E5E5E5"> this rule comes from</font>

82
00:03:43,140 --> 00:03:48,970
amazingly this rule comes from a setting

83
00:03:45,400 --> 00:03:50,500
with a single TCP<font color="#E5E5E5"> flow</font><font color="#CCCCCC"> as you all</font><font color="#E5E5E5"> know</font>

84
00:03:48,970 --> 00:03:52,359
TCP is the window based congestion

85
00:03:50,500 --> 00:03:55,120
control scheme in the sense that

86
00:03:52,360 --> 00:03:56,200
whenever the source sends<font color="#E5E5E5"> a packet</font>

87
00:03:55,120 --> 00:03:58,630
<font color="#E5E5E5">towards the destination</font>

88
00:03:56,200 --> 00:04:01,119
it keeps the packet inside<font color="#E5E5E5"> the</font>

89
00:03:58,630 --> 00:04:04,600
congestion<font color="#CCCCCC"> window</font><font color="#E5E5E5"> until it receives an</font>

90
00:04:01,120 --> 00:04:06,940
<font color="#CCCCCC">acknowledgment back from the receiver at</font>

91
00:04:04,600 --> 00:04:12,420
that time<font color="#E5E5E5"> the source removes that packet</font>

92
00:04:06,940 --> 00:04:16,180
from the congestion<font color="#CCCCCC"> window for TCP to</font>

93
00:04:12,420 --> 00:04:18,399
maintain 100% link utilization

94
00:04:16,180 --> 00:04:20,769
at the bottleneck<font color="#CCCCCC"> link</font><font color="#E5E5E5"> the way it</font>

95
00:04:18,399 --> 00:04:22,210
<font color="#E5E5E5">changes the congestion</font><font color="#CCCCCC"> window size</font><font color="#E5E5E5"> W is</font>

96
00:04:20,769 --> 00:04:24,850
that<font color="#E5E5E5"> whenever it</font><font color="#CCCCCC"> receives an</font>

97
00:04:22,210 --> 00:04:27,640
<font color="#CCCCCC">acknowledgment back from the receiver it</font>

98
00:04:24,850 --> 00:04:31,150
<font color="#CCCCCC">in cream it increments the congestion</font>

99
00:04:27,640 --> 00:04:33,070
window<font color="#CCCCCC"> size W</font><font color="#E5E5E5"> by 1</font><font color="#CCCCCC"> over W and whenever</font>

100
00:04:31,150 --> 00:04:36,400
it look it finds out the packet is lost

101
00:04:33,070 --> 00:04:37,990
<font color="#E5E5E5">for any reason the congestion window</font>

102
00:04:36,400 --> 00:04:42,190
<font color="#CCCCCC">sizes have of course this</font><font color="#E5E5E5"> is a</font>

103
00:04:37,990 --> 00:04:47,170
simplification<font color="#E5E5E5"> but for all purposes</font><font color="#CCCCCC"> I'll</font>

104
00:04:42,190 --> 00:04:50,200
use this<font color="#E5E5E5"> model now in this example as</font>

105
00:04:47,170 --> 00:04:52,390
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can see the the congestion window</font>

106
00:04:50,200 --> 00:04:54,490
<font color="#CCCCCC">size will</font><font color="#E5E5E5"> keep increasing until the</font>

107
00:04:52,390 --> 00:04:56,560
pipes basically the links connecting the

108
00:04:54,490 --> 00:04:58,030
sources destination and the links

109
00:04:56,560 --> 00:04:59,920
connecting the destination back to the

110
00:04:58,030 --> 00:05:01,989
source<font color="#E5E5E5"> they all become full at this</font>

111
00:04:59,920 --> 00:05:05,650
point what happens is by<font color="#CCCCCC"> increasing the</font>

112
00:05:01,990 --> 00:05:10,030
congestion<font color="#E5E5E5"> window size the but the</font>

113
00:05:05,650 --> 00:05:13,690
buffer will start filling up<font color="#E5E5E5"> and the</font>

114
00:05:10,030 --> 00:05:16,179
same thing will happen<font color="#CCCCCC"> until the buffer</font>

115
00:05:13,690 --> 00:05:18,550
<font color="#E5E5E5">becomes full note that during this time</font>

116
00:05:16,180 --> 00:05:21,520
<font color="#E5E5E5">the</font><font color="#CCCCCC"> utilization of the ball neck link</font><font color="#E5E5E5"> is</font>

117
00:05:18,550 --> 00:05:23,410
a hundred<font color="#CCCCCC"> percent oh by the way I forgot</font>

118
00:05:21,520 --> 00:05:25,479
<font color="#E5E5E5">to</font><font color="#CCCCCC"> mention that</font><font color="#E5E5E5"> the reason buffers</font><font color="#CCCCCC"> the</font>

119
00:05:23,410 --> 00:05:28,030
packet sizes changes because this

120
00:05:25,480 --> 00:05:32,220
bottleneck<font color="#E5E5E5"> link capacity is lower than</font>

121
00:05:28,030 --> 00:05:32,219
the other<font color="#E5E5E5"> links now</font>

122
00:05:35,580 --> 00:05:39,378
when the buffer<font color="#E5E5E5"> becomes full</font>

123
00:05:39,990 --> 00:05:45,910
which is at this point

124
00:05:43,270 --> 00:05:48,698
when the window size is increased by one

125
00:05:45,910 --> 00:05:52,539
<font color="#E5E5E5">there is no room for that packet and the</font>

126
00:05:48,699 --> 00:05:55,569
packet becomes dropped and when this

127
00:05:52,539 --> 00:05:57,969
source is notified of<font color="#CCCCCC"> that</font><font color="#E5E5E5"> packet drop</font>

128
00:05:55,569 --> 00:06:00,900
it will have the window size now<font color="#E5E5E5"> note</font>

129
00:05:57,970 --> 00:06:04,449
<font color="#CCCCCC">that when the</font><font color="#E5E5E5"> window sizes have the</font>

130
00:06:00,900 --> 00:06:06,969
source<font color="#CCCCCC"> stop</font><font color="#E5E5E5"> sending more packets</font><font color="#CCCCCC"> until</font>

131
00:06:04,449 --> 00:06:09,490
it<font color="#CCCCCC"> receives enough acknowledgments back</font>

132
00:06:06,970 --> 00:06:11,050
from the receiver during that<font color="#CCCCCC"> time if</font>

133
00:06:09,490 --> 00:06:14,560
<font color="#E5E5E5">you want to have a hundred percent link</font>

134
00:06:11,050 --> 00:06:16,990
utilization<font color="#E5E5E5"> we should have a large</font>

135
00:06:14,560 --> 00:06:19,150
buffer<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that it can keep the link busy</font>

136
00:06:16,990 --> 00:06:23,440
<font color="#E5E5E5">during that time and that's exactly</font>

137
00:06:19,150 --> 00:06:30,380
where this<font color="#CCCCCC"> 2t</font><font color="#E5E5E5"> times</font><font color="#CCCCCC"> C bandwidth delay</font>

138
00:06:23,440 --> 00:06:32,530
product comes from<font color="#E5E5E5"> okay</font>

139
00:06:30,380 --> 00:06:34,990
<font color="#CCCCCC">to</font>

140
00:06:32,530 --> 00:06:37,630
we can see that the<font color="#E5E5E5"> congestion window</font>

141
00:06:34,990 --> 00:06:41,020
<font color="#CCCCCC">size changes between w max and w</font><font color="#E5E5E5"> max</font>

142
00:06:37,630 --> 00:06:42,790
over<font color="#CCCCCC"> two and if we want to</font><font color="#E5E5E5"> have when the</font>

143
00:06:41,020 --> 00:06:44,469
congestion<font color="#CCCCCC"> window size is at</font><font color="#E5E5E5"> W max</font><font color="#CCCCCC"> over</font>

144
00:06:42,790 --> 00:06:48,250
<font color="#E5E5E5">two if we want to have a hundred percent</font>

145
00:06:44,470 --> 00:06:50,620
<font color="#E5E5E5">utilization we should have the pipes</font>

146
00:06:48,250 --> 00:06:53,280
full which means we<font color="#E5E5E5"> should have at</font><font color="#CCCCCC"> these</font>

147
00:06:50,620 --> 00:06:55,600
<font color="#E5E5E5">two T times C packets outside and</font>

148
00:06:53,280 --> 00:06:58,270
therefore the<font color="#CCCCCC"> difference between W</font><font color="#E5E5E5"> Max</font>

149
00:06:55,600 --> 00:07:00,280
and W max<font color="#CCCCCC"> over two which is basically</font>

150
00:06:58,270 --> 00:07:04,870
the buffer size should also be<font color="#CCCCCC"> 2t times</font>

151
00:07:00,280 --> 00:07:06,909
C okay validating this<font color="#CCCCCC"> result</font><font color="#E5E5E5"> should be</font>

152
00:07:04,870 --> 00:07:12,730
<font color="#E5E5E5">very easy you just need</font><font color="#CCCCCC"> to do some</font>

153
00:07:06,910 --> 00:07:15,220
simulations<font color="#E5E5E5"> or just change the buffer</font>

154
00:07:12,730 --> 00:07:18,340
size on a router<font color="#E5E5E5"> and have a single TCP</font>

155
00:07:15,220 --> 00:07:21,310
<font color="#E5E5E5">flow going go through</font><font color="#CCCCCC"> that router I have</font>

156
00:07:18,340 --> 00:07:23,049
here the simulations result for a buffer

157
00:07:21,310 --> 00:07:25,030
size of<font color="#CCCCCC"> two</font><font color="#E5E5E5"> T times</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> which is exactly</font>

158
00:07:23,050 --> 00:07:28,210
the rule of thumb in the top graph you

159
00:07:25,030 --> 00:07:29,739
can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> the congestion</font><font color="#E5E5E5"> window</font><font color="#CCCCCC"> size and</font>

160
00:07:28,210 --> 00:07:32,020
in<font color="#E5E5E5"> the bottom</font><font color="#CCCCCC"> graph you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> the</font>

161
00:07:29,740 --> 00:07:33,700
buffer occupancy<font color="#E5E5E5"> as you can see when the</font>

162
00:07:32,020 --> 00:07:36,280
congestion<font color="#E5E5E5"> window size is increased and</font>

163
00:07:33,700 --> 00:07:38,380
<font color="#E5E5E5">it reaches its maximum the</font><font color="#CCCCCC"> buffer size</font>

164
00:07:36,280 --> 00:07:40,390
will become full at<font color="#E5E5E5"> this point</font><font color="#CCCCCC"> we'll</font>

165
00:07:38,380 --> 00:07:44,260
have<font color="#CCCCCC"> a packet drop and the congestion</font>

166
00:07:40,390 --> 00:07:46,659
<font color="#E5E5E5">window</font><font color="#CCCCCC"> size is halved</font><font color="#E5E5E5"> but the buffer</font>

167
00:07:44,260 --> 00:07:48,570
size never remains at<font color="#E5E5E5"> zero basically it</font>

168
00:07:46,660 --> 00:07:51,010
immediately starts building up again

169
00:07:48,570 --> 00:07:53,770
<font color="#E5E5E5">because by having the window size we</font>

170
00:07:51,010 --> 00:07:56,950
have<font color="#E5E5E5"> never removed any packet from the</font>

171
00:07:53,770 --> 00:07:59,200
pipe and the middle curve basically

172
00:07:56,950 --> 00:08:01,210
<font color="#E5E5E5">shows that the utilization remains at</font>

173
00:07:59,200 --> 00:08:03,880
<font color="#CCCCCC">100%</font><font color="#E5E5E5"> utilization at all times</font>

174
00:08:01,210 --> 00:08:05,560
now if the buffer<font color="#E5E5E5"> size were was less</font>

175
00:08:03,880 --> 00:08:07,710
than<font color="#CCCCCC"> two T times</font><font color="#E5E5E5"> C what happens is that</font>

176
00:08:05,560 --> 00:08:11,350
<font color="#E5E5E5">when we have the congestion</font><font color="#CCCCCC"> window size</font>

177
00:08:07,710 --> 00:08:13,599
<font color="#E5E5E5">the buffer becomes empty but it will</font>

178
00:08:11,350 --> 00:08:16,390
remain empty for a<font color="#CCCCCC"> while before we can</font>

179
00:08:13,600 --> 00:08:20,380
fill up<font color="#CCCCCC"> the pipe and during that time</font>

180
00:08:16,390 --> 00:08:22,180
<font color="#CCCCCC">the utilization</font><font color="#E5E5E5"> goes below 100% so</font>

181
00:08:20,380 --> 00:08:24,190
that's basically why we need<font color="#CCCCCC"> 100%</font>

182
00:08:22,180 --> 00:08:28,650
<font color="#CCCCCC">utilization</font><font color="#E5E5E5"> when there is a single</font><font color="#CCCCCC"> flow</font>

183
00:08:24,190 --> 00:08:28,650
<font color="#E5E5E5">single TCP</font><font color="#CCCCCC"> flow going</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> the system</font>

184
00:08:30,410 --> 00:08:33,010
now

185
00:08:33,469 --> 00:08:39,800
in the core of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> internet obviously we</font>

186
00:08:35,629 --> 00:08:41,180
don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a single</font><font color="#E5E5E5"> flow maybe</font><font color="#CCCCCC"> twenty</font>

187
00:08:39,799 --> 00:08:43,250
years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know maybe twenty</font>

188
00:08:41,179 --> 00:08:46,459
<font color="#CCCCCC">years</font><font color="#E5E5E5"> ago having</font><font color="#CCCCCC"> one or two flows were</font>

189
00:08:43,250 --> 00:08:48,740
common<font color="#E5E5E5"> but today we have tens of</font>

190
00:08:46,459 --> 00:08:50,930
thousands<font color="#E5E5E5"> of flows and the question is</font>

191
00:08:48,740 --> 00:08:53,389
<font color="#E5E5E5">now what happens to this rule of</font><font color="#CCCCCC"> thumb</font>

192
00:08:50,930 --> 00:08:57,829
do we you still need to use the same

193
00:08:53,389 --> 00:08:59,689
ruler<font color="#CCCCCC"> can we</font><font color="#E5E5E5"> change it the answer is</font>

194
00:08:57,829 --> 00:09:01,729
<font color="#E5E5E5">this</font><font color="#CCCCCC"> if all</font><font color="#E5E5E5"> of the flows which are going</font>

195
00:08:59,689 --> 00:09:03,800
<font color="#E5E5E5">through the core router are synchronized</font>

196
00:09:01,730 --> 00:09:06,050
<font color="#CCCCCC">the dynamics of the</font><font color="#E5E5E5"> some of the</font>

197
00:09:03,800 --> 00:09:08,389
congestion<font color="#CCCCCC"> window</font><font color="#E5E5E5"> sizes will be very</font>

198
00:09:06,050 --> 00:09:10,849
similar<font color="#CCCCCC"> to the dynamics of</font><font color="#E5E5E5"> a single TCP</font>

199
00:09:08,389 --> 00:09:14,079
flow<font color="#E5E5E5"> therefore the buffer occupancy will</font>

200
00:09:10,850 --> 00:09:16,639
have very similar dynamics and we will

201
00:09:14,079 --> 00:09:18,439
need to use<font color="#CCCCCC"> the same amount of buffering</font>

202
00:09:16,639 --> 00:09:22,519
as before<font color="#E5E5E5"> basically the rule of thumb</font>

203
00:09:18,439 --> 00:09:24,829
<font color="#E5E5E5">still holds but if those flows are</font><font color="#CCCCCC"> not</font>

204
00:09:22,519 --> 00:09:27,500
synchronized<font color="#CCCCCC"> if for some reason for any</font>

205
00:09:24,829 --> 00:09:29,709
reason the flows<font color="#CCCCCC"> are desynchronized</font><font color="#E5E5E5"> we</font>

206
00:09:27,500 --> 00:09:31,970
can mathematically<font color="#E5E5E5"> show that the</font>

207
00:09:29,709 --> 00:09:34,550
variations in the<font color="#CCCCCC"> sum of</font><font color="#E5E5E5"> the congestion</font>

208
00:09:31,970 --> 00:09:36,110
<font color="#E5E5E5">window sizes will become smaller install</font>

209
00:09:34,550 --> 00:09:38,508
smaller as we increase the<font color="#CCCCCC"> number of</font>

210
00:09:36,110 --> 00:09:40,939
<font color="#E5E5E5">flows in fact we can mathematically show</font>

211
00:09:38,509 --> 00:09:44,060
<font color="#E5E5E5">that if</font><font color="#CCCCCC"> the flows are independent of</font>

212
00:09:40,939 --> 00:09:46,490
each<font color="#E5E5E5"> other based on central limit</font>

213
00:09:44,060 --> 00:09:49,040
theorem<font color="#E5E5E5"> the distribution of this</font><font color="#CCCCCC"> sum of</font>

214
00:09:46,490 --> 00:09:53,480
the congestion<font color="#E5E5E5"> window sizes will look</font>

215
00:09:49,040 --> 00:09:55,849
<font color="#CCCCCC">very</font><font color="#E5E5E5"> much like a</font><font color="#CCCCCC"> Gaussian</font><font color="#E5E5E5"> and the</font>

216
00:09:53,480 --> 00:09:58,459
interesting point<font color="#CCCCCC"> here is that</font><font color="#E5E5E5"> the</font>

217
00:09:55,850 --> 00:10:00,019
variance of this distribution which<font color="#CCCCCC"> is</font>

218
00:09:58,459 --> 00:10:01,550
basically the buffer size we need<font color="#E5E5E5"> we</font>

219
00:10:00,019 --> 00:10:04,310
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have a buffer size which can</font>

220
00:10:01,550 --> 00:10:06,769
accommodate<font color="#E5E5E5"> the variations in the</font><font color="#CCCCCC"> sum</font><font color="#E5E5E5"> of</font>

221
00:10:04,310 --> 00:10:08,810
congestion window<font color="#E5E5E5"> sizes this variance is</font>

222
00:10:06,769 --> 00:10:11,209
reduced by a<font color="#CCCCCC"> factor of square</font><font color="#E5E5E5"> root of n</font>

223
00:10:08,810 --> 00:10:14,268
where<font color="#E5E5E5"> n is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> number of long-lived TCP</font>

224
00:10:11,209 --> 00:10:16,609
flows going<font color="#CCCCCC"> through the system so I'm</font>

225
00:10:14,269 --> 00:10:19,459
not going to more details than<font color="#E5E5E5"> this we</font>

226
00:10:16,610 --> 00:10:20,720
have a paper<font color="#CCCCCC"> in Sikkim 2004 and for</font>

227
00:10:19,459 --> 00:10:23,768
anyone<font color="#CCCCCC"> who is interested they can just</font>

228
00:10:20,720 --> 00:10:23,769
keep<font color="#CCCCCC"> a copy of that</font><font color="#E5E5E5"> paper</font>

229
00:10:24,709 --> 00:10:33,479
but the<font color="#E5E5E5"> more important</font><font color="#CCCCCC"> part</font><font color="#E5E5E5"> for this</font>

230
00:10:28,800 --> 00:10:37,319
project was validating<font color="#E5E5E5"> this result to</font>

231
00:10:33,480 --> 00:10:39,089
that<font color="#E5E5E5"> end the simplest way to validate</font>

232
00:10:37,320 --> 00:10:41,610
<font color="#E5E5E5">these results of course at</font><font color="#CCCCCC"> least</font><font color="#E5E5E5"> for</font>

233
00:10:39,089 --> 00:10:44,070
<font color="#E5E5E5">people in academia is to do simulations</font>

234
00:10:41,610 --> 00:10:46,529
we did thousands of<font color="#CCCCCC"> ns2 simulations</font><font color="#E5E5E5"> you</font>

235
00:10:44,070 --> 00:10:49,199
can see one<font color="#CCCCCC"> of them here a very</font><font color="#E5E5E5"> simple</font>

236
00:10:46,529 --> 00:10:52,680
one the<font color="#E5E5E5"> x-axis is</font><font color="#CCCCCC"> the number of</font><font color="#E5E5E5"> TCP</font>

237
00:10:49,199 --> 00:10:54,959
flows and the<font color="#E5E5E5"> y-axis is</font><font color="#CCCCCC"> the minimum</font>

238
00:10:52,680 --> 00:10:57,329
buffer size which we need<font color="#E5E5E5"> the green</font>

239
00:10:54,959 --> 00:10:59,099
curve shows<font color="#CCCCCC"> the</font><font color="#E5E5E5"> analytical model the</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> T</font>

240
00:10:57,329 --> 00:11:02,250
times<font color="#E5E5E5"> C divided</font><font color="#CCCCCC"> by square</font><font color="#E5E5E5"> root of N and</font>

241
00:10:59,100 --> 00:11:03,810
the red dots<font color="#CCCCCC"> are basically simulation</font>

242
00:11:02,250 --> 00:11:07,560
results<font color="#E5E5E5"> you can see</font><font color="#CCCCCC"> that when</font><font color="#E5E5E5"> the number</font>

243
00:11:03,810 --> 00:11:10,109
<font color="#CCCCCC">of flows is more than 34 D flows the two</font>

244
00:11:07,560 --> 00:11:12,649
curves match<font color="#E5E5E5"> very closely but when the</font>

245
00:11:10,110 --> 00:11:14,880
number<font color="#E5E5E5"> of flows are less than 30 or 40</font>

246
00:11:12,649 --> 00:11:17,310
they do not match the reason is that

247
00:11:14,880 --> 00:11:19,680
when the number<font color="#CCCCCC"> of flows are less than</font>

248
00:11:17,310 --> 00:11:23,899
<font color="#E5E5E5">30 for today the central limit theorem</font>

249
00:11:19,680 --> 00:11:26,849
does<font color="#CCCCCC"> not apply in that</font><font color="#E5E5E5"> setting but</font>

250
00:11:23,899 --> 00:11:29,130
simulations are nice but they're not

251
00:11:26,850 --> 00:11:31,829
they might not be really<font color="#CCCCCC"> represented</font><font color="#E5E5E5"> of</font>

252
00:11:29,130 --> 00:11:34,250
what happens in<font color="#E5E5E5"> a</font><font color="#CCCCCC"> real Network so</font><font color="#E5E5E5"> we</font>

253
00:11:31,829 --> 00:11:36,930
have tried<font color="#CCCCCC"> to do experiments</font><font color="#E5E5E5"> in real</font>

254
00:11:34,250 --> 00:11:40,139
networks<font color="#E5E5E5"> the first experiment that we</font>

255
00:11:36,930 --> 00:11:42,410
did<font color="#E5E5E5"> was on traffic coming out of one</font><font color="#CCCCCC"> of</font>

256
00:11:40,139 --> 00:11:45,269
the dorm dorms at Stanford University

257
00:11:42,410 --> 00:11:47,250
<font color="#CCCCCC">the capacity of link</font><font color="#E5E5E5"> was not</font><font color="#CCCCCC"> that high</font>

258
00:11:45,269 --> 00:11:49,529
it was just 100 megabits per second but

259
00:11:47,250 --> 00:11:51,480
<font color="#E5E5E5">it was highly utilized at all times and</font>

260
00:11:49,529 --> 00:11:53,610
we had a variety<font color="#E5E5E5"> of traffic going</font>

261
00:11:51,480 --> 00:11:55,829
through<font color="#CCCCCC"> that link we reduced the buffer</font>

262
00:11:53,610 --> 00:11:58,380
size<font color="#E5E5E5"> didn't see any major degradation</font>

263
00:11:55,829 --> 00:12:01,199
and<font color="#E5E5E5"> system</font><font color="#CCCCCC"> performance we</font><font color="#E5E5E5"> did an</font>

264
00:11:58,380 --> 00:12:03,839
experiment<font color="#E5E5E5"> at the whale</font><font color="#CCCCCC"> lab University</font>

265
00:12:01,199 --> 00:12:05,819
of Wisconsin's whale lab there<font color="#E5E5E5"> in this</font>

266
00:12:03,839 --> 00:12:09,449
<font color="#CCCCCC">testbed we generated traffic using</font>

267
00:12:05,819 --> 00:12:13,110
several<font color="#CCCCCC"> pcs</font><font color="#E5E5E5"> 40 pcs heat generated 10</font>

268
00:12:09,449 --> 00:12:15,079
flows so we had<font color="#E5E5E5"> 4,400 flows and reduced</font>

269
00:12:13,110 --> 00:12:17,760
the buffer size by a<font color="#CCCCCC"> factor of 20 and</font>

270
00:12:15,079 --> 00:12:20,010
didn't see any degradation<font color="#E5E5E5"> in system</font>

271
00:12:17,760 --> 00:12:22,439
performance<font color="#CCCCCC"> internet 2 did some</font>

272
00:12:20,010 --> 00:12:29,370
experiments and they reduced the buffer

273
00:12:22,440 --> 00:12:35,390
size<font color="#E5E5E5"> to 50 2010</font><font color="#CCCCCC"> 2 & 1 milliseconds</font>

274
00:12:29,370 --> 00:12:35,390
on their backbone and sorry<font color="#CCCCCC"> and</font>

275
00:12:36,350 --> 00:12:42,360
interestingly they did<font color="#E5E5E5"> not see any</font>

276
00:12:40,350 --> 00:12:44,940
<font color="#CCCCCC">degradation and system performance</font><font color="#E5E5E5"> and</font>

277
00:12:42,360 --> 00:12:46,800
more interestingly<font color="#CCCCCC"> we later</font><font color="#E5E5E5"> realized</font>

278
00:12:44,940 --> 00:12:50,400
that when they were thinking<font color="#CCCCCC"> they are</font>

279
00:12:46,800 --> 00:12:52,760
reducing the buffer size to 10 5<font color="#E5E5E5"> to 1</font>

280
00:12:50,400 --> 00:12:55,920
millisecond they were reducing<font color="#E5E5E5"> it</font><font color="#CCCCCC"> to 1</font>

281
00:12:52,760 --> 00:12:57,600
<font color="#E5E5E5">microseconds actually and it appears</font>

282
00:12:55,920 --> 00:12:58,979
there are<font color="#E5E5E5"> some hidden buffers in the</font>

283
00:12:57,600 --> 00:13:02,310
router which we didn't take into<font color="#E5E5E5"> account</font>

284
00:12:58,980 --> 00:13:04,410
<font color="#CCCCCC">and we are working</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> to redo</font>

285
00:13:02,310 --> 00:13:07,280
those experiments<font color="#E5E5E5"> but the last</font>

286
00:13:04,410 --> 00:13:09,300
experiment<font color="#E5E5E5"> which we have done is</font>

287
00:13:07,280 --> 00:13:12,449
performed by level 3 communications

288
00:13:09,300 --> 00:13:14,459
which we are<font color="#E5E5E5"> very thankful to this was</font>

289
00:13:12,450 --> 00:13:16,830
the most<font color="#E5E5E5"> exciting experiment because it</font>

290
00:13:14,460 --> 00:13:18,990
<font color="#CCCCCC">was done on a on an operational internet</font>

291
00:13:16,830 --> 00:13:21,810
<font color="#CCCCCC">backbone and I'm going to talk about it</font>

292
00:13:18,990 --> 00:13:24,090
in more details<font color="#E5E5E5"> there are several things</font>

293
00:13:21,810 --> 00:13:27,329
that<font color="#E5E5E5"> make this experiment</font><font color="#CCCCCC"> very</font>

294
00:13:24,090 --> 00:13:29,730
interesting the first<font color="#E5E5E5"> one was we had</font>

295
00:13:27,330 --> 00:13:32,760
three parallel links<font color="#E5E5E5"> the traffic coming</font>

296
00:13:29,730 --> 00:13:34,830
<font color="#CCCCCC">to the router was load</font><font color="#E5E5E5"> balance over</font>

297
00:13:32,760 --> 00:13:36,510
these three parallel links this gives us

298
00:13:34,830 --> 00:13:39,540
an<font color="#E5E5E5"> opportunity to reduce the buffer size</font>

299
00:13:36,510 --> 00:13:40,950
on one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> those links and find out what</font>

300
00:13:39,540 --> 00:13:43,349
happens<font color="#CCCCCC"> to the system performance</font>

301
00:13:40,950 --> 00:13:45,720
basically<font color="#E5E5E5"> if</font><font color="#CCCCCC"> we had just</font><font color="#E5E5E5"> one link the</font>

302
00:13:43,350 --> 00:13:47,160
problem is you cannot<font color="#E5E5E5"> tell if the</font>

303
00:13:45,720 --> 00:13:48,810
throughput<font color="#E5E5E5"> for example goes down you</font>

304
00:13:47,160 --> 00:13:51,030
can't you cannot tell<font color="#CCCCCC"> if that</font><font color="#E5E5E5"> happened</font>

305
00:13:48,810 --> 00:13:53,550
<font color="#E5E5E5">for some other reason or</font><font color="#CCCCCC"> that buffer</font>

306
00:13:51,030 --> 00:13:55,319
sizing change caused that but here we

307
00:13:53,550 --> 00:13:58,560
have a way of<font color="#CCCCCC"> Apple to Apple comparison</font>

308
00:13:55,320 --> 00:14:03,120
of the<font color="#E5E5E5"> results the other interesting</font>

309
00:13:58,560 --> 00:14:04,650
thing<font color="#E5E5E5"> was</font><font color="#CCCCCC"> that the this these three</font>

310
00:14:03,120 --> 00:14:08,190
<font color="#E5E5E5">links were very highly</font><font color="#CCCCCC"> utilized</font>

311
00:14:04,650 --> 00:14:12,449
<font color="#E5E5E5">basically at the peak time the at peak</font>

312
00:14:08,190 --> 00:14:15,690
they were up<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 95% utilized</font><font color="#E5E5E5"> which was</font>

313
00:14:12,450 --> 00:14:20,820
<font color="#E5E5E5">very interesting and the buffer size</font>

314
00:14:15,690 --> 00:14:22,770
reduction<font color="#E5E5E5"> did take about two weeks</font><font color="#CCCCCC"> we</font>

315
00:14:20,820 --> 00:14:24,690
reduced the buffer size and kept the

316
00:14:22,770 --> 00:14:27,319
buffer at that level<font color="#E5E5E5"> for</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> two weeks</font>

317
00:14:24,690 --> 00:14:31,200
<font color="#CCCCCC">and the buffer sizes which we</font><font color="#E5E5E5"> tried was</font>

318
00:14:27,320 --> 00:14:33,020
<font color="#E5E5E5">190 milliseconds</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> milliseconds 52.5</font>

319
00:14:31,200 --> 00:14:35,980
<font color="#E5E5E5">and</font><font color="#CCCCCC"> 1 milliseconds</font>

320
00:14:33,020 --> 00:14:39,439
and we<font color="#CCCCCC"> measured</font><font color="#E5E5E5"> the performance using</font>

321
00:14:35,980 --> 00:14:41,450
<font color="#E5E5E5">traces using data collected</font><font color="#CCCCCC"> every</font><font color="#E5E5E5"> 30</font>

322
00:14:39,440 --> 00:14:43,970
seconds that<font color="#E5E5E5"> drops on utilization</font><font color="#CCCCCC"> data</font>

323
00:14:41,450 --> 00:14:46,730
and<font color="#CCCCCC"> we</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> haven't</font><font color="#E5E5E5"> had some test flows</font>

324
00:14:43,970 --> 00:14:52,330
injected through<font color="#E5E5E5"> the system to see how</font>

325
00:14:46,730 --> 00:14:55,670
they perform<font color="#CCCCCC"> during the experiment okay</font>

326
00:14:52,330 --> 00:14:59,150
<font color="#E5E5E5">here is one of the graphs that shows</font>

327
00:14:55,670 --> 00:15:01,790
packet drops as a function of load for

328
00:14:59,150 --> 00:15:05,689
buffer<font color="#E5E5E5"> sizes of 190 milliseconds</font><font color="#CCCCCC"> 10</font>

329
00:15:01,790 --> 00:15:08,300
milliseconds<font color="#CCCCCC"> and</font><font color="#E5E5E5"> 5 milliseconds and as</font>

330
00:15:05,690 --> 00:15:10,910
you can<font color="#E5E5E5"> see almost at all times we did</font>

331
00:15:08,300 --> 00:15:14,569
not see<font color="#E5E5E5"> even a single packet drop note</font>

332
00:15:10,910 --> 00:15:16,160
<font color="#CCCCCC">that the</font><font color="#E5E5E5"> maximum throughput maximum</font>

333
00:15:14,570 --> 00:15:21,920
utilization<font color="#E5E5E5"> on this thing can</font><font color="#CCCCCC"> be up</font><font color="#E5E5E5"> to</font>

334
00:15:16,160 --> 00:15:23,900
<font color="#E5E5E5">2.4 gigabits per second and even when</font>

335
00:15:21,920 --> 00:15:26,540
the utilization<font color="#E5E5E5"> was very high we even</font>

336
00:15:23,900 --> 00:15:29,569
didn't see a single<font color="#E5E5E5"> packet drop in the</font>

337
00:15:26,540 --> 00:15:32,390
system<font color="#E5E5E5"> when we push the buffer size down</font>

338
00:15:29,570 --> 00:15:34,160
to 1 milliseconds<font color="#CCCCCC"> we started to see some</font>

339
00:15:32,390 --> 00:15:37,850
packet drops<font color="#E5E5E5"> interestingly as you can</font>

340
00:15:34,160 --> 00:15:41,449
see in this graph<font color="#E5E5E5"> there were only seven</font>

341
00:15:37,850 --> 00:15:43,370
<font color="#E5E5E5">or eight incidents during which we had a</font>

342
00:15:41,450 --> 00:15:45,010
packet drop rate of more<font color="#CCCCCC"> than 0.02</font>

343
00:15:43,370 --> 00:15:49,760
percent

344
00:15:45,010 --> 00:15:51,830
note that this said these<font color="#E5E5E5"> 7/8 incidents</font>

345
00:15:49,760 --> 00:15:56,600
<font color="#E5E5E5">happened during the course of two weeks</font>

346
00:15:51,830 --> 00:15:58,670
<font color="#CCCCCC">and the only time that we had a bunch of</font>

347
00:15:56,600 --> 00:16:00,980
packet<font color="#CCCCCC"> drops happening was when the link</font>

348
00:15:58,670 --> 00:16:02,930
<font color="#CCCCCC">utilization was very high</font><font color="#E5E5E5"> and that's</font>

349
00:16:00,980 --> 00:16:05,660
quite normal despite what some<font color="#CCCCCC"> people</font>

350
00:16:02,930 --> 00:16:08,569
think<font color="#E5E5E5"> packet drops are not necessarily</font>

351
00:16:05,660 --> 00:16:10,430
bad<font color="#CCCCCC"> TCP</font><font color="#E5E5E5"> is only they have realized</font>

352
00:16:08,570 --> 00:16:13,070
getting feedback<font color="#E5E5E5"> from</font><font color="#CCCCCC"> systemís packet</font>

353
00:16:10,430 --> 00:16:15,199
drops if they're in no packet drops<font color="#E5E5E5"> TCP</font>

354
00:16:13,070 --> 00:16:16,610
has no way of<font color="#E5E5E5"> realizing there is</font>

355
00:16:15,200 --> 00:16:19,070
<font color="#CCCCCC">congestion somewhere in the</font><font color="#E5E5E5"> network so</font>

356
00:16:16,610 --> 00:16:23,110
<font color="#E5E5E5">these packet drops which happen with at</font>

357
00:16:19,070 --> 00:16:26,660
high utilization are quite<font color="#CCCCCC"> ok</font>

358
00:16:23,110 --> 00:16:28,610
now the question is how<font color="#E5E5E5"> did the</font>

359
00:16:26,660 --> 00:16:30,770
<font color="#E5E5E5">throughput change as a function of</font>

360
00:16:28,610 --> 00:16:33,529
buffer size reduction<font color="#E5E5E5"> what I have here</font>

361
00:16:30,770 --> 00:16:35,750
is I have<font color="#E5E5E5"> plotted the ratio of the</font>

362
00:16:33,529 --> 00:16:38,330
utilization<font color="#E5E5E5"> on two links the link with</font>

363
00:16:35,750 --> 00:16:41,570
one millisecond buffering and a link<font color="#CCCCCC"> was</font>

364
00:16:38,330 --> 00:16:43,940
<font color="#E5E5E5">190 millisecond buffering ideally if</font>

365
00:16:41,570 --> 00:16:47,360
there is no change in utilization<font color="#CCCCCC"> what</font>

366
00:16:43,940 --> 00:16:50,240
you will see is a straight line which

367
00:16:47,360 --> 00:16:54,080
shows<font color="#E5E5E5"> one at all times</font><font color="#CCCCCC"> basically the two</font>

368
00:16:50,240 --> 00:16:56,480
utilization should be the same<font color="#E5E5E5"> but to</font>

369
00:16:54,080 --> 00:16:59,570
our<font color="#E5E5E5"> surprise</font><font color="#CCCCCC"> the link</font><font color="#E5E5E5"> with less</font>

370
00:16:56,480 --> 00:17:03,320
buffering<font color="#E5E5E5"> had a higher utilization which</font>

371
00:16:59,570 --> 00:17:06,470
was very<font color="#E5E5E5"> interesting and more</font>

372
00:17:03,320 --> 00:17:08,300
interestingly if you<font color="#E5E5E5"> plot this curve in</font>

373
00:17:06,470 --> 00:17:10,400
<font color="#E5E5E5">an</font><font color="#CCCCCC"> honor</font><font color="#E5E5E5"> in another way which is</font><font color="#CCCCCC"> this</font>

374
00:17:08,300 --> 00:17:12,678
one basically<font color="#E5E5E5"> in the x axis</font><font color="#CCCCCC"> I have the</font>

375
00:17:10,400 --> 00:17:14,300
<font color="#CCCCCC">utilization of the link with one</font>

376
00:17:12,679 --> 00:17:16,640
millisecond buffering and<font color="#E5E5E5"> then the y</font>

377
00:17:14,300 --> 00:17:19,369
axis I have the utilization<font color="#E5E5E5"> of the link</font>

378
00:17:16,640 --> 00:17:23,990
with 190<font color="#CCCCCC"> milliseconds and each</font><font color="#E5E5E5"> point</font>

379
00:17:19,369 --> 00:17:27,649
each blue dot represents a<font color="#E5E5E5"> 30-second</font>

380
00:17:23,990 --> 00:17:29,630
time interval<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see that ideally</font>

381
00:17:27,650 --> 00:17:32,270
if the two<font color="#E5E5E5"> utilizations were the same at</font>

382
00:17:29,630 --> 00:17:37,059
all times<font color="#CCCCCC"> we</font><font color="#E5E5E5"> should have all points</font>

383
00:17:32,270 --> 00:17:39,950
lying on<font color="#E5E5E5"> this purple line 45-degree line</font>

384
00:17:37,059 --> 00:17:42,110
<font color="#CCCCCC">and as you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see the link with one</font>

385
00:17:39,950 --> 00:17:45,290
millisecond buffering shows higher

386
00:17:42,110 --> 00:17:48,949
utilization<font color="#E5E5E5"> at periods which load is</font>

387
00:17:45,290 --> 00:17:51,260
higher<font color="#E5E5E5"> we were very excited at first</font>

388
00:17:48,950 --> 00:17:54,020
thinking<font color="#E5E5E5"> oh not</font><font color="#CCCCCC"> only we did not</font><font color="#E5E5E5"> reduce</font>

389
00:17:51,260 --> 00:17:56,150
the<font color="#E5E5E5"> utilization by reducing the buffer</font>

390
00:17:54,020 --> 00:17:58,639
size but also we got some better

391
00:17:56,150 --> 00:18:01,880
performance higher utilization<font color="#E5E5E5"> but it</font>

392
00:17:58,640 --> 00:18:03,559
turns out this is<font color="#E5E5E5"> not because</font><font color="#CCCCCC"> of changes</font>

393
00:18:01,880 --> 00:18:05,600
in buffer size but as a result<font color="#CCCCCC"> of</font>

394
00:18:03,559 --> 00:18:08,840
<font color="#E5E5E5">imperfections in load balancing</font><font color="#CCCCCC"> we</font>

395
00:18:05,600 --> 00:18:11,719
scheme and ideally what we should<font color="#CCCCCC"> have</font>

396
00:18:08,840 --> 00:18:14,300
<font color="#E5E5E5">done was</font><font color="#CCCCCC"> to reverse the buffer sizes</font>

397
00:18:11,720 --> 00:18:17,990
<font color="#CCCCCC">onto links on the two links and see if</font>

398
00:18:14,300 --> 00:18:20,030
the reverse thing happens but we could

399
00:18:17,990 --> 00:18:21,890
<font color="#E5E5E5">not do that</font><font color="#CCCCCC"> because those links were</font>

400
00:18:20,030 --> 00:18:25,309
gone after<font color="#E5E5E5"> our simulation after our</font>

401
00:18:21,890 --> 00:18:28,100
experiments were<font color="#CCCCCC"> done they were over</font>

402
00:18:25,309 --> 00:18:29,540
provisioned and some other links<font color="#CCCCCC"> that</font>

403
00:18:28,100 --> 00:18:36,459
<font color="#E5E5E5">was added to the</font>

404
00:18:29,540 --> 00:18:39,530
<font color="#CCCCCC">Network now this new result has great</font>

405
00:18:36,460 --> 00:18:42,470
<font color="#E5E5E5">consequences in buffer size in designing</font>

406
00:18:39,530 --> 00:18:46,460
routers basically with 1 million packets

407
00:18:42,470 --> 00:18:48,710
<font color="#E5E5E5">you have to have both you can't have on</font>

408
00:18:46,460 --> 00:18:53,420
<font color="#E5E5E5">cheap buffers but with this one</font><font color="#CCCCCC"> you can</font>

409
00:18:48,710 --> 00:18:55,880
<font color="#CCCCCC">put buffers on a corner of</font><font color="#E5E5E5"> the chip when</font>

410
00:18:53,420 --> 00:18:57,440
you're<font color="#CCCCCC"> designing router buffers but in</font>

411
00:18:55,880 --> 00:18:59,690
the next<font color="#CCCCCC"> rule that</font><font color="#E5E5E5"> I'm going to talk</font>

412
00:18:57,440 --> 00:19:02,630
<font color="#CCCCCC">about</font><font color="#E5E5E5"> we're thinking</font><font color="#CCCCCC"> about a</font><font color="#E5E5E5"> different</font>

413
00:18:59,690 --> 00:19:04,490
setting basically the motivation for

414
00:19:02,630 --> 00:19:07,610
<font color="#E5E5E5">this one was we are working</font><font color="#CCCCCC"> on a project</font>

415
00:19:04,490 --> 00:19:10,640
<font color="#E5E5E5">that aims at building an all optical</font>

416
00:19:07,610 --> 00:19:12,909
network in an all optical network you'd

417
00:19:10,640 --> 00:19:15,500
not only switch packets and not only

418
00:19:12,910 --> 00:19:17,930
transfer packets in optics but<font color="#E5E5E5"> also do</font>

419
00:19:15,500 --> 00:19:20,480
the switching<font color="#E5E5E5"> in optics</font><font color="#CCCCCC"> you do not</font>

420
00:19:17,930 --> 00:19:22,970
convert packets into electronic<font color="#CCCCCC"> signals</font>

421
00:19:20,480 --> 00:19:25,850
<font color="#E5E5E5">and of course since</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> have large</font>

422
00:19:22,970 --> 00:19:28,430
buffers<font color="#E5E5E5"> in optics the only way to keep</font>

423
00:19:25,850 --> 00:19:31,820
packets<font color="#CCCCCC"> is to keep them in delay lines</font>

424
00:19:28,430 --> 00:19:34,550
and there are some<font color="#CCCCCC"> results that show in</font>

425
00:19:31,820 --> 00:19:37,879
<font color="#CCCCCC">5-10 years we</font><font color="#E5E5E5"> will have buffers of up to</font>

426
00:19:34,550 --> 00:19:39,110
20 packets<font color="#CCCCCC"> now the question</font><font color="#E5E5E5"> was if we</font>

427
00:19:37,880 --> 00:19:41,630
reduce the buffer size due to any

428
00:19:39,110 --> 00:19:45,770
packets can we gain acceptable

429
00:19:41,630 --> 00:19:47,900
throughput in the system or<font color="#CCCCCC"> not of</font>

430
00:19:45,770 --> 00:19:50,810
course<font color="#CCCCCC"> in an elliptical</font><font color="#E5E5E5"> Network the</font>

431
00:19:47,900 --> 00:19:52,070
capacity is<font color="#E5E5E5"> not a major problem</font><font color="#CCCCCC"> anymore</font>

432
00:19:50,810 --> 00:19:53,780
it's not<font color="#E5E5E5"> the bottleneck</font><font color="#CCCCCC"> you're not</font>

433
00:19:52,070 --> 00:19:56,080
aiming at reaching<font color="#CCCCCC"> a hundred percent</font>

434
00:19:53,780 --> 00:19:59,810
utilization at all times

435
00:19:56,080 --> 00:20:03,110
because<font color="#E5E5E5"> of a huge amount of capacity</font>

436
00:19:59,810 --> 00:20:06,770
<font color="#CCCCCC">that is available</font><font color="#E5E5E5"> let me step back for</font><font color="#CCCCCC"> a</font>

437
00:20:03,110 --> 00:20:08,750
second here<font color="#E5E5E5"> and compare</font><font color="#CCCCCC"> what we have in</font>

438
00:20:06,770 --> 00:20:14,770
theory<font color="#CCCCCC"> in practice theoretically if you</font>

439
00:20:08,750 --> 00:20:17,750
have a queue<font color="#E5E5E5"> with</font><font color="#CCCCCC"> rivals which are</font>

440
00:20:14,770 --> 00:20:21,800
smooth<font color="#E5E5E5"> basically for example they pause</font>

441
00:20:17,750 --> 00:20:24,650
on arrival<font color="#CCCCCC"> to a queue</font><font color="#E5E5E5"> and assuming that</font>

442
00:20:21,800 --> 00:20:28,580
<font color="#E5E5E5">the load is low you can have very very</font>

443
00:20:24,650 --> 00:20:31,460
<font color="#E5E5E5">small amount of packet drops with very</font>

444
00:20:28,580 --> 00:20:35,960
very small buffer sizes for<font color="#CCCCCC"> example if</font>

445
00:20:31,460 --> 00:20:38,150
load is<font color="#E5E5E5"> at 80% 80% and the</font><font color="#CCCCCC"> buffer size</font>

446
00:20:35,960 --> 00:20:38,880
<font color="#CCCCCC">is</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> 2 any packets</font><font color="#E5E5E5"> we can get less</font>

447
00:20:38,150 --> 00:20:42,120
<font color="#CCCCCC">than 1</font>

448
00:20:38,880 --> 00:20:44,010
packet drops<font color="#E5E5E5"> now this loss is</font>

449
00:20:42,120 --> 00:20:45,830
independent of link rate it<font color="#E5E5E5"> doesn't</font>

450
00:20:44,010 --> 00:20:48,570
depend on<font color="#CCCCCC"> RT T's or number</font><font color="#E5E5E5"> of flows</font>

451
00:20:45,830 --> 00:20:54,389
<font color="#E5E5E5">however in practice as you already</font><font color="#CCCCCC"> know</font>

452
00:20:48,570 --> 00:20:57,290
and<font color="#E5E5E5"> OC 91-92 router line card has more</font>

453
00:20:54,390 --> 00:21:00,570
than 1 million packets of buffering

454
00:20:57,290 --> 00:21:02,220
<font color="#CCCCCC">there are basically five orders of</font>

455
00:21:00,570 --> 00:21:06,240
<font color="#CCCCCC">magnitude difference</font><font color="#E5E5E5"> between what we</font>

456
00:21:02,220 --> 00:21:08,430
<font color="#E5E5E5">have in practice</font><font color="#CCCCCC"> and what we can</font><font color="#E5E5E5"> have in</font>

457
00:21:06,240 --> 00:21:11,520
theory<font color="#E5E5E5"> and the question is can</font><font color="#CCCCCC"> we make</font>

458
00:21:08,430 --> 00:21:14,220
<font color="#E5E5E5">traffic</font><font color="#CCCCCC"> look like force on or pass on</font>

459
00:21:11,520 --> 00:21:23,490
<font color="#CCCCCC">enough such that we can use the benefits</font>

460
00:21:14,220 --> 00:21:29,250
of such low<font color="#CCCCCC"> loss loss rates the answer</font>

461
00:21:23,490 --> 00:21:31,770
to this<font color="#E5E5E5"> question is yes</font><font color="#CCCCCC"> and this is</font>

462
00:21:29,250 --> 00:21:36,380
basically<font color="#E5E5E5"> a mathematical</font><font color="#CCCCCC"> theorem which</font>

463
00:21:31,770 --> 00:21:40,200
I'll try to explain<font color="#E5E5E5"> very intuitively if</font>

464
00:21:36,380 --> 00:21:41,970
<font color="#E5E5E5">we have a buffer size of log W max W max</font>

465
00:21:40,200 --> 00:21:44,160
<font color="#E5E5E5">is the maximum congestion window in the</font>

466
00:21:41,970 --> 00:21:46,340
system and alpha is<font color="#E5E5E5"> a constant</font><font color="#CCCCCC"> here I</font>

467
00:21:44,160 --> 00:21:49,020
will not talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> that one and</font>

468
00:21:46,340 --> 00:21:51,990
assuming<font color="#E5E5E5"> that any two packets from the</font>

469
00:21:49,020 --> 00:21:54,120
<font color="#E5E5E5">same flow have it space between them</font>

470
00:21:51,990 --> 00:21:56,400
basically packets are not injected to

471
00:21:54,120 --> 00:21:58,530
the<font color="#E5E5E5"> system back to back they're not the</font>

472
00:21:56,400 --> 00:22:01,800
any two packets<font color="#E5E5E5"> of the same flow going</font>

473
00:21:58,530 --> 00:22:05,100
<font color="#E5E5E5">through the router have a space of beta</font>

474
00:22:01,800 --> 00:22:08,730
<font color="#E5E5E5">log W</font><font color="#CCCCCC"> max beta again is a constant which</font>

475
00:22:05,100 --> 00:22:12,060
is not really important at this point<font color="#E5E5E5"> if</font>

476
00:22:08,730 --> 00:22:13,560
we<font color="#E5E5E5"> can ensure that and assuming that the</font>

477
00:22:12,060 --> 00:22:16,050
flows<font color="#CCCCCC"> are not synchronized</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> they are</font>

478
00:22:13,560 --> 00:22:17,760
start independently from each<font color="#E5E5E5"> other we</font>

479
00:22:16,050 --> 00:22:21,000
can prove that<font color="#CCCCCC"> the packet drop</font>

480
00:22:17,760 --> 00:22:26,490
probability can remain very<font color="#CCCCCC"> low</font><font color="#E5E5E5"> we just</font>

481
00:22:21,000 --> 00:22:28,770
tend to any packets<font color="#E5E5E5"> we worked on this</font><font color="#CCCCCC"> in</font>

482
00:22:26,490 --> 00:22:30,750
parallel<font color="#E5E5E5"> with some folks in</font><font color="#CCCCCC"> the</font>

483
00:22:28,770 --> 00:22:32,510
University of Cambridge University of

484
00:22:30,750 --> 00:22:35,120
<font color="#E5E5E5">College London and UMass and</font>

485
00:22:32,510 --> 00:22:37,980
interestingly even<font color="#E5E5E5"> though we did</font><font color="#CCCCCC"> not we</font>

486
00:22:35,120 --> 00:22:40,800
purposefully<font color="#CCCCCC"> tried not to collaborate we</font>

487
00:22:37,980 --> 00:22:43,740
try to work independent of each other<font color="#E5E5E5"> at</font>

488
00:22:40,800 --> 00:22:46,139
the<font color="#E5E5E5"> end we reached the same results and</font>

489
00:22:43,740 --> 00:22:50,670
all of those papers are published in

490
00:22:46,140 --> 00:22:51,830
last July's ACM CCR<font color="#CCCCCC"> I can give you</font>

491
00:22:50,670 --> 00:22:55,460
copies if you're interested

492
00:22:51,830 --> 00:22:57,740
<font color="#CCCCCC">after</font><font color="#E5E5E5"> the talk now if you take</font><font color="#CCCCCC"> a look at</font>

493
00:22:55,460 --> 00:23:01,010
the<font color="#E5E5E5"> decor of the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> most of the</font>

494
00:22:57,740 --> 00:23:05,210
time<font color="#E5E5E5"> core links are not highly utilized</font>

495
00:23:01,010 --> 00:23:09,279
you have a load which is say<font color="#CCCCCC"> for example</font>

496
00:23:05,210 --> 00:23:12,019
less than<font color="#CCCCCC"> 80% at all points of</font><font color="#E5E5E5"> time and</font>

497
00:23:09,279 --> 00:23:15,049
we believe there is<font color="#CCCCCC"> a natural</font><font color="#E5E5E5"> spacing</font>

498
00:23:12,019 --> 00:23:17,990
between the<font color="#CCCCCC"> two</font><font color="#E5E5E5"> packets of most of the</font>

499
00:23:15,049 --> 00:23:21,559
flows this<font color="#E5E5E5"> is because</font><font color="#CCCCCC"> slow</font><font color="#E5E5E5"> access things</font>

500
00:23:17,990 --> 00:23:23,929
<font color="#E5E5E5">are</font><font color="#CCCCCC"> accessed things are</font><font color="#E5E5E5"> usually slower</font>

501
00:23:21,559 --> 00:23:25,700
than<font color="#E5E5E5"> core links so even if you send two</font>

502
00:23:23,929 --> 00:23:28,070
packets<font color="#E5E5E5"> back-to-back for example on a</font>

503
00:23:25,700 --> 00:23:30,200
DSL line when they reach the core

504
00:23:28,070 --> 00:23:33,139
<font color="#E5E5E5">naturally there will</font><font color="#CCCCCC"> be some spacing</font>

505
00:23:30,200 --> 00:23:36,070
between the two<font color="#CCCCCC"> and even if you have a</font>

506
00:23:33,139 --> 00:23:40,189
network<font color="#E5E5E5"> with high access link capacity</font>

507
00:23:36,070 --> 00:23:42,500
basically<font color="#CCCCCC"> for example if slack wants</font><font color="#E5E5E5"> to</font>

508
00:23:40,190 --> 00:23:45,230
use these kind of results what they have

509
00:23:42,500 --> 00:23:48,440
to do is just change<font color="#E5E5E5"> a</font><font color="#CCCCCC"> few lines of</font>

510
00:23:45,230 --> 00:23:51,559
source code in TCP<font color="#E5E5E5"> convert it to a paste</font>

511
00:23:48,440 --> 00:23:53,269
<font color="#CCCCCC">TCP version basically</font><font color="#E5E5E5"> putting some space</font>

512
00:23:51,559 --> 00:23:57,740
between any two packets injected to the

513
00:23:53,269 --> 00:23:59,990
<font color="#E5E5E5">system so</font><font color="#CCCCCC"> that should shouldn't</font><font color="#E5E5E5"> be very</font>

514
00:23:57,740 --> 00:24:01,909
difficult<font color="#E5E5E5"> and if we have all these</font>

515
00:23:59,990 --> 00:24:07,070
conditions<font color="#E5E5E5"> we can show that the traffic</font>

516
00:24:01,909 --> 00:24:09,590
<font color="#E5E5E5">will look like Poisson and</font><font color="#CCCCCC"> the last rate</font>

517
00:24:07,070 --> 00:24:11,990
will be<font color="#CCCCCC"> very low and it doesn't depend</font>

518
00:24:09,590 --> 00:24:15,379
<font color="#CCCCCC">on</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> tt's of flows and the number of</font>

519
00:24:11,990 --> 00:24:17,600
flows and based<font color="#E5E5E5"> on</font><font color="#CCCCCC"> that we can show that</font>

520
00:24:15,380 --> 00:24:19,940
<font color="#E5E5E5">with a buffer size of just 10 to 20</font>

521
00:24:17,600 --> 00:24:24,399
<font color="#E5E5E5">packets we can gain high throughput</font><font color="#CCCCCC"> and</font>

522
00:24:19,940 --> 00:24:27,919
by<font color="#E5E5E5"> high I mean 80 70 percent utilization</font>

523
00:24:24,399 --> 00:24:31,039
<font color="#E5E5E5">let me show you where this let me</font><font color="#CCCCCC"> show</font>

524
00:24:27,919 --> 00:24:34,130
you an very simple example where this

525
00:24:31,039 --> 00:24:38,120
result comes from here I<font color="#CCCCCC"> have</font><font color="#E5E5E5"> two leaky</font>

526
00:24:34,130 --> 00:24:41,450
buckets the one in the<font color="#E5E5E5"> left is filled</font>

527
00:24:38,120 --> 00:24:43,939
with very large water drops<font color="#CCCCCC"> I will show</font>

528
00:24:41,450 --> 00:24:49,370
you why<font color="#E5E5E5"> I use water drops here</font><font color="#CCCCCC"> and the</font>

529
00:24:43,940 --> 00:24:52,399
one in the<font color="#CCCCCC"> laureate has very small water</font>

530
00:24:49,370 --> 00:24:54,590
drops<font color="#CCCCCC"> coming in they have</font><font color="#E5E5E5"> 90 percent</font>

531
00:24:52,399 --> 00:24:59,018
<font color="#E5E5E5">load basically they are draining water</font>

532
00:24:54,590 --> 00:24:59,019
at<font color="#CCCCCC"> a rate of 90% at all times</font>

533
00:24:59,120 --> 00:25:03,989
as you<font color="#E5E5E5"> can see and the graphs on the</font>

534
00:25:01,620 --> 00:25:06,510
bottom<font color="#E5E5E5"> show the water level as a</font>

535
00:25:03,990 --> 00:25:10,770
function of time if you<font color="#E5E5E5"> take a closer</font>

536
00:25:06,510 --> 00:25:12,810
look as these two<font color="#E5E5E5"> cases you can see that</font>

537
00:25:10,770 --> 00:25:15,680
even<font color="#E5E5E5"> though</font><font color="#CCCCCC"> the load is the same on</font>

538
00:25:12,810 --> 00:25:18,990
these two cases<font color="#CCCCCC"> the water</font><font color="#E5E5E5"> level</font>

539
00:25:15,680 --> 00:25:22,350
variations is much more for the case

540
00:25:18,990 --> 00:25:27,180
where we<font color="#E5E5E5"> have large packet not packet</font>

541
00:25:22,350 --> 00:25:30,060
<font color="#CCCCCC">drops sorry</font><font color="#E5E5E5"> water drops and if but for</font>

542
00:25:27,180 --> 00:25:33,090
<font color="#CCCCCC">the one which we have smaller water</font>

543
00:25:30,060 --> 00:25:35,460
drops<font color="#E5E5E5"> the changes in water level is much</font>

544
00:25:33,090 --> 00:25:37,949
<font color="#E5E5E5">more smaller okay this is very</font>

545
00:25:35,460 --> 00:25:40,380
<font color="#CCCCCC">simplistic of course</font><font color="#E5E5E5"> but I want to show</font>

546
00:25:37,950 --> 00:25:43,250
<font color="#CCCCCC">that this is exactly what happens with</font>

547
00:25:40,380 --> 00:25:43,250
TCP Reno

548
00:25:48,310 --> 00:25:53,620
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> two sources s-one and s-two</font>

549
00:25:50,920 --> 00:25:55,900
generating packets the packets<font color="#CCCCCC"> go</font>

550
00:25:53,620 --> 00:25:59,860
through a router r1<font color="#E5E5E5"> and the destination</font>

551
00:25:55,900 --> 00:26:01,840
<font color="#E5E5E5">node is r2 r1 has one unit of buffering</font>

552
00:25:59,860 --> 00:26:04,570
available and I assume sources are

553
00:26:01,840 --> 00:26:07,060
generating packets using<font color="#E5E5E5"> TCP Reno a very</font>

554
00:26:04,570 --> 00:26:10,030
simplified<font color="#CCCCCC"> version of TCP Reno</font><font color="#E5E5E5"> in this</font>

555
00:26:07,060 --> 00:26:11,980
case<font color="#E5E5E5"> each of the sources send one packet</font>

556
00:26:10,030 --> 00:26:14,170
<font color="#E5E5E5">packets reach the</font><font color="#CCCCCC"> destination we get</font>

557
00:26:11,980 --> 00:26:19,180
acknowledgments back<font color="#E5E5E5"> the interesting</font>

558
00:26:14,170 --> 00:26:21,040
part is<font color="#E5E5E5"> that when s2 receives the</font>

559
00:26:19,180 --> 00:26:23,560
<font color="#E5E5E5">acknowledgement it</font><font color="#CCCCCC"> increments the window</font>

560
00:26:21,040 --> 00:26:32,440
size and sends two packets<font color="#E5E5E5"> back to back</font>

561
00:26:23,560 --> 00:26:36,669
<font color="#CCCCCC">and this keeps continuing</font><font color="#E5E5E5"> when those two</font>

562
00:26:32,440 --> 00:26:40,030
packets arrive at the source<font color="#E5E5E5"> we will</font>

563
00:26:36,670 --> 00:26:43,060
have three packets sent out<font color="#CCCCCC"> back-to-back</font>

564
00:26:40,030 --> 00:26:46,360
<font color="#CCCCCC">this is exactly</font><font color="#E5E5E5"> this what happens in the</font>

565
00:26:43,060 --> 00:26:48,250
large<font color="#CCCCCC"> water</font><font color="#E5E5E5"> drops case basically a bunch</font>

566
00:26:46,360 --> 00:26:51,429
<font color="#E5E5E5">of packets sent together look like a</font>

567
00:26:48,250 --> 00:26:54,130
huge water drop and<font color="#E5E5E5"> so if you have just</font>

568
00:26:51,430 --> 00:26:55,870
<font color="#CCCCCC">one unit of buffering available one of</font>

569
00:26:54,130 --> 00:26:57,930
those will be<font color="#E5E5E5"> dropped and the same thing</font>

570
00:26:55,870 --> 00:27:05,110
will happen<font color="#CCCCCC"> with the packets</font><font color="#E5E5E5"> of the is</font>

571
00:26:57,930 --> 00:27:11,610
first source<font color="#CCCCCC"> okay but on the other hand</font>

572
00:27:05,110 --> 00:27:11,610
<font color="#E5E5E5">if somehow I can manage</font><font color="#CCCCCC"> to change TCP</font>

573
00:27:12,070 --> 00:27:16,149
to insert some spacing between the

574
00:27:14,350 --> 00:27:18,070
packets<font color="#CCCCCC"> I haven't talked about</font><font color="#E5E5E5"> the</font>

575
00:27:16,150 --> 00:27:20,860
<font color="#E5E5E5">details of how much spacing we need if</font>

576
00:27:18,070 --> 00:27:25,419
someone is<font color="#CCCCCC"> interested</font><font color="#E5E5E5"> I can talk about</font>

577
00:27:20,860 --> 00:27:26,740
<font color="#E5E5E5">it offline but if for some reason we</font>

578
00:27:25,420 --> 00:27:28,630
have some spacing between the<font color="#E5E5E5"> two</font>

579
00:27:26,740 --> 00:27:30,670
<font color="#E5E5E5">packets we can show that the variations</font>

580
00:27:28,630 --> 00:27:33,220
in the buffer occupancy<font color="#E5E5E5"> which is</font>

581
00:27:30,670 --> 00:27:35,170
basically the same<font color="#E5E5E5"> as</font><font color="#CCCCCC"> the variations in</font>

582
00:27:33,220 --> 00:27:37,450
<font color="#E5E5E5">the water level in the previous example</font>

583
00:27:35,170 --> 00:27:39,910
<font color="#E5E5E5">the variations will become much much</font>

584
00:27:37,450 --> 00:27:44,320
smaller<font color="#E5E5E5"> and therefore with much much</font>

585
00:27:39,910 --> 00:27:48,940
smaller buffers we will we<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be able</font>

586
00:27:44,320 --> 00:27:50,860
<font color="#E5E5E5">to</font><font color="#CCCCCC"> gain higher throughput here I</font><font color="#E5E5E5"> haven't</font>

587
00:27:48,940 --> 00:27:53,620
modified TCP we have assumed that<font color="#E5E5E5"> there</font>

588
00:27:50,860 --> 00:27:57,219
is a minimum<font color="#E5E5E5"> amount</font><font color="#CCCCCC"> of spacing as a</font>

589
00:27:53,620 --> 00:27:59,610
result of slow access links generating

590
00:27:57,220 --> 00:27:59,610
packets

591
00:28:06,340 --> 00:28:11,908
<font color="#E5E5E5">okay</font>

592
00:28:07,840 --> 00:28:14,789
regarding validation of this new scheme

593
00:28:11,909 --> 00:28:18,789
<font color="#E5E5E5">unfortunately we haven't been able to do</font>

594
00:28:14,789 --> 00:28:20,679
<font color="#E5E5E5">real</font><font color="#CCCCCC"> Network experiments you should tell</font>

595
00:28:18,789 --> 00:28:23,440
me why nobody dares to<font color="#E5E5E5"> reduce the buffer</font>

596
00:28:20,679 --> 00:28:24,970
size to<font color="#E5E5E5"> ten packets we are trying to</font>

597
00:28:23,440 --> 00:28:27,909
<font color="#E5E5E5">convince people to do that in their</font>

598
00:28:24,970 --> 00:28:30,039
backbone but until we<font color="#CCCCCC"> can do that we</font>

599
00:28:27,909 --> 00:28:34,450
have done some<font color="#CCCCCC"> ns2</font><font color="#E5E5E5"> simulations what I</font>

600
00:28:30,039 --> 00:28:36,220
have here is throughput of a system as a

601
00:28:34,450 --> 00:28:39,730
function<font color="#CCCCCC"> of the buffer size let's for</font>

602
00:28:36,220 --> 00:28:42,010
<font color="#CCCCCC">now just focus on the blue curve the</font>

603
00:28:39,730 --> 00:28:43,720
<font color="#E5E5E5">x-axis</font><font color="#CCCCCC"> is the buffer size and the</font><font color="#E5E5E5"> y</font><font color="#CCCCCC"> axis</font>

604
00:28:42,010 --> 00:28:45,730
<font color="#CCCCCC">is throughput you can see that as I</font>

605
00:28:43,720 --> 00:28:50,409
increase the<font color="#E5E5E5"> buffer size from one packet</font>

606
00:28:45,730 --> 00:28:54,309
<font color="#CCCCCC">200 packets</font><font color="#E5E5E5"> in this case the throughput</font>

607
00:28:50,409 --> 00:28:58,390
<font color="#E5E5E5">goes</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> from something around</font><font color="#CCCCCC"> 5% to</font>

608
00:28:54,309 --> 00:29:00,850
around 95%<font color="#E5E5E5"> the</font><font color="#CCCCCC"> day graph on the right</font><font color="#E5E5E5"> is</font>

609
00:28:58,390 --> 00:29:04,659
the<font color="#CCCCCC"> same</font><font color="#E5E5E5"> graph as the other one but in</font>

610
00:29:00,850 --> 00:29:08,850
the logarithmic scale<font color="#E5E5E5"> this is if we</font><font color="#CCCCCC"> use</font>

611
00:29:04,659 --> 00:29:11,919
regular TCP<font color="#E5E5E5"> if I modify you TCP using</font>

612
00:29:08,850 --> 00:29:15,279
<font color="#E5E5E5">pacing</font><font color="#CCCCCC"> or if I have slow access links</font>

613
00:29:11,919 --> 00:29:17,529
which<font color="#E5E5E5"> cause packets to have some natural</font>

614
00:29:15,279 --> 00:29:22,169
spacing between them you can<font color="#E5E5E5"> see that</font>

615
00:29:17,529 --> 00:29:27,730
with just<font color="#E5E5E5"> only</font><font color="#CCCCCC"> 10 packets</font><font color="#E5E5E5"> of buffering</font>

616
00:29:22,169 --> 00:29:31,690
the utilization reaches 80%<font color="#E5E5E5"> the</font><font color="#CCCCCC"> our</font>

617
00:29:27,730 --> 00:29:34,330
occurs in the on this graph show<font color="#E5E5E5"> a</font>

618
00:29:31,690 --> 00:29:38,260
different number of<font color="#E5E5E5"> flows for</font><font color="#CCCCCC"> example</font>

619
00:29:34,330 --> 00:29:40,270
the red one is intended to<font color="#E5E5E5"> reach 50</font>

620
00:29:38,260 --> 00:29:42,669
<font color="#E5E5E5">percent and as you can</font><font color="#CCCCCC"> see it reaches</font>

621
00:29:40,270 --> 00:29:46,000
that<font color="#CCCCCC"> level</font><font color="#E5E5E5"> with just</font><font color="#CCCCCC"> 5 units of</font>

622
00:29:42,669 --> 00:29:49,450
buffering<font color="#E5E5E5"> very as in the second one in</font>

623
00:29:46,000 --> 00:29:52,620
<font color="#E5E5E5">the regular TCP case we need at</font><font color="#CCCCCC"> least 40</font>

624
00:29:49,450 --> 00:29:58,049
packets<font color="#CCCCCC"> now</font>

625
00:29:52,620 --> 00:30:01,168
if in<font color="#E5E5E5"> this second example</font><font color="#CCCCCC"> what I'm</font><font color="#E5E5E5"> doing</font>

626
00:29:58,049 --> 00:30:03,779
is I'm increasing<font color="#CCCCCC"> the number of</font><font color="#E5E5E5"> flows</font>

627
00:30:01,169 --> 00:30:06,210
<font color="#E5E5E5">and at the same time I'm increasing the</font>

628
00:30:03,779 --> 00:30:09,990
<font color="#E5E5E5">capacity</font><font color="#CCCCCC"> of the bottleneck link</font><font color="#E5E5E5"> so</font>

629
00:30:06,210 --> 00:30:12,720
basically the load the effective load

630
00:30:09,990 --> 00:30:16,860
coming<font color="#CCCCCC"> to the system</font><font color="#E5E5E5"> is kept fixed as at</font>

631
00:30:12,720 --> 00:30:20,760
<font color="#CCCCCC">80% and here I have</font><font color="#E5E5E5"> the red curve which</font>

632
00:30:16,860 --> 00:30:23,039
<font color="#E5E5E5">image which shows the</font><font color="#CCCCCC"> performance of TCP</font>

633
00:30:20,760 --> 00:30:26,070
Reno and<font color="#E5E5E5"> the blue curve shows the</font>

634
00:30:23,039 --> 00:30:29,399
<font color="#E5E5E5">performance of</font><font color="#CCCCCC"> page TCP</font><font color="#E5E5E5"> you can see that</font>

635
00:30:26,070 --> 00:30:32,189
TCP<font color="#CCCCCC"> Reno</font><font color="#E5E5E5"> remains and the buffer size is</font>

636
00:30:29,399 --> 00:30:34,860
<font color="#E5E5E5">10 packets only TCP Reno has just</font><font color="#CCCCCC"> 20</font>

637
00:30:32,190 --> 00:30:37,320
<font color="#E5E5E5">percent utilization but page TCP gains</font>

638
00:30:34,860 --> 00:30:40,320
70 percent<font color="#E5E5E5"> out of 80 percent</font><font color="#CCCCCC"> load</font>

639
00:30:37,320 --> 00:30:43,379
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> and no matter what the number</font>

640
00:30:40,320 --> 00:30:50,820
of flows<font color="#CCCCCC"> is and what the capacity is</font><font color="#E5E5E5"> the</font>

641
00:30:43,380 --> 00:30:52,760
<font color="#E5E5E5">throughput will remain fixed</font><font color="#CCCCCC"> okay so the</font>

642
00:30:50,820 --> 00:30:55,408
next<font color="#E5E5E5"> step</font><font color="#CCCCCC"> for this project</font><font color="#E5E5E5"> is doing</font>

643
00:30:52,760 --> 00:30:59,220
experiments on<font color="#E5E5E5"> real operational networks</font>

644
00:30:55,409 --> 00:31:02,190
<font color="#CCCCCC">ideally what we</font><font color="#E5E5E5"> want to have is by the</font>

645
00:30:59,220 --> 00:31:03,600
way this router is<font color="#E5E5E5"> a Juniper router I</font>

646
00:31:02,190 --> 00:31:05,700
didn't know that when I was<font color="#CCCCCC"> preparing</font>

647
00:31:03,600 --> 00:31:06,120
<font color="#CCCCCC">these slides it doesn't mean anything to</font>

648
00:31:05,700 --> 00:31:08,610
<font color="#CCCCCC">me</font>

649
00:31:06,120 --> 00:31:12,479
we<font color="#E5E5E5"> love Juniper</font><font color="#CCCCCC"> Cisco anybody who</font><font color="#E5E5E5"> helps</font>

650
00:31:08,610 --> 00:31:14,699
us do experiments<font color="#E5E5E5"> and the ideally what</font>

651
00:31:12,480 --> 00:31:17,610
we want<font color="#E5E5E5"> to do is to reduce the buffer</font>

652
00:31:14,700 --> 00:31:21,270
size on a core router which has high

653
00:31:17,610 --> 00:31:24,510
load and the of<font color="#E5E5E5"> course realistic or real</font>

654
00:31:21,270 --> 00:31:26,399
traffic<font color="#CCCCCC"> and we want to have</font><font color="#E5E5E5"> full</font><font color="#CCCCCC"> control</font>

655
00:31:24,510 --> 00:31:28,260
<font color="#E5E5E5">of the over the buffer sizes in this</font>

656
00:31:26,399 --> 00:31:30,178
router for some router that's very

657
00:31:28,260 --> 00:31:32,309
<font color="#E5E5E5">difficult to reduce reduce the buffer</font>

658
00:31:30,179 --> 00:31:36,149
sizes and the problem of hidden buffers

659
00:31:32,309 --> 00:31:37,678
is<font color="#E5E5E5"> it becomes very important when</font><font color="#CCCCCC"> you</font>

660
00:31:36,149 --> 00:31:41,100
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> reduce the buffer size to just</font>

661
00:31:37,679 --> 00:31:43,110
<font color="#CCCCCC">ten packets and ideally we</font><font color="#E5E5E5"> want to</font>

662
00:31:41,100 --> 00:31:45,870
collect traces<font color="#CCCCCC"> of packets coming</font><font color="#E5E5E5"> and</font>

663
00:31:43,110 --> 00:31:49,620
<font color="#E5E5E5">leaving the router so that</font><font color="#CCCCCC"> we can build</font>

664
00:31:45,870 --> 00:31:52,020
the the time<font color="#E5E5E5"> series of how long each</font>

665
00:31:49,620 --> 00:31:54,120
packet has stayed inside the<font color="#E5E5E5"> router</font><font color="#CCCCCC"> this</font>

666
00:31:52,020 --> 00:31:55,590
is a work<font color="#CCCCCC"> in progress</font><font color="#E5E5E5"> progress</font><font color="#CCCCCC"> right now</font>

667
00:31:54,120 --> 00:31:58,370
we are<font color="#E5E5E5"> working with Sprint Verizon</font>

668
00:31:55,590 --> 00:32:03,750
<font color="#E5E5E5">telcordia and</font><font color="#CCCCCC"> Lucent</font>

669
00:31:58,370 --> 00:32:07,139
<font color="#CCCCCC">to do experiments on</font><font color="#E5E5E5"> this and to</font>

670
00:32:03,750 --> 00:32:09,870
<font color="#CCCCCC">summarize what we have</font><font color="#E5E5E5"> done fear</font><font color="#CCCCCC"> under</font>

671
00:32:07,140 --> 00:32:12,420
<font color="#E5E5E5">theory theory side is that we have shown</font>

672
00:32:09,870 --> 00:32:14,159
if you reduce the<font color="#E5E5E5"> buffer size today by a</font>

673
00:32:12,420 --> 00:32:16,410
factor of<font color="#CCCCCC"> the square</font><font color="#E5E5E5"> root of</font><font color="#CCCCCC"> N where n</font>

674
00:32:14,160 --> 00:32:18,990
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the number of</font><font color="#CCCCCC"> longer lived</font><font color="#E5E5E5"> TCP flows</font>

675
00:32:16,410 --> 00:32:21,420
<font color="#E5E5E5">you will not see any change in the</font>

676
00:32:18,990 --> 00:32:23,610
performance<font color="#CCCCCC"> of the network</font><font color="#E5E5E5"> we have</font>

677
00:32:21,420 --> 00:32:29,220
<font color="#E5E5E5">showed that</font><font color="#CCCCCC"> you can further reduce</font><font color="#E5E5E5"> the</font>

678
00:32:23,610 --> 00:32:31,439
buffer size down to<font color="#E5E5E5"> 20 packets and of</font>

679
00:32:29,220 --> 00:32:34,100
course<font color="#CCCCCC"> under certain constraints the</font>

680
00:32:31,440 --> 00:32:37,860
network<font color="#E5E5E5"> should be over provisioned and</font>

681
00:32:34,100 --> 00:32:40,050
we should either have<font color="#E5E5E5"> page TCP or we</font>

682
00:32:37,860 --> 00:32:44,550
have flows which come through and slow

683
00:32:40,050 --> 00:32:48,450
access things<font color="#E5E5E5"> and again we can gain very</font>

684
00:32:44,550 --> 00:32:50,700
high<font color="#CCCCCC"> utilization in those cases</font><font color="#E5E5E5"> on the</font>

685
00:32:48,450 --> 00:32:52,950
experimental side<font color="#CCCCCC"> we have done thousands</font>

686
00:32:50,700 --> 00:32:55,200
of NS<font color="#CCCCCC"> to simulations we have done</font>

687
00:32:52,950 --> 00:32:56,970
<font color="#E5E5E5">experiments at Stanford dorm university</font>

688
00:32:55,200 --> 00:33:00,120
of wisconsin's where lab<font color="#E5E5E5"> internet</font><font color="#CCCCCC"> 2</font>

689
00:32:56,970 --> 00:33:03,030
level<font color="#E5E5E5"> 3 communications</font><font color="#CCCCCC"> and this is an</font>

690
00:33:00,120 --> 00:33:04,800
ongoing work<font color="#CCCCCC"> and i'm here to ask</font><font color="#E5E5E5"> for</font>

691
00:33:03,030 --> 00:33:07,470
<font color="#E5E5E5">your help to see if you can give me</font>

692
00:33:04,800 --> 00:33:09,270
<font color="#CCCCCC">feedback</font><font color="#E5E5E5"> or help us in any way to</font>

693
00:33:07,470 --> 00:33:13,290
perform more experiments on real

694
00:33:09,270 --> 00:33:15,120
networks thank you and if you have<font color="#CCCCCC"> any</font>

695
00:33:13,290 --> 00:33:16,560
questions or if you want<font color="#E5E5E5"> more</font>

696
00:33:15,120 --> 00:33:20,489
<font color="#CCCCCC">information about the papers that i</font>

697
00:33:16,560 --> 00:33:25,280
talked<font color="#CCCCCC"> about you can email me or you can</font>

698
00:33:20,490 --> 00:33:25,280
take a look<font color="#E5E5E5"> at the project website</font>

699
00:33:28,910 --> 00:33:37,610
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> now don't ask questions</font><font color="#E5E5E5"> yet one</font>

700
00:33:36,140 --> 00:33:39,680
quick couple<font color="#CCCCCC"> quick questions for you</font><font color="#E5E5E5"> on</font>

701
00:33:37,610 --> 00:33:43,250
slide 13 where you showed packet loss

702
00:33:39,680 --> 00:33:45,380
with your tiny buffers<font color="#E5E5E5"> I'm curious did</font>

703
00:33:43,250 --> 00:33:49,310
that correspond<font color="#E5E5E5"> into events</font><font color="#CCCCCC"> network</font>

704
00:33:45,380 --> 00:33:53,150
events in the network ie<font color="#E5E5E5"> did it break by</font>

705
00:33:49,310 --> 00:33:54,830
then does the loss the outliers in<font color="#CCCCCC"> the</font>

706
00:33:53,150 --> 00:33:58,250
graph that<font color="#CCCCCC"> are correspond to breaks on</font>

707
00:33:54,830 --> 00:34:00,980
the network<font color="#E5E5E5"> or they just unknowns and as</font>

708
00:33:58,250 --> 00:34:02,720
far<font color="#E5E5E5"> as I know</font><font color="#CCCCCC"> net worth did not break</font>

709
00:34:00,980 --> 00:34:06,650
<font color="#E5E5E5">okay you're good</font><font color="#CCCCCC"> any time during</font><font color="#E5E5E5"> the</font>

710
00:34:02,720 --> 00:34:08,449
<font color="#E5E5E5">experiment</font><font color="#CCCCCC"> so the next question</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> so</font>

711
00:34:06,650 --> 00:34:09,800
have you modeled this so it sounds like

712
00:34:08,449 --> 00:34:11,299
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is all model in a steady state</font>

713
00:34:09,800 --> 00:34:13,659
system have you modeled this in a

714
00:34:11,300 --> 00:34:16,090
network or<font color="#CCCCCC"> system where it breaks and</font>

715
00:34:13,659 --> 00:34:20,570
determined if you get the same behavior

716
00:34:16,090 --> 00:34:24,919
it's<font color="#E5E5E5"> just enough great</font><font color="#CCCCCC"> guys</font><font color="#E5E5E5"> what do you</font>

717
00:34:20,570 --> 00:34:26,840
mean by great<font color="#E5E5E5"> like when 14 192 s go away</font>

718
00:34:24,918 --> 00:34:28,279
at a given point<font color="#E5E5E5"> oh okay no no we</font>

719
00:34:26,840 --> 00:34:30,050
haven't<font color="#E5E5E5"> looked at failure is in the</font>

720
00:34:28,280 --> 00:34:31,820
system<font color="#CCCCCC"> at</font><font color="#E5E5E5"> all no</font><font color="#CCCCCC"> we haven't</font><font color="#E5E5E5"> constituency</font>

721
00:34:30,050 --> 00:34:34,129
because that's where we like buffers in

722
00:34:31,820 --> 00:34:36,440
routers<font color="#E5E5E5"> you see that's a good time to</font>

723
00:34:34,129 --> 00:34:38,690
<font color="#CCCCCC">have buffers</font><font color="#E5E5E5"> yes yes I mean the</font>

724
00:34:36,440 --> 00:34:41,149
motivation for this<font color="#CCCCCC"> work was as I told</font>

725
00:34:38,690 --> 00:34:45,409
you before<font color="#E5E5E5"> the the on optical project</font>

726
00:34:41,149 --> 00:34:49,668
and the question wasn't<font color="#E5E5E5"> just what</font><font color="#CCCCCC"> I mean</font>

727
00:34:45,409 --> 00:34:50,960
<font color="#CCCCCC">it's it it's a totally unexplored area</font>

728
00:34:49,668 --> 00:34:53,060
<font color="#E5E5E5">okay the question was if you reduce the</font>

729
00:34:50,960 --> 00:34:56,899
<font color="#E5E5E5">buffer size to 20 packets can we have</font>

730
00:34:53,060 --> 00:34:59,630
high utilization<font color="#CCCCCC"> that's all we have done</font>

731
00:34:56,899 --> 00:35:05,930
<font color="#E5E5E5">so you</font><font color="#CCCCCC"> can run it at 98% and it'll work</font>

732
00:34:59,630 --> 00:35:07,370
<font color="#E5E5E5">but when it breaks yes no you're not</font>

733
00:35:05,930 --> 00:35:08,210
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> buffer the entire length</font><font color="#CCCCCC"> I know</font>

734
00:35:07,370 --> 00:35:10,250
what you're saying

735
00:35:08,210 --> 00:35:12,140
yes yes that's that's that's a

736
00:35:10,250 --> 00:35:13,700
legitimate<font color="#E5E5E5"> concern and we haven't</font>

737
00:35:12,140 --> 00:35:14,870
studied<font color="#E5E5E5"> that no okay well one</font><font color="#CCCCCC"> other good</font>

738
00:35:13,700 --> 00:35:17,060
one of the question because<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was a</font>

739
00:35:14,870 --> 00:35:18,650
nice segue about the optical<font color="#E5E5E5"> part so we</font>

740
00:35:17,060 --> 00:35:20,600
all love<font color="#E5E5E5"> this panacea of the optical</font>

741
00:35:18,650 --> 00:35:22,550
networking the optical switch but I

742
00:35:20,600 --> 00:35:25,460
still<font color="#E5E5E5"> haven't seen the</font><font color="#CCCCCC"> secret sauce that</font>

743
00:35:22,550 --> 00:35:28,520
says this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> how we switch ingress flows</font>

744
00:35:25,460 --> 00:35:30,710
across an optical backplane multiple

745
00:35:28,520 --> 00:35:32,560
<font color="#E5E5E5">egress is how does that work</font><font color="#CCCCCC"> still</font>

746
00:35:30,710 --> 00:35:35,780
<font color="#CCCCCC">waiting to see</font><font color="#E5E5E5"> that one</font>

747
00:35:32,560 --> 00:35:39,020
so maybe we should<font color="#CCCCCC"> ask optical community</font>

748
00:35:35,780 --> 00:35:41,060
<font color="#E5E5E5">right</font><font color="#CCCCCC"> okay this the</font><font color="#E5E5E5"> project that we are</font>

749
00:35:39,020 --> 00:35:44,420
<font color="#CCCCCC">working</font><font color="#E5E5E5"> on is a huge project</font><font color="#CCCCCC"> part</font><font color="#E5E5E5"> of it</font>

750
00:35:41,060 --> 00:35:46,160
<font color="#E5E5E5">is done in UCSB basically the optics</font>

751
00:35:44,420 --> 00:35:49,660
group over<font color="#E5E5E5"> there they have built these</font>

752
00:35:46,160 --> 00:35:54,020
devices<font color="#E5E5E5"> very nice</font><font color="#CCCCCC"> resolve stage have</font>

753
00:35:49,660 --> 00:35:56,120
optical memories and they have this full

754
00:35:54,020 --> 00:35:59,240
wavelength<font color="#E5E5E5"> conversion devices which</font>

755
00:35:56,120 --> 00:36:01,509
basically with<font color="#E5E5E5"> that the reason we have</font>

756
00:35:59,240 --> 00:36:03,740
been<font color="#E5E5E5"> able to work on this project was</font>

757
00:36:01,510 --> 00:36:06,170
assuming<font color="#CCCCCC"> that we have full</font><font color="#E5E5E5"> wavelength</font>

758
00:36:03,740 --> 00:36:10,459
conversion<font color="#E5E5E5"> what stirs</font><font color="#CCCCCC"> our optical</font><font color="#E5E5E5"> memory</font>

759
00:36:06,170 --> 00:36:12,950
buffer in optical memory basically<font color="#E5E5E5"> you</font>

760
00:36:10,460 --> 00:36:16,040
keep rotating packets and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can't do</font>

761
00:36:12,950 --> 00:36:17,930
<font color="#E5E5E5">it for a long</font><font color="#CCCCCC"> time they have delay lines</font>

762
00:36:16,040 --> 00:36:21,920
<font color="#E5E5E5">keep the packets rotating in a delay</font>

763
00:36:17,930 --> 00:36:23,660
line for a while so in a in a buffer<font color="#CCCCCC"> you</font>

764
00:36:21,920 --> 00:36:27,590
have the packet there and you can keep

765
00:36:23,660 --> 00:36:29,480
<font color="#E5E5E5">it there for forever</font><font color="#CCCCCC"> but in an not</font>

766
00:36:27,590 --> 00:36:31,760
forever book for time<font color="#CCCCCC"> for a very long</font>

767
00:36:29,480 --> 00:36:34,370
<font color="#E5E5E5">time we can</font><font color="#CCCCCC"> keep it</font><font color="#E5E5E5"> in a buffering and</font>

768
00:36:31,760 --> 00:36:35,990
electronic router in an electronic

769
00:36:34,370 --> 00:36:37,279
buffer there is no limitations on<font color="#E5E5E5"> how</font>

770
00:36:35,990 --> 00:36:40,850
long you<font color="#CCCCCC"> can keep</font><font color="#E5E5E5"> the packet in the</font>

771
00:36:37,280 --> 00:36:43,640
<font color="#E5E5E5">buffer not in the sense of I mean from</font>

772
00:36:40,850 --> 00:36:46,310
<font color="#E5E5E5">the</font><font color="#CCCCCC"> network's point of view but in</font>

773
00:36:43,640 --> 00:36:48,370
optics<font color="#CCCCCC"> if you insert the packet in a</font>

774
00:36:46,310 --> 00:36:50,990
delay line you have<font color="#CCCCCC"> to send</font><font color="#E5E5E5"> it out</font>

775
00:36:48,370 --> 00:36:52,460
trying<font color="#CCCCCC"> to knock the work</font><font color="#E5E5E5"> because I would</font>

776
00:36:50,990 --> 00:36:53,479
love to see less memory and<font color="#E5E5E5"> routers</font>

777
00:36:52,460 --> 00:36:56,510
because<font color="#E5E5E5"> that corresponds to</font>

778
00:36:53,480 --> 00:36:58,010
substantially less cost but I still

779
00:36:56,510 --> 00:37:00,950
don't<font color="#E5E5E5"> I'm not convinced to the optical</font>

780
00:36:58,010 --> 00:37:02,110
router approach yet I just<font color="#E5E5E5"> haven't seen</font>

781
00:37:00,950 --> 00:37:05,500
it<font color="#CCCCCC"> actually work</font>

782
00:37:02,110 --> 00:37:07,120
so what I<font color="#CCCCCC"> ask</font><font color="#E5E5E5"> we don't claim that you</font>

783
00:37:05,500 --> 00:37:09,730
can<font color="#CCCCCC"> see it</font><font color="#E5E5E5"> right now</font><font color="#CCCCCC"> we are trying</font><font color="#E5E5E5"> to</font>

784
00:37:07,120 --> 00:37:12,759
reach there in<font color="#CCCCCC"> 5-10 years</font><font color="#E5E5E5"> all right</font>

785
00:37:09,730 --> 00:37:14,350
<font color="#E5E5E5">okay if I had the optical router right</font>

786
00:37:12,760 --> 00:37:18,040
here I didn't need to<font color="#E5E5E5"> ask for your help</font>

787
00:37:14,350 --> 00:37:25,080
to<font color="#E5E5E5"> convince</font><font color="#CCCCCC"> mothers to reduce the buffer</font>

788
00:37:18,040 --> 00:37:27,730
size two quick questions

789
00:37:25,080 --> 00:37:30,279
firstly when you<font color="#E5E5E5"> said</font><font color="#CCCCCC"> that pacing the</font>

790
00:37:27,730 --> 00:37:31,860
<font color="#CCCCCC">TCP wasn't difficult</font><font color="#E5E5E5"> from software my</font>

791
00:37:30,280 --> 00:37:34,030
back of the envelope says that that's

792
00:37:31,860 --> 00:37:37,660
13,000 drops a second

793
00:37:34,030 --> 00:37:39,700
<font color="#E5E5E5">with jumbo frames</font><font color="#CCCCCC"> and when we increase</font>

794
00:37:37,660 --> 00:37:42,370
<font color="#CCCCCC">the linux clock to a thousand times a</font>

795
00:37:39,700 --> 00:37:44,350
second we had to reduce<font color="#CCCCCC"> it to her to 500</font>

796
00:37:42,370 --> 00:37:46,990
interrupts<font color="#E5E5E5"> a second so I think you need</font>

797
00:37:44,350 --> 00:37:49,690
<font color="#CCCCCC">to talk to the interrupt</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> ethernet</font>

798
00:37:46,990 --> 00:37:54,450
card vendors about<font color="#E5E5E5"> offloading that into</font>

799
00:37:49,690 --> 00:37:54,450
the<font color="#E5E5E5"> hardware and</font><font color="#CCCCCC"> my second</font><font color="#E5E5E5"> question is</font>

800
00:37:54,600 --> 00:38:00,970
Sally<font color="#E5E5E5"> Floyd's work on synchronized</font>

801
00:37:57,550 --> 00:38:03,010
<font color="#CCCCCC">fliers</font><font color="#E5E5E5"> on one side and you saying</font><font color="#CCCCCC"> Flo's</font>

802
00:38:00,970 --> 00:38:06,250
must be independent<font color="#CCCCCC"> for this to</font><font color="#E5E5E5"> work</font>

803
00:38:03,010 --> 00:38:09,310
seemed<font color="#E5E5E5"> a conflicted to an extent and my</font>

804
00:38:06,250 --> 00:38:13,600
question I suppose is<font color="#E5E5E5"> is read sufficient</font>

805
00:38:09,310 --> 00:38:16,060
<font color="#E5E5E5">Lee does read make the</font><font color="#CCCCCC"> randomize the the</font>

806
00:38:13,600 --> 00:38:18,370
packet arrival time sufficiently for

807
00:38:16,060 --> 00:38:22,600
<font color="#E5E5E5">your assumption of Independence to be</font>

808
00:38:18,370 --> 00:38:22,930
sustained but the first comment yes I

809
00:38:22,600 --> 00:38:25,930
agree

810
00:38:22,930 --> 00:38:27,850
implementing<font color="#CCCCCC"> paste TCP</font><font color="#E5E5E5"> with today's</font>

811
00:38:25,930 --> 00:38:31,120
<font color="#CCCCCC">linux and line</font><font color="#E5E5E5"> cards is very difficult</font>

812
00:38:27,850 --> 00:38:33,279
<font color="#E5E5E5">in fact we have encountered the same</font>

813
00:38:31,120 --> 00:38:36,670
problem<font color="#E5E5E5"> that</font><font color="#CCCCCC"> there isn't</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> Visconti</font>

814
00:38:33,280 --> 00:38:39,550
<font color="#E5E5E5">lab a experiment the reason we didn't go</font>

815
00:38:36,670 --> 00:38:42,460
beyond<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> flows per PC was exactly the</font>

816
00:38:39,550 --> 00:38:44,650
timer issues if you go beyond that<font color="#CCCCCC"> you</font>

817
00:38:42,460 --> 00:38:46,840
<font color="#CCCCCC">dip</font><font color="#E5E5E5"> obviously can generate more and more</font>

818
00:38:44,650 --> 00:38:50,020
flows<font color="#CCCCCC"> what the flows will become bursty</font>

819
00:38:46,840 --> 00:38:52,240
<font color="#E5E5E5">because of the TCP is sorry Linux</font>

820
00:38:50,020 --> 00:38:53,920
<font color="#CCCCCC">timer's about the second comment we</font>

821
00:38:52,240 --> 00:38:54,490
believe today<font color="#E5E5E5"> in the core of the</font>

822
00:38:53,920 --> 00:38:56,260
<font color="#E5E5E5">Internet</font>

823
00:38:54,490 --> 00:38:59,669
you don't have<font color="#E5E5E5"> a lot of synchronization</font>

824
00:38:56,260 --> 00:38:59,670
<font color="#CCCCCC">and the reason</font>

825
00:39:00,430 --> 00:39:05,810
the reason when you<font color="#E5E5E5"> reduce the buffer</font>

826
00:39:02,600 --> 00:39:09,049
size to<font color="#E5E5E5"> one millisecond</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> at least</font>

827
00:39:05,810 --> 00:39:10,040
<font color="#E5E5E5">this can be an evidence for that</font><font color="#CCCCCC"> if you</font>

828
00:39:09,050 --> 00:39:11,600
reduce<font color="#CCCCCC"> the buffer size to</font><font color="#E5E5E5"> one</font>

829
00:39:10,040 --> 00:39:14,060
millisecond and don't see a lot of

830
00:39:11,600 --> 00:39:16,100
packet drops it can show that you<font color="#E5E5E5"> don't</font>

831
00:39:14,060 --> 00:39:19,820
<font color="#E5E5E5">have lots of synchronization</font><font color="#CCCCCC"> in the core</font>

832
00:39:16,100 --> 00:39:21,380
of<font color="#E5E5E5"> the Internet if you had lots of</font>

833
00:39:19,820 --> 00:39:24,590
synchronization<font color="#CCCCCC"> you should have seen</font>

834
00:39:21,380 --> 00:39:29,180
much more<font color="#E5E5E5"> packet drops and about</font><font color="#CCCCCC"> read</font><font color="#E5E5E5"> I</font>

835
00:39:24,590 --> 00:39:31,940
I was<font color="#E5E5E5"> we have done some</font><font color="#CCCCCC"> work on using</font>

836
00:39:29,180 --> 00:39:35,299
<font color="#CCCCCC">read to reduce synchronization for the</font>

837
00:39:31,940 --> 00:39:38,240
<font color="#E5E5E5">20 packet buffer size case and amazingly</font>

838
00:39:35,300 --> 00:39:41,060
I find out found out<font color="#E5E5E5"> that when we</font><font color="#CCCCCC"> are</font>

839
00:39:38,240 --> 00:39:43,910
using<font color="#CCCCCC"> read</font><font color="#E5E5E5"> we will see more</font>

840
00:39:41,060 --> 00:39:49,400
synchronization in the cases<font color="#CCCCCC"> that we</font>

841
00:39:43,910 --> 00:39:52,750
were interested in and the reason<font color="#CCCCCC"> let me</font>

842
00:39:49,400 --> 00:39:56,390
put it this<font color="#CCCCCC"> way the TCP Reno</font><font color="#E5E5E5"> is very</font>

843
00:39:52,750 --> 00:39:58,310
unfair<font color="#CCCCCC"> in short term</font><font color="#E5E5E5"> so basically you</font>

844
00:39:56,390 --> 00:40:02,480
drop lots of packets<font color="#CCCCCC"> from a single flow</font>

845
00:39:58,310 --> 00:40:04,430
<font color="#E5E5E5">even though that flow is sacrificed your</font>

846
00:40:02,480 --> 00:40:07,220
overall throughput doesn't go much down

847
00:40:04,430 --> 00:40:09,560
that much but if<font color="#E5E5E5"> you want to make the</font>

848
00:40:07,220 --> 00:40:10,939
system<font color="#CCCCCC"> more fair in</font><font color="#E5E5E5"> short term what you</font>

849
00:40:09,560 --> 00:40:13,790
have to do is drop packets<font color="#E5E5E5"> from</font>

850
00:40:10,940 --> 00:40:17,810
different flows and that translates to

851
00:40:13,790 --> 00:40:20,240
<font color="#E5E5E5">lower</font><font color="#CCCCCC"> utilization and what read does in</font>

852
00:40:17,810 --> 00:40:22,900
very very small buffers case is very

853
00:40:20,240 --> 00:40:25,189
<font color="#CCCCCC">similar to making systems more fair</font>

854
00:40:22,900 --> 00:40:27,380
<font color="#E5E5E5">basically you're dropping packets from</font>

855
00:40:25,190 --> 00:40:30,760
more and<font color="#E5E5E5"> more flows rather than</font>

856
00:40:27,380 --> 00:40:33,520
sacrificing a few flows

857
00:40:30,760 --> 00:40:36,100
in that case read it<font color="#E5E5E5"> really doesn't help</font>

858
00:40:33,520 --> 00:40:37,660
that<font color="#E5E5E5"> much okay so we have one</font><font color="#CCCCCC"> last</font>

859
00:40:36,100 --> 00:40:40,500
<font color="#E5E5E5">question and then for closing remarks</font>

860
00:40:37,660 --> 00:40:43,210
<font color="#E5E5E5">and then we can all go drink or whatever</font>

861
00:40:40,500 --> 00:40:44,950
were you<font color="#E5E5E5"> using the harpoon simulation</font>

862
00:40:43,210 --> 00:40:47,590
system at<font color="#E5E5E5"> whale pardon me</font>

863
00:40:44,950 --> 00:40:51,279
were you using the harpoon<font color="#E5E5E5"> simulation</font>

864
00:40:47,590 --> 00:40:55,390
system<font color="#E5E5E5"> no no in Wisconsin</font><font color="#CCCCCC"> lab I believe</font>

865
00:40:51,280 --> 00:40:59,050
it was used<font color="#E5E5E5"> but it had some problems</font>

866
00:40:55,390 --> 00:41:01,080
<font color="#CCCCCC">with bursty traffic generation but</font>

867
00:40:59,050 --> 00:41:02,770
that's kind of a<font color="#CCCCCC"> tenet</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> Hassan</font>

868
00:41:01,080 --> 00:41:05,020
self-similarity is<font color="#E5E5E5"> that</font>

869
00:41:02,770 --> 00:41:07,210
pardon me<font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> that one of the</font><font color="#E5E5E5"> tenants</font>

870
00:41:05,020 --> 00:41:09,690
of small time scale self-similarity

871
00:41:07,210 --> 00:41:14,230
<font color="#E5E5E5">where she would want to try to simulate</font>

872
00:41:09,690 --> 00:41:16,120
harpoon I will talk offline even<font color="#E5E5E5"> odds or</font>

873
00:41:14,230 --> 00:41:18,070
<font color="#CCCCCC">Jasmine is that way I used</font><font color="#E5E5E5"> to work with</font>

874
00:41:16,120 --> 00:41:19,900
<font color="#E5E5E5">him I I was just curious if you were</font>

875
00:41:18,070 --> 00:41:22,680
using harpoon since it does precisely

876
00:41:19,900 --> 00:41:24,970
what you were where you're going that

877
00:41:22,680 --> 00:41:27,069
<font color="#CCCCCC">was one of the experiments we</font><font color="#E5E5E5"> did but</font>

878
00:41:24,970 --> 00:41:32,500
<font color="#CCCCCC">for the</font><font color="#E5E5E5"> rest of the experiments</font><font color="#CCCCCC"> we try</font>

879
00:41:27,070 --> 00:41:34,780
to I mean generate to use realistic

880
00:41:32,500 --> 00:41:36,730
traffic basically<font color="#E5E5E5"> not artificially</font>

881
00:41:34,780 --> 00:41:40,350
generated traffic<font color="#CCCCCC"> gotcha</font>

882
00:41:36,730 --> 00:41:40,350
thank you thank<font color="#CCCCCC"> you</font><font color="#E5E5E5"> all right</font><font color="#CCCCCC"> thank you</font>

