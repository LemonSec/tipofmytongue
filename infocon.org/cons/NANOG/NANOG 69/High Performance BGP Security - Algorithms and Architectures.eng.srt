1
00:00:08,830 --> 00:00:15,299
good afternoon I'm Sriram from NIST<font color="#E5E5E5"> and</font>

2
00:00:12,900 --> 00:00:18,580
this this will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> a joint presentation</font>

3
00:00:15,299 --> 00:00:21,119
with with<font color="#CCCCCC"> mammoth we've been working</font>

4
00:00:18,580 --> 00:00:24,310
<font color="#CCCCCC">with</font><font color="#E5E5E5"> him closely last couple of years</font>

5
00:00:21,119 --> 00:00:27,489
<font color="#E5E5E5">it's also joint work</font><font color="#CCCCCC"> with my colleagues</font>

6
00:00:24,310 --> 00:00:31,180
<font color="#CCCCCC">from NIST</font><font color="#E5E5E5"> Doug Montgomery and Oliver</font>

7
00:00:27,489 --> 00:00:34,210
<font color="#CCCCCC">Borchardt are here I would also like to</font>

8
00:00:31,180 --> 00:00:36,730
acknowledge Randy<font color="#E5E5E5"> Bush he has had some</font>

9
00:00:34,210 --> 00:00:38,739
inputs in the past on some of the

10
00:00:36,730 --> 00:00:43,410
convergence<font color="#E5E5E5"> modeling work that you will</font>

11
00:00:38,739 --> 00:00:47,730
see<font color="#CCCCCC"> later in this talk the talk is about</font>

12
00:00:43,410 --> 00:00:50,500
<font color="#CCCCCC">BGP SEC performance particularly about</font>

13
00:00:47,730 --> 00:00:54,629
optimization algorithms and efficient

14
00:00:50,500 --> 00:01:00,609
<font color="#E5E5E5">software architecture that lead to</font>

15
00:00:54,629 --> 00:01:02,949
<font color="#CCCCCC">high-performance BGP SEC I will be</font>

16
00:01:00,609 --> 00:01:05,760
dividing up we will<font color="#E5E5E5"> be sharing the talk</font>

17
00:01:02,949 --> 00:01:08,759
as I said and it will be in three parts

18
00:01:05,760 --> 00:01:12,130
<font color="#CCCCCC">initially as I spent some time</font>

19
00:01:08,760 --> 00:01:14,980
<font color="#E5E5E5">introducing BGP SEC followed by that</font>

20
00:01:12,130 --> 00:01:17,759
mammoth will talk about the optimization

21
00:01:14,980 --> 00:01:21,640
<font color="#E5E5E5">algorithms</font><font color="#CCCCCC"> and the software architecture</font>

22
00:01:17,760 --> 00:01:25,150
<font color="#E5E5E5">and followed by</font><font color="#CCCCCC"> that I'll come back</font><font color="#E5E5E5"> and</font>

23
00:01:21,640 --> 00:01:28,210
talk<font color="#E5E5E5"> about convergence time so we have</font>

24
00:01:25,150 --> 00:01:29,530
known<font color="#CCCCCC"> about</font><font color="#E5E5E5"> BGP vulnerabilities for a</font>

25
00:01:28,210 --> 00:01:33,250
long time

26
00:01:29,530 --> 00:01:35,190
prefix hijacks prefix squatting<font color="#CCCCCC"> s path</font>

27
00:01:33,250 --> 00:01:39,130
modification man-in-the-middle attacks

28
00:01:35,190 --> 00:01:42,880
<font color="#E5E5E5">kappa loop</font><font color="#CCCCCC"> soft type of attacks and</font>

29
00:01:39,130 --> 00:01:47,380
forged<font color="#CCCCCC"> maybe forged origin</font><font color="#E5E5E5"> attacks as</font>

30
00:01:42,880 --> 00:01:51,100
well<font color="#CCCCCC"> and route leaks so ITF</font><font color="#E5E5E5"> there's been</font>

31
00:01:47,380 --> 00:01:54,600
very active work in the ITF for the past

32
00:01:51,100 --> 00:01:58,559
several years<font color="#E5E5E5"> to address these issues</font>

33
00:01:54,600 --> 00:02:02,470
<font color="#CCCCCC">this slide says objectives of the</font>

34
00:01:58,560 --> 00:02:04,840
<font color="#CCCCCC">cybersecurity solution in fact I will be</font>

35
00:02:02,470 --> 00:02:06,490
using<font color="#E5E5E5"> this slide to talk about the</font>

36
00:02:04,840 --> 00:02:11,170
significant things<font color="#CCCCCC"> that have already</font>

37
00:02:06,490 --> 00:02:14,470
been<font color="#E5E5E5"> accomplished insider to start</font><font color="#CCCCCC"> the</font>

38
00:02:11,170 --> 00:02:16,750
origin validation work has<font color="#E5E5E5"> already</font>

39
00:02:14,470 --> 00:02:20,739
resulted in multiple

40
00:02:16,750 --> 00:02:24,260
<font color="#CCCCCC">RFC's</font><font color="#E5E5E5"> in particular RFC</font><font color="#CCCCCC"> 60-80 levin</font>

41
00:02:20,739 --> 00:02:27,099
provides the<font color="#CCCCCC"> the basic validation</font>

42
00:02:24,260 --> 00:02:31,700
algorithm for origin validation and

43
00:02:27,099 --> 00:02:35,030
together with<font color="#E5E5E5"> that RFC</font><font color="#CCCCCC"> 70 115 provides</font>

44
00:02:31,700 --> 00:02:38,390
best common practices for origin

45
00:02:35,030 --> 00:02:41,360
validations<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then we have the</font><font color="#E5E5E5"> BGP set</font>

46
00:02:38,390 --> 00:02:43,879
<font color="#E5E5E5">a draft which has recently been approved</font>

47
00:02:41,360 --> 00:02:47,269
<font color="#E5E5E5">by the IETF to become a proposed</font>

48
00:02:43,879 --> 00:02:49,548
standard<font color="#CCCCCC"> so you will hopefully see the</font>

49
00:02:47,269 --> 00:02:56,030
RFC come out in the<font color="#E5E5E5"> next two</font><font color="#CCCCCC"> or three</font>

50
00:02:49,549 --> 00:02:59,060
<font color="#E5E5E5">months</font><font color="#CCCCCC"> there is work in</font><font color="#E5E5E5"> I in</font><font color="#CCCCCC"> the cider</font>

51
00:02:56,030 --> 00:03:01,420
working group<font color="#E5E5E5"> also related to protection</font>

52
00:02:59,060 --> 00:03:04,609
<font color="#E5E5E5">from</font><font color="#CCCCCC"> withdrawal</font><font color="#E5E5E5"> suppression and</font>

53
00:03:01,420 --> 00:03:06,409
malicious replay attacks and in the

54
00:03:04,609 --> 00:03:10,609
references<font color="#E5E5E5"> we have included a draft</font>

55
00:03:06,409 --> 00:03:13,849
<font color="#E5E5E5">which which talks about the solution for</font>

56
00:03:10,609 --> 00:03:17,840
the replay attacks the BGP<font color="#CCCCCC"> check</font>

57
00:03:13,849 --> 00:03:21,018
<font color="#CCCCCC">protocol also</font><font color="#E5E5E5"> accommodates special cases</font>

58
00:03:17,840 --> 00:03:24,880
<font color="#E5E5E5">those include transparent</font><font color="#CCCCCC"> route servers</font>

59
00:03:21,019 --> 00:03:28,040
for example<font color="#E5E5E5"> at internet exchange points</font>

60
00:03:24,880 --> 00:03:30,489
<font color="#CCCCCC">and</font><font color="#E5E5E5"> also when you have a Confederation</font>

61
00:03:28,040 --> 00:03:35,150
the<font color="#E5E5E5"> Confederation must be visible</font>

62
00:03:30,489 --> 00:03:37,459
outside<font color="#E5E5E5"> as a single public</font><font color="#CCCCCC"> areas</font>

63
00:03:35,150 --> 00:03:42,169
external<font color="#E5E5E5"> to the Confederation it should</font>

64
00:03:37,459 --> 00:03:45,109
be<font color="#CCCCCC"> visible as a single public areas so</font>

65
00:03:42,169 --> 00:03:47,510
those things are accommodated in the<font color="#E5E5E5"> BGP</font>

66
00:03:45,109 --> 00:03:49,699
<font color="#CCCCCC">sec specification as well as multiple</font>

67
00:03:47,510 --> 00:03:55,399
other things once you look into the

68
00:03:49,699 --> 00:03:58,519
draft<font color="#E5E5E5"> you will see route leaks detection</font>

69
00:03:55,400 --> 00:04:01,430
mitigation<font color="#E5E5E5"> work has been in progress in</font>

70
00:03:58,519 --> 00:04:03,530
<font color="#E5E5E5">the</font><font color="#CCCCCC"> site ID our working</font><font color="#E5E5E5"> group and there</font>

71
00:04:01,430 --> 00:04:07,549
are a<font color="#E5E5E5"> couple of drafts there that are</font>

72
00:04:03,530 --> 00:04:09,889
under consideration<font color="#CCCCCC"> the key elements of</font>

73
00:04:07,549 --> 00:04:13,639
the solution<font color="#CCCCCC"> that has</font><font color="#E5E5E5"> been developed for</font>

74
00:04:09,889 --> 00:04:17,209
origin validation and<font color="#E5E5E5"> BGP SEC pass</font>

75
00:04:13,639 --> 00:04:20,209
validation<font color="#CCCCCC"> I will try to briefly talk</font>

76
00:04:17,209 --> 00:04:22,190
about<font color="#CCCCCC"> that here there is hierarchical</font>

77
00:04:20,209 --> 00:04:26,240
certificate chain for resource

78
00:04:22,190 --> 00:04:30,010
allocations<font color="#E5E5E5"> for the IP address prefixes</font>

79
00:04:26,240 --> 00:04:33,490
<font color="#E5E5E5">and also for autonomous systems so once</font>

80
00:04:30,010 --> 00:04:37,200
and an IP prefix hole that has the

81
00:04:33,490 --> 00:04:39,970
certificate<font color="#CCCCCC"> they can use the rpki</font>

82
00:04:37,200 --> 00:04:43,150
repository<font color="#E5E5E5"> and they can place a route</font>

83
00:04:39,970 --> 00:04:46,860
origin<font color="#E5E5E5"> authorization</font><font color="#CCCCCC"> rower</font>

84
00:04:43,150 --> 00:04:50,500
<font color="#E5E5E5">in the rpki repository the rower</font>

85
00:04:46,860 --> 00:04:53,500
authorizes<font color="#CCCCCC"> aeneas to propagate</font><font color="#E5E5E5"> one or</font>

86
00:04:50,500 --> 00:04:55,990
multiple prefixes so with the help<font color="#E5E5E5"> of</font>

87
00:04:53,500 --> 00:05:00,340
the with the<font color="#E5E5E5"> robot origin validation can</font>

88
00:04:55,990 --> 00:05:03,490
be done in the routers<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I will talk</font>

89
00:05:00,340 --> 00:05:05,830
<font color="#CCCCCC">about the next</font><font color="#E5E5E5"> three bullets perhaps</font>

90
00:05:03,490 --> 00:05:10,840
with the<font color="#CCCCCC"> help of this diagram in the</font>

91
00:05:05,830 --> 00:05:13,320
next<font color="#E5E5E5"> slide</font><font color="#CCCCCC"> so this shows us</font><font color="#E5E5E5"> the the</font>

92
00:05:10,840 --> 00:05:17,020
basic principles of BGP set path signing

93
00:05:13,320 --> 00:05:21,010
as the update propagates<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the left</font>

94
00:05:17,020 --> 00:05:24,039
to the<font color="#CCCCCC"> right through</font><font color="#E5E5E5"> multiple a SS each</font>

95
00:05:21,010 --> 00:05:28,870
<font color="#E5E5E5">a s assigns the update to the subsequent</font>

96
00:05:24,040 --> 00:05:32,440
<font color="#CCCCCC">a s and the signature covers the prefix</font>

97
00:05:28,870 --> 00:05:34,720
and<font color="#E5E5E5"> the a s path as well as any previous</font>

98
00:05:32,440 --> 00:05:39,250
signatures in<font color="#E5E5E5"> the update if there are</font>

99
00:05:34,720 --> 00:05:42,340
any so by the time this update makes<font color="#E5E5E5"> it</font>

100
00:05:39,250 --> 00:05:47,050
makes<font color="#CCCCCC"> its way to the two as5 at the</font>

101
00:05:42,340 --> 00:05:49,359
right-hand<font color="#CCCCCC"> end</font><font color="#E5E5E5"> s5 has four signatures to</font>

102
00:05:47,050 --> 00:05:52,150
verify<font color="#E5E5E5"> in our in order to</font><font color="#CCCCCC"> validate the</font>

103
00:05:49,360 --> 00:05:54,100
path and it also<font color="#CCCCCC"> looked</font><font color="#E5E5E5"> at it can also</font>

104
00:05:52,150 --> 00:05:56,109
look up<font color="#E5E5E5"> the</font><font color="#CCCCCC"> rower information to</font>

105
00:05:54,100 --> 00:05:59,500
<font color="#CCCCCC">validate the origin so it can do both</font>

106
00:05:56,110 --> 00:06:02,080
origin validation and<font color="#CCCCCC"> path validation</font>

107
00:05:59,500 --> 00:06:04,240
these this is like I<font color="#E5E5E5"> said the signatures</font>

108
00:06:02,080 --> 00:06:05,950
covered the prefix<font color="#E5E5E5"> and the a s path so</font>

109
00:06:04,240 --> 00:06:09,700
the air path is protected the

110
00:06:05,950 --> 00:06:15,070
origination is protected the signature

111
00:06:09,700 --> 00:06:16,719
<font color="#E5E5E5">is also addressed to the</font><font color="#CCCCCC"> pier so if the</font>

112
00:06:15,070 --> 00:06:19,150
signature<font color="#E5E5E5"> includes</font>

113
00:06:16,720 --> 00:06:22,060
in the data<font color="#CCCCCC"> that is hashed and signed</font>

114
00:06:19,150 --> 00:06:25,450
<font color="#CCCCCC">over</font><font color="#E5E5E5"> it includes the target</font><font color="#CCCCCC"> areas or the</font>

115
00:06:22,060 --> 00:06:29,500
next hop a s however<font color="#CCCCCC"> the next</font><font color="#E5E5E5"> hop a s is</font>

116
00:06:25,450 --> 00:06:32,680
not carried in the<font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> second update</font><font color="#E5E5E5"> so</font>

117
00:06:29,500 --> 00:06:38,680
as so once you have this path validation

118
00:06:32,680 --> 00:06:41,740
in place essentially<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> a complete</font>

119
00:06:38,680 --> 00:06:43,630
path protection<font color="#E5E5E5"> there is a guarantee</font><font color="#CCCCCC"> for</font>

120
00:06:41,740 --> 00:06:46,360
a<font color="#CCCCCC"> S 5</font><font color="#E5E5E5"> for your exam</font>

121
00:06:43,630 --> 00:06:49,270
<font color="#E5E5E5">well in this</font><font color="#CCCCCC"> example there is a there's</font>

122
00:06:46,360 --> 00:06:52,690
a guarantee for<font color="#CCCCCC"> as5 that the</font><font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> sec</font>

123
00:06:49,270 --> 00:06:56,260
update has indeed traversed the a SS

124
00:06:52,690 --> 00:07:00,370
that<font color="#E5E5E5"> are shown in the</font><font color="#CCCCCC"> AAS path</font><font color="#E5E5E5"> so that's</font>

125
00:06:56,260 --> 00:07:03,430
the<font color="#CCCCCC"> guarantee that BGP SEC offers by</font>

126
00:07:00,370 --> 00:07:06,490
<font color="#CCCCCC">doing this you are preventing any path</font>

127
00:07:03,430 --> 00:07:08,110
modification attacks<font color="#E5E5E5"> obviously you are</font>

128
00:07:06,490 --> 00:07:10,660
perfect<font color="#CCCCCC"> you are also</font><font color="#E5E5E5"> preventing any</font>

129
00:07:08,110 --> 00:07:13,510
prefix modification if somebody replaces

130
00:07:10,660 --> 00:07:17,050
a prefix with a sub prefix<font color="#CCCCCC"> that would</font>

131
00:07:13,510 --> 00:07:20,740
also make<font color="#E5E5E5"> the update invalid and also</font>

132
00:07:17,050 --> 00:07:22,780
any such thing as<font color="#E5E5E5"> a forged somebody may</font>

133
00:07:20,740 --> 00:07:27,460
try to take<font color="#CCCCCC"> advantage of the rower and</font>

134
00:07:22,780 --> 00:07:29,619
insert a forged origin<font color="#CCCCCC"> in which case the</font>

135
00:07:27,460 --> 00:07:31,359
<font color="#E5E5E5">whoever is forging the origin would not</font>

136
00:07:29,620 --> 00:07:34,120
have a signature from<font color="#CCCCCC"> the origin</font><font color="#E5E5E5"> and</font>

137
00:07:31,360 --> 00:07:41,410
<font color="#CCCCCC">therefore even</font><font color="#E5E5E5"> forged origin attacks are</font>

138
00:07:34,120 --> 00:07:44,890
detected by<font color="#CCCCCC"> this scheme now what does</font>

139
00:07:41,410 --> 00:07:48,160
the what is the BGP<font color="#CCCCCC"> check protocol</font>

140
00:07:44,890 --> 00:07:51,010
introduces a new attribute that<font color="#E5E5E5"> we call</font>

141
00:07:48,160 --> 00:07:54,150
the BGP check path attribute<font color="#E5E5E5"> the path</font>

142
00:07:51,010 --> 00:07:58,360
attribute consists of a secure path

143
00:07:54,150 --> 00:08:01,479
<font color="#E5E5E5">which includes the</font><font color="#CCCCCC"> SI</font><font color="#E5E5E5"> SS the</font><font color="#CCCCCC"> ACE numbers</font>

144
00:07:58,360 --> 00:08:03,940
in the in the<font color="#E5E5E5"> path and together</font><font color="#CCCCCC"> with</font>

145
00:08:01,480 --> 00:08:06,850
<font color="#CCCCCC">that it</font><font color="#E5E5E5"> also includes</font><font color="#CCCCCC"> the P count or the</font>

146
00:08:03,940 --> 00:08:09,730
prepend count for each a s and there is

147
00:08:06,850 --> 00:08:13,000
also a flag field associated with<font color="#E5E5E5"> each a</font>

148
00:08:09,730 --> 00:08:15,370
s by<font color="#CCCCCC"> using the flag by by setting the</font>

149
00:08:13,000 --> 00:08:18,370
flag the<font color="#E5E5E5"> s indicates that it's part of a</font>

150
00:08:15,370 --> 00:08:21,400
confederation<font color="#E5E5E5"> and that information</font><font color="#CCCCCC"> is</font>

151
00:08:18,370 --> 00:08:24,880
<font color="#CCCCCC">used as</font><font color="#E5E5E5"> the update aggresses from the</font>

152
00:08:21,400 --> 00:08:30,370
Confederation the<font color="#E5E5E5"> that that information</font>

153
00:08:24,880 --> 00:08:32,799
<font color="#E5E5E5">is</font><font color="#CCCCCC"> used to detect that that the set of</font>

154
00:08:30,370 --> 00:08:35,229
signatures were inside a<font color="#CCCCCC"> Confederation</font>

155
00:08:32,799 --> 00:08:37,598
<font color="#E5E5E5">and those set</font><font color="#CCCCCC"> of that that set of</font>

156
00:08:35,229 --> 00:08:40,599
signatures is removed<font color="#E5E5E5"> and when the</font>

157
00:08:37,599 --> 00:08:42,760
update progresses out of the

158
00:08:40,599 --> 00:08:43,660
Confederation the<font color="#E5E5E5"> signatures in the</font>

159
00:08:42,760 --> 00:08:45,730
<font color="#E5E5E5">Confederation</font>

160
00:08:43,659 --> 00:08:48,640
not all<font color="#CCCCCC"> of them are included</font><font color="#E5E5E5"> only the</font>

161
00:08:45,730 --> 00:08:54,220
Confederations<font color="#E5E5E5"> public s signature would</font>

162
00:08:48,640 --> 00:08:56,750
be included<font color="#CCCCCC"> and the lower part of</font><font color="#E5E5E5"> this</font>

163
00:08:54,220 --> 00:08:59,450
picture is<font color="#E5E5E5"> signature blocks</font>

164
00:08:56,750 --> 00:09:02,240
the signature block includes several

165
00:08:59,450 --> 00:09:04,850
signature elements and each signature

166
00:09:02,240 --> 00:09:07,760
<font color="#E5E5E5">corresponds to one a s so there's one</font>

167
00:09:04,850 --> 00:09:11,150
signature<font color="#E5E5E5"> but unique a s in the air spot</font>

168
00:09:07,760 --> 00:09:13,040
<font color="#E5E5E5">so that is a very</font><font color="#CCCCCC"> brief introduction</font><font color="#E5E5E5"> to</font>

169
00:09:11,150 --> 00:09:15,980
<font color="#CCCCCC">BGP SEC obviously there would be</font>

170
00:09:13,040 --> 00:09:19,250
<font color="#E5E5E5">questions about the performance of</font><font color="#CCCCCC"> it</font>

171
00:09:15,980 --> 00:09:23,410
the<font color="#CCCCCC"> CPU workload etc so</font><font color="#E5E5E5"> mammoth will now</font>

172
00:09:19,250 --> 00:09:27,200
take you into the efficient software

173
00:09:23,410 --> 00:09:31,010
architecture and optimization algorithms

174
00:09:27,200 --> 00:09:40,970
that contribute towards<font color="#E5E5E5"> high-performance</font>

175
00:09:31,010 --> 00:09:44,240
<font color="#E5E5E5">PGP SEC so anytime we</font><font color="#CCCCCC"> take a protocols</font>

176
00:09:40,970 --> 00:09:45,890
such as BGP<font color="#E5E5E5"> and we add security to the</font>

177
00:09:44,240 --> 00:09:48,320
protocol there's always a question<font color="#E5E5E5"> out</font>

178
00:09:45,890 --> 00:09:50,750
well am<font color="#CCCCCC"> I going</font><font color="#E5E5E5"> to be able to converge</font>

179
00:09:48,320 --> 00:09:53,270
<font color="#CCCCCC">is this going to be</font><font color="#E5E5E5"> real-time</font><font color="#CCCCCC"> or what is</font>

180
00:09:50,750 --> 00:09:56,150
the compute and other requirements<font color="#CCCCCC"> on on</font>

181
00:09:53,270 --> 00:09:58,430
the new security<font color="#E5E5E5"> elements so let's take</font>

182
00:09:56,150 --> 00:10:00,650
a first<font color="#CCCCCC"> look at</font><font color="#E5E5E5"> what those compute</font>

183
00:09:58,430 --> 00:10:02,870
resource estimation<font color="#E5E5E5"> could be based on</font>

184
00:10:00,650 --> 00:10:05,920
you<font color="#CCCCCC"> know certain assumptions that</font><font color="#E5E5E5"> we</font>

185
00:10:02,870 --> 00:10:11,210
made the first number is six hundred and

186
00:10:05,920 --> 00:10:14,660
eighty k prefixes assuming about<font color="#CCCCCC"> four</font>

187
00:10:11,210 --> 00:10:17,300
hops<font color="#CCCCCC"> per path and that's</font><font color="#E5E5E5"> that's a</font>

188
00:10:14,660 --> 00:10:19,640
typical assumption based on<font color="#E5E5E5"> data</font>

189
00:10:17,300 --> 00:10:23,569
<font color="#CCCCCC">collected and</font><font color="#E5E5E5"> then we're also assuming</font>

190
00:10:19,640 --> 00:10:28,460
<font color="#E5E5E5">that they're about 55,000</font><font color="#CCCCCC"> guesses out</font>

191
00:10:23,570 --> 00:10:30,140
there right and<font color="#E5E5E5"> then start multiplying</font>

192
00:10:28,460 --> 00:10:31,850
the numbers and then there's you know

193
00:10:30,140 --> 00:10:35,060
the space<font color="#E5E5E5"> kind of grows now the</font>

194
00:10:31,850 --> 00:10:37,040
assumption is that<font color="#E5E5E5"> bgp</font><font color="#CCCCCC"> SEC will probably</font>

195
00:10:35,060 --> 00:10:39,920
grow<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Islands there'll be certain</font>

196
00:10:37,040 --> 00:10:42,770
<font color="#E5E5E5">islands supporting BGP SEC working with</font>

197
00:10:39,920 --> 00:10:47,599
<font color="#E5E5E5">BGP</font><font color="#CCCCCC"> and over time it will</font><font color="#E5E5E5"> grow to be</font>

198
00:10:42,770 --> 00:10:51,530
mostly BGP SEC now a typical<font color="#E5E5E5"> BGP SEC</font>

199
00:10:47,600 --> 00:10:54,590
router is going<font color="#CCCCCC"> to verify</font><font color="#E5E5E5"> on average for</font>

200
00:10:51,530 --> 00:10:58,459
signatures<font color="#E5E5E5"> one per hop if you will and</font>

201
00:10:54,590 --> 00:11:02,180
that's per algorithm supported per

202
00:10:58,460 --> 00:11:04,460
update<font color="#CCCCCC"> and then once the validation is</font>

203
00:11:02,180 --> 00:11:07,189
<font color="#CCCCCC">done</font><font color="#E5E5E5"> let's say if it's propagating that</font>

204
00:11:04,460 --> 00:11:09,350
particular path it will sign it and<font color="#E5E5E5"> it</font>

205
00:11:07,190 --> 00:11:09,970
will sign it<font color="#E5E5E5"> it will be a new signature</font>

206
00:11:09,350 --> 00:11:14,139
<font color="#E5E5E5">and</font>

207
00:11:09,970 --> 00:11:16,509
<font color="#CCCCCC">we'll be per update per algorithm the</font>

208
00:11:14,139 --> 00:11:18,399
algorithm<font color="#E5E5E5"> that we're talking about</font><font color="#CCCCCC"> here</font>

209
00:11:16,509 --> 00:11:21,069
is if you<font color="#E5E5E5"> remember in the previous slide</font>

210
00:11:18,399 --> 00:11:24,610
there was an algorithm<font color="#E5E5E5"> ID</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font>

211
00:11:21,069 --> 00:11:27,128
<font color="#E5E5E5">particular algorithm based on the</font>

212
00:11:24,610 --> 00:11:32,860
protocol<font color="#E5E5E5"> that's being used to sign the</font>

213
00:11:27,129 --> 00:11:35,230
<font color="#CCCCCC">paths</font><font color="#E5E5E5"> right now ECDSA</font><font color="#CCCCCC"> P 256 is the</font>

214
00:11:32,860 --> 00:11:37,689
<font color="#E5E5E5">algorithm of choice and that's in the</font>

215
00:11:35,230 --> 00:11:41,350
RFC of the algorithms<font color="#CCCCCC"> so that's what</font>

216
00:11:37,689 --> 00:11:44,949
we're basing these discussions on and

217
00:11:41,350 --> 00:11:48,699
then real quickly<font color="#E5E5E5"> if you look at per</font>

218
00:11:44,949 --> 00:11:51,430
update signing the each<font color="#CCCCCC"> AAS will</font>

219
00:11:48,699 --> 00:11:55,269
actually<font color="#E5E5E5"> need a private key to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> able</font>

220
00:11:51,430 --> 00:11:58,000
<font color="#E5E5E5">to sign that particular path these keys</font>

221
00:11:55,269 --> 00:11:59,889
<font color="#E5E5E5">aren't really that large however</font><font color="#CCCCCC"> you</font>

222
00:11:58,000 --> 00:12:01,990
know they need to<font color="#CCCCCC"> be their</font>

223
00:11:59,889 --> 00:12:04,750
confidentiality<font color="#E5E5E5"> and integrity must be</font>

224
00:12:01,990 --> 00:12:09,279
maintained<font color="#CCCCCC"> so the system should be able</font>

225
00:12:04,750 --> 00:12:13,180
to<font color="#CCCCCC"> do that</font><font color="#E5E5E5"> now for</font><font color="#CCCCCC"> the validation though</font>

226
00:12:09,279 --> 00:12:16,360
<font color="#E5E5E5">for each hop</font><font color="#CCCCCC"> we need a public</font><font color="#E5E5E5"> key of the</font>

227
00:12:13,180 --> 00:12:19,000
<font color="#CCCCCC">a s that a</font><font color="#E5E5E5"> particular path let's say was</font>

228
00:12:16,360 --> 00:12:22,300
signed with so if you're assuming<font color="#CCCCCC"> for</font>

229
00:12:19,000 --> 00:12:23,889
hops<font color="#E5E5E5"> that will be for different public</font>

230
00:12:22,300 --> 00:12:26,410
keys<font color="#E5E5E5"> the public keys are a little bit</font>

231
00:12:23,889 --> 00:12:28,870
larger<font color="#CCCCCC"> than</font><font color="#E5E5E5"> private keys but still it's</font>

232
00:12:26,410 --> 00:12:30,790
the sizes<font color="#CCCCCC"> and a</font><font color="#E5E5E5"> problem it's the number</font>

233
00:12:28,870 --> 00:12:34,420
<font color="#CCCCCC">of</font><font color="#E5E5E5"> potential public keys that we could</font>

234
00:12:30,790 --> 00:12:37,209
have that you know<font color="#E5E5E5"> full propagation of</font>

235
00:12:34,420 --> 00:12:44,160
<font color="#E5E5E5">BGP</font><font color="#CCCCCC"> SEC and we'll talk a little</font><font color="#E5E5E5"> bit</font>

236
00:12:37,209 --> 00:12:48,219
<font color="#CCCCCC">about that as well so real quick</font>

237
00:12:44,160 --> 00:12:50,199
the<font color="#E5E5E5"> easy DSA signature operation is</font>

238
00:12:48,220 --> 00:12:54,339
shown<font color="#E5E5E5"> in this diagram the top one is</font>

239
00:12:50,199 --> 00:12:56,859
let's say<font color="#CCCCCC"> for algorithm one P 256 the</font>

240
00:12:54,339 --> 00:12:59,620
<font color="#E5E5E5">bottom one is for let's say another</font>

241
00:12:56,860 --> 00:13:02,399
algorithm<font color="#E5E5E5"> of choice maybe P 384 and</font>

242
00:12:59,620 --> 00:13:05,079
these signatures will be calculated

243
00:13:02,399 --> 00:13:07,779
<font color="#E5E5E5">generated and they will be put in the</font>

244
00:13:05,079 --> 00:13:10,120
signature<font color="#E5E5E5"> block</font><font color="#CCCCCC"> and they can actually</font><font color="#E5E5E5"> be</font>

245
00:13:07,779 --> 00:13:15,699
done in parallel<font color="#CCCCCC"> or they can be done</font><font color="#E5E5E5"> in</font>

246
00:13:10,120 --> 00:13:18,189
<font color="#E5E5E5">sequence the validation gets a little</font>

247
00:13:15,699 --> 00:13:22,209
bit more involved<font color="#CCCCCC"> because remember we</font>

248
00:13:18,189 --> 00:13:22,750
have multiple segments in a path so<font color="#E5E5E5"> you</font>

249
00:13:22,209 --> 00:13:26,319
know

250
00:13:22,750 --> 00:13:29,710
to<font color="#E5E5E5"> validate each one of those right and</font>

251
00:13:26,320 --> 00:13:33,700
all<font color="#E5E5E5"> of those hops or all of</font><font color="#CCCCCC"> those paths</font>

252
00:13:29,710 --> 00:13:35,770
must be valid for<font color="#CCCCCC"> the segment's must be</font>

253
00:13:33,700 --> 00:13:38,200
valid for<font color="#CCCCCC"> the whole path to be valid so</font>

254
00:13:35,770 --> 00:13:40,090
<font color="#CCCCCC">the top</font><font color="#E5E5E5"> one shows it if you had one</font>

255
00:13:38,200 --> 00:13:42,460
<font color="#E5E5E5">algorithm in the bottom one you know</font>

256
00:13:40,090 --> 00:13:44,380
adding another algorithm<font color="#CCCCCC"> and if you were</font>

257
00:13:42,460 --> 00:13:46,840
supporting two<font color="#CCCCCC"> algorithms you know we</font>

258
00:13:44,380 --> 00:13:53,050
would have<font color="#CCCCCC"> to do this process</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> each</font>

259
00:13:46,840 --> 00:13:56,140
<font color="#E5E5E5">algorithm for those of you who have been</font>

260
00:13:53,050 --> 00:13:58,300
<font color="#CCCCCC">involved with ECDSA signatures or most</font>

261
00:13:56,140 --> 00:14:00,490
signature generation schemes<font color="#CCCCCC"> they're</font>

262
00:13:58,300 --> 00:14:02,500
actually competent<font color="#CCCCCC"> there's a lot of</font>

263
00:14:00,490 --> 00:14:06,790
<font color="#E5E5E5">computation that goes into those</font>

264
00:14:02,500 --> 00:14:09,730
<font color="#E5E5E5">particular operations so what we wanted</font>

265
00:14:06,790 --> 00:14:12,160
<font color="#E5E5E5">to do was we</font><font color="#CCCCCC"> wanted to evaluate a large</font>

266
00:14:09,730 --> 00:14:14,110
number<font color="#E5E5E5"> of signatures being generated and</font>

267
00:14:12,160 --> 00:14:16,000
you know if you're considering millions

268
00:14:14,110 --> 00:14:18,820
of signatures generated millions<font color="#E5E5E5"> of</font>

269
00:14:16,000 --> 00:14:20,890
signatures<font color="#CCCCCC"> validate it and in most</font>

270
00:14:18,820 --> 00:14:22,840
applications you don't<font color="#E5E5E5"> see that you know</font>

271
00:14:20,890 --> 00:14:24,670
if you're<font color="#E5E5E5"> signing a document you'll sign</font>

272
00:14:22,840 --> 00:14:27,520
so many<font color="#E5E5E5"> documents you will send them</font>

273
00:14:24,670 --> 00:14:29,260
over but in this particular case there's

274
00:14:27,520 --> 00:14:32,170
<font color="#CCCCCC">real-time requirements</font><font color="#E5E5E5"> converge</font>

275
00:14:29,260 --> 00:14:34,210
<font color="#E5E5E5">convergence requirements so when we</font>

276
00:14:32,170 --> 00:14:36,280
started<font color="#E5E5E5"> looking at optimizations we</font>

277
00:14:34,210 --> 00:14:38,940
started at<font color="#CCCCCC"> the</font><font color="#E5E5E5"> top level and you know</font>

278
00:14:36,280 --> 00:14:42,819
<font color="#E5E5E5">those are system level</font><font color="#CCCCCC"> optimizations so</font>

279
00:14:38,940 --> 00:14:44,550
<font color="#CCCCCC">as an example given a router plane you</font>

280
00:14:42,820 --> 00:14:47,170
know what kind of resources do we<font color="#E5E5E5"> have</font>

281
00:14:44,550 --> 00:14:50,469
do we have multiple cores on a router

282
00:14:47,170 --> 00:14:54,990
plane engine right<font color="#E5E5E5"> so can</font><font color="#CCCCCC"> we do certain</font>

283
00:14:50,470 --> 00:14:57,790
<font color="#CCCCCC">operations asynchronously can we do the</font>

284
00:14:54,990 --> 00:14:59,320
<font color="#CCCCCC">verification for the paths in parallel</font>

285
00:14:57,790 --> 00:15:01,810
<font color="#CCCCCC">because you know each hop can be</font>

286
00:14:59,320 --> 00:15:05,020
actually<font color="#E5E5E5"> validated on its own and then</font>

287
00:15:01,810 --> 00:15:07,839
<font color="#E5E5E5">also looking at the large number of</font>

288
00:15:05,020 --> 00:15:10,240
potential<font color="#E5E5E5"> public keys</font><font color="#CCCCCC"> I can't you know</font>

289
00:15:07,839 --> 00:15:12,310
<font color="#E5E5E5">what memory models or other models even</font>

290
00:15:10,240 --> 00:15:15,010
<font color="#E5E5E5">compute models do we need to speed that</font>

291
00:15:12,310 --> 00:15:17,949
<font color="#E5E5E5">up and then we looked into algorithmic</font>

292
00:15:15,010 --> 00:15:22,270
optimizations and examples are<font color="#CCCCCC"> oops</font>

293
00:15:17,950 --> 00:15:24,010
<font color="#E5E5E5">going back so when you think</font><font color="#CCCCCC"> about from</font>

294
00:15:22,270 --> 00:15:26,620
<font color="#E5E5E5">a BGP</font><font color="#CCCCCC"> SEC perspective if you're</font>

295
00:15:24,010 --> 00:15:29,439
validating<font color="#CCCCCC"> a long path right and it has</font>

296
00:15:26,620 --> 00:15:31,930
multiple<font color="#E5E5E5"> hops in</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> if any of those hops</font>

297
00:15:29,440 --> 00:15:34,030
<font color="#E5E5E5">are invalid well the whole path is going</font>

298
00:15:31,930 --> 00:15:35,199
to be<font color="#E5E5E5"> invalid so if we found let's say</font>

299
00:15:34,030 --> 00:15:37,300
the second or the third

300
00:15:35,200 --> 00:15:38,710
element in<font color="#E5E5E5"> that path is invalid we</font>

301
00:15:37,300 --> 00:15:40,359
really don't<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> go look at it</font>

302
00:15:38,710 --> 00:15:43,780
<font color="#E5E5E5">anymore we can just claim</font><font color="#CCCCCC"> that the whole</font>

303
00:15:40,360 --> 00:15:46,330
path is invalid and terminate<font color="#E5E5E5"> early for</font>

304
00:15:43,780 --> 00:15:48,370
ECDSA sign operation and<font color="#CCCCCC"> we'll show an</font>

305
00:15:46,330 --> 00:15:52,210
<font color="#CCCCCC">example</font><font color="#E5E5E5"> of that we could do pre</font>

306
00:15:48,370 --> 00:15:54,790
calculations<font color="#E5E5E5"> beyond that we start</font>

307
00:15:52,210 --> 00:15:57,910
<font color="#E5E5E5">getting into</font><font color="#CCCCCC"> the math side</font><font color="#E5E5E5"> of things the</font>

308
00:15:54,790 --> 00:16:00,880
group level<font color="#E5E5E5"> optimizations</font><font color="#CCCCCC"> will be within</font>

309
00:15:57,910 --> 00:16:04,000
the ECC groups that we're<font color="#CCCCCC"> looking at</font>

310
00:16:00,880 --> 00:16:05,080
with<font color="#E5E5E5"> ECDSA operations and then as we get</font>

311
00:16:04,000 --> 00:16:07,870
<font color="#E5E5E5">into the field level optimizations</font>

312
00:16:05,080 --> 00:16:10,930
that's not another layer of<font color="#CCCCCC"> are getting</font>

313
00:16:07,870 --> 00:16:14,010
deeper<font color="#CCCCCC"> into</font><font color="#E5E5E5"> the math looking into the</font>

314
00:16:10,930 --> 00:16:17,020
<font color="#E5E5E5">special forms of domain parameters and</font>

315
00:16:14,010 --> 00:16:19,210
looking into<font color="#E5E5E5"> multi scalar operations and</font>

316
00:16:17,020 --> 00:16:22,300
you know reducing those and the time

317
00:16:19,210 --> 00:16:25,780
taken by them<font color="#E5E5E5"> so let me show the quick</font>

318
00:16:22,300 --> 00:16:30,689
example of an algorithmic optimization

319
00:16:25,780 --> 00:16:34,600
<font color="#E5E5E5">so the ECDSA sign operation is shown</font>

320
00:16:30,690 --> 00:16:38,320
<font color="#E5E5E5">here and if you notice that top part</font>

321
00:16:34,600 --> 00:16:40,480
<font color="#E5E5E5">here has no dependency on the message</font>

322
00:16:38,320 --> 00:16:42,070
that's being signed<font color="#E5E5E5"> and the message in</font>

323
00:16:40,480 --> 00:16:44,320
<font color="#E5E5E5">this particular case is the path that</font>

324
00:16:42,070 --> 00:16:47,740
<font color="#CCCCCC">we're gonna</font><font color="#E5E5E5"> sign and maybe that path is</font>

325
00:16:44,320 --> 00:16:51,160
about you know<font color="#E5E5E5"> thousand bytes or you</font>

326
00:16:47,740 --> 00:16:53,920
know<font color="#CCCCCC"> whatever it might be</font><font color="#E5E5E5"> but the actual</font>

327
00:16:51,160 --> 00:16:55,209
work of generating the approved random

328
00:16:53,920 --> 00:16:56,890
numbers and<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> the point</font>

329
00:16:55,210 --> 00:16:59,020
multiplication<font color="#E5E5E5"> is actually the heavy</font>

330
00:16:56,890 --> 00:17:01,270
side<font color="#CCCCCC"> of the calculation well in this</font>

331
00:16:59,020 --> 00:17:03,130
particular<font color="#E5E5E5"> case</font><font color="#CCCCCC"> since it does not</font><font color="#E5E5E5"> depend</font>

332
00:17:01,270 --> 00:17:05,290
<font color="#E5E5E5">on the path</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we're going to be</font>

333
00:17:03,130 --> 00:17:07,060
<font color="#E5E5E5">signing we could actually do this at any</font>

334
00:17:05,290 --> 00:17:09,699
time<font color="#E5E5E5"> we want we could do it on an</font>

335
00:17:07,060 --> 00:17:11,679
asynchronous core<font color="#E5E5E5"> we could do this ahead</font>

336
00:17:09,699 --> 00:17:14,589
<font color="#CCCCCC">of</font><font color="#E5E5E5"> time and if we knew how to actually</font>

337
00:17:11,680 --> 00:17:18,850
<font color="#E5E5E5">maintain</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> then you know we can get</font>

338
00:17:14,589 --> 00:17:21,429
<font color="#E5E5E5">substantial benefits out of this now</font><font color="#CCCCCC"> you</font>

339
00:17:18,849 --> 00:17:25,359
<font color="#CCCCCC">have to be careful these have to be</font><font color="#E5E5E5"> done</font>

340
00:17:21,430 --> 00:17:29,860
in approved forms and actually ECDSA

341
00:17:25,359 --> 00:17:32,649
is one of the signatures<font color="#E5E5E5"> that you can go</font>

342
00:17:29,860 --> 00:17:35,679
find<font color="#E5E5E5"> miss documentation on and you know</font>

343
00:17:32,650 --> 00:17:37,840
pre calculations are explained<font color="#CCCCCC"> I should</font>

344
00:17:35,680 --> 00:17:40,030
also mention that we<font color="#E5E5E5"> put references in</font>

345
00:17:37,840 --> 00:17:42,159
the back of the presentation we<font color="#E5E5E5"> actually</font>

346
00:17:40,030 --> 00:17:46,110
have a full paper on the optimizations

347
00:17:42,160 --> 00:17:46,110
that<font color="#CCCCCC"> you can go read details on</font>

348
00:17:46,870 --> 00:17:51,850
<font color="#CCCCCC">okay I won't spend that much time on</font>

349
00:17:48,460 --> 00:17:54,610
<font color="#E5E5E5">this</font><font color="#CCCCCC"> one there's a</font><font color="#E5E5E5"> lot of information</font>

350
00:17:51,850 --> 00:17:56,559
<font color="#E5E5E5">here but really what we're is just</font>

351
00:17:54,610 --> 00:17:58,689
showing<font color="#CCCCCC"> this as an example</font><font color="#E5E5E5"> where we</font>

352
00:17:56,559 --> 00:18:01,330
start<font color="#CCCCCC"> looking at lower levels and</font><font color="#E5E5E5"> a</font>

353
00:17:58,690 --> 00:18:03,640
traditional point multiplication<font color="#E5E5E5"> will</font>

354
00:18:01,330 --> 00:18:07,178
take about<font color="#E5E5E5"> 128 point</font>

355
00:18:03,640 --> 00:18:11,020
additions and 256 point doubles<font color="#E5E5E5"> and</font>

356
00:18:07,179 --> 00:18:15,909
remember that<font color="#E5E5E5"> for</font><font color="#CCCCCC"> P 256 this is you know</font>

357
00:18:11,020 --> 00:18:18,549
<font color="#CCCCCC">at 32 byte</font><font color="#E5E5E5"> multi precision integer right</font>

358
00:18:15,909 --> 00:18:21,039
so these<font color="#E5E5E5"> are not just adding</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 64-bit</font>

359
00:18:18,549 --> 00:18:23,200
<font color="#E5E5E5">numbers or 32-bit numbers these things</font>

360
00:18:21,039 --> 00:18:26,610
get quite involved<font color="#E5E5E5"> pretty quick</font>

361
00:18:23,200 --> 00:18:32,590
<font color="#E5E5E5">and also they're not</font><font color="#CCCCCC"> cite channel attack</font>

362
00:18:26,610 --> 00:18:35,080
<font color="#E5E5E5">resistant so we can take the algorithm</font>

363
00:18:32,590 --> 00:18:38,049
we can<font color="#E5E5E5"> break</font><font color="#CCCCCC"> it down to</font><font color="#E5E5E5"> pre calculations</font>

364
00:18:35,080 --> 00:18:40,990
and an evaluation<font color="#E5E5E5"> stage and effectively</font>

365
00:18:38,049 --> 00:18:44,230
we<font color="#CCCCCC"> can reduce the evaluation time to</font>

366
00:18:40,990 --> 00:18:47,399
<font color="#CCCCCC">only 64</font><font color="#E5E5E5"> point additions and that is a</font>

367
00:18:44,230 --> 00:18:50,529
tremendous<font color="#E5E5E5"> improvement over</font>

368
00:18:47,399 --> 00:18:53,100
<font color="#CCCCCC">state-of-the-art</font><font color="#E5E5E5"> let me show you though</font>

369
00:18:50,529 --> 00:18:56,080
what these numbers<font color="#E5E5E5"> kind of mean at</font>

370
00:18:53,100 --> 00:19:00,428
realistic levels right<font color="#CCCCCC"> so the chart</font>

371
00:18:56,080 --> 00:19:02,620
actually<font color="#E5E5E5"> shows numbers for P 256 which</font>

372
00:19:00,429 --> 00:19:06,279
is the algorithm<font color="#E5E5E5"> of choice for</font><font color="#CCCCCC"> bgp sec</font>

373
00:19:02,620 --> 00:19:09,908
today<font color="#E5E5E5"> and we put its bigger brother p</font>

374
00:19:06,279 --> 00:19:12,850
384 to kind of show a reference<font color="#E5E5E5"> you know</font>

375
00:19:09,909 --> 00:19:15,909
<font color="#CCCCCC">p 256 is approved for many more years i</font>

376
00:19:12,850 --> 00:19:18,129
think<font color="#CCCCCC"> it's good up to</font><font color="#E5E5E5"> 2030</font><font color="#CCCCCC"> but we also</font>

377
00:19:15,909 --> 00:19:20,350
wanted to<font color="#E5E5E5"> show</font><font color="#CCCCCC"> an upgrade path if an</font>

378
00:19:18,130 --> 00:19:24,279
upgrade was necessary<font color="#E5E5E5"> some of the</font>

379
00:19:20,350 --> 00:19:27,639
numbers to<font color="#CCCCCC"> remember</font><font color="#E5E5E5"> here doing the sign</font>

380
00:19:24,279 --> 00:19:31,750
operations<font color="#CCCCCC"> if a hash is</font><font color="#E5E5E5"> provided or or</font>

381
00:19:27,640 --> 00:19:34,299
not typically over<font color="#E5E5E5"> 40,000 signature</font>

382
00:19:31,750 --> 00:19:37,690
operations<font color="#E5E5E5"> a second on a single core and</font>

383
00:19:34,299 --> 00:19:41,610
this is with the commodity<font color="#E5E5E5"> CPU and then</font>

384
00:19:37,690 --> 00:19:44,679
the verify operations are around<font color="#CCCCCC"> 30,000</font>

385
00:19:41,610 --> 00:19:47,649
and how do those<font color="#CCCCCC"> compare to let's</font><font color="#E5E5E5"> say</font>

386
00:19:44,679 --> 00:19:50,440
the state<font color="#CCCCCC"> of art or what we</font><font color="#E5E5E5"> have seen so</font>

387
00:19:47,649 --> 00:19:53,760
in this chart<font color="#CCCCCC"> we took the latest version</font>

388
00:19:50,440 --> 00:19:56,340
of open<font color="#CCCCCC"> SSL which</font><font color="#E5E5E5"> is an open source tool</font>

389
00:19:53,760 --> 00:19:58,510
that provides<font color="#E5E5E5"> a lot of the crypto</font>

390
00:19:56,340 --> 00:20:00,050
<font color="#CCCCCC">low-level functions as well</font><font color="#E5E5E5"> as obviously</font>

391
00:19:58,510 --> 00:20:03,830
SSL and

392
00:20:00,050 --> 00:20:06,350
TLS right so the<font color="#CCCCCC"> rep marks are what open</font>

393
00:20:03,830 --> 00:20:09,110
SSL is running on this<font color="#CCCCCC"> particular system</font>

394
00:20:06,350 --> 00:20:11,810
<font color="#CCCCCC">again these are all single core</font><font color="#E5E5E5"> and this</font>

395
00:20:09,110 --> 00:20:15,020
is what we've<font color="#CCCCCC"> been running</font><font color="#E5E5E5"> with the</font>

396
00:20:11,810 --> 00:20:17,659
<font color="#CCCCCC">optimisation</font><font color="#E5E5E5"> so this is provided to show</font>

397
00:20:15,020 --> 00:20:19,400
that<font color="#CCCCCC"> their optimizations available there</font>

398
00:20:17,660 --> 00:20:21,220
these things can be<font color="#E5E5E5"> optimized and</font>

399
00:20:19,400 --> 00:20:27,830
actually run to support<font color="#E5E5E5"> real time</font>

400
00:20:21,220 --> 00:20:29,240
<font color="#E5E5E5">operations and then one thing to</font><font color="#CCCCCC"> mention</font>

401
00:20:27,830 --> 00:20:31,580
you know<font color="#CCCCCC"> up to this</font><font color="#E5E5E5"> point we</font><font color="#CCCCCC"> actually</font>

402
00:20:29,240 --> 00:20:33,410
talked<font color="#E5E5E5"> about this specific ECDSA</font>

403
00:20:31,580 --> 00:20:35,659
operations you know sign and verify

404
00:20:33,410 --> 00:20:37,970
<font color="#E5E5E5">because the this</font><font color="#CCCCCC"> is where</font><font color="#E5E5E5"> most of the</font>

405
00:20:35,660 --> 00:20:40,790
compute time is<font color="#E5E5E5"> really going to but do</font>

406
00:20:37,970 --> 00:20:44,480
<font color="#E5E5E5">remember as we start</font><font color="#CCCCCC"> actually looking at</font>

407
00:20:40,790 --> 00:20:46,730
it at<font color="#CCCCCC"> BGP</font><font color="#E5E5E5"> SEC level right signing a path</font>

408
00:20:44,480 --> 00:20:48,530
<font color="#E5E5E5">involves other operations as well you</font>

409
00:20:46,730 --> 00:20:51,200
have<font color="#CCCCCC"> to assemble the</font><font color="#E5E5E5"> particular path</font>

410
00:20:48,530 --> 00:20:53,629
that you're going to<font color="#CCCCCC"> be taking a hash o</font>

411
00:20:51,200 --> 00:20:55,400
then you're gonna sign<font color="#CCCCCC"> over it</font><font color="#E5E5E5"> then</font>

412
00:20:53,630 --> 00:20:58,970
you're going<font color="#CCCCCC"> to encode</font><font color="#E5E5E5"> it and put it on</font>

413
00:20:55,400 --> 00:21:01,820
<font color="#E5E5E5">the wire right and there's we have done</font>

414
00:20:58,970 --> 00:21:04,880
repeated tests with large<font color="#CCCCCC"> data sets</font><font color="#E5E5E5"> and</font>

415
00:21:01,820 --> 00:21:08,330
<font color="#CCCCCC">we can still maintain over 40,000</font>

416
00:21:04,880 --> 00:21:11,780
signatures per second<font color="#CCCCCC"> including all of</font>

417
00:21:08,330 --> 00:21:17,120
<font color="#E5E5E5">the other elements and then over 20,000</font>

418
00:21:11,780 --> 00:21:20,180
with<font color="#CCCCCC"> P 384 another example is the path</font>

419
00:21:17,120 --> 00:21:22,399
verify<font color="#E5E5E5"> remember in this particular case</font>

420
00:21:20,180 --> 00:21:26,450
a path actually<font color="#E5E5E5"> contains potentially</font>

421
00:21:22,400 --> 00:21:28,040
multiple hops<font color="#CCCCCC"> so we need to marshal that</font>

422
00:21:26,450 --> 00:21:31,820
data<font color="#E5E5E5"> together you know figure out what</font>

423
00:21:28,040 --> 00:21:33,920
<font color="#CCCCCC">we are</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be validating so each</font>

424
00:21:31,820 --> 00:21:36,560
hop actually has to be<font color="#E5E5E5"> dealt with</font>

425
00:21:33,920 --> 00:21:39,110
independently<font color="#CCCCCC"> right so we're gonna take</font>

426
00:21:36,560 --> 00:21:41,360
<font color="#CCCCCC">each hop we're gonna assemble that data</font>

427
00:21:39,110 --> 00:21:43,490
you're gonna hash it and then we're

428
00:21:41,360 --> 00:21:46,699
gonna go validate that particular<font color="#CCCCCC"> as</font>

429
00:21:43,490 --> 00:21:49,730
signature<font color="#E5E5E5"> so in this particular</font><font color="#CCCCCC"> case</font>

430
00:21:46,700 --> 00:21:52,340
what we're showing is<font color="#E5E5E5"> this is a single</font>

431
00:21:49,730 --> 00:21:55,820
<font color="#E5E5E5">core if you remember the ECDSA operation</font>

432
00:21:52,340 --> 00:21:57,919
by itself<font color="#E5E5E5"> was</font><font color="#CCCCCC"> about 30,000 when we add</font>

433
00:21:55,820 --> 00:22:02,419
all<font color="#CCCCCC"> of these other elements</font><font color="#E5E5E5"> brought in</font>

434
00:21:57,920 --> 00:22:05,240
we're about 20 points<font color="#E5E5E5"> 24.6</font><font color="#CCCCCC"> okay which is</font>

435
00:22:02,420 --> 00:22:07,880
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> pretty respectable then we also</font>

436
00:22:05,240 --> 00:22:10,610
showed another example here this<font color="#CCCCCC"> is</font>

437
00:22:07,880 --> 00:22:12,380
actually a<font color="#CCCCCC"> four</font><font color="#E5E5E5"> core system and you can</font>

438
00:22:10,610 --> 00:22:14,979
<font color="#E5E5E5">see if you're</font><font color="#CCCCCC"> actually using four cores</font>

439
00:22:12,380 --> 00:22:20,920
<font color="#E5E5E5">there</font>

440
00:22:14,980 --> 00:22:22,850
<font color="#E5E5E5">78,000 you know</font><font color="#CCCCCC"> ECD bgp SEC verify</font>

441
00:22:20,920 --> 00:22:24,920
operations which is<font color="#E5E5E5"> actually pretty</font>

442
00:22:22,850 --> 00:22:27,649
decent<font color="#CCCCCC"> and we have</font><font color="#E5E5E5"> tested this all the</font>

443
00:22:24,920 --> 00:22:29,690
way<font color="#E5E5E5"> up to 24 course I'm not sure of any</font>

444
00:22:27,650 --> 00:22:31,940
routing engines<font color="#CCCCCC"> but you know that many</font>

445
00:22:29,690 --> 00:22:35,540
course<font color="#E5E5E5"> but there is actually a current</font>

446
00:22:31,940 --> 00:22:39,700
routing<font color="#CCCCCC"> engine that uses six core Intel</font>

447
00:22:35,540 --> 00:22:42,320
Xeon CPUs and then<font color="#E5E5E5"> software based</font>

448
00:22:39,700 --> 00:22:44,690
<font color="#CCCCCC">network designs which can run on a</font>

449
00:22:42,320 --> 00:22:47,389
server let's say and those you know can

450
00:22:44,690 --> 00:22:50,270
<font color="#E5E5E5">typically use more course so this is as</font>

451
00:22:47,390 --> 00:22:52,580
<font color="#CCCCCC">bgp</font><font color="#E5E5E5"> SEC adoption grows you know</font>

452
00:22:50,270 --> 00:23:01,360
multi-threading<font color="#E5E5E5"> is a great</font><font color="#CCCCCC"> option to to</font>

453
00:22:52,580 --> 00:23:04,370
get more throughput thank you minute so

454
00:23:01,360 --> 00:23:08,649
we are going<font color="#E5E5E5"> to take those numbers that</font>

455
00:23:04,370 --> 00:23:11,629
mammoth<font color="#E5E5E5"> has presented</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> sec</font>

456
00:23:08,650 --> 00:23:14,420
<font color="#E5E5E5">signature verification and also for</font>

457
00:23:11,630 --> 00:23:16,850
signing in<font color="#CCCCCC"> the context of the BGP</font><font color="#E5E5E5"> SEC</font>

458
00:23:14,420 --> 00:23:19,250
protocol<font color="#CCCCCC"> and we are going</font><font color="#E5E5E5"> to fold those</font>

459
00:23:16,850 --> 00:23:22,580
numbers into<font color="#E5E5E5"> a model for</font><font color="#CCCCCC"> convergence</font>

460
00:23:19,250 --> 00:23:25,400
time to estimate convergence time<font color="#CCCCCC"> under</font>

461
00:23:22,580 --> 00:23:32,090
different<font color="#E5E5E5"> scenarios</font><font color="#CCCCCC"> first of all we</font>

462
00:23:25,400 --> 00:23:34,850
<font color="#E5E5E5">should observe that the BGP</font><font color="#CCCCCC"> sec update</font>

463
00:23:32,090 --> 00:23:37,449
processing is additive to the

464
00:23:34,850 --> 00:23:40,699
<font color="#CCCCCC">traditional BG process BGP processing</font>

465
00:23:37,450 --> 00:23:42,890
<font color="#E5E5E5">the traditional BGP processing includes</font>

466
00:23:40,700 --> 00:23:45,050
<font color="#E5E5E5">best path selection appearing</font>

467
00:23:42,890 --> 00:23:49,100
implementing<font color="#CCCCCC"> clearing policies route</font>

468
00:23:45,050 --> 00:23:52,790
filtering<font color="#E5E5E5"> rib management</font><font color="#CCCCCC"> etc the BGP SEC</font>

469
00:23:49,100 --> 00:23:55,189
the additive part of it as mammoth has

470
00:23:52,790 --> 00:23:58,300
already gone<font color="#E5E5E5"> through it includes parsing</font>

471
00:23:55,190 --> 00:24:00,980
the BGP update data assembly for hashing

472
00:23:58,300 --> 00:24:05,030
fetching public keys signature

473
00:24:00,980 --> 00:24:08,750
verification<font color="#E5E5E5"> and signing to peers so all</font>

474
00:24:05,030 --> 00:24:10,820
these functions<font color="#E5E5E5"> add is additive to the</font>

475
00:24:08,750 --> 00:24:12,350
traditional<font color="#E5E5E5"> BGP a processing and we are</font>

476
00:24:10,820 --> 00:24:17,439
<font color="#E5E5E5">going to focus on that at the</font>

477
00:24:12,350 --> 00:24:21,679
<font color="#E5E5E5">incremental cost CPU cost due to</font><font color="#CCCCCC"> BGP SEC</font>

478
00:24:17,440 --> 00:24:25,970
<font color="#CCCCCC">this chart shows the</font><font color="#E5E5E5"> update processing</font>

479
00:24:21,680 --> 00:24:27,020
speed<font color="#E5E5E5"> versus the AAS path length so when</font>

480
00:24:25,970 --> 00:24:30,290
you look at<font color="#CCCCCC"> a BGP</font>

481
00:24:27,020 --> 00:24:32,930
<font color="#CCCCCC">a sec update</font><font color="#E5E5E5"> it may have different</font>

482
00:24:30,290 --> 00:24:35,720
number of a SS in the path<font color="#E5E5E5"> that which is</font>

483
00:24:32,930 --> 00:24:37,790
what we call the<font color="#CCCCCC"> s path length the</font>

484
00:24:35,720 --> 00:24:40,340
signature<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> only one signature</font><font color="#CCCCCC"> for</font>

485
00:24:37,790 --> 00:24:43,399
update<font color="#E5E5E5"> when you send an update from your</font>

486
00:24:40,340 --> 00:24:46,459
BGP<font color="#E5E5E5"> SEC router to</font><font color="#CCCCCC"> your peer you add one</font>

487
00:24:43,400 --> 00:24:49,280
signature<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> is why the signature</font>

488
00:24:46,460 --> 00:24:52,340
pretty much stays constant<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is</font>

489
00:24:49,280 --> 00:24:55,670
<font color="#E5E5E5">independent of the a s path length but</font>

490
00:24:52,340 --> 00:24:58,610
the verification<font color="#E5E5E5"> of speed</font><font color="#CCCCCC"> up updates</font>

491
00:24:55,670 --> 00:25:00,590
<font color="#CCCCCC">verified per second</font>

492
00:24:58,610 --> 00:25:02,360
that would be inversely proportional

493
00:25:00,590 --> 00:25:05,780
approximately inversely inversely

494
00:25:02,360 --> 00:25:07,550
proportional<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the a s path length the</font>

495
00:25:05,780 --> 00:25:09,740
<font color="#CCCCCC">right-hand side</font><font color="#E5E5E5"> of these charts are</font>

496
00:25:07,550 --> 00:25:11,659
accurate based on measurements<font color="#E5E5E5"> and as</font>

497
00:25:09,740 --> 00:25:15,820
you go<font color="#E5E5E5"> to the left</font><font color="#CCCCCC"> it gets a</font><font color="#E5E5E5"> little bit</font>

498
00:25:11,660 --> 00:25:19,630
conservative<font color="#E5E5E5"> but that is</font><font color="#CCCCCC"> okay so the</font>

499
00:25:15,820 --> 00:25:23,810
number<font color="#CCCCCC"> of updates</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can verify is</font>

500
00:25:19,630 --> 00:25:26,800
24,000<font color="#E5E5E5"> like</font><font color="#CCCCCC"> mammoth already mentioned</font>

501
00:25:23,810 --> 00:25:30,530
<font color="#CCCCCC">for a single</font><font color="#E5E5E5"> honest</font><font color="#CCCCCC"> in for a single</font>

502
00:25:26,800 --> 00:25:32,840
signature say<font color="#CCCCCC"> and a bgp</font><font color="#E5E5E5"> psych update</font>

503
00:25:30,530 --> 00:25:36,350
with one signature<font color="#E5E5E5"> or one</font><font color="#CCCCCC"> AS hob</font><font color="#E5E5E5"> and</font>

504
00:25:32,840 --> 00:25:39,500
when we have<font color="#E5E5E5"> 10</font><font color="#CCCCCC"> OS hops</font><font color="#E5E5E5"> it is it it</font>

505
00:25:36,350 --> 00:25:41,750
reduces to<font color="#CCCCCC"> 2400</font><font color="#E5E5E5"> but still not bad</font>

506
00:25:39,500 --> 00:25:45,770
<font color="#CCCCCC">because it would</font><font color="#E5E5E5"> be rare that there</font>

507
00:25:41,750 --> 00:25:47,720
would be 10 ha PA SS in na s path so

508
00:25:45,770 --> 00:25:53,590
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> take these numbers and fold them</font>

509
00:25:47,720 --> 00:25:57,220
into convergence models this<font color="#CCCCCC"> one shows</font>

510
00:25:53,590 --> 00:26:01,730
<font color="#E5E5E5">that essentially you have three adjacent</font>

511
00:25:57,220 --> 00:26:04,160
<font color="#E5E5E5">ISPs which are all doing bgp</font><font color="#CCCCCC"> sec</font><font color="#E5E5E5"> and the</font>

512
00:26:01,730 --> 00:26:08,480
assumption is here is that a and<font color="#CCCCCC"> c</font><font color="#E5E5E5"> are</font>

513
00:26:04,160 --> 00:26:11,840
two very large global ISPs and these

514
00:26:08,480 --> 00:26:14,990
these the we are showing here the

515
00:26:11,840 --> 00:26:16,760
customer<font color="#E5E5E5"> cone the depth of the customer</font>

516
00:26:14,990 --> 00:26:19,640
cone<font color="#E5E5E5"> and the number of prefixes that</font>

517
00:26:16,760 --> 00:26:23,510
<font color="#E5E5E5">originate within the customer cone at</font>

518
00:26:19,640 --> 00:26:27,380
various depths<font color="#E5E5E5"> and this is based on real</font>

519
00:26:23,510 --> 00:26:31,280
world measurements<font color="#E5E5E5"> for real very large</font>

520
00:26:27,380 --> 00:26:35,690
global ISPs the ISP on the a on the<font color="#CCCCCC"> left</font>

521
00:26:31,280 --> 00:26:38,960
has 32,000 prefixes that are originated

522
00:26:35,690 --> 00:26:40,410
from its customer cone and the<font color="#E5E5E5"> ISP see</font>

523
00:26:38,960 --> 00:26:43,050
on the right has

524
00:26:40,410 --> 00:26:44,940
<font color="#E5E5E5">thirty thousand</font><font color="#CCCCCC"> all the prefixes are</font>

525
00:26:43,050 --> 00:26:48,510
signed in other words we are assuming

526
00:26:44,940 --> 00:26:53,850
that all<font color="#CCCCCC"> the customer SS participate in</font>

527
00:26:48,510 --> 00:26:57,000
BGP<font color="#E5E5E5"> SEC the the updates are signed</font><font color="#CCCCCC"> at</font>

528
00:26:53,850 --> 00:26:59,280
each layer in the customer cone<font color="#E5E5E5"> and as</font>

529
00:26:57,000 --> 00:27:02,340
it<font color="#E5E5E5"> gets to the top yes</font>

530
00:26:59,280 --> 00:27:04,230
the<font color="#E5E5E5"> the ISP is on a s this is the</font>

531
00:27:02,340 --> 00:27:06,000
distribution that<font color="#CCCCCC"> we have in terms of</font>

532
00:27:04,230 --> 00:27:08,460
the path length<font color="#E5E5E5"> what is shown in these</font>

533
00:27:06,000 --> 00:27:11,490
tables<font color="#CCCCCC"> and like</font><font color="#E5E5E5"> we said in the previous</font>

534
00:27:08,460 --> 00:27:13,560
slide<font color="#CCCCCC"> the update verification</font><font color="#E5E5E5"> time is a</font>

535
00:27:11,490 --> 00:27:15,870
<font color="#E5E5E5">function of the path length we factor</font>

536
00:27:13,560 --> 00:27:19,230
that<font color="#E5E5E5"> in into this table</font><font color="#CCCCCC"> and calculate</font>

537
00:27:15,870 --> 00:27:21,949
the convergence time for<font color="#CCCCCC"> R so if the</font>

538
00:27:19,230 --> 00:27:24,720
peering session between<font color="#E5E5E5"> a and r resets</font>

539
00:27:21,950 --> 00:27:27,570
<font color="#CCCCCC">what long does it take for</font><font color="#E5E5E5"> our to</font>

540
00:27:24,720 --> 00:27:30,300
receive those<font color="#E5E5E5"> 32,000</font><font color="#CCCCCC"> BGP SEC</font><font color="#E5E5E5"> updates and</font>

541
00:27:27,570 --> 00:27:32,760
compute the validation and and achieve

542
00:27:30,300 --> 00:27:34,409
reconvergence<font color="#E5E5E5"> the reconvergence time</font>

543
00:27:32,760 --> 00:27:37,260
here is on the<font color="#E5E5E5"> order of</font><font color="#CCCCCC"> three seconds</font>

544
00:27:34,410 --> 00:27:40,500
<font color="#E5E5E5">and the same thing holds if the session</font>

545
00:27:37,260 --> 00:27:43,590
<font color="#CCCCCC">between R and C resets so we are talking</font>

546
00:27:40,500 --> 00:27:45,720
<font color="#CCCCCC">about low single-digit</font><font color="#E5E5E5"> seconds</font>

547
00:27:43,590 --> 00:27:49,679
<font color="#E5E5E5">convergence time or reconvergence time</font>

548
00:27:45,720 --> 00:27:55,410
<font color="#E5E5E5">that is pretty good</font><font color="#CCCCCC"> we should</font><font color="#E5E5E5"> mention</font>

549
00:27:49,680 --> 00:27:58,500
about<font color="#CCCCCC"> stub a SS because where</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> BGP</font>

550
00:27:55,410 --> 00:28:01,170
<font color="#CCCCCC">SEC implementation it would entail some</font>

551
00:27:58,500 --> 00:28:04,860
hardware upgrade the if you have a stub

552
00:28:01,170 --> 00:28:07,800
a<font color="#E5E5E5"> s</font><font color="#CCCCCC"> bgp SEC allows for simplex</font><font color="#E5E5E5"> bgp SEC</font>

553
00:28:04,860 --> 00:28:10,800
what you may call simplex<font color="#CCCCCC"> bgp SEC the</font>

554
00:28:07,800 --> 00:28:13,350
<font color="#CCCCCC">stubby s can sign its updates through</font>

555
00:28:10,800 --> 00:28:15,510
the transit<font color="#CCCCCC"> provider but receive only</font>

556
00:28:13,350 --> 00:28:18,179
unsigned updates from the transit

557
00:28:15,510 --> 00:28:20,700
<font color="#CCCCCC">provider</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> that the stub</font><font color="#CCCCCC"> doesn't</font>

558
00:28:18,180 --> 00:28:22,860
have to do any hardware<font color="#E5E5E5"> upgrade it can</font>

559
00:28:20,700 --> 00:28:28,010
do<font color="#E5E5E5"> simple software at upgrade to sign</font>

560
00:28:22,860 --> 00:28:28,010
its own prefixes to<font color="#CCCCCC"> send to the transit</font>

561
00:28:29,360 --> 00:28:37,919
84% of a SS in the<font color="#CCCCCC"> Internet are stubs</font>

562
00:28:34,800 --> 00:28:40,950
and<font color="#E5E5E5"> 16% are non steps so that's a very</font>

563
00:28:37,920 --> 00:28:44,250
<font color="#E5E5E5">large percentage for which these the</font>

564
00:28:40,950 --> 00:28:46,890
simplex<font color="#CCCCCC"> PGP SEC can be used and the cost</font>

565
00:28:44,250 --> 00:28:49,890
of upgrade can be substantially kept

566
00:28:46,890 --> 00:28:54,450
down only<font color="#E5E5E5"> the non steps need to</font><font color="#CCCCCC"> worry</font>

567
00:28:49,890 --> 00:28:58,900
<font color="#E5E5E5">about the full</font><font color="#CCCCCC"> bgp</font><font color="#E5E5E5"> SEC implementation</font>

568
00:28:54,450 --> 00:29:01,440
this is a model<font color="#CCCCCC"> for estimating the CPU</font>

569
00:28:58,900 --> 00:29:04,450
cost for validation<font color="#E5E5E5"> as well as signing</font>

570
00:29:01,440 --> 00:29:07,480
<font color="#CCCCCC">once</font><font color="#E5E5E5"> again the we focus on the router</font>

571
00:29:04,450 --> 00:29:10,900
<font color="#E5E5E5">are in the middle</font><font color="#CCCCCC"> it has it is it</font>

572
00:29:07,480 --> 00:29:14,380
<font color="#CCCCCC">appears with a</font><font color="#E5E5E5"> s a which has the</font><font color="#CCCCCC"> 30 mm</font>

573
00:29:10,900 --> 00:29:17,230
<font color="#E5E5E5">prefix customer corn are also peers with</font>

574
00:29:14,380 --> 00:29:19,480
em and and<font color="#E5E5E5"> oh and does bgp SEC</font><font color="#CCCCCC"> peering</font>

575
00:29:17,230 --> 00:29:23,260
<font color="#CCCCCC">with them and are may have several other</font>

576
00:29:19,480 --> 00:29:25,690
<font color="#E5E5E5">multiple other peers which could be stub</font>

577
00:29:23,260 --> 00:29:29,379
and not doing<font color="#CCCCCC"> BGP SEC so that doesn't</font>

578
00:29:25,690 --> 00:29:31,390
<font color="#E5E5E5">come into the</font><font color="#CCCCCC"> picture here so if</font><font color="#E5E5E5"> the</font>

579
00:29:29,380 --> 00:29:33,670
session<font color="#CCCCCC"> between a and</font><font color="#E5E5E5"> R goes down and</font>

580
00:29:31,390 --> 00:29:36,370
comes<font color="#E5E5E5"> back up what is the</font><font color="#CCCCCC"> carry</font>

581
00:29:33,670 --> 00:29:40,510
<font color="#E5E5E5">convergence time at R so R has</font><font color="#CCCCCC"> to</font>

582
00:29:36,370 --> 00:29:43,570
<font color="#E5E5E5">receive 32,000</font><font color="#CCCCCC"> BGP</font><font color="#E5E5E5"> SEC signed updates</font>

583
00:29:40,510 --> 00:29:46,510
<font color="#E5E5E5">verify all of them and it has to sign</font>

584
00:29:43,570 --> 00:29:50,740
each<font color="#CCCCCC"> one's each one of them</font><font color="#E5E5E5"> once towards</font>

585
00:29:46,510 --> 00:29:53,200
each of the<font color="#E5E5E5"> 3 PS</font><font color="#CCCCCC"> M</font><font color="#E5E5E5"> N and O so that's the</font>

586
00:29:50,740 --> 00:29:56,350
kind of processing that's involved<font color="#E5E5E5"> about</font>

587
00:29:53,200 --> 00:30:01,810
30 times<font color="#E5E5E5"> on an average maybe 30 times</font>

588
00:29:56,350 --> 00:30:05,260
for 120,000 verifications<font color="#E5E5E5"> and 30 times</font><font color="#CCCCCC"> 3</font>

589
00:30:01,810 --> 00:30:07,810
<font color="#CCCCCC">3</font><font color="#E5E5E5"> peers on the right that's 90 thousand</font>

590
00:30:05,260 --> 00:30:10,860
signatures so hundred twenty thousand

591
00:30:07,810 --> 00:30:15,040
verifications and<font color="#CCCCCC"> 90 thousand signatures</font>

592
00:30:10,860 --> 00:30:17,590
<font color="#E5E5E5">to accomplish all of that processing</font><font color="#CCCCCC"> are</font>

593
00:30:15,040 --> 00:30:20,560
requires<font color="#E5E5E5"> about five and a half seconds</font>

594
00:30:17,590 --> 00:30:22,990
<font color="#E5E5E5">so once again a</font><font color="#CCCCCC"> single-digit second</font>

595
00:30:20,560 --> 00:30:25,450
<font color="#E5E5E5">number and that</font><font color="#CCCCCC"> is for the incremental</font>

596
00:30:22,990 --> 00:30:28,510
CPU cost associated with<font color="#CCCCCC"> BGP SEC</font>

597
00:30:25,450 --> 00:30:30,880
processing so we focused on specific

598
00:30:28,510 --> 00:30:34,660
scenarios that<font color="#E5E5E5"> would be applicable in</font>

599
00:30:30,880 --> 00:30:38,530
<font color="#CCCCCC">partial deployment</font><font color="#E5E5E5"> and just to to</font>

600
00:30:34,660 --> 00:30:44,340
clarify<font color="#E5E5E5"> what partial deployment is as</font><font color="#CCCCCC"> T</font>

601
00:30:38,530 --> 00:30:47,639
<font color="#CCCCCC">BGP</font><font color="#E5E5E5"> SEC adoption starts to grow a SS can</font>

602
00:30:44,340 --> 00:30:49,780
is<font color="#CCCCCC"> PS can decide to do bgp SEC</font>

603
00:30:47,640 --> 00:30:53,350
themselves and within<font color="#E5E5E5"> their customer</font>

604
00:30:49,780 --> 00:31:00,430
cone<font color="#E5E5E5"> and so there's so much</font><font color="#CCCCCC"> equalizes</font>

605
00:30:53,350 --> 00:31:03,070
that are adjacent or<font color="#E5E5E5"> they form a group</font>

606
00:31:00,430 --> 00:31:05,520
<font color="#E5E5E5">and in that group they do they all do</font>

607
00:31:03,070 --> 00:31:09,379
<font color="#CCCCCC">BGP</font><font color="#E5E5E5"> SEC so as long as</font><font color="#CCCCCC"> the update</font>

608
00:31:05,520 --> 00:31:15,780
<font color="#E5E5E5">originates from within the set</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those</font>

609
00:31:09,380 --> 00:31:18,090
adjacent is is a SS the the prefix the

610
00:31:15,780 --> 00:31:20,700
updates are fully protected<font color="#CCCCCC"> with BGP</font>

611
00:31:18,090 --> 00:31:25,399
signatures and when the updates<font color="#E5E5E5"> leave</font>

612
00:31:20,700 --> 00:31:28,320
the the<font color="#CCCCCC"> BGP SEC Island or this group of</font>

613
00:31:25,400 --> 00:31:30,330
<font color="#CCCCCC">adjacent a SS which are</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> BGP</font>

614
00:31:28,320 --> 00:31:33,149
<font color="#CCCCCC">segment when the update leaves the leave</font>

615
00:31:30,330 --> 00:31:34,679
<font color="#E5E5E5">the BG leaves the BGP SEC</font><font color="#CCCCCC"> Island</font><font color="#E5E5E5"> then</font>

616
00:31:33,150 --> 00:31:37,710
the signatures are dropped and<font color="#E5E5E5"> the</font>

617
00:31:34,680 --> 00:31:42,530
update is converted<font color="#CCCCCC"> to a traditional BGP</font>

618
00:31:37,710 --> 00:31:48,240
for update and sent over<font color="#CCCCCC"> outside</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> this</font>

619
00:31:42,530 --> 00:31:51,770
contiguous a SS<font color="#E5E5E5"> so that's how the BGP</font>

620
00:31:48,240 --> 00:31:56,040
SEC would<font color="#E5E5E5"> work during partial adoption</font>

621
00:31:51,770 --> 00:31:57,990
period<font color="#CCCCCC"> and so that's so given that</font><font color="#E5E5E5"> in</font>

622
00:31:56,040 --> 00:31:59,180
mind<font color="#E5E5E5"> what we are</font><font color="#CCCCCC"> basically seeing here</font>

623
00:31:57,990 --> 00:32:01,680
is that<font color="#CCCCCC"> the convergence time</font>

624
00:31:59,180 --> 00:32:03,360
<font color="#E5E5E5">contribution due to PG PG</font><font color="#CCCCCC"> preset can</font>

625
00:32:01,680 --> 00:32:07,830
remain<font color="#E5E5E5"> fairly low in the in the</font>

626
00:32:03,360 --> 00:32:10,649
single-digit seconds<font color="#CCCCCC"> during the ugly</font>

627
00:32:07,830 --> 00:32:14,639
ugly phases of the deployment in fact

628
00:32:10,650 --> 00:32:18,330
here<font color="#CCCCCC"> we are talking about</font><font color="#E5E5E5"> about 90,000</font>

629
00:32:14,640 --> 00:32:22,320
prefixes in<font color="#E5E5E5"> 3 ISPs doing BGP SEC so</font>

630
00:32:18,330 --> 00:32:27,540
<font color="#E5E5E5">that's already kind of adult sent phase</font>

631
00:32:22,320 --> 00:32:29,909
if you<font color="#E5E5E5"> will so we</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> high</font>

632
00:32:27,540 --> 00:32:32,610
<font color="#CCCCCC">performance demonstrated a high</font>

633
00:32:29,910 --> 00:32:37,140
<font color="#E5E5E5">performance implementation of BGP SEC</font>

634
00:32:32,610 --> 00:32:39,629
through<font color="#CCCCCC"> Mehmet's numbers</font><font color="#E5E5E5"> and going</font>

635
00:32:37,140 --> 00:32:42,090
<font color="#CCCCCC">forward of course</font><font color="#E5E5E5"> the BGP work load will</font>

636
00:32:39,630 --> 00:32:46,140
<font color="#CCCCCC">increase not only for</font><font color="#E5E5E5"> BGP SEC but also</font>

637
00:32:42,090 --> 00:32:47,790
for traditional<font color="#E5E5E5"> BGP ipv4 ipv6 prefixes</font>

638
00:32:46,140 --> 00:32:50,400
will continue to grow that adds more

639
00:32:47,790 --> 00:32:52,770
<font color="#E5E5E5">workload and there would be peering</font>

640
00:32:50,400 --> 00:32:54,810
policies route filtering etcetera all of

641
00:32:52,770 --> 00:32:57,720
that workload<font color="#CCCCCC"> the traditional</font><font color="#E5E5E5"> BGP</font>

642
00:32:54,810 --> 00:33:00,030
workload<font color="#E5E5E5"> would also increase</font><font color="#CCCCCC"> there will</font>

643
00:32:57,720 --> 00:33:02,820
<font color="#CCCCCC">be other factors</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> that we will</font><font color="#E5E5E5"> see</font>

644
00:33:00,030 --> 00:33:05,340
<font color="#E5E5E5">that come into play too to keep up with</font>

645
00:33:02,820 --> 00:33:07,520
<font color="#E5E5E5">the efficiency of BGP as well as</font><font color="#CCCCCC"> BGP</font>

646
00:33:05,340 --> 00:33:09,540
convergence and those could<font color="#E5E5E5"> be</font>

647
00:33:07,520 --> 00:33:12,450
multi-threading and<font color="#E5E5E5"> use of multiple</font>

648
00:33:09,540 --> 00:33:14,490
<font color="#E5E5E5">course in route processors update</font>

649
00:33:12,450 --> 00:33:16,530
processing optimizations besides the

650
00:33:14,490 --> 00:33:18,780
optimizations that<font color="#E5E5E5"> mammoth has talked</font>

651
00:33:16,530 --> 00:33:19,320
<font color="#CCCCCC">about</font><font color="#E5E5E5"> and those can include caching the</font>

652
00:33:18,780 --> 00:33:22,230
<font color="#E5E5E5">result</font>

653
00:33:19,320 --> 00:33:25,770
of verifications<font color="#E5E5E5"> and enhanced graceful</font>

654
00:33:22,230 --> 00:33:28,140
<font color="#E5E5E5">restart</font><font color="#CCCCCC"> there is a draft</font><font color="#E5E5E5"> in the IDR on</font>

655
00:33:25,770 --> 00:33:35,450
that and that<font color="#E5E5E5"> could help</font><font color="#CCCCCC"> BGP as well as</font>

656
00:33:28,140 --> 00:33:38,220
BGP<font color="#E5E5E5"> SEC in in the future</font><font color="#CCCCCC"> thank you and</font>

657
00:33:35,450 --> 00:33:40,680
<font color="#CCCCCC">we</font><font color="#E5E5E5"> have a set</font><font color="#CCCCCC"> of references here</font><font color="#E5E5E5"> which</font>

658
00:33:38,220 --> 00:33:43,980
which<font color="#CCCCCC"> list some of</font><font color="#E5E5E5"> them and there</font><font color="#CCCCCC"> are</font>

659
00:33:40,680 --> 00:33:45,870
many RFC's I should say contributions

660
00:33:43,980 --> 00:33:49,350
for many many people<font color="#CCCCCC"> some of the</font>

661
00:33:45,870 --> 00:33:52,199
references are included here with West

662
00:33:49,350 --> 00:33:54,570
<font color="#CCCCCC">George</font><font color="#E5E5E5"> new</font><font color="#CCCCCC"> star I appreciate you</font>

663
00:33:52,200 --> 00:33:57,080
continuing to<font color="#E5E5E5"> do analysis on on what</font>

664
00:33:54,570 --> 00:34:00,210
this looks like in<font color="#E5E5E5"> terms of the the hit</font>

665
00:33:57,080 --> 00:34:01,770
to scale<font color="#CCCCCC"> in</font><font color="#E5E5E5"> performance but the thing</font>

666
00:34:00,210 --> 00:34:03,810
<font color="#CCCCCC">that I see consistently missing from</font>

667
00:34:01,770 --> 00:34:07,560
these bits of<font color="#E5E5E5"> information is a</font>

668
00:34:03,810 --> 00:34:09,000
<font color="#E5E5E5">comparison to what we have today how</font>

669
00:34:07,560 --> 00:34:11,190
long<font color="#CCCCCC"> does it take</font><font color="#E5E5E5"> a router that's not</font>

670
00:34:09,000 --> 00:34:13,920
doing all of<font color="#E5E5E5"> this using the exact same</font>

671
00:34:11,190 --> 00:34:16,110
<font color="#E5E5E5">CPU to process the same number of routes</font>

672
00:34:13,920 --> 00:34:18,270
with the same number of<font color="#E5E5E5"> AAS paths and a</font>

673
00:34:16,110 --> 00:34:19,860
you know reasonable assumption of a

674
00:34:18,270 --> 00:34:23,070
<font color="#E5E5E5">typical level of Ralph Follet</font><font color="#CCCCCC"> throughout</font>

675
00:34:19,860 --> 00:34:24,330
policy and<font color="#E5E5E5"> other things so that</font><font color="#CCCCCC"> we can</font>

676
00:34:23,070 --> 00:34:27,560
see what the actual incremental

677
00:34:24,330 --> 00:34:29,580
<font color="#CCCCCC">difference in time is or</font><font color="#E5E5E5"> you know</font>

678
00:34:27,560 --> 00:34:31,139
because essentially what<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> doing</font>

679
00:34:29,580 --> 00:34:33,179
<font color="#CCCCCC">here is</font><font color="#E5E5E5"> this ends up being a sales job</font>

680
00:34:31,139 --> 00:34:35,029
<font color="#CCCCCC">you should deploy</font><font color="#E5E5E5"> each piece set because</font>

681
00:34:33,179 --> 00:34:38,460
<font color="#E5E5E5">it's not actually</font><font color="#CCCCCC"> that computation</font>

682
00:34:35,030 --> 00:34:40,890
<font color="#CCCCCC">computationally intensive</font><font color="#E5E5E5"> and it's not</font>

683
00:34:38,460 --> 00:34:41,909
likely to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> the huge hit on processing</font>

684
00:34:40,889 --> 00:34:43,020
that we<font color="#E5E5E5"> thought it was going to be</font>

685
00:34:41,909 --> 00:34:47,600
originally because things have improved

686
00:34:43,020 --> 00:34:49,139
and<font color="#CCCCCC"> you know we've done a lot</font><font color="#E5E5E5"> of work on</font>

687
00:34:47,600 --> 00:34:51,299
optimizations<font color="#E5E5E5"> and things like</font><font color="#CCCCCC"> that</font>

688
00:34:49,139 --> 00:34:54,629
that's<font color="#E5E5E5"> great but unless I have something</font>

689
00:34:51,300 --> 00:34:56,250
<font color="#CCCCCC">to compare it to</font><font color="#E5E5E5"> with how much better it</font>

690
00:34:54,630 --> 00:34:59,280
is or how much worse it is

691
00:34:56,250 --> 00:35:01,560
I still don't actually have a frame of

692
00:34:59,280 --> 00:35:04,200
<font color="#CCCCCC">reference for what this would mean in a</font>

693
00:35:01,560 --> 00:35:08,160
<font color="#CCCCCC">large-scale network</font><font color="#E5E5E5"> let me clarify your</font>

694
00:35:04,200 --> 00:35:10,169
question<font color="#CCCCCC"> are you asking about as the</font>

695
00:35:08,160 --> 00:35:13,290
number of<font color="#E5E5E5"> I mean if you if you</font><font color="#CCCCCC"> consider</font>

696
00:35:10,170 --> 00:35:16,080
<font color="#CCCCCC">at the full 600 or</font><font color="#E5E5E5"> 650,000 prefixes</font>

697
00:35:13,290 --> 00:35:20,099
every one<font color="#CCCCCC"> of them is</font><font color="#E5E5E5"> BGP SEC sign what</font>

698
00:35:16,080 --> 00:35:22,319
will be the convergence time<font color="#CCCCCC"> No</font>

699
00:35:20,099 --> 00:35:23,670
<font color="#E5E5E5">you you all the analysis</font><font color="#CCCCCC"> you did here</font>

700
00:35:22,319 --> 00:35:24,839
<font color="#E5E5E5">had a certain set of assumptions around</font>

701
00:35:23,670 --> 00:35:27,599
<font color="#E5E5E5">how many routes you were you were</font>

702
00:35:24,839 --> 00:35:29,640
processing<font color="#E5E5E5"> and you can do simple math on</font>

703
00:35:27,599 --> 00:35:31,559
I can process them this many signatures

704
00:35:29,640 --> 00:35:34,019
per second<font color="#E5E5E5"> you know based on this</font>

705
00:35:31,559 --> 00:35:36,839
<font color="#E5E5E5">hardware that I've characterized if I</font>

706
00:35:34,019 --> 00:35:39,058
don't have to do any of<font color="#E5E5E5"> the crypto how</font>

707
00:35:36,839 --> 00:35:40,589
many signals per second can<font color="#E5E5E5"> I process</font>

708
00:35:39,059 --> 00:35:44,670
what is my convergence time

709
00:35:40,589 --> 00:35:46,710
<font color="#E5E5E5">oh just plain</font><font color="#CCCCCC"> zgp</font><font color="#E5E5E5"> traditional</font><font color="#CCCCCC"> BGP yes</font><font color="#E5E5E5"> so</font>

710
00:35:44,670 --> 00:35:48,809
yeah I have put out a question<font color="#E5E5E5"> on the</font>

711
00:35:46,710 --> 00:35:51,779
<font color="#CCCCCC">Nanog list and</font><font color="#E5E5E5"> I was hoping to get some</font>

712
00:35:48,809 --> 00:35:53,430
answers<font color="#CCCCCC"> if there are measurements</font><font color="#E5E5E5"> out</font>

713
00:35:51,779 --> 00:36:05,029
there regarding traditional<font color="#CCCCCC"> bgp</font>

714
00:35:53,430 --> 00:36:08,129
convergence or something like<font color="#E5E5E5"> that</font>

715
00:36:05,029 --> 00:36:11,700
<font color="#CCCCCC">feeding it the</font><font color="#E5E5E5"> same routes</font><font color="#CCCCCC"> measure</font><font color="#E5E5E5"> it</font>

716
00:36:08,130 --> 00:36:13,739
then run zebra<font color="#CCCCCC"> or word plus your BT PHP</font>

717
00:36:11,700 --> 00:36:15,839
set stuff we did the exact<font color="#CCCCCC"> same</font><font color="#E5E5E5"> routes</font>

718
00:36:13,739 --> 00:36:17,759
and determine what the difference in

719
00:36:15,839 --> 00:36:22,009
time is that's what you're<font color="#E5E5E5"> missing is</font>

720
00:36:17,759 --> 00:36:24,839
basically your control yeah

721
00:36:22,009 --> 00:36:27,359
so that's actually<font color="#E5E5E5"> that's a pretty</font><font color="#CCCCCC"> good</font>

722
00:36:24,839 --> 00:36:29,670
point<font color="#CCCCCC"> it's it's</font><font color="#E5E5E5"> actually not as trivial</font>

723
00:36:27,359 --> 00:36:31,469
<font color="#E5E5E5">of a measurement so as you know there</font>

724
00:36:29,670 --> 00:36:34,829
<font color="#E5E5E5">are two reference implementations one</font>

725
00:36:31,469 --> 00:36:36,599
based on bird one based on quagga<font color="#CCCCCC"> and we</font>

726
00:36:34,829 --> 00:36:38,819
<font color="#CCCCCC">spent a</font><font color="#E5E5E5"> lot of time trying to profile</font>

727
00:36:36,599 --> 00:36:40,950
quagga but quagga also works in

728
00:36:38,819 --> 00:36:45,119
mysterious ways so it goes does stuff

729
00:36:40,950 --> 00:36:47,368
stops<font color="#E5E5E5"> does it again</font><font color="#CCCCCC"> and you know we</font>

730
00:36:45,119 --> 00:36:50,430
think<font color="#E5E5E5"> about optimizations right so a lot</font>

731
00:36:47,369 --> 00:36:52,589
<font color="#CCCCCC">of the operations</font><font color="#E5E5E5"> in here sometimes</font>

732
00:36:50,430 --> 00:36:55,348
<font color="#E5E5E5">depend on what you're</font><font color="#CCCCCC"> using whether</font><font color="#E5E5E5"> it's</font>

733
00:36:52,589 --> 00:36:58,529
quagga bird or some vendors application

734
00:36:55,349 --> 00:37:00,690
these that's why we mention asynchronous

735
00:36:58,529 --> 00:37:03,269
operations<font color="#CCCCCC"> a lot of the times these</font>

736
00:37:00,690 --> 00:37:05,219
particular operations<font color="#E5E5E5"> can actually be</font>

737
00:37:03,269 --> 00:37:07,019
hidden<font color="#E5E5E5"> either on another core or while</font>

738
00:37:05,219 --> 00:37:09,420
quagga is doing something<font color="#E5E5E5"> else</font>

739
00:37:07,019 --> 00:37:11,578
so the true goal that we have actually

740
00:37:09,420 --> 00:37:13,469
<font color="#E5E5E5">is as we profile these more I mean this</font>

741
00:37:11,579 --> 00:37:13,979
<font color="#E5E5E5">was as</font><font color="#CCCCCC"> you're right this was the first</font>

742
00:37:13,469 --> 00:37:17,279
step

743
00:37:13,979 --> 00:37:19,919
right how bad<font color="#E5E5E5"> is it</font><font color="#CCCCCC"> and now can we</font>

744
00:37:17,279 --> 00:37:22,739
actually<font color="#E5E5E5"> put it into these particular</font>

745
00:37:19,920 --> 00:37:24,450
you know routing<font color="#CCCCCC"> engine software but do</font>

746
00:37:22,739 --> 00:37:26,130
<font color="#CCCCCC">it</font><font color="#E5E5E5"> in such a way</font><font color="#CCCCCC"> so you're not</font><font color="#E5E5E5"> really</font>

747
00:37:24,450 --> 00:37:27,899
<font color="#E5E5E5">seeing a difference</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't think we're</font>

748
00:37:26,130 --> 00:37:30,269
there yet<font color="#E5E5E5"> and that's</font><font color="#CCCCCC"> probably</font><font color="#E5E5E5"> the next</font>

749
00:37:27,900 --> 00:37:32,730
<font color="#E5E5E5">level of research but given the numbers</font>

750
00:37:30,269 --> 00:37:36,509
the<font color="#CCCCCC"> 5-second numbers and</font><font color="#E5E5E5"> this and that</font>

751
00:37:32,730 --> 00:37:38,430
<font color="#CCCCCC">I don't believe you know for the next</font><font color="#E5E5E5"> X</font>

752
00:37:36,510 --> 00:37:40,500
years as<font color="#E5E5E5"> Chiron</font><font color="#CCCCCC"> was mentioning that</font>

753
00:37:38,430 --> 00:37:42,540
<font color="#E5E5E5">convergence is going</font><font color="#CCCCCC"> to be a problem I</font>

754
00:37:40,500 --> 00:37:45,270
mean this<font color="#E5E5E5"> may be adding a few seconds</font>

755
00:37:42,540 --> 00:37:47,279
<font color="#CCCCCC">now having said that I do agree with</font><font color="#E5E5E5"> you</font>

756
00:37:45,270 --> 00:37:49,230
<font color="#E5E5E5">at full analysis needed and that's</font>

757
00:37:47,280 --> 00:37:51,000
probably our next<font color="#E5E5E5"> steps in the</font><font color="#CCCCCC"> next six</font>

758
00:37:49,230 --> 00:37:52,920
months<font color="#E5E5E5"> or</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> yeah I think what I'm</font>

759
00:37:51,000 --> 00:37:54,570
really looking<font color="#E5E5E5"> for</font><font color="#CCCCCC"> here is straight</font>

760
00:37:52,920 --> 00:37:55,740
<font color="#E5E5E5">apples to apples compare you know I</font>

761
00:37:54,570 --> 00:37:56,850
understand that<font color="#E5E5E5"> there are limitations</font>

762
00:37:55,740 --> 00:37:58,890
<font color="#CCCCCC">around all the tooling that you're</font>

763
00:37:56,850 --> 00:38:00,330
potentially<font color="#E5E5E5"> using and</font><font color="#CCCCCC"> might it may not</font>

764
00:37:58,890 --> 00:38:01,980
<font color="#E5E5E5">be as well optimized as one other</font>

765
00:38:00,330 --> 00:38:03,330
implementation or whatever but<font color="#E5E5E5"> as long</font>

766
00:38:01,980 --> 00:38:06,080
<font color="#CCCCCC">as you're doing the exact same</font><font color="#E5E5E5"> thing in</font>

767
00:38:03,330 --> 00:38:10,200
<font color="#CCCCCC">both cases</font><font color="#E5E5E5"> right this gives you a good a</font>

768
00:38:06,080 --> 00:38:12,680
good comparison<font color="#E5E5E5"> router vendors are</font>

769
00:38:10,200 --> 00:38:17,009
willing to work with<font color="#E5E5E5"> Mamet for example</font>

770
00:38:12,680 --> 00:38:19,259
his optimizations<font color="#E5E5E5"> for the crypto part</font>

771
00:38:17,010 --> 00:38:22,950
can be<font color="#E5E5E5"> included together with the</font>

772
00:38:19,260 --> 00:38:24,750
routers<font color="#CCCCCC"> bgp software and those</font>

773
00:38:22,950 --> 00:38:26,609
<font color="#E5E5E5">measurements can</font><font color="#CCCCCC"> be done on real routers</font>

774
00:38:24,750 --> 00:38:29,660
<font color="#E5E5E5">so we're looking for some collaborations</font>

775
00:38:26,610 --> 00:38:29,660
on that<font color="#E5E5E5"> thank you</font>

776
00:38:29,780 --> 00:38:45,420
<font color="#E5E5E5">technical question the optimizations you</font>

777
00:38:41,070 --> 00:38:51,420
<font color="#CCCCCC">have used here are not protected under</font>

778
00:38:45,420 --> 00:38:54,090
<font color="#E5E5E5">an IP IP are okay I want</font><font color="#CCCCCC"> to speak to</font>

779
00:38:51,420 --> 00:38:56,220
that<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so there are multiple</font>

780
00:38:54,090 --> 00:38:58,500
<font color="#E5E5E5">implement implementations first of all</font>

781
00:38:56,220 --> 00:39:01,140
so when as you know we work witness to

782
00:38:58,500 --> 00:39:03,690
implement<font color="#CCCCCC"> this particular</font><font color="#E5E5E5"> solution so</font>

783
00:39:01,140 --> 00:39:05,940
NIST actually has a framework where you

784
00:39:03,690 --> 00:39:08,430
can<font color="#E5E5E5"> plug in multiple libraries and that</font>

785
00:39:05,940 --> 00:39:10,470
<font color="#E5E5E5">was with the thinking that vendors could</font>

786
00:39:08,430 --> 00:39:12,870
actually have preferred libraries or<font color="#CCCCCC"> in</font>

787
00:39:10,470 --> 00:39:15,240
some countries certain algorithms may

788
00:39:12,870 --> 00:39:18,210
not be available<font color="#E5E5E5"> in this particular case</font>

789
00:39:15,240 --> 00:39:20,399
I think<font color="#E5E5E5"> P 256 is available so there's an</font>

790
00:39:18,210 --> 00:39:22,770
open<font color="#CCCCCC"> ssl implementation that</font><font color="#E5E5E5"> will</font>

791
00:39:20,400 --> 00:39:24,930
actually<font color="#E5E5E5"> do all the bgp sex stuff and</font>

792
00:39:22,770 --> 00:39:28,410
you will be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> run this so</font>

793
00:39:24,930 --> 00:39:31,109
if your goal<font color="#CCCCCC"> was to take</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> do</font>

794
00:39:28,410 --> 00:39:34,049
analysis and so forth<font color="#CCCCCC"> that's truly</font>

795
00:39:31,110 --> 00:39:37,170
doable now the core<font color="#E5E5E5"> crypto engine that</font>

796
00:39:34,050 --> 00:39:40,650
we use<font color="#CCCCCC"> Tara</font><font color="#E5E5E5"> crypt is actually a</font>

797
00:39:37,170 --> 00:39:43,920
licensable product and you know feel

798
00:39:40,650 --> 00:39:48,809
<font color="#CCCCCC">free to</font><font color="#E5E5E5"> talk to</font><font color="#CCCCCC"> us afterwards</font>

799
00:39:43,920 --> 00:39:51,819
but you know it's it's actually<font color="#E5E5E5"> based on</font>

800
00:39:48,809 --> 00:39:53,470
<font color="#CCCCCC">and again you can</font><font color="#E5E5E5"> have the BGP</font><font color="#CCCCCC"> set with</font>

801
00:39:51,819 --> 00:39:56,019
all of these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> to play with if</font>

802
00:39:53,470 --> 00:39:58,238
<font color="#CCCCCC">you're optimisations</font><font color="#E5E5E5"> you're after then</font>

803
00:39:56,019 --> 00:40:02,558
yes<font color="#CCCCCC"> we can talk about it</font><font color="#E5E5E5"> yeah well okay</font>

804
00:39:58,239 --> 00:40:06,400
kind of the comment<font color="#E5E5E5"> I wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> place</font>

805
00:40:02,559 --> 00:40:09,700
first was<font color="#CCCCCC"> Shri Rama I think he's you</font>

806
00:40:06,400 --> 00:40:12,309
made the<font color="#E5E5E5"> remark</font><font color="#CCCCCC"> that yeah</font>

807
00:40:09,700 --> 00:40:16,118
we are expecting<font color="#CCCCCC"> a hardware update will</font>

808
00:40:12,309 --> 00:40:20,049
be needed anyway I kind<font color="#E5E5E5"> of I kind of</font>

809
00:40:16,119 --> 00:40:25,710
<font color="#CCCCCC">would would</font><font color="#E5E5E5"> like to view work of this</font>

810
00:40:20,049 --> 00:40:29,890
kind<font color="#E5E5E5"> like we know the need for actual</font>

811
00:40:25,710 --> 00:40:33,489
<font color="#E5E5E5">implementations in real field</font><font color="#CCCCCC"> deployment</font>

812
00:40:29,890 --> 00:40:36,220
<font color="#E5E5E5">are a couple</font><font color="#CCCCCC"> of years</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> and the</font>

813
00:40:33,489 --> 00:40:38,529
interesting question is what are

814
00:40:36,220 --> 00:40:41,470
essentially<font color="#E5E5E5"> the requirements in</font>

815
00:40:38,529 --> 00:40:44,559
processing<font color="#CCCCCC"> power that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have to factor</font>

816
00:40:41,470 --> 00:40:48,308
in in planning our next<font color="#E5E5E5"> generation of</font>

817
00:40:44,559 --> 00:40:53,859
devices<font color="#CCCCCC"> kind of hardware upgrades are</font>

818
00:40:48,309 --> 00:40:57,759
necessary<font color="#E5E5E5"> all the time yes</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> usually</font>

819
00:40:53,859 --> 00:41:01,808
doesn't happen every six months right so

820
00:40:57,759 --> 00:41:03,309
I should<font color="#CCCCCC"> have</font><font color="#E5E5E5"> mentioned what we had the</font>

821
00:41:01,809 --> 00:41:05,650
the processor on which these

822
00:41:03,309 --> 00:41:08,230
measurements were done was a<font color="#E5E5E5"> Xeon Intel</font>

823
00:41:05,650 --> 00:41:10,480
Xeon 3.5 gigahertz<font color="#CCCCCC"> single core not</font>

824
00:41:08,230 --> 00:41:16,059
<font color="#E5E5E5">although we have my numbers for multiple</font>

825
00:41:10,480 --> 00:41:18,880
core<font color="#E5E5E5"> so and with that if</font><font color="#CCCCCC"> if that</font><font color="#E5E5E5"> what</font>

826
00:41:16,059 --> 00:41:21,279
was<font color="#CCCCCC"> state of the art general</font><font color="#E5E5E5"> purpose</font>

827
00:41:18,880 --> 00:41:23,049
processor<font color="#CCCCCC"> a year ago if</font><font color="#E5E5E5"> that can</font><font color="#CCCCCC"> be in</font>

828
00:41:21,279 --> 00:41:25,269
<font color="#E5E5E5">the network in that</font><font color="#CCCCCC"> out processor five</font>

829
00:41:23,049 --> 00:41:28,900
years from<font color="#E5E5E5"> now</font><font color="#CCCCCC"> and if</font><font color="#E5E5E5"> that is when you</font>

830
00:41:25,269 --> 00:41:30,879
<font color="#E5E5E5">start seeing this</font><font color="#CCCCCC"> 20%</font><font color="#E5E5E5"> kind of adoption</font>

831
00:41:28,900 --> 00:41:32,410
<font color="#E5E5E5">that we showed then you are good five</font>

832
00:41:30,880 --> 00:41:34,539
years<font color="#CCCCCC"> from now</font><font color="#E5E5E5"> even with last year's</font>

833
00:41:32,410 --> 00:41:35,540
processor you are good<font color="#E5E5E5"> right yeah well</font>

834
00:41:34,539 --> 00:41:38,060
<font color="#E5E5E5">okay kind of</font>

835
00:41:35,540 --> 00:41:40,640
kind of I want<font color="#E5E5E5"> I want to be able to</font>

836
00:41:38,060 --> 00:41:45,680
model what I what what I have to expect

837
00:41:40,640 --> 00:41:49,390
<font color="#E5E5E5">and kind of kind of</font><font color="#CCCCCC"> guess the margins of</font>

838
00:41:45,680 --> 00:41:53,299
safety of<font color="#CCCCCC"> my</font><font color="#E5E5E5"> equipment many right and</font>

839
00:41:49,390 --> 00:41:54,740
yes<font color="#E5E5E5"> for that it is</font><font color="#CCCCCC"> really nice to have</font>

840
00:41:53,300 --> 00:41:58,700
results<font color="#CCCCCC"> that tell me</font>

841
00:41:54,740 --> 00:42:01,970
yesterday's products will will still

842
00:41:58,700 --> 00:42:06,529
work in a<font color="#E5E5E5"> week you know in a week or</font><font color="#CCCCCC"> two</font>

843
00:42:01,970 --> 00:42:09,859
<font color="#CCCCCC">weeks</font><font color="#E5E5E5"> or four years on the other hand</font>

844
00:42:06,530 --> 00:42:16,400
kind<font color="#E5E5E5"> of doing the overall modeling kind</font>

845
00:42:09,860 --> 00:42:19,820
of getting the<font color="#E5E5E5"> textures of how much how</font>

846
00:42:16,400 --> 00:42:21,770
much<font color="#CCCCCC"> how much additional power compared</font>

847
00:42:19,820 --> 00:42:25,100
<font color="#CCCCCC">to what we have at the moment</font><font color="#E5E5E5"> will be</font>

848
00:42:21,770 --> 00:42:29,090
needed<font color="#E5E5E5"> whether that's going</font><font color="#CCCCCC"> to be faster</font>

849
00:42:25,100 --> 00:42:31,549
processors or more cores or<font color="#E5E5E5"> whatever of</font>

850
00:42:29,090 --> 00:42:35,710
course<font color="#CCCCCC"> of course the results about well</font>

851
00:42:31,550 --> 00:42:38,030
<font color="#CCCCCC">okay a certain certain</font><font color="#E5E5E5"> per for certain</font>

852
00:42:35,710 --> 00:42:40,580
performance is needed<font color="#E5E5E5"> single threaded</font>

853
00:42:38,030 --> 00:42:43,010
<font color="#CCCCCC">you are</font><font color="#E5E5E5"> Arab event multi-threaded of</font>

854
00:42:40,580 --> 00:42:46,100
course is<font color="#E5E5E5"> also an important dimension</font>

855
00:42:43,010 --> 00:42:46,760
<font color="#E5E5E5">right yeah you can</font><font color="#CCCCCC"> definitely help you</font>

856
00:42:46,100 --> 00:42:48,470
<font color="#CCCCCC">with that</font>

857
00:42:46,760 --> 00:42:51,800
or anyone<font color="#E5E5E5"> else was</font><font color="#CCCCCC"> interested</font><font color="#E5E5E5"> in that</font>

858
00:42:48,470 --> 00:42:53,299
analysis<font color="#CCCCCC"> I we can sit down</font><font color="#E5E5E5"> and do it</font>

859
00:42:51,800 --> 00:42:55,130
<font color="#E5E5E5">yeah I'm sorry</font><font color="#CCCCCC"> folks were</font><font color="#E5E5E5"> running a</font>

860
00:42:53,300 --> 00:42:56,990
couple<font color="#CCCCCC"> minutes over I didn't I wasn't</font>

861
00:42:55,130 --> 00:42:58,610
good about closing<font color="#E5E5E5"> the mics early so if</font>

862
00:42:56,990 --> 00:43:00,080
you got it you got<font color="#CCCCCC"> a quick one I want to</font>

863
00:42:58,610 --> 00:43:02,450
bring a quick one but otherwise<font color="#E5E5E5"> we might</font>

864
00:43:00,080 --> 00:43:05,960
<font color="#E5E5E5">have to invite you to maybe have some</font>

865
00:43:02,450 --> 00:43:08,569
<font color="#E5E5E5">Q&A outside if you're available so Phil</font>

866
00:43:05,960 --> 00:43:09,770
Rosenthal<font color="#E5E5E5"> galooby CDN and if it's too</font>

867
00:43:08,570 --> 00:43:12,160
long<font color="#E5E5E5"> to</font><font color="#CCCCCC"> answer it might just be</font>

868
00:43:09,770 --> 00:43:16,490
<font color="#E5E5E5">something for you to</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> about but</font>

869
00:43:12,160 --> 00:43:17,839
when you add security<font color="#E5E5E5"> into something you</font>

870
00:43:16,490 --> 00:43:21,560
also think<font color="#CCCCCC"> about is</font><font color="#E5E5E5"> that security</font>

871
00:43:17,840 --> 00:43:23,330
<font color="#CCCCCC">perhaps introducing a new problem what</font>

872
00:43:21,560 --> 00:43:25,820
<font color="#CCCCCC">about the risk of denial of service</font>

873
00:43:23,330 --> 00:43:28,340
attacks<font color="#E5E5E5"> you know so this would be a very</font>

874
00:43:25,820 --> 00:43:29,680
special<font color="#CCCCCC"> case but say a nation-state who</font>

875
00:43:28,340 --> 00:43:33,400
meant to attack a<font color="#E5E5E5"> No</font>

876
00:43:29,680 --> 00:43:36,009
<font color="#CCCCCC">nation-state</font><font color="#E5E5E5"> might set up</font><font color="#CCCCCC"> bogus clients</font>

877
00:43:33,400 --> 00:43:41,410
<font color="#CCCCCC">all around the country build a s path</font>

878
00:43:36,010 --> 00:43:44,020
lengths of<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> or 50 a s is all with</font><font color="#CCCCCC"> BGP</font>

879
00:43:41,410 --> 00:43:46,598
<font color="#CCCCCC">SEC how many updates per second does it</font>

880
00:43:44,020 --> 00:43:49,770
take<font color="#E5E5E5"> to completely taken it</font><font color="#CCCCCC"> and network</font>

881
00:43:46,599 --> 00:43:55,150
down and does it then and requiring

882
00:43:49,770 --> 00:43:57,670
<font color="#E5E5E5">countermeasures like scheduling</font><font color="#CCCCCC"> or you</font>

883
00:43:55,150 --> 00:44:00,730
know<font color="#E5E5E5"> or caching or whatever to prevent</font>

884
00:43:57,670 --> 00:44:03,760
that as an attack yeah thank you<font color="#E5E5E5"> for</font>

885
00:44:00,730 --> 00:44:06,160
<font color="#CCCCCC">raising the question the</font><font color="#E5E5E5"> drafts and the</font>

886
00:44:03,760 --> 00:44:09,250
RFC's have always<font color="#CCCCCC"> a security section</font>

887
00:44:06,160 --> 00:44:11,980
<font color="#E5E5E5">where we did discuss all the security</font>

888
00:44:09,250 --> 00:44:14,020
problems that may arise as a result of

889
00:44:11,980 --> 00:44:16,210
<font color="#E5E5E5">BGP SEC implementation so that's</font>

890
00:44:14,020 --> 00:44:18,550
discussed in<font color="#E5E5E5"> fairly good detail in the</font>

891
00:44:16,210 --> 00:44:21,190
BGP<font color="#E5E5E5"> SEC draft that we refer you to that</font>

892
00:44:18,550 --> 00:44:22,839
<font color="#CCCCCC">and also we'll be happy to</font><font color="#E5E5E5"> China</font><font color="#CCCCCC"> but</font>

893
00:44:21,190 --> 00:44:24,880
<font color="#CCCCCC">nonsense we are turning out of time</font>

894
00:44:22,839 --> 00:44:26,558
<font color="#E5E5E5">we'll be happy to chat one-on-one with</font>

895
00:44:24,880 --> 00:44:28,300
you about your there is<font color="#E5E5E5"> actually an</font>

896
00:44:26,559 --> 00:44:33,210
organization in place<font color="#E5E5E5"> so if you want to</font>

897
00:44:28,300 --> 00:44:33,210
talk to<font color="#E5E5E5"> us I can describe it thank you</font>

898
00:44:40,250 --> 00:44:42,310
<font color="#E5E5E5">you</font>

