1
00:00:00,000 --> 00:00:00,060
[Music]

2
00:00:00,060 --> 00:00:02,200
foreign

3
00:00:02,200 --> 00:00:05,600
[Music]

4
00:00:05,600 --> 00:00:07,980
to just kind of get the party started

5
00:00:07,980 --> 00:00:10,500
here I would like to welcome everybody

6
00:00:10,500 --> 00:00:13,559
to the nanog86 hackathon

7
00:00:13,559 --> 00:00:16,500
uh my name is Steve Ulrich I'm on the

8
00:00:16,500 --> 00:00:19,560
hackathon committee uh be doing a brief

9
00:00:19,560 --> 00:00:22,140
intro and overview of what we have in

10
00:00:22,140 --> 00:00:25,260
the mix here for nanog86 we'll introduce

11
00:00:25,260 --> 00:00:27,660
Leo to go over you know what's going on

12
00:00:27,660 --> 00:00:30,000
with parentdb and you know a little bit

13
00:00:30,000 --> 00:00:33,000
about some of the other options that we

14
00:00:33,000 --> 00:00:34,440
have for folks who are participating in

15
00:00:34,440 --> 00:00:37,620
the hackathon and then uh Chris will run

16
00:00:37,620 --> 00:00:39,780
through the environment in more detail

17
00:00:39,780 --> 00:00:42,260
and kind of get folks oriented around

18
00:00:42,260 --> 00:00:44,280
what uh you know what we have available

19
00:00:44,280 --> 00:00:45,840
for folks with the VMS who are

20
00:00:45,840 --> 00:00:47,760
participating in the hackathon yeah just

21
00:00:47,760 --> 00:00:49,379
a bit about the hackathon you know

22
00:00:49,379 --> 00:00:51,780
madoff's uh you know mission is really

23
00:00:51,780 --> 00:00:54,600
about education

24
00:00:54,600 --> 00:00:56,039
um and you know the hackathon is a key

25
00:00:56,039 --> 00:00:58,079
part of that to encouraging folks to get

26
00:00:58,079 --> 00:01:00,780
exposure to new technologies and you

27
00:01:00,780 --> 00:01:03,120
know uh pack away at projects of

28
00:01:03,120 --> 00:01:04,920
Interest

29
00:01:04,920 --> 00:01:07,439
um all the times here are listed in uh

30
00:01:07,439 --> 00:01:09,299
pacific daylight

31
00:01:09,299 --> 00:01:12,000
um hacking will kick off on Saturday

32
00:01:12,000 --> 00:01:15,360
October 14th starting at 1 pm this

33
00:01:15,360 --> 00:01:17,780
initial bit will be virtual

34
00:01:17,780 --> 00:01:20,580
mentors will be available in the slack

35
00:01:20,580 --> 00:01:24,600
and um available on Zoom to help you

36
00:01:24,600 --> 00:01:26,640
know the hackathon hours are from one to

37
00:01:26,640 --> 00:01:29,880
four on Saturday from Sunday uh on

38
00:01:29,880 --> 00:01:33,119
Sunday from 12 to 5. there will be a

39
00:01:33,119 --> 00:01:35,159
close we'll go a little bit uh you know

40
00:01:35,159 --> 00:01:36,960
a little bit more detail on that in a

41
00:01:36,960 --> 00:01:37,799
bit

42
00:01:37,799 --> 00:01:41,520
uh there is a room for this at nanog86

43
00:01:41,520 --> 00:01:44,520
Hollywood studio ABC on the mezzanine

44
00:01:44,520 --> 00:01:47,820
level this will be open from 10 to 6 on

45
00:01:47,820 --> 00:01:51,420
Sunday the 15th and I believe lunch is

46
00:01:51,420 --> 00:01:55,140
included uh we do have uh slack and zoom

47
00:01:55,140 --> 00:01:57,720
setup uh you should have all received an

48
00:01:57,720 --> 00:02:01,500
invite to the slack um uh the slack

49
00:02:01,500 --> 00:02:04,140
space everybody who's registered should

50
00:02:04,140 --> 00:02:08,538
be a member of the nanog 86 nanog 86

51
00:02:08,538 --> 00:02:11,280
hackathon Channel

52
00:02:11,280 --> 00:02:12,420
um you know you can create your

53
00:02:12,420 --> 00:02:15,000
individual team slack channels in here

54
00:02:15,000 --> 00:02:19,319
um you can use at mentors uh we as a

55
00:02:19,319 --> 00:02:23,640
matter of uh decorum and uh convenience

56
00:02:23,640 --> 00:02:26,520
uh encourage you not to use at here or

57
00:02:26,520 --> 00:02:29,160
at Channel or at all

58
00:02:29,160 --> 00:02:31,020
um unless there's a really really

59
00:02:31,020 --> 00:02:32,580
pressing matter

60
00:02:32,580 --> 00:02:35,879
and then uh there will also be a zoom uh

61
00:02:35,879 --> 00:02:38,520
available uh details for that I believe

62
00:02:38,520 --> 00:02:40,620
are in the slack and that should have

63
00:02:40,620 --> 00:02:43,319
been forwarded via email as well uh

64
00:02:43,319 --> 00:02:45,239
strenuously encourage you to have

65
00:02:45,239 --> 00:02:47,879
updated your Zoom clients in advance of

66
00:02:47,879 --> 00:02:50,760
the hackathon now the First theme is

67
00:02:50,760 --> 00:02:53,640
packing up your toolkit this is

68
00:02:53,640 --> 00:02:55,860
effectively we're encouraging folks to

69
00:02:55,860 --> 00:02:58,440
look at their favorite you know Network

70
00:02:58,440 --> 00:03:02,099
automation networking oriented tools and

71
00:03:02,099 --> 00:03:04,080
where there isn't you know something

72
00:03:04,080 --> 00:03:07,760
that facilitates installation or

73
00:03:07,760 --> 00:03:09,840
deployments in your environment of

74
00:03:09,840 --> 00:03:13,379
choice you know consider contributing

75
00:03:13,379 --> 00:03:15,300
um you know to you know the distribution

76
00:03:15,300 --> 00:03:17,280
of choice or to

77
00:03:17,280 --> 00:03:19,560
um you know the OS of choice your your

78
00:03:19,560 --> 00:03:22,739
favorite tool and you put it in a user

79
00:03:22,739 --> 00:03:24,720
consumable you know readily uh

80
00:03:24,720 --> 00:03:27,540
ingestible format in order to facilitate

81
00:03:27,540 --> 00:03:29,940
this we have some infrastructure set up

82
00:03:29,940 --> 00:03:32,340
that you can uh you know route on and

83
00:03:32,340 --> 00:03:35,879
hack gun I will point out that there are

84
00:03:35,879 --> 00:03:38,940
a couple of hosts in here as well as a

85
00:03:38,940 --> 00:03:42,780
couple of routers we have Centos and I

86
00:03:42,780 --> 00:03:45,720
thought that we had oh yes and here's

87
00:03:45,720 --> 00:03:47,280
why I missed I missed updating that

88
00:03:47,280 --> 00:03:49,319
graphic but yes yeah the Centos 2 has

89
00:03:49,319 --> 00:03:51,599
been replaced with a uh within Ubuntu

90
00:03:51,599 --> 00:03:54,180
image so you can have both flavors of

91
00:03:54,180 --> 00:03:57,599
packaging available yes apologies for

92
00:03:57,599 --> 00:03:58,280
that

93
00:03:58,280 --> 00:04:00,659
right on thank you Chris

94
00:04:00,659 --> 00:04:03,239
um so in this environment there are a

95
00:04:03,239 --> 00:04:06,780
couple of CEOs container lab images as

96
00:04:06,780 --> 00:04:09,319
well as containerized RPD

97
00:04:09,319 --> 00:04:12,659
you can use these to interact directly

98
00:04:12,659 --> 00:04:15,599
with nodes to test

99
00:04:15,599 --> 00:04:17,040
um in your environment

100
00:04:17,040 --> 00:04:21,418
um and then the Centos one and uh Centos

101
00:04:21,418 --> 00:04:24,180
two slash Ubuntu uh hosts can be used

102
00:04:24,180 --> 00:04:26,520
for developing and packaging you know

103
00:04:26,520 --> 00:04:28,919
working on the packaging of whatever the

104
00:04:28,919 --> 00:04:31,320
tool is that might be of interest to you

105
00:04:31,320 --> 00:04:34,919
additionally uh you know these can be

106
00:04:34,919 --> 00:04:36,600
used for you know working with the other

107
00:04:36,600 --> 00:04:39,300
project uh that Leo will be talking to

108
00:04:39,300 --> 00:04:42,600
us about uh in order to uh you know you

109
00:04:42,600 --> 00:04:45,840
know provide an uh a place for you to

110
00:04:45,840 --> 00:04:48,360
you know poke at appearing DB uh

111
00:04:48,360 --> 00:04:52,020
deployment uh with Ubuntu and uh Centos

112
00:04:52,020 --> 00:04:54,419
with respect to teams if you have a team

113
00:04:54,419 --> 00:04:55,979
and you have a project that you're

114
00:04:55,979 --> 00:04:57,180
working on

115
00:04:57,180 --> 00:04:59,280
um you know within the hackathon here

116
00:04:59,280 --> 00:05:00,840
that's awesome

117
00:05:00,840 --> 00:05:03,360
um if you don't uh happy to help

118
00:05:03,360 --> 00:05:04,979
facilitate

119
00:05:04,979 --> 00:05:07,139
um engagement or you know team forming

120
00:05:07,139 --> 00:05:08,900
here if you're just joining the

121
00:05:08,900 --> 00:05:11,880
hackathon as a spot to you know kind of

122
00:05:11,880 --> 00:05:14,520
work on something that uh uh you know

123
00:05:14,520 --> 00:05:16,080
your personally or individually

124
00:05:16,080 --> 00:05:17,460
interested in

125
00:05:17,460 --> 00:05:19,919
um is in like looking for the space to

126
00:05:19,919 --> 00:05:22,080
get to you know to get the opportunity

127
00:05:22,080 --> 00:05:23,880
to concentrate on something you know

128
00:05:23,880 --> 00:05:26,220
that's uh that's all good too

129
00:05:26,220 --> 00:05:28,020
um but uh you know we do have the the

130
00:05:28,020 --> 00:05:29,699
slack and the infrastructure there for

131
00:05:29,699 --> 00:05:32,160
folks to to poke at uh I would like to

132
00:05:32,160 --> 00:05:33,780
go back to this infrastructure slide a

133
00:05:33,780 --> 00:05:34,440
bit

134
00:05:34,440 --> 00:05:36,120
um you know given that you know one of

135
00:05:36,120 --> 00:05:38,220
the the themes here for the hackathon is

136
00:05:38,220 --> 00:05:41,039
packaging up your own toolkit and we do

137
00:05:41,039 --> 00:05:43,919
all we have two uh distributions that

138
00:05:43,919 --> 00:05:46,979
are popular here in the infrastructure

139
00:05:46,979 --> 00:05:49,919
um you know Centos and Ubuntu we realize

140
00:05:49,919 --> 00:05:52,440
that there are other distributions uh

141
00:05:52,440 --> 00:05:53,820
that you know folks might want to

142
00:05:53,820 --> 00:05:57,240
package uh tooling for uh different os's

143
00:05:57,240 --> 00:05:59,460
these sorts of things uh where we do

144
00:05:59,460 --> 00:06:01,259
have the ability to

145
00:06:01,259 --> 00:06:01,860
um

146
00:06:01,860 --> 00:06:04,620
you know spin up uh you know VMS in the

147
00:06:04,620 --> 00:06:08,039
AWS infrastructure for some of these we

148
00:06:08,039 --> 00:06:10,500
encourage you to uh you know reach out

149
00:06:10,500 --> 00:06:13,560
in the slack channel in advance of uh

150
00:06:13,560 --> 00:06:16,560
the hackathon uh to you know like let us

151
00:06:16,560 --> 00:06:17,759
know if there's something that you're

152
00:06:17,759 --> 00:06:19,860
you know specifically interested in and

153
00:06:19,860 --> 00:06:22,560
we'll see if we can support that uh

154
00:06:22,560 --> 00:06:24,180
Christy maybe have a couple of comments

155
00:06:24,180 --> 00:06:26,699
on that uh I think we're looking at uh

156
00:06:26,699 --> 00:06:29,100
you know you folks can certainly use the

157
00:06:29,100 --> 00:06:31,560
free tier in AWS in order to spin up

158
00:06:31,560 --> 00:06:34,020
images and then we do have some options

159
00:06:34,020 --> 00:06:36,780
for supporting this as well yeah yeah so

160
00:06:36,780 --> 00:06:39,419
uh if you have an AWS account uh there

161
00:06:39,419 --> 00:06:41,400
are a number of there are a number of

162
00:06:41,400 --> 00:06:43,740
Base image types uh instance types that

163
00:06:43,740 --> 00:06:45,419
are that are under the free tier that

164
00:06:45,419 --> 00:06:47,160
are more or less free for limited

165
00:06:47,160 --> 00:06:49,380
personal use in this environment

166
00:06:49,380 --> 00:06:50,220
um

167
00:06:50,220 --> 00:06:53,940
so if if you need a if you need an

168
00:06:53,940 --> 00:06:56,340
instance just a development work on

169
00:06:56,340 --> 00:06:57,000
um

170
00:06:57,000 --> 00:07:00,240
you know a base uh Centos Ubuntu Red Hat

171
00:07:00,240 --> 00:07:03,600
actually not sentence uh Red Hat Ubuntu

172
00:07:03,600 --> 00:07:06,120
um you know you can use your own AWS

173
00:07:06,120 --> 00:07:09,120
account uh what we have what we have are

174
00:07:09,120 --> 00:07:11,699
able to provide is you know because AWS

175
00:07:11,699 --> 00:07:14,819
yeah we have a we have a uh

176
00:07:14,819 --> 00:07:16,500
uh relationship with AWS they're an

177
00:07:16,500 --> 00:07:19,319
in-kind sponsor so uh for larger

178
00:07:19,319 --> 00:07:23,039
instances uh if needed uh we have

179
00:07:23,039 --> 00:07:25,740
templates available that we can that we

180
00:07:25,740 --> 00:07:28,560
can spin up instances that you know

181
00:07:28,560 --> 00:07:31,979
eight gigs quad CPU for larger workloads

182
00:07:31,979 --> 00:07:35,940
if needed we've set up templates for for

183
00:07:35,940 --> 00:07:39,720
our Hal and Ubuntu

184
00:07:39,720 --> 00:07:40,620
um

185
00:07:40,620 --> 00:07:42,660
but other flavors are available so if

186
00:07:42,660 --> 00:07:44,220
there's something you need that is

187
00:07:44,220 --> 00:07:47,160
larger than the free tier

188
00:07:47,160 --> 00:07:48,660
you know talk to us so we can set it up

189
00:07:48,660 --> 00:07:52,440
for you uh the the container lab is our

190
00:07:52,440 --> 00:07:54,380
base template that we issue and that has

191
00:07:54,380 --> 00:07:56,819
containerized versions of Centos and

192
00:07:56,819 --> 00:08:01,319
Ubuntu for for use with to for use with

193
00:08:01,319 --> 00:08:04,259
the lab and if we if we need if you need

194
00:08:04,259 --> 00:08:06,479
to run applications that interact with

195
00:08:06,479 --> 00:08:09,240
the lab environment so that's that's the

196
00:08:09,240 --> 00:08:11,699
use for that infrastructure a little bit

197
00:08:11,699 --> 00:08:14,639
more on Sunday uh you know each group is

198
00:08:14,639 --> 00:08:17,099
invited to present their work uh we'll

199
00:08:17,099 --> 00:08:20,340
have additional details you know then uh

200
00:08:20,340 --> 00:08:22,500
there is somebody who will be you know

201
00:08:22,500 --> 00:08:24,419
doing brief interviews after the

202
00:08:24,419 --> 00:08:25,580
hackathon

203
00:08:25,580 --> 00:08:28,259
there's you know a bit of a video

204
00:08:28,259 --> 00:08:30,780
montage if you will that's part of the

205
00:08:30,780 --> 00:08:34,320
General Session on Wednesday uh so um

206
00:08:34,320 --> 00:08:36,179
yeah I don't know that you need to Glam

207
00:08:36,179 --> 00:08:38,039
it up but uh folks will definitely be

208
00:08:38,039 --> 00:08:39,899
encouraged to provide an interview and

209
00:08:39,899 --> 00:08:41,458
you know talk about what uh what they

210
00:08:41,458 --> 00:08:43,260
did and what they learned I'll take a

211
00:08:43,260 --> 00:08:45,120
moment to you know survey the attendees

212
00:08:45,120 --> 00:08:48,240
is there any projects open uh that folks

213
00:08:48,240 --> 00:08:50,580
you know are planning to work on that

214
00:08:50,580 --> 00:08:53,700
you might want to you know talk about

215
00:08:53,700 --> 00:08:56,279
um yeah solicit teammates for

216
00:08:56,279 --> 00:08:59,220
uh wax poetic about

217
00:08:59,220 --> 00:09:03,000
hi Steve this is Sean Technologies so I

218
00:09:03,000 --> 00:09:05,279
do have a project that I'm kind of like

219
00:09:05,279 --> 00:09:08,540
uh thinking about and someone working on

220
00:09:08,540 --> 00:09:11,760
uh the project is actually

221
00:09:11,760 --> 00:09:15,660
um All About mapping Geographic routes

222
00:09:15,660 --> 00:09:16,740
um

223
00:09:16,740 --> 00:09:18,720
um to create

224
00:09:18,720 --> 00:09:21,839
um to create long distance networking

225
00:09:21,839 --> 00:09:24,899
paths uh based on optimize on latency

226
00:09:24,899 --> 00:09:26,760
and

227
00:09:26,760 --> 00:09:30,260
um and there is a caveat in such

228
00:09:30,260 --> 00:09:33,000
topologies to take care of regarding

229
00:09:33,000 --> 00:09:36,720
diversity so these roots are typically

230
00:09:36,720 --> 00:09:41,580
in a kmz uh based um configuration so we

231
00:09:41,580 --> 00:09:43,680
can see them in Google Earth but then

232
00:09:43,680 --> 00:09:46,260
the topology that we would like to

233
00:09:46,260 --> 00:09:49,500
deliver is through a network X module of

234
00:09:49,500 --> 00:09:51,980
python which

235
00:09:51,980 --> 00:09:55,980
allows lots of SPF based calculations to

236
00:09:55,980 --> 00:09:58,740
compute roots on the fly so I'll be

237
00:09:58,740 --> 00:10:00,240
looking forward to working with any

238
00:10:00,240 --> 00:10:02,459
teammate that that may be intrigued by

239
00:10:02,459 --> 00:10:05,459
this idea that sounds interesting um

240
00:10:05,459 --> 00:10:08,339
if you have uh you know like I don't

241
00:10:08,339 --> 00:10:09,959
know if you have a GitHub repo or

242
00:10:09,959 --> 00:10:11,339
anything along those lines where you

243
00:10:11,339 --> 00:10:12,660
might have more information about the

244
00:10:12,660 --> 00:10:16,620
project or kind of you know an abstract

245
00:10:16,620 --> 00:10:18,180
um certainly encourage you to share that

246
00:10:18,180 --> 00:10:19,440
in the slack

247
00:10:19,440 --> 00:10:21,779
um in you know in advance of the the

248
00:10:21,779 --> 00:10:22,920
hackathon

249
00:10:22,920 --> 00:10:26,399
okay I will try to do some quick uh a

250
00:10:26,399 --> 00:10:28,740
single page of two-page PowerPoint to to

251
00:10:28,740 --> 00:10:31,440
look uh to share thank you that would be

252
00:10:31,440 --> 00:10:35,160
great thank you Leo we had uh Sean you

253
00:10:35,160 --> 00:10:36,600
know just give us a quick overview of a

254
00:10:36,600 --> 00:10:38,519
project he was looking at

255
00:10:38,519 --> 00:10:40,680
um do you want to you know dig into uh

256
00:10:40,680 --> 00:10:42,660
what you've got going on uh with

257
00:10:42,660 --> 00:10:43,920
peeringdb

258
00:10:43,920 --> 00:10:45,959
the project we're bringing to this

259
00:10:45,959 --> 00:10:50,940
hackathon is about peeringdb py which is

260
00:10:50,940 --> 00:10:54,959
the peeringdb reference implementation

261
00:10:54,959 --> 00:10:58,380
of a local cache we have a caching

262
00:10:58,380 --> 00:11:00,660
client it can give users a better

263
00:11:00,660 --> 00:11:03,839
experience it has limited documentation

264
00:11:03,839 --> 00:11:07,019
and we would like to make it easier for

265
00:11:07,019 --> 00:11:10,140
users to install and use I've got a

266
00:11:10,140 --> 00:11:13,740
little picture here of the place where

267
00:11:13,740 --> 00:11:17,519
we have the documentation and this deck

268
00:11:17,519 --> 00:11:19,740
of slides with links and everything in

269
00:11:19,740 --> 00:11:22,200
it will be going into the slack if

270
00:11:22,200 --> 00:11:23,399
that's okay

271
00:11:23,399 --> 00:11:25,440
when you scroll down to the bottom of

272
00:11:25,440 --> 00:11:28,860
this there is actually a link to a post

273
00:11:28,860 --> 00:11:32,160
on our technical list from six the

274
00:11:32,160 --> 00:11:34,680
Seattle internet exchange Point

275
00:11:34,680 --> 00:11:37,380
um showing how they installed peering

276
00:11:37,380 --> 00:11:40,380
dbpy so it's not quite as bare as you

277
00:11:40,380 --> 00:11:44,760
see here but that being said we would

278
00:11:44,760 --> 00:11:46,860
like to encourage more people to use it

279
00:11:46,860 --> 00:11:48,680
and that means making the experience

280
00:11:48,680 --> 00:11:51,420
easier and better it's possible that

281
00:11:51,420 --> 00:11:52,920
some people don't actually know about

282
00:11:52,920 --> 00:11:56,579
pairingdb which is absolutely fine

283
00:11:56,579 --> 00:11:59,160
um you can sort of think of peeringdb as

284
00:11:59,160 --> 00:12:02,700
like a a specialist Yellow Pages for

285
00:12:02,700 --> 00:12:04,380
interconnection

286
00:12:04,380 --> 00:12:07,200
um I've got an example here of a record

287
00:12:07,200 --> 00:12:09,180
for Amazon

288
00:12:09,180 --> 00:12:12,180
um and it shows you the kind of uh

289
00:12:12,180 --> 00:12:15,839
information that uh we have the as

290
00:12:15,839 --> 00:12:19,019
number for the network the

291
00:12:19,019 --> 00:12:21,000
um internet exchange points where they

292
00:12:21,000 --> 00:12:23,339
have a presence and

293
00:12:23,339 --> 00:12:25,740
um interconnection facilities where they

294
00:12:25,740 --> 00:12:28,440
have a presence that kind of thing also

295
00:12:28,440 --> 00:12:30,720
if you're logged into peeringdb you can

296
00:12:30,720 --> 00:12:33,480
get access to contact information so

297
00:12:33,480 --> 00:12:36,899
that you can request peering or debug a

298
00:12:36,899 --> 00:12:38,160
technical issue if you're already

299
00:12:38,160 --> 00:12:41,339
pairing with a network

300
00:12:41,339 --> 00:12:45,120
um so as I mentioned pairing dbpy is a

301
00:12:45,120 --> 00:12:48,480
local cache you can host it on your own

302
00:12:48,480 --> 00:12:51,240
infrastructure that obviously means that

303
00:12:51,240 --> 00:12:52,980
it's going to be much more responsive

304
00:12:52,980 --> 00:12:55,860
because it could be right next to you

305
00:12:55,860 --> 00:12:57,959
um your own infrastructure does include

306
00:12:57,959 --> 00:13:00,300
laptops in the past we have had bug

307
00:13:00,300 --> 00:13:03,540
reports for pairing dbpy running on a

308
00:13:03,540 --> 00:13:05,839
laptop where there was a time zone issue

309
00:13:05,839 --> 00:13:10,019
and it didn't work when it went west of

310
00:13:10,019 --> 00:13:12,600
a certain time zone

311
00:13:12,600 --> 00:13:14,940
um so we know that it can be installed

312
00:13:14,940 --> 00:13:17,399
on laptops but we don't have any good

313
00:13:17,399 --> 00:13:20,279
instructions and just because someone

314
00:13:20,279 --> 00:13:22,380
who is very experienced can do it

315
00:13:22,380 --> 00:13:24,600
doesn't mean that everyone can do it

316
00:13:24,600 --> 00:13:26,820
there's there's a lot of people who are

317
00:13:26,820 --> 00:13:30,060
involved in interconnection who use

318
00:13:30,060 --> 00:13:33,180
tools but they are not themselves the

319
00:13:33,180 --> 00:13:35,100
people who write or maintain those tools

320
00:13:35,100 --> 00:13:38,100
and we want to provide services that are

321
00:13:38,100 --> 00:13:40,680
usable by everyone involved in the

322
00:13:40,680 --> 00:13:44,100
industry not just the people who create

323
00:13:44,100 --> 00:13:47,700
and maintain uh tools

324
00:13:47,700 --> 00:13:49,019
so

325
00:13:49,019 --> 00:13:50,820
this is

326
00:13:50,820 --> 00:13:52,680
um not just a local cache that you can

327
00:13:52,680 --> 00:13:54,540
update

328
00:13:54,540 --> 00:13:55,860
um you know once a month or something

329
00:13:55,860 --> 00:13:58,320
you can literally update it once an hour

330
00:13:58,320 --> 00:14:01,860
and it's a very efficient way of keeping

331
00:14:01,860 --> 00:14:05,399
the data live it's it just gives you the

332
00:14:05,399 --> 00:14:07,260
changes so you don't have to download

333
00:14:07,260 --> 00:14:09,480
the whole file even though the whole

334
00:14:09,480 --> 00:14:13,440
file is under 50 megabytes it's not huge

335
00:14:13,440 --> 00:14:16,139
um but this is a very efficient

336
00:14:16,139 --> 00:14:19,260
um reference implementation

337
00:14:19,260 --> 00:14:19,920
um

338
00:14:19,920 --> 00:14:23,760
what we would like to do is

339
00:14:23,760 --> 00:14:28,220
um install it on essentially base

340
00:14:28,220 --> 00:14:31,079
operating systems you know sort of as

341
00:14:31,079 --> 00:14:33,720
they come in uh you know fresh out of

342
00:14:33,720 --> 00:14:37,740
installation and go and work out what is

343
00:14:37,740 --> 00:14:42,360
missing and what do we need to do so you

344
00:14:42,360 --> 00:14:44,100
know maybe there's some packages that

345
00:14:44,100 --> 00:14:46,560
aren't included in Baseline installation

346
00:14:46,560 --> 00:14:49,500
that are prerequisites and the people

347
00:14:49,500 --> 00:14:51,360
who have previously installed this

348
00:14:51,360 --> 00:14:53,940
either knew that or found it out or they

349
00:14:53,940 --> 00:14:56,639
had those packages installed anyway

350
00:14:56,639 --> 00:14:58,920
um are there system configuration issues

351
00:14:58,920 --> 00:15:01,560
character sets uh the time zone issue

352
00:15:01,560 --> 00:15:03,839
that I already mentioned

353
00:15:03,839 --> 00:15:04,560
um

354
00:15:04,560 --> 00:15:06,899
what about the database

355
00:15:06,899 --> 00:15:10,260
um in the future we would love it if we

356
00:15:10,260 --> 00:15:12,839
could have an installation that actually

357
00:15:12,839 --> 00:15:16,019
went and did the database thing for you

358
00:15:16,019 --> 00:15:18,540
um that might be uh

359
00:15:18,540 --> 00:15:21,480
a goal beyond what we can accomplish in

360
00:15:21,480 --> 00:15:23,519
this hackathon but that's the direction

361
00:15:23,519 --> 00:15:26,760
of travel we would like to aim for

362
00:15:26,760 --> 00:15:30,839
um and you know we'd love to see it

363
00:15:30,839 --> 00:15:33,120
working on Baseline

364
00:15:33,120 --> 00:15:35,820
um installations but if anyone has a

365
00:15:35,820 --> 00:15:37,320
laptop and they want to see if they can

366
00:15:37,320 --> 00:15:39,839
install it on their laptop and we get

367
00:15:39,839 --> 00:15:42,660
useful feedback that helps us improve

368
00:15:42,660 --> 00:15:47,459
um the uh appearing dbpy implementation

369
00:15:47,459 --> 00:15:50,160
then we'd love that you know if we can

370
00:15:50,160 --> 00:15:53,459
work out what the bugs are we can

371
00:15:53,459 --> 00:15:55,860
document them we can fix them we can

372
00:15:55,860 --> 00:15:57,620
make it easier for people in the future

373
00:15:57,620 --> 00:16:00,779
there's benefits for everyone in doing

374
00:16:00,779 --> 00:16:01,740
this

375
00:16:01,740 --> 00:16:04,199
um if you are someone who volunteers to

376
00:16:04,199 --> 00:16:06,300
participate in this project you get a

377
00:16:06,300 --> 00:16:08,760
window into the nanog community

378
00:16:08,760 --> 00:16:10,740
um it doesn't show you everything that

379
00:16:10,740 --> 00:16:13,620
nanog does but it gives you an idea

380
00:16:13,620 --> 00:16:16,740
about some of the things that nanog does

381
00:16:16,740 --> 00:16:18,839
um there's obviously a public benefit in

382
00:16:18,839 --> 00:16:19,740
that

383
00:16:19,740 --> 00:16:22,800
um this is very useful to people they

384
00:16:22,800 --> 00:16:26,040
use the data regularly and of course

385
00:16:26,040 --> 00:16:28,680
we'd like to thank you

386
00:16:28,680 --> 00:16:32,040
um we can make you some custom swag

387
00:16:32,040 --> 00:16:34,860
um you know if you want a water bottle

388
00:16:34,860 --> 00:16:36,720
or a hoodie or something like that then

389
00:16:36,720 --> 00:16:39,420
that is certainly achievable and we

390
00:16:39,420 --> 00:16:43,560
would be very happy to uh arrange that I

391
00:16:43,560 --> 00:16:46,920
am on the slack I will be either putting

392
00:16:46,920 --> 00:16:49,980
this file or a link to a Google Drive

393
00:16:49,980 --> 00:16:52,860
Link whichever is preferred in the slack

394
00:16:52,860 --> 00:16:56,759
uh later on next up is uh Chris Woodward

395
00:16:56,759 --> 00:16:59,160
who will go over the infrastructure so

396
00:16:59,160 --> 00:17:00,959
what we've done and this is this is uh

397
00:17:00,959 --> 00:17:01,980
you know you've been to previous

398
00:17:01,980 --> 00:17:05,459
hackathons uh this a lot of this will uh

399
00:17:05,459 --> 00:17:09,179
will be will be familiar to you we we

400
00:17:09,179 --> 00:17:13,260
utilize a um a system called container

401
00:17:13,260 --> 00:17:16,859
lab for standing up lab standing up lab

402
00:17:16,859 --> 00:17:19,679
instances in Cloud infrastructure

403
00:17:19,679 --> 00:17:22,559
um container lab is maintained by our

404
00:17:22,559 --> 00:17:25,500
friends at Nokia and they've worked with

405
00:17:25,500 --> 00:17:27,839
us pretty closely to help us get get a

406
00:17:27,839 --> 00:17:30,660
system that that is that that works well

407
00:17:30,660 --> 00:17:32,700
for us

408
00:17:32,700 --> 00:17:35,280
and what that what that effectively does

409
00:17:35,280 --> 00:17:39,780
is creates uh creates containers that

410
00:17:39,780 --> 00:17:42,059
that are set up in Virtual Network

411
00:17:42,059 --> 00:17:45,000
topology such that such that the various

412
00:17:45,000 --> 00:17:48,000
containerized Network os's behave like a

413
00:17:48,000 --> 00:17:49,679
real Network would there's there's a

414
00:17:49,679 --> 00:17:51,600
private key that has that I've shared

415
00:17:51,600 --> 00:17:55,260
into the slack so if you want if we

416
00:17:55,260 --> 00:17:57,120
issue you an instance you'll need to

417
00:17:57,120 --> 00:17:59,760
grab that public key and use that to log

418
00:17:59,760 --> 00:18:01,980
in you can interact with a number of

419
00:18:01,980 --> 00:18:05,820
ways you can set up SSH tunnels between

420
00:18:05,820 --> 00:18:08,960
your laptop and the network OS instances

421
00:18:08,960 --> 00:18:12,179
using the hosts host IP as your SSH

422
00:18:12,179 --> 00:18:14,880
title endpoint you can interact you can

423
00:18:14,880 --> 00:18:19,440
get code onto those instances by uh by a

424
00:18:19,440 --> 00:18:22,380
shared repository you know get push from

425
00:18:22,380 --> 00:18:24,720
your could push from your desktop and

426
00:18:24,720 --> 00:18:27,059
then and then go to the go to the

427
00:18:27,059 --> 00:18:30,900
instance and and get pull there

428
00:18:30,900 --> 00:18:33,600
um or you can develop directly on those

429
00:18:33,600 --> 00:18:36,000
servers uh which works but keep in mind

430
00:18:36,000 --> 00:18:37,440
that these are all ephemeral instances

431
00:18:37,440 --> 00:18:39,539
so anything that you don't pull off of

432
00:18:39,539 --> 00:18:40,919
them at the end of the hackathon will be

433
00:18:40,919 --> 00:18:41,640
lost

434
00:18:41,640 --> 00:18:43,320
um this is a quick diagram yeah this is

435
00:18:43,320 --> 00:18:46,020
the diagram I did update uh apologies to

436
00:18:46,020 --> 00:18:47,520
you for that

437
00:18:47,520 --> 00:18:50,039
um but it's a relatively simple topology

438
00:18:50,039 --> 00:18:52,500
but the important thing is that is to

439
00:18:52,500 --> 00:18:55,080
see that there's two CEO Essences which

440
00:18:55,080 --> 00:18:58,380
is arista's containerized router OS and

441
00:18:58,380 --> 00:19:02,299
then to crpb instances which is junipers

442
00:19:02,299 --> 00:19:05,340
containerized router operating system

443
00:19:05,340 --> 00:19:08,640
um which is a is a subset of the full

444
00:19:08,640 --> 00:19:10,020
junos

445
00:19:10,020 --> 00:19:11,340
um and I'll talk about that a little bit

446
00:19:11,340 --> 00:19:12,419
later

447
00:19:12,419 --> 00:19:15,539
um and then there are two OS containers

448
00:19:15,539 --> 00:19:18,600
hanging off of those routers uh one is

449
00:19:18,600 --> 00:19:20,100
running Centos the other is running

450
00:19:20,100 --> 00:19:22,620
Ubuntu so if you're looking for

451
00:19:22,620 --> 00:19:24,660
different packaging targets uh you've

452
00:19:24,660 --> 00:19:30,020
got both RPM and uh and apt packaging

453
00:19:30,020 --> 00:19:32,520
Packaging Systems available you know

454
00:19:32,520 --> 00:19:34,679
basic instructions for sshing we will

455
00:19:34,679 --> 00:19:37,020
get we'll give you an IP address for the

456
00:19:37,020 --> 00:19:39,480
node you want to access you just need to

457
00:19:39,480 --> 00:19:42,419
drop the PM file that is in slack to

458
00:19:42,419 --> 00:19:45,080
your dot SSH directory

459
00:19:45,080 --> 00:19:47,880
important thing that that everybody

460
00:19:47,880 --> 00:19:50,400
misses including myself a lot

461
00:19:50,400 --> 00:19:53,520
um your private key cannot be group or

462
00:19:53,520 --> 00:19:54,960
World readable in your directory you

463
00:19:54,960 --> 00:19:57,660
have to change the opener permissions so

464
00:19:57,660 --> 00:20:00,780
that only only you can can read that

465
00:20:00,780 --> 00:20:03,960
file otherwise the SSH client won't use

466
00:20:03,960 --> 00:20:07,860
it and then you use the dash I switch to

467
00:20:07,860 --> 00:20:10,860
use the SSH key to log into your

468
00:20:10,860 --> 00:20:14,280
instance now since since I wrote this it

469
00:20:14,280 --> 00:20:16,679
was I was alerted to the fact that if

470
00:20:16,679 --> 00:20:19,919
that key is in your dot SSH directory

471
00:20:19,919 --> 00:20:21,660
you don't have to use the dash I switch

472
00:20:21,660 --> 00:20:24,179
it will find it automatically so that's

473
00:20:24,179 --> 00:20:26,280
not strictly necessary but if the key is

474
00:20:26,280 --> 00:20:29,400
anywhere not in your dot SSH directory

475
00:20:29,400 --> 00:20:32,960
you need to use Dash I switch to point

476
00:20:32,960 --> 00:20:36,539
so here's just a a walk through of that

477
00:20:36,539 --> 00:20:38,900
process

478
00:20:39,000 --> 00:20:41,580
you know I like to I like to set the key

479
00:20:41,580 --> 00:20:43,799
location as an environment variable

480
00:20:43,799 --> 00:20:48,240
um and then you can use that to

481
00:20:48,240 --> 00:20:50,280
access everything else you need and then

482
00:20:50,280 --> 00:20:53,039
once it's in the your SSH directory you

483
00:20:53,039 --> 00:20:54,360
can then

484
00:20:54,360 --> 00:20:57,120
utilize it and you see that and you can

485
00:20:57,120 --> 00:20:59,000
see you're running the SSH command there

486
00:20:59,000 --> 00:21:03,240
with the Ubuntu user so the instances

487
00:21:03,240 --> 00:21:05,220
that are running C lab are up in two

488
00:21:05,220 --> 00:21:07,440
instances so the default user for all

489
00:21:07,440 --> 00:21:09,900
those is Ubuntu so you can you can see

490
00:21:09,900 --> 00:21:12,960
that there in the SSH command and that

491
00:21:12,960 --> 00:21:16,020
is the that is the V6 address for that

492
00:21:16,020 --> 00:21:17,820
particular instance I'm logging into a

493
00:21:17,820 --> 00:21:20,340
word about the ID addresses ipv4

494
00:21:20,340 --> 00:21:22,860
addresses are ephemeral uh these six

495
00:21:22,860 --> 00:21:25,260
addresses or not so if for some reason

496
00:21:25,260 --> 00:21:28,200
the the instance used to be stopped and

497
00:21:28,200 --> 00:21:31,140
restarted it will get a new V4 address

498
00:21:31,140 --> 00:21:34,140
but it will retain its V6 address so

499
00:21:34,140 --> 00:21:37,080
just be mindful of that and if if you

500
00:21:37,080 --> 00:21:38,700
know if you need us to restart an

501
00:21:38,700 --> 00:21:41,760
instance uh we can do that but we'll

502
00:21:41,760 --> 00:21:43,280
need to tell you what the new IP address

503
00:21:43,280 --> 00:21:46,440
IP address of that instance is uh after

504
00:21:46,440 --> 00:21:48,840
which we started so a little bit about C

505
00:21:48,840 --> 00:21:50,039
lab

506
00:21:50,039 --> 00:21:50,820
um

507
00:21:50,820 --> 00:21:54,299
you know C lab is the client binary that

508
00:21:54,299 --> 00:21:56,880
that container lab uses that Terror lab

509
00:21:56,880 --> 00:21:58,080
uses

510
00:21:58,080 --> 00:21:58,740
um

511
00:21:58,740 --> 00:22:02,760
and this is effectively a an output of

512
00:22:02,760 --> 00:22:04,980
what of the instances that are running

513
00:22:04,980 --> 00:22:07,020
in the container lab

514
00:22:07,020 --> 00:22:08,220
um

515
00:22:08,220 --> 00:22:12,059
environment so actually this this is

516
00:22:12,059 --> 00:22:14,520
also an older an older screenshot that I

517
00:22:14,520 --> 00:22:15,780
did not update

518
00:22:15,780 --> 00:22:19,020
um but this is this is uh you can see

519
00:22:19,020 --> 00:22:21,299
the two Unix instances and then the cios

520
00:22:21,299 --> 00:22:23,760
the crpd instances there

521
00:22:23,760 --> 00:22:25,380
um

522
00:22:25,380 --> 00:22:27,780
you know one other change I'll point out

523
00:22:27,780 --> 00:22:30,059
is that previously these were very

524
00:22:30,059 --> 00:22:32,520
minimal OS instances uh they're now but

525
00:22:32,520 --> 00:22:34,200
fully formed they have systemd running

526
00:22:34,200 --> 00:22:36,900
on them for so you can create system D

527
00:22:36,900 --> 00:22:40,200
unit files for testing testing startup

528
00:22:40,200 --> 00:22:41,760
stop Scripts

529
00:22:41,760 --> 00:22:43,799
for any services that you want to run on

530
00:22:43,799 --> 00:22:47,460
those boxes a Intrepid hacker has

531
00:22:47,460 --> 00:22:50,360
has created an image that runs graphite

532
00:22:50,360 --> 00:22:52,620
later on today I'll be taking that out

533
00:22:52,620 --> 00:22:54,059
for a spin and see if that works well

534
00:22:54,059 --> 00:22:56,039
here and possibly updating these images

535
00:22:56,039 --> 00:22:58,980
yet again if you're accessing these

536
00:22:58,980 --> 00:23:02,280
images uh just be aware that there are

537
00:23:02,280 --> 00:23:03,720
different default users for different

538
00:23:03,720 --> 00:23:07,140
images sorry not to plot users default

539
00:23:07,140 --> 00:23:11,820
execution binaries so CEOs images uh the

540
00:23:11,820 --> 00:23:14,880
the EOS command line is accessed by

541
00:23:14,880 --> 00:23:18,600
using running a binary called CLI keep

542
00:23:18,600 --> 00:23:22,080
in mind that the C is capitalized crpd

543
00:23:22,080 --> 00:23:25,919
uses CL uses the same but it's lowercase

544
00:23:25,919 --> 00:23:28,919
CLI so if you were to if you were to

545
00:23:28,919 --> 00:23:31,200
just exec into these you'll get that

546
00:23:31,200 --> 00:23:34,200
you'll get a bash shell which you won't

547
00:23:34,200 --> 00:23:36,539
be able to do much useful stuff from but

548
00:23:36,539 --> 00:23:38,580
you run these binaries and that will get

549
00:23:38,580 --> 00:23:40,980
you into the traditional router OS

550
00:23:40,980 --> 00:23:42,840
environment that we're all used to so

551
00:23:42,840 --> 00:23:45,299
just a screenshot illustrating that note

552
00:23:45,299 --> 00:23:48,480
the command normally you use c-lab

553
00:23:48,480 --> 00:23:52,440
commands to to manage the instances but

554
00:23:52,440 --> 00:23:55,559
for getting shell access on them use

555
00:23:55,559 --> 00:23:57,480
Dockers exec command obviously

556
00:23:57,480 --> 00:23:59,039
everything needs to be run with sudo so

557
00:23:59,039 --> 00:24:03,179
Docker exec it is for interactive and

558
00:24:03,179 --> 00:24:05,520
then your container name and then in

559
00:24:05,520 --> 00:24:08,340
this case CLI capitalize to get to the

560
00:24:08,340 --> 00:24:12,480
the COS executable environment if you're

561
00:24:12,480 --> 00:24:14,760
not familiar with CEO with with Aristo

562
00:24:14,760 --> 00:24:18,120
EOS if you know Cisco you won't need

563
00:24:18,120 --> 00:24:20,520
much you won't be very alien to you you

564
00:24:20,520 --> 00:24:23,400
won't need much hand holding there's a

565
00:24:23,400 --> 00:24:25,980
little bit of fun history is that early

566
00:24:25,980 --> 00:24:28,980
days of aristas of erisa's History the

567
00:24:28,980 --> 00:24:31,260
the command line was so similar that

568
00:24:31,260 --> 00:24:33,780
Cisco suit them over it that is well

569
00:24:33,780 --> 00:24:36,919
long behind us so again illustrate that

570
00:24:36,919 --> 00:24:39,659
the COS environment is very similar to

571
00:24:39,659 --> 00:24:42,900
Cisco almost all of the commands work

572
00:24:42,900 --> 00:24:44,520
the way that you expect them to show

573
00:24:44,520 --> 00:24:46,140
interface show IP route should be

574
00:24:46,140 --> 00:24:49,380
showing the bgp summary uh you know

575
00:24:49,380 --> 00:24:51,240
basic routing commands all work the way

576
00:24:51,240 --> 00:24:53,280
you expect them to one substantial

577
00:24:53,280 --> 00:24:55,980
difference between IO from IOS is the

578
00:24:55,980 --> 00:24:59,520
configuration environment uh you know

579
00:24:59,520 --> 00:25:02,700
classic iOS every config command takes

580
00:25:02,700 --> 00:25:04,980
effect when you hit return uh you know

581
00:25:04,980 --> 00:25:07,440
EOS has a function called configure

582
00:25:07,440 --> 00:25:09,780
session which allows you to batch up a

583
00:25:09,780 --> 00:25:11,520
number of config changes and then commit

584
00:25:11,520 --> 00:25:14,340
them at once uh similar to gnos

585
00:25:14,340 --> 00:25:15,900
configure mode and there's a look at the

586
00:25:15,900 --> 00:25:19,080
documentation for that crpd if you're

587
00:25:19,080 --> 00:25:21,600
familiar to junos again it's it is

588
00:25:21,600 --> 00:25:25,080
effectively junos config language most

589
00:25:25,080 --> 00:25:26,760
exact commands run the way you expect

590
00:25:26,760 --> 00:25:29,460
them to except for the ones that don't

591
00:25:29,460 --> 00:25:31,860
actually interact with the routing demon

592
00:25:31,860 --> 00:25:34,980
so a number of commands required

593
00:25:34,980 --> 00:25:36,960
dropping into the bash shell Network

594
00:25:36,960 --> 00:25:40,320
commands ping ARP trace route if you run

595
00:25:40,320 --> 00:25:42,539
those from the RPD shell you'll get

596
00:25:42,539 --> 00:25:45,120
command not found but if you do start

597
00:25:45,120 --> 00:25:47,100
shell you'll get to A bash shell and

598
00:25:47,100 --> 00:25:49,440
then you can run from there it says a

599
00:25:49,440 --> 00:25:51,960
RPD showing you know should bgp summary

600
00:25:51,960 --> 00:25:54,179
runs the same you expect it to and then

601
00:25:54,179 --> 00:25:55,440
the other junos

602
00:25:55,440 --> 00:25:58,440
ping not so much so we need to drop to a

603
00:25:58,440 --> 00:26:00,659
shelter to see that

604
00:26:00,659 --> 00:26:03,600
so how you do that start shell run your

605
00:26:03,600 --> 00:26:05,279
main event

606
00:26:05,279 --> 00:26:07,860
and you can also see if you can actually

607
00:26:07,860 --> 00:26:09,059
run

608
00:26:09,059 --> 00:26:13,440
run Linux style route command so uh you

609
00:26:13,440 --> 00:26:17,220
know IP iprout show will give you the

610
00:26:17,220 --> 00:26:20,100
linux's view of the routing table

611
00:26:20,100 --> 00:26:22,620
let's change to the side so in this

612
00:26:22,620 --> 00:26:25,740
instance there is a directory opt C lab

613
00:26:25,740 --> 00:26:28,799
now the the C lab yaml file is where the

614
00:26:28,799 --> 00:26:31,980
topology gets defined and this is a

615
00:26:31,980 --> 00:26:34,020
fairly uh you know this is a fairly

616
00:26:34,020 --> 00:26:35,700
simple yellow file but just to walk

617
00:26:35,700 --> 00:26:37,980
through it so if if you want to change

618
00:26:37,980 --> 00:26:39,900
the topologies at all this is the file

619
00:26:39,900 --> 00:26:42,059
that you'll do it in so there is a

620
00:26:42,059 --> 00:26:45,360
definition for each node and a link to

621
00:26:45,360 --> 00:26:48,179
its basic configuration file

622
00:26:48,179 --> 00:26:50,279
and also its management so if you want

623
00:26:50,279 --> 00:26:52,799
to create an SSH tunnel between your

624
00:26:52,799 --> 00:26:55,740
desktop and the image this is the IP

625
00:26:55,740 --> 00:26:57,360
address of the tunnel endpoint that you

626
00:26:57,360 --> 00:26:59,719
will use

627
00:26:59,760 --> 00:27:03,659
in your in your SSH tunneling command

628
00:27:03,659 --> 00:27:04,500
um

629
00:27:04,500 --> 00:27:07,320
and these are the definitions for the

630
00:27:07,320 --> 00:27:10,260
sentence and ubuntu's there's there's a

631
00:27:10,260 --> 00:27:13,320
small shell script to configure the host

632
00:27:13,320 --> 00:27:17,640
IP addresses mainly because DHC get you

633
00:27:17,640 --> 00:27:19,200
know running DHCP on the instances

634
00:27:19,200 --> 00:27:22,039
seemed a bit overly complicated so

635
00:27:22,039 --> 00:27:25,260
easier statically once you have your

636
00:27:25,260 --> 00:27:28,860
nodes defined you then Define links in

637
00:27:28,860 --> 00:27:31,440
this section here so what the links do

638
00:27:31,440 --> 00:27:35,340
is you you map endpoints so the COS

639
00:27:35,340 --> 00:27:37,620
instruments connects to the crpd

640
00:27:37,620 --> 00:27:39,539
and

641
00:27:39,539 --> 00:27:41,520
and on and on and this defines this

642
00:27:41,520 --> 00:27:43,740
defines the actual Network topology so

643
00:27:43,740 --> 00:27:45,900
if you want to do anything if you want

644
00:27:45,900 --> 00:27:48,419
to if you want to bring up a different

645
00:27:48,419 --> 00:27:52,500
different OS as one of these endnodes if

646
00:27:52,500 --> 00:27:53,940
you want to try a different instance uh

647
00:27:53,940 --> 00:27:55,200
just get in touch and I can help you

648
00:27:55,200 --> 00:27:57,659
with that walk you through it and every

649
00:27:57,659 --> 00:28:00,000
C lab command is going to

650
00:28:00,000 --> 00:28:02,220
start with is going to require the dash

651
00:28:02,220 --> 00:28:05,640
T tag to define the topology you can

652
00:28:05,640 --> 00:28:07,260
have multiple topologies running at the

653
00:28:07,260 --> 00:28:08,460
same time you just have to Define them

654
00:28:08,460 --> 00:28:11,820
separately let's say I want to log into

655
00:28:11,820 --> 00:28:13,440
an RPD

656
00:28:13,440 --> 00:28:18,299
and I am an adrianos crpd 221 r110

657
00:28:18,299 --> 00:28:20,580
show IP route you know all your basic

658
00:28:20,580 --> 00:28:23,820
Network commands are here your inet 0 B4

659
00:28:23,820 --> 00:28:26,640
V6 table here are here are our bgp

660
00:28:26,640 --> 00:28:28,500
neighbors you see they're pretty new

661
00:28:28,500 --> 00:28:31,260
because we just spun up this instance

662
00:28:31,260 --> 00:28:33,000
show configuration works the way you

663
00:28:33,000 --> 00:28:35,880
expect it to again this is crpd so it

664
00:28:35,880 --> 00:28:38,400
uses you know this is basically RPD

665
00:28:38,400 --> 00:28:41,159
running directly on Linux without the

666
00:28:41,159 --> 00:28:44,340
without the intermediary bsdos that gnos

667
00:28:44,340 --> 00:28:46,919
uses so you'll see that these interfaces

668
00:28:46,919 --> 00:28:47,940
are

669
00:28:47,940 --> 00:28:50,880
our Linux style interface numbers versus

670
00:28:50,880 --> 00:28:52,500
the

671
00:28:52,500 --> 00:28:54,480
ET Dash blah blah that you usually see

672
00:28:54,480 --> 00:28:55,640
with junos

673
00:28:55,640 --> 00:28:58,860
a simple bgp policy

674
00:28:58,860 --> 00:29:01,919
and neighbor statements so

675
00:29:01,919 --> 00:29:05,100
if you know generosity right at home

676
00:29:05,100 --> 00:29:07,919
if you want to stop and restart the

677
00:29:07,919 --> 00:29:09,240
topology

678
00:29:09,240 --> 00:29:12,240
you will use the the C lab destroy

679
00:29:12,240 --> 00:29:16,520
command I am going to kill the topology

680
00:29:17,460 --> 00:29:18,960
and this is something you'll need to do

681
00:29:18,960 --> 00:29:20,520
if you ever want to make changes to it

682
00:29:20,520 --> 00:29:23,760
just use the destroy command

683
00:29:23,760 --> 00:29:27,539
the container so and then to re-deploy

684
00:29:27,539 --> 00:29:28,320
it

685
00:29:28,320 --> 00:29:30,179
you can also use the system CTL we

686
00:29:30,179 --> 00:29:32,580
created a CTL unit file for this

687
00:29:32,580 --> 00:29:35,340
so hackathon underscore C lab so

688
00:29:35,340 --> 00:29:38,220
the the deploy command C lab deploy Dash

689
00:29:38,220 --> 00:29:40,380
t

690
00:29:40,380 --> 00:29:42,320
oh shoot and

691
00:29:42,320 --> 00:29:46,500
throw with systemctl syntax

692
00:29:46,500 --> 00:29:48,299
you'll see that it prints the log and

693
00:29:48,299 --> 00:29:51,059
it'll spun up the okay it did not work

694
00:29:51,059 --> 00:29:54,419
so c-lab deploy is the command you would

695
00:29:54,419 --> 00:29:56,640
use to start up the topology

696
00:29:56,640 --> 00:29:59,640
so not sure why the system CTL didn't

697
00:29:59,640 --> 00:30:00,899
work but

698
00:30:00,899 --> 00:30:03,179
if this doesn't trick then that's that

699
00:30:03,179 --> 00:30:05,279
Chris this is Leo

700
00:30:05,279 --> 00:30:09,659
um would that be a handy uh one page

701
00:30:09,659 --> 00:30:12,299
guide or something that we could use to

702
00:30:12,299 --> 00:30:14,279
refresh ourselves on all of these

703
00:30:14,279 --> 00:30:16,320
commands yeah let me find the let me

704
00:30:16,320 --> 00:30:18,360
find Container Labs documentation

705
00:30:18,360 --> 00:30:20,580
if you want to experiment with us

706
00:30:20,580 --> 00:30:22,260
um you know we've got

707
00:30:22,260 --> 00:30:24,779
we've been using it quite a long time so

708
00:30:24,779 --> 00:30:27,480
uh

709
00:30:27,480 --> 00:30:29,820
so happy happy to help with any obscure

710
00:30:29,820 --> 00:30:31,919
questions you might have about you know

711
00:30:31,919 --> 00:30:33,179
running container lab if you want to run

712
00:30:33,179 --> 00:30:35,940
your own topologies or or customize this

713
00:30:35,940 --> 00:30:37,559
at all um

714
00:30:37,559 --> 00:30:39,299
we are

715
00:30:39,299 --> 00:30:41,399
we can most likely give you give you a

716
00:30:41,399 --> 00:30:43,799
hand yeah the uh the other thing too is

717
00:30:43,799 --> 00:30:45,419
if folks are looking for a team or if

718
00:30:45,419 --> 00:30:47,820
you have teams assembled uh you know

719
00:30:47,820 --> 00:30:50,220
please feel free to hit the slack

720
00:30:50,220 --> 00:30:52,440
um Sean uh Shan I think you were looking

721
00:30:52,440 --> 00:30:53,520
to

722
00:30:53,520 --> 00:30:54,299
um

723
00:30:54,299 --> 00:30:57,360
I get some folks to help out with your

724
00:30:57,360 --> 00:30:58,520
topology

725
00:30:58,520 --> 00:31:02,520
uh project as well uh if you have drop a

726
00:31:02,520 --> 00:31:04,020
couple of slides in the slack as well

727
00:31:04,020 --> 00:31:06,899
and uh and I think an overview there

728
00:31:06,899 --> 00:31:09,419
would be helpful I actually have a

729
00:31:09,419 --> 00:31:12,179
question a quick question

730
00:31:12,179 --> 00:31:15,480
yeah so we have this topology right and

731
00:31:15,480 --> 00:31:17,940
uh we Implement a solution on the given

732
00:31:17,940 --> 00:31:19,860
topology and then do we like

733
00:31:19,860 --> 00:31:22,919
containerize it or like I didn't quite

734
00:31:22,919 --> 00:31:26,039
get that bit well the

735
00:31:26,039 --> 00:31:27,899
the OS instances that are part of

736
00:31:27,899 --> 00:31:29,899
topology are all containers themselves

737
00:31:29,899 --> 00:31:33,000
so you can't run a container on a

738
00:31:33,000 --> 00:31:36,179
container unfortunately uh but if you if

739
00:31:36,179 --> 00:31:39,179
you want to use those as packaging

740
00:31:39,179 --> 00:31:41,820
targets so if you want to test

741
00:31:41,820 --> 00:31:44,039
let's say you've got a tool you want to

742
00:31:44,039 --> 00:31:48,299
pack a job as say an RPM or or a wnd

743
00:31:48,299 --> 00:31:51,539
package and then see if you can install

744
00:31:51,539 --> 00:31:55,559
that on those instances and and and run

745
00:31:55,559 --> 00:31:58,020
them against them run them against the

746
00:31:58,020 --> 00:32:00,659
uh the virtual routers that are

747
00:32:00,659 --> 00:32:02,880
containerized as well that's that's the

748
00:32:02,880 --> 00:32:04,500
use case that we had in mind for this

749
00:32:04,500 --> 00:32:08,039
this particular iteration the topology

750
00:32:08,039 --> 00:32:10,740
I I suppose also folks are comfortable

751
00:32:10,740 --> 00:32:12,600
working in the Ubuntu host environment

752
00:32:12,600 --> 00:32:14,580
right Chris they could oh yeah use a

753
00:32:14,580 --> 00:32:17,159
Docker environment there in order to

754
00:32:17,159 --> 00:32:18,779
containerize something if they were

755
00:32:18,779 --> 00:32:20,399
interested in creating a containerized

756
00:32:20,399 --> 00:32:22,620
package for a particular course of

757
00:32:22,620 --> 00:32:25,320
course as well yeah you can you could

758
00:32:25,320 --> 00:32:27,480
yeah you can install container on the

759
00:32:27,480 --> 00:32:30,480
you know the the instance itself is the

760
00:32:30,480 --> 00:32:32,100
isn't Ubuntu images the one that's

761
00:32:32,100 --> 00:32:33,899
running container lab so you could

762
00:32:33,899 --> 00:32:35,880
certainly run and it's running Docker so

763
00:32:35,880 --> 00:32:37,860
you can absolutely create other

764
00:32:37,860 --> 00:32:40,799
containers that run alongside the

765
00:32:40,799 --> 00:32:43,159
container lab topology

766
00:32:43,159 --> 00:32:46,440
and they will all they actually can

767
00:32:46,440 --> 00:32:48,659
should be able to communicate across the

768
00:32:48,659 --> 00:32:50,820
management interfaces which is why the

769
00:32:50,820 --> 00:32:53,340
IP address is in that in that topology

770
00:32:53,340 --> 00:32:55,500
yaml file are important because that's

771
00:32:55,500 --> 00:32:57,539
if you want a container that is not part

772
00:32:57,539 --> 00:32:59,460
of the image not part of the topology

773
00:32:59,460 --> 00:33:02,279
but communicates with the devices in it

774
00:33:02,279 --> 00:33:06,059
you can use those those endpoints to do

775
00:33:06,059 --> 00:33:07,140
so

776
00:33:07,140 --> 00:33:09,440
thank you

777
00:33:09,440 --> 00:33:12,299
of course I have a question uh that's

778
00:33:12,299 --> 00:33:14,519
most uh regarding to the infrastructure

779
00:33:14,519 --> 00:33:16,260
part since you told you are working with

780
00:33:16,260 --> 00:33:18,480
the Nokia guys like even I work on

781
00:33:18,480 --> 00:33:22,620
container Labs uh for my job and uh have

782
00:33:22,620 --> 00:33:25,200
you tried running uh a container lab

783
00:33:25,200 --> 00:33:27,059
using a kubernetes because it's

784
00:33:27,059 --> 00:33:29,340
everything is container right uh I just

785
00:33:29,340 --> 00:33:30,899
wanted to know about that yeah we

786
00:33:30,899 --> 00:33:33,000
haven't we haven't experimented with the

787
00:33:33,000 --> 00:33:36,059
kubernetes based uh deployment uh

788
00:33:36,059 --> 00:33:38,220
that is definitely something that would

789
00:33:38,220 --> 00:33:41,100
would be interesting to try

790
00:33:41,100 --> 00:33:42,720
because right right now we're building

791
00:33:42,720 --> 00:33:45,299
these right now you know I build these

792
00:33:45,299 --> 00:33:47,940
more or less manually so you know better

793
00:33:47,940 --> 00:33:50,640
better ways to automate the the

794
00:33:50,640 --> 00:33:53,039
deployment of these yeah we create a you

795
00:33:53,039 --> 00:33:54,899
know I create it manually and then

796
00:33:54,899 --> 00:33:58,140
create an Ami and then use use a launch

797
00:33:58,140 --> 00:34:01,679
template to to spin up copies of it so

798
00:34:01,679 --> 00:34:03,480
uh but you know something something

799
00:34:03,480 --> 00:34:06,000
using eks may be interesting uh that

800
00:34:06,000 --> 00:34:07,679
might be that might be something to work

801
00:34:07,679 --> 00:34:13,020
on next weekend even yeah yeah also

802
00:34:13,520 --> 00:34:17,040
on Wednesday at nanog there will be a

803
00:34:17,040 --> 00:34:19,199
presentation by some folks at Google

804
00:34:19,199 --> 00:34:22,199
regarding uh KNE which is kubernetes

805
00:34:22,199 --> 00:34:24,659
Network emulation environment uh which

806
00:34:24,659 --> 00:34:26,879
is it provides an execution environment

807
00:34:26,879 --> 00:34:28,679
very much like what container lab

808
00:34:28,679 --> 00:34:31,440
provides for folks who are kind of uh

809
00:34:31,440 --> 00:34:33,540
you know kubernetes oriented

810
00:34:33,540 --> 00:34:34,980
I didn't guess the name like what's the

811
00:34:34,980 --> 00:34:36,899
name of the product it's called KNE

812
00:34:36,899 --> 00:34:38,699
they'll be presenting on it on Wednesday

813
00:34:38,699 --> 00:34:41,159
at nanog yeah they might I I just want

814
00:34:41,159 --> 00:34:43,679
to chime in the the main issue trying to

815
00:34:43,679 --> 00:34:48,000
launch uh container lab in kubernetes

816
00:34:48,000 --> 00:34:50,820
would be the fact that right now

817
00:34:50,820 --> 00:34:53,219
container lab uses virtual ethernet

818
00:34:53,219 --> 00:34:54,899
pairs

819
00:34:54,899 --> 00:34:58,140
to do like the wiring

820
00:34:58,140 --> 00:35:00,180
so if you do that in kubernetes you

821
00:35:00,180 --> 00:35:01,500
essentially need to have a specialized

822
00:35:01,500 --> 00:35:02,700
cni

823
00:35:02,700 --> 00:35:05,400
to replace that right and so that's

824
00:35:05,400 --> 00:35:07,680
that's the like the big amount of work

825
00:35:07,680 --> 00:35:09,720
that needs to happen if you for some

826
00:35:09,720 --> 00:35:12,839
reason want to Port container lab to

827
00:35:12,839 --> 00:35:14,660
support kubernetes

828
00:35:14,660 --> 00:35:18,480
or you just look at the Kenny really

829
00:35:18,480 --> 00:35:21,660
yeah yeah there are two like two cnis

830
00:35:21,660 --> 00:35:25,440
like NSM and mesh net yeah I was bugging

831
00:35:25,440 --> 00:35:27,300
uh checking through that and that's why

832
00:35:27,300 --> 00:35:30,240
I I exactly so the knee is actually

833
00:35:30,240 --> 00:35:31,940
using meshnet

834
00:35:31,940 --> 00:35:33,619
okay

835
00:35:33,619 --> 00:35:38,060
yes I would like to learn more

836
00:35:38,280 --> 00:35:40,400
either on Wednesday Chris

837
00:35:40,400 --> 00:35:43,980
I'll be there presenting as well Alex

838
00:35:43,980 --> 00:35:47,040
okay you are the developer of Kane no no

839
00:35:47,040 --> 00:35:50,220
but uh you know my company works a lot

840
00:35:50,220 --> 00:35:53,520
um in k e environments so we I can

841
00:35:53,520 --> 00:35:55,560
definitely share a lot of experience

842
00:35:55,560 --> 00:35:59,760
yeah sure thanks question for Leo if

843
00:35:59,760 --> 00:36:01,200
you're still on

844
00:36:01,200 --> 00:36:03,540
um about uh getting involved with the

845
00:36:03,540 --> 00:36:05,579
the peering DB

846
00:36:05,579 --> 00:36:09,180
um my uh coding skills are on the the

847
00:36:09,180 --> 00:36:11,099
weaker side and you mentioned the the

848
00:36:11,099 --> 00:36:12,540
testing and

849
00:36:12,540 --> 00:36:14,820
um uh documentation side might be

850
00:36:14,820 --> 00:36:16,380
somewhere

851
00:36:16,380 --> 00:36:19,020
um you'd be looking for help

852
00:36:19,020 --> 00:36:22,079
um would you be looking for that uh just

853
00:36:22,079 --> 00:36:23,099
as

854
00:36:23,099 --> 00:36:23,640
um

855
00:36:23,640 --> 00:36:27,660
kind of fork and pull requests to the

856
00:36:27,660 --> 00:36:30,540
the GitHub repo or

857
00:36:30,540 --> 00:36:33,420
um something like that and uh are you

858
00:36:33,420 --> 00:36:35,339
gonna be I guess coordinating that

859
00:36:35,339 --> 00:36:39,480
through the um the slack and

860
00:36:39,480 --> 00:36:41,640
um will there be like a channel

861
00:36:41,640 --> 00:36:43,619
specifically for

862
00:36:43,619 --> 00:36:47,400
um the the peering DB uh team so to

863
00:36:47,400 --> 00:36:49,920
speak sort of yes to all of that

864
00:36:49,920 --> 00:36:54,660
um yes that is a peeringdb channel

865
00:36:54,660 --> 00:36:58,020
um yes you don't need to be

866
00:36:58,020 --> 00:37:01,740
um a software developer to help if you

867
00:37:01,740 --> 00:37:05,460
can follow the instructions and try to

868
00:37:05,460 --> 00:37:07,920
work out what breaks

869
00:37:07,920 --> 00:37:10,320
um then that is in and of itself helpful

870
00:37:10,320 --> 00:37:12,119
because

871
00:37:12,119 --> 00:37:14,820
um that means that we can either go and

872
00:37:14,820 --> 00:37:16,980
say oh there's a dependency and we need

873
00:37:16,980 --> 00:37:19,140
to document it and then when we put in

874
00:37:19,140 --> 00:37:20,520
the dependency

875
00:37:20,520 --> 00:37:24,480
the package installs properly or we can

876
00:37:24,480 --> 00:37:28,440
go and eventually build some automation

877
00:37:28,440 --> 00:37:30,660
that will go and take a look at your

878
00:37:30,660 --> 00:37:32,579
system and go and say you don't have

879
00:37:32,579 --> 00:37:34,140
these things we need to pull them in

880
00:37:34,140 --> 00:37:37,859
pull them in and then install it for you

881
00:37:37,859 --> 00:37:40,619
and one of the things that we're sort of

882
00:37:40,619 --> 00:37:43,079
thinking about is for instance if you're

883
00:37:43,079 --> 00:37:45,300
installing it on a laptop

884
00:37:45,300 --> 00:37:46,740
um you might not have a database

885
00:37:46,740 --> 00:37:49,740
installed already and therefore it could

886
00:37:49,740 --> 00:37:52,020
give you some options regarding

887
00:37:52,020 --> 00:37:56,339
databases very much whatever you uh feel

888
00:37:56,339 --> 00:37:59,040
you can contribute we would be glad to

889
00:37:59,040 --> 00:38:02,820
have that and I am very happy to chat

890
00:38:02,820 --> 00:38:05,339
with you during the week or of course I

891
00:38:05,339 --> 00:38:07,320
will be there in Hollywood and we can

892
00:38:07,320 --> 00:38:09,780
sit down together and talk about what we

893
00:38:09,780 --> 00:38:13,079
want to test and do very cool looking

894
00:38:13,079 --> 00:38:15,780
forward to it I'll uh I just requested

895
00:38:15,780 --> 00:38:17,880
Thursday and Friday off to try to get up

896
00:38:17,880 --> 00:38:20,700
to speed on uh various projects that

897
00:38:20,700 --> 00:38:22,859
have been mentioned and looking forward

898
00:38:22,859 --> 00:38:25,619
to joining in Hollywood uh be a little

899
00:38:25,619 --> 00:38:27,359
late for the Saturday session but

900
00:38:27,359 --> 00:38:29,460
looking forward to it brilliant thank

901
00:38:29,460 --> 00:38:33,480
you uh any additional questions or items

902
00:38:33,480 --> 00:38:35,880
folks would like to bring up I'll I'll

903
00:38:35,880 --> 00:38:38,700
bring one thing sorry I was late to the

904
00:38:38,700 --> 00:38:40,859
game uh today so

905
00:38:40,859 --> 00:38:42,420
um as we're going to be presenting the

906
00:38:42,420 --> 00:38:44,940
open traffic generator API

907
00:38:44,940 --> 00:38:48,000
um on Wednesday one of the things that I

908
00:38:48,000 --> 00:38:50,099
would propose for anyone who is looking

909
00:38:50,099 --> 00:38:52,500
for a cool project to work on I can help

910
00:38:52,500 --> 00:38:54,960
you put together a continuous

911
00:38:54,960 --> 00:38:56,220
integration

912
00:38:56,220 --> 00:38:58,680
uh like like an example

913
00:38:58,680 --> 00:39:01,560
where you know you want to test some

914
00:39:01,560 --> 00:39:04,619
Network images maybe in container lab or

915
00:39:04,619 --> 00:39:07,260
something like that with a free version

916
00:39:07,260 --> 00:39:10,680
of traffic generator so you can push you

917
00:39:10,680 --> 00:39:13,440
know packets you can you can maybe see

918
00:39:13,440 --> 00:39:15,900
if you can you know bring up protocols

919
00:39:15,900 --> 00:39:18,240
inject routes do all that stuff and

920
00:39:18,240 --> 00:39:20,339
let's say GitHub actions

921
00:39:20,339 --> 00:39:22,859
so that you can see if maybe like a new

922
00:39:22,859 --> 00:39:25,859
version of frr fails in your scenario or

923
00:39:25,859 --> 00:39:27,740
passes you know something broke and

924
00:39:27,740 --> 00:39:29,940
automatically you know those kind of

925
00:39:29,940 --> 00:39:32,400
projects I would be there available to

926
00:39:32,400 --> 00:39:35,820
help you know set them up and contribute

927
00:39:35,820 --> 00:39:38,040
if needed Alex that's the question like

928
00:39:38,040 --> 00:39:40,500
uh you were telling using the traffic

929
00:39:40,500 --> 00:39:42,780
injector in container lab is that what

930
00:39:42,780 --> 00:39:46,020
you meant yes that's correct we actually

931
00:39:46,020 --> 00:39:48,900
from where I'm coming from

932
00:39:48,900 --> 00:39:49,859
um it's part of the open traffic

933
00:39:49,859 --> 00:39:53,820
generator project we have a free traffic

934
00:39:53,820 --> 00:39:56,160
generators that can run inside container

935
00:39:56,160 --> 00:39:58,680
lab and we there is a public API how to

936
00:39:58,680 --> 00:40:00,480
communicate with them there are examples

937
00:40:00,480 --> 00:40:03,380
I'm actually I'm planning to push a new

938
00:40:03,380 --> 00:40:06,839
website hopefully tonight maybe over the

939
00:40:06,839 --> 00:40:07,740
weekend

940
00:40:07,740 --> 00:40:09,780
with all that information and I'll share

941
00:40:09,780 --> 00:40:12,300
that over the slack channel so you guys

942
00:40:12,300 --> 00:40:15,060
can take a look and see if you can maybe

943
00:40:15,060 --> 00:40:17,700
take one of the examples and modify it

944
00:40:17,700 --> 00:40:20,520
to to your needs that sounds great yeah

945
00:40:20,520 --> 00:40:21,660
if you could share that with a slack

946
00:40:21,660 --> 00:40:24,240
that'd be great and also I seem to

947
00:40:24,240 --> 00:40:27,720
recall that xcc was accessible via

948
00:40:27,720 --> 00:40:29,700
um kind of a you know like a ghcr

949
00:40:29,700 --> 00:40:31,380
endpoint or something along those lines

950
00:40:31,380 --> 00:40:33,720
or a dockering like for folks to be able

951
00:40:33,720 --> 00:40:36,180
to to integrate into their environments

952
00:40:36,180 --> 00:40:40,079
right right it's it's a Docker and it

953
00:40:40,079 --> 00:40:43,260
runs in container lab among other things

954
00:40:43,260 --> 00:40:46,260
yeah so it has an API so you can like

955
00:40:46,260 --> 00:40:48,859
run a go or python script against it

956
00:40:48,859 --> 00:40:51,960
right yeah that that might actually be a

957
00:40:51,960 --> 00:40:55,260
useful addition to uh

958
00:40:55,260 --> 00:40:58,079
yeah feature uh you know infrastructure

959
00:40:58,079 --> 00:41:00,180
topologies or you know if you could

960
00:41:00,180 --> 00:41:02,220
provide folks with pointers on how they

961
00:41:02,220 --> 00:41:03,660
could stick that onto the existing

962
00:41:03,660 --> 00:41:07,619
infrastructure topology yeah okay yeah

963
00:41:07,619 --> 00:41:09,540
let me let me take that action and I'll

964
00:41:09,540 --> 00:41:12,619
uh put to get an example using the

965
00:41:12,619 --> 00:41:16,079
hackathon setup all right right on thank

966
00:41:16,079 --> 00:41:17,880
you if there's nothing else we can

967
00:41:17,880 --> 00:41:20,400
probably stop the recording gallery and

968
00:41:20,400 --> 00:41:22,680
uh encourage folks to you know bring

969
00:41:22,680 --> 00:41:25,759
things up on the slack

970
00:41:26,760 --> 00:41:29,720
foreign

