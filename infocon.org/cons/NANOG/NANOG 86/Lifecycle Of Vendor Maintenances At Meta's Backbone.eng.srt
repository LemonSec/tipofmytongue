1
00:00:00,000 --> 00:00:00,060
[Music]

2
00:00:00,060 --> 00:00:02,210
foreign

3
00:00:02,210 --> 00:00:05,939
[Music]

4
00:00:06,140 --> 00:00:09,660
so next up I'd like to introduce our

5
00:00:09,660 --> 00:00:10,940
next speaker

6
00:00:10,940 --> 00:00:14,340
nerage ball who will be presenting a

7
00:00:14,340 --> 00:00:16,619
life cycle of vendor maintenancies at

8
00:00:16,619 --> 00:00:20,039
meta's backbone measures is a production

9
00:00:20,039 --> 00:00:22,380
network engineer at meta and traveled

10
00:00:22,380 --> 00:00:24,480
from San Francisco Bay Area to join us

11
00:00:24,480 --> 00:00:25,320
today

12
00:00:25,320 --> 00:00:27,359
this is the first time nerai is speaking

13
00:00:27,359 --> 00:00:30,000
at nanog and it's a pleasure to have him

14
00:00:30,000 --> 00:00:33,059
speaking with us today welcome Niraj

15
00:00:33,059 --> 00:00:35,959
thank you

16
00:00:36,060 --> 00:00:37,520
[Applause]

17
00:00:37,520 --> 00:00:40,880
this is next

18
00:00:42,840 --> 00:00:44,879
hi good afternoon everyone I am Niraj

19
00:00:44,879 --> 00:00:46,620
bahal I am a production network engineer

20
00:00:46,620 --> 00:00:49,379
in the backbone IP team at meta I'm here

21
00:00:49,379 --> 00:00:52,379
today to talk about how we do external

22
00:00:52,379 --> 00:00:54,120
network maintenances in our backboard

23
00:00:54,120 --> 00:00:55,800
Networks

24
00:00:55,800 --> 00:00:57,539
for this talk we will focus on

25
00:00:57,539 --> 00:00:59,640
maintenances that impact our Optical

26
00:00:59,640 --> 00:01:01,399
infrastructure

27
00:01:01,399 --> 00:01:04,500
there is a huge group of people in meta

28
00:01:04,500 --> 00:01:06,299
that work on the space and I am merely

29
00:01:06,299 --> 00:01:09,540
the one representing our work

30
00:01:09,540 --> 00:01:11,100
let's go over the flow of the

31
00:01:11,100 --> 00:01:13,380
presentation we'll start with an

32
00:01:13,380 --> 00:01:15,659
introduction to our backboard networks

33
00:01:15,659 --> 00:01:17,040
which is the space in which these

34
00:01:17,040 --> 00:01:18,960
maintenances take place to get a high

35
00:01:18,960 --> 00:01:20,580
level overview of how the networks look

36
00:01:20,580 --> 00:01:22,799
like we'll then go over why we are doing

37
00:01:22,799 --> 00:01:24,840
this which is a problem statement

38
00:01:24,840 --> 00:01:27,119
the middle section of the presentation

39
00:01:27,119 --> 00:01:29,640
will talk about the services involved in

40
00:01:29,640 --> 00:01:31,259
this space how they interact with each

41
00:01:31,259 --> 00:01:33,600
other the issues observed and some

42
00:01:33,600 --> 00:01:35,100
improvements we drove to address those

43
00:01:35,100 --> 00:01:36,000
issues

44
00:01:36,000 --> 00:01:39,780
the last section of this talk would be

45
00:01:39,780 --> 00:01:42,720
more of how we as a networking industry

46
00:01:42,720 --> 00:01:45,479
can collaborate Drive improvements and

47
00:01:45,479 --> 00:01:47,400
possibly standardization in this space

48
00:01:47,400 --> 00:01:49,079
Also

49
00:01:49,079 --> 00:01:52,140
so let's get started

50
00:01:52,140 --> 00:01:54,720
so this is like a 1 million foot view of

51
00:01:54,720 --> 00:01:57,360
meta's backboard Networks

52
00:01:57,360 --> 00:01:59,159
given our reach and the amount of

53
00:01:59,159 --> 00:02:00,840
traffic we have our networks are Global

54
00:02:00,840 --> 00:02:03,119
which means they are spread across the

55
00:02:03,119 --> 00:02:05,399
globe broadly we have three types of

56
00:02:05,399 --> 00:02:06,899
networks on which these maintenances

57
00:02:06,899 --> 00:02:08,038
take place

58
00:02:08,038 --> 00:02:09,780
the first network is a network which

59
00:02:09,780 --> 00:02:11,400
connects data center regions to each

60
00:02:11,400 --> 00:02:13,560
other it carries data center to Data

61
00:02:13,560 --> 00:02:16,200
Center Traffic the next network is which

62
00:02:16,200 --> 00:02:18,180
connects remote sites we call them Pops

63
00:02:18,180 --> 00:02:20,220
to Data Center regions

64
00:02:20,220 --> 00:02:21,959
and the third network is the internal

65
00:02:21,959 --> 00:02:23,819
one it resides inside pops we call it as

66
00:02:23,819 --> 00:02:24,780
Edge

67
00:02:24,780 --> 00:02:28,200
it has a CDN type of services this is

68
00:02:28,200 --> 00:02:30,060
where we peer with the internet and this

69
00:02:30,060 --> 00:02:31,620
is where this pop Network connects to

70
00:02:31,620 --> 00:02:34,520
the backboard also

71
00:02:34,739 --> 00:02:38,580
so as we can see we have different types

72
00:02:38,580 --> 00:02:40,860
of networks each of these networks is

73
00:02:40,860 --> 00:02:43,080
actually designed very differently it

74
00:02:43,080 --> 00:02:45,300
has different thresholds it runs

75
00:02:45,300 --> 00:02:46,739
different routing protocols so totally

76
00:02:46,739 --> 00:02:47,940
different design

77
00:02:47,940 --> 00:02:50,819
and I'll go over in the later part of

78
00:02:50,819 --> 00:02:53,040
the presentation how we accommodate for

79
00:02:53,040 --> 00:02:56,879
this and what challenges this brings

80
00:02:56,879 --> 00:02:59,099
Additionally the way our Optical

81
00:02:59,099 --> 00:03:01,620
infrastructure is actually laid out it's

82
00:03:01,620 --> 00:03:03,720
a shared resource quote unquote it's

83
00:03:03,720 --> 00:03:06,599
nsrlg which means that one maintenance

84
00:03:06,599 --> 00:03:09,300
can impact different types of Networks

85
00:03:09,300 --> 00:03:11,940
because as we can say our data center or

86
00:03:11,940 --> 00:03:13,319
Data Center and pop to Data Center

87
00:03:13,319 --> 00:03:15,420
Networks have more long-haul

88
00:03:15,420 --> 00:03:17,099
connectivity it is totally possible that

89
00:03:17,099 --> 00:03:19,200
a maintenance can impact both these

90
00:03:19,200 --> 00:03:21,360
networks and it may be safe in one but

91
00:03:21,360 --> 00:03:22,739
it may not be safe in the other network

92
00:03:22,739 --> 00:03:24,900
and these are some use cases we have to

93
00:03:24,900 --> 00:03:27,720
deal with and I'll go over again how we

94
00:03:27,720 --> 00:03:30,120
address those in the later part of the

95
00:03:30,120 --> 00:03:32,540
presentation

96
00:03:32,640 --> 00:03:34,440
so let's talk about why we are doing

97
00:03:34,440 --> 00:03:36,300
this the first reason is very obvious

98
00:03:36,300 --> 00:03:38,819
but is the most important driver for us

99
00:03:38,819 --> 00:03:41,819
at our scale we cannot have humans

100
00:03:41,819 --> 00:03:43,379
parsing these maintenances and

101
00:03:43,379 --> 00:03:44,760
scheduling them

102
00:03:44,760 --> 00:03:47,040
we need to have services to do this we

103
00:03:47,040 --> 00:03:49,680
have thousands of fiber capacity which

104
00:03:49,680 --> 00:03:53,340
connect these networks and we rely on

105
00:03:53,340 --> 00:03:55,140
100 vendors to make that possible lots

106
00:03:55,140 --> 00:03:57,060
of vendors which results in a lot of

107
00:03:57,060 --> 00:03:58,980
lots of notifications

108
00:03:58,980 --> 00:04:00,900
and translates to a lot of plan

109
00:04:00,900 --> 00:04:03,360
maintenances in our Network

110
00:04:03,360 --> 00:04:05,640
thus we require automation

111
00:04:05,640 --> 00:04:08,940
secondly we need to balance between

112
00:04:08,940 --> 00:04:10,920
these plan maintenances

113
00:04:10,920 --> 00:04:12,659
the reality of a production Network

114
00:04:12,659 --> 00:04:16,079
which always has outages and ensure that

115
00:04:16,079 --> 00:04:17,820
these maintenances which are really

116
00:04:17,820 --> 00:04:19,500
important because in a way they improve

117
00:04:19,500 --> 00:04:21,660
the reliability of the network can be

118
00:04:21,660 --> 00:04:23,460
completed timely without

119
00:04:23,460 --> 00:04:25,500
having any degraded performance to the

120
00:04:25,500 --> 00:04:27,419
traffic these networks serve

121
00:04:27,419 --> 00:04:29,040
so there needs to be a sweet spot

122
00:04:29,040 --> 00:04:31,919
between availability and the safety of

123
00:04:31,919 --> 00:04:33,540
these operations

124
00:04:33,540 --> 00:04:35,400
the third reason is kind of a

125
00:04:35,400 --> 00:04:37,380
combination of both of them but the

126
00:04:37,380 --> 00:04:38,639
reason I have called it out separately

127
00:04:38,639 --> 00:04:40,680
is because

128
00:04:40,680 --> 00:04:44,280
at our scale our services are at a very

129
00:04:44,280 --> 00:04:46,620
critical path they directly interact

130
00:04:46,620 --> 00:04:48,240
with the production Network and we do

131
00:04:48,240 --> 00:04:51,120
need to ensure that any bugs or any

132
00:04:51,120 --> 00:04:53,220
issues or any risks seen by these

133
00:04:53,220 --> 00:04:55,740
services are escalated appropriately and

134
00:04:55,740 --> 00:04:59,060
we don't witness it in production

135
00:04:59,479 --> 00:05:02,580
okay so let's understand the services

136
00:05:02,580 --> 00:05:04,259
involved in this space

137
00:05:04,259 --> 00:05:06,360
how they interact with each other and

138
00:05:06,360 --> 00:05:08,400
the way we'll do this is by going over

139
00:05:08,400 --> 00:05:09,900
an end-to-end flow of a maintenance

140
00:05:09,900 --> 00:05:11,820
right from the time we get notified

141
00:05:11,820 --> 00:05:14,940
about it till the time is complete

142
00:05:14,940 --> 00:05:16,860
we will first start with the use case

143
00:05:16,860 --> 00:05:19,979
where an entire maintenance is completed

144
00:05:19,979 --> 00:05:22,440
without any risks highlighted by the

145
00:05:22,440 --> 00:05:25,080
services or any failures in the service

146
00:05:25,080 --> 00:05:27,840
and the current state of the network can

147
00:05:27,840 --> 00:05:29,220
actually consume that maintenance

148
00:05:29,220 --> 00:05:30,900
without any problems

149
00:05:30,900 --> 00:05:33,600
before I get into this section I would

150
00:05:33,600 --> 00:05:35,220
like to establish some terminology which

151
00:05:35,220 --> 00:05:37,199
would be useful for the subsequent part

152
00:05:37,199 --> 00:05:38,820
of the presentation

153
00:05:38,820 --> 00:05:41,100
when we say external maintenance is and

154
00:05:41,100 --> 00:05:42,479
external vendors we are talking about

155
00:05:42,479 --> 00:05:44,160
maintenances which are scheduled by

156
00:05:44,160 --> 00:05:46,259
vendors with which say meta leases

157
00:05:46,259 --> 00:05:48,419
capacity

158
00:05:48,419 --> 00:05:50,460
and when I'm talking about internal

159
00:05:50,460 --> 00:05:52,020
maintenances these are maintenances

160
00:05:52,020 --> 00:05:54,000
which are scheduled by internal

161
00:05:54,000 --> 00:05:56,699
employees at meta such as a forklift or

162
00:05:56,699 --> 00:05:59,039
a migration and the reason there is this

163
00:05:59,039 --> 00:06:01,320
distinguished like I have distinguished

164
00:06:01,320 --> 00:06:06,060
it is because typically we have more uh

165
00:06:06,060 --> 00:06:07,979
ability on the reschedule of internal

166
00:06:07,979 --> 00:06:10,199
maintenances because we are scheduling

167
00:06:10,199 --> 00:06:11,160
them

168
00:06:11,160 --> 00:06:14,220
okay so let's get started I'll go

169
00:06:14,220 --> 00:06:15,900
through each box and I'll talk about the

170
00:06:15,900 --> 00:06:17,400
services in that so

171
00:06:17,400 --> 00:06:20,400
here this is basically the process where

172
00:06:20,400 --> 00:06:23,400
the vendor notifies us via email to the

173
00:06:23,400 --> 00:06:24,960
email address we provided them about the

174
00:06:24,960 --> 00:06:28,560
maintenance it will basically consist of

175
00:06:28,560 --> 00:06:30,180
info which is required to schedule a

176
00:06:30,180 --> 00:06:32,520
maintenance such as start time and time

177
00:06:32,520 --> 00:06:35,220
what is the impact and what are the

178
00:06:35,220 --> 00:06:37,139
services which are impacted typically

179
00:06:37,139 --> 00:06:39,419
circuit IDs in this case

180
00:06:39,419 --> 00:06:42,180
this will make it to a mailbox we will

181
00:06:42,180 --> 00:06:44,940
have a service which is going to go

182
00:06:44,940 --> 00:06:46,800
through this mailbox it will go through

183
00:06:46,800 --> 00:06:48,600
the emails of this mailbox and it will

184
00:06:48,600 --> 00:06:51,419
try to get the information required to

185
00:06:51,419 --> 00:06:54,180
schedule a maintenance so start time and

186
00:06:54,180 --> 00:06:56,100
time it will get the external ideas it

187
00:06:56,100 --> 00:06:58,139
will try to convert it into our internal

188
00:06:58,139 --> 00:07:00,000
structs to schedule it

189
00:07:00,000 --> 00:07:02,479
it will then

190
00:07:02,479 --> 00:07:06,660
if it works okay it will then call uh

191
00:07:06,660 --> 00:07:08,699
this particular piece which is

192
00:07:08,699 --> 00:07:10,380
maintenance orchestrator

193
00:07:10,380 --> 00:07:12,180
let's talk about this for a second

194
00:07:12,180 --> 00:07:15,960
because this is sort of the heart and

195
00:07:15,960 --> 00:07:18,600
soul of this entire flow because it has

196
00:07:18,600 --> 00:07:21,180
a lot of responsibility it plays a very

197
00:07:21,180 --> 00:07:23,940
pivotal role it is responsible for the

198
00:07:23,940 --> 00:07:25,500
execution of the maintenance from the

199
00:07:25,500 --> 00:07:29,160
time it starts it to completing it

200
00:07:29,160 --> 00:07:32,580
every maintenance we perform internal or

201
00:07:32,580 --> 00:07:34,740
external actually goes to this

202
00:07:34,740 --> 00:07:36,960
orchestrator and we'll talk about why

203
00:07:36,960 --> 00:07:38,880
that is important later

204
00:07:38,880 --> 00:07:42,360
but what that means is this orchestrator

205
00:07:42,360 --> 00:07:45,120
has the view of the network in a sense

206
00:07:45,120 --> 00:07:46,560
it even has the future view of the

207
00:07:46,560 --> 00:07:47,819
network because it knows the maintenance

208
00:07:47,819 --> 00:07:50,340
which are going to be performed

209
00:07:50,340 --> 00:07:53,340
because of its critical functionality it

210
00:07:53,340 --> 00:07:54,900
relies on some other services for

211
00:07:54,900 --> 00:07:57,360
certain functions such as it will rely

212
00:07:57,360 --> 00:08:00,360
on safety checks to determine if a

213
00:08:00,360 --> 00:08:02,280
maintenance is safe to be performed in

214
00:08:02,280 --> 00:08:04,259
the network now we do different types of

215
00:08:04,259 --> 00:08:06,120
checks there we'll talk about those but

216
00:08:06,120 --> 00:08:08,280
broadly is it safe to be performed in

217
00:08:08,280 --> 00:08:11,220
the future state or in the current state

218
00:08:11,220 --> 00:08:13,979
it then will actually rely on another

219
00:08:13,979 --> 00:08:16,319
service we are calling it traffic shifts

220
00:08:16,319 --> 00:08:18,900
to actually move traffic away from the

221
00:08:18,900 --> 00:08:20,879
impacted circuits of this network so

222
00:08:20,879 --> 00:08:23,400
this is where the differentiation of us

223
00:08:23,400 --> 00:08:25,199
using different networks comes into play

224
00:08:25,199 --> 00:08:27,720
because if the maintenance is impacting

225
00:08:27,720 --> 00:08:29,819
a network which is say running an igp an

226
00:08:29,819 --> 00:08:32,039
Isis Network the way we would like to

227
00:08:32,039 --> 00:08:33,659
move traffic away before the maintenance

228
00:08:33,659 --> 00:08:35,760
so that it's not impacted and it does

229
00:08:35,760 --> 00:08:37,799
not cause losses by increasing the

230
00:08:37,799 --> 00:08:40,320
metric but if this was a BJP Network we

231
00:08:40,320 --> 00:08:42,240
would have to change the routing policy

232
00:08:42,240 --> 00:08:45,680
accordingly to move traffic away

233
00:08:46,080 --> 00:08:49,080
once these checks are completed it will

234
00:08:49,080 --> 00:08:50,399
start the maintenance and it will

235
00:08:50,399 --> 00:08:52,019
monitor the window

236
00:08:52,019 --> 00:08:55,140
now before it actually closes the

237
00:08:55,140 --> 00:08:56,760
maintenance it will again call these

238
00:08:56,760 --> 00:08:57,660
services

239
00:08:57,660 --> 00:08:59,760
this time in a slightly different role

240
00:08:59,760 --> 00:09:02,160
safety checks this time would actually

241
00:09:02,160 --> 00:09:04,860
play the role of like health checks we

242
00:09:04,860 --> 00:09:06,600
want to make sure the capacity we are

243
00:09:06,600 --> 00:09:08,160
putting back in production is healthy

244
00:09:08,160 --> 00:09:10,440
some of the checks we do here are like

245
00:09:10,440 --> 00:09:13,140
is the is the circuit flapping is it

246
00:09:13,140 --> 00:09:15,839
down are the corresponding protocols

247
00:09:15,839 --> 00:09:18,180
which run through that circuit up

248
00:09:18,180 --> 00:09:20,339
and next we will rely on traffic shifts

249
00:09:20,339 --> 00:09:22,320
to put back the production config

250
00:09:22,320 --> 00:09:24,300
so that these circuits can be part of

251
00:09:24,300 --> 00:09:25,860
the network of the production Network

252
00:09:25,860 --> 00:09:28,680
and start taking traffic

253
00:09:28,680 --> 00:09:31,800
and when this entire flow is completed

254
00:09:31,800 --> 00:09:33,540
the maintenance is marked as complete

255
00:09:33,540 --> 00:09:35,459
and there is no escalations and there's

256
00:09:35,459 --> 00:09:37,320
no human involvement

257
00:09:37,320 --> 00:09:39,000
and when there is no human involvement

258
00:09:39,000 --> 00:09:42,800
this is how our life looks like

259
00:09:43,019 --> 00:09:45,600
but unfortunately this is not how a life

260
00:09:45,600 --> 00:09:48,000
always looks like so let's talk about

261
00:09:48,000 --> 00:09:50,820
some failure scenarios in this flow and

262
00:09:50,820 --> 00:09:53,640
let's discuss how we address those uh

263
00:09:53,640 --> 00:09:55,500
keeping reliability in mind

264
00:09:55,500 --> 00:09:57,180
so the first scenario we will talk about

265
00:09:57,180 --> 00:10:01,880
is a failure in maintenance parsing

266
00:10:01,980 --> 00:10:04,680
so as we can see we do escalate to

267
00:10:04,680 --> 00:10:05,519
humans

268
00:10:05,519 --> 00:10:08,519
but let's talk about why we do this

269
00:10:08,519 --> 00:10:11,220
it is our desire to keep track of every

270
00:10:11,220 --> 00:10:12,540
maintenance which is happening in our

271
00:10:12,540 --> 00:10:16,800
Network this allows us to know of

272
00:10:16,800 --> 00:10:18,899
instances where a maintenance could

273
00:10:18,899 --> 00:10:22,380
cause more than the desired impact and

274
00:10:22,380 --> 00:10:24,779
result in traffic loss output a given

275
00:10:24,779 --> 00:10:26,640
portion of the network in Risk

276
00:10:26,640 --> 00:10:28,800
the more advanced notice we have about

277
00:10:28,800 --> 00:10:31,800
this the faster we can actually address

278
00:10:31,800 --> 00:10:35,040
it and prepare for the risk of mitigated

279
00:10:35,040 --> 00:10:37,560
few reasons we have seen or we regularly

280
00:10:37,560 --> 00:10:40,260
see this happen is when the parsing

281
00:10:40,260 --> 00:10:42,600
logic between the vendor changes like

282
00:10:42,600 --> 00:10:45,000
even within the vendor we can actually

283
00:10:45,000 --> 00:10:47,399
save the person which is sending the

284
00:10:47,399 --> 00:10:48,959
email has changed because they are

285
00:10:48,959 --> 00:10:51,180
parsing logic changes but changes in

286
00:10:51,180 --> 00:10:53,519
passing logic is one another use case

287
00:10:53,519 --> 00:10:55,140
may have seen this happen is like we

288
00:10:55,140 --> 00:10:56,760
have onboarded a new vendor and there is

289
00:10:56,760 --> 00:10:58,980
no parsing logic currently in place for

290
00:10:58,980 --> 00:11:02,640
us so we don't our default passing logic

291
00:11:02,640 --> 00:11:04,079
doesn't match we don't have a custom

292
00:11:04,079 --> 00:11:05,519
Logic for it

293
00:11:05,519 --> 00:11:07,680
and so our maintenance parcel will fail

294
00:11:07,680 --> 00:11:09,600
safe and it will escalate it to the

295
00:11:09,600 --> 00:11:11,040
human

296
00:11:11,040 --> 00:11:12,720
there are also some other cases where

297
00:11:12,720 --> 00:11:14,339
like circuit IDs don't make sense the

298
00:11:14,339 --> 00:11:16,680
time zone is wrong and because a lot of

299
00:11:16,680 --> 00:11:18,120
these are human generated there are

300
00:11:18,120 --> 00:11:19,140
typos

301
00:11:19,140 --> 00:11:21,899
so these are some of the reasons why

302
00:11:21,899 --> 00:11:23,339
humans get involved and they're

303
00:11:23,339 --> 00:11:26,220
escalated and based on the type of

304
00:11:26,220 --> 00:11:27,959
failure

305
00:11:27,959 --> 00:11:30,000
the human will contact the vendor they

306
00:11:30,000 --> 00:11:31,320
will work with them

307
00:11:31,320 --> 00:11:33,660
a typical reason here would be it's a

308
00:11:33,660 --> 00:11:36,360
new vendor we will try to adopt them to

309
00:11:36,360 --> 00:11:38,880
a standard passing logic we try to use

310
00:11:38,880 --> 00:11:41,760
or we will work with them to add an

311
00:11:41,760 --> 00:11:43,260
internal parcel in our maintenance

312
00:11:43,260 --> 00:11:45,120
parcel system

313
00:11:45,120 --> 00:11:47,820
now because in this flow the maintenance

314
00:11:47,820 --> 00:11:50,459
parser did not call the orchestrator

315
00:11:50,459 --> 00:11:52,980
that was because it broke

316
00:11:52,980 --> 00:11:55,260
the human would have to go ahead and

317
00:11:55,260 --> 00:11:56,700
schedule the maintenance in the

318
00:11:56,700 --> 00:11:58,380
maintenance orchestrator

319
00:11:58,380 --> 00:12:00,440
but for subsequent

320
00:12:00,440 --> 00:12:02,579
basically maintenance is from the same

321
00:12:02,579 --> 00:12:06,240
vendor if the parser is updated

322
00:12:06,240 --> 00:12:08,160
the flow will get automated and the

323
00:12:08,160 --> 00:12:09,540
maintenance parser will then call the

324
00:12:09,540 --> 00:12:11,700
maintenance orchestrator so this is

325
00:12:11,700 --> 00:12:12,779
where the human will call the

326
00:12:12,779 --> 00:12:14,519
maintenance orchestrator

327
00:12:14,519 --> 00:12:16,920
the maintenance will be updated and the

328
00:12:16,920 --> 00:12:18,480
remainder of the life cycle will like

329
00:12:18,480 --> 00:12:21,660
continue if there are no failures there

330
00:12:21,660 --> 00:12:23,579
thank you

331
00:12:23,579 --> 00:12:25,680
okay so let's talk about an other

332
00:12:25,680 --> 00:12:28,380
failure scenario this time let's focus

333
00:12:28,380 --> 00:12:30,180
on a failure scenario in one of the

334
00:12:30,180 --> 00:12:31,700
services which

335
00:12:31,700 --> 00:12:34,200
the maintenance orchestrator relies on

336
00:12:34,200 --> 00:12:37,260
let's talk about safety checks failing

337
00:12:37,260 --> 00:12:39,660
so again as like this diagram shows we

338
00:12:39,660 --> 00:12:42,000
escalated to a human and the reason is

339
00:12:42,000 --> 00:12:44,339
so that we are aware of what risk this

340
00:12:44,339 --> 00:12:45,540
is bringing because of failure and

341
00:12:45,540 --> 00:12:48,959
safety check is usually a clear sign

342
00:12:48,959 --> 00:12:51,000
that there is some risk to the network

343
00:12:51,000 --> 00:12:53,760
based on the checks we do

344
00:12:53,760 --> 00:12:56,339
so a few reasons why we have safety

345
00:12:56,339 --> 00:12:58,860
checks failures are one

346
00:12:58,860 --> 00:13:01,920
we have overlapping maintenances at a

347
00:13:01,920 --> 00:13:04,079
given part of the network by different

348
00:13:04,079 --> 00:13:06,600
vendors and this puts the network at

349
00:13:06,600 --> 00:13:09,120
risk or we have a maintenance which is

350
00:13:09,120 --> 00:13:12,060
scheduled and has a large scope and that

351
00:13:12,060 --> 00:13:14,160
is not what we intended when we designed

352
00:13:14,160 --> 00:13:15,360
the network and we worked with the

353
00:13:15,360 --> 00:13:18,240
vendor on for their services so in these

354
00:13:18,240 --> 00:13:20,700
cases we will work uh we will escalate

355
00:13:20,700 --> 00:13:23,820
it to the human some other cases are the

356
00:13:23,820 --> 00:13:25,200
reality of the production network is

357
00:13:25,200 --> 00:13:26,820
that there will be outages

358
00:13:26,820 --> 00:13:28,980
and a maintenance which is going to

359
00:13:28,980 --> 00:13:30,600
happen in the future along with existing

360
00:13:30,600 --> 00:13:32,220
outages can

361
00:13:32,220 --> 00:13:34,200
put up a certain portion of the network

362
00:13:34,200 --> 00:13:36,480
in Risk in which case we can prioritize

363
00:13:36,480 --> 00:13:39,180
attending to those maintenances or those

364
00:13:39,180 --> 00:13:40,380
outages

365
00:13:40,380 --> 00:13:42,779
so depending on on the type of failure

366
00:13:42,779 --> 00:13:44,339
let's say they were overlapping

367
00:13:44,339 --> 00:13:46,200
maintenances and this is where like

368
00:13:46,200 --> 00:13:49,860
Advanced detection helps us uh we can

369
00:13:49,860 --> 00:13:51,540
work with the vendor to see if it's

370
00:13:51,540 --> 00:13:54,240
possible to reschedule it and then we

371
00:13:54,240 --> 00:13:56,360
would have mitigated the impact

372
00:13:56,360 --> 00:13:59,399
based on what the end result is and the

373
00:13:59,399 --> 00:14:01,200
type of failure is the scope of that

374
00:14:01,200 --> 00:14:02,399
maintenance

375
00:14:02,399 --> 00:14:04,380
will now be updated

376
00:14:04,380 --> 00:14:06,180
with the maintenance orchestrator so

377
00:14:06,180 --> 00:14:09,060
that it has an end-to-end view of this

378
00:14:09,060 --> 00:14:12,120
maintenance and the network

379
00:14:12,120 --> 00:14:13,620
it will then start the maintenance

380
00:14:13,620 --> 00:14:16,139
window and the maintenance will be

381
00:14:16,139 --> 00:14:17,880
completed

382
00:14:17,880 --> 00:14:20,100
okay let's go over some of the issues we

383
00:14:20,100 --> 00:14:22,079
have seen

384
00:14:22,079 --> 00:14:24,959
so this one we actually walked through

385
00:14:24,959 --> 00:14:27,120
it in scenario one but there is a lack

386
00:14:27,120 --> 00:14:29,639
of standardization across and within

387
00:14:29,639 --> 00:14:30,600
vendors

388
00:14:30,600 --> 00:14:32,760
uh even the previous talk highlighted

389
00:14:32,760 --> 00:14:35,820
this we have actually like I said like

390
00:14:35,820 --> 00:14:38,399
vendors within themselves also have

391
00:14:38,399 --> 00:14:40,199
changes on the format because some of

392
00:14:40,199 --> 00:14:43,380
them use humans to uh send out these

393
00:14:43,380 --> 00:14:45,060
notifications and we need to address

394
00:14:45,060 --> 00:14:47,760
this and as we can see as we are keeping

395
00:14:47,760 --> 00:14:49,500
reliability in mind to make sure we are

396
00:14:49,500 --> 00:14:52,260
aware of these maintenances this can

397
00:14:52,260 --> 00:14:55,760
cause a lot of noise

398
00:14:55,860 --> 00:14:59,220
secondly how do we categorize what is

399
00:14:59,220 --> 00:15:02,160
safe what is not safe it's one thing to

400
00:15:02,160 --> 00:15:03,959
categorize it given the various

401
00:15:03,959 --> 00:15:05,579
different types of networks we have and

402
00:15:05,579 --> 00:15:08,220
ensure that it's working as expected but

403
00:15:08,220 --> 00:15:10,860
we need to ensure our services

404
00:15:10,860 --> 00:15:13,880
can do this in an automated fashion

405
00:15:13,880 --> 00:15:16,500
instead of a human looking and deciding

406
00:15:16,500 --> 00:15:18,540
what is say what is not safe the human

407
00:15:18,540 --> 00:15:20,459
should be getting the escalation as a

408
00:15:20,459 --> 00:15:21,899
last resort when the service does not

409
00:15:21,899 --> 00:15:24,060
know but we need to have some policies

410
00:15:24,060 --> 00:15:25,940
around this

411
00:15:25,940 --> 00:15:28,019
and third

412
00:15:28,019 --> 00:15:31,019
having enough visibility into the future

413
00:15:31,019 --> 00:15:34,199
State because if we are aware of our

414
00:15:34,199 --> 00:15:37,800
Network getting into a possibly risky or

415
00:15:37,800 --> 00:15:40,260
having an unacceptable maintenance or

416
00:15:40,260 --> 00:15:42,899
some sort of impact

417
00:15:42,899 --> 00:15:45,600
we have enough time to work with the

418
00:15:45,600 --> 00:15:48,680
vendors to address it

419
00:15:49,079 --> 00:15:53,279
okay let's talk about how we fix this

420
00:15:53,279 --> 00:15:54,839
so first

421
00:15:54,839 --> 00:15:56,100
um this is where like the maintenance

422
00:15:56,100 --> 00:15:58,560
parser comes into the picture we

423
00:15:58,560 --> 00:16:00,660
normalize some of the vendor formats we

424
00:16:00,660 --> 00:16:03,240
have a standard formatting logic which

425
00:16:03,240 --> 00:16:05,160
we parsing logic which we try to onboard

426
00:16:05,160 --> 00:16:08,040
some vendors to and if we can't

427
00:16:08,040 --> 00:16:10,560
we write parses for it and we try to

428
00:16:10,560 --> 00:16:12,959
match it this gives us some success a

429
00:16:12,959 --> 00:16:15,240
lot of times we are able to parse it we

430
00:16:15,240 --> 00:16:17,459
have a decent amount of success rate and

431
00:16:17,459 --> 00:16:19,260
automation scheduling the maintenance

432
00:16:19,260 --> 00:16:22,440
but again any changes there result in

433
00:16:22,440 --> 00:16:25,100
escalations

434
00:16:25,980 --> 00:16:29,459
okay so as we have seen those five

435
00:16:29,459 --> 00:16:31,019
blocks actually represent many services

436
00:16:31,019 --> 00:16:33,300
that was a very abstracted View

437
00:16:33,300 --> 00:16:35,160
uh and

438
00:16:35,160 --> 00:16:37,440
um the entire space is pretty and

439
00:16:37,440 --> 00:16:40,199
convoluted to understand however plant

440
00:16:40,199 --> 00:16:42,420
maintenances as we all know in this room

441
00:16:42,420 --> 00:16:44,279
that they are

442
00:16:44,279 --> 00:16:47,100
an expected feature of a network of a

443
00:16:47,100 --> 00:16:48,660
production Network and should be a well

444
00:16:48,660 --> 00:16:51,920
understood uh activity which any network

445
00:16:51,920 --> 00:16:54,959
team or person can handle the way we

446
00:16:54,959 --> 00:16:58,980
address this is by having a small set of

447
00:16:58,980 --> 00:17:01,320
folks work on it together understand the

448
00:17:01,320 --> 00:17:03,600
end-to-end space pick out some issues

449
00:17:03,600 --> 00:17:04,980
Drive improvements which I'm talking

450
00:17:04,980 --> 00:17:08,459
about here and then bring it to a stage

451
00:17:08,459 --> 00:17:10,079
where it becomes more acceptable and

452
00:17:10,079 --> 00:17:12,720
there is enough success that it can be

453
00:17:12,720 --> 00:17:15,359
actually worked on through a normal life

454
00:17:15,359 --> 00:17:18,379
cycle of a network

455
00:17:19,260 --> 00:17:21,900
thirdly we Define policies on what is

456
00:17:21,900 --> 00:17:23,880
safe versus what is not safe and the way

457
00:17:23,880 --> 00:17:26,280
we did it is by taking two broad

458
00:17:26,280 --> 00:17:28,260
approaches like we have one sort of

459
00:17:28,260 --> 00:17:30,660
checks which are simulation based they

460
00:17:30,660 --> 00:17:32,660
run well-known algorithms like Max flow

461
00:17:32,660 --> 00:17:35,220
depending on the network they we even

462
00:17:35,220 --> 00:17:37,559
use pce or constrain shortest path first

463
00:17:37,559 --> 00:17:40,679
and the next type of checks are

464
00:17:40,679 --> 00:17:44,100
threshold base this is our mechanism of

465
00:17:44,100 --> 00:17:46,679
defense and depth if there is any

466
00:17:46,679 --> 00:17:49,679
failure in simulation or anywhere across

467
00:17:49,679 --> 00:17:52,140
the flow we do have these safety checks

468
00:17:52,140 --> 00:17:54,480
we call it cardinality

469
00:17:54,480 --> 00:17:57,240
basically these checks are intended to

470
00:17:57,240 --> 00:17:59,220
not take the move capacity than we ever

471
00:17:59,220 --> 00:18:01,020
expect in the network say for

472
00:18:01,020 --> 00:18:02,460
maintenance for whatever reason is

473
00:18:02,460 --> 00:18:05,880
trying to take down 20 of the network

474
00:18:05,880 --> 00:18:08,760
that is not something we expect and even

475
00:18:08,760 --> 00:18:11,220
if any simulation based check allows it

476
00:18:11,220 --> 00:18:13,140
it is something we would like to fail on

477
00:18:13,140 --> 00:18:17,120
and get manually intervention into

478
00:18:18,480 --> 00:18:20,460
okay so this is the last section of my

479
00:18:20,460 --> 00:18:21,900
talk and

480
00:18:21,900 --> 00:18:23,760
um I'd like to talk about how we

481
00:18:23,760 --> 00:18:26,160
together can drive some improvements and

482
00:18:26,160 --> 00:18:32,600
some efforts in place uh in this space

483
00:18:33,240 --> 00:18:35,100
so when we were working on this

484
00:18:35,100 --> 00:18:36,600
presentation and going through the

485
00:18:36,600 --> 00:18:38,340
process of getting accepted we created a

486
00:18:38,340 --> 00:18:40,620
LinkedIn group to like facilitate Us in

487
00:18:40,620 --> 00:18:42,720
conversation and we have got some great

488
00:18:42,720 --> 00:18:44,460
um attention there a lot of people have

489
00:18:44,460 --> 00:18:48,299
joined that um so let's get together

490
00:18:48,299 --> 00:18:51,240
there and like work on standardizing the

491
00:18:51,240 --> 00:18:54,960
space and see what we can actually do

492
00:18:54,960 --> 00:18:58,440
let's try to find R1 size fits all

493
00:18:58,440 --> 00:19:01,140
is API is the right answer or is it

494
00:19:01,140 --> 00:19:04,080
standardizing email formatting uh if if

495
00:19:04,080 --> 00:19:05,940
apis is the right answer then how would

496
00:19:05,940 --> 00:19:09,240
small vendors which actually don't have

497
00:19:09,240 --> 00:19:12,419
um don't have sort of the ability to

498
00:19:12,419 --> 00:19:15,480
actually use apis uh do they are

499
00:19:15,480 --> 00:19:18,840
schedule their maintenances

500
00:19:18,840 --> 00:19:21,559
there is an existing internet draft and

501
00:19:21,559 --> 00:19:25,020
we have been speaking to some people

502
00:19:25,020 --> 00:19:26,820
from the industry which were working on

503
00:19:26,820 --> 00:19:28,320
this I can't take names they are waiting

504
00:19:28,320 --> 00:19:31,559
for legal approval but uh they have had

505
00:19:31,559 --> 00:19:33,419
quite a lot of success here there are

506
00:19:33,419 --> 00:19:34,740
also some vendors which are interested

507
00:19:34,740 --> 00:19:36,240
in it we had some great conversations

508
00:19:36,240 --> 00:19:39,120
here at nanog and they were very very

509
00:19:39,120 --> 00:19:41,039
much for the standardization it seems to

510
00:19:41,039 --> 00:19:42,240
be a pain point

511
00:19:42,240 --> 00:19:45,660
this existing standard it's now expired

512
00:19:45,660 --> 00:19:48,660
but nothing stops us from revisiting it

513
00:19:48,660 --> 00:19:50,160
and actually working towards

514
00:19:50,160 --> 00:19:52,260
standardization uh in the previous talk

515
00:19:52,260 --> 00:19:54,600
there was a question around this we this

516
00:19:54,600 --> 00:19:56,700
particular standard uses I calendar it

517
00:19:56,700 --> 00:19:58,919
it uses experimental headers within I

518
00:19:58,919 --> 00:20:01,919
calendar uh to send the notification so

519
00:20:01,919 --> 00:20:04,380
it makes it easier to parse and yes

520
00:20:04,380 --> 00:20:06,900
there is a w3c group which is working

521
00:20:06,900 --> 00:20:09,960
towards creating it a standard

522
00:20:09,960 --> 00:20:13,919
personally I think what stops this from

523
00:20:13,919 --> 00:20:15,480
becoming a standard is mainly adoption

524
00:20:15,480 --> 00:20:17,940
like if we try to adopt it and we learn

525
00:20:17,940 --> 00:20:20,340
from it and if it is not the right

526
00:20:20,340 --> 00:20:23,520
answer maybe we can revisit it but right

527
00:20:23,520 --> 00:20:25,559
now I personally think it would be most

528
00:20:25,559 --> 00:20:27,900
useful if we adopt towards it and work

529
00:20:27,900 --> 00:20:29,940
together to see what success looks like

530
00:20:29,940 --> 00:20:31,440
here

531
00:20:31,440 --> 00:20:33,299
with that being said

532
00:20:33,299 --> 00:20:37,460
thank you I am happy to take questions

533
00:20:41,840 --> 00:20:45,570
[Music]

