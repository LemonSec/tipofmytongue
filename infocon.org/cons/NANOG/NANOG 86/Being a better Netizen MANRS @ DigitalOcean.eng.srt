1
00:00:00,000 --> 00:00:00,060
[Music]

2
00:00:00,060 --> 00:00:02,210
foreign

3
00:00:02,210 --> 00:00:05,939
[Music]

4
00:00:06,560 --> 00:00:10,200
being a better netizen manners at

5
00:00:10,200 --> 00:00:12,540
digital ocean in terms of senior network

6
00:00:12,540 --> 00:00:14,880
engineer at digital ocean and traveled

7
00:00:14,880 --> 00:00:16,859
all the way from Sydney Australia you

8
00:00:16,859 --> 00:00:18,480
have an accent

9
00:00:18,480 --> 00:00:20,820
do you have an accent

10
00:00:20,820 --> 00:00:24,660
 off to join us today this is Tim's

11
00:00:24,660 --> 00:00:26,460
first time presenting at nanog and it's

12
00:00:26,460 --> 00:00:27,599
a pleasure to have him here speaking

13
00:00:27,599 --> 00:00:30,359
with us today so welcome Tim thank you

14
00:00:30,359 --> 00:00:32,098
very much

15
00:00:32,098 --> 00:00:34,160
foreign

16
00:00:34,160 --> 00:00:37,290
[Applause]

17
00:00:38,100 --> 00:00:41,040
thank you so much yes say and do I do

18
00:00:41,040 --> 00:00:43,379
indeed have an accent I grew up in

19
00:00:43,379 --> 00:00:46,320
Australia so tell me to slow down if you

20
00:00:46,320 --> 00:00:48,660
can't understand me

21
00:00:48,660 --> 00:00:51,360
hi everyone my name is Tim rafale I'm a

22
00:00:51,360 --> 00:00:52,980
senior network engineer on the internet

23
00:00:52,980 --> 00:00:56,219
Edge and backbone team at digitalocean

24
00:00:56,219 --> 00:00:58,140
I'm here today to talk to you about

25
00:00:58,140 --> 00:01:00,539
being a better netizen or how we became

26
00:01:00,539 --> 00:01:04,640
manners compliant at digitalocean

27
00:01:06,180 --> 00:01:07,860
I'll start off with an introduction to

28
00:01:07,860 --> 00:01:10,979
digitalocean or do as we refer it in

29
00:01:10,979 --> 00:01:12,720
case you've not heard of us before

30
00:01:12,720 --> 00:01:14,220
then I'll give a brief introduction to

31
00:01:14,220 --> 00:01:15,360
manners

32
00:01:15,360 --> 00:01:16,979
I know this has been talked about a lot

33
00:01:16,979 --> 00:01:19,439
at this conference and previous but it's

34
00:01:19,439 --> 00:01:21,900
it's worth a refresher

35
00:01:21,900 --> 00:01:24,119
third I'll address why we decided to

36
00:01:24,119 --> 00:01:25,799
become manners compliant

37
00:01:25,799 --> 00:01:27,780
to undertake a journey like this you

38
00:01:27,780 --> 00:01:30,360
need to have a purpose and a focus

39
00:01:30,360 --> 00:01:32,280
next I'll provide a rundown of the

40
00:01:32,280 --> 00:01:34,020
individual requirements of the manners

41
00:01:34,020 --> 00:01:37,020
cloud and CDN program and how we did

42
00:01:37,020 --> 00:01:40,259
what we did to address each point

43
00:01:40,259 --> 00:01:43,020
and lastly because routing security is a

44
00:01:43,020 --> 00:01:45,119
constant cycle of improvement I'll talk

45
00:01:45,119 --> 00:01:48,380
about what we're planning next

46
00:01:50,700 --> 00:01:53,040
so digilation is for developers and

47
00:01:53,040 --> 00:01:55,320
small businesses our aim is to make

48
00:01:55,320 --> 00:01:57,600
cloud services simple and easily

49
00:01:57,600 --> 00:02:00,000
accessible so that our customers spend

50
00:02:00,000 --> 00:02:02,220
more time making awesome applications

51
00:02:02,220 --> 00:02:04,020
that change the world

52
00:02:04,020 --> 00:02:06,659
our product set include virtual machines

53
00:02:06,659 --> 00:02:08,699
or we call them droplets because

54
00:02:08,699 --> 00:02:11,280
everything's ocean themed digital ocean

55
00:02:11,280 --> 00:02:14,040
we also have storage networking security

56
00:02:14,040 --> 00:02:17,520
and other Associated service services

57
00:02:17,520 --> 00:02:19,379
recent additions include managed

58
00:02:19,379 --> 00:02:21,900
kubernetes and platform as a service

59
00:02:21,900 --> 00:02:24,180
these all go to the vision of making

60
00:02:24,180 --> 00:02:27,360
complex cloud services easy to consume

61
00:02:27,360 --> 00:02:29,760
we run a global network from 14 data

62
00:02:29,760 --> 00:02:32,879
centers in eight markets with over 3 000

63
00:02:32,879 --> 00:02:35,940
network devices from Edge routers to top

64
00:02:35,940 --> 00:02:37,260
of rack switches

65
00:02:37,260 --> 00:02:39,480
we have over 300 000 monitored

66
00:02:39,480 --> 00:02:40,860
interfaces

67
00:02:40,860 --> 00:02:42,480
with a significant presence on the

68
00:02:42,480 --> 00:02:43,200
internet

69
00:02:43,200 --> 00:02:45,900
our Edge is very important to us and

70
00:02:45,900 --> 00:02:48,060
thus to our customers and plays a role

71
00:02:48,060 --> 00:02:51,019
of why I'm here today

72
00:02:51,900 --> 00:02:55,620
manners or mutually agreed norms for

73
00:02:55,620 --> 00:02:57,720
routing security is an initiative by

74
00:02:57,720 --> 00:03:01,260
isoc it's been run since 2014 and

75
00:03:01,260 --> 00:03:03,959
consists of four Key Programs

76
00:03:03,959 --> 00:03:05,819
a program for Network operators such as

77
00:03:05,819 --> 00:03:08,400
Enterprises and isps

78
00:03:08,400 --> 00:03:10,980
a program for the internet exchange

79
00:03:10,980 --> 00:03:12,120
points

80
00:03:12,120 --> 00:03:14,099
the cloud and CDN program which I'll

81
00:03:14,099 --> 00:03:16,080
talk about in a moment and a fourth

82
00:03:16,080 --> 00:03:18,720
program for equipment vendors

83
00:03:18,720 --> 00:03:21,180
each program is specifically designed

84
00:03:21,180 --> 00:03:23,459
with input from the community to address

85
00:03:23,459 --> 00:03:26,459
the unique aspects of each Network group

86
00:03:26,459 --> 00:03:28,019
and help them improve their routing

87
00:03:28,019 --> 00:03:29,640
security

88
00:03:29,640 --> 00:03:32,580
manners also engages through fellowship

89
00:03:32,580 --> 00:03:34,500
and Ambassador programs to gather

90
00:03:34,500 --> 00:03:36,720
valuable input from the community to

91
00:03:36,720 --> 00:03:38,220
help improve these groups routing

92
00:03:38,220 --> 00:03:40,319
security posture

93
00:03:40,319 --> 00:03:42,420
so why did we look towards being manners

94
00:03:42,420 --> 00:03:44,958
compliant

95
00:03:45,720 --> 00:03:48,840
at digitalocean a core value is our

96
00:03:48,840 --> 00:03:50,519
community is bigger than us

97
00:03:50,519 --> 00:03:52,319
we're a member of the internet community

98
00:03:52,319 --> 00:03:55,260
and thus it's on us to do better for

99
00:03:55,260 --> 00:03:56,040
everyone

100
00:03:56,040 --> 00:03:57,599
simply because we're connected to the

101
00:03:57,599 --> 00:04:00,360
internet and we provide traffic for our

102
00:04:00,360 --> 00:04:02,040
customers and our customers customers

103
00:04:02,040 --> 00:04:04,620
it's on us to do better

104
00:04:04,620 --> 00:04:07,379
so during 2020 we made the goal to

105
00:04:07,379 --> 00:04:09,239
become compliant with the manners cloud

106
00:04:09,239 --> 00:04:11,879
and CDN program

107
00:04:11,879 --> 00:04:14,340
the cloud and CDN program extends upon

108
00:04:14,340 --> 00:04:16,918
the network operators program and raises

109
00:04:16,918 --> 00:04:18,918
the bar for cloud and CDN providers

110
00:04:18,918 --> 00:04:21,899
because they provide so much traffic to

111
00:04:21,899 --> 00:04:24,000
the global internet

112
00:04:24,000 --> 00:04:26,100
I'll now run through the five required

113
00:04:26,100 --> 00:04:29,940
actions of the cloud and CDN program

114
00:04:29,940 --> 00:04:32,460
each action is clearly outlined in the

115
00:04:32,460 --> 00:04:35,400
manners CD implementation guide which is

116
00:04:35,400 --> 00:04:37,080
a well-written statement of requirement

117
00:04:37,080 --> 00:04:39,419
that helps you understand exactly what

118
00:04:39,419 --> 00:04:42,360
each action is trying to address

119
00:04:42,360 --> 00:04:43,860
action one

120
00:04:43,860 --> 00:04:45,720
to prevent propagation of incorrect

121
00:04:45,720 --> 00:04:47,639
routing information

122
00:04:47,639 --> 00:04:49,800
the first action requires we we're

123
00:04:49,800 --> 00:04:52,440
feasible prevent propagating incorrect

124
00:04:52,440 --> 00:04:54,780
routing information from our peers

125
00:04:54,780 --> 00:04:57,000
we should have an ideally automated

126
00:04:57,000 --> 00:04:58,919
process to ensure that the information

127
00:04:58,919 --> 00:05:00,960
we're receiving from our peers is

128
00:05:00,960 --> 00:05:04,080
legitimate and verifiable

129
00:05:04,080 --> 00:05:06,000
the second action to prevent traffic

130
00:05:06,000 --> 00:05:08,460
with illegitimate Source addresses

131
00:05:08,460 --> 00:05:09,780
this asks that we Implement

132
00:05:09,780 --> 00:05:12,180
anti-spoofing mechanisms to ensure that

133
00:05:12,180 --> 00:05:13,740
packets are transmitted only from

134
00:05:13,740 --> 00:05:16,740
legitimate Source addresses

135
00:05:16,740 --> 00:05:19,560
action 3 is to facilitate Global

136
00:05:19,560 --> 00:05:21,300
operational communication and

137
00:05:21,300 --> 00:05:22,919
coordination

138
00:05:22,919 --> 00:05:24,960
this asked me maintain accurate contact

139
00:05:24,960 --> 00:05:27,479
information about our Network so we can

140
00:05:27,479 --> 00:05:29,400
be reached by other operators to address

141
00:05:29,400 --> 00:05:32,359
routing issues

142
00:05:33,479 --> 00:05:36,539
action 4 facilitating the validation of

143
00:05:36,539 --> 00:05:39,180
writing information on a global scale

144
00:05:39,180 --> 00:05:41,520
this asks that we should make public the

145
00:05:41,520 --> 00:05:43,500
required information to allow other

146
00:05:43,500 --> 00:05:46,259
networks to validate our advertisements

147
00:05:46,259 --> 00:05:48,360
this right requires a process either

148
00:05:48,360 --> 00:05:51,180
automated or well documented to ensure

149
00:05:51,180 --> 00:05:52,919
that our public information is up to

150
00:05:52,919 --> 00:05:54,180
date

151
00:05:54,180 --> 00:05:57,479
action 4 facilitates action one if we're

152
00:05:57,479 --> 00:05:59,039
putting out good information about our

153
00:05:59,039 --> 00:06:01,380
routing announcements other networks can

154
00:06:01,380 --> 00:06:03,120
then validate our information as part of

155
00:06:03,120 --> 00:06:05,220
their filtering

156
00:06:05,220 --> 00:06:07,740
and finally action five to encourage

157
00:06:07,740 --> 00:06:09,479
other networks to adopt these basic

158
00:06:09,479 --> 00:06:11,220
requirements and that's part of the

159
00:06:11,220 --> 00:06:13,560
reason why I'm here today

160
00:06:13,560 --> 00:06:15,180
I now want to take some time to go

161
00:06:15,180 --> 00:06:17,340
through each action and give some detail

162
00:06:17,340 --> 00:06:20,100
on what we did to achieve them hopefully

163
00:06:20,100 --> 00:06:21,419
this helps you understand what's

164
00:06:21,419 --> 00:06:23,880
required from a technical standpoint and

165
00:06:23,880 --> 00:06:25,680
how you might do a similar process in

166
00:06:25,680 --> 00:06:28,039
your network

167
00:06:28,919 --> 00:06:31,500
so we'll start with action one or how we

168
00:06:31,500 --> 00:06:33,120
prevent the propagation of incorrect

169
00:06:33,120 --> 00:06:37,220
routing information from our peers

170
00:06:38,460 --> 00:06:40,500
we run a medium to large Global Network

171
00:06:40,500 --> 00:06:42,419
and we have a presence on some of the

172
00:06:42,419 --> 00:06:44,639
largest internet exchange points in the

173
00:06:44,639 --> 00:06:46,979
world with bilateral peers to hundreds

174
00:06:46,979 --> 00:06:49,680
if not thousands of asns

175
00:06:49,680 --> 00:06:51,539
if we were to go about filtering all of

176
00:06:51,539 --> 00:06:53,699
our bilateral peering sessions

177
00:06:53,699 --> 00:06:56,160
we create a key scaling concern with the

178
00:06:56,160 --> 00:06:58,259
hardware we use today because we're

179
00:06:58,259 --> 00:07:00,600
talking about a prefix filter on each

180
00:07:00,600 --> 00:07:02,400
peer

181
00:07:02,400 --> 00:07:04,620
prefix filtering like this is a prime

182
00:07:04,620 --> 00:07:06,960
candidate for prefix children like this

183
00:07:06,960 --> 00:07:08,940
ensures we receive the prefixes we

184
00:07:08,940 --> 00:07:12,180
expect from a given peer however given

185
00:07:12,180 --> 00:07:14,220
the scale it's a prime candidate for

186
00:07:14,220 --> 00:07:16,139
automation I'll explain the automation

187
00:07:16,139 --> 00:07:17,460
piece in a moment

188
00:07:17,460 --> 00:07:18,720
but first

189
00:07:18,720 --> 00:07:20,520
for us to deal with the scaling concern

190
00:07:20,520 --> 00:07:22,860
and still achieve acceptable routing

191
00:07:22,860 --> 00:07:24,900
security results we had to do some

192
00:07:24,900 --> 00:07:27,300
analysis to ensure that the filtering we

193
00:07:27,300 --> 00:07:30,599
do today doesn't compromise our Hardware

194
00:07:30,599 --> 00:07:32,819
platform we already deploy because we

195
00:07:32,819 --> 00:07:34,500
wanted to achieve manners on the network

196
00:07:34,500 --> 00:07:36,979
of today

197
00:07:38,699 --> 00:07:41,520
so by collating irr data about our peers

198
00:07:41,520 --> 00:07:44,400
so that's our peers that publish an irr

199
00:07:44,400 --> 00:07:46,259
object I was able to look at the

200
00:07:46,259 --> 00:07:49,740
configuration size impact of pre of per

201
00:07:49,740 --> 00:07:52,560
peer prefix filtering on our peering

202
00:07:52,560 --> 00:07:54,000
routers

203
00:07:54,000 --> 00:07:55,500
so given we don't have the hardware

204
00:07:55,500 --> 00:07:58,860
scale to filter 100 of sessions today

205
00:07:58,860 --> 00:08:01,440
we needed to find a sweet spot to make a

206
00:08:01,440 --> 00:08:02,759
meaningful Improvement to our routing

207
00:08:02,759 --> 00:08:05,099
security without compromising the

208
00:08:05,099 --> 00:08:06,900
hardware and the stability of the

209
00:08:06,900 --> 00:08:09,020
network

210
00:08:09,900 --> 00:08:11,819
here we have a histogram of a

211
00:08:11,819 --> 00:08:14,280
distribution of our bilateral peers that

212
00:08:14,280 --> 00:08:17,099
publish an irr object

213
00:08:17,099 --> 00:08:19,080
along the x-axis we have histogram

214
00:08:19,080 --> 00:08:22,199
buckets so 0 to 10 prefixes if you

215
00:08:22,199 --> 00:08:24,660
evaluated the irr object for each peer

216
00:08:24,660 --> 00:08:28,440
and recursively each as down that as set

217
00:08:28,440 --> 00:08:31,259
0 to 10 10 to 20 20 to 30 Etc

218
00:08:31,259 --> 00:08:32,940
and along the y-axis we have the number

219
00:08:32,940 --> 00:08:34,320
of peers that would fall into each

220
00:08:34,320 --> 00:08:35,640
bucket

221
00:08:35,640 --> 00:08:38,458
well the x-axis isn't linear I know it's

222
00:08:38,458 --> 00:08:40,740
a graph for par I know but it's been

223
00:08:40,740 --> 00:08:42,120
chosen to best illustrate this problem

224
00:08:42,120 --> 00:08:44,039
because you can see there's a reasonable

225
00:08:44,039 --> 00:08:46,140
number of peers with you know 0 to 50

226
00:08:46,140 --> 00:08:47,519
prefixes

227
00:08:47,519 --> 00:08:51,720
a decent number at 20 200 and uh a sort

228
00:08:51,720 --> 00:08:53,820
of a thousand five thousand and then a

229
00:08:53,820 --> 00:08:55,680
non-inconsequential number of more than

230
00:08:55,680 --> 00:08:58,880
50 000 prefixes

231
00:09:01,560 --> 00:09:04,320
if we were to go for 100 coverage this

232
00:09:04,320 --> 00:09:05,940
could would result in over six and a

233
00:09:05,940 --> 00:09:07,740
half million lines of configuration for

234
00:09:07,740 --> 00:09:09,959
the prefix lists being added to some of

235
00:09:09,959 --> 00:09:12,000
our dense appearing routers

236
00:09:12,000 --> 00:09:14,279
by lab testing this and pushing 2

237
00:09:14,279 --> 00:09:16,860
million lines of configuration we added

238
00:09:16,860 --> 00:09:18,839
95 seconds to an interactive apply

239
00:09:18,839 --> 00:09:20,820
operation and this is simply not

240
00:09:20,820 --> 00:09:23,519
acceptable from an operation standpoint

241
00:09:23,519 --> 00:09:25,980
so to work around this we needed to pick

242
00:09:25,980 --> 00:09:28,320
a sensible maximum prefix list length

243
00:09:28,320 --> 00:09:31,560
and only filter those Piers that hit you

244
00:09:31,560 --> 00:09:34,560
know that threshold or lower

245
00:09:34,560 --> 00:09:36,240
so to determine what this threshold

246
00:09:36,240 --> 00:09:38,279
should be a better approach would be

247
00:09:38,279 --> 00:09:41,580
look at a cumulative histogram I look at

248
00:09:41,580 --> 00:09:43,440
what percentage of peers would be

249
00:09:43,440 --> 00:09:47,480
covered if we selected a given threshold

250
00:09:48,600 --> 00:09:51,360
so here we have the same x-axis but the

251
00:09:51,360 --> 00:09:53,580
y-axis indicates the percentage of Piers

252
00:09:53,580 --> 00:09:54,899
that would be covered and this is the

253
00:09:54,899 --> 00:09:57,720
percentage of peers that publish an irr

254
00:09:57,720 --> 00:09:59,279
object so that's obviously not all of

255
00:09:59,279 --> 00:10:01,200
them how many would be covered the

256
00:10:01,200 --> 00:10:03,060
percentage that would be covered if we

257
00:10:03,060 --> 00:10:05,339
chose a given threshold

258
00:10:05,339 --> 00:10:07,980
the red line is if we set our prefix

259
00:10:07,980 --> 00:10:11,160
list threshold to 400 prefixes

260
00:10:11,160 --> 00:10:13,380
as you can see that's not a huge prefix

261
00:10:13,380 --> 00:10:15,660
list in terms of the scale of the x-axis

262
00:10:15,660 --> 00:10:18,660
but for us that would mean a 48 coverage

263
00:10:18,660 --> 00:10:21,180
of peers and it would mean that we find

264
00:10:21,180 --> 00:10:23,100
that middle ground of not too much

265
00:10:23,100 --> 00:10:24,839
configuration on the router to impact

266
00:10:24,839 --> 00:10:27,620
the operational you know the operator

267
00:10:27,620 --> 00:10:30,120
activity but it wouldn't you know

268
00:10:30,120 --> 00:10:32,339
degrade the performance

269
00:10:32,339 --> 00:10:34,260
featuring procurement for us will

270
00:10:34,260 --> 00:10:35,880
include an expansion of this threshold

271
00:10:35,880 --> 00:10:38,279
as we refresh the network with faster

272
00:10:38,279 --> 00:10:39,839
equipment with you know more modern

273
00:10:39,839 --> 00:10:41,940
software and stay committed to our

274
00:10:41,940 --> 00:10:43,860
manners actions so we went with these

275
00:10:43,860 --> 00:10:46,800
400 prefix limit

276
00:10:46,800 --> 00:10:49,079
realistically that meant that 25 of our

277
00:10:49,079 --> 00:10:51,380
peers ended up being covered because

278
00:10:51,380 --> 00:10:53,399
quite a lot of them obviously don't

279
00:10:53,399 --> 00:10:56,720
publish an irr object

280
00:10:57,300 --> 00:10:59,519
so how do we do the automation piece how

281
00:10:59,519 --> 00:11:01,320
do we actually turn this from prefix

282
00:11:01,320 --> 00:11:04,220
list to applying it to the network

283
00:11:04,220 --> 00:11:06,300
digitalocean already has an extensive

284
00:11:06,300 --> 00:11:08,100
configuration management ecosystem in

285
00:11:08,100 --> 00:11:10,320
the network so starting with our sources

286
00:11:10,320 --> 00:11:12,300
of Truth we have netbox

287
00:11:12,300 --> 00:11:13,860
netbox was originally built at

288
00:11:13,860 --> 00:11:16,740
digitalocean and later open sourced it's

289
00:11:16,740 --> 00:11:17,880
our source of Truth for everything

290
00:11:17,880 --> 00:11:21,240
relating to IP addresses racks devices

291
00:11:21,240 --> 00:11:24,660
and anything that links them together

292
00:11:24,660 --> 00:11:26,760
and second we have peering manager

293
00:11:26,760 --> 00:11:28,980
hearing manager handles our bgp source

294
00:11:28,980 --> 00:11:31,260
of Truth it holds all the details of our

295
00:11:31,260 --> 00:11:33,899
IX sessions to Route servers bilateral

296
00:11:33,899 --> 00:11:36,899
peers pnis Transit sessions as well as

297
00:11:36,899 --> 00:11:40,260
the policy mappings between all of these

298
00:11:40,260 --> 00:11:42,540
pairing manager also pulls data from

299
00:11:42,540 --> 00:11:46,440
peeringdb such as peer prefix limits irr

300
00:11:46,440 --> 00:11:49,680
object names and contact information

301
00:11:49,680 --> 00:11:51,540
we use salt stack and its native

302
00:11:51,540 --> 00:11:53,880
integration with and its native

303
00:11:53,880 --> 00:11:56,220
integration with the Napalm library to

304
00:11:56,220 --> 00:11:58,860
apply templates to the network

305
00:11:58,860 --> 00:12:01,380
Salt's extensive templating engine and

306
00:12:01,380 --> 00:12:04,079
python-based modular architecture allows

307
00:12:04,079 --> 00:12:05,760
us to build whatever we need to

308
00:12:05,760 --> 00:12:08,459
integrate all these pieces

309
00:12:08,459 --> 00:12:10,800
because the prefix lists are based on

310
00:12:10,800 --> 00:12:13,500
irr records we host our own instance of

311
00:12:13,500 --> 00:12:15,899
irrd to mirror all the standard

312
00:12:15,899 --> 00:12:19,320
authenticated authenticated irr sources

313
00:12:19,320 --> 00:12:22,980
and a few necessary others

314
00:12:22,980 --> 00:12:26,100
salt stack talks to irrd over its who is

315
00:12:26,100 --> 00:12:29,880
interface using a custom salt module

316
00:12:29,880 --> 00:12:32,040
this means we reduce the dependency on

317
00:12:32,040 --> 00:12:34,019
external hosts and improve the

318
00:12:34,019 --> 00:12:36,300
performance for generating these often

319
00:12:36,300 --> 00:12:38,880
large prefix lists

320
00:12:38,880 --> 00:12:41,579
so with this in place the process runs

321
00:12:41,579 --> 00:12:44,579
every six hours or four times per day

322
00:12:44,579 --> 00:12:47,279
salt generates all possible prefix lists

323
00:12:47,279 --> 00:12:50,220
for all peers that have an irr record

324
00:12:50,220 --> 00:12:52,320
using the standard format for the irr

325
00:12:52,320 --> 00:12:54,240
object we're able to look up the correct

326
00:12:54,240 --> 00:12:56,639
source for that object

327
00:12:56,639 --> 00:12:59,399
we generate the prefix list evaluate it

328
00:12:59,399 --> 00:13:02,820
for our threshold of 400 prefixes and if

329
00:13:02,820 --> 00:13:05,339
we fall out or below the threshold a

330
00:13:05,339 --> 00:13:07,019
template is generated and pushed to the

331
00:13:07,019 --> 00:13:09,139
network

332
00:13:12,420 --> 00:13:14,519
so to accomplish this modularity on our

333
00:13:14,519 --> 00:13:16,500
peering sessions where some will have

334
00:13:16,500 --> 00:13:19,560
appearing a per prefix policy and others

335
00:13:19,560 --> 00:13:21,839
won't we have the following filtering

336
00:13:21,839 --> 00:13:24,000
structure

337
00:13:24,000 --> 00:13:26,700
in a chain we have a basic scrub filter

338
00:13:26,700 --> 00:13:29,700
this does your usual housekeeping it

339
00:13:29,700 --> 00:13:31,980
removes rpk iron ballads bogon's

340
00:13:31,980 --> 00:13:34,260
defaults long as paths that sort of

341
00:13:34,260 --> 00:13:35,220
thing

342
00:13:35,220 --> 00:13:37,680
second we have an organization level IX

343
00:13:37,680 --> 00:13:39,000
policy filter

344
00:13:39,000 --> 00:13:41,519
this allows us to set organization wired

345
00:13:41,519 --> 00:13:44,220
policy such as local preference and to

346
00:13:44,220 --> 00:13:46,380
support things like graceful shutdown

347
00:13:46,380 --> 00:13:48,420
communities for our bilateral peers so

348
00:13:48,420 --> 00:13:51,120
we can drain traffic away from them

349
00:13:51,120 --> 00:13:54,660
next we have a per IX policy this allows

350
00:13:54,660 --> 00:13:57,260
us to do conversion between IX

351
00:13:57,260 --> 00:14:00,720
communities or support different te for

352
00:14:00,720 --> 00:14:03,180
mono per IX basis

353
00:14:03,180 --> 00:14:05,579
and then optionally on the end we have a

354
00:14:05,579 --> 00:14:08,399
perpir prefix filter policy where the

355
00:14:08,399 --> 00:14:10,560
peers IR object has less than 400

356
00:14:10,560 --> 00:14:12,720
prefixes

357
00:14:12,720 --> 00:14:15,120
this is a junos stanza but the same can

358
00:14:15,120 --> 00:14:16,440
be done with other network operating

359
00:14:16,440 --> 00:14:18,920
systems

360
00:14:19,800 --> 00:14:21,720
so here we have a concrete example of

361
00:14:21,720 --> 00:14:23,820
that per peer policy

362
00:14:23,820 --> 00:14:26,459
this follows the standard filtering

363
00:14:26,459 --> 00:14:28,260
logic guidelines outlined in the

364
00:14:28,260 --> 00:14:29,760
outlined in the mana's implementation

365
00:14:29,760 --> 00:14:30,959
guide

366
00:14:30,959 --> 00:14:34,139
first we check for rpki validity and if

367
00:14:34,139 --> 00:14:35,639
the route has a cryptographically signed

368
00:14:35,639 --> 00:14:38,579
route origin we accept the prefix

369
00:14:38,579 --> 00:14:40,920
in the implementation guide now it

370
00:14:40,920 --> 00:14:42,420
actually asks that you check that the

371
00:14:42,420 --> 00:14:46,199
originating as is in the as set of the

372
00:14:46,199 --> 00:14:48,120
peer from the irr object

373
00:14:48,120 --> 00:14:50,100
when we were implementing this that

374
00:14:50,100 --> 00:14:51,480
filtering logic was still being

375
00:14:51,480 --> 00:14:53,940
discussed and so we went with something

376
00:14:53,940 --> 00:14:56,459
that we felt was okay for now and then

377
00:14:56,459 --> 00:14:59,160
it it changed afterwards so this isn't

378
00:14:59,160 --> 00:15:02,100
the as path there's the origin as is

379
00:15:02,100 --> 00:15:04,199
still an optional piece however this

380
00:15:04,199 --> 00:15:06,000
achieves the same level of compliance

381
00:15:06,000 --> 00:15:08,579
it's just not as good

382
00:15:08,579 --> 00:15:11,100
if the rpki isn't valid on a prefix and

383
00:15:11,100 --> 00:15:12,360
it's in the unknown State because we've

384
00:15:12,360 --> 00:15:14,459
already discarded invalids in our scrub

385
00:15:14,459 --> 00:15:16,380
policy we go and check against the

386
00:15:16,380 --> 00:15:18,480
prefix list generated by the irr record

387
00:15:18,480 --> 00:15:20,399
for the appearing on a PS peeringdb

388
00:15:20,399 --> 00:15:22,380
profile and if nothing matches we just

389
00:15:22,380 --> 00:15:24,180
reject the prefix

390
00:15:24,180 --> 00:15:26,160
we also add informational communities

391
00:15:26,160 --> 00:15:28,320
along the way and this help us helps us

392
00:15:28,320 --> 00:15:30,360
Trace routing policy decisions through

393
00:15:30,360 --> 00:15:32,699
the network we can see whether a prefix

394
00:15:32,699 --> 00:15:35,459
was accepted by rpki or from an irr

395
00:15:35,459 --> 00:15:37,380
object occasionally we'll get an email

396
00:15:37,380 --> 00:15:39,360
to knock at asking why we're accepting

397
00:15:39,360 --> 00:15:41,040
or not a prefix

398
00:15:41,040 --> 00:15:43,139
and this is very helpful to trace down

399
00:15:43,139 --> 00:15:44,519
to see you know which router did the

400
00:15:44,519 --> 00:15:46,680
evaluation and which part of the policy

401
00:15:46,680 --> 00:15:49,519
it it hit

402
00:15:50,459 --> 00:15:53,639
and similarly this policy structure

403
00:15:53,639 --> 00:15:55,560
would look like this in RPL

404
00:15:55,560 --> 00:15:57,600
the structure reuses standard

405
00:15:57,600 --> 00:15:59,699
organization level policies and makes

406
00:15:59,699 --> 00:16:02,100
the policy chain easy to read I've just

407
00:16:02,100 --> 00:16:03,300
removed the informational communities

408
00:16:03,300 --> 00:16:06,079
for brevity

409
00:16:07,620 --> 00:16:09,660
before I move on I'd like to take a

410
00:16:09,660 --> 00:16:10,680
moment to acknowledge the work of

411
00:16:10,680 --> 00:16:12,360
Mitchell ulenich in implementing this

412
00:16:12,360 --> 00:16:13,860
filtering automation

413
00:16:13,860 --> 00:16:15,720
scaling configuration management to the

414
00:16:15,720 --> 00:16:18,180
thousands of devices we use at do is no

415
00:16:18,180 --> 00:16:20,639
easy task mature was an awesome resource

416
00:16:20,639 --> 00:16:22,500
to have during this implementation once

417
00:16:22,500 --> 00:16:24,899
we determined how to tackle the problem

418
00:16:24,899 --> 00:16:26,880
 did the majority of the internal

419
00:16:26,880 --> 00:16:29,279
Plumbing required to operate salt stack

420
00:16:29,279 --> 00:16:32,220
with irrd and the changes needed to

421
00:16:32,220 --> 00:16:34,500
build the modular filtering templates so

422
00:16:34,500 --> 00:16:37,339
thank you mitcha

423
00:16:38,639 --> 00:16:40,740
so let's move on to action two I promise

424
00:16:40,740 --> 00:16:42,480
action one was the longest and the most

425
00:16:42,480 --> 00:16:43,740
difficult

426
00:16:43,740 --> 00:16:45,899
action action two is about preventing

427
00:16:45,899 --> 00:16:47,639
traffic with illegitimate Source IP

428
00:16:47,639 --> 00:16:49,259
addresses from being able to leave your

429
00:16:49,259 --> 00:16:51,440
network

430
00:16:53,279 --> 00:16:56,579
as it turns out we already do this

431
00:16:56,579 --> 00:16:58,380
given the large varieties of workloads

432
00:16:58,380 --> 00:17:00,720
we see on our platform Bad actors and

433
00:17:00,720 --> 00:17:02,399
spoof traffic isn't exactly a new

434
00:17:02,399 --> 00:17:04,020
challenge

435
00:17:04,020 --> 00:17:06,240
network and infrastructure teams have

436
00:17:06,240 --> 00:17:08,280
worked together to build a multi-layered

437
00:17:08,280 --> 00:17:10,199
approach to prevent spoof traffic from

438
00:17:10,199 --> 00:17:11,880
leaving our Network

439
00:17:11,880 --> 00:17:13,980
because we own the hypervisor bare metal

440
00:17:13,980 --> 00:17:16,439
and the data path from the droplet the

441
00:17:16,439 --> 00:17:18,419
virtual machine all the way to the

442
00:17:18,419 --> 00:17:20,520
internet we have many options to control

443
00:17:20,520 --> 00:17:21,780
the traffic

444
00:17:21,780 --> 00:17:23,819
we can strictly ensure that a droplet

445
00:17:23,819 --> 00:17:26,880
uses only their assigned IP address at

446
00:17:26,880 --> 00:17:28,620
the hypervisor level before the traffic

447
00:17:28,620 --> 00:17:31,200
even leaves the Box

448
00:17:31,200 --> 00:17:33,059
operational teams also have

449
00:17:33,059 --> 00:17:34,679
sophisticated tooling to detect

450
00:17:34,679 --> 00:17:36,299
anomalous traffic within the data center

451
00:17:36,299 --> 00:17:37,320
Network

452
00:17:37,320 --> 00:17:39,240
and this presents strong alerting

453
00:17:39,240 --> 00:17:41,340
signals and in most case automated

454
00:17:41,340 --> 00:17:43,740
actions to mitigate you know interesting

455
00:17:43,740 --> 00:17:46,020
traffic patterns

456
00:17:46,020 --> 00:17:49,140
and finally at the edge we use urpf to

457
00:17:49,140 --> 00:17:50,520
make sure we have a route for the

458
00:17:50,520 --> 00:17:52,500
traffic West ending the the route for

459
00:17:52,500 --> 00:17:53,940
the source address for the sending

460
00:17:53,940 --> 00:17:54,720
traffic

461
00:17:54,720 --> 00:17:57,360
while it's not your RPF strict it's just

462
00:17:57,360 --> 00:17:59,360
another piece

463
00:17:59,360 --> 00:18:01,559
these controls are all great and for the

464
00:18:01,559 --> 00:18:04,080
most part no they work

465
00:18:04,080 --> 00:18:06,059
but how can you be sure

466
00:18:06,059 --> 00:18:08,039
you want to make sure that these are

467
00:18:08,039 --> 00:18:09,480
working and that you get a strong

468
00:18:09,480 --> 00:18:11,820
alerting signal when they don't

469
00:18:11,820 --> 00:18:13,500
this is where the cater spoofer project

470
00:18:13,500 --> 00:18:14,640
comes in

471
00:18:14,640 --> 00:18:16,500
the Center for Applied internet data

472
00:18:16,500 --> 00:18:18,900
analysis as an open source tool called

473
00:18:18,900 --> 00:18:20,640
the cada spoofer and this tool is

474
00:18:20,640 --> 00:18:21,840
actually called out inside the

475
00:18:21,840 --> 00:18:23,580
implementation guide for the manners

476
00:18:23,580 --> 00:18:25,500
cloud and CDN program

477
00:18:25,500 --> 00:18:27,900
the spoofer is a small application that

478
00:18:27,900 --> 00:18:29,640
periodically attempts to send forged

479
00:18:29,640 --> 00:18:32,600
Source frames to cater's hosted spoofer

480
00:18:32,600 --> 00:18:34,740
hosted collectors

481
00:18:34,740 --> 00:18:36,120
we've installed an instance of the

482
00:18:36,120 --> 00:18:37,679
spoofer in each one of our compute

483
00:18:37,679 --> 00:18:41,220
regions to ensure we have total coverage

484
00:18:41,220 --> 00:18:43,140
and so to monitor this spoofer we've

485
00:18:43,140 --> 00:18:45,120
built a Prometheus exporter for the

486
00:18:45,120 --> 00:18:47,760
cater API to let us know when the

487
00:18:47,760 --> 00:18:49,559
results come back you know less than

488
00:18:49,559 --> 00:18:51,240
ideal

489
00:18:51,240 --> 00:18:53,640
if a packet if a packet is detected by

490
00:18:53,640 --> 00:18:56,100
cater we get an alert on the fact and

491
00:18:56,100 --> 00:18:58,440
trigger an operational response

492
00:18:58,440 --> 00:19:01,140
the alert has a Playbook attached with

493
00:19:01,140 --> 00:19:03,179
strictly defined actions for the on-call

494
00:19:03,179 --> 00:19:06,140
engineer to work with

495
00:19:06,360 --> 00:19:08,400
this is an example of a Prometheus alert

496
00:19:08,400 --> 00:19:10,919
manager configuration to trigger on a

497
00:19:10,919 --> 00:19:13,140
failed check you can see we have a link

498
00:19:13,140 --> 00:19:16,080
to the spoofer report as well as a link

499
00:19:16,080 --> 00:19:18,059
to our internal Playbook site where an

500
00:19:18,059 --> 00:19:19,440
engineer can look up what they need to

501
00:19:19,440 --> 00:19:23,179
do and follow down the actions

502
00:19:24,660 --> 00:19:27,059
action 3 coordination

503
00:19:27,059 --> 00:19:28,080
or

504
00:19:28,080 --> 00:19:30,120
facilitating Global operate operational

505
00:19:30,120 --> 00:19:33,678
communication and coordination

506
00:19:34,559 --> 00:19:36,960
this is all about how to find us action

507
00:19:36,960 --> 00:19:39,000
three is about ensuring that other

508
00:19:39,000 --> 00:19:40,980
internet operators can find you and

509
00:19:40,980 --> 00:19:42,900
being a good netizen already we have our

510
00:19:42,900 --> 00:19:45,419
who is Data automatically updated as we

511
00:19:45,419 --> 00:19:47,400
consume new prefixes

512
00:19:47,400 --> 00:19:49,500
we have well-tested playbooks that we

513
00:19:49,500 --> 00:19:51,960
use for onboarding new IP Aggregates to

514
00:19:51,960 --> 00:19:53,520
ensure the eyes are dotted and T's

515
00:19:53,520 --> 00:19:54,780
across

516
00:19:54,780 --> 00:19:57,240
we also have regular automated checks to

517
00:19:57,240 --> 00:19:58,919
ensure that the information is kept

518
00:19:58,919 --> 00:20:01,100
current

519
00:20:01,860 --> 00:20:03,900
we also keep our pairing DB records

520
00:20:03,900 --> 00:20:05,880
updated and as part of our peering

521
00:20:05,880 --> 00:20:07,559
stand-up process if anyone's worked with

522
00:20:07,559 --> 00:20:09,660
us for a peering session we ask that you

523
00:20:09,660 --> 00:20:11,520
keep your pairing DB updated because we

524
00:20:11,520 --> 00:20:13,260
consume that data into pairing manager

525
00:20:13,260 --> 00:20:14,940
which then pushes configuration to the

526
00:20:14,940 --> 00:20:17,280
network via salt so we really need to

527
00:20:17,280 --> 00:20:19,440
set the best example and keep our

528
00:20:19,440 --> 00:20:22,520
information updated too

529
00:20:23,880 --> 00:20:26,940
action 4 Global validation or ensuring

530
00:20:26,940 --> 00:20:30,620
that our routing data is accurate

531
00:20:31,740 --> 00:20:34,320
we allocate prefixes to a compute region

532
00:20:34,320 --> 00:20:37,200
on an as needed basis therefore we have

533
00:20:37,200 --> 00:20:39,179
a need to keep our data updated as we

534
00:20:39,179 --> 00:20:42,299
consume new prefixes this is goip data

535
00:20:42,299 --> 00:20:46,140
ipki rower data and irr objects

536
00:20:46,140 --> 00:20:48,960
as part of the allocation process we use

537
00:20:48,960 --> 00:20:51,539
an aggregate irr object to facilitate

538
00:20:51,539 --> 00:20:53,880
quick propagation from our upstreams and

539
00:20:53,880 --> 00:20:55,860
then we create a smaller object you know

540
00:20:55,860 --> 00:20:59,160
a smaller prefix object after the fact

541
00:20:59,160 --> 00:21:00,960
this is all managed by an automated

542
00:21:00,960 --> 00:21:04,559
prefix sync app that keeps ipka rollers

543
00:21:04,559 --> 00:21:07,020
and irr objects all up to date and

544
00:21:07,020 --> 00:21:10,860
ensures geocoding is correct on a prefix

545
00:21:10,860 --> 00:21:13,020
given netbox is our source of Truth for

546
00:21:13,020 --> 00:21:15,299
everything around IP addresses and more

547
00:21:15,299 --> 00:21:17,700
we can simply put an announce tag on a

548
00:21:17,700 --> 00:21:19,919
prefix in netbox and this signals to

549
00:21:19,919 --> 00:21:22,500
various automations that this prefix

550
00:21:22,500 --> 00:21:24,720
should be made globally reachable

551
00:21:24,720 --> 00:21:26,760
and have all the pieces updated that

552
00:21:26,760 --> 00:21:29,159
need to be it also enables monitoring on

553
00:21:29,159 --> 00:21:30,299
a prefix

554
00:21:30,299 --> 00:21:32,100
so a good source of Truth is very

555
00:21:32,100 --> 00:21:34,559
powerful for facilitating this sort of

556
00:21:34,559 --> 00:21:36,980
automation

557
00:21:37,500 --> 00:21:40,740
for rpki we currently sign our aggregate

558
00:21:40,740 --> 00:21:43,980
prefixes using the max length field and

559
00:21:43,980 --> 00:21:45,840
just like previous speakers this is

560
00:21:45,840 --> 00:21:47,400
there to give us flexibility of

561
00:21:47,400 --> 00:21:49,020
allocation to ensure that our

562
00:21:49,020 --> 00:21:50,940
advertisements are accepted Upstream as

563
00:21:50,940 --> 00:21:52,919
soon as possible as we allocate the

564
00:21:52,919 --> 00:21:54,900
prefix because that's very important to

565
00:21:54,900 --> 00:21:57,020
us

566
00:21:58,140 --> 00:22:01,080
and lastly netbox reports are a great

567
00:22:01,080 --> 00:22:03,840
reporting slash cross-checking mechanism

568
00:22:03,840 --> 00:22:06,120
our reports run daily and a link to our

569
00:22:06,120 --> 00:22:07,440
alerting platform

570
00:22:07,440 --> 00:22:09,000
if you've never seen reports in netbox

571
00:22:09,000 --> 00:22:11,520
it's just freeform python that's run by

572
00:22:11,520 --> 00:22:14,400
the netbox application it's designed to

573
00:22:14,400 --> 00:22:16,860
use the data inside netbox and compare

574
00:22:16,860 --> 00:22:18,720
that to the real world so we're able to

575
00:22:18,720 --> 00:22:20,460
look at all of our prefixes with the

576
00:22:20,460 --> 00:22:22,799
announce tag and check that we have a

577
00:22:22,799 --> 00:22:25,500
valid rpki rower or a vrp

578
00:22:25,500 --> 00:22:27,539
or you know an irr object in the

579
00:22:27,539 --> 00:22:29,280
geocoding is correct based on you know

580
00:22:29,280 --> 00:22:31,980
the data we have netbox

581
00:22:31,980 --> 00:22:35,039
here we have an example report that has

582
00:22:35,039 --> 00:22:36,780
here we have example reports that check

583
00:22:36,780 --> 00:22:39,960
for irr data and rpki data

584
00:22:39,960 --> 00:22:41,700
the failed report you can see there

585
00:22:41,700 --> 00:22:43,919
becomes visible to Engineers as part of

586
00:22:43,919 --> 00:22:45,419
our alerting platform and can be

587
00:22:45,419 --> 00:22:48,440
actioned as required

588
00:22:49,080 --> 00:22:52,080
and lastly action 5 encouraging adoption

589
00:22:52,080 --> 00:22:56,360
or promotion as manners calls it now

590
00:22:56,400 --> 00:22:58,080
this is as simple as updating your

591
00:22:58,080 --> 00:23:00,600
public peering policy or your peeringdb

592
00:23:00,600 --> 00:23:02,400
comments to indicate that your network

593
00:23:02,400 --> 00:23:04,559
follows manners and encourage your peers

594
00:23:04,559 --> 00:23:07,158
to do the same

595
00:23:08,840 --> 00:23:10,919
so you've been through the actions

596
00:23:10,919 --> 00:23:13,440
engineered the required Solutions and

597
00:23:13,440 --> 00:23:14,880
figured out how to apply these to your

598
00:23:14,880 --> 00:23:16,740
network you're now ready to apply to

599
00:23:16,740 --> 00:23:18,840
manners it's as simple as heading over

600
00:23:18,840 --> 00:23:20,940
to the manners.org website and filling

601
00:23:20,940 --> 00:23:22,200
out a questionnaire

602
00:23:22,200 --> 00:23:24,240
you need to provide some details on how

603
00:23:24,240 --> 00:23:25,919
and what you've done to make your

604
00:23:25,919 --> 00:23:28,260
network fit the requirements

605
00:23:28,260 --> 00:23:30,059
and with a bit of luck

606
00:23:30,059 --> 00:23:32,159
you'll be granted compliance

607
00:23:32,159 --> 00:23:34,799
so for us during December 2020 and after

608
00:23:34,799 --> 00:23:37,500
12 months of consideration solutioning

609
00:23:37,500 --> 00:23:39,480
and implementation we were granted

610
00:23:39,480 --> 00:23:42,659
membership to the cloud and CDN program

611
00:23:42,659 --> 00:23:45,179
being a managed member means you also

612
00:23:45,179 --> 00:23:46,799
gain access to the manners Observatory

613
00:23:46,799 --> 00:23:48,900
this is a really useful dashboard that

614
00:23:48,900 --> 00:23:51,120
Aggregates a number of data sources to

615
00:23:51,120 --> 00:23:53,159
show you how your network complies with

616
00:23:53,159 --> 00:23:55,380
the manners policies

617
00:23:55,380 --> 00:23:57,600
you can also count yourself amongst a

618
00:23:57,600 --> 00:23:59,340
group of dedicated member organizations

619
00:23:59,340 --> 00:24:01,980
all interested in making the internet a

620
00:24:01,980 --> 00:24:04,700
more secure place

621
00:24:06,299 --> 00:24:09,480
compliance isn't the end so what's next

622
00:24:09,480 --> 00:24:11,900
for us

623
00:24:12,419 --> 00:24:15,000
there is a sixth optional action that

624
00:24:15,000 --> 00:24:17,340
asks to expose a public Looking Glass to

625
00:24:17,340 --> 00:24:19,620
help peers identify routing issues and

626
00:24:19,620 --> 00:24:21,960
routing security issues we intend to

627
00:24:21,960 --> 00:24:23,880
make ours public in the future and we'll

628
00:24:23,880 --> 00:24:25,620
advertise the fact on our peering DB

629
00:24:25,620 --> 00:24:29,059
page and our peering profile

630
00:24:31,200 --> 00:24:33,600
and given automation is the path to

631
00:24:33,600 --> 00:24:35,520
consistency there is plenty more we can

632
00:24:35,520 --> 00:24:36,299
do

633
00:24:36,299 --> 00:24:38,100
we have processes that are already

634
00:24:38,100 --> 00:24:39,480
automated but there's still plenty of

635
00:24:39,480 --> 00:24:42,360
playbooks and ad hoc processes that we

636
00:24:42,360 --> 00:24:43,919
can improve and move towards being

637
00:24:43,919 --> 00:24:46,980
automated and more consistent

638
00:24:46,980 --> 00:24:49,320
second as we move towards the next

639
00:24:49,320 --> 00:24:51,299
iteration of the digital ocean Global

640
00:24:51,299 --> 00:24:53,220
Network we can use new shiny hardware

641
00:24:53,220 --> 00:24:55,679
and more modern software and new

642
00:24:55,679 --> 00:24:57,720
mechanisms to figure out how we can do

643
00:24:57,720 --> 00:24:59,460
the filtering better and gain a wider

644
00:24:59,460 --> 00:25:01,620
coverage as well as look at new ways to

645
00:25:01,620 --> 00:25:04,140
prevent spoofing at the edge

646
00:25:04,140 --> 00:25:06,720
and lastly alerting for us is a key

647
00:25:06,720 --> 00:25:09,120
driver because we can see new failure

648
00:25:09,120 --> 00:25:10,980
modes in our alerting develop new

649
00:25:10,980 --> 00:25:13,380
playbooks and processes for them and use

650
00:25:13,380 --> 00:25:15,480
that to drive our Improvement of our

651
00:25:15,480 --> 00:25:18,559
routing security posture

652
00:25:19,200 --> 00:25:21,059
thank you so much for listening I've got

653
00:25:21,059 --> 00:25:24,139
a few minutes left for questions

654
00:25:34,100 --> 00:25:36,900
Society well Tim thank you very much for

655
00:25:36,900 --> 00:25:39,539
this presentation um for the hard work

656
00:25:39,539 --> 00:25:43,140
on becoming a manners participant you

657
00:25:43,140 --> 00:25:45,960
refer to implementation guide I wonder

658
00:25:45,960 --> 00:25:48,000
um because we are sort of you know doing

659
00:25:48,000 --> 00:25:50,279
periodic reviews for this implementation

660
00:25:50,279 --> 00:25:52,559
here so one day in your Junior I mean

661
00:25:52,559 --> 00:25:55,200
did you see something that sort of would

662
00:25:55,200 --> 00:25:57,480
like to mend in the implementation guide

663
00:25:57,480 --> 00:25:59,400
or to add some examples that would be

664
00:25:59,400 --> 00:26:03,659
useful for other operators I think

665
00:26:03,659 --> 00:26:06,360
potentially a more technical approach to

666
00:26:06,360 --> 00:26:07,620
the implementation guide would

667
00:26:07,620 --> 00:26:10,279
definitely help folks I think

668
00:26:10,279 --> 00:26:14,760
we were able to do some interpretation

669
00:26:14,760 --> 00:26:16,440
and that actually took quite a bit of

670
00:26:16,440 --> 00:26:18,000
time and cons and you know backwards and

671
00:26:18,000 --> 00:26:20,400
forwards between yourself and manners on

672
00:26:20,400 --> 00:26:22,440
how that would fit our Network and we

673
00:26:22,440 --> 00:26:23,820
had to talk a bit about how we do things

674
00:26:23,820 --> 00:26:25,799
today and what we might have to do to

675
00:26:25,799 --> 00:26:27,960
become compliant so that was part of it

676
00:26:27,960 --> 00:26:31,919
I think some more Concrete technical

677
00:26:31,919 --> 00:26:33,059
um

678
00:26:33,059 --> 00:26:35,640
advice might might be very very useful

679
00:26:35,640 --> 00:26:37,559
you know the filtering policies and

680
00:26:37,559 --> 00:26:40,320
things like that I know uh the

681
00:26:40,320 --> 00:26:42,240
guidelines now are a bit better in terms

682
00:26:42,240 --> 00:26:44,220
of the detail on the filtering logic

683
00:26:44,220 --> 00:26:45,659
which is good that was an improvement

684
00:26:45,659 --> 00:26:48,960
made after after we hit the 2020 Point

685
00:26:48,960 --> 00:26:50,940
um so perhaps you know more concrete

686
00:26:50,940 --> 00:26:53,100
examples might might help folks

687
00:26:53,100 --> 00:26:56,580
okay thanks no worries

688
00:26:56,580 --> 00:26:58,919
David Jeffers with Aaron but speaking

689
00:26:58,919 --> 00:27:01,200
with myself uh are you familiar with uh

690
00:27:01,200 --> 00:27:04,260
Manor oh sorry I'm very familiar with

691
00:27:04,260 --> 00:27:06,960
manners yeah I can't program uh time DNS

692
00:27:06,960 --> 00:27:09,299
can you speak to that tiny DNS kind

693
00:27:09,299 --> 00:27:12,059
kindness It's k-i-n-d-s

694
00:27:12,059 --> 00:27:14,820
it's a it's very similar to manners but

695
00:27:14,820 --> 00:27:17,760
it's for the DNS world so sure nanogan

696
00:27:17,760 --> 00:27:20,159
not dnso Arc but it's an interesting

697
00:27:20,159 --> 00:27:22,860
program to uh look into and challenge a

698
00:27:22,860 --> 00:27:25,320
digital ocean to have a presentation of

699
00:27:25,320 --> 00:27:26,640
the future showing how you guys are

700
00:27:26,640 --> 00:27:29,580
absolutely thanks come talk to me after

701
00:27:29,580 --> 00:27:30,900
I'm sure I can put you in touch with

702
00:27:30,900 --> 00:27:34,140
folks that we can talk about thanks

703
00:27:34,140 --> 00:27:37,030
all right thank you so much everyone

704
00:27:37,030 --> 00:27:40,260
[Applause]

705
00:27:40,260 --> 00:27:44,000
[Music]

