1
00:00:00,240 --> 00:00:03,628
[Applause]

2
00:00:04,920 --> 00:00:10,160
we have a minute and 20 seconds

3
00:00:10,380 --> 00:00:13,160
and I don't see our next presentation

4
00:00:13,160 --> 00:00:15,599
there he is over there well thank you

5
00:00:15,599 --> 00:00:17,100
John we really appreciate that

6
00:00:17,100 --> 00:00:20,100
presentation on the security

7
00:00:20,100 --> 00:00:21,600
and attacks

8
00:00:21,600 --> 00:00:25,439
our next uh presenter is a gentleman by

9
00:00:25,439 --> 00:00:27,779
the name of Paul cogdon he is presenting

10
00:00:27,779 --> 00:00:28,740
today

11
00:00:28,740 --> 00:00:31,320
towards a new ethernet for high

12
00:00:31,320 --> 00:00:34,200
performance data centers activities and

13
00:00:34,200 --> 00:00:37,860
enhancements in IEEE 802.1

14
00:00:37,860 --> 00:00:40,680
Paul is the co-founder of

15
00:00:40,680 --> 00:00:43,860
Co pardon me I can't read today

16
00:00:43,860 --> 00:00:46,559
Paul is a co-founder of

17
00:00:46,559 --> 00:00:49,739
and CTO of telec networks is that right

18
00:00:49,739 --> 00:00:51,000
thank you

19
00:00:51,000 --> 00:00:53,160
and has traveled

20
00:00:53,160 --> 00:00:54,719
from us today where are you coming from

21
00:00:54,719 --> 00:00:56,280
it doesn't say here California

22
00:00:56,280 --> 00:00:58,379
Sacramento coming from Sacramento

23
00:00:58,379 --> 00:01:00,660
California excellent this is Paul's

24
00:01:00,660 --> 00:01:02,579
second time presenting here at danog and

25
00:01:02,579 --> 00:01:03,960
it's a pleasure to have him on the stage

26
00:01:03,960 --> 00:01:07,339
again thank you Paul

27
00:01:11,400 --> 00:01:13,560
all right hi thanks everybody

28
00:01:13,560 --> 00:01:15,360
um I have quite a bit of material and a

29
00:01:15,360 --> 00:01:16,979
little bit of time so I'm going to talk

30
00:01:16,979 --> 00:01:19,619
really fast what I'm here to tell you

31
00:01:19,619 --> 00:01:22,140
about is a um a couple of activities

32
00:01:22,140 --> 00:01:25,320
going on in the IEEE 802.1 standards

33
00:01:25,320 --> 00:01:27,600
organization I'm a task group chair in

34
00:01:27,600 --> 00:01:29,939
that I'm also the editor of uh at least

35
00:01:29,939 --> 00:01:31,560
one of these projects hopefully two of

36
00:01:31,560 --> 00:01:33,180
them

37
00:01:33,180 --> 00:01:35,100
um and I have to give you a standard

38
00:01:35,100 --> 00:01:36,840
disclaimer I'll be talking about the

39
00:01:36,840 --> 00:01:39,060
standards activities in the IEEE but

40
00:01:39,060 --> 00:01:41,460
these are of course my own uh position

41
00:01:41,460 --> 00:01:44,220
right so not a position of the standards

42
00:01:44,220 --> 00:01:47,280
organization so in IEEE we have a an

43
00:01:47,280 --> 00:01:49,799
organization or an activity we call the

44
00:01:49,799 --> 00:01:51,840
network enhancements for the next decade

45
00:01:51,840 --> 00:01:54,960
or nindica that group is kind of a

46
00:01:54,960 --> 00:01:56,520
forward-looking group where they they

47
00:01:56,520 --> 00:01:58,320
sort of pre-standards

48
00:01:58,320 --> 00:02:00,360
um and look at various activities and

49
00:02:00,360 --> 00:02:02,579
try to engage industry Partners as well

50
00:02:02,579 --> 00:02:05,340
so it's open it's not a close standard

51
00:02:05,340 --> 00:02:07,619
activity and what we've done is

52
00:02:07,619 --> 00:02:09,720
published a couple of reports and most

53
00:02:09,720 --> 00:02:12,180
of the technologies that are going to

54
00:02:12,180 --> 00:02:13,800
talk about are in these reports so I

55
00:02:13,800 --> 00:02:15,540
would encourage you to take a quick look

56
00:02:15,540 --> 00:02:18,120
at that stuff if you can this is the

57
00:02:18,120 --> 00:02:19,200
stuff I'm going to go through really

58
00:02:19,200 --> 00:02:20,819
quickly because you guys all know that

59
00:02:20,819 --> 00:02:23,520
we're in a new era data Centric that's

60
00:02:23,520 --> 00:02:25,620
kind of this combination of high

61
00:02:25,620 --> 00:02:27,780
performance Computing and big data in

62
00:02:27,780 --> 00:02:29,459
the cloud

63
00:02:29,459 --> 00:02:30,900
um what it's doing is putting a huge

64
00:02:30,900 --> 00:02:33,540
stress on the network again you guys

65
00:02:33,540 --> 00:02:35,459
understand there's a huge amount of data

66
00:02:35,459 --> 00:02:38,940
and accessing that data is uh becoming

67
00:02:38,940 --> 00:02:41,160
amazingly fast right it's a Memory

68
00:02:41,160 --> 00:02:44,160
access speeds now uh spindles and things

69
00:02:44,160 --> 00:02:46,379
are kind of a thing of the past so what

70
00:02:46,379 --> 00:02:48,239
we have is a huge amount of data and

71
00:02:48,239 --> 00:02:51,120
very fast access to that data and so the

72
00:02:51,120 --> 00:02:54,120
old approach of you know moving the data

73
00:02:54,120 --> 00:02:56,940
to the compute uh back to the storage

74
00:02:56,940 --> 00:02:59,040
and all that it just doesn't scale

75
00:02:59,040 --> 00:03:01,260
anymore right so new new technologies in

76
00:03:01,260 --> 00:03:03,060
the data center are what we're looking

77
00:03:03,060 --> 00:03:06,920
for to try to address those huge changes

78
00:03:06,920 --> 00:03:09,720
and again as you are all aware there's a

79
00:03:09,720 --> 00:03:11,819
bunch of new innovation that's taken

80
00:03:11,819 --> 00:03:15,599
place uh protocols such as RDMA are now

81
00:03:15,599 --> 00:03:18,300
you know very popular running in data

82
00:03:18,300 --> 00:03:20,760
centers where you have memory to memory

83
00:03:20,760 --> 00:03:23,120
copies very ultra low latency

84
00:03:23,120 --> 00:03:26,280
storage non-volatile memory storage over

85
00:03:26,280 --> 00:03:30,120
Fabrics again uh what's happened is the

86
00:03:30,120 --> 00:03:32,760
the overall end-to-end latency the

87
00:03:32,760 --> 00:03:34,920
component that the network plays in that

88
00:03:34,920 --> 00:03:37,319
end-to-end latency is now much bigger

89
00:03:37,319 --> 00:03:39,720
than it used to be because the speeds of

90
00:03:39,720 --> 00:03:41,519
the memory and the storage themselves

91
00:03:41,519 --> 00:03:44,220
have gotten so fast uh so again the

92
00:03:44,220 --> 00:03:46,440
network is uh playing a bigger role in

93
00:03:46,440 --> 00:03:48,060
latency so we'd really like to reduce

94
00:03:48,060 --> 00:03:50,400
latency and then of course you're

95
00:03:50,400 --> 00:03:52,140
familiar with all the parallel software

96
00:03:52,140 --> 00:03:53,640
and distributed Hardware that we're

97
00:03:53,640 --> 00:03:55,860
building these data centers with all of

98
00:03:55,860 --> 00:03:57,480
these new technologies are stressing the

99
00:03:57,480 --> 00:03:58,640
network

100
00:03:58,640 --> 00:04:01,920
ethernet is our favorite data center

101
00:04:01,920 --> 00:04:05,099
Fabric and it's ubiquitous very cost

102
00:04:05,099 --> 00:04:07,920
effective very easy to play You're all

103
00:04:07,920 --> 00:04:10,560
familiar with that in the ethernet

104
00:04:10,560 --> 00:04:12,420
standardization there's been a large

105
00:04:12,420 --> 00:04:14,580
focus on bandwidth I would say we're

106
00:04:14,580 --> 00:04:16,918
headed towards 1.6 terabit per second

107
00:04:16,918 --> 00:04:21,000
speeds on ethernet now but not as much

108
00:04:21,000 --> 00:04:24,600
focus on latency and so this is where a

109
00:04:24,600 --> 00:04:26,040
lot of these new technologies and to

110
00:04:26,040 --> 00:04:28,440
really make ethernet the new ethernet

111
00:04:28,440 --> 00:04:30,120
for high performance Computing we really

112
00:04:30,120 --> 00:04:33,180
have to address latency but again we'd

113
00:04:33,180 --> 00:04:35,040
like to see ethernet address that so

114
00:04:35,040 --> 00:04:37,800
what changes do we have to make as you

115
00:04:37,800 --> 00:04:39,660
can see ethernet's the popular choice

116
00:04:39,660 --> 00:04:41,940
when you look at the top 500 super

117
00:04:41,940 --> 00:04:43,620
computers in the world more than 50

118
00:04:43,620 --> 00:04:46,199
percent of them are using ethernet as

119
00:04:46,199 --> 00:04:49,020
their Fabric and that's great however

120
00:04:49,020 --> 00:04:51,320
when you look a little closer

121
00:04:51,320 --> 00:04:54,360
and you look at the top 100 instead of

122
00:04:54,360 --> 00:04:56,460
the top 500 what you see is ethernet is

123
00:04:56,460 --> 00:05:00,419
not as much the the fabric of choice for

124
00:05:00,419 --> 00:05:02,840
those ultra high performance

125
00:05:02,840 --> 00:05:05,280
supercomputers so why what is the

126
00:05:05,280 --> 00:05:07,080
reasoning for that and again what is it

127
00:05:07,080 --> 00:05:09,720
we could do in the ethernet standards

128
00:05:09,720 --> 00:05:11,880
organizations either within standards or

129
00:05:11,880 --> 00:05:16,080
without outside to improve that well if

130
00:05:16,080 --> 00:05:17,820
you look at what some of the perceived

131
00:05:17,820 --> 00:05:19,860
advantages that other people talk about

132
00:05:19,860 --> 00:05:22,160
of the other Fabrics such as infiniband

133
00:05:22,160 --> 00:05:24,660
it has things like guaranteed Hardware

134
00:05:24,660 --> 00:05:27,060
delivery different kind of flow control

135
00:05:27,060 --> 00:05:31,080
credit based Hardware re-transmission

136
00:05:31,080 --> 00:05:32,280
um you know different kinds of

137
00:05:32,280 --> 00:05:34,560
congestion management techniques you

138
00:05:34,560 --> 00:05:37,520
often see cut through as a fundamental

139
00:05:37,520 --> 00:05:40,100
capability in the chipset designs

140
00:05:40,100 --> 00:05:43,320
there's 16 virtual Lanes versus eight

141
00:05:43,320 --> 00:05:46,020
traffic classes for prioritization so so

142
00:05:46,020 --> 00:05:49,080
a couple of those things it's in Phantom

143
00:05:49,080 --> 00:05:50,820
bands typically more centrally managed

144
00:05:50,820 --> 00:05:53,880
and has failover things and all of that

145
00:05:53,880 --> 00:05:56,400
pre-established ahead of time there have

146
00:05:56,400 --> 00:05:57,660
been people and you probably are

147
00:05:57,660 --> 00:06:00,060
familiar with this uh recent new super

148
00:06:00,060 --> 00:06:02,160
computers that have made proprietary

149
00:06:02,160 --> 00:06:05,520
enhancements to ethernet itself in order

150
00:06:05,520 --> 00:06:07,800
to get it to address the needs and and

151
00:06:07,800 --> 00:06:09,840
those are things like again a credit

152
00:06:09,840 --> 00:06:11,780
based flow control scheme

153
00:06:11,780 --> 00:06:14,340
reducing the minimum frame size tip

154
00:06:14,340 --> 00:06:17,160
ethernet has a 64 byte minimum frame

155
00:06:17,160 --> 00:06:19,740
size it's very historic from when the

156
00:06:19,740 --> 00:06:22,319
days of collisions and things but for

157
00:06:22,319 --> 00:06:24,660
low latency messaging and locking memory

158
00:06:24,660 --> 00:06:25,919
and things like that we really want

159
00:06:25,919 --> 00:06:28,259
small messages so they've reduced frame

160
00:06:28,259 --> 00:06:30,479
size they've done some things for

161
00:06:30,479 --> 00:06:32,940
compatibility and one important thing is

162
00:06:32,940 --> 00:06:35,220
in the physical layer the Forward Air

163
00:06:35,220 --> 00:06:36,900
correction that you're seeing and the

164
00:06:36,900 --> 00:06:39,720
high high bandwidth these days has the

165
00:06:39,720 --> 00:06:42,000
trade-off of increasing latency so you

166
00:06:42,000 --> 00:06:43,800
have to you have to delay packets in

167
00:06:43,800 --> 00:06:45,900
order to use Forward Air Corrections so

168
00:06:45,900 --> 00:06:47,699
so maybe addressing Forward Air

169
00:06:47,699 --> 00:06:49,560
correction is another way to to reduce

170
00:06:49,560 --> 00:06:52,500
latency so there have been some um some

171
00:06:52,500 --> 00:06:54,780
things done in the proprietary scheme

172
00:06:54,780 --> 00:06:57,600
but not necessarily in the standards so

173
00:06:57,600 --> 00:07:01,020
historically about 12 years ago the IEEE

174
00:07:01,020 --> 00:07:02,940
did it had a big focus on data center

175
00:07:02,940 --> 00:07:06,240
ethernet uh it was called DCB data

176
00:07:06,240 --> 00:07:08,340
center bridging group and there was a

177
00:07:08,340 --> 00:07:10,919
set of Standards done primarily around

178
00:07:10,919 --> 00:07:13,740
uh supporting fiber channel over

179
00:07:13,740 --> 00:07:15,960
Ethernet or the very first generation of

180
00:07:15,960 --> 00:07:20,099
RDMA on a layer 2 Fabric and this is

181
00:07:20,099 --> 00:07:22,440
where we got better queuing and better

182
00:07:22,440 --> 00:07:25,699
qos we got priority based flow control

183
00:07:25,699 --> 00:07:28,080
and a protocol called congestion

184
00:07:28,080 --> 00:07:29,400
notification which I'll talk a little

185
00:07:29,400 --> 00:07:31,800
bit about recently a project that I'm

186
00:07:31,800 --> 00:07:33,180
working on and I'll talk more about it

187
00:07:33,180 --> 00:07:35,819
is congestion isolation

188
00:07:35,819 --> 00:07:37,919
um and that's uh just about done in the

189
00:07:37,919 --> 00:07:40,740
standards but really what we did 12

190
00:07:40,740 --> 00:07:42,840
years ago was not enough obviously as

191
00:07:42,840 --> 00:07:45,660
you saw in the top 500 from finiband

192
00:07:45,660 --> 00:07:48,479
still a very strong uh fabric technology

193
00:07:48,479 --> 00:07:50,520
we need to do more we need to address

194
00:07:50,520 --> 00:07:53,580
in-cast congestion in particular all of

195
00:07:53,580 --> 00:07:56,340
the AI applications naturally have in

196
00:07:56,340 --> 00:07:59,460
cast or create in cast just by the way

197
00:07:59,460 --> 00:08:02,280
they operate we'd like to improve how

198
00:08:02,280 --> 00:08:04,560
you detect and respond to congestion

199
00:08:04,560 --> 00:08:07,860
itself further reducing latency and of

200
00:08:07,860 --> 00:08:09,720
course simplifying configuration right a

201
00:08:09,720 --> 00:08:11,520
lot of the Technologies we defined 10

202
00:08:11,520 --> 00:08:13,080
years ago were pretty difficult to

203
00:08:13,080 --> 00:08:15,840
deploy and as a consequence maybe didn't

204
00:08:15,840 --> 00:08:17,639
get as much use as they would have liked

205
00:08:17,639 --> 00:08:18,780
to

206
00:08:18,780 --> 00:08:21,680
um and so so that's so it's more being

207
00:08:21,680 --> 00:08:24,240
required and that's kind of the focus of

208
00:08:24,240 --> 00:08:26,759
these new activities again and trying to

209
00:08:26,759 --> 00:08:29,340
make ethernet the fabric of choice so

210
00:08:29,340 --> 00:08:32,219
today I and you guys could obviously

211
00:08:32,219 --> 00:08:34,860
confirm this but our belief is that the

212
00:08:34,860 --> 00:08:37,020
kind of state of the art is a layer 3

213
00:08:37,020 --> 00:08:40,458
Network in a class kind of design

214
00:08:40,458 --> 00:08:44,459
and that we use ecn or congestion

215
00:08:44,459 --> 00:08:46,920
notification bits early congest

216
00:08:46,920 --> 00:08:48,959
notification marking in the IP header

217
00:08:48,959 --> 00:08:52,140
and having those propagate back towards

218
00:08:52,140 --> 00:08:54,120
the source so that the transport layers

219
00:08:54,120 --> 00:08:57,660
can adapt their rate of injection if you

220
00:08:57,660 --> 00:09:00,360
start to run into a problem where you're

221
00:09:00,360 --> 00:09:02,279
going to see losses or drops in the

222
00:09:02,279 --> 00:09:04,260
network you'll rely on priority flow

223
00:09:04,260 --> 00:09:07,200
control kind of your last gasps to not

224
00:09:07,200 --> 00:09:10,019
drop packets and that pushes back and

225
00:09:10,019 --> 00:09:12,060
just stops all flows to keep things from

226
00:09:12,060 --> 00:09:14,160
from falling but there's some problems

227
00:09:14,160 --> 00:09:16,680
of that we'll talk about and we tend to

228
00:09:16,680 --> 00:09:21,600
use you know layer 3 technology so dscp

229
00:09:21,600 --> 00:09:24,300
code points not VLAN priority bits that

230
00:09:24,300 --> 00:09:26,220
kind of stuff so so this is what we're

231
00:09:26,220 --> 00:09:28,380
assuming data centers are built on I

232
00:09:28,380 --> 00:09:30,660
know there's some Innovation going on as

233
00:09:30,660 --> 00:09:32,339
well where this could be could be

234
00:09:32,339 --> 00:09:34,620
changing as well let me briefly tell you

235
00:09:34,620 --> 00:09:37,800
what are the existing tools that we have

236
00:09:37,800 --> 00:09:39,959
um there on the left there is priority

237
00:09:39,959 --> 00:09:43,100
based flow control so obviously I didn't

238
00:09:43,100 --> 00:09:46,440
do the undo the timing

239
00:09:46,440 --> 00:09:48,480
um so priority based flow control what

240
00:09:48,480 --> 00:09:50,220
happens you see traffic coming from the

241
00:09:50,220 --> 00:09:52,800
left to the right on these diagrams at a

242
00:09:52,800 --> 00:09:54,660
destination topper rack switch we

243
00:09:54,660 --> 00:09:56,700
experienced some congestion and we're

244
00:09:56,700 --> 00:09:58,440
almost about to drop packets so we push

245
00:09:58,440 --> 00:10:00,180
back with a priority based flow control

246
00:10:00,180 --> 00:10:03,180
message and then if that causes all

247
00:10:03,180 --> 00:10:04,920
packets to back up and then push back

248
00:10:04,920 --> 00:10:07,200
again push back again what that creates

249
00:10:07,200 --> 00:10:09,600
is congestion spreading it also creates

250
00:10:09,600 --> 00:10:11,279
head of line blocking so in the middle

251
00:10:11,279 --> 00:10:13,740
you see there's a flow that is not going

252
00:10:13,740 --> 00:10:15,839
towards the congestion but is a victim

253
00:10:15,839 --> 00:10:18,779
of that pause and in his block so it's

254
00:10:18,779 --> 00:10:20,519
so that's one of the downsides of

255
00:10:20,519 --> 00:10:23,100
priority flow control if you're sharing

256
00:10:23,100 --> 00:10:24,779
a traffic class with lots of different

257
00:10:24,779 --> 00:10:26,700
types of traffic you can block things

258
00:10:26,700 --> 00:10:28,580
you don't want to

259
00:10:28,580 --> 00:10:30,959
congestion notification was another

260
00:10:30,959 --> 00:10:33,660
standard done about 12 years ago and

261
00:10:33,660 --> 00:10:35,339
what it did was when it detected

262
00:10:35,339 --> 00:10:38,060
congestion it sent a layer 2 message

263
00:10:38,060 --> 00:10:40,440
across the fabric all the way to the

264
00:10:40,440 --> 00:10:42,839
source and that Source would then have a

265
00:10:42,839 --> 00:10:45,540
rate limiter and slow down the that flow

266
00:10:45,540 --> 00:10:49,019
and and there was an algorithm for how

267
00:10:49,019 --> 00:10:51,360
you did that the problem with this one

268
00:10:51,360 --> 00:10:53,220
of course was that it's a layer two

269
00:10:53,220 --> 00:10:55,620
technology and nobody builds giant Layer

270
00:10:55,620 --> 00:10:57,720
Two Fabrics in their data center like

271
00:10:57,720 --> 00:11:00,920
this anymore and again it was done for

272
00:11:00,920 --> 00:11:03,060
non-ip-based protocols like Fiverr

273
00:11:03,060 --> 00:11:04,260
Channel

274
00:11:04,260 --> 00:11:06,240
um and so it didn't get as much

275
00:11:06,240 --> 00:11:09,360
deployment as I think people would have

276
00:11:09,360 --> 00:11:10,860
liked to have seen

277
00:11:10,860 --> 00:11:12,839
so there's some new initiatives and this

278
00:11:12,839 --> 00:11:14,820
is really the point of my talk um is

279
00:11:14,820 --> 00:11:16,740
there's what's going on in IEEE right

280
00:11:16,740 --> 00:11:18,120
now that we're trying to do to address

281
00:11:18,120 --> 00:11:21,120
these there's three standards um and the

282
00:11:21,120 --> 00:11:23,040
the I can give you the secret decoder

283
00:11:23,040 --> 00:11:24,959
ring for how the little big letters and

284
00:11:24,959 --> 00:11:26,519
all that work on another time if you

285
00:11:26,519 --> 00:11:29,579
want to ask me in the hall but 802.1 qcz

286
00:11:29,579 --> 00:11:31,880
is congestion isolation

287
00:11:31,880 --> 00:11:34,920
qdt or PFC enhancements so we're making

288
00:11:34,920 --> 00:11:38,040
some improvements to PFC and then qdw is

289
00:11:38,040 --> 00:11:39,660
a brand new one called Source flow

290
00:11:39,660 --> 00:11:41,820
control and I'll explain each of these

291
00:11:41,820 --> 00:11:43,800
in in brief in brief

292
00:11:43,800 --> 00:11:46,800
so this was that same layer 3 data

293
00:11:46,800 --> 00:11:48,240
center slide without congestion

294
00:11:48,240 --> 00:11:50,880
notification as I mentioned you mark

295
00:11:50,880 --> 00:11:55,800
congestion and and you uh send your uh

296
00:11:55,800 --> 00:11:57,420
congestion signal back to the source

297
00:11:57,420 --> 00:12:00,000
meanwhile if it if the rate doesn't slow

298
00:12:00,000 --> 00:12:02,940
down fast enough you may invoke priority

299
00:12:02,940 --> 00:12:05,180
flow control again the downside being

300
00:12:05,180 --> 00:12:08,339
victim flows might be blocked by that

301
00:12:08,339 --> 00:12:10,500
priority flow control so what congestion

302
00:12:10,500 --> 00:12:13,440
isolation does is rather than try to

303
00:12:13,440 --> 00:12:15,720
block all the flows it takes those flows

304
00:12:15,720 --> 00:12:17,820
that are creating congestion and it

305
00:12:17,820 --> 00:12:20,279
moves them or begins to cue them in a

306
00:12:20,279 --> 00:12:22,920
different queue so it more or less puts

307
00:12:22,920 --> 00:12:25,860
them out of the way or delays their uh

308
00:12:25,860 --> 00:12:28,740
their transmission while the end-to-end

309
00:12:28,740 --> 00:12:30,660
congestion control has time to take

310
00:12:30,660 --> 00:12:32,880
effect so we're sort of using some of

311
00:12:32,880 --> 00:12:35,820
the memory in the network to delay while

312
00:12:35,820 --> 00:12:37,440
the Indian congestion control can take

313
00:12:37,440 --> 00:12:39,300
effect and the hope is that we don't

314
00:12:39,300 --> 00:12:42,060
have to use priority flow control we can

315
00:12:42,060 --> 00:12:44,459
just move the the heavy the the big

316
00:12:44,459 --> 00:12:47,459
congesting flows out of the way and and

317
00:12:47,459 --> 00:12:51,360
and as a consequence let the the flows

318
00:12:51,360 --> 00:12:52,980
that uh eliminate that head of line

319
00:12:52,980 --> 00:12:55,019
blocking and let the smaller flows make

320
00:12:55,019 --> 00:12:56,519
their way through

321
00:12:56,519 --> 00:12:58,860
so the goals again is that it's designed

322
00:12:58,860 --> 00:13:00,959
to work in conjunction with the higher

323
00:13:00,959 --> 00:13:03,180
layer in control uh congestion control

324
00:13:03,180 --> 00:13:06,180
ecn TCP

325
00:13:06,180 --> 00:13:07,920
um it's um

326
00:13:07,920 --> 00:13:11,880
was also designed to support a bigger

327
00:13:11,880 --> 00:13:13,620
faster bigger data centers without

328
00:13:13,620 --> 00:13:15,660
having to rely on priority-based flow

329
00:13:15,660 --> 00:13:18,899
control so it's agnostic of it there are

330
00:13:18,899 --> 00:13:21,660
two TCP flows or UDP flows

331
00:13:21,660 --> 00:13:24,060
um and so we we're and it's hard to add

332
00:13:24,060 --> 00:13:26,279
memory to switch buffers these days at

333
00:13:26,279 --> 00:13:28,260
the speeds that we're talking so we'd

334
00:13:28,260 --> 00:13:30,480
like to not we'd make more intelligent

335
00:13:30,480 --> 00:13:32,880
use of our memory if you will

336
00:13:32,880 --> 00:13:34,740
um and then we can again try to

337
00:13:34,740 --> 00:13:36,959
eliminate using PFC so this standard

338
00:13:36,959 --> 00:13:39,420
again is virtually done

339
00:13:39,420 --> 00:13:42,360
um and all and almost ready to ship one

340
00:13:42,360 --> 00:13:44,040
another activity that's recently started

341
00:13:44,040 --> 00:13:46,500
we're calling it PFC enhancements and so

342
00:13:46,500 --> 00:13:49,320
priority flow control it was done 12

343
00:13:49,320 --> 00:13:50,660
years ago again

344
00:13:50,660 --> 00:13:53,279
and it's time to get some updates for it

345
00:13:53,279 --> 00:13:54,839
there were two things that we're trying

346
00:13:54,839 --> 00:13:57,540
to solve one is the automatic

347
00:13:57,540 --> 00:13:59,880
calculation of Headroom so what Headroom

348
00:13:59,880 --> 00:14:02,160
is in this slide is that little bit of

349
00:14:02,160 --> 00:14:04,740
memory that you need to reserve so that

350
00:14:04,740 --> 00:14:06,779
when you tell your peer to stop sending

351
00:14:06,779 --> 00:14:08,519
all the data that's in flight light can

352
00:14:08,519 --> 00:14:11,040
be absorbed without dropping them and so

353
00:14:11,040 --> 00:14:13,440
determining Headroom can be a little

354
00:14:13,440 --> 00:14:16,079
tricky depends on the cable length the

355
00:14:16,079 --> 00:14:18,060
implementation delays the buffer

356
00:14:18,060 --> 00:14:19,620
chunking inside the switch there's a

357
00:14:19,620 --> 00:14:21,660
number of parameters very difficult for

358
00:14:21,660 --> 00:14:23,160
people to configure in the data center

359
00:14:23,160 --> 00:14:24,959
and so as a consequence they hadn't done

360
00:14:24,959 --> 00:14:27,060
so much of that and so one of the goals

361
00:14:27,060 --> 00:14:29,399
here was to automatically calculate that

362
00:14:29,399 --> 00:14:32,459
by doing measurements and so we are

363
00:14:32,459 --> 00:14:35,519
implementing a a new attribute for lldp

364
00:14:35,519 --> 00:14:37,860
that so our Pure we know our peer can do

365
00:14:37,860 --> 00:14:40,560
this and if we can measure the delays

366
00:14:40,560 --> 00:14:43,320
between exactly what PFC is needed then

367
00:14:43,320 --> 00:14:46,560
we don't have to waste memory uh on you

368
00:14:46,560 --> 00:14:48,779
know inefficient allocation of memory

369
00:14:48,779 --> 00:14:50,880
for for Headroom so that's one of the

370
00:14:50,880 --> 00:14:53,639
goals the other goal is to allow the

371
00:14:53,639 --> 00:14:55,440
protection of priority-based flow

372
00:14:55,440 --> 00:14:57,839
control frames so using Mac SEC so that

373
00:14:57,839 --> 00:14:59,220
we can encrypt those if we're going to

374
00:14:59,220 --> 00:15:01,139
do that and so you might ask why is that

375
00:15:01,139 --> 00:15:04,500
well Azure had an interesting use case

376
00:15:04,500 --> 00:15:06,720
they had two data centers and they were

377
00:15:06,720 --> 00:15:10,260
wanting to run RDMA a across those data

378
00:15:10,260 --> 00:15:12,480
centers so on external links links that

379
00:15:12,480 --> 00:15:15,060
actually leave leave the building and so

380
00:15:15,060 --> 00:15:16,740
as a consequence any traffic that's

381
00:15:16,740 --> 00:15:18,000
going to leave the building whether it's

382
00:15:18,000 --> 00:15:20,820
a lease line or not would needs to be

383
00:15:20,820 --> 00:15:24,240
encrypted so they were using maxsec and

384
00:15:24,240 --> 00:15:25,860
you can there's a nice YouTube video

385
00:15:25,860 --> 00:15:28,260
that they tell us all about how they're

386
00:15:28,260 --> 00:15:29,519
doing this stuff

387
00:15:29,519 --> 00:15:32,220
and the problem was the interpretation

388
00:15:32,220 --> 00:15:34,440
of how Mac SEC and priority flow control

389
00:15:34,440 --> 00:15:37,260
work together it was not specified very

390
00:15:37,260 --> 00:15:40,440
well very early implementations of

391
00:15:40,440 --> 00:15:43,199
maxsec they did it as a bump in the wire

392
00:15:43,199 --> 00:15:46,380
or as sort of in the Phi layer and so

393
00:15:46,380 --> 00:15:48,839
every frame that comes out of the system

394
00:15:48,839 --> 00:15:51,899
was getting encrypted whether it was a

395
00:15:51,899 --> 00:15:53,940
flow control frame or just a regular

396
00:15:53,940 --> 00:15:56,579
data frame but as the way the the

397
00:15:56,579 --> 00:15:59,220
architecture is specified and where

398
00:15:59,220 --> 00:16:02,760
maxsec fits in the overall Network stack

399
00:16:02,760 --> 00:16:04,980
um it's a it didn't allow for the

400
00:16:04,980 --> 00:16:07,560
encryption of priority flow control so

401
00:16:07,560 --> 00:16:09,779
the subsequent implementations that put

402
00:16:09,779 --> 00:16:12,839
maxac directly in the chipsets they

403
00:16:12,839 --> 00:16:14,519
implemented it according to what the

404
00:16:14,519 --> 00:16:16,199
interpretation of the spec well then it

405
00:16:16,199 --> 00:16:18,600
wouldn't Backward Compatible with the

406
00:16:18,600 --> 00:16:20,339
older implementations because on one

407
00:16:20,339 --> 00:16:22,680
side you would encrypt the PFC frame and

408
00:16:22,680 --> 00:16:24,540
the other side it he wasn't expecting it

409
00:16:24,540 --> 00:16:25,980
to be encrypted and so they didn't talk

410
00:16:25,980 --> 00:16:28,079
so we had to fix this issue so that's

411
00:16:28,079 --> 00:16:30,660
the second piece of enhancement that

412
00:16:30,660 --> 00:16:32,940
we're doing which is handling

413
00:16:32,940 --> 00:16:34,920
um encryption of priority-based flow

414
00:16:34,920 --> 00:16:37,259
controls so our goals for this is to

415
00:16:37,259 --> 00:16:38,940
really reduce the complexity of

416
00:16:38,940 --> 00:16:41,579
deploying it again it's not everyone's

417
00:16:41,579 --> 00:16:43,320
favorite technology because of that head

418
00:16:43,320 --> 00:16:45,240
of line blocking and congestion

419
00:16:45,240 --> 00:16:48,420
spreading but it is used often at the

420
00:16:48,420 --> 00:16:50,940
very edges of the network again to avoid

421
00:16:50,940 --> 00:16:53,459
loss RDMA protocols really don't like

422
00:16:53,459 --> 00:16:55,500
packet drops they don't respond very

423
00:16:55,500 --> 00:16:59,459
well to that and so uh and then we're

424
00:16:59,459 --> 00:17:02,339
just specifying a new shim that will

425
00:17:02,339 --> 00:17:05,160
allow us to encrypt PFC frames as well

426
00:17:05,160 --> 00:17:09,059
and that'll allow us to um to talk to

427
00:17:09,059 --> 00:17:11,579
these old implementations as well as the

428
00:17:11,579 --> 00:17:13,500
new implementations so those are the key

429
00:17:13,500 --> 00:17:15,839
things for that that feature so the

430
00:17:15,839 --> 00:17:18,480
third and and kind of final new activity

431
00:17:18,480 --> 00:17:20,819
that's going on is one called Source

432
00:17:20,819 --> 00:17:24,359
flow control and what this does is very

433
00:17:24,359 --> 00:17:26,400
similar to that congestion notification

434
00:17:26,400 --> 00:17:28,199
that I showed you that was for Layer Two

435
00:17:28,199 --> 00:17:30,440
networks but this works at layer three

436
00:17:30,440 --> 00:17:32,760
and the idea is that you detect

437
00:17:32,760 --> 00:17:34,620
congestion somewhere in the network of

438
00:17:34,620 --> 00:17:37,080
switches cues are backing up and he

439
00:17:37,080 --> 00:17:39,419
automatically generates a message that

440
00:17:39,419 --> 00:17:43,260
sends back to the source and that Source

441
00:17:43,260 --> 00:17:45,720
will just pause we'll do flow control as

442
00:17:45,720 --> 00:17:47,760
opposed to per flow rate limiting and

443
00:17:47,760 --> 00:17:49,140
all that kind of stuff now if they want

444
00:17:49,140 --> 00:17:50,760
to do per flow queuing and all that

445
00:17:50,760 --> 00:17:53,039
that's up to them that's great but the

446
00:17:53,039 --> 00:17:54,660
specification tries to keep it very

447
00:17:54,660 --> 00:17:57,480
simple so it's a way to do pause without

448
00:17:57,480 --> 00:17:59,100
all the head of line blocking you go all

449
00:17:59,100 --> 00:18:01,020
the way back to the source and you try

450
00:18:01,020 --> 00:18:04,020
to pause there and what's interesting is

451
00:18:04,020 --> 00:18:05,940
there's also a feature we call proxy

452
00:18:05,940 --> 00:18:08,940
mode which is going to allow the top of

453
00:18:08,940 --> 00:18:11,820
rack switch at the source to intercept

454
00:18:11,820 --> 00:18:14,100
that message and convert it to an actual

455
00:18:14,100 --> 00:18:17,220
PFC message and this should help with uh

456
00:18:17,220 --> 00:18:19,140
deployment and roll out that means you

457
00:18:19,140 --> 00:18:20,640
don't have to have all your servers

458
00:18:20,640 --> 00:18:23,160
upgraded or they don't have the Knicks

459
00:18:23,160 --> 00:18:24,720
and smart Nicks don't have to become

460
00:18:24,720 --> 00:18:27,179
aware of this new protocol immediately

461
00:18:27,179 --> 00:18:28,799
they can you can take your time with

462
00:18:28,799 --> 00:18:31,200
that and you can still rely on on

463
00:18:31,200 --> 00:18:33,960
traditional priority flow control but we

464
00:18:33,960 --> 00:18:36,120
get the benefits of the source flow

465
00:18:36,120 --> 00:18:38,400
control feature

466
00:18:38,400 --> 00:18:40,860
so that that's uh again that standard is

467
00:18:40,860 --> 00:18:43,200
just kind of taking place right now

468
00:18:43,200 --> 00:18:44,880
um it's also designed to work in

469
00:18:44,880 --> 00:18:46,919
conjunction with higher layer congestion

470
00:18:46,919 --> 00:18:49,320
control into incongestion control like

471
00:18:49,320 --> 00:18:53,039
dcqcn dctcp and other congestion

472
00:18:53,039 --> 00:18:56,340
isolation it really reduces the latency

473
00:18:56,340 --> 00:18:59,820
and again in large scale data centers

474
00:18:59,820 --> 00:19:03,000
um by uh you know giving you better tail

475
00:19:03,000 --> 00:19:05,419
latency in the overall flow

476
00:19:05,419 --> 00:19:07,740
overall distribution of flows in the

477
00:19:07,740 --> 00:19:10,799
network it provides that benefits of PFC

478
00:19:10,799 --> 00:19:14,280
so very simple uh but at the source and

479
00:19:14,280 --> 00:19:16,020
it avoids the head of line blocking all

480
00:19:16,020 --> 00:19:18,419
the way through the network and it has

481
00:19:18,419 --> 00:19:19,980
this mode that's going to make it easier

482
00:19:19,980 --> 00:19:21,419
to deploy without having to upgrade

483
00:19:21,419 --> 00:19:24,059
everything in the network and the cool

484
00:19:24,059 --> 00:19:25,919
thing is it carries the flow information

485
00:19:25,919 --> 00:19:28,260
so when you identify a flow and you send

486
00:19:28,260 --> 00:19:31,320
back to the source you can use that sort

487
00:19:31,320 --> 00:19:33,299
that flow information to do more

488
00:19:33,299 --> 00:19:35,520
advanced pause or flow control if you

489
00:19:35,520 --> 00:19:38,340
want on a per flow basis or even

490
00:19:38,340 --> 00:19:40,620
caching of other flows that might be

491
00:19:40,620 --> 00:19:42,900
going to the same destination so there's

492
00:19:42,900 --> 00:19:44,460
a lot of Rich information in the

493
00:19:44,460 --> 00:19:47,039
signaling message itself

494
00:19:47,039 --> 00:19:49,140
so that's uh those are the three kind of

495
00:19:49,140 --> 00:19:52,140
things there's a design team that we

496
00:19:52,140 --> 00:19:54,059
have that sort of works on you know

497
00:19:54,059 --> 00:19:56,039
these collecting requirements and

498
00:19:56,039 --> 00:19:58,679
expressing features new new features

499
00:19:58,679 --> 00:20:00,120
that they want this involves a lot of

500
00:20:00,120 --> 00:20:02,880
the main chip vendors broadcom Intel

501
00:20:02,880 --> 00:20:04,799
some of the system vendors like Dell and

502
00:20:04,799 --> 00:20:06,860
HP Huawei is involved

503
00:20:06,860 --> 00:20:10,440
and we're we're also considering you

504
00:20:10,440 --> 00:20:12,539
know other Technologies as well that

505
00:20:12,539 --> 00:20:14,700
that we could look at and begin to

506
00:20:14,700 --> 00:20:17,280
standardize so and the whole motivation

507
00:20:17,280 --> 00:20:18,600
for this again is to try to make

508
00:20:18,600 --> 00:20:21,960
ethernet that leading Network fabric for

509
00:20:21,960 --> 00:20:24,120
high performance Computing and modern

510
00:20:24,120 --> 00:20:26,400
data centers so

511
00:20:26,400 --> 00:20:28,140
um there's a bunch of other ideas again

512
00:20:28,140 --> 00:20:30,179
I would encourage you to take a look at

513
00:20:30,179 --> 00:20:32,460
the papers that I mentioned at the very

514
00:20:32,460 --> 00:20:34,740
beginning there were some other ideas

515
00:20:34,740 --> 00:20:37,320
that we we brought up here that weren't

516
00:20:37,320 --> 00:20:39,000
necessarily appropriate for

517
00:20:39,000 --> 00:20:41,160
standardization in the IEEE but maybe

518
00:20:41,160 --> 00:20:43,980
other places these involve changing the

519
00:20:43,980 --> 00:20:46,620
whole transport protocol itself instead

520
00:20:46,620 --> 00:20:50,760
of using TCP or or RDMA or rocky maybe

521
00:20:50,760 --> 00:20:52,380
there's some other types of protocols

522
00:20:52,380 --> 00:20:55,380
that have better better management of

523
00:20:55,380 --> 00:20:57,299
congestion in the data center where

524
00:20:57,299 --> 00:20:59,820
bandwidth the bandwidth delay product is

525
00:20:59,820 --> 00:21:01,620
very unique

526
00:21:01,620 --> 00:21:03,419
um and we're looking at other things

527
00:21:03,419 --> 00:21:05,520
like different ways to supplement

528
00:21:05,520 --> 00:21:08,400
congestion notifications there's a lot

529
00:21:08,400 --> 00:21:10,320
of information about Network Telemetry

530
00:21:10,320 --> 00:21:13,679
things going on in the ietf where we're

531
00:21:13,679 --> 00:21:16,440
passing data in band in the network

532
00:21:16,440 --> 00:21:19,200
again to to reduce congestion so any of

533
00:21:19,200 --> 00:21:22,100
these would be good topics for future

534
00:21:22,100 --> 00:21:24,960
presentations at nanog and again they

535
00:21:24,960 --> 00:21:26,220
are in the paper we do have I have

536
00:21:26,220 --> 00:21:27,780
backup material on that but not enough

537
00:21:27,780 --> 00:21:30,740
time to talk about while we're here

538
00:21:30,740 --> 00:21:34,919
and again the the nindica app operation

539
00:21:34,919 --> 00:21:38,280
in the IEEE is designed specifically to

540
00:21:38,280 --> 00:21:41,280
engage industry partners and it's you

541
00:21:41,280 --> 00:21:43,020
don't have to be an IEEE member you

542
00:21:43,020 --> 00:21:44,460
don't have to pay dues or anything like

543
00:21:44,460 --> 00:21:46,440
that but we would really love to get the

544
00:21:46,440 --> 00:21:48,840
input from data center Network operators

545
00:21:48,840 --> 00:21:52,020
on these new technologies and as we're

546
00:21:52,020 --> 00:21:54,659
embarking on a new New Year here we're

547
00:21:54,659 --> 00:21:55,980
probably looking at another white paper

548
00:21:55,980 --> 00:21:58,440
another one of those reports and the

549
00:21:58,440 --> 00:22:00,600
associated Technologies so

550
00:22:00,600 --> 00:22:03,120
that's uh that's The quick summary I'd

551
00:22:03,120 --> 00:22:05,220
be happy to take some questions we do it

552
00:22:05,220 --> 00:22:08,620
looks like I did make it in time so

553
00:22:08,620 --> 00:22:14,199
[Applause]

554
00:22:17,640 --> 00:22:19,980
all right no questions there's one

555
00:22:19,980 --> 00:22:22,880
online here okay

556
00:22:22,980 --> 00:22:25,740
oh my glasses on yeah I have to get mine

557
00:22:25,740 --> 00:22:28,679
out this is from the lake is there any

558
00:22:28,679 --> 00:22:31,380
motivation with an IEEE to increase

559
00:22:31,380 --> 00:22:34,320
standard maximum frame size well beyond

560
00:22:34,320 --> 00:22:37,380
9k oh uh

561
00:22:37,380 --> 00:22:38,360
uh

562
00:22:38,360 --> 00:22:40,860
that's always a controversial topic I

563
00:22:40,860 --> 00:22:43,799
would say I have not seen uh anything

564
00:22:43,799 --> 00:22:45,960
about going well beyond 9k that's

565
00:22:45,960 --> 00:22:47,760
nothing I've I've heard

566
00:22:47,760 --> 00:22:49,919
um there's there's a desire to go the

567
00:22:49,919 --> 00:22:51,900
opposite direction as I mentioned to

568
00:22:51,900 --> 00:22:55,140
even smaller than 64 bytes

569
00:22:55,140 --> 00:22:57,059
um but I'm not personally aware of any

570
00:22:57,059 --> 00:23:00,539
any desire or activities in the IEEE to

571
00:23:00,539 --> 00:23:02,520
go beyond 9k but that's a perfect

572
00:23:02,520 --> 00:23:04,380
example of a kind of thing if there's an

573
00:23:04,380 --> 00:23:06,240
industry activity or an industry

574
00:23:06,240 --> 00:23:07,740
participant that would like to see that

575
00:23:07,740 --> 00:23:09,960
we can discuss that in that nindo

576
00:23:09,960 --> 00:23:12,120
organization and and perhaps it leads to

577
00:23:12,120 --> 00:23:14,899
a standard for that

578
00:23:15,960 --> 00:23:19,200
and the others we have six minutes you

579
00:23:19,200 --> 00:23:21,780
want wicked fast I do go fast I told you

580
00:23:21,780 --> 00:23:24,379
I could go fast

581
00:23:24,840 --> 00:23:27,000
do we have another question any uh one

582
00:23:27,000 --> 00:23:28,559
in the audience or online have any

583
00:23:28,559 --> 00:23:30,799
questions

584
00:23:34,159 --> 00:23:37,740
all right well thanks thank you Paul and

585
00:23:37,740 --> 00:23:41,000
brown to pause for Paul on that

