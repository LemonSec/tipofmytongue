1
00:00:09,870 --> 00:00:14,309
we're actually generous enough to<font color="#E5E5E5"> have</font>

2
00:00:12,240 --> 00:00:15,269
<font color="#E5E5E5">Santiago Alvarez from Cisco come in to</font>

3
00:00:14,309 --> 00:00:20,430
be able<font color="#E5E5E5"> to give us a little bit of</font>

4
00:00:15,269 --> 00:00:21,930
overview<font color="#E5E5E5"> on open config tutorial as</font><font color="#CCCCCC"> well</font>

5
00:00:20,430 --> 00:00:23,880
as show some coding and how to get

6
00:00:21,930 --> 00:00:26,880
<font color="#CCCCCC">things</font><font color="#E5E5E5"> done we also have in the audience</font>

7
00:00:23,880 --> 00:00:30,738
<font color="#CCCCCC">Aneesh</font><font color="#E5E5E5"> Rick from Google who</font><font color="#CCCCCC"> is one of</font>

8
00:00:26,880 --> 00:00:33,450
<font color="#E5E5E5">the main people involved and open config</font>

9
00:00:30,739 --> 00:00:40,219
consortium so<font color="#CCCCCC"> Oh track</font><font color="#E5E5E5"> was not</font><font color="#CCCCCC"> Jack was</font>

10
00:00:33,450 --> 00:00:44,609
saying all<font color="#CCCCCC"> right guys</font>

11
00:00:40,219 --> 00:00:47,579
two years<font color="#E5E5E5"> ago the open config group</font>

12
00:00:44,609 --> 00:00:50,489
<font color="#E5E5E5">started making public their data models</font>

13
00:00:47,579 --> 00:00:52,079
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> that it started the process</font><font color="#E5E5E5"> of</font>

14
00:00:50,489 --> 00:00:54,800
<font color="#E5E5E5">trying</font><font color="#CCCCCC"> to accelerate</font><font color="#E5E5E5"> the transformation</font>

15
00:00:52,079 --> 00:00:57,839
<font color="#CCCCCC">in how networks are traditionally</font>

16
00:00:54,800 --> 00:01:01,828
managed so an exercise that<font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to</font>

17
00:00:57,839 --> 00:01:03,929
<font color="#E5E5E5">do was okay it's been two</font><font color="#CCCCCC"> years what can</font>

18
00:01:01,829 --> 00:01:07,979
it<font color="#E5E5E5"> be done</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> with what has</font><font color="#CCCCCC"> been</font>

19
00:01:03,929 --> 00:01:10,920
<font color="#CCCCCC">accomplished so far and actually</font><font color="#E5E5E5"> you</font>

20
00:01:07,979 --> 00:01:13,500
will be<font color="#E5E5E5"> hopefully recently surprised</font>

21
00:01:10,920 --> 00:01:15,360
with the<font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> work you can do in</font>

22
00:01:13,500 --> 00:01:16,890
India<font color="#E5E5E5"> among the progress that</font><font color="#CCCCCC"> has been</font>

23
00:01:15,360 --> 00:01:20,760
made not<font color="#CCCCCC"> only from the</font><font color="#E5E5E5"> point of view</font>

24
00:01:16,890 --> 00:01:22,800
specifying data models<font color="#E5E5E5"> primarily and</font>

25
00:01:20,760 --> 00:01:27,810
also getting those data models

26
00:01:22,800 --> 00:01:30,210
implemented into products so in this

27
00:01:27,810 --> 00:01:32,040
presentation<font color="#E5E5E5"> we're gonna I'm gonna take</font>

28
00:01:30,210 --> 00:01:35,220
a<font color="#E5E5E5"> very pragmatic</font><font color="#CCCCCC"> approach I'm not gonna</font>

29
00:01:32,040 --> 00:01:37,530
try<font color="#E5E5E5"> to give you the</font><font color="#CCCCCC"> Holy Grail on open</font>

30
00:01:35,220 --> 00:01:39,750
config all the technical<font color="#CCCCCC"> details I'm</font>

31
00:01:37,530 --> 00:01:41,820
gonna do<font color="#E5E5E5"> kind of a quick overview we're</font>

32
00:01:39,750 --> 00:01:44,720
gonna zoom in into<font color="#E5E5E5"> a specific set of</font>

33
00:01:41,820 --> 00:01:48,330
data models that you know<font color="#E5E5E5"> that I think</font>

34
00:01:44,720 --> 00:01:50,580
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> are ready for you know for</font>

35
00:01:48,330 --> 00:01:54,300
experimentation and usage<font color="#CCCCCC"> in your own</font>

36
00:01:50,580 --> 00:01:56,429
networks and we're gonna see a test<font color="#CCCCCC"> but</font>

37
00:01:54,300 --> 00:01:57,539
a particular<font color="#CCCCCC"> workflow implemented with</font>

38
00:01:56,430 --> 00:02:00,450
those models and<font color="#E5E5E5"> we're gonna implement</font>

39
00:01:57,540 --> 00:02:02,910
<font color="#E5E5E5">the whole workflow using open config</font>

40
00:02:00,450 --> 00:02:05,040
data models<font color="#E5E5E5"> and we're gonna see actually</font>

41
00:02:02,910 --> 00:02:07,470
see a deployment<font color="#E5E5E5"> of appearing</font>

42
00:02:05,040 --> 00:02:09,840
configuration<font color="#E5E5E5"> doing the complete loss</font>

43
00:02:07,470 --> 00:02:12,870
<font color="#E5E5E5">closed loop validation of</font><font color="#CCCCCC"> that</font>

44
00:02:09,840 --> 00:02:15,959
<font color="#E5E5E5">configuration</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so let's talk</font>

45
00:02:12,870 --> 00:02:18,090
first about a quick introduction of open

46
00:02:15,959 --> 00:02:22,410
config<font color="#E5E5E5"> I'm assuming most of you have</font>

47
00:02:18,090 --> 00:02:25,010
heard<font color="#E5E5E5"> already what open config is trying</font>

48
00:02:22,410 --> 00:02:26,850
to achieve<font color="#CCCCCC"> it's basically a group</font><font color="#E5E5E5"> of</font>

49
00:02:25,010 --> 00:02:29,220
operators<font color="#E5E5E5"> that</font>

50
00:02:26,850 --> 00:02:30,840
together to come<font color="#E5E5E5"> up with</font><font color="#CCCCCC"> specifications</font>

51
00:02:29,220 --> 00:02:32,760
<font color="#CCCCCC">that will transport network</font>

52
00:02:30,840 --> 00:02:37,350
manageability<font color="#E5E5E5"> and they wanted to have</font><font color="#CCCCCC"> a</font>

53
00:02:32,760 --> 00:02:39,720
<font color="#E5E5E5">very user centric view so working group</font>

54
00:02:37,350 --> 00:02:42,989
<font color="#E5E5E5">as they define it by operators for</font>

55
00:02:39,720 --> 00:02:45,930
operators<font color="#E5E5E5"> okay they wanted to be if you</font>

56
00:02:42,990 --> 00:02:48,150
want their own<font color="#E5E5E5"> architects or architects</font>

57
00:02:45,930 --> 00:02:50,880
of their own<font color="#E5E5E5"> interfaces to network</font>

58
00:02:48,150 --> 00:02:54,330
manageability<font color="#E5E5E5"> the initial specifications</font>

59
00:02:50,880 --> 00:02:56,310
for data<font color="#CCCCCC"> model started to come out two</font>

60
00:02:54,330 --> 00:02:59,940
<font color="#E5E5E5">years ago I think the work probably</font>

61
00:02:56,310 --> 00:03:01,500
<font color="#CCCCCC">started like three years ago</font><font color="#E5E5E5"> and in the</font>

62
00:02:59,940 --> 00:03:03,090
<font color="#E5E5E5">last two years</font><font color="#CCCCCC"> there's been a growing</font>

63
00:03:01,500 --> 00:03:04,680
number<font color="#E5E5E5"> of implementations already</font>

64
00:03:03,090 --> 00:03:07,950
<font color="#E5E5E5">available and you got</font><font color="#CCCCCC"> here a quick</font>

65
00:03:04,680 --> 00:03:12,920
enumeration of<font color="#CCCCCC"> the operators that are</font>

66
00:03:07,950 --> 00:03:16,679
members<font color="#E5E5E5"> of the of the organization</font><font color="#CCCCCC"> I</font>

67
00:03:12,920 --> 00:03:20,220
said that open config<font color="#E5E5E5"> started to</font>

68
00:03:16,680 --> 00:03:22,440
<font color="#CCCCCC">deployed or to specify data models in</font>

69
00:03:20,220 --> 00:03:26,040
the last two<font color="#E5E5E5"> years right and for most</font>

70
00:03:22,440 --> 00:03:28,020
<font color="#CCCCCC">people kind of so far</font><font color="#E5E5E5"> when they</font><font color="#CCCCCC"> think</font>

71
00:03:26,040 --> 00:03:30,450
<font color="#E5E5E5">open</font><font color="#CCCCCC"> conflictive they think about</font><font color="#E5E5E5"> data</font>

72
00:03:28,020 --> 00:03:33,240
models<font color="#CCCCCC"> when you really zoom in you</font>

73
00:03:30,450 --> 00:03:35,100
<font color="#E5E5E5">realize</font><font color="#CCCCCC"> that they're trying to tackle</font>

74
00:03:33,240 --> 00:03:37,200
not just the data model piece that they

75
00:03:35,100 --> 00:03:42,060
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> motor</font><font color="#E5E5E5"> piece was the one that that</font>

76
00:03:37,200 --> 00:03:45,149
was address initially<font color="#E5E5E5"> that defines data</font>

77
00:03:42,060 --> 00:03:46,950
<font color="#E5E5E5">models both for configuration and</font>

78
00:03:45,150 --> 00:03:49,770
operation losing yang is<font color="#CCCCCC"> the modeling</font>

79
00:03:46,950 --> 00:03:51,780
language as probably most of you<font color="#CCCCCC"> knows</font>

80
00:03:49,770 --> 00:03:54,420
it's kind of the it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> only a</font>

81
00:03:51,780 --> 00:03:56,610
<font color="#E5E5E5">standard track modern language in the</font>

82
00:03:54,420 --> 00:03:58,140
idea but<font color="#CCCCCC"> it's also has</font><font color="#E5E5E5"> become I think</font>

83
00:03:56,610 --> 00:04:00,390
<font color="#CCCCCC">he's gained enough traction in the</font>

84
00:03:58,140 --> 00:04:02,309
industry to kind<font color="#CCCCCC"> of become also</font><font color="#E5E5E5"> the de</font>

85
00:04:00,390 --> 00:04:04,350
facto<font color="#CCCCCC"> standard for defining data models</font>

86
00:04:02,310 --> 00:04:06,840
for networking

87
00:04:04,350 --> 00:04:09,390
however the open config<font color="#CCCCCC"> grupos</font><font color="#E5E5E5"> is trying</font>

88
00:04:06,840 --> 00:04:13,950
to define their own management<font color="#E5E5E5"> interface</font>

89
00:04:09,390 --> 00:04:16,380
their own<font color="#E5E5E5"> management protocol</font><font color="#CCCCCC"> GN MI or G</font>

90
00:04:13,950 --> 00:04:18,089
<font color="#CCCCCC">RPC network management interface is</font><font color="#E5E5E5"> the</font>

91
00:04:16,380 --> 00:04:21,480
set of specifications that<font color="#E5E5E5"> they release</font>

92
00:04:18,089 --> 00:04:23,280
I think that happened if I remember

93
00:04:21,480 --> 00:04:25,110
correctly earlier this year<font color="#CCCCCC"> maybe late</font>

94
00:04:23,280 --> 00:04:27,559
last year and remember<font color="#CCCCCC"> the exactly and</font>

95
00:04:25,110 --> 00:04:31,500
more recently they also produce<font color="#E5E5E5"> a set of</font>

96
00:04:27,560 --> 00:04:35,580
operational our<font color="#E5E5E5"> pcs</font><font color="#CCCCCC"> these operational</font>

97
00:04:31,500 --> 00:04:38,610
our pcs<font color="#E5E5E5"> will allow you to run remotely</font>

98
00:04:35,580 --> 00:04:40,570
commands on<font color="#CCCCCC"> the device</font><font color="#E5E5E5"> examples of that</font>

99
00:04:38,610 --> 00:04:42,610
for instance<font color="#CCCCCC"> will be clearing</font>

100
00:04:40,570 --> 00:04:45,340
<font color="#E5E5E5">statistics encounters on the device or</font>

101
00:04:42,610 --> 00:04:47,290
initiating a<font color="#CCCCCC"> ping</font><font color="#E5E5E5"> from a device okay so</font>

102
00:04:45,340 --> 00:04:48,880
they're really<font color="#E5E5E5"> at least so far there are</font>

103
00:04:47,290 --> 00:04:50,860
<font color="#E5E5E5">three main tracks that they are working</font>

104
00:04:48,880 --> 00:04:52,180
on one of<font color="#E5E5E5"> them is the data models the</font>

105
00:04:50,860 --> 00:04:54,220
other one as I<font color="#CCCCCC"> said</font><font color="#E5E5E5"> is the management</font>

106
00:04:52,180 --> 00:04:55,810
<font color="#CCCCCC">the main</font><font color="#E5E5E5"> management interface how to do</font>

107
00:04:54,220 --> 00:04:58,570
configuration management with a set of

108
00:04:55,810 --> 00:05:02,680
our<font color="#CCCCCC"> PCs that</font><font color="#E5E5E5"> they define and that uses</font><font color="#CCCCCC"> G</font>

109
00:04:58,570 --> 00:05:03,940
<font color="#CCCCCC">RPC</font><font color="#E5E5E5"> and also the operational</font><font color="#CCCCCC"> our pcs in</font>

110
00:05:02,680 --> 00:05:08,530
addition to this I would<font color="#E5E5E5"> say probably</font>

111
00:05:03,940 --> 00:05:12,010
<font color="#CCCCCC">theirs</font><font color="#E5E5E5"> seems also a fourth track of</font>

112
00:05:08,530 --> 00:05:15,760
tools so they have also invested to some

113
00:05:12,010 --> 00:05:17,550
extent in providing tools for<font color="#CCCCCC"> the rest</font>

114
00:05:15,760 --> 00:05:19,960
of<font color="#E5E5E5"> this presentation</font><font color="#CCCCCC"> I'm going to focus</font>

115
00:05:17,550 --> 00:05:21,880
specifically on<font color="#CCCCCC"> the data model piece</font>

116
00:05:19,960 --> 00:05:24,010
okay so we're not<font color="#E5E5E5"> gonna talk about</font><font color="#CCCCCC"> DMI</font>

117
00:05:21,880 --> 00:05:26,830
when<font color="#CCCCCC"> i we're not gonna talk</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> gny</font>

118
00:05:24,010 --> 00:05:28,690
we're<font color="#E5E5E5"> gonna focus on the data models see</font>

119
00:05:26,830 --> 00:05:30,669
what data models are<font color="#CCCCCC"> available what</font>

120
00:05:28,690 --> 00:05:32,800
structure they have<font color="#E5E5E5"> kind of understand</font>

121
00:05:30,670 --> 00:05:34,660
those models are<font color="#E5E5E5"> the</font><font color="#CCCCCC"> high-level and see</font>

122
00:05:32,800 --> 00:05:40,420
how those models can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> used to</font>

123
00:05:34,660 --> 00:05:42,340
implement<font color="#CCCCCC"> specific workflow</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> we</font>

124
00:05:40,420 --> 00:05:45,310
review<font color="#E5E5E5"> the structure of some key models</font>

125
00:05:42,340 --> 00:05:47,859
let's understand a very<font color="#CCCCCC"> high-level kind</font>

126
00:05:45,310 --> 00:05:52,180
of some of<font color="#CCCCCC"> the model principles that</font>

127
00:05:47,860 --> 00:05:53,650
this group<font color="#E5E5E5"> applies the first thing to</font>

128
00:05:52,180 --> 00:05:56,980
notice is<font color="#CCCCCC"> that they use a modular</font>

129
00:05:53,650 --> 00:06:00,039
<font color="#E5E5E5">approach to module definition so there's</font>

130
00:05:56,980 --> 00:06:03,130
not<font color="#E5E5E5"> a single</font><font color="#CCCCCC"> yen model</font><font color="#E5E5E5"> for configuration</font>

131
00:06:00,040 --> 00:06:07,030
or a single<font color="#CCCCCC"> model for operational state</font>

132
00:06:03,130 --> 00:06:09,150
they have<font color="#E5E5E5"> components or functions</font><font color="#CCCCCC"> each</font>

133
00:06:07,030 --> 00:06:13,119
of them have their<font color="#E5E5E5"> own dedicated</font>

134
00:06:09,150 --> 00:06:14,710
dedicated model<font color="#E5E5E5"> so a simple example</font><font color="#CCCCCC"> for</font>

135
00:06:13,120 --> 00:06:17,620
instance<font color="#E5E5E5"> BGP will have its own dedicated</font>

136
00:06:14,710 --> 00:06:22,030
module<font color="#E5E5E5"> you will not have a single</font>

137
00:06:17,620 --> 00:06:23,440
<font color="#E5E5E5">monolithic model photo open convey one</font>

138
00:06:22,030 --> 00:06:26,530
of the design<font color="#CCCCCC"> principles that</font><font color="#E5E5E5"> they have</font>

139
00:06:23,440 --> 00:06:28,840
<font color="#E5E5E5">applied is consistency and consistency I</font>

140
00:06:26,530 --> 00:06:30,539
guess<font color="#E5E5E5"> I don't need to sell anybody</font><font color="#CCCCCC"> on</font>

141
00:06:28,840 --> 00:06:33,400
the value<font color="#E5E5E5"> of consistency consistency</font>

142
00:06:30,540 --> 00:06:36,190
automatically leads to ease of use right

143
00:06:33,400 --> 00:06:38,650
<font color="#E5E5E5">to usability it makes it easy you find</font>

144
00:06:36,190 --> 00:06:41,380
common patterns that repeat repeat<font color="#E5E5E5"> often</font>

145
00:06:38,650 --> 00:06:45,929
<font color="#CCCCCC">it through our models</font><font color="#E5E5E5"> and makes it much</font>

146
00:06:41,380 --> 00:06:48,370
simpler to<font color="#CCCCCC"> use the models they</font><font color="#E5E5E5"> combine</font>

147
00:06:45,930 --> 00:06:50,169
configuration and operational data in

148
00:06:48,370 --> 00:06:52,150
the same data models in<font color="#E5E5E5"> yang you have</font>

149
00:06:50,169 --> 00:06:54,159
the option of<font color="#E5E5E5"> creating data models that</font>

150
00:06:52,150 --> 00:06:56,739
specify only<font color="#CCCCCC"> configuration or specify</font>

151
00:06:54,160 --> 00:06:59,620
<font color="#CCCCCC">I configuration and operational data or</font>

152
00:06:56,740 --> 00:07:01,300
you can combine<font color="#E5E5E5"> the language allows</font><font color="#CCCCCC"> you</font>

153
00:06:59,620 --> 00:07:03,670
<font color="#E5E5E5">to</font><font color="#CCCCCC"> combine both</font><font color="#E5E5E5"> in the case of open</font>

154
00:07:01,300 --> 00:07:05,710
config they actually<font color="#CCCCCC"> combine so if we</font>

155
00:07:03,670 --> 00:07:07,780
look at the BGP data model the<font color="#E5E5E5"> BGP data</font>

156
00:07:05,710 --> 00:07:11,770
model<font color="#E5E5E5"> combines both</font><font color="#CCCCCC"> the configuration</font>

157
00:07:07,780 --> 00:07:14,919
and<font color="#E5E5E5"> the operational data for BGP they go</font>

158
00:07:11,770 --> 00:07:18,609
one step further<font color="#CCCCCC"> in differentiating the</font>

159
00:07:14,920 --> 00:07:21,040
operational data in yang<font color="#E5E5E5"> either a piece</font>

160
00:07:18,610 --> 00:07:24,430
<font color="#E5E5E5">of</font><font color="#CCCCCC"> a node or a piece of data is either</font>

161
00:07:21,040 --> 00:07:26,110
<font color="#E5E5E5">config or operational in the case of</font>

162
00:07:24,430 --> 00:07:30,400
open config they try to<font color="#E5E5E5"> differentiate</font>

163
00:07:26,110 --> 00:07:34,300
<font color="#E5E5E5">between applied config and derived</font><font color="#CCCCCC"> State</font>

164
00:07:30,400 --> 00:07:36,130
so you have the<font color="#E5E5E5"> config what is</font>

165
00:07:34,300 --> 00:07:38,590
traditionally<font color="#CCCCCC"> the configuration is the</font>

166
00:07:36,130 --> 00:07:40,990
<font color="#E5E5E5">intended configuration on the device</font><font color="#CCCCCC"> for</font>

167
00:07:38,590 --> 00:07:44,289
<font color="#E5E5E5">in addition</font><font color="#CCCCCC"> to that the operational</font>

168
00:07:40,990 --> 00:07:46,840
<font color="#E5E5E5">State captures both what was actually</font>

169
00:07:44,290 --> 00:07:50,910
<font color="#E5E5E5">applied as configuration and the derived</font>

170
00:07:46,840 --> 00:07:53,590
<font color="#CCCCCC">State the rive</font><font color="#E5E5E5"> state is for instance</font>

171
00:07:50,910 --> 00:07:55,030
<font color="#E5E5E5">counters and metrics that</font><font color="#CCCCCC"> are the</font><font color="#E5E5E5"> result</font>

172
00:07:53,590 --> 00:07:58,349
of<font color="#E5E5E5"> the normal operation of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> device</font>

173
00:07:55,030 --> 00:08:02,770
<font color="#E5E5E5">right the interface counters or the</font>

174
00:07:58,350 --> 00:08:05,170
change in<font color="#E5E5E5"> the BTB state of a session for</font>

175
00:08:02,770 --> 00:08:10,599
instance if you see here on the<font color="#E5E5E5"> right</font>

176
00:08:05,170 --> 00:08:12,880
<font color="#CCCCCC">hand side very</font><font color="#E5E5E5"> quickly</font><font color="#CCCCCC"> we see for a</font>

177
00:08:10,600 --> 00:08:15,520
particular piece in the<font color="#CCCCCC"> BGP</font><font color="#E5E5E5"> model we see</font>

178
00:08:12,880 --> 00:08:17,650
all the some of<font color="#E5E5E5"> the attributes</font><font color="#CCCCCC"> that they</font>

179
00:08:15,520 --> 00:08:20,460
have for<font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> neighbor transport and we</font>

180
00:08:17,650 --> 00:08:24,460
see a bunch of configuration data<font color="#E5E5E5"> TCP</font>

181
00:08:20,460 --> 00:08:26,530
MSS MTU discovery etc and we see the

182
00:08:24,460 --> 00:08:28,599
state portion<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> model for that</font>

183
00:08:26,530 --> 00:08:30,940
particular piece in the model and<font color="#CCCCCC"> you</font>

184
00:08:28,600 --> 00:08:33,849
realized they<font color="#E5E5E5"> clearly separate config</font>

185
00:08:30,940 --> 00:08:37,690
from<font color="#CCCCCC"> State and we see the pattern that</font>

186
00:08:33,849 --> 00:08:40,660
<font color="#E5E5E5">the configuration</font><font color="#CCCCCC"> data is repeated under</font>

187
00:08:37,690 --> 00:08:44,260
the state the portion that<font color="#E5E5E5"> appears under</font>

188
00:08:40,659 --> 00:08:46,060
<font color="#CCCCCC">the state is actually the applied or the</font>

189
00:08:44,260 --> 00:08:48,010
what is considered<font color="#E5E5E5"> to be the effective</font>

190
00:08:46,060 --> 00:08:49,900
configuration running on the<font color="#CCCCCC"> device</font><font color="#E5E5E5"> and</font>

191
00:08:48,010 --> 00:08:51,520
<font color="#CCCCCC">we see here three more</font><font color="#E5E5E5"> reliefs</font>

192
00:08:49,900 --> 00:08:56,410
underneath that basically would

193
00:08:51,520 --> 00:08:59,980
constitute<font color="#E5E5E5"> derive state for</font><font color="#CCCCCC"> BGP</font><font color="#E5E5E5"> neighbor</font>

194
00:08:56,410 --> 00:09:01,810
transport<font color="#CCCCCC"> another</font><font color="#E5E5E5"> interesting principle</font>

195
00:08:59,980 --> 00:09:05,260
<font color="#E5E5E5">that they have applied on how to define</font>

196
00:09:01,810 --> 00:09:07,150
their models is<font color="#E5E5E5"> that they choose to</font><font color="#CCCCCC"> use</font>

197
00:09:05,260 --> 00:09:08,020
semantic<font color="#E5E5E5"> version which</font><font color="#CCCCCC"> actually I think</font>

198
00:09:07,150 --> 00:09:11,110
<font color="#CCCCCC">is</font>

199
00:09:08,020 --> 00:09:13,569
it's a nice characteristics<font color="#CCCCCC"> a nice</font>

200
00:09:11,110 --> 00:09:15,700
characteristic<font color="#E5E5E5"> because these models in</font>

201
00:09:13,570 --> 00:09:18,160
real<font color="#E5E5E5"> live the ultimate goal</font><font color="#CCCCCC"> for these</font>

202
00:09:15,700 --> 00:09:21,370
models<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> accelerate automation right</font>

203
00:09:18,160 --> 00:09:23,439
and software automation<font color="#E5E5E5"> and semantic</font>

204
00:09:21,370 --> 00:09:26,470
version is a very natural concept for

205
00:09:23,440 --> 00:09:27,820
for software development so yang

206
00:09:26,470 --> 00:09:29,350
typically uses the concept of a

207
00:09:27,820 --> 00:09:32,560
provision<font color="#CCCCCC"> that is mode</font><font color="#E5E5E5"> of a</font><font color="#CCCCCC"> timestamp</font>

208
00:09:29,350 --> 00:09:35,589
<font color="#CCCCCC">and in</font><font color="#E5E5E5"> yang at least the idea</font><font color="#CCCCCC"> of</font>

209
00:09:32,560 --> 00:09:38,589
recommendation is to<font color="#E5E5E5"> make data models</font>

210
00:09:35,589 --> 00:09:41,470
always<font color="#E5E5E5"> backward compatible and that</font>

211
00:09:38,589 --> 00:09:43,570
<font color="#E5E5E5">always comes at a big expense if you</font>

212
00:09:41,470 --> 00:09:45,610
really wanna it is<font color="#CCCCCC"> okay when you start</font>

213
00:09:43,570 --> 00:09:47,529
from a<font color="#E5E5E5"> brand-new model but if you fast</font>

214
00:09:45,610 --> 00:09:49,320
forward<font color="#CCCCCC"> as models evolve throughout the</font>

215
00:09:47,529 --> 00:09:52,660
years they can accumulate a lot of

216
00:09:49,320 --> 00:09:54,370
changes<font color="#E5E5E5"> so I think the semantic</font>

217
00:09:52,660 --> 00:09:56,410
versioning actually opens<font color="#E5E5E5"> the door for a</font>

218
00:09:54,370 --> 00:09:59,260
very<font color="#CCCCCC"> pragmatic approach on data models</font>

219
00:09:56,410 --> 00:10:00,910
in which uses<font color="#E5E5E5"> string</font><font color="#CCCCCC"> backward</font>

220
00:09:59,260 --> 00:10:03,130
<font color="#CCCCCC">compatibility to some extent and you</font>

221
00:10:00,910 --> 00:10:05,319
have some<font color="#E5E5E5"> very</font><font color="#CCCCCC"> well-defined points where</font>

222
00:10:03,130 --> 00:10:11,380
you<font color="#CCCCCC"> actually break backward</font>

223
00:10:05,320 --> 00:10:14,560
<font color="#E5E5E5">compatibility so let's look a little bit</font>

224
00:10:11,380 --> 00:10:18,839
<font color="#E5E5E5">more in detail how the models are</font>

225
00:10:14,560 --> 00:10:22,540
designed<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> mentioned models have both</font>

226
00:10:18,839 --> 00:10:25,990
<font color="#CCCCCC">configuration and state in the same in</font>

227
00:10:22,540 --> 00:10:27,640
the same in<font color="#E5E5E5"> the same model</font><font color="#CCCCCC"> and a</font><font color="#E5E5E5"> pattern</font>

228
00:10:25,990 --> 00:10:31,600
<font color="#CCCCCC">that they use a design</font><font color="#E5E5E5"> pattern</font><font color="#CCCCCC"> that they</font>

229
00:10:27,640 --> 00:10:35,110
use is to declare<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the configuration</font>

230
00:10:31,600 --> 00:10:37,360
<font color="#E5E5E5">under a config container and define all</font>

231
00:10:35,110 --> 00:10:39,400
the state under the<font color="#CCCCCC"> state container so</font>

232
00:10:37,360 --> 00:10:43,900
<font color="#E5E5E5">at pretty much any point in the model</font>

233
00:10:39,400 --> 00:10:46,089
you<font color="#E5E5E5"> can look for two main containers two</font>

234
00:10:43,900 --> 00:10:48,100
main<font color="#E5E5E5"> sections one that defines the</font>

235
00:10:46,089 --> 00:10:50,350
config and<font color="#E5E5E5"> another one to define the</font>

236
00:10:48,100 --> 00:10:52,690
state and<font color="#CCCCCC"> you're always gonna see the</font>

237
00:10:50,350 --> 00:10:55,660
pattern<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the information</font><font color="#CCCCCC"> that is the</font>

238
00:10:52,690 --> 00:10:58,570
<font color="#E5E5E5">that is in under config or the leaves</font>

239
00:10:55,660 --> 00:11:00,790
<font color="#E5E5E5">that are under config they always</font><font color="#CCCCCC"> all</font>

240
00:10:58,570 --> 00:11:02,380
<font color="#E5E5E5">also gonna show under the state because</font>

241
00:11:00,790 --> 00:11:06,599
<font color="#CCCCCC">remember the concept of</font><font color="#E5E5E5"> the intended</font>

242
00:11:02,380 --> 00:11:08,950
versus the applied configuration<font color="#E5E5E5"> okay</font>

243
00:11:06,600 --> 00:11:10,360
another pattern<font color="#CCCCCC"> that they use design</font>

244
00:11:08,950 --> 00:11:12,760
pattern they use for the model that<font color="#E5E5E5"> this</font>

245
00:11:10,360 --> 00:11:14,800
this<font color="#CCCCCC"> I would say</font><font color="#E5E5E5"> is very common for yang</font>

246
00:11:12,760 --> 00:11:17,350
models in general<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> they use the</font>

247
00:11:14,800 --> 00:11:19,390
concept of a container to enclose all

248
00:11:17,350 --> 00:11:21,939
the elements of a<font color="#CCCCCC"> list so if we see</font><font color="#E5E5E5"> here</font>

249
00:11:19,390 --> 00:11:25,598
<font color="#E5E5E5">on the right</font><font color="#CCCCCC"> hand side I</font>

250
00:11:21,939 --> 00:11:29,529
I capture here<font color="#CCCCCC"> a piece</font><font color="#E5E5E5"> of the BGP model</font>

251
00:11:25,599 --> 00:11:32,199
that finds<font color="#E5E5E5"> neighbors okay we see the</font><font color="#CCCCCC"> the</font>

252
00:11:29,529 --> 00:11:34,839
<font color="#E5E5E5">second under</font><font color="#CCCCCC"> BGP which is the root of</font>

253
00:11:32,199 --> 00:11:37,209
this model<font color="#E5E5E5"> there's a container called</font>

254
00:11:34,839 --> 00:11:39,009
neighbors that groups<font color="#E5E5E5"> all the neighbors</font>

255
00:11:37,209 --> 00:11:43,029
configure or the neighbors that<font color="#E5E5E5"> are</font>

256
00:11:39,009 --> 00:11:44,849
<font color="#E5E5E5">known to the device and under the</font>

257
00:11:43,029 --> 00:11:47,289
neighbor<font color="#E5E5E5"> that neighbor has a list</font>

258
00:11:44,849 --> 00:11:49,299
represented here by this<font color="#E5E5E5"> asterisk</font><font color="#CCCCCC"> and</font>

259
00:11:47,289 --> 00:11:50,889
<font color="#CCCCCC">there's a key</font><font color="#E5E5E5"> that identifies each of</font>

260
00:11:49,299 --> 00:11:53,739
the<font color="#E5E5E5"> entries in</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> list which would be</font>

261
00:11:50,889 --> 00:11:57,039
the neighbor the neighbor address so

262
00:11:53,739 --> 00:11:59,470
this leads to<font color="#E5E5E5"> another pattern that</font><font color="#CCCCCC"> when</font>

263
00:11:57,039 --> 00:12:01,299
<font color="#E5E5E5">you're new to open config it may become</font>

264
00:11:59,470 --> 00:12:02,939
sometimes you're gonna see it through

265
00:12:01,299 --> 00:12:06,819
<font color="#E5E5E5">the examples that I'm gonna show later</font>

266
00:12:02,939 --> 00:12:11,679
<font color="#E5E5E5">later in the presentation and is that if</font>

267
00:12:06,819 --> 00:12:15,219
a list in yang which a list is more like

268
00:12:11,679 --> 00:12:19,149
a hash<font color="#E5E5E5"> or a dictionary if a list has a</font>

269
00:12:15,220 --> 00:12:21,039
key that key has<font color="#CCCCCC"> to</font><font color="#E5E5E5"> has has to be a live</font>

270
00:12:19,149 --> 00:12:23,109
under the list<font color="#E5E5E5"> so we see here neighbors</font>

271
00:12:21,039 --> 00:12:25,239
for instance<font color="#E5E5E5"> each neighbor is identified</font>

272
00:12:23,109 --> 00:12:27,249
by a neighbor address and we have here

273
00:12:25,239 --> 00:12:29,799
<font color="#E5E5E5">the field where the neighbor address is</font>

274
00:12:27,249 --> 00:12:31,599
specified but<font color="#E5E5E5"> the neighbor address is</font>

275
00:12:29,799 --> 00:12:35,079
<font color="#E5E5E5">actually a piece</font><font color="#CCCCCC"> of configuration and</font>

276
00:12:31,599 --> 00:12:37,539
<font color="#CCCCCC">the notion of</font><font color="#E5E5E5"> our in the design approach</font>

277
00:12:35,079 --> 00:12:39,459
taken by<font color="#CCCCCC"> the open config</font><font color="#E5E5E5"> the neighbor</font>

278
00:12:37,539 --> 00:12:40,629
<font color="#E5E5E5">address is piece of</font><font color="#CCCCCC"> the configuration so</font>

279
00:12:39,459 --> 00:12:43,118
you're gonna see that actually the

280
00:12:40,629 --> 00:12:48,369
<font color="#E5E5E5">neighbor address happens under the</font>

281
00:12:43,119 --> 00:12:51,159
config container<font color="#E5E5E5"> okay so what the open</font>

282
00:12:48,369 --> 00:12:53,349
config models do is that actually the

283
00:12:51,159 --> 00:12:56,769
key is going<font color="#E5E5E5"> to be defined</font><font color="#CCCCCC"> under the</font>

284
00:12:53,349 --> 00:12:58,720
config container<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> neighbor</font>

285
00:12:56,769 --> 00:13:01,179
address<font color="#E5E5E5"> that acts as a key is a</font>

286
00:12:58,720 --> 00:13:04,179
reference<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that data that</font><font color="#E5E5E5"> is inside</font>

287
00:13:01,179 --> 00:13:06,939
<font color="#CCCCCC">the container</font><font color="#E5E5E5"> okay and if you</font><font color="#CCCCCC"> find this</font>

288
00:13:04,179 --> 00:13:10,299
a little<font color="#E5E5E5"> bit confusing this slide</font>

289
00:13:06,939 --> 00:13:12,219
you really have<font color="#CCCCCC"> to I guess understand a</font>

290
00:13:10,299 --> 00:13:13,809
little<font color="#E5E5E5"> bit of the basics of</font><font color="#CCCCCC"> yang and the</font>

291
00:13:12,220 --> 00:13:15,609
basics of how<font color="#E5E5E5"> things are encoded but the</font>

292
00:13:13,809 --> 00:13:17,559
good news<font color="#E5E5E5"> is that the rest of this</font>

293
00:13:15,609 --> 00:13:19,439
<font color="#CCCCCC">presentation</font><font color="#E5E5E5"> I really</font><font color="#CCCCCC"> made a big effort</font>

294
00:13:17,559 --> 00:13:21,759
so<font color="#E5E5E5"> you don't need to have any</font>

295
00:13:19,439 --> 00:13:26,189
preliminary or have<font color="#CCCCCC"> too deep knowledge</font>

296
00:13:21,759 --> 00:13:30,729
on<font color="#CCCCCC"> Anya okay but if you ever wonder why</font>

297
00:13:26,189 --> 00:13:33,789
<font color="#CCCCCC">some fields tend to show duplicated</font><font color="#E5E5E5"> your</font>

298
00:13:30,729 --> 00:13:35,300
data seems to<font color="#E5E5E5"> be duplicated</font><font color="#CCCCCC"> this is this</font>

299
00:13:33,789 --> 00:13:40,730
is the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> root</font>

300
00:13:35,300 --> 00:13:43,010
reason for that<font color="#CCCCCC"> another</font><font color="#E5E5E5"> area</font><font color="#CCCCCC"> or design</font>

301
00:13:40,730 --> 00:13:45,680
approach that they too can and and it's

302
00:13:43,010 --> 00:13:48,890
been<font color="#E5E5E5"> a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> controversial</font><font color="#CCCCCC"> was that</font>

303
00:13:45,680 --> 00:13:52,010
the<font color="#CCCCCC"> young language in the yen language</font>

304
00:13:48,890 --> 00:13:54,110
you can define patterns for Strings

305
00:13:52,010 --> 00:13:56,360
<font color="#E5E5E5">okay for instance</font><font color="#CCCCCC"> interfaces interfaces</font>

306
00:13:54,110 --> 00:13:59,300
are very well<font color="#E5E5E5"> defined pattern</font><font color="#CCCCCC"> right in</font>

307
00:13:56,360 --> 00:14:02,149
the name<font color="#CCCCCC"> of our</font><font color="#E5E5E5"> interface and the</font>

308
00:13:59,300 --> 00:14:03,859
specifications of<font color="#E5E5E5"> yang those patterns</font>

309
00:14:02,149 --> 00:14:07,130
are defined with regular<font color="#CCCCCC"> expressions</font>

310
00:14:03,860 --> 00:14:08,810
that they<font color="#CCCCCC"> follow the w3c</font><font color="#E5E5E5"> model in the</font>

311
00:14:07,130 --> 00:14:12,980
case of open config they chose to<font color="#CCCCCC"> use</font>

312
00:14:08,810 --> 00:14:15,050
the POSIX models the POSIX flavor of

313
00:14:12,980 --> 00:14:17,630
regular expressions because of the

314
00:14:15,050 --> 00:14:22,160
additional support<font color="#E5E5E5"> for POSIX</font><font color="#CCCCCC"> rec regular</font>

315
00:14:17,630 --> 00:14:24,290
<font color="#E5E5E5">expressions instead of the w3c</font><font color="#CCCCCC"> I would</font>

316
00:14:22,160 --> 00:14:26,839
probably<font color="#E5E5E5"> say</font><font color="#CCCCCC"> that most tools today</font>

317
00:14:24,290 --> 00:14:28,189
probably compensate for<font color="#E5E5E5"> this difference</font>

318
00:14:26,839 --> 00:14:31,790
and and there's been a lot of<font color="#E5E5E5"> dialogue</font>

319
00:14:28,190 --> 00:14:33,350
<font color="#CCCCCC">going back</font><font color="#E5E5E5"> and forth and I think last</font>

320
00:14:31,790 --> 00:14:35,930
<font color="#E5E5E5">time I checked there's a kind of a</font>

321
00:14:33,350 --> 00:14:37,970
trajectory<font color="#CCCCCC"> of how to reconcile</font><font color="#E5E5E5"> the use</font>

322
00:14:35,930 --> 00:14:40,430
of regular<font color="#E5E5E5"> expressions going forward in</font>

323
00:14:37,970 --> 00:14:42,920
<font color="#E5E5E5">of the config to make sure that sticks</font>

324
00:14:40,430 --> 00:14:44,599
<font color="#E5E5E5">to to the yang specifications and</font>

325
00:14:42,920 --> 00:14:49,670
doesn't create<font color="#CCCCCC"> any issues for any</font>

326
00:14:44,600 --> 00:14:50,899
existing<font color="#CCCCCC"> tools out there so before I</font>

327
00:14:49,670 --> 00:14:52,699
<font color="#E5E5E5">move</font><font color="#CCCCCC"> forward</font><font color="#E5E5E5"> let me just summarize</font>

328
00:14:50,899 --> 00:14:56,990
really<font color="#E5E5E5"> quick things that</font><font color="#CCCCCC"> you need to</font>

329
00:14:52,700 --> 00:14:59,060
<font color="#E5E5E5">remember each you</font><font color="#CCCCCC"> have a model</font><font color="#E5E5E5"> for</font>

330
00:14:56,990 --> 00:15:01,700
different<font color="#E5E5E5"> components so for instance for</font>

331
00:14:59,060 --> 00:15:04,459
<font color="#E5E5E5">each protocol will have its own if its</font>

332
00:15:01,700 --> 00:15:05,870
own data model<font color="#CCCCCC"> the data model</font><font color="#E5E5E5"> you can</font>

333
00:15:04,459 --> 00:15:10,489
<font color="#E5E5E5">include both configuration and</font>

334
00:15:05,870 --> 00:15:12,980
operational data<font color="#CCCCCC"> okay we saw that the</font>

335
00:15:10,490 --> 00:15:16,339
config typically resides under<font color="#E5E5E5"> the</font>

336
00:15:12,980 --> 00:15:18,860
config container<font color="#E5E5E5"> right the state resides</font>

337
00:15:16,339 --> 00:15:20,959
under<font color="#CCCCCC"> state container and the state is</font>

338
00:15:18,860 --> 00:15:24,410
<font color="#E5E5E5">going to</font><font color="#CCCCCC"> have the applied configuration</font>

339
00:15:20,959 --> 00:15:26,089
<font color="#E5E5E5">plus derived</font><font color="#CCCCCC"> State</font><font color="#E5E5E5"> okay so those are</font>

340
00:15:24,410 --> 00:15:29,089
<font color="#E5E5E5">kind of at a</font><font color="#CCCCCC"> very high level</font><font color="#E5E5E5"> so key</font>

341
00:15:26,089 --> 00:15:33,470
concepts that<font color="#CCCCCC"> you want to remember also</font>

342
00:15:29,089 --> 00:15:35,000
<font color="#CCCCCC">if you have to deal with with</font><font color="#E5E5E5"> the files</font>

343
00:15:33,470 --> 00:15:37,250
with the<font color="#E5E5E5"> yam files because they're using</font>

344
00:15:35,000 --> 00:15:40,610
your own tool<font color="#E5E5E5"> change or your own yank</font>

345
00:15:37,250 --> 00:15:44,029
tools and you<font color="#E5E5E5"> you want to play around</font>

346
00:15:40,610 --> 00:15:45,949
<font color="#E5E5E5">with the with the models these are some</font>

347
00:15:44,029 --> 00:15:48,980
naming conventions that<font color="#CCCCCC"> you may find</font>

348
00:15:45,949 --> 00:15:52,790
useful<font color="#CCCCCC"> to understand</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> first</font>

349
00:15:48,980 --> 00:15:54,470
is how they<font color="#CCCCCC"> named their modules and it's</font>

350
00:15:52,790 --> 00:15:57,139
basically<font color="#E5E5E5"> they</font><font color="#CCCCCC"> use the notation</font><font color="#E5E5E5"> open</font>

351
00:15:54,470 --> 00:15:58,760
config -<font color="#CCCCCC"> and the function so I shown the</font>

352
00:15:57,139 --> 00:16:02,089
<font color="#E5E5E5">right hand side example for instance</font><font color="#CCCCCC"> the</font>

353
00:15:58,760 --> 00:16:04,519
model for<font color="#CCCCCC"> BGP would be open config - BGP</font>

354
00:16:02,089 --> 00:16:07,670
the<font color="#E5E5E5"> file name of course the file is</font>

355
00:16:04,519 --> 00:16:10,269
gonna end with extension<font color="#E5E5E5"> yeah</font>

356
00:16:07,670 --> 00:16:14,510
within a<font color="#CCCCCC"> particular function you</font><font color="#E5E5E5"> have</font>

357
00:16:10,269 --> 00:16:16,820
additional models or modules or sub

358
00:16:14,510 --> 00:16:19,010
modules that are<font color="#E5E5E5"> used to define</font><font color="#CCCCCC"> the</font>

359
00:16:16,820 --> 00:16:20,209
entire<font color="#E5E5E5"> function so for</font><font color="#CCCCCC"> instance in BGP</font>

360
00:16:19,010 --> 00:16:23,420
you're gonna see that you<font color="#E5E5E5"> don't have a</font>

361
00:16:20,209 --> 00:16:26,089
single<font color="#E5E5E5"> open config</font><font color="#CCCCCC"> bgp</font><font color="#E5E5E5"> young file you</font>

362
00:16:23,420 --> 00:16:28,849
have additional<font color="#E5E5E5"> models that in aggregate</font>

363
00:16:26,089 --> 00:16:32,120
define all the BGP functionality so an

364
00:16:28,850 --> 00:16:35,540
example of<font color="#E5E5E5"> that would be open</font><font color="#CCCCCC"> config BGP</font>

365
00:16:32,120 --> 00:16:37,310
policy<font color="#E5E5E5"> okay and I'm showing here just</font>

366
00:16:35,540 --> 00:16:39,439
one example<font color="#E5E5E5"> but if you look at BGP I</font>

367
00:16:37,310 --> 00:16:41,329
think BGP now has probably<font color="#E5E5E5"> like seven or</font>

368
00:16:39,440 --> 00:16:44,360
<font color="#E5E5E5">eight files at least that are used to</font>

369
00:16:41,329 --> 00:16:46,519
<font color="#E5E5E5">define BGP functionality as an aggregate</font>

370
00:16:44,360 --> 00:16:50,060
in optical<font color="#E5E5E5"> thing okay</font>

371
00:16:46,519 --> 00:16:54,980
the prefix notation this<font color="#CCCCCC"> is a little bit</font>

372
00:16:50,060 --> 00:16:57,589
of<font color="#CCCCCC"> yank</font><font color="#E5E5E5"> terminology starts with</font><font color="#CCCCCC"> OC</font><font color="#E5E5E5"> for</font>

373
00:16:54,980 --> 00:17:00,199
open config - in the name of<font color="#E5E5E5"> the</font>

374
00:16:57,589 --> 00:17:02,990
function<font color="#E5E5E5"> that quite often is</font><font color="#CCCCCC"> abbreviated</font>

375
00:17:00,199 --> 00:17:07,609
<font color="#CCCCCC">if it is a sub function you see the same</font>

376
00:17:02,990 --> 00:17:09,949
<font color="#E5E5E5">pattern so OC BGP and all CBT people are</font>

377
00:17:07,609 --> 00:17:12,859
examples of<font color="#E5E5E5"> that again if you're not</font>

378
00:17:09,949 --> 00:17:15,500
manipulating<font color="#E5E5E5"> yarn files directly or</font>

379
00:17:12,859 --> 00:17:16,819
using<font color="#E5E5E5"> yank tools a set of</font><font color="#CCCCCC"> yank tools</font>

380
00:17:15,500 --> 00:17:19,160
<font color="#CCCCCC">maybe these are details that</font><font color="#E5E5E5"> you don't</font>

381
00:17:16,819 --> 00:17:21,168
<font color="#E5E5E5">need to worry</font><font color="#CCCCCC"> about it but sometimes</font><font color="#E5E5E5"> if</font>

382
00:17:19,160 --> 00:17:23,179
you ever wonder<font color="#E5E5E5"> when you</font><font color="#CCCCCC"> maybe you're</font>

383
00:17:21,169 --> 00:17:25,429
examining some<font color="#E5E5E5"> of your encoding encoded</font>

384
00:17:23,179 --> 00:17:27,860
data<font color="#E5E5E5"> and you're trying to understand</font>

385
00:17:25,429 --> 00:17:30,280
where<font color="#CCCCCC"> does this name come from</font>

386
00:17:27,859 --> 00:17:35,689
this hopefully<font color="#CCCCCC"> will</font><font color="#E5E5E5"> give you an idea of</font>

387
00:17:30,280 --> 00:17:37,149
the logic behind it another<font color="#E5E5E5"> naming</font>

388
00:17:35,690 --> 00:17:41,870
convention<font color="#E5E5E5"> that they use is for the</font>

389
00:17:37,150 --> 00:17:45,919
<font color="#CCCCCC">namespace you in particular for the case</font>

390
00:17:41,870 --> 00:17:48,830
<font color="#E5E5E5">of</font><font color="#CCCCCC"> xnh</font><font color="#E5E5E5"> XML</font><font color="#CCCCCC"> you have a</font><font color="#E5E5E5"> namespace for your</font>

391
00:17:45,919 --> 00:17:50,540
data<font color="#E5E5E5"> and they follow the</font><font color="#CCCCCC"> notation of</font>

392
00:17:48,830 --> 00:17:54,110
open<font color="#E5E5E5"> conflict that made that yang I'm</font>

393
00:17:50,540 --> 00:17:56,690
sorry<font color="#CCCCCC"> /</font><font color="#E5E5E5"> yang / function sub function so</font>

394
00:17:54,110 --> 00:17:59,178
<font color="#CCCCCC">you I</font><font color="#E5E5E5"> show the examples of the main</font>

395
00:17:56,690 --> 00:18:03,320
spaces<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you may see for BGP for one</font>

396
00:17:59,179 --> 00:18:06,680
of the sub functions of BGP

397
00:18:03,320 --> 00:18:08,179
in terms of identifiers<font color="#CCCCCC"> and this is this</font>

398
00:18:06,680 --> 00:18:09,740
<font color="#E5E5E5">is important because this is going to be</font>

399
00:18:08,180 --> 00:18:12,230
reflected<font color="#CCCCCC"> even if you don't manipulate</font>

400
00:18:09,740 --> 00:18:14,840
the files<font color="#E5E5E5"> the yam files and you don't</font>

401
00:18:12,230 --> 00:18:16,100
use your own yang<font color="#E5E5E5"> tools directly some</font>

402
00:18:14,840 --> 00:18:19,100
some of these details<font color="#CCCCCC"> are</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

403
00:18:16,100 --> 00:18:21,679
<font color="#E5E5E5">visual to you is the the identifiers the</font>

404
00:18:19,100 --> 00:18:24,770
dividual nodes in<font color="#CCCCCC"> that tree that we that</font>

405
00:18:21,680 --> 00:18:29,720
we<font color="#E5E5E5"> saw</font><font color="#CCCCCC"> there are</font><font color="#E5E5E5"> lowercase with dashes</font>

406
00:18:24,770 --> 00:18:32,480
for regular nodes<font color="#CCCCCC"> only for enums for</font>

407
00:18:29,720 --> 00:18:34,940
enumerations or identities<font color="#E5E5E5"> the the</font>

408
00:18:32,480 --> 00:18:37,640
notation is different uses<font color="#E5E5E5"> uppercase</font>

409
00:18:34,940 --> 00:18:40,310
with underscores<font color="#E5E5E5"> okay so that's a little</font>

410
00:18:37,640 --> 00:18:41,360
bit<font color="#E5E5E5"> in in terms of style what you're</font>

411
00:18:40,310 --> 00:18:48,530
gonna find

412
00:18:41,360 --> 00:18:51,370
throughout the models<font color="#CCCCCC"> I mentioned</font><font color="#E5E5E5"> before</font>

413
00:18:48,530 --> 00:18:53,780
that<font color="#CCCCCC"> they favor</font><font color="#E5E5E5"> or they make use of</font>

414
00:18:51,370 --> 00:18:56,239
semantic versioning<font color="#CCCCCC"> for their models</font>

415
00:18:53,780 --> 00:18:58,370
<font color="#E5E5E5">their models</font><font color="#CCCCCC"> too has a provision because</font>

416
00:18:56,240 --> 00:19:00,950
<font color="#E5E5E5">that's that's the mechanism that yang</font>

417
00:18:58,370 --> 00:19:03,110
defines<font color="#E5E5E5"> but in addition they specify</font>

418
00:19:00,950 --> 00:19:07,520
some<font color="#CCCCCC"> a semantic version for the model</font>

419
00:19:03,110 --> 00:19:09,649
<font color="#E5E5E5">okay they follow the typical or the</font>

420
00:19:07,520 --> 00:19:12,530
outside the industry<font color="#E5E5E5"> consensus for</font>

421
00:19:09,650 --> 00:19:14,780
semantic<font color="#E5E5E5"> versioning of</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> zero zero</font>

422
00:19:12,530 --> 00:19:16,790
being<font color="#E5E5E5"> the major first of all having</font>

423
00:19:14,780 --> 00:19:19,000
<font color="#E5E5E5">three digits right you have a major</font>

424
00:19:16,790 --> 00:19:22,310
release a minor<font color="#E5E5E5"> release and a patch and</font>

425
00:19:19,000 --> 00:19:26,630
one zero<font color="#CCCCCC"> zero is kind of supposed to</font>

426
00:19:22,310 --> 00:19:28,570
<font color="#E5E5E5">mark the initial version</font><font color="#CCCCCC"> of the model</font>

427
00:19:26,630 --> 00:19:31,040
<font color="#E5E5E5">for which there are implementations</font>

428
00:19:28,570 --> 00:19:35,600
<font color="#CCCCCC">enough implementation progress</font><font color="#E5E5E5"> in the</font>

429
00:19:31,040 --> 00:19:37,940
industry and it's it's<font color="#E5E5E5"> kind of it's</font>

430
00:19:35,600 --> 00:19:40,490
possible<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start implementing them or</font>

431
00:19:37,940 --> 00:19:43,160
experimenting with them<font color="#E5E5E5"> so I kind of</font>

432
00:19:40,490 --> 00:19:45,710
<font color="#CCCCCC">marked dad just to give</font><font color="#E5E5E5"> you an idea</font><font color="#CCCCCC"> I</font>

433
00:19:43,160 --> 00:19:47,360
put a list of all the models<font color="#E5E5E5"> that they</font>

434
00:19:45,710 --> 00:19:50,540
have defined<font color="#E5E5E5"> so far</font><font color="#CCCCCC"> I think I</font><font color="#E5E5E5"> only</font>

435
00:19:47,360 --> 00:19:53,570
missing here the<font color="#E5E5E5"> the Wi-Fi models that I</font>

436
00:19:50,540 --> 00:19:55,010
think that pushed last week<font color="#CCCCCC"> but other</font>

437
00:19:53,570 --> 00:19:56,810
than that<font color="#E5E5E5"> it</font><font color="#CCCCCC"> should be entire list</font><font color="#E5E5E5"> of</font>

438
00:19:55,010 --> 00:19:58,879
the models the monitor you see on the

439
00:19:56,810 --> 00:20:01,310
left<font color="#E5E5E5"> hand side are models that already</font>

440
00:19:58,880 --> 00:20:04,040
have made it past<font color="#E5E5E5"> that initial milestone</font>

441
00:20:01,310 --> 00:20:06,169
of<font color="#E5E5E5"> version one zero zero many of them</font>

442
00:20:04,040 --> 00:20:08,690
are<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> past version one zero zero</font>

443
00:20:06,170 --> 00:20:11,870
I think in BGP in particular it's

444
00:20:08,690 --> 00:20:13,970
probably like three point zero or one

445
00:20:11,870 --> 00:20:16,280
zero<font color="#CCCCCC"> or something like</font><font color="#E5E5E5"> that so they made</font>

446
00:20:13,970 --> 00:20:19,880
<font color="#E5E5E5">I just</font><font color="#CCCCCC"> made a very clear the market</font>

447
00:20:16,280 --> 00:20:24,260
of models<font color="#E5E5E5"> that have cross</font><font color="#CCCCCC"> 1 0-0 and</font><font color="#E5E5E5"> the</font>

448
00:20:19,880 --> 00:20:26,060
ones that<font color="#E5E5E5"> have not</font><font color="#CCCCCC"> okay and for the</font>

449
00:20:24,260 --> 00:20:27,620
presentation<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this presentation the</font>

450
00:20:26,060 --> 00:20:29,870
<font color="#CCCCCC">models that I'm going</font><font color="#E5E5E5"> to zoom in and</font>

451
00:20:27,620 --> 00:20:33,169
<font color="#E5E5E5">give you examples and we're gonna build</font>

452
00:20:29,870 --> 00:20:34,459
<font color="#E5E5E5">this testbed this little demo most of</font>

453
00:20:33,170 --> 00:20:36,920
the models<font color="#E5E5E5"> are actually going to</font><font color="#CCCCCC"> be on</font>

454
00:20:34,460 --> 00:20:40,040
the left hand<font color="#CCCCCC"> side the</font><font color="#E5E5E5"> models some that</font>

455
00:20:36,920 --> 00:20:44,540
have ready-made<font color="#CCCCCC"> a100 with maybe an</font>

456
00:20:40,040 --> 00:20:46,639
exception of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of models if</font>

457
00:20:44,540 --> 00:20:49,659
<font color="#CCCCCC">they're any</font><font color="#E5E5E5"> questions by the way</font><font color="#CCCCCC"> I</font>

458
00:20:46,640 --> 00:20:53,110
welcome questions at any point<font color="#E5E5E5"> all right</font>

459
00:20:49,660 --> 00:20:58,520
<font color="#CCCCCC">all right so let's start zooming in</font>

460
00:20:53,110 --> 00:21:01,399
<font color="#E5E5E5">models are obviously can be rather big</font>

461
00:20:58,520 --> 00:21:02,570
<font color="#E5E5E5">and there's a lot of detailing</font><font color="#CCCCCC"> them but</font>

462
00:21:01,400 --> 00:21:06,530
I just<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> kind of give you at a</font>

463
00:21:02,570 --> 00:21:10,550
<font color="#CCCCCC">very high level</font><font color="#E5E5E5"> of flavor of what kind</font>

464
00:21:06,530 --> 00:21:13,100
of structure they have<font color="#E5E5E5"> so I'm gonna go</font>

465
00:21:10,550 --> 00:21:15,290
<font color="#E5E5E5">through a subset of the model I</font><font color="#CCCCCC"> think</font>

466
00:21:13,100 --> 00:21:18,020
I'm gonna<font color="#E5E5E5"> review a total of four five</font>

467
00:21:15,290 --> 00:21:19,430
<font color="#CCCCCC">models</font><font color="#E5E5E5"> because those are the ones</font><font color="#CCCCCC"> that</font>

468
00:21:18,020 --> 00:21:22,670
<font color="#E5E5E5">we're going to be using</font><font color="#CCCCCC"> later in the</font>

469
00:21:19,430 --> 00:21:26,510
example okay<font color="#E5E5E5"> so let's take</font><font color="#CCCCCC"> a look first</font>

470
00:21:22,670 --> 00:21:28,330
<font color="#CCCCCC">add btp</font><font color="#E5E5E5"> this is the if I remember</font>

471
00:21:26,510 --> 00:21:33,010
correctly the first<font color="#E5E5E5"> model</font><font color="#CCCCCC"> that was</font>

472
00:21:28,330 --> 00:21:35,780
polished by the open config<font color="#E5E5E5"> room and</font>

473
00:21:33,010 --> 00:21:38,390
you're gonna see very<font color="#E5E5E5"> quickly there are</font>

474
00:21:35,780 --> 00:21:40,490
three main or three<font color="#E5E5E5"> top containers the</font>

475
00:21:38,390 --> 00:21:43,670
<font color="#CCCCCC">root of the model is BGP no surprise and</font>

476
00:21:40,490 --> 00:21:46,900
there's three main containers that are

477
00:21:43,670 --> 00:21:50,480
defined<font color="#E5E5E5"> global for the global BGP</font>

478
00:21:46,900 --> 00:21:54,200
<font color="#E5E5E5">configuration of the device</font><font color="#CCCCCC"> neighbors</font>

479
00:21:50,480 --> 00:21:57,830
that contains all the<font color="#E5E5E5"> neighbors known to</font>

480
00:21:54,200 --> 00:21:59,720
<font color="#CCCCCC">BGP</font><font color="#E5E5E5"> and peer groups</font><font color="#CCCCCC"> okay</font>

481
00:21:57,830 --> 00:22:02,419
this model<font color="#CCCCCC"> obviously has support for</font>

482
00:21:59,720 --> 00:22:04,910
multi-protocol for multi multi protocol

483
00:22:02,420 --> 00:22:09,230
operation and as I<font color="#E5E5E5"> indicated before it</font>

484
00:22:04,910 --> 00:22:12,970
follows the notation<font color="#E5E5E5"> of having both</font>

485
00:22:09,230 --> 00:22:15,680
config<font color="#E5E5E5"> and operational data embedded</font>

486
00:22:12,970 --> 00:22:17,630
<font color="#CCCCCC">before I actually go much further let me</font>

487
00:22:15,680 --> 00:22:19,310
<font color="#E5E5E5">let</font><font color="#CCCCCC"> me make a note because</font><font color="#E5E5E5"> some of you</font>

488
00:22:17,630 --> 00:22:21,800
may<font color="#CCCCCC"> be the ones the</font><font color="#E5E5E5"> people that have</font>

489
00:22:19,310 --> 00:22:22,520
<font color="#E5E5E5">been</font><font color="#CCCCCC"> following</font><font color="#E5E5E5"> the open config world</font>

490
00:22:21,800 --> 00:22:26,180
more closely

491
00:22:22,520 --> 00:22:27,800
know about<font color="#CCCCCC"> the network instance model so</font>

492
00:22:26,180 --> 00:22:29,660
<font color="#E5E5E5">memory instance is a model</font><font color="#CCCCCC"> that I'm not</font>

493
00:22:27,800 --> 00:22:30,409
<font color="#E5E5E5">going to describe here because again my</font>

494
00:22:29,660 --> 00:22:34,220
focus<font color="#E5E5E5"> was</font>

495
00:22:30,410 --> 00:22:36,110
what is what<font color="#CCCCCC"> can be</font><font color="#E5E5E5"> done today with the</font>

496
00:22:34,220 --> 00:22:37,670
<font color="#CCCCCC">implementations that</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> available</font><font color="#E5E5E5"> so</font>

497
00:22:36,110 --> 00:22:39,620
the<font color="#E5E5E5"> network instance the basically</font>

498
00:22:37,670 --> 00:22:41,930
defines virtualization and

499
00:22:39,620 --> 00:22:45,889
<font color="#CCCCCC">virtualization services or multi-tenancy</font>

500
00:22:41,930 --> 00:22:49,850
for routing<font color="#E5E5E5"> and is is</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> affect the</font>

501
00:22:45,890 --> 00:22:52,100
structure of<font color="#E5E5E5"> different data models in</font>

502
00:22:49,850 --> 00:22:53,899
particular<font color="#CCCCCC"> BGP</font><font color="#E5E5E5"> so the</font><font color="#CCCCCC"> flavors that</font><font color="#E5E5E5"> I'm</font>

503
00:22:52,100 --> 00:22:56,360
showing here<font color="#CCCCCC"> of the BGP data models that</font>

504
00:22:53,900 --> 00:22:57,560
<font color="#E5E5E5">BGP data model before the</font><font color="#CCCCCC"> network</font>

505
00:22:56,360 --> 00:22:59,679
instances<font color="#CCCCCC"> okay</font>

506
00:22:57,560 --> 00:23:03,830
so as I<font color="#E5E5E5"> mentioned three main components</font>

507
00:22:59,680 --> 00:23:07,010
<font color="#E5E5E5">global neighbors and impaired groups</font><font color="#CCCCCC"> if</font>

508
00:23:03,830 --> 00:23:09,830
we<font color="#E5E5E5"> zoom in a little bit into the</font>

509
00:23:07,010 --> 00:23:15,170
neighbors<font color="#E5E5E5"> we see that on the neighbors</font>

510
00:23:09,830 --> 00:23:17,929
<font color="#E5E5E5">again you see a list of unfortunately I</font>

511
00:23:15,170 --> 00:23:20,600
have a laser point pointer but you see

512
00:23:17,930 --> 00:23:23,060
<font color="#E5E5E5">neighbor star basically indicates that</font>

513
00:23:20,600 --> 00:23:25,490
you<font color="#CCCCCC"> have a list of neighbors</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> that</font>

514
00:23:23,060 --> 00:23:29,090
the key is<font color="#CCCCCC"> gonna be</font><font color="#E5E5E5"> the neighbor address</font>

515
00:23:25,490 --> 00:23:31,250
that's in square brackets<font color="#E5E5E5"> and we see in</font>

516
00:23:29,090 --> 00:23:33,439
a<font color="#E5E5E5"> very high level that there's config</font>

517
00:23:31,250 --> 00:23:34,850
<font color="#E5E5E5">state timers transport error handling</font>

518
00:23:33,440 --> 00:23:38,540
and login options I<font color="#CCCCCC"> think there's</font>

519
00:23:34,850 --> 00:23:40,280
actually<font color="#E5E5E5"> a few more pieces of data on</font>

520
00:23:38,540 --> 00:23:42,050
<font color="#E5E5E5">their neighbor under each neighbor but I</font>

521
00:23:40,280 --> 00:23:44,389
couldn't fit it on the screen<font color="#E5E5E5"> but that's</font>

522
00:23:42,050 --> 00:23:46,909
very<font color="#E5E5E5"> basically at a very at a very high</font>

523
00:23:44,390 --> 00:23:48,980
level<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> all the config container</font>

524
00:23:46,910 --> 00:23:50,330
will have<font color="#E5E5E5"> configuration that is specific</font>

525
00:23:48,980 --> 00:23:52,880
to that particular instance<font color="#E5E5E5"> of a</font>

526
00:23:50,330 --> 00:23:55,370
neighbor the state will<font color="#E5E5E5"> have the state</font>

527
00:23:52,880 --> 00:23:58,040
to that<font color="#E5E5E5"> particular entry of the list</font>

528
00:23:55,370 --> 00:24:00,709
timers transports<font color="#E5E5E5"> error</font><font color="#CCCCCC"> handle continued</font>

529
00:23:58,040 --> 00:24:04,940
they will have their own config<font color="#E5E5E5"> and</font>

530
00:24:00,710 --> 00:24:07,130
state container inside them<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so again</font>

531
00:24:04,940 --> 00:24:09,050
<font color="#E5E5E5">that pattern of seeing config</font><font color="#CCCCCC"> in state</font>

532
00:24:07,130 --> 00:24:11,720
containers you're<font color="#E5E5E5"> gonna see that pattern</font>

533
00:24:09,050 --> 00:24:14,540
<font color="#CCCCCC">get</font><font color="#E5E5E5"> repeated throughout throughout the</font>

534
00:24:11,720 --> 00:24:16,370
model<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> on the right hand side we see</font>

535
00:24:14,540 --> 00:24:19,639
<font color="#E5E5E5">the configuration or not configuration</font>

536
00:24:16,370 --> 00:24:22,280
the data<font color="#CCCCCC"> models for for peer groups so</font>

537
00:24:19,640 --> 00:24:24,920
very similar<font color="#E5E5E5"> pattern there's</font><font color="#CCCCCC"> a top under</font>

538
00:24:22,280 --> 00:24:27,889
<font color="#E5E5E5">BGP there's a top container peer groups</font>

539
00:24:24,920 --> 00:24:30,920
<font color="#E5E5E5">that has a list of peer groups you see</font>

540
00:24:27,890 --> 00:24:33,020
peer group start indicates that it's a

541
00:24:30,920 --> 00:24:37,880
<font color="#E5E5E5">list that you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> multiple of those and</font>

542
00:24:33,020 --> 00:24:41,389
the key is the peer group name and we

543
00:24:37,880 --> 00:24:43,879
see this<font color="#E5E5E5"> one two three four five six</font>

544
00:24:41,390 --> 00:24:46,699
<font color="#E5E5E5">different containers</font>

545
00:24:43,879 --> 00:24:48,559
and again I think<font color="#E5E5E5"> I had to</font><font color="#CCCCCC"> crap I have</font>

546
00:24:46,699 --> 00:24:50,929
to<font color="#CCCCCC"> crap the upward</font><font color="#E5E5E5"> so there's at least</font>

547
00:24:48,559 --> 00:24:54,139
six containers<font color="#CCCCCC"> that reside under each</font>

548
00:24:50,929 --> 00:24:57,049
peer group<font color="#E5E5E5"> we find the common pattern of</font>

549
00:24:54,139 --> 00:24:58,968
a config and<font color="#E5E5E5"> state container okay and as</font>

550
00:24:57,049 --> 00:25:01,249
I mentioned<font color="#E5E5E5"> before timers transport</font>

551
00:24:58,969 --> 00:25:03,709
<font color="#E5E5E5">error handling login options they will</font>

552
00:25:01,249 --> 00:25:06,949
have their own config and state

553
00:25:03,709 --> 00:25:08,839
containers inside them<font color="#E5E5E5"> okay I'm showing</font>

554
00:25:06,949 --> 00:25:11,119
here<font color="#E5E5E5"> depending on that</font><font color="#CCCCCC"> because I had</font><font color="#E5E5E5"> to</font>

555
00:25:08,839 --> 00:25:13,099
fit the Apple first of all I wanted<font color="#CCCCCC"> to</font>

556
00:25:11,119 --> 00:25:16,189
avoid<font color="#CCCCCC"> unnecessary detail and also had</font><font color="#E5E5E5"> to</font>

557
00:25:13,099 --> 00:25:18,499
fit it on<font color="#CCCCCC"> this</font><font color="#E5E5E5"> slide</font><font color="#CCCCCC"> I think in some</font>

558
00:25:16,190 --> 00:25:20,809
<font color="#CCCCCC">cases that I</font><font color="#E5E5E5"> used to three levels of</font>

559
00:25:18,499 --> 00:25:23,599
death in the model<font color="#CCCCCC"> sometimes I go to</font>

560
00:25:20,809 --> 00:25:25,940
four<font color="#E5E5E5"> levels and quite often I'm just</font>

561
00:25:23,599 --> 00:25:28,158
reversing a specific path through the

562
00:25:25,940 --> 00:25:30,769
model right<font color="#E5E5E5"> remember the model is a tree</font>

563
00:25:28,159 --> 00:25:32,719
<font color="#E5E5E5">so I'm kind of if you have to think</font>

564
00:25:30,769 --> 00:25:35,869
<font color="#CCCCCC">about it I'm kind of moving a sliding</font>

565
00:25:32,719 --> 00:25:37,399
window and try to zoom in through small

566
00:25:35,869 --> 00:25:40,668
pieces<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> model to kind of give you</font>

567
00:25:37,399 --> 00:25:44,508
a very<font color="#E5E5E5"> high</font><font color="#CCCCCC"> level view of how the model</font>

568
00:25:40,669 --> 00:25:48,259
<font color="#E5E5E5">is</font><font color="#CCCCCC"> defined so that's for</font><font color="#E5E5E5"> BGP so BGP</font>

569
00:25:44,509 --> 00:25:50,359
again three main components<font color="#CCCCCC"> global peer</font>

570
00:25:48,259 --> 00:25:51,919
groups and neighbors<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and each of</font>

571
00:25:50,359 --> 00:25:53,329
them has a list with<font color="#E5E5E5"> the exception of</font>

572
00:25:51,919 --> 00:25:55,989
global global<font color="#CCCCCC"> this is the global</font>

573
00:25:53,329 --> 00:25:59,749
<font color="#E5E5E5">configuration of the of BGP</font>

574
00:25:55,989 --> 00:26:02,059
configuration and<font color="#E5E5E5"> state I should say all</font>

575
00:25:59,749 --> 00:26:05,719
<font color="#E5E5E5">right so</font><font color="#CCCCCC"> let's</font><font color="#E5E5E5"> take a look at the</font>

576
00:26:02,059 --> 00:26:08,178
routing policy so routing policies

577
00:26:05,719 --> 00:26:10,899
defined<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> different in a different</font>

578
00:26:08,179 --> 00:26:14,119
model called open config<font color="#E5E5E5"> running policy</font>

579
00:26:10,899 --> 00:26:17,569
the route<font color="#E5E5E5"> this routing policy has two</font>

580
00:26:14,119 --> 00:26:20,718
main containers<font color="#CCCCCC"> one of them defined sets</font>

581
00:26:17,569 --> 00:26:21,889
<font color="#E5E5E5">and the second one is policy definition</font>

582
00:26:20,719 --> 00:26:24,349
the<font color="#E5E5E5"> pull definition is actually</font><font color="#CCCCCC"> the</font>

583
00:26:21,889 --> 00:26:25,428
definition<font color="#CCCCCC"> of the policy</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> define sets</font>

584
00:26:24,349 --> 00:26:27,559
are<font color="#CCCCCC"> going to be the sets</font><font color="#E5E5E5"> that are</font>

585
00:26:25,429 --> 00:26:29,599
<font color="#E5E5E5">basically are going to use to match for</font>

586
00:26:27,559 --> 00:26:32,829
match conditions in your policies<font color="#E5E5E5"> okay</font>

587
00:26:29,599 --> 00:26:36,468
<font color="#E5E5E5">can be a horrific set it can be</font>

588
00:26:32,829 --> 00:26:39,099
community<font color="#CCCCCC"> set</font><font color="#E5E5E5"> it can be a</font><font color="#CCCCCC"> SPAD sets it</font>

589
00:26:36,469 --> 00:26:45,229
can be many many<font color="#E5E5E5"> different things</font><font color="#CCCCCC"> okay</font>

590
00:26:39,099 --> 00:26:48,769
the<font color="#E5E5E5"> routing policy model doesn't define</font>

591
00:26:45,229 --> 00:26:51,709
the<font color="#E5E5E5"> defined sets and doesn't define all</font>

592
00:26:48,769 --> 00:26:56,029
the attributes for policy definitions

593
00:26:51,709 --> 00:26:57,380
<font color="#CCCCCC">for bgp directly that</font><font color="#E5E5E5"> actually is</font>

594
00:26:56,029 --> 00:27:00,049
<font color="#E5E5E5">defining an augmentation</font>

595
00:26:57,380 --> 00:27:01,429
so if you look at<font color="#E5E5E5"> just the open perfect</font>

596
00:27:00,049 --> 00:27:04,340
<font color="#E5E5E5">routing policy it's going to have a lot</font>

597
00:27:01,429 --> 00:27:06,770
of constructs for<font color="#E5E5E5"> routing policies but</font>

598
00:27:04,340 --> 00:27:10,360
you're not<font color="#E5E5E5"> gonna see BGP data there</font>

599
00:27:06,770 --> 00:27:12,440
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> actually a BGP policy</font>

600
00:27:10,360 --> 00:27:15,168
<font color="#E5E5E5">augmentation so there's a separate yang</font>

601
00:27:12,440 --> 00:27:18,289
definition that augments routing

602
00:27:15,169 --> 00:27:22,429
policies to<font color="#E5E5E5"> make him BGP capable and I</font>

603
00:27:18,289 --> 00:27:26,690
think to<font color="#E5E5E5"> have one one slide one slide to</font>

604
00:27:22,429 --> 00:27:29,990
describe this<font color="#CCCCCC"> okay I put</font><font color="#E5E5E5"> this tonight</font>

605
00:27:26,690 --> 00:27:32,720
excuse me Morris as a<font color="#E5E5E5"> reference</font><font color="#CCCCCC"> you can</font>

606
00:27:29,990 --> 00:27:35,539
review<font color="#E5E5E5"> it</font><font color="#CCCCCC"> later but he basically has the</font>

607
00:27:32,720 --> 00:27:37,700
evaluation rules that are followed<font color="#CCCCCC"> for</font>

608
00:27:35,539 --> 00:27:39,679
the<font color="#E5E5E5"> routing policy so I</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> say this</font>

609
00:27:37,700 --> 00:27:41,570
this<font color="#E5E5E5"> should be pretty pretty common</font>

610
00:27:39,679 --> 00:27:43,640
behavior that<font color="#E5E5E5"> you find in writing in</font>

611
00:27:41,570 --> 00:27:46,070
<font color="#E5E5E5">writing policies but actually</font>

612
00:27:43,640 --> 00:27:48,110
appreciated the the<font color="#E5E5E5"> defined description</font>

613
00:27:46,070 --> 00:27:49,879
of what the logic is supposed to be this

614
00:27:48,110 --> 00:27:51,918
actually the description is embedded in

615
00:27:49,880 --> 00:27:53,630
the in the data model itself

616
00:27:51,919 --> 00:27:56,840
remember the<font color="#E5E5E5"> yang models are self</font>

617
00:27:53,630 --> 00:27:58,549
documented so so the documentation

618
00:27:56,840 --> 00:28:00,949
strengths of the model<font color="#CCCCCC"> actually gives</font>

619
00:27:58,549 --> 00:28:06,080
you a good<font color="#E5E5E5"> idea how the</font><font color="#CCCCCC"> routing policies</font>

620
00:28:00,950 --> 00:28:09,380
are meant to be evaluated<font color="#E5E5E5"> okay let's</font>

621
00:28:06,080 --> 00:28:10,939
<font color="#E5E5E5">take a look at defined sets I said there</font>

622
00:28:09,380 --> 00:28:13,730
<font color="#CCCCCC">are</font><font color="#E5E5E5"> two main components of a routing</font>

623
00:28:10,940 --> 00:28:16,600
policy<font color="#CCCCCC"> define sets</font><font color="#E5E5E5"> that are sets</font><font color="#CCCCCC"> you</font>

624
00:28:13,730 --> 00:28:19,159
<font color="#E5E5E5">gonna match against and the other one is</font>

625
00:28:16,600 --> 00:28:20,539
policy definitions<font color="#E5E5E5"> so I'm going to be</font>

626
00:28:19,159 --> 00:28:23,480
<font color="#CCCCCC">scribe and really quick</font>

627
00:28:20,539 --> 00:28:28,190
without the<font color="#CCCCCC"> bgp augmentations remember</font>

628
00:28:23,480 --> 00:28:29,600
that<font color="#E5E5E5"> the BGP options are brought into</font>

629
00:28:28,190 --> 00:28:31,280
<font color="#E5E5E5">the model with augmentations I want to</font>

630
00:28:29,600 --> 00:28:31,730
talk about the augmentations in a later

631
00:28:31,280 --> 00:28:35,678
slide

632
00:28:31,730 --> 00:28:39,409
so the basic<font color="#CCCCCC"> routing policy model</font>

633
00:28:35,679 --> 00:28:42,860
defines prefix prefix sets defines

634
00:28:39,409 --> 00:28:45,110
<font color="#E5E5E5">neighbor sets and tight sets okay those</font>

635
00:28:42,860 --> 00:28:48,408
are<font color="#E5E5E5"> different sets that you can</font><font color="#CCCCCC"> use for</font>

636
00:28:45,110 --> 00:28:50,539
conditions to to match on your actual

637
00:28:48,409 --> 00:28:53,440
<font color="#E5E5E5">policies and if we see in the</font><font color="#CCCCCC"> right-hand</font>

638
00:28:50,539 --> 00:28:56,629
<font color="#CCCCCC">side the policy definition we see that</font>

639
00:28:53,440 --> 00:28:59,659
you<font color="#E5E5E5"> have a list of policy definitions</font>

640
00:28:56,630 --> 00:29:02,900
<font color="#E5E5E5">you see probably in the fifth line maybe</font>

641
00:28:59,659 --> 00:29:04,400
there's<font color="#E5E5E5"> policy - definition star right</font>

642
00:29:02,900 --> 00:29:06,740
so it<font color="#E5E5E5"> tells you</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can have</font>

643
00:29:04,400 --> 00:29:09,710
multiple policies<font color="#E5E5E5"> that the key is the</font>

644
00:29:06,740 --> 00:29:11,780
name<font color="#CCCCCC"> of the policy</font><font color="#E5E5E5"> okay and you see that</font>

645
00:29:09,710 --> 00:29:13,850
there's statements on

646
00:29:11,780 --> 00:29:16,100
<font color="#CCCCCC">thinner</font><font color="#E5E5E5"> further down and</font><font color="#CCCCCC"> then you see a</font>

647
00:29:13,850 --> 00:29:18,320
list of containers you see statement

648
00:29:16,100 --> 00:29:21,110
<font color="#E5E5E5">start again the</font><font color="#CCCCCC"> start tells you say list</font>

649
00:29:18,320 --> 00:29:24,679
<font color="#E5E5E5">each</font><font color="#CCCCCC"> demon has a name</font><font color="#E5E5E5"> that acts as the</font>

650
00:29:21,110 --> 00:29:26,510
<font color="#CCCCCC">key and so each policy</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a list</font>

651
00:29:24,680 --> 00:29:28,700
of policy within<font color="#E5E5E5"> each policy you can</font>

652
00:29:26,510 --> 00:29:30,980
have one or many<font color="#E5E5E5"> statements and each</font>

653
00:29:28,700 --> 00:29:32,240
demon has conditions and the actions

654
00:29:30,980 --> 00:29:34,370
that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be executed in the</font>

655
00:29:32,240 --> 00:29:35,480
policy<font color="#CCCCCC"> okay this should be</font><font color="#E5E5E5"> very forward</font>

656
00:29:34,370 --> 00:29:38,000
behavior I think<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> very</font>

657
00:29:35,480 --> 00:29:41,560
<font color="#CCCCCC">straightforward pattern</font><font color="#E5E5E5"> to to understand</font>

658
00:29:38,000 --> 00:29:44,540
if you're familiar with<font color="#E5E5E5"> writing policies</font>

659
00:29:41,560 --> 00:29:46,850
so let's<font color="#E5E5E5"> do now let's take a quick look</font>

660
00:29:44,540 --> 00:29:48,680
at the augmentations the<font color="#CCCCCC"> bgp</font>

661
00:29:46,850 --> 00:29:50,449
augmentations<font color="#E5E5E5"> okay</font>

662
00:29:48,680 --> 00:29:55,040
<font color="#E5E5E5">those</font><font color="#CCCCCC"> if i remember correctly i</font><font color="#E5E5E5"> defined</font>

663
00:29:50,450 --> 00:29:58,010
the open config<font color="#E5E5E5"> -</font><font color="#CCCCCC"> BGP - policy okay</font><font color="#E5E5E5"> and</font>

664
00:29:55,040 --> 00:30:00,020
you see<font color="#E5E5E5"> that these are augmentations</font>

665
00:29:58,010 --> 00:30:02,870
<font color="#E5E5E5">define as you would expect community</font>

666
00:30:00,020 --> 00:30:05,420
sets<font color="#E5E5E5"> any decent BGP policy you need to</font>

667
00:30:02,870 --> 00:30:07,520
match against communities<font color="#E5E5E5"> extended</font>

668
00:30:05,420 --> 00:30:10,550
communities and<font color="#CCCCCC"> AAS</font><font color="#E5E5E5"> path so these are</font>

669
00:30:07,520 --> 00:30:15,730
extensions<font color="#CCCCCC"> brought</font><font color="#E5E5E5"> into the routing</font>

670
00:30:10,550 --> 00:30:15,730
policy model by these augmentations<font color="#CCCCCC"> and</font>

671
00:30:15,910 --> 00:30:21,980
<font color="#CCCCCC">these are the augmentation</font><font color="#E5E5E5"> to the policy</font>

672
00:30:20,210 --> 00:30:24,380
definition and in particular to<font color="#CCCCCC"> the</font>

673
00:30:21,980 --> 00:30:26,060
conditions and<font color="#CCCCCC"> the actions remembered</font>

674
00:30:24,380 --> 00:30:28,580
under each statement<font color="#E5E5E5"> you have conditions</font>

675
00:30:26,060 --> 00:30:32,210
and actions<font color="#E5E5E5"> so</font><font color="#CCCCCC"> as you</font><font color="#E5E5E5"> would expect these</font>

676
00:30:28,580 --> 00:30:34,129
augmentations of IU extends<font color="#E5E5E5"> conditions</font>

677
00:30:32,210 --> 00:30:36,560
so<font color="#E5E5E5"> you can match and community set match</font>

678
00:30:34,130 --> 00:30:38,750
an extended community<font color="#CCCCCC"> is</font><font color="#E5E5E5"> bad blah blah</font>

679
00:30:36,560 --> 00:30:43,850
blah on the right hand<font color="#CCCCCC"> side you see the</font>

680
00:30:38,750 --> 00:30:46,640
enhanced or the Augmented actions<font color="#CCCCCC"> set in</font>

681
00:30:43,850 --> 00:30:49,909
a<font color="#CCCCCC"> es path prepared set in a community</font>

682
00:30:46,640 --> 00:30:53,180
and extended community<font color="#CCCCCC"> etc okay so</font>

683
00:30:49,910 --> 00:30:54,650
pretty<font color="#CCCCCC"> pretty straightforward again if</font>

684
00:30:53,180 --> 00:30:56,090
you're familiar with<font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> and writing</font>

685
00:30:54,650 --> 00:31:00,820
policy<font color="#CCCCCC"> configuration this should be</font>

686
00:30:56,090 --> 00:31:04,310
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> easily relate</font><font color="#E5E5E5"> to</font>

687
00:31:00,820 --> 00:31:10,429
any questions from<font color="#E5E5E5"> the BGP or routing</font>

688
00:31:04,310 --> 00:31:17,480
policy so far all right so let's<font color="#E5E5E5"> look</font>

689
00:31:10,430 --> 00:31:19,700
now at<font color="#E5E5E5"> interfaces so interfaces the</font>

690
00:31:17,480 --> 00:31:22,010
<font color="#E5E5E5">interfaces model allows you as the name</font>

691
00:31:19,700 --> 00:31:25,180
suggests is<font color="#E5E5E5"> the model</font><font color="#CCCCCC"> that has all the</font>

692
00:31:22,010 --> 00:31:30,030
config<font color="#CCCCCC"> and operational data for</font>

693
00:31:25,180 --> 00:31:33,040
faces on the device<font color="#E5E5E5"> he has four main</font>

694
00:31:30,030 --> 00:31:34,990
containers under well first of<font color="#E5E5E5"> all he</font>

695
00:31:33,040 --> 00:31:37,330
has a top container<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> interphase</font>

696
00:31:34,990 --> 00:31:39,520
<font color="#CCCCCC">you have a list of interfaces right</font>

697
00:31:37,330 --> 00:31:41,439
<font color="#CCCCCC">indicated but</font><font color="#E5E5E5"> the interface star</font>

698
00:31:39,520 --> 00:31:44,770
interfaces are identified by the name

699
00:31:41,440 --> 00:31:47,110
<font color="#E5E5E5">and each individual interface is gonna</font>

700
00:31:44,770 --> 00:31:49,389
have a<font color="#E5E5E5"> config block</font><font color="#CCCCCC"> it's gonna have a</font>

701
00:31:47,110 --> 00:31:51,610
state block<font color="#E5E5E5"> it's going to have a whole</font>

702
00:31:49,390 --> 00:31:54,750
time and it's going<font color="#CCCCCC"> to have sub</font>

703
00:31:51,610 --> 00:31:59,740
interfaces<font color="#CCCCCC"> in this model actually each</font>

704
00:31:54,750 --> 00:32:02,500
each interface or<font color="#E5E5E5"> interfaces have solve</font>

705
00:31:59,740 --> 00:32:04,600
interfaces in them and if you want for

706
00:32:02,500 --> 00:32:06,490
instance<font color="#CCCCCC"> configure</font><font color="#E5E5E5"> the IP attributes for</font>

707
00:32:04,600 --> 00:32:11,189
an<font color="#E5E5E5"> interface all that IP configuration</font>

708
00:32:06,490 --> 00:32:11,190
actually happens on the sub interface

709
00:32:12,750 --> 00:32:19,320
<font color="#CCCCCC">there's a series of</font><font color="#E5E5E5"> augmentations so if</font>

710
00:32:16,090 --> 00:32:21,220
you look at the base open<font color="#CCCCCC"> conflict</font>

711
00:32:19,320 --> 00:32:23,500
<font color="#E5E5E5">interfaces model you're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> see the</font>

712
00:32:21,220 --> 00:32:25,420
the<font color="#E5E5E5"> structure of the describe here but</font>

713
00:32:23,500 --> 00:32:28,030
then you'll see<font color="#E5E5E5"> that in the same way</font>

714
00:32:25,420 --> 00:32:30,700
that<font color="#CCCCCC"> BGP has a collection of additional</font>

715
00:32:28,030 --> 00:32:32,590
files that either<font color="#E5E5E5"> augment or complement</font>

716
00:32:30,700 --> 00:32:33,820
the definition of<font color="#E5E5E5"> bgp in the case of</font>

717
00:32:32,590 --> 00:32:35,949
interfaces you're<font color="#E5E5E5"> gonna see the same</font>

718
00:32:33,820 --> 00:32:37,810
<font color="#E5E5E5">models or</font><font color="#CCCCCC"> the same approach</font><font color="#E5E5E5"> you're gonna</font>

719
00:32:35,950 --> 00:32:41,770
see that<font color="#E5E5E5"> they're illuminations for</font>

720
00:32:37,810 --> 00:32:45,310
bundles<font color="#E5E5E5"> for Ethernet attributes for IP</font>

721
00:32:41,770 --> 00:32:50,830
and also for VLANs<font color="#E5E5E5"> and I'm going to</font>

722
00:32:45,310 --> 00:32:52,780
touch on some<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> so the bundle and</font>

723
00:32:50,830 --> 00:32:55,210
the<font color="#CCCCCC"> Ethernet augmentations</font><font color="#E5E5E5"> we're gonna</font>

724
00:32:52,780 --> 00:32:59,350
take here a quick look so you see on the

725
00:32:55,210 --> 00:33:01,180
left hand side the augmentations<font color="#E5E5E5"> for for</font>

726
00:32:59,350 --> 00:33:03,550
aggregation basically<font color="#CCCCCC"> for</font><font color="#E5E5E5"> bundles</font>

727
00:33:01,180 --> 00:33:05,980
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> so you see</font><font color="#CCCCCC"> that there's an</font>

728
00:33:03,550 --> 00:33:07,480
aggregation<font color="#CCCCCC"> type container</font><font color="#E5E5E5"> again you see</font>

729
00:33:05,980 --> 00:33:11,260
the<font color="#CCCCCC"> same pattern</font><font color="#E5E5E5"> of having</font><font color="#CCCCCC"> a config</font>

730
00:33:07,480 --> 00:33:13,660
block and the state<font color="#E5E5E5"> and having an</font><font color="#CCCCCC"> LACP</font>

731
00:33:11,260 --> 00:33:17,560
block under dad that has<font color="#E5E5E5"> config and</font>

732
00:33:13,660 --> 00:33:18,250
<font color="#E5E5E5">state and members okay so these are oven</font>

733
00:33:17,560 --> 00:33:22,320
tations

734
00:33:18,250 --> 00:33:25,360
that<font color="#CCCCCC"> enable bundles</font><font color="#E5E5E5"> based on the</font>

735
00:33:22,320 --> 00:33:28,450
characteristics defined by the base<font color="#E5E5E5"> open</font>

736
00:33:25,360 --> 00:33:30,729
<font color="#CCCCCC">cos the interfaces model on the right</font>

737
00:33:28,450 --> 00:33:38,520
<font color="#E5E5E5">hand</font><font color="#CCCCCC"> side we see the augmentation</font><font color="#E5E5E5"> for</font>

738
00:33:30,730 --> 00:33:42,120
<font color="#E5E5E5">Ethernet whoops</font><font color="#CCCCCC"> we have the</font>

739
00:33:38,520 --> 00:33:44,760
<font color="#CCCCCC">imitations</font><font color="#E5E5E5"> for it</font><font color="#CCCCCC"> Ethernet attributes</font><font color="#E5E5E5"> so</font>

740
00:33:42,120 --> 00:33:46,949
we see under<font color="#CCCCCC"> an interface</font><font color="#E5E5E5"> for Ethernet</font>

741
00:33:44,760 --> 00:33:49,140
interfaces<font color="#E5E5E5"> again we have a config and</font>

742
00:33:46,950 --> 00:33:51,780
<font color="#E5E5E5">state</font><font color="#CCCCCC"> block under the config we have MAC</font>

743
00:33:49,140 --> 00:33:55,350
address or<font color="#CCCCCC"> negotiate duplex poor speed</font>

744
00:33:51,780 --> 00:33:56,940
enable flow etc<font color="#CCCCCC"> and again you see the</font>

745
00:33:55,350 --> 00:33:58,980
same<font color="#E5E5E5"> pattern remember the same</font><font color="#CCCCCC"> back</font>

746
00:33:56,940 --> 00:34:01,020
pattern that<font color="#E5E5E5"> I described before you see</font>

747
00:33:58,980 --> 00:34:03,560
the config blog which<font color="#CCCCCC"> is the intended</font>

748
00:34:01,020 --> 00:34:05,970
config<font color="#E5E5E5"> and you see all those leaves</font>

749
00:34:03,560 --> 00:34:08,070
<font color="#E5E5E5">repeated in the bottom part under state</font>

750
00:34:05,970 --> 00:34:10,139
that supposed to<font color="#E5E5E5"> represent the applied</font>

751
00:34:08,070 --> 00:34:12,630
the applied configuration we see some

752
00:34:10,139 --> 00:34:17,158
incremental<font color="#CCCCCC"> in this case some derive</font>

753
00:34:12,630 --> 00:34:20,460
<font color="#E5E5E5">state leaves</font><font color="#CCCCCC"> the hardware MAC address</font>

754
00:34:17,159 --> 00:34:21,630
counters and<font color="#E5E5E5"> I think I have to</font><font color="#CCCCCC"> prop the</font>

755
00:34:20,460 --> 00:34:24,360
output so I<font color="#CCCCCC"> think there's some</font>

756
00:34:21,630 --> 00:34:27,630
additional<font color="#E5E5E5"> state information that you</font>

757
00:34:24,360 --> 00:34:32,310
can gather<font color="#E5E5E5"> you can manipulate for for</font>

758
00:34:27,630 --> 00:34:37,409
Ethernet interfaces<font color="#E5E5E5"> alright let's take a</font>

759
00:34:32,310 --> 00:34:39,690
look at IP IP interfaces are also<font color="#E5E5E5"> an</font>

760
00:34:37,409 --> 00:34:43,230
augmentation of<font color="#E5E5E5"> the base interfaces</font>

761
00:34:39,690 --> 00:34:47,850
model so the name of<font color="#CCCCCC"> the module</font><font color="#E5E5E5"> is open</font>

762
00:34:43,230 --> 00:34:50,490
config<font color="#E5E5E5"> AF IP and you have augmentations</font>

763
00:34:47,850 --> 00:34:53,639
for ipv4<font color="#E5E5E5"> ipv6 IP before we on the</font><font color="#CCCCCC"> left</font>

764
00:34:50,489 --> 00:34:56,310
ipv6<font color="#E5E5E5"> on the right and under IP</font><font color="#CCCCCC"> V I P</font>

765
00:34:53,639 --> 00:34:59,400
<font color="#E5E5E5">before and ipv6 actually I think the</font>

766
00:34:56,310 --> 00:35:00,900
first four components under that

767
00:34:59,400 --> 00:35:02,820
container are the same you<font color="#E5E5E5"> basically you</font>

768
00:35:00,900 --> 00:35:05,760
got your address<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> do neighbor</font>

769
00:35:02,820 --> 00:35:08,160
configuration and you<font color="#E5E5E5"> have other config</font>

770
00:35:05,760 --> 00:35:16,620
and state<font color="#E5E5E5"> that resides at that level of</font>

771
00:35:08,160 --> 00:35:21,029
the model and<font color="#CCCCCC"> last on interfaces we have</font>

772
00:35:16,620 --> 00:35:23,580
the the VLAN the augmentations for V

773
00:35:21,030 --> 00:35:25,710
lines we<font color="#CCCCCC"> have VLAN support on interfaces</font>

774
00:35:23,580 --> 00:35:29,100
again on the left<font color="#E5E5E5"> hand side on the</font><font color="#CCCCCC"> right</font>

775
00:35:25,710 --> 00:35:31,230
hand<font color="#CCCCCC"> side I think left hand side</font><font color="#E5E5E5"> right</font>

776
00:35:29,100 --> 00:35:33,870
hand<font color="#E5E5E5"> sides with</font><font color="#CCCCCC"> augmented with bundled</font>

777
00:35:31,230 --> 00:35:36,840
sir VLAN with<font color="#CCCCCC"> bundles and and the left</font>

778
00:35:33,870 --> 00:35:39,600
hand<font color="#E5E5E5"> side is port</font><font color="#CCCCCC"> but it's basically the</font>

779
00:35:36,840 --> 00:35:42,270
<font color="#CCCCCC">same the</font><font color="#E5E5E5"> same data that is augmented</font>

780
00:35:39,600 --> 00:35:44,580
whether the interface is a bundle<font color="#CCCCCC"> or is</font>

781
00:35:42,270 --> 00:35:49,430
not a bundle and you'll see the common

782
00:35:44,580 --> 00:35:49,430
pattern of a config block and a stable

783
00:35:49,880 --> 00:35:53,989
<font color="#E5E5E5">right</font>

784
00:35:51,619 --> 00:35:57,710
so that's<font color="#CCCCCC"> it own inner faces</font><font color="#E5E5E5"> any any</font>

785
00:35:53,989 --> 00:35:59,269
<font color="#E5E5E5">questions on that</font><font color="#CCCCCC"> okay so let me</font><font color="#E5E5E5"> just</font>

786
00:35:57,710 --> 00:36:04,130
<font color="#CCCCCC">summarize</font><font color="#E5E5E5"> in the interface is very quick</font>

787
00:35:59,269 --> 00:36:07,450
<font color="#CCCCCC">you have a base</font><font color="#E5E5E5"> interfaces model you</font>

788
00:36:04,130 --> 00:36:12,069
have augmentations<font color="#CCCCCC"> for</font><font color="#E5E5E5"> bundles for VLANs</font>

789
00:36:07,450 --> 00:36:15,109
<font color="#E5E5E5">for ipv4 ipv6</font><font color="#CCCCCC"> well actually for IP</font>

790
00:36:12,069 --> 00:36:16,999
defines both<font color="#CCCCCC"> ipv4</font><font color="#E5E5E5"> ipv6 and Ethernet</font><font color="#CCCCCC"> I</font>

791
00:36:15,109 --> 00:36:22,160
think<font color="#CCCCCC"> that hopefully I</font><font color="#E5E5E5"> cover all the all</font>

792
00:36:16,999 --> 00:36:26,479
the augmentations<font color="#E5E5E5"> and one key concept to</font>

793
00:36:22,160 --> 00:36:28,989
remember<font color="#CCCCCC"> is that IP attributes are</font>

794
00:36:26,479 --> 00:36:33,649
always<font color="#E5E5E5"> defined under sub interface yes</font>

795
00:36:28,989 --> 00:36:36,769
full of<font color="#CCCCCC"> Matthews you hear me yeah what</font>

796
00:36:33,650 --> 00:36:39,349
does<font color="#E5E5E5"> what's the state</font><font color="#CCCCCC"> of hoping config</font>

797
00:36:36,769 --> 00:36:41,529
<font color="#CCCCCC">you know obviously they sort of have one</font>

798
00:36:39,349 --> 00:36:44,930
<font color="#CCCCCC">view of</font><font color="#E5E5E5"> things but not all vendors</font>

799
00:36:41,529 --> 00:36:48,229
implement<font color="#E5E5E5"> exactly you know the same view</font>

800
00:36:44,930 --> 00:36:51,078
how how do they this<font color="#E5E5E5"> open config give</font>

801
00:36:48,229 --> 00:36:52,700
any comment about how you map<font color="#E5E5E5"> what their</font>

802
00:36:51,079 --> 00:36:56,619
view of the world<font color="#E5E5E5"> is to what other</font>

803
00:36:52,700 --> 00:36:59,180
people's view<font color="#CCCCCC"> of the world is so they</font>

804
00:36:56,619 --> 00:37:02,150
they're basically defining<font color="#E5E5E5"> an</font>

805
00:36:59,180 --> 00:37:04,868
abstraction on top of you know<font color="#CCCCCC"> different</font>

806
00:37:02,150 --> 00:37:08,329
vendor implementations and<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> their</font>

807
00:37:04,869 --> 00:37:10,729
<font color="#CCCCCC">their goal is to remain on data</font>

808
00:37:08,329 --> 00:37:14,289
<font color="#E5E5E5">abstraction layer so is really up</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

809
00:37:10,729 --> 00:37:16,700
vendor to<font color="#E5E5E5"> find the correct the correct</font>

810
00:37:14,289 --> 00:37:18,319
<font color="#E5E5E5">mapping between that abstraction</font>

811
00:37:16,700 --> 00:37:22,819
provided by open config in their own

812
00:37:18,319 --> 00:37:25,359
implementation<font color="#E5E5E5"> if the mechanism</font><font color="#CCCCCC"> that</font>

813
00:37:22,819 --> 00:37:28,420
yang provides is<font color="#CCCCCC"> if for whatever</font><font color="#E5E5E5"> reason</font>

814
00:37:25,359 --> 00:37:31,788
<font color="#CCCCCC">not a is not an ideal but at</font><font color="#E5E5E5"> least is a</font>

815
00:37:28,420 --> 00:37:33,799
<font color="#CCCCCC">suitable solution is for whatever reason</font>

816
00:37:31,789 --> 00:37:37,489
the device is not capable of supporting

817
00:37:33,799 --> 00:37:37,910
the data or<font color="#E5E5E5"> the capability</font><font color="#CCCCCC"> it can</font>

818
00:37:37,489 --> 00:37:40,130
deviate

819
00:37:37,910 --> 00:37:42,739
so<font color="#E5E5E5"> VI yang you can the device can</font>

820
00:37:40,130 --> 00:37:44,960
declare in<font color="#E5E5E5"> the yang itself</font><font color="#CCCCCC"> that out of</font>

821
00:37:42,739 --> 00:37:46,609
this model there's these corner<font color="#CCCCCC"> cases</font>

822
00:37:44,960 --> 00:37:48,969
<font color="#E5E5E5">these leaves these containers that I'm</font>

823
00:37:46,609 --> 00:37:52,729
not able<font color="#E5E5E5"> to support and even though</font>

824
00:37:48,969 --> 00:37:54,739
that's<font color="#E5E5E5"> not yeah it's always a</font><font color="#CCCCCC"> limitation</font>

825
00:37:52,729 --> 00:37:56,749
but<font color="#CCCCCC"> at least programmatically you can</font>

826
00:37:54,739 --> 00:37:58,299
detect<font color="#E5E5E5"> those situations and you can plan</font>

827
00:37:56,749 --> 00:38:04,660
for<font color="#E5E5E5"> them and you can</font><font color="#CCCCCC"> handle them</font>

828
00:37:58,299 --> 00:38:08,230
programmatically yes<font color="#E5E5E5"> all right so let's</font>

829
00:38:04,660 --> 00:38:11,220
let's take a look at<font color="#CCCCCC"> next</font><font color="#E5E5E5"> open config</font>

830
00:38:08,230 --> 00:38:15,400
telemetry<font color="#E5E5E5"> model so I'm assuming</font>

831
00:38:11,220 --> 00:38:17,439
<font color="#E5E5E5">hopefully all of you guys have heard</font>

832
00:38:15,400 --> 00:38:19,750
<font color="#CCCCCC">about a streaming telemetry that</font>

833
00:38:17,440 --> 00:38:24,090
basically provides<font color="#CCCCCC"> a mechanism to kind</font>

834
00:38:19,750 --> 00:38:26,530
of<font color="#E5E5E5"> revert the old-style polling of</font>

835
00:38:24,090 --> 00:38:28,900
polling the device to<font color="#E5E5E5"> be able to manage</font>

836
00:38:26,530 --> 00:38:31,360
the<font color="#CCCCCC"> network to kind of reverse the flow</font>

837
00:38:28,900 --> 00:38:34,180
<font color="#E5E5E5">and instead doing the streaming in most</font>

838
00:38:31,360 --> 00:38:37,180
cases directly<font color="#E5E5E5"> from from the device so</font>

839
00:38:34,180 --> 00:38:40,480
<font color="#E5E5E5">there are three main abstractions that</font>

840
00:38:37,180 --> 00:38:44,710
are<font color="#CCCCCC"> defining this model you get sensor</font>

841
00:38:40,480 --> 00:38:49,120
groups<font color="#CCCCCC"> you get destination groups</font><font color="#E5E5E5"> and</font>

842
00:38:44,710 --> 00:38:50,680
you got a subscription<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> actually let</font>

843
00:38:49,120 --> 00:38:52,870
me<font color="#E5E5E5"> let me talk a little bit</font><font color="#CCCCCC"> more about</font>

844
00:38:50,680 --> 00:38:56,470
them I thought I had more<font color="#E5E5E5"> detail so</font>

845
00:38:52,870 --> 00:38:59,080
sensor is basically<font color="#E5E5E5"> defines what is the</font>

846
00:38:56,470 --> 00:39:01,209
data<font color="#CCCCCC"> that you're interested</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> that it</font>

847
00:38:59,080 --> 00:39:03,549
should be streamed<font color="#E5E5E5"> and we're</font><font color="#CCCCCC"> gonna see</font>

848
00:39:01,210 --> 00:39:05,560
later<font color="#E5E5E5"> in the in the use case in the demo</font>

849
00:39:03,550 --> 00:39:08,080
that<font color="#CCCCCC"> I put together</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> gonna</font>

850
00:39:05,560 --> 00:39:10,779
define two sensors one<font color="#E5E5E5"> of them be an</font>

851
00:39:08,080 --> 00:39:12,430
interface<font color="#CCCCCC"> and deal one being bgp because</font>

852
00:39:10,780 --> 00:39:16,230
we're interesting on the device

853
00:39:12,430 --> 00:39:18,990
reporting constantly what's the state of

854
00:39:16,230 --> 00:39:22,630
<font color="#CCCCCC">bgp what's the state of</font><font color="#E5E5E5"> the interfaces</font>

855
00:39:18,990 --> 00:39:24,459
<font color="#E5E5E5">the</font><font color="#CCCCCC"> the second main abstraction in the</font>

856
00:39:22,630 --> 00:39:27,990
model which is the<font color="#CCCCCC"> destination groups is</font>

857
00:39:24,460 --> 00:39:31,060
basically the definition<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> what's the</font>

858
00:39:27,990 --> 00:39:32,410
definition<font color="#E5E5E5"> of the destination that</font><font color="#CCCCCC"> is</font>

859
00:39:31,060 --> 00:39:35,140
going to collect that<font color="#CCCCCC"> data that is being</font>

860
00:39:32,410 --> 00:39:39,040
<font color="#E5E5E5">streamed by the device and the</font>

861
00:39:35,140 --> 00:39:40,779
subscription<font color="#E5E5E5"> is the combination of a</font>

862
00:39:39,040 --> 00:39:42,310
sense of group<font color="#CCCCCC"> and a destination I'm</font>

863
00:39:40,780 --> 00:39:43,930
kind of<font color="#CCCCCC"> oversimplifying but</font><font color="#E5E5E5"> our very</font>

864
00:39:42,310 --> 00:39:45,880
high<font color="#CCCCCC"> levels is that</font><font color="#E5E5E5"> right so the sense</font>

865
00:39:43,930 --> 00:39:48,430
of group is while you want<font color="#E5E5E5"> the device to</font>

866
00:39:45,880 --> 00:39:50,680
stream<font color="#E5E5E5"> the destination is</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> you want</font>

867
00:39:48,430 --> 00:39:52,930
the<font color="#CCCCCC"> device to stream it to to whom</font><font color="#E5E5E5"> and</font>

868
00:39:50,680 --> 00:39:55,029
the last one is is that subscription

869
00:39:52,930 --> 00:39:57,520
<font color="#E5E5E5">which is the combination of I want to</font>

870
00:39:55,030 --> 00:40:03,280
stream this<font color="#E5E5E5"> to this destination</font><font color="#CCCCCC"> okay</font>

871
00:39:57,520 --> 00:40:06,670
that's a very<font color="#E5E5E5"> high number any questions</font>

872
00:40:03,280 --> 00:40:09,220
on that<font color="#E5E5E5"> okay so we basically reviewed</font><font color="#CCCCCC"> I</font>

873
00:40:06,670 --> 00:40:10,750
think that total of<font color="#E5E5E5"> four models with</font>

874
00:40:09,220 --> 00:40:13,419
their augmentations we started with the

875
00:40:10,750 --> 00:40:15,490
BGP we<font color="#CCCCCC"> talked about</font><font color="#E5E5E5"> a global neighbors</font>

876
00:40:13,420 --> 00:40:17,680
<font color="#E5E5E5">and peer groups then we talked</font><font color="#CCCCCC"> about</font>

877
00:40:15,490 --> 00:40:18,339
running policies right that we said it

878
00:40:17,680 --> 00:40:21,399
has

879
00:40:18,340 --> 00:40:23,110
<font color="#CCCCCC">find sets and policy definitions</font><font color="#E5E5E5"> then we</font>

880
00:40:21,400 --> 00:40:25,420
<font color="#E5E5E5">talk about interfaces with all its</font>

881
00:40:23,110 --> 00:40:28,270
augmentations<font color="#E5E5E5"> then we talk about</font>

882
00:40:25,420 --> 00:40:30,580
telemetry with the three main<font color="#CCCCCC"> components</font>

883
00:40:28,270 --> 00:40:35,230
<font color="#E5E5E5">and</font><font color="#CCCCCC"> subgroups subscriptions</font><font color="#E5E5E5"> and</font>

884
00:40:30,580 --> 00:40:37,540
destination groups<font color="#E5E5E5"> so what I wanted to</font>

885
00:40:35,230 --> 00:40:40,480
<font color="#CCCCCC">do next was to kind</font><font color="#E5E5E5"> of combine those</font>

886
00:40:37,540 --> 00:40:45,070
four models and try<font color="#E5E5E5"> see if</font><font color="#CCCCCC"> I can</font>

887
00:40:40,480 --> 00:40:48,660
implement workflow and the workflow<font color="#CCCCCC"> that</font>

888
00:40:45,070 --> 00:40:56,100
I chose<font color="#E5E5E5"> was</font><font color="#CCCCCC"> the configure and validate</font>

889
00:40:48,660 --> 00:41:00,670
<font color="#E5E5E5">peers so</font><font color="#CCCCCC"> I created a set of scripts that</font>

890
00:40:56,100 --> 00:41:03,120
are<font color="#CCCCCC"> going to use or open config to</font>

891
00:41:00,670 --> 00:41:07,090
automate<font color="#E5E5E5"> this workflow to</font>

892
00:41:03,120 --> 00:41:09,490
programmatically configure the peer<font color="#E5E5E5"> the</font>

893
00:41:07,090 --> 00:41:13,240
period relationship between<font color="#CCCCCC"> a SB r1</font><font color="#E5E5E5"> and</font>

894
00:41:09,490 --> 00:41:17,169
ASB r2 and do that at the<font color="#CCCCCC"> same time that</font>

895
00:41:13,240 --> 00:41:22,959
the that the<font color="#CCCCCC"> configuration the operation</font>

896
00:41:17,170 --> 00:41:29,110
is validated okay so the<font color="#E5E5E5"> the entire flow</font>

897
00:41:22,960 --> 00:41:30,910
would be first um the two initial<font color="#E5E5E5"> steps</font>

898
00:41:29,110 --> 00:41:36,760
it's kind<font color="#E5E5E5"> of based 0</font><font color="#CCCCCC"> configuration is</font>

899
00:41:30,910 --> 00:41:38,529
just enabling<font color="#CCCCCC"> asbr one for particular</font>

900
00:41:36,760 --> 00:41:40,300
routing policy that<font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to be used</font>

901
00:41:38,530 --> 00:41:42,790
for peering<font color="#E5E5E5"> so it's something you</font><font color="#CCCCCC"> know</font>

902
00:41:40,300 --> 00:41:44,290
you typically be gonna push<font color="#CCCCCC"> on peering</font>

903
00:41:42,790 --> 00:41:46,029
<font color="#CCCCCC">configuration</font><font color="#E5E5E5"> the device may already</font>

904
00:41:44,290 --> 00:41:47,050
have some running policies that have

905
00:41:46,030 --> 00:41:48,730
<font color="#E5E5E5">been pre-configured because these</font>

906
00:41:47,050 --> 00:41:50,890
<font color="#CCCCCC">routing policies are typically reuse</font>

907
00:41:48,730 --> 00:41:53,890
<font color="#CCCCCC">across many peers right so I'm gonna</font>

908
00:41:50,890 --> 00:41:57,100
show an initial step<font color="#E5E5E5"> of configuring</font>

909
00:41:53,890 --> 00:42:01,029
routing policy<font color="#CCCCCC"> routing policy on that</font>

910
00:41:57,100 --> 00:42:05,259
device<font color="#E5E5E5"> then add a zero configuration of</font>

911
00:42:01,030 --> 00:42:09,100
enabling telemetry<font color="#CCCCCC"> on that ASPR one so</font>

912
00:42:05,260 --> 00:42:13,090
that<font color="#E5E5E5"> asbr one starts</font><font color="#CCCCCC"> streaming</font><font color="#E5E5E5"> to me all</font>

913
00:42:09,100 --> 00:42:16,450
this open config<font color="#E5E5E5"> state for interfaces</font>

914
00:42:13,090 --> 00:42:20,610
<font color="#E5E5E5">and for</font><font color="#CCCCCC"> BGP</font><font color="#E5E5E5"> and the third step on this</font>

915
00:42:16,450 --> 00:42:25,839
<font color="#CCCCCC">workflow</font><font color="#E5E5E5"> will be for a script on this</font>

916
00:42:20,610 --> 00:42:27,700
node<font color="#CCCCCC"> to read a peer configuration of the</font>

917
00:42:25,840 --> 00:42:31,440
peering that we want to do between<font color="#CCCCCC"> ASB</font>

918
00:42:27,700 --> 00:42:33,689
<font color="#CCCCCC">r1 and as we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> - and based</font><font color="#E5E5E5"> on that</font>

919
00:42:31,440 --> 00:42:36,000
local configuration that it is read from

920
00:42:33,690 --> 00:42:39,240
<font color="#CCCCCC">a local repository all this is subtly</font>

921
00:42:36,000 --> 00:42:41,790
sitting in a virtual machine<font color="#CCCCCC"> a single</font>

922
00:42:39,240 --> 00:42:45,060
device<font color="#E5E5E5"> so I'd read</font><font color="#CCCCCC"> that local</font>

923
00:42:41,790 --> 00:42:48,060
configuration<font color="#E5E5E5"> and I'm going to configure</font>

924
00:42:45,060 --> 00:42:51,359
the interface<font color="#CCCCCC"> wait for the interface</font>

925
00:42:48,060 --> 00:42:54,089
<font color="#E5E5E5">state to be pushed back</font><font color="#CCCCCC"> to me</font><font color="#E5E5E5"> and only</font>

926
00:42:51,359 --> 00:42:56,609
<font color="#CCCCCC">when I'm able to get a stream data</font>

927
00:42:54,089 --> 00:42:59,549
coming<font color="#E5E5E5"> back</font><font color="#CCCCCC"> from the router</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font>

928
00:42:56,609 --> 00:43:01,950
interface<font color="#CCCCCC"> is up</font><font color="#E5E5E5"> the script will continue</font>

929
00:42:59,550 --> 00:43:05,490
execution<font color="#E5E5E5"> and then it will configure</font><font color="#CCCCCC"> BGP</font>

930
00:43:01,950 --> 00:43:07,919
and it will start monitoring<font color="#CCCCCC"> BGP the BGP</font>

931
00:43:05,490 --> 00:43:12,060
data that<font color="#E5E5E5"> has been</font><font color="#CCCCCC"> stream back to the</font>

932
00:43:07,920 --> 00:43:14,760
router<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so if all goes according to</font>

933
00:43:12,060 --> 00:43:20,310
<font color="#E5E5E5">plan this is gonna work in front of your</font>

934
00:43:14,760 --> 00:43:23,190
eyes<font color="#CCCCCC"> so cross your fingers</font><font color="#E5E5E5"> all right so</font>

935
00:43:20,310 --> 00:43:25,529
before<font color="#E5E5E5"> I</font><font color="#CCCCCC"> show the details of the</font>

936
00:43:23,190 --> 00:43:28,109
configuration and<font color="#CCCCCC"> we execute the script</font>

937
00:43:25,530 --> 00:43:30,660
<font color="#CCCCCC">let me</font><font color="#E5E5E5"> talk a little bit about the open</font>

938
00:43:28,109 --> 00:43:33,060
<font color="#E5E5E5">source tool chain</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'm using in this</font>

939
00:43:30,660 --> 00:43:35,310
<font color="#E5E5E5">testbed so the first thing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'm</font>

940
00:43:33,060 --> 00:43:38,279
using<font color="#E5E5E5"> I'm using the Y decay or the</font><font color="#CCCCCC"> yen</font>

941
00:43:35,310 --> 00:43:41,609
development kit<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is basically an</font><font color="#E5E5E5"> SDK</font>

942
00:43:38,280 --> 00:43:43,890
that<font color="#E5E5E5"> gives me a Python</font><font color="#CCCCCC"> and c++</font><font color="#E5E5E5"> bindings</font>

943
00:43:41,609 --> 00:43:46,770
<font color="#E5E5E5">for the data model so this allows me in</font>

944
00:43:43,890 --> 00:43:50,759
a very simple way<font color="#CCCCCC"> to write Python code</font>

945
00:43:46,770 --> 00:43:52,829
against an open<font color="#E5E5E5"> config data model and it</font>

946
00:43:50,760 --> 00:43:54,750
takes care of<font color="#E5E5E5"> not</font><font color="#CCCCCC"> only giving me</font><font color="#E5E5E5"> those</font>

947
00:43:52,829 --> 00:43:57,210
classes and allowing me to<font color="#E5E5E5"> create those</font>

948
00:43:54,750 --> 00:43:59,849
objects but also doing<font color="#E5E5E5"> the data</font>

949
00:43:57,210 --> 00:44:01,380
<font color="#E5E5E5">validation so my script before it sends</font>

950
00:43:59,849 --> 00:44:04,530
<font color="#CCCCCC">anything any configuration to the router</font>

951
00:44:01,380 --> 00:44:06,900
the data will be<font color="#E5E5E5"> validated</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> SDK</font>

952
00:44:04,530 --> 00:44:09,930
<font color="#CCCCCC">also provides the abstraction of the</font>

953
00:44:06,900 --> 00:44:11,880
communication to the<font color="#CCCCCC"> router</font><font color="#E5E5E5"> in this</font><font color="#CCCCCC"> test</font>

954
00:44:09,930 --> 00:44:13,169
<font color="#CCCCCC">bed we're gonna</font><font color="#E5E5E5"> be using</font><font color="#CCCCCC"> mat conf and</font>

955
00:44:11,880 --> 00:44:13,920
all those details<font color="#E5E5E5"> are completely</font>

956
00:44:13,170 --> 00:44:17,430
<font color="#E5E5E5">abstracted</font>

957
00:44:13,920 --> 00:44:22,380
yes my name is<font color="#E5E5E5"> Rami chief from new data</font>

958
00:44:17,430 --> 00:44:25,049
networks can we go<font color="#E5E5E5"> back sure</font><font color="#CCCCCC"> okay here</font>

959
00:44:22,380 --> 00:44:27,780
<font color="#E5E5E5">in step</font><font color="#CCCCCC"> 3 you voted the</font><font color="#E5E5E5"> P configuration</font>

960
00:44:25,050 --> 00:44:31,829
and then you configured<font color="#E5E5E5"> the new</font>

961
00:44:27,780 --> 00:44:34,980
configuration<font color="#E5E5E5"> so assuming it's a it's</font>

962
00:44:31,829 --> 00:44:37,680
not<font color="#E5E5E5"> a green field a brown field how can</font>

963
00:44:34,980 --> 00:44:40,650
we verify<font color="#CCCCCC"> I mean if the load the</font>

964
00:44:37,680 --> 00:44:43,649
configuration<font color="#CCCCCC"> made me change</font><font color="#E5E5E5"> my mind in</font>

965
00:44:40,650 --> 00:44:44,610
what I need to configure<font color="#E5E5E5"> or discover</font>

966
00:44:43,650 --> 00:44:46,440
that

967
00:44:44,610 --> 00:44:49,290
<font color="#E5E5E5">I think needs to be amended before</font>

968
00:44:46,440 --> 00:44:53,550
<font color="#E5E5E5">applying my configuration now how can</font>

969
00:44:49,290 --> 00:44:55,710
this sanity check<font color="#E5E5E5"> be done I didn't quite</font>

970
00:44:53,550 --> 00:44:57,300
get the<font color="#E5E5E5"> question you're</font><font color="#CCCCCC"> saying</font><font color="#E5E5E5"> if you</font>

971
00:44:55,710 --> 00:44:58,890
have a<font color="#CCCCCC"> brownfield</font><font color="#E5E5E5"> configuration and you</font>

972
00:44:57,300 --> 00:45:00,780
have configuration already on the router

973
00:44:58,890 --> 00:45:02,339
how can you verify<font color="#E5E5E5"> where the</font>

974
00:45:00,780 --> 00:45:04,170
<font color="#CCCCCC">configuration is present on</font><font color="#E5E5E5"> the device</font>

975
00:45:02,340 --> 00:45:07,590
<font color="#CCCCCC">or some configuration</font><font color="#E5E5E5"> is already present</font>

976
00:45:04,170 --> 00:45:09,930
<font color="#E5E5E5">or not</font><font color="#CCCCCC"> I just want to make sure that my</font>

977
00:45:07,590 --> 00:45:12,840
configuration won't conflict with any of

978
00:45:09,930 --> 00:45:17,940
the<font color="#E5E5E5"> existing configuration</font><font color="#CCCCCC"> oh how can</font>

979
00:45:12,840 --> 00:45:20,910
you<font color="#E5E5E5"> verify the</font><font color="#CCCCCC"> ok so it's a it's a long</font>

980
00:45:17,940 --> 00:45:23,940
it can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a long</font><font color="#E5E5E5"> conversation to give</font>

981
00:45:20,910 --> 00:45:25,259
you<font color="#E5E5E5"> maybe a very quick answer</font><font color="#CCCCCC"> there are</font>

982
00:45:23,940 --> 00:45:29,430
different ways<font color="#CCCCCC"> in which you could</font><font color="#E5E5E5"> do</font>

983
00:45:25,260 --> 00:45:31,010
that<font color="#CCCCCC"> if you eat from</font><font color="#E5E5E5"> a theoretical point</font>

984
00:45:29,430 --> 00:45:32,970
<font color="#E5E5E5">of</font><font color="#CCCCCC"> view you can retrieve</font><font color="#E5E5E5"> your</font>

985
00:45:31,010 --> 00:45:35,160
<font color="#E5E5E5">configuration if your configuration is</font>

986
00:45:32,970 --> 00:45:37,350
compliant to a model<font color="#CCCCCC"> actually there's a</font>

987
00:45:35,160 --> 00:45:40,500
lot<font color="#E5E5E5"> of validation</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can do off</font>

988
00:45:37,350 --> 00:45:42,480
box<font color="#E5E5E5"> just using leveraging the power of</font>

989
00:45:40,500 --> 00:45:45,720
<font color="#E5E5E5">Yang and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> power of</font><font color="#CCCCCC"> the data</font><font color="#E5E5E5"> models</font>

990
00:45:42,480 --> 00:45:47,400
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> if that's not because of the</font>

991
00:45:45,720 --> 00:45:48,870
capability<font color="#E5E5E5"> of the devices or because</font><font color="#CCCCCC"> of</font>

992
00:45:47,400 --> 00:45:50,730
the characteristics of the configuration

993
00:45:48,870 --> 00:45:53,250
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you have does not realistic</font>

994
00:45:50,730 --> 00:45:56,910
ultimately you have<font color="#E5E5E5"> to kind of rely</font><font color="#CCCCCC"> on</font>

995
00:45:53,250 --> 00:45:59,010
the configuration manager on the router

996
00:45:56,910 --> 00:46:00,839
to arbitrate those things<font color="#E5E5E5"> so if you're</font>

997
00:45:59,010 --> 00:46:02,430
trying<font color="#CCCCCC"> to push a configuration</font><font color="#E5E5E5"> that is</font>

998
00:46:00,840 --> 00:46:05,250
incompatible with configuration<font color="#E5E5E5"> that is</font>

999
00:46:02,430 --> 00:46:07,080
in the device the device<font color="#E5E5E5"> for instance if</font>

1000
00:46:05,250 --> 00:46:08,610
you were to<font color="#CCCCCC"> use</font><font color="#E5E5E5"> net count but if you</font>

1001
00:46:07,080 --> 00:46:10,500
were to use<font color="#CCCCCC"> reskin fine any other</font>

1002
00:46:08,610 --> 00:46:12,660
protocol<font color="#E5E5E5"> mechanisms your PC to try to</font>

1003
00:46:10,500 --> 00:46:14,700
configure the configuration manager on

1004
00:46:12,660 --> 00:46:16,080
the device will tell<font color="#E5E5E5"> you that way the</font>

1005
00:46:14,700 --> 00:46:22,620
configuration you're trying to push<font color="#CCCCCC"> it's</font>

1006
00:46:16,080 --> 00:46:24,810
incomparable<font color="#CCCCCC"> it's not about</font>

1007
00:46:22,620 --> 00:46:28,109
compatibility<font color="#E5E5E5"> with the device it might</font>

1008
00:46:24,810 --> 00:46:30,720
be<font color="#E5E5E5"> like I need to keep for example the</font>

1009
00:46:28,110 --> 00:46:34,620
<font color="#E5E5E5">NTU</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> such in a certain interface as</font>

1010
00:46:30,720 --> 00:46:38,459
is so these types of sanity<font color="#CCCCCC"> check so I</font>

1011
00:46:34,620 --> 00:46:45,839
<font color="#E5E5E5">need to keep the value of some certain</font>

1012
00:46:38,460 --> 00:46:47,190
specific parameter yeah so so<font color="#E5E5E5"> again I</font>

1013
00:46:45,840 --> 00:46:50,010
think<font color="#E5E5E5"> they're different these different</font>

1014
00:46:47,190 --> 00:46:52,380
<font color="#E5E5E5">approaches to do it I mean you can you</font>

1015
00:46:50,010 --> 00:46:54,060
can off box<font color="#E5E5E5"> you probably want to do all</font>

1016
00:46:52,380 --> 00:46:55,230
<font color="#E5E5E5">that all</font><font color="#CCCCCC"> the validation you can retrieve</font>

1017
00:46:54,060 --> 00:46:58,288
<font color="#CCCCCC">your configuration and do that</font>

1018
00:46:55,230 --> 00:47:00,449
<font color="#E5E5E5">validation of line we can</font><font color="#CCCCCC"> if you want</font>

1019
00:46:58,289 --> 00:47:03,689
you can have the conversation<font color="#E5E5E5"> at the end</font>

1020
00:47:00,449 --> 00:47:06,869
because<font color="#CCCCCC"> boots are the</font><font color="#E5E5E5"> intent of this</font>

1021
00:47:03,689 --> 00:47:08,160
demo<font color="#CCCCCC"> by the way you're not in the the</font>

1022
00:47:06,869 --> 00:47:09,509
assumption is not<font color="#E5E5E5"> you're gonna run with</font>

1023
00:47:08,160 --> 00:47:11,699
this<font color="#E5E5E5"> and you're gonna try</font><font color="#CCCCCC"> to design your</font>

1024
00:47:09,509 --> 00:47:13,859
network<font color="#CCCCCC"> I just</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> build a quick</font>

1025
00:47:11,699 --> 00:47:16,109
<font color="#E5E5E5">simple</font><font color="#CCCCCC"> setup to kind</font><font color="#E5E5E5"> of show what is</font>

1026
00:47:13,859 --> 00:47:18,029
possible<font color="#E5E5E5"> with open config models so they</font>

1027
00:47:16,109 --> 00:47:19,769
so<font color="#E5E5E5"> the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> focus I want</font><font color="#CCCCCC"> to make sure</font>

1028
00:47:18,029 --> 00:47:21,599
<font color="#E5E5E5">that is more</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> data model saying</font>

1029
00:47:19,769 --> 00:47:22,890
what can<font color="#E5E5E5"> be done with the models not so</font>

1030
00:47:21,599 --> 00:47:24,839
much on whether this is<font color="#CCCCCC"> an appropriate</font>

1031
00:47:22,890 --> 00:47:27,479
workflow to deploy a peering

1032
00:47:24,839 --> 00:47:33,299
configuration or not but we can<font color="#E5E5E5"> I will</font>

1033
00:47:27,479 --> 00:47:35,339
happily discuss at the end thank<font color="#E5E5E5"> you all</font>

1034
00:47:33,299 --> 00:47:38,729
right so let<font color="#CCCCCC"> me keep going</font><font color="#E5E5E5"> through the</font>

1035
00:47:35,339 --> 00:47:41,640
tool chain<font color="#E5E5E5"> on the collection side</font>

1036
00:47:38,729 --> 00:47:43,288
<font color="#E5E5E5">remember that I said we we're gonna be</font>

1037
00:47:41,640 --> 00:47:45,179
very fine<font color="#CCCCCC"> when we configure</font><font color="#E5E5E5"> the</font>

1038
00:47:43,289 --> 00:47:47,789
<font color="#E5E5E5">interface and we configure</font><font color="#CCCCCC"> the bgp we</font>

1039
00:47:45,179 --> 00:47:49,469
expect data to be streamed back<font color="#E5E5E5"> so we</font>

1040
00:47:47,789 --> 00:47:51,119
need to have some kind<font color="#E5E5E5"> of collector and</font>

1041
00:47:49,469 --> 00:47:53,819
we're<font color="#E5E5E5"> gonna use an open source project</font>

1042
00:47:51,119 --> 00:47:56,069
called<font color="#E5E5E5"> pipeline that is going to collect</font>

1043
00:47:53,819 --> 00:47:59,459
that<font color="#CCCCCC"> data</font><font color="#E5E5E5"> the data is going to come to</font>

1044
00:47:56,069 --> 00:48:01,558
<font color="#CCCCCC">that collector in</font><font color="#E5E5E5"> protocol buffer</font>

1045
00:47:59,459 --> 00:48:05,158
encoding and<font color="#E5E5E5"> it's actually going to be</font>

1046
00:48:01,559 --> 00:48:08,900
transforming it<font color="#E5E5E5"> to to Jason and this</font>

1047
00:48:05,159 --> 00:48:12,119
this collector can act as a producer

1048
00:48:08,900 --> 00:48:15,059
<font color="#E5E5E5">into other platforms so in</font><font color="#CCCCCC"> particular in</font>

1049
00:48:12,119 --> 00:48:17,429
this in this test this<font color="#CCCCCC"> test</font><font color="#E5E5E5"> bed we're</font>

1050
00:48:15,059 --> 00:48:20,119
<font color="#E5E5E5">gonna use in</font><font color="#CCCCCC"> Kafka</font><font color="#E5E5E5"> just also another</font>

1051
00:48:17,429 --> 00:48:23,579
open source project as a message bus

1052
00:48:20,119 --> 00:48:27,059
message<font color="#E5E5E5"> bus so I plan is going to</font><font color="#CCCCCC"> be</font>

1053
00:48:23,579 --> 00:48:29,059
<font color="#E5E5E5">receiving the data from the</font><font color="#CCCCCC"> device in</font>

1054
00:48:27,059 --> 00:48:31,739
protobuf is going to<font color="#E5E5E5"> transport it to</font>

1055
00:48:29,059 --> 00:48:34,949
Jason<font color="#CCCCCC"> and it's gonna</font><font color="#E5E5E5"> dump it on a</font>

1056
00:48:31,739 --> 00:48:36,630
<font color="#E5E5E5">message bus and my scripts that are</font>

1057
00:48:34,949 --> 00:48:39,719
doing the deployment of the P are

1058
00:48:36,630 --> 00:48:41,519
actually checking the state of<font color="#E5E5E5"> BGP</font><font color="#CCCCCC"> and</font>

1059
00:48:39,719 --> 00:48:48,119
<font color="#E5E5E5">the state of the interface reading from</font>

1060
00:48:41,519 --> 00:48:51,149
<font color="#E5E5E5">that message bus okay so let's start</font>

1061
00:48:48,119 --> 00:48:55,859
<font color="#E5E5E5">looking at the details</font><font color="#CCCCCC"> of the of the</font>

1062
00:48:51,150 --> 00:48:57,779
configuration what I'm<font color="#CCCCCC"> showing here is</font>

1063
00:48:55,859 --> 00:49:00,419
actually kind of configuration examples

1064
00:48:57,779 --> 00:49:02,939
or instantiations of particular data

1065
00:49:00,419 --> 00:49:04,650
models in this<font color="#E5E5E5"> case because</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> tool</font>

1066
00:49:02,939 --> 00:49:06,239
chain that<font color="#CCCCCC"> I'm using and</font><font color="#E5E5E5"> also because</font>

1067
00:49:04,650 --> 00:49:06,809
it's more compact to show it on<font color="#E5E5E5"> the</font>

1068
00:49:06,239 --> 00:49:08,369
screen

1069
00:49:06,809 --> 00:49:10,469
I'm actually not showing<font color="#E5E5E5"> the</font>

1070
00:49:08,369 --> 00:49:11,790
configuration encoding in XML or JSON

1071
00:49:10,469 --> 00:49:14,040
because<font color="#E5E5E5"> actually we will be</font>

1072
00:49:11,790 --> 00:49:17,090
much longer<font color="#E5E5E5"> much more difficult to fit</font>

1073
00:49:14,040 --> 00:49:21,570
<font color="#CCCCCC">it here</font><font color="#E5E5E5"> so I'm actually showing the</font>

1074
00:49:17,090 --> 00:49:24,090
Python objects that<font color="#E5E5E5"> ydk allows me to to</font>

1075
00:49:21,570 --> 00:49:26,460
configure<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and you should recognize</font>

1076
00:49:24,090 --> 00:49:29,250
if<font color="#E5E5E5"> you remember</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> the quick overview</font>

1077
00:49:26,460 --> 00:49:31,110
that<font color="#E5E5E5"> we did in routing policies some of</font>

1078
00:49:29,250 --> 00:49:35,010
the abstractions that<font color="#CCCCCC"> I mentioned them</font>

1079
00:49:31,110 --> 00:49:37,530
<font color="#E5E5E5">there you're going to</font><font color="#CCCCCC"> recognize here one</font>

1080
00:49:35,010 --> 00:49:39,330
one of<font color="#E5E5E5"> them for</font><font color="#CCCCCC"> instance a prefix set so</font>

1081
00:49:37,530 --> 00:49:41,820
we see<font color="#E5E5E5"> here in the very first line that</font>

1082
00:49:39,330 --> 00:49:45,480
we're defining or creating a new prefix

1083
00:49:41,820 --> 00:49:50,270
set that is actually adding<font color="#CCCCCC"> two prefixes</font>

1084
00:49:45,480 --> 00:50:17,700
<font color="#E5E5E5">is adding a 10/8 with different mask</font>

1085
00:49:50,270 --> 00:50:19,410
ranges<font color="#E5E5E5"> and</font><font color="#CCCCCC"> 172 16/12/2014 policy</font>

1086
00:50:17,700 --> 00:50:22,919
configuration<font color="#CCCCCC"> if you look at the very</font>

1087
00:50:19,410 --> 00:50:24,299
<font color="#E5E5E5">last line you're gonna see the path you</font>

1088
00:50:22,920 --> 00:50:26,040
can you should<font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> recognize the</font>

1089
00:50:24,300 --> 00:50:28,410
path that we<font color="#E5E5E5"> talked in the</font><font color="#CCCCCC"> routing</font>

1090
00:50:26,040 --> 00:50:29,880
<font color="#E5E5E5">policy model the route is running policy</font>

1091
00:50:28,410 --> 00:50:32,609
and on the<font color="#CCCCCC"> running policy you have</font>

1092
00:50:29,880 --> 00:50:34,530
<font color="#E5E5E5">defined sets one of the defined sets</font>

1093
00:50:32,610 --> 00:50:36,720
that<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> define is the</font><font color="#E5E5E5"> perfect set</font>

1094
00:50:34,530 --> 00:50:38,700
and in this case I'm appending the

1095
00:50:36,720 --> 00:50:41,939
<font color="#E5E5E5">prefix that</font><font color="#CCCCCC"> I just</font><font color="#E5E5E5"> configured here in</font>

1096
00:50:38,700 --> 00:50:44,279
this in this top part<font color="#E5E5E5"> okay so again the</font>

1097
00:50:41,940 --> 00:50:47,490
path of my objects<font color="#E5E5E5"> completely mirrors</font>

1098
00:50:44,280 --> 00:50:50,370
the<font color="#CCCCCC"> structure of the structure of the</font>

1099
00:50:47,490 --> 00:50:53,160
model<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is my actual policy</font>

1100
00:50:50,370 --> 00:50:55,080
definition and this<font color="#E5E5E5"> may be I recognize</font>

1101
00:50:53,160 --> 00:50:58,649
<font color="#E5E5E5">maybe too much Python and too much of</font>

1102
00:50:55,080 --> 00:51:01,069
the config for some of you but maybe<font color="#CCCCCC"> two</font>

1103
00:50:58,650 --> 00:51:03,690
key<font color="#E5E5E5"> blocks that you wanna understand</font><font color="#CCCCCC"> I</font>

1104
00:51:01,070 --> 00:51:05,730
we see here the<font color="#CCCCCC"> definition of the first</font>

1105
00:51:03,690 --> 00:51:07,320
statement this<font color="#E5E5E5"> policy is gonna have two</font>

1106
00:51:05,730 --> 00:51:10,350
statements<font color="#CCCCCC"> one of them called drop</font>

1107
00:51:07,320 --> 00:51:12,990
prefixes that<font color="#E5E5E5"> references that prefix set</font>

1108
00:51:10,350 --> 00:51:16,080
that we're defining the previous slide

1109
00:51:12,990 --> 00:51:21,439
<font color="#CCCCCC">and he has a second statement</font><font color="#E5E5E5"> that</font>

1110
00:51:16,080 --> 00:51:25,009
basically<font color="#CCCCCC"> is a default reject route</font>

1111
00:51:21,440 --> 00:51:27,770
statement<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I'm sorry</font>

1112
00:51:25,010 --> 00:51:29,900
reject<font color="#E5E5E5"> is the action for these drop</font>

1113
00:51:27,770 --> 00:51:31,610
prefixes<font color="#CCCCCC"> the second</font><font color="#E5E5E5"> statement is the</font>

1114
00:51:29,900 --> 00:51:33,650
bottom part<font color="#E5E5E5"> the second statement is an</font>

1115
00:51:31,610 --> 00:51:36,500
accept<font color="#E5E5E5"> route so basically this is a</font>

1116
00:51:33,650 --> 00:51:38,630
<font color="#E5E5E5">policy with two statements one of them</font>

1117
00:51:36,500 --> 00:51:40,820
it drops prefixes if they match that

1118
00:51:38,630 --> 00:51:43,370
prefix set and the second one just

1119
00:51:40,820 --> 00:51:46,850
accept an exception and anything else

1120
00:51:43,370 --> 00:51:49,400
<font color="#E5E5E5">and again we see here the path routing</font>

1121
00:51:46,850 --> 00:51:50,990
policy policy definitions<font color="#E5E5E5"> policy</font>

1122
00:51:49,400 --> 00:51:52,730
definition and we're appending<font color="#E5E5E5"> the</font>

1123
00:51:50,990 --> 00:51:57,580
policy that we<font color="#E5E5E5"> just define</font><font color="#CCCCCC"> in this top</font>

1124
00:51:52,730 --> 00:52:02,930
part any questions on that

1125
00:51:57,580 --> 00:52:04,819
<font color="#E5E5E5">all right the order the order yeah</font>

1126
00:52:02,930 --> 00:52:10,100
that's a good question<font color="#CCCCCC"> what about</font><font color="#E5E5E5"> the</font>

1127
00:52:04,820 --> 00:52:11,930
<font color="#E5E5E5">order</font><font color="#CCCCCC"> in in general in the end I don't</font>

1128
00:52:10,100 --> 00:52:13,700
<font color="#CCCCCC">know how many people are familiar with</font>

1129
00:52:11,930 --> 00:52:16,220
<font color="#E5E5E5">of the details in Indiana container</font>

1130
00:52:13,700 --> 00:52:18,470
<font color="#E5E5E5">containers which is a single mechanism</font>

1131
00:52:16,220 --> 00:52:20,660
<font color="#E5E5E5">for grouping data does not have ordering</font>

1132
00:52:18,470 --> 00:52:23,480
<font color="#E5E5E5">so at a certain level there's no order</font>

1133
00:52:20,660 --> 00:52:25,370
in between containers<font color="#E5E5E5"> and another</font>

1134
00:52:23,480 --> 00:52:27,080
<font color="#E5E5E5">abstraction</font><font color="#CCCCCC"> Eenie is the concept of a</font>

1135
00:52:25,370 --> 00:52:29,390
list right<font color="#CCCCCC"> there</font><font color="#E5E5E5"> has kind</font><font color="#CCCCCC"> of multiple</font>

1136
00:52:27,080 --> 00:52:33,560
<font color="#CCCCCC">records in this</font><font color="#E5E5E5"> case you have a list of</font>

1137
00:52:29,390 --> 00:52:35,270
<font color="#CCCCCC">statements you can have lists</font><font color="#E5E5E5"> in which</font>

1138
00:52:33,560 --> 00:52:37,400
the ordered is significant listening

1139
00:52:35,270 --> 00:52:39,110
which is not significant this<font color="#E5E5E5"> is an</font>

1140
00:52:37,400 --> 00:52:41,150
example of obviously have a list<font color="#E5E5E5"> with</font>

1141
00:52:39,110 --> 00:52:46,130
<font color="#E5E5E5">the order is significant and in the</font>

1142
00:52:41,150 --> 00:52:48,110
model is<font color="#E5E5E5"> 99.9999% that is defined as a</font>

1143
00:52:46,130 --> 00:52:49,790
list that<font color="#E5E5E5"> is ordered by user so</font>

1144
00:52:48,110 --> 00:52:51,620
basically the order that the user

1145
00:52:49,790 --> 00:52:54,680
defines for the stamen is the order<font color="#E5E5E5"> that</font>

1146
00:52:51,620 --> 00:52:57,230
the device has to implement<font color="#E5E5E5"> for many</font>

1147
00:52:54,680 --> 00:52:59,540
<font color="#E5E5E5">little is the order is not significant</font>

1148
00:52:57,230 --> 00:53:01,850
for<font color="#E5E5E5"> instance for your neighbors or your</font>

1149
00:52:59,540 --> 00:53:03,740
<font color="#CCCCCC">BGP neighbors whether one BGP neighbor</font>

1150
00:53:01,850 --> 00:53:05,299
happens before or later in the

1151
00:53:03,740 --> 00:53:08,779
<font color="#E5E5E5">configuration is not necessarily</font>

1152
00:53:05,300 --> 00:53:14,480
relevant<font color="#E5E5E5"> and</font><font color="#CCCCCC"> yang as a language allows</font>

1153
00:53:08,780 --> 00:53:18,590
<font color="#CCCCCC">you to do that</font><font color="#E5E5E5"> let's take a look now at</font>

1154
00:53:14,480 --> 00:53:20,300
<font color="#CCCCCC">the telemetry configuration remember in</font>

1155
00:53:18,590 --> 00:53:21,890
telemetry we said the three things<font color="#E5E5E5"> that</font>

1156
00:53:20,300 --> 00:53:23,330
<font color="#E5E5E5">you need</font><font color="#CCCCCC"> to in any telemeter</font>

1157
00:53:21,890 --> 00:53:24,529
configuration<font color="#E5E5E5"> first of all what is</font><font color="#CCCCCC"> it</font>

1158
00:53:23,330 --> 00:53:27,140
<font color="#E5E5E5">that it's going to be streamed what's</font>

1159
00:53:24,530 --> 00:53:29,780
the data<font color="#E5E5E5"> I care I care right what the</font>

1160
00:53:27,140 --> 00:53:31,970
data that I want<font color="#E5E5E5"> the device</font><font color="#CCCCCC"> to send to</font>

1161
00:53:29,780 --> 00:53:33,740
the<font color="#E5E5E5"> collector</font><font color="#CCCCCC"> that's one thing the</font>

1162
00:53:31,970 --> 00:53:36,410
second thing<font color="#E5E5E5"> is the destination right</font>

1163
00:53:33,740 --> 00:53:38,029
defining who's going to be receiving

1164
00:53:36,410 --> 00:53:38,700
<font color="#CCCCCC">that data and the last one is the</font>

1165
00:53:38,030 --> 00:53:40,740
subscripts

1166
00:53:38,700 --> 00:53:43,230
<font color="#CCCCCC">but</font><font color="#E5E5E5"> basically the definition of the in</font>

1167
00:53:40,740 --> 00:53:46,770
simple terms<font color="#E5E5E5"> that the combination of the</font>

1168
00:53:43,230 --> 00:53:50,820
sensors and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> destination</font><font color="#E5E5E5"> so in this</font>

1169
00:53:46,770 --> 00:53:53,099
case we create a sensor group with two

1170
00:53:50,820 --> 00:53:54,900
sensors<font color="#E5E5E5"> we're telling the router that</font>

1171
00:53:53,099 --> 00:53:57,510
<font color="#CCCCCC">were interested in the open config</font>

1172
00:53:54,900 --> 00:54:00,030
interfaces interface interface<font color="#E5E5E5"> so</font>

1173
00:53:57,510 --> 00:54:03,329
basically<font color="#E5E5E5"> I want to get all the state of</font>

1174
00:54:00,030 --> 00:54:05,670
the<font color="#E5E5E5"> interfaces okay I create one sensor</font>

1175
00:54:03,329 --> 00:54:07,530
path that I've<font color="#E5E5E5"> reference here and here's</font>

1176
00:54:05,670 --> 00:54:11,280
the<font color="#CCCCCC"> definition of the other sensor path</font>

1177
00:54:07,530 --> 00:54:14,579
and I'm saying<font color="#E5E5E5"> I want all the data for</font>

1178
00:54:11,280 --> 00:54:16,380
open conflict<font color="#E5E5E5"> bgp neighbors look that</font>

1179
00:54:14,579 --> 00:54:18,359
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> asking</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> specific that I'm</font>

1180
00:54:16,380 --> 00:54:20,040
not<font color="#E5E5E5"> interested for instance in peer</font>

1181
00:54:18,359 --> 00:54:22,710
groups in<font color="#E5E5E5"> this case I chose</font><font color="#CCCCCC"> to do it</font>

1182
00:54:20,040 --> 00:54:24,509
<font color="#CCCCCC">that</font><font color="#E5E5E5"> way I could</font><font color="#CCCCCC"> ask for</font><font color="#E5E5E5"> stream to me</font>

1183
00:54:22,710 --> 00:54:27,000
all the BGP data but in<font color="#E5E5E5"> this case I'm</font>

1184
00:54:24,510 --> 00:54:28,829
<font color="#CCCCCC">saying</font><font color="#E5E5E5"> stream to me BGP neighbor data</font><font color="#CCCCCC"> I</font>

1185
00:54:27,000 --> 00:54:31,349
<font color="#E5E5E5">don't know I don't care about the global</font>

1186
00:54:28,829 --> 00:54:33,359
<font color="#E5E5E5">I don't care about peer groups which is</font>

1187
00:54:31,349 --> 00:54:38,670
the other two main branches<font color="#CCCCCC"> of the BGP</font>

1188
00:54:33,359 --> 00:54:40,500
model and if you if you<font color="#E5E5E5"> follow the path</font>

1189
00:54:38,670 --> 00:54:42,150
<font color="#E5E5E5">of the objects you realize</font><font color="#CCCCCC"> that it's the</font>

1190
00:54:40,500 --> 00:54:45,060
same path that<font color="#E5E5E5"> we were talking</font><font color="#CCCCCC"> before</font>

1191
00:54:42,150 --> 00:54:46,829
<font color="#CCCCCC">the</font><font color="#E5E5E5"> root of the</font><font color="#CCCCCC"> telemetry</font><font color="#E5E5E5"> model is</font>

1192
00:54:45,060 --> 00:54:49,259
telemetry system<font color="#E5E5E5"> after that you have</font>

1193
00:54:46,829 --> 00:54:52,950
sensor groups which is a container<font color="#E5E5E5"> of</font>

1194
00:54:49,260 --> 00:54:54,690
all the<font color="#E5E5E5"> list members and we have one</font>

1195
00:54:52,950 --> 00:55:00,270
sensor group that we're appending<font color="#E5E5E5"> to</font>

1196
00:54:54,690 --> 00:55:02,160
<font color="#CCCCCC">that list right the second main</font>

1197
00:55:00,270 --> 00:55:04,950
component the destination<font color="#CCCCCC"> so in this</font>

1198
00:55:02,160 --> 00:55:06,660
case<font color="#E5E5E5"> I I call a destination that is</font>

1199
00:55:04,950 --> 00:55:09,118
pipeline remember pipeline is<font color="#CCCCCC"> going to</font>

1200
00:55:06,660 --> 00:55:10,980
be the<font color="#E5E5E5"> collector</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

1201
00:55:09,119 --> 00:55:13,560
receive the stream data<font color="#CCCCCC"> convert it to</font>

1202
00:55:10,980 --> 00:55:15,359
<font color="#E5E5E5">JSON</font><font color="#CCCCCC"> and put it on the Kafka bus</font><font color="#E5E5E5"> so the</font>

1203
00:55:13,560 --> 00:55:18,328
destination<font color="#E5E5E5"> is called pipeline and this</font>

1204
00:55:15,359 --> 00:55:20,609
<font color="#E5E5E5">is the IP address and</font><font color="#CCCCCC"> the port</font><font color="#E5E5E5"> that is</font>

1205
00:55:18,329 --> 00:55:24,800
going to be used<font color="#E5E5E5"> in this case</font><font color="#CCCCCC"> the box is</font>

1206
00:55:20,609 --> 00:55:28,740
streaming the<font color="#CCCCCC"> data in protocol buffer</font>

1207
00:55:24,800 --> 00:55:31,829
encoding and<font color="#CCCCCC"> it's using</font><font color="#E5E5E5"> TCP transport in</font>

1208
00:55:28,740 --> 00:55:34,229
this case in<font color="#E5E5E5"> case you care about the</font>

1209
00:55:31,829 --> 00:55:35,579
<font color="#E5E5E5">details</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the last piece of the</font>

1210
00:55:34,230 --> 00:55:38,310
configuration<font color="#E5E5E5"> for the telemetry this</font>

1211
00:55:35,579 --> 00:55:41,310
<font color="#E5E5E5">description where we combine the sensors</font>

1212
00:55:38,310 --> 00:55:43,440
<font color="#CCCCCC">that I</font><font color="#E5E5E5"> defined and the destination and I</font>

1213
00:55:41,310 --> 00:55:45,990
specify with what frequency I want the

1214
00:55:43,440 --> 00:55:51,390
<font color="#CCCCCC">information so we are creating one</font>

1215
00:55:45,990 --> 00:55:52,720
destination<font color="#CCCCCC"> that references the sensors</font>

1216
00:55:51,390 --> 00:55:55,618
<font color="#CCCCCC">that we define previous</font>

1217
00:55:52,720 --> 00:55:57,848
it references<font color="#CCCCCC"> the collector</font><font color="#E5E5E5"> the</font>

1218
00:55:55,619 --> 00:56:00,700
destination<font color="#E5E5E5"> that is called pipeline and</font>

1219
00:55:57,849 --> 00:56:05,829
we're specifying that<font color="#E5E5E5"> we want the data</font>

1220
00:56:00,700 --> 00:56:07,990
every<font color="#E5E5E5"> 10 seconds so I want counters for</font>

1221
00:56:05,829 --> 00:56:10,510
interfaces and for<font color="#CCCCCC"> VTP neighbors to</font><font color="#E5E5E5"> be</font>

1222
00:56:07,990 --> 00:56:14,520
streamed to that<font color="#E5E5E5"> destination</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> protobuf</font>

1223
00:56:10,510 --> 00:56:14,520
encoding every 10 seconds yes

1224
00:56:17,500 --> 00:56:25,510
<font color="#E5E5E5">if the frequency</font><font color="#CCCCCC"> can be modified lower</font>

1225
00:56:20,290 --> 00:56:31,450
you mean<font color="#CCCCCC"> initially initiated oh it can</font>

1226
00:56:25,510 --> 00:56:33,220
<font color="#E5E5E5">be</font><font color="#CCCCCC"> negotiated you can</font><font color="#E5E5E5"> I don't think you</font>

1227
00:56:31,450 --> 00:56:34,750
<font color="#E5E5E5">can be</font><font color="#CCCCCC"> negotiated per se I think when</font>

1228
00:56:33,220 --> 00:56:37,390
you do darling<font color="#E5E5E5"> there's two models</font><font color="#CCCCCC"> of</font>

1229
00:56:34,750 --> 00:56:40,390
telemetry<font color="#E5E5E5"> this is the</font><font color="#CCCCCC"> dialogue</font><font color="#E5E5E5"> model you</font>

1230
00:56:37,390 --> 00:56:42,430
have<font color="#CCCCCC"> dialing I</font><font color="#E5E5E5"> think the dialing the</font>

1231
00:56:40,390 --> 00:56:43,990
device could reject<font color="#E5E5E5"> your configuration</font>

1232
00:56:42,430 --> 00:56:45,669
if you're trying to<font color="#E5E5E5"> set a frequency or</font>

1233
00:56:43,990 --> 00:56:52,240
interval<font color="#E5E5E5"> that is not supported by</font><font color="#CCCCCC"> the</font>

1234
00:56:45,670 --> 00:57:01,300
device<font color="#CCCCCC"> all right any questions</font><font color="#E5E5E5"> on on</font>

1235
00:56:52,240 --> 00:57:06,089
<font color="#E5E5E5">that so if you go back one one slide</font>

1236
00:57:01,300 --> 00:57:06,089
back one slide<font color="#CCCCCC"> best subscriptions</font><font color="#E5E5E5"> yes</font>

1237
00:57:06,880 --> 00:57:11,349
so<font color="#CCCCCC"> can we do the subscription outside of</font>

1238
00:57:09,970 --> 00:57:18,970
the box<font color="#E5E5E5"> right if you subscribe to the</font>

1239
00:57:11,349 --> 00:57:21,130
specific<font color="#E5E5E5"> path if you can define the</font>

1240
00:57:18,970 --> 00:57:32,859
subscription<font color="#CCCCCC"> off box and just tell the</font>

1241
00:57:21,130 --> 00:57:34,150
<font color="#E5E5E5">box yes can we</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> outside of</font><font color="#E5E5E5"> the</font>

1242
00:57:32,859 --> 00:57:36,009
<font color="#E5E5E5">box and you know you have a set of</font>

1243
00:57:34,150 --> 00:57:43,119
<font color="#E5E5E5">collector sitting there let's subscribe</font>

1244
00:57:36,010 --> 00:57:45,280
to<font color="#CCCCCC"> Pat that you interested and you what</font>

1245
00:57:43,119 --> 00:57:49,599
of<font color="#E5E5E5"> box you can define where you want</font><font color="#CCCCCC"> the</font>

1246
00:57:45,280 --> 00:57:51,069
<font color="#E5E5E5">data to be</font><font color="#CCCCCC"> sent</font><font color="#E5E5E5"> to that's what we're</font>

1247
00:57:49,599 --> 00:57:54,540
<font color="#E5E5E5">gonna do here this configuration is</font>

1248
00:57:51,069 --> 00:57:59,579
<font color="#E5E5E5">going to be pushed into the box right or</font>

1249
00:57:54,540 --> 00:57:59,579
you can have a dialing dialing model

1250
00:58:01,790 --> 00:58:06,800
<font color="#E5E5E5">might have like you</font><font color="#CCCCCC"> cancel collectors</font>

1251
00:58:04,420 --> 00:58:11,020
<font color="#CCCCCC">Network you</font><font color="#E5E5E5"> can subscribe</font><font color="#CCCCCC"> to a path</font>

1252
00:58:06,800 --> 00:58:13,490
instead<font color="#E5E5E5"> of</font><font color="#CCCCCC"> telling boss</font><font color="#E5E5E5"> to send you know</font>

1253
00:58:11,020 --> 00:58:19,160
yeah you<font color="#E5E5E5"> could you could do it I think</font>

1254
00:58:13,490 --> 00:58:21,290
<font color="#CCCCCC">that the model that the open config is</font>

1255
00:58:19,160 --> 00:58:24,129
pursuing for that is to use actually and

1256
00:58:21,290 --> 00:58:26,690
there's an<font color="#E5E5E5"> RPC in the G and</font><font color="#CCCCCC"> MI</font>

1257
00:58:24,130 --> 00:58:29,570
specification that I think it's supposed

1258
00:58:26,690 --> 00:58:30,800
<font color="#CCCCCC">to tackle</font><font color="#E5E5E5"> you get the expert on the left</font>

1259
00:58:29,570 --> 00:58:32,570
<font color="#CCCCCC">hand side we can</font><font color="#E5E5E5"> maybe have</font><font color="#CCCCCC"> the</font>

1260
00:58:30,800 --> 00:58:33,890
conversation afterwards than that but I

1261
00:58:32,570 --> 00:58:37,150
think<font color="#E5E5E5"> that's that's the approach</font><font color="#CCCCCC"> that</font>

1262
00:58:33,890 --> 00:58:42,710
will be followed by things yeah

1263
00:58:37,150 --> 00:58:44,930
any other question<font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> want very</font>

1264
00:58:42,710 --> 00:58:46,340
<font color="#CCCCCC">quickly to two</font><font color="#E5E5E5"> pieces of configuration</font>

1265
00:58:44,930 --> 00:58:48,410
<font color="#CCCCCC">that is kind of a zero configuration</font>

1266
00:58:46,340 --> 00:58:51,080
that is going to be on the router before

1267
00:58:48,410 --> 00:58:53,299
actually configuring the<font color="#E5E5E5"> peer right the</font>

1268
00:58:51,080 --> 00:58:54,590
idea<font color="#CCCCCC"> that we want to pre configure the</font>

1269
00:58:53,300 --> 00:58:58,100
policy and<font color="#E5E5E5"> we want a pre-configured</font>

1270
00:58:54,590 --> 00:58:59,180
telemetry<font color="#E5E5E5"> okay so this is the beginning</font>

1271
00:58:58,100 --> 00:59:01,250
<font color="#E5E5E5">of the world flow where we're going to</font>

1272
00:58:59,180 --> 00:59:05,839
configure<font color="#E5E5E5"> very specifically a given peer</font>

1273
00:59:01,250 --> 00:59:08,540
and what I do is I created<font color="#CCCCCC"> what I'm</font>

1274
00:59:05,840 --> 00:59:10,730
<font color="#E5E5E5">doing here is I created a local</font>

1275
00:59:08,540 --> 00:59:13,220
definition of what a peer<font color="#E5E5E5"> of the peer I</font>

1276
00:59:10,730 --> 00:59:15,230
want to set<font color="#CCCCCC"> up and</font><font color="#E5E5E5"> this is my own JSON</font>

1277
00:59:13,220 --> 00:59:17,450
file<font color="#CCCCCC"> that I created</font><font color="#E5E5E5"> right it's um a</font>

1278
00:59:15,230 --> 00:59:21,410
local format<font color="#E5E5E5"> that I created right that</font>

1279
00:59:17,450 --> 00:59:24,799
<font color="#CCCCCC">it specifies</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> a SBR one my autonomous</font>

1280
00:59:21,410 --> 00:59:26,450
system is<font color="#CCCCCC"> 65,000</font><font color="#E5E5E5"> one on this</font><font color="#CCCCCC"> particular</font>

1281
00:59:24,800 --> 00:59:28,640
interface<font color="#E5E5E5"> that are defined here with</font>

1282
00:59:26,450 --> 00:59:30,620
those attributes<font color="#CCCCCC"> I want to configure a</font>

1283
00:59:28,640 --> 00:59:32,359
neighbor to that destination and my

1284
00:59:30,620 --> 00:59:36,100
<font color="#E5E5E5">peering address with that neighbor is</font>

1285
00:59:32,360 --> 00:59:40,370
that<font color="#E5E5E5"> okay so what I'm gonna be showing</font>

1286
00:59:36,100 --> 00:59:44,779
<font color="#E5E5E5">in the</font><font color="#CCCCCC"> last part is</font><font color="#E5E5E5"> actually the</font>

1287
00:59:40,370 --> 00:59:47,600
<font color="#E5E5E5">automation of reading this data using</font>

1288
00:59:44,780 --> 00:59:51,560
that data as input for<font color="#E5E5E5"> configuration</font>

1289
00:59:47,600 --> 00:59:55,040
scripts that configure the interface<font color="#E5E5E5"> and</font>

1290
00:59:51,560 --> 00:59:57,740
also<font color="#E5E5E5"> going to configure</font><font color="#CCCCCC"> bgp but also my</font>

1291
00:59:55,040 --> 01:00:00,560
script is constantly monitoring<font color="#E5E5E5"> the</font>

1292
00:59:57,740 --> 01:00:01,970
Kafka<font color="#CCCCCC"> BOTS when it pushes</font><font color="#E5E5E5"> the interface</font>

1293
01:00:00,560 --> 01:00:04,700
configuration in this case the

1294
01:00:01,970 --> 01:00:07,370
configuration on Gigabit Ethernet 0 0 0

1295
01:00:04,700 --> 01:00:09,799
0<font color="#E5E5E5"> it's going to start watching in the</font>

1296
01:00:07,370 --> 01:00:11,060
Kafka<font color="#CCCCCC"> bar see if that interface came up</font>

1297
01:00:09,800 --> 01:00:14,180
or not<font color="#E5E5E5"> so it's not going to be pulling</font>

1298
01:00:11,060 --> 01:00:16,009
<font color="#E5E5E5">the device</font><font color="#CCCCCC"> okay that's the key</font>

1299
01:00:14,180 --> 01:00:18,710
key difference that you need to know the

1300
01:00:16,010 --> 01:00:21,290
center so my scrip is gonna wait for

1301
01:00:18,710 --> 01:00:23,330
messages coming<font color="#CCCCCC"> from the Kafka bus</font><font color="#E5E5E5"> to</font>

1302
01:00:21,290 --> 01:00:25,700
see if that interface came up when the

1303
01:00:23,330 --> 01:00:27,500
<font color="#E5E5E5">interface comes up is going to move to</font>

1304
01:00:25,700 --> 01:00:29,779
the<font color="#E5E5E5"> next stage which is pushing the</font>

1305
01:00:27,500 --> 01:00:31,190
configuration using open config pushing

1306
01:00:29,780 --> 01:00:34,130
the<font color="#E5E5E5"> BGP configuration for this</font>

1307
01:00:31,190 --> 01:00:37,690
particular<font color="#CCCCCC"> peer and again listen on the</font>

1308
01:00:34,130 --> 01:00:52,480
Kafka bus<font color="#E5E5E5"> for that BGP session to become</font>

1309
01:00:37,690 --> 01:00:55,640
established<font color="#CCCCCC"> okay yes how do you like</font>

1310
01:00:52,480 --> 01:00:57,200
this model like a<font color="#CCCCCC"> PT into like</font><font color="#E5E5E5"> device</font>

1311
01:00:55,640 --> 01:00:59,839
can be<font color="#E5E5E5"> like</font><font color="#CCCCCC"> virtualized</font>

1312
01:00:57,200 --> 01:01:06,680
<font color="#CCCCCC">sacking like a rhymer for Ryan</font><font color="#E5E5E5"> like a</font>

1313
01:00:59,840 --> 01:01:08,690
virtual<font color="#E5E5E5"> instance ok this model yeah</font>

1314
01:01:06,680 --> 01:01:12,470
right now and I<font color="#CCCCCC"> think I mentioned</font><font color="#E5E5E5"> that</font>

1315
01:01:08,690 --> 01:01:15,710
earlier in the in the presentation<font color="#E5E5E5"> in</font>

1316
01:01:12,470 --> 01:01:18,500
<font color="#CCCCCC">the in the future</font><font color="#E5E5E5"> you will have to you</font>

1317
01:01:15,710 --> 01:01:20,930
will<font color="#E5E5E5"> have to use additional models to be</font>

1318
01:01:18,500 --> 01:01:22,790
<font color="#E5E5E5">able to do that in particularly you will</font>

1319
01:01:20,930 --> 01:01:25,160
need to<font color="#E5E5E5"> have divider support the network</font>

1320
01:01:22,790 --> 01:01:26,529
<font color="#CCCCCC">instance model because it'll</font><font color="#E5E5E5"> make that's</font>

1321
01:01:25,160 --> 01:01:29,000
the<font color="#E5E5E5"> model that</font><font color="#CCCCCC"> gives you a</font>

1322
01:01:26,530 --> 01:01:31,610
<font color="#E5E5E5">virtualization or multi-tenancy on</font>

1323
01:01:29,000 --> 01:01:33,110
devices<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the models</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> have here</font>

1324
01:01:31,610 --> 01:01:33,620
<font color="#E5E5E5">does not doesn't</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that is not</font>

1325
01:01:33,110 --> 01:01:37,850
possible

1326
01:01:33,620 --> 01:01:41,600
<font color="#CCCCCC">ok but I think the implementations of</font>

1327
01:01:37,850 --> 01:01:44,210
the never instance<font color="#E5E5E5"> either</font><font color="#CCCCCC"> you may have</font>

1328
01:01:41,600 --> 01:01:48,170
some ready out<font color="#CCCCCC"> there or if</font><font color="#E5E5E5"> not there</font>

1329
01:01:44,210 --> 01:01:51,530
<font color="#E5E5E5">should</font><font color="#CCCCCC"> come out pretty pretty soon so</font>

1330
01:01:48,170 --> 01:01:54,260
let's take a look at the IP interface

1331
01:01:51,530 --> 01:01:57,140
<font color="#E5E5E5">configuration remember my script has to</font>

1332
01:01:54,260 --> 01:02:00,710
read this basic interface configuration

1333
01:01:57,140 --> 01:02:03,500
and needs<font color="#E5E5E5"> to send that to the router</font>

1334
01:02:00,710 --> 01:02:05,540
using open effect sorry so this is the

1335
01:02:03,500 --> 01:02:08,330
configuration in my snippet of

1336
01:02:05,540 --> 01:02:11,120
configuration<font color="#CCCCCC"> also in</font><font color="#E5E5E5"> Python</font><font color="#CCCCCC"> so this is</font>

1337
01:02:08,330 --> 01:02:12,890
my Gigabit Ethernet 0<font color="#E5E5E5"> interface</font><font color="#CCCCCC"> I put</font>

1338
01:02:11,120 --> 01:02:14,900
the<font color="#CCCCCC"> description of the interface and</font>

1339
01:02:12,890 --> 01:02:17,210
remember all the IP<font color="#E5E5E5"> configuration</font>

1340
01:02:14,900 --> 01:02:19,790
happens on the last sub interface so

1341
01:02:17,210 --> 01:02:22,840
here I'm<font color="#E5E5E5"> creating a sub interface under</font>

1342
01:02:19,790 --> 01:02:25,759
<font color="#E5E5E5">that interface putting the attributes of</font>

1343
01:02:22,840 --> 01:02:27,099
the IP address<font color="#CCCCCC"> that I want and the mask</font>

1344
01:02:25,760 --> 01:02:30,160
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I want</font>

1345
01:02:27,099 --> 01:02:32,229
<font color="#E5E5E5">okay and that's that's the two basic</font>

1346
01:02:30,160 --> 01:02:35,589
pieces<font color="#CCCCCC"> of configuration creating the</font>

1347
01:02:32,229 --> 01:02:38,200
interface put<font color="#E5E5E5"> the basically the</font>

1348
01:02:35,589 --> 01:02:40,720
description on the interface<font color="#E5E5E5"> defining a</font>

1349
01:02:38,200 --> 01:02:42,700
sub interface an IP sub interface for

1350
01:02:40,720 --> 01:02:47,200
<font color="#CCCCCC">that</font><font color="#E5E5E5"> interface</font><font color="#CCCCCC"> and put the basic address</font>

1351
01:02:42,700 --> 01:02:49,689
<font color="#E5E5E5">in on the interference</font><font color="#CCCCCC"> I said we're</font>

1352
01:02:47,200 --> 01:02:50,979
gonna validate<font color="#E5E5E5"> we need to</font><font color="#CCCCCC"> validate this</font>

1353
01:02:49,690 --> 01:02:53,559
<font color="#E5E5E5">stay because I don't want to in</font>

1354
01:02:50,979 --> 01:02:56,460
<font color="#CCCCCC">principal</font><font color="#E5E5E5"> I don't want to configure</font><font color="#CCCCCC"> my</font>

1355
01:02:53,559 --> 01:02:59,229
<font color="#E5E5E5">BGP if my interface didn't come up okay</font>

1356
01:02:56,460 --> 01:03:02,259
so the device is<font color="#CCCCCC"> going to be streaming</font>

1357
01:02:59,229 --> 01:03:05,140
data back<font color="#CCCCCC"> to me</font><font color="#E5E5E5"> about all my interfaces</font>

1358
01:03:02,259 --> 01:03:08,319
so the path that<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> use I'm using</font>

1359
01:03:05,140 --> 01:03:11,200
a very simple validation<font color="#CCCCCC"> for my demo</font>

1360
01:03:08,319 --> 01:03:14,859
here so the path that<font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to be</font>

1361
01:03:11,200 --> 01:03:18,339
used to to monitor the the interface is

1362
01:03:14,859 --> 01:03:21,009
<font color="#E5E5E5">the operational status under</font><font color="#CCCCCC"> the sub</font>

1363
01:03:18,339 --> 01:03:24,299
interface<font color="#E5E5E5"> so I'm gonna match I'm gonna</font>

1364
01:03:21,009 --> 01:03:27,910
look for the operational status on

1365
01:03:24,299 --> 01:03:30,479
gigabit 0 0 0 0<font color="#E5E5E5"> on the ipv4 sub</font>

1366
01:03:27,910 --> 01:03:33,700
interface and I'm<font color="#E5E5E5"> gonna look for that</font>

1367
01:03:30,479 --> 01:03:35,979
<font color="#E5E5E5">operational status to show up okay these</font>

1368
01:03:33,700 --> 01:03:38,680
<font color="#CCCCCC">are all the</font><font color="#E5E5E5"> possible</font><font color="#CCCCCC"> states</font><font color="#E5E5E5"> that you can</font>

1369
01:03:35,979 --> 01:03:39,868
have associated<font color="#CCCCCC"> with operational status</font>

1370
01:03:38,680 --> 01:03:41,950
<font color="#CCCCCC">ok</font>

1371
01:03:39,869 --> 01:03:44,680
just out of curiosity<font color="#E5E5E5"> how are you</font>

1372
01:03:41,950 --> 01:03:46,689
streaming<font color="#E5E5E5"> the day you just</font><font color="#CCCCCC"> sis logging</font>

1373
01:03:44,680 --> 01:03:47,979
or using some other mechanism using the

1374
01:03:46,690 --> 01:03:49,660
beauty of telemetry<font color="#E5E5E5"> what I was</font>

1375
01:03:47,979 --> 01:03:52,328
<font color="#E5E5E5">describing before so</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> telling the</font>

1376
01:03:49,660 --> 01:03:54,749
router to stream that data is actually

1377
01:03:52,329 --> 01:03:57,670
<font color="#E5E5E5">modeled data</font><font color="#CCCCCC"> so it's the same</font>

1378
01:03:54,749 --> 01:03:59,379
operational<font color="#E5E5E5"> data defined in the model is</font>

1379
01:03:57,670 --> 01:04:00,880
<font color="#CCCCCC">actually the data</font><font color="#E5E5E5"> is encoded in this</font>

1380
01:03:59,380 --> 01:04:04,749
case in protocol buffers and<font color="#E5E5E5"> it's a</font>

1381
01:04:00,880 --> 01:04:08,650
stream on<font color="#CCCCCC"> a TCP connection back to</font><font color="#E5E5E5"> the</font>

1382
01:04:04,749 --> 01:04:11,618
pipeline<font color="#E5E5E5"> collector so it's very sent way</font>

1383
01:04:08,650 --> 01:04:14,979
more structure<font color="#E5E5E5"> than syslog and it's</font>

1384
01:04:11,619 --> 01:04:17,229
being<font color="#CCCCCC"> send way more compact</font><font color="#E5E5E5"> that text</font>

1385
01:04:14,979 --> 01:04:19,779
<font color="#CCCCCC">based yeah</font><font color="#E5E5E5"> so if you're not familiar</font>

1386
01:04:17,229 --> 01:04:22,299
with<font color="#E5E5E5"> telemetry will highly recommend you</font>

1387
01:04:19,779 --> 01:04:26,319
take<font color="#E5E5E5"> a look at it it's it's a much</font>

1388
01:04:22,299 --> 01:04:29,829
better way<font color="#CCCCCC"> of doing</font><font color="#E5E5E5"> monitoring your</font>

1389
01:04:26,319 --> 01:04:31,479
network device in real<font color="#E5E5E5"> time so let's</font>

1390
01:04:29,829 --> 01:04:34,569
<font color="#CCCCCC">look at the last piece of</font><font color="#E5E5E5"> the</font>

1391
01:04:31,479 --> 01:04:36,069
configuration for my peer<font color="#E5E5E5"> if my</font>

1392
01:04:34,569 --> 01:04:37,779
interface came up the last thing is

1393
01:04:36,069 --> 01:04:40,410
actually<font color="#E5E5E5"> configured that the peer</font><font color="#CCCCCC"> and</font>

1394
01:04:37,779 --> 01:04:42,359
here<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> mixing maybe more</font>

1395
01:04:40,410 --> 01:04:45,660
but I wanted<font color="#E5E5E5"> to show a more complete BGP</font>

1396
01:04:42,359 --> 01:04:48,569
configuration remember<font color="#E5E5E5"> BGP has three key</font>

1397
01:04:45,660 --> 01:04:50,940
<font color="#E5E5E5">pieces global configuration peer groups</font>

1398
01:04:48,569 --> 01:04:53,038
and neighbors<font color="#CCCCCC"> I</font><font color="#E5E5E5"> could have done just</font>

1399
01:04:50,940 --> 01:04:55,349
<font color="#CCCCCC">neighbors</font><font color="#E5E5E5"> I tried to get fancy</font><font color="#CCCCCC"> and I put</font>

1400
01:04:53,039 --> 01:04:57,599
one peer group configuration<font color="#CCCCCC"> too</font><font color="#E5E5E5"> so</font>

1401
01:04:55,349 --> 01:04:59,670
here's my in the top part<font color="#CCCCCC"> my global</font>

1402
01:04:57,599 --> 01:05:01,529
global configuration in which some

1403
01:04:59,670 --> 01:05:05,039
defining<font color="#E5E5E5"> my autonomous system and I'm</font>

1404
01:05:01,529 --> 01:05:07,140
enabling<font color="#CCCCCC"> IP</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> I beg for mercy I</font>

1405
01:05:05,039 --> 01:05:09,599
didn't do an ipv6 example I promise the

1406
01:05:07,140 --> 01:05:12,180
next<font color="#E5E5E5"> time</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> gonna be ipv6 only but</font>

1407
01:05:09,599 --> 01:05:14,910
it's<font color="#E5E5E5"> almost the same right you just do</font>

1408
01:05:12,180 --> 01:05:16,649
search for a for<font color="#CCCCCC"> replaced 4 6 and the</font>

1409
01:05:14,910 --> 01:05:18,930
configuration<font color="#E5E5E5"> will work what I need to</font>

1410
01:05:16,650 --> 01:05:21,509
change<font color="#CCCCCC"> the IP address to take that back</font>

1411
01:05:18,930 --> 01:05:24,690
so this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> global where we activate</font>

1412
01:05:21,509 --> 01:05:27,509
the ipv4 address then I'm defining<font color="#E5E5E5"> a</font>

1413
01:05:24,690 --> 01:05:31,289
peer a peer group<font color="#CCCCCC"> that I'm calling ebgp</font>

1414
01:05:27,509 --> 01:05:33,450
<font color="#CCCCCC">so we see here</font><font color="#E5E5E5"> a BGP is the name</font><font color="#CCCCCC"> that</font>

1415
01:05:31,289 --> 01:05:35,999
I'm<font color="#E5E5E5"> gonna use on the under that ebgp</font>

1416
01:05:33,450 --> 01:05:39,538
peer group

1417
01:05:35,999 --> 01:05:42,839
<font color="#E5E5E5">I'm also enabling ipv4 unicast I'm</font>

1418
01:05:39,539 --> 01:05:46,650
enabling<font color="#E5E5E5"> that all these fats again</font><font color="#CCCCCC"> are</font>

1419
01:05:42,839 --> 01:05:48,749
pads that come<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the structure of the</font>

1420
01:05:46,650 --> 01:05:50,700
data models they open config data model

1421
01:05:48,749 --> 01:05:52,558
<font color="#CCCCCC">okay they just</font><font color="#E5E5E5"> happen to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> Python</font>

1422
01:05:50,700 --> 01:05:54,660
objects but they follow exactly the same

1423
01:05:52,559 --> 01:05:56,700
naming<font color="#E5E5E5"> convention the same design</font>

1424
01:05:54,660 --> 01:06:00,690
hierarchy<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we see that we're</font>

1425
01:05:56,700 --> 01:06:05,640
applying the policy<font color="#CCCCCC"> okay that we defined</font>

1426
01:06:00,690 --> 01:06:08,670
before<font color="#E5E5E5"> on that peer group and the next</font>

1427
01:06:05,640 --> 01:06:11,308
<font color="#E5E5E5">slide we actually have the definition of</font>

1428
01:06:08,670 --> 01:06:13,499
<font color="#E5E5E5">the neighbor that uses that peer group</font>

1429
01:06:11,309 --> 01:06:15,420
<font color="#CCCCCC">that we defined in the previous slide so</font>

1430
01:06:13,499 --> 01:06:17,819
this<font color="#E5E5E5"> is the address</font><font color="#CCCCCC"> like the address</font>

1431
01:06:15,420 --> 01:06:19,559
<font color="#CCCCCC">that we'd read from that JSON file that</font>

1432
01:06:17,819 --> 01:06:25,259
is telling<font color="#E5E5E5"> me the peer I want to connect</font>

1433
01:06:19,559 --> 01:06:27,809
to this<font color="#E5E5E5"> is the remote peer</font><font color="#CCCCCC"> actually I</font>

1434
01:06:25,259 --> 01:06:31,200
<font color="#E5E5E5">just realized I have a typo</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> 65,000</font>

1435
01:06:27,809 --> 01:06:35,239
<font color="#CCCCCC">- by</font><font color="#E5E5E5"> the way and I'm referencing a BGP</font>

1436
01:06:31,200 --> 01:06:35,239
<font color="#E5E5E5">the peer group that are defined for</font>

1437
01:06:36,200 --> 01:06:42,299
after the BGP configuration is pushed

1438
01:06:39,119 --> 01:06:44,640
the last step is<font color="#E5E5E5"> for my script to verify</font>

1439
01:06:42,299 --> 01:06:46,140
that the BGP session<font color="#E5E5E5"> came up and again I</font>

1440
01:06:44,640 --> 01:06:48,299
don't<font color="#E5E5E5"> want to be pulling the router I</font>

1441
01:06:46,140 --> 01:06:50,940
want to be listening to<font color="#E5E5E5"> the Kafka</font><font color="#CCCCCC"> pass</font>

1442
01:06:48,299 --> 01:06:52,770
for messages telemetry<font color="#E5E5E5"> messages that are</font>

1443
01:06:50,940 --> 01:06:55,530
being streamed from the router

1444
01:06:52,770 --> 01:07:00,090
and look<font color="#E5E5E5"> whether my session came up or</font>

1445
01:06:55,530 --> 01:07:03,270
<font color="#E5E5E5">not okay so I'm gonna go under open</font>

1446
01:07:00,090 --> 01:07:06,720
config<font color="#E5E5E5"> bgp bgp neighbors neighbor state</font>

1447
01:07:03,270 --> 01:07:09,270
session state in gonna look for<font color="#CCCCCC"> that</font>

1448
01:07:06,720 --> 01:07:12,209
field being established<font color="#CCCCCC"> that</font><font color="#E5E5E5"> would tell</font>

1449
01:07:09,270 --> 01:07:13,950
<font color="#CCCCCC">me</font><font color="#E5E5E5"> that my session is my busy</font><font color="#CCCCCC"> btp</font>

1450
01:07:12,210 --> 01:07:16,260
session<font color="#E5E5E5"> to that neighbor has</font><font color="#CCCCCC"> been</font>

1451
01:07:13,950 --> 01:07:19,730
established<font color="#E5E5E5"> and his passing hopefully</font>

1452
01:07:16,260 --> 01:07:19,730
passing advertisements at that point

1453
01:07:20,510 --> 01:07:28,560
okay<font color="#CCCCCC"> so we have 20 20 minutes</font><font color="#E5E5E5"> or 20</font>

1454
01:07:26,520 --> 01:07:32,090
minutes<font color="#CCCCCC"> to complete so this is how the</font>

1455
01:07:28,560 --> 01:07:35,520
execution of<font color="#E5E5E5"> the script</font><font color="#CCCCCC"> looked</font><font color="#E5E5E5"> okay</font>

1456
01:07:32,090 --> 01:07:37,320
we're gonna we're gonna do it and and<font color="#E5E5E5"> so</font>

1457
01:07:35,520 --> 01:07:41,100
basically what you're gonna see is<font color="#CCCCCC"> the</font>

1458
01:07:37,320 --> 01:07:43,200
loading of<font color="#CCCCCC"> the JSON file</font><font color="#E5E5E5"> the</font>

1459
01:07:41,100 --> 01:07:46,740
configuration will take place the<font color="#CCCCCC"> scrip</font>

1460
01:07:43,200 --> 01:07:51,210
<font color="#CCCCCC">tanks</font><font color="#E5E5E5"> or stops at that point waiting</font><font color="#CCCCCC"> for</font>

1461
01:07:46,740 --> 01:07:53,310
<font color="#CCCCCC">Kafka for Park a message to verify that</font>

1462
01:07:51,210 --> 01:07:56,100
<font color="#E5E5E5">the interface came up if the interface</font>

1463
01:07:53,310 --> 01:07:57,750
comes up you get an<font color="#E5E5E5"> okay and it moves to</font>

1464
01:07:56,100 --> 01:07:59,850
<font color="#CCCCCC">the next</font><font color="#E5E5E5"> step</font><font color="#CCCCCC"> which is competing</font>

1465
01:07:57,750 --> 01:08:02,310
<font color="#E5E5E5">completing the BGP configuration and</font>

1466
01:07:59,850 --> 01:08:07,200
waiting again<font color="#E5E5E5"> for the state to</font>

1467
01:08:02,310 --> 01:08:14,940
transition okay so let's take<font color="#E5E5E5"> a quick</font>

1468
01:08:07,200 --> 01:08:17,040
<font color="#E5E5E5">look</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so what I did and this is</font>

1469
01:08:14,940 --> 01:08:19,290
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be pushing this to github so</font>

1470
01:08:17,040 --> 01:08:22,710
if you wanna if<font color="#CCCCCC"> you want to try</font><font color="#E5E5E5"> later</font>

1471
01:08:19,290 --> 01:08:25,920
I created a vagrant<font color="#CCCCCC"> a vagrant</font>

1472
01:08:22,710 --> 01:08:28,980
environment that has all these scripts

1473
01:08:25,920 --> 01:08:31,410
<font color="#E5E5E5">it has the collector in Kafka everything</font>

1474
01:08:28,979 --> 01:08:32,580
pre-configure so you can the<font color="#CCCCCC"> only thing</font>

1475
01:08:31,410 --> 01:08:35,278
that<font color="#E5E5E5"> you're not</font><font color="#CCCCCC"> getting</font><font color="#E5E5E5"> for free is the</font>

1476
01:08:32,580 --> 01:08:37,500
heart is that rather<font color="#E5E5E5"> but the rest of the</font>

1477
01:08:35,279 --> 01:08:42,240
stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is open</font><font color="#CCCCCC"> source you have it</font>

1478
01:08:37,500 --> 01:08:46,920
okay<font color="#E5E5E5"> so let's let's take a look really</font>

1479
01:08:42,240 --> 01:08:48,870
quick<font color="#E5E5E5"> so we go under the demo the demo</font>

1480
01:08:46,920 --> 01:08:52,500
directory we have<font color="#E5E5E5"> here the collection of</font>

1481
01:08:48,870 --> 01:08:54,510
<font color="#CCCCCC">a collection of different</font><font color="#E5E5E5"> scripts what</font>

1482
01:08:52,500 --> 01:08:57,240
I'm gonna do first is remember the

1483
01:08:54,510 --> 01:08:59,790
rudder right<font color="#E5E5E5"> now has has</font><font color="#CCCCCC"> not read the</font>

1484
01:08:57,240 --> 01:09:01,559
<font color="#CCCCCC">JSON file with appearing doesn't have to</font>

1485
01:08:59,790 --> 01:09:04,740
let me reconfigure<font color="#CCCCCC"> or it does not have a</font>

1486
01:09:01,560 --> 01:09:06,720
routing policy<font color="#CCCCCC"> configured yet</font><font color="#E5E5E5"> so I'm</font>

1487
01:09:04,740 --> 01:09:08,700
going<font color="#E5E5E5"> to show you really</font>

1488
01:09:06,720 --> 01:09:14,460
this script<font color="#E5E5E5"> that configures the routing</font>

1489
01:09:08,700 --> 01:09:16,830
policy<font color="#E5E5E5"> okay so this is basically the</font>

1490
01:09:14,460 --> 01:09:20,730
snippet<font color="#CCCCCC"> that I show you before</font><font color="#E5E5E5"> in that</font>

1491
01:09:16,830 --> 01:09:22,890
slide<font color="#CCCCCC"> right this is all my my policy</font>

1492
01:09:20,729 --> 01:09:24,959
configuration<font color="#E5E5E5"> you recognize here the</font>

1493
01:09:22,890 --> 01:09:27,150
prefix the definition<font color="#CCCCCC"> of the prefix set</font>

1494
01:09:24,960 --> 01:09:31,939
you recognize the definition of the

1495
01:09:27,149 --> 01:09:36,899
policy<font color="#CCCCCC"> one</font><font color="#E5E5E5"> statement two statements okay</font>

1496
01:09:31,939 --> 01:09:39,269
<font color="#E5E5E5">so this Python script basically this is</font>

1497
01:09:36,899 --> 01:09:42,210
the step<font color="#E5E5E5"> in the script where that</font><font color="#CCCCCC"> object</font>

1498
01:09:39,270 --> 01:09:44,250
is<font color="#CCCCCC"> created and this is the step of the</font>

1499
01:09:42,210 --> 01:09:46,319
script when I'm<font color="#E5E5E5"> telling the script go</font>

1500
01:09:44,250 --> 01:09:48,120
ahead and create<font color="#E5E5E5"> this configuration on</font>

1501
01:09:46,319 --> 01:09:49,560
the<font color="#E5E5E5"> router</font><font color="#CCCCCC"> and what the scrip</font><font color="#E5E5E5"> is going</font>

1502
01:09:48,120 --> 01:09:51,300
<font color="#E5E5E5">to do is going to</font><font color="#CCCCCC"> validate that that</font>

1503
01:09:49,560 --> 01:09:53,190
<font color="#CCCCCC">object that</font><font color="#E5E5E5"> I created is valid with</font>

1504
01:09:51,300 --> 01:09:55,920
respect to the model<font color="#E5E5E5"> one evaluates</font><font color="#CCCCCC"> that</font>

1505
01:09:53,189 --> 01:09:58,259
is going to convert it to<font color="#E5E5E5"> XML</font><font color="#CCCCCC"> is going</font>

1506
01:09:55,920 --> 01:09:59,490
<font color="#CCCCCC">to generate</font><font color="#E5E5E5"> the Netcom for our</font><font color="#CCCCCC"> PCs is</font>

1507
01:09:58,260 --> 01:10:00,990
going to send it to<font color="#E5E5E5"> the router is going</font>

1508
01:09:59,490 --> 01:10:02,550
<font color="#CCCCCC">to take care</font><font color="#E5E5E5"> of doing the commit and all</font>

1509
01:10:00,990 --> 01:10:04,650
that stuff<font color="#CCCCCC"> so all</font><font color="#E5E5E5"> that logic is</font>

1510
01:10:02,550 --> 01:10:06,630
completely abstracted away<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> need</font>

1511
01:10:04,650 --> 01:10:08,879
to worry<font color="#CCCCCC"> about doing any manipulation of</font>

1512
01:10:06,630 --> 01:10:11,310
<font color="#E5E5E5">XML no manipulation</font><font color="#CCCCCC"> on that comp</font><font color="#E5E5E5"> I don't</font>

1513
01:10:08,880 --> 01:10:14,220
need to worry about is my data correct

1514
01:10:11,310 --> 01:10:16,170
or not hopefully if the rudder of the

1515
01:10:14,220 --> 01:10:18,150
script executes fine it means that it

1516
01:10:16,170 --> 01:10:19,560
was<font color="#CCCCCC"> able to verify that</font><font color="#E5E5E5"> my object is</font>

1517
01:10:18,150 --> 01:10:24,769
<font color="#CCCCCC">defined properly</font>

1518
01:10:19,560 --> 01:10:28,260
<font color="#E5E5E5">okay so let's execute this first script</font>

1519
01:10:24,770 --> 01:10:31,740
and the script takes<font color="#CCCCCC"> two are</font><font color="#E5E5E5"> one</font>

1520
01:10:28,260 --> 01:10:35,670
required argument in one optional

1521
01:10:31,740 --> 01:10:42,840
first of all just<font color="#CCCCCC"> for some sanity let's</font>

1522
01:10:35,670 --> 01:10:44,910
make sure these<font color="#CCCCCC"> guys</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> yay</font><font color="#E5E5E5"> okay so</font>

1523
01:10:42,840 --> 01:10:55,710
let's do the configuration<font color="#CCCCCC"> of the</font>

1524
01:10:44,910 --> 01:10:57,150
writing policy okay<font color="#CCCCCC"> always hidden</font><font color="#E5E5E5"> the</font>

1525
01:10:55,710 --> 01:11:01,200
still alive<font color="#E5E5E5"> okay no problem</font>

1526
01:10:57,150 --> 01:11:04,980
we<font color="#CCCCCC"> got</font><font color="#E5E5E5"> your cover</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> counting on that</font>

1527
01:11:01,200 --> 01:11:08,400
trick<font color="#CCCCCC"> but that's fine you guys want to</font>

1528
01:11:04,980 --> 01:11:11,490
see<font color="#E5E5E5"> there okay is that slightly better</font>

1529
01:11:08,400 --> 01:11:13,710
yes<font color="#E5E5E5"> okay so we're going to execute</font><font color="#CCCCCC"> the</font>

1530
01:11:11,490 --> 01:11:15,929
script the script has an optional flag

1531
01:11:13,710 --> 01:11:17,550
that is minus V to get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> login</font><font color="#E5E5E5"> so we</font>

1532
01:11:15,930 --> 01:11:20,540
can see what this<font color="#CCCCCC"> is what the scrape is</font>

1533
01:11:17,550 --> 01:11:20,540
is doing

1534
01:11:21,090 --> 01:11:27,970
<font color="#CCCCCC">okay so we see that the script</font><font color="#E5E5E5"> actually</font>

1535
01:11:24,340 --> 01:11:31,660
<font color="#E5E5E5">converted that Python object to to</font><font color="#CCCCCC"> a net</font>

1536
01:11:27,970 --> 01:11:36,490
<font color="#CCCCCC">count</font><font color="#E5E5E5"> RPC</font><font color="#CCCCCC"> I see my writing policy object</font>

1537
01:11:31,660 --> 01:11:39,220
here<font color="#CCCCCC"> I recognize my prefix set on this</font>

1538
01:11:36,490 --> 01:11:41,440
first part<font color="#E5E5E5"> I recognize my policy</font>

1539
01:11:39,220 --> 01:11:43,600
definition<font color="#E5E5E5"> okay so if the script</font>

1540
01:11:41,440 --> 01:11:45,750
<font color="#E5E5E5">converted this</font><font color="#CCCCCC"> up to all to XML</font><font color="#E5E5E5"> and</font>

1541
01:11:43,600 --> 01:11:48,310
means that<font color="#CCCCCC"> my configuration</font><font color="#E5E5E5"> was valid</font>

1542
01:11:45,750 --> 01:11:51,430
from the perspective<font color="#E5E5E5"> of the run of the</font>

1543
01:11:48,310 --> 01:11:53,500
script<font color="#E5E5E5"> he</font><font color="#CCCCCC"> sent it</font><font color="#E5E5E5"> to the router</font>

1544
01:11:51,430 --> 01:11:55,840
we got an<font color="#CCCCCC"> OK from the</font><font color="#E5E5E5"> router and send a</font>

1545
01:11:53,500 --> 01:11:57,760
<font color="#E5E5E5">commit</font><font color="#CCCCCC"> that rather responded a comment</font>

1546
01:11:55,840 --> 01:11:59,410
<font color="#CCCCCC">okay so we're doing kind</font><font color="#E5E5E5"> of the day zero</font>

1547
01:11:57,760 --> 01:12:01,330
configuration of getting<font color="#E5E5E5"> that policy</font>

1548
01:11:59,410 --> 01:12:04,210
<font color="#E5E5E5">before we actually start configuring any</font>

1549
01:12:01,330 --> 01:12:06,550
peers<font color="#CCCCCC"> the second piece is</font><font color="#E5E5E5"> going to be</font>

1550
01:12:04,210 --> 01:12:08,680
enabling telemetry<font color="#E5E5E5"> remember we want to</font>

1551
01:12:06,550 --> 01:12:11,260
get all the<font color="#E5E5E5"> bgp neighbors and we want to</font>

1552
01:12:08,680 --> 01:12:15,910
get the interface state<font color="#E5E5E5"> so what I'm</font>

1553
01:12:11,260 --> 01:12:22,180
gonna do here on the side<font color="#E5E5E5"> I have a very</font>

1554
01:12:15,910 --> 01:12:25,630
<font color="#E5E5E5">small script that is consume consume</font>

1555
01:12:22,180 --> 01:12:28,840
telemetry<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> this is a simple as you</font>

1556
01:12:25,630 --> 01:12:31,270
<font color="#E5E5E5">can get in a Python basically this</font>

1557
01:12:28,840 --> 01:12:35,380
script<font color="#CCCCCC"> acts as a consumer of the</font><font color="#E5E5E5"> Kafka</font>

1558
01:12:31,270 --> 01:12:38,320
bus<font color="#E5E5E5"> on this script</font><font color="#CCCCCC"> goes to Kafka it says</font>

1559
01:12:35,380 --> 01:12:40,570
<font color="#E5E5E5">a any message any telemetry message that</font>

1560
01:12:38,320 --> 01:12:43,090
you<font color="#CCCCCC"> give from the router</font><font color="#E5E5E5"> give it to me</font>

1561
01:12:40,570 --> 01:12:47,080
and this<font color="#CCCCCC"> creep is just going</font><font color="#E5E5E5"> to dump the</font>

1562
01:12:43,090 --> 01:12:49,540
JSON on the screen<font color="#E5E5E5"> okay so this by the</font>

1563
01:12:47,080 --> 01:12:51,730
way is running<font color="#E5E5E5"> on my laptop so the</font>

1564
01:12:49,540 --> 01:12:53,560
router is<font color="#E5E5E5"> someone in the cloud and it's</font>

1565
01:12:51,730 --> 01:12:55,209
gonna be sending messages<font color="#E5E5E5"> to my laptop</font>

1566
01:12:53,560 --> 01:12:56,980
<font color="#E5E5E5">and in my laptop we're gonna hopefully</font>

1567
01:12:55,210 --> 01:12:59,980
<font color="#CCCCCC">we'll get the JSON</font><font color="#E5E5E5"> if every goes</font>

1568
01:12:56,980 --> 01:13:02,259
<font color="#E5E5E5">according to plan we</font><font color="#CCCCCC"> should</font><font color="#E5E5E5"> get the JSON</font>

1569
01:12:59,980 --> 01:13:04,480
messages on the screen<font color="#CCCCCC"> okay so I just</font>

1570
01:13:02,260 --> 01:13:05,740
executed<font color="#CCCCCC"> Mize right now since</font><font color="#E5E5E5"> we don't</font>

1571
01:13:04,480 --> 01:13:08,950
<font color="#E5E5E5">have to let me to configure on the</font>

1572
01:13:05,740 --> 01:13:11,290
router there's no messages<font color="#E5E5E5"> coming at the</font>

1573
01:13:08,950 --> 01:13:13,450
time so we're gonna leave<font color="#E5E5E5"> that screen on</font>

1574
01:13:11,290 --> 01:13:15,670
the side and that<font color="#CCCCCC"> screen is</font><font color="#E5E5E5"> gonna start</font>

1575
01:13:13,450 --> 01:13:20,170
getting populated<font color="#E5E5E5"> once I configure</font>

1576
01:13:15,670 --> 01:13:25,360
telemetry so so let's let's take<font color="#E5E5E5"> a look</font>

1577
01:13:20,170 --> 01:13:28,300
<font color="#CCCCCC">very quickly at the telemetry</font><font color="#E5E5E5"> script so</font>

1578
01:13:25,360 --> 01:13:29,950
again here<font color="#E5E5E5"> if you review this if you're</font>

1579
01:13:28,300 --> 01:13:32,410
<font color="#E5E5E5">interested in you review this later</font>

1580
01:13:29,950 --> 01:13:33,670
these basically<font color="#E5E5E5"> the snippets that I put</font>

1581
01:13:32,410 --> 01:13:36,820
<font color="#E5E5E5">right for Mike</font>

1582
01:13:33,670 --> 01:13:38,530
raishin<font color="#CCCCCC"> where i defined</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> sensor</font>

1583
01:13:36,820 --> 01:13:40,870
<font color="#E5E5E5">pads</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna tell the</font><font color="#CCCCCC"> router I'm</font>

1584
01:13:38,530 --> 01:13:43,509
interested in interface counters or

1585
01:13:40,870 --> 01:13:46,150
interface<font color="#E5E5E5"> state and I'm interested</font><font color="#CCCCCC"> in</font>

1586
01:13:43,510 --> 01:13:50,710
<font color="#E5E5E5">bgp neighbor state okay here's what I</font>

1587
01:13:46,150 --> 01:13:57,160
defined the pores<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the in the</font>

1588
01:13:50,710 --> 01:14:11,460
<font color="#E5E5E5">destination that</font><font color="#CCCCCC"> I want let me</font><font color="#E5E5E5"> get my IP</font>

1589
01:13:57,160 --> 01:14:14,830
address<font color="#E5E5E5"> so we're gonna run this script</font>

1590
01:14:11,460 --> 01:14:16,540
the script takes two arguments<font color="#CCCCCC"> first the</font>

1591
01:14:14,830 --> 01:14:18,460
node<font color="#E5E5E5"> that acts as a collector</font><font color="#CCCCCC"> for the</font>

1592
01:14:16,540 --> 01:14:22,179
<font color="#E5E5E5">data which</font><font color="#CCCCCC"> is again it's gonna be my</font>

1593
01:14:18,460 --> 01:14:28,630
laptop and and the router we want to

1594
01:14:22,179 --> 01:14:31,330
send this<font color="#CCCCCC"> to</font><font color="#E5E5E5"> okay and I'm</font><font color="#CCCCCC"> gonna also</font>

1595
01:14:28,630 --> 01:14:33,219
<font color="#CCCCCC">enable the minus V flag so we get the</font>

1596
01:14:31,330 --> 01:14:36,580
details of what's being<font color="#E5E5E5"> sent to the</font>

1597
01:14:33,219 --> 01:14:41,620
router<font color="#E5E5E5"> or the router replies with okay</font>

1598
01:14:36,580 --> 01:14:43,150
so<font color="#CCCCCC"> we see here</font><font color="#E5E5E5"> that the script</font><font color="#CCCCCC"> all my</font>

1599
01:14:41,620 --> 01:14:48,510
configuration my open config

1600
01:14:43,150 --> 01:14:51,009
configuration got my open config

1601
01:14:48,510 --> 01:14:52,719
telemetry configuration<font color="#E5E5E5"> got encoded in</font>

1602
01:14:51,010 --> 01:14:54,910
XML we see here from the<font color="#CCCCCC"> namespace that</font>

1603
01:14:52,719 --> 01:14:59,219
<font color="#CCCCCC">is the open config we see the</font>

1604
01:14:54,910 --> 01:15:03,820
destination group<font color="#E5E5E5"> with one destination</font>

1605
01:14:59,219 --> 01:15:07,530
<font color="#CCCCCC">we see the sensor groups with interface</font>

1606
01:15:03,820 --> 01:15:14,519
and neighbors<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so that's the</font><font color="#E5E5E5"> usual</font>

1607
01:15:07,530 --> 01:15:18,910
useful<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> here's where the emotion the</font>

1608
01:15:14,520 --> 01:15:21,640
suspense<font color="#E5E5E5"> comes is the</font><font color="#CCCCCC"> router gonna</font>

1609
01:15:18,910 --> 01:15:23,489
<font color="#CCCCCC">respond there you go</font><font color="#E5E5E5"> so we started</font>

1610
01:15:21,640 --> 01:15:29,050
getting<font color="#E5E5E5"> the data back</font><font color="#CCCCCC"> from the router</font>

1611
01:15:23,489 --> 01:15:32,320
<font color="#CCCCCC">okay we subscribed for interface and bgp</font>

1612
01:15:29,050 --> 01:15:37,270
<font color="#E5E5E5">and it seems that we get an interface</font>

1613
01:15:32,320 --> 01:15:42,759
information but if we scroll here<font color="#CCCCCC"> but we</font>

1614
01:15:37,270 --> 01:15:45,670
only seem to<font color="#E5E5E5"> see interfaces okay we</font>

1615
01:15:42,760 --> 01:15:47,380
don't<font color="#E5E5E5"> seem to</font><font color="#CCCCCC"> see any BGP any guesses</font>

1616
01:15:45,670 --> 01:15:51,760
so why the writer is not<font color="#CCCCCC"> a swimming</font>

1617
01:15:47,380 --> 01:15:53,890
me and a<font color="#E5E5E5"> bgp data</font><font color="#CCCCCC"> the GP hasn't it</font>

1618
01:15:51,760 --> 01:15:55,650
<font color="#CCCCCC">configure</font><font color="#E5E5E5"> yet</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> you get someone is</font>

1619
01:15:53,890 --> 01:16:01,420
someone<font color="#E5E5E5"> is paying attention</font><font color="#CCCCCC"> awesome</font>

1620
01:15:55,650 --> 01:16:03,429
<font color="#E5E5E5">alright so right now we have</font><font color="#CCCCCC"> kind of the</font>

1621
01:16:01,420 --> 01:16:05,080
base<font color="#CCCCCC"> that they</font><font color="#E5E5E5"> zero configuration which</font>

1622
01:16:03,430 --> 01:16:07,420
was getting<font color="#E5E5E5"> the routing policy and get</font>

1623
01:16:05,080 --> 01:16:12,580
<font color="#E5E5E5">telemetry</font><font color="#CCCCCC"> at this point we're ready</font><font color="#E5E5E5"> to</font>

1624
01:16:07,420 --> 01:16:15,640
configure<font color="#E5E5E5"> our peer right so I try</font><font color="#CCCCCC"> to</font>

1625
01:16:12,580 --> 01:16:17,740
<font color="#E5E5E5">make the demo kind of modular and I</font>

1626
01:16:15,640 --> 01:16:19,690
created the<font color="#E5E5E5"> validation step remember</font>

1627
01:16:17,740 --> 01:16:20,950
<font color="#E5E5E5">when we provision the peer we want to</font>

1628
01:16:19,690 --> 01:16:23,769
validate<font color="#E5E5E5"> the interface</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna</font>

1629
01:16:20,950 --> 01:16:25,809
validate<font color="#E5E5E5"> the neighbor so the validation</font>

1630
01:16:23,770 --> 01:16:28,210
I made it as a separate<font color="#E5E5E5"> script also so</font>

1631
01:16:25,810 --> 01:16:34,600
I'm gonna I'm gonna show you what the

1632
01:16:28,210 --> 01:16:36,940
<font color="#E5E5E5">script does</font><font color="#CCCCCC"> actually let me see</font>

1633
01:16:34,600 --> 01:16:43,360
we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> try to validate at this</font>

1634
01:16:36,940 --> 01:16:45,429
point more we're going<font color="#E5E5E5"> to try to</font>

1635
01:16:43,360 --> 01:16:49,799
validate<font color="#E5E5E5"> the interface is</font><font color="#CCCCCC"> the interface</font>

1636
01:16:45,430 --> 01:16:49,800
up or not not<font color="#E5E5E5"> validate</font>

1637
01:16:50,350 --> 01:16:59,380
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so we on ASB are one we want to</font>

1638
01:16:54,850 --> 01:17:05,080
validate whether that<font color="#E5E5E5"> interface is up</font>

1639
01:16:59,380 --> 01:17:08,860
<font color="#E5E5E5">and we're gonna use the craft message</font>

1640
01:17:05,080 --> 01:17:11,170
<font color="#E5E5E5">bus naughty naughty</font><font color="#CCCCCC"> to write and I'm</font>

1641
01:17:08,860 --> 01:17:14,130
<font color="#E5E5E5">gonna use - we just to show some login</font>

1642
01:17:11,170 --> 01:17:17,520
and see what is<font color="#E5E5E5"> doing this script</font>

1643
01:17:14,130 --> 01:17:20,110
basically connects to the Kafka bus and

1644
01:17:17,520 --> 01:17:22,450
it's<font color="#CCCCCC"> gonna wait for that interface to</font>

1645
01:17:20,110 --> 01:17:24,580
come up that's logic that<font color="#E5E5E5"> I've wrote</font>

1646
01:17:22,450 --> 01:17:26,200
it's gonna write it's gonna wait for

1647
01:17:24,580 --> 01:17:27,940
messages to the Catawbas that are coming

1648
01:17:26,200 --> 01:17:31,120
every<font color="#CCCCCC"> 10 seconds and</font><font color="#E5E5E5"> it's going to wait</font>

1649
01:17:27,940 --> 01:17:35,019
a maximum of<font color="#E5E5E5"> 30 seconds for any evidence</font>

1650
01:17:31,120 --> 01:17:37,660
<font color="#E5E5E5">that</font><font color="#CCCCCC"> the interface came up ok so right</font>

1651
01:17:35,020 --> 01:17:42,150
now consuming messages those messages<font color="#CCCCCC"> if</font>

1652
01:17:37,660 --> 01:17:49,900
we if<font color="#CCCCCC"> we look</font><font color="#E5E5E5"> here those messages</font>

1653
01:17:42,150 --> 01:17:51,700
<font color="#E5E5E5">continue to trickle in and</font><font color="#CCCCCC"> at some point</font>

1654
01:17:49,900 --> 01:17:54,370
we're gonna<font color="#CCCCCC"> get either true or false</font>

1655
01:17:51,700 --> 01:17:57,599
<font color="#CCCCCC">okay so</font><font color="#E5E5E5"> we so here a false so basically</font>

1656
01:17:54,370 --> 01:17:59,620
we timed out waiting for<font color="#CCCCCC"> 30 seconds</font>

1657
01:17:57,600 --> 01:18:01,750
obviously the interface is down because

1658
01:17:59,620 --> 01:18:08,440
<font color="#CCCCCC">he hasn't</font><font color="#E5E5E5"> been configured yet</font>

1659
01:18:01,750 --> 01:18:09,970
so the script that deploys reads the

1660
01:18:08,440 --> 01:18:12,610
JSON file configure<font color="#E5E5E5"> the interface</font>

1661
01:18:09,970 --> 01:18:14,320
validate the interface configures<font color="#CCCCCC"> BGP</font>

1662
01:18:12,610 --> 01:18:16,630
and<font color="#E5E5E5"> validates BGP is called deploy</font>

1663
01:18:14,320 --> 01:18:18,849
<font color="#E5E5E5">appear and I'm not gonna bore you</font><font color="#CCCCCC"> with</font>

1664
01:18:16,630 --> 01:18:20,800
<font color="#CCCCCC">all the details but</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> just wanted</font><font color="#E5E5E5"> to</font>

1665
01:18:18,850 --> 01:18:23,410
mention it just<font color="#E5E5E5"> in</font><font color="#CCCCCC"> case you examine</font><font color="#E5E5E5"> this</font>

1666
01:18:20,800 --> 01:18:26,350
later<font color="#E5E5E5"> basically this is kind of an uber</font>

1667
01:18:23,410 --> 01:18:29,260
<font color="#E5E5E5">script</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> reuses these over</font><font color="#E5E5E5"> for</font>

1668
01:18:26,350 --> 01:18:32,380
scripts<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so what I did</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> now was</font>

1669
01:18:29,260 --> 01:18:34,180
<font color="#E5E5E5">just to run this script in isolation</font><font color="#CCCCCC"> ok</font>

1670
01:18:32,380 --> 01:18:36,820
just<font color="#E5E5E5"> to show you the</font><font color="#CCCCCC"> logic of the</font>

1671
01:18:34,180 --> 01:18:39,850
<font color="#E5E5E5">validation okay so let's let's run this</font>

1672
01:18:36,820 --> 01:18:43,059
this guy<font color="#E5E5E5"> and I'm gonna do two things I'm</font>

1673
01:18:39,850 --> 01:18:49,030
<font color="#CCCCCC">gonna time the execution for the extra</font>

1674
01:18:43,060 --> 01:18:52,060
<font color="#E5E5E5">dramatic effect</font><font color="#CCCCCC"> and and we're going to</font>

1675
01:18:49,030 --> 01:18:53,889
<font color="#CCCCCC">ask</font><font color="#E5E5E5"> for logging let me show you</font>

1676
01:18:52,060 --> 01:18:56,170
something first<font color="#E5E5E5"> remember all the</font>

1677
01:18:53,890 --> 01:18:58,960
configuration is in this JSON JSON files

1678
01:18:56,170 --> 01:19:00,580
<font color="#CCCCCC">so</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> cannot deploy</font><font color="#E5E5E5"> from there and I'm</font>

1679
01:18:58,960 --> 01:19:03,630
<font color="#E5E5E5">gonna use</font><font color="#CCCCCC"> minus V because I want to</font><font color="#E5E5E5"> see</font>

1680
01:19:00,580 --> 01:19:06,390
all the<font color="#CCCCCC"> logging of what is happening ok</font>

1681
01:19:03,630 --> 01:19:10,090
so the<font color="#E5E5E5"> first thing that the scripted</font>

1682
01:19:06,390 --> 01:19:12,340
<font color="#E5E5E5">executing fast the first thing that the</font>

1683
01:19:10,090 --> 01:19:15,640
script did was to read the JSON file

1684
01:19:12,340 --> 01:19:19,270
<font color="#CCCCCC">write this</font><font color="#E5E5E5"> JSON file it connected to</font><font color="#CCCCCC"> the</font>

1685
01:19:15,640 --> 01:19:23,170
Kafka<font color="#CCCCCC"> Baz and it sent</font><font color="#E5E5E5"> the interface</font>

1686
01:19:19,270 --> 01:19:27,190
configuration<font color="#CCCCCC"> ok this is the XML</font>

1687
01:19:23,170 --> 01:19:30,700
<font color="#E5E5E5">representation of the of the interface</font>

1688
01:19:27,190 --> 01:19:31,839
configuration<font color="#E5E5E5"> it waited for confirmation</font>

1689
01:19:30,700 --> 01:19:34,630
<font color="#E5E5E5">this</font><font color="#CCCCCC"> okay</font>

1690
01:19:31,840 --> 01:19:37,750
came back<font color="#CCCCCC"> because it means the script</font>

1691
01:19:34,630 --> 01:19:39,460
<font color="#E5E5E5">the validation script was able within 30</font>

1692
01:19:37,750 --> 01:19:41,710
seconds was able to<font color="#E5E5E5"> get at least one</font>

1693
01:19:39,460 --> 01:19:44,650
<font color="#E5E5E5">message from the Kafka box indicated</font>

1694
01:19:41,710 --> 01:19:47,110
that this interface<font color="#E5E5E5"> came up</font><font color="#CCCCCC"> OK at that</font>

1695
01:19:44,650 --> 01:19:51,339
<font color="#CCCCCC">point it moved to</font><font color="#E5E5E5"> the configuration</font><font color="#CCCCCC"> of</font>

1696
01:19:47,110 --> 01:19:52,839
<font color="#CCCCCC">bgp and this is my BGP object that we</font>

1697
01:19:51,340 --> 01:19:55,110
<font color="#CCCCCC">solved</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> for this is</font><font color="#E5E5E5"> the global</font>

1698
01:19:52,840 --> 01:19:57,070
configuration this<font color="#E5E5E5"> is my neighbor</font>

1699
01:19:55,110 --> 01:19:57,849
<font color="#E5E5E5">configuration and this is the peer group</font>

1700
01:19:57,070 --> 01:20:00,130
<font color="#CCCCCC">ok</font>

1701
01:19:57,850 --> 01:20:04,300
so it was sent to<font color="#E5E5E5"> the router and it</font>

1702
01:20:00,130 --> 01:20:08,770
waited for the Kafka bus<font color="#CCCCCC"> to indicate</font>

1703
01:20:04,300 --> 01:20:10,510
that that<font color="#E5E5E5"> neighbor is up and printed</font><font color="#CCCCCC"> ok</font>

1704
01:20:08,770 --> 01:20:13,450
when I was<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> get the message</font><font color="#CCCCCC"> and</font>

1705
01:20:10,510 --> 01:20:14,969
the execution roughly concluded in 32

1706
01:20:13,450 --> 01:20:16,559
seconds<font color="#CCCCCC"> so in</font>

1707
01:20:14,969 --> 01:20:18,300
<font color="#CCCCCC">thirty</font><font color="#E5E5E5"> Seconds it did the interface</font>

1708
01:20:16,559 --> 01:20:20,909
configuration<font color="#E5E5E5"> waited for the interface</font>

1709
01:20:18,300 --> 01:20:22,440
to come<font color="#E5E5E5"> up got the message without</font>

1710
01:20:20,909 --> 01:20:24,780
<font color="#E5E5E5">pulling the router got the message from</font>

1711
01:20:22,440 --> 01:20:27,388
Kafka when<font color="#CCCCCC"> he</font><font color="#E5E5E5"> get the message</font><font color="#CCCCCC"> from Kaka</font>

1712
01:20:24,780 --> 01:20:29,670
from the message bars<font color="#CCCCCC"> pushed the BGP</font>

1713
01:20:27,389 --> 01:20:33,570
configuration and waited for<font color="#E5E5E5"> the state</font>

1714
01:20:29,670 --> 01:20:36,119
to<font color="#E5E5E5"> come up and got</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> okay I'm</font><font color="#CCCCCC"> gonna</font>

1715
01:20:33,570 --> 01:20:37,440
<font color="#E5E5E5">run it one</font><font color="#CCCCCC"> more time so anybody well</font>

1716
01:20:36,119 --> 01:20:43,289
guess what<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be different</font>

1717
01:20:37,440 --> 01:20:45,749
this time the execution time is<font color="#E5E5E5"> going to</font>

1718
01:20:43,289 --> 01:20:48,749
<font color="#E5E5E5">be</font><font color="#CCCCCC"> hopefully if everything goes fine</font>

1719
01:20:45,749 --> 01:20:50,039
<font color="#CCCCCC">should be much faster why because the</font>

1720
01:20:48,749 --> 01:20:52,739
validation is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be way faster</font>

1721
01:20:50,039 --> 01:20:56,219
before<font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to wait for the interface</font>

1722
01:20:52,739 --> 01:20:58,409
to come up and for the next<font color="#E5E5E5"> streaming</font>

1723
01:20:56,219 --> 01:21:00,389
message or<font color="#E5E5E5"> Kafka message to indicate</font>

1724
01:20:58,409 --> 01:21:02,249
<font color="#CCCCCC">that in your face came up</font><font color="#E5E5E5"> also we have</font>

1725
01:21:00,389 --> 01:21:04,920
to wait for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> BGP state to come up</font>

1726
01:21:02,249 --> 01:21:07,409
right<font color="#E5E5E5"> and for that to be sent</font><font color="#CCCCCC"> via</font>

1727
01:21:04,920 --> 01:21:10,739
telemetry and<font color="#E5E5E5"> for the Kafka message to</font>

1728
01:21:07,409 --> 01:21:12,960
come<font color="#E5E5E5"> to me before</font><font color="#CCCCCC"> I could report that</font>

1729
01:21:10,739 --> 01:21:15,089
the<font color="#E5E5E5"> deployment was successful</font><font color="#CCCCCC"> now</font>

1730
01:21:12,960 --> 01:21:16,170
because the<font color="#E5E5E5"> state the sessions are</font>

1731
01:21:15,090 --> 01:21:17,880
already<font color="#E5E5E5"> there basically</font><font color="#CCCCCC"> i'm</font>

1732
01:21:16,170 --> 01:21:20,489
reconfiguring something that is already

1733
01:21:17,880 --> 01:21:22,590
<font color="#CCCCCC">configured</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> i just need to wait for</font>

1734
01:21:20,489 --> 01:21:24,839
the next telemetry message the next

1735
01:21:22,590 --> 01:21:26,789
<font color="#E5E5E5">Kafka message so hopefully it should be</font>

1736
01:21:24,840 --> 01:21:28,289
much faster<font color="#CCCCCC"> and I'm gonna run it</font><font color="#E5E5E5"> without</font>

1737
01:21:26,789 --> 01:21:38,518
the<font color="#E5E5E5"> D</font><font color="#CCCCCC"> box because I think you've seen</font>

1738
01:21:28,289 --> 01:21:41,429
<font color="#CCCCCC">enough D box</font><font color="#E5E5E5"> already</font><font color="#CCCCCC"> ok so so we see</font>

1739
01:21:38,519 --> 01:21:43,739
that<font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> taking the 31 seconds in</font>

1740
01:21:41,429 --> 01:21:50,400
this case just just<font color="#E5E5E5"> to get much faster</font>

1741
01:21:43,739 --> 01:21:58,320
than<font color="#CCCCCC"> 11 seconds any any questions</font><font color="#E5E5E5"> on</font>

1742
01:21:50,400 --> 01:22:01,110
that<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> basically what</font><font color="#CCCCCC"> we just</font><font color="#E5E5E5"> saw</font>

1743
01:21:58,320 --> 01:22:04,969
these this was<font color="#CCCCCC"> a</font><font color="#E5E5E5"> workflow going from the</font>

1744
01:22:01,110 --> 01:22:07,679
<font color="#CCCCCC">JSON file to configure</font><font color="#E5E5E5"> the interface to</font>

1745
01:22:04,969 --> 01:22:11,880
configuring<font color="#CCCCCC"> BGP and be able</font><font color="#E5E5E5"> to validate</font>

1746
01:22:07,679 --> 01:22:15,179
<font color="#E5E5E5">all that so the details of what were the</font>

1747
01:22:11,880 --> 01:22:18,229
ingredients<font color="#E5E5E5"> that went into this</font><font color="#CCCCCC"> I'm</font>

1748
01:22:15,179 --> 01:22:20,820
putting here<font color="#E5E5E5"> the details of the models</font>

1749
01:22:18,229 --> 01:22:22,469
<font color="#E5E5E5">as I mentioned the very beginning of the</font>

1750
01:22:20,820 --> 01:22:23,880
<font color="#E5E5E5">presentation the intent here wasn't</font>

1751
01:22:22,469 --> 01:22:25,499
<font color="#E5E5E5">necessarily to show you the latest and</font>

1752
01:22:23,880 --> 01:22:27,630
<font color="#CCCCCC">greatest</font><font color="#E5E5E5"> models but show you what is</font>

1753
01:22:25,499 --> 01:22:28,420
possible<font color="#CCCCCC"> today with actually</font><font color="#E5E5E5"> this is a</font>

1754
01:22:27,630 --> 01:22:31,480
real implement

1755
01:22:28,420 --> 01:22:34,810
<font color="#E5E5E5">on a real release product everything</font>

1756
01:22:31,480 --> 01:22:36,870
that is here<font color="#CCCCCC"> it's implemented on on or</font>

1757
01:22:34,810 --> 01:22:40,060
can be implemented<font color="#E5E5E5"> on production</font>

1758
01:22:36,870 --> 01:22:43,449
software<font color="#CCCCCC"> okay so those are the details</font>

1759
01:22:40,060 --> 01:22:45,010
of the versions of<font color="#E5E5E5"> the four models that</font>

1760
01:22:43,449 --> 01:22:48,370
we<font color="#CCCCCC"> use the routing policy telemetry</font>

1761
01:22:45,010 --> 01:22:50,290
interfaces<font color="#E5E5E5"> and BGP the version of the of</font>

1762
01:22:48,370 --> 01:22:53,230
the API so<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> decay that we use</font>

1763
01:22:50,290 --> 01:22:55,080
the versions of pipeline<font color="#E5E5E5"> Afghan</font>

1764
01:22:53,230 --> 01:22:57,160
zookeeper<font color="#E5E5E5"> all this stuff is</font>

1765
01:22:55,080 --> 01:22:59,350
<font color="#E5E5E5">pre-configured prepackaged on the</font>

1766
01:22:57,160 --> 01:23:01,690
<font color="#E5E5E5">vagrant box um I'm gonna put the vagrant</font>

1767
01:22:59,350 --> 01:23:03,190
box<font color="#E5E5E5"> on that repo at the top I have to</font>

1768
01:23:01,690 --> 01:23:04,210
push<font color="#E5E5E5"> it right after this I'll say</font>

1769
01:23:03,190 --> 01:23:07,178
<font color="#E5E5E5">probably by the end</font><font color="#CCCCCC"> of the day you</font>

1770
01:23:04,210 --> 01:23:09,100
should see a commit on<font color="#CCCCCC"> that repo</font><font color="#E5E5E5"> with</font>

1771
01:23:07,179 --> 01:23:14,969
all the details of<font color="#E5E5E5"> the vagrant</font><font color="#CCCCCC"> of the</font>

1772
01:23:09,100 --> 01:23:18,940
<font color="#CCCCCC">Virgin Box so summary</font>

1773
01:23:14,969 --> 01:23:21,850
<font color="#CCCCCC">hopefully this presentation</font><font color="#E5E5E5"> give you a</font>

1774
01:23:18,940 --> 01:23:23,830
quick<font color="#CCCCCC"> overview of kind of the next</font><font color="#E5E5E5"> level</font>

1775
01:23:21,850 --> 01:23:25,510
<font color="#E5E5E5">of detail if you ever attended just a</font>

1776
01:23:23,830 --> 01:23:27,790
<font color="#E5E5E5">high-level introduction or become fake I</font>

1777
01:23:25,510 --> 01:23:30,460
<font color="#E5E5E5">will give you a close</font><font color="#CCCCCC"> up to our first</font>

1778
01:23:27,790 --> 01:23:32,949
<font color="#E5E5E5">set of models kind of understand at a</font>

1779
01:23:30,460 --> 01:23:35,260
very<font color="#CCCCCC"> high level the design patterns that</font>

1780
01:23:32,949 --> 01:23:38,349
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> gonna see in</font><font color="#CCCCCC"> the models</font><font color="#E5E5E5"> we saw</font>

1781
01:23:35,260 --> 01:23:41,050
some<font color="#E5E5E5"> of the structure of</font><font color="#CCCCCC"> 40 models</font><font color="#E5E5E5"> BGP</font>

1782
01:23:38,350 --> 01:23:44,050
routing policies interfaces<font color="#E5E5E5"> and</font>

1783
01:23:41,050 --> 01:23:45,699
telemetry<font color="#CCCCCC"> and we saw that those</font><font color="#E5E5E5"> models</font>

1784
01:23:44,050 --> 01:23:52,890
actually<font color="#E5E5E5"> you can start implementing some</font>

1785
01:23:45,699 --> 01:24:00,690
<font color="#CCCCCC">real-life some</font><font color="#E5E5E5"> real-world use cases any</font>

1786
01:23:52,890 --> 01:24:03,640
questions Jeff leave us<font color="#E5E5E5"> on a high note</font>

1787
01:24:00,690 --> 01:24:06,219
question to<font color="#CCCCCC"> either you are unease so</font>

1788
01:24:03,640 --> 01:24:08,800
very right concern<font color="#E5E5E5"> how do I make</font><font color="#CCCCCC"> sure my</font>

1789
01:24:06,219 --> 01:24:11,380
intended configuration is not going to

1790
01:24:08,800 --> 01:24:27,489
break<font color="#E5E5E5"> it's going to be working as</font>

1791
01:24:11,380 --> 01:24:28,960
intended right so<font color="#CCCCCC"> went back to ATF so an</font>

1792
01:24:27,489 --> 01:24:31,299
ATF side of things<font color="#E5E5E5"> you could</font><font color="#CCCCCC"> use</font>

1793
01:24:28,960 --> 01:24:34,420
different<font color="#E5E5E5"> data stores and user-pc</font>

1794
01:24:31,300 --> 01:24:36,640
structures and filters to<font color="#CCCCCC"> purchase</font><font color="#E5E5E5"> data</font>

1795
01:24:34,420 --> 01:24:41,889
and compare one<font color="#CCCCCC"> to another how</font><font color="#E5E5E5"> would we</font>

1796
01:24:36,640 --> 01:24:45,099
do<font color="#E5E5E5"> it here</font><font color="#CCCCCC"> I my validation</font><font color="#E5E5E5"> for this demo</font>

1797
01:24:41,889 --> 01:24:47,110
was<font color="#CCCCCC"> Astra Byul as it could be</font><font color="#E5E5E5"> I'm just</font>

1798
01:24:45,099 --> 01:24:49,689
<font color="#E5E5E5">looking for this particular</font><font color="#CCCCCC"> feel and is</font>

1799
01:24:47,110 --> 01:24:51,549
that even a semantics<font color="#CCCCCC"> against data model</font>

1800
01:24:49,689 --> 01:24:53,949
you don't validate<font color="#CCCCCC"> Intel</font><font color="#E5E5E5"> for instance</font>

1801
01:24:51,550 --> 01:24:56,199
something<font color="#E5E5E5"> that I didn't do was to</font>

1802
01:24:53,949 --> 01:25:01,539
validate<font color="#CCCCCC"> for instance that the applied</font>

1803
01:24:56,199 --> 01:25:03,789
config was actually so as I said<font color="#E5E5E5"> before</font>

1804
01:25:01,539 --> 01:25:05,919
this is<font color="#E5E5E5"> not meant</font><font color="#CCCCCC"> to be the basis for</font>

1805
01:25:03,789 --> 01:25:08,679
animation frame<font color="#E5E5E5"> or in your company so</font>

1806
01:25:05,919 --> 01:25:10,809
<font color="#E5E5E5">don't go back saying because you are</font>

1807
01:25:08,679 --> 01:25:14,219
taking step<font color="#CCCCCC"> 3 you're configuring</font><font color="#E5E5E5"> stuff</font>

1808
01:25:10,809 --> 01:25:16,719
and assume it's working it might be not

1809
01:25:14,219 --> 01:25:21,090
yeah so definitely<font color="#E5E5E5"> validate there's more</font>

1810
01:25:16,719 --> 01:25:23,619
to to validating<font color="#E5E5E5"> in real life yes</font><font color="#CCCCCC"> a</font>

1811
01:25:21,090 --> 01:25:26,469
couple questions maybe<font color="#E5E5E5"> maybe more for</font>

1812
01:25:23,619 --> 01:25:27,909
<font color="#CCCCCC">nieces maybe I'm here I'm just curious</font>

1813
01:25:26,469 --> 01:25:29,889
<font color="#E5E5E5">one</font>

1814
01:25:27,909 --> 01:25:31,388
if there was any<font color="#E5E5E5"> thought given to moving</font>

1815
01:25:29,889 --> 01:25:33,300
the state to<font color="#E5E5E5"> its own tree instead</font><font color="#CCCCCC"> of</font>

1816
01:25:31,389 --> 01:25:35,590
having a mix in with sort of the config

1817
01:25:33,300 --> 01:25:38,289
so that you know<font color="#E5E5E5"> right now if you look</font>

1818
01:25:35,590 --> 01:25:39,999
<font color="#E5E5E5">at the config tree you see you know the</font>

1819
01:25:38,289 --> 01:25:41,349
config node and the state is<font color="#CCCCCC"> right next</font>

1820
01:25:39,999 --> 01:25:43,539
<font color="#CCCCCC">to it</font>

1821
01:25:41,349 --> 01:25:45,459
<font color="#E5E5E5">so for storing things</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> database and</font>

1822
01:25:43,539 --> 01:25:46,268
stuff that's<font color="#E5E5E5"> I don't know it makes some</font>

1823
01:25:45,459 --> 01:25:48,179
<font color="#CCCCCC">of the implementations a little</font>

1824
01:25:46,269 --> 01:25:50,320
interesting and then the other piece is

1825
01:25:48,179 --> 01:25:51,550
regarding the<font color="#E5E5E5"> telemetry stuff there</font>

1826
01:25:50,320 --> 01:25:53,049
doesn't seem to be<font color="#E5E5E5"> any documentation at</font>

1827
01:25:51,550 --> 01:25:54,820
all about<font color="#E5E5E5"> the telemetry out there at</font>

1828
01:25:53,050 --> 01:25:56,800
least<font color="#E5E5E5"> that I could find it's great to</font>

1829
01:25:54,820 --> 01:25:57,999
<font color="#E5E5E5">see</font><font color="#CCCCCC"> it here</font><font color="#E5E5E5"> and you know how its</font>

1830
01:25:56,800 --> 01:25:59,260
configured and what it's supposed<font color="#CCCCCC"> to do</font>

1831
01:25:57,999 --> 01:26:01,059
<font color="#E5E5E5">and all</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> just wonder if</font>

1832
01:25:59,260 --> 01:26:06,429
there's anything<font color="#E5E5E5"> outside the actual yank</font>

1833
01:26:01,059 --> 01:26:08,709
models itself from the so on the<font color="#CCCCCC"> on the</font>

1834
01:26:06,429 --> 01:26:10,209
first<font color="#E5E5E5"> question regarding the structure</font>

1835
01:26:08,709 --> 01:26:12,938
<font color="#E5E5E5">of the model and</font><font color="#CCCCCC"> late prom leonie's</font>

1836
01:26:10,209 --> 01:26:15,610
<font color="#CCCCCC">talked about the trade-offs</font><font color="#E5E5E5"> and the why</font>

1837
01:26:12,939 --> 01:26:17,949
the logic behind the quote unquote

1838
01:26:15,610 --> 01:26:20,860
madness<font color="#E5E5E5"> I'm sure there's a reason for</font>

1839
01:26:17,949 --> 01:26:23,619
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> a good</font><font color="#E5E5E5"> reason on the second</font>

1840
01:26:20,860 --> 01:26:25,630
one<font color="#E5E5E5"> telemetry I mean models are self</font>

1841
01:26:23,619 --> 01:26:27,459
documented they for instance<font color="#CCCCCC"> the API is</font>

1842
01:26:25,630 --> 01:26:29,979
<font color="#E5E5E5">generated the documentation based on the</font>

1843
01:26:27,459 --> 01:26:32,169
model but on addition to that I can

1844
01:26:29,979 --> 01:26:34,059
speak for Cisco<font color="#E5E5E5"> but I'm sure</font><font color="#CCCCCC"> for other</font>

1845
01:26:32,169 --> 01:26:35,648
vendors there's functionality

1846
01:26:34,059 --> 01:26:38,229
documentation we<font color="#CCCCCC"> have documentation</font><font color="#E5E5E5"> and</font>

1847
01:26:35,649 --> 01:26:42,550
<font color="#E5E5E5">we have a lot of blogs and actually</font>

1848
01:26:38,229 --> 01:26:44,439
tutorials on<font color="#E5E5E5"> telemetry</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> X</font><font color="#CCCCCC"> our Docs is</font>

1849
01:26:42,550 --> 01:26:45,909
one that we use<font color="#CCCCCC"> if you haven't used you</font>

1850
01:26:44,439 --> 01:26:47,769
can<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> Google that extra Docs</font>

1851
01:26:45,909 --> 01:26:54,320
probably has at least seven or eight

1852
01:26:47,769 --> 01:26:57,290
tutorials<font color="#CCCCCC"> finance</font>

1853
01:26:54,320 --> 01:27:00,259
just question<font color="#E5E5E5"> so the notion of being</font>

1854
01:26:57,290 --> 01:27:02,930
able to validate<font color="#E5E5E5"> the intended versus</font>

1855
01:27:00,260 --> 01:27:04,550
<font color="#E5E5E5">applied configuration is really the</font>

1856
01:27:02,930 --> 01:27:06,440
intention<font color="#E5E5E5"> of that model structure is to</font>

1857
01:27:04,550 --> 01:27:08,300
allow you<font color="#E5E5E5"> to basically push your</font>

1858
01:27:06,440 --> 01:27:11,210
intended configuration<font color="#E5E5E5"> you can read</font><font color="#CCCCCC"> back</font>

1859
01:27:08,300 --> 01:27:12,830
configuration data<font color="#E5E5E5"> either using a get or</font>

1860
01:27:11,210 --> 01:27:14,090
via streaming telemetry so you can

1861
01:27:12,830 --> 01:27:17,059
actually send back in the<font color="#E5E5E5"> telemetry</font>

1862
01:27:14,090 --> 01:27:18,920
stream both config<font color="#E5E5E5"> and state data right</font>

1863
01:27:17,060 --> 01:27:21,470
and<font color="#CCCCCC"> then the idea</font><font color="#E5E5E5"> is that you get back</font>

1864
01:27:18,920 --> 01:27:23,390
config data the<font color="#E5E5E5"> Intendant config you can</font>

1865
01:27:21,470 --> 01:27:25,550
also get<font color="#E5E5E5"> back to your ply data and you</font>

1866
01:27:23,390 --> 01:27:27,380
<font color="#E5E5E5">can compare on systems where you</font><font color="#CCCCCC"> have</font>

1867
01:27:25,550 --> 01:27:29,990
<font color="#E5E5E5">sort of full transactionality those</font>

1868
01:27:27,380 --> 01:27:31,670
things should generally be<font color="#CCCCCC"> the same but</font>

1869
01:27:29,990 --> 01:27:33,260
we wanted<font color="#E5E5E5"> to allow for systems where</font><font color="#CCCCCC"> you</font>

1870
01:27:31,670 --> 01:27:35,360
<font color="#E5E5E5">have some form of eventual consistency</font>

1871
01:27:33,260 --> 01:27:36,950
with lots of distributed<font color="#CCCCCC"> systems do that</font>

1872
01:27:35,360 --> 01:27:39,170
we use in software systems<font color="#CCCCCC"> that run</font>

1873
01:27:36,950 --> 01:27:40,790
networks now so the idea is<font color="#CCCCCC"> that you can</font>

1874
01:27:39,170 --> 01:27:42,920
<font color="#E5E5E5">actually see the difference and see the</font>

1875
01:27:40,790 --> 01:27:44,390
<font color="#E5E5E5">convergence also so you can not</font><font color="#CCCCCC"> only</font>

1876
01:27:42,920 --> 01:27:45,920
check that what you pushed as intended

1877
01:27:44,390 --> 01:27:48,020
config was in fact received by the

1878
01:27:45,920 --> 01:27:49,940
device as<font color="#E5E5E5"> intended config I could get</font>

1879
01:27:48,020 --> 01:27:53,120
config call<font color="#E5E5E5"> but you can also see the</font>

1880
01:27:49,940 --> 01:27:57,490
applied<font color="#E5E5E5"> state in the state telemetry</font>

1881
01:27:53,120 --> 01:28:00,250
stream now to answer Kevin's question<font color="#E5E5E5"> on</font>

1882
01:27:57,490 --> 01:28:02,570
<font color="#E5E5E5">structure of the</font><font color="#CCCCCC"> state versus config</font><font color="#E5E5E5"> the</font>

1883
01:28:00,250 --> 01:28:04,670
there's several documents<font color="#CCCCCC"> written about</font>

1884
01:28:02,570 --> 01:28:06,590
the rationale for<font color="#CCCCCC"> why we structured that</font>

1885
01:28:04,670 --> 01:28:09,740
models with config<font color="#CCCCCC"> and state containers</font>

1886
01:28:06,590 --> 01:28:12,590
together<font color="#CCCCCC"> the main reason was to allow a</font>

1887
01:28:09,740 --> 01:28:14,240
<font color="#CCCCCC">very simple way</font><font color="#E5E5E5"> almost just a purely</font>

1888
01:28:12,590 --> 01:28:16,400
programmatic way to be able<font color="#CCCCCC"> to relate</font>

1889
01:28:14,240 --> 01:28:18,320
the<font color="#CCCCCC"> state</font><font color="#E5E5E5"> and configuration data so to</font>

1890
01:28:16,400 --> 01:28:20,330
do exactly what Jeff<font color="#CCCCCC"> was asking about</font>

1891
01:28:18,320 --> 01:28:22,009
<font color="#E5E5E5">which is to</font><font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> say is my</font>

1892
01:28:20,330 --> 01:28:23,570
intended config<font color="#E5E5E5"> match with my applied</font>

1893
01:28:22,010 --> 01:28:25,370
config and<font color="#E5E5E5"> then can I see the other</font>

1894
01:28:23,570 --> 01:28:27,679
related<font color="#CCCCCC"> derived</font><font color="#E5E5E5"> state that's associated</font>

1895
01:28:25,370 --> 01:28:29,570
with<font color="#CCCCCC"> that</font><font color="#E5E5E5"> configuration so that's the</font>

1896
01:28:27,680 --> 01:28:30,920
<font color="#E5E5E5">reason that they're together</font><font color="#CCCCCC"> I agree</font>

1897
01:28:29,570 --> 01:28:33,679
that it does raise<font color="#CCCCCC"> some other challenges</font>

1898
01:28:30,920 --> 01:28:35,630
<font color="#CCCCCC">as far as how</font><font color="#E5E5E5"> you store it</font><font color="#CCCCCC"> maybe a bit</font>

1899
01:28:33,680 --> 01:28:37,070
<font color="#E5E5E5">more work</font><font color="#CCCCCC"> to actually coalesce all the</font>

1900
01:28:35,630 --> 01:28:38,540
state data<font color="#E5E5E5"> if you want to put it all</font><font color="#CCCCCC"> in</font>

1901
01:28:37,070 --> 01:28:40,009
a separate<font color="#CCCCCC"> database from your config</font>

1902
01:28:38,540 --> 01:28:42,260
data<font color="#CCCCCC"> that is true but</font><font color="#E5E5E5"> the trade-off is</font>

1903
01:28:40,010 --> 01:28:44,150
<font color="#CCCCCC">that you have a very</font><font color="#E5E5E5"> simple programmatic</font>

1904
01:28:42,260 --> 01:28:46,760
way to get to both config<font color="#CCCCCC"> and related</font>

1905
01:28:44,150 --> 01:28:49,519
state data<font color="#E5E5E5"> and lastly I think about the</font>

1906
01:28:46,760 --> 01:28:51,500
telemetry documentation to be honest<font color="#CCCCCC"> we</font>

1907
01:28:49,520 --> 01:28:53,630
haven't<font color="#E5E5E5"> spent a ton of time on the</font>

1908
01:28:51,500 --> 01:28:56,480
telemetry config model that Santiago

1909
01:28:53,630 --> 01:28:58,340
went through most<font color="#E5E5E5"> of our focus at least</font>

1910
01:28:56,480 --> 01:29:01,250
<font color="#E5E5E5">speaking from our organization has been</font>

1911
01:28:58,340 --> 01:29:04,010
on using streaming telemetry where it's

1912
01:29:01,250 --> 01:29:05,660
an inline process that collector

1913
01:29:04,010 --> 01:29:07,730
subscribes to<font color="#E5E5E5"> the device and it gets</font>

1914
01:29:05,660 --> 01:29:10,340
streams of<font color="#CCCCCC"> data and for</font><font color="#E5E5E5"> that you know</font>

1915
01:29:07,730 --> 01:29:12,320
at least with<font color="#CCCCCC"> GRP see</font><font color="#E5E5E5"> we've defined that</font>

1916
01:29:10,340 --> 01:29:13,760
<font color="#CCCCCC">gnm ID protocol and there's actually</font>

1917
01:29:12,320 --> 01:29:16,219
<font color="#E5E5E5">quite a bit</font><font color="#CCCCCC"> of documentation about how</font>

1918
01:29:13,760 --> 01:29:18,740
telemetry subscriptions work in a

1919
01:29:16,220 --> 01:29:20,360
streaming fashion using<font color="#E5E5E5"> GN</font><font color="#CCCCCC"> mi that said</font>

1920
01:29:18,740 --> 01:29:21,679
we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> give some more attention</font><font color="#CCCCCC"> to</font>

1921
01:29:20,360 --> 01:29:24,139
the<font color="#CCCCCC"> telemetry config model we just</font>

1922
01:29:21,680 --> 01:29:26,450
<font color="#E5E5E5">haven't gotten</font><font color="#CCCCCC"> around to it there's</font>

1923
01:29:24,140 --> 01:29:28,550
genomite draft<font color="#E5E5E5"> written by you that needs</font>

1924
01:29:26,450 --> 01:29:30,139
to be<font color="#E5E5E5"> updated</font><font color="#CCCCCC"> if this is well read upon</font>

1925
01:29:28,550 --> 01:29:33,320
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> expired it's gonna get updated</font>

1926
01:29:30,140 --> 01:29:35,780
<font color="#E5E5E5">sorry there yeah so there's there's a</font>

1927
01:29:33,320 --> 01:29:37,759
subscribe<font color="#E5E5E5"> RTC defining gianna my that is</font>

1928
01:29:35,780 --> 01:29:44,420
that takes care<font color="#E5E5E5"> of that</font>

1929
01:29:37,760 --> 01:29:46,130
<font color="#E5E5E5">Darleen model model like</font><font color="#CCCCCC"> describe</font><font color="#E5E5E5"> it</font>

1930
01:29:44,420 --> 01:29:48,020
<font color="#E5E5E5">like</font><font color="#CCCCCC"> okay we modified</font><font color="#E5E5E5"> to this</font>

1931
01:29:46,130 --> 01:29:53,000
<font color="#E5E5E5">reconfiguration saying I want to use</font>

1932
01:29:48,020 --> 01:29:57,200
certain a specific policy<font color="#E5E5E5"> to a policy I</font>

1933
01:29:53,000 --> 01:30:00,020
don't<font color="#CCCCCC"> see if the</font><font color="#E5E5E5"> model can specify</font><font color="#CCCCCC"> how I</font>

1934
01:29:57,200 --> 01:30:06,070
can change<font color="#CCCCCC"> the policy</font><font color="#E5E5E5"> walking like a</font>

1935
01:30:00,020 --> 01:30:11,540
<font color="#E5E5E5">modifier because this sequence sequence</font>

1936
01:30:06,070 --> 01:30:13,670
so that's probably<font color="#E5E5E5"> a conversation that</font>

1937
01:30:11,540 --> 01:30:16,970
can be<font color="#E5E5E5"> even higher over beer let me just</font>

1938
01:30:13,670 --> 01:30:19,010
say in general that<font color="#CCCCCC"> yawns yeah I think</font>

1939
01:30:16,970 --> 01:30:23,210
it's a fairly expressive language

1940
01:30:19,010 --> 01:30:26,420
there's a lot of attributes<font color="#CCCCCC"> constraints</font>

1941
01:30:23,210 --> 01:30:29,090
dependencies that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can define the</font>

1942
01:30:26,420 --> 01:30:31,520
flip side of that is that<font color="#E5E5E5"> while there</font>

1943
01:30:29,090 --> 01:30:34,490
are<font color="#E5E5E5"> two things all possible corner cases</font>

1944
01:30:31,520 --> 01:30:37,610
<font color="#E5E5E5">prolly you cannot specify</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> yang and if</font>

1945
01:30:34,490 --> 01:30:40,790
you try to specify<font color="#E5E5E5"> every single corner</font>

1946
01:30:37,610 --> 01:30:45,320
case<font color="#CCCCCC"> you're gonna end up with a yang</font>

1947
01:30:40,790 --> 01:30:47,300
model that is humongous humongous<font color="#E5E5E5"> so I</font>

1948
01:30:45,320 --> 01:30:49,820
don't know exactly<font color="#CCCCCC"> the Khazar</font><font color="#E5E5E5"> you're</font>

1949
01:30:47,300 --> 01:30:51,650
saying<font color="#E5E5E5"> but in most models there's</font>

1950
01:30:49,820 --> 01:30:53,360
actually a fairly<font color="#CCCCCC"> good amount of</font>

1951
01:30:51,650 --> 01:30:55,910
definition of<font color="#E5E5E5"> wets valve and</font><font color="#CCCCCC"> nuts</font>

1952
01:30:53,360 --> 01:30:59,630
validus<font color="#E5E5E5"> there should be very unlikely</font>

1953
01:30:55,910 --> 01:31:01,340
<font color="#E5E5E5">very unlike me that are that you define</font>

1954
01:30:59,630 --> 01:31:04,660
something<font color="#E5E5E5"> that is valid</font><font color="#CCCCCC"> to the model and</font>

1955
01:31:01,340 --> 01:31:04,660
<font color="#E5E5E5">the device will consider it</font>

1956
01:31:27,900 --> 01:31:32,650
to me looks like<font color="#E5E5E5"> an insertion in an</font>

1957
01:31:30,550 --> 01:31:36,790
ordered list<font color="#CCCCCC"> and that you can</font><font color="#E5E5E5"> certainly</font>

1958
01:31:32,650 --> 01:31:40,990
do it yet yes this is somewhat somewhat

1959
01:31:36,790 --> 01:31:42,900
related<font color="#E5E5E5"> I'm dying Carlos</font><font color="#CCCCCC"> some are</font>

1960
01:31:40,990 --> 01:31:45,309
related<font color="#E5E5E5"> to the previous question in in</font>

1961
01:31:42,900 --> 01:31:47,769
in net Kampf<font color="#CCCCCC"> you have the option to</font>

1962
01:31:45,310 --> 01:31:52,420
<font color="#CCCCCC">specify</font><font color="#E5E5E5"> that a section of</font><font color="#CCCCCC"> a tree is</font>

1963
01:31:47,770 --> 01:31:57,460
supposed to be replaced or or inserted

1964
01:31:52,420 --> 01:32:01,330
or merged created<font color="#CCCCCC"> I noticed that your</font>

1965
01:31:57,460 --> 01:32:04,570
tools were generating the XML<font color="#E5E5E5"> that then</font>

1966
01:32:01,330 --> 01:32:07,930
was sent<font color="#E5E5E5"> over</font><font color="#CCCCCC"> net conf</font><font color="#E5E5E5"> and is there is</font>

1967
01:32:04,570 --> 01:32:09,519
there<font color="#CCCCCC"> a flag</font><font color="#E5E5E5"> somewhere in the yang model</font>

1968
01:32:07,930 --> 01:32:11,080
where you<font color="#CCCCCC"> can say it's no it</font><font color="#E5E5E5"> doesn't</font>

1969
01:32:09,520 --> 01:32:12,400
have<font color="#E5E5E5"> to do anything with the</font><font color="#CCCCCC"> yam model</font>

1970
01:32:11,080 --> 01:32:13,720
the young model<font color="#E5E5E5"> is just defining that</font>

1971
01:32:12,400 --> 01:32:16,089
the structure<font color="#E5E5E5"> of the data writing</font>

1972
01:32:13,720 --> 01:32:18,820
constraints of the data<font color="#E5E5E5"> in in this case</font>

1973
01:32:16,090 --> 01:32:21,070
I was<font color="#CCCCCC"> using an SDK that was abstracting</font>

1974
01:32:18,820 --> 01:32:23,019
<font color="#CCCCCC">Netcom for me and it was extracting it</font>

1975
01:32:21,070 --> 01:32:25,990
in terms of a create read update and

1976
01:32:23,020 --> 01:32:27,640
delete<font color="#E5E5E5"> operations right and in the</font>

1977
01:32:25,990 --> 01:32:29,349
particular<font color="#E5E5E5"> is the K that I'm using I'm</font>

1978
01:32:27,640 --> 01:32:33,460
saying hey I want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> create this object</font>

1979
01:32:29,350 --> 01:32:36,910
and the way they<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> K translates a</font>

1980
01:32:33,460 --> 01:32:38,980
create operation is into edit<font color="#CCCCCC"> come fade</font>

1981
01:32:36,910 --> 01:32:42,340
in that come with the merge operation<font color="#CCCCCC"> in</font>

1982
01:32:38,980 --> 01:32:44,379
the SDK in<font color="#CCCCCC"> ydk</font><font color="#E5E5E5"> if you want to have</font>

1983
01:32:42,340 --> 01:32:46,030
<font color="#E5E5E5">direct access to net comp and be able</font><font color="#CCCCCC"> to</font>

1984
01:32:44,380 --> 01:32:47,980
specify<font color="#E5E5E5"> a very particular what</font><font color="#CCCCCC"> kind of</font>

1985
01:32:46,030 --> 01:32:50,650
operation of net count where you want to

1986
01:32:47,980 --> 01:32:52,719
do<font color="#E5E5E5"> a replace the SDK also allows you to</font>

1987
01:32:50,650 --> 01:32:57,219
<font color="#E5E5E5">do that nice thank you yes</font>

1988
01:32:52,720 --> 01:32:58,810
any other question<font color="#E5E5E5"> all right guys thanks</font>

1989
01:32:57,220 --> 01:33:02,009
for<font color="#E5E5E5"> coming</font>

1990
01:32:58,810 --> 01:33:02,009
[Applause]

